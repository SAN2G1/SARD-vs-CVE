command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	999858	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitLir.c								
ANR	999859	DeclStmt									
ANR	999860	Decl							sljit_si	sljit_si	compiler_initialized
ANR	999861	DeclStmt									
ANR	999862	Decl							void	void ( void )	init_compiler
ANR	999863	Function	sljit_create_compiler	328:25:8958:11593							
ANR	999864	FunctionDef	sljit_create_compiler (void * allocator_data)		999863	0					
ANR	999865	CompoundStatement		329:0:9025:11593	999863	0					
ANR	999866	IdentifierDeclStatement	"struct sljit_compiler * compiler = ( struct sljit_compiler * ) SLJIT_MALLOC ( sizeof ( struct sljit_compiler ) , allocator_data ) ;"	330:1:9028:9145	999863	0	True				
ANR	999867	IdentifierDecl	"* compiler = ( struct sljit_compiler * ) SLJIT_MALLOC ( sizeof ( struct sljit_compiler ) , allocator_data )"		999863	0					
ANR	999868	IdentifierDeclType	struct sljit_compiler *		999863	0					
ANR	999869	Identifier	compiler		999863	1					
ANR	999870	AssignmentExpression	"* compiler = ( struct sljit_compiler * ) SLJIT_MALLOC ( sizeof ( struct sljit_compiler ) , allocator_data )"		999863	2		=			
ANR	999871	Identifier	compiler		999863	0					
ANR	999872	CastExpression	"( struct sljit_compiler * ) SLJIT_MALLOC ( sizeof ( struct sljit_compiler ) , allocator_data )"		999863	1					
ANR	999873	CastTarget	struct sljit_compiler *		999863	0					
ANR	999874	CallExpression	"SLJIT_MALLOC ( sizeof ( struct sljit_compiler ) , allocator_data )"		999863	1					
ANR	999875	Callee	SLJIT_MALLOC		999863	0					
ANR	999876	Identifier	SLJIT_MALLOC		999863	0					
ANR	999877	ArgumentList	sizeof ( struct sljit_compiler )		999863	1					
ANR	999878	Argument	sizeof ( struct sljit_compiler )		999863	0					
ANR	999879	SizeofExpression	sizeof ( struct sljit_compiler )		999863	0					
ANR	999880	Sizeof	sizeof		999863	0					
ANR	999881	SizeofOperand	struct sljit_compiler		999863	1					
ANR	999882	Argument	allocator_data		999863	1					
ANR	999883	Identifier	allocator_data		999863	0					
ANR	999884	IfStatement	if ( ! compiler )		999863	1					
ANR	999885	Condition	! compiler	331:5:9152:9160	999863	0	True				
ANR	999886	UnaryOperationExpression	! compiler		999863	0					
ANR	999887	UnaryOperator	!		999863	0					
ANR	999888	Identifier	compiler		999863	1					
ANR	999889	ReturnStatement	return NULL ;	332:2:9165:9176	999863	1	True				
ANR	999890	Identifier	NULL		999863	0					
ANR	999891	ExpressionStatement	"SLJIT_ZEROMEM ( compiler , sizeof ( struct sljit_compiler ) )"	333:1:9179:9233	999863	2	True				
ANR	999892	CallExpression	"SLJIT_ZEROMEM ( compiler , sizeof ( struct sljit_compiler ) )"		999863	0					
ANR	999893	Callee	SLJIT_ZEROMEM		999863	0					
ANR	999894	Identifier	SLJIT_ZEROMEM		999863	0					
ANR	999895	ArgumentList	compiler		999863	1					
ANR	999896	Argument	compiler		999863	0					
ANR	999897	Identifier	compiler		999863	0					
ANR	999898	Argument	sizeof ( struct sljit_compiler )		999863	1					
ANR	999899	SizeofExpression	sizeof ( struct sljit_compiler )		999863	0					
ANR	999900	Sizeof	sizeof		999863	0					
ANR	999901	SizeofOperand	struct sljit_compiler		999863	1					
ANR	999902	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( sizeof ( sljit_sb ) == 1 && sizeof ( sljit_ub ) == 1 && sizeof ( sljit_sh ) == 2 && sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 ) , invalid_integer_types )"	335:1:9237:9638	999863	3	True				
ANR	999903	CallExpression	"SLJIT_COMPILE_ASSERT ( sizeof ( sljit_sb ) == 1 && sizeof ( sljit_ub ) == 1 && sizeof ( sljit_sh ) == 2 && sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 ) , invalid_integer_types )"		999863	0					
ANR	999904	Callee	SLJIT_COMPILE_ASSERT		999863	0					
ANR	999905	Identifier	SLJIT_COMPILE_ASSERT		999863	0					
ANR	999906	ArgumentList	sizeof ( sljit_sb ) == 1 && sizeof ( sljit_ub ) == 1 && sizeof ( sljit_sh ) == 2 && sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1					
ANR	999907	Argument	sizeof ( sljit_sb ) == 1 && sizeof ( sljit_ub ) == 1 && sizeof ( sljit_sh ) == 2 && sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	0					
ANR	999908	AndExpression	sizeof ( sljit_sb ) == 1 && sizeof ( sljit_ub ) == 1 && sizeof ( sljit_sh ) == 2 && sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	0		&&			
ANR	999909	EqualityExpression	sizeof ( sljit_sb ) == 1		999863	0		==			
ANR	999910	SizeofExpression	sizeof ( sljit_sb )		999863	0					
ANR	999911	Sizeof	sizeof		999863	0					
ANR	999912	SizeofOperand	sljit_sb		999863	1					
ANR	999913	PrimaryExpression	1		999863	1					
ANR	999914	AndExpression	sizeof ( sljit_ub ) == 1 && sizeof ( sljit_sh ) == 2 && sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999915	EqualityExpression	sizeof ( sljit_ub ) == 1		999863	0		==			
ANR	999916	SizeofExpression	sizeof ( sljit_ub )		999863	0					
ANR	999917	Sizeof	sizeof		999863	0					
ANR	999918	SizeofOperand	sljit_ub		999863	1					
ANR	999919	PrimaryExpression	1		999863	1					
ANR	999920	AndExpression	sizeof ( sljit_sh ) == 2 && sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999921	EqualityExpression	sizeof ( sljit_sh ) == 2		999863	0		==			
ANR	999922	SizeofExpression	sizeof ( sljit_sh )		999863	0					
ANR	999923	Sizeof	sizeof		999863	0					
ANR	999924	SizeofOperand	sljit_sh		999863	1					
ANR	999925	PrimaryExpression	2		999863	1					
ANR	999926	AndExpression	sizeof ( sljit_uh ) == 2 && sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999927	EqualityExpression	sizeof ( sljit_uh ) == 2		999863	0		==			
ANR	999928	SizeofExpression	sizeof ( sljit_uh )		999863	0					
ANR	999929	Sizeof	sizeof		999863	0					
ANR	999930	SizeofOperand	sljit_uh		999863	1					
ANR	999931	PrimaryExpression	2		999863	1					
ANR	999932	AndExpression	sizeof ( sljit_si ) == 4 && sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999933	EqualityExpression	sizeof ( sljit_si ) == 4		999863	0		==			
ANR	999934	SizeofExpression	sizeof ( sljit_si )		999863	0					
ANR	999935	Sizeof	sizeof		999863	0					
ANR	999936	SizeofOperand	sljit_si		999863	1					
ANR	999937	PrimaryExpression	4		999863	1					
ANR	999938	AndExpression	sizeof ( sljit_ui ) == 4 && ( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999939	EqualityExpression	sizeof ( sljit_ui ) == 4		999863	0		==			
ANR	999940	SizeofExpression	sizeof ( sljit_ui )		999863	0					
ANR	999941	Sizeof	sizeof		999863	0					
ANR	999942	SizeofOperand	sljit_ui		999863	1					
ANR	999943	PrimaryExpression	4		999863	1					
ANR	999944	AndExpression	( sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8 ) && sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999945	OrExpression	sizeof ( sljit_p ) == 4 || sizeof ( sljit_p ) == 8		999863	0		||			
ANR	999946	EqualityExpression	sizeof ( sljit_p ) == 4		999863	0		==			
ANR	999947	SizeofExpression	sizeof ( sljit_p )		999863	0					
ANR	999948	Sizeof	sizeof		999863	0					
ANR	999949	SizeofOperand	sljit_p		999863	1					
ANR	999950	PrimaryExpression	4		999863	1					
ANR	999951	EqualityExpression	sizeof ( sljit_p ) == 8		999863	1		==			
ANR	999952	SizeofExpression	sizeof ( sljit_p )		999863	0					
ANR	999953	Sizeof	sizeof		999863	0					
ANR	999954	SizeofOperand	sljit_p		999863	1					
ANR	999955	PrimaryExpression	8		999863	1					
ANR	999956	AndExpression	sizeof ( sljit_p ) <= sizeof ( sljit_sw ) && ( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999957	RelationalExpression	sizeof ( sljit_p ) <= sizeof ( sljit_sw )		999863	0		<=			
ANR	999958	SizeofExpression	sizeof ( sljit_p )		999863	0					
ANR	999959	Sizeof	sizeof		999863	0					
ANR	999960	SizeofOperand	sljit_p		999863	1					
ANR	999961	SizeofExpression	sizeof ( sljit_sw )		999863	1					
ANR	999962	Sizeof	sizeof		999863	0					
ANR	999963	SizeofOperand	sljit_sw		999863	1					
ANR	999964	AndExpression	( sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8 ) && ( sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8 )		999863	1		&&			
ANR	999965	OrExpression	sizeof ( sljit_sw ) == 4 || sizeof ( sljit_sw ) == 8		999863	0		||			
ANR	999966	EqualityExpression	sizeof ( sljit_sw ) == 4		999863	0		==			
ANR	999967	SizeofExpression	sizeof ( sljit_sw )		999863	0					
ANR	999968	Sizeof	sizeof		999863	0					
ANR	999969	SizeofOperand	sljit_sw		999863	1					
ANR	999970	PrimaryExpression	4		999863	1					
ANR	999971	EqualityExpression	sizeof ( sljit_sw ) == 8		999863	1		==			
ANR	999972	SizeofExpression	sizeof ( sljit_sw )		999863	0					
ANR	999973	Sizeof	sizeof		999863	0					
ANR	999974	SizeofOperand	sljit_sw		999863	1					
ANR	999975	PrimaryExpression	8		999863	1					
ANR	999976	OrExpression	sizeof ( sljit_uw ) == 4 || sizeof ( sljit_uw ) == 8		999863	1		||			
ANR	999977	EqualityExpression	sizeof ( sljit_uw ) == 4		999863	0		==			
ANR	999978	SizeofExpression	sizeof ( sljit_uw )		999863	0					
ANR	999979	Sizeof	sizeof		999863	0					
ANR	999980	SizeofOperand	sljit_uw		999863	1					
ANR	999981	PrimaryExpression	4		999863	1					
ANR	999982	EqualityExpression	sizeof ( sljit_uw ) == 8		999863	1		==			
ANR	999983	SizeofExpression	sizeof ( sljit_uw )		999863	0					
ANR	999984	Sizeof	sizeof		999863	0					
ANR	999985	SizeofOperand	sljit_uw		999863	1					
ANR	999986	PrimaryExpression	8		999863	1					
ANR	999987	Argument	invalid_integer_types		999863	1					
ANR	999988	Identifier	invalid_integer_types		999863	0					
ANR	999989	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( SLJIT_INT_OP == SLJIT_SINGLE_OP , int_op_and_single_op_must_be_the_same )"	344:1:9641:9735	999863	4	True				
ANR	999990	CallExpression	"SLJIT_COMPILE_ASSERT ( SLJIT_INT_OP == SLJIT_SINGLE_OP , int_op_and_single_op_must_be_the_same )"		999863	0					
ANR	999991	Callee	SLJIT_COMPILE_ASSERT		999863	0					
ANR	999992	Identifier	SLJIT_COMPILE_ASSERT		999863	0					
ANR	999993	ArgumentList	SLJIT_INT_OP == SLJIT_SINGLE_OP		999863	1					
ANR	999994	Argument	SLJIT_INT_OP == SLJIT_SINGLE_OP		999863	0					
ANR	999995	EqualityExpression	SLJIT_INT_OP == SLJIT_SINGLE_OP		999863	0		==			
ANR	999996	Identifier	SLJIT_INT_OP		999863	0					
ANR	999997	Identifier	SLJIT_SINGLE_OP		999863	1					
ANR	999998	Argument	int_op_and_single_op_must_be_the_same		999863	1					
ANR	999999	Identifier	int_op_and_single_op_must_be_the_same		999863	0					
ANR	1000000	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( SLJIT_REWRITABLE_JUMP != SLJIT_SINGLE_OP , rewritable_jump_and_single_op_must_not_be_the_same )"	346:1:9738:9854	999863	5	True				
ANR	1000001	CallExpression	"SLJIT_COMPILE_ASSERT ( SLJIT_REWRITABLE_JUMP != SLJIT_SINGLE_OP , rewritable_jump_and_single_op_must_not_be_the_same )"		999863	0					
ANR	1000002	Callee	SLJIT_COMPILE_ASSERT		999863	0					
ANR	1000003	Identifier	SLJIT_COMPILE_ASSERT		999863	0					
ANR	1000004	ArgumentList	SLJIT_REWRITABLE_JUMP != SLJIT_SINGLE_OP		999863	1					
ANR	1000005	Argument	SLJIT_REWRITABLE_JUMP != SLJIT_SINGLE_OP		999863	0					
ANR	1000006	EqualityExpression	SLJIT_REWRITABLE_JUMP != SLJIT_SINGLE_OP		999863	0		!=			
ANR	1000007	Identifier	SLJIT_REWRITABLE_JUMP		999863	0					
ANR	1000008	Identifier	SLJIT_SINGLE_OP		999863	1					
ANR	1000009	Argument	rewritable_jump_and_single_op_must_not_be_the_same		999863	1					
ANR	1000010	Identifier	rewritable_jump_and_single_op_must_not_be_the_same		999863	0					
ANR	1000011	ExpressionStatement	compiler -> error = SLJIT_SUCCESS	350:1:9904:9935	999863	6	True				
ANR	1000012	AssignmentExpression	compiler -> error = SLJIT_SUCCESS		999863	0		=			
ANR	1000013	PtrMemberAccess	compiler -> error		999863	0					
ANR	1000014	Identifier	compiler		999863	0					
ANR	1000015	Identifier	error		999863	1					
ANR	1000016	Identifier	SLJIT_SUCCESS		999863	1					
ANR	1000017	ExpressionStatement	compiler -> allocator_data = allocator_data	352:1:9939:9980	999863	7	True				
ANR	1000018	AssignmentExpression	compiler -> allocator_data = allocator_data		999863	0		=			
ANR	1000019	PtrMemberAccess	compiler -> allocator_data		999863	0					
ANR	1000020	Identifier	compiler		999863	0					
ANR	1000021	Identifier	allocator_data		999863	1					
ANR	1000022	Identifier	allocator_data		999863	1					
ANR	1000023	ExpressionStatement	"compiler -> buf = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( BUF_SIZE , allocator_data )"	353:1:9983:10068	999863	8	True				
ANR	1000024	AssignmentExpression	"compiler -> buf = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( BUF_SIZE , allocator_data )"		999863	0		=			
ANR	1000025	PtrMemberAccess	compiler -> buf		999863	0					
ANR	1000026	Identifier	compiler		999863	0					
ANR	1000027	Identifier	buf		999863	1					
ANR	1000028	CastExpression	"( struct sljit_memory_fragment * ) SLJIT_MALLOC ( BUF_SIZE , allocator_data )"		999863	1					
ANR	1000029	CastTarget	struct sljit_memory_fragment *		999863	0					
ANR	1000030	CallExpression	"SLJIT_MALLOC ( BUF_SIZE , allocator_data )"		999863	1					
ANR	1000031	Callee	SLJIT_MALLOC		999863	0					
ANR	1000032	Identifier	SLJIT_MALLOC		999863	0					
ANR	1000033	ArgumentList	BUF_SIZE		999863	1					
ANR	1000034	Argument	BUF_SIZE		999863	0					
ANR	1000035	Identifier	BUF_SIZE		999863	0					
ANR	1000036	Argument	allocator_data		999863	1					
ANR	1000037	Identifier	allocator_data		999863	0					
ANR	1000038	ExpressionStatement	"compiler -> abuf = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( ABUF_SIZE , allocator_data )"	354:1:10071:10158	999863	9	True				
ANR	1000039	AssignmentExpression	"compiler -> abuf = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( ABUF_SIZE , allocator_data )"		999863	0		=			
ANR	1000040	PtrMemberAccess	compiler -> abuf		999863	0					
ANR	1000041	Identifier	compiler		999863	0					
ANR	1000042	Identifier	abuf		999863	1					
ANR	1000043	CastExpression	"( struct sljit_memory_fragment * ) SLJIT_MALLOC ( ABUF_SIZE , allocator_data )"		999863	1					
ANR	1000044	CastTarget	struct sljit_memory_fragment *		999863	0					
ANR	1000045	CallExpression	"SLJIT_MALLOC ( ABUF_SIZE , allocator_data )"		999863	1					
ANR	1000046	Callee	SLJIT_MALLOC		999863	0					
ANR	1000047	Identifier	SLJIT_MALLOC		999863	0					
ANR	1000048	ArgumentList	ABUF_SIZE		999863	1					
ANR	1000049	Argument	ABUF_SIZE		999863	0					
ANR	1000050	Identifier	ABUF_SIZE		999863	0					
ANR	1000051	Argument	allocator_data		999863	1					
ANR	1000052	Identifier	allocator_data		999863	0					
ANR	1000053	IfStatement	if ( ! compiler -> buf || ! compiler -> abuf )		999863	10					
ANR	1000054	Condition	! compiler -> buf || ! compiler -> abuf	356:5:10166:10198	999863	0	True				
ANR	1000055	OrExpression	! compiler -> buf || ! compiler -> abuf		999863	0		||			
ANR	1000056	UnaryOperationExpression	! compiler -> buf		999863	0					
ANR	1000057	UnaryOperator	!		999863	0					
ANR	1000058	PtrMemberAccess	compiler -> buf		999863	1					
ANR	1000059	Identifier	compiler		999863	0					
ANR	1000060	Identifier	buf		999863	1					
ANR	1000061	UnaryOperationExpression	! compiler -> abuf		999863	1					
ANR	1000062	UnaryOperator	!		999863	0					
ANR	1000063	PtrMemberAccess	compiler -> abuf		999863	1					
ANR	1000064	Identifier	compiler		999863	0					
ANR	1000065	Identifier	abuf		999863	1					
ANR	1000066	CompoundStatement		28:40:1175:1175	999863	1					
ANR	1000067	IfStatement	if ( compiler -> buf )		999863	0					
ANR	1000068	Condition	compiler -> buf	357:6:10209:10221	999863	0	True				
ANR	1000069	PtrMemberAccess	compiler -> buf		999863	0					
ANR	1000070	Identifier	compiler		999863	0					
ANR	1000071	Identifier	buf		999863	1					
ANR	1000072	ExpressionStatement	"SLJIT_FREE ( compiler -> buf , allocator_data )"	358:3:10227:10268	999863	1	True				
ANR	1000073	CallExpression	"SLJIT_FREE ( compiler -> buf , allocator_data )"		999863	0					
ANR	1000074	Callee	SLJIT_FREE		999863	0					
ANR	1000075	Identifier	SLJIT_FREE		999863	0					
ANR	1000076	ArgumentList	compiler -> buf		999863	1					
ANR	1000077	Argument	compiler -> buf		999863	0					
ANR	1000078	PtrMemberAccess	compiler -> buf		999863	0					
ANR	1000079	Identifier	compiler		999863	0					
ANR	1000080	Identifier	buf		999863	1					
ANR	1000081	Argument	allocator_data		999863	1					
ANR	1000082	Identifier	allocator_data		999863	0					
ANR	1000083	IfStatement	if ( compiler -> abuf )		999863	1					
ANR	1000084	Condition	compiler -> abuf	359:6:10276:10289	999863	0	True				
ANR	1000085	PtrMemberAccess	compiler -> abuf		999863	0					
ANR	1000086	Identifier	compiler		999863	0					
ANR	1000087	Identifier	abuf		999863	1					
ANR	1000088	ExpressionStatement	"SLJIT_FREE ( compiler -> abuf , allocator_data )"	360:3:10295:10337	999863	1	True				
ANR	1000089	CallExpression	"SLJIT_FREE ( compiler -> abuf , allocator_data )"		999863	0					
ANR	1000090	Callee	SLJIT_FREE		999863	0					
ANR	1000091	Identifier	SLJIT_FREE		999863	0					
ANR	1000092	ArgumentList	compiler -> abuf		999863	1					
ANR	1000093	Argument	compiler -> abuf		999863	0					
ANR	1000094	PtrMemberAccess	compiler -> abuf		999863	0					
ANR	1000095	Identifier	compiler		999863	0					
ANR	1000096	Identifier	abuf		999863	1					
ANR	1000097	Argument	allocator_data		999863	1					
ANR	1000098	Identifier	allocator_data		999863	0					
ANR	1000099	ExpressionStatement	"SLJIT_FREE ( compiler , allocator_data )"	361:2:10341:10377	999863	2	True				
ANR	1000100	CallExpression	"SLJIT_FREE ( compiler , allocator_data )"		999863	0					
ANR	1000101	Callee	SLJIT_FREE		999863	0					
ANR	1000102	Identifier	SLJIT_FREE		999863	0					
ANR	1000103	ArgumentList	compiler		999863	1					
ANR	1000104	Argument	compiler		999863	0					
ANR	1000105	Identifier	compiler		999863	0					
ANR	1000106	Argument	allocator_data		999863	1					
ANR	1000107	Identifier	allocator_data		999863	0					
ANR	1000108	ReturnStatement	return NULL ;	362:2:10381:10392	999863	3	True				
ANR	1000109	Identifier	NULL		999863	0					
ANR	1000110	ExpressionStatement	compiler -> buf -> next = NULL	365:1:10399:10425	999863	11	True				
ANR	1000111	AssignmentExpression	compiler -> buf -> next = NULL		999863	0		=			
ANR	1000112	PtrMemberAccess	compiler -> buf -> next		999863	0					
ANR	1000113	PtrMemberAccess	compiler -> buf		999863	0					
ANR	1000114	Identifier	compiler		999863	0					
ANR	1000115	Identifier	buf		999863	1					
ANR	1000116	Identifier	next		999863	1					
ANR	1000117	Identifier	NULL		999863	1					
ANR	1000118	ExpressionStatement	compiler -> buf -> used_size = 0	366:1:10428:10456	999863	12	True				
ANR	1000119	AssignmentExpression	compiler -> buf -> used_size = 0		999863	0		=			
ANR	1000120	PtrMemberAccess	compiler -> buf -> used_size		999863	0					
ANR	1000121	PtrMemberAccess	compiler -> buf		999863	0					
ANR	1000122	Identifier	compiler		999863	0					
ANR	1000123	Identifier	buf		999863	1					
ANR	1000124	Identifier	used_size		999863	1					
ANR	1000125	PrimaryExpression	0		999863	1					
ANR	1000126	ExpressionStatement	compiler -> abuf -> next = NULL	367:1:10459:10486	999863	13	True				
ANR	1000127	AssignmentExpression	compiler -> abuf -> next = NULL		999863	0		=			
ANR	1000128	PtrMemberAccess	compiler -> abuf -> next		999863	0					
ANR	1000129	PtrMemberAccess	compiler -> abuf		999863	0					
ANR	1000130	Identifier	compiler		999863	0					
ANR	1000131	Identifier	abuf		999863	1					
ANR	1000132	Identifier	next		999863	1					
ANR	1000133	Identifier	NULL		999863	1					
ANR	1000134	ExpressionStatement	compiler -> abuf -> used_size = 0	368:1:10489:10518	999863	14	True				
ANR	1000135	AssignmentExpression	compiler -> abuf -> used_size = 0		999863	0		=			
ANR	1000136	PtrMemberAccess	compiler -> abuf -> used_size		999863	0					
ANR	1000137	PtrMemberAccess	compiler -> abuf		999863	0					
ANR	1000138	Identifier	compiler		999863	0					
ANR	1000139	Identifier	abuf		999863	1					
ANR	1000140	Identifier	used_size		999863	1					
ANR	1000141	PrimaryExpression	0		999863	1					
ANR	1000142	ExpressionStatement	compiler -> scratches = - 1	370:1:10522:10546	999863	15	True				
ANR	1000143	AssignmentExpression	compiler -> scratches = - 1		999863	0		=			
ANR	1000144	PtrMemberAccess	compiler -> scratches		999863	0					
ANR	1000145	Identifier	compiler		999863	0					
ANR	1000146	Identifier	scratches		999863	1					
ANR	1000147	UnaryOperationExpression	- 1		999863	1					
ANR	1000148	UnaryOperator	-		999863	0					
ANR	1000149	PrimaryExpression	1		999863	1					
ANR	1000150	ExpressionStatement	compiler -> saveds = - 1	371:1:10549:10570	999863	16	True				
ANR	1000151	AssignmentExpression	compiler -> saveds = - 1		999863	0		=			
ANR	1000152	PtrMemberAccess	compiler -> saveds		999863	0					
ANR	1000153	Identifier	compiler		999863	0					
ANR	1000154	Identifier	saveds		999863	1					
ANR	1000155	UnaryOperationExpression	- 1		999863	1					
ANR	1000156	UnaryOperator	-		999863	0					
ANR	1000157	PrimaryExpression	1		999863	1					
ANR	1000158	ExpressionStatement	compiler -> fscratches = - 1	372:1:10573:10598	999863	17	True				
ANR	1000159	AssignmentExpression	compiler -> fscratches = - 1		999863	0		=			
ANR	1000160	PtrMemberAccess	compiler -> fscratches		999863	0					
ANR	1000161	Identifier	compiler		999863	0					
ANR	1000162	Identifier	fscratches		999863	1					
ANR	1000163	UnaryOperationExpression	- 1		999863	1					
ANR	1000164	UnaryOperator	-		999863	0					
ANR	1000165	PrimaryExpression	1		999863	1					
ANR	1000166	ExpressionStatement	compiler -> fsaveds = - 1	373:1:10601:10623	999863	18	True				
ANR	1000167	AssignmentExpression	compiler -> fsaveds = - 1		999863	0		=			
ANR	1000168	PtrMemberAccess	compiler -> fsaveds		999863	0					
ANR	1000169	Identifier	compiler		999863	0					
ANR	1000170	Identifier	fsaveds		999863	1					
ANR	1000171	UnaryOperationExpression	- 1		999863	1					
ANR	1000172	UnaryOperator	-		999863	0					
ANR	1000173	PrimaryExpression	1		999863	1					
ANR	1000174	ExpressionStatement	compiler -> local_size = - 1	374:1:10626:10651	999863	19	True				
ANR	1000175	AssignmentExpression	compiler -> local_size = - 1		999863	0		=			
ANR	1000176	PtrMemberAccess	compiler -> local_size		999863	0					
ANR	1000177	Identifier	compiler		999863	0					
ANR	1000178	Identifier	local_size		999863	1					
ANR	1000179	UnaryOperationExpression	- 1		999863	1					
ANR	1000180	UnaryOperator	-		999863	0					
ANR	1000181	PrimaryExpression	1		999863	1					
ANR	1000182	ExpressionStatement	compiler -> args = - 1	377:1:10712:10731	999863	20	True				
ANR	1000183	AssignmentExpression	compiler -> args = - 1		999863	0		=			
ANR	1000184	PtrMemberAccess	compiler -> args		999863	0					
ANR	1000185	Identifier	compiler		999863	0					
ANR	1000186	Identifier	args		999863	1					
ANR	1000187	UnaryOperationExpression	- 1		999863	1					
ANR	1000188	UnaryOperator	-		999863	0					
ANR	1000189	PrimaryExpression	1		999863	1					
ANR	1000190	ExpressionStatement	"compiler -> cpool = ( sljit_uw * ) SLJIT_MALLOC ( CPOOL_SIZE * sizeof ( sljit_uw ) + CPOOL_SIZE * sizeof ( sljit_ub ) , allocator_data )"	381:1:10799:10921	999863	21	True				
ANR	1000191	AssignmentExpression	"compiler -> cpool = ( sljit_uw * ) SLJIT_MALLOC ( CPOOL_SIZE * sizeof ( sljit_uw ) + CPOOL_SIZE * sizeof ( sljit_ub ) , allocator_data )"		999863	0		=			
ANR	1000192	PtrMemberAccess	compiler -> cpool		999863	0					
ANR	1000193	Identifier	compiler		999863	0					
ANR	1000194	Identifier	cpool		999863	1					
ANR	1000195	CastExpression	"( sljit_uw * ) SLJIT_MALLOC ( CPOOL_SIZE * sizeof ( sljit_uw ) + CPOOL_SIZE * sizeof ( sljit_ub ) , allocator_data )"		999863	1					
ANR	1000196	CastTarget	sljit_uw *		999863	0					
ANR	1000197	CallExpression	"SLJIT_MALLOC ( CPOOL_SIZE * sizeof ( sljit_uw ) + CPOOL_SIZE * sizeof ( sljit_ub ) , allocator_data )"		999863	1					
ANR	1000198	Callee	SLJIT_MALLOC		999863	0					
ANR	1000199	Identifier	SLJIT_MALLOC		999863	0					
ANR	1000200	ArgumentList	CPOOL_SIZE * sizeof ( sljit_uw ) + CPOOL_SIZE * sizeof ( sljit_ub )		999863	1					
ANR	1000201	Argument	CPOOL_SIZE * sizeof ( sljit_uw ) + CPOOL_SIZE * sizeof ( sljit_ub )		999863	0					
ANR	1000202	AdditiveExpression	CPOOL_SIZE * sizeof ( sljit_uw ) + CPOOL_SIZE * sizeof ( sljit_ub )		999863	0		+			
ANR	1000203	MultiplicativeExpression	CPOOL_SIZE * sizeof ( sljit_uw )		999863	0		*			
ANR	1000204	Identifier	CPOOL_SIZE		999863	0					
ANR	1000205	SizeofExpression	sizeof ( sljit_uw )		999863	1					
ANR	1000206	Sizeof	sizeof		999863	0					
ANR	1000207	SizeofOperand	sljit_uw		999863	1					
ANR	1000208	MultiplicativeExpression	CPOOL_SIZE * sizeof ( sljit_ub )		999863	1		*			
ANR	1000209	Identifier	CPOOL_SIZE		999863	0					
ANR	1000210	SizeofExpression	sizeof ( sljit_ub )		999863	1					
ANR	1000211	Sizeof	sizeof		999863	0					
ANR	1000212	SizeofOperand	sljit_ub		999863	1					
ANR	1000213	Argument	allocator_data		999863	1					
ANR	1000214	Identifier	allocator_data		999863	0					
ANR	1000215	IfStatement	if ( ! compiler -> cpool )		999863	22					
ANR	1000216	Condition	! compiler -> cpool	383:5:10928:10943	999863	0	True				
ANR	1000217	UnaryOperationExpression	! compiler -> cpool		999863	0					
ANR	1000218	UnaryOperator	!		999863	0					
ANR	1000219	PtrMemberAccess	compiler -> cpool		999863	1					
ANR	1000220	Identifier	compiler		999863	0					
ANR	1000221	Identifier	cpool		999863	1					
ANR	1000222	CompoundStatement		55:23:1920:1920	999863	1					
ANR	1000223	ExpressionStatement	"SLJIT_FREE ( compiler -> buf , allocator_data )"	384:2:10950:10991	999863	0	True				
ANR	1000224	CallExpression	"SLJIT_FREE ( compiler -> buf , allocator_data )"		999863	0					
ANR	1000225	Callee	SLJIT_FREE		999863	0					
ANR	1000226	Identifier	SLJIT_FREE		999863	0					
ANR	1000227	ArgumentList	compiler -> buf		999863	1					
ANR	1000228	Argument	compiler -> buf		999863	0					
ANR	1000229	PtrMemberAccess	compiler -> buf		999863	0					
ANR	1000230	Identifier	compiler		999863	0					
ANR	1000231	Identifier	buf		999863	1					
ANR	1000232	Argument	allocator_data		999863	1					
ANR	1000233	Identifier	allocator_data		999863	0					
ANR	1000234	ExpressionStatement	"SLJIT_FREE ( compiler -> abuf , allocator_data )"	385:2:10995:11037	999863	1	True				
ANR	1000235	CallExpression	"SLJIT_FREE ( compiler -> abuf , allocator_data )"		999863	0					
ANR	1000236	Callee	SLJIT_FREE		999863	0					
ANR	1000237	Identifier	SLJIT_FREE		999863	0					
ANR	1000238	ArgumentList	compiler -> abuf		999863	1					
ANR	1000239	Argument	compiler -> abuf		999863	0					
ANR	1000240	PtrMemberAccess	compiler -> abuf		999863	0					
ANR	1000241	Identifier	compiler		999863	0					
ANR	1000242	Identifier	abuf		999863	1					
ANR	1000243	Argument	allocator_data		999863	1					
ANR	1000244	Identifier	allocator_data		999863	0					
ANR	1000245	ExpressionStatement	"SLJIT_FREE ( compiler , allocator_data )"	386:2:11041:11077	999863	2	True				
ANR	1000246	CallExpression	"SLJIT_FREE ( compiler , allocator_data )"		999863	0					
ANR	1000247	Callee	SLJIT_FREE		999863	0					
ANR	1000248	Identifier	SLJIT_FREE		999863	0					
ANR	1000249	ArgumentList	compiler		999863	1					
ANR	1000250	Argument	compiler		999863	0					
ANR	1000251	Identifier	compiler		999863	0					
ANR	1000252	Argument	allocator_data		999863	1					
ANR	1000253	Identifier	allocator_data		999863	0					
ANR	1000254	ReturnStatement	return NULL ;	387:2:11081:11092	999863	3	True				
ANR	1000255	Identifier	NULL		999863	0					
ANR	1000256	ExpressionStatement	compiler -> cpool_unique = ( sljit_ub * ) ( compiler -> cpool + CPOOL_SIZE )	389:1:11098:11164	999863	23	True				
ANR	1000257	AssignmentExpression	compiler -> cpool_unique = ( sljit_ub * ) ( compiler -> cpool + CPOOL_SIZE )		999863	0		=			
ANR	1000258	PtrMemberAccess	compiler -> cpool_unique		999863	0					
ANR	1000259	Identifier	compiler		999863	0					
ANR	1000260	Identifier	cpool_unique		999863	1					
ANR	1000261	CastExpression	( sljit_ub * ) ( compiler -> cpool + CPOOL_SIZE )		999863	1					
ANR	1000262	CastTarget	sljit_ub *		999863	0					
ANR	1000263	AdditiveExpression	compiler -> cpool + CPOOL_SIZE		999863	1		+			
ANR	1000264	PtrMemberAccess	compiler -> cpool		999863	0					
ANR	1000265	Identifier	compiler		999863	0					
ANR	1000266	Identifier	cpool		999863	1					
ANR	1000267	Identifier	CPOOL_SIZE		999863	1					
ANR	1000268	ExpressionStatement	compiler -> cpool_diff = 0xffffffff	390:1:11167:11200	999863	24	True				
ANR	1000269	AssignmentExpression	compiler -> cpool_diff = 0xffffffff		999863	0		=			
ANR	1000270	PtrMemberAccess	compiler -> cpool_diff		999863	0					
ANR	1000271	Identifier	compiler		999863	0					
ANR	1000272	Identifier	cpool_diff		999863	1					
ANR	1000273	PrimaryExpression	0xffffffff		999863	1					
ANR	1000274	ExpressionStatement	compiler -> delay_slot = UNMOVABLE_INS	394:1:11264:11300	999863	25	True				
ANR	1000275	AssignmentExpression	compiler -> delay_slot = UNMOVABLE_INS		999863	0		=			
ANR	1000276	PtrMemberAccess	compiler -> delay_slot		999863	0					
ANR	1000277	Identifier	compiler		999863	0					
ANR	1000278	Identifier	delay_slot		999863	1					
ANR	1000279	Identifier	UNMOVABLE_INS		999863	1					
ANR	1000280	ExpressionStatement	compiler -> delay_slot = UNMOVABLE_INS	398:1:11372:11408	999863	26	True				
ANR	1000281	AssignmentExpression	compiler -> delay_slot = UNMOVABLE_INS		999863	0		=			
ANR	1000282	PtrMemberAccess	compiler -> delay_slot		999863	0					
ANR	1000283	Identifier	compiler		999863	0					
ANR	1000284	Identifier	delay_slot		999863	1					
ANR	1000285	Identifier	UNMOVABLE_INS		999863	1					
ANR	1000286	IfStatement	if ( ! compiler_initialized )		999863	27					
ANR	1000287	Condition	! compiler_initialized	402:5:11492:11512	999863	0	True				
ANR	1000288	UnaryOperationExpression	! compiler_initialized		999863	0					
ANR	1000289	UnaryOperator	!		999863	0					
ANR	1000290	Identifier	compiler_initialized		999863	1					
ANR	1000291	CompoundStatement		74:28:2489:2489	999863	1					
ANR	1000292	ExpressionStatement	init_compiler ( )	403:2:11519:11534	999863	0	True				
ANR	1000293	CallExpression	init_compiler ( )		999863	0					
ANR	1000294	Callee	init_compiler		999863	0					
ANR	1000295	Identifier	init_compiler		999863	0					
ANR	1000296	ArgumentList			999863	1					
ANR	1000297	ExpressionStatement	compiler_initialized = 1	404:2:11538:11562	999863	1	True				
ANR	1000298	AssignmentExpression	compiler_initialized = 1		999863	0		=			
ANR	1000299	Identifier	compiler_initialized		999863	0					
ANR	1000300	PrimaryExpression	1		999863	1					
ANR	1000301	ReturnStatement	return compiler ;	408:1:11576:11591	999863	28	True				
ANR	1000302	Identifier	compiler		999863	0					
ANR	1000303	ReturnType	struct sljit_compiler *		999863	1					
ANR	1000304	Identifier	sljit_create_compiler		999863	2					
ANR	1000305	ParameterList	void * allocator_data		999863	3					
ANR	1000306	Parameter	void * allocator_data	328:70:9003:9022	999863	0	True				
ANR	1000307	ParameterType	void *		999863	0					
ANR	1000308	Identifier	allocator_data		999863	1					
ANR	1000309	CFGEntryNode	ENTRY		999863		True				
ANR	1000310	CFGExitNode	EXIT		999863		True				
ANR	1000311	Symbol	rewritable_jump_and_single_op_must_not_be_the_same		999863						
ANR	1000312	Symbol	compiler -> abuf -> next		999863						
ANR	1000313	Symbol	compiler -> fsaveds		999863						
ANR	1000314	Symbol	compiler -> scratches		999863						
ANR	1000315	Symbol	compiler -> buf		999863						
ANR	1000316	Symbol	* compiler		999863						
ANR	1000317	Symbol	compiler -> cpool_diff		999863						
ANR	1000318	Symbol	allocator_data		999863						
ANR	1000319	Symbol	invalid_integer_types		999863						
ANR	1000320	Symbol	* * compiler		999863						
ANR	1000321	Symbol	compiler -> abuf -> used_size		999863						
ANR	1000322	Symbol	* compiler -> buf		999863						
ANR	1000323	Symbol	CPOOL_SIZE		999863						
ANR	1000324	Symbol	ABUF_SIZE		999863						
ANR	1000325	Symbol	SLJIT_REWRITABLE_JUMP		999863						
ANR	1000326	Symbol	compiler -> cpool		999863						
ANR	1000327	Symbol	compiler		999863						
ANR	1000328	Symbol	compiler -> buf -> next		999863						
ANR	1000329	Symbol	compiler -> fscratches		999863						
ANR	1000330	Symbol	compiler -> args		999863						
ANR	1000331	Symbol	SLJIT_MALLOC		999863						
ANR	1000332	Symbol	NULL		999863						
ANR	1000333	Symbol	SLJIT_SINGLE_OP		999863						
ANR	1000334	Symbol	SLJIT_INT_OP		999863						
ANR	1000335	Symbol	UNMOVABLE_INS		999863						
ANR	1000336	Symbol	* compiler -> abuf		999863						
ANR	1000337	Symbol	compiler_initialized		999863						
ANR	1000338	Symbol	SLJIT_SUCCESS		999863						
ANR	1000339	Symbol	int_op_and_single_op_must_be_the_same		999863						
ANR	1000340	Symbol	compiler -> abuf		999863						
ANR	1000341	Symbol	compiler -> saveds		999863						
ANR	1000342	Symbol	compiler -> local_size		999863						
ANR	1000343	Symbol	compiler -> cpool_unique		999863						
ANR	1000344	Symbol	compiler -> allocator_data		999863						
ANR	1000345	Symbol	BUF_SIZE		999863						
ANR	1000346	Symbol	compiler -> buf -> used_size		999863						
ANR	1000347	Symbol	compiler -> delay_slot		999863						
ANR	1000348	Symbol	compiler -> error		999863						
ANR	1000349	Function	sljit_free_compiler	411:0:11596:12210							
ANR	1000350	FunctionDef	sljit_free_compiler (struct sljit_compiler * compiler)		1000349	0					
ANR	1000351	CompoundStatement		412:0:11679:12210	1000349	0					
ANR	1000352	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	413:1:11682:11715	1000349	0	True				
ANR	1000353	IdentifierDecl	* buf		1000349	0					
ANR	1000354	IdentifierDeclType	struct sljit_memory_fragment *		1000349	0					
ANR	1000355	Identifier	buf		1000349	1					
ANR	1000356	IdentifierDeclStatement	struct sljit_memory_fragment * curr ;	414:1:11718:11752	1000349	1	True				
ANR	1000357	IdentifierDecl	* curr		1000349	0					
ANR	1000358	IdentifierDeclType	struct sljit_memory_fragment *		1000349	0					
ANR	1000359	Identifier	curr		1000349	1					
ANR	1000360	IdentifierDeclStatement	void * allocator_data = compiler -> allocator_data ;	415:1:11755:11802	1000349	2	True				
ANR	1000361	IdentifierDecl	* allocator_data = compiler -> allocator_data		1000349	0					
ANR	1000362	IdentifierDeclType	void *		1000349	0					
ANR	1000363	Identifier	allocator_data		1000349	1					
ANR	1000364	AssignmentExpression	* allocator_data = compiler -> allocator_data		1000349	2		=			
ANR	1000365	Identifier	allocator_data		1000349	0					
ANR	1000366	PtrMemberAccess	compiler -> allocator_data		1000349	1					
ANR	1000367	Identifier	compiler		1000349	0					
ANR	1000368	Identifier	allocator_data		1000349	1					
ANR	1000369	ExpressionStatement	SLJIT_UNUSED_ARG ( allocator_data )	416:1:11805:11837	1000349	3	True				
ANR	1000370	CallExpression	SLJIT_UNUSED_ARG ( allocator_data )		1000349	0					
ANR	1000371	Callee	SLJIT_UNUSED_ARG		1000349	0					
ANR	1000372	Identifier	SLJIT_UNUSED_ARG		1000349	0					
ANR	1000373	ArgumentList	allocator_data		1000349	1					
ANR	1000374	Argument	allocator_data		1000349	0					
ANR	1000375	Identifier	allocator_data		1000349	0					
ANR	1000376	ExpressionStatement	buf = compiler -> buf	418:1:11841:11860	1000349	4	True				
ANR	1000377	AssignmentExpression	buf = compiler -> buf		1000349	0		=			
ANR	1000378	Identifier	buf		1000349	0					
ANR	1000379	PtrMemberAccess	compiler -> buf		1000349	1					
ANR	1000380	Identifier	compiler		1000349	0					
ANR	1000381	Identifier	buf		1000349	1					
ANR	1000382	WhileStatement	while ( buf )		1000349	5					
ANR	1000383	Condition	buf	419:8:11870:11872	1000349	0	True				
ANR	1000384	Identifier	buf		1000349	0					
ANR	1000385	CompoundStatement		8:13:195:195	1000349	1					
ANR	1000386	ExpressionStatement	curr = buf	420:2:11879:11889	1000349	0	True				
ANR	1000387	AssignmentExpression	curr = buf		1000349	0		=			
ANR	1000388	Identifier	curr		1000349	0					
ANR	1000389	Identifier	buf		1000349	1					
ANR	1000390	ExpressionStatement	buf = buf -> next	421:2:11893:11908	1000349	1	True				
ANR	1000391	AssignmentExpression	buf = buf -> next		1000349	0		=			
ANR	1000392	Identifier	buf		1000349	0					
ANR	1000393	PtrMemberAccess	buf -> next		1000349	1					
ANR	1000394	Identifier	buf		1000349	0					
ANR	1000395	Identifier	next		1000349	1					
ANR	1000396	ExpressionStatement	"SLJIT_FREE ( curr , allocator_data )"	422:2:11912:11944	1000349	2	True				
ANR	1000397	CallExpression	"SLJIT_FREE ( curr , allocator_data )"		1000349	0					
ANR	1000398	Callee	SLJIT_FREE		1000349	0					
ANR	1000399	Identifier	SLJIT_FREE		1000349	0					
ANR	1000400	ArgumentList	curr		1000349	1					
ANR	1000401	Argument	curr		1000349	0					
ANR	1000402	Identifier	curr		1000349	0					
ANR	1000403	Argument	allocator_data		1000349	1					
ANR	1000404	Identifier	allocator_data		1000349	0					
ANR	1000405	ExpressionStatement	buf = compiler -> abuf	425:1:11951:11971	1000349	6	True				
ANR	1000406	AssignmentExpression	buf = compiler -> abuf		1000349	0		=			
ANR	1000407	Identifier	buf		1000349	0					
ANR	1000408	PtrMemberAccess	compiler -> abuf		1000349	1					
ANR	1000409	Identifier	compiler		1000349	0					
ANR	1000410	Identifier	abuf		1000349	1					
ANR	1000411	WhileStatement	while ( buf )		1000349	7					
ANR	1000412	Condition	buf	426:8:11981:11983	1000349	0	True				
ANR	1000413	Identifier	buf		1000349	0					
ANR	1000414	CompoundStatement		15:13:306:306	1000349	1					
ANR	1000415	ExpressionStatement	curr = buf	427:2:11990:12000	1000349	0	True				
ANR	1000416	AssignmentExpression	curr = buf		1000349	0		=			
ANR	1000417	Identifier	curr		1000349	0					
ANR	1000418	Identifier	buf		1000349	1					
ANR	1000419	ExpressionStatement	buf = buf -> next	428:2:12004:12019	1000349	1	True				
ANR	1000420	AssignmentExpression	buf = buf -> next		1000349	0		=			
ANR	1000421	Identifier	buf		1000349	0					
ANR	1000422	PtrMemberAccess	buf -> next		1000349	1					
ANR	1000423	Identifier	buf		1000349	0					
ANR	1000424	Identifier	next		1000349	1					
ANR	1000425	ExpressionStatement	"SLJIT_FREE ( curr , allocator_data )"	429:2:12023:12055	1000349	2	True				
ANR	1000426	CallExpression	"SLJIT_FREE ( curr , allocator_data )"		1000349	0					
ANR	1000427	Callee	SLJIT_FREE		1000349	0					
ANR	1000428	Identifier	SLJIT_FREE		1000349	0					
ANR	1000429	ArgumentList	curr		1000349	1					
ANR	1000430	Argument	curr		1000349	0					
ANR	1000431	Identifier	curr		1000349	0					
ANR	1000432	Argument	allocator_data		1000349	1					
ANR	1000433	Identifier	allocator_data		1000349	0					
ANR	1000434	ExpressionStatement	"SLJIT_FREE ( compiler -> cpool , allocator_data )"	433:1:12119:12162	1000349	8	True				
ANR	1000435	CallExpression	"SLJIT_FREE ( compiler -> cpool , allocator_data )"		1000349	0					
ANR	1000436	Callee	SLJIT_FREE		1000349	0					
ANR	1000437	Identifier	SLJIT_FREE		1000349	0					
ANR	1000438	ArgumentList	compiler -> cpool		1000349	1					
ANR	1000439	Argument	compiler -> cpool		1000349	0					
ANR	1000440	PtrMemberAccess	compiler -> cpool		1000349	0					
ANR	1000441	Identifier	compiler		1000349	0					
ANR	1000442	Identifier	cpool		1000349	1					
ANR	1000443	Argument	allocator_data		1000349	1					
ANR	1000444	Identifier	allocator_data		1000349	0					
ANR	1000445	ExpressionStatement	"SLJIT_FREE ( compiler , allocator_data )"	435:1:12172:12208	1000349	9	True				
ANR	1000446	CallExpression	"SLJIT_FREE ( compiler , allocator_data )"		1000349	0					
ANR	1000447	Callee	SLJIT_FREE		1000349	0					
ANR	1000448	Identifier	SLJIT_FREE		1000349	0					
ANR	1000449	ArgumentList	compiler		1000349	1					
ANR	1000450	Argument	compiler		1000349	0					
ANR	1000451	Identifier	compiler		1000349	0					
ANR	1000452	Argument	allocator_data		1000349	1					
ANR	1000453	Identifier	allocator_data		1000349	0					
ANR	1000454	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1000349	1					
ANR	1000455	Identifier	sljit_free_compiler		1000349	2					
ANR	1000456	ParameterList	struct sljit_compiler * compiler		1000349	3					
ANR	1000457	Parameter	struct sljit_compiler * compiler	411:50:11646:11676	1000349	0	True				
ANR	1000458	ParameterType	struct sljit_compiler *		1000349	0					
ANR	1000459	Identifier	compiler		1000349	1					
ANR	1000460	CFGEntryNode	ENTRY		1000349		True				
ANR	1000461	CFGExitNode	EXIT		1000349		True				
ANR	1000462	Symbol	allocator_data		1000349						
ANR	1000463	Symbol	buf		1000349						
ANR	1000464	Symbol	* buf		1000349						
ANR	1000465	Symbol	compiler -> abuf		1000349						
ANR	1000466	Symbol	compiler -> buf		1000349						
ANR	1000467	Symbol	compiler -> allocator_data		1000349						
ANR	1000468	Symbol	buf -> next		1000349						
ANR	1000469	Symbol	* compiler		1000349						
ANR	1000470	Symbol	compiler -> cpool		1000349						
ANR	1000471	Symbol	compiler		1000349						
ANR	1000472	Symbol	curr		1000349						
ANR	1000473	Function	sljit_set_compiler_memory_error	438:0:12213:12393							
ANR	1000474	FunctionDef	sljit_set_compiler_memory_error (struct sljit_compiler * compiler)		1000473	0					
ANR	1000475	CompoundStatement		439:0:12308:12393	1000473	0					
ANR	1000476	IfStatement	if ( compiler -> error == SLJIT_SUCCESS )		1000473	0					
ANR	1000477	Condition	compiler -> error == SLJIT_SUCCESS	440:5:12315:12346	1000473	0	True				
ANR	1000478	EqualityExpression	compiler -> error == SLJIT_SUCCESS		1000473	0		==			
ANR	1000479	PtrMemberAccess	compiler -> error		1000473	0					
ANR	1000480	Identifier	compiler		1000473	0					
ANR	1000481	Identifier	error		1000473	1					
ANR	1000482	Identifier	SLJIT_SUCCESS		1000473	1					
ANR	1000483	ExpressionStatement	compiler -> error = SLJIT_ERR_ALLOC_FAILED	441:2:12351:12391	1000473	1	True				
ANR	1000484	AssignmentExpression	compiler -> error = SLJIT_ERR_ALLOC_FAILED		1000473	0		=			
ANR	1000485	PtrMemberAccess	compiler -> error		1000473	0					
ANR	1000486	Identifier	compiler		1000473	0					
ANR	1000487	Identifier	error		1000473	1					
ANR	1000488	Identifier	SLJIT_ERR_ALLOC_FAILED		1000473	1					
ANR	1000489	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1000473	1					
ANR	1000490	Identifier	sljit_set_compiler_memory_error		1000473	2					
ANR	1000491	ParameterList	struct sljit_compiler * compiler		1000473	3					
ANR	1000492	Parameter	struct sljit_compiler * compiler	438:62:12275:12305	1000473	0	True				
ANR	1000493	ParameterType	struct sljit_compiler *		1000473	0					
ANR	1000494	Identifier	compiler		1000473	1					
ANR	1000495	CFGEntryNode	ENTRY		1000473		True				
ANR	1000496	CFGExitNode	EXIT		1000473		True				
ANR	1000497	Symbol	SLJIT_ERR_ALLOC_FAILED		1000473						
ANR	1000498	Symbol	SLJIT_SUCCESS		1000473						
ANR	1000499	Symbol	* compiler		1000473						
ANR	1000500	Symbol	compiler		1000473						
ANR	1000501	Symbol	compiler -> error		1000473						
ANR	1000502	Function	sljit_free_code	445:0:12461:12602							
ANR	1000503	FunctionDef	sljit_free_code (void * code)		1000502	0					
ANR	1000504	CompoundStatement		446:0:12519:12602	1000502	0					
ANR	1000505	ExpressionStatement	SLJIT_FREE_EXEC ( ( void * ) ( ( sljit_uw ) code & ~0x1 ) )	448:1:12553:12600	1000502	0	True				
ANR	1000506	CallExpression	SLJIT_FREE_EXEC ( ( void * ) ( ( sljit_uw ) code & ~0x1 ) )		1000502	0					
ANR	1000507	Callee	SLJIT_FREE_EXEC		1000502	0					
ANR	1000508	Identifier	SLJIT_FREE_EXEC		1000502	0					
ANR	1000509	ArgumentList	( void * ) ( ( sljit_uw ) code & ~0x1 )		1000502	1					
ANR	1000510	Argument	( void * ) ( ( sljit_uw ) code & ~0x1 )		1000502	0					
ANR	1000511	CastExpression	( void * ) ( ( sljit_uw ) code & ~0x1 )		1000502	0					
ANR	1000512	CastTarget	void *		1000502	0					
ANR	1000513	BitAndExpression	( sljit_uw ) code & ~0x1		1000502	1		&			
ANR	1000514	CastExpression	( sljit_uw ) code		1000502	0					
ANR	1000515	CastTarget	sljit_uw		1000502	0					
ANR	1000516	Identifier	code		1000502	1					
ANR	1000517	Identifier	~0x1		1000502	1					
ANR	1000518	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1000502	1					
ANR	1000519	Identifier	sljit_free_code		1000502	2					
ANR	1000520	ParameterList	void * code		1000502	3					
ANR	1000521	Parameter	void * code	445:46:12507:12516	1000502	0	True				
ANR	1000522	ParameterType	void *		1000502	0					
ANR	1000523	Identifier	code		1000502	1					
ANR	1000524	CFGEntryNode	ENTRY		1000502		True				
ANR	1000525	CFGExitNode	EXIT		1000502		True				
ANR	1000526	Symbol	~0x1		1000502						
ANR	1000527	Symbol	code		1000502						
ANR	1000528	Function	sljit_free_code	451:0:12663:12810							
ANR	1000529	FunctionDef	sljit_free_code (void * code)		1000528	0					
ANR	1000530	CompoundStatement		452:0:12721:12810	1000528	0					
ANR	1000531	ExpressionStatement	code = ( void * ) ( * ( sljit_uw * ) code )	454:1:12752:12784	1000528	0	True				
ANR	1000532	AssignmentExpression	code = ( void * ) ( * ( sljit_uw * ) code )		1000528	0		=			
ANR	1000533	Identifier	code		1000528	0					
ANR	1000534	CastExpression	( void * ) ( * ( sljit_uw * ) code )		1000528	1					
ANR	1000535	CastTarget	void *		1000528	0					
ANR	1000536	UnaryOperationExpression	* ( sljit_uw * ) code		1000528	1					
ANR	1000537	UnaryOperator	*		1000528	0					
ANR	1000538	CastExpression	( sljit_uw * ) code		1000528	1					
ANR	1000539	CastTarget	sljit_uw *		1000528	0					
ANR	1000540	Identifier	code		1000528	1					
ANR	1000541	ExpressionStatement	SLJIT_FREE_EXEC ( code )	455:1:12787:12808	1000528	1	True				
ANR	1000542	CallExpression	SLJIT_FREE_EXEC ( code )		1000528	0					
ANR	1000543	Callee	SLJIT_FREE_EXEC		1000528	0					
ANR	1000544	Identifier	SLJIT_FREE_EXEC		1000528	0					
ANR	1000545	ArgumentList	code		1000528	1					
ANR	1000546	Argument	code		1000528	0					
ANR	1000547	Identifier	code		1000528	0					
ANR	1000548	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1000528	1					
ANR	1000549	Identifier	sljit_free_code		1000528	2					
ANR	1000550	ParameterList	void * code		1000528	3					
ANR	1000551	Parameter	void * code	451:46:12709:12718	1000528	0	True				
ANR	1000552	ParameterType	void *		1000528	0					
ANR	1000553	Identifier	code		1000528	1					
ANR	1000554	CFGEntryNode	ENTRY		1000528		True				
ANR	1000555	CFGExitNode	EXIT		1000528		True				
ANR	1000556	Symbol	code		1000528						
ANR	1000557	Symbol	* ( sljit_uw * ) code		1000528						
ANR	1000558	Symbol	* code		1000528						
ANR	1000559	Function	sljit_free_code	458:0:12818:12902							
ANR	1000560	FunctionDef	sljit_free_code (void * code)		1000559	0					
ANR	1000561	CompoundStatement		459:0:12876:12902	1000559	0					
ANR	1000562	ExpressionStatement	SLJIT_FREE_EXEC ( code )	460:1:12879:12900	1000559	0	True				
ANR	1000563	CallExpression	SLJIT_FREE_EXEC ( code )		1000559	0					
ANR	1000564	Callee	SLJIT_FREE_EXEC		1000559	0					
ANR	1000565	Identifier	SLJIT_FREE_EXEC		1000559	0					
ANR	1000566	ArgumentList	code		1000559	1					
ANR	1000567	Argument	code		1000559	0					
ANR	1000568	Identifier	code		1000559	0					
ANR	1000569	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1000559	1					
ANR	1000570	Identifier	sljit_free_code		1000559	2					
ANR	1000571	ParameterList	void * code		1000559	3					
ANR	1000572	Parameter	void * code	458:46:12864:12873	1000559	0	True				
ANR	1000573	ParameterType	void *		1000559	0					
ANR	1000574	Identifier	code		1000559	1					
ANR	1000575	CFGEntryNode	ENTRY		1000559		True				
ANR	1000576	CFGExitNode	EXIT		1000559		True				
ANR	1000577	Symbol	code		1000559						
ANR	1000578	Function	sljit_set_label	464:0:12912:13152							
ANR	1000579	FunctionDef	"sljit_set_label (struct sljit_jump * jump , struct sljit_label * label)"		1000578	0					
ANR	1000580	CompoundStatement		465:0:13010:13152	1000578	0					
ANR	1000581	IfStatement	if ( SLJIT_LIKELY ( ! ! jump ) && SLJIT_LIKELY ( ! ! label ) )		1000578	0					
ANR	1000582	Condition	SLJIT_LIKELY ( ! ! jump ) && SLJIT_LIKELY ( ! ! label )	466:5:13017:13061	1000578	0	True				
ANR	1000583	AndExpression	SLJIT_LIKELY ( ! ! jump ) && SLJIT_LIKELY ( ! ! label )		1000578	0		&&			
ANR	1000584	CallExpression	SLJIT_LIKELY ( ! ! jump )		1000578	0					
ANR	1000585	Callee	SLJIT_LIKELY		1000578	0					
ANR	1000586	Identifier	SLJIT_LIKELY		1000578	0					
ANR	1000587	ArgumentList	! ! jump		1000578	1					
ANR	1000588	Argument	! ! jump		1000578	0					
ANR	1000589	UnaryOperationExpression	! ! jump		1000578	0					
ANR	1000590	UnaryOperator	!		1000578	0					
ANR	1000591	UnaryOperationExpression	! jump		1000578	1					
ANR	1000592	UnaryOperator	!		1000578	0					
ANR	1000593	Identifier	jump		1000578	1					
ANR	1000594	CallExpression	SLJIT_LIKELY ( ! ! label )		1000578	1					
ANR	1000595	Callee	SLJIT_LIKELY		1000578	0					
ANR	1000596	Identifier	SLJIT_LIKELY		1000578	0					
ANR	1000597	ArgumentList	! ! label		1000578	1					
ANR	1000598	Argument	! ! label		1000578	0					
ANR	1000599	UnaryOperationExpression	! ! label		1000578	0					
ANR	1000600	UnaryOperator	!		1000578	0					
ANR	1000601	UnaryOperationExpression	! label		1000578	1					
ANR	1000602	UnaryOperator	!		1000578	0					
ANR	1000603	Identifier	label		1000578	1					
ANR	1000604	CompoundStatement		2:52:53:53	1000578	1					
ANR	1000605	ExpressionStatement	jump -> flags &= ~JUMP_ADDR	467:2:13068:13093	1000578	0	True				
ANR	1000606	AssignmentExpression	jump -> flags &= ~JUMP_ADDR		1000578	0		&=			
ANR	1000607	PtrMemberAccess	jump -> flags		1000578	0					
ANR	1000608	Identifier	jump		1000578	0					
ANR	1000609	Identifier	flags		1000578	1					
ANR	1000610	Identifier	~JUMP_ADDR		1000578	1					
ANR	1000611	ExpressionStatement	jump -> flags |= JUMP_LABEL	468:2:13097:13122	1000578	1	True				
ANR	1000612	AssignmentExpression	jump -> flags |= JUMP_LABEL		1000578	0		|=			
ANR	1000613	PtrMemberAccess	jump -> flags		1000578	0					
ANR	1000614	Identifier	jump		1000578	0					
ANR	1000615	Identifier	flags		1000578	1					
ANR	1000616	Identifier	JUMP_LABEL		1000578	1					
ANR	1000617	ExpressionStatement	jump -> u . label = label	469:2:13126:13147	1000578	2	True				
ANR	1000618	AssignmentExpression	jump -> u . label = label		1000578	0		=			
ANR	1000619	MemberAccess	jump -> u . label		1000578	0					
ANR	1000620	PtrMemberAccess	jump -> u		1000578	0					
ANR	1000621	Identifier	jump		1000578	0					
ANR	1000622	Identifier	u		1000578	1					
ANR	1000623	Identifier	label		1000578	1					
ANR	1000624	Identifier	label		1000578	1					
ANR	1000625	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1000578	1					
ANR	1000626	Identifier	sljit_set_label		1000578	2					
ANR	1000627	ParameterList	"struct sljit_jump * jump , struct sljit_label * label"		1000578	3					
ANR	1000628	Parameter	struct sljit_jump * jump	464:46:12958:12980	1000578	0	True				
ANR	1000629	ParameterType	struct sljit_jump *		1000578	0					
ANR	1000630	Identifier	jump		1000578	1					
ANR	1000631	Parameter	struct sljit_label * label	464:71:12983:13007	1000578	1	True				
ANR	1000632	ParameterType	struct sljit_label *		1000578	0					
ANR	1000633	Identifier	label		1000578	1					
ANR	1000634	CFGEntryNode	ENTRY		1000578		True				
ANR	1000635	CFGExitNode	EXIT		1000578		True				
ANR	1000636	Symbol	SLJIT_LIKELY		1000578						
ANR	1000637	Symbol	* jump		1000578						
ANR	1000638	Symbol	jump -> u		1000578						
ANR	1000639	Symbol	jump -> flags		1000578						
ANR	1000640	Symbol	JUMP_LABEL		1000578						
ANR	1000641	Symbol	~JUMP_ADDR		1000578						
ANR	1000642	Symbol	label		1000578						
ANR	1000643	Symbol	jump -> u . label		1000578						
ANR	1000644	Symbol	jump		1000578						
ANR	1000645	Function	sljit_set_target	473:0:13155:13363							
ANR	1000646	FunctionDef	"sljit_set_target (struct sljit_jump * jump , sljit_uw target)"		1000645	0					
ANR	1000647	CompoundStatement		474:0:13244:13363	1000645	0					
ANR	1000648	IfStatement	if ( SLJIT_LIKELY ( ! ! jump ) )		1000645	0					
ANR	1000649	Condition	SLJIT_LIKELY ( ! ! jump )	475:5:13251:13270	1000645	0	True				
ANR	1000650	CallExpression	SLJIT_LIKELY ( ! ! jump )		1000645	0					
ANR	1000651	Callee	SLJIT_LIKELY		1000645	0					
ANR	1000652	Identifier	SLJIT_LIKELY		1000645	0					
ANR	1000653	ArgumentList	! ! jump		1000645	1					
ANR	1000654	Argument	! ! jump		1000645	0					
ANR	1000655	UnaryOperationExpression	! ! jump		1000645	0					
ANR	1000656	UnaryOperator	!		1000645	0					
ANR	1000657	UnaryOperationExpression	! jump		1000645	1					
ANR	1000658	UnaryOperator	!		1000645	0					
ANR	1000659	Identifier	jump		1000645	1					
ANR	1000660	CompoundStatement		2:27:28:28	1000645	1					
ANR	1000661	ExpressionStatement	jump -> flags &= ~JUMP_LABEL	476:2:13277:13303	1000645	0	True				
ANR	1000662	AssignmentExpression	jump -> flags &= ~JUMP_LABEL		1000645	0		&=			
ANR	1000663	PtrMemberAccess	jump -> flags		1000645	0					
ANR	1000664	Identifier	jump		1000645	0					
ANR	1000665	Identifier	flags		1000645	1					
ANR	1000666	Identifier	~JUMP_LABEL		1000645	1					
ANR	1000667	ExpressionStatement	jump -> flags |= JUMP_ADDR	477:2:13307:13331	1000645	1	True				
ANR	1000668	AssignmentExpression	jump -> flags |= JUMP_ADDR		1000645	0		|=			
ANR	1000669	PtrMemberAccess	jump -> flags		1000645	0					
ANR	1000670	Identifier	jump		1000645	0					
ANR	1000671	Identifier	flags		1000645	1					
ANR	1000672	Identifier	JUMP_ADDR		1000645	1					
ANR	1000673	ExpressionStatement	jump -> u . target = target	478:2:13335:13358	1000645	2	True				
ANR	1000674	AssignmentExpression	jump -> u . target = target		1000645	0		=			
ANR	1000675	MemberAccess	jump -> u . target		1000645	0					
ANR	1000676	PtrMemberAccess	jump -> u		1000645	0					
ANR	1000677	Identifier	jump		1000645	0					
ANR	1000678	Identifier	u		1000645	1					
ANR	1000679	Identifier	target		1000645	1					
ANR	1000680	Identifier	target		1000645	1					
ANR	1000681	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1000645	1					
ANR	1000682	Identifier	sljit_set_target		1000645	2					
ANR	1000683	ParameterList	"struct sljit_jump * jump , sljit_uw target"		1000645	3					
ANR	1000684	Parameter	struct sljit_jump * jump	473:47:13202:13224	1000645	0	True				
ANR	1000685	ParameterType	struct sljit_jump *		1000645	0					
ANR	1000686	Identifier	jump		1000645	1					
ANR	1000687	Parameter	sljit_uw target	473:72:13227:13241	1000645	1	True				
ANR	1000688	ParameterType	sljit_uw		1000645	0					
ANR	1000689	Identifier	target		1000645	1					
ANR	1000690	CFGEntryNode	ENTRY		1000645		True				
ANR	1000691	CFGExitNode	EXIT		1000645		True				
ANR	1000692	Symbol	SLJIT_LIKELY		1000645						
ANR	1000693	Symbol	* jump		1000645						
ANR	1000694	Symbol	jump -> u		1000645						
ANR	1000695	Symbol	jump -> u . target		1000645						
ANR	1000696	Symbol	jump -> flags		1000645						
ANR	1000697	Symbol	JUMP_ADDR		1000645						
ANR	1000698	Symbol	~JUMP_LABEL		1000645						
ANR	1000699	Symbol	jump		1000645						
ANR	1000700	Symbol	target		1000645						
ANR	1000701	Function	ensure_buf	486:0:13595:14222							
ANR	1000702	FunctionDef	"ensure_buf (struct sljit_compiler * compiler , sljit_uw size)"		1000701	0					
ANR	1000703	CompoundStatement		487:0:13667:14222	1000701	0					
ANR	1000704	IdentifierDeclStatement	sljit_ub * ret ;	488:1:13670:13683	1000701	0	True				
ANR	1000705	IdentifierDecl	* ret		1000701	0					
ANR	1000706	IdentifierDeclType	sljit_ub *		1000701	0					
ANR	1000707	Identifier	ret		1000701	1					
ANR	1000708	IdentifierDeclStatement	struct sljit_memory_fragment * new_frag ;	489:1:13686:13724	1000701	1	True				
ANR	1000709	IdentifierDecl	* new_frag		1000701	0					
ANR	1000710	IdentifierDeclType	struct sljit_memory_fragment *		1000701	0					
ANR	1000711	Identifier	new_frag		1000701	1					
ANR	1000712	ExpressionStatement	SLJIT_ASSERT ( size <= 256 )	491:1:13728:13753	1000701	2	True				
ANR	1000713	CallExpression	SLJIT_ASSERT ( size <= 256 )		1000701	0					
ANR	1000714	Callee	SLJIT_ASSERT		1000701	0					
ANR	1000715	Identifier	SLJIT_ASSERT		1000701	0					
ANR	1000716	ArgumentList	size <= 256		1000701	1					
ANR	1000717	Argument	size <= 256		1000701	0					
ANR	1000718	RelationalExpression	size <= 256		1000701	0		<=			
ANR	1000719	Identifier	size		1000701	0					
ANR	1000720	PrimaryExpression	256		1000701	1					
ANR	1000721	Statement	if	492:1:13756:13757	1000701	3	True				
ANR	1000722	Statement	(	492:4:13759:13759	1000701	4	True				
ANR	1000723	Statement	compiler	492:5:13760:13767	1000701	5	True				
ANR	1000724	Statement	->	492:13:13768:13769	1000701	6	True				
ANR	1000725	Statement	buf	492:15:13770:13772	1000701	7	True				
ANR	1000726	Statement	->	492:18:13773:13774	1000701	8	True				
ANR	1000727	Statement	used_size	492:20:13775:13783	1000701	9	True				
ANR	1000728	Statement	+	492:30:13785:13785	1000701	10	True				
ANR	1000729	Statement	size	492:32:13787:13790	1000701	11	True				
ANR	1000730	Statement	<=	492:37:13792:13793	1000701	12	True				
ANR	1000731	Statement	(	492:40:13795:13795	1000701	13	True				
ANR	1000732	Statement	BUF_SIZE	492:41:13796:13803	1000701	14	True				
ANR	1000733	Statement	-	492:50:13805:13805	1000701	15	True				
ANR	1000734	Statement	(	492:52:13807:13807	1000701	16	True				
ANR	1000735	Statement	sljit_uw	492:53:13808:13815	1000701	17	True				
ANR	1000736	Statement	)	492:61:13816:13816	1000701	18	True				
ANR	1000737	Statement	SLJIT_OFFSETOF	492:62:13817:13830	1000701	19	True				
ANR	1000738	Statement	(	492:76:13831:13831	1000701	20	True				
ANR	1000739	Statement	struct	492:77:13832:13837	1000701	21	True				
ANR	1000740	Statement	sljit_memory_fragment	492:84:13839:13859	1000701	22	True				
ANR	1000741	Statement	","	492:105:13860:13860	1000701	23	True				
ANR	1000742	Statement	memory	492:107:13862:13867	1000701	24	True				
ANR	1000743	Statement	)	492:113:13868:13868	1000701	25	True				
ANR	1000744	Statement	)	492:114:13869:13869	1000701	26	True				
ANR	1000745	Statement	)	492:115:13870:13870	1000701	27	True				
ANR	1000746	CompoundStatement		6:117:204:204	1000701	28					
ANR	1000747	ExpressionStatement	ret = compiler -> buf -> memory + compiler -> buf -> used_size	493:2:13876:13930	1000701	0	True				
ANR	1000748	AssignmentExpression	ret = compiler -> buf -> memory + compiler -> buf -> used_size		1000701	0		=			
ANR	1000749	Identifier	ret		1000701	0					
ANR	1000750	AdditiveExpression	compiler -> buf -> memory + compiler -> buf -> used_size		1000701	1		+			
ANR	1000751	PtrMemberAccess	compiler -> buf -> memory		1000701	0					
ANR	1000752	PtrMemberAccess	compiler -> buf		1000701	0					
ANR	1000753	Identifier	compiler		1000701	0					
ANR	1000754	Identifier	buf		1000701	1					
ANR	1000755	Identifier	memory		1000701	1					
ANR	1000756	PtrMemberAccess	compiler -> buf -> used_size		1000701	1					
ANR	1000757	PtrMemberAccess	compiler -> buf		1000701	0					
ANR	1000758	Identifier	compiler		1000701	0					
ANR	1000759	Identifier	buf		1000701	1					
ANR	1000760	Identifier	used_size		1000701	1					
ANR	1000761	ExpressionStatement	compiler -> buf -> used_size += size	494:2:13934:13966	1000701	1	True				
ANR	1000762	AssignmentExpression	compiler -> buf -> used_size += size		1000701	0		+=			
ANR	1000763	PtrMemberAccess	compiler -> buf -> used_size		1000701	0					
ANR	1000764	PtrMemberAccess	compiler -> buf		1000701	0					
ANR	1000765	Identifier	compiler		1000701	0					
ANR	1000766	Identifier	buf		1000701	1					
ANR	1000767	Identifier	used_size		1000701	1					
ANR	1000768	Identifier	size		1000701	1					
ANR	1000769	ReturnStatement	return ret ;	495:2:13970:13980	1000701	2	True				
ANR	1000770	Identifier	ret		1000701	0					
ANR	1000771	ExpressionStatement	"new_frag = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( BUF_SIZE , compiler -> allocator_data )"	497:1:13986:14076	1000701	29	True				
ANR	1000772	AssignmentExpression	"new_frag = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( BUF_SIZE , compiler -> allocator_data )"		1000701	0		=			
ANR	1000773	Identifier	new_frag		1000701	0					
ANR	1000774	CastExpression	"( struct sljit_memory_fragment * ) SLJIT_MALLOC ( BUF_SIZE , compiler -> allocator_data )"		1000701	1					
ANR	1000775	CastTarget	struct sljit_memory_fragment *		1000701	0					
ANR	1000776	CallExpression	"SLJIT_MALLOC ( BUF_SIZE , compiler -> allocator_data )"		1000701	1					
ANR	1000777	Callee	SLJIT_MALLOC		1000701	0					
ANR	1000778	Identifier	SLJIT_MALLOC		1000701	0					
ANR	1000779	ArgumentList	BUF_SIZE		1000701	1					
ANR	1000780	Argument	BUF_SIZE		1000701	0					
ANR	1000781	Identifier	BUF_SIZE		1000701	0					
ANR	1000782	Argument	compiler -> allocator_data		1000701	1					
ANR	1000783	PtrMemberAccess	compiler -> allocator_data		1000701	0					
ANR	1000784	Identifier	compiler		1000701	0					
ANR	1000785	Identifier	allocator_data		1000701	1					
ANR	1000786	ExpressionStatement	PTR_FAIL_IF_NULL ( new_frag )	498:1:14079:14105	1000701	30	True				
ANR	1000787	CallExpression	PTR_FAIL_IF_NULL ( new_frag )		1000701	0					
ANR	1000788	Callee	PTR_FAIL_IF_NULL		1000701	0					
ANR	1000789	Identifier	PTR_FAIL_IF_NULL		1000701	0					
ANR	1000790	ArgumentList	new_frag		1000701	1					
ANR	1000791	Argument	new_frag		1000701	0					
ANR	1000792	Identifier	new_frag		1000701	0					
ANR	1000793	ExpressionStatement	new_frag -> next = compiler -> buf	499:1:14108:14138	1000701	31	True				
ANR	1000794	AssignmentExpression	new_frag -> next = compiler -> buf		1000701	0		=			
ANR	1000795	PtrMemberAccess	new_frag -> next		1000701	0					
ANR	1000796	Identifier	new_frag		1000701	0					
ANR	1000797	Identifier	next		1000701	1					
ANR	1000798	PtrMemberAccess	compiler -> buf		1000701	1					
ANR	1000799	Identifier	compiler		1000701	0					
ANR	1000800	Identifier	buf		1000701	1					
ANR	1000801	ExpressionStatement	compiler -> buf = new_frag	500:1:14141:14165	1000701	32	True				
ANR	1000802	AssignmentExpression	compiler -> buf = new_frag		1000701	0		=			
ANR	1000803	PtrMemberAccess	compiler -> buf		1000701	0					
ANR	1000804	Identifier	compiler		1000701	0					
ANR	1000805	Identifier	buf		1000701	1					
ANR	1000806	Identifier	new_frag		1000701	1					
ANR	1000807	ExpressionStatement	new_frag -> used_size = size	501:1:14168:14194	1000701	33	True				
ANR	1000808	AssignmentExpression	new_frag -> used_size = size		1000701	0		=			
ANR	1000809	PtrMemberAccess	new_frag -> used_size		1000701	0					
ANR	1000810	Identifier	new_frag		1000701	0					
ANR	1000811	Identifier	used_size		1000701	1					
ANR	1000812	Identifier	size		1000701	1					
ANR	1000813	ReturnStatement	return new_frag -> memory ;	502:1:14197:14220	1000701	34	True				
ANR	1000814	PtrMemberAccess	new_frag -> memory		1000701	0					
ANR	1000815	Identifier	new_frag		1000701	0					
ANR	1000816	Identifier	memory		1000701	1					
ANR	1000817	ReturnType	static void *		1000701	1					
ANR	1000818	Identifier	ensure_buf		1000701	2					
ANR	1000819	ParameterList	"struct sljit_compiler * compiler , sljit_uw size"		1000701	3					
ANR	1000820	Parameter	struct sljit_compiler * compiler	486:24:13619:13649	1000701	0	True				
ANR	1000821	ParameterType	struct sljit_compiler *		1000701	0					
ANR	1000822	Identifier	compiler		1000701	1					
ANR	1000823	Parameter	sljit_uw size	486:57:13652:13664	1000701	1	True				
ANR	1000824	ParameterType	sljit_uw		1000701	0					
ANR	1000825	Identifier	size		1000701	1					
ANR	1000826	CFGEntryNode	ENTRY		1000701		True				
ANR	1000827	CFGExitNode	EXIT		1000701		True				
ANR	1000828	Symbol	ret		1000701						
ANR	1000829	Symbol	SLJIT_MALLOC		1000701						
ANR	1000830	Symbol	new_frag -> next		1000701						
ANR	1000831	Symbol	new_frag -> memory		1000701						
ANR	1000832	Symbol	new_frag		1000701						
ANR	1000833	Symbol	compiler -> buf		1000701						
ANR	1000834	Symbol	* compiler		1000701						
ANR	1000835	Symbol	* new_frag		1000701						
ANR	1000836	Symbol	* * compiler		1000701						
ANR	1000837	Symbol	new_frag -> used_size		1000701						
ANR	1000838	Symbol	size		1000701						
ANR	1000839	Symbol	* compiler -> buf		1000701						
ANR	1000840	Symbol	compiler -> allocator_data		1000701						
ANR	1000841	Symbol	compiler -> buf -> used_size		1000701						
ANR	1000842	Symbol	BUF_SIZE		1000701						
ANR	1000843	Symbol	compiler		1000701						
ANR	1000844	Symbol	compiler -> buf -> memory		1000701						
ANR	1000845	Function	ensure_abuf	505:0:14225:14861							
ANR	1000846	FunctionDef	"ensure_abuf (struct sljit_compiler * compiler , sljit_uw size)"		1000845	0					
ANR	1000847	CompoundStatement		506:0:14298:14861	1000845	0					
ANR	1000848	IdentifierDeclStatement	sljit_ub * ret ;	507:1:14301:14314	1000845	0	True				
ANR	1000849	IdentifierDecl	* ret		1000845	0					
ANR	1000850	IdentifierDeclType	sljit_ub *		1000845	0					
ANR	1000851	Identifier	ret		1000845	1					
ANR	1000852	IdentifierDeclStatement	struct sljit_memory_fragment * new_frag ;	508:1:14317:14355	1000845	1	True				
ANR	1000853	IdentifierDecl	* new_frag		1000845	0					
ANR	1000854	IdentifierDeclType	struct sljit_memory_fragment *		1000845	0					
ANR	1000855	Identifier	new_frag		1000845	1					
ANR	1000856	ExpressionStatement	SLJIT_ASSERT ( size <= 256 )	510:1:14359:14384	1000845	2	True				
ANR	1000857	CallExpression	SLJIT_ASSERT ( size <= 256 )		1000845	0					
ANR	1000858	Callee	SLJIT_ASSERT		1000845	0					
ANR	1000859	Identifier	SLJIT_ASSERT		1000845	0					
ANR	1000860	ArgumentList	size <= 256		1000845	1					
ANR	1000861	Argument	size <= 256		1000845	0					
ANR	1000862	RelationalExpression	size <= 256		1000845	0		<=			
ANR	1000863	Identifier	size		1000845	0					
ANR	1000864	PrimaryExpression	256		1000845	1					
ANR	1000865	Statement	if	511:1:14387:14388	1000845	3	True				
ANR	1000866	Statement	(	511:4:14390:14390	1000845	4	True				
ANR	1000867	Statement	compiler	511:5:14391:14398	1000845	5	True				
ANR	1000868	Statement	->	511:13:14399:14400	1000845	6	True				
ANR	1000869	Statement	abuf	511:15:14401:14404	1000845	7	True				
ANR	1000870	Statement	->	511:19:14405:14406	1000845	8	True				
ANR	1000871	Statement	used_size	511:21:14407:14415	1000845	9	True				
ANR	1000872	Statement	+	511:31:14417:14417	1000845	10	True				
ANR	1000873	Statement	size	511:33:14419:14422	1000845	11	True				
ANR	1000874	Statement	<=	511:38:14424:14425	1000845	12	True				
ANR	1000875	Statement	(	511:41:14427:14427	1000845	13	True				
ANR	1000876	Statement	ABUF_SIZE	511:42:14428:14436	1000845	14	True				
ANR	1000877	Statement	-	511:52:14438:14438	1000845	15	True				
ANR	1000878	Statement	(	511:54:14440:14440	1000845	16	True				
ANR	1000879	Statement	sljit_uw	511:55:14441:14448	1000845	17	True				
ANR	1000880	Statement	)	511:63:14449:14449	1000845	18	True				
ANR	1000881	Statement	SLJIT_OFFSETOF	511:64:14450:14463	1000845	19	True				
ANR	1000882	Statement	(	511:78:14464:14464	1000845	20	True				
ANR	1000883	Statement	struct	511:79:14465:14470	1000845	21	True				
ANR	1000884	Statement	sljit_memory_fragment	511:86:14472:14492	1000845	22	True				
ANR	1000885	Statement	","	511:107:14493:14493	1000845	23	True				
ANR	1000886	Statement	memory	511:109:14495:14500	1000845	24	True				
ANR	1000887	Statement	)	511:115:14501:14501	1000845	25	True				
ANR	1000888	Statement	)	511:116:14502:14502	1000845	26	True				
ANR	1000889	Statement	)	511:117:14503:14503	1000845	27	True				
ANR	1000890	CompoundStatement		6:119:206:206	1000845	28					
ANR	1000891	ExpressionStatement	ret = compiler -> abuf -> memory + compiler -> abuf -> used_size	512:2:14509:14565	1000845	0	True				
ANR	1000892	AssignmentExpression	ret = compiler -> abuf -> memory + compiler -> abuf -> used_size		1000845	0		=			
ANR	1000893	Identifier	ret		1000845	0					
ANR	1000894	AdditiveExpression	compiler -> abuf -> memory + compiler -> abuf -> used_size		1000845	1		+			
ANR	1000895	PtrMemberAccess	compiler -> abuf -> memory		1000845	0					
ANR	1000896	PtrMemberAccess	compiler -> abuf		1000845	0					
ANR	1000897	Identifier	compiler		1000845	0					
ANR	1000898	Identifier	abuf		1000845	1					
ANR	1000899	Identifier	memory		1000845	1					
ANR	1000900	PtrMemberAccess	compiler -> abuf -> used_size		1000845	1					
ANR	1000901	PtrMemberAccess	compiler -> abuf		1000845	0					
ANR	1000902	Identifier	compiler		1000845	0					
ANR	1000903	Identifier	abuf		1000845	1					
ANR	1000904	Identifier	used_size		1000845	1					
ANR	1000905	ExpressionStatement	compiler -> abuf -> used_size += size	513:2:14569:14602	1000845	1	True				
ANR	1000906	AssignmentExpression	compiler -> abuf -> used_size += size		1000845	0		+=			
ANR	1000907	PtrMemberAccess	compiler -> abuf -> used_size		1000845	0					
ANR	1000908	PtrMemberAccess	compiler -> abuf		1000845	0					
ANR	1000909	Identifier	compiler		1000845	0					
ANR	1000910	Identifier	abuf		1000845	1					
ANR	1000911	Identifier	used_size		1000845	1					
ANR	1000912	Identifier	size		1000845	1					
ANR	1000913	ReturnStatement	return ret ;	514:2:14606:14616	1000845	2	True				
ANR	1000914	Identifier	ret		1000845	0					
ANR	1000915	ExpressionStatement	"new_frag = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( ABUF_SIZE , compiler -> allocator_data )"	516:1:14622:14713	1000845	29	True				
ANR	1000916	AssignmentExpression	"new_frag = ( struct sljit_memory_fragment * ) SLJIT_MALLOC ( ABUF_SIZE , compiler -> allocator_data )"		1000845	0		=			
ANR	1000917	Identifier	new_frag		1000845	0					
ANR	1000918	CastExpression	"( struct sljit_memory_fragment * ) SLJIT_MALLOC ( ABUF_SIZE , compiler -> allocator_data )"		1000845	1					
ANR	1000919	CastTarget	struct sljit_memory_fragment *		1000845	0					
ANR	1000920	CallExpression	"SLJIT_MALLOC ( ABUF_SIZE , compiler -> allocator_data )"		1000845	1					
ANR	1000921	Callee	SLJIT_MALLOC		1000845	0					
ANR	1000922	Identifier	SLJIT_MALLOC		1000845	0					
ANR	1000923	ArgumentList	ABUF_SIZE		1000845	1					
ANR	1000924	Argument	ABUF_SIZE		1000845	0					
ANR	1000925	Identifier	ABUF_SIZE		1000845	0					
ANR	1000926	Argument	compiler -> allocator_data		1000845	1					
ANR	1000927	PtrMemberAccess	compiler -> allocator_data		1000845	0					
ANR	1000928	Identifier	compiler		1000845	0					
ANR	1000929	Identifier	allocator_data		1000845	1					
ANR	1000930	ExpressionStatement	PTR_FAIL_IF_NULL ( new_frag )	517:1:14716:14742	1000845	30	True				
ANR	1000931	CallExpression	PTR_FAIL_IF_NULL ( new_frag )		1000845	0					
ANR	1000932	Callee	PTR_FAIL_IF_NULL		1000845	0					
ANR	1000933	Identifier	PTR_FAIL_IF_NULL		1000845	0					
ANR	1000934	ArgumentList	new_frag		1000845	1					
ANR	1000935	Argument	new_frag		1000845	0					
ANR	1000936	Identifier	new_frag		1000845	0					
ANR	1000937	ExpressionStatement	new_frag -> next = compiler -> abuf	518:1:14745:14776	1000845	31	True				
ANR	1000938	AssignmentExpression	new_frag -> next = compiler -> abuf		1000845	0		=			
ANR	1000939	PtrMemberAccess	new_frag -> next		1000845	0					
ANR	1000940	Identifier	new_frag		1000845	0					
ANR	1000941	Identifier	next		1000845	1					
ANR	1000942	PtrMemberAccess	compiler -> abuf		1000845	1					
ANR	1000943	Identifier	compiler		1000845	0					
ANR	1000944	Identifier	abuf		1000845	1					
ANR	1000945	ExpressionStatement	compiler -> abuf = new_frag	519:1:14779:14804	1000845	32	True				
ANR	1000946	AssignmentExpression	compiler -> abuf = new_frag		1000845	0		=			
ANR	1000947	PtrMemberAccess	compiler -> abuf		1000845	0					
ANR	1000948	Identifier	compiler		1000845	0					
ANR	1000949	Identifier	abuf		1000845	1					
ANR	1000950	Identifier	new_frag		1000845	1					
ANR	1000951	ExpressionStatement	new_frag -> used_size = size	520:1:14807:14833	1000845	33	True				
ANR	1000952	AssignmentExpression	new_frag -> used_size = size		1000845	0		=			
ANR	1000953	PtrMemberAccess	new_frag -> used_size		1000845	0					
ANR	1000954	Identifier	new_frag		1000845	0					
ANR	1000955	Identifier	used_size		1000845	1					
ANR	1000956	Identifier	size		1000845	1					
ANR	1000957	ReturnStatement	return new_frag -> memory ;	521:1:14836:14859	1000845	34	True				
ANR	1000958	PtrMemberAccess	new_frag -> memory		1000845	0					
ANR	1000959	Identifier	new_frag		1000845	0					
ANR	1000960	Identifier	memory		1000845	1					
ANR	1000961	ReturnType	static void *		1000845	1					
ANR	1000962	Identifier	ensure_abuf		1000845	2					
ANR	1000963	ParameterList	"struct sljit_compiler * compiler , sljit_uw size"		1000845	3					
ANR	1000964	Parameter	struct sljit_compiler * compiler	505:25:14250:14280	1000845	0	True				
ANR	1000965	ParameterType	struct sljit_compiler *		1000845	0					
ANR	1000966	Identifier	compiler		1000845	1					
ANR	1000967	Parameter	sljit_uw size	505:58:14283:14295	1000845	1	True				
ANR	1000968	ParameterType	sljit_uw		1000845	0					
ANR	1000969	Identifier	size		1000845	1					
ANR	1000970	CFGEntryNode	ENTRY		1000845		True				
ANR	1000971	CFGExitNode	EXIT		1000845		True				
ANR	1000972	Symbol	ret		1000845						
ANR	1000973	Symbol	SLJIT_MALLOC		1000845						
ANR	1000974	Symbol	new_frag -> next		1000845						
ANR	1000975	Symbol	new_frag -> memory		1000845						
ANR	1000976	Symbol	new_frag		1000845						
ANR	1000977	Symbol	compiler -> abuf -> memory		1000845						
ANR	1000978	Symbol	* compiler -> abuf		1000845						
ANR	1000979	Symbol	* compiler		1000845						
ANR	1000980	Symbol	* new_frag		1000845						
ANR	1000981	Symbol	* * compiler		1000845						
ANR	1000982	Symbol	compiler -> abuf -> used_size		1000845						
ANR	1000983	Symbol	compiler -> abuf		1000845						
ANR	1000984	Symbol	new_frag -> used_size		1000845						
ANR	1000985	Symbol	size		1000845						
ANR	1000986	Symbol	compiler -> allocator_data		1000845						
ANR	1000987	Symbol	ABUF_SIZE		1000845						
ANR	1000988	Symbol	compiler		1000845						
ANR	1000989	Function	sljit_alloc_memory	524:0:14864:15241							
ANR	1000990	FunctionDef	"sljit_alloc_memory (struct sljit_compiler * compiler , sljit_si size)"		1000989	0					
ANR	1000991	CompoundStatement		525:0:14962:15241	1000989	0					
ANR	1000992	ExpressionStatement	CHECK_ERROR_PTR ( )	526:1:14965:14982	1000989	0	True				
ANR	1000993	CallExpression	CHECK_ERROR_PTR ( )		1000989	0					
ANR	1000994	Callee	CHECK_ERROR_PTR		1000989	0					
ANR	1000995	Identifier	CHECK_ERROR_PTR		1000989	0					
ANR	1000996	ArgumentList			1000989	1					
ANR	1000997	IfStatement	if ( size <= 0 || size > 128 )		1000989	1					
ANR	1000998	Condition	size <= 0 || size > 128	529:5:15057:15079	1000989	0	True				
ANR	1000999	OrExpression	size <= 0 || size > 128		1000989	0		||			
ANR	1001000	RelationalExpression	size <= 0		1000989	0		<=			
ANR	1001001	Identifier	size		1000989	0					
ANR	1001002	PrimaryExpression	0		1000989	1					
ANR	1001003	RelationalExpression	size > 128		1000989	1		>			
ANR	1001004	Identifier	size		1000989	0					
ANR	1001005	PrimaryExpression	128		1000989	1					
ANR	1001006	ReturnStatement	return NULL ;	530:2:15084:15095	1000989	1	True				
ANR	1001007	Identifier	NULL		1000989	0					
ANR	1001008	ExpressionStatement	size = ( size + 7 ) & ~7	531:1:15098:15120	1000989	2	True				
ANR	1001009	AssignmentExpression	size = ( size + 7 ) & ~7		1000989	0		=			
ANR	1001010	Identifier	size		1000989	0					
ANR	1001011	BitAndExpression	( size + 7 ) & ~7		1000989	1		&			
ANR	1001012	AdditiveExpression	size + 7		1000989	0		+			
ANR	1001013	Identifier	size		1000989	0					
ANR	1001014	PrimaryExpression	7		1000989	1					
ANR	1001015	Identifier	~7		1000989	1					
ANR	1001016	ReturnStatement	"return ensure_abuf ( compiler , size ) ;"	537:1:15205:15239	1000989	3	True				
ANR	1001017	CallExpression	"ensure_abuf ( compiler , size )"		1000989	0					
ANR	1001018	Callee	ensure_abuf		1000989	0					
ANR	1001019	Identifier	ensure_abuf		1000989	0					
ANR	1001020	ArgumentList	compiler		1000989	1					
ANR	1001021	Argument	compiler		1000989	0					
ANR	1001022	Identifier	compiler		1000989	0					
ANR	1001023	Argument	size		1000989	1					
ANR	1001024	Identifier	size		1000989	0					
ANR	1001025	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1000989	1					
ANR	1001026	Identifier	sljit_alloc_memory		1000989	2					
ANR	1001027	ParameterList	"struct sljit_compiler * compiler , sljit_si size"		1000989	3					
ANR	1001028	Parameter	struct sljit_compiler * compiler	524:50:14914:14944	1000989	0	True				
ANR	1001029	ParameterType	struct sljit_compiler *		1000989	0					
ANR	1001030	Identifier	compiler		1000989	1					
ANR	1001031	Parameter	sljit_si size	524:83:14947:14959	1000989	1	True				
ANR	1001032	ParameterType	sljit_si		1000989	0					
ANR	1001033	Identifier	size		1000989	1					
ANR	1001034	CFGEntryNode	ENTRY		1000989		True				
ANR	1001035	CFGExitNode	EXIT		1000989		True				
ANR	1001036	Symbol	NULL		1000989						
ANR	1001037	Symbol	size		1000989						
ANR	1001038	Symbol	~7		1000989						
ANR	1001039	Symbol	ensure_abuf		1000989						
ANR	1001040	Symbol	compiler		1000989						
ANR	1001041	Function	reverse_buf	540:0:15244:15569							
ANR	1001042	FunctionDef	reverse_buf (struct sljit_compiler * compiler)		1001041	0					
ANR	1001043	CompoundStatement		541:0:15314:15569	1001041	0					
ANR	1001044	IdentifierDeclStatement	struct sljit_memory_fragment * buf = compiler -> buf ;	542:1:15317:15366	1001041	0	True				
ANR	1001045	IdentifierDecl	* buf = compiler -> buf		1001041	0					
ANR	1001046	IdentifierDeclType	struct sljit_memory_fragment *		1001041	0					
ANR	1001047	Identifier	buf		1001041	1					
ANR	1001048	AssignmentExpression	* buf = compiler -> buf		1001041	2		=			
ANR	1001049	Identifier	buf		1001041	0					
ANR	1001050	PtrMemberAccess	compiler -> buf		1001041	1					
ANR	1001051	Identifier	compiler		1001041	0					
ANR	1001052	Identifier	buf		1001041	1					
ANR	1001053	IdentifierDeclStatement	struct sljit_memory_fragment * prev = NULL ;	543:1:15369:15410	1001041	1	True				
ANR	1001054	IdentifierDecl	* prev = NULL		1001041	0					
ANR	1001055	IdentifierDeclType	struct sljit_memory_fragment *		1001041	0					
ANR	1001056	Identifier	prev		1001041	1					
ANR	1001057	AssignmentExpression	* prev = NULL		1001041	2		=			
ANR	1001058	Identifier	NULL		1001041	0					
ANR	1001059	Identifier	NULL		1001041	1					
ANR	1001060	IdentifierDeclStatement	struct sljit_memory_fragment * tmp ;	544:1:15413:15446	1001041	2	True				
ANR	1001061	IdentifierDecl	* tmp		1001041	0					
ANR	1001062	IdentifierDeclType	struct sljit_memory_fragment *		1001041	0					
ANR	1001063	Identifier	tmp		1001041	1					
ANR	1001064	DoStatement	do		1001041	3					
ANR	1001065	CompoundStatement		6:4:138:138	1001041	0					
ANR	1001066	ExpressionStatement	tmp = buf -> next	547:2:15457:15472	1001041	0	True				
ANR	1001067	AssignmentExpression	tmp = buf -> next		1001041	0		=			
ANR	1001068	Identifier	tmp		1001041	0					
ANR	1001069	PtrMemberAccess	buf -> next		1001041	1					
ANR	1001070	Identifier	buf		1001041	0					
ANR	1001071	Identifier	next		1001041	1					
ANR	1001072	ExpressionStatement	buf -> next = prev	548:2:15476:15492	1001041	1	True				
ANR	1001073	AssignmentExpression	buf -> next = prev		1001041	0		=			
ANR	1001074	PtrMemberAccess	buf -> next		1001041	0					
ANR	1001075	Identifier	buf		1001041	0					
ANR	1001076	Identifier	next		1001041	1					
ANR	1001077	Identifier	prev		1001041	1					
ANR	1001078	ExpressionStatement	prev = buf	549:2:15496:15506	1001041	2	True				
ANR	1001079	AssignmentExpression	prev = buf		1001041	0		=			
ANR	1001080	Identifier	prev		1001041	0					
ANR	1001081	Identifier	buf		1001041	1					
ANR	1001082	ExpressionStatement	buf = tmp	550:2:15510:15519	1001041	3	True				
ANR	1001083	AssignmentExpression	buf = tmp		1001041	0		=			
ANR	1001084	Identifier	buf		1001041	0					
ANR	1001085	Identifier	tmp		1001041	1					
ANR	1001086	Condition	buf != NULL	551:10:15531:15541	1001041	1	True				
ANR	1001087	EqualityExpression	buf != NULL		1001041	0		!=			
ANR	1001088	Identifier	buf		1001041	0					
ANR	1001089	Identifier	NULL		1001041	1					
ANR	1001090	ExpressionStatement	compiler -> buf = prev	553:1:15547:15567	1001041	4	True				
ANR	1001091	AssignmentExpression	compiler -> buf = prev		1001041	0		=			
ANR	1001092	PtrMemberAccess	compiler -> buf		1001041	0					
ANR	1001093	Identifier	compiler		1001041	0					
ANR	1001094	Identifier	buf		1001041	1					
ANR	1001095	Identifier	prev		1001041	1					
ANR	1001096	ReturnType	static SLJIT_INLINE void		1001041	1					
ANR	1001097	Identifier	reverse_buf		1001041	2					
ANR	1001098	ParameterList	struct sljit_compiler * compiler		1001041	3					
ANR	1001099	Parameter	struct sljit_compiler * compiler	540:37:15281:15311	1001041	0	True				
ANR	1001100	ParameterType	struct sljit_compiler *		1001041	0					
ANR	1001101	Identifier	compiler		1001041	1					
ANR	1001102	CFGEntryNode	ENTRY		1001041		True				
ANR	1001103	CFGExitNode	EXIT		1001041		True				
ANR	1001104	Symbol	buf		1001041						
ANR	1001105	Symbol	* buf		1001041						
ANR	1001106	Symbol	NULL		1001041						
ANR	1001107	Symbol	compiler -> buf		1001041						
ANR	1001108	Symbol	tmp		1001041						
ANR	1001109	Symbol	prev		1001041						
ANR	1001110	Symbol	buf -> next		1001041						
ANR	1001111	Symbol	* compiler		1001041						
ANR	1001112	Symbol	compiler		1001041						
ANR	1001113	Function	set_emit_enter	556:0:15572:16106							
ANR	1001114	FunctionDef	"set_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1001113	0					
ANR	1001115	CompoundStatement		559:0:15777:16106	1001113	0					
ANR	1001116	ExpressionStatement	SLJIT_UNUSED_ARG ( args )	560:1:15780:15802	1001113	0	True				
ANR	1001117	CallExpression	SLJIT_UNUSED_ARG ( args )		1001113	0					
ANR	1001118	Callee	SLJIT_UNUSED_ARG		1001113	0					
ANR	1001119	Identifier	SLJIT_UNUSED_ARG		1001113	0					
ANR	1001120	ArgumentList	args		1001113	1					
ANR	1001121	Argument	args		1001113	0					
ANR	1001122	Identifier	args		1001113	0					
ANR	1001123	ExpressionStatement	SLJIT_UNUSED_ARG ( local_size )	561:1:15805:15833	1001113	1	True				
ANR	1001124	CallExpression	SLJIT_UNUSED_ARG ( local_size )		1001113	0					
ANR	1001125	Callee	SLJIT_UNUSED_ARG		1001113	0					
ANR	1001126	Identifier	SLJIT_UNUSED_ARG		1001113	0					
ANR	1001127	ArgumentList	local_size		1001113	1					
ANR	1001128	Argument	local_size		1001113	0					
ANR	1001129	Identifier	local_size		1001113	0					
ANR	1001130	ExpressionStatement	compiler -> options = options	563:1:15837:15864	1001113	2	True				
ANR	1001131	AssignmentExpression	compiler -> options = options		1001113	0		=			
ANR	1001132	PtrMemberAccess	compiler -> options		1001113	0					
ANR	1001133	Identifier	compiler		1001113	0					
ANR	1001134	Identifier	options		1001113	1					
ANR	1001135	Identifier	options		1001113	1					
ANR	1001136	ExpressionStatement	compiler -> scratches = scratches	564:1:15867:15898	1001113	3	True				
ANR	1001137	AssignmentExpression	compiler -> scratches = scratches		1001113	0		=			
ANR	1001138	PtrMemberAccess	compiler -> scratches		1001113	0					
ANR	1001139	Identifier	compiler		1001113	0					
ANR	1001140	Identifier	scratches		1001113	1					
ANR	1001141	Identifier	scratches		1001113	1					
ANR	1001142	ExpressionStatement	compiler -> saveds = saveds	565:1:15901:15926	1001113	4	True				
ANR	1001143	AssignmentExpression	compiler -> saveds = saveds		1001113	0		=			
ANR	1001144	PtrMemberAccess	compiler -> saveds		1001113	0					
ANR	1001145	Identifier	compiler		1001113	0					
ANR	1001146	Identifier	saveds		1001113	1					
ANR	1001147	Identifier	saveds		1001113	1					
ANR	1001148	ExpressionStatement	compiler -> fscratches = fscratches	566:1:15929:15962	1001113	5	True				
ANR	1001149	AssignmentExpression	compiler -> fscratches = fscratches		1001113	0		=			
ANR	1001150	PtrMemberAccess	compiler -> fscratches		1001113	0					
ANR	1001151	Identifier	compiler		1001113	0					
ANR	1001152	Identifier	fscratches		1001113	1					
ANR	1001153	Identifier	fscratches		1001113	1					
ANR	1001154	ExpressionStatement	compiler -> fsaveds = fsaveds	567:1:15965:15992	1001113	6	True				
ANR	1001155	AssignmentExpression	compiler -> fsaveds = fsaveds		1001113	0		=			
ANR	1001156	PtrMemberAccess	compiler -> fsaveds		1001113	0					
ANR	1001157	Identifier	compiler		1001113	0					
ANR	1001158	Identifier	fsaveds		1001113	1					
ANR	1001159	Identifier	fsaveds		1001113	1					
ANR	1001160	ExpressionStatement	compiler -> logical_local_size = local_size	569:1:16056:16097	1001113	7	True				
ANR	1001161	AssignmentExpression	compiler -> logical_local_size = local_size		1001113	0		=			
ANR	1001162	PtrMemberAccess	compiler -> logical_local_size		1001113	0					
ANR	1001163	Identifier	compiler		1001113	0					
ANR	1001164	Identifier	logical_local_size		1001113	1					
ANR	1001165	Identifier	local_size		1001113	1					
ANR	1001166	ReturnType	static SLJIT_INLINE void		1001113	1					
ANR	1001167	Identifier	set_emit_enter		1001113	2					
ANR	1001168	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1001113	3					
ANR	1001169	Parameter	struct sljit_compiler * compiler	556:40:15612:15642	1001113	0	True				
ANR	1001170	ParameterType	struct sljit_compiler *		1001113	0					
ANR	1001171	Identifier	compiler		1001113	1					
ANR	1001172	Parameter	sljit_si options	557:1:15646:15661	1001113	1	True				
ANR	1001173	ParameterType	sljit_si		1001113	0					
ANR	1001174	Identifier	options		1001113	1					
ANR	1001175	Parameter	sljit_si args	557:19:15664:15676	1001113	2	True				
ANR	1001176	ParameterType	sljit_si		1001113	0					
ANR	1001177	Identifier	args		1001113	1					
ANR	1001178	Parameter	sljit_si scratches	557:34:15679:15696	1001113	3	True				
ANR	1001179	ParameterType	sljit_si		1001113	0					
ANR	1001180	Identifier	scratches		1001113	1					
ANR	1001181	Parameter	sljit_si saveds	557:54:15699:15713	1001113	4	True				
ANR	1001182	ParameterType	sljit_si		1001113	0					
ANR	1001183	Identifier	saveds		1001113	1					
ANR	1001184	Parameter	sljit_si fscratches	558:1:15717:15735	1001113	5	True				
ANR	1001185	ParameterType	sljit_si		1001113	0					
ANR	1001186	Identifier	fscratches		1001113	1					
ANR	1001187	Parameter	sljit_si fsaveds	558:22:15738:15753	1001113	6	True				
ANR	1001188	ParameterType	sljit_si		1001113	0					
ANR	1001189	Identifier	fsaveds		1001113	1					
ANR	1001190	Parameter	sljit_si local_size	558:40:15756:15774	1001113	7	True				
ANR	1001191	ParameterType	sljit_si		1001113	0					
ANR	1001192	Identifier	local_size		1001113	1					
ANR	1001193	CFGEntryNode	ENTRY		1001113		True				
ANR	1001194	CFGExitNode	EXIT		1001113		True				
ANR	1001195	Symbol	local_size		1001113						
ANR	1001196	Symbol	compiler -> fsaveds		1001113						
ANR	1001197	Symbol	compiler -> scratches		1001113						
ANR	1001198	Symbol	scratches		1001113						
ANR	1001199	Symbol	saveds		1001113						
ANR	1001200	Symbol	* compiler		1001113						
ANR	1001201	Symbol	args		1001113						
ANR	1001202	Symbol	fscratches		1001113						
ANR	1001203	Symbol	compiler -> saveds		1001113						
ANR	1001204	Symbol	fsaveds		1001113						
ANR	1001205	Symbol	compiler -> options		1001113						
ANR	1001206	Symbol	options		1001113						
ANR	1001207	Symbol	compiler -> logical_local_size		1001113						
ANR	1001208	Symbol	compiler		1001113						
ANR	1001209	Symbol	compiler -> fscratches		1001113						
ANR	1001210	Function	set_set_context	573:0:16109:16644							
ANR	1001211	FunctionDef	"set_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1001210	0					
ANR	1001212	CompoundStatement		576:0:16315:16644	1001210	0					
ANR	1001213	ExpressionStatement	SLJIT_UNUSED_ARG ( args )	577:1:16318:16340	1001210	0	True				
ANR	1001214	CallExpression	SLJIT_UNUSED_ARG ( args )		1001210	0					
ANR	1001215	Callee	SLJIT_UNUSED_ARG		1001210	0					
ANR	1001216	Identifier	SLJIT_UNUSED_ARG		1001210	0					
ANR	1001217	ArgumentList	args		1001210	1					
ANR	1001218	Argument	args		1001210	0					
ANR	1001219	Identifier	args		1001210	0					
ANR	1001220	ExpressionStatement	SLJIT_UNUSED_ARG ( local_size )	578:1:16343:16371	1001210	1	True				
ANR	1001221	CallExpression	SLJIT_UNUSED_ARG ( local_size )		1001210	0					
ANR	1001222	Callee	SLJIT_UNUSED_ARG		1001210	0					
ANR	1001223	Identifier	SLJIT_UNUSED_ARG		1001210	0					
ANR	1001224	ArgumentList	local_size		1001210	1					
ANR	1001225	Argument	local_size		1001210	0					
ANR	1001226	Identifier	local_size		1001210	0					
ANR	1001227	ExpressionStatement	compiler -> options = options	580:1:16375:16402	1001210	2	True				
ANR	1001228	AssignmentExpression	compiler -> options = options		1001210	0		=			
ANR	1001229	PtrMemberAccess	compiler -> options		1001210	0					
ANR	1001230	Identifier	compiler		1001210	0					
ANR	1001231	Identifier	options		1001210	1					
ANR	1001232	Identifier	options		1001210	1					
ANR	1001233	ExpressionStatement	compiler -> scratches = scratches	581:1:16405:16436	1001210	3	True				
ANR	1001234	AssignmentExpression	compiler -> scratches = scratches		1001210	0		=			
ANR	1001235	PtrMemberAccess	compiler -> scratches		1001210	0					
ANR	1001236	Identifier	compiler		1001210	0					
ANR	1001237	Identifier	scratches		1001210	1					
ANR	1001238	Identifier	scratches		1001210	1					
ANR	1001239	ExpressionStatement	compiler -> saveds = saveds	582:1:16439:16464	1001210	4	True				
ANR	1001240	AssignmentExpression	compiler -> saveds = saveds		1001210	0		=			
ANR	1001241	PtrMemberAccess	compiler -> saveds		1001210	0					
ANR	1001242	Identifier	compiler		1001210	0					
ANR	1001243	Identifier	saveds		1001210	1					
ANR	1001244	Identifier	saveds		1001210	1					
ANR	1001245	ExpressionStatement	compiler -> fscratches = fscratches	583:1:16467:16500	1001210	5	True				
ANR	1001246	AssignmentExpression	compiler -> fscratches = fscratches		1001210	0		=			
ANR	1001247	PtrMemberAccess	compiler -> fscratches		1001210	0					
ANR	1001248	Identifier	compiler		1001210	0					
ANR	1001249	Identifier	fscratches		1001210	1					
ANR	1001250	Identifier	fscratches		1001210	1					
ANR	1001251	ExpressionStatement	compiler -> fsaveds = fsaveds	584:1:16503:16530	1001210	6	True				
ANR	1001252	AssignmentExpression	compiler -> fsaveds = fsaveds		1001210	0		=			
ANR	1001253	PtrMemberAccess	compiler -> fsaveds		1001210	0					
ANR	1001254	Identifier	compiler		1001210	0					
ANR	1001255	Identifier	fsaveds		1001210	1					
ANR	1001256	Identifier	fsaveds		1001210	1					
ANR	1001257	ExpressionStatement	compiler -> logical_local_size = local_size	586:1:16594:16635	1001210	7	True				
ANR	1001258	AssignmentExpression	compiler -> logical_local_size = local_size		1001210	0		=			
ANR	1001259	PtrMemberAccess	compiler -> logical_local_size		1001210	0					
ANR	1001260	Identifier	compiler		1001210	0					
ANR	1001261	Identifier	logical_local_size		1001210	1					
ANR	1001262	Identifier	local_size		1001210	1					
ANR	1001263	ReturnType	static SLJIT_INLINE void		1001210	1					
ANR	1001264	Identifier	set_set_context		1001210	2					
ANR	1001265	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1001210	3					
ANR	1001266	Parameter	struct sljit_compiler * compiler	573:41:16150:16180	1001210	0	True				
ANR	1001267	ParameterType	struct sljit_compiler *		1001210	0					
ANR	1001268	Identifier	compiler		1001210	1					
ANR	1001269	Parameter	sljit_si options	574:1:16184:16199	1001210	1	True				
ANR	1001270	ParameterType	sljit_si		1001210	0					
ANR	1001271	Identifier	options		1001210	1					
ANR	1001272	Parameter	sljit_si args	574:19:16202:16214	1001210	2	True				
ANR	1001273	ParameterType	sljit_si		1001210	0					
ANR	1001274	Identifier	args		1001210	1					
ANR	1001275	Parameter	sljit_si scratches	574:34:16217:16234	1001210	3	True				
ANR	1001276	ParameterType	sljit_si		1001210	0					
ANR	1001277	Identifier	scratches		1001210	1					
ANR	1001278	Parameter	sljit_si saveds	574:54:16237:16251	1001210	4	True				
ANR	1001279	ParameterType	sljit_si		1001210	0					
ANR	1001280	Identifier	saveds		1001210	1					
ANR	1001281	Parameter	sljit_si fscratches	575:1:16255:16273	1001210	5	True				
ANR	1001282	ParameterType	sljit_si		1001210	0					
ANR	1001283	Identifier	fscratches		1001210	1					
ANR	1001284	Parameter	sljit_si fsaveds	575:22:16276:16291	1001210	6	True				
ANR	1001285	ParameterType	sljit_si		1001210	0					
ANR	1001286	Identifier	fsaveds		1001210	1					
ANR	1001287	Parameter	sljit_si local_size	575:40:16294:16312	1001210	7	True				
ANR	1001288	ParameterType	sljit_si		1001210	0					
ANR	1001289	Identifier	local_size		1001210	1					
ANR	1001290	CFGEntryNode	ENTRY		1001210		True				
ANR	1001291	CFGExitNode	EXIT		1001210		True				
ANR	1001292	Symbol	local_size		1001210						
ANR	1001293	Symbol	compiler -> fsaveds		1001210						
ANR	1001294	Symbol	compiler -> scratches		1001210						
ANR	1001295	Symbol	scratches		1001210						
ANR	1001296	Symbol	saveds		1001210						
ANR	1001297	Symbol	* compiler		1001210						
ANR	1001298	Symbol	args		1001210						
ANR	1001299	Symbol	fscratches		1001210						
ANR	1001300	Symbol	compiler -> saveds		1001210						
ANR	1001301	Symbol	fsaveds		1001210						
ANR	1001302	Symbol	compiler -> options		1001210						
ANR	1001303	Symbol	options		1001210						
ANR	1001304	Symbol	compiler -> logical_local_size		1001210						
ANR	1001305	Symbol	compiler		1001210						
ANR	1001306	Symbol	compiler -> fscratches		1001210						
ANR	1001307	Function	set_label	590:0:16647:16926							
ANR	1001308	FunctionDef	"set_label (struct sljit_label * label , struct sljit_compiler * compiler)"		1001307	0					
ANR	1001309	CompoundStatement		591:0:16742:16926	1001307	0					
ANR	1001310	ExpressionStatement	label -> next = NULL	592:1:16745:16763	1001307	0	True				
ANR	1001311	AssignmentExpression	label -> next = NULL		1001307	0		=			
ANR	1001312	PtrMemberAccess	label -> next		1001307	0					
ANR	1001313	Identifier	label		1001307	0					
ANR	1001314	Identifier	next		1001307	1					
ANR	1001315	Identifier	NULL		1001307	1					
ANR	1001316	ExpressionStatement	label -> size = compiler -> size	593:1:16766:16794	1001307	1	True				
ANR	1001317	AssignmentExpression	label -> size = compiler -> size		1001307	0		=			
ANR	1001318	PtrMemberAccess	label -> size		1001307	0					
ANR	1001319	Identifier	label		1001307	0					
ANR	1001320	Identifier	size		1001307	1					
ANR	1001321	PtrMemberAccess	compiler -> size		1001307	1					
ANR	1001322	Identifier	compiler		1001307	0					
ANR	1001323	Identifier	size		1001307	1					
ANR	1001324	IfStatement	if ( compiler -> last_label )		1001307	2					
ANR	1001325	Condition	compiler -> last_label	594:5:16801:16820	1001307	0	True				
ANR	1001326	PtrMemberAccess	compiler -> last_label		1001307	0					
ANR	1001327	Identifier	compiler		1001307	0					
ANR	1001328	Identifier	last_label		1001307	1					
ANR	1001329	ExpressionStatement	compiler -> last_label -> next = label	595:2:16825:16859	1001307	1	True				
ANR	1001330	AssignmentExpression	compiler -> last_label -> next = label		1001307	0		=			
ANR	1001331	PtrMemberAccess	compiler -> last_label -> next		1001307	0					
ANR	1001332	PtrMemberAccess	compiler -> last_label		1001307	0					
ANR	1001333	Identifier	compiler		1001307	0					
ANR	1001334	Identifier	last_label		1001307	1					
ANR	1001335	Identifier	next		1001307	1					
ANR	1001336	Identifier	label		1001307	1					
ANR	1001337	ElseStatement	else		1001307	0					
ANR	1001338	ExpressionStatement	compiler -> labels = label	597:2:16869:16893	1001307	0	True				
ANR	1001339	AssignmentExpression	compiler -> labels = label		1001307	0		=			
ANR	1001340	PtrMemberAccess	compiler -> labels		1001307	0					
ANR	1001341	Identifier	compiler		1001307	0					
ANR	1001342	Identifier	labels		1001307	1					
ANR	1001343	Identifier	label		1001307	1					
ANR	1001344	ExpressionStatement	compiler -> last_label = label	598:1:16896:16924	1001307	3	True				
ANR	1001345	AssignmentExpression	compiler -> last_label = label		1001307	0		=			
ANR	1001346	PtrMemberAccess	compiler -> last_label		1001307	0					
ANR	1001347	Identifier	compiler		1001307	0					
ANR	1001348	Identifier	last_label		1001307	1					
ANR	1001349	Identifier	label		1001307	1					
ANR	1001350	ReturnType	static SLJIT_INLINE void		1001307	1					
ANR	1001351	Identifier	set_label		1001307	2					
ANR	1001352	ParameterList	"struct sljit_label * label , struct sljit_compiler * compiler"		1001307	3					
ANR	1001353	Parameter	struct sljit_label * label	590:35:16682:16706	1001307	0	True				
ANR	1001354	ParameterType	struct sljit_label *		1001307	0					
ANR	1001355	Identifier	label		1001307	1					
ANR	1001356	Parameter	struct sljit_compiler * compiler	590:62:16709:16739	1001307	1	True				
ANR	1001357	ParameterType	struct sljit_compiler *		1001307	0					
ANR	1001358	Identifier	compiler		1001307	1					
ANR	1001359	CFGEntryNode	ENTRY		1001307		True				
ANR	1001360	CFGExitNode	EXIT		1001307		True				
ANR	1001361	Symbol	* compiler -> last_label		1001307						
ANR	1001362	Symbol	compiler -> last_label		1001307						
ANR	1001363	Symbol	NULL		1001307						
ANR	1001364	Symbol	compiler -> labels		1001307						
ANR	1001365	Symbol	label -> next		1001307						
ANR	1001366	Symbol	label		1001307						
ANR	1001367	Symbol	* compiler		1001307						
ANR	1001368	Symbol	compiler -> last_label -> next		1001307						
ANR	1001369	Symbol	* * compiler		1001307						
ANR	1001370	Symbol	compiler -> size		1001307						
ANR	1001371	Symbol	label -> size		1001307						
ANR	1001372	Symbol	compiler		1001307						
ANR	1001373	Symbol	* label		1001307						
ANR	1001374	Function	set_jump	601:0:16929:17204							
ANR	1001375	FunctionDef	"set_jump (struct sljit_jump * jump , struct sljit_compiler * compiler , sljit_si flags)"		1001374	0					
ANR	1001376	CompoundStatement		602:0:17037:17204	1001374	0					
ANR	1001377	ExpressionStatement	jump -> next = NULL	603:1:17040:17057	1001374	0	True				
ANR	1001378	AssignmentExpression	jump -> next = NULL		1001374	0		=			
ANR	1001379	PtrMemberAccess	jump -> next		1001374	0					
ANR	1001380	Identifier	jump		1001374	0					
ANR	1001381	Identifier	next		1001374	1					
ANR	1001382	Identifier	NULL		1001374	1					
ANR	1001383	ExpressionStatement	jump -> flags = flags	604:1:17060:17079	1001374	1	True				
ANR	1001384	AssignmentExpression	jump -> flags = flags		1001374	0		=			
ANR	1001385	PtrMemberAccess	jump -> flags		1001374	0					
ANR	1001386	Identifier	jump		1001374	0					
ANR	1001387	Identifier	flags		1001374	1					
ANR	1001388	Identifier	flags		1001374	1					
ANR	1001389	IfStatement	if ( compiler -> last_jump )		1001374	2					
ANR	1001390	Condition	compiler -> last_jump	605:5:17086:17104	1001374	0	True				
ANR	1001391	PtrMemberAccess	compiler -> last_jump		1001374	0					
ANR	1001392	Identifier	compiler		1001374	0					
ANR	1001393	Identifier	last_jump		1001374	1					
ANR	1001394	ExpressionStatement	compiler -> last_jump -> next = jump	606:2:17109:17141	1001374	1	True				
ANR	1001395	AssignmentExpression	compiler -> last_jump -> next = jump		1001374	0		=			
ANR	1001396	PtrMemberAccess	compiler -> last_jump -> next		1001374	0					
ANR	1001397	PtrMemberAccess	compiler -> last_jump		1001374	0					
ANR	1001398	Identifier	compiler		1001374	0					
ANR	1001399	Identifier	last_jump		1001374	1					
ANR	1001400	Identifier	next		1001374	1					
ANR	1001401	Identifier	jump		1001374	1					
ANR	1001402	ElseStatement	else		1001374	0					
ANR	1001403	ExpressionStatement	compiler -> jumps = jump	608:2:17151:17173	1001374	0	True				
ANR	1001404	AssignmentExpression	compiler -> jumps = jump		1001374	0		=			
ANR	1001405	PtrMemberAccess	compiler -> jumps		1001374	0					
ANR	1001406	Identifier	compiler		1001374	0					
ANR	1001407	Identifier	jumps		1001374	1					
ANR	1001408	Identifier	jump		1001374	1					
ANR	1001409	ExpressionStatement	compiler -> last_jump = jump	609:1:17176:17202	1001374	3	True				
ANR	1001410	AssignmentExpression	compiler -> last_jump = jump		1001374	0		=			
ANR	1001411	PtrMemberAccess	compiler -> last_jump		1001374	0					
ANR	1001412	Identifier	compiler		1001374	0					
ANR	1001413	Identifier	last_jump		1001374	1					
ANR	1001414	Identifier	jump		1001374	1					
ANR	1001415	ReturnType	static SLJIT_INLINE void		1001374	1					
ANR	1001416	Identifier	set_jump		1001374	2					
ANR	1001417	ParameterList	"struct sljit_jump * jump , struct sljit_compiler * compiler , sljit_si flags"		1001374	3					
ANR	1001418	Parameter	struct sljit_jump * jump	601:34:16963:16985	1001374	0	True				
ANR	1001419	ParameterType	struct sljit_jump *		1001374	0					
ANR	1001420	Identifier	jump		1001374	1					
ANR	1001421	Parameter	struct sljit_compiler * compiler	601:59:16988:17018	1001374	1	True				
ANR	1001422	ParameterType	struct sljit_compiler *		1001374	0					
ANR	1001423	Identifier	compiler		1001374	1					
ANR	1001424	Parameter	sljit_si flags	601:92:17021:17034	1001374	2	True				
ANR	1001425	ParameterType	sljit_si		1001374	0					
ANR	1001426	Identifier	flags		1001374	1					
ANR	1001427	CFGEntryNode	ENTRY		1001374		True				
ANR	1001428	CFGExitNode	EXIT		1001374		True				
ANR	1001429	Symbol	NULL		1001374						
ANR	1001430	Symbol	* jump		1001374						
ANR	1001431	Symbol	flags		1001374						
ANR	1001432	Symbol	jump -> flags		1001374						
ANR	1001433	Symbol	* compiler		1001374						
ANR	1001434	Symbol	compiler -> last_jump		1001374						
ANR	1001435	Symbol	* compiler -> last_jump		1001374						
ANR	1001436	Symbol	* * compiler		1001374						
ANR	1001437	Symbol	compiler -> jumps		1001374						
ANR	1001438	Symbol	jump -> next		1001374						
ANR	1001439	Symbol	compiler -> last_jump -> next		1001374						
ANR	1001440	Symbol	compiler		1001374						
ANR	1001441	Symbol	jump		1001374						
ANR	1001442	Function	set_const	612:0:17207:17492							
ANR	1001443	FunctionDef	"set_const (struct sljit_const * const_ , struct sljit_compiler * compiler)"		1001442	0					
ANR	1001444	CompoundStatement		613:0:17303:17492	1001442	0					
ANR	1001445	ExpressionStatement	const_ -> next = NULL	614:1:17306:17325	1001442	0	True				
ANR	1001446	AssignmentExpression	const_ -> next = NULL		1001442	0		=			
ANR	1001447	PtrMemberAccess	const_ -> next		1001442	0					
ANR	1001448	Identifier	const_		1001442	0					
ANR	1001449	Identifier	next		1001442	1					
ANR	1001450	Identifier	NULL		1001442	1					
ANR	1001451	ExpressionStatement	const_ -> addr = compiler -> size	615:1:17328:17357	1001442	1	True				
ANR	1001452	AssignmentExpression	const_ -> addr = compiler -> size		1001442	0		=			
ANR	1001453	PtrMemberAccess	const_ -> addr		1001442	0					
ANR	1001454	Identifier	const_		1001442	0					
ANR	1001455	Identifier	addr		1001442	1					
ANR	1001456	PtrMemberAccess	compiler -> size		1001442	1					
ANR	1001457	Identifier	compiler		1001442	0					
ANR	1001458	Identifier	size		1001442	1					
ANR	1001459	IfStatement	if ( compiler -> last_const )		1001442	2					
ANR	1001460	Condition	compiler -> last_const	616:5:17364:17383	1001442	0	True				
ANR	1001461	PtrMemberAccess	compiler -> last_const		1001442	0					
ANR	1001462	Identifier	compiler		1001442	0					
ANR	1001463	Identifier	last_const		1001442	1					
ANR	1001464	ExpressionStatement	compiler -> last_const -> next = const_	617:2:17388:17423	1001442	1	True				
ANR	1001465	AssignmentExpression	compiler -> last_const -> next = const_		1001442	0		=			
ANR	1001466	PtrMemberAccess	compiler -> last_const -> next		1001442	0					
ANR	1001467	PtrMemberAccess	compiler -> last_const		1001442	0					
ANR	1001468	Identifier	compiler		1001442	0					
ANR	1001469	Identifier	last_const		1001442	1					
ANR	1001470	Identifier	next		1001442	1					
ANR	1001471	Identifier	const_		1001442	1					
ANR	1001472	ElseStatement	else		1001442	0					
ANR	1001473	ExpressionStatement	compiler -> consts = const_	619:2:17433:17458	1001442	0	True				
ANR	1001474	AssignmentExpression	compiler -> consts = const_		1001442	0		=			
ANR	1001475	PtrMemberAccess	compiler -> consts		1001442	0					
ANR	1001476	Identifier	compiler		1001442	0					
ANR	1001477	Identifier	consts		1001442	1					
ANR	1001478	Identifier	const_		1001442	1					
ANR	1001479	ExpressionStatement	compiler -> last_const = const_	620:1:17461:17490	1001442	3	True				
ANR	1001480	AssignmentExpression	compiler -> last_const = const_		1001442	0		=			
ANR	1001481	PtrMemberAccess	compiler -> last_const		1001442	0					
ANR	1001482	Identifier	compiler		1001442	0					
ANR	1001483	Identifier	last_const		1001442	1					
ANR	1001484	Identifier	const_		1001442	1					
ANR	1001485	ReturnType	static SLJIT_INLINE void		1001442	1					
ANR	1001486	Identifier	set_const		1001442	2					
ANR	1001487	ParameterList	"struct sljit_const * const_ , struct sljit_compiler * compiler"		1001442	3					
ANR	1001488	Parameter	struct sljit_const * const_	612:35:17242:17267	1001442	0	True				
ANR	1001489	ParameterType	struct sljit_const *		1001442	0					
ANR	1001490	Identifier	const_		1001442	1					
ANR	1001491	Parameter	struct sljit_compiler * compiler	612:63:17270:17300	1001442	1	True				
ANR	1001492	ParameterType	struct sljit_compiler *		1001442	0					
ANR	1001493	Identifier	compiler		1001442	1					
ANR	1001494	CFGEntryNode	ENTRY		1001442		True				
ANR	1001495	CFGExitNode	EXIT		1001442		True				
ANR	1001496	Symbol	const_		1001442						
ANR	1001497	Symbol	NULL		1001442						
ANR	1001498	Symbol	compiler -> consts		1001442						
ANR	1001499	Symbol	* compiler -> last_const		1001442						
ANR	1001500	Symbol	* const_		1001442						
ANR	1001501	Symbol	* compiler		1001442						
ANR	1001502	Symbol	compiler -> last_const		1001442						
ANR	1001503	Symbol	const_ -> next		1001442						
ANR	1001504	Symbol	const_ -> addr		1001442						
ANR	1001505	Symbol	* * compiler		1001442						
ANR	1001506	Symbol	compiler -> size		1001442						
ANR	1001507	Symbol	compiler -> last_const -> next		1001442						
ANR	1001508	Symbol	compiler		1001442						
ANR	1001509	Function	sljit_compiler_verbose	775:0:23129:23262							
ANR	1001510	FunctionDef	"sljit_compiler_verbose (struct sljit_compiler * compiler , FILE * verbose)"		1001509	0					
ANR	1001511	CompoundStatement		776:0:23230:23262	1001509	0					
ANR	1001512	ExpressionStatement	compiler -> verbose = verbose	777:1:23233:23260	1001509	0	True				
ANR	1001513	AssignmentExpression	compiler -> verbose = verbose		1001509	0		=			
ANR	1001514	PtrMemberAccess	compiler -> verbose		1001509	0					
ANR	1001515	Identifier	compiler		1001509	0					
ANR	1001516	Identifier	verbose		1001509	1					
ANR	1001517	Identifier	verbose		1001509	1					
ANR	1001518	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1001509	1					
ANR	1001519	Identifier	sljit_compiler_verbose		1001509	2					
ANR	1001520	ParameterList	"struct sljit_compiler * compiler , FILE * verbose"		1001509	3					
ANR	1001521	Parameter	struct sljit_compiler * compiler	775:53:23182:23212	1001509	0	True				
ANR	1001522	ParameterType	struct sljit_compiler *		1001509	0					
ANR	1001523	Identifier	compiler		1001509	1					
ANR	1001524	Parameter	FILE * verbose	775:86:23215:23227	1001509	1	True				
ANR	1001525	ParameterType	FILE *		1001509	0					
ANR	1001526	Identifier	verbose		1001509	1					
ANR	1001527	CFGEntryNode	ENTRY		1001509		True				
ANR	1001528	CFGExitNode	EXIT		1001509		True				
ANR	1001529	Symbol	* compiler		1001509						
ANR	1001530	Symbol	compiler		1001509						
ANR	1001531	Symbol	verbose		1001509						
ANR	1001532	Symbol	compiler -> verbose		1001509						
ANR	1001533	DeclStmt									
ANR	1001534	Decl							SLJIT_CONST char	SLJIT_CONST char * [ ]	op0_names
ANR	1001535	DeclStmt									
ANR	1001536	Decl							SLJIT_CONST char	SLJIT_CONST char * [ ]	op1_names
ANR	1001537	DeclStmt									
ANR	1001538	Decl							SLJIT_CONST char	SLJIT_CONST char * [ ]	op2_names
ANR	1001539	DeclStmt									
ANR	1001540	Decl							SLJIT_CONST char	SLJIT_CONST char * [ ]	fop1_names
ANR	1001541	DeclStmt									
ANR	1001542	Decl							SLJIT_CONST char	SLJIT_CONST char * [ ]	fop2_names
ANR	1001543	DeclStmt									
ANR	1001544	Decl							char	char * [ ]	jump_names
ANR	1001545	Function	check_sljit_generate_code	905:0:27452:27953							
ANR	1001546	FunctionDef	check_sljit_generate_code (struct sljit_compiler * compiler)		1001545	0					
ANR	1001547	CompoundStatement		906:0:27549:27953	1001545	0					
ANR	1001548	IdentifierDeclStatement	struct sljit_jump * jump ;	908:1:27613:27636	1001545	0	True				
ANR	1001549	IdentifierDecl	* jump		1001545	0					
ANR	1001550	IdentifierDeclType	struct sljit_jump *		1001545	0					
ANR	1001551	Identifier	jump		1001545	1					
ANR	1001552	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	911:1:27647:27673	1001545	1	True				
ANR	1001553	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1001545	0					
ANR	1001554	Callee	SLJIT_UNUSED_ARG		1001545	0					
ANR	1001555	Identifier	SLJIT_UNUSED_ARG		1001545	0					
ANR	1001556	ArgumentList	compiler		1001545	1					
ANR	1001557	Argument	compiler		1001545	0					
ANR	1001558	Identifier	compiler		1001545	0					
ANR	1001559	ExpressionStatement	CHECK_ARGUMENT ( compiler -> size > 0 )	914:1:27738:27772	1001545	2	True				
ANR	1001560	CallExpression	CHECK_ARGUMENT ( compiler -> size > 0 )		1001545	0					
ANR	1001561	Callee	CHECK_ARGUMENT		1001545	0					
ANR	1001562	Identifier	CHECK_ARGUMENT		1001545	0					
ANR	1001563	ArgumentList	compiler -> size > 0		1001545	1					
ANR	1001564	Argument	compiler -> size > 0		1001545	0					
ANR	1001565	RelationalExpression	compiler -> size > 0		1001545	0		>			
ANR	1001566	PtrMemberAccess	compiler -> size		1001545	0					
ANR	1001567	Identifier	compiler		1001545	0					
ANR	1001568	Identifier	size		1001545	1					
ANR	1001569	PrimaryExpression	0		1001545	1					
ANR	1001570	ExpressionStatement	jump = compiler -> jumps	915:1:27775:27797	1001545	3	True				
ANR	1001571	AssignmentExpression	jump = compiler -> jumps		1001545	0		=			
ANR	1001572	Identifier	jump		1001545	0					
ANR	1001573	PtrMemberAccess	compiler -> jumps		1001545	1					
ANR	1001574	Identifier	compiler		1001545	0					
ANR	1001575	Identifier	jumps		1001545	1					
ANR	1001576	WhileStatement	while ( jump )		1001545	4					
ANR	1001577	Condition	jump	916:8:27807:27810	1001545	0	True				
ANR	1001578	Identifier	jump		1001545	0					
ANR	1001579	CompoundStatement		11:14:263:263	1001545	1					
ANR	1001580	ExpressionStatement	CHECK_ARGUMENT ( jump -> flags & ( JUMP_LABEL | JUMP_ADDR ) )	918:2:27848:27902	1001545	0	True				
ANR	1001581	CallExpression	CHECK_ARGUMENT ( jump -> flags & ( JUMP_LABEL | JUMP_ADDR ) )		1001545	0					
ANR	1001582	Callee	CHECK_ARGUMENT		1001545	0					
ANR	1001583	Identifier	CHECK_ARGUMENT		1001545	0					
ANR	1001584	ArgumentList	jump -> flags & ( JUMP_LABEL | JUMP_ADDR )		1001545	1					
ANR	1001585	Argument	jump -> flags & ( JUMP_LABEL | JUMP_ADDR )		1001545	0					
ANR	1001586	BitAndExpression	jump -> flags & ( JUMP_LABEL | JUMP_ADDR )		1001545	0		&			
ANR	1001587	PtrMemberAccess	jump -> flags		1001545	0					
ANR	1001588	Identifier	jump		1001545	0					
ANR	1001589	Identifier	flags		1001545	1					
ANR	1001590	InclusiveOrExpression	JUMP_LABEL | JUMP_ADDR		1001545	1		|			
ANR	1001591	Identifier	JUMP_LABEL		1001545	0					
ANR	1001592	Identifier	JUMP_ADDR		1001545	1					
ANR	1001593	ExpressionStatement	jump = jump -> next	919:2:27906:27923	1001545	1	True				
ANR	1001594	AssignmentExpression	jump = jump -> next		1001545	0		=			
ANR	1001595	Identifier	jump		1001545	0					
ANR	1001596	PtrMemberAccess	jump -> next		1001545	1					
ANR	1001597	Identifier	jump		1001545	0					
ANR	1001598	Identifier	next		1001545	1					
ANR	1001599	ExpressionStatement	CHECK_RETURN_OK	922:1:27936:27951	1001545	5	True				
ANR	1001600	Identifier	CHECK_RETURN_OK		1001545	0					
ANR	1001601	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1001545	1					
ANR	1001602	Identifier	check_sljit_generate_code		1001545	2					
ANR	1001603	ParameterList	struct sljit_compiler * compiler		1001545	3					
ANR	1001604	Parameter	struct sljit_compiler * compiler	905:64:27516:27546	1001545	0	True				
ANR	1001605	ParameterType	struct sljit_compiler *		1001545	0					
ANR	1001606	Identifier	compiler		1001545	1					
ANR	1001607	CFGEntryNode	ENTRY		1001545		True				
ANR	1001608	CFGExitNode	EXIT		1001545		True				
ANR	1001609	Symbol	compiler -> size		1001545						
ANR	1001610	Symbol	* jump		1001545						
ANR	1001611	Symbol	compiler -> jumps		1001545						
ANR	1001612	Symbol	jump -> flags		1001545						
ANR	1001613	Symbol	JUMP_LABEL		1001545						
ANR	1001614	Symbol	JUMP_ADDR		1001545						
ANR	1001615	Symbol	jump -> next		1001545						
ANR	1001616	Symbol	* compiler		1001545						
ANR	1001617	Symbol	compiler		1001545						
ANR	1001618	Symbol	jump		1001545						
ANR	1001619	Function	check_sljit_emit_enter	925:0:27956:29226							
ANR	1001620	FunctionDef	"check_sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1001619	0					
ANR	1001621	CompoundStatement		928:0:28182:29226	1001619	0					
ANR	1001622	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	929:1:28185:28211	1001619	0	True				
ANR	1001623	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1001619	0					
ANR	1001624	Callee	SLJIT_UNUSED_ARG		1001619	0					
ANR	1001625	Identifier	SLJIT_UNUSED_ARG		1001619	0					
ANR	1001626	ArgumentList	compiler		1001619	1					
ANR	1001627	Argument	compiler		1001619	0					
ANR	1001628	Identifier	compiler		1001619	0					
ANR	1001629	ExpressionStatement	CHECK_ARGUMENT ( ! ( options & ~SLJIT_DOUBLE_ALIGNMENT ) )	932:1:28276:28328	1001619	1	True				
ANR	1001630	CallExpression	CHECK_ARGUMENT ( ! ( options & ~SLJIT_DOUBLE_ALIGNMENT ) )		1001619	0					
ANR	1001631	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001632	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001633	ArgumentList	! ( options & ~SLJIT_DOUBLE_ALIGNMENT )		1001619	1					
ANR	1001634	Argument	! ( options & ~SLJIT_DOUBLE_ALIGNMENT )		1001619	0					
ANR	1001635	UnaryOperationExpression	! ( options & ~SLJIT_DOUBLE_ALIGNMENT )		1001619	0					
ANR	1001636	UnaryOperator	!		1001619	0					
ANR	1001637	BitAndExpression	options & ~SLJIT_DOUBLE_ALIGNMENT		1001619	1		&			
ANR	1001638	Identifier	options		1001619	0					
ANR	1001639	Identifier	~SLJIT_DOUBLE_ALIGNMENT		1001619	1					
ANR	1001640	ExpressionStatement	CHECK_ARGUMENT ( args >= 0 && args <= 3 )	933:1:28331:28369	1001619	2	True				
ANR	1001641	CallExpression	CHECK_ARGUMENT ( args >= 0 && args <= 3 )		1001619	0					
ANR	1001642	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001643	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001644	ArgumentList	args >= 0 && args <= 3		1001619	1					
ANR	1001645	Argument	args >= 0 && args <= 3		1001619	0					
ANR	1001646	AndExpression	args >= 0 && args <= 3		1001619	0		&&			
ANR	1001647	RelationalExpression	args >= 0		1001619	0		>=			
ANR	1001648	Identifier	args		1001619	0					
ANR	1001649	PrimaryExpression	0		1001619	1					
ANR	1001650	RelationalExpression	args <= 3		1001619	1		<=			
ANR	1001651	Identifier	args		1001619	0					
ANR	1001652	PrimaryExpression	3		1001619	1					
ANR	1001653	ExpressionStatement	CHECK_ARGUMENT ( scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS )	934:1:28372:28444	1001619	3	True				
ANR	1001654	CallExpression	CHECK_ARGUMENT ( scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS )		1001619	0					
ANR	1001655	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001656	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001657	ArgumentList	scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS		1001619	1					
ANR	1001658	Argument	scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS		1001619	0					
ANR	1001659	AndExpression	scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS		1001619	0		&&			
ANR	1001660	RelationalExpression	scratches >= 0		1001619	0		>=			
ANR	1001661	Identifier	scratches		1001619	0					
ANR	1001662	PrimaryExpression	0		1001619	1					
ANR	1001663	RelationalExpression	scratches <= SLJIT_NUMBER_OF_REGISTERS		1001619	1		<=			
ANR	1001664	Identifier	scratches		1001619	0					
ANR	1001665	Identifier	SLJIT_NUMBER_OF_REGISTERS		1001619	1					
ANR	1001666	ExpressionStatement	CHECK_ARGUMENT ( saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS )	935:1:28447:28513	1001619	4	True				
ANR	1001667	CallExpression	CHECK_ARGUMENT ( saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS )		1001619	0					
ANR	1001668	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001669	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001670	ArgumentList	saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS		1001619	1					
ANR	1001671	Argument	saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS		1001619	0					
ANR	1001672	AndExpression	saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS		1001619	0		&&			
ANR	1001673	RelationalExpression	saveds >= 0		1001619	0		>=			
ANR	1001674	Identifier	saveds		1001619	0					
ANR	1001675	PrimaryExpression	0		1001619	1					
ANR	1001676	RelationalExpression	saveds <= SLJIT_NUMBER_OF_REGISTERS		1001619	1		<=			
ANR	1001677	Identifier	saveds		1001619	0					
ANR	1001678	Identifier	SLJIT_NUMBER_OF_REGISTERS		1001619	1					
ANR	1001679	ExpressionStatement	CHECK_ARGUMENT ( scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS )	936:1:28516:28579	1001619	5	True				
ANR	1001680	CallExpression	CHECK_ARGUMENT ( scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS )		1001619	0					
ANR	1001681	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001682	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001683	ArgumentList	scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS		1001619	1					
ANR	1001684	Argument	scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS		1001619	0					
ANR	1001685	RelationalExpression	scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS		1001619	0		<=			
ANR	1001686	AdditiveExpression	scratches + saveds		1001619	0		+			
ANR	1001687	Identifier	scratches		1001619	0					
ANR	1001688	Identifier	saveds		1001619	1					
ANR	1001689	Identifier	SLJIT_NUMBER_OF_REGISTERS		1001619	1					
ANR	1001690	ExpressionStatement	CHECK_ARGUMENT ( args <= saveds )	937:1:28582:28612	1001619	6	True				
ANR	1001691	CallExpression	CHECK_ARGUMENT ( args <= saveds )		1001619	0					
ANR	1001692	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001693	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001694	ArgumentList	args <= saveds		1001619	1					
ANR	1001695	Argument	args <= saveds		1001619	0					
ANR	1001696	RelationalExpression	args <= saveds		1001619	0		<=			
ANR	1001697	Identifier	args		1001619	0					
ANR	1001698	Identifier	saveds		1001619	1					
ANR	1001699	ExpressionStatement	CHECK_ARGUMENT ( fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )	938:1:28615:28695	1001619	7	True				
ANR	1001700	CallExpression	CHECK_ARGUMENT ( fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )		1001619	0					
ANR	1001701	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001702	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001703	ArgumentList	fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1					
ANR	1001704	Argument	fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	0					
ANR	1001705	AndExpression	fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	0		&&			
ANR	1001706	RelationalExpression	fscratches >= 0		1001619	0		>=			
ANR	1001707	Identifier	fscratches		1001619	0					
ANR	1001708	PrimaryExpression	0		1001619	1					
ANR	1001709	RelationalExpression	fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1		<=			
ANR	1001710	Identifier	fscratches		1001619	0					
ANR	1001711	Identifier	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1					
ANR	1001712	ExpressionStatement	CHECK_ARGUMENT ( fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )	939:1:28698:28772	1001619	8	True				
ANR	1001713	CallExpression	CHECK_ARGUMENT ( fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )		1001619	0					
ANR	1001714	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001715	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001716	ArgumentList	fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1					
ANR	1001717	Argument	fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	0					
ANR	1001718	AndExpression	fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	0		&&			
ANR	1001719	RelationalExpression	fsaveds >= 0		1001619	0		>=			
ANR	1001720	Identifier	fsaveds		1001619	0					
ANR	1001721	PrimaryExpression	0		1001619	1					
ANR	1001722	RelationalExpression	fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1		<=			
ANR	1001723	Identifier	fsaveds		1001619	0					
ANR	1001724	Identifier	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1					
ANR	1001725	ExpressionStatement	CHECK_ARGUMENT ( fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )	940:1:28775:28846	1001619	9	True				
ANR	1001726	CallExpression	CHECK_ARGUMENT ( fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )		1001619	0					
ANR	1001727	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001728	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001729	ArgumentList	fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1					
ANR	1001730	Argument	fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	0					
ANR	1001731	RelationalExpression	fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	0		<=			
ANR	1001732	AdditiveExpression	fscratches + fsaveds		1001619	0		+			
ANR	1001733	Identifier	fscratches		1001619	0					
ANR	1001734	Identifier	fsaveds		1001619	1					
ANR	1001735	Identifier	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619	1					
ANR	1001736	ExpressionStatement	CHECK_ARGUMENT ( local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE )	941:1:28849:28918	1001619	10	True				
ANR	1001737	CallExpression	CHECK_ARGUMENT ( local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE )		1001619	0					
ANR	1001738	Callee	CHECK_ARGUMENT		1001619	0					
ANR	1001739	Identifier	CHECK_ARGUMENT		1001619	0					
ANR	1001740	ArgumentList	local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE		1001619	1					
ANR	1001741	Argument	local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE		1001619	0					
ANR	1001742	AndExpression	local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE		1001619	0		&&			
ANR	1001743	RelationalExpression	local_size >= 0		1001619	0		>=			
ANR	1001744	Identifier	local_size		1001619	0					
ANR	1001745	PrimaryExpression	0		1001619	1					
ANR	1001746	RelationalExpression	local_size <= SLJIT_MAX_LOCAL_SIZE		1001619	1		<=			
ANR	1001747	Identifier	local_size		1001619	0					
ANR	1001748	Identifier	SLJIT_MAX_LOCAL_SIZE		1001619	1					
ANR	1001749	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1001619	11					
ANR	1001750	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	944:5:28977:29011	1001619	0	True				
ANR	1001751	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1001619	0					
ANR	1001752	Callee	SLJIT_UNLIKELY		1001619	0					
ANR	1001753	Identifier	SLJIT_UNLIKELY		1001619	0					
ANR	1001754	ArgumentList	! ! compiler -> verbose		1001619	1					
ANR	1001755	Argument	! ! compiler -> verbose		1001619	0					
ANR	1001756	UnaryOperationExpression	! ! compiler -> verbose		1001619	0					
ANR	1001757	UnaryOperator	!		1001619	0					
ANR	1001758	UnaryOperationExpression	! compiler -> verbose		1001619	1					
ANR	1001759	UnaryOperator	!		1001619	0					
ANR	1001760	PtrMemberAccess	compiler -> verbose		1001619	1					
ANR	1001761	Identifier	compiler		1001619	0					
ANR	1001762	Identifier	verbose		1001619	1					
ANR	1001763	ExpressionStatement	"fprintf ( compiler -> verbose , ""  enter options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"" , args , scratches , saveds , fscratches , fsaveds , local_size )"	945:2:29016:29199	1001619	1	True				
ANR	1001764	CallExpression	"fprintf ( compiler -> verbose , ""  enter options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"" , args , scratches , saveds , fscratches , fsaveds , local_size )"		1001619	0					
ANR	1001765	Callee	fprintf		1001619	0					
ANR	1001766	Identifier	fprintf		1001619	0					
ANR	1001767	ArgumentList	compiler -> verbose		1001619	1					
ANR	1001768	Argument	compiler -> verbose		1001619	0					
ANR	1001769	PtrMemberAccess	compiler -> verbose		1001619	0					
ANR	1001770	Identifier	compiler		1001619	0					
ANR	1001771	Identifier	verbose		1001619	1					
ANR	1001772	Argument	"""  enter options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"""		1001619	1					
ANR	1001773	PrimaryExpression	"""  enter options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"""		1001619	0					
ANR	1001774	Argument	args		1001619	2					
ANR	1001775	Identifier	args		1001619	0					
ANR	1001776	Argument	scratches		1001619	3					
ANR	1001777	Identifier	scratches		1001619	0					
ANR	1001778	Argument	saveds		1001619	4					
ANR	1001779	Identifier	saveds		1001619	0					
ANR	1001780	Argument	fscratches		1001619	5					
ANR	1001781	Identifier	fscratches		1001619	0					
ANR	1001782	Argument	fsaveds		1001619	6					
ANR	1001783	Identifier	fsaveds		1001619	0					
ANR	1001784	Argument	local_size		1001619	7					
ANR	1001785	Identifier	local_size		1001619	0					
ANR	1001786	ExpressionStatement	CHECK_RETURN_OK	948:1:29209:29224	1001619	12	True				
ANR	1001787	Identifier	CHECK_RETURN_OK		1001619	0					
ANR	1001788	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1001619	1					
ANR	1001789	Identifier	check_sljit_emit_enter		1001619	2					
ANR	1001790	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1001619	3					
ANR	1001791	Parameter	struct sljit_compiler * compiler	925:61:28017:28047	1001619	0	True				
ANR	1001792	ParameterType	struct sljit_compiler *		1001619	0					
ANR	1001793	Identifier	compiler		1001619	1					
ANR	1001794	Parameter	sljit_si options	926:1:28051:28066	1001619	1	True				
ANR	1001795	ParameterType	sljit_si		1001619	0					
ANR	1001796	Identifier	options		1001619	1					
ANR	1001797	Parameter	sljit_si args	926:19:28069:28081	1001619	2	True				
ANR	1001798	ParameterType	sljit_si		1001619	0					
ANR	1001799	Identifier	args		1001619	1					
ANR	1001800	Parameter	sljit_si scratches	926:34:28084:28101	1001619	3	True				
ANR	1001801	ParameterType	sljit_si		1001619	0					
ANR	1001802	Identifier	scratches		1001619	1					
ANR	1001803	Parameter	sljit_si saveds	926:54:28104:28118	1001619	4	True				
ANR	1001804	ParameterType	sljit_si		1001619	0					
ANR	1001805	Identifier	saveds		1001619	1					
ANR	1001806	Parameter	sljit_si fscratches	927:1:28122:28140	1001619	5	True				
ANR	1001807	ParameterType	sljit_si		1001619	0					
ANR	1001808	Identifier	fscratches		1001619	1					
ANR	1001809	Parameter	sljit_si fsaveds	927:22:28143:28158	1001619	6	True				
ANR	1001810	ParameterType	sljit_si		1001619	0					
ANR	1001811	Identifier	fsaveds		1001619	1					
ANR	1001812	Parameter	sljit_si local_size	927:40:28161:28179	1001619	7	True				
ANR	1001813	ParameterType	sljit_si		1001619	0					
ANR	1001814	Identifier	local_size		1001619	1					
ANR	1001815	CFGEntryNode	ENTRY		1001619		True				
ANR	1001816	CFGExitNode	EXIT		1001619		True				
ANR	1001817	Symbol	local_size		1001619						
ANR	1001818	Symbol	scratches		1001619						
ANR	1001819	Symbol	saveds		1001619						
ANR	1001820	Symbol	* compiler		1001619						
ANR	1001821	Symbol	SLJIT_MAX_LOCAL_SIZE		1001619						
ANR	1001822	Symbol	args		1001619						
ANR	1001823	Symbol	fscratches		1001619						
ANR	1001824	Symbol	fsaveds		1001619						
ANR	1001825	Symbol	SLJIT_NUMBER_OF_REGISTERS		1001619						
ANR	1001826	Symbol	options		1001619						
ANR	1001827	Symbol	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001619						
ANR	1001828	Symbol	~SLJIT_DOUBLE_ALIGNMENT		1001619						
ANR	1001829	Symbol	compiler		1001619						
ANR	1001830	Symbol	SLJIT_UNLIKELY		1001619						
ANR	1001831	Symbol	compiler -> verbose		1001619						
ANR	1001832	Function	check_sljit_set_context	951:0:29229:30574							
ANR	1001833	FunctionDef	"check_sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1001832	0					
ANR	1001834	CompoundStatement		954:0:29456:30574	1001832	0					
ANR	1001835	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1001832	0					
ANR	1001836	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	955:5:29463:29499	1001832	0	True				
ANR	1001837	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1001832	0					
ANR	1001838	Callee	SLJIT_UNLIKELY		1001832	0					
ANR	1001839	Identifier	SLJIT_UNLIKELY		1001832	0					
ANR	1001840	ArgumentList	compiler -> skip_checks		1001832	1					
ANR	1001841	Argument	compiler -> skip_checks		1001832	0					
ANR	1001842	PtrMemberAccess	compiler -> skip_checks		1001832	0					
ANR	1001843	Identifier	compiler		1001832	0					
ANR	1001844	Identifier	skip_checks		1001832	1					
ANR	1001845	CompoundStatement		2:44:45:45	1001832	1					
ANR	1001846	ExpressionStatement	compiler -> skip_checks = 0	956:2:29506:29531	1001832	0	True				
ANR	1001847	AssignmentExpression	compiler -> skip_checks = 0		1001832	0		=			
ANR	1001848	PtrMemberAccess	compiler -> skip_checks		1001832	0					
ANR	1001849	Identifier	compiler		1001832	0					
ANR	1001850	Identifier	skip_checks		1001832	1					
ANR	1001851	PrimaryExpression	0		1001832	1					
ANR	1001852	ExpressionStatement	CHECK_RETURN_OK	957:2:29535:29550	1001832	1	True				
ANR	1001853	Identifier	CHECK_RETURN_OK		1001832	0					
ANR	1001854	ExpressionStatement	CHECK_ARGUMENT ( ! ( options & ~SLJIT_DOUBLE_ALIGNMENT ) )	961:1:29618:29670	1001832	1	True				
ANR	1001855	CallExpression	CHECK_ARGUMENT ( ! ( options & ~SLJIT_DOUBLE_ALIGNMENT ) )		1001832	0					
ANR	1001856	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001857	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001858	ArgumentList	! ( options & ~SLJIT_DOUBLE_ALIGNMENT )		1001832	1					
ANR	1001859	Argument	! ( options & ~SLJIT_DOUBLE_ALIGNMENT )		1001832	0					
ANR	1001860	UnaryOperationExpression	! ( options & ~SLJIT_DOUBLE_ALIGNMENT )		1001832	0					
ANR	1001861	UnaryOperator	!		1001832	0					
ANR	1001862	BitAndExpression	options & ~SLJIT_DOUBLE_ALIGNMENT		1001832	1		&			
ANR	1001863	Identifier	options		1001832	0					
ANR	1001864	Identifier	~SLJIT_DOUBLE_ALIGNMENT		1001832	1					
ANR	1001865	ExpressionStatement	CHECK_ARGUMENT ( args >= 0 && args <= 3 )	962:1:29673:29711	1001832	2	True				
ANR	1001866	CallExpression	CHECK_ARGUMENT ( args >= 0 && args <= 3 )		1001832	0					
ANR	1001867	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001868	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001869	ArgumentList	args >= 0 && args <= 3		1001832	1					
ANR	1001870	Argument	args >= 0 && args <= 3		1001832	0					
ANR	1001871	AndExpression	args >= 0 && args <= 3		1001832	0		&&			
ANR	1001872	RelationalExpression	args >= 0		1001832	0		>=			
ANR	1001873	Identifier	args		1001832	0					
ANR	1001874	PrimaryExpression	0		1001832	1					
ANR	1001875	RelationalExpression	args <= 3		1001832	1		<=			
ANR	1001876	Identifier	args		1001832	0					
ANR	1001877	PrimaryExpression	3		1001832	1					
ANR	1001878	ExpressionStatement	CHECK_ARGUMENT ( scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS )	963:1:29714:29786	1001832	3	True				
ANR	1001879	CallExpression	CHECK_ARGUMENT ( scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS )		1001832	0					
ANR	1001880	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001881	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001882	ArgumentList	scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS		1001832	1					
ANR	1001883	Argument	scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS		1001832	0					
ANR	1001884	AndExpression	scratches >= 0 && scratches <= SLJIT_NUMBER_OF_REGISTERS		1001832	0		&&			
ANR	1001885	RelationalExpression	scratches >= 0		1001832	0		>=			
ANR	1001886	Identifier	scratches		1001832	0					
ANR	1001887	PrimaryExpression	0		1001832	1					
ANR	1001888	RelationalExpression	scratches <= SLJIT_NUMBER_OF_REGISTERS		1001832	1		<=			
ANR	1001889	Identifier	scratches		1001832	0					
ANR	1001890	Identifier	SLJIT_NUMBER_OF_REGISTERS		1001832	1					
ANR	1001891	ExpressionStatement	CHECK_ARGUMENT ( saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS )	964:1:29789:29855	1001832	4	True				
ANR	1001892	CallExpression	CHECK_ARGUMENT ( saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS )		1001832	0					
ANR	1001893	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001894	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001895	ArgumentList	saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS		1001832	1					
ANR	1001896	Argument	saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS		1001832	0					
ANR	1001897	AndExpression	saveds >= 0 && saveds <= SLJIT_NUMBER_OF_REGISTERS		1001832	0		&&			
ANR	1001898	RelationalExpression	saveds >= 0		1001832	0		>=			
ANR	1001899	Identifier	saveds		1001832	0					
ANR	1001900	PrimaryExpression	0		1001832	1					
ANR	1001901	RelationalExpression	saveds <= SLJIT_NUMBER_OF_REGISTERS		1001832	1		<=			
ANR	1001902	Identifier	saveds		1001832	0					
ANR	1001903	Identifier	SLJIT_NUMBER_OF_REGISTERS		1001832	1					
ANR	1001904	ExpressionStatement	CHECK_ARGUMENT ( scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS )	965:1:29858:29921	1001832	5	True				
ANR	1001905	CallExpression	CHECK_ARGUMENT ( scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS )		1001832	0					
ANR	1001906	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001907	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001908	ArgumentList	scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS		1001832	1					
ANR	1001909	Argument	scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS		1001832	0					
ANR	1001910	RelationalExpression	scratches + saveds <= SLJIT_NUMBER_OF_REGISTERS		1001832	0		<=			
ANR	1001911	AdditiveExpression	scratches + saveds		1001832	0		+			
ANR	1001912	Identifier	scratches		1001832	0					
ANR	1001913	Identifier	saveds		1001832	1					
ANR	1001914	Identifier	SLJIT_NUMBER_OF_REGISTERS		1001832	1					
ANR	1001915	ExpressionStatement	CHECK_ARGUMENT ( args <= saveds )	966:1:29924:29954	1001832	6	True				
ANR	1001916	CallExpression	CHECK_ARGUMENT ( args <= saveds )		1001832	0					
ANR	1001917	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001918	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001919	ArgumentList	args <= saveds		1001832	1					
ANR	1001920	Argument	args <= saveds		1001832	0					
ANR	1001921	RelationalExpression	args <= saveds		1001832	0		<=			
ANR	1001922	Identifier	args		1001832	0					
ANR	1001923	Identifier	saveds		1001832	1					
ANR	1001924	ExpressionStatement	CHECK_ARGUMENT ( fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )	967:1:29957:30037	1001832	7	True				
ANR	1001925	CallExpression	CHECK_ARGUMENT ( fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )		1001832	0					
ANR	1001926	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001927	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001928	ArgumentList	fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1					
ANR	1001929	Argument	fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	0					
ANR	1001930	AndExpression	fscratches >= 0 && fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	0		&&			
ANR	1001931	RelationalExpression	fscratches >= 0		1001832	0		>=			
ANR	1001932	Identifier	fscratches		1001832	0					
ANR	1001933	PrimaryExpression	0		1001832	1					
ANR	1001934	RelationalExpression	fscratches <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1		<=			
ANR	1001935	Identifier	fscratches		1001832	0					
ANR	1001936	Identifier	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1					
ANR	1001937	ExpressionStatement	CHECK_ARGUMENT ( fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )	968:1:30040:30114	1001832	8	True				
ANR	1001938	CallExpression	CHECK_ARGUMENT ( fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )		1001832	0					
ANR	1001939	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001940	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001941	ArgumentList	fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1					
ANR	1001942	Argument	fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	0					
ANR	1001943	AndExpression	fsaveds >= 0 && fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	0		&&			
ANR	1001944	RelationalExpression	fsaveds >= 0		1001832	0		>=			
ANR	1001945	Identifier	fsaveds		1001832	0					
ANR	1001946	PrimaryExpression	0		1001832	1					
ANR	1001947	RelationalExpression	fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1		<=			
ANR	1001948	Identifier	fsaveds		1001832	0					
ANR	1001949	Identifier	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1					
ANR	1001950	ExpressionStatement	CHECK_ARGUMENT ( fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )	969:1:30117:30188	1001832	9	True				
ANR	1001951	CallExpression	CHECK_ARGUMENT ( fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )		1001832	0					
ANR	1001952	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001953	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001954	ArgumentList	fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1					
ANR	1001955	Argument	fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	0					
ANR	1001956	RelationalExpression	fscratches + fsaveds <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	0		<=			
ANR	1001957	AdditiveExpression	fscratches + fsaveds		1001832	0		+			
ANR	1001958	Identifier	fscratches		1001832	0					
ANR	1001959	Identifier	fsaveds		1001832	1					
ANR	1001960	Identifier	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832	1					
ANR	1001961	ExpressionStatement	CHECK_ARGUMENT ( local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE )	970:1:30191:30260	1001832	10	True				
ANR	1001962	CallExpression	CHECK_ARGUMENT ( local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE )		1001832	0					
ANR	1001963	Callee	CHECK_ARGUMENT		1001832	0					
ANR	1001964	Identifier	CHECK_ARGUMENT		1001832	0					
ANR	1001965	ArgumentList	local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE		1001832	1					
ANR	1001966	Argument	local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE		1001832	0					
ANR	1001967	AndExpression	local_size >= 0 && local_size <= SLJIT_MAX_LOCAL_SIZE		1001832	0		&&			
ANR	1001968	RelationalExpression	local_size >= 0		1001832	0		>=			
ANR	1001969	Identifier	local_size		1001832	0					
ANR	1001970	PrimaryExpression	0		1001832	1					
ANR	1001971	RelationalExpression	local_size <= SLJIT_MAX_LOCAL_SIZE		1001832	1		<=			
ANR	1001972	Identifier	local_size		1001832	0					
ANR	1001973	Identifier	SLJIT_MAX_LOCAL_SIZE		1001832	1					
ANR	1001974	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1001832	11					
ANR	1001975	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	973:5:30319:30353	1001832	0	True				
ANR	1001976	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1001832	0					
ANR	1001977	Callee	SLJIT_UNLIKELY		1001832	0					
ANR	1001978	Identifier	SLJIT_UNLIKELY		1001832	0					
ANR	1001979	ArgumentList	! ! compiler -> verbose		1001832	1					
ANR	1001980	Argument	! ! compiler -> verbose		1001832	0					
ANR	1001981	UnaryOperationExpression	! ! compiler -> verbose		1001832	0					
ANR	1001982	UnaryOperator	!		1001832	0					
ANR	1001983	UnaryOperationExpression	! compiler -> verbose		1001832	1					
ANR	1001984	UnaryOperator	!		1001832	0					
ANR	1001985	PtrMemberAccess	compiler -> verbose		1001832	1					
ANR	1001986	Identifier	compiler		1001832	0					
ANR	1001987	Identifier	verbose		1001832	1					
ANR	1001988	ExpressionStatement	"fprintf ( compiler -> verbose , ""  set_context options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"" , args , scratches , saveds , fscratches , fsaveds , local_size )"	974:2:30358:30547	1001832	1	True				
ANR	1001989	CallExpression	"fprintf ( compiler -> verbose , ""  set_context options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"" , args , scratches , saveds , fscratches , fsaveds , local_size )"		1001832	0					
ANR	1001990	Callee	fprintf		1001832	0					
ANR	1001991	Identifier	fprintf		1001832	0					
ANR	1001992	ArgumentList	compiler -> verbose		1001832	1					
ANR	1001993	Argument	compiler -> verbose		1001832	0					
ANR	1001994	PtrMemberAccess	compiler -> verbose		1001832	0					
ANR	1001995	Identifier	compiler		1001832	0					
ANR	1001996	Identifier	verbose		1001832	1					
ANR	1001997	Argument	"""  set_context options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"""		1001832	1					
ANR	1001998	PrimaryExpression	"""  set_context options:none args:%d scratches:%d saveds:%d fscratches:%d fsaveds:%d local_size:%d\\n"""		1001832	0					
ANR	1001999	Argument	args		1001832	2					
ANR	1002000	Identifier	args		1001832	0					
ANR	1002001	Argument	scratches		1001832	3					
ANR	1002002	Identifier	scratches		1001832	0					
ANR	1002003	Argument	saveds		1001832	4					
ANR	1002004	Identifier	saveds		1001832	0					
ANR	1002005	Argument	fscratches		1001832	5					
ANR	1002006	Identifier	fscratches		1001832	0					
ANR	1002007	Argument	fsaveds		1001832	6					
ANR	1002008	Identifier	fsaveds		1001832	0					
ANR	1002009	Argument	local_size		1001832	7					
ANR	1002010	Identifier	local_size		1001832	0					
ANR	1002011	ExpressionStatement	CHECK_RETURN_OK	977:1:30557:30572	1001832	12	True				
ANR	1002012	Identifier	CHECK_RETURN_OK		1001832	0					
ANR	1002013	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1001832	1					
ANR	1002014	Identifier	check_sljit_set_context		1001832	2					
ANR	1002015	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1001832	3					
ANR	1002016	Parameter	struct sljit_compiler * compiler	951:62:29291:29321	1001832	0	True				
ANR	1002017	ParameterType	struct sljit_compiler *		1001832	0					
ANR	1002018	Identifier	compiler		1001832	1					
ANR	1002019	Parameter	sljit_si options	952:1:29325:29340	1001832	1	True				
ANR	1002020	ParameterType	sljit_si		1001832	0					
ANR	1002021	Identifier	options		1001832	1					
ANR	1002022	Parameter	sljit_si args	952:19:29343:29355	1001832	2	True				
ANR	1002023	ParameterType	sljit_si		1001832	0					
ANR	1002024	Identifier	args		1001832	1					
ANR	1002025	Parameter	sljit_si scratches	952:34:29358:29375	1001832	3	True				
ANR	1002026	ParameterType	sljit_si		1001832	0					
ANR	1002027	Identifier	scratches		1001832	1					
ANR	1002028	Parameter	sljit_si saveds	952:54:29378:29392	1001832	4	True				
ANR	1002029	ParameterType	sljit_si		1001832	0					
ANR	1002030	Identifier	saveds		1001832	1					
ANR	1002031	Parameter	sljit_si fscratches	953:1:29396:29414	1001832	5	True				
ANR	1002032	ParameterType	sljit_si		1001832	0					
ANR	1002033	Identifier	fscratches		1001832	1					
ANR	1002034	Parameter	sljit_si fsaveds	953:22:29417:29432	1001832	6	True				
ANR	1002035	ParameterType	sljit_si		1001832	0					
ANR	1002036	Identifier	fsaveds		1001832	1					
ANR	1002037	Parameter	sljit_si local_size	953:40:29435:29453	1001832	7	True				
ANR	1002038	ParameterType	sljit_si		1001832	0					
ANR	1002039	Identifier	local_size		1001832	1					
ANR	1002040	CFGEntryNode	ENTRY		1001832		True				
ANR	1002041	CFGExitNode	EXIT		1001832		True				
ANR	1002042	Symbol	local_size		1001832						
ANR	1002043	Symbol	scratches		1001832						
ANR	1002044	Symbol	saveds		1001832						
ANR	1002045	Symbol	* compiler		1001832						
ANR	1002046	Symbol	SLJIT_MAX_LOCAL_SIZE		1001832						
ANR	1002047	Symbol	args		1001832						
ANR	1002048	Symbol	fscratches		1001832						
ANR	1002049	Symbol	fsaveds		1001832						
ANR	1002050	Symbol	SLJIT_NUMBER_OF_REGISTERS		1001832						
ANR	1002051	Symbol	options		1001832						
ANR	1002052	Symbol	compiler -> skip_checks		1001832						
ANR	1002053	Symbol	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1001832						
ANR	1002054	Symbol	~SLJIT_DOUBLE_ALIGNMENT		1001832						
ANR	1002055	Symbol	compiler		1001832						
ANR	1002056	Symbol	SLJIT_UNLIKELY		1001832						
ANR	1002057	Symbol	compiler -> verbose		1001832						
ANR	1002058	Function	check_sljit_emit_return	980:0:30577:31355							
ANR	1002059	FunctionDef	"check_sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1002058	0					
ANR	1002060	CompoundStatement		981:0:30714:31355	1002058	0					
ANR	1002061	ExpressionStatement	CHECK_ARGUMENT ( compiler -> scratches >= 0 )	983:1:30778:30818	1002058	0	True				
ANR	1002062	CallExpression	CHECK_ARGUMENT ( compiler -> scratches >= 0 )		1002058	0					
ANR	1002063	Callee	CHECK_ARGUMENT		1002058	0					
ANR	1002064	Identifier	CHECK_ARGUMENT		1002058	0					
ANR	1002065	ArgumentList	compiler -> scratches >= 0		1002058	1					
ANR	1002066	Argument	compiler -> scratches >= 0		1002058	0					
ANR	1002067	RelationalExpression	compiler -> scratches >= 0		1002058	0		>=			
ANR	1002068	PtrMemberAccess	compiler -> scratches		1002058	0					
ANR	1002069	Identifier	compiler		1002058	0					
ANR	1002070	Identifier	scratches		1002058	1					
ANR	1002071	PrimaryExpression	0		1002058	1					
ANR	1002072	IfStatement	if ( op != SLJIT_UNUSED )		1002058	1					
ANR	1002073	Condition	op != SLJIT_UNUSED	984:5:30825:30842	1002058	0	True				
ANR	1002074	EqualityExpression	op != SLJIT_UNUSED		1002058	0		!=			
ANR	1002075	Identifier	op		1002058	0					
ANR	1002076	Identifier	SLJIT_UNUSED		1002058	1					
ANR	1002077	CompoundStatement		4:25:130:130	1002058	1					
ANR	1002078	ExpressionStatement	CHECK_ARGUMENT ( op >= SLJIT_MOV && op <= SLJIT_MOV_P )	985:2:30849:30901	1002058	0	True				
ANR	1002079	CallExpression	CHECK_ARGUMENT ( op >= SLJIT_MOV && op <= SLJIT_MOV_P )		1002058	0					
ANR	1002080	Callee	CHECK_ARGUMENT		1002058	0					
ANR	1002081	Identifier	CHECK_ARGUMENT		1002058	0					
ANR	1002082	ArgumentList	op >= SLJIT_MOV && op <= SLJIT_MOV_P		1002058	1					
ANR	1002083	Argument	op >= SLJIT_MOV && op <= SLJIT_MOV_P		1002058	0					
ANR	1002084	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOV_P		1002058	0		&&			
ANR	1002085	RelationalExpression	op >= SLJIT_MOV		1002058	0		>=			
ANR	1002086	Identifier	op		1002058	0					
ANR	1002087	Identifier	SLJIT_MOV		1002058	1					
ANR	1002088	RelationalExpression	op <= SLJIT_MOV_P		1002058	1		<=			
ANR	1002089	Identifier	op		1002058	0					
ANR	1002090	Identifier	SLJIT_MOV_P		1002058	1					
ANR	1002091	ExpressionStatement	"FUNCTION_CHECK_SRC ( src , srcw )"	986:2:30905:30934	1002058	1	True				
ANR	1002092	CallExpression	"FUNCTION_CHECK_SRC ( src , srcw )"		1002058	0					
ANR	1002093	Callee	FUNCTION_CHECK_SRC		1002058	0					
ANR	1002094	Identifier	FUNCTION_CHECK_SRC		1002058	0					
ANR	1002095	ArgumentList	src		1002058	1					
ANR	1002096	Argument	src		1002058	0					
ANR	1002097	Identifier	src		1002058	0					
ANR	1002098	Argument	srcw		1002058	1					
ANR	1002099	Identifier	srcw		1002058	0					
ANR	1002100	ElseStatement	else		1002058	0					
ANR	1002101	ExpressionStatement	CHECK_ARGUMENT ( src == 0 && srcw == 0 )	989:2:30947:30984	1002058	0	True				
ANR	1002102	CallExpression	CHECK_ARGUMENT ( src == 0 && srcw == 0 )		1002058	0					
ANR	1002103	Callee	CHECK_ARGUMENT		1002058	0					
ANR	1002104	Identifier	CHECK_ARGUMENT		1002058	0					
ANR	1002105	ArgumentList	src == 0 && srcw == 0		1002058	1					
ANR	1002106	Argument	src == 0 && srcw == 0		1002058	0					
ANR	1002107	AndExpression	src == 0 && srcw == 0		1002058	0		&&			
ANR	1002108	EqualityExpression	src == 0		1002058	0		==			
ANR	1002109	Identifier	src		1002058	0					
ANR	1002110	PrimaryExpression	0		1002058	1					
ANR	1002111	EqualityExpression	srcw == 0		1002058	1		==			
ANR	1002112	Identifier	srcw		1002058	0					
ANR	1002113	PrimaryExpression	0		1002058	1					
ANR	1002114	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1002058	2					
ANR	1002115	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	992:5:31043:31077	1002058	0	True				
ANR	1002116	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1002058	0					
ANR	1002117	Callee	SLJIT_UNLIKELY		1002058	0					
ANR	1002118	Identifier	SLJIT_UNLIKELY		1002058	0					
ANR	1002119	ArgumentList	! ! compiler -> verbose		1002058	1					
ANR	1002120	Argument	! ! compiler -> verbose		1002058	0					
ANR	1002121	UnaryOperationExpression	! ! compiler -> verbose		1002058	0					
ANR	1002122	UnaryOperator	!		1002058	0					
ANR	1002123	UnaryOperationExpression	! compiler -> verbose		1002058	1					
ANR	1002124	UnaryOperator	!		1002058	0					
ANR	1002125	PtrMemberAccess	compiler -> verbose		1002058	1					
ANR	1002126	Identifier	compiler		1002058	0					
ANR	1002127	Identifier	verbose		1002058	1					
ANR	1002128	CompoundStatement		12:42:365:365	1002058	1					
ANR	1002129	IfStatement	if ( op == SLJIT_UNUSED )		1002058	0					
ANR	1002130	Condition	op == SLJIT_UNUSED	993:6:31088:31105	1002058	0	True				
ANR	1002131	EqualityExpression	op == SLJIT_UNUSED		1002058	0		==			
ANR	1002132	Identifier	op		1002058	0					
ANR	1002133	Identifier	SLJIT_UNUSED		1002058	1					
ANR	1002134	ExpressionStatement	"fprintf ( compiler -> verbose , ""  return\\n"" )"	994:3:31111:31151	1002058	1	True				
ANR	1002135	CallExpression	"fprintf ( compiler -> verbose , ""  return\\n"" )"		1002058	0					
ANR	1002136	Callee	fprintf		1002058	0					
ANR	1002137	Identifier	fprintf		1002058	0					
ANR	1002138	ArgumentList	compiler -> verbose		1002058	1					
ANR	1002139	Argument	compiler -> verbose		1002058	0					
ANR	1002140	PtrMemberAccess	compiler -> verbose		1002058	0					
ANR	1002141	Identifier	compiler		1002058	0					
ANR	1002142	Identifier	verbose		1002058	1					
ANR	1002143	Argument	"""  return\\n"""		1002058	1					
ANR	1002144	PrimaryExpression	"""  return\\n"""		1002058	0					
ANR	1002145	ElseStatement	else		1002058	0					
ANR	1002146	CompoundStatement		15:7:445:445	1002058	0					
ANR	1002147	ExpressionStatement	"fprintf ( compiler -> verbose , ""  return.%s "" , op1_names [ op - SLJIT_OP1_BASE ] )"	996:3:31165:31239	1002058	0	True				
ANR	1002148	CallExpression	"fprintf ( compiler -> verbose , ""  return.%s "" , op1_names [ op - SLJIT_OP1_BASE ] )"		1002058	0					
ANR	1002149	Callee	fprintf		1002058	0					
ANR	1002150	Identifier	fprintf		1002058	0					
ANR	1002151	ArgumentList	compiler -> verbose		1002058	1					
ANR	1002152	Argument	compiler -> verbose		1002058	0					
ANR	1002153	PtrMemberAccess	compiler -> verbose		1002058	0					
ANR	1002154	Identifier	compiler		1002058	0					
ANR	1002155	Identifier	verbose		1002058	1					
ANR	1002156	Argument	"""  return.%s """		1002058	1					
ANR	1002157	PrimaryExpression	"""  return.%s """		1002058	0					
ANR	1002158	Argument	op1_names [ op - SLJIT_OP1_BASE ]		1002058	2					
ANR	1002159	ArrayIndexing	op1_names [ op - SLJIT_OP1_BASE ]		1002058	0					
ANR	1002160	Identifier	op1_names		1002058	0					
ANR	1002161	AdditiveExpression	op - SLJIT_OP1_BASE		1002058	1		-			
ANR	1002162	Identifier	op		1002058	0					
ANR	1002163	Identifier	SLJIT_OP1_BASE		1002058	1					
ANR	1002164	ExpressionStatement	"sljit_verbose_param ( compiler , src , srcw )"	997:3:31244:31284	1002058	1	True				
ANR	1002165	CallExpression	"sljit_verbose_param ( compiler , src , srcw )"		1002058	0					
ANR	1002166	Callee	sljit_verbose_param		1002058	0					
ANR	1002167	Identifier	sljit_verbose_param		1002058	0					
ANR	1002168	ArgumentList	compiler		1002058	1					
ANR	1002169	Argument	compiler		1002058	0					
ANR	1002170	Identifier	compiler		1002058	0					
ANR	1002171	Argument	src		1002058	1					
ANR	1002172	Identifier	src		1002058	0					
ANR	1002173	Argument	srcw		1002058	2					
ANR	1002174	Identifier	srcw		1002058	0					
ANR	1002175	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	998:3:31289:31321	1002058	2	True				
ANR	1002176	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1002058	0					
ANR	1002177	Callee	fprintf		1002058	0					
ANR	1002178	Identifier	fprintf		1002058	0					
ANR	1002179	ArgumentList	compiler -> verbose		1002058	1					
ANR	1002180	Argument	compiler -> verbose		1002058	0					
ANR	1002181	PtrMemberAccess	compiler -> verbose		1002058	0					
ANR	1002182	Identifier	compiler		1002058	0					
ANR	1002183	Identifier	verbose		1002058	1					
ANR	1002184	Argument	"""\\n"""		1002058	1					
ANR	1002185	PrimaryExpression	"""\\n"""		1002058	0					
ANR	1002186	ExpressionStatement	CHECK_RETURN_OK	1002:1:31338:31353	1002058	3	True				
ANR	1002187	Identifier	CHECK_RETURN_OK		1002058	0					
ANR	1002188	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1002058	1					
ANR	1002189	Identifier	check_sljit_emit_return		1002058	2					
ANR	1002190	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1002058	3					
ANR	1002191	Parameter	struct sljit_compiler * compiler	980:62:30639:30669	1002058	0	True				
ANR	1002192	ParameterType	struct sljit_compiler *		1002058	0					
ANR	1002193	Identifier	compiler		1002058	1					
ANR	1002194	Parameter	sljit_si op	980:95:30672:30682	1002058	1	True				
ANR	1002195	ParameterType	sljit_si		1002058	0					
ANR	1002196	Identifier	op		1002058	1					
ANR	1002197	Parameter	sljit_si src	980:108:30685:30696	1002058	2	True				
ANR	1002198	ParameterType	sljit_si		1002058	0					
ANR	1002199	Identifier	src		1002058	1					
ANR	1002200	Parameter	sljit_sw srcw	980:122:30699:30711	1002058	3	True				
ANR	1002201	ParameterType	sljit_sw		1002058	0					
ANR	1002202	Identifier	srcw		1002058	1					
ANR	1002203	CFGEntryNode	ENTRY		1002058		True				
ANR	1002204	CFGExitNode	EXIT		1002058		True				
ANR	1002205	Symbol	SLJIT_OP1_BASE		1002058						
ANR	1002206	Symbol	op1_names		1002058						
ANR	1002207	Symbol	op		1002058						
ANR	1002208	Symbol	compiler -> scratches		1002058						
ANR	1002209	Symbol	* op		1002058						
ANR	1002210	Symbol	src		1002058						
ANR	1002211	Symbol	SLJIT_MOV		1002058						
ANR	1002212	Symbol	srcw		1002058						
ANR	1002213	Symbol	* SLJIT_OP1_BASE		1002058						
ANR	1002214	Symbol	* compiler		1002058						
ANR	1002215	Symbol	* op1_names		1002058						
ANR	1002216	Symbol	SLJIT_UNUSED		1002058						
ANR	1002217	Symbol	SLJIT_MOV_P		1002058						
ANR	1002218	Symbol	compiler		1002058						
ANR	1002219	Symbol	SLJIT_UNLIKELY		1002058						
ANR	1002220	Symbol	compiler -> verbose		1002058						
ANR	1002221	Function	check_sljit_emit_fast_enter	1005:0:31358:31832							
ANR	1002222	FunctionDef	"check_sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1002221	0					
ANR	1002223	CompoundStatement		1006:0:31486:31832	1002221	0					
ANR	1002224	ExpressionStatement	"FUNCTION_CHECK_DST ( dst , dstw )"	1008:1:31550:31579	1002221	0	True				
ANR	1002225	CallExpression	"FUNCTION_CHECK_DST ( dst , dstw )"		1002221	0					
ANR	1002226	Callee	FUNCTION_CHECK_DST		1002221	0					
ANR	1002227	Identifier	FUNCTION_CHECK_DST		1002221	0					
ANR	1002228	ArgumentList	dst		1002221	1					
ANR	1002229	Argument	dst		1002221	0					
ANR	1002230	Identifier	dst		1002221	0					
ANR	1002231	Argument	dstw		1002221	1					
ANR	1002232	Identifier	dstw		1002221	0					
ANR	1002233	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1002221	1					
ANR	1002234	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1011:5:31638:31672	1002221	0	True				
ANR	1002235	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1002221	0					
ANR	1002236	Callee	SLJIT_UNLIKELY		1002221	0					
ANR	1002237	Identifier	SLJIT_UNLIKELY		1002221	0					
ANR	1002238	ArgumentList	! ! compiler -> verbose		1002221	1					
ANR	1002239	Argument	! ! compiler -> verbose		1002221	0					
ANR	1002240	UnaryOperationExpression	! ! compiler -> verbose		1002221	0					
ANR	1002241	UnaryOperator	!		1002221	0					
ANR	1002242	UnaryOperationExpression	! compiler -> verbose		1002221	1					
ANR	1002243	UnaryOperator	!		1002221	0					
ANR	1002244	PtrMemberAccess	compiler -> verbose		1002221	1					
ANR	1002245	Identifier	compiler		1002221	0					
ANR	1002246	Identifier	verbose		1002221	1					
ANR	1002247	CompoundStatement		6:42:188:188	1002221	1					
ANR	1002248	ExpressionStatement	"fprintf ( compiler -> verbose , ""  fast_enter "" )"	1012:2:31679:31722	1002221	0	True				
ANR	1002249	CallExpression	"fprintf ( compiler -> verbose , ""  fast_enter "" )"		1002221	0					
ANR	1002250	Callee	fprintf		1002221	0					
ANR	1002251	Identifier	fprintf		1002221	0					
ANR	1002252	ArgumentList	compiler -> verbose		1002221	1					
ANR	1002253	Argument	compiler -> verbose		1002221	0					
ANR	1002254	PtrMemberAccess	compiler -> verbose		1002221	0					
ANR	1002255	Identifier	compiler		1002221	0					
ANR	1002256	Identifier	verbose		1002221	1					
ANR	1002257	Argument	"""  fast_enter """		1002221	1					
ANR	1002258	PrimaryExpression	"""  fast_enter """		1002221	0					
ANR	1002259	ExpressionStatement	"sljit_verbose_param ( compiler , dst , dstw )"	1013:2:31726:31766	1002221	1	True				
ANR	1002260	CallExpression	"sljit_verbose_param ( compiler , dst , dstw )"		1002221	0					
ANR	1002261	Callee	sljit_verbose_param		1002221	0					
ANR	1002262	Identifier	sljit_verbose_param		1002221	0					
ANR	1002263	ArgumentList	compiler		1002221	1					
ANR	1002264	Argument	compiler		1002221	0					
ANR	1002265	Identifier	compiler		1002221	0					
ANR	1002266	Argument	dst		1002221	1					
ANR	1002267	Identifier	dst		1002221	0					
ANR	1002268	Argument	dstw		1002221	2					
ANR	1002269	Identifier	dstw		1002221	0					
ANR	1002270	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1014:2:31770:31802	1002221	2	True				
ANR	1002271	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1002221	0					
ANR	1002272	Callee	fprintf		1002221	0					
ANR	1002273	Identifier	fprintf		1002221	0					
ANR	1002274	ArgumentList	compiler -> verbose		1002221	1					
ANR	1002275	Argument	compiler -> verbose		1002221	0					
ANR	1002276	PtrMemberAccess	compiler -> verbose		1002221	0					
ANR	1002277	Identifier	compiler		1002221	0					
ANR	1002278	Identifier	verbose		1002221	1					
ANR	1002279	Argument	"""\\n"""		1002221	1					
ANR	1002280	PrimaryExpression	"""\\n"""		1002221	0					
ANR	1002281	ExpressionStatement	CHECK_RETURN_OK	1017:1:31815:31830	1002221	2	True				
ANR	1002282	Identifier	CHECK_RETURN_OK		1002221	0					
ANR	1002283	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1002221	1					
ANR	1002284	Identifier	check_sljit_emit_fast_enter		1002221	2					
ANR	1002285	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1002221	3					
ANR	1002286	Parameter	struct sljit_compiler * compiler	1005:66:31424:31454	1002221	0	True				
ANR	1002287	ParameterType	struct sljit_compiler *		1002221	0					
ANR	1002288	Identifier	compiler		1002221	1					
ANR	1002289	Parameter	sljit_si dst	1005:99:31457:31468	1002221	1	True				
ANR	1002290	ParameterType	sljit_si		1002221	0					
ANR	1002291	Identifier	dst		1002221	1					
ANR	1002292	Parameter	sljit_sw dstw	1005:113:31471:31483	1002221	2	True				
ANR	1002293	ParameterType	sljit_sw		1002221	0					
ANR	1002294	Identifier	dstw		1002221	1					
ANR	1002295	CFGEntryNode	ENTRY		1002221		True				
ANR	1002296	CFGExitNode	EXIT		1002221		True				
ANR	1002297	Symbol	dst		1002221						
ANR	1002298	Symbol	* compiler		1002221						
ANR	1002299	Symbol	compiler		1002221						
ANR	1002300	Symbol	dstw		1002221						
ANR	1002301	Symbol	SLJIT_UNLIKELY		1002221						
ANR	1002302	Symbol	compiler -> verbose		1002221						
ANR	1002303	Function	check_sljit_emit_fast_return	1020:0:31835:32311							
ANR	1002304	FunctionDef	"check_sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1002303	0					
ANR	1002305	CompoundStatement		1021:0:31964:32311	1002303	0					
ANR	1002306	ExpressionStatement	"FUNCTION_CHECK_SRC ( src , srcw )"	1023:1:32028:32057	1002303	0	True				
ANR	1002307	CallExpression	"FUNCTION_CHECK_SRC ( src , srcw )"		1002303	0					
ANR	1002308	Callee	FUNCTION_CHECK_SRC		1002303	0					
ANR	1002309	Identifier	FUNCTION_CHECK_SRC		1002303	0					
ANR	1002310	ArgumentList	src		1002303	1					
ANR	1002311	Argument	src		1002303	0					
ANR	1002312	Identifier	src		1002303	0					
ANR	1002313	Argument	srcw		1002303	1					
ANR	1002314	Identifier	srcw		1002303	0					
ANR	1002315	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1002303	1					
ANR	1002316	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1026:5:32116:32150	1002303	0	True				
ANR	1002317	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1002303	0					
ANR	1002318	Callee	SLJIT_UNLIKELY		1002303	0					
ANR	1002319	Identifier	SLJIT_UNLIKELY		1002303	0					
ANR	1002320	ArgumentList	! ! compiler -> verbose		1002303	1					
ANR	1002321	Argument	! ! compiler -> verbose		1002303	0					
ANR	1002322	UnaryOperationExpression	! ! compiler -> verbose		1002303	0					
ANR	1002323	UnaryOperator	!		1002303	0					
ANR	1002324	UnaryOperationExpression	! compiler -> verbose		1002303	1					
ANR	1002325	UnaryOperator	!		1002303	0					
ANR	1002326	PtrMemberAccess	compiler -> verbose		1002303	1					
ANR	1002327	Identifier	compiler		1002303	0					
ANR	1002328	Identifier	verbose		1002303	1					
ANR	1002329	CompoundStatement		6:42:188:188	1002303	1					
ANR	1002330	ExpressionStatement	"fprintf ( compiler -> verbose , ""  fast_return "" )"	1027:2:32157:32201	1002303	0	True				
ANR	1002331	CallExpression	"fprintf ( compiler -> verbose , ""  fast_return "" )"		1002303	0					
ANR	1002332	Callee	fprintf		1002303	0					
ANR	1002333	Identifier	fprintf		1002303	0					
ANR	1002334	ArgumentList	compiler -> verbose		1002303	1					
ANR	1002335	Argument	compiler -> verbose		1002303	0					
ANR	1002336	PtrMemberAccess	compiler -> verbose		1002303	0					
ANR	1002337	Identifier	compiler		1002303	0					
ANR	1002338	Identifier	verbose		1002303	1					
ANR	1002339	Argument	"""  fast_return """		1002303	1					
ANR	1002340	PrimaryExpression	"""  fast_return """		1002303	0					
ANR	1002341	ExpressionStatement	"sljit_verbose_param ( compiler , src , srcw )"	1028:2:32205:32245	1002303	1	True				
ANR	1002342	CallExpression	"sljit_verbose_param ( compiler , src , srcw )"		1002303	0					
ANR	1002343	Callee	sljit_verbose_param		1002303	0					
ANR	1002344	Identifier	sljit_verbose_param		1002303	0					
ANR	1002345	ArgumentList	compiler		1002303	1					
ANR	1002346	Argument	compiler		1002303	0					
ANR	1002347	Identifier	compiler		1002303	0					
ANR	1002348	Argument	src		1002303	1					
ANR	1002349	Identifier	src		1002303	0					
ANR	1002350	Argument	srcw		1002303	2					
ANR	1002351	Identifier	srcw		1002303	0					
ANR	1002352	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1029:2:32249:32281	1002303	2	True				
ANR	1002353	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1002303	0					
ANR	1002354	Callee	fprintf		1002303	0					
ANR	1002355	Identifier	fprintf		1002303	0					
ANR	1002356	ArgumentList	compiler -> verbose		1002303	1					
ANR	1002357	Argument	compiler -> verbose		1002303	0					
ANR	1002358	PtrMemberAccess	compiler -> verbose		1002303	0					
ANR	1002359	Identifier	compiler		1002303	0					
ANR	1002360	Identifier	verbose		1002303	1					
ANR	1002361	Argument	"""\\n"""		1002303	1					
ANR	1002362	PrimaryExpression	"""\\n"""		1002303	0					
ANR	1002363	ExpressionStatement	CHECK_RETURN_OK	1032:1:32294:32309	1002303	2	True				
ANR	1002364	Identifier	CHECK_RETURN_OK		1002303	0					
ANR	1002365	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1002303	1					
ANR	1002366	Identifier	check_sljit_emit_fast_return		1002303	2					
ANR	1002367	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1002303	3					
ANR	1002368	Parameter	struct sljit_compiler * compiler	1020:67:31902:31932	1002303	0	True				
ANR	1002369	ParameterType	struct sljit_compiler *		1002303	0					
ANR	1002370	Identifier	compiler		1002303	1					
ANR	1002371	Parameter	sljit_si src	1020:100:31935:31946	1002303	1	True				
ANR	1002372	ParameterType	sljit_si		1002303	0					
ANR	1002373	Identifier	src		1002303	1					
ANR	1002374	Parameter	sljit_sw srcw	1020:114:31949:31961	1002303	2	True				
ANR	1002375	ParameterType	sljit_sw		1002303	0					
ANR	1002376	Identifier	srcw		1002303	1					
ANR	1002377	CFGEntryNode	ENTRY		1002303		True				
ANR	1002378	CFGExitNode	EXIT		1002303		True				
ANR	1002379	Symbol	src		1002303						
ANR	1002380	Symbol	srcw		1002303						
ANR	1002381	Symbol	* compiler		1002303						
ANR	1002382	Symbol	compiler		1002303						
ANR	1002383	Symbol	SLJIT_UNLIKELY		1002303						
ANR	1002384	Symbol	compiler -> verbose		1002303						
ANR	1002385	Function	check_sljit_emit_op0	1035:0:32314:32931							
ANR	1002386	FunctionDef	"check_sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1002385	0					
ANR	1002387	CompoundStatement		1036:0:32419:32931	1002385	0					
ANR	1002388	ExpressionStatement	CHECK_ARGUMENT ( ( op >= SLJIT_BREAKPOINT && op <= SLJIT_LSMUL ) || ( ( op & ~SLJIT_INT_OP ) >= SLJIT_UDIVMOD && ( op & ~SLJIT_INT_OP ) <= SLJIT_SDIVI ) )	1038:1:32483:32628	1002385	0	True				
ANR	1002389	CallExpression	CHECK_ARGUMENT ( ( op >= SLJIT_BREAKPOINT && op <= SLJIT_LSMUL ) || ( ( op & ~SLJIT_INT_OP ) >= SLJIT_UDIVMOD && ( op & ~SLJIT_INT_OP ) <= SLJIT_SDIVI ) )		1002385	0					
ANR	1002390	Callee	CHECK_ARGUMENT		1002385	0					
ANR	1002391	Identifier	CHECK_ARGUMENT		1002385	0					
ANR	1002392	ArgumentList	( op >= SLJIT_BREAKPOINT && op <= SLJIT_LSMUL ) || ( ( op & ~SLJIT_INT_OP ) >= SLJIT_UDIVMOD && ( op & ~SLJIT_INT_OP ) <= SLJIT_SDIVI )		1002385	1					
ANR	1002393	Argument	( op >= SLJIT_BREAKPOINT && op <= SLJIT_LSMUL ) || ( ( op & ~SLJIT_INT_OP ) >= SLJIT_UDIVMOD && ( op & ~SLJIT_INT_OP ) <= SLJIT_SDIVI )		1002385	0					
ANR	1002394	OrExpression	( op >= SLJIT_BREAKPOINT && op <= SLJIT_LSMUL ) || ( ( op & ~SLJIT_INT_OP ) >= SLJIT_UDIVMOD && ( op & ~SLJIT_INT_OP ) <= SLJIT_SDIVI )		1002385	0		||			
ANR	1002395	AndExpression	op >= SLJIT_BREAKPOINT && op <= SLJIT_LSMUL		1002385	0		&&			
ANR	1002396	RelationalExpression	op >= SLJIT_BREAKPOINT		1002385	0		>=			
ANR	1002397	Identifier	op		1002385	0					
ANR	1002398	Identifier	SLJIT_BREAKPOINT		1002385	1					
ANR	1002399	RelationalExpression	op <= SLJIT_LSMUL		1002385	1		<=			
ANR	1002400	Identifier	op		1002385	0					
ANR	1002401	Identifier	SLJIT_LSMUL		1002385	1					
ANR	1002402	AndExpression	( op & ~SLJIT_INT_OP ) >= SLJIT_UDIVMOD && ( op & ~SLJIT_INT_OP ) <= SLJIT_SDIVI		1002385	1		&&			
ANR	1002403	RelationalExpression	( op & ~SLJIT_INT_OP ) >= SLJIT_UDIVMOD		1002385	0		>=			
ANR	1002404	BitAndExpression	op & ~SLJIT_INT_OP		1002385	0		&			
ANR	1002405	Identifier	op		1002385	0					
ANR	1002406	Identifier	~SLJIT_INT_OP		1002385	1					
ANR	1002407	Identifier	SLJIT_UDIVMOD		1002385	1					
ANR	1002408	RelationalExpression	( op & ~SLJIT_INT_OP ) <= SLJIT_SDIVI		1002385	1		<=			
ANR	1002409	BitAndExpression	op & ~SLJIT_INT_OP		1002385	0		&			
ANR	1002410	Identifier	op		1002385	0					
ANR	1002411	Identifier	~SLJIT_INT_OP		1002385	1					
ANR	1002412	Identifier	SLJIT_SDIVI		1002385	1					
ANR	1002413	ExpressionStatement	CHECK_ARGUMENT ( op < SLJIT_LUMUL || compiler -> scratches >= 2 )	1040:1:32631:32691	1002385	1	True				
ANR	1002414	CallExpression	CHECK_ARGUMENT ( op < SLJIT_LUMUL || compiler -> scratches >= 2 )		1002385	0					
ANR	1002415	Callee	CHECK_ARGUMENT		1002385	0					
ANR	1002416	Identifier	CHECK_ARGUMENT		1002385	0					
ANR	1002417	ArgumentList	op < SLJIT_LUMUL || compiler -> scratches >= 2		1002385	1					
ANR	1002418	Argument	op < SLJIT_LUMUL || compiler -> scratches >= 2		1002385	0					
ANR	1002419	OrExpression	op < SLJIT_LUMUL || compiler -> scratches >= 2		1002385	0		||			
ANR	1002420	RelationalExpression	op < SLJIT_LUMUL		1002385	0		<			
ANR	1002421	Identifier	op		1002385	0					
ANR	1002422	Identifier	SLJIT_LUMUL		1002385	1					
ANR	1002423	RelationalExpression	compiler -> scratches >= 2		1002385	1		>=			
ANR	1002424	PtrMemberAccess	compiler -> scratches		1002385	0					
ANR	1002425	Identifier	compiler		1002385	0					
ANR	1002426	Identifier	scratches		1002385	1					
ANR	1002427	PrimaryExpression	2		1002385	1					
ANR	1002428	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1002385	2					
ANR	1002429	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1043:5:32750:32784	1002385	0	True				
ANR	1002430	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1002385	0					
ANR	1002431	Callee	SLJIT_UNLIKELY		1002385	0					
ANR	1002432	Identifier	SLJIT_UNLIKELY		1002385	0					
ANR	1002433	ArgumentList	! ! compiler -> verbose		1002385	1					
ANR	1002434	Argument	! ! compiler -> verbose		1002385	0					
ANR	1002435	UnaryOperationExpression	! ! compiler -> verbose		1002385	0					
ANR	1002436	UnaryOperator	!		1002385	0					
ANR	1002437	UnaryOperationExpression	! compiler -> verbose		1002385	1					
ANR	1002438	UnaryOperator	!		1002385	0					
ANR	1002439	PtrMemberAccess	compiler -> verbose		1002385	1					
ANR	1002440	Identifier	compiler		1002385	0					
ANR	1002441	Identifier	verbose		1002385	1					
ANR	1002442	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s\\n"" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , op0_names [ GET_OPCODE ( op ) - SLJIT_OP0_BASE ] )"	1044:2:32789:32904	1002385	1	True				
ANR	1002443	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s\\n"" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , op0_names [ GET_OPCODE ( op ) - SLJIT_OP0_BASE ] )"		1002385	0					
ANR	1002444	Callee	fprintf		1002385	0					
ANR	1002445	Identifier	fprintf		1002385	0					
ANR	1002446	ArgumentList	compiler -> verbose		1002385	1					
ANR	1002447	Argument	compiler -> verbose		1002385	0					
ANR	1002448	PtrMemberAccess	compiler -> verbose		1002385	0					
ANR	1002449	Identifier	compiler		1002385	0					
ANR	1002450	Identifier	verbose		1002385	1					
ANR	1002451	Argument	"""  %s%s\\n"""		1002385	1					
ANR	1002452	PrimaryExpression	"""  %s%s\\n"""		1002385	0					
ANR	1002453	Argument	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1002385	2					
ANR	1002454	ConditionalExpression	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1002385	0					
ANR	1002455	Condition	! ( op & SLJIT_INT_OP )		1002385	0					
ANR	1002456	UnaryOperationExpression	! ( op & SLJIT_INT_OP )		1002385	0					
ANR	1002457	UnaryOperator	!		1002385	0					
ANR	1002458	BitAndExpression	op & SLJIT_INT_OP		1002385	1		&			
ANR	1002459	Identifier	op		1002385	0					
ANR	1002460	Identifier	SLJIT_INT_OP		1002385	1					
ANR	1002461	PrimaryExpression	""""""		1002385	1					
ANR	1002462	PrimaryExpression	"""i"""		1002385	2					
ANR	1002463	Argument	op0_names [ GET_OPCODE ( op ) - SLJIT_OP0_BASE ]		1002385	3					
ANR	1002464	ArrayIndexing	op0_names [ GET_OPCODE ( op ) - SLJIT_OP0_BASE ]		1002385	0					
ANR	1002465	Identifier	op0_names		1002385	0					
ANR	1002466	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_OP0_BASE		1002385	1		-			
ANR	1002467	CallExpression	GET_OPCODE ( op )		1002385	0					
ANR	1002468	Callee	GET_OPCODE		1002385	0					
ANR	1002469	Identifier	GET_OPCODE		1002385	0					
ANR	1002470	ArgumentList	op		1002385	1					
ANR	1002471	Argument	op		1002385	0					
ANR	1002472	Identifier	op		1002385	0					
ANR	1002473	Identifier	SLJIT_OP0_BASE		1002385	1					
ANR	1002474	ExpressionStatement	CHECK_RETURN_OK	1046:1:32914:32929	1002385	3	True				
ANR	1002475	Identifier	CHECK_RETURN_OK		1002385	0					
ANR	1002476	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1002385	1					
ANR	1002477	Identifier	check_sljit_emit_op0		1002385	2					
ANR	1002478	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1002385	3					
ANR	1002479	Parameter	struct sljit_compiler * compiler	1035:59:32373:32403	1002385	0	True				
ANR	1002480	ParameterType	struct sljit_compiler *		1002385	0					
ANR	1002481	Identifier	compiler		1002385	1					
ANR	1002482	Parameter	sljit_si op	1035:92:32406:32416	1002385	1	True				
ANR	1002483	ParameterType	sljit_si		1002385	0					
ANR	1002484	Identifier	op		1002385	1					
ANR	1002485	CFGEntryNode	ENTRY		1002385		True				
ANR	1002486	CFGExitNode	EXIT		1002385		True				
ANR	1002487	Symbol	op		1002385						
ANR	1002488	Symbol	~SLJIT_INT_OP		1002385						
ANR	1002489	Symbol	SLJIT_SDIVI		1002385						
ANR	1002490	Symbol	compiler -> scratches		1002385						
ANR	1002491	Symbol	* op0_names		1002385						
ANR	1002492	Symbol	SLJIT_INT_OP		1002385						
ANR	1002493	Symbol	SLJIT_LUMUL		1002385						
ANR	1002494	Symbol	* compiler		1002385						
ANR	1002495	Symbol	op0_names		1002385						
ANR	1002496	Symbol	SLJIT_OP0_BASE		1002385						
ANR	1002497	Symbol	SLJIT_BREAKPOINT		1002385						
ANR	1002498	Symbol	GET_OPCODE		1002385						
ANR	1002499	Symbol	* SLJIT_OP0_BASE		1002385						
ANR	1002500	Symbol	SLJIT_UDIVMOD		1002385						
ANR	1002501	Symbol	SLJIT_LSMUL		1002385						
ANR	1002502	Symbol	* GET_OPCODE		1002385						
ANR	1002503	Symbol	compiler		1002385						
ANR	1002504	Symbol	compiler -> verbose		1002385						
ANR	1002505	Symbol	SLJIT_UNLIKELY		1002385						
ANR	1002506	Function	check_sljit_emit_op1	1049:0:32934:34069							
ANR	1002507	FunctionDef	"check_sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1002506	0					
ANR	1002508	CompoundStatement		1052:0:33099:34069	1002506	0					
ANR	1002509	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1002506	0					
ANR	1002510	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1053:5:33106:33142	1002506	0	True				
ANR	1002511	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1002506	0					
ANR	1002512	Callee	SLJIT_UNLIKELY		1002506	0					
ANR	1002513	Identifier	SLJIT_UNLIKELY		1002506	0					
ANR	1002514	ArgumentList	compiler -> skip_checks		1002506	1					
ANR	1002515	Argument	compiler -> skip_checks		1002506	0					
ANR	1002516	PtrMemberAccess	compiler -> skip_checks		1002506	0					
ANR	1002517	Identifier	compiler		1002506	0					
ANR	1002518	Identifier	skip_checks		1002506	1					
ANR	1002519	CompoundStatement		2:44:45:45	1002506	1					
ANR	1002520	ExpressionStatement	compiler -> skip_checks = 0	1054:2:33149:33174	1002506	0	True				
ANR	1002521	AssignmentExpression	compiler -> skip_checks = 0		1002506	0		=			
ANR	1002522	PtrMemberAccess	compiler -> skip_checks		1002506	0					
ANR	1002523	Identifier	compiler		1002506	0					
ANR	1002524	Identifier	skip_checks		1002506	1					
ANR	1002525	PrimaryExpression	0		1002506	1					
ANR	1002526	ExpressionStatement	CHECK_RETURN_OK	1055:2:33178:33193	1002506	1	True				
ANR	1002527	Identifier	CHECK_RETURN_OK		1002506	0					
ANR	1002528	ExpressionStatement	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_MOV && GET_OPCODE ( op ) <= SLJIT_CLZ )	1059:1:33261:33335	1002506	1	True				
ANR	1002529	CallExpression	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_MOV && GET_OPCODE ( op ) <= SLJIT_CLZ )		1002506	0					
ANR	1002530	Callee	CHECK_ARGUMENT		1002506	0					
ANR	1002531	Identifier	CHECK_ARGUMENT		1002506	0					
ANR	1002532	ArgumentList	GET_OPCODE ( op ) >= SLJIT_MOV && GET_OPCODE ( op ) <= SLJIT_CLZ		1002506	1					
ANR	1002533	Argument	GET_OPCODE ( op ) >= SLJIT_MOV && GET_OPCODE ( op ) <= SLJIT_CLZ		1002506	0					
ANR	1002534	AndExpression	GET_OPCODE ( op ) >= SLJIT_MOV && GET_OPCODE ( op ) <= SLJIT_CLZ		1002506	0		&&			
ANR	1002535	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_MOV		1002506	0		>=			
ANR	1002536	CallExpression	GET_OPCODE ( op )		1002506	0					
ANR	1002537	Callee	GET_OPCODE		1002506	0					
ANR	1002538	Identifier	GET_OPCODE		1002506	0					
ANR	1002539	ArgumentList	op		1002506	1					
ANR	1002540	Argument	op		1002506	0					
ANR	1002541	Identifier	op		1002506	0					
ANR	1002542	Identifier	SLJIT_MOV		1002506	1					
ANR	1002543	RelationalExpression	GET_OPCODE ( op ) <= SLJIT_CLZ		1002506	1		<=			
ANR	1002544	CallExpression	GET_OPCODE ( op )		1002506	0					
ANR	1002545	Callee	GET_OPCODE		1002506	0					
ANR	1002546	Identifier	GET_OPCODE		1002506	0					
ANR	1002547	ArgumentList	op		1002506	1					
ANR	1002548	Argument	op		1002506	0					
ANR	1002549	Identifier	op		1002506	0					
ANR	1002550	Identifier	SLJIT_CLZ		1002506	1					
ANR	1002551	ExpressionStatement	FUNCTION_CHECK_OP ( )	1060:1:33338:33357	1002506	2	True				
ANR	1002552	CallExpression	FUNCTION_CHECK_OP ( )		1002506	0					
ANR	1002553	Callee	FUNCTION_CHECK_OP		1002506	0					
ANR	1002554	Identifier	FUNCTION_CHECK_OP		1002506	0					
ANR	1002555	ArgumentList			1002506	1					
ANR	1002556	ExpressionStatement	"FUNCTION_CHECK_SRC ( src , srcw )"	1061:1:33360:33389	1002506	3	True				
ANR	1002557	CallExpression	"FUNCTION_CHECK_SRC ( src , srcw )"		1002506	0					
ANR	1002558	Callee	FUNCTION_CHECK_SRC		1002506	0					
ANR	1002559	Identifier	FUNCTION_CHECK_SRC		1002506	0					
ANR	1002560	ArgumentList	src		1002506	1					
ANR	1002561	Argument	src		1002506	0					
ANR	1002562	Identifier	src		1002506	0					
ANR	1002563	Argument	srcw		1002506	1					
ANR	1002564	Identifier	srcw		1002506	0					
ANR	1002565	ExpressionStatement	"FUNCTION_CHECK_DST ( dst , dstw )"	1062:1:33392:33421	1002506	4	True				
ANR	1002566	CallExpression	"FUNCTION_CHECK_DST ( dst , dstw )"		1002506	0					
ANR	1002567	Callee	FUNCTION_CHECK_DST		1002506	0					
ANR	1002568	Identifier	FUNCTION_CHECK_DST		1002506	0					
ANR	1002569	ArgumentList	dst		1002506	1					
ANR	1002570	Argument	dst		1002506	0					
ANR	1002571	Identifier	dst		1002506	0					
ANR	1002572	Argument	dstw		1002506	1					
ANR	1002573	Identifier	dstw		1002506	0					
ANR	1002574	ExpressionStatement	FUNCTION_CHECK_OP1 ( )	1063:1:33424:33444	1002506	5	True				
ANR	1002575	CallExpression	FUNCTION_CHECK_OP1 ( )		1002506	0					
ANR	1002576	Callee	FUNCTION_CHECK_OP1		1002506	0					
ANR	1002577	Identifier	FUNCTION_CHECK_OP1		1002506	0					
ANR	1002578	ArgumentList			1002506	1					
ANR	1002579	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1002506	6					
ANR	1002580	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1066:5:33503:33537	1002506	0	True				
ANR	1002581	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1002506	0					
ANR	1002582	Callee	SLJIT_UNLIKELY		1002506	0					
ANR	1002583	Identifier	SLJIT_UNLIKELY		1002506	0					
ANR	1002584	ArgumentList	! ! compiler -> verbose		1002506	1					
ANR	1002585	Argument	! ! compiler -> verbose		1002506	0					
ANR	1002586	UnaryOperationExpression	! ! compiler -> verbose		1002506	0					
ANR	1002587	UnaryOperator	!		1002506	0					
ANR	1002588	UnaryOperationExpression	! compiler -> verbose		1002506	1					
ANR	1002589	UnaryOperator	!		1002506	0					
ANR	1002590	PtrMemberAccess	compiler -> verbose		1002506	1					
ANR	1002591	Identifier	compiler		1002506	0					
ANR	1002592	Identifier	verbose		1002506	1					
ANR	1002593	CompoundStatement		15:42:440:440	1002506	1					
ANR	1002594	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s%s%s%s%s%s%s "" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ] , ! ( op & SLJIT_SET_E ) ? """" : "".e"" , ! ( op & SLJIT_SET_U ) ? """" : "".u"" , ! ( op & SLJIT_SET_S ) ? """" : "".s"" , ! ( op & SLJIT_SET_O ) ? """" : "".o"" , ! ( op & SLJIT_SET_C ) ? """" : "".c"" , ! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"" )"	1067:2:33544:33879	1002506	0	True				
ANR	1002595	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s%s%s%s%s%s%s "" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ] , ! ( op & SLJIT_SET_E ) ? """" : "".e"" , ! ( op & SLJIT_SET_U ) ? """" : "".u"" , ! ( op & SLJIT_SET_S ) ? """" : "".s"" , ! ( op & SLJIT_SET_O ) ? """" : "".o"" , ! ( op & SLJIT_SET_C ) ? """" : "".c"" , ! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"" )"		1002506	0					
ANR	1002596	Callee	fprintf		1002506	0					
ANR	1002597	Identifier	fprintf		1002506	0					
ANR	1002598	ArgumentList	compiler -> verbose		1002506	1					
ANR	1002599	Argument	compiler -> verbose		1002506	0					
ANR	1002600	PtrMemberAccess	compiler -> verbose		1002506	0					
ANR	1002601	Identifier	compiler		1002506	0					
ANR	1002602	Identifier	verbose		1002506	1					
ANR	1002603	Argument	"""  %s%s%s%s%s%s%s%s """		1002506	1					
ANR	1002604	PrimaryExpression	"""  %s%s%s%s%s%s%s%s """		1002506	0					
ANR	1002605	Argument	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1002506	2					
ANR	1002606	ConditionalExpression	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1002506	0					
ANR	1002607	Condition	! ( op & SLJIT_INT_OP )		1002506	0					
ANR	1002608	UnaryOperationExpression	! ( op & SLJIT_INT_OP )		1002506	0					
ANR	1002609	UnaryOperator	!		1002506	0					
ANR	1002610	BitAndExpression	op & SLJIT_INT_OP		1002506	1		&			
ANR	1002611	Identifier	op		1002506	0					
ANR	1002612	Identifier	SLJIT_INT_OP		1002506	1					
ANR	1002613	PrimaryExpression	""""""		1002506	1					
ANR	1002614	PrimaryExpression	"""i"""		1002506	2					
ANR	1002615	Argument	op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ]		1002506	3					
ANR	1002616	ArrayIndexing	op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ]		1002506	0					
ANR	1002617	Identifier	op1_names		1002506	0					
ANR	1002618	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_OP1_BASE		1002506	1		-			
ANR	1002619	CallExpression	GET_OPCODE ( op )		1002506	0					
ANR	1002620	Callee	GET_OPCODE		1002506	0					
ANR	1002621	Identifier	GET_OPCODE		1002506	0					
ANR	1002622	ArgumentList	op		1002506	1					
ANR	1002623	Argument	op		1002506	0					
ANR	1002624	Identifier	op		1002506	0					
ANR	1002625	Identifier	SLJIT_OP1_BASE		1002506	1					
ANR	1002626	Argument	"! ( op & SLJIT_SET_E ) ? """" : "".e"""		1002506	4					
ANR	1002627	ConditionalExpression	"! ( op & SLJIT_SET_E ) ? """" : "".e"""		1002506	0					
ANR	1002628	Condition	! ( op & SLJIT_SET_E )		1002506	0					
ANR	1002629	UnaryOperationExpression	! ( op & SLJIT_SET_E )		1002506	0					
ANR	1002630	UnaryOperator	!		1002506	0					
ANR	1002631	BitAndExpression	op & SLJIT_SET_E		1002506	1		&			
ANR	1002632	Identifier	op		1002506	0					
ANR	1002633	Identifier	SLJIT_SET_E		1002506	1					
ANR	1002634	PrimaryExpression	""""""		1002506	1					
ANR	1002635	PrimaryExpression	""".e"""		1002506	2					
ANR	1002636	Argument	"! ( op & SLJIT_SET_U ) ? """" : "".u"""		1002506	5					
ANR	1002637	ConditionalExpression	"! ( op & SLJIT_SET_U ) ? """" : "".u"""		1002506	0					
ANR	1002638	Condition	! ( op & SLJIT_SET_U )		1002506	0					
ANR	1002639	UnaryOperationExpression	! ( op & SLJIT_SET_U )		1002506	0					
ANR	1002640	UnaryOperator	!		1002506	0					
ANR	1002641	BitAndExpression	op & SLJIT_SET_U		1002506	1		&			
ANR	1002642	Identifier	op		1002506	0					
ANR	1002643	Identifier	SLJIT_SET_U		1002506	1					
ANR	1002644	PrimaryExpression	""""""		1002506	1					
ANR	1002645	PrimaryExpression	""".u"""		1002506	2					
ANR	1002646	Argument	"! ( op & SLJIT_SET_S ) ? """" : "".s"""		1002506	6					
ANR	1002647	ConditionalExpression	"! ( op & SLJIT_SET_S ) ? """" : "".s"""		1002506	0					
ANR	1002648	Condition	! ( op & SLJIT_SET_S )		1002506	0					
ANR	1002649	UnaryOperationExpression	! ( op & SLJIT_SET_S )		1002506	0					
ANR	1002650	UnaryOperator	!		1002506	0					
ANR	1002651	BitAndExpression	op & SLJIT_SET_S		1002506	1		&			
ANR	1002652	Identifier	op		1002506	0					
ANR	1002653	Identifier	SLJIT_SET_S		1002506	1					
ANR	1002654	PrimaryExpression	""""""		1002506	1					
ANR	1002655	PrimaryExpression	""".s"""		1002506	2					
ANR	1002656	Argument	"! ( op & SLJIT_SET_O ) ? """" : "".o"""		1002506	7					
ANR	1002657	ConditionalExpression	"! ( op & SLJIT_SET_O ) ? """" : "".o"""		1002506	0					
ANR	1002658	Condition	! ( op & SLJIT_SET_O )		1002506	0					
ANR	1002659	UnaryOperationExpression	! ( op & SLJIT_SET_O )		1002506	0					
ANR	1002660	UnaryOperator	!		1002506	0					
ANR	1002661	BitAndExpression	op & SLJIT_SET_O		1002506	1		&			
ANR	1002662	Identifier	op		1002506	0					
ANR	1002663	Identifier	SLJIT_SET_O		1002506	1					
ANR	1002664	PrimaryExpression	""""""		1002506	1					
ANR	1002665	PrimaryExpression	""".o"""		1002506	2					
ANR	1002666	Argument	"! ( op & SLJIT_SET_C ) ? """" : "".c"""		1002506	8					
ANR	1002667	ConditionalExpression	"! ( op & SLJIT_SET_C ) ? """" : "".c"""		1002506	0					
ANR	1002668	Condition	! ( op & SLJIT_SET_C )		1002506	0					
ANR	1002669	UnaryOperationExpression	! ( op & SLJIT_SET_C )		1002506	0					
ANR	1002670	UnaryOperator	!		1002506	0					
ANR	1002671	BitAndExpression	op & SLJIT_SET_C		1002506	1		&			
ANR	1002672	Identifier	op		1002506	0					
ANR	1002673	Identifier	SLJIT_SET_C		1002506	1					
ANR	1002674	PrimaryExpression	""""""		1002506	1					
ANR	1002675	PrimaryExpression	""".c"""		1002506	2					
ANR	1002676	Argument	"! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"""		1002506	9					
ANR	1002677	ConditionalExpression	"! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"""		1002506	0					
ANR	1002678	Condition	! ( op & SLJIT_KEEP_FLAGS )		1002506	0					
ANR	1002679	UnaryOperationExpression	! ( op & SLJIT_KEEP_FLAGS )		1002506	0					
ANR	1002680	UnaryOperator	!		1002506	0					
ANR	1002681	BitAndExpression	op & SLJIT_KEEP_FLAGS		1002506	1		&			
ANR	1002682	Identifier	op		1002506	0					
ANR	1002683	Identifier	SLJIT_KEEP_FLAGS		1002506	1					
ANR	1002684	PrimaryExpression	""""""		1002506	1					
ANR	1002685	PrimaryExpression	""".k"""		1002506	2					
ANR	1002686	ExpressionStatement	"sljit_verbose_param ( compiler , dst , dstw )"	1070:2:33883:33923	1002506	1	True				
ANR	1002687	CallExpression	"sljit_verbose_param ( compiler , dst , dstw )"		1002506	0					
ANR	1002688	Callee	sljit_verbose_param		1002506	0					
ANR	1002689	Identifier	sljit_verbose_param		1002506	0					
ANR	1002690	ArgumentList	compiler		1002506	1					
ANR	1002691	Argument	compiler		1002506	0					
ANR	1002692	Identifier	compiler		1002506	0					
ANR	1002693	Argument	dst		1002506	1					
ANR	1002694	Identifier	dst		1002506	0					
ANR	1002695	Argument	dstw		1002506	2					
ANR	1002696	Identifier	dstw		1002506	0					
ANR	1002697	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1071:2:33927:33959	1002506	2	True				
ANR	1002698	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1002506	0					
ANR	1002699	Callee	fprintf		1002506	0					
ANR	1002700	Identifier	fprintf		1002506	0					
ANR	1002701	ArgumentList	compiler -> verbose		1002506	1					
ANR	1002702	Argument	compiler -> verbose		1002506	0					
ANR	1002703	PtrMemberAccess	compiler -> verbose		1002506	0					
ANR	1002704	Identifier	compiler		1002506	0					
ANR	1002705	Identifier	verbose		1002506	1					
ANR	1002706	Argument	""", """		1002506	1					
ANR	1002707	PrimaryExpression	""", """		1002506	0					
ANR	1002708	ExpressionStatement	"sljit_verbose_param ( compiler , src , srcw )"	1072:2:33963:34003	1002506	3	True				
ANR	1002709	CallExpression	"sljit_verbose_param ( compiler , src , srcw )"		1002506	0					
ANR	1002710	Callee	sljit_verbose_param		1002506	0					
ANR	1002711	Identifier	sljit_verbose_param		1002506	0					
ANR	1002712	ArgumentList	compiler		1002506	1					
ANR	1002713	Argument	compiler		1002506	0					
ANR	1002714	Identifier	compiler		1002506	0					
ANR	1002715	Argument	src		1002506	1					
ANR	1002716	Identifier	src		1002506	0					
ANR	1002717	Argument	srcw		1002506	2					
ANR	1002718	Identifier	srcw		1002506	0					
ANR	1002719	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1073:2:34007:34039	1002506	4	True				
ANR	1002720	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1002506	0					
ANR	1002721	Callee	fprintf		1002506	0					
ANR	1002722	Identifier	fprintf		1002506	0					
ANR	1002723	ArgumentList	compiler -> verbose		1002506	1					
ANR	1002724	Argument	compiler -> verbose		1002506	0					
ANR	1002725	PtrMemberAccess	compiler -> verbose		1002506	0					
ANR	1002726	Identifier	compiler		1002506	0					
ANR	1002727	Identifier	verbose		1002506	1					
ANR	1002728	Argument	"""\\n"""		1002506	1					
ANR	1002729	PrimaryExpression	"""\\n"""		1002506	0					
ANR	1002730	ExpressionStatement	CHECK_RETURN_OK	1076:1:34052:34067	1002506	7	True				
ANR	1002731	Identifier	CHECK_RETURN_OK		1002506	0					
ANR	1002732	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1002506	1					
ANR	1002733	Identifier	check_sljit_emit_op1		1002506	2					
ANR	1002734	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1002506	3					
ANR	1002735	Parameter	struct sljit_compiler * compiler	1049:59:32993:33023	1002506	0	True				
ANR	1002736	ParameterType	struct sljit_compiler *		1002506	0					
ANR	1002737	Identifier	compiler		1002506	1					
ANR	1002738	Parameter	sljit_si op	1049:92:33026:33036	1002506	1	True				
ANR	1002739	ParameterType	sljit_si		1002506	0					
ANR	1002740	Identifier	op		1002506	1					
ANR	1002741	Parameter	sljit_si dst	1050:1:33040:33051	1002506	2	True				
ANR	1002742	ParameterType	sljit_si		1002506	0					
ANR	1002743	Identifier	dst		1002506	1					
ANR	1002744	Parameter	sljit_sw dstw	1050:15:33054:33066	1002506	3	True				
ANR	1002745	ParameterType	sljit_sw		1002506	0					
ANR	1002746	Identifier	dstw		1002506	1					
ANR	1002747	Parameter	sljit_si src	1051:1:33070:33081	1002506	4	True				
ANR	1002748	ParameterType	sljit_si		1002506	0					
ANR	1002749	Identifier	src		1002506	1					
ANR	1002750	Parameter	sljit_sw srcw	1051:15:33084:33096	1002506	5	True				
ANR	1002751	ParameterType	sljit_sw		1002506	0					
ANR	1002752	Identifier	srcw		1002506	1					
ANR	1002753	CFGEntryNode	ENTRY		1002506		True				
ANR	1002754	CFGExitNode	EXIT		1002506		True				
ANR	1002755	Symbol	dst		1002506						
ANR	1002756	Symbol	SLJIT_SET_O		1002506						
ANR	1002757	Symbol	SLJIT_MOV		1002506						
ANR	1002758	Symbol	* SLJIT_OP1_BASE		1002506						
ANR	1002759	Symbol	SLJIT_SET_C		1002506						
ANR	1002760	Symbol	* compiler		1002506						
ANR	1002761	Symbol	SLJIT_SET_E		1002506						
ANR	1002762	Symbol	GET_OPCODE		1002506						
ANR	1002763	Symbol	* op1_names		1002506						
ANR	1002764	Symbol	SLJIT_KEEP_FLAGS		1002506						
ANR	1002765	Symbol	SLJIT_SET_S		1002506						
ANR	1002766	Symbol	* GET_OPCODE		1002506						
ANR	1002767	Symbol	compiler		1002506						
ANR	1002768	Symbol	SLJIT_SET_U		1002506						
ANR	1002769	Symbol	SLJIT_OP1_BASE		1002506						
ANR	1002770	Symbol	op1_names		1002506						
ANR	1002771	Symbol	op		1002506						
ANR	1002772	Symbol	src		1002506						
ANR	1002773	Symbol	srcw		1002506						
ANR	1002774	Symbol	SLJIT_INT_OP		1002506						
ANR	1002775	Symbol	compiler -> skip_checks		1002506						
ANR	1002776	Symbol	SLJIT_CLZ		1002506						
ANR	1002777	Symbol	dstw		1002506						
ANR	1002778	Symbol	SLJIT_UNLIKELY		1002506						
ANR	1002779	Symbol	compiler -> verbose		1002506						
ANR	1002780	Function	check_sljit_emit_op2	1079:0:34072:35339							
ANR	1002781	FunctionDef	"check_sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1002780	0					
ANR	1002782	CompoundStatement		1083:0:34271:35339	1002780	0					
ANR	1002783	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1002780	0					
ANR	1002784	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1084:5:34278:34314	1002780	0	True				
ANR	1002785	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1002780	0					
ANR	1002786	Callee	SLJIT_UNLIKELY		1002780	0					
ANR	1002787	Identifier	SLJIT_UNLIKELY		1002780	0					
ANR	1002788	ArgumentList	compiler -> skip_checks		1002780	1					
ANR	1002789	Argument	compiler -> skip_checks		1002780	0					
ANR	1002790	PtrMemberAccess	compiler -> skip_checks		1002780	0					
ANR	1002791	Identifier	compiler		1002780	0					
ANR	1002792	Identifier	skip_checks		1002780	1					
ANR	1002793	CompoundStatement		2:44:45:45	1002780	1					
ANR	1002794	ExpressionStatement	compiler -> skip_checks = 0	1085:2:34321:34346	1002780	0	True				
ANR	1002795	AssignmentExpression	compiler -> skip_checks = 0		1002780	0		=			
ANR	1002796	PtrMemberAccess	compiler -> skip_checks		1002780	0					
ANR	1002797	Identifier	compiler		1002780	0					
ANR	1002798	Identifier	skip_checks		1002780	1					
ANR	1002799	PrimaryExpression	0		1002780	1					
ANR	1002800	ExpressionStatement	CHECK_RETURN_OK	1086:2:34350:34365	1002780	1	True				
ANR	1002801	Identifier	CHECK_RETURN_OK		1002780	0					
ANR	1002802	ExpressionStatement	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_ADD && GET_OPCODE ( op ) <= SLJIT_ASHR )	1090:1:34433:34508	1002780	1	True				
ANR	1002803	CallExpression	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_ADD && GET_OPCODE ( op ) <= SLJIT_ASHR )		1002780	0					
ANR	1002804	Callee	CHECK_ARGUMENT		1002780	0					
ANR	1002805	Identifier	CHECK_ARGUMENT		1002780	0					
ANR	1002806	ArgumentList	GET_OPCODE ( op ) >= SLJIT_ADD && GET_OPCODE ( op ) <= SLJIT_ASHR		1002780	1					
ANR	1002807	Argument	GET_OPCODE ( op ) >= SLJIT_ADD && GET_OPCODE ( op ) <= SLJIT_ASHR		1002780	0					
ANR	1002808	AndExpression	GET_OPCODE ( op ) >= SLJIT_ADD && GET_OPCODE ( op ) <= SLJIT_ASHR		1002780	0		&&			
ANR	1002809	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_ADD		1002780	0		>=			
ANR	1002810	CallExpression	GET_OPCODE ( op )		1002780	0					
ANR	1002811	Callee	GET_OPCODE		1002780	0					
ANR	1002812	Identifier	GET_OPCODE		1002780	0					
ANR	1002813	ArgumentList	op		1002780	1					
ANR	1002814	Argument	op		1002780	0					
ANR	1002815	Identifier	op		1002780	0					
ANR	1002816	Identifier	SLJIT_ADD		1002780	1					
ANR	1002817	RelationalExpression	GET_OPCODE ( op ) <= SLJIT_ASHR		1002780	1		<=			
ANR	1002818	CallExpression	GET_OPCODE ( op )		1002780	0					
ANR	1002819	Callee	GET_OPCODE		1002780	0					
ANR	1002820	Identifier	GET_OPCODE		1002780	0					
ANR	1002821	ArgumentList	op		1002780	1					
ANR	1002822	Argument	op		1002780	0					
ANR	1002823	Identifier	op		1002780	0					
ANR	1002824	Identifier	SLJIT_ASHR		1002780	1					
ANR	1002825	ExpressionStatement	FUNCTION_CHECK_OP ( )	1091:1:34511:34530	1002780	2	True				
ANR	1002826	CallExpression	FUNCTION_CHECK_OP ( )		1002780	0					
ANR	1002827	Callee	FUNCTION_CHECK_OP		1002780	0					
ANR	1002828	Identifier	FUNCTION_CHECK_OP		1002780	0					
ANR	1002829	ArgumentList			1002780	1					
ANR	1002830	ExpressionStatement	"FUNCTION_CHECK_SRC ( src1 , src1w )"	1092:1:34533:34564	1002780	3	True				
ANR	1002831	CallExpression	"FUNCTION_CHECK_SRC ( src1 , src1w )"		1002780	0					
ANR	1002832	Callee	FUNCTION_CHECK_SRC		1002780	0					
ANR	1002833	Identifier	FUNCTION_CHECK_SRC		1002780	0					
ANR	1002834	ArgumentList	src1		1002780	1					
ANR	1002835	Argument	src1		1002780	0					
ANR	1002836	Identifier	src1		1002780	0					
ANR	1002837	Argument	src1w		1002780	1					
ANR	1002838	Identifier	src1w		1002780	0					
ANR	1002839	ExpressionStatement	"FUNCTION_CHECK_SRC ( src2 , src2w )"	1093:1:34567:34598	1002780	4	True				
ANR	1002840	CallExpression	"FUNCTION_CHECK_SRC ( src2 , src2w )"		1002780	0					
ANR	1002841	Callee	FUNCTION_CHECK_SRC		1002780	0					
ANR	1002842	Identifier	FUNCTION_CHECK_SRC		1002780	0					
ANR	1002843	ArgumentList	src2		1002780	1					
ANR	1002844	Argument	src2		1002780	0					
ANR	1002845	Identifier	src2		1002780	0					
ANR	1002846	Argument	src2w		1002780	1					
ANR	1002847	Identifier	src2w		1002780	0					
ANR	1002848	ExpressionStatement	"FUNCTION_CHECK_DST ( dst , dstw )"	1094:1:34601:34630	1002780	5	True				
ANR	1002849	CallExpression	"FUNCTION_CHECK_DST ( dst , dstw )"		1002780	0					
ANR	1002850	Callee	FUNCTION_CHECK_DST		1002780	0					
ANR	1002851	Identifier	FUNCTION_CHECK_DST		1002780	0					
ANR	1002852	ArgumentList	dst		1002780	1					
ANR	1002853	Argument	dst		1002780	0					
ANR	1002854	Identifier	dst		1002780	0					
ANR	1002855	Argument	dstw		1002780	1					
ANR	1002856	Identifier	dstw		1002780	0					
ANR	1002857	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1002780	6					
ANR	1002858	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1097:5:34689:34723	1002780	0	True				
ANR	1002859	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1002780	0					
ANR	1002860	Callee	SLJIT_UNLIKELY		1002780	0					
ANR	1002861	Identifier	SLJIT_UNLIKELY		1002780	0					
ANR	1002862	ArgumentList	! ! compiler -> verbose		1002780	1					
ANR	1002863	Argument	! ! compiler -> verbose		1002780	0					
ANR	1002864	UnaryOperationExpression	! ! compiler -> verbose		1002780	0					
ANR	1002865	UnaryOperator	!		1002780	0					
ANR	1002866	UnaryOperationExpression	! compiler -> verbose		1002780	1					
ANR	1002867	UnaryOperator	!		1002780	0					
ANR	1002868	PtrMemberAccess	compiler -> verbose		1002780	1					
ANR	1002869	Identifier	compiler		1002780	0					
ANR	1002870	Identifier	verbose		1002780	1					
ANR	1002871	CompoundStatement		15:42:454:454	1002780	1					
ANR	1002872	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s%s%s%s%s%s%s "" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ] , ! ( op & SLJIT_SET_E ) ? """" : "".e"" , ! ( op & SLJIT_SET_U ) ? """" : "".u"" , ! ( op & SLJIT_SET_S ) ? """" : "".s"" , ! ( op & SLJIT_SET_O ) ? """" : "".o"" , ! ( op & SLJIT_SET_C ) ? """" : "".c"" , ! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"" )"	1098:2:34730:35065	1002780	0	True				
ANR	1002873	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s%s%s%s%s%s%s "" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ] , ! ( op & SLJIT_SET_E ) ? """" : "".e"" , ! ( op & SLJIT_SET_U ) ? """" : "".u"" , ! ( op & SLJIT_SET_S ) ? """" : "".s"" , ! ( op & SLJIT_SET_O ) ? """" : "".o"" , ! ( op & SLJIT_SET_C ) ? """" : "".c"" , ! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"" )"		1002780	0					
ANR	1002874	Callee	fprintf		1002780	0					
ANR	1002875	Identifier	fprintf		1002780	0					
ANR	1002876	ArgumentList	compiler -> verbose		1002780	1					
ANR	1002877	Argument	compiler -> verbose		1002780	0					
ANR	1002878	PtrMemberAccess	compiler -> verbose		1002780	0					
ANR	1002879	Identifier	compiler		1002780	0					
ANR	1002880	Identifier	verbose		1002780	1					
ANR	1002881	Argument	"""  %s%s%s%s%s%s%s%s """		1002780	1					
ANR	1002882	PrimaryExpression	"""  %s%s%s%s%s%s%s%s """		1002780	0					
ANR	1002883	Argument	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1002780	2					
ANR	1002884	ConditionalExpression	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1002780	0					
ANR	1002885	Condition	! ( op & SLJIT_INT_OP )		1002780	0					
ANR	1002886	UnaryOperationExpression	! ( op & SLJIT_INT_OP )		1002780	0					
ANR	1002887	UnaryOperator	!		1002780	0					
ANR	1002888	BitAndExpression	op & SLJIT_INT_OP		1002780	1		&			
ANR	1002889	Identifier	op		1002780	0					
ANR	1002890	Identifier	SLJIT_INT_OP		1002780	1					
ANR	1002891	PrimaryExpression	""""""		1002780	1					
ANR	1002892	PrimaryExpression	"""i"""		1002780	2					
ANR	1002893	Argument	op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ]		1002780	3					
ANR	1002894	ArrayIndexing	op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ]		1002780	0					
ANR	1002895	Identifier	op2_names		1002780	0					
ANR	1002896	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_OP2_BASE		1002780	1		-			
ANR	1002897	CallExpression	GET_OPCODE ( op )		1002780	0					
ANR	1002898	Callee	GET_OPCODE		1002780	0					
ANR	1002899	Identifier	GET_OPCODE		1002780	0					
ANR	1002900	ArgumentList	op		1002780	1					
ANR	1002901	Argument	op		1002780	0					
ANR	1002902	Identifier	op		1002780	0					
ANR	1002903	Identifier	SLJIT_OP2_BASE		1002780	1					
ANR	1002904	Argument	"! ( op & SLJIT_SET_E ) ? """" : "".e"""		1002780	4					
ANR	1002905	ConditionalExpression	"! ( op & SLJIT_SET_E ) ? """" : "".e"""		1002780	0					
ANR	1002906	Condition	! ( op & SLJIT_SET_E )		1002780	0					
ANR	1002907	UnaryOperationExpression	! ( op & SLJIT_SET_E )		1002780	0					
ANR	1002908	UnaryOperator	!		1002780	0					
ANR	1002909	BitAndExpression	op & SLJIT_SET_E		1002780	1		&			
ANR	1002910	Identifier	op		1002780	0					
ANR	1002911	Identifier	SLJIT_SET_E		1002780	1					
ANR	1002912	PrimaryExpression	""""""		1002780	1					
ANR	1002913	PrimaryExpression	""".e"""		1002780	2					
ANR	1002914	Argument	"! ( op & SLJIT_SET_U ) ? """" : "".u"""		1002780	5					
ANR	1002915	ConditionalExpression	"! ( op & SLJIT_SET_U ) ? """" : "".u"""		1002780	0					
ANR	1002916	Condition	! ( op & SLJIT_SET_U )		1002780	0					
ANR	1002917	UnaryOperationExpression	! ( op & SLJIT_SET_U )		1002780	0					
ANR	1002918	UnaryOperator	!		1002780	0					
ANR	1002919	BitAndExpression	op & SLJIT_SET_U		1002780	1		&			
ANR	1002920	Identifier	op		1002780	0					
ANR	1002921	Identifier	SLJIT_SET_U		1002780	1					
ANR	1002922	PrimaryExpression	""""""		1002780	1					
ANR	1002923	PrimaryExpression	""".u"""		1002780	2					
ANR	1002924	Argument	"! ( op & SLJIT_SET_S ) ? """" : "".s"""		1002780	6					
ANR	1002925	ConditionalExpression	"! ( op & SLJIT_SET_S ) ? """" : "".s"""		1002780	0					
ANR	1002926	Condition	! ( op & SLJIT_SET_S )		1002780	0					
ANR	1002927	UnaryOperationExpression	! ( op & SLJIT_SET_S )		1002780	0					
ANR	1002928	UnaryOperator	!		1002780	0					
ANR	1002929	BitAndExpression	op & SLJIT_SET_S		1002780	1		&			
ANR	1002930	Identifier	op		1002780	0					
ANR	1002931	Identifier	SLJIT_SET_S		1002780	1					
ANR	1002932	PrimaryExpression	""""""		1002780	1					
ANR	1002933	PrimaryExpression	""".s"""		1002780	2					
ANR	1002934	Argument	"! ( op & SLJIT_SET_O ) ? """" : "".o"""		1002780	7					
ANR	1002935	ConditionalExpression	"! ( op & SLJIT_SET_O ) ? """" : "".o"""		1002780	0					
ANR	1002936	Condition	! ( op & SLJIT_SET_O )		1002780	0					
ANR	1002937	UnaryOperationExpression	! ( op & SLJIT_SET_O )		1002780	0					
ANR	1002938	UnaryOperator	!		1002780	0					
ANR	1002939	BitAndExpression	op & SLJIT_SET_O		1002780	1		&			
ANR	1002940	Identifier	op		1002780	0					
ANR	1002941	Identifier	SLJIT_SET_O		1002780	1					
ANR	1002942	PrimaryExpression	""""""		1002780	1					
ANR	1002943	PrimaryExpression	""".o"""		1002780	2					
ANR	1002944	Argument	"! ( op & SLJIT_SET_C ) ? """" : "".c"""		1002780	8					
ANR	1002945	ConditionalExpression	"! ( op & SLJIT_SET_C ) ? """" : "".c"""		1002780	0					
ANR	1002946	Condition	! ( op & SLJIT_SET_C )		1002780	0					
ANR	1002947	UnaryOperationExpression	! ( op & SLJIT_SET_C )		1002780	0					
ANR	1002948	UnaryOperator	!		1002780	0					
ANR	1002949	BitAndExpression	op & SLJIT_SET_C		1002780	1		&			
ANR	1002950	Identifier	op		1002780	0					
ANR	1002951	Identifier	SLJIT_SET_C		1002780	1					
ANR	1002952	PrimaryExpression	""""""		1002780	1					
ANR	1002953	PrimaryExpression	""".c"""		1002780	2					
ANR	1002954	Argument	"! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"""		1002780	9					
ANR	1002955	ConditionalExpression	"! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"""		1002780	0					
ANR	1002956	Condition	! ( op & SLJIT_KEEP_FLAGS )		1002780	0					
ANR	1002957	UnaryOperationExpression	! ( op & SLJIT_KEEP_FLAGS )		1002780	0					
ANR	1002958	UnaryOperator	!		1002780	0					
ANR	1002959	BitAndExpression	op & SLJIT_KEEP_FLAGS		1002780	1		&			
ANR	1002960	Identifier	op		1002780	0					
ANR	1002961	Identifier	SLJIT_KEEP_FLAGS		1002780	1					
ANR	1002962	PrimaryExpression	""""""		1002780	1					
ANR	1002963	PrimaryExpression	""".k"""		1002780	2					
ANR	1002964	ExpressionStatement	"sljit_verbose_param ( compiler , dst , dstw )"	1101:2:35069:35109	1002780	1	True				
ANR	1002965	CallExpression	"sljit_verbose_param ( compiler , dst , dstw )"		1002780	0					
ANR	1002966	Callee	sljit_verbose_param		1002780	0					
ANR	1002967	Identifier	sljit_verbose_param		1002780	0					
ANR	1002968	ArgumentList	compiler		1002780	1					
ANR	1002969	Argument	compiler		1002780	0					
ANR	1002970	Identifier	compiler		1002780	0					
ANR	1002971	Argument	dst		1002780	1					
ANR	1002972	Identifier	dst		1002780	0					
ANR	1002973	Argument	dstw		1002780	2					
ANR	1002974	Identifier	dstw		1002780	0					
ANR	1002975	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1102:2:35113:35145	1002780	2	True				
ANR	1002976	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1002780	0					
ANR	1002977	Callee	fprintf		1002780	0					
ANR	1002978	Identifier	fprintf		1002780	0					
ANR	1002979	ArgumentList	compiler -> verbose		1002780	1					
ANR	1002980	Argument	compiler -> verbose		1002780	0					
ANR	1002981	PtrMemberAccess	compiler -> verbose		1002780	0					
ANR	1002982	Identifier	compiler		1002780	0					
ANR	1002983	Identifier	verbose		1002780	1					
ANR	1002984	Argument	""", """		1002780	1					
ANR	1002985	PrimaryExpression	""", """		1002780	0					
ANR	1002986	ExpressionStatement	"sljit_verbose_param ( compiler , src1 , src1w )"	1103:2:35149:35191	1002780	3	True				
ANR	1002987	CallExpression	"sljit_verbose_param ( compiler , src1 , src1w )"		1002780	0					
ANR	1002988	Callee	sljit_verbose_param		1002780	0					
ANR	1002989	Identifier	sljit_verbose_param		1002780	0					
ANR	1002990	ArgumentList	compiler		1002780	1					
ANR	1002991	Argument	compiler		1002780	0					
ANR	1002992	Identifier	compiler		1002780	0					
ANR	1002993	Argument	src1		1002780	1					
ANR	1002994	Identifier	src1		1002780	0					
ANR	1002995	Argument	src1w		1002780	2					
ANR	1002996	Identifier	src1w		1002780	0					
ANR	1002997	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1104:2:35195:35227	1002780	4	True				
ANR	1002998	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1002780	0					
ANR	1002999	Callee	fprintf		1002780	0					
ANR	1003000	Identifier	fprintf		1002780	0					
ANR	1003001	ArgumentList	compiler -> verbose		1002780	1					
ANR	1003002	Argument	compiler -> verbose		1002780	0					
ANR	1003003	PtrMemberAccess	compiler -> verbose		1002780	0					
ANR	1003004	Identifier	compiler		1002780	0					
ANR	1003005	Identifier	verbose		1002780	1					
ANR	1003006	Argument	""", """		1002780	1					
ANR	1003007	PrimaryExpression	""", """		1002780	0					
ANR	1003008	ExpressionStatement	"sljit_verbose_param ( compiler , src2 , src2w )"	1105:2:35231:35273	1002780	5	True				
ANR	1003009	CallExpression	"sljit_verbose_param ( compiler , src2 , src2w )"		1002780	0					
ANR	1003010	Callee	sljit_verbose_param		1002780	0					
ANR	1003011	Identifier	sljit_verbose_param		1002780	0					
ANR	1003012	ArgumentList	compiler		1002780	1					
ANR	1003013	Argument	compiler		1002780	0					
ANR	1003014	Identifier	compiler		1002780	0					
ANR	1003015	Argument	src2		1002780	1					
ANR	1003016	Identifier	src2		1002780	0					
ANR	1003017	Argument	src2w		1002780	2					
ANR	1003018	Identifier	src2w		1002780	0					
ANR	1003019	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1106:2:35277:35309	1002780	6	True				
ANR	1003020	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1002780	0					
ANR	1003021	Callee	fprintf		1002780	0					
ANR	1003022	Identifier	fprintf		1002780	0					
ANR	1003023	ArgumentList	compiler -> verbose		1002780	1					
ANR	1003024	Argument	compiler -> verbose		1002780	0					
ANR	1003025	PtrMemberAccess	compiler -> verbose		1002780	0					
ANR	1003026	Identifier	compiler		1002780	0					
ANR	1003027	Identifier	verbose		1002780	1					
ANR	1003028	Argument	"""\\n"""		1002780	1					
ANR	1003029	PrimaryExpression	"""\\n"""		1002780	0					
ANR	1003030	ExpressionStatement	CHECK_RETURN_OK	1109:1:35322:35337	1002780	7	True				
ANR	1003031	Identifier	CHECK_RETURN_OK		1002780	0					
ANR	1003032	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1002780	1					
ANR	1003033	Identifier	check_sljit_emit_op2		1002780	2					
ANR	1003034	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1002780	3					
ANR	1003035	Parameter	struct sljit_compiler * compiler	1079:59:34131:34161	1002780	0	True				
ANR	1003036	ParameterType	struct sljit_compiler *		1002780	0					
ANR	1003037	Identifier	compiler		1002780	1					
ANR	1003038	Parameter	sljit_si op	1079:92:34164:34174	1002780	1	True				
ANR	1003039	ParameterType	sljit_si		1002780	0					
ANR	1003040	Identifier	op		1002780	1					
ANR	1003041	Parameter	sljit_si dst	1080:1:34178:34189	1002780	2	True				
ANR	1003042	ParameterType	sljit_si		1002780	0					
ANR	1003043	Identifier	dst		1002780	1					
ANR	1003044	Parameter	sljit_sw dstw	1080:15:34192:34204	1002780	3	True				
ANR	1003045	ParameterType	sljit_sw		1002780	0					
ANR	1003046	Identifier	dstw		1002780	1					
ANR	1003047	Parameter	sljit_si src1	1081:1:34208:34220	1002780	4	True				
ANR	1003048	ParameterType	sljit_si		1002780	0					
ANR	1003049	Identifier	src1		1002780	1					
ANR	1003050	Parameter	sljit_sw src1w	1081:16:34223:34236	1002780	5	True				
ANR	1003051	ParameterType	sljit_sw		1002780	0					
ANR	1003052	Identifier	src1w		1002780	1					
ANR	1003053	Parameter	sljit_si src2	1082:1:34240:34252	1002780	6	True				
ANR	1003054	ParameterType	sljit_si		1002780	0					
ANR	1003055	Identifier	src2		1002780	1					
ANR	1003056	Parameter	sljit_sw src2w	1082:16:34255:34268	1002780	7	True				
ANR	1003057	ParameterType	sljit_sw		1002780	0					
ANR	1003058	Identifier	src2w		1002780	1					
ANR	1003059	CFGEntryNode	ENTRY		1002780		True				
ANR	1003060	CFGExitNode	EXIT		1002780		True				
ANR	1003061	Symbol	src1w		1002780						
ANR	1003062	Symbol	dst		1002780						
ANR	1003063	Symbol	SLJIT_SET_O		1002780						
ANR	1003064	Symbol	op2_names		1002780						
ANR	1003065	Symbol	SLJIT_SET_C		1002780						
ANR	1003066	Symbol	SLJIT_ADD		1002780						
ANR	1003067	Symbol	* compiler		1002780						
ANR	1003068	Symbol	SLJIT_SET_E		1002780						
ANR	1003069	Symbol	GET_OPCODE		1002780						
ANR	1003070	Symbol	SLJIT_ASHR		1002780						
ANR	1003071	Symbol	SLJIT_KEEP_FLAGS		1002780						
ANR	1003072	Symbol	SLJIT_SET_S		1002780						
ANR	1003073	Symbol	* GET_OPCODE		1002780						
ANR	1003074	Symbol	compiler		1002780						
ANR	1003075	Symbol	SLJIT_SET_U		1002780						
ANR	1003076	Symbol	src2w		1002780						
ANR	1003077	Symbol	op		1002780						
ANR	1003078	Symbol	SLJIT_INT_OP		1002780						
ANR	1003079	Symbol	* SLJIT_OP2_BASE		1002780						
ANR	1003080	Symbol	* op2_names		1002780						
ANR	1003081	Symbol	src1		1002780						
ANR	1003082	Symbol	compiler -> skip_checks		1002780						
ANR	1003083	Symbol	SLJIT_OP2_BASE		1002780						
ANR	1003084	Symbol	src2		1002780						
ANR	1003085	Symbol	dstw		1002780						
ANR	1003086	Symbol	SLJIT_UNLIKELY		1002780						
ANR	1003087	Symbol	compiler -> verbose		1002780						
ANR	1003088	Function	check_sljit_get_register_index	1112:0:35342:35599							
ANR	1003089	FunctionDef	check_sljit_get_register_index (sljit_si reg)		1003088	0					
ANR	1003090	CompoundStatement		1113:0:35425:35599	1003088	0					
ANR	1003091	ExpressionStatement	SLJIT_UNUSED_ARG ( reg )	1114:1:35428:35449	1003088	0	True				
ANR	1003092	CallExpression	SLJIT_UNUSED_ARG ( reg )		1003088	0					
ANR	1003093	Callee	SLJIT_UNUSED_ARG		1003088	0					
ANR	1003094	Identifier	SLJIT_UNUSED_ARG		1003088	0					
ANR	1003095	ArgumentList	reg		1003088	1					
ANR	1003096	Argument	reg		1003088	0					
ANR	1003097	Identifier	reg		1003088	0					
ANR	1003098	ExpressionStatement	CHECK_ARGUMENT ( reg > 0 && reg <= SLJIT_NUMBER_OF_REGISTERS )	1116:1:35513:35572	1003088	1	True				
ANR	1003099	CallExpression	CHECK_ARGUMENT ( reg > 0 && reg <= SLJIT_NUMBER_OF_REGISTERS )		1003088	0					
ANR	1003100	Callee	CHECK_ARGUMENT		1003088	0					
ANR	1003101	Identifier	CHECK_ARGUMENT		1003088	0					
ANR	1003102	ArgumentList	reg > 0 && reg <= SLJIT_NUMBER_OF_REGISTERS		1003088	1					
ANR	1003103	Argument	reg > 0 && reg <= SLJIT_NUMBER_OF_REGISTERS		1003088	0					
ANR	1003104	AndExpression	reg > 0 && reg <= SLJIT_NUMBER_OF_REGISTERS		1003088	0		&&			
ANR	1003105	RelationalExpression	reg > 0		1003088	0		>			
ANR	1003106	Identifier	reg		1003088	0					
ANR	1003107	PrimaryExpression	0		1003088	1					
ANR	1003108	RelationalExpression	reg <= SLJIT_NUMBER_OF_REGISTERS		1003088	1		<=			
ANR	1003109	Identifier	reg		1003088	0					
ANR	1003110	Identifier	SLJIT_NUMBER_OF_REGISTERS		1003088	1					
ANR	1003111	ExpressionStatement	CHECK_RETURN_OK	1118:1:35582:35597	1003088	2	True				
ANR	1003112	Identifier	CHECK_RETURN_OK		1003088	0					
ANR	1003113	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1003088	1					
ANR	1003114	Identifier	check_sljit_get_register_index		1003088	2					
ANR	1003115	ParameterList	sljit_si reg		1003088	3					
ANR	1003116	Parameter	sljit_si reg	1112:69:35411:35422	1003088	0	True				
ANR	1003117	ParameterType	sljit_si		1003088	0					
ANR	1003118	Identifier	reg		1003088	1					
ANR	1003119	CFGEntryNode	ENTRY		1003088		True				
ANR	1003120	CFGExitNode	EXIT		1003088		True				
ANR	1003121	Symbol	SLJIT_NUMBER_OF_REGISTERS		1003088						
ANR	1003122	Symbol	reg		1003088						
ANR	1003123	Function	check_sljit_get_float_register_index	1121:0:35602:35871							
ANR	1003124	FunctionDef	check_sljit_get_float_register_index (sljit_si reg)		1003123	0					
ANR	1003125	CompoundStatement		1122:0:35691:35871	1003123	0					
ANR	1003126	ExpressionStatement	SLJIT_UNUSED_ARG ( reg )	1123:1:35694:35715	1003123	0	True				
ANR	1003127	CallExpression	SLJIT_UNUSED_ARG ( reg )		1003123	0					
ANR	1003128	Callee	SLJIT_UNUSED_ARG		1003123	0					
ANR	1003129	Identifier	SLJIT_UNUSED_ARG		1003123	0					
ANR	1003130	ArgumentList	reg		1003123	1					
ANR	1003131	Argument	reg		1003123	0					
ANR	1003132	Identifier	reg		1003123	0					
ANR	1003133	ExpressionStatement	CHECK_ARGUMENT ( reg > 0 && reg <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )	1125:1:35779:35844	1003123	1	True				
ANR	1003134	CallExpression	CHECK_ARGUMENT ( reg > 0 && reg <= SLJIT_NUMBER_OF_FLOAT_REGISTERS )		1003123	0					
ANR	1003135	Callee	CHECK_ARGUMENT		1003123	0					
ANR	1003136	Identifier	CHECK_ARGUMENT		1003123	0					
ANR	1003137	ArgumentList	reg > 0 && reg <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1003123	1					
ANR	1003138	Argument	reg > 0 && reg <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1003123	0					
ANR	1003139	AndExpression	reg > 0 && reg <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1003123	0		&&			
ANR	1003140	RelationalExpression	reg > 0		1003123	0		>			
ANR	1003141	Identifier	reg		1003123	0					
ANR	1003142	PrimaryExpression	0		1003123	1					
ANR	1003143	RelationalExpression	reg <= SLJIT_NUMBER_OF_FLOAT_REGISTERS		1003123	1		<=			
ANR	1003144	Identifier	reg		1003123	0					
ANR	1003145	Identifier	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1003123	1					
ANR	1003146	ExpressionStatement	CHECK_RETURN_OK	1127:1:35854:35869	1003123	2	True				
ANR	1003147	Identifier	CHECK_RETURN_OK		1003123	0					
ANR	1003148	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1003123	1					
ANR	1003149	Identifier	check_sljit_get_float_register_index		1003123	2					
ANR	1003150	ParameterList	sljit_si reg		1003123	3					
ANR	1003151	Parameter	sljit_si reg	1121:75:35677:35688	1003123	0	True				
ANR	1003152	ParameterType	sljit_si		1003123	0					
ANR	1003153	Identifier	reg		1003123	1					
ANR	1003154	CFGEntryNode	ENTRY		1003123		True				
ANR	1003155	CFGExitNode	EXIT		1003123		True				
ANR	1003156	Symbol	reg		1003123						
ANR	1003157	Symbol	SLJIT_NUMBER_OF_FLOAT_REGISTERS		1003123						
ANR	1003158	Function	check_sljit_emit_op_custom	1130:0:35874:36861							
ANR	1003159	FunctionDef	"check_sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1003158	0					
ANR	1003160	CompoundStatement		1132:0:36007:36861	1003158	0					
ANR	1003161	IdentifierDeclStatement	int i ;	1134:1:36055:36060	1003158	0	True				
ANR	1003162	IdentifierDecl	i		1003158	0					
ANR	1003163	IdentifierDeclType	int		1003158	0					
ANR	1003164	Identifier	i		1003158	1					
ANR	1003165	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1137:1:36071:36097	1003158	1	True				
ANR	1003166	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1003158	0					
ANR	1003167	Callee	SLJIT_UNUSED_ARG		1003158	0					
ANR	1003168	Identifier	SLJIT_UNUSED_ARG		1003158	0					
ANR	1003169	ArgumentList	compiler		1003158	1					
ANR	1003170	Argument	compiler		1003158	0					
ANR	1003171	Identifier	compiler		1003158	0					
ANR	1003172	ExpressionStatement	CHECK_ARGUMENT ( instruction )	1140:1:36162:36189	1003158	2	True				
ANR	1003173	CallExpression	CHECK_ARGUMENT ( instruction )		1003158	0					
ANR	1003174	Callee	CHECK_ARGUMENT		1003158	0					
ANR	1003175	Identifier	CHECK_ARGUMENT		1003158	0					
ANR	1003176	ArgumentList	instruction		1003158	1					
ANR	1003177	Argument	instruction		1003158	0					
ANR	1003178	Identifier	instruction		1003158	0					
ANR	1003179	ExpressionStatement	CHECK_ARGUMENT ( size > 0 && size < 16 )	1142:1:36243:36280	1003158	3	True				
ANR	1003180	CallExpression	CHECK_ARGUMENT ( size > 0 && size < 16 )		1003158	0					
ANR	1003181	Callee	CHECK_ARGUMENT		1003158	0					
ANR	1003182	Identifier	CHECK_ARGUMENT		1003158	0					
ANR	1003183	ArgumentList	size > 0 && size < 16		1003158	1					
ANR	1003184	Argument	size > 0 && size < 16		1003158	0					
ANR	1003185	AndExpression	size > 0 && size < 16		1003158	0		&&			
ANR	1003186	RelationalExpression	size > 0		1003158	0		>			
ANR	1003187	Identifier	size		1003158	0					
ANR	1003188	PrimaryExpression	0		1003158	1					
ANR	1003189	RelationalExpression	size < 16		1003158	1		<			
ANR	1003190	Identifier	size		1003158	0					
ANR	1003191	PrimaryExpression	16		1003158	1					
ANR	1003192	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1003158	4					
ANR	1003193	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1152:5:36615:36649	1003158	0	True				
ANR	1003194	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1003158	0					
ANR	1003195	Callee	SLJIT_UNLIKELY		1003158	0					
ANR	1003196	Identifier	SLJIT_UNLIKELY		1003158	0					
ANR	1003197	ArgumentList	! ! compiler -> verbose		1003158	1					
ANR	1003198	Argument	! ! compiler -> verbose		1003158	0					
ANR	1003199	UnaryOperationExpression	! ! compiler -> verbose		1003158	0					
ANR	1003200	UnaryOperator	!		1003158	0					
ANR	1003201	UnaryOperationExpression	! compiler -> verbose		1003158	1					
ANR	1003202	UnaryOperator	!		1003158	0					
ANR	1003203	PtrMemberAccess	compiler -> verbose		1003158	1					
ANR	1003204	Identifier	compiler		1003158	0					
ANR	1003205	Identifier	verbose		1003158	1					
ANR	1003206	CompoundStatement		21:42:644:644	1003158	1					
ANR	1003207	ExpressionStatement	"fprintf ( compiler -> verbose , ""  op_custom"" )"	1153:2:36656:36697	1003158	0	True				
ANR	1003208	CallExpression	"fprintf ( compiler -> verbose , ""  op_custom"" )"		1003158	0					
ANR	1003209	Callee	fprintf		1003158	0					
ANR	1003210	Identifier	fprintf		1003158	0					
ANR	1003211	ArgumentList	compiler -> verbose		1003158	1					
ANR	1003212	Argument	compiler -> verbose		1003158	0					
ANR	1003213	PtrMemberAccess	compiler -> verbose		1003158	0					
ANR	1003214	Identifier	compiler		1003158	0					
ANR	1003215	Identifier	verbose		1003158	1					
ANR	1003216	Argument	"""  op_custom"""		1003158	1					
ANR	1003217	PrimaryExpression	"""  op_custom"""		1003158	0					
ANR	1003218	ForStatement	for ( i = 0 ; i < size ; i ++ )		1003158	1					
ANR	1003219	ForInit	i = 0 ;	1154:7:36706:36711	1003158	0	True				
ANR	1003220	AssignmentExpression	i = 0		1003158	0		=			
ANR	1003221	Identifier	i		1003158	0					
ANR	1003222	PrimaryExpression	0		1003158	1					
ANR	1003223	Condition	i < size	1154:14:36713:36720	1003158	1	True				
ANR	1003224	RelationalExpression	i < size		1003158	0		<			
ANR	1003225	Identifier	i		1003158	0					
ANR	1003226	Identifier	size		1003158	1					
ANR	1003227	PostIncDecOperationExpression	i ++	1154:24:36723:36725	1003158	2	True				
ANR	1003228	Identifier	i		1003158	0					
ANR	1003229	IncDec	++		1003158	1					
ANR	1003230	ExpressionStatement	"fprintf ( compiler -> verbose , "" 0x%x"" , ( ( sljit_ub * ) instruction ) [ i ] )"	1155:3:36731:36795	1003158	3	True				
ANR	1003231	CallExpression	"fprintf ( compiler -> verbose , "" 0x%x"" , ( ( sljit_ub * ) instruction ) [ i ] )"		1003158	0					
ANR	1003232	Callee	fprintf		1003158	0					
ANR	1003233	Identifier	fprintf		1003158	0					
ANR	1003234	ArgumentList	compiler -> verbose		1003158	1					
ANR	1003235	Argument	compiler -> verbose		1003158	0					
ANR	1003236	PtrMemberAccess	compiler -> verbose		1003158	0					
ANR	1003237	Identifier	compiler		1003158	0					
ANR	1003238	Identifier	verbose		1003158	1					
ANR	1003239	Argument	""" 0x%x"""		1003158	1					
ANR	1003240	PrimaryExpression	""" 0x%x"""		1003158	0					
ANR	1003241	Argument	( ( sljit_ub * ) instruction ) [ i ]		1003158	2					
ANR	1003242	ArrayIndexing	( ( sljit_ub * ) instruction ) [ i ]		1003158	0					
ANR	1003243	CastExpression	( sljit_ub * ) instruction		1003158	0					
ANR	1003244	CastTarget	sljit_ub *		1003158	0					
ANR	1003245	Identifier	instruction		1003158	1					
ANR	1003246	Identifier	i		1003158	1					
ANR	1003247	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1156:2:36799:36831	1003158	2	True				
ANR	1003248	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1003158	0					
ANR	1003249	Callee	fprintf		1003158	0					
ANR	1003250	Identifier	fprintf		1003158	0					
ANR	1003251	ArgumentList	compiler -> verbose		1003158	1					
ANR	1003252	Argument	compiler -> verbose		1003158	0					
ANR	1003253	PtrMemberAccess	compiler -> verbose		1003158	0					
ANR	1003254	Identifier	compiler		1003158	0					
ANR	1003255	Identifier	verbose		1003158	1					
ANR	1003256	Argument	"""\\n"""		1003158	1					
ANR	1003257	PrimaryExpression	"""\\n"""		1003158	0					
ANR	1003258	ExpressionStatement	CHECK_RETURN_OK	1159:1:36844:36859	1003158	5	True				
ANR	1003259	Identifier	CHECK_RETURN_OK		1003158	0					
ANR	1003260	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1003158	1					
ANR	1003261	Identifier	check_sljit_emit_op_custom		1003158	2					
ANR	1003262	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1003158	3					
ANR	1003263	Parameter	struct sljit_compiler * compiler	1130:65:35939:35969	1003158	0	True				
ANR	1003264	ParameterType	struct sljit_compiler *		1003158	0					
ANR	1003265	Identifier	compiler		1003158	1					
ANR	1003266	Parameter	void * instruction	1131:1:35973:35989	1003158	1	True				
ANR	1003267	ParameterType	void *		1003158	0					
ANR	1003268	Identifier	instruction		1003158	1					
ANR	1003269	Parameter	sljit_si size	1131:20:35992:36004	1003158	2	True				
ANR	1003270	ParameterType	sljit_si		1003158	0					
ANR	1003271	Identifier	size		1003158	1					
ANR	1003272	CFGEntryNode	ENTRY		1003158		True				
ANR	1003273	CFGExitNode	EXIT		1003158		True				
ANR	1003274	Symbol	* i		1003158						
ANR	1003275	Symbol	size		1003158						
ANR	1003276	Symbol	* instruction		1003158						
ANR	1003277	Symbol	instruction		1003158						
ANR	1003278	Symbol	i		1003158						
ANR	1003279	Symbol	* compiler		1003158						
ANR	1003280	Symbol	compiler		1003158						
ANR	1003281	Symbol	SLJIT_UNLIKELY		1003158						
ANR	1003282	Symbol	compiler -> verbose		1003158						
ANR	1003283	Function	check_sljit_emit_fop1	1162:0:36864:38002							
ANR	1003284	FunctionDef	"check_sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1003283	0					
ANR	1003285	CompoundStatement		1165:0:37030:38002	1003283	0					
ANR	1003286	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1003283	0					
ANR	1003287	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1166:5:37037:37073	1003283	0	True				
ANR	1003288	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1003283	0					
ANR	1003289	Callee	SLJIT_UNLIKELY		1003283	0					
ANR	1003290	Identifier	SLJIT_UNLIKELY		1003283	0					
ANR	1003291	ArgumentList	compiler -> skip_checks		1003283	1					
ANR	1003292	Argument	compiler -> skip_checks		1003283	0					
ANR	1003293	PtrMemberAccess	compiler -> skip_checks		1003283	0					
ANR	1003294	Identifier	compiler		1003283	0					
ANR	1003295	Identifier	skip_checks		1003283	1					
ANR	1003296	CompoundStatement		2:44:45:45	1003283	1					
ANR	1003297	ExpressionStatement	compiler -> skip_checks = 0	1167:2:37080:37105	1003283	0	True				
ANR	1003298	AssignmentExpression	compiler -> skip_checks = 0		1003283	0		=			
ANR	1003299	PtrMemberAccess	compiler -> skip_checks		1003283	0					
ANR	1003300	Identifier	compiler		1003283	0					
ANR	1003301	Identifier	skip_checks		1003283	1					
ANR	1003302	PrimaryExpression	0		1003283	1					
ANR	1003303	ExpressionStatement	CHECK_RETURN_OK	1168:2:37109:37124	1003283	1	True				
ANR	1003304	Identifier	CHECK_RETURN_OK		1003283	0					
ANR	1003305	ExpressionStatement	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )	1172:1:37192:37232	1003283	1	True				
ANR	1003306	CallExpression	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )		1003283	0					
ANR	1003307	Callee	CHECK_ARGUMENT		1003283	0					
ANR	1003308	Identifier	CHECK_ARGUMENT		1003283	0					
ANR	1003309	ArgumentList	sljit_is_fpu_available ( )		1003283	1					
ANR	1003310	Argument	sljit_is_fpu_available ( )		1003283	0					
ANR	1003311	CallExpression	sljit_is_fpu_available ( )		1003283	0					
ANR	1003312	Callee	sljit_is_fpu_available		1003283	0					
ANR	1003313	Identifier	sljit_is_fpu_available		1003283	0					
ANR	1003314	ArgumentList			1003283	1					
ANR	1003315	ExpressionStatement	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_DMOV && GET_OPCODE ( op ) <= SLJIT_DABS )	1173:1:37235:37311	1003283	2	True				
ANR	1003316	CallExpression	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_DMOV && GET_OPCODE ( op ) <= SLJIT_DABS )		1003283	0					
ANR	1003317	Callee	CHECK_ARGUMENT		1003283	0					
ANR	1003318	Identifier	CHECK_ARGUMENT		1003283	0					
ANR	1003319	ArgumentList	GET_OPCODE ( op ) >= SLJIT_DMOV && GET_OPCODE ( op ) <= SLJIT_DABS		1003283	1					
ANR	1003320	Argument	GET_OPCODE ( op ) >= SLJIT_DMOV && GET_OPCODE ( op ) <= SLJIT_DABS		1003283	0					
ANR	1003321	AndExpression	GET_OPCODE ( op ) >= SLJIT_DMOV && GET_OPCODE ( op ) <= SLJIT_DABS		1003283	0		&&			
ANR	1003322	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_DMOV		1003283	0		>=			
ANR	1003323	CallExpression	GET_OPCODE ( op )		1003283	0					
ANR	1003324	Callee	GET_OPCODE		1003283	0					
ANR	1003325	Identifier	GET_OPCODE		1003283	0					
ANR	1003326	ArgumentList	op		1003283	1					
ANR	1003327	Argument	op		1003283	0					
ANR	1003328	Identifier	op		1003283	0					
ANR	1003329	Identifier	SLJIT_DMOV		1003283	1					
ANR	1003330	RelationalExpression	GET_OPCODE ( op ) <= SLJIT_DABS		1003283	1		<=			
ANR	1003331	CallExpression	GET_OPCODE ( op )		1003283	0					
ANR	1003332	Callee	GET_OPCODE		1003283	0					
ANR	1003333	Identifier	GET_OPCODE		1003283	0					
ANR	1003334	ArgumentList	op		1003283	1					
ANR	1003335	Argument	op		1003283	0					
ANR	1003336	Identifier	op		1003283	0					
ANR	1003337	Identifier	SLJIT_DABS		1003283	1					
ANR	1003338	ExpressionStatement	FUNCTION_CHECK_FOP ( )	1174:1:37314:37334	1003283	3	True				
ANR	1003339	CallExpression	FUNCTION_CHECK_FOP ( )		1003283	0					
ANR	1003340	Callee	FUNCTION_CHECK_FOP		1003283	0					
ANR	1003341	Identifier	FUNCTION_CHECK_FOP		1003283	0					
ANR	1003342	ArgumentList			1003283	1					
ANR	1003343	ExpressionStatement	"FUNCTION_FCHECK ( src , srcw )"	1175:1:37337:37363	1003283	4	True				
ANR	1003344	CallExpression	"FUNCTION_FCHECK ( src , srcw )"		1003283	0					
ANR	1003345	Callee	FUNCTION_FCHECK		1003283	0					
ANR	1003346	Identifier	FUNCTION_FCHECK		1003283	0					
ANR	1003347	ArgumentList	src		1003283	1					
ANR	1003348	Argument	src		1003283	0					
ANR	1003349	Identifier	src		1003283	0					
ANR	1003350	Argument	srcw		1003283	1					
ANR	1003351	Identifier	srcw		1003283	0					
ANR	1003352	ExpressionStatement	"FUNCTION_FCHECK ( dst , dstw )"	1176:1:37366:37392	1003283	5	True				
ANR	1003353	CallExpression	"FUNCTION_FCHECK ( dst , dstw )"		1003283	0					
ANR	1003354	Callee	FUNCTION_FCHECK		1003283	0					
ANR	1003355	Identifier	FUNCTION_FCHECK		1003283	0					
ANR	1003356	ArgumentList	dst		1003283	1					
ANR	1003357	Argument	dst		1003283	0					
ANR	1003358	Identifier	dst		1003283	0					
ANR	1003359	Argument	dstw		1003283	1					
ANR	1003360	Identifier	dstw		1003283	0					
ANR	1003361	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1003283	6					
ANR	1003362	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1179:5:37451:37485	1003283	0	True				
ANR	1003363	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1003283	0					
ANR	1003364	Callee	SLJIT_UNLIKELY		1003283	0					
ANR	1003365	Identifier	SLJIT_UNLIKELY		1003283	0					
ANR	1003366	ArgumentList	! ! compiler -> verbose		1003283	1					
ANR	1003367	Argument	! ! compiler -> verbose		1003283	0					
ANR	1003368	UnaryOperationExpression	! ! compiler -> verbose		1003283	0					
ANR	1003369	UnaryOperator	!		1003283	0					
ANR	1003370	UnaryOperationExpression	! compiler -> verbose		1003283	1					
ANR	1003371	UnaryOperator	!		1003283	0					
ANR	1003372	PtrMemberAccess	compiler -> verbose		1003283	1					
ANR	1003373	Identifier	compiler		1003283	0					
ANR	1003374	Identifier	verbose		1003283	1					
ANR	1003375	CompoundStatement		15:42:457:457	1003283	1					
ANR	1003376	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS )		1003283	0					
ANR	1003377	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS	1180:6:37496:37530	1003283	0	True				
ANR	1003378	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1003283	0		==			
ANR	1003379	CallExpression	GET_OPCODE ( op )		1003283	0					
ANR	1003380	Callee	GET_OPCODE		1003283	0					
ANR	1003381	Identifier	GET_OPCODE		1003283	0					
ANR	1003382	ArgumentList	op		1003283	1					
ANR	1003383	Argument	op		1003283	0					
ANR	1003384	Identifier	op		1003283	0					
ANR	1003385	Identifier	SLJIT_CONVD_FROMS		1003283	1					
ANR	1003386	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s "" , fop1_names [ SLJIT_CONVD_FROMS - SLJIT_FOP1_BASE ] , ( op & SLJIT_SINGLE_OP ) ? ""s.fromd"" : ""d.froms"" )"	1181:3:37536:37674	1003283	1	True				
ANR	1003387	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s "" , fop1_names [ SLJIT_CONVD_FROMS - SLJIT_FOP1_BASE ] , ( op & SLJIT_SINGLE_OP ) ? ""s.fromd"" : ""d.froms"" )"		1003283	0					
ANR	1003388	Callee	fprintf		1003283	0					
ANR	1003389	Identifier	fprintf		1003283	0					
ANR	1003390	ArgumentList	compiler -> verbose		1003283	1					
ANR	1003391	Argument	compiler -> verbose		1003283	0					
ANR	1003392	PtrMemberAccess	compiler -> verbose		1003283	0					
ANR	1003393	Identifier	compiler		1003283	0					
ANR	1003394	Identifier	verbose		1003283	1					
ANR	1003395	Argument	"""  %s%s """		1003283	1					
ANR	1003396	PrimaryExpression	"""  %s%s """		1003283	0					
ANR	1003397	Argument	fop1_names [ SLJIT_CONVD_FROMS - SLJIT_FOP1_BASE ]		1003283	2					
ANR	1003398	ArrayIndexing	fop1_names [ SLJIT_CONVD_FROMS - SLJIT_FOP1_BASE ]		1003283	0					
ANR	1003399	Identifier	fop1_names		1003283	0					
ANR	1003400	AdditiveExpression	SLJIT_CONVD_FROMS - SLJIT_FOP1_BASE		1003283	1		-			
ANR	1003401	Identifier	SLJIT_CONVD_FROMS		1003283	0					
ANR	1003402	Identifier	SLJIT_FOP1_BASE		1003283	1					
ANR	1003403	Argument	"( op & SLJIT_SINGLE_OP ) ? ""s.fromd"" : ""d.froms"""		1003283	3					
ANR	1003404	ConditionalExpression	"( op & SLJIT_SINGLE_OP ) ? ""s.fromd"" : ""d.froms"""		1003283	0					
ANR	1003405	Condition	op & SLJIT_SINGLE_OP		1003283	0					
ANR	1003406	BitAndExpression	op & SLJIT_SINGLE_OP		1003283	0		&			
ANR	1003407	Identifier	op		1003283	0					
ANR	1003408	Identifier	SLJIT_SINGLE_OP		1003283	1					
ANR	1003409	PrimaryExpression	"""s.fromd"""		1003283	1					
ANR	1003410	PrimaryExpression	"""d.froms"""		1003283	2					
ANR	1003411	ElseStatement	else		1003283	0					
ANR	1003412	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s "" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ] )"	1184:3:37686:37809	1003283	0	True				
ANR	1003413	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s "" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ] )"		1003283	0					
ANR	1003414	Callee	fprintf		1003283	0					
ANR	1003415	Identifier	fprintf		1003283	0					
ANR	1003416	ArgumentList	compiler -> verbose		1003283	1					
ANR	1003417	Argument	compiler -> verbose		1003283	0					
ANR	1003418	PtrMemberAccess	compiler -> verbose		1003283	0					
ANR	1003419	Identifier	compiler		1003283	0					
ANR	1003420	Identifier	verbose		1003283	1					
ANR	1003421	Argument	"""  %s%s """		1003283	1					
ANR	1003422	PrimaryExpression	"""  %s%s """		1003283	0					
ANR	1003423	Argument	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003283	2					
ANR	1003424	ConditionalExpression	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003283	0					
ANR	1003425	Condition	op & SLJIT_SINGLE_OP		1003283	0					
ANR	1003426	BitAndExpression	op & SLJIT_SINGLE_OP		1003283	0		&			
ANR	1003427	Identifier	op		1003283	0					
ANR	1003428	Identifier	SLJIT_SINGLE_OP		1003283	1					
ANR	1003429	PrimaryExpression	"""s"""		1003283	1					
ANR	1003430	PrimaryExpression	"""d"""		1003283	2					
ANR	1003431	Argument	fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ]		1003283	3					
ANR	1003432	ArrayIndexing	fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ]		1003283	0					
ANR	1003433	Identifier	fop1_names		1003283	0					
ANR	1003434	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_FOP1_BASE		1003283	1		-			
ANR	1003435	CallExpression	GET_OPCODE ( op )		1003283	0					
ANR	1003436	Callee	GET_OPCODE		1003283	0					
ANR	1003437	Identifier	GET_OPCODE		1003283	0					
ANR	1003438	ArgumentList	op		1003283	1					
ANR	1003439	Argument	op		1003283	0					
ANR	1003440	Identifier	op		1003283	0					
ANR	1003441	Identifier	SLJIT_FOP1_BASE		1003283	1					
ANR	1003442	ExpressionStatement	"sljit_verbose_fparam ( compiler , dst , dstw )"	1187:2:37814:37855	1003283	1	True				
ANR	1003443	CallExpression	"sljit_verbose_fparam ( compiler , dst , dstw )"		1003283	0					
ANR	1003444	Callee	sljit_verbose_fparam		1003283	0					
ANR	1003445	Identifier	sljit_verbose_fparam		1003283	0					
ANR	1003446	ArgumentList	compiler		1003283	1					
ANR	1003447	Argument	compiler		1003283	0					
ANR	1003448	Identifier	compiler		1003283	0					
ANR	1003449	Argument	dst		1003283	1					
ANR	1003450	Identifier	dst		1003283	0					
ANR	1003451	Argument	dstw		1003283	2					
ANR	1003452	Identifier	dstw		1003283	0					
ANR	1003453	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1188:2:37859:37891	1003283	2	True				
ANR	1003454	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1003283	0					
ANR	1003455	Callee	fprintf		1003283	0					
ANR	1003456	Identifier	fprintf		1003283	0					
ANR	1003457	ArgumentList	compiler -> verbose		1003283	1					
ANR	1003458	Argument	compiler -> verbose		1003283	0					
ANR	1003459	PtrMemberAccess	compiler -> verbose		1003283	0					
ANR	1003460	Identifier	compiler		1003283	0					
ANR	1003461	Identifier	verbose		1003283	1					
ANR	1003462	Argument	""", """		1003283	1					
ANR	1003463	PrimaryExpression	""", """		1003283	0					
ANR	1003464	ExpressionStatement	"sljit_verbose_fparam ( compiler , src , srcw )"	1189:2:37895:37936	1003283	3	True				
ANR	1003465	CallExpression	"sljit_verbose_fparam ( compiler , src , srcw )"		1003283	0					
ANR	1003466	Callee	sljit_verbose_fparam		1003283	0					
ANR	1003467	Identifier	sljit_verbose_fparam		1003283	0					
ANR	1003468	ArgumentList	compiler		1003283	1					
ANR	1003469	Argument	compiler		1003283	0					
ANR	1003470	Identifier	compiler		1003283	0					
ANR	1003471	Argument	src		1003283	1					
ANR	1003472	Identifier	src		1003283	0					
ANR	1003473	Argument	srcw		1003283	2					
ANR	1003474	Identifier	srcw		1003283	0					
ANR	1003475	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1190:2:37940:37972	1003283	4	True				
ANR	1003476	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1003283	0					
ANR	1003477	Callee	fprintf		1003283	0					
ANR	1003478	Identifier	fprintf		1003283	0					
ANR	1003479	ArgumentList	compiler -> verbose		1003283	1					
ANR	1003480	Argument	compiler -> verbose		1003283	0					
ANR	1003481	PtrMemberAccess	compiler -> verbose		1003283	0					
ANR	1003482	Identifier	compiler		1003283	0					
ANR	1003483	Identifier	verbose		1003283	1					
ANR	1003484	Argument	"""\\n"""		1003283	1					
ANR	1003485	PrimaryExpression	"""\\n"""		1003283	0					
ANR	1003486	ExpressionStatement	CHECK_RETURN_OK	1193:1:37985:38000	1003283	7	True				
ANR	1003487	Identifier	CHECK_RETURN_OK		1003283	0					
ANR	1003488	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1003283	1					
ANR	1003489	Identifier	check_sljit_emit_fop1		1003283	2					
ANR	1003490	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1003283	3					
ANR	1003491	Parameter	struct sljit_compiler * compiler	1162:60:36924:36954	1003283	0	True				
ANR	1003492	ParameterType	struct sljit_compiler *		1003283	0					
ANR	1003493	Identifier	compiler		1003283	1					
ANR	1003494	Parameter	sljit_si op	1162:93:36957:36967	1003283	1	True				
ANR	1003495	ParameterType	sljit_si		1003283	0					
ANR	1003496	Identifier	op		1003283	1					
ANR	1003497	Parameter	sljit_si dst	1163:1:36971:36982	1003283	2	True				
ANR	1003498	ParameterType	sljit_si		1003283	0					
ANR	1003499	Identifier	dst		1003283	1					
ANR	1003500	Parameter	sljit_sw dstw	1163:15:36985:36997	1003283	3	True				
ANR	1003501	ParameterType	sljit_sw		1003283	0					
ANR	1003502	Identifier	dstw		1003283	1					
ANR	1003503	Parameter	sljit_si src	1164:1:37001:37012	1003283	4	True				
ANR	1003504	ParameterType	sljit_si		1003283	0					
ANR	1003505	Identifier	src		1003283	1					
ANR	1003506	Parameter	sljit_sw srcw	1164:15:37015:37027	1003283	5	True				
ANR	1003507	ParameterType	sljit_sw		1003283	0					
ANR	1003508	Identifier	srcw		1003283	1					
ANR	1003509	CFGEntryNode	ENTRY		1003283		True				
ANR	1003510	CFGExitNode	EXIT		1003283		True				
ANR	1003511	Symbol	op		1003283						
ANR	1003512	Symbol	SLJIT_DABS		1003283						
ANR	1003513	Symbol	SLJIT_DMOV		1003283						
ANR	1003514	Symbol	dst		1003283						
ANR	1003515	Symbol	src		1003283						
ANR	1003516	Symbol	srcw		1003283						
ANR	1003517	Symbol	SLJIT_SINGLE_OP		1003283						
ANR	1003518	Symbol	SLJIT_CONVD_FROMS		1003283						
ANR	1003519	Symbol	SLJIT_FOP1_BASE		1003283						
ANR	1003520	Symbol	sljit_is_fpu_available		1003283						
ANR	1003521	Symbol	* compiler		1003283						
ANR	1003522	Symbol	* SLJIT_FOP1_BASE		1003283						
ANR	1003523	Symbol	* SLJIT_CONVD_FROMS		1003283						
ANR	1003524	Symbol	GET_OPCODE		1003283						
ANR	1003525	Symbol	fop1_names		1003283						
ANR	1003526	Symbol	compiler -> skip_checks		1003283						
ANR	1003527	Symbol	* GET_OPCODE		1003283						
ANR	1003528	Symbol	compiler		1003283						
ANR	1003529	Symbol	dstw		1003283						
ANR	1003530	Symbol	* fop1_names		1003283						
ANR	1003531	Symbol	SLJIT_UNLIKELY		1003283						
ANR	1003532	Symbol	compiler -> verbose		1003283						
ANR	1003533	Function	check_sljit_emit_fop1_cmp	1196:0:38005:38995							
ANR	1003534	FunctionDef	"check_sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1003533	0					
ANR	1003535	CompoundStatement		1199:0:38179:38995	1003533	0					
ANR	1003536	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1003533	0					
ANR	1003537	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1200:5:38186:38222	1003533	0	True				
ANR	1003538	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1003533	0					
ANR	1003539	Callee	SLJIT_UNLIKELY		1003533	0					
ANR	1003540	Identifier	SLJIT_UNLIKELY		1003533	0					
ANR	1003541	ArgumentList	compiler -> skip_checks		1003533	1					
ANR	1003542	Argument	compiler -> skip_checks		1003533	0					
ANR	1003543	PtrMemberAccess	compiler -> skip_checks		1003533	0					
ANR	1003544	Identifier	compiler		1003533	0					
ANR	1003545	Identifier	skip_checks		1003533	1					
ANR	1003546	CompoundStatement		2:44:45:45	1003533	1					
ANR	1003547	ExpressionStatement	compiler -> skip_checks = 0	1201:2:38229:38254	1003533	0	True				
ANR	1003548	AssignmentExpression	compiler -> skip_checks = 0		1003533	0		=			
ANR	1003549	PtrMemberAccess	compiler -> skip_checks		1003533	0					
ANR	1003550	Identifier	compiler		1003533	0					
ANR	1003551	Identifier	skip_checks		1003533	1					
ANR	1003552	PrimaryExpression	0		1003533	1					
ANR	1003553	ExpressionStatement	CHECK_RETURN_OK	1202:2:38258:38273	1003533	1	True				
ANR	1003554	Identifier	CHECK_RETURN_OK		1003533	0					
ANR	1003555	ExpressionStatement	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )	1206:1:38341:38381	1003533	1	True				
ANR	1003556	CallExpression	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )		1003533	0					
ANR	1003557	Callee	CHECK_ARGUMENT		1003533	0					
ANR	1003558	Identifier	CHECK_ARGUMENT		1003533	0					
ANR	1003559	ArgumentList	sljit_is_fpu_available ( )		1003533	1					
ANR	1003560	Argument	sljit_is_fpu_available ( )		1003533	0					
ANR	1003561	CallExpression	sljit_is_fpu_available ( )		1003533	0					
ANR	1003562	Callee	sljit_is_fpu_available		1003533	0					
ANR	1003563	Identifier	sljit_is_fpu_available		1003533	0					
ANR	1003564	ArgumentList			1003533	1					
ANR	1003565	ExpressionStatement	CHECK_ARGUMENT ( GET_OPCODE ( op ) == SLJIT_DCMP )	1207:1:38384:38428	1003533	2	True				
ANR	1003566	CallExpression	CHECK_ARGUMENT ( GET_OPCODE ( op ) == SLJIT_DCMP )		1003533	0					
ANR	1003567	Callee	CHECK_ARGUMENT		1003533	0					
ANR	1003568	Identifier	CHECK_ARGUMENT		1003533	0					
ANR	1003569	ArgumentList	GET_OPCODE ( op ) == SLJIT_DCMP		1003533	1					
ANR	1003570	Argument	GET_OPCODE ( op ) == SLJIT_DCMP		1003533	0					
ANR	1003571	EqualityExpression	GET_OPCODE ( op ) == SLJIT_DCMP		1003533	0		==			
ANR	1003572	CallExpression	GET_OPCODE ( op )		1003533	0					
ANR	1003573	Callee	GET_OPCODE		1003533	0					
ANR	1003574	Identifier	GET_OPCODE		1003533	0					
ANR	1003575	ArgumentList	op		1003533	1					
ANR	1003576	Argument	op		1003533	0					
ANR	1003577	Identifier	op		1003533	0					
ANR	1003578	Identifier	SLJIT_DCMP		1003533	1					
ANR	1003579	ExpressionStatement	FUNCTION_CHECK_FOP ( )	1208:1:38431:38451	1003533	3	True				
ANR	1003580	CallExpression	FUNCTION_CHECK_FOP ( )		1003533	0					
ANR	1003581	Callee	FUNCTION_CHECK_FOP		1003533	0					
ANR	1003582	Identifier	FUNCTION_CHECK_FOP		1003533	0					
ANR	1003583	ArgumentList			1003533	1					
ANR	1003584	ExpressionStatement	"FUNCTION_FCHECK ( src1 , src1w )"	1209:1:38454:38482	1003533	4	True				
ANR	1003585	CallExpression	"FUNCTION_FCHECK ( src1 , src1w )"		1003533	0					
ANR	1003586	Callee	FUNCTION_FCHECK		1003533	0					
ANR	1003587	Identifier	FUNCTION_FCHECK		1003533	0					
ANR	1003588	ArgumentList	src1		1003533	1					
ANR	1003589	Argument	src1		1003533	0					
ANR	1003590	Identifier	src1		1003533	0					
ANR	1003591	Argument	src1w		1003533	1					
ANR	1003592	Identifier	src1w		1003533	0					
ANR	1003593	ExpressionStatement	"FUNCTION_FCHECK ( src2 , src2w )"	1210:1:38485:38513	1003533	5	True				
ANR	1003594	CallExpression	"FUNCTION_FCHECK ( src2 , src2w )"		1003533	0					
ANR	1003595	Callee	FUNCTION_FCHECK		1003533	0					
ANR	1003596	Identifier	FUNCTION_FCHECK		1003533	0					
ANR	1003597	ArgumentList	src2		1003533	1					
ANR	1003598	Argument	src2		1003533	0					
ANR	1003599	Identifier	src2		1003533	0					
ANR	1003600	Argument	src2w		1003533	1					
ANR	1003601	Identifier	src2w		1003533	0					
ANR	1003602	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1003533	6					
ANR	1003603	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1213:5:38572:38606	1003533	0	True				
ANR	1003604	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1003533	0					
ANR	1003605	Callee	SLJIT_UNLIKELY		1003533	0					
ANR	1003606	Identifier	SLJIT_UNLIKELY		1003533	0					
ANR	1003607	ArgumentList	! ! compiler -> verbose		1003533	1					
ANR	1003608	Argument	! ! compiler -> verbose		1003533	0					
ANR	1003609	UnaryOperationExpression	! ! compiler -> verbose		1003533	0					
ANR	1003610	UnaryOperator	!		1003533	0					
ANR	1003611	UnaryOperationExpression	! compiler -> verbose		1003533	1					
ANR	1003612	UnaryOperator	!		1003533	0					
ANR	1003613	PtrMemberAccess	compiler -> verbose		1003533	1					
ANR	1003614	Identifier	compiler		1003533	0					
ANR	1003615	Identifier	verbose		1003533	1					
ANR	1003616	CompoundStatement		15:42:429:429	1003533	1					
ANR	1003617	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s%s%s "" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , fop1_names [ SLJIT_DCMP - SLJIT_FOP1_BASE ] , ( op & SLJIT_SET_E ) ? "".e"" : """" , ( op & SLJIT_SET_S ) ? "".s"" : """" )"	1214:2:38613:38799	1003533	0	True				
ANR	1003618	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s%s%s "" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , fop1_names [ SLJIT_DCMP - SLJIT_FOP1_BASE ] , ( op & SLJIT_SET_E ) ? "".e"" : """" , ( op & SLJIT_SET_S ) ? "".s"" : """" )"		1003533	0					
ANR	1003619	Callee	fprintf		1003533	0					
ANR	1003620	Identifier	fprintf		1003533	0					
ANR	1003621	ArgumentList	compiler -> verbose		1003533	1					
ANR	1003622	Argument	compiler -> verbose		1003533	0					
ANR	1003623	PtrMemberAccess	compiler -> verbose		1003533	0					
ANR	1003624	Identifier	compiler		1003533	0					
ANR	1003625	Identifier	verbose		1003533	1					
ANR	1003626	Argument	"""  %s%s%s%s """		1003533	1					
ANR	1003627	PrimaryExpression	"""  %s%s%s%s """		1003533	0					
ANR	1003628	Argument	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003533	2					
ANR	1003629	ConditionalExpression	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003533	0					
ANR	1003630	Condition	op & SLJIT_SINGLE_OP		1003533	0					
ANR	1003631	BitAndExpression	op & SLJIT_SINGLE_OP		1003533	0		&			
ANR	1003632	Identifier	op		1003533	0					
ANR	1003633	Identifier	SLJIT_SINGLE_OP		1003533	1					
ANR	1003634	PrimaryExpression	"""s"""		1003533	1					
ANR	1003635	PrimaryExpression	"""d"""		1003533	2					
ANR	1003636	Argument	fop1_names [ SLJIT_DCMP - SLJIT_FOP1_BASE ]		1003533	3					
ANR	1003637	ArrayIndexing	fop1_names [ SLJIT_DCMP - SLJIT_FOP1_BASE ]		1003533	0					
ANR	1003638	Identifier	fop1_names		1003533	0					
ANR	1003639	AdditiveExpression	SLJIT_DCMP - SLJIT_FOP1_BASE		1003533	1		-			
ANR	1003640	Identifier	SLJIT_DCMP		1003533	0					
ANR	1003641	Identifier	SLJIT_FOP1_BASE		1003533	1					
ANR	1003642	Argument	"( op & SLJIT_SET_E ) ? "".e"" : """""		1003533	4					
ANR	1003643	ConditionalExpression	"( op & SLJIT_SET_E ) ? "".e"" : """""		1003533	0					
ANR	1003644	Condition	op & SLJIT_SET_E		1003533	0					
ANR	1003645	BitAndExpression	op & SLJIT_SET_E		1003533	0		&			
ANR	1003646	Identifier	op		1003533	0					
ANR	1003647	Identifier	SLJIT_SET_E		1003533	1					
ANR	1003648	PrimaryExpression	""".e"""		1003533	1					
ANR	1003649	PrimaryExpression	""""""		1003533	2					
ANR	1003650	Argument	"( op & SLJIT_SET_S ) ? "".s"" : """""		1003533	5					
ANR	1003651	ConditionalExpression	"( op & SLJIT_SET_S ) ? "".s"" : """""		1003533	0					
ANR	1003652	Condition	op & SLJIT_SET_S		1003533	0					
ANR	1003653	BitAndExpression	op & SLJIT_SET_S		1003533	0		&			
ANR	1003654	Identifier	op		1003533	0					
ANR	1003655	Identifier	SLJIT_SET_S		1003533	1					
ANR	1003656	PrimaryExpression	""".s"""		1003533	1					
ANR	1003657	PrimaryExpression	""""""		1003533	2					
ANR	1003658	ExpressionStatement	"sljit_verbose_fparam ( compiler , src1 , src1w )"	1216:2:38803:38846	1003533	1	True				
ANR	1003659	CallExpression	"sljit_verbose_fparam ( compiler , src1 , src1w )"		1003533	0					
ANR	1003660	Callee	sljit_verbose_fparam		1003533	0					
ANR	1003661	Identifier	sljit_verbose_fparam		1003533	0					
ANR	1003662	ArgumentList	compiler		1003533	1					
ANR	1003663	Argument	compiler		1003533	0					
ANR	1003664	Identifier	compiler		1003533	0					
ANR	1003665	Argument	src1		1003533	1					
ANR	1003666	Identifier	src1		1003533	0					
ANR	1003667	Argument	src1w		1003533	2					
ANR	1003668	Identifier	src1w		1003533	0					
ANR	1003669	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1217:2:38850:38882	1003533	2	True				
ANR	1003670	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1003533	0					
ANR	1003671	Callee	fprintf		1003533	0					
ANR	1003672	Identifier	fprintf		1003533	0					
ANR	1003673	ArgumentList	compiler -> verbose		1003533	1					
ANR	1003674	Argument	compiler -> verbose		1003533	0					
ANR	1003675	PtrMemberAccess	compiler -> verbose		1003533	0					
ANR	1003676	Identifier	compiler		1003533	0					
ANR	1003677	Identifier	verbose		1003533	1					
ANR	1003678	Argument	""", """		1003533	1					
ANR	1003679	PrimaryExpression	""", """		1003533	0					
ANR	1003680	ExpressionStatement	"sljit_verbose_fparam ( compiler , src2 , src2w )"	1218:2:38886:38929	1003533	3	True				
ANR	1003681	CallExpression	"sljit_verbose_fparam ( compiler , src2 , src2w )"		1003533	0					
ANR	1003682	Callee	sljit_verbose_fparam		1003533	0					
ANR	1003683	Identifier	sljit_verbose_fparam		1003533	0					
ANR	1003684	ArgumentList	compiler		1003533	1					
ANR	1003685	Argument	compiler		1003533	0					
ANR	1003686	Identifier	compiler		1003533	0					
ANR	1003687	Argument	src2		1003533	1					
ANR	1003688	Identifier	src2		1003533	0					
ANR	1003689	Argument	src2w		1003533	2					
ANR	1003690	Identifier	src2w		1003533	0					
ANR	1003691	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1219:2:38933:38965	1003533	4	True				
ANR	1003692	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1003533	0					
ANR	1003693	Callee	fprintf		1003533	0					
ANR	1003694	Identifier	fprintf		1003533	0					
ANR	1003695	ArgumentList	compiler -> verbose		1003533	1					
ANR	1003696	Argument	compiler -> verbose		1003533	0					
ANR	1003697	PtrMemberAccess	compiler -> verbose		1003533	0					
ANR	1003698	Identifier	compiler		1003533	0					
ANR	1003699	Identifier	verbose		1003533	1					
ANR	1003700	Argument	"""\\n"""		1003533	1					
ANR	1003701	PrimaryExpression	"""\\n"""		1003533	0					
ANR	1003702	ExpressionStatement	CHECK_RETURN_OK	1222:1:38978:38993	1003533	7	True				
ANR	1003703	Identifier	CHECK_RETURN_OK		1003533	0					
ANR	1003704	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1003533	1					
ANR	1003705	Identifier	check_sljit_emit_fop1_cmp		1003533	2					
ANR	1003706	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1003533	3					
ANR	1003707	Parameter	struct sljit_compiler * compiler	1196:64:38069:38099	1003533	0	True				
ANR	1003708	ParameterType	struct sljit_compiler *		1003533	0					
ANR	1003709	Identifier	compiler		1003533	1					
ANR	1003710	Parameter	sljit_si op	1196:97:38102:38112	1003533	1	True				
ANR	1003711	ParameterType	sljit_si		1003533	0					
ANR	1003712	Identifier	op		1003533	1					
ANR	1003713	Parameter	sljit_si src1	1197:1:38116:38128	1003533	2	True				
ANR	1003714	ParameterType	sljit_si		1003533	0					
ANR	1003715	Identifier	src1		1003533	1					
ANR	1003716	Parameter	sljit_sw src1w	1197:16:38131:38144	1003533	3	True				
ANR	1003717	ParameterType	sljit_sw		1003533	0					
ANR	1003718	Identifier	src1w		1003533	1					
ANR	1003719	Parameter	sljit_si src2	1198:1:38148:38160	1003533	4	True				
ANR	1003720	ParameterType	sljit_si		1003533	0					
ANR	1003721	Identifier	src2		1003533	1					
ANR	1003722	Parameter	sljit_sw src2w	1198:16:38163:38176	1003533	5	True				
ANR	1003723	ParameterType	sljit_sw		1003533	0					
ANR	1003724	Identifier	src2w		1003533	1					
ANR	1003725	CFGEntryNode	ENTRY		1003533		True				
ANR	1003726	CFGExitNode	EXIT		1003533		True				
ANR	1003727	Symbol	src2w		1003533						
ANR	1003728	Symbol	op		1003533						
ANR	1003729	Symbol	src1w		1003533						
ANR	1003730	Symbol	SLJIT_SINGLE_OP		1003533						
ANR	1003731	Symbol	SLJIT_FOP1_BASE		1003533						
ANR	1003732	Symbol	sljit_is_fpu_available		1003533						
ANR	1003733	Symbol	* compiler		1003533						
ANR	1003734	Symbol	* SLJIT_FOP1_BASE		1003533						
ANR	1003735	Symbol	SLJIT_SET_E		1003533						
ANR	1003736	Symbol	GET_OPCODE		1003533						
ANR	1003737	Symbol	fop1_names		1003533						
ANR	1003738	Symbol	* SLJIT_DCMP		1003533						
ANR	1003739	Symbol	SLJIT_DCMP		1003533						
ANR	1003740	Symbol	src1		1003533						
ANR	1003741	Symbol	compiler -> skip_checks		1003533						
ANR	1003742	Symbol	SLJIT_SET_S		1003533						
ANR	1003743	Symbol	src2		1003533						
ANR	1003744	Symbol	compiler		1003533						
ANR	1003745	Symbol	* fop1_names		1003533						
ANR	1003746	Symbol	SLJIT_UNLIKELY		1003533						
ANR	1003747	Symbol	compiler -> verbose		1003533						
ANR	1003748	Function	check_sljit_emit_fop1_convw_fromd	1225:0:38998:40029							
ANR	1003749	FunctionDef	"check_sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1003748	0					
ANR	1003750	CompoundStatement		1228:0:39176:40029	1003748	0					
ANR	1003751	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1003748	0					
ANR	1003752	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1229:5:39183:39219	1003748	0	True				
ANR	1003753	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1003748	0					
ANR	1003754	Callee	SLJIT_UNLIKELY		1003748	0					
ANR	1003755	Identifier	SLJIT_UNLIKELY		1003748	0					
ANR	1003756	ArgumentList	compiler -> skip_checks		1003748	1					
ANR	1003757	Argument	compiler -> skip_checks		1003748	0					
ANR	1003758	PtrMemberAccess	compiler -> skip_checks		1003748	0					
ANR	1003759	Identifier	compiler		1003748	0					
ANR	1003760	Identifier	skip_checks		1003748	1					
ANR	1003761	CompoundStatement		2:44:45:45	1003748	1					
ANR	1003762	ExpressionStatement	compiler -> skip_checks = 0	1230:2:39226:39251	1003748	0	True				
ANR	1003763	AssignmentExpression	compiler -> skip_checks = 0		1003748	0		=			
ANR	1003764	PtrMemberAccess	compiler -> skip_checks		1003748	0					
ANR	1003765	Identifier	compiler		1003748	0					
ANR	1003766	Identifier	skip_checks		1003748	1					
ANR	1003767	PrimaryExpression	0		1003748	1					
ANR	1003768	ExpressionStatement	CHECK_RETURN_OK	1231:2:39255:39270	1003748	1	True				
ANR	1003769	Identifier	CHECK_RETURN_OK		1003748	0					
ANR	1003770	ExpressionStatement	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )	1235:1:39338:39378	1003748	1	True				
ANR	1003771	CallExpression	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )		1003748	0					
ANR	1003772	Callee	CHECK_ARGUMENT		1003748	0					
ANR	1003773	Identifier	CHECK_ARGUMENT		1003748	0					
ANR	1003774	ArgumentList	sljit_is_fpu_available ( )		1003748	1					
ANR	1003775	Argument	sljit_is_fpu_available ( )		1003748	0					
ANR	1003776	CallExpression	sljit_is_fpu_available ( )		1003748	0					
ANR	1003777	Callee	sljit_is_fpu_available		1003748	0					
ANR	1003778	Identifier	sljit_is_fpu_available		1003748	0					
ANR	1003779	ArgumentList			1003748	1					
ANR	1003780	ExpressionStatement	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_CONVW_FROMD && GET_OPCODE ( op ) <= SLJIT_CONVI_FROMD )	1236:1:39381:39471	1003748	2	True				
ANR	1003781	CallExpression	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_CONVW_FROMD && GET_OPCODE ( op ) <= SLJIT_CONVI_FROMD )		1003748	0					
ANR	1003782	Callee	CHECK_ARGUMENT		1003748	0					
ANR	1003783	Identifier	CHECK_ARGUMENT		1003748	0					
ANR	1003784	ArgumentList	GET_OPCODE ( op ) >= SLJIT_CONVW_FROMD && GET_OPCODE ( op ) <= SLJIT_CONVI_FROMD		1003748	1					
ANR	1003785	Argument	GET_OPCODE ( op ) >= SLJIT_CONVW_FROMD && GET_OPCODE ( op ) <= SLJIT_CONVI_FROMD		1003748	0					
ANR	1003786	AndExpression	GET_OPCODE ( op ) >= SLJIT_CONVW_FROMD && GET_OPCODE ( op ) <= SLJIT_CONVI_FROMD		1003748	0		&&			
ANR	1003787	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_CONVW_FROMD		1003748	0		>=			
ANR	1003788	CallExpression	GET_OPCODE ( op )		1003748	0					
ANR	1003789	Callee	GET_OPCODE		1003748	0					
ANR	1003790	Identifier	GET_OPCODE		1003748	0					
ANR	1003791	ArgumentList	op		1003748	1					
ANR	1003792	Argument	op		1003748	0					
ANR	1003793	Identifier	op		1003748	0					
ANR	1003794	Identifier	SLJIT_CONVW_FROMD		1003748	1					
ANR	1003795	RelationalExpression	GET_OPCODE ( op ) <= SLJIT_CONVI_FROMD		1003748	1		<=			
ANR	1003796	CallExpression	GET_OPCODE ( op )		1003748	0					
ANR	1003797	Callee	GET_OPCODE		1003748	0					
ANR	1003798	Identifier	GET_OPCODE		1003748	0					
ANR	1003799	ArgumentList	op		1003748	1					
ANR	1003800	Argument	op		1003748	0					
ANR	1003801	Identifier	op		1003748	0					
ANR	1003802	Identifier	SLJIT_CONVI_FROMD		1003748	1					
ANR	1003803	ExpressionStatement	FUNCTION_CHECK_FOP ( )	1237:1:39474:39494	1003748	3	True				
ANR	1003804	CallExpression	FUNCTION_CHECK_FOP ( )		1003748	0					
ANR	1003805	Callee	FUNCTION_CHECK_FOP		1003748	0					
ANR	1003806	Identifier	FUNCTION_CHECK_FOP		1003748	0					
ANR	1003807	ArgumentList			1003748	1					
ANR	1003808	ExpressionStatement	"FUNCTION_FCHECK ( src , srcw )"	1238:1:39497:39523	1003748	4	True				
ANR	1003809	CallExpression	"FUNCTION_FCHECK ( src , srcw )"		1003748	0					
ANR	1003810	Callee	FUNCTION_FCHECK		1003748	0					
ANR	1003811	Identifier	FUNCTION_FCHECK		1003748	0					
ANR	1003812	ArgumentList	src		1003748	1					
ANR	1003813	Argument	src		1003748	0					
ANR	1003814	Identifier	src		1003748	0					
ANR	1003815	Argument	srcw		1003748	1					
ANR	1003816	Identifier	srcw		1003748	0					
ANR	1003817	ExpressionStatement	"FUNCTION_CHECK_DST ( dst , dstw )"	1239:1:39526:39555	1003748	5	True				
ANR	1003818	CallExpression	"FUNCTION_CHECK_DST ( dst , dstw )"		1003748	0					
ANR	1003819	Callee	FUNCTION_CHECK_DST		1003748	0					
ANR	1003820	Identifier	FUNCTION_CHECK_DST		1003748	0					
ANR	1003821	ArgumentList	dst		1003748	1					
ANR	1003822	Argument	dst		1003748	0					
ANR	1003823	Identifier	dst		1003748	0					
ANR	1003824	Argument	dstw		1003748	1					
ANR	1003825	Identifier	dstw		1003748	0					
ANR	1003826	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1003748	6					
ANR	1003827	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1242:5:39614:39648	1003748	0	True				
ANR	1003828	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1003748	0					
ANR	1003829	Callee	SLJIT_UNLIKELY		1003748	0					
ANR	1003830	Identifier	SLJIT_UNLIKELY		1003748	0					
ANR	1003831	ArgumentList	! ! compiler -> verbose		1003748	1					
ANR	1003832	Argument	! ! compiler -> verbose		1003748	0					
ANR	1003833	UnaryOperationExpression	! ! compiler -> verbose		1003748	0					
ANR	1003834	UnaryOperator	!		1003748	0					
ANR	1003835	UnaryOperationExpression	! compiler -> verbose		1003748	1					
ANR	1003836	UnaryOperator	!		1003748	0					
ANR	1003837	PtrMemberAccess	compiler -> verbose		1003748	1					
ANR	1003838	Identifier	compiler		1003748	0					
ANR	1003839	Identifier	verbose		1003748	1					
ANR	1003840	CompoundStatement		15:42:474:474	1003748	1					
ANR	1003841	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s.from%s "" , fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ] , ( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? ""i"" : ""w"" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" )"	1243:2:39655:39838	1003748	0	True				
ANR	1003842	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s.from%s "" , fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ] , ( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? ""i"" : ""w"" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" )"		1003748	0					
ANR	1003843	Callee	fprintf		1003748	0					
ANR	1003844	Identifier	fprintf		1003748	0					
ANR	1003845	ArgumentList	compiler -> verbose		1003748	1					
ANR	1003846	Argument	compiler -> verbose		1003748	0					
ANR	1003847	PtrMemberAccess	compiler -> verbose		1003748	0					
ANR	1003848	Identifier	compiler		1003748	0					
ANR	1003849	Identifier	verbose		1003748	1					
ANR	1003850	Argument	"""  %s%s.from%s """		1003748	1					
ANR	1003851	PrimaryExpression	"""  %s%s.from%s """		1003748	0					
ANR	1003852	Argument	fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ]		1003748	2					
ANR	1003853	ArrayIndexing	fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ]		1003748	0					
ANR	1003854	Identifier	fop1_names		1003748	0					
ANR	1003855	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_FOP1_BASE		1003748	1		-			
ANR	1003856	CallExpression	GET_OPCODE ( op )		1003748	0					
ANR	1003857	Callee	GET_OPCODE		1003748	0					
ANR	1003858	Identifier	GET_OPCODE		1003748	0					
ANR	1003859	ArgumentList	op		1003748	1					
ANR	1003860	Argument	op		1003748	0					
ANR	1003861	Identifier	op		1003748	0					
ANR	1003862	Identifier	SLJIT_FOP1_BASE		1003748	1					
ANR	1003863	Argument	"( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? ""i"" : ""w"""		1003748	3					
ANR	1003864	ConditionalExpression	"( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? ""i"" : ""w"""		1003748	0					
ANR	1003865	Condition	GET_OPCODE ( op ) == SLJIT_CONVI_FROMD		1003748	0					
ANR	1003866	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVI_FROMD		1003748	0		==			
ANR	1003867	CallExpression	GET_OPCODE ( op )		1003748	0					
ANR	1003868	Callee	GET_OPCODE		1003748	0					
ANR	1003869	Identifier	GET_OPCODE		1003748	0					
ANR	1003870	ArgumentList	op		1003748	1					
ANR	1003871	Argument	op		1003748	0					
ANR	1003872	Identifier	op		1003748	0					
ANR	1003873	Identifier	SLJIT_CONVI_FROMD		1003748	1					
ANR	1003874	PrimaryExpression	"""i"""		1003748	1					
ANR	1003875	PrimaryExpression	"""w"""		1003748	2					
ANR	1003876	Argument	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003748	4					
ANR	1003877	ConditionalExpression	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003748	0					
ANR	1003878	Condition	op & SLJIT_SINGLE_OP		1003748	0					
ANR	1003879	BitAndExpression	op & SLJIT_SINGLE_OP		1003748	0		&			
ANR	1003880	Identifier	op		1003748	0					
ANR	1003881	Identifier	SLJIT_SINGLE_OP		1003748	1					
ANR	1003882	PrimaryExpression	"""s"""		1003748	1					
ANR	1003883	PrimaryExpression	"""d"""		1003748	2					
ANR	1003884	ExpressionStatement	"sljit_verbose_param ( compiler , dst , dstw )"	1246:2:39842:39882	1003748	1	True				
ANR	1003885	CallExpression	"sljit_verbose_param ( compiler , dst , dstw )"		1003748	0					
ANR	1003886	Callee	sljit_verbose_param		1003748	0					
ANR	1003887	Identifier	sljit_verbose_param		1003748	0					
ANR	1003888	ArgumentList	compiler		1003748	1					
ANR	1003889	Argument	compiler		1003748	0					
ANR	1003890	Identifier	compiler		1003748	0					
ANR	1003891	Argument	dst		1003748	1					
ANR	1003892	Identifier	dst		1003748	0					
ANR	1003893	Argument	dstw		1003748	2					
ANR	1003894	Identifier	dstw		1003748	0					
ANR	1003895	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1247:2:39886:39918	1003748	2	True				
ANR	1003896	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1003748	0					
ANR	1003897	Callee	fprintf		1003748	0					
ANR	1003898	Identifier	fprintf		1003748	0					
ANR	1003899	ArgumentList	compiler -> verbose		1003748	1					
ANR	1003900	Argument	compiler -> verbose		1003748	0					
ANR	1003901	PtrMemberAccess	compiler -> verbose		1003748	0					
ANR	1003902	Identifier	compiler		1003748	0					
ANR	1003903	Identifier	verbose		1003748	1					
ANR	1003904	Argument	""", """		1003748	1					
ANR	1003905	PrimaryExpression	""", """		1003748	0					
ANR	1003906	ExpressionStatement	"sljit_verbose_fparam ( compiler , src , srcw )"	1248:2:39922:39963	1003748	3	True				
ANR	1003907	CallExpression	"sljit_verbose_fparam ( compiler , src , srcw )"		1003748	0					
ANR	1003908	Callee	sljit_verbose_fparam		1003748	0					
ANR	1003909	Identifier	sljit_verbose_fparam		1003748	0					
ANR	1003910	ArgumentList	compiler		1003748	1					
ANR	1003911	Argument	compiler		1003748	0					
ANR	1003912	Identifier	compiler		1003748	0					
ANR	1003913	Argument	src		1003748	1					
ANR	1003914	Identifier	src		1003748	0					
ANR	1003915	Argument	srcw		1003748	2					
ANR	1003916	Identifier	srcw		1003748	0					
ANR	1003917	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1249:2:39967:39999	1003748	4	True				
ANR	1003918	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1003748	0					
ANR	1003919	Callee	fprintf		1003748	0					
ANR	1003920	Identifier	fprintf		1003748	0					
ANR	1003921	ArgumentList	compiler -> verbose		1003748	1					
ANR	1003922	Argument	compiler -> verbose		1003748	0					
ANR	1003923	PtrMemberAccess	compiler -> verbose		1003748	0					
ANR	1003924	Identifier	compiler		1003748	0					
ANR	1003925	Identifier	verbose		1003748	1					
ANR	1003926	Argument	"""\\n"""		1003748	1					
ANR	1003927	PrimaryExpression	"""\\n"""		1003748	0					
ANR	1003928	ExpressionStatement	CHECK_RETURN_OK	1252:1:40012:40027	1003748	7	True				
ANR	1003929	Identifier	CHECK_RETURN_OK		1003748	0					
ANR	1003930	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1003748	1					
ANR	1003931	Identifier	check_sljit_emit_fop1_convw_fromd		1003748	2					
ANR	1003932	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1003748	3					
ANR	1003933	Parameter	struct sljit_compiler * compiler	1225:72:39070:39100	1003748	0	True				
ANR	1003934	ParameterType	struct sljit_compiler *		1003748	0					
ANR	1003935	Identifier	compiler		1003748	1					
ANR	1003936	Parameter	sljit_si op	1225:105:39103:39113	1003748	1	True				
ANR	1003937	ParameterType	sljit_si		1003748	0					
ANR	1003938	Identifier	op		1003748	1					
ANR	1003939	Parameter	sljit_si dst	1226:1:39117:39128	1003748	2	True				
ANR	1003940	ParameterType	sljit_si		1003748	0					
ANR	1003941	Identifier	dst		1003748	1					
ANR	1003942	Parameter	sljit_sw dstw	1226:15:39131:39143	1003748	3	True				
ANR	1003943	ParameterType	sljit_sw		1003748	0					
ANR	1003944	Identifier	dstw		1003748	1					
ANR	1003945	Parameter	sljit_si src	1227:1:39147:39158	1003748	4	True				
ANR	1003946	ParameterType	sljit_si		1003748	0					
ANR	1003947	Identifier	src		1003748	1					
ANR	1003948	Parameter	sljit_sw srcw	1227:15:39161:39173	1003748	5	True				
ANR	1003949	ParameterType	sljit_sw		1003748	0					
ANR	1003950	Identifier	srcw		1003748	1					
ANR	1003951	CFGEntryNode	ENTRY		1003748		True				
ANR	1003952	CFGExitNode	EXIT		1003748		True				
ANR	1003953	Symbol	op		1003748						
ANR	1003954	Symbol	dst		1003748						
ANR	1003955	Symbol	src		1003748						
ANR	1003956	Symbol	srcw		1003748						
ANR	1003957	Symbol	SLJIT_SINGLE_OP		1003748						
ANR	1003958	Symbol	SLJIT_FOP1_BASE		1003748						
ANR	1003959	Symbol	sljit_is_fpu_available		1003748						
ANR	1003960	Symbol	* compiler		1003748						
ANR	1003961	Symbol	* SLJIT_FOP1_BASE		1003748						
ANR	1003962	Symbol	SLJIT_CONVW_FROMD		1003748						
ANR	1003963	Symbol	GET_OPCODE		1003748						
ANR	1003964	Symbol	fop1_names		1003748						
ANR	1003965	Symbol	SLJIT_CONVI_FROMD		1003748						
ANR	1003966	Symbol	compiler -> skip_checks		1003748						
ANR	1003967	Symbol	* GET_OPCODE		1003748						
ANR	1003968	Symbol	compiler		1003748						
ANR	1003969	Symbol	dstw		1003748						
ANR	1003970	Symbol	* fop1_names		1003748						
ANR	1003971	Symbol	SLJIT_UNLIKELY		1003748						
ANR	1003972	Symbol	compiler -> verbose		1003748						
ANR	1003973	Function	check_sljit_emit_fop1_convd_fromw	1255:0:40032:41063							
ANR	1003974	FunctionDef	"check_sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1003973	0					
ANR	1003975	CompoundStatement		1258:0:40210:41063	1003973	0					
ANR	1003976	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1003973	0					
ANR	1003977	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1259:5:40217:40253	1003973	0	True				
ANR	1003978	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1003973	0					
ANR	1003979	Callee	SLJIT_UNLIKELY		1003973	0					
ANR	1003980	Identifier	SLJIT_UNLIKELY		1003973	0					
ANR	1003981	ArgumentList	compiler -> skip_checks		1003973	1					
ANR	1003982	Argument	compiler -> skip_checks		1003973	0					
ANR	1003983	PtrMemberAccess	compiler -> skip_checks		1003973	0					
ANR	1003984	Identifier	compiler		1003973	0					
ANR	1003985	Identifier	skip_checks		1003973	1					
ANR	1003986	CompoundStatement		2:44:45:45	1003973	1					
ANR	1003987	ExpressionStatement	compiler -> skip_checks = 0	1260:2:40260:40285	1003973	0	True				
ANR	1003988	AssignmentExpression	compiler -> skip_checks = 0		1003973	0		=			
ANR	1003989	PtrMemberAccess	compiler -> skip_checks		1003973	0					
ANR	1003990	Identifier	compiler		1003973	0					
ANR	1003991	Identifier	skip_checks		1003973	1					
ANR	1003992	PrimaryExpression	0		1003973	1					
ANR	1003993	ExpressionStatement	CHECK_RETURN_OK	1261:2:40289:40304	1003973	1	True				
ANR	1003994	Identifier	CHECK_RETURN_OK		1003973	0					
ANR	1003995	ExpressionStatement	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )	1265:1:40372:40412	1003973	1	True				
ANR	1003996	CallExpression	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )		1003973	0					
ANR	1003997	Callee	CHECK_ARGUMENT		1003973	0					
ANR	1003998	Identifier	CHECK_ARGUMENT		1003973	0					
ANR	1003999	ArgumentList	sljit_is_fpu_available ( )		1003973	1					
ANR	1004000	Argument	sljit_is_fpu_available ( )		1003973	0					
ANR	1004001	CallExpression	sljit_is_fpu_available ( )		1003973	0					
ANR	1004002	Callee	sljit_is_fpu_available		1003973	0					
ANR	1004003	Identifier	sljit_is_fpu_available		1003973	0					
ANR	1004004	ArgumentList			1003973	1					
ANR	1004005	ExpressionStatement	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_CONVD_FROMW && GET_OPCODE ( op ) <= SLJIT_CONVD_FROMI )	1266:1:40415:40505	1003973	2	True				
ANR	1004006	CallExpression	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_CONVD_FROMW && GET_OPCODE ( op ) <= SLJIT_CONVD_FROMI )		1003973	0					
ANR	1004007	Callee	CHECK_ARGUMENT		1003973	0					
ANR	1004008	Identifier	CHECK_ARGUMENT		1003973	0					
ANR	1004009	ArgumentList	GET_OPCODE ( op ) >= SLJIT_CONVD_FROMW && GET_OPCODE ( op ) <= SLJIT_CONVD_FROMI		1003973	1					
ANR	1004010	Argument	GET_OPCODE ( op ) >= SLJIT_CONVD_FROMW && GET_OPCODE ( op ) <= SLJIT_CONVD_FROMI		1003973	0					
ANR	1004011	AndExpression	GET_OPCODE ( op ) >= SLJIT_CONVD_FROMW && GET_OPCODE ( op ) <= SLJIT_CONVD_FROMI		1003973	0		&&			
ANR	1004012	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_CONVD_FROMW		1003973	0		>=			
ANR	1004013	CallExpression	GET_OPCODE ( op )		1003973	0					
ANR	1004014	Callee	GET_OPCODE		1003973	0					
ANR	1004015	Identifier	GET_OPCODE		1003973	0					
ANR	1004016	ArgumentList	op		1003973	1					
ANR	1004017	Argument	op		1003973	0					
ANR	1004018	Identifier	op		1003973	0					
ANR	1004019	Identifier	SLJIT_CONVD_FROMW		1003973	1					
ANR	1004020	RelationalExpression	GET_OPCODE ( op ) <= SLJIT_CONVD_FROMI		1003973	1		<=			
ANR	1004021	CallExpression	GET_OPCODE ( op )		1003973	0					
ANR	1004022	Callee	GET_OPCODE		1003973	0					
ANR	1004023	Identifier	GET_OPCODE		1003973	0					
ANR	1004024	ArgumentList	op		1003973	1					
ANR	1004025	Argument	op		1003973	0					
ANR	1004026	Identifier	op		1003973	0					
ANR	1004027	Identifier	SLJIT_CONVD_FROMI		1003973	1					
ANR	1004028	ExpressionStatement	FUNCTION_CHECK_FOP ( )	1267:1:40508:40528	1003973	3	True				
ANR	1004029	CallExpression	FUNCTION_CHECK_FOP ( )		1003973	0					
ANR	1004030	Callee	FUNCTION_CHECK_FOP		1003973	0					
ANR	1004031	Identifier	FUNCTION_CHECK_FOP		1003973	0					
ANR	1004032	ArgumentList			1003973	1					
ANR	1004033	ExpressionStatement	"FUNCTION_CHECK_SRC ( src , srcw )"	1268:1:40531:40560	1003973	4	True				
ANR	1004034	CallExpression	"FUNCTION_CHECK_SRC ( src , srcw )"		1003973	0					
ANR	1004035	Callee	FUNCTION_CHECK_SRC		1003973	0					
ANR	1004036	Identifier	FUNCTION_CHECK_SRC		1003973	0					
ANR	1004037	ArgumentList	src		1003973	1					
ANR	1004038	Argument	src		1003973	0					
ANR	1004039	Identifier	src		1003973	0					
ANR	1004040	Argument	srcw		1003973	1					
ANR	1004041	Identifier	srcw		1003973	0					
ANR	1004042	ExpressionStatement	"FUNCTION_FCHECK ( dst , dstw )"	1269:1:40563:40589	1003973	5	True				
ANR	1004043	CallExpression	"FUNCTION_FCHECK ( dst , dstw )"		1003973	0					
ANR	1004044	Callee	FUNCTION_FCHECK		1003973	0					
ANR	1004045	Identifier	FUNCTION_FCHECK		1003973	0					
ANR	1004046	ArgumentList	dst		1003973	1					
ANR	1004047	Argument	dst		1003973	0					
ANR	1004048	Identifier	dst		1003973	0					
ANR	1004049	Argument	dstw		1003973	1					
ANR	1004050	Identifier	dstw		1003973	0					
ANR	1004051	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1003973	6					
ANR	1004052	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1272:5:40648:40682	1003973	0	True				
ANR	1004053	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1003973	0					
ANR	1004054	Callee	SLJIT_UNLIKELY		1003973	0					
ANR	1004055	Identifier	SLJIT_UNLIKELY		1003973	0					
ANR	1004056	ArgumentList	! ! compiler -> verbose		1003973	1					
ANR	1004057	Argument	! ! compiler -> verbose		1003973	0					
ANR	1004058	UnaryOperationExpression	! ! compiler -> verbose		1003973	0					
ANR	1004059	UnaryOperator	!		1003973	0					
ANR	1004060	UnaryOperationExpression	! compiler -> verbose		1003973	1					
ANR	1004061	UnaryOperator	!		1003973	0					
ANR	1004062	PtrMemberAccess	compiler -> verbose		1003973	1					
ANR	1004063	Identifier	compiler		1003973	0					
ANR	1004064	Identifier	verbose		1003973	1					
ANR	1004065	CompoundStatement		15:42:474:474	1003973	1					
ANR	1004066	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s.from%s "" , fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ] , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? ""i"" : ""w"" )"	1273:2:40689:40872	1003973	0	True				
ANR	1004067	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s.from%s "" , fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ] , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? ""i"" : ""w"" )"		1003973	0					
ANR	1004068	Callee	fprintf		1003973	0					
ANR	1004069	Identifier	fprintf		1003973	0					
ANR	1004070	ArgumentList	compiler -> verbose		1003973	1					
ANR	1004071	Argument	compiler -> verbose		1003973	0					
ANR	1004072	PtrMemberAccess	compiler -> verbose		1003973	0					
ANR	1004073	Identifier	compiler		1003973	0					
ANR	1004074	Identifier	verbose		1003973	1					
ANR	1004075	Argument	"""  %s%s.from%s """		1003973	1					
ANR	1004076	PrimaryExpression	"""  %s%s.from%s """		1003973	0					
ANR	1004077	Argument	fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ]		1003973	2					
ANR	1004078	ArrayIndexing	fop1_names [ GET_OPCODE ( op ) - SLJIT_FOP1_BASE ]		1003973	0					
ANR	1004079	Identifier	fop1_names		1003973	0					
ANR	1004080	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_FOP1_BASE		1003973	1		-			
ANR	1004081	CallExpression	GET_OPCODE ( op )		1003973	0					
ANR	1004082	Callee	GET_OPCODE		1003973	0					
ANR	1004083	Identifier	GET_OPCODE		1003973	0					
ANR	1004084	ArgumentList	op		1003973	1					
ANR	1004085	Argument	op		1003973	0					
ANR	1004086	Identifier	op		1003973	0					
ANR	1004087	Identifier	SLJIT_FOP1_BASE		1003973	1					
ANR	1004088	Argument	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003973	3					
ANR	1004089	ConditionalExpression	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1003973	0					
ANR	1004090	Condition	op & SLJIT_SINGLE_OP		1003973	0					
ANR	1004091	BitAndExpression	op & SLJIT_SINGLE_OP		1003973	0		&			
ANR	1004092	Identifier	op		1003973	0					
ANR	1004093	Identifier	SLJIT_SINGLE_OP		1003973	1					
ANR	1004094	PrimaryExpression	"""s"""		1003973	1					
ANR	1004095	PrimaryExpression	"""d"""		1003973	2					
ANR	1004096	Argument	"( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? ""i"" : ""w"""		1003973	4					
ANR	1004097	ConditionalExpression	"( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? ""i"" : ""w"""		1003973	0					
ANR	1004098	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1003973	0					
ANR	1004099	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1003973	0		==			
ANR	1004100	CallExpression	GET_OPCODE ( op )		1003973	0					
ANR	1004101	Callee	GET_OPCODE		1003973	0					
ANR	1004102	Identifier	GET_OPCODE		1003973	0					
ANR	1004103	ArgumentList	op		1003973	1					
ANR	1004104	Argument	op		1003973	0					
ANR	1004105	Identifier	op		1003973	0					
ANR	1004106	Identifier	SLJIT_CONVD_FROMI		1003973	1					
ANR	1004107	PrimaryExpression	"""i"""		1003973	1					
ANR	1004108	PrimaryExpression	"""w"""		1003973	2					
ANR	1004109	ExpressionStatement	"sljit_verbose_fparam ( compiler , dst , dstw )"	1276:2:40876:40917	1003973	1	True				
ANR	1004110	CallExpression	"sljit_verbose_fparam ( compiler , dst , dstw )"		1003973	0					
ANR	1004111	Callee	sljit_verbose_fparam		1003973	0					
ANR	1004112	Identifier	sljit_verbose_fparam		1003973	0					
ANR	1004113	ArgumentList	compiler		1003973	1					
ANR	1004114	Argument	compiler		1003973	0					
ANR	1004115	Identifier	compiler		1003973	0					
ANR	1004116	Argument	dst		1003973	1					
ANR	1004117	Identifier	dst		1003973	0					
ANR	1004118	Argument	dstw		1003973	2					
ANR	1004119	Identifier	dstw		1003973	0					
ANR	1004120	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1277:2:40921:40953	1003973	2	True				
ANR	1004121	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1003973	0					
ANR	1004122	Callee	fprintf		1003973	0					
ANR	1004123	Identifier	fprintf		1003973	0					
ANR	1004124	ArgumentList	compiler -> verbose		1003973	1					
ANR	1004125	Argument	compiler -> verbose		1003973	0					
ANR	1004126	PtrMemberAccess	compiler -> verbose		1003973	0					
ANR	1004127	Identifier	compiler		1003973	0					
ANR	1004128	Identifier	verbose		1003973	1					
ANR	1004129	Argument	""", """		1003973	1					
ANR	1004130	PrimaryExpression	""", """		1003973	0					
ANR	1004131	ExpressionStatement	"sljit_verbose_param ( compiler , src , srcw )"	1278:2:40957:40997	1003973	3	True				
ANR	1004132	CallExpression	"sljit_verbose_param ( compiler , src , srcw )"		1003973	0					
ANR	1004133	Callee	sljit_verbose_param		1003973	0					
ANR	1004134	Identifier	sljit_verbose_param		1003973	0					
ANR	1004135	ArgumentList	compiler		1003973	1					
ANR	1004136	Argument	compiler		1003973	0					
ANR	1004137	Identifier	compiler		1003973	0					
ANR	1004138	Argument	src		1003973	1					
ANR	1004139	Identifier	src		1003973	0					
ANR	1004140	Argument	srcw		1003973	2					
ANR	1004141	Identifier	srcw		1003973	0					
ANR	1004142	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1279:2:41001:41033	1003973	4	True				
ANR	1004143	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1003973	0					
ANR	1004144	Callee	fprintf		1003973	0					
ANR	1004145	Identifier	fprintf		1003973	0					
ANR	1004146	ArgumentList	compiler -> verbose		1003973	1					
ANR	1004147	Argument	compiler -> verbose		1003973	0					
ANR	1004148	PtrMemberAccess	compiler -> verbose		1003973	0					
ANR	1004149	Identifier	compiler		1003973	0					
ANR	1004150	Identifier	verbose		1003973	1					
ANR	1004151	Argument	"""\\n"""		1003973	1					
ANR	1004152	PrimaryExpression	"""\\n"""		1003973	0					
ANR	1004153	ExpressionStatement	CHECK_RETURN_OK	1282:1:41046:41061	1003973	7	True				
ANR	1004154	Identifier	CHECK_RETURN_OK		1003973	0					
ANR	1004155	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1003973	1					
ANR	1004156	Identifier	check_sljit_emit_fop1_convd_fromw		1003973	2					
ANR	1004157	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1003973	3					
ANR	1004158	Parameter	struct sljit_compiler * compiler	1255:72:40104:40134	1003973	0	True				
ANR	1004159	ParameterType	struct sljit_compiler *		1003973	0					
ANR	1004160	Identifier	compiler		1003973	1					
ANR	1004161	Parameter	sljit_si op	1255:105:40137:40147	1003973	1	True				
ANR	1004162	ParameterType	sljit_si		1003973	0					
ANR	1004163	Identifier	op		1003973	1					
ANR	1004164	Parameter	sljit_si dst	1256:1:40151:40162	1003973	2	True				
ANR	1004165	ParameterType	sljit_si		1003973	0					
ANR	1004166	Identifier	dst		1003973	1					
ANR	1004167	Parameter	sljit_sw dstw	1256:15:40165:40177	1003973	3	True				
ANR	1004168	ParameterType	sljit_sw		1003973	0					
ANR	1004169	Identifier	dstw		1003973	1					
ANR	1004170	Parameter	sljit_si src	1257:1:40181:40192	1003973	4	True				
ANR	1004171	ParameterType	sljit_si		1003973	0					
ANR	1004172	Identifier	src		1003973	1					
ANR	1004173	Parameter	sljit_sw srcw	1257:15:40195:40207	1003973	5	True				
ANR	1004174	ParameterType	sljit_sw		1003973	0					
ANR	1004175	Identifier	srcw		1003973	1					
ANR	1004176	CFGEntryNode	ENTRY		1003973		True				
ANR	1004177	CFGExitNode	EXIT		1003973		True				
ANR	1004178	Symbol	op		1003973						
ANR	1004179	Symbol	dst		1003973						
ANR	1004180	Symbol	SLJIT_CONVD_FROMW		1003973						
ANR	1004181	Symbol	src		1003973						
ANR	1004182	Symbol	srcw		1003973						
ANR	1004183	Symbol	SLJIT_SINGLE_OP		1003973						
ANR	1004184	Symbol	SLJIT_FOP1_BASE		1003973						
ANR	1004185	Symbol	sljit_is_fpu_available		1003973						
ANR	1004186	Symbol	* compiler		1003973						
ANR	1004187	Symbol	* SLJIT_FOP1_BASE		1003973						
ANR	1004188	Symbol	GET_OPCODE		1003973						
ANR	1004189	Symbol	fop1_names		1003973						
ANR	1004190	Symbol	SLJIT_CONVD_FROMI		1003973						
ANR	1004191	Symbol	compiler -> skip_checks		1003973						
ANR	1004192	Symbol	* GET_OPCODE		1003973						
ANR	1004193	Symbol	compiler		1003973						
ANR	1004194	Symbol	dstw		1003973						
ANR	1004195	Symbol	* fop1_names		1003973						
ANR	1004196	Symbol	SLJIT_UNLIKELY		1003973						
ANR	1004197	Symbol	compiler -> verbose		1003973						
ANR	1004198	Function	check_sljit_emit_fop2	1285:0:41066:42059							
ANR	1004199	FunctionDef	"check_sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1004198	0					
ANR	1004200	CompoundStatement		1289:0:41266:42059	1004198	0					
ANR	1004201	ExpressionStatement	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )	1291:1:41330:41370	1004198	0	True				
ANR	1004202	CallExpression	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )		1004198	0					
ANR	1004203	Callee	CHECK_ARGUMENT		1004198	0					
ANR	1004204	Identifier	CHECK_ARGUMENT		1004198	0					
ANR	1004205	ArgumentList	sljit_is_fpu_available ( )		1004198	1					
ANR	1004206	Argument	sljit_is_fpu_available ( )		1004198	0					
ANR	1004207	CallExpression	sljit_is_fpu_available ( )		1004198	0					
ANR	1004208	Callee	sljit_is_fpu_available		1004198	0					
ANR	1004209	Identifier	sljit_is_fpu_available		1004198	0					
ANR	1004210	ArgumentList			1004198	1					
ANR	1004211	ExpressionStatement	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_DADD && GET_OPCODE ( op ) <= SLJIT_DDIV )	1292:1:41373:41449	1004198	1	True				
ANR	1004212	CallExpression	CHECK_ARGUMENT ( GET_OPCODE ( op ) >= SLJIT_DADD && GET_OPCODE ( op ) <= SLJIT_DDIV )		1004198	0					
ANR	1004213	Callee	CHECK_ARGUMENT		1004198	0					
ANR	1004214	Identifier	CHECK_ARGUMENT		1004198	0					
ANR	1004215	ArgumentList	GET_OPCODE ( op ) >= SLJIT_DADD && GET_OPCODE ( op ) <= SLJIT_DDIV		1004198	1					
ANR	1004216	Argument	GET_OPCODE ( op ) >= SLJIT_DADD && GET_OPCODE ( op ) <= SLJIT_DDIV		1004198	0					
ANR	1004217	AndExpression	GET_OPCODE ( op ) >= SLJIT_DADD && GET_OPCODE ( op ) <= SLJIT_DDIV		1004198	0		&&			
ANR	1004218	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_DADD		1004198	0		>=			
ANR	1004219	CallExpression	GET_OPCODE ( op )		1004198	0					
ANR	1004220	Callee	GET_OPCODE		1004198	0					
ANR	1004221	Identifier	GET_OPCODE		1004198	0					
ANR	1004222	ArgumentList	op		1004198	1					
ANR	1004223	Argument	op		1004198	0					
ANR	1004224	Identifier	op		1004198	0					
ANR	1004225	Identifier	SLJIT_DADD		1004198	1					
ANR	1004226	RelationalExpression	GET_OPCODE ( op ) <= SLJIT_DDIV		1004198	1		<=			
ANR	1004227	CallExpression	GET_OPCODE ( op )		1004198	0					
ANR	1004228	Callee	GET_OPCODE		1004198	0					
ANR	1004229	Identifier	GET_OPCODE		1004198	0					
ANR	1004230	ArgumentList	op		1004198	1					
ANR	1004231	Argument	op		1004198	0					
ANR	1004232	Identifier	op		1004198	0					
ANR	1004233	Identifier	SLJIT_DDIV		1004198	1					
ANR	1004234	ExpressionStatement	FUNCTION_CHECK_FOP ( )	1293:1:41452:41472	1004198	2	True				
ANR	1004235	CallExpression	FUNCTION_CHECK_FOP ( )		1004198	0					
ANR	1004236	Callee	FUNCTION_CHECK_FOP		1004198	0					
ANR	1004237	Identifier	FUNCTION_CHECK_FOP		1004198	0					
ANR	1004238	ArgumentList			1004198	1					
ANR	1004239	ExpressionStatement	"FUNCTION_FCHECK ( src1 , src1w )"	1294:1:41475:41503	1004198	3	True				
ANR	1004240	CallExpression	"FUNCTION_FCHECK ( src1 , src1w )"		1004198	0					
ANR	1004241	Callee	FUNCTION_FCHECK		1004198	0					
ANR	1004242	Identifier	FUNCTION_FCHECK		1004198	0					
ANR	1004243	ArgumentList	src1		1004198	1					
ANR	1004244	Argument	src1		1004198	0					
ANR	1004245	Identifier	src1		1004198	0					
ANR	1004246	Argument	src1w		1004198	1					
ANR	1004247	Identifier	src1w		1004198	0					
ANR	1004248	ExpressionStatement	"FUNCTION_FCHECK ( src2 , src2w )"	1295:1:41506:41534	1004198	4	True				
ANR	1004249	CallExpression	"FUNCTION_FCHECK ( src2 , src2w )"		1004198	0					
ANR	1004250	Callee	FUNCTION_FCHECK		1004198	0					
ANR	1004251	Identifier	FUNCTION_FCHECK		1004198	0					
ANR	1004252	ArgumentList	src2		1004198	1					
ANR	1004253	Argument	src2		1004198	0					
ANR	1004254	Identifier	src2		1004198	0					
ANR	1004255	Argument	src2w		1004198	1					
ANR	1004256	Identifier	src2w		1004198	0					
ANR	1004257	ExpressionStatement	"FUNCTION_FCHECK ( dst , dstw )"	1296:1:41537:41563	1004198	5	True				
ANR	1004258	CallExpression	"FUNCTION_FCHECK ( dst , dstw )"		1004198	0					
ANR	1004259	Callee	FUNCTION_FCHECK		1004198	0					
ANR	1004260	Identifier	FUNCTION_FCHECK		1004198	0					
ANR	1004261	ArgumentList	dst		1004198	1					
ANR	1004262	Argument	dst		1004198	0					
ANR	1004263	Identifier	dst		1004198	0					
ANR	1004264	Argument	dstw		1004198	1					
ANR	1004265	Identifier	dstw		1004198	0					
ANR	1004266	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1004198	6					
ANR	1004267	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1299:5:41622:41656	1004198	0	True				
ANR	1004268	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1004198	0					
ANR	1004269	Callee	SLJIT_UNLIKELY		1004198	0					
ANR	1004270	Identifier	SLJIT_UNLIKELY		1004198	0					
ANR	1004271	ArgumentList	! ! compiler -> verbose		1004198	1					
ANR	1004272	Argument	! ! compiler -> verbose		1004198	0					
ANR	1004273	UnaryOperationExpression	! ! compiler -> verbose		1004198	0					
ANR	1004274	UnaryOperator	!		1004198	0					
ANR	1004275	UnaryOperationExpression	! compiler -> verbose		1004198	1					
ANR	1004276	UnaryOperator	!		1004198	0					
ANR	1004277	PtrMemberAccess	compiler -> verbose		1004198	1					
ANR	1004278	Identifier	compiler		1004198	0					
ANR	1004279	Identifier	verbose		1004198	1					
ANR	1004280	CompoundStatement		11:42:392:392	1004198	1					
ANR	1004281	ExpressionStatement	"fprintf ( compiler -> verbose , ""  %s%s "" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , fop2_names [ GET_OPCODE ( op ) - SLJIT_FOP2_BASE ] )"	1300:2:41663:41782	1004198	0	True				
ANR	1004282	CallExpression	"fprintf ( compiler -> verbose , ""  %s%s "" , ( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"" , fop2_names [ GET_OPCODE ( op ) - SLJIT_FOP2_BASE ] )"		1004198	0					
ANR	1004283	Callee	fprintf		1004198	0					
ANR	1004284	Identifier	fprintf		1004198	0					
ANR	1004285	ArgumentList	compiler -> verbose		1004198	1					
ANR	1004286	Argument	compiler -> verbose		1004198	0					
ANR	1004287	PtrMemberAccess	compiler -> verbose		1004198	0					
ANR	1004288	Identifier	compiler		1004198	0					
ANR	1004289	Identifier	verbose		1004198	1					
ANR	1004290	Argument	"""  %s%s """		1004198	1					
ANR	1004291	PrimaryExpression	"""  %s%s """		1004198	0					
ANR	1004292	Argument	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1004198	2					
ANR	1004293	ConditionalExpression	"( op & SLJIT_SINGLE_OP ) ? ""s"" : ""d"""		1004198	0					
ANR	1004294	Condition	op & SLJIT_SINGLE_OP		1004198	0					
ANR	1004295	BitAndExpression	op & SLJIT_SINGLE_OP		1004198	0		&			
ANR	1004296	Identifier	op		1004198	0					
ANR	1004297	Identifier	SLJIT_SINGLE_OP		1004198	1					
ANR	1004298	PrimaryExpression	"""s"""		1004198	1					
ANR	1004299	PrimaryExpression	"""d"""		1004198	2					
ANR	1004300	Argument	fop2_names [ GET_OPCODE ( op ) - SLJIT_FOP2_BASE ]		1004198	3					
ANR	1004301	ArrayIndexing	fop2_names [ GET_OPCODE ( op ) - SLJIT_FOP2_BASE ]		1004198	0					
ANR	1004302	Identifier	fop2_names		1004198	0					
ANR	1004303	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_FOP2_BASE		1004198	1		-			
ANR	1004304	CallExpression	GET_OPCODE ( op )		1004198	0					
ANR	1004305	Callee	GET_OPCODE		1004198	0					
ANR	1004306	Identifier	GET_OPCODE		1004198	0					
ANR	1004307	ArgumentList	op		1004198	1					
ANR	1004308	Argument	op		1004198	0					
ANR	1004309	Identifier	op		1004198	0					
ANR	1004310	Identifier	SLJIT_FOP2_BASE		1004198	1					
ANR	1004311	ExpressionStatement	"sljit_verbose_fparam ( compiler , dst , dstw )"	1301:2:41786:41827	1004198	1	True				
ANR	1004312	CallExpression	"sljit_verbose_fparam ( compiler , dst , dstw )"		1004198	0					
ANR	1004313	Callee	sljit_verbose_fparam		1004198	0					
ANR	1004314	Identifier	sljit_verbose_fparam		1004198	0					
ANR	1004315	ArgumentList	compiler		1004198	1					
ANR	1004316	Argument	compiler		1004198	0					
ANR	1004317	Identifier	compiler		1004198	0					
ANR	1004318	Argument	dst		1004198	1					
ANR	1004319	Identifier	dst		1004198	0					
ANR	1004320	Argument	dstw		1004198	2					
ANR	1004321	Identifier	dstw		1004198	0					
ANR	1004322	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1302:2:41831:41863	1004198	2	True				
ANR	1004323	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1004198	0					
ANR	1004324	Callee	fprintf		1004198	0					
ANR	1004325	Identifier	fprintf		1004198	0					
ANR	1004326	ArgumentList	compiler -> verbose		1004198	1					
ANR	1004327	Argument	compiler -> verbose		1004198	0					
ANR	1004328	PtrMemberAccess	compiler -> verbose		1004198	0					
ANR	1004329	Identifier	compiler		1004198	0					
ANR	1004330	Identifier	verbose		1004198	1					
ANR	1004331	Argument	""", """		1004198	1					
ANR	1004332	PrimaryExpression	""", """		1004198	0					
ANR	1004333	ExpressionStatement	"sljit_verbose_fparam ( compiler , src1 , src1w )"	1303:2:41867:41910	1004198	3	True				
ANR	1004334	CallExpression	"sljit_verbose_fparam ( compiler , src1 , src1w )"		1004198	0					
ANR	1004335	Callee	sljit_verbose_fparam		1004198	0					
ANR	1004336	Identifier	sljit_verbose_fparam		1004198	0					
ANR	1004337	ArgumentList	compiler		1004198	1					
ANR	1004338	Argument	compiler		1004198	0					
ANR	1004339	Identifier	compiler		1004198	0					
ANR	1004340	Argument	src1		1004198	1					
ANR	1004341	Identifier	src1		1004198	0					
ANR	1004342	Argument	src1w		1004198	2					
ANR	1004343	Identifier	src1w		1004198	0					
ANR	1004344	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1304:2:41914:41946	1004198	4	True				
ANR	1004345	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1004198	0					
ANR	1004346	Callee	fprintf		1004198	0					
ANR	1004347	Identifier	fprintf		1004198	0					
ANR	1004348	ArgumentList	compiler -> verbose		1004198	1					
ANR	1004349	Argument	compiler -> verbose		1004198	0					
ANR	1004350	PtrMemberAccess	compiler -> verbose		1004198	0					
ANR	1004351	Identifier	compiler		1004198	0					
ANR	1004352	Identifier	verbose		1004198	1					
ANR	1004353	Argument	""", """		1004198	1					
ANR	1004354	PrimaryExpression	""", """		1004198	0					
ANR	1004355	ExpressionStatement	"sljit_verbose_fparam ( compiler , src2 , src2w )"	1305:2:41950:41993	1004198	5	True				
ANR	1004356	CallExpression	"sljit_verbose_fparam ( compiler , src2 , src2w )"		1004198	0					
ANR	1004357	Callee	sljit_verbose_fparam		1004198	0					
ANR	1004358	Identifier	sljit_verbose_fparam		1004198	0					
ANR	1004359	ArgumentList	compiler		1004198	1					
ANR	1004360	Argument	compiler		1004198	0					
ANR	1004361	Identifier	compiler		1004198	0					
ANR	1004362	Argument	src2		1004198	1					
ANR	1004363	Identifier	src2		1004198	0					
ANR	1004364	Argument	src2w		1004198	2					
ANR	1004365	Identifier	src2w		1004198	0					
ANR	1004366	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1306:2:41997:42029	1004198	6	True				
ANR	1004367	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1004198	0					
ANR	1004368	Callee	fprintf		1004198	0					
ANR	1004369	Identifier	fprintf		1004198	0					
ANR	1004370	ArgumentList	compiler -> verbose		1004198	1					
ANR	1004371	Argument	compiler -> verbose		1004198	0					
ANR	1004372	PtrMemberAccess	compiler -> verbose		1004198	0					
ANR	1004373	Identifier	compiler		1004198	0					
ANR	1004374	Identifier	verbose		1004198	1					
ANR	1004375	Argument	"""\\n"""		1004198	1					
ANR	1004376	PrimaryExpression	"""\\n"""		1004198	0					
ANR	1004377	ExpressionStatement	CHECK_RETURN_OK	1309:1:42042:42057	1004198	7	True				
ANR	1004378	Identifier	CHECK_RETURN_OK		1004198	0					
ANR	1004379	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1004198	1					
ANR	1004380	Identifier	check_sljit_emit_fop2		1004198	2					
ANR	1004381	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1004198	3					
ANR	1004382	Parameter	struct sljit_compiler * compiler	1285:60:41126:41156	1004198	0	True				
ANR	1004383	ParameterType	struct sljit_compiler *		1004198	0					
ANR	1004384	Identifier	compiler		1004198	1					
ANR	1004385	Parameter	sljit_si op	1285:93:41159:41169	1004198	1	True				
ANR	1004386	ParameterType	sljit_si		1004198	0					
ANR	1004387	Identifier	op		1004198	1					
ANR	1004388	Parameter	sljit_si dst	1286:1:41173:41184	1004198	2	True				
ANR	1004389	ParameterType	sljit_si		1004198	0					
ANR	1004390	Identifier	dst		1004198	1					
ANR	1004391	Parameter	sljit_sw dstw	1286:15:41187:41199	1004198	3	True				
ANR	1004392	ParameterType	sljit_sw		1004198	0					
ANR	1004393	Identifier	dstw		1004198	1					
ANR	1004394	Parameter	sljit_si src1	1287:1:41203:41215	1004198	4	True				
ANR	1004395	ParameterType	sljit_si		1004198	0					
ANR	1004396	Identifier	src1		1004198	1					
ANR	1004397	Parameter	sljit_sw src1w	1287:16:41218:41231	1004198	5	True				
ANR	1004398	ParameterType	sljit_sw		1004198	0					
ANR	1004399	Identifier	src1w		1004198	1					
ANR	1004400	Parameter	sljit_si src2	1288:1:41235:41247	1004198	6	True				
ANR	1004401	ParameterType	sljit_si		1004198	0					
ANR	1004402	Identifier	src2		1004198	1					
ANR	1004403	Parameter	sljit_sw src2w	1288:16:41250:41263	1004198	7	True				
ANR	1004404	ParameterType	sljit_sw		1004198	0					
ANR	1004405	Identifier	src2w		1004198	1					
ANR	1004406	CFGEntryNode	ENTRY		1004198		True				
ANR	1004407	CFGExitNode	EXIT		1004198		True				
ANR	1004408	Symbol	src2w		1004198						
ANR	1004409	Symbol	SLJIT_DDIV		1004198						
ANR	1004410	Symbol	op		1004198						
ANR	1004411	Symbol	SLJIT_FOP2_BASE		1004198						
ANR	1004412	Symbol	src1w		1004198						
ANR	1004413	Symbol	dst		1004198						
ANR	1004414	Symbol	SLJIT_SINGLE_OP		1004198						
ANR	1004415	Symbol	sljit_is_fpu_available		1004198						
ANR	1004416	Symbol	* compiler		1004198						
ANR	1004417	Symbol	GET_OPCODE		1004198						
ANR	1004418	Symbol	SLJIT_DADD		1004198						
ANR	1004419	Symbol	* fop2_names		1004198						
ANR	1004420	Symbol	* SLJIT_FOP2_BASE		1004198						
ANR	1004421	Symbol	fop2_names		1004198						
ANR	1004422	Symbol	src1		1004198						
ANR	1004423	Symbol	* GET_OPCODE		1004198						
ANR	1004424	Symbol	src2		1004198						
ANR	1004425	Symbol	compiler		1004198						
ANR	1004426	Symbol	dstw		1004198						
ANR	1004427	Symbol	SLJIT_UNLIKELY		1004198						
ANR	1004428	Symbol	compiler -> verbose		1004198						
ANR	1004429	Function	check_sljit_emit_label	1312:0:42062:42342							
ANR	1004430	FunctionDef	check_sljit_emit_label (struct sljit_compiler * compiler)		1004429	0					
ANR	1004431	CompoundStatement		1313:0:42156:42342	1004429	0					
ANR	1004432	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1314:1:42159:42185	1004429	0	True				
ANR	1004433	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1004429	0					
ANR	1004434	Callee	SLJIT_UNUSED_ARG		1004429	0					
ANR	1004435	Identifier	SLJIT_UNUSED_ARG		1004429	0					
ANR	1004436	ArgumentList	compiler		1004429	1					
ANR	1004437	Argument	compiler		1004429	0					
ANR	1004438	Identifier	compiler		1004429	0					
ANR	1004439	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1004429	1					
ANR	1004440	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1317:5:42238:42272	1004429	0	True				
ANR	1004441	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1004429	0					
ANR	1004442	Callee	SLJIT_UNLIKELY		1004429	0					
ANR	1004443	Identifier	SLJIT_UNLIKELY		1004429	0					
ANR	1004444	ArgumentList	! ! compiler -> verbose		1004429	1					
ANR	1004445	Argument	! ! compiler -> verbose		1004429	0					
ANR	1004446	UnaryOperationExpression	! ! compiler -> verbose		1004429	0					
ANR	1004447	UnaryOperator	!		1004429	0					
ANR	1004448	UnaryOperationExpression	! compiler -> verbose		1004429	1					
ANR	1004449	UnaryOperator	!		1004429	0					
ANR	1004450	PtrMemberAccess	compiler -> verbose		1004429	1					
ANR	1004451	Identifier	compiler		1004429	0					
ANR	1004452	Identifier	verbose		1004429	1					
ANR	1004453	ExpressionStatement	"fprintf ( compiler -> verbose , ""label:\\n"" )"	1318:2:42277:42315	1004429	1	True				
ANR	1004454	CallExpression	"fprintf ( compiler -> verbose , ""label:\\n"" )"		1004429	0					
ANR	1004455	Callee	fprintf		1004429	0					
ANR	1004456	Identifier	fprintf		1004429	0					
ANR	1004457	ArgumentList	compiler -> verbose		1004429	1					
ANR	1004458	Argument	compiler -> verbose		1004429	0					
ANR	1004459	PtrMemberAccess	compiler -> verbose		1004429	0					
ANR	1004460	Identifier	compiler		1004429	0					
ANR	1004461	Identifier	verbose		1004429	1					
ANR	1004462	Argument	"""label:\\n"""		1004429	1					
ANR	1004463	PrimaryExpression	"""label:\\n"""		1004429	0					
ANR	1004464	ExpressionStatement	CHECK_RETURN_OK	1320:1:42325:42340	1004429	2	True				
ANR	1004465	Identifier	CHECK_RETURN_OK		1004429	0					
ANR	1004466	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1004429	1					
ANR	1004467	Identifier	check_sljit_emit_label		1004429	2					
ANR	1004468	ParameterList	struct sljit_compiler * compiler		1004429	3					
ANR	1004469	Parameter	struct sljit_compiler * compiler	1312:61:42123:42153	1004429	0	True				
ANR	1004470	ParameterType	struct sljit_compiler *		1004429	0					
ANR	1004471	Identifier	compiler		1004429	1					
ANR	1004472	CFGEntryNode	ENTRY		1004429		True				
ANR	1004473	CFGExitNode	EXIT		1004429		True				
ANR	1004474	Symbol	* compiler		1004429						
ANR	1004475	Symbol	compiler		1004429						
ANR	1004476	Symbol	SLJIT_UNLIKELY		1004429						
ANR	1004477	Symbol	compiler -> verbose		1004429						
ANR	1004478	Function	check_sljit_emit_jump	1323:0:42345:43202							
ANR	1004479	FunctionDef	"check_sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1004478	0					
ANR	1004480	CompoundStatement		1324:0:42453:43202	1004478	0					
ANR	1004481	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1004478	0					
ANR	1004482	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1325:5:42460:42496	1004478	0	True				
ANR	1004483	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1004478	0					
ANR	1004484	Callee	SLJIT_UNLIKELY		1004478	0					
ANR	1004485	Identifier	SLJIT_UNLIKELY		1004478	0					
ANR	1004486	ArgumentList	compiler -> skip_checks		1004478	1					
ANR	1004487	Argument	compiler -> skip_checks		1004478	0					
ANR	1004488	PtrMemberAccess	compiler -> skip_checks		1004478	0					
ANR	1004489	Identifier	compiler		1004478	0					
ANR	1004490	Identifier	skip_checks		1004478	1					
ANR	1004491	CompoundStatement		2:44:45:45	1004478	1					
ANR	1004492	ExpressionStatement	compiler -> skip_checks = 0	1326:2:42503:42528	1004478	0	True				
ANR	1004493	AssignmentExpression	compiler -> skip_checks = 0		1004478	0		=			
ANR	1004494	PtrMemberAccess	compiler -> skip_checks		1004478	0					
ANR	1004495	Identifier	compiler		1004478	0					
ANR	1004496	Identifier	skip_checks		1004478	1					
ANR	1004497	PrimaryExpression	0		1004478	1					
ANR	1004498	ExpressionStatement	CHECK_RETURN_OK	1327:2:42532:42547	1004478	1	True				
ANR	1004499	Identifier	CHECK_RETURN_OK		1004478	0					
ANR	1004500	ExpressionStatement	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) ) )	1331:1:42615:42687	1004478	1	True				
ANR	1004501	CallExpression	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) ) )		1004478	0					
ANR	1004502	Callee	CHECK_ARGUMENT		1004478	0					
ANR	1004503	Identifier	CHECK_ARGUMENT		1004478	0					
ANR	1004504	ArgumentList	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) )		1004478	1					
ANR	1004505	Argument	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) )		1004478	0					
ANR	1004506	UnaryOperationExpression	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) )		1004478	0					
ANR	1004507	UnaryOperator	!		1004478	0					
ANR	1004508	BitAndExpression	type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP )		1004478	1		&			
ANR	1004509	Identifier	type		1004478	0					
ANR	1004510	UnaryOperationExpression	~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP )		1004478	1					
ANR	1004511	UnaryOperator	~		1004478	0					
ANR	1004512	InclusiveOrExpression	0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP		1004478	1		|			
ANR	1004513	PrimaryExpression	0xff		1004478	0					
ANR	1004514	InclusiveOrExpression	SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP		1004478	1		|			
ANR	1004515	Identifier	SLJIT_REWRITABLE_JUMP		1004478	0					
ANR	1004516	Identifier	SLJIT_INT_OP		1004478	1					
ANR	1004517	ExpressionStatement	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_CALL3 )	1332:1:42690:42766	1004478	2	True				
ANR	1004518	CallExpression	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_CALL3 )		1004478	0					
ANR	1004519	Callee	CHECK_ARGUMENT		1004478	0					
ANR	1004520	Identifier	CHECK_ARGUMENT		1004478	0					
ANR	1004521	ArgumentList	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_CALL3		1004478	1					
ANR	1004522	Argument	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_CALL3		1004478	0					
ANR	1004523	AndExpression	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_CALL3		1004478	0		&&			
ANR	1004524	RelationalExpression	( type & 0xff ) >= SLJIT_EQUAL		1004478	0		>=			
ANR	1004525	BitAndExpression	type & 0xff		1004478	0		&			
ANR	1004526	Identifier	type		1004478	0					
ANR	1004527	PrimaryExpression	0xff		1004478	1					
ANR	1004528	Identifier	SLJIT_EQUAL		1004478	1					
ANR	1004529	RelationalExpression	( type & 0xff ) <= SLJIT_CALL3		1004478	1		<=			
ANR	1004530	BitAndExpression	type & 0xff		1004478	0		&			
ANR	1004531	Identifier	type		1004478	0					
ANR	1004532	PrimaryExpression	0xff		1004478	1					
ANR	1004533	Identifier	SLJIT_CALL3		1004478	1					
ANR	1004534	ExpressionStatement	CHECK_ARGUMENT ( ( type & 0xff ) < SLJIT_JUMP || ! ( type & SLJIT_INT_OP ) )	1333:1:42769:42837	1004478	3	True				
ANR	1004535	CallExpression	CHECK_ARGUMENT ( ( type & 0xff ) < SLJIT_JUMP || ! ( type & SLJIT_INT_OP ) )		1004478	0					
ANR	1004536	Callee	CHECK_ARGUMENT		1004478	0					
ANR	1004537	Identifier	CHECK_ARGUMENT		1004478	0					
ANR	1004538	ArgumentList	( type & 0xff ) < SLJIT_JUMP || ! ( type & SLJIT_INT_OP )		1004478	1					
ANR	1004539	Argument	( type & 0xff ) < SLJIT_JUMP || ! ( type & SLJIT_INT_OP )		1004478	0					
ANR	1004540	OrExpression	( type & 0xff ) < SLJIT_JUMP || ! ( type & SLJIT_INT_OP )		1004478	0		||			
ANR	1004541	RelationalExpression	( type & 0xff ) < SLJIT_JUMP		1004478	0		<			
ANR	1004542	BitAndExpression	type & 0xff		1004478	0		&			
ANR	1004543	Identifier	type		1004478	0					
ANR	1004544	PrimaryExpression	0xff		1004478	1					
ANR	1004545	Identifier	SLJIT_JUMP		1004478	1					
ANR	1004546	UnaryOperationExpression	! ( type & SLJIT_INT_OP )		1004478	1					
ANR	1004547	UnaryOperator	!		1004478	0					
ANR	1004548	BitAndExpression	type & SLJIT_INT_OP		1004478	1		&			
ANR	1004549	Identifier	type		1004478	0					
ANR	1004550	Identifier	SLJIT_INT_OP		1004478	1					
ANR	1004551	ExpressionStatement	CHECK_ARGUMENT ( ( type & 0xff ) <= SLJIT_CALL0 || ( ( type & 0xff ) - SLJIT_CALL0 ) <= compiler -> scratches )	1334:1:42840:42940	1004478	4	True				
ANR	1004552	CallExpression	CHECK_ARGUMENT ( ( type & 0xff ) <= SLJIT_CALL0 || ( ( type & 0xff ) - SLJIT_CALL0 ) <= compiler -> scratches )		1004478	0					
ANR	1004553	Callee	CHECK_ARGUMENT		1004478	0					
ANR	1004554	Identifier	CHECK_ARGUMENT		1004478	0					
ANR	1004555	ArgumentList	( type & 0xff ) <= SLJIT_CALL0 || ( ( type & 0xff ) - SLJIT_CALL0 ) <= compiler -> scratches		1004478	1					
ANR	1004556	Argument	( type & 0xff ) <= SLJIT_CALL0 || ( ( type & 0xff ) - SLJIT_CALL0 ) <= compiler -> scratches		1004478	0					
ANR	1004557	OrExpression	( type & 0xff ) <= SLJIT_CALL0 || ( ( type & 0xff ) - SLJIT_CALL0 ) <= compiler -> scratches		1004478	0		||			
ANR	1004558	RelationalExpression	( type & 0xff ) <= SLJIT_CALL0		1004478	0		<=			
ANR	1004559	BitAndExpression	type & 0xff		1004478	0		&			
ANR	1004560	Identifier	type		1004478	0					
ANR	1004561	PrimaryExpression	0xff		1004478	1					
ANR	1004562	Identifier	SLJIT_CALL0		1004478	1					
ANR	1004563	RelationalExpression	( ( type & 0xff ) - SLJIT_CALL0 ) <= compiler -> scratches		1004478	1		<=			
ANR	1004564	AdditiveExpression	( type & 0xff ) - SLJIT_CALL0		1004478	0		-			
ANR	1004565	BitAndExpression	type & 0xff		1004478	0		&			
ANR	1004566	Identifier	type		1004478	0					
ANR	1004567	PrimaryExpression	0xff		1004478	1					
ANR	1004568	Identifier	SLJIT_CALL0		1004478	1					
ANR	1004569	PtrMemberAccess	compiler -> scratches		1004478	1					
ANR	1004570	Identifier	compiler		1004478	0					
ANR	1004571	Identifier	scratches		1004478	1					
ANR	1004572	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1004478	5					
ANR	1004573	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1337:5:42999:43033	1004478	0	True				
ANR	1004574	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1004478	0					
ANR	1004575	Callee	SLJIT_UNLIKELY		1004478	0					
ANR	1004576	Identifier	SLJIT_UNLIKELY		1004478	0					
ANR	1004577	ArgumentList	! ! compiler -> verbose		1004478	1					
ANR	1004578	Argument	! ! compiler -> verbose		1004478	0					
ANR	1004579	UnaryOperationExpression	! ! compiler -> verbose		1004478	0					
ANR	1004580	UnaryOperator	!		1004478	0					
ANR	1004581	UnaryOperationExpression	! compiler -> verbose		1004478	1					
ANR	1004582	UnaryOperator	!		1004478	0					
ANR	1004583	PtrMemberAccess	compiler -> verbose		1004478	1					
ANR	1004584	Identifier	compiler		1004478	0					
ANR	1004585	Identifier	verbose		1004478	1					
ANR	1004586	ExpressionStatement	"fprintf ( compiler -> verbose , ""  jump%s.%s%s\\n"" , ! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"" , JUMP_PREFIX ( type ) , jump_names [ type & 0xff ] )"	1338:2:43038:43175	1004478	1	True				
ANR	1004587	CallExpression	"fprintf ( compiler -> verbose , ""  jump%s.%s%s\\n"" , ! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"" , JUMP_PREFIX ( type ) , jump_names [ type & 0xff ] )"		1004478	0					
ANR	1004588	Callee	fprintf		1004478	0					
ANR	1004589	Identifier	fprintf		1004478	0					
ANR	1004590	ArgumentList	compiler -> verbose		1004478	1					
ANR	1004591	Argument	compiler -> verbose		1004478	0					
ANR	1004592	PtrMemberAccess	compiler -> verbose		1004478	0					
ANR	1004593	Identifier	compiler		1004478	0					
ANR	1004594	Identifier	verbose		1004478	1					
ANR	1004595	Argument	"""  jump%s.%s%s\\n"""		1004478	1					
ANR	1004596	PrimaryExpression	"""  jump%s.%s%s\\n"""		1004478	0					
ANR	1004597	Argument	"! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"""		1004478	2					
ANR	1004598	ConditionalExpression	"! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"""		1004478	0					
ANR	1004599	Condition	! ( type & SLJIT_REWRITABLE_JUMP )		1004478	0					
ANR	1004600	UnaryOperationExpression	! ( type & SLJIT_REWRITABLE_JUMP )		1004478	0					
ANR	1004601	UnaryOperator	!		1004478	0					
ANR	1004602	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1004478	1		&			
ANR	1004603	Identifier	type		1004478	0					
ANR	1004604	Identifier	SLJIT_REWRITABLE_JUMP		1004478	1					
ANR	1004605	PrimaryExpression	""""""		1004478	1					
ANR	1004606	PrimaryExpression	""".r"""		1004478	2					
ANR	1004607	Argument	JUMP_PREFIX ( type )		1004478	3					
ANR	1004608	CallExpression	JUMP_PREFIX ( type )		1004478	0					
ANR	1004609	Callee	JUMP_PREFIX		1004478	0					
ANR	1004610	Identifier	JUMP_PREFIX		1004478	0					
ANR	1004611	ArgumentList	type		1004478	1					
ANR	1004612	Argument	type		1004478	0					
ANR	1004613	Identifier	type		1004478	0					
ANR	1004614	Argument	jump_names [ type & 0xff ]		1004478	4					
ANR	1004615	ArrayIndexing	jump_names [ type & 0xff ]		1004478	0					
ANR	1004616	Identifier	jump_names		1004478	0					
ANR	1004617	BitAndExpression	type & 0xff		1004478	1		&			
ANR	1004618	Identifier	type		1004478	0					
ANR	1004619	PrimaryExpression	0xff		1004478	1					
ANR	1004620	ExpressionStatement	CHECK_RETURN_OK	1341:1:43185:43200	1004478	6	True				
ANR	1004621	Identifier	CHECK_RETURN_OK		1004478	0					
ANR	1004622	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1004478	1					
ANR	1004623	Identifier	check_sljit_emit_jump		1004478	2					
ANR	1004624	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1004478	3					
ANR	1004625	Parameter	struct sljit_compiler * compiler	1323:60:42405:42435	1004478	0	True				
ANR	1004626	ParameterType	struct sljit_compiler *		1004478	0					
ANR	1004627	Identifier	compiler		1004478	1					
ANR	1004628	Parameter	sljit_si type	1323:93:42438:42450	1004478	1	True				
ANR	1004629	ParameterType	sljit_si		1004478	0					
ANR	1004630	Identifier	type		1004478	1					
ANR	1004631	CFGEntryNode	ENTRY		1004478		True				
ANR	1004632	CFGExitNode	EXIT		1004478		True				
ANR	1004633	Symbol	SLJIT_JUMP		1004478						
ANR	1004634	Symbol	compiler -> scratches		1004478						
ANR	1004635	Symbol	SLJIT_INT_OP		1004478						
ANR	1004636	Symbol	SLJIT_CALL0		1004478						
ANR	1004637	Symbol	JUMP_PREFIX		1004478						
ANR	1004638	Symbol	* compiler		1004478						
ANR	1004639	Symbol	type		1004478						
ANR	1004640	Symbol	* jump_names		1004478						
ANR	1004641	Symbol	* type		1004478						
ANR	1004642	Symbol	jump_names		1004478						
ANR	1004643	Symbol	compiler -> skip_checks		1004478						
ANR	1004644	Symbol	SLJIT_EQUAL		1004478						
ANR	1004645	Symbol	SLJIT_CALL3		1004478						
ANR	1004646	Symbol	SLJIT_REWRITABLE_JUMP		1004478						
ANR	1004647	Symbol	compiler		1004478						
ANR	1004648	Symbol	SLJIT_UNLIKELY		1004478						
ANR	1004649	Symbol	compiler -> verbose		1004478						
ANR	1004650	Function	check_sljit_emit_cmp	1344:0:43205:44113							
ANR	1004651	FunctionDef	"check_sljit_emit_cmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1004650	0					
ANR	1004652	CompoundStatement		1347:0:43376:44113	1004650	0					
ANR	1004653	ExpressionStatement	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) ) )	1349:1:43440:43512	1004650	0	True				
ANR	1004654	CallExpression	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) ) )		1004650	0					
ANR	1004655	Callee	CHECK_ARGUMENT		1004650	0					
ANR	1004656	Identifier	CHECK_ARGUMENT		1004650	0					
ANR	1004657	ArgumentList	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) )		1004650	1					
ANR	1004658	Argument	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) )		1004650	0					
ANR	1004659	UnaryOperationExpression	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP ) )		1004650	0					
ANR	1004660	UnaryOperator	!		1004650	0					
ANR	1004661	BitAndExpression	type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP )		1004650	1		&			
ANR	1004662	Identifier	type		1004650	0					
ANR	1004663	UnaryOperationExpression	~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP )		1004650	1					
ANR	1004664	UnaryOperator	~		1004650	0					
ANR	1004665	InclusiveOrExpression	0xff | SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP		1004650	1		|			
ANR	1004666	PrimaryExpression	0xff		1004650	0					
ANR	1004667	InclusiveOrExpression	SLJIT_REWRITABLE_JUMP | SLJIT_INT_OP		1004650	1		|			
ANR	1004668	Identifier	SLJIT_REWRITABLE_JUMP		1004650	0					
ANR	1004669	Identifier	SLJIT_INT_OP		1004650	1					
ANR	1004670	ExpressionStatement	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_SIG_LESS_EQUAL )	1350:1:43515:43600	1004650	1	True				
ANR	1004671	CallExpression	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_SIG_LESS_EQUAL )		1004650	0					
ANR	1004672	Callee	CHECK_ARGUMENT		1004650	0					
ANR	1004673	Identifier	CHECK_ARGUMENT		1004650	0					
ANR	1004674	ArgumentList	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_SIG_LESS_EQUAL		1004650	1					
ANR	1004675	Argument	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_SIG_LESS_EQUAL		1004650	0					
ANR	1004676	AndExpression	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_SIG_LESS_EQUAL		1004650	0		&&			
ANR	1004677	RelationalExpression	( type & 0xff ) >= SLJIT_EQUAL		1004650	0		>=			
ANR	1004678	BitAndExpression	type & 0xff		1004650	0		&			
ANR	1004679	Identifier	type		1004650	0					
ANR	1004680	PrimaryExpression	0xff		1004650	1					
ANR	1004681	Identifier	SLJIT_EQUAL		1004650	1					
ANR	1004682	RelationalExpression	( type & 0xff ) <= SLJIT_SIG_LESS_EQUAL		1004650	1		<=			
ANR	1004683	BitAndExpression	type & 0xff		1004650	0		&			
ANR	1004684	Identifier	type		1004650	0					
ANR	1004685	PrimaryExpression	0xff		1004650	1					
ANR	1004686	Identifier	SLJIT_SIG_LESS_EQUAL		1004650	1					
ANR	1004687	ExpressionStatement	"FUNCTION_CHECK_SRC ( src1 , src1w )"	1351:1:43603:43634	1004650	2	True				
ANR	1004688	CallExpression	"FUNCTION_CHECK_SRC ( src1 , src1w )"		1004650	0					
ANR	1004689	Callee	FUNCTION_CHECK_SRC		1004650	0					
ANR	1004690	Identifier	FUNCTION_CHECK_SRC		1004650	0					
ANR	1004691	ArgumentList	src1		1004650	1					
ANR	1004692	Argument	src1		1004650	0					
ANR	1004693	Identifier	src1		1004650	0					
ANR	1004694	Argument	src1w		1004650	1					
ANR	1004695	Identifier	src1w		1004650	0					
ANR	1004696	ExpressionStatement	"FUNCTION_CHECK_SRC ( src2 , src2w )"	1352:1:43637:43668	1004650	3	True				
ANR	1004697	CallExpression	"FUNCTION_CHECK_SRC ( src2 , src2w )"		1004650	0					
ANR	1004698	Callee	FUNCTION_CHECK_SRC		1004650	0					
ANR	1004699	Identifier	FUNCTION_CHECK_SRC		1004650	0					
ANR	1004700	ArgumentList	src2		1004650	1					
ANR	1004701	Argument	src2		1004650	0					
ANR	1004702	Identifier	src2		1004650	0					
ANR	1004703	Argument	src2w		1004650	1					
ANR	1004704	Identifier	src2w		1004650	0					
ANR	1004705	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1004650	4					
ANR	1004706	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1355:5:43727:43761	1004650	0	True				
ANR	1004707	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1004650	0					
ANR	1004708	Callee	SLJIT_UNLIKELY		1004650	0					
ANR	1004709	Identifier	SLJIT_UNLIKELY		1004650	0					
ANR	1004710	ArgumentList	! ! compiler -> verbose		1004650	1					
ANR	1004711	Argument	! ! compiler -> verbose		1004650	0					
ANR	1004712	UnaryOperationExpression	! ! compiler -> verbose		1004650	0					
ANR	1004713	UnaryOperator	!		1004650	0					
ANR	1004714	UnaryOperationExpression	! compiler -> verbose		1004650	1					
ANR	1004715	UnaryOperator	!		1004650	0					
ANR	1004716	PtrMemberAccess	compiler -> verbose		1004650	1					
ANR	1004717	Identifier	compiler		1004650	0					
ANR	1004718	Identifier	verbose		1004650	1					
ANR	1004719	CompoundStatement		9:42:387:387	1004650	1					
ANR	1004720	ExpressionStatement	"fprintf ( compiler -> verbose , ""  cmp%s.%s%s "" , ! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"" , ( type & SLJIT_INT_OP ) ? ""i_"" : """" , jump_names [ type & 0xff ] )"	1356:2:43768:43919	1004650	0	True				
ANR	1004721	CallExpression	"fprintf ( compiler -> verbose , ""  cmp%s.%s%s "" , ! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"" , ( type & SLJIT_INT_OP ) ? ""i_"" : """" , jump_names [ type & 0xff ] )"		1004650	0					
ANR	1004722	Callee	fprintf		1004650	0					
ANR	1004723	Identifier	fprintf		1004650	0					
ANR	1004724	ArgumentList	compiler -> verbose		1004650	1					
ANR	1004725	Argument	compiler -> verbose		1004650	0					
ANR	1004726	PtrMemberAccess	compiler -> verbose		1004650	0					
ANR	1004727	Identifier	compiler		1004650	0					
ANR	1004728	Identifier	verbose		1004650	1					
ANR	1004729	Argument	"""  cmp%s.%s%s """		1004650	1					
ANR	1004730	PrimaryExpression	"""  cmp%s.%s%s """		1004650	0					
ANR	1004731	Argument	"! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"""		1004650	2					
ANR	1004732	ConditionalExpression	"! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"""		1004650	0					
ANR	1004733	Condition	! ( type & SLJIT_REWRITABLE_JUMP )		1004650	0					
ANR	1004734	UnaryOperationExpression	! ( type & SLJIT_REWRITABLE_JUMP )		1004650	0					
ANR	1004735	UnaryOperator	!		1004650	0					
ANR	1004736	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1004650	1		&			
ANR	1004737	Identifier	type		1004650	0					
ANR	1004738	Identifier	SLJIT_REWRITABLE_JUMP		1004650	1					
ANR	1004739	PrimaryExpression	""""""		1004650	1					
ANR	1004740	PrimaryExpression	""".r"""		1004650	2					
ANR	1004741	Argument	"( type & SLJIT_INT_OP ) ? ""i_"" : """""		1004650	3					
ANR	1004742	ConditionalExpression	"( type & SLJIT_INT_OP ) ? ""i_"" : """""		1004650	0					
ANR	1004743	Condition	type & SLJIT_INT_OP		1004650	0					
ANR	1004744	BitAndExpression	type & SLJIT_INT_OP		1004650	0		&			
ANR	1004745	Identifier	type		1004650	0					
ANR	1004746	Identifier	SLJIT_INT_OP		1004650	1					
ANR	1004747	PrimaryExpression	"""i_"""		1004650	1					
ANR	1004748	PrimaryExpression	""""""		1004650	2					
ANR	1004749	Argument	jump_names [ type & 0xff ]		1004650	4					
ANR	1004750	ArrayIndexing	jump_names [ type & 0xff ]		1004650	0					
ANR	1004751	Identifier	jump_names		1004650	0					
ANR	1004752	BitAndExpression	type & 0xff		1004650	1		&			
ANR	1004753	Identifier	type		1004650	0					
ANR	1004754	PrimaryExpression	0xff		1004650	1					
ANR	1004755	ExpressionStatement	"sljit_verbose_param ( compiler , src1 , src1w )"	1358:2:43923:43965	1004650	1	True				
ANR	1004756	CallExpression	"sljit_verbose_param ( compiler , src1 , src1w )"		1004650	0					
ANR	1004757	Callee	sljit_verbose_param		1004650	0					
ANR	1004758	Identifier	sljit_verbose_param		1004650	0					
ANR	1004759	ArgumentList	compiler		1004650	1					
ANR	1004760	Argument	compiler		1004650	0					
ANR	1004761	Identifier	compiler		1004650	0					
ANR	1004762	Argument	src1		1004650	1					
ANR	1004763	Identifier	src1		1004650	0					
ANR	1004764	Argument	src1w		1004650	2					
ANR	1004765	Identifier	src1w		1004650	0					
ANR	1004766	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1359:2:43969:44001	1004650	2	True				
ANR	1004767	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1004650	0					
ANR	1004768	Callee	fprintf		1004650	0					
ANR	1004769	Identifier	fprintf		1004650	0					
ANR	1004770	ArgumentList	compiler -> verbose		1004650	1					
ANR	1004771	Argument	compiler -> verbose		1004650	0					
ANR	1004772	PtrMemberAccess	compiler -> verbose		1004650	0					
ANR	1004773	Identifier	compiler		1004650	0					
ANR	1004774	Identifier	verbose		1004650	1					
ANR	1004775	Argument	""", """		1004650	1					
ANR	1004776	PrimaryExpression	""", """		1004650	0					
ANR	1004777	ExpressionStatement	"sljit_verbose_param ( compiler , src2 , src2w )"	1360:2:44005:44047	1004650	3	True				
ANR	1004778	CallExpression	"sljit_verbose_param ( compiler , src2 , src2w )"		1004650	0					
ANR	1004779	Callee	sljit_verbose_param		1004650	0					
ANR	1004780	Identifier	sljit_verbose_param		1004650	0					
ANR	1004781	ArgumentList	compiler		1004650	1					
ANR	1004782	Argument	compiler		1004650	0					
ANR	1004783	Identifier	compiler		1004650	0					
ANR	1004784	Argument	src2		1004650	1					
ANR	1004785	Identifier	src2		1004650	0					
ANR	1004786	Argument	src2w		1004650	2					
ANR	1004787	Identifier	src2w		1004650	0					
ANR	1004788	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1361:2:44051:44083	1004650	4	True				
ANR	1004789	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1004650	0					
ANR	1004790	Callee	fprintf		1004650	0					
ANR	1004791	Identifier	fprintf		1004650	0					
ANR	1004792	ArgumentList	compiler -> verbose		1004650	1					
ANR	1004793	Argument	compiler -> verbose		1004650	0					
ANR	1004794	PtrMemberAccess	compiler -> verbose		1004650	0					
ANR	1004795	Identifier	compiler		1004650	0					
ANR	1004796	Identifier	verbose		1004650	1					
ANR	1004797	Argument	"""\\n"""		1004650	1					
ANR	1004798	PrimaryExpression	"""\\n"""		1004650	0					
ANR	1004799	ExpressionStatement	CHECK_RETURN_OK	1364:1:44096:44111	1004650	5	True				
ANR	1004800	Identifier	CHECK_RETURN_OK		1004650	0					
ANR	1004801	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1004650	1					
ANR	1004802	Identifier	check_sljit_emit_cmp		1004650	2					
ANR	1004803	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1004650	3					
ANR	1004804	Parameter	struct sljit_compiler * compiler	1344:59:43264:43294	1004650	0	True				
ANR	1004805	ParameterType	struct sljit_compiler *		1004650	0					
ANR	1004806	Identifier	compiler		1004650	1					
ANR	1004807	Parameter	sljit_si type	1344:92:43297:43309	1004650	1	True				
ANR	1004808	ParameterType	sljit_si		1004650	0					
ANR	1004809	Identifier	type		1004650	1					
ANR	1004810	Parameter	sljit_si src1	1345:1:43313:43325	1004650	2	True				
ANR	1004811	ParameterType	sljit_si		1004650	0					
ANR	1004812	Identifier	src1		1004650	1					
ANR	1004813	Parameter	sljit_sw src1w	1345:16:43328:43341	1004650	3	True				
ANR	1004814	ParameterType	sljit_sw		1004650	0					
ANR	1004815	Identifier	src1w		1004650	1					
ANR	1004816	Parameter	sljit_si src2	1346:1:43345:43357	1004650	4	True				
ANR	1004817	ParameterType	sljit_si		1004650	0					
ANR	1004818	Identifier	src2		1004650	1					
ANR	1004819	Parameter	sljit_sw src2w	1346:16:43360:43373	1004650	5	True				
ANR	1004820	ParameterType	sljit_sw		1004650	0					
ANR	1004821	Identifier	src2w		1004650	1					
ANR	1004822	CFGEntryNode	ENTRY		1004650		True				
ANR	1004823	CFGExitNode	EXIT		1004650		True				
ANR	1004824	Symbol	src2w		1004650						
ANR	1004825	Symbol	src1w		1004650						
ANR	1004826	Symbol	SLJIT_INT_OP		1004650						
ANR	1004827	Symbol	* compiler		1004650						
ANR	1004828	Symbol	type		1004650						
ANR	1004829	Symbol	SLJIT_SIG_LESS_EQUAL		1004650						
ANR	1004830	Symbol	* jump_names		1004650						
ANR	1004831	Symbol	* type		1004650						
ANR	1004832	Symbol	jump_names		1004650						
ANR	1004833	Symbol	src1		1004650						
ANR	1004834	Symbol	SLJIT_EQUAL		1004650						
ANR	1004835	Symbol	src2		1004650						
ANR	1004836	Symbol	SLJIT_REWRITABLE_JUMP		1004650						
ANR	1004837	Symbol	compiler		1004650						
ANR	1004838	Symbol	compiler -> verbose		1004650						
ANR	1004839	Symbol	SLJIT_UNLIKELY		1004650						
ANR	1004840	Function	check_sljit_emit_fcmp	1367:0:44116:45070							
ANR	1004841	FunctionDef	"check_sljit_emit_fcmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1004840	0					
ANR	1004842	CompoundStatement		1370:0:44288:45070	1004840	0					
ANR	1004843	ExpressionStatement	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )	1372:1:44352:44392	1004840	0	True				
ANR	1004844	CallExpression	CHECK_ARGUMENT ( sljit_is_fpu_available ( ) )		1004840	0					
ANR	1004845	Callee	CHECK_ARGUMENT		1004840	0					
ANR	1004846	Identifier	CHECK_ARGUMENT		1004840	0					
ANR	1004847	ArgumentList	sljit_is_fpu_available ( )		1004840	1					
ANR	1004848	Argument	sljit_is_fpu_available ( )		1004840	0					
ANR	1004849	CallExpression	sljit_is_fpu_available ( )		1004840	0					
ANR	1004850	Callee	sljit_is_fpu_available		1004840	0					
ANR	1004851	Identifier	sljit_is_fpu_available		1004840	0					
ANR	1004852	ArgumentList			1004840	1					
ANR	1004853	ExpressionStatement	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP ) ) )	1373:1:44395:44470	1004840	1	True				
ANR	1004854	CallExpression	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP ) ) )		1004840	0					
ANR	1004855	Callee	CHECK_ARGUMENT		1004840	0					
ANR	1004856	Identifier	CHECK_ARGUMENT		1004840	0					
ANR	1004857	ArgumentList	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP ) )		1004840	1					
ANR	1004858	Argument	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP ) )		1004840	0					
ANR	1004859	UnaryOperationExpression	! ( type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP ) )		1004840	0					
ANR	1004860	UnaryOperator	!		1004840	0					
ANR	1004861	BitAndExpression	type & ~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP )		1004840	1		&			
ANR	1004862	Identifier	type		1004840	0					
ANR	1004863	UnaryOperationExpression	~ ( 0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP )		1004840	1					
ANR	1004864	UnaryOperator	~		1004840	0					
ANR	1004865	InclusiveOrExpression	0xff | SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP		1004840	1		|			
ANR	1004866	PrimaryExpression	0xff		1004840	0					
ANR	1004867	InclusiveOrExpression	SLJIT_REWRITABLE_JUMP | SLJIT_SINGLE_OP		1004840	1		|			
ANR	1004868	Identifier	SLJIT_REWRITABLE_JUMP		1004840	0					
ANR	1004869	Identifier	SLJIT_SINGLE_OP		1004840	1					
ANR	1004870	ExpressionStatement	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_D_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED )	1374:1:44473:44555	1004840	2	True				
ANR	1004871	CallExpression	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_D_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED )		1004840	0					
ANR	1004872	Callee	CHECK_ARGUMENT		1004840	0					
ANR	1004873	Identifier	CHECK_ARGUMENT		1004840	0					
ANR	1004874	ArgumentList	( type & 0xff ) >= SLJIT_D_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1004840	1					
ANR	1004875	Argument	( type & 0xff ) >= SLJIT_D_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1004840	0					
ANR	1004876	AndExpression	( type & 0xff ) >= SLJIT_D_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1004840	0		&&			
ANR	1004877	RelationalExpression	( type & 0xff ) >= SLJIT_D_EQUAL		1004840	0		>=			
ANR	1004878	BitAndExpression	type & 0xff		1004840	0		&			
ANR	1004879	Identifier	type		1004840	0					
ANR	1004880	PrimaryExpression	0xff		1004840	1					
ANR	1004881	Identifier	SLJIT_D_EQUAL		1004840	1					
ANR	1004882	RelationalExpression	( type & 0xff ) <= SLJIT_D_ORDERED		1004840	1		<=			
ANR	1004883	BitAndExpression	type & 0xff		1004840	0		&			
ANR	1004884	Identifier	type		1004840	0					
ANR	1004885	PrimaryExpression	0xff		1004840	1					
ANR	1004886	Identifier	SLJIT_D_ORDERED		1004840	1					
ANR	1004887	ExpressionStatement	"FUNCTION_FCHECK ( src1 , src1w )"	1375:1:44558:44586	1004840	3	True				
ANR	1004888	CallExpression	"FUNCTION_FCHECK ( src1 , src1w )"		1004840	0					
ANR	1004889	Callee	FUNCTION_FCHECK		1004840	0					
ANR	1004890	Identifier	FUNCTION_FCHECK		1004840	0					
ANR	1004891	ArgumentList	src1		1004840	1					
ANR	1004892	Argument	src1		1004840	0					
ANR	1004893	Identifier	src1		1004840	0					
ANR	1004894	Argument	src1w		1004840	1					
ANR	1004895	Identifier	src1w		1004840	0					
ANR	1004896	ExpressionStatement	"FUNCTION_FCHECK ( src2 , src2w )"	1376:1:44589:44617	1004840	4	True				
ANR	1004897	CallExpression	"FUNCTION_FCHECK ( src2 , src2w )"		1004840	0					
ANR	1004898	Callee	FUNCTION_FCHECK		1004840	0					
ANR	1004899	Identifier	FUNCTION_FCHECK		1004840	0					
ANR	1004900	ArgumentList	src2		1004840	1					
ANR	1004901	Argument	src2		1004840	0					
ANR	1004902	Identifier	src2		1004840	0					
ANR	1004903	Argument	src2w		1004840	1					
ANR	1004904	Identifier	src2w		1004840	0					
ANR	1004905	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1004840	5					
ANR	1004906	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1379:5:44676:44710	1004840	0	True				
ANR	1004907	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1004840	0					
ANR	1004908	Callee	SLJIT_UNLIKELY		1004840	0					
ANR	1004909	Identifier	SLJIT_UNLIKELY		1004840	0					
ANR	1004910	ArgumentList	! ! compiler -> verbose		1004840	1					
ANR	1004911	Argument	! ! compiler -> verbose		1004840	0					
ANR	1004912	UnaryOperationExpression	! ! compiler -> verbose		1004840	0					
ANR	1004913	UnaryOperator	!		1004840	0					
ANR	1004914	UnaryOperationExpression	! compiler -> verbose		1004840	1					
ANR	1004915	UnaryOperator	!		1004840	0					
ANR	1004916	PtrMemberAccess	compiler -> verbose		1004840	1					
ANR	1004917	Identifier	compiler		1004840	0					
ANR	1004918	Identifier	verbose		1004840	1					
ANR	1004919	CompoundStatement		10:42:424:424	1004840	1					
ANR	1004920	ExpressionStatement	"fprintf ( compiler -> verbose , ""  fcmp%s.%s%s "" , ! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"" , ( type & SLJIT_SINGLE_OP ) ? ""s_"" : ""d_"" , jump_names [ type & 0xff ] )"	1380:2:44717:44874	1004840	0	True				
ANR	1004921	CallExpression	"fprintf ( compiler -> verbose , ""  fcmp%s.%s%s "" , ! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"" , ( type & SLJIT_SINGLE_OP ) ? ""s_"" : ""d_"" , jump_names [ type & 0xff ] )"		1004840	0					
ANR	1004922	Callee	fprintf		1004840	0					
ANR	1004923	Identifier	fprintf		1004840	0					
ANR	1004924	ArgumentList	compiler -> verbose		1004840	1					
ANR	1004925	Argument	compiler -> verbose		1004840	0					
ANR	1004926	PtrMemberAccess	compiler -> verbose		1004840	0					
ANR	1004927	Identifier	compiler		1004840	0					
ANR	1004928	Identifier	verbose		1004840	1					
ANR	1004929	Argument	"""  fcmp%s.%s%s """		1004840	1					
ANR	1004930	PrimaryExpression	"""  fcmp%s.%s%s """		1004840	0					
ANR	1004931	Argument	"! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"""		1004840	2					
ANR	1004932	ConditionalExpression	"! ( type & SLJIT_REWRITABLE_JUMP ) ? """" : "".r"""		1004840	0					
ANR	1004933	Condition	! ( type & SLJIT_REWRITABLE_JUMP )		1004840	0					
ANR	1004934	UnaryOperationExpression	! ( type & SLJIT_REWRITABLE_JUMP )		1004840	0					
ANR	1004935	UnaryOperator	!		1004840	0					
ANR	1004936	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1004840	1		&			
ANR	1004937	Identifier	type		1004840	0					
ANR	1004938	Identifier	SLJIT_REWRITABLE_JUMP		1004840	1					
ANR	1004939	PrimaryExpression	""""""		1004840	1					
ANR	1004940	PrimaryExpression	""".r"""		1004840	2					
ANR	1004941	Argument	"( type & SLJIT_SINGLE_OP ) ? ""s_"" : ""d_"""		1004840	3					
ANR	1004942	ConditionalExpression	"( type & SLJIT_SINGLE_OP ) ? ""s_"" : ""d_"""		1004840	0					
ANR	1004943	Condition	type & SLJIT_SINGLE_OP		1004840	0					
ANR	1004944	BitAndExpression	type & SLJIT_SINGLE_OP		1004840	0		&			
ANR	1004945	Identifier	type		1004840	0					
ANR	1004946	Identifier	SLJIT_SINGLE_OP		1004840	1					
ANR	1004947	PrimaryExpression	"""s_"""		1004840	1					
ANR	1004948	PrimaryExpression	"""d_"""		1004840	2					
ANR	1004949	Argument	jump_names [ type & 0xff ]		1004840	4					
ANR	1004950	ArrayIndexing	jump_names [ type & 0xff ]		1004840	0					
ANR	1004951	Identifier	jump_names		1004840	0					
ANR	1004952	BitAndExpression	type & 0xff		1004840	1		&			
ANR	1004953	Identifier	type		1004840	0					
ANR	1004954	PrimaryExpression	0xff		1004840	1					
ANR	1004955	ExpressionStatement	"sljit_verbose_fparam ( compiler , src1 , src1w )"	1382:2:44878:44921	1004840	1	True				
ANR	1004956	CallExpression	"sljit_verbose_fparam ( compiler , src1 , src1w )"		1004840	0					
ANR	1004957	Callee	sljit_verbose_fparam		1004840	0					
ANR	1004958	Identifier	sljit_verbose_fparam		1004840	0					
ANR	1004959	ArgumentList	compiler		1004840	1					
ANR	1004960	Argument	compiler		1004840	0					
ANR	1004961	Identifier	compiler		1004840	0					
ANR	1004962	Argument	src1		1004840	1					
ANR	1004963	Identifier	src1		1004840	0					
ANR	1004964	Argument	src1w		1004840	2					
ANR	1004965	Identifier	src1w		1004840	0					
ANR	1004966	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1383:2:44925:44957	1004840	2	True				
ANR	1004967	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1004840	0					
ANR	1004968	Callee	fprintf		1004840	0					
ANR	1004969	Identifier	fprintf		1004840	0					
ANR	1004970	ArgumentList	compiler -> verbose		1004840	1					
ANR	1004971	Argument	compiler -> verbose		1004840	0					
ANR	1004972	PtrMemberAccess	compiler -> verbose		1004840	0					
ANR	1004973	Identifier	compiler		1004840	0					
ANR	1004974	Identifier	verbose		1004840	1					
ANR	1004975	Argument	""", """		1004840	1					
ANR	1004976	PrimaryExpression	""", """		1004840	0					
ANR	1004977	ExpressionStatement	"sljit_verbose_fparam ( compiler , src2 , src2w )"	1384:2:44961:45004	1004840	3	True				
ANR	1004978	CallExpression	"sljit_verbose_fparam ( compiler , src2 , src2w )"		1004840	0					
ANR	1004979	Callee	sljit_verbose_fparam		1004840	0					
ANR	1004980	Identifier	sljit_verbose_fparam		1004840	0					
ANR	1004981	ArgumentList	compiler		1004840	1					
ANR	1004982	Argument	compiler		1004840	0					
ANR	1004983	Identifier	compiler		1004840	0					
ANR	1004984	Argument	src2		1004840	1					
ANR	1004985	Identifier	src2		1004840	0					
ANR	1004986	Argument	src2w		1004840	2					
ANR	1004987	Identifier	src2w		1004840	0					
ANR	1004988	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1385:2:45008:45040	1004840	4	True				
ANR	1004989	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1004840	0					
ANR	1004990	Callee	fprintf		1004840	0					
ANR	1004991	Identifier	fprintf		1004840	0					
ANR	1004992	ArgumentList	compiler -> verbose		1004840	1					
ANR	1004993	Argument	compiler -> verbose		1004840	0					
ANR	1004994	PtrMemberAccess	compiler -> verbose		1004840	0					
ANR	1004995	Identifier	compiler		1004840	0					
ANR	1004996	Identifier	verbose		1004840	1					
ANR	1004997	Argument	"""\\n"""		1004840	1					
ANR	1004998	PrimaryExpression	"""\\n"""		1004840	0					
ANR	1004999	ExpressionStatement	CHECK_RETURN_OK	1388:1:45053:45068	1004840	6	True				
ANR	1005000	Identifier	CHECK_RETURN_OK		1004840	0					
ANR	1005001	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1004840	1					
ANR	1005002	Identifier	check_sljit_emit_fcmp		1004840	2					
ANR	1005003	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1004840	3					
ANR	1005004	Parameter	struct sljit_compiler * compiler	1367:60:44176:44206	1004840	0	True				
ANR	1005005	ParameterType	struct sljit_compiler *		1004840	0					
ANR	1005006	Identifier	compiler		1004840	1					
ANR	1005007	Parameter	sljit_si type	1367:93:44209:44221	1004840	1	True				
ANR	1005008	ParameterType	sljit_si		1004840	0					
ANR	1005009	Identifier	type		1004840	1					
ANR	1005010	Parameter	sljit_si src1	1368:1:44225:44237	1004840	2	True				
ANR	1005011	ParameterType	sljit_si		1004840	0					
ANR	1005012	Identifier	src1		1004840	1					
ANR	1005013	Parameter	sljit_sw src1w	1368:16:44240:44253	1004840	3	True				
ANR	1005014	ParameterType	sljit_sw		1004840	0					
ANR	1005015	Identifier	src1w		1004840	1					
ANR	1005016	Parameter	sljit_si src2	1369:1:44257:44269	1004840	4	True				
ANR	1005017	ParameterType	sljit_si		1004840	0					
ANR	1005018	Identifier	src2		1004840	1					
ANR	1005019	Parameter	sljit_sw src2w	1369:16:44272:44285	1004840	5	True				
ANR	1005020	ParameterType	sljit_sw		1004840	0					
ANR	1005021	Identifier	src2w		1004840	1					
ANR	1005022	CFGEntryNode	ENTRY		1004840		True				
ANR	1005023	CFGExitNode	EXIT		1004840		True				
ANR	1005024	Symbol	src2w		1004840						
ANR	1005025	Symbol	src1w		1004840						
ANR	1005026	Symbol	SLJIT_SINGLE_OP		1004840						
ANR	1005027	Symbol	sljit_is_fpu_available		1004840						
ANR	1005028	Symbol	SLJIT_D_EQUAL		1004840						
ANR	1005029	Symbol	SLJIT_D_ORDERED		1004840						
ANR	1005030	Symbol	* compiler		1004840						
ANR	1005031	Symbol	type		1004840						
ANR	1005032	Symbol	* jump_names		1004840						
ANR	1005033	Symbol	* type		1004840						
ANR	1005034	Symbol	jump_names		1004840						
ANR	1005035	Symbol	src1		1004840						
ANR	1005036	Symbol	src2		1004840						
ANR	1005037	Symbol	SLJIT_REWRITABLE_JUMP		1004840						
ANR	1005038	Symbol	compiler		1004840						
ANR	1005039	Symbol	compiler -> verbose		1004840						
ANR	1005040	Symbol	SLJIT_UNLIKELY		1004840						
ANR	1005041	Function	check_sljit_emit_ijump	1391:0:45073:45816							
ANR	1005042	FunctionDef	"check_sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1005041	0					
ANR	1005043	CompoundStatement		1392:0:45211:45816	1005041	0					
ANR	1005044	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> skip_checks ) )		1005041	0					
ANR	1005045	Condition	SLJIT_UNLIKELY ( compiler -> skip_checks )	1393:5:45218:45254	1005041	0	True				
ANR	1005046	CallExpression	SLJIT_UNLIKELY ( compiler -> skip_checks )		1005041	0					
ANR	1005047	Callee	SLJIT_UNLIKELY		1005041	0					
ANR	1005048	Identifier	SLJIT_UNLIKELY		1005041	0					
ANR	1005049	ArgumentList	compiler -> skip_checks		1005041	1					
ANR	1005050	Argument	compiler -> skip_checks		1005041	0					
ANR	1005051	PtrMemberAccess	compiler -> skip_checks		1005041	0					
ANR	1005052	Identifier	compiler		1005041	0					
ANR	1005053	Identifier	skip_checks		1005041	1					
ANR	1005054	CompoundStatement		2:44:45:45	1005041	1					
ANR	1005055	ExpressionStatement	compiler -> skip_checks = 0	1394:2:45261:45286	1005041	0	True				
ANR	1005056	AssignmentExpression	compiler -> skip_checks = 0		1005041	0		=			
ANR	1005057	PtrMemberAccess	compiler -> skip_checks		1005041	0					
ANR	1005058	Identifier	compiler		1005041	0					
ANR	1005059	Identifier	skip_checks		1005041	1					
ANR	1005060	PrimaryExpression	0		1005041	1					
ANR	1005061	ExpressionStatement	CHECK_RETURN_OK	1395:2:45290:45305	1005041	1	True				
ANR	1005062	Identifier	CHECK_RETURN_OK		1005041	0					
ANR	1005063	ExpressionStatement	CHECK_ARGUMENT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )	1399:1:45373:45430	1005041	1	True				
ANR	1005064	CallExpression	CHECK_ARGUMENT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )		1005041	0					
ANR	1005065	Callee	CHECK_ARGUMENT		1005041	0					
ANR	1005066	Identifier	CHECK_ARGUMENT		1005041	0					
ANR	1005067	ArgumentList	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1005041	1					
ANR	1005068	Argument	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1005041	0					
ANR	1005069	AndExpression	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1005041	0		&&			
ANR	1005070	RelationalExpression	type >= SLJIT_JUMP		1005041	0		>=			
ANR	1005071	Identifier	type		1005041	0					
ANR	1005072	Identifier	SLJIT_JUMP		1005041	1					
ANR	1005073	RelationalExpression	type <= SLJIT_CALL3		1005041	1		<=			
ANR	1005074	Identifier	type		1005041	0					
ANR	1005075	Identifier	SLJIT_CALL3		1005041	1					
ANR	1005076	ExpressionStatement	CHECK_ARGUMENT ( type <= SLJIT_CALL0 || ( type - SLJIT_CALL0 ) <= compiler -> scratches )	1400:1:45433:45515	1005041	2	True				
ANR	1005077	CallExpression	CHECK_ARGUMENT ( type <= SLJIT_CALL0 || ( type - SLJIT_CALL0 ) <= compiler -> scratches )		1005041	0					
ANR	1005078	Callee	CHECK_ARGUMENT		1005041	0					
ANR	1005079	Identifier	CHECK_ARGUMENT		1005041	0					
ANR	1005080	ArgumentList	type <= SLJIT_CALL0 || ( type - SLJIT_CALL0 ) <= compiler -> scratches		1005041	1					
ANR	1005081	Argument	type <= SLJIT_CALL0 || ( type - SLJIT_CALL0 ) <= compiler -> scratches		1005041	0					
ANR	1005082	OrExpression	type <= SLJIT_CALL0 || ( type - SLJIT_CALL0 ) <= compiler -> scratches		1005041	0		||			
ANR	1005083	RelationalExpression	type <= SLJIT_CALL0		1005041	0		<=			
ANR	1005084	Identifier	type		1005041	0					
ANR	1005085	Identifier	SLJIT_CALL0		1005041	1					
ANR	1005086	RelationalExpression	( type - SLJIT_CALL0 ) <= compiler -> scratches		1005041	1		<=			
ANR	1005087	AdditiveExpression	type - SLJIT_CALL0		1005041	0		-			
ANR	1005088	Identifier	type		1005041	0					
ANR	1005089	Identifier	SLJIT_CALL0		1005041	1					
ANR	1005090	PtrMemberAccess	compiler -> scratches		1005041	1					
ANR	1005091	Identifier	compiler		1005041	0					
ANR	1005092	Identifier	scratches		1005041	1					
ANR	1005093	ExpressionStatement	"FUNCTION_CHECK_SRC ( src , srcw )"	1401:1:45518:45547	1005041	3	True				
ANR	1005094	CallExpression	"FUNCTION_CHECK_SRC ( src , srcw )"		1005041	0					
ANR	1005095	Callee	FUNCTION_CHECK_SRC		1005041	0					
ANR	1005096	Identifier	FUNCTION_CHECK_SRC		1005041	0					
ANR	1005097	ArgumentList	src		1005041	1					
ANR	1005098	Argument	src		1005041	0					
ANR	1005099	Identifier	src		1005041	0					
ANR	1005100	Argument	srcw		1005041	1					
ANR	1005101	Identifier	srcw		1005041	0					
ANR	1005102	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1005041	4					
ANR	1005103	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1404:5:45606:45640	1005041	0	True				
ANR	1005104	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1005041	0					
ANR	1005105	Callee	SLJIT_UNLIKELY		1005041	0					
ANR	1005106	Identifier	SLJIT_UNLIKELY		1005041	0					
ANR	1005107	ArgumentList	! ! compiler -> verbose		1005041	1					
ANR	1005108	Argument	! ! compiler -> verbose		1005041	0					
ANR	1005109	UnaryOperationExpression	! ! compiler -> verbose		1005041	0					
ANR	1005110	UnaryOperator	!		1005041	0					
ANR	1005111	UnaryOperationExpression	! compiler -> verbose		1005041	1					
ANR	1005112	UnaryOperator	!		1005041	0					
ANR	1005113	PtrMemberAccess	compiler -> verbose		1005041	1					
ANR	1005114	Identifier	compiler		1005041	0					
ANR	1005115	Identifier	verbose		1005041	1					
ANR	1005116	CompoundStatement		13:42:431:431	1005041	1					
ANR	1005117	ExpressionStatement	"fprintf ( compiler -> verbose , ""  ijump.%s "" , jump_names [ type ] )"	1405:2:45647:45706	1005041	0	True				
ANR	1005118	CallExpression	"fprintf ( compiler -> verbose , ""  ijump.%s "" , jump_names [ type ] )"		1005041	0					
ANR	1005119	Callee	fprintf		1005041	0					
ANR	1005120	Identifier	fprintf		1005041	0					
ANR	1005121	ArgumentList	compiler -> verbose		1005041	1					
ANR	1005122	Argument	compiler -> verbose		1005041	0					
ANR	1005123	PtrMemberAccess	compiler -> verbose		1005041	0					
ANR	1005124	Identifier	compiler		1005041	0					
ANR	1005125	Identifier	verbose		1005041	1					
ANR	1005126	Argument	"""  ijump.%s """		1005041	1					
ANR	1005127	PrimaryExpression	"""  ijump.%s """		1005041	0					
ANR	1005128	Argument	jump_names [ type ]		1005041	2					
ANR	1005129	ArrayIndexing	jump_names [ type ]		1005041	0					
ANR	1005130	Identifier	jump_names		1005041	0					
ANR	1005131	Identifier	type		1005041	1					
ANR	1005132	ExpressionStatement	"sljit_verbose_param ( compiler , src , srcw )"	1406:2:45710:45750	1005041	1	True				
ANR	1005133	CallExpression	"sljit_verbose_param ( compiler , src , srcw )"		1005041	0					
ANR	1005134	Callee	sljit_verbose_param		1005041	0					
ANR	1005135	Identifier	sljit_verbose_param		1005041	0					
ANR	1005136	ArgumentList	compiler		1005041	1					
ANR	1005137	Argument	compiler		1005041	0					
ANR	1005138	Identifier	compiler		1005041	0					
ANR	1005139	Argument	src		1005041	1					
ANR	1005140	Identifier	src		1005041	0					
ANR	1005141	Argument	srcw		1005041	2					
ANR	1005142	Identifier	srcw		1005041	0					
ANR	1005143	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	1407:2:45754:45786	1005041	2	True				
ANR	1005144	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1005041	0					
ANR	1005145	Callee	fprintf		1005041	0					
ANR	1005146	Identifier	fprintf		1005041	0					
ANR	1005147	ArgumentList	compiler -> verbose		1005041	1					
ANR	1005148	Argument	compiler -> verbose		1005041	0					
ANR	1005149	PtrMemberAccess	compiler -> verbose		1005041	0					
ANR	1005150	Identifier	compiler		1005041	0					
ANR	1005151	Identifier	verbose		1005041	1					
ANR	1005152	Argument	"""\\n"""		1005041	1					
ANR	1005153	PrimaryExpression	"""\\n"""		1005041	0					
ANR	1005154	ExpressionStatement	CHECK_RETURN_OK	1410:1:45799:45814	1005041	5	True				
ANR	1005155	Identifier	CHECK_RETURN_OK		1005041	0					
ANR	1005156	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1005041	1					
ANR	1005157	Identifier	check_sljit_emit_ijump		1005041	2					
ANR	1005158	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1005041	3					
ANR	1005159	Parameter	struct sljit_compiler * compiler	1391:61:45134:45164	1005041	0	True				
ANR	1005160	ParameterType	struct sljit_compiler *		1005041	0					
ANR	1005161	Identifier	compiler		1005041	1					
ANR	1005162	Parameter	sljit_si type	1391:94:45167:45179	1005041	1	True				
ANR	1005163	ParameterType	sljit_si		1005041	0					
ANR	1005164	Identifier	type		1005041	1					
ANR	1005165	Parameter	sljit_si src	1391:109:45182:45193	1005041	2	True				
ANR	1005166	ParameterType	sljit_si		1005041	0					
ANR	1005167	Identifier	src		1005041	1					
ANR	1005168	Parameter	sljit_sw srcw	1391:123:45196:45208	1005041	3	True				
ANR	1005169	ParameterType	sljit_sw		1005041	0					
ANR	1005170	Identifier	srcw		1005041	1					
ANR	1005171	CFGEntryNode	ENTRY		1005041		True				
ANR	1005172	CFGExitNode	EXIT		1005041		True				
ANR	1005173	Symbol	SLJIT_JUMP		1005041						
ANR	1005174	Symbol	compiler -> scratches		1005041						
ANR	1005175	Symbol	src		1005041						
ANR	1005176	Symbol	srcw		1005041						
ANR	1005177	Symbol	SLJIT_CALL0		1005041						
ANR	1005178	Symbol	* compiler		1005041						
ANR	1005179	Symbol	type		1005041						
ANR	1005180	Symbol	* jump_names		1005041						
ANR	1005181	Symbol	* type		1005041						
ANR	1005182	Symbol	jump_names		1005041						
ANR	1005183	Symbol	compiler -> skip_checks		1005041						
ANR	1005184	Symbol	SLJIT_CALL3		1005041						
ANR	1005185	Symbol	compiler		1005041						
ANR	1005186	Symbol	SLJIT_UNLIKELY		1005041						
ANR	1005187	Symbol	compiler -> verbose		1005041						
ANR	1005188	Function	check_sljit_emit_op_flags	1413:0:45819:47382							
ANR	1005189	FunctionDef	"check_sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1005188	0					
ANR	1005190	CompoundStatement		1417:0:46005:47382	1005188	0					
ANR	1005191	ExpressionStatement	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_INT_OP ) ) )	1419:1:46069:46117	1005188	0	True				
ANR	1005192	CallExpression	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_INT_OP ) ) )		1005188	0					
ANR	1005193	Callee	CHECK_ARGUMENT		1005188	0					
ANR	1005194	Identifier	CHECK_ARGUMENT		1005188	0					
ANR	1005195	ArgumentList	! ( type & ~ ( 0xff | SLJIT_INT_OP ) )		1005188	1					
ANR	1005196	Argument	! ( type & ~ ( 0xff | SLJIT_INT_OP ) )		1005188	0					
ANR	1005197	UnaryOperationExpression	! ( type & ~ ( 0xff | SLJIT_INT_OP ) )		1005188	0					
ANR	1005198	UnaryOperator	!		1005188	0					
ANR	1005199	BitAndExpression	type & ~ ( 0xff | SLJIT_INT_OP )		1005188	1		&			
ANR	1005200	Identifier	type		1005188	0					
ANR	1005201	UnaryOperationExpression	~ ( 0xff | SLJIT_INT_OP )		1005188	1					
ANR	1005202	UnaryOperator	~		1005188	0					
ANR	1005203	InclusiveOrExpression	0xff | SLJIT_INT_OP		1005188	1		|			
ANR	1005204	PrimaryExpression	0xff		1005188	0					
ANR	1005205	Identifier	SLJIT_INT_OP		1005188	1					
ANR	1005206	ExpressionStatement	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED )	1420:1:46120:46200	1005188	1	True				
ANR	1005207	CallExpression	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED )		1005188	0					
ANR	1005208	Callee	CHECK_ARGUMENT		1005188	0					
ANR	1005209	Identifier	CHECK_ARGUMENT		1005188	0					
ANR	1005210	ArgumentList	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1005188	1					
ANR	1005211	Argument	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1005188	0					
ANR	1005212	AndExpression	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1005188	0		&&			
ANR	1005213	RelationalExpression	( type & 0xff ) >= SLJIT_EQUAL		1005188	0		>=			
ANR	1005214	BitAndExpression	type & 0xff		1005188	0		&			
ANR	1005215	Identifier	type		1005188	0					
ANR	1005216	PrimaryExpression	0xff		1005188	1					
ANR	1005217	Identifier	SLJIT_EQUAL		1005188	1					
ANR	1005218	RelationalExpression	( type & 0xff ) <= SLJIT_D_ORDERED		1005188	1		<=			
ANR	1005219	BitAndExpression	type & 0xff		1005188	0		&			
ANR	1005220	Identifier	type		1005188	0					
ANR	1005221	PrimaryExpression	0xff		1005188	1					
ANR	1005222	Identifier	SLJIT_D_ORDERED		1005188	1					
ANR	1005223	ExpressionStatement	CHECK_ARGUMENT ( op == SLJIT_MOV || GET_OPCODE ( op ) == SLJIT_MOV_UI || GET_OPCODE ( op ) == SLJIT_MOV_SI || ( GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR ) )	1421:1:46203:46368	1005188	2	True				
ANR	1005224	CallExpression	CHECK_ARGUMENT ( op == SLJIT_MOV || GET_OPCODE ( op ) == SLJIT_MOV_UI || GET_OPCODE ( op ) == SLJIT_MOV_SI || ( GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR ) )		1005188	0					
ANR	1005225	Callee	CHECK_ARGUMENT		1005188	0					
ANR	1005226	Identifier	CHECK_ARGUMENT		1005188	0					
ANR	1005227	ArgumentList	op == SLJIT_MOV || GET_OPCODE ( op ) == SLJIT_MOV_UI || GET_OPCODE ( op ) == SLJIT_MOV_SI || ( GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR )		1005188	1					
ANR	1005228	Argument	op == SLJIT_MOV || GET_OPCODE ( op ) == SLJIT_MOV_UI || GET_OPCODE ( op ) == SLJIT_MOV_SI || ( GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR )		1005188	0					
ANR	1005229	OrExpression	op == SLJIT_MOV || GET_OPCODE ( op ) == SLJIT_MOV_UI || GET_OPCODE ( op ) == SLJIT_MOV_SI || ( GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR )		1005188	0		||			
ANR	1005230	EqualityExpression	op == SLJIT_MOV		1005188	0		==			
ANR	1005231	Identifier	op		1005188	0					
ANR	1005232	Identifier	SLJIT_MOV		1005188	1					
ANR	1005233	OrExpression	GET_OPCODE ( op ) == SLJIT_MOV_UI || GET_OPCODE ( op ) == SLJIT_MOV_SI || ( GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR )		1005188	1		||			
ANR	1005234	EqualityExpression	GET_OPCODE ( op ) == SLJIT_MOV_UI		1005188	0		==			
ANR	1005235	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005236	Callee	GET_OPCODE		1005188	0					
ANR	1005237	Identifier	GET_OPCODE		1005188	0					
ANR	1005238	ArgumentList	op		1005188	1					
ANR	1005239	Argument	op		1005188	0					
ANR	1005240	Identifier	op		1005188	0					
ANR	1005241	Identifier	SLJIT_MOV_UI		1005188	1					
ANR	1005242	OrExpression	GET_OPCODE ( op ) == SLJIT_MOV_SI || ( GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR )		1005188	1		||			
ANR	1005243	EqualityExpression	GET_OPCODE ( op ) == SLJIT_MOV_SI		1005188	0		==			
ANR	1005244	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005245	Callee	GET_OPCODE		1005188	0					
ANR	1005246	Identifier	GET_OPCODE		1005188	0					
ANR	1005247	ArgumentList	op		1005188	1					
ANR	1005248	Argument	op		1005188	0					
ANR	1005249	Identifier	op		1005188	0					
ANR	1005250	Identifier	SLJIT_MOV_SI		1005188	1					
ANR	1005251	AndExpression	GET_OPCODE ( op ) >= SLJIT_AND && GET_OPCODE ( op ) <= SLJIT_XOR		1005188	1		&&			
ANR	1005252	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_AND		1005188	0		>=			
ANR	1005253	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005254	Callee	GET_OPCODE		1005188	0					
ANR	1005255	Identifier	GET_OPCODE		1005188	0					
ANR	1005256	ArgumentList	op		1005188	1					
ANR	1005257	Argument	op		1005188	0					
ANR	1005258	Identifier	op		1005188	0					
ANR	1005259	Identifier	SLJIT_AND		1005188	1					
ANR	1005260	RelationalExpression	GET_OPCODE ( op ) <= SLJIT_XOR		1005188	1		<=			
ANR	1005261	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005262	Callee	GET_OPCODE		1005188	0					
ANR	1005263	Identifier	GET_OPCODE		1005188	0					
ANR	1005264	ArgumentList	op		1005188	1					
ANR	1005265	Argument	op		1005188	0					
ANR	1005266	Identifier	op		1005188	0					
ANR	1005267	Identifier	SLJIT_XOR		1005188	1					
ANR	1005268	ExpressionStatement	CHECK_ARGUMENT ( ( op & ( SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C ) ) == 0 )	1423:1:46371:46454	1005188	3	True				
ANR	1005269	CallExpression	CHECK_ARGUMENT ( ( op & ( SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C ) ) == 0 )		1005188	0					
ANR	1005270	Callee	CHECK_ARGUMENT		1005188	0					
ANR	1005271	Identifier	CHECK_ARGUMENT		1005188	0					
ANR	1005272	ArgumentList	( op & ( SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C ) ) == 0		1005188	1					
ANR	1005273	Argument	( op & ( SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C ) ) == 0		1005188	0					
ANR	1005274	EqualityExpression	( op & ( SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C ) ) == 0		1005188	0		==			
ANR	1005275	BitAndExpression	op & ( SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C )		1005188	0		&			
ANR	1005276	Identifier	op		1005188	0					
ANR	1005277	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C		1005188	1		|			
ANR	1005278	Identifier	SLJIT_SET_U		1005188	0					
ANR	1005279	InclusiveOrExpression	SLJIT_SET_S | SLJIT_SET_O | SLJIT_SET_C		1005188	1		|			
ANR	1005280	Identifier	SLJIT_SET_S		1005188	0					
ANR	1005281	InclusiveOrExpression	SLJIT_SET_O | SLJIT_SET_C		1005188	1		|			
ANR	1005282	Identifier	SLJIT_SET_O		1005188	0					
ANR	1005283	Identifier	SLJIT_SET_C		1005188	1					
ANR	1005284	PrimaryExpression	0		1005188	1					
ANR	1005285	ExpressionStatement	CHECK_ARGUMENT ( ( op & ( SLJIT_SET_E | SLJIT_KEEP_FLAGS ) ) != ( SLJIT_SET_E | SLJIT_KEEP_FLAGS ) )	1424:1:46457:46548	1005188	4	True				
ANR	1005286	CallExpression	CHECK_ARGUMENT ( ( op & ( SLJIT_SET_E | SLJIT_KEEP_FLAGS ) ) != ( SLJIT_SET_E | SLJIT_KEEP_FLAGS ) )		1005188	0					
ANR	1005287	Callee	CHECK_ARGUMENT		1005188	0					
ANR	1005288	Identifier	CHECK_ARGUMENT		1005188	0					
ANR	1005289	ArgumentList	( op & ( SLJIT_SET_E | SLJIT_KEEP_FLAGS ) ) != ( SLJIT_SET_E | SLJIT_KEEP_FLAGS )		1005188	1					
ANR	1005290	Argument	( op & ( SLJIT_SET_E | SLJIT_KEEP_FLAGS ) ) != ( SLJIT_SET_E | SLJIT_KEEP_FLAGS )		1005188	0					
ANR	1005291	EqualityExpression	( op & ( SLJIT_SET_E | SLJIT_KEEP_FLAGS ) ) != ( SLJIT_SET_E | SLJIT_KEEP_FLAGS )		1005188	0		!=			
ANR	1005292	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_KEEP_FLAGS )		1005188	0		&			
ANR	1005293	Identifier	op		1005188	0					
ANR	1005294	InclusiveOrExpression	SLJIT_SET_E | SLJIT_KEEP_FLAGS		1005188	1		|			
ANR	1005295	Identifier	SLJIT_SET_E		1005188	0					
ANR	1005296	Identifier	SLJIT_KEEP_FLAGS		1005188	1					
ANR	1005297	InclusiveOrExpression	SLJIT_SET_E | SLJIT_KEEP_FLAGS		1005188	1		|			
ANR	1005298	Identifier	SLJIT_SET_E		1005188	0					
ANR	1005299	Identifier	SLJIT_KEEP_FLAGS		1005188	1					
ANR	1005300	IfStatement	if ( GET_OPCODE ( op ) < SLJIT_ADD )		1005188	5					
ANR	1005301	Condition	GET_OPCODE ( op ) < SLJIT_ADD	1425:5:46555:46580	1005188	0	True				
ANR	1005302	RelationalExpression	GET_OPCODE ( op ) < SLJIT_ADD		1005188	0		<			
ANR	1005303	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005304	Callee	GET_OPCODE		1005188	0					
ANR	1005305	Identifier	GET_OPCODE		1005188	0					
ANR	1005306	ArgumentList	op		1005188	1					
ANR	1005307	Argument	op		1005188	0					
ANR	1005308	Identifier	op		1005188	0					
ANR	1005309	Identifier	SLJIT_ADD		1005188	1					
ANR	1005310	CompoundStatement		9:33:577:577	1005188	1					
ANR	1005311	ExpressionStatement	CHECK_ARGUMENT ( src == SLJIT_UNUSED && srcw == 0 )	1426:2:46587:46635	1005188	0	True				
ANR	1005312	CallExpression	CHECK_ARGUMENT ( src == SLJIT_UNUSED && srcw == 0 )		1005188	0					
ANR	1005313	Callee	CHECK_ARGUMENT		1005188	0					
ANR	1005314	Identifier	CHECK_ARGUMENT		1005188	0					
ANR	1005315	ArgumentList	src == SLJIT_UNUSED && srcw == 0		1005188	1					
ANR	1005316	Argument	src == SLJIT_UNUSED && srcw == 0		1005188	0					
ANR	1005317	AndExpression	src == SLJIT_UNUSED && srcw == 0		1005188	0		&&			
ANR	1005318	EqualityExpression	src == SLJIT_UNUSED		1005188	0		==			
ANR	1005319	Identifier	src		1005188	0					
ANR	1005320	Identifier	SLJIT_UNUSED		1005188	1					
ANR	1005321	EqualityExpression	srcw == 0		1005188	1		==			
ANR	1005322	Identifier	srcw		1005188	0					
ANR	1005323	PrimaryExpression	0		1005188	1					
ANR	1005324	ElseStatement	else		1005188	0					
ANR	1005325	CompoundStatement		11:8:639:639	1005188	0					
ANR	1005326	ExpressionStatement	CHECK_ARGUMENT ( src == dst && srcw == dstw )	1428:2:46649:46691	1005188	0	True				
ANR	1005327	CallExpression	CHECK_ARGUMENT ( src == dst && srcw == dstw )		1005188	0					
ANR	1005328	Callee	CHECK_ARGUMENT		1005188	0					
ANR	1005329	Identifier	CHECK_ARGUMENT		1005188	0					
ANR	1005330	ArgumentList	src == dst && srcw == dstw		1005188	1					
ANR	1005331	Argument	src == dst && srcw == dstw		1005188	0					
ANR	1005332	AndExpression	src == dst && srcw == dstw		1005188	0		&&			
ANR	1005333	EqualityExpression	src == dst		1005188	0		==			
ANR	1005334	Identifier	src		1005188	0					
ANR	1005335	Identifier	dst		1005188	1					
ANR	1005336	EqualityExpression	srcw == dstw		1005188	1		==			
ANR	1005337	Identifier	srcw		1005188	0					
ANR	1005338	Identifier	dstw		1005188	1					
ANR	1005339	ExpressionStatement	"FUNCTION_CHECK_DST ( dst , dstw )"	1430:1:46697:46726	1005188	6	True				
ANR	1005340	CallExpression	"FUNCTION_CHECK_DST ( dst , dstw )"		1005188	0					
ANR	1005341	Callee	FUNCTION_CHECK_DST		1005188	0					
ANR	1005342	Identifier	FUNCTION_CHECK_DST		1005188	0					
ANR	1005343	ArgumentList	dst		1005188	1					
ANR	1005344	Argument	dst		1005188	0					
ANR	1005345	Identifier	dst		1005188	0					
ANR	1005346	Argument	dstw		1005188	1					
ANR	1005347	Identifier	dstw		1005188	0					
ANR	1005348	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1005188	7					
ANR	1005349	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1433:5:46785:46819	1005188	0	True				
ANR	1005350	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1005188	0					
ANR	1005351	Callee	SLJIT_UNLIKELY		1005188	0					
ANR	1005352	Identifier	SLJIT_UNLIKELY		1005188	0					
ANR	1005353	ArgumentList	! ! compiler -> verbose		1005188	1					
ANR	1005354	Argument	! ! compiler -> verbose		1005188	0					
ANR	1005355	UnaryOperationExpression	! ! compiler -> verbose		1005188	0					
ANR	1005356	UnaryOperator	!		1005188	0					
ANR	1005357	UnaryOperationExpression	! compiler -> verbose		1005188	1					
ANR	1005358	UnaryOperator	!		1005188	0					
ANR	1005359	PtrMemberAccess	compiler -> verbose		1005188	1					
ANR	1005360	Identifier	compiler		1005188	0					
ANR	1005361	Identifier	verbose		1005188	1					
ANR	1005362	CompoundStatement		17:42:816:816	1005188	1					
ANR	1005363	ExpressionStatement	"fprintf ( compiler -> verbose , ""  flags.%s%s%s%s "" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , GET_OPCODE ( op ) >= SLJIT_OP2_BASE ? op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ] : op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ] , ! ( op & SLJIT_SET_E ) ? """" : "".e"" , ! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"" )"	1434:2:46826:47107	1005188	0	True				
ANR	1005364	CallExpression	"fprintf ( compiler -> verbose , ""  flags.%s%s%s%s "" , ! ( op & SLJIT_INT_OP ) ? """" : ""i"" , GET_OPCODE ( op ) >= SLJIT_OP2_BASE ? op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ] : op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ] , ! ( op & SLJIT_SET_E ) ? """" : "".e"" , ! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"" )"		1005188	0					
ANR	1005365	Callee	fprintf		1005188	0					
ANR	1005366	Identifier	fprintf		1005188	0					
ANR	1005367	ArgumentList	compiler -> verbose		1005188	1					
ANR	1005368	Argument	compiler -> verbose		1005188	0					
ANR	1005369	PtrMemberAccess	compiler -> verbose		1005188	0					
ANR	1005370	Identifier	compiler		1005188	0					
ANR	1005371	Identifier	verbose		1005188	1					
ANR	1005372	Argument	"""  flags.%s%s%s%s """		1005188	1					
ANR	1005373	PrimaryExpression	"""  flags.%s%s%s%s """		1005188	0					
ANR	1005374	Argument	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1005188	2					
ANR	1005375	ConditionalExpression	"! ( op & SLJIT_INT_OP ) ? """" : ""i"""		1005188	0					
ANR	1005376	Condition	! ( op & SLJIT_INT_OP )		1005188	0					
ANR	1005377	UnaryOperationExpression	! ( op & SLJIT_INT_OP )		1005188	0					
ANR	1005378	UnaryOperator	!		1005188	0					
ANR	1005379	BitAndExpression	op & SLJIT_INT_OP		1005188	1		&			
ANR	1005380	Identifier	op		1005188	0					
ANR	1005381	Identifier	SLJIT_INT_OP		1005188	1					
ANR	1005382	PrimaryExpression	""""""		1005188	1					
ANR	1005383	PrimaryExpression	"""i"""		1005188	2					
ANR	1005384	Argument	GET_OPCODE ( op ) >= SLJIT_OP2_BASE ? op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ] : op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ]		1005188	3					
ANR	1005385	ConditionalExpression	GET_OPCODE ( op ) >= SLJIT_OP2_BASE ? op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ] : op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ]		1005188	0					
ANR	1005386	Condition	GET_OPCODE ( op ) >= SLJIT_OP2_BASE		1005188	0					
ANR	1005387	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_OP2_BASE		1005188	0		>=			
ANR	1005388	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005389	Callee	GET_OPCODE		1005188	0					
ANR	1005390	Identifier	GET_OPCODE		1005188	0					
ANR	1005391	ArgumentList	op		1005188	1					
ANR	1005392	Argument	op		1005188	0					
ANR	1005393	Identifier	op		1005188	0					
ANR	1005394	Identifier	SLJIT_OP2_BASE		1005188	1					
ANR	1005395	ArrayIndexing	op2_names [ GET_OPCODE ( op ) - SLJIT_OP2_BASE ]		1005188	1					
ANR	1005396	Identifier	op2_names		1005188	0					
ANR	1005397	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_OP2_BASE		1005188	1		-			
ANR	1005398	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005399	Callee	GET_OPCODE		1005188	0					
ANR	1005400	Identifier	GET_OPCODE		1005188	0					
ANR	1005401	ArgumentList	op		1005188	1					
ANR	1005402	Argument	op		1005188	0					
ANR	1005403	Identifier	op		1005188	0					
ANR	1005404	Identifier	SLJIT_OP2_BASE		1005188	1					
ANR	1005405	ArrayIndexing	op1_names [ GET_OPCODE ( op ) - SLJIT_OP1_BASE ]		1005188	2					
ANR	1005406	Identifier	op1_names		1005188	0					
ANR	1005407	AdditiveExpression	GET_OPCODE ( op ) - SLJIT_OP1_BASE		1005188	1		-			
ANR	1005408	CallExpression	GET_OPCODE ( op )		1005188	0					
ANR	1005409	Callee	GET_OPCODE		1005188	0					
ANR	1005410	Identifier	GET_OPCODE		1005188	0					
ANR	1005411	ArgumentList	op		1005188	1					
ANR	1005412	Argument	op		1005188	0					
ANR	1005413	Identifier	op		1005188	0					
ANR	1005414	Identifier	SLJIT_OP1_BASE		1005188	1					
ANR	1005415	Argument	"! ( op & SLJIT_SET_E ) ? """" : "".e"""		1005188	4					
ANR	1005416	ConditionalExpression	"! ( op & SLJIT_SET_E ) ? """" : "".e"""		1005188	0					
ANR	1005417	Condition	! ( op & SLJIT_SET_E )		1005188	0					
ANR	1005418	UnaryOperationExpression	! ( op & SLJIT_SET_E )		1005188	0					
ANR	1005419	UnaryOperator	!		1005188	0					
ANR	1005420	BitAndExpression	op & SLJIT_SET_E		1005188	1		&			
ANR	1005421	Identifier	op		1005188	0					
ANR	1005422	Identifier	SLJIT_SET_E		1005188	1					
ANR	1005423	PrimaryExpression	""""""		1005188	1					
ANR	1005424	PrimaryExpression	""".e"""		1005188	2					
ANR	1005425	Argument	"! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"""		1005188	5					
ANR	1005426	ConditionalExpression	"! ( op & SLJIT_KEEP_FLAGS ) ? """" : "".k"""		1005188	0					
ANR	1005427	Condition	! ( op & SLJIT_KEEP_FLAGS )		1005188	0					
ANR	1005428	UnaryOperationExpression	! ( op & SLJIT_KEEP_FLAGS )		1005188	0					
ANR	1005429	UnaryOperator	!		1005188	0					
ANR	1005430	BitAndExpression	op & SLJIT_KEEP_FLAGS		1005188	1		&			
ANR	1005431	Identifier	op		1005188	0					
ANR	1005432	Identifier	SLJIT_KEEP_FLAGS		1005188	1					
ANR	1005433	PrimaryExpression	""""""		1005188	1					
ANR	1005434	PrimaryExpression	""".k"""		1005188	2					
ANR	1005435	ExpressionStatement	"sljit_verbose_param ( compiler , dst , dstw )"	1437:2:47111:47151	1005188	1	True				
ANR	1005436	CallExpression	"sljit_verbose_param ( compiler , dst , dstw )"		1005188	0					
ANR	1005437	Callee	sljit_verbose_param		1005188	0					
ANR	1005438	Identifier	sljit_verbose_param		1005188	0					
ANR	1005439	ArgumentList	compiler		1005188	1					
ANR	1005440	Argument	compiler		1005188	0					
ANR	1005441	Identifier	compiler		1005188	0					
ANR	1005442	Argument	dst		1005188	1					
ANR	1005443	Identifier	dst		1005188	0					
ANR	1005444	Argument	dstw		1005188	2					
ANR	1005445	Identifier	dstw		1005188	0					
ANR	1005446	IfStatement	if ( src != SLJIT_UNUSED )		1005188	2					
ANR	1005447	Condition	src != SLJIT_UNUSED	1438:6:47159:47177	1005188	0	True				
ANR	1005448	EqualityExpression	src != SLJIT_UNUSED		1005188	0		!=			
ANR	1005449	Identifier	src		1005188	0					
ANR	1005450	Identifier	SLJIT_UNUSED		1005188	1					
ANR	1005451	CompoundStatement		22:27:1174:1174	1005188	1					
ANR	1005452	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	1439:3:47185:47217	1005188	0	True				
ANR	1005453	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1005188	0					
ANR	1005454	Callee	fprintf		1005188	0					
ANR	1005455	Identifier	fprintf		1005188	0					
ANR	1005456	ArgumentList	compiler -> verbose		1005188	1					
ANR	1005457	Argument	compiler -> verbose		1005188	0					
ANR	1005458	PtrMemberAccess	compiler -> verbose		1005188	0					
ANR	1005459	Identifier	compiler		1005188	0					
ANR	1005460	Identifier	verbose		1005188	1					
ANR	1005461	Argument	""", """		1005188	1					
ANR	1005462	PrimaryExpression	""", """		1005188	0					
ANR	1005463	ExpressionStatement	"sljit_verbose_param ( compiler , src , srcw )"	1440:3:47222:47262	1005188	1	True				
ANR	1005464	CallExpression	"sljit_verbose_param ( compiler , src , srcw )"		1005188	0					
ANR	1005465	Callee	sljit_verbose_param		1005188	0					
ANR	1005466	Identifier	sljit_verbose_param		1005188	0					
ANR	1005467	ArgumentList	compiler		1005188	1					
ANR	1005468	Argument	compiler		1005188	0					
ANR	1005469	Identifier	compiler		1005188	0					
ANR	1005470	Argument	src		1005188	1					
ANR	1005471	Identifier	src		1005188	0					
ANR	1005472	Argument	srcw		1005188	2					
ANR	1005473	Identifier	srcw		1005188	0					
ANR	1005474	ExpressionStatement	"fprintf ( compiler -> verbose , "", %s%s\\n"" , JUMP_PREFIX ( type ) , jump_names [ type & 0xff ] )"	1442:2:47270:47352	1005188	3	True				
ANR	1005475	CallExpression	"fprintf ( compiler -> verbose , "", %s%s\\n"" , JUMP_PREFIX ( type ) , jump_names [ type & 0xff ] )"		1005188	0					
ANR	1005476	Callee	fprintf		1005188	0					
ANR	1005477	Identifier	fprintf		1005188	0					
ANR	1005478	ArgumentList	compiler -> verbose		1005188	1					
ANR	1005479	Argument	compiler -> verbose		1005188	0					
ANR	1005480	PtrMemberAccess	compiler -> verbose		1005188	0					
ANR	1005481	Identifier	compiler		1005188	0					
ANR	1005482	Identifier	verbose		1005188	1					
ANR	1005483	Argument	""", %s%s\\n"""		1005188	1					
ANR	1005484	PrimaryExpression	""", %s%s\\n"""		1005188	0					
ANR	1005485	Argument	JUMP_PREFIX ( type )		1005188	2					
ANR	1005486	CallExpression	JUMP_PREFIX ( type )		1005188	0					
ANR	1005487	Callee	JUMP_PREFIX		1005188	0					
ANR	1005488	Identifier	JUMP_PREFIX		1005188	0					
ANR	1005489	ArgumentList	type		1005188	1					
ANR	1005490	Argument	type		1005188	0					
ANR	1005491	Identifier	type		1005188	0					
ANR	1005492	Argument	jump_names [ type & 0xff ]		1005188	3					
ANR	1005493	ArrayIndexing	jump_names [ type & 0xff ]		1005188	0					
ANR	1005494	Identifier	jump_names		1005188	0					
ANR	1005495	BitAndExpression	type & 0xff		1005188	1		&			
ANR	1005496	Identifier	type		1005188	0					
ANR	1005497	PrimaryExpression	0xff		1005188	1					
ANR	1005498	ExpressionStatement	CHECK_RETURN_OK	1445:1:47365:47380	1005188	8	True				
ANR	1005499	Identifier	CHECK_RETURN_OK		1005188	0					
ANR	1005500	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1005188	1					
ANR	1005501	Identifier	check_sljit_emit_op_flags		1005188	2					
ANR	1005502	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1005188	3					
ANR	1005503	Parameter	struct sljit_compiler * compiler	1413:64:45883:45913	1005188	0	True				
ANR	1005504	ParameterType	struct sljit_compiler *		1005188	0					
ANR	1005505	Identifier	compiler		1005188	1					
ANR	1005506	Parameter	sljit_si op	1413:97:45916:45926	1005188	1	True				
ANR	1005507	ParameterType	sljit_si		1005188	0					
ANR	1005508	Identifier	op		1005188	1					
ANR	1005509	Parameter	sljit_si dst	1414:1:45930:45941	1005188	2	True				
ANR	1005510	ParameterType	sljit_si		1005188	0					
ANR	1005511	Identifier	dst		1005188	1					
ANR	1005512	Parameter	sljit_sw dstw	1414:15:45944:45956	1005188	3	True				
ANR	1005513	ParameterType	sljit_sw		1005188	0					
ANR	1005514	Identifier	dstw		1005188	1					
ANR	1005515	Parameter	sljit_si src	1415:1:45960:45971	1005188	4	True				
ANR	1005516	ParameterType	sljit_si		1005188	0					
ANR	1005517	Identifier	src		1005188	1					
ANR	1005518	Parameter	sljit_sw srcw	1415:15:45974:45986	1005188	5	True				
ANR	1005519	ParameterType	sljit_sw		1005188	0					
ANR	1005520	Identifier	srcw		1005188	1					
ANR	1005521	Parameter	sljit_si type	1416:1:45990:46002	1005188	6	True				
ANR	1005522	ParameterType	sljit_si		1005188	0					
ANR	1005523	Identifier	type		1005188	1					
ANR	1005524	CFGEntryNode	ENTRY		1005188		True				
ANR	1005525	CFGExitNode	EXIT		1005188		True				
ANR	1005526	Symbol	SLJIT_AND		1005188						
ANR	1005527	Symbol	dst		1005188						
ANR	1005528	Symbol	SLJIT_SET_O		1005188						
ANR	1005529	Symbol	SLJIT_MOV		1005188						
ANR	1005530	Symbol	op2_names		1005188						
ANR	1005531	Symbol	* SLJIT_OP1_BASE		1005188						
ANR	1005532	Symbol	SLJIT_SET_C		1005188						
ANR	1005533	Symbol	SLJIT_ADD		1005188						
ANR	1005534	Symbol	JUMP_PREFIX		1005188						
ANR	1005535	Symbol	* compiler		1005188						
ANR	1005536	Symbol	type		1005188						
ANR	1005537	Symbol	SLJIT_XOR		1005188						
ANR	1005538	Symbol	SLJIT_SET_E		1005188						
ANR	1005539	Symbol	GET_OPCODE		1005188						
ANR	1005540	Symbol	* op1_names		1005188						
ANR	1005541	Symbol	SLJIT_MOV_SI		1005188						
ANR	1005542	Symbol	SLJIT_KEEP_FLAGS		1005188						
ANR	1005543	Symbol	* type		1005188						
ANR	1005544	Symbol	jump_names		1005188						
ANR	1005545	Symbol	SLJIT_MOV_UI		1005188						
ANR	1005546	Symbol	SLJIT_SET_S		1005188						
ANR	1005547	Symbol	* GET_OPCODE		1005188						
ANR	1005548	Symbol	SLJIT_EQUAL		1005188						
ANR	1005549	Symbol	compiler		1005188						
ANR	1005550	Symbol	SLJIT_SET_U		1005188						
ANR	1005551	Symbol	op1_names		1005188						
ANR	1005552	Symbol	SLJIT_OP1_BASE		1005188						
ANR	1005553	Symbol	op		1005188						
ANR	1005554	Symbol	src		1005188						
ANR	1005555	Symbol	srcw		1005188						
ANR	1005556	Symbol	SLJIT_INT_OP		1005188						
ANR	1005557	Symbol	SLJIT_D_ORDERED		1005188						
ANR	1005558	Symbol	* SLJIT_OP2_BASE		1005188						
ANR	1005559	Symbol	* jump_names		1005188						
ANR	1005560	Symbol	SLJIT_UNUSED		1005188						
ANR	1005561	Symbol	* op2_names		1005188						
ANR	1005562	Symbol	SLJIT_OP2_BASE		1005188						
ANR	1005563	Symbol	dstw		1005188						
ANR	1005564	Symbol	SLJIT_UNLIKELY		1005188						
ANR	1005565	Symbol	compiler -> verbose		1005188						
ANR	1005566	Function	check_sljit_get_local_base	1448:0:47385:47933							
ANR	1005567	FunctionDef	"check_sljit_get_local_base (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset)"		1005566	0					
ANR	1005568	CompoundStatement		1449:0:47529:47933	1005566	0					
ANR	1005569	ExpressionStatement	SLJIT_UNUSED_ARG ( offset )	1450:1:47532:47556	1005566	0	True				
ANR	1005570	CallExpression	SLJIT_UNUSED_ARG ( offset )		1005566	0					
ANR	1005571	Callee	SLJIT_UNUSED_ARG		1005566	0					
ANR	1005572	Identifier	SLJIT_UNUSED_ARG		1005566	0					
ANR	1005573	ArgumentList	offset		1005566	1					
ANR	1005574	Argument	offset		1005566	0					
ANR	1005575	Identifier	offset		1005566	0					
ANR	1005576	ExpressionStatement	"FUNCTION_CHECK_DST ( dst , dstw )"	1453:1:47621:47650	1005566	1	True				
ANR	1005577	CallExpression	"FUNCTION_CHECK_DST ( dst , dstw )"		1005566	0					
ANR	1005578	Callee	FUNCTION_CHECK_DST		1005566	0					
ANR	1005579	Identifier	FUNCTION_CHECK_DST		1005566	0					
ANR	1005580	ArgumentList	dst		1005566	1					
ANR	1005581	Argument	dst		1005566	0					
ANR	1005582	Identifier	dst		1005566	0					
ANR	1005583	Argument	dstw		1005566	1					
ANR	1005584	Identifier	dstw		1005566	0					
ANR	1005585	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1005566	2					
ANR	1005586	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1456:5:47709:47743	1005566	0	True				
ANR	1005587	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1005566	0					
ANR	1005588	Callee	SLJIT_UNLIKELY		1005566	0					
ANR	1005589	Identifier	SLJIT_UNLIKELY		1005566	0					
ANR	1005590	ArgumentList	! ! compiler -> verbose		1005566	1					
ANR	1005591	Argument	! ! compiler -> verbose		1005566	0					
ANR	1005592	UnaryOperationExpression	! ! compiler -> verbose		1005566	0					
ANR	1005593	UnaryOperator	!		1005566	0					
ANR	1005594	UnaryOperationExpression	! compiler -> verbose		1005566	1					
ANR	1005595	UnaryOperator	!		1005566	0					
ANR	1005596	PtrMemberAccess	compiler -> verbose		1005566	1					
ANR	1005597	Identifier	compiler		1005566	0					
ANR	1005598	Identifier	verbose		1005566	1					
ANR	1005599	CompoundStatement		8:42:216:216	1005566	1					
ANR	1005600	ExpressionStatement	"fprintf ( compiler -> verbose , ""  local_base "" )"	1457:2:47750:47793	1005566	0	True				
ANR	1005601	CallExpression	"fprintf ( compiler -> verbose , ""  local_base "" )"		1005566	0					
ANR	1005602	Callee	fprintf		1005566	0					
ANR	1005603	Identifier	fprintf		1005566	0					
ANR	1005604	ArgumentList	compiler -> verbose		1005566	1					
ANR	1005605	Argument	compiler -> verbose		1005566	0					
ANR	1005606	PtrMemberAccess	compiler -> verbose		1005566	0					
ANR	1005607	Identifier	compiler		1005566	0					
ANR	1005608	Identifier	verbose		1005566	1					
ANR	1005609	Argument	"""  local_base """		1005566	1					
ANR	1005610	PrimaryExpression	"""  local_base """		1005566	0					
ANR	1005611	ExpressionStatement	"sljit_verbose_param ( compiler , dst , dstw )"	1458:2:47797:47837	1005566	1	True				
ANR	1005612	CallExpression	"sljit_verbose_param ( compiler , dst , dstw )"		1005566	0					
ANR	1005613	Callee	sljit_verbose_param		1005566	0					
ANR	1005614	Identifier	sljit_verbose_param		1005566	0					
ANR	1005615	ArgumentList	compiler		1005566	1					
ANR	1005616	Argument	compiler		1005566	0					
ANR	1005617	Identifier	compiler		1005566	0					
ANR	1005618	Argument	dst		1005566	1					
ANR	1005619	Identifier	dst		1005566	0					
ANR	1005620	Argument	dstw		1005566	2					
ANR	1005621	Identifier	dstw		1005566	0					
ANR	1005622	Statement	fprintf	1459:2:47841:47847	1005566	2	True				
ANR	1005623	Statement	(	1459:9:47848:47848	1005566	3	True				
ANR	1005624	Statement	compiler	1459:10:47849:47856	1005566	4	True				
ANR	1005625	Statement	->	1459:18:47857:47858	1005566	5	True				
ANR	1005626	Statement	verbose	1459:20:47859:47865	1005566	6	True				
ANR	1005627	Statement	","	1459:27:47866:47866	1005566	7	True				
ANR	1005628	Statement	""", #%"""	1459:29:47868:47873	1005566	8	True				
ANR	1005629	Statement	SLJIT_PRINT_D	1459:36:47875:47887	1005566	9	True				
ANR	1005630	Statement	"""d\\n"""	1459:50:47889:47893	1005566	10	True				
ANR	1005631	Statement	","	1459:55:47894:47894	1005566	11	True				
ANR	1005632	Statement	offset	1459:57:47896:47901	1005566	12	True				
ANR	1005633	Statement	)	1459:63:47902:47902	1005566	13	True				
ANR	1005634	ExpressionStatement		1459:64:47903:47903	1005566	14	True				
ANR	1005635	ExpressionStatement	CHECK_RETURN_OK	1462:1:47916:47931	1005566	3	True				
ANR	1005636	Identifier	CHECK_RETURN_OK		1005566	0					
ANR	1005637	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1005566	1					
ANR	1005638	Identifier	check_sljit_get_local_base		1005566	2					
ANR	1005639	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset"		1005566	3					
ANR	1005640	Parameter	struct sljit_compiler * compiler	1448:65:47450:47480	1005566	0	True				
ANR	1005641	ParameterType	struct sljit_compiler *		1005566	0					
ANR	1005642	Identifier	compiler		1005566	1					
ANR	1005643	Parameter	sljit_si dst	1448:98:47483:47494	1005566	1	True				
ANR	1005644	ParameterType	sljit_si		1005566	0					
ANR	1005645	Identifier	dst		1005566	1					
ANR	1005646	Parameter	sljit_sw dstw	1448:112:47497:47509	1005566	2	True				
ANR	1005647	ParameterType	sljit_sw		1005566	0					
ANR	1005648	Identifier	dstw		1005566	1					
ANR	1005649	Parameter	sljit_sw offset	1448:127:47512:47526	1005566	3	True				
ANR	1005650	ParameterType	sljit_sw		1005566	0					
ANR	1005651	Identifier	offset		1005566	1					
ANR	1005652	CFGEntryNode	ENTRY		1005566		True				
ANR	1005653	CFGExitNode	EXIT		1005566		True				
ANR	1005654	Symbol	dst		1005566						
ANR	1005655	Symbol	offset		1005566						
ANR	1005656	Symbol	* compiler		1005566						
ANR	1005657	Symbol	compiler		1005566						
ANR	1005658	Symbol	dstw		1005566						
ANR	1005659	Symbol	SLJIT_UNLIKELY		1005566						
ANR	1005660	Symbol	compiler -> verbose		1005566						
ANR	1005661	Function	check_sljit_emit_const	1465:0:47936:48487							
ANR	1005662	FunctionDef	"check_sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1005661	0					
ANR	1005663	CompoundStatement		1466:0:48080:48487	1005661	0					
ANR	1005664	ExpressionStatement	SLJIT_UNUSED_ARG ( init_value )	1467:1:48083:48111	1005661	0	True				
ANR	1005665	CallExpression	SLJIT_UNUSED_ARG ( init_value )		1005661	0					
ANR	1005666	Callee	SLJIT_UNUSED_ARG		1005661	0					
ANR	1005667	Identifier	SLJIT_UNUSED_ARG		1005661	0					
ANR	1005668	ArgumentList	init_value		1005661	1					
ANR	1005669	Argument	init_value		1005661	0					
ANR	1005670	Identifier	init_value		1005661	0					
ANR	1005671	ExpressionStatement	"FUNCTION_CHECK_DST ( dst , dstw )"	1470:1:48176:48205	1005661	1	True				
ANR	1005672	CallExpression	"FUNCTION_CHECK_DST ( dst , dstw )"		1005661	0					
ANR	1005673	Callee	FUNCTION_CHECK_DST		1005661	0					
ANR	1005674	Identifier	FUNCTION_CHECK_DST		1005661	0					
ANR	1005675	ArgumentList	dst		1005661	1					
ANR	1005676	Argument	dst		1005661	0					
ANR	1005677	Identifier	dst		1005661	0					
ANR	1005678	Argument	dstw		1005661	1					
ANR	1005679	Identifier	dstw		1005661	0					
ANR	1005680	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1005661	2					
ANR	1005681	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	1473:5:48264:48298	1005661	0	True				
ANR	1005682	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1005661	0					
ANR	1005683	Callee	SLJIT_UNLIKELY		1005661	0					
ANR	1005684	Identifier	SLJIT_UNLIKELY		1005661	0					
ANR	1005685	ArgumentList	! ! compiler -> verbose		1005661	1					
ANR	1005686	Argument	! ! compiler -> verbose		1005661	0					
ANR	1005687	UnaryOperationExpression	! ! compiler -> verbose		1005661	0					
ANR	1005688	UnaryOperator	!		1005661	0					
ANR	1005689	UnaryOperationExpression	! compiler -> verbose		1005661	1					
ANR	1005690	UnaryOperator	!		1005661	0					
ANR	1005691	PtrMemberAccess	compiler -> verbose		1005661	1					
ANR	1005692	Identifier	compiler		1005661	0					
ANR	1005693	Identifier	verbose		1005661	1					
ANR	1005694	CompoundStatement		8:42:220:220	1005661	1					
ANR	1005695	ExpressionStatement	"fprintf ( compiler -> verbose , ""  const "" )"	1474:2:48305:48343	1005661	0	True				
ANR	1005696	CallExpression	"fprintf ( compiler -> verbose , ""  const "" )"		1005661	0					
ANR	1005697	Callee	fprintf		1005661	0					
ANR	1005698	Identifier	fprintf		1005661	0					
ANR	1005699	ArgumentList	compiler -> verbose		1005661	1					
ANR	1005700	Argument	compiler -> verbose		1005661	0					
ANR	1005701	PtrMemberAccess	compiler -> verbose		1005661	0					
ANR	1005702	Identifier	compiler		1005661	0					
ANR	1005703	Identifier	verbose		1005661	1					
ANR	1005704	Argument	"""  const """		1005661	1					
ANR	1005705	PrimaryExpression	"""  const """		1005661	0					
ANR	1005706	ExpressionStatement	"sljit_verbose_param ( compiler , dst , dstw )"	1475:2:48347:48387	1005661	1	True				
ANR	1005707	CallExpression	"sljit_verbose_param ( compiler , dst , dstw )"		1005661	0					
ANR	1005708	Callee	sljit_verbose_param		1005661	0					
ANR	1005709	Identifier	sljit_verbose_param		1005661	0					
ANR	1005710	ArgumentList	compiler		1005661	1					
ANR	1005711	Argument	compiler		1005661	0					
ANR	1005712	Identifier	compiler		1005661	0					
ANR	1005713	Argument	dst		1005661	1					
ANR	1005714	Identifier	dst		1005661	0					
ANR	1005715	Argument	dstw		1005661	2					
ANR	1005716	Identifier	dstw		1005661	0					
ANR	1005717	Statement	fprintf	1476:2:48391:48397	1005661	2	True				
ANR	1005718	Statement	(	1476:9:48398:48398	1005661	3	True				
ANR	1005719	Statement	compiler	1476:10:48399:48406	1005661	4	True				
ANR	1005720	Statement	->	1476:18:48407:48408	1005661	5	True				
ANR	1005721	Statement	verbose	1476:20:48409:48415	1005661	6	True				
ANR	1005722	Statement	","	1476:27:48416:48416	1005661	7	True				
ANR	1005723	Statement	""", #%"""	1476:29:48418:48423	1005661	8	True				
ANR	1005724	Statement	SLJIT_PRINT_D	1476:36:48425:48437	1005661	9	True				
ANR	1005725	Statement	"""d\\n"""	1476:50:48439:48443	1005661	10	True				
ANR	1005726	Statement	","	1476:55:48444:48444	1005661	11	True				
ANR	1005727	Statement	init_value	1476:57:48446:48455	1005661	12	True				
ANR	1005728	Statement	)	1476:67:48456:48456	1005661	13	True				
ANR	1005729	ExpressionStatement		1476:68:48457:48457	1005661	14	True				
ANR	1005730	ExpressionStatement	CHECK_RETURN_OK	1479:1:48470:48485	1005661	3	True				
ANR	1005731	Identifier	CHECK_RETURN_OK		1005661	0					
ANR	1005732	ReturnType	static SLJIT_INLINE CHECK_RETURN_TYPE		1005661	1					
ANR	1005733	Identifier	check_sljit_emit_const		1005661	2					
ANR	1005734	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1005661	3					
ANR	1005735	Parameter	struct sljit_compiler * compiler	1465:61:47997:48027	1005661	0	True				
ANR	1005736	ParameterType	struct sljit_compiler *		1005661	0					
ANR	1005737	Identifier	compiler		1005661	1					
ANR	1005738	Parameter	sljit_si dst	1465:94:48030:48041	1005661	1	True				
ANR	1005739	ParameterType	sljit_si		1005661	0					
ANR	1005740	Identifier	dst		1005661	1					
ANR	1005741	Parameter	sljit_sw dstw	1465:108:48044:48056	1005661	2	True				
ANR	1005742	ParameterType	sljit_sw		1005661	0					
ANR	1005743	Identifier	dstw		1005661	1					
ANR	1005744	Parameter	sljit_sw init_value	1465:123:48059:48077	1005661	3	True				
ANR	1005745	ParameterType	sljit_sw		1005661	0					
ANR	1005746	Identifier	init_value		1005661	1					
ANR	1005747	CFGEntryNode	ENTRY		1005661		True				
ANR	1005748	CFGExitNode	EXIT		1005661		True				
ANR	1005749	Symbol	dst		1005661						
ANR	1005750	Symbol	* compiler		1005661						
ANR	1005751	Symbol	compiler		1005661						
ANR	1005752	Symbol	init_value		1005661						
ANR	1005753	Symbol	dstw		1005661						
ANR	1005754	Symbol	SLJIT_UNLIKELY		1005661						
ANR	1005755	Symbol	compiler -> verbose		1005661						
ANR	1005756	Function	emit_mov_before_return	1509:0:49743:50594							
ANR	1005757	FunctionDef	"emit_mov_before_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1005756	0					
ANR	1005758	CompoundStatement		1510:0:49870:50594	1005756	0					
ANR	1005759	IfStatement	if ( op == SLJIT_UNUSED )		1005756	0					
ANR	1005760	Condition	op == SLJIT_UNUSED	1512:5:49921:49938	1005756	0	True				
ANR	1005761	EqualityExpression	op == SLJIT_UNUSED		1005756	0		==			
ANR	1005762	Identifier	op		1005756	0					
ANR	1005763	Identifier	SLJIT_UNUSED		1005756	1					
ANR	1005764	ReturnStatement	return SLJIT_SUCCESS ;	1513:2:49943:49963	1005756	1	True				
ANR	1005765	Identifier	SLJIT_SUCCESS		1005756	0					
ANR	1005766	IfStatement	if ( src == SLJIT_RETURN_REG && ( op == SLJIT_MOV || op == SLJIT_MOV_P ) )		1005756	1					
ANR	1005767	Condition	src == SLJIT_RETURN_REG && ( op == SLJIT_MOV || op == SLJIT_MOV_P )	1517:5:50135:50199	1005756	0	True				
ANR	1005768	AndExpression	src == SLJIT_RETURN_REG && ( op == SLJIT_MOV || op == SLJIT_MOV_P )		1005756	0		&&			
ANR	1005769	EqualityExpression	src == SLJIT_RETURN_REG		1005756	0		==			
ANR	1005770	Identifier	src		1005756	0					
ANR	1005771	Identifier	SLJIT_RETURN_REG		1005756	1					
ANR	1005772	OrExpression	op == SLJIT_MOV || op == SLJIT_MOV_P		1005756	1		||			
ANR	1005773	EqualityExpression	op == SLJIT_MOV		1005756	0		==			
ANR	1005774	Identifier	op		1005756	0					
ANR	1005775	Identifier	SLJIT_MOV		1005756	1					
ANR	1005776	EqualityExpression	op == SLJIT_MOV_P		1005756	1		==			
ANR	1005777	Identifier	op		1005756	0					
ANR	1005778	Identifier	SLJIT_MOV_P		1005756	1					
ANR	1005779	ReturnStatement	return SLJIT_SUCCESS ;	1518:2:50204:50224	1005756	1	True				
ANR	1005780	Identifier	SLJIT_SUCCESS		1005756	0					
ANR	1005781	Statement	||	1525:2:50445:50446	1005756	2	True				
ANR	1005782	Statement	(	1525:5:50448:50448	1005756	3	True				
ANR	1005783	Statement	defined	1525:6:50449:50455	1005756	4	True				
ANR	1005784	Statement	SLJIT_VERBOSE	1525:14:50457:50469	1005756	5	True				
ANR	1005785	Statement	&&	1525:28:50471:50472	1005756	6	True				
ANR	1005786	Statement	SLJIT_VERBOSE	1525:31:50474:50486	1005756	7	True				
ANR	1005787	Statement	)	1525:44:50487:50487	1005756	8	True				
ANR	1005788	ExpressionStatement	compiler -> skip_checks = 1	1526:1:50490:50515	1005756	9	True				
ANR	1005789	AssignmentExpression	compiler -> skip_checks = 1		1005756	0		=			
ANR	1005790	PtrMemberAccess	compiler -> skip_checks		1005756	0					
ANR	1005791	Identifier	compiler		1005756	0					
ANR	1005792	Identifier	skip_checks		1005756	1					
ANR	1005793	PrimaryExpression	1		1005756	1					
ANR	1005794	ReturnStatement	"return sljit_emit_op1 ( compiler , op , SLJIT_RETURN_REG , 0 , src , srcw ) ;"	1528:1:50525:50592	1005756	10	True				
ANR	1005795	CallExpression	"sljit_emit_op1 ( compiler , op , SLJIT_RETURN_REG , 0 , src , srcw )"		1005756	0					
ANR	1005796	Callee	sljit_emit_op1		1005756	0					
ANR	1005797	Identifier	sljit_emit_op1		1005756	0					
ANR	1005798	ArgumentList	compiler		1005756	1					
ANR	1005799	Argument	compiler		1005756	0					
ANR	1005800	Identifier	compiler		1005756	0					
ANR	1005801	Argument	op		1005756	1					
ANR	1005802	Identifier	op		1005756	0					
ANR	1005803	Argument	SLJIT_RETURN_REG		1005756	2					
ANR	1005804	Identifier	SLJIT_RETURN_REG		1005756	0					
ANR	1005805	Argument	0		1005756	3					
ANR	1005806	PrimaryExpression	0		1005756	0					
ANR	1005807	Argument	src		1005756	4					
ANR	1005808	Identifier	src		1005756	0					
ANR	1005809	Argument	srcw		1005756	5					
ANR	1005810	Identifier	srcw		1005756	0					
ANR	1005811	ReturnType	static SLJIT_INLINE sljit_si		1005756	1					
ANR	1005812	Identifier	emit_mov_before_return		1005756	2					
ANR	1005813	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1005756	3					
ANR	1005814	Parameter	struct sljit_compiler * compiler	1509:52:49795:49825	1005756	0	True				
ANR	1005815	ParameterType	struct sljit_compiler *		1005756	0					
ANR	1005816	Identifier	compiler		1005756	1					
ANR	1005817	Parameter	sljit_si op	1509:85:49828:49838	1005756	1	True				
ANR	1005818	ParameterType	sljit_si		1005756	0					
ANR	1005819	Identifier	op		1005756	1					
ANR	1005820	Parameter	sljit_si src	1509:98:49841:49852	1005756	2	True				
ANR	1005821	ParameterType	sljit_si		1005756	0					
ANR	1005822	Identifier	src		1005756	1					
ANR	1005823	Parameter	sljit_sw srcw	1509:112:49855:49867	1005756	3	True				
ANR	1005824	ParameterType	sljit_sw		1005756	0					
ANR	1005825	Identifier	srcw		1005756	1					
ANR	1005826	CFGEntryNode	ENTRY		1005756		True				
ANR	1005827	CFGExitNode	EXIT		1005756		True				
ANR	1005828	Symbol	op		1005756						
ANR	1005829	Symbol	SLJIT_UNUSED		1005756						
ANR	1005830	Symbol	src		1005756						
ANR	1005831	Symbol	SLJIT_MOV		1005756						
ANR	1005832	Symbol	srcw		1005756						
ANR	1005833	Symbol	compiler -> skip_checks		1005756						
ANR	1005834	Symbol	SLJIT_MOV_P		1005756						
ANR	1005835	Symbol	SLJIT_RETURN_REG		1005756						
ANR	1005836	Symbol	SLJIT_SUCCESS		1005756						
ANR	1005837	Symbol	* compiler		1005756						
ANR	1005838	Symbol	compiler		1005756						
ANR	1005839	Symbol	sljit_emit_op1		1005756						
ANR	1005840	Function	sljit_emit_cmp	1579:25:52311:54567							
ANR	1005841	FunctionDef	"sljit_emit_cmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1005840	0					
ANR	1005842	CompoundStatement		1582:0:52457:54567	1005840	0					
ANR	1005843	IdentifierDeclStatement	"sljit_si flags , tmp_src , condition ;"	1584:1:52507:52541	1005840	0	True				
ANR	1005844	IdentifierDecl	flags		1005840	0					
ANR	1005845	IdentifierDeclType	sljit_si		1005840	0					
ANR	1005846	Identifier	flags		1005840	1					
ANR	1005847	IdentifierDecl	tmp_src		1005840	1					
ANR	1005848	IdentifierDeclType	sljit_si		1005840	0					
ANR	1005849	Identifier	tmp_src		1005840	1					
ANR	1005850	IdentifierDecl	condition		1005840	2					
ANR	1005851	IdentifierDeclType	sljit_si		1005840	0					
ANR	1005852	Identifier	condition		1005840	1					
ANR	1005853	IdentifierDeclStatement	sljit_sw tmp_srcw ;	1585:1:52544:52561	1005840	1	True				
ANR	1005854	IdentifierDecl	tmp_srcw		1005840	0					
ANR	1005855	IdentifierDeclType	sljit_sw		1005840	0					
ANR	1005856	Identifier	tmp_srcw		1005840	1					
ANR	1005857	ExpressionStatement	CHECK_ERROR_PTR ( )	1587:1:52565:52582	1005840	2	True				
ANR	1005858	CallExpression	CHECK_ERROR_PTR ( )		1005840	0					
ANR	1005859	Callee	CHECK_ERROR_PTR		1005840	0					
ANR	1005860	Identifier	CHECK_ERROR_PTR		1005840	0					
ANR	1005861	ArgumentList			1005840	1					
ANR	1005862	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w ) )"	1588:1:52585:52658	1005840	3	True				
ANR	1005863	CallExpression	"CHECK_PTR ( check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w ) )"		1005840	0					
ANR	1005864	Callee	CHECK_PTR		1005840	0					
ANR	1005865	Identifier	CHECK_PTR		1005840	0					
ANR	1005866	ArgumentList	"check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w )"		1005840	1					
ANR	1005867	Argument	"check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w )"		1005840	0					
ANR	1005868	CallExpression	"check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w )"		1005840	0					
ANR	1005869	Callee	check_sljit_emit_cmp		1005840	0					
ANR	1005870	Identifier	check_sljit_emit_cmp		1005840	0					
ANR	1005871	ArgumentList	compiler		1005840	1					
ANR	1005872	Argument	compiler		1005840	0					
ANR	1005873	Identifier	compiler		1005840	0					
ANR	1005874	Argument	type		1005840	1					
ANR	1005875	Identifier	type		1005840	0					
ANR	1005876	Argument	src1		1005840	2					
ANR	1005877	Identifier	src1		1005840	0					
ANR	1005878	Argument	src1w		1005840	3					
ANR	1005879	Identifier	src1w		1005840	0					
ANR	1005880	Argument	src2		1005840	4					
ANR	1005881	Identifier	src2		1005840	0					
ANR	1005882	Argument	src2w		1005840	5					
ANR	1005883	Identifier	src2w		1005840	0					
ANR	1005884	ExpressionStatement	condition = type & 0xff	1590:1:52662:52685	1005840	4	True				
ANR	1005885	AssignmentExpression	condition = type & 0xff		1005840	0		=			
ANR	1005886	Identifier	condition		1005840	0					
ANR	1005887	BitAndExpression	type & 0xff		1005840	1		&			
ANR	1005888	Identifier	type		1005840	0					
ANR	1005889	PrimaryExpression	0xff		1005840	1					
ANR	1005890	IfStatement	if ( ( condition == SLJIT_EQUAL || condition == SLJIT_NOT_EQUAL ) )		1005840	5					
ANR	1005891	Condition	condition == SLJIT_EQUAL || condition == SLJIT_NOT_EQUAL	1592:5:52749:52806	1005840	0	True				
ANR	1005892	OrExpression	condition == SLJIT_EQUAL || condition == SLJIT_NOT_EQUAL		1005840	0		||			
ANR	1005893	EqualityExpression	condition == SLJIT_EQUAL		1005840	0		==			
ANR	1005894	Identifier	condition		1005840	0					
ANR	1005895	Identifier	SLJIT_EQUAL		1005840	1					
ANR	1005896	EqualityExpression	condition == SLJIT_NOT_EQUAL		1005840	1		==			
ANR	1005897	Identifier	condition		1005840	0					
ANR	1005898	Identifier	SLJIT_NOT_EQUAL		1005840	1					
ANR	1005899	CompoundStatement		11:65:351:351	1005840	1					
ANR	1005900	IfStatement	if ( ( src1 & SLJIT_IMM ) && ! src1w )		1005840	0					
ANR	1005901	Condition	( src1 & SLJIT_IMM ) && ! src1w	1593:6:52817:52844	1005840	0	True				
ANR	1005902	AndExpression	( src1 & SLJIT_IMM ) && ! src1w		1005840	0		&&			
ANR	1005903	BitAndExpression	src1 & SLJIT_IMM		1005840	0		&			
ANR	1005904	Identifier	src1		1005840	0					
ANR	1005905	Identifier	SLJIT_IMM		1005840	1					
ANR	1005906	UnaryOperationExpression	! src1w		1005840	1					
ANR	1005907	UnaryOperator	!		1005840	0					
ANR	1005908	Identifier	src1w		1005840	1					
ANR	1005909	CompoundStatement		12:36:389:389	1005840	1					
ANR	1005910	ExpressionStatement	src1 = src2	1594:3:52852:52863	1005840	0	True				
ANR	1005911	AssignmentExpression	src1 = src2		1005840	0		=			
ANR	1005912	Identifier	src1		1005840	0					
ANR	1005913	Identifier	src2		1005840	1					
ANR	1005914	ExpressionStatement	src1w = src2w	1595:3:52868:52881	1005840	1	True				
ANR	1005915	AssignmentExpression	src1w = src2w		1005840	0		=			
ANR	1005916	Identifier	src1w		1005840	0					
ANR	1005917	Identifier	src2w		1005840	1					
ANR	1005918	ExpressionStatement	src2 = SLJIT_IMM	1596:3:52886:52902	1005840	2	True				
ANR	1005919	AssignmentExpression	src2 = SLJIT_IMM		1005840	0		=			
ANR	1005920	Identifier	src2		1005840	0					
ANR	1005921	Identifier	SLJIT_IMM		1005840	1					
ANR	1005922	ExpressionStatement	src2w = 0	1597:3:52907:52916	1005840	3	True				
ANR	1005923	AssignmentExpression	src2w = 0		1005840	0		=			
ANR	1005924	Identifier	src2w		1005840	0					
ANR	1005925	PrimaryExpression	0		1005840	1					
ANR	1005926	IfStatement	if ( ( src2 & SLJIT_IMM ) && ! src2w )		1005840	1					
ANR	1005927	Condition	( src2 & SLJIT_IMM ) && ! src2w	1599:6:52928:52955	1005840	0	True				
ANR	1005928	AndExpression	( src2 & SLJIT_IMM ) && ! src2w		1005840	0		&&			
ANR	1005929	BitAndExpression	src2 & SLJIT_IMM		1005840	0		&			
ANR	1005930	Identifier	src2		1005840	0					
ANR	1005931	Identifier	SLJIT_IMM		1005840	1					
ANR	1005932	UnaryOperationExpression	! src2w		1005840	1					
ANR	1005933	UnaryOperator	!		1005840	0					
ANR	1005934	Identifier	src2w		1005840	1					
ANR	1005935	ReturnStatement	"return emit_cmp_to0 ( compiler , type , src1 , src1w ) ;"	1600:3:52961:53009	1005840	1	True				
ANR	1005936	CallExpression	"emit_cmp_to0 ( compiler , type , src1 , src1w )"		1005840	0					
ANR	1005937	Callee	emit_cmp_to0		1005840	0					
ANR	1005938	Identifier	emit_cmp_to0		1005840	0					
ANR	1005939	ArgumentList	compiler		1005840	1					
ANR	1005940	Argument	compiler		1005840	0					
ANR	1005941	Identifier	compiler		1005840	0					
ANR	1005942	Argument	type		1005840	1					
ANR	1005943	Identifier	type		1005840	0					
ANR	1005944	Argument	src1		1005840	2					
ANR	1005945	Identifier	src1		1005840	0					
ANR	1005946	Argument	src1w		1005840	3					
ANR	1005947	Identifier	src1w		1005840	0					
ANR	1005948	IfStatement	if ( SLJIT_UNLIKELY ( ( src1 & SLJIT_IMM ) && ! ( src2 & SLJIT_IMM ) ) )		1005840	6					
ANR	1005949	Condition	SLJIT_UNLIKELY ( ( src1 & SLJIT_IMM ) && ! ( src2 & SLJIT_IMM ) )	1604:5:53027:53083	1005840	0	True				
ANR	1005950	CallExpression	SLJIT_UNLIKELY ( ( src1 & SLJIT_IMM ) && ! ( src2 & SLJIT_IMM ) )		1005840	0					
ANR	1005951	Callee	SLJIT_UNLIKELY		1005840	0					
ANR	1005952	Identifier	SLJIT_UNLIKELY		1005840	0					
ANR	1005953	ArgumentList	( src1 & SLJIT_IMM ) && ! ( src2 & SLJIT_IMM )		1005840	1					
ANR	1005954	Argument	( src1 & SLJIT_IMM ) && ! ( src2 & SLJIT_IMM )		1005840	0					
ANR	1005955	AndExpression	( src1 & SLJIT_IMM ) && ! ( src2 & SLJIT_IMM )		1005840	0		&&			
ANR	1005956	BitAndExpression	src1 & SLJIT_IMM		1005840	0		&			
ANR	1005957	Identifier	src1		1005840	0					
ANR	1005958	Identifier	SLJIT_IMM		1005840	1					
ANR	1005959	UnaryOperationExpression	! ( src2 & SLJIT_IMM )		1005840	1					
ANR	1005960	UnaryOperator	!		1005840	0					
ANR	1005961	BitAndExpression	src2 & SLJIT_IMM		1005840	1		&			
ANR	1005962	Identifier	src2		1005840	0					
ANR	1005963	Identifier	SLJIT_IMM		1005840	1					
ANR	1005964	CompoundStatement		23:64:628:628	1005840	1					
ANR	1005965	SwitchStatement	switch ( condition )		1005840	0					
ANR	1005966	Condition	condition	1606:10:53170:53178	1005840	0	True				
ANR	1005967	Identifier	condition		1005840	0					
ANR	1005968	CompoundStatement		25:21:723:723	1005840	1					
ANR	1005969	Label	case SLJIT_LESS :	1607:2:53185:53200	1005840	0	True				
ANR	1005970	Identifier	SLJIT_LESS		1005840	0					
ANR	1005971	ExpressionStatement	condition = SLJIT_GREATER	1608:3:53205:53230	1005840	1	True				
ANR	1005972	AssignmentExpression	condition = SLJIT_GREATER		1005840	0		=			
ANR	1005973	Identifier	condition		1005840	0					
ANR	1005974	Identifier	SLJIT_GREATER		1005840	1					
ANR	1005975	BreakStatement	break ;	1609:3:53235:53240	1005840	2	True				
ANR	1005976	Label	case SLJIT_GREATER_EQUAL :	1610:2:53244:53268	1005840	3	True				
ANR	1005977	Identifier	SLJIT_GREATER_EQUAL		1005840	0					
ANR	1005978	ExpressionStatement	condition = SLJIT_LESS_EQUAL	1611:3:53273:53301	1005840	4	True				
ANR	1005979	AssignmentExpression	condition = SLJIT_LESS_EQUAL		1005840	0		=			
ANR	1005980	Identifier	condition		1005840	0					
ANR	1005981	Identifier	SLJIT_LESS_EQUAL		1005840	1					
ANR	1005982	BreakStatement	break ;	1612:3:53306:53311	1005840	5	True				
ANR	1005983	Label	case SLJIT_GREATER :	1613:2:53315:53333	1005840	6	True				
ANR	1005984	Identifier	SLJIT_GREATER		1005840	0					
ANR	1005985	ExpressionStatement	condition = SLJIT_LESS	1614:3:53338:53360	1005840	7	True				
ANR	1005986	AssignmentExpression	condition = SLJIT_LESS		1005840	0		=			
ANR	1005987	Identifier	condition		1005840	0					
ANR	1005988	Identifier	SLJIT_LESS		1005840	1					
ANR	1005989	BreakStatement	break ;	1615:3:53365:53370	1005840	8	True				
ANR	1005990	Label	case SLJIT_LESS_EQUAL :	1616:2:53374:53395	1005840	9	True				
ANR	1005991	Identifier	SLJIT_LESS_EQUAL		1005840	0					
ANR	1005992	ExpressionStatement	condition = SLJIT_GREATER_EQUAL	1617:3:53400:53431	1005840	10	True				
ANR	1005993	AssignmentExpression	condition = SLJIT_GREATER_EQUAL		1005840	0		=			
ANR	1005994	Identifier	condition		1005840	0					
ANR	1005995	Identifier	SLJIT_GREATER_EQUAL		1005840	1					
ANR	1005996	BreakStatement	break ;	1618:3:53436:53441	1005840	11	True				
ANR	1005997	Label	case SLJIT_SIG_LESS :	1619:2:53445:53464	1005840	12	True				
ANR	1005998	Identifier	SLJIT_SIG_LESS		1005840	0					
ANR	1005999	ExpressionStatement	condition = SLJIT_SIG_GREATER	1620:3:53469:53498	1005840	13	True				
ANR	1006000	AssignmentExpression	condition = SLJIT_SIG_GREATER		1005840	0		=			
ANR	1006001	Identifier	condition		1005840	0					
ANR	1006002	Identifier	SLJIT_SIG_GREATER		1005840	1					
ANR	1006003	BreakStatement	break ;	1621:3:53503:53508	1005840	14	True				
ANR	1006004	Label	case SLJIT_SIG_GREATER_EQUAL :	1622:2:53512:53540	1005840	15	True				
ANR	1006005	Identifier	SLJIT_SIG_GREATER_EQUAL		1005840	0					
ANR	1006006	ExpressionStatement	condition = SLJIT_SIG_LESS_EQUAL	1623:3:53545:53577	1005840	16	True				
ANR	1006007	AssignmentExpression	condition = SLJIT_SIG_LESS_EQUAL		1005840	0		=			
ANR	1006008	Identifier	condition		1005840	0					
ANR	1006009	Identifier	SLJIT_SIG_LESS_EQUAL		1005840	1					
ANR	1006010	BreakStatement	break ;	1624:3:53582:53587	1005840	17	True				
ANR	1006011	Label	case SLJIT_SIG_GREATER :	1625:2:53591:53613	1005840	18	True				
ANR	1006012	Identifier	SLJIT_SIG_GREATER		1005840	0					
ANR	1006013	ExpressionStatement	condition = SLJIT_SIG_LESS	1626:3:53618:53644	1005840	19	True				
ANR	1006014	AssignmentExpression	condition = SLJIT_SIG_LESS		1005840	0		=			
ANR	1006015	Identifier	condition		1005840	0					
ANR	1006016	Identifier	SLJIT_SIG_LESS		1005840	1					
ANR	1006017	BreakStatement	break ;	1627:3:53649:53654	1005840	20	True				
ANR	1006018	Label	case SLJIT_SIG_LESS_EQUAL :	1628:2:53658:53683	1005840	21	True				
ANR	1006019	Identifier	SLJIT_SIG_LESS_EQUAL		1005840	0					
ANR	1006020	ExpressionStatement	condition = SLJIT_SIG_GREATER_EQUAL	1629:3:53688:53723	1005840	22	True				
ANR	1006021	AssignmentExpression	condition = SLJIT_SIG_GREATER_EQUAL		1005840	0		=			
ANR	1006022	Identifier	condition		1005840	0					
ANR	1006023	Identifier	SLJIT_SIG_GREATER_EQUAL		1005840	1					
ANR	1006024	BreakStatement	break ;	1630:3:53728:53733	1005840	23	True				
ANR	1006025	ExpressionStatement	type = condition | ( type & ( SLJIT_INT_OP | SLJIT_REWRITABLE_JUMP ) )	1632:2:53741:53807	1005840	1	True				
ANR	1006026	AssignmentExpression	type = condition | ( type & ( SLJIT_INT_OP | SLJIT_REWRITABLE_JUMP ) )		1005840	0		=			
ANR	1006027	Identifier	type		1005840	0					
ANR	1006028	InclusiveOrExpression	condition | ( type & ( SLJIT_INT_OP | SLJIT_REWRITABLE_JUMP ) )		1005840	1		|			
ANR	1006029	Identifier	condition		1005840	0					
ANR	1006030	BitAndExpression	type & ( SLJIT_INT_OP | SLJIT_REWRITABLE_JUMP )		1005840	1		&			
ANR	1006031	Identifier	type		1005840	0					
ANR	1006032	InclusiveOrExpression	SLJIT_INT_OP | SLJIT_REWRITABLE_JUMP		1005840	1		|			
ANR	1006033	Identifier	SLJIT_INT_OP		1005840	0					
ANR	1006034	Identifier	SLJIT_REWRITABLE_JUMP		1005840	1					
ANR	1006035	ExpressionStatement	tmp_src = src1	1633:2:53811:53825	1005840	2	True				
ANR	1006036	AssignmentExpression	tmp_src = src1		1005840	0		=			
ANR	1006037	Identifier	tmp_src		1005840	0					
ANR	1006038	Identifier	src1		1005840	1					
ANR	1006039	ExpressionStatement	src1 = src2	1634:2:53829:53840	1005840	3	True				
ANR	1006040	AssignmentExpression	src1 = src2		1005840	0		=			
ANR	1006041	Identifier	src1		1005840	0					
ANR	1006042	Identifier	src2		1005840	1					
ANR	1006043	ExpressionStatement	src2 = tmp_src	1635:2:53844:53858	1005840	4	True				
ANR	1006044	AssignmentExpression	src2 = tmp_src		1005840	0		=			
ANR	1006045	Identifier	src2		1005840	0					
ANR	1006046	Identifier	tmp_src		1005840	1					
ANR	1006047	ExpressionStatement	tmp_srcw = src1w	1636:2:53862:53878	1005840	5	True				
ANR	1006048	AssignmentExpression	tmp_srcw = src1w		1005840	0		=			
ANR	1006049	Identifier	tmp_srcw		1005840	0					
ANR	1006050	Identifier	src1w		1005840	1					
ANR	1006051	ExpressionStatement	src1w = src2w	1637:2:53882:53895	1005840	6	True				
ANR	1006052	AssignmentExpression	src1w = src2w		1005840	0		=			
ANR	1006053	Identifier	src1w		1005840	0					
ANR	1006054	Identifier	src2w		1005840	1					
ANR	1006055	ExpressionStatement	src2w = tmp_srcw	1638:2:53899:53915	1005840	7	True				
ANR	1006056	AssignmentExpression	src2w = tmp_srcw		1005840	0		=			
ANR	1006057	Identifier	src2w		1005840	0					
ANR	1006058	Identifier	tmp_srcw		1005840	1					
ANR	1006059	IfStatement	if ( condition <= SLJIT_NOT_ZERO )		1005840	7					
ANR	1006060	Condition	condition <= SLJIT_NOT_ZERO	1641:5:53926:53952	1005840	0	True				
ANR	1006061	RelationalExpression	condition <= SLJIT_NOT_ZERO		1005840	0		<=			
ANR	1006062	Identifier	condition		1005840	0					
ANR	1006063	Identifier	SLJIT_NOT_ZERO		1005840	1					
ANR	1006064	ExpressionStatement	flags = SLJIT_SET_E	1642:2:53957:53976	1005840	1	True				
ANR	1006065	AssignmentExpression	flags = SLJIT_SET_E		1005840	0		=			
ANR	1006066	Identifier	flags		1005840	0					
ANR	1006067	Identifier	SLJIT_SET_E		1005840	1					
ANR	1006068	ElseStatement	else		1005840	0					
ANR	1006069	IfStatement	if ( condition <= SLJIT_LESS_EQUAL )		1005840	0					
ANR	1006070	Condition	condition <= SLJIT_LESS_EQUAL	1643:10:53988:54016	1005840	0	True				
ANR	1006071	RelationalExpression	condition <= SLJIT_LESS_EQUAL		1005840	0		<=			
ANR	1006072	Identifier	condition		1005840	0					
ANR	1006073	Identifier	SLJIT_LESS_EQUAL		1005840	1					
ANR	1006074	ExpressionStatement	flags = SLJIT_SET_U	1644:2:54021:54040	1005840	1	True				
ANR	1006075	AssignmentExpression	flags = SLJIT_SET_U		1005840	0		=			
ANR	1006076	Identifier	flags		1005840	0					
ANR	1006077	Identifier	SLJIT_SET_U		1005840	1					
ANR	1006078	ElseStatement	else		1005840	0					
ANR	1006079	ExpressionStatement	flags = SLJIT_SET_S	1646:2:54050:54069	1005840	0	True				
ANR	1006080	AssignmentExpression	flags = SLJIT_SET_S		1005840	0		=			
ANR	1006081	Identifier	flags		1005840	0					
ANR	1006082	Identifier	SLJIT_SET_S		1005840	1					
ANR	1006083	Statement	||	1649:2:54121:54122	1005840	8	True				
ANR	1006084	Statement	(	1649:5:54124:54124	1005840	9	True				
ANR	1006085	Statement	defined	1649:6:54125:54131	1005840	10	True				
ANR	1006086	Statement	SLJIT_ARGUMENT_CHECKS	1649:14:54133:54153	1005840	11	True				
ANR	1006087	Statement	&&	1649:36:54155:54156	1005840	12	True				
ANR	1006088	Statement	SLJIT_ARGUMENT_CHECKS	1649:39:54158:54178	1005840	13	True				
ANR	1006089	Statement	)	1649:60:54179:54179	1005840	14	True				
ANR	1006090	ExpressionStatement	compiler -> skip_checks = 1	1650:1:54182:54207	1005840	15	True				
ANR	1006091	AssignmentExpression	compiler -> skip_checks = 1		1005840	0		=			
ANR	1006092	PtrMemberAccess	compiler -> skip_checks		1005840	0					
ANR	1006093	Identifier	compiler		1005840	0					
ANR	1006094	Identifier	skip_checks		1005840	1					
ANR	1006095	PrimaryExpression	1		1005840	1					
ANR	1006096	ExpressionStatement	"PTR_FAIL_IF ( sljit_emit_op2 ( compiler , SLJIT_SUB | flags | ( type & SLJIT_INT_OP ) , SLJIT_UNUSED , 0 , src1 , src1w , src2 , src2w ) )"	1652:1:54217:54342	1005840	16	True				
ANR	1006097	CallExpression	"PTR_FAIL_IF ( sljit_emit_op2 ( compiler , SLJIT_SUB | flags | ( type & SLJIT_INT_OP ) , SLJIT_UNUSED , 0 , src1 , src1w , src2 , src2w ) )"		1005840	0					
ANR	1006098	Callee	PTR_FAIL_IF		1005840	0					
ANR	1006099	Identifier	PTR_FAIL_IF		1005840	0					
ANR	1006100	ArgumentList	"sljit_emit_op2 ( compiler , SLJIT_SUB | flags | ( type & SLJIT_INT_OP ) , SLJIT_UNUSED , 0 , src1 , src1w , src2 , src2w )"		1005840	1					
ANR	1006101	Argument	"sljit_emit_op2 ( compiler , SLJIT_SUB | flags | ( type & SLJIT_INT_OP ) , SLJIT_UNUSED , 0 , src1 , src1w , src2 , src2w )"		1005840	0					
ANR	1006102	CallExpression	"sljit_emit_op2 ( compiler , SLJIT_SUB | flags | ( type & SLJIT_INT_OP ) , SLJIT_UNUSED , 0 , src1 , src1w , src2 , src2w )"		1005840	0					
ANR	1006103	Callee	sljit_emit_op2		1005840	0					
ANR	1006104	Identifier	sljit_emit_op2		1005840	0					
ANR	1006105	ArgumentList	compiler		1005840	1					
ANR	1006106	Argument	compiler		1005840	0					
ANR	1006107	Identifier	compiler		1005840	0					
ANR	1006108	Argument	SLJIT_SUB | flags | ( type & SLJIT_INT_OP )		1005840	1					
ANR	1006109	InclusiveOrExpression	SLJIT_SUB | flags | ( type & SLJIT_INT_OP )		1005840	0		|			
ANR	1006110	Identifier	SLJIT_SUB		1005840	0					
ANR	1006111	InclusiveOrExpression	flags | ( type & SLJIT_INT_OP )		1005840	1		|			
ANR	1006112	Identifier	flags		1005840	0					
ANR	1006113	BitAndExpression	type & SLJIT_INT_OP		1005840	1		&			
ANR	1006114	Identifier	type		1005840	0					
ANR	1006115	Identifier	SLJIT_INT_OP		1005840	1					
ANR	1006116	Argument	SLJIT_UNUSED		1005840	2					
ANR	1006117	Identifier	SLJIT_UNUSED		1005840	0					
ANR	1006118	Argument	0		1005840	3					
ANR	1006119	PrimaryExpression	0		1005840	0					
ANR	1006120	Argument	src1		1005840	4					
ANR	1006121	Identifier	src1		1005840	0					
ANR	1006122	Argument	src1w		1005840	5					
ANR	1006123	Identifier	src1w		1005840	0					
ANR	1006124	Argument	src2		1005840	6					
ANR	1006125	Identifier	src2		1005840	0					
ANR	1006126	Argument	src2w		1005840	7					
ANR	1006127	Identifier	src2w		1005840	0					
ANR	1006128	Statement	||	1655:2:54393:54394	1005840	17	True				
ANR	1006129	Statement	(	1655:5:54396:54396	1005840	18	True				
ANR	1006130	Statement	defined	1655:6:54397:54403	1005840	19	True				
ANR	1006131	Statement	SLJIT_ARGUMENT_CHECKS	1655:14:54405:54425	1005840	20	True				
ANR	1006132	Statement	&&	1655:36:54427:54428	1005840	21	True				
ANR	1006133	Statement	SLJIT_ARGUMENT_CHECKS	1655:39:54430:54450	1005840	22	True				
ANR	1006134	Statement	)	1655:60:54451:54451	1005840	23	True				
ANR	1006135	ExpressionStatement	compiler -> skip_checks = 1	1656:1:54454:54479	1005840	24	True				
ANR	1006136	AssignmentExpression	compiler -> skip_checks = 1		1005840	0		=			
ANR	1006137	PtrMemberAccess	compiler -> skip_checks		1005840	0					
ANR	1006138	Identifier	compiler		1005840	0					
ANR	1006139	Identifier	skip_checks		1005840	1					
ANR	1006140	PrimaryExpression	1		1005840	1					
ANR	1006141	ReturnStatement	"return sljit_emit_jump ( compiler , condition | ( type & SLJIT_REWRITABLE_JUMP ) ) ;"	1658:1:54489:54565	1005840	25	True				
ANR	1006142	CallExpression	"sljit_emit_jump ( compiler , condition | ( type & SLJIT_REWRITABLE_JUMP ) )"		1005840	0					
ANR	1006143	Callee	sljit_emit_jump		1005840	0					
ANR	1006144	Identifier	sljit_emit_jump		1005840	0					
ANR	1006145	ArgumentList	compiler		1005840	1					
ANR	1006146	Argument	compiler		1005840	0					
ANR	1006147	Identifier	compiler		1005840	0					
ANR	1006148	Argument	condition | ( type & SLJIT_REWRITABLE_JUMP )		1005840	1					
ANR	1006149	InclusiveOrExpression	condition | ( type & SLJIT_REWRITABLE_JUMP )		1005840	0		|			
ANR	1006150	Identifier	condition		1005840	0					
ANR	1006151	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1005840	1		&			
ANR	1006152	Identifier	type		1005840	0					
ANR	1006153	Identifier	SLJIT_REWRITABLE_JUMP		1005840	1					
ANR	1006154	ReturnType	struct sljit_jump *		1005840	1					
ANR	1006155	Identifier	sljit_emit_cmp		1005840	2					
ANR	1006156	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1005840	3					
ANR	1006157	Parameter	struct sljit_compiler * compiler	1579:59:52345:52375	1005840	0	True				
ANR	1006158	ParameterType	struct sljit_compiler *		1005840	0					
ANR	1006159	Identifier	compiler		1005840	1					
ANR	1006160	Parameter	sljit_si type	1579:92:52378:52390	1005840	1	True				
ANR	1006161	ParameterType	sljit_si		1005840	0					
ANR	1006162	Identifier	type		1005840	1					
ANR	1006163	Parameter	sljit_si src1	1580:1:52394:52406	1005840	2	True				
ANR	1006164	ParameterType	sljit_si		1005840	0					
ANR	1006165	Identifier	src1		1005840	1					
ANR	1006166	Parameter	sljit_sw src1w	1580:16:52409:52422	1005840	3	True				
ANR	1006167	ParameterType	sljit_sw		1005840	0					
ANR	1006168	Identifier	src1w		1005840	1					
ANR	1006169	Parameter	sljit_si src2	1581:1:52426:52438	1005840	4	True				
ANR	1006170	ParameterType	sljit_si		1005840	0					
ANR	1006171	Identifier	src2		1005840	1					
ANR	1006172	Parameter	sljit_sw src2w	1581:16:52441:52454	1005840	5	True				
ANR	1006173	ParameterType	sljit_sw		1005840	0					
ANR	1006174	Identifier	src2w		1005840	1					
ANR	1006175	CFGEntryNode	ENTRY		1005840		True				
ANR	1006176	CFGExitNode	EXIT		1005840		True				
ANR	1006177	Symbol	SLJIT_SIG_GREATER		1005840						
ANR	1006178	Symbol	sljit_emit_op2		1005840						
ANR	1006179	Symbol	src1w		1005840						
ANR	1006180	Symbol	SLJIT_SIG_LESS		1005840						
ANR	1006181	Symbol	flags		1005840						
ANR	1006182	Symbol	* compiler		1005840						
ANR	1006183	Symbol	type		1005840						
ANR	1006184	Symbol	SLJIT_SET_E		1005840						
ANR	1006185	Symbol	check_sljit_emit_cmp		1005840						
ANR	1006186	Symbol	SLJIT_SIG_LESS_EQUAL		1005840						
ANR	1006187	Symbol	SLJIT_IMM		1005840						
ANR	1006188	Symbol	SLJIT_LESS_EQUAL		1005840						
ANR	1006189	Symbol	tmp_src		1005840						
ANR	1006190	Symbol	SLJIT_NOT_ZERO		1005840						
ANR	1006191	Symbol	SLJIT_SET_S		1005840						
ANR	1006192	Symbol	SLJIT_EQUAL		1005840						
ANR	1006193	Symbol	SLJIT_REWRITABLE_JUMP		1005840						
ANR	1006194	Symbol	compiler		1005840						
ANR	1006195	Symbol	SLJIT_SET_U		1005840						
ANR	1006196	Symbol	src2w		1005840						
ANR	1006197	Symbol	SLJIT_SIG_GREATER_EQUAL		1005840						
ANR	1006198	Symbol	tmp_srcw		1005840						
ANR	1006199	Symbol	SLJIT_INT_OP		1005840						
ANR	1006200	Symbol	SLJIT_SUB		1005840						
ANR	1006201	Symbol	SLJIT_GREATER_EQUAL		1005840						
ANR	1006202	Symbol	SLJIT_GREATER		1005840						
ANR	1006203	Symbol	SLJIT_LESS		1005840						
ANR	1006204	Symbol	condition		1005840						
ANR	1006205	Symbol	SLJIT_UNUSED		1005840						
ANR	1006206	Symbol	src1		1005840						
ANR	1006207	Symbol	emit_cmp_to0		1005840						
ANR	1006208	Symbol	compiler -> skip_checks		1005840						
ANR	1006209	Symbol	sljit_emit_jump		1005840						
ANR	1006210	Symbol	SLJIT_NOT_EQUAL		1005840						
ANR	1006211	Symbol	src2		1005840						
ANR	1006212	Symbol	SLJIT_UNLIKELY		1005840						
ANR	1006213	Function	sljit_emit_fcmp	1661:25:54595:55468							
ANR	1006214	FunctionDef	"sljit_emit_fcmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1006213	0					
ANR	1006215	CompoundStatement		1664:0:54742:55468	1006213	0					
ANR	1006216	IdentifierDeclStatement	"sljit_si flags , condition ;"	1665:1:54745:54770	1006213	0	True				
ANR	1006217	IdentifierDecl	flags		1006213	0					
ANR	1006218	IdentifierDeclType	sljit_si		1006213	0					
ANR	1006219	Identifier	flags		1006213	1					
ANR	1006220	IdentifierDecl	condition		1006213	1					
ANR	1006221	IdentifierDeclType	sljit_si		1006213	0					
ANR	1006222	Identifier	condition		1006213	1					
ANR	1006223	ExpressionStatement	CHECK_ERROR_PTR ( )	1667:1:54774:54791	1006213	1	True				
ANR	1006224	CallExpression	CHECK_ERROR_PTR ( )		1006213	0					
ANR	1006225	Callee	CHECK_ERROR_PTR		1006213	0					
ANR	1006226	Identifier	CHECK_ERROR_PTR		1006213	0					
ANR	1006227	ArgumentList			1006213	1					
ANR	1006228	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w ) )"	1668:1:54794:54868	1006213	2	True				
ANR	1006229	CallExpression	"CHECK_PTR ( check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w ) )"		1006213	0					
ANR	1006230	Callee	CHECK_PTR		1006213	0					
ANR	1006231	Identifier	CHECK_PTR		1006213	0					
ANR	1006232	ArgumentList	"check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w )"		1006213	1					
ANR	1006233	Argument	"check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w )"		1006213	0					
ANR	1006234	CallExpression	"check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w )"		1006213	0					
ANR	1006235	Callee	check_sljit_emit_fcmp		1006213	0					
ANR	1006236	Identifier	check_sljit_emit_fcmp		1006213	0					
ANR	1006237	ArgumentList	compiler		1006213	1					
ANR	1006238	Argument	compiler		1006213	0					
ANR	1006239	Identifier	compiler		1006213	0					
ANR	1006240	Argument	type		1006213	1					
ANR	1006241	Identifier	type		1006213	0					
ANR	1006242	Argument	src1		1006213	2					
ANR	1006243	Identifier	src1		1006213	0					
ANR	1006244	Argument	src1w		1006213	3					
ANR	1006245	Identifier	src1w		1006213	0					
ANR	1006246	Argument	src2		1006213	4					
ANR	1006247	Identifier	src2		1006213	0					
ANR	1006248	Argument	src2w		1006213	5					
ANR	1006249	Identifier	src2w		1006213	0					
ANR	1006250	ExpressionStatement	condition = type & 0xff	1670:1:54872:54895	1006213	3	True				
ANR	1006251	AssignmentExpression	condition = type & 0xff		1006213	0		=			
ANR	1006252	Identifier	condition		1006213	0					
ANR	1006253	BitAndExpression	type & 0xff		1006213	1		&			
ANR	1006254	Identifier	type		1006213	0					
ANR	1006255	PrimaryExpression	0xff		1006213	1					
ANR	1006256	ExpressionStatement	flags = ( condition <= SLJIT_D_NOT_EQUAL ) ? SLJIT_SET_E : SLJIT_SET_S	1671:1:54898:54966	1006213	4	True				
ANR	1006257	AssignmentExpression	flags = ( condition <= SLJIT_D_NOT_EQUAL ) ? SLJIT_SET_E : SLJIT_SET_S		1006213	0		=			
ANR	1006258	Identifier	flags		1006213	0					
ANR	1006259	ConditionalExpression	( condition <= SLJIT_D_NOT_EQUAL ) ? SLJIT_SET_E : SLJIT_SET_S		1006213	1					
ANR	1006260	Condition	condition <= SLJIT_D_NOT_EQUAL		1006213	0					
ANR	1006261	RelationalExpression	condition <= SLJIT_D_NOT_EQUAL		1006213	0		<=			
ANR	1006262	Identifier	condition		1006213	0					
ANR	1006263	Identifier	SLJIT_D_NOT_EQUAL		1006213	1					
ANR	1006264	Identifier	SLJIT_SET_E		1006213	1					
ANR	1006265	Identifier	SLJIT_SET_S		1006213	2					
ANR	1006266	IfStatement	if ( type & SLJIT_SINGLE_OP )		1006213	5					
ANR	1006267	Condition	type & SLJIT_SINGLE_OP	1672:5:54973:54994	1006213	0	True				
ANR	1006268	BitAndExpression	type & SLJIT_SINGLE_OP		1006213	0		&			
ANR	1006269	Identifier	type		1006213	0					
ANR	1006270	Identifier	SLJIT_SINGLE_OP		1006213	1					
ANR	1006271	ExpressionStatement	flags |= SLJIT_SINGLE_OP	1673:2:54999:55023	1006213	1	True				
ANR	1006272	AssignmentExpression	flags |= SLJIT_SINGLE_OP		1006213	0		|=			
ANR	1006273	Identifier	flags		1006213	0					
ANR	1006274	Identifier	SLJIT_SINGLE_OP		1006213	1					
ANR	1006275	Statement	||	1676:2:55075:55076	1006213	6	True				
ANR	1006276	Statement	(	1676:5:55078:55078	1006213	7	True				
ANR	1006277	Statement	defined	1676:6:55079:55085	1006213	8	True				
ANR	1006278	Statement	SLJIT_ARGUMENT_CHECKS	1676:14:55087:55107	1006213	9	True				
ANR	1006279	Statement	&&	1676:36:55109:55110	1006213	10	True				
ANR	1006280	Statement	SLJIT_ARGUMENT_CHECKS	1676:39:55112:55132	1006213	11	True				
ANR	1006281	Statement	)	1676:60:55133:55133	1006213	12	True				
ANR	1006282	ExpressionStatement	compiler -> skip_checks = 1	1677:1:55136:55161	1006213	13	True				
ANR	1006283	AssignmentExpression	compiler -> skip_checks = 1		1006213	0		=			
ANR	1006284	PtrMemberAccess	compiler -> skip_checks		1006213	0					
ANR	1006285	Identifier	compiler		1006213	0					
ANR	1006286	Identifier	skip_checks		1006213	1					
ANR	1006287	PrimaryExpression	1		1006213	1					
ANR	1006288	ExpressionStatement	"sljit_emit_fop1 ( compiler , SLJIT_DCMP | flags , src1 , src1w , src2 , src2w )"	1679:1:55171:55242	1006213	14	True				
ANR	1006289	CallExpression	"sljit_emit_fop1 ( compiler , SLJIT_DCMP | flags , src1 , src1w , src2 , src2w )"		1006213	0					
ANR	1006290	Callee	sljit_emit_fop1		1006213	0					
ANR	1006291	Identifier	sljit_emit_fop1		1006213	0					
ANR	1006292	ArgumentList	compiler		1006213	1					
ANR	1006293	Argument	compiler		1006213	0					
ANR	1006294	Identifier	compiler		1006213	0					
ANR	1006295	Argument	SLJIT_DCMP | flags		1006213	1					
ANR	1006296	InclusiveOrExpression	SLJIT_DCMP | flags		1006213	0		|			
ANR	1006297	Identifier	SLJIT_DCMP		1006213	0					
ANR	1006298	Identifier	flags		1006213	1					
ANR	1006299	Argument	src1		1006213	2					
ANR	1006300	Identifier	src1		1006213	0					
ANR	1006301	Argument	src1w		1006213	3					
ANR	1006302	Identifier	src1w		1006213	0					
ANR	1006303	Argument	src2		1006213	4					
ANR	1006304	Identifier	src2		1006213	0					
ANR	1006305	Argument	src2w		1006213	5					
ANR	1006306	Identifier	src2w		1006213	0					
ANR	1006307	Statement	||	1682:2:55294:55295	1006213	15	True				
ANR	1006308	Statement	(	1682:5:55297:55297	1006213	16	True				
ANR	1006309	Statement	defined	1682:6:55298:55304	1006213	17	True				
ANR	1006310	Statement	SLJIT_ARGUMENT_CHECKS	1682:14:55306:55326	1006213	18	True				
ANR	1006311	Statement	&&	1682:36:55328:55329	1006213	19	True				
ANR	1006312	Statement	SLJIT_ARGUMENT_CHECKS	1682:39:55331:55351	1006213	20	True				
ANR	1006313	Statement	)	1682:60:55352:55352	1006213	21	True				
ANR	1006314	ExpressionStatement	compiler -> skip_checks = 1	1683:1:55355:55380	1006213	22	True				
ANR	1006315	AssignmentExpression	compiler -> skip_checks = 1		1006213	0		=			
ANR	1006316	PtrMemberAccess	compiler -> skip_checks		1006213	0					
ANR	1006317	Identifier	compiler		1006213	0					
ANR	1006318	Identifier	skip_checks		1006213	1					
ANR	1006319	PrimaryExpression	1		1006213	1					
ANR	1006320	ReturnStatement	"return sljit_emit_jump ( compiler , condition | ( type & SLJIT_REWRITABLE_JUMP ) ) ;"	1685:1:55390:55466	1006213	23	True				
ANR	1006321	CallExpression	"sljit_emit_jump ( compiler , condition | ( type & SLJIT_REWRITABLE_JUMP ) )"		1006213	0					
ANR	1006322	Callee	sljit_emit_jump		1006213	0					
ANR	1006323	Identifier	sljit_emit_jump		1006213	0					
ANR	1006324	ArgumentList	compiler		1006213	1					
ANR	1006325	Argument	compiler		1006213	0					
ANR	1006326	Identifier	compiler		1006213	0					
ANR	1006327	Argument	condition | ( type & SLJIT_REWRITABLE_JUMP )		1006213	1					
ANR	1006328	InclusiveOrExpression	condition | ( type & SLJIT_REWRITABLE_JUMP )		1006213	0		|			
ANR	1006329	Identifier	condition		1006213	0					
ANR	1006330	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1006213	1		&			
ANR	1006331	Identifier	type		1006213	0					
ANR	1006332	Identifier	SLJIT_REWRITABLE_JUMP		1006213	1					
ANR	1006333	ReturnType	struct sljit_jump *		1006213	1					
ANR	1006334	Identifier	sljit_emit_fcmp		1006213	2					
ANR	1006335	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1006213	3					
ANR	1006336	Parameter	struct sljit_compiler * compiler	1661:60:54630:54660	1006213	0	True				
ANR	1006337	ParameterType	struct sljit_compiler *		1006213	0					
ANR	1006338	Identifier	compiler		1006213	1					
ANR	1006339	Parameter	sljit_si type	1661:93:54663:54675	1006213	1	True				
ANR	1006340	ParameterType	sljit_si		1006213	0					
ANR	1006341	Identifier	type		1006213	1					
ANR	1006342	Parameter	sljit_si src1	1662:1:54679:54691	1006213	2	True				
ANR	1006343	ParameterType	sljit_si		1006213	0					
ANR	1006344	Identifier	src1		1006213	1					
ANR	1006345	Parameter	sljit_sw src1w	1662:16:54694:54707	1006213	3	True				
ANR	1006346	ParameterType	sljit_sw		1006213	0					
ANR	1006347	Identifier	src1w		1006213	1					
ANR	1006348	Parameter	sljit_si src2	1663:1:54711:54723	1006213	4	True				
ANR	1006349	ParameterType	sljit_si		1006213	0					
ANR	1006350	Identifier	src2		1006213	1					
ANR	1006351	Parameter	sljit_sw src2w	1663:16:54726:54739	1006213	5	True				
ANR	1006352	ParameterType	sljit_sw		1006213	0					
ANR	1006353	Identifier	src2w		1006213	1					
ANR	1006354	CFGEntryNode	ENTRY		1006213		True				
ANR	1006355	CFGExitNode	EXIT		1006213		True				
ANR	1006356	Symbol	src2w		1006213						
ANR	1006357	Symbol	src1w		1006213						
ANR	1006358	Symbol	check_sljit_emit_fcmp		1006213						
ANR	1006359	Symbol	SLJIT_SINGLE_OP		1006213						
ANR	1006360	Symbol	flags		1006213						
ANR	1006361	Symbol	* compiler		1006213						
ANR	1006362	Symbol	type		1006213						
ANR	1006363	Symbol	SLJIT_D_NOT_EQUAL		1006213						
ANR	1006364	Symbol	SLJIT_SET_E		1006213						
ANR	1006365	Symbol	condition		1006213						
ANR	1006366	Symbol	SLJIT_DCMP		1006213						
ANR	1006367	Symbol	src1		1006213						
ANR	1006368	Symbol	SLJIT_SET_S		1006213						
ANR	1006369	Symbol	compiler -> skip_checks		1006213						
ANR	1006370	Symbol	sljit_emit_jump		1006213						
ANR	1006371	Symbol	src2		1006213						
ANR	1006372	Symbol	SLJIT_REWRITABLE_JUMP		1006213						
ANR	1006373	Symbol	compiler		1006213						
ANR	1006374	Function	sljit_get_local_base	1692:0:55532:56141							
ANR	1006375	FunctionDef	"sljit_get_local_base (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset)"		1006374	0					
ANR	1006376	CompoundStatement		1693:0:55666:56141	1006374	0					
ANR	1006377	ExpressionStatement	CHECK_ERROR ( )	1694:1:55669:55682	1006374	0	True				
ANR	1006378	CallExpression	CHECK_ERROR ( )		1006374	0					
ANR	1006379	Callee	CHECK_ERROR		1006374	0					
ANR	1006380	Identifier	CHECK_ERROR		1006374	0					
ANR	1006381	ArgumentList			1006374	1					
ANR	1006382	ExpressionStatement	"CHECK ( check_sljit_get_local_base ( compiler , dst , dstw , offset ) )"	1695:1:55685:55747	1006374	1	True				
ANR	1006383	CallExpression	"CHECK ( check_sljit_get_local_base ( compiler , dst , dstw , offset ) )"		1006374	0					
ANR	1006384	Callee	CHECK		1006374	0					
ANR	1006385	Identifier	CHECK		1006374	0					
ANR	1006386	ArgumentList	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1006374	1					
ANR	1006387	Argument	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1006374	0					
ANR	1006388	CallExpression	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1006374	0					
ANR	1006389	Callee	check_sljit_get_local_base		1006374	0					
ANR	1006390	Identifier	check_sljit_get_local_base		1006374	0					
ANR	1006391	ArgumentList	compiler		1006374	1					
ANR	1006392	Argument	compiler		1006374	0					
ANR	1006393	Identifier	compiler		1006374	0					
ANR	1006394	Argument	dst		1006374	1					
ANR	1006395	Identifier	dst		1006374	0					
ANR	1006396	Argument	dstw		1006374	2					
ANR	1006397	Identifier	dstw		1006374	0					
ANR	1006398	Argument	offset		1006374	3					
ANR	1006399	Identifier	offset		1006374	0					
ANR	1006400	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( SLJIT_MEM1 ( SLJIT_SP ) , offset )"	1697:1:55751:55800	1006374	2	True				
ANR	1006401	CallExpression	"ADJUST_LOCAL_OFFSET ( SLJIT_MEM1 ( SLJIT_SP ) , offset )"		1006374	0					
ANR	1006402	Callee	ADJUST_LOCAL_OFFSET		1006374	0					
ANR	1006403	Identifier	ADJUST_LOCAL_OFFSET		1006374	0					
ANR	1006404	ArgumentList	SLJIT_MEM1 ( SLJIT_SP )		1006374	1					
ANR	1006405	Argument	SLJIT_MEM1 ( SLJIT_SP )		1006374	0					
ANR	1006406	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1006374	0					
ANR	1006407	Callee	SLJIT_MEM1		1006374	0					
ANR	1006408	Identifier	SLJIT_MEM1		1006374	0					
ANR	1006409	ArgumentList	SLJIT_SP		1006374	1					
ANR	1006410	Argument	SLJIT_SP		1006374	0					
ANR	1006411	Identifier	SLJIT_SP		1006374	0					
ANR	1006412	Argument	offset		1006374	1					
ANR	1006413	Identifier	offset		1006374	0					
ANR	1006414	Statement	||	1699:2:55851:55852	1006374	3	True				
ANR	1006415	Statement	(	1699:5:55854:55854	1006374	4	True				
ANR	1006416	Statement	defined	1699:6:55855:55861	1006374	5	True				
ANR	1006417	Statement	SLJIT_ARGUMENT_CHECKS	1699:14:55863:55883	1006374	6	True				
ANR	1006418	Statement	&&	1699:36:55885:55886	1006374	7	True				
ANR	1006419	Statement	SLJIT_ARGUMENT_CHECKS	1699:39:55888:55908	1006374	8	True				
ANR	1006420	Statement	)	1699:60:55909:55909	1006374	9	True				
ANR	1006421	ExpressionStatement	compiler -> skip_checks = 1	1700:1:55912:55937	1006374	10	True				
ANR	1006422	AssignmentExpression	compiler -> skip_checks = 1		1006374	0		=			
ANR	1006423	PtrMemberAccess	compiler -> skip_checks		1006374	0					
ANR	1006424	Identifier	compiler		1006374	0					
ANR	1006425	Identifier	skip_checks		1006374	1					
ANR	1006426	PrimaryExpression	1		1006374	1					
ANR	1006427	IfStatement	if ( offset != 0 )		1006374	11					
ANR	1006428	Condition	offset != 0	1702:5:55951:55961	1006374	0	True				
ANR	1006429	EqualityExpression	offset != 0		1006374	0		!=			
ANR	1006430	Identifier	offset		1006374	0					
ANR	1006431	PrimaryExpression	0		1006374	1					
ANR	1006432	ReturnStatement	"return sljit_emit_op2 ( compiler , SLJIT_ADD | SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , SLJIT_IMM , offset ) ;"	1703:2:55966:56070	1006374	1	True				
ANR	1006433	CallExpression	"sljit_emit_op2 ( compiler , SLJIT_ADD | SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , SLJIT_IMM , offset )"		1006374	0					
ANR	1006434	Callee	sljit_emit_op2		1006374	0					
ANR	1006435	Identifier	sljit_emit_op2		1006374	0					
ANR	1006436	ArgumentList	compiler		1006374	1					
ANR	1006437	Argument	compiler		1006374	0					
ANR	1006438	Identifier	compiler		1006374	0					
ANR	1006439	Argument	SLJIT_ADD | SLJIT_KEEP_FLAGS		1006374	1					
ANR	1006440	InclusiveOrExpression	SLJIT_ADD | SLJIT_KEEP_FLAGS		1006374	0		|			
ANR	1006441	Identifier	SLJIT_ADD		1006374	0					
ANR	1006442	Identifier	SLJIT_KEEP_FLAGS		1006374	1					
ANR	1006443	Argument	dst		1006374	2					
ANR	1006444	Identifier	dst		1006374	0					
ANR	1006445	Argument	dstw		1006374	3					
ANR	1006446	Identifier	dstw		1006374	0					
ANR	1006447	Argument	SLJIT_SP		1006374	4					
ANR	1006448	Identifier	SLJIT_SP		1006374	0					
ANR	1006449	Argument	0		1006374	5					
ANR	1006450	PrimaryExpression	0		1006374	0					
ANR	1006451	Argument	SLJIT_IMM		1006374	6					
ANR	1006452	Identifier	SLJIT_IMM		1006374	0					
ANR	1006453	Argument	offset		1006374	7					
ANR	1006454	Identifier	offset		1006374	0					
ANR	1006455	ReturnStatement	"return sljit_emit_op1 ( compiler , SLJIT_MOV , dst , dstw , SLJIT_SP , 0 ) ;"	1704:1:56073:56139	1006374	12	True				
ANR	1006456	CallExpression	"sljit_emit_op1 ( compiler , SLJIT_MOV , dst , dstw , SLJIT_SP , 0 )"		1006374	0					
ANR	1006457	Callee	sljit_emit_op1		1006374	0					
ANR	1006458	Identifier	sljit_emit_op1		1006374	0					
ANR	1006459	ArgumentList	compiler		1006374	1					
ANR	1006460	Argument	compiler		1006374	0					
ANR	1006461	Identifier	compiler		1006374	0					
ANR	1006462	Argument	SLJIT_MOV		1006374	1					
ANR	1006463	Identifier	SLJIT_MOV		1006374	0					
ANR	1006464	Argument	dst		1006374	2					
ANR	1006465	Identifier	dst		1006374	0					
ANR	1006466	Argument	dstw		1006374	3					
ANR	1006467	Identifier	dstw		1006374	0					
ANR	1006468	Argument	SLJIT_SP		1006374	4					
ANR	1006469	Identifier	SLJIT_SP		1006374	0					
ANR	1006470	Argument	0		1006374	5					
ANR	1006471	PrimaryExpression	0		1006374	0					
ANR	1006472	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1006374	1					
ANR	1006473	Identifier	sljit_get_local_base		1006374	2					
ANR	1006474	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset"		1006374	3					
ANR	1006475	Parameter	struct sljit_compiler * compiler	1692:55:55587:55617	1006374	0	True				
ANR	1006476	ParameterType	struct sljit_compiler *		1006374	0					
ANR	1006477	Identifier	compiler		1006374	1					
ANR	1006478	Parameter	sljit_si dst	1692:88:55620:55631	1006374	1	True				
ANR	1006479	ParameterType	sljit_si		1006374	0					
ANR	1006480	Identifier	dst		1006374	1					
ANR	1006481	Parameter	sljit_sw dstw	1692:102:55634:55646	1006374	2	True				
ANR	1006482	ParameterType	sljit_sw		1006374	0					
ANR	1006483	Identifier	dstw		1006374	1					
ANR	1006484	Parameter	sljit_sw offset	1692:117:55649:55663	1006374	3	True				
ANR	1006485	ParameterType	sljit_sw		1006374	0					
ANR	1006486	Identifier	offset		1006374	1					
ANR	1006487	CFGEntryNode	ENTRY		1006374		True				
ANR	1006488	CFGExitNode	EXIT		1006374		True				
ANR	1006489	Symbol	sljit_emit_op2		1006374						
ANR	1006490	Symbol	dst		1006374						
ANR	1006491	Symbol	offset		1006374						
ANR	1006492	Symbol	SLJIT_MOV		1006374						
ANR	1006493	Symbol	SLJIT_ADD		1006374						
ANR	1006494	Symbol	check_sljit_get_local_base		1006374						
ANR	1006495	Symbol	SLJIT_MEM1		1006374						
ANR	1006496	Symbol	* compiler		1006374						
ANR	1006497	Symbol	sljit_emit_op1		1006374						
ANR	1006498	Symbol	SLJIT_SP		1006374						
ANR	1006499	Symbol	SLJIT_IMM		1006374						
ANR	1006500	Symbol	SLJIT_KEEP_FLAGS		1006374						
ANR	1006501	Symbol	compiler -> skip_checks		1006374						
ANR	1006502	Symbol	compiler		1006374						
ANR	1006503	Symbol	dstw		1006374						
ANR	1006504	Function	sljit_get_platform_name	1713:0:56270:56368							
ANR	1006505	FunctionDef	sljit_get_platform_name ()		1006504	0					
ANR	1006506	CompoundStatement		1714:0:56343:56368	1006504	0					
ANR	1006507	ReturnStatement	"return ""unsupported"" ;"	1715:1:56346:56366	1006504	0	True				
ANR	1006508	PrimaryExpression	"""unsupported"""		1006504	0					
ANR	1006509	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1006504	1					
ANR	1006510	Identifier	sljit_get_platform_name		1006504	2					
ANR	1006511	ParameterList			1006504	3					
ANR	1006512	CFGEntryNode	ENTRY		1006504		True				
ANR	1006513	CFGExitNode	EXIT		1006504		True				
ANR	1006514	Function	sljit_create_compiler	1718:25:56396:56485							
ANR	1006515	FunctionDef	sljit_create_compiler ()		1006514	0					
ANR	1006516	CompoundStatement		1719:0:56447:56485	1006514	0					
ANR	1006517	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1720:1:56450:56469	1006514	0	True				
ANR	1006518	CallExpression	SLJIT_ASSERT_STOP ( )		1006514	0					
ANR	1006519	Callee	SLJIT_ASSERT_STOP		1006514	0					
ANR	1006520	Identifier	SLJIT_ASSERT_STOP		1006514	0					
ANR	1006521	ArgumentList			1006514	1					
ANR	1006522	ReturnStatement	return NULL ;	1721:1:56472:56483	1006514	1	True				
ANR	1006523	Identifier	NULL		1006514	0					
ANR	1006524	ReturnType	struct sljit_compiler *		1006514	1					
ANR	1006525	Identifier	sljit_create_compiler		1006514	2					
ANR	1006526	ParameterList			1006514	3					
ANR	1006527	CFGEntryNode	ENTRY		1006514		True				
ANR	1006528	CFGExitNode	EXIT		1006514		True				
ANR	1006529	Symbol	NULL		1006514						
ANR	1006530	Function	sljit_free_compiler	1724:0:56488:56624							
ANR	1006531	FunctionDef	sljit_free_compiler (struct sljit_compiler * compiler)		1006530	0					
ANR	1006532	CompoundStatement		1725:0:56571:56624	1006530	0					
ANR	1006533	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1726:1:56574:56600	1006530	0	True				
ANR	1006534	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006530	0					
ANR	1006535	Callee	SLJIT_UNUSED_ARG		1006530	0					
ANR	1006536	Identifier	SLJIT_UNUSED_ARG		1006530	0					
ANR	1006537	ArgumentList	compiler		1006530	1					
ANR	1006538	Argument	compiler		1006530	0					
ANR	1006539	Identifier	compiler		1006530	0					
ANR	1006540	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1727:1:56603:56622	1006530	1	True				
ANR	1006541	CallExpression	SLJIT_ASSERT_STOP ( )		1006530	0					
ANR	1006542	Callee	SLJIT_ASSERT_STOP		1006530	0					
ANR	1006543	Identifier	SLJIT_ASSERT_STOP		1006530	0					
ANR	1006544	ArgumentList			1006530	1					
ANR	1006545	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1006530	1					
ANR	1006546	Identifier	sljit_free_compiler		1006530	2					
ANR	1006547	ParameterList	struct sljit_compiler * compiler		1006530	3					
ANR	1006548	Parameter	struct sljit_compiler * compiler	1724:50:56538:56568	1006530	0	True				
ANR	1006549	ParameterType	struct sljit_compiler *		1006530	0					
ANR	1006550	Identifier	compiler		1006530	1					
ANR	1006551	CFGEntryNode	ENTRY		1006530		True				
ANR	1006552	CFGExitNode	EXIT		1006530		True				
ANR	1006553	Symbol	compiler		1006530						
ANR	1006554	Function	sljit_alloc_memory	1730:0:56627:56817							
ANR	1006555	FunctionDef	"sljit_alloc_memory (struct sljit_compiler * compiler , sljit_si size)"		1006554	0					
ANR	1006556	CompoundStatement		1731:0:56725:56817	1006554	0					
ANR	1006557	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1732:1:56728:56754	1006554	0	True				
ANR	1006558	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006554	0					
ANR	1006559	Callee	SLJIT_UNUSED_ARG		1006554	0					
ANR	1006560	Identifier	SLJIT_UNUSED_ARG		1006554	0					
ANR	1006561	ArgumentList	compiler		1006554	1					
ANR	1006562	Argument	compiler		1006554	0					
ANR	1006563	Identifier	compiler		1006554	0					
ANR	1006564	ExpressionStatement	SLJIT_UNUSED_ARG ( size )	1733:1:56757:56779	1006554	1	True				
ANR	1006565	CallExpression	SLJIT_UNUSED_ARG ( size )		1006554	0					
ANR	1006566	Callee	SLJIT_UNUSED_ARG		1006554	0					
ANR	1006567	Identifier	SLJIT_UNUSED_ARG		1006554	0					
ANR	1006568	ArgumentList	size		1006554	1					
ANR	1006569	Argument	size		1006554	0					
ANR	1006570	Identifier	size		1006554	0					
ANR	1006571	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1734:1:56782:56801	1006554	2	True				
ANR	1006572	CallExpression	SLJIT_ASSERT_STOP ( )		1006554	0					
ANR	1006573	Callee	SLJIT_ASSERT_STOP		1006554	0					
ANR	1006574	Identifier	SLJIT_ASSERT_STOP		1006554	0					
ANR	1006575	ArgumentList			1006554	1					
ANR	1006576	ReturnStatement	return NULL ;	1735:1:56804:56815	1006554	3	True				
ANR	1006577	Identifier	NULL		1006554	0					
ANR	1006578	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1006554	1					
ANR	1006579	Identifier	sljit_alloc_memory		1006554	2					
ANR	1006580	ParameterList	"struct sljit_compiler * compiler , sljit_si size"		1006554	3					
ANR	1006581	Parameter	struct sljit_compiler * compiler	1730:50:56677:56707	1006554	0	True				
ANR	1006582	ParameterType	struct sljit_compiler *		1006554	0					
ANR	1006583	Identifier	compiler		1006554	1					
ANR	1006584	Parameter	sljit_si size	1730:83:56710:56722	1006554	1	True				
ANR	1006585	ParameterType	sljit_si		1006554	0					
ANR	1006586	Identifier	size		1006554	1					
ANR	1006587	CFGEntryNode	ENTRY		1006554		True				
ANR	1006588	CFGExitNode	EXIT		1006554		True				
ANR	1006589	Symbol	NULL		1006554						
ANR	1006590	Symbol	size		1006554						
ANR	1006591	Symbol	compiler		1006554						
ANR	1006592	Function	sljit_compiler_verbose	1739:0:56865:57047							
ANR	1006593	FunctionDef	"sljit_compiler_verbose (struct sljit_compiler * compiler , FILE * verbose)"		1006592	0					
ANR	1006594	CompoundStatement		1740:0:56966:57047	1006592	0					
ANR	1006595	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1741:1:56969:56995	1006592	0	True				
ANR	1006596	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006592	0					
ANR	1006597	Callee	SLJIT_UNUSED_ARG		1006592	0					
ANR	1006598	Identifier	SLJIT_UNUSED_ARG		1006592	0					
ANR	1006599	ArgumentList	compiler		1006592	1					
ANR	1006600	Argument	compiler		1006592	0					
ANR	1006601	Identifier	compiler		1006592	0					
ANR	1006602	ExpressionStatement	SLJIT_UNUSED_ARG ( verbose )	1742:1:56998:57023	1006592	1	True				
ANR	1006603	CallExpression	SLJIT_UNUSED_ARG ( verbose )		1006592	0					
ANR	1006604	Callee	SLJIT_UNUSED_ARG		1006592	0					
ANR	1006605	Identifier	SLJIT_UNUSED_ARG		1006592	0					
ANR	1006606	ArgumentList	verbose		1006592	1					
ANR	1006607	Argument	verbose		1006592	0					
ANR	1006608	Identifier	verbose		1006592	0					
ANR	1006609	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1743:1:57026:57045	1006592	2	True				
ANR	1006610	CallExpression	SLJIT_ASSERT_STOP ( )		1006592	0					
ANR	1006611	Callee	SLJIT_ASSERT_STOP		1006592	0					
ANR	1006612	Identifier	SLJIT_ASSERT_STOP		1006592	0					
ANR	1006613	ArgumentList			1006592	1					
ANR	1006614	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1006592	1					
ANR	1006615	Identifier	sljit_compiler_verbose		1006592	2					
ANR	1006616	ParameterList	"struct sljit_compiler * compiler , FILE * verbose"		1006592	3					
ANR	1006617	Parameter	struct sljit_compiler * compiler	1739:53:56918:56948	1006592	0	True				
ANR	1006618	ParameterType	struct sljit_compiler *		1006592	0					
ANR	1006619	Identifier	compiler		1006592	1					
ANR	1006620	Parameter	FILE * verbose	1739:86:56951:56963	1006592	1	True				
ANR	1006621	ParameterType	FILE *		1006592	0					
ANR	1006622	Identifier	verbose		1006592	1					
ANR	1006623	CFGEntryNode	ENTRY		1006592		True				
ANR	1006624	CFGExitNode	EXIT		1006592		True				
ANR	1006625	Symbol	compiler		1006592						
ANR	1006626	Symbol	verbose		1006592						
ANR	1006627	Function	sljit_generate_code	1747:0:57057:57208							
ANR	1006628	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1006627	0					
ANR	1006629	CompoundStatement		1748:0:57141:57208	1006627	0					
ANR	1006630	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1749:1:57144:57170	1006627	0	True				
ANR	1006631	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006627	0					
ANR	1006632	Callee	SLJIT_UNUSED_ARG		1006627	0					
ANR	1006633	Identifier	SLJIT_UNUSED_ARG		1006627	0					
ANR	1006634	ArgumentList	compiler		1006627	1					
ANR	1006635	Argument	compiler		1006627	0					
ANR	1006636	Identifier	compiler		1006627	0					
ANR	1006637	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1750:1:57173:57192	1006627	1	True				
ANR	1006638	CallExpression	SLJIT_ASSERT_STOP ( )		1006627	0					
ANR	1006639	Callee	SLJIT_ASSERT_STOP		1006627	0					
ANR	1006640	Identifier	SLJIT_ASSERT_STOP		1006627	0					
ANR	1006641	ArgumentList			1006627	1					
ANR	1006642	ReturnStatement	return NULL ;	1751:1:57195:57206	1006627	2	True				
ANR	1006643	Identifier	NULL		1006627	0					
ANR	1006644	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1006627	1					
ANR	1006645	Identifier	sljit_generate_code		1006627	2					
ANR	1006646	ParameterList	struct sljit_compiler * compiler		1006627	3					
ANR	1006647	Parameter	struct sljit_compiler * compiler	1747:51:57108:57138	1006627	0	True				
ANR	1006648	ParameterType	struct sljit_compiler *		1006627	0					
ANR	1006649	Identifier	compiler		1006627	1					
ANR	1006650	CFGEntryNode	ENTRY		1006627		True				
ANR	1006651	CFGExitNode	EXIT		1006627		True				
ANR	1006652	Symbol	NULL		1006627						
ANR	1006653	Symbol	compiler		1006627						
ANR	1006654	Function	sljit_free_code	1754:0:57211:57318							
ANR	1006655	FunctionDef	sljit_free_code (void * code)		1006654	0					
ANR	1006656	CompoundStatement		1755:0:57269:57318	1006654	0					
ANR	1006657	ExpressionStatement	SLJIT_UNUSED_ARG ( code )	1756:1:57272:57294	1006654	0	True				
ANR	1006658	CallExpression	SLJIT_UNUSED_ARG ( code )		1006654	0					
ANR	1006659	Callee	SLJIT_UNUSED_ARG		1006654	0					
ANR	1006660	Identifier	SLJIT_UNUSED_ARG		1006654	0					
ANR	1006661	ArgumentList	code		1006654	1					
ANR	1006662	Argument	code		1006654	0					
ANR	1006663	Identifier	code		1006654	0					
ANR	1006664	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1757:1:57297:57316	1006654	1	True				
ANR	1006665	CallExpression	SLJIT_ASSERT_STOP ( )		1006654	0					
ANR	1006666	Callee	SLJIT_ASSERT_STOP		1006654	0					
ANR	1006667	Identifier	SLJIT_ASSERT_STOP		1006654	0					
ANR	1006668	ArgumentList			1006654	1					
ANR	1006669	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1006654	1					
ANR	1006670	Identifier	sljit_free_code		1006654	2					
ANR	1006671	ParameterList	void * code		1006654	3					
ANR	1006672	Parameter	void * code	1754:46:57257:57266	1006654	0	True				
ANR	1006673	ParameterType	void *		1006654	0					
ANR	1006674	Identifier	code		1006654	1					
ANR	1006675	CFGEntryNode	ENTRY		1006654		True				
ANR	1006676	CFGExitNode	EXIT		1006654		True				
ANR	1006677	Symbol	code		1006654						
ANR	1006678	Function	sljit_emit_enter	1760:0:57321:57821							
ANR	1006679	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1006678	0					
ANR	1006680	CompoundStatement		1763:0:57537:57821	1006678	0					
ANR	1006681	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1764:1:57540:57566	1006678	0	True				
ANR	1006682	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006678	0					
ANR	1006683	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006684	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006685	ArgumentList	compiler		1006678	1					
ANR	1006686	Argument	compiler		1006678	0					
ANR	1006687	Identifier	compiler		1006678	0					
ANR	1006688	ExpressionStatement	SLJIT_UNUSED_ARG ( options )	1765:1:57569:57594	1006678	1	True				
ANR	1006689	CallExpression	SLJIT_UNUSED_ARG ( options )		1006678	0					
ANR	1006690	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006691	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006692	ArgumentList	options		1006678	1					
ANR	1006693	Argument	options		1006678	0					
ANR	1006694	Identifier	options		1006678	0					
ANR	1006695	ExpressionStatement	SLJIT_UNUSED_ARG ( args )	1766:1:57597:57619	1006678	2	True				
ANR	1006696	CallExpression	SLJIT_UNUSED_ARG ( args )		1006678	0					
ANR	1006697	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006698	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006699	ArgumentList	args		1006678	1					
ANR	1006700	Argument	args		1006678	0					
ANR	1006701	Identifier	args		1006678	0					
ANR	1006702	ExpressionStatement	SLJIT_UNUSED_ARG ( scratches )	1767:1:57622:57649	1006678	3	True				
ANR	1006703	CallExpression	SLJIT_UNUSED_ARG ( scratches )		1006678	0					
ANR	1006704	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006705	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006706	ArgumentList	scratches		1006678	1					
ANR	1006707	Argument	scratches		1006678	0					
ANR	1006708	Identifier	scratches		1006678	0					
ANR	1006709	ExpressionStatement	SLJIT_UNUSED_ARG ( saveds )	1768:1:57652:57676	1006678	4	True				
ANR	1006710	CallExpression	SLJIT_UNUSED_ARG ( saveds )		1006678	0					
ANR	1006711	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006712	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006713	ArgumentList	saveds		1006678	1					
ANR	1006714	Argument	saveds		1006678	0					
ANR	1006715	Identifier	saveds		1006678	0					
ANR	1006716	ExpressionStatement	SLJIT_UNUSED_ARG ( fscratches )	1769:1:57679:57707	1006678	5	True				
ANR	1006717	CallExpression	SLJIT_UNUSED_ARG ( fscratches )		1006678	0					
ANR	1006718	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006719	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006720	ArgumentList	fscratches		1006678	1					
ANR	1006721	Argument	fscratches		1006678	0					
ANR	1006722	Identifier	fscratches		1006678	0					
ANR	1006723	ExpressionStatement	SLJIT_UNUSED_ARG ( fsaveds )	1770:1:57710:57735	1006678	6	True				
ANR	1006724	CallExpression	SLJIT_UNUSED_ARG ( fsaveds )		1006678	0					
ANR	1006725	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006726	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006727	ArgumentList	fsaveds		1006678	1					
ANR	1006728	Argument	fsaveds		1006678	0					
ANR	1006729	Identifier	fsaveds		1006678	0					
ANR	1006730	ExpressionStatement	SLJIT_UNUSED_ARG ( local_size )	1771:1:57738:57766	1006678	7	True				
ANR	1006731	CallExpression	SLJIT_UNUSED_ARG ( local_size )		1006678	0					
ANR	1006732	Callee	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006733	Identifier	SLJIT_UNUSED_ARG		1006678	0					
ANR	1006734	ArgumentList	local_size		1006678	1					
ANR	1006735	Argument	local_size		1006678	0					
ANR	1006736	Identifier	local_size		1006678	0					
ANR	1006737	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1772:1:57769:57788	1006678	8	True				
ANR	1006738	CallExpression	SLJIT_ASSERT_STOP ( )		1006678	0					
ANR	1006739	Callee	SLJIT_ASSERT_STOP		1006678	0					
ANR	1006740	Identifier	SLJIT_ASSERT_STOP		1006678	0					
ANR	1006741	ArgumentList			1006678	1					
ANR	1006742	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1773:1:57791:57819	1006678	9	True				
ANR	1006743	Identifier	SLJIT_ERR_UNSUPPORTED		1006678	0					
ANR	1006744	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1006678	1					
ANR	1006745	Identifier	sljit_emit_enter		1006678	2					
ANR	1006746	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1006678	3					
ANR	1006747	Parameter	struct sljit_compiler * compiler	1760:51:57372:57402	1006678	0	True				
ANR	1006748	ParameterType	struct sljit_compiler *		1006678	0					
ANR	1006749	Identifier	compiler		1006678	1					
ANR	1006750	Parameter	sljit_si options	1761:1:57406:57421	1006678	1	True				
ANR	1006751	ParameterType	sljit_si		1006678	0					
ANR	1006752	Identifier	options		1006678	1					
ANR	1006753	Parameter	sljit_si args	1761:19:57424:57436	1006678	2	True				
ANR	1006754	ParameterType	sljit_si		1006678	0					
ANR	1006755	Identifier	args		1006678	1					
ANR	1006756	Parameter	sljit_si scratches	1761:34:57439:57456	1006678	3	True				
ANR	1006757	ParameterType	sljit_si		1006678	0					
ANR	1006758	Identifier	scratches		1006678	1					
ANR	1006759	Parameter	sljit_si saveds	1761:54:57459:57473	1006678	4	True				
ANR	1006760	ParameterType	sljit_si		1006678	0					
ANR	1006761	Identifier	saveds		1006678	1					
ANR	1006762	Parameter	sljit_si fscratches	1762:1:57477:57495	1006678	5	True				
ANR	1006763	ParameterType	sljit_si		1006678	0					
ANR	1006764	Identifier	fscratches		1006678	1					
ANR	1006765	Parameter	sljit_si fsaveds	1762:22:57498:57513	1006678	6	True				
ANR	1006766	ParameterType	sljit_si		1006678	0					
ANR	1006767	Identifier	fsaveds		1006678	1					
ANR	1006768	Parameter	sljit_si local_size	1762:40:57516:57534	1006678	7	True				
ANR	1006769	ParameterType	sljit_si		1006678	0					
ANR	1006770	Identifier	local_size		1006678	1					
ANR	1006771	CFGEntryNode	ENTRY		1006678		True				
ANR	1006772	CFGExitNode	EXIT		1006678		True				
ANR	1006773	Symbol	args		1006678						
ANR	1006774	Symbol	fscratches		1006678						
ANR	1006775	Symbol	local_size		1006678						
ANR	1006776	Symbol	fsaveds		1006678						
ANR	1006777	Symbol	scratches		1006678						
ANR	1006778	Symbol	saveds		1006678						
ANR	1006779	Symbol	options		1006678						
ANR	1006780	Symbol	compiler		1006678						
ANR	1006781	Symbol	SLJIT_ERR_UNSUPPORTED		1006678						
ANR	1006782	Function	sljit_set_context	1776:0:57824:58325							
ANR	1006783	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1006782	0					
ANR	1006784	CompoundStatement		1779:0:58041:58325	1006782	0					
ANR	1006785	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1780:1:58044:58070	1006782	0	True				
ANR	1006786	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006782	0					
ANR	1006787	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006788	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006789	ArgumentList	compiler		1006782	1					
ANR	1006790	Argument	compiler		1006782	0					
ANR	1006791	Identifier	compiler		1006782	0					
ANR	1006792	ExpressionStatement	SLJIT_UNUSED_ARG ( options )	1781:1:58073:58098	1006782	1	True				
ANR	1006793	CallExpression	SLJIT_UNUSED_ARG ( options )		1006782	0					
ANR	1006794	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006795	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006796	ArgumentList	options		1006782	1					
ANR	1006797	Argument	options		1006782	0					
ANR	1006798	Identifier	options		1006782	0					
ANR	1006799	ExpressionStatement	SLJIT_UNUSED_ARG ( args )	1782:1:58101:58123	1006782	2	True				
ANR	1006800	CallExpression	SLJIT_UNUSED_ARG ( args )		1006782	0					
ANR	1006801	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006802	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006803	ArgumentList	args		1006782	1					
ANR	1006804	Argument	args		1006782	0					
ANR	1006805	Identifier	args		1006782	0					
ANR	1006806	ExpressionStatement	SLJIT_UNUSED_ARG ( scratches )	1783:1:58126:58153	1006782	3	True				
ANR	1006807	CallExpression	SLJIT_UNUSED_ARG ( scratches )		1006782	0					
ANR	1006808	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006809	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006810	ArgumentList	scratches		1006782	1					
ANR	1006811	Argument	scratches		1006782	0					
ANR	1006812	Identifier	scratches		1006782	0					
ANR	1006813	ExpressionStatement	SLJIT_UNUSED_ARG ( saveds )	1784:1:58156:58180	1006782	4	True				
ANR	1006814	CallExpression	SLJIT_UNUSED_ARG ( saveds )		1006782	0					
ANR	1006815	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006816	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006817	ArgumentList	saveds		1006782	1					
ANR	1006818	Argument	saveds		1006782	0					
ANR	1006819	Identifier	saveds		1006782	0					
ANR	1006820	ExpressionStatement	SLJIT_UNUSED_ARG ( fscratches )	1785:1:58183:58211	1006782	5	True				
ANR	1006821	CallExpression	SLJIT_UNUSED_ARG ( fscratches )		1006782	0					
ANR	1006822	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006823	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006824	ArgumentList	fscratches		1006782	1					
ANR	1006825	Argument	fscratches		1006782	0					
ANR	1006826	Identifier	fscratches		1006782	0					
ANR	1006827	ExpressionStatement	SLJIT_UNUSED_ARG ( fsaveds )	1786:1:58214:58239	1006782	6	True				
ANR	1006828	CallExpression	SLJIT_UNUSED_ARG ( fsaveds )		1006782	0					
ANR	1006829	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006830	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006831	ArgumentList	fsaveds		1006782	1					
ANR	1006832	Argument	fsaveds		1006782	0					
ANR	1006833	Identifier	fsaveds		1006782	0					
ANR	1006834	ExpressionStatement	SLJIT_UNUSED_ARG ( local_size )	1787:1:58242:58270	1006782	7	True				
ANR	1006835	CallExpression	SLJIT_UNUSED_ARG ( local_size )		1006782	0					
ANR	1006836	Callee	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006837	Identifier	SLJIT_UNUSED_ARG		1006782	0					
ANR	1006838	ArgumentList	local_size		1006782	1					
ANR	1006839	Argument	local_size		1006782	0					
ANR	1006840	Identifier	local_size		1006782	0					
ANR	1006841	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1788:1:58273:58292	1006782	8	True				
ANR	1006842	CallExpression	SLJIT_ASSERT_STOP ( )		1006782	0					
ANR	1006843	Callee	SLJIT_ASSERT_STOP		1006782	0					
ANR	1006844	Identifier	SLJIT_ASSERT_STOP		1006782	0					
ANR	1006845	ArgumentList			1006782	1					
ANR	1006846	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1789:1:58295:58323	1006782	9	True				
ANR	1006847	Identifier	SLJIT_ERR_UNSUPPORTED		1006782	0					
ANR	1006848	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1006782	1					
ANR	1006849	Identifier	sljit_set_context		1006782	2					
ANR	1006850	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1006782	3					
ANR	1006851	Parameter	struct sljit_compiler * compiler	1776:52:57876:57906	1006782	0	True				
ANR	1006852	ParameterType	struct sljit_compiler *		1006782	0					
ANR	1006853	Identifier	compiler		1006782	1					
ANR	1006854	Parameter	sljit_si options	1777:1:57910:57925	1006782	1	True				
ANR	1006855	ParameterType	sljit_si		1006782	0					
ANR	1006856	Identifier	options		1006782	1					
ANR	1006857	Parameter	sljit_si args	1777:19:57928:57940	1006782	2	True				
ANR	1006858	ParameterType	sljit_si		1006782	0					
ANR	1006859	Identifier	args		1006782	1					
ANR	1006860	Parameter	sljit_si scratches	1777:34:57943:57960	1006782	3	True				
ANR	1006861	ParameterType	sljit_si		1006782	0					
ANR	1006862	Identifier	scratches		1006782	1					
ANR	1006863	Parameter	sljit_si saveds	1777:54:57963:57977	1006782	4	True				
ANR	1006864	ParameterType	sljit_si		1006782	0					
ANR	1006865	Identifier	saveds		1006782	1					
ANR	1006866	Parameter	sljit_si fscratches	1778:1:57981:57999	1006782	5	True				
ANR	1006867	ParameterType	sljit_si		1006782	0					
ANR	1006868	Identifier	fscratches		1006782	1					
ANR	1006869	Parameter	sljit_si fsaveds	1778:22:58002:58017	1006782	6	True				
ANR	1006870	ParameterType	sljit_si		1006782	0					
ANR	1006871	Identifier	fsaveds		1006782	1					
ANR	1006872	Parameter	sljit_si local_size	1778:40:58020:58038	1006782	7	True				
ANR	1006873	ParameterType	sljit_si		1006782	0					
ANR	1006874	Identifier	local_size		1006782	1					
ANR	1006875	CFGEntryNode	ENTRY		1006782		True				
ANR	1006876	CFGExitNode	EXIT		1006782		True				
ANR	1006877	Symbol	args		1006782						
ANR	1006878	Symbol	fscratches		1006782						
ANR	1006879	Symbol	local_size		1006782						
ANR	1006880	Symbol	fsaveds		1006782						
ANR	1006881	Symbol	scratches		1006782						
ANR	1006882	Symbol	saveds		1006782						
ANR	1006883	Symbol	options		1006782						
ANR	1006884	Symbol	compiler		1006782						
ANR	1006885	Symbol	SLJIT_ERR_UNSUPPORTED		1006782						
ANR	1006886	Function	sljit_emit_return	1792:0:58328:58611							
ANR	1006887	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1006886	0					
ANR	1006888	CompoundStatement		1793:0:58455:58611	1006886	0					
ANR	1006889	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1794:1:58458:58484	1006886	0	True				
ANR	1006890	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006886	0					
ANR	1006891	Callee	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006892	Identifier	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006893	ArgumentList	compiler		1006886	1					
ANR	1006894	Argument	compiler		1006886	0					
ANR	1006895	Identifier	compiler		1006886	0					
ANR	1006896	ExpressionStatement	SLJIT_UNUSED_ARG ( op )	1795:1:58487:58507	1006886	1	True				
ANR	1006897	CallExpression	SLJIT_UNUSED_ARG ( op )		1006886	0					
ANR	1006898	Callee	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006899	Identifier	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006900	ArgumentList	op		1006886	1					
ANR	1006901	Argument	op		1006886	0					
ANR	1006902	Identifier	op		1006886	0					
ANR	1006903	ExpressionStatement	SLJIT_UNUSED_ARG ( src )	1796:1:58510:58531	1006886	2	True				
ANR	1006904	CallExpression	SLJIT_UNUSED_ARG ( src )		1006886	0					
ANR	1006905	Callee	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006906	Identifier	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006907	ArgumentList	src		1006886	1					
ANR	1006908	Argument	src		1006886	0					
ANR	1006909	Identifier	src		1006886	0					
ANR	1006910	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	1797:1:58534:58556	1006886	3	True				
ANR	1006911	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1006886	0					
ANR	1006912	Callee	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006913	Identifier	SLJIT_UNUSED_ARG		1006886	0					
ANR	1006914	ArgumentList	srcw		1006886	1					
ANR	1006915	Argument	srcw		1006886	0					
ANR	1006916	Identifier	srcw		1006886	0					
ANR	1006917	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1798:1:58559:58578	1006886	4	True				
ANR	1006918	CallExpression	SLJIT_ASSERT_STOP ( )		1006886	0					
ANR	1006919	Callee	SLJIT_ASSERT_STOP		1006886	0					
ANR	1006920	Identifier	SLJIT_ASSERT_STOP		1006886	0					
ANR	1006921	ArgumentList			1006886	1					
ANR	1006922	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1799:1:58581:58609	1006886	5	True				
ANR	1006923	Identifier	SLJIT_ERR_UNSUPPORTED		1006886	0					
ANR	1006924	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1006886	1					
ANR	1006925	Identifier	sljit_emit_return		1006886	2					
ANR	1006926	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1006886	3					
ANR	1006927	Parameter	struct sljit_compiler * compiler	1792:52:58380:58410	1006886	0	True				
ANR	1006928	ParameterType	struct sljit_compiler *		1006886	0					
ANR	1006929	Identifier	compiler		1006886	1					
ANR	1006930	Parameter	sljit_si op	1792:85:58413:58423	1006886	1	True				
ANR	1006931	ParameterType	sljit_si		1006886	0					
ANR	1006932	Identifier	op		1006886	1					
ANR	1006933	Parameter	sljit_si src	1792:98:58426:58437	1006886	2	True				
ANR	1006934	ParameterType	sljit_si		1006886	0					
ANR	1006935	Identifier	src		1006886	1					
ANR	1006936	Parameter	sljit_sw srcw	1792:112:58440:58452	1006886	3	True				
ANR	1006937	ParameterType	sljit_sw		1006886	0					
ANR	1006938	Identifier	srcw		1006886	1					
ANR	1006939	CFGEntryNode	ENTRY		1006886		True				
ANR	1006940	CFGExitNode	EXIT		1006886		True				
ANR	1006941	Symbol	op		1006886						
ANR	1006942	Symbol	src		1006886						
ANR	1006943	Symbol	srcw		1006886						
ANR	1006944	Symbol	compiler		1006886						
ANR	1006945	Symbol	SLJIT_ERR_UNSUPPORTED		1006886						
ANR	1006946	Function	sljit_emit_fast_enter	1802:0:58614:58865							
ANR	1006947	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1006946	0					
ANR	1006948	CompoundStatement		1803:0:58732:58865	1006946	0					
ANR	1006949	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1804:1:58735:58761	1006946	0	True				
ANR	1006950	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006946	0					
ANR	1006951	Callee	SLJIT_UNUSED_ARG		1006946	0					
ANR	1006952	Identifier	SLJIT_UNUSED_ARG		1006946	0					
ANR	1006953	ArgumentList	compiler		1006946	1					
ANR	1006954	Argument	compiler		1006946	0					
ANR	1006955	Identifier	compiler		1006946	0					
ANR	1006956	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	1805:1:58764:58785	1006946	1	True				
ANR	1006957	CallExpression	SLJIT_UNUSED_ARG ( dst )		1006946	0					
ANR	1006958	Callee	SLJIT_UNUSED_ARG		1006946	0					
ANR	1006959	Identifier	SLJIT_UNUSED_ARG		1006946	0					
ANR	1006960	ArgumentList	dst		1006946	1					
ANR	1006961	Argument	dst		1006946	0					
ANR	1006962	Identifier	dst		1006946	0					
ANR	1006963	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	1806:1:58788:58810	1006946	2	True				
ANR	1006964	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1006946	0					
ANR	1006965	Callee	SLJIT_UNUSED_ARG		1006946	0					
ANR	1006966	Identifier	SLJIT_UNUSED_ARG		1006946	0					
ANR	1006967	ArgumentList	dstw		1006946	1					
ANR	1006968	Argument	dstw		1006946	0					
ANR	1006969	Identifier	dstw		1006946	0					
ANR	1006970	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1807:1:58813:58832	1006946	3	True				
ANR	1006971	CallExpression	SLJIT_ASSERT_STOP ( )		1006946	0					
ANR	1006972	Callee	SLJIT_ASSERT_STOP		1006946	0					
ANR	1006973	Identifier	SLJIT_ASSERT_STOP		1006946	0					
ANR	1006974	ArgumentList			1006946	1					
ANR	1006975	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1808:1:58835:58863	1006946	4	True				
ANR	1006976	Identifier	SLJIT_ERR_UNSUPPORTED		1006946	0					
ANR	1006977	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1006946	1					
ANR	1006978	Identifier	sljit_emit_fast_enter		1006946	2					
ANR	1006979	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1006946	3					
ANR	1006980	Parameter	struct sljit_compiler * compiler	1802:56:58670:58700	1006946	0	True				
ANR	1006981	ParameterType	struct sljit_compiler *		1006946	0					
ANR	1006982	Identifier	compiler		1006946	1					
ANR	1006983	Parameter	sljit_si dst	1802:89:58703:58714	1006946	1	True				
ANR	1006984	ParameterType	sljit_si		1006946	0					
ANR	1006985	Identifier	dst		1006946	1					
ANR	1006986	Parameter	sljit_sw dstw	1802:103:58717:58729	1006946	2	True				
ANR	1006987	ParameterType	sljit_sw		1006946	0					
ANR	1006988	Identifier	dstw		1006946	1					
ANR	1006989	CFGEntryNode	ENTRY		1006946		True				
ANR	1006990	CFGExitNode	EXIT		1006946		True				
ANR	1006991	Symbol	dst		1006946						
ANR	1006992	Symbol	compiler		1006946						
ANR	1006993	Symbol	dstw		1006946						
ANR	1006994	Symbol	SLJIT_ERR_UNSUPPORTED		1006946						
ANR	1006995	Function	sljit_emit_fast_return	1811:0:58868:59120							
ANR	1006996	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1006995	0					
ANR	1006997	CompoundStatement		1812:0:58987:59120	1006995	0					
ANR	1006998	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1813:1:58990:59016	1006995	0	True				
ANR	1006999	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1006995	0					
ANR	1007000	Callee	SLJIT_UNUSED_ARG		1006995	0					
ANR	1007001	Identifier	SLJIT_UNUSED_ARG		1006995	0					
ANR	1007002	ArgumentList	compiler		1006995	1					
ANR	1007003	Argument	compiler		1006995	0					
ANR	1007004	Identifier	compiler		1006995	0					
ANR	1007005	ExpressionStatement	SLJIT_UNUSED_ARG ( src )	1814:1:59019:59040	1006995	1	True				
ANR	1007006	CallExpression	SLJIT_UNUSED_ARG ( src )		1006995	0					
ANR	1007007	Callee	SLJIT_UNUSED_ARG		1006995	0					
ANR	1007008	Identifier	SLJIT_UNUSED_ARG		1006995	0					
ANR	1007009	ArgumentList	src		1006995	1					
ANR	1007010	Argument	src		1006995	0					
ANR	1007011	Identifier	src		1006995	0					
ANR	1007012	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	1815:1:59043:59065	1006995	2	True				
ANR	1007013	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1006995	0					
ANR	1007014	Callee	SLJIT_UNUSED_ARG		1006995	0					
ANR	1007015	Identifier	SLJIT_UNUSED_ARG		1006995	0					
ANR	1007016	ArgumentList	srcw		1006995	1					
ANR	1007017	Argument	srcw		1006995	0					
ANR	1007018	Identifier	srcw		1006995	0					
ANR	1007019	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1816:1:59068:59087	1006995	3	True				
ANR	1007020	CallExpression	SLJIT_ASSERT_STOP ( )		1006995	0					
ANR	1007021	Callee	SLJIT_ASSERT_STOP		1006995	0					
ANR	1007022	Identifier	SLJIT_ASSERT_STOP		1006995	0					
ANR	1007023	ArgumentList			1006995	1					
ANR	1007024	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1817:1:59090:59118	1006995	4	True				
ANR	1007025	Identifier	SLJIT_ERR_UNSUPPORTED		1006995	0					
ANR	1007026	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1006995	1					
ANR	1007027	Identifier	sljit_emit_fast_return		1006995	2					
ANR	1007028	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1006995	3					
ANR	1007029	Parameter	struct sljit_compiler * compiler	1811:57:58925:58955	1006995	0	True				
ANR	1007030	ParameterType	struct sljit_compiler *		1006995	0					
ANR	1007031	Identifier	compiler		1006995	1					
ANR	1007032	Parameter	sljit_si src	1811:90:58958:58969	1006995	1	True				
ANR	1007033	ParameterType	sljit_si		1006995	0					
ANR	1007034	Identifier	src		1006995	1					
ANR	1007035	Parameter	sljit_sw srcw	1811:104:58972:58984	1006995	2	True				
ANR	1007036	ParameterType	sljit_sw		1006995	0					
ANR	1007037	Identifier	srcw		1006995	1					
ANR	1007038	CFGEntryNode	ENTRY		1006995		True				
ANR	1007039	CFGExitNode	EXIT		1006995		True				
ANR	1007040	Symbol	src		1006995						
ANR	1007041	Symbol	srcw		1006995						
ANR	1007042	Symbol	compiler		1006995						
ANR	1007043	Symbol	SLJIT_ERR_UNSUPPORTED		1006995						
ANR	1007044	Function	sljit_emit_op0	1820:0:59123:59325							
ANR	1007045	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1007044	0					
ANR	1007046	CompoundStatement		1821:0:59218:59325	1007044	0					
ANR	1007047	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1822:1:59221:59247	1007044	0	True				
ANR	1007048	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007044	0					
ANR	1007049	Callee	SLJIT_UNUSED_ARG		1007044	0					
ANR	1007050	Identifier	SLJIT_UNUSED_ARG		1007044	0					
ANR	1007051	ArgumentList	compiler		1007044	1					
ANR	1007052	Argument	compiler		1007044	0					
ANR	1007053	Identifier	compiler		1007044	0					
ANR	1007054	ExpressionStatement	SLJIT_UNUSED_ARG ( op )	1823:1:59250:59270	1007044	1	True				
ANR	1007055	CallExpression	SLJIT_UNUSED_ARG ( op )		1007044	0					
ANR	1007056	Callee	SLJIT_UNUSED_ARG		1007044	0					
ANR	1007057	Identifier	SLJIT_UNUSED_ARG		1007044	0					
ANR	1007058	ArgumentList	op		1007044	1					
ANR	1007059	Argument	op		1007044	0					
ANR	1007060	Identifier	op		1007044	0					
ANR	1007061	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1824:1:59273:59292	1007044	2	True				
ANR	1007062	CallExpression	SLJIT_ASSERT_STOP ( )		1007044	0					
ANR	1007063	Callee	SLJIT_ASSERT_STOP		1007044	0					
ANR	1007064	Identifier	SLJIT_ASSERT_STOP		1007044	0					
ANR	1007065	ArgumentList			1007044	1					
ANR	1007066	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1825:1:59295:59323	1007044	3	True				
ANR	1007067	Identifier	SLJIT_ERR_UNSUPPORTED		1007044	0					
ANR	1007068	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007044	1					
ANR	1007069	Identifier	sljit_emit_op0		1007044	2					
ANR	1007070	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1007044	3					
ANR	1007071	Parameter	struct sljit_compiler * compiler	1820:49:59172:59202	1007044	0	True				
ANR	1007072	ParameterType	struct sljit_compiler *		1007044	0					
ANR	1007073	Identifier	compiler		1007044	1					
ANR	1007074	Parameter	sljit_si op	1820:82:59205:59215	1007044	1	True				
ANR	1007075	ParameterType	sljit_si		1007044	0					
ANR	1007076	Identifier	op		1007044	1					
ANR	1007077	CFGEntryNode	ENTRY		1007044		True				
ANR	1007078	CFGExitNode	EXIT		1007044		True				
ANR	1007079	Symbol	op		1007044						
ANR	1007080	Symbol	compiler		1007044						
ANR	1007081	Symbol	SLJIT_ERR_UNSUPPORTED		1007044						
ANR	1007082	Function	sljit_emit_op1	1828:0:59328:59688							
ANR	1007083	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1007082	0					
ANR	1007084	CompoundStatement		1831:0:59483:59688	1007082	0					
ANR	1007085	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1832:1:59486:59512	1007082	0	True				
ANR	1007086	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007082	0					
ANR	1007087	Callee	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007088	Identifier	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007089	ArgumentList	compiler		1007082	1					
ANR	1007090	Argument	compiler		1007082	0					
ANR	1007091	Identifier	compiler		1007082	0					
ANR	1007092	ExpressionStatement	SLJIT_UNUSED_ARG ( op )	1833:1:59515:59535	1007082	1	True				
ANR	1007093	CallExpression	SLJIT_UNUSED_ARG ( op )		1007082	0					
ANR	1007094	Callee	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007095	Identifier	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007096	ArgumentList	op		1007082	1					
ANR	1007097	Argument	op		1007082	0					
ANR	1007098	Identifier	op		1007082	0					
ANR	1007099	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	1834:1:59538:59559	1007082	2	True				
ANR	1007100	CallExpression	SLJIT_UNUSED_ARG ( dst )		1007082	0					
ANR	1007101	Callee	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007102	Identifier	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007103	ArgumentList	dst		1007082	1					
ANR	1007104	Argument	dst		1007082	0					
ANR	1007105	Identifier	dst		1007082	0					
ANR	1007106	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	1835:1:59562:59584	1007082	3	True				
ANR	1007107	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1007082	0					
ANR	1007108	Callee	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007109	Identifier	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007110	ArgumentList	dstw		1007082	1					
ANR	1007111	Argument	dstw		1007082	0					
ANR	1007112	Identifier	dstw		1007082	0					
ANR	1007113	ExpressionStatement	SLJIT_UNUSED_ARG ( src )	1836:1:59587:59608	1007082	4	True				
ANR	1007114	CallExpression	SLJIT_UNUSED_ARG ( src )		1007082	0					
ANR	1007115	Callee	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007116	Identifier	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007117	ArgumentList	src		1007082	1					
ANR	1007118	Argument	src		1007082	0					
ANR	1007119	Identifier	src		1007082	0					
ANR	1007120	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	1837:1:59611:59633	1007082	5	True				
ANR	1007121	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1007082	0					
ANR	1007122	Callee	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007123	Identifier	SLJIT_UNUSED_ARG		1007082	0					
ANR	1007124	ArgumentList	srcw		1007082	1					
ANR	1007125	Argument	srcw		1007082	0					
ANR	1007126	Identifier	srcw		1007082	0					
ANR	1007127	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1838:1:59636:59655	1007082	6	True				
ANR	1007128	CallExpression	SLJIT_ASSERT_STOP ( )		1007082	0					
ANR	1007129	Callee	SLJIT_ASSERT_STOP		1007082	0					
ANR	1007130	Identifier	SLJIT_ASSERT_STOP		1007082	0					
ANR	1007131	ArgumentList			1007082	1					
ANR	1007132	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1839:1:59658:59686	1007082	7	True				
ANR	1007133	Identifier	SLJIT_ERR_UNSUPPORTED		1007082	0					
ANR	1007134	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007082	1					
ANR	1007135	Identifier	sljit_emit_op1		1007082	2					
ANR	1007136	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1007082	3					
ANR	1007137	Parameter	struct sljit_compiler * compiler	1828:49:59377:59407	1007082	0	True				
ANR	1007138	ParameterType	struct sljit_compiler *		1007082	0					
ANR	1007139	Identifier	compiler		1007082	1					
ANR	1007140	Parameter	sljit_si op	1828:82:59410:59420	1007082	1	True				
ANR	1007141	ParameterType	sljit_si		1007082	0					
ANR	1007142	Identifier	op		1007082	1					
ANR	1007143	Parameter	sljit_si dst	1829:1:59424:59435	1007082	2	True				
ANR	1007144	ParameterType	sljit_si		1007082	0					
ANR	1007145	Identifier	dst		1007082	1					
ANR	1007146	Parameter	sljit_sw dstw	1829:15:59438:59450	1007082	3	True				
ANR	1007147	ParameterType	sljit_sw		1007082	0					
ANR	1007148	Identifier	dstw		1007082	1					
ANR	1007149	Parameter	sljit_si src	1830:1:59454:59465	1007082	4	True				
ANR	1007150	ParameterType	sljit_si		1007082	0					
ANR	1007151	Identifier	src		1007082	1					
ANR	1007152	Parameter	sljit_sw srcw	1830:15:59468:59480	1007082	5	True				
ANR	1007153	ParameterType	sljit_sw		1007082	0					
ANR	1007154	Identifier	srcw		1007082	1					
ANR	1007155	CFGEntryNode	ENTRY		1007082		True				
ANR	1007156	CFGExitNode	EXIT		1007082		True				
ANR	1007157	Symbol	op		1007082						
ANR	1007158	Symbol	dst		1007082						
ANR	1007159	Symbol	src		1007082						
ANR	1007160	Symbol	srcw		1007082						
ANR	1007161	Symbol	compiler		1007082						
ANR	1007162	Symbol	dstw		1007082						
ANR	1007163	Symbol	SLJIT_ERR_UNSUPPORTED		1007082						
ANR	1007164	Function	sljit_emit_op2	1842:0:59691:60138							
ANR	1007165	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1007164	0					
ANR	1007166	CompoundStatement		1846:0:59880:60138	1007164	0					
ANR	1007167	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1847:1:59883:59909	1007164	0	True				
ANR	1007168	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007164	0					
ANR	1007169	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007170	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007171	ArgumentList	compiler		1007164	1					
ANR	1007172	Argument	compiler		1007164	0					
ANR	1007173	Identifier	compiler		1007164	0					
ANR	1007174	ExpressionStatement	SLJIT_UNUSED_ARG ( op )	1848:1:59912:59932	1007164	1	True				
ANR	1007175	CallExpression	SLJIT_UNUSED_ARG ( op )		1007164	0					
ANR	1007176	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007177	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007178	ArgumentList	op		1007164	1					
ANR	1007179	Argument	op		1007164	0					
ANR	1007180	Identifier	op		1007164	0					
ANR	1007181	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	1849:1:59935:59956	1007164	2	True				
ANR	1007182	CallExpression	SLJIT_UNUSED_ARG ( dst )		1007164	0					
ANR	1007183	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007184	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007185	ArgumentList	dst		1007164	1					
ANR	1007186	Argument	dst		1007164	0					
ANR	1007187	Identifier	dst		1007164	0					
ANR	1007188	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	1850:1:59959:59981	1007164	3	True				
ANR	1007189	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1007164	0					
ANR	1007190	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007191	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007192	ArgumentList	dstw		1007164	1					
ANR	1007193	Argument	dstw		1007164	0					
ANR	1007194	Identifier	dstw		1007164	0					
ANR	1007195	ExpressionStatement	SLJIT_UNUSED_ARG ( src1 )	1851:1:59984:60006	1007164	4	True				
ANR	1007196	CallExpression	SLJIT_UNUSED_ARG ( src1 )		1007164	0					
ANR	1007197	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007198	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007199	ArgumentList	src1		1007164	1					
ANR	1007200	Argument	src1		1007164	0					
ANR	1007201	Identifier	src1		1007164	0					
ANR	1007202	ExpressionStatement	SLJIT_UNUSED_ARG ( src1w )	1852:1:60009:60032	1007164	5	True				
ANR	1007203	CallExpression	SLJIT_UNUSED_ARG ( src1w )		1007164	0					
ANR	1007204	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007205	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007206	ArgumentList	src1w		1007164	1					
ANR	1007207	Argument	src1w		1007164	0					
ANR	1007208	Identifier	src1w		1007164	0					
ANR	1007209	ExpressionStatement	SLJIT_UNUSED_ARG ( src2 )	1853:1:60035:60057	1007164	6	True				
ANR	1007210	CallExpression	SLJIT_UNUSED_ARG ( src2 )		1007164	0					
ANR	1007211	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007212	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007213	ArgumentList	src2		1007164	1					
ANR	1007214	Argument	src2		1007164	0					
ANR	1007215	Identifier	src2		1007164	0					
ANR	1007216	ExpressionStatement	SLJIT_UNUSED_ARG ( src2w )	1854:1:60060:60083	1007164	7	True				
ANR	1007217	CallExpression	SLJIT_UNUSED_ARG ( src2w )		1007164	0					
ANR	1007218	Callee	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007219	Identifier	SLJIT_UNUSED_ARG		1007164	0					
ANR	1007220	ArgumentList	src2w		1007164	1					
ANR	1007221	Argument	src2w		1007164	0					
ANR	1007222	Identifier	src2w		1007164	0					
ANR	1007223	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1855:1:60086:60105	1007164	8	True				
ANR	1007224	CallExpression	SLJIT_ASSERT_STOP ( )		1007164	0					
ANR	1007225	Callee	SLJIT_ASSERT_STOP		1007164	0					
ANR	1007226	Identifier	SLJIT_ASSERT_STOP		1007164	0					
ANR	1007227	ArgumentList			1007164	1					
ANR	1007228	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1856:1:60108:60136	1007164	9	True				
ANR	1007229	Identifier	SLJIT_ERR_UNSUPPORTED		1007164	0					
ANR	1007230	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007164	1					
ANR	1007231	Identifier	sljit_emit_op2		1007164	2					
ANR	1007232	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1007164	3					
ANR	1007233	Parameter	struct sljit_compiler * compiler	1842:49:59740:59770	1007164	0	True				
ANR	1007234	ParameterType	struct sljit_compiler *		1007164	0					
ANR	1007235	Identifier	compiler		1007164	1					
ANR	1007236	Parameter	sljit_si op	1842:82:59773:59783	1007164	1	True				
ANR	1007237	ParameterType	sljit_si		1007164	0					
ANR	1007238	Identifier	op		1007164	1					
ANR	1007239	Parameter	sljit_si dst	1843:1:59787:59798	1007164	2	True				
ANR	1007240	ParameterType	sljit_si		1007164	0					
ANR	1007241	Identifier	dst		1007164	1					
ANR	1007242	Parameter	sljit_sw dstw	1843:15:59801:59813	1007164	3	True				
ANR	1007243	ParameterType	sljit_sw		1007164	0					
ANR	1007244	Identifier	dstw		1007164	1					
ANR	1007245	Parameter	sljit_si src1	1844:1:59817:59829	1007164	4	True				
ANR	1007246	ParameterType	sljit_si		1007164	0					
ANR	1007247	Identifier	src1		1007164	1					
ANR	1007248	Parameter	sljit_sw src1w	1844:16:59832:59845	1007164	5	True				
ANR	1007249	ParameterType	sljit_sw		1007164	0					
ANR	1007250	Identifier	src1w		1007164	1					
ANR	1007251	Parameter	sljit_si src2	1845:1:59849:59861	1007164	6	True				
ANR	1007252	ParameterType	sljit_si		1007164	0					
ANR	1007253	Identifier	src2		1007164	1					
ANR	1007254	Parameter	sljit_sw src2w	1845:16:59864:59877	1007164	7	True				
ANR	1007255	ParameterType	sljit_sw		1007164	0					
ANR	1007256	Identifier	src2w		1007164	1					
ANR	1007257	CFGEntryNode	ENTRY		1007164		True				
ANR	1007258	CFGExitNode	EXIT		1007164		True				
ANR	1007259	Symbol	src2w		1007164						
ANR	1007260	Symbol	op		1007164						
ANR	1007261	Symbol	src1w		1007164						
ANR	1007262	Symbol	dst		1007164						
ANR	1007263	Symbol	src1		1007164						
ANR	1007264	Symbol	src2		1007164						
ANR	1007265	Symbol	compiler		1007164						
ANR	1007266	Symbol	dstw		1007164						
ANR	1007267	Symbol	SLJIT_ERR_UNSUPPORTED		1007164						
ANR	1007268	Function	sljit_get_register_index	1859:0:60141:60251							
ANR	1007269	FunctionDef	sljit_get_register_index (sljit_si reg)		1007268	0					
ANR	1007270	CompoundStatement		1860:0:60214:60251	1007268	0					
ANR	1007271	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1861:1:60217:60236	1007268	0	True				
ANR	1007272	CallExpression	SLJIT_ASSERT_STOP ( )		1007268	0					
ANR	1007273	Callee	SLJIT_ASSERT_STOP		1007268	0					
ANR	1007274	Identifier	SLJIT_ASSERT_STOP		1007268	0					
ANR	1007275	ArgumentList			1007268	1					
ANR	1007276	ReturnStatement	return reg ;	1862:1:60239:60249	1007268	1	True				
ANR	1007277	Identifier	reg		1007268	0					
ANR	1007278	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007268	1					
ANR	1007279	Identifier	sljit_get_register_index		1007268	2					
ANR	1007280	ParameterList	sljit_si reg		1007268	3					
ANR	1007281	Parameter	sljit_si reg	1859:59:60200:60211	1007268	0	True				
ANR	1007282	ParameterType	sljit_si		1007268	0					
ANR	1007283	Identifier	reg		1007268	1					
ANR	1007284	CFGEntryNode	ENTRY		1007268		True				
ANR	1007285	CFGExitNode	EXIT		1007268		True				
ANR	1007286	Symbol	reg		1007268						
ANR	1007287	Function	sljit_emit_op_custom	1865:0:60254:60518							
ANR	1007288	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1007287	0					
ANR	1007289	CompoundStatement		1867:0:60377:60518	1007287	0					
ANR	1007290	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1868:1:60380:60406	1007287	0	True				
ANR	1007291	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007287	0					
ANR	1007292	Callee	SLJIT_UNUSED_ARG		1007287	0					
ANR	1007293	Identifier	SLJIT_UNUSED_ARG		1007287	0					
ANR	1007294	ArgumentList	compiler		1007287	1					
ANR	1007295	Argument	compiler		1007287	0					
ANR	1007296	Identifier	compiler		1007287	0					
ANR	1007297	ExpressionStatement	SLJIT_UNUSED_ARG ( instruction )	1869:1:60409:60438	1007287	1	True				
ANR	1007298	CallExpression	SLJIT_UNUSED_ARG ( instruction )		1007287	0					
ANR	1007299	Callee	SLJIT_UNUSED_ARG		1007287	0					
ANR	1007300	Identifier	SLJIT_UNUSED_ARG		1007287	0					
ANR	1007301	ArgumentList	instruction		1007287	1					
ANR	1007302	Argument	instruction		1007287	0					
ANR	1007303	Identifier	instruction		1007287	0					
ANR	1007304	ExpressionStatement	SLJIT_UNUSED_ARG ( size )	1870:1:60441:60463	1007287	2	True				
ANR	1007305	CallExpression	SLJIT_UNUSED_ARG ( size )		1007287	0					
ANR	1007306	Callee	SLJIT_UNUSED_ARG		1007287	0					
ANR	1007307	Identifier	SLJIT_UNUSED_ARG		1007287	0					
ANR	1007308	ArgumentList	size		1007287	1					
ANR	1007309	Argument	size		1007287	0					
ANR	1007310	Identifier	size		1007287	0					
ANR	1007311	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1871:1:60466:60485	1007287	3	True				
ANR	1007312	CallExpression	SLJIT_ASSERT_STOP ( )		1007287	0					
ANR	1007313	Callee	SLJIT_ASSERT_STOP		1007287	0					
ANR	1007314	Identifier	SLJIT_ASSERT_STOP		1007287	0					
ANR	1007315	ArgumentList			1007287	1					
ANR	1007316	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1872:1:60488:60516	1007287	4	True				
ANR	1007317	Identifier	SLJIT_ERR_UNSUPPORTED		1007287	0					
ANR	1007318	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007287	1					
ANR	1007319	Identifier	sljit_emit_op_custom		1007287	2					
ANR	1007320	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1007287	3					
ANR	1007321	Parameter	struct sljit_compiler * compiler	1865:55:60309:60339	1007287	0	True				
ANR	1007322	ParameterType	struct sljit_compiler *		1007287	0					
ANR	1007323	Identifier	compiler		1007287	1					
ANR	1007324	Parameter	void * instruction	1866:1:60343:60359	1007287	1	True				
ANR	1007325	ParameterType	void *		1007287	0					
ANR	1007326	Identifier	instruction		1007287	1					
ANR	1007327	Parameter	sljit_si size	1866:20:60362:60374	1007287	2	True				
ANR	1007328	ParameterType	sljit_si		1007287	0					
ANR	1007329	Identifier	size		1007287	1					
ANR	1007330	CFGEntryNode	ENTRY		1007287		True				
ANR	1007331	CFGExitNode	EXIT		1007287		True				
ANR	1007332	Symbol	size		1007287						
ANR	1007333	Symbol	instruction		1007287						
ANR	1007334	Symbol	compiler		1007287						
ANR	1007335	Symbol	SLJIT_ERR_UNSUPPORTED		1007287						
ANR	1007336	Function	sljit_is_fpu_available	1875:0:60521:60619							
ANR	1007337	FunctionDef	sljit_is_fpu_available ()		1007336	0					
ANR	1007338	CompoundStatement		1876:0:60584:60619	1007336	0					
ANR	1007339	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1877:1:60587:60606	1007336	0	True				
ANR	1007340	CallExpression	SLJIT_ASSERT_STOP ( )		1007336	0					
ANR	1007341	Callee	SLJIT_ASSERT_STOP		1007336	0					
ANR	1007342	Identifier	SLJIT_ASSERT_STOP		1007336	0					
ANR	1007343	ArgumentList			1007336	1					
ANR	1007344	ReturnStatement	return 0 ;	1878:1:60609:60617	1007336	1	True				
ANR	1007345	PrimaryExpression	0		1007336	0					
ANR	1007346	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007336	1					
ANR	1007347	Identifier	sljit_is_fpu_available		1007336	2					
ANR	1007348	ParameterList			1007336	3					
ANR	1007349	CFGEntryNode	ENTRY		1007336		True				
ANR	1007350	CFGExitNode	EXIT		1007336		True				
ANR	1007351	Function	sljit_emit_fop1	1881:0:60622:60983							
ANR	1007352	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1007351	0					
ANR	1007353	CompoundStatement		1884:0:60778:60983	1007351	0					
ANR	1007354	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1885:1:60781:60807	1007351	0	True				
ANR	1007355	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007351	0					
ANR	1007356	Callee	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007357	Identifier	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007358	ArgumentList	compiler		1007351	1					
ANR	1007359	Argument	compiler		1007351	0					
ANR	1007360	Identifier	compiler		1007351	0					
ANR	1007361	ExpressionStatement	SLJIT_UNUSED_ARG ( op )	1886:1:60810:60830	1007351	1	True				
ANR	1007362	CallExpression	SLJIT_UNUSED_ARG ( op )		1007351	0					
ANR	1007363	Callee	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007364	Identifier	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007365	ArgumentList	op		1007351	1					
ANR	1007366	Argument	op		1007351	0					
ANR	1007367	Identifier	op		1007351	0					
ANR	1007368	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	1887:1:60833:60854	1007351	2	True				
ANR	1007369	CallExpression	SLJIT_UNUSED_ARG ( dst )		1007351	0					
ANR	1007370	Callee	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007371	Identifier	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007372	ArgumentList	dst		1007351	1					
ANR	1007373	Argument	dst		1007351	0					
ANR	1007374	Identifier	dst		1007351	0					
ANR	1007375	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	1888:1:60857:60879	1007351	3	True				
ANR	1007376	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1007351	0					
ANR	1007377	Callee	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007378	Identifier	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007379	ArgumentList	dstw		1007351	1					
ANR	1007380	Argument	dstw		1007351	0					
ANR	1007381	Identifier	dstw		1007351	0					
ANR	1007382	ExpressionStatement	SLJIT_UNUSED_ARG ( src )	1889:1:60882:60903	1007351	4	True				
ANR	1007383	CallExpression	SLJIT_UNUSED_ARG ( src )		1007351	0					
ANR	1007384	Callee	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007385	Identifier	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007386	ArgumentList	src		1007351	1					
ANR	1007387	Argument	src		1007351	0					
ANR	1007388	Identifier	src		1007351	0					
ANR	1007389	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	1890:1:60906:60928	1007351	5	True				
ANR	1007390	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1007351	0					
ANR	1007391	Callee	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007392	Identifier	SLJIT_UNUSED_ARG		1007351	0					
ANR	1007393	ArgumentList	srcw		1007351	1					
ANR	1007394	Argument	srcw		1007351	0					
ANR	1007395	Identifier	srcw		1007351	0					
ANR	1007396	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1891:1:60931:60950	1007351	6	True				
ANR	1007397	CallExpression	SLJIT_ASSERT_STOP ( )		1007351	0					
ANR	1007398	Callee	SLJIT_ASSERT_STOP		1007351	0					
ANR	1007399	Identifier	SLJIT_ASSERT_STOP		1007351	0					
ANR	1007400	ArgumentList			1007351	1					
ANR	1007401	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1892:1:60953:60981	1007351	7	True				
ANR	1007402	Identifier	SLJIT_ERR_UNSUPPORTED		1007351	0					
ANR	1007403	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007351	1					
ANR	1007404	Identifier	sljit_emit_fop1		1007351	2					
ANR	1007405	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1007351	3					
ANR	1007406	Parameter	struct sljit_compiler * compiler	1881:50:60672:60702	1007351	0	True				
ANR	1007407	ParameterType	struct sljit_compiler *		1007351	0					
ANR	1007408	Identifier	compiler		1007351	1					
ANR	1007409	Parameter	sljit_si op	1881:83:60705:60715	1007351	1	True				
ANR	1007410	ParameterType	sljit_si		1007351	0					
ANR	1007411	Identifier	op		1007351	1					
ANR	1007412	Parameter	sljit_si dst	1882:1:60719:60730	1007351	2	True				
ANR	1007413	ParameterType	sljit_si		1007351	0					
ANR	1007414	Identifier	dst		1007351	1					
ANR	1007415	Parameter	sljit_sw dstw	1882:15:60733:60745	1007351	3	True				
ANR	1007416	ParameterType	sljit_sw		1007351	0					
ANR	1007417	Identifier	dstw		1007351	1					
ANR	1007418	Parameter	sljit_si src	1883:1:60749:60760	1007351	4	True				
ANR	1007419	ParameterType	sljit_si		1007351	0					
ANR	1007420	Identifier	src		1007351	1					
ANR	1007421	Parameter	sljit_sw srcw	1883:15:60763:60775	1007351	5	True				
ANR	1007422	ParameterType	sljit_sw		1007351	0					
ANR	1007423	Identifier	srcw		1007351	1					
ANR	1007424	CFGEntryNode	ENTRY		1007351		True				
ANR	1007425	CFGExitNode	EXIT		1007351		True				
ANR	1007426	Symbol	op		1007351						
ANR	1007427	Symbol	dst		1007351						
ANR	1007428	Symbol	src		1007351						
ANR	1007429	Symbol	srcw		1007351						
ANR	1007430	Symbol	compiler		1007351						
ANR	1007431	Symbol	dstw		1007351						
ANR	1007432	Symbol	SLJIT_ERR_UNSUPPORTED		1007351						
ANR	1007433	Function	sljit_emit_fop2	1895:0:60986:61434							
ANR	1007434	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1007433	0					
ANR	1007435	CompoundStatement		1899:0:61176:61434	1007433	0					
ANR	1007436	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1900:1:61179:61205	1007433	0	True				
ANR	1007437	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007433	0					
ANR	1007438	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007439	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007440	ArgumentList	compiler		1007433	1					
ANR	1007441	Argument	compiler		1007433	0					
ANR	1007442	Identifier	compiler		1007433	0					
ANR	1007443	ExpressionStatement	SLJIT_UNUSED_ARG ( op )	1901:1:61208:61228	1007433	1	True				
ANR	1007444	CallExpression	SLJIT_UNUSED_ARG ( op )		1007433	0					
ANR	1007445	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007446	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007447	ArgumentList	op		1007433	1					
ANR	1007448	Argument	op		1007433	0					
ANR	1007449	Identifier	op		1007433	0					
ANR	1007450	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	1902:1:61231:61252	1007433	2	True				
ANR	1007451	CallExpression	SLJIT_UNUSED_ARG ( dst )		1007433	0					
ANR	1007452	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007453	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007454	ArgumentList	dst		1007433	1					
ANR	1007455	Argument	dst		1007433	0					
ANR	1007456	Identifier	dst		1007433	0					
ANR	1007457	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	1903:1:61255:61277	1007433	3	True				
ANR	1007458	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1007433	0					
ANR	1007459	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007460	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007461	ArgumentList	dstw		1007433	1					
ANR	1007462	Argument	dstw		1007433	0					
ANR	1007463	Identifier	dstw		1007433	0					
ANR	1007464	ExpressionStatement	SLJIT_UNUSED_ARG ( src1 )	1904:1:61280:61302	1007433	4	True				
ANR	1007465	CallExpression	SLJIT_UNUSED_ARG ( src1 )		1007433	0					
ANR	1007466	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007467	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007468	ArgumentList	src1		1007433	1					
ANR	1007469	Argument	src1		1007433	0					
ANR	1007470	Identifier	src1		1007433	0					
ANR	1007471	ExpressionStatement	SLJIT_UNUSED_ARG ( src1w )	1905:1:61305:61328	1007433	5	True				
ANR	1007472	CallExpression	SLJIT_UNUSED_ARG ( src1w )		1007433	0					
ANR	1007473	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007474	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007475	ArgumentList	src1w		1007433	1					
ANR	1007476	Argument	src1w		1007433	0					
ANR	1007477	Identifier	src1w		1007433	0					
ANR	1007478	ExpressionStatement	SLJIT_UNUSED_ARG ( src2 )	1906:1:61331:61353	1007433	6	True				
ANR	1007479	CallExpression	SLJIT_UNUSED_ARG ( src2 )		1007433	0					
ANR	1007480	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007481	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007482	ArgumentList	src2		1007433	1					
ANR	1007483	Argument	src2		1007433	0					
ANR	1007484	Identifier	src2		1007433	0					
ANR	1007485	ExpressionStatement	SLJIT_UNUSED_ARG ( src2w )	1907:1:61356:61379	1007433	7	True				
ANR	1007486	CallExpression	SLJIT_UNUSED_ARG ( src2w )		1007433	0					
ANR	1007487	Callee	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007488	Identifier	SLJIT_UNUSED_ARG		1007433	0					
ANR	1007489	ArgumentList	src2w		1007433	1					
ANR	1007490	Argument	src2w		1007433	0					
ANR	1007491	Identifier	src2w		1007433	0					
ANR	1007492	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1908:1:61382:61401	1007433	8	True				
ANR	1007493	CallExpression	SLJIT_ASSERT_STOP ( )		1007433	0					
ANR	1007494	Callee	SLJIT_ASSERT_STOP		1007433	0					
ANR	1007495	Identifier	SLJIT_ASSERT_STOP		1007433	0					
ANR	1007496	ArgumentList			1007433	1					
ANR	1007497	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1909:1:61404:61432	1007433	9	True				
ANR	1007498	Identifier	SLJIT_ERR_UNSUPPORTED		1007433	0					
ANR	1007499	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007433	1					
ANR	1007500	Identifier	sljit_emit_fop2		1007433	2					
ANR	1007501	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1007433	3					
ANR	1007502	Parameter	struct sljit_compiler * compiler	1895:50:61036:61066	1007433	0	True				
ANR	1007503	ParameterType	struct sljit_compiler *		1007433	0					
ANR	1007504	Identifier	compiler		1007433	1					
ANR	1007505	Parameter	sljit_si op	1895:83:61069:61079	1007433	1	True				
ANR	1007506	ParameterType	sljit_si		1007433	0					
ANR	1007507	Identifier	op		1007433	1					
ANR	1007508	Parameter	sljit_si dst	1896:1:61083:61094	1007433	2	True				
ANR	1007509	ParameterType	sljit_si		1007433	0					
ANR	1007510	Identifier	dst		1007433	1					
ANR	1007511	Parameter	sljit_sw dstw	1896:15:61097:61109	1007433	3	True				
ANR	1007512	ParameterType	sljit_sw		1007433	0					
ANR	1007513	Identifier	dstw		1007433	1					
ANR	1007514	Parameter	sljit_si src1	1897:1:61113:61125	1007433	4	True				
ANR	1007515	ParameterType	sljit_si		1007433	0					
ANR	1007516	Identifier	src1		1007433	1					
ANR	1007517	Parameter	sljit_sw src1w	1897:16:61128:61141	1007433	5	True				
ANR	1007518	ParameterType	sljit_sw		1007433	0					
ANR	1007519	Identifier	src1w		1007433	1					
ANR	1007520	Parameter	sljit_si src2	1898:1:61145:61157	1007433	6	True				
ANR	1007521	ParameterType	sljit_si		1007433	0					
ANR	1007522	Identifier	src2		1007433	1					
ANR	1007523	Parameter	sljit_sw src2w	1898:16:61160:61173	1007433	7	True				
ANR	1007524	ParameterType	sljit_sw		1007433	0					
ANR	1007525	Identifier	src2w		1007433	1					
ANR	1007526	CFGEntryNode	ENTRY		1007433		True				
ANR	1007527	CFGExitNode	EXIT		1007433		True				
ANR	1007528	Symbol	src2w		1007433						
ANR	1007529	Symbol	op		1007433						
ANR	1007530	Symbol	src1w		1007433						
ANR	1007531	Symbol	dst		1007433						
ANR	1007532	Symbol	src1		1007433						
ANR	1007533	Symbol	src2		1007433						
ANR	1007534	Symbol	compiler		1007433						
ANR	1007535	Symbol	dstw		1007433						
ANR	1007536	Symbol	SLJIT_ERR_UNSUPPORTED		1007433						
ANR	1007537	Function	sljit_emit_label	1912:25:61462:61599							
ANR	1007538	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1007537	0					
ANR	1007539	CompoundStatement		1913:0:61532:61599	1007537	0					
ANR	1007540	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1914:1:61535:61561	1007537	0	True				
ANR	1007541	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007537	0					
ANR	1007542	Callee	SLJIT_UNUSED_ARG		1007537	0					
ANR	1007543	Identifier	SLJIT_UNUSED_ARG		1007537	0					
ANR	1007544	ArgumentList	compiler		1007537	1					
ANR	1007545	Argument	compiler		1007537	0					
ANR	1007546	Identifier	compiler		1007537	0					
ANR	1007547	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1915:1:61564:61583	1007537	1	True				
ANR	1007548	CallExpression	SLJIT_ASSERT_STOP ( )		1007537	0					
ANR	1007549	Callee	SLJIT_ASSERT_STOP		1007537	0					
ANR	1007550	Identifier	SLJIT_ASSERT_STOP		1007537	0					
ANR	1007551	ArgumentList			1007537	1					
ANR	1007552	ReturnStatement	return NULL ;	1916:1:61586:61597	1007537	2	True				
ANR	1007553	Identifier	NULL		1007537	0					
ANR	1007554	ReturnType	struct sljit_label *		1007537	1					
ANR	1007555	Identifier	sljit_emit_label		1007537	2					
ANR	1007556	ParameterList	struct sljit_compiler * compiler		1007537	3					
ANR	1007557	Parameter	struct sljit_compiler * compiler	1912:62:61499:61529	1007537	0	True				
ANR	1007558	ParameterType	struct sljit_compiler *		1007537	0					
ANR	1007559	Identifier	compiler		1007537	1					
ANR	1007560	CFGEntryNode	ENTRY		1007537		True				
ANR	1007561	CFGExitNode	EXIT		1007537		True				
ANR	1007562	Symbol	NULL		1007537						
ANR	1007563	Symbol	compiler		1007537						
ANR	1007564	Function	sljit_emit_jump	1919:25:61627:61802							
ANR	1007565	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1007564	0					
ANR	1007566	CompoundStatement		1920:0:61710:61802	1007564	0					
ANR	1007567	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1921:1:61713:61739	1007564	0	True				
ANR	1007568	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007564	0					
ANR	1007569	Callee	SLJIT_UNUSED_ARG		1007564	0					
ANR	1007570	Identifier	SLJIT_UNUSED_ARG		1007564	0					
ANR	1007571	ArgumentList	compiler		1007564	1					
ANR	1007572	Argument	compiler		1007564	0					
ANR	1007573	Identifier	compiler		1007564	0					
ANR	1007574	ExpressionStatement	SLJIT_UNUSED_ARG ( type )	1922:1:61742:61764	1007564	1	True				
ANR	1007575	CallExpression	SLJIT_UNUSED_ARG ( type )		1007564	0					
ANR	1007576	Callee	SLJIT_UNUSED_ARG		1007564	0					
ANR	1007577	Identifier	SLJIT_UNUSED_ARG		1007564	0					
ANR	1007578	ArgumentList	type		1007564	1					
ANR	1007579	Argument	type		1007564	0					
ANR	1007580	Identifier	type		1007564	0					
ANR	1007581	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1923:1:61767:61786	1007564	2	True				
ANR	1007582	CallExpression	SLJIT_ASSERT_STOP ( )		1007564	0					
ANR	1007583	Callee	SLJIT_ASSERT_STOP		1007564	0					
ANR	1007584	Identifier	SLJIT_ASSERT_STOP		1007564	0					
ANR	1007585	ArgumentList			1007564	1					
ANR	1007586	ReturnStatement	return NULL ;	1924:1:61789:61800	1007564	3	True				
ANR	1007587	Identifier	NULL		1007564	0					
ANR	1007588	ReturnType	struct sljit_jump *		1007564	1					
ANR	1007589	Identifier	sljit_emit_jump		1007564	2					
ANR	1007590	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1007564	3					
ANR	1007591	Parameter	struct sljit_compiler * compiler	1919:60:61662:61692	1007564	0	True				
ANR	1007592	ParameterType	struct sljit_compiler *		1007564	0					
ANR	1007593	Identifier	compiler		1007564	1					
ANR	1007594	Parameter	sljit_si type	1919:93:61695:61707	1007564	1	True				
ANR	1007595	ParameterType	sljit_si		1007564	0					
ANR	1007596	Identifier	type		1007564	1					
ANR	1007597	CFGEntryNode	ENTRY		1007564		True				
ANR	1007598	CFGExitNode	EXIT		1007564		True				
ANR	1007599	Symbol	NULL		1007564						
ANR	1007600	Symbol	compiler		1007564						
ANR	1007601	Symbol	type		1007564						
ANR	1007602	Function	sljit_emit_cmp	1927:25:61830:62170							
ANR	1007603	FunctionDef	"sljit_emit_cmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1007602	0					
ANR	1007604	CompoundStatement		1930:0:61976:62170	1007602	0					
ANR	1007605	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1931:1:61979:62005	1007602	0	True				
ANR	1007606	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007602	0					
ANR	1007607	Callee	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007608	Identifier	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007609	ArgumentList	compiler		1007602	1					
ANR	1007610	Argument	compiler		1007602	0					
ANR	1007611	Identifier	compiler		1007602	0					
ANR	1007612	ExpressionStatement	SLJIT_UNUSED_ARG ( type )	1932:1:62008:62030	1007602	1	True				
ANR	1007613	CallExpression	SLJIT_UNUSED_ARG ( type )		1007602	0					
ANR	1007614	Callee	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007615	Identifier	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007616	ArgumentList	type		1007602	1					
ANR	1007617	Argument	type		1007602	0					
ANR	1007618	Identifier	type		1007602	0					
ANR	1007619	ExpressionStatement	SLJIT_UNUSED_ARG ( src1 )	1933:1:62033:62055	1007602	2	True				
ANR	1007620	CallExpression	SLJIT_UNUSED_ARG ( src1 )		1007602	0					
ANR	1007621	Callee	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007622	Identifier	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007623	ArgumentList	src1		1007602	1					
ANR	1007624	Argument	src1		1007602	0					
ANR	1007625	Identifier	src1		1007602	0					
ANR	1007626	ExpressionStatement	SLJIT_UNUSED_ARG ( src1w )	1934:1:62058:62081	1007602	3	True				
ANR	1007627	CallExpression	SLJIT_UNUSED_ARG ( src1w )		1007602	0					
ANR	1007628	Callee	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007629	Identifier	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007630	ArgumentList	src1w		1007602	1					
ANR	1007631	Argument	src1w		1007602	0					
ANR	1007632	Identifier	src1w		1007602	0					
ANR	1007633	ExpressionStatement	SLJIT_UNUSED_ARG ( src2 )	1935:1:62084:62106	1007602	4	True				
ANR	1007634	CallExpression	SLJIT_UNUSED_ARG ( src2 )		1007602	0					
ANR	1007635	Callee	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007636	Identifier	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007637	ArgumentList	src2		1007602	1					
ANR	1007638	Argument	src2		1007602	0					
ANR	1007639	Identifier	src2		1007602	0					
ANR	1007640	ExpressionStatement	SLJIT_UNUSED_ARG ( src2w )	1936:1:62109:62132	1007602	5	True				
ANR	1007641	CallExpression	SLJIT_UNUSED_ARG ( src2w )		1007602	0					
ANR	1007642	Callee	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007643	Identifier	SLJIT_UNUSED_ARG		1007602	0					
ANR	1007644	ArgumentList	src2w		1007602	1					
ANR	1007645	Argument	src2w		1007602	0					
ANR	1007646	Identifier	src2w		1007602	0					
ANR	1007647	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1937:1:62135:62154	1007602	6	True				
ANR	1007648	CallExpression	SLJIT_ASSERT_STOP ( )		1007602	0					
ANR	1007649	Callee	SLJIT_ASSERT_STOP		1007602	0					
ANR	1007650	Identifier	SLJIT_ASSERT_STOP		1007602	0					
ANR	1007651	ArgumentList			1007602	1					
ANR	1007652	ReturnStatement	return NULL ;	1938:1:62157:62168	1007602	7	True				
ANR	1007653	Identifier	NULL		1007602	0					
ANR	1007654	ReturnType	struct sljit_jump *		1007602	1					
ANR	1007655	Identifier	sljit_emit_cmp		1007602	2					
ANR	1007656	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1007602	3					
ANR	1007657	Parameter	struct sljit_compiler * compiler	1927:59:61864:61894	1007602	0	True				
ANR	1007658	ParameterType	struct sljit_compiler *		1007602	0					
ANR	1007659	Identifier	compiler		1007602	1					
ANR	1007660	Parameter	sljit_si type	1927:92:61897:61909	1007602	1	True				
ANR	1007661	ParameterType	sljit_si		1007602	0					
ANR	1007662	Identifier	type		1007602	1					
ANR	1007663	Parameter	sljit_si src1	1928:1:61913:61925	1007602	2	True				
ANR	1007664	ParameterType	sljit_si		1007602	0					
ANR	1007665	Identifier	src1		1007602	1					
ANR	1007666	Parameter	sljit_sw src1w	1928:16:61928:61941	1007602	3	True				
ANR	1007667	ParameterType	sljit_sw		1007602	0					
ANR	1007668	Identifier	src1w		1007602	1					
ANR	1007669	Parameter	sljit_si src2	1929:1:61945:61957	1007602	4	True				
ANR	1007670	ParameterType	sljit_si		1007602	0					
ANR	1007671	Identifier	src2		1007602	1					
ANR	1007672	Parameter	sljit_sw src2w	1929:16:61960:61973	1007602	5	True				
ANR	1007673	ParameterType	sljit_sw		1007602	0					
ANR	1007674	Identifier	src2w		1007602	1					
ANR	1007675	CFGEntryNode	ENTRY		1007602		True				
ANR	1007676	CFGExitNode	EXIT		1007602		True				
ANR	1007677	Symbol	src2w		1007602						
ANR	1007678	Symbol	src1w		1007602						
ANR	1007679	Symbol	NULL		1007602						
ANR	1007680	Symbol	src1		1007602						
ANR	1007681	Symbol	src2		1007602						
ANR	1007682	Symbol	compiler		1007602						
ANR	1007683	Symbol	type		1007602						
ANR	1007684	Function	sljit_emit_fcmp	1941:25:62198:62539							
ANR	1007685	FunctionDef	"sljit_emit_fcmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1007684	0					
ANR	1007686	CompoundStatement		1944:0:62345:62539	1007684	0					
ANR	1007687	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1945:1:62348:62374	1007684	0	True				
ANR	1007688	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007684	0					
ANR	1007689	Callee	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007690	Identifier	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007691	ArgumentList	compiler		1007684	1					
ANR	1007692	Argument	compiler		1007684	0					
ANR	1007693	Identifier	compiler		1007684	0					
ANR	1007694	ExpressionStatement	SLJIT_UNUSED_ARG ( type )	1946:1:62377:62399	1007684	1	True				
ANR	1007695	CallExpression	SLJIT_UNUSED_ARG ( type )		1007684	0					
ANR	1007696	Callee	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007697	Identifier	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007698	ArgumentList	type		1007684	1					
ANR	1007699	Argument	type		1007684	0					
ANR	1007700	Identifier	type		1007684	0					
ANR	1007701	ExpressionStatement	SLJIT_UNUSED_ARG ( src1 )	1947:1:62402:62424	1007684	2	True				
ANR	1007702	CallExpression	SLJIT_UNUSED_ARG ( src1 )		1007684	0					
ANR	1007703	Callee	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007704	Identifier	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007705	ArgumentList	src1		1007684	1					
ANR	1007706	Argument	src1		1007684	0					
ANR	1007707	Identifier	src1		1007684	0					
ANR	1007708	ExpressionStatement	SLJIT_UNUSED_ARG ( src1w )	1948:1:62427:62450	1007684	3	True				
ANR	1007709	CallExpression	SLJIT_UNUSED_ARG ( src1w )		1007684	0					
ANR	1007710	Callee	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007711	Identifier	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007712	ArgumentList	src1w		1007684	1					
ANR	1007713	Argument	src1w		1007684	0					
ANR	1007714	Identifier	src1w		1007684	0					
ANR	1007715	ExpressionStatement	SLJIT_UNUSED_ARG ( src2 )	1949:1:62453:62475	1007684	4	True				
ANR	1007716	CallExpression	SLJIT_UNUSED_ARG ( src2 )		1007684	0					
ANR	1007717	Callee	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007718	Identifier	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007719	ArgumentList	src2		1007684	1					
ANR	1007720	Argument	src2		1007684	0					
ANR	1007721	Identifier	src2		1007684	0					
ANR	1007722	ExpressionStatement	SLJIT_UNUSED_ARG ( src2w )	1950:1:62478:62501	1007684	5	True				
ANR	1007723	CallExpression	SLJIT_UNUSED_ARG ( src2w )		1007684	0					
ANR	1007724	Callee	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007725	Identifier	SLJIT_UNUSED_ARG		1007684	0					
ANR	1007726	ArgumentList	src2w		1007684	1					
ANR	1007727	Argument	src2w		1007684	0					
ANR	1007728	Identifier	src2w		1007684	0					
ANR	1007729	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1951:1:62504:62523	1007684	6	True				
ANR	1007730	CallExpression	SLJIT_ASSERT_STOP ( )		1007684	0					
ANR	1007731	Callee	SLJIT_ASSERT_STOP		1007684	0					
ANR	1007732	Identifier	SLJIT_ASSERT_STOP		1007684	0					
ANR	1007733	ArgumentList			1007684	1					
ANR	1007734	ReturnStatement	return NULL ;	1952:1:62526:62537	1007684	7	True				
ANR	1007735	Identifier	NULL		1007684	0					
ANR	1007736	ReturnType	struct sljit_jump *		1007684	1					
ANR	1007737	Identifier	sljit_emit_fcmp		1007684	2					
ANR	1007738	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1007684	3					
ANR	1007739	Parameter	struct sljit_compiler * compiler	1941:60:62233:62263	1007684	0	True				
ANR	1007740	ParameterType	struct sljit_compiler *		1007684	0					
ANR	1007741	Identifier	compiler		1007684	1					
ANR	1007742	Parameter	sljit_si type	1941:93:62266:62278	1007684	1	True				
ANR	1007743	ParameterType	sljit_si		1007684	0					
ANR	1007744	Identifier	type		1007684	1					
ANR	1007745	Parameter	sljit_si src1	1942:1:62282:62294	1007684	2	True				
ANR	1007746	ParameterType	sljit_si		1007684	0					
ANR	1007747	Identifier	src1		1007684	1					
ANR	1007748	Parameter	sljit_sw src1w	1942:16:62297:62310	1007684	3	True				
ANR	1007749	ParameterType	sljit_sw		1007684	0					
ANR	1007750	Identifier	src1w		1007684	1					
ANR	1007751	Parameter	sljit_si src2	1943:1:62314:62326	1007684	4	True				
ANR	1007752	ParameterType	sljit_si		1007684	0					
ANR	1007753	Identifier	src2		1007684	1					
ANR	1007754	Parameter	sljit_sw src2w	1943:16:62329:62342	1007684	5	True				
ANR	1007755	ParameterType	sljit_sw		1007684	0					
ANR	1007756	Identifier	src2w		1007684	1					
ANR	1007757	CFGEntryNode	ENTRY		1007684		True				
ANR	1007758	CFGExitNode	EXIT		1007684		True				
ANR	1007759	Symbol	src2w		1007684						
ANR	1007760	Symbol	src1w		1007684						
ANR	1007761	Symbol	NULL		1007684						
ANR	1007762	Symbol	src1		1007684						
ANR	1007763	Symbol	src2		1007684						
ANR	1007764	Symbol	compiler		1007684						
ANR	1007765	Symbol	type		1007684						
ANR	1007766	Function	sljit_set_label	1955:0:62542:62715							
ANR	1007767	FunctionDef	"sljit_set_label (struct sljit_jump * jump , struct sljit_label * label)"		1007766	0					
ANR	1007768	CompoundStatement		1956:0:62640:62715	1007766	0					
ANR	1007769	ExpressionStatement	SLJIT_UNUSED_ARG ( jump )	1957:1:62643:62665	1007766	0	True				
ANR	1007770	CallExpression	SLJIT_UNUSED_ARG ( jump )		1007766	0					
ANR	1007771	Callee	SLJIT_UNUSED_ARG		1007766	0					
ANR	1007772	Identifier	SLJIT_UNUSED_ARG		1007766	0					
ANR	1007773	ArgumentList	jump		1007766	1					
ANR	1007774	Argument	jump		1007766	0					
ANR	1007775	Identifier	jump		1007766	0					
ANR	1007776	ExpressionStatement	SLJIT_UNUSED_ARG ( label )	1958:1:62668:62691	1007766	1	True				
ANR	1007777	CallExpression	SLJIT_UNUSED_ARG ( label )		1007766	0					
ANR	1007778	Callee	SLJIT_UNUSED_ARG		1007766	0					
ANR	1007779	Identifier	SLJIT_UNUSED_ARG		1007766	0					
ANR	1007780	ArgumentList	label		1007766	1					
ANR	1007781	Argument	label		1007766	0					
ANR	1007782	Identifier	label		1007766	0					
ANR	1007783	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1959:1:62694:62713	1007766	2	True				
ANR	1007784	CallExpression	SLJIT_ASSERT_STOP ( )		1007766	0					
ANR	1007785	Callee	SLJIT_ASSERT_STOP		1007766	0					
ANR	1007786	Identifier	SLJIT_ASSERT_STOP		1007766	0					
ANR	1007787	ArgumentList			1007766	1					
ANR	1007788	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1007766	1					
ANR	1007789	Identifier	sljit_set_label		1007766	2					
ANR	1007790	ParameterList	"struct sljit_jump * jump , struct sljit_label * label"		1007766	3					
ANR	1007791	Parameter	struct sljit_jump * jump	1955:46:62588:62610	1007766	0	True				
ANR	1007792	ParameterType	struct sljit_jump *		1007766	0					
ANR	1007793	Identifier	jump		1007766	1					
ANR	1007794	Parameter	struct sljit_label * label	1955:71:62613:62637	1007766	1	True				
ANR	1007795	ParameterType	struct sljit_label *		1007766	0					
ANR	1007796	Identifier	label		1007766	1					
ANR	1007797	CFGEntryNode	ENTRY		1007766		True				
ANR	1007798	CFGExitNode	EXIT		1007766		True				
ANR	1007799	Symbol	label		1007766						
ANR	1007800	Symbol	jump		1007766						
ANR	1007801	Function	sljit_set_target	1962:0:62718:62883							
ANR	1007802	FunctionDef	"sljit_set_target (struct sljit_jump * jump , sljit_uw target)"		1007801	0					
ANR	1007803	CompoundStatement		1963:0:62807:62883	1007801	0					
ANR	1007804	ExpressionStatement	SLJIT_UNUSED_ARG ( jump )	1964:1:62810:62832	1007801	0	True				
ANR	1007805	CallExpression	SLJIT_UNUSED_ARG ( jump )		1007801	0					
ANR	1007806	Callee	SLJIT_UNUSED_ARG		1007801	0					
ANR	1007807	Identifier	SLJIT_UNUSED_ARG		1007801	0					
ANR	1007808	ArgumentList	jump		1007801	1					
ANR	1007809	Argument	jump		1007801	0					
ANR	1007810	Identifier	jump		1007801	0					
ANR	1007811	ExpressionStatement	SLJIT_UNUSED_ARG ( target )	1965:1:62835:62859	1007801	1	True				
ANR	1007812	CallExpression	SLJIT_UNUSED_ARG ( target )		1007801	0					
ANR	1007813	Callee	SLJIT_UNUSED_ARG		1007801	0					
ANR	1007814	Identifier	SLJIT_UNUSED_ARG		1007801	0					
ANR	1007815	ArgumentList	target		1007801	1					
ANR	1007816	Argument	target		1007801	0					
ANR	1007817	Identifier	target		1007801	0					
ANR	1007818	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1966:1:62862:62881	1007801	2	True				
ANR	1007819	CallExpression	SLJIT_ASSERT_STOP ( )		1007801	0					
ANR	1007820	Callee	SLJIT_ASSERT_STOP		1007801	0					
ANR	1007821	Identifier	SLJIT_ASSERT_STOP		1007801	0					
ANR	1007822	ArgumentList			1007801	1					
ANR	1007823	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1007801	1					
ANR	1007824	Identifier	sljit_set_target		1007801	2					
ANR	1007825	ParameterList	"struct sljit_jump * jump , sljit_uw target"		1007801	3					
ANR	1007826	Parameter	struct sljit_jump * jump	1962:47:62765:62787	1007801	0	True				
ANR	1007827	ParameterType	struct sljit_jump *		1007801	0					
ANR	1007828	Identifier	jump		1007801	1					
ANR	1007829	Parameter	sljit_uw target	1962:72:62790:62804	1007801	1	True				
ANR	1007830	ParameterType	sljit_uw		1007801	0					
ANR	1007831	Identifier	target		1007801	1					
ANR	1007832	CFGEntryNode	ENTRY		1007801		True				
ANR	1007833	CFGExitNode	EXIT		1007801		True				
ANR	1007834	Symbol	jump		1007801						
ANR	1007835	Symbol	target		1007801						
ANR	1007836	Function	sljit_emit_ijump	1969:0:62886:63172							
ANR	1007837	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1007836	0					
ANR	1007838	CompoundStatement		1970:0:63014:63172	1007836	0					
ANR	1007839	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1971:1:63017:63043	1007836	0	True				
ANR	1007840	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007836	0					
ANR	1007841	Callee	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007842	Identifier	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007843	ArgumentList	compiler		1007836	1					
ANR	1007844	Argument	compiler		1007836	0					
ANR	1007845	Identifier	compiler		1007836	0					
ANR	1007846	ExpressionStatement	SLJIT_UNUSED_ARG ( type )	1972:1:63046:63068	1007836	1	True				
ANR	1007847	CallExpression	SLJIT_UNUSED_ARG ( type )		1007836	0					
ANR	1007848	Callee	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007849	Identifier	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007850	ArgumentList	type		1007836	1					
ANR	1007851	Argument	type		1007836	0					
ANR	1007852	Identifier	type		1007836	0					
ANR	1007853	ExpressionStatement	SLJIT_UNUSED_ARG ( src )	1973:1:63071:63092	1007836	2	True				
ANR	1007854	CallExpression	SLJIT_UNUSED_ARG ( src )		1007836	0					
ANR	1007855	Callee	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007856	Identifier	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007857	ArgumentList	src		1007836	1					
ANR	1007858	Argument	src		1007836	0					
ANR	1007859	Identifier	src		1007836	0					
ANR	1007860	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	1974:1:63095:63117	1007836	3	True				
ANR	1007861	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1007836	0					
ANR	1007862	Callee	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007863	Identifier	SLJIT_UNUSED_ARG		1007836	0					
ANR	1007864	ArgumentList	srcw		1007836	1					
ANR	1007865	Argument	srcw		1007836	0					
ANR	1007866	Identifier	srcw		1007836	0					
ANR	1007867	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1975:1:63120:63139	1007836	4	True				
ANR	1007868	CallExpression	SLJIT_ASSERT_STOP ( )		1007836	0					
ANR	1007869	Callee	SLJIT_ASSERT_STOP		1007836	0					
ANR	1007870	Identifier	SLJIT_ASSERT_STOP		1007836	0					
ANR	1007871	ArgumentList			1007836	1					
ANR	1007872	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1976:1:63142:63170	1007836	5	True				
ANR	1007873	Identifier	SLJIT_ERR_UNSUPPORTED		1007836	0					
ANR	1007874	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007836	1					
ANR	1007875	Identifier	sljit_emit_ijump		1007836	2					
ANR	1007876	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1007836	3					
ANR	1007877	Parameter	struct sljit_compiler * compiler	1969:51:62937:62967	1007836	0	True				
ANR	1007878	ParameterType	struct sljit_compiler *		1007836	0					
ANR	1007879	Identifier	compiler		1007836	1					
ANR	1007880	Parameter	sljit_si type	1969:84:62970:62982	1007836	1	True				
ANR	1007881	ParameterType	sljit_si		1007836	0					
ANR	1007882	Identifier	type		1007836	1					
ANR	1007883	Parameter	sljit_si src	1969:99:62985:62996	1007836	2	True				
ANR	1007884	ParameterType	sljit_si		1007836	0					
ANR	1007885	Identifier	src		1007836	1					
ANR	1007886	Parameter	sljit_sw srcw	1969:113:62999:63011	1007836	3	True				
ANR	1007887	ParameterType	sljit_sw		1007836	0					
ANR	1007888	Identifier	srcw		1007836	1					
ANR	1007889	CFGEntryNode	ENTRY		1007836		True				
ANR	1007890	CFGExitNode	EXIT		1007836		True				
ANR	1007891	Symbol	src		1007836						
ANR	1007892	Symbol	srcw		1007836						
ANR	1007893	Symbol	compiler		1007836						
ANR	1007894	Symbol	type		1007836						
ANR	1007895	Symbol	SLJIT_ERR_UNSUPPORTED		1007836						
ANR	1007896	Function	sljit_emit_op_flags	1979:0:63175:63581							
ANR	1007897	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1007896	0					
ANR	1007898	CompoundStatement		1983:0:63351:63581	1007896	0					
ANR	1007899	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1984:1:63354:63380	1007896	0	True				
ANR	1007900	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007896	0					
ANR	1007901	Callee	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007902	Identifier	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007903	ArgumentList	compiler		1007896	1					
ANR	1007904	Argument	compiler		1007896	0					
ANR	1007905	Identifier	compiler		1007896	0					
ANR	1007906	ExpressionStatement	SLJIT_UNUSED_ARG ( op )	1985:1:63383:63403	1007896	1	True				
ANR	1007907	CallExpression	SLJIT_UNUSED_ARG ( op )		1007896	0					
ANR	1007908	Callee	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007909	Identifier	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007910	ArgumentList	op		1007896	1					
ANR	1007911	Argument	op		1007896	0					
ANR	1007912	Identifier	op		1007896	0					
ANR	1007913	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	1986:1:63406:63427	1007896	2	True				
ANR	1007914	CallExpression	SLJIT_UNUSED_ARG ( dst )		1007896	0					
ANR	1007915	Callee	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007916	Identifier	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007917	ArgumentList	dst		1007896	1					
ANR	1007918	Argument	dst		1007896	0					
ANR	1007919	Identifier	dst		1007896	0					
ANR	1007920	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	1987:1:63430:63452	1007896	3	True				
ANR	1007921	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1007896	0					
ANR	1007922	Callee	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007923	Identifier	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007924	ArgumentList	dstw		1007896	1					
ANR	1007925	Argument	dstw		1007896	0					
ANR	1007926	Identifier	dstw		1007896	0					
ANR	1007927	ExpressionStatement	SLJIT_UNUSED_ARG ( src )	1988:1:63455:63476	1007896	4	True				
ANR	1007928	CallExpression	SLJIT_UNUSED_ARG ( src )		1007896	0					
ANR	1007929	Callee	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007930	Identifier	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007931	ArgumentList	src		1007896	1					
ANR	1007932	Argument	src		1007896	0					
ANR	1007933	Identifier	src		1007896	0					
ANR	1007934	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	1989:1:63479:63501	1007896	5	True				
ANR	1007935	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1007896	0					
ANR	1007936	Callee	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007937	Identifier	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007938	ArgumentList	srcw		1007896	1					
ANR	1007939	Argument	srcw		1007896	0					
ANR	1007940	Identifier	srcw		1007896	0					
ANR	1007941	ExpressionStatement	SLJIT_UNUSED_ARG ( type )	1990:1:63504:63526	1007896	6	True				
ANR	1007942	CallExpression	SLJIT_UNUSED_ARG ( type )		1007896	0					
ANR	1007943	Callee	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007944	Identifier	SLJIT_UNUSED_ARG		1007896	0					
ANR	1007945	ArgumentList	type		1007896	1					
ANR	1007946	Argument	type		1007896	0					
ANR	1007947	Identifier	type		1007896	0					
ANR	1007948	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1991:1:63529:63548	1007896	7	True				
ANR	1007949	CallExpression	SLJIT_ASSERT_STOP ( )		1007896	0					
ANR	1007950	Callee	SLJIT_ASSERT_STOP		1007896	0					
ANR	1007951	Identifier	SLJIT_ASSERT_STOP		1007896	0					
ANR	1007952	ArgumentList			1007896	1					
ANR	1007953	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1992:1:63551:63579	1007896	8	True				
ANR	1007954	Identifier	SLJIT_ERR_UNSUPPORTED		1007896	0					
ANR	1007955	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007896	1					
ANR	1007956	Identifier	sljit_emit_op_flags		1007896	2					
ANR	1007957	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1007896	3					
ANR	1007958	Parameter	struct sljit_compiler * compiler	1979:54:63229:63259	1007896	0	True				
ANR	1007959	ParameterType	struct sljit_compiler *		1007896	0					
ANR	1007960	Identifier	compiler		1007896	1					
ANR	1007961	Parameter	sljit_si op	1979:87:63262:63272	1007896	1	True				
ANR	1007962	ParameterType	sljit_si		1007896	0					
ANR	1007963	Identifier	op		1007896	1					
ANR	1007964	Parameter	sljit_si dst	1980:1:63276:63287	1007896	2	True				
ANR	1007965	ParameterType	sljit_si		1007896	0					
ANR	1007966	Identifier	dst		1007896	1					
ANR	1007967	Parameter	sljit_sw dstw	1980:15:63290:63302	1007896	3	True				
ANR	1007968	ParameterType	sljit_sw		1007896	0					
ANR	1007969	Identifier	dstw		1007896	1					
ANR	1007970	Parameter	sljit_si src	1981:1:63306:63317	1007896	4	True				
ANR	1007971	ParameterType	sljit_si		1007896	0					
ANR	1007972	Identifier	src		1007896	1					
ANR	1007973	Parameter	sljit_sw srcw	1981:15:63320:63332	1007896	5	True				
ANR	1007974	ParameterType	sljit_sw		1007896	0					
ANR	1007975	Identifier	srcw		1007896	1					
ANR	1007976	Parameter	sljit_si type	1982:1:63336:63348	1007896	6	True				
ANR	1007977	ParameterType	sljit_si		1007896	0					
ANR	1007978	Identifier	type		1007896	1					
ANR	1007979	CFGEntryNode	ENTRY		1007896		True				
ANR	1007980	CFGExitNode	EXIT		1007896		True				
ANR	1007981	Symbol	op		1007896						
ANR	1007982	Symbol	dst		1007896						
ANR	1007983	Symbol	src		1007896						
ANR	1007984	Symbol	srcw		1007896						
ANR	1007985	Symbol	compiler		1007896						
ANR	1007986	Symbol	type		1007896						
ANR	1007987	Symbol	dstw		1007896						
ANR	1007988	Symbol	SLJIT_ERR_UNSUPPORTED		1007896						
ANR	1007989	Function	sljit_get_local_base	1995:0:63584:63878							
ANR	1007990	FunctionDef	"sljit_get_local_base (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset)"		1007989	0					
ANR	1007991	CompoundStatement		1996:0:63718:63878	1007989	0					
ANR	1007992	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	1997:1:63721:63747	1007989	0	True				
ANR	1007993	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1007989	0					
ANR	1007994	Callee	SLJIT_UNUSED_ARG		1007989	0					
ANR	1007995	Identifier	SLJIT_UNUSED_ARG		1007989	0					
ANR	1007996	ArgumentList	compiler		1007989	1					
ANR	1007997	Argument	compiler		1007989	0					
ANR	1007998	Identifier	compiler		1007989	0					
ANR	1007999	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	1998:1:63750:63771	1007989	1	True				
ANR	1008000	CallExpression	SLJIT_UNUSED_ARG ( dst )		1007989	0					
ANR	1008001	Callee	SLJIT_UNUSED_ARG		1007989	0					
ANR	1008002	Identifier	SLJIT_UNUSED_ARG		1007989	0					
ANR	1008003	ArgumentList	dst		1007989	1					
ANR	1008004	Argument	dst		1007989	0					
ANR	1008005	Identifier	dst		1007989	0					
ANR	1008006	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	1999:1:63774:63796	1007989	2	True				
ANR	1008007	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1007989	0					
ANR	1008008	Callee	SLJIT_UNUSED_ARG		1007989	0					
ANR	1008009	Identifier	SLJIT_UNUSED_ARG		1007989	0					
ANR	1008010	ArgumentList	dstw		1007989	1					
ANR	1008011	Argument	dstw		1007989	0					
ANR	1008012	Identifier	dstw		1007989	0					
ANR	1008013	ExpressionStatement	SLJIT_UNUSED_ARG ( offset )	2000:1:63799:63823	1007989	3	True				
ANR	1008014	CallExpression	SLJIT_UNUSED_ARG ( offset )		1007989	0					
ANR	1008015	Callee	SLJIT_UNUSED_ARG		1007989	0					
ANR	1008016	Identifier	SLJIT_UNUSED_ARG		1007989	0					
ANR	1008017	ArgumentList	offset		1007989	1					
ANR	1008018	Argument	offset		1007989	0					
ANR	1008019	Identifier	offset		1007989	0					
ANR	1008020	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2001:1:63826:63845	1007989	4	True				
ANR	1008021	CallExpression	SLJIT_ASSERT_STOP ( )		1007989	0					
ANR	1008022	Callee	SLJIT_ASSERT_STOP		1007989	0					
ANR	1008023	Identifier	SLJIT_ASSERT_STOP		1007989	0					
ANR	1008024	ArgumentList			1007989	1					
ANR	1008025	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	2002:1:63848:63876	1007989	5	True				
ANR	1008026	Identifier	SLJIT_ERR_UNSUPPORTED		1007989	0					
ANR	1008027	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1007989	1					
ANR	1008028	Identifier	sljit_get_local_base		1007989	2					
ANR	1008029	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset"		1007989	3					
ANR	1008030	Parameter	struct sljit_compiler * compiler	1995:55:63639:63669	1007989	0	True				
ANR	1008031	ParameterType	struct sljit_compiler *		1007989	0					
ANR	1008032	Identifier	compiler		1007989	1					
ANR	1008033	Parameter	sljit_si dst	1995:88:63672:63683	1007989	1	True				
ANR	1008034	ParameterType	sljit_si		1007989	0					
ANR	1008035	Identifier	dst		1007989	1					
ANR	1008036	Parameter	sljit_sw dstw	1995:102:63686:63698	1007989	2	True				
ANR	1008037	ParameterType	sljit_sw		1007989	0					
ANR	1008038	Identifier	dstw		1007989	1					
ANR	1008039	Parameter	sljit_sw offset	1995:117:63701:63715	1007989	3	True				
ANR	1008040	ParameterType	sljit_sw		1007989	0					
ANR	1008041	Identifier	offset		1007989	1					
ANR	1008042	CFGEntryNode	ENTRY		1007989		True				
ANR	1008043	CFGExitNode	EXIT		1007989		True				
ANR	1008044	Symbol	dst		1007989						
ANR	1008045	Symbol	offset		1007989						
ANR	1008046	Symbol	compiler		1007989						
ANR	1008047	Symbol	dstw		1007989						
ANR	1008048	Symbol	SLJIT_ERR_UNSUPPORTED		1007989						
ANR	1008049	Function	sljit_emit_const	2005:25:63906:64167							
ANR	1008050	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw initval)"		1008049	0					
ANR	1008051	CompoundStatement		2006:0:64023:64167	1008049	0					
ANR	1008052	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	2007:1:64026:64052	1008049	0	True				
ANR	1008053	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1008049	0					
ANR	1008054	Callee	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008055	Identifier	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008056	ArgumentList	compiler		1008049	1					
ANR	1008057	Argument	compiler		1008049	0					
ANR	1008058	Identifier	compiler		1008049	0					
ANR	1008059	ExpressionStatement	SLJIT_UNUSED_ARG ( dst )	2008:1:64055:64076	1008049	1	True				
ANR	1008060	CallExpression	SLJIT_UNUSED_ARG ( dst )		1008049	0					
ANR	1008061	Callee	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008062	Identifier	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008063	ArgumentList	dst		1008049	1					
ANR	1008064	Argument	dst		1008049	0					
ANR	1008065	Identifier	dst		1008049	0					
ANR	1008066	ExpressionStatement	SLJIT_UNUSED_ARG ( dstw )	2009:1:64079:64101	1008049	2	True				
ANR	1008067	CallExpression	SLJIT_UNUSED_ARG ( dstw )		1008049	0					
ANR	1008068	Callee	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008069	Identifier	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008070	ArgumentList	dstw		1008049	1					
ANR	1008071	Argument	dstw		1008049	0					
ANR	1008072	Identifier	dstw		1008049	0					
ANR	1008073	ExpressionStatement	SLJIT_UNUSED_ARG ( initval )	2010:1:64104:64129	1008049	3	True				
ANR	1008074	CallExpression	SLJIT_UNUSED_ARG ( initval )		1008049	0					
ANR	1008075	Callee	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008076	Identifier	SLJIT_UNUSED_ARG		1008049	0					
ANR	1008077	ArgumentList	initval		1008049	1					
ANR	1008078	Argument	initval		1008049	0					
ANR	1008079	Identifier	initval		1008049	0					
ANR	1008080	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2011:1:64132:64151	1008049	4	True				
ANR	1008081	CallExpression	SLJIT_ASSERT_STOP ( )		1008049	0					
ANR	1008082	Callee	SLJIT_ASSERT_STOP		1008049	0					
ANR	1008083	Identifier	SLJIT_ASSERT_STOP		1008049	0					
ANR	1008084	ArgumentList			1008049	1					
ANR	1008085	ReturnStatement	return NULL ;	2012:1:64154:64165	1008049	5	True				
ANR	1008086	Identifier	NULL		1008049	0					
ANR	1008087	ReturnType	struct sljit_const *		1008049	1					
ANR	1008088	Identifier	sljit_emit_const		1008049	2					
ANR	1008089	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw initval"		1008049	3					
ANR	1008090	Parameter	struct sljit_compiler * compiler	2005:62:63943:63973	1008049	0	True				
ANR	1008091	ParameterType	struct sljit_compiler *		1008049	0					
ANR	1008092	Identifier	compiler		1008049	1					
ANR	1008093	Parameter	sljit_si dst	2005:95:63976:63987	1008049	1	True				
ANR	1008094	ParameterType	sljit_si		1008049	0					
ANR	1008095	Identifier	dst		1008049	1					
ANR	1008096	Parameter	sljit_sw dstw	2005:109:63990:64002	1008049	2	True				
ANR	1008097	ParameterType	sljit_sw		1008049	0					
ANR	1008098	Identifier	dstw		1008049	1					
ANR	1008099	Parameter	sljit_sw initval	2005:124:64005:64020	1008049	3	True				
ANR	1008100	ParameterType	sljit_sw		1008049	0					
ANR	1008101	Identifier	initval		1008049	1					
ANR	1008102	CFGEntryNode	ENTRY		1008049		True				
ANR	1008103	CFGExitNode	EXIT		1008049		True				
ANR	1008104	Symbol	initval		1008049						
ANR	1008105	Symbol	NULL		1008049						
ANR	1008106	Symbol	dst		1008049						
ANR	1008107	Symbol	compiler		1008049						
ANR	1008108	Symbol	dstw		1008049						
ANR	1008109	Function	sljit_set_jump_addr	2015:0:64170:64332							
ANR	1008110	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1008109	0					
ANR	1008111	CompoundStatement		2016:0:64254:64332	1008109	0					
ANR	1008112	ExpressionStatement	SLJIT_UNUSED_ARG ( addr )	2017:1:64257:64279	1008109	0	True				
ANR	1008113	CallExpression	SLJIT_UNUSED_ARG ( addr )		1008109	0					
ANR	1008114	Callee	SLJIT_UNUSED_ARG		1008109	0					
ANR	1008115	Identifier	SLJIT_UNUSED_ARG		1008109	0					
ANR	1008116	ArgumentList	addr		1008109	1					
ANR	1008117	Argument	addr		1008109	0					
ANR	1008118	Identifier	addr		1008109	0					
ANR	1008119	ExpressionStatement	SLJIT_UNUSED_ARG ( new_addr )	2018:1:64282:64308	1008109	1	True				
ANR	1008120	CallExpression	SLJIT_UNUSED_ARG ( new_addr )		1008109	0					
ANR	1008121	Callee	SLJIT_UNUSED_ARG		1008109	0					
ANR	1008122	Identifier	SLJIT_UNUSED_ARG		1008109	0					
ANR	1008123	ArgumentList	new_addr		1008109	1					
ANR	1008124	Argument	new_addr		1008109	0					
ANR	1008125	Identifier	new_addr		1008109	0					
ANR	1008126	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2019:1:64311:64330	1008109	2	True				
ANR	1008127	CallExpression	SLJIT_ASSERT_STOP ( )		1008109	0					
ANR	1008128	Callee	SLJIT_ASSERT_STOP		1008109	0					
ANR	1008129	Identifier	SLJIT_ASSERT_STOP		1008109	0					
ANR	1008130	ArgumentList			1008109	1					
ANR	1008131	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1008109	1					
ANR	1008132	Identifier	sljit_set_jump_addr		1008109	2					
ANR	1008133	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1008109	3					
ANR	1008134	Parameter	sljit_uw addr	2015:50:64220:64232	1008109	0	True				
ANR	1008135	ParameterType	sljit_uw		1008109	0					
ANR	1008136	Identifier	addr		1008109	1					
ANR	1008137	Parameter	sljit_uw new_addr	2015:65:64235:64251	1008109	1	True				
ANR	1008138	ParameterType	sljit_uw		1008109	0					
ANR	1008139	Identifier	new_addr		1008109	1					
ANR	1008140	CFGEntryNode	ENTRY		1008109		True				
ANR	1008141	CFGExitNode	EXIT		1008109		True				
ANR	1008142	Symbol	addr		1008109						
ANR	1008143	Symbol	new_addr		1008109						
ANR	1008144	Function	sljit_set_const	2022:0:64335:64501							
ANR	1008145	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1008144	0					
ANR	1008146	CompoundStatement		2023:0:64419:64501	1008144	0					
ANR	1008147	ExpressionStatement	SLJIT_UNUSED_ARG ( addr )	2024:1:64422:64444	1008144	0	True				
ANR	1008148	CallExpression	SLJIT_UNUSED_ARG ( addr )		1008144	0					
ANR	1008149	Callee	SLJIT_UNUSED_ARG		1008144	0					
ANR	1008150	Identifier	SLJIT_UNUSED_ARG		1008144	0					
ANR	1008151	ArgumentList	addr		1008144	1					
ANR	1008152	Argument	addr		1008144	0					
ANR	1008153	Identifier	addr		1008144	0					
ANR	1008154	ExpressionStatement	SLJIT_UNUSED_ARG ( new_constant )	2025:1:64447:64477	1008144	1	True				
ANR	1008155	CallExpression	SLJIT_UNUSED_ARG ( new_constant )		1008144	0					
ANR	1008156	Callee	SLJIT_UNUSED_ARG		1008144	0					
ANR	1008157	Identifier	SLJIT_UNUSED_ARG		1008144	0					
ANR	1008158	ArgumentList	new_constant		1008144	1					
ANR	1008159	Argument	new_constant		1008144	0					
ANR	1008160	Identifier	new_constant		1008144	0					
ANR	1008161	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2026:1:64480:64499	1008144	2	True				
ANR	1008162	CallExpression	SLJIT_ASSERT_STOP ( )		1008144	0					
ANR	1008163	Callee	SLJIT_ASSERT_STOP		1008144	0					
ANR	1008164	Identifier	SLJIT_ASSERT_STOP		1008144	0					
ANR	1008165	ArgumentList			1008144	1					
ANR	1008166	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1008144	1					
ANR	1008167	Identifier	sljit_set_const		1008144	2					
ANR	1008168	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1008144	3					
ANR	1008169	Parameter	sljit_uw addr	2022:46:64381:64393	1008144	0	True				
ANR	1008170	ParameterType	sljit_uw		1008144	0					
ANR	1008171	Identifier	addr		1008144	1					
ANR	1008172	Parameter	sljit_sw new_constant	2022:61:64396:64416	1008144	1	True				
ANR	1008173	ParameterType	sljit_sw		1008144	0					
ANR	1008174	Identifier	new_constant		1008144	1					
ANR	1008175	CFGEntryNode	ENTRY		1008144		True				
ANR	1008176	CFGExitNode	EXIT		1008144		True				
ANR	1008177	Symbol	new_constant		1008144						
ANR	1008178	Symbol	addr		1008144						
