command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	667506	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_libmbfl_tests_conv_kana.c								
ANR	667507	Function	hexdump	13:0:218:383							
ANR	667508	FunctionDef	hexdump (const mbfl_string * ptr)		667507	0					
ANR	667509	CompoundStatement		14:0:262:383	667507	0					
ANR	667510	IdentifierDeclStatement	unsigned int i ;	15:1:265:279	667507	0	True				
ANR	667511	IdentifierDecl	i		667507	0					
ANR	667512	IdentifierDeclType	unsigned int		667507	0					
ANR	667513	Identifier	i		667507	1					
ANR	667514	ForStatement	for ( i = 0 ; i < ptr -> len ; i ++ )		667507	1					
ANR	667515	ForInit	i = 0 ;	17:6:288:293	667507	0	True				
ANR	667516	AssignmentExpression	i = 0		667507	0		=			
ANR	667517	Identifier	i		667507	0					
ANR	667518	PrimaryExpression	0		667507	1					
ANR	667519	Condition	i < ptr -> len	17:13:295:306	667507	1	True				
ANR	667520	RelationalExpression	i < ptr -> len		667507	0		<			
ANR	667521	Identifier	i		667507	0					
ANR	667522	PtrMemberAccess	ptr -> len		667507	1					
ANR	667523	Identifier	ptr		667507	0					
ANR	667524	Identifier	len		667507	1					
ANR	667525	PostIncDecOperationExpression	i ++	17:27:309:311	667507	2	True				
ANR	667526	Identifier	i		667507	0					
ANR	667527	IncDec	++		667507	1					
ANR	667528	CompoundStatement		4:32:51:51	667507	3					
ANR	667529	ExpressionStatement	"printf ( ""%%%02x"" , ptr -> val [ i ] )"	18:2:318:347	667507	0	True				
ANR	667530	CallExpression	"printf ( ""%%%02x"" , ptr -> val [ i ] )"		667507	0					
ANR	667531	Callee	printf		667507	0					
ANR	667532	Identifier	printf		667507	0					
ANR	667533	ArgumentList	"""%%%02x"""		667507	1					
ANR	667534	Argument	"""%%%02x"""		667507	0					
ANR	667535	PrimaryExpression	"""%%%02x"""		667507	0					
ANR	667536	Argument	ptr -> val [ i ]		667507	1					
ANR	667537	ArrayIndexing	ptr -> val [ i ]		667507	0					
ANR	667538	PtrMemberAccess	ptr -> val		667507	0					
ANR	667539	Identifier	ptr		667507	0					
ANR	667540	Identifier	val		667507	1					
ANR	667541	Identifier	i		667507	1					
ANR	667542	ExpressionStatement	"printf ( "" (%u)\\n"" , ptr -> len )"	21:1:354:381	667507	2	True				
ANR	667543	CallExpression	"printf ( "" (%u)\\n"" , ptr -> len )"		667507	0					
ANR	667544	Callee	printf		667507	0					
ANR	667545	Identifier	printf		667507	0					
ANR	667546	ArgumentList	""" (%u)\\n"""		667507	1					
ANR	667547	Argument	""" (%u)\\n"""		667507	0					
ANR	667548	PrimaryExpression	""" (%u)\\n"""		667507	0					
ANR	667549	Argument	ptr -> len		667507	1					
ANR	667550	PtrMemberAccess	ptr -> len		667507	0					
ANR	667551	Identifier	ptr		667507	0					
ANR	667552	Identifier	len		667507	1					
ANR	667553	ReturnType	static void		667507	1					
ANR	667554	Identifier	hexdump		667507	2					
ANR	667555	ParameterList	const mbfl_string * ptr		667507	3					
ANR	667556	Parameter	const mbfl_string * ptr	13:20:238:259	667507	0	True				
ANR	667557	ParameterType	const mbfl_string *		667507	0					
ANR	667558	Identifier	ptr		667507	1					
ANR	667559	CFGEntryNode	ENTRY		667507		True				
ANR	667560	CFGExitNode	EXIT		667507		True				
ANR	667561	Symbol	ptr -> val		667507						
ANR	667562	Symbol	* * ptr		667507						
ANR	667563	Symbol	* i		667507						
ANR	667564	Symbol	* ptr		667507						
ANR	667565	Symbol	i		667507						
ANR	667566	Symbol	* ptr -> val		667507						
ANR	667567	Symbol	ptr -> len		667507						
ANR	667568	Symbol	ptr		667507						
ANR	667569	Function	main	24:0:386:2569							
ANR	667570	FunctionDef	"main (int argc , char * * argv)"		667569	0					
ANR	667571	CompoundStatement		25:0:418:2569	667569	0					
ANR	667572	IdentifierDeclStatement	enum mbfl_no_encoding no_enc ;	26:1:421:449	667569	0	True				
ANR	667573	IdentifierDecl	no_enc		667569	0					
ANR	667574	IdentifierDeclType	enum mbfl_no_encoding		667569	0					
ANR	667575	Identifier	no_enc		667569	1					
ANR	667576	IdentifierDeclStatement	const enum mbfl_no_language no_lang = mbfl_no_language_japanese ;	27:1:452:515	667569	1	True				
ANR	667577	IdentifierDecl	no_lang = mbfl_no_language_japanese		667569	0					
ANR	667578	IdentifierDeclType	const enum mbfl_no_language		667569	0					
ANR	667579	Identifier	no_lang		667569	1					
ANR	667580	AssignmentExpression	no_lang = mbfl_no_language_japanese		667569	2		=			
ANR	667581	Identifier	mbfl_no_language_japanese		667569	0					
ANR	667582	Identifier	mbfl_no_language_japanese		667569	1					
ANR	667583	IdentifierDeclStatement	mbfl_memory_device dev ;	28:1:518:540	667569	2	True				
ANR	667584	IdentifierDecl	dev		667569	0					
ANR	667585	IdentifierDeclType	mbfl_memory_device		667569	0					
ANR	667586	Identifier	dev		667569	1					
ANR	667587	IdentifierDeclStatement	"mbfl_string string , result ;"	29:1:543:569	667569	3	True				
ANR	667588	IdentifierDecl	string		667569	0					
ANR	667589	IdentifierDeclType	mbfl_string		667569	0					
ANR	667590	Identifier	string		667569	1					
ANR	667591	IdentifierDecl	result		667569	1					
ANR	667592	IdentifierDeclType	mbfl_string		667569	0					
ANR	667593	Identifier	result		667569	1					
ANR	667594	IdentifierDeclStatement	int final = 0 ;	30:1:572:585	667569	4	True				
ANR	667595	IdentifierDecl	final = 0		667569	0					
ANR	667596	IdentifierDeclType	int		667569	0					
ANR	667597	Identifier	final		667569	1					
ANR	667598	AssignmentExpression	final = 0		667569	2		=			
ANR	667599	Identifier	final		667569	0					
ANR	667600	PrimaryExpression	0		667569	1					
ANR	667601	IdentifierDeclStatement	int state = 0 ;	31:1:588:601	667569	5	True				
ANR	667602	IdentifierDecl	state = 0		667569	0					
ANR	667603	IdentifierDeclType	int		667569	0					
ANR	667604	Identifier	state		667569	1					
ANR	667605	AssignmentExpression	state = 0		667569	2		=			
ANR	667606	Identifier	state		667569	0					
ANR	667607	PrimaryExpression	0		667569	1					
ANR	667608	IdentifierDeclStatement	int mode = 0 ;	32:1:604:616	667569	6	True				
ANR	667609	IdentifierDecl	mode = 0		667569	0					
ANR	667610	IdentifierDeclType	int		667569	0					
ANR	667611	Identifier	mode		667569	1					
ANR	667612	AssignmentExpression	mode = 0		667569	2		=			
ANR	667613	Identifier	mode		667569	0					
ANR	667614	PrimaryExpression	0		667569	1					
ANR	667615	IfStatement	if ( argc < 3 )		667569	7					
ANR	667616	Condition	argc < 3	34:5:624:631	667569	0	True				
ANR	667617	RelationalExpression	argc < 3		667569	0		<			
ANR	667618	Identifier	argc		667569	0					
ANR	667619	PrimaryExpression	3		667569	1					
ANR	667620	CompoundStatement		10:15:215:215	667569	1					
ANR	667621	ExpressionStatement	"fprintf ( stderr , ""Usage: %s encoding flags\\n"" , argv [ 0 ] )"	35:2:638:692	667569	0	True				
ANR	667622	CallExpression	"fprintf ( stderr , ""Usage: %s encoding flags\\n"" , argv [ 0 ] )"		667569	0					
ANR	667623	Callee	fprintf		667569	0					
ANR	667624	Identifier	fprintf		667569	0					
ANR	667625	ArgumentList	stderr		667569	1					
ANR	667626	Argument	stderr		667569	0					
ANR	667627	Identifier	stderr		667569	0					
ANR	667628	Argument	"""Usage: %s encoding flags\\n"""		667569	1					
ANR	667629	PrimaryExpression	"""Usage: %s encoding flags\\n"""		667569	0					
ANR	667630	Argument	argv [ 0 ]		667569	2					
ANR	667631	ArrayIndexing	argv [ 0 ]		667569	0					
ANR	667632	Identifier	argv		667569	0					
ANR	667633	PrimaryExpression	0		667569	1					
ANR	667634	ReturnStatement	return EXIT_FAILURE ;	36:2:696:715	667569	1	True				
ANR	667635	Identifier	EXIT_FAILURE		667569	0					
ANR	667636	IfStatement	if ( ( no_enc = mbfl_name2no_encoding ( argv [ 1 ] ) ) == mbfl_no_encoding_invalid )		667569	8					
ANR	667637	Condition	( no_enc = mbfl_name2no_encoding ( argv [ 1 ] ) ) == mbfl_no_encoding_invalid	39:5:726:797	667569	0	True				
ANR	667638	EqualityExpression	( no_enc = mbfl_name2no_encoding ( argv [ 1 ] ) ) == mbfl_no_encoding_invalid		667569	0		==			
ANR	667639	AssignmentExpression	no_enc = mbfl_name2no_encoding ( argv [ 1 ] )		667569	0		=			
ANR	667640	Identifier	no_enc		667569	0					
ANR	667641	CallExpression	mbfl_name2no_encoding ( argv [ 1 ] )		667569	1					
ANR	667642	Callee	mbfl_name2no_encoding		667569	0					
ANR	667643	Identifier	mbfl_name2no_encoding		667569	0					
ANR	667644	ArgumentList	argv [ 1 ]		667569	1					
ANR	667645	Argument	argv [ 1 ]		667569	0					
ANR	667646	ArrayIndexing	argv [ 1 ]		667569	0					
ANR	667647	Identifier	argv		667569	0					
ANR	667648	PrimaryExpression	1		667569	1					
ANR	667649	Identifier	mbfl_no_encoding_invalid		667569	1					
ANR	667650	CompoundStatement		16:29:381:381	667569	1					
ANR	667651	ExpressionStatement	"printf ( ""Unsupported encoding: %s\\n"" , argv [ 1 ] )"	41:2:804:849	667569	0	True				
ANR	667652	CallExpression	"printf ( ""Unsupported encoding: %s\\n"" , argv [ 1 ] )"		667569	0					
ANR	667653	Callee	printf		667569	0					
ANR	667654	Identifier	printf		667569	0					
ANR	667655	ArgumentList	"""Unsupported encoding: %s\\n"""		667569	1					
ANR	667656	Argument	"""Unsupported encoding: %s\\n"""		667569	0					
ANR	667657	PrimaryExpression	"""Unsupported encoding: %s\\n"""		667569	0					
ANR	667658	Argument	argv [ 1 ]		667569	1					
ANR	667659	ArrayIndexing	argv [ 1 ]		667569	0					
ANR	667660	Identifier	argv		667569	0					
ANR	667661	PrimaryExpression	1		667569	1					
ANR	667662	ReturnStatement	return EXIT_FAILURE ;	42:2:853:872	667569	1	True				
ANR	667663	Identifier	EXIT_FAILURE		667569	0					
ANR	667664	CompoundStatement		22:2:464:477	667569	9					
ANR	667665	IdentifierDeclStatement	const char * p ;	46:2:883:896	667569	0	True				
ANR	667666	IdentifierDecl	* p		667569	0					
ANR	667667	IdentifierDeclType	const char *		667569	0					
ANR	667668	Identifier	p		667569	1					
ANR	667669	ForStatement	for ( p = argv [ 2 ] + strlen ( argv [ 2 ] ) ; p > argv [ 2 ] ; )		667569	1					
ANR	667670	ForInit	p = argv [ 2 ] + strlen ( argv [ 2 ] ) ;	48:7:906:934	667569	0	True				
ANR	667671	AssignmentExpression	p = argv [ 2 ] + strlen ( argv [ 2 ] )		667569	0		=			
ANR	667672	Identifier	p		667569	0					
ANR	667673	AdditiveExpression	argv [ 2 ] + strlen ( argv [ 2 ] )		667569	1		+			
ANR	667674	ArrayIndexing	argv [ 2 ]		667569	0					
ANR	667675	Identifier	argv		667569	0					
ANR	667676	PrimaryExpression	2		667569	1					
ANR	667677	CallExpression	strlen ( argv [ 2 ] )		667569	1					
ANR	667678	Callee	strlen		667569	0					
ANR	667679	Identifier	strlen		667569	0					
ANR	667680	ArgumentList	argv [ 2 ]		667569	1					
ANR	667681	Argument	argv [ 2 ]		667569	0					
ANR	667682	ArrayIndexing	argv [ 2 ]		667569	0					
ANR	667683	Identifier	argv		667569	0					
ANR	667684	PrimaryExpression	2		667569	1					
ANR	667685	Condition	p > argv [ 2 ]	48:37:936:946	667569	1	True				
ANR	667686	RelationalExpression	p > argv [ 2 ]		667569	0		>			
ANR	667687	Identifier	p		667569	0					
ANR	667688	ArrayIndexing	argv [ 2 ]		667569	1					
ANR	667689	Identifier	argv		667569	0					
ANR	667690	PrimaryExpression	2		667569	1					
ANR	667691	CompoundStatement		24:52:532:532	667569	2					
ANR	667692	SwitchStatement	switch ( * ( -- p ) )		667569	0					
ANR	667693	Condition	* ( -- p )	49:11:964:969	667569	0	True				
ANR	667694	UnaryOperationExpression	* ( -- p )		667569	0					
ANR	667695	UnaryOperator	*		667569	0					
ANR	667696	UnaryExpression	-- p		667569	1					
ANR	667697	IncDec	--		667569	0					
ANR	667698	Identifier	p		667569	1					
ANR	667699	CompoundStatement		25:19:553:553	667569	1					
ANR	667700	Label	case 'A' :	50:3:977:985	667569	0	True				
ANR	667701	ExpressionStatement	mode |= 0x1	51:4:991:1002	667569	1	True				
ANR	667702	AssignmentExpression	mode |= 0x1		667569	0		|=			
ANR	667703	Identifier	mode		667569	0					
ANR	667704	PrimaryExpression	0x1		667569	1					
ANR	667705	BreakStatement	break ;	52:4:1008:1013	667569	2	True				
ANR	667706	Label	case 'a' :	53:3:1018:1026	667569	3	True				
ANR	667707	ExpressionStatement	mode |= 0x10	54:4:1032:1044	667569	4	True				
ANR	667708	AssignmentExpression	mode |= 0x10		667569	0		|=			
ANR	667709	Identifier	mode		667569	0					
ANR	667710	PrimaryExpression	0x10		667569	1					
ANR	667711	BreakStatement	break ;	55:4:1050:1055	667569	5	True				
ANR	667712	Label	case 'R' :	56:3:1060:1068	667569	6	True				
ANR	667713	ExpressionStatement	mode |= 0x2	57:4:1074:1085	667569	7	True				
ANR	667714	AssignmentExpression	mode |= 0x2		667569	0		|=			
ANR	667715	Identifier	mode		667569	0					
ANR	667716	PrimaryExpression	0x2		667569	1					
ANR	667717	BreakStatement	break ;	58:4:1091:1096	667569	8	True				
ANR	667718	Label	case 'r' :	59:3:1101:1109	667569	9	True				
ANR	667719	ExpressionStatement	mode |= 0x20	60:4:1115:1127	667569	10	True				
ANR	667720	AssignmentExpression	mode |= 0x20		667569	0		|=			
ANR	667721	Identifier	mode		667569	0					
ANR	667722	PrimaryExpression	0x20		667569	1					
ANR	667723	BreakStatement	break ;	61:4:1133:1138	667569	11	True				
ANR	667724	Label	case 'N' :	62:3:1143:1151	667569	12	True				
ANR	667725	ExpressionStatement	mode |= 0x4	63:4:1157:1168	667569	13	True				
ANR	667726	AssignmentExpression	mode |= 0x4		667569	0		|=			
ANR	667727	Identifier	mode		667569	0					
ANR	667728	PrimaryExpression	0x4		667569	1					
ANR	667729	BreakStatement	break ;	64:4:1174:1179	667569	14	True				
ANR	667730	Label	case 'n' :	65:3:1184:1192	667569	15	True				
ANR	667731	ExpressionStatement	mode |= 0x40	66:4:1198:1210	667569	16	True				
ANR	667732	AssignmentExpression	mode |= 0x40		667569	0		|=			
ANR	667733	Identifier	mode		667569	0					
ANR	667734	PrimaryExpression	0x40		667569	1					
ANR	667735	BreakStatement	break ;	67:4:1216:1221	667569	17	True				
ANR	667736	Label	case 'S' :	68:3:1226:1234	667569	18	True				
ANR	667737	ExpressionStatement	mode |= 0x8	69:4:1240:1251	667569	19	True				
ANR	667738	AssignmentExpression	mode |= 0x8		667569	0		|=			
ANR	667739	Identifier	mode		667569	0					
ANR	667740	PrimaryExpression	0x8		667569	1					
ANR	667741	BreakStatement	break ;	70:4:1257:1262	667569	20	True				
ANR	667742	Label	case 's' :	71:3:1267:1275	667569	21	True				
ANR	667743	ExpressionStatement	mode |= 0x80	72:4:1281:1293	667569	22	True				
ANR	667744	AssignmentExpression	mode |= 0x80		667569	0		|=			
ANR	667745	Identifier	mode		667569	0					
ANR	667746	PrimaryExpression	0x80		667569	1					
ANR	667747	BreakStatement	break ;	73:4:1299:1304	667569	23	True				
ANR	667748	Label	case 'K' :	74:3:1309:1317	667569	24	True				
ANR	667749	ExpressionStatement	mode |= 0x100	75:4:1323:1336	667569	25	True				
ANR	667750	AssignmentExpression	mode |= 0x100		667569	0		|=			
ANR	667751	Identifier	mode		667569	0					
ANR	667752	PrimaryExpression	0x100		667569	1					
ANR	667753	BreakStatement	break ;	76:4:1342:1347	667569	26	True				
ANR	667754	Label	case 'k' :	77:3:1352:1360	667569	27	True				
ANR	667755	ExpressionStatement	mode |= 0x1000	78:4:1366:1380	667569	28	True				
ANR	667756	AssignmentExpression	mode |= 0x1000		667569	0		|=			
ANR	667757	Identifier	mode		667569	0					
ANR	667758	PrimaryExpression	0x1000		667569	1					
ANR	667759	BreakStatement	break ;	79:4:1386:1391	667569	29	True				
ANR	667760	Label	case 'H' :	80:3:1396:1404	667569	30	True				
ANR	667761	ExpressionStatement	mode |= 0x200	81:4:1410:1423	667569	31	True				
ANR	667762	AssignmentExpression	mode |= 0x200		667569	0		|=			
ANR	667763	Identifier	mode		667569	0					
ANR	667764	PrimaryExpression	0x200		667569	1					
ANR	667765	BreakStatement	break ;	82:4:1429:1434	667569	32	True				
ANR	667766	Label	case 'h' :	83:3:1439:1447	667569	33	True				
ANR	667767	ExpressionStatement	mode |= 0x2000	84:4:1453:1467	667569	34	True				
ANR	667768	AssignmentExpression	mode |= 0x2000		667569	0		|=			
ANR	667769	Identifier	mode		667569	0					
ANR	667770	PrimaryExpression	0x2000		667569	1					
ANR	667771	BreakStatement	break ;	85:4:1473:1478	667569	35	True				
ANR	667772	Label	case 'V' :	86:3:1483:1491	667569	36	True				
ANR	667773	ExpressionStatement	mode |= 0x800	87:4:1497:1510	667569	37	True				
ANR	667774	AssignmentExpression	mode |= 0x800		667569	0		|=			
ANR	667775	Identifier	mode		667569	0					
ANR	667776	PrimaryExpression	0x800		667569	1					
ANR	667777	BreakStatement	break ;	88:4:1516:1521	667569	38	True				
ANR	667778	Label	case 'C' :	89:3:1526:1534	667569	39	True				
ANR	667779	ExpressionStatement	mode |= 0x10000	90:4:1540:1555	667569	40	True				
ANR	667780	AssignmentExpression	mode |= 0x10000		667569	0		|=			
ANR	667781	Identifier	mode		667569	0					
ANR	667782	PrimaryExpression	0x10000		667569	1					
ANR	667783	BreakStatement	break ;	91:4:1561:1566	667569	41	True				
ANR	667784	Label	case 'c' :	92:3:1571:1579	667569	42	True				
ANR	667785	ExpressionStatement	mode |= 0x20000	93:4:1585:1600	667569	43	True				
ANR	667786	AssignmentExpression	mode |= 0x20000		667569	0		|=			
ANR	667787	Identifier	mode		667569	0					
ANR	667788	PrimaryExpression	0x20000		667569	1					
ANR	667789	BreakStatement	break ;	94:4:1606:1611	667569	44	True				
ANR	667790	Label	case 'M' :	95:3:1616:1624	667569	45	True				
ANR	667791	ExpressionStatement	mode |= 0x100000	96:4:1630:1646	667569	46	True				
ANR	667792	AssignmentExpression	mode |= 0x100000		667569	0		|=			
ANR	667793	Identifier	mode		667569	0					
ANR	667794	PrimaryExpression	0x100000		667569	1					
ANR	667795	BreakStatement	break ;	97:4:1652:1657	667569	47	True				
ANR	667796	Label	case 'm' :	98:3:1662:1670	667569	48	True				
ANR	667797	ExpressionStatement	mode |= 0x200000	99:4:1676:1692	667569	49	True				
ANR	667798	AssignmentExpression	mode |= 0x200000		667569	0		|=			
ANR	667799	Identifier	mode		667569	0					
ANR	667800	PrimaryExpression	0x200000		667569	1					
ANR	667801	BreakStatement	break ;	100:4:1698:1703	667569	50	True				
ANR	667802	DoStatement	do		667569	10					
ANR	667803	CompoundStatement		81:4:1303:1303	667569	0					
ANR	667804	ExpressionStatement	"mbfl_memory_device_init ( & dev , 0 , 4096 )"	106:2:1726:1764	667569	0	True				
ANR	667805	CallExpression	"mbfl_memory_device_init ( & dev , 0 , 4096 )"		667569	0					
ANR	667806	Callee	mbfl_memory_device_init		667569	0					
ANR	667807	Identifier	mbfl_memory_device_init		667569	0					
ANR	667808	ArgumentList	& dev		667569	1					
ANR	667809	Argument	& dev		667569	0					
ANR	667810	UnaryOperationExpression	& dev		667569	0					
ANR	667811	UnaryOperator	&		667569	0					
ANR	667812	Identifier	dev		667569	1					
ANR	667813	Argument	0		667569	1					
ANR	667814	PrimaryExpression	0		667569	0					
ANR	667815	Argument	4096		667569	2					
ANR	667816	PrimaryExpression	4096		667569	0					
ANR	667817	ExpressionStatement	"mbfl_string_init_set ( & string , no_lang , no_enc )"	107:2:1768:1814	667569	1	True				
ANR	667818	CallExpression	"mbfl_string_init_set ( & string , no_lang , no_enc )"		667569	0					
ANR	667819	Callee	mbfl_string_init_set		667569	0					
ANR	667820	Identifier	mbfl_string_init_set		667569	0					
ANR	667821	ArgumentList	& string		667569	1					
ANR	667822	Argument	& string		667569	0					
ANR	667823	UnaryOperationExpression	& string		667569	0					
ANR	667824	UnaryOperator	&		667569	0					
ANR	667825	Identifier	string		667569	1					
ANR	667826	Argument	no_lang		667569	1					
ANR	667827	Identifier	no_lang		667569	0					
ANR	667828	Argument	no_enc		667569	2					
ANR	667829	Identifier	no_enc		667569	0					
ANR	667830	ForStatement	for ( ; ; )		667569	2					
ANR	667831	CompoundStatement		86:3:1414:1440	667569	0					
ANR	667832	IdentifierDeclStatement	const int c = fgetc ( stdin ) ;	110:3:1833:1859	667569	0	True				
ANR	667833	IdentifierDecl	c = fgetc ( stdin )		667569	0					
ANR	667834	IdentifierDeclType	const int		667569	0					
ANR	667835	Identifier	c		667569	1					
ANR	667836	AssignmentExpression	c = fgetc ( stdin )		667569	2		=			
ANR	667837	Identifier	c		667569	0					
ANR	667838	CallExpression	fgetc ( stdin )		667569	1					
ANR	667839	Callee	fgetc		667569	0					
ANR	667840	Identifier	fgetc		667569	0					
ANR	667841	ArgumentList	stdin		667569	1					
ANR	667842	Argument	stdin		667569	0					
ANR	667843	Identifier	stdin		667569	0					
ANR	667844	IfStatement	if ( c == EOF )		667569	1					
ANR	667845	Condition	c == EOF	112:7:1869:1876	667569	0	True				
ANR	667846	EqualityExpression	c == EOF		667569	0		==			
ANR	667847	Identifier	c		667569	0					
ANR	667848	Identifier	EOF		667569	1					
ANR	667849	CompoundStatement		88:17:1460:1460	667569	1					
ANR	667850	ExpressionStatement	final = 1	113:4:1885:1894	667569	0	True				
ANR	667851	AssignmentExpression	final = 1		667569	0		=			
ANR	667852	Identifier	final		667569	0					
ANR	667853	PrimaryExpression	1		667569	1					
ANR	667854	BreakStatement	break ;	114:4:1900:1905	667569	1	True				
ANR	667855	ElseStatement	else		667569	0					
ANR	667856	IfStatement	if ( c == 10 )		667569	0					
ANR	667857	Condition	c == 10	115:14:1921:1927	667569	0	True				
ANR	667858	EqualityExpression	c == 10		667569	0		==			
ANR	667859	Identifier	c		667569	0					
ANR	667860	PrimaryExpression	10		667569	1					
ANR	667861	CompoundStatement		91:23:1511:1511	667569	1					
ANR	667862	IfStatement	if ( state == 1 )		667569	0					
ANR	667863	Condition	state == 1	116:8:1940:1949	667569	0	True				
ANR	667864	EqualityExpression	state == 1		667569	0		==			
ANR	667865	Identifier	state		667569	0					
ANR	667866	PrimaryExpression	1		667569	1					
ANR	667867	CompoundStatement		92:20:1533:1533	667569	1					
ANR	667868	ExpressionStatement	state = 0	117:5:1959:1968	667569	0	True				
ANR	667869	AssignmentExpression	state = 0		667569	0		=			
ANR	667870	Identifier	state		667569	0					
ANR	667871	PrimaryExpression	0		667569	1					
ANR	667872	ContinueStatement	continue ;	118:5:1975:1983	667569	1	True				
ANR	667873	BreakStatement	break ;	120:4:1995:2000	667569	1	True				
ANR	667874	ElseStatement	else		667569	0					
ANR	667875	IfStatement	if ( c == 13 )		667569	0					
ANR	667876	Condition	c == 13	121:14:2016:2022	667569	0	True				
ANR	667877	EqualityExpression	c == 13		667569	0		==			
ANR	667878	Identifier	c		667569	0					
ANR	667879	PrimaryExpression	13		667569	1					
ANR	667880	CompoundStatement		97:23:1606:1606	667569	1					
ANR	667881	ExpressionStatement	state = 1	122:4:2031:2040	667569	0	True				
ANR	667882	AssignmentExpression	state = 1		667569	0		=			
ANR	667883	Identifier	state		667569	0					
ANR	667884	PrimaryExpression	1		667569	1					
ANR	667885	BreakStatement	break ;	123:4:2046:2051	667569	1	True				
ANR	667886	IfStatement	if ( dev . pos >= dev . length )		667569	2					
ANR	667887	Condition	dev . pos >= dev . length	126:7:2066:2086	667569	0	True				
ANR	667888	RelationalExpression	dev . pos >= dev . length		667569	0		>=			
ANR	667889	MemberAccess	dev . pos		667569	0					
ANR	667890	Identifier	dev		667569	0					
ANR	667891	Identifier	pos		667569	1					
ANR	667892	MemberAccess	dev . length		667569	1					
ANR	667893	Identifier	dev		667569	0					
ANR	667894	Identifier	length		667569	1					
ANR	667895	CompoundStatement		102:30:1670:1670	667569	1					
ANR	667896	IfStatement	if ( dev . length + dev . allocsz < dev . length )		667569	0					
ANR	667897	Condition	dev . length + dev . allocsz < dev . length	127:8:2099:2135	667569	0	True				
ANR	667898	RelationalExpression	dev . length + dev . allocsz < dev . length		667569	0		<			
ANR	667899	AdditiveExpression	dev . length + dev . allocsz		667569	0		+			
ANR	667900	MemberAccess	dev . length		667569	0					
ANR	667901	Identifier	dev		667569	0					
ANR	667902	Identifier	length		667569	1					
ANR	667903	MemberAccess	dev . allocsz		667569	1					
ANR	667904	Identifier	dev		667569	0					
ANR	667905	Identifier	allocsz		667569	1					
ANR	667906	MemberAccess	dev . length		667569	1					
ANR	667907	Identifier	dev		667569	0					
ANR	667908	Identifier	length		667569	1					
ANR	667909	CompoundStatement		103:47:1719:1719	667569	1					
ANR	667910	ExpressionStatement	"printf ( ""Unable to allocate memory\\n"" )"	128:5:2145:2182	667569	0	True				
ANR	667911	CallExpression	"printf ( ""Unable to allocate memory\\n"" )"		667569	0					
ANR	667912	Callee	printf		667569	0					
ANR	667913	Identifier	printf		667569	0					
ANR	667914	ArgumentList	"""Unable to allocate memory\\n"""		667569	1					
ANR	667915	Argument	"""Unable to allocate memory\\n"""		667569	0					
ANR	667916	PrimaryExpression	"""Unable to allocate memory\\n"""		667569	0					
ANR	667917	ReturnStatement	return EXIT_FAILURE ;	129:5:2189:2208	667569	1	True				
ANR	667918	Identifier	EXIT_FAILURE		667569	0					
ANR	667919	ExpressionStatement	"mbfl_memory_device_realloc ( & dev , dev . length + dev . allocsz , dev . allocsz )"	132:4:2221:2298	667569	1	True				
ANR	667920	CallExpression	"mbfl_memory_device_realloc ( & dev , dev . length + dev . allocsz , dev . allocsz )"		667569	0					
ANR	667921	Callee	mbfl_memory_device_realloc		667569	0					
ANR	667922	Identifier	mbfl_memory_device_realloc		667569	0					
ANR	667923	ArgumentList	& dev		667569	1					
ANR	667924	Argument	& dev		667569	0					
ANR	667925	UnaryOperationExpression	& dev		667569	0					
ANR	667926	UnaryOperator	&		667569	0					
ANR	667927	Identifier	dev		667569	1					
ANR	667928	Argument	dev . length + dev . allocsz		667569	1					
ANR	667929	AdditiveExpression	dev . length + dev . allocsz		667569	0		+			
ANR	667930	MemberAccess	dev . length		667569	0					
ANR	667931	Identifier	dev		667569	0					
ANR	667932	Identifier	length		667569	1					
ANR	667933	MemberAccess	dev . allocsz		667569	1					
ANR	667934	Identifier	dev		667569	0					
ANR	667935	Identifier	allocsz		667569	1					
ANR	667936	Argument	dev . allocsz		667569	2					
ANR	667937	MemberAccess	dev . allocsz		667569	0					
ANR	667938	Identifier	dev		667569	0					
ANR	667939	Identifier	allocsz		667569	1					
ANR	667940	ExpressionStatement	dev . buffer [ dev . pos ++ ] = ( unsigned char ) c	136:3:2309:2349	667569	3	True				
ANR	667941	AssignmentExpression	dev . buffer [ dev . pos ++ ] = ( unsigned char ) c		667569	0		=			
ANR	667942	ArrayIndexing	dev . buffer [ dev . pos ++ ]		667569	0					
ANR	667943	MemberAccess	dev . buffer		667569	0					
ANR	667944	Identifier	dev		667569	0					
ANR	667945	Identifier	buffer		667569	1					
ANR	667946	PostIncDecOperationExpression	dev . pos ++		667569	1					
ANR	667947	MemberAccess	dev . pos		667569	0					
ANR	667948	Identifier	dev		667569	0					
ANR	667949	Identifier	pos		667569	1					
ANR	667950	IncDec	++		667569	1					
ANR	667951	CastExpression	( unsigned char ) c		667569	1					
ANR	667952	CastTarget	unsigned char		667569	0					
ANR	667953	Identifier	c		667569	1					
ANR	667954	ExpressionStatement	"mbfl_memory_device_result ( & dev , & string )"	139:2:2358:2398	667569	3	True				
ANR	667955	CallExpression	"mbfl_memory_device_result ( & dev , & string )"		667569	0					
ANR	667956	Callee	mbfl_memory_device_result		667569	0					
ANR	667957	Identifier	mbfl_memory_device_result		667569	0					
ANR	667958	ArgumentList	& dev		667569	1					
ANR	667959	Argument	& dev		667569	0					
ANR	667960	UnaryOperationExpression	& dev		667569	0					
ANR	667961	UnaryOperator	&		667569	0					
ANR	667962	Identifier	dev		667569	1					
ANR	667963	Argument	& string		667569	1					
ANR	667964	UnaryOperationExpression	& string		667569	0					
ANR	667965	UnaryOperator	&		667569	0					
ANR	667966	Identifier	string		667569	1					
ANR	667967	ExpressionStatement	"mbfl_ja_jp_hantozen ( & string , & result , mode )"	140:2:2402:2445	667569	4	True				
ANR	667968	CallExpression	"mbfl_ja_jp_hantozen ( & string , & result , mode )"		667569	0					
ANR	667969	Callee	mbfl_ja_jp_hantozen		667569	0					
ANR	667970	Identifier	mbfl_ja_jp_hantozen		667569	0					
ANR	667971	ArgumentList	& string		667569	1					
ANR	667972	Argument	& string		667569	0					
ANR	667973	UnaryOperationExpression	& string		667569	0					
ANR	667974	UnaryOperator	&		667569	0					
ANR	667975	Identifier	string		667569	1					
ANR	667976	Argument	& result		667569	1					
ANR	667977	UnaryOperationExpression	& result		667569	0					
ANR	667978	UnaryOperator	&		667569	0					
ANR	667979	Identifier	result		667569	1					
ANR	667980	Argument	mode		667569	2					
ANR	667981	Identifier	mode		667569	0					
ANR	667982	ExpressionStatement	hexdump ( & result )	141:2:2449:2465	667569	5	True				
ANR	667983	CallExpression	hexdump ( & result )		667569	0					
ANR	667984	Callee	hexdump		667569	0					
ANR	667985	Identifier	hexdump		667569	0					
ANR	667986	ArgumentList	& result		667569	1					
ANR	667987	Argument	& result		667569	0					
ANR	667988	UnaryOperationExpression	& result		667569	0					
ANR	667989	UnaryOperator	&		667569	0					
ANR	667990	Identifier	result		667569	1					
ANR	667991	ExpressionStatement	mbfl_string_clear ( & result )	142:2:2469:2495	667569	6	True				
ANR	667992	CallExpression	mbfl_string_clear ( & result )		667569	0					
ANR	667993	Callee	mbfl_string_clear		667569	0					
ANR	667994	Identifier	mbfl_string_clear		667569	0					
ANR	667995	ArgumentList	& result		667569	1					
ANR	667996	Argument	& result		667569	0					
ANR	667997	UnaryOperationExpression	& result		667569	0					
ANR	667998	UnaryOperator	&		667569	0					
ANR	667999	Identifier	result		667569	1					
ANR	668000	ExpressionStatement	mbfl_string_clear ( & string )	143:2:2499:2525	667569	7	True				
ANR	668001	CallExpression	mbfl_string_clear ( & string )		667569	0					
ANR	668002	Callee	mbfl_string_clear		667569	0					
ANR	668003	Identifier	mbfl_string_clear		667569	0					
ANR	668004	ArgumentList	& string		667569	1					
ANR	668005	Argument	& string		667569	0					
ANR	668006	UnaryOperationExpression	& string		667569	0					
ANR	668007	UnaryOperator	&		667569	0					
ANR	668008	Identifier	string		667569	1					
ANR	668009	Condition	! final	144:10:2537:2542	667569	1	True				
ANR	668010	UnaryOperationExpression	! final		667569	0					
ANR	668011	UnaryOperator	!		667569	0					
ANR	668012	Identifier	final		667569	1					
ANR	668013	ReturnStatement	return EXIT_SUCCESS ;	146:1:2548:2567	667569	11	True				
ANR	668014	Identifier	EXIT_SUCCESS		667569	0					
ANR	668015	ReturnType	int		667569	1					
ANR	668016	Identifier	main		667569	2					
ANR	668017	ParameterList	"int argc , char * * argv"		667569	3					
ANR	668018	Parameter	int argc	24:9:395:402	667569	0	True				
ANR	668019	ParameterType	int		667569	0					
ANR	668020	Identifier	argc		667569	1					
ANR	668021	Parameter	char * * argv	24:19:405:415	667569	1	True				
ANR	668022	ParameterType	char * *		667569	0					
ANR	668023	Identifier	argv		667569	1					
ANR	668024	CFGEntryNode	ENTRY		667569		True				
ANR	668025	CFGExitNode	EXIT		667569		True				
ANR	668026	InfiniteForNode	true		667569		True				
ANR	668027	Symbol	* dev		667569						
ANR	668028	Symbol	* ( -- p )		667569						
ANR	668029	Symbol	& string		667569						
ANR	668030	Symbol	stdin		667569						
ANR	668031	Symbol	string		667569						
ANR	668032	Symbol	* argv		667569						
ANR	668033	Symbol	argv		667569						
ANR	668034	Symbol	mbfl_no_language_japanese		667569						
ANR	668035	Symbol	result		667569						
ANR	668036	Symbol	mode		667569						
ANR	668037	Symbol	strlen		667569						
ANR	668038	Symbol	dev . length		667569						
ANR	668039	Symbol	dev		667569						
ANR	668040	Symbol	& result		667569						
ANR	668041	Symbol	state		667569						
ANR	668042	Symbol	EOF		667569						
ANR	668043	Symbol	argc		667569						
ANR	668044	Symbol	no_enc		667569						
ANR	668045	Symbol	c		667569						
ANR	668046	Symbol	dev . allocsz		667569						
ANR	668047	Symbol	no_lang		667569						
ANR	668048	Symbol	stderr		667569						
ANR	668049	Symbol	p		667569						
ANR	668050	Symbol	mbfl_no_encoding_invalid		667569						
ANR	668051	Symbol	dev . pos		667569						
ANR	668052	Symbol	EXIT_FAILURE		667569						
ANR	668053	Symbol	* dev . buffer		667569						
ANR	668054	Symbol	EXIT_SUCCESS		667569						
ANR	668055	Symbol	final		667569						
ANR	668056	Symbol	* p		667569						
ANR	668057	Symbol	& dev		667569						
ANR	668058	Symbol	dev . buffer		667569						
ANR	668059	Symbol	mbfl_name2no_encoding		667569						
ANR	668060	Symbol	fgetc		667569						
