command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	556949	File	data/converged/CVE-2017-11142_php-src/ext_json_JSON_parser.c								
ANR	556950	ClassDef	classes	44:0:1482:2240							
ANR	556951	DeclStmt									
ANR	556952	Decl							const int	const int [ 128 ]	ascii_class
ANR	556953	ClassDef	states	110:0:3681:4429							
ANR	556954	ClassDef	modes	190:0:8358:8439							
ANR	556955	Function	push	201:0:8517:8728							
ANR	556956	FunctionDef	"push (JSON_parser jp , int mode)"		556955	0					
ANR	556957	CompoundStatement		203:0:8559:8728	556955	0					
ANR	556958	ExpressionStatement	jp -> top += 1	204:4:8565:8577	556955	0	True				
ANR	556959	AssignmentExpression	jp -> top += 1		556955	0		+=			
ANR	556960	PtrMemberAccess	jp -> top		556955	0					
ANR	556961	Identifier	jp		556955	0					
ANR	556962	Identifier	top		556955	1					
ANR	556963	PrimaryExpression	1		556955	1					
ANR	556964	IfStatement	if ( jp -> top >= jp -> depth )		556955	1					
ANR	556965	Condition	jp -> top >= jp -> depth	205:8:8587:8606	556955	0	True				
ANR	556966	RelationalExpression	jp -> top >= jp -> depth		556955	0		>=			
ANR	556967	PtrMemberAccess	jp -> top		556955	0					
ANR	556968	Identifier	jp		556955	0					
ANR	556969	Identifier	top		556955	1					
ANR	556970	PtrMemberAccess	jp -> depth		556955	1					
ANR	556971	Identifier	jp		556955	0					
ANR	556972	Identifier	depth		556955	1					
ANR	556973	CompoundStatement		3:30:49:49	556955	1					
ANR	556974	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_DEPTH	206:2:8613:8650	556955	0	True				
ANR	556975	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_DEPTH		556955	0		=			
ANR	556976	PtrMemberAccess	jp -> error_code		556955	0					
ANR	556977	Identifier	jp		556955	0					
ANR	556978	Identifier	error_code		556955	1					
ANR	556979	Identifier	PHP_JSON_ERROR_DEPTH		556955	1					
ANR	556980	ReturnStatement	return false ;	207:8:8660:8672	556955	1	True				
ANR	556981	Identifier	false		556955	0					
ANR	556982	ExpressionStatement	jp -> stack [ jp -> top ] = mode	209:4:8684:8709	556955	2	True				
ANR	556983	AssignmentExpression	jp -> stack [ jp -> top ] = mode		556955	0		=			
ANR	556984	ArrayIndexing	jp -> stack [ jp -> top ]		556955	0					
ANR	556985	PtrMemberAccess	jp -> stack		556955	0					
ANR	556986	Identifier	jp		556955	0					
ANR	556987	Identifier	stack		556955	1					
ANR	556988	PtrMemberAccess	jp -> top		556955	1					
ANR	556989	Identifier	jp		556955	0					
ANR	556990	Identifier	top		556955	1					
ANR	556991	Identifier	mode		556955	1					
ANR	556992	ReturnStatement	return true ;	210:4:8715:8726	556955	3	True				
ANR	556993	Identifier	true		556955	0					
ANR	556994	ReturnType	static int		556955	1					
ANR	556995	Identifier	push		556955	2					
ANR	556996	ParameterList	"JSON_parser jp , int mode"		556955	3					
ANR	556997	Parameter	JSON_parser jp	202:5:8533:8546	556955	0	True				
ANR	556998	ParameterType	JSON_parser		556955	0					
ANR	556999	Identifier	jp		556955	1					
ANR	557000	Parameter	int mode	202:21:8549:8556	556955	1	True				
ANR	557001	ParameterType	int		556955	0					
ANR	557002	Identifier	mode		556955	1					
ANR	557003	CFGEntryNode	ENTRY		556955		True				
ANR	557004	CFGExitNode	EXIT		556955		True				
ANR	557005	Symbol	jp -> top		556955						
ANR	557006	Symbol	jp		556955						
ANR	557007	Symbol	false		556955						
ANR	557008	Symbol	jp -> depth		556955						
ANR	557009	Symbol	jp -> stack		556955						
ANR	557010	Symbol	* jp		556955						
ANR	557011	Symbol	* jp -> stack		556955						
ANR	557012	Symbol	mode		556955						
ANR	557013	Symbol	* * jp		556955						
ANR	557014	Symbol	* jp -> top		556955						
ANR	557015	Symbol	true		556955						
ANR	557016	Symbol	jp -> error_code		556955						
ANR	557017	Symbol	PHP_JSON_ERROR_DEPTH		556955						
ANR	557018	Function	pop	218:0:8878:9087							
ANR	557019	FunctionDef	"pop (JSON_parser jp , int mode)"		557018	0					
ANR	557020	CompoundStatement		220:0:8919:9087	557018	0					
ANR	557021	IfStatement	if ( jp -> top < 0 || jp -> stack [ jp -> top ] != mode )		557018	0					
ANR	557022	Condition	jp -> top < 0 || jp -> stack [ jp -> top ] != mode	221:8:8929:8969	557018	0	True				
ANR	557023	OrExpression	jp -> top < 0 || jp -> stack [ jp -> top ] != mode		557018	0		||			
ANR	557024	RelationalExpression	jp -> top < 0		557018	0		<			
ANR	557025	PtrMemberAccess	jp -> top		557018	0					
ANR	557026	Identifier	jp		557018	0					
ANR	557027	Identifier	top		557018	1					
ANR	557028	PrimaryExpression	0		557018	1					
ANR	557029	EqualityExpression	jp -> stack [ jp -> top ] != mode		557018	1		!=			
ANR	557030	ArrayIndexing	jp -> stack [ jp -> top ]		557018	0					
ANR	557031	PtrMemberAccess	jp -> stack		557018	0					
ANR	557032	Identifier	jp		557018	0					
ANR	557033	Identifier	stack		557018	1					
ANR	557034	PtrMemberAccess	jp -> top		557018	1					
ANR	557035	Identifier	jp		557018	0					
ANR	557036	Identifier	top		557018	1					
ANR	557037	Identifier	mode		557018	1					
ANR	557038	CompoundStatement		2:51:52:52	557018	1					
ANR	557039	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_STATE_MISMATCH	222:2:8976:9022	557018	0	True				
ANR	557040	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_STATE_MISMATCH		557018	0		=			
ANR	557041	PtrMemberAccess	jp -> error_code		557018	0					
ANR	557042	Identifier	jp		557018	0					
ANR	557043	Identifier	error_code		557018	1					
ANR	557044	Identifier	PHP_JSON_ERROR_STATE_MISMATCH		557018	1					
ANR	557045	ReturnStatement	return false ;	223:8:9032:9044	557018	1	True				
ANR	557046	Identifier	false		557018	0					
ANR	557047	ExpressionStatement	jp -> top -= 1	225:4:9056:9068	557018	1	True				
ANR	557048	AssignmentExpression	jp -> top -= 1		557018	0		-=			
ANR	557049	PtrMemberAccess	jp -> top		557018	0					
ANR	557050	Identifier	jp		557018	0					
ANR	557051	Identifier	top		557018	1					
ANR	557052	PrimaryExpression	1		557018	1					
ANR	557053	ReturnStatement	return true ;	226:4:9074:9085	557018	2	True				
ANR	557054	Identifier	true		557018	0					
ANR	557055	ReturnType	static int		557018	1					
ANR	557056	Identifier	pop		557018	2					
ANR	557057	ParameterList	"JSON_parser jp , int mode"		557018	3					
ANR	557058	Parameter	JSON_parser jp	219:4:8893:8906	557018	0	True				
ANR	557059	ParameterType	JSON_parser		557018	0					
ANR	557060	Identifier	jp		557018	1					
ANR	557061	Parameter	int mode	219:20:8909:8916	557018	1	True				
ANR	557062	ParameterType	int		557018	0					
ANR	557063	Identifier	mode		557018	1					
ANR	557064	CFGEntryNode	ENTRY		557018		True				
ANR	557065	CFGExitNode	EXIT		557018		True				
ANR	557066	Symbol	mode		557018						
ANR	557067	Symbol	* * jp		557018						
ANR	557068	Symbol	* jp -> top		557018						
ANR	557069	Symbol	jp -> top		557018						
ANR	557070	Symbol	jp		557018						
ANR	557071	Symbol	false		557018						
ANR	557072	Symbol	true		557018						
ANR	557073	Symbol	jp -> error_code		557018						
ANR	557074	Symbol	jp -> stack		557018						
ANR	557075	Symbol	PHP_JSON_ERROR_STATE_MISMATCH		557018						
ANR	557076	Symbol	* jp		557018						
ANR	557077	Symbol	* jp -> stack		557018						
ANR	557078	Function	new_JSON_parser	241:0:9605:10103							
ANR	557079	FunctionDef	new_JSON_parser (int depth)		557078	0					
ANR	557080	CompoundStatement		243:0:9644:10103	557078	0					
ANR	557081	IdentifierDeclStatement	JSON_parser jp = ( JSON_parser ) emalloc ( sizeof ( struct JSON_parser_struct ) ) ;	244:4:9650:9722	557078	0	True				
ANR	557082	IdentifierDecl	jp = ( JSON_parser ) emalloc ( sizeof ( struct JSON_parser_struct ) )		557078	0					
ANR	557083	IdentifierDeclType	JSON_parser		557078	0					
ANR	557084	Identifier	jp		557078	1					
ANR	557085	AssignmentExpression	jp = ( JSON_parser ) emalloc ( sizeof ( struct JSON_parser_struct ) )		557078	2		=			
ANR	557086	Identifier	jp		557078	0					
ANR	557087	CastExpression	( JSON_parser ) emalloc ( sizeof ( struct JSON_parser_struct ) )		557078	1					
ANR	557088	CastTarget	JSON_parser		557078	0					
ANR	557089	CallExpression	emalloc ( sizeof ( struct JSON_parser_struct ) )		557078	1					
ANR	557090	Callee	emalloc		557078	0					
ANR	557091	Identifier	emalloc		557078	0					
ANR	557092	ArgumentList	sizeof ( struct JSON_parser_struct )		557078	1					
ANR	557093	Argument	sizeof ( struct JSON_parser_struct )		557078	0					
ANR	557094	SizeofExpression	sizeof ( struct JSON_parser_struct )		557078	0					
ANR	557095	Sizeof	sizeof		557078	0					
ANR	557096	SizeofOperand	struct JSON_parser_struct		557078	1					
ANR	557097	ExpressionStatement	jp -> state = GO	245:4:9728:9742	557078	1	True				
ANR	557098	AssignmentExpression	jp -> state = GO		557078	0		=			
ANR	557099	PtrMemberAccess	jp -> state		557078	0					
ANR	557100	Identifier	jp		557078	0					
ANR	557101	Identifier	state		557078	1					
ANR	557102	Identifier	GO		557078	1					
ANR	557103	ExpressionStatement	jp -> depth = depth	246:4:9748:9765	557078	2	True				
ANR	557104	AssignmentExpression	jp -> depth = depth		557078	0		=			
ANR	557105	PtrMemberAccess	jp -> depth		557078	0					
ANR	557106	Identifier	jp		557078	0					
ANR	557107	Identifier	depth		557078	1					
ANR	557108	Identifier	depth		557078	1					
ANR	557109	ExpressionStatement	jp -> top = - 1	247:4:9771:9783	557078	3	True				
ANR	557110	AssignmentExpression	jp -> top = - 1		557078	0		=			
ANR	557111	PtrMemberAccess	jp -> top		557078	0					
ANR	557112	Identifier	jp		557078	0					
ANR	557113	Identifier	top		557078	1					
ANR	557114	UnaryOperationExpression	- 1		557078	1					
ANR	557115	UnaryOperator	-		557078	0					
ANR	557116	PrimaryExpression	1		557078	1					
ANR	557117	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_NONE	248:1:9786:9822	557078	4	True				
ANR	557118	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_NONE		557078	0		=			
ANR	557119	PtrMemberAccess	jp -> error_code		557078	0					
ANR	557120	Identifier	jp		557078	0					
ANR	557121	Identifier	error_code		557078	1					
ANR	557122	Identifier	PHP_JSON_ERROR_NONE		557078	1					
ANR	557123	ExpressionStatement	"jp -> stack = ( int * ) ecalloc ( depth , sizeof ( int ) )"	249:4:9828:9873	557078	5	True				
ANR	557124	AssignmentExpression	"jp -> stack = ( int * ) ecalloc ( depth , sizeof ( int ) )"		557078	0		=			
ANR	557125	PtrMemberAccess	jp -> stack		557078	0					
ANR	557126	Identifier	jp		557078	0					
ANR	557127	Identifier	stack		557078	1					
ANR	557128	CastExpression	"( int * ) ecalloc ( depth , sizeof ( int ) )"		557078	1					
ANR	557129	CastTarget	int *		557078	0					
ANR	557130	CallExpression	"ecalloc ( depth , sizeof ( int ) )"		557078	1					
ANR	557131	Callee	ecalloc		557078	0					
ANR	557132	Identifier	ecalloc		557078	0					
ANR	557133	ArgumentList	depth		557078	1					
ANR	557134	Argument	depth		557078	0					
ANR	557135	Identifier	depth		557078	0					
ANR	557136	Argument	sizeof ( int )		557078	1					
ANR	557137	SizeofExpression	sizeof ( int )		557078	0					
ANR	557138	Sizeof	sizeof		557078	0					
ANR	557139	SizeofOperand	int		557078	1					
ANR	557140	IfStatement	if ( depth > JSON_PARSER_DEFAULT_DEPTH )		557078	6					
ANR	557141	Condition	depth > JSON_PARSER_DEFAULT_DEPTH	250:8:9883:9915	557078	0	True				
ANR	557142	RelationalExpression	depth > JSON_PARSER_DEFAULT_DEPTH		557078	0		>			
ANR	557143	Identifier	depth		557078	0					
ANR	557144	Identifier	JSON_PARSER_DEFAULT_DEPTH		557078	1					
ANR	557145	CompoundStatement		8:43:273:273	557078	1					
ANR	557146	ExpressionStatement	"jp -> the_zstack = ( zval * * ) safe_emalloc ( depth , sizeof ( zval ) , 0 )"	251:8:9928:9990	557078	0	True				
ANR	557147	AssignmentExpression	"jp -> the_zstack = ( zval * * ) safe_emalloc ( depth , sizeof ( zval ) , 0 )"		557078	0		=			
ANR	557148	PtrMemberAccess	jp -> the_zstack		557078	0					
ANR	557149	Identifier	jp		557078	0					
ANR	557150	Identifier	the_zstack		557078	1					
ANR	557151	CastExpression	"( zval * * ) safe_emalloc ( depth , sizeof ( zval ) , 0 )"		557078	1					
ANR	557152	CastTarget	zval * *		557078	0					
ANR	557153	CallExpression	"safe_emalloc ( depth , sizeof ( zval ) , 0 )"		557078	1					
ANR	557154	Callee	safe_emalloc		557078	0					
ANR	557155	Identifier	safe_emalloc		557078	0					
ANR	557156	ArgumentList	depth		557078	1					
ANR	557157	Argument	depth		557078	0					
ANR	557158	Identifier	depth		557078	0					
ANR	557159	Argument	sizeof ( zval )		557078	1					
ANR	557160	SizeofExpression	sizeof ( zval )		557078	0					
ANR	557161	Sizeof	sizeof		557078	0					
ANR	557162	SizeofOperand	zval		557078	1					
ANR	557163	Argument	0		557078	2					
ANR	557164	PrimaryExpression	0		557078	0					
ANR	557165	ElseStatement	else		557078	0					
ANR	557166	CompoundStatement		10:11:358:358	557078	0					
ANR	557167	ExpressionStatement	jp -> the_zstack = & jp -> the_static_zstack [ 0 ]	253:8:10013:10055	557078	0	True				
ANR	557168	AssignmentExpression	jp -> the_zstack = & jp -> the_static_zstack [ 0 ]		557078	0		=			
ANR	557169	PtrMemberAccess	jp -> the_zstack		557078	0					
ANR	557170	Identifier	jp		557078	0					
ANR	557171	Identifier	the_zstack		557078	1					
ANR	557172	UnaryOperationExpression	& jp -> the_static_zstack [ 0 ]		557078	1					
ANR	557173	UnaryOperator	&		557078	0					
ANR	557174	ArrayIndexing	jp -> the_static_zstack [ 0 ]		557078	1					
ANR	557175	PtrMemberAccess	jp -> the_static_zstack		557078	0					
ANR	557176	Identifier	jp		557078	0					
ANR	557177	Identifier	the_static_zstack		557078	1					
ANR	557178	PrimaryExpression	0		557078	1					
ANR	557179	ExpressionStatement	"push ( jp , MODE_DONE )"	255:4:10067:10086	557078	7	True				
ANR	557180	CallExpression	"push ( jp , MODE_DONE )"		557078	0					
ANR	557181	Callee	push		557078	0					
ANR	557182	Identifier	push		557078	0					
ANR	557183	ArgumentList	jp		557078	1					
ANR	557184	Argument	jp		557078	0					
ANR	557185	Identifier	jp		557078	0					
ANR	557186	Argument	MODE_DONE		557078	1					
ANR	557187	Identifier	MODE_DONE		557078	0					
ANR	557188	ReturnStatement	return jp ;	256:4:10092:10101	557078	8	True				
ANR	557189	Identifier	jp		557078	0					
ANR	557190	ReturnType	JSON_parser		557078	1					
ANR	557191	Identifier	new_JSON_parser		557078	2					
ANR	557192	ParameterList	int depth		557078	3					
ANR	557193	Parameter	int depth	242:16:9633:9641	557078	0	True				
ANR	557194	ParameterType	int		557078	0					
ANR	557195	Identifier	depth		557078	1					
ANR	557196	CFGEntryNode	ENTRY		557078		True				
ANR	557197	CFGExitNode	EXIT		557078		True				
ANR	557198	Symbol	jp -> state		557078						
ANR	557199	Symbol	jp -> top		557078						
ANR	557200	Symbol	jp		557078						
ANR	557201	Symbol	jp -> the_zstack		557078						
ANR	557202	Symbol	GO		557078						
ANR	557203	Symbol	jp -> depth		557078						
ANR	557204	Symbol	jp -> stack		557078						
ANR	557205	Symbol	MODE_DONE		557078						
ANR	557206	Symbol	* jp		557078						
ANR	557207	Symbol	PHP_JSON_ERROR_NONE		557078						
ANR	557208	Symbol	emalloc		557078						
ANR	557209	Symbol	depth		557078						
ANR	557210	Symbol	jp -> the_static_zstack		557078						
ANR	557211	Symbol	JSON_PARSER_DEFAULT_DEPTH		557078						
ANR	557212	Symbol	jp -> error_code		557078						
ANR	557213	Symbol	ecalloc		557078						
ANR	557214	Symbol	safe_emalloc		557078						
ANR	557215	Function	free_JSON_parser	262:0:10147:10347							
ANR	557216	FunctionDef	free_JSON_parser (JSON_parser jp)		557215	0					
ANR	557217	CompoundStatement		264:0:10184:10347	557215	0					
ANR	557218	ExpressionStatement	efree ( ( void * ) jp -> stack )	265:4:10190:10213	557215	0	True				
ANR	557219	CallExpression	efree ( ( void * ) jp -> stack )		557215	0					
ANR	557220	Callee	efree		557215	0					
ANR	557221	Identifier	efree		557215	0					
ANR	557222	ArgumentList	( void * ) jp -> stack		557215	1					
ANR	557223	Argument	( void * ) jp -> stack		557215	0					
ANR	557224	CastExpression	( void * ) jp -> stack		557215	0					
ANR	557225	CastTarget	void *		557215	0					
ANR	557226	PtrMemberAccess	jp -> stack		557215	1					
ANR	557227	Identifier	jp		557215	0					
ANR	557228	Identifier	stack		557215	1					
ANR	557229	IfStatement	if ( jp -> the_zstack != & jp -> the_static_zstack [ 0 ] )		557215	1					
ANR	557230	Condition	jp -> the_zstack != & jp -> the_static_zstack [ 0 ]	266:8:10223:10265	557215	0	True				
ANR	557231	EqualityExpression	jp -> the_zstack != & jp -> the_static_zstack [ 0 ]		557215	0		!=			
ANR	557232	PtrMemberAccess	jp -> the_zstack		557215	0					
ANR	557233	Identifier	jp		557215	0					
ANR	557234	Identifier	the_zstack		557215	1					
ANR	557235	UnaryOperationExpression	& jp -> the_static_zstack [ 0 ]		557215	1					
ANR	557236	UnaryOperator	&		557215	0					
ANR	557237	ArrayIndexing	jp -> the_static_zstack [ 0 ]		557215	1					
ANR	557238	PtrMemberAccess	jp -> the_static_zstack		557215	0					
ANR	557239	Identifier	jp		557215	0					
ANR	557240	Identifier	the_static_zstack		557215	1					
ANR	557241	PrimaryExpression	0		557215	1					
ANR	557242	CompoundStatement		3:53:83:83	557215	1					
ANR	557243	ExpressionStatement	efree ( jp -> the_zstack )	267:8:10278:10299	557215	0	True				
ANR	557244	CallExpression	efree ( jp -> the_zstack )		557215	0					
ANR	557245	Callee	efree		557215	0					
ANR	557246	Identifier	efree		557215	0					
ANR	557247	ArgumentList	jp -> the_zstack		557215	1					
ANR	557248	Argument	jp -> the_zstack		557215	0					
ANR	557249	PtrMemberAccess	jp -> the_zstack		557215	0					
ANR	557250	Identifier	jp		557215	0					
ANR	557251	Identifier	the_zstack		557215	1					
ANR	557252	ExpressionStatement	efree ( ( void * ) jp )	269:4:10311:10327	557215	2	True				
ANR	557253	CallExpression	efree ( ( void * ) jp )		557215	0					
ANR	557254	Callee	efree		557215	0					
ANR	557255	Identifier	efree		557215	0					
ANR	557256	ArgumentList	( void * ) jp		557215	1					
ANR	557257	Argument	( void * ) jp		557215	0					
ANR	557258	CastExpression	( void * ) jp		557215	0					
ANR	557259	CastTarget	void *		557215	0					
ANR	557260	Identifier	jp		557215	1					
ANR	557261	ReturnStatement	return false ;	270:4:10333:10345	557215	3	True				
ANR	557262	Identifier	false		557215	0					
ANR	557263	ReturnType	int		557215	1					
ANR	557264	Identifier	free_JSON_parser		557215	2					
ANR	557265	ParameterList	JSON_parser jp		557215	3					
ANR	557266	Parameter	JSON_parser jp	263:17:10168:10181	557215	0	True				
ANR	557267	ParameterType	JSON_parser		557215	0					
ANR	557268	Identifier	jp		557215	1					
ANR	557269	CFGEntryNode	ENTRY		557215		True				
ANR	557270	CFGExitNode	EXIT		557215		True				
ANR	557271	Symbol	jp -> the_static_zstack		557215						
ANR	557272	Symbol	jp		557215						
ANR	557273	Symbol	jp -> the_zstack		557215						
ANR	557274	Symbol	false		557215						
ANR	557275	Symbol	jp -> stack		557215						
ANR	557276	Symbol	* jp		557215						
ANR	557277	Function	dehexchar	273:0:10350:10643							
ANR	557278	FunctionDef	dehexchar (char c)		557277	0					
ANR	557279	CompoundStatement		274:0:10379:10643	557277	0					
ANR	557280	IfStatement	if ( c >= '0' && c <= '9' )		557277	0					
ANR	557281	Condition	c >= '0' && c <= '9'	275:8:10389:10408	557277	0	True				
ANR	557282	AndExpression	c >= '0' && c <= '9'		557277	0		&&			
ANR	557283	RelationalExpression	c >= '0'		557277	0		>=			
ANR	557284	Identifier	c		557277	0					
ANR	557285	PrimaryExpression	'0'		557277	1					
ANR	557286	RelationalExpression	c <= '9'		557277	1		<=			
ANR	557287	Identifier	c		557277	0					
ANR	557288	PrimaryExpression	'9'		557277	1					
ANR	557289	CompoundStatement		3:4:35:35	557277	1					
ANR	557290	ReturnStatement	return c - '0' ;	277:8:10425:10439	557277	0	True				
ANR	557291	AdditiveExpression	c - '0'		557277	0		-			
ANR	557292	Identifier	c		557277	0					
ANR	557293	PrimaryExpression	'0'		557277	1					
ANR	557294	ElseStatement	else		557277	0					
ANR	557295	IfStatement	if ( c >= 'A' && c <= 'F' )		557277	0					
ANR	557296	Condition	c >= 'A' && c <= 'F'	279:13:10460:10479	557277	0	True				
ANR	557297	AndExpression	c >= 'A' && c <= 'F'		557277	0		&&			
ANR	557298	RelationalExpression	c >= 'A'		557277	0		>=			
ANR	557299	Identifier	c		557277	0					
ANR	557300	PrimaryExpression	'A'		557277	1					
ANR	557301	RelationalExpression	c <= 'F'		557277	1		<=			
ANR	557302	Identifier	c		557277	0					
ANR	557303	PrimaryExpression	'F'		557277	1					
ANR	557304	CompoundStatement		7:4:106:106	557277	1					
ANR	557305	ReturnStatement	return c - ( 'A' - 10 ) ;	281:8:10496:10517	557277	0	True				
ANR	557306	AdditiveExpression	c - ( 'A' - 10 )		557277	0		-			
ANR	557307	Identifier	c		557277	0					
ANR	557308	AdditiveExpression	'A' - 10		557277	1		-			
ANR	557309	PrimaryExpression	'A'		557277	0					
ANR	557310	PrimaryExpression	10		557277	1					
ANR	557311	ElseStatement	else		557277	0					
ANR	557312	IfStatement	if ( c >= 'a' && c <= 'f' )		557277	0					
ANR	557313	Condition	c >= 'a' && c <= 'f'	283:13:10538:10557	557277	0	True				
ANR	557314	AndExpression	c >= 'a' && c <= 'f'		557277	0		&&			
ANR	557315	RelationalExpression	c >= 'a'		557277	0		>=			
ANR	557316	Identifier	c		557277	0					
ANR	557317	PrimaryExpression	'a'		557277	1					
ANR	557318	RelationalExpression	c <= 'f'		557277	1		<=			
ANR	557319	Identifier	c		557277	0					
ANR	557320	PrimaryExpression	'f'		557277	1					
ANR	557321	CompoundStatement		11:4:184:184	557277	1					
ANR	557322	ReturnStatement	return c - ( 'a' - 10 ) ;	285:8:10574:10595	557277	0	True				
ANR	557323	AdditiveExpression	c - ( 'a' - 10 )		557277	0		-			
ANR	557324	Identifier	c		557277	0					
ANR	557325	AdditiveExpression	'a' - 10		557277	1		-			
ANR	557326	PrimaryExpression	'a'		557277	0					
ANR	557327	PrimaryExpression	10		557277	1					
ANR	557328	ElseStatement	else		557277	0					
ANR	557329	CompoundStatement		15:4:236:236	557277	0					
ANR	557330	ReturnStatement	return - 1 ;	289:8:10626:10635	557277	0	True				
ANR	557331	UnaryOperationExpression	- 1		557277	0					
ANR	557332	UnaryOperator	-		557277	0					
ANR	557333	PrimaryExpression	1		557277	1					
ANR	557334	ReturnType	static int		557277	1					
ANR	557335	Identifier	dehexchar		557277	2					
ANR	557336	ParameterList	char c		557277	3					
ANR	557337	Parameter	char c	273:21:10371:10376	557277	0	True				
ANR	557338	ParameterType	char		557277	0					
ANR	557339	Identifier	c		557277	1					
ANR	557340	CFGEntryNode	ENTRY		557277		True				
ANR	557341	CFGExitNode	EXIT		557277		True				
ANR	557342	Symbol	c		557277						
ANR	557343	Function	json_create_zval	294:0:10647:11827							
ANR	557344	FunctionDef	"json_create_zval (zval * * z , smart_str * buf , int type , int options)"		557343	0					
ANR	557345	CompoundStatement		295:0:10725:11827	557343	0					
ANR	557346	ExpressionStatement	ALLOC_INIT_ZVAL ( * z )	296:4:10731:10750	557343	0	True				
ANR	557347	CallExpression	ALLOC_INIT_ZVAL ( * z )		557343	0					
ANR	557348	Callee	ALLOC_INIT_ZVAL		557343	0					
ANR	557349	Identifier	ALLOC_INIT_ZVAL		557343	0					
ANR	557350	ArgumentList	* z		557343	1					
ANR	557351	Argument	* z		557343	0					
ANR	557352	UnaryOperationExpression	* z		557343	0					
ANR	557353	UnaryOperator	*		557343	0					
ANR	557354	Identifier	z		557343	1					
ANR	557355	IfStatement	if ( type == IS_LONG )		557343	1					
ANR	557356	Condition	type == IS_LONG	298:8:10761:10775	557343	0	True				
ANR	557357	EqualityExpression	type == IS_LONG		557343	0		==			
ANR	557358	Identifier	type		557343	0					
ANR	557359	Identifier	IS_LONG		557343	1					
ANR	557360	CompoundStatement		6:2:60:80	557343	1					
ANR	557361	IdentifierDeclStatement	zend_bool bigint = 0 ;	300:2:10786:10806	557343	0	True				
ANR	557362	IdentifierDecl	bigint = 0		557343	0					
ANR	557363	IdentifierDeclType	zend_bool		557343	0					
ANR	557364	Identifier	bigint		557343	1					
ANR	557365	AssignmentExpression	bigint = 0		557343	2		=			
ANR	557366	Identifier	bigint		557343	0					
ANR	557367	PrimaryExpression	0		557343	1					
ANR	557368	IfStatement	if ( buf -> c [ 0 ] == '-' )		557343	1					
ANR	557369	Condition	buf -> c [ 0 ] == '-'	302:6:10815:10830	557343	0	True				
ANR	557370	EqualityExpression	buf -> c [ 0 ] == '-'		557343	0		==			
ANR	557371	ArrayIndexing	buf -> c [ 0 ]		557343	0					
ANR	557372	PtrMemberAccess	buf -> c		557343	0					
ANR	557373	Identifier	buf		557343	0					
ANR	557374	Identifier	c		557343	1					
ANR	557375	PrimaryExpression	0		557343	1					
ANR	557376	PrimaryExpression	'-'		557343	1					
ANR	557377	CompoundStatement		8:24:107:107	557343	1					
ANR	557378	ExpressionStatement	buf -> len --	303:3:10838:10848	557343	0	True				
ANR	557379	PostIncDecOperationExpression	buf -> len --		557343	0					
ANR	557380	PtrMemberAccess	buf -> len		557343	0					
ANR	557381	Identifier	buf		557343	0					
ANR	557382	Identifier	len		557343	1					
ANR	557383	IncDec	--		557343	1					
ANR	557384	IfStatement	if ( buf -> len >= MAX_LENGTH_OF_LONG - 1 )		557343	2					
ANR	557385	Condition	buf -> len >= MAX_LENGTH_OF_LONG - 1	306:6:10861:10894	557343	0	True				
ANR	557386	RelationalExpression	buf -> len >= MAX_LENGTH_OF_LONG - 1		557343	0		>=			
ANR	557387	PtrMemberAccess	buf -> len		557343	0					
ANR	557388	Identifier	buf		557343	0					
ANR	557389	Identifier	len		557343	1					
ANR	557390	AdditiveExpression	MAX_LENGTH_OF_LONG - 1		557343	1		-			
ANR	557391	Identifier	MAX_LENGTH_OF_LONG		557343	0					
ANR	557392	PrimaryExpression	1		557343	1					
ANR	557393	CompoundStatement		12:42:171:171	557343	1					
ANR	557394	IfStatement	if ( buf -> len == MAX_LENGTH_OF_LONG - 1 )		557343	0					
ANR	557395	Condition	buf -> len == MAX_LENGTH_OF_LONG - 1	307:7:10906:10939	557343	0	True				
ANR	557396	EqualityExpression	buf -> len == MAX_LENGTH_OF_LONG - 1		557343	0		==			
ANR	557397	PtrMemberAccess	buf -> len		557343	0					
ANR	557398	Identifier	buf		557343	0					
ANR	557399	Identifier	len		557343	1					
ANR	557400	AdditiveExpression	MAX_LENGTH_OF_LONG - 1		557343	1		-			
ANR	557401	Identifier	MAX_LENGTH_OF_LONG		557343	0					
ANR	557402	PrimaryExpression	1		557343	1					
ANR	557403	CompoundStatement		14:4:222:284	557343	1					
ANR	557404	IdentifierDeclStatement	"int cmp = strcmp ( buf -> c + ( buf -> c [ 0 ] == '-' ) , long_min_digits ) ;"	308:4:10948:11010	557343	0	True				
ANR	557405	IdentifierDecl	"cmp = strcmp ( buf -> c + ( buf -> c [ 0 ] == '-' ) , long_min_digits )"		557343	0					
ANR	557406	IdentifierDeclType	int		557343	0					
ANR	557407	Identifier	cmp		557343	1					
ANR	557408	AssignmentExpression	"cmp = strcmp ( buf -> c + ( buf -> c [ 0 ] == '-' ) , long_min_digits )"		557343	2		=			
ANR	557409	Identifier	cmp		557343	0					
ANR	557410	CallExpression	"strcmp ( buf -> c + ( buf -> c [ 0 ] == '-' ) , long_min_digits )"		557343	1					
ANR	557411	Callee	strcmp		557343	0					
ANR	557412	Identifier	strcmp		557343	0					
ANR	557413	ArgumentList	buf -> c + ( buf -> c [ 0 ] == '-' )		557343	1					
ANR	557414	Argument	buf -> c + ( buf -> c [ 0 ] == '-' )		557343	0					
ANR	557415	AdditiveExpression	buf -> c + ( buf -> c [ 0 ] == '-' )		557343	0		+			
ANR	557416	PtrMemberAccess	buf -> c		557343	0					
ANR	557417	Identifier	buf		557343	0					
ANR	557418	Identifier	c		557343	1					
ANR	557419	EqualityExpression	buf -> c [ 0 ] == '-'		557343	1		==			
ANR	557420	ArrayIndexing	buf -> c [ 0 ]		557343	0					
ANR	557421	PtrMemberAccess	buf -> c		557343	0					
ANR	557422	Identifier	buf		557343	0					
ANR	557423	Identifier	c		557343	1					
ANR	557424	PrimaryExpression	0		557343	1					
ANR	557425	PrimaryExpression	'-'		557343	1					
ANR	557426	Argument	long_min_digits		557343	1					
ANR	557427	Identifier	long_min_digits		557343	0					
ANR	557428	IfStatement	if ( ! ( cmp < 0 || ( cmp == 0 && buf -> c [ 0 ] == '-' ) ) )		557343	1					
ANR	557429	Condition	! ( cmp < 0 || ( cmp == 0 && buf -> c [ 0 ] == '-' ) )	310:8:11021:11064	557343	0	True				
ANR	557430	UnaryOperationExpression	! ( cmp < 0 || ( cmp == 0 && buf -> c [ 0 ] == '-' ) )		557343	0					
ANR	557431	UnaryOperator	!		557343	0					
ANR	557432	OrExpression	cmp < 0 || ( cmp == 0 && buf -> c [ 0 ] == '-' )		557343	1		||			
ANR	557433	RelationalExpression	cmp < 0		557343	0		<			
ANR	557434	Identifier	cmp		557343	0					
ANR	557435	PrimaryExpression	0		557343	1					
ANR	557436	AndExpression	cmp == 0 && buf -> c [ 0 ] == '-'		557343	1		&&			
ANR	557437	EqualityExpression	cmp == 0		557343	0		==			
ANR	557438	Identifier	cmp		557343	0					
ANR	557439	PrimaryExpression	0		557343	1					
ANR	557440	EqualityExpression	buf -> c [ 0 ] == '-'		557343	1		==			
ANR	557441	ArrayIndexing	buf -> c [ 0 ]		557343	0					
ANR	557442	PtrMemberAccess	buf -> c		557343	0					
ANR	557443	Identifier	buf		557343	0					
ANR	557444	Identifier	c		557343	1					
ANR	557445	PrimaryExpression	0		557343	1					
ANR	557446	PrimaryExpression	'-'		557343	1					
ANR	557447	CompoundStatement		16:54:341:341	557343	1					
ANR	557448	ExpressionStatement	bigint = 1	311:5:11074:11084	557343	0	True				
ANR	557449	AssignmentExpression	bigint = 1		557343	0		=			
ANR	557450	Identifier	bigint		557343	0					
ANR	557451	PrimaryExpression	1		557343	1					
ANR	557452	ElseStatement	else		557343	0					
ANR	557453	CompoundStatement		19:10:376:376	557343	0					
ANR	557454	ExpressionStatement	bigint = 1	314:4:11108:11118	557343	0	True				
ANR	557455	AssignmentExpression	bigint = 1		557343	0		=			
ANR	557456	Identifier	bigint		557343	0					
ANR	557457	PrimaryExpression	1		557343	1					
ANR	557458	IfStatement	if ( bigint )		557343	3					
ANR	557459	Condition	bigint	318:6:11136:11141	557343	0	True				
ANR	557460	Identifier	bigint		557343	0					
ANR	557461	CompoundStatement		24:14:418:418	557343	1					
ANR	557462	IfStatement	if ( options & PHP_JSON_BIGINT_AS_STRING )		557343	0					
ANR	557463	Condition	options & PHP_JSON_BIGINT_AS_STRING	320:7:11201:11235	557343	0	True				
ANR	557464	BitAndExpression	options & PHP_JSON_BIGINT_AS_STRING		557343	0		&			
ANR	557465	Identifier	options		557343	0					
ANR	557466	Identifier	PHP_JSON_BIGINT_AS_STRING		557343	1					
ANR	557467	CompoundStatement		26:44:512:512	557343	1					
ANR	557468	IfStatement	if ( buf -> c [ 0 ] == '-' )		557343	0					
ANR	557469	Condition	buf -> c [ 0 ] == '-'	321:8:11248:11263	557343	0	True				
ANR	557470	EqualityExpression	buf -> c [ 0 ] == '-'		557343	0		==			
ANR	557471	ArrayIndexing	buf -> c [ 0 ]		557343	0					
ANR	557472	PtrMemberAccess	buf -> c		557343	0					
ANR	557473	Identifier	buf		557343	0					
ANR	557474	Identifier	c		557343	1					
ANR	557475	PrimaryExpression	0		557343	1					
ANR	557476	PrimaryExpression	'-'		557343	1					
ANR	557477	CompoundStatement		27:26:540:540	557343	1					
ANR	557478	ExpressionStatement	buf -> len ++	323:5:11317:11327	557343	0	True				
ANR	557479	PostIncDecOperationExpression	buf -> len ++		557343	0					
ANR	557480	PtrMemberAccess	buf -> len		557343	0					
ANR	557481	Identifier	buf		557343	0					
ANR	557482	Identifier	len		557343	1					
ANR	557483	IncDec	++		557343	1					
ANR	557484	GotoStatement	goto use_string ;	325:4:11339:11354	557343	1	True				
ANR	557485	Identifier	use_string		557343	0					
ANR	557486	ElseStatement	else		557343	0					
ANR	557487	CompoundStatement		32:10:640:640	557343	0					
ANR	557488	GotoStatement	goto use_double ;	327:4:11372:11387	557343	0	True				
ANR	557489	Identifier	use_double		557343	0					
ANR	557490	ExpressionStatement	"ZVAL_LONG ( * z , strtol ( buf -> c , NULL , 10 ) )"	331:2:11401:11440	557343	4	True				
ANR	557491	CallExpression	"ZVAL_LONG ( * z , strtol ( buf -> c , NULL , 10 ) )"		557343	0					
ANR	557492	Callee	ZVAL_LONG		557343	0					
ANR	557493	Identifier	ZVAL_LONG		557343	0					
ANR	557494	ArgumentList	* z		557343	1					
ANR	557495	Argument	* z		557343	0					
ANR	557496	UnaryOperationExpression	* z		557343	0					
ANR	557497	UnaryOperator	*		557343	0					
ANR	557498	Identifier	z		557343	1					
ANR	557499	Argument	"strtol ( buf -> c , NULL , 10 )"		557343	1					
ANR	557500	CallExpression	"strtol ( buf -> c , NULL , 10 )"		557343	0					
ANR	557501	Callee	strtol		557343	0					
ANR	557502	Identifier	strtol		557343	0					
ANR	557503	ArgumentList	buf -> c		557343	1					
ANR	557504	Argument	buf -> c		557343	0					
ANR	557505	PtrMemberAccess	buf -> c		557343	0					
ANR	557506	Identifier	buf		557343	0					
ANR	557507	Identifier	c		557343	1					
ANR	557508	Argument	NULL		557343	1					
ANR	557509	Identifier	NULL		557343	0					
ANR	557510	Argument	10		557343	2					
ANR	557511	PrimaryExpression	10		557343	0					
ANR	557512	ElseStatement	else		557343	0					
ANR	557513	IfStatement	if ( type == IS_DOUBLE )		557343	0					
ANR	557514	Condition	type == IS_DOUBLE	333:13:11461:11477	557343	0	True				
ANR	557515	EqualityExpression	type == IS_DOUBLE		557343	0		==			
ANR	557516	Identifier	type		557343	0					
ANR	557517	Identifier	IS_DOUBLE		557343	1					
ANR	557518	CompoundStatement		40:4:758:758	557343	1					
ANR	557519	Label	use_double :	335:0:11486:11496	557343	0	True				
ANR	557520	Identifier	use_double		557343	0					
ANR	557521	ExpressionStatement	"ZVAL_DOUBLE ( * z , zend_strtod ( buf -> c , NULL ) )"	336:8:11506:11548	557343	1	True				
ANR	557522	CallExpression	"ZVAL_DOUBLE ( * z , zend_strtod ( buf -> c , NULL ) )"		557343	0					
ANR	557523	Callee	ZVAL_DOUBLE		557343	0					
ANR	557524	Identifier	ZVAL_DOUBLE		557343	0					
ANR	557525	ArgumentList	* z		557343	1					
ANR	557526	Argument	* z		557343	0					
ANR	557527	UnaryOperationExpression	* z		557343	0					
ANR	557528	UnaryOperator	*		557343	0					
ANR	557529	Identifier	z		557343	1					
ANR	557530	Argument	"zend_strtod ( buf -> c , NULL )"		557343	1					
ANR	557531	CallExpression	"zend_strtod ( buf -> c , NULL )"		557343	0					
ANR	557532	Callee	zend_strtod		557343	0					
ANR	557533	Identifier	zend_strtod		557343	0					
ANR	557534	ArgumentList	buf -> c		557343	1					
ANR	557535	Argument	buf -> c		557343	0					
ANR	557536	PtrMemberAccess	buf -> c		557343	0					
ANR	557537	Identifier	buf		557343	0					
ANR	557538	Identifier	c		557343	1					
ANR	557539	Argument	NULL		557343	1					
ANR	557540	Identifier	NULL		557343	0					
ANR	557541	ElseStatement	else		557343	0					
ANR	557542	IfStatement	if ( type == IS_STRING )		557343	0					
ANR	557543	Condition	type == IS_STRING	338:13:11569:11585	557343	0	True				
ANR	557544	EqualityExpression	type == IS_STRING		557343	0		==			
ANR	557545	Identifier	type		557343	0					
ANR	557546	Identifier	IS_STRING		557343	1					
ANR	557547	CompoundStatement		45:4:866:866	557343	1					
ANR	557548	Label	use_string :	340:0:11594:11604	557343	0	True				
ANR	557549	Identifier	use_string		557343	0					
ANR	557550	ExpressionStatement	"ZVAL_STRINGL ( * z , buf -> c , buf -> len , 1 )"	341:8:11614:11651	557343	1	True				
ANR	557551	CallExpression	"ZVAL_STRINGL ( * z , buf -> c , buf -> len , 1 )"		557343	0					
ANR	557552	Callee	ZVAL_STRINGL		557343	0					
ANR	557553	Identifier	ZVAL_STRINGL		557343	0					
ANR	557554	ArgumentList	* z		557343	1					
ANR	557555	Argument	* z		557343	0					
ANR	557556	UnaryOperationExpression	* z		557343	0					
ANR	557557	UnaryOperator	*		557343	0					
ANR	557558	Identifier	z		557343	1					
ANR	557559	Argument	buf -> c		557343	1					
ANR	557560	PtrMemberAccess	buf -> c		557343	0					
ANR	557561	Identifier	buf		557343	0					
ANR	557562	Identifier	c		557343	1					
ANR	557563	Argument	buf -> len		557343	2					
ANR	557564	PtrMemberAccess	buf -> len		557343	0					
ANR	557565	Identifier	buf		557343	0					
ANR	557566	Identifier	len		557343	1					
ANR	557567	Argument	1		557343	3					
ANR	557568	PrimaryExpression	1		557343	0					
ANR	557569	ElseStatement	else		557343	0					
ANR	557570	IfStatement	if ( type == IS_BOOL )		557343	0					
ANR	557571	Condition	type == IS_BOOL	343:13:11672:11686	557343	0	True				
ANR	557572	EqualityExpression	type == IS_BOOL		557343	0		==			
ANR	557573	Identifier	type		557343	0					
ANR	557574	Identifier	IS_BOOL		557343	1					
ANR	557575	CompoundStatement		50:4:967:967	557343	1					
ANR	557576	ExpressionStatement	"ZVAL_BOOL ( * z , ( * ( buf -> c ) == 't' ) )"	345:8:11703:11736	557343	0	True				
ANR	557577	CallExpression	"ZVAL_BOOL ( * z , ( * ( buf -> c ) == 't' ) )"		557343	0					
ANR	557578	Callee	ZVAL_BOOL		557343	0					
ANR	557579	Identifier	ZVAL_BOOL		557343	0					
ANR	557580	ArgumentList	* z		557343	1					
ANR	557581	Argument	* z		557343	0					
ANR	557582	UnaryOperationExpression	* z		557343	0					
ANR	557583	UnaryOperator	*		557343	0					
ANR	557584	Identifier	z		557343	1					
ANR	557585	Argument	* ( buf -> c ) == 't'		557343	1					
ANR	557586	EqualityExpression	* ( buf -> c ) == 't'		557343	0		==			
ANR	557587	UnaryOperationExpression	* ( buf -> c )		557343	0					
ANR	557588	UnaryOperator	*		557343	0					
ANR	557589	PtrMemberAccess	buf -> c		557343	1					
ANR	557590	Identifier	buf		557343	0					
ANR	557591	Identifier	c		557343	1					
ANR	557592	PrimaryExpression	't'		557343	1					
ANR	557593	ElseStatement	else		557343	0					
ANR	557594	CompoundStatement		54:4:1070:1070	557343	0					
ANR	557595	ExpressionStatement	ZVAL_NULL ( * z )	349:8:11806:11819	557343	0	True				
ANR	557596	CallExpression	ZVAL_NULL ( * z )		557343	0					
ANR	557597	Callee	ZVAL_NULL		557343	0					
ANR	557598	Identifier	ZVAL_NULL		557343	0					
ANR	557599	ArgumentList	* z		557343	1					
ANR	557600	Argument	* z		557343	0					
ANR	557601	UnaryOperationExpression	* z		557343	0					
ANR	557602	UnaryOperator	*		557343	0					
ANR	557603	Identifier	z		557343	1					
ANR	557604	ReturnType	static void		557343	1					
ANR	557605	Identifier	json_create_zval		557343	2					
ANR	557606	ParameterList	"zval * * z , smart_str * buf , int type , int options"		557343	3					
ANR	557607	Parameter	zval * * z	294:29:10676:10683	557343	0	True				
ANR	557608	ParameterType	zval * *		557343	0					
ANR	557609	Identifier	z		557343	1					
ANR	557610	Parameter	smart_str * buf	294:39:10686:10699	557343	1	True				
ANR	557611	ParameterType	smart_str *		557343	0					
ANR	557612	Identifier	buf		557343	1					
ANR	557613	Parameter	int type	294:55:10702:10709	557343	2	True				
ANR	557614	ParameterType	int		557343	0					
ANR	557615	Identifier	type		557343	1					
ANR	557616	Parameter	int options	294:65:10712:10722	557343	3	True				
ANR	557617	ParameterType	int		557343	0					
ANR	557618	Identifier	options		557343	1					
ANR	557619	CFGEntryNode	ENTRY		557343		True				
ANR	557620	CFGExitNode	EXIT		557343		True				
ANR	557621	Symbol	strcmp		557343						
ANR	557622	Symbol	* buf		557343						
ANR	557623	Symbol	NULL		557343						
ANR	557624	Symbol	* z		557343						
ANR	557625	Symbol	PHP_JSON_BIGINT_AS_STRING		557343						
ANR	557626	Symbol	* * buf		557343						
ANR	557627	Symbol	cmp		557343						
ANR	557628	Symbol	MAX_LENGTH_OF_LONG		557343						
ANR	557629	Symbol	type		557343						
ANR	557630	Symbol	zend_strtod		557343						
ANR	557631	Symbol	buf		557343						
ANR	557632	Symbol	long_min_digits		557343						
ANR	557633	Symbol	buf -> c		557343						
ANR	557634	Symbol	buf -> len		557343						
ANR	557635	Symbol	strtol		557343						
ANR	557636	Symbol	IS_LONG		557343						
ANR	557637	Symbol	options		557343						
ANR	557638	Symbol	IS_DOUBLE		557343						
ANR	557639	Symbol	z		557343						
ANR	557640	Symbol	* buf -> c		557343						
ANR	557641	Symbol	IS_STRING		557343						
ANR	557642	Symbol	* ( buf -> c )		557343						
ANR	557643	Symbol	IS_BOOL		557343						
ANR	557644	Symbol	bigint		557343						
ANR	557645	Function	utf16_to_utf8	354:0:11831:13129							
ANR	557646	FunctionDef	"utf16_to_utf8 (smart_str * buf , unsigned short utf16)"		557645	0					
ANR	557647	CompoundStatement		355:0:11895:13129	557645	0					
ANR	557648	IfStatement	if ( utf16 < 0x80 )		557645	0					
ANR	557649	Condition	utf16 < 0x80	356:8:11905:11916	557645	0	True				
ANR	557650	RelationalExpression	utf16 < 0x80		557645	0		<			
ANR	557651	Identifier	utf16		557645	0					
ANR	557652	PrimaryExpression	0x80		557645	1					
ANR	557653	CompoundStatement		3:4:27:27	557645	1					
ANR	557654	ExpressionStatement	"smart_str_appendc ( buf , ( unsigned char ) utf16 )"	358:8:11933:11978	557645	0	True				
ANR	557655	CallExpression	"smart_str_appendc ( buf , ( unsigned char ) utf16 )"		557645	0					
ANR	557656	Callee	smart_str_appendc		557645	0					
ANR	557657	Identifier	smart_str_appendc		557645	0					
ANR	557658	ArgumentList	buf		557645	1					
ANR	557659	Argument	buf		557645	0					
ANR	557660	Identifier	buf		557645	0					
ANR	557661	Argument	( unsigned char ) utf16		557645	1					
ANR	557662	CastExpression	( unsigned char ) utf16		557645	0					
ANR	557663	CastTarget	unsigned char		557645	0					
ANR	557664	Identifier	utf16		557645	1					
ANR	557665	ElseStatement	else		557645	0					
ANR	557666	IfStatement	if ( utf16 < 0x800 )		557645	0					
ANR	557667	Condition	utf16 < 0x800	360:13:11999:12011	557645	0	True				
ANR	557668	RelationalExpression	utf16 < 0x800		557645	0		<			
ANR	557669	Identifier	utf16		557645	0					
ANR	557670	PrimaryExpression	0x800		557645	1					
ANR	557671	CompoundStatement		7:4:122:122	557645	1					
ANR	557672	ExpressionStatement	"smart_str_appendc ( buf , 0xc0 | ( utf16 >> 6 ) )"	362:8:12028:12071	557645	0	True				
ANR	557673	CallExpression	"smart_str_appendc ( buf , 0xc0 | ( utf16 >> 6 ) )"		557645	0					
ANR	557674	Callee	smart_str_appendc		557645	0					
ANR	557675	Identifier	smart_str_appendc		557645	0					
ANR	557676	ArgumentList	buf		557645	1					
ANR	557677	Argument	buf		557645	0					
ANR	557678	Identifier	buf		557645	0					
ANR	557679	Argument	0xc0 | ( utf16 >> 6 )		557645	1					
ANR	557680	InclusiveOrExpression	0xc0 | ( utf16 >> 6 )		557645	0		|			
ANR	557681	PrimaryExpression	0xc0		557645	0					
ANR	557682	ShiftExpression	utf16 >> 6		557645	1		>>			
ANR	557683	Identifier	utf16		557645	0					
ANR	557684	PrimaryExpression	6		557645	1					
ANR	557685	ExpressionStatement	"smart_str_appendc ( buf , 0x80 | ( utf16 & 0x3f ) )"	363:8:12081:12126	557645	1	True				
ANR	557686	CallExpression	"smart_str_appendc ( buf , 0x80 | ( utf16 & 0x3f ) )"		557645	0					
ANR	557687	Callee	smart_str_appendc		557645	0					
ANR	557688	Identifier	smart_str_appendc		557645	0					
ANR	557689	ArgumentList	buf		557645	1					
ANR	557690	Argument	buf		557645	0					
ANR	557691	Identifier	buf		557645	0					
ANR	557692	Argument	0x80 | ( utf16 & 0x3f )		557645	1					
ANR	557693	InclusiveOrExpression	0x80 | ( utf16 & 0x3f )		557645	0		|			
ANR	557694	PrimaryExpression	0x80		557645	0					
ANR	557695	BitAndExpression	utf16 & 0x3f		557645	1		&			
ANR	557696	Identifier	utf16		557645	0					
ANR	557697	PrimaryExpression	0x3f		557645	1					
ANR	557698	ElseStatement	else		557645	0					
ANR	557699	IfStatement	if ( ( utf16 & 0xfc00 ) == 0xdc00 && buf -> len >= 3 && ( ( unsigned char ) buf -> c [ buf -> len - 3 ] ) == 0xed && ( ( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0 ) == 0xa0 && ( ( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0 ) == 0x80 )		557645	0					
ANR	557700	Condition	( utf16 & 0xfc00 ) == 0xdc00 && buf -> len >= 3 && ( ( unsigned char ) buf -> c [ buf -> len - 3 ] ) == 0xed && ( ( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0 ) == 0xa0 && ( ( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0 ) == 0x80	365:13:12147:12417	557645	0	True				
ANR	557701	AndExpression	( utf16 & 0xfc00 ) == 0xdc00 && buf -> len >= 3 && ( ( unsigned char ) buf -> c [ buf -> len - 3 ] ) == 0xed && ( ( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0 ) == 0xa0 && ( ( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0 ) == 0x80		557645	0		&&			
ANR	557702	EqualityExpression	( utf16 & 0xfc00 ) == 0xdc00		557645	0		==			
ANR	557703	BitAndExpression	utf16 & 0xfc00		557645	0		&			
ANR	557704	Identifier	utf16		557645	0					
ANR	557705	PrimaryExpression	0xfc00		557645	1					
ANR	557706	PrimaryExpression	0xdc00		557645	1					
ANR	557707	AndExpression	buf -> len >= 3 && ( ( unsigned char ) buf -> c [ buf -> len - 3 ] ) == 0xed && ( ( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0 ) == 0xa0 && ( ( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0 ) == 0x80		557645	1		&&			
ANR	557708	RelationalExpression	buf -> len >= 3		557645	0		>=			
ANR	557709	PtrMemberAccess	buf -> len		557645	0					
ANR	557710	Identifier	buf		557645	0					
ANR	557711	Identifier	len		557645	1					
ANR	557712	PrimaryExpression	3		557645	1					
ANR	557713	AndExpression	( ( unsigned char ) buf -> c [ buf -> len - 3 ] ) == 0xed && ( ( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0 ) == 0xa0 && ( ( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0 ) == 0x80		557645	1		&&			
ANR	557714	EqualityExpression	( ( unsigned char ) buf -> c [ buf -> len - 3 ] ) == 0xed		557645	0		==			
ANR	557715	CastExpression	( unsigned char ) buf -> c [ buf -> len - 3 ]		557645	0					
ANR	557716	CastTarget	unsigned char		557645	0					
ANR	557717	ArrayIndexing	buf -> c [ buf -> len - 3 ]		557645	1					
ANR	557718	PtrMemberAccess	buf -> c		557645	0					
ANR	557719	Identifier	buf		557645	0					
ANR	557720	Identifier	c		557645	1					
ANR	557721	AdditiveExpression	buf -> len - 3		557645	1		-			
ANR	557722	PtrMemberAccess	buf -> len		557645	0					
ANR	557723	Identifier	buf		557645	0					
ANR	557724	Identifier	len		557645	1					
ANR	557725	PrimaryExpression	3		557645	1					
ANR	557726	PrimaryExpression	0xed		557645	1					
ANR	557727	AndExpression	( ( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0 ) == 0xa0 && ( ( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0 ) == 0x80		557645	1		&&			
ANR	557728	EqualityExpression	( ( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0 ) == 0xa0		557645	0		==			
ANR	557729	BitAndExpression	( unsigned char ) buf -> c [ buf -> len - 2 ] & 0xf0		557645	0		&			
ANR	557730	CastExpression	( unsigned char ) buf -> c [ buf -> len - 2 ]		557645	0					
ANR	557731	CastTarget	unsigned char		557645	0					
ANR	557732	ArrayIndexing	buf -> c [ buf -> len - 2 ]		557645	1					
ANR	557733	PtrMemberAccess	buf -> c		557645	0					
ANR	557734	Identifier	buf		557645	0					
ANR	557735	Identifier	c		557645	1					
ANR	557736	AdditiveExpression	buf -> len - 2		557645	1		-			
ANR	557737	PtrMemberAccess	buf -> len		557645	0					
ANR	557738	Identifier	buf		557645	0					
ANR	557739	Identifier	len		557645	1					
ANR	557740	PrimaryExpression	2		557645	1					
ANR	557741	PrimaryExpression	0xf0		557645	1					
ANR	557742	PrimaryExpression	0xa0		557645	1					
ANR	557743	EqualityExpression	( ( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0 ) == 0x80		557645	1		==			
ANR	557744	BitAndExpression	( unsigned char ) buf -> c [ buf -> len - 1 ] & 0xc0		557645	0		&			
ANR	557745	CastExpression	( unsigned char ) buf -> c [ buf -> len - 1 ]		557645	0					
ANR	557746	CastTarget	unsigned char		557645	0					
ANR	557747	ArrayIndexing	buf -> c [ buf -> len - 1 ]		557645	1					
ANR	557748	PtrMemberAccess	buf -> c		557645	0					
ANR	557749	Identifier	buf		557645	0					
ANR	557750	Identifier	c		557645	1					
ANR	557751	AdditiveExpression	buf -> len - 1		557645	1		-			
ANR	557752	PtrMemberAccess	buf -> len		557645	0					
ANR	557753	Identifier	buf		557645	0					
ANR	557754	Identifier	len		557645	1					
ANR	557755	PrimaryExpression	1		557645	1					
ANR	557756	PrimaryExpression	0xc0		557645	1					
ANR	557757	PrimaryExpression	0x80		557645	1					
ANR	557758	CompoundStatement		18:8:573:592	557645	1					
ANR	557759	IdentifierDeclStatement	unsigned long utf32 ;	372:8:12469:12488	557645	0	True				
ANR	557760	IdentifierDecl	utf32		557645	0					
ANR	557761	IdentifierDeclType	unsigned long		557645	0					
ANR	557762	Identifier	utf32		557645	1					
ANR	557763	ExpressionStatement	utf32 = ( ( ( buf -> c [ buf -> len - 2 ] & 0xf ) << 16 ) | ( ( buf -> c [ buf -> len - 1 ] & 0x3f ) << 10 ) | ( utf16 & 0x3ff ) ) + 0x10000	374:8:12499:12653	557645	1	True				
ANR	557764	AssignmentExpression	utf32 = ( ( ( buf -> c [ buf -> len - 2 ] & 0xf ) << 16 ) | ( ( buf -> c [ buf -> len - 1 ] & 0x3f ) << 10 ) | ( utf16 & 0x3ff ) ) + 0x10000		557645	0		=			
ANR	557765	Identifier	utf32		557645	0					
ANR	557766	AdditiveExpression	( ( ( buf -> c [ buf -> len - 2 ] & 0xf ) << 16 ) | ( ( buf -> c [ buf -> len - 1 ] & 0x3f ) << 10 ) | ( utf16 & 0x3ff ) ) + 0x10000		557645	1		+			
ANR	557767	InclusiveOrExpression	( ( buf -> c [ buf -> len - 2 ] & 0xf ) << 16 ) | ( ( buf -> c [ buf -> len - 1 ] & 0x3f ) << 10 ) | ( utf16 & 0x3ff )		557645	0		|			
ANR	557768	ShiftExpression	( buf -> c [ buf -> len - 2 ] & 0xf ) << 16		557645	0		<<			
ANR	557769	BitAndExpression	buf -> c [ buf -> len - 2 ] & 0xf		557645	0		&			
ANR	557770	ArrayIndexing	buf -> c [ buf -> len - 2 ]		557645	0					
ANR	557771	PtrMemberAccess	buf -> c		557645	0					
ANR	557772	Identifier	buf		557645	0					
ANR	557773	Identifier	c		557645	1					
ANR	557774	AdditiveExpression	buf -> len - 2		557645	1		-			
ANR	557775	PtrMemberAccess	buf -> len		557645	0					
ANR	557776	Identifier	buf		557645	0					
ANR	557777	Identifier	len		557645	1					
ANR	557778	PrimaryExpression	2		557645	1					
ANR	557779	PrimaryExpression	0xf		557645	1					
ANR	557780	PrimaryExpression	16		557645	1					
ANR	557781	InclusiveOrExpression	( ( buf -> c [ buf -> len - 1 ] & 0x3f ) << 10 ) | ( utf16 & 0x3ff )		557645	1		|			
ANR	557782	ShiftExpression	( buf -> c [ buf -> len - 1 ] & 0x3f ) << 10		557645	0		<<			
ANR	557783	BitAndExpression	buf -> c [ buf -> len - 1 ] & 0x3f		557645	0		&			
ANR	557784	ArrayIndexing	buf -> c [ buf -> len - 1 ]		557645	0					
ANR	557785	PtrMemberAccess	buf -> c		557645	0					
ANR	557786	Identifier	buf		557645	0					
ANR	557787	Identifier	c		557645	1					
ANR	557788	AdditiveExpression	buf -> len - 1		557645	1		-			
ANR	557789	PtrMemberAccess	buf -> len		557645	0					
ANR	557790	Identifier	buf		557645	0					
ANR	557791	Identifier	len		557645	1					
ANR	557792	PrimaryExpression	1		557645	1					
ANR	557793	PrimaryExpression	0x3f		557645	1					
ANR	557794	PrimaryExpression	10		557645	1					
ANR	557795	BitAndExpression	utf16 & 0x3ff		557645	1		&			
ANR	557796	Identifier	utf16		557645	0					
ANR	557797	PrimaryExpression	0x3ff		557645	1					
ANR	557798	PrimaryExpression	0x10000		557645	1					
ANR	557799	ExpressionStatement	buf -> len -= 3	377:8:12663:12676	557645	2	True				
ANR	557800	AssignmentExpression	buf -> len -= 3		557645	0		-=			
ANR	557801	PtrMemberAccess	buf -> len		557645	0					
ANR	557802	Identifier	buf		557645	0					
ANR	557803	Identifier	len		557645	1					
ANR	557804	PrimaryExpression	3		557645	1					
ANR	557805	ExpressionStatement	"smart_str_appendc ( buf , ( unsigned char ) ( 0xf0 | ( utf32 >> 18 ) ) )"	379:8:12687:12749	557645	3	True				
ANR	557806	CallExpression	"smart_str_appendc ( buf , ( unsigned char ) ( 0xf0 | ( utf32 >> 18 ) ) )"		557645	0					
ANR	557807	Callee	smart_str_appendc		557645	0					
ANR	557808	Identifier	smart_str_appendc		557645	0					
ANR	557809	ArgumentList	buf		557645	1					
ANR	557810	Argument	buf		557645	0					
ANR	557811	Identifier	buf		557645	0					
ANR	557812	Argument	( unsigned char ) ( 0xf0 | ( utf32 >> 18 ) )		557645	1					
ANR	557813	CastExpression	( unsigned char ) ( 0xf0 | ( utf32 >> 18 ) )		557645	0					
ANR	557814	CastTarget	unsigned char		557645	0					
ANR	557815	InclusiveOrExpression	0xf0 | ( utf32 >> 18 )		557645	1		|			
ANR	557816	PrimaryExpression	0xf0		557645	0					
ANR	557817	ShiftExpression	utf32 >> 18		557645	1		>>			
ANR	557818	Identifier	utf32		557645	0					
ANR	557819	PrimaryExpression	18		557645	1					
ANR	557820	ExpressionStatement	"smart_str_appendc ( buf , 0x80 | ( ( utf32 >> 12 ) & 0x3f ) )"	380:8:12759:12812	557645	4	True				
ANR	557821	CallExpression	"smart_str_appendc ( buf , 0x80 | ( ( utf32 >> 12 ) & 0x3f ) )"		557645	0					
ANR	557822	Callee	smart_str_appendc		557645	0					
ANR	557823	Identifier	smart_str_appendc		557645	0					
ANR	557824	ArgumentList	buf		557645	1					
ANR	557825	Argument	buf		557645	0					
ANR	557826	Identifier	buf		557645	0					
ANR	557827	Argument	0x80 | ( ( utf32 >> 12 ) & 0x3f )		557645	1					
ANR	557828	InclusiveOrExpression	0x80 | ( ( utf32 >> 12 ) & 0x3f )		557645	0		|			
ANR	557829	PrimaryExpression	0x80		557645	0					
ANR	557830	BitAndExpression	( utf32 >> 12 ) & 0x3f		557645	1		&			
ANR	557831	ShiftExpression	utf32 >> 12		557645	0		>>			
ANR	557832	Identifier	utf32		557645	0					
ANR	557833	PrimaryExpression	12		557645	1					
ANR	557834	PrimaryExpression	0x3f		557645	1					
ANR	557835	ExpressionStatement	"smart_str_appendc ( buf , 0x80 | ( ( utf32 >> 6 ) & 0x3f ) )"	381:8:12822:12874	557645	5	True				
ANR	557836	CallExpression	"smart_str_appendc ( buf , 0x80 | ( ( utf32 >> 6 ) & 0x3f ) )"		557645	0					
ANR	557837	Callee	smart_str_appendc		557645	0					
ANR	557838	Identifier	smart_str_appendc		557645	0					
ANR	557839	ArgumentList	buf		557645	1					
ANR	557840	Argument	buf		557645	0					
ANR	557841	Identifier	buf		557645	0					
ANR	557842	Argument	0x80 | ( ( utf32 >> 6 ) & 0x3f )		557645	1					
ANR	557843	InclusiveOrExpression	0x80 | ( ( utf32 >> 6 ) & 0x3f )		557645	0		|			
ANR	557844	PrimaryExpression	0x80		557645	0					
ANR	557845	BitAndExpression	( utf32 >> 6 ) & 0x3f		557645	1		&			
ANR	557846	ShiftExpression	utf32 >> 6		557645	0		>>			
ANR	557847	Identifier	utf32		557645	0					
ANR	557848	PrimaryExpression	6		557645	1					
ANR	557849	PrimaryExpression	0x3f		557645	1					
ANR	557850	ExpressionStatement	"smart_str_appendc ( buf , 0x80 | ( utf32 & 0x3f ) )"	382:8:12884:12929	557645	6	True				
ANR	557851	CallExpression	"smart_str_appendc ( buf , 0x80 | ( utf32 & 0x3f ) )"		557645	0					
ANR	557852	Callee	smart_str_appendc		557645	0					
ANR	557853	Identifier	smart_str_appendc		557645	0					
ANR	557854	ArgumentList	buf		557645	1					
ANR	557855	Argument	buf		557645	0					
ANR	557856	Identifier	buf		557645	0					
ANR	557857	Argument	0x80 | ( utf32 & 0x3f )		557645	1					
ANR	557858	InclusiveOrExpression	0x80 | ( utf32 & 0x3f )		557645	0		|			
ANR	557859	PrimaryExpression	0x80		557645	0					
ANR	557860	BitAndExpression	utf32 & 0x3f		557645	1		&			
ANR	557861	Identifier	utf32		557645	0					
ANR	557862	PrimaryExpression	0x3f		557645	1					
ANR	557863	ElseStatement	else		557645	0					
ANR	557864	CompoundStatement		31:4:1054:1054	557645	0					
ANR	557865	ExpressionStatement	"smart_str_appendc ( buf , 0xe0 | ( utf16 >> 12 ) )"	386:8:12960:13004	557645	0	True				
ANR	557866	CallExpression	"smart_str_appendc ( buf , 0xe0 | ( utf16 >> 12 ) )"		557645	0					
ANR	557867	Callee	smart_str_appendc		557645	0					
ANR	557868	Identifier	smart_str_appendc		557645	0					
ANR	557869	ArgumentList	buf		557645	1					
ANR	557870	Argument	buf		557645	0					
ANR	557871	Identifier	buf		557645	0					
ANR	557872	Argument	0xe0 | ( utf16 >> 12 )		557645	1					
ANR	557873	InclusiveOrExpression	0xe0 | ( utf16 >> 12 )		557645	0		|			
ANR	557874	PrimaryExpression	0xe0		557645	0					
ANR	557875	ShiftExpression	utf16 >> 12		557645	1		>>			
ANR	557876	Identifier	utf16		557645	0					
ANR	557877	PrimaryExpression	12		557645	1					
ANR	557878	ExpressionStatement	"smart_str_appendc ( buf , 0x80 | ( ( utf16 >> 6 ) & 0x3f ) )"	387:8:13014:13066	557645	1	True				
ANR	557879	CallExpression	"smart_str_appendc ( buf , 0x80 | ( ( utf16 >> 6 ) & 0x3f ) )"		557645	0					
ANR	557880	Callee	smart_str_appendc		557645	0					
ANR	557881	Identifier	smart_str_appendc		557645	0					
ANR	557882	ArgumentList	buf		557645	1					
ANR	557883	Argument	buf		557645	0					
ANR	557884	Identifier	buf		557645	0					
ANR	557885	Argument	0x80 | ( ( utf16 >> 6 ) & 0x3f )		557645	1					
ANR	557886	InclusiveOrExpression	0x80 | ( ( utf16 >> 6 ) & 0x3f )		557645	0		|			
ANR	557887	PrimaryExpression	0x80		557645	0					
ANR	557888	BitAndExpression	( utf16 >> 6 ) & 0x3f		557645	1		&			
ANR	557889	ShiftExpression	utf16 >> 6		557645	0		>>			
ANR	557890	Identifier	utf16		557645	0					
ANR	557891	PrimaryExpression	6		557645	1					
ANR	557892	PrimaryExpression	0x3f		557645	1					
ANR	557893	ExpressionStatement	"smart_str_appendc ( buf , 0x80 | ( utf16 & 0x3f ) )"	388:8:13076:13121	557645	2	True				
ANR	557894	CallExpression	"smart_str_appendc ( buf , 0x80 | ( utf16 & 0x3f ) )"		557645	0					
ANR	557895	Callee	smart_str_appendc		557645	0					
ANR	557896	Identifier	smart_str_appendc		557645	0					
ANR	557897	ArgumentList	buf		557645	1					
ANR	557898	Argument	buf		557645	0					
ANR	557899	Identifier	buf		557645	0					
ANR	557900	Argument	0x80 | ( utf16 & 0x3f )		557645	1					
ANR	557901	InclusiveOrExpression	0x80 | ( utf16 & 0x3f )		557645	0		|			
ANR	557902	PrimaryExpression	0x80		557645	0					
ANR	557903	BitAndExpression	utf16 & 0x3f		557645	1		&			
ANR	557904	Identifier	utf16		557645	0					
ANR	557905	PrimaryExpression	0x3f		557645	1					
ANR	557906	ReturnType	static void		557645	1					
ANR	557907	Identifier	utf16_to_utf8		557645	2					
ANR	557908	ParameterList	"smart_str * buf , unsigned short utf16"		557645	3					
ANR	557909	Parameter	smart_str * buf	354:26:11857:11870	557645	0	True				
ANR	557910	ParameterType	smart_str *		557645	0					
ANR	557911	Identifier	buf		557645	1					
ANR	557912	Parameter	unsigned short utf16	354:42:11873:11892	557645	1	True				
ANR	557913	ParameterType	unsigned short		557645	0					
ANR	557914	Identifier	utf16		557645	1					
ANR	557915	CFGEntryNode	ENTRY		557645		True				
ANR	557916	CFGExitNode	EXIT		557645		True				
ANR	557917	Symbol	utf32		557645						
ANR	557918	Symbol	buf		557645						
ANR	557919	Symbol	* buf		557645						
ANR	557920	Symbol	buf -> c		557645						
ANR	557921	Symbol	buf -> len		557645						
ANR	557922	Symbol	* * buf		557645						
ANR	557923	Symbol	utf16		557645						
ANR	557924	Symbol	* buf -> c		557645						
ANR	557925	Symbol	* buf -> len		557645						
ANR	557926	Function	attach_zval	392:0:13132:13850							
ANR	557927	FunctionDef	"attach_zval (JSON_parser jp , int up , int cur , smart_str * key , int assoc TSRMLS_DC)"		557926	0					
ANR	557928	CompoundStatement		393:0:13226:13850	557926	0					
ANR	557929	IdentifierDeclStatement	zval * root = jp -> the_zstack [ up ] ;	394:4:13232:13263	557926	0	True				
ANR	557930	IdentifierDecl	* root = jp -> the_zstack [ up ]		557926	0					
ANR	557931	IdentifierDeclType	zval *		557926	0					
ANR	557932	Identifier	root		557926	1					
ANR	557933	AssignmentExpression	* root = jp -> the_zstack [ up ]		557926	2		=			
ANR	557934	Identifier	root		557926	0					
ANR	557935	ArrayIndexing	jp -> the_zstack [ up ]		557926	1					
ANR	557936	PtrMemberAccess	jp -> the_zstack		557926	0					
ANR	557937	Identifier	jp		557926	0					
ANR	557938	Identifier	the_zstack		557926	1					
ANR	557939	Identifier	up		557926	1					
ANR	557940	IdentifierDeclStatement	zval * child = jp -> the_zstack [ cur ] ;	395:4:13269:13303	557926	1	True				
ANR	557941	IdentifierDecl	* child = jp -> the_zstack [ cur ]		557926	0					
ANR	557942	IdentifierDeclType	zval *		557926	0					
ANR	557943	Identifier	child		557926	1					
ANR	557944	AssignmentExpression	* child = jp -> the_zstack [ cur ]		557926	2		=			
ANR	557945	Identifier	child		557926	0					
ANR	557946	ArrayIndexing	jp -> the_zstack [ cur ]		557926	1					
ANR	557947	PtrMemberAccess	jp -> the_zstack		557926	0					
ANR	557948	Identifier	jp		557926	0					
ANR	557949	Identifier	the_zstack		557926	1					
ANR	557950	Identifier	cur		557926	1					
ANR	557951	IdentifierDeclStatement	int up_mode = jp -> stack [ up ] ;	396:4:13309:13336	557926	2	True				
ANR	557952	IdentifierDecl	up_mode = jp -> stack [ up ]		557926	0					
ANR	557953	IdentifierDeclType	int		557926	0					
ANR	557954	Identifier	up_mode		557926	1					
ANR	557955	AssignmentExpression	up_mode = jp -> stack [ up ]		557926	2		=			
ANR	557956	Identifier	up_mode		557926	0					
ANR	557957	ArrayIndexing	jp -> stack [ up ]		557926	1					
ANR	557958	PtrMemberAccess	jp -> stack		557926	0					
ANR	557959	Identifier	jp		557926	0					
ANR	557960	Identifier	stack		557926	1					
ANR	557961	Identifier	up		557926	1					
ANR	557962	IfStatement	if ( up_mode == MODE_ARRAY )		557926	3					
ANR	557963	Condition	up_mode == MODE_ARRAY	398:8:13347:13367	557926	0	True				
ANR	557964	EqualityExpression	up_mode == MODE_ARRAY		557926	0		==			
ANR	557965	Identifier	up_mode		557926	0					
ANR	557966	Identifier	MODE_ARRAY		557926	1					
ANR	557967	CompoundStatement		7:4:147:147	557926	1					
ANR	557968	ExpressionStatement	"add_next_index_zval ( root , child )"	400:8:13384:13416	557926	0	True				
ANR	557969	CallExpression	"add_next_index_zval ( root , child )"		557926	0					
ANR	557970	Callee	add_next_index_zval		557926	0					
ANR	557971	Identifier	add_next_index_zval		557926	0					
ANR	557972	ArgumentList	root		557926	1					
ANR	557973	Argument	root		557926	0					
ANR	557974	Identifier	root		557926	0					
ANR	557975	Argument	child		557926	1					
ANR	557976	Identifier	child		557926	0					
ANR	557977	ElseStatement	else		557926	0					
ANR	557978	IfStatement	if ( up_mode == MODE_OBJECT )		557926	0					
ANR	557979	Condition	up_mode == MODE_OBJECT	402:13:13437:13458	557926	0	True				
ANR	557980	EqualityExpression	up_mode == MODE_OBJECT		557926	0		==			
ANR	557981	Identifier	up_mode		557926	0					
ANR	557982	Identifier	MODE_OBJECT		557926	1					
ANR	557983	CompoundStatement		11:4:238:238	557926	1					
ANR	557984	IfStatement	if ( ! assoc )		557926	0					
ANR	557985	Condition	! assoc	404:12:13479:13484	557926	0	True				
ANR	557986	UnaryOperationExpression	! assoc		557926	0					
ANR	557987	UnaryOperator	!		557926	0					
ANR	557988	Identifier	assoc		557926	1					
ANR	557989	CompoundStatement		13:8:268:268	557926	1					
ANR	557990	Statement	add_property_zval_ex	406:12:13509:13528	557926	0	True				
ANR	557991	Statement	(	406:32:13529:13529	557926	1	True				
ANR	557992	Statement	root	406:33:13530:13533	557926	2	True				
ANR	557993	Statement	","	406:37:13534:13534	557926	3	True				
ANR	557994	Statement	(	406:39:13536:13536	557926	4	True				
ANR	557995	Statement	key	406:40:13537:13539	557926	5	True				
ANR	557996	Statement	->	406:43:13540:13541	557926	6	True				
ANR	557997	Statement	len	406:45:13542:13544	557926	7	True				
ANR	557998	Statement	?	406:49:13546:13546	557926	8	True				
ANR	557999	Statement	key	406:51:13548:13550	557926	9	True				
ANR	558000	Statement	->	406:54:13551:13552	557926	10	True				
ANR	558001	Label	c :	406:56:13553:13555	557926	11	True				
ANR	558002	Identifier	c		557926	0					
ANR	558003	Statement	"""_empty_"""	406:60:13557:13565	557926	12	True				
ANR	558004	Statement	)	406:69:13566:13566	557926	13	True				
ANR	558005	Statement	","	406:70:13567:13567	557926	14	True				
ANR	558006	Statement	(	406:72:13569:13569	557926	15	True				
ANR	558007	Statement	key	406:73:13570:13572	557926	16	True				
ANR	558008	Statement	->	406:76:13573:13574	557926	17	True				
ANR	558009	Statement	len	406:78:13575:13577	557926	18	True				
ANR	558010	Statement	?	406:82:13579:13579	557926	19	True				
ANR	558011	Statement	(	406:84:13581:13581	557926	20	True				
ANR	558012	Statement	key	406:85:13582:13584	557926	21	True				
ANR	558013	Statement	->	406:88:13585:13586	557926	22	True				
ANR	558014	Statement	len	406:90:13587:13589	557926	23	True				
ANR	558015	Statement	+	406:94:13591:13591	557926	24	True				
ANR	558016	Statement	1	406:96:13593:13593	557926	25	True				
ANR	558017	Statement	)	406:97:13594:13594	557926	26	True				
ANR	558018	Statement	:	406:99:13596:13596	557926	27	True				
ANR	558019	Statement	sizeof	406:101:13598:13603	557926	28	True				
ANR	558020	Statement	(	406:107:13604:13604	557926	29	True				
ANR	558021	Statement	"""_empty_"""	406:108:13605:13613	557926	30	True				
ANR	558022	Statement	)	406:117:13614:13614	557926	31	True				
ANR	558023	Statement	)	406:118:13615:13615	557926	32	True				
ANR	558024	Statement	","	406:119:13616:13616	557926	33	True				
ANR	558025	Statement	child	406:121:13618:13622	557926	34	True				
ANR	558026	Statement	TSRMLS_CC	406:127:13624:13632	557926	35	True				
ANR	558027	Statement	)	406:136:13633:13633	557926	36	True				
ANR	558028	ExpressionStatement		406:137:13634:13634	557926	37	True				
ANR	558029	ExpressionStatement	Z_DELREF_P ( child )	407:12:13648:13665	557926	38	True				
ANR	558030	CallExpression	Z_DELREF_P ( child )		557926	0					
ANR	558031	Callee	Z_DELREF_P		557926	0					
ANR	558032	Identifier	Z_DELREF_P		557926	0					
ANR	558033	ArgumentList	child		557926	1					
ANR	558034	Argument	child		557926	0					
ANR	558035	Identifier	child		557926	0					
ANR	558036	ElseStatement	else		557926	0					
ANR	558037	CompoundStatement		18:8:471:471	557926	0					
ANR	558038	ExpressionStatement	"add_assoc_zval_ex ( root , ( key -> len ? key -> c : """" ) , ( key -> len ? ( key -> len + 1 ) : sizeof ( """" ) ) , child )"	411:12:13712:13810	557926	0	True				
ANR	558039	CallExpression	"add_assoc_zval_ex ( root , ( key -> len ? key -> c : """" ) , ( key -> len ? ( key -> len + 1 ) : sizeof ( """" ) ) , child )"		557926	0					
ANR	558040	Callee	add_assoc_zval_ex		557926	0					
ANR	558041	Identifier	add_assoc_zval_ex		557926	0					
ANR	558042	ArgumentList	root		557926	1					
ANR	558043	Argument	root		557926	0					
ANR	558044	Identifier	root		557926	0					
ANR	558045	Argument	"key -> len ? key -> c : """""		557926	1					
ANR	558046	ConditionalExpression	"key -> len ? key -> c : """""		557926	0					
ANR	558047	Condition	key -> len		557926	0					
ANR	558048	PtrMemberAccess	key -> len		557926	0					
ANR	558049	Identifier	key		557926	0					
ANR	558050	Identifier	len		557926	1					
ANR	558051	PtrMemberAccess	key -> c		557926	1					
ANR	558052	Identifier	key		557926	0					
ANR	558053	Identifier	c		557926	1					
ANR	558054	PrimaryExpression	""""""		557926	2					
ANR	558055	Argument	"key -> len ? ( key -> len + 1 ) : sizeof ( """" )"		557926	2					
ANR	558056	ConditionalExpression	"key -> len ? ( key -> len + 1 ) : sizeof ( """" )"		557926	0					
ANR	558057	Condition	key -> len		557926	0					
ANR	558058	PtrMemberAccess	key -> len		557926	0					
ANR	558059	Identifier	key		557926	0					
ANR	558060	Identifier	len		557926	1					
ANR	558061	AdditiveExpression	key -> len + 1		557926	1		+			
ANR	558062	PtrMemberAccess	key -> len		557926	0					
ANR	558063	Identifier	key		557926	0					
ANR	558064	Identifier	len		557926	1					
ANR	558065	PrimaryExpression	1		557926	1					
ANR	558066	SizeofExpression	"sizeof ( """" )"		557926	2					
ANR	558067	Sizeof	sizeof		557926	0					
ANR	558068	PrimaryExpression	""""""		557926	1					
ANR	558069	Argument	child		557926	3					
ANR	558070	Identifier	child		557926	0					
ANR	558071	ExpressionStatement	key -> len = 0	413:8:13830:13842	557926	1	True				
ANR	558072	AssignmentExpression	key -> len = 0		557926	0		=			
ANR	558073	PtrMemberAccess	key -> len		557926	0					
ANR	558074	Identifier	key		557926	0					
ANR	558075	Identifier	len		557926	1					
ANR	558076	PrimaryExpression	0		557926	1					
ANR	558077	ReturnType	static void		557926	1					
ANR	558078	Identifier	attach_zval		557926	2					
ANR	558079	ParameterList	"JSON_parser jp , int up , int cur , smart_str * key , int assoc TSRMLS_DC"		557926	3					
ANR	558080	Parameter	JSON_parser jp	392:24:13156:13169	557926	0	True				
ANR	558081	ParameterType	JSON_parser		557926	0					
ANR	558082	Identifier	jp		557926	1					
ANR	558083	Parameter	int up	392:40:13172:13177	557926	1	True				
ANR	558084	ParameterType	int		557926	0					
ANR	558085	Identifier	up		557926	1					
ANR	558086	Parameter	int cur	392:48:13180:13186	557926	2	True				
ANR	558087	ParameterType	int		557926	0					
ANR	558088	Identifier	cur		557926	1					
ANR	558089	Parameter	smart_str * key	392:57:13189:13202	557926	3	True				
ANR	558090	ParameterType	smart_str *		557926	0					
ANR	558091	Identifier	key		557926	1					
ANR	558092	Parameter	int assoc TSRMLS_DC	392:73:13205:13223	557926	4	True				
ANR	558093	ParameterType	int assoc		557926	0					
ANR	558094	Identifier	TSRMLS_DC		557926	1					
ANR	558095	CFGEntryNode	ENTRY		557926		True				
ANR	558096	CFGExitNode	EXIT		557926		True				
ANR	558097	Symbol	cur		557926						
ANR	558098	Symbol	* up		557926						
ANR	558099	Symbol	up_mode		557926						
ANR	558100	Symbol	jp		557926						
ANR	558101	Symbol	* jp -> the_zstack		557926						
ANR	558102	Symbol	jp -> the_zstack		557926						
ANR	558103	Symbol	* key		557926						
ANR	558104	Symbol	key -> len		557926						
ANR	558105	Symbol	TSRMLS_DC		557926						
ANR	558106	Symbol	jp -> stack		557926						
ANR	558107	Symbol	MODE_OBJECT		557926						
ANR	558108	Symbol	* jp		557926						
ANR	558109	Symbol	* jp -> stack		557926						
ANR	558110	Symbol	* * jp		557926						
ANR	558111	Symbol	key -> c		557926						
ANR	558112	Symbol	* cur		557926						
ANR	558113	Symbol	root		557926						
ANR	558114	Symbol	MODE_ARRAY		557926						
ANR	558115	Symbol	assoc		557926						
ANR	558116	Symbol	up		557926						
ANR	558117	Symbol	key		557926						
ANR	558118	Symbol	child		557926						
ANR	558119	DeclStmt									
ANR	558120	Decl							char	char *	t1
ANR	558121	DeclStmt									
ANR	558122	Decl							int	int	t2
ANR	558123	Function	parse_JSON_ex	438:0:14485:24643							
ANR	558124	FunctionDef	"parse_JSON_ex (JSON_parser jp , zval * z , unsigned short utf16_json [ ] , int length , int options TSRMLS_DC)"		558123	0					
ANR	558125	CompoundStatement		440:0:14592:24643	558123	0					
ANR	558126	IdentifierDeclStatement	int next_char ;	441:4:14598:14611	558123	0	True				
ANR	558127	IdentifierDecl	next_char		558123	0					
ANR	558128	IdentifierDeclType	int		558123	0					
ANR	558129	Identifier	next_char		558123	1					
ANR	558130	IdentifierDeclStatement	int next_class ;	442:4:14643:14657	558123	1	True				
ANR	558131	IdentifierDecl	next_class		558123	0					
ANR	558132	IdentifierDeclType	int		558123	0					
ANR	558133	Identifier	next_class		558123	1					
ANR	558134	IdentifierDeclStatement	int next_state ;	443:4:14695:14709	558123	2	True				
ANR	558135	IdentifierDecl	next_state		558123	0					
ANR	558136	IdentifierDeclType	int		558123	0					
ANR	558137	Identifier	next_state		558123	1					
ANR	558138	IdentifierDeclStatement	int the_index ;	444:4:14737:14750	558123	3	True				
ANR	558139	IdentifierDecl	the_index		558123	0					
ANR	558140	IdentifierDeclType	int		558123	0					
ANR	558141	Identifier	the_index		558123	1					
ANR	558142	IdentifierDeclStatement	int assoc = options & PHP_JSON_OBJECT_AS_ARRAY ;	445:4:14756:14802	558123	4	True				
ANR	558143	IdentifierDecl	assoc = options & PHP_JSON_OBJECT_AS_ARRAY		558123	0					
ANR	558144	IdentifierDeclType	int		558123	0					
ANR	558145	Identifier	assoc		558123	1					
ANR	558146	AssignmentExpression	assoc = options & PHP_JSON_OBJECT_AS_ARRAY		558123	2		=			
ANR	558147	Identifier	assoc		558123	0					
ANR	558148	BitAndExpression	options & PHP_JSON_OBJECT_AS_ARRAY		558123	1		&			
ANR	558149	Identifier	options		558123	0					
ANR	558150	Identifier	PHP_JSON_OBJECT_AS_ARRAY		558123	1					
ANR	558151	IdentifierDeclStatement	smart_str buf = { 0 } ;	447:4:14809:14828	558123	5	True				
ANR	558152	IdentifierDecl	buf = { 0 }		558123	0					
ANR	558153	IdentifierDeclType	smart_str		558123	0					
ANR	558154	Identifier	buf		558123	1					
ANR	558155	AssignmentExpression	buf = { 0 }		558123	2		=			
ANR	558156	Identifier	buf		558123	0					
ANR	558157	InitializerList	0		558123	1					
ANR	558158	PrimaryExpression	0		558123	0					
ANR	558159	IdentifierDeclStatement	smart_str key = { 0 } ;	448:4:14834:14853	558123	6	True				
ANR	558160	IdentifierDecl	key = { 0 }		558123	0					
ANR	558161	IdentifierDeclType	smart_str		558123	0					
ANR	558162	Identifier	key		558123	1					
ANR	558163	AssignmentExpression	key = { 0 }		558123	2		=			
ANR	558164	Identifier	key		558123	0					
ANR	558165	InitializerList	0		558123	1					
ANR	558166	PrimaryExpression	0		558123	0					
ANR	558167	IdentifierDeclStatement	unsigned short utf16 = 0 ;	450:4:14860:14884	558123	7	True				
ANR	558168	IdentifierDecl	utf16 = 0		558123	0					
ANR	558169	IdentifierDeclType	unsigned short		558123	0					
ANR	558170	Identifier	utf16		558123	1					
ANR	558171	AssignmentExpression	utf16 = 0		558123	2		=			
ANR	558172	Identifier	utf16		558123	0					
ANR	558173	PrimaryExpression	0		558123	1					
ANR	558174	IdentifierDeclStatement	int type ;	451:4:14890:14898	558123	8	True				
ANR	558175	IdentifierDecl	type		558123	0					
ANR	558176	IdentifierDeclType	int		558123	0					
ANR	558177	Identifier	type		558123	1					
ANR	558178	ExpressionStatement	JSON_RESET_TYPE ( )	453:1:14902:14919	558123	9	True				
ANR	558179	CallExpression	JSON_RESET_TYPE ( )		558123	0					
ANR	558180	Callee	JSON_RESET_TYPE		558123	0					
ANR	558181	Identifier	JSON_RESET_TYPE		558123	0					
ANR	558182	ArgumentList			558123	1					
ANR	558183	ForStatement	for ( the_index = 0 ; the_index < length ; the_index += 1 )		558123	10					
ANR	558184	ForInit	the_index = 0 ;	455:9:14931:14944	558123	0	True				
ANR	558185	AssignmentExpression	the_index = 0		558123	0		=			
ANR	558186	Identifier	the_index		558123	0					
ANR	558187	PrimaryExpression	0		558123	1					
ANR	558188	Condition	the_index < length	455:24:14946:14963	558123	1	True				
ANR	558189	RelationalExpression	the_index < length		558123	0		<			
ANR	558190	Identifier	the_index		558123	0					
ANR	558191	Identifier	length		558123	1					
ANR	558192	AssignmentExpression	the_index += 1	455:44:14966:14979	558123	2	True	+=			
ANR	558193	Identifier	the_index		558123	0					
ANR	558194	PrimaryExpression	1		558123	1					
ANR	558195	CompoundStatement		16:60:389:389	558123	3					
ANR	558196	ExpressionStatement	next_char = utf16_json [ the_index ]	456:8:14992:15025	558123	0	True				
ANR	558197	AssignmentExpression	next_char = utf16_json [ the_index ]		558123	0		=			
ANR	558198	Identifier	next_char		558123	0					
ANR	558199	ArrayIndexing	utf16_json [ the_index ]		558123	1					
ANR	558200	Identifier	utf16_json		558123	0					
ANR	558201	Identifier	the_index		558123	1					
ANR	558202	IfStatement	if ( next_char >= 128 )		558123	1					
ANR	558203	Condition	next_char >= 128	457:6:15033:15048	558123	0	True				
ANR	558204	RelationalExpression	next_char >= 128		558123	0		>=			
ANR	558205	Identifier	next_char		558123	0					
ANR	558206	PrimaryExpression	128		558123	1					
ANR	558207	CompoundStatement		18:24:458:458	558123	1					
ANR	558208	ExpressionStatement	next_class = C_ETC	458:3:15056:15074	558123	0	True				
ANR	558209	AssignmentExpression	next_class = C_ETC		558123	0		=			
ANR	558210	Identifier	next_class		558123	0					
ANR	558211	Identifier	C_ETC		558123	1					
ANR	558212	ElseStatement	else		558123	0					
ANR	558213	CompoundStatement		20:9:492:492	558123	0					
ANR	558214	ExpressionStatement	next_class = ascii_class [ next_char ]	460:3:15090:15125	558123	0	True				
ANR	558215	AssignmentExpression	next_class = ascii_class [ next_char ]		558123	0		=			
ANR	558216	Identifier	next_class		558123	0					
ANR	558217	ArrayIndexing	ascii_class [ next_char ]		558123	1					
ANR	558218	Identifier	ascii_class		558123	0					
ANR	558219	Identifier	next_char		558123	1					
ANR	558220	IfStatement	if ( next_class <= __ )		558123	1					
ANR	558221	Condition	next_class <= __	461:7:15134:15149	558123	0	True				
ANR	558222	RelationalExpression	next_class <= __		558123	0		<=			
ANR	558223	Identifier	next_class		558123	0					
ANR	558224	Identifier	__		558123	1					
ANR	558225	CompoundStatement		22:25:559:559	558123	1					
ANR	558226	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_CTRL_CHAR	462:4:15158:15199	558123	0	True				
ANR	558227	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_CTRL_CHAR		558123	0		=			
ANR	558228	PtrMemberAccess	jp -> error_code		558123	0					
ANR	558229	Identifier	jp		558123	0					
ANR	558230	Identifier	error_code		558123	1					
ANR	558231	Identifier	PHP_JSON_ERROR_CTRL_CHAR		558123	1					
ANR	558232	ExpressionStatement	FREE_BUFFERS ( )	463:4:15205:15219	558123	1	True				
ANR	558233	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	558234	Callee	FREE_BUFFERS		558123	0					
ANR	558235	Identifier	FREE_BUFFERS		558123	0					
ANR	558236	ArgumentList			558123	1					
ANR	558237	ReturnStatement	return false ;	464:4:15225:15237	558123	2	True				
ANR	558238	Identifier	false		558123	0					
ANR	558239	ExpressionStatement	next_state = state_transition_table [ jp -> state ] [ next_class ]	470:8:15312:15370	558123	2	True				
ANR	558240	AssignmentExpression	next_state = state_transition_table [ jp -> state ] [ next_class ]		558123	0		=			
ANR	558241	Identifier	next_state		558123	0					
ANR	558242	ArrayIndexing	state_transition_table [ jp -> state ] [ next_class ]		558123	1					
ANR	558243	ArrayIndexing	state_transition_table [ jp -> state ]		558123	0					
ANR	558244	Identifier	state_transition_table		558123	0					
ANR	558245	PtrMemberAccess	jp -> state		558123	1					
ANR	558246	Identifier	jp		558123	0					
ANR	558247	Identifier	state		558123	1					
ANR	558248	Identifier	next_class		558123	1					
ANR	558249	IfStatement	if ( next_state >= 0 )		558123	3					
ANR	558250	Condition	next_state >= 0	471:12:15384:15398	558123	0	True				
ANR	558251	RelationalExpression	next_state >= 0		558123	0		>=			
ANR	558252	Identifier	next_state		558123	0					
ANR	558253	PrimaryExpression	0		558123	1					
ANR	558254	CompoundStatement		32:29:808:808	558123	1					
ANR	558255	IfStatement	if ( type == IS_STRING )		558123	0					
ANR	558256	Condition	type == IS_STRING	475:7:15449:15465	558123	0	True				
ANR	558257	EqualityExpression	type == IS_STRING		558123	0		==			
ANR	558258	Identifier	type		558123	0					
ANR	558259	Identifier	IS_STRING		558123	1					
ANR	558260	CompoundStatement		36:26:875:875	558123	1					
ANR	558261	IfStatement	if ( next_state == ST && jp -> state != U4 )		558123	0					
ANR	558262	Condition	next_state == ST && jp -> state != U4	476:17:15487:15521	558123	0	True				
ANR	558263	AndExpression	next_state == ST && jp -> state != U4		558123	0		&&			
ANR	558264	EqualityExpression	next_state == ST		558123	0		==			
ANR	558265	Identifier	next_state		558123	0					
ANR	558266	Identifier	ST		558123	1					
ANR	558267	EqualityExpression	jp -> state != U4		558123	1		!=			
ANR	558268	PtrMemberAccess	jp -> state		558123	0					
ANR	558269	Identifier	jp		558123	0					
ANR	558270	Identifier	state		558123	1					
ANR	558271	Identifier	U4		558123	1					
ANR	558272	CompoundStatement		37:54:931:931	558123	1					
ANR	558273	IfStatement	if ( jp -> state != ES )		558123	0					
ANR	558274	Condition	jp -> state != ES	477:21:15547:15561	558123	0	True				
ANR	558275	EqualityExpression	jp -> state != ES		558123	0		!=			
ANR	558276	PtrMemberAccess	jp -> state		558123	0					
ANR	558277	Identifier	jp		558123	0					
ANR	558278	Identifier	state		558123	1					
ANR	558279	Identifier	ES		558123	1					
ANR	558280	CompoundStatement		38:38:971:971	558123	1					
ANR	558281	ExpressionStatement	"utf16_to_utf8 ( & buf , next_char )"	478:21:15587:15617	558123	0	True				
ANR	558282	CallExpression	"utf16_to_utf8 ( & buf , next_char )"		558123	0					
ANR	558283	Callee	utf16_to_utf8		558123	0					
ANR	558284	Identifier	utf16_to_utf8		558123	0					
ANR	558285	ArgumentList	& buf		558123	1					
ANR	558286	Argument	& buf		558123	0					
ANR	558287	UnaryOperationExpression	& buf		558123	0					
ANR	558288	UnaryOperator	&		558123	0					
ANR	558289	Identifier	buf		558123	1					
ANR	558290	Argument	next_char		558123	1					
ANR	558291	Identifier	next_char		558123	0					
ANR	558292	ElseStatement	else		558123	0					
ANR	558293	CompoundStatement		40:24:1050:1050	558123	0					
ANR	558294	SwitchStatement	switch ( next_char )		558123	0					
ANR	558295	Condition	next_char	480:29:15674:15682	558123	0	True				
ANR	558296	Identifier	next_char		558123	0					
ANR	558297	CompoundStatement		41:40:1092:1092	558123	1					
ANR	558298	Label	case 'b' :	481:25:15712:15720	558123	0	True				
ANR	558299	ExpressionStatement	"smart_str_appendc ( & buf , '\\b' )"	482:29:15751:15780	558123	1	True				
ANR	558300	CallExpression	"smart_str_appendc ( & buf , '\\b' )"		558123	0					
ANR	558301	Callee	smart_str_appendc		558123	0					
ANR	558302	Identifier	smart_str_appendc		558123	0					
ANR	558303	ArgumentList	& buf		558123	1					
ANR	558304	Argument	& buf		558123	0					
ANR	558305	UnaryOperationExpression	& buf		558123	0					
ANR	558306	UnaryOperator	&		558123	0					
ANR	558307	Identifier	buf		558123	1					
ANR	558308	Argument	'\\b'		558123	1					
ANR	558309	PrimaryExpression	'\\b'		558123	0					
ANR	558310	BreakStatement	break ;	483:29:15811:15816	558123	2	True				
ANR	558311	Label	case 't' :	484:25:15843:15851	558123	3	True				
ANR	558312	ExpressionStatement	"smart_str_appendc ( & buf , '\\t' )"	485:29:15882:15911	558123	4	True				
ANR	558313	CallExpression	"smart_str_appendc ( & buf , '\\t' )"		558123	0					
ANR	558314	Callee	smart_str_appendc		558123	0					
ANR	558315	Identifier	smart_str_appendc		558123	0					
ANR	558316	ArgumentList	& buf		558123	1					
ANR	558317	Argument	& buf		558123	0					
ANR	558318	UnaryOperationExpression	& buf		558123	0					
ANR	558319	UnaryOperator	&		558123	0					
ANR	558320	Identifier	buf		558123	1					
ANR	558321	Argument	'\\t'		558123	1					
ANR	558322	PrimaryExpression	'\\t'		558123	0					
ANR	558323	BreakStatement	break ;	486:29:15942:15947	558123	5	True				
ANR	558324	Label	case 'n' :	487:25:15974:15982	558123	6	True				
ANR	558325	ExpressionStatement	"smart_str_appendc ( & buf , '\\n' )"	488:29:16013:16042	558123	7	True				
ANR	558326	CallExpression	"smart_str_appendc ( & buf , '\\n' )"		558123	0					
ANR	558327	Callee	smart_str_appendc		558123	0					
ANR	558328	Identifier	smart_str_appendc		558123	0					
ANR	558329	ArgumentList	& buf		558123	1					
ANR	558330	Argument	& buf		558123	0					
ANR	558331	UnaryOperationExpression	& buf		558123	0					
ANR	558332	UnaryOperator	&		558123	0					
ANR	558333	Identifier	buf		558123	1					
ANR	558334	Argument	'\\n'		558123	1					
ANR	558335	PrimaryExpression	'\\n'		558123	0					
ANR	558336	BreakStatement	break ;	489:29:16073:16078	558123	8	True				
ANR	558337	Label	case 'f' :	490:25:16105:16113	558123	9	True				
ANR	558338	ExpressionStatement	"smart_str_appendc ( & buf , '\\f' )"	491:29:16144:16173	558123	10	True				
ANR	558339	CallExpression	"smart_str_appendc ( & buf , '\\f' )"		558123	0					
ANR	558340	Callee	smart_str_appendc		558123	0					
ANR	558341	Identifier	smart_str_appendc		558123	0					
ANR	558342	ArgumentList	& buf		558123	1					
ANR	558343	Argument	& buf		558123	0					
ANR	558344	UnaryOperationExpression	& buf		558123	0					
ANR	558345	UnaryOperator	&		558123	0					
ANR	558346	Identifier	buf		558123	1					
ANR	558347	Argument	'\\f'		558123	1					
ANR	558348	PrimaryExpression	'\\f'		558123	0					
ANR	558349	BreakStatement	break ;	492:29:16204:16209	558123	11	True				
ANR	558350	Label	case 'r' :	493:25:16236:16244	558123	12	True				
ANR	558351	ExpressionStatement	"smart_str_appendc ( & buf , '\\r' )"	494:29:16275:16304	558123	13	True				
ANR	558352	CallExpression	"smart_str_appendc ( & buf , '\\r' )"		558123	0					
ANR	558353	Callee	smart_str_appendc		558123	0					
ANR	558354	Identifier	smart_str_appendc		558123	0					
ANR	558355	ArgumentList	& buf		558123	1					
ANR	558356	Argument	& buf		558123	0					
ANR	558357	UnaryOperationExpression	& buf		558123	0					
ANR	558358	UnaryOperator	&		558123	0					
ANR	558359	Identifier	buf		558123	1					
ANR	558360	Argument	'\\r'		558123	1					
ANR	558361	PrimaryExpression	'\\r'		558123	0					
ANR	558362	BreakStatement	break ;	495:29:16335:16340	558123	14	True				
ANR	558363	Label	default :	496:25:16367:16374	558123	15	True				
ANR	558364	Identifier	default		558123	0					
ANR	558365	ExpressionStatement	"utf16_to_utf8 ( & buf , next_char )"	497:29:16405:16435	558123	16	True				
ANR	558366	CallExpression	"utf16_to_utf8 ( & buf , next_char )"		558123	0					
ANR	558367	Callee	utf16_to_utf8		558123	0					
ANR	558368	Identifier	utf16_to_utf8		558123	0					
ANR	558369	ArgumentList	& buf		558123	1					
ANR	558370	Argument	& buf		558123	0					
ANR	558371	UnaryOperationExpression	& buf		558123	0					
ANR	558372	UnaryOperator	&		558123	0					
ANR	558373	Identifier	buf		558123	1					
ANR	558374	Argument	next_char		558123	1					
ANR	558375	Identifier	next_char		558123	0					
ANR	558376	BreakStatement	break ;	498:29:16466:16471	558123	17	True				
ANR	558377	ElseStatement	else		558123	0					
ANR	558378	IfStatement	if ( next_state == U2 )		558123	0					
ANR	558379	Condition	next_state == U2	501:24:16539:16554	558123	0	True				
ANR	558380	EqualityExpression	next_state == U2		558123	0		==			
ANR	558381	Identifier	next_state		558123	0					
ANR	558382	Identifier	U2		558123	1					
ANR	558383	CompoundStatement		62:42:1964:1964	558123	1					
ANR	558384	ExpressionStatement	utf16 = dehexchar ( next_char ) << 12	502:17:16576:16610	558123	0	True				
ANR	558385	AssignmentExpression	utf16 = dehexchar ( next_char ) << 12		558123	0		=			
ANR	558386	Identifier	utf16		558123	0					
ANR	558387	ShiftExpression	dehexchar ( next_char ) << 12		558123	1		<<			
ANR	558388	CallExpression	dehexchar ( next_char )		558123	0					
ANR	558389	Callee	dehexchar		558123	0					
ANR	558390	Identifier	dehexchar		558123	0					
ANR	558391	ArgumentList	next_char		558123	1					
ANR	558392	Argument	next_char		558123	0					
ANR	558393	Identifier	next_char		558123	0					
ANR	558394	PrimaryExpression	12		558123	1					
ANR	558395	ElseStatement	else		558123	0					
ANR	558396	IfStatement	if ( next_state == U3 )		558123	0					
ANR	558397	Condition	next_state == U3	503:24:16636:16651	558123	0	True				
ANR	558398	EqualityExpression	next_state == U3		558123	0		==			
ANR	558399	Identifier	next_state		558123	0					
ANR	558400	Identifier	U3		558123	1					
ANR	558401	CompoundStatement		64:42:2061:2061	558123	1					
ANR	558402	ExpressionStatement	utf16 += dehexchar ( next_char ) << 8	504:17:16673:16707	558123	0	True				
ANR	558403	AssignmentExpression	utf16 += dehexchar ( next_char ) << 8		558123	0		+=			
ANR	558404	Identifier	utf16		558123	0					
ANR	558405	ShiftExpression	dehexchar ( next_char ) << 8		558123	1		<<			
ANR	558406	CallExpression	dehexchar ( next_char )		558123	0					
ANR	558407	Callee	dehexchar		558123	0					
ANR	558408	Identifier	dehexchar		558123	0					
ANR	558409	ArgumentList	next_char		558123	1					
ANR	558410	Argument	next_char		558123	0					
ANR	558411	Identifier	next_char		558123	0					
ANR	558412	PrimaryExpression	8		558123	1					
ANR	558413	ElseStatement	else		558123	0					
ANR	558414	IfStatement	if ( next_state == U4 )		558123	0					
ANR	558415	Condition	next_state == U4	505:24:16733:16748	558123	0	True				
ANR	558416	EqualityExpression	next_state == U4		558123	0		==			
ANR	558417	Identifier	next_state		558123	0					
ANR	558418	Identifier	U4		558123	1					
ANR	558419	CompoundStatement		66:42:2158:2158	558123	1					
ANR	558420	ExpressionStatement	utf16 += dehexchar ( next_char ) << 4	506:17:16770:16804	558123	0	True				
ANR	558421	AssignmentExpression	utf16 += dehexchar ( next_char ) << 4		558123	0		+=			
ANR	558422	Identifier	utf16		558123	0					
ANR	558423	ShiftExpression	dehexchar ( next_char ) << 4		558123	1		<<			
ANR	558424	CallExpression	dehexchar ( next_char )		558123	0					
ANR	558425	Callee	dehexchar		558123	0					
ANR	558426	Identifier	dehexchar		558123	0					
ANR	558427	ArgumentList	next_char		558123	1					
ANR	558428	Argument	next_char		558123	0					
ANR	558429	Identifier	next_char		558123	0					
ANR	558430	PrimaryExpression	4		558123	1					
ANR	558431	ElseStatement	else		558123	0					
ANR	558432	IfStatement	if ( next_state == ST && jp -> state == U4 )		558123	0					
ANR	558433	Condition	next_state == ST && jp -> state == U4	507:24:16830:16864	558123	0	True				
ANR	558434	AndExpression	next_state == ST && jp -> state == U4		558123	0		&&			
ANR	558435	EqualityExpression	next_state == ST		558123	0		==			
ANR	558436	Identifier	next_state		558123	0					
ANR	558437	Identifier	ST		558123	1					
ANR	558438	EqualityExpression	jp -> state == U4		558123	1		==			
ANR	558439	PtrMemberAccess	jp -> state		558123	0					
ANR	558440	Identifier	jp		558123	0					
ANR	558441	Identifier	state		558123	1					
ANR	558442	Identifier	U4		558123	1					
ANR	558443	CompoundStatement		68:61:2274:2274	558123	1					
ANR	558444	ExpressionStatement	utf16 += dehexchar ( next_char )	508:17:16886:16915	558123	0	True				
ANR	558445	AssignmentExpression	utf16 += dehexchar ( next_char )		558123	0		+=			
ANR	558446	Identifier	utf16		558123	0					
ANR	558447	CallExpression	dehexchar ( next_char )		558123	1					
ANR	558448	Callee	dehexchar		558123	0					
ANR	558449	Identifier	dehexchar		558123	0					
ANR	558450	ArgumentList	next_char		558123	1					
ANR	558451	Argument	next_char		558123	0					
ANR	558452	Identifier	next_char		558123	0					
ANR	558453	ExpressionStatement	"utf16_to_utf8 ( & buf , utf16 )"	509:17:16934:16960	558123	1	True				
ANR	558454	CallExpression	"utf16_to_utf8 ( & buf , utf16 )"		558123	0					
ANR	558455	Callee	utf16_to_utf8		558123	0					
ANR	558456	Identifier	utf16_to_utf8		558123	0					
ANR	558457	ArgumentList	& buf		558123	1					
ANR	558458	Argument	& buf		558123	0					
ANR	558459	UnaryOperationExpression	& buf		558123	0					
ANR	558460	UnaryOperator	&		558123	0					
ANR	558461	Identifier	buf		558123	1					
ANR	558462	Argument	utf16		558123	1					
ANR	558463	Identifier	utf16		558123	0					
ANR	558464	ElseStatement	else		558123	0					
ANR	558465	IfStatement	if ( type < IS_LONG && ( next_class == C_DIGIT || next_class == C_ZERO ) )		558123	0					
ANR	558466	Condition	type < IS_LONG && ( next_class == C_DIGIT || next_class == C_ZERO )	511:20:16997:17061	558123	0	True				
ANR	558467	AndExpression	type < IS_LONG && ( next_class == C_DIGIT || next_class == C_ZERO )		558123	0		&&			
ANR	558468	RelationalExpression	type < IS_LONG		558123	0		<			
ANR	558469	Identifier	type		558123	0					
ANR	558470	Identifier	IS_LONG		558123	1					
ANR	558471	OrExpression	next_class == C_DIGIT || next_class == C_ZERO		558123	1		||			
ANR	558472	EqualityExpression	next_class == C_DIGIT		558123	0		==			
ANR	558473	Identifier	next_class		558123	0					
ANR	558474	Identifier	C_DIGIT		558123	1					
ANR	558475	EqualityExpression	next_class == C_ZERO		558123	1		==			
ANR	558476	Identifier	next_class		558123	0					
ANR	558477	Identifier	C_ZERO		558123	1					
ANR	558478	CompoundStatement		72:87:2471:2471	558123	1					
ANR	558479	ExpressionStatement	type = IS_LONG	512:13:17079:17093	558123	0	True				
ANR	558480	AssignmentExpression	type = IS_LONG		558123	0		=			
ANR	558481	Identifier	type		558123	0					
ANR	558482	Identifier	IS_LONG		558123	1					
ANR	558483	ExpressionStatement	"smart_str_appendc ( & buf , next_char )"	513:13:17108:17142	558123	1	True				
ANR	558484	CallExpression	"smart_str_appendc ( & buf , next_char )"		558123	0					
ANR	558485	Callee	smart_str_appendc		558123	0					
ANR	558486	Identifier	smart_str_appendc		558123	0					
ANR	558487	ArgumentList	& buf		558123	1					
ANR	558488	Argument	& buf		558123	0					
ANR	558489	UnaryOperationExpression	& buf		558123	0					
ANR	558490	UnaryOperator	&		558123	0					
ANR	558491	Identifier	buf		558123	1					
ANR	558492	Argument	next_char		558123	1					
ANR	558493	Identifier	next_char		558123	0					
ANR	558494	ElseStatement	else		558123	0					
ANR	558495	IfStatement	if ( type == IS_LONG && next_state == E1 )		558123	0					
ANR	558496	Condition	type == IS_LONG && next_state == E1	514:20:17164:17198	558123	0	True				
ANR	558497	AndExpression	type == IS_LONG && next_state == E1		558123	0		&&			
ANR	558498	EqualityExpression	type == IS_LONG		558123	0		==			
ANR	558499	Identifier	type		558123	0					
ANR	558500	Identifier	IS_LONG		558123	1					
ANR	558501	EqualityExpression	next_state == E1		558123	1		==			
ANR	558502	Identifier	next_state		558123	0					
ANR	558503	Identifier	E1		558123	1					
ANR	558504	CompoundStatement		75:57:2608:2608	558123	1					
ANR	558505	ExpressionStatement	type = IS_DOUBLE	515:13:17216:17232	558123	0	True				
ANR	558506	AssignmentExpression	type = IS_DOUBLE		558123	0		=			
ANR	558507	Identifier	type		558123	0					
ANR	558508	Identifier	IS_DOUBLE		558123	1					
ANR	558509	ExpressionStatement	"smart_str_appendc ( & buf , next_char )"	516:13:17247:17281	558123	1	True				
ANR	558510	CallExpression	"smart_str_appendc ( & buf , next_char )"		558123	0					
ANR	558511	Callee	smart_str_appendc		558123	0					
ANR	558512	Identifier	smart_str_appendc		558123	0					
ANR	558513	ArgumentList	& buf		558123	1					
ANR	558514	Argument	& buf		558123	0					
ANR	558515	UnaryOperationExpression	& buf		558123	0					
ANR	558516	UnaryOperator	&		558123	0					
ANR	558517	Identifier	buf		558123	1					
ANR	558518	Argument	next_char		558123	1					
ANR	558519	Identifier	next_char		558123	0					
ANR	558520	ElseStatement	else		558123	0					
ANR	558521	IfStatement	if ( type < IS_DOUBLE && next_class == C_POINT )		558123	0					
ANR	558522	Condition	type < IS_DOUBLE && next_class == C_POINT	517:20:17303:17343	558123	0	True				
ANR	558523	AndExpression	type < IS_DOUBLE && next_class == C_POINT		558123	0		&&			
ANR	558524	RelationalExpression	type < IS_DOUBLE		558123	0		<			
ANR	558525	Identifier	type		558123	0					
ANR	558526	Identifier	IS_DOUBLE		558123	1					
ANR	558527	EqualityExpression	next_class == C_POINT		558123	1		==			
ANR	558528	Identifier	next_class		558123	0					
ANR	558529	Identifier	C_POINT		558123	1					
ANR	558530	CompoundStatement		78:63:2753:2753	558123	1					
ANR	558531	ExpressionStatement	type = IS_DOUBLE	518:13:17361:17377	558123	0	True				
ANR	558532	AssignmentExpression	type = IS_DOUBLE		558123	0		=			
ANR	558533	Identifier	type		558123	0					
ANR	558534	Identifier	IS_DOUBLE		558123	1					
ANR	558535	ExpressionStatement	"smart_str_appendc ( & buf , next_char )"	519:13:17392:17426	558123	1	True				
ANR	558536	CallExpression	"smart_str_appendc ( & buf , next_char )"		558123	0					
ANR	558537	Callee	smart_str_appendc		558123	0					
ANR	558538	Identifier	smart_str_appendc		558123	0					
ANR	558539	ArgumentList	& buf		558123	1					
ANR	558540	Argument	& buf		558123	0					
ANR	558541	UnaryOperationExpression	& buf		558123	0					
ANR	558542	UnaryOperator	&		558123	0					
ANR	558543	Identifier	buf		558123	1					
ANR	558544	Argument	next_char		558123	1					
ANR	558545	Identifier	next_char		558123	0					
ANR	558546	ElseStatement	else		558123	0					
ANR	558547	IfStatement	if ( type < IS_STRING && next_class == C_QUOTE )		558123	0					
ANR	558548	Condition	type < IS_STRING && next_class == C_QUOTE	520:20:17448:17488	558123	0	True				
ANR	558549	AndExpression	type < IS_STRING && next_class == C_QUOTE		558123	0		&&			
ANR	558550	RelationalExpression	type < IS_STRING		558123	0		<			
ANR	558551	Identifier	type		558123	0					
ANR	558552	Identifier	IS_STRING		558123	1					
ANR	558553	EqualityExpression	next_class == C_QUOTE		558123	1		==			
ANR	558554	Identifier	next_class		558123	0					
ANR	558555	Identifier	C_QUOTE		558123	1					
ANR	558556	CompoundStatement		81:63:2898:2898	558123	1					
ANR	558557	ExpressionStatement	type = IS_STRING	521:13:17506:17522	558123	0	True				
ANR	558558	AssignmentExpression	type = IS_STRING		558123	0		=			
ANR	558559	Identifier	type		558123	0					
ANR	558560	Identifier	IS_STRING		558123	1					
ANR	558561	ElseStatement	else		558123	0					
ANR	558562	IfStatement	if ( type < IS_BOOL && ( ( jp -> state == T3 && next_state == OK ) || ( jp -> state == F4 && next_state == OK ) ) )		558123	0					
ANR	558563	Condition	type < IS_BOOL && ( ( jp -> state == T3 && next_state == OK ) || ( jp -> state == F4 && next_state == OK ) )	522:20:17544:17641	558123	0	True				
ANR	558564	AndExpression	type < IS_BOOL && ( ( jp -> state == T3 && next_state == OK ) || ( jp -> state == F4 && next_state == OK ) )		558123	0		&&			
ANR	558565	RelationalExpression	type < IS_BOOL		558123	0		<			
ANR	558566	Identifier	type		558123	0					
ANR	558567	Identifier	IS_BOOL		558123	1					
ANR	558568	OrExpression	( jp -> state == T3 && next_state == OK ) || ( jp -> state == F4 && next_state == OK )		558123	1		||			
ANR	558569	AndExpression	jp -> state == T3 && next_state == OK		558123	0		&&			
ANR	558570	EqualityExpression	jp -> state == T3		558123	0		==			
ANR	558571	PtrMemberAccess	jp -> state		558123	0					
ANR	558572	Identifier	jp		558123	0					
ANR	558573	Identifier	state		558123	1					
ANR	558574	Identifier	T3		558123	1					
ANR	558575	EqualityExpression	next_state == OK		558123	1		==			
ANR	558576	Identifier	next_state		558123	0					
ANR	558577	Identifier	OK		558123	1					
ANR	558578	AndExpression	jp -> state == F4 && next_state == OK		558123	1		&&			
ANR	558579	EqualityExpression	jp -> state == F4		558123	0		==			
ANR	558580	PtrMemberAccess	jp -> state		558123	0					
ANR	558581	Identifier	jp		558123	0					
ANR	558582	Identifier	state		558123	1					
ANR	558583	Identifier	F4		558123	1					
ANR	558584	EqualityExpression	next_state == OK		558123	1		==			
ANR	558585	Identifier	next_state		558123	0					
ANR	558586	Identifier	OK		558123	1					
ANR	558587	CompoundStatement		83:120:3051:3051	558123	1					
ANR	558588	ExpressionStatement	type = IS_BOOL	523:13:17659:17673	558123	0	True				
ANR	558589	AssignmentExpression	type = IS_BOOL		558123	0		=			
ANR	558590	Identifier	type		558123	0					
ANR	558591	Identifier	IS_BOOL		558123	1					
ANR	558592	ElseStatement	else		558123	0					
ANR	558593	IfStatement	if ( type < IS_NULL && jp -> state == N3 && next_state == OK )		558123	0					
ANR	558594	Condition	type < IS_NULL && jp -> state == N3 && next_state == OK	524:20:17695:17747	558123	0	True				
ANR	558595	AndExpression	type < IS_NULL && jp -> state == N3 && next_state == OK		558123	0		&&			
ANR	558596	RelationalExpression	type < IS_NULL		558123	0		<			
ANR	558597	Identifier	type		558123	0					
ANR	558598	Identifier	IS_NULL		558123	1					
ANR	558599	AndExpression	jp -> state == N3 && next_state == OK		558123	1		&&			
ANR	558600	EqualityExpression	jp -> state == N3		558123	0		==			
ANR	558601	PtrMemberAccess	jp -> state		558123	0					
ANR	558602	Identifier	jp		558123	0					
ANR	558603	Identifier	state		558123	1					
ANR	558604	Identifier	N3		558123	1					
ANR	558605	EqualityExpression	next_state == OK		558123	1		==			
ANR	558606	Identifier	next_state		558123	0					
ANR	558607	Identifier	OK		558123	1					
ANR	558608	CompoundStatement		85:75:3157:3157	558123	1					
ANR	558609	ExpressionStatement	type = IS_NULL	525:13:17765:17779	558123	0	True				
ANR	558610	AssignmentExpression	type = IS_NULL		558123	0		=			
ANR	558611	Identifier	type		558123	0					
ANR	558612	Identifier	IS_NULL		558123	1					
ANR	558613	ElseStatement	else		558123	0					
ANR	558614	IfStatement	if ( type != IS_STRING && next_class > C_WHITE )		558123	0					
ANR	558615	Condition	type != IS_STRING && next_class > C_WHITE	526:20:17801:17841	558123	0	True				
ANR	558616	AndExpression	type != IS_STRING && next_class > C_WHITE		558123	0		&&			
ANR	558617	EqualityExpression	type != IS_STRING		558123	0		!=			
ANR	558618	Identifier	type		558123	0					
ANR	558619	Identifier	IS_STRING		558123	1					
ANR	558620	RelationalExpression	next_class > C_WHITE		558123	1		>			
ANR	558621	Identifier	next_class		558123	0					
ANR	558622	Identifier	C_WHITE		558123	1					
ANR	558623	CompoundStatement		87:63:3251:3251	558123	1					
ANR	558624	ExpressionStatement	"utf16_to_utf8 ( & buf , next_char )"	527:13:17859:17889	558123	0	True				
ANR	558625	CallExpression	"utf16_to_utf8 ( & buf , next_char )"		558123	0					
ANR	558626	Callee	utf16_to_utf8		558123	0					
ANR	558627	Identifier	utf16_to_utf8		558123	0					
ANR	558628	ArgumentList	& buf		558123	1					
ANR	558629	Argument	& buf		558123	0					
ANR	558630	UnaryOperationExpression	& buf		558123	0					
ANR	558631	UnaryOperator	&		558123	0					
ANR	558632	Identifier	buf		558123	1					
ANR	558633	Argument	next_char		558123	1					
ANR	558634	Identifier	next_char		558123	0					
ANR	558635	ExpressionStatement	jp -> state = next_state	529:9:17911:17933	558123	1	True				
ANR	558636	AssignmentExpression	jp -> state = next_state		558123	0		=			
ANR	558637	PtrMemberAccess	jp -> state		558123	0					
ANR	558638	Identifier	jp		558123	0					
ANR	558639	Identifier	state		558123	1					
ANR	558640	Identifier	next_state		558123	1					
ANR	558641	ElseStatement	else		558123	0					
ANR	558642	CompoundStatement		91:9:3351:3351	558123	0					
ANR	558643	SwitchStatement	switch ( next_state )		558123	0					
ANR	558644	Condition	next_state	534:20:18015:18024	558123	0	True				
ANR	558645	Identifier	next_state		558123	0					
ANR	558646	CompoundStatement		95:32:3434:3434	558123	1					
ANR	558647	Statement	case	536:12:18055:18058	558123	0	True				
ANR	558648	Statement	-	536:17:18060:18060	558123	1	True				
ANR	558649	Label	9 :	536:18:18061:18062	558123	2	True				
ANR	558650	IfStatement	"if ( ! pop ( jp , MODE_KEY ) )"		558123	3					
ANR	558651	Condition	"! pop ( jp , MODE_KEY )"	537:20:18084:18101	558123	0	True				
ANR	558652	UnaryOperationExpression	"! pop ( jp , MODE_KEY )"		558123	0					
ANR	558653	UnaryOperator	!		558123	0					
ANR	558654	CallExpression	"pop ( jp , MODE_KEY )"		558123	1					
ANR	558655	Callee	pop		558123	0					
ANR	558656	Identifier	pop		558123	0					
ANR	558657	ArgumentList	jp		558123	1					
ANR	558658	Argument	jp		558123	0					
ANR	558659	Identifier	jp		558123	0					
ANR	558660	Argument	MODE_KEY		558123	1					
ANR	558661	Identifier	MODE_KEY		558123	0					
ANR	558662	CompoundStatement		98:40:3511:3511	558123	1					
ANR	558663	ExpressionStatement	FREE_BUFFERS ( )	538:20:18126:18140	558123	0	True				
ANR	558664	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	558665	Callee	FREE_BUFFERS		558123	0					
ANR	558666	Identifier	FREE_BUFFERS		558123	0					
ANR	558667	ArgumentList			558123	1					
ANR	558668	ReturnStatement	return false ;	539:20:18162:18174	558123	1	True				
ANR	558669	Identifier	false		558123	0					
ANR	558670	ExpressionStatement	jp -> state = OK	541:16:18210:18224	558123	4	True				
ANR	558671	AssignmentExpression	jp -> state = OK		558123	0		=			
ANR	558672	PtrMemberAccess	jp -> state		558123	0					
ANR	558673	Identifier	jp		558123	0					
ANR	558674	Identifier	state		558123	1					
ANR	558675	Identifier	OK		558123	1					
ANR	558676	BreakStatement	break ;	542:16:18242:18247	558123	5	True				
ANR	558677	Statement	case	544:12:18269:18272	558123	6	True				
ANR	558678	Statement	-	544:17:18274:18274	558123	7	True				
ANR	558679	Label	8 :	544:18:18275:18276	558123	8	True				
ANR	558680	IfStatement	if ( type != - 1 && jp -> stack [ jp -> top ] == MODE_OBJECT )		558123	9					
ANR	558681	Condition	type != - 1 && jp -> stack [ jp -> top ] == MODE_OBJECT	545:20:18298:18344	558123	0	True				
ANR	558682	AndExpression	type != - 1 && jp -> stack [ jp -> top ] == MODE_OBJECT		558123	0		&&			
ANR	558683	EqualityExpression	type != - 1		558123	0		!=			
ANR	558684	Identifier	type		558123	0					
ANR	558685	UnaryOperationExpression	- 1		558123	1					
ANR	558686	UnaryOperator	-		558123	0					
ANR	558687	PrimaryExpression	1		558123	1					
ANR	558688	EqualityExpression	jp -> stack [ jp -> top ] == MODE_OBJECT		558123	1		==			
ANR	558689	ArrayIndexing	jp -> stack [ jp -> top ]		558123	0					
ANR	558690	PtrMemberAccess	jp -> stack		558123	0					
ANR	558691	Identifier	jp		558123	0					
ANR	558692	Identifier	stack		558123	1					
ANR	558693	PtrMemberAccess	jp -> top		558123	1					
ANR	558694	Identifier	jp		558123	0					
ANR	558695	Identifier	top		558123	1					
ANR	558696	Identifier	MODE_OBJECT		558123	1					
ANR	558697	CompoundStatement		108:20:3792:3802	558123	1					
ANR	558698	IdentifierDeclStatement	zval * mval ;	547:20:18385:18395	558123	0	True				
ANR	558699	IdentifierDecl	* mval		558123	0					
ANR	558700	IdentifierDeclType	zval *		558123	0					
ANR	558701	Identifier	mval		558123	1					
ANR	558702	ExpressionStatement	smart_str_0 ( & buf )	548:20:18417:18434	558123	1	True				
ANR	558703	CallExpression	smart_str_0 ( & buf )		558123	0					
ANR	558704	Callee	smart_str_0		558123	0					
ANR	558705	Identifier	smart_str_0		558123	0					
ANR	558706	ArgumentList	& buf		558123	1					
ANR	558707	Argument	& buf		558123	0					
ANR	558708	UnaryOperationExpression	& buf		558123	0					
ANR	558709	UnaryOperator	&		558123	0					
ANR	558710	Identifier	buf		558123	1					
ANR	558711	ExpressionStatement	"json_create_zval ( & mval , & buf , type , options )"	550:20:18457:18501	558123	2	True				
ANR	558712	CallExpression	"json_create_zval ( & mval , & buf , type , options )"		558123	0					
ANR	558713	Callee	json_create_zval		558123	0					
ANR	558714	Identifier	json_create_zval		558123	0					
ANR	558715	ArgumentList	& mval		558123	1					
ANR	558716	Argument	& mval		558123	0					
ANR	558717	UnaryOperationExpression	& mval		558123	0					
ANR	558718	UnaryOperator	&		558123	0					
ANR	558719	Identifier	mval		558123	1					
ANR	558720	Argument	& buf		558123	1					
ANR	558721	UnaryOperationExpression	& buf		558123	0					
ANR	558722	UnaryOperator	&		558123	0					
ANR	558723	Identifier	buf		558123	1					
ANR	558724	Argument	type		558123	2					
ANR	558725	Identifier	type		558123	0					
ANR	558726	Argument	options		558123	3					
ANR	558727	Identifier	options		558123	0					
ANR	558728	IfStatement	if ( ! assoc )		558123	3					
ANR	558729	Condition	! assoc	552:24:18528:18533	558123	0	True				
ANR	558730	UnaryOperationExpression	! assoc		558123	0					
ANR	558731	UnaryOperator	!		558123	0					
ANR	558732	Identifier	assoc		558123	1					
ANR	558733	CompoundStatement		113:32:3943:3943	558123	1					
ANR	558734	Statement	add_property_zval_ex	553:24:18562:18581	558123	0	True				
ANR	558735	Statement	(	553:44:18582:18582	558123	1	True				
ANR	558736	Statement	jp	553:45:18583:18584	558123	2	True				
ANR	558737	Statement	->	553:47:18585:18586	558123	3	True				
ANR	558738	Statement	the_zstack	553:49:18587:18596	558123	4	True				
ANR	558739	Statement	[	553:59:18597:18597	558123	5	True				
ANR	558740	Statement	jp	553:60:18598:18599	558123	6	True				
ANR	558741	Statement	->	553:62:18600:18601	558123	7	True				
ANR	558742	Statement	top	553:64:18602:18604	558123	8	True				
ANR	558743	Statement	]	553:67:18605:18605	558123	9	True				
ANR	558744	Statement	","	553:68:18606:18606	558123	10	True				
ANR	558745	Statement	(	553:70:18608:18608	558123	11	True				
ANR	558746	Statement	key	553:71:18609:18611	558123	12	True				
ANR	558747	Statement	.	553:74:18612:18612	558123	13	True				
ANR	558748	Statement	len	553:75:18613:18615	558123	14	True				
ANR	558749	Statement	?	553:79:18617:18617	558123	15	True				
ANR	558750	Statement	key	553:81:18619:18621	558123	16	True				
ANR	558751	Statement	.	553:84:18622:18622	558123	17	True				
ANR	558752	Label	c :	553:85:18623:18625	558123	18	True				
ANR	558753	Identifier	c		558123	0					
ANR	558754	Statement	"""_empty_"""	553:89:18627:18635	558123	19	True				
ANR	558755	Statement	)	553:98:18636:18636	558123	20	True				
ANR	558756	Statement	","	553:99:18637:18637	558123	21	True				
ANR	558757	Statement	(	553:101:18639:18639	558123	22	True				
ANR	558758	Statement	key	553:102:18640:18642	558123	23	True				
ANR	558759	Statement	.	553:105:18643:18643	558123	24	True				
ANR	558760	Statement	len	553:106:18644:18646	558123	25	True				
ANR	558761	Statement	?	553:110:18648:18648	558123	26	True				
ANR	558762	Statement	(	553:112:18650:18650	558123	27	True				
ANR	558763	Statement	key	553:113:18651:18653	558123	28	True				
ANR	558764	Statement	.	553:116:18654:18654	558123	29	True				
ANR	558765	Statement	len	553:117:18655:18657	558123	30	True				
ANR	558766	Statement	+	553:121:18659:18659	558123	31	True				
ANR	558767	Statement	1	553:123:18661:18661	558123	32	True				
ANR	558768	Statement	)	553:124:18662:18662	558123	33	True				
ANR	558769	Statement	:	553:126:18664:18664	558123	34	True				
ANR	558770	Statement	sizeof	553:128:18666:18671	558123	35	True				
ANR	558771	Statement	(	553:134:18672:18672	558123	36	True				
ANR	558772	Statement	"""_empty_"""	553:135:18673:18681	558123	37	True				
ANR	558773	Statement	)	553:144:18682:18682	558123	38	True				
ANR	558774	Statement	)	553:145:18683:18683	558123	39	True				
ANR	558775	Statement	","	553:146:18684:18684	558123	40	True				
ANR	558776	Statement	mval	553:148:18686:18689	558123	41	True				
ANR	558777	Statement	TSRMLS_CC	553:153:18691:18699	558123	42	True				
ANR	558778	Statement	)	553:162:18700:18700	558123	43	True				
ANR	558779	ExpressionStatement		553:163:18701:18701	558123	44	True				
ANR	558780	ExpressionStatement	Z_DELREF_P ( mval )	554:24:18727:18743	558123	45	True				
ANR	558781	CallExpression	Z_DELREF_P ( mval )		558123	0					
ANR	558782	Callee	Z_DELREF_P		558123	0					
ANR	558783	Identifier	Z_DELREF_P		558123	0					
ANR	558784	ArgumentList	mval		558123	1					
ANR	558785	Argument	mval		558123	0					
ANR	558786	Identifier	mval		558123	0					
ANR	558787	ElseStatement	else		558123	0					
ANR	558788	CompoundStatement		116:27:4179:4179	558123	0					
ANR	558789	ExpressionStatement	"add_assoc_zval_ex ( jp -> the_zstack [ jp -> top ] , ( key . len ? key . c : """" ) , ( key . len ? ( key . len + 1 ) : sizeof ( """" ) ) , mval )"	556:24:18798:18910	558123	0	True				
ANR	558790	CallExpression	"add_assoc_zval_ex ( jp -> the_zstack [ jp -> top ] , ( key . len ? key . c : """" ) , ( key . len ? ( key . len + 1 ) : sizeof ( """" ) ) , mval )"		558123	0					
ANR	558791	Callee	add_assoc_zval_ex		558123	0					
ANR	558792	Identifier	add_assoc_zval_ex		558123	0					
ANR	558793	ArgumentList	jp -> the_zstack [ jp -> top ]		558123	1					
ANR	558794	Argument	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	558795	ArrayIndexing	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	558796	PtrMemberAccess	jp -> the_zstack		558123	0					
ANR	558797	Identifier	jp		558123	0					
ANR	558798	Identifier	the_zstack		558123	1					
ANR	558799	PtrMemberAccess	jp -> top		558123	1					
ANR	558800	Identifier	jp		558123	0					
ANR	558801	Identifier	top		558123	1					
ANR	558802	Argument	"key . len ? key . c : """""		558123	1					
ANR	558803	ConditionalExpression	"key . len ? key . c : """""		558123	0					
ANR	558804	Condition	key . len		558123	0					
ANR	558805	MemberAccess	key . len		558123	0					
ANR	558806	Identifier	key		558123	0					
ANR	558807	Identifier	len		558123	1					
ANR	558808	MemberAccess	key . c		558123	1					
ANR	558809	Identifier	key		558123	0					
ANR	558810	Identifier	c		558123	1					
ANR	558811	PrimaryExpression	""""""		558123	2					
ANR	558812	Argument	"key . len ? ( key . len + 1 ) : sizeof ( """" )"		558123	2					
ANR	558813	ConditionalExpression	"key . len ? ( key . len + 1 ) : sizeof ( """" )"		558123	0					
ANR	558814	Condition	key . len		558123	0					
ANR	558815	MemberAccess	key . len		558123	0					
ANR	558816	Identifier	key		558123	0					
ANR	558817	Identifier	len		558123	1					
ANR	558818	AdditiveExpression	key . len + 1		558123	1		+			
ANR	558819	MemberAccess	key . len		558123	0					
ANR	558820	Identifier	key		558123	0					
ANR	558821	Identifier	len		558123	1					
ANR	558822	PrimaryExpression	1		558123	1					
ANR	558823	SizeofExpression	"sizeof ( """" )"		558123	2					
ANR	558824	Sizeof	sizeof		558123	0					
ANR	558825	PrimaryExpression	""""""		558123	1					
ANR	558826	Argument	mval		558123	3					
ANR	558827	Identifier	mval		558123	0					
ANR	558828	ExpressionStatement	key . len = 0	558:20:18954:18965	558123	4	True				
ANR	558829	AssignmentExpression	key . len = 0		558123	0		=			
ANR	558830	MemberAccess	key . len		558123	0					
ANR	558831	Identifier	key		558123	0					
ANR	558832	Identifier	len		558123	1					
ANR	558833	PrimaryExpression	0		558123	1					
ANR	558834	ExpressionStatement	buf . len = 0	559:20:18987:18998	558123	5	True				
ANR	558835	AssignmentExpression	buf . len = 0		558123	0		=			
ANR	558836	MemberAccess	buf . len		558123	0					
ANR	558837	Identifier	buf		558123	0					
ANR	558838	Identifier	len		558123	1					
ANR	558839	PrimaryExpression	0		558123	1					
ANR	558840	ExpressionStatement	JSON_RESET_TYPE ( )	560:20:19020:19037	558123	6	True				
ANR	558841	CallExpression	JSON_RESET_TYPE ( )		558123	0					
ANR	558842	Callee	JSON_RESET_TYPE		558123	0					
ANR	558843	Identifier	JSON_RESET_TYPE		558123	0					
ANR	558844	ArgumentList			558123	1					
ANR	558845	IfStatement	"if ( ! pop ( jp , MODE_OBJECT ) )"		558123	10					
ANR	558846	Condition	"! pop ( jp , MODE_OBJECT )"	564:20:19079:19099	558123	0	True				
ANR	558847	UnaryOperationExpression	"! pop ( jp , MODE_OBJECT )"		558123	0					
ANR	558848	UnaryOperator	!		558123	0					
ANR	558849	CallExpression	"pop ( jp , MODE_OBJECT )"		558123	1					
ANR	558850	Callee	pop		558123	0					
ANR	558851	Identifier	pop		558123	0					
ANR	558852	ArgumentList	jp		558123	1					
ANR	558853	Argument	jp		558123	0					
ANR	558854	Identifier	jp		558123	0					
ANR	558855	Argument	MODE_OBJECT		558123	1					
ANR	558856	Identifier	MODE_OBJECT		558123	0					
ANR	558857	CompoundStatement		125:43:4509:4509	558123	1					
ANR	558858	ExpressionStatement	FREE_BUFFERS ( )	565:20:19124:19138	558123	0	True				
ANR	558859	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	558860	Callee	FREE_BUFFERS		558123	0					
ANR	558861	Identifier	FREE_BUFFERS		558123	0					
ANR	558862	ArgumentList			558123	1					
ANR	558863	ReturnStatement	return false ;	566:20:19160:19172	558123	1	True				
ANR	558864	Identifier	false		558123	0					
ANR	558865	ExpressionStatement	jp -> state = OK	568:16:19208:19222	558123	11	True				
ANR	558866	AssignmentExpression	jp -> state = OK		558123	0		=			
ANR	558867	PtrMemberAccess	jp -> state		558123	0					
ANR	558868	Identifier	jp		558123	0					
ANR	558869	Identifier	state		558123	1					
ANR	558870	Identifier	OK		558123	1					
ANR	558871	BreakStatement	break ;	569:16:19240:19245	558123	12	True				
ANR	558872	Statement	case	571:12:19267:19270	558123	13	True				
ANR	558873	Statement	-	571:17:19272:19272	558123	14	True				
ANR	558874	Label	7 :	571:18:19273:19274	558123	15	True				
ANR	558875	CompoundStatement		133:12:4695:4695	558123	16					
ANR	558876	IfStatement	if ( type != - 1 && jp -> stack [ jp -> top ] == MODE_ARRAY )		558123	0					
ANR	558877	Condition	type != - 1 && jp -> stack [ jp -> top ] == MODE_ARRAY	573:20:19310:19355	558123	0	True				
ANR	558878	AndExpression	type != - 1 && jp -> stack [ jp -> top ] == MODE_ARRAY		558123	0		&&			
ANR	558879	EqualityExpression	type != - 1		558123	0		!=			
ANR	558880	Identifier	type		558123	0					
ANR	558881	UnaryOperationExpression	- 1		558123	1					
ANR	558882	UnaryOperator	-		558123	0					
ANR	558883	PrimaryExpression	1		558123	1					
ANR	558884	EqualityExpression	jp -> stack [ jp -> top ] == MODE_ARRAY		558123	1		==			
ANR	558885	ArrayIndexing	jp -> stack [ jp -> top ]		558123	0					
ANR	558886	PtrMemberAccess	jp -> stack		558123	0					
ANR	558887	Identifier	jp		558123	0					
ANR	558888	Identifier	stack		558123	1					
ANR	558889	PtrMemberAccess	jp -> top		558123	1					
ANR	558890	Identifier	jp		558123	0					
ANR	558891	Identifier	top		558123	1					
ANR	558892	Identifier	MODE_ARRAY		558123	1					
ANR	558893	CompoundStatement		136:20:4803:4813	558123	1					
ANR	558894	IdentifierDeclStatement	zval * mval ;	575:20:19396:19406	558123	0	True				
ANR	558895	IdentifierDecl	* mval		558123	0					
ANR	558896	IdentifierDeclType	zval *		558123	0					
ANR	558897	Identifier	mval		558123	1					
ANR	558898	ExpressionStatement	smart_str_0 ( & buf )	576:20:19428:19445	558123	1	True				
ANR	558899	CallExpression	smart_str_0 ( & buf )		558123	0					
ANR	558900	Callee	smart_str_0		558123	0					
ANR	558901	Identifier	smart_str_0		558123	0					
ANR	558902	ArgumentList	& buf		558123	1					
ANR	558903	Argument	& buf		558123	0					
ANR	558904	UnaryOperationExpression	& buf		558123	0					
ANR	558905	UnaryOperator	&		558123	0					
ANR	558906	Identifier	buf		558123	1					
ANR	558907	ExpressionStatement	"json_create_zval ( & mval , & buf , type , options )"	578:20:19468:19512	558123	2	True				
ANR	558908	CallExpression	"json_create_zval ( & mval , & buf , type , options )"		558123	0					
ANR	558909	Callee	json_create_zval		558123	0					
ANR	558910	Identifier	json_create_zval		558123	0					
ANR	558911	ArgumentList	& mval		558123	1					
ANR	558912	Argument	& mval		558123	0					
ANR	558913	UnaryOperationExpression	& mval		558123	0					
ANR	558914	UnaryOperator	&		558123	0					
ANR	558915	Identifier	mval		558123	1					
ANR	558916	Argument	& buf		558123	1					
ANR	558917	UnaryOperationExpression	& buf		558123	0					
ANR	558918	UnaryOperator	&		558123	0					
ANR	558919	Identifier	buf		558123	1					
ANR	558920	Argument	type		558123	2					
ANR	558921	Identifier	type		558123	0					
ANR	558922	Argument	options		558123	3					
ANR	558923	Identifier	options		558123	0					
ANR	558924	ExpressionStatement	"add_next_index_zval ( jp -> the_zstack [ jp -> top ] , mval )"	579:20:19534:19584	558123	3	True				
ANR	558925	CallExpression	"add_next_index_zval ( jp -> the_zstack [ jp -> top ] , mval )"		558123	0					
ANR	558926	Callee	add_next_index_zval		558123	0					
ANR	558927	Identifier	add_next_index_zval		558123	0					
ANR	558928	ArgumentList	jp -> the_zstack [ jp -> top ]		558123	1					
ANR	558929	Argument	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	558930	ArrayIndexing	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	558931	PtrMemberAccess	jp -> the_zstack		558123	0					
ANR	558932	Identifier	jp		558123	0					
ANR	558933	Identifier	the_zstack		558123	1					
ANR	558934	PtrMemberAccess	jp -> top		558123	1					
ANR	558935	Identifier	jp		558123	0					
ANR	558936	Identifier	top		558123	1					
ANR	558937	Argument	mval		558123	1					
ANR	558938	Identifier	mval		558123	0					
ANR	558939	ExpressionStatement	buf . len = 0	580:20:19606:19617	558123	4	True				
ANR	558940	AssignmentExpression	buf . len = 0		558123	0		=			
ANR	558941	MemberAccess	buf . len		558123	0					
ANR	558942	Identifier	buf		558123	0					
ANR	558943	Identifier	len		558123	1					
ANR	558944	PrimaryExpression	0		558123	1					
ANR	558945	ExpressionStatement	JSON_RESET_TYPE ( )	581:20:19639:19656	558123	5	True				
ANR	558946	CallExpression	JSON_RESET_TYPE ( )		558123	0					
ANR	558947	Callee	JSON_RESET_TYPE		558123	0					
ANR	558948	Identifier	JSON_RESET_TYPE		558123	0					
ANR	558949	ArgumentList			558123	1					
ANR	558950	IfStatement	"if ( ! pop ( jp , MODE_ARRAY ) )"		558123	1					
ANR	558951	Condition	"! pop ( jp , MODE_ARRAY )"	584:20:19697:19716	558123	0	True				
ANR	558952	UnaryOperationExpression	"! pop ( jp , MODE_ARRAY )"		558123	0					
ANR	558953	UnaryOperator	!		558123	0					
ANR	558954	CallExpression	"pop ( jp , MODE_ARRAY )"		558123	1					
ANR	558955	Callee	pop		558123	0					
ANR	558956	Identifier	pop		558123	0					
ANR	558957	ArgumentList	jp		558123	1					
ANR	558958	Argument	jp		558123	0					
ANR	558959	Identifier	jp		558123	0					
ANR	558960	Argument	MODE_ARRAY		558123	1					
ANR	558961	Identifier	MODE_ARRAY		558123	0					
ANR	558962	CompoundStatement		145:42:5126:5126	558123	1					
ANR	558963	ExpressionStatement	FREE_BUFFERS ( )	585:20:19741:19755	558123	0	True				
ANR	558964	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	558965	Callee	FREE_BUFFERS		558123	0					
ANR	558966	Identifier	FREE_BUFFERS		558123	0					
ANR	558967	ArgumentList			558123	1					
ANR	558968	ReturnStatement	return false ;	586:20:19777:19789	558123	1	True				
ANR	558969	Identifier	false		558123	0					
ANR	558970	ExpressionStatement	jp -> state = OK	588:16:19825:19839	558123	2	True				
ANR	558971	AssignmentExpression	jp -> state = OK		558123	0		=			
ANR	558972	PtrMemberAccess	jp -> state		558123	0					
ANR	558973	Identifier	jp		558123	0					
ANR	558974	Identifier	state		558123	1					
ANR	558975	Identifier	OK		558123	1					
ANR	558976	BreakStatement	break ;	590:3:19858:19863	558123	17	True				
ANR	558977	Statement	case	592:12:19885:19888	558123	18	True				
ANR	558978	Statement	-	592:17:19890:19890	558123	19	True				
ANR	558979	Label	6 :	592:18:19891:19892	558123	20	True				
ANR	558980	IfStatement	"if ( ! push ( jp , MODE_KEY ) )"		558123	21					
ANR	558981	Condition	"! push ( jp , MODE_KEY )"	593:20:19914:19932	558123	0	True				
ANR	558982	UnaryOperationExpression	"! push ( jp , MODE_KEY )"		558123	0					
ANR	558983	UnaryOperator	!		558123	0					
ANR	558984	CallExpression	"push ( jp , MODE_KEY )"		558123	1					
ANR	558985	Callee	push		558123	0					
ANR	558986	Identifier	push		558123	0					
ANR	558987	ArgumentList	jp		558123	1					
ANR	558988	Argument	jp		558123	0					
ANR	558989	Identifier	jp		558123	0					
ANR	558990	Argument	MODE_KEY		558123	1					
ANR	558991	Identifier	MODE_KEY		558123	0					
ANR	558992	CompoundStatement		154:41:5342:5342	558123	1					
ANR	558993	ExpressionStatement	FREE_BUFFERS ( )	594:20:19957:19971	558123	0	True				
ANR	558994	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	558995	Callee	FREE_BUFFERS		558123	0					
ANR	558996	Identifier	FREE_BUFFERS		558123	0					
ANR	558997	ArgumentList			558123	1					
ANR	558998	ReturnStatement	return false ;	595:20:19993:20005	558123	1	True				
ANR	558999	Identifier	false		558123	0					
ANR	559000	ExpressionStatement	jp -> state = OB	598:16:20042:20056	558123	22	True				
ANR	559001	AssignmentExpression	jp -> state = OB		558123	0		=			
ANR	559002	PtrMemberAccess	jp -> state		558123	0					
ANR	559003	Identifier	jp		558123	0					
ANR	559004	Identifier	state		558123	1					
ANR	559005	Identifier	OB		558123	1					
ANR	559006	IfStatement	if ( jp -> top > 0 )		558123	23					
ANR	559007	Condition	jp -> top > 0	599:20:20078:20088	558123	0	True				
ANR	559008	RelationalExpression	jp -> top > 0		558123	0		>			
ANR	559009	PtrMemberAccess	jp -> top		558123	0					
ANR	559010	Identifier	jp		558123	0					
ANR	559011	Identifier	top		558123	1					
ANR	559012	PrimaryExpression	0		558123	1					
ANR	559013	CompoundStatement		161:20:5520:5529	558123	1					
ANR	559014	IdentifierDeclStatement	zval * obj ;	600:20:20113:20122	558123	0	True				
ANR	559015	IdentifierDecl	* obj		558123	0					
ANR	559016	IdentifierDeclType	zval *		558123	0					
ANR	559017	Identifier	obj		558123	1					
ANR	559018	IfStatement	if ( jp -> top == 1 )		558123	1					
ANR	559019	Condition	jp -> top == 1	602:24:20149:20160	558123	0	True				
ANR	559020	EqualityExpression	jp -> top == 1		558123	0		==			
ANR	559021	PtrMemberAccess	jp -> top		558123	0					
ANR	559022	Identifier	jp		558123	0					
ANR	559023	Identifier	top		558123	1					
ANR	559024	PrimaryExpression	1		558123	1					
ANR	559025	CompoundStatement		163:38:5570:5570	558123	1					
ANR	559026	ExpressionStatement	obj = z	603:24:20189:20196	558123	0	True				
ANR	559027	AssignmentExpression	obj = z		558123	0		=			
ANR	559028	Identifier	obj		558123	0					
ANR	559029	Identifier	z		558123	1					
ANR	559030	ElseStatement	else		558123	0					
ANR	559031	CompoundStatement		165:26:5631:5631	558123	0					
ANR	559032	ExpressionStatement	ALLOC_INIT_ZVAL ( obj )	605:24:20250:20270	558123	0	True				
ANR	559033	CallExpression	ALLOC_INIT_ZVAL ( obj )		558123	0					
ANR	559034	Callee	ALLOC_INIT_ZVAL		558123	0					
ANR	559035	Identifier	ALLOC_INIT_ZVAL		558123	0					
ANR	559036	ArgumentList	obj		558123	1					
ANR	559037	Argument	obj		558123	0					
ANR	559038	Identifier	obj		558123	0					
ANR	559039	IfStatement	if ( ! assoc )		558123	2					
ANR	559040	Condition	! assoc	608:24:20319:20324	558123	0	True				
ANR	559041	UnaryOperationExpression	! assoc		558123	0					
ANR	559042	UnaryOperator	!		558123	0					
ANR	559043	Identifier	assoc		558123	1					
ANR	559044	CompoundStatement		169:32:5734:5734	558123	1					
ANR	559045	ExpressionStatement	object_init ( obj )	609:24:20353:20369	558123	0	True				
ANR	559046	CallExpression	object_init ( obj )		558123	0					
ANR	559047	Callee	object_init		558123	0					
ANR	559048	Identifier	object_init		558123	0					
ANR	559049	ArgumentList	obj		558123	1					
ANR	559050	Argument	obj		558123	0					
ANR	559051	Identifier	obj		558123	0					
ANR	559052	ElseStatement	else		558123	0					
ANR	559053	CompoundStatement		171:27:5805:5805	558123	0					
ANR	559054	ExpressionStatement	array_init ( obj )	611:24:20424:20439	558123	0	True				
ANR	559055	CallExpression	array_init ( obj )		558123	0					
ANR	559056	Callee	array_init		558123	0					
ANR	559057	Identifier	array_init		558123	0					
ANR	559058	ArgumentList	obj		558123	1					
ANR	559059	Argument	obj		558123	0					
ANR	559060	Identifier	obj		558123	0					
ANR	559061	ExpressionStatement	jp -> the_zstack [ jp -> top ] = obj	614:20:20484:20513	558123	3	True				
ANR	559062	AssignmentExpression	jp -> the_zstack [ jp -> top ] = obj		558123	0		=			
ANR	559063	ArrayIndexing	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	559064	PtrMemberAccess	jp -> the_zstack		558123	0					
ANR	559065	Identifier	jp		558123	0					
ANR	559066	Identifier	the_zstack		558123	1					
ANR	559067	PtrMemberAccess	jp -> top		558123	1					
ANR	559068	Identifier	jp		558123	0					
ANR	559069	Identifier	top		558123	1					
ANR	559070	Identifier	obj		558123	1					
ANR	559071	IfStatement	if ( jp -> top > 1 )		558123	4					
ANR	559072	Condition	jp -> top > 1	616:24:20540:20550	558123	0	True				
ANR	559073	RelationalExpression	jp -> top > 1		558123	0		>			
ANR	559074	PtrMemberAccess	jp -> top		558123	0					
ANR	559075	Identifier	jp		558123	0					
ANR	559076	Identifier	top		558123	1					
ANR	559077	PrimaryExpression	1		558123	1					
ANR	559078	CompoundStatement		177:37:5960:5960	558123	1					
ANR	559079	Statement	attach_zval	617:24:20579:20589	558123	0	True				
ANR	559080	Statement	(	617:35:20590:20590	558123	1	True				
ANR	559081	Statement	jp	617:36:20591:20592	558123	2	True				
ANR	559082	Statement	","	617:38:20593:20593	558123	3	True				
ANR	559083	Statement	jp	617:40:20595:20596	558123	4	True				
ANR	559084	Statement	->	617:42:20597:20598	558123	5	True				
ANR	559085	Statement	top	617:44:20599:20601	558123	6	True				
ANR	559086	Statement	-	617:48:20603:20603	558123	7	True				
ANR	559087	Statement	1	617:50:20605:20605	558123	8	True				
ANR	559088	Statement	","	617:51:20606:20606	558123	9	True				
ANR	559089	Statement	jp	617:53:20608:20609	558123	10	True				
ANR	559090	Statement	->	617:55:20610:20611	558123	11	True				
ANR	559091	Statement	top	617:57:20612:20614	558123	12	True				
ANR	559092	Statement	","	617:60:20615:20615	558123	13	True				
ANR	559093	Statement	&	617:62:20617:20617	558123	14	True				
ANR	559094	Statement	key	617:63:20618:20620	558123	15	True				
ANR	559095	Statement	","	617:66:20621:20621	558123	16	True				
ANR	559096	Statement	assoc	617:68:20623:20627	558123	17	True				
ANR	559097	Statement	TSRMLS_CC	617:74:20629:20637	558123	18	True				
ANR	559098	Statement	)	617:83:20638:20638	558123	19	True				
ANR	559099	ExpressionStatement		617:84:20639:20639	558123	20	True				
ANR	559100	ExpressionStatement	JSON_RESET_TYPE ( )	620:20:20684:20701	558123	5	True				
ANR	559101	CallExpression	JSON_RESET_TYPE ( )		558123	0					
ANR	559102	Callee	JSON_RESET_TYPE		558123	0					
ANR	559103	Identifier	JSON_RESET_TYPE		558123	0					
ANR	559104	ArgumentList			558123	1					
ANR	559105	BreakStatement	break ;	623:16:20738:20743	558123	24	True				
ANR	559106	Statement	case	625:12:20765:20768	558123	25	True				
ANR	559107	Statement	-	625:17:20770:20770	558123	26	True				
ANR	559108	Label	5 :	625:18:20771:20772	558123	27	True				
ANR	559109	IfStatement	"if ( ! push ( jp , MODE_ARRAY ) )"		558123	28					
ANR	559110	Condition	"! push ( jp , MODE_ARRAY )"	626:20:20794:20814	558123	0	True				
ANR	559111	UnaryOperationExpression	"! push ( jp , MODE_ARRAY )"		558123	0					
ANR	559112	UnaryOperator	!		558123	0					
ANR	559113	CallExpression	"push ( jp , MODE_ARRAY )"		558123	1					
ANR	559114	Callee	push		558123	0					
ANR	559115	Identifier	push		558123	0					
ANR	559116	ArgumentList	jp		558123	1					
ANR	559117	Argument	jp		558123	0					
ANR	559118	Identifier	jp		558123	0					
ANR	559119	Argument	MODE_ARRAY		558123	1					
ANR	559120	Identifier	MODE_ARRAY		558123	0					
ANR	559121	CompoundStatement		187:43:6224:6224	558123	1					
ANR	559122	ExpressionStatement	FREE_BUFFERS ( )	627:20:20839:20853	558123	0	True				
ANR	559123	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	559124	Callee	FREE_BUFFERS		558123	0					
ANR	559125	Identifier	FREE_BUFFERS		558123	0					
ANR	559126	ArgumentList			558123	1					
ANR	559127	ReturnStatement	return false ;	628:20:20875:20887	558123	1	True				
ANR	559128	Identifier	false		558123	0					
ANR	559129	ExpressionStatement	jp -> state = AR	630:16:20923:20937	558123	29	True				
ANR	559130	AssignmentExpression	jp -> state = AR		558123	0		=			
ANR	559131	PtrMemberAccess	jp -> state		558123	0					
ANR	559132	Identifier	jp		558123	0					
ANR	559133	Identifier	state		558123	1					
ANR	559134	Identifier	AR		558123	1					
ANR	559135	IfStatement	if ( jp -> top > 0 )		558123	30					
ANR	559136	Condition	jp -> top > 0	632:20:20960:20970	558123	0	True				
ANR	559137	RelationalExpression	jp -> top > 0		558123	0		>			
ANR	559138	PtrMemberAccess	jp -> top		558123	0					
ANR	559139	Identifier	jp		558123	0					
ANR	559140	Identifier	top		558123	1					
ANR	559141	PrimaryExpression	0		558123	1					
ANR	559142	CompoundStatement		194:20:6402:6411	558123	1					
ANR	559143	IdentifierDeclStatement	zval * arr ;	633:20:20995:21004	558123	0	True				
ANR	559144	IdentifierDecl	* arr		558123	0					
ANR	559145	IdentifierDeclType	zval *		558123	0					
ANR	559146	Identifier	arr		558123	1					
ANR	559147	IfStatement	if ( jp -> top == 1 )		558123	1					
ANR	559148	Condition	jp -> top == 1	635:24:21031:21042	558123	0	True				
ANR	559149	EqualityExpression	jp -> top == 1		558123	0		==			
ANR	559150	PtrMemberAccess	jp -> top		558123	0					
ANR	559151	Identifier	jp		558123	0					
ANR	559152	Identifier	top		558123	1					
ANR	559153	PrimaryExpression	1		558123	1					
ANR	559154	CompoundStatement		196:38:6452:6452	558123	1					
ANR	559155	ExpressionStatement	arr = z	636:24:21071:21078	558123	0	True				
ANR	559156	AssignmentExpression	arr = z		558123	0		=			
ANR	559157	Identifier	arr		558123	0					
ANR	559158	Identifier	z		558123	1					
ANR	559159	ElseStatement	else		558123	0					
ANR	559160	CompoundStatement		198:27:6514:6514	558123	0					
ANR	559161	ExpressionStatement	ALLOC_INIT_ZVAL ( arr )	638:24:21133:21153	558123	0	True				
ANR	559162	CallExpression	ALLOC_INIT_ZVAL ( arr )		558123	0					
ANR	559163	Callee	ALLOC_INIT_ZVAL		558123	0					
ANR	559164	Identifier	ALLOC_INIT_ZVAL		558123	0					
ANR	559165	ArgumentList	arr		558123	1					
ANR	559166	Argument	arr		558123	0					
ANR	559167	Identifier	arr		558123	0					
ANR	559168	ExpressionStatement	array_init ( arr )	641:20:21198:21213	558123	2	True				
ANR	559169	CallExpression	array_init ( arr )		558123	0					
ANR	559170	Callee	array_init		558123	0					
ANR	559171	Identifier	array_init		558123	0					
ANR	559172	ArgumentList	arr		558123	1					
ANR	559173	Argument	arr		558123	0					
ANR	559174	Identifier	arr		558123	0					
ANR	559175	ExpressionStatement	jp -> the_zstack [ jp -> top ] = arr	642:20:21235:21264	558123	3	True				
ANR	559176	AssignmentExpression	jp -> the_zstack [ jp -> top ] = arr		558123	0		=			
ANR	559177	ArrayIndexing	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	559178	PtrMemberAccess	jp -> the_zstack		558123	0					
ANR	559179	Identifier	jp		558123	0					
ANR	559180	Identifier	the_zstack		558123	1					
ANR	559181	PtrMemberAccess	jp -> top		558123	1					
ANR	559182	Identifier	jp		558123	0					
ANR	559183	Identifier	top		558123	1					
ANR	559184	Identifier	arr		558123	1					
ANR	559185	IfStatement	if ( jp -> top > 1 )		558123	4					
ANR	559186	Condition	jp -> top > 1	644:24:21291:21301	558123	0	True				
ANR	559187	RelationalExpression	jp -> top > 1		558123	0		>			
ANR	559188	PtrMemberAccess	jp -> top		558123	0					
ANR	559189	Identifier	jp		558123	0					
ANR	559190	Identifier	top		558123	1					
ANR	559191	PrimaryExpression	1		558123	1					
ANR	559192	CompoundStatement		205:37:6711:6711	558123	1					
ANR	559193	Statement	attach_zval	645:24:21330:21340	558123	0	True				
ANR	559194	Statement	(	645:35:21341:21341	558123	1	True				
ANR	559195	Statement	jp	645:36:21342:21343	558123	2	True				
ANR	559196	Statement	","	645:38:21344:21344	558123	3	True				
ANR	559197	Statement	jp	645:40:21346:21347	558123	4	True				
ANR	559198	Statement	->	645:42:21348:21349	558123	5	True				
ANR	559199	Statement	top	645:44:21350:21352	558123	6	True				
ANR	559200	Statement	-	645:48:21354:21354	558123	7	True				
ANR	559201	Statement	1	645:50:21356:21356	558123	8	True				
ANR	559202	Statement	","	645:51:21357:21357	558123	9	True				
ANR	559203	Statement	jp	645:53:21359:21360	558123	10	True				
ANR	559204	Statement	->	645:55:21361:21362	558123	11	True				
ANR	559205	Statement	top	645:57:21363:21365	558123	12	True				
ANR	559206	Statement	","	645:60:21366:21366	558123	13	True				
ANR	559207	Statement	&	645:62:21368:21368	558123	14	True				
ANR	559208	Statement	key	645:63:21369:21371	558123	15	True				
ANR	559209	Statement	","	645:66:21372:21372	558123	16	True				
ANR	559210	Statement	assoc	645:68:21374:21378	558123	17	True				
ANR	559211	Statement	TSRMLS_CC	645:74:21380:21388	558123	18	True				
ANR	559212	Statement	)	645:83:21389:21389	558123	19	True				
ANR	559213	ExpressionStatement		645:84:21390:21390	558123	20	True				
ANR	559214	ExpressionStatement	JSON_RESET_TYPE ( )	648:20:21435:21452	558123	5	True				
ANR	559215	CallExpression	JSON_RESET_TYPE ( )		558123	0					
ANR	559216	Callee	JSON_RESET_TYPE		558123	0					
ANR	559217	Identifier	JSON_RESET_TYPE		558123	0					
ANR	559218	ArgumentList			558123	1					
ANR	559219	BreakStatement	break ;	651:16:21489:21494	558123	31	True				
ANR	559220	Statement	case	654:12:21517:21520	558123	32	True				
ANR	559221	Statement	-	654:17:21522:21522	558123	33	True				
ANR	559222	Label	4 :	654:18:21523:21524	558123	34	True				
ANR	559223	SwitchStatement	switch ( jp -> stack [ jp -> top ] )		558123	35					
ANR	559224	Condition	jp -> stack [ jp -> top ]	655:24:21550:21567	558123	0	True				
ANR	559225	ArrayIndexing	jp -> stack [ jp -> top ]		558123	0					
ANR	559226	PtrMemberAccess	jp -> stack		558123	0					
ANR	559227	Identifier	jp		558123	0					
ANR	559228	Identifier	stack		558123	1					
ANR	559229	PtrMemberAccess	jp -> top		558123	1					
ANR	559230	Identifier	jp		558123	0					
ANR	559231	Identifier	top		558123	1					
ANR	559232	CompoundStatement		216:44:6977:6977	558123	1					
ANR	559233	Label	case MODE_KEY :	656:16:21588:21601	558123	0	True				
ANR	559234	Identifier	MODE_KEY		558123	0					
ANR	559235	ExpressionStatement	jp -> state = CO	657:20:21623:21637	558123	1	True				
ANR	559236	AssignmentExpression	jp -> state = CO		558123	0		=			
ANR	559237	PtrMemberAccess	jp -> state		558123	0					
ANR	559238	Identifier	jp		558123	0					
ANR	559239	Identifier	state		558123	1					
ANR	559240	Identifier	CO		558123	1					
ANR	559241	ExpressionStatement	smart_str_0 ( & buf )	658:20:21659:21676	558123	2	True				
ANR	559242	CallExpression	smart_str_0 ( & buf )		558123	0					
ANR	559243	Callee	smart_str_0		558123	0					
ANR	559244	Identifier	smart_str_0		558123	0					
ANR	559245	ArgumentList	& buf		558123	1					
ANR	559246	Argument	& buf		558123	0					
ANR	559247	UnaryOperationExpression	& buf		558123	0					
ANR	559248	UnaryOperator	&		558123	0					
ANR	559249	Identifier	buf		558123	1					
ANR	559250	ExpressionStatement	"SWAP_BUFFERS ( buf , key )"	659:20:21698:21720	558123	3	True				
ANR	559251	CallExpression	"SWAP_BUFFERS ( buf , key )"		558123	0					
ANR	559252	Callee	SWAP_BUFFERS		558123	0					
ANR	559253	Identifier	SWAP_BUFFERS		558123	0					
ANR	559254	ArgumentList	buf		558123	1					
ANR	559255	Argument	buf		558123	0					
ANR	559256	Identifier	buf		558123	0					
ANR	559257	Argument	key		558123	1					
ANR	559258	Identifier	key		558123	0					
ANR	559259	ExpressionStatement	JSON_RESET_TYPE ( )	660:20:21742:21759	558123	4	True				
ANR	559260	CallExpression	JSON_RESET_TYPE ( )		558123	0					
ANR	559261	Callee	JSON_RESET_TYPE		558123	0					
ANR	559262	Identifier	JSON_RESET_TYPE		558123	0					
ANR	559263	ArgumentList			558123	1					
ANR	559264	BreakStatement	break ;	661:20:21781:21786	558123	5	True				
ANR	559265	Label	case MODE_ARRAY :	662:16:21804:21819	558123	6	True				
ANR	559266	Identifier	MODE_ARRAY		558123	0					
ANR	559267	Label	case MODE_OBJECT :	663:16:21837:21853	558123	7	True				
ANR	559268	Identifier	MODE_OBJECT		558123	0					
ANR	559269	ExpressionStatement	jp -> state = OK	664:20:21875:21889	558123	8	True				
ANR	559270	AssignmentExpression	jp -> state = OK		558123	0		=			
ANR	559271	PtrMemberAccess	jp -> state		558123	0					
ANR	559272	Identifier	jp		558123	0					
ANR	559273	Identifier	state		558123	1					
ANR	559274	Identifier	OK		558123	1					
ANR	559275	BreakStatement	break ;	665:20:21911:21916	558123	9	True				
ANR	559276	Label	case MODE_DONE :	666:4:21922:21936	558123	10	True				
ANR	559277	Identifier	MODE_DONE		558123	0					
ANR	559278	IfStatement	if ( type == IS_STRING )		558123	11					
ANR	559279	Condition	type == IS_STRING	667:9:21947:21963	558123	0	True				
ANR	559280	EqualityExpression	type == IS_STRING		558123	0		==			
ANR	559281	Identifier	type		558123	0					
ANR	559282	Identifier	IS_STRING		558123	1					
ANR	559283	CompoundStatement		228:28:7373:7373	558123	1					
ANR	559284	ExpressionStatement	smart_str_0 ( & buf )	668:6:21974:21991	558123	0	True				
ANR	559285	CallExpression	smart_str_0 ( & buf )		558123	0					
ANR	559286	Callee	smart_str_0		558123	0					
ANR	559287	Identifier	smart_str_0		558123	0					
ANR	559288	ArgumentList	& buf		558123	1					
ANR	559289	Argument	& buf		558123	0					
ANR	559290	UnaryOperationExpression	& buf		558123	0					
ANR	559291	UnaryOperator	&		558123	0					
ANR	559292	Identifier	buf		558123	1					
ANR	559293	ExpressionStatement	"ZVAL_STRINGL ( z , buf . c , buf . len , 1 )"	669:6:21999:22033	558123	1	True				
ANR	559294	CallExpression	"ZVAL_STRINGL ( z , buf . c , buf . len , 1 )"		558123	0					
ANR	559295	Callee	ZVAL_STRINGL		558123	0					
ANR	559296	Identifier	ZVAL_STRINGL		558123	0					
ANR	559297	ArgumentList	z		558123	1					
ANR	559298	Argument	z		558123	0					
ANR	559299	Identifier	z		558123	0					
ANR	559300	Argument	buf . c		558123	1					
ANR	559301	MemberAccess	buf . c		558123	0					
ANR	559302	Identifier	buf		558123	0					
ANR	559303	Identifier	c		558123	1					
ANR	559304	Argument	buf . len		558123	2					
ANR	559305	MemberAccess	buf . len		558123	0					
ANR	559306	Identifier	buf		558123	0					
ANR	559307	Identifier	len		558123	1					
ANR	559308	Argument	1		558123	3					
ANR	559309	PrimaryExpression	1		558123	0					
ANR	559310	ExpressionStatement	jp -> state = OK	670:6:22041:22055	558123	2	True				
ANR	559311	AssignmentExpression	jp -> state = OK		558123	0		=			
ANR	559312	PtrMemberAccess	jp -> state		558123	0					
ANR	559313	Identifier	jp		558123	0					
ANR	559314	Identifier	state		558123	1					
ANR	559315	Identifier	OK		558123	1					
ANR	559316	BreakStatement	break ;	671:6:22063:22068	558123	3	True				
ANR	559317	Label	default :	674:16:22134:22141	558123	12	True				
ANR	559318	Identifier	default		558123	0					
ANR	559319	ExpressionStatement	FREE_BUFFERS ( )	675:20:22163:22177	558123	13	True				
ANR	559320	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	559321	Callee	FREE_BUFFERS		558123	0					
ANR	559322	Identifier	FREE_BUFFERS		558123	0					
ANR	559323	ArgumentList			558123	1					
ANR	559324	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_SYNTAX	676:20:22199:22237	558123	14	True				
ANR	559325	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_SYNTAX		558123	0		=			
ANR	559326	PtrMemberAccess	jp -> error_code		558123	0					
ANR	559327	Identifier	jp		558123	0					
ANR	559328	Identifier	error_code		558123	1					
ANR	559329	Identifier	PHP_JSON_ERROR_SYNTAX		558123	1					
ANR	559330	ReturnStatement	return false ;	677:20:22259:22271	558123	15	True				
ANR	559331	Identifier	false		558123	0					
ANR	559332	BreakStatement	break ;	679:16:22307:22312	558123	36	True				
ANR	559333	Statement	case	681:12:22334:22337	558123	37	True				
ANR	559334	Statement	-	681:17:22339:22339	558123	38	True				
ANR	559335	Label	3 :	681:18:22340:22341	558123	39	True				
ANR	559336	CompoundStatement		244:16:7780:7790	558123	40					
ANR	559337	IdentifierDeclStatement	zval * mval ;	683:16:22373:22383	558123	0	True				
ANR	559338	IdentifierDecl	* mval		558123	0					
ANR	559339	IdentifierDeclType	zval *		558123	0					
ANR	559340	Identifier	mval		558123	1					
ANR	559341	IfStatement	if ( type != - 1 && ( jp -> stack [ jp -> top ] == MODE_OBJECT || jp -> stack [ jp -> top ] == MODE_ARRAY ) )		558123	1					
ANR	559342	Condition	type != - 1 && ( jp -> stack [ jp -> top ] == MODE_OBJECT || jp -> stack [ jp -> top ] == MODE_ARRAY )	685:20:22406:22531	558123	0	True				
ANR	559343	AndExpression	type != - 1 && ( jp -> stack [ jp -> top ] == MODE_OBJECT || jp -> stack [ jp -> top ] == MODE_ARRAY )		558123	0		&&			
ANR	559344	EqualityExpression	type != - 1		558123	0		!=			
ANR	559345	Identifier	type		558123	0					
ANR	559346	UnaryOperationExpression	- 1		558123	1					
ANR	559347	UnaryOperator	-		558123	0					
ANR	559348	PrimaryExpression	1		558123	1					
ANR	559349	OrExpression	jp -> stack [ jp -> top ] == MODE_OBJECT || jp -> stack [ jp -> top ] == MODE_ARRAY		558123	1		||			
ANR	559350	EqualityExpression	jp -> stack [ jp -> top ] == MODE_OBJECT		558123	0		==			
ANR	559351	ArrayIndexing	jp -> stack [ jp -> top ]		558123	0					
ANR	559352	PtrMemberAccess	jp -> stack		558123	0					
ANR	559353	Identifier	jp		558123	0					
ANR	559354	Identifier	stack		558123	1					
ANR	559355	PtrMemberAccess	jp -> top		558123	1					
ANR	559356	Identifier	jp		558123	0					
ANR	559357	Identifier	top		558123	1					
ANR	559358	Identifier	MODE_OBJECT		558123	1					
ANR	559359	EqualityExpression	jp -> stack [ jp -> top ] == MODE_ARRAY		558123	1		==			
ANR	559360	ArrayIndexing	jp -> stack [ jp -> top ]		558123	0					
ANR	559361	PtrMemberAccess	jp -> stack		558123	0					
ANR	559362	Identifier	jp		558123	0					
ANR	559363	Identifier	stack		558123	1					
ANR	559364	PtrMemberAccess	jp -> top		558123	1					
ANR	559365	Identifier	jp		558123	0					
ANR	559366	Identifier	top		558123	1					
ANR	559367	Identifier	MODE_ARRAY		558123	1					
ANR	559368	CompoundStatement		249:16:7957:7957	558123	1					
ANR	559369	ExpressionStatement	smart_str_0 ( & buf )	689:20:22572:22589	558123	0	True				
ANR	559370	CallExpression	smart_str_0 ( & buf )		558123	0					
ANR	559371	Callee	smart_str_0		558123	0					
ANR	559372	Identifier	smart_str_0		558123	0					
ANR	559373	ArgumentList	& buf		558123	1					
ANR	559374	Argument	& buf		558123	0					
ANR	559375	UnaryOperationExpression	& buf		558123	0					
ANR	559376	UnaryOperator	&		558123	0					
ANR	559377	Identifier	buf		558123	1					
ANR	559378	ExpressionStatement	"json_create_zval ( & mval , & buf , type , options )"	690:20:22611:22655	558123	1	True				
ANR	559379	CallExpression	"json_create_zval ( & mval , & buf , type , options )"		558123	0					
ANR	559380	Callee	json_create_zval		558123	0					
ANR	559381	Identifier	json_create_zval		558123	0					
ANR	559382	ArgumentList	& mval		558123	1					
ANR	559383	Argument	& mval		558123	0					
ANR	559384	UnaryOperationExpression	& mval		558123	0					
ANR	559385	UnaryOperator	&		558123	0					
ANR	559386	Identifier	mval		558123	1					
ANR	559387	Argument	& buf		558123	1					
ANR	559388	UnaryOperationExpression	& buf		558123	0					
ANR	559389	UnaryOperator	&		558123	0					
ANR	559390	Identifier	buf		558123	1					
ANR	559391	Argument	type		558123	2					
ANR	559392	Identifier	type		558123	0					
ANR	559393	Argument	options		558123	3					
ANR	559394	Identifier	options		558123	0					
ANR	559395	SwitchStatement	switch ( jp -> stack [ jp -> top ] )		558123	2					
ANR	559396	Condition	jp -> stack [ jp -> top ]	693:24:22700:22717	558123	0	True				
ANR	559397	ArrayIndexing	jp -> stack [ jp -> top ]		558123	0					
ANR	559398	PtrMemberAccess	jp -> stack		558123	0					
ANR	559399	Identifier	jp		558123	0					
ANR	559400	Identifier	stack		558123	1					
ANR	559401	PtrMemberAccess	jp -> top		558123	1					
ANR	559402	Identifier	jp		558123	0					
ANR	559403	Identifier	top		558123	1					
ANR	559404	CompoundStatement		254:44:8127:8127	558123	1					
ANR	559405	Label	case MODE_OBJECT :	694:20:22742:22758	558123	0	True				
ANR	559406	Identifier	MODE_OBJECT		558123	0					
ANR	559407	IfStatement	"if ( pop ( jp , MODE_OBJECT ) && push ( jp , MODE_KEY ) )"		558123	1					
ANR	559408	Condition	"pop ( jp , MODE_OBJECT ) && push ( jp , MODE_KEY )"	695:28:22788:22829	558123	0	True				
ANR	559409	AndExpression	"pop ( jp , MODE_OBJECT ) && push ( jp , MODE_KEY )"		558123	0		&&			
ANR	559410	CallExpression	"pop ( jp , MODE_OBJECT )"		558123	0					
ANR	559411	Callee	pop		558123	0					
ANR	559412	Identifier	pop		558123	0					
ANR	559413	ArgumentList	jp		558123	1					
ANR	559414	Argument	jp		558123	0					
ANR	559415	Identifier	jp		558123	0					
ANR	559416	Argument	MODE_OBJECT		558123	1					
ANR	559417	Identifier	MODE_OBJECT		558123	0					
ANR	559418	CallExpression	"push ( jp , MODE_KEY )"		558123	1					
ANR	559419	Callee	push		558123	0					
ANR	559420	Identifier	push		558123	0					
ANR	559421	ArgumentList	jp		558123	1					
ANR	559422	Argument	jp		558123	0					
ANR	559423	Identifier	jp		558123	0					
ANR	559424	Argument	MODE_KEY		558123	1					
ANR	559425	Identifier	MODE_KEY		558123	0					
ANR	559426	CompoundStatement		256:72:8239:8239	558123	1					
ANR	559427	IfStatement	if ( type != - 1 )		558123	0					
ANR	559428	Condition	type != - 1	696:32:22866:22875	558123	0	True				
ANR	559429	EqualityExpression	type != - 1		558123	0		!=			
ANR	559430	Identifier	type		558123	0					
ANR	559431	UnaryOperationExpression	- 1		558123	1					
ANR	559432	UnaryOperator	-		558123	0					
ANR	559433	PrimaryExpression	1		558123	1					
ANR	559434	CompoundStatement		257:44:8285:8285	558123	1					
ANR	559435	IfStatement	if ( ! assoc )		558123	0					
ANR	559436	Condition	! assoc	697:36:22916:22921	558123	0	True				
ANR	559437	UnaryOperationExpression	! assoc		558123	0					
ANR	559438	UnaryOperator	!		558123	0					
ANR	559439	Identifier	assoc		558123	1					
ANR	559440	CompoundStatement		258:44:8331:8331	558123	1					
ANR	559441	Statement	add_property_zval_ex	698:36:22962:22981	558123	0	True				
ANR	559442	Statement	(	698:56:22982:22982	558123	1	True				
ANR	559443	Statement	jp	698:57:22983:22984	558123	2	True				
ANR	559444	Statement	->	698:59:22985:22986	558123	3	True				
ANR	559445	Statement	the_zstack	698:61:22987:22996	558123	4	True				
ANR	559446	Statement	[	698:71:22997:22997	558123	5	True				
ANR	559447	Statement	jp	698:72:22998:22999	558123	6	True				
ANR	559448	Statement	->	698:74:23000:23001	558123	7	True				
ANR	559449	Statement	top	698:76:23002:23004	558123	8	True				
ANR	559450	Statement	]	698:79:23005:23005	558123	9	True				
ANR	559451	Statement	","	698:80:23006:23006	558123	10	True				
ANR	559452	Statement	(	698:82:23008:23008	558123	11	True				
ANR	559453	Statement	key	698:83:23009:23011	558123	12	True				
ANR	559454	Statement	.	698:86:23012:23012	558123	13	True				
ANR	559455	Statement	len	698:87:23013:23015	558123	14	True				
ANR	559456	Statement	?	698:91:23017:23017	558123	15	True				
ANR	559457	Statement	key	698:93:23019:23021	558123	16	True				
ANR	559458	Statement	.	698:96:23022:23022	558123	17	True				
ANR	559459	Label	c :	698:97:23023:23025	558123	18	True				
ANR	559460	Identifier	c		558123	0					
ANR	559461	Statement	"""_empty_"""	698:101:23027:23035	558123	19	True				
ANR	559462	Statement	)	698:110:23036:23036	558123	20	True				
ANR	559463	Statement	","	698:111:23037:23037	558123	21	True				
ANR	559464	Statement	(	698:113:23039:23039	558123	22	True				
ANR	559465	Statement	key	698:114:23040:23042	558123	23	True				
ANR	559466	Statement	.	698:117:23043:23043	558123	24	True				
ANR	559467	Statement	len	698:118:23044:23046	558123	25	True				
ANR	559468	Statement	?	698:122:23048:23048	558123	26	True				
ANR	559469	Statement	(	698:124:23050:23050	558123	27	True				
ANR	559470	Statement	key	698:125:23051:23053	558123	28	True				
ANR	559471	Statement	.	698:128:23054:23054	558123	29	True				
ANR	559472	Statement	len	698:129:23055:23057	558123	30	True				
ANR	559473	Statement	+	698:133:23059:23059	558123	31	True				
ANR	559474	Statement	1	698:135:23061:23061	558123	32	True				
ANR	559475	Statement	)	698:136:23062:23062	558123	33	True				
ANR	559476	Statement	:	698:138:23064:23064	558123	34	True				
ANR	559477	Statement	sizeof	698:140:23066:23071	558123	35	True				
ANR	559478	Statement	(	698:146:23072:23072	558123	36	True				
ANR	559479	Statement	"""_empty_"""	698:147:23073:23081	558123	37	True				
ANR	559480	Statement	)	698:156:23082:23082	558123	38	True				
ANR	559481	Statement	)	698:157:23083:23083	558123	39	True				
ANR	559482	Statement	","	698:158:23084:23084	558123	40	True				
ANR	559483	Statement	mval	698:160:23086:23089	558123	41	True				
ANR	559484	Statement	TSRMLS_CC	698:165:23091:23099	558123	42	True				
ANR	559485	Statement	)	698:174:23100:23100	558123	43	True				
ANR	559486	ExpressionStatement		698:175:23101:23101	558123	44	True				
ANR	559487	ExpressionStatement	Z_DELREF_P ( mval )	699:36:23139:23155	558123	45	True				
ANR	559488	CallExpression	Z_DELREF_P ( mval )		558123	0					
ANR	559489	Callee	Z_DELREF_P		558123	0					
ANR	559490	Identifier	Z_DELREF_P		558123	0					
ANR	559491	ArgumentList	mval		558123	1					
ANR	559492	Argument	mval		558123	0					
ANR	559493	Identifier	mval		558123	0					
ANR	559494	ElseStatement	else		558123	0					
ANR	559495	CompoundStatement		261:39:8603:8603	558123	0					
ANR	559496	ExpressionStatement	"add_assoc_zval_ex ( jp -> the_zstack [ jp -> top ] , ( key . len ? key . c : """" ) , ( key . len ? ( key . len + 1 ) : sizeof ( """" ) ) , mval )"	701:36:23234:23346	558123	0	True				
ANR	559497	CallExpression	"add_assoc_zval_ex ( jp -> the_zstack [ jp -> top ] , ( key . len ? key . c : """" ) , ( key . len ? ( key . len + 1 ) : sizeof ( """" ) ) , mval )"		558123	0					
ANR	559498	Callee	add_assoc_zval_ex		558123	0					
ANR	559499	Identifier	add_assoc_zval_ex		558123	0					
ANR	559500	ArgumentList	jp -> the_zstack [ jp -> top ]		558123	1					
ANR	559501	Argument	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	559502	ArrayIndexing	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	559503	PtrMemberAccess	jp -> the_zstack		558123	0					
ANR	559504	Identifier	jp		558123	0					
ANR	559505	Identifier	the_zstack		558123	1					
ANR	559506	PtrMemberAccess	jp -> top		558123	1					
ANR	559507	Identifier	jp		558123	0					
ANR	559508	Identifier	top		558123	1					
ANR	559509	Argument	"key . len ? key . c : """""		558123	1					
ANR	559510	ConditionalExpression	"key . len ? key . c : """""		558123	0					
ANR	559511	Condition	key . len		558123	0					
ANR	559512	MemberAccess	key . len		558123	0					
ANR	559513	Identifier	key		558123	0					
ANR	559514	Identifier	len		558123	1					
ANR	559515	MemberAccess	key . c		558123	1					
ANR	559516	Identifier	key		558123	0					
ANR	559517	Identifier	c		558123	1					
ANR	559518	PrimaryExpression	""""""		558123	2					
ANR	559519	Argument	"key . len ? ( key . len + 1 ) : sizeof ( """" )"		558123	2					
ANR	559520	ConditionalExpression	"key . len ? ( key . len + 1 ) : sizeof ( """" )"		558123	0					
ANR	559521	Condition	key . len		558123	0					
ANR	559522	MemberAccess	key . len		558123	0					
ANR	559523	Identifier	key		558123	0					
ANR	559524	Identifier	len		558123	1					
ANR	559525	AdditiveExpression	key . len + 1		558123	1		+			
ANR	559526	MemberAccess	key . len		558123	0					
ANR	559527	Identifier	key		558123	0					
ANR	559528	Identifier	len		558123	1					
ANR	559529	PrimaryExpression	1		558123	1					
ANR	559530	SizeofExpression	"sizeof ( """" )"		558123	2					
ANR	559531	Sizeof	sizeof		558123	0					
ANR	559532	PrimaryExpression	""""""		558123	1					
ANR	559533	Argument	mval		558123	3					
ANR	559534	Identifier	mval		558123	0					
ANR	559535	ExpressionStatement	key . len = 0	703:32:23414:23425	558123	1	True				
ANR	559536	AssignmentExpression	key . len = 0		558123	0		=			
ANR	559537	MemberAccess	key . len		558123	0					
ANR	559538	Identifier	key		558123	0					
ANR	559539	Identifier	len		558123	1					
ANR	559540	PrimaryExpression	0		558123	1					
ANR	559541	ExpressionStatement	jp -> state = KE	705:28:23485:23499	558123	1	True				
ANR	559542	AssignmentExpression	jp -> state = KE		558123	0		=			
ANR	559543	PtrMemberAccess	jp -> state		558123	0					
ANR	559544	Identifier	jp		558123	0					
ANR	559545	Identifier	state		558123	1					
ANR	559546	Identifier	KE		558123	1					
ANR	559547	BreakStatement	break ;	707:24:23551:23556	558123	2	True				
ANR	559548	Label	case MODE_ARRAY :	708:20:23578:23593	558123	3	True				
ANR	559549	Identifier	MODE_ARRAY		558123	0					
ANR	559550	IfStatement	if ( type != - 1 )		558123	4					
ANR	559551	Condition	type != - 1	709:28:23623:23632	558123	0	True				
ANR	559552	EqualityExpression	type != - 1		558123	0		!=			
ANR	559553	Identifier	type		558123	0					
ANR	559554	UnaryOperationExpression	- 1		558123	1					
ANR	559555	UnaryOperator	-		558123	0					
ANR	559556	PrimaryExpression	1		558123	1					
ANR	559557	CompoundStatement		270:40:9042:9042	558123	1					
ANR	559558	ExpressionStatement	"add_next_index_zval ( jp -> the_zstack [ jp -> top ] , mval )"	710:28:23665:23715	558123	0	True				
ANR	559559	CallExpression	"add_next_index_zval ( jp -> the_zstack [ jp -> top ] , mval )"		558123	0					
ANR	559560	Callee	add_next_index_zval		558123	0					
ANR	559561	Identifier	add_next_index_zval		558123	0					
ANR	559562	ArgumentList	jp -> the_zstack [ jp -> top ]		558123	1					
ANR	559563	Argument	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	559564	ArrayIndexing	jp -> the_zstack [ jp -> top ]		558123	0					
ANR	559565	PtrMemberAccess	jp -> the_zstack		558123	0					
ANR	559566	Identifier	jp		558123	0					
ANR	559567	Identifier	the_zstack		558123	1					
ANR	559568	PtrMemberAccess	jp -> top		558123	1					
ANR	559569	Identifier	jp		558123	0					
ANR	559570	Identifier	top		558123	1					
ANR	559571	Argument	mval		558123	1					
ANR	559572	Identifier	mval		558123	0					
ANR	559573	ExpressionStatement	jp -> state = VA	712:24:23767:23781	558123	5	True				
ANR	559574	AssignmentExpression	jp -> state = VA		558123	0		=			
ANR	559575	PtrMemberAccess	jp -> state		558123	0					
ANR	559576	Identifier	jp		558123	0					
ANR	559577	Identifier	state		558123	1					
ANR	559578	Identifier	VA		558123	1					
ANR	559579	BreakStatement	break ;	713:24:23807:23812	558123	6	True				
ANR	559580	Label	default :	714:20:23834:23841	558123	7	True				
ANR	559581	Identifier	default		558123	0					
ANR	559582	ExpressionStatement	FREE_BUFFERS ( )	715:24:23867:23881	558123	8	True				
ANR	559583	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	559584	Callee	FREE_BUFFERS		558123	0					
ANR	559585	Identifier	FREE_BUFFERS		558123	0					
ANR	559586	ArgumentList			558123	1					
ANR	559587	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_SYNTAX	716:24:23907:23945	558123	9	True				
ANR	559588	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_SYNTAX		558123	0		=			
ANR	559589	PtrMemberAccess	jp -> error_code		558123	0					
ANR	559590	Identifier	jp		558123	0					
ANR	559591	Identifier	error_code		558123	1					
ANR	559592	Identifier	PHP_JSON_ERROR_SYNTAX		558123	1					
ANR	559593	ReturnStatement	return false ;	717:24:23971:23983	558123	10	True				
ANR	559594	Identifier	false		558123	0					
ANR	559595	ExpressionStatement	buf . len = 0	719:16:24019:24030	558123	3	True				
ANR	559596	AssignmentExpression	buf . len = 0		558123	0		=			
ANR	559597	MemberAccess	buf . len		558123	0					
ANR	559598	Identifier	buf		558123	0					
ANR	559599	Identifier	len		558123	1					
ANR	559600	PrimaryExpression	0		558123	1					
ANR	559601	ExpressionStatement	JSON_RESET_TYPE ( )	720:16:24048:24065	558123	4	True				
ANR	559602	CallExpression	JSON_RESET_TYPE ( )		558123	0					
ANR	559603	Callee	JSON_RESET_TYPE		558123	0					
ANR	559604	Identifier	JSON_RESET_TYPE		558123	0					
ANR	559605	ArgumentList			558123	1					
ANR	559606	BreakStatement	break ;	722:12:24093:24098	558123	41	True				
ANR	559607	Statement	case	724:12:24120:24123	558123	42	True				
ANR	559608	Statement	-	724:17:24125:24125	558123	43	True				
ANR	559609	Label	2 :	724:18:24126:24127	558123	44	True				
ANR	559610	IfStatement	"if ( pop ( jp , MODE_KEY ) && push ( jp , MODE_OBJECT ) )"		558123	45					
ANR	559611	Condition	"pop ( jp , MODE_KEY ) && push ( jp , MODE_OBJECT )"	725:20:24149:24190	558123	0	True				
ANR	559612	AndExpression	"pop ( jp , MODE_KEY ) && push ( jp , MODE_OBJECT )"		558123	0		&&			
ANR	559613	CallExpression	"pop ( jp , MODE_KEY )"		558123	0					
ANR	559614	Callee	pop		558123	0					
ANR	559615	Identifier	pop		558123	0					
ANR	559616	ArgumentList	jp		558123	1					
ANR	559617	Argument	jp		558123	0					
ANR	559618	Identifier	jp		558123	0					
ANR	559619	Argument	MODE_KEY		558123	1					
ANR	559620	Identifier	MODE_KEY		558123	0					
ANR	559621	CallExpression	"push ( jp , MODE_OBJECT )"		558123	1					
ANR	559622	Callee	push		558123	0					
ANR	559623	Identifier	push		558123	0					
ANR	559624	ArgumentList	jp		558123	1					
ANR	559625	Argument	jp		558123	0					
ANR	559626	Identifier	jp		558123	0					
ANR	559627	Argument	MODE_OBJECT		558123	1					
ANR	559628	Identifier	MODE_OBJECT		558123	0					
ANR	559629	CompoundStatement		286:64:9600:9600	558123	1					
ANR	559630	ExpressionStatement	jp -> state = VA	726:20:24215:24229	558123	0	True				
ANR	559631	AssignmentExpression	jp -> state = VA		558123	0		=			
ANR	559632	PtrMemberAccess	jp -> state		558123	0					
ANR	559633	Identifier	jp		558123	0					
ANR	559634	Identifier	state		558123	1					
ANR	559635	Identifier	VA		558123	1					
ANR	559636	BreakStatement	break ;	727:20:24251:24256	558123	1	True				
ANR	559637	Label	default :	732:12:24311:24318	558123	46	True				
ANR	559638	Identifier	default		558123	0					
ANR	559639	CompoundStatement		294:16:9743:9743	558123	47					
ANR	559640	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_SYNTAX	734:5:24343:24381	558123	0	True				
ANR	559641	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_SYNTAX		558123	0		=			
ANR	559642	PtrMemberAccess	jp -> error_code		558123	0					
ANR	559643	Identifier	jp		558123	0					
ANR	559644	Identifier	error_code		558123	1					
ANR	559645	Identifier	PHP_JSON_ERROR_SYNTAX		558123	1					
ANR	559646	ExpressionStatement	FREE_BUFFERS ( )	735:20:24403:24417	558123	1	True				
ANR	559647	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	559648	Callee	FREE_BUFFERS		558123	0					
ANR	559649	Identifier	FREE_BUFFERS		558123	0					
ANR	559650	ArgumentList			558123	1					
ANR	559651	ReturnStatement	return false ;	736:20:24439:24451	558123	2	True				
ANR	559652	Identifier	false		558123	0					
ANR	559653	ExpressionStatement	FREE_BUFFERS ( )	742:4:24506:24520	558123	11	True				
ANR	559654	CallExpression	FREE_BUFFERS ( )		558123	0					
ANR	559655	Callee	FREE_BUFFERS		558123	0					
ANR	559656	Identifier	FREE_BUFFERS		558123	0					
ANR	559657	ArgumentList			558123	1					
ANR	559658	IfStatement	"if ( jp -> state == OK && pop ( jp , MODE_DONE ) )"		558123	12					
ANR	559659	Condition	"jp -> state == OK && pop ( jp , MODE_DONE )"	743:5:24527:24563	558123	0	True				
ANR	559660	AndExpression	"jp -> state == OK && pop ( jp , MODE_DONE )"		558123	0		&&			
ANR	559661	EqualityExpression	jp -> state == OK		558123	0		==			
ANR	559662	PtrMemberAccess	jp -> state		558123	0					
ANR	559663	Identifier	jp		558123	0					
ANR	559664	Identifier	state		558123	1					
ANR	559665	Identifier	OK		558123	1					
ANR	559666	CallExpression	"pop ( jp , MODE_DONE )"		558123	1					
ANR	559667	Callee	pop		558123	0					
ANR	559668	Identifier	pop		558123	0					
ANR	559669	ArgumentList	jp		558123	1					
ANR	559670	Argument	jp		558123	0					
ANR	559671	Identifier	jp		558123	0					
ANR	559672	Argument	MODE_DONE		558123	1					
ANR	559673	Identifier	MODE_DONE		558123	0					
ANR	559674	CompoundStatement		304:44:9973:9973	558123	1					
ANR	559675	ReturnStatement	return true ;	744:2:24570:24581	558123	0	True				
ANR	559676	Identifier	true		558123	0					
ANR	559677	ExpressionStatement	jp -> error_code = PHP_JSON_ERROR_SYNTAX	747:1:24588:24626	558123	13	True				
ANR	559678	AssignmentExpression	jp -> error_code = PHP_JSON_ERROR_SYNTAX		558123	0		=			
ANR	559679	PtrMemberAccess	jp -> error_code		558123	0					
ANR	559680	Identifier	jp		558123	0					
ANR	559681	Identifier	error_code		558123	1					
ANR	559682	Identifier	PHP_JSON_ERROR_SYNTAX		558123	1					
ANR	559683	ReturnStatement	return false ;	748:1:24629:24641	558123	14	True				
ANR	559684	Identifier	false		558123	0					
ANR	559685	ReturnType	int		558123	1					
ANR	559686	Identifier	parse_JSON_ex		558123	2					
ANR	559687	ParameterList	"JSON_parser jp , zval * z , unsigned short utf16_json [ ] , int length , int options TSRMLS_DC"		558123	3					
ANR	559688	Parameter	JSON_parser jp	439:14:14503:14516	558123	0	True				
ANR	559689	ParameterType	JSON_parser		558123	0					
ANR	559690	Identifier	jp		558123	1					
ANR	559691	Parameter	zval * z	439:30:14519:14525	558123	1	True				
ANR	559692	ParameterType	zval *		558123	0					
ANR	559693	Identifier	z		558123	1					
ANR	559694	Parameter	unsigned short utf16_json [ ]	439:39:14528:14554	558123	2	True				
ANR	559695	ParameterType	unsigned short [ ]		558123	0					
ANR	559696	Identifier	utf16_json		558123	1					
ANR	559697	Parameter	int length	439:68:14557:14566	558123	3	True				
ANR	559698	ParameterType	int		558123	0					
ANR	559699	Identifier	length		558123	1					
ANR	559700	Parameter	int options TSRMLS_DC	439:80:14569:14589	558123	4	True				
ANR	559701	ParameterType	int options		558123	0					
ANR	559702	Identifier	TSRMLS_DC		558123	1					
ANR	559703	CFGEntryNode	ENTRY		558123		True				
ANR	559704	CFGExitNode	EXIT		558123		True				
ANR	559705	Symbol	& mval		558123						
ANR	559706	Symbol	state_transition_table		558123						
ANR	559707	Symbol	jp -> the_zstack		558123						
ANR	559708	Symbol	* jp -> the_zstack		558123						
ANR	559709	Symbol	* next_class		558123						
ANR	559710	Symbol	type		558123						
ANR	559711	Symbol	E1		558123						
ANR	559712	Symbol	TSRMLS_DC		558123						
ANR	559713	Symbol	PHP_JSON_OBJECT_AS_ARRAY		558123						
ANR	559714	Symbol	MODE_OBJECT		558123						
ANR	559715	Symbol	* the_index		558123						
ANR	559716	Symbol	* jp -> top		558123						
ANR	559717	Symbol	* jp -> state		558123						
ANR	559718	Symbol	* next_char		558123						
ANR	559719	Symbol	options		558123						
ANR	559720	Symbol	assoc		558123						
ANR	559721	Symbol	IS_STRING		558123						
ANR	559722	Symbol	C_QUOTE		558123						
ANR	559723	Symbol	next_class		558123						
ANR	559724	Symbol	C_ZERO		558123						
ANR	559725	Symbol	C_POINT		558123						
ANR	559726	Symbol	ascii_class		558123						
ANR	559727	Symbol	jp -> state		558123						
ANR	559728	Symbol	C_ETC		558123						
ANR	559729	Symbol	N3		558123						
ANR	559730	Symbol	next_char		558123						
ANR	559731	Symbol	mval		558123						
ANR	559732	Symbol	utf16		558123						
ANR	559733	Symbol	VA		558123						
ANR	559734	Symbol	jp -> stack		558123						
ANR	559735	Symbol	ES		558123						
ANR	559736	Symbol	F4		558123						
ANR	559737	Symbol	push		558123						
ANR	559738	Symbol	C_DIGIT		558123						
ANR	559739	Symbol	* * jp		558123						
ANR	559740	Symbol	AR		558123						
ANR	559741	Symbol	buf . c		558123						
ANR	559742	Symbol	true		558123						
ANR	559743	Symbol	PHP_JSON_ERROR_CTRL_CHAR		558123						
ANR	559744	Symbol	buf . len		558123						
ANR	559745	Symbol	* state_transition_table		558123						
ANR	559746	Symbol	* * state_transition_table		558123						
ANR	559747	Symbol	C_WHITE		558123						
ANR	559748	Symbol	jp		558123						
ANR	559749	Symbol	MODE_DONE		558123						
ANR	559750	Symbol	* ascii_class		558123						
ANR	559751	Symbol	next_state		558123						
ANR	559752	Symbol	pop		558123						
ANR	559753	Symbol	* * * jp		558123						
ANR	559754	Symbol	OB		558123						
ANR	559755	Symbol	IS_NULL		558123						
ANR	559756	Symbol	key . len		558123						
ANR	559757	Symbol	utf16_json		558123						
ANR	559758	Symbol	IS_LONG		558123						
ANR	559759	Symbol	* * jp -> state		558123						
ANR	559760	Symbol	KE		558123						
ANR	559761	Symbol	* utf16_json		558123						
ANR	559762	Symbol	OK		558123						
ANR	559763	Symbol	key		558123						
ANR	559764	Symbol	& buf		558123						
ANR	559765	Symbol	T3		558123						
ANR	559766	Symbol	__		558123						
ANR	559767	Symbol	arr		558123						
ANR	559768	Symbol	ST		558123						
ANR	559769	Symbol	jp -> top		558123						
ANR	559770	Symbol	length		558123						
ANR	559771	Symbol	false		558123						
ANR	559772	Symbol	MODE_KEY		558123						
ANR	559773	Symbol	CO		558123						
ANR	559774	Symbol	the_index		558123						
ANR	559775	Symbol	dehexchar		558123						
ANR	559776	Symbol	* jp		558123						
ANR	559777	Symbol	* jp -> stack		558123						
ANR	559778	Symbol	PHP_JSON_ERROR_SYNTAX		558123						
ANR	559779	Symbol	buf		558123						
ANR	559780	Symbol	obj		558123						
ANR	559781	Symbol	MODE_ARRAY		558123						
ANR	559782	Symbol	jp -> error_code		558123						
ANR	559783	Symbol	IS_DOUBLE		558123						
ANR	559784	Symbol	z		558123						
ANR	559785	Symbol	IS_BOOL		558123						
ANR	559786	Symbol	key . c		558123						
ANR	559787	Symbol	U2		558123						
ANR	559788	Symbol	U3		558123						
ANR	559789	Symbol	U4		558123						
