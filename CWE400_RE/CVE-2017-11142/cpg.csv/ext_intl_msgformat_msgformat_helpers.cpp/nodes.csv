command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	554704	File	data/converged/CVE-2017-11142_php-src/ext_intl_msgformat_msgformat_helpers.cpp								
ANR	554705	ClassDef	MessageFormatAdapter	56:0:1866:2149							
ANR	554706	DeclStmt									
ANR	554707	Decl							const Formattable :: Type	"const Formattable :: Type * ( const MessageFormat & m , int32_t & count )"	getArgTypeList
ANR	554708	DeclStmt									
ANR	554709	Decl							const MessagePattern	const MessagePattern ( MessageFormat * m )	getMessagePattern
ANR	554710	Function	MessageFormatAdapter :: getArgTypeList	65:0:2153:2330							
ANR	554711	FunctionDef	"MessageFormatAdapter :: getArgTypeList (const MessageFormat & m , int32_t & count)"		554710	0					
ANR	554712	CompoundStatement		67:53:2292:2330	554710	0					
ANR	554713	ReturnStatement	return m . getArgTypeList ( count ) ;	68:4:2298:2328	554710	0	True				
ANR	554714	CallExpression	m . getArgTypeList ( count )		554710	0					
ANR	554715	Callee	m . getArgTypeList		554710	0					
ANR	554716	MemberAccess	m . getArgTypeList		554710	0					
ANR	554717	Identifier	m		554710	0					
ANR	554718	Identifier	getArgTypeList		554710	1					
ANR	554719	ArgumentList	count		554710	1					
ANR	554720	Argument	count		554710	0					
ANR	554721	Identifier	count		554710	0					
ANR	554722	ReturnType	const Formattable :: Type *		554710	1					
ANR	554723	Identifier	MessageFormatAdapter :: getArgTypeList		554710	2					
ANR	554724	ParameterList	"const MessageFormat & m , int32_t & count"		554710	3					
ANR	554725	Parameter	const MessageFormat & m	66:37:2215:2236	554710	0	True				
ANR	554726	ParameterType	const MessageFormat &		554710	0					
ANR	554727	Identifier	m		554710	1					
ANR	554728	Parameter	int32_t & count	67:37:2276:2289	554710	1	True				
ANR	554729	ParameterType	int32_t &		554710	0					
ANR	554730	Identifier	count		554710	1					
ANR	554731	CFGEntryNode	ENTRY		554710		True				
ANR	554732	CFGExitNode	EXIT		554710		True				
ANR	554733	Symbol	m . getArgTypeList		554710						
ANR	554734	Symbol	count		554710						
ANR	554735	Symbol	m		554710						
ANR	554736	Function	MessageFormatAdapter :: getMessagePattern	72:0:2360:2467							
ANR	554737	FunctionDef	MessageFormatAdapter :: getMessagePattern (MessageFormat * m)		554736	0					
ANR	554738	CompoundStatement		73:58:2439:2467	554736	0					
ANR	554739	ReturnStatement	return m -> msgPattern ;	74:4:2445:2465	554736	0	True				
ANR	554740	PtrMemberAccess	m -> msgPattern		554736	0					
ANR	554741	Identifier	m		554736	0					
ANR	554742	Identifier	msgPattern		554736	1					
ANR	554743	ReturnType	const MessagePattern		554736	1					
ANR	554744	Identifier	MessageFormatAdapter :: getMessagePattern		554736	2					
ANR	554745	ParameterList	MessageFormat * m		554736	3					
ANR	554746	Parameter	MessageFormat * m	73:40:2421:2436	554736	0	True				
ANR	554747	ParameterType	MessageFormat *		554736	0					
ANR	554748	Identifier	m		554736	1					
ANR	554749	CFGEntryNode	ENTRY		554736		True				
ANR	554750	CFGExitNode	EXIT		554736		True				
ANR	554751	Symbol	* m		554736						
ANR	554752	Symbol	m -> msgPattern		554736						
ANR	554753	Symbol	m		554736						
ANR	554754	Function	umsg_format_arg_count	77:0:2476:2675							
ANR	554755	FunctionDef	umsg_format_arg_count (UMessageFormat * fmt)		554754	0					
ANR	554756	CompoundStatement		80:0:2552:2675	554754	0					
ANR	554757	IdentifierDeclStatement	int32_t fmt_count = 0 ;	81:1:2555:2576	554754	0	True				
ANR	554758	IdentifierDecl	fmt_count = 0		554754	0					
ANR	554759	IdentifierDeclType	int32_t		554754	0					
ANR	554760	Identifier	fmt_count		554754	1					
ANR	554761	AssignmentExpression	fmt_count = 0		554754	2		=			
ANR	554762	Identifier	fmt_count		554754	0					
ANR	554763	PrimaryExpression	0		554754	1					
ANR	554764	ExpressionStatement	"MessageFormatAdapter :: getArgTypeList ( * ( const MessageFormat * ) fmt , fmt_count )"	82:1:2579:2654	554754	1	True				
ANR	554765	CallExpression	"MessageFormatAdapter :: getArgTypeList ( * ( const MessageFormat * ) fmt , fmt_count )"		554754	0					
ANR	554766	Callee	MessageFormatAdapter :: getArgTypeList		554754	0					
ANR	554767	Identifier	MessageFormatAdapter :: getArgTypeList		554754	0					
ANR	554768	ArgumentList	* ( const MessageFormat * ) fmt		554754	1					
ANR	554769	Argument	* ( const MessageFormat * ) fmt		554754	0					
ANR	554770	UnaryOperationExpression	* ( const MessageFormat * ) fmt		554754	0					
ANR	554771	UnaryOperator	*		554754	0					
ANR	554772	CastExpression	( const MessageFormat * ) fmt		554754	1					
ANR	554773	CastTarget	const MessageFormat *		554754	0					
ANR	554774	Identifier	fmt		554754	1					
ANR	554775	Argument	fmt_count		554754	1					
ANR	554776	Identifier	fmt_count		554754	0					
ANR	554777	ReturnStatement	return fmt_count ;	83:1:2657:2673	554754	2	True				
ANR	554778	Identifier	fmt_count		554754	0					
ANR	554779	ReturnType	U_NAMESPACE_END U_CFUNC int32_t		554754	1					
ANR	554780	Identifier	umsg_format_arg_count		554754	2					
ANR	554781	ParameterList	UMessageFormat * fmt		554754	3					
ANR	554782	Parameter	UMessageFormat * fmt	79:38:2531:2549	554754	0	True				
ANR	554783	ParameterType	UMessageFormat *		554754	0					
ANR	554784	Identifier	fmt		554754	1					
ANR	554785	CFGEntryNode	ENTRY		554754		True				
ANR	554786	CFGExitNode	EXIT		554754		True				
ANR	554787	Symbol	* ( const MessageFormat * ) fmt		554754						
ANR	554788	Symbol	fmt_count		554754						
ANR	554789	Symbol	* fmt		554754						
ANR	554790	Symbol	fmt		554754						
ANR	554791	DeclStmt									
ANR	554792	Decl							HashTable	HashTable *	ret
ANR	554793	DeclStmt									
ANR	554794	Decl							int32_t	int32_t	parts_count
ANR	554795	DeclStmt									
ANR	554796	Decl							const Formattable :: Type	const Formattable :: Type *	types
ANR	554797	DeclStmt									
ANR	554798	Decl							int	int	i
ANR	554799	DeclStmt									
ANR	554800	Decl							const Formattable :: Type	const Formattable :: Type	t
ANR	554801	DeclStmt									
ANR	554802	Decl							HashTable	HashTable *	ret
ANR	554803	DeclStmt									
ANR	554804	Decl							int32_t	int32_t	parts_count
ANR	554805	DeclStmt									
ANR	554806	Decl							int32_t	int32_t	i
ANR	554807	DeclStmt									
ANR	554808	Decl							MessagePattern :: Part	MessagePattern :: Part	p
ANR	554809	DeclStmt									
ANR	554810	Decl							MessagePattern :: Part	MessagePattern :: Part	name_part
ANR	554811	DeclStmt									
ANR	554812	Decl							Formattable :: Type	Formattable :: Type	type
ANR	554813	Decl							Formattable :: Type	Formattable :: Type *	storedType
ANR	554814	DeclStmt									
ANR	554815	Decl							UnicodeString	UnicodeString	argName
ANR	554816	DeclStmt									
ANR	554817	Decl							Formattable :: Type	Formattable :: Type	bogusType
ANR	554818	DeclStmt									
ANR	554819	Decl							int32_t	int32_t	argNumber
ANR	554820	DeclStmt									
ANR	554821	Decl							Formattable :: Type	Formattable :: Type	bogusType
ANR	554822	DeclStmt									
ANR	554823	Decl							UMessagePatternArgType	UMessagePatternArgType	argType
ANR	554824	DeclStmt									
ANR	554825	Decl							MessagePattern :: Part	MessagePattern :: Part	type_part
ANR	554826	DeclStmt									
ANR	554827	Decl							UnicodeString	UnicodeString	typeString
ANR	554828	DeclStmt									
ANR	554829	Decl							MessagePattern :: Part	MessagePattern :: Part	style_part
ANR	554830	DeclStmt									
ANR	554831	Decl							UnicodeString	UnicodeString	styleString
ANR	554832	DeclStmt									
ANR	554833	Decl							MessageFormat	MessageFormat *	mf
ANR	554834	DeclStmt									
ANR	554835	Decl							const MessagePattern	const MessagePattern	mp
ANR	554836	DeclStmt									
ANR	554837	Decl							MessageFormat	MessageFormat *	mf
ANR	554838	DeclStmt									
ANR	554839	Decl							TimeZone	TimeZone *	used_tz
ANR	554840	DeclStmt									
ANR	554841	Decl							const Format	const Format * *	formats
ANR	554842	DeclStmt									
ANR	554843	Decl							int32_t	int32_t	count
ANR	554844	DeclStmt									
ANR	554845	Decl							int	int	i
ANR	554846	DeclStmt									
ANR	554847	Decl							DateFormat	DateFormat *	df
ANR	554848	DeclStmt									
ANR	554849	Decl							zval	zval	nullzv
ANR	554850	Decl							zval	zval *	zvptr
ANR	554851	DeclStmt									
ANR	554852	Decl							int	int	arg_count
ANR	554853	DeclStmt									
ANR	554854	Decl							std :: vector < Formattable >	std :: vector < Formattable >	fargs
ANR	554855	DeclStmt									
ANR	554856	Decl							std :: vector < UnicodeString >	std :: vector < UnicodeString >	farg_names
ANR	554857	DeclStmt									
ANR	554858	Decl							MessageFormat	MessageFormat *	mf
ANR	554859	DeclStmt									
ANR	554860	Decl							HashTable	HashTable *	types
ANR	554861	DeclStmt									
ANR	554862	Decl							intl_error	intl_error &	err
ANR	554863	DeclStmt									
ANR	554864	Decl							int	int	argNum
ANR	554865	DeclStmt									
ANR	554866	Decl							HashPosition	HashPosition	pos
ANR	554867	DeclStmt									
ANR	554868	Decl							zval	zval * *	elem
ANR	554869	DeclStmt									
ANR	554870	Decl							int	int	key_type
ANR	554871	DeclStmt									
ANR	554872	Decl							char	char *	str_index
ANR	554873	DeclStmt									
ANR	554874	Decl							uint	uint	str_len
ANR	554875	DeclStmt									
ANR	554876	Decl							ulong	ulong	num_index
ANR	554877	DeclStmt									
ANR	554878	Decl							Formattable	Formattable &	formattable
ANR	554879	DeclStmt									
ANR	554880	Decl							UnicodeString	UnicodeString &	key
ANR	554881	DeclStmt									
ANR	554882	Decl							Formattable :: Type	Formattable :: Type	argType
ANR	554883	Decl							Formattable :: Type	Formattable :: Type *	storedArgType
ANR	554884	DeclStmt									
ANR	554885	Decl							UChar	UChar [ 16 ]	temp
ANR	554886	DeclStmt									
ANR	554887	Decl							int32_t	int32_t	len
ANR	554888	DeclStmt									
ANR	554889	Decl							char	char *	message
ANR	554890	DeclStmt									
ANR	554891	Decl							UnicodeString	UnicodeString *	text
ANR	554892	DeclStmt									
ANR	554893	Decl							char	char *	message
ANR	554894	DeclStmt									
ANR	554895	Decl							double	double	d
ANR	554896	DeclStmt									
ANR	554897	Decl							int32_t	int32_t	tInt32
ANR	554898	DeclStmt									
ANR	554899	Decl							int64_t	int64_t	tInt64
ANR	554900	DeclStmt									
ANR	554901	Decl							double	double	dd
ANR	554902	DeclStmt									
ANR	554903	Decl							char	char *	message
ANR	554904	Decl							char	char *	key_char
ANR	554905	DeclStmt									
ANR	554906	Decl							int	int	key_len
ANR	554907	DeclStmt									
ANR	554908	Decl							UErrorCode	UErrorCode	status
ANR	554909	DeclStmt									
ANR	554910	Decl							char	char *	message
ANR	554911	Decl							char	char *	key_char
ANR	554912	DeclStmt									
ANR	554913	Decl							int	int	key_len
ANR	554914	DeclStmt									
ANR	554915	Decl							UErrorCode	UErrorCode	status
ANR	554916	DeclStmt									
ANR	554917	Decl							UnicodeString	UnicodeString	resultStr
ANR	554918	DeclStmt									
ANR	554919	Decl							FieldPosition	FieldPosition	fieldPosition
ANR	554920	DeclStmt									
ANR	554921	Decl							int	int	j
ANR	554922	Function	umsg_parse_helper	643:0:19527:21225							
ANR	554923	FunctionDef	"umsg_parse_helper (UMessageFormat * fmt , int * count , zval * * * args , UChar * source , int source_len , UErrorCode * status)"		554922	0					
ANR	554924	CompoundStatement		644:0:19656:21225	554922	0					
ANR	554925	IdentifierDeclStatement	"UnicodeString srcString ( source , source_len ) ;"	645:4:19662:19705	554922	0	True				
ANR	554926	IdentifierDecl	"srcString ( source , source_len )"		554922	0					
ANR	554927	IdentifierDeclType	UnicodeString		554922	0					
ANR	554928	Identifier	srcString		554922	1					
ANR	554929	Expression	"source , source_len"		554922	2					
ANR	554930	Identifier	source		554922	0					
ANR	554931	Identifier	source_len		554922	1					
ANR	554932	IdentifierDeclStatement	"Formattable * fargs = ( ( const MessageFormat * ) fmt ) -> parse ( srcString , * count , * status ) ;"	646:4:19711:19794	554922	1	True				
ANR	554933	IdentifierDecl	"* fargs = ( ( const MessageFormat * ) fmt ) -> parse ( srcString , * count , * status )"		554922	0					
ANR	554934	IdentifierDeclType	Formattable *		554922	0					
ANR	554935	Identifier	fargs		554922	1					
ANR	554936	AssignmentExpression	"* fargs = ( ( const MessageFormat * ) fmt ) -> parse ( srcString , * count , * status )"		554922	2		=			
ANR	554937	Identifier	fargs		554922	0					
ANR	554938	CallExpression	"( ( const MessageFormat * ) fmt ) -> parse ( srcString , * count , * status )"		554922	1					
ANR	554939	Callee	( ( const MessageFormat * ) fmt ) -> parse		554922	0					
ANR	554940	PtrMemberAccess	( ( const MessageFormat * ) fmt ) -> parse		554922	0					
ANR	554941	CastExpression	( const MessageFormat * ) fmt		554922	0					
ANR	554942	CastTarget	const MessageFormat *		554922	0					
ANR	554943	Identifier	fmt		554922	1					
ANR	554944	Identifier	parse		554922	1					
ANR	554945	ArgumentList	srcString		554922	1					
ANR	554946	Argument	srcString		554922	0					
ANR	554947	Identifier	srcString		554922	0					
ANR	554948	Argument	* count		554922	1					
ANR	554949	UnaryOperationExpression	* count		554922	0					
ANR	554950	UnaryOperator	*		554922	0					
ANR	554951	Identifier	count		554922	1					
ANR	554952	Argument	* status		554922	2					
ANR	554953	UnaryOperationExpression	* status		554922	0					
ANR	554954	UnaryOperator	*		554922	0					
ANR	554955	Identifier	status		554922	1					
ANR	554956	IfStatement	if ( U_FAILURE ( * status ) )		554922	2					
ANR	554957	Condition	U_FAILURE ( * status )	648:4:19801:19818	554922	0	True				
ANR	554958	CallExpression	U_FAILURE ( * status )		554922	0					
ANR	554959	Callee	U_FAILURE		554922	0					
ANR	554960	Identifier	U_FAILURE		554922	0					
ANR	554961	ArgumentList	* status		554922	1					
ANR	554962	Argument	* status		554922	0					
ANR	554963	UnaryOperationExpression	* status		554922	0					
ANR	554964	UnaryOperator	*		554922	0					
ANR	554965	Identifier	status		554922	1					
ANR	554966	CompoundStatement		5:24:164:164	554922	1					
ANR	554967	ReturnStatement	return ;	649:2:19825:19831	554922	0	True				
ANR	554968	ExpressionStatement	"* args = ( zval * * ) safe_emalloc ( * count , sizeof ( zval * ) , 0 )"	652:1:19838:19894	554922	3	True				
ANR	554969	AssignmentExpression	"* args = ( zval * * ) safe_emalloc ( * count , sizeof ( zval * ) , 0 )"		554922	0		=			
ANR	554970	UnaryOperationExpression	* args		554922	0					
ANR	554971	UnaryOperator	*		554922	0					
ANR	554972	Identifier	args		554922	1					
ANR	554973	CastExpression	"( zval * * ) safe_emalloc ( * count , sizeof ( zval * ) , 0 )"		554922	1					
ANR	554974	CastTarget	zval * *		554922	0					
ANR	554975	CallExpression	"safe_emalloc ( * count , sizeof ( zval * ) , 0 )"		554922	1					
ANR	554976	Callee	safe_emalloc		554922	0					
ANR	554977	Identifier	safe_emalloc		554922	0					
ANR	554978	ArgumentList	* count		554922	1					
ANR	554979	Argument	* count		554922	0					
ANR	554980	UnaryOperationExpression	* count		554922	0					
ANR	554981	UnaryOperator	*		554922	0					
ANR	554982	Identifier	count		554922	1					
ANR	554983	Argument	sizeof ( zval * )		554922	1					
ANR	554984	SizeofExpression	sizeof ( zval * )		554922	0					
ANR	554985	Sizeof	sizeof		554922	0					
ANR	554986	SizeofOperand	zval *		554922	1					
ANR	554987	Argument	0		554922	2					
ANR	554988	PrimaryExpression	0		554922	0					
ANR	554989	ForStatement	for ( int32_t i = 0 ; i < * count ; i ++ )		554922	4					
ANR	554990	ForInit	int32_t i = 0 ;	655:8:19943:19956	554922	0	True				
ANR	554991	IdentifierDeclStatement	int32_t i = 0 ;		554922	0					
ANR	554992	IdentifierDecl	i = 0		554922	0					
ANR	554993	IdentifierDeclType	int32_t		554922	0					
ANR	554994	Identifier	i		554922	1					
ANR	554995	AssignmentExpression	i = 0		554922	2		=			
ANR	554996	Identifier	i		554922	0					
ANR	554997	PrimaryExpression	0		554922	1					
ANR	554998	Condition	i < * count	655:23:19958:19967	554922	1	True				
ANR	554999	RelationalExpression	i < * count		554922	0		<			
ANR	555000	Identifier	i		554922	0					
ANR	555001	UnaryOperationExpression	* count		554922	1					
ANR	555002	UnaryOperator	*		554922	0					
ANR	555003	Identifier	count		554922	1					
ANR	555004	PostIncDecOperationExpression	i ++	655:35:19970:19972	554922	2	True				
ANR	555005	Identifier	i		554922	0					
ANR	555006	IncDec	++		554922	1					
ANR	555007	CompoundStatement		17:2:395:407	554922	3					
ANR	555008	IdentifierDeclStatement	int64_t aInt64 ;	656:5:19982:19996	554922	0	True				
ANR	555009	IdentifierDecl	aInt64		554922	0					
ANR	555010	IdentifierDeclType	int64_t		554922	0					
ANR	555011	Identifier	aInt64		554922	1					
ANR	555012	IdentifierDeclStatement	double aDate ;	657:2:20000:20012	554922	1	True				
ANR	555013	IdentifierDecl	aDate		554922	0					
ANR	555014	IdentifierDeclType	double		554922	0					
ANR	555015	Identifier	aDate		554922	1					
ANR	555016	IdentifierDeclStatement	UnicodeString temp ;	658:2:20016:20034	554922	2	True				
ANR	555017	IdentifierDecl	temp		554922	0					
ANR	555018	IdentifierDeclType	UnicodeString		554922	0					
ANR	555019	Identifier	temp		554922	1					
ANR	555020	IdentifierDeclStatement	char * stmp ;	659:2:20038:20048	554922	3	True				
ANR	555021	IdentifierDecl	* stmp		554922	0					
ANR	555022	IdentifierDeclType	char *		554922	0					
ANR	555023	Identifier	stmp		554922	1					
ANR	555024	IdentifierDeclStatement	int stmp_len ;	660:2:20052:20064	554922	4	True				
ANR	555025	IdentifierDecl	stmp_len		554922	0					
ANR	555026	IdentifierDeclType	int		554922	0					
ANR	555027	Identifier	stmp_len		554922	1					
ANR	555028	ExpressionStatement	ALLOC_INIT_ZVAL ( ( * args ) [ i ] )	662:2:20069:20096	554922	5	True				
ANR	555029	CallExpression	ALLOC_INIT_ZVAL ( ( * args ) [ i ] )		554922	0					
ANR	555030	Callee	ALLOC_INIT_ZVAL		554922	0					
ANR	555031	Identifier	ALLOC_INIT_ZVAL		554922	0					
ANR	555032	ArgumentList	( * args ) [ i ]		554922	1					
ANR	555033	Argument	( * args ) [ i ]		554922	0					
ANR	555034	ArrayIndexing	( * args ) [ i ]		554922	0					
ANR	555035	UnaryOperationExpression	* args		554922	0					
ANR	555036	UnaryOperator	*		554922	0					
ANR	555037	Identifier	args		554922	1					
ANR	555038	Identifier	i		554922	1					
ANR	555039	SwitchStatement	switch ( fargs [ i ] . getType ( ) )		554922	6					
ANR	555040	Condition	fargs [ i ] . getType ( )	664:9:20108:20125	554922	0	True				
ANR	555041	CallExpression	fargs [ i ] . getType ( )		554922	0					
ANR	555042	Callee	fargs [ i ] . getType		554922	0					
ANR	555043	MemberAccess	fargs [ i ] . getType		554922	0					
ANR	555044	ArrayIndexing	fargs [ i ]		554922	0					
ANR	555045	Identifier	fargs		554922	0					
ANR	555046	Identifier	i		554922	1					
ANR	555047	Identifier	getType		554922	1					
ANR	555048	ArgumentList			554922	1					
ANR	555049	CompoundStatement		21:29:471:471	554922	1					
ANR	555050	Label	case Formattable :: kDate :	665:8:20138:20161	554922	0	True				
ANR	555051	Identifier	Formattable :: kDate		554922	0					
ANR	555052	ExpressionStatement	aDate = ( ( double ) fargs [ i ] . getDate ( ) ) / U_MILLIS_PER_SECOND	666:3:20166:20222	554922	1	True				
ANR	555053	AssignmentExpression	aDate = ( ( double ) fargs [ i ] . getDate ( ) ) / U_MILLIS_PER_SECOND		554922	0		=			
ANR	555054	Identifier	aDate		554922	0					
ANR	555055	MultiplicativeExpression	( ( double ) fargs [ i ] . getDate ( ) ) / U_MILLIS_PER_SECOND		554922	1		/			
ANR	555056	CastExpression	( double ) fargs [ i ] . getDate ( )		554922	0					
ANR	555057	CastTarget	double		554922	0					
ANR	555058	CallExpression	fargs [ i ] . getDate ( )		554922	1					
ANR	555059	Callee	fargs [ i ] . getDate		554922	0					
ANR	555060	MemberAccess	fargs [ i ] . getDate		554922	0					
ANR	555061	ArrayIndexing	fargs [ i ]		554922	0					
ANR	555062	Identifier	fargs		554922	0					
ANR	555063	Identifier	i		554922	1					
ANR	555064	Identifier	getDate		554922	1					
ANR	555065	ArgumentList			554922	1					
ANR	555066	Identifier	U_MILLIS_PER_SECOND		554922	1					
ANR	555067	ExpressionStatement	"ZVAL_DOUBLE ( ( * args ) [ i ] , aDate )"	667:3:20227:20257	554922	2	True				
ANR	555068	CallExpression	"ZVAL_DOUBLE ( ( * args ) [ i ] , aDate )"		554922	0					
ANR	555069	Callee	ZVAL_DOUBLE		554922	0					
ANR	555070	Identifier	ZVAL_DOUBLE		554922	0					
ANR	555071	ArgumentList	( * args ) [ i ]		554922	1					
ANR	555072	Argument	( * args ) [ i ]		554922	0					
ANR	555073	ArrayIndexing	( * args ) [ i ]		554922	0					
ANR	555074	UnaryOperationExpression	* args		554922	0					
ANR	555075	UnaryOperator	*		554922	0					
ANR	555076	Identifier	args		554922	1					
ANR	555077	Identifier	i		554922	1					
ANR	555078	Argument	aDate		554922	1					
ANR	555079	Identifier	aDate		554922	0					
ANR	555080	BreakStatement	break ;	668:12:20271:20276	554922	3	True				
ANR	555081	Label	case Formattable :: kDouble :	670:8:20287:20312	554922	4	True				
ANR	555082	Identifier	Formattable :: kDouble		554922	0					
ANR	555083	ExpressionStatement	"ZVAL_DOUBLE ( ( * args ) [ i ] , ( double ) fargs [ i ] . getDouble ( ) )"	671:3:20317:20370	554922	5	True				
ANR	555084	CallExpression	"ZVAL_DOUBLE ( ( * args ) [ i ] , ( double ) fargs [ i ] . getDouble ( ) )"		554922	0					
ANR	555085	Callee	ZVAL_DOUBLE		554922	0					
ANR	555086	Identifier	ZVAL_DOUBLE		554922	0					
ANR	555087	ArgumentList	( * args ) [ i ]		554922	1					
ANR	555088	Argument	( * args ) [ i ]		554922	0					
ANR	555089	ArrayIndexing	( * args ) [ i ]		554922	0					
ANR	555090	UnaryOperationExpression	* args		554922	0					
ANR	555091	UnaryOperator	*		554922	0					
ANR	555092	Identifier	args		554922	1					
ANR	555093	Identifier	i		554922	1					
ANR	555094	Argument	( double ) fargs [ i ] . getDouble ( )		554922	1					
ANR	555095	CastExpression	( double ) fargs [ i ] . getDouble ( )		554922	0					
ANR	555096	CastTarget	double		554922	0					
ANR	555097	CallExpression	fargs [ i ] . getDouble ( )		554922	1					
ANR	555098	Callee	fargs [ i ] . getDouble		554922	0					
ANR	555099	MemberAccess	fargs [ i ] . getDouble		554922	0					
ANR	555100	ArrayIndexing	fargs [ i ]		554922	0					
ANR	555101	Identifier	fargs		554922	0					
ANR	555102	Identifier	i		554922	1					
ANR	555103	Identifier	getDouble		554922	1					
ANR	555104	ArgumentList			554922	1					
ANR	555105	BreakStatement	break ;	672:12:20384:20389	554922	6	True				
ANR	555106	Label	case Formattable :: kLong :	674:8:20400:20423	554922	7	True				
ANR	555107	Identifier	Formattable :: kLong		554922	0					
ANR	555108	ExpressionStatement	"ZVAL_LONG ( ( * args ) [ i ] , fargs [ i ] . getLong ( ) )"	675:3:20428:20469	554922	8	True				
ANR	555109	CallExpression	"ZVAL_LONG ( ( * args ) [ i ] , fargs [ i ] . getLong ( ) )"		554922	0					
ANR	555110	Callee	ZVAL_LONG		554922	0					
ANR	555111	Identifier	ZVAL_LONG		554922	0					
ANR	555112	ArgumentList	( * args ) [ i ]		554922	1					
ANR	555113	Argument	( * args ) [ i ]		554922	0					
ANR	555114	ArrayIndexing	( * args ) [ i ]		554922	0					
ANR	555115	UnaryOperationExpression	* args		554922	0					
ANR	555116	UnaryOperator	*		554922	0					
ANR	555117	Identifier	args		554922	1					
ANR	555118	Identifier	i		554922	1					
ANR	555119	Argument	fargs [ i ] . getLong ( )		554922	1					
ANR	555120	CallExpression	fargs [ i ] . getLong ( )		554922	0					
ANR	555121	Callee	fargs [ i ] . getLong		554922	0					
ANR	555122	MemberAccess	fargs [ i ] . getLong		554922	0					
ANR	555123	ArrayIndexing	fargs [ i ]		554922	0					
ANR	555124	Identifier	fargs		554922	0					
ANR	555125	Identifier	i		554922	1					
ANR	555126	Identifier	getLong		554922	1					
ANR	555127	ArgumentList			554922	1					
ANR	555128	BreakStatement	break ;	676:12:20483:20488	554922	9	True				
ANR	555129	Label	case Formattable :: kInt64 :	678:8:20499:20523	554922	10	True				
ANR	555130	Identifier	Formattable :: kInt64		554922	0					
ANR	555131	ExpressionStatement	aInt64 = fargs [ i ] . getInt64 ( )	679:12:20537:20565	554922	11	True				
ANR	555132	AssignmentExpression	aInt64 = fargs [ i ] . getInt64 ( )		554922	0		=			
ANR	555133	Identifier	aInt64		554922	0					
ANR	555134	CallExpression	fargs [ i ] . getInt64 ( )		554922	1					
ANR	555135	Callee	fargs [ i ] . getInt64		554922	0					
ANR	555136	MemberAccess	fargs [ i ] . getInt64		554922	0					
ANR	555137	ArrayIndexing	fargs [ i ]		554922	0					
ANR	555138	Identifier	fargs		554922	0					
ANR	555139	Identifier	i		554922	1					
ANR	555140	Identifier	getInt64		554922	1					
ANR	555141	ArgumentList			554922	1					
ANR	555142	IfStatement	if ( aInt64 > LONG_MAX || aInt64 < - LONG_MAX )		554922	12					
ANR	555143	Condition	aInt64 > LONG_MAX || aInt64 < - LONG_MAX	680:6:20573:20611	554922	0	True				
ANR	555144	OrExpression	aInt64 > LONG_MAX || aInt64 < - LONG_MAX		554922	0		||			
ANR	555145	RelationalExpression	aInt64 > LONG_MAX		554922	0		>			
ANR	555146	Identifier	aInt64		554922	0					
ANR	555147	Identifier	LONG_MAX		554922	1					
ANR	555148	RelationalExpression	aInt64 < - LONG_MAX		554922	1		<			
ANR	555149	Identifier	aInt64		554922	0					
ANR	555150	UnaryOperationExpression	- LONG_MAX		554922	1					
ANR	555151	UnaryOperator	-		554922	0					
ANR	555152	Identifier	LONG_MAX		554922	1					
ANR	555153	CompoundStatement		37:47:957:957	554922	1					
ANR	555154	ExpressionStatement	"ZVAL_DOUBLE ( ( * args ) [ i ] , ( double ) aInt64 )"	681:4:20620:20659	554922	0	True				
ANR	555155	CallExpression	"ZVAL_DOUBLE ( ( * args ) [ i ] , ( double ) aInt64 )"		554922	0					
ANR	555156	Callee	ZVAL_DOUBLE		554922	0					
ANR	555157	Identifier	ZVAL_DOUBLE		554922	0					
ANR	555158	ArgumentList	( * args ) [ i ]		554922	1					
ANR	555159	Argument	( * args ) [ i ]		554922	0					
ANR	555160	ArrayIndexing	( * args ) [ i ]		554922	0					
ANR	555161	UnaryOperationExpression	* args		554922	0					
ANR	555162	UnaryOperator	*		554922	0					
ANR	555163	Identifier	args		554922	1					
ANR	555164	Identifier	i		554922	1					
ANR	555165	Argument	( double ) aInt64		554922	1					
ANR	555166	CastExpression	( double ) aInt64		554922	0					
ANR	555167	CastTarget	double		554922	0					
ANR	555168	Identifier	aInt64		554922	1					
ANR	555169	ElseStatement	else		554922	0					
ANR	555170	CompoundStatement		39:10:1014:1014	554922	0					
ANR	555171	ExpressionStatement	"ZVAL_LONG ( ( * args ) [ i ] , ( long ) aInt64 )"	683:4:20677:20712	554922	0	True				
ANR	555172	CallExpression	"ZVAL_LONG ( ( * args ) [ i ] , ( long ) aInt64 )"		554922	0					
ANR	555173	Callee	ZVAL_LONG		554922	0					
ANR	555174	Identifier	ZVAL_LONG		554922	0					
ANR	555175	ArgumentList	( * args ) [ i ]		554922	1					
ANR	555176	Argument	( * args ) [ i ]		554922	0					
ANR	555177	ArrayIndexing	( * args ) [ i ]		554922	0					
ANR	555178	UnaryOperationExpression	* args		554922	0					
ANR	555179	UnaryOperator	*		554922	0					
ANR	555180	Identifier	args		554922	1					
ANR	555181	Identifier	i		554922	1					
ANR	555182	Argument	( long ) aInt64		554922	1					
ANR	555183	CastExpression	( long ) aInt64		554922	0					
ANR	555184	CastTarget	long		554922	0					
ANR	555185	Identifier	aInt64		554922	1					
ANR	555186	BreakStatement	break ;	685:12:20731:20736	554922	13	True				
ANR	555187	Label	case Formattable :: kString :	687:8:20747:20772	554922	14	True				
ANR	555188	Identifier	Formattable :: kString		554922	0					
ANR	555189	ExpressionStatement	fargs [ i ] . getString ( temp )	688:12:20786:20810	554922	15	True				
ANR	555190	CallExpression	fargs [ i ] . getString ( temp )		554922	0					
ANR	555191	Callee	fargs [ i ] . getString		554922	0					
ANR	555192	MemberAccess	fargs [ i ] . getString		554922	0					
ANR	555193	ArrayIndexing	fargs [ i ]		554922	0					
ANR	555194	Identifier	fargs		554922	0					
ANR	555195	Identifier	i		554922	1					
ANR	555196	Identifier	getString		554922	1					
ANR	555197	ArgumentList	temp		554922	1					
ANR	555198	Argument	temp		554922	0					
ANR	555199	Identifier	temp		554922	0					
ANR	555200	ExpressionStatement	"intl_convert_utf16_to_utf8 ( & stmp , & stmp_len , temp . getBuffer ( ) , temp . length ( ) , status )"	689:3:20815:20900	554922	16	True				
ANR	555201	CallExpression	"intl_convert_utf16_to_utf8 ( & stmp , & stmp_len , temp . getBuffer ( ) , temp . length ( ) , status )"		554922	0					
ANR	555202	Callee	intl_convert_utf16_to_utf8		554922	0					
ANR	555203	Identifier	intl_convert_utf16_to_utf8		554922	0					
ANR	555204	ArgumentList	& stmp		554922	1					
ANR	555205	Argument	& stmp		554922	0					
ANR	555206	UnaryOperationExpression	& stmp		554922	0					
ANR	555207	UnaryOperator	&		554922	0					
ANR	555208	Identifier	stmp		554922	1					
ANR	555209	Argument	& stmp_len		554922	1					
ANR	555210	UnaryOperationExpression	& stmp_len		554922	0					
ANR	555211	UnaryOperator	&		554922	0					
ANR	555212	Identifier	stmp_len		554922	1					
ANR	555213	Argument	temp . getBuffer ( )		554922	2					
ANR	555214	CallExpression	temp . getBuffer ( )		554922	0					
ANR	555215	Callee	temp . getBuffer		554922	0					
ANR	555216	MemberAccess	temp . getBuffer		554922	0					
ANR	555217	Identifier	temp		554922	0					
ANR	555218	Identifier	getBuffer		554922	1					
ANR	555219	ArgumentList			554922	1					
ANR	555220	Argument	temp . length ( )		554922	3					
ANR	555221	CallExpression	temp . length ( )		554922	0					
ANR	555222	Callee	temp . length		554922	0					
ANR	555223	MemberAccess	temp . length		554922	0					
ANR	555224	Identifier	temp		554922	0					
ANR	555225	Identifier	length		554922	1					
ANR	555226	ArgumentList			554922	1					
ANR	555227	Argument	status		554922	4					
ANR	555228	Identifier	status		554922	0					
ANR	555229	IfStatement	if ( U_FAILURE ( * status ) )		554922	17					
ANR	555230	Condition	U_FAILURE ( * status )	690:6:20908:20925	554922	0	True				
ANR	555231	CallExpression	U_FAILURE ( * status )		554922	0					
ANR	555232	Callee	U_FAILURE		554922	0					
ANR	555233	Identifier	U_FAILURE		554922	0					
ANR	555234	ArgumentList	* status		554922	1					
ANR	555235	Argument	* status		554922	0					
ANR	555236	UnaryOperationExpression	* status		554922	0					
ANR	555237	UnaryOperator	*		554922	0					
ANR	555238	Identifier	status		554922	1					
ANR	555239	CompoundStatement		47:26:1271:1271	554922	1					
ANR	555240	ExpressionStatement	cleanup_zvals ( )	691:4:20934:20949	554922	0	True				
ANR	555241	CallExpression	cleanup_zvals ( )		554922	0					
ANR	555242	Callee	cleanup_zvals		554922	0					
ANR	555243	Identifier	cleanup_zvals		554922	0					
ANR	555244	ArgumentList			554922	1					
ANR	555245	ReturnStatement	return ;	692:4:20955:20961	554922	1	True				
ANR	555246	ExpressionStatement	"ZVAL_STRINGL ( ( * args ) [ i ] , stmp , stmp_len , 0 )"	694:3:20971:21014	554922	18	True				
ANR	555247	CallExpression	"ZVAL_STRINGL ( ( * args ) [ i ] , stmp , stmp_len , 0 )"		554922	0					
ANR	555248	Callee	ZVAL_STRINGL		554922	0					
ANR	555249	Identifier	ZVAL_STRINGL		554922	0					
ANR	555250	ArgumentList	( * args ) [ i ]		554922	1					
ANR	555251	Argument	( * args ) [ i ]		554922	0					
ANR	555252	ArrayIndexing	( * args ) [ i ]		554922	0					
ANR	555253	UnaryOperationExpression	* args		554922	0					
ANR	555254	UnaryOperator	*		554922	0					
ANR	555255	Identifier	args		554922	1					
ANR	555256	Identifier	i		554922	1					
ANR	555257	Argument	stmp		554922	1					
ANR	555258	Identifier	stmp		554922	0					
ANR	555259	Argument	stmp_len		554922	2					
ANR	555260	Identifier	stmp_len		554922	0					
ANR	555261	Argument	0		554922	3					
ANR	555262	PrimaryExpression	0		554922	0					
ANR	555263	BreakStatement	break ;	695:12:21028:21033	554922	19	True				
ANR	555264	Label	case Formattable :: kObject :	697:8:21044:21069	554922	20	True				
ANR	555265	Identifier	Formattable :: kObject		554922	0					
ANR	555266	Label	case Formattable :: kArray :	698:8:21079:21103	554922	21	True				
ANR	555267	Identifier	Formattable :: kArray		554922	0					
ANR	555268	ExpressionStatement	* status = U_ILLEGAL_ARGUMENT_ERROR	699:12:21117:21151	554922	22	True				
ANR	555269	AssignmentExpression	* status = U_ILLEGAL_ARGUMENT_ERROR		554922	0		=			
ANR	555270	UnaryOperationExpression	* status		554922	0					
ANR	555271	UnaryOperator	*		554922	0					
ANR	555272	Identifier	status		554922	1					
ANR	555273	Identifier	U_ILLEGAL_ARGUMENT_ERROR		554922	1					
ANR	555274	ExpressionStatement	cleanup_zvals ( )	700:3:21156:21171	554922	23	True				
ANR	555275	CallExpression	cleanup_zvals ( )		554922	0					
ANR	555276	Callee	cleanup_zvals		554922	0					
ANR	555277	Identifier	cleanup_zvals		554922	0					
ANR	555278	ArgumentList			554922	1					
ANR	555279	BreakStatement	break ;	701:12:21185:21190	554922	24	True				
ANR	555280	Statement	delete	704:1:21209:21214	554922	5	True				
ANR	555281	Statement	[	704:7:21215:21215	554922	6	True				
ANR	555282	Statement	]	704:8:21216:21216	554922	7	True				
ANR	555283	ExpressionStatement	fargs	704:10:21218:21223	554922	8	True				
ANR	555284	Identifier	fargs		554922	0					
ANR	555285	ReturnType	U_CFUNC void		554922	1					
ANR	555286	Identifier	umsg_parse_helper		554922	2					
ANR	555287	ParameterList	"UMessageFormat * fmt , int * count , zval * * * args , UChar * source , int source_len , UErrorCode * status"		554922	3					
ANR	555288	Parameter	UMessageFormat * fmt	643:31:19558:19576	554922	0	True				
ANR	555289	ParameterType	UMessageFormat *		554922	0					
ANR	555290	Identifier	fmt		554922	1					
ANR	555291	Parameter	int * count	643:52:19579:19588	554922	1	True				
ANR	555292	ParameterType	int *		554922	0					
ANR	555293	Identifier	count		554922	1					
ANR	555294	Parameter	zval * * * args	643:64:19591:19602	554922	2	True				
ANR	555295	ParameterType	zval * * *		554922	0					
ANR	555296	Identifier	args		554922	1					
ANR	555297	Parameter	UChar * source	643:78:19605:19617	554922	3	True				
ANR	555298	ParameterType	UChar *		554922	0					
ANR	555299	Identifier	source		554922	1					
ANR	555300	Parameter	int source_len	643:93:19620:19633	554922	4	True				
ANR	555301	ParameterType	int		554922	0					
ANR	555302	Identifier	source_len		554922	1					
ANR	555303	Parameter	UErrorCode * status	643:109:19636:19653	554922	5	True				
ANR	555304	ParameterType	UErrorCode *		554922	0					
ANR	555305	Identifier	status		554922	1					
ANR	555306	CFGEntryNode	ENTRY		554922		True				
ANR	555307	CFGExitNode	EXIT		554922		True				
ANR	555308	Symbol	fargs		554922						
ANR	555309	Symbol	* fmt		554922						
ANR	555310	Symbol	source		554922						
ANR	555311	Symbol	stmp_len		554922						
ANR	555312	Symbol	fmt		554922						
ANR	555313	Symbol	* args		554922						
ANR	555314	Symbol	U_FAILURE		554922						
ANR	555315	Symbol	* count		554922						
ANR	555316	Symbol	srcString		554922						
ANR	555317	Symbol	& stmp_len		554922						
ANR	555318	Symbol	LONG_MAX		554922						
ANR	555319	Symbol	aDate		554922						
ANR	555320	Symbol	* * args		554922						
ANR	555321	Symbol	U_MILLIS_PER_SECOND		554922						
ANR	555322	Symbol	fargs [ i ] . getDouble		554922						
ANR	555323	Symbol	temp . getBuffer		554922						
ANR	555324	Symbol	temp		554922						
ANR	555325	Symbol	( ( const MessageFormat * ) fmt ) -> parse		554922						
ANR	555326	Symbol	fargs [ i ] . getLong		554922						
ANR	555327	Symbol	U_ILLEGAL_ARGUMENT_ERROR		554922						
ANR	555328	Symbol	* fargs		554922						
ANR	555329	Symbol	fargs [ i ] . getType		554922						
ANR	555330	Symbol	count		554922						
ANR	555331	Symbol	i		554922						
ANR	555332	Symbol	fargs [ i ] . getDate		554922						
ANR	555333	Symbol	* status		554922						
ANR	555334	Symbol	& stmp		554922						
ANR	555335	Symbol	args		554922						
ANR	555336	Symbol	aInt64		554922						
ANR	555337	Symbol	stmp		554922						
ANR	555338	Symbol	* i		554922						
ANR	555339	Symbol	source_len		554922						
ANR	555340	Symbol	temp . length		554922						
ANR	555341	Symbol	safe_emalloc		554922						
ANR	555342	Symbol	fargs [ i ] . getInt64		554922						
ANR	555343	Symbol	status		554922						
