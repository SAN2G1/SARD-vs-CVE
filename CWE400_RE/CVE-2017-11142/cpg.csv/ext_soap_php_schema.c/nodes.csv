command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1244229	File	data/converged/CVE-2017-11142_php-src/ext_soap_php_schema.c								
ANR	1244230	DeclStmt									
ANR	1244231	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr simpleType , sdlTypePtr cur_type )"	schema_simpleType
ANR	1244232	DeclStmt									
ANR	1244233	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr compType , sdlTypePtr cur_type )"	schema_complexType
ANR	1244234	DeclStmt									
ANR	1244235	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr listType , sdlTypePtr cur_type )"	schema_list
ANR	1244236	DeclStmt									
ANR	1244237	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr unionType , sdlTypePtr cur_type )"	schema_union
ANR	1244238	DeclStmt									
ANR	1244239	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr simpCompType , sdlTypePtr cur_type )"	schema_simpleContent
ANR	1244240	DeclStmt									
ANR	1244241	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr restType , sdlTypePtr cur_type , int simpleType )"	schema_restriction_simpleContent
ANR	1244242	DeclStmt									
ANR	1244243	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr restType , sdlTypePtr cur_type )"	schema_restriction_complexContent
ANR	1244244	DeclStmt									
ANR	1244245	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type )"	schema_extension_simpleContent
ANR	1244246	DeclStmt									
ANR	1244247	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type )"	schema_extension_complexContent
ANR	1244248	DeclStmt									
ANR	1244249	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr seqType , sdlTypePtr cur_type , sdlContentModelPtr model )"	schema_sequence
ANR	1244250	DeclStmt									
ANR	1244251	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type , sdlContentModelPtr model )"	schema_all
ANR	1244252	DeclStmt									
ANR	1244253	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr choiceType , sdlTypePtr cur_type , sdlContentModelPtr model )"	schema_choice
ANR	1244254	DeclStmt									
ANR	1244255	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr groupType , sdlTypePtr cur_type , sdlContentModelPtr model )"	schema_group
ANR	1244256	DeclStmt									
ANR	1244257	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type , sdlContentModelPtr model )"	schema_any
ANR	1244258	DeclStmt									
ANR	1244259	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr element , sdlTypePtr cur_type , sdlContentModelPtr model )"	schema_element
ANR	1244260	DeclStmt									
ANR	1244261	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr attrType , sdlTypePtr cur_type , sdlCtx * ctx )"	schema_attribute
ANR	1244262	DeclStmt									
ANR	1244263	Decl							int	"int ( sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr attrType , sdlTypePtr cur_type , sdlCtx * ctx )"	schema_attributeGroup
ANR	1244264	DeclStmt									
ANR	1244265	Decl							int	"int ( xmlNodePtr val , sdlRestrictionIntPtr * valptr )"	schema_restriction_var_int
ANR	1244266	DeclStmt									
ANR	1244267	Decl							int	"int ( xmlNodePtr val , sdlRestrictionCharPtr * valptr )"	schema_restriction_var_char
ANR	1244268	DeclStmt									
ANR	1244269	Decl							void	"void ( sdlCtx * ctx , sdlTypePtr type )"	schema_type_fixup
ANR	1244270	Function	create_encoder	49:0:3505:4624							
ANR	1244271	FunctionDef	"create_encoder (sdlPtr sdl , sdlTypePtr cur_type , const xmlChar * ns , const xmlChar * type)"		1244270	0					
ANR	1244272	CompoundStatement		50:0:3610:4624	1244270	0					
ANR	1244273	IdentifierDeclStatement	smart_str nscat = { 0 } ;	51:1:3613:3634	1244270	0	True				
ANR	1244274	IdentifierDecl	nscat = { 0 }		1244270	0					
ANR	1244275	IdentifierDeclType	smart_str		1244270	0					
ANR	1244276	Identifier	nscat		1244270	1					
ANR	1244277	AssignmentExpression	nscat = { 0 }		1244270	2		=			
ANR	1244278	Identifier	nscat		1244270	0					
ANR	1244279	InitializerList	0		1244270	1					
ANR	1244280	PrimaryExpression	0		1244270	0					
ANR	1244281	IdentifierDeclStatement	"encodePtr enc , * enc_ptr ;"	52:1:3637:3660	1244270	1	True				
ANR	1244282	IdentifierDecl	enc		1244270	0					
ANR	1244283	IdentifierDeclType	encodePtr		1244270	0					
ANR	1244284	Identifier	enc		1244270	1					
ANR	1244285	IdentifierDecl	* enc_ptr		1244270	1					
ANR	1244286	IdentifierDeclType	encodePtr *		1244270	0					
ANR	1244287	Identifier	enc_ptr		1244270	1					
ANR	1244288	IfStatement	if ( sdl -> encoders == NULL )		1244270	2					
ANR	1244289	Condition	sdl -> encoders == NULL	54:5:3668:3688	1244270	0	True				
ANR	1244290	EqualityExpression	sdl -> encoders == NULL		1244270	0		==			
ANR	1244291	PtrMemberAccess	sdl -> encoders		1244270	0					
ANR	1244292	Identifier	sdl		1244270	0					
ANR	1244293	Identifier	encoders		1244270	1					
ANR	1244294	Identifier	NULL		1244270	1					
ANR	1244295	CompoundStatement		5:28:80:80	1244270	1					
ANR	1244296	ExpressionStatement	sdl -> encoders = emalloc ( sizeof ( HashTable ) )	55:2:3695:3737	1244270	0	True				
ANR	1244297	AssignmentExpression	sdl -> encoders = emalloc ( sizeof ( HashTable ) )		1244270	0		=			
ANR	1244298	PtrMemberAccess	sdl -> encoders		1244270	0					
ANR	1244299	Identifier	sdl		1244270	0					
ANR	1244300	Identifier	encoders		1244270	1					
ANR	1244301	CallExpression	emalloc ( sizeof ( HashTable ) )		1244270	1					
ANR	1244302	Callee	emalloc		1244270	0					
ANR	1244303	Identifier	emalloc		1244270	0					
ANR	1244304	ArgumentList	sizeof ( HashTable )		1244270	1					
ANR	1244305	Argument	sizeof ( HashTable )		1244270	0					
ANR	1244306	SizeofExpression	sizeof ( HashTable )		1244270	0					
ANR	1244307	Sizeof	sizeof		1244270	0					
ANR	1244308	SizeofOperand	HashTable		1244270	1					
ANR	1244309	ExpressionStatement	"zend_hash_init ( sdl -> encoders , 0 , NULL , delete_encoder , 0 )"	56:2:3741:3798	1244270	1	True				
ANR	1244310	CallExpression	"zend_hash_init ( sdl -> encoders , 0 , NULL , delete_encoder , 0 )"		1244270	0					
ANR	1244311	Callee	zend_hash_init		1244270	0					
ANR	1244312	Identifier	zend_hash_init		1244270	0					
ANR	1244313	ArgumentList	sdl -> encoders		1244270	1					
ANR	1244314	Argument	sdl -> encoders		1244270	0					
ANR	1244315	PtrMemberAccess	sdl -> encoders		1244270	0					
ANR	1244316	Identifier	sdl		1244270	0					
ANR	1244317	Identifier	encoders		1244270	1					
ANR	1244318	Argument	0		1244270	1					
ANR	1244319	PrimaryExpression	0		1244270	0					
ANR	1244320	Argument	NULL		1244270	2					
ANR	1244321	Identifier	NULL		1244270	0					
ANR	1244322	Argument	delete_encoder		1244270	3					
ANR	1244323	Identifier	delete_encoder		1244270	0					
ANR	1244324	Argument	0		1244270	4					
ANR	1244325	PrimaryExpression	0		1244270	0					
ANR	1244326	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) ns )"	58:1:3804:3840	1244270	3	True				
ANR	1244327	CallExpression	"smart_str_appends ( & nscat , ( char * ) ns )"		1244270	0					
ANR	1244328	Callee	smart_str_appends		1244270	0					
ANR	1244329	Identifier	smart_str_appends		1244270	0					
ANR	1244330	ArgumentList	& nscat		1244270	1					
ANR	1244331	Argument	& nscat		1244270	0					
ANR	1244332	UnaryOperationExpression	& nscat		1244270	0					
ANR	1244333	UnaryOperator	&		1244270	0					
ANR	1244334	Identifier	nscat		1244270	1					
ANR	1244335	Argument	( char * ) ns		1244270	1					
ANR	1244336	CastExpression	( char * ) ns		1244270	0					
ANR	1244337	CastTarget	char *		1244270	0					
ANR	1244338	Identifier	ns		1244270	1					
ANR	1244339	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	59:1:3843:3873	1244270	4	True				
ANR	1244340	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1244270	0					
ANR	1244341	Callee	smart_str_appendc		1244270	0					
ANR	1244342	Identifier	smart_str_appendc		1244270	0					
ANR	1244343	ArgumentList	& nscat		1244270	1					
ANR	1244344	Argument	& nscat		1244270	0					
ANR	1244345	UnaryOperationExpression	& nscat		1244270	0					
ANR	1244346	UnaryOperator	&		1244270	0					
ANR	1244347	Identifier	nscat		1244270	1					
ANR	1244348	Argument	':'		1244270	1					
ANR	1244349	PrimaryExpression	':'		1244270	0					
ANR	1244350	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) type )"	60:1:3876:3914	1244270	5	True				
ANR	1244351	CallExpression	"smart_str_appends ( & nscat , ( char * ) type )"		1244270	0					
ANR	1244352	Callee	smart_str_appends		1244270	0					
ANR	1244353	Identifier	smart_str_appends		1244270	0					
ANR	1244354	ArgumentList	& nscat		1244270	1					
ANR	1244355	Argument	& nscat		1244270	0					
ANR	1244356	UnaryOperationExpression	& nscat		1244270	0					
ANR	1244357	UnaryOperator	&		1244270	0					
ANR	1244358	Identifier	nscat		1244270	1					
ANR	1244359	Argument	( char * ) type		1244270	1					
ANR	1244360	CastExpression	( char * ) type		1244270	0					
ANR	1244361	CastTarget	char *		1244270	0					
ANR	1244362	Identifier	type		1244270	1					
ANR	1244363	ExpressionStatement	smart_str_0 ( & nscat )	61:1:3917:3936	1244270	6	True				
ANR	1244364	CallExpression	smart_str_0 ( & nscat )		1244270	0					
ANR	1244365	Callee	smart_str_0		1244270	0					
ANR	1244366	Identifier	smart_str_0		1244270	0					
ANR	1244367	ArgumentList	& nscat		1244270	1					
ANR	1244368	Argument	& nscat		1244270	0					
ANR	1244369	UnaryOperationExpression	& nscat		1244270	0					
ANR	1244370	UnaryOperator	&		1244270	0					
ANR	1244371	Identifier	nscat		1244270	1					
ANR	1244372	IfStatement	"if ( zend_hash_find ( sdl -> encoders , nscat . c , nscat . len + 1 , ( void * * ) & enc_ptr ) == SUCCESS )"		1244270	7					
ANR	1244373	Condition	"zend_hash_find ( sdl -> encoders , nscat . c , nscat . len + 1 , ( void * * ) & enc_ptr ) == SUCCESS"	62:5:3943:4024	1244270	0	True				
ANR	1244374	EqualityExpression	"zend_hash_find ( sdl -> encoders , nscat . c , nscat . len + 1 , ( void * * ) & enc_ptr ) == SUCCESS"		1244270	0		==			
ANR	1244375	CallExpression	"zend_hash_find ( sdl -> encoders , nscat . c , nscat . len + 1 , ( void * * ) & enc_ptr )"		1244270	0					
ANR	1244376	Callee	zend_hash_find		1244270	0					
ANR	1244377	Identifier	zend_hash_find		1244270	0					
ANR	1244378	ArgumentList	sdl -> encoders		1244270	1					
ANR	1244379	Argument	sdl -> encoders		1244270	0					
ANR	1244380	PtrMemberAccess	sdl -> encoders		1244270	0					
ANR	1244381	Identifier	sdl		1244270	0					
ANR	1244382	Identifier	encoders		1244270	1					
ANR	1244383	Argument	nscat . c		1244270	1					
ANR	1244384	MemberAccess	nscat . c		1244270	0					
ANR	1244385	Identifier	nscat		1244270	0					
ANR	1244386	Identifier	c		1244270	1					
ANR	1244387	Argument	nscat . len + 1		1244270	2					
ANR	1244388	AdditiveExpression	nscat . len + 1		1244270	0		+			
ANR	1244389	MemberAccess	nscat . len		1244270	0					
ANR	1244390	Identifier	nscat		1244270	0					
ANR	1244391	Identifier	len		1244270	1					
ANR	1244392	PrimaryExpression	1		1244270	1					
ANR	1244393	Argument	( void * * ) & enc_ptr		1244270	3					
ANR	1244394	CastExpression	( void * * ) & enc_ptr		1244270	0					
ANR	1244395	CastTarget	void * *		1244270	0					
ANR	1244396	UnaryOperationExpression	& enc_ptr		1244270	1					
ANR	1244397	UnaryOperator	&		1244270	0					
ANR	1244398	Identifier	enc_ptr		1244270	1					
ANR	1244399	Identifier	SUCCESS		1244270	1					
ANR	1244400	CompoundStatement		13:89:416:416	1244270	1					
ANR	1244401	ExpressionStatement	enc = * enc_ptr	63:2:4031:4045	1244270	0	True				
ANR	1244402	AssignmentExpression	enc = * enc_ptr		1244270	0		=			
ANR	1244403	Identifier	enc		1244270	0					
ANR	1244404	UnaryOperationExpression	* enc_ptr		1244270	1					
ANR	1244405	UnaryOperator	*		1244270	0					
ANR	1244406	Identifier	enc_ptr		1244270	1					
ANR	1244407	IfStatement	if ( enc -> details . ns )		1244270	1					
ANR	1244408	Condition	enc -> details . ns	64:6:4053:4067	1244270	0	True				
ANR	1244409	MemberAccess	enc -> details . ns		1244270	0					
ANR	1244410	PtrMemberAccess	enc -> details		1244270	0					
ANR	1244411	Identifier	enc		1244270	0					
ANR	1244412	Identifier	details		1244270	1					
ANR	1244413	Identifier	ns		1244270	1					
ANR	1244414	CompoundStatement		15:23:459:459	1244270	1					
ANR	1244415	ExpressionStatement	efree ( enc -> details . ns )	65:3:4075:4097	1244270	0	True				
ANR	1244416	CallExpression	efree ( enc -> details . ns )		1244270	0					
ANR	1244417	Callee	efree		1244270	0					
ANR	1244418	Identifier	efree		1244270	0					
ANR	1244419	ArgumentList	enc -> details . ns		1244270	1					
ANR	1244420	Argument	enc -> details . ns		1244270	0					
ANR	1244421	MemberAccess	enc -> details . ns		1244270	0					
ANR	1244422	PtrMemberAccess	enc -> details		1244270	0					
ANR	1244423	Identifier	enc		1244270	0					
ANR	1244424	Identifier	details		1244270	1					
ANR	1244425	Identifier	ns		1244270	1					
ANR	1244426	IfStatement	if ( enc -> details . type_str )		1244270	2					
ANR	1244427	Condition	enc -> details . type_str	67:6:4109:4129	1244270	0	True				
ANR	1244428	MemberAccess	enc -> details . type_str		1244270	0					
ANR	1244429	PtrMemberAccess	enc -> details		1244270	0					
ANR	1244430	Identifier	enc		1244270	0					
ANR	1244431	Identifier	details		1244270	1					
ANR	1244432	Identifier	type_str		1244270	1					
ANR	1244433	CompoundStatement		18:29:521:521	1244270	1					
ANR	1244434	ExpressionStatement	efree ( enc -> details . type_str )	68:3:4137:4165	1244270	0	True				
ANR	1244435	CallExpression	efree ( enc -> details . type_str )		1244270	0					
ANR	1244436	Callee	efree		1244270	0					
ANR	1244437	Identifier	efree		1244270	0					
ANR	1244438	ArgumentList	enc -> details . type_str		1244270	1					
ANR	1244439	Argument	enc -> details . type_str		1244270	0					
ANR	1244440	MemberAccess	enc -> details . type_str		1244270	0					
ANR	1244441	PtrMemberAccess	enc -> details		1244270	0					
ANR	1244442	Identifier	enc		1244270	0					
ANR	1244443	Identifier	details		1244270	1					
ANR	1244444	Identifier	type_str		1244270	1					
ANR	1244445	ElseStatement	else		1244270	0					
ANR	1244446	CompoundStatement		21:8:568:568	1244270	0					
ANR	1244447	ExpressionStatement	enc_ptr = NULL	71:2:4183:4197	1244270	0	True				
ANR	1244448	AssignmentExpression	enc_ptr = NULL		1244270	0		=			
ANR	1244449	Identifier	enc_ptr		1244270	0					
ANR	1244450	Identifier	NULL		1244270	1					
ANR	1244451	ExpressionStatement	enc = emalloc ( sizeof ( encode ) )	72:2:4201:4230	1244270	1	True				
ANR	1244452	AssignmentExpression	enc = emalloc ( sizeof ( encode ) )		1244270	0		=			
ANR	1244453	Identifier	enc		1244270	0					
ANR	1244454	CallExpression	emalloc ( sizeof ( encode ) )		1244270	1					
ANR	1244455	Callee	emalloc		1244270	0					
ANR	1244456	Identifier	emalloc		1244270	0					
ANR	1244457	ArgumentList	sizeof ( encode )		1244270	1					
ANR	1244458	Argument	sizeof ( encode )		1244270	0					
ANR	1244459	SizeofExpression	sizeof ( encode )		1244270	0					
ANR	1244460	Sizeof	sizeof		1244270	0					
ANR	1244461	SizeofOperand	encode		1244270	1					
ANR	1244462	ExpressionStatement	"memset ( enc , 0 , sizeof ( encode ) )"	74:1:4236:4266	1244270	8	True				
ANR	1244463	CallExpression	"memset ( enc , 0 , sizeof ( encode ) )"		1244270	0					
ANR	1244464	Callee	memset		1244270	0					
ANR	1244465	Identifier	memset		1244270	0					
ANR	1244466	ArgumentList	enc		1244270	1					
ANR	1244467	Argument	enc		1244270	0					
ANR	1244468	Identifier	enc		1244270	0					
ANR	1244469	Argument	0		1244270	1					
ANR	1244470	PrimaryExpression	0		1244270	0					
ANR	1244471	Argument	sizeof ( encode )		1244270	2					
ANR	1244472	SizeofExpression	sizeof ( encode )		1244270	0					
ANR	1244473	Sizeof	sizeof		1244270	0					
ANR	1244474	SizeofOperand	encode		1244270	1					
ANR	1244475	ExpressionStatement	enc -> details . ns = estrdup ( ( char * ) ns )	76:1:4270:4306	1244270	9	True				
ANR	1244476	AssignmentExpression	enc -> details . ns = estrdup ( ( char * ) ns )		1244270	0		=			
ANR	1244477	MemberAccess	enc -> details . ns		1244270	0					
ANR	1244478	PtrMemberAccess	enc -> details		1244270	0					
ANR	1244479	Identifier	enc		1244270	0					
ANR	1244480	Identifier	details		1244270	1					
ANR	1244481	Identifier	ns		1244270	1					
ANR	1244482	CallExpression	estrdup ( ( char * ) ns )		1244270	1					
ANR	1244483	Callee	estrdup		1244270	0					
ANR	1244484	Identifier	estrdup		1244270	0					
ANR	1244485	ArgumentList	( char * ) ns		1244270	1					
ANR	1244486	Argument	( char * ) ns		1244270	0					
ANR	1244487	CastExpression	( char * ) ns		1244270	0					
ANR	1244488	CastTarget	char *		1244270	0					
ANR	1244489	Identifier	ns		1244270	1					
ANR	1244490	ExpressionStatement	enc -> details . type_str = estrdup ( ( char * ) type )	77:1:4309:4353	1244270	10	True				
ANR	1244491	AssignmentExpression	enc -> details . type_str = estrdup ( ( char * ) type )		1244270	0		=			
ANR	1244492	MemberAccess	enc -> details . type_str		1244270	0					
ANR	1244493	PtrMemberAccess	enc -> details		1244270	0					
ANR	1244494	Identifier	enc		1244270	0					
ANR	1244495	Identifier	details		1244270	1					
ANR	1244496	Identifier	type_str		1244270	1					
ANR	1244497	CallExpression	estrdup ( ( char * ) type )		1244270	1					
ANR	1244498	Callee	estrdup		1244270	0					
ANR	1244499	Identifier	estrdup		1244270	0					
ANR	1244500	ArgumentList	( char * ) type		1244270	1					
ANR	1244501	Argument	( char * ) type		1244270	0					
ANR	1244502	CastExpression	( char * ) type		1244270	0					
ANR	1244503	CastTarget	char *		1244270	0					
ANR	1244504	Identifier	type		1244270	1					
ANR	1244505	ExpressionStatement	enc -> details . sdl_type = cur_type	78:1:4356:4388	1244270	11	True				
ANR	1244506	AssignmentExpression	enc -> details . sdl_type = cur_type		1244270	0		=			
ANR	1244507	MemberAccess	enc -> details . sdl_type		1244270	0					
ANR	1244508	PtrMemberAccess	enc -> details		1244270	0					
ANR	1244509	Identifier	enc		1244270	0					
ANR	1244510	Identifier	details		1244270	1					
ANR	1244511	Identifier	sdl_type		1244270	1					
ANR	1244512	Identifier	cur_type		1244270	1					
ANR	1244513	ExpressionStatement	enc -> to_xml = sdl_guess_convert_xml	79:1:4391:4426	1244270	12	True				
ANR	1244514	AssignmentExpression	enc -> to_xml = sdl_guess_convert_xml		1244270	0		=			
ANR	1244515	PtrMemberAccess	enc -> to_xml		1244270	0					
ANR	1244516	Identifier	enc		1244270	0					
ANR	1244517	Identifier	to_xml		1244270	1					
ANR	1244518	Identifier	sdl_guess_convert_xml		1244270	1					
ANR	1244519	ExpressionStatement	enc -> to_zval = sdl_guess_convert_zval	80:1:4429:4466	1244270	13	True				
ANR	1244520	AssignmentExpression	enc -> to_zval = sdl_guess_convert_zval		1244270	0		=			
ANR	1244521	PtrMemberAccess	enc -> to_zval		1244270	0					
ANR	1244522	Identifier	enc		1244270	0					
ANR	1244523	Identifier	to_zval		1244270	1					
ANR	1244524	Identifier	sdl_guess_convert_zval		1244270	1					
ANR	1244525	IfStatement	if ( enc_ptr == NULL )		1244270	14					
ANR	1244526	Condition	enc_ptr == NULL	82:5:4474:4488	1244270	0	True				
ANR	1244527	EqualityExpression	enc_ptr == NULL		1244270	0		==			
ANR	1244528	Identifier	enc_ptr		1244270	0					
ANR	1244529	Identifier	NULL		1244270	1					
ANR	1244530	CompoundStatement		33:22:880:880	1244270	1					
ANR	1244531	ExpressionStatement	"zend_hash_update ( sdl -> encoders , nscat . c , nscat . len + 1 , & enc , sizeof ( encodePtr ) , NULL )"	83:2:4495:4581	1244270	0	True				
ANR	1244532	CallExpression	"zend_hash_update ( sdl -> encoders , nscat . c , nscat . len + 1 , & enc , sizeof ( encodePtr ) , NULL )"		1244270	0					
ANR	1244533	Callee	zend_hash_update		1244270	0					
ANR	1244534	Identifier	zend_hash_update		1244270	0					
ANR	1244535	ArgumentList	sdl -> encoders		1244270	1					
ANR	1244536	Argument	sdl -> encoders		1244270	0					
ANR	1244537	PtrMemberAccess	sdl -> encoders		1244270	0					
ANR	1244538	Identifier	sdl		1244270	0					
ANR	1244539	Identifier	encoders		1244270	1					
ANR	1244540	Argument	nscat . c		1244270	1					
ANR	1244541	MemberAccess	nscat . c		1244270	0					
ANR	1244542	Identifier	nscat		1244270	0					
ANR	1244543	Identifier	c		1244270	1					
ANR	1244544	Argument	nscat . len + 1		1244270	2					
ANR	1244545	AdditiveExpression	nscat . len + 1		1244270	0		+			
ANR	1244546	MemberAccess	nscat . len		1244270	0					
ANR	1244547	Identifier	nscat		1244270	0					
ANR	1244548	Identifier	len		1244270	1					
ANR	1244549	PrimaryExpression	1		1244270	1					
ANR	1244550	Argument	& enc		1244270	3					
ANR	1244551	UnaryOperationExpression	& enc		1244270	0					
ANR	1244552	UnaryOperator	&		1244270	0					
ANR	1244553	Identifier	enc		1244270	1					
ANR	1244554	Argument	sizeof ( encodePtr )		1244270	4					
ANR	1244555	SizeofExpression	sizeof ( encodePtr )		1244270	0					
ANR	1244556	Sizeof	sizeof		1244270	0					
ANR	1244557	SizeofOperand	encodePtr		1244270	1					
ANR	1244558	Argument	NULL		1244270	5					
ANR	1244559	Identifier	NULL		1244270	0					
ANR	1244560	ExpressionStatement	smart_str_free ( & nscat )	85:1:4587:4609	1244270	15	True				
ANR	1244561	CallExpression	smart_str_free ( & nscat )		1244270	0					
ANR	1244562	Callee	smart_str_free		1244270	0					
ANR	1244563	Identifier	smart_str_free		1244270	0					
ANR	1244564	ArgumentList	& nscat		1244270	1					
ANR	1244565	Argument	& nscat		1244270	0					
ANR	1244566	UnaryOperationExpression	& nscat		1244270	0					
ANR	1244567	UnaryOperator	&		1244270	0					
ANR	1244568	Identifier	nscat		1244270	1					
ANR	1244569	ReturnStatement	return enc ;	86:1:4612:4622	1244270	16	True				
ANR	1244570	Identifier	enc		1244270	0					
ANR	1244571	ReturnType	static encodePtr		1244270	1					
ANR	1244572	Identifier	create_encoder		1244270	2					
ANR	1244573	ParameterList	"sdlPtr sdl , sdlTypePtr cur_type , const xmlChar * ns , const xmlChar * type"		1244270	3					
ANR	1244574	Parameter	sdlPtr sdl	49:32:3537:3546	1244270	0	True				
ANR	1244575	ParameterType	sdlPtr		1244270	0					
ANR	1244576	Identifier	sdl		1244270	1					
ANR	1244577	Parameter	sdlTypePtr cur_type	49:44:3549:3567	1244270	1	True				
ANR	1244578	ParameterType	sdlTypePtr		1244270	0					
ANR	1244579	Identifier	cur_type		1244270	1					
ANR	1244580	Parameter	const xmlChar * ns	49:65:3570:3586	1244270	2	True				
ANR	1244581	ParameterType	const xmlChar *		1244270	0					
ANR	1244582	Identifier	ns		1244270	1					
ANR	1244583	Parameter	const xmlChar * type	49:84:3589:3607	1244270	3	True				
ANR	1244584	ParameterType	const xmlChar *		1244270	0					
ANR	1244585	Identifier	type		1244270	1					
ANR	1244586	CFGEntryNode	ENTRY		1244270		True				
ANR	1244587	CFGExitNode	EXIT		1244270		True				
ANR	1244588	Symbol	delete_encoder		1244270						
ANR	1244589	Symbol	ns		1244270						
ANR	1244590	Symbol	sdl_guess_convert_xml		1244270						
ANR	1244591	Symbol	& enc		1244270						
ANR	1244592	Symbol	enc -> details		1244270						
ANR	1244593	Symbol	type		1244270						
ANR	1244594	Symbol	nscat . c		1244270						
ANR	1244595	Symbol	zend_hash_find		1244270						
ANR	1244596	Symbol	enc -> details . type_str		1244270						
ANR	1244597	Symbol	emalloc		1244270						
ANR	1244598	Symbol	* enc_ptr		1244270						
ANR	1244599	Symbol	enc		1244270						
ANR	1244600	Symbol	cur_type		1244270						
ANR	1244601	Symbol	sdl_guess_convert_zval		1244270						
ANR	1244602	Symbol	enc_ptr		1244270						
ANR	1244603	Symbol	NULL		1244270						
ANR	1244604	Symbol	SUCCESS		1244270						
ANR	1244605	Symbol	* sdl		1244270						
ANR	1244606	Symbol	nscat . len		1244270						
ANR	1244607	Symbol	enc -> details . sdl_type		1244270						
ANR	1244608	Symbol	enc -> to_xml		1244270						
ANR	1244609	Symbol	enc -> to_zval		1244270						
ANR	1244610	Symbol	nscat		1244270						
ANR	1244611	Symbol	& enc_ptr		1244270						
ANR	1244612	Symbol	sdl -> encoders		1244270						
ANR	1244613	Symbol	estrdup		1244270						
ANR	1244614	Symbol	sdl		1244270						
ANR	1244615	Symbol	enc -> details . ns		1244270						
ANR	1244616	Symbol	* enc		1244270						
ANR	1244617	Symbol	& nscat		1244270						
ANR	1244618	Function	get_create_encoder	89:0:4627:4882							
ANR	1244619	FunctionDef	"get_create_encoder (sdlPtr sdl , sdlTypePtr cur_type , const xmlChar * ns , const xmlChar * type)"		1244618	0					
ANR	1244620	CompoundStatement		90:0:4736:4882	1244618	0					
ANR	1244621	IdentifierDeclStatement	"encodePtr enc = get_encoder ( sdl , ( char * ) ns , ( char * ) type ) ;"	91:1:4739:4795	1244618	0	True				
ANR	1244622	IdentifierDecl	"enc = get_encoder ( sdl , ( char * ) ns , ( char * ) type )"		1244618	0					
ANR	1244623	IdentifierDeclType	encodePtr		1244618	0					
ANR	1244624	Identifier	enc		1244618	1					
ANR	1244625	AssignmentExpression	"enc = get_encoder ( sdl , ( char * ) ns , ( char * ) type )"		1244618	2		=			
ANR	1244626	Identifier	enc		1244618	0					
ANR	1244627	CallExpression	"get_encoder ( sdl , ( char * ) ns , ( char * ) type )"		1244618	1					
ANR	1244628	Callee	get_encoder		1244618	0					
ANR	1244629	Identifier	get_encoder		1244618	0					
ANR	1244630	ArgumentList	sdl		1244618	1					
ANR	1244631	Argument	sdl		1244618	0					
ANR	1244632	Identifier	sdl		1244618	0					
ANR	1244633	Argument	( char * ) ns		1244618	1					
ANR	1244634	CastExpression	( char * ) ns		1244618	0					
ANR	1244635	CastTarget	char *		1244618	0					
ANR	1244636	Identifier	ns		1244618	1					
ANR	1244637	Argument	( char * ) type		1244618	2					
ANR	1244638	CastExpression	( char * ) type		1244618	0					
ANR	1244639	CastTarget	char *		1244618	0					
ANR	1244640	Identifier	type		1244618	1					
ANR	1244641	IfStatement	if ( enc == NULL )		1244618	1					
ANR	1244642	Condition	enc == NULL	92:5:4802:4812	1244618	0	True				
ANR	1244643	EqualityExpression	enc == NULL		1244618	0		==			
ANR	1244644	Identifier	enc		1244618	0					
ANR	1244645	Identifier	NULL		1244618	1					
ANR	1244646	CompoundStatement		3:18:78:78	1244618	1					
ANR	1244647	ExpressionStatement	"enc = create_encoder ( sdl , cur_type , ns , type )"	93:2:4819:4864	1244618	0	True				
ANR	1244648	AssignmentExpression	"enc = create_encoder ( sdl , cur_type , ns , type )"		1244618	0		=			
ANR	1244649	Identifier	enc		1244618	0					
ANR	1244650	CallExpression	"create_encoder ( sdl , cur_type , ns , type )"		1244618	1					
ANR	1244651	Callee	create_encoder		1244618	0					
ANR	1244652	Identifier	create_encoder		1244618	0					
ANR	1244653	ArgumentList	sdl		1244618	1					
ANR	1244654	Argument	sdl		1244618	0					
ANR	1244655	Identifier	sdl		1244618	0					
ANR	1244656	Argument	cur_type		1244618	1					
ANR	1244657	Identifier	cur_type		1244618	0					
ANR	1244658	Argument	ns		1244618	2					
ANR	1244659	Identifier	ns		1244618	0					
ANR	1244660	Argument	type		1244618	3					
ANR	1244661	Identifier	type		1244618	0					
ANR	1244662	ReturnStatement	return enc ;	95:1:4870:4880	1244618	2	True				
ANR	1244663	Identifier	enc		1244618	0					
ANR	1244664	ReturnType	static encodePtr		1244618	1					
ANR	1244665	Identifier	get_create_encoder		1244618	2					
ANR	1244666	ParameterList	"sdlPtr sdl , sdlTypePtr cur_type , const xmlChar * ns , const xmlChar * type"		1244618	3					
ANR	1244667	Parameter	sdlPtr sdl	89:36:4663:4672	1244618	0	True				
ANR	1244668	ParameterType	sdlPtr		1244618	0					
ANR	1244669	Identifier	sdl		1244618	1					
ANR	1244670	Parameter	sdlTypePtr cur_type	89:48:4675:4693	1244618	1	True				
ANR	1244671	ParameterType	sdlTypePtr		1244618	0					
ANR	1244672	Identifier	cur_type		1244618	1					
ANR	1244673	Parameter	const xmlChar * ns	89:69:4696:4712	1244618	2	True				
ANR	1244674	ParameterType	const xmlChar *		1244618	0					
ANR	1244675	Identifier	ns		1244618	1					
ANR	1244676	Parameter	const xmlChar * type	89:88:4715:4733	1244618	3	True				
ANR	1244677	ParameterType	const xmlChar *		1244618	0					
ANR	1244678	Identifier	type		1244618	1					
ANR	1244679	CFGEntryNode	ENTRY		1244618		True				
ANR	1244680	CFGExitNode	EXIT		1244618		True				
ANR	1244681	Symbol	get_encoder		1244618						
ANR	1244682	Symbol	NULL		1244618						
ANR	1244683	Symbol	ns		1244618						
ANR	1244684	Symbol	sdl		1244618						
ANR	1244685	Symbol	enc		1244618						
ANR	1244686	Symbol	type		1244618						
ANR	1244687	Symbol	create_encoder		1244618						
ANR	1244688	Symbol	cur_type		1244618						
ANR	1244689	Function	schema_load_file	98:0:4885:6792							
ANR	1244690	FunctionDef	"schema_load_file (sdlCtx * ctx , xmlAttrPtr ns , xmlChar * location , xmlAttrPtr tns , int import TSRMLS_DC)"		1244689	0					
ANR	1244691	CompoundStatement		98:114:4999:6792	1244689	0					
ANR	1244692	IfStatement	"if ( location != NULL && ! zend_hash_exists ( & ctx -> docs , ( char * ) location , xmlStrlen ( location ) + 1 ) )"		1244689	0					
ANR	1244693	Condition	"location != NULL && ! zend_hash_exists ( & ctx -> docs , ( char * ) location , xmlStrlen ( location ) + 1 )"	99:5:5006:5099	1244689	0	True				
ANR	1244694	AndExpression	"location != NULL && ! zend_hash_exists ( & ctx -> docs , ( char * ) location , xmlStrlen ( location ) + 1 )"		1244689	0		&&			
ANR	1244695	EqualityExpression	location != NULL		1244689	0		!=			
ANR	1244696	Identifier	location		1244689	0					
ANR	1244697	Identifier	NULL		1244689	1					
ANR	1244698	UnaryOperationExpression	"! zend_hash_exists ( & ctx -> docs , ( char * ) location , xmlStrlen ( location ) + 1 )"		1244689	1					
ANR	1244699	UnaryOperator	!		1244689	0					
ANR	1244700	CallExpression	"zend_hash_exists ( & ctx -> docs , ( char * ) location , xmlStrlen ( location ) + 1 )"		1244689	1					
ANR	1244701	Callee	zend_hash_exists		1244689	0					
ANR	1244702	Identifier	zend_hash_exists		1244689	0					
ANR	1244703	ArgumentList	& ctx -> docs		1244689	1					
ANR	1244704	Argument	& ctx -> docs		1244689	0					
ANR	1244705	UnaryOperationExpression	& ctx -> docs		1244689	0					
ANR	1244706	UnaryOperator	&		1244689	0					
ANR	1244707	PtrMemberAccess	ctx -> docs		1244689	1					
ANR	1244708	Identifier	ctx		1244689	0					
ANR	1244709	Identifier	docs		1244689	1					
ANR	1244710	Argument	( char * ) location		1244689	1					
ANR	1244711	CastExpression	( char * ) location		1244689	0					
ANR	1244712	CastTarget	char *		1244689	0					
ANR	1244713	Identifier	location		1244689	1					
ANR	1244714	Argument	xmlStrlen ( location ) + 1		1244689	2					
ANR	1244715	AdditiveExpression	xmlStrlen ( location ) + 1		1244689	0		+			
ANR	1244716	CallExpression	xmlStrlen ( location )		1244689	0					
ANR	1244717	Callee	xmlStrlen		1244689	0					
ANR	1244718	Identifier	xmlStrlen		1244689	0					
ANR	1244719	ArgumentList	location		1244689	1					
ANR	1244720	Argument	location		1244689	0					
ANR	1244721	Identifier	location		1244689	0					
ANR	1244722	PrimaryExpression	1		1244689	1					
ANR	1244723	CompoundStatement		6:2:144:162	1244689	1					
ANR	1244724	IdentifierDeclStatement	xmlDocPtr doc ;	101:2:5106:5119	1244689	0	True				
ANR	1244725	IdentifierDecl	doc		1244689	0					
ANR	1244726	IdentifierDeclType	xmlDocPtr		1244689	0					
ANR	1244727	Identifier	doc		1244689	1					
ANR	1244728	IdentifierDeclStatement	xmlNodePtr schema ;	102:2:5123:5140	1244689	1	True				
ANR	1244729	IdentifierDecl	schema		1244689	0					
ANR	1244730	IdentifierDeclType	xmlNodePtr		1244689	0					
ANR	1244731	Identifier	schema		1244689	1					
ANR	1244732	IdentifierDeclStatement	xmlAttrPtr new_tns ;	103:2:5144:5162	1244689	2	True				
ANR	1244733	IdentifierDecl	new_tns		1244689	0					
ANR	1244734	IdentifierDeclType	xmlAttrPtr		1244689	0					
ANR	1244735	Identifier	new_tns		1244689	1					
ANR	1244736	Statement	sdl_set_uri_credentials	105:2:5167:5189	1244689	3	True				
ANR	1244737	Statement	(	105:25:5190:5190	1244689	4	True				
ANR	1244738	Statement	ctx	105:26:5191:5193	1244689	5	True				
ANR	1244739	Statement	","	105:29:5194:5194	1244689	6	True				
ANR	1244740	Statement	(	105:31:5196:5196	1244689	7	True				
ANR	1244741	Statement	char	105:32:5197:5200	1244689	8	True				
ANR	1244742	Statement	*	105:36:5201:5201	1244689	9	True				
ANR	1244743	Statement	)	105:37:5202:5202	1244689	10	True				
ANR	1244744	Statement	location	105:38:5203:5210	1244689	11	True				
ANR	1244745	Statement	TSRMLS_CC	105:47:5212:5220	1244689	12	True				
ANR	1244746	Statement	)	105:56:5221:5221	1244689	13	True				
ANR	1244747	ExpressionStatement		105:57:5222:5222	1244689	14	True				
ANR	1244748	Statement	doc	106:2:5226:5228	1244689	15	True				
ANR	1244749	Statement	=	106:6:5230:5230	1244689	16	True				
ANR	1244750	Statement	soap_xmlParseFile	106:8:5232:5248	1244689	17	True				
ANR	1244751	Statement	(	106:25:5249:5249	1244689	18	True				
ANR	1244752	Statement	(	106:26:5250:5250	1244689	19	True				
ANR	1244753	Statement	char	106:27:5251:5254	1244689	20	True				
ANR	1244754	Statement	*	106:31:5255:5255	1244689	21	True				
ANR	1244755	Statement	)	106:32:5256:5256	1244689	22	True				
ANR	1244756	Statement	location	106:33:5257:5264	1244689	23	True				
ANR	1244757	Statement	TSRMLS_CC	106:42:5266:5274	1244689	24	True				
ANR	1244758	Statement	)	106:51:5275:5275	1244689	25	True				
ANR	1244759	ExpressionStatement		106:52:5276:5276	1244689	26	True				
ANR	1244760	Statement	sdl_restore_uri_credentials	107:2:5280:5306	1244689	27	True				
ANR	1244761	Statement	(	107:29:5307:5307	1244689	28	True				
ANR	1244762	Statement	ctx	107:30:5308:5310	1244689	29	True				
ANR	1244763	Statement	TSRMLS_CC	107:34:5312:5320	1244689	30	True				
ANR	1244764	Statement	)	107:43:5321:5321	1244689	31	True				
ANR	1244765	ExpressionStatement		107:44:5322:5322	1244689	32	True				
ANR	1244766	IfStatement	if ( doc == NULL )		1244689	33					
ANR	1244767	Condition	doc == NULL	109:6:5331:5341	1244689	0	True				
ANR	1244768	EqualityExpression	doc == NULL		1244689	0		==			
ANR	1244769	Identifier	doc		1244689	0					
ANR	1244770	Identifier	NULL		1244689	1					
ANR	1244771	CompoundStatement		12:19:344:344	1244689	1					
ANR	1244772	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: can't import schema from '%s'"" , location )"	110:3:5349:5428	1244689	0	True				
ANR	1244773	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: can't import schema from '%s'"" , location )"		1244689	0					
ANR	1244774	Callee	soap_error1		1244689	0					
ANR	1244775	Identifier	soap_error1		1244689	0					
ANR	1244776	ArgumentList	E_ERROR		1244689	1					
ANR	1244777	Argument	E_ERROR		1244689	0					
ANR	1244778	Identifier	E_ERROR		1244689	0					
ANR	1244779	Argument	"""Parsing Schema: can't import schema from '%s'"""		1244689	1					
ANR	1244780	PrimaryExpression	"""Parsing Schema: can't import schema from '%s'"""		1244689	0					
ANR	1244781	Argument	location		1244689	2					
ANR	1244782	Identifier	location		1244689	0					
ANR	1244783	ExpressionStatement	"schema = get_node ( doc -> children , ""schema"" )"	112:2:5436:5478	1244689	34	True				
ANR	1244784	AssignmentExpression	"schema = get_node ( doc -> children , ""schema"" )"		1244689	0		=			
ANR	1244785	Identifier	schema		1244689	0					
ANR	1244786	CallExpression	"get_node ( doc -> children , ""schema"" )"		1244689	1					
ANR	1244787	Callee	get_node		1244689	0					
ANR	1244788	Identifier	get_node		1244689	0					
ANR	1244789	ArgumentList	doc -> children		1244689	1					
ANR	1244790	Argument	doc -> children		1244689	0					
ANR	1244791	PtrMemberAccess	doc -> children		1244689	0					
ANR	1244792	Identifier	doc		1244689	0					
ANR	1244793	Identifier	children		1244689	1					
ANR	1244794	Argument	"""schema"""		1244689	1					
ANR	1244795	PrimaryExpression	"""schema"""		1244689	0					
ANR	1244796	IfStatement	if ( schema == NULL )		1244689	35					
ANR	1244797	Condition	schema == NULL	113:6:5486:5499	1244689	0	True				
ANR	1244798	EqualityExpression	schema == NULL		1244689	0		==			
ANR	1244799	Identifier	schema		1244689	0					
ANR	1244800	Identifier	NULL		1244689	1					
ANR	1244801	CompoundStatement		16:22:502:502	1244689	1					
ANR	1244802	ExpressionStatement	xmlFreeDoc ( doc )	114:3:5507:5522	1244689	0	True				
ANR	1244803	CallExpression	xmlFreeDoc ( doc )		1244689	0					
ANR	1244804	Callee	xmlFreeDoc		1244689	0					
ANR	1244805	Identifier	xmlFreeDoc		1244689	0					
ANR	1244806	ArgumentList	doc		1244689	1					
ANR	1244807	Argument	doc		1244689	0					
ANR	1244808	Identifier	doc		1244689	0					
ANR	1244809	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: can't import schema from '%s'"" , location )"	115:3:5527:5606	1244689	1	True				
ANR	1244810	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: can't import schema from '%s'"" , location )"		1244689	0					
ANR	1244811	Callee	soap_error1		1244689	0					
ANR	1244812	Identifier	soap_error1		1244689	0					
ANR	1244813	ArgumentList	E_ERROR		1244689	1					
ANR	1244814	Argument	E_ERROR		1244689	0					
ANR	1244815	Identifier	E_ERROR		1244689	0					
ANR	1244816	Argument	"""Parsing Schema: can't import schema from '%s'"""		1244689	1					
ANR	1244817	PrimaryExpression	"""Parsing Schema: can't import schema from '%s'"""		1244689	0					
ANR	1244818	Argument	location		1244689	2					
ANR	1244819	Identifier	location		1244689	0					
ANR	1244820	ExpressionStatement	"new_tns = get_attribute ( schema -> properties , ""targetNamespace"" )"	117:2:5614:5676	1244689	36	True				
ANR	1244821	AssignmentExpression	"new_tns = get_attribute ( schema -> properties , ""targetNamespace"" )"		1244689	0		=			
ANR	1244822	Identifier	new_tns		1244689	0					
ANR	1244823	CallExpression	"get_attribute ( schema -> properties , ""targetNamespace"" )"		1244689	1					
ANR	1244824	Callee	get_attribute		1244689	0					
ANR	1244825	Identifier	get_attribute		1244689	0					
ANR	1244826	ArgumentList	schema -> properties		1244689	1					
ANR	1244827	Argument	schema -> properties		1244689	0					
ANR	1244828	PtrMemberAccess	schema -> properties		1244689	0					
ANR	1244829	Identifier	schema		1244689	0					
ANR	1244830	Identifier	properties		1244689	1					
ANR	1244831	Argument	"""targetNamespace"""		1244689	1					
ANR	1244832	PrimaryExpression	"""targetNamespace"""		1244689	0					
ANR	1244833	IfStatement	if ( import )		1244689	37					
ANR	1244834	Condition	import	118:6:5684:5689	1244689	0	True				
ANR	1244835	Identifier	import		1244689	0					
ANR	1244836	CompoundStatement		21:14:692:692	1244689	1					
ANR	1244837	IfStatement	"if ( ns != NULL && ( new_tns == NULL || xmlStrcmp ( ns -> children -> content , new_tns -> children -> content ) != 0 ) )"		1244689	0					
ANR	1244838	Condition	"ns != NULL && ( new_tns == NULL || xmlStrcmp ( ns -> children -> content , new_tns -> children -> content ) != 0 )"	119:7:5701:5800	1244689	0	True				
ANR	1244839	AndExpression	"ns != NULL && ( new_tns == NULL || xmlStrcmp ( ns -> children -> content , new_tns -> children -> content ) != 0 )"		1244689	0		&&			
ANR	1244840	EqualityExpression	ns != NULL		1244689	0		!=			
ANR	1244841	Identifier	ns		1244689	0					
ANR	1244842	Identifier	NULL		1244689	1					
ANR	1244843	OrExpression	"new_tns == NULL || xmlStrcmp ( ns -> children -> content , new_tns -> children -> content ) != 0"		1244689	1		||			
ANR	1244844	EqualityExpression	new_tns == NULL		1244689	0		==			
ANR	1244845	Identifier	new_tns		1244689	0					
ANR	1244846	Identifier	NULL		1244689	1					
ANR	1244847	EqualityExpression	"xmlStrcmp ( ns -> children -> content , new_tns -> children -> content ) != 0"		1244689	1		!=			
ANR	1244848	CallExpression	"xmlStrcmp ( ns -> children -> content , new_tns -> children -> content )"		1244689	0					
ANR	1244849	Callee	xmlStrcmp		1244689	0					
ANR	1244850	Identifier	xmlStrcmp		1244689	0					
ANR	1244851	ArgumentList	ns -> children -> content		1244689	1					
ANR	1244852	Argument	ns -> children -> content		1244689	0					
ANR	1244853	PtrMemberAccess	ns -> children -> content		1244689	0					
ANR	1244854	PtrMemberAccess	ns -> children		1244689	0					
ANR	1244855	Identifier	ns		1244689	0					
ANR	1244856	Identifier	children		1244689	1					
ANR	1244857	Identifier	content		1244689	1					
ANR	1244858	Argument	new_tns -> children -> content		1244689	1					
ANR	1244859	PtrMemberAccess	new_tns -> children -> content		1244689	0					
ANR	1244860	PtrMemberAccess	new_tns -> children		1244689	0					
ANR	1244861	Identifier	new_tns		1244689	0					
ANR	1244862	Identifier	children		1244689	1					
ANR	1244863	Identifier	content		1244689	1					
ANR	1244864	PrimaryExpression	0		1244689	1					
ANR	1244865	CompoundStatement		22:109:803:803	1244689	1					
ANR	1244866	ExpressionStatement	xmlFreeDoc ( doc )	120:4:5809:5824	1244689	0	True				
ANR	1244867	CallExpression	xmlFreeDoc ( doc )		1244689	0					
ANR	1244868	Callee	xmlFreeDoc		1244689	0					
ANR	1244869	Identifier	xmlFreeDoc		1244689	0					
ANR	1244870	ArgumentList	doc		1244689	1					
ANR	1244871	Argument	doc		1244689	0					
ANR	1244872	Identifier	doc		1244689	0					
ANR	1244873	ExpressionStatement	"soap_error2 ( E_ERROR , ""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"" , location , ns -> children -> content )"	121:4:5830:5967	1244689	1	True				
ANR	1244874	CallExpression	"soap_error2 ( E_ERROR , ""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"" , location , ns -> children -> content )"		1244689	0					
ANR	1244875	Callee	soap_error2		1244689	0					
ANR	1244876	Identifier	soap_error2		1244689	0					
ANR	1244877	ArgumentList	E_ERROR		1244689	1					
ANR	1244878	Argument	E_ERROR		1244689	0					
ANR	1244879	Identifier	E_ERROR		1244689	0					
ANR	1244880	Argument	"""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"""		1244689	1					
ANR	1244881	PrimaryExpression	"""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"""		1244689	0					
ANR	1244882	Argument	location		1244689	2					
ANR	1244883	Identifier	location		1244689	0					
ANR	1244884	Argument	ns -> children -> content		1244689	3					
ANR	1244885	PtrMemberAccess	ns -> children -> content		1244689	0					
ANR	1244886	PtrMemberAccess	ns -> children		1244689	0					
ANR	1244887	Identifier	ns		1244689	0					
ANR	1244888	Identifier	children		1244689	1					
ANR	1244889	Identifier	content		1244689	1					
ANR	1244890	IfStatement	if ( ns == NULL && new_tns != NULL )		1244689	1					
ANR	1244891	Condition	ns == NULL && new_tns != NULL	123:7:5981:6009	1244689	0	True				
ANR	1244892	AndExpression	ns == NULL && new_tns != NULL		1244689	0		&&			
ANR	1244893	EqualityExpression	ns == NULL		1244689	0		==			
ANR	1244894	Identifier	ns		1244689	0					
ANR	1244895	Identifier	NULL		1244689	1					
ANR	1244896	EqualityExpression	new_tns != NULL		1244689	1		!=			
ANR	1244897	Identifier	new_tns		1244689	0					
ANR	1244898	Identifier	NULL		1244689	1					
ANR	1244899	CompoundStatement		26:38:1012:1012	1244689	1					
ANR	1244900	ExpressionStatement	xmlFreeDoc ( doc )	124:4:6018:6033	1244689	0	True				
ANR	1244901	CallExpression	xmlFreeDoc ( doc )		1244689	0					
ANR	1244902	Callee	xmlFreeDoc		1244689	0					
ANR	1244903	Identifier	xmlFreeDoc		1244689	0					
ANR	1244904	ArgumentList	doc		1244689	1					
ANR	1244905	Argument	doc		1244689	0					
ANR	1244906	Identifier	doc		1244689	0					
ANR	1244907	ExpressionStatement	"soap_error2 ( E_ERROR , ""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"" , location , new_tns -> children -> content )"	125:4:6039:6181	1244689	1	True				
ANR	1244908	CallExpression	"soap_error2 ( E_ERROR , ""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"" , location , new_tns -> children -> content )"		1244689	0					
ANR	1244909	Callee	soap_error2		1244689	0					
ANR	1244910	Identifier	soap_error2		1244689	0					
ANR	1244911	ArgumentList	E_ERROR		1244689	1					
ANR	1244912	Argument	E_ERROR		1244689	0					
ANR	1244913	Identifier	E_ERROR		1244689	0					
ANR	1244914	Argument	"""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"""		1244689	1					
ANR	1244915	PrimaryExpression	"""Parsing Schema: can't import schema from '%s', unexpected 'targetNamespace'='%s'"""		1244689	0					
ANR	1244916	Argument	location		1244689	2					
ANR	1244917	Identifier	location		1244689	0					
ANR	1244918	Argument	new_tns -> children -> content		1244689	3					
ANR	1244919	PtrMemberAccess	new_tns -> children -> content		1244689	0					
ANR	1244920	PtrMemberAccess	new_tns -> children		1244689	0					
ANR	1244921	Identifier	new_tns		1244689	0					
ANR	1244922	Identifier	children		1244689	1					
ANR	1244923	Identifier	content		1244689	1					
ANR	1244924	ElseStatement	else		1244689	0					
ANR	1244925	CompoundStatement		30:9:1197:1197	1244689	0					
ANR	1244926	ExpressionStatement	"new_tns = get_attribute ( schema -> properties , ""targetNamespace"" )"	128:3:6202:6264	1244689	0	True				
ANR	1244927	AssignmentExpression	"new_tns = get_attribute ( schema -> properties , ""targetNamespace"" )"		1244689	0		=			
ANR	1244928	Identifier	new_tns		1244689	0					
ANR	1244929	CallExpression	"get_attribute ( schema -> properties , ""targetNamespace"" )"		1244689	1					
ANR	1244930	Callee	get_attribute		1244689	0					
ANR	1244931	Identifier	get_attribute		1244689	0					
ANR	1244932	ArgumentList	schema -> properties		1244689	1					
ANR	1244933	Argument	schema -> properties		1244689	0					
ANR	1244934	PtrMemberAccess	schema -> properties		1244689	0					
ANR	1244935	Identifier	schema		1244689	0					
ANR	1244936	Identifier	properties		1244689	1					
ANR	1244937	Argument	"""targetNamespace"""		1244689	1					
ANR	1244938	PrimaryExpression	"""targetNamespace"""		1244689	0					
ANR	1244939	IfStatement	if ( new_tns == NULL )		1244689	1					
ANR	1244940	Condition	new_tns == NULL	129:7:6273:6287	1244689	0	True				
ANR	1244941	EqualityExpression	new_tns == NULL		1244689	0		==			
ANR	1244942	Identifier	new_tns		1244689	0					
ANR	1244943	Identifier	NULL		1244689	1					
ANR	1244944	CompoundStatement		32:24:1290:1290	1244689	1					
ANR	1244945	IfStatement	if ( tns != NULL )		1244689	0					
ANR	1244946	Condition	tns != NULL	130:8:6300:6310	1244689	0	True				
ANR	1244947	EqualityExpression	tns != NULL		1244689	0		!=			
ANR	1244948	Identifier	tns		1244689	0					
ANR	1244949	Identifier	NULL		1244689	1					
ANR	1244950	CompoundStatement		33:21:1313:1313	1244689	1					
ANR	1244951	ExpressionStatement	"xmlSetProp ( schema , BAD_CAST ( ""targetNamespace"" ) , tns -> children -> content )"	131:5:6320:6391	1244689	0	True				
ANR	1244952	CallExpression	"xmlSetProp ( schema , BAD_CAST ( ""targetNamespace"" ) , tns -> children -> content )"		1244689	0					
ANR	1244953	Callee	xmlSetProp		1244689	0					
ANR	1244954	Identifier	xmlSetProp		1244689	0					
ANR	1244955	ArgumentList	schema		1244689	1					
ANR	1244956	Argument	schema		1244689	0					
ANR	1244957	Identifier	schema		1244689	0					
ANR	1244958	Argument	"BAD_CAST ( ""targetNamespace"" )"		1244689	1					
ANR	1244959	CallExpression	"BAD_CAST ( ""targetNamespace"" )"		1244689	0					
ANR	1244960	Callee	BAD_CAST		1244689	0					
ANR	1244961	Identifier	BAD_CAST		1244689	0					
ANR	1244962	ArgumentList	"""targetNamespace"""		1244689	1					
ANR	1244963	Argument	"""targetNamespace"""		1244689	0					
ANR	1244964	PrimaryExpression	"""targetNamespace"""		1244689	0					
ANR	1244965	Argument	tns -> children -> content		1244689	2					
ANR	1244966	PtrMemberAccess	tns -> children -> content		1244689	0					
ANR	1244967	PtrMemberAccess	tns -> children		1244689	0					
ANR	1244968	Identifier	tns		1244689	0					
ANR	1244969	Identifier	children		1244689	1					
ANR	1244970	Identifier	content		1244689	1					
ANR	1244971	ElseStatement	else		1244689	0					
ANR	1244972	IfStatement	"if ( tns != NULL && xmlStrcmp ( tns -> children -> content , new_tns -> children -> content ) != 0 )"		1244689	0					
ANR	1244973	Condition	"tns != NULL && xmlStrcmp ( tns -> children -> content , new_tns -> children -> content ) != 0"	133:14:6413:6493	1244689	0	True				
ANR	1244974	AndExpression	"tns != NULL && xmlStrcmp ( tns -> children -> content , new_tns -> children -> content ) != 0"		1244689	0		&&			
ANR	1244975	EqualityExpression	tns != NULL		1244689	0		!=			
ANR	1244976	Identifier	tns		1244689	0					
ANR	1244977	Identifier	NULL		1244689	1					
ANR	1244978	EqualityExpression	"xmlStrcmp ( tns -> children -> content , new_tns -> children -> content ) != 0"		1244689	1		!=			
ANR	1244979	CallExpression	"xmlStrcmp ( tns -> children -> content , new_tns -> children -> content )"		1244689	0					
ANR	1244980	Callee	xmlStrcmp		1244689	0					
ANR	1244981	Identifier	xmlStrcmp		1244689	0					
ANR	1244982	ArgumentList	tns -> children -> content		1244689	1					
ANR	1244983	Argument	tns -> children -> content		1244689	0					
ANR	1244984	PtrMemberAccess	tns -> children -> content		1244689	0					
ANR	1244985	PtrMemberAccess	tns -> children		1244689	0					
ANR	1244986	Identifier	tns		1244689	0					
ANR	1244987	Identifier	children		1244689	1					
ANR	1244988	Identifier	content		1244689	1					
ANR	1244989	Argument	new_tns -> children -> content		1244689	1					
ANR	1244990	PtrMemberAccess	new_tns -> children -> content		1244689	0					
ANR	1244991	PtrMemberAccess	new_tns -> children		1244689	0					
ANR	1244992	Identifier	new_tns		1244689	0					
ANR	1244993	Identifier	children		1244689	1					
ANR	1244994	Identifier	content		1244689	1					
ANR	1244995	PrimaryExpression	0		1244689	1					
ANR	1244996	CompoundStatement		36:97:1496:1496	1244689	1					
ANR	1244997	ExpressionStatement	xmlFreeDoc ( doc )	134:4:6502:6517	1244689	0	True				
ANR	1244998	CallExpression	xmlFreeDoc ( doc )		1244689	0					
ANR	1244999	Callee	xmlFreeDoc		1244689	0					
ANR	1245000	Identifier	xmlFreeDoc		1244689	0					
ANR	1245001	ArgumentList	doc		1244689	1					
ANR	1245002	Argument	doc		1244689	0					
ANR	1245003	Identifier	doc		1244689	0					
ANR	1245004	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: can't include schema from '%s', different 'targetNamespace'"" , location )"	135:4:6523:6632	1244689	1	True				
ANR	1245005	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: can't include schema from '%s', different 'targetNamespace'"" , location )"		1244689	0					
ANR	1245006	Callee	soap_error1		1244689	0					
ANR	1245007	Identifier	soap_error1		1244689	0					
ANR	1245008	ArgumentList	E_ERROR		1244689	1					
ANR	1245009	Argument	E_ERROR		1244689	0					
ANR	1245010	Identifier	E_ERROR		1244689	0					
ANR	1245011	Argument	"""Parsing Schema: can't include schema from '%s', different 'targetNamespace'"""		1244689	1					
ANR	1245012	PrimaryExpression	"""Parsing Schema: can't include schema from '%s', different 'targetNamespace'"""		1244689	0					
ANR	1245013	Argument	location		1244689	2					
ANR	1245014	Identifier	location		1244689	0					
ANR	1245015	ExpressionStatement	"zend_hash_add ( & ctx -> docs , ( char * ) location , xmlStrlen ( location ) + 1 , ( void * * ) & doc , sizeof ( xmlDocPtr ) , NULL )"	138:2:6645:6749	1244689	38	True				
ANR	1245016	CallExpression	"zend_hash_add ( & ctx -> docs , ( char * ) location , xmlStrlen ( location ) + 1 , ( void * * ) & doc , sizeof ( xmlDocPtr ) , NULL )"		1244689	0					
ANR	1245017	Callee	zend_hash_add		1244689	0					
ANR	1245018	Identifier	zend_hash_add		1244689	0					
ANR	1245019	ArgumentList	& ctx -> docs		1244689	1					
ANR	1245020	Argument	& ctx -> docs		1244689	0					
ANR	1245021	UnaryOperationExpression	& ctx -> docs		1244689	0					
ANR	1245022	UnaryOperator	&		1244689	0					
ANR	1245023	PtrMemberAccess	ctx -> docs		1244689	1					
ANR	1245024	Identifier	ctx		1244689	0					
ANR	1245025	Identifier	docs		1244689	1					
ANR	1245026	Argument	( char * ) location		1244689	1					
ANR	1245027	CastExpression	( char * ) location		1244689	0					
ANR	1245028	CastTarget	char *		1244689	0					
ANR	1245029	Identifier	location		1244689	1					
ANR	1245030	Argument	xmlStrlen ( location ) + 1		1244689	2					
ANR	1245031	AdditiveExpression	xmlStrlen ( location ) + 1		1244689	0		+			
ANR	1245032	CallExpression	xmlStrlen ( location )		1244689	0					
ANR	1245033	Callee	xmlStrlen		1244689	0					
ANR	1245034	Identifier	xmlStrlen		1244689	0					
ANR	1245035	ArgumentList	location		1244689	1					
ANR	1245036	Argument	location		1244689	0					
ANR	1245037	Identifier	location		1244689	0					
ANR	1245038	PrimaryExpression	1		1244689	1					
ANR	1245039	Argument	( void * * ) & doc		1244689	3					
ANR	1245040	CastExpression	( void * * ) & doc		1244689	0					
ANR	1245041	CastTarget	void * *		1244689	0					
ANR	1245042	UnaryOperationExpression	& doc		1244689	1					
ANR	1245043	UnaryOperator	&		1244689	0					
ANR	1245044	Identifier	doc		1244689	1					
ANR	1245045	Argument	sizeof ( xmlDocPtr )		1244689	4					
ANR	1245046	SizeofExpression	sizeof ( xmlDocPtr )		1244689	0					
ANR	1245047	Sizeof	sizeof		1244689	0					
ANR	1245048	SizeofOperand	xmlDocPtr		1244689	1					
ANR	1245049	Argument	NULL		1244689	5					
ANR	1245050	Identifier	NULL		1244689	0					
ANR	1245051	Statement	load_schema	139:2:6753:6763	1244689	39	True				
ANR	1245052	Statement	(	139:13:6764:6764	1244689	40	True				
ANR	1245053	Statement	ctx	139:14:6765:6767	1244689	41	True				
ANR	1245054	Statement	","	139:17:6768:6768	1244689	42	True				
ANR	1245055	Statement	schema	139:19:6770:6775	1244689	43	True				
ANR	1245056	Statement	TSRMLS_CC	139:26:6777:6785	1244689	44	True				
ANR	1245057	Statement	)	139:35:6786:6786	1244689	45	True				
ANR	1245058	ExpressionStatement		139:36:6787:6787	1244689	46	True				
ANR	1245059	ReturnType	static void		1244689	1					
ANR	1245060	Identifier	schema_load_file		1244689	2					
ANR	1245061	ParameterList	"sdlCtx * ctx , xmlAttrPtr ns , xmlChar * location , xmlAttrPtr tns , int import TSRMLS_DC"		1244689	3					
ANR	1245062	Parameter	sdlCtx * ctx	98:29:4914:4924	1244689	0	True				
ANR	1245063	ParameterType	sdlCtx *		1244689	0					
ANR	1245064	Identifier	ctx		1244689	1					
ANR	1245065	Parameter	xmlAttrPtr ns	98:42:4927:4939	1244689	1	True				
ANR	1245066	ParameterType	xmlAttrPtr		1244689	0					
ANR	1245067	Identifier	ns		1244689	1					
ANR	1245068	Parameter	xmlChar * location	98:57:4942:4958	1244689	2	True				
ANR	1245069	ParameterType	xmlChar *		1244689	0					
ANR	1245070	Identifier	location		1244689	1					
ANR	1245071	Parameter	xmlAttrPtr tns	98:76:4961:4974	1244689	3	True				
ANR	1245072	ParameterType	xmlAttrPtr		1244689	0					
ANR	1245073	Identifier	tns		1244689	1					
ANR	1245074	Parameter	int import TSRMLS_DC	98:92:4977:4996	1244689	4	True				
ANR	1245075	ParameterType	int import		1244689	0					
ANR	1245076	Identifier	TSRMLS_DC		1244689	1					
ANR	1245077	CFGEntryNode	ENTRY		1244689		True				
ANR	1245078	CFGExitNode	EXIT		1244689		True				
ANR	1245079	Symbol	schema		1244689						
ANR	1245080	Symbol	get_attribute		1244689						
ANR	1245081	Symbol	import		1244689						
ANR	1245082	Symbol	* new_tns		1244689						
ANR	1245083	Symbol	* ns -> children		1244689						
ANR	1245084	Symbol	ns		1244689						
ANR	1245085	Symbol	get_node		1244689						
ANR	1245086	Symbol	& ctx -> docs		1244689						
ANR	1245087	Symbol	zend_hash_exists		1244689						
ANR	1245088	Symbol	new_tns -> children -> content		1244689						
ANR	1245089	Symbol	schema -> properties		1244689						
ANR	1245090	Symbol	TSRMLS_DC		1244689						
ANR	1245091	Symbol	* * tns		1244689						
ANR	1245092	Symbol	* schema		1244689						
ANR	1245093	Symbol	new_tns -> children		1244689						
ANR	1245094	Symbol	doc -> children		1244689						
ANR	1245095	Symbol	tns -> children -> content		1244689						
ANR	1245096	Symbol	tns -> children		1244689						
ANR	1245097	Symbol	& doc		1244689						
ANR	1245098	Symbol	new_tns		1244689						
ANR	1245099	Symbol	* doc		1244689						
ANR	1245100	Symbol	ns -> children		1244689						
ANR	1245101	Symbol	NULL		1244689						
ANR	1245102	Symbol	xmlStrcmp		1244689						
ANR	1245103	Symbol	* tns		1244689						
ANR	1245104	Symbol	ctx		1244689						
ANR	1245105	Symbol	* ns		1244689						
ANR	1245106	Symbol	* tns -> children		1244689						
ANR	1245107	Symbol	ns -> children -> content		1244689						
ANR	1245108	Symbol	E_ERROR		1244689						
ANR	1245109	Symbol	* * ns		1244689						
ANR	1245110	Symbol	xmlStrlen		1244689						
ANR	1245111	Symbol	tns		1244689						
ANR	1245112	Symbol	doc		1244689						
ANR	1245113	Symbol	location		1244689						
ANR	1245114	Symbol	* * new_tns		1244689						
ANR	1245115	Symbol	* new_tns -> children		1244689						
ANR	1245116	Symbol	BAD_CAST		1244689						
ANR	1245117	Function	load_schema	163:0:7476:11713							
ANR	1245118	FunctionDef	"load_schema (sdlCtx * ctx , xmlNodePtr schema TSRMLS_DC)"		1245117	0					
ANR	1245119	CompoundStatement		164:0:7534:11713	1245117	0					
ANR	1245120	IdentifierDeclStatement	xmlNodePtr trav ;	165:1:7537:7552	1245117	0	True				
ANR	1245121	IdentifierDecl	trav		1245117	0					
ANR	1245122	IdentifierDeclType	xmlNodePtr		1245117	0					
ANR	1245123	Identifier	trav		1245117	1					
ANR	1245124	IdentifierDeclStatement	xmlAttrPtr tns ;	166:1:7555:7569	1245117	1	True				
ANR	1245125	IdentifierDecl	tns		1245117	0					
ANR	1245126	IdentifierDeclType	xmlAttrPtr		1245117	0					
ANR	1245127	Identifier	tns		1245117	1					
ANR	1245128	IfStatement	if ( ! ctx -> sdl -> types )		1245117	2					
ANR	1245129	Condition	! ctx -> sdl -> types	168:5:7577:7592	1245117	0	True				
ANR	1245130	UnaryOperationExpression	! ctx -> sdl -> types		1245117	0					
ANR	1245131	UnaryOperator	!		1245117	0					
ANR	1245132	PtrMemberAccess	ctx -> sdl -> types		1245117	1					
ANR	1245133	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245134	Identifier	ctx		1245117	0					
ANR	1245135	Identifier	sdl		1245117	1					
ANR	1245136	Identifier	types		1245117	1					
ANR	1245137	CompoundStatement		5:23:60:60	1245117	1					
ANR	1245138	ExpressionStatement	ctx -> sdl -> types = emalloc ( sizeof ( HashTable ) )	169:2:7599:7643	1245117	0	True				
ANR	1245139	AssignmentExpression	ctx -> sdl -> types = emalloc ( sizeof ( HashTable ) )		1245117	0		=			
ANR	1245140	PtrMemberAccess	ctx -> sdl -> types		1245117	0					
ANR	1245141	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245142	Identifier	ctx		1245117	0					
ANR	1245143	Identifier	sdl		1245117	1					
ANR	1245144	Identifier	types		1245117	1					
ANR	1245145	CallExpression	emalloc ( sizeof ( HashTable ) )		1245117	1					
ANR	1245146	Callee	emalloc		1245117	0					
ANR	1245147	Identifier	emalloc		1245117	0					
ANR	1245148	ArgumentList	sizeof ( HashTable )		1245117	1					
ANR	1245149	Argument	sizeof ( HashTable )		1245117	0					
ANR	1245150	SizeofExpression	sizeof ( HashTable )		1245117	0					
ANR	1245151	Sizeof	sizeof		1245117	0					
ANR	1245152	SizeofOperand	HashTable		1245117	1					
ANR	1245153	ExpressionStatement	"zend_hash_init ( ctx -> sdl -> types , 0 , NULL , delete_type , 0 )"	170:2:7647:7703	1245117	1	True				
ANR	1245154	CallExpression	"zend_hash_init ( ctx -> sdl -> types , 0 , NULL , delete_type , 0 )"		1245117	0					
ANR	1245155	Callee	zend_hash_init		1245117	0					
ANR	1245156	Identifier	zend_hash_init		1245117	0					
ANR	1245157	ArgumentList	ctx -> sdl -> types		1245117	1					
ANR	1245158	Argument	ctx -> sdl -> types		1245117	0					
ANR	1245159	PtrMemberAccess	ctx -> sdl -> types		1245117	0					
ANR	1245160	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245161	Identifier	ctx		1245117	0					
ANR	1245162	Identifier	sdl		1245117	1					
ANR	1245163	Identifier	types		1245117	1					
ANR	1245164	Argument	0		1245117	1					
ANR	1245165	PrimaryExpression	0		1245117	0					
ANR	1245166	Argument	NULL		1245117	2					
ANR	1245167	Identifier	NULL		1245117	0					
ANR	1245168	Argument	delete_type		1245117	3					
ANR	1245169	Identifier	delete_type		1245117	0					
ANR	1245170	Argument	0		1245117	4					
ANR	1245171	PrimaryExpression	0		1245117	0					
ANR	1245172	IfStatement	if ( ! ctx -> attributes )		1245117	3					
ANR	1245173	Condition	! ctx -> attributes	172:5:7713:7728	1245117	0	True				
ANR	1245174	UnaryOperationExpression	! ctx -> attributes		1245117	0					
ANR	1245175	UnaryOperator	!		1245117	0					
ANR	1245176	PtrMemberAccess	ctx -> attributes		1245117	1					
ANR	1245177	Identifier	ctx		1245117	0					
ANR	1245178	Identifier	attributes		1245117	1					
ANR	1245179	CompoundStatement		9:23:196:196	1245117	1					
ANR	1245180	ExpressionStatement	ctx -> attributes = emalloc ( sizeof ( HashTable ) )	173:2:7735:7779	1245117	0	True				
ANR	1245181	AssignmentExpression	ctx -> attributes = emalloc ( sizeof ( HashTable ) )		1245117	0		=			
ANR	1245182	PtrMemberAccess	ctx -> attributes		1245117	0					
ANR	1245183	Identifier	ctx		1245117	0					
ANR	1245184	Identifier	attributes		1245117	1					
ANR	1245185	CallExpression	emalloc ( sizeof ( HashTable ) )		1245117	1					
ANR	1245186	Callee	emalloc		1245117	0					
ANR	1245187	Identifier	emalloc		1245117	0					
ANR	1245188	ArgumentList	sizeof ( HashTable )		1245117	1					
ANR	1245189	Argument	sizeof ( HashTable )		1245117	0					
ANR	1245190	SizeofExpression	sizeof ( HashTable )		1245117	0					
ANR	1245191	Sizeof	sizeof		1245117	0					
ANR	1245192	SizeofOperand	HashTable		1245117	1					
ANR	1245193	ExpressionStatement	"zend_hash_init ( ctx -> attributes , 0 , NULL , delete_attribute , 0 )"	174:2:7783:7844	1245117	1	True				
ANR	1245194	CallExpression	"zend_hash_init ( ctx -> attributes , 0 , NULL , delete_attribute , 0 )"		1245117	0					
ANR	1245195	Callee	zend_hash_init		1245117	0					
ANR	1245196	Identifier	zend_hash_init		1245117	0					
ANR	1245197	ArgumentList	ctx -> attributes		1245117	1					
ANR	1245198	Argument	ctx -> attributes		1245117	0					
ANR	1245199	PtrMemberAccess	ctx -> attributes		1245117	0					
ANR	1245200	Identifier	ctx		1245117	0					
ANR	1245201	Identifier	attributes		1245117	1					
ANR	1245202	Argument	0		1245117	1					
ANR	1245203	PrimaryExpression	0		1245117	0					
ANR	1245204	Argument	NULL		1245117	2					
ANR	1245205	Identifier	NULL		1245117	0					
ANR	1245206	Argument	delete_attribute		1245117	3					
ANR	1245207	Identifier	delete_attribute		1245117	0					
ANR	1245208	Argument	0		1245117	4					
ANR	1245209	PrimaryExpression	0		1245117	0					
ANR	1245210	IfStatement	if ( ! ctx -> attributeGroups )		1245117	4					
ANR	1245211	Condition	! ctx -> attributeGroups	176:5:7854:7874	1245117	0	True				
ANR	1245212	UnaryOperationExpression	! ctx -> attributeGroups		1245117	0					
ANR	1245213	UnaryOperator	!		1245117	0					
ANR	1245214	PtrMemberAccess	ctx -> attributeGroups		1245117	1					
ANR	1245215	Identifier	ctx		1245117	0					
ANR	1245216	Identifier	attributeGroups		1245117	1					
ANR	1245217	CompoundStatement		13:28:342:342	1245117	1					
ANR	1245218	ExpressionStatement	ctx -> attributeGroups = emalloc ( sizeof ( HashTable ) )	177:2:7881:7930	1245117	0	True				
ANR	1245219	AssignmentExpression	ctx -> attributeGroups = emalloc ( sizeof ( HashTable ) )		1245117	0		=			
ANR	1245220	PtrMemberAccess	ctx -> attributeGroups		1245117	0					
ANR	1245221	Identifier	ctx		1245117	0					
ANR	1245222	Identifier	attributeGroups		1245117	1					
ANR	1245223	CallExpression	emalloc ( sizeof ( HashTable ) )		1245117	1					
ANR	1245224	Callee	emalloc		1245117	0					
ANR	1245225	Identifier	emalloc		1245117	0					
ANR	1245226	ArgumentList	sizeof ( HashTable )		1245117	1					
ANR	1245227	Argument	sizeof ( HashTable )		1245117	0					
ANR	1245228	SizeofExpression	sizeof ( HashTable )		1245117	0					
ANR	1245229	Sizeof	sizeof		1245117	0					
ANR	1245230	SizeofOperand	HashTable		1245117	1					
ANR	1245231	ExpressionStatement	"zend_hash_init ( ctx -> attributeGroups , 0 , NULL , delete_type , 0 )"	178:2:7934:7995	1245117	1	True				
ANR	1245232	CallExpression	"zend_hash_init ( ctx -> attributeGroups , 0 , NULL , delete_type , 0 )"		1245117	0					
ANR	1245233	Callee	zend_hash_init		1245117	0					
ANR	1245234	Identifier	zend_hash_init		1245117	0					
ANR	1245235	ArgumentList	ctx -> attributeGroups		1245117	1					
ANR	1245236	Argument	ctx -> attributeGroups		1245117	0					
ANR	1245237	PtrMemberAccess	ctx -> attributeGroups		1245117	0					
ANR	1245238	Identifier	ctx		1245117	0					
ANR	1245239	Identifier	attributeGroups		1245117	1					
ANR	1245240	Argument	0		1245117	1					
ANR	1245241	PrimaryExpression	0		1245117	0					
ANR	1245242	Argument	NULL		1245117	2					
ANR	1245243	Identifier	NULL		1245117	0					
ANR	1245244	Argument	delete_type		1245117	3					
ANR	1245245	Identifier	delete_type		1245117	0					
ANR	1245246	Argument	0		1245117	4					
ANR	1245247	PrimaryExpression	0		1245117	0					
ANR	1245248	ExpressionStatement	"tns = get_attribute ( schema -> properties , ""targetNamespace"" )"	181:1:8002:8060	1245117	5	True				
ANR	1245249	AssignmentExpression	"tns = get_attribute ( schema -> properties , ""targetNamespace"" )"		1245117	0		=			
ANR	1245250	Identifier	tns		1245117	0					
ANR	1245251	CallExpression	"get_attribute ( schema -> properties , ""targetNamespace"" )"		1245117	1					
ANR	1245252	Callee	get_attribute		1245117	0					
ANR	1245253	Identifier	get_attribute		1245117	0					
ANR	1245254	ArgumentList	schema -> properties		1245117	1					
ANR	1245255	Argument	schema -> properties		1245117	0					
ANR	1245256	PtrMemberAccess	schema -> properties		1245117	0					
ANR	1245257	Identifier	schema		1245117	0					
ANR	1245258	Identifier	properties		1245117	1					
ANR	1245259	Argument	"""targetNamespace"""		1245117	1					
ANR	1245260	PrimaryExpression	"""targetNamespace"""		1245117	0					
ANR	1245261	IfStatement	if ( tns == NULL )		1245117	6					
ANR	1245262	Condition	tns == NULL	182:5:8067:8077	1245117	0	True				
ANR	1245263	EqualityExpression	tns == NULL		1245117	0		==			
ANR	1245264	Identifier	tns		1245117	0					
ANR	1245265	Identifier	NULL		1245117	1					
ANR	1245266	CompoundStatement		19:18:545:545	1245117	1					
ANR	1245267	ExpressionStatement	"tns = xmlSetProp ( schema , BAD_CAST ( ""targetNamespace"" ) , BAD_CAST ( """" ) )"	183:2:8084:8151	1245117	0	True				
ANR	1245268	AssignmentExpression	"tns = xmlSetProp ( schema , BAD_CAST ( ""targetNamespace"" ) , BAD_CAST ( """" ) )"		1245117	0		=			
ANR	1245269	Identifier	tns		1245117	0					
ANR	1245270	CallExpression	"xmlSetProp ( schema , BAD_CAST ( ""targetNamespace"" ) , BAD_CAST ( """" ) )"		1245117	1					
ANR	1245271	Callee	xmlSetProp		1245117	0					
ANR	1245272	Identifier	xmlSetProp		1245117	0					
ANR	1245273	ArgumentList	schema		1245117	1					
ANR	1245274	Argument	schema		1245117	0					
ANR	1245275	Identifier	schema		1245117	0					
ANR	1245276	Argument	"BAD_CAST ( ""targetNamespace"" )"		1245117	1					
ANR	1245277	CallExpression	"BAD_CAST ( ""targetNamespace"" )"		1245117	0					
ANR	1245278	Callee	BAD_CAST		1245117	0					
ANR	1245279	Identifier	BAD_CAST		1245117	0					
ANR	1245280	ArgumentList	"""targetNamespace"""		1245117	1					
ANR	1245281	Argument	"""targetNamespace"""		1245117	0					
ANR	1245282	PrimaryExpression	"""targetNamespace"""		1245117	0					
ANR	1245283	Argument	"BAD_CAST ( """" )"		1245117	2					
ANR	1245284	CallExpression	"BAD_CAST ( """" )"		1245117	0					
ANR	1245285	Callee	BAD_CAST		1245117	0					
ANR	1245286	Identifier	BAD_CAST		1245117	0					
ANR	1245287	ArgumentList	""""""		1245117	1					
ANR	1245288	Argument	""""""		1245117	0					
ANR	1245289	PrimaryExpression	""""""		1245117	0					
ANR	1245290	ExpressionStatement	"xmlNewNs ( schema , BAD_CAST ( """" ) , NULL )"	184:2:8155:8191	1245117	1	True				
ANR	1245291	CallExpression	"xmlNewNs ( schema , BAD_CAST ( """" ) , NULL )"		1245117	0					
ANR	1245292	Callee	xmlNewNs		1245117	0					
ANR	1245293	Identifier	xmlNewNs		1245117	0					
ANR	1245294	ArgumentList	schema		1245117	1					
ANR	1245295	Argument	schema		1245117	0					
ANR	1245296	Identifier	schema		1245117	0					
ANR	1245297	Argument	"BAD_CAST ( """" )"		1245117	1					
ANR	1245298	CallExpression	"BAD_CAST ( """" )"		1245117	0					
ANR	1245299	Callee	BAD_CAST		1245117	0					
ANR	1245300	Identifier	BAD_CAST		1245117	0					
ANR	1245301	ArgumentList	""""""		1245117	1					
ANR	1245302	Argument	""""""		1245117	0					
ANR	1245303	PrimaryExpression	""""""		1245117	0					
ANR	1245304	Argument	NULL		1245117	2					
ANR	1245305	Identifier	NULL		1245117	0					
ANR	1245306	ExpressionStatement	trav = schema -> children	187:1:8198:8221	1245117	7	True				
ANR	1245307	AssignmentExpression	trav = schema -> children		1245117	0		=			
ANR	1245308	Identifier	trav		1245117	0					
ANR	1245309	PtrMemberAccess	schema -> children		1245117	1					
ANR	1245310	Identifier	schema		1245117	0					
ANR	1245311	Identifier	children		1245117	1					
ANR	1245312	WhileStatement	while ( trav != NULL )		1245117	8					
ANR	1245313	Condition	trav != NULL	188:8:8231:8242	1245117	0	True				
ANR	1245314	EqualityExpression	trav != NULL		1245117	0		!=			
ANR	1245315	Identifier	trav		1245117	0					
ANR	1245316	Identifier	NULL		1245117	1					
ANR	1245317	CompoundStatement		25:22:710:710	1245117	1					
ANR	1245318	IfStatement	"if ( node_is_equal ( trav , ""include"" ) )"		1245117	0					
ANR	1245319	Condition	"node_is_equal ( trav , ""include"" )"	189:6:8253:8281	1245117	0	True				
ANR	1245320	CallExpression	"node_is_equal ( trav , ""include"" )"		1245117	0					
ANR	1245321	Callee	node_is_equal		1245117	0					
ANR	1245322	Identifier	node_is_equal		1245117	0					
ANR	1245323	ArgumentList	trav		1245117	1					
ANR	1245324	Argument	trav		1245117	0					
ANR	1245325	Identifier	trav		1245117	0					
ANR	1245326	Argument	"""include"""		1245117	1					
ANR	1245327	PrimaryExpression	"""include"""		1245117	0					
ANR	1245328	CompoundStatement		27:3:754:773	1245117	1					
ANR	1245329	IdentifierDeclStatement	xmlAttrPtr location ;	190:3:8289:8308	1245117	0	True				
ANR	1245330	IdentifierDecl	location		1245117	0					
ANR	1245331	IdentifierDeclType	xmlAttrPtr		1245117	0					
ANR	1245332	Identifier	location		1245117	1					
ANR	1245333	ExpressionStatement	"location = get_attribute ( trav -> properties , ""schemaLocation"" )"	192:3:8314:8374	1245117	1	True				
ANR	1245334	AssignmentExpression	"location = get_attribute ( trav -> properties , ""schemaLocation"" )"		1245117	0		=			
ANR	1245335	Identifier	location		1245117	0					
ANR	1245336	CallExpression	"get_attribute ( trav -> properties , ""schemaLocation"" )"		1245117	1					
ANR	1245337	Callee	get_attribute		1245117	0					
ANR	1245338	Identifier	get_attribute		1245117	0					
ANR	1245339	ArgumentList	trav -> properties		1245117	1					
ANR	1245340	Argument	trav -> properties		1245117	0					
ANR	1245341	PtrMemberAccess	trav -> properties		1245117	0					
ANR	1245342	Identifier	trav		1245117	0					
ANR	1245343	Identifier	properties		1245117	1					
ANR	1245344	Argument	"""schemaLocation"""		1245117	1					
ANR	1245345	PrimaryExpression	"""schemaLocation"""		1245117	0					
ANR	1245346	IfStatement	if ( location == NULL )		1245117	2					
ANR	1245347	Condition	location == NULL	193:7:8383:8398	1245117	0	True				
ANR	1245348	EqualityExpression	location == NULL		1245117	0		==			
ANR	1245349	Identifier	location		1245117	0					
ANR	1245350	Identifier	NULL		1245117	1					
ANR	1245351	CompoundStatement		30:25:866:866	1245117	1					
ANR	1245352	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: include has no 'schemaLocation' attribute"" )"	194:4:8407:8488	1245117	0	True				
ANR	1245353	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: include has no 'schemaLocation' attribute"" )"		1245117	0					
ANR	1245354	Callee	soap_error0		1245117	0					
ANR	1245355	Identifier	soap_error0		1245117	0					
ANR	1245356	ArgumentList	E_ERROR		1245117	1					
ANR	1245357	Argument	E_ERROR		1245117	0					
ANR	1245358	Identifier	E_ERROR		1245117	0					
ANR	1245359	Argument	"""Parsing Schema: include has no 'schemaLocation' attribute"""		1245117	1					
ANR	1245360	PrimaryExpression	"""Parsing Schema: include has no 'schemaLocation' attribute"""		1245117	0					
ANR	1245361	ElseStatement	else		1245117	0					
ANR	1245362	CompoundStatement		34:4:989:1036	1245117	0					
ANR	1245363	IdentifierDeclStatement	xmlChar * uri ;	196:4:8506:8518	1245117	0	True				
ANR	1245364	IdentifierDecl	* uri		1245117	0					
ANR	1245365	IdentifierDeclType	xmlChar *		1245117	0					
ANR	1245366	Identifier	uri		1245117	1					
ANR	1245367	IdentifierDeclStatement	"xmlChar * base = xmlNodeGetBase ( trav -> doc , trav ) ;"	197:4:8524:8571	1245117	1	True				
ANR	1245368	IdentifierDecl	"* base = xmlNodeGetBase ( trav -> doc , trav )"		1245117	0					
ANR	1245369	IdentifierDeclType	xmlChar *		1245117	0					
ANR	1245370	Identifier	base		1245117	1					
ANR	1245371	AssignmentExpression	"* base = xmlNodeGetBase ( trav -> doc , trav )"		1245117	2		=			
ANR	1245372	Identifier	base		1245117	0					
ANR	1245373	CallExpression	"xmlNodeGetBase ( trav -> doc , trav )"		1245117	1					
ANR	1245374	Callee	xmlNodeGetBase		1245117	0					
ANR	1245375	Identifier	xmlNodeGetBase		1245117	0					
ANR	1245376	ArgumentList	trav -> doc		1245117	1					
ANR	1245377	Argument	trav -> doc		1245117	0					
ANR	1245378	PtrMemberAccess	trav -> doc		1245117	0					
ANR	1245379	Identifier	trav		1245117	0					
ANR	1245380	Identifier	doc		1245117	1					
ANR	1245381	Argument	trav		1245117	1					
ANR	1245382	Identifier	trav		1245117	0					
ANR	1245383	IfStatement	if ( base == NULL )		1245117	2					
ANR	1245384	Condition	base == NULL	199:8:8582:8593	1245117	0	True				
ANR	1245385	EqualityExpression	base == NULL		1245117	0		==			
ANR	1245386	Identifier	base		1245117	0					
ANR	1245387	Identifier	NULL		1245117	1					
ANR	1245388	CompoundStatement		36:22:1061:1061	1245117	1					
ANR	1245389	ExpressionStatement	"uri = xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"	200:7:8605:8667	1245117	0	True				
ANR	1245390	AssignmentExpression	"uri = xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"		1245117	0		=			
ANR	1245391	Identifier	uri		1245117	0					
ANR	1245392	CallExpression	"xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"		1245117	1					
ANR	1245393	Callee	xmlBuildURI		1245117	0					
ANR	1245394	Identifier	xmlBuildURI		1245117	0					
ANR	1245395	ArgumentList	location -> children -> content		1245117	1					
ANR	1245396	Argument	location -> children -> content		1245117	0					
ANR	1245397	PtrMemberAccess	location -> children -> content		1245117	0					
ANR	1245398	PtrMemberAccess	location -> children		1245117	0					
ANR	1245399	Identifier	location		1245117	0					
ANR	1245400	Identifier	children		1245117	1					
ANR	1245401	Identifier	content		1245117	1					
ANR	1245402	Argument	trav -> doc -> URL		1245117	1					
ANR	1245403	PtrMemberAccess	trav -> doc -> URL		1245117	0					
ANR	1245404	PtrMemberAccess	trav -> doc		1245117	0					
ANR	1245405	Identifier	trav		1245117	0					
ANR	1245406	Identifier	doc		1245117	1					
ANR	1245407	Identifier	URL		1245117	1					
ANR	1245408	ElseStatement	else		1245117	0					
ANR	1245409	CompoundStatement		38:11:1145:1145	1245117	0					
ANR	1245410	ExpressionStatement	"uri = xmlBuildURI ( location -> children -> content , base )"	202:7:8689:8741	1245117	0	True				
ANR	1245411	AssignmentExpression	"uri = xmlBuildURI ( location -> children -> content , base )"		1245117	0		=			
ANR	1245412	Identifier	uri		1245117	0					
ANR	1245413	CallExpression	"xmlBuildURI ( location -> children -> content , base )"		1245117	1					
ANR	1245414	Callee	xmlBuildURI		1245117	0					
ANR	1245415	Identifier	xmlBuildURI		1245117	0					
ANR	1245416	ArgumentList	location -> children -> content		1245117	1					
ANR	1245417	Argument	location -> children -> content		1245117	0					
ANR	1245418	PtrMemberAccess	location -> children -> content		1245117	0					
ANR	1245419	PtrMemberAccess	location -> children		1245117	0					
ANR	1245420	Identifier	location		1245117	0					
ANR	1245421	Identifier	children		1245117	1					
ANR	1245422	Identifier	content		1245117	1					
ANR	1245423	Argument	base		1245117	1					
ANR	1245424	Identifier	base		1245117	0					
ANR	1245425	ExpressionStatement	xmlFree ( base )	203:7:8750:8763	1245117	1	True				
ANR	1245426	CallExpression	xmlFree ( base )		1245117	0					
ANR	1245427	Callee	xmlFree		1245117	0					
ANR	1245428	Identifier	xmlFree		1245117	0					
ANR	1245429	ArgumentList	base		1245117	1					
ANR	1245430	Argument	base		1245117	0					
ANR	1245431	Identifier	base		1245117	0					
ANR	1245432	Statement	schema_load_file	205:4:8775:8790	1245117	3	True				
ANR	1245433	Statement	(	205:20:8791:8791	1245117	4	True				
ANR	1245434	Statement	ctx	205:21:8792:8794	1245117	5	True				
ANR	1245435	Statement	","	205:24:8795:8795	1245117	6	True				
ANR	1245436	Statement	NULL	205:26:8797:8800	1245117	7	True				
ANR	1245437	Statement	","	205:30:8801:8801	1245117	8	True				
ANR	1245438	Statement	uri	205:32:8803:8805	1245117	9	True				
ANR	1245439	Statement	","	205:35:8806:8806	1245117	10	True				
ANR	1245440	Statement	tns	205:37:8808:8810	1245117	11	True				
ANR	1245441	Statement	","	205:40:8811:8811	1245117	12	True				
ANR	1245442	Statement	0	205:42:8813:8813	1245117	13	True				
ANR	1245443	Statement	TSRMLS_CC	205:44:8815:8823	1245117	14	True				
ANR	1245444	Statement	)	205:53:8824:8824	1245117	15	True				
ANR	1245445	ExpressionStatement		205:54:8825:8825	1245117	16	True				
ANR	1245446	ExpressionStatement	xmlFree ( uri )	206:4:8831:8843	1245117	17	True				
ANR	1245447	CallExpression	xmlFree ( uri )		1245117	0					
ANR	1245448	Callee	xmlFree		1245117	0					
ANR	1245449	Identifier	xmlFree		1245117	0					
ANR	1245450	ArgumentList	uri		1245117	1					
ANR	1245451	Argument	uri		1245117	0					
ANR	1245452	Identifier	uri		1245117	0					
ANR	1245453	ElseStatement	else		1245117	0					
ANR	1245454	IfStatement	"if ( node_is_equal ( trav , ""redefine"" ) )"		1245117	0					
ANR	1245455	Condition	"node_is_equal ( trav , ""redefine"" )"	209:13:8864:8893	1245117	0	True				
ANR	1245456	CallExpression	"node_is_equal ( trav , ""redefine"" )"		1245117	0					
ANR	1245457	Callee	node_is_equal		1245117	0					
ANR	1245458	Identifier	node_is_equal		1245117	0					
ANR	1245459	ArgumentList	trav		1245117	1					
ANR	1245460	Argument	trav		1245117	0					
ANR	1245461	Identifier	trav		1245117	0					
ANR	1245462	Argument	"""redefine"""		1245117	1					
ANR	1245463	PrimaryExpression	"""redefine"""		1245117	0					
ANR	1245464	CompoundStatement		47:3:1366:1385	1245117	1					
ANR	1245465	IdentifierDeclStatement	xmlAttrPtr location ;	210:3:8901:8920	1245117	0	True				
ANR	1245466	IdentifierDecl	location		1245117	0					
ANR	1245467	IdentifierDeclType	xmlAttrPtr		1245117	0					
ANR	1245468	Identifier	location		1245117	1					
ANR	1245469	ExpressionStatement	"location = get_attribute ( trav -> properties , ""schemaLocation"" )"	212:3:8926:8986	1245117	1	True				
ANR	1245470	AssignmentExpression	"location = get_attribute ( trav -> properties , ""schemaLocation"" )"		1245117	0		=			
ANR	1245471	Identifier	location		1245117	0					
ANR	1245472	CallExpression	"get_attribute ( trav -> properties , ""schemaLocation"" )"		1245117	1					
ANR	1245473	Callee	get_attribute		1245117	0					
ANR	1245474	Identifier	get_attribute		1245117	0					
ANR	1245475	ArgumentList	trav -> properties		1245117	1					
ANR	1245476	Argument	trav -> properties		1245117	0					
ANR	1245477	PtrMemberAccess	trav -> properties		1245117	0					
ANR	1245478	Identifier	trav		1245117	0					
ANR	1245479	Identifier	properties		1245117	1					
ANR	1245480	Argument	"""schemaLocation"""		1245117	1					
ANR	1245481	PrimaryExpression	"""schemaLocation"""		1245117	0					
ANR	1245482	IfStatement	if ( location == NULL )		1245117	2					
ANR	1245483	Condition	location == NULL	213:7:8995:9010	1245117	0	True				
ANR	1245484	EqualityExpression	location == NULL		1245117	0		==			
ANR	1245485	Identifier	location		1245117	0					
ANR	1245486	Identifier	NULL		1245117	1					
ANR	1245487	CompoundStatement		50:25:1478:1478	1245117	1					
ANR	1245488	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: redefine has no 'schemaLocation' attribute"" )"	214:4:9019:9101	1245117	0	True				
ANR	1245489	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: redefine has no 'schemaLocation' attribute"" )"		1245117	0					
ANR	1245490	Callee	soap_error0		1245117	0					
ANR	1245491	Identifier	soap_error0		1245117	0					
ANR	1245492	ArgumentList	E_ERROR		1245117	1					
ANR	1245493	Argument	E_ERROR		1245117	0					
ANR	1245494	Identifier	E_ERROR		1245117	0					
ANR	1245495	Argument	"""Parsing Schema: redefine has no 'schemaLocation' attribute"""		1245117	1					
ANR	1245496	PrimaryExpression	"""Parsing Schema: redefine has no 'schemaLocation' attribute"""		1245117	0					
ANR	1245497	ElseStatement	else		1245117	0					
ANR	1245498	CompoundStatement		54:4:1603:1650	1245117	0					
ANR	1245499	IdentifierDeclStatement	xmlChar * uri ;	216:5:9120:9132	1245117	0	True				
ANR	1245500	IdentifierDecl	* uri		1245117	0					
ANR	1245501	IdentifierDeclType	xmlChar *		1245117	0					
ANR	1245502	Identifier	uri		1245117	1					
ANR	1245503	IdentifierDeclStatement	"xmlChar * base = xmlNodeGetBase ( trav -> doc , trav ) ;"	217:4:9138:9185	1245117	1	True				
ANR	1245504	IdentifierDecl	"* base = xmlNodeGetBase ( trav -> doc , trav )"		1245117	0					
ANR	1245505	IdentifierDeclType	xmlChar *		1245117	0					
ANR	1245506	Identifier	base		1245117	1					
ANR	1245507	AssignmentExpression	"* base = xmlNodeGetBase ( trav -> doc , trav )"		1245117	2		=			
ANR	1245508	Identifier	base		1245117	0					
ANR	1245509	CallExpression	"xmlNodeGetBase ( trav -> doc , trav )"		1245117	1					
ANR	1245510	Callee	xmlNodeGetBase		1245117	0					
ANR	1245511	Identifier	xmlNodeGetBase		1245117	0					
ANR	1245512	ArgumentList	trav -> doc		1245117	1					
ANR	1245513	Argument	trav -> doc		1245117	0					
ANR	1245514	PtrMemberAccess	trav -> doc		1245117	0					
ANR	1245515	Identifier	trav		1245117	0					
ANR	1245516	Identifier	doc		1245117	1					
ANR	1245517	Argument	trav		1245117	1					
ANR	1245518	Identifier	trav		1245117	0					
ANR	1245519	IfStatement	if ( base == NULL )		1245117	2					
ANR	1245520	Condition	base == NULL	219:8:9196:9207	1245117	0	True				
ANR	1245521	EqualityExpression	base == NULL		1245117	0		==			
ANR	1245522	Identifier	base		1245117	0					
ANR	1245523	Identifier	NULL		1245117	1					
ANR	1245524	CompoundStatement		56:22:1675:1675	1245117	1					
ANR	1245525	ExpressionStatement	"uri = xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"	220:7:9219:9281	1245117	0	True				
ANR	1245526	AssignmentExpression	"uri = xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"		1245117	0		=			
ANR	1245527	Identifier	uri		1245117	0					
ANR	1245528	CallExpression	"xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"		1245117	1					
ANR	1245529	Callee	xmlBuildURI		1245117	0					
ANR	1245530	Identifier	xmlBuildURI		1245117	0					
ANR	1245531	ArgumentList	location -> children -> content		1245117	1					
ANR	1245532	Argument	location -> children -> content		1245117	0					
ANR	1245533	PtrMemberAccess	location -> children -> content		1245117	0					
ANR	1245534	PtrMemberAccess	location -> children		1245117	0					
ANR	1245535	Identifier	location		1245117	0					
ANR	1245536	Identifier	children		1245117	1					
ANR	1245537	Identifier	content		1245117	1					
ANR	1245538	Argument	trav -> doc -> URL		1245117	1					
ANR	1245539	PtrMemberAccess	trav -> doc -> URL		1245117	0					
ANR	1245540	PtrMemberAccess	trav -> doc		1245117	0					
ANR	1245541	Identifier	trav		1245117	0					
ANR	1245542	Identifier	doc		1245117	1					
ANR	1245543	Identifier	URL		1245117	1					
ANR	1245544	ElseStatement	else		1245117	0					
ANR	1245545	CompoundStatement		58:11:1759:1759	1245117	0					
ANR	1245546	ExpressionStatement	"uri = xmlBuildURI ( location -> children -> content , base )"	222:7:9303:9355	1245117	0	True				
ANR	1245547	AssignmentExpression	"uri = xmlBuildURI ( location -> children -> content , base )"		1245117	0		=			
ANR	1245548	Identifier	uri		1245117	0					
ANR	1245549	CallExpression	"xmlBuildURI ( location -> children -> content , base )"		1245117	1					
ANR	1245550	Callee	xmlBuildURI		1245117	0					
ANR	1245551	Identifier	xmlBuildURI		1245117	0					
ANR	1245552	ArgumentList	location -> children -> content		1245117	1					
ANR	1245553	Argument	location -> children -> content		1245117	0					
ANR	1245554	PtrMemberAccess	location -> children -> content		1245117	0					
ANR	1245555	PtrMemberAccess	location -> children		1245117	0					
ANR	1245556	Identifier	location		1245117	0					
ANR	1245557	Identifier	children		1245117	1					
ANR	1245558	Identifier	content		1245117	1					
ANR	1245559	Argument	base		1245117	1					
ANR	1245560	Identifier	base		1245117	0					
ANR	1245561	ExpressionStatement	xmlFree ( base )	223:7:9364:9377	1245117	1	True				
ANR	1245562	CallExpression	xmlFree ( base )		1245117	0					
ANR	1245563	Callee	xmlFree		1245117	0					
ANR	1245564	Identifier	xmlFree		1245117	0					
ANR	1245565	ArgumentList	base		1245117	1					
ANR	1245566	Argument	base		1245117	0					
ANR	1245567	Identifier	base		1245117	0					
ANR	1245568	Statement	schema_load_file	225:4:9389:9404	1245117	3	True				
ANR	1245569	Statement	(	225:20:9405:9405	1245117	4	True				
ANR	1245570	Statement	ctx	225:21:9406:9408	1245117	5	True				
ANR	1245571	Statement	","	225:24:9409:9409	1245117	6	True				
ANR	1245572	Statement	NULL	225:26:9411:9414	1245117	7	True				
ANR	1245573	Statement	","	225:30:9415:9415	1245117	8	True				
ANR	1245574	Statement	uri	225:32:9417:9419	1245117	9	True				
ANR	1245575	Statement	","	225:35:9420:9420	1245117	10	True				
ANR	1245576	Statement	tns	225:37:9422:9424	1245117	11	True				
ANR	1245577	Statement	","	225:40:9425:9425	1245117	12	True				
ANR	1245578	Statement	0	225:42:9427:9427	1245117	13	True				
ANR	1245579	Statement	TSRMLS_CC	225:44:9429:9437	1245117	14	True				
ANR	1245580	Statement	)	225:53:9438:9438	1245117	15	True				
ANR	1245581	ExpressionStatement		225:54:9439:9439	1245117	16	True				
ANR	1245582	ExpressionStatement	xmlFree ( uri )	226:4:9445:9457	1245117	17	True				
ANR	1245583	CallExpression	xmlFree ( uri )		1245117	0					
ANR	1245584	Callee	xmlFree		1245117	0					
ANR	1245585	Identifier	xmlFree		1245117	0					
ANR	1245586	ArgumentList	uri		1245117	1					
ANR	1245587	Argument	uri		1245117	0					
ANR	1245588	Identifier	uri		1245117	0					
ANR	1245589	ElseStatement	else		1245117	0					
ANR	1245590	IfStatement	"if ( node_is_equal ( trav , ""import"" ) )"		1245117	0					
ANR	1245591	Condition	"node_is_equal ( trav , ""import"" )"	230:13:9513:9540	1245117	0	True				
ANR	1245592	CallExpression	"node_is_equal ( trav , ""import"" )"		1245117	0					
ANR	1245593	Callee	node_is_equal		1245117	0					
ANR	1245594	Identifier	node_is_equal		1245117	0					
ANR	1245595	ArgumentList	trav		1245117	1					
ANR	1245596	Argument	trav		1245117	0					
ANR	1245597	Identifier	trav		1245117	0					
ANR	1245598	Argument	"""import"""		1245117	1					
ANR	1245599	PrimaryExpression	"""import"""		1245117	0					
ANR	1245600	CompoundStatement		69:3:2041:2060	1245117	1					
ANR	1245601	IdentifierDeclStatement	"xmlAttrPtr ns , location ;"	231:3:9548:9571	1245117	0	True				
ANR	1245602	IdentifierDecl	ns		1245117	0					
ANR	1245603	IdentifierDeclType	xmlAttrPtr		1245117	0					
ANR	1245604	Identifier	ns		1245117	1					
ANR	1245605	IdentifierDecl	location		1245117	1					
ANR	1245606	IdentifierDeclType	xmlAttrPtr		1245117	0					
ANR	1245607	Identifier	location		1245117	1					
ANR	1245608	IdentifierDeclStatement	xmlChar * uri = NULL ;	232:3:9576:9595	1245117	1	True				
ANR	1245609	IdentifierDecl	* uri = NULL		1245117	0					
ANR	1245610	IdentifierDeclType	xmlChar *		1245117	0					
ANR	1245611	Identifier	uri		1245117	1					
ANR	1245612	AssignmentExpression	* uri = NULL		1245117	2		=			
ANR	1245613	Identifier	NULL		1245117	0					
ANR	1245614	Identifier	NULL		1245117	1					
ANR	1245615	ExpressionStatement	"ns = get_attribute ( trav -> properties , ""namespace"" )"	234:3:9601:9650	1245117	2	True				
ANR	1245616	AssignmentExpression	"ns = get_attribute ( trav -> properties , ""namespace"" )"		1245117	0		=			
ANR	1245617	Identifier	ns		1245117	0					
ANR	1245618	CallExpression	"get_attribute ( trav -> properties , ""namespace"" )"		1245117	1					
ANR	1245619	Callee	get_attribute		1245117	0					
ANR	1245620	Identifier	get_attribute		1245117	0					
ANR	1245621	ArgumentList	trav -> properties		1245117	1					
ANR	1245622	Argument	trav -> properties		1245117	0					
ANR	1245623	PtrMemberAccess	trav -> properties		1245117	0					
ANR	1245624	Identifier	trav		1245117	0					
ANR	1245625	Identifier	properties		1245117	1					
ANR	1245626	Argument	"""namespace"""		1245117	1					
ANR	1245627	PrimaryExpression	"""namespace"""		1245117	0					
ANR	1245628	ExpressionStatement	"location = get_attribute ( trav -> properties , ""schemaLocation"" )"	235:3:9655:9715	1245117	3	True				
ANR	1245629	AssignmentExpression	"location = get_attribute ( trav -> properties , ""schemaLocation"" )"		1245117	0		=			
ANR	1245630	Identifier	location		1245117	0					
ANR	1245631	CallExpression	"get_attribute ( trav -> properties , ""schemaLocation"" )"		1245117	1					
ANR	1245632	Callee	get_attribute		1245117	0					
ANR	1245633	Identifier	get_attribute		1245117	0					
ANR	1245634	ArgumentList	trav -> properties		1245117	1					
ANR	1245635	Argument	trav -> properties		1245117	0					
ANR	1245636	PtrMemberAccess	trav -> properties		1245117	0					
ANR	1245637	Identifier	trav		1245117	0					
ANR	1245638	Identifier	properties		1245117	1					
ANR	1245639	Argument	"""schemaLocation"""		1245117	1					
ANR	1245640	PrimaryExpression	"""schemaLocation"""		1245117	0					
ANR	1245641	IfStatement	"if ( ns != NULL && tns != NULL && xmlStrcmp ( ns -> children -> content , tns -> children -> content ) == 0 )"		1245117	4					
ANR	1245642	Condition	"ns != NULL && tns != NULL && xmlStrcmp ( ns -> children -> content , tns -> children -> content ) == 0"	237:7:9725:9814	1245117	0	True				
ANR	1245643	AndExpression	"ns != NULL && tns != NULL && xmlStrcmp ( ns -> children -> content , tns -> children -> content ) == 0"		1245117	0		&&			
ANR	1245644	EqualityExpression	ns != NULL		1245117	0		!=			
ANR	1245645	Identifier	ns		1245117	0					
ANR	1245646	Identifier	NULL		1245117	1					
ANR	1245647	AndExpression	"tns != NULL && xmlStrcmp ( ns -> children -> content , tns -> children -> content ) == 0"		1245117	1		&&			
ANR	1245648	EqualityExpression	tns != NULL		1245117	0		!=			
ANR	1245649	Identifier	tns		1245117	0					
ANR	1245650	Identifier	NULL		1245117	1					
ANR	1245651	EqualityExpression	"xmlStrcmp ( ns -> children -> content , tns -> children -> content ) == 0"		1245117	1		==			
ANR	1245652	CallExpression	"xmlStrcmp ( ns -> children -> content , tns -> children -> content )"		1245117	0					
ANR	1245653	Callee	xmlStrcmp		1245117	0					
ANR	1245654	Identifier	xmlStrcmp		1245117	0					
ANR	1245655	ArgumentList	ns -> children -> content		1245117	1					
ANR	1245656	Argument	ns -> children -> content		1245117	0					
ANR	1245657	PtrMemberAccess	ns -> children -> content		1245117	0					
ANR	1245658	PtrMemberAccess	ns -> children		1245117	0					
ANR	1245659	Identifier	ns		1245117	0					
ANR	1245660	Identifier	children		1245117	1					
ANR	1245661	Identifier	content		1245117	1					
ANR	1245662	Argument	tns -> children -> content		1245117	1					
ANR	1245663	PtrMemberAccess	tns -> children -> content		1245117	0					
ANR	1245664	PtrMemberAccess	tns -> children		1245117	0					
ANR	1245665	Identifier	tns		1245117	0					
ANR	1245666	Identifier	children		1245117	1					
ANR	1245667	Identifier	content		1245117	1					
ANR	1245668	PrimaryExpression	0		1245117	1					
ANR	1245669	CompoundStatement		74:99:2282:2282	1245117	1					
ANR	1245670	IfStatement	if ( location )		1245117	0					
ANR	1245671	Condition	location	238:8:9827:9834	1245117	0	True				
ANR	1245672	Identifier	location		1245117	0					
ANR	1245673	CompoundStatement		75:18:2302:2302	1245117	1					
ANR	1245674	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: can't import schema from '%s', namespace must not match the enclosing schema 'targetNamespace'"" , location -> children -> content )"	239:5:9844:10007	1245117	0	True				
ANR	1245675	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: can't import schema from '%s', namespace must not match the enclosing schema 'targetNamespace'"" , location -> children -> content )"		1245117	0					
ANR	1245676	Callee	soap_error1		1245117	0					
ANR	1245677	Identifier	soap_error1		1245117	0					
ANR	1245678	ArgumentList	E_ERROR		1245117	1					
ANR	1245679	Argument	E_ERROR		1245117	0					
ANR	1245680	Identifier	E_ERROR		1245117	0					
ANR	1245681	Argument	"""Parsing Schema: can't import schema from '%s', namespace must not match the enclosing schema 'targetNamespace'"""		1245117	1					
ANR	1245682	PrimaryExpression	"""Parsing Schema: can't import schema from '%s', namespace must not match the enclosing schema 'targetNamespace'"""		1245117	0					
ANR	1245683	Argument	location -> children -> content		1245117	2					
ANR	1245684	PtrMemberAccess	location -> children -> content		1245117	0					
ANR	1245685	PtrMemberAccess	location -> children		1245117	0					
ANR	1245686	Identifier	location		1245117	0					
ANR	1245687	Identifier	children		1245117	1					
ANR	1245688	Identifier	content		1245117	1					
ANR	1245689	ElseStatement	else		1245117	0					
ANR	1245690	CompoundStatement		77:11:2485:2485	1245117	0					
ANR	1245691	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: can't import schema. Namespace must not match the enclosing schema 'targetNamespace'"" )"	241:5:10027:10151	1245117	0	True				
ANR	1245692	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: can't import schema. Namespace must not match the enclosing schema 'targetNamespace'"" )"		1245117	0					
ANR	1245693	Callee	soap_error0		1245117	0					
ANR	1245694	Identifier	soap_error0		1245117	0					
ANR	1245695	ArgumentList	E_ERROR		1245117	1					
ANR	1245696	Argument	E_ERROR		1245117	0					
ANR	1245697	Identifier	E_ERROR		1245117	0					
ANR	1245698	Argument	"""Parsing Schema: can't import schema. Namespace must not match the enclosing schema 'targetNamespace'"""		1245117	1					
ANR	1245699	PrimaryExpression	"""Parsing Schema: can't import schema. Namespace must not match the enclosing schema 'targetNamespace'"""		1245117	0					
ANR	1245700	IfStatement	if ( location )		1245117	5					
ANR	1245701	Condition	location	244:7:10171:10178	1245117	0	True				
ANR	1245702	Identifier	location		1245117	0					
ANR	1245703	CompoundStatement		82:4:2652:2699	1245117	1					
ANR	1245704	IdentifierDeclStatement	"xmlChar * base = xmlNodeGetBase ( trav -> doc , trav ) ;"	245:4:10187:10234	1245117	0	True				
ANR	1245705	IdentifierDecl	"* base = xmlNodeGetBase ( trav -> doc , trav )"		1245117	0					
ANR	1245706	IdentifierDeclType	xmlChar *		1245117	0					
ANR	1245707	Identifier	base		1245117	1					
ANR	1245708	AssignmentExpression	"* base = xmlNodeGetBase ( trav -> doc , trav )"		1245117	2		=			
ANR	1245709	Identifier	base		1245117	0					
ANR	1245710	CallExpression	"xmlNodeGetBase ( trav -> doc , trav )"		1245117	1					
ANR	1245711	Callee	xmlNodeGetBase		1245117	0					
ANR	1245712	Identifier	xmlNodeGetBase		1245117	0					
ANR	1245713	ArgumentList	trav -> doc		1245117	1					
ANR	1245714	Argument	trav -> doc		1245117	0					
ANR	1245715	PtrMemberAccess	trav -> doc		1245117	0					
ANR	1245716	Identifier	trav		1245117	0					
ANR	1245717	Identifier	doc		1245117	1					
ANR	1245718	Argument	trav		1245117	1					
ANR	1245719	Identifier	trav		1245117	0					
ANR	1245720	IfStatement	if ( base == NULL )		1245117	1					
ANR	1245721	Condition	base == NULL	247:8:10245:10256	1245117	0	True				
ANR	1245722	EqualityExpression	base == NULL		1245117	0		==			
ANR	1245723	Identifier	base		1245117	0					
ANR	1245724	Identifier	NULL		1245117	1					
ANR	1245725	CompoundStatement		84:22:2724:2724	1245117	1					
ANR	1245726	ExpressionStatement	"uri = xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"	248:7:10268:10330	1245117	0	True				
ANR	1245727	AssignmentExpression	"uri = xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"		1245117	0		=			
ANR	1245728	Identifier	uri		1245117	0					
ANR	1245729	CallExpression	"xmlBuildURI ( location -> children -> content , trav -> doc -> URL )"		1245117	1					
ANR	1245730	Callee	xmlBuildURI		1245117	0					
ANR	1245731	Identifier	xmlBuildURI		1245117	0					
ANR	1245732	ArgumentList	location -> children -> content		1245117	1					
ANR	1245733	Argument	location -> children -> content		1245117	0					
ANR	1245734	PtrMemberAccess	location -> children -> content		1245117	0					
ANR	1245735	PtrMemberAccess	location -> children		1245117	0					
ANR	1245736	Identifier	location		1245117	0					
ANR	1245737	Identifier	children		1245117	1					
ANR	1245738	Identifier	content		1245117	1					
ANR	1245739	Argument	trav -> doc -> URL		1245117	1					
ANR	1245740	PtrMemberAccess	trav -> doc -> URL		1245117	0					
ANR	1245741	PtrMemberAccess	trav -> doc		1245117	0					
ANR	1245742	Identifier	trav		1245117	0					
ANR	1245743	Identifier	doc		1245117	1					
ANR	1245744	Identifier	URL		1245117	1					
ANR	1245745	ElseStatement	else		1245117	0					
ANR	1245746	CompoundStatement		86:11:2808:2808	1245117	0					
ANR	1245747	ExpressionStatement	"uri = xmlBuildURI ( location -> children -> content , base )"	250:7:10352:10404	1245117	0	True				
ANR	1245748	AssignmentExpression	"uri = xmlBuildURI ( location -> children -> content , base )"		1245117	0		=			
ANR	1245749	Identifier	uri		1245117	0					
ANR	1245750	CallExpression	"xmlBuildURI ( location -> children -> content , base )"		1245117	1					
ANR	1245751	Callee	xmlBuildURI		1245117	0					
ANR	1245752	Identifier	xmlBuildURI		1245117	0					
ANR	1245753	ArgumentList	location -> children -> content		1245117	1					
ANR	1245754	Argument	location -> children -> content		1245117	0					
ANR	1245755	PtrMemberAccess	location -> children -> content		1245117	0					
ANR	1245756	PtrMemberAccess	location -> children		1245117	0					
ANR	1245757	Identifier	location		1245117	0					
ANR	1245758	Identifier	children		1245117	1					
ANR	1245759	Identifier	content		1245117	1					
ANR	1245760	Argument	base		1245117	1					
ANR	1245761	Identifier	base		1245117	0					
ANR	1245762	ExpressionStatement	xmlFree ( base )	251:7:10413:10426	1245117	1	True				
ANR	1245763	CallExpression	xmlFree ( base )		1245117	0					
ANR	1245764	Callee	xmlFree		1245117	0					
ANR	1245765	Identifier	xmlFree		1245117	0					
ANR	1245766	ArgumentList	base		1245117	1					
ANR	1245767	Argument	base		1245117	0					
ANR	1245768	Identifier	base		1245117	0					
ANR	1245769	Statement	schema_load_file	254:3:10442:10457	1245117	6	True				
ANR	1245770	Statement	(	254:19:10458:10458	1245117	7	True				
ANR	1245771	Statement	ctx	254:20:10459:10461	1245117	8	True				
ANR	1245772	Statement	","	254:23:10462:10462	1245117	9	True				
ANR	1245773	Statement	ns	254:25:10464:10465	1245117	10	True				
ANR	1245774	Statement	","	254:27:10466:10466	1245117	11	True				
ANR	1245775	Statement	uri	254:29:10468:10470	1245117	12	True				
ANR	1245776	Statement	","	254:32:10471:10471	1245117	13	True				
ANR	1245777	Statement	tns	254:34:10473:10475	1245117	14	True				
ANR	1245778	Statement	","	254:37:10476:10476	1245117	15	True				
ANR	1245779	Statement	1	254:39:10478:10478	1245117	16	True				
ANR	1245780	Statement	TSRMLS_CC	254:41:10480:10488	1245117	17	True				
ANR	1245781	Statement	)	254:50:10489:10489	1245117	18	True				
ANR	1245782	ExpressionStatement		254:51:10490:10490	1245117	19	True				
ANR	1245783	IfStatement	if ( uri != NULL )		1245117	20					
ANR	1245784	Condition	uri != NULL	255:7:10499:10509	1245117	0	True				
ANR	1245785	EqualityExpression	uri != NULL		1245117	0		!=			
ANR	1245786	Identifier	uri		1245117	0					
ANR	1245787	Identifier	NULL		1245117	1					
ANR	1245788	CompoundStatement		92:20:2977:2977	1245117	1					
ANR	1245789	ExpressionStatement	xmlFree ( uri )	255:21:10513:10525	1245117	0	True				
ANR	1245790	CallExpression	xmlFree ( uri )		1245117	0					
ANR	1245791	Callee	xmlFree		1245117	0					
ANR	1245792	Identifier	xmlFree		1245117	0					
ANR	1245793	ArgumentList	uri		1245117	1					
ANR	1245794	Argument	uri		1245117	0					
ANR	1245795	Identifier	uri		1245117	0					
ANR	1245796	ElseStatement	else		1245117	0					
ANR	1245797	IfStatement	"if ( node_is_equal ( trav , ""annotation"" ) )"		1245117	0					
ANR	1245798	Condition	"node_is_equal ( trav , ""annotation"" )"	256:13:10541:10572	1245117	0	True				
ANR	1245799	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1245117	0					
ANR	1245800	Callee	node_is_equal		1245117	0					
ANR	1245801	Identifier	node_is_equal		1245117	0					
ANR	1245802	ArgumentList	trav		1245117	1					
ANR	1245803	Argument	trav		1245117	0					
ANR	1245804	Identifier	trav		1245117	0					
ANR	1245805	Argument	"""annotation"""		1245117	1					
ANR	1245806	PrimaryExpression	"""annotation"""		1245117	0					
ANR	1245807	CompoundStatement		93:47:3040:3040	1245117	1					
ANR	1245808	ElseStatement	else		1245117	0					
ANR	1245809	CompoundStatement		102:9:3217:3217	1245117	0					
ANR	1245810	BreakStatement	break ;	266:3:10757:10762	1245117	0	True				
ANR	1245811	ExpressionStatement	trav = trav -> next	268:2:10770:10787	1245117	1	True				
ANR	1245812	AssignmentExpression	trav = trav -> next		1245117	0		=			
ANR	1245813	Identifier	trav		1245117	0					
ANR	1245814	PtrMemberAccess	trav -> next		1245117	1					
ANR	1245815	Identifier	trav		1245117	0					
ANR	1245816	Identifier	next		1245117	1					
ANR	1245817	WhileStatement	while ( trav != NULL )		1245117	9					
ANR	1245818	Condition	trav != NULL	271:8:10801:10812	1245117	0	True				
ANR	1245819	EqualityExpression	trav != NULL		1245117	0		!=			
ANR	1245820	Identifier	trav		1245117	0					
ANR	1245821	Identifier	NULL		1245117	1					
ANR	1245822	CompoundStatement		108:22:3280:3280	1245117	1					
ANR	1245823	IfStatement	"if ( node_is_equal ( trav , ""simpleType"" ) )"		1245117	0					
ANR	1245824	Condition	"node_is_equal ( trav , ""simpleType"" )"	272:6:10823:10854	1245117	0	True				
ANR	1245825	CallExpression	"node_is_equal ( trav , ""simpleType"" )"		1245117	0					
ANR	1245826	Callee	node_is_equal		1245117	0					
ANR	1245827	Identifier	node_is_equal		1245117	0					
ANR	1245828	ArgumentList	trav		1245117	1					
ANR	1245829	Argument	trav		1245117	0					
ANR	1245830	Identifier	trav		1245117	0					
ANR	1245831	Argument	"""simpleType"""		1245117	1					
ANR	1245832	PrimaryExpression	"""simpleType"""		1245117	0					
ANR	1245833	CompoundStatement		109:40:3322:3322	1245117	1					
ANR	1245834	ExpressionStatement	"schema_simpleType ( ctx -> sdl , tns , trav , NULL )"	273:3:10862:10906	1245117	0	True				
ANR	1245835	CallExpression	"schema_simpleType ( ctx -> sdl , tns , trav , NULL )"		1245117	0					
ANR	1245836	Callee	schema_simpleType		1245117	0					
ANR	1245837	Identifier	schema_simpleType		1245117	0					
ANR	1245838	ArgumentList	ctx -> sdl		1245117	1					
ANR	1245839	Argument	ctx -> sdl		1245117	0					
ANR	1245840	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245841	Identifier	ctx		1245117	0					
ANR	1245842	Identifier	sdl		1245117	1					
ANR	1245843	Argument	tns		1245117	1					
ANR	1245844	Identifier	tns		1245117	0					
ANR	1245845	Argument	trav		1245117	2					
ANR	1245846	Identifier	trav		1245117	0					
ANR	1245847	Argument	NULL		1245117	3					
ANR	1245848	Identifier	NULL		1245117	0					
ANR	1245849	ElseStatement	else		1245117	0					
ANR	1245850	IfStatement	"if ( node_is_equal ( trav , ""complexType"" ) )"		1245117	0					
ANR	1245851	Condition	"node_is_equal ( trav , ""complexType"" )"	274:13:10921:10953	1245117	0	True				
ANR	1245852	CallExpression	"node_is_equal ( trav , ""complexType"" )"		1245117	0					
ANR	1245853	Callee	node_is_equal		1245117	0					
ANR	1245854	Identifier	node_is_equal		1245117	0					
ANR	1245855	ArgumentList	trav		1245117	1					
ANR	1245856	Argument	trav		1245117	0					
ANR	1245857	Identifier	trav		1245117	0					
ANR	1245858	Argument	"""complexType"""		1245117	1					
ANR	1245859	PrimaryExpression	"""complexType"""		1245117	0					
ANR	1245860	CompoundStatement		111:48:3421:3421	1245117	1					
ANR	1245861	ExpressionStatement	"schema_complexType ( ctx -> sdl , tns , trav , NULL )"	275:3:10961:11006	1245117	0	True				
ANR	1245862	CallExpression	"schema_complexType ( ctx -> sdl , tns , trav , NULL )"		1245117	0					
ANR	1245863	Callee	schema_complexType		1245117	0					
ANR	1245864	Identifier	schema_complexType		1245117	0					
ANR	1245865	ArgumentList	ctx -> sdl		1245117	1					
ANR	1245866	Argument	ctx -> sdl		1245117	0					
ANR	1245867	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245868	Identifier	ctx		1245117	0					
ANR	1245869	Identifier	sdl		1245117	1					
ANR	1245870	Argument	tns		1245117	1					
ANR	1245871	Identifier	tns		1245117	0					
ANR	1245872	Argument	trav		1245117	2					
ANR	1245873	Identifier	trav		1245117	0					
ANR	1245874	Argument	NULL		1245117	3					
ANR	1245875	Identifier	NULL		1245117	0					
ANR	1245876	ElseStatement	else		1245117	0					
ANR	1245877	IfStatement	"if ( node_is_equal ( trav , ""group"" ) )"		1245117	0					
ANR	1245878	Condition	"node_is_equal ( trav , ""group"" )"	276:13:11021:11047	1245117	0	True				
ANR	1245879	CallExpression	"node_is_equal ( trav , ""group"" )"		1245117	0					
ANR	1245880	Callee	node_is_equal		1245117	0					
ANR	1245881	Identifier	node_is_equal		1245117	0					
ANR	1245882	ArgumentList	trav		1245117	1					
ANR	1245883	Argument	trav		1245117	0					
ANR	1245884	Identifier	trav		1245117	0					
ANR	1245885	Argument	"""group"""		1245117	1					
ANR	1245886	PrimaryExpression	"""group"""		1245117	0					
ANR	1245887	CompoundStatement		113:42:3515:3515	1245117	1					
ANR	1245888	ExpressionStatement	"schema_group ( ctx -> sdl , tns , trav , NULL , NULL )"	277:3:11055:11100	1245117	0	True				
ANR	1245889	CallExpression	"schema_group ( ctx -> sdl , tns , trav , NULL , NULL )"		1245117	0					
ANR	1245890	Callee	schema_group		1245117	0					
ANR	1245891	Identifier	schema_group		1245117	0					
ANR	1245892	ArgumentList	ctx -> sdl		1245117	1					
ANR	1245893	Argument	ctx -> sdl		1245117	0					
ANR	1245894	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245895	Identifier	ctx		1245117	0					
ANR	1245896	Identifier	sdl		1245117	1					
ANR	1245897	Argument	tns		1245117	1					
ANR	1245898	Identifier	tns		1245117	0					
ANR	1245899	Argument	trav		1245117	2					
ANR	1245900	Identifier	trav		1245117	0					
ANR	1245901	Argument	NULL		1245117	3					
ANR	1245902	Identifier	NULL		1245117	0					
ANR	1245903	Argument	NULL		1245117	4					
ANR	1245904	Identifier	NULL		1245117	0					
ANR	1245905	ElseStatement	else		1245117	0					
ANR	1245906	IfStatement	"if ( node_is_equal ( trav , ""attributeGroup"" ) )"		1245117	0					
ANR	1245907	Condition	"node_is_equal ( trav , ""attributeGroup"" )"	278:13:11115:11150	1245117	0	True				
ANR	1245908	CallExpression	"node_is_equal ( trav , ""attributeGroup"" )"		1245117	0					
ANR	1245909	Callee	node_is_equal		1245117	0					
ANR	1245910	Identifier	node_is_equal		1245117	0					
ANR	1245911	ArgumentList	trav		1245117	1					
ANR	1245912	Argument	trav		1245117	0					
ANR	1245913	Identifier	trav		1245117	0					
ANR	1245914	Argument	"""attributeGroup"""		1245117	1					
ANR	1245915	PrimaryExpression	"""attributeGroup"""		1245117	0					
ANR	1245916	CompoundStatement		115:51:3618:3618	1245117	1					
ANR	1245917	ExpressionStatement	"schema_attributeGroup ( ctx -> sdl , tns , trav , NULL , ctx )"	279:3:11158:11211	1245117	0	True				
ANR	1245918	CallExpression	"schema_attributeGroup ( ctx -> sdl , tns , trav , NULL , ctx )"		1245117	0					
ANR	1245919	Callee	schema_attributeGroup		1245117	0					
ANR	1245920	Identifier	schema_attributeGroup		1245117	0					
ANR	1245921	ArgumentList	ctx -> sdl		1245117	1					
ANR	1245922	Argument	ctx -> sdl		1245117	0					
ANR	1245923	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245924	Identifier	ctx		1245117	0					
ANR	1245925	Identifier	sdl		1245117	1					
ANR	1245926	Argument	tns		1245117	1					
ANR	1245927	Identifier	tns		1245117	0					
ANR	1245928	Argument	trav		1245117	2					
ANR	1245929	Identifier	trav		1245117	0					
ANR	1245930	Argument	NULL		1245117	3					
ANR	1245931	Identifier	NULL		1245117	0					
ANR	1245932	Argument	ctx		1245117	4					
ANR	1245933	Identifier	ctx		1245117	0					
ANR	1245934	ElseStatement	else		1245117	0					
ANR	1245935	IfStatement	"if ( node_is_equal ( trav , ""element"" ) )"		1245117	0					
ANR	1245936	Condition	"node_is_equal ( trav , ""element"" )"	280:13:11226:11254	1245117	0	True				
ANR	1245937	CallExpression	"node_is_equal ( trav , ""element"" )"		1245117	0					
ANR	1245938	Callee	node_is_equal		1245117	0					
ANR	1245939	Identifier	node_is_equal		1245117	0					
ANR	1245940	ArgumentList	trav		1245117	1					
ANR	1245941	Argument	trav		1245117	0					
ANR	1245942	Identifier	trav		1245117	0					
ANR	1245943	Argument	"""element"""		1245117	1					
ANR	1245944	PrimaryExpression	"""element"""		1245117	0					
ANR	1245945	CompoundStatement		117:44:3722:3722	1245117	1					
ANR	1245946	ExpressionStatement	"schema_element ( ctx -> sdl , tns , trav , NULL , NULL )"	281:3:11262:11309	1245117	0	True				
ANR	1245947	CallExpression	"schema_element ( ctx -> sdl , tns , trav , NULL , NULL )"		1245117	0					
ANR	1245948	Callee	schema_element		1245117	0					
ANR	1245949	Identifier	schema_element		1245117	0					
ANR	1245950	ArgumentList	ctx -> sdl		1245117	1					
ANR	1245951	Argument	ctx -> sdl		1245117	0					
ANR	1245952	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245953	Identifier	ctx		1245117	0					
ANR	1245954	Identifier	sdl		1245117	1					
ANR	1245955	Argument	tns		1245117	1					
ANR	1245956	Identifier	tns		1245117	0					
ANR	1245957	Argument	trav		1245117	2					
ANR	1245958	Identifier	trav		1245117	0					
ANR	1245959	Argument	NULL		1245117	3					
ANR	1245960	Identifier	NULL		1245117	0					
ANR	1245961	Argument	NULL		1245117	4					
ANR	1245962	Identifier	NULL		1245117	0					
ANR	1245963	ElseStatement	else		1245117	0					
ANR	1245964	IfStatement	"if ( node_is_equal ( trav , ""attribute"" ) )"		1245117	0					
ANR	1245965	Condition	"node_is_equal ( trav , ""attribute"" )"	282:13:11324:11354	1245117	0	True				
ANR	1245966	CallExpression	"node_is_equal ( trav , ""attribute"" )"		1245117	0					
ANR	1245967	Callee	node_is_equal		1245117	0					
ANR	1245968	Identifier	node_is_equal		1245117	0					
ANR	1245969	ArgumentList	trav		1245117	1					
ANR	1245970	Argument	trav		1245117	0					
ANR	1245971	Identifier	trav		1245117	0					
ANR	1245972	Argument	"""attribute"""		1245117	1					
ANR	1245973	PrimaryExpression	"""attribute"""		1245117	0					
ANR	1245974	CompoundStatement		119:46:3822:3822	1245117	1					
ANR	1245975	ExpressionStatement	"schema_attribute ( ctx -> sdl , tns , trav , NULL , ctx )"	283:3:11362:11410	1245117	0	True				
ANR	1245976	CallExpression	"schema_attribute ( ctx -> sdl , tns , trav , NULL , ctx )"		1245117	0					
ANR	1245977	Callee	schema_attribute		1245117	0					
ANR	1245978	Identifier	schema_attribute		1245117	0					
ANR	1245979	ArgumentList	ctx -> sdl		1245117	1					
ANR	1245980	Argument	ctx -> sdl		1245117	0					
ANR	1245981	PtrMemberAccess	ctx -> sdl		1245117	0					
ANR	1245982	Identifier	ctx		1245117	0					
ANR	1245983	Identifier	sdl		1245117	1					
ANR	1245984	Argument	tns		1245117	1					
ANR	1245985	Identifier	tns		1245117	0					
ANR	1245986	Argument	trav		1245117	2					
ANR	1245987	Identifier	trav		1245117	0					
ANR	1245988	Argument	NULL		1245117	3					
ANR	1245989	Identifier	NULL		1245117	0					
ANR	1245990	Argument	ctx		1245117	4					
ANR	1245991	Identifier	ctx		1245117	0					
ANR	1245992	ElseStatement	else		1245117	0					
ANR	1245993	IfStatement	"if ( node_is_equal ( trav , ""notation"" ) )"		1245117	0					
ANR	1245994	Condition	"node_is_equal ( trav , ""notation"" )"	284:13:11425:11454	1245117	0	True				
ANR	1245995	CallExpression	"node_is_equal ( trav , ""notation"" )"		1245117	0					
ANR	1245996	Callee	node_is_equal		1245117	0					
ANR	1245997	Identifier	node_is_equal		1245117	0					
ANR	1245998	ArgumentList	trav		1245117	1					
ANR	1245999	Argument	trav		1245117	0					
ANR	1246000	Identifier	trav		1245117	0					
ANR	1246001	Argument	"""notation"""		1245117	1					
ANR	1246002	PrimaryExpression	"""notation"""		1245117	0					
ANR	1246003	CompoundStatement		121:45:3922:3922	1245117	1					
ANR	1246004	ElseStatement	else		1245117	0					
ANR	1246005	IfStatement	"if ( node_is_equal ( trav , ""annotation"" ) )"		1245117	0					
ANR	1246006	Condition	"node_is_equal ( trav , ""annotation"" )"	286:13:11506:11537	1245117	0	True				
ANR	1246007	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1245117	0					
ANR	1246008	Callee	node_is_equal		1245117	0					
ANR	1246009	Identifier	node_is_equal		1245117	0					
ANR	1246010	ArgumentList	trav		1245117	1					
ANR	1246011	Argument	trav		1245117	0					
ANR	1246012	Identifier	trav		1245117	0					
ANR	1246013	Argument	"""annotation"""		1245117	1					
ANR	1246014	PrimaryExpression	"""annotation"""		1245117	0					
ANR	1246015	CompoundStatement		123:47:4005:4005	1245117	1					
ANR	1246016	ElseStatement	else		1245117	0					
ANR	1246017	CompoundStatement		125:9:4052:4052	1245117	0					
ANR	1246018	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in schema"" , trav -> name )"	289:3:11592:11669	1245117	0	True				
ANR	1246019	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in schema"" , trav -> name )"		1245117	0					
ANR	1246020	Callee	soap_error1		1245117	0					
ANR	1246021	Identifier	soap_error1		1245117	0					
ANR	1246022	ArgumentList	E_ERROR		1245117	1					
ANR	1246023	Argument	E_ERROR		1245117	0					
ANR	1246024	Identifier	E_ERROR		1245117	0					
ANR	1246025	Argument	"""Parsing Schema: unexpected <%s> in schema"""		1245117	1					
ANR	1246026	PrimaryExpression	"""Parsing Schema: unexpected <%s> in schema"""		1245117	0					
ANR	1246027	Argument	trav -> name		1245117	2					
ANR	1246028	PtrMemberAccess	trav -> name		1245117	0					
ANR	1246029	Identifier	trav		1245117	0					
ANR	1246030	Identifier	name		1245117	1					
ANR	1246031	ExpressionStatement	trav = trav -> next	291:2:11677:11694	1245117	1	True				
ANR	1246032	AssignmentExpression	trav = trav -> next		1245117	0		=			
ANR	1246033	Identifier	trav		1245117	0					
ANR	1246034	PtrMemberAccess	trav -> next		1245117	1					
ANR	1246035	Identifier	trav		1245117	0					
ANR	1246036	Identifier	next		1245117	1					
ANR	1246037	ReturnStatement	return TRUE ;	293:1:11700:11711	1245117	10	True				
ANR	1246038	Identifier	TRUE		1245117	0					
ANR	1246039	ReturnType	int		1245117	1					
ANR	1246040	Identifier	load_schema		1245117	2					
ANR	1246041	ParameterList	"sdlCtx * ctx , xmlNodePtr schema TSRMLS_DC"		1245117	3					
ANR	1246042	Parameter	sdlCtx * ctx	163:16:7492:7502	1245117	0	True				
ANR	1246043	ParameterType	sdlCtx *		1245117	0					
ANR	1246044	Identifier	ctx		1245117	1					
ANR	1246045	Parameter	xmlNodePtr schema TSRMLS_DC	163:29:7505:7531	1245117	1	True				
ANR	1246046	ParameterType	xmlNodePtr schema		1245117	0					
ANR	1246047	Identifier	TSRMLS_DC		1245117	1					
ANR	1246048	CFGEntryNode	ENTRY		1245117		True				
ANR	1246049	CFGExitNode	EXIT		1245117		True				
ANR	1246050	Symbol	* location		1245117						
ANR	1246051	Symbol	trav -> next		1245117						
ANR	1246052	Symbol	get_attribute		1245117						
ANR	1246053	Symbol	* * location		1245117						
ANR	1246054	Symbol	trav		1245117						
ANR	1246055	Symbol	location -> children		1245117						
ANR	1246056	Symbol	trav -> properties		1245117						
ANR	1246057	Symbol	schema -> properties		1245117						
ANR	1246058	Symbol	TSRMLS_DC		1245117						
ANR	1246059	Symbol	* * tns		1245117						
ANR	1246060	Symbol	tns -> children -> content		1245117						
ANR	1246061	Symbol	ctx -> sdl -> types		1245117						
ANR	1246062	Symbol	delete_attribute		1245117						
ANR	1246063	Symbol	tns -> children		1245117						
ANR	1246064	Symbol	NULL		1245117						
ANR	1246065	Symbol	* tns		1245117						
ANR	1246066	Symbol	xmlStrcmp		1245117						
ANR	1246067	Symbol	ctx		1245117						
ANR	1246068	Symbol	* ctx -> sdl		1245117						
ANR	1246069	Symbol	TRUE		1245117						
ANR	1246070	Symbol	ns -> children -> content		1245117						
ANR	1246071	Symbol	* trav -> doc		1245117						
ANR	1246072	Symbol	* * ns		1245117						
ANR	1246073	Symbol	tns		1245117						
ANR	1246074	Symbol	ctx -> attributeGroups		1245117						
ANR	1246075	Symbol	trav -> name		1245117						
ANR	1246076	Symbol	xmlBuildURI		1245117						
ANR	1246077	Symbol	BAD_CAST		1245117						
ANR	1246078	Symbol	schema		1245117						
ANR	1246079	Symbol	* * trav		1245117						
ANR	1246080	Symbol	ctx -> attributes		1245117						
ANR	1246081	Symbol	* ns -> children		1245117						
ANR	1246082	Symbol	schema -> children		1245117						
ANR	1246083	Symbol	ns		1245117						
ANR	1246084	Symbol	location -> children -> content		1245117						
ANR	1246085	Symbol	node_is_equal		1245117						
ANR	1246086	Symbol	* trav		1245117						
ANR	1246087	Symbol	* schema		1245117						
ANR	1246088	Symbol	xmlNodeGetBase		1245117						
ANR	1246089	Symbol	trav -> doc		1245117						
ANR	1246090	Symbol	emalloc		1245117						
ANR	1246091	Symbol	xmlSetProp		1245117						
ANR	1246092	Symbol	ns -> children		1245117						
ANR	1246093	Symbol	ctx -> sdl		1245117						
ANR	1246094	Symbol	* ns		1245117						
ANR	1246095	Symbol	* tns -> children		1245117						
ANR	1246096	Symbol	trav -> doc -> URL		1245117						
ANR	1246097	Symbol	delete_type		1245117						
ANR	1246098	Symbol	* location -> children		1245117						
ANR	1246099	Symbol	uri		1245117						
ANR	1246100	Symbol	* ctx		1245117						
ANR	1246101	Symbol	E_ERROR		1245117						
ANR	1246102	Symbol	location		1245117						
ANR	1246103	Symbol	* * ctx		1245117						
ANR	1246104	Symbol	base		1245117						
ANR	1246105	Function	schema_simpleType	305:0:11929:15249							
ANR	1246106	FunctionDef	"schema_simpleType (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr simpleType , sdlTypePtr cur_type)"		1246105	0					
ANR	1246107	CompoundStatement		306:0:12030:15249	1246105	0					
ANR	1246108	IdentifierDeclStatement	xmlNodePtr trav ;	307:1:12033:12048	1246105	0	True				
ANR	1246109	IdentifierDecl	trav		1246105	0					
ANR	1246110	IdentifierDeclType	xmlNodePtr		1246105	0					
ANR	1246111	Identifier	trav		1246105	1					
ANR	1246112	IdentifierDeclStatement	"xmlAttrPtr name , ns ;"	308:1:12051:12070	1246105	1	True				
ANR	1246113	IdentifierDecl	name		1246105	0					
ANR	1246114	IdentifierDeclType	xmlAttrPtr		1246105	0					
ANR	1246115	Identifier	name		1246105	1					
ANR	1246116	IdentifierDecl	ns		1246105	1					
ANR	1246117	IdentifierDeclType	xmlAttrPtr		1246105	0					
ANR	1246118	Identifier	ns		1246105	1					
ANR	1246119	ExpressionStatement	"ns = get_attribute ( simpleType -> properties , ""targetNamespace"" )"	310:1:12074:12135	1246105	2	True				
ANR	1246120	AssignmentExpression	"ns = get_attribute ( simpleType -> properties , ""targetNamespace"" )"		1246105	0		=			
ANR	1246121	Identifier	ns		1246105	0					
ANR	1246122	CallExpression	"get_attribute ( simpleType -> properties , ""targetNamespace"" )"		1246105	1					
ANR	1246123	Callee	get_attribute		1246105	0					
ANR	1246124	Identifier	get_attribute		1246105	0					
ANR	1246125	ArgumentList	simpleType -> properties		1246105	1					
ANR	1246126	Argument	simpleType -> properties		1246105	0					
ANR	1246127	PtrMemberAccess	simpleType -> properties		1246105	0					
ANR	1246128	Identifier	simpleType		1246105	0					
ANR	1246129	Identifier	properties		1246105	1					
ANR	1246130	Argument	"""targetNamespace"""		1246105	1					
ANR	1246131	PrimaryExpression	"""targetNamespace"""		1246105	0					
ANR	1246132	IfStatement	if ( ns == NULL )		1246105	3					
ANR	1246133	Condition	ns == NULL	311:5:12142:12151	1246105	0	True				
ANR	1246134	EqualityExpression	ns == NULL		1246105	0		==			
ANR	1246135	Identifier	ns		1246105	0					
ANR	1246136	Identifier	NULL		1246105	1					
ANR	1246137	CompoundStatement		6:17:123:123	1246105	1					
ANR	1246138	ExpressionStatement	ns = tns	312:2:12158:12166	1246105	0	True				
ANR	1246139	AssignmentExpression	ns = tns		1246105	0		=			
ANR	1246140	Identifier	ns		1246105	0					
ANR	1246141	Identifier	tns		1246105	1					
ANR	1246142	ExpressionStatement	"name = get_attribute ( simpleType -> properties , ""name"" )"	315:1:12173:12225	1246105	4	True				
ANR	1246143	AssignmentExpression	"name = get_attribute ( simpleType -> properties , ""name"" )"		1246105	0		=			
ANR	1246144	Identifier	name		1246105	0					
ANR	1246145	CallExpression	"get_attribute ( simpleType -> properties , ""name"" )"		1246105	1					
ANR	1246146	Callee	get_attribute		1246105	0					
ANR	1246147	Identifier	get_attribute		1246105	0					
ANR	1246148	ArgumentList	simpleType -> properties		1246105	1					
ANR	1246149	Argument	simpleType -> properties		1246105	0					
ANR	1246150	PtrMemberAccess	simpleType -> properties		1246105	0					
ANR	1246151	Identifier	simpleType		1246105	0					
ANR	1246152	Identifier	properties		1246105	1					
ANR	1246153	Argument	"""name"""		1246105	1					
ANR	1246154	PrimaryExpression	"""name"""		1246105	0					
ANR	1246155	IfStatement	if ( cur_type != NULL )		1246105	5					
ANR	1246156	Condition	cur_type != NULL	316:5:12232:12247	1246105	0	True				
ANR	1246157	EqualityExpression	cur_type != NULL		1246105	0		!=			
ANR	1246158	Identifier	cur_type		1246105	0					
ANR	1246159	Identifier	NULL		1246105	1					
ANR	1246160	CompoundStatement		13:2:280:304	1246105	1					
ANR	1246161	IdentifierDeclStatement	"sdlTypePtr newType , * ptr ;"	318:2:12311:12335	1246105	0	True				
ANR	1246162	IdentifierDecl	newType		1246105	0					
ANR	1246163	IdentifierDeclType	sdlTypePtr		1246105	0					
ANR	1246164	Identifier	newType		1246105	1					
ANR	1246165	IdentifierDecl	* ptr		1246105	1					
ANR	1246166	IdentifierDeclType	sdlTypePtr *		1246105	0					
ANR	1246167	Identifier	ptr		1246105	1					
ANR	1246168	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	320:2:12340:12374	1246105	1	True				
ANR	1246169	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1246105	0		=			
ANR	1246170	Identifier	newType		1246105	0					
ANR	1246171	CallExpression	emalloc ( sizeof ( sdlType ) )		1246105	1					
ANR	1246172	Callee	emalloc		1246105	0					
ANR	1246173	Identifier	emalloc		1246105	0					
ANR	1246174	ArgumentList	sizeof ( sdlType )		1246105	1					
ANR	1246175	Argument	sizeof ( sdlType )		1246105	0					
ANR	1246176	SizeofExpression	sizeof ( sdlType )		1246105	0					
ANR	1246177	Sizeof	sizeof		1246105	0					
ANR	1246178	SizeofOperand	sdlType		1246105	1					
ANR	1246179	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	321:2:12378:12413	1246105	2	True				
ANR	1246180	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1246105	0					
ANR	1246181	Callee	memset		1246105	0					
ANR	1246182	Identifier	memset		1246105	0					
ANR	1246183	ArgumentList	newType		1246105	1					
ANR	1246184	Argument	newType		1246105	0					
ANR	1246185	Identifier	newType		1246105	0					
ANR	1246186	Argument	0		1246105	1					
ANR	1246187	PrimaryExpression	0		1246105	0					
ANR	1246188	Argument	sizeof ( sdlType )		1246105	2					
ANR	1246189	SizeofExpression	sizeof ( sdlType )		1246105	0					
ANR	1246190	Sizeof	sizeof		1246105	0					
ANR	1246191	SizeofOperand	sdlType		1246105	1					
ANR	1246192	ExpressionStatement	newType -> kind = XSD_TYPEKIND_SIMPLE	322:2:12417:12452	1246105	3	True				
ANR	1246193	AssignmentExpression	newType -> kind = XSD_TYPEKIND_SIMPLE		1246105	0		=			
ANR	1246194	PtrMemberAccess	newType -> kind		1246105	0					
ANR	1246195	Identifier	newType		1246105	0					
ANR	1246196	Identifier	kind		1246105	1					
ANR	1246197	Identifier	XSD_TYPEKIND_SIMPLE		1246105	1					
ANR	1246198	IfStatement	if ( name != NULL )		1246105	4					
ANR	1246199	Condition	name != NULL	323:6:12460:12471	1246105	0	True				
ANR	1246200	EqualityExpression	name != NULL		1246105	0		!=			
ANR	1246201	Identifier	name		1246105	0					
ANR	1246202	Identifier	NULL		1246105	1					
ANR	1246203	CompoundStatement		18:20:443:443	1246105	1					
ANR	1246204	ExpressionStatement	newType -> name = estrdup ( ( char * ) name -> children -> content )	324:3:12479:12534	1246105	0	True				
ANR	1246205	AssignmentExpression	newType -> name = estrdup ( ( char * ) name -> children -> content )		1246105	0		=			
ANR	1246206	PtrMemberAccess	newType -> name		1246105	0					
ANR	1246207	Identifier	newType		1246105	0					
ANR	1246208	Identifier	name		1246105	1					
ANR	1246209	CallExpression	estrdup ( ( char * ) name -> children -> content )		1246105	1					
ANR	1246210	Callee	estrdup		1246105	0					
ANR	1246211	Identifier	estrdup		1246105	0					
ANR	1246212	ArgumentList	( char * ) name -> children -> content		1246105	1					
ANR	1246213	Argument	( char * ) name -> children -> content		1246105	0					
ANR	1246214	CastExpression	( char * ) name -> children -> content		1246105	0					
ANR	1246215	CastTarget	char *		1246105	0					
ANR	1246216	PtrMemberAccess	name -> children -> content		1246105	1					
ANR	1246217	PtrMemberAccess	name -> children		1246105	0					
ANR	1246218	Identifier	name		1246105	0					
ANR	1246219	Identifier	children		1246105	1					
ANR	1246220	Identifier	content		1246105	1					
ANR	1246221	ExpressionStatement	newType -> namens = estrdup ( ( char * ) ns -> children -> content )	325:3:12539:12594	1246105	1	True				
ANR	1246222	AssignmentExpression	newType -> namens = estrdup ( ( char * ) ns -> children -> content )		1246105	0		=			
ANR	1246223	PtrMemberAccess	newType -> namens		1246105	0					
ANR	1246224	Identifier	newType		1246105	0					
ANR	1246225	Identifier	namens		1246105	1					
ANR	1246226	CallExpression	estrdup ( ( char * ) ns -> children -> content )		1246105	1					
ANR	1246227	Callee	estrdup		1246105	0					
ANR	1246228	Identifier	estrdup		1246105	0					
ANR	1246229	ArgumentList	( char * ) ns -> children -> content		1246105	1					
ANR	1246230	Argument	( char * ) ns -> children -> content		1246105	0					
ANR	1246231	CastExpression	( char * ) ns -> children -> content		1246105	0					
ANR	1246232	CastTarget	char *		1246105	0					
ANR	1246233	PtrMemberAccess	ns -> children -> content		1246105	1					
ANR	1246234	PtrMemberAccess	ns -> children		1246105	0					
ANR	1246235	Identifier	ns		1246105	0					
ANR	1246236	Identifier	children		1246105	1					
ANR	1246237	Identifier	content		1246105	1					
ANR	1246238	ElseStatement	else		1246105	0					
ANR	1246239	CompoundStatement		21:9:574:574	1246105	0					
ANR	1246240	ExpressionStatement	newType -> name = estrdup ( cur_type -> name )	327:3:12610:12649	1246105	0	True				
ANR	1246241	AssignmentExpression	newType -> name = estrdup ( cur_type -> name )		1246105	0		=			
ANR	1246242	PtrMemberAccess	newType -> name		1246105	0					
ANR	1246243	Identifier	newType		1246105	0					
ANR	1246244	Identifier	name		1246105	1					
ANR	1246245	CallExpression	estrdup ( cur_type -> name )		1246105	1					
ANR	1246246	Callee	estrdup		1246105	0					
ANR	1246247	Identifier	estrdup		1246105	0					
ANR	1246248	ArgumentList	cur_type -> name		1246105	1					
ANR	1246249	Argument	cur_type -> name		1246105	0					
ANR	1246250	PtrMemberAccess	cur_type -> name		1246105	0					
ANR	1246251	Identifier	cur_type		1246105	0					
ANR	1246252	Identifier	name		1246105	1					
ANR	1246253	ExpressionStatement	newType -> namens = estrdup ( cur_type -> namens )	328:3:12654:12697	1246105	1	True				
ANR	1246254	AssignmentExpression	newType -> namens = estrdup ( cur_type -> namens )		1246105	0		=			
ANR	1246255	PtrMemberAccess	newType -> namens		1246105	0					
ANR	1246256	Identifier	newType		1246105	0					
ANR	1246257	Identifier	namens		1246105	1					
ANR	1246258	CallExpression	estrdup ( cur_type -> namens )		1246105	1					
ANR	1246259	Callee	estrdup		1246105	0					
ANR	1246260	Identifier	estrdup		1246105	0					
ANR	1246261	ArgumentList	cur_type -> namens		1246105	1					
ANR	1246262	Argument	cur_type -> namens		1246105	0					
ANR	1246263	PtrMemberAccess	cur_type -> namens		1246105	0					
ANR	1246264	Identifier	cur_type		1246105	0					
ANR	1246265	Identifier	namens		1246105	1					
ANR	1246266	ExpressionStatement	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"	331:2:12706:12791	1246105	5	True				
ANR	1246267	CallExpression	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"		1246105	0					
ANR	1246268	Callee	zend_hash_next_index_insert		1246105	0					
ANR	1246269	Identifier	zend_hash_next_index_insert		1246105	0					
ANR	1246270	ArgumentList	sdl -> types		1246105	1					
ANR	1246271	Argument	sdl -> types		1246105	0					
ANR	1246272	PtrMemberAccess	sdl -> types		1246105	0					
ANR	1246273	Identifier	sdl		1246105	0					
ANR	1246274	Identifier	types		1246105	1					
ANR	1246275	Argument	& newType		1246105	1					
ANR	1246276	UnaryOperationExpression	& newType		1246105	0					
ANR	1246277	UnaryOperator	&		1246105	0					
ANR	1246278	Identifier	newType		1246105	1					
ANR	1246279	Argument	sizeof ( sdlTypePtr )		1246105	2					
ANR	1246280	SizeofExpression	sizeof ( sdlTypePtr )		1246105	0					
ANR	1246281	Sizeof	sizeof		1246105	0					
ANR	1246282	SizeofOperand	sdlTypePtr		1246105	1					
ANR	1246283	Argument	( void * * ) & ptr		1246105	3					
ANR	1246284	CastExpression	( void * * ) & ptr		1246105	0					
ANR	1246285	CastTarget	void * *		1246105	0					
ANR	1246286	UnaryOperationExpression	& ptr		1246105	1					
ANR	1246287	UnaryOperator	&		1246105	0					
ANR	1246288	Identifier	ptr		1246105	1					
ANR	1246289	IfStatement	if ( sdl -> encoders == NULL )		1246105	6					
ANR	1246290	Condition	sdl -> encoders == NULL	333:6:12800:12820	1246105	0	True				
ANR	1246291	EqualityExpression	sdl -> encoders == NULL		1246105	0		==			
ANR	1246292	PtrMemberAccess	sdl -> encoders		1246105	0					
ANR	1246293	Identifier	sdl		1246105	0					
ANR	1246294	Identifier	encoders		1246105	1					
ANR	1246295	Identifier	NULL		1246105	1					
ANR	1246296	CompoundStatement		28:29:792:792	1246105	1					
ANR	1246297	ExpressionStatement	sdl -> encoders = emalloc ( sizeof ( HashTable ) )	334:3:12828:12870	1246105	0	True				
ANR	1246298	AssignmentExpression	sdl -> encoders = emalloc ( sizeof ( HashTable ) )		1246105	0		=			
ANR	1246299	PtrMemberAccess	sdl -> encoders		1246105	0					
ANR	1246300	Identifier	sdl		1246105	0					
ANR	1246301	Identifier	encoders		1246105	1					
ANR	1246302	CallExpression	emalloc ( sizeof ( HashTable ) )		1246105	1					
ANR	1246303	Callee	emalloc		1246105	0					
ANR	1246304	Identifier	emalloc		1246105	0					
ANR	1246305	ArgumentList	sizeof ( HashTable )		1246105	1					
ANR	1246306	Argument	sizeof ( HashTable )		1246105	0					
ANR	1246307	SizeofExpression	sizeof ( HashTable )		1246105	0					
ANR	1246308	Sizeof	sizeof		1246105	0					
ANR	1246309	SizeofOperand	HashTable		1246105	1					
ANR	1246310	ExpressionStatement	"zend_hash_init ( sdl -> encoders , 0 , NULL , delete_encoder , 0 )"	335:3:12875:12932	1246105	1	True				
ANR	1246311	CallExpression	"zend_hash_init ( sdl -> encoders , 0 , NULL , delete_encoder , 0 )"		1246105	0					
ANR	1246312	Callee	zend_hash_init		1246105	0					
ANR	1246313	Identifier	zend_hash_init		1246105	0					
ANR	1246314	ArgumentList	sdl -> encoders		1246105	1					
ANR	1246315	Argument	sdl -> encoders		1246105	0					
ANR	1246316	PtrMemberAccess	sdl -> encoders		1246105	0					
ANR	1246317	Identifier	sdl		1246105	0					
ANR	1246318	Identifier	encoders		1246105	1					
ANR	1246319	Argument	0		1246105	1					
ANR	1246320	PrimaryExpression	0		1246105	0					
ANR	1246321	Argument	NULL		1246105	2					
ANR	1246322	Identifier	NULL		1246105	0					
ANR	1246323	Argument	delete_encoder		1246105	3					
ANR	1246324	Identifier	delete_encoder		1246105	0					
ANR	1246325	Argument	0		1246105	4					
ANR	1246326	PrimaryExpression	0		1246105	0					
ANR	1246327	ExpressionStatement	cur_type -> encode = emalloc ( sizeof ( encode ) )	337:2:12940:12982	1246105	7	True				
ANR	1246328	AssignmentExpression	cur_type -> encode = emalloc ( sizeof ( encode ) )		1246105	0		=			
ANR	1246329	PtrMemberAccess	cur_type -> encode		1246105	0					
ANR	1246330	Identifier	cur_type		1246105	0					
ANR	1246331	Identifier	encode		1246105	1					
ANR	1246332	CallExpression	emalloc ( sizeof ( encode ) )		1246105	1					
ANR	1246333	Callee	emalloc		1246105	0					
ANR	1246334	Identifier	emalloc		1246105	0					
ANR	1246335	ArgumentList	sizeof ( encode )		1246105	1					
ANR	1246336	Argument	sizeof ( encode )		1246105	0					
ANR	1246337	SizeofExpression	sizeof ( encode )		1246105	0					
ANR	1246338	Sizeof	sizeof		1246105	0					
ANR	1246339	SizeofOperand	encode		1246105	1					
ANR	1246340	ExpressionStatement	"memset ( cur_type -> encode , 0 , sizeof ( encode ) )"	338:2:12986:13029	1246105	8	True				
ANR	1246341	CallExpression	"memset ( cur_type -> encode , 0 , sizeof ( encode ) )"		1246105	0					
ANR	1246342	Callee	memset		1246105	0					
ANR	1246343	Identifier	memset		1246105	0					
ANR	1246344	ArgumentList	cur_type -> encode		1246105	1					
ANR	1246345	Argument	cur_type -> encode		1246105	0					
ANR	1246346	PtrMemberAccess	cur_type -> encode		1246105	0					
ANR	1246347	Identifier	cur_type		1246105	0					
ANR	1246348	Identifier	encode		1246105	1					
ANR	1246349	Argument	0		1246105	1					
ANR	1246350	PrimaryExpression	0		1246105	0					
ANR	1246351	Argument	sizeof ( encode )		1246105	2					
ANR	1246352	SizeofExpression	sizeof ( encode )		1246105	0					
ANR	1246353	Sizeof	sizeof		1246105	0					
ANR	1246354	SizeofOperand	encode		1246105	1					
ANR	1246355	ExpressionStatement	cur_type -> encode -> details . ns = estrdup ( newType -> namens )	339:2:13033:13088	1246105	9	True				
ANR	1246356	AssignmentExpression	cur_type -> encode -> details . ns = estrdup ( newType -> namens )		1246105	0		=			
ANR	1246357	MemberAccess	cur_type -> encode -> details . ns		1246105	0					
ANR	1246358	PtrMemberAccess	cur_type -> encode -> details		1246105	0					
ANR	1246359	PtrMemberAccess	cur_type -> encode		1246105	0					
ANR	1246360	Identifier	cur_type		1246105	0					
ANR	1246361	Identifier	encode		1246105	1					
ANR	1246362	Identifier	details		1246105	1					
ANR	1246363	Identifier	ns		1246105	1					
ANR	1246364	CallExpression	estrdup ( newType -> namens )		1246105	1					
ANR	1246365	Callee	estrdup		1246105	0					
ANR	1246366	Identifier	estrdup		1246105	0					
ANR	1246367	ArgumentList	newType -> namens		1246105	1					
ANR	1246368	Argument	newType -> namens		1246105	0					
ANR	1246369	PtrMemberAccess	newType -> namens		1246105	0					
ANR	1246370	Identifier	newType		1246105	0					
ANR	1246371	Identifier	namens		1246105	1					
ANR	1246372	ExpressionStatement	cur_type -> encode -> details . type_str = estrdup ( newType -> name )	340:2:13092:13151	1246105	10	True				
ANR	1246373	AssignmentExpression	cur_type -> encode -> details . type_str = estrdup ( newType -> name )		1246105	0		=			
ANR	1246374	MemberAccess	cur_type -> encode -> details . type_str		1246105	0					
ANR	1246375	PtrMemberAccess	cur_type -> encode -> details		1246105	0					
ANR	1246376	PtrMemberAccess	cur_type -> encode		1246105	0					
ANR	1246377	Identifier	cur_type		1246105	0					
ANR	1246378	Identifier	encode		1246105	1					
ANR	1246379	Identifier	details		1246105	1					
ANR	1246380	Identifier	type_str		1246105	1					
ANR	1246381	CallExpression	estrdup ( newType -> name )		1246105	1					
ANR	1246382	Callee	estrdup		1246105	0					
ANR	1246383	Identifier	estrdup		1246105	0					
ANR	1246384	ArgumentList	newType -> name		1246105	1					
ANR	1246385	Argument	newType -> name		1246105	0					
ANR	1246386	PtrMemberAccess	newType -> name		1246105	0					
ANR	1246387	Identifier	newType		1246105	0					
ANR	1246388	Identifier	name		1246105	1					
ANR	1246389	ExpressionStatement	cur_type -> encode -> details . sdl_type = * ptr	341:2:13155:13196	1246105	11	True				
ANR	1246390	AssignmentExpression	cur_type -> encode -> details . sdl_type = * ptr		1246105	0		=			
ANR	1246391	MemberAccess	cur_type -> encode -> details . sdl_type		1246105	0					
ANR	1246392	PtrMemberAccess	cur_type -> encode -> details		1246105	0					
ANR	1246393	PtrMemberAccess	cur_type -> encode		1246105	0					
ANR	1246394	Identifier	cur_type		1246105	0					
ANR	1246395	Identifier	encode		1246105	1					
ANR	1246396	Identifier	details		1246105	1					
ANR	1246397	Identifier	sdl_type		1246105	1					
ANR	1246398	UnaryOperationExpression	* ptr		1246105	1					
ANR	1246399	UnaryOperator	*		1246105	0					
ANR	1246400	Identifier	ptr		1246105	1					
ANR	1246401	ExpressionStatement	cur_type -> encode -> to_xml = sdl_guess_convert_xml	342:2:13200:13248	1246105	12	True				
ANR	1246402	AssignmentExpression	cur_type -> encode -> to_xml = sdl_guess_convert_xml		1246105	0		=			
ANR	1246403	PtrMemberAccess	cur_type -> encode -> to_xml		1246105	0					
ANR	1246404	PtrMemberAccess	cur_type -> encode		1246105	0					
ANR	1246405	Identifier	cur_type		1246105	0					
ANR	1246406	Identifier	encode		1246105	1					
ANR	1246407	Identifier	to_xml		1246105	1					
ANR	1246408	Identifier	sdl_guess_convert_xml		1246105	1					
ANR	1246409	ExpressionStatement	cur_type -> encode -> to_zval = sdl_guess_convert_zval	343:2:13252:13302	1246105	13	True				
ANR	1246410	AssignmentExpression	cur_type -> encode -> to_zval = sdl_guess_convert_zval		1246105	0		=			
ANR	1246411	PtrMemberAccess	cur_type -> encode -> to_zval		1246105	0					
ANR	1246412	PtrMemberAccess	cur_type -> encode		1246105	0					
ANR	1246413	Identifier	cur_type		1246105	0					
ANR	1246414	Identifier	encode		1246105	1					
ANR	1246415	Identifier	to_zval		1246105	1					
ANR	1246416	Identifier	sdl_guess_convert_zval		1246105	1					
ANR	1246417	ExpressionStatement	"zend_hash_next_index_insert ( sdl -> encoders , & cur_type -> encode , sizeof ( encodePtr ) , NULL )"	344:2:13306:13393	1246105	14	True				
ANR	1246418	CallExpression	"zend_hash_next_index_insert ( sdl -> encoders , & cur_type -> encode , sizeof ( encodePtr ) , NULL )"		1246105	0					
ANR	1246419	Callee	zend_hash_next_index_insert		1246105	0					
ANR	1246420	Identifier	zend_hash_next_index_insert		1246105	0					
ANR	1246421	ArgumentList	sdl -> encoders		1246105	1					
ANR	1246422	Argument	sdl -> encoders		1246105	0					
ANR	1246423	PtrMemberAccess	sdl -> encoders		1246105	0					
ANR	1246424	Identifier	sdl		1246105	0					
ANR	1246425	Identifier	encoders		1246105	1					
ANR	1246426	Argument	& cur_type -> encode		1246105	1					
ANR	1246427	UnaryOperationExpression	& cur_type -> encode		1246105	0					
ANR	1246428	UnaryOperator	&		1246105	0					
ANR	1246429	PtrMemberAccess	cur_type -> encode		1246105	1					
ANR	1246430	Identifier	cur_type		1246105	0					
ANR	1246431	Identifier	encode		1246105	1					
ANR	1246432	Argument	sizeof ( encodePtr )		1246105	2					
ANR	1246433	SizeofExpression	sizeof ( encodePtr )		1246105	0					
ANR	1246434	Sizeof	sizeof		1246105	0					
ANR	1246435	SizeofOperand	encodePtr		1246105	1					
ANR	1246436	Argument	NULL		1246105	3					
ANR	1246437	Identifier	NULL		1246105	0					
ANR	1246438	ExpressionStatement	cur_type = * ptr	346:2:13398:13412	1246105	15	True				
ANR	1246439	AssignmentExpression	cur_type = * ptr		1246105	0		=			
ANR	1246440	Identifier	cur_type		1246105	0					
ANR	1246441	UnaryOperationExpression	* ptr		1246105	1					
ANR	1246442	UnaryOperator	*		1246105	0					
ANR	1246443	Identifier	ptr		1246105	1					
ANR	1246444	ElseStatement	else		1246105	0					
ANR	1246445	IfStatement	if ( name != NULL )		1246105	0					
ANR	1246446	Condition	name != NULL	348:12:13427:13438	1246105	0	True				
ANR	1246447	EqualityExpression	name != NULL		1246105	0		!=			
ANR	1246448	Identifier	name		1246105	0					
ANR	1246449	Identifier	NULL		1246105	1					
ANR	1246450	CompoundStatement		44:2:1414:1438	1246105	1					
ANR	1246451	IdentifierDeclStatement	"sdlTypePtr newType , * ptr ;"	349:2:13445:13469	1246105	0	True				
ANR	1246452	IdentifierDecl	newType		1246105	0					
ANR	1246453	IdentifierDeclType	sdlTypePtr		1246105	0					
ANR	1246454	Identifier	newType		1246105	1					
ANR	1246455	IdentifierDecl	* ptr		1246105	1					
ANR	1246456	IdentifierDeclType	sdlTypePtr *		1246105	0					
ANR	1246457	Identifier	ptr		1246105	1					
ANR	1246458	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	351:2:13474:13508	1246105	1	True				
ANR	1246459	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1246105	0		=			
ANR	1246460	Identifier	newType		1246105	0					
ANR	1246461	CallExpression	emalloc ( sizeof ( sdlType ) )		1246105	1					
ANR	1246462	Callee	emalloc		1246105	0					
ANR	1246463	Identifier	emalloc		1246105	0					
ANR	1246464	ArgumentList	sizeof ( sdlType )		1246105	1					
ANR	1246465	Argument	sizeof ( sdlType )		1246105	0					
ANR	1246466	SizeofExpression	sizeof ( sdlType )		1246105	0					
ANR	1246467	Sizeof	sizeof		1246105	0					
ANR	1246468	SizeofOperand	sdlType		1246105	1					
ANR	1246469	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	352:2:13512:13547	1246105	2	True				
ANR	1246470	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1246105	0					
ANR	1246471	Callee	memset		1246105	0					
ANR	1246472	Identifier	memset		1246105	0					
ANR	1246473	ArgumentList	newType		1246105	1					
ANR	1246474	Argument	newType		1246105	0					
ANR	1246475	Identifier	newType		1246105	0					
ANR	1246476	Argument	0		1246105	1					
ANR	1246477	PrimaryExpression	0		1246105	0					
ANR	1246478	Argument	sizeof ( sdlType )		1246105	2					
ANR	1246479	SizeofExpression	sizeof ( sdlType )		1246105	0					
ANR	1246480	Sizeof	sizeof		1246105	0					
ANR	1246481	SizeofOperand	sdlType		1246105	1					
ANR	1246482	ExpressionStatement	newType -> kind = XSD_TYPEKIND_SIMPLE	353:2:13551:13586	1246105	3	True				
ANR	1246483	AssignmentExpression	newType -> kind = XSD_TYPEKIND_SIMPLE		1246105	0		=			
ANR	1246484	PtrMemberAccess	newType -> kind		1246105	0					
ANR	1246485	Identifier	newType		1246105	0					
ANR	1246486	Identifier	kind		1246105	1					
ANR	1246487	Identifier	XSD_TYPEKIND_SIMPLE		1246105	1					
ANR	1246488	ExpressionStatement	newType -> name = estrdup ( ( char * ) name -> children -> content )	354:2:13590:13645	1246105	4	True				
ANR	1246489	AssignmentExpression	newType -> name = estrdup ( ( char * ) name -> children -> content )		1246105	0		=			
ANR	1246490	PtrMemberAccess	newType -> name		1246105	0					
ANR	1246491	Identifier	newType		1246105	0					
ANR	1246492	Identifier	name		1246105	1					
ANR	1246493	CallExpression	estrdup ( ( char * ) name -> children -> content )		1246105	1					
ANR	1246494	Callee	estrdup		1246105	0					
ANR	1246495	Identifier	estrdup		1246105	0					
ANR	1246496	ArgumentList	( char * ) name -> children -> content		1246105	1					
ANR	1246497	Argument	( char * ) name -> children -> content		1246105	0					
ANR	1246498	CastExpression	( char * ) name -> children -> content		1246105	0					
ANR	1246499	CastTarget	char *		1246105	0					
ANR	1246500	PtrMemberAccess	name -> children -> content		1246105	1					
ANR	1246501	PtrMemberAccess	name -> children		1246105	0					
ANR	1246502	Identifier	name		1246105	0					
ANR	1246503	Identifier	children		1246105	1					
ANR	1246504	Identifier	content		1246105	1					
ANR	1246505	ExpressionStatement	newType -> namens = estrdup ( ( char * ) ns -> children -> content )	355:2:13649:13704	1246105	5	True				
ANR	1246506	AssignmentExpression	newType -> namens = estrdup ( ( char * ) ns -> children -> content )		1246105	0		=			
ANR	1246507	PtrMemberAccess	newType -> namens		1246105	0					
ANR	1246508	Identifier	newType		1246105	0					
ANR	1246509	Identifier	namens		1246105	1					
ANR	1246510	CallExpression	estrdup ( ( char * ) ns -> children -> content )		1246105	1					
ANR	1246511	Callee	estrdup		1246105	0					
ANR	1246512	Identifier	estrdup		1246105	0					
ANR	1246513	ArgumentList	( char * ) ns -> children -> content		1246105	1					
ANR	1246514	Argument	( char * ) ns -> children -> content		1246105	0					
ANR	1246515	CastExpression	( char * ) ns -> children -> content		1246105	0					
ANR	1246516	CastTarget	char *		1246105	0					
ANR	1246517	PtrMemberAccess	ns -> children -> content		1246105	1					
ANR	1246518	PtrMemberAccess	ns -> children		1246105	0					
ANR	1246519	Identifier	ns		1246105	0					
ANR	1246520	Identifier	children		1246105	1					
ANR	1246521	Identifier	content		1246105	1					
ANR	1246522	IfStatement	if ( cur_type == NULL )		1246105	6					
ANR	1246523	Condition	cur_type == NULL	357:6:13713:13728	1246105	0	True				
ANR	1246524	EqualityExpression	cur_type == NULL		1246105	0		==			
ANR	1246525	Identifier	cur_type		1246105	0					
ANR	1246526	Identifier	NULL		1246105	1					
ANR	1246527	CompoundStatement		52:24:1700:1700	1246105	1					
ANR	1246528	ExpressionStatement	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"	358:3:13736:13821	1246105	0	True				
ANR	1246529	CallExpression	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"		1246105	0					
ANR	1246530	Callee	zend_hash_next_index_insert		1246105	0					
ANR	1246531	Identifier	zend_hash_next_index_insert		1246105	0					
ANR	1246532	ArgumentList	sdl -> types		1246105	1					
ANR	1246533	Argument	sdl -> types		1246105	0					
ANR	1246534	PtrMemberAccess	sdl -> types		1246105	0					
ANR	1246535	Identifier	sdl		1246105	0					
ANR	1246536	Identifier	types		1246105	1					
ANR	1246537	Argument	& newType		1246105	1					
ANR	1246538	UnaryOperationExpression	& newType		1246105	0					
ANR	1246539	UnaryOperator	&		1246105	0					
ANR	1246540	Identifier	newType		1246105	1					
ANR	1246541	Argument	sizeof ( sdlTypePtr )		1246105	2					
ANR	1246542	SizeofExpression	sizeof ( sdlTypePtr )		1246105	0					
ANR	1246543	Sizeof	sizeof		1246105	0					
ANR	1246544	SizeofOperand	sdlTypePtr		1246105	1					
ANR	1246545	Argument	( void * * ) & ptr		1246105	3					
ANR	1246546	CastExpression	( void * * ) & ptr		1246105	0					
ANR	1246547	CastTarget	void * *		1246105	0					
ANR	1246548	UnaryOperationExpression	& ptr		1246105	1					
ANR	1246549	UnaryOperator	&		1246105	0					
ANR	1246550	Identifier	ptr		1246105	1					
ANR	1246551	ElseStatement	else		1246105	0					
ANR	1246552	CompoundStatement		54:9:1801:1801	1246105	0					
ANR	1246553	IfStatement	if ( cur_type -> elements == NULL )		1246105	0					
ANR	1246554	Condition	cur_type -> elements == NULL	360:7:13841:13866	1246105	0	True				
ANR	1246555	EqualityExpression	cur_type -> elements == NULL		1246105	0		==			
ANR	1246556	PtrMemberAccess	cur_type -> elements		1246105	0					
ANR	1246557	Identifier	cur_type		1246105	0					
ANR	1246558	Identifier	elements		1246105	1					
ANR	1246559	Identifier	NULL		1246105	1					
ANR	1246560	CompoundStatement		55:35:1838:1838	1246105	1					
ANR	1246561	ExpressionStatement	cur_type -> elements = emalloc ( sizeof ( HashTable ) )	361:4:13875:13922	1246105	0	True				
ANR	1246562	AssignmentExpression	cur_type -> elements = emalloc ( sizeof ( HashTable ) )		1246105	0		=			
ANR	1246563	PtrMemberAccess	cur_type -> elements		1246105	0					
ANR	1246564	Identifier	cur_type		1246105	0					
ANR	1246565	Identifier	elements		1246105	1					
ANR	1246566	CallExpression	emalloc ( sizeof ( HashTable ) )		1246105	1					
ANR	1246567	Callee	emalloc		1246105	0					
ANR	1246568	Identifier	emalloc		1246105	0					
ANR	1246569	ArgumentList	sizeof ( HashTable )		1246105	1					
ANR	1246570	Argument	sizeof ( HashTable )		1246105	0					
ANR	1246571	SizeofExpression	sizeof ( HashTable )		1246105	0					
ANR	1246572	Sizeof	sizeof		1246105	0					
ANR	1246573	SizeofOperand	HashTable		1246105	1					
ANR	1246574	ExpressionStatement	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"	362:4:13928:13987	1246105	1	True				
ANR	1246575	CallExpression	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"		1246105	0					
ANR	1246576	Callee	zend_hash_init		1246105	0					
ANR	1246577	Identifier	zend_hash_init		1246105	0					
ANR	1246578	ArgumentList	cur_type -> elements		1246105	1					
ANR	1246579	Argument	cur_type -> elements		1246105	0					
ANR	1246580	PtrMemberAccess	cur_type -> elements		1246105	0					
ANR	1246581	Identifier	cur_type		1246105	0					
ANR	1246582	Identifier	elements		1246105	1					
ANR	1246583	Argument	0		1246105	1					
ANR	1246584	PrimaryExpression	0		1246105	0					
ANR	1246585	Argument	NULL		1246105	2					
ANR	1246586	Identifier	NULL		1246105	0					
ANR	1246587	Argument	delete_type		1246105	3					
ANR	1246588	Identifier	delete_type		1246105	0					
ANR	1246589	Argument	0		1246105	4					
ANR	1246590	PrimaryExpression	0		1246105	0					
ANR	1246591	ExpressionStatement	"zend_hash_update ( cur_type -> elements , newType -> name , strlen ( newType -> name ) + 1 , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"	364:3:13997:14118	1246105	1	True				
ANR	1246592	CallExpression	"zend_hash_update ( cur_type -> elements , newType -> name , strlen ( newType -> name ) + 1 , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"		1246105	0					
ANR	1246593	Callee	zend_hash_update		1246105	0					
ANR	1246594	Identifier	zend_hash_update		1246105	0					
ANR	1246595	ArgumentList	cur_type -> elements		1246105	1					
ANR	1246596	Argument	cur_type -> elements		1246105	0					
ANR	1246597	PtrMemberAccess	cur_type -> elements		1246105	0					
ANR	1246598	Identifier	cur_type		1246105	0					
ANR	1246599	Identifier	elements		1246105	1					
ANR	1246600	Argument	newType -> name		1246105	1					
ANR	1246601	PtrMemberAccess	newType -> name		1246105	0					
ANR	1246602	Identifier	newType		1246105	0					
ANR	1246603	Identifier	name		1246105	1					
ANR	1246604	Argument	strlen ( newType -> name ) + 1		1246105	2					
ANR	1246605	AdditiveExpression	strlen ( newType -> name ) + 1		1246105	0		+			
ANR	1246606	CallExpression	strlen ( newType -> name )		1246105	0					
ANR	1246607	Callee	strlen		1246105	0					
ANR	1246608	Identifier	strlen		1246105	0					
ANR	1246609	ArgumentList	newType -> name		1246105	1					
ANR	1246610	Argument	newType -> name		1246105	0					
ANR	1246611	PtrMemberAccess	newType -> name		1246105	0					
ANR	1246612	Identifier	newType		1246105	0					
ANR	1246613	Identifier	name		1246105	1					
ANR	1246614	PrimaryExpression	1		1246105	1					
ANR	1246615	Argument	& newType		1246105	3					
ANR	1246616	UnaryOperationExpression	& newType		1246105	0					
ANR	1246617	UnaryOperator	&		1246105	0					
ANR	1246618	Identifier	newType		1246105	1					
ANR	1246619	Argument	sizeof ( sdlTypePtr )		1246105	4					
ANR	1246620	SizeofExpression	sizeof ( sdlTypePtr )		1246105	0					
ANR	1246621	Sizeof	sizeof		1246105	0					
ANR	1246622	SizeofOperand	sdlTypePtr		1246105	1					
ANR	1246623	Argument	( void * * ) & ptr		1246105	5					
ANR	1246624	CastExpression	( void * * ) & ptr		1246105	0					
ANR	1246625	CastTarget	void * *		1246105	0					
ANR	1246626	UnaryOperationExpression	& ptr		1246105	1					
ANR	1246627	UnaryOperator	&		1246105	0					
ANR	1246628	Identifier	ptr		1246105	1					
ANR	1246629	ExpressionStatement	cur_type = ( * ptr )	366:2:14126:14143	1246105	7	True				
ANR	1246630	AssignmentExpression	cur_type = ( * ptr )		1246105	0		=			
ANR	1246631	Identifier	cur_type		1246105	0					
ANR	1246632	UnaryOperationExpression	* ptr		1246105	1					
ANR	1246633	UnaryOperator	*		1246105	0					
ANR	1246634	Identifier	ptr		1246105	1					
ANR	1246635	ExpressionStatement	"create_encoder ( sdl , cur_type , ns -> children -> content , name -> children -> content )"	368:2:14148:14225	1246105	8	True				
ANR	1246636	CallExpression	"create_encoder ( sdl , cur_type , ns -> children -> content , name -> children -> content )"		1246105	0					
ANR	1246637	Callee	create_encoder		1246105	0					
ANR	1246638	Identifier	create_encoder		1246105	0					
ANR	1246639	ArgumentList	sdl		1246105	1					
ANR	1246640	Argument	sdl		1246105	0					
ANR	1246641	Identifier	sdl		1246105	0					
ANR	1246642	Argument	cur_type		1246105	1					
ANR	1246643	Identifier	cur_type		1246105	0					
ANR	1246644	Argument	ns -> children -> content		1246105	2					
ANR	1246645	PtrMemberAccess	ns -> children -> content		1246105	0					
ANR	1246646	PtrMemberAccess	ns -> children		1246105	0					
ANR	1246647	Identifier	ns		1246105	0					
ANR	1246648	Identifier	children		1246105	1					
ANR	1246649	Identifier	content		1246105	1					
ANR	1246650	Argument	name -> children -> content		1246105	3					
ANR	1246651	PtrMemberAccess	name -> children -> content		1246105	0					
ANR	1246652	PtrMemberAccess	name -> children		1246105	0					
ANR	1246653	Identifier	name		1246105	0					
ANR	1246654	Identifier	children		1246105	1					
ANR	1246655	Identifier	content		1246105	1					
ANR	1246656	ElseStatement	else		1246105	0					
ANR	1246657	CompoundStatement		64:8:2204:2204	1246105	0					
ANR	1246658	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: simpleType has no 'name' attribute"" )"	370:2:14239:14313	1246105	0	True				
ANR	1246659	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: simpleType has no 'name' attribute"" )"		1246105	0					
ANR	1246660	Callee	soap_error0		1246105	0					
ANR	1246661	Identifier	soap_error0		1246105	0					
ANR	1246662	ArgumentList	E_ERROR		1246105	1					
ANR	1246663	Argument	E_ERROR		1246105	0					
ANR	1246664	Identifier	E_ERROR		1246105	0					
ANR	1246665	Argument	"""Parsing Schema: simpleType has no 'name' attribute"""		1246105	1					
ANR	1246666	PrimaryExpression	"""Parsing Schema: simpleType has no 'name' attribute"""		1246105	0					
ANR	1246667	ExpressionStatement	trav = simpleType -> children	373:1:14320:14347	1246105	6	True				
ANR	1246668	AssignmentExpression	trav = simpleType -> children		1246105	0		=			
ANR	1246669	Identifier	trav		1246105	0					
ANR	1246670	PtrMemberAccess	simpleType -> children		1246105	1					
ANR	1246671	Identifier	simpleType		1246105	0					
ANR	1246672	Identifier	children		1246105	1					
ANR	1246673	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1246105	7					
ANR	1246674	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	374:5:14354:14401	1246105	0	True				
ANR	1246675	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1246105	0		&&			
ANR	1246676	EqualityExpression	trav != NULL		1246105	0		!=			
ANR	1246677	Identifier	trav		1246105	0					
ANR	1246678	Identifier	NULL		1246105	1					
ANR	1246679	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1246105	1					
ANR	1246680	Callee	node_is_equal		1246105	0					
ANR	1246681	Identifier	node_is_equal		1246105	0					
ANR	1246682	ArgumentList	trav		1246105	1					
ANR	1246683	Argument	trav		1246105	0					
ANR	1246684	Identifier	trav		1246105	0					
ANR	1246685	Argument	"""annotation"""		1246105	1					
ANR	1246686	PrimaryExpression	"""annotation"""		1246105	0					
ANR	1246687	CompoundStatement		69:55:2373:2373	1246105	1					
ANR	1246688	ExpressionStatement	trav = trav -> next	376:2:14443:14460	1246105	0	True				
ANR	1246689	AssignmentExpression	trav = trav -> next		1246105	0		=			
ANR	1246690	Identifier	trav		1246105	0					
ANR	1246691	PtrMemberAccess	trav -> next		1246105	1					
ANR	1246692	Identifier	trav		1246105	0					
ANR	1246693	Identifier	next		1246105	1					
ANR	1246694	IfStatement	if ( trav != NULL )		1246105	8					
ANR	1246695	Condition	trav != NULL	378:5:14470:14481	1246105	0	True				
ANR	1246696	EqualityExpression	trav != NULL		1246105	0		!=			
ANR	1246697	Identifier	trav		1246105	0					
ANR	1246698	Identifier	NULL		1246105	1					
ANR	1246699	CompoundStatement		73:19:2453:2453	1246105	1					
ANR	1246700	IfStatement	"if ( node_is_equal ( trav , ""restriction"" ) )"		1246105	0					
ANR	1246701	Condition	"node_is_equal ( trav , ""restriction"" )"	379:6:14492:14524	1246105	0	True				
ANR	1246702	CallExpression	"node_is_equal ( trav , ""restriction"" )"		1246105	0					
ANR	1246703	Callee	node_is_equal		1246105	0					
ANR	1246704	Identifier	node_is_equal		1246105	0					
ANR	1246705	ArgumentList	trav		1246105	1					
ANR	1246706	Argument	trav		1246105	0					
ANR	1246707	Identifier	trav		1246105	0					
ANR	1246708	Argument	"""restriction"""		1246105	1					
ANR	1246709	PrimaryExpression	"""restriction"""		1246105	0					
ANR	1246710	CompoundStatement		74:41:2496:2496	1246105	1					
ANR	1246711	ExpressionStatement	"schema_restriction_simpleContent ( sdl , tns , trav , cur_type , 1 )"	380:3:14532:14593	1246105	0	True				
ANR	1246712	CallExpression	"schema_restriction_simpleContent ( sdl , tns , trav , cur_type , 1 )"		1246105	0					
ANR	1246713	Callee	schema_restriction_simpleContent		1246105	0					
ANR	1246714	Identifier	schema_restriction_simpleContent		1246105	0					
ANR	1246715	ArgumentList	sdl		1246105	1					
ANR	1246716	Argument	sdl		1246105	0					
ANR	1246717	Identifier	sdl		1246105	0					
ANR	1246718	Argument	tns		1246105	1					
ANR	1246719	Identifier	tns		1246105	0					
ANR	1246720	Argument	trav		1246105	2					
ANR	1246721	Identifier	trav		1246105	0					
ANR	1246722	Argument	cur_type		1246105	3					
ANR	1246723	Identifier	cur_type		1246105	0					
ANR	1246724	Argument	1		1246105	4					
ANR	1246725	PrimaryExpression	1		1246105	0					
ANR	1246726	ExpressionStatement	trav = trav -> next	381:3:14598:14615	1246105	1	True				
ANR	1246727	AssignmentExpression	trav = trav -> next		1246105	0		=			
ANR	1246728	Identifier	trav		1246105	0					
ANR	1246729	PtrMemberAccess	trav -> next		1246105	1					
ANR	1246730	Identifier	trav		1246105	0					
ANR	1246731	Identifier	next		1246105	1					
ANR	1246732	ElseStatement	else		1246105	0					
ANR	1246733	IfStatement	"if ( node_is_equal ( trav , ""list"" ) )"		1246105	0					
ANR	1246734	Condition	"node_is_equal ( trav , ""list"" )"	382:13:14630:14655	1246105	0	True				
ANR	1246735	CallExpression	"node_is_equal ( trav , ""list"" )"		1246105	0					
ANR	1246736	Callee	node_is_equal		1246105	0					
ANR	1246737	Identifier	node_is_equal		1246105	0					
ANR	1246738	ArgumentList	trav		1246105	1					
ANR	1246739	Argument	trav		1246105	0					
ANR	1246740	Identifier	trav		1246105	0					
ANR	1246741	Argument	"""list"""		1246105	1					
ANR	1246742	PrimaryExpression	"""list"""		1246105	0					
ANR	1246743	CompoundStatement		77:41:2627:2627	1246105	1					
ANR	1246744	ExpressionStatement	cur_type -> kind = XSD_TYPEKIND_LIST	383:3:14663:14697	1246105	0	True				
ANR	1246745	AssignmentExpression	cur_type -> kind = XSD_TYPEKIND_LIST		1246105	0		=			
ANR	1246746	PtrMemberAccess	cur_type -> kind		1246105	0					
ANR	1246747	Identifier	cur_type		1246105	0					
ANR	1246748	Identifier	kind		1246105	1					
ANR	1246749	Identifier	XSD_TYPEKIND_LIST		1246105	1					
ANR	1246750	ExpressionStatement	"schema_list ( sdl , tns , trav , cur_type )"	384:3:14702:14739	1246105	1	True				
ANR	1246751	CallExpression	"schema_list ( sdl , tns , trav , cur_type )"		1246105	0					
ANR	1246752	Callee	schema_list		1246105	0					
ANR	1246753	Identifier	schema_list		1246105	0					
ANR	1246754	ArgumentList	sdl		1246105	1					
ANR	1246755	Argument	sdl		1246105	0					
ANR	1246756	Identifier	sdl		1246105	0					
ANR	1246757	Argument	tns		1246105	1					
ANR	1246758	Identifier	tns		1246105	0					
ANR	1246759	Argument	trav		1246105	2					
ANR	1246760	Identifier	trav		1246105	0					
ANR	1246761	Argument	cur_type		1246105	3					
ANR	1246762	Identifier	cur_type		1246105	0					
ANR	1246763	ExpressionStatement	trav = trav -> next	385:3:14744:14761	1246105	2	True				
ANR	1246764	AssignmentExpression	trav = trav -> next		1246105	0		=			
ANR	1246765	Identifier	trav		1246105	0					
ANR	1246766	PtrMemberAccess	trav -> next		1246105	1					
ANR	1246767	Identifier	trav		1246105	0					
ANR	1246768	Identifier	next		1246105	1					
ANR	1246769	ElseStatement	else		1246105	0					
ANR	1246770	IfStatement	"if ( node_is_equal ( trav , ""union"" ) )"		1246105	0					
ANR	1246771	Condition	"node_is_equal ( trav , ""union"" )"	386:13:14776:14802	1246105	0	True				
ANR	1246772	CallExpression	"node_is_equal ( trav , ""union"" )"		1246105	0					
ANR	1246773	Callee	node_is_equal		1246105	0					
ANR	1246774	Identifier	node_is_equal		1246105	0					
ANR	1246775	ArgumentList	trav		1246105	1					
ANR	1246776	Argument	trav		1246105	0					
ANR	1246777	Identifier	trav		1246105	0					
ANR	1246778	Argument	"""union"""		1246105	1					
ANR	1246779	PrimaryExpression	"""union"""		1246105	0					
ANR	1246780	CompoundStatement		81:42:2774:2774	1246105	1					
ANR	1246781	ExpressionStatement	cur_type -> kind = XSD_TYPEKIND_UNION	387:3:14810:14845	1246105	0	True				
ANR	1246782	AssignmentExpression	cur_type -> kind = XSD_TYPEKIND_UNION		1246105	0		=			
ANR	1246783	PtrMemberAccess	cur_type -> kind		1246105	0					
ANR	1246784	Identifier	cur_type		1246105	0					
ANR	1246785	Identifier	kind		1246105	1					
ANR	1246786	Identifier	XSD_TYPEKIND_UNION		1246105	1					
ANR	1246787	ExpressionStatement	"schema_union ( sdl , tns , trav , cur_type )"	388:3:14850:14888	1246105	1	True				
ANR	1246788	CallExpression	"schema_union ( sdl , tns , trav , cur_type )"		1246105	0					
ANR	1246789	Callee	schema_union		1246105	0					
ANR	1246790	Identifier	schema_union		1246105	0					
ANR	1246791	ArgumentList	sdl		1246105	1					
ANR	1246792	Argument	sdl		1246105	0					
ANR	1246793	Identifier	sdl		1246105	0					
ANR	1246794	Argument	tns		1246105	1					
ANR	1246795	Identifier	tns		1246105	0					
ANR	1246796	Argument	trav		1246105	2					
ANR	1246797	Identifier	trav		1246105	0					
ANR	1246798	Argument	cur_type		1246105	3					
ANR	1246799	Identifier	cur_type		1246105	0					
ANR	1246800	ExpressionStatement	trav = trav -> next	389:3:14893:14910	1246105	2	True				
ANR	1246801	AssignmentExpression	trav = trav -> next		1246105	0		=			
ANR	1246802	Identifier	trav		1246105	0					
ANR	1246803	PtrMemberAccess	trav -> next		1246105	1					
ANR	1246804	Identifier	trav		1246105	0					
ANR	1246805	Identifier	next		1246105	1					
ANR	1246806	ElseStatement	else		1246105	0					
ANR	1246807	CompoundStatement		85:9:2890:2890	1246105	0					
ANR	1246808	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleType"" , trav -> name )"	391:3:14926:15007	1246105	0	True				
ANR	1246809	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleType"" , trav -> name )"		1246105	0					
ANR	1246810	Callee	soap_error1		1246105	0					
ANR	1246811	Identifier	soap_error1		1246105	0					
ANR	1246812	ArgumentList	E_ERROR		1246105	1					
ANR	1246813	Argument	E_ERROR		1246105	0					
ANR	1246814	Identifier	E_ERROR		1246105	0					
ANR	1246815	Argument	"""Parsing Schema: unexpected <%s> in simpleType"""		1246105	1					
ANR	1246816	PrimaryExpression	"""Parsing Schema: unexpected <%s> in simpleType"""		1246105	0					
ANR	1246817	Argument	trav -> name		1246105	2					
ANR	1246818	PtrMemberAccess	trav -> name		1246105	0					
ANR	1246819	Identifier	trav		1246105	0					
ANR	1246820	Identifier	name		1246105	1					
ANR	1246821	ElseStatement	else		1246105	0					
ANR	1246822	CompoundStatement		88:8:2990:2990	1246105	0					
ANR	1246823	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: expected <restriction>, <list> or <union> in simpleType"" )"	394:2:15025:15120	1246105	0	True				
ANR	1246824	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: expected <restriction>, <list> or <union> in simpleType"" )"		1246105	0					
ANR	1246825	Callee	soap_error0		1246105	0					
ANR	1246826	Identifier	soap_error0		1246105	0					
ANR	1246827	ArgumentList	E_ERROR		1246105	1					
ANR	1246828	Argument	E_ERROR		1246105	0					
ANR	1246829	Identifier	E_ERROR		1246105	0					
ANR	1246830	Argument	"""Parsing Schema: expected <restriction>, <list> or <union> in simpleType"""		1246105	1					
ANR	1246831	PrimaryExpression	"""Parsing Schema: expected <restriction>, <list> or <union> in simpleType"""		1246105	0					
ANR	1246832	IfStatement	if ( trav != NULL )		1246105	9					
ANR	1246833	Condition	trav != NULL	396:5:15130:15141	1246105	0	True				
ANR	1246834	EqualityExpression	trav != NULL		1246105	0		!=			
ANR	1246835	Identifier	trav		1246105	0					
ANR	1246836	Identifier	NULL		1246105	1					
ANR	1246837	CompoundStatement		91:19:3113:3113	1246105	1					
ANR	1246838	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleType"" , trav -> name )"	397:2:15148:15229	1246105	0	True				
ANR	1246839	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleType"" , trav -> name )"		1246105	0					
ANR	1246840	Callee	soap_error1		1246105	0					
ANR	1246841	Identifier	soap_error1		1246105	0					
ANR	1246842	ArgumentList	E_ERROR		1246105	1					
ANR	1246843	Argument	E_ERROR		1246105	0					
ANR	1246844	Identifier	E_ERROR		1246105	0					
ANR	1246845	Argument	"""Parsing Schema: unexpected <%s> in simpleType"""		1246105	1					
ANR	1246846	PrimaryExpression	"""Parsing Schema: unexpected <%s> in simpleType"""		1246105	0					
ANR	1246847	Argument	trav -> name		1246105	2					
ANR	1246848	PtrMemberAccess	trav -> name		1246105	0					
ANR	1246849	Identifier	trav		1246105	0					
ANR	1246850	Identifier	name		1246105	1					
ANR	1246851	ReturnStatement	return TRUE ;	400:1:15236:15247	1246105	10	True				
ANR	1246852	Identifier	TRUE		1246105	0					
ANR	1246853	ReturnType	static int		1246105	1					
ANR	1246854	Identifier	schema_simpleType		1246105	2					
ANR	1246855	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr simpleType , sdlTypePtr cur_type"		1246105	3					
ANR	1246856	Parameter	sdlPtr sdl	305:29:11958:11967	1246105	0	True				
ANR	1246857	ParameterType	sdlPtr		1246105	0					
ANR	1246858	Identifier	sdl		1246105	1					
ANR	1246859	Parameter	xmlAttrPtr tns	305:41:11970:11983	1246105	1	True				
ANR	1246860	ParameterType	xmlAttrPtr		1246105	0					
ANR	1246861	Identifier	tns		1246105	1					
ANR	1246862	Parameter	xmlNodePtr simpleType	305:57:11986:12006	1246105	2	True				
ANR	1246863	ParameterType	xmlNodePtr		1246105	0					
ANR	1246864	Identifier	simpleType		1246105	1					
ANR	1246865	Parameter	sdlTypePtr cur_type	305:80:12009:12027	1246105	3	True				
ANR	1246866	ParameterType	sdlTypePtr		1246105	0					
ANR	1246867	Identifier	cur_type		1246105	1					
ANR	1246868	CFGEntryNode	ENTRY		1246105		True				
ANR	1246869	CFGExitNode	EXIT		1246105		True				
ANR	1246870	Symbol	delete_encoder		1246105						
ANR	1246871	Symbol	newType		1246105						
ANR	1246872	Symbol	cur_type -> elements		1246105						
ANR	1246873	Symbol	trav -> next		1246105						
ANR	1246874	Symbol	get_attribute		1246105						
ANR	1246875	Symbol	trav		1246105						
ANR	1246876	Symbol	cur_type -> encode -> to_zval		1246105						
ANR	1246877	Symbol	cur_type -> encode -> details		1246105						
ANR	1246878	Symbol	strlen		1246105						
ANR	1246879	Symbol	* ptr		1246105						
ANR	1246880	Symbol	cur_type		1246105						
ANR	1246881	Symbol	simpleType		1246105						
ANR	1246882	Symbol	NULL		1246105						
ANR	1246883	Symbol	& cur_type -> encode		1246105						
ANR	1246884	Symbol	* simpleType		1246105						
ANR	1246885	Symbol	* sdl		1246105						
ANR	1246886	Symbol	TRUE		1246105						
ANR	1246887	Symbol	ns -> children -> content		1246105						
ANR	1246888	Symbol	* * name		1246105						
ANR	1246889	Symbol	name -> children -> content		1246105						
ANR	1246890	Symbol	simpleType -> children		1246105						
ANR	1246891	Symbol	* * ns		1246105						
ANR	1246892	Symbol	cur_type -> encode		1246105						
ANR	1246893	Symbol	sdl -> types		1246105						
ANR	1246894	Symbol	tns		1246105						
ANR	1246895	Symbol	name		1246105						
ANR	1246896	Symbol	sdl -> encoders		1246105						
ANR	1246897	Symbol	sdl		1246105						
ANR	1246898	Symbol	trav -> name		1246105						
ANR	1246899	Symbol	XSD_TYPEKIND_LIST		1246105						
ANR	1246900	Symbol	* ns -> children		1246105						
ANR	1246901	Symbol	ns		1246105						
ANR	1246902	Symbol	sdl_guess_convert_xml		1246105						
ANR	1246903	Symbol	cur_type -> encode -> details . ns		1246105						
ANR	1246904	Symbol	& newType		1246105						
ANR	1246905	Symbol	cur_type -> namens		1246105						
ANR	1246906	Symbol	node_is_equal		1246105						
ANR	1246907	Symbol	newType -> namens		1246105						
ANR	1246908	Symbol	* trav		1246105						
ANR	1246909	Symbol	XSD_TYPEKIND_UNION		1246105						
ANR	1246910	Symbol	XSD_TYPEKIND_SIMPLE		1246105						
ANR	1246911	Symbol	* cur_type -> encode		1246105						
ANR	1246912	Symbol	emalloc		1246105						
ANR	1246913	Symbol	& ptr		1246105						
ANR	1246914	Symbol	* * cur_type		1246105						
ANR	1246915	Symbol	* newType		1246105						
ANR	1246916	Symbol	cur_type -> encode -> details . type_str		1246105						
ANR	1246917	Symbol	* name		1246105						
ANR	1246918	Symbol	sdl_guess_convert_zval		1246105						
ANR	1246919	Symbol	newType -> name		1246105						
ANR	1246920	Symbol	ns -> children		1246105						
ANR	1246921	Symbol	name -> children		1246105						
ANR	1246922	Symbol	* ns		1246105						
ANR	1246923	Symbol	* name -> children		1246105						
ANR	1246924	Symbol	delete_type		1246105						
ANR	1246925	Symbol	newType -> kind		1246105						
ANR	1246926	Symbol	* cur_type		1246105						
ANR	1246927	Symbol	ptr		1246105						
ANR	1246928	Symbol	cur_type -> encode -> details . sdl_type		1246105						
ANR	1246929	Symbol	E_ERROR		1246105						
ANR	1246930	Symbol	simpleType -> properties		1246105						
ANR	1246931	Symbol	cur_type -> kind		1246105						
ANR	1246932	Symbol	estrdup		1246105						
ANR	1246933	Symbol	cur_type -> name		1246105						
ANR	1246934	Symbol	cur_type -> encode -> to_xml		1246105						
ANR	1246935	Function	schema_list	411:0:15393:17574							
ANR	1246936	FunctionDef	"schema_list (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr listType , sdlTypePtr cur_type)"		1246935	0					
ANR	1246937	CompoundStatement		412:0:15486:17574	1246935	0					
ANR	1246938	IdentifierDeclStatement	xmlNodePtr trav ;	413:1:15489:15504	1246935	0	True				
ANR	1246939	IdentifierDecl	trav		1246935	0					
ANR	1246940	IdentifierDeclType	xmlNodePtr		1246935	0					
ANR	1246941	Identifier	trav		1246935	1					
ANR	1246942	IdentifierDeclStatement	xmlAttrPtr itemType ;	414:1:15507:15526	1246935	1	True				
ANR	1246943	IdentifierDecl	itemType		1246935	0					
ANR	1246944	IdentifierDeclType	xmlAttrPtr		1246935	0					
ANR	1246945	Identifier	itemType		1246935	1					
ANR	1246946	ExpressionStatement	"itemType = get_attribute ( listType -> properties , ""itemType"" )"	416:1:15530:15588	1246935	2	True				
ANR	1246947	AssignmentExpression	"itemType = get_attribute ( listType -> properties , ""itemType"" )"		1246935	0		=			
ANR	1246948	Identifier	itemType		1246935	0					
ANR	1246949	CallExpression	"get_attribute ( listType -> properties , ""itemType"" )"		1246935	1					
ANR	1246950	Callee	get_attribute		1246935	0					
ANR	1246951	Identifier	get_attribute		1246935	0					
ANR	1246952	ArgumentList	listType -> properties		1246935	1					
ANR	1246953	Argument	listType -> properties		1246935	0					
ANR	1246954	PtrMemberAccess	listType -> properties		1246935	0					
ANR	1246955	Identifier	listType		1246935	0					
ANR	1246956	Identifier	properties		1246935	1					
ANR	1246957	Argument	"""itemType"""		1246935	1					
ANR	1246958	PrimaryExpression	"""itemType"""		1246935	0					
ANR	1246959	IfStatement	if ( itemType != NULL )		1246935	3					
ANR	1246960	Condition	itemType != NULL	417:5:15595:15610	1246935	0	True				
ANR	1246961	EqualityExpression	itemType != NULL		1246935	0		!=			
ANR	1246962	Identifier	itemType		1246935	0					
ANR	1246963	Identifier	NULL		1246935	1					
ANR	1246964	CompoundStatement		8:2:149:163	1246935	1					
ANR	1246965	IdentifierDeclStatement	"char * type , * ns ;"	418:2:15617:15632	1246935	0	True				
ANR	1246966	IdentifierDecl	* type		1246935	0					
ANR	1246967	IdentifierDeclType	char *		1246935	0					
ANR	1246968	Identifier	type		1246935	1					
ANR	1246969	IdentifierDecl	* ns		1246935	1					
ANR	1246970	IdentifierDeclType	char *		1246935	0					
ANR	1246971	Identifier	ns		1246935	1					
ANR	1246972	IdentifierDeclStatement	xmlNsPtr nsptr ;	419:2:15636:15650	1246935	1	True				
ANR	1246973	IdentifierDecl	nsptr		1246935	0					
ANR	1246974	IdentifierDeclType	xmlNsPtr		1246935	0					
ANR	1246975	Identifier	nsptr		1246935	1					
ANR	1246976	ExpressionStatement	"parse_namespace ( itemType -> children -> content , & type , & ns )"	421:2:15655:15711	1246935	2	True				
ANR	1246977	CallExpression	"parse_namespace ( itemType -> children -> content , & type , & ns )"		1246935	0					
ANR	1246978	Callee	parse_namespace		1246935	0					
ANR	1246979	Identifier	parse_namespace		1246935	0					
ANR	1246980	ArgumentList	itemType -> children -> content		1246935	1					
ANR	1246981	Argument	itemType -> children -> content		1246935	0					
ANR	1246982	PtrMemberAccess	itemType -> children -> content		1246935	0					
ANR	1246983	PtrMemberAccess	itemType -> children		1246935	0					
ANR	1246984	Identifier	itemType		1246935	0					
ANR	1246985	Identifier	children		1246935	1					
ANR	1246986	Identifier	content		1246935	1					
ANR	1246987	Argument	& type		1246935	1					
ANR	1246988	UnaryOperationExpression	& type		1246935	0					
ANR	1246989	UnaryOperator	&		1246935	0					
ANR	1246990	Identifier	type		1246935	1					
ANR	1246991	Argument	& ns		1246935	2					
ANR	1246992	UnaryOperationExpression	& ns		1246935	0					
ANR	1246993	UnaryOperator	&		1246935	0					
ANR	1246994	Identifier	ns		1246935	1					
ANR	1246995	ExpressionStatement	"nsptr = xmlSearchNs ( listType -> doc , listType , BAD_CAST ( ns ) )"	422:2:15715:15773	1246935	3	True				
ANR	1246996	AssignmentExpression	"nsptr = xmlSearchNs ( listType -> doc , listType , BAD_CAST ( ns ) )"		1246935	0		=			
ANR	1246997	Identifier	nsptr		1246935	0					
ANR	1246998	CallExpression	"xmlSearchNs ( listType -> doc , listType , BAD_CAST ( ns ) )"		1246935	1					
ANR	1246999	Callee	xmlSearchNs		1246935	0					
ANR	1247000	Identifier	xmlSearchNs		1246935	0					
ANR	1247001	ArgumentList	listType -> doc		1246935	1					
ANR	1247002	Argument	listType -> doc		1246935	0					
ANR	1247003	PtrMemberAccess	listType -> doc		1246935	0					
ANR	1247004	Identifier	listType		1246935	0					
ANR	1247005	Identifier	doc		1246935	1					
ANR	1247006	Argument	listType		1246935	1					
ANR	1247007	Identifier	listType		1246935	0					
ANR	1247008	Argument	BAD_CAST ( ns )		1246935	2					
ANR	1247009	CallExpression	BAD_CAST ( ns )		1246935	0					
ANR	1247010	Callee	BAD_CAST		1246935	0					
ANR	1247011	Identifier	BAD_CAST		1246935	0					
ANR	1247012	ArgumentList	ns		1246935	1					
ANR	1247013	Argument	ns		1246935	0					
ANR	1247014	Identifier	ns		1246935	0					
ANR	1247015	IfStatement	if ( nsptr != NULL )		1246935	4					
ANR	1247016	Condition	nsptr != NULL	423:6:15781:15793	1246935	0	True				
ANR	1247017	EqualityExpression	nsptr != NULL		1246935	0		!=			
ANR	1247018	Identifier	nsptr		1246935	0					
ANR	1247019	Identifier	NULL		1246935	1					
ANR	1247020	CompoundStatement		13:3:314:338	1246935	1					
ANR	1247021	IdentifierDeclStatement	"sdlTypePtr newType , * tmp ;"	424:3:15801:15825	1246935	0	True				
ANR	1247022	IdentifierDecl	newType		1246935	0					
ANR	1247023	IdentifierDeclType	sdlTypePtr		1246935	0					
ANR	1247024	Identifier	newType		1246935	1					
ANR	1247025	IdentifierDecl	* tmp		1246935	1					
ANR	1247026	IdentifierDeclType	sdlTypePtr *		1246935	0					
ANR	1247027	Identifier	tmp		1246935	1					
ANR	1247028	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	426:3:15831:15865	1246935	1	True				
ANR	1247029	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1246935	0		=			
ANR	1247030	Identifier	newType		1246935	0					
ANR	1247031	CallExpression	emalloc ( sizeof ( sdlType ) )		1246935	1					
ANR	1247032	Callee	emalloc		1246935	0					
ANR	1247033	Identifier	emalloc		1246935	0					
ANR	1247034	ArgumentList	sizeof ( sdlType )		1246935	1					
ANR	1247035	Argument	sizeof ( sdlType )		1246935	0					
ANR	1247036	SizeofExpression	sizeof ( sdlType )		1246935	0					
ANR	1247037	Sizeof	sizeof		1246935	0					
ANR	1247038	SizeofOperand	sdlType		1246935	1					
ANR	1247039	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	427:3:15870:15905	1246935	2	True				
ANR	1247040	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1246935	0					
ANR	1247041	Callee	memset		1246935	0					
ANR	1247042	Identifier	memset		1246935	0					
ANR	1247043	ArgumentList	newType		1246935	1					
ANR	1247044	Argument	newType		1246935	0					
ANR	1247045	Identifier	newType		1246935	0					
ANR	1247046	Argument	0		1246935	1					
ANR	1247047	PrimaryExpression	0		1246935	0					
ANR	1247048	Argument	sizeof ( sdlType )		1246935	2					
ANR	1247049	SizeofExpression	sizeof ( sdlType )		1246935	0					
ANR	1247050	Sizeof	sizeof		1246935	0					
ANR	1247051	SizeofOperand	sdlType		1246935	1					
ANR	1247052	ExpressionStatement	newType -> name = estrdup ( type )	429:3:15911:15940	1246935	3	True				
ANR	1247053	AssignmentExpression	newType -> name = estrdup ( type )		1246935	0		=			
ANR	1247054	PtrMemberAccess	newType -> name		1246935	0					
ANR	1247055	Identifier	newType		1246935	0					
ANR	1247056	Identifier	name		1246935	1					
ANR	1247057	CallExpression	estrdup ( type )		1246935	1					
ANR	1247058	Callee	estrdup		1246935	0					
ANR	1247059	Identifier	estrdup		1246935	0					
ANR	1247060	ArgumentList	type		1246935	1					
ANR	1247061	Argument	type		1246935	0					
ANR	1247062	Identifier	type		1246935	0					
ANR	1247063	ExpressionStatement	newType -> namens = estrdup ( ( char * ) nsptr -> href )	430:3:15945:15990	1246935	4	True				
ANR	1247064	AssignmentExpression	newType -> namens = estrdup ( ( char * ) nsptr -> href )		1246935	0		=			
ANR	1247065	PtrMemberAccess	newType -> namens		1246935	0					
ANR	1247066	Identifier	newType		1246935	0					
ANR	1247067	Identifier	namens		1246935	1					
ANR	1247068	CallExpression	estrdup ( ( char * ) nsptr -> href )		1246935	1					
ANR	1247069	Callee	estrdup		1246935	0					
ANR	1247070	Identifier	estrdup		1246935	0					
ANR	1247071	ArgumentList	( char * ) nsptr -> href		1246935	1					
ANR	1247072	Argument	( char * ) nsptr -> href		1246935	0					
ANR	1247073	CastExpression	( char * ) nsptr -> href		1246935	0					
ANR	1247074	CastTarget	char *		1246935	0					
ANR	1247075	PtrMemberAccess	nsptr -> href		1246935	1					
ANR	1247076	Identifier	nsptr		1246935	0					
ANR	1247077	Identifier	href		1246935	1					
ANR	1247078	ExpressionStatement	"newType -> encode = get_create_encoder ( sdl , newType , nsptr -> href , BAD_CAST ( type ) )"	432:3:15996:16075	1246935	5	True				
ANR	1247079	AssignmentExpression	"newType -> encode = get_create_encoder ( sdl , newType , nsptr -> href , BAD_CAST ( type ) )"		1246935	0		=			
ANR	1247080	PtrMemberAccess	newType -> encode		1246935	0					
ANR	1247081	Identifier	newType		1246935	0					
ANR	1247082	Identifier	encode		1246935	1					
ANR	1247083	CallExpression	"get_create_encoder ( sdl , newType , nsptr -> href , BAD_CAST ( type ) )"		1246935	1					
ANR	1247084	Callee	get_create_encoder		1246935	0					
ANR	1247085	Identifier	get_create_encoder		1246935	0					
ANR	1247086	ArgumentList	sdl		1246935	1					
ANR	1247087	Argument	sdl		1246935	0					
ANR	1247088	Identifier	sdl		1246935	0					
ANR	1247089	Argument	newType		1246935	1					
ANR	1247090	Identifier	newType		1246935	0					
ANR	1247091	Argument	nsptr -> href		1246935	2					
ANR	1247092	PtrMemberAccess	nsptr -> href		1246935	0					
ANR	1247093	Identifier	nsptr		1246935	0					
ANR	1247094	Identifier	href		1246935	1					
ANR	1247095	Argument	BAD_CAST ( type )		1246935	3					
ANR	1247096	CallExpression	BAD_CAST ( type )		1246935	0					
ANR	1247097	Callee	BAD_CAST		1246935	0					
ANR	1247098	Identifier	BAD_CAST		1246935	0					
ANR	1247099	ArgumentList	type		1246935	1					
ANR	1247100	Argument	type		1246935	0					
ANR	1247101	Identifier	type		1246935	0					
ANR	1247102	IfStatement	if ( cur_type -> elements == NULL )		1246935	6					
ANR	1247103	Condition	cur_type -> elements == NULL	434:7:16085:16110	1246935	0	True				
ANR	1247104	EqualityExpression	cur_type -> elements == NULL		1246935	0		==			
ANR	1247105	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247106	Identifier	cur_type		1246935	0					
ANR	1247107	Identifier	elements		1246935	1					
ANR	1247108	Identifier	NULL		1246935	1					
ANR	1247109	CompoundStatement		23:35:626:626	1246935	1					
ANR	1247110	ExpressionStatement	cur_type -> elements = emalloc ( sizeof ( HashTable ) )	435:4:16119:16166	1246935	0	True				
ANR	1247111	AssignmentExpression	cur_type -> elements = emalloc ( sizeof ( HashTable ) )		1246935	0		=			
ANR	1247112	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247113	Identifier	cur_type		1246935	0					
ANR	1247114	Identifier	elements		1246935	1					
ANR	1247115	CallExpression	emalloc ( sizeof ( HashTable ) )		1246935	1					
ANR	1247116	Callee	emalloc		1246935	0					
ANR	1247117	Identifier	emalloc		1246935	0					
ANR	1247118	ArgumentList	sizeof ( HashTable )		1246935	1					
ANR	1247119	Argument	sizeof ( HashTable )		1246935	0					
ANR	1247120	SizeofExpression	sizeof ( HashTable )		1246935	0					
ANR	1247121	Sizeof	sizeof		1246935	0					
ANR	1247122	SizeofOperand	HashTable		1246935	1					
ANR	1247123	ExpressionStatement	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"	436:4:16172:16231	1246935	1	True				
ANR	1247124	CallExpression	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"		1246935	0					
ANR	1247125	Callee	zend_hash_init		1246935	0					
ANR	1247126	Identifier	zend_hash_init		1246935	0					
ANR	1247127	ArgumentList	cur_type -> elements		1246935	1					
ANR	1247128	Argument	cur_type -> elements		1246935	0					
ANR	1247129	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247130	Identifier	cur_type		1246935	0					
ANR	1247131	Identifier	elements		1246935	1					
ANR	1247132	Argument	0		1246935	1					
ANR	1247133	PrimaryExpression	0		1246935	0					
ANR	1247134	Argument	NULL		1246935	2					
ANR	1247135	Identifier	NULL		1246935	0					
ANR	1247136	Argument	delete_type		1246935	3					
ANR	1247137	Identifier	delete_type		1246935	0					
ANR	1247138	Argument	0		1246935	4					
ANR	1247139	PrimaryExpression	0		1246935	0					
ANR	1247140	ExpressionStatement	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"	438:3:16241:16333	1246935	7	True				
ANR	1247141	CallExpression	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"		1246935	0					
ANR	1247142	Callee	zend_hash_next_index_insert		1246935	0					
ANR	1247143	Identifier	zend_hash_next_index_insert		1246935	0					
ANR	1247144	ArgumentList	cur_type -> elements		1246935	1					
ANR	1247145	Argument	cur_type -> elements		1246935	0					
ANR	1247146	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247147	Identifier	cur_type		1246935	0					
ANR	1247148	Identifier	elements		1246935	1					
ANR	1247149	Argument	& newType		1246935	1					
ANR	1247150	UnaryOperationExpression	& newType		1246935	0					
ANR	1247151	UnaryOperator	&		1246935	0					
ANR	1247152	Identifier	newType		1246935	1					
ANR	1247153	Argument	sizeof ( sdlTypePtr )		1246935	2					
ANR	1247154	SizeofExpression	sizeof ( sdlTypePtr )		1246935	0					
ANR	1247155	Sizeof	sizeof		1246935	0					
ANR	1247156	SizeofOperand	sdlTypePtr		1246935	1					
ANR	1247157	Argument	( void * * ) & tmp		1246935	3					
ANR	1247158	CastExpression	( void * * ) & tmp		1246935	0					
ANR	1247159	CastTarget	void * *		1246935	0					
ANR	1247160	UnaryOperationExpression	& tmp		1246935	1					
ANR	1247161	UnaryOperator	&		1246935	0					
ANR	1247162	Identifier	tmp		1246935	1					
ANR	1247163	IfStatement	if ( type )		1246935	5					
ANR	1247164	Condition	type	440:6:16345:16348	1246935	0	True				
ANR	1247165	Identifier	type		1246935	0					
ANR	1247166	CompoundStatement		29:12:864:864	1246935	1					
ANR	1247167	ExpressionStatement	efree ( type )	440:13:16352:16363	1246935	0	True				
ANR	1247168	CallExpression	efree ( type )		1246935	0					
ANR	1247169	Callee	efree		1246935	0					
ANR	1247170	Identifier	efree		1246935	0					
ANR	1247171	ArgumentList	type		1246935	1					
ANR	1247172	Argument	type		1246935	0					
ANR	1247173	Identifier	type		1246935	0					
ANR	1247174	IfStatement	if ( ns )		1246935	6					
ANR	1247175	Condition	ns	441:6:16372:16373	1246935	0	True				
ANR	1247176	Identifier	ns		1246935	0					
ANR	1247177	CompoundStatement		30:10:889:889	1246935	1					
ANR	1247178	ExpressionStatement	efree ( ns )	441:11:16377:16386	1246935	0	True				
ANR	1247179	CallExpression	efree ( ns )		1246935	0					
ANR	1247180	Callee	efree		1246935	0					
ANR	1247181	Identifier	efree		1246935	0					
ANR	1247182	ArgumentList	ns		1246935	1					
ANR	1247183	Argument	ns		1246935	0					
ANR	1247184	Identifier	ns		1246935	0					
ANR	1247185	ExpressionStatement	trav = listType -> children	444:1:16394:16419	1246935	4	True				
ANR	1247186	AssignmentExpression	trav = listType -> children		1246935	0		=			
ANR	1247187	Identifier	trav		1246935	0					
ANR	1247188	PtrMemberAccess	listType -> children		1246935	1					
ANR	1247189	Identifier	listType		1246935	0					
ANR	1247190	Identifier	children		1246935	1					
ANR	1247191	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1246935	5					
ANR	1247192	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	445:5:16426:16473	1246935	0	True				
ANR	1247193	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1246935	0		&&			
ANR	1247194	EqualityExpression	trav != NULL		1246935	0		!=			
ANR	1247195	Identifier	trav		1246935	0					
ANR	1247196	Identifier	NULL		1246935	1					
ANR	1247197	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1246935	1					
ANR	1247198	Callee	node_is_equal		1246935	0					
ANR	1247199	Identifier	node_is_equal		1246935	0					
ANR	1247200	ArgumentList	trav		1246935	1					
ANR	1247201	Argument	trav		1246935	0					
ANR	1247202	Identifier	trav		1246935	0					
ANR	1247203	Argument	"""annotation"""		1246935	1					
ANR	1247204	PrimaryExpression	"""annotation"""		1246935	0					
ANR	1247205	CompoundStatement		34:55:989:989	1246935	1					
ANR	1247206	ExpressionStatement	trav = trav -> next	447:2:16515:16532	1246935	0	True				
ANR	1247207	AssignmentExpression	trav = trav -> next		1246935	0		=			
ANR	1247208	Identifier	trav		1246935	0					
ANR	1247209	PtrMemberAccess	trav -> next		1246935	1					
ANR	1247210	Identifier	trav		1246935	0					
ANR	1247211	Identifier	next		1246935	1					
ANR	1247212	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""simpleType"" ) )"		1246935	6					
ANR	1247213	Condition	"trav != NULL && node_is_equal ( trav , ""simpleType"" )"	449:5:16542:16589	1246935	0	True				
ANR	1247214	AndExpression	"trav != NULL && node_is_equal ( trav , ""simpleType"" )"		1246935	0		&&			
ANR	1247215	EqualityExpression	trav != NULL		1246935	0		!=			
ANR	1247216	Identifier	trav		1246935	0					
ANR	1247217	Identifier	NULL		1246935	1					
ANR	1247218	CallExpression	"node_is_equal ( trav , ""simpleType"" )"		1246935	1					
ANR	1247219	Callee	node_is_equal		1246935	0					
ANR	1247220	Identifier	node_is_equal		1246935	0					
ANR	1247221	ArgumentList	trav		1246935	1					
ANR	1247222	Argument	trav		1246935	0					
ANR	1247223	Identifier	trav		1246935	0					
ANR	1247224	Argument	"""simpleType"""		1246935	1					
ANR	1247225	PrimaryExpression	"""simpleType"""		1246935	0					
ANR	1247226	CompoundStatement		39:2:1109:1133	1246935	1					
ANR	1247227	IdentifierDeclStatement	"sdlTypePtr newType , * tmp ;"	450:2:16596:16620	1246935	0	True				
ANR	1247228	IdentifierDecl	newType		1246935	0					
ANR	1247229	IdentifierDeclType	sdlTypePtr		1246935	0					
ANR	1247230	Identifier	newType		1246935	1					
ANR	1247231	IdentifierDecl	* tmp		1246935	1					
ANR	1247232	IdentifierDeclType	sdlTypePtr *		1246935	0					
ANR	1247233	Identifier	tmp		1246935	1					
ANR	1247234	IfStatement	if ( itemType != NULL )		1246935	1					
ANR	1247235	Condition	itemType != NULL	452:6:16629:16644	1246935	0	True				
ANR	1247236	EqualityExpression	itemType != NULL		1246935	0		!=			
ANR	1247237	Identifier	itemType		1246935	0					
ANR	1247238	Identifier	NULL		1246935	1					
ANR	1247239	CompoundStatement		41:24:1160:1160	1246935	1					
ANR	1247240	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'itemType' attribute and subtype"" )"	453:3:16652:16741	1246935	0	True				
ANR	1247241	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'itemType' attribute and subtype"" )"		1246935	0					
ANR	1247242	Callee	soap_error0		1246935	0					
ANR	1247243	Identifier	soap_error0		1246935	0					
ANR	1247244	ArgumentList	E_ERROR		1246935	1					
ANR	1247245	Argument	E_ERROR		1246935	0					
ANR	1247246	Identifier	E_ERROR		1246935	0					
ANR	1247247	Argument	"""Parsing Schema: element has both 'itemType' attribute and subtype"""		1246935	1					
ANR	1247248	PrimaryExpression	"""Parsing Schema: element has both 'itemType' attribute and subtype"""		1246935	0					
ANR	1247249	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	456:2:16750:16784	1246935	2	True				
ANR	1247250	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1246935	0		=			
ANR	1247251	Identifier	newType		1246935	0					
ANR	1247252	CallExpression	emalloc ( sizeof ( sdlType ) )		1246935	1					
ANR	1247253	Callee	emalloc		1246935	0					
ANR	1247254	Identifier	emalloc		1246935	0					
ANR	1247255	ArgumentList	sizeof ( sdlType )		1246935	1					
ANR	1247256	Argument	sizeof ( sdlType )		1246935	0					
ANR	1247257	SizeofExpression	sizeof ( sdlType )		1246935	0					
ANR	1247258	Sizeof	sizeof		1246935	0					
ANR	1247259	SizeofOperand	sdlType		1246935	1					
ANR	1247260	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	457:2:16788:16823	1246935	3	True				
ANR	1247261	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1246935	0					
ANR	1247262	Callee	memset		1246935	0					
ANR	1247263	Identifier	memset		1246935	0					
ANR	1247264	ArgumentList	newType		1246935	1					
ANR	1247265	Argument	newType		1246935	0					
ANR	1247266	Identifier	newType		1246935	0					
ANR	1247267	Argument	0		1246935	1					
ANR	1247268	PrimaryExpression	0		1246935	0					
ANR	1247269	Argument	sizeof ( sdlType )		1246935	2					
ANR	1247270	SizeofExpression	sizeof ( sdlType )		1246935	0					
ANR	1247271	Sizeof	sizeof		1246935	0					
ANR	1247272	SizeofOperand	sdlType		1246935	1					
ANR	1247273	CompoundStatement		49:3:1346:1371	1246935	4					
ANR	1247274	IdentifierDeclStatement	smart_str anonymous = { 0 } ;	460:3:16833:16858	1246935	0	True				
ANR	1247275	IdentifierDecl	anonymous = { 0 }		1246935	0					
ANR	1247276	IdentifierDeclType	smart_str		1246935	0					
ANR	1247277	Identifier	anonymous		1246935	1					
ANR	1247278	AssignmentExpression	anonymous = { 0 }		1246935	2		=			
ANR	1247279	Identifier	anonymous		1246935	0					
ANR	1247280	InitializerList	0		1246935	1					
ANR	1247281	PrimaryExpression	0		1246935	0					
ANR	1247282	ExpressionStatement	"smart_str_appendl ( & anonymous , ""anonymous"" , sizeof ( ""anonymous"" ) - 1 )"	462:3:16867:16932	1246935	1	True				
ANR	1247283	CallExpression	"smart_str_appendl ( & anonymous , ""anonymous"" , sizeof ( ""anonymous"" ) - 1 )"		1246935	0					
ANR	1247284	Callee	smart_str_appendl		1246935	0					
ANR	1247285	Identifier	smart_str_appendl		1246935	0					
ANR	1247286	ArgumentList	& anonymous		1246935	1					
ANR	1247287	Argument	& anonymous		1246935	0					
ANR	1247288	UnaryOperationExpression	& anonymous		1246935	0					
ANR	1247289	UnaryOperator	&		1246935	0					
ANR	1247290	Identifier	anonymous		1246935	1					
ANR	1247291	Argument	"""anonymous"""		1246935	1					
ANR	1247292	PrimaryExpression	"""anonymous"""		1246935	0					
ANR	1247293	Argument	"sizeof ( ""anonymous"" ) - 1"		1246935	2					
ANR	1247294	AdditiveExpression	"sizeof ( ""anonymous"" ) - 1"		1246935	0		-			
ANR	1247295	SizeofExpression	"sizeof ( ""anonymous"" )"		1246935	0					
ANR	1247296	Sizeof	sizeof		1246935	0					
ANR	1247297	PrimaryExpression	"""anonymous"""		1246935	1					
ANR	1247298	PrimaryExpression	1		1246935	1					
ANR	1247299	ExpressionStatement	"smart_str_append_long ( & anonymous , zend_hash_num_elements ( sdl -> types ) )"	463:3:16937:17006	1246935	2	True				
ANR	1247300	CallExpression	"smart_str_append_long ( & anonymous , zend_hash_num_elements ( sdl -> types ) )"		1246935	0					
ANR	1247301	Callee	smart_str_append_long		1246935	0					
ANR	1247302	Identifier	smart_str_append_long		1246935	0					
ANR	1247303	ArgumentList	& anonymous		1246935	1					
ANR	1247304	Argument	& anonymous		1246935	0					
ANR	1247305	UnaryOperationExpression	& anonymous		1246935	0					
ANR	1247306	UnaryOperator	&		1246935	0					
ANR	1247307	Identifier	anonymous		1246935	1					
ANR	1247308	Argument	zend_hash_num_elements ( sdl -> types )		1246935	1					
ANR	1247309	CallExpression	zend_hash_num_elements ( sdl -> types )		1246935	0					
ANR	1247310	Callee	zend_hash_num_elements		1246935	0					
ANR	1247311	Identifier	zend_hash_num_elements		1246935	0					
ANR	1247312	ArgumentList	sdl -> types		1246935	1					
ANR	1247313	Argument	sdl -> types		1246935	0					
ANR	1247314	PtrMemberAccess	sdl -> types		1246935	0					
ANR	1247315	Identifier	sdl		1246935	0					
ANR	1247316	Identifier	types		1246935	1					
ANR	1247317	ExpressionStatement	smart_str_0 ( & anonymous )	464:3:17011:17034	1246935	3	True				
ANR	1247318	CallExpression	smart_str_0 ( & anonymous )		1246935	0					
ANR	1247319	Callee	smart_str_0		1246935	0					
ANR	1247320	Identifier	smart_str_0		1246935	0					
ANR	1247321	ArgumentList	& anonymous		1246935	1					
ANR	1247322	Argument	& anonymous		1246935	0					
ANR	1247323	UnaryOperationExpression	& anonymous		1246935	0					
ANR	1247324	UnaryOperator	&		1246935	0					
ANR	1247325	Identifier	anonymous		1246935	1					
ANR	1247326	ExpressionStatement	newType -> name = anonymous . c	465:3:17039:17066	1246935	4	True				
ANR	1247327	AssignmentExpression	newType -> name = anonymous . c		1246935	0		=			
ANR	1247328	PtrMemberAccess	newType -> name		1246935	0					
ANR	1247329	Identifier	newType		1246935	0					
ANR	1247330	Identifier	name		1246935	1					
ANR	1247331	MemberAccess	anonymous . c		1246935	1					
ANR	1247332	Identifier	anonymous		1246935	0					
ANR	1247333	Identifier	c		1246935	1					
ANR	1247334	ExpressionStatement	newType -> namens = estrdup ( ( char * ) tns -> children -> content )	467:2:17074:17130	1246935	5	True				
ANR	1247335	AssignmentExpression	newType -> namens = estrdup ( ( char * ) tns -> children -> content )		1246935	0		=			
ANR	1247336	PtrMemberAccess	newType -> namens		1246935	0					
ANR	1247337	Identifier	newType		1246935	0					
ANR	1247338	Identifier	namens		1246935	1					
ANR	1247339	CallExpression	estrdup ( ( char * ) tns -> children -> content )		1246935	1					
ANR	1247340	Callee	estrdup		1246935	0					
ANR	1247341	Identifier	estrdup		1246935	0					
ANR	1247342	ArgumentList	( char * ) tns -> children -> content		1246935	1					
ANR	1247343	Argument	( char * ) tns -> children -> content		1246935	0					
ANR	1247344	CastExpression	( char * ) tns -> children -> content		1246935	0					
ANR	1247345	CastTarget	char *		1246935	0					
ANR	1247346	PtrMemberAccess	tns -> children -> content		1246935	1					
ANR	1247347	PtrMemberAccess	tns -> children		1246935	0					
ANR	1247348	Identifier	tns		1246935	0					
ANR	1247349	Identifier	children		1246935	1					
ANR	1247350	Identifier	content		1246935	1					
ANR	1247351	IfStatement	if ( cur_type -> elements == NULL )		1246935	6					
ANR	1247352	Condition	cur_type -> elements == NULL	469:6:17139:17164	1246935	0	True				
ANR	1247353	EqualityExpression	cur_type -> elements == NULL		1246935	0		==			
ANR	1247354	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247355	Identifier	cur_type		1246935	0					
ANR	1247356	Identifier	elements		1246935	1					
ANR	1247357	Identifier	NULL		1246935	1					
ANR	1247358	CompoundStatement		58:34:1680:1680	1246935	1					
ANR	1247359	ExpressionStatement	cur_type -> elements = emalloc ( sizeof ( HashTable ) )	470:3:17172:17219	1246935	0	True				
ANR	1247360	AssignmentExpression	cur_type -> elements = emalloc ( sizeof ( HashTable ) )		1246935	0		=			
ANR	1247361	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247362	Identifier	cur_type		1246935	0					
ANR	1247363	Identifier	elements		1246935	1					
ANR	1247364	CallExpression	emalloc ( sizeof ( HashTable ) )		1246935	1					
ANR	1247365	Callee	emalloc		1246935	0					
ANR	1247366	Identifier	emalloc		1246935	0					
ANR	1247367	ArgumentList	sizeof ( HashTable )		1246935	1					
ANR	1247368	Argument	sizeof ( HashTable )		1246935	0					
ANR	1247369	SizeofExpression	sizeof ( HashTable )		1246935	0					
ANR	1247370	Sizeof	sizeof		1246935	0					
ANR	1247371	SizeofOperand	HashTable		1246935	1					
ANR	1247372	ExpressionStatement	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"	471:3:17224:17283	1246935	1	True				
ANR	1247373	CallExpression	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"		1246935	0					
ANR	1247374	Callee	zend_hash_init		1246935	0					
ANR	1247375	Identifier	zend_hash_init		1246935	0					
ANR	1247376	ArgumentList	cur_type -> elements		1246935	1					
ANR	1247377	Argument	cur_type -> elements		1246935	0					
ANR	1247378	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247379	Identifier	cur_type		1246935	0					
ANR	1247380	Identifier	elements		1246935	1					
ANR	1247381	Argument	0		1246935	1					
ANR	1247382	PrimaryExpression	0		1246935	0					
ANR	1247383	Argument	NULL		1246935	2					
ANR	1247384	Identifier	NULL		1246935	0					
ANR	1247385	Argument	delete_type		1246935	3					
ANR	1247386	Identifier	delete_type		1246935	0					
ANR	1247387	Argument	0		1246935	4					
ANR	1247388	PrimaryExpression	0		1246935	0					
ANR	1247389	ExpressionStatement	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"	473:2:17291:17383	1246935	7	True				
ANR	1247390	CallExpression	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"		1246935	0					
ANR	1247391	Callee	zend_hash_next_index_insert		1246935	0					
ANR	1247392	Identifier	zend_hash_next_index_insert		1246935	0					
ANR	1247393	ArgumentList	cur_type -> elements		1246935	1					
ANR	1247394	Argument	cur_type -> elements		1246935	0					
ANR	1247395	PtrMemberAccess	cur_type -> elements		1246935	0					
ANR	1247396	Identifier	cur_type		1246935	0					
ANR	1247397	Identifier	elements		1246935	1					
ANR	1247398	Argument	& newType		1246935	1					
ANR	1247399	UnaryOperationExpression	& newType		1246935	0					
ANR	1247400	UnaryOperator	&		1246935	0					
ANR	1247401	Identifier	newType		1246935	1					
ANR	1247402	Argument	sizeof ( sdlTypePtr )		1246935	2					
ANR	1247403	SizeofExpression	sizeof ( sdlTypePtr )		1246935	0					
ANR	1247404	Sizeof	sizeof		1246935	0					
ANR	1247405	SizeofOperand	sdlTypePtr		1246935	1					
ANR	1247406	Argument	( void * * ) & tmp		1246935	3					
ANR	1247407	CastExpression	( void * * ) & tmp		1246935	0					
ANR	1247408	CastTarget	void * *		1246935	0					
ANR	1247409	UnaryOperationExpression	& tmp		1246935	1					
ANR	1247410	UnaryOperator	&		1246935	0					
ANR	1247411	Identifier	tmp		1246935	1					
ANR	1247412	ExpressionStatement	"schema_simpleType ( sdl , tns , trav , newType )"	475:2:17388:17430	1246935	8	True				
ANR	1247413	CallExpression	"schema_simpleType ( sdl , tns , trav , newType )"		1246935	0					
ANR	1247414	Callee	schema_simpleType		1246935	0					
ANR	1247415	Identifier	schema_simpleType		1246935	0					
ANR	1247416	ArgumentList	sdl		1246935	1					
ANR	1247417	Argument	sdl		1246935	0					
ANR	1247418	Identifier	sdl		1246935	0					
ANR	1247419	Argument	tns		1246935	1					
ANR	1247420	Identifier	tns		1246935	0					
ANR	1247421	Argument	trav		1246935	2					
ANR	1247422	Identifier	trav		1246935	0					
ANR	1247423	Argument	newType		1246935	3					
ANR	1247424	Identifier	newType		1246935	0					
ANR	1247425	ExpressionStatement	trav = trav -> next	477:2:17435:17452	1246935	9	True				
ANR	1247426	AssignmentExpression	trav = trav -> next		1246935	0		=			
ANR	1247427	Identifier	trav		1246935	0					
ANR	1247428	PtrMemberAccess	trav -> next		1246935	1					
ANR	1247429	Identifier	trav		1246935	0					
ANR	1247430	Identifier	next		1246935	1					
ANR	1247431	IfStatement	if ( trav != NULL )		1246935	7					
ANR	1247432	Condition	trav != NULL	479:5:17462:17473	1246935	0	True				
ANR	1247433	EqualityExpression	trav != NULL		1246935	0		!=			
ANR	1247434	Identifier	trav		1246935	0					
ANR	1247435	Identifier	NULL		1246935	1					
ANR	1247436	CompoundStatement		68:19:1989:1989	1246935	1					
ANR	1247437	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in list"" , trav -> name )"	480:2:17480:17555	1246935	0	True				
ANR	1247438	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in list"" , trav -> name )"		1246935	0					
ANR	1247439	Callee	soap_error1		1246935	0					
ANR	1247440	Identifier	soap_error1		1246935	0					
ANR	1247441	ArgumentList	E_ERROR		1246935	1					
ANR	1247442	Argument	E_ERROR		1246935	0					
ANR	1247443	Identifier	E_ERROR		1246935	0					
ANR	1247444	Argument	"""Parsing Schema: unexpected <%s> in list"""		1246935	1					
ANR	1247445	PrimaryExpression	"""Parsing Schema: unexpected <%s> in list"""		1246935	0					
ANR	1247446	Argument	trav -> name		1246935	2					
ANR	1247447	PtrMemberAccess	trav -> name		1246935	0					
ANR	1247448	Identifier	trav		1246935	0					
ANR	1247449	Identifier	name		1246935	1					
ANR	1247450	ReturnStatement	return TRUE ;	482:1:17561:17572	1246935	8	True				
ANR	1247451	Identifier	TRUE		1246935	0					
ANR	1247452	ReturnType	static int		1246935	1					
ANR	1247453	Identifier	schema_list		1246935	2					
ANR	1247454	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr listType , sdlTypePtr cur_type"		1246935	3					
ANR	1247455	Parameter	sdlPtr sdl	411:23:15416:15425	1246935	0	True				
ANR	1247456	ParameterType	sdlPtr		1246935	0					
ANR	1247457	Identifier	sdl		1246935	1					
ANR	1247458	Parameter	xmlAttrPtr tns	411:35:15428:15441	1246935	1	True				
ANR	1247459	ParameterType	xmlAttrPtr		1246935	0					
ANR	1247460	Identifier	tns		1246935	1					
ANR	1247461	Parameter	xmlNodePtr listType	411:51:15444:15462	1246935	2	True				
ANR	1247462	ParameterType	xmlNodePtr		1246935	0					
ANR	1247463	Identifier	listType		1246935	1					
ANR	1247464	Parameter	sdlTypePtr cur_type	411:72:15465:15483	1246935	3	True				
ANR	1247465	ParameterType	sdlTypePtr		1246935	0					
ANR	1247466	Identifier	cur_type		1246935	1					
ANR	1247467	CFGEntryNode	ENTRY		1246935		True				
ANR	1247468	CFGExitNode	EXIT		1246935		True				
ANR	1247469	Symbol	newType		1246935						
ANR	1247470	Symbol	cur_type -> elements		1246935						
ANR	1247471	Symbol	trav -> next		1246935						
ANR	1247472	Symbol	get_attribute		1246935						
ANR	1247473	Symbol	trav		1246935						
ANR	1247474	Symbol	listType -> doc		1246935						
ANR	1247475	Symbol	type		1246935						
ANR	1247476	Symbol	* * tns		1246935						
ANR	1247477	Symbol	tmp		1246935						
ANR	1247478	Symbol	tns -> children -> content		1246935						
ANR	1247479	Symbol	tns -> children		1246935						
ANR	1247480	Symbol	cur_type		1246935						
ANR	1247481	Symbol	listType -> properties		1246935						
ANR	1247482	Symbol	NULL		1246935						
ANR	1247483	Symbol	* tns		1246935						
ANR	1247484	Symbol	& type		1246935						
ANR	1247485	Symbol	* sdl		1246935						
ANR	1247486	Symbol	TRUE		1246935						
ANR	1247487	Symbol	sdl -> types		1246935						
ANR	1247488	Symbol	itemType -> children		1246935						
ANR	1247489	Symbol	* nsptr		1246935						
ANR	1247490	Symbol	tns		1246935						
ANR	1247491	Symbol	sdl		1246935						
ANR	1247492	Symbol	& tmp		1246935						
ANR	1247493	Symbol	trav -> name		1246935						
ANR	1247494	Symbol	BAD_CAST		1246935						
ANR	1247495	Symbol	itemType		1246935						
ANR	1247496	Symbol	ns		1246935						
ANR	1247497	Symbol	& anonymous		1246935						
ANR	1247498	Symbol	& newType		1246935						
ANR	1247499	Symbol	node_is_equal		1246935						
ANR	1247500	Symbol	listType		1246935						
ANR	1247501	Symbol	nsptr		1246935						
ANR	1247502	Symbol	newType -> namens		1246935						
ANR	1247503	Symbol	* trav		1246935						
ANR	1247504	Symbol	emalloc		1246935						
ANR	1247505	Symbol	* * itemType		1246935						
ANR	1247506	Symbol	* newType		1246935						
ANR	1247507	Symbol	* listType		1246935						
ANR	1247508	Symbol	newType -> name		1246935						
ANR	1247509	Symbol	nsptr -> href		1246935						
ANR	1247510	Symbol	zend_hash_num_elements		1246935						
ANR	1247511	Symbol	* itemType		1246935						
ANR	1247512	Symbol	* tns -> children		1246935						
ANR	1247513	Symbol	* itemType -> children		1246935						
ANR	1247514	Symbol	delete_type		1246935						
ANR	1247515	Symbol	xmlSearchNs		1246935						
ANR	1247516	Symbol	& ns		1246935						
ANR	1247517	Symbol	* cur_type		1246935						
ANR	1247518	Symbol	E_ERROR		1246935						
ANR	1247519	Symbol	newType -> encode		1246935						
ANR	1247520	Symbol	anonymous . c		1246935						
ANR	1247521	Symbol	estrdup		1246935						
ANR	1247522	Symbol	listType -> children		1246935						
ANR	1247523	Symbol	anonymous		1246935						
ANR	1247524	Symbol	itemType -> children -> content		1246935						
ANR	1247525	Symbol	get_create_encoder		1246935						
ANR	1247526	Function	schema_union	493:0:17731:20276							
ANR	1247527	FunctionDef	"schema_union (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr unionType , sdlTypePtr cur_type)"		1247526	0					
ANR	1247528	CompoundStatement		494:0:17826:20276	1247526	0					
ANR	1247529	IdentifierDeclStatement	xmlNodePtr trav ;	495:1:17829:17844	1247526	0	True				
ANR	1247530	IdentifierDecl	trav		1247526	0					
ANR	1247531	IdentifierDeclType	xmlNodePtr		1247526	0					
ANR	1247532	Identifier	trav		1247526	1					
ANR	1247533	IdentifierDeclStatement	xmlAttrPtr memberTypes ;	496:1:17847:17869	1247526	1	True				
ANR	1247534	IdentifierDecl	memberTypes		1247526	0					
ANR	1247535	IdentifierDeclType	xmlAttrPtr		1247526	0					
ANR	1247536	Identifier	memberTypes		1247526	1					
ANR	1247537	ExpressionStatement	"memberTypes = get_attribute ( unionType -> properties , ""memberTypes"" )"	498:1:17873:17938	1247526	2	True				
ANR	1247538	AssignmentExpression	"memberTypes = get_attribute ( unionType -> properties , ""memberTypes"" )"		1247526	0		=			
ANR	1247539	Identifier	memberTypes		1247526	0					
ANR	1247540	CallExpression	"get_attribute ( unionType -> properties , ""memberTypes"" )"		1247526	1					
ANR	1247541	Callee	get_attribute		1247526	0					
ANR	1247542	Identifier	get_attribute		1247526	0					
ANR	1247543	ArgumentList	unionType -> properties		1247526	1					
ANR	1247544	Argument	unionType -> properties		1247526	0					
ANR	1247545	PtrMemberAccess	unionType -> properties		1247526	0					
ANR	1247546	Identifier	unionType		1247526	0					
ANR	1247547	Identifier	properties		1247526	1					
ANR	1247548	Argument	"""memberTypes"""		1247526	1					
ANR	1247549	PrimaryExpression	"""memberTypes"""		1247526	0					
ANR	1247550	IfStatement	if ( memberTypes != NULL )		1247526	3					
ANR	1247551	Condition	memberTypes != NULL	499:5:17945:17963	1247526	0	True				
ANR	1247552	EqualityExpression	memberTypes != NULL		1247526	0		!=			
ANR	1247553	Identifier	memberTypes		1247526	0					
ANR	1247554	Identifier	NULL		1247526	1					
ANR	1247555	CompoundStatement		9:2:196:210	1247526	1					
ANR	1247556	IdentifierDeclStatement	"char * str , * start , * end , * next ;"	500:2:17970:18000	1247526	0	True				
ANR	1247557	IdentifierDecl	* str		1247526	0					
ANR	1247558	IdentifierDeclType	char *		1247526	0					
ANR	1247559	Identifier	str		1247526	1					
ANR	1247560	IdentifierDecl	* start		1247526	1					
ANR	1247561	IdentifierDeclType	char *		1247526	0					
ANR	1247562	Identifier	start		1247526	1					
ANR	1247563	IdentifierDecl	* end		1247526	2					
ANR	1247564	IdentifierDeclType	char *		1247526	0					
ANR	1247565	Identifier	end		1247526	1					
ANR	1247566	IdentifierDecl	* next		1247526	3					
ANR	1247567	IdentifierDeclType	char *		1247526	0					
ANR	1247568	Identifier	next		1247526	1					
ANR	1247569	IdentifierDeclStatement	"char * type , * ns ;"	501:2:18004:18019	1247526	1	True				
ANR	1247570	IdentifierDecl	* type		1247526	0					
ANR	1247571	IdentifierDeclType	char *		1247526	0					
ANR	1247572	Identifier	type		1247526	1					
ANR	1247573	IdentifierDecl	* ns		1247526	1					
ANR	1247574	IdentifierDeclType	char *		1247526	0					
ANR	1247575	Identifier	ns		1247526	1					
ANR	1247576	IdentifierDeclStatement	xmlNsPtr nsptr ;	502:2:18023:18037	1247526	2	True				
ANR	1247577	IdentifierDecl	nsptr		1247526	0					
ANR	1247578	IdentifierDeclType	xmlNsPtr		1247526	0					
ANR	1247579	Identifier	nsptr		1247526	1					
ANR	1247580	ExpressionStatement	str = estrdup ( ( char * ) memberTypes -> children -> content )	504:2:18042:18094	1247526	3	True				
ANR	1247581	AssignmentExpression	str = estrdup ( ( char * ) memberTypes -> children -> content )		1247526	0		=			
ANR	1247582	Identifier	str		1247526	0					
ANR	1247583	CallExpression	estrdup ( ( char * ) memberTypes -> children -> content )		1247526	1					
ANR	1247584	Callee	estrdup		1247526	0					
ANR	1247585	Identifier	estrdup		1247526	0					
ANR	1247586	ArgumentList	( char * ) memberTypes -> children -> content		1247526	1					
ANR	1247587	Argument	( char * ) memberTypes -> children -> content		1247526	0					
ANR	1247588	CastExpression	( char * ) memberTypes -> children -> content		1247526	0					
ANR	1247589	CastTarget	char *		1247526	0					
ANR	1247590	PtrMemberAccess	memberTypes -> children -> content		1247526	1					
ANR	1247591	PtrMemberAccess	memberTypes -> children		1247526	0					
ANR	1247592	Identifier	memberTypes		1247526	0					
ANR	1247593	Identifier	children		1247526	1					
ANR	1247594	Identifier	content		1247526	1					
ANR	1247595	ExpressionStatement	whiteSpace_collapse ( BAD_CAST ( str ) )	505:2:18098:18132	1247526	4	True				
ANR	1247596	CallExpression	whiteSpace_collapse ( BAD_CAST ( str ) )		1247526	0					
ANR	1247597	Callee	whiteSpace_collapse		1247526	0					
ANR	1247598	Identifier	whiteSpace_collapse		1247526	0					
ANR	1247599	ArgumentList	BAD_CAST ( str )		1247526	1					
ANR	1247600	Argument	BAD_CAST ( str )		1247526	0					
ANR	1247601	CallExpression	BAD_CAST ( str )		1247526	0					
ANR	1247602	Callee	BAD_CAST		1247526	0					
ANR	1247603	Identifier	BAD_CAST		1247526	0					
ANR	1247604	ArgumentList	str		1247526	1					
ANR	1247605	Argument	str		1247526	0					
ANR	1247606	Identifier	str		1247526	0					
ANR	1247607	ExpressionStatement	start = str	506:2:18136:18147	1247526	5	True				
ANR	1247608	AssignmentExpression	start = str		1247526	0		=			
ANR	1247609	Identifier	start		1247526	0					
ANR	1247610	Identifier	str		1247526	1					
ANR	1247611	WhileStatement	while ( start != NULL && * start != '\\0' )		1247526	6					
ANR	1247612	Condition	start != NULL && * start != '\\0'	507:9:18158:18188	1247526	0	True				
ANR	1247613	AndExpression	start != NULL && * start != '\\0'		1247526	0		&&			
ANR	1247614	EqualityExpression	start != NULL		1247526	0		!=			
ANR	1247615	Identifier	start		1247526	0					
ANR	1247616	Identifier	NULL		1247526	1					
ANR	1247617	EqualityExpression	* start != '\\0'		1247526	1		!=			
ANR	1247618	UnaryOperationExpression	* start		1247526	0					
ANR	1247619	UnaryOperator	*		1247526	0					
ANR	1247620	Identifier	start		1247526	1					
ANR	1247621	PrimaryExpression	'\\0'		1247526	1					
ANR	1247622	CompoundStatement		14:42:364:364	1247526	1					
ANR	1247623	ExpressionStatement	"end = strchr ( start , ' ' )"	508:3:18196:18219	1247526	0	True				
ANR	1247624	AssignmentExpression	"end = strchr ( start , ' ' )"		1247526	0		=			
ANR	1247625	Identifier	end		1247526	0					
ANR	1247626	CallExpression	"strchr ( start , ' ' )"		1247526	1					
ANR	1247627	Callee	strchr		1247526	0					
ANR	1247628	Identifier	strchr		1247526	0					
ANR	1247629	ArgumentList	start		1247526	1					
ANR	1247630	Argument	start		1247526	0					
ANR	1247631	Identifier	start		1247526	0					
ANR	1247632	Argument	' '		1247526	1					
ANR	1247633	PrimaryExpression	' '		1247526	0					
ANR	1247634	IfStatement	if ( end == NULL )		1247526	1					
ANR	1247635	Condition	end == NULL	509:7:18228:18238	1247526	0	True				
ANR	1247636	EqualityExpression	end == NULL		1247526	0		==			
ANR	1247637	Identifier	end		1247526	0					
ANR	1247638	Identifier	NULL		1247526	1					
ANR	1247639	CompoundStatement		16:20:414:414	1247526	1					
ANR	1247640	ExpressionStatement	next = NULL	510:4:18247:18258	1247526	0	True				
ANR	1247641	AssignmentExpression	next = NULL		1247526	0		=			
ANR	1247642	Identifier	next		1247526	0					
ANR	1247643	Identifier	NULL		1247526	1					
ANR	1247644	ElseStatement	else		1247526	0					
ANR	1247645	CompoundStatement		18:10:443:443	1247526	0					
ANR	1247646	ExpressionStatement	* end = '\\0'	512:4:18276:18287	1247526	0	True				
ANR	1247647	AssignmentExpression	* end = '\\0'		1247526	0		=			
ANR	1247648	UnaryOperationExpression	* end		1247526	0					
ANR	1247649	UnaryOperator	*		1247526	0					
ANR	1247650	Identifier	end		1247526	1					
ANR	1247651	PrimaryExpression	'\\0'		1247526	1					
ANR	1247652	ExpressionStatement	next = end + 1	513:4:18293:18305	1247526	1	True				
ANR	1247653	AssignmentExpression	next = end + 1		1247526	0		=			
ANR	1247654	Identifier	next		1247526	0					
ANR	1247655	AdditiveExpression	end + 1		1247526	1		+			
ANR	1247656	Identifier	end		1247526	0					
ANR	1247657	PrimaryExpression	1		1247526	1					
ANR	1247658	ExpressionStatement	"parse_namespace ( BAD_CAST ( start ) , & type , & ns )"	516:3:18316:18360	1247526	2	True				
ANR	1247659	CallExpression	"parse_namespace ( BAD_CAST ( start ) , & type , & ns )"		1247526	0					
ANR	1247660	Callee	parse_namespace		1247526	0					
ANR	1247661	Identifier	parse_namespace		1247526	0					
ANR	1247662	ArgumentList	BAD_CAST ( start )		1247526	1					
ANR	1247663	Argument	BAD_CAST ( start )		1247526	0					
ANR	1247664	CallExpression	BAD_CAST ( start )		1247526	0					
ANR	1247665	Callee	BAD_CAST		1247526	0					
ANR	1247666	Identifier	BAD_CAST		1247526	0					
ANR	1247667	ArgumentList	start		1247526	1					
ANR	1247668	Argument	start		1247526	0					
ANR	1247669	Identifier	start		1247526	0					
ANR	1247670	Argument	& type		1247526	1					
ANR	1247671	UnaryOperationExpression	& type		1247526	0					
ANR	1247672	UnaryOperator	&		1247526	0					
ANR	1247673	Identifier	type		1247526	1					
ANR	1247674	Argument	& ns		1247526	2					
ANR	1247675	UnaryOperationExpression	& ns		1247526	0					
ANR	1247676	UnaryOperator	&		1247526	0					
ANR	1247677	Identifier	ns		1247526	1					
ANR	1247678	ExpressionStatement	"nsptr = xmlSearchNs ( unionType -> doc , unionType , BAD_CAST ( ns ) )"	517:3:18365:18425	1247526	3	True				
ANR	1247679	AssignmentExpression	"nsptr = xmlSearchNs ( unionType -> doc , unionType , BAD_CAST ( ns ) )"		1247526	0		=			
ANR	1247680	Identifier	nsptr		1247526	0					
ANR	1247681	CallExpression	"xmlSearchNs ( unionType -> doc , unionType , BAD_CAST ( ns ) )"		1247526	1					
ANR	1247682	Callee	xmlSearchNs		1247526	0					
ANR	1247683	Identifier	xmlSearchNs		1247526	0					
ANR	1247684	ArgumentList	unionType -> doc		1247526	1					
ANR	1247685	Argument	unionType -> doc		1247526	0					
ANR	1247686	PtrMemberAccess	unionType -> doc		1247526	0					
ANR	1247687	Identifier	unionType		1247526	0					
ANR	1247688	Identifier	doc		1247526	1					
ANR	1247689	Argument	unionType		1247526	1					
ANR	1247690	Identifier	unionType		1247526	0					
ANR	1247691	Argument	BAD_CAST ( ns )		1247526	2					
ANR	1247692	CallExpression	BAD_CAST ( ns )		1247526	0					
ANR	1247693	Callee	BAD_CAST		1247526	0					
ANR	1247694	Identifier	BAD_CAST		1247526	0					
ANR	1247695	ArgumentList	ns		1247526	1					
ANR	1247696	Argument	ns		1247526	0					
ANR	1247697	Identifier	ns		1247526	0					
ANR	1247698	IfStatement	if ( nsptr != NULL )		1247526	4					
ANR	1247699	Condition	nsptr != NULL	518:7:18434:18446	1247526	0	True				
ANR	1247700	EqualityExpression	nsptr != NULL		1247526	0		!=			
ANR	1247701	Identifier	nsptr		1247526	0					
ANR	1247702	Identifier	NULL		1247526	1					
ANR	1247703	CompoundStatement		26:4:628:652	1247526	1					
ANR	1247704	IdentifierDeclStatement	"sdlTypePtr newType , * tmp ;"	519:4:18455:18479	1247526	0	True				
ANR	1247705	IdentifierDecl	newType		1247526	0					
ANR	1247706	IdentifierDeclType	sdlTypePtr		1247526	0					
ANR	1247707	Identifier	newType		1247526	1					
ANR	1247708	IdentifierDecl	* tmp		1247526	1					
ANR	1247709	IdentifierDeclType	sdlTypePtr *		1247526	0					
ANR	1247710	Identifier	tmp		1247526	1					
ANR	1247711	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	521:4:18486:18520	1247526	1	True				
ANR	1247712	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1247526	0		=			
ANR	1247713	Identifier	newType		1247526	0					
ANR	1247714	CallExpression	emalloc ( sizeof ( sdlType ) )		1247526	1					
ANR	1247715	Callee	emalloc		1247526	0					
ANR	1247716	Identifier	emalloc		1247526	0					
ANR	1247717	ArgumentList	sizeof ( sdlType )		1247526	1					
ANR	1247718	Argument	sizeof ( sdlType )		1247526	0					
ANR	1247719	SizeofExpression	sizeof ( sdlType )		1247526	0					
ANR	1247720	Sizeof	sizeof		1247526	0					
ANR	1247721	SizeofOperand	sdlType		1247526	1					
ANR	1247722	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	522:4:18526:18561	1247526	2	True				
ANR	1247723	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1247526	0					
ANR	1247724	Callee	memset		1247526	0					
ANR	1247725	Identifier	memset		1247526	0					
ANR	1247726	ArgumentList	newType		1247526	1					
ANR	1247727	Argument	newType		1247526	0					
ANR	1247728	Identifier	newType		1247526	0					
ANR	1247729	Argument	0		1247526	1					
ANR	1247730	PrimaryExpression	0		1247526	0					
ANR	1247731	Argument	sizeof ( sdlType )		1247526	2					
ANR	1247732	SizeofExpression	sizeof ( sdlType )		1247526	0					
ANR	1247733	Sizeof	sizeof		1247526	0					
ANR	1247734	SizeofOperand	sdlType		1247526	1					
ANR	1247735	ExpressionStatement	newType -> name = estrdup ( type )	524:4:18568:18597	1247526	3	True				
ANR	1247736	AssignmentExpression	newType -> name = estrdup ( type )		1247526	0		=			
ANR	1247737	PtrMemberAccess	newType -> name		1247526	0					
ANR	1247738	Identifier	newType		1247526	0					
ANR	1247739	Identifier	name		1247526	1					
ANR	1247740	CallExpression	estrdup ( type )		1247526	1					
ANR	1247741	Callee	estrdup		1247526	0					
ANR	1247742	Identifier	estrdup		1247526	0					
ANR	1247743	ArgumentList	type		1247526	1					
ANR	1247744	Argument	type		1247526	0					
ANR	1247745	Identifier	type		1247526	0					
ANR	1247746	ExpressionStatement	newType -> namens = estrdup ( ( char * ) nsptr -> href )	525:4:18603:18648	1247526	4	True				
ANR	1247747	AssignmentExpression	newType -> namens = estrdup ( ( char * ) nsptr -> href )		1247526	0		=			
ANR	1247748	PtrMemberAccess	newType -> namens		1247526	0					
ANR	1247749	Identifier	newType		1247526	0					
ANR	1247750	Identifier	namens		1247526	1					
ANR	1247751	CallExpression	estrdup ( ( char * ) nsptr -> href )		1247526	1					
ANR	1247752	Callee	estrdup		1247526	0					
ANR	1247753	Identifier	estrdup		1247526	0					
ANR	1247754	ArgumentList	( char * ) nsptr -> href		1247526	1					
ANR	1247755	Argument	( char * ) nsptr -> href		1247526	0					
ANR	1247756	CastExpression	( char * ) nsptr -> href		1247526	0					
ANR	1247757	CastTarget	char *		1247526	0					
ANR	1247758	PtrMemberAccess	nsptr -> href		1247526	1					
ANR	1247759	Identifier	nsptr		1247526	0					
ANR	1247760	Identifier	href		1247526	1					
ANR	1247761	ExpressionStatement	"newType -> encode = get_create_encoder ( sdl , newType , nsptr -> href , BAD_CAST ( type ) )"	527:4:18655:18734	1247526	5	True				
ANR	1247762	AssignmentExpression	"newType -> encode = get_create_encoder ( sdl , newType , nsptr -> href , BAD_CAST ( type ) )"		1247526	0		=			
ANR	1247763	PtrMemberAccess	newType -> encode		1247526	0					
ANR	1247764	Identifier	newType		1247526	0					
ANR	1247765	Identifier	encode		1247526	1					
ANR	1247766	CallExpression	"get_create_encoder ( sdl , newType , nsptr -> href , BAD_CAST ( type ) )"		1247526	1					
ANR	1247767	Callee	get_create_encoder		1247526	0					
ANR	1247768	Identifier	get_create_encoder		1247526	0					
ANR	1247769	ArgumentList	sdl		1247526	1					
ANR	1247770	Argument	sdl		1247526	0					
ANR	1247771	Identifier	sdl		1247526	0					
ANR	1247772	Argument	newType		1247526	1					
ANR	1247773	Identifier	newType		1247526	0					
ANR	1247774	Argument	nsptr -> href		1247526	2					
ANR	1247775	PtrMemberAccess	nsptr -> href		1247526	0					
ANR	1247776	Identifier	nsptr		1247526	0					
ANR	1247777	Identifier	href		1247526	1					
ANR	1247778	Argument	BAD_CAST ( type )		1247526	3					
ANR	1247779	CallExpression	BAD_CAST ( type )		1247526	0					
ANR	1247780	Callee	BAD_CAST		1247526	0					
ANR	1247781	Identifier	BAD_CAST		1247526	0					
ANR	1247782	ArgumentList	type		1247526	1					
ANR	1247783	Argument	type		1247526	0					
ANR	1247784	Identifier	type		1247526	0					
ANR	1247785	IfStatement	if ( cur_type -> elements == NULL )		1247526	6					
ANR	1247786	Condition	cur_type -> elements == NULL	529:8:18745:18770	1247526	0	True				
ANR	1247787	EqualityExpression	cur_type -> elements == NULL		1247526	0		==			
ANR	1247788	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1247789	Identifier	cur_type		1247526	0					
ANR	1247790	Identifier	elements		1247526	1					
ANR	1247791	Identifier	NULL		1247526	1					
ANR	1247792	CompoundStatement		36:36:946:946	1247526	1					
ANR	1247793	ExpressionStatement	cur_type -> elements = emalloc ( sizeof ( HashTable ) )	530:5:18780:18827	1247526	0	True				
ANR	1247794	AssignmentExpression	cur_type -> elements = emalloc ( sizeof ( HashTable ) )		1247526	0		=			
ANR	1247795	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1247796	Identifier	cur_type		1247526	0					
ANR	1247797	Identifier	elements		1247526	1					
ANR	1247798	CallExpression	emalloc ( sizeof ( HashTable ) )		1247526	1					
ANR	1247799	Callee	emalloc		1247526	0					
ANR	1247800	Identifier	emalloc		1247526	0					
ANR	1247801	ArgumentList	sizeof ( HashTable )		1247526	1					
ANR	1247802	Argument	sizeof ( HashTable )		1247526	0					
ANR	1247803	SizeofExpression	sizeof ( HashTable )		1247526	0					
ANR	1247804	Sizeof	sizeof		1247526	0					
ANR	1247805	SizeofOperand	HashTable		1247526	1					
ANR	1247806	ExpressionStatement	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"	531:5:18834:18893	1247526	1	True				
ANR	1247807	CallExpression	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"		1247526	0					
ANR	1247808	Callee	zend_hash_init		1247526	0					
ANR	1247809	Identifier	zend_hash_init		1247526	0					
ANR	1247810	ArgumentList	cur_type -> elements		1247526	1					
ANR	1247811	Argument	cur_type -> elements		1247526	0					
ANR	1247812	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1247813	Identifier	cur_type		1247526	0					
ANR	1247814	Identifier	elements		1247526	1					
ANR	1247815	Argument	0		1247526	1					
ANR	1247816	PrimaryExpression	0		1247526	0					
ANR	1247817	Argument	NULL		1247526	2					
ANR	1247818	Identifier	NULL		1247526	0					
ANR	1247819	Argument	delete_type		1247526	3					
ANR	1247820	Identifier	delete_type		1247526	0					
ANR	1247821	Argument	0		1247526	4					
ANR	1247822	PrimaryExpression	0		1247526	0					
ANR	1247823	ExpressionStatement	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"	533:4:18905:18997	1247526	7	True				
ANR	1247824	CallExpression	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"		1247526	0					
ANR	1247825	Callee	zend_hash_next_index_insert		1247526	0					
ANR	1247826	Identifier	zend_hash_next_index_insert		1247526	0					
ANR	1247827	ArgumentList	cur_type -> elements		1247526	1					
ANR	1247828	Argument	cur_type -> elements		1247526	0					
ANR	1247829	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1247830	Identifier	cur_type		1247526	0					
ANR	1247831	Identifier	elements		1247526	1					
ANR	1247832	Argument	& newType		1247526	1					
ANR	1247833	UnaryOperationExpression	& newType		1247526	0					
ANR	1247834	UnaryOperator	&		1247526	0					
ANR	1247835	Identifier	newType		1247526	1					
ANR	1247836	Argument	sizeof ( sdlTypePtr )		1247526	2					
ANR	1247837	SizeofExpression	sizeof ( sdlTypePtr )		1247526	0					
ANR	1247838	Sizeof	sizeof		1247526	0					
ANR	1247839	SizeofOperand	sdlTypePtr		1247526	1					
ANR	1247840	Argument	( void * * ) & tmp		1247526	3					
ANR	1247841	CastExpression	( void * * ) & tmp		1247526	0					
ANR	1247842	CastTarget	void * *		1247526	0					
ANR	1247843	UnaryOperationExpression	& tmp		1247526	1					
ANR	1247844	UnaryOperator	&		1247526	0					
ANR	1247845	Identifier	tmp		1247526	1					
ANR	1247846	IfStatement	if ( type )		1247526	5					
ANR	1247847	Condition	type	535:7:19011:19014	1247526	0	True				
ANR	1247848	Identifier	type		1247526	0					
ANR	1247849	CompoundStatement		42:13:1190:1190	1247526	1					
ANR	1247850	ExpressionStatement	efree ( type )	535:14:19018:19029	1247526	0	True				
ANR	1247851	CallExpression	efree ( type )		1247526	0					
ANR	1247852	Callee	efree		1247526	0					
ANR	1247853	Identifier	efree		1247526	0					
ANR	1247854	ArgumentList	type		1247526	1					
ANR	1247855	Argument	type		1247526	0					
ANR	1247856	Identifier	type		1247526	0					
ANR	1247857	IfStatement	if ( ns )		1247526	6					
ANR	1247858	Condition	ns	536:7:19039:19040	1247526	0	True				
ANR	1247859	Identifier	ns		1247526	0					
ANR	1247860	CompoundStatement		43:11:1216:1216	1247526	1					
ANR	1247861	ExpressionStatement	efree ( ns )	536:12:19044:19053	1247526	0	True				
ANR	1247862	CallExpression	efree ( ns )		1247526	0					
ANR	1247863	Callee	efree		1247526	0					
ANR	1247864	Identifier	efree		1247526	0					
ANR	1247865	ArgumentList	ns		1247526	1					
ANR	1247866	Argument	ns		1247526	0					
ANR	1247867	Identifier	ns		1247526	0					
ANR	1247868	ExpressionStatement	start = next	538:3:19060:19072	1247526	7	True				
ANR	1247869	AssignmentExpression	start = next		1247526	0		=			
ANR	1247870	Identifier	start		1247526	0					
ANR	1247871	Identifier	next		1247526	1					
ANR	1247872	ExpressionStatement	efree ( str )	540:2:19080:19090	1247526	7	True				
ANR	1247873	CallExpression	efree ( str )		1247526	0					
ANR	1247874	Callee	efree		1247526	0					
ANR	1247875	Identifier	efree		1247526	0					
ANR	1247876	ArgumentList	str		1247526	1					
ANR	1247877	Argument	str		1247526	0					
ANR	1247878	Identifier	str		1247526	0					
ANR	1247879	ExpressionStatement	trav = unionType -> children	543:1:19097:19123	1247526	4	True				
ANR	1247880	AssignmentExpression	trav = unionType -> children		1247526	0		=			
ANR	1247881	Identifier	trav		1247526	0					
ANR	1247882	PtrMemberAccess	unionType -> children		1247526	1					
ANR	1247883	Identifier	unionType		1247526	0					
ANR	1247884	Identifier	children		1247526	1					
ANR	1247885	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1247526	5					
ANR	1247886	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	544:5:19130:19177	1247526	0	True				
ANR	1247887	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1247526	0		&&			
ANR	1247888	EqualityExpression	trav != NULL		1247526	0		!=			
ANR	1247889	Identifier	trav		1247526	0					
ANR	1247890	Identifier	NULL		1247526	1					
ANR	1247891	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1247526	1					
ANR	1247892	Callee	node_is_equal		1247526	0					
ANR	1247893	Identifier	node_is_equal		1247526	0					
ANR	1247894	ArgumentList	trav		1247526	1					
ANR	1247895	Argument	trav		1247526	0					
ANR	1247896	Identifier	trav		1247526	0					
ANR	1247897	Argument	"""annotation"""		1247526	1					
ANR	1247898	PrimaryExpression	"""annotation"""		1247526	0					
ANR	1247899	CompoundStatement		51:55:1353:1353	1247526	1					
ANR	1247900	ExpressionStatement	trav = trav -> next	546:2:19219:19236	1247526	0	True				
ANR	1247901	AssignmentExpression	trav = trav -> next		1247526	0		=			
ANR	1247902	Identifier	trav		1247526	0					
ANR	1247903	PtrMemberAccess	trav -> next		1247526	1					
ANR	1247904	Identifier	trav		1247526	0					
ANR	1247905	Identifier	next		1247526	1					
ANR	1247906	WhileStatement	while ( trav != NULL )		1247526	6					
ANR	1247907	Condition	trav != NULL	548:8:19249:19260	1247526	0	True				
ANR	1247908	EqualityExpression	trav != NULL		1247526	0		!=			
ANR	1247909	Identifier	trav		1247526	0					
ANR	1247910	Identifier	NULL		1247526	1					
ANR	1247911	CompoundStatement		55:22:1436:1436	1247526	1					
ANR	1247912	IfStatement	"if ( node_is_equal ( trav , ""simpleType"" ) )"		1247526	0					
ANR	1247913	Condition	"node_is_equal ( trav , ""simpleType"" )"	549:6:19271:19302	1247526	0	True				
ANR	1247914	CallExpression	"node_is_equal ( trav , ""simpleType"" )"		1247526	0					
ANR	1247915	Callee	node_is_equal		1247526	0					
ANR	1247916	Identifier	node_is_equal		1247526	0					
ANR	1247917	ArgumentList	trav		1247526	1					
ANR	1247918	Argument	trav		1247526	0					
ANR	1247919	Identifier	trav		1247526	0					
ANR	1247920	Argument	"""simpleType"""		1247526	1					
ANR	1247921	PrimaryExpression	"""simpleType"""		1247526	0					
ANR	1247922	CompoundStatement		57:3:1483:1507	1247526	1					
ANR	1247923	IdentifierDeclStatement	"sdlTypePtr newType , * tmp ;"	550:3:19310:19334	1247526	0	True				
ANR	1247924	IdentifierDecl	newType		1247526	0					
ANR	1247925	IdentifierDeclType	sdlTypePtr		1247526	0					
ANR	1247926	Identifier	newType		1247526	1					
ANR	1247927	IdentifierDecl	* tmp		1247526	1					
ANR	1247928	IdentifierDeclType	sdlTypePtr *		1247526	0					
ANR	1247929	Identifier	tmp		1247526	1					
ANR	1247930	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	552:3:19340:19374	1247526	1	True				
ANR	1247931	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1247526	0		=			
ANR	1247932	Identifier	newType		1247526	0					
ANR	1247933	CallExpression	emalloc ( sizeof ( sdlType ) )		1247526	1					
ANR	1247934	Callee	emalloc		1247526	0					
ANR	1247935	Identifier	emalloc		1247526	0					
ANR	1247936	ArgumentList	sizeof ( sdlType )		1247526	1					
ANR	1247937	Argument	sizeof ( sdlType )		1247526	0					
ANR	1247938	SizeofExpression	sizeof ( sdlType )		1247526	0					
ANR	1247939	Sizeof	sizeof		1247526	0					
ANR	1247940	SizeofOperand	sdlType		1247526	1					
ANR	1247941	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	553:3:19379:19414	1247526	2	True				
ANR	1247942	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1247526	0					
ANR	1247943	Callee	memset		1247526	0					
ANR	1247944	Identifier	memset		1247526	0					
ANR	1247945	ArgumentList	newType		1247526	1					
ANR	1247946	Argument	newType		1247526	0					
ANR	1247947	Identifier	newType		1247526	0					
ANR	1247948	Argument	0		1247526	1					
ANR	1247949	PrimaryExpression	0		1247526	0					
ANR	1247950	Argument	sizeof ( sdlType )		1247526	2					
ANR	1247951	SizeofExpression	sizeof ( sdlType )		1247526	0					
ANR	1247952	Sizeof	sizeof		1247526	0					
ANR	1247953	SizeofOperand	sdlType		1247526	1					
ANR	1247954	CompoundStatement		63:4:1599:1624	1247526	3					
ANR	1247955	IdentifierDeclStatement	smart_str anonymous = { 0 } ;	556:4:19426:19451	1247526	0	True				
ANR	1247956	IdentifierDecl	anonymous = { 0 }		1247526	0					
ANR	1247957	IdentifierDeclType	smart_str		1247526	0					
ANR	1247958	Identifier	anonymous		1247526	1					
ANR	1247959	AssignmentExpression	anonymous = { 0 }		1247526	2		=			
ANR	1247960	Identifier	anonymous		1247526	0					
ANR	1247961	InitializerList	0		1247526	1					
ANR	1247962	PrimaryExpression	0		1247526	0					
ANR	1247963	ExpressionStatement	"smart_str_appendl ( & anonymous , ""anonymous"" , sizeof ( ""anonymous"" ) - 1 )"	558:4:19461:19526	1247526	1	True				
ANR	1247964	CallExpression	"smart_str_appendl ( & anonymous , ""anonymous"" , sizeof ( ""anonymous"" ) - 1 )"		1247526	0					
ANR	1247965	Callee	smart_str_appendl		1247526	0					
ANR	1247966	Identifier	smart_str_appendl		1247526	0					
ANR	1247967	ArgumentList	& anonymous		1247526	1					
ANR	1247968	Argument	& anonymous		1247526	0					
ANR	1247969	UnaryOperationExpression	& anonymous		1247526	0					
ANR	1247970	UnaryOperator	&		1247526	0					
ANR	1247971	Identifier	anonymous		1247526	1					
ANR	1247972	Argument	"""anonymous"""		1247526	1					
ANR	1247973	PrimaryExpression	"""anonymous"""		1247526	0					
ANR	1247974	Argument	"sizeof ( ""anonymous"" ) - 1"		1247526	2					
ANR	1247975	AdditiveExpression	"sizeof ( ""anonymous"" ) - 1"		1247526	0		-			
ANR	1247976	SizeofExpression	"sizeof ( ""anonymous"" )"		1247526	0					
ANR	1247977	Sizeof	sizeof		1247526	0					
ANR	1247978	PrimaryExpression	"""anonymous"""		1247526	1					
ANR	1247979	PrimaryExpression	1		1247526	1					
ANR	1247980	ExpressionStatement	"smart_str_append_long ( & anonymous , zend_hash_num_elements ( sdl -> types ) )"	559:4:19532:19601	1247526	2	True				
ANR	1247981	CallExpression	"smart_str_append_long ( & anonymous , zend_hash_num_elements ( sdl -> types ) )"		1247526	0					
ANR	1247982	Callee	smart_str_append_long		1247526	0					
ANR	1247983	Identifier	smart_str_append_long		1247526	0					
ANR	1247984	ArgumentList	& anonymous		1247526	1					
ANR	1247985	Argument	& anonymous		1247526	0					
ANR	1247986	UnaryOperationExpression	& anonymous		1247526	0					
ANR	1247987	UnaryOperator	&		1247526	0					
ANR	1247988	Identifier	anonymous		1247526	1					
ANR	1247989	Argument	zend_hash_num_elements ( sdl -> types )		1247526	1					
ANR	1247990	CallExpression	zend_hash_num_elements ( sdl -> types )		1247526	0					
ANR	1247991	Callee	zend_hash_num_elements		1247526	0					
ANR	1247992	Identifier	zend_hash_num_elements		1247526	0					
ANR	1247993	ArgumentList	sdl -> types		1247526	1					
ANR	1247994	Argument	sdl -> types		1247526	0					
ANR	1247995	PtrMemberAccess	sdl -> types		1247526	0					
ANR	1247996	Identifier	sdl		1247526	0					
ANR	1247997	Identifier	types		1247526	1					
ANR	1247998	ExpressionStatement	smart_str_0 ( & anonymous )	560:4:19607:19630	1247526	3	True				
ANR	1247999	CallExpression	smart_str_0 ( & anonymous )		1247526	0					
ANR	1248000	Callee	smart_str_0		1247526	0					
ANR	1248001	Identifier	smart_str_0		1247526	0					
ANR	1248002	ArgumentList	& anonymous		1247526	1					
ANR	1248003	Argument	& anonymous		1247526	0					
ANR	1248004	UnaryOperationExpression	& anonymous		1247526	0					
ANR	1248005	UnaryOperator	&		1247526	0					
ANR	1248006	Identifier	anonymous		1247526	1					
ANR	1248007	ExpressionStatement	newType -> name = anonymous . c	561:4:19636:19663	1247526	4	True				
ANR	1248008	AssignmentExpression	newType -> name = anonymous . c		1247526	0		=			
ANR	1248009	PtrMemberAccess	newType -> name		1247526	0					
ANR	1248010	Identifier	newType		1247526	0					
ANR	1248011	Identifier	name		1247526	1					
ANR	1248012	MemberAccess	anonymous . c		1247526	1					
ANR	1248013	Identifier	anonymous		1247526	0					
ANR	1248014	Identifier	c		1247526	1					
ANR	1248015	ExpressionStatement	newType -> namens = estrdup ( ( char * ) tns -> children -> content )	563:3:19673:19729	1247526	4	True				
ANR	1248016	AssignmentExpression	newType -> namens = estrdup ( ( char * ) tns -> children -> content )		1247526	0		=			
ANR	1248017	PtrMemberAccess	newType -> namens		1247526	0					
ANR	1248018	Identifier	newType		1247526	0					
ANR	1248019	Identifier	namens		1247526	1					
ANR	1248020	CallExpression	estrdup ( ( char * ) tns -> children -> content )		1247526	1					
ANR	1248021	Callee	estrdup		1247526	0					
ANR	1248022	Identifier	estrdup		1247526	0					
ANR	1248023	ArgumentList	( char * ) tns -> children -> content		1247526	1					
ANR	1248024	Argument	( char * ) tns -> children -> content		1247526	0					
ANR	1248025	CastExpression	( char * ) tns -> children -> content		1247526	0					
ANR	1248026	CastTarget	char *		1247526	0					
ANR	1248027	PtrMemberAccess	tns -> children -> content		1247526	1					
ANR	1248028	PtrMemberAccess	tns -> children		1247526	0					
ANR	1248029	Identifier	tns		1247526	0					
ANR	1248030	Identifier	children		1247526	1					
ANR	1248031	Identifier	content		1247526	1					
ANR	1248032	IfStatement	if ( cur_type -> elements == NULL )		1247526	5					
ANR	1248033	Condition	cur_type -> elements == NULL	565:7:19739:19764	1247526	0	True				
ANR	1248034	EqualityExpression	cur_type -> elements == NULL		1247526	0		==			
ANR	1248035	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1248036	Identifier	cur_type		1247526	0					
ANR	1248037	Identifier	elements		1247526	1					
ANR	1248038	Identifier	NULL		1247526	1					
ANR	1248039	CompoundStatement		72:35:1940:1940	1247526	1					
ANR	1248040	ExpressionStatement	cur_type -> elements = emalloc ( sizeof ( HashTable ) )	566:4:19773:19820	1247526	0	True				
ANR	1248041	AssignmentExpression	cur_type -> elements = emalloc ( sizeof ( HashTable ) )		1247526	0		=			
ANR	1248042	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1248043	Identifier	cur_type		1247526	0					
ANR	1248044	Identifier	elements		1247526	1					
ANR	1248045	CallExpression	emalloc ( sizeof ( HashTable ) )		1247526	1					
ANR	1248046	Callee	emalloc		1247526	0					
ANR	1248047	Identifier	emalloc		1247526	0					
ANR	1248048	ArgumentList	sizeof ( HashTable )		1247526	1					
ANR	1248049	Argument	sizeof ( HashTable )		1247526	0					
ANR	1248050	SizeofExpression	sizeof ( HashTable )		1247526	0					
ANR	1248051	Sizeof	sizeof		1247526	0					
ANR	1248052	SizeofOperand	HashTable		1247526	1					
ANR	1248053	ExpressionStatement	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"	567:4:19826:19885	1247526	1	True				
ANR	1248054	CallExpression	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"		1247526	0					
ANR	1248055	Callee	zend_hash_init		1247526	0					
ANR	1248056	Identifier	zend_hash_init		1247526	0					
ANR	1248057	ArgumentList	cur_type -> elements		1247526	1					
ANR	1248058	Argument	cur_type -> elements		1247526	0					
ANR	1248059	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1248060	Identifier	cur_type		1247526	0					
ANR	1248061	Identifier	elements		1247526	1					
ANR	1248062	Argument	0		1247526	1					
ANR	1248063	PrimaryExpression	0		1247526	0					
ANR	1248064	Argument	NULL		1247526	2					
ANR	1248065	Identifier	NULL		1247526	0					
ANR	1248066	Argument	delete_type		1247526	3					
ANR	1248067	Identifier	delete_type		1247526	0					
ANR	1248068	Argument	0		1247526	4					
ANR	1248069	PrimaryExpression	0		1247526	0					
ANR	1248070	ExpressionStatement	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"	569:3:19895:19987	1247526	6	True				
ANR	1248071	CallExpression	"zend_hash_next_index_insert ( cur_type -> elements , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & tmp )"		1247526	0					
ANR	1248072	Callee	zend_hash_next_index_insert		1247526	0					
ANR	1248073	Identifier	zend_hash_next_index_insert		1247526	0					
ANR	1248074	ArgumentList	cur_type -> elements		1247526	1					
ANR	1248075	Argument	cur_type -> elements		1247526	0					
ANR	1248076	PtrMemberAccess	cur_type -> elements		1247526	0					
ANR	1248077	Identifier	cur_type		1247526	0					
ANR	1248078	Identifier	elements		1247526	1					
ANR	1248079	Argument	& newType		1247526	1					
ANR	1248080	UnaryOperationExpression	& newType		1247526	0					
ANR	1248081	UnaryOperator	&		1247526	0					
ANR	1248082	Identifier	newType		1247526	1					
ANR	1248083	Argument	sizeof ( sdlTypePtr )		1247526	2					
ANR	1248084	SizeofExpression	sizeof ( sdlTypePtr )		1247526	0					
ANR	1248085	Sizeof	sizeof		1247526	0					
ANR	1248086	SizeofOperand	sdlTypePtr		1247526	1					
ANR	1248087	Argument	( void * * ) & tmp		1247526	3					
ANR	1248088	CastExpression	( void * * ) & tmp		1247526	0					
ANR	1248089	CastTarget	void * *		1247526	0					
ANR	1248090	UnaryOperationExpression	& tmp		1247526	1					
ANR	1248091	UnaryOperator	&		1247526	0					
ANR	1248092	Identifier	tmp		1247526	1					
ANR	1248093	ExpressionStatement	"schema_simpleType ( sdl , tns , trav , newType )"	571:3:19993:20035	1247526	7	True				
ANR	1248094	CallExpression	"schema_simpleType ( sdl , tns , trav , newType )"		1247526	0					
ANR	1248095	Callee	schema_simpleType		1247526	0					
ANR	1248096	Identifier	schema_simpleType		1247526	0					
ANR	1248097	ArgumentList	sdl		1247526	1					
ANR	1248098	Argument	sdl		1247526	0					
ANR	1248099	Identifier	sdl		1247526	0					
ANR	1248100	Argument	tns		1247526	1					
ANR	1248101	Identifier	tns		1247526	0					
ANR	1248102	Argument	trav		1247526	2					
ANR	1248103	Identifier	trav		1247526	0					
ANR	1248104	Argument	newType		1247526	3					
ANR	1248105	Identifier	newType		1247526	0					
ANR	1248106	ElseStatement	else		1247526	0					
ANR	1248107	CompoundStatement		80:9:2220:2220	1247526	0					
ANR	1248108	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in union"" , trav -> name )"	574:3:20052:20128	1247526	0	True				
ANR	1248109	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in union"" , trav -> name )"		1247526	0					
ANR	1248110	Callee	soap_error1		1247526	0					
ANR	1248111	Identifier	soap_error1		1247526	0					
ANR	1248112	ArgumentList	E_ERROR		1247526	1					
ANR	1248113	Argument	E_ERROR		1247526	0					
ANR	1248114	Identifier	E_ERROR		1247526	0					
ANR	1248115	Argument	"""Parsing Schema: unexpected <%s> in union"""		1247526	1					
ANR	1248116	PrimaryExpression	"""Parsing Schema: unexpected <%s> in union"""		1247526	0					
ANR	1248117	Argument	trav -> name		1247526	2					
ANR	1248118	PtrMemberAccess	trav -> name		1247526	0					
ANR	1248119	Identifier	trav		1247526	0					
ANR	1248120	Identifier	name		1247526	1					
ANR	1248121	ExpressionStatement	trav = trav -> next	576:2:20136:20153	1247526	1	True				
ANR	1248122	AssignmentExpression	trav = trav -> next		1247526	0		=			
ANR	1248123	Identifier	trav		1247526	0					
ANR	1248124	PtrMemberAccess	trav -> next		1247526	1					
ANR	1248125	Identifier	trav		1247526	0					
ANR	1248126	Identifier	next		1247526	1					
ANR	1248127	IfStatement	if ( trav != NULL )		1247526	7					
ANR	1248128	Condition	trav != NULL	578:5:20163:20174	1247526	0	True				
ANR	1248129	EqualityExpression	trav != NULL		1247526	0		!=			
ANR	1248130	Identifier	trav		1247526	0					
ANR	1248131	Identifier	NULL		1247526	1					
ANR	1248132	CompoundStatement		85:19:2350:2350	1247526	1					
ANR	1248133	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in union"" , trav -> name )"	579:2:20181:20257	1247526	0	True				
ANR	1248134	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in union"" , trav -> name )"		1247526	0					
ANR	1248135	Callee	soap_error1		1247526	0					
ANR	1248136	Identifier	soap_error1		1247526	0					
ANR	1248137	ArgumentList	E_ERROR		1247526	1					
ANR	1248138	Argument	E_ERROR		1247526	0					
ANR	1248139	Identifier	E_ERROR		1247526	0					
ANR	1248140	Argument	"""Parsing Schema: unexpected <%s> in union"""		1247526	1					
ANR	1248141	PrimaryExpression	"""Parsing Schema: unexpected <%s> in union"""		1247526	0					
ANR	1248142	Argument	trav -> name		1247526	2					
ANR	1248143	PtrMemberAccess	trav -> name		1247526	0					
ANR	1248144	Identifier	trav		1247526	0					
ANR	1248145	Identifier	name		1247526	1					
ANR	1248146	ReturnStatement	return TRUE ;	581:1:20263:20274	1247526	8	True				
ANR	1248147	Identifier	TRUE		1247526	0					
ANR	1248148	ReturnType	static int		1247526	1					
ANR	1248149	Identifier	schema_union		1247526	2					
ANR	1248150	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr unionType , sdlTypePtr cur_type"		1247526	3					
ANR	1248151	Parameter	sdlPtr sdl	493:24:17755:17764	1247526	0	True				
ANR	1248152	ParameterType	sdlPtr		1247526	0					
ANR	1248153	Identifier	sdl		1247526	1					
ANR	1248154	Parameter	xmlAttrPtr tns	493:36:17767:17780	1247526	1	True				
ANR	1248155	ParameterType	xmlAttrPtr		1247526	0					
ANR	1248156	Identifier	tns		1247526	1					
ANR	1248157	Parameter	xmlNodePtr unionType	493:52:17783:17802	1247526	2	True				
ANR	1248158	ParameterType	xmlNodePtr		1247526	0					
ANR	1248159	Identifier	unionType		1247526	1					
ANR	1248160	Parameter	sdlTypePtr cur_type	493:74:17805:17823	1247526	3	True				
ANR	1248161	ParameterType	sdlTypePtr		1247526	0					
ANR	1248162	Identifier	cur_type		1247526	1					
ANR	1248163	CFGEntryNode	ENTRY		1247526		True				
ANR	1248164	CFGExitNode	EXIT		1247526		True				
ANR	1248165	Symbol	* memberTypes -> children		1247526						
ANR	1248166	Symbol	newType		1247526						
ANR	1248167	Symbol	unionType -> doc		1247526						
ANR	1248168	Symbol	cur_type -> elements		1247526						
ANR	1248169	Symbol	trav -> next		1247526						
ANR	1248170	Symbol	get_attribute		1247526						
ANR	1248171	Symbol	trav		1247526						
ANR	1248172	Symbol	* start		1247526						
ANR	1248173	Symbol	strchr		1247526						
ANR	1248174	Symbol	type		1247526						
ANR	1248175	Symbol	* * tns		1247526						
ANR	1248176	Symbol	* memberTypes		1247526						
ANR	1248177	Symbol	tmp		1247526						
ANR	1248178	Symbol	tns -> children -> content		1247526						
ANR	1248179	Symbol	memberTypes		1247526						
ANR	1248180	Symbol	tns -> children		1247526						
ANR	1248181	Symbol	cur_type		1247526						
ANR	1248182	Symbol	memberTypes -> children -> content		1247526						
ANR	1248183	Symbol	unionType -> children		1247526						
ANR	1248184	Symbol	NULL		1247526						
ANR	1248185	Symbol	* tns		1247526						
ANR	1248186	Symbol	& type		1247526						
ANR	1248187	Symbol	* sdl		1247526						
ANR	1248188	Symbol	TRUE		1247526						
ANR	1248189	Symbol	str		1247526						
ANR	1248190	Symbol	memberTypes -> children		1247526						
ANR	1248191	Symbol	sdl -> types		1247526						
ANR	1248192	Symbol	* nsptr		1247526						
ANR	1248193	Symbol	tns		1247526						
ANR	1248194	Symbol	sdl		1247526						
ANR	1248195	Symbol	* end		1247526						
ANR	1248196	Symbol	& tmp		1247526						
ANR	1248197	Symbol	trav -> name		1247526						
ANR	1248198	Symbol	unionType -> properties		1247526						
ANR	1248199	Symbol	unionType		1247526						
ANR	1248200	Symbol	BAD_CAST		1247526						
ANR	1248201	Symbol	next		1247526						
ANR	1248202	Symbol	* * memberTypes		1247526						
ANR	1248203	Symbol	ns		1247526						
ANR	1248204	Symbol	& anonymous		1247526						
ANR	1248205	Symbol	& newType		1247526						
ANR	1248206	Symbol	node_is_equal		1247526						
ANR	1248207	Symbol	nsptr		1247526						
ANR	1248208	Symbol	newType -> namens		1247526						
ANR	1248209	Symbol	* trav		1247526						
ANR	1248210	Symbol	emalloc		1247526						
ANR	1248211	Symbol	end		1247526						
ANR	1248212	Symbol	* newType		1247526						
ANR	1248213	Symbol	newType -> name		1247526						
ANR	1248214	Symbol	nsptr -> href		1247526						
ANR	1248215	Symbol	zend_hash_num_elements		1247526						
ANR	1248216	Symbol	start		1247526						
ANR	1248217	Symbol	* tns -> children		1247526						
ANR	1248218	Symbol	delete_type		1247526						
ANR	1248219	Symbol	xmlSearchNs		1247526						
ANR	1248220	Symbol	& ns		1247526						
ANR	1248221	Symbol	* cur_type		1247526						
ANR	1248222	Symbol	E_ERROR		1247526						
ANR	1248223	Symbol	newType -> encode		1247526						
ANR	1248224	Symbol	anonymous . c		1247526						
ANR	1248225	Symbol	estrdup		1247526						
ANR	1248226	Symbol	anonymous		1247526						
ANR	1248227	Symbol	* unionType		1247526						
ANR	1248228	Symbol	get_create_encoder		1247526						
ANR	1248229	Function	schema_simpleContent	591:0:20431:21423							
ANR	1248230	FunctionDef	"schema_simpleContent (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr simpCompType , sdlTypePtr cur_type)"		1248229	0					
ANR	1248231	CompoundStatement		592:0:20537:21423	1248229	0					
ANR	1248232	IdentifierDeclStatement	xmlNodePtr trav ;	593:1:20540:20555	1248229	0	True				
ANR	1248233	IdentifierDecl	trav		1248229	0					
ANR	1248234	IdentifierDeclType	xmlNodePtr		1248229	0					
ANR	1248235	Identifier	trav		1248229	1					
ANR	1248236	ExpressionStatement	trav = simpCompType -> children	595:1:20559:20588	1248229	1	True				
ANR	1248237	AssignmentExpression	trav = simpCompType -> children		1248229	0		=			
ANR	1248238	Identifier	trav		1248229	0					
ANR	1248239	PtrMemberAccess	simpCompType -> children		1248229	1					
ANR	1248240	Identifier	simpCompType		1248229	0					
ANR	1248241	Identifier	children		1248229	1					
ANR	1248242	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1248229	2					
ANR	1248243	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	596:5:20595:20642	1248229	0	True				
ANR	1248244	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1248229	0		&&			
ANR	1248245	EqualityExpression	trav != NULL		1248229	0		!=			
ANR	1248246	Identifier	trav		1248229	0					
ANR	1248247	Identifier	NULL		1248229	1					
ANR	1248248	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1248229	1					
ANR	1248249	Callee	node_is_equal		1248229	0					
ANR	1248250	Identifier	node_is_equal		1248229	0					
ANR	1248251	ArgumentList	trav		1248229	1					
ANR	1248252	Argument	trav		1248229	0					
ANR	1248253	Identifier	trav		1248229	0					
ANR	1248254	Argument	"""annotation"""		1248229	1					
ANR	1248255	PrimaryExpression	"""annotation"""		1248229	0					
ANR	1248256	CompoundStatement		5:55:107:107	1248229	1					
ANR	1248257	ExpressionStatement	trav = trav -> next	598:2:20684:20701	1248229	0	True				
ANR	1248258	AssignmentExpression	trav = trav -> next		1248229	0		=			
ANR	1248259	Identifier	trav		1248229	0					
ANR	1248260	PtrMemberAccess	trav -> next		1248229	1					
ANR	1248261	Identifier	trav		1248229	0					
ANR	1248262	Identifier	next		1248229	1					
ANR	1248263	IfStatement	if ( trav != NULL )		1248229	3					
ANR	1248264	Condition	trav != NULL	600:5:20711:20722	1248229	0	True				
ANR	1248265	EqualityExpression	trav != NULL		1248229	0		!=			
ANR	1248266	Identifier	trav		1248229	0					
ANR	1248267	Identifier	NULL		1248229	1					
ANR	1248268	CompoundStatement		9:19:187:187	1248229	1					
ANR	1248269	IfStatement	"if ( node_is_equal ( trav , ""restriction"" ) )"		1248229	0					
ANR	1248270	Condition	"node_is_equal ( trav , ""restriction"" )"	601:6:20733:20766	1248229	0	True				
ANR	1248271	CallExpression	"node_is_equal ( trav , ""restriction"" )"		1248229	0					
ANR	1248272	Callee	node_is_equal		1248229	0					
ANR	1248273	Identifier	node_is_equal		1248229	0					
ANR	1248274	ArgumentList	trav		1248229	1					
ANR	1248275	Argument	trav		1248229	0					
ANR	1248276	Identifier	trav		1248229	0					
ANR	1248277	Argument	"""restriction"""		1248229	1					
ANR	1248278	PrimaryExpression	"""restriction"""		1248229	0					
ANR	1248279	CompoundStatement		10:42:231:231	1248229	1					
ANR	1248280	ExpressionStatement	cur_type -> kind = XSD_TYPEKIND_RESTRICTION	602:3:20774:20815	1248229	0	True				
ANR	1248281	AssignmentExpression	cur_type -> kind = XSD_TYPEKIND_RESTRICTION		1248229	0		=			
ANR	1248282	PtrMemberAccess	cur_type -> kind		1248229	0					
ANR	1248283	Identifier	cur_type		1248229	0					
ANR	1248284	Identifier	kind		1248229	1					
ANR	1248285	Identifier	XSD_TYPEKIND_RESTRICTION		1248229	1					
ANR	1248286	ExpressionStatement	"schema_restriction_simpleContent ( sdl , tns , trav , cur_type , 0 )"	603:3:20820:20881	1248229	1	True				
ANR	1248287	CallExpression	"schema_restriction_simpleContent ( sdl , tns , trav , cur_type , 0 )"		1248229	0					
ANR	1248288	Callee	schema_restriction_simpleContent		1248229	0					
ANR	1248289	Identifier	schema_restriction_simpleContent		1248229	0					
ANR	1248290	ArgumentList	sdl		1248229	1					
ANR	1248291	Argument	sdl		1248229	0					
ANR	1248292	Identifier	sdl		1248229	0					
ANR	1248293	Argument	tns		1248229	1					
ANR	1248294	Identifier	tns		1248229	0					
ANR	1248295	Argument	trav		1248229	2					
ANR	1248296	Identifier	trav		1248229	0					
ANR	1248297	Argument	cur_type		1248229	3					
ANR	1248298	Identifier	cur_type		1248229	0					
ANR	1248299	Argument	0		1248229	4					
ANR	1248300	PrimaryExpression	0		1248229	0					
ANR	1248301	ExpressionStatement	trav = trav -> next	604:3:20886:20903	1248229	2	True				
ANR	1248302	AssignmentExpression	trav = trav -> next		1248229	0		=			
ANR	1248303	Identifier	trav		1248229	0					
ANR	1248304	PtrMemberAccess	trav -> next		1248229	1					
ANR	1248305	Identifier	trav		1248229	0					
ANR	1248306	Identifier	next		1248229	1					
ANR	1248307	ElseStatement	else		1248229	0					
ANR	1248308	IfStatement	"if ( node_is_equal ( trav , ""extension"" ) )"		1248229	0					
ANR	1248309	Condition	"node_is_equal ( trav , ""extension"" )"	605:13:20918:20949	1248229	0	True				
ANR	1248310	CallExpression	"node_is_equal ( trav , ""extension"" )"		1248229	0					
ANR	1248311	Callee	node_is_equal		1248229	0					
ANR	1248312	Identifier	node_is_equal		1248229	0					
ANR	1248313	ArgumentList	trav		1248229	1					
ANR	1248314	Argument	trav		1248229	0					
ANR	1248315	Identifier	trav		1248229	0					
ANR	1248316	Argument	"""extension"""		1248229	1					
ANR	1248317	PrimaryExpression	"""extension"""		1248229	0					
ANR	1248318	CompoundStatement		14:47:414:414	1248229	1					
ANR	1248319	ExpressionStatement	cur_type -> kind = XSD_TYPEKIND_EXTENSION	606:3:20957:20996	1248229	0	True				
ANR	1248320	AssignmentExpression	cur_type -> kind = XSD_TYPEKIND_EXTENSION		1248229	0		=			
ANR	1248321	PtrMemberAccess	cur_type -> kind		1248229	0					
ANR	1248322	Identifier	cur_type		1248229	0					
ANR	1248323	Identifier	kind		1248229	1					
ANR	1248324	Identifier	XSD_TYPEKIND_EXTENSION		1248229	1					
ANR	1248325	ExpressionStatement	"schema_extension_simpleContent ( sdl , tns , trav , cur_type )"	607:3:21001:21057	1248229	1	True				
ANR	1248326	CallExpression	"schema_extension_simpleContent ( sdl , tns , trav , cur_type )"		1248229	0					
ANR	1248327	Callee	schema_extension_simpleContent		1248229	0					
ANR	1248328	Identifier	schema_extension_simpleContent		1248229	0					
ANR	1248329	ArgumentList	sdl		1248229	1					
ANR	1248330	Argument	sdl		1248229	0					
ANR	1248331	Identifier	sdl		1248229	0					
ANR	1248332	Argument	tns		1248229	1					
ANR	1248333	Identifier	tns		1248229	0					
ANR	1248334	Argument	trav		1248229	2					
ANR	1248335	Identifier	trav		1248229	0					
ANR	1248336	Argument	cur_type		1248229	3					
ANR	1248337	Identifier	cur_type		1248229	0					
ANR	1248338	ExpressionStatement	trav = trav -> next	608:3:21062:21079	1248229	2	True				
ANR	1248339	AssignmentExpression	trav = trav -> next		1248229	0		=			
ANR	1248340	Identifier	trav		1248229	0					
ANR	1248341	PtrMemberAccess	trav -> next		1248229	1					
ANR	1248342	Identifier	trav		1248229	0					
ANR	1248343	Identifier	next		1248229	1					
ANR	1248344	ElseStatement	else		1248229	0					
ANR	1248345	CompoundStatement		18:9:552:552	1248229	0					
ANR	1248346	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleContent"" , trav -> name )"	610:3:21095:21179	1248229	0	True				
ANR	1248347	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleContent"" , trav -> name )"		1248229	0					
ANR	1248348	Callee	soap_error1		1248229	0					
ANR	1248349	Identifier	soap_error1		1248229	0					
ANR	1248350	ArgumentList	E_ERROR		1248229	1					
ANR	1248351	Argument	E_ERROR		1248229	0					
ANR	1248352	Identifier	E_ERROR		1248229	0					
ANR	1248353	Argument	"""Parsing Schema: unexpected <%s> in simpleContent"""		1248229	1					
ANR	1248354	PrimaryExpression	"""Parsing Schema: unexpected <%s> in simpleContent"""		1248229	0					
ANR	1248355	Argument	trav -> name		1248229	2					
ANR	1248356	PtrMemberAccess	trav -> name		1248229	0					
ANR	1248357	Identifier	trav		1248229	0					
ANR	1248358	Identifier	name		1248229	1					
ANR	1248359	ElseStatement	else		1248229	0					
ANR	1248360	CompoundStatement		21:8:655:655	1248229	0					
ANR	1248361	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: expected <restriction> or <extension> in simpleContent"" )"	613:2:21197:21291	1248229	0	True				
ANR	1248362	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: expected <restriction> or <extension> in simpleContent"" )"		1248229	0					
ANR	1248363	Callee	soap_error0		1248229	0					
ANR	1248364	Identifier	soap_error0		1248229	0					
ANR	1248365	ArgumentList	E_ERROR		1248229	1					
ANR	1248366	Argument	E_ERROR		1248229	0					
ANR	1248367	Identifier	E_ERROR		1248229	0					
ANR	1248368	Argument	"""Parsing Schema: expected <restriction> or <extension> in simpleContent"""		1248229	1					
ANR	1248369	PrimaryExpression	"""Parsing Schema: expected <restriction> or <extension> in simpleContent"""		1248229	0					
ANR	1248370	IfStatement	if ( trav != NULL )		1248229	4					
ANR	1248371	Condition	trav != NULL	615:5:21301:21312	1248229	0	True				
ANR	1248372	EqualityExpression	trav != NULL		1248229	0		!=			
ANR	1248373	Identifier	trav		1248229	0					
ANR	1248374	Identifier	NULL		1248229	1					
ANR	1248375	CompoundStatement		24:19:777:777	1248229	1					
ANR	1248376	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleContent"" , trav -> name )"	616:2:21319:21403	1248229	0	True				
ANR	1248377	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in simpleContent"" , trav -> name )"		1248229	0					
ANR	1248378	Callee	soap_error1		1248229	0					
ANR	1248379	Identifier	soap_error1		1248229	0					
ANR	1248380	ArgumentList	E_ERROR		1248229	1					
ANR	1248381	Argument	E_ERROR		1248229	0					
ANR	1248382	Identifier	E_ERROR		1248229	0					
ANR	1248383	Argument	"""Parsing Schema: unexpected <%s> in simpleContent"""		1248229	1					
ANR	1248384	PrimaryExpression	"""Parsing Schema: unexpected <%s> in simpleContent"""		1248229	0					
ANR	1248385	Argument	trav -> name		1248229	2					
ANR	1248386	PtrMemberAccess	trav -> name		1248229	0					
ANR	1248387	Identifier	trav		1248229	0					
ANR	1248388	Identifier	name		1248229	1					
ANR	1248389	ReturnStatement	return TRUE ;	619:1:21410:21421	1248229	5	True				
ANR	1248390	Identifier	TRUE		1248229	0					
ANR	1248391	ReturnType	static int		1248229	1					
ANR	1248392	Identifier	schema_simpleContent		1248229	2					
ANR	1248393	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr simpCompType , sdlTypePtr cur_type"		1248229	3					
ANR	1248394	Parameter	sdlPtr sdl	591:32:20463:20472	1248229	0	True				
ANR	1248395	ParameterType	sdlPtr		1248229	0					
ANR	1248396	Identifier	sdl		1248229	1					
ANR	1248397	Parameter	xmlAttrPtr tns	591:44:20475:20488	1248229	1	True				
ANR	1248398	ParameterType	xmlAttrPtr		1248229	0					
ANR	1248399	Identifier	tns		1248229	1					
ANR	1248400	Parameter	xmlNodePtr simpCompType	591:60:20491:20513	1248229	2	True				
ANR	1248401	ParameterType	xmlNodePtr		1248229	0					
ANR	1248402	Identifier	simpCompType		1248229	1					
ANR	1248403	Parameter	sdlTypePtr cur_type	591:85:20516:20534	1248229	3	True				
ANR	1248404	ParameterType	sdlTypePtr		1248229	0					
ANR	1248405	Identifier	cur_type		1248229	1					
ANR	1248406	CFGEntryNode	ENTRY		1248229		True				
ANR	1248407	CFGExitNode	EXIT		1248229		True				
ANR	1248408	Symbol	NULL		1248229						
ANR	1248409	Symbol	trav -> next		1248229						
ANR	1248410	Symbol	trav		1248229						
ANR	1248411	Symbol	simpCompType		1248229						
ANR	1248412	Symbol	TRUE		1248229						
ANR	1248413	Symbol	node_is_equal		1248229						
ANR	1248414	Symbol	* trav		1248229						
ANR	1248415	Symbol	* cur_type		1248229						
ANR	1248416	Symbol	XSD_TYPEKIND_RESTRICTION		1248229						
ANR	1248417	Symbol	* simpCompType		1248229						
ANR	1248418	Symbol	E_ERROR		1248229						
ANR	1248419	Symbol	simpCompType -> children		1248229						
ANR	1248420	Symbol	cur_type -> kind		1248229						
ANR	1248421	Symbol	tns		1248229						
ANR	1248422	Symbol	sdl		1248229						
ANR	1248423	Symbol	trav -> name		1248229						
ANR	1248424	Symbol	XSD_TYPEKIND_EXTENSION		1248229						
ANR	1248425	Symbol	cur_type		1248229						
ANR	1248426	Function	schema_restriction_simpleContent	636:0:22123:25890							
ANR	1248427	FunctionDef	"schema_restriction_simpleContent (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr restType , sdlTypePtr cur_type , int simpleType)"		1248426	0					
ANR	1248428	CompoundStatement		637:0:22253:25890	1248426	0					
ANR	1248429	IdentifierDeclStatement	xmlNodePtr trav ;	638:1:22256:22271	1248426	0	True				
ANR	1248430	IdentifierDecl	trav		1248426	0					
ANR	1248431	IdentifierDeclType	xmlNodePtr		1248426	0					
ANR	1248432	Identifier	trav		1248426	1					
ANR	1248433	IdentifierDeclStatement	xmlAttrPtr base ;	639:1:22274:22289	1248426	1	True				
ANR	1248434	IdentifierDecl	base		1248426	0					
ANR	1248435	IdentifierDeclType	xmlAttrPtr		1248426	0					
ANR	1248436	Identifier	base		1248426	1					
ANR	1248437	ExpressionStatement	"base = get_attribute ( restType -> properties , ""base"" )"	641:1:22293:22343	1248426	2	True				
ANR	1248438	AssignmentExpression	"base = get_attribute ( restType -> properties , ""base"" )"		1248426	0		=			
ANR	1248439	Identifier	base		1248426	0					
ANR	1248440	CallExpression	"get_attribute ( restType -> properties , ""base"" )"		1248426	1					
ANR	1248441	Callee	get_attribute		1248426	0					
ANR	1248442	Identifier	get_attribute		1248426	0					
ANR	1248443	ArgumentList	restType -> properties		1248426	1					
ANR	1248444	Argument	restType -> properties		1248426	0					
ANR	1248445	PtrMemberAccess	restType -> properties		1248426	0					
ANR	1248446	Identifier	restType		1248426	0					
ANR	1248447	Identifier	properties		1248426	1					
ANR	1248448	Argument	"""base"""		1248426	1					
ANR	1248449	PrimaryExpression	"""base"""		1248426	0					
ANR	1248450	IfStatement	if ( base != NULL )		1248426	3					
ANR	1248451	Condition	base != NULL	642:5:22350:22361	1248426	0	True				
ANR	1248452	EqualityExpression	base != NULL		1248426	0		!=			
ANR	1248453	Identifier	base		1248426	0					
ANR	1248454	Identifier	NULL		1248426	1					
ANR	1248455	CompoundStatement		8:2:133:147	1248426	1					
ANR	1248456	IdentifierDeclStatement	"char * type , * ns ;"	643:2:22368:22383	1248426	0	True				
ANR	1248457	IdentifierDecl	* type		1248426	0					
ANR	1248458	IdentifierDeclType	char *		1248426	0					
ANR	1248459	Identifier	type		1248426	1					
ANR	1248460	IdentifierDecl	* ns		1248426	1					
ANR	1248461	IdentifierDeclType	char *		1248426	0					
ANR	1248462	Identifier	ns		1248426	1					
ANR	1248463	IdentifierDeclStatement	xmlNsPtr nsptr ;	644:2:22387:22401	1248426	1	True				
ANR	1248464	IdentifierDecl	nsptr		1248426	0					
ANR	1248465	IdentifierDeclType	xmlNsPtr		1248426	0					
ANR	1248466	Identifier	nsptr		1248426	1					
ANR	1248467	ExpressionStatement	"parse_namespace ( base -> children -> content , & type , & ns )"	646:2:22406:22458	1248426	2	True				
ANR	1248468	CallExpression	"parse_namespace ( base -> children -> content , & type , & ns )"		1248426	0					
ANR	1248469	Callee	parse_namespace		1248426	0					
ANR	1248470	Identifier	parse_namespace		1248426	0					
ANR	1248471	ArgumentList	base -> children -> content		1248426	1					
ANR	1248472	Argument	base -> children -> content		1248426	0					
ANR	1248473	PtrMemberAccess	base -> children -> content		1248426	0					
ANR	1248474	PtrMemberAccess	base -> children		1248426	0					
ANR	1248475	Identifier	base		1248426	0					
ANR	1248476	Identifier	children		1248426	1					
ANR	1248477	Identifier	content		1248426	1					
ANR	1248478	Argument	& type		1248426	1					
ANR	1248479	UnaryOperationExpression	& type		1248426	0					
ANR	1248480	UnaryOperator	&		1248426	0					
ANR	1248481	Identifier	type		1248426	1					
ANR	1248482	Argument	& ns		1248426	2					
ANR	1248483	UnaryOperationExpression	& ns		1248426	0					
ANR	1248484	UnaryOperator	&		1248426	0					
ANR	1248485	Identifier	ns		1248426	1					
ANR	1248486	ExpressionStatement	"nsptr = xmlSearchNs ( restType -> doc , restType , BAD_CAST ( ns ) )"	647:2:22462:22520	1248426	3	True				
ANR	1248487	AssignmentExpression	"nsptr = xmlSearchNs ( restType -> doc , restType , BAD_CAST ( ns ) )"		1248426	0		=			
ANR	1248488	Identifier	nsptr		1248426	0					
ANR	1248489	CallExpression	"xmlSearchNs ( restType -> doc , restType , BAD_CAST ( ns ) )"		1248426	1					
ANR	1248490	Callee	xmlSearchNs		1248426	0					
ANR	1248491	Identifier	xmlSearchNs		1248426	0					
ANR	1248492	ArgumentList	restType -> doc		1248426	1					
ANR	1248493	Argument	restType -> doc		1248426	0					
ANR	1248494	PtrMemberAccess	restType -> doc		1248426	0					
ANR	1248495	Identifier	restType		1248426	0					
ANR	1248496	Identifier	doc		1248426	1					
ANR	1248497	Argument	restType		1248426	1					
ANR	1248498	Identifier	restType		1248426	0					
ANR	1248499	Argument	BAD_CAST ( ns )		1248426	2					
ANR	1248500	CallExpression	BAD_CAST ( ns )		1248426	0					
ANR	1248501	Callee	BAD_CAST		1248426	0					
ANR	1248502	Identifier	BAD_CAST		1248426	0					
ANR	1248503	ArgumentList	ns		1248426	1					
ANR	1248504	Argument	ns		1248426	0					
ANR	1248505	Identifier	ns		1248426	0					
ANR	1248506	IfStatement	if ( nsptr != NULL )		1248426	4					
ANR	1248507	Condition	nsptr != NULL	648:6:22528:22540	1248426	0	True				
ANR	1248508	EqualityExpression	nsptr != NULL		1248426	0		!=			
ANR	1248509	Identifier	nsptr		1248426	0					
ANR	1248510	Identifier	NULL		1248426	1					
ANR	1248511	CompoundStatement		12:21:289:289	1248426	1					
ANR	1248512	ExpressionStatement	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"	649:3:22548:22629	1248426	0	True				
ANR	1248513	AssignmentExpression	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1248426	0		=			
ANR	1248514	PtrMemberAccess	cur_type -> encode		1248426	0					
ANR	1248515	Identifier	cur_type		1248426	0					
ANR	1248516	Identifier	encode		1248426	1					
ANR	1248517	CallExpression	"get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1248426	1					
ANR	1248518	Callee	get_create_encoder		1248426	0					
ANR	1248519	Identifier	get_create_encoder		1248426	0					
ANR	1248520	ArgumentList	sdl		1248426	1					
ANR	1248521	Argument	sdl		1248426	0					
ANR	1248522	Identifier	sdl		1248426	0					
ANR	1248523	Argument	cur_type		1248426	1					
ANR	1248524	Identifier	cur_type		1248426	0					
ANR	1248525	Argument	nsptr -> href		1248426	2					
ANR	1248526	PtrMemberAccess	nsptr -> href		1248426	0					
ANR	1248527	Identifier	nsptr		1248426	0					
ANR	1248528	Identifier	href		1248426	1					
ANR	1248529	Argument	BAD_CAST ( type )		1248426	3					
ANR	1248530	CallExpression	BAD_CAST ( type )		1248426	0					
ANR	1248531	Callee	BAD_CAST		1248426	0					
ANR	1248532	Identifier	BAD_CAST		1248426	0					
ANR	1248533	ArgumentList	type		1248426	1					
ANR	1248534	Argument	type		1248426	0					
ANR	1248535	Identifier	type		1248426	0					
ANR	1248536	IfStatement	if ( type )		1248426	5					
ANR	1248537	Condition	type	651:6:22641:22644	1248426	0	True				
ANR	1248538	Identifier	type		1248426	0					
ANR	1248539	CompoundStatement		15:12:393:393	1248426	1					
ANR	1248540	ExpressionStatement	efree ( type )	651:13:22648:22659	1248426	0	True				
ANR	1248541	CallExpression	efree ( type )		1248426	0					
ANR	1248542	Callee	efree		1248426	0					
ANR	1248543	Identifier	efree		1248426	0					
ANR	1248544	ArgumentList	type		1248426	1					
ANR	1248545	Argument	type		1248426	0					
ANR	1248546	Identifier	type		1248426	0					
ANR	1248547	IfStatement	if ( ns )		1248426	6					
ANR	1248548	Condition	ns	652:6:22668:22669	1248426	0	True				
ANR	1248549	Identifier	ns		1248426	0					
ANR	1248550	CompoundStatement		16:10:418:418	1248426	1					
ANR	1248551	ExpressionStatement	efree ( ns )	652:11:22673:22682	1248426	0	True				
ANR	1248552	CallExpression	efree ( ns )		1248426	0					
ANR	1248553	Callee	efree		1248426	0					
ANR	1248554	Identifier	efree		1248426	0					
ANR	1248555	ArgumentList	ns		1248426	1					
ANR	1248556	Argument	ns		1248426	0					
ANR	1248557	Identifier	ns		1248426	0					
ANR	1248558	ElseStatement	else		1248426	0					
ANR	1248559	IfStatement	if ( ! simpleType )		1248426	0					
ANR	1248560	Condition	! simpleType	653:12:22697:22707	1248426	0	True				
ANR	1248561	UnaryOperationExpression	! simpleType		1248426	0					
ANR	1248562	UnaryOperator	!		1248426	0					
ANR	1248563	Identifier	simpleType		1248426	1					
ANR	1248564	CompoundStatement		17:25:456:456	1248426	1					
ANR	1248565	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: restriction has no 'base' attribute"" )"	654:2:22714:22789	1248426	0	True				
ANR	1248566	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: restriction has no 'base' attribute"" )"		1248426	0					
ANR	1248567	Callee	soap_error0		1248426	0					
ANR	1248568	Identifier	soap_error0		1248426	0					
ANR	1248569	ArgumentList	E_ERROR		1248426	1					
ANR	1248570	Argument	E_ERROR		1248426	0					
ANR	1248571	Identifier	E_ERROR		1248426	0					
ANR	1248572	Argument	"""Parsing Schema: restriction has no 'base' attribute"""		1248426	1					
ANR	1248573	PrimaryExpression	"""Parsing Schema: restriction has no 'base' attribute"""		1248426	0					
ANR	1248574	IfStatement	if ( cur_type -> restrictions == NULL )		1248426	4					
ANR	1248575	Condition	cur_type -> restrictions == NULL	657:5:22800:22829	1248426	0	True				
ANR	1248576	EqualityExpression	cur_type -> restrictions == NULL		1248426	0		==			
ANR	1248577	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248578	Identifier	cur_type		1248426	0					
ANR	1248579	Identifier	restrictions		1248426	1					
ANR	1248580	Identifier	NULL		1248426	1					
ANR	1248581	CompoundStatement		21:37:578:578	1248426	1					
ANR	1248582	ExpressionStatement	cur_type -> restrictions = emalloc ( sizeof ( sdlRestrictions ) )	658:2:22836:22893	1248426	0	True				
ANR	1248583	AssignmentExpression	cur_type -> restrictions = emalloc ( sizeof ( sdlRestrictions ) )		1248426	0		=			
ANR	1248584	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248585	Identifier	cur_type		1248426	0					
ANR	1248586	Identifier	restrictions		1248426	1					
ANR	1248587	CallExpression	emalloc ( sizeof ( sdlRestrictions ) )		1248426	1					
ANR	1248588	Callee	emalloc		1248426	0					
ANR	1248589	Identifier	emalloc		1248426	0					
ANR	1248590	ArgumentList	sizeof ( sdlRestrictions )		1248426	1					
ANR	1248591	Argument	sizeof ( sdlRestrictions )		1248426	0					
ANR	1248592	SizeofExpression	sizeof ( sdlRestrictions )		1248426	0					
ANR	1248593	Sizeof	sizeof		1248426	0					
ANR	1248594	SizeofOperand	sdlRestrictions		1248426	1					
ANR	1248595	ExpressionStatement	"memset ( cur_type -> restrictions , 0 , sizeof ( sdlRestrictions ) )"	659:2:22897:22955	1248426	1	True				
ANR	1248596	CallExpression	"memset ( cur_type -> restrictions , 0 , sizeof ( sdlRestrictions ) )"		1248426	0					
ANR	1248597	Callee	memset		1248426	0					
ANR	1248598	Identifier	memset		1248426	0					
ANR	1248599	ArgumentList	cur_type -> restrictions		1248426	1					
ANR	1248600	Argument	cur_type -> restrictions		1248426	0					
ANR	1248601	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248602	Identifier	cur_type		1248426	0					
ANR	1248603	Identifier	restrictions		1248426	1					
ANR	1248604	Argument	0		1248426	1					
ANR	1248605	PrimaryExpression	0		1248426	0					
ANR	1248606	Argument	sizeof ( sdlRestrictions )		1248426	2					
ANR	1248607	SizeofExpression	sizeof ( sdlRestrictions )		1248426	0					
ANR	1248608	Sizeof	sizeof		1248426	0					
ANR	1248609	SizeofOperand	sdlRestrictions		1248426	1					
ANR	1248610	ExpressionStatement	trav = restType -> children	662:1:22962:22987	1248426	5	True				
ANR	1248611	AssignmentExpression	trav = restType -> children		1248426	0		=			
ANR	1248612	Identifier	trav		1248426	0					
ANR	1248613	PtrMemberAccess	restType -> children		1248426	1					
ANR	1248614	Identifier	restType		1248426	0					
ANR	1248615	Identifier	children		1248426	1					
ANR	1248616	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1248426	6					
ANR	1248617	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	663:5:22994:23042	1248426	0	True				
ANR	1248618	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1248426	0		&&			
ANR	1248619	EqualityExpression	trav != NULL		1248426	0		!=			
ANR	1248620	Identifier	trav		1248426	0					
ANR	1248621	Identifier	NULL		1248426	1					
ANR	1248622	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1248426	1					
ANR	1248623	Callee	node_is_equal		1248426	0					
ANR	1248624	Identifier	node_is_equal		1248426	0					
ANR	1248625	ArgumentList	trav		1248426	1					
ANR	1248626	Argument	trav		1248426	0					
ANR	1248627	Identifier	trav		1248426	0					
ANR	1248628	Argument	"""annotation"""		1248426	1					
ANR	1248629	PrimaryExpression	"""annotation"""		1248426	0					
ANR	1248630	CompoundStatement		27:56:791:791	1248426	1					
ANR	1248631	ExpressionStatement	trav = trav -> next	665:2:23084:23101	1248426	0	True				
ANR	1248632	AssignmentExpression	trav = trav -> next		1248426	0		=			
ANR	1248633	Identifier	trav		1248426	0					
ANR	1248634	PtrMemberAccess	trav -> next		1248426	1					
ANR	1248635	Identifier	trav		1248426	0					
ANR	1248636	Identifier	next		1248426	1					
ANR	1248637	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""simpleType"" ) )"		1248426	7					
ANR	1248638	Condition	"trav != NULL && node_is_equal ( trav , ""simpleType"" )"	667:5:23111:23159	1248426	0	True				
ANR	1248639	AndExpression	"trav != NULL && node_is_equal ( trav , ""simpleType"" )"		1248426	0		&&			
ANR	1248640	EqualityExpression	trav != NULL		1248426	0		!=			
ANR	1248641	Identifier	trav		1248426	0					
ANR	1248642	Identifier	NULL		1248426	1					
ANR	1248643	CallExpression	"node_is_equal ( trav , ""simpleType"" )"		1248426	1					
ANR	1248644	Callee	node_is_equal		1248426	0					
ANR	1248645	Identifier	node_is_equal		1248426	0					
ANR	1248646	ArgumentList	trav		1248426	1					
ANR	1248647	Argument	trav		1248426	0					
ANR	1248648	Identifier	trav		1248426	0					
ANR	1248649	Argument	"""simpleType"""		1248426	1					
ANR	1248650	PrimaryExpression	"""simpleType"""		1248426	0					
ANR	1248651	CompoundStatement		31:56:908:908	1248426	1					
ANR	1248652	ExpressionStatement	"schema_simpleType ( sdl , tns , trav , cur_type )"	668:2:23166:23209	1248426	0	True				
ANR	1248653	CallExpression	"schema_simpleType ( sdl , tns , trav , cur_type )"		1248426	0					
ANR	1248654	Callee	schema_simpleType		1248426	0					
ANR	1248655	Identifier	schema_simpleType		1248426	0					
ANR	1248656	ArgumentList	sdl		1248426	1					
ANR	1248657	Argument	sdl		1248426	0					
ANR	1248658	Identifier	sdl		1248426	0					
ANR	1248659	Argument	tns		1248426	1					
ANR	1248660	Identifier	tns		1248426	0					
ANR	1248661	Argument	trav		1248426	2					
ANR	1248662	Identifier	trav		1248426	0					
ANR	1248663	Argument	cur_type		1248426	3					
ANR	1248664	Identifier	cur_type		1248426	0					
ANR	1248665	ExpressionStatement	trav = trav -> next	669:2:23213:23230	1248426	1	True				
ANR	1248666	AssignmentExpression	trav = trav -> next		1248426	0		=			
ANR	1248667	Identifier	trav		1248426	0					
ANR	1248668	PtrMemberAccess	trav -> next		1248426	1					
ANR	1248669	Identifier	trav		1248426	0					
ANR	1248670	Identifier	next		1248426	1					
ANR	1248671	WhileStatement	while ( trav != NULL )		1248426	8					
ANR	1248672	Condition	trav != NULL	671:8:23243:23254	1248426	0	True				
ANR	1248673	EqualityExpression	trav != NULL		1248426	0		!=			
ANR	1248674	Identifier	trav		1248426	0					
ANR	1248675	Identifier	NULL		1248426	1					
ANR	1248676	CompoundStatement		35:22:1003:1003	1248426	1					
ANR	1248677	IfStatement	"if ( node_is_equal ( trav , ""minExclusive"" ) )"		1248426	0					
ANR	1248678	Condition	"node_is_equal ( trav , ""minExclusive"" )"	672:6:23265:23299	1248426	0	True				
ANR	1248679	CallExpression	"node_is_equal ( trav , ""minExclusive"" )"		1248426	0					
ANR	1248680	Callee	node_is_equal		1248426	0					
ANR	1248681	Identifier	node_is_equal		1248426	0					
ANR	1248682	ArgumentList	trav		1248426	1					
ANR	1248683	Argument	trav		1248426	0					
ANR	1248684	Identifier	trav		1248426	0					
ANR	1248685	Argument	"""minExclusive"""		1248426	1					
ANR	1248686	PrimaryExpression	"""minExclusive"""		1248426	0					
ANR	1248687	CompoundStatement		36:43:1048:1048	1248426	1					
ANR	1248688	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> minExclusive )"	673:3:23307:23378	1248426	0	True				
ANR	1248689	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> minExclusive )"		1248426	0					
ANR	1248690	Callee	schema_restriction_var_int		1248426	0					
ANR	1248691	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248692	ArgumentList	trav		1248426	1					
ANR	1248693	Argument	trav		1248426	0					
ANR	1248694	Identifier	trav		1248426	0					
ANR	1248695	Argument	& cur_type -> restrictions -> minExclusive		1248426	1					
ANR	1248696	UnaryOperationExpression	& cur_type -> restrictions -> minExclusive		1248426	0					
ANR	1248697	UnaryOperator	&		1248426	0					
ANR	1248698	PtrMemberAccess	cur_type -> restrictions -> minExclusive		1248426	1					
ANR	1248699	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248700	Identifier	cur_type		1248426	0					
ANR	1248701	Identifier	restrictions		1248426	1					
ANR	1248702	Identifier	minExclusive		1248426	1					
ANR	1248703	ElseStatement	else		1248426	0					
ANR	1248704	IfStatement	"if ( node_is_equal ( trav , ""minInclusive"" ) )"		1248426	0					
ANR	1248705	Condition	"node_is_equal ( trav , ""minInclusive"" )"	674:13:23393:23427	1248426	0	True				
ANR	1248706	CallExpression	"node_is_equal ( trav , ""minInclusive"" )"		1248426	0					
ANR	1248707	Callee	node_is_equal		1248426	0					
ANR	1248708	Identifier	node_is_equal		1248426	0					
ANR	1248709	ArgumentList	trav		1248426	1					
ANR	1248710	Argument	trav		1248426	0					
ANR	1248711	Identifier	trav		1248426	0					
ANR	1248712	Argument	"""minInclusive"""		1248426	1					
ANR	1248713	PrimaryExpression	"""minInclusive"""		1248426	0					
ANR	1248714	CompoundStatement		38:50:1176:1176	1248426	1					
ANR	1248715	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> minInclusive )"	675:3:23435:23506	1248426	0	True				
ANR	1248716	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> minInclusive )"		1248426	0					
ANR	1248717	Callee	schema_restriction_var_int		1248426	0					
ANR	1248718	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248719	ArgumentList	trav		1248426	1					
ANR	1248720	Argument	trav		1248426	0					
ANR	1248721	Identifier	trav		1248426	0					
ANR	1248722	Argument	& cur_type -> restrictions -> minInclusive		1248426	1					
ANR	1248723	UnaryOperationExpression	& cur_type -> restrictions -> minInclusive		1248426	0					
ANR	1248724	UnaryOperator	&		1248426	0					
ANR	1248725	PtrMemberAccess	cur_type -> restrictions -> minInclusive		1248426	1					
ANR	1248726	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248727	Identifier	cur_type		1248426	0					
ANR	1248728	Identifier	restrictions		1248426	1					
ANR	1248729	Identifier	minInclusive		1248426	1					
ANR	1248730	ElseStatement	else		1248426	0					
ANR	1248731	IfStatement	"if ( node_is_equal ( trav , ""maxExclusive"" ) )"		1248426	0					
ANR	1248732	Condition	"node_is_equal ( trav , ""maxExclusive"" )"	676:13:23521:23555	1248426	0	True				
ANR	1248733	CallExpression	"node_is_equal ( trav , ""maxExclusive"" )"		1248426	0					
ANR	1248734	Callee	node_is_equal		1248426	0					
ANR	1248735	Identifier	node_is_equal		1248426	0					
ANR	1248736	ArgumentList	trav		1248426	1					
ANR	1248737	Argument	trav		1248426	0					
ANR	1248738	Identifier	trav		1248426	0					
ANR	1248739	Argument	"""maxExclusive"""		1248426	1					
ANR	1248740	PrimaryExpression	"""maxExclusive"""		1248426	0					
ANR	1248741	CompoundStatement		40:50:1304:1304	1248426	1					
ANR	1248742	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> maxExclusive )"	677:3:23563:23634	1248426	0	True				
ANR	1248743	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> maxExclusive )"		1248426	0					
ANR	1248744	Callee	schema_restriction_var_int		1248426	0					
ANR	1248745	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248746	ArgumentList	trav		1248426	1					
ANR	1248747	Argument	trav		1248426	0					
ANR	1248748	Identifier	trav		1248426	0					
ANR	1248749	Argument	& cur_type -> restrictions -> maxExclusive		1248426	1					
ANR	1248750	UnaryOperationExpression	& cur_type -> restrictions -> maxExclusive		1248426	0					
ANR	1248751	UnaryOperator	&		1248426	0					
ANR	1248752	PtrMemberAccess	cur_type -> restrictions -> maxExclusive		1248426	1					
ANR	1248753	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248754	Identifier	cur_type		1248426	0					
ANR	1248755	Identifier	restrictions		1248426	1					
ANR	1248756	Identifier	maxExclusive		1248426	1					
ANR	1248757	ElseStatement	else		1248426	0					
ANR	1248758	IfStatement	"if ( node_is_equal ( trav , ""maxInclusive"" ) )"		1248426	0					
ANR	1248759	Condition	"node_is_equal ( trav , ""maxInclusive"" )"	678:13:23649:23683	1248426	0	True				
ANR	1248760	CallExpression	"node_is_equal ( trav , ""maxInclusive"" )"		1248426	0					
ANR	1248761	Callee	node_is_equal		1248426	0					
ANR	1248762	Identifier	node_is_equal		1248426	0					
ANR	1248763	ArgumentList	trav		1248426	1					
ANR	1248764	Argument	trav		1248426	0					
ANR	1248765	Identifier	trav		1248426	0					
ANR	1248766	Argument	"""maxInclusive"""		1248426	1					
ANR	1248767	PrimaryExpression	"""maxInclusive"""		1248426	0					
ANR	1248768	CompoundStatement		42:50:1432:1432	1248426	1					
ANR	1248769	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> maxInclusive )"	679:3:23691:23762	1248426	0	True				
ANR	1248770	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> maxInclusive )"		1248426	0					
ANR	1248771	Callee	schema_restriction_var_int		1248426	0					
ANR	1248772	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248773	ArgumentList	trav		1248426	1					
ANR	1248774	Argument	trav		1248426	0					
ANR	1248775	Identifier	trav		1248426	0					
ANR	1248776	Argument	& cur_type -> restrictions -> maxInclusive		1248426	1					
ANR	1248777	UnaryOperationExpression	& cur_type -> restrictions -> maxInclusive		1248426	0					
ANR	1248778	UnaryOperator	&		1248426	0					
ANR	1248779	PtrMemberAccess	cur_type -> restrictions -> maxInclusive		1248426	1					
ANR	1248780	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248781	Identifier	cur_type		1248426	0					
ANR	1248782	Identifier	restrictions		1248426	1					
ANR	1248783	Identifier	maxInclusive		1248426	1					
ANR	1248784	ElseStatement	else		1248426	0					
ANR	1248785	IfStatement	"if ( node_is_equal ( trav , ""totalDigits"" ) )"		1248426	0					
ANR	1248786	Condition	"node_is_equal ( trav , ""totalDigits"" )"	680:13:23777:23810	1248426	0	True				
ANR	1248787	CallExpression	"node_is_equal ( trav , ""totalDigits"" )"		1248426	0					
ANR	1248788	Callee	node_is_equal		1248426	0					
ANR	1248789	Identifier	node_is_equal		1248426	0					
ANR	1248790	ArgumentList	trav		1248426	1					
ANR	1248791	Argument	trav		1248426	0					
ANR	1248792	Identifier	trav		1248426	0					
ANR	1248793	Argument	"""totalDigits"""		1248426	1					
ANR	1248794	PrimaryExpression	"""totalDigits"""		1248426	0					
ANR	1248795	CompoundStatement		44:49:1559:1559	1248426	1					
ANR	1248796	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> totalDigits )"	681:3:23818:23888	1248426	0	True				
ANR	1248797	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> totalDigits )"		1248426	0					
ANR	1248798	Callee	schema_restriction_var_int		1248426	0					
ANR	1248799	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248800	ArgumentList	trav		1248426	1					
ANR	1248801	Argument	trav		1248426	0					
ANR	1248802	Identifier	trav		1248426	0					
ANR	1248803	Argument	& cur_type -> restrictions -> totalDigits		1248426	1					
ANR	1248804	UnaryOperationExpression	& cur_type -> restrictions -> totalDigits		1248426	0					
ANR	1248805	UnaryOperator	&		1248426	0					
ANR	1248806	PtrMemberAccess	cur_type -> restrictions -> totalDigits		1248426	1					
ANR	1248807	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248808	Identifier	cur_type		1248426	0					
ANR	1248809	Identifier	restrictions		1248426	1					
ANR	1248810	Identifier	totalDigits		1248426	1					
ANR	1248811	ElseStatement	else		1248426	0					
ANR	1248812	IfStatement	"if ( node_is_equal ( trav , ""fractionDigits"" ) )"		1248426	0					
ANR	1248813	Condition	"node_is_equal ( trav , ""fractionDigits"" )"	682:13:23903:23939	1248426	0	True				
ANR	1248814	CallExpression	"node_is_equal ( trav , ""fractionDigits"" )"		1248426	0					
ANR	1248815	Callee	node_is_equal		1248426	0					
ANR	1248816	Identifier	node_is_equal		1248426	0					
ANR	1248817	ArgumentList	trav		1248426	1					
ANR	1248818	Argument	trav		1248426	0					
ANR	1248819	Identifier	trav		1248426	0					
ANR	1248820	Argument	"""fractionDigits"""		1248426	1					
ANR	1248821	PrimaryExpression	"""fractionDigits"""		1248426	0					
ANR	1248822	CompoundStatement		46:52:1688:1688	1248426	1					
ANR	1248823	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> fractionDigits )"	683:3:23947:24020	1248426	0	True				
ANR	1248824	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> fractionDigits )"		1248426	0					
ANR	1248825	Callee	schema_restriction_var_int		1248426	0					
ANR	1248826	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248827	ArgumentList	trav		1248426	1					
ANR	1248828	Argument	trav		1248426	0					
ANR	1248829	Identifier	trav		1248426	0					
ANR	1248830	Argument	& cur_type -> restrictions -> fractionDigits		1248426	1					
ANR	1248831	UnaryOperationExpression	& cur_type -> restrictions -> fractionDigits		1248426	0					
ANR	1248832	UnaryOperator	&		1248426	0					
ANR	1248833	PtrMemberAccess	cur_type -> restrictions -> fractionDigits		1248426	1					
ANR	1248834	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248835	Identifier	cur_type		1248426	0					
ANR	1248836	Identifier	restrictions		1248426	1					
ANR	1248837	Identifier	fractionDigits		1248426	1					
ANR	1248838	ElseStatement	else		1248426	0					
ANR	1248839	IfStatement	"if ( node_is_equal ( trav , ""length"" ) )"		1248426	0					
ANR	1248840	Condition	"node_is_equal ( trav , ""length"" )"	684:13:24035:24063	1248426	0	True				
ANR	1248841	CallExpression	"node_is_equal ( trav , ""length"" )"		1248426	0					
ANR	1248842	Callee	node_is_equal		1248426	0					
ANR	1248843	Identifier	node_is_equal		1248426	0					
ANR	1248844	ArgumentList	trav		1248426	1					
ANR	1248845	Argument	trav		1248426	0					
ANR	1248846	Identifier	trav		1248426	0					
ANR	1248847	Argument	"""length"""		1248426	1					
ANR	1248848	PrimaryExpression	"""length"""		1248426	0					
ANR	1248849	CompoundStatement		48:44:1812:1812	1248426	1					
ANR	1248850	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> length )"	685:3:24071:24136	1248426	0	True				
ANR	1248851	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> length )"		1248426	0					
ANR	1248852	Callee	schema_restriction_var_int		1248426	0					
ANR	1248853	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248854	ArgumentList	trav		1248426	1					
ANR	1248855	Argument	trav		1248426	0					
ANR	1248856	Identifier	trav		1248426	0					
ANR	1248857	Argument	& cur_type -> restrictions -> length		1248426	1					
ANR	1248858	UnaryOperationExpression	& cur_type -> restrictions -> length		1248426	0					
ANR	1248859	UnaryOperator	&		1248426	0					
ANR	1248860	PtrMemberAccess	cur_type -> restrictions -> length		1248426	1					
ANR	1248861	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248862	Identifier	cur_type		1248426	0					
ANR	1248863	Identifier	restrictions		1248426	1					
ANR	1248864	Identifier	length		1248426	1					
ANR	1248865	ElseStatement	else		1248426	0					
ANR	1248866	IfStatement	"if ( node_is_equal ( trav , ""minLength"" ) )"		1248426	0					
ANR	1248867	Condition	"node_is_equal ( trav , ""minLength"" )"	686:13:24151:24182	1248426	0	True				
ANR	1248868	CallExpression	"node_is_equal ( trav , ""minLength"" )"		1248426	0					
ANR	1248869	Callee	node_is_equal		1248426	0					
ANR	1248870	Identifier	node_is_equal		1248426	0					
ANR	1248871	ArgumentList	trav		1248426	1					
ANR	1248872	Argument	trav		1248426	0					
ANR	1248873	Identifier	trav		1248426	0					
ANR	1248874	Argument	"""minLength"""		1248426	1					
ANR	1248875	PrimaryExpression	"""minLength"""		1248426	0					
ANR	1248876	CompoundStatement		50:47:1931:1931	1248426	1					
ANR	1248877	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> minLength )"	687:3:24190:24258	1248426	0	True				
ANR	1248878	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> minLength )"		1248426	0					
ANR	1248879	Callee	schema_restriction_var_int		1248426	0					
ANR	1248880	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248881	ArgumentList	trav		1248426	1					
ANR	1248882	Argument	trav		1248426	0					
ANR	1248883	Identifier	trav		1248426	0					
ANR	1248884	Argument	& cur_type -> restrictions -> minLength		1248426	1					
ANR	1248885	UnaryOperationExpression	& cur_type -> restrictions -> minLength		1248426	0					
ANR	1248886	UnaryOperator	&		1248426	0					
ANR	1248887	PtrMemberAccess	cur_type -> restrictions -> minLength		1248426	1					
ANR	1248888	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248889	Identifier	cur_type		1248426	0					
ANR	1248890	Identifier	restrictions		1248426	1					
ANR	1248891	Identifier	minLength		1248426	1					
ANR	1248892	ElseStatement	else		1248426	0					
ANR	1248893	IfStatement	"if ( node_is_equal ( trav , ""maxLength"" ) )"		1248426	0					
ANR	1248894	Condition	"node_is_equal ( trav , ""maxLength"" )"	688:13:24273:24304	1248426	0	True				
ANR	1248895	CallExpression	"node_is_equal ( trav , ""maxLength"" )"		1248426	0					
ANR	1248896	Callee	node_is_equal		1248426	0					
ANR	1248897	Identifier	node_is_equal		1248426	0					
ANR	1248898	ArgumentList	trav		1248426	1					
ANR	1248899	Argument	trav		1248426	0					
ANR	1248900	Identifier	trav		1248426	0					
ANR	1248901	Argument	"""maxLength"""		1248426	1					
ANR	1248902	PrimaryExpression	"""maxLength"""		1248426	0					
ANR	1248903	CompoundStatement		52:47:2053:2053	1248426	1					
ANR	1248904	ExpressionStatement	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> maxLength )"	689:3:24312:24380	1248426	0	True				
ANR	1248905	CallExpression	"schema_restriction_var_int ( trav , & cur_type -> restrictions -> maxLength )"		1248426	0					
ANR	1248906	Callee	schema_restriction_var_int		1248426	0					
ANR	1248907	Identifier	schema_restriction_var_int		1248426	0					
ANR	1248908	ArgumentList	trav		1248426	1					
ANR	1248909	Argument	trav		1248426	0					
ANR	1248910	Identifier	trav		1248426	0					
ANR	1248911	Argument	& cur_type -> restrictions -> maxLength		1248426	1					
ANR	1248912	UnaryOperationExpression	& cur_type -> restrictions -> maxLength		1248426	0					
ANR	1248913	UnaryOperator	&		1248426	0					
ANR	1248914	PtrMemberAccess	cur_type -> restrictions -> maxLength		1248426	1					
ANR	1248915	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248916	Identifier	cur_type		1248426	0					
ANR	1248917	Identifier	restrictions		1248426	1					
ANR	1248918	Identifier	maxLength		1248426	1					
ANR	1248919	ElseStatement	else		1248426	0					
ANR	1248920	IfStatement	"if ( node_is_equal ( trav , ""whiteSpace"" ) )"		1248426	0					
ANR	1248921	Condition	"node_is_equal ( trav , ""whiteSpace"" )"	690:13:24395:24427	1248426	0	True				
ANR	1248922	CallExpression	"node_is_equal ( trav , ""whiteSpace"" )"		1248426	0					
ANR	1248923	Callee	node_is_equal		1248426	0					
ANR	1248924	Identifier	node_is_equal		1248426	0					
ANR	1248925	ArgumentList	trav		1248426	1					
ANR	1248926	Argument	trav		1248426	0					
ANR	1248927	Identifier	trav		1248426	0					
ANR	1248928	Argument	"""whiteSpace"""		1248426	1					
ANR	1248929	PrimaryExpression	"""whiteSpace"""		1248426	0					
ANR	1248930	CompoundStatement		54:48:2176:2176	1248426	1					
ANR	1248931	ExpressionStatement	"schema_restriction_var_char ( trav , & cur_type -> restrictions -> whiteSpace )"	691:3:24435:24505	1248426	0	True				
ANR	1248932	CallExpression	"schema_restriction_var_char ( trav , & cur_type -> restrictions -> whiteSpace )"		1248426	0					
ANR	1248933	Callee	schema_restriction_var_char		1248426	0					
ANR	1248934	Identifier	schema_restriction_var_char		1248426	0					
ANR	1248935	ArgumentList	trav		1248426	1					
ANR	1248936	Argument	trav		1248426	0					
ANR	1248937	Identifier	trav		1248426	0					
ANR	1248938	Argument	& cur_type -> restrictions -> whiteSpace		1248426	1					
ANR	1248939	UnaryOperationExpression	& cur_type -> restrictions -> whiteSpace		1248426	0					
ANR	1248940	UnaryOperator	&		1248426	0					
ANR	1248941	PtrMemberAccess	cur_type -> restrictions -> whiteSpace		1248426	1					
ANR	1248942	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248943	Identifier	cur_type		1248426	0					
ANR	1248944	Identifier	restrictions		1248426	1					
ANR	1248945	Identifier	whiteSpace		1248426	1					
ANR	1248946	ElseStatement	else		1248426	0					
ANR	1248947	IfStatement	"if ( node_is_equal ( trav , ""pattern"" ) )"		1248426	0					
ANR	1248948	Condition	"node_is_equal ( trav , ""pattern"" )"	692:13:24520:24549	1248426	0	True				
ANR	1248949	CallExpression	"node_is_equal ( trav , ""pattern"" )"		1248426	0					
ANR	1248950	Callee	node_is_equal		1248426	0					
ANR	1248951	Identifier	node_is_equal		1248426	0					
ANR	1248952	ArgumentList	trav		1248426	1					
ANR	1248953	Argument	trav		1248426	0					
ANR	1248954	Identifier	trav		1248426	0					
ANR	1248955	Argument	"""pattern"""		1248426	1					
ANR	1248956	PrimaryExpression	"""pattern"""		1248426	0					
ANR	1248957	CompoundStatement		56:45:2298:2298	1248426	1					
ANR	1248958	ExpressionStatement	"schema_restriction_var_char ( trav , & cur_type -> restrictions -> pattern )"	693:3:24557:24624	1248426	0	True				
ANR	1248959	CallExpression	"schema_restriction_var_char ( trav , & cur_type -> restrictions -> pattern )"		1248426	0					
ANR	1248960	Callee	schema_restriction_var_char		1248426	0					
ANR	1248961	Identifier	schema_restriction_var_char		1248426	0					
ANR	1248962	ArgumentList	trav		1248426	1					
ANR	1248963	Argument	trav		1248426	0					
ANR	1248964	Identifier	trav		1248426	0					
ANR	1248965	Argument	& cur_type -> restrictions -> pattern		1248426	1					
ANR	1248966	UnaryOperationExpression	& cur_type -> restrictions -> pattern		1248426	0					
ANR	1248967	UnaryOperator	&		1248426	0					
ANR	1248968	PtrMemberAccess	cur_type -> restrictions -> pattern		1248426	1					
ANR	1248969	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1248970	Identifier	cur_type		1248426	0					
ANR	1248971	Identifier	restrictions		1248426	1					
ANR	1248972	Identifier	pattern		1248426	1					
ANR	1248973	ElseStatement	else		1248426	0					
ANR	1248974	IfStatement	"if ( node_is_equal ( trav , ""enumeration"" ) )"		1248426	0					
ANR	1248975	Condition	"node_is_equal ( trav , ""enumeration"" )"	694:13:24639:24672	1248426	0	True				
ANR	1248976	CallExpression	"node_is_equal ( trav , ""enumeration"" )"		1248426	0					
ANR	1248977	Callee	node_is_equal		1248426	0					
ANR	1248978	Identifier	node_is_equal		1248426	0					
ANR	1248979	ArgumentList	trav		1248426	1					
ANR	1248980	Argument	trav		1248426	0					
ANR	1248981	Identifier	trav		1248426	0					
ANR	1248982	Argument	"""enumeration"""		1248426	1					
ANR	1248983	PrimaryExpression	"""enumeration"""		1248426	0					
ANR	1248984	CompoundStatement		59:3:2426:2462	1248426	1					
ANR	1248985	IdentifierDeclStatement	sdlRestrictionCharPtr enumval = NULL ;	695:3:24680:24716	1248426	0	True				
ANR	1248986	IdentifierDecl	enumval = NULL		1248426	0					
ANR	1248987	IdentifierDeclType	sdlRestrictionCharPtr		1248426	0					
ANR	1248988	Identifier	enumval		1248426	1					
ANR	1248989	AssignmentExpression	enumval = NULL		1248426	2		=			
ANR	1248990	Identifier	NULL		1248426	0					
ANR	1248991	Identifier	NULL		1248426	1					
ANR	1248992	ExpressionStatement	"schema_restriction_var_char ( trav , & enumval )"	697:3:24722:24765	1248426	1	True				
ANR	1248993	CallExpression	"schema_restriction_var_char ( trav , & enumval )"		1248426	0					
ANR	1248994	Callee	schema_restriction_var_char		1248426	0					
ANR	1248995	Identifier	schema_restriction_var_char		1248426	0					
ANR	1248996	ArgumentList	trav		1248426	1					
ANR	1248997	Argument	trav		1248426	0					
ANR	1248998	Identifier	trav		1248426	0					
ANR	1248999	Argument	& enumval		1248426	1					
ANR	1249000	UnaryOperationExpression	& enumval		1248426	0					
ANR	1249001	UnaryOperator	&		1248426	0					
ANR	1249002	Identifier	enumval		1248426	1					
ANR	1249003	IfStatement	if ( cur_type -> restrictions -> enumeration == NULL )		1248426	2					
ANR	1249004	Condition	cur_type -> restrictions -> enumeration == NULL	698:7:24774:24816	1248426	0	True				
ANR	1249005	EqualityExpression	cur_type -> restrictions -> enumeration == NULL		1248426	0		==			
ANR	1249006	PtrMemberAccess	cur_type -> restrictions -> enumeration		1248426	0					
ANR	1249007	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1249008	Identifier	cur_type		1248426	0					
ANR	1249009	Identifier	restrictions		1248426	1					
ANR	1249010	Identifier	enumeration		1248426	1					
ANR	1249011	Identifier	NULL		1248426	1					
ANR	1249012	CompoundStatement		62:52:2565:2565	1248426	1					
ANR	1249013	ExpressionStatement	cur_type -> restrictions -> enumeration = emalloc ( sizeof ( HashTable ) )	699:4:24825:24889	1248426	0	True				
ANR	1249014	AssignmentExpression	cur_type -> restrictions -> enumeration = emalloc ( sizeof ( HashTable ) )		1248426	0		=			
ANR	1249015	PtrMemberAccess	cur_type -> restrictions -> enumeration		1248426	0					
ANR	1249016	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1249017	Identifier	cur_type		1248426	0					
ANR	1249018	Identifier	restrictions		1248426	1					
ANR	1249019	Identifier	enumeration		1248426	1					
ANR	1249020	CallExpression	emalloc ( sizeof ( HashTable ) )		1248426	1					
ANR	1249021	Callee	emalloc		1248426	0					
ANR	1249022	Identifier	emalloc		1248426	0					
ANR	1249023	ArgumentList	sizeof ( HashTable )		1248426	1					
ANR	1249024	Argument	sizeof ( HashTable )		1248426	0					
ANR	1249025	SizeofExpression	sizeof ( HashTable )		1248426	0					
ANR	1249026	Sizeof	sizeof		1248426	0					
ANR	1249027	SizeofOperand	HashTable		1248426	1					
ANR	1249028	ExpressionStatement	"zend_hash_init ( cur_type -> restrictions -> enumeration , 0 , NULL , delete_restriction_var_char , 0 )"	700:4:24895:24987	1248426	1	True				
ANR	1249029	CallExpression	"zend_hash_init ( cur_type -> restrictions -> enumeration , 0 , NULL , delete_restriction_var_char , 0 )"		1248426	0					
ANR	1249030	Callee	zend_hash_init		1248426	0					
ANR	1249031	Identifier	zend_hash_init		1248426	0					
ANR	1249032	ArgumentList	cur_type -> restrictions -> enumeration		1248426	1					
ANR	1249033	Argument	cur_type -> restrictions -> enumeration		1248426	0					
ANR	1249034	PtrMemberAccess	cur_type -> restrictions -> enumeration		1248426	0					
ANR	1249035	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1249036	Identifier	cur_type		1248426	0					
ANR	1249037	Identifier	restrictions		1248426	1					
ANR	1249038	Identifier	enumeration		1248426	1					
ANR	1249039	Argument	0		1248426	1					
ANR	1249040	PrimaryExpression	0		1248426	0					
ANR	1249041	Argument	NULL		1248426	2					
ANR	1249042	Identifier	NULL		1248426	0					
ANR	1249043	Argument	delete_restriction_var_char		1248426	3					
ANR	1249044	Identifier	delete_restriction_var_char		1248426	0					
ANR	1249045	Argument	0		1248426	4					
ANR	1249046	PrimaryExpression	0		1248426	0					
ANR	1249047	IfStatement	"if ( zend_hash_add ( cur_type -> restrictions -> enumeration , enumval -> value , strlen ( enumval -> value ) + 1 , & enumval , sizeof ( sdlRestrictionCharPtr ) , NULL ) == FAILURE )"		1248426	3					
ANR	1249048	Condition	"zend_hash_add ( cur_type -> restrictions -> enumeration , enumval -> value , strlen ( enumval -> value ) + 1 , & enumval , sizeof ( sdlRestrictionCharPtr ) , NULL ) == FAILURE"	702:7:25001:25150	1248426	0	True				
ANR	1249049	EqualityExpression	"zend_hash_add ( cur_type -> restrictions -> enumeration , enumval -> value , strlen ( enumval -> value ) + 1 , & enumval , sizeof ( sdlRestrictionCharPtr ) , NULL ) == FAILURE"		1248426	0		==			
ANR	1249050	CallExpression	"zend_hash_add ( cur_type -> restrictions -> enumeration , enumval -> value , strlen ( enumval -> value ) + 1 , & enumval , sizeof ( sdlRestrictionCharPtr ) , NULL )"		1248426	0					
ANR	1249051	Callee	zend_hash_add		1248426	0					
ANR	1249052	Identifier	zend_hash_add		1248426	0					
ANR	1249053	ArgumentList	cur_type -> restrictions -> enumeration		1248426	1					
ANR	1249054	Argument	cur_type -> restrictions -> enumeration		1248426	0					
ANR	1249055	PtrMemberAccess	cur_type -> restrictions -> enumeration		1248426	0					
ANR	1249056	PtrMemberAccess	cur_type -> restrictions		1248426	0					
ANR	1249057	Identifier	cur_type		1248426	0					
ANR	1249058	Identifier	restrictions		1248426	1					
ANR	1249059	Identifier	enumeration		1248426	1					
ANR	1249060	Argument	enumval -> value		1248426	1					
ANR	1249061	PtrMemberAccess	enumval -> value		1248426	0					
ANR	1249062	Identifier	enumval		1248426	0					
ANR	1249063	Identifier	value		1248426	1					
ANR	1249064	Argument	strlen ( enumval -> value ) + 1		1248426	2					
ANR	1249065	AdditiveExpression	strlen ( enumval -> value ) + 1		1248426	0		+			
ANR	1249066	CallExpression	strlen ( enumval -> value )		1248426	0					
ANR	1249067	Callee	strlen		1248426	0					
ANR	1249068	Identifier	strlen		1248426	0					
ANR	1249069	ArgumentList	enumval -> value		1248426	1					
ANR	1249070	Argument	enumval -> value		1248426	0					
ANR	1249071	PtrMemberAccess	enumval -> value		1248426	0					
ANR	1249072	Identifier	enumval		1248426	0					
ANR	1249073	Identifier	value		1248426	1					
ANR	1249074	PrimaryExpression	1		1248426	1					
ANR	1249075	Argument	& enumval		1248426	3					
ANR	1249076	UnaryOperationExpression	& enumval		1248426	0					
ANR	1249077	UnaryOperator	&		1248426	0					
ANR	1249078	Identifier	enumval		1248426	1					
ANR	1249079	Argument	sizeof ( sdlRestrictionCharPtr )		1248426	4					
ANR	1249080	SizeofExpression	sizeof ( sdlRestrictionCharPtr )		1248426	0					
ANR	1249081	Sizeof	sizeof		1248426	0					
ANR	1249082	SizeofOperand	sdlRestrictionCharPtr		1248426	1					
ANR	1249083	Argument	NULL		1248426	5					
ANR	1249084	Identifier	NULL		1248426	0					
ANR	1249085	Identifier	FAILURE		1248426	1					
ANR	1249086	CompoundStatement		66:159:2899:2899	1248426	1					
ANR	1249087	ExpressionStatement	delete_restriction_var_char ( & enumval )	703:4:25159:25196	1248426	0	True				
ANR	1249088	CallExpression	delete_restriction_var_char ( & enumval )		1248426	0					
ANR	1249089	Callee	delete_restriction_var_char		1248426	0					
ANR	1249090	Identifier	delete_restriction_var_char		1248426	0					
ANR	1249091	ArgumentList	& enumval		1248426	1					
ANR	1249092	Argument	& enumval		1248426	0					
ANR	1249093	UnaryOperationExpression	& enumval		1248426	0					
ANR	1249094	UnaryOperator	&		1248426	0					
ANR	1249095	Identifier	enumval		1248426	1					
ANR	1249096	ElseStatement	else		1248426	0					
ANR	1249097	CompoundStatement		69:9:2958:2958	1248426	0					
ANR	1249098	BreakStatement	break ;	706:3:25217:25222	1248426	0	True				
ANR	1249099	ExpressionStatement	trav = trav -> next	708:2:25230:25247	1248426	1	True				
ANR	1249100	AssignmentExpression	trav = trav -> next		1248426	0		=			
ANR	1249101	Identifier	trav		1248426	0					
ANR	1249102	PtrMemberAccess	trav -> next		1248426	1					
ANR	1249103	Identifier	trav		1248426	0					
ANR	1249104	Identifier	next		1248426	1					
ANR	1249105	IfStatement	if ( ! simpleType )		1248426	9					
ANR	1249106	Condition	! simpleType	710:5:25257:25267	1248426	0	True				
ANR	1249107	UnaryOperationExpression	! simpleType		1248426	0					
ANR	1249108	UnaryOperator	!		1248426	0					
ANR	1249109	Identifier	simpleType		1248426	1					
ANR	1249110	CompoundStatement		74:18:3016:3016	1248426	1					
ANR	1249111	WhileStatement	while ( trav != NULL )		1248426	0					
ANR	1249112	Condition	trav != NULL	711:9:25281:25292	1248426	0	True				
ANR	1249113	EqualityExpression	trav != NULL		1248426	0		!=			
ANR	1249114	Identifier	trav		1248426	0					
ANR	1249115	Identifier	NULL		1248426	1					
ANR	1249116	CompoundStatement		75:23:3041:3041	1248426	1					
ANR	1249117	IfStatement	"if ( node_is_equal ( trav , ""attribute"" ) )"		1248426	0					
ANR	1249118	Condition	"node_is_equal ( trav , ""attribute"" )"	712:7:25304:25334	1248426	0	True				
ANR	1249119	CallExpression	"node_is_equal ( trav , ""attribute"" )"		1248426	0					
ANR	1249120	Callee	node_is_equal		1248426	0					
ANR	1249121	Identifier	node_is_equal		1248426	0					
ANR	1249122	ArgumentList	trav		1248426	1					
ANR	1249123	Argument	trav		1248426	0					
ANR	1249124	Identifier	trav		1248426	0					
ANR	1249125	Argument	"""attribute"""		1248426	1					
ANR	1249126	PrimaryExpression	"""attribute"""		1248426	0					
ANR	1249127	CompoundStatement		76:40:3083:3083	1248426	1					
ANR	1249128	ExpressionStatement	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"	713:4:25343:25391	1248426	0	True				
ANR	1249129	CallExpression	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"		1248426	0					
ANR	1249130	Callee	schema_attribute		1248426	0					
ANR	1249131	Identifier	schema_attribute		1248426	0					
ANR	1249132	ArgumentList	sdl		1248426	1					
ANR	1249133	Argument	sdl		1248426	0					
ANR	1249134	Identifier	sdl		1248426	0					
ANR	1249135	Argument	tns		1248426	1					
ANR	1249136	Identifier	tns		1248426	0					
ANR	1249137	Argument	trav		1248426	2					
ANR	1249138	Identifier	trav		1248426	0					
ANR	1249139	Argument	cur_type		1248426	3					
ANR	1249140	Identifier	cur_type		1248426	0					
ANR	1249141	Argument	NULL		1248426	4					
ANR	1249142	Identifier	NULL		1248426	0					
ANR	1249143	ElseStatement	else		1248426	0					
ANR	1249144	IfStatement	"if ( node_is_equal ( trav , ""attributeGroup"" ) )"		1248426	0					
ANR	1249145	Condition	"node_is_equal ( trav , ""attributeGroup"" )"	714:14:25407:25442	1248426	0	True				
ANR	1249146	CallExpression	"node_is_equal ( trav , ""attributeGroup"" )"		1248426	0					
ANR	1249147	Callee	node_is_equal		1248426	0					
ANR	1249148	Identifier	node_is_equal		1248426	0					
ANR	1249149	ArgumentList	trav		1248426	1					
ANR	1249150	Argument	trav		1248426	0					
ANR	1249151	Identifier	trav		1248426	0					
ANR	1249152	Argument	"""attributeGroup"""		1248426	1					
ANR	1249153	PrimaryExpression	"""attributeGroup"""		1248426	0					
ANR	1249154	CompoundStatement		78:52:3191:3191	1248426	1					
ANR	1249155	ExpressionStatement	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"	715:4:25451:25504	1248426	0	True				
ANR	1249156	CallExpression	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"		1248426	0					
ANR	1249157	Callee	schema_attributeGroup		1248426	0					
ANR	1249158	Identifier	schema_attributeGroup		1248426	0					
ANR	1249159	ArgumentList	sdl		1248426	1					
ANR	1249160	Argument	sdl		1248426	0					
ANR	1249161	Identifier	sdl		1248426	0					
ANR	1249162	Argument	tns		1248426	1					
ANR	1249163	Identifier	tns		1248426	0					
ANR	1249164	Argument	trav		1248426	2					
ANR	1249165	Identifier	trav		1248426	0					
ANR	1249166	Argument	cur_type		1248426	3					
ANR	1249167	Identifier	cur_type		1248426	0					
ANR	1249168	Argument	NULL		1248426	4					
ANR	1249169	Identifier	NULL		1248426	0					
ANR	1249170	ElseStatement	else		1248426	0					
ANR	1249171	IfStatement	"if ( node_is_equal ( trav , ""anyAttribute"" ) )"		1248426	0					
ANR	1249172	Condition	"node_is_equal ( trav , ""anyAttribute"" )"	716:14:25520:25553	1248426	0	True				
ANR	1249173	CallExpression	"node_is_equal ( trav , ""anyAttribute"" )"		1248426	0					
ANR	1249174	Callee	node_is_equal		1248426	0					
ANR	1249175	Identifier	node_is_equal		1248426	0					
ANR	1249176	ArgumentList	trav		1248426	1					
ANR	1249177	Argument	trav		1248426	0					
ANR	1249178	Identifier	trav		1248426	0					
ANR	1249179	Argument	"""anyAttribute"""		1248426	1					
ANR	1249180	PrimaryExpression	"""anyAttribute"""		1248426	0					
ANR	1249181	CompoundStatement		80:50:3302:3302	1248426	1					
ANR	1249182	ExpressionStatement	trav = trav -> next	718:4:25601:25618	1248426	0	True				
ANR	1249183	AssignmentExpression	trav = trav -> next		1248426	0		=			
ANR	1249184	Identifier	trav		1248426	0					
ANR	1249185	PtrMemberAccess	trav -> next		1248426	1					
ANR	1249186	Identifier	trav		1248426	0					
ANR	1249187	Identifier	next		1248426	1					
ANR	1249188	BreakStatement	break ;	719:4:25624:25629	1248426	1	True				
ANR	1249189	ElseStatement	else		1248426	0					
ANR	1249190	CompoundStatement		84:10:3387:3387	1248426	0					
ANR	1249191	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"	721:4:25647:25729	1248426	0	True				
ANR	1249192	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"		1248426	0					
ANR	1249193	Callee	soap_error1		1248426	0					
ANR	1249194	Identifier	soap_error1		1248426	0					
ANR	1249195	ArgumentList	E_ERROR		1248426	1					
ANR	1249196	Argument	E_ERROR		1248426	0					
ANR	1249197	Identifier	E_ERROR		1248426	0					
ANR	1249198	Argument	"""Parsing Schema: unexpected <%s> in restriction"""		1248426	1					
ANR	1249199	PrimaryExpression	"""Parsing Schema: unexpected <%s> in restriction"""		1248426	0					
ANR	1249200	Argument	trav -> name		1248426	2					
ANR	1249201	PtrMemberAccess	trav -> name		1248426	0					
ANR	1249202	Identifier	trav		1248426	0					
ANR	1249203	Identifier	name		1248426	1					
ANR	1249204	ExpressionStatement	trav = trav -> next	723:3:25739:25756	1248426	1	True				
ANR	1249205	AssignmentExpression	trav = trav -> next		1248426	0		=			
ANR	1249206	Identifier	trav		1248426	0					
ANR	1249207	PtrMemberAccess	trav -> next		1248426	1					
ANR	1249208	Identifier	trav		1248426	0					
ANR	1249209	Identifier	next		1248426	1					
ANR	1249210	IfStatement	if ( trav != NULL )		1248426	10					
ANR	1249211	Condition	trav != NULL	726:5:25770:25781	1248426	0	True				
ANR	1249212	EqualityExpression	trav != NULL		1248426	0		!=			
ANR	1249213	Identifier	trav		1248426	0					
ANR	1249214	Identifier	NULL		1248426	1					
ANR	1249215	CompoundStatement		90:19:3530:3530	1248426	1					
ANR	1249216	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"	727:2:25788:25870	1248426	0	True				
ANR	1249217	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"		1248426	0					
ANR	1249218	Callee	soap_error1		1248426	0					
ANR	1249219	Identifier	soap_error1		1248426	0					
ANR	1249220	ArgumentList	E_ERROR		1248426	1					
ANR	1249221	Argument	E_ERROR		1248426	0					
ANR	1249222	Identifier	E_ERROR		1248426	0					
ANR	1249223	Argument	"""Parsing Schema: unexpected <%s> in restriction"""		1248426	1					
ANR	1249224	PrimaryExpression	"""Parsing Schema: unexpected <%s> in restriction"""		1248426	0					
ANR	1249225	Argument	trav -> name		1248426	2					
ANR	1249226	PtrMemberAccess	trav -> name		1248426	0					
ANR	1249227	Identifier	trav		1248426	0					
ANR	1249228	Identifier	name		1248426	1					
ANR	1249229	ReturnStatement	return TRUE ;	730:1:25877:25888	1248426	11	True				
ANR	1249230	Identifier	TRUE		1248426	0					
ANR	1249231	ReturnType	static int		1248426	1					
ANR	1249232	Identifier	schema_restriction_simpleContent		1248426	2					
ANR	1249233	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr restType , sdlTypePtr cur_type , int simpleType"		1248426	3					
ANR	1249234	Parameter	sdlPtr sdl	636:44:22167:22176	1248426	0	True				
ANR	1249235	ParameterType	sdlPtr		1248426	0					
ANR	1249236	Identifier	sdl		1248426	1					
ANR	1249237	Parameter	xmlAttrPtr tns	636:56:22179:22192	1248426	1	True				
ANR	1249238	ParameterType	xmlAttrPtr		1248426	0					
ANR	1249239	Identifier	tns		1248426	1					
ANR	1249240	Parameter	xmlNodePtr restType	636:72:22195:22213	1248426	2	True				
ANR	1249241	ParameterType	xmlNodePtr		1248426	0					
ANR	1249242	Identifier	restType		1248426	1					
ANR	1249243	Parameter	sdlTypePtr cur_type	636:93:22216:22234	1248426	3	True				
ANR	1249244	ParameterType	sdlTypePtr		1248426	0					
ANR	1249245	Identifier	cur_type		1248426	1					
ANR	1249246	Parameter	int simpleType	636:114:22237:22250	1248426	4	True				
ANR	1249247	ParameterType	int		1248426	0					
ANR	1249248	Identifier	simpleType		1248426	1					
ANR	1249249	CFGEntryNode	ENTRY		1248426		True				
ANR	1249250	CFGExitNode	EXIT		1248426		True				
ANR	1249251	Symbol	trav -> next		1248426						
ANR	1249252	Symbol	get_attribute		1248426						
ANR	1249253	Symbol	* enumval		1248426						
ANR	1249254	Symbol	trav		1248426						
ANR	1249255	Symbol	type		1248426						
ANR	1249256	Symbol	strlen		1248426						
ANR	1249257	Symbol	restType -> properties		1248426						
ANR	1249258	Symbol	* restType		1248426						
ANR	1249259	Symbol	& cur_type -> restrictions -> whiteSpace		1248426						
ANR	1249260	Symbol	* base		1248426						
ANR	1249261	Symbol	cur_type		1248426						
ANR	1249262	Symbol	simpleType		1248426						
ANR	1249263	Symbol	& cur_type -> restrictions -> maxLength		1248426						
ANR	1249264	Symbol	NULL		1248426						
ANR	1249265	Symbol	& type		1248426						
ANR	1249266	Symbol	TRUE		1248426						
ANR	1249267	Symbol	enumval		1248426						
ANR	1249268	Symbol	delete_restriction_var_char		1248426						
ANR	1249269	Symbol	cur_type -> encode		1248426						
ANR	1249270	Symbol	& cur_type -> restrictions -> totalDigits		1248426						
ANR	1249271	Symbol	* nsptr		1248426						
ANR	1249272	Symbol	tns		1248426						
ANR	1249273	Symbol	sdl		1248426						
ANR	1249274	Symbol	& cur_type -> restrictions -> fractionDigits		1248426						
ANR	1249275	Symbol	& cur_type -> restrictions -> minExclusive		1248426						
ANR	1249276	Symbol	trav -> name		1248426						
ANR	1249277	Symbol	& cur_type -> restrictions -> minLength		1248426						
ANR	1249278	Symbol	& cur_type -> restrictions -> maxInclusive		1248426						
ANR	1249279	Symbol	BAD_CAST		1248426						
ANR	1249280	Symbol	cur_type -> restrictions -> enumeration		1248426						
ANR	1249281	Symbol	ns		1248426						
ANR	1249282	Symbol	base -> children		1248426						
ANR	1249283	Symbol	& cur_type -> restrictions -> maxExclusive		1248426						
ANR	1249284	Symbol	* cur_type -> restrictions		1248426						
ANR	1249285	Symbol	node_is_equal		1248426						
ANR	1249286	Symbol	restType		1248426						
ANR	1249287	Symbol	nsptr		1248426						
ANR	1249288	Symbol	* trav		1248426						
ANR	1249289	Symbol	enumval -> value		1248426						
ANR	1249290	Symbol	cur_type -> restrictions		1248426						
ANR	1249291	Symbol	emalloc		1248426						
ANR	1249292	Symbol	* base -> children		1248426						
ANR	1249293	Symbol	& cur_type -> restrictions -> minInclusive		1248426						
ANR	1249294	Symbol	* * cur_type		1248426						
ANR	1249295	Symbol	restType -> children		1248426						
ANR	1249296	Symbol	restType -> doc		1248426						
ANR	1249297	Symbol	nsptr -> href		1248426						
ANR	1249298	Symbol	& cur_type -> restrictions -> length		1248426						
ANR	1249299	Symbol	* * base		1248426						
ANR	1249300	Symbol	xmlSearchNs		1248426						
ANR	1249301	Symbol	& cur_type -> restrictions -> pattern		1248426						
ANR	1249302	Symbol	FAILURE		1248426						
ANR	1249303	Symbol	& ns		1248426						
ANR	1249304	Symbol	* cur_type		1248426						
ANR	1249305	Symbol	base -> children -> content		1248426						
ANR	1249306	Symbol	E_ERROR		1248426						
ANR	1249307	Symbol	zend_hash_add		1248426						
ANR	1249308	Symbol	& enumval		1248426						
ANR	1249309	Symbol	get_create_encoder		1248426						
ANR	1249310	Symbol	base		1248426						
ANR	1249311	Function	schema_restriction_complexContent	741:0:26113:27983							
ANR	1249312	FunctionDef	"schema_restriction_complexContent (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr restType , sdlTypePtr cur_type)"		1249311	0					
ANR	1249313	CompoundStatement		742:0:26228:27983	1249311	0					
ANR	1249314	IdentifierDeclStatement	xmlAttrPtr base ;	743:1:26231:26246	1249311	0	True				
ANR	1249315	IdentifierDecl	base		1249311	0					
ANR	1249316	IdentifierDeclType	xmlAttrPtr		1249311	0					
ANR	1249317	Identifier	base		1249311	1					
ANR	1249318	IdentifierDeclStatement	xmlNodePtr trav ;	744:1:26249:26264	1249311	1	True				
ANR	1249319	IdentifierDecl	trav		1249311	0					
ANR	1249320	IdentifierDeclType	xmlNodePtr		1249311	0					
ANR	1249321	Identifier	trav		1249311	1					
ANR	1249322	ExpressionStatement	"base = get_attribute ( restType -> properties , ""base"" )"	746:1:26268:26318	1249311	2	True				
ANR	1249323	AssignmentExpression	"base = get_attribute ( restType -> properties , ""base"" )"		1249311	0		=			
ANR	1249324	Identifier	base		1249311	0					
ANR	1249325	CallExpression	"get_attribute ( restType -> properties , ""base"" )"		1249311	1					
ANR	1249326	Callee	get_attribute		1249311	0					
ANR	1249327	Identifier	get_attribute		1249311	0					
ANR	1249328	ArgumentList	restType -> properties		1249311	1					
ANR	1249329	Argument	restType -> properties		1249311	0					
ANR	1249330	PtrMemberAccess	restType -> properties		1249311	0					
ANR	1249331	Identifier	restType		1249311	0					
ANR	1249332	Identifier	properties		1249311	1					
ANR	1249333	Argument	"""base"""		1249311	1					
ANR	1249334	PrimaryExpression	"""base"""		1249311	0					
ANR	1249335	IfStatement	if ( base != NULL )		1249311	3					
ANR	1249336	Condition	base != NULL	747:5:26325:26336	1249311	0	True				
ANR	1249337	EqualityExpression	base != NULL		1249311	0		!=			
ANR	1249338	Identifier	base		1249311	0					
ANR	1249339	Identifier	NULL		1249311	1					
ANR	1249340	CompoundStatement		8:2:133:147	1249311	1					
ANR	1249341	IdentifierDeclStatement	"char * type , * ns ;"	748:2:26343:26358	1249311	0	True				
ANR	1249342	IdentifierDecl	* type		1249311	0					
ANR	1249343	IdentifierDeclType	char *		1249311	0					
ANR	1249344	Identifier	type		1249311	1					
ANR	1249345	IdentifierDecl	* ns		1249311	1					
ANR	1249346	IdentifierDeclType	char *		1249311	0					
ANR	1249347	Identifier	ns		1249311	1					
ANR	1249348	IdentifierDeclStatement	xmlNsPtr nsptr ;	749:2:26362:26376	1249311	1	True				
ANR	1249349	IdentifierDecl	nsptr		1249311	0					
ANR	1249350	IdentifierDeclType	xmlNsPtr		1249311	0					
ANR	1249351	Identifier	nsptr		1249311	1					
ANR	1249352	ExpressionStatement	"parse_namespace ( base -> children -> content , & type , & ns )"	751:2:26381:26433	1249311	2	True				
ANR	1249353	CallExpression	"parse_namespace ( base -> children -> content , & type , & ns )"		1249311	0					
ANR	1249354	Callee	parse_namespace		1249311	0					
ANR	1249355	Identifier	parse_namespace		1249311	0					
ANR	1249356	ArgumentList	base -> children -> content		1249311	1					
ANR	1249357	Argument	base -> children -> content		1249311	0					
ANR	1249358	PtrMemberAccess	base -> children -> content		1249311	0					
ANR	1249359	PtrMemberAccess	base -> children		1249311	0					
ANR	1249360	Identifier	base		1249311	0					
ANR	1249361	Identifier	children		1249311	1					
ANR	1249362	Identifier	content		1249311	1					
ANR	1249363	Argument	& type		1249311	1					
ANR	1249364	UnaryOperationExpression	& type		1249311	0					
ANR	1249365	UnaryOperator	&		1249311	0					
ANR	1249366	Identifier	type		1249311	1					
ANR	1249367	Argument	& ns		1249311	2					
ANR	1249368	UnaryOperationExpression	& ns		1249311	0					
ANR	1249369	UnaryOperator	&		1249311	0					
ANR	1249370	Identifier	ns		1249311	1					
ANR	1249371	ExpressionStatement	"nsptr = xmlSearchNs ( restType -> doc , restType , BAD_CAST ( ns ) )"	752:2:26437:26495	1249311	3	True				
ANR	1249372	AssignmentExpression	"nsptr = xmlSearchNs ( restType -> doc , restType , BAD_CAST ( ns ) )"		1249311	0		=			
ANR	1249373	Identifier	nsptr		1249311	0					
ANR	1249374	CallExpression	"xmlSearchNs ( restType -> doc , restType , BAD_CAST ( ns ) )"		1249311	1					
ANR	1249375	Callee	xmlSearchNs		1249311	0					
ANR	1249376	Identifier	xmlSearchNs		1249311	0					
ANR	1249377	ArgumentList	restType -> doc		1249311	1					
ANR	1249378	Argument	restType -> doc		1249311	0					
ANR	1249379	PtrMemberAccess	restType -> doc		1249311	0					
ANR	1249380	Identifier	restType		1249311	0					
ANR	1249381	Identifier	doc		1249311	1					
ANR	1249382	Argument	restType		1249311	1					
ANR	1249383	Identifier	restType		1249311	0					
ANR	1249384	Argument	BAD_CAST ( ns )		1249311	2					
ANR	1249385	CallExpression	BAD_CAST ( ns )		1249311	0					
ANR	1249386	Callee	BAD_CAST		1249311	0					
ANR	1249387	Identifier	BAD_CAST		1249311	0					
ANR	1249388	ArgumentList	ns		1249311	1					
ANR	1249389	Argument	ns		1249311	0					
ANR	1249390	Identifier	ns		1249311	0					
ANR	1249391	IfStatement	if ( nsptr != NULL )		1249311	4					
ANR	1249392	Condition	nsptr != NULL	753:6:26503:26515	1249311	0	True				
ANR	1249393	EqualityExpression	nsptr != NULL		1249311	0		!=			
ANR	1249394	Identifier	nsptr		1249311	0					
ANR	1249395	Identifier	NULL		1249311	1					
ANR	1249396	CompoundStatement		12:21:289:289	1249311	1					
ANR	1249397	ExpressionStatement	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"	754:3:26523:26604	1249311	0	True				
ANR	1249398	AssignmentExpression	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1249311	0		=			
ANR	1249399	PtrMemberAccess	cur_type -> encode		1249311	0					
ANR	1249400	Identifier	cur_type		1249311	0					
ANR	1249401	Identifier	encode		1249311	1					
ANR	1249402	CallExpression	"get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1249311	1					
ANR	1249403	Callee	get_create_encoder		1249311	0					
ANR	1249404	Identifier	get_create_encoder		1249311	0					
ANR	1249405	ArgumentList	sdl		1249311	1					
ANR	1249406	Argument	sdl		1249311	0					
ANR	1249407	Identifier	sdl		1249311	0					
ANR	1249408	Argument	cur_type		1249311	1					
ANR	1249409	Identifier	cur_type		1249311	0					
ANR	1249410	Argument	nsptr -> href		1249311	2					
ANR	1249411	PtrMemberAccess	nsptr -> href		1249311	0					
ANR	1249412	Identifier	nsptr		1249311	0					
ANR	1249413	Identifier	href		1249311	1					
ANR	1249414	Argument	BAD_CAST ( type )		1249311	3					
ANR	1249415	CallExpression	BAD_CAST ( type )		1249311	0					
ANR	1249416	Callee	BAD_CAST		1249311	0					
ANR	1249417	Identifier	BAD_CAST		1249311	0					
ANR	1249418	ArgumentList	type		1249311	1					
ANR	1249419	Argument	type		1249311	0					
ANR	1249420	Identifier	type		1249311	0					
ANR	1249421	IfStatement	if ( type )		1249311	5					
ANR	1249422	Condition	type	756:6:26616:26619	1249311	0	True				
ANR	1249423	Identifier	type		1249311	0					
ANR	1249424	CompoundStatement		15:12:393:393	1249311	1					
ANR	1249425	ExpressionStatement	efree ( type )	756:13:26623:26634	1249311	0	True				
ANR	1249426	CallExpression	efree ( type )		1249311	0					
ANR	1249427	Callee	efree		1249311	0					
ANR	1249428	Identifier	efree		1249311	0					
ANR	1249429	ArgumentList	type		1249311	1					
ANR	1249430	Argument	type		1249311	0					
ANR	1249431	Identifier	type		1249311	0					
ANR	1249432	IfStatement	if ( ns )		1249311	6					
ANR	1249433	Condition	ns	757:6:26643:26644	1249311	0	True				
ANR	1249434	Identifier	ns		1249311	0					
ANR	1249435	CompoundStatement		16:10:418:418	1249311	1					
ANR	1249436	ExpressionStatement	efree ( ns )	757:11:26648:26657	1249311	0	True				
ANR	1249437	CallExpression	efree ( ns )		1249311	0					
ANR	1249438	Callee	efree		1249311	0					
ANR	1249439	Identifier	efree		1249311	0					
ANR	1249440	ArgumentList	ns		1249311	1					
ANR	1249441	Argument	ns		1249311	0					
ANR	1249442	Identifier	ns		1249311	0					
ANR	1249443	ElseStatement	else		1249311	0					
ANR	1249444	CompoundStatement		17:8:439:439	1249311	0					
ANR	1249445	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: restriction has no 'base' attribute"" )"	759:2:26672:26747	1249311	0	True				
ANR	1249446	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: restriction has no 'base' attribute"" )"		1249311	0					
ANR	1249447	Callee	soap_error0		1249311	0					
ANR	1249448	Identifier	soap_error0		1249311	0					
ANR	1249449	ArgumentList	E_ERROR		1249311	1					
ANR	1249450	Argument	E_ERROR		1249311	0					
ANR	1249451	Identifier	E_ERROR		1249311	0					
ANR	1249452	Argument	"""Parsing Schema: restriction has no 'base' attribute"""		1249311	1					
ANR	1249453	PrimaryExpression	"""Parsing Schema: restriction has no 'base' attribute"""		1249311	0					
ANR	1249454	ExpressionStatement	trav = restType -> children	762:1:26754:26779	1249311	4	True				
ANR	1249455	AssignmentExpression	trav = restType -> children		1249311	0		=			
ANR	1249456	Identifier	trav		1249311	0					
ANR	1249457	PtrMemberAccess	restType -> children		1249311	1					
ANR	1249458	Identifier	restType		1249311	0					
ANR	1249459	Identifier	children		1249311	1					
ANR	1249460	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1249311	5					
ANR	1249461	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	763:5:26786:26833	1249311	0	True				
ANR	1249462	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1249311	0		&&			
ANR	1249463	EqualityExpression	trav != NULL		1249311	0		!=			
ANR	1249464	Identifier	trav		1249311	0					
ANR	1249465	Identifier	NULL		1249311	1					
ANR	1249466	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1249311	1					
ANR	1249467	Callee	node_is_equal		1249311	0					
ANR	1249468	Identifier	node_is_equal		1249311	0					
ANR	1249469	ArgumentList	trav		1249311	1					
ANR	1249470	Argument	trav		1249311	0					
ANR	1249471	Identifier	trav		1249311	0					
ANR	1249472	Argument	"""annotation"""		1249311	1					
ANR	1249473	PrimaryExpression	"""annotation"""		1249311	0					
ANR	1249474	CompoundStatement		22:55:607:607	1249311	1					
ANR	1249475	ExpressionStatement	trav = trav -> next	765:2:26875:26892	1249311	0	True				
ANR	1249476	AssignmentExpression	trav = trav -> next		1249311	0		=			
ANR	1249477	Identifier	trav		1249311	0					
ANR	1249478	PtrMemberAccess	trav -> next		1249311	1					
ANR	1249479	Identifier	trav		1249311	0					
ANR	1249480	Identifier	next		1249311	1					
ANR	1249481	IfStatement	if ( trav != NULL )		1249311	6					
ANR	1249482	Condition	trav != NULL	767:5:26902:26913	1249311	0	True				
ANR	1249483	EqualityExpression	trav != NULL		1249311	0		!=			
ANR	1249484	Identifier	trav		1249311	0					
ANR	1249485	Identifier	NULL		1249311	1					
ANR	1249486	CompoundStatement		26:19:687:687	1249311	1					
ANR	1249487	IfStatement	"if ( node_is_equal ( trav , ""group"" ) )"		1249311	0					
ANR	1249488	Condition	"node_is_equal ( trav , ""group"" )"	768:6:26924:26950	1249311	0	True				
ANR	1249489	CallExpression	"node_is_equal ( trav , ""group"" )"		1249311	0					
ANR	1249490	Callee	node_is_equal		1249311	0					
ANR	1249491	Identifier	node_is_equal		1249311	0					
ANR	1249492	ArgumentList	trav		1249311	1					
ANR	1249493	Argument	trav		1249311	0					
ANR	1249494	Identifier	trav		1249311	0					
ANR	1249495	Argument	"""group"""		1249311	1					
ANR	1249496	PrimaryExpression	"""group"""		1249311	0					
ANR	1249497	CompoundStatement		27:35:724:724	1249311	1					
ANR	1249498	ExpressionStatement	"schema_group ( sdl , tns , trav , cur_type , NULL )"	769:3:26958:27002	1249311	0	True				
ANR	1249499	CallExpression	"schema_group ( sdl , tns , trav , cur_type , NULL )"		1249311	0					
ANR	1249500	Callee	schema_group		1249311	0					
ANR	1249501	Identifier	schema_group		1249311	0					
ANR	1249502	ArgumentList	sdl		1249311	1					
ANR	1249503	Argument	sdl		1249311	0					
ANR	1249504	Identifier	sdl		1249311	0					
ANR	1249505	Argument	tns		1249311	1					
ANR	1249506	Identifier	tns		1249311	0					
ANR	1249507	Argument	trav		1249311	2					
ANR	1249508	Identifier	trav		1249311	0					
ANR	1249509	Argument	cur_type		1249311	3					
ANR	1249510	Identifier	cur_type		1249311	0					
ANR	1249511	Argument	NULL		1249311	4					
ANR	1249512	Identifier	NULL		1249311	0					
ANR	1249513	ExpressionStatement	trav = trav -> next	770:3:27007:27024	1249311	1	True				
ANR	1249514	AssignmentExpression	trav = trav -> next		1249311	0		=			
ANR	1249515	Identifier	trav		1249311	0					
ANR	1249516	PtrMemberAccess	trav -> next		1249311	1					
ANR	1249517	Identifier	trav		1249311	0					
ANR	1249518	Identifier	next		1249311	1					
ANR	1249519	ElseStatement	else		1249311	0					
ANR	1249520	IfStatement	"if ( node_is_equal ( trav , ""all"" ) )"		1249311	0					
ANR	1249521	Condition	"node_is_equal ( trav , ""all"" )"	771:13:27039:27063	1249311	0	True				
ANR	1249522	CallExpression	"node_is_equal ( trav , ""all"" )"		1249311	0					
ANR	1249523	Callee	node_is_equal		1249311	0					
ANR	1249524	Identifier	node_is_equal		1249311	0					
ANR	1249525	ArgumentList	trav		1249311	1					
ANR	1249526	Argument	trav		1249311	0					
ANR	1249527	Identifier	trav		1249311	0					
ANR	1249528	Argument	"""all"""		1249311	1					
ANR	1249529	PrimaryExpression	"""all"""		1249311	0					
ANR	1249530	CompoundStatement		30:40:837:837	1249311	1					
ANR	1249531	ExpressionStatement	"schema_all ( sdl , tns , trav , cur_type , NULL )"	772:3:27071:27113	1249311	0	True				
ANR	1249532	CallExpression	"schema_all ( sdl , tns , trav , cur_type , NULL )"		1249311	0					
ANR	1249533	Callee	schema_all		1249311	0					
ANR	1249534	Identifier	schema_all		1249311	0					
ANR	1249535	ArgumentList	sdl		1249311	1					
ANR	1249536	Argument	sdl		1249311	0					
ANR	1249537	Identifier	sdl		1249311	0					
ANR	1249538	Argument	tns		1249311	1					
ANR	1249539	Identifier	tns		1249311	0					
ANR	1249540	Argument	trav		1249311	2					
ANR	1249541	Identifier	trav		1249311	0					
ANR	1249542	Argument	cur_type		1249311	3					
ANR	1249543	Identifier	cur_type		1249311	0					
ANR	1249544	Argument	NULL		1249311	4					
ANR	1249545	Identifier	NULL		1249311	0					
ANR	1249546	ExpressionStatement	trav = trav -> next	773:3:27118:27135	1249311	1	True				
ANR	1249547	AssignmentExpression	trav = trav -> next		1249311	0		=			
ANR	1249548	Identifier	trav		1249311	0					
ANR	1249549	PtrMemberAccess	trav -> next		1249311	1					
ANR	1249550	Identifier	trav		1249311	0					
ANR	1249551	Identifier	next		1249311	1					
ANR	1249552	ElseStatement	else		1249311	0					
ANR	1249553	IfStatement	"if ( node_is_equal ( trav , ""choice"" ) )"		1249311	0					
ANR	1249554	Condition	"node_is_equal ( trav , ""choice"" )"	774:13:27150:27177	1249311	0	True				
ANR	1249555	CallExpression	"node_is_equal ( trav , ""choice"" )"		1249311	0					
ANR	1249556	Callee	node_is_equal		1249311	0					
ANR	1249557	Identifier	node_is_equal		1249311	0					
ANR	1249558	ArgumentList	trav		1249311	1					
ANR	1249559	Argument	trav		1249311	0					
ANR	1249560	Identifier	trav		1249311	0					
ANR	1249561	Argument	"""choice"""		1249311	1					
ANR	1249562	PrimaryExpression	"""choice"""		1249311	0					
ANR	1249563	CompoundStatement		33:43:951:951	1249311	1					
ANR	1249564	ExpressionStatement	"schema_choice ( sdl , tns , trav , cur_type , NULL )"	775:3:27185:27230	1249311	0	True				
ANR	1249565	CallExpression	"schema_choice ( sdl , tns , trav , cur_type , NULL )"		1249311	0					
ANR	1249566	Callee	schema_choice		1249311	0					
ANR	1249567	Identifier	schema_choice		1249311	0					
ANR	1249568	ArgumentList	sdl		1249311	1					
ANR	1249569	Argument	sdl		1249311	0					
ANR	1249570	Identifier	sdl		1249311	0					
ANR	1249571	Argument	tns		1249311	1					
ANR	1249572	Identifier	tns		1249311	0					
ANR	1249573	Argument	trav		1249311	2					
ANR	1249574	Identifier	trav		1249311	0					
ANR	1249575	Argument	cur_type		1249311	3					
ANR	1249576	Identifier	cur_type		1249311	0					
ANR	1249577	Argument	NULL		1249311	4					
ANR	1249578	Identifier	NULL		1249311	0					
ANR	1249579	ExpressionStatement	trav = trav -> next	776:3:27235:27252	1249311	1	True				
ANR	1249580	AssignmentExpression	trav = trav -> next		1249311	0		=			
ANR	1249581	Identifier	trav		1249311	0					
ANR	1249582	PtrMemberAccess	trav -> next		1249311	1					
ANR	1249583	Identifier	trav		1249311	0					
ANR	1249584	Identifier	next		1249311	1					
ANR	1249585	ElseStatement	else		1249311	0					
ANR	1249586	IfStatement	"if ( node_is_equal ( trav , ""sequence"" ) )"		1249311	0					
ANR	1249587	Condition	"node_is_equal ( trav , ""sequence"" )"	777:13:27267:27296	1249311	0	True				
ANR	1249588	CallExpression	"node_is_equal ( trav , ""sequence"" )"		1249311	0					
ANR	1249589	Callee	node_is_equal		1249311	0					
ANR	1249590	Identifier	node_is_equal		1249311	0					
ANR	1249591	ArgumentList	trav		1249311	1					
ANR	1249592	Argument	trav		1249311	0					
ANR	1249593	Identifier	trav		1249311	0					
ANR	1249594	Argument	"""sequence"""		1249311	1					
ANR	1249595	PrimaryExpression	"""sequence"""		1249311	0					
ANR	1249596	CompoundStatement		36:45:1070:1070	1249311	1					
ANR	1249597	ExpressionStatement	"schema_sequence ( sdl , tns , trav , cur_type , NULL )"	778:3:27304:27351	1249311	0	True				
ANR	1249598	CallExpression	"schema_sequence ( sdl , tns , trav , cur_type , NULL )"		1249311	0					
ANR	1249599	Callee	schema_sequence		1249311	0					
ANR	1249600	Identifier	schema_sequence		1249311	0					
ANR	1249601	ArgumentList	sdl		1249311	1					
ANR	1249602	Argument	sdl		1249311	0					
ANR	1249603	Identifier	sdl		1249311	0					
ANR	1249604	Argument	tns		1249311	1					
ANR	1249605	Identifier	tns		1249311	0					
ANR	1249606	Argument	trav		1249311	2					
ANR	1249607	Identifier	trav		1249311	0					
ANR	1249608	Argument	cur_type		1249311	3					
ANR	1249609	Identifier	cur_type		1249311	0					
ANR	1249610	Argument	NULL		1249311	4					
ANR	1249611	Identifier	NULL		1249311	0					
ANR	1249612	ExpressionStatement	trav = trav -> next	779:3:27356:27373	1249311	1	True				
ANR	1249613	AssignmentExpression	trav = trav -> next		1249311	0		=			
ANR	1249614	Identifier	trav		1249311	0					
ANR	1249615	PtrMemberAccess	trav -> next		1249311	1					
ANR	1249616	Identifier	trav		1249311	0					
ANR	1249617	Identifier	next		1249311	1					
ANR	1249618	WhileStatement	while ( trav != NULL )		1249311	7					
ANR	1249619	Condition	trav != NULL	782:8:27390:27401	1249311	0	True				
ANR	1249620	EqualityExpression	trav != NULL		1249311	0		!=			
ANR	1249621	Identifier	trav		1249311	0					
ANR	1249622	Identifier	NULL		1249311	1					
ANR	1249623	CompoundStatement		41:22:1175:1175	1249311	1					
ANR	1249624	IfStatement	"if ( node_is_equal ( trav , ""attribute"" ) )"		1249311	0					
ANR	1249625	Condition	"node_is_equal ( trav , ""attribute"" )"	783:6:27412:27442	1249311	0	True				
ANR	1249626	CallExpression	"node_is_equal ( trav , ""attribute"" )"		1249311	0					
ANR	1249627	Callee	node_is_equal		1249311	0					
ANR	1249628	Identifier	node_is_equal		1249311	0					
ANR	1249629	ArgumentList	trav		1249311	1					
ANR	1249630	Argument	trav		1249311	0					
ANR	1249631	Identifier	trav		1249311	0					
ANR	1249632	Argument	"""attribute"""		1249311	1					
ANR	1249633	PrimaryExpression	"""attribute"""		1249311	0					
ANR	1249634	CompoundStatement		42:39:1216:1216	1249311	1					
ANR	1249635	ExpressionStatement	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"	784:3:27450:27498	1249311	0	True				
ANR	1249636	CallExpression	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"		1249311	0					
ANR	1249637	Callee	schema_attribute		1249311	0					
ANR	1249638	Identifier	schema_attribute		1249311	0					
ANR	1249639	ArgumentList	sdl		1249311	1					
ANR	1249640	Argument	sdl		1249311	0					
ANR	1249641	Identifier	sdl		1249311	0					
ANR	1249642	Argument	tns		1249311	1					
ANR	1249643	Identifier	tns		1249311	0					
ANR	1249644	Argument	trav		1249311	2					
ANR	1249645	Identifier	trav		1249311	0					
ANR	1249646	Argument	cur_type		1249311	3					
ANR	1249647	Identifier	cur_type		1249311	0					
ANR	1249648	Argument	NULL		1249311	4					
ANR	1249649	Identifier	NULL		1249311	0					
ANR	1249650	ElseStatement	else		1249311	0					
ANR	1249651	IfStatement	"if ( node_is_equal ( trav , ""attributeGroup"" ) )"		1249311	0					
ANR	1249652	Condition	"node_is_equal ( trav , ""attributeGroup"" )"	785:13:27513:27548	1249311	0	True				
ANR	1249653	CallExpression	"node_is_equal ( trav , ""attributeGroup"" )"		1249311	0					
ANR	1249654	Callee	node_is_equal		1249311	0					
ANR	1249655	Identifier	node_is_equal		1249311	0					
ANR	1249656	ArgumentList	trav		1249311	1					
ANR	1249657	Argument	trav		1249311	0					
ANR	1249658	Identifier	trav		1249311	0					
ANR	1249659	Argument	"""attributeGroup"""		1249311	1					
ANR	1249660	PrimaryExpression	"""attributeGroup"""		1249311	0					
ANR	1249661	CompoundStatement		44:51:1322:1322	1249311	1					
ANR	1249662	ExpressionStatement	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"	786:3:27556:27609	1249311	0	True				
ANR	1249663	CallExpression	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"		1249311	0					
ANR	1249664	Callee	schema_attributeGroup		1249311	0					
ANR	1249665	Identifier	schema_attributeGroup		1249311	0					
ANR	1249666	ArgumentList	sdl		1249311	1					
ANR	1249667	Argument	sdl		1249311	0					
ANR	1249668	Identifier	sdl		1249311	0					
ANR	1249669	Argument	tns		1249311	1					
ANR	1249670	Identifier	tns		1249311	0					
ANR	1249671	Argument	trav		1249311	2					
ANR	1249672	Identifier	trav		1249311	0					
ANR	1249673	Argument	cur_type		1249311	3					
ANR	1249674	Identifier	cur_type		1249311	0					
ANR	1249675	Argument	NULL		1249311	4					
ANR	1249676	Identifier	NULL		1249311	0					
ANR	1249677	ElseStatement	else		1249311	0					
ANR	1249678	IfStatement	"if ( node_is_equal ( trav , ""anyAttribute"" ) )"		1249311	0					
ANR	1249679	Condition	"node_is_equal ( trav , ""anyAttribute"" )"	787:13:27624:27657	1249311	0	True				
ANR	1249680	CallExpression	"node_is_equal ( trav , ""anyAttribute"" )"		1249311	0					
ANR	1249681	Callee	node_is_equal		1249311	0					
ANR	1249682	Identifier	node_is_equal		1249311	0					
ANR	1249683	ArgumentList	trav		1249311	1					
ANR	1249684	Argument	trav		1249311	0					
ANR	1249685	Identifier	trav		1249311	0					
ANR	1249686	Argument	"""anyAttribute"""		1249311	1					
ANR	1249687	PrimaryExpression	"""anyAttribute"""		1249311	0					
ANR	1249688	CompoundStatement		46:49:1431:1431	1249311	1					
ANR	1249689	ExpressionStatement	trav = trav -> next	789:3:27703:27720	1249311	0	True				
ANR	1249690	AssignmentExpression	trav = trav -> next		1249311	0		=			
ANR	1249691	Identifier	trav		1249311	0					
ANR	1249692	PtrMemberAccess	trav -> next		1249311	1					
ANR	1249693	Identifier	trav		1249311	0					
ANR	1249694	Identifier	next		1249311	1					
ANR	1249695	BreakStatement	break ;	790:3:27725:27730	1249311	1	True				
ANR	1249696	ElseStatement	else		1249311	0					
ANR	1249697	CompoundStatement		50:9:1512:1512	1249311	0					
ANR	1249698	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"	792:3:27746:27828	1249311	0	True				
ANR	1249699	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"		1249311	0					
ANR	1249700	Callee	soap_error1		1249311	0					
ANR	1249701	Identifier	soap_error1		1249311	0					
ANR	1249702	ArgumentList	E_ERROR		1249311	1					
ANR	1249703	Argument	E_ERROR		1249311	0					
ANR	1249704	Identifier	E_ERROR		1249311	0					
ANR	1249705	Argument	"""Parsing Schema: unexpected <%s> in restriction"""		1249311	1					
ANR	1249706	PrimaryExpression	"""Parsing Schema: unexpected <%s> in restriction"""		1249311	0					
ANR	1249707	Argument	trav -> name		1249311	2					
ANR	1249708	PtrMemberAccess	trav -> name		1249311	0					
ANR	1249709	Identifier	trav		1249311	0					
ANR	1249710	Identifier	name		1249311	1					
ANR	1249711	ExpressionStatement	trav = trav -> next	794:2:27836:27853	1249311	1	True				
ANR	1249712	AssignmentExpression	trav = trav -> next		1249311	0		=			
ANR	1249713	Identifier	trav		1249311	0					
ANR	1249714	PtrMemberAccess	trav -> next		1249311	1					
ANR	1249715	Identifier	trav		1249311	0					
ANR	1249716	Identifier	next		1249311	1					
ANR	1249717	IfStatement	if ( trav != NULL )		1249311	8					
ANR	1249718	Condition	trav != NULL	796:5:27863:27874	1249311	0	True				
ANR	1249719	EqualityExpression	trav != NULL		1249311	0		!=			
ANR	1249720	Identifier	trav		1249311	0					
ANR	1249721	Identifier	NULL		1249311	1					
ANR	1249722	CompoundStatement		55:19:1648:1648	1249311	1					
ANR	1249723	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"	797:2:27881:27963	1249311	0	True				
ANR	1249724	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in restriction"" , trav -> name )"		1249311	0					
ANR	1249725	Callee	soap_error1		1249311	0					
ANR	1249726	Identifier	soap_error1		1249311	0					
ANR	1249727	ArgumentList	E_ERROR		1249311	1					
ANR	1249728	Argument	E_ERROR		1249311	0					
ANR	1249729	Identifier	E_ERROR		1249311	0					
ANR	1249730	Argument	"""Parsing Schema: unexpected <%s> in restriction"""		1249311	1					
ANR	1249731	PrimaryExpression	"""Parsing Schema: unexpected <%s> in restriction"""		1249311	0					
ANR	1249732	Argument	trav -> name		1249311	2					
ANR	1249733	PtrMemberAccess	trav -> name		1249311	0					
ANR	1249734	Identifier	trav		1249311	0					
ANR	1249735	Identifier	name		1249311	1					
ANR	1249736	ReturnStatement	return TRUE ;	800:1:27970:27981	1249311	9	True				
ANR	1249737	Identifier	TRUE		1249311	0					
ANR	1249738	ReturnType	static int		1249311	1					
ANR	1249739	Identifier	schema_restriction_complexContent		1249311	2					
ANR	1249740	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr restType , sdlTypePtr cur_type"		1249311	3					
ANR	1249741	Parameter	sdlPtr sdl	741:45:26158:26167	1249311	0	True				
ANR	1249742	ParameterType	sdlPtr		1249311	0					
ANR	1249743	Identifier	sdl		1249311	1					
ANR	1249744	Parameter	xmlAttrPtr tns	741:57:26170:26183	1249311	1	True				
ANR	1249745	ParameterType	xmlAttrPtr		1249311	0					
ANR	1249746	Identifier	tns		1249311	1					
ANR	1249747	Parameter	xmlNodePtr restType	741:73:26186:26204	1249311	2	True				
ANR	1249748	ParameterType	xmlNodePtr		1249311	0					
ANR	1249749	Identifier	restType		1249311	1					
ANR	1249750	Parameter	sdlTypePtr cur_type	741:94:26207:26225	1249311	3	True				
ANR	1249751	ParameterType	sdlTypePtr		1249311	0					
ANR	1249752	Identifier	cur_type		1249311	1					
ANR	1249753	CFGEntryNode	ENTRY		1249311		True				
ANR	1249754	CFGExitNode	EXIT		1249311		True				
ANR	1249755	Symbol	trav -> next		1249311						
ANR	1249756	Symbol	get_attribute		1249311						
ANR	1249757	Symbol	trav		1249311						
ANR	1249758	Symbol	ns		1249311						
ANR	1249759	Symbol	base -> children		1249311						
ANR	1249760	Symbol	type		1249311						
ANR	1249761	Symbol	node_is_equal		1249311						
ANR	1249762	Symbol	restType		1249311						
ANR	1249763	Symbol	nsptr		1249311						
ANR	1249764	Symbol	* trav		1249311						
ANR	1249765	Symbol	restType -> properties		1249311						
ANR	1249766	Symbol	* base -> children		1249311						
ANR	1249767	Symbol	* restType		1249311						
ANR	1249768	Symbol	* base		1249311						
ANR	1249769	Symbol	restType -> children		1249311						
ANR	1249770	Symbol	cur_type		1249311						
ANR	1249771	Symbol	restType -> doc		1249311						
ANR	1249772	Symbol	NULL		1249311						
ANR	1249773	Symbol	nsptr -> href		1249311						
ANR	1249774	Symbol	& type		1249311						
ANR	1249775	Symbol	* * base		1249311						
ANR	1249776	Symbol	TRUE		1249311						
ANR	1249777	Symbol	xmlSearchNs		1249311						
ANR	1249778	Symbol	& ns		1249311						
ANR	1249779	Symbol	* cur_type		1249311						
ANR	1249780	Symbol	base -> children -> content		1249311						
ANR	1249781	Symbol	E_ERROR		1249311						
ANR	1249782	Symbol	cur_type -> encode		1249311						
ANR	1249783	Symbol	* nsptr		1249311						
ANR	1249784	Symbol	tns		1249311						
ANR	1249785	Symbol	sdl		1249311						
ANR	1249786	Symbol	trav -> name		1249311						
ANR	1249787	Symbol	get_create_encoder		1249311						
ANR	1249788	Symbol	base		1249311						
ANR	1249789	Symbol	BAD_CAST		1249311						
ANR	1249790	Function	schema_restriction_var_int	803:0:27986:28718							
ANR	1249791	FunctionDef	"schema_restriction_var_int (xmlNodePtr val , sdlRestrictionIntPtr * valptr)"		1249790	0					
ANR	1249792	CompoundStatement		804:0:28070:28718	1249790	0					
ANR	1249793	IdentifierDeclStatement	"xmlAttrPtr fixed , value ;"	805:1:28073:28096	1249790	0	True				
ANR	1249794	IdentifierDecl	fixed		1249790	0					
ANR	1249795	IdentifierDeclType	xmlAttrPtr		1249790	0					
ANR	1249796	Identifier	fixed		1249790	1					
ANR	1249797	IdentifierDecl	value		1249790	1					
ANR	1249798	IdentifierDeclType	xmlAttrPtr		1249790	0					
ANR	1249799	Identifier	value		1249790	1					
ANR	1249800	IfStatement	if ( ( * valptr ) == NULL )		1249790	1					
ANR	1249801	Condition	( * valptr ) == NULL	807:5:28104:28120	1249790	0	True				
ANR	1249802	EqualityExpression	( * valptr ) == NULL		1249790	0		==			
ANR	1249803	UnaryOperationExpression	* valptr		1249790	0					
ANR	1249804	UnaryOperator	*		1249790	0					
ANR	1249805	Identifier	valptr		1249790	1					
ANR	1249806	Identifier	NULL		1249790	1					
ANR	1249807	CompoundStatement		4:24:52:52	1249790	1					
ANR	1249808	ExpressionStatement	( * valptr ) = emalloc ( sizeof ( sdlRestrictionInt ) )	808:2:28127:28173	1249790	0	True				
ANR	1249809	AssignmentExpression	( * valptr ) = emalloc ( sizeof ( sdlRestrictionInt ) )		1249790	0		=			
ANR	1249810	UnaryOperationExpression	* valptr		1249790	0					
ANR	1249811	UnaryOperator	*		1249790	0					
ANR	1249812	Identifier	valptr		1249790	1					
ANR	1249813	CallExpression	emalloc ( sizeof ( sdlRestrictionInt ) )		1249790	1					
ANR	1249814	Callee	emalloc		1249790	0					
ANR	1249815	Identifier	emalloc		1249790	0					
ANR	1249816	ArgumentList	sizeof ( sdlRestrictionInt )		1249790	1					
ANR	1249817	Argument	sizeof ( sdlRestrictionInt )		1249790	0					
ANR	1249818	SizeofExpression	sizeof ( sdlRestrictionInt )		1249790	0					
ANR	1249819	Sizeof	sizeof		1249790	0					
ANR	1249820	SizeofOperand	sdlRestrictionInt		1249790	1					
ANR	1249821	ExpressionStatement	"memset ( ( * valptr ) , 0 , sizeof ( sdlRestrictionInt ) )"	810:1:28179:28226	1249790	2	True				
ANR	1249822	CallExpression	"memset ( ( * valptr ) , 0 , sizeof ( sdlRestrictionInt ) )"		1249790	0					
ANR	1249823	Callee	memset		1249790	0					
ANR	1249824	Identifier	memset		1249790	0					
ANR	1249825	ArgumentList	* valptr		1249790	1					
ANR	1249826	Argument	* valptr		1249790	0					
ANR	1249827	UnaryOperationExpression	* valptr		1249790	0					
ANR	1249828	UnaryOperator	*		1249790	0					
ANR	1249829	Identifier	valptr		1249790	1					
ANR	1249830	Argument	0		1249790	1					
ANR	1249831	PrimaryExpression	0		1249790	0					
ANR	1249832	Argument	sizeof ( sdlRestrictionInt )		1249790	2					
ANR	1249833	SizeofExpression	sizeof ( sdlRestrictionInt )		1249790	0					
ANR	1249834	Sizeof	sizeof		1249790	0					
ANR	1249835	SizeofOperand	sdlRestrictionInt		1249790	1					
ANR	1249836	ExpressionStatement	"fixed = get_attribute ( val -> properties , ""fixed"" )"	812:1:28230:28277	1249790	3	True				
ANR	1249837	AssignmentExpression	"fixed = get_attribute ( val -> properties , ""fixed"" )"		1249790	0		=			
ANR	1249838	Identifier	fixed		1249790	0					
ANR	1249839	CallExpression	"get_attribute ( val -> properties , ""fixed"" )"		1249790	1					
ANR	1249840	Callee	get_attribute		1249790	0					
ANR	1249841	Identifier	get_attribute		1249790	0					
ANR	1249842	ArgumentList	val -> properties		1249790	1					
ANR	1249843	Argument	val -> properties		1249790	0					
ANR	1249844	PtrMemberAccess	val -> properties		1249790	0					
ANR	1249845	Identifier	val		1249790	0					
ANR	1249846	Identifier	properties		1249790	1					
ANR	1249847	Argument	"""fixed"""		1249790	1					
ANR	1249848	PrimaryExpression	"""fixed"""		1249790	0					
ANR	1249849	ExpressionStatement	( * valptr ) -> fixed = FALSE	813:1:28280:28304	1249790	4	True				
ANR	1249850	AssignmentExpression	( * valptr ) -> fixed = FALSE		1249790	0		=			
ANR	1249851	PtrMemberAccess	( * valptr ) -> fixed		1249790	0					
ANR	1249852	UnaryOperationExpression	* valptr		1249790	0					
ANR	1249853	UnaryOperator	*		1249790	0					
ANR	1249854	Identifier	valptr		1249790	1					
ANR	1249855	Identifier	fixed		1249790	1					
ANR	1249856	Identifier	FALSE		1249790	1					
ANR	1249857	IfStatement	if ( fixed != NULL )		1249790	5					
ANR	1249858	Condition	fixed != NULL	814:5:28311:28323	1249790	0	True				
ANR	1249859	EqualityExpression	fixed != NULL		1249790	0		!=			
ANR	1249860	Identifier	fixed		1249790	0					
ANR	1249861	Identifier	NULL		1249790	1					
ANR	1249862	CompoundStatement		11:20:255:255	1249790	1					
ANR	1249863	IfStatement	"if ( ! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) ) || ! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) ) )"		1249790	0					
ANR	1249864	Condition	"! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) ) || ! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"	815:6:28334:28464	1249790	0	True				
ANR	1249865	OrExpression	"! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) ) || ! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"		1249790	0		||			
ANR	1249866	UnaryOperationExpression	"! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) )"		1249790	0					
ANR	1249867	UnaryOperator	!		1249790	0					
ANR	1249868	CallExpression	"strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) )"		1249790	1					
ANR	1249869	Callee	strncmp		1249790	0					
ANR	1249870	Identifier	strncmp		1249790	0					
ANR	1249871	ArgumentList	( char * ) fixed -> children -> content		1249790	1					
ANR	1249872	Argument	( char * ) fixed -> children -> content		1249790	0					
ANR	1249873	CastExpression	( char * ) fixed -> children -> content		1249790	0					
ANR	1249874	CastTarget	char *		1249790	0					
ANR	1249875	PtrMemberAccess	fixed -> children -> content		1249790	1					
ANR	1249876	PtrMemberAccess	fixed -> children		1249790	0					
ANR	1249877	Identifier	fixed		1249790	0					
ANR	1249878	Identifier	children		1249790	1					
ANR	1249879	Identifier	content		1249790	1					
ANR	1249880	Argument	"""true"""		1249790	1					
ANR	1249881	PrimaryExpression	"""true"""		1249790	0					
ANR	1249882	Argument	"sizeof ( ""true"" )"		1249790	2					
ANR	1249883	SizeofExpression	"sizeof ( ""true"" )"		1249790	0					
ANR	1249884	Sizeof	sizeof		1249790	0					
ANR	1249885	PrimaryExpression	"""true"""		1249790	1					
ANR	1249886	UnaryOperationExpression	"! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"		1249790	1					
ANR	1249887	UnaryOperator	!		1249790	0					
ANR	1249888	CallExpression	"strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"		1249790	1					
ANR	1249889	Callee	strncmp		1249790	0					
ANR	1249890	Identifier	strncmp		1249790	0					
ANR	1249891	ArgumentList	( char * ) fixed -> children -> content		1249790	1					
ANR	1249892	Argument	( char * ) fixed -> children -> content		1249790	0					
ANR	1249893	CastExpression	( char * ) fixed -> children -> content		1249790	0					
ANR	1249894	CastTarget	char *		1249790	0					
ANR	1249895	PtrMemberAccess	fixed -> children -> content		1249790	1					
ANR	1249896	PtrMemberAccess	fixed -> children		1249790	0					
ANR	1249897	Identifier	fixed		1249790	0					
ANR	1249898	Identifier	children		1249790	1					
ANR	1249899	Identifier	content		1249790	1					
ANR	1249900	Argument	"""1"""		1249790	1					
ANR	1249901	PrimaryExpression	"""1"""		1249790	0					
ANR	1249902	Argument	"sizeof ( ""1"" )"		1249790	2					
ANR	1249903	SizeofExpression	"sizeof ( ""1"" )"		1249790	0					
ANR	1249904	Sizeof	sizeof		1249790	0					
ANR	1249905	PrimaryExpression	"""1"""		1249790	1					
ANR	1249906	ExpressionStatement	( * valptr ) -> fixed = TRUE	817:3:28470:28493	1249790	1	True				
ANR	1249907	AssignmentExpression	( * valptr ) -> fixed = TRUE		1249790	0		=			
ANR	1249908	PtrMemberAccess	( * valptr ) -> fixed		1249790	0					
ANR	1249909	UnaryOperationExpression	* valptr		1249790	0					
ANR	1249910	UnaryOperator	*		1249790	0					
ANR	1249911	Identifier	valptr		1249790	1					
ANR	1249912	Identifier	fixed		1249790	1					
ANR	1249913	Identifier	TRUE		1249790	1					
ANR	1249914	ExpressionStatement	"value = get_attribute ( val -> properties , ""value"" )"	820:1:28500:28547	1249790	6	True				
ANR	1249915	AssignmentExpression	"value = get_attribute ( val -> properties , ""value"" )"		1249790	0		=			
ANR	1249916	Identifier	value		1249790	0					
ANR	1249917	CallExpression	"get_attribute ( val -> properties , ""value"" )"		1249790	1					
ANR	1249918	Callee	get_attribute		1249790	0					
ANR	1249919	Identifier	get_attribute		1249790	0					
ANR	1249920	ArgumentList	val -> properties		1249790	1					
ANR	1249921	Argument	val -> properties		1249790	0					
ANR	1249922	PtrMemberAccess	val -> properties		1249790	0					
ANR	1249923	Identifier	val		1249790	0					
ANR	1249924	Identifier	properties		1249790	1					
ANR	1249925	Argument	"""value"""		1249790	1					
ANR	1249926	PrimaryExpression	"""value"""		1249790	0					
ANR	1249927	IfStatement	if ( value == NULL )		1249790	7					
ANR	1249928	Condition	value == NULL	821:5:28554:28566	1249790	0	True				
ANR	1249929	EqualityExpression	value == NULL		1249790	0		==			
ANR	1249930	Identifier	value		1249790	0					
ANR	1249931	Identifier	NULL		1249790	1					
ANR	1249932	CompoundStatement		18:20:498:498	1249790	1					
ANR	1249933	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: missing restriction value"" )"	822:2:28573:28638	1249790	0	True				
ANR	1249934	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: missing restriction value"" )"		1249790	0					
ANR	1249935	Callee	soap_error0		1249790	0					
ANR	1249936	Identifier	soap_error0		1249790	0					
ANR	1249937	ArgumentList	E_ERROR		1249790	1					
ANR	1249938	Argument	E_ERROR		1249790	0					
ANR	1249939	Identifier	E_ERROR		1249790	0					
ANR	1249940	Argument	"""Parsing Schema: missing restriction value"""		1249790	1					
ANR	1249941	PrimaryExpression	"""Parsing Schema: missing restriction value"""		1249790	0					
ANR	1249942	ExpressionStatement	( * valptr ) -> value = atoi ( ( char * ) value -> children -> content )	825:1:28645:28701	1249790	8	True				
ANR	1249943	AssignmentExpression	( * valptr ) -> value = atoi ( ( char * ) value -> children -> content )		1249790	0		=			
ANR	1249944	PtrMemberAccess	( * valptr ) -> value		1249790	0					
ANR	1249945	UnaryOperationExpression	* valptr		1249790	0					
ANR	1249946	UnaryOperator	*		1249790	0					
ANR	1249947	Identifier	valptr		1249790	1					
ANR	1249948	Identifier	value		1249790	1					
ANR	1249949	CallExpression	atoi ( ( char * ) value -> children -> content )		1249790	1					
ANR	1249950	Callee	atoi		1249790	0					
ANR	1249951	Identifier	atoi		1249790	0					
ANR	1249952	ArgumentList	( char * ) value -> children -> content		1249790	1					
ANR	1249953	Argument	( char * ) value -> children -> content		1249790	0					
ANR	1249954	CastExpression	( char * ) value -> children -> content		1249790	0					
ANR	1249955	CastTarget	char *		1249790	0					
ANR	1249956	PtrMemberAccess	value -> children -> content		1249790	1					
ANR	1249957	PtrMemberAccess	value -> children		1249790	0					
ANR	1249958	Identifier	value		1249790	0					
ANR	1249959	Identifier	children		1249790	1					
ANR	1249960	Identifier	content		1249790	1					
ANR	1249961	ReturnStatement	return TRUE ;	827:1:28705:28716	1249790	9	True				
ANR	1249962	Identifier	TRUE		1249790	0					
ANR	1249963	ReturnType	static int		1249790	1					
ANR	1249964	Identifier	schema_restriction_var_int		1249790	2					
ANR	1249965	ParameterList	"xmlNodePtr val , sdlRestrictionIntPtr * valptr"		1249790	3					
ANR	1249966	Parameter	xmlNodePtr val	803:38:28024:28037	1249790	0	True				
ANR	1249967	ParameterType	xmlNodePtr		1249790	0					
ANR	1249968	Identifier	val		1249790	1					
ANR	1249969	Parameter	sdlRestrictionIntPtr * valptr	803:54:28040:28067	1249790	1	True				
ANR	1249970	ParameterType	sdlRestrictionIntPtr *		1249790	0					
ANR	1249971	Identifier	valptr		1249790	1					
ANR	1249972	CFGEntryNode	ENTRY		1249790		True				
ANR	1249973	CFGExitNode	EXIT		1249790		True				
ANR	1249974	Symbol	( * valptr ) -> value		1249790						
ANR	1249975	Symbol	get_attribute		1249790						
ANR	1249976	Symbol	value -> children		1249790						
ANR	1249977	Symbol	* * fixed		1249790						
ANR	1249978	Symbol	valptr		1249790						
ANR	1249979	Symbol	* fixed -> children		1249790						
ANR	1249980	Symbol	* val		1249790						
ANR	1249981	Symbol	val -> properties		1249790						
ANR	1249982	Symbol	fixed -> children -> content		1249790						
ANR	1249983	Symbol	strncmp		1249790						
ANR	1249984	Symbol	* fixed		1249790						
ANR	1249985	Symbol	emalloc		1249790						
ANR	1249986	Symbol	fixed -> children		1249790						
ANR	1249987	Symbol	value -> children -> content		1249790						
ANR	1249988	Symbol	value		1249790						
ANR	1249989	Symbol	( * valptr ) -> fixed		1249790						
ANR	1249990	Symbol	val		1249790						
ANR	1249991	Symbol	atoi		1249790						
ANR	1249992	Symbol	* * valptr		1249790						
ANR	1249993	Symbol	NULL		1249790						
ANR	1249994	Symbol	* value -> children		1249790						
ANR	1249995	Symbol	* * value		1249790						
ANR	1249996	Symbol	TRUE		1249790						
ANR	1249997	Symbol	E_ERROR		1249790						
ANR	1249998	Symbol	* value		1249790						
ANR	1249999	Symbol	fixed		1249790						
ANR	1250000	Symbol	FALSE		1249790						
ANR	1250001	Symbol	* valptr		1249790						
ANR	1250002	Function	schema_restriction_var_char	830:0:28721:29468							
ANR	1250003	FunctionDef	"schema_restriction_var_char (xmlNodePtr val , sdlRestrictionCharPtr * valptr)"		1250002	0					
ANR	1250004	CompoundStatement		831:0:28807:29468	1250002	0					
ANR	1250005	IdentifierDeclStatement	"xmlAttrPtr fixed , value ;"	832:1:28810:28833	1250002	0	True				
ANR	1250006	IdentifierDecl	fixed		1250002	0					
ANR	1250007	IdentifierDeclType	xmlAttrPtr		1250002	0					
ANR	1250008	Identifier	fixed		1250002	1					
ANR	1250009	IdentifierDecl	value		1250002	1					
ANR	1250010	IdentifierDeclType	xmlAttrPtr		1250002	0					
ANR	1250011	Identifier	value		1250002	1					
ANR	1250012	IfStatement	if ( ( * valptr ) == NULL )		1250002	1					
ANR	1250013	Condition	( * valptr ) == NULL	834:5:28841:28857	1250002	0	True				
ANR	1250014	EqualityExpression	( * valptr ) == NULL		1250002	0		==			
ANR	1250015	UnaryOperationExpression	* valptr		1250002	0					
ANR	1250016	UnaryOperator	*		1250002	0					
ANR	1250017	Identifier	valptr		1250002	1					
ANR	1250018	Identifier	NULL		1250002	1					
ANR	1250019	CompoundStatement		4:24:52:52	1250002	1					
ANR	1250020	ExpressionStatement	( * valptr ) = emalloc ( sizeof ( sdlRestrictionChar ) )	835:2:28864:28911	1250002	0	True				
ANR	1250021	AssignmentExpression	( * valptr ) = emalloc ( sizeof ( sdlRestrictionChar ) )		1250002	0		=			
ANR	1250022	UnaryOperationExpression	* valptr		1250002	0					
ANR	1250023	UnaryOperator	*		1250002	0					
ANR	1250024	Identifier	valptr		1250002	1					
ANR	1250025	CallExpression	emalloc ( sizeof ( sdlRestrictionChar ) )		1250002	1					
ANR	1250026	Callee	emalloc		1250002	0					
ANR	1250027	Identifier	emalloc		1250002	0					
ANR	1250028	ArgumentList	sizeof ( sdlRestrictionChar )		1250002	1					
ANR	1250029	Argument	sizeof ( sdlRestrictionChar )		1250002	0					
ANR	1250030	SizeofExpression	sizeof ( sdlRestrictionChar )		1250002	0					
ANR	1250031	Sizeof	sizeof		1250002	0					
ANR	1250032	SizeofOperand	sdlRestrictionChar		1250002	1					
ANR	1250033	ExpressionStatement	"memset ( ( * valptr ) , 0 , sizeof ( sdlRestrictionChar ) )"	837:1:28917:28965	1250002	2	True				
ANR	1250034	CallExpression	"memset ( ( * valptr ) , 0 , sizeof ( sdlRestrictionChar ) )"		1250002	0					
ANR	1250035	Callee	memset		1250002	0					
ANR	1250036	Identifier	memset		1250002	0					
ANR	1250037	ArgumentList	* valptr		1250002	1					
ANR	1250038	Argument	* valptr		1250002	0					
ANR	1250039	UnaryOperationExpression	* valptr		1250002	0					
ANR	1250040	UnaryOperator	*		1250002	0					
ANR	1250041	Identifier	valptr		1250002	1					
ANR	1250042	Argument	0		1250002	1					
ANR	1250043	PrimaryExpression	0		1250002	0					
ANR	1250044	Argument	sizeof ( sdlRestrictionChar )		1250002	2					
ANR	1250045	SizeofExpression	sizeof ( sdlRestrictionChar )		1250002	0					
ANR	1250046	Sizeof	sizeof		1250002	0					
ANR	1250047	SizeofOperand	sdlRestrictionChar		1250002	1					
ANR	1250048	ExpressionStatement	"fixed = get_attribute ( val -> properties , ""fixed"" )"	839:1:28969:29016	1250002	3	True				
ANR	1250049	AssignmentExpression	"fixed = get_attribute ( val -> properties , ""fixed"" )"		1250002	0		=			
ANR	1250050	Identifier	fixed		1250002	0					
ANR	1250051	CallExpression	"get_attribute ( val -> properties , ""fixed"" )"		1250002	1					
ANR	1250052	Callee	get_attribute		1250002	0					
ANR	1250053	Identifier	get_attribute		1250002	0					
ANR	1250054	ArgumentList	val -> properties		1250002	1					
ANR	1250055	Argument	val -> properties		1250002	0					
ANR	1250056	PtrMemberAccess	val -> properties		1250002	0					
ANR	1250057	Identifier	val		1250002	0					
ANR	1250058	Identifier	properties		1250002	1					
ANR	1250059	Argument	"""fixed"""		1250002	1					
ANR	1250060	PrimaryExpression	"""fixed"""		1250002	0					
ANR	1250061	ExpressionStatement	( * valptr ) -> fixed = FALSE	840:1:29019:29043	1250002	4	True				
ANR	1250062	AssignmentExpression	( * valptr ) -> fixed = FALSE		1250002	0		=			
ANR	1250063	PtrMemberAccess	( * valptr ) -> fixed		1250002	0					
ANR	1250064	UnaryOperationExpression	* valptr		1250002	0					
ANR	1250065	UnaryOperator	*		1250002	0					
ANR	1250066	Identifier	valptr		1250002	1					
ANR	1250067	Identifier	fixed		1250002	1					
ANR	1250068	Identifier	FALSE		1250002	1					
ANR	1250069	IfStatement	if ( fixed != NULL )		1250002	5					
ANR	1250070	Condition	fixed != NULL	841:5:29050:29062	1250002	0	True				
ANR	1250071	EqualityExpression	fixed != NULL		1250002	0		!=			
ANR	1250072	Identifier	fixed		1250002	0					
ANR	1250073	Identifier	NULL		1250002	1					
ANR	1250074	CompoundStatement		11:20:257:257	1250002	1					
ANR	1250075	IfStatement	"if ( ! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) ) || ! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) ) )"		1250002	0					
ANR	1250076	Condition	"! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) ) || ! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"	842:6:29073:29206	1250002	0	True				
ANR	1250077	OrExpression	"! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) ) || ! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"		1250002	0		||			
ANR	1250078	UnaryOperationExpression	"! strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) )"		1250002	0					
ANR	1250079	UnaryOperator	!		1250002	0					
ANR	1250080	CallExpression	"strncmp ( ( char * ) fixed -> children -> content , ""true"" , sizeof ( ""true"" ) )"		1250002	1					
ANR	1250081	Callee	strncmp		1250002	0					
ANR	1250082	Identifier	strncmp		1250002	0					
ANR	1250083	ArgumentList	( char * ) fixed -> children -> content		1250002	1					
ANR	1250084	Argument	( char * ) fixed -> children -> content		1250002	0					
ANR	1250085	CastExpression	( char * ) fixed -> children -> content		1250002	0					
ANR	1250086	CastTarget	char *		1250002	0					
ANR	1250087	PtrMemberAccess	fixed -> children -> content		1250002	1					
ANR	1250088	PtrMemberAccess	fixed -> children		1250002	0					
ANR	1250089	Identifier	fixed		1250002	0					
ANR	1250090	Identifier	children		1250002	1					
ANR	1250091	Identifier	content		1250002	1					
ANR	1250092	Argument	"""true"""		1250002	1					
ANR	1250093	PrimaryExpression	"""true"""		1250002	0					
ANR	1250094	Argument	"sizeof ( ""true"" )"		1250002	2					
ANR	1250095	SizeofExpression	"sizeof ( ""true"" )"		1250002	0					
ANR	1250096	Sizeof	sizeof		1250002	0					
ANR	1250097	PrimaryExpression	"""true"""		1250002	1					
ANR	1250098	UnaryOperationExpression	"! strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"		1250002	1					
ANR	1250099	UnaryOperator	!		1250002	0					
ANR	1250100	CallExpression	"strncmp ( ( char * ) fixed -> children -> content , ""1"" , sizeof ( ""1"" ) )"		1250002	1					
ANR	1250101	Callee	strncmp		1250002	0					
ANR	1250102	Identifier	strncmp		1250002	0					
ANR	1250103	ArgumentList	( char * ) fixed -> children -> content		1250002	1					
ANR	1250104	Argument	( char * ) fixed -> children -> content		1250002	0					
ANR	1250105	CastExpression	( char * ) fixed -> children -> content		1250002	0					
ANR	1250106	CastTarget	char *		1250002	0					
ANR	1250107	PtrMemberAccess	fixed -> children -> content		1250002	1					
ANR	1250108	PtrMemberAccess	fixed -> children		1250002	0					
ANR	1250109	Identifier	fixed		1250002	0					
ANR	1250110	Identifier	children		1250002	1					
ANR	1250111	Identifier	content		1250002	1					
ANR	1250112	Argument	"""1"""		1250002	1					
ANR	1250113	PrimaryExpression	"""1"""		1250002	0					
ANR	1250114	Argument	"sizeof ( ""1"" )"		1250002	2					
ANR	1250115	SizeofExpression	"sizeof ( ""1"" )"		1250002	0					
ANR	1250116	Sizeof	sizeof		1250002	0					
ANR	1250117	PrimaryExpression	"""1"""		1250002	1					
ANR	1250118	CompoundStatement		13:67:401:401	1250002	1					
ANR	1250119	ExpressionStatement	( * valptr ) -> fixed = TRUE	844:3:29214:29237	1250002	0	True				
ANR	1250120	AssignmentExpression	( * valptr ) -> fixed = TRUE		1250002	0		=			
ANR	1250121	PtrMemberAccess	( * valptr ) -> fixed		1250002	0					
ANR	1250122	UnaryOperationExpression	* valptr		1250002	0					
ANR	1250123	UnaryOperator	*		1250002	0					
ANR	1250124	Identifier	valptr		1250002	1					
ANR	1250125	Identifier	fixed		1250002	1					
ANR	1250126	Identifier	TRUE		1250002	1					
ANR	1250127	ExpressionStatement	"value = get_attribute ( val -> properties , ""value"" )"	848:1:29248:29295	1250002	6	True				
ANR	1250128	AssignmentExpression	"value = get_attribute ( val -> properties , ""value"" )"		1250002	0		=			
ANR	1250129	Identifier	value		1250002	0					
ANR	1250130	CallExpression	"get_attribute ( val -> properties , ""value"" )"		1250002	1					
ANR	1250131	Callee	get_attribute		1250002	0					
ANR	1250132	Identifier	get_attribute		1250002	0					
ANR	1250133	ArgumentList	val -> properties		1250002	1					
ANR	1250134	Argument	val -> properties		1250002	0					
ANR	1250135	PtrMemberAccess	val -> properties		1250002	0					
ANR	1250136	Identifier	val		1250002	0					
ANR	1250137	Identifier	properties		1250002	1					
ANR	1250138	Argument	"""value"""		1250002	1					
ANR	1250139	PrimaryExpression	"""value"""		1250002	0					
ANR	1250140	IfStatement	if ( value == NULL )		1250002	7					
ANR	1250141	Condition	value == NULL	849:5:29302:29314	1250002	0	True				
ANR	1250142	EqualityExpression	value == NULL		1250002	0		==			
ANR	1250143	Identifier	value		1250002	0					
ANR	1250144	Identifier	NULL		1250002	1					
ANR	1250145	CompoundStatement		19:20:509:509	1250002	1					
ANR	1250146	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: missing restriction value"" )"	850:2:29321:29386	1250002	0	True				
ANR	1250147	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: missing restriction value"" )"		1250002	0					
ANR	1250148	Callee	soap_error0		1250002	0					
ANR	1250149	Identifier	soap_error0		1250002	0					
ANR	1250150	ArgumentList	E_ERROR		1250002	1					
ANR	1250151	Argument	E_ERROR		1250002	0					
ANR	1250152	Identifier	E_ERROR		1250002	0					
ANR	1250153	Argument	"""Parsing Schema: missing restriction value"""		1250002	1					
ANR	1250154	PrimaryExpression	"""Parsing Schema: missing restriction value"""		1250002	0					
ANR	1250155	ExpressionStatement	( * valptr ) -> value = estrdup ( ( char * ) value -> children -> content )	853:1:29393:29452	1250002	8	True				
ANR	1250156	AssignmentExpression	( * valptr ) -> value = estrdup ( ( char * ) value -> children -> content )		1250002	0		=			
ANR	1250157	PtrMemberAccess	( * valptr ) -> value		1250002	0					
ANR	1250158	UnaryOperationExpression	* valptr		1250002	0					
ANR	1250159	UnaryOperator	*		1250002	0					
ANR	1250160	Identifier	valptr		1250002	1					
ANR	1250161	Identifier	value		1250002	1					
ANR	1250162	CallExpression	estrdup ( ( char * ) value -> children -> content )		1250002	1					
ANR	1250163	Callee	estrdup		1250002	0					
ANR	1250164	Identifier	estrdup		1250002	0					
ANR	1250165	ArgumentList	( char * ) value -> children -> content		1250002	1					
ANR	1250166	Argument	( char * ) value -> children -> content		1250002	0					
ANR	1250167	CastExpression	( char * ) value -> children -> content		1250002	0					
ANR	1250168	CastTarget	char *		1250002	0					
ANR	1250169	PtrMemberAccess	value -> children -> content		1250002	1					
ANR	1250170	PtrMemberAccess	value -> children		1250002	0					
ANR	1250171	Identifier	value		1250002	0					
ANR	1250172	Identifier	children		1250002	1					
ANR	1250173	Identifier	content		1250002	1					
ANR	1250174	ReturnStatement	return TRUE ;	854:1:29455:29466	1250002	9	True				
ANR	1250175	Identifier	TRUE		1250002	0					
ANR	1250176	ReturnType	static int		1250002	1					
ANR	1250177	Identifier	schema_restriction_var_char		1250002	2					
ANR	1250178	ParameterList	"xmlNodePtr val , sdlRestrictionCharPtr * valptr"		1250002	3					
ANR	1250179	Parameter	xmlNodePtr val	830:39:28760:28773	1250002	0	True				
ANR	1250180	ParameterType	xmlNodePtr		1250002	0					
ANR	1250181	Identifier	val		1250002	1					
ANR	1250182	Parameter	sdlRestrictionCharPtr * valptr	830:55:28776:28804	1250002	1	True				
ANR	1250183	ParameterType	sdlRestrictionCharPtr *		1250002	0					
ANR	1250184	Identifier	valptr		1250002	1					
ANR	1250185	CFGEntryNode	ENTRY		1250002		True				
ANR	1250186	CFGExitNode	EXIT		1250002		True				
ANR	1250187	Symbol	( * valptr ) -> value		1250002						
ANR	1250188	Symbol	get_attribute		1250002						
ANR	1250189	Symbol	value -> children		1250002						
ANR	1250190	Symbol	* * fixed		1250002						
ANR	1250191	Symbol	valptr		1250002						
ANR	1250192	Symbol	* fixed -> children		1250002						
ANR	1250193	Symbol	* val		1250002						
ANR	1250194	Symbol	val -> properties		1250002						
ANR	1250195	Symbol	strncmp		1250002						
ANR	1250196	Symbol	fixed -> children -> content		1250002						
ANR	1250197	Symbol	* fixed		1250002						
ANR	1250198	Symbol	emalloc		1250002						
ANR	1250199	Symbol	fixed -> children		1250002						
ANR	1250200	Symbol	value -> children -> content		1250002						
ANR	1250201	Symbol	value		1250002						
ANR	1250202	Symbol	( * valptr ) -> fixed		1250002						
ANR	1250203	Symbol	val		1250002						
ANR	1250204	Symbol	* * valptr		1250002						
ANR	1250205	Symbol	NULL		1250002						
ANR	1250206	Symbol	* value -> children		1250002						
ANR	1250207	Symbol	* * value		1250002						
ANR	1250208	Symbol	TRUE		1250002						
ANR	1250209	Symbol	E_ERROR		1250002						
ANR	1250210	Symbol	* value		1250002						
ANR	1250211	Symbol	estrdup		1250002						
ANR	1250212	Symbol	fixed		1250002						
ANR	1250213	Symbol	FALSE		1250002						
ANR	1250214	Symbol	* valptr		1250002						
ANR	1250215	Function	schema_extension_simpleContent	866:0:29687:31057							
ANR	1250216	FunctionDef	"schema_extension_simpleContent (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type)"		1250215	0					
ANR	1250217	CompoundStatement		867:0:29798:31057	1250215	0					
ANR	1250218	IdentifierDeclStatement	xmlNodePtr trav ;	868:1:29801:29816	1250215	0	True				
ANR	1250219	IdentifierDecl	trav		1250215	0					
ANR	1250220	IdentifierDeclType	xmlNodePtr		1250215	0					
ANR	1250221	Identifier	trav		1250215	1					
ANR	1250222	IdentifierDeclStatement	xmlAttrPtr base ;	869:1:29819:29834	1250215	1	True				
ANR	1250223	IdentifierDecl	base		1250215	0					
ANR	1250224	IdentifierDeclType	xmlAttrPtr		1250215	0					
ANR	1250225	Identifier	base		1250215	1					
ANR	1250226	ExpressionStatement	"base = get_attribute ( extType -> properties , ""base"" )"	871:1:29838:29887	1250215	2	True				
ANR	1250227	AssignmentExpression	"base = get_attribute ( extType -> properties , ""base"" )"		1250215	0		=			
ANR	1250228	Identifier	base		1250215	0					
ANR	1250229	CallExpression	"get_attribute ( extType -> properties , ""base"" )"		1250215	1					
ANR	1250230	Callee	get_attribute		1250215	0					
ANR	1250231	Identifier	get_attribute		1250215	0					
ANR	1250232	ArgumentList	extType -> properties		1250215	1					
ANR	1250233	Argument	extType -> properties		1250215	0					
ANR	1250234	PtrMemberAccess	extType -> properties		1250215	0					
ANR	1250235	Identifier	extType		1250215	0					
ANR	1250236	Identifier	properties		1250215	1					
ANR	1250237	Argument	"""base"""		1250215	1					
ANR	1250238	PrimaryExpression	"""base"""		1250215	0					
ANR	1250239	IfStatement	if ( base != NULL )		1250215	3					
ANR	1250240	Condition	base != NULL	872:5:29894:29905	1250215	0	True				
ANR	1250241	EqualityExpression	base != NULL		1250215	0		!=			
ANR	1250242	Identifier	base		1250215	0					
ANR	1250243	Identifier	NULL		1250215	1					
ANR	1250244	CompoundStatement		8:2:132:146	1250215	1					
ANR	1250245	IdentifierDeclStatement	"char * type , * ns ;"	873:2:29912:29927	1250215	0	True				
ANR	1250246	IdentifierDecl	* type		1250215	0					
ANR	1250247	IdentifierDeclType	char *		1250215	0					
ANR	1250248	Identifier	type		1250215	1					
ANR	1250249	IdentifierDecl	* ns		1250215	1					
ANR	1250250	IdentifierDeclType	char *		1250215	0					
ANR	1250251	Identifier	ns		1250215	1					
ANR	1250252	IdentifierDeclStatement	xmlNsPtr nsptr ;	874:2:29931:29945	1250215	1	True				
ANR	1250253	IdentifierDecl	nsptr		1250215	0					
ANR	1250254	IdentifierDeclType	xmlNsPtr		1250215	0					
ANR	1250255	Identifier	nsptr		1250215	1					
ANR	1250256	ExpressionStatement	"parse_namespace ( base -> children -> content , & type , & ns )"	876:2:29950:30002	1250215	2	True				
ANR	1250257	CallExpression	"parse_namespace ( base -> children -> content , & type , & ns )"		1250215	0					
ANR	1250258	Callee	parse_namespace		1250215	0					
ANR	1250259	Identifier	parse_namespace		1250215	0					
ANR	1250260	ArgumentList	base -> children -> content		1250215	1					
ANR	1250261	Argument	base -> children -> content		1250215	0					
ANR	1250262	PtrMemberAccess	base -> children -> content		1250215	0					
ANR	1250263	PtrMemberAccess	base -> children		1250215	0					
ANR	1250264	Identifier	base		1250215	0					
ANR	1250265	Identifier	children		1250215	1					
ANR	1250266	Identifier	content		1250215	1					
ANR	1250267	Argument	& type		1250215	1					
ANR	1250268	UnaryOperationExpression	& type		1250215	0					
ANR	1250269	UnaryOperator	&		1250215	0					
ANR	1250270	Identifier	type		1250215	1					
ANR	1250271	Argument	& ns		1250215	2					
ANR	1250272	UnaryOperationExpression	& ns		1250215	0					
ANR	1250273	UnaryOperator	&		1250215	0					
ANR	1250274	Identifier	ns		1250215	1					
ANR	1250275	ExpressionStatement	"nsptr = xmlSearchNs ( extType -> doc , extType , BAD_CAST ( ns ) )"	877:2:30006:30062	1250215	3	True				
ANR	1250276	AssignmentExpression	"nsptr = xmlSearchNs ( extType -> doc , extType , BAD_CAST ( ns ) )"		1250215	0		=			
ANR	1250277	Identifier	nsptr		1250215	0					
ANR	1250278	CallExpression	"xmlSearchNs ( extType -> doc , extType , BAD_CAST ( ns ) )"		1250215	1					
ANR	1250279	Callee	xmlSearchNs		1250215	0					
ANR	1250280	Identifier	xmlSearchNs		1250215	0					
ANR	1250281	ArgumentList	extType -> doc		1250215	1					
ANR	1250282	Argument	extType -> doc		1250215	0					
ANR	1250283	PtrMemberAccess	extType -> doc		1250215	0					
ANR	1250284	Identifier	extType		1250215	0					
ANR	1250285	Identifier	doc		1250215	1					
ANR	1250286	Argument	extType		1250215	1					
ANR	1250287	Identifier	extType		1250215	0					
ANR	1250288	Argument	BAD_CAST ( ns )		1250215	2					
ANR	1250289	CallExpression	BAD_CAST ( ns )		1250215	0					
ANR	1250290	Callee	BAD_CAST		1250215	0					
ANR	1250291	Identifier	BAD_CAST		1250215	0					
ANR	1250292	ArgumentList	ns		1250215	1					
ANR	1250293	Argument	ns		1250215	0					
ANR	1250294	Identifier	ns		1250215	0					
ANR	1250295	IfStatement	if ( nsptr != NULL )		1250215	4					
ANR	1250296	Condition	nsptr != NULL	878:6:30070:30082	1250215	0	True				
ANR	1250297	EqualityExpression	nsptr != NULL		1250215	0		!=			
ANR	1250298	Identifier	nsptr		1250215	0					
ANR	1250299	Identifier	NULL		1250215	1					
ANR	1250300	CompoundStatement		12:21:286:286	1250215	1					
ANR	1250301	ExpressionStatement	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"	879:3:30090:30171	1250215	0	True				
ANR	1250302	AssignmentExpression	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1250215	0		=			
ANR	1250303	PtrMemberAccess	cur_type -> encode		1250215	0					
ANR	1250304	Identifier	cur_type		1250215	0					
ANR	1250305	Identifier	encode		1250215	1					
ANR	1250306	CallExpression	"get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1250215	1					
ANR	1250307	Callee	get_create_encoder		1250215	0					
ANR	1250308	Identifier	get_create_encoder		1250215	0					
ANR	1250309	ArgumentList	sdl		1250215	1					
ANR	1250310	Argument	sdl		1250215	0					
ANR	1250311	Identifier	sdl		1250215	0					
ANR	1250312	Argument	cur_type		1250215	1					
ANR	1250313	Identifier	cur_type		1250215	0					
ANR	1250314	Argument	nsptr -> href		1250215	2					
ANR	1250315	PtrMemberAccess	nsptr -> href		1250215	0					
ANR	1250316	Identifier	nsptr		1250215	0					
ANR	1250317	Identifier	href		1250215	1					
ANR	1250318	Argument	BAD_CAST ( type )		1250215	3					
ANR	1250319	CallExpression	BAD_CAST ( type )		1250215	0					
ANR	1250320	Callee	BAD_CAST		1250215	0					
ANR	1250321	Identifier	BAD_CAST		1250215	0					
ANR	1250322	ArgumentList	type		1250215	1					
ANR	1250323	Argument	type		1250215	0					
ANR	1250324	Identifier	type		1250215	0					
ANR	1250325	IfStatement	if ( type )		1250215	5					
ANR	1250326	Condition	type	881:6:30183:30186	1250215	0	True				
ANR	1250327	Identifier	type		1250215	0					
ANR	1250328	CompoundStatement		15:12:390:390	1250215	1					
ANR	1250329	ExpressionStatement	efree ( type )	881:13:30190:30201	1250215	0	True				
ANR	1250330	CallExpression	efree ( type )		1250215	0					
ANR	1250331	Callee	efree		1250215	0					
ANR	1250332	Identifier	efree		1250215	0					
ANR	1250333	ArgumentList	type		1250215	1					
ANR	1250334	Argument	type		1250215	0					
ANR	1250335	Identifier	type		1250215	0					
ANR	1250336	IfStatement	if ( ns )		1250215	6					
ANR	1250337	Condition	ns	882:6:30210:30211	1250215	0	True				
ANR	1250338	Identifier	ns		1250215	0					
ANR	1250339	CompoundStatement		16:10:415:415	1250215	1					
ANR	1250340	ExpressionStatement	efree ( ns )	882:11:30215:30224	1250215	0	True				
ANR	1250341	CallExpression	efree ( ns )		1250215	0					
ANR	1250342	Callee	efree		1250215	0					
ANR	1250343	Identifier	efree		1250215	0					
ANR	1250344	ArgumentList	ns		1250215	1					
ANR	1250345	Argument	ns		1250215	0					
ANR	1250346	Identifier	ns		1250215	0					
ANR	1250347	ElseStatement	else		1250215	0					
ANR	1250348	CompoundStatement		17:8:436:436	1250215	0					
ANR	1250349	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: extension has no 'base' attribute"" )"	884:2:30239:30312	1250215	0	True				
ANR	1250350	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: extension has no 'base' attribute"" )"		1250215	0					
ANR	1250351	Callee	soap_error0		1250215	0					
ANR	1250352	Identifier	soap_error0		1250215	0					
ANR	1250353	ArgumentList	E_ERROR		1250215	1					
ANR	1250354	Argument	E_ERROR		1250215	0					
ANR	1250355	Identifier	E_ERROR		1250215	0					
ANR	1250356	Argument	"""Parsing Schema: extension has no 'base' attribute"""		1250215	1					
ANR	1250357	PrimaryExpression	"""Parsing Schema: extension has no 'base' attribute"""		1250215	0					
ANR	1250358	ExpressionStatement	trav = extType -> children	887:1:30319:30343	1250215	4	True				
ANR	1250359	AssignmentExpression	trav = extType -> children		1250215	0		=			
ANR	1250360	Identifier	trav		1250215	0					
ANR	1250361	PtrMemberAccess	extType -> children		1250215	1					
ANR	1250362	Identifier	extType		1250215	0					
ANR	1250363	Identifier	children		1250215	1					
ANR	1250364	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1250215	5					
ANR	1250365	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	888:5:30350:30397	1250215	0	True				
ANR	1250366	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1250215	0		&&			
ANR	1250367	EqualityExpression	trav != NULL		1250215	0		!=			
ANR	1250368	Identifier	trav		1250215	0					
ANR	1250369	Identifier	NULL		1250215	1					
ANR	1250370	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1250215	1					
ANR	1250371	Callee	node_is_equal		1250215	0					
ANR	1250372	Identifier	node_is_equal		1250215	0					
ANR	1250373	ArgumentList	trav		1250215	1					
ANR	1250374	Argument	trav		1250215	0					
ANR	1250375	Identifier	trav		1250215	0					
ANR	1250376	Argument	"""annotation"""		1250215	1					
ANR	1250377	PrimaryExpression	"""annotation"""		1250215	0					
ANR	1250378	CompoundStatement		22:55:601:601	1250215	1					
ANR	1250379	ExpressionStatement	trav = trav -> next	890:2:30439:30456	1250215	0	True				
ANR	1250380	AssignmentExpression	trav = trav -> next		1250215	0		=			
ANR	1250381	Identifier	trav		1250215	0					
ANR	1250382	PtrMemberAccess	trav -> next		1250215	1					
ANR	1250383	Identifier	trav		1250215	0					
ANR	1250384	Identifier	next		1250215	1					
ANR	1250385	WhileStatement	while ( trav != NULL )		1250215	6					
ANR	1250386	Condition	trav != NULL	892:8:30469:30480	1250215	0	True				
ANR	1250387	EqualityExpression	trav != NULL		1250215	0		!=			
ANR	1250388	Identifier	trav		1250215	0					
ANR	1250389	Identifier	NULL		1250215	1					
ANR	1250390	CompoundStatement		26:22:684:684	1250215	1					
ANR	1250391	IfStatement	"if ( node_is_equal ( trav , ""attribute"" ) )"		1250215	0					
ANR	1250392	Condition	"node_is_equal ( trav , ""attribute"" )"	893:6:30491:30521	1250215	0	True				
ANR	1250393	CallExpression	"node_is_equal ( trav , ""attribute"" )"		1250215	0					
ANR	1250394	Callee	node_is_equal		1250215	0					
ANR	1250395	Identifier	node_is_equal		1250215	0					
ANR	1250396	ArgumentList	trav		1250215	1					
ANR	1250397	Argument	trav		1250215	0					
ANR	1250398	Identifier	trav		1250215	0					
ANR	1250399	Argument	"""attribute"""		1250215	1					
ANR	1250400	PrimaryExpression	"""attribute"""		1250215	0					
ANR	1250401	CompoundStatement		27:39:725:725	1250215	1					
ANR	1250402	ExpressionStatement	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"	894:3:30529:30577	1250215	0	True				
ANR	1250403	CallExpression	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"		1250215	0					
ANR	1250404	Callee	schema_attribute		1250215	0					
ANR	1250405	Identifier	schema_attribute		1250215	0					
ANR	1250406	ArgumentList	sdl		1250215	1					
ANR	1250407	Argument	sdl		1250215	0					
ANR	1250408	Identifier	sdl		1250215	0					
ANR	1250409	Argument	tns		1250215	1					
ANR	1250410	Identifier	tns		1250215	0					
ANR	1250411	Argument	trav		1250215	2					
ANR	1250412	Identifier	trav		1250215	0					
ANR	1250413	Argument	cur_type		1250215	3					
ANR	1250414	Identifier	cur_type		1250215	0					
ANR	1250415	Argument	NULL		1250215	4					
ANR	1250416	Identifier	NULL		1250215	0					
ANR	1250417	ElseStatement	else		1250215	0					
ANR	1250418	IfStatement	"if ( node_is_equal ( trav , ""attributeGroup"" ) )"		1250215	0					
ANR	1250419	Condition	"node_is_equal ( trav , ""attributeGroup"" )"	895:13:30592:30627	1250215	0	True				
ANR	1250420	CallExpression	"node_is_equal ( trav , ""attributeGroup"" )"		1250215	0					
ANR	1250421	Callee	node_is_equal		1250215	0					
ANR	1250422	Identifier	node_is_equal		1250215	0					
ANR	1250423	ArgumentList	trav		1250215	1					
ANR	1250424	Argument	trav		1250215	0					
ANR	1250425	Identifier	trav		1250215	0					
ANR	1250426	Argument	"""attributeGroup"""		1250215	1					
ANR	1250427	PrimaryExpression	"""attributeGroup"""		1250215	0					
ANR	1250428	CompoundStatement		29:51:831:831	1250215	1					
ANR	1250429	ExpressionStatement	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"	896:3:30635:30688	1250215	0	True				
ANR	1250430	CallExpression	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"		1250215	0					
ANR	1250431	Callee	schema_attributeGroup		1250215	0					
ANR	1250432	Identifier	schema_attributeGroup		1250215	0					
ANR	1250433	ArgumentList	sdl		1250215	1					
ANR	1250434	Argument	sdl		1250215	0					
ANR	1250435	Identifier	sdl		1250215	0					
ANR	1250436	Argument	tns		1250215	1					
ANR	1250437	Identifier	tns		1250215	0					
ANR	1250438	Argument	trav		1250215	2					
ANR	1250439	Identifier	trav		1250215	0					
ANR	1250440	Argument	cur_type		1250215	3					
ANR	1250441	Identifier	cur_type		1250215	0					
ANR	1250442	Argument	NULL		1250215	4					
ANR	1250443	Identifier	NULL		1250215	0					
ANR	1250444	ElseStatement	else		1250215	0					
ANR	1250445	IfStatement	"if ( node_is_equal ( trav , ""anyAttribute"" ) )"		1250215	0					
ANR	1250446	Condition	"node_is_equal ( trav , ""anyAttribute"" )"	897:13:30703:30736	1250215	0	True				
ANR	1250447	CallExpression	"node_is_equal ( trav , ""anyAttribute"" )"		1250215	0					
ANR	1250448	Callee	node_is_equal		1250215	0					
ANR	1250449	Identifier	node_is_equal		1250215	0					
ANR	1250450	ArgumentList	trav		1250215	1					
ANR	1250451	Argument	trav		1250215	0					
ANR	1250452	Identifier	trav		1250215	0					
ANR	1250453	Argument	"""anyAttribute"""		1250215	1					
ANR	1250454	PrimaryExpression	"""anyAttribute"""		1250215	0					
ANR	1250455	CompoundStatement		31:49:940:940	1250215	1					
ANR	1250456	ExpressionStatement	trav = trav -> next	899:3:30782:30799	1250215	0	True				
ANR	1250457	AssignmentExpression	trav = trav -> next		1250215	0		=			
ANR	1250458	Identifier	trav		1250215	0					
ANR	1250459	PtrMemberAccess	trav -> next		1250215	1					
ANR	1250460	Identifier	trav		1250215	0					
ANR	1250461	Identifier	next		1250215	1					
ANR	1250462	BreakStatement	break ;	900:3:30804:30809	1250215	1	True				
ANR	1250463	ElseStatement	else		1250215	0					
ANR	1250464	CompoundStatement		35:9:1021:1021	1250215	0					
ANR	1250465	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"	902:3:30825:30905	1250215	0	True				
ANR	1250466	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"		1250215	0					
ANR	1250467	Callee	soap_error1		1250215	0					
ANR	1250468	Identifier	soap_error1		1250215	0					
ANR	1250469	ArgumentList	E_ERROR		1250215	1					
ANR	1250470	Argument	E_ERROR		1250215	0					
ANR	1250471	Identifier	E_ERROR		1250215	0					
ANR	1250472	Argument	"""Parsing Schema: unexpected <%s> in extension"""		1250215	1					
ANR	1250473	PrimaryExpression	"""Parsing Schema: unexpected <%s> in extension"""		1250215	0					
ANR	1250474	Argument	trav -> name		1250215	2					
ANR	1250475	PtrMemberAccess	trav -> name		1250215	0					
ANR	1250476	Identifier	trav		1250215	0					
ANR	1250477	Identifier	name		1250215	1					
ANR	1250478	ExpressionStatement	trav = trav -> next	904:2:30913:30930	1250215	1	True				
ANR	1250479	AssignmentExpression	trav = trav -> next		1250215	0		=			
ANR	1250480	Identifier	trav		1250215	0					
ANR	1250481	PtrMemberAccess	trav -> next		1250215	1					
ANR	1250482	Identifier	trav		1250215	0					
ANR	1250483	Identifier	next		1250215	1					
ANR	1250484	IfStatement	if ( trav != NULL )		1250215	7					
ANR	1250485	Condition	trav != NULL	906:5:30940:30951	1250215	0	True				
ANR	1250486	EqualityExpression	trav != NULL		1250215	0		!=			
ANR	1250487	Identifier	trav		1250215	0					
ANR	1250488	Identifier	NULL		1250215	1					
ANR	1250489	CompoundStatement		40:19:1155:1155	1250215	1					
ANR	1250490	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"	907:2:30958:31038	1250215	0	True				
ANR	1250491	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"		1250215	0					
ANR	1250492	Callee	soap_error1		1250215	0					
ANR	1250493	Identifier	soap_error1		1250215	0					
ANR	1250494	ArgumentList	E_ERROR		1250215	1					
ANR	1250495	Argument	E_ERROR		1250215	0					
ANR	1250496	Identifier	E_ERROR		1250215	0					
ANR	1250497	Argument	"""Parsing Schema: unexpected <%s> in extension"""		1250215	1					
ANR	1250498	PrimaryExpression	"""Parsing Schema: unexpected <%s> in extension"""		1250215	0					
ANR	1250499	Argument	trav -> name		1250215	2					
ANR	1250500	PtrMemberAccess	trav -> name		1250215	0					
ANR	1250501	Identifier	trav		1250215	0					
ANR	1250502	Identifier	name		1250215	1					
ANR	1250503	ReturnStatement	return TRUE ;	909:1:31044:31055	1250215	8	True				
ANR	1250504	Identifier	TRUE		1250215	0					
ANR	1250505	ReturnType	static int		1250215	1					
ANR	1250506	Identifier	schema_extension_simpleContent		1250215	2					
ANR	1250507	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type"		1250215	3					
ANR	1250508	Parameter	sdlPtr sdl	866:42:29729:29738	1250215	0	True				
ANR	1250509	ParameterType	sdlPtr		1250215	0					
ANR	1250510	Identifier	sdl		1250215	1					
ANR	1250511	Parameter	xmlAttrPtr tns	866:54:29741:29754	1250215	1	True				
ANR	1250512	ParameterType	xmlAttrPtr		1250215	0					
ANR	1250513	Identifier	tns		1250215	1					
ANR	1250514	Parameter	xmlNodePtr extType	866:70:29757:29774	1250215	2	True				
ANR	1250515	ParameterType	xmlNodePtr		1250215	0					
ANR	1250516	Identifier	extType		1250215	1					
ANR	1250517	Parameter	sdlTypePtr cur_type	866:90:29777:29795	1250215	3	True				
ANR	1250518	ParameterType	sdlTypePtr		1250215	0					
ANR	1250519	Identifier	cur_type		1250215	1					
ANR	1250520	CFGEntryNode	ENTRY		1250215		True				
ANR	1250521	CFGExitNode	EXIT		1250215		True				
ANR	1250522	Symbol	* extType		1250215						
ANR	1250523	Symbol	extType -> properties		1250215						
ANR	1250524	Symbol	trav -> next		1250215						
ANR	1250525	Symbol	get_attribute		1250215						
ANR	1250526	Symbol	trav		1250215						
ANR	1250527	Symbol	ns		1250215						
ANR	1250528	Symbol	base -> children		1250215						
ANR	1250529	Symbol	type		1250215						
ANR	1250530	Symbol	node_is_equal		1250215						
ANR	1250531	Symbol	nsptr		1250215						
ANR	1250532	Symbol	* trav		1250215						
ANR	1250533	Symbol	* base -> children		1250215						
ANR	1250534	Symbol	* base		1250215						
ANR	1250535	Symbol	extType		1250215						
ANR	1250536	Symbol	cur_type		1250215						
ANR	1250537	Symbol	extType -> children		1250215						
ANR	1250538	Symbol	NULL		1250215						
ANR	1250539	Symbol	nsptr -> href		1250215						
ANR	1250540	Symbol	& type		1250215						
ANR	1250541	Symbol	* * base		1250215						
ANR	1250542	Symbol	TRUE		1250215						
ANR	1250543	Symbol	xmlSearchNs		1250215						
ANR	1250544	Symbol	& ns		1250215						
ANR	1250545	Symbol	* cur_type		1250215						
ANR	1250546	Symbol	extType -> doc		1250215						
ANR	1250547	Symbol	base -> children -> content		1250215						
ANR	1250548	Symbol	E_ERROR		1250215						
ANR	1250549	Symbol	cur_type -> encode		1250215						
ANR	1250550	Symbol	* nsptr		1250215						
ANR	1250551	Symbol	tns		1250215						
ANR	1250552	Symbol	sdl		1250215						
ANR	1250553	Symbol	trav -> name		1250215						
ANR	1250554	Symbol	get_create_encoder		1250215						
ANR	1250555	Symbol	base		1250215						
ANR	1250556	Symbol	BAD_CAST		1250215						
ANR	1250557	Function	schema_extension_complexContent	921:0:31299:33155							
ANR	1250558	FunctionDef	"schema_extension_complexContent (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type)"		1250557	0					
ANR	1250559	CompoundStatement		922:0:31411:33155	1250557	0					
ANR	1250560	IdentifierDeclStatement	xmlNodePtr trav ;	923:1:31414:31429	1250557	0	True				
ANR	1250561	IdentifierDecl	trav		1250557	0					
ANR	1250562	IdentifierDeclType	xmlNodePtr		1250557	0					
ANR	1250563	Identifier	trav		1250557	1					
ANR	1250564	IdentifierDeclStatement	xmlAttrPtr base ;	924:1:31432:31447	1250557	1	True				
ANR	1250565	IdentifierDecl	base		1250557	0					
ANR	1250566	IdentifierDeclType	xmlAttrPtr		1250557	0					
ANR	1250567	Identifier	base		1250557	1					
ANR	1250568	ExpressionStatement	"base = get_attribute ( extType -> properties , ""base"" )"	926:1:31451:31500	1250557	2	True				
ANR	1250569	AssignmentExpression	"base = get_attribute ( extType -> properties , ""base"" )"		1250557	0		=			
ANR	1250570	Identifier	base		1250557	0					
ANR	1250571	CallExpression	"get_attribute ( extType -> properties , ""base"" )"		1250557	1					
ANR	1250572	Callee	get_attribute		1250557	0					
ANR	1250573	Identifier	get_attribute		1250557	0					
ANR	1250574	ArgumentList	extType -> properties		1250557	1					
ANR	1250575	Argument	extType -> properties		1250557	0					
ANR	1250576	PtrMemberAccess	extType -> properties		1250557	0					
ANR	1250577	Identifier	extType		1250557	0					
ANR	1250578	Identifier	properties		1250557	1					
ANR	1250579	Argument	"""base"""		1250557	1					
ANR	1250580	PrimaryExpression	"""base"""		1250557	0					
ANR	1250581	IfStatement	if ( base != NULL )		1250557	3					
ANR	1250582	Condition	base != NULL	927:5:31507:31518	1250557	0	True				
ANR	1250583	EqualityExpression	base != NULL		1250557	0		!=			
ANR	1250584	Identifier	base		1250557	0					
ANR	1250585	Identifier	NULL		1250557	1					
ANR	1250586	CompoundStatement		8:2:132:146	1250557	1					
ANR	1250587	IdentifierDeclStatement	"char * type , * ns ;"	928:2:31525:31540	1250557	0	True				
ANR	1250588	IdentifierDecl	* type		1250557	0					
ANR	1250589	IdentifierDeclType	char *		1250557	0					
ANR	1250590	Identifier	type		1250557	1					
ANR	1250591	IdentifierDecl	* ns		1250557	1					
ANR	1250592	IdentifierDeclType	char *		1250557	0					
ANR	1250593	Identifier	ns		1250557	1					
ANR	1250594	IdentifierDeclStatement	xmlNsPtr nsptr ;	929:2:31544:31558	1250557	1	True				
ANR	1250595	IdentifierDecl	nsptr		1250557	0					
ANR	1250596	IdentifierDeclType	xmlNsPtr		1250557	0					
ANR	1250597	Identifier	nsptr		1250557	1					
ANR	1250598	ExpressionStatement	"parse_namespace ( base -> children -> content , & type , & ns )"	931:2:31563:31615	1250557	2	True				
ANR	1250599	CallExpression	"parse_namespace ( base -> children -> content , & type , & ns )"		1250557	0					
ANR	1250600	Callee	parse_namespace		1250557	0					
ANR	1250601	Identifier	parse_namespace		1250557	0					
ANR	1250602	ArgumentList	base -> children -> content		1250557	1					
ANR	1250603	Argument	base -> children -> content		1250557	0					
ANR	1250604	PtrMemberAccess	base -> children -> content		1250557	0					
ANR	1250605	PtrMemberAccess	base -> children		1250557	0					
ANR	1250606	Identifier	base		1250557	0					
ANR	1250607	Identifier	children		1250557	1					
ANR	1250608	Identifier	content		1250557	1					
ANR	1250609	Argument	& type		1250557	1					
ANR	1250610	UnaryOperationExpression	& type		1250557	0					
ANR	1250611	UnaryOperator	&		1250557	0					
ANR	1250612	Identifier	type		1250557	1					
ANR	1250613	Argument	& ns		1250557	2					
ANR	1250614	UnaryOperationExpression	& ns		1250557	0					
ANR	1250615	UnaryOperator	&		1250557	0					
ANR	1250616	Identifier	ns		1250557	1					
ANR	1250617	ExpressionStatement	"nsptr = xmlSearchNs ( extType -> doc , extType , BAD_CAST ( ns ) )"	932:2:31619:31675	1250557	3	True				
ANR	1250618	AssignmentExpression	"nsptr = xmlSearchNs ( extType -> doc , extType , BAD_CAST ( ns ) )"		1250557	0		=			
ANR	1250619	Identifier	nsptr		1250557	0					
ANR	1250620	CallExpression	"xmlSearchNs ( extType -> doc , extType , BAD_CAST ( ns ) )"		1250557	1					
ANR	1250621	Callee	xmlSearchNs		1250557	0					
ANR	1250622	Identifier	xmlSearchNs		1250557	0					
ANR	1250623	ArgumentList	extType -> doc		1250557	1					
ANR	1250624	Argument	extType -> doc		1250557	0					
ANR	1250625	PtrMemberAccess	extType -> doc		1250557	0					
ANR	1250626	Identifier	extType		1250557	0					
ANR	1250627	Identifier	doc		1250557	1					
ANR	1250628	Argument	extType		1250557	1					
ANR	1250629	Identifier	extType		1250557	0					
ANR	1250630	Argument	BAD_CAST ( ns )		1250557	2					
ANR	1250631	CallExpression	BAD_CAST ( ns )		1250557	0					
ANR	1250632	Callee	BAD_CAST		1250557	0					
ANR	1250633	Identifier	BAD_CAST		1250557	0					
ANR	1250634	ArgumentList	ns		1250557	1					
ANR	1250635	Argument	ns		1250557	0					
ANR	1250636	Identifier	ns		1250557	0					
ANR	1250637	IfStatement	if ( nsptr != NULL )		1250557	4					
ANR	1250638	Condition	nsptr != NULL	933:6:31683:31695	1250557	0	True				
ANR	1250639	EqualityExpression	nsptr != NULL		1250557	0		!=			
ANR	1250640	Identifier	nsptr		1250557	0					
ANR	1250641	Identifier	NULL		1250557	1					
ANR	1250642	CompoundStatement		12:21:286:286	1250557	1					
ANR	1250643	ExpressionStatement	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"	934:3:31703:31784	1250557	0	True				
ANR	1250644	AssignmentExpression	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1250557	0		=			
ANR	1250645	PtrMemberAccess	cur_type -> encode		1250557	0					
ANR	1250646	Identifier	cur_type		1250557	0					
ANR	1250647	Identifier	encode		1250557	1					
ANR	1250648	CallExpression	"get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( type ) )"		1250557	1					
ANR	1250649	Callee	get_create_encoder		1250557	0					
ANR	1250650	Identifier	get_create_encoder		1250557	0					
ANR	1250651	ArgumentList	sdl		1250557	1					
ANR	1250652	Argument	sdl		1250557	0					
ANR	1250653	Identifier	sdl		1250557	0					
ANR	1250654	Argument	cur_type		1250557	1					
ANR	1250655	Identifier	cur_type		1250557	0					
ANR	1250656	Argument	nsptr -> href		1250557	2					
ANR	1250657	PtrMemberAccess	nsptr -> href		1250557	0					
ANR	1250658	Identifier	nsptr		1250557	0					
ANR	1250659	Identifier	href		1250557	1					
ANR	1250660	Argument	BAD_CAST ( type )		1250557	3					
ANR	1250661	CallExpression	BAD_CAST ( type )		1250557	0					
ANR	1250662	Callee	BAD_CAST		1250557	0					
ANR	1250663	Identifier	BAD_CAST		1250557	0					
ANR	1250664	ArgumentList	type		1250557	1					
ANR	1250665	Argument	type		1250557	0					
ANR	1250666	Identifier	type		1250557	0					
ANR	1250667	IfStatement	if ( type )		1250557	5					
ANR	1250668	Condition	type	936:6:31796:31799	1250557	0	True				
ANR	1250669	Identifier	type		1250557	0					
ANR	1250670	CompoundStatement		15:12:390:390	1250557	1					
ANR	1250671	ExpressionStatement	efree ( type )	936:13:31803:31814	1250557	0	True				
ANR	1250672	CallExpression	efree ( type )		1250557	0					
ANR	1250673	Callee	efree		1250557	0					
ANR	1250674	Identifier	efree		1250557	0					
ANR	1250675	ArgumentList	type		1250557	1					
ANR	1250676	Argument	type		1250557	0					
ANR	1250677	Identifier	type		1250557	0					
ANR	1250678	IfStatement	if ( ns )		1250557	6					
ANR	1250679	Condition	ns	937:6:31823:31824	1250557	0	True				
ANR	1250680	Identifier	ns		1250557	0					
ANR	1250681	CompoundStatement		16:10:415:415	1250557	1					
ANR	1250682	ExpressionStatement	efree ( ns )	937:11:31828:31837	1250557	0	True				
ANR	1250683	CallExpression	efree ( ns )		1250557	0					
ANR	1250684	Callee	efree		1250557	0					
ANR	1250685	Identifier	efree		1250557	0					
ANR	1250686	ArgumentList	ns		1250557	1					
ANR	1250687	Argument	ns		1250557	0					
ANR	1250688	Identifier	ns		1250557	0					
ANR	1250689	ElseStatement	else		1250557	0					
ANR	1250690	CompoundStatement		17:8:436:436	1250557	0					
ANR	1250691	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: extension has no 'base' attribute"" )"	939:2:31852:31925	1250557	0	True				
ANR	1250692	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: extension has no 'base' attribute"" )"		1250557	0					
ANR	1250693	Callee	soap_error0		1250557	0					
ANR	1250694	Identifier	soap_error0		1250557	0					
ANR	1250695	ArgumentList	E_ERROR		1250557	1					
ANR	1250696	Argument	E_ERROR		1250557	0					
ANR	1250697	Identifier	E_ERROR		1250557	0					
ANR	1250698	Argument	"""Parsing Schema: extension has no 'base' attribute"""		1250557	1					
ANR	1250699	PrimaryExpression	"""Parsing Schema: extension has no 'base' attribute"""		1250557	0					
ANR	1250700	ExpressionStatement	trav = extType -> children	942:1:31932:31956	1250557	4	True				
ANR	1250701	AssignmentExpression	trav = extType -> children		1250557	0		=			
ANR	1250702	Identifier	trav		1250557	0					
ANR	1250703	PtrMemberAccess	extType -> children		1250557	1					
ANR	1250704	Identifier	extType		1250557	0					
ANR	1250705	Identifier	children		1250557	1					
ANR	1250706	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1250557	5					
ANR	1250707	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	943:5:31963:32010	1250557	0	True				
ANR	1250708	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1250557	0		&&			
ANR	1250709	EqualityExpression	trav != NULL		1250557	0		!=			
ANR	1250710	Identifier	trav		1250557	0					
ANR	1250711	Identifier	NULL		1250557	1					
ANR	1250712	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1250557	1					
ANR	1250713	Callee	node_is_equal		1250557	0					
ANR	1250714	Identifier	node_is_equal		1250557	0					
ANR	1250715	ArgumentList	trav		1250557	1					
ANR	1250716	Argument	trav		1250557	0					
ANR	1250717	Identifier	trav		1250557	0					
ANR	1250718	Argument	"""annotation"""		1250557	1					
ANR	1250719	PrimaryExpression	"""annotation"""		1250557	0					
ANR	1250720	CompoundStatement		22:55:601:601	1250557	1					
ANR	1250721	ExpressionStatement	trav = trav -> next	945:2:32052:32069	1250557	0	True				
ANR	1250722	AssignmentExpression	trav = trav -> next		1250557	0		=			
ANR	1250723	Identifier	trav		1250557	0					
ANR	1250724	PtrMemberAccess	trav -> next		1250557	1					
ANR	1250725	Identifier	trav		1250557	0					
ANR	1250726	Identifier	next		1250557	1					
ANR	1250727	IfStatement	if ( trav != NULL )		1250557	6					
ANR	1250728	Condition	trav != NULL	947:5:32079:32090	1250557	0	True				
ANR	1250729	EqualityExpression	trav != NULL		1250557	0		!=			
ANR	1250730	Identifier	trav		1250557	0					
ANR	1250731	Identifier	NULL		1250557	1					
ANR	1250732	CompoundStatement		26:19:681:681	1250557	1					
ANR	1250733	IfStatement	"if ( node_is_equal ( trav , ""group"" ) )"		1250557	0					
ANR	1250734	Condition	"node_is_equal ( trav , ""group"" )"	948:6:32101:32127	1250557	0	True				
ANR	1250735	CallExpression	"node_is_equal ( trav , ""group"" )"		1250557	0					
ANR	1250736	Callee	node_is_equal		1250557	0					
ANR	1250737	Identifier	node_is_equal		1250557	0					
ANR	1250738	ArgumentList	trav		1250557	1					
ANR	1250739	Argument	trav		1250557	0					
ANR	1250740	Identifier	trav		1250557	0					
ANR	1250741	Argument	"""group"""		1250557	1					
ANR	1250742	PrimaryExpression	"""group"""		1250557	0					
ANR	1250743	CompoundStatement		27:35:718:718	1250557	1					
ANR	1250744	ExpressionStatement	"schema_group ( sdl , tns , trav , cur_type , NULL )"	949:3:32135:32179	1250557	0	True				
ANR	1250745	CallExpression	"schema_group ( sdl , tns , trav , cur_type , NULL )"		1250557	0					
ANR	1250746	Callee	schema_group		1250557	0					
ANR	1250747	Identifier	schema_group		1250557	0					
ANR	1250748	ArgumentList	sdl		1250557	1					
ANR	1250749	Argument	sdl		1250557	0					
ANR	1250750	Identifier	sdl		1250557	0					
ANR	1250751	Argument	tns		1250557	1					
ANR	1250752	Identifier	tns		1250557	0					
ANR	1250753	Argument	trav		1250557	2					
ANR	1250754	Identifier	trav		1250557	0					
ANR	1250755	Argument	cur_type		1250557	3					
ANR	1250756	Identifier	cur_type		1250557	0					
ANR	1250757	Argument	NULL		1250557	4					
ANR	1250758	Identifier	NULL		1250557	0					
ANR	1250759	ExpressionStatement	trav = trav -> next	950:3:32184:32201	1250557	1	True				
ANR	1250760	AssignmentExpression	trav = trav -> next		1250557	0		=			
ANR	1250761	Identifier	trav		1250557	0					
ANR	1250762	PtrMemberAccess	trav -> next		1250557	1					
ANR	1250763	Identifier	trav		1250557	0					
ANR	1250764	Identifier	next		1250557	1					
ANR	1250765	ElseStatement	else		1250557	0					
ANR	1250766	IfStatement	"if ( node_is_equal ( trav , ""all"" ) )"		1250557	0					
ANR	1250767	Condition	"node_is_equal ( trav , ""all"" )"	951:13:32216:32240	1250557	0	True				
ANR	1250768	CallExpression	"node_is_equal ( trav , ""all"" )"		1250557	0					
ANR	1250769	Callee	node_is_equal		1250557	0					
ANR	1250770	Identifier	node_is_equal		1250557	0					
ANR	1250771	ArgumentList	trav		1250557	1					
ANR	1250772	Argument	trav		1250557	0					
ANR	1250773	Identifier	trav		1250557	0					
ANR	1250774	Argument	"""all"""		1250557	1					
ANR	1250775	PrimaryExpression	"""all"""		1250557	0					
ANR	1250776	CompoundStatement		30:40:831:831	1250557	1					
ANR	1250777	ExpressionStatement	"schema_all ( sdl , tns , trav , cur_type , NULL )"	952:3:32248:32290	1250557	0	True				
ANR	1250778	CallExpression	"schema_all ( sdl , tns , trav , cur_type , NULL )"		1250557	0					
ANR	1250779	Callee	schema_all		1250557	0					
ANR	1250780	Identifier	schema_all		1250557	0					
ANR	1250781	ArgumentList	sdl		1250557	1					
ANR	1250782	Argument	sdl		1250557	0					
ANR	1250783	Identifier	sdl		1250557	0					
ANR	1250784	Argument	tns		1250557	1					
ANR	1250785	Identifier	tns		1250557	0					
ANR	1250786	Argument	trav		1250557	2					
ANR	1250787	Identifier	trav		1250557	0					
ANR	1250788	Argument	cur_type		1250557	3					
ANR	1250789	Identifier	cur_type		1250557	0					
ANR	1250790	Argument	NULL		1250557	4					
ANR	1250791	Identifier	NULL		1250557	0					
ANR	1250792	ExpressionStatement	trav = trav -> next	953:3:32295:32312	1250557	1	True				
ANR	1250793	AssignmentExpression	trav = trav -> next		1250557	0		=			
ANR	1250794	Identifier	trav		1250557	0					
ANR	1250795	PtrMemberAccess	trav -> next		1250557	1					
ANR	1250796	Identifier	trav		1250557	0					
ANR	1250797	Identifier	next		1250557	1					
ANR	1250798	ElseStatement	else		1250557	0					
ANR	1250799	IfStatement	"if ( node_is_equal ( trav , ""choice"" ) )"		1250557	0					
ANR	1250800	Condition	"node_is_equal ( trav , ""choice"" )"	954:13:32327:32354	1250557	0	True				
ANR	1250801	CallExpression	"node_is_equal ( trav , ""choice"" )"		1250557	0					
ANR	1250802	Callee	node_is_equal		1250557	0					
ANR	1250803	Identifier	node_is_equal		1250557	0					
ANR	1250804	ArgumentList	trav		1250557	1					
ANR	1250805	Argument	trav		1250557	0					
ANR	1250806	Identifier	trav		1250557	0					
ANR	1250807	Argument	"""choice"""		1250557	1					
ANR	1250808	PrimaryExpression	"""choice"""		1250557	0					
ANR	1250809	CompoundStatement		33:43:945:945	1250557	1					
ANR	1250810	ExpressionStatement	"schema_choice ( sdl , tns , trav , cur_type , NULL )"	955:3:32362:32407	1250557	0	True				
ANR	1250811	CallExpression	"schema_choice ( sdl , tns , trav , cur_type , NULL )"		1250557	0					
ANR	1250812	Callee	schema_choice		1250557	0					
ANR	1250813	Identifier	schema_choice		1250557	0					
ANR	1250814	ArgumentList	sdl		1250557	1					
ANR	1250815	Argument	sdl		1250557	0					
ANR	1250816	Identifier	sdl		1250557	0					
ANR	1250817	Argument	tns		1250557	1					
ANR	1250818	Identifier	tns		1250557	0					
ANR	1250819	Argument	trav		1250557	2					
ANR	1250820	Identifier	trav		1250557	0					
ANR	1250821	Argument	cur_type		1250557	3					
ANR	1250822	Identifier	cur_type		1250557	0					
ANR	1250823	Argument	NULL		1250557	4					
ANR	1250824	Identifier	NULL		1250557	0					
ANR	1250825	ExpressionStatement	trav = trav -> next	956:3:32412:32429	1250557	1	True				
ANR	1250826	AssignmentExpression	trav = trav -> next		1250557	0		=			
ANR	1250827	Identifier	trav		1250557	0					
ANR	1250828	PtrMemberAccess	trav -> next		1250557	1					
ANR	1250829	Identifier	trav		1250557	0					
ANR	1250830	Identifier	next		1250557	1					
ANR	1250831	ElseStatement	else		1250557	0					
ANR	1250832	IfStatement	"if ( node_is_equal ( trav , ""sequence"" ) )"		1250557	0					
ANR	1250833	Condition	"node_is_equal ( trav , ""sequence"" )"	957:13:32444:32473	1250557	0	True				
ANR	1250834	CallExpression	"node_is_equal ( trav , ""sequence"" )"		1250557	0					
ANR	1250835	Callee	node_is_equal		1250557	0					
ANR	1250836	Identifier	node_is_equal		1250557	0					
ANR	1250837	ArgumentList	trav		1250557	1					
ANR	1250838	Argument	trav		1250557	0					
ANR	1250839	Identifier	trav		1250557	0					
ANR	1250840	Argument	"""sequence"""		1250557	1					
ANR	1250841	PrimaryExpression	"""sequence"""		1250557	0					
ANR	1250842	CompoundStatement		36:45:1064:1064	1250557	1					
ANR	1250843	ExpressionStatement	"schema_sequence ( sdl , tns , trav , cur_type , NULL )"	958:3:32481:32528	1250557	0	True				
ANR	1250844	CallExpression	"schema_sequence ( sdl , tns , trav , cur_type , NULL )"		1250557	0					
ANR	1250845	Callee	schema_sequence		1250557	0					
ANR	1250846	Identifier	schema_sequence		1250557	0					
ANR	1250847	ArgumentList	sdl		1250557	1					
ANR	1250848	Argument	sdl		1250557	0					
ANR	1250849	Identifier	sdl		1250557	0					
ANR	1250850	Argument	tns		1250557	1					
ANR	1250851	Identifier	tns		1250557	0					
ANR	1250852	Argument	trav		1250557	2					
ANR	1250853	Identifier	trav		1250557	0					
ANR	1250854	Argument	cur_type		1250557	3					
ANR	1250855	Identifier	cur_type		1250557	0					
ANR	1250856	Argument	NULL		1250557	4					
ANR	1250857	Identifier	NULL		1250557	0					
ANR	1250858	ExpressionStatement	trav = trav -> next	959:3:32533:32550	1250557	1	True				
ANR	1250859	AssignmentExpression	trav = trav -> next		1250557	0		=			
ANR	1250860	Identifier	trav		1250557	0					
ANR	1250861	PtrMemberAccess	trav -> next		1250557	1					
ANR	1250862	Identifier	trav		1250557	0					
ANR	1250863	Identifier	next		1250557	1					
ANR	1250864	WhileStatement	while ( trav != NULL )		1250557	7					
ANR	1250865	Condition	trav != NULL	962:8:32567:32578	1250557	0	True				
ANR	1250866	EqualityExpression	trav != NULL		1250557	0		!=			
ANR	1250867	Identifier	trav		1250557	0					
ANR	1250868	Identifier	NULL		1250557	1					
ANR	1250869	CompoundStatement		41:22:1169:1169	1250557	1					
ANR	1250870	IfStatement	"if ( node_is_equal ( trav , ""attribute"" ) )"		1250557	0					
ANR	1250871	Condition	"node_is_equal ( trav , ""attribute"" )"	963:6:32589:32619	1250557	0	True				
ANR	1250872	CallExpression	"node_is_equal ( trav , ""attribute"" )"		1250557	0					
ANR	1250873	Callee	node_is_equal		1250557	0					
ANR	1250874	Identifier	node_is_equal		1250557	0					
ANR	1250875	ArgumentList	trav		1250557	1					
ANR	1250876	Argument	trav		1250557	0					
ANR	1250877	Identifier	trav		1250557	0					
ANR	1250878	Argument	"""attribute"""		1250557	1					
ANR	1250879	PrimaryExpression	"""attribute"""		1250557	0					
ANR	1250880	CompoundStatement		42:39:1210:1210	1250557	1					
ANR	1250881	ExpressionStatement	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"	964:3:32627:32675	1250557	0	True				
ANR	1250882	CallExpression	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"		1250557	0					
ANR	1250883	Callee	schema_attribute		1250557	0					
ANR	1250884	Identifier	schema_attribute		1250557	0					
ANR	1250885	ArgumentList	sdl		1250557	1					
ANR	1250886	Argument	sdl		1250557	0					
ANR	1250887	Identifier	sdl		1250557	0					
ANR	1250888	Argument	tns		1250557	1					
ANR	1250889	Identifier	tns		1250557	0					
ANR	1250890	Argument	trav		1250557	2					
ANR	1250891	Identifier	trav		1250557	0					
ANR	1250892	Argument	cur_type		1250557	3					
ANR	1250893	Identifier	cur_type		1250557	0					
ANR	1250894	Argument	NULL		1250557	4					
ANR	1250895	Identifier	NULL		1250557	0					
ANR	1250896	ElseStatement	else		1250557	0					
ANR	1250897	IfStatement	"if ( node_is_equal ( trav , ""attributeGroup"" ) )"		1250557	0					
ANR	1250898	Condition	"node_is_equal ( trav , ""attributeGroup"" )"	965:13:32690:32725	1250557	0	True				
ANR	1250899	CallExpression	"node_is_equal ( trav , ""attributeGroup"" )"		1250557	0					
ANR	1250900	Callee	node_is_equal		1250557	0					
ANR	1250901	Identifier	node_is_equal		1250557	0					
ANR	1250902	ArgumentList	trav		1250557	1					
ANR	1250903	Argument	trav		1250557	0					
ANR	1250904	Identifier	trav		1250557	0					
ANR	1250905	Argument	"""attributeGroup"""		1250557	1					
ANR	1250906	PrimaryExpression	"""attributeGroup"""		1250557	0					
ANR	1250907	CompoundStatement		44:51:1316:1316	1250557	1					
ANR	1250908	ExpressionStatement	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"	966:3:32733:32786	1250557	0	True				
ANR	1250909	CallExpression	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"		1250557	0					
ANR	1250910	Callee	schema_attributeGroup		1250557	0					
ANR	1250911	Identifier	schema_attributeGroup		1250557	0					
ANR	1250912	ArgumentList	sdl		1250557	1					
ANR	1250913	Argument	sdl		1250557	0					
ANR	1250914	Identifier	sdl		1250557	0					
ANR	1250915	Argument	tns		1250557	1					
ANR	1250916	Identifier	tns		1250557	0					
ANR	1250917	Argument	trav		1250557	2					
ANR	1250918	Identifier	trav		1250557	0					
ANR	1250919	Argument	cur_type		1250557	3					
ANR	1250920	Identifier	cur_type		1250557	0					
ANR	1250921	Argument	NULL		1250557	4					
ANR	1250922	Identifier	NULL		1250557	0					
ANR	1250923	ElseStatement	else		1250557	0					
ANR	1250924	IfStatement	"if ( node_is_equal ( trav , ""anyAttribute"" ) )"		1250557	0					
ANR	1250925	Condition	"node_is_equal ( trav , ""anyAttribute"" )"	967:13:32801:32834	1250557	0	True				
ANR	1250926	CallExpression	"node_is_equal ( trav , ""anyAttribute"" )"		1250557	0					
ANR	1250927	Callee	node_is_equal		1250557	0					
ANR	1250928	Identifier	node_is_equal		1250557	0					
ANR	1250929	ArgumentList	trav		1250557	1					
ANR	1250930	Argument	trav		1250557	0					
ANR	1250931	Identifier	trav		1250557	0					
ANR	1250932	Argument	"""anyAttribute"""		1250557	1					
ANR	1250933	PrimaryExpression	"""anyAttribute"""		1250557	0					
ANR	1250934	CompoundStatement		46:49:1425:1425	1250557	1					
ANR	1250935	ExpressionStatement	trav = trav -> next	969:3:32880:32897	1250557	0	True				
ANR	1250936	AssignmentExpression	trav = trav -> next		1250557	0		=			
ANR	1250937	Identifier	trav		1250557	0					
ANR	1250938	PtrMemberAccess	trav -> next		1250557	1					
ANR	1250939	Identifier	trav		1250557	0					
ANR	1250940	Identifier	next		1250557	1					
ANR	1250941	BreakStatement	break ;	970:3:32902:32907	1250557	1	True				
ANR	1250942	ElseStatement	else		1250557	0					
ANR	1250943	CompoundStatement		50:9:1506:1506	1250557	0					
ANR	1250944	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"	972:3:32923:33003	1250557	0	True				
ANR	1250945	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"		1250557	0					
ANR	1250946	Callee	soap_error1		1250557	0					
ANR	1250947	Identifier	soap_error1		1250557	0					
ANR	1250948	ArgumentList	E_ERROR		1250557	1					
ANR	1250949	Argument	E_ERROR		1250557	0					
ANR	1250950	Identifier	E_ERROR		1250557	0					
ANR	1250951	Argument	"""Parsing Schema: unexpected <%s> in extension"""		1250557	1					
ANR	1250952	PrimaryExpression	"""Parsing Schema: unexpected <%s> in extension"""		1250557	0					
ANR	1250953	Argument	trav -> name		1250557	2					
ANR	1250954	PtrMemberAccess	trav -> name		1250557	0					
ANR	1250955	Identifier	trav		1250557	0					
ANR	1250956	Identifier	name		1250557	1					
ANR	1250957	ExpressionStatement	trav = trav -> next	974:2:33011:33028	1250557	1	True				
ANR	1250958	AssignmentExpression	trav = trav -> next		1250557	0		=			
ANR	1250959	Identifier	trav		1250557	0					
ANR	1250960	PtrMemberAccess	trav -> next		1250557	1					
ANR	1250961	Identifier	trav		1250557	0					
ANR	1250962	Identifier	next		1250557	1					
ANR	1250963	IfStatement	if ( trav != NULL )		1250557	8					
ANR	1250964	Condition	trav != NULL	976:5:33038:33049	1250557	0	True				
ANR	1250965	EqualityExpression	trav != NULL		1250557	0		!=			
ANR	1250966	Identifier	trav		1250557	0					
ANR	1250967	Identifier	NULL		1250557	1					
ANR	1250968	CompoundStatement		55:19:1640:1640	1250557	1					
ANR	1250969	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"	977:2:33056:33136	1250557	0	True				
ANR	1250970	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in extension"" , trav -> name )"		1250557	0					
ANR	1250971	Callee	soap_error1		1250557	0					
ANR	1250972	Identifier	soap_error1		1250557	0					
ANR	1250973	ArgumentList	E_ERROR		1250557	1					
ANR	1250974	Argument	E_ERROR		1250557	0					
ANR	1250975	Identifier	E_ERROR		1250557	0					
ANR	1250976	Argument	"""Parsing Schema: unexpected <%s> in extension"""		1250557	1					
ANR	1250977	PrimaryExpression	"""Parsing Schema: unexpected <%s> in extension"""		1250557	0					
ANR	1250978	Argument	trav -> name		1250557	2					
ANR	1250979	PtrMemberAccess	trav -> name		1250557	0					
ANR	1250980	Identifier	trav		1250557	0					
ANR	1250981	Identifier	name		1250557	1					
ANR	1250982	ReturnStatement	return TRUE ;	979:1:33142:33153	1250557	9	True				
ANR	1250983	Identifier	TRUE		1250557	0					
ANR	1250984	ReturnType	static int		1250557	1					
ANR	1250985	Identifier	schema_extension_complexContent		1250557	2					
ANR	1250986	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr extType , sdlTypePtr cur_type"		1250557	3					
ANR	1250987	Parameter	sdlPtr sdl	921:43:31342:31351	1250557	0	True				
ANR	1250988	ParameterType	sdlPtr		1250557	0					
ANR	1250989	Identifier	sdl		1250557	1					
ANR	1250990	Parameter	xmlAttrPtr tns	921:55:31354:31367	1250557	1	True				
ANR	1250991	ParameterType	xmlAttrPtr		1250557	0					
ANR	1250992	Identifier	tns		1250557	1					
ANR	1250993	Parameter	xmlNodePtr extType	921:71:31370:31387	1250557	2	True				
ANR	1250994	ParameterType	xmlNodePtr		1250557	0					
ANR	1250995	Identifier	extType		1250557	1					
ANR	1250996	Parameter	sdlTypePtr cur_type	921:91:31390:31408	1250557	3	True				
ANR	1250997	ParameterType	sdlTypePtr		1250557	0					
ANR	1250998	Identifier	cur_type		1250557	1					
ANR	1250999	CFGEntryNode	ENTRY		1250557		True				
ANR	1251000	CFGExitNode	EXIT		1250557		True				
ANR	1251001	Symbol	* extType		1250557						
ANR	1251002	Symbol	extType -> properties		1250557						
ANR	1251003	Symbol	trav -> next		1250557						
ANR	1251004	Symbol	get_attribute		1250557						
ANR	1251005	Symbol	trav		1250557						
ANR	1251006	Symbol	ns		1250557						
ANR	1251007	Symbol	base -> children		1250557						
ANR	1251008	Symbol	type		1250557						
ANR	1251009	Symbol	node_is_equal		1250557						
ANR	1251010	Symbol	nsptr		1250557						
ANR	1251011	Symbol	* trav		1250557						
ANR	1251012	Symbol	* base -> children		1250557						
ANR	1251013	Symbol	* base		1250557						
ANR	1251014	Symbol	extType		1250557						
ANR	1251015	Symbol	cur_type		1250557						
ANR	1251016	Symbol	extType -> children		1250557						
ANR	1251017	Symbol	NULL		1250557						
ANR	1251018	Symbol	nsptr -> href		1250557						
ANR	1251019	Symbol	& type		1250557						
ANR	1251020	Symbol	* * base		1250557						
ANR	1251021	Symbol	TRUE		1250557						
ANR	1251022	Symbol	xmlSearchNs		1250557						
ANR	1251023	Symbol	& ns		1250557						
ANR	1251024	Symbol	* cur_type		1250557						
ANR	1251025	Symbol	extType -> doc		1250557						
ANR	1251026	Symbol	base -> children -> content		1250557						
ANR	1251027	Symbol	E_ERROR		1250557						
ANR	1251028	Symbol	cur_type -> encode		1250557						
ANR	1251029	Symbol	* nsptr		1250557						
ANR	1251030	Symbol	tns		1250557						
ANR	1251031	Symbol	sdl		1250557						
ANR	1251032	Symbol	trav -> name		1250557						
ANR	1251033	Symbol	get_create_encoder		1250557						
ANR	1251034	Symbol	base		1250557						
ANR	1251035	Symbol	BAD_CAST		1250557						
ANR	1251036	Function	schema_min_max	982:0:33158:33693							
ANR	1251037	FunctionDef	"schema_min_max (xmlNodePtr node , sdlContentModelPtr model)"		1251036	0					
ANR	1251038	CompoundStatement		983:0:33221:33693	1251036	0					
ANR	1251039	IdentifierDeclStatement	"xmlAttrPtr attr = get_attribute ( node -> properties , ""minOccurs"" ) ;"	984:1:33224:33286	1251036	0	True				
ANR	1251040	IdentifierDecl	"attr = get_attribute ( node -> properties , ""minOccurs"" )"		1251036	0					
ANR	1251041	IdentifierDeclType	xmlAttrPtr		1251036	0					
ANR	1251042	Identifier	attr		1251036	1					
ANR	1251043	AssignmentExpression	"attr = get_attribute ( node -> properties , ""minOccurs"" )"		1251036	2		=			
ANR	1251044	Identifier	attr		1251036	0					
ANR	1251045	CallExpression	"get_attribute ( node -> properties , ""minOccurs"" )"		1251036	1					
ANR	1251046	Callee	get_attribute		1251036	0					
ANR	1251047	Identifier	get_attribute		1251036	0					
ANR	1251048	ArgumentList	node -> properties		1251036	1					
ANR	1251049	Argument	node -> properties		1251036	0					
ANR	1251050	PtrMemberAccess	node -> properties		1251036	0					
ANR	1251051	Identifier	node		1251036	0					
ANR	1251052	Identifier	properties		1251036	1					
ANR	1251053	Argument	"""minOccurs"""		1251036	1					
ANR	1251054	PrimaryExpression	"""minOccurs"""		1251036	0					
ANR	1251055	IfStatement	if ( attr )		1251036	1					
ANR	1251056	Condition	attr	986:5:33294:33297	1251036	0	True				
ANR	1251057	Identifier	attr		1251036	0					
ANR	1251058	CompoundStatement		4:11:78:78	1251036	1					
ANR	1251059	ExpressionStatement	model -> min_occurs = atoi ( ( char * ) attr -> children -> content )	987:2:33304:33360	1251036	0	True				
ANR	1251060	AssignmentExpression	model -> min_occurs = atoi ( ( char * ) attr -> children -> content )		1251036	0		=			
ANR	1251061	PtrMemberAccess	model -> min_occurs		1251036	0					
ANR	1251062	Identifier	model		1251036	0					
ANR	1251063	Identifier	min_occurs		1251036	1					
ANR	1251064	CallExpression	atoi ( ( char * ) attr -> children -> content )		1251036	1					
ANR	1251065	Callee	atoi		1251036	0					
ANR	1251066	Identifier	atoi		1251036	0					
ANR	1251067	ArgumentList	( char * ) attr -> children -> content		1251036	1					
ANR	1251068	Argument	( char * ) attr -> children -> content		1251036	0					
ANR	1251069	CastExpression	( char * ) attr -> children -> content		1251036	0					
ANR	1251070	CastTarget	char *		1251036	0					
ANR	1251071	PtrMemberAccess	attr -> children -> content		1251036	1					
ANR	1251072	PtrMemberAccess	attr -> children		1251036	0					
ANR	1251073	Identifier	attr		1251036	0					
ANR	1251074	Identifier	children		1251036	1					
ANR	1251075	Identifier	content		1251036	1					
ANR	1251076	ElseStatement	else		1251036	0					
ANR	1251077	CompoundStatement		6:8:148:148	1251036	0					
ANR	1251078	ExpressionStatement	model -> min_occurs = 1	989:2:33374:33395	1251036	0	True				
ANR	1251079	AssignmentExpression	model -> min_occurs = 1		1251036	0		=			
ANR	1251080	PtrMemberAccess	model -> min_occurs		1251036	0					
ANR	1251081	Identifier	model		1251036	0					
ANR	1251082	Identifier	min_occurs		1251036	1					
ANR	1251083	PrimaryExpression	1		1251036	1					
ANR	1251084	ExpressionStatement	"attr = get_attribute ( node -> properties , ""maxOccurs"" )"	992:1:33402:33453	1251036	2	True				
ANR	1251085	AssignmentExpression	"attr = get_attribute ( node -> properties , ""maxOccurs"" )"		1251036	0		=			
ANR	1251086	Identifier	attr		1251036	0					
ANR	1251087	CallExpression	"get_attribute ( node -> properties , ""maxOccurs"" )"		1251036	1					
ANR	1251088	Callee	get_attribute		1251036	0					
ANR	1251089	Identifier	get_attribute		1251036	0					
ANR	1251090	ArgumentList	node -> properties		1251036	1					
ANR	1251091	Argument	node -> properties		1251036	0					
ANR	1251092	PtrMemberAccess	node -> properties		1251036	0					
ANR	1251093	Identifier	node		1251036	0					
ANR	1251094	Identifier	properties		1251036	1					
ANR	1251095	Argument	"""maxOccurs"""		1251036	1					
ANR	1251096	PrimaryExpression	"""maxOccurs"""		1251036	0					
ANR	1251097	IfStatement	if ( attr )		1251036	3					
ANR	1251098	Condition	attr	993:5:33460:33463	1251036	0	True				
ANR	1251099	Identifier	attr		1251036	0					
ANR	1251100	CompoundStatement		11:11:244:244	1251036	1					
ANR	1251101	IfStatement	"if ( ! strncmp ( ( char * ) attr -> children -> content , ""unbounded"" , sizeof ( ""unbounded"" ) ) )"		1251036	0					
ANR	1251102	Condition	"! strncmp ( ( char * ) attr -> children -> content , ""unbounded"" , sizeof ( ""unbounded"" ) )"	994:6:33474:33547	1251036	0	True				
ANR	1251103	UnaryOperationExpression	"! strncmp ( ( char * ) attr -> children -> content , ""unbounded"" , sizeof ( ""unbounded"" ) )"		1251036	0					
ANR	1251104	UnaryOperator	!		1251036	0					
ANR	1251105	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""unbounded"" , sizeof ( ""unbounded"" ) )"		1251036	1					
ANR	1251106	Callee	strncmp		1251036	0					
ANR	1251107	Identifier	strncmp		1251036	0					
ANR	1251108	ArgumentList	( char * ) attr -> children -> content		1251036	1					
ANR	1251109	Argument	( char * ) attr -> children -> content		1251036	0					
ANR	1251110	CastExpression	( char * ) attr -> children -> content		1251036	0					
ANR	1251111	CastTarget	char *		1251036	0					
ANR	1251112	PtrMemberAccess	attr -> children -> content		1251036	1					
ANR	1251113	PtrMemberAccess	attr -> children		1251036	0					
ANR	1251114	Identifier	attr		1251036	0					
ANR	1251115	Identifier	children		1251036	1					
ANR	1251116	Identifier	content		1251036	1					
ANR	1251117	Argument	"""unbounded"""		1251036	1					
ANR	1251118	PrimaryExpression	"""unbounded"""		1251036	0					
ANR	1251119	Argument	"sizeof ( ""unbounded"" )"		1251036	2					
ANR	1251120	SizeofExpression	"sizeof ( ""unbounded"" )"		1251036	0					
ANR	1251121	Sizeof	sizeof		1251036	0					
ANR	1251122	PrimaryExpression	"""unbounded"""		1251036	1					
ANR	1251123	CompoundStatement		12:82:328:328	1251036	1					
ANR	1251124	ExpressionStatement	model -> max_occurs = - 1	995:3:33555:33577	1251036	0	True				
ANR	1251125	AssignmentExpression	model -> max_occurs = - 1		1251036	0		=			
ANR	1251126	PtrMemberAccess	model -> max_occurs		1251036	0					
ANR	1251127	Identifier	model		1251036	0					
ANR	1251128	Identifier	max_occurs		1251036	1					
ANR	1251129	UnaryOperationExpression	- 1		1251036	1					
ANR	1251130	UnaryOperator	-		1251036	0					
ANR	1251131	PrimaryExpression	1		1251036	1					
ANR	1251132	ElseStatement	else		1251036	0					
ANR	1251133	CompoundStatement		14:9:366:366	1251036	0					
ANR	1251134	ExpressionStatement	model -> max_occurs = atoi ( ( char * ) attr -> children -> content )	997:3:33593:33649	1251036	0	True				
ANR	1251135	AssignmentExpression	model -> max_occurs = atoi ( ( char * ) attr -> children -> content )		1251036	0		=			
ANR	1251136	PtrMemberAccess	model -> max_occurs		1251036	0					
ANR	1251137	Identifier	model		1251036	0					
ANR	1251138	Identifier	max_occurs		1251036	1					
ANR	1251139	CallExpression	atoi ( ( char * ) attr -> children -> content )		1251036	1					
ANR	1251140	Callee	atoi		1251036	0					
ANR	1251141	Identifier	atoi		1251036	0					
ANR	1251142	ArgumentList	( char * ) attr -> children -> content		1251036	1					
ANR	1251143	Argument	( char * ) attr -> children -> content		1251036	0					
ANR	1251144	CastExpression	( char * ) attr -> children -> content		1251036	0					
ANR	1251145	CastTarget	char *		1251036	0					
ANR	1251146	PtrMemberAccess	attr -> children -> content		1251036	1					
ANR	1251147	PtrMemberAccess	attr -> children		1251036	0					
ANR	1251148	Identifier	attr		1251036	0					
ANR	1251149	Identifier	children		1251036	1					
ANR	1251150	Identifier	content		1251036	1					
ANR	1251151	ElseStatement	else		1251036	0					
ANR	1251152	CompoundStatement		17:8:441:441	1251036	0					
ANR	1251153	ExpressionStatement	model -> max_occurs = 1	1000:2:33667:33688	1251036	0	True				
ANR	1251154	AssignmentExpression	model -> max_occurs = 1		1251036	0		=			
ANR	1251155	PtrMemberAccess	model -> max_occurs		1251036	0					
ANR	1251156	Identifier	model		1251036	0					
ANR	1251157	Identifier	max_occurs		1251036	1					
ANR	1251158	PrimaryExpression	1		1251036	1					
ANR	1251159	ReturnType	void		1251036	1					
ANR	1251160	Identifier	schema_min_max		1251036	2					
ANR	1251161	ParameterList	"xmlNodePtr node , sdlContentModelPtr model"		1251036	3					
ANR	1251162	Parameter	xmlNodePtr node	982:20:33178:33192	1251036	0	True				
ANR	1251163	ParameterType	xmlNodePtr		1251036	0					
ANR	1251164	Identifier	node		1251036	1					
ANR	1251165	Parameter	sdlContentModelPtr model	982:37:33195:33218	1251036	1	True				
ANR	1251166	ParameterType	sdlContentModelPtr		1251036	0					
ANR	1251167	Identifier	model		1251036	1					
ANR	1251168	CFGEntryNode	ENTRY		1251036		True				
ANR	1251169	CFGExitNode	EXIT		1251036		True				
ANR	1251170	Symbol	atoi		1251036						
ANR	1251171	Symbol	get_attribute		1251036						
ANR	1251172	Symbol	model -> max_occurs		1251036						
ANR	1251173	Symbol	* model		1251036						
ANR	1251174	Symbol	attr -> children -> content		1251036						
ANR	1251175	Symbol	* * attr		1251036						
ANR	1251176	Symbol	node -> properties		1251036						
ANR	1251177	Symbol	* attr -> children		1251036						
ANR	1251178	Symbol	attr -> children		1251036						
ANR	1251179	Symbol	node		1251036						
ANR	1251180	Symbol	strncmp		1251036						
ANR	1251181	Symbol	model		1251036						
ANR	1251182	Symbol	* node		1251036						
ANR	1251183	Symbol	model -> min_occurs		1251036						
ANR	1251184	Symbol	* attr		1251036						
ANR	1251185	Symbol	attr		1251036						
ANR	1251186	Function	schema_all	1013:0:33857:34797							
ANR	1251187	FunctionDef	"schema_all (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr all , sdlTypePtr cur_type , sdlContentModelPtr model)"		1251186	0					
ANR	1251188	CompoundStatement		1014:0:33970:34797	1251186	0					
ANR	1251189	IdentifierDeclStatement	xmlNodePtr trav ;	1015:1:33973:33988	1251186	0	True				
ANR	1251190	IdentifierDecl	trav		1251186	0					
ANR	1251191	IdentifierDeclType	xmlNodePtr		1251186	0					
ANR	1251192	Identifier	trav		1251186	1					
ANR	1251193	IdentifierDeclStatement	sdlContentModelPtr newModel ;	1016:1:33991:34018	1251186	1	True				
ANR	1251194	IdentifierDecl	newModel		1251186	0					
ANR	1251195	IdentifierDeclType	sdlContentModelPtr		1251186	0					
ANR	1251196	Identifier	newModel		1251186	1					
ANR	1251197	ExpressionStatement	newModel = emalloc ( sizeof ( sdlContentModel ) )	1018:1:34022:34065	1251186	2	True				
ANR	1251198	AssignmentExpression	newModel = emalloc ( sizeof ( sdlContentModel ) )		1251186	0		=			
ANR	1251199	Identifier	newModel		1251186	0					
ANR	1251200	CallExpression	emalloc ( sizeof ( sdlContentModel ) )		1251186	1					
ANR	1251201	Callee	emalloc		1251186	0					
ANR	1251202	Identifier	emalloc		1251186	0					
ANR	1251203	ArgumentList	sizeof ( sdlContentModel )		1251186	1					
ANR	1251204	Argument	sizeof ( sdlContentModel )		1251186	0					
ANR	1251205	SizeofExpression	sizeof ( sdlContentModel )		1251186	0					
ANR	1251206	Sizeof	sizeof		1251186	0					
ANR	1251207	SizeofOperand	sdlContentModel		1251186	1					
ANR	1251208	ExpressionStatement	newModel -> kind = XSD_CONTENT_ALL	1019:1:34068:34100	1251186	3	True				
ANR	1251209	AssignmentExpression	newModel -> kind = XSD_CONTENT_ALL		1251186	0		=			
ANR	1251210	PtrMemberAccess	newModel -> kind		1251186	0					
ANR	1251211	Identifier	newModel		1251186	0					
ANR	1251212	Identifier	kind		1251186	1					
ANR	1251213	Identifier	XSD_CONTENT_ALL		1251186	1					
ANR	1251214	ExpressionStatement	newModel -> u . content = emalloc ( sizeof ( HashTable ) )	1020:1:34103:34151	1251186	4	True				
ANR	1251215	AssignmentExpression	newModel -> u . content = emalloc ( sizeof ( HashTable ) )		1251186	0		=			
ANR	1251216	MemberAccess	newModel -> u . content		1251186	0					
ANR	1251217	PtrMemberAccess	newModel -> u		1251186	0					
ANR	1251218	Identifier	newModel		1251186	0					
ANR	1251219	Identifier	u		1251186	1					
ANR	1251220	Identifier	content		1251186	1					
ANR	1251221	CallExpression	emalloc ( sizeof ( HashTable ) )		1251186	1					
ANR	1251222	Callee	emalloc		1251186	0					
ANR	1251223	Identifier	emalloc		1251186	0					
ANR	1251224	ArgumentList	sizeof ( HashTable )		1251186	1					
ANR	1251225	Argument	sizeof ( HashTable )		1251186	0					
ANR	1251226	SizeofExpression	sizeof ( HashTable )		1251186	0					
ANR	1251227	Sizeof	sizeof		1251186	0					
ANR	1251228	SizeofOperand	HashTable		1251186	1					
ANR	1251229	ExpressionStatement	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"	1021:1:34154:34215	1251186	5	True				
ANR	1251230	CallExpression	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"		1251186	0					
ANR	1251231	Callee	zend_hash_init		1251186	0					
ANR	1251232	Identifier	zend_hash_init		1251186	0					
ANR	1251233	ArgumentList	newModel -> u . content		1251186	1					
ANR	1251234	Argument	newModel -> u . content		1251186	0					
ANR	1251235	MemberAccess	newModel -> u . content		1251186	0					
ANR	1251236	PtrMemberAccess	newModel -> u		1251186	0					
ANR	1251237	Identifier	newModel		1251186	0					
ANR	1251238	Identifier	u		1251186	1					
ANR	1251239	Identifier	content		1251186	1					
ANR	1251240	Argument	0		1251186	1					
ANR	1251241	PrimaryExpression	0		1251186	0					
ANR	1251242	Argument	NULL		1251186	2					
ANR	1251243	Identifier	NULL		1251186	0					
ANR	1251244	Argument	delete_model		1251186	3					
ANR	1251245	Identifier	delete_model		1251186	0					
ANR	1251246	Argument	0		1251186	4					
ANR	1251247	PrimaryExpression	0		1251186	0					
ANR	1251248	IfStatement	if ( model == NULL )		1251186	6					
ANR	1251249	Condition	model == NULL	1022:5:34222:34234	1251186	0	True				
ANR	1251250	EqualityExpression	model == NULL		1251186	0		==			
ANR	1251251	Identifier	model		1251186	0					
ANR	1251252	Identifier	NULL		1251186	1					
ANR	1251253	CompoundStatement		9:20:266:266	1251186	1					
ANR	1251254	ExpressionStatement	cur_type -> model = newModel	1023:2:34241:34267	1251186	0	True				
ANR	1251255	AssignmentExpression	cur_type -> model = newModel		1251186	0		=			
ANR	1251256	PtrMemberAccess	cur_type -> model		1251186	0					
ANR	1251257	Identifier	cur_type		1251186	0					
ANR	1251258	Identifier	model		1251186	1					
ANR	1251259	Identifier	newModel		1251186	1					
ANR	1251260	ElseStatement	else		1251186	0					
ANR	1251261	CompoundStatement		11:8:306:306	1251186	0					
ANR	1251262	ExpressionStatement	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"	1025:2:34281:34369	1251186	0	True				
ANR	1251263	CallExpression	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"		1251186	0					
ANR	1251264	Callee	zend_hash_next_index_insert		1251186	0					
ANR	1251265	Identifier	zend_hash_next_index_insert		1251186	0					
ANR	1251266	ArgumentList	model -> u . content		1251186	1					
ANR	1251267	Argument	model -> u . content		1251186	0					
ANR	1251268	MemberAccess	model -> u . content		1251186	0					
ANR	1251269	PtrMemberAccess	model -> u		1251186	0					
ANR	1251270	Identifier	model		1251186	0					
ANR	1251271	Identifier	u		1251186	1					
ANR	1251272	Identifier	content		1251186	1					
ANR	1251273	Argument	& newModel		1251186	1					
ANR	1251274	UnaryOperationExpression	& newModel		1251186	0					
ANR	1251275	UnaryOperator	&		1251186	0					
ANR	1251276	Identifier	newModel		1251186	1					
ANR	1251277	Argument	sizeof ( sdlContentModelPtr )		1251186	2					
ANR	1251278	SizeofExpression	sizeof ( sdlContentModelPtr )		1251186	0					
ANR	1251279	Sizeof	sizeof		1251186	0					
ANR	1251280	SizeofOperand	sdlContentModelPtr		1251186	1					
ANR	1251281	Argument	NULL		1251186	3					
ANR	1251282	Identifier	NULL		1251186	0					
ANR	1251283	ExpressionStatement	"schema_min_max ( all , newModel )"	1028:1:34376:34405	1251186	7	True				
ANR	1251284	CallExpression	"schema_min_max ( all , newModel )"		1251186	0					
ANR	1251285	Callee	schema_min_max		1251186	0					
ANR	1251286	Identifier	schema_min_max		1251186	0					
ANR	1251287	ArgumentList	all		1251186	1					
ANR	1251288	Argument	all		1251186	0					
ANR	1251289	Identifier	all		1251186	0					
ANR	1251290	Argument	newModel		1251186	1					
ANR	1251291	Identifier	newModel		1251186	0					
ANR	1251292	ExpressionStatement	trav = all -> children	1030:1:34409:34429	1251186	8	True				
ANR	1251293	AssignmentExpression	trav = all -> children		1251186	0		=			
ANR	1251294	Identifier	trav		1251186	0					
ANR	1251295	PtrMemberAccess	all -> children		1251186	1					
ANR	1251296	Identifier	all		1251186	0					
ANR	1251297	Identifier	children		1251186	1					
ANR	1251298	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1251186	9					
ANR	1251299	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1031:5:34436:34483	1251186	0	True				
ANR	1251300	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1251186	0		&&			
ANR	1251301	EqualityExpression	trav != NULL		1251186	0		!=			
ANR	1251302	Identifier	trav		1251186	0					
ANR	1251303	Identifier	NULL		1251186	1					
ANR	1251304	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1251186	1					
ANR	1251305	Callee	node_is_equal		1251186	0					
ANR	1251306	Identifier	node_is_equal		1251186	0					
ANR	1251307	ArgumentList	trav		1251186	1					
ANR	1251308	Argument	trav		1251186	0					
ANR	1251309	Identifier	trav		1251186	0					
ANR	1251310	Argument	"""annotation"""		1251186	1					
ANR	1251311	PrimaryExpression	"""annotation"""		1251186	0					
ANR	1251312	CompoundStatement		18:55:515:515	1251186	1					
ANR	1251313	ExpressionStatement	trav = trav -> next	1033:2:34525:34542	1251186	0	True				
ANR	1251314	AssignmentExpression	trav = trav -> next		1251186	0		=			
ANR	1251315	Identifier	trav		1251186	0					
ANR	1251316	PtrMemberAccess	trav -> next		1251186	1					
ANR	1251317	Identifier	trav		1251186	0					
ANR	1251318	Identifier	next		1251186	1					
ANR	1251319	WhileStatement	while ( trav != NULL )		1251186	10					
ANR	1251320	Condition	trav != NULL	1035:8:34555:34566	1251186	0	True				
ANR	1251321	EqualityExpression	trav != NULL		1251186	0		!=			
ANR	1251322	Identifier	trav		1251186	0					
ANR	1251323	Identifier	NULL		1251186	1					
ANR	1251324	CompoundStatement		22:22:598:598	1251186	1					
ANR	1251325	IfStatement	"if ( node_is_equal ( trav , ""element"" ) )"		1251186	0					
ANR	1251326	Condition	"node_is_equal ( trav , ""element"" )"	1036:6:34577:34605	1251186	0	True				
ANR	1251327	CallExpression	"node_is_equal ( trav , ""element"" )"		1251186	0					
ANR	1251328	Callee	node_is_equal		1251186	0					
ANR	1251329	Identifier	node_is_equal		1251186	0					
ANR	1251330	ArgumentList	trav		1251186	1					
ANR	1251331	Argument	trav		1251186	0					
ANR	1251332	Identifier	trav		1251186	0					
ANR	1251333	Argument	"""element"""		1251186	1					
ANR	1251334	PrimaryExpression	"""element"""		1251186	0					
ANR	1251335	CompoundStatement		23:37:637:637	1251186	1					
ANR	1251336	ExpressionStatement	"schema_element ( sdl , tns , trav , cur_type , newModel )"	1037:3:34613:34663	1251186	0	True				
ANR	1251337	CallExpression	"schema_element ( sdl , tns , trav , cur_type , newModel )"		1251186	0					
ANR	1251338	Callee	schema_element		1251186	0					
ANR	1251339	Identifier	schema_element		1251186	0					
ANR	1251340	ArgumentList	sdl		1251186	1					
ANR	1251341	Argument	sdl		1251186	0					
ANR	1251342	Identifier	sdl		1251186	0					
ANR	1251343	Argument	tns		1251186	1					
ANR	1251344	Identifier	tns		1251186	0					
ANR	1251345	Argument	trav		1251186	2					
ANR	1251346	Identifier	trav		1251186	0					
ANR	1251347	Argument	cur_type		1251186	3					
ANR	1251348	Identifier	cur_type		1251186	0					
ANR	1251349	Argument	newModel		1251186	4					
ANR	1251350	Identifier	newModel		1251186	0					
ANR	1251351	ElseStatement	else		1251186	0					
ANR	1251352	CompoundStatement		25:9:703:703	1251186	0					
ANR	1251353	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in all"" , trav -> name )"	1039:3:34679:34753	1251186	0	True				
ANR	1251354	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in all"" , trav -> name )"		1251186	0					
ANR	1251355	Callee	soap_error1		1251186	0					
ANR	1251356	Identifier	soap_error1		1251186	0					
ANR	1251357	ArgumentList	E_ERROR		1251186	1					
ANR	1251358	Argument	E_ERROR		1251186	0					
ANR	1251359	Identifier	E_ERROR		1251186	0					
ANR	1251360	Argument	"""Parsing Schema: unexpected <%s> in all"""		1251186	1					
ANR	1251361	PrimaryExpression	"""Parsing Schema: unexpected <%s> in all"""		1251186	0					
ANR	1251362	Argument	trav -> name		1251186	2					
ANR	1251363	PtrMemberAccess	trav -> name		1251186	0					
ANR	1251364	Identifier	trav		1251186	0					
ANR	1251365	Identifier	name		1251186	1					
ANR	1251366	ExpressionStatement	trav = trav -> next	1041:2:34761:34778	1251186	1	True				
ANR	1251367	AssignmentExpression	trav = trav -> next		1251186	0		=			
ANR	1251368	Identifier	trav		1251186	0					
ANR	1251369	PtrMemberAccess	trav -> next		1251186	1					
ANR	1251370	Identifier	trav		1251186	0					
ANR	1251371	Identifier	next		1251186	1					
ANR	1251372	ReturnStatement	return TRUE ;	1043:1:34784:34795	1251186	11	True				
ANR	1251373	Identifier	TRUE		1251186	0					
ANR	1251374	ReturnType	static int		1251186	1					
ANR	1251375	Identifier	schema_all		1251186	2					
ANR	1251376	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr all , sdlTypePtr cur_type , sdlContentModelPtr model"		1251186	3					
ANR	1251377	Parameter	sdlPtr sdl	1013:22:33879:33888	1251186	0	True				
ANR	1251378	ParameterType	sdlPtr		1251186	0					
ANR	1251379	Identifier	sdl		1251186	1					
ANR	1251380	Parameter	xmlAttrPtr tns	1013:34:33891:33904	1251186	1	True				
ANR	1251381	ParameterType	xmlAttrPtr		1251186	0					
ANR	1251382	Identifier	tns		1251186	1					
ANR	1251383	Parameter	xmlNodePtr all	1013:50:33907:33920	1251186	2	True				
ANR	1251384	ParameterType	xmlNodePtr		1251186	0					
ANR	1251385	Identifier	all		1251186	1					
ANR	1251386	Parameter	sdlTypePtr cur_type	1013:66:33923:33941	1251186	3	True				
ANR	1251387	ParameterType	sdlTypePtr		1251186	0					
ANR	1251388	Identifier	cur_type		1251186	1					
ANR	1251389	Parameter	sdlContentModelPtr model	1013:87:33944:33967	1251186	4	True				
ANR	1251390	ParameterType	sdlContentModelPtr		1251186	0					
ANR	1251391	Identifier	model		1251186	1					
ANR	1251392	CFGEntryNode	ENTRY		1251186		True				
ANR	1251393	CFGExitNode	EXIT		1251186		True				
ANR	1251394	Symbol	XSD_CONTENT_ALL		1251186						
ANR	1251395	Symbol	model -> u		1251186						
ANR	1251396	Symbol	trav -> next		1251186						
ANR	1251397	Symbol	trav		1251186						
ANR	1251398	Symbol	node_is_equal		1251186						
ANR	1251399	Symbol	model -> u . content		1251186						
ANR	1251400	Symbol	* trav		1251186						
ANR	1251401	Symbol	cur_type -> model		1251186						
ANR	1251402	Symbol	emalloc		1251186						
ANR	1251403	Symbol	model		1251186						
ANR	1251404	Symbol	delete_model		1251186						
ANR	1251405	Symbol	cur_type		1251186						
ANR	1251406	Symbol	all		1251186						
ANR	1251407	Symbol	NULL		1251186						
ANR	1251408	Symbol	* model		1251186						
ANR	1251409	Symbol	TRUE		1251186						
ANR	1251410	Symbol	all -> children		1251186						
ANR	1251411	Symbol	* newModel		1251186						
ANR	1251412	Symbol	* cur_type		1251186						
ANR	1251413	Symbol	& newModel		1251186						
ANR	1251414	Symbol	newModel		1251186						
ANR	1251415	Symbol	E_ERROR		1251186						
ANR	1251416	Symbol	* all		1251186						
ANR	1251417	Symbol	tns		1251186						
ANR	1251418	Symbol	newModel -> kind		1251186						
ANR	1251419	Symbol	sdl		1251186						
ANR	1251420	Symbol	trav -> name		1251186						
ANR	1251421	Symbol	newModel -> u		1251186						
ANR	1251422	Symbol	newModel -> u . content		1251186						
ANR	1251423	Function	schema_group	1057:0:34962:38633							
ANR	1251424	FunctionDef	"schema_group (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr groupType , sdlTypePtr cur_type , sdlContentModelPtr model)"		1251423	0					
ANR	1251425	CompoundStatement		1058:0:35083:38633	1251423	0					
ANR	1251426	IdentifierDeclStatement	xmlNodePtr trav ;	1059:1:35086:35101	1251423	0	True				
ANR	1251427	IdentifierDecl	trav		1251423	0					
ANR	1251428	IdentifierDeclType	xmlNodePtr		1251423	0					
ANR	1251429	Identifier	trav		1251423	1					
ANR	1251430	IdentifierDeclStatement	"xmlAttrPtr ns , name , ref = NULL ;"	1060:1:35104:35135	1251423	1	True				
ANR	1251431	IdentifierDecl	ns		1251423	0					
ANR	1251432	IdentifierDeclType	xmlAttrPtr		1251423	0					
ANR	1251433	Identifier	ns		1251423	1					
ANR	1251434	IdentifierDecl	name		1251423	1					
ANR	1251435	IdentifierDeclType	xmlAttrPtr		1251423	0					
ANR	1251436	Identifier	name		1251423	1					
ANR	1251437	IdentifierDecl	ref = NULL		1251423	2					
ANR	1251438	IdentifierDeclType	xmlAttrPtr		1251423	0					
ANR	1251439	Identifier	ref		1251423	1					
ANR	1251440	AssignmentExpression	ref = NULL		1251423	2		=			
ANR	1251441	Identifier	NULL		1251423	0					
ANR	1251442	Identifier	NULL		1251423	1					
ANR	1251443	IdentifierDeclStatement	sdlContentModelPtr newModel ;	1061:1:35138:35165	1251423	2	True				
ANR	1251444	IdentifierDecl	newModel		1251423	0					
ANR	1251445	IdentifierDeclType	sdlContentModelPtr		1251423	0					
ANR	1251446	Identifier	newModel		1251423	1					
ANR	1251447	ExpressionStatement	"ns = get_attribute ( groupType -> properties , ""targetNamespace"" )"	1063:1:35169:35229	1251423	3	True				
ANR	1251448	AssignmentExpression	"ns = get_attribute ( groupType -> properties , ""targetNamespace"" )"		1251423	0		=			
ANR	1251449	Identifier	ns		1251423	0					
ANR	1251450	CallExpression	"get_attribute ( groupType -> properties , ""targetNamespace"" )"		1251423	1					
ANR	1251451	Callee	get_attribute		1251423	0					
ANR	1251452	Identifier	get_attribute		1251423	0					
ANR	1251453	ArgumentList	groupType -> properties		1251423	1					
ANR	1251454	Argument	groupType -> properties		1251423	0					
ANR	1251455	PtrMemberAccess	groupType -> properties		1251423	0					
ANR	1251456	Identifier	groupType		1251423	0					
ANR	1251457	Identifier	properties		1251423	1					
ANR	1251458	Argument	"""targetNamespace"""		1251423	1					
ANR	1251459	PrimaryExpression	"""targetNamespace"""		1251423	0					
ANR	1251460	IfStatement	if ( ns == NULL )		1251423	4					
ANR	1251461	Condition	ns == NULL	1064:5:35236:35245	1251423	0	True				
ANR	1251462	EqualityExpression	ns == NULL		1251423	0		==			
ANR	1251463	Identifier	ns		1251423	0					
ANR	1251464	Identifier	NULL		1251423	1					
ANR	1251465	CompoundStatement		7:17:164:164	1251423	1					
ANR	1251466	ExpressionStatement	ns = tns	1065:2:35252:35260	1251423	0	True				
ANR	1251467	AssignmentExpression	ns = tns		1251423	0		=			
ANR	1251468	Identifier	ns		1251423	0					
ANR	1251469	Identifier	tns		1251423	1					
ANR	1251470	ExpressionStatement	"name = get_attribute ( groupType -> properties , ""name"" )"	1068:1:35267:35318	1251423	5	True				
ANR	1251471	AssignmentExpression	"name = get_attribute ( groupType -> properties , ""name"" )"		1251423	0		=			
ANR	1251472	Identifier	name		1251423	0					
ANR	1251473	CallExpression	"get_attribute ( groupType -> properties , ""name"" )"		1251423	1					
ANR	1251474	Callee	get_attribute		1251423	0					
ANR	1251475	Identifier	get_attribute		1251423	0					
ANR	1251476	ArgumentList	groupType -> properties		1251423	1					
ANR	1251477	Argument	groupType -> properties		1251423	0					
ANR	1251478	PtrMemberAccess	groupType -> properties		1251423	0					
ANR	1251479	Identifier	groupType		1251423	0					
ANR	1251480	Identifier	properties		1251423	1					
ANR	1251481	Argument	"""name"""		1251423	1					
ANR	1251482	PrimaryExpression	"""name"""		1251423	0					
ANR	1251483	IfStatement	if ( name == NULL )		1251423	6					
ANR	1251484	Condition	name == NULL	1069:5:35325:35336	1251423	0	True				
ANR	1251485	EqualityExpression	name == NULL		1251423	0		==			
ANR	1251486	Identifier	name		1251423	0					
ANR	1251487	Identifier	NULL		1251423	1					
ANR	1251488	CompoundStatement		12:19:255:255	1251423	1					
ANR	1251489	ExpressionStatement	"name = ref = get_attribute ( groupType -> properties , ""ref"" )"	1070:2:35343:35399	1251423	0	True				
ANR	1251490	AssignmentExpression	"name = ref = get_attribute ( groupType -> properties , ""ref"" )"		1251423	0		=			
ANR	1251491	Identifier	name		1251423	0					
ANR	1251492	AssignmentExpression	"ref = get_attribute ( groupType -> properties , ""ref"" )"		1251423	1		=			
ANR	1251493	Identifier	ref		1251423	0					
ANR	1251494	CallExpression	"get_attribute ( groupType -> properties , ""ref"" )"		1251423	1					
ANR	1251495	Callee	get_attribute		1251423	0					
ANR	1251496	Identifier	get_attribute		1251423	0					
ANR	1251497	ArgumentList	groupType -> properties		1251423	1					
ANR	1251498	Argument	groupType -> properties		1251423	0					
ANR	1251499	PtrMemberAccess	groupType -> properties		1251423	0					
ANR	1251500	Identifier	groupType		1251423	0					
ANR	1251501	Identifier	properties		1251423	1					
ANR	1251502	Argument	"""ref"""		1251423	1					
ANR	1251503	PrimaryExpression	"""ref"""		1251423	0					
ANR	1251504	IfStatement	if ( name )		1251423	7					
ANR	1251505	Condition	name	1073:5:35410:35413	1251423	0	True				
ANR	1251506	Identifier	name		1251423	0					
ANR	1251507	CompoundStatement		17:2:336:355	1251423	1					
ANR	1251508	IdentifierDeclStatement	smart_str key = { 0 } ;	1074:2:35420:35439	1251423	0	True				
ANR	1251509	IdentifierDecl	key = { 0 }		1251423	0					
ANR	1251510	IdentifierDeclType	smart_str		1251423	0					
ANR	1251511	Identifier	key		1251423	1					
ANR	1251512	AssignmentExpression	key = { 0 }		1251423	2		=			
ANR	1251513	Identifier	key		1251423	0					
ANR	1251514	InitializerList	0		1251423	1					
ANR	1251515	PrimaryExpression	0		1251423	0					
ANR	1251516	IfStatement	if ( ref )		1251423	1					
ANR	1251517	Condition	ref	1076:6:35448:35450	1251423	0	True				
ANR	1251518	Identifier	ref		1251423	0					
ANR	1251519	CompoundStatement		21:3:394:408	1251423	1					
ANR	1251520	IdentifierDeclStatement	"char * type , * ns ;"	1077:3:35458:35473	1251423	0	True				
ANR	1251521	IdentifierDecl	* type		1251423	0					
ANR	1251522	IdentifierDeclType	char *		1251423	0					
ANR	1251523	Identifier	type		1251423	1					
ANR	1251524	IdentifierDecl	* ns		1251423	1					
ANR	1251525	IdentifierDeclType	char *		1251423	0					
ANR	1251526	Identifier	ns		1251423	1					
ANR	1251527	IdentifierDeclStatement	xmlNsPtr nsptr ;	1078:3:35478:35492	1251423	1	True				
ANR	1251528	IdentifierDecl	nsptr		1251423	0					
ANR	1251529	IdentifierDeclType	xmlNsPtr		1251423	0					
ANR	1251530	Identifier	nsptr		1251423	1					
ANR	1251531	ExpressionStatement	"parse_namespace ( ref -> children -> content , & type , & ns )"	1080:3:35498:35549	1251423	2	True				
ANR	1251532	CallExpression	"parse_namespace ( ref -> children -> content , & type , & ns )"		1251423	0					
ANR	1251533	Callee	parse_namespace		1251423	0					
ANR	1251534	Identifier	parse_namespace		1251423	0					
ANR	1251535	ArgumentList	ref -> children -> content		1251423	1					
ANR	1251536	Argument	ref -> children -> content		1251423	0					
ANR	1251537	PtrMemberAccess	ref -> children -> content		1251423	0					
ANR	1251538	PtrMemberAccess	ref -> children		1251423	0					
ANR	1251539	Identifier	ref		1251423	0					
ANR	1251540	Identifier	children		1251423	1					
ANR	1251541	Identifier	content		1251423	1					
ANR	1251542	Argument	& type		1251423	1					
ANR	1251543	UnaryOperationExpression	& type		1251423	0					
ANR	1251544	UnaryOperator	&		1251423	0					
ANR	1251545	Identifier	type		1251423	1					
ANR	1251546	Argument	& ns		1251423	2					
ANR	1251547	UnaryOperationExpression	& ns		1251423	0					
ANR	1251548	UnaryOperator	&		1251423	0					
ANR	1251549	Identifier	ns		1251423	1					
ANR	1251550	ExpressionStatement	"nsptr = xmlSearchNs ( groupType -> doc , groupType , BAD_CAST ( ns ) )"	1081:3:35554:35614	1251423	3	True				
ANR	1251551	AssignmentExpression	"nsptr = xmlSearchNs ( groupType -> doc , groupType , BAD_CAST ( ns ) )"		1251423	0		=			
ANR	1251552	Identifier	nsptr		1251423	0					
ANR	1251553	CallExpression	"xmlSearchNs ( groupType -> doc , groupType , BAD_CAST ( ns ) )"		1251423	1					
ANR	1251554	Callee	xmlSearchNs		1251423	0					
ANR	1251555	Identifier	xmlSearchNs		1251423	0					
ANR	1251556	ArgumentList	groupType -> doc		1251423	1					
ANR	1251557	Argument	groupType -> doc		1251423	0					
ANR	1251558	PtrMemberAccess	groupType -> doc		1251423	0					
ANR	1251559	Identifier	groupType		1251423	0					
ANR	1251560	Identifier	doc		1251423	1					
ANR	1251561	Argument	groupType		1251423	1					
ANR	1251562	Identifier	groupType		1251423	0					
ANR	1251563	Argument	BAD_CAST ( ns )		1251423	2					
ANR	1251564	CallExpression	BAD_CAST ( ns )		1251423	0					
ANR	1251565	Callee	BAD_CAST		1251423	0					
ANR	1251566	Identifier	BAD_CAST		1251423	0					
ANR	1251567	ArgumentList	ns		1251423	1					
ANR	1251568	Argument	ns		1251423	0					
ANR	1251569	Identifier	ns		1251423	0					
ANR	1251570	IfStatement	if ( nsptr != NULL )		1251423	4					
ANR	1251571	Condition	nsptr != NULL	1082:7:35623:35635	1251423	0	True				
ANR	1251572	EqualityExpression	nsptr != NULL		1251423	0		!=			
ANR	1251573	Identifier	nsptr		1251423	0					
ANR	1251574	Identifier	NULL		1251423	1					
ANR	1251575	CompoundStatement		25:22:554:554	1251423	1					
ANR	1251576	ExpressionStatement	"smart_str_appends ( & key , ( char * ) nsptr -> href )"	1083:4:35644:35687	1251423	0	True				
ANR	1251577	CallExpression	"smart_str_appends ( & key , ( char * ) nsptr -> href )"		1251423	0					
ANR	1251578	Callee	smart_str_appends		1251423	0					
ANR	1251579	Identifier	smart_str_appends		1251423	0					
ANR	1251580	ArgumentList	& key		1251423	1					
ANR	1251581	Argument	& key		1251423	0					
ANR	1251582	UnaryOperationExpression	& key		1251423	0					
ANR	1251583	UnaryOperator	&		1251423	0					
ANR	1251584	Identifier	key		1251423	1					
ANR	1251585	Argument	( char * ) nsptr -> href		1251423	1					
ANR	1251586	CastExpression	( char * ) nsptr -> href		1251423	0					
ANR	1251587	CastTarget	char *		1251423	0					
ANR	1251588	PtrMemberAccess	nsptr -> href		1251423	1					
ANR	1251589	Identifier	nsptr		1251423	0					
ANR	1251590	Identifier	href		1251423	1					
ANR	1251591	ElseStatement	else		1251423	0					
ANR	1251592	CompoundStatement		28:4:621:692	1251423	0					
ANR	1251593	IdentifierDeclStatement	"xmlAttrPtr ns = get_attribute ( groupType -> properties , ""targetNamespace"" ) ;"	1085:4:35705:35776	1251423	0	True				
ANR	1251594	IdentifierDecl	"ns = get_attribute ( groupType -> properties , ""targetNamespace"" )"		1251423	0					
ANR	1251595	IdentifierDeclType	xmlAttrPtr		1251423	0					
ANR	1251596	Identifier	ns		1251423	1					
ANR	1251597	AssignmentExpression	"ns = get_attribute ( groupType -> properties , ""targetNamespace"" )"		1251423	2		=			
ANR	1251598	Identifier	ns		1251423	0					
ANR	1251599	CallExpression	"get_attribute ( groupType -> properties , ""targetNamespace"" )"		1251423	1					
ANR	1251600	Callee	get_attribute		1251423	0					
ANR	1251601	Identifier	get_attribute		1251423	0					
ANR	1251602	ArgumentList	groupType -> properties		1251423	1					
ANR	1251603	Argument	groupType -> properties		1251423	0					
ANR	1251604	PtrMemberAccess	groupType -> properties		1251423	0					
ANR	1251605	Identifier	groupType		1251423	0					
ANR	1251606	Identifier	properties		1251423	1					
ANR	1251607	Argument	"""targetNamespace"""		1251423	1					
ANR	1251608	PrimaryExpression	"""targetNamespace"""		1251423	0					
ANR	1251609	IfStatement	if ( ns == NULL )		1251423	1					
ANR	1251610	Condition	ns == NULL	1086:8:35786:35795	1251423	0	True				
ANR	1251611	EqualityExpression	ns == NULL		1251423	0		==			
ANR	1251612	Identifier	ns		1251423	0					
ANR	1251613	Identifier	NULL		1251423	1					
ANR	1251614	CompoundStatement		29:20:714:714	1251423	1					
ANR	1251615	ExpressionStatement	ns = tns	1087:5:35805:35813	1251423	0	True				
ANR	1251616	AssignmentExpression	ns = tns		1251423	0		=			
ANR	1251617	Identifier	ns		1251423	0					
ANR	1251618	Identifier	tns		1251423	1					
ANR	1251619	IfStatement	if ( ns )		1251423	2					
ANR	1251620	Condition	ns	1089:8:35829:35830	1251423	0	True				
ANR	1251621	Identifier	ns		1251423	0					
ANR	1251622	CompoundStatement		32:12:749:749	1251423	1					
ANR	1251623	ExpressionStatement	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"	1090:5:35840:35893	1251423	0	True				
ANR	1251624	CallExpression	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"		1251423	0					
ANR	1251625	Callee	smart_str_appends		1251423	0					
ANR	1251626	Identifier	smart_str_appends		1251423	0					
ANR	1251627	ArgumentList	& key		1251423	1					
ANR	1251628	Argument	& key		1251423	0					
ANR	1251629	UnaryOperationExpression	& key		1251423	0					
ANR	1251630	UnaryOperator	&		1251423	0					
ANR	1251631	Identifier	key		1251423	1					
ANR	1251632	Argument	( char * ) ns -> children -> content		1251423	1					
ANR	1251633	CastExpression	( char * ) ns -> children -> content		1251423	0					
ANR	1251634	CastTarget	char *		1251423	0					
ANR	1251635	PtrMemberAccess	ns -> children -> content		1251423	1					
ANR	1251636	PtrMemberAccess	ns -> children		1251423	0					
ANR	1251637	Identifier	ns		1251423	0					
ANR	1251638	Identifier	children		1251423	1					
ANR	1251639	Identifier	content		1251423	1					
ANR	1251640	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	1093:3:35909:35937	1251423	5	True				
ANR	1251641	CallExpression	"smart_str_appendc ( & key , ':' )"		1251423	0					
ANR	1251642	Callee	smart_str_appendc		1251423	0					
ANR	1251643	Identifier	smart_str_appendc		1251423	0					
ANR	1251644	ArgumentList	& key		1251423	1					
ANR	1251645	Argument	& key		1251423	0					
ANR	1251646	UnaryOperationExpression	& key		1251423	0					
ANR	1251647	UnaryOperator	&		1251423	0					
ANR	1251648	Identifier	key		1251423	1					
ANR	1251649	Argument	':'		1251423	1					
ANR	1251650	PrimaryExpression	':'		1251423	0					
ANR	1251651	ExpressionStatement	"smart_str_appends ( & key , type )"	1094:3:35942:35971	1251423	6	True				
ANR	1251652	CallExpression	"smart_str_appends ( & key , type )"		1251423	0					
ANR	1251653	Callee	smart_str_appends		1251423	0					
ANR	1251654	Identifier	smart_str_appends		1251423	0					
ANR	1251655	ArgumentList	& key		1251423	1					
ANR	1251656	Argument	& key		1251423	0					
ANR	1251657	UnaryOperationExpression	& key		1251423	0					
ANR	1251658	UnaryOperator	&		1251423	0					
ANR	1251659	Identifier	key		1251423	1					
ANR	1251660	Argument	type		1251423	1					
ANR	1251661	Identifier	type		1251423	0					
ANR	1251662	ExpressionStatement	smart_str_0 ( & key )	1095:3:35976:35993	1251423	7	True				
ANR	1251663	CallExpression	smart_str_0 ( & key )		1251423	0					
ANR	1251664	Callee	smart_str_0		1251423	0					
ANR	1251665	Identifier	smart_str_0		1251423	0					
ANR	1251666	ArgumentList	& key		1251423	1					
ANR	1251667	Argument	& key		1251423	0					
ANR	1251668	UnaryOperationExpression	& key		1251423	0					
ANR	1251669	UnaryOperator	&		1251423	0					
ANR	1251670	Identifier	key		1251423	1					
ANR	1251671	ExpressionStatement	newModel = emalloc ( sizeof ( sdlContentModel ) )	1097:3:35999:36042	1251423	8	True				
ANR	1251672	AssignmentExpression	newModel = emalloc ( sizeof ( sdlContentModel ) )		1251423	0		=			
ANR	1251673	Identifier	newModel		1251423	0					
ANR	1251674	CallExpression	emalloc ( sizeof ( sdlContentModel ) )		1251423	1					
ANR	1251675	Callee	emalloc		1251423	0					
ANR	1251676	Identifier	emalloc		1251423	0					
ANR	1251677	ArgumentList	sizeof ( sdlContentModel )		1251423	1					
ANR	1251678	Argument	sizeof ( sdlContentModel )		1251423	0					
ANR	1251679	SizeofExpression	sizeof ( sdlContentModel )		1251423	0					
ANR	1251680	Sizeof	sizeof		1251423	0					
ANR	1251681	SizeofOperand	sdlContentModel		1251423	1					
ANR	1251682	ExpressionStatement	newModel -> kind = XSD_CONTENT_GROUP_REF	1098:3:36047:36085	1251423	9	True				
ANR	1251683	AssignmentExpression	newModel -> kind = XSD_CONTENT_GROUP_REF		1251423	0		=			
ANR	1251684	PtrMemberAccess	newModel -> kind		1251423	0					
ANR	1251685	Identifier	newModel		1251423	0					
ANR	1251686	Identifier	kind		1251423	1					
ANR	1251687	Identifier	XSD_CONTENT_GROUP_REF		1251423	1					
ANR	1251688	ExpressionStatement	newModel -> u . group_ref = estrdup ( key . c )	1099:3:36090:36128	1251423	10	True				
ANR	1251689	AssignmentExpression	newModel -> u . group_ref = estrdup ( key . c )		1251423	0		=			
ANR	1251690	MemberAccess	newModel -> u . group_ref		1251423	0					
ANR	1251691	PtrMemberAccess	newModel -> u		1251423	0					
ANR	1251692	Identifier	newModel		1251423	0					
ANR	1251693	Identifier	u		1251423	1					
ANR	1251694	Identifier	group_ref		1251423	1					
ANR	1251695	CallExpression	estrdup ( key . c )		1251423	1					
ANR	1251696	Callee	estrdup		1251423	0					
ANR	1251697	Identifier	estrdup		1251423	0					
ANR	1251698	ArgumentList	key . c		1251423	1					
ANR	1251699	Argument	key . c		1251423	0					
ANR	1251700	MemberAccess	key . c		1251423	0					
ANR	1251701	Identifier	key		1251423	0					
ANR	1251702	Identifier	c		1251423	1					
ANR	1251703	IfStatement	if ( type )		1251423	11					
ANR	1251704	Condition	type	1101:7:36138:36141	1251423	0	True				
ANR	1251705	Identifier	type		1251423	0					
ANR	1251706	CompoundStatement		44:13:1060:1060	1251423	1					
ANR	1251707	ExpressionStatement	efree ( type )	1101:14:36145:36156	1251423	0	True				
ANR	1251708	CallExpression	efree ( type )		1251423	0					
ANR	1251709	Callee	efree		1251423	0					
ANR	1251710	Identifier	efree		1251423	0					
ANR	1251711	ArgumentList	type		1251423	1					
ANR	1251712	Argument	type		1251423	0					
ANR	1251713	Identifier	type		1251423	0					
ANR	1251714	IfStatement	if ( ns )		1251423	12					
ANR	1251715	Condition	ns	1102:7:36166:36167	1251423	0	True				
ANR	1251716	Identifier	ns		1251423	0					
ANR	1251717	CompoundStatement		45:11:1086:1086	1251423	1					
ANR	1251718	ExpressionStatement	efree ( ns )	1102:12:36171:36180	1251423	0	True				
ANR	1251719	CallExpression	efree ( ns )		1251423	0					
ANR	1251720	Callee	efree		1251423	0					
ANR	1251721	Identifier	efree		1251423	0					
ANR	1251722	ArgumentList	ns		1251423	1					
ANR	1251723	Argument	ns		1251423	0					
ANR	1251724	Identifier	ns		1251423	0					
ANR	1251725	ElseStatement	else		1251423	0					
ANR	1251726	CompoundStatement		46:9:1108:1108	1251423	0					
ANR	1251727	ExpressionStatement	newModel = emalloc ( sizeof ( sdlContentModel ) )	1104:3:36197:36240	1251423	0	True				
ANR	1251728	AssignmentExpression	newModel = emalloc ( sizeof ( sdlContentModel ) )		1251423	0		=			
ANR	1251729	Identifier	newModel		1251423	0					
ANR	1251730	CallExpression	emalloc ( sizeof ( sdlContentModel ) )		1251423	1					
ANR	1251731	Callee	emalloc		1251423	0					
ANR	1251732	Identifier	emalloc		1251423	0					
ANR	1251733	ArgumentList	sizeof ( sdlContentModel )		1251423	1					
ANR	1251734	Argument	sizeof ( sdlContentModel )		1251423	0					
ANR	1251735	SizeofExpression	sizeof ( sdlContentModel )		1251423	0					
ANR	1251736	Sizeof	sizeof		1251423	0					
ANR	1251737	SizeofOperand	sdlContentModel		1251423	1					
ANR	1251738	ExpressionStatement	newModel -> kind = XSD_CONTENT_SEQUENCE	1105:3:36245:36282	1251423	1	True				
ANR	1251739	AssignmentExpression	newModel -> kind = XSD_CONTENT_SEQUENCE		1251423	0		=			
ANR	1251740	PtrMemberAccess	newModel -> kind		1251423	0					
ANR	1251741	Identifier	newModel		1251423	0					
ANR	1251742	Identifier	kind		1251423	1					
ANR	1251743	Identifier	XSD_CONTENT_SEQUENCE		1251423	1					
ANR	1251744	ExpressionStatement	newModel -> u . content = emalloc ( sizeof ( HashTable ) )	1106:3:36311:36359	1251423	2	True				
ANR	1251745	AssignmentExpression	newModel -> u . content = emalloc ( sizeof ( HashTable ) )		1251423	0		=			
ANR	1251746	MemberAccess	newModel -> u . content		1251423	0					
ANR	1251747	PtrMemberAccess	newModel -> u		1251423	0					
ANR	1251748	Identifier	newModel		1251423	0					
ANR	1251749	Identifier	u		1251423	1					
ANR	1251750	Identifier	content		1251423	1					
ANR	1251751	CallExpression	emalloc ( sizeof ( HashTable ) )		1251423	1					
ANR	1251752	Callee	emalloc		1251423	0					
ANR	1251753	Identifier	emalloc		1251423	0					
ANR	1251754	ArgumentList	sizeof ( HashTable )		1251423	1					
ANR	1251755	Argument	sizeof ( HashTable )		1251423	0					
ANR	1251756	SizeofExpression	sizeof ( HashTable )		1251423	0					
ANR	1251757	Sizeof	sizeof		1251423	0					
ANR	1251758	SizeofOperand	HashTable		1251423	1					
ANR	1251759	ExpressionStatement	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"	1107:3:36364:36425	1251423	3	True				
ANR	1251760	CallExpression	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"		1251423	0					
ANR	1251761	Callee	zend_hash_init		1251423	0					
ANR	1251762	Identifier	zend_hash_init		1251423	0					
ANR	1251763	ArgumentList	newModel -> u . content		1251423	1					
ANR	1251764	Argument	newModel -> u . content		1251423	0					
ANR	1251765	MemberAccess	newModel -> u . content		1251423	0					
ANR	1251766	PtrMemberAccess	newModel -> u		1251423	0					
ANR	1251767	Identifier	newModel		1251423	0					
ANR	1251768	Identifier	u		1251423	1					
ANR	1251769	Identifier	content		1251423	1					
ANR	1251770	Argument	0		1251423	1					
ANR	1251771	PrimaryExpression	0		1251423	0					
ANR	1251772	Argument	NULL		1251423	2					
ANR	1251773	Identifier	NULL		1251423	0					
ANR	1251774	Argument	delete_model		1251423	3					
ANR	1251775	Identifier	delete_model		1251423	0					
ANR	1251776	Argument	0		1251423	4					
ANR	1251777	PrimaryExpression	0		1251423	0					
ANR	1251778	ExpressionStatement	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"	1109:3:36431:36484	1251423	4	True				
ANR	1251779	CallExpression	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"		1251423	0					
ANR	1251780	Callee	smart_str_appends		1251423	0					
ANR	1251781	Identifier	smart_str_appends		1251423	0					
ANR	1251782	ArgumentList	& key		1251423	1					
ANR	1251783	Argument	& key		1251423	0					
ANR	1251784	UnaryOperationExpression	& key		1251423	0					
ANR	1251785	UnaryOperator	&		1251423	0					
ANR	1251786	Identifier	key		1251423	1					
ANR	1251787	Argument	( char * ) ns -> children -> content		1251423	1					
ANR	1251788	CastExpression	( char * ) ns -> children -> content		1251423	0					
ANR	1251789	CastTarget	char *		1251423	0					
ANR	1251790	PtrMemberAccess	ns -> children -> content		1251423	1					
ANR	1251791	PtrMemberAccess	ns -> children		1251423	0					
ANR	1251792	Identifier	ns		1251423	0					
ANR	1251793	Identifier	children		1251423	1					
ANR	1251794	Identifier	content		1251423	1					
ANR	1251795	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	1110:3:36489:36517	1251423	5	True				
ANR	1251796	CallExpression	"smart_str_appendc ( & key , ':' )"		1251423	0					
ANR	1251797	Callee	smart_str_appendc		1251423	0					
ANR	1251798	Identifier	smart_str_appendc		1251423	0					
ANR	1251799	ArgumentList	& key		1251423	1					
ANR	1251800	Argument	& key		1251423	0					
ANR	1251801	UnaryOperationExpression	& key		1251423	0					
ANR	1251802	UnaryOperator	&		1251423	0					
ANR	1251803	Identifier	key		1251423	1					
ANR	1251804	Argument	':'		1251423	1					
ANR	1251805	PrimaryExpression	':'		1251423	0					
ANR	1251806	ExpressionStatement	"smart_str_appends ( & key , ( char * ) name -> children -> content )"	1111:3:36522:36577	1251423	6	True				
ANR	1251807	CallExpression	"smart_str_appends ( & key , ( char * ) name -> children -> content )"		1251423	0					
ANR	1251808	Callee	smart_str_appends		1251423	0					
ANR	1251809	Identifier	smart_str_appends		1251423	0					
ANR	1251810	ArgumentList	& key		1251423	1					
ANR	1251811	Argument	& key		1251423	0					
ANR	1251812	UnaryOperationExpression	& key		1251423	0					
ANR	1251813	UnaryOperator	&		1251423	0					
ANR	1251814	Identifier	key		1251423	1					
ANR	1251815	Argument	( char * ) name -> children -> content		1251423	1					
ANR	1251816	CastExpression	( char * ) name -> children -> content		1251423	0					
ANR	1251817	CastTarget	char *		1251423	0					
ANR	1251818	PtrMemberAccess	name -> children -> content		1251423	1					
ANR	1251819	PtrMemberAccess	name -> children		1251423	0					
ANR	1251820	Identifier	name		1251423	0					
ANR	1251821	Identifier	children		1251423	1					
ANR	1251822	Identifier	content		1251423	1					
ANR	1251823	ExpressionStatement	smart_str_0 ( & key )	1112:3:36582:36599	1251423	7	True				
ANR	1251824	CallExpression	smart_str_0 ( & key )		1251423	0					
ANR	1251825	Callee	smart_str_0		1251423	0					
ANR	1251826	Identifier	smart_str_0		1251423	0					
ANR	1251827	ArgumentList	& key		1251423	1					
ANR	1251828	Argument	& key		1251423	0					
ANR	1251829	UnaryOperationExpression	& key		1251423	0					
ANR	1251830	UnaryOperator	&		1251423	0					
ANR	1251831	Identifier	key		1251423	1					
ANR	1251832	IfStatement	if ( cur_type == NULL )		1251423	2					
ANR	1251833	Condition	cur_type == NULL	1115:6:36612:36627	1251423	0	True				
ANR	1251834	EqualityExpression	cur_type == NULL		1251423	0		==			
ANR	1251835	Identifier	cur_type		1251423	0					
ANR	1251836	Identifier	NULL		1251423	1					
ANR	1251837	CompoundStatement		59:3:1551:1569	1251423	1					
ANR	1251838	IdentifierDeclStatement	sdlTypePtr newType ;	1116:3:36635:36653	1251423	0	True				
ANR	1251839	IdentifierDecl	newType		1251423	0					
ANR	1251840	IdentifierDeclType	sdlTypePtr		1251423	0					
ANR	1251841	Identifier	newType		1251423	1					
ANR	1251842	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	1118:3:36659:36693	1251423	1	True				
ANR	1251843	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1251423	0		=			
ANR	1251844	Identifier	newType		1251423	0					
ANR	1251845	CallExpression	emalloc ( sizeof ( sdlType ) )		1251423	1					
ANR	1251846	Callee	emalloc		1251423	0					
ANR	1251847	Identifier	emalloc		1251423	0					
ANR	1251848	ArgumentList	sizeof ( sdlType )		1251423	1					
ANR	1251849	Argument	sizeof ( sdlType )		1251423	0					
ANR	1251850	SizeofExpression	sizeof ( sdlType )		1251423	0					
ANR	1251851	Sizeof	sizeof		1251423	0					
ANR	1251852	SizeofOperand	sdlType		1251423	1					
ANR	1251853	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	1119:3:36698:36733	1251423	2	True				
ANR	1251854	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1251423	0					
ANR	1251855	Callee	memset		1251423	0					
ANR	1251856	Identifier	memset		1251423	0					
ANR	1251857	ArgumentList	newType		1251423	1					
ANR	1251858	Argument	newType		1251423	0					
ANR	1251859	Identifier	newType		1251423	0					
ANR	1251860	Argument	0		1251423	1					
ANR	1251861	PrimaryExpression	0		1251423	0					
ANR	1251862	Argument	sizeof ( sdlType )		1251423	2					
ANR	1251863	SizeofExpression	sizeof ( sdlType )		1251423	0					
ANR	1251864	Sizeof	sizeof		1251423	0					
ANR	1251865	SizeofOperand	sdlType		1251423	1					
ANR	1251866	IfStatement	if ( sdl -> groups == NULL )		1251423	3					
ANR	1251867	Condition	sdl -> groups == NULL	1121:7:36743:36761	1251423	0	True				
ANR	1251868	EqualityExpression	sdl -> groups == NULL		1251423	0		==			
ANR	1251869	PtrMemberAccess	sdl -> groups		1251423	0					
ANR	1251870	Identifier	sdl		1251423	0					
ANR	1251871	Identifier	groups		1251423	1					
ANR	1251872	Identifier	NULL		1251423	1					
ANR	1251873	CompoundStatement		64:28:1680:1680	1251423	1					
ANR	1251874	ExpressionStatement	sdl -> groups = emalloc ( sizeof ( HashTable ) )	1122:4:36770:36810	1251423	0	True				
ANR	1251875	AssignmentExpression	sdl -> groups = emalloc ( sizeof ( HashTable ) )		1251423	0		=			
ANR	1251876	PtrMemberAccess	sdl -> groups		1251423	0					
ANR	1251877	Identifier	sdl		1251423	0					
ANR	1251878	Identifier	groups		1251423	1					
ANR	1251879	CallExpression	emalloc ( sizeof ( HashTable ) )		1251423	1					
ANR	1251880	Callee	emalloc		1251423	0					
ANR	1251881	Identifier	emalloc		1251423	0					
ANR	1251882	ArgumentList	sizeof ( HashTable )		1251423	1					
ANR	1251883	Argument	sizeof ( HashTable )		1251423	0					
ANR	1251884	SizeofExpression	sizeof ( HashTable )		1251423	0					
ANR	1251885	Sizeof	sizeof		1251423	0					
ANR	1251886	SizeofOperand	HashTable		1251423	1					
ANR	1251887	ExpressionStatement	"zend_hash_init ( sdl -> groups , 0 , NULL , delete_type , 0 )"	1123:4:36816:36868	1251423	1	True				
ANR	1251888	CallExpression	"zend_hash_init ( sdl -> groups , 0 , NULL , delete_type , 0 )"		1251423	0					
ANR	1251889	Callee	zend_hash_init		1251423	0					
ANR	1251890	Identifier	zend_hash_init		1251423	0					
ANR	1251891	ArgumentList	sdl -> groups		1251423	1					
ANR	1251892	Argument	sdl -> groups		1251423	0					
ANR	1251893	PtrMemberAccess	sdl -> groups		1251423	0					
ANR	1251894	Identifier	sdl		1251423	0					
ANR	1251895	Identifier	groups		1251423	1					
ANR	1251896	Argument	0		1251423	1					
ANR	1251897	PrimaryExpression	0		1251423	0					
ANR	1251898	Argument	NULL		1251423	2					
ANR	1251899	Identifier	NULL		1251423	0					
ANR	1251900	Argument	delete_type		1251423	3					
ANR	1251901	Identifier	delete_type		1251423	0					
ANR	1251902	Argument	0		1251423	4					
ANR	1251903	PrimaryExpression	0		1251423	0					
ANR	1251904	IfStatement	"if ( zend_hash_add ( sdl -> groups , key . c , key . len + 1 , ( void * * ) & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS )"		1251423	4					
ANR	1251905	Condition	"zend_hash_add ( sdl -> groups , key . c , key . len + 1 , ( void * * ) & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS"	1125:7:36882:36980	1251423	0	True				
ANR	1251906	EqualityExpression	"zend_hash_add ( sdl -> groups , key . c , key . len + 1 , ( void * * ) & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS"		1251423	0		!=			
ANR	1251907	CallExpression	"zend_hash_add ( sdl -> groups , key . c , key . len + 1 , ( void * * ) & newType , sizeof ( sdlTypePtr ) , NULL )"		1251423	0					
ANR	1251908	Callee	zend_hash_add		1251423	0					
ANR	1251909	Identifier	zend_hash_add		1251423	0					
ANR	1251910	ArgumentList	sdl -> groups		1251423	1					
ANR	1251911	Argument	sdl -> groups		1251423	0					
ANR	1251912	PtrMemberAccess	sdl -> groups		1251423	0					
ANR	1251913	Identifier	sdl		1251423	0					
ANR	1251914	Identifier	groups		1251423	1					
ANR	1251915	Argument	key . c		1251423	1					
ANR	1251916	MemberAccess	key . c		1251423	0					
ANR	1251917	Identifier	key		1251423	0					
ANR	1251918	Identifier	c		1251423	1					
ANR	1251919	Argument	key . len + 1		1251423	2					
ANR	1251920	AdditiveExpression	key . len + 1		1251423	0		+			
ANR	1251921	MemberAccess	key . len		1251423	0					
ANR	1251922	Identifier	key		1251423	0					
ANR	1251923	Identifier	len		1251423	1					
ANR	1251924	PrimaryExpression	1		1251423	1					
ANR	1251925	Argument	( void * * ) & newType		1251423	3					
ANR	1251926	CastExpression	( void * * ) & newType		1251423	0					
ANR	1251927	CastTarget	void * *		1251423	0					
ANR	1251928	UnaryOperationExpression	& newType		1251423	1					
ANR	1251929	UnaryOperator	&		1251423	0					
ANR	1251930	Identifier	newType		1251423	1					
ANR	1251931	Argument	sizeof ( sdlTypePtr )		1251423	4					
ANR	1251932	SizeofExpression	sizeof ( sdlTypePtr )		1251423	0					
ANR	1251933	Sizeof	sizeof		1251423	0					
ANR	1251934	SizeofOperand	sdlTypePtr		1251423	1					
ANR	1251935	Argument	NULL		1251423	5					
ANR	1251936	Identifier	NULL		1251423	0					
ANR	1251937	Identifier	SUCCESS		1251423	1					
ANR	1251938	CompoundStatement		68:108:1899:1899	1251423	1					
ANR	1251939	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: group '%s' already defined"" , key . c )"	1126:4:36989:37062	1251423	0	True				
ANR	1251940	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: group '%s' already defined"" , key . c )"		1251423	0					
ANR	1251941	Callee	soap_error1		1251423	0					
ANR	1251942	Identifier	soap_error1		1251423	0					
ANR	1251943	ArgumentList	E_ERROR		1251423	1					
ANR	1251944	Argument	E_ERROR		1251423	0					
ANR	1251945	Identifier	E_ERROR		1251423	0					
ANR	1251946	Argument	"""Parsing Schema: group '%s' already defined"""		1251423	1					
ANR	1251947	PrimaryExpression	"""Parsing Schema: group '%s' already defined"""		1251423	0					
ANR	1251948	Argument	key . c		1251423	2					
ANR	1251949	MemberAccess	key . c		1251423	0					
ANR	1251950	Identifier	key		1251423	0					
ANR	1251951	Identifier	c		1251423	1					
ANR	1251952	ExpressionStatement	cur_type = newType	1129:3:37073:37091	1251423	5	True				
ANR	1251953	AssignmentExpression	cur_type = newType		1251423	0		=			
ANR	1251954	Identifier	cur_type		1251423	0					
ANR	1251955	Identifier	newType		1251423	1					
ANR	1251956	ExpressionStatement	smart_str_free ( & key )	1131:2:37099:37119	1251423	3	True				
ANR	1251957	CallExpression	smart_str_free ( & key )		1251423	0					
ANR	1251958	Callee	smart_str_free		1251423	0					
ANR	1251959	Identifier	smart_str_free		1251423	0					
ANR	1251960	ArgumentList	& key		1251423	1					
ANR	1251961	Argument	& key		1251423	0					
ANR	1251962	UnaryOperationExpression	& key		1251423	0					
ANR	1251963	UnaryOperator	&		1251423	0					
ANR	1251964	Identifier	key		1251423	1					
ANR	1251965	IfStatement	if ( model == NULL )		1251423	4					
ANR	1251966	Condition	model == NULL	1133:6:37128:37140	1251423	0	True				
ANR	1251967	EqualityExpression	model == NULL		1251423	0		==			
ANR	1251968	Identifier	model		1251423	0					
ANR	1251969	Identifier	NULL		1251423	1					
ANR	1251970	CompoundStatement		76:21:2059:2059	1251423	1					
ANR	1251971	ExpressionStatement	cur_type -> model = newModel	1134:3:37148:37174	1251423	0	True				
ANR	1251972	AssignmentExpression	cur_type -> model = newModel		1251423	0		=			
ANR	1251973	PtrMemberAccess	cur_type -> model		1251423	0					
ANR	1251974	Identifier	cur_type		1251423	0					
ANR	1251975	Identifier	model		1251423	1					
ANR	1251976	Identifier	newModel		1251423	1					
ANR	1251977	ElseStatement	else		1251423	0					
ANR	1251978	CompoundStatement		78:9:2101:2101	1251423	0					
ANR	1251979	ExpressionStatement	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"	1136:3:37190:37280	1251423	0	True				
ANR	1251980	CallExpression	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"		1251423	0					
ANR	1251981	Callee	zend_hash_next_index_insert		1251423	0					
ANR	1251982	Identifier	zend_hash_next_index_insert		1251423	0					
ANR	1251983	ArgumentList	model -> u . content		1251423	1					
ANR	1251984	Argument	model -> u . content		1251423	0					
ANR	1251985	MemberAccess	model -> u . content		1251423	0					
ANR	1251986	PtrMemberAccess	model -> u		1251423	0					
ANR	1251987	Identifier	model		1251423	0					
ANR	1251988	Identifier	u		1251423	1					
ANR	1251989	Identifier	content		1251423	1					
ANR	1251990	Argument	& newModel		1251423	1					
ANR	1251991	UnaryOperationExpression	& newModel		1251423	0					
ANR	1251992	UnaryOperator	&		1251423	0					
ANR	1251993	Identifier	newModel		1251423	1					
ANR	1251994	Argument	sizeof ( sdlContentModelPtr )		1251423	2					
ANR	1251995	SizeofExpression	sizeof ( sdlContentModelPtr )		1251423	0					
ANR	1251996	Sizeof	sizeof		1251423	0					
ANR	1251997	SizeofOperand	sdlContentModelPtr		1251423	1					
ANR	1251998	Argument	NULL		1251423	3					
ANR	1251999	Identifier	NULL		1251423	0					
ANR	1252000	ElseStatement	else		1251423	0					
ANR	1252001	CompoundStatement		81:8:2210:2210	1251423	0					
ANR	1252002	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: group has no 'name' nor 'ref' attributes"" )"	1139:2:37298:37378	1251423	0	True				
ANR	1252003	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: group has no 'name' nor 'ref' attributes"" )"		1251423	0					
ANR	1252004	Callee	soap_error0		1251423	0					
ANR	1252005	Identifier	soap_error0		1251423	0					
ANR	1252006	ArgumentList	E_ERROR		1251423	1					
ANR	1252007	Argument	E_ERROR		1251423	0					
ANR	1252008	Identifier	E_ERROR		1251423	0					
ANR	1252009	Argument	"""Parsing Schema: group has no 'name' nor 'ref' attributes"""		1251423	1					
ANR	1252010	PrimaryExpression	"""Parsing Schema: group has no 'name' nor 'ref' attributes"""		1251423	0					
ANR	1252011	ExpressionStatement	"schema_min_max ( groupType , newModel )"	1142:1:37385:37420	1251423	8	True				
ANR	1252012	CallExpression	"schema_min_max ( groupType , newModel )"		1251423	0					
ANR	1252013	Callee	schema_min_max		1251423	0					
ANR	1252014	Identifier	schema_min_max		1251423	0					
ANR	1252015	ArgumentList	groupType		1251423	1					
ANR	1252016	Argument	groupType		1251423	0					
ANR	1252017	Identifier	groupType		1251423	0					
ANR	1252018	Argument	newModel		1251423	1					
ANR	1252019	Identifier	newModel		1251423	0					
ANR	1252020	ExpressionStatement	trav = groupType -> children	1144:1:37424:37450	1251423	9	True				
ANR	1252021	AssignmentExpression	trav = groupType -> children		1251423	0		=			
ANR	1252022	Identifier	trav		1251423	0					
ANR	1252023	PtrMemberAccess	groupType -> children		1251423	1					
ANR	1252024	Identifier	groupType		1251423	0					
ANR	1252025	Identifier	children		1251423	1					
ANR	1252026	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1251423	10					
ANR	1252027	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1145:5:37457:37504	1251423	0	True				
ANR	1252028	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1251423	0		&&			
ANR	1252029	EqualityExpression	trav != NULL		1251423	0		!=			
ANR	1252030	Identifier	trav		1251423	0					
ANR	1252031	Identifier	NULL		1251423	1					
ANR	1252032	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1251423	1					
ANR	1252033	Callee	node_is_equal		1251423	0					
ANR	1252034	Identifier	node_is_equal		1251423	0					
ANR	1252035	ArgumentList	trav		1251423	1					
ANR	1252036	Argument	trav		1251423	0					
ANR	1252037	Identifier	trav		1251423	0					
ANR	1252038	Argument	"""annotation"""		1251423	1					
ANR	1252039	PrimaryExpression	"""annotation"""		1251423	0					
ANR	1252040	CompoundStatement		88:55:2423:2423	1251423	1					
ANR	1252041	ExpressionStatement	trav = trav -> next	1147:2:37546:37563	1251423	0	True				
ANR	1252042	AssignmentExpression	trav = trav -> next		1251423	0		=			
ANR	1252043	Identifier	trav		1251423	0					
ANR	1252044	PtrMemberAccess	trav -> next		1251423	1					
ANR	1252045	Identifier	trav		1251423	0					
ANR	1252046	Identifier	next		1251423	1					
ANR	1252047	IfStatement	if ( trav != NULL )		1251423	11					
ANR	1252048	Condition	trav != NULL	1149:5:37573:37584	1251423	0	True				
ANR	1252049	EqualityExpression	trav != NULL		1251423	0		!=			
ANR	1252050	Identifier	trav		1251423	0					
ANR	1252051	Identifier	NULL		1251423	1					
ANR	1252052	CompoundStatement		92:19:2503:2503	1251423	1					
ANR	1252053	IfStatement	"if ( node_is_equal ( trav , ""choice"" ) )"		1251423	0					
ANR	1252054	Condition	"node_is_equal ( trav , ""choice"" )"	1150:6:37595:37622	1251423	0	True				
ANR	1252055	CallExpression	"node_is_equal ( trav , ""choice"" )"		1251423	0					
ANR	1252056	Callee	node_is_equal		1251423	0					
ANR	1252057	Identifier	node_is_equal		1251423	0					
ANR	1252058	ArgumentList	trav		1251423	1					
ANR	1252059	Argument	trav		1251423	0					
ANR	1252060	Identifier	trav		1251423	0					
ANR	1252061	Argument	"""choice"""		1251423	1					
ANR	1252062	PrimaryExpression	"""choice"""		1251423	0					
ANR	1252063	CompoundStatement		93:36:2541:2541	1251423	1					
ANR	1252064	IfStatement	if ( ref != NULL )		1251423	0					
ANR	1252065	Condition	ref != NULL	1151:7:37634:37644	1251423	0	True				
ANR	1252066	EqualityExpression	ref != NULL		1251423	0		!=			
ANR	1252067	Identifier	ref		1251423	0					
ANR	1252068	Identifier	NULL		1251423	1					
ANR	1252069	CompoundStatement		94:20:2563:2563	1251423	1					
ANR	1252070	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: group has both 'ref' attribute and subcontent"" )"	1152:4:37653:37738	1251423	0	True				
ANR	1252071	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: group has both 'ref' attribute and subcontent"" )"		1251423	0					
ANR	1252072	Callee	soap_error0		1251423	0					
ANR	1252073	Identifier	soap_error0		1251423	0					
ANR	1252074	ArgumentList	E_ERROR		1251423	1					
ANR	1252075	Argument	E_ERROR		1251423	0					
ANR	1252076	Identifier	E_ERROR		1251423	0					
ANR	1252077	Argument	"""Parsing Schema: group has both 'ref' attribute and subcontent"""		1251423	1					
ANR	1252078	PrimaryExpression	"""Parsing Schema: group has both 'ref' attribute and subcontent"""		1251423	0					
ANR	1252079	ExpressionStatement	newModel -> kind = XSD_CONTENT_CHOICE	1154:3:37748:37783	1251423	1	True				
ANR	1252080	AssignmentExpression	newModel -> kind = XSD_CONTENT_CHOICE		1251423	0		=			
ANR	1252081	PtrMemberAccess	newModel -> kind		1251423	0					
ANR	1252082	Identifier	newModel		1251423	0					
ANR	1252083	Identifier	kind		1251423	1					
ANR	1252084	Identifier	XSD_CONTENT_CHOICE		1251423	1					
ANR	1252085	ExpressionStatement	"schema_choice ( sdl , tns , trav , cur_type , newModel )"	1155:3:37788:37837	1251423	2	True				
ANR	1252086	CallExpression	"schema_choice ( sdl , tns , trav , cur_type , newModel )"		1251423	0					
ANR	1252087	Callee	schema_choice		1251423	0					
ANR	1252088	Identifier	schema_choice		1251423	0					
ANR	1252089	ArgumentList	sdl		1251423	1					
ANR	1252090	Argument	sdl		1251423	0					
ANR	1252091	Identifier	sdl		1251423	0					
ANR	1252092	Argument	tns		1251423	1					
ANR	1252093	Identifier	tns		1251423	0					
ANR	1252094	Argument	trav		1251423	2					
ANR	1252095	Identifier	trav		1251423	0					
ANR	1252096	Argument	cur_type		1251423	3					
ANR	1252097	Identifier	cur_type		1251423	0					
ANR	1252098	Argument	newModel		1251423	4					
ANR	1252099	Identifier	newModel		1251423	0					
ANR	1252100	ExpressionStatement	trav = trav -> next	1156:3:37842:37859	1251423	3	True				
ANR	1252101	AssignmentExpression	trav = trav -> next		1251423	0		=			
ANR	1252102	Identifier	trav		1251423	0					
ANR	1252103	PtrMemberAccess	trav -> next		1251423	1					
ANR	1252104	Identifier	trav		1251423	0					
ANR	1252105	Identifier	next		1251423	1					
ANR	1252106	ElseStatement	else		1251423	0					
ANR	1252107	IfStatement	"if ( node_is_equal ( trav , ""sequence"" ) )"		1251423	0					
ANR	1252108	Condition	"node_is_equal ( trav , ""sequence"" )"	1157:13:37874:37903	1251423	0	True				
ANR	1252109	CallExpression	"node_is_equal ( trav , ""sequence"" )"		1251423	0					
ANR	1252110	Callee	node_is_equal		1251423	0					
ANR	1252111	Identifier	node_is_equal		1251423	0					
ANR	1252112	ArgumentList	trav		1251423	1					
ANR	1252113	Argument	trav		1251423	0					
ANR	1252114	Identifier	trav		1251423	0					
ANR	1252115	Argument	"""sequence"""		1251423	1					
ANR	1252116	PrimaryExpression	"""sequence"""		1251423	0					
ANR	1252117	CompoundStatement		100:45:2822:2822	1251423	1					
ANR	1252118	IfStatement	if ( ref != NULL )		1251423	0					
ANR	1252119	Condition	ref != NULL	1158:7:37915:37925	1251423	0	True				
ANR	1252120	EqualityExpression	ref != NULL		1251423	0		!=			
ANR	1252121	Identifier	ref		1251423	0					
ANR	1252122	Identifier	NULL		1251423	1					
ANR	1252123	CompoundStatement		101:20:2844:2844	1251423	1					
ANR	1252124	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: group has both 'ref' attribute and subcontent"" )"	1159:4:37934:38019	1251423	0	True				
ANR	1252125	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: group has both 'ref' attribute and subcontent"" )"		1251423	0					
ANR	1252126	Callee	soap_error0		1251423	0					
ANR	1252127	Identifier	soap_error0		1251423	0					
ANR	1252128	ArgumentList	E_ERROR		1251423	1					
ANR	1252129	Argument	E_ERROR		1251423	0					
ANR	1252130	Identifier	E_ERROR		1251423	0					
ANR	1252131	Argument	"""Parsing Schema: group has both 'ref' attribute and subcontent"""		1251423	1					
ANR	1252132	PrimaryExpression	"""Parsing Schema: group has both 'ref' attribute and subcontent"""		1251423	0					
ANR	1252133	ExpressionStatement	newModel -> kind = XSD_CONTENT_SEQUENCE	1161:3:38029:38066	1251423	1	True				
ANR	1252134	AssignmentExpression	newModel -> kind = XSD_CONTENT_SEQUENCE		1251423	0		=			
ANR	1252135	PtrMemberAccess	newModel -> kind		1251423	0					
ANR	1252136	Identifier	newModel		1251423	0					
ANR	1252137	Identifier	kind		1251423	1					
ANR	1252138	Identifier	XSD_CONTENT_SEQUENCE		1251423	1					
ANR	1252139	ExpressionStatement	"schema_sequence ( sdl , tns , trav , cur_type , newModel )"	1162:3:38071:38122	1251423	2	True				
ANR	1252140	CallExpression	"schema_sequence ( sdl , tns , trav , cur_type , newModel )"		1251423	0					
ANR	1252141	Callee	schema_sequence		1251423	0					
ANR	1252142	Identifier	schema_sequence		1251423	0					
ANR	1252143	ArgumentList	sdl		1251423	1					
ANR	1252144	Argument	sdl		1251423	0					
ANR	1252145	Identifier	sdl		1251423	0					
ANR	1252146	Argument	tns		1251423	1					
ANR	1252147	Identifier	tns		1251423	0					
ANR	1252148	Argument	trav		1251423	2					
ANR	1252149	Identifier	trav		1251423	0					
ANR	1252150	Argument	cur_type		1251423	3					
ANR	1252151	Identifier	cur_type		1251423	0					
ANR	1252152	Argument	newModel		1251423	4					
ANR	1252153	Identifier	newModel		1251423	0					
ANR	1252154	ExpressionStatement	trav = trav -> next	1163:3:38127:38144	1251423	3	True				
ANR	1252155	AssignmentExpression	trav = trav -> next		1251423	0		=			
ANR	1252156	Identifier	trav		1251423	0					
ANR	1252157	PtrMemberAccess	trav -> next		1251423	1					
ANR	1252158	Identifier	trav		1251423	0					
ANR	1252159	Identifier	next		1251423	1					
ANR	1252160	ElseStatement	else		1251423	0					
ANR	1252161	IfStatement	"if ( node_is_equal ( trav , ""all"" ) )"		1251423	0					
ANR	1252162	Condition	"node_is_equal ( trav , ""all"" )"	1164:13:38159:38183	1251423	0	True				
ANR	1252163	CallExpression	"node_is_equal ( trav , ""all"" )"		1251423	0					
ANR	1252164	Callee	node_is_equal		1251423	0					
ANR	1252165	Identifier	node_is_equal		1251423	0					
ANR	1252166	ArgumentList	trav		1251423	1					
ANR	1252167	Argument	trav		1251423	0					
ANR	1252168	Identifier	trav		1251423	0					
ANR	1252169	Argument	"""all"""		1251423	1					
ANR	1252170	PrimaryExpression	"""all"""		1251423	0					
ANR	1252171	CompoundStatement		107:40:3102:3102	1251423	1					
ANR	1252172	IfStatement	if ( ref != NULL )		1251423	0					
ANR	1252173	Condition	ref != NULL	1165:7:38195:38205	1251423	0	True				
ANR	1252174	EqualityExpression	ref != NULL		1251423	0		!=			
ANR	1252175	Identifier	ref		1251423	0					
ANR	1252176	Identifier	NULL		1251423	1					
ANR	1252177	CompoundStatement		108:20:3124:3124	1251423	1					
ANR	1252178	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: group has both 'ref' attribute and subcontent"" )"	1166:4:38214:38299	1251423	0	True				
ANR	1252179	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: group has both 'ref' attribute and subcontent"" )"		1251423	0					
ANR	1252180	Callee	soap_error0		1251423	0					
ANR	1252181	Identifier	soap_error0		1251423	0					
ANR	1252182	ArgumentList	E_ERROR		1251423	1					
ANR	1252183	Argument	E_ERROR		1251423	0					
ANR	1252184	Identifier	E_ERROR		1251423	0					
ANR	1252185	Argument	"""Parsing Schema: group has both 'ref' attribute and subcontent"""		1251423	1					
ANR	1252186	PrimaryExpression	"""Parsing Schema: group has both 'ref' attribute and subcontent"""		1251423	0					
ANR	1252187	ExpressionStatement	newModel -> kind = XSD_CONTENT_ALL	1168:3:38309:38341	1251423	1	True				
ANR	1252188	AssignmentExpression	newModel -> kind = XSD_CONTENT_ALL		1251423	0		=			
ANR	1252189	PtrMemberAccess	newModel -> kind		1251423	0					
ANR	1252190	Identifier	newModel		1251423	0					
ANR	1252191	Identifier	kind		1251423	1					
ANR	1252192	Identifier	XSD_CONTENT_ALL		1251423	1					
ANR	1252193	ExpressionStatement	"schema_all ( sdl , tns , trav , cur_type , newModel )"	1169:3:38346:38392	1251423	2	True				
ANR	1252194	CallExpression	"schema_all ( sdl , tns , trav , cur_type , newModel )"		1251423	0					
ANR	1252195	Callee	schema_all		1251423	0					
ANR	1252196	Identifier	schema_all		1251423	0					
ANR	1252197	ArgumentList	sdl		1251423	1					
ANR	1252198	Argument	sdl		1251423	0					
ANR	1252199	Identifier	sdl		1251423	0					
ANR	1252200	Argument	tns		1251423	1					
ANR	1252201	Identifier	tns		1251423	0					
ANR	1252202	Argument	trav		1251423	2					
ANR	1252203	Identifier	trav		1251423	0					
ANR	1252204	Argument	cur_type		1251423	3					
ANR	1252205	Identifier	cur_type		1251423	0					
ANR	1252206	Argument	newModel		1251423	4					
ANR	1252207	Identifier	newModel		1251423	0					
ANR	1252208	ExpressionStatement	trav = trav -> next	1170:3:38397:38414	1251423	3	True				
ANR	1252209	AssignmentExpression	trav = trav -> next		1251423	0		=			
ANR	1252210	Identifier	trav		1251423	0					
ANR	1252211	PtrMemberAccess	trav -> next		1251423	1					
ANR	1252212	Identifier	trav		1251423	0					
ANR	1252213	Identifier	next		1251423	1					
ANR	1252214	ElseStatement	else		1251423	0					
ANR	1252215	CompoundStatement		114:9:3341:3341	1251423	0					
ANR	1252216	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in group"" , trav -> name )"	1172:3:38430:38506	1251423	0	True				
ANR	1252217	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in group"" , trav -> name )"		1251423	0					
ANR	1252218	Callee	soap_error1		1251423	0					
ANR	1252219	Identifier	soap_error1		1251423	0					
ANR	1252220	ArgumentList	E_ERROR		1251423	1					
ANR	1252221	Argument	E_ERROR		1251423	0					
ANR	1252222	Identifier	E_ERROR		1251423	0					
ANR	1252223	Argument	"""Parsing Schema: unexpected <%s> in group"""		1251423	1					
ANR	1252224	PrimaryExpression	"""Parsing Schema: unexpected <%s> in group"""		1251423	0					
ANR	1252225	Argument	trav -> name		1251423	2					
ANR	1252226	PtrMemberAccess	trav -> name		1251423	0					
ANR	1252227	Identifier	trav		1251423	0					
ANR	1252228	Identifier	name		1251423	1					
ANR	1252229	IfStatement	if ( trav != NULL )		1251423	12					
ANR	1252230	Condition	trav != NULL	1175:5:38520:38531	1251423	0	True				
ANR	1252231	EqualityExpression	trav != NULL		1251423	0		!=			
ANR	1252232	Identifier	trav		1251423	0					
ANR	1252233	Identifier	NULL		1251423	1					
ANR	1252234	CompoundStatement		118:19:3450:3450	1251423	1					
ANR	1252235	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in group"" , trav -> name )"	1176:2:38538:38614	1251423	0	True				
ANR	1252236	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in group"" , trav -> name )"		1251423	0					
ANR	1252237	Callee	soap_error1		1251423	0					
ANR	1252238	Identifier	soap_error1		1251423	0					
ANR	1252239	ArgumentList	E_ERROR		1251423	1					
ANR	1252240	Argument	E_ERROR		1251423	0					
ANR	1252241	Identifier	E_ERROR		1251423	0					
ANR	1252242	Argument	"""Parsing Schema: unexpected <%s> in group"""		1251423	1					
ANR	1252243	PrimaryExpression	"""Parsing Schema: unexpected <%s> in group"""		1251423	0					
ANR	1252244	Argument	trav -> name		1251423	2					
ANR	1252245	PtrMemberAccess	trav -> name		1251423	0					
ANR	1252246	Identifier	trav		1251423	0					
ANR	1252247	Identifier	name		1251423	1					
ANR	1252248	ReturnStatement	return TRUE ;	1178:1:38620:38631	1251423	13	True				
ANR	1252249	Identifier	TRUE		1251423	0					
ANR	1252250	ReturnType	static int		1251423	1					
ANR	1252251	Identifier	schema_group		1251423	2					
ANR	1252252	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr groupType , sdlTypePtr cur_type , sdlContentModelPtr model"		1251423	3					
ANR	1252253	Parameter	sdlPtr sdl	1057:24:34986:34995	1251423	0	True				
ANR	1252254	ParameterType	sdlPtr		1251423	0					
ANR	1252255	Identifier	sdl		1251423	1					
ANR	1252256	Parameter	xmlAttrPtr tns	1057:36:34998:35011	1251423	1	True				
ANR	1252257	ParameterType	xmlAttrPtr		1251423	0					
ANR	1252258	Identifier	tns		1251423	1					
ANR	1252259	Parameter	xmlNodePtr groupType	1057:52:35014:35033	1251423	2	True				
ANR	1252260	ParameterType	xmlNodePtr		1251423	0					
ANR	1252261	Identifier	groupType		1251423	1					
ANR	1252262	Parameter	sdlTypePtr cur_type	1057:74:35036:35054	1251423	3	True				
ANR	1252263	ParameterType	sdlTypePtr		1251423	0					
ANR	1252264	Identifier	cur_type		1251423	1					
ANR	1252265	Parameter	sdlContentModelPtr model	1057:95:35057:35080	1251423	4	True				
ANR	1252266	ParameterType	sdlContentModelPtr		1251423	0					
ANR	1252267	Identifier	model		1251423	1					
ANR	1252268	CFGEntryNode	ENTRY		1251423		True				
ANR	1252269	CFGExitNode	EXIT		1251423		True				
ANR	1252270	Symbol	newType		1251423						
ANR	1252271	Symbol	sdl -> groups		1251423						
ANR	1252272	Symbol	model -> u		1251423						
ANR	1252273	Symbol	trav -> next		1251423						
ANR	1252274	Symbol	get_attribute		1251423						
ANR	1252275	Symbol	trav		1251423						
ANR	1252276	Symbol	type		1251423						
ANR	1252277	Symbol	model -> u . content		1251423						
ANR	1252278	Symbol	cur_type -> model		1251423						
ANR	1252279	Symbol	ref		1251423						
ANR	1252280	Symbol	ref -> children		1251423						
ANR	1252281	Symbol	XSD_CONTENT_GROUP_REF		1251423						
ANR	1252282	Symbol	model		1251423						
ANR	1252283	Symbol	cur_type		1251423						
ANR	1252284	Symbol	NULL		1251423						
ANR	1252285	Symbol	& type		1251423						
ANR	1252286	Symbol	* ref -> children		1251423						
ANR	1252287	Symbol	* sdl		1251423						
ANR	1252288	Symbol	* model		1251423						
ANR	1252289	Symbol	groupType -> children		1251423						
ANR	1252290	Symbol	TRUE		1251423						
ANR	1252291	Symbol	* groupType		1251423						
ANR	1252292	Symbol	ns -> children -> content		1251423						
ANR	1252293	Symbol	* newModel		1251423						
ANR	1252294	Symbol	* * name		1251423						
ANR	1252295	Symbol	& newModel		1251423						
ANR	1252296	Symbol	ref -> children -> content		1251423						
ANR	1252297	Symbol	name -> children -> content		1251423						
ANR	1252298	Symbol	* * ns		1251423						
ANR	1252299	Symbol	* nsptr		1251423						
ANR	1252300	Symbol	tns		1251423						
ANR	1252301	Symbol	name		1251423						
ANR	1252302	Symbol	newModel -> kind		1251423						
ANR	1252303	Symbol	sdl		1251423						
ANR	1252304	Symbol	trav -> name		1251423						
ANR	1252305	Symbol	BAD_CAST		1251423						
ANR	1252306	Symbol	newModel -> u . content		1251423						
ANR	1252307	Symbol	XSD_CONTENT_ALL		1251423						
ANR	1252308	Symbol	groupType		1251423						
ANR	1252309	Symbol	& key		1251423						
ANR	1252310	Symbol	* ns -> children		1251423						
ANR	1252311	Symbol	ns		1251423						
ANR	1252312	Symbol	& newType		1251423						
ANR	1252313	Symbol	node_is_equal		1251423						
ANR	1252314	Symbol	nsptr		1251423						
ANR	1252315	Symbol	groupType -> doc		1251423						
ANR	1252316	Symbol	* trav		1251423						
ANR	1252317	Symbol	emalloc		1251423						
ANR	1252318	Symbol	key . len		1251423						
ANR	1252319	Symbol	delete_model		1251423						
ANR	1252320	Symbol	key		1251423						
ANR	1252321	Symbol	* name		1251423						
ANR	1252322	Symbol	ns -> children		1251423						
ANR	1252323	Symbol	name -> children		1251423						
ANR	1252324	Symbol	SUCCESS		1251423						
ANR	1252325	Symbol	nsptr -> href		1251423						
ANR	1252326	Symbol	* * ref		1251423						
ANR	1252327	Symbol	* ns		1251423						
ANR	1252328	Symbol	* name -> children		1251423						
ANR	1252329	Symbol	delete_type		1251423						
ANR	1252330	Symbol	xmlSearchNs		1251423						
ANR	1252331	Symbol	& ns		1251423						
ANR	1252332	Symbol	* cur_type		1251423						
ANR	1252333	Symbol	XSD_CONTENT_CHOICE		1251423						
ANR	1252334	Symbol	groupType -> properties		1251423						
ANR	1252335	Symbol	newModel -> u . group_ref		1251423						
ANR	1252336	Symbol	newModel		1251423						
ANR	1252337	Symbol	E_ERROR		1251423						
ANR	1252338	Symbol	zend_hash_add		1251423						
ANR	1252339	Symbol	estrdup		1251423						
ANR	1252340	Symbol	key . c		1251423						
ANR	1252341	Symbol	* ref		1251423						
ANR	1252342	Symbol	newModel -> u		1251423						
ANR	1252343	Symbol	XSD_CONTENT_SEQUENCE		1251423						
ANR	1252344	Function	schema_choice	1189:0:38881:40243							
ANR	1252345	FunctionDef	"schema_choice (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr choiceType , sdlTypePtr cur_type , sdlContentModelPtr model)"		1252344	0					
ANR	1252346	CompoundStatement		1190:0:39004:40243	1252344	0					
ANR	1252347	IdentifierDeclStatement	xmlNodePtr trav ;	1191:1:39007:39022	1252344	0	True				
ANR	1252348	IdentifierDecl	trav		1252344	0					
ANR	1252349	IdentifierDeclType	xmlNodePtr		1252344	0					
ANR	1252350	Identifier	trav		1252344	1					
ANR	1252351	IdentifierDeclStatement	sdlContentModelPtr newModel ;	1192:1:39025:39052	1252344	1	True				
ANR	1252352	IdentifierDecl	newModel		1252344	0					
ANR	1252353	IdentifierDeclType	sdlContentModelPtr		1252344	0					
ANR	1252354	Identifier	newModel		1252344	1					
ANR	1252355	ExpressionStatement	newModel = emalloc ( sizeof ( sdlContentModel ) )	1194:1:39056:39099	1252344	2	True				
ANR	1252356	AssignmentExpression	newModel = emalloc ( sizeof ( sdlContentModel ) )		1252344	0		=			
ANR	1252357	Identifier	newModel		1252344	0					
ANR	1252358	CallExpression	emalloc ( sizeof ( sdlContentModel ) )		1252344	1					
ANR	1252359	Callee	emalloc		1252344	0					
ANR	1252360	Identifier	emalloc		1252344	0					
ANR	1252361	ArgumentList	sizeof ( sdlContentModel )		1252344	1					
ANR	1252362	Argument	sizeof ( sdlContentModel )		1252344	0					
ANR	1252363	SizeofExpression	sizeof ( sdlContentModel )		1252344	0					
ANR	1252364	Sizeof	sizeof		1252344	0					
ANR	1252365	SizeofOperand	sdlContentModel		1252344	1					
ANR	1252366	ExpressionStatement	newModel -> kind = XSD_CONTENT_CHOICE	1195:1:39102:39137	1252344	3	True				
ANR	1252367	AssignmentExpression	newModel -> kind = XSD_CONTENT_CHOICE		1252344	0		=			
ANR	1252368	PtrMemberAccess	newModel -> kind		1252344	0					
ANR	1252369	Identifier	newModel		1252344	0					
ANR	1252370	Identifier	kind		1252344	1					
ANR	1252371	Identifier	XSD_CONTENT_CHOICE		1252344	1					
ANR	1252372	ExpressionStatement	newModel -> u . content = emalloc ( sizeof ( HashTable ) )	1196:1:39140:39188	1252344	4	True				
ANR	1252373	AssignmentExpression	newModel -> u . content = emalloc ( sizeof ( HashTable ) )		1252344	0		=			
ANR	1252374	MemberAccess	newModel -> u . content		1252344	0					
ANR	1252375	PtrMemberAccess	newModel -> u		1252344	0					
ANR	1252376	Identifier	newModel		1252344	0					
ANR	1252377	Identifier	u		1252344	1					
ANR	1252378	Identifier	content		1252344	1					
ANR	1252379	CallExpression	emalloc ( sizeof ( HashTable ) )		1252344	1					
ANR	1252380	Callee	emalloc		1252344	0					
ANR	1252381	Identifier	emalloc		1252344	0					
ANR	1252382	ArgumentList	sizeof ( HashTable )		1252344	1					
ANR	1252383	Argument	sizeof ( HashTable )		1252344	0					
ANR	1252384	SizeofExpression	sizeof ( HashTable )		1252344	0					
ANR	1252385	Sizeof	sizeof		1252344	0					
ANR	1252386	SizeofOperand	HashTable		1252344	1					
ANR	1252387	ExpressionStatement	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"	1197:1:39191:39252	1252344	5	True				
ANR	1252388	CallExpression	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"		1252344	0					
ANR	1252389	Callee	zend_hash_init		1252344	0					
ANR	1252390	Identifier	zend_hash_init		1252344	0					
ANR	1252391	ArgumentList	newModel -> u . content		1252344	1					
ANR	1252392	Argument	newModel -> u . content		1252344	0					
ANR	1252393	MemberAccess	newModel -> u . content		1252344	0					
ANR	1252394	PtrMemberAccess	newModel -> u		1252344	0					
ANR	1252395	Identifier	newModel		1252344	0					
ANR	1252396	Identifier	u		1252344	1					
ANR	1252397	Identifier	content		1252344	1					
ANR	1252398	Argument	0		1252344	1					
ANR	1252399	PrimaryExpression	0		1252344	0					
ANR	1252400	Argument	NULL		1252344	2					
ANR	1252401	Identifier	NULL		1252344	0					
ANR	1252402	Argument	delete_model		1252344	3					
ANR	1252403	Identifier	delete_model		1252344	0					
ANR	1252404	Argument	0		1252344	4					
ANR	1252405	PrimaryExpression	0		1252344	0					
ANR	1252406	IfStatement	if ( model == NULL )		1252344	6					
ANR	1252407	Condition	model == NULL	1198:5:39259:39271	1252344	0	True				
ANR	1252408	EqualityExpression	model == NULL		1252344	0		==			
ANR	1252409	Identifier	model		1252344	0					
ANR	1252410	Identifier	NULL		1252344	1					
ANR	1252411	CompoundStatement		9:20:269:269	1252344	1					
ANR	1252412	ExpressionStatement	cur_type -> model = newModel	1199:2:39278:39304	1252344	0	True				
ANR	1252413	AssignmentExpression	cur_type -> model = newModel		1252344	0		=			
ANR	1252414	PtrMemberAccess	cur_type -> model		1252344	0					
ANR	1252415	Identifier	cur_type		1252344	0					
ANR	1252416	Identifier	model		1252344	1					
ANR	1252417	Identifier	newModel		1252344	1					
ANR	1252418	ElseStatement	else		1252344	0					
ANR	1252419	CompoundStatement		11:8:309:309	1252344	0					
ANR	1252420	ExpressionStatement	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"	1201:2:39318:39406	1252344	0	True				
ANR	1252421	CallExpression	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"		1252344	0					
ANR	1252422	Callee	zend_hash_next_index_insert		1252344	0					
ANR	1252423	Identifier	zend_hash_next_index_insert		1252344	0					
ANR	1252424	ArgumentList	model -> u . content		1252344	1					
ANR	1252425	Argument	model -> u . content		1252344	0					
ANR	1252426	MemberAccess	model -> u . content		1252344	0					
ANR	1252427	PtrMemberAccess	model -> u		1252344	0					
ANR	1252428	Identifier	model		1252344	0					
ANR	1252429	Identifier	u		1252344	1					
ANR	1252430	Identifier	content		1252344	1					
ANR	1252431	Argument	& newModel		1252344	1					
ANR	1252432	UnaryOperationExpression	& newModel		1252344	0					
ANR	1252433	UnaryOperator	&		1252344	0					
ANR	1252434	Identifier	newModel		1252344	1					
ANR	1252435	Argument	sizeof ( sdlContentModelPtr )		1252344	2					
ANR	1252436	SizeofExpression	sizeof ( sdlContentModelPtr )		1252344	0					
ANR	1252437	Sizeof	sizeof		1252344	0					
ANR	1252438	SizeofOperand	sdlContentModelPtr		1252344	1					
ANR	1252439	Argument	NULL		1252344	3					
ANR	1252440	Identifier	NULL		1252344	0					
ANR	1252441	ExpressionStatement	"schema_min_max ( choiceType , newModel )"	1204:1:39413:39449	1252344	7	True				
ANR	1252442	CallExpression	"schema_min_max ( choiceType , newModel )"		1252344	0					
ANR	1252443	Callee	schema_min_max		1252344	0					
ANR	1252444	Identifier	schema_min_max		1252344	0					
ANR	1252445	ArgumentList	choiceType		1252344	1					
ANR	1252446	Argument	choiceType		1252344	0					
ANR	1252447	Identifier	choiceType		1252344	0					
ANR	1252448	Argument	newModel		1252344	1					
ANR	1252449	Identifier	newModel		1252344	0					
ANR	1252450	ExpressionStatement	trav = choiceType -> children	1206:1:39453:39480	1252344	8	True				
ANR	1252451	AssignmentExpression	trav = choiceType -> children		1252344	0		=			
ANR	1252452	Identifier	trav		1252344	0					
ANR	1252453	PtrMemberAccess	choiceType -> children		1252344	1					
ANR	1252454	Identifier	choiceType		1252344	0					
ANR	1252455	Identifier	children		1252344	1					
ANR	1252456	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1252344	9					
ANR	1252457	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1207:5:39487:39534	1252344	0	True				
ANR	1252458	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1252344	0		&&			
ANR	1252459	EqualityExpression	trav != NULL		1252344	0		!=			
ANR	1252460	Identifier	trav		1252344	0					
ANR	1252461	Identifier	NULL		1252344	1					
ANR	1252462	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1252344	1					
ANR	1252463	Callee	node_is_equal		1252344	0					
ANR	1252464	Identifier	node_is_equal		1252344	0					
ANR	1252465	ArgumentList	trav		1252344	1					
ANR	1252466	Argument	trav		1252344	0					
ANR	1252467	Identifier	trav		1252344	0					
ANR	1252468	Argument	"""annotation"""		1252344	1					
ANR	1252469	PrimaryExpression	"""annotation"""		1252344	0					
ANR	1252470	CompoundStatement		18:55:532:532	1252344	1					
ANR	1252471	ExpressionStatement	trav = trav -> next	1209:2:39576:39593	1252344	0	True				
ANR	1252472	AssignmentExpression	trav = trav -> next		1252344	0		=			
ANR	1252473	Identifier	trav		1252344	0					
ANR	1252474	PtrMemberAccess	trav -> next		1252344	1					
ANR	1252475	Identifier	trav		1252344	0					
ANR	1252476	Identifier	next		1252344	1					
ANR	1252477	WhileStatement	while ( trav != NULL )		1252344	10					
ANR	1252478	Condition	trav != NULL	1211:8:39606:39617	1252344	0	True				
ANR	1252479	EqualityExpression	trav != NULL		1252344	0		!=			
ANR	1252480	Identifier	trav		1252344	0					
ANR	1252481	Identifier	NULL		1252344	1					
ANR	1252482	CompoundStatement		22:22:615:615	1252344	1					
ANR	1252483	IfStatement	"if ( node_is_equal ( trav , ""element"" ) )"		1252344	0					
ANR	1252484	Condition	"node_is_equal ( trav , ""element"" )"	1212:6:39628:39656	1252344	0	True				
ANR	1252485	CallExpression	"node_is_equal ( trav , ""element"" )"		1252344	0					
ANR	1252486	Callee	node_is_equal		1252344	0					
ANR	1252487	Identifier	node_is_equal		1252344	0					
ANR	1252488	ArgumentList	trav		1252344	1					
ANR	1252489	Argument	trav		1252344	0					
ANR	1252490	Identifier	trav		1252344	0					
ANR	1252491	Argument	"""element"""		1252344	1					
ANR	1252492	PrimaryExpression	"""element"""		1252344	0					
ANR	1252493	CompoundStatement		23:37:654:654	1252344	1					
ANR	1252494	ExpressionStatement	"schema_element ( sdl , tns , trav , cur_type , newModel )"	1213:3:39664:39714	1252344	0	True				
ANR	1252495	CallExpression	"schema_element ( sdl , tns , trav , cur_type , newModel )"		1252344	0					
ANR	1252496	Callee	schema_element		1252344	0					
ANR	1252497	Identifier	schema_element		1252344	0					
ANR	1252498	ArgumentList	sdl		1252344	1					
ANR	1252499	Argument	sdl		1252344	0					
ANR	1252500	Identifier	sdl		1252344	0					
ANR	1252501	Argument	tns		1252344	1					
ANR	1252502	Identifier	tns		1252344	0					
ANR	1252503	Argument	trav		1252344	2					
ANR	1252504	Identifier	trav		1252344	0					
ANR	1252505	Argument	cur_type		1252344	3					
ANR	1252506	Identifier	cur_type		1252344	0					
ANR	1252507	Argument	newModel		1252344	4					
ANR	1252508	Identifier	newModel		1252344	0					
ANR	1252509	ElseStatement	else		1252344	0					
ANR	1252510	IfStatement	"if ( node_is_equal ( trav , ""group"" ) )"		1252344	0					
ANR	1252511	Condition	"node_is_equal ( trav , ""group"" )"	1214:13:39729:39755	1252344	0	True				
ANR	1252512	CallExpression	"node_is_equal ( trav , ""group"" )"		1252344	0					
ANR	1252513	Callee	node_is_equal		1252344	0					
ANR	1252514	Identifier	node_is_equal		1252344	0					
ANR	1252515	ArgumentList	trav		1252344	1					
ANR	1252516	Argument	trav		1252344	0					
ANR	1252517	Identifier	trav		1252344	0					
ANR	1252518	Argument	"""group"""		1252344	1					
ANR	1252519	PrimaryExpression	"""group"""		1252344	0					
ANR	1252520	CompoundStatement		25:42:753:753	1252344	1					
ANR	1252521	ExpressionStatement	"schema_group ( sdl , tns , trav , cur_type , newModel )"	1215:3:39763:39811	1252344	0	True				
ANR	1252522	CallExpression	"schema_group ( sdl , tns , trav , cur_type , newModel )"		1252344	0					
ANR	1252523	Callee	schema_group		1252344	0					
ANR	1252524	Identifier	schema_group		1252344	0					
ANR	1252525	ArgumentList	sdl		1252344	1					
ANR	1252526	Argument	sdl		1252344	0					
ANR	1252527	Identifier	sdl		1252344	0					
ANR	1252528	Argument	tns		1252344	1					
ANR	1252529	Identifier	tns		1252344	0					
ANR	1252530	Argument	trav		1252344	2					
ANR	1252531	Identifier	trav		1252344	0					
ANR	1252532	Argument	cur_type		1252344	3					
ANR	1252533	Identifier	cur_type		1252344	0					
ANR	1252534	Argument	newModel		1252344	4					
ANR	1252535	Identifier	newModel		1252344	0					
ANR	1252536	ElseStatement	else		1252344	0					
ANR	1252537	IfStatement	"if ( node_is_equal ( trav , ""choice"" ) )"		1252344	0					
ANR	1252538	Condition	"node_is_equal ( trav , ""choice"" )"	1216:13:39826:39853	1252344	0	True				
ANR	1252539	CallExpression	"node_is_equal ( trav , ""choice"" )"		1252344	0					
ANR	1252540	Callee	node_is_equal		1252344	0					
ANR	1252541	Identifier	node_is_equal		1252344	0					
ANR	1252542	ArgumentList	trav		1252344	1					
ANR	1252543	Argument	trav		1252344	0					
ANR	1252544	Identifier	trav		1252344	0					
ANR	1252545	Argument	"""choice"""		1252344	1					
ANR	1252546	PrimaryExpression	"""choice"""		1252344	0					
ANR	1252547	CompoundStatement		27:43:851:851	1252344	1					
ANR	1252548	ExpressionStatement	"schema_choice ( sdl , tns , trav , cur_type , newModel )"	1217:3:39861:39910	1252344	0	True				
ANR	1252549	CallExpression	"schema_choice ( sdl , tns , trav , cur_type , newModel )"		1252344	0					
ANR	1252550	Callee	schema_choice		1252344	0					
ANR	1252551	Identifier	schema_choice		1252344	0					
ANR	1252552	ArgumentList	sdl		1252344	1					
ANR	1252553	Argument	sdl		1252344	0					
ANR	1252554	Identifier	sdl		1252344	0					
ANR	1252555	Argument	tns		1252344	1					
ANR	1252556	Identifier	tns		1252344	0					
ANR	1252557	Argument	trav		1252344	2					
ANR	1252558	Identifier	trav		1252344	0					
ANR	1252559	Argument	cur_type		1252344	3					
ANR	1252560	Identifier	cur_type		1252344	0					
ANR	1252561	Argument	newModel		1252344	4					
ANR	1252562	Identifier	newModel		1252344	0					
ANR	1252563	ElseStatement	else		1252344	0					
ANR	1252564	IfStatement	"if ( node_is_equal ( trav , ""sequence"" ) )"		1252344	0					
ANR	1252565	Condition	"node_is_equal ( trav , ""sequence"" )"	1218:13:39925:39954	1252344	0	True				
ANR	1252566	CallExpression	"node_is_equal ( trav , ""sequence"" )"		1252344	0					
ANR	1252567	Callee	node_is_equal		1252344	0					
ANR	1252568	Identifier	node_is_equal		1252344	0					
ANR	1252569	ArgumentList	trav		1252344	1					
ANR	1252570	Argument	trav		1252344	0					
ANR	1252571	Identifier	trav		1252344	0					
ANR	1252572	Argument	"""sequence"""		1252344	1					
ANR	1252573	PrimaryExpression	"""sequence"""		1252344	0					
ANR	1252574	CompoundStatement		29:45:952:952	1252344	1					
ANR	1252575	ExpressionStatement	"schema_sequence ( sdl , tns , trav , cur_type , newModel )"	1219:3:39962:40013	1252344	0	True				
ANR	1252576	CallExpression	"schema_sequence ( sdl , tns , trav , cur_type , newModel )"		1252344	0					
ANR	1252577	Callee	schema_sequence		1252344	0					
ANR	1252578	Identifier	schema_sequence		1252344	0					
ANR	1252579	ArgumentList	sdl		1252344	1					
ANR	1252580	Argument	sdl		1252344	0					
ANR	1252581	Identifier	sdl		1252344	0					
ANR	1252582	Argument	tns		1252344	1					
ANR	1252583	Identifier	tns		1252344	0					
ANR	1252584	Argument	trav		1252344	2					
ANR	1252585	Identifier	trav		1252344	0					
ANR	1252586	Argument	cur_type		1252344	3					
ANR	1252587	Identifier	cur_type		1252344	0					
ANR	1252588	Argument	newModel		1252344	4					
ANR	1252589	Identifier	newModel		1252344	0					
ANR	1252590	ElseStatement	else		1252344	0					
ANR	1252591	IfStatement	"if ( node_is_equal ( trav , ""any"" ) )"		1252344	0					
ANR	1252592	Condition	"node_is_equal ( trav , ""any"" )"	1220:13:40028:40052	1252344	0	True				
ANR	1252593	CallExpression	"node_is_equal ( trav , ""any"" )"		1252344	0					
ANR	1252594	Callee	node_is_equal		1252344	0					
ANR	1252595	Identifier	node_is_equal		1252344	0					
ANR	1252596	ArgumentList	trav		1252344	1					
ANR	1252597	Argument	trav		1252344	0					
ANR	1252598	Identifier	trav		1252344	0					
ANR	1252599	Argument	"""any"""		1252344	1					
ANR	1252600	PrimaryExpression	"""any"""		1252344	0					
ANR	1252601	CompoundStatement		31:40:1050:1050	1252344	1					
ANR	1252602	ExpressionStatement	"schema_any ( sdl , tns , trav , cur_type , newModel )"	1221:3:40060:40106	1252344	0	True				
ANR	1252603	CallExpression	"schema_any ( sdl , tns , trav , cur_type , newModel )"		1252344	0					
ANR	1252604	Callee	schema_any		1252344	0					
ANR	1252605	Identifier	schema_any		1252344	0					
ANR	1252606	ArgumentList	sdl		1252344	1					
ANR	1252607	Argument	sdl		1252344	0					
ANR	1252608	Identifier	sdl		1252344	0					
ANR	1252609	Argument	tns		1252344	1					
ANR	1252610	Identifier	tns		1252344	0					
ANR	1252611	Argument	trav		1252344	2					
ANR	1252612	Identifier	trav		1252344	0					
ANR	1252613	Argument	cur_type		1252344	3					
ANR	1252614	Identifier	cur_type		1252344	0					
ANR	1252615	Argument	newModel		1252344	4					
ANR	1252616	Identifier	newModel		1252344	0					
ANR	1252617	ElseStatement	else		1252344	0					
ANR	1252618	CompoundStatement		33:9:1112:1112	1252344	0					
ANR	1252619	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in choice"" , trav -> name )"	1223:3:40122:40199	1252344	0	True				
ANR	1252620	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in choice"" , trav -> name )"		1252344	0					
ANR	1252621	Callee	soap_error1		1252344	0					
ANR	1252622	Identifier	soap_error1		1252344	0					
ANR	1252623	ArgumentList	E_ERROR		1252344	1					
ANR	1252624	Argument	E_ERROR		1252344	0					
ANR	1252625	Identifier	E_ERROR		1252344	0					
ANR	1252626	Argument	"""Parsing Schema: unexpected <%s> in choice"""		1252344	1					
ANR	1252627	PrimaryExpression	"""Parsing Schema: unexpected <%s> in choice"""		1252344	0					
ANR	1252628	Argument	trav -> name		1252344	2					
ANR	1252629	PtrMemberAccess	trav -> name		1252344	0					
ANR	1252630	Identifier	trav		1252344	0					
ANR	1252631	Identifier	name		1252344	1					
ANR	1252632	ExpressionStatement	trav = trav -> next	1225:2:40207:40224	1252344	1	True				
ANR	1252633	AssignmentExpression	trav = trav -> next		1252344	0		=			
ANR	1252634	Identifier	trav		1252344	0					
ANR	1252635	PtrMemberAccess	trav -> next		1252344	1					
ANR	1252636	Identifier	trav		1252344	0					
ANR	1252637	Identifier	next		1252344	1					
ANR	1252638	ReturnStatement	return TRUE ;	1227:1:40230:40241	1252344	11	True				
ANR	1252639	Identifier	TRUE		1252344	0					
ANR	1252640	ReturnType	static int		1252344	1					
ANR	1252641	Identifier	schema_choice		1252344	2					
ANR	1252642	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr choiceType , sdlTypePtr cur_type , sdlContentModelPtr model"		1252344	3					
ANR	1252643	Parameter	sdlPtr sdl	1189:25:38906:38915	1252344	0	True				
ANR	1252644	ParameterType	sdlPtr		1252344	0					
ANR	1252645	Identifier	sdl		1252344	1					
ANR	1252646	Parameter	xmlAttrPtr tns	1189:37:38918:38931	1252344	1	True				
ANR	1252647	ParameterType	xmlAttrPtr		1252344	0					
ANR	1252648	Identifier	tns		1252344	1					
ANR	1252649	Parameter	xmlNodePtr choiceType	1189:53:38934:38954	1252344	2	True				
ANR	1252650	ParameterType	xmlNodePtr		1252344	0					
ANR	1252651	Identifier	choiceType		1252344	1					
ANR	1252652	Parameter	sdlTypePtr cur_type	1189:76:38957:38975	1252344	3	True				
ANR	1252653	ParameterType	sdlTypePtr		1252344	0					
ANR	1252654	Identifier	cur_type		1252344	1					
ANR	1252655	Parameter	sdlContentModelPtr model	1189:97:38978:39001	1252344	4	True				
ANR	1252656	ParameterType	sdlContentModelPtr		1252344	0					
ANR	1252657	Identifier	model		1252344	1					
ANR	1252658	CFGEntryNode	ENTRY		1252344		True				
ANR	1252659	CFGExitNode	EXIT		1252344		True				
ANR	1252660	Symbol	model -> u		1252344						
ANR	1252661	Symbol	trav -> next		1252344						
ANR	1252662	Symbol	trav		1252344						
ANR	1252663	Symbol	node_is_equal		1252344						
ANR	1252664	Symbol	model -> u . content		1252344						
ANR	1252665	Symbol	* trav		1252344						
ANR	1252666	Symbol	choiceType		1252344						
ANR	1252667	Symbol	cur_type -> model		1252344						
ANR	1252668	Symbol	emalloc		1252344						
ANR	1252669	Symbol	* choiceType		1252344						
ANR	1252670	Symbol	model		1252344						
ANR	1252671	Symbol	delete_model		1252344						
ANR	1252672	Symbol	cur_type		1252344						
ANR	1252673	Symbol	NULL		1252344						
ANR	1252674	Symbol	choiceType -> children		1252344						
ANR	1252675	Symbol	* model		1252344						
ANR	1252676	Symbol	TRUE		1252344						
ANR	1252677	Symbol	* newModel		1252344						
ANR	1252678	Symbol	* cur_type		1252344						
ANR	1252679	Symbol	& newModel		1252344						
ANR	1252680	Symbol	XSD_CONTENT_CHOICE		1252344						
ANR	1252681	Symbol	newModel		1252344						
ANR	1252682	Symbol	E_ERROR		1252344						
ANR	1252683	Symbol	tns		1252344						
ANR	1252684	Symbol	newModel -> kind		1252344						
ANR	1252685	Symbol	sdl		1252344						
ANR	1252686	Symbol	trav -> name		1252344						
ANR	1252687	Symbol	newModel -> u		1252344						
ANR	1252688	Symbol	newModel -> u . content		1252344						
ANR	1252689	Function	schema_sequence	1239:0:40496:41855							
ANR	1252690	FunctionDef	"schema_sequence (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr seqType , sdlTypePtr cur_type , sdlContentModelPtr model)"		1252689	0					
ANR	1252691	CompoundStatement		1240:0:40618:41855	1252689	0					
ANR	1252692	IdentifierDeclStatement	xmlNodePtr trav ;	1241:1:40621:40636	1252689	0	True				
ANR	1252693	IdentifierDecl	trav		1252689	0					
ANR	1252694	IdentifierDeclType	xmlNodePtr		1252689	0					
ANR	1252695	Identifier	trav		1252689	1					
ANR	1252696	IdentifierDeclStatement	sdlContentModelPtr newModel ;	1242:1:40639:40666	1252689	1	True				
ANR	1252697	IdentifierDecl	newModel		1252689	0					
ANR	1252698	IdentifierDeclType	sdlContentModelPtr		1252689	0					
ANR	1252699	Identifier	newModel		1252689	1					
ANR	1252700	ExpressionStatement	newModel = emalloc ( sizeof ( sdlContentModel ) )	1244:1:40670:40713	1252689	2	True				
ANR	1252701	AssignmentExpression	newModel = emalloc ( sizeof ( sdlContentModel ) )		1252689	0		=			
ANR	1252702	Identifier	newModel		1252689	0					
ANR	1252703	CallExpression	emalloc ( sizeof ( sdlContentModel ) )		1252689	1					
ANR	1252704	Callee	emalloc		1252689	0					
ANR	1252705	Identifier	emalloc		1252689	0					
ANR	1252706	ArgumentList	sizeof ( sdlContentModel )		1252689	1					
ANR	1252707	Argument	sizeof ( sdlContentModel )		1252689	0					
ANR	1252708	SizeofExpression	sizeof ( sdlContentModel )		1252689	0					
ANR	1252709	Sizeof	sizeof		1252689	0					
ANR	1252710	SizeofOperand	sdlContentModel		1252689	1					
ANR	1252711	ExpressionStatement	newModel -> kind = XSD_CONTENT_SEQUENCE	1245:1:40716:40753	1252689	3	True				
ANR	1252712	AssignmentExpression	newModel -> kind = XSD_CONTENT_SEQUENCE		1252689	0		=			
ANR	1252713	PtrMemberAccess	newModel -> kind		1252689	0					
ANR	1252714	Identifier	newModel		1252689	0					
ANR	1252715	Identifier	kind		1252689	1					
ANR	1252716	Identifier	XSD_CONTENT_SEQUENCE		1252689	1					
ANR	1252717	ExpressionStatement	newModel -> u . content = emalloc ( sizeof ( HashTable ) )	1246:1:40756:40804	1252689	4	True				
ANR	1252718	AssignmentExpression	newModel -> u . content = emalloc ( sizeof ( HashTable ) )		1252689	0		=			
ANR	1252719	MemberAccess	newModel -> u . content		1252689	0					
ANR	1252720	PtrMemberAccess	newModel -> u		1252689	0					
ANR	1252721	Identifier	newModel		1252689	0					
ANR	1252722	Identifier	u		1252689	1					
ANR	1252723	Identifier	content		1252689	1					
ANR	1252724	CallExpression	emalloc ( sizeof ( HashTable ) )		1252689	1					
ANR	1252725	Callee	emalloc		1252689	0					
ANR	1252726	Identifier	emalloc		1252689	0					
ANR	1252727	ArgumentList	sizeof ( HashTable )		1252689	1					
ANR	1252728	Argument	sizeof ( HashTable )		1252689	0					
ANR	1252729	SizeofExpression	sizeof ( HashTable )		1252689	0					
ANR	1252730	Sizeof	sizeof		1252689	0					
ANR	1252731	SizeofOperand	HashTable		1252689	1					
ANR	1252732	ExpressionStatement	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"	1247:1:40807:40868	1252689	5	True				
ANR	1252733	CallExpression	"zend_hash_init ( newModel -> u . content , 0 , NULL , delete_model , 0 )"		1252689	0					
ANR	1252734	Callee	zend_hash_init		1252689	0					
ANR	1252735	Identifier	zend_hash_init		1252689	0					
ANR	1252736	ArgumentList	newModel -> u . content		1252689	1					
ANR	1252737	Argument	newModel -> u . content		1252689	0					
ANR	1252738	MemberAccess	newModel -> u . content		1252689	0					
ANR	1252739	PtrMemberAccess	newModel -> u		1252689	0					
ANR	1252740	Identifier	newModel		1252689	0					
ANR	1252741	Identifier	u		1252689	1					
ANR	1252742	Identifier	content		1252689	1					
ANR	1252743	Argument	0		1252689	1					
ANR	1252744	PrimaryExpression	0		1252689	0					
ANR	1252745	Argument	NULL		1252689	2					
ANR	1252746	Identifier	NULL		1252689	0					
ANR	1252747	Argument	delete_model		1252689	3					
ANR	1252748	Identifier	delete_model		1252689	0					
ANR	1252749	Argument	0		1252689	4					
ANR	1252750	PrimaryExpression	0		1252689	0					
ANR	1252751	IfStatement	if ( model == NULL )		1252689	6					
ANR	1252752	Condition	model == NULL	1248:5:40875:40887	1252689	0	True				
ANR	1252753	EqualityExpression	model == NULL		1252689	0		==			
ANR	1252754	Identifier	model		1252689	0					
ANR	1252755	Identifier	NULL		1252689	1					
ANR	1252756	CompoundStatement		9:20:271:271	1252689	1					
ANR	1252757	ExpressionStatement	cur_type -> model = newModel	1249:2:40894:40920	1252689	0	True				
ANR	1252758	AssignmentExpression	cur_type -> model = newModel		1252689	0		=			
ANR	1252759	PtrMemberAccess	cur_type -> model		1252689	0					
ANR	1252760	Identifier	cur_type		1252689	0					
ANR	1252761	Identifier	model		1252689	1					
ANR	1252762	Identifier	newModel		1252689	1					
ANR	1252763	ElseStatement	else		1252689	0					
ANR	1252764	CompoundStatement		11:8:311:311	1252689	0					
ANR	1252765	ExpressionStatement	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"	1251:2:40934:41022	1252689	0	True				
ANR	1252766	CallExpression	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"		1252689	0					
ANR	1252767	Callee	zend_hash_next_index_insert		1252689	0					
ANR	1252768	Identifier	zend_hash_next_index_insert		1252689	0					
ANR	1252769	ArgumentList	model -> u . content		1252689	1					
ANR	1252770	Argument	model -> u . content		1252689	0					
ANR	1252771	MemberAccess	model -> u . content		1252689	0					
ANR	1252772	PtrMemberAccess	model -> u		1252689	0					
ANR	1252773	Identifier	model		1252689	0					
ANR	1252774	Identifier	u		1252689	1					
ANR	1252775	Identifier	content		1252689	1					
ANR	1252776	Argument	& newModel		1252689	1					
ANR	1252777	UnaryOperationExpression	& newModel		1252689	0					
ANR	1252778	UnaryOperator	&		1252689	0					
ANR	1252779	Identifier	newModel		1252689	1					
ANR	1252780	Argument	sizeof ( sdlContentModelPtr )		1252689	2					
ANR	1252781	SizeofExpression	sizeof ( sdlContentModelPtr )		1252689	0					
ANR	1252782	Sizeof	sizeof		1252689	0					
ANR	1252783	SizeofOperand	sdlContentModelPtr		1252689	1					
ANR	1252784	Argument	NULL		1252689	3					
ANR	1252785	Identifier	NULL		1252689	0					
ANR	1252786	ExpressionStatement	"schema_min_max ( seqType , newModel )"	1254:1:41029:41062	1252689	7	True				
ANR	1252787	CallExpression	"schema_min_max ( seqType , newModel )"		1252689	0					
ANR	1252788	Callee	schema_min_max		1252689	0					
ANR	1252789	Identifier	schema_min_max		1252689	0					
ANR	1252790	ArgumentList	seqType		1252689	1					
ANR	1252791	Argument	seqType		1252689	0					
ANR	1252792	Identifier	seqType		1252689	0					
ANR	1252793	Argument	newModel		1252689	1					
ANR	1252794	Identifier	newModel		1252689	0					
ANR	1252795	ExpressionStatement	trav = seqType -> children	1256:1:41066:41090	1252689	8	True				
ANR	1252796	AssignmentExpression	trav = seqType -> children		1252689	0		=			
ANR	1252797	Identifier	trav		1252689	0					
ANR	1252798	PtrMemberAccess	seqType -> children		1252689	1					
ANR	1252799	Identifier	seqType		1252689	0					
ANR	1252800	Identifier	children		1252689	1					
ANR	1252801	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1252689	9					
ANR	1252802	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1257:5:41097:41144	1252689	0	True				
ANR	1252803	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1252689	0		&&			
ANR	1252804	EqualityExpression	trav != NULL		1252689	0		!=			
ANR	1252805	Identifier	trav		1252689	0					
ANR	1252806	Identifier	NULL		1252689	1					
ANR	1252807	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1252689	1					
ANR	1252808	Callee	node_is_equal		1252689	0					
ANR	1252809	Identifier	node_is_equal		1252689	0					
ANR	1252810	ArgumentList	trav		1252689	1					
ANR	1252811	Argument	trav		1252689	0					
ANR	1252812	Identifier	trav		1252689	0					
ANR	1252813	Argument	"""annotation"""		1252689	1					
ANR	1252814	PrimaryExpression	"""annotation"""		1252689	0					
ANR	1252815	CompoundStatement		18:55:528:528	1252689	1					
ANR	1252816	ExpressionStatement	trav = trav -> next	1259:2:41186:41203	1252689	0	True				
ANR	1252817	AssignmentExpression	trav = trav -> next		1252689	0		=			
ANR	1252818	Identifier	trav		1252689	0					
ANR	1252819	PtrMemberAccess	trav -> next		1252689	1					
ANR	1252820	Identifier	trav		1252689	0					
ANR	1252821	Identifier	next		1252689	1					
ANR	1252822	WhileStatement	while ( trav != NULL )		1252689	10					
ANR	1252823	Condition	trav != NULL	1261:8:41216:41227	1252689	0	True				
ANR	1252824	EqualityExpression	trav != NULL		1252689	0		!=			
ANR	1252825	Identifier	trav		1252689	0					
ANR	1252826	Identifier	NULL		1252689	1					
ANR	1252827	CompoundStatement		22:22:611:611	1252689	1					
ANR	1252828	IfStatement	"if ( node_is_equal ( trav , ""element"" ) )"		1252689	0					
ANR	1252829	Condition	"node_is_equal ( trav , ""element"" )"	1262:6:41238:41266	1252689	0	True				
ANR	1252830	CallExpression	"node_is_equal ( trav , ""element"" )"		1252689	0					
ANR	1252831	Callee	node_is_equal		1252689	0					
ANR	1252832	Identifier	node_is_equal		1252689	0					
ANR	1252833	ArgumentList	trav		1252689	1					
ANR	1252834	Argument	trav		1252689	0					
ANR	1252835	Identifier	trav		1252689	0					
ANR	1252836	Argument	"""element"""		1252689	1					
ANR	1252837	PrimaryExpression	"""element"""		1252689	0					
ANR	1252838	CompoundStatement		23:37:650:650	1252689	1					
ANR	1252839	ExpressionStatement	"schema_element ( sdl , tns , trav , cur_type , newModel )"	1263:3:41274:41324	1252689	0	True				
ANR	1252840	CallExpression	"schema_element ( sdl , tns , trav , cur_type , newModel )"		1252689	0					
ANR	1252841	Callee	schema_element		1252689	0					
ANR	1252842	Identifier	schema_element		1252689	0					
ANR	1252843	ArgumentList	sdl		1252689	1					
ANR	1252844	Argument	sdl		1252689	0					
ANR	1252845	Identifier	sdl		1252689	0					
ANR	1252846	Argument	tns		1252689	1					
ANR	1252847	Identifier	tns		1252689	0					
ANR	1252848	Argument	trav		1252689	2					
ANR	1252849	Identifier	trav		1252689	0					
ANR	1252850	Argument	cur_type		1252689	3					
ANR	1252851	Identifier	cur_type		1252689	0					
ANR	1252852	Argument	newModel		1252689	4					
ANR	1252853	Identifier	newModel		1252689	0					
ANR	1252854	ElseStatement	else		1252689	0					
ANR	1252855	IfStatement	"if ( node_is_equal ( trav , ""group"" ) )"		1252689	0					
ANR	1252856	Condition	"node_is_equal ( trav , ""group"" )"	1264:13:41339:41365	1252689	0	True				
ANR	1252857	CallExpression	"node_is_equal ( trav , ""group"" )"		1252689	0					
ANR	1252858	Callee	node_is_equal		1252689	0					
ANR	1252859	Identifier	node_is_equal		1252689	0					
ANR	1252860	ArgumentList	trav		1252689	1					
ANR	1252861	Argument	trav		1252689	0					
ANR	1252862	Identifier	trav		1252689	0					
ANR	1252863	Argument	"""group"""		1252689	1					
ANR	1252864	PrimaryExpression	"""group"""		1252689	0					
ANR	1252865	CompoundStatement		25:42:749:749	1252689	1					
ANR	1252866	ExpressionStatement	"schema_group ( sdl , tns , trav , cur_type , newModel )"	1265:3:41373:41421	1252689	0	True				
ANR	1252867	CallExpression	"schema_group ( sdl , tns , trav , cur_type , newModel )"		1252689	0					
ANR	1252868	Callee	schema_group		1252689	0					
ANR	1252869	Identifier	schema_group		1252689	0					
ANR	1252870	ArgumentList	sdl		1252689	1					
ANR	1252871	Argument	sdl		1252689	0					
ANR	1252872	Identifier	sdl		1252689	0					
ANR	1252873	Argument	tns		1252689	1					
ANR	1252874	Identifier	tns		1252689	0					
ANR	1252875	Argument	trav		1252689	2					
ANR	1252876	Identifier	trav		1252689	0					
ANR	1252877	Argument	cur_type		1252689	3					
ANR	1252878	Identifier	cur_type		1252689	0					
ANR	1252879	Argument	newModel		1252689	4					
ANR	1252880	Identifier	newModel		1252689	0					
ANR	1252881	ElseStatement	else		1252689	0					
ANR	1252882	IfStatement	"if ( node_is_equal ( trav , ""choice"" ) )"		1252689	0					
ANR	1252883	Condition	"node_is_equal ( trav , ""choice"" )"	1266:13:41436:41463	1252689	0	True				
ANR	1252884	CallExpression	"node_is_equal ( trav , ""choice"" )"		1252689	0					
ANR	1252885	Callee	node_is_equal		1252689	0					
ANR	1252886	Identifier	node_is_equal		1252689	0					
ANR	1252887	ArgumentList	trav		1252689	1					
ANR	1252888	Argument	trav		1252689	0					
ANR	1252889	Identifier	trav		1252689	0					
ANR	1252890	Argument	"""choice"""		1252689	1					
ANR	1252891	PrimaryExpression	"""choice"""		1252689	0					
ANR	1252892	CompoundStatement		27:43:847:847	1252689	1					
ANR	1252893	ExpressionStatement	"schema_choice ( sdl , tns , trav , cur_type , newModel )"	1267:3:41471:41520	1252689	0	True				
ANR	1252894	CallExpression	"schema_choice ( sdl , tns , trav , cur_type , newModel )"		1252689	0					
ANR	1252895	Callee	schema_choice		1252689	0					
ANR	1252896	Identifier	schema_choice		1252689	0					
ANR	1252897	ArgumentList	sdl		1252689	1					
ANR	1252898	Argument	sdl		1252689	0					
ANR	1252899	Identifier	sdl		1252689	0					
ANR	1252900	Argument	tns		1252689	1					
ANR	1252901	Identifier	tns		1252689	0					
ANR	1252902	Argument	trav		1252689	2					
ANR	1252903	Identifier	trav		1252689	0					
ANR	1252904	Argument	cur_type		1252689	3					
ANR	1252905	Identifier	cur_type		1252689	0					
ANR	1252906	Argument	newModel		1252689	4					
ANR	1252907	Identifier	newModel		1252689	0					
ANR	1252908	ElseStatement	else		1252689	0					
ANR	1252909	IfStatement	"if ( node_is_equal ( trav , ""sequence"" ) )"		1252689	0					
ANR	1252910	Condition	"node_is_equal ( trav , ""sequence"" )"	1268:13:41535:41564	1252689	0	True				
ANR	1252911	CallExpression	"node_is_equal ( trav , ""sequence"" )"		1252689	0					
ANR	1252912	Callee	node_is_equal		1252689	0					
ANR	1252913	Identifier	node_is_equal		1252689	0					
ANR	1252914	ArgumentList	trav		1252689	1					
ANR	1252915	Argument	trav		1252689	0					
ANR	1252916	Identifier	trav		1252689	0					
ANR	1252917	Argument	"""sequence"""		1252689	1					
ANR	1252918	PrimaryExpression	"""sequence"""		1252689	0					
ANR	1252919	CompoundStatement		29:45:948:948	1252689	1					
ANR	1252920	ExpressionStatement	"schema_sequence ( sdl , tns , trav , cur_type , newModel )"	1269:3:41572:41623	1252689	0	True				
ANR	1252921	CallExpression	"schema_sequence ( sdl , tns , trav , cur_type , newModel )"		1252689	0					
ANR	1252922	Callee	schema_sequence		1252689	0					
ANR	1252923	Identifier	schema_sequence		1252689	0					
ANR	1252924	ArgumentList	sdl		1252689	1					
ANR	1252925	Argument	sdl		1252689	0					
ANR	1252926	Identifier	sdl		1252689	0					
ANR	1252927	Argument	tns		1252689	1					
ANR	1252928	Identifier	tns		1252689	0					
ANR	1252929	Argument	trav		1252689	2					
ANR	1252930	Identifier	trav		1252689	0					
ANR	1252931	Argument	cur_type		1252689	3					
ANR	1252932	Identifier	cur_type		1252689	0					
ANR	1252933	Argument	newModel		1252689	4					
ANR	1252934	Identifier	newModel		1252689	0					
ANR	1252935	ElseStatement	else		1252689	0					
ANR	1252936	IfStatement	"if ( node_is_equal ( trav , ""any"" ) )"		1252689	0					
ANR	1252937	Condition	"node_is_equal ( trav , ""any"" )"	1270:13:41638:41662	1252689	0	True				
ANR	1252938	CallExpression	"node_is_equal ( trav , ""any"" )"		1252689	0					
ANR	1252939	Callee	node_is_equal		1252689	0					
ANR	1252940	Identifier	node_is_equal		1252689	0					
ANR	1252941	ArgumentList	trav		1252689	1					
ANR	1252942	Argument	trav		1252689	0					
ANR	1252943	Identifier	trav		1252689	0					
ANR	1252944	Argument	"""any"""		1252689	1					
ANR	1252945	PrimaryExpression	"""any"""		1252689	0					
ANR	1252946	CompoundStatement		31:40:1046:1046	1252689	1					
ANR	1252947	ExpressionStatement	"schema_any ( sdl , tns , trav , cur_type , newModel )"	1271:3:41670:41716	1252689	0	True				
ANR	1252948	CallExpression	"schema_any ( sdl , tns , trav , cur_type , newModel )"		1252689	0					
ANR	1252949	Callee	schema_any		1252689	0					
ANR	1252950	Identifier	schema_any		1252689	0					
ANR	1252951	ArgumentList	sdl		1252689	1					
ANR	1252952	Argument	sdl		1252689	0					
ANR	1252953	Identifier	sdl		1252689	0					
ANR	1252954	Argument	tns		1252689	1					
ANR	1252955	Identifier	tns		1252689	0					
ANR	1252956	Argument	trav		1252689	2					
ANR	1252957	Identifier	trav		1252689	0					
ANR	1252958	Argument	cur_type		1252689	3					
ANR	1252959	Identifier	cur_type		1252689	0					
ANR	1252960	Argument	newModel		1252689	4					
ANR	1252961	Identifier	newModel		1252689	0					
ANR	1252962	ElseStatement	else		1252689	0					
ANR	1252963	CompoundStatement		33:9:1108:1108	1252689	0					
ANR	1252964	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in sequence"" , trav -> name )"	1273:3:41732:41811	1252689	0	True				
ANR	1252965	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in sequence"" , trav -> name )"		1252689	0					
ANR	1252966	Callee	soap_error1		1252689	0					
ANR	1252967	Identifier	soap_error1		1252689	0					
ANR	1252968	ArgumentList	E_ERROR		1252689	1					
ANR	1252969	Argument	E_ERROR		1252689	0					
ANR	1252970	Identifier	E_ERROR		1252689	0					
ANR	1252971	Argument	"""Parsing Schema: unexpected <%s> in sequence"""		1252689	1					
ANR	1252972	PrimaryExpression	"""Parsing Schema: unexpected <%s> in sequence"""		1252689	0					
ANR	1252973	Argument	trav -> name		1252689	2					
ANR	1252974	PtrMemberAccess	trav -> name		1252689	0					
ANR	1252975	Identifier	trav		1252689	0					
ANR	1252976	Identifier	name		1252689	1					
ANR	1252977	ExpressionStatement	trav = trav -> next	1275:2:41819:41836	1252689	1	True				
ANR	1252978	AssignmentExpression	trav = trav -> next		1252689	0		=			
ANR	1252979	Identifier	trav		1252689	0					
ANR	1252980	PtrMemberAccess	trav -> next		1252689	1					
ANR	1252981	Identifier	trav		1252689	0					
ANR	1252982	Identifier	next		1252689	1					
ANR	1252983	ReturnStatement	return TRUE ;	1277:1:41842:41853	1252689	11	True				
ANR	1252984	Identifier	TRUE		1252689	0					
ANR	1252985	ReturnType	static int		1252689	1					
ANR	1252986	Identifier	schema_sequence		1252689	2					
ANR	1252987	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr seqType , sdlTypePtr cur_type , sdlContentModelPtr model"		1252689	3					
ANR	1252988	Parameter	sdlPtr sdl	1239:27:40523:40532	1252689	0	True				
ANR	1252989	ParameterType	sdlPtr		1252689	0					
ANR	1252990	Identifier	sdl		1252689	1					
ANR	1252991	Parameter	xmlAttrPtr tns	1239:39:40535:40548	1252689	1	True				
ANR	1252992	ParameterType	xmlAttrPtr		1252689	0					
ANR	1252993	Identifier	tns		1252689	1					
ANR	1252994	Parameter	xmlNodePtr seqType	1239:55:40551:40568	1252689	2	True				
ANR	1252995	ParameterType	xmlNodePtr		1252689	0					
ANR	1252996	Identifier	seqType		1252689	1					
ANR	1252997	Parameter	sdlTypePtr cur_type	1239:75:40571:40589	1252689	3	True				
ANR	1252998	ParameterType	sdlTypePtr		1252689	0					
ANR	1252999	Identifier	cur_type		1252689	1					
ANR	1253000	Parameter	sdlContentModelPtr model	1239:96:40592:40615	1252689	4	True				
ANR	1253001	ParameterType	sdlContentModelPtr		1252689	0					
ANR	1253002	Identifier	model		1252689	1					
ANR	1253003	CFGEntryNode	ENTRY		1252689		True				
ANR	1253004	CFGExitNode	EXIT		1252689		True				
ANR	1253005	Symbol	model -> u		1252689						
ANR	1253006	Symbol	trav -> next		1252689						
ANR	1253007	Symbol	trav		1252689						
ANR	1253008	Symbol	* seqType		1252689						
ANR	1253009	Symbol	node_is_equal		1252689						
ANR	1253010	Symbol	model -> u . content		1252689						
ANR	1253011	Symbol	* trav		1252689						
ANR	1253012	Symbol	cur_type -> model		1252689						
ANR	1253013	Symbol	emalloc		1252689						
ANR	1253014	Symbol	model		1252689						
ANR	1253015	Symbol	delete_model		1252689						
ANR	1253016	Symbol	cur_type		1252689						
ANR	1253017	Symbol	seqType		1252689						
ANR	1253018	Symbol	NULL		1252689						
ANR	1253019	Symbol	* model		1252689						
ANR	1253020	Symbol	TRUE		1252689						
ANR	1253021	Symbol	* newModel		1252689						
ANR	1253022	Symbol	* cur_type		1252689						
ANR	1253023	Symbol	& newModel		1252689						
ANR	1253024	Symbol	seqType -> children		1252689						
ANR	1253025	Symbol	newModel		1252689						
ANR	1253026	Symbol	E_ERROR		1252689						
ANR	1253027	Symbol	tns		1252689						
ANR	1253028	Symbol	newModel -> kind		1252689						
ANR	1253029	Symbol	sdl		1252689						
ANR	1253030	Symbol	trav -> name		1252689						
ANR	1253031	Symbol	newModel -> u		1252689						
ANR	1253032	Symbol	XSD_CONTENT_SEQUENCE		1252689						
ANR	1253033	Symbol	newModel -> u . content		1252689						
ANR	1253034	Function	schema_any	1291:0:42200:42606							
ANR	1253035	FunctionDef	"schema_any (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr anyType , sdlTypePtr cur_type , sdlContentModelPtr model)"		1253034	0					
ANR	1253036	CompoundStatement		1292:0:42317:42606	1253034	0					
ANR	1253037	IfStatement	if ( model != NULL )		1253034	0					
ANR	1253038	Condition	model != NULL	1293:5:42324:42336	1253034	0	True				
ANR	1253039	EqualityExpression	model != NULL		1253034	0		!=			
ANR	1253040	Identifier	model		1253034	0					
ANR	1253041	Identifier	NULL		1253034	1					
ANR	1253042	CompoundStatement		3:2:25:52	1253034	1					
ANR	1253043	IdentifierDeclStatement	sdlContentModelPtr newModel ;	1294:2:42343:42370	1253034	0	True				
ANR	1253044	IdentifierDecl	newModel		1253034	0					
ANR	1253045	IdentifierDeclType	sdlContentModelPtr		1253034	0					
ANR	1253046	Identifier	newModel		1253034	1					
ANR	1253047	ExpressionStatement	newModel = emalloc ( sizeof ( sdlContentModel ) )	1296:2:42375:42418	1253034	1	True				
ANR	1253048	AssignmentExpression	newModel = emalloc ( sizeof ( sdlContentModel ) )		1253034	0		=			
ANR	1253049	Identifier	newModel		1253034	0					
ANR	1253050	CallExpression	emalloc ( sizeof ( sdlContentModel ) )		1253034	1					
ANR	1253051	Callee	emalloc		1253034	0					
ANR	1253052	Identifier	emalloc		1253034	0					
ANR	1253053	ArgumentList	sizeof ( sdlContentModel )		1253034	1					
ANR	1253054	Argument	sizeof ( sdlContentModel )		1253034	0					
ANR	1253055	SizeofExpression	sizeof ( sdlContentModel )		1253034	0					
ANR	1253056	Sizeof	sizeof		1253034	0					
ANR	1253057	SizeofOperand	sdlContentModel		1253034	1					
ANR	1253058	ExpressionStatement	newModel -> kind = XSD_CONTENT_ANY	1297:2:42422:42454	1253034	2	True				
ANR	1253059	AssignmentExpression	newModel -> kind = XSD_CONTENT_ANY		1253034	0		=			
ANR	1253060	PtrMemberAccess	newModel -> kind		1253034	0					
ANR	1253061	Identifier	newModel		1253034	0					
ANR	1253062	Identifier	kind		1253034	1					
ANR	1253063	Identifier	XSD_CONTENT_ANY		1253034	1					
ANR	1253064	ExpressionStatement	"schema_min_max ( anyType , newModel )"	1299:2:42459:42492	1253034	3	True				
ANR	1253065	CallExpression	"schema_min_max ( anyType , newModel )"		1253034	0					
ANR	1253066	Callee	schema_min_max		1253034	0					
ANR	1253067	Identifier	schema_min_max		1253034	0					
ANR	1253068	ArgumentList	anyType		1253034	1					
ANR	1253069	Argument	anyType		1253034	0					
ANR	1253070	Identifier	anyType		1253034	0					
ANR	1253071	Argument	newModel		1253034	1					
ANR	1253072	Identifier	newModel		1253034	0					
ANR	1253073	ExpressionStatement	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"	1301:2:42497:42587	1253034	4	True				
ANR	1253074	CallExpression	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"		1253034	0					
ANR	1253075	Callee	zend_hash_next_index_insert		1253034	0					
ANR	1253076	Identifier	zend_hash_next_index_insert		1253034	0					
ANR	1253077	ArgumentList	model -> u . content		1253034	1					
ANR	1253078	Argument	model -> u . content		1253034	0					
ANR	1253079	MemberAccess	model -> u . content		1253034	0					
ANR	1253080	PtrMemberAccess	model -> u		1253034	0					
ANR	1253081	Identifier	model		1253034	0					
ANR	1253082	Identifier	u		1253034	1					
ANR	1253083	Identifier	content		1253034	1					
ANR	1253084	Argument	& newModel		1253034	1					
ANR	1253085	UnaryOperationExpression	& newModel		1253034	0					
ANR	1253086	UnaryOperator	&		1253034	0					
ANR	1253087	Identifier	newModel		1253034	1					
ANR	1253088	Argument	sizeof ( sdlContentModelPtr )		1253034	2					
ANR	1253089	SizeofExpression	sizeof ( sdlContentModelPtr )		1253034	0					
ANR	1253090	Sizeof	sizeof		1253034	0					
ANR	1253091	SizeofOperand	sdlContentModelPtr		1253034	1					
ANR	1253092	Argument	NULL		1253034	3					
ANR	1253093	Identifier	NULL		1253034	0					
ANR	1253094	ReturnStatement	return TRUE ;	1303:1:42593:42604	1253034	1	True				
ANR	1253095	Identifier	TRUE		1253034	0					
ANR	1253096	ReturnType	static int		1253034	1					
ANR	1253097	Identifier	schema_any		1253034	2					
ANR	1253098	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr anyType , sdlTypePtr cur_type , sdlContentModelPtr model"		1253034	3					
ANR	1253099	Parameter	sdlPtr sdl	1291:22:42222:42231	1253034	0	True				
ANR	1253100	ParameterType	sdlPtr		1253034	0					
ANR	1253101	Identifier	sdl		1253034	1					
ANR	1253102	Parameter	xmlAttrPtr tns	1291:34:42234:42247	1253034	1	True				
ANR	1253103	ParameterType	xmlAttrPtr		1253034	0					
ANR	1253104	Identifier	tns		1253034	1					
ANR	1253105	Parameter	xmlNodePtr anyType	1291:50:42250:42267	1253034	2	True				
ANR	1253106	ParameterType	xmlNodePtr		1253034	0					
ANR	1253107	Identifier	anyType		1253034	1					
ANR	1253108	Parameter	sdlTypePtr cur_type	1291:70:42270:42288	1253034	3	True				
ANR	1253109	ParameterType	sdlTypePtr		1253034	0					
ANR	1253110	Identifier	cur_type		1253034	1					
ANR	1253111	Parameter	sdlContentModelPtr model	1291:91:42291:42314	1253034	4	True				
ANR	1253112	ParameterType	sdlContentModelPtr		1253034	0					
ANR	1253113	Identifier	model		1253034	1					
ANR	1253114	CFGEntryNode	ENTRY		1253034		True				
ANR	1253115	CFGExitNode	EXIT		1253034		True				
ANR	1253116	Symbol	model -> u		1253034						
ANR	1253117	Symbol	NULL		1253034						
ANR	1253118	Symbol	anyType		1253034						
ANR	1253119	Symbol	* model		1253034						
ANR	1253120	Symbol	TRUE		1253034						
ANR	1253121	Symbol	* newModel		1253034						
ANR	1253122	Symbol	model -> u . content		1253034						
ANR	1253123	Symbol	& newModel		1253034						
ANR	1253124	Symbol	newModel		1253034						
ANR	1253125	Symbol	emalloc		1253034						
ANR	1253126	Symbol	XSD_CONTENT_ANY		1253034						
ANR	1253127	Symbol	tns		1253034						
ANR	1253128	Symbol	newModel -> kind		1253034						
ANR	1253129	Symbol	sdl		1253034						
ANR	1253130	Symbol	model		1253034						
ANR	1253131	Symbol	cur_type		1253034						
ANR	1253132	Function	schema_complexContent	1314:0:42781:43768							
ANR	1253133	FunctionDef	"schema_complexContent (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr compCont , sdlTypePtr cur_type)"		1253132	0					
ANR	1253134	CompoundStatement		1315:0:42884:43768	1253132	0					
ANR	1253135	IdentifierDeclStatement	xmlNodePtr trav ;	1316:1:42887:42902	1253132	0	True				
ANR	1253136	IdentifierDecl	trav		1253132	0					
ANR	1253137	IdentifierDeclType	xmlNodePtr		1253132	0					
ANR	1253138	Identifier	trav		1253132	1					
ANR	1253139	ExpressionStatement	trav = compCont -> children	1318:1:42906:42931	1253132	1	True				
ANR	1253140	AssignmentExpression	trav = compCont -> children		1253132	0		=			
ANR	1253141	Identifier	trav		1253132	0					
ANR	1253142	PtrMemberAccess	compCont -> children		1253132	1					
ANR	1253143	Identifier	compCont		1253132	0					
ANR	1253144	Identifier	children		1253132	1					
ANR	1253145	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1253132	2					
ANR	1253146	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1319:5:42938:42985	1253132	0	True				
ANR	1253147	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1253132	0		&&			
ANR	1253148	EqualityExpression	trav != NULL		1253132	0		!=			
ANR	1253149	Identifier	trav		1253132	0					
ANR	1253150	Identifier	NULL		1253132	1					
ANR	1253151	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1253132	1					
ANR	1253152	Callee	node_is_equal		1253132	0					
ANR	1253153	Identifier	node_is_equal		1253132	0					
ANR	1253154	ArgumentList	trav		1253132	1					
ANR	1253155	Argument	trav		1253132	0					
ANR	1253156	Identifier	trav		1253132	0					
ANR	1253157	Argument	"""annotation"""		1253132	1					
ANR	1253158	PrimaryExpression	"""annotation"""		1253132	0					
ANR	1253159	CompoundStatement		5:55:103:103	1253132	1					
ANR	1253160	ExpressionStatement	trav = trav -> next	1321:2:43027:43044	1253132	0	True				
ANR	1253161	AssignmentExpression	trav = trav -> next		1253132	0		=			
ANR	1253162	Identifier	trav		1253132	0					
ANR	1253163	PtrMemberAccess	trav -> next		1253132	1					
ANR	1253164	Identifier	trav		1253132	0					
ANR	1253165	Identifier	next		1253132	1					
ANR	1253166	IfStatement	if ( trav != NULL )		1253132	3					
ANR	1253167	Condition	trav != NULL	1323:5:43054:43065	1253132	0	True				
ANR	1253168	EqualityExpression	trav != NULL		1253132	0		!=			
ANR	1253169	Identifier	trav		1253132	0					
ANR	1253170	Identifier	NULL		1253132	1					
ANR	1253171	CompoundStatement		9:19:183:183	1253132	1					
ANR	1253172	IfStatement	"if ( node_is_equal ( trav , ""restriction"" ) )"		1253132	0					
ANR	1253173	Condition	"node_is_equal ( trav , ""restriction"" )"	1324:6:43076:43109	1253132	0	True				
ANR	1253174	CallExpression	"node_is_equal ( trav , ""restriction"" )"		1253132	0					
ANR	1253175	Callee	node_is_equal		1253132	0					
ANR	1253176	Identifier	node_is_equal		1253132	0					
ANR	1253177	ArgumentList	trav		1253132	1					
ANR	1253178	Argument	trav		1253132	0					
ANR	1253179	Identifier	trav		1253132	0					
ANR	1253180	Argument	"""restriction"""		1253132	1					
ANR	1253181	PrimaryExpression	"""restriction"""		1253132	0					
ANR	1253182	CompoundStatement		10:42:227:227	1253132	1					
ANR	1253183	ExpressionStatement	cur_type -> kind = XSD_TYPEKIND_RESTRICTION	1325:3:43117:43158	1253132	0	True				
ANR	1253184	AssignmentExpression	cur_type -> kind = XSD_TYPEKIND_RESTRICTION		1253132	0		=			
ANR	1253185	PtrMemberAccess	cur_type -> kind		1253132	0					
ANR	1253186	Identifier	cur_type		1253132	0					
ANR	1253187	Identifier	kind		1253132	1					
ANR	1253188	Identifier	XSD_TYPEKIND_RESTRICTION		1253132	1					
ANR	1253189	ExpressionStatement	"schema_restriction_complexContent ( sdl , tns , trav , cur_type )"	1326:3:43163:43222	1253132	1	True				
ANR	1253190	CallExpression	"schema_restriction_complexContent ( sdl , tns , trav , cur_type )"		1253132	0					
ANR	1253191	Callee	schema_restriction_complexContent		1253132	0					
ANR	1253192	Identifier	schema_restriction_complexContent		1253132	0					
ANR	1253193	ArgumentList	sdl		1253132	1					
ANR	1253194	Argument	sdl		1253132	0					
ANR	1253195	Identifier	sdl		1253132	0					
ANR	1253196	Argument	tns		1253132	1					
ANR	1253197	Identifier	tns		1253132	0					
ANR	1253198	Argument	trav		1253132	2					
ANR	1253199	Identifier	trav		1253132	0					
ANR	1253200	Argument	cur_type		1253132	3					
ANR	1253201	Identifier	cur_type		1253132	0					
ANR	1253202	ExpressionStatement	trav = trav -> next	1327:3:43227:43244	1253132	2	True				
ANR	1253203	AssignmentExpression	trav = trav -> next		1253132	0		=			
ANR	1253204	Identifier	trav		1253132	0					
ANR	1253205	PtrMemberAccess	trav -> next		1253132	1					
ANR	1253206	Identifier	trav		1253132	0					
ANR	1253207	Identifier	next		1253132	1					
ANR	1253208	ElseStatement	else		1253132	0					
ANR	1253209	IfStatement	"if ( node_is_equal ( trav , ""extension"" ) )"		1253132	0					
ANR	1253210	Condition	"node_is_equal ( trav , ""extension"" )"	1328:13:43259:43290	1253132	0	True				
ANR	1253211	CallExpression	"node_is_equal ( trav , ""extension"" )"		1253132	0					
ANR	1253212	Callee	node_is_equal		1253132	0					
ANR	1253213	Identifier	node_is_equal		1253132	0					
ANR	1253214	ArgumentList	trav		1253132	1					
ANR	1253215	Argument	trav		1253132	0					
ANR	1253216	Identifier	trav		1253132	0					
ANR	1253217	Argument	"""extension"""		1253132	1					
ANR	1253218	PrimaryExpression	"""extension"""		1253132	0					
ANR	1253219	CompoundStatement		14:47:408:408	1253132	1					
ANR	1253220	ExpressionStatement	cur_type -> kind = XSD_TYPEKIND_EXTENSION	1329:3:43298:43337	1253132	0	True				
ANR	1253221	AssignmentExpression	cur_type -> kind = XSD_TYPEKIND_EXTENSION		1253132	0		=			
ANR	1253222	PtrMemberAccess	cur_type -> kind		1253132	0					
ANR	1253223	Identifier	cur_type		1253132	0					
ANR	1253224	Identifier	kind		1253132	1					
ANR	1253225	Identifier	XSD_TYPEKIND_EXTENSION		1253132	1					
ANR	1253226	ExpressionStatement	"schema_extension_complexContent ( sdl , tns , trav , cur_type )"	1330:3:43342:43399	1253132	1	True				
ANR	1253227	CallExpression	"schema_extension_complexContent ( sdl , tns , trav , cur_type )"		1253132	0					
ANR	1253228	Callee	schema_extension_complexContent		1253132	0					
ANR	1253229	Identifier	schema_extension_complexContent		1253132	0					
ANR	1253230	ArgumentList	sdl		1253132	1					
ANR	1253231	Argument	sdl		1253132	0					
ANR	1253232	Identifier	sdl		1253132	0					
ANR	1253233	Argument	tns		1253132	1					
ANR	1253234	Identifier	tns		1253132	0					
ANR	1253235	Argument	trav		1253132	2					
ANR	1253236	Identifier	trav		1253132	0					
ANR	1253237	Argument	cur_type		1253132	3					
ANR	1253238	Identifier	cur_type		1253132	0					
ANR	1253239	ExpressionStatement	trav = trav -> next	1331:3:43404:43421	1253132	2	True				
ANR	1253240	AssignmentExpression	trav = trav -> next		1253132	0		=			
ANR	1253241	Identifier	trav		1253132	0					
ANR	1253242	PtrMemberAccess	trav -> next		1253132	1					
ANR	1253243	Identifier	trav		1253132	0					
ANR	1253244	Identifier	next		1253132	1					
ANR	1253245	ElseStatement	else		1253132	0					
ANR	1253246	CompoundStatement		18:9:547:547	1253132	0					
ANR	1253247	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexContent"" , trav -> name )"	1333:3:43437:43522	1253132	0	True				
ANR	1253248	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexContent"" , trav -> name )"		1253132	0					
ANR	1253249	Callee	soap_error1		1253132	0					
ANR	1253250	Identifier	soap_error1		1253132	0					
ANR	1253251	ArgumentList	E_ERROR		1253132	1					
ANR	1253252	Argument	E_ERROR		1253132	0					
ANR	1253253	Identifier	E_ERROR		1253132	0					
ANR	1253254	Argument	"""Parsing Schema: unexpected <%s> in complexContent"""		1253132	1					
ANR	1253255	PrimaryExpression	"""Parsing Schema: unexpected <%s> in complexContent"""		1253132	0					
ANR	1253256	Argument	trav -> name		1253132	2					
ANR	1253257	PtrMemberAccess	trav -> name		1253132	0					
ANR	1253258	Identifier	trav		1253132	0					
ANR	1253259	Identifier	name		1253132	1					
ANR	1253260	ElseStatement	else		1253132	0					
ANR	1253261	CompoundStatement		21:8:651:651	1253132	0					
ANR	1253262	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: <restriction> or <extension> expected in complexContent"" )"	1336:2:43540:43635	1253132	0	True				
ANR	1253263	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: <restriction> or <extension> expected in complexContent"" )"		1253132	0					
ANR	1253264	Callee	soap_error0		1253132	0					
ANR	1253265	Identifier	soap_error0		1253132	0					
ANR	1253266	ArgumentList	E_ERROR		1253132	1					
ANR	1253267	Argument	E_ERROR		1253132	0					
ANR	1253268	Identifier	E_ERROR		1253132	0					
ANR	1253269	Argument	"""Parsing Schema: <restriction> or <extension> expected in complexContent"""		1253132	1					
ANR	1253270	PrimaryExpression	"""Parsing Schema: <restriction> or <extension> expected in complexContent"""		1253132	0					
ANR	1253271	IfStatement	if ( trav != NULL )		1253132	4					
ANR	1253272	Condition	trav != NULL	1338:5:43645:43656	1253132	0	True				
ANR	1253273	EqualityExpression	trav != NULL		1253132	0		!=			
ANR	1253274	Identifier	trav		1253132	0					
ANR	1253275	Identifier	NULL		1253132	1					
ANR	1253276	CompoundStatement		24:19:774:774	1253132	1					
ANR	1253277	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexContent"" , trav -> name )"	1339:2:43663:43748	1253132	0	True				
ANR	1253278	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexContent"" , trav -> name )"		1253132	0					
ANR	1253279	Callee	soap_error1		1253132	0					
ANR	1253280	Identifier	soap_error1		1253132	0					
ANR	1253281	ArgumentList	E_ERROR		1253132	1					
ANR	1253282	Argument	E_ERROR		1253132	0					
ANR	1253283	Identifier	E_ERROR		1253132	0					
ANR	1253284	Argument	"""Parsing Schema: unexpected <%s> in complexContent"""		1253132	1					
ANR	1253285	PrimaryExpression	"""Parsing Schema: unexpected <%s> in complexContent"""		1253132	0					
ANR	1253286	Argument	trav -> name		1253132	2					
ANR	1253287	PtrMemberAccess	trav -> name		1253132	0					
ANR	1253288	Identifier	trav		1253132	0					
ANR	1253289	Identifier	name		1253132	1					
ANR	1253290	ReturnStatement	return TRUE ;	1342:1:43755:43766	1253132	5	True				
ANR	1253291	Identifier	TRUE		1253132	0					
ANR	1253292	ReturnType	static int		1253132	1					
ANR	1253293	Identifier	schema_complexContent		1253132	2					
ANR	1253294	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr compCont , sdlTypePtr cur_type"		1253132	3					
ANR	1253295	Parameter	sdlPtr sdl	1314:33:42814:42823	1253132	0	True				
ANR	1253296	ParameterType	sdlPtr		1253132	0					
ANR	1253297	Identifier	sdl		1253132	1					
ANR	1253298	Parameter	xmlAttrPtr tns	1314:45:42826:42839	1253132	1	True				
ANR	1253299	ParameterType	xmlAttrPtr		1253132	0					
ANR	1253300	Identifier	tns		1253132	1					
ANR	1253301	Parameter	xmlNodePtr compCont	1314:61:42842:42860	1253132	2	True				
ANR	1253302	ParameterType	xmlNodePtr		1253132	0					
ANR	1253303	Identifier	compCont		1253132	1					
ANR	1253304	Parameter	sdlTypePtr cur_type	1314:82:42863:42881	1253132	3	True				
ANR	1253305	ParameterType	sdlTypePtr		1253132	0					
ANR	1253306	Identifier	cur_type		1253132	1					
ANR	1253307	CFGEntryNode	ENTRY		1253132		True				
ANR	1253308	CFGExitNode	EXIT		1253132		True				
ANR	1253309	Symbol	NULL		1253132						
ANR	1253310	Symbol	trav -> next		1253132						
ANR	1253311	Symbol	trav		1253132						
ANR	1253312	Symbol	compCont -> children		1253132						
ANR	1253313	Symbol	TRUE		1253132						
ANR	1253314	Symbol	node_is_equal		1253132						
ANR	1253315	Symbol	* trav		1253132						
ANR	1253316	Symbol	* cur_type		1253132						
ANR	1253317	Symbol	XSD_TYPEKIND_RESTRICTION		1253132						
ANR	1253318	Symbol	compCont		1253132						
ANR	1253319	Symbol	E_ERROR		1253132						
ANR	1253320	Symbol	cur_type -> kind		1253132						
ANR	1253321	Symbol	tns		1253132						
ANR	1253322	Symbol	sdl		1253132						
ANR	1253323	Symbol	* compCont		1253132						
ANR	1253324	Symbol	trav -> name		1253132						
ANR	1253325	Symbol	XSD_TYPEKIND_EXTENSION		1253132						
ANR	1253326	Symbol	cur_type		1253132						
ANR	1253327	Function	schema_complexType	1357:0:44190:47780							
ANR	1253328	FunctionDef	"schema_complexType (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr compType , sdlTypePtr cur_type)"		1253327	0					
ANR	1253329	CompoundStatement		1358:0:44290:47780	1253327	0					
ANR	1253330	IdentifierDeclStatement	xmlNodePtr trav ;	1359:1:44293:44308	1253327	0	True				
ANR	1253331	IdentifierDecl	trav		1253327	0					
ANR	1253332	IdentifierDeclType	xmlNodePtr		1253327	0					
ANR	1253333	Identifier	trav		1253327	1					
ANR	1253334	IdentifierDeclStatement	"xmlAttrPtr attrs , name , ns ;"	1360:1:44311:44337	1253327	1	True				
ANR	1253335	IdentifierDecl	attrs		1253327	0					
ANR	1253336	IdentifierDeclType	xmlAttrPtr		1253327	0					
ANR	1253337	Identifier	attrs		1253327	1					
ANR	1253338	IdentifierDecl	name		1253327	1					
ANR	1253339	IdentifierDeclType	xmlAttrPtr		1253327	0					
ANR	1253340	Identifier	name		1253327	1					
ANR	1253341	IdentifierDecl	ns		1253327	2					
ANR	1253342	IdentifierDeclType	xmlAttrPtr		1253327	0					
ANR	1253343	Identifier	ns		1253327	1					
ANR	1253344	ExpressionStatement	attrs = compType -> properties	1362:1:44341:44369	1253327	2	True				
ANR	1253345	AssignmentExpression	attrs = compType -> properties		1253327	0		=			
ANR	1253346	Identifier	attrs		1253327	0					
ANR	1253347	PtrMemberAccess	compType -> properties		1253327	1					
ANR	1253348	Identifier	compType		1253327	0					
ANR	1253349	Identifier	properties		1253327	1					
ANR	1253350	ExpressionStatement	"ns = get_attribute ( attrs , ""targetNamespace"" )"	1363:1:44372:44416	1253327	3	True				
ANR	1253351	AssignmentExpression	"ns = get_attribute ( attrs , ""targetNamespace"" )"		1253327	0		=			
ANR	1253352	Identifier	ns		1253327	0					
ANR	1253353	CallExpression	"get_attribute ( attrs , ""targetNamespace"" )"		1253327	1					
ANR	1253354	Callee	get_attribute		1253327	0					
ANR	1253355	Identifier	get_attribute		1253327	0					
ANR	1253356	ArgumentList	attrs		1253327	1					
ANR	1253357	Argument	attrs		1253327	0					
ANR	1253358	Identifier	attrs		1253327	0					
ANR	1253359	Argument	"""targetNamespace"""		1253327	1					
ANR	1253360	PrimaryExpression	"""targetNamespace"""		1253327	0					
ANR	1253361	IfStatement	if ( ns == NULL )		1253327	4					
ANR	1253362	Condition	ns == NULL	1364:5:44423:44432	1253327	0	True				
ANR	1253363	EqualityExpression	ns == NULL		1253327	0		==			
ANR	1253364	Identifier	ns		1253327	0					
ANR	1253365	Identifier	NULL		1253327	1					
ANR	1253366	CompoundStatement		7:17:144:144	1253327	1					
ANR	1253367	ExpressionStatement	ns = tns	1365:2:44439:44447	1253327	0	True				
ANR	1253368	AssignmentExpression	ns = tns		1253327	0		=			
ANR	1253369	Identifier	ns		1253327	0					
ANR	1253370	Identifier	tns		1253327	1					
ANR	1253371	ExpressionStatement	"name = get_attribute ( attrs , ""name"" )"	1368:1:44454:44489	1253327	5	True				
ANR	1253372	AssignmentExpression	"name = get_attribute ( attrs , ""name"" )"		1253327	0		=			
ANR	1253373	Identifier	name		1253327	0					
ANR	1253374	CallExpression	"get_attribute ( attrs , ""name"" )"		1253327	1					
ANR	1253375	Callee	get_attribute		1253327	0					
ANR	1253376	Identifier	get_attribute		1253327	0					
ANR	1253377	ArgumentList	attrs		1253327	1					
ANR	1253378	Argument	attrs		1253327	0					
ANR	1253379	Identifier	attrs		1253327	0					
ANR	1253380	Argument	"""name"""		1253327	1					
ANR	1253381	PrimaryExpression	"""name"""		1253327	0					
ANR	1253382	IfStatement	if ( cur_type != NULL )		1253327	6					
ANR	1253383	Condition	cur_type != NULL	1369:5:44496:44511	1253327	0	True				
ANR	1253384	EqualityExpression	cur_type != NULL		1253327	0		!=			
ANR	1253385	Identifier	cur_type		1253327	0					
ANR	1253386	Identifier	NULL		1253327	1					
ANR	1253387	CompoundStatement		14:2:267:291	1253327	1					
ANR	1253388	IdentifierDeclStatement	"sdlTypePtr newType , * ptr ;"	1371:2:44558:44582	1253327	0	True				
ANR	1253389	IdentifierDecl	newType		1253327	0					
ANR	1253390	IdentifierDeclType	sdlTypePtr		1253327	0					
ANR	1253391	Identifier	newType		1253327	1					
ANR	1253392	IdentifierDecl	* ptr		1253327	1					
ANR	1253393	IdentifierDeclType	sdlTypePtr *		1253327	0					
ANR	1253394	Identifier	ptr		1253327	1					
ANR	1253395	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	1373:2:44587:44621	1253327	1	True				
ANR	1253396	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1253327	0		=			
ANR	1253397	Identifier	newType		1253327	0					
ANR	1253398	CallExpression	emalloc ( sizeof ( sdlType ) )		1253327	1					
ANR	1253399	Callee	emalloc		1253327	0					
ANR	1253400	Identifier	emalloc		1253327	0					
ANR	1253401	ArgumentList	sizeof ( sdlType )		1253327	1					
ANR	1253402	Argument	sizeof ( sdlType )		1253327	0					
ANR	1253403	SizeofExpression	sizeof ( sdlType )		1253327	0					
ANR	1253404	Sizeof	sizeof		1253327	0					
ANR	1253405	SizeofOperand	sdlType		1253327	1					
ANR	1253406	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	1374:2:44625:44660	1253327	2	True				
ANR	1253407	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1253327	0					
ANR	1253408	Callee	memset		1253327	0					
ANR	1253409	Identifier	memset		1253327	0					
ANR	1253410	ArgumentList	newType		1253327	1					
ANR	1253411	Argument	newType		1253327	0					
ANR	1253412	Identifier	newType		1253327	0					
ANR	1253413	Argument	0		1253327	1					
ANR	1253414	PrimaryExpression	0		1253327	0					
ANR	1253415	Argument	sizeof ( sdlType )		1253327	2					
ANR	1253416	SizeofExpression	sizeof ( sdlType )		1253327	0					
ANR	1253417	Sizeof	sizeof		1253327	0					
ANR	1253418	SizeofOperand	sdlType		1253327	1					
ANR	1253419	ExpressionStatement	newType -> kind = XSD_TYPEKIND_COMPLEX	1375:2:44664:44700	1253327	3	True				
ANR	1253420	AssignmentExpression	newType -> kind = XSD_TYPEKIND_COMPLEX		1253327	0		=			
ANR	1253421	PtrMemberAccess	newType -> kind		1253327	0					
ANR	1253422	Identifier	newType		1253327	0					
ANR	1253423	Identifier	kind		1253327	1					
ANR	1253424	Identifier	XSD_TYPEKIND_COMPLEX		1253327	1					
ANR	1253425	IfStatement	if ( name != NULL )		1253327	4					
ANR	1253426	Condition	name != NULL	1376:6:44708:44719	1253327	0	True				
ANR	1253427	EqualityExpression	name != NULL		1253327	0		!=			
ANR	1253428	Identifier	name		1253327	0					
ANR	1253429	Identifier	NULL		1253327	1					
ANR	1253430	CompoundStatement		19:20:431:431	1253327	1					
ANR	1253431	ExpressionStatement	newType -> name = estrdup ( ( char * ) name -> children -> content )	1377:3:44727:44782	1253327	0	True				
ANR	1253432	AssignmentExpression	newType -> name = estrdup ( ( char * ) name -> children -> content )		1253327	0		=			
ANR	1253433	PtrMemberAccess	newType -> name		1253327	0					
ANR	1253434	Identifier	newType		1253327	0					
ANR	1253435	Identifier	name		1253327	1					
ANR	1253436	CallExpression	estrdup ( ( char * ) name -> children -> content )		1253327	1					
ANR	1253437	Callee	estrdup		1253327	0					
ANR	1253438	Identifier	estrdup		1253327	0					
ANR	1253439	ArgumentList	( char * ) name -> children -> content		1253327	1					
ANR	1253440	Argument	( char * ) name -> children -> content		1253327	0					
ANR	1253441	CastExpression	( char * ) name -> children -> content		1253327	0					
ANR	1253442	CastTarget	char *		1253327	0					
ANR	1253443	PtrMemberAccess	name -> children -> content		1253327	1					
ANR	1253444	PtrMemberAccess	name -> children		1253327	0					
ANR	1253445	Identifier	name		1253327	0					
ANR	1253446	Identifier	children		1253327	1					
ANR	1253447	Identifier	content		1253327	1					
ANR	1253448	ExpressionStatement	newType -> namens = estrdup ( ( char * ) ns -> children -> content )	1378:3:44787:44842	1253327	1	True				
ANR	1253449	AssignmentExpression	newType -> namens = estrdup ( ( char * ) ns -> children -> content )		1253327	0		=			
ANR	1253450	PtrMemberAccess	newType -> namens		1253327	0					
ANR	1253451	Identifier	newType		1253327	0					
ANR	1253452	Identifier	namens		1253327	1					
ANR	1253453	CallExpression	estrdup ( ( char * ) ns -> children -> content )		1253327	1					
ANR	1253454	Callee	estrdup		1253327	0					
ANR	1253455	Identifier	estrdup		1253327	0					
ANR	1253456	ArgumentList	( char * ) ns -> children -> content		1253327	1					
ANR	1253457	Argument	( char * ) ns -> children -> content		1253327	0					
ANR	1253458	CastExpression	( char * ) ns -> children -> content		1253327	0					
ANR	1253459	CastTarget	char *		1253327	0					
ANR	1253460	PtrMemberAccess	ns -> children -> content		1253327	1					
ANR	1253461	PtrMemberAccess	ns -> children		1253327	0					
ANR	1253462	Identifier	ns		1253327	0					
ANR	1253463	Identifier	children		1253327	1					
ANR	1253464	Identifier	content		1253327	1					
ANR	1253465	ElseStatement	else		1253327	0					
ANR	1253466	CompoundStatement		22:9:562:562	1253327	0					
ANR	1253467	ExpressionStatement	newType -> name = estrdup ( cur_type -> name )	1380:3:44858:44897	1253327	0	True				
ANR	1253468	AssignmentExpression	newType -> name = estrdup ( cur_type -> name )		1253327	0		=			
ANR	1253469	PtrMemberAccess	newType -> name		1253327	0					
ANR	1253470	Identifier	newType		1253327	0					
ANR	1253471	Identifier	name		1253327	1					
ANR	1253472	CallExpression	estrdup ( cur_type -> name )		1253327	1					
ANR	1253473	Callee	estrdup		1253327	0					
ANR	1253474	Identifier	estrdup		1253327	0					
ANR	1253475	ArgumentList	cur_type -> name		1253327	1					
ANR	1253476	Argument	cur_type -> name		1253327	0					
ANR	1253477	PtrMemberAccess	cur_type -> name		1253327	0					
ANR	1253478	Identifier	cur_type		1253327	0					
ANR	1253479	Identifier	name		1253327	1					
ANR	1253480	ExpressionStatement	newType -> namens = estrdup ( cur_type -> namens )	1381:3:44902:44945	1253327	1	True				
ANR	1253481	AssignmentExpression	newType -> namens = estrdup ( cur_type -> namens )		1253327	0		=			
ANR	1253482	PtrMemberAccess	newType -> namens		1253327	0					
ANR	1253483	Identifier	newType		1253327	0					
ANR	1253484	Identifier	namens		1253327	1					
ANR	1253485	CallExpression	estrdup ( cur_type -> namens )		1253327	1					
ANR	1253486	Callee	estrdup		1253327	0					
ANR	1253487	Identifier	estrdup		1253327	0					
ANR	1253488	ArgumentList	cur_type -> namens		1253327	1					
ANR	1253489	Argument	cur_type -> namens		1253327	0					
ANR	1253490	PtrMemberAccess	cur_type -> namens		1253327	0					
ANR	1253491	Identifier	cur_type		1253327	0					
ANR	1253492	Identifier	namens		1253327	1					
ANR	1253493	ExpressionStatement	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"	1384:2:44954:45039	1253327	5	True				
ANR	1253494	CallExpression	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"		1253327	0					
ANR	1253495	Callee	zend_hash_next_index_insert		1253327	0					
ANR	1253496	Identifier	zend_hash_next_index_insert		1253327	0					
ANR	1253497	ArgumentList	sdl -> types		1253327	1					
ANR	1253498	Argument	sdl -> types		1253327	0					
ANR	1253499	PtrMemberAccess	sdl -> types		1253327	0					
ANR	1253500	Identifier	sdl		1253327	0					
ANR	1253501	Identifier	types		1253327	1					
ANR	1253502	Argument	& newType		1253327	1					
ANR	1253503	UnaryOperationExpression	& newType		1253327	0					
ANR	1253504	UnaryOperator	&		1253327	0					
ANR	1253505	Identifier	newType		1253327	1					
ANR	1253506	Argument	sizeof ( sdlTypePtr )		1253327	2					
ANR	1253507	SizeofExpression	sizeof ( sdlTypePtr )		1253327	0					
ANR	1253508	Sizeof	sizeof		1253327	0					
ANR	1253509	SizeofOperand	sdlTypePtr		1253327	1					
ANR	1253510	Argument	( void * * ) & ptr		1253327	3					
ANR	1253511	CastExpression	( void * * ) & ptr		1253327	0					
ANR	1253512	CastTarget	void * *		1253327	0					
ANR	1253513	UnaryOperationExpression	& ptr		1253327	1					
ANR	1253514	UnaryOperator	&		1253327	0					
ANR	1253515	Identifier	ptr		1253327	1					
ANR	1253516	IfStatement	if ( sdl -> encoders == NULL )		1253327	6					
ANR	1253517	Condition	sdl -> encoders == NULL	1386:6:45048:45068	1253327	0	True				
ANR	1253518	EqualityExpression	sdl -> encoders == NULL		1253327	0		==			
ANR	1253519	PtrMemberAccess	sdl -> encoders		1253327	0					
ANR	1253520	Identifier	sdl		1253327	0					
ANR	1253521	Identifier	encoders		1253327	1					
ANR	1253522	Identifier	NULL		1253327	1					
ANR	1253523	CompoundStatement		29:29:780:780	1253327	1					
ANR	1253524	ExpressionStatement	sdl -> encoders = emalloc ( sizeof ( HashTable ) )	1387:3:45076:45118	1253327	0	True				
ANR	1253525	AssignmentExpression	sdl -> encoders = emalloc ( sizeof ( HashTable ) )		1253327	0		=			
ANR	1253526	PtrMemberAccess	sdl -> encoders		1253327	0					
ANR	1253527	Identifier	sdl		1253327	0					
ANR	1253528	Identifier	encoders		1253327	1					
ANR	1253529	CallExpression	emalloc ( sizeof ( HashTable ) )		1253327	1					
ANR	1253530	Callee	emalloc		1253327	0					
ANR	1253531	Identifier	emalloc		1253327	0					
ANR	1253532	ArgumentList	sizeof ( HashTable )		1253327	1					
ANR	1253533	Argument	sizeof ( HashTable )		1253327	0					
ANR	1253534	SizeofExpression	sizeof ( HashTable )		1253327	0					
ANR	1253535	Sizeof	sizeof		1253327	0					
ANR	1253536	SizeofOperand	HashTable		1253327	1					
ANR	1253537	ExpressionStatement	"zend_hash_init ( sdl -> encoders , 0 , NULL , delete_encoder , 0 )"	1388:3:45123:45180	1253327	1	True				
ANR	1253538	CallExpression	"zend_hash_init ( sdl -> encoders , 0 , NULL , delete_encoder , 0 )"		1253327	0					
ANR	1253539	Callee	zend_hash_init		1253327	0					
ANR	1253540	Identifier	zend_hash_init		1253327	0					
ANR	1253541	ArgumentList	sdl -> encoders		1253327	1					
ANR	1253542	Argument	sdl -> encoders		1253327	0					
ANR	1253543	PtrMemberAccess	sdl -> encoders		1253327	0					
ANR	1253544	Identifier	sdl		1253327	0					
ANR	1253545	Identifier	encoders		1253327	1					
ANR	1253546	Argument	0		1253327	1					
ANR	1253547	PrimaryExpression	0		1253327	0					
ANR	1253548	Argument	NULL		1253327	2					
ANR	1253549	Identifier	NULL		1253327	0					
ANR	1253550	Argument	delete_encoder		1253327	3					
ANR	1253551	Identifier	delete_encoder		1253327	0					
ANR	1253552	Argument	0		1253327	4					
ANR	1253553	PrimaryExpression	0		1253327	0					
ANR	1253554	ExpressionStatement	cur_type -> encode = emalloc ( sizeof ( encode ) )	1390:2:45188:45230	1253327	7	True				
ANR	1253555	AssignmentExpression	cur_type -> encode = emalloc ( sizeof ( encode ) )		1253327	0		=			
ANR	1253556	PtrMemberAccess	cur_type -> encode		1253327	0					
ANR	1253557	Identifier	cur_type		1253327	0					
ANR	1253558	Identifier	encode		1253327	1					
ANR	1253559	CallExpression	emalloc ( sizeof ( encode ) )		1253327	1					
ANR	1253560	Callee	emalloc		1253327	0					
ANR	1253561	Identifier	emalloc		1253327	0					
ANR	1253562	ArgumentList	sizeof ( encode )		1253327	1					
ANR	1253563	Argument	sizeof ( encode )		1253327	0					
ANR	1253564	SizeofExpression	sizeof ( encode )		1253327	0					
ANR	1253565	Sizeof	sizeof		1253327	0					
ANR	1253566	SizeofOperand	encode		1253327	1					
ANR	1253567	ExpressionStatement	"memset ( cur_type -> encode , 0 , sizeof ( encode ) )"	1391:2:45234:45277	1253327	8	True				
ANR	1253568	CallExpression	"memset ( cur_type -> encode , 0 , sizeof ( encode ) )"		1253327	0					
ANR	1253569	Callee	memset		1253327	0					
ANR	1253570	Identifier	memset		1253327	0					
ANR	1253571	ArgumentList	cur_type -> encode		1253327	1					
ANR	1253572	Argument	cur_type -> encode		1253327	0					
ANR	1253573	PtrMemberAccess	cur_type -> encode		1253327	0					
ANR	1253574	Identifier	cur_type		1253327	0					
ANR	1253575	Identifier	encode		1253327	1					
ANR	1253576	Argument	0		1253327	1					
ANR	1253577	PrimaryExpression	0		1253327	0					
ANR	1253578	Argument	sizeof ( encode )		1253327	2					
ANR	1253579	SizeofExpression	sizeof ( encode )		1253327	0					
ANR	1253580	Sizeof	sizeof		1253327	0					
ANR	1253581	SizeofOperand	encode		1253327	1					
ANR	1253582	ExpressionStatement	cur_type -> encode -> details . ns = estrdup ( newType -> namens )	1392:2:45281:45336	1253327	9	True				
ANR	1253583	AssignmentExpression	cur_type -> encode -> details . ns = estrdup ( newType -> namens )		1253327	0		=			
ANR	1253584	MemberAccess	cur_type -> encode -> details . ns		1253327	0					
ANR	1253585	PtrMemberAccess	cur_type -> encode -> details		1253327	0					
ANR	1253586	PtrMemberAccess	cur_type -> encode		1253327	0					
ANR	1253587	Identifier	cur_type		1253327	0					
ANR	1253588	Identifier	encode		1253327	1					
ANR	1253589	Identifier	details		1253327	1					
ANR	1253590	Identifier	ns		1253327	1					
ANR	1253591	CallExpression	estrdup ( newType -> namens )		1253327	1					
ANR	1253592	Callee	estrdup		1253327	0					
ANR	1253593	Identifier	estrdup		1253327	0					
ANR	1253594	ArgumentList	newType -> namens		1253327	1					
ANR	1253595	Argument	newType -> namens		1253327	0					
ANR	1253596	PtrMemberAccess	newType -> namens		1253327	0					
ANR	1253597	Identifier	newType		1253327	0					
ANR	1253598	Identifier	namens		1253327	1					
ANR	1253599	ExpressionStatement	cur_type -> encode -> details . type_str = estrdup ( newType -> name )	1393:2:45340:45399	1253327	10	True				
ANR	1253600	AssignmentExpression	cur_type -> encode -> details . type_str = estrdup ( newType -> name )		1253327	0		=			
ANR	1253601	MemberAccess	cur_type -> encode -> details . type_str		1253327	0					
ANR	1253602	PtrMemberAccess	cur_type -> encode -> details		1253327	0					
ANR	1253603	PtrMemberAccess	cur_type -> encode		1253327	0					
ANR	1253604	Identifier	cur_type		1253327	0					
ANR	1253605	Identifier	encode		1253327	1					
ANR	1253606	Identifier	details		1253327	1					
ANR	1253607	Identifier	type_str		1253327	1					
ANR	1253608	CallExpression	estrdup ( newType -> name )		1253327	1					
ANR	1253609	Callee	estrdup		1253327	0					
ANR	1253610	Identifier	estrdup		1253327	0					
ANR	1253611	ArgumentList	newType -> name		1253327	1					
ANR	1253612	Argument	newType -> name		1253327	0					
ANR	1253613	PtrMemberAccess	newType -> name		1253327	0					
ANR	1253614	Identifier	newType		1253327	0					
ANR	1253615	Identifier	name		1253327	1					
ANR	1253616	ExpressionStatement	cur_type -> encode -> details . sdl_type = * ptr	1394:2:45403:45444	1253327	11	True				
ANR	1253617	AssignmentExpression	cur_type -> encode -> details . sdl_type = * ptr		1253327	0		=			
ANR	1253618	MemberAccess	cur_type -> encode -> details . sdl_type		1253327	0					
ANR	1253619	PtrMemberAccess	cur_type -> encode -> details		1253327	0					
ANR	1253620	PtrMemberAccess	cur_type -> encode		1253327	0					
ANR	1253621	Identifier	cur_type		1253327	0					
ANR	1253622	Identifier	encode		1253327	1					
ANR	1253623	Identifier	details		1253327	1					
ANR	1253624	Identifier	sdl_type		1253327	1					
ANR	1253625	UnaryOperationExpression	* ptr		1253327	1					
ANR	1253626	UnaryOperator	*		1253327	0					
ANR	1253627	Identifier	ptr		1253327	1					
ANR	1253628	ExpressionStatement	cur_type -> encode -> to_xml = sdl_guess_convert_xml	1395:2:45448:45496	1253327	12	True				
ANR	1253629	AssignmentExpression	cur_type -> encode -> to_xml = sdl_guess_convert_xml		1253327	0		=			
ANR	1253630	PtrMemberAccess	cur_type -> encode -> to_xml		1253327	0					
ANR	1253631	PtrMemberAccess	cur_type -> encode		1253327	0					
ANR	1253632	Identifier	cur_type		1253327	0					
ANR	1253633	Identifier	encode		1253327	1					
ANR	1253634	Identifier	to_xml		1253327	1					
ANR	1253635	Identifier	sdl_guess_convert_xml		1253327	1					
ANR	1253636	ExpressionStatement	cur_type -> encode -> to_zval = sdl_guess_convert_zval	1396:2:45500:45550	1253327	13	True				
ANR	1253637	AssignmentExpression	cur_type -> encode -> to_zval = sdl_guess_convert_zval		1253327	0		=			
ANR	1253638	PtrMemberAccess	cur_type -> encode -> to_zval		1253327	0					
ANR	1253639	PtrMemberAccess	cur_type -> encode		1253327	0					
ANR	1253640	Identifier	cur_type		1253327	0					
ANR	1253641	Identifier	encode		1253327	1					
ANR	1253642	Identifier	to_zval		1253327	1					
ANR	1253643	Identifier	sdl_guess_convert_zval		1253327	1					
ANR	1253644	ExpressionStatement	"zend_hash_next_index_insert ( sdl -> encoders , & cur_type -> encode , sizeof ( encodePtr ) , NULL )"	1397:2:45554:45641	1253327	14	True				
ANR	1253645	CallExpression	"zend_hash_next_index_insert ( sdl -> encoders , & cur_type -> encode , sizeof ( encodePtr ) , NULL )"		1253327	0					
ANR	1253646	Callee	zend_hash_next_index_insert		1253327	0					
ANR	1253647	Identifier	zend_hash_next_index_insert		1253327	0					
ANR	1253648	ArgumentList	sdl -> encoders		1253327	1					
ANR	1253649	Argument	sdl -> encoders		1253327	0					
ANR	1253650	PtrMemberAccess	sdl -> encoders		1253327	0					
ANR	1253651	Identifier	sdl		1253327	0					
ANR	1253652	Identifier	encoders		1253327	1					
ANR	1253653	Argument	& cur_type -> encode		1253327	1					
ANR	1253654	UnaryOperationExpression	& cur_type -> encode		1253327	0					
ANR	1253655	UnaryOperator	&		1253327	0					
ANR	1253656	PtrMemberAccess	cur_type -> encode		1253327	1					
ANR	1253657	Identifier	cur_type		1253327	0					
ANR	1253658	Identifier	encode		1253327	1					
ANR	1253659	Argument	sizeof ( encodePtr )		1253327	2					
ANR	1253660	SizeofExpression	sizeof ( encodePtr )		1253327	0					
ANR	1253661	Sizeof	sizeof		1253327	0					
ANR	1253662	SizeofOperand	encodePtr		1253327	1					
ANR	1253663	Argument	NULL		1253327	3					
ANR	1253664	Identifier	NULL		1253327	0					
ANR	1253665	ExpressionStatement	cur_type = * ptr	1399:2:45646:45660	1253327	15	True				
ANR	1253666	AssignmentExpression	cur_type = * ptr		1253327	0		=			
ANR	1253667	Identifier	cur_type		1253327	0					
ANR	1253668	UnaryOperationExpression	* ptr		1253327	1					
ANR	1253669	UnaryOperator	*		1253327	0					
ANR	1253670	Identifier	ptr		1253327	1					
ANR	1253671	ElseStatement	else		1253327	0					
ANR	1253672	IfStatement	if ( name )		1253327	0					
ANR	1253673	Condition	name	1401:12:45675:45678	1253327	0	True				
ANR	1253674	Identifier	name		1253327	0					
ANR	1253675	CompoundStatement		45:2:1394:1418	1253327	1					
ANR	1253676	IdentifierDeclStatement	"sdlTypePtr newType , * ptr ;"	1402:2:45685:45709	1253327	0	True				
ANR	1253677	IdentifierDecl	newType		1253327	0					
ANR	1253678	IdentifierDeclType	sdlTypePtr		1253327	0					
ANR	1253679	Identifier	newType		1253327	1					
ANR	1253680	IdentifierDecl	* ptr		1253327	1					
ANR	1253681	IdentifierDeclType	sdlTypePtr *		1253327	0					
ANR	1253682	Identifier	ptr		1253327	1					
ANR	1253683	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	1404:2:45714:45748	1253327	1	True				
ANR	1253684	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1253327	0		=			
ANR	1253685	Identifier	newType		1253327	0					
ANR	1253686	CallExpression	emalloc ( sizeof ( sdlType ) )		1253327	1					
ANR	1253687	Callee	emalloc		1253327	0					
ANR	1253688	Identifier	emalloc		1253327	0					
ANR	1253689	ArgumentList	sizeof ( sdlType )		1253327	1					
ANR	1253690	Argument	sizeof ( sdlType )		1253327	0					
ANR	1253691	SizeofExpression	sizeof ( sdlType )		1253327	0					
ANR	1253692	Sizeof	sizeof		1253327	0					
ANR	1253693	SizeofOperand	sdlType		1253327	1					
ANR	1253694	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	1405:2:45752:45787	1253327	2	True				
ANR	1253695	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1253327	0					
ANR	1253696	Callee	memset		1253327	0					
ANR	1253697	Identifier	memset		1253327	0					
ANR	1253698	ArgumentList	newType		1253327	1					
ANR	1253699	Argument	newType		1253327	0					
ANR	1253700	Identifier	newType		1253327	0					
ANR	1253701	Argument	0		1253327	1					
ANR	1253702	PrimaryExpression	0		1253327	0					
ANR	1253703	Argument	sizeof ( sdlType )		1253327	2					
ANR	1253704	SizeofExpression	sizeof ( sdlType )		1253327	0					
ANR	1253705	Sizeof	sizeof		1253327	0					
ANR	1253706	SizeofOperand	sdlType		1253327	1					
ANR	1253707	ExpressionStatement	newType -> kind = XSD_TYPEKIND_COMPLEX	1406:2:45791:45827	1253327	3	True				
ANR	1253708	AssignmentExpression	newType -> kind = XSD_TYPEKIND_COMPLEX		1253327	0		=			
ANR	1253709	PtrMemberAccess	newType -> kind		1253327	0					
ANR	1253710	Identifier	newType		1253327	0					
ANR	1253711	Identifier	kind		1253327	1					
ANR	1253712	Identifier	XSD_TYPEKIND_COMPLEX		1253327	1					
ANR	1253713	ExpressionStatement	newType -> name = estrdup ( ( char * ) name -> children -> content )	1407:2:45831:45886	1253327	4	True				
ANR	1253714	AssignmentExpression	newType -> name = estrdup ( ( char * ) name -> children -> content )		1253327	0		=			
ANR	1253715	PtrMemberAccess	newType -> name		1253327	0					
ANR	1253716	Identifier	newType		1253327	0					
ANR	1253717	Identifier	name		1253327	1					
ANR	1253718	CallExpression	estrdup ( ( char * ) name -> children -> content )		1253327	1					
ANR	1253719	Callee	estrdup		1253327	0					
ANR	1253720	Identifier	estrdup		1253327	0					
ANR	1253721	ArgumentList	( char * ) name -> children -> content		1253327	1					
ANR	1253722	Argument	( char * ) name -> children -> content		1253327	0					
ANR	1253723	CastExpression	( char * ) name -> children -> content		1253327	0					
ANR	1253724	CastTarget	char *		1253327	0					
ANR	1253725	PtrMemberAccess	name -> children -> content		1253327	1					
ANR	1253726	PtrMemberAccess	name -> children		1253327	0					
ANR	1253727	Identifier	name		1253327	0					
ANR	1253728	Identifier	children		1253327	1					
ANR	1253729	Identifier	content		1253327	1					
ANR	1253730	ExpressionStatement	newType -> namens = estrdup ( ( char * ) ns -> children -> content )	1408:2:45890:45945	1253327	5	True				
ANR	1253731	AssignmentExpression	newType -> namens = estrdup ( ( char * ) ns -> children -> content )		1253327	0		=			
ANR	1253732	PtrMemberAccess	newType -> namens		1253327	0					
ANR	1253733	Identifier	newType		1253327	0					
ANR	1253734	Identifier	namens		1253327	1					
ANR	1253735	CallExpression	estrdup ( ( char * ) ns -> children -> content )		1253327	1					
ANR	1253736	Callee	estrdup		1253327	0					
ANR	1253737	Identifier	estrdup		1253327	0					
ANR	1253738	ArgumentList	( char * ) ns -> children -> content		1253327	1					
ANR	1253739	Argument	( char * ) ns -> children -> content		1253327	0					
ANR	1253740	CastExpression	( char * ) ns -> children -> content		1253327	0					
ANR	1253741	CastTarget	char *		1253327	0					
ANR	1253742	PtrMemberAccess	ns -> children -> content		1253327	1					
ANR	1253743	PtrMemberAccess	ns -> children		1253327	0					
ANR	1253744	Identifier	ns		1253327	0					
ANR	1253745	Identifier	children		1253327	1					
ANR	1253746	Identifier	content		1253327	1					
ANR	1253747	ExpressionStatement	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"	1410:2:45950:46035	1253327	6	True				
ANR	1253748	CallExpression	"zend_hash_next_index_insert ( sdl -> types , & newType , sizeof ( sdlTypePtr ) , ( void * * ) & ptr )"		1253327	0					
ANR	1253749	Callee	zend_hash_next_index_insert		1253327	0					
ANR	1253750	Identifier	zend_hash_next_index_insert		1253327	0					
ANR	1253751	ArgumentList	sdl -> types		1253327	1					
ANR	1253752	Argument	sdl -> types		1253327	0					
ANR	1253753	PtrMemberAccess	sdl -> types		1253327	0					
ANR	1253754	Identifier	sdl		1253327	0					
ANR	1253755	Identifier	types		1253327	1					
ANR	1253756	Argument	& newType		1253327	1					
ANR	1253757	UnaryOperationExpression	& newType		1253327	0					
ANR	1253758	UnaryOperator	&		1253327	0					
ANR	1253759	Identifier	newType		1253327	1					
ANR	1253760	Argument	sizeof ( sdlTypePtr )		1253327	2					
ANR	1253761	SizeofExpression	sizeof ( sdlTypePtr )		1253327	0					
ANR	1253762	Sizeof	sizeof		1253327	0					
ANR	1253763	SizeofOperand	sdlTypePtr		1253327	1					
ANR	1253764	Argument	( void * * ) & ptr		1253327	3					
ANR	1253765	CastExpression	( void * * ) & ptr		1253327	0					
ANR	1253766	CastTarget	void * *		1253327	0					
ANR	1253767	UnaryOperationExpression	& ptr		1253327	1					
ANR	1253768	UnaryOperator	&		1253327	0					
ANR	1253769	Identifier	ptr		1253327	1					
ANR	1253770	ExpressionStatement	cur_type = ( * ptr )	1412:2:46040:46057	1253327	7	True				
ANR	1253771	AssignmentExpression	cur_type = ( * ptr )		1253327	0		=			
ANR	1253772	Identifier	cur_type		1253327	0					
ANR	1253773	UnaryOperationExpression	* ptr		1253327	1					
ANR	1253774	UnaryOperator	*		1253327	0					
ANR	1253775	Identifier	ptr		1253327	1					
ANR	1253776	ExpressionStatement	"create_encoder ( sdl , cur_type , ns -> children -> content , name -> children -> content )"	1413:2:46061:46138	1253327	8	True				
ANR	1253777	CallExpression	"create_encoder ( sdl , cur_type , ns -> children -> content , name -> children -> content )"		1253327	0					
ANR	1253778	Callee	create_encoder		1253327	0					
ANR	1253779	Identifier	create_encoder		1253327	0					
ANR	1253780	ArgumentList	sdl		1253327	1					
ANR	1253781	Argument	sdl		1253327	0					
ANR	1253782	Identifier	sdl		1253327	0					
ANR	1253783	Argument	cur_type		1253327	1					
ANR	1253784	Identifier	cur_type		1253327	0					
ANR	1253785	Argument	ns -> children -> content		1253327	2					
ANR	1253786	PtrMemberAccess	ns -> children -> content		1253327	0					
ANR	1253787	PtrMemberAccess	ns -> children		1253327	0					
ANR	1253788	Identifier	ns		1253327	0					
ANR	1253789	Identifier	children		1253327	1					
ANR	1253790	Identifier	content		1253327	1					
ANR	1253791	Argument	name -> children -> content		1253327	3					
ANR	1253792	PtrMemberAccess	name -> children -> content		1253327	0					
ANR	1253793	PtrMemberAccess	name -> children		1253327	0					
ANR	1253794	Identifier	name		1253327	0					
ANR	1253795	Identifier	children		1253327	1					
ANR	1253796	Identifier	content		1253327	1					
ANR	1253797	ElseStatement	else		1253327	0					
ANR	1253798	CompoundStatement		57:8:1857:1857	1253327	0					
ANR	1253799	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: complexType has no 'name' attribute"" )"	1415:2:46152:46227	1253327	0	True				
ANR	1253800	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: complexType has no 'name' attribute"" )"		1253327	0					
ANR	1253801	Callee	soap_error0		1253327	0					
ANR	1253802	Identifier	soap_error0		1253327	0					
ANR	1253803	ArgumentList	E_ERROR		1253327	1					
ANR	1253804	Argument	E_ERROR		1253327	0					
ANR	1253805	Identifier	E_ERROR		1253327	0					
ANR	1253806	Argument	"""Parsing Schema: complexType has no 'name' attribute"""		1253327	1					
ANR	1253807	PrimaryExpression	"""Parsing Schema: complexType has no 'name' attribute"""		1253327	0					
ANR	1253808	ReturnStatement	return FALSE ;	1416:2:46231:46243	1253327	1	True				
ANR	1253809	Identifier	FALSE		1253327	0					
ANR	1253810	ExpressionStatement	trav = compType -> children	1419:1:46250:46275	1253327	7	True				
ANR	1253811	AssignmentExpression	trav = compType -> children		1253327	0		=			
ANR	1253812	Identifier	trav		1253327	0					
ANR	1253813	PtrMemberAccess	compType -> children		1253327	1					
ANR	1253814	Identifier	compType		1253327	0					
ANR	1253815	Identifier	children		1253327	1					
ANR	1253816	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1253327	8					
ANR	1253817	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1420:5:46282:46330	1253327	0	True				
ANR	1253818	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1253327	0		&&			
ANR	1253819	EqualityExpression	trav != NULL		1253327	0		!=			
ANR	1253820	Identifier	trav		1253327	0					
ANR	1253821	Identifier	NULL		1253327	1					
ANR	1253822	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1253327	1					
ANR	1253823	Callee	node_is_equal		1253327	0					
ANR	1253824	Identifier	node_is_equal		1253327	0					
ANR	1253825	ArgumentList	trav		1253327	1					
ANR	1253826	Argument	trav		1253327	0					
ANR	1253827	Identifier	trav		1253327	0					
ANR	1253828	Argument	"""annotation"""		1253327	1					
ANR	1253829	PrimaryExpression	"""annotation"""		1253327	0					
ANR	1253830	CompoundStatement		63:56:2042:2042	1253327	1					
ANR	1253831	ExpressionStatement	trav = trav -> next	1422:2:46372:46389	1253327	0	True				
ANR	1253832	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1253833	Identifier	trav		1253327	0					
ANR	1253834	PtrMemberAccess	trav -> next		1253327	1					
ANR	1253835	Identifier	trav		1253327	0					
ANR	1253836	Identifier	next		1253327	1					
ANR	1253837	IfStatement	if ( trav != NULL )		1253327	9					
ANR	1253838	Condition	trav != NULL	1424:5:46399:46410	1253327	0	True				
ANR	1253839	EqualityExpression	trav != NULL		1253327	0		!=			
ANR	1253840	Identifier	trav		1253327	0					
ANR	1253841	Identifier	NULL		1253327	1					
ANR	1253842	CompoundStatement		67:19:2122:2122	1253327	1					
ANR	1253843	IfStatement	"if ( node_is_equal ( trav , ""simpleContent"" ) )"		1253327	0					
ANR	1253844	Condition	"node_is_equal ( trav , ""simpleContent"" )"	1425:6:46421:46455	1253327	0	True				
ANR	1253845	CallExpression	"node_is_equal ( trav , ""simpleContent"" )"		1253327	0					
ANR	1253846	Callee	node_is_equal		1253327	0					
ANR	1253847	Identifier	node_is_equal		1253327	0					
ANR	1253848	ArgumentList	trav		1253327	1					
ANR	1253849	Argument	trav		1253327	0					
ANR	1253850	Identifier	trav		1253327	0					
ANR	1253851	Argument	"""simpleContent"""		1253327	1					
ANR	1253852	PrimaryExpression	"""simpleContent"""		1253327	0					
ANR	1253853	CompoundStatement		68:43:2167:2167	1253327	1					
ANR	1253854	ExpressionStatement	"schema_simpleContent ( sdl , tns , trav , cur_type )"	1426:3:46463:46509	1253327	0	True				
ANR	1253855	CallExpression	"schema_simpleContent ( sdl , tns , trav , cur_type )"		1253327	0					
ANR	1253856	Callee	schema_simpleContent		1253327	0					
ANR	1253857	Identifier	schema_simpleContent		1253327	0					
ANR	1253858	ArgumentList	sdl		1253327	1					
ANR	1253859	Argument	sdl		1253327	0					
ANR	1253860	Identifier	sdl		1253327	0					
ANR	1253861	Argument	tns		1253327	1					
ANR	1253862	Identifier	tns		1253327	0					
ANR	1253863	Argument	trav		1253327	2					
ANR	1253864	Identifier	trav		1253327	0					
ANR	1253865	Argument	cur_type		1253327	3					
ANR	1253866	Identifier	cur_type		1253327	0					
ANR	1253867	ExpressionStatement	trav = trav -> next	1427:3:46514:46531	1253327	1	True				
ANR	1253868	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1253869	Identifier	trav		1253327	0					
ANR	1253870	PtrMemberAccess	trav -> next		1253327	1					
ANR	1253871	Identifier	trav		1253327	0					
ANR	1253872	Identifier	next		1253327	1					
ANR	1253873	ElseStatement	else		1253327	0					
ANR	1253874	IfStatement	"if ( node_is_equal ( trav , ""complexContent"" ) )"		1253327	0					
ANR	1253875	Condition	"node_is_equal ( trav , ""complexContent"" )"	1428:13:46546:46581	1253327	0	True				
ANR	1253876	CallExpression	"node_is_equal ( trav , ""complexContent"" )"		1253327	0					
ANR	1253877	Callee	node_is_equal		1253327	0					
ANR	1253878	Identifier	node_is_equal		1253327	0					
ANR	1253879	ArgumentList	trav		1253327	1					
ANR	1253880	Argument	trav		1253327	0					
ANR	1253881	Identifier	trav		1253327	0					
ANR	1253882	Argument	"""complexContent"""		1253327	1					
ANR	1253883	PrimaryExpression	"""complexContent"""		1253327	0					
ANR	1253884	CompoundStatement		71:51:2293:2293	1253327	1					
ANR	1253885	ExpressionStatement	"schema_complexContent ( sdl , tns , trav , cur_type )"	1429:3:46589:46636	1253327	0	True				
ANR	1253886	CallExpression	"schema_complexContent ( sdl , tns , trav , cur_type )"		1253327	0					
ANR	1253887	Callee	schema_complexContent		1253327	0					
ANR	1253888	Identifier	schema_complexContent		1253327	0					
ANR	1253889	ArgumentList	sdl		1253327	1					
ANR	1253890	Argument	sdl		1253327	0					
ANR	1253891	Identifier	sdl		1253327	0					
ANR	1253892	Argument	tns		1253327	1					
ANR	1253893	Identifier	tns		1253327	0					
ANR	1253894	Argument	trav		1253327	2					
ANR	1253895	Identifier	trav		1253327	0					
ANR	1253896	Argument	cur_type		1253327	3					
ANR	1253897	Identifier	cur_type		1253327	0					
ANR	1253898	ExpressionStatement	trav = trav -> next	1430:3:46641:46658	1253327	1	True				
ANR	1253899	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1253900	Identifier	trav		1253327	0					
ANR	1253901	PtrMemberAccess	trav -> next		1253327	1					
ANR	1253902	Identifier	trav		1253327	0					
ANR	1253903	Identifier	next		1253327	1					
ANR	1253904	ElseStatement	else		1253327	0					
ANR	1253905	CompoundStatement		74:9:2378:2378	1253327	0					
ANR	1253906	IfStatement	"if ( node_is_equal ( trav , ""group"" ) )"		1253327	0					
ANR	1253907	Condition	"node_is_equal ( trav , ""group"" )"	1432:7:46678:46704	1253327	0	True				
ANR	1253908	CallExpression	"node_is_equal ( trav , ""group"" )"		1253327	0					
ANR	1253909	Callee	node_is_equal		1253327	0					
ANR	1253910	Identifier	node_is_equal		1253327	0					
ANR	1253911	ArgumentList	trav		1253327	1					
ANR	1253912	Argument	trav		1253327	0					
ANR	1253913	Identifier	trav		1253327	0					
ANR	1253914	Argument	"""group"""		1253327	1					
ANR	1253915	PrimaryExpression	"""group"""		1253327	0					
ANR	1253916	CompoundStatement		75:36:2416:2416	1253327	1					
ANR	1253917	ExpressionStatement	"schema_group ( sdl , tns , trav , cur_type , NULL )"	1433:4:46713:46757	1253327	0	True				
ANR	1253918	CallExpression	"schema_group ( sdl , tns , trav , cur_type , NULL )"		1253327	0					
ANR	1253919	Callee	schema_group		1253327	0					
ANR	1253920	Identifier	schema_group		1253327	0					
ANR	1253921	ArgumentList	sdl		1253327	1					
ANR	1253922	Argument	sdl		1253327	0					
ANR	1253923	Identifier	sdl		1253327	0					
ANR	1253924	Argument	tns		1253327	1					
ANR	1253925	Identifier	tns		1253327	0					
ANR	1253926	Argument	trav		1253327	2					
ANR	1253927	Identifier	trav		1253327	0					
ANR	1253928	Argument	cur_type		1253327	3					
ANR	1253929	Identifier	cur_type		1253327	0					
ANR	1253930	Argument	NULL		1253327	4					
ANR	1253931	Identifier	NULL		1253327	0					
ANR	1253932	ExpressionStatement	trav = trav -> next	1434:4:46763:46780	1253327	1	True				
ANR	1253933	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1253934	Identifier	trav		1253327	0					
ANR	1253935	PtrMemberAccess	trav -> next		1253327	1					
ANR	1253936	Identifier	trav		1253327	0					
ANR	1253937	Identifier	next		1253327	1					
ANR	1253938	ElseStatement	else		1253327	0					
ANR	1253939	IfStatement	"if ( node_is_equal ( trav , ""all"" ) )"		1253327	0					
ANR	1253940	Condition	"node_is_equal ( trav , ""all"" )"	1435:14:46796:46820	1253327	0	True				
ANR	1253941	CallExpression	"node_is_equal ( trav , ""all"" )"		1253327	0					
ANR	1253942	Callee	node_is_equal		1253327	0					
ANR	1253943	Identifier	node_is_equal		1253327	0					
ANR	1253944	ArgumentList	trav		1253327	1					
ANR	1253945	Argument	trav		1253327	0					
ANR	1253946	Identifier	trav		1253327	0					
ANR	1253947	Argument	"""all"""		1253327	1					
ANR	1253948	PrimaryExpression	"""all"""		1253327	0					
ANR	1253949	CompoundStatement		78:41:2532:2532	1253327	1					
ANR	1253950	ExpressionStatement	"schema_all ( sdl , tns , trav , cur_type , NULL )"	1436:4:46829:46871	1253327	0	True				
ANR	1253951	CallExpression	"schema_all ( sdl , tns , trav , cur_type , NULL )"		1253327	0					
ANR	1253952	Callee	schema_all		1253327	0					
ANR	1253953	Identifier	schema_all		1253327	0					
ANR	1253954	ArgumentList	sdl		1253327	1					
ANR	1253955	Argument	sdl		1253327	0					
ANR	1253956	Identifier	sdl		1253327	0					
ANR	1253957	Argument	tns		1253327	1					
ANR	1253958	Identifier	tns		1253327	0					
ANR	1253959	Argument	trav		1253327	2					
ANR	1253960	Identifier	trav		1253327	0					
ANR	1253961	Argument	cur_type		1253327	3					
ANR	1253962	Identifier	cur_type		1253327	0					
ANR	1253963	Argument	NULL		1253327	4					
ANR	1253964	Identifier	NULL		1253327	0					
ANR	1253965	ExpressionStatement	trav = trav -> next	1437:4:46877:46894	1253327	1	True				
ANR	1253966	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1253967	Identifier	trav		1253327	0					
ANR	1253968	PtrMemberAccess	trav -> next		1253327	1					
ANR	1253969	Identifier	trav		1253327	0					
ANR	1253970	Identifier	next		1253327	1					
ANR	1253971	ElseStatement	else		1253327	0					
ANR	1253972	IfStatement	"if ( node_is_equal ( trav , ""choice"" ) )"		1253327	0					
ANR	1253973	Condition	"node_is_equal ( trav , ""choice"" )"	1438:14:46910:46937	1253327	0	True				
ANR	1253974	CallExpression	"node_is_equal ( trav , ""choice"" )"		1253327	0					
ANR	1253975	Callee	node_is_equal		1253327	0					
ANR	1253976	Identifier	node_is_equal		1253327	0					
ANR	1253977	ArgumentList	trav		1253327	1					
ANR	1253978	Argument	trav		1253327	0					
ANR	1253979	Identifier	trav		1253327	0					
ANR	1253980	Argument	"""choice"""		1253327	1					
ANR	1253981	PrimaryExpression	"""choice"""		1253327	0					
ANR	1253982	CompoundStatement		81:44:2649:2649	1253327	1					
ANR	1253983	ExpressionStatement	"schema_choice ( sdl , tns , trav , cur_type , NULL )"	1439:4:46946:46991	1253327	0	True				
ANR	1253984	CallExpression	"schema_choice ( sdl , tns , trav , cur_type , NULL )"		1253327	0					
ANR	1253985	Callee	schema_choice		1253327	0					
ANR	1253986	Identifier	schema_choice		1253327	0					
ANR	1253987	ArgumentList	sdl		1253327	1					
ANR	1253988	Argument	sdl		1253327	0					
ANR	1253989	Identifier	sdl		1253327	0					
ANR	1253990	Argument	tns		1253327	1					
ANR	1253991	Identifier	tns		1253327	0					
ANR	1253992	Argument	trav		1253327	2					
ANR	1253993	Identifier	trav		1253327	0					
ANR	1253994	Argument	cur_type		1253327	3					
ANR	1253995	Identifier	cur_type		1253327	0					
ANR	1253996	Argument	NULL		1253327	4					
ANR	1253997	Identifier	NULL		1253327	0					
ANR	1253998	ExpressionStatement	trav = trav -> next	1440:4:46997:47014	1253327	1	True				
ANR	1253999	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1254000	Identifier	trav		1253327	0					
ANR	1254001	PtrMemberAccess	trav -> next		1253327	1					
ANR	1254002	Identifier	trav		1253327	0					
ANR	1254003	Identifier	next		1253327	1					
ANR	1254004	ElseStatement	else		1253327	0					
ANR	1254005	IfStatement	"if ( node_is_equal ( trav , ""sequence"" ) )"		1253327	0					
ANR	1254006	Condition	"node_is_equal ( trav , ""sequence"" )"	1441:14:47030:47059	1253327	0	True				
ANR	1254007	CallExpression	"node_is_equal ( trav , ""sequence"" )"		1253327	0					
ANR	1254008	Callee	node_is_equal		1253327	0					
ANR	1254009	Identifier	node_is_equal		1253327	0					
ANR	1254010	ArgumentList	trav		1253327	1					
ANR	1254011	Argument	trav		1253327	0					
ANR	1254012	Identifier	trav		1253327	0					
ANR	1254013	Argument	"""sequence"""		1253327	1					
ANR	1254014	PrimaryExpression	"""sequence"""		1253327	0					
ANR	1254015	CompoundStatement		84:46:2771:2771	1253327	1					
ANR	1254016	ExpressionStatement	"schema_sequence ( sdl , tns , trav , cur_type , NULL )"	1442:4:47068:47115	1253327	0	True				
ANR	1254017	CallExpression	"schema_sequence ( sdl , tns , trav , cur_type , NULL )"		1253327	0					
ANR	1254018	Callee	schema_sequence		1253327	0					
ANR	1254019	Identifier	schema_sequence		1253327	0					
ANR	1254020	ArgumentList	sdl		1253327	1					
ANR	1254021	Argument	sdl		1253327	0					
ANR	1254022	Identifier	sdl		1253327	0					
ANR	1254023	Argument	tns		1253327	1					
ANR	1254024	Identifier	tns		1253327	0					
ANR	1254025	Argument	trav		1253327	2					
ANR	1254026	Identifier	trav		1253327	0					
ANR	1254027	Argument	cur_type		1253327	3					
ANR	1254028	Identifier	cur_type		1253327	0					
ANR	1254029	Argument	NULL		1253327	4					
ANR	1254030	Identifier	NULL		1253327	0					
ANR	1254031	ExpressionStatement	trav = trav -> next	1443:4:47121:47138	1253327	1	True				
ANR	1254032	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1254033	Identifier	trav		1253327	0					
ANR	1254034	PtrMemberAccess	trav -> next		1253327	1					
ANR	1254035	Identifier	trav		1253327	0					
ANR	1254036	Identifier	next		1253327	1					
ANR	1254037	WhileStatement	while ( trav != NULL )		1253327	1					
ANR	1254038	Condition	trav != NULL	1445:10:47155:47166	1253327	0	True				
ANR	1254039	EqualityExpression	trav != NULL		1253327	0		!=			
ANR	1254040	Identifier	trav		1253327	0					
ANR	1254041	Identifier	NULL		1253327	1					
ANR	1254042	CompoundStatement		88:24:2878:2878	1253327	1					
ANR	1254043	IfStatement	"if ( node_is_equal ( trav , ""attribute"" ) )"		1253327	0					
ANR	1254044	Condition	"node_is_equal ( trav , ""attribute"" )"	1446:8:47179:47209	1253327	0	True				
ANR	1254045	CallExpression	"node_is_equal ( trav , ""attribute"" )"		1253327	0					
ANR	1254046	Callee	node_is_equal		1253327	0					
ANR	1254047	Identifier	node_is_equal		1253327	0					
ANR	1254048	ArgumentList	trav		1253327	1					
ANR	1254049	Argument	trav		1253327	0					
ANR	1254050	Identifier	trav		1253327	0					
ANR	1254051	Argument	"""attribute"""		1253327	1					
ANR	1254052	PrimaryExpression	"""attribute"""		1253327	0					
ANR	1254053	CompoundStatement		89:41:2921:2921	1253327	1					
ANR	1254054	ExpressionStatement	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"	1447:5:47219:47267	1253327	0	True				
ANR	1254055	CallExpression	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"		1253327	0					
ANR	1254056	Callee	schema_attribute		1253327	0					
ANR	1254057	Identifier	schema_attribute		1253327	0					
ANR	1254058	ArgumentList	sdl		1253327	1					
ANR	1254059	Argument	sdl		1253327	0					
ANR	1254060	Identifier	sdl		1253327	0					
ANR	1254061	Argument	tns		1253327	1					
ANR	1254062	Identifier	tns		1253327	0					
ANR	1254063	Argument	trav		1253327	2					
ANR	1254064	Identifier	trav		1253327	0					
ANR	1254065	Argument	cur_type		1253327	3					
ANR	1254066	Identifier	cur_type		1253327	0					
ANR	1254067	Argument	NULL		1253327	4					
ANR	1254068	Identifier	NULL		1253327	0					
ANR	1254069	ElseStatement	else		1253327	0					
ANR	1254070	IfStatement	"if ( node_is_equal ( trav , ""attributeGroup"" ) )"		1253327	0					
ANR	1254071	Condition	"node_is_equal ( trav , ""attributeGroup"" )"	1448:15:47284:47319	1253327	0	True				
ANR	1254072	CallExpression	"node_is_equal ( trav , ""attributeGroup"" )"		1253327	0					
ANR	1254073	Callee	node_is_equal		1253327	0					
ANR	1254074	Identifier	node_is_equal		1253327	0					
ANR	1254075	ArgumentList	trav		1253327	1					
ANR	1254076	Argument	trav		1253327	0					
ANR	1254077	Identifier	trav		1253327	0					
ANR	1254078	Argument	"""attributeGroup"""		1253327	1					
ANR	1254079	PrimaryExpression	"""attributeGroup"""		1253327	0					
ANR	1254080	CompoundStatement		91:53:3031:3031	1253327	1					
ANR	1254081	ExpressionStatement	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"	1449:5:47329:47382	1253327	0	True				
ANR	1254082	CallExpression	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"		1253327	0					
ANR	1254083	Callee	schema_attributeGroup		1253327	0					
ANR	1254084	Identifier	schema_attributeGroup		1253327	0					
ANR	1254085	ArgumentList	sdl		1253327	1					
ANR	1254086	Argument	sdl		1253327	0					
ANR	1254087	Identifier	sdl		1253327	0					
ANR	1254088	Argument	tns		1253327	1					
ANR	1254089	Identifier	tns		1253327	0					
ANR	1254090	Argument	trav		1253327	2					
ANR	1254091	Identifier	trav		1253327	0					
ANR	1254092	Argument	cur_type		1253327	3					
ANR	1254093	Identifier	cur_type		1253327	0					
ANR	1254094	Argument	NULL		1253327	4					
ANR	1254095	Identifier	NULL		1253327	0					
ANR	1254096	ElseStatement	else		1253327	0					
ANR	1254097	IfStatement	"if ( node_is_equal ( trav , ""anyAttribute"" ) )"		1253327	0					
ANR	1254098	Condition	"node_is_equal ( trav , ""anyAttribute"" )"	1450:15:47399:47432	1253327	0	True				
ANR	1254099	CallExpression	"node_is_equal ( trav , ""anyAttribute"" )"		1253327	0					
ANR	1254100	Callee	node_is_equal		1253327	0					
ANR	1254101	Identifier	node_is_equal		1253327	0					
ANR	1254102	ArgumentList	trav		1253327	1					
ANR	1254103	Argument	trav		1253327	0					
ANR	1254104	Identifier	trav		1253327	0					
ANR	1254105	Argument	"""anyAttribute"""		1253327	1					
ANR	1254106	PrimaryExpression	"""anyAttribute"""		1253327	0					
ANR	1254107	CompoundStatement		93:51:3144:3144	1253327	1					
ANR	1254108	ExpressionStatement	trav = trav -> next	1452:5:47482:47499	1253327	0	True				
ANR	1254109	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1254110	Identifier	trav		1253327	0					
ANR	1254111	PtrMemberAccess	trav -> next		1253327	1					
ANR	1254112	Identifier	trav		1253327	0					
ANR	1254113	Identifier	next		1253327	1					
ANR	1254114	BreakStatement	break ;	1453:5:47506:47511	1253327	1	True				
ANR	1254115	ElseStatement	else		1253327	0					
ANR	1254116	CompoundStatement		97:11:3233:3233	1253327	0					
ANR	1254117	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexType"" , trav -> name )"	1455:5:47531:47613	1253327	0	True				
ANR	1254118	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexType"" , trav -> name )"		1253327	0					
ANR	1254119	Callee	soap_error1		1253327	0					
ANR	1254120	Identifier	soap_error1		1253327	0					
ANR	1254121	ArgumentList	E_ERROR		1253327	1					
ANR	1254122	Argument	E_ERROR		1253327	0					
ANR	1254123	Identifier	E_ERROR		1253327	0					
ANR	1254124	Argument	"""Parsing Schema: unexpected <%s> in complexType"""		1253327	1					
ANR	1254125	PrimaryExpression	"""Parsing Schema: unexpected <%s> in complexType"""		1253327	0					
ANR	1254126	Argument	trav -> name		1253327	2					
ANR	1254127	PtrMemberAccess	trav -> name		1253327	0					
ANR	1254128	Identifier	trav		1253327	0					
ANR	1254129	Identifier	name		1253327	1					
ANR	1254130	ExpressionStatement	trav = trav -> next	1457:4:47625:47642	1253327	1	True				
ANR	1254131	AssignmentExpression	trav = trav -> next		1253327	0		=			
ANR	1254132	Identifier	trav		1253327	0					
ANR	1254133	PtrMemberAccess	trav -> next		1253327	1					
ANR	1254134	Identifier	trav		1253327	0					
ANR	1254135	Identifier	next		1253327	1					
ANR	1254136	IfStatement	if ( trav != NULL )		1253327	10					
ANR	1254137	Condition	trav != NULL	1461:5:47661:47672	1253327	0	True				
ANR	1254138	EqualityExpression	trav != NULL		1253327	0		!=			
ANR	1254139	Identifier	trav		1253327	0					
ANR	1254140	Identifier	NULL		1253327	1					
ANR	1254141	CompoundStatement		104:19:3384:3384	1253327	1					
ANR	1254142	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexType"" , trav -> name )"	1462:2:47679:47761	1253327	0	True				
ANR	1254143	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in complexType"" , trav -> name )"		1253327	0					
ANR	1254144	Callee	soap_error1		1253327	0					
ANR	1254145	Identifier	soap_error1		1253327	0					
ANR	1254146	ArgumentList	E_ERROR		1253327	1					
ANR	1254147	Argument	E_ERROR		1253327	0					
ANR	1254148	Identifier	E_ERROR		1253327	0					
ANR	1254149	Argument	"""Parsing Schema: unexpected <%s> in complexType"""		1253327	1					
ANR	1254150	PrimaryExpression	"""Parsing Schema: unexpected <%s> in complexType"""		1253327	0					
ANR	1254151	Argument	trav -> name		1253327	2					
ANR	1254152	PtrMemberAccess	trav -> name		1253327	0					
ANR	1254153	Identifier	trav		1253327	0					
ANR	1254154	Identifier	name		1253327	1					
ANR	1254155	ReturnStatement	return TRUE ;	1464:1:47767:47778	1253327	11	True				
ANR	1254156	Identifier	TRUE		1253327	0					
ANR	1254157	ReturnType	static int		1253327	1					
ANR	1254158	Identifier	schema_complexType		1253327	2					
ANR	1254159	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr compType , sdlTypePtr cur_type"		1253327	3					
ANR	1254160	Parameter	sdlPtr sdl	1357:30:44220:44229	1253327	0	True				
ANR	1254161	ParameterType	sdlPtr		1253327	0					
ANR	1254162	Identifier	sdl		1253327	1					
ANR	1254163	Parameter	xmlAttrPtr tns	1357:42:44232:44245	1253327	1	True				
ANR	1254164	ParameterType	xmlAttrPtr		1253327	0					
ANR	1254165	Identifier	tns		1253327	1					
ANR	1254166	Parameter	xmlNodePtr compType	1357:58:44248:44266	1253327	2	True				
ANR	1254167	ParameterType	xmlNodePtr		1253327	0					
ANR	1254168	Identifier	compType		1253327	1					
ANR	1254169	Parameter	sdlTypePtr cur_type	1357:79:44269:44287	1253327	3	True				
ANR	1254170	ParameterType	sdlTypePtr		1253327	0					
ANR	1254171	Identifier	cur_type		1253327	1					
ANR	1254172	CFGEntryNode	ENTRY		1253327		True				
ANR	1254173	CFGExitNode	EXIT		1253327		True				
ANR	1254174	Symbol	delete_encoder		1253327						
ANR	1254175	Symbol	newType		1253327						
ANR	1254176	Symbol	trav -> next		1253327						
ANR	1254177	Symbol	get_attribute		1253327						
ANR	1254178	Symbol	trav		1253327						
ANR	1254179	Symbol	cur_type -> encode -> to_zval		1253327						
ANR	1254180	Symbol	cur_type -> encode -> details		1253327						
ANR	1254181	Symbol	compType -> children		1253327						
ANR	1254182	Symbol	* ptr		1253327						
ANR	1254183	Symbol	cur_type		1253327						
ANR	1254184	Symbol	NULL		1253327						
ANR	1254185	Symbol	& cur_type -> encode		1253327						
ANR	1254186	Symbol	* sdl		1253327						
ANR	1254187	Symbol	TRUE		1253327						
ANR	1254188	Symbol	ns -> children -> content		1253327						
ANR	1254189	Symbol	* * name		1253327						
ANR	1254190	Symbol	attrs		1253327						
ANR	1254191	Symbol	name -> children -> content		1253327						
ANR	1254192	Symbol	* * ns		1253327						
ANR	1254193	Symbol	cur_type -> encode		1253327						
ANR	1254194	Symbol	XSD_TYPEKIND_COMPLEX		1253327						
ANR	1254195	Symbol	sdl -> types		1253327						
ANR	1254196	Symbol	tns		1253327						
ANR	1254197	Symbol	name		1253327						
ANR	1254198	Symbol	compType -> properties		1253327						
ANR	1254199	Symbol	sdl -> encoders		1253327						
ANR	1254200	Symbol	sdl		1253327						
ANR	1254201	Symbol	trav -> name		1253327						
ANR	1254202	Symbol	* ns -> children		1253327						
ANR	1254203	Symbol	ns		1253327						
ANR	1254204	Symbol	sdl_guess_convert_xml		1253327						
ANR	1254205	Symbol	cur_type -> encode -> details . ns		1253327						
ANR	1254206	Symbol	& newType		1253327						
ANR	1254207	Symbol	* compType		1253327						
ANR	1254208	Symbol	cur_type -> namens		1253327						
ANR	1254209	Symbol	node_is_equal		1253327						
ANR	1254210	Symbol	newType -> namens		1253327						
ANR	1254211	Symbol	* trav		1253327						
ANR	1254212	Symbol	* cur_type -> encode		1253327						
ANR	1254213	Symbol	emalloc		1253327						
ANR	1254214	Symbol	compType		1253327						
ANR	1254215	Symbol	& ptr		1253327						
ANR	1254216	Symbol	* * cur_type		1253327						
ANR	1254217	Symbol	* newType		1253327						
ANR	1254218	Symbol	cur_type -> encode -> details . type_str		1253327						
ANR	1254219	Symbol	* name		1253327						
ANR	1254220	Symbol	sdl_guess_convert_zval		1253327						
ANR	1254221	Symbol	newType -> name		1253327						
ANR	1254222	Symbol	ns -> children		1253327						
ANR	1254223	Symbol	name -> children		1253327						
ANR	1254224	Symbol	* ns		1253327						
ANR	1254225	Symbol	* name -> children		1253327						
ANR	1254226	Symbol	newType -> kind		1253327						
ANR	1254227	Symbol	* cur_type		1253327						
ANR	1254228	Symbol	ptr		1253327						
ANR	1254229	Symbol	cur_type -> encode -> details . sdl_type		1253327						
ANR	1254230	Symbol	E_ERROR		1253327						
ANR	1254231	Symbol	estrdup		1253327						
ANR	1254232	Symbol	FALSE		1253327						
ANR	1254233	Symbol	cur_type -> name		1253327						
ANR	1254234	Symbol	cur_type -> encode -> to_xml		1253327						
ANR	1254235	Function	schema_element	1486:0:48364:55093							
ANR	1254236	FunctionDef	"schema_element (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr element , sdlTypePtr cur_type , sdlContentModelPtr model)"		1254235	0					
ANR	1254237	CompoundStatement		1487:0:48485:55093	1254235	0					
ANR	1254238	IdentifierDeclStatement	xmlNodePtr trav ;	1488:1:48488:48503	1254235	0	True				
ANR	1254239	IdentifierDecl	trav		1254235	0					
ANR	1254240	IdentifierDeclType	xmlNodePtr		1254235	0					
ANR	1254241	Identifier	trav		1254235	1					
ANR	1254242	IdentifierDeclStatement	"xmlAttrPtr attrs , attr , ns , name , type , ref = NULL ;"	1489:1:48506:48556	1254235	1	True				
ANR	1254243	IdentifierDecl	attrs		1254235	0					
ANR	1254244	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1254245	Identifier	attrs		1254235	1					
ANR	1254246	IdentifierDecl	attr		1254235	1					
ANR	1254247	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1254248	Identifier	attr		1254235	1					
ANR	1254249	IdentifierDecl	ns		1254235	2					
ANR	1254250	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1254251	Identifier	ns		1254235	1					
ANR	1254252	IdentifierDecl	name		1254235	3					
ANR	1254253	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1254254	Identifier	name		1254235	1					
ANR	1254255	IdentifierDecl	type		1254235	4					
ANR	1254256	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1254257	Identifier	type		1254235	1					
ANR	1254258	IdentifierDecl	ref = NULL		1254235	5					
ANR	1254259	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1254260	Identifier	ref		1254235	1					
ANR	1254261	AssignmentExpression	ref = NULL		1254235	2		=			
ANR	1254262	Identifier	NULL		1254235	0					
ANR	1254263	Identifier	NULL		1254235	1					
ANR	1254264	ExpressionStatement	attrs = element -> properties	1491:1:48560:48587	1254235	2	True				
ANR	1254265	AssignmentExpression	attrs = element -> properties		1254235	0		=			
ANR	1254266	Identifier	attrs		1254235	0					
ANR	1254267	PtrMemberAccess	element -> properties		1254235	1					
ANR	1254268	Identifier	element		1254235	0					
ANR	1254269	Identifier	properties		1254235	1					
ANR	1254270	ExpressionStatement	"ns = get_attribute ( attrs , ""targetNamespace"" )"	1492:1:48590:48634	1254235	3	True				
ANR	1254271	AssignmentExpression	"ns = get_attribute ( attrs , ""targetNamespace"" )"		1254235	0		=			
ANR	1254272	Identifier	ns		1254235	0					
ANR	1254273	CallExpression	"get_attribute ( attrs , ""targetNamespace"" )"		1254235	1					
ANR	1254274	Callee	get_attribute		1254235	0					
ANR	1254275	Identifier	get_attribute		1254235	0					
ANR	1254276	ArgumentList	attrs		1254235	1					
ANR	1254277	Argument	attrs		1254235	0					
ANR	1254278	Identifier	attrs		1254235	0					
ANR	1254279	Argument	"""targetNamespace"""		1254235	1					
ANR	1254280	PrimaryExpression	"""targetNamespace"""		1254235	0					
ANR	1254281	IfStatement	if ( ns == NULL )		1254235	4					
ANR	1254282	Condition	ns == NULL	1493:5:48641:48650	1254235	0	True				
ANR	1254283	EqualityExpression	ns == NULL		1254235	0		==			
ANR	1254284	Identifier	ns		1254235	0					
ANR	1254285	Identifier	NULL		1254235	1					
ANR	1254286	CompoundStatement		7:17:167:167	1254235	1					
ANR	1254287	ExpressionStatement	ns = tns	1494:2:48657:48665	1254235	0	True				
ANR	1254288	AssignmentExpression	ns = tns		1254235	0		=			
ANR	1254289	Identifier	ns		1254235	0					
ANR	1254290	Identifier	tns		1254235	1					
ANR	1254291	ExpressionStatement	"name = get_attribute ( attrs , ""name"" )"	1497:1:48672:48707	1254235	5	True				
ANR	1254292	AssignmentExpression	"name = get_attribute ( attrs , ""name"" )"		1254235	0		=			
ANR	1254293	Identifier	name		1254235	0					
ANR	1254294	CallExpression	"get_attribute ( attrs , ""name"" )"		1254235	1					
ANR	1254295	Callee	get_attribute		1254235	0					
ANR	1254296	Identifier	get_attribute		1254235	0					
ANR	1254297	ArgumentList	attrs		1254235	1					
ANR	1254298	Argument	attrs		1254235	0					
ANR	1254299	Identifier	attrs		1254235	0					
ANR	1254300	Argument	"""name"""		1254235	1					
ANR	1254301	PrimaryExpression	"""name"""		1254235	0					
ANR	1254302	IfStatement	if ( name == NULL )		1254235	6					
ANR	1254303	Condition	name == NULL	1498:5:48714:48725	1254235	0	True				
ANR	1254304	EqualityExpression	name == NULL		1254235	0		==			
ANR	1254305	Identifier	name		1254235	0					
ANR	1254306	Identifier	NULL		1254235	1					
ANR	1254307	CompoundStatement		12:19:242:242	1254235	1					
ANR	1254308	ExpressionStatement	"name = ref = get_attribute ( attrs , ""ref"" )"	1499:2:48732:48772	1254235	0	True				
ANR	1254309	AssignmentExpression	"name = ref = get_attribute ( attrs , ""ref"" )"		1254235	0		=			
ANR	1254310	Identifier	name		1254235	0					
ANR	1254311	AssignmentExpression	"ref = get_attribute ( attrs , ""ref"" )"		1254235	1		=			
ANR	1254312	Identifier	ref		1254235	0					
ANR	1254313	CallExpression	"get_attribute ( attrs , ""ref"" )"		1254235	1					
ANR	1254314	Callee	get_attribute		1254235	0					
ANR	1254315	Identifier	get_attribute		1254235	0					
ANR	1254316	ArgumentList	attrs		1254235	1					
ANR	1254317	Argument	attrs		1254235	0					
ANR	1254318	Identifier	attrs		1254235	0					
ANR	1254319	Argument	"""ref"""		1254235	1					
ANR	1254320	PrimaryExpression	"""ref"""		1254235	0					
ANR	1254321	IfStatement	if ( name )		1254235	7					
ANR	1254322	Condition	name	1502:5:48783:48786	1254235	0	True				
ANR	1254323	Identifier	name		1254235	0					
ANR	1254324	CompoundStatement		19:2:351:370	1254235	1					
ANR	1254325	IdentifierDeclStatement	HashTable * addHash ;	1503:2:48793:48811	1254235	0	True				
ANR	1254326	IdentifierDecl	* addHash		1254235	0					
ANR	1254327	IdentifierDeclType	HashTable *		1254235	0					
ANR	1254328	Identifier	addHash		1254235	1					
ANR	1254329	IdentifierDeclStatement	sdlTypePtr newType ;	1504:2:48815:48833	1254235	1	True				
ANR	1254330	IdentifierDecl	newType		1254235	0					
ANR	1254331	IdentifierDeclType	sdlTypePtr		1254235	0					
ANR	1254332	Identifier	newType		1254235	1					
ANR	1254333	IdentifierDeclStatement	smart_str key = { 0 } ;	1505:2:48837:48856	1254235	2	True				
ANR	1254334	IdentifierDecl	key = { 0 }		1254235	0					
ANR	1254335	IdentifierDeclType	smart_str		1254235	0					
ANR	1254336	Identifier	key		1254235	1					
ANR	1254337	AssignmentExpression	key = { 0 }		1254235	2		=			
ANR	1254338	Identifier	key		1254235	0					
ANR	1254339	InitializerList	0		1254235	1					
ANR	1254340	PrimaryExpression	0		1254235	0					
ANR	1254341	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	1507:2:48861:48895	1254235	3	True				
ANR	1254342	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1254235	0		=			
ANR	1254343	Identifier	newType		1254235	0					
ANR	1254344	CallExpression	emalloc ( sizeof ( sdlType ) )		1254235	1					
ANR	1254345	Callee	emalloc		1254235	0					
ANR	1254346	Identifier	emalloc		1254235	0					
ANR	1254347	ArgumentList	sizeof ( sdlType )		1254235	1					
ANR	1254348	Argument	sizeof ( sdlType )		1254235	0					
ANR	1254349	SizeofExpression	sizeof ( sdlType )		1254235	0					
ANR	1254350	Sizeof	sizeof		1254235	0					
ANR	1254351	SizeofOperand	sdlType		1254235	1					
ANR	1254352	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	1508:2:48899:48934	1254235	4	True				
ANR	1254353	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1254235	0					
ANR	1254354	Callee	memset		1254235	0					
ANR	1254355	Identifier	memset		1254235	0					
ANR	1254356	ArgumentList	newType		1254235	1					
ANR	1254357	Argument	newType		1254235	0					
ANR	1254358	Identifier	newType		1254235	0					
ANR	1254359	Argument	0		1254235	1					
ANR	1254360	PrimaryExpression	0		1254235	0					
ANR	1254361	Argument	sizeof ( sdlType )		1254235	2					
ANR	1254362	SizeofExpression	sizeof ( sdlType )		1254235	0					
ANR	1254363	Sizeof	sizeof		1254235	0					
ANR	1254364	SizeofOperand	sdlType		1254235	1					
ANR	1254365	IfStatement	if ( ref )		1254235	5					
ANR	1254366	Condition	ref	1510:6:48943:48945	1254235	0	True				
ANR	1254367	Identifier	ref		1254235	0					
ANR	1254368	CompoundStatement		27:3:513:527	1254235	1					
ANR	1254369	IdentifierDeclStatement	smart_str nscat = { 0 } ;	1511:3:48953:48974	1254235	0	True				
ANR	1254370	IdentifierDecl	nscat = { 0 }		1254235	0					
ANR	1254371	IdentifierDeclType	smart_str		1254235	0					
ANR	1254372	Identifier	nscat		1254235	1					
ANR	1254373	AssignmentExpression	nscat = { 0 }		1254235	2		=			
ANR	1254374	Identifier	nscat		1254235	0					
ANR	1254375	InitializerList	0		1254235	1					
ANR	1254376	PrimaryExpression	0		1254235	0					
ANR	1254377	IdentifierDeclStatement	"char * type , * ns ;"	1512:3:48979:48994	1254235	1	True				
ANR	1254378	IdentifierDecl	* type		1254235	0					
ANR	1254379	IdentifierDeclType	char *		1254235	0					
ANR	1254380	Identifier	type		1254235	1					
ANR	1254381	IdentifierDecl	* ns		1254235	1					
ANR	1254382	IdentifierDeclType	char *		1254235	0					
ANR	1254383	Identifier	ns		1254235	1					
ANR	1254384	IdentifierDeclStatement	xmlNsPtr nsptr ;	1513:3:48999:49013	1254235	2	True				
ANR	1254385	IdentifierDecl	nsptr		1254235	0					
ANR	1254386	IdentifierDeclType	xmlNsPtr		1254235	0					
ANR	1254387	Identifier	nsptr		1254235	1					
ANR	1254388	ExpressionStatement	"parse_namespace ( ref -> children -> content , & type , & ns )"	1515:3:49019:49070	1254235	3	True				
ANR	1254389	CallExpression	"parse_namespace ( ref -> children -> content , & type , & ns )"		1254235	0					
ANR	1254390	Callee	parse_namespace		1254235	0					
ANR	1254391	Identifier	parse_namespace		1254235	0					
ANR	1254392	ArgumentList	ref -> children -> content		1254235	1					
ANR	1254393	Argument	ref -> children -> content		1254235	0					
ANR	1254394	PtrMemberAccess	ref -> children -> content		1254235	0					
ANR	1254395	PtrMemberAccess	ref -> children		1254235	0					
ANR	1254396	Identifier	ref		1254235	0					
ANR	1254397	Identifier	children		1254235	1					
ANR	1254398	Identifier	content		1254235	1					
ANR	1254399	Argument	& type		1254235	1					
ANR	1254400	UnaryOperationExpression	& type		1254235	0					
ANR	1254401	UnaryOperator	&		1254235	0					
ANR	1254402	Identifier	type		1254235	1					
ANR	1254403	Argument	& ns		1254235	2					
ANR	1254404	UnaryOperationExpression	& ns		1254235	0					
ANR	1254405	UnaryOperator	&		1254235	0					
ANR	1254406	Identifier	ns		1254235	1					
ANR	1254407	ExpressionStatement	"nsptr = xmlSearchNs ( element -> doc , element , BAD_CAST ( ns ) )"	1516:3:49075:49131	1254235	4	True				
ANR	1254408	AssignmentExpression	"nsptr = xmlSearchNs ( element -> doc , element , BAD_CAST ( ns ) )"		1254235	0		=			
ANR	1254409	Identifier	nsptr		1254235	0					
ANR	1254410	CallExpression	"xmlSearchNs ( element -> doc , element , BAD_CAST ( ns ) )"		1254235	1					
ANR	1254411	Callee	xmlSearchNs		1254235	0					
ANR	1254412	Identifier	xmlSearchNs		1254235	0					
ANR	1254413	ArgumentList	element -> doc		1254235	1					
ANR	1254414	Argument	element -> doc		1254235	0					
ANR	1254415	PtrMemberAccess	element -> doc		1254235	0					
ANR	1254416	Identifier	element		1254235	0					
ANR	1254417	Identifier	doc		1254235	1					
ANR	1254418	Argument	element		1254235	1					
ANR	1254419	Identifier	element		1254235	0					
ANR	1254420	Argument	BAD_CAST ( ns )		1254235	2					
ANR	1254421	CallExpression	BAD_CAST ( ns )		1254235	0					
ANR	1254422	Callee	BAD_CAST		1254235	0					
ANR	1254423	Identifier	BAD_CAST		1254235	0					
ANR	1254424	ArgumentList	ns		1254235	1					
ANR	1254425	Argument	ns		1254235	0					
ANR	1254426	Identifier	ns		1254235	0					
ANR	1254427	IfStatement	if ( nsptr != NULL )		1254235	5					
ANR	1254428	Condition	nsptr != NULL	1517:7:49140:49152	1254235	0	True				
ANR	1254429	EqualityExpression	nsptr != NULL		1254235	0		!=			
ANR	1254430	Identifier	nsptr		1254235	0					
ANR	1254431	Identifier	NULL		1254235	1					
ANR	1254432	CompoundStatement		31:22:669:669	1254235	1					
ANR	1254433	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) nsptr -> href )"	1518:4:49161:49206	1254235	0	True				
ANR	1254434	CallExpression	"smart_str_appends ( & nscat , ( char * ) nsptr -> href )"		1254235	0					
ANR	1254435	Callee	smart_str_appends		1254235	0					
ANR	1254436	Identifier	smart_str_appends		1254235	0					
ANR	1254437	ArgumentList	& nscat		1254235	1					
ANR	1254438	Argument	& nscat		1254235	0					
ANR	1254439	UnaryOperationExpression	& nscat		1254235	0					
ANR	1254440	UnaryOperator	&		1254235	0					
ANR	1254441	Identifier	nscat		1254235	1					
ANR	1254442	Argument	( char * ) nsptr -> href		1254235	1					
ANR	1254443	CastExpression	( char * ) nsptr -> href		1254235	0					
ANR	1254444	CastTarget	char *		1254235	0					
ANR	1254445	PtrMemberAccess	nsptr -> href		1254235	1					
ANR	1254446	Identifier	nsptr		1254235	0					
ANR	1254447	Identifier	href		1254235	1					
ANR	1254448	ExpressionStatement	newType -> namens = estrdup ( ( char * ) nsptr -> href )	1519:4:49212:49257	1254235	1	True				
ANR	1254449	AssignmentExpression	newType -> namens = estrdup ( ( char * ) nsptr -> href )		1254235	0		=			
ANR	1254450	PtrMemberAccess	newType -> namens		1254235	0					
ANR	1254451	Identifier	newType		1254235	0					
ANR	1254452	Identifier	namens		1254235	1					
ANR	1254453	CallExpression	estrdup ( ( char * ) nsptr -> href )		1254235	1					
ANR	1254454	Callee	estrdup		1254235	0					
ANR	1254455	Identifier	estrdup		1254235	0					
ANR	1254456	ArgumentList	( char * ) nsptr -> href		1254235	1					
ANR	1254457	Argument	( char * ) nsptr -> href		1254235	0					
ANR	1254458	CastExpression	( char * ) nsptr -> href		1254235	0					
ANR	1254459	CastTarget	char *		1254235	0					
ANR	1254460	PtrMemberAccess	nsptr -> href		1254235	1					
ANR	1254461	Identifier	nsptr		1254235	0					
ANR	1254462	Identifier	href		1254235	1					
ANR	1254463	ElseStatement	else		1254235	0					
ANR	1254464	CompoundStatement		35:4:789:844	1254235	0					
ANR	1254465	IdentifierDeclStatement	"xmlAttrPtr ns = get_attribute ( attrs , ""targetNamespace"" ) ;"	1521:4:49275:49330	1254235	0	True				
ANR	1254466	IdentifierDecl	"ns = get_attribute ( attrs , ""targetNamespace"" )"		1254235	0					
ANR	1254467	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1254468	Identifier	ns		1254235	1					
ANR	1254469	AssignmentExpression	"ns = get_attribute ( attrs , ""targetNamespace"" )"		1254235	2		=			
ANR	1254470	Identifier	ns		1254235	0					
ANR	1254471	CallExpression	"get_attribute ( attrs , ""targetNamespace"" )"		1254235	1					
ANR	1254472	Callee	get_attribute		1254235	0					
ANR	1254473	Identifier	get_attribute		1254235	0					
ANR	1254474	ArgumentList	attrs		1254235	1					
ANR	1254475	Argument	attrs		1254235	0					
ANR	1254476	Identifier	attrs		1254235	0					
ANR	1254477	Argument	"""targetNamespace"""		1254235	1					
ANR	1254478	PrimaryExpression	"""targetNamespace"""		1254235	0					
ANR	1254479	IfStatement	if ( ns == NULL )		1254235	1					
ANR	1254480	Condition	ns == NULL	1522:8:49340:49349	1254235	0	True				
ANR	1254481	EqualityExpression	ns == NULL		1254235	0		==			
ANR	1254482	Identifier	ns		1254235	0					
ANR	1254483	Identifier	NULL		1254235	1					
ANR	1254484	CompoundStatement		36:20:866:866	1254235	1					
ANR	1254485	ExpressionStatement	ns = tns	1523:5:49359:49367	1254235	0	True				
ANR	1254486	AssignmentExpression	ns = tns		1254235	0		=			
ANR	1254487	Identifier	ns		1254235	0					
ANR	1254488	Identifier	tns		1254235	1					
ANR	1254489	IfStatement	if ( ns )		1254235	2					
ANR	1254490	Condition	ns	1525:8:49383:49384	1254235	0	True				
ANR	1254491	Identifier	ns		1254235	0					
ANR	1254492	CompoundStatement		39:12:901:901	1254235	1					
ANR	1254493	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) ns -> children -> content )"	1526:5:49394:49449	1254235	0	True				
ANR	1254494	CallExpression	"smart_str_appends ( & nscat , ( char * ) ns -> children -> content )"		1254235	0					
ANR	1254495	Callee	smart_str_appends		1254235	0					
ANR	1254496	Identifier	smart_str_appends		1254235	0					
ANR	1254497	ArgumentList	& nscat		1254235	1					
ANR	1254498	Argument	& nscat		1254235	0					
ANR	1254499	UnaryOperationExpression	& nscat		1254235	0					
ANR	1254500	UnaryOperator	&		1254235	0					
ANR	1254501	Identifier	nscat		1254235	1					
ANR	1254502	Argument	( char * ) ns -> children -> content		1254235	1					
ANR	1254503	CastExpression	( char * ) ns -> children -> content		1254235	0					
ANR	1254504	CastTarget	char *		1254235	0					
ANR	1254505	PtrMemberAccess	ns -> children -> content		1254235	1					
ANR	1254506	PtrMemberAccess	ns -> children		1254235	0					
ANR	1254507	Identifier	ns		1254235	0					
ANR	1254508	Identifier	children		1254235	1					
ANR	1254509	Identifier	content		1254235	1					
ANR	1254510	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	1529:3:49466:49496	1254235	6	True				
ANR	1254511	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1254235	0					
ANR	1254512	Callee	smart_str_appendc		1254235	0					
ANR	1254513	Identifier	smart_str_appendc		1254235	0					
ANR	1254514	ArgumentList	& nscat		1254235	1					
ANR	1254515	Argument	& nscat		1254235	0					
ANR	1254516	UnaryOperationExpression	& nscat		1254235	0					
ANR	1254517	UnaryOperator	&		1254235	0					
ANR	1254518	Identifier	nscat		1254235	1					
ANR	1254519	Argument	':'		1254235	1					
ANR	1254520	PrimaryExpression	':'		1254235	0					
ANR	1254521	ExpressionStatement	"smart_str_appends ( & nscat , type )"	1530:3:49501:49532	1254235	7	True				
ANR	1254522	CallExpression	"smart_str_appends ( & nscat , type )"		1254235	0					
ANR	1254523	Callee	smart_str_appends		1254235	0					
ANR	1254524	Identifier	smart_str_appends		1254235	0					
ANR	1254525	ArgumentList	& nscat		1254235	1					
ANR	1254526	Argument	& nscat		1254235	0					
ANR	1254527	UnaryOperationExpression	& nscat		1254235	0					
ANR	1254528	UnaryOperator	&		1254235	0					
ANR	1254529	Identifier	nscat		1254235	1					
ANR	1254530	Argument	type		1254235	1					
ANR	1254531	Identifier	type		1254235	0					
ANR	1254532	ExpressionStatement	newType -> name = estrdup ( type )	1531:3:49537:49566	1254235	8	True				
ANR	1254533	AssignmentExpression	newType -> name = estrdup ( type )		1254235	0		=			
ANR	1254534	PtrMemberAccess	newType -> name		1254235	0					
ANR	1254535	Identifier	newType		1254235	0					
ANR	1254536	Identifier	name		1254235	1					
ANR	1254537	CallExpression	estrdup ( type )		1254235	1					
ANR	1254538	Callee	estrdup		1254235	0					
ANR	1254539	Identifier	estrdup		1254235	0					
ANR	1254540	ArgumentList	type		1254235	1					
ANR	1254541	Argument	type		1254235	0					
ANR	1254542	Identifier	type		1254235	0					
ANR	1254543	ExpressionStatement	smart_str_0 ( & nscat )	1532:3:49571:49590	1254235	9	True				
ANR	1254544	CallExpression	smart_str_0 ( & nscat )		1254235	0					
ANR	1254545	Callee	smart_str_0		1254235	0					
ANR	1254546	Identifier	smart_str_0		1254235	0					
ANR	1254547	ArgumentList	& nscat		1254235	1					
ANR	1254548	Argument	& nscat		1254235	0					
ANR	1254549	UnaryOperationExpression	& nscat		1254235	0					
ANR	1254550	UnaryOperator	&		1254235	0					
ANR	1254551	Identifier	nscat		1254235	1					
ANR	1254552	IfStatement	if ( type )		1254235	10					
ANR	1254553	Condition	type	1533:7:49599:49602	1254235	0	True				
ANR	1254554	Identifier	type		1254235	0					
ANR	1254555	CompoundStatement		47:13:1119:1119	1254235	1					
ANR	1254556	ExpressionStatement	efree ( type )	1533:14:49606:49617	1254235	0	True				
ANR	1254557	CallExpression	efree ( type )		1254235	0					
ANR	1254558	Callee	efree		1254235	0					
ANR	1254559	Identifier	efree		1254235	0					
ANR	1254560	ArgumentList	type		1254235	1					
ANR	1254561	Argument	type		1254235	0					
ANR	1254562	Identifier	type		1254235	0					
ANR	1254563	IfStatement	if ( ns )		1254235	11					
ANR	1254564	Condition	ns	1534:7:49627:49628	1254235	0	True				
ANR	1254565	Identifier	ns		1254235	0					
ANR	1254566	CompoundStatement		48:11:1145:1145	1254235	1					
ANR	1254567	ExpressionStatement	efree ( ns )	1534:12:49632:49641	1254235	0	True				
ANR	1254568	CallExpression	efree ( ns )		1254235	0					
ANR	1254569	Callee	efree		1254235	0					
ANR	1254570	Identifier	efree		1254235	0					
ANR	1254571	ArgumentList	ns		1254235	1					
ANR	1254572	Argument	ns		1254235	0					
ANR	1254573	Identifier	ns		1254235	0					
ANR	1254574	ExpressionStatement	newType -> ref = estrdup ( nscat . c )	1535:3:49647:49678	1254235	12	True				
ANR	1254575	AssignmentExpression	newType -> ref = estrdup ( nscat . c )		1254235	0		=			
ANR	1254576	PtrMemberAccess	newType -> ref		1254235	0					
ANR	1254577	Identifier	newType		1254235	0					
ANR	1254578	Identifier	ref		1254235	1					
ANR	1254579	CallExpression	estrdup ( nscat . c )		1254235	1					
ANR	1254580	Callee	estrdup		1254235	0					
ANR	1254581	Identifier	estrdup		1254235	0					
ANR	1254582	ArgumentList	nscat . c		1254235	1					
ANR	1254583	Argument	nscat . c		1254235	0					
ANR	1254584	MemberAccess	nscat . c		1254235	0					
ANR	1254585	Identifier	nscat		1254235	0					
ANR	1254586	Identifier	c		1254235	1					
ANR	1254587	ExpressionStatement	smart_str_free ( & nscat )	1536:3:49683:49705	1254235	13	True				
ANR	1254588	CallExpression	smart_str_free ( & nscat )		1254235	0					
ANR	1254589	Callee	smart_str_free		1254235	0					
ANR	1254590	Identifier	smart_str_free		1254235	0					
ANR	1254591	ArgumentList	& nscat		1254235	1					
ANR	1254592	Argument	& nscat		1254235	0					
ANR	1254593	UnaryOperationExpression	& nscat		1254235	0					
ANR	1254594	UnaryOperator	&		1254235	0					
ANR	1254595	Identifier	nscat		1254235	1					
ANR	1254596	ElseStatement	else		1254235	0					
ANR	1254597	CompoundStatement		51:9:1230:1230	1254235	0					
ANR	1254598	ExpressionStatement	newType -> name = estrdup ( ( char * ) name -> children -> content )	1538:3:49721:49776	1254235	0	True				
ANR	1254599	AssignmentExpression	newType -> name = estrdup ( ( char * ) name -> children -> content )		1254235	0		=			
ANR	1254600	PtrMemberAccess	newType -> name		1254235	0					
ANR	1254601	Identifier	newType		1254235	0					
ANR	1254602	Identifier	name		1254235	1					
ANR	1254603	CallExpression	estrdup ( ( char * ) name -> children -> content )		1254235	1					
ANR	1254604	Callee	estrdup		1254235	0					
ANR	1254605	Identifier	estrdup		1254235	0					
ANR	1254606	ArgumentList	( char * ) name -> children -> content		1254235	1					
ANR	1254607	Argument	( char * ) name -> children -> content		1254235	0					
ANR	1254608	CastExpression	( char * ) name -> children -> content		1254235	0					
ANR	1254609	CastTarget	char *		1254235	0					
ANR	1254610	PtrMemberAccess	name -> children -> content		1254235	1					
ANR	1254611	PtrMemberAccess	name -> children		1254235	0					
ANR	1254612	Identifier	name		1254235	0					
ANR	1254613	Identifier	children		1254235	1					
ANR	1254614	Identifier	content		1254235	1					
ANR	1254615	ExpressionStatement	newType -> namens = estrdup ( ( char * ) ns -> children -> content )	1539:3:49781:49836	1254235	1	True				
ANR	1254616	AssignmentExpression	newType -> namens = estrdup ( ( char * ) ns -> children -> content )		1254235	0		=			
ANR	1254617	PtrMemberAccess	newType -> namens		1254235	0					
ANR	1254618	Identifier	newType		1254235	0					
ANR	1254619	Identifier	namens		1254235	1					
ANR	1254620	CallExpression	estrdup ( ( char * ) ns -> children -> content )		1254235	1					
ANR	1254621	Callee	estrdup		1254235	0					
ANR	1254622	Identifier	estrdup		1254235	0					
ANR	1254623	ArgumentList	( char * ) ns -> children -> content		1254235	1					
ANR	1254624	Argument	( char * ) ns -> children -> content		1254235	0					
ANR	1254625	CastExpression	( char * ) ns -> children -> content		1254235	0					
ANR	1254626	CastTarget	char *		1254235	0					
ANR	1254627	PtrMemberAccess	ns -> children -> content		1254235	1					
ANR	1254628	PtrMemberAccess	ns -> children		1254235	0					
ANR	1254629	Identifier	ns		1254235	0					
ANR	1254630	Identifier	children		1254235	1					
ANR	1254631	Identifier	content		1254235	1					
ANR	1254632	ExpressionStatement	newType -> nillable = FALSE	1542:2:49845:49870	1254235	6	True				
ANR	1254633	AssignmentExpression	newType -> nillable = FALSE		1254235	0		=			
ANR	1254634	PtrMemberAccess	newType -> nillable		1254235	0					
ANR	1254635	Identifier	newType		1254235	0					
ANR	1254636	Identifier	nillable		1254235	1					
ANR	1254637	Identifier	FALSE		1254235	1					
ANR	1254638	IfStatement	if ( cur_type == NULL )		1254235	7					
ANR	1254639	Condition	cur_type == NULL	1544:6:49879:49894	1254235	0	True				
ANR	1254640	EqualityExpression	cur_type == NULL		1254235	0		==			
ANR	1254641	Identifier	cur_type		1254235	0					
ANR	1254642	Identifier	NULL		1254235	1					
ANR	1254643	CompoundStatement		58:24:1411:1411	1254235	1					
ANR	1254644	IfStatement	if ( sdl -> elements == NULL )		1254235	0					
ANR	1254645	Condition	sdl -> elements == NULL	1545:7:49906:49926	1254235	0	True				
ANR	1254646	EqualityExpression	sdl -> elements == NULL		1254235	0		==			
ANR	1254647	PtrMemberAccess	sdl -> elements		1254235	0					
ANR	1254648	Identifier	sdl		1254235	0					
ANR	1254649	Identifier	elements		1254235	1					
ANR	1254650	Identifier	NULL		1254235	1					
ANR	1254651	CompoundStatement		59:30:1443:1443	1254235	1					
ANR	1254652	ExpressionStatement	sdl -> elements = emalloc ( sizeof ( HashTable ) )	1546:4:49935:49977	1254235	0	True				
ANR	1254653	AssignmentExpression	sdl -> elements = emalloc ( sizeof ( HashTable ) )		1254235	0		=			
ANR	1254654	PtrMemberAccess	sdl -> elements		1254235	0					
ANR	1254655	Identifier	sdl		1254235	0					
ANR	1254656	Identifier	elements		1254235	1					
ANR	1254657	CallExpression	emalloc ( sizeof ( HashTable ) )		1254235	1					
ANR	1254658	Callee	emalloc		1254235	0					
ANR	1254659	Identifier	emalloc		1254235	0					
ANR	1254660	ArgumentList	sizeof ( HashTable )		1254235	1					
ANR	1254661	Argument	sizeof ( HashTable )		1254235	0					
ANR	1254662	SizeofExpression	sizeof ( HashTable )		1254235	0					
ANR	1254663	Sizeof	sizeof		1254235	0					
ANR	1254664	SizeofOperand	HashTable		1254235	1					
ANR	1254665	ExpressionStatement	"zend_hash_init ( sdl -> elements , 0 , NULL , delete_type , 0 )"	1547:4:49983:50037	1254235	1	True				
ANR	1254666	CallExpression	"zend_hash_init ( sdl -> elements , 0 , NULL , delete_type , 0 )"		1254235	0					
ANR	1254667	Callee	zend_hash_init		1254235	0					
ANR	1254668	Identifier	zend_hash_init		1254235	0					
ANR	1254669	ArgumentList	sdl -> elements		1254235	1					
ANR	1254670	Argument	sdl -> elements		1254235	0					
ANR	1254671	PtrMemberAccess	sdl -> elements		1254235	0					
ANR	1254672	Identifier	sdl		1254235	0					
ANR	1254673	Identifier	elements		1254235	1					
ANR	1254674	Argument	0		1254235	1					
ANR	1254675	PrimaryExpression	0		1254235	0					
ANR	1254676	Argument	NULL		1254235	2					
ANR	1254677	Identifier	NULL		1254235	0					
ANR	1254678	Argument	delete_type		1254235	3					
ANR	1254679	Identifier	delete_type		1254235	0					
ANR	1254680	Argument	0		1254235	4					
ANR	1254681	PrimaryExpression	0		1254235	0					
ANR	1254682	ExpressionStatement	addHash = sdl -> elements	1549:3:50047:50070	1254235	1	True				
ANR	1254683	AssignmentExpression	addHash = sdl -> elements		1254235	0		=			
ANR	1254684	Identifier	addHash		1254235	0					
ANR	1254685	PtrMemberAccess	sdl -> elements		1254235	1					
ANR	1254686	Identifier	sdl		1254235	0					
ANR	1254687	Identifier	elements		1254235	1					
ANR	1254688	ExpressionStatement	"smart_str_appends ( & key , newType -> namens )"	1550:3:50075:50115	1254235	2	True				
ANR	1254689	CallExpression	"smart_str_appends ( & key , newType -> namens )"		1254235	0					
ANR	1254690	Callee	smart_str_appends		1254235	0					
ANR	1254691	Identifier	smart_str_appends		1254235	0					
ANR	1254692	ArgumentList	& key		1254235	1					
ANR	1254693	Argument	& key		1254235	0					
ANR	1254694	UnaryOperationExpression	& key		1254235	0					
ANR	1254695	UnaryOperator	&		1254235	0					
ANR	1254696	Identifier	key		1254235	1					
ANR	1254697	Argument	newType -> namens		1254235	1					
ANR	1254698	PtrMemberAccess	newType -> namens		1254235	0					
ANR	1254699	Identifier	newType		1254235	0					
ANR	1254700	Identifier	namens		1254235	1					
ANR	1254701	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	1551:3:50120:50148	1254235	3	True				
ANR	1254702	CallExpression	"smart_str_appendc ( & key , ':' )"		1254235	0					
ANR	1254703	Callee	smart_str_appendc		1254235	0					
ANR	1254704	Identifier	smart_str_appendc		1254235	0					
ANR	1254705	ArgumentList	& key		1254235	1					
ANR	1254706	Argument	& key		1254235	0					
ANR	1254707	UnaryOperationExpression	& key		1254235	0					
ANR	1254708	UnaryOperator	&		1254235	0					
ANR	1254709	Identifier	key		1254235	1					
ANR	1254710	Argument	':'		1254235	1					
ANR	1254711	PrimaryExpression	':'		1254235	0					
ANR	1254712	ExpressionStatement	"smart_str_appends ( & key , newType -> name )"	1552:3:50153:50191	1254235	4	True				
ANR	1254713	CallExpression	"smart_str_appends ( & key , newType -> name )"		1254235	0					
ANR	1254714	Callee	smart_str_appends		1254235	0					
ANR	1254715	Identifier	smart_str_appends		1254235	0					
ANR	1254716	ArgumentList	& key		1254235	1					
ANR	1254717	Argument	& key		1254235	0					
ANR	1254718	UnaryOperationExpression	& key		1254235	0					
ANR	1254719	UnaryOperator	&		1254235	0					
ANR	1254720	Identifier	key		1254235	1					
ANR	1254721	Argument	newType -> name		1254235	1					
ANR	1254722	PtrMemberAccess	newType -> name		1254235	0					
ANR	1254723	Identifier	newType		1254235	0					
ANR	1254724	Identifier	name		1254235	1					
ANR	1254725	ElseStatement	else		1254235	0					
ANR	1254726	CompoundStatement		67:9:1716:1716	1254235	0					
ANR	1254727	IfStatement	if ( cur_type -> elements == NULL )		1254235	0					
ANR	1254728	Condition	cur_type -> elements == NULL	1554:7:50211:50236	1254235	0	True				
ANR	1254729	EqualityExpression	cur_type -> elements == NULL		1254235	0		==			
ANR	1254730	PtrMemberAccess	cur_type -> elements		1254235	0					
ANR	1254731	Identifier	cur_type		1254235	0					
ANR	1254732	Identifier	elements		1254235	1					
ANR	1254733	Identifier	NULL		1254235	1					
ANR	1254734	CompoundStatement		68:35:1753:1753	1254235	1					
ANR	1254735	ExpressionStatement	cur_type -> elements = emalloc ( sizeof ( HashTable ) )	1555:4:50245:50292	1254235	0	True				
ANR	1254736	AssignmentExpression	cur_type -> elements = emalloc ( sizeof ( HashTable ) )		1254235	0		=			
ANR	1254737	PtrMemberAccess	cur_type -> elements		1254235	0					
ANR	1254738	Identifier	cur_type		1254235	0					
ANR	1254739	Identifier	elements		1254235	1					
ANR	1254740	CallExpression	emalloc ( sizeof ( HashTable ) )		1254235	1					
ANR	1254741	Callee	emalloc		1254235	0					
ANR	1254742	Identifier	emalloc		1254235	0					
ANR	1254743	ArgumentList	sizeof ( HashTable )		1254235	1					
ANR	1254744	Argument	sizeof ( HashTable )		1254235	0					
ANR	1254745	SizeofExpression	sizeof ( HashTable )		1254235	0					
ANR	1254746	Sizeof	sizeof		1254235	0					
ANR	1254747	SizeofOperand	HashTable		1254235	1					
ANR	1254748	ExpressionStatement	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"	1556:4:50298:50357	1254235	1	True				
ANR	1254749	CallExpression	"zend_hash_init ( cur_type -> elements , 0 , NULL , delete_type , 0 )"		1254235	0					
ANR	1254750	Callee	zend_hash_init		1254235	0					
ANR	1254751	Identifier	zend_hash_init		1254235	0					
ANR	1254752	ArgumentList	cur_type -> elements		1254235	1					
ANR	1254753	Argument	cur_type -> elements		1254235	0					
ANR	1254754	PtrMemberAccess	cur_type -> elements		1254235	0					
ANR	1254755	Identifier	cur_type		1254235	0					
ANR	1254756	Identifier	elements		1254235	1					
ANR	1254757	Argument	0		1254235	1					
ANR	1254758	PrimaryExpression	0		1254235	0					
ANR	1254759	Argument	NULL		1254235	2					
ANR	1254760	Identifier	NULL		1254235	0					
ANR	1254761	Argument	delete_type		1254235	3					
ANR	1254762	Identifier	delete_type		1254235	0					
ANR	1254763	Argument	0		1254235	4					
ANR	1254764	PrimaryExpression	0		1254235	0					
ANR	1254765	ExpressionStatement	addHash = cur_type -> elements	1558:3:50367:50395	1254235	1	True				
ANR	1254766	AssignmentExpression	addHash = cur_type -> elements		1254235	0		=			
ANR	1254767	Identifier	addHash		1254235	0					
ANR	1254768	PtrMemberAccess	cur_type -> elements		1254235	1					
ANR	1254769	Identifier	cur_type		1254235	0					
ANR	1254770	Identifier	elements		1254235	1					
ANR	1254771	ExpressionStatement	"smart_str_appends ( & key , newType -> name )"	1559:3:50400:50438	1254235	2	True				
ANR	1254772	CallExpression	"smart_str_appends ( & key , newType -> name )"		1254235	0					
ANR	1254773	Callee	smart_str_appends		1254235	0					
ANR	1254774	Identifier	smart_str_appends		1254235	0					
ANR	1254775	ArgumentList	& key		1254235	1					
ANR	1254776	Argument	& key		1254235	0					
ANR	1254777	UnaryOperationExpression	& key		1254235	0					
ANR	1254778	UnaryOperator	&		1254235	0					
ANR	1254779	Identifier	key		1254235	1					
ANR	1254780	Argument	newType -> name		1254235	1					
ANR	1254781	PtrMemberAccess	newType -> name		1254235	0					
ANR	1254782	Identifier	newType		1254235	0					
ANR	1254783	Identifier	name		1254235	1					
ANR	1254784	ExpressionStatement	smart_str_0 ( & key )	1562:2:50447:50464	1254235	8	True				
ANR	1254785	CallExpression	smart_str_0 ( & key )		1254235	0					
ANR	1254786	Callee	smart_str_0		1254235	0					
ANR	1254787	Identifier	smart_str_0		1254235	0					
ANR	1254788	ArgumentList	& key		1254235	1					
ANR	1254789	Argument	& key		1254235	0					
ANR	1254790	UnaryOperationExpression	& key		1254235	0					
ANR	1254791	UnaryOperator	&		1254235	0					
ANR	1254792	Identifier	key		1254235	1					
ANR	1254793	IfStatement	"if ( zend_hash_add ( addHash , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS )"		1254235	9					
ANR	1254794	Condition	"zend_hash_add ( addHash , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS"	1563:6:50472:50560	1254235	0	True				
ANR	1254795	EqualityExpression	"zend_hash_add ( addHash , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS"		1254235	0		!=			
ANR	1254796	CallExpression	"zend_hash_add ( addHash , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL )"		1254235	0					
ANR	1254797	Callee	zend_hash_add		1254235	0					
ANR	1254798	Identifier	zend_hash_add		1254235	0					
ANR	1254799	ArgumentList	addHash		1254235	1					
ANR	1254800	Argument	addHash		1254235	0					
ANR	1254801	Identifier	addHash		1254235	0					
ANR	1254802	Argument	key . c		1254235	1					
ANR	1254803	MemberAccess	key . c		1254235	0					
ANR	1254804	Identifier	key		1254235	0					
ANR	1254805	Identifier	c		1254235	1					
ANR	1254806	Argument	key . len + 1		1254235	2					
ANR	1254807	AdditiveExpression	key . len + 1		1254235	0		+			
ANR	1254808	MemberAccess	key . len		1254235	0					
ANR	1254809	Identifier	key		1254235	0					
ANR	1254810	Identifier	len		1254235	1					
ANR	1254811	PrimaryExpression	1		1254235	1					
ANR	1254812	Argument	& newType		1254235	3					
ANR	1254813	UnaryOperationExpression	& newType		1254235	0					
ANR	1254814	UnaryOperator	&		1254235	0					
ANR	1254815	Identifier	newType		1254235	1					
ANR	1254816	Argument	sizeof ( sdlTypePtr )		1254235	4					
ANR	1254817	SizeofExpression	sizeof ( sdlTypePtr )		1254235	0					
ANR	1254818	Sizeof	sizeof		1254235	0					
ANR	1254819	SizeofOperand	sdlTypePtr		1254235	1					
ANR	1254820	Argument	NULL		1254235	5					
ANR	1254821	Identifier	NULL		1254235	0					
ANR	1254822	Identifier	SUCCESS		1254235	1					
ANR	1254823	CompoundStatement		77:97:2077:2077	1254235	1					
ANR	1254824	IfStatement	if ( cur_type == NULL )		1254235	0					
ANR	1254825	Condition	cur_type == NULL	1564:7:50572:50587	1254235	0	True				
ANR	1254826	EqualityExpression	cur_type == NULL		1254235	0		==			
ANR	1254827	Identifier	cur_type		1254235	0					
ANR	1254828	Identifier	NULL		1254235	1					
ANR	1254829	CompoundStatement		78:25:2104:2104	1254235	1					
ANR	1254830	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: element '%s' already defined"" , key . c )"	1565:4:50596:50671	1254235	0	True				
ANR	1254831	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: element '%s' already defined"" , key . c )"		1254235	0					
ANR	1254832	Callee	soap_error1		1254235	0					
ANR	1254833	Identifier	soap_error1		1254235	0					
ANR	1254834	ArgumentList	E_ERROR		1254235	1					
ANR	1254835	Argument	E_ERROR		1254235	0					
ANR	1254836	Identifier	E_ERROR		1254235	0					
ANR	1254837	Argument	"""Parsing Schema: element '%s' already defined"""		1254235	1					
ANR	1254838	PrimaryExpression	"""Parsing Schema: element '%s' already defined"""		1254235	0					
ANR	1254839	Argument	key . c		1254235	2					
ANR	1254840	MemberAccess	key . c		1254235	0					
ANR	1254841	Identifier	key		1254235	0					
ANR	1254842	Identifier	c		1254235	1					
ANR	1254843	ElseStatement	else		1254235	0					
ANR	1254844	CompoundStatement		80:10:2197:2197	1254235	0					
ANR	1254845	ExpressionStatement	"zend_hash_next_index_insert ( addHash , & newType , sizeof ( sdlTypePtr ) , NULL )"	1567:4:50689:50761	1254235	0	True				
ANR	1254846	CallExpression	"zend_hash_next_index_insert ( addHash , & newType , sizeof ( sdlTypePtr ) , NULL )"		1254235	0					
ANR	1254847	Callee	zend_hash_next_index_insert		1254235	0					
ANR	1254848	Identifier	zend_hash_next_index_insert		1254235	0					
ANR	1254849	ArgumentList	addHash		1254235	1					
ANR	1254850	Argument	addHash		1254235	0					
ANR	1254851	Identifier	addHash		1254235	0					
ANR	1254852	Argument	& newType		1254235	1					
ANR	1254853	UnaryOperationExpression	& newType		1254235	0					
ANR	1254854	UnaryOperator	&		1254235	0					
ANR	1254855	Identifier	newType		1254235	1					
ANR	1254856	Argument	sizeof ( sdlTypePtr )		1254235	2					
ANR	1254857	SizeofExpression	sizeof ( sdlTypePtr )		1254235	0					
ANR	1254858	Sizeof	sizeof		1254235	0					
ANR	1254859	SizeofOperand	sdlTypePtr		1254235	1					
ANR	1254860	Argument	NULL		1254235	3					
ANR	1254861	Identifier	NULL		1254235	0					
ANR	1254862	ExpressionStatement	smart_str_free ( & key )	1570:2:50774:50794	1254235	10	True				
ANR	1254863	CallExpression	smart_str_free ( & key )		1254235	0					
ANR	1254864	Callee	smart_str_free		1254235	0					
ANR	1254865	Identifier	smart_str_free		1254235	0					
ANR	1254866	ArgumentList	& key		1254235	1					
ANR	1254867	Argument	& key		1254235	0					
ANR	1254868	UnaryOperationExpression	& key		1254235	0					
ANR	1254869	UnaryOperator	&		1254235	0					
ANR	1254870	Identifier	key		1254235	1					
ANR	1254871	IfStatement	if ( model != NULL )		1254235	11					
ANR	1254872	Condition	model != NULL	1572:6:50803:50815	1254235	0	True				
ANR	1254873	EqualityExpression	model != NULL		1254235	0		!=			
ANR	1254874	Identifier	model		1254235	0					
ANR	1254875	Identifier	NULL		1254235	1					
ANR	1254876	CompoundStatement		87:3:2337:2399	1254235	1					
ANR	1254877	IdentifierDeclStatement	sdlContentModelPtr newModel = emalloc ( sizeof ( sdlContentModel ) ) ;	1573:3:50823:50885	1254235	0	True				
ANR	1254878	IdentifierDecl	newModel = emalloc ( sizeof ( sdlContentModel ) )		1254235	0					
ANR	1254879	IdentifierDeclType	sdlContentModelPtr		1254235	0					
ANR	1254880	Identifier	newModel		1254235	1					
ANR	1254881	AssignmentExpression	newModel = emalloc ( sizeof ( sdlContentModel ) )		1254235	2		=			
ANR	1254882	Identifier	newModel		1254235	0					
ANR	1254883	CallExpression	emalloc ( sizeof ( sdlContentModel ) )		1254235	1					
ANR	1254884	Callee	emalloc		1254235	0					
ANR	1254885	Identifier	emalloc		1254235	0					
ANR	1254886	ArgumentList	sizeof ( sdlContentModel )		1254235	1					
ANR	1254887	Argument	sizeof ( sdlContentModel )		1254235	0					
ANR	1254888	SizeofExpression	sizeof ( sdlContentModel )		1254235	0					
ANR	1254889	Sizeof	sizeof		1254235	0					
ANR	1254890	SizeofOperand	sdlContentModel		1254235	1					
ANR	1254891	ExpressionStatement	newModel -> kind = XSD_CONTENT_ELEMENT	1575:3:50891:50927	1254235	1	True				
ANR	1254892	AssignmentExpression	newModel -> kind = XSD_CONTENT_ELEMENT		1254235	0		=			
ANR	1254893	PtrMemberAccess	newModel -> kind		1254235	0					
ANR	1254894	Identifier	newModel		1254235	0					
ANR	1254895	Identifier	kind		1254235	1					
ANR	1254896	Identifier	XSD_CONTENT_ELEMENT		1254235	1					
ANR	1254897	ExpressionStatement	newModel -> u . element = newType	1576:3:50932:50961	1254235	2	True				
ANR	1254898	AssignmentExpression	newModel -> u . element = newType		1254235	0		=			
ANR	1254899	MemberAccess	newModel -> u . element		1254235	0					
ANR	1254900	PtrMemberAccess	newModel -> u		1254235	0					
ANR	1254901	Identifier	newModel		1254235	0					
ANR	1254902	Identifier	u		1254235	1					
ANR	1254903	Identifier	element		1254235	1					
ANR	1254904	Identifier	newType		1254235	1					
ANR	1254905	ExpressionStatement	"schema_min_max ( element , newModel )"	1578:3:50967:51000	1254235	3	True				
ANR	1254906	CallExpression	"schema_min_max ( element , newModel )"		1254235	0					
ANR	1254907	Callee	schema_min_max		1254235	0					
ANR	1254908	Identifier	schema_min_max		1254235	0					
ANR	1254909	ArgumentList	element		1254235	1					
ANR	1254910	Argument	element		1254235	0					
ANR	1254911	Identifier	element		1254235	0					
ANR	1254912	Argument	newModel		1254235	1					
ANR	1254913	Identifier	newModel		1254235	0					
ANR	1254914	ExpressionStatement	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"	1581:3:51007:51097	1254235	4	True				
ANR	1254915	CallExpression	"zend_hash_next_index_insert ( model -> u . content , & newModel , sizeof ( sdlContentModelPtr ) , NULL )"		1254235	0					
ANR	1254916	Callee	zend_hash_next_index_insert		1254235	0					
ANR	1254917	Identifier	zend_hash_next_index_insert		1254235	0					
ANR	1254918	ArgumentList	model -> u . content		1254235	1					
ANR	1254919	Argument	model -> u . content		1254235	0					
ANR	1254920	MemberAccess	model -> u . content		1254235	0					
ANR	1254921	PtrMemberAccess	model -> u		1254235	0					
ANR	1254922	Identifier	model		1254235	0					
ANR	1254923	Identifier	u		1254235	1					
ANR	1254924	Identifier	content		1254235	1					
ANR	1254925	Argument	& newModel		1254235	1					
ANR	1254926	UnaryOperationExpression	& newModel		1254235	0					
ANR	1254927	UnaryOperator	&		1254235	0					
ANR	1254928	Identifier	newModel		1254235	1					
ANR	1254929	Argument	sizeof ( sdlContentModelPtr )		1254235	2					
ANR	1254930	SizeofExpression	sizeof ( sdlContentModelPtr )		1254235	0					
ANR	1254931	Sizeof	sizeof		1254235	0					
ANR	1254932	SizeofOperand	sdlContentModelPtr		1254235	1					
ANR	1254933	Argument	NULL		1254235	3					
ANR	1254934	Identifier	NULL		1254235	0					
ANR	1254935	ExpressionStatement	cur_type = newType	1583:2:51105:51123	1254235	12	True				
ANR	1254936	AssignmentExpression	cur_type = newType		1254235	0		=			
ANR	1254937	Identifier	cur_type		1254235	0					
ANR	1254938	Identifier	newType		1254235	1					
ANR	1254939	ElseStatement	else		1254235	0					
ANR	1254940	CompoundStatement		98:8:2647:2647	1254235	0					
ANR	1254941	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has no 'name' nor 'ref' attributes"" )"	1585:2:51137:51219	1254235	0	True				
ANR	1254942	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has no 'name' nor 'ref' attributes"" )"		1254235	0					
ANR	1254943	Callee	soap_error0		1254235	0					
ANR	1254944	Identifier	soap_error0		1254235	0					
ANR	1254945	ArgumentList	E_ERROR		1254235	1					
ANR	1254946	Argument	E_ERROR		1254235	0					
ANR	1254947	Identifier	E_ERROR		1254235	0					
ANR	1254948	Argument	"""Parsing Schema: element has no 'name' nor 'ref' attributes"""		1254235	1					
ANR	1254949	PrimaryExpression	"""Parsing Schema: element has no 'name' nor 'ref' attributes"""		1254235	0					
ANR	1254950	ExpressionStatement	attrs = element -> properties	1589:1:51260:51287	1254235	8	True				
ANR	1254951	AssignmentExpression	attrs = element -> properties		1254235	0		=			
ANR	1254952	Identifier	attrs		1254235	0					
ANR	1254953	PtrMemberAccess	element -> properties		1254235	1					
ANR	1254954	Identifier	element		1254235	0					
ANR	1254955	Identifier	properties		1254235	1					
ANR	1254956	ExpressionStatement	"attr = get_attribute ( attrs , ""nillable"" )"	1590:1:51290:51329	1254235	9	True				
ANR	1254957	AssignmentExpression	"attr = get_attribute ( attrs , ""nillable"" )"		1254235	0		=			
ANR	1254958	Identifier	attr		1254235	0					
ANR	1254959	CallExpression	"get_attribute ( attrs , ""nillable"" )"		1254235	1					
ANR	1254960	Callee	get_attribute		1254235	0					
ANR	1254961	Identifier	get_attribute		1254235	0					
ANR	1254962	ArgumentList	attrs		1254235	1					
ANR	1254963	Argument	attrs		1254235	0					
ANR	1254964	Identifier	attrs		1254235	0					
ANR	1254965	Argument	"""nillable"""		1254235	1					
ANR	1254966	PrimaryExpression	"""nillable"""		1254235	0					
ANR	1254967	IfStatement	if ( attr )		1254235	10					
ANR	1254968	Condition	attr	1591:5:51336:51339	1254235	0	True				
ANR	1254969	Identifier	attr		1254235	0					
ANR	1254970	CompoundStatement		105:11:2856:2856	1254235	1					
ANR	1254971	IfStatement	if ( ref != NULL )		1254235	0					
ANR	1254972	Condition	ref != NULL	1592:6:51350:51360	1254235	0	True				
ANR	1254973	EqualityExpression	ref != NULL		1254235	0		!=			
ANR	1254974	Identifier	ref		1254235	0					
ANR	1254975	Identifier	NULL		1254235	1					
ANR	1254976	CompoundStatement		106:19:2877:2877	1254235	1					
ANR	1254977	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'nillable' attributes"" )"	1593:3:51368:51456	1254235	0	True				
ANR	1254978	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'nillable' attributes"" )"		1254235	0					
ANR	1254979	Callee	soap_error0		1254235	0					
ANR	1254980	Identifier	soap_error0		1254235	0					
ANR	1254981	ArgumentList	E_ERROR		1254235	1					
ANR	1254982	Argument	E_ERROR		1254235	0					
ANR	1254983	Identifier	E_ERROR		1254235	0					
ANR	1254984	Argument	"""Parsing Schema: element has both 'ref' and 'nillable' attributes"""		1254235	1					
ANR	1254985	PrimaryExpression	"""Parsing Schema: element has both 'ref' and 'nillable' attributes"""		1254235	0					
ANR	1254986	IfStatement	"if ( ! stricmp ( ( char * ) attr -> children -> content , ""true"" ) || ! stricmp ( ( char * ) attr -> children -> content , ""1"" ) )"		1254235	1					
ANR	1254987	Condition	"! stricmp ( ( char * ) attr -> children -> content , ""true"" ) || ! stricmp ( ( char * ) attr -> children -> content , ""1"" )"	1595:6:51468:51567	1254235	0	True				
ANR	1254988	OrExpression	"! stricmp ( ( char * ) attr -> children -> content , ""true"" ) || ! stricmp ( ( char * ) attr -> children -> content , ""1"" )"		1254235	0		||			
ANR	1254989	UnaryOperationExpression	"! stricmp ( ( char * ) attr -> children -> content , ""true"" )"		1254235	0					
ANR	1254990	UnaryOperator	!		1254235	0					
ANR	1254991	CallExpression	"stricmp ( ( char * ) attr -> children -> content , ""true"" )"		1254235	1					
ANR	1254992	Callee	stricmp		1254235	0					
ANR	1254993	Identifier	stricmp		1254235	0					
ANR	1254994	ArgumentList	( char * ) attr -> children -> content		1254235	1					
ANR	1254995	Argument	( char * ) attr -> children -> content		1254235	0					
ANR	1254996	CastExpression	( char * ) attr -> children -> content		1254235	0					
ANR	1254997	CastTarget	char *		1254235	0					
ANR	1254998	PtrMemberAccess	attr -> children -> content		1254235	1					
ANR	1254999	PtrMemberAccess	attr -> children		1254235	0					
ANR	1255000	Identifier	attr		1254235	0					
ANR	1255001	Identifier	children		1254235	1					
ANR	1255002	Identifier	content		1254235	1					
ANR	1255003	Argument	"""true"""		1254235	1					
ANR	1255004	PrimaryExpression	"""true"""		1254235	0					
ANR	1255005	UnaryOperationExpression	"! stricmp ( ( char * ) attr -> children -> content , ""1"" )"		1254235	1					
ANR	1255006	UnaryOperator	!		1254235	0					
ANR	1255007	CallExpression	"stricmp ( ( char * ) attr -> children -> content , ""1"" )"		1254235	1					
ANR	1255008	Callee	stricmp		1254235	0					
ANR	1255009	Identifier	stricmp		1254235	0					
ANR	1255010	ArgumentList	( char * ) attr -> children -> content		1254235	1					
ANR	1255011	Argument	( char * ) attr -> children -> content		1254235	0					
ANR	1255012	CastExpression	( char * ) attr -> children -> content		1254235	0					
ANR	1255013	CastTarget	char *		1254235	0					
ANR	1255014	PtrMemberAccess	attr -> children -> content		1254235	1					
ANR	1255015	PtrMemberAccess	attr -> children		1254235	0					
ANR	1255016	Identifier	attr		1254235	0					
ANR	1255017	Identifier	children		1254235	1					
ANR	1255018	Identifier	content		1254235	1					
ANR	1255019	Argument	"""1"""		1254235	1					
ANR	1255020	PrimaryExpression	"""1"""		1254235	0					
ANR	1255021	CompoundStatement		110:50:3084:3084	1254235	1					
ANR	1255022	ExpressionStatement	cur_type -> nillable = TRUE	1597:3:51575:51600	1254235	0	True				
ANR	1255023	AssignmentExpression	cur_type -> nillable = TRUE		1254235	0		=			
ANR	1255024	PtrMemberAccess	cur_type -> nillable		1254235	0					
ANR	1255025	Identifier	cur_type		1254235	0					
ANR	1255026	Identifier	nillable		1254235	1					
ANR	1255027	Identifier	TRUE		1254235	1					
ANR	1255028	ElseStatement	else		1254235	0					
ANR	1255029	CompoundStatement		112:9:3125:3125	1254235	0					
ANR	1255030	ExpressionStatement	cur_type -> nillable = FALSE	1599:3:51616:51642	1254235	0	True				
ANR	1255031	AssignmentExpression	cur_type -> nillable = FALSE		1254235	0		=			
ANR	1255032	PtrMemberAccess	cur_type -> nillable		1254235	0					
ANR	1255033	Identifier	cur_type		1254235	0					
ANR	1255034	Identifier	nillable		1254235	1					
ANR	1255035	Identifier	FALSE		1254235	1					
ANR	1255036	ElseStatement	else		1254235	0					
ANR	1255037	CompoundStatement		115:8:3170:3170	1254235	0					
ANR	1255038	ExpressionStatement	cur_type -> nillable = FALSE	1602:2:51660:51686	1254235	0	True				
ANR	1255039	AssignmentExpression	cur_type -> nillable = FALSE		1254235	0		=			
ANR	1255040	PtrMemberAccess	cur_type -> nillable		1254235	0					
ANR	1255041	Identifier	cur_type		1254235	0					
ANR	1255042	Identifier	nillable		1254235	1					
ANR	1255043	Identifier	FALSE		1254235	1					
ANR	1255044	ExpressionStatement	"attr = get_attribute ( attrs , ""fixed"" )"	1605:1:51693:51729	1254235	11	True				
ANR	1255045	AssignmentExpression	"attr = get_attribute ( attrs , ""fixed"" )"		1254235	0		=			
ANR	1255046	Identifier	attr		1254235	0					
ANR	1255047	CallExpression	"get_attribute ( attrs , ""fixed"" )"		1254235	1					
ANR	1255048	Callee	get_attribute		1254235	0					
ANR	1255049	Identifier	get_attribute		1254235	0					
ANR	1255050	ArgumentList	attrs		1254235	1					
ANR	1255051	Argument	attrs		1254235	0					
ANR	1255052	Identifier	attrs		1254235	0					
ANR	1255053	Argument	"""fixed"""		1254235	1					
ANR	1255054	PrimaryExpression	"""fixed"""		1254235	0					
ANR	1255055	IfStatement	if ( attr )		1254235	12					
ANR	1255056	Condition	attr	1606:5:51736:51739	1254235	0	True				
ANR	1255057	Identifier	attr		1254235	0					
ANR	1255058	CompoundStatement		120:11:3256:3256	1254235	1					
ANR	1255059	IfStatement	if ( ref != NULL )		1254235	0					
ANR	1255060	Condition	ref != NULL	1607:6:51750:51760	1254235	0	True				
ANR	1255061	EqualityExpression	ref != NULL		1254235	0		!=			
ANR	1255062	Identifier	ref		1254235	0					
ANR	1255063	Identifier	NULL		1254235	1					
ANR	1255064	CompoundStatement		121:19:3277:3277	1254235	1					
ANR	1255065	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'fixed' attributes"" )"	1608:3:51768:51853	1254235	0	True				
ANR	1255066	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'fixed' attributes"" )"		1254235	0					
ANR	1255067	Callee	soap_error0		1254235	0					
ANR	1255068	Identifier	soap_error0		1254235	0					
ANR	1255069	ArgumentList	E_ERROR		1254235	1					
ANR	1255070	Argument	E_ERROR		1254235	0					
ANR	1255071	Identifier	E_ERROR		1254235	0					
ANR	1255072	Argument	"""Parsing Schema: element has both 'ref' and 'fixed' attributes"""		1254235	1					
ANR	1255073	PrimaryExpression	"""Parsing Schema: element has both 'ref' and 'fixed' attributes"""		1254235	0					
ANR	1255074	ExpressionStatement	cur_type -> fixed = estrdup ( ( char * ) attr -> children -> content )	1610:2:51861:51918	1254235	1	True				
ANR	1255075	AssignmentExpression	cur_type -> fixed = estrdup ( ( char * ) attr -> children -> content )		1254235	0		=			
ANR	1255076	PtrMemberAccess	cur_type -> fixed		1254235	0					
ANR	1255077	Identifier	cur_type		1254235	0					
ANR	1255078	Identifier	fixed		1254235	1					
ANR	1255079	CallExpression	estrdup ( ( char * ) attr -> children -> content )		1254235	1					
ANR	1255080	Callee	estrdup		1254235	0					
ANR	1255081	Identifier	estrdup		1254235	0					
ANR	1255082	ArgumentList	( char * ) attr -> children -> content		1254235	1					
ANR	1255083	Argument	( char * ) attr -> children -> content		1254235	0					
ANR	1255084	CastExpression	( char * ) attr -> children -> content		1254235	0					
ANR	1255085	CastTarget	char *		1254235	0					
ANR	1255086	PtrMemberAccess	attr -> children -> content		1254235	1					
ANR	1255087	PtrMemberAccess	attr -> children		1254235	0					
ANR	1255088	Identifier	attr		1254235	0					
ANR	1255089	Identifier	children		1254235	1					
ANR	1255090	Identifier	content		1254235	1					
ANR	1255091	ExpressionStatement	"attr = get_attribute ( attrs , ""default"" )"	1613:1:51925:51963	1254235	13	True				
ANR	1255092	AssignmentExpression	"attr = get_attribute ( attrs , ""default"" )"		1254235	0		=			
ANR	1255093	Identifier	attr		1254235	0					
ANR	1255094	CallExpression	"get_attribute ( attrs , ""default"" )"		1254235	1					
ANR	1255095	Callee	get_attribute		1254235	0					
ANR	1255096	Identifier	get_attribute		1254235	0					
ANR	1255097	ArgumentList	attrs		1254235	1					
ANR	1255098	Argument	attrs		1254235	0					
ANR	1255099	Identifier	attrs		1254235	0					
ANR	1255100	Argument	"""default"""		1254235	1					
ANR	1255101	PrimaryExpression	"""default"""		1254235	0					
ANR	1255102	IfStatement	if ( attr )		1254235	14					
ANR	1255103	Condition	attr	1614:5:51970:51973	1254235	0	True				
ANR	1255104	Identifier	attr		1254235	0					
ANR	1255105	CompoundStatement		128:11:3490:3490	1254235	1					
ANR	1255106	IfStatement	if ( ref != NULL )		1254235	0					
ANR	1255107	Condition	ref != NULL	1615:6:51984:51994	1254235	0	True				
ANR	1255108	EqualityExpression	ref != NULL		1254235	0		!=			
ANR	1255109	Identifier	ref		1254235	0					
ANR	1255110	Identifier	NULL		1254235	1					
ANR	1255111	CompoundStatement		129:19:3511:3511	1254235	1					
ANR	1255112	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'fixed' attributes"" )"	1616:3:52002:52087	1254235	0	True				
ANR	1255113	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'fixed' attributes"" )"		1254235	0					
ANR	1255114	Callee	soap_error0		1254235	0					
ANR	1255115	Identifier	soap_error0		1254235	0					
ANR	1255116	ArgumentList	E_ERROR		1254235	1					
ANR	1255117	Argument	E_ERROR		1254235	0					
ANR	1255118	Identifier	E_ERROR		1254235	0					
ANR	1255119	Argument	"""Parsing Schema: element has both 'ref' and 'fixed' attributes"""		1254235	1					
ANR	1255120	PrimaryExpression	"""Parsing Schema: element has both 'ref' and 'fixed' attributes"""		1254235	0					
ANR	1255121	ElseStatement	else		1254235	0					
ANR	1255122	IfStatement	if ( ref != NULL )		1254235	0					
ANR	1255123	Condition	ref != NULL	1617:13:52102:52112	1254235	0	True				
ANR	1255124	EqualityExpression	ref != NULL		1254235	0		!=			
ANR	1255125	Identifier	ref		1254235	0					
ANR	1255126	Identifier	NULL		1254235	1					
ANR	1255127	CompoundStatement		131:26:3629:3629	1254235	1					
ANR	1255128	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'default' and 'fixed' attributes"" )"	1618:3:52120:52209	1254235	0	True				
ANR	1255129	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'default' and 'fixed' attributes"" )"		1254235	0					
ANR	1255130	Callee	soap_error0		1254235	0					
ANR	1255131	Identifier	soap_error0		1254235	0					
ANR	1255132	ArgumentList	E_ERROR		1254235	1					
ANR	1255133	Argument	E_ERROR		1254235	0					
ANR	1255134	Identifier	E_ERROR		1254235	0					
ANR	1255135	Argument	"""Parsing Schema: element has both 'default' and 'fixed' attributes"""		1254235	1					
ANR	1255136	PrimaryExpression	"""Parsing Schema: element has both 'default' and 'fixed' attributes"""		1254235	0					
ANR	1255137	ExpressionStatement	cur_type -> def = estrdup ( ( char * ) attr -> children -> content )	1620:2:52217:52272	1254235	1	True				
ANR	1255138	AssignmentExpression	cur_type -> def = estrdup ( ( char * ) attr -> children -> content )		1254235	0		=			
ANR	1255139	PtrMemberAccess	cur_type -> def		1254235	0					
ANR	1255140	Identifier	cur_type		1254235	0					
ANR	1255141	Identifier	def		1254235	1					
ANR	1255142	CallExpression	estrdup ( ( char * ) attr -> children -> content )		1254235	1					
ANR	1255143	Callee	estrdup		1254235	0					
ANR	1255144	Identifier	estrdup		1254235	0					
ANR	1255145	ArgumentList	( char * ) attr -> children -> content		1254235	1					
ANR	1255146	Argument	( char * ) attr -> children -> content		1254235	0					
ANR	1255147	CastExpression	( char * ) attr -> children -> content		1254235	0					
ANR	1255148	CastTarget	char *		1254235	0					
ANR	1255149	PtrMemberAccess	attr -> children -> content		1254235	1					
ANR	1255150	PtrMemberAccess	attr -> children		1254235	0					
ANR	1255151	Identifier	attr		1254235	0					
ANR	1255152	Identifier	children		1254235	1					
ANR	1255153	Identifier	content		1254235	1					
ANR	1255154	ExpressionStatement	"attr = get_attribute ( attrs , ""form"" )"	1624:1:52291:52326	1254235	15	True				
ANR	1255155	AssignmentExpression	"attr = get_attribute ( attrs , ""form"" )"		1254235	0		=			
ANR	1255156	Identifier	attr		1254235	0					
ANR	1255157	CallExpression	"get_attribute ( attrs , ""form"" )"		1254235	1					
ANR	1255158	Callee	get_attribute		1254235	0					
ANR	1255159	Identifier	get_attribute		1254235	0					
ANR	1255160	ArgumentList	attrs		1254235	1					
ANR	1255161	Argument	attrs		1254235	0					
ANR	1255162	Identifier	attrs		1254235	0					
ANR	1255163	Argument	"""form"""		1254235	1					
ANR	1255164	PrimaryExpression	"""form"""		1254235	0					
ANR	1255165	IfStatement	if ( attr )		1254235	16					
ANR	1255166	Condition	attr	1625:5:52333:52336	1254235	0	True				
ANR	1255167	Identifier	attr		1254235	0					
ANR	1255168	CompoundStatement		139:11:3853:3853	1254235	1					
ANR	1255169	IfStatement	"if ( strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) == 0 )"		1254235	0					
ANR	1255170	Condition	"strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) == 0"	1626:6:52347:52424	1254235	0	True				
ANR	1255171	EqualityExpression	"strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) == 0"		1254235	0		==			
ANR	1255172	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"		1254235	0					
ANR	1255173	Callee	strncmp		1254235	0					
ANR	1255174	Identifier	strncmp		1254235	0					
ANR	1255175	ArgumentList	( char * ) attr -> children -> content		1254235	1					
ANR	1255176	Argument	( char * ) attr -> children -> content		1254235	0					
ANR	1255177	CastExpression	( char * ) attr -> children -> content		1254235	0					
ANR	1255178	CastTarget	char *		1254235	0					
ANR	1255179	PtrMemberAccess	attr -> children -> content		1254235	1					
ANR	1255180	PtrMemberAccess	attr -> children		1254235	0					
ANR	1255181	Identifier	attr		1254235	0					
ANR	1255182	Identifier	children		1254235	1					
ANR	1255183	Identifier	content		1254235	1					
ANR	1255184	Argument	"""qualified"""		1254235	1					
ANR	1255185	PrimaryExpression	"""qualified"""		1254235	0					
ANR	1255186	Argument	"sizeof ( ""qualified"" )"		1254235	2					
ANR	1255187	SizeofExpression	"sizeof ( ""qualified"" )"		1254235	0					
ANR	1255188	Sizeof	sizeof		1254235	0					
ANR	1255189	PrimaryExpression	"""qualified"""		1254235	1					
ANR	1255190	PrimaryExpression	0		1254235	1					
ANR	1255191	CompoundStatement		140:86:3941:3941	1254235	1					
ANR	1255192	ExpressionStatement	cur_type -> form = XSD_FORM_QUALIFIED	1627:4:52433:52468	1254235	0	True				
ANR	1255193	AssignmentExpression	cur_type -> form = XSD_FORM_QUALIFIED		1254235	0		=			
ANR	1255194	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255195	Identifier	cur_type		1254235	0					
ANR	1255196	Identifier	form		1254235	1					
ANR	1255197	Identifier	XSD_FORM_QUALIFIED		1254235	1					
ANR	1255198	ElseStatement	else		1254235	0					
ANR	1255199	IfStatement	"if ( strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) ) == 0 )"		1254235	0					
ANR	1255200	Condition	"strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) ) == 0"	1628:13:52483:52564	1254235	0	True				
ANR	1255201	EqualityExpression	"strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) ) == 0"		1254235	0		==			
ANR	1255202	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) )"		1254235	0					
ANR	1255203	Callee	strncmp		1254235	0					
ANR	1255204	Identifier	strncmp		1254235	0					
ANR	1255205	ArgumentList	( char * ) attr -> children -> content		1254235	1					
ANR	1255206	Argument	( char * ) attr -> children -> content		1254235	0					
ANR	1255207	CastExpression	( char * ) attr -> children -> content		1254235	0					
ANR	1255208	CastTarget	char *		1254235	0					
ANR	1255209	PtrMemberAccess	attr -> children -> content		1254235	1					
ANR	1255210	PtrMemberAccess	attr -> children		1254235	0					
ANR	1255211	Identifier	attr		1254235	0					
ANR	1255212	Identifier	children		1254235	1					
ANR	1255213	Identifier	content		1254235	1					
ANR	1255214	Argument	"""unqualified"""		1254235	1					
ANR	1255215	PrimaryExpression	"""unqualified"""		1254235	0					
ANR	1255216	Argument	"sizeof ( ""unqualified"" )"		1254235	2					
ANR	1255217	SizeofExpression	"sizeof ( ""unqualified"" )"		1254235	0					
ANR	1255218	Sizeof	sizeof		1254235	0					
ANR	1255219	PrimaryExpression	"""unqualified"""		1254235	1					
ANR	1255220	PrimaryExpression	0		1254235	1					
ANR	1255221	CompoundStatement		142:97:4081:4081	1254235	1					
ANR	1255222	ExpressionStatement	cur_type -> form = XSD_FORM_UNQUALIFIED	1629:4:52573:52610	1254235	0	True				
ANR	1255223	AssignmentExpression	cur_type -> form = XSD_FORM_UNQUALIFIED		1254235	0		=			
ANR	1255224	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255225	Identifier	cur_type		1254235	0					
ANR	1255226	Identifier	form		1254235	1					
ANR	1255227	Identifier	XSD_FORM_UNQUALIFIED		1254235	1					
ANR	1255228	ElseStatement	else		1254235	0					
ANR	1255229	CompoundStatement		144:9:4135:4135	1254235	0					
ANR	1255230	ExpressionStatement	cur_type -> form = XSD_FORM_DEFAULT	1631:4:52627:52660	1254235	0	True				
ANR	1255231	AssignmentExpression	cur_type -> form = XSD_FORM_DEFAULT		1254235	0		=			
ANR	1255232	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255233	Identifier	cur_type		1254235	0					
ANR	1255234	Identifier	form		1254235	1					
ANR	1255235	Identifier	XSD_FORM_DEFAULT		1254235	1					
ANR	1255236	ElseStatement	else		1254235	0					
ANR	1255237	CompoundStatement		147:8:4188:4188	1254235	0					
ANR	1255238	ExpressionStatement	cur_type -> form = XSD_FORM_DEFAULT	1634:3:52679:52712	1254235	0	True				
ANR	1255239	AssignmentExpression	cur_type -> form = XSD_FORM_DEFAULT		1254235	0		=			
ANR	1255240	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255241	Identifier	cur_type		1254235	0					
ANR	1255242	Identifier	form		1254235	1					
ANR	1255243	Identifier	XSD_FORM_DEFAULT		1254235	1					
ANR	1255244	IfStatement	if ( cur_type -> form == XSD_FORM_DEFAULT )		1254235	17					
ANR	1255245	Condition	cur_type -> form == XSD_FORM_DEFAULT	1636:5:52722:52755	1254235	0	True				
ANR	1255246	EqualityExpression	cur_type -> form == XSD_FORM_DEFAULT		1254235	0		==			
ANR	1255247	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255248	Identifier	cur_type		1254235	0					
ANR	1255249	Identifier	form		1254235	1					
ANR	1255250	Identifier	XSD_FORM_DEFAULT		1254235	1					
ANR	1255251	CompoundStatement		151:3:4277:4312	1254235	1					
ANR	1255252	IdentifierDeclStatement	xmlNodePtr parent = element -> parent ;	1637:3:52763:52798	1254235	0	True				
ANR	1255253	IdentifierDecl	parent = element -> parent		1254235	0					
ANR	1255254	IdentifierDeclType	xmlNodePtr		1254235	0					
ANR	1255255	Identifier	parent		1254235	1					
ANR	1255256	AssignmentExpression	parent = element -> parent		1254235	2		=			
ANR	1255257	Identifier	parent		1254235	0					
ANR	1255258	PtrMemberAccess	element -> parent		1254235	1					
ANR	1255259	Identifier	element		1254235	0					
ANR	1255260	Identifier	parent		1254235	1					
ANR	1255261	WhileStatement	while ( parent )		1254235	1					
ANR	1255262	Condition	parent	1638:10:52810:52815	1254235	0	True				
ANR	1255263	Identifier	parent		1254235	0					
ANR	1255264	CompoundStatement		152:18:4332:4332	1254235	1					
ANR	1255265	IfStatement	"if ( node_is_equal_ex ( parent , ""schema"" , SCHEMA_NAMESPACE ) )"		1254235	0					
ANR	1255266	Condition	"node_is_equal_ex ( parent , ""schema"" , SCHEMA_NAMESPACE )"	1639:7:52827:52878	1254235	0	True				
ANR	1255267	CallExpression	"node_is_equal_ex ( parent , ""schema"" , SCHEMA_NAMESPACE )"		1254235	0					
ANR	1255268	Callee	node_is_equal_ex		1254235	0					
ANR	1255269	Identifier	node_is_equal_ex		1254235	0					
ANR	1255270	ArgumentList	parent		1254235	1					
ANR	1255271	Argument	parent		1254235	0					
ANR	1255272	Identifier	parent		1254235	0					
ANR	1255273	Argument	"""schema"""		1254235	1					
ANR	1255274	PrimaryExpression	"""schema"""		1254235	0					
ANR	1255275	Argument	SCHEMA_NAMESPACE		1254235	2					
ANR	1255276	Identifier	SCHEMA_NAMESPACE		1254235	0					
ANR	1255277	CompoundStatement		154:4:4401:4415	1254235	1					
ANR	1255278	IdentifierDeclStatement	xmlAttrPtr def ;	1640:4:52887:52901	1254235	0	True				
ANR	1255279	IdentifierDecl	def		1254235	0					
ANR	1255280	IdentifierDeclType	xmlAttrPtr		1254235	0					
ANR	1255281	Identifier	def		1254235	1					
ANR	1255282	ExpressionStatement	"def = get_attribute ( parent -> properties , ""elementFormDefault"" )"	1641:4:52907:52968	1254235	1	True				
ANR	1255283	AssignmentExpression	"def = get_attribute ( parent -> properties , ""elementFormDefault"" )"		1254235	0		=			
ANR	1255284	Identifier	def		1254235	0					
ANR	1255285	CallExpression	"get_attribute ( parent -> properties , ""elementFormDefault"" )"		1254235	1					
ANR	1255286	Callee	get_attribute		1254235	0					
ANR	1255287	Identifier	get_attribute		1254235	0					
ANR	1255288	ArgumentList	parent -> properties		1254235	1					
ANR	1255289	Argument	parent -> properties		1254235	0					
ANR	1255290	PtrMemberAccess	parent -> properties		1254235	0					
ANR	1255291	Identifier	parent		1254235	0					
ANR	1255292	Identifier	properties		1254235	1					
ANR	1255293	Argument	"""elementFormDefault"""		1254235	1					
ANR	1255294	PrimaryExpression	"""elementFormDefault"""		1254235	0					
ANR	1255295	IfStatement	"if ( def == NULL || strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) )"		1254235	2					
ANR	1255296	Condition	"def == NULL || strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"	1642:7:52977:53063	1254235	0	True				
ANR	1255297	OrExpression	"def == NULL || strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"		1254235	0		||			
ANR	1255298	EqualityExpression	def == NULL		1254235	0		==			
ANR	1255299	Identifier	def		1254235	0					
ANR	1255300	Identifier	NULL		1254235	1					
ANR	1255301	CallExpression	"strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"		1254235	1					
ANR	1255302	Callee	strncmp		1254235	0					
ANR	1255303	Identifier	strncmp		1254235	0					
ANR	1255304	ArgumentList	( char * ) def -> children -> content		1254235	1					
ANR	1255305	Argument	( char * ) def -> children -> content		1254235	0					
ANR	1255306	CastExpression	( char * ) def -> children -> content		1254235	0					
ANR	1255307	CastTarget	char *		1254235	0					
ANR	1255308	PtrMemberAccess	def -> children -> content		1254235	1					
ANR	1255309	PtrMemberAccess	def -> children		1254235	0					
ANR	1255310	Identifier	def		1254235	0					
ANR	1255311	Identifier	children		1254235	1					
ANR	1255312	Identifier	content		1254235	1					
ANR	1255313	Argument	"""qualified"""		1254235	1					
ANR	1255314	PrimaryExpression	"""qualified"""		1254235	0					
ANR	1255315	Argument	"sizeof ( ""qualified"" )"		1254235	2					
ANR	1255316	SizeofExpression	"sizeof ( ""qualified"" )"		1254235	0					
ANR	1255317	Sizeof	sizeof		1254235	0					
ANR	1255318	PrimaryExpression	"""qualified"""		1254235	1					
ANR	1255319	CompoundStatement		156:96:4580:4580	1254235	1					
ANR	1255320	ExpressionStatement	cur_type -> form = XSD_FORM_UNQUALIFIED	1643:5:53073:53110	1254235	0	True				
ANR	1255321	AssignmentExpression	cur_type -> form = XSD_FORM_UNQUALIFIED		1254235	0		=			
ANR	1255322	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255323	Identifier	cur_type		1254235	0					
ANR	1255324	Identifier	form		1254235	1					
ANR	1255325	Identifier	XSD_FORM_UNQUALIFIED		1254235	1					
ANR	1255326	ElseStatement	else		1254235	0					
ANR	1255327	CompoundStatement		158:11:4637:4637	1254235	0					
ANR	1255328	ExpressionStatement	cur_type -> form = XSD_FORM_QUALIFIED	1645:5:53130:53165	1254235	0	True				
ANR	1255329	AssignmentExpression	cur_type -> form = XSD_FORM_QUALIFIED		1254235	0		=			
ANR	1255330	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255331	Identifier	cur_type		1254235	0					
ANR	1255332	Identifier	form		1254235	1					
ANR	1255333	Identifier	XSD_FORM_QUALIFIED		1254235	1					
ANR	1255334	BreakStatement	break ;	1647:4:53177:53182	1254235	3	True				
ANR	1255335	ExpressionStatement	parent = parent -> parent	1649:3:53192:53215	1254235	1	True				
ANR	1255336	AssignmentExpression	parent = parent -> parent		1254235	0		=			
ANR	1255337	Identifier	parent		1254235	0					
ANR	1255338	PtrMemberAccess	parent -> parent		1254235	1					
ANR	1255339	Identifier	parent		1254235	0					
ANR	1255340	Identifier	parent		1254235	1					
ANR	1255341	IfStatement	if ( parent == NULL )		1254235	2					
ANR	1255342	Condition	parent == NULL	1651:6:53228:53241	1254235	0	True				
ANR	1255343	EqualityExpression	parent == NULL		1254235	0		==			
ANR	1255344	Identifier	parent		1254235	0					
ANR	1255345	Identifier	NULL		1254235	1					
ANR	1255346	CompoundStatement		165:22:4758:4758	1254235	1					
ANR	1255347	ExpressionStatement	cur_type -> form = XSD_FORM_UNQUALIFIED	1652:3:53249:53286	1254235	0	True				
ANR	1255348	AssignmentExpression	cur_type -> form = XSD_FORM_UNQUALIFIED		1254235	0		=			
ANR	1255349	PtrMemberAccess	cur_type -> form		1254235	0					
ANR	1255350	Identifier	cur_type		1254235	0					
ANR	1255351	Identifier	form		1254235	1					
ANR	1255352	Identifier	XSD_FORM_UNQUALIFIED		1254235	1					
ANR	1255353	ExpressionStatement	"type = get_attribute ( attrs , ""type"" )"	1657:1:53318:53353	1254235	18	True				
ANR	1255354	AssignmentExpression	"type = get_attribute ( attrs , ""type"" )"		1254235	0		=			
ANR	1255355	Identifier	type		1254235	0					
ANR	1255356	CallExpression	"get_attribute ( attrs , ""type"" )"		1254235	1					
ANR	1255357	Callee	get_attribute		1254235	0					
ANR	1255358	Identifier	get_attribute		1254235	0					
ANR	1255359	ArgumentList	attrs		1254235	1					
ANR	1255360	Argument	attrs		1254235	0					
ANR	1255361	Identifier	attrs		1254235	0					
ANR	1255362	Argument	"""type"""		1254235	1					
ANR	1255363	PrimaryExpression	"""type"""		1254235	0					
ANR	1255364	IfStatement	if ( type )		1254235	19					
ANR	1255365	Condition	type	1658:5:53360:53363	1254235	0	True				
ANR	1255366	Identifier	type		1254235	0					
ANR	1255367	CompoundStatement		174:2:4909:4923	1254235	1					
ANR	1255368	IdentifierDeclStatement	"char * cptype , * str_ns ;"	1659:2:53370:53391	1254235	0	True				
ANR	1255369	IdentifierDecl	* cptype		1254235	0					
ANR	1255370	IdentifierDeclType	char *		1254235	0					
ANR	1255371	Identifier	cptype		1254235	1					
ANR	1255372	IdentifierDecl	* str_ns		1254235	1					
ANR	1255373	IdentifierDeclType	char *		1254235	0					
ANR	1255374	Identifier	str_ns		1254235	1					
ANR	1255375	IdentifierDeclStatement	xmlNsPtr nsptr ;	1660:2:53395:53409	1254235	1	True				
ANR	1255376	IdentifierDecl	nsptr		1254235	0					
ANR	1255377	IdentifierDeclType	xmlNsPtr		1254235	0					
ANR	1255378	Identifier	nsptr		1254235	1					
ANR	1255379	IfStatement	if ( ref != NULL )		1254235	2					
ANR	1255380	Condition	ref != NULL	1662:6:53418:53428	1254235	0	True				
ANR	1255381	EqualityExpression	ref != NULL		1254235	0		!=			
ANR	1255382	Identifier	ref		1254235	0					
ANR	1255383	Identifier	NULL		1254235	1					
ANR	1255384	CompoundStatement		176:19:4945:4945	1254235	1					
ANR	1255385	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'type' attributes"" )"	1663:3:53436:53520	1254235	0	True				
ANR	1255386	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' and 'type' attributes"" )"		1254235	0					
ANR	1255387	Callee	soap_error0		1254235	0					
ANR	1255388	Identifier	soap_error0		1254235	0					
ANR	1255389	ArgumentList	E_ERROR		1254235	1					
ANR	1255390	Argument	E_ERROR		1254235	0					
ANR	1255391	Identifier	E_ERROR		1254235	0					
ANR	1255392	Argument	"""Parsing Schema: element has both 'ref' and 'type' attributes"""		1254235	1					
ANR	1255393	PrimaryExpression	"""Parsing Schema: element has both 'ref' and 'type' attributes"""		1254235	0					
ANR	1255394	ExpressionStatement	"parse_namespace ( type -> children -> content , & cptype , & str_ns )"	1665:2:53528:53586	1254235	3	True				
ANR	1255395	CallExpression	"parse_namespace ( type -> children -> content , & cptype , & str_ns )"		1254235	0					
ANR	1255396	Callee	parse_namespace		1254235	0					
ANR	1255397	Identifier	parse_namespace		1254235	0					
ANR	1255398	ArgumentList	type -> children -> content		1254235	1					
ANR	1255399	Argument	type -> children -> content		1254235	0					
ANR	1255400	PtrMemberAccess	type -> children -> content		1254235	0					
ANR	1255401	PtrMemberAccess	type -> children		1254235	0					
ANR	1255402	Identifier	type		1254235	0					
ANR	1255403	Identifier	children		1254235	1					
ANR	1255404	Identifier	content		1254235	1					
ANR	1255405	Argument	& cptype		1254235	1					
ANR	1255406	UnaryOperationExpression	& cptype		1254235	0					
ANR	1255407	UnaryOperator	&		1254235	0					
ANR	1255408	Identifier	cptype		1254235	1					
ANR	1255409	Argument	& str_ns		1254235	2					
ANR	1255410	UnaryOperationExpression	& str_ns		1254235	0					
ANR	1255411	UnaryOperator	&		1254235	0					
ANR	1255412	Identifier	str_ns		1254235	1					
ANR	1255413	ExpressionStatement	"nsptr = xmlSearchNs ( element -> doc , element , BAD_CAST ( str_ns ) )"	1666:2:53590:53650	1254235	4	True				
ANR	1255414	AssignmentExpression	"nsptr = xmlSearchNs ( element -> doc , element , BAD_CAST ( str_ns ) )"		1254235	0		=			
ANR	1255415	Identifier	nsptr		1254235	0					
ANR	1255416	CallExpression	"xmlSearchNs ( element -> doc , element , BAD_CAST ( str_ns ) )"		1254235	1					
ANR	1255417	Callee	xmlSearchNs		1254235	0					
ANR	1255418	Identifier	xmlSearchNs		1254235	0					
ANR	1255419	ArgumentList	element -> doc		1254235	1					
ANR	1255420	Argument	element -> doc		1254235	0					
ANR	1255421	PtrMemberAccess	element -> doc		1254235	0					
ANR	1255422	Identifier	element		1254235	0					
ANR	1255423	Identifier	doc		1254235	1					
ANR	1255424	Argument	element		1254235	1					
ANR	1255425	Identifier	element		1254235	0					
ANR	1255426	Argument	BAD_CAST ( str_ns )		1254235	2					
ANR	1255427	CallExpression	BAD_CAST ( str_ns )		1254235	0					
ANR	1255428	Callee	BAD_CAST		1254235	0					
ANR	1255429	Identifier	BAD_CAST		1254235	0					
ANR	1255430	ArgumentList	str_ns		1254235	1					
ANR	1255431	Argument	str_ns		1254235	0					
ANR	1255432	Identifier	str_ns		1254235	0					
ANR	1255433	IfStatement	if ( nsptr != NULL )		1254235	5					
ANR	1255434	Condition	nsptr != NULL	1667:6:53658:53670	1254235	0	True				
ANR	1255435	EqualityExpression	nsptr != NULL		1254235	0		!=			
ANR	1255436	Identifier	nsptr		1254235	0					
ANR	1255437	Identifier	NULL		1254235	1					
ANR	1255438	CompoundStatement		181:21:5187:5187	1254235	1					
ANR	1255439	ExpressionStatement	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( cptype ) )"	1668:3:53678:53761	1254235	0	True				
ANR	1255440	AssignmentExpression	"cur_type -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( cptype ) )"		1254235	0		=			
ANR	1255441	PtrMemberAccess	cur_type -> encode		1254235	0					
ANR	1255442	Identifier	cur_type		1254235	0					
ANR	1255443	Identifier	encode		1254235	1					
ANR	1255444	CallExpression	"get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( cptype ) )"		1254235	1					
ANR	1255445	Callee	get_create_encoder		1254235	0					
ANR	1255446	Identifier	get_create_encoder		1254235	0					
ANR	1255447	ArgumentList	sdl		1254235	1					
ANR	1255448	Argument	sdl		1254235	0					
ANR	1255449	Identifier	sdl		1254235	0					
ANR	1255450	Argument	cur_type		1254235	1					
ANR	1255451	Identifier	cur_type		1254235	0					
ANR	1255452	Argument	nsptr -> href		1254235	2					
ANR	1255453	PtrMemberAccess	nsptr -> href		1254235	0					
ANR	1255454	Identifier	nsptr		1254235	0					
ANR	1255455	Identifier	href		1254235	1					
ANR	1255456	Argument	BAD_CAST ( cptype )		1254235	3					
ANR	1255457	CallExpression	BAD_CAST ( cptype )		1254235	0					
ANR	1255458	Callee	BAD_CAST		1254235	0					
ANR	1255459	Identifier	BAD_CAST		1254235	0					
ANR	1255460	ArgumentList	cptype		1254235	1					
ANR	1255461	Argument	cptype		1254235	0					
ANR	1255462	Identifier	cptype		1254235	0					
ANR	1255463	IfStatement	if ( str_ns )		1254235	6					
ANR	1255464	Condition	str_ns	1670:6:53773:53778	1254235	0	True				
ANR	1255465	Identifier	str_ns		1254235	0					
ANR	1255466	CompoundStatement		184:14:5295:5295	1254235	1					
ANR	1255467	ExpressionStatement	efree ( str_ns )	1670:15:53782:53795	1254235	0	True				
ANR	1255468	CallExpression	efree ( str_ns )		1254235	0					
ANR	1255469	Callee	efree		1254235	0					
ANR	1255470	Identifier	efree		1254235	0					
ANR	1255471	ArgumentList	str_ns		1254235	1					
ANR	1255472	Argument	str_ns		1254235	0					
ANR	1255473	Identifier	str_ns		1254235	0					
ANR	1255474	IfStatement	if ( cptype )		1254235	7					
ANR	1255475	Condition	cptype	1671:6:53804:53809	1254235	0	True				
ANR	1255476	Identifier	cptype		1254235	0					
ANR	1255477	CompoundStatement		185:14:5326:5326	1254235	1					
ANR	1255478	ExpressionStatement	efree ( cptype )	1671:15:53813:53826	1254235	0	True				
ANR	1255479	CallExpression	efree ( cptype )		1254235	0					
ANR	1255480	Callee	efree		1254235	0					
ANR	1255481	Identifier	efree		1254235	0					
ANR	1255482	ArgumentList	cptype		1254235	1					
ANR	1255483	Argument	cptype		1254235	0					
ANR	1255484	Identifier	cptype		1254235	0					
ANR	1255485	ExpressionStatement	trav = element -> children	1674:1:53834:53858	1254235	20	True				
ANR	1255486	AssignmentExpression	trav = element -> children		1254235	0		=			
ANR	1255487	Identifier	trav		1254235	0					
ANR	1255488	PtrMemberAccess	element -> children		1254235	1					
ANR	1255489	Identifier	element		1254235	0					
ANR	1255490	Identifier	children		1254235	1					
ANR	1255491	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1254235	21					
ANR	1255492	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1675:5:53865:53913	1254235	0	True				
ANR	1255493	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1254235	0		&&			
ANR	1255494	EqualityExpression	trav != NULL		1254235	0		!=			
ANR	1255495	Identifier	trav		1254235	0					
ANR	1255496	Identifier	NULL		1254235	1					
ANR	1255497	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1254235	1					
ANR	1255498	Callee	node_is_equal		1254235	0					
ANR	1255499	Identifier	node_is_equal		1254235	0					
ANR	1255500	ArgumentList	trav		1254235	1					
ANR	1255501	Argument	trav		1254235	0					
ANR	1255502	Identifier	trav		1254235	0					
ANR	1255503	Argument	"""annotation"""		1254235	1					
ANR	1255504	PrimaryExpression	"""annotation"""		1254235	0					
ANR	1255505	CompoundStatement		189:56:5430:5430	1254235	1					
ANR	1255506	ExpressionStatement	trav = trav -> next	1677:2:53955:53972	1254235	0	True				
ANR	1255507	AssignmentExpression	trav = trav -> next		1254235	0		=			
ANR	1255508	Identifier	trav		1254235	0					
ANR	1255509	PtrMemberAccess	trav -> next		1254235	1					
ANR	1255510	Identifier	trav		1254235	0					
ANR	1255511	Identifier	next		1254235	1					
ANR	1255512	IfStatement	if ( trav != NULL )		1254235	22					
ANR	1255513	Condition	trav != NULL	1679:5:53982:53993	1254235	0	True				
ANR	1255514	EqualityExpression	trav != NULL		1254235	0		!=			
ANR	1255515	Identifier	trav		1254235	0					
ANR	1255516	Identifier	NULL		1254235	1					
ANR	1255517	CompoundStatement		193:19:5510:5510	1254235	1					
ANR	1255518	IfStatement	"if ( node_is_equal ( trav , ""simpleType"" ) )"		1254235	0					
ANR	1255519	Condition	"node_is_equal ( trav , ""simpleType"" )"	1680:6:54004:54035	1254235	0	True				
ANR	1255520	CallExpression	"node_is_equal ( trav , ""simpleType"" )"		1254235	0					
ANR	1255521	Callee	node_is_equal		1254235	0					
ANR	1255522	Identifier	node_is_equal		1254235	0					
ANR	1255523	ArgumentList	trav		1254235	1					
ANR	1255524	Argument	trav		1254235	0					
ANR	1255525	Identifier	trav		1254235	0					
ANR	1255526	Argument	"""simpleType"""		1254235	1					
ANR	1255527	PrimaryExpression	"""simpleType"""		1254235	0					
ANR	1255528	CompoundStatement		194:40:5552:5552	1254235	1					
ANR	1255529	IfStatement	if ( ref != NULL )		1254235	0					
ANR	1255530	Condition	ref != NULL	1681:7:54047:54057	1254235	0	True				
ANR	1255531	EqualityExpression	ref != NULL		1254235	0		!=			
ANR	1255532	Identifier	ref		1254235	0					
ANR	1255533	Identifier	NULL		1254235	1					
ANR	1255534	CompoundStatement		195:20:5574:5574	1254235	1					
ANR	1255535	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' attribute and subtype"" )"	1682:4:54066:54150	1254235	0	True				
ANR	1255536	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' attribute and subtype"" )"		1254235	0					
ANR	1255537	Callee	soap_error0		1254235	0					
ANR	1255538	Identifier	soap_error0		1254235	0					
ANR	1255539	ArgumentList	E_ERROR		1254235	1					
ANR	1255540	Argument	E_ERROR		1254235	0					
ANR	1255541	Identifier	E_ERROR		1254235	0					
ANR	1255542	Argument	"""Parsing Schema: element has both 'ref' attribute and subtype"""		1254235	1					
ANR	1255543	PrimaryExpression	"""Parsing Schema: element has both 'ref' attribute and subtype"""		1254235	0					
ANR	1255544	ElseStatement	else		1254235	0					
ANR	1255545	IfStatement	if ( type != NULL )		1254235	0					
ANR	1255546	Condition	type != NULL	1683:14:54166:54177	1254235	0	True				
ANR	1255547	EqualityExpression	type != NULL		1254235	0		!=			
ANR	1255548	Identifier	type		1254235	0					
ANR	1255549	Identifier	NULL		1254235	1					
ANR	1255550	CompoundStatement		197:28:5694:5694	1254235	1					
ANR	1255551	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'type' attribute and subtype"" )"	1684:4:54186:54271	1254235	0	True				
ANR	1255552	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'type' attribute and subtype"" )"		1254235	0					
ANR	1255553	Callee	soap_error0		1254235	0					
ANR	1255554	Identifier	soap_error0		1254235	0					
ANR	1255555	ArgumentList	E_ERROR		1254235	1					
ANR	1255556	Argument	E_ERROR		1254235	0					
ANR	1255557	Identifier	E_ERROR		1254235	0					
ANR	1255558	Argument	"""Parsing Schema: element has both 'type' attribute and subtype"""		1254235	1					
ANR	1255559	PrimaryExpression	"""Parsing Schema: element has both 'type' attribute and subtype"""		1254235	0					
ANR	1255560	ExpressionStatement	"schema_simpleType ( sdl , tns , trav , cur_type )"	1686:3:54281:54324	1254235	1	True				
ANR	1255561	CallExpression	"schema_simpleType ( sdl , tns , trav , cur_type )"		1254235	0					
ANR	1255562	Callee	schema_simpleType		1254235	0					
ANR	1255563	Identifier	schema_simpleType		1254235	0					
ANR	1255564	ArgumentList	sdl		1254235	1					
ANR	1255565	Argument	sdl		1254235	0					
ANR	1255566	Identifier	sdl		1254235	0					
ANR	1255567	Argument	tns		1254235	1					
ANR	1255568	Identifier	tns		1254235	0					
ANR	1255569	Argument	trav		1254235	2					
ANR	1255570	Identifier	trav		1254235	0					
ANR	1255571	Argument	cur_type		1254235	3					
ANR	1255572	Identifier	cur_type		1254235	0					
ANR	1255573	ExpressionStatement	trav = trav -> next	1687:3:54329:54346	1254235	2	True				
ANR	1255574	AssignmentExpression	trav = trav -> next		1254235	0		=			
ANR	1255575	Identifier	trav		1254235	0					
ANR	1255576	PtrMemberAccess	trav -> next		1254235	1					
ANR	1255577	Identifier	trav		1254235	0					
ANR	1255578	Identifier	next		1254235	1					
ANR	1255579	ElseStatement	else		1254235	0					
ANR	1255580	IfStatement	"if ( node_is_equal ( trav , ""complexType"" ) )"		1254235	0					
ANR	1255581	Condition	"node_is_equal ( trav , ""complexType"" )"	1688:13:54361:54393	1254235	0	True				
ANR	1255582	CallExpression	"node_is_equal ( trav , ""complexType"" )"		1254235	0					
ANR	1255583	Callee	node_is_equal		1254235	0					
ANR	1255584	Identifier	node_is_equal		1254235	0					
ANR	1255585	ArgumentList	trav		1254235	1					
ANR	1255586	Argument	trav		1254235	0					
ANR	1255587	Identifier	trav		1254235	0					
ANR	1255588	Argument	"""complexType"""		1254235	1					
ANR	1255589	PrimaryExpression	"""complexType"""		1254235	0					
ANR	1255590	CompoundStatement		202:48:5910:5910	1254235	1					
ANR	1255591	IfStatement	if ( ref != NULL )		1254235	0					
ANR	1255592	Condition	ref != NULL	1689:7:54405:54415	1254235	0	True				
ANR	1255593	EqualityExpression	ref != NULL		1254235	0		!=			
ANR	1255594	Identifier	ref		1254235	0					
ANR	1255595	Identifier	NULL		1254235	1					
ANR	1255596	CompoundStatement		203:20:5932:5932	1254235	1					
ANR	1255597	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' attribute and subtype"" )"	1690:4:54424:54508	1254235	0	True				
ANR	1255598	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'ref' attribute and subtype"" )"		1254235	0					
ANR	1255599	Callee	soap_error0		1254235	0					
ANR	1255600	Identifier	soap_error0		1254235	0					
ANR	1255601	ArgumentList	E_ERROR		1254235	1					
ANR	1255602	Argument	E_ERROR		1254235	0					
ANR	1255603	Identifier	E_ERROR		1254235	0					
ANR	1255604	Argument	"""Parsing Schema: element has both 'ref' attribute and subtype"""		1254235	1					
ANR	1255605	PrimaryExpression	"""Parsing Schema: element has both 'ref' attribute and subtype"""		1254235	0					
ANR	1255606	ElseStatement	else		1254235	0					
ANR	1255607	IfStatement	if ( type != NULL )		1254235	0					
ANR	1255608	Condition	type != NULL	1691:14:54524:54535	1254235	0	True				
ANR	1255609	EqualityExpression	type != NULL		1254235	0		!=			
ANR	1255610	Identifier	type		1254235	0					
ANR	1255611	Identifier	NULL		1254235	1					
ANR	1255612	CompoundStatement		205:28:6052:6052	1254235	1					
ANR	1255613	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'type' attribute and subtype"" )"	1692:4:54544:54629	1254235	0	True				
ANR	1255614	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: element has both 'type' attribute and subtype"" )"		1254235	0					
ANR	1255615	Callee	soap_error0		1254235	0					
ANR	1255616	Identifier	soap_error0		1254235	0					
ANR	1255617	ArgumentList	E_ERROR		1254235	1					
ANR	1255618	Argument	E_ERROR		1254235	0					
ANR	1255619	Identifier	E_ERROR		1254235	0					
ANR	1255620	Argument	"""Parsing Schema: element has both 'type' attribute and subtype"""		1254235	1					
ANR	1255621	PrimaryExpression	"""Parsing Schema: element has both 'type' attribute and subtype"""		1254235	0					
ANR	1255622	ExpressionStatement	"schema_complexType ( sdl , tns , trav , cur_type )"	1694:3:54639:54683	1254235	1	True				
ANR	1255623	CallExpression	"schema_complexType ( sdl , tns , trav , cur_type )"		1254235	0					
ANR	1255624	Callee	schema_complexType		1254235	0					
ANR	1255625	Identifier	schema_complexType		1254235	0					
ANR	1255626	ArgumentList	sdl		1254235	1					
ANR	1255627	Argument	sdl		1254235	0					
ANR	1255628	Identifier	sdl		1254235	0					
ANR	1255629	Argument	tns		1254235	1					
ANR	1255630	Identifier	tns		1254235	0					
ANR	1255631	Argument	trav		1254235	2					
ANR	1255632	Identifier	trav		1254235	0					
ANR	1255633	Argument	cur_type		1254235	3					
ANR	1255634	Identifier	cur_type		1254235	0					
ANR	1255635	ExpressionStatement	trav = trav -> next	1695:3:54688:54705	1254235	2	True				
ANR	1255636	AssignmentExpression	trav = trav -> next		1254235	0		=			
ANR	1255637	Identifier	trav		1254235	0					
ANR	1255638	PtrMemberAccess	trav -> next		1254235	1					
ANR	1255639	Identifier	trav		1254235	0					
ANR	1255640	Identifier	next		1254235	1					
ANR	1255641	WhileStatement	while ( trav != NULL )		1254235	23					
ANR	1255642	Condition	trav != NULL	1698:8:54722:54733	1254235	0	True				
ANR	1255643	EqualityExpression	trav != NULL		1254235	0		!=			
ANR	1255644	Identifier	trav		1254235	0					
ANR	1255645	Identifier	NULL		1254235	1					
ANR	1255646	CompoundStatement		212:22:6250:6250	1254235	1					
ANR	1255647	IfStatement	"if ( node_is_equal ( trav , ""unique"" ) )"		1254235	0					
ANR	1255648	Condition	"node_is_equal ( trav , ""unique"" )"	1699:6:54744:54771	1254235	0	True				
ANR	1255649	CallExpression	"node_is_equal ( trav , ""unique"" )"		1254235	0					
ANR	1255650	Callee	node_is_equal		1254235	0					
ANR	1255651	Identifier	node_is_equal		1254235	0					
ANR	1255652	ArgumentList	trav		1254235	1					
ANR	1255653	Argument	trav		1254235	0					
ANR	1255654	Identifier	trav		1254235	0					
ANR	1255655	Argument	"""unique"""		1254235	1					
ANR	1255656	PrimaryExpression	"""unique"""		1254235	0					
ANR	1255657	CompoundStatement		213:36:6288:6288	1254235	1					
ANR	1255658	ElseStatement	else		1254235	0					
ANR	1255659	IfStatement	"if ( node_is_equal ( trav , ""key"" ) )"		1254235	0					
ANR	1255660	Condition	"node_is_equal ( trav , ""key"" )"	1701:13:54821:54845	1254235	0	True				
ANR	1255661	CallExpression	"node_is_equal ( trav , ""key"" )"		1254235	0					
ANR	1255662	Callee	node_is_equal		1254235	0					
ANR	1255663	Identifier	node_is_equal		1254235	0					
ANR	1255664	ArgumentList	trav		1254235	1					
ANR	1255665	Argument	trav		1254235	0					
ANR	1255666	Identifier	trav		1254235	0					
ANR	1255667	Argument	"""key"""		1254235	1					
ANR	1255668	PrimaryExpression	"""key"""		1254235	0					
ANR	1255669	CompoundStatement		215:40:6362:6362	1254235	1					
ANR	1255670	ElseStatement	else		1254235	0					
ANR	1255671	IfStatement	"if ( node_is_equal ( trav , ""keyref"" ) )"		1254235	0					
ANR	1255672	Condition	"node_is_equal ( trav , ""keyref"" )"	1703:13:54892:54919	1254235	0	True				
ANR	1255673	CallExpression	"node_is_equal ( trav , ""keyref"" )"		1254235	0					
ANR	1255674	Callee	node_is_equal		1254235	0					
ANR	1255675	Identifier	node_is_equal		1254235	0					
ANR	1255676	ArgumentList	trav		1254235	1					
ANR	1255677	Argument	trav		1254235	0					
ANR	1255678	Identifier	trav		1254235	0					
ANR	1255679	Argument	"""keyref"""		1254235	1					
ANR	1255680	PrimaryExpression	"""keyref"""		1254235	0					
ANR	1255681	CompoundStatement		217:43:6436:6436	1254235	1					
ANR	1255682	ElseStatement	else		1254235	0					
ANR	1255683	CompoundStatement		219:9:6479:6479	1254235	0					
ANR	1255684	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in element"" , trav -> name )"	1706:3:54970:55048	1254235	0	True				
ANR	1255685	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in element"" , trav -> name )"		1254235	0					
ANR	1255686	Callee	soap_error1		1254235	0					
ANR	1255687	Identifier	soap_error1		1254235	0					
ANR	1255688	ArgumentList	E_ERROR		1254235	1					
ANR	1255689	Argument	E_ERROR		1254235	0					
ANR	1255690	Identifier	E_ERROR		1254235	0					
ANR	1255691	Argument	"""Parsing Schema: unexpected <%s> in element"""		1254235	1					
ANR	1255692	PrimaryExpression	"""Parsing Schema: unexpected <%s> in element"""		1254235	0					
ANR	1255693	Argument	trav -> name		1254235	2					
ANR	1255694	PtrMemberAccess	trav -> name		1254235	0					
ANR	1255695	Identifier	trav		1254235	0					
ANR	1255696	Identifier	name		1254235	1					
ANR	1255697	ExpressionStatement	trav = trav -> next	1708:2:55056:55073	1254235	1	True				
ANR	1255698	AssignmentExpression	trav = trav -> next		1254235	0		=			
ANR	1255699	Identifier	trav		1254235	0					
ANR	1255700	PtrMemberAccess	trav -> next		1254235	1					
ANR	1255701	Identifier	trav		1254235	0					
ANR	1255702	Identifier	next		1254235	1					
ANR	1255703	ReturnStatement	return TRUE ;	1711:1:55080:55091	1254235	24	True				
ANR	1255704	Identifier	TRUE		1254235	0					
ANR	1255705	ReturnType	static int		1254235	1					
ANR	1255706	Identifier	schema_element		1254235	2					
ANR	1255707	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr element , sdlTypePtr cur_type , sdlContentModelPtr model"		1254235	3					
ANR	1255708	Parameter	sdlPtr sdl	1486:26:48390:48399	1254235	0	True				
ANR	1255709	ParameterType	sdlPtr		1254235	0					
ANR	1255710	Identifier	sdl		1254235	1					
ANR	1255711	Parameter	xmlAttrPtr tns	1486:38:48402:48415	1254235	1	True				
ANR	1255712	ParameterType	xmlAttrPtr		1254235	0					
ANR	1255713	Identifier	tns		1254235	1					
ANR	1255714	Parameter	xmlNodePtr element	1486:54:48418:48435	1254235	2	True				
ANR	1255715	ParameterType	xmlNodePtr		1254235	0					
ANR	1255716	Identifier	element		1254235	1					
ANR	1255717	Parameter	sdlTypePtr cur_type	1486:74:48438:48456	1254235	3	True				
ANR	1255718	ParameterType	sdlTypePtr		1254235	0					
ANR	1255719	Identifier	cur_type		1254235	1					
ANR	1255720	Parameter	sdlContentModelPtr model	1486:95:48459:48482	1254235	4	True				
ANR	1255721	ParameterType	sdlContentModelPtr		1254235	0					
ANR	1255722	Identifier	model		1254235	1					
ANR	1255723	CFGEntryNode	ENTRY		1254235		True				
ANR	1255724	CFGExitNode	EXIT		1254235		True				
ANR	1255725	Symbol	newType		1254235						
ANR	1255726	Symbol	parent		1254235						
ANR	1255727	Symbol	* parent		1254235						
ANR	1255728	Symbol	trav -> next		1254235						
ANR	1255729	Symbol	def		1254235						
ANR	1255730	Symbol	trav		1254235						
ANR	1255731	Symbol	XSD_FORM_QUALIFIED		1254235						
ANR	1255732	Symbol	type		1254235						
ANR	1255733	Symbol	model -> u . content		1254235						
ANR	1255734	Symbol	def -> children -> content		1254235						
ANR	1255735	Symbol	strncmp		1254235						
ANR	1255736	Symbol	model		1254235						
ANR	1255737	Symbol	element		1254235						
ANR	1255738	Symbol	& type		1254235						
ANR	1255739	Symbol	* sdl		1254235						
ANR	1255740	Symbol	* model		1254235						
ANR	1255741	Symbol	* * name		1254235						
ANR	1255742	Symbol	* newModel		1254235						
ANR	1255743	Symbol	attrs		1254235						
ANR	1255744	Symbol	ref -> children -> content		1254235						
ANR	1255745	Symbol	name -> children -> content		1254235						
ANR	1255746	Symbol	* * ns		1254235						
ANR	1255747	Symbol	cur_type -> encode		1254235						
ANR	1255748	Symbol	* nsptr		1254235						
ANR	1255749	Symbol	tns		1254235						
ANR	1255750	Symbol	stricmp		1254235						
ANR	1255751	Symbol	sdl		1254235						
ANR	1255752	Symbol	& key		1254235						
ANR	1255753	Symbol	* element		1254235						
ANR	1255754	Symbol	* ns -> children		1254235						
ANR	1255755	Symbol	str_ns		1254235						
ANR	1255756	Symbol	& newType		1254235						
ANR	1255757	Symbol	* attr -> children		1254235						
ANR	1255758	Symbol	cur_type -> nillable		1254235						
ANR	1255759	Symbol	nsptr		1254235						
ANR	1255760	Symbol	* def		1254235						
ANR	1255761	Symbol	key . len		1254235						
ANR	1255762	Symbol	* * def		1254235						
ANR	1255763	Symbol	key		1254235						
ANR	1255764	Symbol	element -> doc		1254235						
ANR	1255765	Symbol	* newType		1254235						
ANR	1255766	Symbol	* name		1254235						
ANR	1255767	Symbol	newModel -> u . element		1254235						
ANR	1255768	Symbol	ns -> children		1254235						
ANR	1255769	Symbol	SUCCESS		1254235						
ANR	1255770	Symbol	nsptr -> href		1254235						
ANR	1255771	Symbol	attr -> children -> content		1254235						
ANR	1255772	Symbol	* ns		1254235						
ANR	1255773	Symbol	* name -> children		1254235						
ANR	1255774	Symbol	delete_type		1254235						
ANR	1255775	Symbol	newModel		1254235						
ANR	1255776	Symbol	E_ERROR		1254235						
ANR	1255777	Symbol	cptype		1254235						
ANR	1255778	Symbol	type -> children -> content		1254235						
ANR	1255779	Symbol	estrdup		1254235						
ANR	1255780	Symbol	XSD_FORM_UNQUALIFIED		1254235						
ANR	1255781	Symbol	* * type		1254235						
ANR	1255782	Symbol	& nscat		1254235						
ANR	1255783	Symbol	newModel -> u		1254235						
ANR	1255784	Symbol	model -> u		1254235						
ANR	1255785	Symbol	* type -> children		1254235						
ANR	1255786	Symbol	cur_type -> elements		1254235						
ANR	1255787	Symbol	get_attribute		1254235						
ANR	1255788	Symbol	* * attr		1254235						
ANR	1255789	Symbol	XSD_CONTENT_ELEMENT		1254235						
ANR	1255790	Symbol	parent -> properties		1254235						
ANR	1255791	Symbol	ref		1254235						
ANR	1255792	Symbol	parent -> parent		1254235						
ANR	1255793	Symbol	ref -> children		1254235						
ANR	1255794	Symbol	type -> children		1254235						
ANR	1255795	Symbol	sdl -> elements		1254235						
ANR	1255796	Symbol	cur_type -> def		1254235						
ANR	1255797	Symbol	cur_type		1254235						
ANR	1255798	Symbol	element -> children		1254235						
ANR	1255799	Symbol	NULL		1254235						
ANR	1255800	Symbol	* ref -> children		1254235						
ANR	1255801	Symbol	cur_type -> form		1254235						
ANR	1255802	Symbol	cur_type -> fixed		1254235						
ANR	1255803	Symbol	TRUE		1254235						
ANR	1255804	Symbol	ns -> children -> content		1254235						
ANR	1255805	Symbol	& newModel		1254235						
ANR	1255806	Symbol	newType -> ref		1254235						
ANR	1255807	Symbol	nscat		1254235						
ANR	1255808	Symbol	element -> parent		1254235						
ANR	1255809	Symbol	name		1254235						
ANR	1255810	Symbol	newModel -> kind		1254235						
ANR	1255811	Symbol	* attr		1254235						
ANR	1255812	Symbol	trav -> name		1254235						
ANR	1255813	Symbol	node_is_equal_ex		1254235						
ANR	1255814	Symbol	BAD_CAST		1254235						
ANR	1255815	Symbol	& str_ns		1254235						
ANR	1255816	Symbol	ns		1254235						
ANR	1255817	Symbol	addHash		1254235						
ANR	1255818	Symbol	node_is_equal		1254235						
ANR	1255819	Symbol	newType -> namens		1254235						
ANR	1255820	Symbol	nscat . c		1254235						
ANR	1255821	Symbol	* trav		1254235						
ANR	1255822	Symbol	emalloc		1254235						
ANR	1255823	Symbol	* def -> children		1254235						
ANR	1255824	Symbol	* type		1254235						
ANR	1255825	Symbol	attr		1254235						
ANR	1255826	Symbol	newType -> nillable		1254235						
ANR	1255827	Symbol	element -> properties		1254235						
ANR	1255828	Symbol	newType -> name		1254235						
ANR	1255829	Symbol	name -> children		1254235						
ANR	1255830	Symbol	& cptype		1254235						
ANR	1255831	Symbol	* * ref		1254235						
ANR	1255832	Symbol	def -> children		1254235						
ANR	1255833	Symbol	attr -> children		1254235						
ANR	1255834	Symbol	xmlSearchNs		1254235						
ANR	1255835	Symbol	& ns		1254235						
ANR	1255836	Symbol	* cur_type		1254235						
ANR	1255837	Symbol	zend_hash_add		1254235						
ANR	1255838	Symbol	SCHEMA_NAMESPACE		1254235						
ANR	1255839	Symbol	FALSE		1254235						
ANR	1255840	Symbol	key . c		1254235						
ANR	1255841	Symbol	* ref		1254235						
ANR	1255842	Symbol	XSD_FORM_DEFAULT		1254235						
ANR	1255843	Symbol	get_create_encoder		1254235						
ANR	1255844	Function	schema_attribute	1728:0:55398:62647							
ANR	1255845	FunctionDef	"schema_attribute (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr attrType , sdlTypePtr cur_type , sdlCtx * ctx)"		1255844	0					
ANR	1255846	CompoundStatement		1729:0:55509:62647	1255844	0					
ANR	1255847	IdentifierDeclStatement	sdlAttributePtr newAttr ;	1730:1:55512:55535	1255844	0	True				
ANR	1255848	IdentifierDecl	newAttr		1255844	0					
ANR	1255849	IdentifierDeclType	sdlAttributePtr		1255844	0					
ANR	1255850	Identifier	newAttr		1255844	1					
ANR	1255851	IdentifierDeclStatement	"xmlAttrPtr attr , name , ref = NULL , type = NULL ;"	1731:1:55538:55584	1255844	1	True				
ANR	1255852	IdentifierDecl	attr		1255844	0					
ANR	1255853	IdentifierDeclType	xmlAttrPtr		1255844	0					
ANR	1255854	Identifier	attr		1255844	1					
ANR	1255855	IdentifierDecl	name		1255844	1					
ANR	1255856	IdentifierDeclType	xmlAttrPtr		1255844	0					
ANR	1255857	Identifier	name		1255844	1					
ANR	1255858	IdentifierDecl	ref = NULL		1255844	2					
ANR	1255859	IdentifierDeclType	xmlAttrPtr		1255844	0					
ANR	1255860	Identifier	ref		1255844	1					
ANR	1255861	AssignmentExpression	ref = NULL		1255844	2		=			
ANR	1255862	Identifier	NULL		1255844	0					
ANR	1255863	Identifier	NULL		1255844	1					
ANR	1255864	IdentifierDecl	type = NULL		1255844	3					
ANR	1255865	IdentifierDeclType	xmlAttrPtr		1255844	0					
ANR	1255866	Identifier	type		1255844	1					
ANR	1255867	AssignmentExpression	type = NULL		1255844	2		=			
ANR	1255868	Identifier	NULL		1255844	0					
ANR	1255869	Identifier	NULL		1255844	1					
ANR	1255870	IdentifierDeclStatement	xmlNodePtr trav ;	1732:1:55587:55602	1255844	2	True				
ANR	1255871	IdentifierDecl	trav		1255844	0					
ANR	1255872	IdentifierDeclType	xmlNodePtr		1255844	0					
ANR	1255873	Identifier	trav		1255844	1					
ANR	1255874	ExpressionStatement	"name = get_attribute ( attrType -> properties , ""name"" )"	1734:1:55606:55656	1255844	3	True				
ANR	1255875	AssignmentExpression	"name = get_attribute ( attrType -> properties , ""name"" )"		1255844	0		=			
ANR	1255876	Identifier	name		1255844	0					
ANR	1255877	CallExpression	"get_attribute ( attrType -> properties , ""name"" )"		1255844	1					
ANR	1255878	Callee	get_attribute		1255844	0					
ANR	1255879	Identifier	get_attribute		1255844	0					
ANR	1255880	ArgumentList	attrType -> properties		1255844	1					
ANR	1255881	Argument	attrType -> properties		1255844	0					
ANR	1255882	PtrMemberAccess	attrType -> properties		1255844	0					
ANR	1255883	Identifier	attrType		1255844	0					
ANR	1255884	Identifier	properties		1255844	1					
ANR	1255885	Argument	"""name"""		1255844	1					
ANR	1255886	PrimaryExpression	"""name"""		1255844	0					
ANR	1255887	IfStatement	if ( name == NULL )		1255844	4					
ANR	1255888	Condition	name == NULL	1735:5:55663:55674	1255844	0	True				
ANR	1255889	EqualityExpression	name == NULL		1255844	0		==			
ANR	1255890	Identifier	name		1255844	0					
ANR	1255891	Identifier	NULL		1255844	1					
ANR	1255892	CompoundStatement		7:19:167:167	1255844	1					
ANR	1255893	ExpressionStatement	"name = ref = get_attribute ( attrType -> properties , ""ref"" )"	1736:2:55681:55736	1255844	0	True				
ANR	1255894	AssignmentExpression	"name = ref = get_attribute ( attrType -> properties , ""ref"" )"		1255844	0		=			
ANR	1255895	Identifier	name		1255844	0					
ANR	1255896	AssignmentExpression	"ref = get_attribute ( attrType -> properties , ""ref"" )"		1255844	1		=			
ANR	1255897	Identifier	ref		1255844	0					
ANR	1255898	CallExpression	"get_attribute ( attrType -> properties , ""ref"" )"		1255844	1					
ANR	1255899	Callee	get_attribute		1255844	0					
ANR	1255900	Identifier	get_attribute		1255844	0					
ANR	1255901	ArgumentList	attrType -> properties		1255844	1					
ANR	1255902	Argument	attrType -> properties		1255844	0					
ANR	1255903	PtrMemberAccess	attrType -> properties		1255844	0					
ANR	1255904	Identifier	attrType		1255844	0					
ANR	1255905	Identifier	properties		1255844	1					
ANR	1255906	Argument	"""ref"""		1255844	1					
ANR	1255907	PrimaryExpression	"""ref"""		1255844	0					
ANR	1255908	IfStatement	if ( name )		1255844	5					
ANR	1255909	Condition	name	1738:5:55746:55749	1255844	0	True				
ANR	1255910	Identifier	name		1255844	0					
ANR	1255911	CompoundStatement		12:2:268:287	1255844	1					
ANR	1255912	IdentifierDeclStatement	HashTable * addHash ;	1739:2:55756:55774	1255844	0	True				
ANR	1255913	IdentifierDecl	* addHash		1255844	0					
ANR	1255914	IdentifierDeclType	HashTable *		1255844	0					
ANR	1255915	Identifier	addHash		1255844	1					
ANR	1255916	IdentifierDeclStatement	smart_str key = { 0 } ;	1740:2:55778:55797	1255844	1	True				
ANR	1255917	IdentifierDecl	key = { 0 }		1255844	0					
ANR	1255918	IdentifierDeclType	smart_str		1255844	0					
ANR	1255919	Identifier	key		1255844	1					
ANR	1255920	AssignmentExpression	key = { 0 }		1255844	2		=			
ANR	1255921	Identifier	key		1255844	0					
ANR	1255922	InitializerList	0		1255844	1					
ANR	1255923	PrimaryExpression	0		1255844	0					
ANR	1255924	ExpressionStatement	newAttr = emalloc ( sizeof ( sdlAttribute ) )	1742:2:55802:55841	1255844	2	True				
ANR	1255925	AssignmentExpression	newAttr = emalloc ( sizeof ( sdlAttribute ) )		1255844	0		=			
ANR	1255926	Identifier	newAttr		1255844	0					
ANR	1255927	CallExpression	emalloc ( sizeof ( sdlAttribute ) )		1255844	1					
ANR	1255928	Callee	emalloc		1255844	0					
ANR	1255929	Identifier	emalloc		1255844	0					
ANR	1255930	ArgumentList	sizeof ( sdlAttribute )		1255844	1					
ANR	1255931	Argument	sizeof ( sdlAttribute )		1255844	0					
ANR	1255932	SizeofExpression	sizeof ( sdlAttribute )		1255844	0					
ANR	1255933	Sizeof	sizeof		1255844	0					
ANR	1255934	SizeofOperand	sdlAttribute		1255844	1					
ANR	1255935	ExpressionStatement	"memset ( newAttr , 0 , sizeof ( sdlAttribute ) )"	1743:2:55845:55885	1255844	3	True				
ANR	1255936	CallExpression	"memset ( newAttr , 0 , sizeof ( sdlAttribute ) )"		1255844	0					
ANR	1255937	Callee	memset		1255844	0					
ANR	1255938	Identifier	memset		1255844	0					
ANR	1255939	ArgumentList	newAttr		1255844	1					
ANR	1255940	Argument	newAttr		1255844	0					
ANR	1255941	Identifier	newAttr		1255844	0					
ANR	1255942	Argument	0		1255844	1					
ANR	1255943	PrimaryExpression	0		1255844	0					
ANR	1255944	Argument	sizeof ( sdlAttribute )		1255844	2					
ANR	1255945	SizeofExpression	sizeof ( sdlAttribute )		1255844	0					
ANR	1255946	Sizeof	sizeof		1255844	0					
ANR	1255947	SizeofOperand	sdlAttribute		1255844	1					
ANR	1255948	IfStatement	if ( ref )		1255844	4					
ANR	1255949	Condition	ref	1745:6:55894:55896	1255844	0	True				
ANR	1255950	Identifier	ref		1255844	0					
ANR	1255951	CompoundStatement		19:3:419:433	1255844	1					
ANR	1255952	IdentifierDeclStatement	"char * attr_name , * ns ;"	1746:3:55904:55924	1255844	0	True				
ANR	1255953	IdentifierDecl	* attr_name		1255844	0					
ANR	1255954	IdentifierDeclType	char *		1255844	0					
ANR	1255955	Identifier	attr_name		1255844	1					
ANR	1255956	IdentifierDecl	* ns		1255844	1					
ANR	1255957	IdentifierDeclType	char *		1255844	0					
ANR	1255958	Identifier	ns		1255844	1					
ANR	1255959	IdentifierDeclStatement	xmlNsPtr nsptr ;	1747:3:55929:55943	1255844	1	True				
ANR	1255960	IdentifierDecl	nsptr		1255844	0					
ANR	1255961	IdentifierDeclType	xmlNsPtr		1255844	0					
ANR	1255962	Identifier	nsptr		1255844	1					
ANR	1255963	ExpressionStatement	"parse_namespace ( ref -> children -> content , & attr_name , & ns )"	1749:3:55949:56005	1255844	2	True				
ANR	1255964	CallExpression	"parse_namespace ( ref -> children -> content , & attr_name , & ns )"		1255844	0					
ANR	1255965	Callee	parse_namespace		1255844	0					
ANR	1255966	Identifier	parse_namespace		1255844	0					
ANR	1255967	ArgumentList	ref -> children -> content		1255844	1					
ANR	1255968	Argument	ref -> children -> content		1255844	0					
ANR	1255969	PtrMemberAccess	ref -> children -> content		1255844	0					
ANR	1255970	PtrMemberAccess	ref -> children		1255844	0					
ANR	1255971	Identifier	ref		1255844	0					
ANR	1255972	Identifier	children		1255844	1					
ANR	1255973	Identifier	content		1255844	1					
ANR	1255974	Argument	& attr_name		1255844	1					
ANR	1255975	UnaryOperationExpression	& attr_name		1255844	0					
ANR	1255976	UnaryOperator	&		1255844	0					
ANR	1255977	Identifier	attr_name		1255844	1					
ANR	1255978	Argument	& ns		1255844	2					
ANR	1255979	UnaryOperationExpression	& ns		1255844	0					
ANR	1255980	UnaryOperator	&		1255844	0					
ANR	1255981	Identifier	ns		1255844	1					
ANR	1255982	ExpressionStatement	"nsptr = xmlSearchNs ( attrType -> doc , attrType , BAD_CAST ( ns ) )"	1750:3:56010:56068	1255844	3	True				
ANR	1255983	AssignmentExpression	"nsptr = xmlSearchNs ( attrType -> doc , attrType , BAD_CAST ( ns ) )"		1255844	0		=			
ANR	1255984	Identifier	nsptr		1255844	0					
ANR	1255985	CallExpression	"xmlSearchNs ( attrType -> doc , attrType , BAD_CAST ( ns ) )"		1255844	1					
ANR	1255986	Callee	xmlSearchNs		1255844	0					
ANR	1255987	Identifier	xmlSearchNs		1255844	0					
ANR	1255988	ArgumentList	attrType -> doc		1255844	1					
ANR	1255989	Argument	attrType -> doc		1255844	0					
ANR	1255990	PtrMemberAccess	attrType -> doc		1255844	0					
ANR	1255991	Identifier	attrType		1255844	0					
ANR	1255992	Identifier	doc		1255844	1					
ANR	1255993	Argument	attrType		1255844	1					
ANR	1255994	Identifier	attrType		1255844	0					
ANR	1255995	Argument	BAD_CAST ( ns )		1255844	2					
ANR	1255996	CallExpression	BAD_CAST ( ns )		1255844	0					
ANR	1255997	Callee	BAD_CAST		1255844	0					
ANR	1255998	Identifier	BAD_CAST		1255844	0					
ANR	1255999	ArgumentList	ns		1255844	1					
ANR	1256000	Argument	ns		1255844	0					
ANR	1256001	Identifier	ns		1255844	0					
ANR	1256002	IfStatement	if ( nsptr != NULL )		1255844	4					
ANR	1256003	Condition	nsptr != NULL	1751:7:56077:56089	1255844	0	True				
ANR	1256004	EqualityExpression	nsptr != NULL		1255844	0		!=			
ANR	1256005	Identifier	nsptr		1255844	0					
ANR	1256006	Identifier	NULL		1255844	1					
ANR	1256007	CompoundStatement		23:22:582:582	1255844	1					
ANR	1256008	ExpressionStatement	"smart_str_appends ( & key , ( char * ) nsptr -> href )"	1752:4:56098:56141	1255844	0	True				
ANR	1256009	CallExpression	"smart_str_appends ( & key , ( char * ) nsptr -> href )"		1255844	0					
ANR	1256010	Callee	smart_str_appends		1255844	0					
ANR	1256011	Identifier	smart_str_appends		1255844	0					
ANR	1256012	ArgumentList	& key		1255844	1					
ANR	1256013	Argument	& key		1255844	0					
ANR	1256014	UnaryOperationExpression	& key		1255844	0					
ANR	1256015	UnaryOperator	&		1255844	0					
ANR	1256016	Identifier	key		1255844	1					
ANR	1256017	Argument	( char * ) nsptr -> href		1255844	1					
ANR	1256018	CastExpression	( char * ) nsptr -> href		1255844	0					
ANR	1256019	CastTarget	char *		1255844	0					
ANR	1256020	PtrMemberAccess	nsptr -> href		1255844	1					
ANR	1256021	Identifier	nsptr		1255844	0					
ANR	1256022	Identifier	href		1255844	1					
ANR	1256023	ExpressionStatement	newAttr -> namens = estrdup ( ( char * ) nsptr -> href )	1753:4:56147:56192	1255844	1	True				
ANR	1256024	AssignmentExpression	newAttr -> namens = estrdup ( ( char * ) nsptr -> href )		1255844	0		=			
ANR	1256025	PtrMemberAccess	newAttr -> namens		1255844	0					
ANR	1256026	Identifier	newAttr		1255844	0					
ANR	1256027	Identifier	namens		1255844	1					
ANR	1256028	CallExpression	estrdup ( ( char * ) nsptr -> href )		1255844	1					
ANR	1256029	Callee	estrdup		1255844	0					
ANR	1256030	Identifier	estrdup		1255844	0					
ANR	1256031	ArgumentList	( char * ) nsptr -> href		1255844	1					
ANR	1256032	Argument	( char * ) nsptr -> href		1255844	0					
ANR	1256033	CastExpression	( char * ) nsptr -> href		1255844	0					
ANR	1256034	CastTarget	char *		1255844	0					
ANR	1256035	PtrMemberAccess	nsptr -> href		1255844	1					
ANR	1256036	Identifier	nsptr		1255844	0					
ANR	1256037	Identifier	href		1255844	1					
ANR	1256038	ElseStatement	else		1255844	0					
ANR	1256039	CompoundStatement		27:4:700:770	1255844	0					
ANR	1256040	IdentifierDeclStatement	"xmlAttrPtr ns = get_attribute ( attrType -> properties , ""targetNamespace"" ) ;"	1755:4:56210:56280	1255844	0	True				
ANR	1256041	IdentifierDecl	"ns = get_attribute ( attrType -> properties , ""targetNamespace"" )"		1255844	0					
ANR	1256042	IdentifierDeclType	xmlAttrPtr		1255844	0					
ANR	1256043	Identifier	ns		1255844	1					
ANR	1256044	AssignmentExpression	"ns = get_attribute ( attrType -> properties , ""targetNamespace"" )"		1255844	2		=			
ANR	1256045	Identifier	ns		1255844	0					
ANR	1256046	CallExpression	"get_attribute ( attrType -> properties , ""targetNamespace"" )"		1255844	1					
ANR	1256047	Callee	get_attribute		1255844	0					
ANR	1256048	Identifier	get_attribute		1255844	0					
ANR	1256049	ArgumentList	attrType -> properties		1255844	1					
ANR	1256050	Argument	attrType -> properties		1255844	0					
ANR	1256051	PtrMemberAccess	attrType -> properties		1255844	0					
ANR	1256052	Identifier	attrType		1255844	0					
ANR	1256053	Identifier	properties		1255844	1					
ANR	1256054	Argument	"""targetNamespace"""		1255844	1					
ANR	1256055	PrimaryExpression	"""targetNamespace"""		1255844	0					
ANR	1256056	IfStatement	if ( ns == NULL )		1255844	1					
ANR	1256057	Condition	ns == NULL	1756:8:56290:56299	1255844	0	True				
ANR	1256058	EqualityExpression	ns == NULL		1255844	0		==			
ANR	1256059	Identifier	ns		1255844	0					
ANR	1256060	Identifier	NULL		1255844	1					
ANR	1256061	CompoundStatement		28:20:792:792	1255844	1					
ANR	1256062	ExpressionStatement	ns = tns	1757:5:56309:56317	1255844	0	True				
ANR	1256063	AssignmentExpression	ns = tns		1255844	0		=			
ANR	1256064	Identifier	ns		1255844	0					
ANR	1256065	Identifier	tns		1255844	1					
ANR	1256066	IfStatement	if ( ns )		1255844	2					
ANR	1256067	Condition	ns	1759:8:56333:56334	1255844	0	True				
ANR	1256068	Identifier	ns		1255844	0					
ANR	1256069	CompoundStatement		31:12:827:827	1255844	1					
ANR	1256070	ExpressionStatement	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"	1760:5:56344:56397	1255844	0	True				
ANR	1256071	CallExpression	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"		1255844	0					
ANR	1256072	Callee	smart_str_appends		1255844	0					
ANR	1256073	Identifier	smart_str_appends		1255844	0					
ANR	1256074	ArgumentList	& key		1255844	1					
ANR	1256075	Argument	& key		1255844	0					
ANR	1256076	UnaryOperationExpression	& key		1255844	0					
ANR	1256077	UnaryOperator	&		1255844	0					
ANR	1256078	Identifier	key		1255844	1					
ANR	1256079	Argument	( char * ) ns -> children -> content		1255844	1					
ANR	1256080	CastExpression	( char * ) ns -> children -> content		1255844	0					
ANR	1256081	CastTarget	char *		1255844	0					
ANR	1256082	PtrMemberAccess	ns -> children -> content		1255844	1					
ANR	1256083	PtrMemberAccess	ns -> children		1255844	0					
ANR	1256084	Identifier	ns		1255844	0					
ANR	1256085	Identifier	children		1255844	1					
ANR	1256086	Identifier	content		1255844	1					
ANR	1256087	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	1763:3:56413:56441	1255844	5	True				
ANR	1256088	CallExpression	"smart_str_appendc ( & key , ':' )"		1255844	0					
ANR	1256089	Callee	smart_str_appendc		1255844	0					
ANR	1256090	Identifier	smart_str_appendc		1255844	0					
ANR	1256091	ArgumentList	& key		1255844	1					
ANR	1256092	Argument	& key		1255844	0					
ANR	1256093	UnaryOperationExpression	& key		1255844	0					
ANR	1256094	UnaryOperator	&		1255844	0					
ANR	1256095	Identifier	key		1255844	1					
ANR	1256096	Argument	':'		1255844	1					
ANR	1256097	PrimaryExpression	':'		1255844	0					
ANR	1256098	ExpressionStatement	"smart_str_appends ( & key , attr_name )"	1764:3:56446:56480	1255844	6	True				
ANR	1256099	CallExpression	"smart_str_appends ( & key , attr_name )"		1255844	0					
ANR	1256100	Callee	smart_str_appends		1255844	0					
ANR	1256101	Identifier	smart_str_appends		1255844	0					
ANR	1256102	ArgumentList	& key		1255844	1					
ANR	1256103	Argument	& key		1255844	0					
ANR	1256104	UnaryOperationExpression	& key		1255844	0					
ANR	1256105	UnaryOperator	&		1255844	0					
ANR	1256106	Identifier	key		1255844	1					
ANR	1256107	Argument	attr_name		1255844	1					
ANR	1256108	Identifier	attr_name		1255844	0					
ANR	1256109	ExpressionStatement	smart_str_0 ( & key )	1765:3:56485:56502	1255844	7	True				
ANR	1256110	CallExpression	smart_str_0 ( & key )		1255844	0					
ANR	1256111	Callee	smart_str_0		1255844	0					
ANR	1256112	Identifier	smart_str_0		1255844	0					
ANR	1256113	ArgumentList	& key		1255844	1					
ANR	1256114	Argument	& key		1255844	0					
ANR	1256115	UnaryOperationExpression	& key		1255844	0					
ANR	1256116	UnaryOperator	&		1255844	0					
ANR	1256117	Identifier	key		1255844	1					
ANR	1256118	ExpressionStatement	newAttr -> ref = estrdup ( key . c )	1766:3:56507:56536	1255844	8	True				
ANR	1256119	AssignmentExpression	newAttr -> ref = estrdup ( key . c )		1255844	0		=			
ANR	1256120	PtrMemberAccess	newAttr -> ref		1255844	0					
ANR	1256121	Identifier	newAttr		1255844	0					
ANR	1256122	Identifier	ref		1255844	1					
ANR	1256123	CallExpression	estrdup ( key . c )		1255844	1					
ANR	1256124	Callee	estrdup		1255844	0					
ANR	1256125	Identifier	estrdup		1255844	0					
ANR	1256126	ArgumentList	key . c		1255844	1					
ANR	1256127	Argument	key . c		1255844	0					
ANR	1256128	MemberAccess	key . c		1255844	0					
ANR	1256129	Identifier	key		1255844	0					
ANR	1256130	Identifier	c		1255844	1					
ANR	1256131	IfStatement	if ( attr_name )		1255844	9					
ANR	1256132	Condition	attr_name	1767:7:56545:56553	1255844	0	True				
ANR	1256133	Identifier	attr_name		1255844	0					
ANR	1256134	CompoundStatement		39:18:1046:1046	1255844	1					
ANR	1256135	ExpressionStatement	efree ( attr_name )	1767:19:56557:56573	1255844	0	True				
ANR	1256136	CallExpression	efree ( attr_name )		1255844	0					
ANR	1256137	Callee	efree		1255844	0					
ANR	1256138	Identifier	efree		1255844	0					
ANR	1256139	ArgumentList	attr_name		1255844	1					
ANR	1256140	Argument	attr_name		1255844	0					
ANR	1256141	Identifier	attr_name		1255844	0					
ANR	1256142	IfStatement	if ( ns )		1255844	10					
ANR	1256143	Condition	ns	1768:7:56583:56584	1255844	0	True				
ANR	1256144	Identifier	ns		1255844	0					
ANR	1256145	CompoundStatement		40:11:1077:1077	1255844	1					
ANR	1256146	ExpressionStatement	efree ( ns )	1768:12:56588:56597	1255844	0	True				
ANR	1256147	CallExpression	efree ( ns )		1255844	0					
ANR	1256148	Callee	efree		1255844	0					
ANR	1256149	Identifier	efree		1255844	0					
ANR	1256150	ArgumentList	ns		1255844	1					
ANR	1256151	Argument	ns		1255844	0					
ANR	1256152	Identifier	ns		1255844	0					
ANR	1256153	ElseStatement	else		1255844	0					
ANR	1256154	CompoundStatement		42:3:1104:1117	1255844	0					
ANR	1256155	IdentifierDeclStatement	xmlAttrPtr ns ;	1770:3:56614:56627	1255844	0	True				
ANR	1256156	IdentifierDecl	ns		1255844	0					
ANR	1256157	IdentifierDeclType	xmlAttrPtr		1255844	0					
ANR	1256158	Identifier	ns		1255844	1					
ANR	1256159	ExpressionStatement	"ns = get_attribute ( attrType -> properties , ""targetNamespace"" )"	1772:3:56633:56692	1255844	1	True				
ANR	1256160	AssignmentExpression	"ns = get_attribute ( attrType -> properties , ""targetNamespace"" )"		1255844	0		=			
ANR	1256161	Identifier	ns		1255844	0					
ANR	1256162	CallExpression	"get_attribute ( attrType -> properties , ""targetNamespace"" )"		1255844	1					
ANR	1256163	Callee	get_attribute		1255844	0					
ANR	1256164	Identifier	get_attribute		1255844	0					
ANR	1256165	ArgumentList	attrType -> properties		1255844	1					
ANR	1256166	Argument	attrType -> properties		1255844	0					
ANR	1256167	PtrMemberAccess	attrType -> properties		1255844	0					
ANR	1256168	Identifier	attrType		1255844	0					
ANR	1256169	Identifier	properties		1255844	1					
ANR	1256170	Argument	"""targetNamespace"""		1255844	1					
ANR	1256171	PrimaryExpression	"""targetNamespace"""		1255844	0					
ANR	1256172	IfStatement	if ( ns == NULL )		1255844	2					
ANR	1256173	Condition	ns == NULL	1773:7:56701:56710	1255844	0	True				
ANR	1256174	EqualityExpression	ns == NULL		1255844	0		==			
ANR	1256175	Identifier	ns		1255844	0					
ANR	1256176	Identifier	NULL		1255844	1					
ANR	1256177	CompoundStatement		45:19:1203:1203	1255844	1					
ANR	1256178	ExpressionStatement	ns = tns	1774:4:56719:56727	1255844	0	True				
ANR	1256179	AssignmentExpression	ns = tns		1255844	0		=			
ANR	1256180	Identifier	ns		1255844	0					
ANR	1256181	Identifier	tns		1255844	1					
ANR	1256182	IfStatement	if ( ns != NULL )		1255844	3					
ANR	1256183	Condition	ns != NULL	1776:7:56741:56750	1255844	0	True				
ANR	1256184	EqualityExpression	ns != NULL		1255844	0		!=			
ANR	1256185	Identifier	ns		1255844	0					
ANR	1256186	Identifier	NULL		1255844	1					
ANR	1256187	CompoundStatement		48:19:1243:1243	1255844	1					
ANR	1256188	ExpressionStatement	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"	1777:4:56759:56812	1255844	0	True				
ANR	1256189	CallExpression	"smart_str_appends ( & key , ( char * ) ns -> children -> content )"		1255844	0					
ANR	1256190	Callee	smart_str_appends		1255844	0					
ANR	1256191	Identifier	smart_str_appends		1255844	0					
ANR	1256192	ArgumentList	& key		1255844	1					
ANR	1256193	Argument	& key		1255844	0					
ANR	1256194	UnaryOperationExpression	& key		1255844	0					
ANR	1256195	UnaryOperator	&		1255844	0					
ANR	1256196	Identifier	key		1255844	1					
ANR	1256197	Argument	( char * ) ns -> children -> content		1255844	1					
ANR	1256198	CastExpression	( char * ) ns -> children -> content		1255844	0					
ANR	1256199	CastTarget	char *		1255844	0					
ANR	1256200	PtrMemberAccess	ns -> children -> content		1255844	1					
ANR	1256201	PtrMemberAccess	ns -> children		1255844	0					
ANR	1256202	Identifier	ns		1255844	0					
ANR	1256203	Identifier	children		1255844	1					
ANR	1256204	Identifier	content		1255844	1					
ANR	1256205	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	1778:4:56818:56846	1255844	1	True				
ANR	1256206	CallExpression	"smart_str_appendc ( & key , ':' )"		1255844	0					
ANR	1256207	Callee	smart_str_appendc		1255844	0					
ANR	1256208	Identifier	smart_str_appendc		1255844	0					
ANR	1256209	ArgumentList	& key		1255844	1					
ANR	1256210	Argument	& key		1255844	0					
ANR	1256211	UnaryOperationExpression	& key		1255844	0					
ANR	1256212	UnaryOperator	&		1255844	0					
ANR	1256213	Identifier	key		1255844	1					
ANR	1256214	Argument	':'		1255844	1					
ANR	1256215	PrimaryExpression	':'		1255844	0					
ANR	1256216	ExpressionStatement	newAttr -> namens = estrdup ( ( char * ) ns -> children -> content )	1779:4:56852:56907	1255844	2	True				
ANR	1256217	AssignmentExpression	newAttr -> namens = estrdup ( ( char * ) ns -> children -> content )		1255844	0		=			
ANR	1256218	PtrMemberAccess	newAttr -> namens		1255844	0					
ANR	1256219	Identifier	newAttr		1255844	0					
ANR	1256220	Identifier	namens		1255844	1					
ANR	1256221	CallExpression	estrdup ( ( char * ) ns -> children -> content )		1255844	1					
ANR	1256222	Callee	estrdup		1255844	0					
ANR	1256223	Identifier	estrdup		1255844	0					
ANR	1256224	ArgumentList	( char * ) ns -> children -> content		1255844	1					
ANR	1256225	Argument	( char * ) ns -> children -> content		1255844	0					
ANR	1256226	CastExpression	( char * ) ns -> children -> content		1255844	0					
ANR	1256227	CastTarget	char *		1255844	0					
ANR	1256228	PtrMemberAccess	ns -> children -> content		1255844	1					
ANR	1256229	PtrMemberAccess	ns -> children		1255844	0					
ANR	1256230	Identifier	ns		1255844	0					
ANR	1256231	Identifier	children		1255844	1					
ANR	1256232	Identifier	content		1255844	1					
ANR	1256233	ExpressionStatement	"smart_str_appends ( & key , ( char * ) name -> children -> content )"	1781:3:56917:56972	1255844	4	True				
ANR	1256234	CallExpression	"smart_str_appends ( & key , ( char * ) name -> children -> content )"		1255844	0					
ANR	1256235	Callee	smart_str_appends		1255844	0					
ANR	1256236	Identifier	smart_str_appends		1255844	0					
ANR	1256237	ArgumentList	& key		1255844	1					
ANR	1256238	Argument	& key		1255844	0					
ANR	1256239	UnaryOperationExpression	& key		1255844	0					
ANR	1256240	UnaryOperator	&		1255844	0					
ANR	1256241	Identifier	key		1255844	1					
ANR	1256242	Argument	( char * ) name -> children -> content		1255844	1					
ANR	1256243	CastExpression	( char * ) name -> children -> content		1255844	0					
ANR	1256244	CastTarget	char *		1255844	0					
ANR	1256245	PtrMemberAccess	name -> children -> content		1255844	1					
ANR	1256246	PtrMemberAccess	name -> children		1255844	0					
ANR	1256247	Identifier	name		1255844	0					
ANR	1256248	Identifier	children		1255844	1					
ANR	1256249	Identifier	content		1255844	1					
ANR	1256250	ExpressionStatement	smart_str_0 ( & key )	1782:3:56977:56994	1255844	5	True				
ANR	1256251	CallExpression	smart_str_0 ( & key )		1255844	0					
ANR	1256252	Callee	smart_str_0		1255844	0					
ANR	1256253	Identifier	smart_str_0		1255844	0					
ANR	1256254	ArgumentList	& key		1255844	1					
ANR	1256255	Argument	& key		1255844	0					
ANR	1256256	UnaryOperationExpression	& key		1255844	0					
ANR	1256257	UnaryOperator	&		1255844	0					
ANR	1256258	Identifier	key		1255844	1					
ANR	1256259	IfStatement	if ( cur_type == NULL )		1255844	5					
ANR	1256260	Condition	cur_type == NULL	1785:6:57007:57022	1255844	0	True				
ANR	1256261	EqualityExpression	cur_type == NULL		1255844	0		==			
ANR	1256262	Identifier	cur_type		1255844	0					
ANR	1256263	Identifier	NULL		1255844	1					
ANR	1256264	CompoundStatement		57:24:1515:1515	1255844	1					
ANR	1256265	ExpressionStatement	addHash = ctx -> attributes	1786:3:57030:57055	1255844	0	True				
ANR	1256266	AssignmentExpression	addHash = ctx -> attributes		1255844	0		=			
ANR	1256267	Identifier	addHash		1255844	0					
ANR	1256268	PtrMemberAccess	ctx -> attributes		1255844	1					
ANR	1256269	Identifier	ctx		1255844	0					
ANR	1256270	Identifier	attributes		1255844	1					
ANR	1256271	ElseStatement	else		1255844	0					
ANR	1256272	CompoundStatement		59:9:1556:1556	1255844	0					
ANR	1256273	IfStatement	if ( cur_type -> attributes == NULL )		1255844	0					
ANR	1256274	Condition	cur_type -> attributes == NULL	1788:7:57075:57102	1255844	0	True				
ANR	1256275	EqualityExpression	cur_type -> attributes == NULL		1255844	0		==			
ANR	1256276	PtrMemberAccess	cur_type -> attributes		1255844	0					
ANR	1256277	Identifier	cur_type		1255844	0					
ANR	1256278	Identifier	attributes		1255844	1					
ANR	1256279	Identifier	NULL		1255844	1					
ANR	1256280	CompoundStatement		60:37:1595:1595	1255844	1					
ANR	1256281	ExpressionStatement	cur_type -> attributes = emalloc ( sizeof ( HashTable ) )	1789:4:57111:57160	1255844	0	True				
ANR	1256282	AssignmentExpression	cur_type -> attributes = emalloc ( sizeof ( HashTable ) )		1255844	0		=			
ANR	1256283	PtrMemberAccess	cur_type -> attributes		1255844	0					
ANR	1256284	Identifier	cur_type		1255844	0					
ANR	1256285	Identifier	attributes		1255844	1					
ANR	1256286	CallExpression	emalloc ( sizeof ( HashTable ) )		1255844	1					
ANR	1256287	Callee	emalloc		1255844	0					
ANR	1256288	Identifier	emalloc		1255844	0					
ANR	1256289	ArgumentList	sizeof ( HashTable )		1255844	1					
ANR	1256290	Argument	sizeof ( HashTable )		1255844	0					
ANR	1256291	SizeofExpression	sizeof ( HashTable )		1255844	0					
ANR	1256292	Sizeof	sizeof		1255844	0					
ANR	1256293	SizeofOperand	HashTable		1255844	1					
ANR	1256294	ExpressionStatement	"zend_hash_init ( cur_type -> attributes , 0 , NULL , delete_attribute , 0 )"	1790:4:57166:57232	1255844	1	True				
ANR	1256295	CallExpression	"zend_hash_init ( cur_type -> attributes , 0 , NULL , delete_attribute , 0 )"		1255844	0					
ANR	1256296	Callee	zend_hash_init		1255844	0					
ANR	1256297	Identifier	zend_hash_init		1255844	0					
ANR	1256298	ArgumentList	cur_type -> attributes		1255844	1					
ANR	1256299	Argument	cur_type -> attributes		1255844	0					
ANR	1256300	PtrMemberAccess	cur_type -> attributes		1255844	0					
ANR	1256301	Identifier	cur_type		1255844	0					
ANR	1256302	Identifier	attributes		1255844	1					
ANR	1256303	Argument	0		1255844	1					
ANR	1256304	PrimaryExpression	0		1255844	0					
ANR	1256305	Argument	NULL		1255844	2					
ANR	1256306	Identifier	NULL		1255844	0					
ANR	1256307	Argument	delete_attribute		1255844	3					
ANR	1256308	Identifier	delete_attribute		1255844	0					
ANR	1256309	Argument	0		1255844	4					
ANR	1256310	PrimaryExpression	0		1255844	0					
ANR	1256311	ExpressionStatement	addHash = cur_type -> attributes	1792:3:57242:57272	1255844	1	True				
ANR	1256312	AssignmentExpression	addHash = cur_type -> attributes		1255844	0		=			
ANR	1256313	Identifier	addHash		1255844	0					
ANR	1256314	PtrMemberAccess	cur_type -> attributes		1255844	1					
ANR	1256315	Identifier	cur_type		1255844	0					
ANR	1256316	Identifier	attributes		1255844	1					
ANR	1256317	IfStatement	"if ( zend_hash_add ( addHash , key . c , key . len + 1 , & newAttr , sizeof ( sdlAttributePtr ) , NULL ) != SUCCESS )"		1255844	6					
ANR	1256318	Condition	"zend_hash_add ( addHash , key . c , key . len + 1 , & newAttr , sizeof ( sdlAttributePtr ) , NULL ) != SUCCESS"	1795:6:57285:57378	1255844	0	True				
ANR	1256319	EqualityExpression	"zend_hash_add ( addHash , key . c , key . len + 1 , & newAttr , sizeof ( sdlAttributePtr ) , NULL ) != SUCCESS"		1255844	0		!=			
ANR	1256320	CallExpression	"zend_hash_add ( addHash , key . c , key . len + 1 , & newAttr , sizeof ( sdlAttributePtr ) , NULL )"		1255844	0					
ANR	1256321	Callee	zend_hash_add		1255844	0					
ANR	1256322	Identifier	zend_hash_add		1255844	0					
ANR	1256323	ArgumentList	addHash		1255844	1					
ANR	1256324	Argument	addHash		1255844	0					
ANR	1256325	Identifier	addHash		1255844	0					
ANR	1256326	Argument	key . c		1255844	1					
ANR	1256327	MemberAccess	key . c		1255844	0					
ANR	1256328	Identifier	key		1255844	0					
ANR	1256329	Identifier	c		1255844	1					
ANR	1256330	Argument	key . len + 1		1255844	2					
ANR	1256331	AdditiveExpression	key . len + 1		1255844	0		+			
ANR	1256332	MemberAccess	key . len		1255844	0					
ANR	1256333	Identifier	key		1255844	0					
ANR	1256334	Identifier	len		1255844	1					
ANR	1256335	PrimaryExpression	1		1255844	1					
ANR	1256336	Argument	& newAttr		1255844	3					
ANR	1256337	UnaryOperationExpression	& newAttr		1255844	0					
ANR	1256338	UnaryOperator	&		1255844	0					
ANR	1256339	Identifier	newAttr		1255844	1					
ANR	1256340	Argument	sizeof ( sdlAttributePtr )		1255844	4					
ANR	1256341	SizeofExpression	sizeof ( sdlAttributePtr )		1255844	0					
ANR	1256342	Sizeof	sizeof		1255844	0					
ANR	1256343	SizeofOperand	sdlAttributePtr		1255844	1					
ANR	1256344	Argument	NULL		1255844	5					
ANR	1256345	Identifier	NULL		1255844	0					
ANR	1256346	Identifier	SUCCESS		1255844	1					
ANR	1256347	CompoundStatement		67:102:1871:1871	1255844	1					
ANR	1256348	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: attribute '%s' already defined"" , key . c )"	1796:3:57386:57463	1255844	0	True				
ANR	1256349	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: attribute '%s' already defined"" , key . c )"		1255844	0					
ANR	1256350	Callee	soap_error1		1255844	0					
ANR	1256351	Identifier	soap_error1		1255844	0					
ANR	1256352	ArgumentList	E_ERROR		1255844	1					
ANR	1256353	Argument	E_ERROR		1255844	0					
ANR	1256354	Identifier	E_ERROR		1255844	0					
ANR	1256355	Argument	"""Parsing Schema: attribute '%s' already defined"""		1255844	1					
ANR	1256356	PrimaryExpression	"""Parsing Schema: attribute '%s' already defined"""		1255844	0					
ANR	1256357	Argument	key . c		1255844	2					
ANR	1256358	MemberAccess	key . c		1255844	0					
ANR	1256359	Identifier	key		1255844	0					
ANR	1256360	Identifier	c		1255844	1					
ANR	1256361	ExpressionStatement	smart_str_free ( & key )	1798:2:57471:57491	1255844	7	True				
ANR	1256362	CallExpression	smart_str_free ( & key )		1255844	0					
ANR	1256363	Callee	smart_str_free		1255844	0					
ANR	1256364	Identifier	smart_str_free		1255844	0					
ANR	1256365	ArgumentList	& key		1255844	1					
ANR	1256366	Argument	& key		1255844	0					
ANR	1256367	UnaryOperationExpression	& key		1255844	0					
ANR	1256368	UnaryOperator	&		1255844	0					
ANR	1256369	Identifier	key		1255844	1					
ANR	1256370	ElseStatement	else		1255844	0					
ANR	1256371	CompoundStatement		71:7:1990:1990	1255844	0					
ANR	1256372	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has no 'name' nor 'ref' attributes"" )"	1800:2:57504:57588	1255844	0	True				
ANR	1256373	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has no 'name' nor 'ref' attributes"" )"		1255844	0					
ANR	1256374	Callee	soap_error0		1255844	0					
ANR	1256375	Identifier	soap_error0		1255844	0					
ANR	1256376	ArgumentList	E_ERROR		1255844	1					
ANR	1256377	Argument	E_ERROR		1255844	0					
ANR	1256378	Identifier	E_ERROR		1255844	0					
ANR	1256379	Argument	"""Parsing Schema: attribute has no 'name' nor 'ref' attributes"""		1255844	1					
ANR	1256380	PrimaryExpression	"""Parsing Schema: attribute has no 'name' nor 'ref' attributes"""		1255844	0					
ANR	1256381	ExpressionStatement	"type = get_attribute ( attrType -> properties , ""type"" )"	1804:1:57615:57665	1255844	6	True				
ANR	1256382	AssignmentExpression	"type = get_attribute ( attrType -> properties , ""type"" )"		1255844	0		=			
ANR	1256383	Identifier	type		1255844	0					
ANR	1256384	CallExpression	"get_attribute ( attrType -> properties , ""type"" )"		1255844	1					
ANR	1256385	Callee	get_attribute		1255844	0					
ANR	1256386	Identifier	get_attribute		1255844	0					
ANR	1256387	ArgumentList	attrType -> properties		1255844	1					
ANR	1256388	Argument	attrType -> properties		1255844	0					
ANR	1256389	PtrMemberAccess	attrType -> properties		1255844	0					
ANR	1256390	Identifier	attrType		1255844	0					
ANR	1256391	Identifier	properties		1255844	1					
ANR	1256392	Argument	"""type"""		1255844	1					
ANR	1256393	PrimaryExpression	"""type"""		1255844	0					
ANR	1256394	IfStatement	if ( type )		1255844	7					
ANR	1256395	Condition	type	1805:5:57672:57675	1255844	0	True				
ANR	1256396	Identifier	type		1255844	0					
ANR	1256397	CompoundStatement		79:2:2197:2211	1255844	1					
ANR	1256398	IdentifierDeclStatement	"char * cptype , * str_ns ;"	1806:2:57682:57703	1255844	0	True				
ANR	1256399	IdentifierDecl	* cptype		1255844	0					
ANR	1256400	IdentifierDeclType	char *		1255844	0					
ANR	1256401	Identifier	cptype		1255844	1					
ANR	1256402	IdentifierDecl	* str_ns		1255844	1					
ANR	1256403	IdentifierDeclType	char *		1255844	0					
ANR	1256404	Identifier	str_ns		1255844	1					
ANR	1256405	IdentifierDeclStatement	xmlNsPtr nsptr ;	1807:2:57707:57721	1255844	1	True				
ANR	1256406	IdentifierDecl	nsptr		1255844	0					
ANR	1256407	IdentifierDeclType	xmlNsPtr		1255844	0					
ANR	1256408	Identifier	nsptr		1255844	1					
ANR	1256409	IfStatement	if ( ref != NULL )		1255844	2					
ANR	1256410	Condition	ref != NULL	1809:6:57730:57740	1255844	0	True				
ANR	1256411	EqualityExpression	ref != NULL		1255844	0		!=			
ANR	1256412	Identifier	ref		1255844	0					
ANR	1256413	Identifier	NULL		1255844	1					
ANR	1256414	CompoundStatement		81:19:2233:2233	1255844	1					
ANR	1256415	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has both 'ref' and 'type' attributes"" )"	1810:3:57748:57834	1255844	0	True				
ANR	1256416	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has both 'ref' and 'type' attributes"" )"		1255844	0					
ANR	1256417	Callee	soap_error0		1255844	0					
ANR	1256418	Identifier	soap_error0		1255844	0					
ANR	1256419	ArgumentList	E_ERROR		1255844	1					
ANR	1256420	Argument	E_ERROR		1255844	0					
ANR	1256421	Identifier	E_ERROR		1255844	0					
ANR	1256422	Argument	"""Parsing Schema: attribute has both 'ref' and 'type' attributes"""		1255844	1					
ANR	1256423	PrimaryExpression	"""Parsing Schema: attribute has both 'ref' and 'type' attributes"""		1255844	0					
ANR	1256424	ExpressionStatement	"parse_namespace ( type -> children -> content , & cptype , & str_ns )"	1812:2:57842:57900	1255844	3	True				
ANR	1256425	CallExpression	"parse_namespace ( type -> children -> content , & cptype , & str_ns )"		1255844	0					
ANR	1256426	Callee	parse_namespace		1255844	0					
ANR	1256427	Identifier	parse_namespace		1255844	0					
ANR	1256428	ArgumentList	type -> children -> content		1255844	1					
ANR	1256429	Argument	type -> children -> content		1255844	0					
ANR	1256430	PtrMemberAccess	type -> children -> content		1255844	0					
ANR	1256431	PtrMemberAccess	type -> children		1255844	0					
ANR	1256432	Identifier	type		1255844	0					
ANR	1256433	Identifier	children		1255844	1					
ANR	1256434	Identifier	content		1255844	1					
ANR	1256435	Argument	& cptype		1255844	1					
ANR	1256436	UnaryOperationExpression	& cptype		1255844	0					
ANR	1256437	UnaryOperator	&		1255844	0					
ANR	1256438	Identifier	cptype		1255844	1					
ANR	1256439	Argument	& str_ns		1255844	2					
ANR	1256440	UnaryOperationExpression	& str_ns		1255844	0					
ANR	1256441	UnaryOperator	&		1255844	0					
ANR	1256442	Identifier	str_ns		1255844	1					
ANR	1256443	ExpressionStatement	"nsptr = xmlSearchNs ( attrType -> doc , attrType , BAD_CAST ( str_ns ) )"	1813:2:57904:57966	1255844	4	True				
ANR	1256444	AssignmentExpression	"nsptr = xmlSearchNs ( attrType -> doc , attrType , BAD_CAST ( str_ns ) )"		1255844	0		=			
ANR	1256445	Identifier	nsptr		1255844	0					
ANR	1256446	CallExpression	"xmlSearchNs ( attrType -> doc , attrType , BAD_CAST ( str_ns ) )"		1255844	1					
ANR	1256447	Callee	xmlSearchNs		1255844	0					
ANR	1256448	Identifier	xmlSearchNs		1255844	0					
ANR	1256449	ArgumentList	attrType -> doc		1255844	1					
ANR	1256450	Argument	attrType -> doc		1255844	0					
ANR	1256451	PtrMemberAccess	attrType -> doc		1255844	0					
ANR	1256452	Identifier	attrType		1255844	0					
ANR	1256453	Identifier	doc		1255844	1					
ANR	1256454	Argument	attrType		1255844	1					
ANR	1256455	Identifier	attrType		1255844	0					
ANR	1256456	Argument	BAD_CAST ( str_ns )		1255844	2					
ANR	1256457	CallExpression	BAD_CAST ( str_ns )		1255844	0					
ANR	1256458	Callee	BAD_CAST		1255844	0					
ANR	1256459	Identifier	BAD_CAST		1255844	0					
ANR	1256460	ArgumentList	str_ns		1255844	1					
ANR	1256461	Argument	str_ns		1255844	0					
ANR	1256462	Identifier	str_ns		1255844	0					
ANR	1256463	IfStatement	if ( nsptr != NULL )		1255844	5					
ANR	1256464	Condition	nsptr != NULL	1814:6:57974:57986	1255844	0	True				
ANR	1256465	EqualityExpression	nsptr != NULL		1255844	0		!=			
ANR	1256466	Identifier	nsptr		1255844	0					
ANR	1256467	Identifier	NULL		1255844	1					
ANR	1256468	CompoundStatement		86:21:2479:2479	1255844	1					
ANR	1256469	ExpressionStatement	"newAttr -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( cptype ) )"	1815:3:57994:58076	1255844	0	True				
ANR	1256470	AssignmentExpression	"newAttr -> encode = get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( cptype ) )"		1255844	0		=			
ANR	1256471	PtrMemberAccess	newAttr -> encode		1255844	0					
ANR	1256472	Identifier	newAttr		1255844	0					
ANR	1256473	Identifier	encode		1255844	1					
ANR	1256474	CallExpression	"get_create_encoder ( sdl , cur_type , nsptr -> href , BAD_CAST ( cptype ) )"		1255844	1					
ANR	1256475	Callee	get_create_encoder		1255844	0					
ANR	1256476	Identifier	get_create_encoder		1255844	0					
ANR	1256477	ArgumentList	sdl		1255844	1					
ANR	1256478	Argument	sdl		1255844	0					
ANR	1256479	Identifier	sdl		1255844	0					
ANR	1256480	Argument	cur_type		1255844	1					
ANR	1256481	Identifier	cur_type		1255844	0					
ANR	1256482	Argument	nsptr -> href		1255844	2					
ANR	1256483	PtrMemberAccess	nsptr -> href		1255844	0					
ANR	1256484	Identifier	nsptr		1255844	0					
ANR	1256485	Identifier	href		1255844	1					
ANR	1256486	Argument	BAD_CAST ( cptype )		1255844	3					
ANR	1256487	CallExpression	BAD_CAST ( cptype )		1255844	0					
ANR	1256488	Callee	BAD_CAST		1255844	0					
ANR	1256489	Identifier	BAD_CAST		1255844	0					
ANR	1256490	ArgumentList	cptype		1255844	1					
ANR	1256491	Argument	cptype		1255844	0					
ANR	1256492	Identifier	cptype		1255844	0					
ANR	1256493	IfStatement	if ( str_ns )		1255844	6					
ANR	1256494	Condition	str_ns	1817:6:58088:58093	1255844	0	True				
ANR	1256495	Identifier	str_ns		1255844	0					
ANR	1256496	CompoundStatement		89:14:2586:2586	1255844	1					
ANR	1256497	ExpressionStatement	efree ( str_ns )	1817:15:58097:58110	1255844	0	True				
ANR	1256498	CallExpression	efree ( str_ns )		1255844	0					
ANR	1256499	Callee	efree		1255844	0					
ANR	1256500	Identifier	efree		1255844	0					
ANR	1256501	ArgumentList	str_ns		1255844	1					
ANR	1256502	Argument	str_ns		1255844	0					
ANR	1256503	Identifier	str_ns		1255844	0					
ANR	1256504	IfStatement	if ( cptype )		1255844	7					
ANR	1256505	Condition	cptype	1818:6:58119:58124	1255844	0	True				
ANR	1256506	Identifier	cptype		1255844	0					
ANR	1256507	CompoundStatement		90:14:2617:2617	1255844	1					
ANR	1256508	ExpressionStatement	efree ( cptype )	1818:15:58128:58141	1255844	0	True				
ANR	1256509	CallExpression	efree ( cptype )		1255844	0					
ANR	1256510	Callee	efree		1255844	0					
ANR	1256511	Identifier	efree		1255844	0					
ANR	1256512	ArgumentList	cptype		1255844	1					
ANR	1256513	Argument	cptype		1255844	0					
ANR	1256514	Identifier	cptype		1255844	0					
ANR	1256515	ExpressionStatement	attr = attrType -> properties	1821:1:58149:58176	1255844	8	True				
ANR	1256516	AssignmentExpression	attr = attrType -> properties		1255844	0		=			
ANR	1256517	Identifier	attr		1255844	0					
ANR	1256518	PtrMemberAccess	attrType -> properties		1255844	1					
ANR	1256519	Identifier	attrType		1255844	0					
ANR	1256520	Identifier	properties		1255844	1					
ANR	1256521	WhileStatement	while ( attr != NULL )		1255844	9					
ANR	1256522	Condition	attr != NULL	1822:8:58186:58197	1255844	0	True				
ANR	1256523	EqualityExpression	attr != NULL		1255844	0		!=			
ANR	1256524	Identifier	attr		1255844	0					
ANR	1256525	Identifier	NULL		1255844	1					
ANR	1256526	CompoundStatement		94:22:2690:2690	1255844	1					
ANR	1256527	IfStatement	"if ( attr_is_equal_ex ( attr , ""default"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256528	Condition	"attr_is_equal_ex ( attr , ""default"" , SCHEMA_NAMESPACE )"	1823:6:58208:58258	1255844	0	True				
ANR	1256529	CallExpression	"attr_is_equal_ex ( attr , ""default"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256530	Callee	attr_is_equal_ex		1255844	0					
ANR	1256531	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256532	ArgumentList	attr		1255844	1					
ANR	1256533	Argument	attr		1255844	0					
ANR	1256534	Identifier	attr		1255844	0					
ANR	1256535	Argument	"""default"""		1255844	1					
ANR	1256536	PrimaryExpression	"""default"""		1255844	0					
ANR	1256537	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256538	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256539	CompoundStatement		95:59:2751:2751	1255844	1					
ANR	1256540	ExpressionStatement	newAttr -> def = estrdup ( ( char * ) attr -> children -> content )	1824:3:58266:58320	1255844	0	True				
ANR	1256541	AssignmentExpression	newAttr -> def = estrdup ( ( char * ) attr -> children -> content )		1255844	0		=			
ANR	1256542	PtrMemberAccess	newAttr -> def		1255844	0					
ANR	1256543	Identifier	newAttr		1255844	0					
ANR	1256544	Identifier	def		1255844	1					
ANR	1256545	CallExpression	estrdup ( ( char * ) attr -> children -> content )		1255844	1					
ANR	1256546	Callee	estrdup		1255844	0					
ANR	1256547	Identifier	estrdup		1255844	0					
ANR	1256548	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256549	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256550	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256551	CastTarget	char *		1255844	0					
ANR	1256552	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256553	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256554	Identifier	attr		1255844	0					
ANR	1256555	Identifier	children		1255844	1					
ANR	1256556	Identifier	content		1255844	1					
ANR	1256557	ElseStatement	else		1255844	0					
ANR	1256558	IfStatement	"if ( attr_is_equal_ex ( attr , ""fixed"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256559	Condition	"attr_is_equal_ex ( attr , ""fixed"" , SCHEMA_NAMESPACE )"	1825:13:58335:58383	1255844	0	True				
ANR	1256560	CallExpression	"attr_is_equal_ex ( attr , ""fixed"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256561	Callee	attr_is_equal_ex		1255844	0					
ANR	1256562	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256563	ArgumentList	attr		1255844	1					
ANR	1256564	Argument	attr		1255844	0					
ANR	1256565	Identifier	attr		1255844	0					
ANR	1256566	Argument	"""fixed"""		1255844	1					
ANR	1256567	PrimaryExpression	"""fixed"""		1255844	0					
ANR	1256568	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256569	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256570	CompoundStatement		97:64:2876:2876	1255844	1					
ANR	1256571	ExpressionStatement	newAttr -> fixed = estrdup ( ( char * ) attr -> children -> content )	1826:3:58391:58447	1255844	0	True				
ANR	1256572	AssignmentExpression	newAttr -> fixed = estrdup ( ( char * ) attr -> children -> content )		1255844	0		=			
ANR	1256573	PtrMemberAccess	newAttr -> fixed		1255844	0					
ANR	1256574	Identifier	newAttr		1255844	0					
ANR	1256575	Identifier	fixed		1255844	1					
ANR	1256576	CallExpression	estrdup ( ( char * ) attr -> children -> content )		1255844	1					
ANR	1256577	Callee	estrdup		1255844	0					
ANR	1256578	Identifier	estrdup		1255844	0					
ANR	1256579	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256580	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256581	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256582	CastTarget	char *		1255844	0					
ANR	1256583	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256584	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256585	Identifier	attr		1255844	0					
ANR	1256586	Identifier	children		1255844	1					
ANR	1256587	Identifier	content		1255844	1					
ANR	1256588	ElseStatement	else		1255844	0					
ANR	1256589	IfStatement	"if ( attr_is_equal_ex ( attr , ""form"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256590	Condition	"attr_is_equal_ex ( attr , ""form"" , SCHEMA_NAMESPACE )"	1827:13:58462:58509	1255844	0	True				
ANR	1256591	CallExpression	"attr_is_equal_ex ( attr , ""form"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256592	Callee	attr_is_equal_ex		1255844	0					
ANR	1256593	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256594	ArgumentList	attr		1255844	1					
ANR	1256595	Argument	attr		1255844	0					
ANR	1256596	Identifier	attr		1255844	0					
ANR	1256597	Argument	"""form"""		1255844	1					
ANR	1256598	PrimaryExpression	"""form"""		1255844	0					
ANR	1256599	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256600	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256601	CompoundStatement		99:63:3002:3002	1255844	1					
ANR	1256602	IfStatement	"if ( strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) == 0 )"		1255844	0					
ANR	1256603	Condition	"strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) == 0"	1828:7:58521:58598	1255844	0	True				
ANR	1256604	EqualityExpression	"strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) == 0"		1255844	0		==			
ANR	1256605	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"		1255844	0					
ANR	1256606	Callee	strncmp		1255844	0					
ANR	1256607	Identifier	strncmp		1255844	0					
ANR	1256608	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256609	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256610	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256611	CastTarget	char *		1255844	0					
ANR	1256612	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256613	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256614	Identifier	attr		1255844	0					
ANR	1256615	Identifier	children		1255844	1					
ANR	1256616	Identifier	content		1255844	1					
ANR	1256617	Argument	"""qualified"""		1255844	1					
ANR	1256618	PrimaryExpression	"""qualified"""		1255844	0					
ANR	1256619	Argument	"sizeof ( ""qualified"" )"		1255844	2					
ANR	1256620	SizeofExpression	"sizeof ( ""qualified"" )"		1255844	0					
ANR	1256621	Sizeof	sizeof		1255844	0					
ANR	1256622	PrimaryExpression	"""qualified"""		1255844	1					
ANR	1256623	PrimaryExpression	0		1255844	1					
ANR	1256624	CompoundStatement		100:87:3091:3091	1255844	1					
ANR	1256625	ExpressionStatement	newAttr -> form = XSD_FORM_QUALIFIED	1829:5:58608:58642	1255844	0	True				
ANR	1256626	AssignmentExpression	newAttr -> form = XSD_FORM_QUALIFIED		1255844	0		=			
ANR	1256627	PtrMemberAccess	newAttr -> form		1255844	0					
ANR	1256628	Identifier	newAttr		1255844	0					
ANR	1256629	Identifier	form		1255844	1					
ANR	1256630	Identifier	XSD_FORM_QUALIFIED		1255844	1					
ANR	1256631	ElseStatement	else		1255844	0					
ANR	1256632	IfStatement	"if ( strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) ) == 0 )"		1255844	0					
ANR	1256633	Condition	"strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) ) == 0"	1830:14:58658:58739	1255844	0	True				
ANR	1256634	EqualityExpression	"strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) ) == 0"		1255844	0		==			
ANR	1256635	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""unqualified"" , sizeof ( ""unqualified"" ) )"		1255844	0					
ANR	1256636	Callee	strncmp		1255844	0					
ANR	1256637	Identifier	strncmp		1255844	0					
ANR	1256638	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256639	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256640	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256641	CastTarget	char *		1255844	0					
ANR	1256642	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256643	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256644	Identifier	attr		1255844	0					
ANR	1256645	Identifier	children		1255844	1					
ANR	1256646	Identifier	content		1255844	1					
ANR	1256647	Argument	"""unqualified"""		1255844	1					
ANR	1256648	PrimaryExpression	"""unqualified"""		1255844	0					
ANR	1256649	Argument	"sizeof ( ""unqualified"" )"		1255844	2					
ANR	1256650	SizeofExpression	"sizeof ( ""unqualified"" )"		1255844	0					
ANR	1256651	Sizeof	sizeof		1255844	0					
ANR	1256652	PrimaryExpression	"""unqualified"""		1255844	1					
ANR	1256653	PrimaryExpression	0		1255844	1					
ANR	1256654	CompoundStatement		102:98:3232:3232	1255844	1					
ANR	1256655	ExpressionStatement	newAttr -> form = XSD_FORM_UNQUALIFIED	1831:5:58749:58785	1255844	0	True				
ANR	1256656	AssignmentExpression	newAttr -> form = XSD_FORM_UNQUALIFIED		1255844	0		=			
ANR	1256657	PtrMemberAccess	newAttr -> form		1255844	0					
ANR	1256658	Identifier	newAttr		1255844	0					
ANR	1256659	Identifier	form		1255844	1					
ANR	1256660	Identifier	XSD_FORM_UNQUALIFIED		1255844	1					
ANR	1256661	ElseStatement	else		1255844	0					
ANR	1256662	CompoundStatement		104:10:3287:3287	1255844	0					
ANR	1256663	ExpressionStatement	newAttr -> form = XSD_FORM_DEFAULT	1833:5:58804:58836	1255844	0	True				
ANR	1256664	AssignmentExpression	newAttr -> form = XSD_FORM_DEFAULT		1255844	0		=			
ANR	1256665	PtrMemberAccess	newAttr -> form		1255844	0					
ANR	1256666	Identifier	newAttr		1255844	0					
ANR	1256667	Identifier	form		1255844	1					
ANR	1256668	Identifier	XSD_FORM_DEFAULT		1255844	1					
ANR	1256669	ElseStatement	else		1255844	0					
ANR	1256670	IfStatement	"if ( attr_is_equal_ex ( attr , ""id"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256671	Condition	"attr_is_equal_ex ( attr , ""id"" , SCHEMA_NAMESPACE )"	1835:13:58856:58901	1255844	0	True				
ANR	1256672	CallExpression	"attr_is_equal_ex ( attr , ""id"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256673	Callee	attr_is_equal_ex		1255844	0					
ANR	1256674	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256675	ArgumentList	attr		1255844	1					
ANR	1256676	Argument	attr		1255844	0					
ANR	1256677	Identifier	attr		1255844	0					
ANR	1256678	Argument	"""id"""		1255844	1					
ANR	1256679	PrimaryExpression	"""id"""		1255844	0					
ANR	1256680	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256681	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256682	CompoundStatement		107:61:3394:3394	1255844	1					
ANR	1256683	ElseStatement	else		1255844	0					
ANR	1256684	IfStatement	"if ( attr_is_equal_ex ( attr , ""name"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256685	Condition	"attr_is_equal_ex ( attr , ""name"" , SCHEMA_NAMESPACE )"	1837:13:58933:58980	1255844	0	True				
ANR	1256686	CallExpression	"attr_is_equal_ex ( attr , ""name"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256687	Callee	attr_is_equal_ex		1255844	0					
ANR	1256688	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256689	ArgumentList	attr		1255844	1					
ANR	1256690	Argument	attr		1255844	0					
ANR	1256691	Identifier	attr		1255844	0					
ANR	1256692	Argument	"""name"""		1255844	1					
ANR	1256693	PrimaryExpression	"""name"""		1255844	0					
ANR	1256694	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256695	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256696	CompoundStatement		109:63:3473:3473	1255844	1					
ANR	1256697	ExpressionStatement	newAttr -> name = estrdup ( ( char * ) attr -> children -> content )	1838:3:58988:59043	1255844	0	True				
ANR	1256698	AssignmentExpression	newAttr -> name = estrdup ( ( char * ) attr -> children -> content )		1255844	0		=			
ANR	1256699	PtrMemberAccess	newAttr -> name		1255844	0					
ANR	1256700	Identifier	newAttr		1255844	0					
ANR	1256701	Identifier	name		1255844	1					
ANR	1256702	CallExpression	estrdup ( ( char * ) attr -> children -> content )		1255844	1					
ANR	1256703	Callee	estrdup		1255844	0					
ANR	1256704	Identifier	estrdup		1255844	0					
ANR	1256705	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256706	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256707	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256708	CastTarget	char *		1255844	0					
ANR	1256709	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256710	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256711	Identifier	attr		1255844	0					
ANR	1256712	Identifier	children		1255844	1					
ANR	1256713	Identifier	content		1255844	1					
ANR	1256714	ElseStatement	else		1255844	0					
ANR	1256715	IfStatement	"if ( attr_is_equal_ex ( attr , ""ref"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256716	Condition	"attr_is_equal_ex ( attr , ""ref"" , SCHEMA_NAMESPACE )"	1839:13:59058:59104	1255844	0	True				
ANR	1256717	CallExpression	"attr_is_equal_ex ( attr , ""ref"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256718	Callee	attr_is_equal_ex		1255844	0					
ANR	1256719	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256720	ArgumentList	attr		1255844	1					
ANR	1256721	Argument	attr		1255844	0					
ANR	1256722	Identifier	attr		1255844	0					
ANR	1256723	Argument	"""ref"""		1255844	1					
ANR	1256724	PrimaryExpression	"""ref"""		1255844	0					
ANR	1256725	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256726	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256727	CompoundStatement		111:62:3597:3597	1255844	1					
ANR	1256728	ElseStatement	else		1255844	0					
ANR	1256729	IfStatement	"if ( attr_is_equal_ex ( attr , ""type"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256730	Condition	"attr_is_equal_ex ( attr , ""type"" , SCHEMA_NAMESPACE )"	1841:13:59149:59196	1255844	0	True				
ANR	1256731	CallExpression	"attr_is_equal_ex ( attr , ""type"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256732	Callee	attr_is_equal_ex		1255844	0					
ANR	1256733	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256734	ArgumentList	attr		1255844	1					
ANR	1256735	Argument	attr		1255844	0					
ANR	1256736	Identifier	attr		1255844	0					
ANR	1256737	Argument	"""type"""		1255844	1					
ANR	1256738	PrimaryExpression	"""type"""		1255844	0					
ANR	1256739	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256740	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256741	CompoundStatement		113:63:3689:3689	1255844	1					
ANR	1256742	ElseStatement	else		1255844	0					
ANR	1256743	IfStatement	"if ( attr_is_equal_ex ( attr , ""use"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256744	Condition	"attr_is_equal_ex ( attr , ""use"" , SCHEMA_NAMESPACE )"	1843:13:59241:59287	1255844	0	True				
ANR	1256745	CallExpression	"attr_is_equal_ex ( attr , ""use"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1256746	Callee	attr_is_equal_ex		1255844	0					
ANR	1256747	Identifier	attr_is_equal_ex		1255844	0					
ANR	1256748	ArgumentList	attr		1255844	1					
ANR	1256749	Argument	attr		1255844	0					
ANR	1256750	Identifier	attr		1255844	0					
ANR	1256751	Argument	"""use"""		1255844	1					
ANR	1256752	PrimaryExpression	"""use"""		1255844	0					
ANR	1256753	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1256754	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256755	CompoundStatement		115:62:3780:3780	1255844	1					
ANR	1256756	IfStatement	"if ( strncmp ( ( char * ) attr -> children -> content , ""prohibited"" , sizeof ( ""prohibited"" ) ) == 0 )"		1255844	0					
ANR	1256757	Condition	"strncmp ( ( char * ) attr -> children -> content , ""prohibited"" , sizeof ( ""prohibited"" ) ) == 0"	1844:7:59299:59378	1255844	0	True				
ANR	1256758	EqualityExpression	"strncmp ( ( char * ) attr -> children -> content , ""prohibited"" , sizeof ( ""prohibited"" ) ) == 0"		1255844	0		==			
ANR	1256759	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""prohibited"" , sizeof ( ""prohibited"" ) )"		1255844	0					
ANR	1256760	Callee	strncmp		1255844	0					
ANR	1256761	Identifier	strncmp		1255844	0					
ANR	1256762	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256763	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256764	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256765	CastTarget	char *		1255844	0					
ANR	1256766	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256767	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256768	Identifier	attr		1255844	0					
ANR	1256769	Identifier	children		1255844	1					
ANR	1256770	Identifier	content		1255844	1					
ANR	1256771	Argument	"""prohibited"""		1255844	1					
ANR	1256772	PrimaryExpression	"""prohibited"""		1255844	0					
ANR	1256773	Argument	"sizeof ( ""prohibited"" )"		1255844	2					
ANR	1256774	SizeofExpression	"sizeof ( ""prohibited"" )"		1255844	0					
ANR	1256775	Sizeof	sizeof		1255844	0					
ANR	1256776	PrimaryExpression	"""prohibited"""		1255844	1					
ANR	1256777	PrimaryExpression	0		1255844	1					
ANR	1256778	CompoundStatement		116:89:3871:3871	1255844	1					
ANR	1256779	ExpressionStatement	newAttr -> use = XSD_USE_PROHIBITED	1845:5:59388:59421	1255844	0	True				
ANR	1256780	AssignmentExpression	newAttr -> use = XSD_USE_PROHIBITED		1255844	0		=			
ANR	1256781	PtrMemberAccess	newAttr -> use		1255844	0					
ANR	1256782	Identifier	newAttr		1255844	0					
ANR	1256783	Identifier	use		1255844	1					
ANR	1256784	Identifier	XSD_USE_PROHIBITED		1255844	1					
ANR	1256785	ElseStatement	else		1255844	0					
ANR	1256786	IfStatement	"if ( strncmp ( ( char * ) attr -> children -> content , ""required"" , sizeof ( ""required"" ) ) == 0 )"		1255844	0					
ANR	1256787	Condition	"strncmp ( ( char * ) attr -> children -> content , ""required"" , sizeof ( ""required"" ) ) == 0"	1846:14:59437:59512	1255844	0	True				
ANR	1256788	EqualityExpression	"strncmp ( ( char * ) attr -> children -> content , ""required"" , sizeof ( ""required"" ) ) == 0"		1255844	0		==			
ANR	1256789	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""required"" , sizeof ( ""required"" ) )"		1255844	0					
ANR	1256790	Callee	strncmp		1255844	0					
ANR	1256791	Identifier	strncmp		1255844	0					
ANR	1256792	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256793	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256794	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256795	CastTarget	char *		1255844	0					
ANR	1256796	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256797	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256798	Identifier	attr		1255844	0					
ANR	1256799	Identifier	children		1255844	1					
ANR	1256800	Identifier	content		1255844	1					
ANR	1256801	Argument	"""required"""		1255844	1					
ANR	1256802	PrimaryExpression	"""required"""		1255844	0					
ANR	1256803	Argument	"sizeof ( ""required"" )"		1255844	2					
ANR	1256804	SizeofExpression	"sizeof ( ""required"" )"		1255844	0					
ANR	1256805	Sizeof	sizeof		1255844	0					
ANR	1256806	PrimaryExpression	"""required"""		1255844	1					
ANR	1256807	PrimaryExpression	0		1255844	1					
ANR	1256808	CompoundStatement		118:92:4005:4005	1255844	1					
ANR	1256809	ExpressionStatement	newAttr -> use = XSD_USE_REQUIRED	1847:5:59522:59553	1255844	0	True				
ANR	1256810	AssignmentExpression	newAttr -> use = XSD_USE_REQUIRED		1255844	0		=			
ANR	1256811	PtrMemberAccess	newAttr -> use		1255844	0					
ANR	1256812	Identifier	newAttr		1255844	0					
ANR	1256813	Identifier	use		1255844	1					
ANR	1256814	Identifier	XSD_USE_REQUIRED		1255844	1					
ANR	1256815	ElseStatement	else		1255844	0					
ANR	1256816	IfStatement	"if ( strncmp ( ( char * ) attr -> children -> content , ""optional"" , sizeof ( ""optional"" ) ) == 0 )"		1255844	0					
ANR	1256817	Condition	"strncmp ( ( char * ) attr -> children -> content , ""optional"" , sizeof ( ""optional"" ) ) == 0"	1848:14:59569:59644	1255844	0	True				
ANR	1256818	EqualityExpression	"strncmp ( ( char * ) attr -> children -> content , ""optional"" , sizeof ( ""optional"" ) ) == 0"		1255844	0		==			
ANR	1256819	CallExpression	"strncmp ( ( char * ) attr -> children -> content , ""optional"" , sizeof ( ""optional"" ) )"		1255844	0					
ANR	1256820	Callee	strncmp		1255844	0					
ANR	1256821	Identifier	strncmp		1255844	0					
ANR	1256822	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1256823	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1256824	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1256825	CastTarget	char *		1255844	0					
ANR	1256826	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1256827	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256828	Identifier	attr		1255844	0					
ANR	1256829	Identifier	children		1255844	1					
ANR	1256830	Identifier	content		1255844	1					
ANR	1256831	Argument	"""optional"""		1255844	1					
ANR	1256832	PrimaryExpression	"""optional"""		1255844	0					
ANR	1256833	Argument	"sizeof ( ""optional"" )"		1255844	2					
ANR	1256834	SizeofExpression	"sizeof ( ""optional"" )"		1255844	0					
ANR	1256835	Sizeof	sizeof		1255844	0					
ANR	1256836	PrimaryExpression	"""optional"""		1255844	1					
ANR	1256837	PrimaryExpression	0		1255844	1					
ANR	1256838	CompoundStatement		120:92:4137:4137	1255844	1					
ANR	1256839	ExpressionStatement	newAttr -> use = XSD_USE_OPTIONAL	1849:5:59654:59685	1255844	0	True				
ANR	1256840	AssignmentExpression	newAttr -> use = XSD_USE_OPTIONAL		1255844	0		=			
ANR	1256841	PtrMemberAccess	newAttr -> use		1255844	0					
ANR	1256842	Identifier	newAttr		1255844	0					
ANR	1256843	Identifier	use		1255844	1					
ANR	1256844	Identifier	XSD_USE_OPTIONAL		1255844	1					
ANR	1256845	ElseStatement	else		1255844	0					
ANR	1256846	CompoundStatement		122:10:4187:4187	1255844	0					
ANR	1256847	ExpressionStatement	newAttr -> use = XSD_USE_DEFAULT	1851:5:59704:59734	1255844	0	True				
ANR	1256848	AssignmentExpression	newAttr -> use = XSD_USE_DEFAULT		1255844	0		=			
ANR	1256849	PtrMemberAccess	newAttr -> use		1255844	0					
ANR	1256850	Identifier	newAttr		1255844	0					
ANR	1256851	Identifier	use		1255844	1					
ANR	1256852	Identifier	XSD_USE_DEFAULT		1255844	1					
ANR	1256853	ElseStatement	else		1255844	0					
ANR	1256854	CompoundStatement		126:3:4245:4280	1255844	0					
ANR	1256855	IdentifierDeclStatement	xmlNsPtr nsPtr = attr_find_ns ( attr ) ;	1854:3:59755:59790	1255844	0	True				
ANR	1256856	IdentifierDecl	nsPtr = attr_find_ns ( attr )		1255844	0					
ANR	1256857	IdentifierDeclType	xmlNsPtr		1255844	0					
ANR	1256858	Identifier	nsPtr		1255844	1					
ANR	1256859	AssignmentExpression	nsPtr = attr_find_ns ( attr )		1255844	2		=			
ANR	1256860	Identifier	nsPtr		1255844	0					
ANR	1256861	CallExpression	attr_find_ns ( attr )		1255844	1					
ANR	1256862	Callee	attr_find_ns		1255844	0					
ANR	1256863	Identifier	attr_find_ns		1255844	0					
ANR	1256864	ArgumentList	attr		1255844	1					
ANR	1256865	Argument	attr		1255844	0					
ANR	1256866	Identifier	attr		1255844	0					
ANR	1256867	IfStatement	"if ( strncmp ( ( char * ) nsPtr -> href , SCHEMA_NAMESPACE , sizeof ( SCHEMA_NAMESPACE ) ) )"		1255844	1					
ANR	1256868	Condition	"strncmp ( ( char * ) nsPtr -> href , SCHEMA_NAMESPACE , sizeof ( SCHEMA_NAMESPACE ) )"	1856:7:59800:59870	1255844	0	True				
ANR	1256869	CallExpression	"strncmp ( ( char * ) nsPtr -> href , SCHEMA_NAMESPACE , sizeof ( SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1256870	Callee	strncmp		1255844	0					
ANR	1256871	Identifier	strncmp		1255844	0					
ANR	1256872	ArgumentList	( char * ) nsPtr -> href		1255844	1					
ANR	1256873	Argument	( char * ) nsPtr -> href		1255844	0					
ANR	1256874	CastExpression	( char * ) nsPtr -> href		1255844	0					
ANR	1256875	CastTarget	char *		1255844	0					
ANR	1256876	PtrMemberAccess	nsPtr -> href		1255844	1					
ANR	1256877	Identifier	nsPtr		1255844	0					
ANR	1256878	Identifier	href		1255844	1					
ANR	1256879	Argument	SCHEMA_NAMESPACE		1255844	1					
ANR	1256880	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1256881	Argument	sizeof ( SCHEMA_NAMESPACE )		1255844	2					
ANR	1256882	SizeofExpression	sizeof ( SCHEMA_NAMESPACE )		1255844	0					
ANR	1256883	Sizeof	sizeof		1255844	0					
ANR	1256884	SizeofOperand	SCHEMA_NAMESPACE		1255844	1					
ANR	1256885	CompoundStatement		132:4:4445:4461	1255844	1					
ANR	1256886	IdentifierDeclStatement	smart_str key2 = { 0 } ;	1857:4:59879:59899	1255844	0	True				
ANR	1256887	IdentifierDecl	key2 = { 0 }		1255844	0					
ANR	1256888	IdentifierDeclType	smart_str		1255844	0					
ANR	1256889	Identifier	key2		1255844	1					
ANR	1256890	AssignmentExpression	key2 = { 0 }		1255844	2		=			
ANR	1256891	Identifier	key2		1255844	0					
ANR	1256892	InitializerList	0		1255844	1					
ANR	1256893	PrimaryExpression	0		1255844	0					
ANR	1256894	IdentifierDeclStatement	sdlExtraAttributePtr ext ;	1858:4:59905:59929	1255844	1	True				
ANR	1256895	IdentifierDecl	ext		1255844	0					
ANR	1256896	IdentifierDeclType	sdlExtraAttributePtr		1255844	0					
ANR	1256897	Identifier	ext		1255844	1					
ANR	1256898	IdentifierDeclStatement	xmlNsPtr nsptr ;	1859:4:59935:59949	1255844	2	True				
ANR	1256899	IdentifierDecl	nsptr		1255844	0					
ANR	1256900	IdentifierDeclType	xmlNsPtr		1255844	0					
ANR	1256901	Identifier	nsptr		1255844	1					
ANR	1256902	IdentifierDeclStatement	"char * value , * ns ;"	1860:4:59955:59971	1255844	3	True				
ANR	1256903	IdentifierDecl	* value		1255844	0					
ANR	1256904	IdentifierDeclType	char *		1255844	0					
ANR	1256905	Identifier	value		1255844	1					
ANR	1256906	IdentifierDecl	* ns		1255844	1					
ANR	1256907	IdentifierDeclType	char *		1255844	0					
ANR	1256908	Identifier	ns		1255844	1					
ANR	1256909	ExpressionStatement	ext = emalloc ( sizeof ( sdlExtraAttribute ) )	1862:4:59978:60018	1255844	4	True				
ANR	1256910	AssignmentExpression	ext = emalloc ( sizeof ( sdlExtraAttribute ) )		1255844	0		=			
ANR	1256911	Identifier	ext		1255844	0					
ANR	1256912	CallExpression	emalloc ( sizeof ( sdlExtraAttribute ) )		1255844	1					
ANR	1256913	Callee	emalloc		1255844	0					
ANR	1256914	Identifier	emalloc		1255844	0					
ANR	1256915	ArgumentList	sizeof ( sdlExtraAttribute )		1255844	1					
ANR	1256916	Argument	sizeof ( sdlExtraAttribute )		1255844	0					
ANR	1256917	SizeofExpression	sizeof ( sdlExtraAttribute )		1255844	0					
ANR	1256918	Sizeof	sizeof		1255844	0					
ANR	1256919	SizeofOperand	sdlExtraAttribute		1255844	1					
ANR	1256920	ExpressionStatement	"memset ( ext , 0 , sizeof ( sdlExtraAttribute ) )"	1863:4:60024:60065	1255844	5	True				
ANR	1256921	CallExpression	"memset ( ext , 0 , sizeof ( sdlExtraAttribute ) )"		1255844	0					
ANR	1256922	Callee	memset		1255844	0					
ANR	1256923	Identifier	memset		1255844	0					
ANR	1256924	ArgumentList	ext		1255844	1					
ANR	1256925	Argument	ext		1255844	0					
ANR	1256926	Identifier	ext		1255844	0					
ANR	1256927	Argument	0		1255844	1					
ANR	1256928	PrimaryExpression	0		1255844	0					
ANR	1256929	Argument	sizeof ( sdlExtraAttribute )		1255844	2					
ANR	1256930	SizeofExpression	sizeof ( sdlExtraAttribute )		1255844	0					
ANR	1256931	Sizeof	sizeof		1255844	0					
ANR	1256932	SizeofOperand	sdlExtraAttribute		1255844	1					
ANR	1256933	ExpressionStatement	"parse_namespace ( attr -> children -> content , & value , & ns )"	1864:4:60071:60124	1255844	6	True				
ANR	1256934	CallExpression	"parse_namespace ( attr -> children -> content , & value , & ns )"		1255844	0					
ANR	1256935	Callee	parse_namespace		1255844	0					
ANR	1256936	Identifier	parse_namespace		1255844	0					
ANR	1256937	ArgumentList	attr -> children -> content		1255844	1					
ANR	1256938	Argument	attr -> children -> content		1255844	0					
ANR	1256939	PtrMemberAccess	attr -> children -> content		1255844	0					
ANR	1256940	PtrMemberAccess	attr -> children		1255844	0					
ANR	1256941	Identifier	attr		1255844	0					
ANR	1256942	Identifier	children		1255844	1					
ANR	1256943	Identifier	content		1255844	1					
ANR	1256944	Argument	& value		1255844	1					
ANR	1256945	UnaryOperationExpression	& value		1255844	0					
ANR	1256946	UnaryOperator	&		1255844	0					
ANR	1256947	Identifier	value		1255844	1					
ANR	1256948	Argument	& ns		1255844	2					
ANR	1256949	UnaryOperationExpression	& ns		1255844	0					
ANR	1256950	UnaryOperator	&		1255844	0					
ANR	1256951	Identifier	ns		1255844	1					
ANR	1256952	ExpressionStatement	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"	1865:4:60130:60188	1255844	7	True				
ANR	1256953	AssignmentExpression	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1255844	0		=			
ANR	1256954	Identifier	nsptr		1255844	0					
ANR	1256955	CallExpression	"xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1255844	1					
ANR	1256956	Callee	xmlSearchNs		1255844	0					
ANR	1256957	Identifier	xmlSearchNs		1255844	0					
ANR	1256958	ArgumentList	attr -> doc		1255844	1					
ANR	1256959	Argument	attr -> doc		1255844	0					
ANR	1256960	PtrMemberAccess	attr -> doc		1255844	0					
ANR	1256961	Identifier	attr		1255844	0					
ANR	1256962	Identifier	doc		1255844	1					
ANR	1256963	Argument	attr -> parent		1255844	1					
ANR	1256964	PtrMemberAccess	attr -> parent		1255844	0					
ANR	1256965	Identifier	attr		1255844	0					
ANR	1256966	Identifier	parent		1255844	1					
ANR	1256967	Argument	BAD_CAST ( ns )		1255844	2					
ANR	1256968	CallExpression	BAD_CAST ( ns )		1255844	0					
ANR	1256969	Callee	BAD_CAST		1255844	0					
ANR	1256970	Identifier	BAD_CAST		1255844	0					
ANR	1256971	ArgumentList	ns		1255844	1					
ANR	1256972	Argument	ns		1255844	0					
ANR	1256973	Identifier	ns		1255844	0					
ANR	1256974	IfStatement	if ( nsptr )		1255844	8					
ANR	1256975	Condition	nsptr	1866:8:60198:60202	1255844	0	True				
ANR	1256976	Identifier	nsptr		1255844	0					
ANR	1256977	CompoundStatement		138:15:4695:4695	1255844	1					
ANR	1256978	ExpressionStatement	ext -> ns = estrdup ( ( char * ) nsptr -> href )	1867:5:60212:60249	1255844	0	True				
ANR	1256979	AssignmentExpression	ext -> ns = estrdup ( ( char * ) nsptr -> href )		1255844	0		=			
ANR	1256980	PtrMemberAccess	ext -> ns		1255844	0					
ANR	1256981	Identifier	ext		1255844	0					
ANR	1256982	Identifier	ns		1255844	1					
ANR	1256983	CallExpression	estrdup ( ( char * ) nsptr -> href )		1255844	1					
ANR	1256984	Callee	estrdup		1255844	0					
ANR	1256985	Identifier	estrdup		1255844	0					
ANR	1256986	ArgumentList	( char * ) nsptr -> href		1255844	1					
ANR	1256987	Argument	( char * ) nsptr -> href		1255844	0					
ANR	1256988	CastExpression	( char * ) nsptr -> href		1255844	0					
ANR	1256989	CastTarget	char *		1255844	0					
ANR	1256990	PtrMemberAccess	nsptr -> href		1255844	1					
ANR	1256991	Identifier	nsptr		1255844	0					
ANR	1256992	Identifier	href		1255844	1					
ANR	1256993	ExpressionStatement	ext -> val = estrdup ( value )	1868:5:60256:60281	1255844	1	True				
ANR	1256994	AssignmentExpression	ext -> val = estrdup ( value )		1255844	0		=			
ANR	1256995	PtrMemberAccess	ext -> val		1255844	0					
ANR	1256996	Identifier	ext		1255844	0					
ANR	1256997	Identifier	val		1255844	1					
ANR	1256998	CallExpression	estrdup ( value )		1255844	1					
ANR	1256999	Callee	estrdup		1255844	0					
ANR	1257000	Identifier	estrdup		1255844	0					
ANR	1257001	ArgumentList	value		1255844	1					
ANR	1257002	Argument	value		1255844	0					
ANR	1257003	Identifier	value		1255844	0					
ANR	1257004	ElseStatement	else		1255844	0					
ANR	1257005	CompoundStatement		141:11:4784:4784	1255844	0					
ANR	1257006	ExpressionStatement	ext -> val = estrdup ( ( char * ) attr -> children -> content )	1870:5:60301:60351	1255844	0	True				
ANR	1257007	AssignmentExpression	ext -> val = estrdup ( ( char * ) attr -> children -> content )		1255844	0		=			
ANR	1257008	PtrMemberAccess	ext -> val		1255844	0					
ANR	1257009	Identifier	ext		1255844	0					
ANR	1257010	Identifier	val		1255844	1					
ANR	1257011	CallExpression	estrdup ( ( char * ) attr -> children -> content )		1255844	1					
ANR	1257012	Callee	estrdup		1255844	0					
ANR	1257013	Identifier	estrdup		1255844	0					
ANR	1257014	ArgumentList	( char * ) attr -> children -> content		1255844	1					
ANR	1257015	Argument	( char * ) attr -> children -> content		1255844	0					
ANR	1257016	CastExpression	( char * ) attr -> children -> content		1255844	0					
ANR	1257017	CastTarget	char *		1255844	0					
ANR	1257018	PtrMemberAccess	attr -> children -> content		1255844	1					
ANR	1257019	PtrMemberAccess	attr -> children		1255844	0					
ANR	1257020	Identifier	attr		1255844	0					
ANR	1257021	Identifier	children		1255844	1					
ANR	1257022	Identifier	content		1255844	1					
ANR	1257023	IfStatement	if ( ns )		1255844	9					
ANR	1257024	Condition	ns	1872:8:60367:60368	1255844	0	True				
ANR	1257025	Identifier	ns		1255844	0					
ANR	1257026	CompoundStatement		144:12:4861:4861	1255844	1					
ANR	1257027	ExpressionStatement	efree ( ns )	1872:13:60372:60381	1255844	0	True				
ANR	1257028	CallExpression	efree ( ns )		1255844	0					
ANR	1257029	Callee	efree		1255844	0					
ANR	1257030	Identifier	efree		1255844	0					
ANR	1257031	ArgumentList	ns		1255844	1					
ANR	1257032	Argument	ns		1255844	0					
ANR	1257033	Identifier	ns		1255844	0					
ANR	1257034	ExpressionStatement	efree ( value )	1873:4:60388:60400	1255844	10	True				
ANR	1257035	CallExpression	efree ( value )		1255844	0					
ANR	1257036	Callee	efree		1255844	0					
ANR	1257037	Identifier	efree		1255844	0					
ANR	1257038	ArgumentList	value		1255844	1					
ANR	1257039	Argument	value		1255844	0					
ANR	1257040	Identifier	value		1255844	0					
ANR	1257041	IfStatement	if ( ! newAttr -> extraAttributes )		1255844	11					
ANR	1257042	Condition	! newAttr -> extraAttributes	1875:8:60411:60435	1255844	0	True				
ANR	1257043	UnaryOperationExpression	! newAttr -> extraAttributes		1255844	0					
ANR	1257044	UnaryOperator	!		1255844	0					
ANR	1257045	PtrMemberAccess	newAttr -> extraAttributes		1255844	1					
ANR	1257046	Identifier	newAttr		1255844	0					
ANR	1257047	Identifier	extraAttributes		1255844	1					
ANR	1257048	CompoundStatement		147:35:4928:4928	1255844	1					
ANR	1257049	ExpressionStatement	newAttr -> extraAttributes = emalloc ( sizeof ( HashTable ) )	1876:5:60445:60498	1255844	0	True				
ANR	1257050	AssignmentExpression	newAttr -> extraAttributes = emalloc ( sizeof ( HashTable ) )		1255844	0		=			
ANR	1257051	PtrMemberAccess	newAttr -> extraAttributes		1255844	0					
ANR	1257052	Identifier	newAttr		1255844	0					
ANR	1257053	Identifier	extraAttributes		1255844	1					
ANR	1257054	CallExpression	emalloc ( sizeof ( HashTable ) )		1255844	1					
ANR	1257055	Callee	emalloc		1255844	0					
ANR	1257056	Identifier	emalloc		1255844	0					
ANR	1257057	ArgumentList	sizeof ( HashTable )		1255844	1					
ANR	1257058	Argument	sizeof ( HashTable )		1255844	0					
ANR	1257059	SizeofExpression	sizeof ( HashTable )		1255844	0					
ANR	1257060	Sizeof	sizeof		1255844	0					
ANR	1257061	SizeofOperand	HashTable		1255844	1					
ANR	1257062	ExpressionStatement	"zend_hash_init ( newAttr -> extraAttributes , 0 , NULL , delete_extra_attribute , 0 )"	1877:5:60505:60581	1255844	1	True				
ANR	1257063	CallExpression	"zend_hash_init ( newAttr -> extraAttributes , 0 , NULL , delete_extra_attribute , 0 )"		1255844	0					
ANR	1257064	Callee	zend_hash_init		1255844	0					
ANR	1257065	Identifier	zend_hash_init		1255844	0					
ANR	1257066	ArgumentList	newAttr -> extraAttributes		1255844	1					
ANR	1257067	Argument	newAttr -> extraAttributes		1255844	0					
ANR	1257068	PtrMemberAccess	newAttr -> extraAttributes		1255844	0					
ANR	1257069	Identifier	newAttr		1255844	0					
ANR	1257070	Identifier	extraAttributes		1255844	1					
ANR	1257071	Argument	0		1255844	1					
ANR	1257072	PrimaryExpression	0		1255844	0					
ANR	1257073	Argument	NULL		1255844	2					
ANR	1257074	Identifier	NULL		1255844	0					
ANR	1257075	Argument	delete_extra_attribute		1255844	3					
ANR	1257076	Identifier	delete_extra_attribute		1255844	0					
ANR	1257077	Argument	0		1255844	4					
ANR	1257078	PrimaryExpression	0		1255844	0					
ANR	1257079	ExpressionStatement	"smart_str_appends ( & key2 , ( char * ) nsPtr -> href )"	1880:4:60594:60638	1255844	12	True				
ANR	1257080	CallExpression	"smart_str_appends ( & key2 , ( char * ) nsPtr -> href )"		1255844	0					
ANR	1257081	Callee	smart_str_appends		1255844	0					
ANR	1257082	Identifier	smart_str_appends		1255844	0					
ANR	1257083	ArgumentList	& key2		1255844	1					
ANR	1257084	Argument	& key2		1255844	0					
ANR	1257085	UnaryOperationExpression	& key2		1255844	0					
ANR	1257086	UnaryOperator	&		1255844	0					
ANR	1257087	Identifier	key2		1255844	1					
ANR	1257088	Argument	( char * ) nsPtr -> href		1255844	1					
ANR	1257089	CastExpression	( char * ) nsPtr -> href		1255844	0					
ANR	1257090	CastTarget	char *		1255844	0					
ANR	1257091	PtrMemberAccess	nsPtr -> href		1255844	1					
ANR	1257092	Identifier	nsPtr		1255844	0					
ANR	1257093	Identifier	href		1255844	1					
ANR	1257094	ExpressionStatement	"smart_str_appendc ( & key2 , ':' )"	1881:4:60644:60673	1255844	13	True				
ANR	1257095	CallExpression	"smart_str_appendc ( & key2 , ':' )"		1255844	0					
ANR	1257096	Callee	smart_str_appendc		1255844	0					
ANR	1257097	Identifier	smart_str_appendc		1255844	0					
ANR	1257098	ArgumentList	& key2		1255844	1					
ANR	1257099	Argument	& key2		1255844	0					
ANR	1257100	UnaryOperationExpression	& key2		1255844	0					
ANR	1257101	UnaryOperator	&		1255844	0					
ANR	1257102	Identifier	key2		1255844	1					
ANR	1257103	Argument	':'		1255844	1					
ANR	1257104	PrimaryExpression	':'		1255844	0					
ANR	1257105	ExpressionStatement	"smart_str_appends ( & key2 , ( char * ) attr -> name )"	1882:4:60679:60722	1255844	14	True				
ANR	1257106	CallExpression	"smart_str_appends ( & key2 , ( char * ) attr -> name )"		1255844	0					
ANR	1257107	Callee	smart_str_appends		1255844	0					
ANR	1257108	Identifier	smart_str_appends		1255844	0					
ANR	1257109	ArgumentList	& key2		1255844	1					
ANR	1257110	Argument	& key2		1255844	0					
ANR	1257111	UnaryOperationExpression	& key2		1255844	0					
ANR	1257112	UnaryOperator	&		1255844	0					
ANR	1257113	Identifier	key2		1255844	1					
ANR	1257114	Argument	( char * ) attr -> name		1255844	1					
ANR	1257115	CastExpression	( char * ) attr -> name		1255844	0					
ANR	1257116	CastTarget	char *		1255844	0					
ANR	1257117	PtrMemberAccess	attr -> name		1255844	1					
ANR	1257118	Identifier	attr		1255844	0					
ANR	1257119	Identifier	name		1255844	1					
ANR	1257120	ExpressionStatement	smart_str_0 ( & key2 )	1883:4:60728:60746	1255844	15	True				
ANR	1257121	CallExpression	smart_str_0 ( & key2 )		1255844	0					
ANR	1257122	Callee	smart_str_0		1255844	0					
ANR	1257123	Identifier	smart_str_0		1255844	0					
ANR	1257124	ArgumentList	& key2		1255844	1					
ANR	1257125	Argument	& key2		1255844	0					
ANR	1257126	UnaryOperationExpression	& key2		1255844	0					
ANR	1257127	UnaryOperator	&		1255844	0					
ANR	1257128	Identifier	key2		1255844	1					
ANR	1257129	ExpressionStatement	"zend_hash_add ( newAttr -> extraAttributes , key2 . c , key2 . len + 1 , & ext , sizeof ( sdlExtraAttributePtr ) , NULL )"	1884:4:60752:60855	1255844	16	True				
ANR	1257130	CallExpression	"zend_hash_add ( newAttr -> extraAttributes , key2 . c , key2 . len + 1 , & ext , sizeof ( sdlExtraAttributePtr ) , NULL )"		1255844	0					
ANR	1257131	Callee	zend_hash_add		1255844	0					
ANR	1257132	Identifier	zend_hash_add		1255844	0					
ANR	1257133	ArgumentList	newAttr -> extraAttributes		1255844	1					
ANR	1257134	Argument	newAttr -> extraAttributes		1255844	0					
ANR	1257135	PtrMemberAccess	newAttr -> extraAttributes		1255844	0					
ANR	1257136	Identifier	newAttr		1255844	0					
ANR	1257137	Identifier	extraAttributes		1255844	1					
ANR	1257138	Argument	key2 . c		1255844	1					
ANR	1257139	MemberAccess	key2 . c		1255844	0					
ANR	1257140	Identifier	key2		1255844	0					
ANR	1257141	Identifier	c		1255844	1					
ANR	1257142	Argument	key2 . len + 1		1255844	2					
ANR	1257143	AdditiveExpression	key2 . len + 1		1255844	0		+			
ANR	1257144	MemberAccess	key2 . len		1255844	0					
ANR	1257145	Identifier	key2		1255844	0					
ANR	1257146	Identifier	len		1255844	1					
ANR	1257147	PrimaryExpression	1		1255844	1					
ANR	1257148	Argument	& ext		1255844	3					
ANR	1257149	UnaryOperationExpression	& ext		1255844	0					
ANR	1257150	UnaryOperator	&		1255844	0					
ANR	1257151	Identifier	ext		1255844	1					
ANR	1257152	Argument	sizeof ( sdlExtraAttributePtr )		1255844	4					
ANR	1257153	SizeofExpression	sizeof ( sdlExtraAttributePtr )		1255844	0					
ANR	1257154	Sizeof	sizeof		1255844	0					
ANR	1257155	SizeofOperand	sdlExtraAttributePtr		1255844	1					
ANR	1257156	Argument	NULL		1255844	5					
ANR	1257157	Identifier	NULL		1255844	0					
ANR	1257158	ExpressionStatement	smart_str_free ( & key2 )	1885:4:60861:60882	1255844	17	True				
ANR	1257159	CallExpression	smart_str_free ( & key2 )		1255844	0					
ANR	1257160	Callee	smart_str_free		1255844	0					
ANR	1257161	Identifier	smart_str_free		1255844	0					
ANR	1257162	ArgumentList	& key2		1255844	1					
ANR	1257163	Argument	& key2		1255844	0					
ANR	1257164	UnaryOperationExpression	& key2		1255844	0					
ANR	1257165	UnaryOperator	&		1255844	0					
ANR	1257166	Identifier	key2		1255844	1					
ANR	1257167	ExpressionStatement	attr = attr -> next	1888:2:60895:60912	1255844	1	True				
ANR	1257168	AssignmentExpression	attr = attr -> next		1255844	0		=			
ANR	1257169	Identifier	attr		1255844	0					
ANR	1257170	PtrMemberAccess	attr -> next		1255844	1					
ANR	1257171	Identifier	attr		1255844	0					
ANR	1257172	Identifier	next		1255844	1					
ANR	1257173	IfStatement	if ( newAttr -> form == XSD_FORM_DEFAULT )		1255844	10					
ANR	1257174	Condition	newAttr -> form == XSD_FORM_DEFAULT	1890:5:60922:60954	1255844	0	True				
ANR	1257175	EqualityExpression	newAttr -> form == XSD_FORM_DEFAULT		1255844	0		==			
ANR	1257176	PtrMemberAccess	newAttr -> form		1255844	0					
ANR	1257177	Identifier	newAttr		1255844	0					
ANR	1257178	Identifier	form		1255844	1					
ANR	1257179	Identifier	XSD_FORM_DEFAULT		1255844	1					
ANR	1257180	CompoundStatement		163:3:5452:5488	1255844	1					
ANR	1257181	IdentifierDeclStatement	xmlNodePtr parent = attrType -> parent ;	1891:3:60962:60998	1255844	0	True				
ANR	1257182	IdentifierDecl	parent = attrType -> parent		1255844	0					
ANR	1257183	IdentifierDeclType	xmlNodePtr		1255844	0					
ANR	1257184	Identifier	parent		1255844	1					
ANR	1257185	AssignmentExpression	parent = attrType -> parent		1255844	2		=			
ANR	1257186	Identifier	parent		1255844	0					
ANR	1257187	PtrMemberAccess	attrType -> parent		1255844	1					
ANR	1257188	Identifier	attrType		1255844	0					
ANR	1257189	Identifier	parent		1255844	1					
ANR	1257190	WhileStatement	while ( parent )		1255844	1					
ANR	1257191	Condition	parent	1892:10:61010:61015	1255844	0	True				
ANR	1257192	Identifier	parent		1255844	0					
ANR	1257193	CompoundStatement		164:18:5508:5508	1255844	1					
ANR	1257194	IfStatement	"if ( node_is_equal_ex ( parent , ""schema"" , SCHEMA_NAMESPACE ) )"		1255844	0					
ANR	1257195	Condition	"node_is_equal_ex ( parent , ""schema"" , SCHEMA_NAMESPACE )"	1893:7:61027:61078	1255844	0	True				
ANR	1257196	CallExpression	"node_is_equal_ex ( parent , ""schema"" , SCHEMA_NAMESPACE )"		1255844	0					
ANR	1257197	Callee	node_is_equal_ex		1255844	0					
ANR	1257198	Identifier	node_is_equal_ex		1255844	0					
ANR	1257199	ArgumentList	parent		1255844	1					
ANR	1257200	Argument	parent		1255844	0					
ANR	1257201	Identifier	parent		1255844	0					
ANR	1257202	Argument	"""schema"""		1255844	1					
ANR	1257203	PrimaryExpression	"""schema"""		1255844	0					
ANR	1257204	Argument	SCHEMA_NAMESPACE		1255844	2					
ANR	1257205	Identifier	SCHEMA_NAMESPACE		1255844	0					
ANR	1257206	CompoundStatement		166:4:5577:5591	1255844	1					
ANR	1257207	IdentifierDeclStatement	xmlAttrPtr def ;	1894:4:61087:61101	1255844	0	True				
ANR	1257208	IdentifierDecl	def		1255844	0					
ANR	1257209	IdentifierDeclType	xmlAttrPtr		1255844	0					
ANR	1257210	Identifier	def		1255844	1					
ANR	1257211	ExpressionStatement	"def = get_attribute ( parent -> properties , ""attributeFormDefault"" )"	1895:4:61107:61170	1255844	1	True				
ANR	1257212	AssignmentExpression	"def = get_attribute ( parent -> properties , ""attributeFormDefault"" )"		1255844	0		=			
ANR	1257213	Identifier	def		1255844	0					
ANR	1257214	CallExpression	"get_attribute ( parent -> properties , ""attributeFormDefault"" )"		1255844	1					
ANR	1257215	Callee	get_attribute		1255844	0					
ANR	1257216	Identifier	get_attribute		1255844	0					
ANR	1257217	ArgumentList	parent -> properties		1255844	1					
ANR	1257218	Argument	parent -> properties		1255844	0					
ANR	1257219	PtrMemberAccess	parent -> properties		1255844	0					
ANR	1257220	Identifier	parent		1255844	0					
ANR	1257221	Identifier	properties		1255844	1					
ANR	1257222	Argument	"""attributeFormDefault"""		1255844	1					
ANR	1257223	PrimaryExpression	"""attributeFormDefault"""		1255844	0					
ANR	1257224	IfStatement	"if ( def == NULL || strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) ) )"		1255844	2					
ANR	1257225	Condition	"def == NULL || strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"	1896:7:61179:61265	1255844	0	True				
ANR	1257226	OrExpression	"def == NULL || strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"		1255844	0		||			
ANR	1257227	EqualityExpression	def == NULL		1255844	0		==			
ANR	1257228	Identifier	def		1255844	0					
ANR	1257229	Identifier	NULL		1255844	1					
ANR	1257230	CallExpression	"strncmp ( ( char * ) def -> children -> content , ""qualified"" , sizeof ( ""qualified"" ) )"		1255844	1					
ANR	1257231	Callee	strncmp		1255844	0					
ANR	1257232	Identifier	strncmp		1255844	0					
ANR	1257233	ArgumentList	( char * ) def -> children -> content		1255844	1					
ANR	1257234	Argument	( char * ) def -> children -> content		1255844	0					
ANR	1257235	CastExpression	( char * ) def -> children -> content		1255844	0					
ANR	1257236	CastTarget	char *		1255844	0					
ANR	1257237	PtrMemberAccess	def -> children -> content		1255844	1					
ANR	1257238	PtrMemberAccess	def -> children		1255844	0					
ANR	1257239	Identifier	def		1255844	0					
ANR	1257240	Identifier	children		1255844	1					
ANR	1257241	Identifier	content		1255844	1					
ANR	1257242	Argument	"""qualified"""		1255844	1					
ANR	1257243	PrimaryExpression	"""qualified"""		1255844	0					
ANR	1257244	Argument	"sizeof ( ""qualified"" )"		1255844	2					
ANR	1257245	SizeofExpression	"sizeof ( ""qualified"" )"		1255844	0					
ANR	1257246	Sizeof	sizeof		1255844	0					
ANR	1257247	PrimaryExpression	"""qualified"""		1255844	1					
ANR	1257248	CompoundStatement		168:96:5758:5758	1255844	1					
ANR	1257249	ExpressionStatement	newAttr -> form = XSD_FORM_UNQUALIFIED	1897:5:61275:61311	1255844	0	True				
ANR	1257250	AssignmentExpression	newAttr -> form = XSD_FORM_UNQUALIFIED		1255844	0		=			
ANR	1257251	PtrMemberAccess	newAttr -> form		1255844	0					
ANR	1257252	Identifier	newAttr		1255844	0					
ANR	1257253	Identifier	form		1255844	1					
ANR	1257254	Identifier	XSD_FORM_UNQUALIFIED		1255844	1					
ANR	1257255	ElseStatement	else		1255844	0					
ANR	1257256	CompoundStatement		170:11:5814:5814	1255844	0					
ANR	1257257	ExpressionStatement	newAttr -> form = XSD_FORM_QUALIFIED	1899:5:61331:61365	1255844	0	True				
ANR	1257258	AssignmentExpression	newAttr -> form = XSD_FORM_QUALIFIED		1255844	0		=			
ANR	1257259	PtrMemberAccess	newAttr -> form		1255844	0					
ANR	1257260	Identifier	newAttr		1255844	0					
ANR	1257261	Identifier	form		1255844	1					
ANR	1257262	Identifier	XSD_FORM_QUALIFIED		1255844	1					
ANR	1257263	BreakStatement	break ;	1901:4:61377:61382	1255844	3	True				
ANR	1257264	ExpressionStatement	parent = parent -> parent	1903:3:61392:61415	1255844	1	True				
ANR	1257265	AssignmentExpression	parent = parent -> parent		1255844	0		=			
ANR	1257266	Identifier	parent		1255844	0					
ANR	1257267	PtrMemberAccess	parent -> parent		1255844	1					
ANR	1257268	Identifier	parent		1255844	0					
ANR	1257269	Identifier	parent		1255844	1					
ANR	1257270	IfStatement	if ( parent == NULL )		1255844	2					
ANR	1257271	Condition	parent == NULL	1905:6:61428:61441	1255844	0	True				
ANR	1257272	EqualityExpression	parent == NULL		1255844	0		==			
ANR	1257273	Identifier	parent		1255844	0					
ANR	1257274	Identifier	NULL		1255844	1					
ANR	1257275	CompoundStatement		177:22:5934:5934	1255844	1					
ANR	1257276	ExpressionStatement	newAttr -> form = XSD_FORM_UNQUALIFIED	1906:3:61449:61485	1255844	0	True				
ANR	1257277	AssignmentExpression	newAttr -> form = XSD_FORM_UNQUALIFIED		1255844	0		=			
ANR	1257278	PtrMemberAccess	newAttr -> form		1255844	0					
ANR	1257279	Identifier	newAttr		1255844	0					
ANR	1257280	Identifier	form		1255844	1					
ANR	1257281	Identifier	XSD_FORM_UNQUALIFIED		1255844	1					
ANR	1257282	ExpressionStatement	trav = attrType -> children	1909:1:61496:61521	1255844	11	True				
ANR	1257283	AssignmentExpression	trav = attrType -> children		1255844	0		=			
ANR	1257284	Identifier	trav		1255844	0					
ANR	1257285	PtrMemberAccess	attrType -> children		1255844	1					
ANR	1257286	Identifier	attrType		1255844	0					
ANR	1257287	Identifier	children		1255844	1					
ANR	1257288	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1255844	12					
ANR	1257289	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	1910:5:61528:61576	1255844	0	True				
ANR	1257290	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1255844	0		&&			
ANR	1257291	EqualityExpression	trav != NULL		1255844	0		!=			
ANR	1257292	Identifier	trav		1255844	0					
ANR	1257293	Identifier	NULL		1255844	1					
ANR	1257294	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1255844	1					
ANR	1257295	Callee	node_is_equal		1255844	0					
ANR	1257296	Identifier	node_is_equal		1255844	0					
ANR	1257297	ArgumentList	trav		1255844	1					
ANR	1257298	Argument	trav		1255844	0					
ANR	1257299	Identifier	trav		1255844	0					
ANR	1257300	Argument	"""annotation"""		1255844	1					
ANR	1257301	PrimaryExpression	"""annotation"""		1255844	0					
ANR	1257302	CompoundStatement		182:56:6069:6069	1255844	1					
ANR	1257303	ExpressionStatement	trav = trav -> next	1912:2:61618:61635	1255844	0	True				
ANR	1257304	AssignmentExpression	trav = trav -> next		1255844	0		=			
ANR	1257305	Identifier	trav		1255844	0					
ANR	1257306	PtrMemberAccess	trav -> next		1255844	1					
ANR	1257307	Identifier	trav		1255844	0					
ANR	1257308	Identifier	next		1255844	1					
ANR	1257309	IfStatement	if ( trav != NULL )		1255844	13					
ANR	1257310	Condition	trav != NULL	1914:5:61645:61656	1255844	0	True				
ANR	1257311	EqualityExpression	trav != NULL		1255844	0		!=			
ANR	1257312	Identifier	trav		1255844	0					
ANR	1257313	Identifier	NULL		1255844	1					
ANR	1257314	CompoundStatement		186:19:6149:6149	1255844	1					
ANR	1257315	IfStatement	"if ( node_is_equal ( trav , ""simpleType"" ) )"		1255844	0					
ANR	1257316	Condition	"node_is_equal ( trav , ""simpleType"" )"	1915:6:61667:61698	1255844	0	True				
ANR	1257317	CallExpression	"node_is_equal ( trav , ""simpleType"" )"		1255844	0					
ANR	1257318	Callee	node_is_equal		1255844	0					
ANR	1257319	Identifier	node_is_equal		1255844	0					
ANR	1257320	ArgumentList	trav		1255844	1					
ANR	1257321	Argument	trav		1255844	0					
ANR	1257322	Identifier	trav		1255844	0					
ANR	1257323	Argument	"""simpleType"""		1255844	1					
ANR	1257324	PrimaryExpression	"""simpleType"""		1255844	0					
ANR	1257325	CompoundStatement		188:3:6196:6217	1255844	1					
ANR	1257326	IdentifierDeclStatement	sdlTypePtr dummy_type ;	1916:3:61706:61727	1255844	0	True				
ANR	1257327	IdentifierDecl	dummy_type		1255844	0					
ANR	1257328	IdentifierDeclType	sdlTypePtr		1255844	0					
ANR	1257329	Identifier	dummy_type		1255844	1					
ANR	1257330	IfStatement	if ( ref != NULL )		1255844	1					
ANR	1257331	Condition	ref != NULL	1917:7:61736:61746	1255844	0	True				
ANR	1257332	EqualityExpression	ref != NULL		1255844	0		!=			
ANR	1257333	Identifier	ref		1255844	0					
ANR	1257334	Identifier	NULL		1255844	1					
ANR	1257335	CompoundStatement		189:20:6239:6239	1255844	1					
ANR	1257336	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has both 'ref' attribute and subtype"" )"	1918:4:61755:61841	1255844	0	True				
ANR	1257337	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has both 'ref' attribute and subtype"" )"		1255844	0					
ANR	1257338	Callee	soap_error0		1255844	0					
ANR	1257339	Identifier	soap_error0		1255844	0					
ANR	1257340	ArgumentList	E_ERROR		1255844	1					
ANR	1257341	Argument	E_ERROR		1255844	0					
ANR	1257342	Identifier	E_ERROR		1255844	0					
ANR	1257343	Argument	"""Parsing Schema: attribute has both 'ref' attribute and subtype"""		1255844	1					
ANR	1257344	PrimaryExpression	"""Parsing Schema: attribute has both 'ref' attribute and subtype"""		1255844	0					
ANR	1257345	ElseStatement	else		1255844	0					
ANR	1257346	IfStatement	if ( type != NULL )		1255844	0					
ANR	1257347	Condition	type != NULL	1919:14:61857:61868	1255844	0	True				
ANR	1257348	EqualityExpression	type != NULL		1255844	0		!=			
ANR	1257349	Identifier	type		1255844	0					
ANR	1257350	Identifier	NULL		1255844	1					
ANR	1257351	CompoundStatement		191:28:6361:6361	1255844	1					
ANR	1257352	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has both 'type' attribute and subtype"" )"	1920:4:61877:61964	1255844	0	True				
ANR	1257353	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attribute has both 'type' attribute and subtype"" )"		1255844	0					
ANR	1257354	Callee	soap_error0		1255844	0					
ANR	1257355	Identifier	soap_error0		1255844	0					
ANR	1257356	ArgumentList	E_ERROR		1255844	1					
ANR	1257357	Argument	E_ERROR		1255844	0					
ANR	1257358	Identifier	E_ERROR		1255844	0					
ANR	1257359	Argument	"""Parsing Schema: attribute has both 'type' attribute and subtype"""		1255844	1					
ANR	1257360	PrimaryExpression	"""Parsing Schema: attribute has both 'type' attribute and subtype"""		1255844	0					
ANR	1257361	ExpressionStatement	dummy_type = emalloc ( sizeof ( sdlType ) )	1922:3:61974:62011	1255844	2	True				
ANR	1257362	AssignmentExpression	dummy_type = emalloc ( sizeof ( sdlType ) )		1255844	0		=			
ANR	1257363	Identifier	dummy_type		1255844	0					
ANR	1257364	CallExpression	emalloc ( sizeof ( sdlType ) )		1255844	1					
ANR	1257365	Callee	emalloc		1255844	0					
ANR	1257366	Identifier	emalloc		1255844	0					
ANR	1257367	ArgumentList	sizeof ( sdlType )		1255844	1					
ANR	1257368	Argument	sizeof ( sdlType )		1255844	0					
ANR	1257369	SizeofExpression	sizeof ( sdlType )		1255844	0					
ANR	1257370	Sizeof	sizeof		1255844	0					
ANR	1257371	SizeofOperand	sdlType		1255844	1					
ANR	1257372	ExpressionStatement	"memset ( dummy_type , 0 , sizeof ( sdlType ) )"	1923:3:62016:62054	1255844	3	True				
ANR	1257373	CallExpression	"memset ( dummy_type , 0 , sizeof ( sdlType ) )"		1255844	0					
ANR	1257374	Callee	memset		1255844	0					
ANR	1257375	Identifier	memset		1255844	0					
ANR	1257376	ArgumentList	dummy_type		1255844	1					
ANR	1257377	Argument	dummy_type		1255844	0					
ANR	1257378	Identifier	dummy_type		1255844	0					
ANR	1257379	Argument	0		1255844	1					
ANR	1257380	PrimaryExpression	0		1255844	0					
ANR	1257381	Argument	sizeof ( sdlType )		1255844	2					
ANR	1257382	SizeofExpression	sizeof ( sdlType )		1255844	0					
ANR	1257383	Sizeof	sizeof		1255844	0					
ANR	1257384	SizeofOperand	sdlType		1255844	1					
ANR	1257385	CompoundStatement		197:4:6555:6580	1255844	4					
ANR	1257386	IdentifierDeclStatement	smart_str anonymous = { 0 } ;	1925:4:62065:62090	1255844	0	True				
ANR	1257387	IdentifierDecl	anonymous = { 0 }		1255844	0					
ANR	1257388	IdentifierDeclType	smart_str		1255844	0					
ANR	1257389	Identifier	anonymous		1255844	1					
ANR	1257390	AssignmentExpression	anonymous = { 0 }		1255844	2		=			
ANR	1257391	Identifier	anonymous		1255844	0					
ANR	1257392	InitializerList	0		1255844	1					
ANR	1257393	PrimaryExpression	0		1255844	0					
ANR	1257394	ExpressionStatement	"smart_str_appendl ( & anonymous , ""anonymous"" , sizeof ( ""anonymous"" ) - 1 )"	1927:4:62100:62165	1255844	1	True				
ANR	1257395	CallExpression	"smart_str_appendl ( & anonymous , ""anonymous"" , sizeof ( ""anonymous"" ) - 1 )"		1255844	0					
ANR	1257396	Callee	smart_str_appendl		1255844	0					
ANR	1257397	Identifier	smart_str_appendl		1255844	0					
ANR	1257398	ArgumentList	& anonymous		1255844	1					
ANR	1257399	Argument	& anonymous		1255844	0					
ANR	1257400	UnaryOperationExpression	& anonymous		1255844	0					
ANR	1257401	UnaryOperator	&		1255844	0					
ANR	1257402	Identifier	anonymous		1255844	1					
ANR	1257403	Argument	"""anonymous"""		1255844	1					
ANR	1257404	PrimaryExpression	"""anonymous"""		1255844	0					
ANR	1257405	Argument	"sizeof ( ""anonymous"" ) - 1"		1255844	2					
ANR	1257406	AdditiveExpression	"sizeof ( ""anonymous"" ) - 1"		1255844	0		-			
ANR	1257407	SizeofExpression	"sizeof ( ""anonymous"" )"		1255844	0					
ANR	1257408	Sizeof	sizeof		1255844	0					
ANR	1257409	PrimaryExpression	"""anonymous"""		1255844	1					
ANR	1257410	PrimaryExpression	1		1255844	1					
ANR	1257411	ExpressionStatement	"smart_str_append_long ( & anonymous , zend_hash_num_elements ( sdl -> types ) )"	1928:4:62171:62240	1255844	2	True				
ANR	1257412	CallExpression	"smart_str_append_long ( & anonymous , zend_hash_num_elements ( sdl -> types ) )"		1255844	0					
ANR	1257413	Callee	smart_str_append_long		1255844	0					
ANR	1257414	Identifier	smart_str_append_long		1255844	0					
ANR	1257415	ArgumentList	& anonymous		1255844	1					
ANR	1257416	Argument	& anonymous		1255844	0					
ANR	1257417	UnaryOperationExpression	& anonymous		1255844	0					
ANR	1257418	UnaryOperator	&		1255844	0					
ANR	1257419	Identifier	anonymous		1255844	1					
ANR	1257420	Argument	zend_hash_num_elements ( sdl -> types )		1255844	1					
ANR	1257421	CallExpression	zend_hash_num_elements ( sdl -> types )		1255844	0					
ANR	1257422	Callee	zend_hash_num_elements		1255844	0					
ANR	1257423	Identifier	zend_hash_num_elements		1255844	0					
ANR	1257424	ArgumentList	sdl -> types		1255844	1					
ANR	1257425	Argument	sdl -> types		1255844	0					
ANR	1257426	PtrMemberAccess	sdl -> types		1255844	0					
ANR	1257427	Identifier	sdl		1255844	0					
ANR	1257428	Identifier	types		1255844	1					
ANR	1257429	ExpressionStatement	smart_str_0 ( & anonymous )	1929:4:62246:62269	1255844	3	True				
ANR	1257430	CallExpression	smart_str_0 ( & anonymous )		1255844	0					
ANR	1257431	Callee	smart_str_0		1255844	0					
ANR	1257432	Identifier	smart_str_0		1255844	0					
ANR	1257433	ArgumentList	& anonymous		1255844	1					
ANR	1257434	Argument	& anonymous		1255844	0					
ANR	1257435	UnaryOperationExpression	& anonymous		1255844	0					
ANR	1257436	UnaryOperator	&		1255844	0					
ANR	1257437	Identifier	anonymous		1255844	1					
ANR	1257438	ExpressionStatement	dummy_type -> name = anonymous . c	1930:4:62275:62305	1255844	4	True				
ANR	1257439	AssignmentExpression	dummy_type -> name = anonymous . c		1255844	0		=			
ANR	1257440	PtrMemberAccess	dummy_type -> name		1255844	0					
ANR	1257441	Identifier	dummy_type		1255844	0					
ANR	1257442	Identifier	name		1255844	1					
ANR	1257443	MemberAccess	anonymous . c		1255844	1					
ANR	1257444	Identifier	anonymous		1255844	0					
ANR	1257445	Identifier	c		1255844	1					
ANR	1257446	ExpressionStatement	dummy_type -> namens = estrdup ( ( char * ) tns -> children -> content )	1932:3:62315:62374	1255844	5	True				
ANR	1257447	AssignmentExpression	dummy_type -> namens = estrdup ( ( char * ) tns -> children -> content )		1255844	0		=			
ANR	1257448	PtrMemberAccess	dummy_type -> namens		1255844	0					
ANR	1257449	Identifier	dummy_type		1255844	0					
ANR	1257450	Identifier	namens		1255844	1					
ANR	1257451	CallExpression	estrdup ( ( char * ) tns -> children -> content )		1255844	1					
ANR	1257452	Callee	estrdup		1255844	0					
ANR	1257453	Identifier	estrdup		1255844	0					
ANR	1257454	ArgumentList	( char * ) tns -> children -> content		1255844	1					
ANR	1257455	Argument	( char * ) tns -> children -> content		1255844	0					
ANR	1257456	CastExpression	( char * ) tns -> children -> content		1255844	0					
ANR	1257457	CastTarget	char *		1255844	0					
ANR	1257458	PtrMemberAccess	tns -> children -> content		1255844	1					
ANR	1257459	PtrMemberAccess	tns -> children		1255844	0					
ANR	1257460	Identifier	tns		1255844	0					
ANR	1257461	Identifier	children		1255844	1					
ANR	1257462	Identifier	content		1255844	1					
ANR	1257463	ExpressionStatement	"schema_simpleType ( sdl , tns , trav , dummy_type )"	1933:3:62379:62424	1255844	6	True				
ANR	1257464	CallExpression	"schema_simpleType ( sdl , tns , trav , dummy_type )"		1255844	0					
ANR	1257465	Callee	schema_simpleType		1255844	0					
ANR	1257466	Identifier	schema_simpleType		1255844	0					
ANR	1257467	ArgumentList	sdl		1255844	1					
ANR	1257468	Argument	sdl		1255844	0					
ANR	1257469	Identifier	sdl		1255844	0					
ANR	1257470	Argument	tns		1255844	1					
ANR	1257471	Identifier	tns		1255844	0					
ANR	1257472	Argument	trav		1255844	2					
ANR	1257473	Identifier	trav		1255844	0					
ANR	1257474	Argument	dummy_type		1255844	3					
ANR	1257475	Identifier	dummy_type		1255844	0					
ANR	1257476	ExpressionStatement	newAttr -> encode = dummy_type -> encode	1934:3:62429:62465	1255844	7	True				
ANR	1257477	AssignmentExpression	newAttr -> encode = dummy_type -> encode		1255844	0		=			
ANR	1257478	PtrMemberAccess	newAttr -> encode		1255844	0					
ANR	1257479	Identifier	newAttr		1255844	0					
ANR	1257480	Identifier	encode		1255844	1					
ANR	1257481	PtrMemberAccess	dummy_type -> encode		1255844	1					
ANR	1257482	Identifier	dummy_type		1255844	0					
ANR	1257483	Identifier	encode		1255844	1					
ANR	1257484	ExpressionStatement	delete_type ( & dummy_type )	1935:3:62470:62494	1255844	8	True				
ANR	1257485	CallExpression	delete_type ( & dummy_type )		1255844	0					
ANR	1257486	Callee	delete_type		1255844	0					
ANR	1257487	Identifier	delete_type		1255844	0					
ANR	1257488	ArgumentList	& dummy_type		1255844	1					
ANR	1257489	Argument	& dummy_type		1255844	0					
ANR	1257490	UnaryOperationExpression	& dummy_type		1255844	0					
ANR	1257491	UnaryOperator	&		1255844	0					
ANR	1257492	Identifier	dummy_type		1255844	1					
ANR	1257493	ExpressionStatement	trav = trav -> next	1936:3:62499:62516	1255844	9	True				
ANR	1257494	AssignmentExpression	trav = trav -> next		1255844	0		=			
ANR	1257495	Identifier	trav		1255844	0					
ANR	1257496	PtrMemberAccess	trav -> next		1255844	1					
ANR	1257497	Identifier	trav		1255844	0					
ANR	1257498	Identifier	next		1255844	1					
ANR	1257499	IfStatement	if ( trav != NULL )		1255844	14					
ANR	1257500	Condition	trav != NULL	1939:5:62530:62541	1255844	0	True				
ANR	1257501	EqualityExpression	trav != NULL		1255844	0		!=			
ANR	1257502	Identifier	trav		1255844	0					
ANR	1257503	Identifier	NULL		1255844	1					
ANR	1257504	CompoundStatement		211:19:7034:7034	1255844	1					
ANR	1257505	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in attribute"" , trav -> name )"	1940:2:62548:62628	1255844	0	True				
ANR	1257506	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in attribute"" , trav -> name )"		1255844	0					
ANR	1257507	Callee	soap_error1		1255844	0					
ANR	1257508	Identifier	soap_error1		1255844	0					
ANR	1257509	ArgumentList	E_ERROR		1255844	1					
ANR	1257510	Argument	E_ERROR		1255844	0					
ANR	1257511	Identifier	E_ERROR		1255844	0					
ANR	1257512	Argument	"""Parsing Schema: unexpected <%s> in attribute"""		1255844	1					
ANR	1257513	PrimaryExpression	"""Parsing Schema: unexpected <%s> in attribute"""		1255844	0					
ANR	1257514	Argument	trav -> name		1255844	2					
ANR	1257515	PtrMemberAccess	trav -> name		1255844	0					
ANR	1257516	Identifier	trav		1255844	0					
ANR	1257517	Identifier	name		1255844	1					
ANR	1257518	ReturnStatement	return TRUE ;	1942:1:62634:62645	1255844	15	True				
ANR	1257519	Identifier	TRUE		1255844	0					
ANR	1257520	ReturnType	static int		1255844	1					
ANR	1257521	Identifier	schema_attribute		1255844	2					
ANR	1257522	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr attrType , sdlTypePtr cur_type , sdlCtx * ctx"		1255844	3					
ANR	1257523	Parameter	sdlPtr sdl	1728:28:55426:55435	1255844	0	True				
ANR	1257524	ParameterType	sdlPtr		1255844	0					
ANR	1257525	Identifier	sdl		1255844	1					
ANR	1257526	Parameter	xmlAttrPtr tns	1728:40:55438:55451	1255844	1	True				
ANR	1257527	ParameterType	xmlAttrPtr		1255844	0					
ANR	1257528	Identifier	tns		1255844	1					
ANR	1257529	Parameter	xmlNodePtr attrType	1728:56:55454:55472	1255844	2	True				
ANR	1257530	ParameterType	xmlNodePtr		1255844	0					
ANR	1257531	Identifier	attrType		1255844	1					
ANR	1257532	Parameter	sdlTypePtr cur_type	1728:77:55475:55493	1255844	3	True				
ANR	1257533	ParameterType	sdlTypePtr		1255844	0					
ANR	1257534	Identifier	cur_type		1255844	1					
ANR	1257535	Parameter	sdlCtx * ctx	1728:98:55496:55506	1255844	4	True				
ANR	1257536	ParameterType	sdlCtx *		1255844	0					
ANR	1257537	Identifier	ctx		1255844	1					
ANR	1257538	CFGEntryNode	ENTRY		1255844		True				
ANR	1257539	CFGExitNode	EXIT		1255844		True				
ANR	1257540	Symbol	& ext		1255844						
ANR	1257541	Symbol	parent		1255844						
ANR	1257542	Symbol	attrType -> parent		1255844						
ANR	1257543	Symbol	* parent		1255844						
ANR	1257544	Symbol	trav -> next		1255844						
ANR	1257545	Symbol	def		1255844						
ANR	1257546	Symbol	trav		1255844						
ANR	1257547	Symbol	XSD_FORM_QUALIFIED		1255844						
ANR	1257548	Symbol	type		1255844						
ANR	1257549	Symbol	* * tns		1255844						
ANR	1257550	Symbol	def -> children -> content		1255844						
ANR	1257551	Symbol	strncmp		1255844						
ANR	1257552	Symbol	& dummy_type		1255844						
ANR	1257553	Symbol	tns -> children -> content		1255844						
ANR	1257554	Symbol	XSD_USE_REQUIRED		1255844						
ANR	1257555	Symbol	dummy_type -> encode		1255844						
ANR	1257556	Symbol	tns -> children		1255844						
ANR	1257557	Symbol	attr -> doc		1255844						
ANR	1257558	Symbol	newAttr -> encode		1255844						
ANR	1257559	Symbol	XSD_USE_OPTIONAL		1255844						
ANR	1257560	Symbol	XSD_USE_DEFAULT		1255844						
ANR	1257561	Symbol	ext		1255844						
ANR	1257562	Symbol	cur_type -> attributes		1255844						
ANR	1257563	Symbol	* tns		1255844						
ANR	1257564	Symbol	* sdl		1255844						
ANR	1257565	Symbol	ctx		1255844						
ANR	1257566	Symbol	attr_name		1255844						
ANR	1257567	Symbol	* * name		1255844						
ANR	1257568	Symbol	ext -> val		1255844						
ANR	1257569	Symbol	ref -> children -> content		1255844						
ANR	1257570	Symbol	name -> children -> content		1255844						
ANR	1257571	Symbol	* * ns		1255844						
ANR	1257572	Symbol	* nsptr		1255844						
ANR	1257573	Symbol	tns		1255844						
ANR	1257574	Symbol	key2 . c		1255844						
ANR	1257575	Symbol	sdl		1255844						
ANR	1257576	Symbol	key2 . len		1255844						
ANR	1257577	Symbol	newAttr		1255844						
ANR	1257578	Symbol	& key		1255844						
ANR	1257579	Symbol	* ns -> children		1255844						
ANR	1257580	Symbol	str_ns		1255844						
ANR	1257581	Symbol	* attr -> children		1255844						
ANR	1257582	Symbol	nsptr		1255844						
ANR	1257583	Symbol	* def		1255844						
ANR	1257584	Symbol	newAttr -> extraAttributes		1255844						
ANR	1257585	Symbol	key . len		1255844						
ANR	1257586	Symbol	dummy_type -> name		1255844						
ANR	1257587	Symbol	XSD_USE_PROHIBITED		1255844						
ANR	1257588	Symbol	* * def		1255844						
ANR	1257589	Symbol	newAttr -> def		1255844						
ANR	1257590	Symbol	key		1255844						
ANR	1257591	Symbol	* name		1255844						
ANR	1257592	Symbol	ns -> children		1255844						
ANR	1257593	Symbol	newAttr -> namens		1255844						
ANR	1257594	Symbol	SUCCESS		1255844						
ANR	1257595	Symbol	nsptr -> href		1255844						
ANR	1257596	Symbol	attr -> parent		1255844						
ANR	1257597	Symbol	zend_hash_num_elements		1255844						
ANR	1257598	Symbol	attr -> children -> content		1255844						
ANR	1257599	Symbol	* ns		1255844						
ANR	1257600	Symbol	* tns -> children		1255844						
ANR	1257601	Symbol	* name -> children		1255844						
ANR	1257602	Symbol	newAttr -> fixed		1255844						
ANR	1257603	Symbol	* ctx		1255844						
ANR	1257604	Symbol	E_ERROR		1255844						
ANR	1257605	Symbol	* ext		1255844						
ANR	1257606	Symbol	cptype		1255844						
ANR	1257607	Symbol	anonymous . c		1255844						
ANR	1257608	Symbol	type -> children -> content		1255844						
ANR	1257609	Symbol	estrdup		1255844						
ANR	1257610	Symbol	XSD_FORM_UNQUALIFIED		1255844						
ANR	1257611	Symbol	attr -> name		1255844						
ANR	1257612	Symbol	anonymous		1255844						
ANR	1257613	Symbol	* * type		1255844						
ANR	1257614	Symbol	key2		1255844						
ANR	1257615	Symbol	* type -> children		1255844						
ANR	1257616	Symbol	attrType -> children		1255844						
ANR	1257617	Symbol	& value		1255844						
ANR	1257618	Symbol	get_attribute		1255844						
ANR	1257619	Symbol	attrType -> properties		1255844						
ANR	1257620	Symbol	attr_is_equal_ex		1255844						
ANR	1257621	Symbol	* * attr		1255844						
ANR	1257622	Symbol	attrType -> doc		1255844						
ANR	1257623	Symbol	parent -> properties		1255844						
ANR	1257624	Symbol	ref		1255844						
ANR	1257625	Symbol	parent -> parent		1255844						
ANR	1257626	Symbol	ref -> children		1255844						
ANR	1257627	Symbol	delete_attribute		1255844						
ANR	1257628	Symbol	type -> children		1255844						
ANR	1257629	Symbol	cur_type		1255844						
ANR	1257630	Symbol	* attrType		1255844						
ANR	1257631	Symbol	delete_extra_attribute		1255844						
ANR	1257632	Symbol	& key2		1255844						
ANR	1257633	Symbol	* dummy_type		1255844						
ANR	1257634	Symbol	NULL		1255844						
ANR	1257635	Symbol	* ref -> children		1255844						
ANR	1257636	Symbol	newAttr -> name		1255844						
ANR	1257637	Symbol	TRUE		1255844						
ANR	1257638	Symbol	nsPtr		1255844						
ANR	1257639	Symbol	ns -> children -> content		1255844						
ANR	1257640	Symbol	nsPtr -> href		1255844						
ANR	1257641	Symbol	sdl -> types		1255844						
ANR	1257642	Symbol	name		1255844						
ANR	1257643	Symbol	dummy_type		1255844						
ANR	1257644	Symbol	* attr		1255844						
ANR	1257645	Symbol	trav -> name		1255844						
ANR	1257646	Symbol	node_is_equal_ex		1255844						
ANR	1257647	Symbol	BAD_CAST		1255844						
ANR	1257648	Symbol	attr -> next		1255844						
ANR	1257649	Symbol	ctx -> attributes		1255844						
ANR	1257650	Symbol	& str_ns		1255844						
ANR	1257651	Symbol	ext -> ns		1255844						
ANR	1257652	Symbol	ns		1255844						
ANR	1257653	Symbol	& anonymous		1255844						
ANR	1257654	Symbol	addHash		1255844						
ANR	1257655	Symbol	node_is_equal		1255844						
ANR	1257656	Symbol	newAttr -> ref		1255844						
ANR	1257657	Symbol	* trav		1255844						
ANR	1257658	Symbol	attrType		1255844						
ANR	1257659	Symbol	emalloc		1255844						
ANR	1257660	Symbol	* def -> children		1255844						
ANR	1257661	Symbol	* type		1255844						
ANR	1257662	Symbol	* nsPtr		1255844						
ANR	1257663	Symbol	newAttr -> use		1255844						
ANR	1257664	Symbol	attr_find_ns		1255844						
ANR	1257665	Symbol	attr		1255844						
ANR	1257666	Symbol	value		1255844						
ANR	1257667	Symbol	name -> children		1255844						
ANR	1257668	Symbol	& cptype		1255844						
ANR	1257669	Symbol	* * ref		1255844						
ANR	1257670	Symbol	def -> children		1255844						
ANR	1257671	Symbol	* newAttr		1255844						
ANR	1257672	Symbol	attr -> children		1255844						
ANR	1257673	Symbol	xmlSearchNs		1255844						
ANR	1257674	Symbol	& ns		1255844						
ANR	1257675	Symbol	* cur_type		1255844						
ANR	1257676	Symbol	newAttr -> form		1255844						
ANR	1257677	Symbol	zend_hash_add		1255844						
ANR	1257678	Symbol	& newAttr		1255844						
ANR	1257679	Symbol	SCHEMA_NAMESPACE		1255844						
ANR	1257680	Symbol	dummy_type -> namens		1255844						
ANR	1257681	Symbol	key . c		1255844						
ANR	1257682	Symbol	* ref		1255844						
ANR	1257683	Symbol	get_create_encoder		1255844						
ANR	1257684	Symbol	XSD_FORM_DEFAULT		1255844						
ANR	1257685	Symbol	& attr_name		1255844						
ANR	1257686	Function	schema_attributeGroup	1945:0:62650:65932							
ANR	1257687	FunctionDef	"schema_attributeGroup (sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr attrGroup , sdlTypePtr cur_type , sdlCtx * ctx)"		1257686	0					
ANR	1257688	CompoundStatement		1946:0:62767:65932	1257686	0					
ANR	1257689	IdentifierDeclStatement	xmlNodePtr trav ;	1947:1:62770:62785	1257686	0	True				
ANR	1257690	IdentifierDecl	trav		1257686	0					
ANR	1257691	IdentifierDeclType	xmlNodePtr		1257686	0					
ANR	1257692	Identifier	trav		1257686	1					
ANR	1257693	IdentifierDeclStatement	"xmlAttrPtr name , ref = NULL ;"	1948:1:62788:62815	1257686	1	True				
ANR	1257694	IdentifierDecl	name		1257686	0					
ANR	1257695	IdentifierDeclType	xmlAttrPtr		1257686	0					
ANR	1257696	Identifier	name		1257686	1					
ANR	1257697	IdentifierDecl	ref = NULL		1257686	1					
ANR	1257698	IdentifierDeclType	xmlAttrPtr		1257686	0					
ANR	1257699	Identifier	ref		1257686	1					
ANR	1257700	AssignmentExpression	ref = NULL		1257686	2		=			
ANR	1257701	Identifier	NULL		1257686	0					
ANR	1257702	Identifier	NULL		1257686	1					
ANR	1257703	ExpressionStatement	"name = get_attribute ( attrGroup -> properties , ""name"" )"	1951:1:62820:62871	1257686	2	True				
ANR	1257704	AssignmentExpression	"name = get_attribute ( attrGroup -> properties , ""name"" )"		1257686	0		=			
ANR	1257705	Identifier	name		1257686	0					
ANR	1257706	CallExpression	"get_attribute ( attrGroup -> properties , ""name"" )"		1257686	1					
ANR	1257707	Callee	get_attribute		1257686	0					
ANR	1257708	Identifier	get_attribute		1257686	0					
ANR	1257709	ArgumentList	attrGroup -> properties		1257686	1					
ANR	1257710	Argument	attrGroup -> properties		1257686	0					
ANR	1257711	PtrMemberAccess	attrGroup -> properties		1257686	0					
ANR	1257712	Identifier	attrGroup		1257686	0					
ANR	1257713	Identifier	properties		1257686	1					
ANR	1257714	Argument	"""name"""		1257686	1					
ANR	1257715	PrimaryExpression	"""name"""		1257686	0					
ANR	1257716	IfStatement	if ( name == NULL )		1257686	3					
ANR	1257717	Condition	name == NULL	1952:5:62878:62889	1257686	0	True				
ANR	1257718	EqualityExpression	name == NULL		1257686	0		==			
ANR	1257719	Identifier	name		1257686	0					
ANR	1257720	Identifier	NULL		1257686	1					
ANR	1257721	CompoundStatement		7:19:124:124	1257686	1					
ANR	1257722	ExpressionStatement	"name = ref = get_attribute ( attrGroup -> properties , ""ref"" )"	1953:2:62896:62952	1257686	0	True				
ANR	1257723	AssignmentExpression	"name = ref = get_attribute ( attrGroup -> properties , ""ref"" )"		1257686	0		=			
ANR	1257724	Identifier	name		1257686	0					
ANR	1257725	AssignmentExpression	"ref = get_attribute ( attrGroup -> properties , ""ref"" )"		1257686	1		=			
ANR	1257726	Identifier	ref		1257686	0					
ANR	1257727	CallExpression	"get_attribute ( attrGroup -> properties , ""ref"" )"		1257686	1					
ANR	1257728	Callee	get_attribute		1257686	0					
ANR	1257729	Identifier	get_attribute		1257686	0					
ANR	1257730	ArgumentList	attrGroup -> properties		1257686	1					
ANR	1257731	Argument	attrGroup -> properties		1257686	0					
ANR	1257732	PtrMemberAccess	attrGroup -> properties		1257686	0					
ANR	1257733	Identifier	attrGroup		1257686	0					
ANR	1257734	Identifier	properties		1257686	1					
ANR	1257735	Argument	"""ref"""		1257686	1					
ANR	1257736	PrimaryExpression	"""ref"""		1257686	0					
ANR	1257737	IfStatement	if ( name )		1257686	4					
ANR	1257738	Condition	name	1955:5:62962:62965	1257686	0	True				
ANR	1257739	Identifier	name		1257686	0					
ANR	1257740	CompoundStatement		10:11:200:200	1257686	1					
ANR	1257741	IfStatement	if ( cur_type == NULL )		1257686	0					
ANR	1257742	Condition	cur_type == NULL	1956:6:62976:62991	1257686	0	True				
ANR	1257743	EqualityExpression	cur_type == NULL		1257686	0		==			
ANR	1257744	Identifier	cur_type		1257686	0					
ANR	1257745	Identifier	NULL		1257686	1					
ANR	1257746	CompoundStatement		14:3:272:291	1257686	1					
ANR	1257747	IdentifierDeclStatement	xmlAttrPtr ns ;	1957:3:62999:63012	1257686	0	True				
ANR	1257748	IdentifierDecl	ns		1257686	0					
ANR	1257749	IdentifierDeclType	xmlAttrPtr		1257686	0					
ANR	1257750	Identifier	ns		1257686	1					
ANR	1257751	IdentifierDeclStatement	sdlTypePtr newType ;	1958:3:63017:63035	1257686	1	True				
ANR	1257752	IdentifierDecl	newType		1257686	0					
ANR	1257753	IdentifierDeclType	sdlTypePtr		1257686	0					
ANR	1257754	Identifier	newType		1257686	1					
ANR	1257755	IdentifierDeclStatement	smart_str key = { 0 } ;	1959:3:63040:63059	1257686	2	True				
ANR	1257756	IdentifierDecl	key = { 0 }		1257686	0					
ANR	1257757	IdentifierDeclType	smart_str		1257686	0					
ANR	1257758	Identifier	key		1257686	1					
ANR	1257759	AssignmentExpression	key = { 0 }		1257686	2		=			
ANR	1257760	Identifier	key		1257686	0					
ANR	1257761	InitializerList	0		1257686	1					
ANR	1257762	PrimaryExpression	0		1257686	0					
ANR	1257763	ExpressionStatement	"ns = get_attribute ( attrGroup -> properties , ""targetNamespace"" )"	1961:3:63065:63125	1257686	3	True				
ANR	1257764	AssignmentExpression	"ns = get_attribute ( attrGroup -> properties , ""targetNamespace"" )"		1257686	0		=			
ANR	1257765	Identifier	ns		1257686	0					
ANR	1257766	CallExpression	"get_attribute ( attrGroup -> properties , ""targetNamespace"" )"		1257686	1					
ANR	1257767	Callee	get_attribute		1257686	0					
ANR	1257768	Identifier	get_attribute		1257686	0					
ANR	1257769	ArgumentList	attrGroup -> properties		1257686	1					
ANR	1257770	Argument	attrGroup -> properties		1257686	0					
ANR	1257771	PtrMemberAccess	attrGroup -> properties		1257686	0					
ANR	1257772	Identifier	attrGroup		1257686	0					
ANR	1257773	Identifier	properties		1257686	1					
ANR	1257774	Argument	"""targetNamespace"""		1257686	1					
ANR	1257775	PrimaryExpression	"""targetNamespace"""		1257686	0					
ANR	1257776	IfStatement	if ( ns == NULL )		1257686	4					
ANR	1257777	Condition	ns == NULL	1962:7:63134:63143	1257686	0	True				
ANR	1257778	EqualityExpression	ns == NULL		1257686	0		==			
ANR	1257779	Identifier	ns		1257686	0					
ANR	1257780	Identifier	NULL		1257686	1					
ANR	1257781	CompoundStatement		17:19:378:378	1257686	1					
ANR	1257782	ExpressionStatement	ns = tns	1963:4:63152:63160	1257686	0	True				
ANR	1257783	AssignmentExpression	ns = tns		1257686	0		=			
ANR	1257784	Identifier	ns		1257686	0					
ANR	1257785	Identifier	tns		1257686	1					
ANR	1257786	ExpressionStatement	newType = emalloc ( sizeof ( sdlType ) )	1965:3:63170:63204	1257686	5	True				
ANR	1257787	AssignmentExpression	newType = emalloc ( sizeof ( sdlType ) )		1257686	0		=			
ANR	1257788	Identifier	newType		1257686	0					
ANR	1257789	CallExpression	emalloc ( sizeof ( sdlType ) )		1257686	1					
ANR	1257790	Callee	emalloc		1257686	0					
ANR	1257791	Identifier	emalloc		1257686	0					
ANR	1257792	ArgumentList	sizeof ( sdlType )		1257686	1					
ANR	1257793	Argument	sizeof ( sdlType )		1257686	0					
ANR	1257794	SizeofExpression	sizeof ( sdlType )		1257686	0					
ANR	1257795	Sizeof	sizeof		1257686	0					
ANR	1257796	SizeofOperand	sdlType		1257686	1					
ANR	1257797	ExpressionStatement	"memset ( newType , 0 , sizeof ( sdlType ) )"	1966:3:63209:63244	1257686	6	True				
ANR	1257798	CallExpression	"memset ( newType , 0 , sizeof ( sdlType ) )"		1257686	0					
ANR	1257799	Callee	memset		1257686	0					
ANR	1257800	Identifier	memset		1257686	0					
ANR	1257801	ArgumentList	newType		1257686	1					
ANR	1257802	Argument	newType		1257686	0					
ANR	1257803	Identifier	newType		1257686	0					
ANR	1257804	Argument	0		1257686	1					
ANR	1257805	PrimaryExpression	0		1257686	0					
ANR	1257806	Argument	sizeof ( sdlType )		1257686	2					
ANR	1257807	SizeofExpression	sizeof ( sdlType )		1257686	0					
ANR	1257808	Sizeof	sizeof		1257686	0					
ANR	1257809	SizeofOperand	sdlType		1257686	1					
ANR	1257810	ExpressionStatement	newType -> name = estrdup ( ( char * ) name -> children -> content )	1967:3:63249:63304	1257686	7	True				
ANR	1257811	AssignmentExpression	newType -> name = estrdup ( ( char * ) name -> children -> content )		1257686	0		=			
ANR	1257812	PtrMemberAccess	newType -> name		1257686	0					
ANR	1257813	Identifier	newType		1257686	0					
ANR	1257814	Identifier	name		1257686	1					
ANR	1257815	CallExpression	estrdup ( ( char * ) name -> children -> content )		1257686	1					
ANR	1257816	Callee	estrdup		1257686	0					
ANR	1257817	Identifier	estrdup		1257686	0					
ANR	1257818	ArgumentList	( char * ) name -> children -> content		1257686	1					
ANR	1257819	Argument	( char * ) name -> children -> content		1257686	0					
ANR	1257820	CastExpression	( char * ) name -> children -> content		1257686	0					
ANR	1257821	CastTarget	char *		1257686	0					
ANR	1257822	PtrMemberAccess	name -> children -> content		1257686	1					
ANR	1257823	PtrMemberAccess	name -> children		1257686	0					
ANR	1257824	Identifier	name		1257686	0					
ANR	1257825	Identifier	children		1257686	1					
ANR	1257826	Identifier	content		1257686	1					
ANR	1257827	ExpressionStatement	newType -> namens = estrdup ( ( char * ) ns -> children -> content )	1968:3:63309:63364	1257686	8	True				
ANR	1257828	AssignmentExpression	newType -> namens = estrdup ( ( char * ) ns -> children -> content )		1257686	0		=			
ANR	1257829	PtrMemberAccess	newType -> namens		1257686	0					
ANR	1257830	Identifier	newType		1257686	0					
ANR	1257831	Identifier	namens		1257686	1					
ANR	1257832	CallExpression	estrdup ( ( char * ) ns -> children -> content )		1257686	1					
ANR	1257833	Callee	estrdup		1257686	0					
ANR	1257834	Identifier	estrdup		1257686	0					
ANR	1257835	ArgumentList	( char * ) ns -> children -> content		1257686	1					
ANR	1257836	Argument	( char * ) ns -> children -> content		1257686	0					
ANR	1257837	CastExpression	( char * ) ns -> children -> content		1257686	0					
ANR	1257838	CastTarget	char *		1257686	0					
ANR	1257839	PtrMemberAccess	ns -> children -> content		1257686	1					
ANR	1257840	PtrMemberAccess	ns -> children		1257686	0					
ANR	1257841	Identifier	ns		1257686	0					
ANR	1257842	Identifier	children		1257686	1					
ANR	1257843	Identifier	content		1257686	1					
ANR	1257844	ExpressionStatement	"smart_str_appends ( & key , newType -> namens )"	1970:3:63370:63410	1257686	9	True				
ANR	1257845	CallExpression	"smart_str_appends ( & key , newType -> namens )"		1257686	0					
ANR	1257846	Callee	smart_str_appends		1257686	0					
ANR	1257847	Identifier	smart_str_appends		1257686	0					
ANR	1257848	ArgumentList	& key		1257686	1					
ANR	1257849	Argument	& key		1257686	0					
ANR	1257850	UnaryOperationExpression	& key		1257686	0					
ANR	1257851	UnaryOperator	&		1257686	0					
ANR	1257852	Identifier	key		1257686	1					
ANR	1257853	Argument	newType -> namens		1257686	1					
ANR	1257854	PtrMemberAccess	newType -> namens		1257686	0					
ANR	1257855	Identifier	newType		1257686	0					
ANR	1257856	Identifier	namens		1257686	1					
ANR	1257857	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	1971:3:63415:63443	1257686	10	True				
ANR	1257858	CallExpression	"smart_str_appendc ( & key , ':' )"		1257686	0					
ANR	1257859	Callee	smart_str_appendc		1257686	0					
ANR	1257860	Identifier	smart_str_appendc		1257686	0					
ANR	1257861	ArgumentList	& key		1257686	1					
ANR	1257862	Argument	& key		1257686	0					
ANR	1257863	UnaryOperationExpression	& key		1257686	0					
ANR	1257864	UnaryOperator	&		1257686	0					
ANR	1257865	Identifier	key		1257686	1					
ANR	1257866	Argument	':'		1257686	1					
ANR	1257867	PrimaryExpression	':'		1257686	0					
ANR	1257868	ExpressionStatement	"smart_str_appends ( & key , newType -> name )"	1972:3:63448:63486	1257686	11	True				
ANR	1257869	CallExpression	"smart_str_appends ( & key , newType -> name )"		1257686	0					
ANR	1257870	Callee	smart_str_appends		1257686	0					
ANR	1257871	Identifier	smart_str_appends		1257686	0					
ANR	1257872	ArgumentList	& key		1257686	1					
ANR	1257873	Argument	& key		1257686	0					
ANR	1257874	UnaryOperationExpression	& key		1257686	0					
ANR	1257875	UnaryOperator	&		1257686	0					
ANR	1257876	Identifier	key		1257686	1					
ANR	1257877	Argument	newType -> name		1257686	1					
ANR	1257878	PtrMemberAccess	newType -> name		1257686	0					
ANR	1257879	Identifier	newType		1257686	0					
ANR	1257880	Identifier	name		1257686	1					
ANR	1257881	ExpressionStatement	smart_str_0 ( & key )	1973:3:63491:63508	1257686	12	True				
ANR	1257882	CallExpression	smart_str_0 ( & key )		1257686	0					
ANR	1257883	Callee	smart_str_0		1257686	0					
ANR	1257884	Identifier	smart_str_0		1257686	0					
ANR	1257885	ArgumentList	& key		1257686	1					
ANR	1257886	Argument	& key		1257686	0					
ANR	1257887	UnaryOperationExpression	& key		1257686	0					
ANR	1257888	UnaryOperator	&		1257686	0					
ANR	1257889	Identifier	key		1257686	1					
ANR	1257890	IfStatement	"if ( zend_hash_add ( ctx -> attributeGroups , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS )"		1257686	13					
ANR	1257891	Condition	"zend_hash_add ( ctx -> attributeGroups , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS"	1975:7:63518:63619	1257686	0	True				
ANR	1257892	EqualityExpression	"zend_hash_add ( ctx -> attributeGroups , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL ) != SUCCESS"		1257686	0		!=			
ANR	1257893	CallExpression	"zend_hash_add ( ctx -> attributeGroups , key . c , key . len + 1 , & newType , sizeof ( sdlTypePtr ) , NULL )"		1257686	0					
ANR	1257894	Callee	zend_hash_add		1257686	0					
ANR	1257895	Identifier	zend_hash_add		1257686	0					
ANR	1257896	ArgumentList	ctx -> attributeGroups		1257686	1					
ANR	1257897	Argument	ctx -> attributeGroups		1257686	0					
ANR	1257898	PtrMemberAccess	ctx -> attributeGroups		1257686	0					
ANR	1257899	Identifier	ctx		1257686	0					
ANR	1257900	Identifier	attributeGroups		1257686	1					
ANR	1257901	Argument	key . c		1257686	1					
ANR	1257902	MemberAccess	key . c		1257686	0					
ANR	1257903	Identifier	key		1257686	0					
ANR	1257904	Identifier	c		1257686	1					
ANR	1257905	Argument	key . len + 1		1257686	2					
ANR	1257906	AdditiveExpression	key . len + 1		1257686	0		+			
ANR	1257907	MemberAccess	key . len		1257686	0					
ANR	1257908	Identifier	key		1257686	0					
ANR	1257909	Identifier	len		1257686	1					
ANR	1257910	PrimaryExpression	1		1257686	1					
ANR	1257911	Argument	& newType		1257686	3					
ANR	1257912	UnaryOperationExpression	& newType		1257686	0					
ANR	1257913	UnaryOperator	&		1257686	0					
ANR	1257914	Identifier	newType		1257686	1					
ANR	1257915	Argument	sizeof ( sdlTypePtr )		1257686	4					
ANR	1257916	SizeofExpression	sizeof ( sdlTypePtr )		1257686	0					
ANR	1257917	Sizeof	sizeof		1257686	0					
ANR	1257918	SizeofOperand	sdlTypePtr		1257686	1					
ANR	1257919	Argument	NULL		1257686	5					
ANR	1257920	Identifier	NULL		1257686	0					
ANR	1257921	Identifier	SUCCESS		1257686	1					
ANR	1257922	CompoundStatement		30:111:854:854	1257686	1					
ANR	1257923	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: attributeGroup '%s' already defined"" , key . c )"	1976:4:63628:63710	1257686	0	True				
ANR	1257924	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: attributeGroup '%s' already defined"" , key . c )"		1257686	0					
ANR	1257925	Callee	soap_error1		1257686	0					
ANR	1257926	Identifier	soap_error1		1257686	0					
ANR	1257927	ArgumentList	E_ERROR		1257686	1					
ANR	1257928	Argument	E_ERROR		1257686	0					
ANR	1257929	Identifier	E_ERROR		1257686	0					
ANR	1257930	Argument	"""Parsing Schema: attributeGroup '%s' already defined"""		1257686	1					
ANR	1257931	PrimaryExpression	"""Parsing Schema: attributeGroup '%s' already defined"""		1257686	0					
ANR	1257932	Argument	key . c		1257686	2					
ANR	1257933	MemberAccess	key . c		1257686	0					
ANR	1257934	Identifier	key		1257686	0					
ANR	1257935	Identifier	c		1257686	1					
ANR	1257936	ExpressionStatement	cur_type = newType	1978:3:63720:63738	1257686	14	True				
ANR	1257937	AssignmentExpression	cur_type = newType		1257686	0		=			
ANR	1257938	Identifier	cur_type		1257686	0					
ANR	1257939	Identifier	newType		1257686	1					
ANR	1257940	ExpressionStatement	smart_str_free ( & key )	1979:3:63743:63763	1257686	15	True				
ANR	1257941	CallExpression	smart_str_free ( & key )		1257686	0					
ANR	1257942	Callee	smart_str_free		1257686	0					
ANR	1257943	Identifier	smart_str_free		1257686	0					
ANR	1257944	ArgumentList	& key		1257686	1					
ANR	1257945	Argument	& key		1257686	0					
ANR	1257946	UnaryOperationExpression	& key		1257686	0					
ANR	1257947	UnaryOperator	&		1257686	0					
ANR	1257948	Identifier	key		1257686	1					
ANR	1257949	ElseStatement	else		1257686	0					
ANR	1257950	IfStatement	if ( ref )		1257686	0					
ANR	1257951	Condition	ref	1980:13:63778:63780	1257686	0	True				
ANR	1257952	Identifier	ref		1257686	0					
ANR	1257953	CompoundStatement		39:3:1098:1112	1257686	1					
ANR	1257954	IdentifierDeclStatement	sdlAttributePtr newAttr ;	1981:3:63788:63811	1257686	0	True				
ANR	1257955	IdentifierDecl	newAttr		1257686	0					
ANR	1257956	IdentifierDeclType	sdlAttributePtr		1257686	0					
ANR	1257957	Identifier	newAttr		1257686	1					
ANR	1257958	IdentifierDeclStatement	"char * group_name , * ns ;"	1982:3:63816:63837	1257686	1	True				
ANR	1257959	IdentifierDecl	* group_name		1257686	0					
ANR	1257960	IdentifierDeclType	char *		1257686	0					
ANR	1257961	Identifier	group_name		1257686	1					
ANR	1257962	IdentifierDecl	* ns		1257686	1					
ANR	1257963	IdentifierDeclType	char *		1257686	0					
ANR	1257964	Identifier	ns		1257686	1					
ANR	1257965	IdentifierDeclStatement	smart_str key = { 0 } ;	1983:3:63842:63861	1257686	2	True				
ANR	1257966	IdentifierDecl	key = { 0 }		1257686	0					
ANR	1257967	IdentifierDeclType	smart_str		1257686	0					
ANR	1257968	Identifier	key		1257686	1					
ANR	1257969	AssignmentExpression	key = { 0 }		1257686	2		=			
ANR	1257970	Identifier	key		1257686	0					
ANR	1257971	InitializerList	0		1257686	1					
ANR	1257972	PrimaryExpression	0		1257686	0					
ANR	1257973	IdentifierDeclStatement	xmlNsPtr nsptr ;	1984:3:63866:63880	1257686	3	True				
ANR	1257974	IdentifierDecl	nsptr		1257686	0					
ANR	1257975	IdentifierDeclType	xmlNsPtr		1257686	0					
ANR	1257976	Identifier	nsptr		1257686	1					
ANR	1257977	IfStatement	if ( cur_type -> attributes == NULL )		1257686	4					
ANR	1257978	Condition	cur_type -> attributes == NULL	1986:7:63890:63917	1257686	0	True				
ANR	1257979	EqualityExpression	cur_type -> attributes == NULL		1257686	0		==			
ANR	1257980	PtrMemberAccess	cur_type -> attributes		1257686	0					
ANR	1257981	Identifier	cur_type		1257686	0					
ANR	1257982	Identifier	attributes		1257686	1					
ANR	1257983	Identifier	NULL		1257686	1					
ANR	1257984	CompoundStatement		41:37:1152:1152	1257686	1					
ANR	1257985	ExpressionStatement	cur_type -> attributes = emalloc ( sizeof ( HashTable ) )	1987:4:63926:63975	1257686	0	True				
ANR	1257986	AssignmentExpression	cur_type -> attributes = emalloc ( sizeof ( HashTable ) )		1257686	0		=			
ANR	1257987	PtrMemberAccess	cur_type -> attributes		1257686	0					
ANR	1257988	Identifier	cur_type		1257686	0					
ANR	1257989	Identifier	attributes		1257686	1					
ANR	1257990	CallExpression	emalloc ( sizeof ( HashTable ) )		1257686	1					
ANR	1257991	Callee	emalloc		1257686	0					
ANR	1257992	Identifier	emalloc		1257686	0					
ANR	1257993	ArgumentList	sizeof ( HashTable )		1257686	1					
ANR	1257994	Argument	sizeof ( HashTable )		1257686	0					
ANR	1257995	SizeofExpression	sizeof ( HashTable )		1257686	0					
ANR	1257996	Sizeof	sizeof		1257686	0					
ANR	1257997	SizeofOperand	HashTable		1257686	1					
ANR	1257998	ExpressionStatement	"zend_hash_init ( cur_type -> attributes , 0 , NULL , delete_attribute , 0 )"	1988:4:63981:64047	1257686	1	True				
ANR	1257999	CallExpression	"zend_hash_init ( cur_type -> attributes , 0 , NULL , delete_attribute , 0 )"		1257686	0					
ANR	1258000	Callee	zend_hash_init		1257686	0					
ANR	1258001	Identifier	zend_hash_init		1257686	0					
ANR	1258002	ArgumentList	cur_type -> attributes		1257686	1					
ANR	1258003	Argument	cur_type -> attributes		1257686	0					
ANR	1258004	PtrMemberAccess	cur_type -> attributes		1257686	0					
ANR	1258005	Identifier	cur_type		1257686	0					
ANR	1258006	Identifier	attributes		1257686	1					
ANR	1258007	Argument	0		1257686	1					
ANR	1258008	PrimaryExpression	0		1257686	0					
ANR	1258009	Argument	NULL		1257686	2					
ANR	1258010	Identifier	NULL		1257686	0					
ANR	1258011	Argument	delete_attribute		1257686	3					
ANR	1258012	Identifier	delete_attribute		1257686	0					
ANR	1258013	Argument	0		1257686	4					
ANR	1258014	PrimaryExpression	0		1257686	0					
ANR	1258015	ExpressionStatement	newAttr = emalloc ( sizeof ( sdlAttribute ) )	1990:3:64057:64096	1257686	5	True				
ANR	1258016	AssignmentExpression	newAttr = emalloc ( sizeof ( sdlAttribute ) )		1257686	0		=			
ANR	1258017	Identifier	newAttr		1257686	0					
ANR	1258018	CallExpression	emalloc ( sizeof ( sdlAttribute ) )		1257686	1					
ANR	1258019	Callee	emalloc		1257686	0					
ANR	1258020	Identifier	emalloc		1257686	0					
ANR	1258021	ArgumentList	sizeof ( sdlAttribute )		1257686	1					
ANR	1258022	Argument	sizeof ( sdlAttribute )		1257686	0					
ANR	1258023	SizeofExpression	sizeof ( sdlAttribute )		1257686	0					
ANR	1258024	Sizeof	sizeof		1257686	0					
ANR	1258025	SizeofOperand	sdlAttribute		1257686	1					
ANR	1258026	ExpressionStatement	"memset ( newAttr , 0 , sizeof ( sdlAttribute ) )"	1991:3:64101:64141	1257686	6	True				
ANR	1258027	CallExpression	"memset ( newAttr , 0 , sizeof ( sdlAttribute ) )"		1257686	0					
ANR	1258028	Callee	memset		1257686	0					
ANR	1258029	Identifier	memset		1257686	0					
ANR	1258030	ArgumentList	newAttr		1257686	1					
ANR	1258031	Argument	newAttr		1257686	0					
ANR	1258032	Identifier	newAttr		1257686	0					
ANR	1258033	Argument	0		1257686	1					
ANR	1258034	PrimaryExpression	0		1257686	0					
ANR	1258035	Argument	sizeof ( sdlAttribute )		1257686	2					
ANR	1258036	SizeofExpression	sizeof ( sdlAttribute )		1257686	0					
ANR	1258037	Sizeof	sizeof		1257686	0					
ANR	1258038	SizeofOperand	sdlAttribute		1257686	1					
ANR	1258039	ExpressionStatement	"parse_namespace ( ref -> children -> content , & group_name , & ns )"	1993:3:64147:64204	1257686	7	True				
ANR	1258040	CallExpression	"parse_namespace ( ref -> children -> content , & group_name , & ns )"		1257686	0					
ANR	1258041	Callee	parse_namespace		1257686	0					
ANR	1258042	Identifier	parse_namespace		1257686	0					
ANR	1258043	ArgumentList	ref -> children -> content		1257686	1					
ANR	1258044	Argument	ref -> children -> content		1257686	0					
ANR	1258045	PtrMemberAccess	ref -> children -> content		1257686	0					
ANR	1258046	PtrMemberAccess	ref -> children		1257686	0					
ANR	1258047	Identifier	ref		1257686	0					
ANR	1258048	Identifier	children		1257686	1					
ANR	1258049	Identifier	content		1257686	1					
ANR	1258050	Argument	& group_name		1257686	1					
ANR	1258051	UnaryOperationExpression	& group_name		1257686	0					
ANR	1258052	UnaryOperator	&		1257686	0					
ANR	1258053	Identifier	group_name		1257686	1					
ANR	1258054	Argument	& ns		1257686	2					
ANR	1258055	UnaryOperationExpression	& ns		1257686	0					
ANR	1258056	UnaryOperator	&		1257686	0					
ANR	1258057	Identifier	ns		1257686	1					
ANR	1258058	ExpressionStatement	"nsptr = xmlSearchNs ( attrGroup -> doc , attrGroup , BAD_CAST ( ns ) )"	1994:3:64209:64269	1257686	8	True				
ANR	1258059	AssignmentExpression	"nsptr = xmlSearchNs ( attrGroup -> doc , attrGroup , BAD_CAST ( ns ) )"		1257686	0		=			
ANR	1258060	Identifier	nsptr		1257686	0					
ANR	1258061	CallExpression	"xmlSearchNs ( attrGroup -> doc , attrGroup , BAD_CAST ( ns ) )"		1257686	1					
ANR	1258062	Callee	xmlSearchNs		1257686	0					
ANR	1258063	Identifier	xmlSearchNs		1257686	0					
ANR	1258064	ArgumentList	attrGroup -> doc		1257686	1					
ANR	1258065	Argument	attrGroup -> doc		1257686	0					
ANR	1258066	PtrMemberAccess	attrGroup -> doc		1257686	0					
ANR	1258067	Identifier	attrGroup		1257686	0					
ANR	1258068	Identifier	doc		1257686	1					
ANR	1258069	Argument	attrGroup		1257686	1					
ANR	1258070	Identifier	attrGroup		1257686	0					
ANR	1258071	Argument	BAD_CAST ( ns )		1257686	2					
ANR	1258072	CallExpression	BAD_CAST ( ns )		1257686	0					
ANR	1258073	Callee	BAD_CAST		1257686	0					
ANR	1258074	Identifier	BAD_CAST		1257686	0					
ANR	1258075	ArgumentList	ns		1257686	1					
ANR	1258076	Argument	ns		1257686	0					
ANR	1258077	Identifier	ns		1257686	0					
ANR	1258078	IfStatement	if ( nsptr != NULL )		1257686	9					
ANR	1258079	Condition	nsptr != NULL	1995:7:64278:64290	1257686	0	True				
ANR	1258080	EqualityExpression	nsptr != NULL		1257686	0		!=			
ANR	1258081	Identifier	nsptr		1257686	0					
ANR	1258082	Identifier	NULL		1257686	1					
ANR	1258083	CompoundStatement		50:22:1525:1525	1257686	1					
ANR	1258084	ExpressionStatement	"smart_str_appends ( & key , ( char * ) nsptr -> href )"	1996:4:64299:64342	1257686	0	True				
ANR	1258085	CallExpression	"smart_str_appends ( & key , ( char * ) nsptr -> href )"		1257686	0					
ANR	1258086	Callee	smart_str_appends		1257686	0					
ANR	1258087	Identifier	smart_str_appends		1257686	0					
ANR	1258088	ArgumentList	& key		1257686	1					
ANR	1258089	Argument	& key		1257686	0					
ANR	1258090	UnaryOperationExpression	& key		1257686	0					
ANR	1258091	UnaryOperator	&		1257686	0					
ANR	1258092	Identifier	key		1257686	1					
ANR	1258093	Argument	( char * ) nsptr -> href		1257686	1					
ANR	1258094	CastExpression	( char * ) nsptr -> href		1257686	0					
ANR	1258095	CastTarget	char *		1257686	0					
ANR	1258096	PtrMemberAccess	nsptr -> href		1257686	1					
ANR	1258097	Identifier	nsptr		1257686	0					
ANR	1258098	Identifier	href		1257686	1					
ANR	1258099	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	1998:3:64352:64380	1257686	10	True				
ANR	1258100	CallExpression	"smart_str_appendc ( & key , ':' )"		1257686	0					
ANR	1258101	Callee	smart_str_appendc		1257686	0					
ANR	1258102	Identifier	smart_str_appendc		1257686	0					
ANR	1258103	ArgumentList	& key		1257686	1					
ANR	1258104	Argument	& key		1257686	0					
ANR	1258105	UnaryOperationExpression	& key		1257686	0					
ANR	1258106	UnaryOperator	&		1257686	0					
ANR	1258107	Identifier	key		1257686	1					
ANR	1258108	Argument	':'		1257686	1					
ANR	1258109	PrimaryExpression	':'		1257686	0					
ANR	1258110	ExpressionStatement	"smart_str_appends ( & key , group_name )"	1999:3:64385:64420	1257686	11	True				
ANR	1258111	CallExpression	"smart_str_appends ( & key , group_name )"		1257686	0					
ANR	1258112	Callee	smart_str_appends		1257686	0					
ANR	1258113	Identifier	smart_str_appends		1257686	0					
ANR	1258114	ArgumentList	& key		1257686	1					
ANR	1258115	Argument	& key		1257686	0					
ANR	1258116	UnaryOperationExpression	& key		1257686	0					
ANR	1258117	UnaryOperator	&		1257686	0					
ANR	1258118	Identifier	key		1257686	1					
ANR	1258119	Argument	group_name		1257686	1					
ANR	1258120	Identifier	group_name		1257686	0					
ANR	1258121	ExpressionStatement	smart_str_0 ( & key )	2000:3:64425:64442	1257686	12	True				
ANR	1258122	CallExpression	smart_str_0 ( & key )		1257686	0					
ANR	1258123	Callee	smart_str_0		1257686	0					
ANR	1258124	Identifier	smart_str_0		1257686	0					
ANR	1258125	ArgumentList	& key		1257686	1					
ANR	1258126	Argument	& key		1257686	0					
ANR	1258127	UnaryOperationExpression	& key		1257686	0					
ANR	1258128	UnaryOperator	&		1257686	0					
ANR	1258129	Identifier	key		1257686	1					
ANR	1258130	ExpressionStatement	newAttr -> ref = estrdup ( key . c )	2001:3:64447:64476	1257686	13	True				
ANR	1258131	AssignmentExpression	newAttr -> ref = estrdup ( key . c )		1257686	0		=			
ANR	1258132	PtrMemberAccess	newAttr -> ref		1257686	0					
ANR	1258133	Identifier	newAttr		1257686	0					
ANR	1258134	Identifier	ref		1257686	1					
ANR	1258135	CallExpression	estrdup ( key . c )		1257686	1					
ANR	1258136	Callee	estrdup		1257686	0					
ANR	1258137	Identifier	estrdup		1257686	0					
ANR	1258138	ArgumentList	key . c		1257686	1					
ANR	1258139	Argument	key . c		1257686	0					
ANR	1258140	MemberAccess	key . c		1257686	0					
ANR	1258141	Identifier	key		1257686	0					
ANR	1258142	Identifier	c		1257686	1					
ANR	1258143	IfStatement	if ( group_name )		1257686	14					
ANR	1258144	Condition	group_name	2002:7:64485:64494	1257686	0	True				
ANR	1258145	Identifier	group_name		1257686	0					
ANR	1258146	CompoundStatement		57:19:1729:1729	1257686	1					
ANR	1258147	ExpressionStatement	efree ( group_name )	2002:20:64498:64515	1257686	0	True				
ANR	1258148	CallExpression	efree ( group_name )		1257686	0					
ANR	1258149	Callee	efree		1257686	0					
ANR	1258150	Identifier	efree		1257686	0					
ANR	1258151	ArgumentList	group_name		1257686	1					
ANR	1258152	Argument	group_name		1257686	0					
ANR	1258153	Identifier	group_name		1257686	0					
ANR	1258154	IfStatement	if ( ns )		1257686	15					
ANR	1258155	Condition	ns	2003:7:64525:64526	1257686	0	True				
ANR	1258156	Identifier	ns		1257686	0					
ANR	1258157	CompoundStatement		58:11:1761:1761	1257686	1					
ANR	1258158	ExpressionStatement	efree ( ns )	2003:12:64530:64539	1257686	0	True				
ANR	1258159	CallExpression	efree ( ns )		1257686	0					
ANR	1258160	Callee	efree		1257686	0					
ANR	1258161	Identifier	efree		1257686	0					
ANR	1258162	ArgumentList	ns		1257686	1					
ANR	1258163	Argument	ns		1257686	0					
ANR	1258164	Identifier	ns		1257686	0					
ANR	1258165	ExpressionStatement	smart_str_free ( & key )	2004:3:64545:64565	1257686	16	True				
ANR	1258166	CallExpression	smart_str_free ( & key )		1257686	0					
ANR	1258167	Callee	smart_str_free		1257686	0					
ANR	1258168	Identifier	smart_str_free		1257686	0					
ANR	1258169	ArgumentList	& key		1257686	1					
ANR	1258170	Argument	& key		1257686	0					
ANR	1258171	UnaryOperationExpression	& key		1257686	0					
ANR	1258172	UnaryOperator	&		1257686	0					
ANR	1258173	Identifier	key		1257686	1					
ANR	1258174	ExpressionStatement	"zend_hash_next_index_insert ( cur_type -> attributes , & newAttr , sizeof ( sdlAttributePtr ) , NULL )"	2006:3:64571:64661	1257686	17	True				
ANR	1258175	CallExpression	"zend_hash_next_index_insert ( cur_type -> attributes , & newAttr , sizeof ( sdlAttributePtr ) , NULL )"		1257686	0					
ANR	1258176	Callee	zend_hash_next_index_insert		1257686	0					
ANR	1258177	Identifier	zend_hash_next_index_insert		1257686	0					
ANR	1258178	ArgumentList	cur_type -> attributes		1257686	1					
ANR	1258179	Argument	cur_type -> attributes		1257686	0					
ANR	1258180	PtrMemberAccess	cur_type -> attributes		1257686	0					
ANR	1258181	Identifier	cur_type		1257686	0					
ANR	1258182	Identifier	attributes		1257686	1					
ANR	1258183	Argument	& newAttr		1257686	1					
ANR	1258184	UnaryOperationExpression	& newAttr		1257686	0					
ANR	1258185	UnaryOperator	&		1257686	0					
ANR	1258186	Identifier	newAttr		1257686	1					
ANR	1258187	Argument	sizeof ( sdlAttributePtr )		1257686	2					
ANR	1258188	SizeofExpression	sizeof ( sdlAttributePtr )		1257686	0					
ANR	1258189	Sizeof	sizeof		1257686	0					
ANR	1258190	SizeofOperand	sdlAttributePtr		1257686	1					
ANR	1258191	Argument	NULL		1257686	3					
ANR	1258192	Identifier	NULL		1257686	0					
ANR	1258193	ExpressionStatement	cur_type = NULL	2007:3:64666:64681	1257686	18	True				
ANR	1258194	AssignmentExpression	cur_type = NULL		1257686	0		=			
ANR	1258195	Identifier	cur_type		1257686	0					
ANR	1258196	Identifier	NULL		1257686	1					
ANR	1258197	ElseStatement	else		1257686	0					
ANR	1258198	CompoundStatement		64:7:1926:1926	1257686	0					
ANR	1258199	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has no 'name' nor 'ref' attributes"" )"	2010:2:64698:64787	1257686	0	True				
ANR	1258200	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has no 'name' nor 'ref' attributes"" )"		1257686	0					
ANR	1258201	Callee	soap_error0		1257686	0					
ANR	1258202	Identifier	soap_error0		1257686	0					
ANR	1258203	ArgumentList	E_ERROR		1257686	1					
ANR	1258204	Argument	E_ERROR		1257686	0					
ANR	1258205	Identifier	E_ERROR		1257686	0					
ANR	1258206	Argument	"""Parsing Schema: attributeGroup has no 'name' nor 'ref' attributes"""		1257686	1					
ANR	1258207	PrimaryExpression	"""Parsing Schema: attributeGroup has no 'name' nor 'ref' attributes"""		1257686	0					
ANR	1258208	ExpressionStatement	trav = attrGroup -> children	2013:1:64794:64820	1257686	5	True				
ANR	1258209	AssignmentExpression	trav = attrGroup -> children		1257686	0		=			
ANR	1258210	Identifier	trav		1257686	0					
ANR	1258211	PtrMemberAccess	attrGroup -> children		1257686	1					
ANR	1258212	Identifier	attrGroup		1257686	0					
ANR	1258213	Identifier	children		1257686	1					
ANR	1258214	IfStatement	"if ( trav != NULL && node_is_equal ( trav , ""annotation"" ) )"		1257686	6					
ANR	1258215	Condition	"trav != NULL && node_is_equal ( trav , ""annotation"" )"	2014:5:64827:64875	1257686	0	True				
ANR	1258216	AndExpression	"trav != NULL && node_is_equal ( trav , ""annotation"" )"		1257686	0		&&			
ANR	1258217	EqualityExpression	trav != NULL		1257686	0		!=			
ANR	1258218	Identifier	trav		1257686	0					
ANR	1258219	Identifier	NULL		1257686	1					
ANR	1258220	CallExpression	"node_is_equal ( trav , ""annotation"" )"		1257686	1					
ANR	1258221	Callee	node_is_equal		1257686	0					
ANR	1258222	Identifier	node_is_equal		1257686	0					
ANR	1258223	ArgumentList	trav		1257686	1					
ANR	1258224	Argument	trav		1257686	0					
ANR	1258225	Identifier	trav		1257686	0					
ANR	1258226	Argument	"""annotation"""		1257686	1					
ANR	1258227	PrimaryExpression	"""annotation"""		1257686	0					
ANR	1258228	CompoundStatement		69:56:2110:2110	1257686	1					
ANR	1258229	ExpressionStatement	trav = trav -> next	2016:2:64917:64934	1257686	0	True				
ANR	1258230	AssignmentExpression	trav = trav -> next		1257686	0		=			
ANR	1258231	Identifier	trav		1257686	0					
ANR	1258232	PtrMemberAccess	trav -> next		1257686	1					
ANR	1258233	Identifier	trav		1257686	0					
ANR	1258234	Identifier	next		1257686	1					
ANR	1258235	WhileStatement	while ( trav != NULL )		1257686	7					
ANR	1258236	Condition	trav != NULL	2018:8:64947:64958	1257686	0	True				
ANR	1258237	EqualityExpression	trav != NULL		1257686	0		!=			
ANR	1258238	Identifier	trav		1257686	0					
ANR	1258239	Identifier	NULL		1257686	1					
ANR	1258240	CompoundStatement		73:22:2193:2193	1257686	1					
ANR	1258241	IfStatement	"if ( node_is_equal ( trav , ""attribute"" ) )"		1257686	0					
ANR	1258242	Condition	"node_is_equal ( trav , ""attribute"" )"	2019:6:64969:64999	1257686	0	True				
ANR	1258243	CallExpression	"node_is_equal ( trav , ""attribute"" )"		1257686	0					
ANR	1258244	Callee	node_is_equal		1257686	0					
ANR	1258245	Identifier	node_is_equal		1257686	0					
ANR	1258246	ArgumentList	trav		1257686	1					
ANR	1258247	Argument	trav		1257686	0					
ANR	1258248	Identifier	trav		1257686	0					
ANR	1258249	Argument	"""attribute"""		1257686	1					
ANR	1258250	PrimaryExpression	"""attribute"""		1257686	0					
ANR	1258251	CompoundStatement		74:39:2234:2234	1257686	1					
ANR	1258252	IfStatement	if ( ref != NULL )		1257686	0					
ANR	1258253	Condition	ref != NULL	2020:7:65011:65021	1257686	0	True				
ANR	1258254	EqualityExpression	ref != NULL		1257686	0		!=			
ANR	1258255	Identifier	ref		1257686	0					
ANR	1258256	Identifier	NULL		1257686	1					
ANR	1258257	CompoundStatement		75:20:2256:2256	1257686	1					
ANR	1258258	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"" )"	2021:4:65030:65126	1257686	0	True				
ANR	1258259	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"" )"		1257686	0					
ANR	1258260	Callee	soap_error0		1257686	0					
ANR	1258261	Identifier	soap_error0		1257686	0					
ANR	1258262	ArgumentList	E_ERROR		1257686	1					
ANR	1258263	Argument	E_ERROR		1257686	0					
ANR	1258264	Identifier	E_ERROR		1257686	0					
ANR	1258265	Argument	"""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"""		1257686	1					
ANR	1258266	PrimaryExpression	"""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"""		1257686	0					
ANR	1258267	ExpressionStatement	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"	2023:3:65136:65184	1257686	1	True				
ANR	1258268	CallExpression	"schema_attribute ( sdl , tns , trav , cur_type , NULL )"		1257686	0					
ANR	1258269	Callee	schema_attribute		1257686	0					
ANR	1258270	Identifier	schema_attribute		1257686	0					
ANR	1258271	ArgumentList	sdl		1257686	1					
ANR	1258272	Argument	sdl		1257686	0					
ANR	1258273	Identifier	sdl		1257686	0					
ANR	1258274	Argument	tns		1257686	1					
ANR	1258275	Identifier	tns		1257686	0					
ANR	1258276	Argument	trav		1257686	2					
ANR	1258277	Identifier	trav		1257686	0					
ANR	1258278	Argument	cur_type		1257686	3					
ANR	1258279	Identifier	cur_type		1257686	0					
ANR	1258280	Argument	NULL		1257686	4					
ANR	1258281	Identifier	NULL		1257686	0					
ANR	1258282	ElseStatement	else		1257686	0					
ANR	1258283	IfStatement	"if ( node_is_equal ( trav , ""attributeGroup"" ) )"		1257686	0					
ANR	1258284	Condition	"node_is_equal ( trav , ""attributeGroup"" )"	2024:13:65199:65234	1257686	0	True				
ANR	1258285	CallExpression	"node_is_equal ( trav , ""attributeGroup"" )"		1257686	0					
ANR	1258286	Callee	node_is_equal		1257686	0					
ANR	1258287	Identifier	node_is_equal		1257686	0					
ANR	1258288	ArgumentList	trav		1257686	1					
ANR	1258289	Argument	trav		1257686	0					
ANR	1258290	Identifier	trav		1257686	0					
ANR	1258291	Argument	"""attributeGroup"""		1257686	1					
ANR	1258292	PrimaryExpression	"""attributeGroup"""		1257686	0					
ANR	1258293	CompoundStatement		79:51:2469:2469	1257686	1					
ANR	1258294	IfStatement	if ( ref != NULL )		1257686	0					
ANR	1258295	Condition	ref != NULL	2025:7:65246:65256	1257686	0	True				
ANR	1258296	EqualityExpression	ref != NULL		1257686	0		!=			
ANR	1258297	Identifier	ref		1257686	0					
ANR	1258298	Identifier	NULL		1257686	1					
ANR	1258299	CompoundStatement		80:20:2491:2491	1257686	1					
ANR	1258300	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"" )"	2026:4:65265:65361	1257686	0	True				
ANR	1258301	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"" )"		1257686	0					
ANR	1258302	Callee	soap_error0		1257686	0					
ANR	1258303	Identifier	soap_error0		1257686	0					
ANR	1258304	ArgumentList	E_ERROR		1257686	1					
ANR	1258305	Argument	E_ERROR		1257686	0					
ANR	1258306	Identifier	E_ERROR		1257686	0					
ANR	1258307	Argument	"""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"""		1257686	1					
ANR	1258308	PrimaryExpression	"""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"""		1257686	0					
ANR	1258309	ExpressionStatement	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"	2028:3:65371:65424	1257686	1	True				
ANR	1258310	CallExpression	"schema_attributeGroup ( sdl , tns , trav , cur_type , NULL )"		1257686	0					
ANR	1258311	Callee	schema_attributeGroup		1257686	0					
ANR	1258312	Identifier	schema_attributeGroup		1257686	0					
ANR	1258313	ArgumentList	sdl		1257686	1					
ANR	1258314	Argument	sdl		1257686	0					
ANR	1258315	Identifier	sdl		1257686	0					
ANR	1258316	Argument	tns		1257686	1					
ANR	1258317	Identifier	tns		1257686	0					
ANR	1258318	Argument	trav		1257686	2					
ANR	1258319	Identifier	trav		1257686	0					
ANR	1258320	Argument	cur_type		1257686	3					
ANR	1258321	Identifier	cur_type		1257686	0					
ANR	1258322	Argument	NULL		1257686	4					
ANR	1258323	Identifier	NULL		1257686	0					
ANR	1258324	ElseStatement	else		1257686	0					
ANR	1258325	IfStatement	"if ( node_is_equal ( trav , ""anyAttribute"" ) )"		1257686	0					
ANR	1258326	Condition	"node_is_equal ( trav , ""anyAttribute"" )"	2029:13:65439:65472	1257686	0	True				
ANR	1258327	CallExpression	"node_is_equal ( trav , ""anyAttribute"" )"		1257686	0					
ANR	1258328	Callee	node_is_equal		1257686	0					
ANR	1258329	Identifier	node_is_equal		1257686	0					
ANR	1258330	ArgumentList	trav		1257686	1					
ANR	1258331	Argument	trav		1257686	0					
ANR	1258332	Identifier	trav		1257686	0					
ANR	1258333	Argument	"""anyAttribute"""		1257686	1					
ANR	1258334	PrimaryExpression	"""anyAttribute"""		1257686	0					
ANR	1258335	CompoundStatement		84:49:2707:2707	1257686	1					
ANR	1258336	IfStatement	if ( ref != NULL )		1257686	0					
ANR	1258337	Condition	ref != NULL	2030:7:65484:65494	1257686	0	True				
ANR	1258338	EqualityExpression	ref != NULL		1257686	0		!=			
ANR	1258339	Identifier	ref		1257686	0					
ANR	1258340	Identifier	NULL		1257686	1					
ANR	1258341	CompoundStatement		85:20:2729:2729	1257686	1					
ANR	1258342	ExpressionStatement	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"" )"	2031:4:65503:65599	1257686	0	True				
ANR	1258343	CallExpression	"soap_error0 ( E_ERROR , ""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"" )"		1257686	0					
ANR	1258344	Callee	soap_error0		1257686	0					
ANR	1258345	Identifier	soap_error0		1257686	0					
ANR	1258346	ArgumentList	E_ERROR		1257686	1					
ANR	1258347	Argument	E_ERROR		1257686	0					
ANR	1258348	Identifier	E_ERROR		1257686	0					
ANR	1258349	Argument	"""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"""		1257686	1					
ANR	1258350	PrimaryExpression	"""Parsing Schema: attributeGroup has both 'ref' attribute and subattribute"""		1257686	0					
ANR	1258351	ExpressionStatement	trav = trav -> next	2034:3:65647:65664	1257686	1	True				
ANR	1258352	AssignmentExpression	trav = trav -> next		1257686	0		=			
ANR	1258353	Identifier	trav		1257686	0					
ANR	1258354	PtrMemberAccess	trav -> next		1257686	1					
ANR	1258355	Identifier	trav		1257686	0					
ANR	1258356	Identifier	next		1257686	1					
ANR	1258357	BreakStatement	break ;	2035:3:65669:65674	1257686	2	True				
ANR	1258358	ElseStatement	else		1257686	0					
ANR	1258359	CompoundStatement		91:9:2917:2917	1257686	0					
ANR	1258360	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in attributeGroup"" , trav -> name )"	2037:3:65690:65775	1257686	0	True				
ANR	1258361	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in attributeGroup"" , trav -> name )"		1257686	0					
ANR	1258362	Callee	soap_error1		1257686	0					
ANR	1258363	Identifier	soap_error1		1257686	0					
ANR	1258364	ArgumentList	E_ERROR		1257686	1					
ANR	1258365	Argument	E_ERROR		1257686	0					
ANR	1258366	Identifier	E_ERROR		1257686	0					
ANR	1258367	Argument	"""Parsing Schema: unexpected <%s> in attributeGroup"""		1257686	1					
ANR	1258368	PrimaryExpression	"""Parsing Schema: unexpected <%s> in attributeGroup"""		1257686	0					
ANR	1258369	Argument	trav -> name		1257686	2					
ANR	1258370	PtrMemberAccess	trav -> name		1257686	0					
ANR	1258371	Identifier	trav		1257686	0					
ANR	1258372	Identifier	name		1257686	1					
ANR	1258373	ExpressionStatement	trav = trav -> next	2039:2:65783:65800	1257686	1	True				
ANR	1258374	AssignmentExpression	trav = trav -> next		1257686	0		=			
ANR	1258375	Identifier	trav		1257686	0					
ANR	1258376	PtrMemberAccess	trav -> next		1257686	1					
ANR	1258377	Identifier	trav		1257686	0					
ANR	1258378	Identifier	next		1257686	1					
ANR	1258379	IfStatement	if ( trav != NULL )		1257686	8					
ANR	1258380	Condition	trav != NULL	2041:5:65810:65821	1257686	0	True				
ANR	1258381	EqualityExpression	trav != NULL		1257686	0		!=			
ANR	1258382	Identifier	trav		1257686	0					
ANR	1258383	Identifier	NULL		1257686	1					
ANR	1258384	CompoundStatement		96:19:3056:3056	1257686	1					
ANR	1258385	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in attributeGroup"" , trav -> name )"	2042:2:65828:65913	1257686	0	True				
ANR	1258386	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unexpected <%s> in attributeGroup"" , trav -> name )"		1257686	0					
ANR	1258387	Callee	soap_error1		1257686	0					
ANR	1258388	Identifier	soap_error1		1257686	0					
ANR	1258389	ArgumentList	E_ERROR		1257686	1					
ANR	1258390	Argument	E_ERROR		1257686	0					
ANR	1258391	Identifier	E_ERROR		1257686	0					
ANR	1258392	Argument	"""Parsing Schema: unexpected <%s> in attributeGroup"""		1257686	1					
ANR	1258393	PrimaryExpression	"""Parsing Schema: unexpected <%s> in attributeGroup"""		1257686	0					
ANR	1258394	Argument	trav -> name		1257686	2					
ANR	1258395	PtrMemberAccess	trav -> name		1257686	0					
ANR	1258396	Identifier	trav		1257686	0					
ANR	1258397	Identifier	name		1257686	1					
ANR	1258398	ReturnStatement	return TRUE ;	2044:1:65919:65930	1257686	9	True				
ANR	1258399	Identifier	TRUE		1257686	0					
ANR	1258400	ReturnType	static int		1257686	1					
ANR	1258401	Identifier	schema_attributeGroup		1257686	2					
ANR	1258402	ParameterList	"sdlPtr sdl , xmlAttrPtr tns , xmlNodePtr attrGroup , sdlTypePtr cur_type , sdlCtx * ctx"		1257686	3					
ANR	1258403	Parameter	sdlPtr sdl	1945:33:62683:62692	1257686	0	True				
ANR	1258404	ParameterType	sdlPtr		1257686	0					
ANR	1258405	Identifier	sdl		1257686	1					
ANR	1258406	Parameter	xmlAttrPtr tns	1945:45:62695:62708	1257686	1	True				
ANR	1258407	ParameterType	xmlAttrPtr		1257686	0					
ANR	1258408	Identifier	tns		1257686	1					
ANR	1258409	Parameter	xmlNodePtr attrGroup	1945:61:62711:62730	1257686	2	True				
ANR	1258410	ParameterType	xmlNodePtr		1257686	0					
ANR	1258411	Identifier	attrGroup		1257686	1					
ANR	1258412	Parameter	sdlTypePtr cur_type	1945:83:62733:62751	1257686	3	True				
ANR	1258413	ParameterType	sdlTypePtr		1257686	0					
ANR	1258414	Identifier	cur_type		1257686	1					
ANR	1258415	Parameter	sdlCtx * ctx	1945:104:62754:62764	1257686	4	True				
ANR	1258416	ParameterType	sdlCtx *		1257686	0					
ANR	1258417	Identifier	ctx		1257686	1					
ANR	1258418	CFGEntryNode	ENTRY		1257686		True				
ANR	1258419	CFGExitNode	EXIT		1257686		True				
ANR	1258420	Symbol	newType		1257686						
ANR	1258421	Symbol	trav -> next		1257686						
ANR	1258422	Symbol	get_attribute		1257686						
ANR	1258423	Symbol	trav		1257686						
ANR	1258424	Symbol	attrGroup -> properties		1257686						
ANR	1258425	Symbol	ref		1257686						
ANR	1258426	Symbol	ref -> children		1257686						
ANR	1258427	Symbol	delete_attribute		1257686						
ANR	1258428	Symbol	cur_type		1257686						
ANR	1258429	Symbol	NULL		1257686						
ANR	1258430	Symbol	cur_type -> attributes		1257686						
ANR	1258431	Symbol	group_name		1257686						
ANR	1258432	Symbol	* ref -> children		1257686						
ANR	1258433	Symbol	ctx		1257686						
ANR	1258434	Symbol	TRUE		1257686						
ANR	1258435	Symbol	ns -> children -> content		1257686						
ANR	1258436	Symbol	* * name		1257686						
ANR	1258437	Symbol	name -> children -> content		1257686						
ANR	1258438	Symbol	ref -> children -> content		1257686						
ANR	1258439	Symbol	* * ns		1257686						
ANR	1258440	Symbol	* nsptr		1257686						
ANR	1258441	Symbol	tns		1257686						
ANR	1258442	Symbol	name		1257686						
ANR	1258443	Symbol	ctx -> attributeGroups		1257686						
ANR	1258444	Symbol	sdl		1257686						
ANR	1258445	Symbol	* attrGroup		1257686						
ANR	1258446	Symbol	trav -> name		1257686						
ANR	1258447	Symbol	BAD_CAST		1257686						
ANR	1258448	Symbol	& key		1257686						
ANR	1258449	Symbol	newAttr		1257686						
ANR	1258450	Symbol	* ns -> children		1257686						
ANR	1258451	Symbol	ns		1257686						
ANR	1258452	Symbol	attrGroup -> doc		1257686						
ANR	1258453	Symbol	& newType		1257686						
ANR	1258454	Symbol	node_is_equal		1257686						
ANR	1258455	Symbol	newType -> namens		1257686						
ANR	1258456	Symbol	nsptr		1257686						
ANR	1258457	Symbol	newAttr -> ref		1257686						
ANR	1258458	Symbol	* trav		1257686						
ANR	1258459	Symbol	emalloc		1257686						
ANR	1258460	Symbol	key . len		1257686						
ANR	1258461	Symbol	key		1257686						
ANR	1258462	Symbol	* newType		1257686						
ANR	1258463	Symbol	* name		1257686						
ANR	1258464	Symbol	attrGroup		1257686						
ANR	1258465	Symbol	newType -> name		1257686						
ANR	1258466	Symbol	ns -> children		1257686						
ANR	1258467	Symbol	name -> children		1257686						
ANR	1258468	Symbol	SUCCESS		1257686						
ANR	1258469	Symbol	nsptr -> href		1257686						
ANR	1258470	Symbol	& group_name		1257686						
ANR	1258471	Symbol	* * ref		1257686						
ANR	1258472	Symbol	* ns		1257686						
ANR	1258473	Symbol	* newAttr		1257686						
ANR	1258474	Symbol	* name -> children		1257686						
ANR	1258475	Symbol	xmlSearchNs		1257686						
ANR	1258476	Symbol	* ctx		1257686						
ANR	1258477	Symbol	* cur_type		1257686						
ANR	1258478	Symbol	& ns		1257686						
ANR	1258479	Symbol	E_ERROR		1257686						
ANR	1258480	Symbol	zend_hash_add		1257686						
ANR	1258481	Symbol	& newAttr		1257686						
ANR	1258482	Symbol	estrdup		1257686						
ANR	1258483	Symbol	key . c		1257686						
ANR	1258484	Symbol	* ref		1257686						
ANR	1258485	Symbol	attrGroup -> children		1257686						
ANR	1258486	Function	copy_extra_attribute	2047:0:65935:66335							
ANR	1258487	FunctionDef	copy_extra_attribute (void * attribute)		1258486	0					
ANR	1258488	CompoundStatement		2048:0:65985:66335	1258486	0					
ANR	1258489	IdentifierDeclStatement	sdlExtraAttributePtr * attr = ( sdlExtraAttributePtr * ) attribute ;	2049:1:65988:66049	1258486	0	True				
ANR	1258490	IdentifierDecl	* attr = ( sdlExtraAttributePtr * ) attribute		1258486	0					
ANR	1258491	IdentifierDeclType	sdlExtraAttributePtr *		1258486	0					
ANR	1258492	Identifier	attr		1258486	1					
ANR	1258493	AssignmentExpression	* attr = ( sdlExtraAttributePtr * ) attribute		1258486	2		=			
ANR	1258494	Identifier	attr		1258486	0					
ANR	1258495	CastExpression	( sdlExtraAttributePtr * ) attribute		1258486	1					
ANR	1258496	CastTarget	sdlExtraAttributePtr *		1258486	0					
ANR	1258497	Identifier	attribute		1258486	1					
ANR	1258498	IdentifierDeclStatement	sdlExtraAttributePtr new_attr ;	2050:1:66052:66081	1258486	1	True				
ANR	1258499	IdentifierDecl	new_attr		1258486	0					
ANR	1258500	IdentifierDeclType	sdlExtraAttributePtr		1258486	0					
ANR	1258501	Identifier	new_attr		1258486	1					
ANR	1258502	ExpressionStatement	new_attr = emalloc ( sizeof ( sdlExtraAttribute ) )	2052:1:66085:66130	1258486	2	True				
ANR	1258503	AssignmentExpression	new_attr = emalloc ( sizeof ( sdlExtraAttribute ) )		1258486	0		=			
ANR	1258504	Identifier	new_attr		1258486	0					
ANR	1258505	CallExpression	emalloc ( sizeof ( sdlExtraAttribute ) )		1258486	1					
ANR	1258506	Callee	emalloc		1258486	0					
ANR	1258507	Identifier	emalloc		1258486	0					
ANR	1258508	ArgumentList	sizeof ( sdlExtraAttribute )		1258486	1					
ANR	1258509	Argument	sizeof ( sdlExtraAttribute )		1258486	0					
ANR	1258510	SizeofExpression	sizeof ( sdlExtraAttribute )		1258486	0					
ANR	1258511	Sizeof	sizeof		1258486	0					
ANR	1258512	SizeofOperand	sdlExtraAttribute		1258486	1					
ANR	1258513	ExpressionStatement	"memcpy ( new_attr , * attr , sizeof ( sdlExtraAttribute ) )"	2053:1:66133:66183	1258486	3	True				
ANR	1258514	CallExpression	"memcpy ( new_attr , * attr , sizeof ( sdlExtraAttribute ) )"		1258486	0					
ANR	1258515	Callee	memcpy		1258486	0					
ANR	1258516	Identifier	memcpy		1258486	0					
ANR	1258517	ArgumentList	new_attr		1258486	1					
ANR	1258518	Argument	new_attr		1258486	0					
ANR	1258519	Identifier	new_attr		1258486	0					
ANR	1258520	Argument	* attr		1258486	1					
ANR	1258521	UnaryOperationExpression	* attr		1258486	0					
ANR	1258522	UnaryOperator	*		1258486	0					
ANR	1258523	Identifier	attr		1258486	1					
ANR	1258524	Argument	sizeof ( sdlExtraAttribute )		1258486	2					
ANR	1258525	SizeofExpression	sizeof ( sdlExtraAttribute )		1258486	0					
ANR	1258526	Sizeof	sizeof		1258486	0					
ANR	1258527	SizeofOperand	sdlExtraAttribute		1258486	1					
ANR	1258528	ExpressionStatement	* attr = new_attr	2054:1:66186:66202	1258486	4	True				
ANR	1258529	AssignmentExpression	* attr = new_attr		1258486	0		=			
ANR	1258530	UnaryOperationExpression	* attr		1258486	0					
ANR	1258531	UnaryOperator	*		1258486	0					
ANR	1258532	Identifier	attr		1258486	1					
ANR	1258533	Identifier	new_attr		1258486	1					
ANR	1258534	IfStatement	if ( new_attr -> ns )		1258486	5					
ANR	1258535	Condition	new_attr -> ns	2055:5:66209:66220	1258486	0	True				
ANR	1258536	PtrMemberAccess	new_attr -> ns		1258486	0					
ANR	1258537	Identifier	new_attr		1258486	0					
ANR	1258538	Identifier	ns		1258486	1					
ANR	1258539	CompoundStatement		8:19:237:237	1258486	1					
ANR	1258540	ExpressionStatement	new_attr -> ns = estrdup ( new_attr -> ns )	2056:2:66227:66263	1258486	0	True				
ANR	1258541	AssignmentExpression	new_attr -> ns = estrdup ( new_attr -> ns )		1258486	0		=			
ANR	1258542	PtrMemberAccess	new_attr -> ns		1258486	0					
ANR	1258543	Identifier	new_attr		1258486	0					
ANR	1258544	Identifier	ns		1258486	1					
ANR	1258545	CallExpression	estrdup ( new_attr -> ns )		1258486	1					
ANR	1258546	Callee	estrdup		1258486	0					
ANR	1258547	Identifier	estrdup		1258486	0					
ANR	1258548	ArgumentList	new_attr -> ns		1258486	1					
ANR	1258549	Argument	new_attr -> ns		1258486	0					
ANR	1258550	PtrMemberAccess	new_attr -> ns		1258486	0					
ANR	1258551	Identifier	new_attr		1258486	0					
ANR	1258552	Identifier	ns		1258486	1					
ANR	1258553	IfStatement	if ( new_attr -> val )		1258486	6					
ANR	1258554	Condition	new_attr -> val	2058:5:66273:66285	1258486	0	True				
ANR	1258555	PtrMemberAccess	new_attr -> val		1258486	0					
ANR	1258556	Identifier	new_attr		1258486	0					
ANR	1258557	Identifier	val		1258486	1					
ANR	1258558	CompoundStatement		11:20:302:302	1258486	1					
ANR	1258559	ExpressionStatement	new_attr -> val = estrdup ( new_attr -> val )	2059:2:66292:66330	1258486	0	True				
ANR	1258560	AssignmentExpression	new_attr -> val = estrdup ( new_attr -> val )		1258486	0		=			
ANR	1258561	PtrMemberAccess	new_attr -> val		1258486	0					
ANR	1258562	Identifier	new_attr		1258486	0					
ANR	1258563	Identifier	val		1258486	1					
ANR	1258564	CallExpression	estrdup ( new_attr -> val )		1258486	1					
ANR	1258565	Callee	estrdup		1258486	0					
ANR	1258566	Identifier	estrdup		1258486	0					
ANR	1258567	ArgumentList	new_attr -> val		1258486	1					
ANR	1258568	Argument	new_attr -> val		1258486	0					
ANR	1258569	PtrMemberAccess	new_attr -> val		1258486	0					
ANR	1258570	Identifier	new_attr		1258486	0					
ANR	1258571	Identifier	val		1258486	1					
ANR	1258572	ReturnType	static void		1258486	1					
ANR	1258573	Identifier	copy_extra_attribute		1258486	2					
ANR	1258574	ParameterList	void * attribute		1258486	3					
ANR	1258575	Parameter	void * attribute	2047:33:65968:65982	1258486	0	True				
ANR	1258576	ParameterType	void *		1258486	0					
ANR	1258577	Identifier	attribute		1258486	1					
ANR	1258578	CFGEntryNode	ENTRY		1258486		True				
ANR	1258579	CFGExitNode	EXIT		1258486		True				
ANR	1258580	Symbol	emalloc		1258486						
ANR	1258581	Symbol	new_attr -> ns		1258486						
ANR	1258582	Symbol	estrdup		1258486						
ANR	1258583	Symbol	attribute		1258486						
ANR	1258584	Symbol	* attr		1258486						
ANR	1258585	Symbol	attr		1258486						
ANR	1258586	Symbol	* new_attr		1258486						
ANR	1258587	Symbol	new_attr -> val		1258486						
ANR	1258588	Symbol	new_attr		1258486						
ANR	1258589	Function	schema_find_by_ref	2063:0:66338:66664							
ANR	1258590	FunctionDef	"schema_find_by_ref (HashTable * ht , char * ref)"		1258589	0					
ANR	1258591	CompoundStatement		2064:0:66396:66664	1258589	0					
ANR	1258592	IdentifierDeclStatement	void * * tmp ;	2065:1:66399:66409	1258589	0	True				
ANR	1258593	IdentifierDecl	* * tmp		1258589	0					
ANR	1258594	IdentifierDeclType	void * *		1258589	0					
ANR	1258595	Identifier	tmp		1258589	1					
ANR	1258596	IfStatement	"if ( zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp ) == SUCCESS )"		1258589	1					
ANR	1258597	Condition	"zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp ) == SUCCESS"	2067:5:66417:66479	1258589	0	True				
ANR	1258598	EqualityExpression	"zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1258589	0		==			
ANR	1258599	CallExpression	"zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp )"		1258589	0					
ANR	1258600	Callee	zend_hash_find		1258589	0					
ANR	1258601	Identifier	zend_hash_find		1258589	0					
ANR	1258602	ArgumentList	ht		1258589	1					
ANR	1258603	Argument	ht		1258589	0					
ANR	1258604	Identifier	ht		1258589	0					
ANR	1258605	Argument	ref		1258589	1					
ANR	1258606	Identifier	ref		1258589	0					
ANR	1258607	Argument	strlen ( ref ) + 1		1258589	2					
ANR	1258608	AdditiveExpression	strlen ( ref ) + 1		1258589	0		+			
ANR	1258609	CallExpression	strlen ( ref )		1258589	0					
ANR	1258610	Callee	strlen		1258589	0					
ANR	1258611	Identifier	strlen		1258589	0					
ANR	1258612	ArgumentList	ref		1258589	1					
ANR	1258613	Argument	ref		1258589	0					
ANR	1258614	Identifier	ref		1258589	0					
ANR	1258615	PrimaryExpression	1		1258589	1					
ANR	1258616	Argument	( void * * ) & tmp		1258589	3					
ANR	1258617	CastExpression	( void * * ) & tmp		1258589	0					
ANR	1258618	CastTarget	void * *		1258589	0					
ANR	1258619	UnaryOperationExpression	& tmp		1258589	1					
ANR	1258620	UnaryOperator	&		1258589	0					
ANR	1258621	Identifier	tmp		1258589	1					
ANR	1258622	Identifier	SUCCESS		1258589	1					
ANR	1258623	CompoundStatement		4:70:85:85	1258589	1					
ANR	1258624	ReturnStatement	return tmp ;	2068:2:66486:66496	1258589	0	True				
ANR	1258625	Identifier	tmp		1258589	0					
ANR	1258626	ElseStatement	else		1258589	0					
ANR	1258627	CompoundStatement		6:8:109:109	1258589	0					
ANR	1258628	ExpressionStatement	"ref = strrchr ( ref , ':' )"	2070:2:66510:66533	1258589	0	True				
ANR	1258629	AssignmentExpression	"ref = strrchr ( ref , ':' )"		1258589	0		=			
ANR	1258630	Identifier	ref		1258589	0					
ANR	1258631	CallExpression	"strrchr ( ref , ':' )"		1258589	1					
ANR	1258632	Callee	strrchr		1258589	0					
ANR	1258633	Identifier	strrchr		1258589	0					
ANR	1258634	ArgumentList	ref		1258589	1					
ANR	1258635	Argument	ref		1258589	0					
ANR	1258636	Identifier	ref		1258589	0					
ANR	1258637	Argument	':'		1258589	1					
ANR	1258638	PrimaryExpression	':'		1258589	0					
ANR	1258639	IfStatement	if ( ref )		1258589	1					
ANR	1258640	Condition	ref	2071:6:66541:66543	1258589	0	True				
ANR	1258641	Identifier	ref		1258589	0					
ANR	1258642	CompoundStatement		8:11:149:149	1258589	1					
ANR	1258643	IfStatement	"if ( zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp ) == SUCCESS )"		1258589	0					
ANR	1258644	Condition	"zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp ) == SUCCESS"	2072:7:66555:66617	1258589	0	True				
ANR	1258645	EqualityExpression	"zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1258589	0		==			
ANR	1258646	CallExpression	"zend_hash_find ( ht , ref , strlen ( ref ) + 1 , ( void * * ) & tmp )"		1258589	0					
ANR	1258647	Callee	zend_hash_find		1258589	0					
ANR	1258648	Identifier	zend_hash_find		1258589	0					
ANR	1258649	ArgumentList	ht		1258589	1					
ANR	1258650	Argument	ht		1258589	0					
ANR	1258651	Identifier	ht		1258589	0					
ANR	1258652	Argument	ref		1258589	1					
ANR	1258653	Identifier	ref		1258589	0					
ANR	1258654	Argument	strlen ( ref ) + 1		1258589	2					
ANR	1258655	AdditiveExpression	strlen ( ref ) + 1		1258589	0		+			
ANR	1258656	CallExpression	strlen ( ref )		1258589	0					
ANR	1258657	Callee	strlen		1258589	0					
ANR	1258658	Identifier	strlen		1258589	0					
ANR	1258659	ArgumentList	ref		1258589	1					
ANR	1258660	Argument	ref		1258589	0					
ANR	1258661	Identifier	ref		1258589	0					
ANR	1258662	PrimaryExpression	1		1258589	1					
ANR	1258663	Argument	( void * * ) & tmp		1258589	3					
ANR	1258664	CastExpression	( void * * ) & tmp		1258589	0					
ANR	1258665	CastTarget	void * *		1258589	0					
ANR	1258666	UnaryOperationExpression	& tmp		1258589	1					
ANR	1258667	UnaryOperator	&		1258589	0					
ANR	1258668	Identifier	tmp		1258589	1					
ANR	1258669	Identifier	SUCCESS		1258589	1					
ANR	1258670	CompoundStatement		9:72:223:223	1258589	1					
ANR	1258671	ReturnStatement	return tmp ;	2073:4:66626:66636	1258589	0	True				
ANR	1258672	Identifier	tmp		1258589	0					
ANR	1258673	ReturnStatement	return NULL ;	2077:1:66651:66662	1258589	2	True				
ANR	1258674	Identifier	NULL		1258589	0					
ANR	1258675	ReturnType	static void *		1258589	1					
ANR	1258676	Identifier	schema_find_by_ref		1258589	2					
ANR	1258677	ParameterList	"HashTable * ht , char * ref"		1258589	3					
ANR	1258678	Parameter	HashTable * ht	2063:32:66370:66382	1258589	0	True				
ANR	1258679	ParameterType	HashTable *		1258589	0					
ANR	1258680	Identifier	ht		1258589	1					
ANR	1258681	Parameter	char * ref	2063:47:66385:66393	1258589	1	True				
ANR	1258682	ParameterType	char *		1258589	0					
ANR	1258683	Identifier	ref		1258589	1					
ANR	1258684	CFGEntryNode	ENTRY		1258589		True				
ANR	1258685	CFGExitNode	EXIT		1258589		True				
ANR	1258686	Symbol	strlen		1258589						
ANR	1258687	Symbol	zend_hash_find		1258589						
ANR	1258688	Symbol	ref		1258589						
ANR	1258689	Symbol	SUCCESS		1258589						
ANR	1258690	Symbol	NULL		1258589						
ANR	1258691	Symbol	tmp		1258589						
ANR	1258692	Symbol	strrchr		1258589						
ANR	1258693	Symbol	& tmp		1258589						
ANR	1258694	Symbol	ht		1258589						
ANR	1258695	Function	schema_attribute_fixup	2080:0:66667:68176							
ANR	1258696	FunctionDef	"schema_attribute_fixup (sdlCtx * ctx , sdlAttributePtr attr)"		1258695	0					
ANR	1258697	CompoundStatement		2081:0:66737:68176	1258695	0					
ANR	1258698	IdentifierDeclStatement	sdlAttributePtr * tmp ;	2082:1:66740:66760	1258695	0	True				
ANR	1258699	IdentifierDecl	* tmp		1258695	0					
ANR	1258700	IdentifierDeclType	sdlAttributePtr *		1258695	0					
ANR	1258701	Identifier	tmp		1258695	1					
ANR	1258702	IfStatement	if ( attr -> ref != NULL )		1258695	1					
ANR	1258703	Condition	attr -> ref != NULL	2084:5:66768:66784	1258695	0	True				
ANR	1258704	EqualityExpression	attr -> ref != NULL		1258695	0		!=			
ANR	1258705	PtrMemberAccess	attr -> ref		1258695	0					
ANR	1258706	Identifier	attr		1258695	0					
ANR	1258707	Identifier	ref		1258695	1					
ANR	1258708	Identifier	NULL		1258695	1					
ANR	1258709	CompoundStatement		4:24:49:49	1258695	1					
ANR	1258710	IfStatement	if ( ctx -> attributes != NULL )		1258695	0					
ANR	1258711	Condition	ctx -> attributes != NULL	2085:6:66795:66817	1258695	0	True				
ANR	1258712	EqualityExpression	ctx -> attributes != NULL		1258695	0		!=			
ANR	1258713	PtrMemberAccess	ctx -> attributes		1258695	0					
ANR	1258714	Identifier	ctx		1258695	0					
ANR	1258715	Identifier	attributes		1258695	1					
ANR	1258716	Identifier	NULL		1258695	1					
ANR	1258717	CompoundStatement		5:31:82:82	1258695	1					
ANR	1258718	ExpressionStatement	"tmp = ( sdlAttributePtr * ) schema_find_by_ref ( ctx -> attributes , attr -> ref )"	2086:3:66825:66895	1258695	0	True				
ANR	1258719	AssignmentExpression	"tmp = ( sdlAttributePtr * ) schema_find_by_ref ( ctx -> attributes , attr -> ref )"		1258695	0		=			
ANR	1258720	Identifier	tmp		1258695	0					
ANR	1258721	CastExpression	"( sdlAttributePtr * ) schema_find_by_ref ( ctx -> attributes , attr -> ref )"		1258695	1					
ANR	1258722	CastTarget	sdlAttributePtr *		1258695	0					
ANR	1258723	CallExpression	"schema_find_by_ref ( ctx -> attributes , attr -> ref )"		1258695	1					
ANR	1258724	Callee	schema_find_by_ref		1258695	0					
ANR	1258725	Identifier	schema_find_by_ref		1258695	0					
ANR	1258726	ArgumentList	ctx -> attributes		1258695	1					
ANR	1258727	Argument	ctx -> attributes		1258695	0					
ANR	1258728	PtrMemberAccess	ctx -> attributes		1258695	0					
ANR	1258729	Identifier	ctx		1258695	0					
ANR	1258730	Identifier	attributes		1258695	1					
ANR	1258731	Argument	attr -> ref		1258695	1					
ANR	1258732	PtrMemberAccess	attr -> ref		1258695	0					
ANR	1258733	Identifier	attr		1258695	0					
ANR	1258734	Identifier	ref		1258695	1					
ANR	1258735	IfStatement	if ( tmp )		1258695	1					
ANR	1258736	Condition	tmp	2087:7:66904:66906	1258695	0	True				
ANR	1258737	Identifier	tmp		1258695	0					
ANR	1258738	CompoundStatement		7:12:171:171	1258695	1					
ANR	1258739	ExpressionStatement	"schema_attribute_fixup ( ctx , * tmp )"	2088:4:66915:66948	1258695	0	True				
ANR	1258740	CallExpression	"schema_attribute_fixup ( ctx , * tmp )"		1258695	0					
ANR	1258741	Callee	schema_attribute_fixup		1258695	0					
ANR	1258742	Identifier	schema_attribute_fixup		1258695	0					
ANR	1258743	ArgumentList	ctx		1258695	1					
ANR	1258744	Argument	ctx		1258695	0					
ANR	1258745	Identifier	ctx		1258695	0					
ANR	1258746	Argument	* tmp		1258695	1					
ANR	1258747	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258748	UnaryOperator	*		1258695	0					
ANR	1258749	Identifier	tmp		1258695	1					
ANR	1258750	IfStatement	if ( ( * tmp ) -> name != NULL && attr -> name == NULL )		1258695	1					
ANR	1258751	Condition	( * tmp ) -> name != NULL && attr -> name == NULL	2089:8:66958:66999	1258695	0	True				
ANR	1258752	AndExpression	( * tmp ) -> name != NULL && attr -> name == NULL		1258695	0		&&			
ANR	1258753	EqualityExpression	( * tmp ) -> name != NULL		1258695	0		!=			
ANR	1258754	PtrMemberAccess	( * tmp ) -> name		1258695	0					
ANR	1258755	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258756	UnaryOperator	*		1258695	0					
ANR	1258757	Identifier	tmp		1258695	1					
ANR	1258758	Identifier	name		1258695	1					
ANR	1258759	Identifier	NULL		1258695	1					
ANR	1258760	EqualityExpression	attr -> name == NULL		1258695	1		==			
ANR	1258761	PtrMemberAccess	attr -> name		1258695	0					
ANR	1258762	Identifier	attr		1258695	0					
ANR	1258763	Identifier	name		1258695	1					
ANR	1258764	Identifier	NULL		1258695	1					
ANR	1258765	CompoundStatement		9:52:264:264	1258695	1					
ANR	1258766	ExpressionStatement	attr -> name = estrdup ( ( * tmp ) -> name )	2090:5:67009:67043	1258695	0	True				
ANR	1258767	AssignmentExpression	attr -> name = estrdup ( ( * tmp ) -> name )		1258695	0		=			
ANR	1258768	PtrMemberAccess	attr -> name		1258695	0					
ANR	1258769	Identifier	attr		1258695	0					
ANR	1258770	Identifier	name		1258695	1					
ANR	1258771	CallExpression	estrdup ( ( * tmp ) -> name )		1258695	1					
ANR	1258772	Callee	estrdup		1258695	0					
ANR	1258773	Identifier	estrdup		1258695	0					
ANR	1258774	ArgumentList	( * tmp ) -> name		1258695	1					
ANR	1258775	Argument	( * tmp ) -> name		1258695	0					
ANR	1258776	PtrMemberAccess	( * tmp ) -> name		1258695	0					
ANR	1258777	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258778	UnaryOperator	*		1258695	0					
ANR	1258779	Identifier	tmp		1258695	1					
ANR	1258780	Identifier	name		1258695	1					
ANR	1258781	IfStatement	if ( ( * tmp ) -> namens != NULL && attr -> namens == NULL )		1258695	2					
ANR	1258782	Condition	( * tmp ) -> namens != NULL && attr -> namens == NULL	2092:8:67059:67104	1258695	0	True				
ANR	1258783	AndExpression	( * tmp ) -> namens != NULL && attr -> namens == NULL		1258695	0		&&			
ANR	1258784	EqualityExpression	( * tmp ) -> namens != NULL		1258695	0		!=			
ANR	1258785	PtrMemberAccess	( * tmp ) -> namens		1258695	0					
ANR	1258786	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258787	UnaryOperator	*		1258695	0					
ANR	1258788	Identifier	tmp		1258695	1					
ANR	1258789	Identifier	namens		1258695	1					
ANR	1258790	Identifier	NULL		1258695	1					
ANR	1258791	EqualityExpression	attr -> namens == NULL		1258695	1		==			
ANR	1258792	PtrMemberAccess	attr -> namens		1258695	0					
ANR	1258793	Identifier	attr		1258695	0					
ANR	1258794	Identifier	namens		1258695	1					
ANR	1258795	Identifier	NULL		1258695	1					
ANR	1258796	CompoundStatement		12:56:369:369	1258695	1					
ANR	1258797	ExpressionStatement	attr -> namens = estrdup ( ( * tmp ) -> namens )	2093:5:67114:67152	1258695	0	True				
ANR	1258798	AssignmentExpression	attr -> namens = estrdup ( ( * tmp ) -> namens )		1258695	0		=			
ANR	1258799	PtrMemberAccess	attr -> namens		1258695	0					
ANR	1258800	Identifier	attr		1258695	0					
ANR	1258801	Identifier	namens		1258695	1					
ANR	1258802	CallExpression	estrdup ( ( * tmp ) -> namens )		1258695	1					
ANR	1258803	Callee	estrdup		1258695	0					
ANR	1258804	Identifier	estrdup		1258695	0					
ANR	1258805	ArgumentList	( * tmp ) -> namens		1258695	1					
ANR	1258806	Argument	( * tmp ) -> namens		1258695	0					
ANR	1258807	PtrMemberAccess	( * tmp ) -> namens		1258695	0					
ANR	1258808	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258809	UnaryOperator	*		1258695	0					
ANR	1258810	Identifier	tmp		1258695	1					
ANR	1258811	Identifier	namens		1258695	1					
ANR	1258812	IfStatement	if ( ( * tmp ) -> def != NULL && attr -> def == NULL )		1258695	3					
ANR	1258813	Condition	( * tmp ) -> def != NULL && attr -> def == NULL	2095:8:67168:67207	1258695	0	True				
ANR	1258814	AndExpression	( * tmp ) -> def != NULL && attr -> def == NULL		1258695	0		&&			
ANR	1258815	EqualityExpression	( * tmp ) -> def != NULL		1258695	0		!=			
ANR	1258816	PtrMemberAccess	( * tmp ) -> def		1258695	0					
ANR	1258817	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258818	UnaryOperator	*		1258695	0					
ANR	1258819	Identifier	tmp		1258695	1					
ANR	1258820	Identifier	def		1258695	1					
ANR	1258821	Identifier	NULL		1258695	1					
ANR	1258822	EqualityExpression	attr -> def == NULL		1258695	1		==			
ANR	1258823	PtrMemberAccess	attr -> def		1258695	0					
ANR	1258824	Identifier	attr		1258695	0					
ANR	1258825	Identifier	def		1258695	1					
ANR	1258826	Identifier	NULL		1258695	1					
ANR	1258827	CompoundStatement		15:50:472:472	1258695	1					
ANR	1258828	ExpressionStatement	attr -> def = estrdup ( ( * tmp ) -> def )	2096:5:67217:67249	1258695	0	True				
ANR	1258829	AssignmentExpression	attr -> def = estrdup ( ( * tmp ) -> def )		1258695	0		=			
ANR	1258830	PtrMemberAccess	attr -> def		1258695	0					
ANR	1258831	Identifier	attr		1258695	0					
ANR	1258832	Identifier	def		1258695	1					
ANR	1258833	CallExpression	estrdup ( ( * tmp ) -> def )		1258695	1					
ANR	1258834	Callee	estrdup		1258695	0					
ANR	1258835	Identifier	estrdup		1258695	0					
ANR	1258836	ArgumentList	( * tmp ) -> def		1258695	1					
ANR	1258837	Argument	( * tmp ) -> def		1258695	0					
ANR	1258838	PtrMemberAccess	( * tmp ) -> def		1258695	0					
ANR	1258839	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258840	UnaryOperator	*		1258695	0					
ANR	1258841	Identifier	tmp		1258695	1					
ANR	1258842	Identifier	def		1258695	1					
ANR	1258843	IfStatement	if ( ( * tmp ) -> fixed != NULL && attr -> fixed == NULL )		1258695	4					
ANR	1258844	Condition	( * tmp ) -> fixed != NULL && attr -> fixed == NULL	2098:8:67265:67308	1258695	0	True				
ANR	1258845	AndExpression	( * tmp ) -> fixed != NULL && attr -> fixed == NULL		1258695	0		&&			
ANR	1258846	EqualityExpression	( * tmp ) -> fixed != NULL		1258695	0		!=			
ANR	1258847	PtrMemberAccess	( * tmp ) -> fixed		1258695	0					
ANR	1258848	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258849	UnaryOperator	*		1258695	0					
ANR	1258850	Identifier	tmp		1258695	1					
ANR	1258851	Identifier	fixed		1258695	1					
ANR	1258852	Identifier	NULL		1258695	1					
ANR	1258853	EqualityExpression	attr -> fixed == NULL		1258695	1		==			
ANR	1258854	PtrMemberAccess	attr -> fixed		1258695	0					
ANR	1258855	Identifier	attr		1258695	0					
ANR	1258856	Identifier	fixed		1258695	1					
ANR	1258857	Identifier	NULL		1258695	1					
ANR	1258858	CompoundStatement		18:54:573:573	1258695	1					
ANR	1258859	ExpressionStatement	attr -> fixed = estrdup ( ( * tmp ) -> fixed )	2099:5:67318:67354	1258695	0	True				
ANR	1258860	AssignmentExpression	attr -> fixed = estrdup ( ( * tmp ) -> fixed )		1258695	0		=			
ANR	1258861	PtrMemberAccess	attr -> fixed		1258695	0					
ANR	1258862	Identifier	attr		1258695	0					
ANR	1258863	Identifier	fixed		1258695	1					
ANR	1258864	CallExpression	estrdup ( ( * tmp ) -> fixed )		1258695	1					
ANR	1258865	Callee	estrdup		1258695	0					
ANR	1258866	Identifier	estrdup		1258695	0					
ANR	1258867	ArgumentList	( * tmp ) -> fixed		1258695	1					
ANR	1258868	Argument	( * tmp ) -> fixed		1258695	0					
ANR	1258869	PtrMemberAccess	( * tmp ) -> fixed		1258695	0					
ANR	1258870	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258871	UnaryOperator	*		1258695	0					
ANR	1258872	Identifier	tmp		1258695	1					
ANR	1258873	Identifier	fixed		1258695	1					
ANR	1258874	IfStatement	if ( attr -> form == XSD_FORM_DEFAULT )		1258695	5					
ANR	1258875	Condition	attr -> form == XSD_FORM_DEFAULT	2101:8:67370:67399	1258695	0	True				
ANR	1258876	EqualityExpression	attr -> form == XSD_FORM_DEFAULT		1258695	0		==			
ANR	1258877	PtrMemberAccess	attr -> form		1258695	0					
ANR	1258878	Identifier	attr		1258695	0					
ANR	1258879	Identifier	form		1258695	1					
ANR	1258880	Identifier	XSD_FORM_DEFAULT		1258695	1					
ANR	1258881	CompoundStatement		21:40:664:664	1258695	1					
ANR	1258882	ExpressionStatement	attr -> form = ( * tmp ) -> form	2102:5:67409:67434	1258695	0	True				
ANR	1258883	AssignmentExpression	attr -> form = ( * tmp ) -> form		1258695	0		=			
ANR	1258884	PtrMemberAccess	attr -> form		1258695	0					
ANR	1258885	Identifier	attr		1258695	0					
ANR	1258886	Identifier	form		1258695	1					
ANR	1258887	PtrMemberAccess	( * tmp ) -> form		1258695	1					
ANR	1258888	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258889	UnaryOperator	*		1258695	0					
ANR	1258890	Identifier	tmp		1258695	1					
ANR	1258891	Identifier	form		1258695	1					
ANR	1258892	IfStatement	if ( attr -> use == XSD_USE_DEFAULT )		1258695	6					
ANR	1258893	Condition	attr -> use == XSD_USE_DEFAULT	2104:8:67450:67477	1258695	0	True				
ANR	1258894	EqualityExpression	attr -> use == XSD_USE_DEFAULT		1258695	0		==			
ANR	1258895	PtrMemberAccess	attr -> use		1258695	0					
ANR	1258896	Identifier	attr		1258695	0					
ANR	1258897	Identifier	use		1258695	1					
ANR	1258898	Identifier	XSD_USE_DEFAULT		1258695	1					
ANR	1258899	CompoundStatement		24:38:742:742	1258695	1					
ANR	1258900	ExpressionStatement	attr -> use = ( * tmp ) -> use	2105:5:67487:67511	1258695	0	True				
ANR	1258901	AssignmentExpression	attr -> use = ( * tmp ) -> use		1258695	0		=			
ANR	1258902	PtrMemberAccess	attr -> use		1258695	0					
ANR	1258903	Identifier	attr		1258695	0					
ANR	1258904	Identifier	use		1258695	1					
ANR	1258905	PtrMemberAccess	( * tmp ) -> use		1258695	1					
ANR	1258906	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258907	UnaryOperator	*		1258695	0					
ANR	1258908	Identifier	tmp		1258695	1					
ANR	1258909	Identifier	use		1258695	1					
ANR	1258910	IfStatement	if ( ( * tmp ) -> extraAttributes != NULL )		1258695	7					
ANR	1258911	Condition	( * tmp ) -> extraAttributes != NULL	2107:8:67527:67557	1258695	0	True				
ANR	1258912	EqualityExpression	( * tmp ) -> extraAttributes != NULL		1258695	0		!=			
ANR	1258913	PtrMemberAccess	( * tmp ) -> extraAttributes		1258695	0					
ANR	1258914	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258915	UnaryOperator	*		1258695	0					
ANR	1258916	Identifier	tmp		1258695	1					
ANR	1258917	Identifier	extraAttributes		1258695	1					
ANR	1258918	Identifier	NULL		1258695	1					
ANR	1258919	CompoundStatement		28:6:830:845	1258695	1					
ANR	1258920	IdentifierDeclStatement	xmlNodePtr node ;	2108:6:67568:67583	1258695	0	True				
ANR	1258921	IdentifierDecl	node		1258695	0					
ANR	1258922	IdentifierDeclType	xmlNodePtr		1258695	0					
ANR	1258923	Identifier	node		1258695	1					
ANR	1258924	ExpressionStatement	attr -> extraAttributes = emalloc ( sizeof ( HashTable ) )	2110:5:67591:67641	1258695	1	True				
ANR	1258925	AssignmentExpression	attr -> extraAttributes = emalloc ( sizeof ( HashTable ) )		1258695	0		=			
ANR	1258926	PtrMemberAccess	attr -> extraAttributes		1258695	0					
ANR	1258927	Identifier	attr		1258695	0					
ANR	1258928	Identifier	extraAttributes		1258695	1					
ANR	1258929	CallExpression	emalloc ( sizeof ( HashTable ) )		1258695	1					
ANR	1258930	Callee	emalloc		1258695	0					
ANR	1258931	Identifier	emalloc		1258695	0					
ANR	1258932	ArgumentList	sizeof ( HashTable )		1258695	1					
ANR	1258933	Argument	sizeof ( HashTable )		1258695	0					
ANR	1258934	SizeofExpression	sizeof ( HashTable )		1258695	0					
ANR	1258935	Sizeof	sizeof		1258695	0					
ANR	1258936	SizeofOperand	HashTable		1258695	1					
ANR	1258937	ExpressionStatement	"zend_hash_init ( attr -> extraAttributes , zend_hash_num_elements ( ( * tmp ) -> extraAttributes ) , NULL , delete_extra_attribute , 0 )"	2111:5:67648:67767	1258695	2	True				
ANR	1258938	CallExpression	"zend_hash_init ( attr -> extraAttributes , zend_hash_num_elements ( ( * tmp ) -> extraAttributes ) , NULL , delete_extra_attribute , 0 )"		1258695	0					
ANR	1258939	Callee	zend_hash_init		1258695	0					
ANR	1258940	Identifier	zend_hash_init		1258695	0					
ANR	1258941	ArgumentList	attr -> extraAttributes		1258695	1					
ANR	1258942	Argument	attr -> extraAttributes		1258695	0					
ANR	1258943	PtrMemberAccess	attr -> extraAttributes		1258695	0					
ANR	1258944	Identifier	attr		1258695	0					
ANR	1258945	Identifier	extraAttributes		1258695	1					
ANR	1258946	Argument	zend_hash_num_elements ( ( * tmp ) -> extraAttributes )		1258695	1					
ANR	1258947	CallExpression	zend_hash_num_elements ( ( * tmp ) -> extraAttributes )		1258695	0					
ANR	1258948	Callee	zend_hash_num_elements		1258695	0					
ANR	1258949	Identifier	zend_hash_num_elements		1258695	0					
ANR	1258950	ArgumentList	( * tmp ) -> extraAttributes		1258695	1					
ANR	1258951	Argument	( * tmp ) -> extraAttributes		1258695	0					
ANR	1258952	PtrMemberAccess	( * tmp ) -> extraAttributes		1258695	0					
ANR	1258953	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258954	UnaryOperator	*		1258695	0					
ANR	1258955	Identifier	tmp		1258695	1					
ANR	1258956	Identifier	extraAttributes		1258695	1					
ANR	1258957	Argument	NULL		1258695	2					
ANR	1258958	Identifier	NULL		1258695	0					
ANR	1258959	Argument	delete_extra_attribute		1258695	3					
ANR	1258960	Identifier	delete_extra_attribute		1258695	0					
ANR	1258961	Argument	0		1258695	4					
ANR	1258962	PrimaryExpression	0		1258695	0					
ANR	1258963	ExpressionStatement	"zend_hash_copy ( attr -> extraAttributes , ( * tmp ) -> extraAttributes , copy_extra_attribute , & node , sizeof ( xmlNodePtr ) )"	2112:5:67774:67885	1258695	3	True				
ANR	1258964	CallExpression	"zend_hash_copy ( attr -> extraAttributes , ( * tmp ) -> extraAttributes , copy_extra_attribute , & node , sizeof ( xmlNodePtr ) )"		1258695	0					
ANR	1258965	Callee	zend_hash_copy		1258695	0					
ANR	1258966	Identifier	zend_hash_copy		1258695	0					
ANR	1258967	ArgumentList	attr -> extraAttributes		1258695	1					
ANR	1258968	Argument	attr -> extraAttributes		1258695	0					
ANR	1258969	PtrMemberAccess	attr -> extraAttributes		1258695	0					
ANR	1258970	Identifier	attr		1258695	0					
ANR	1258971	Identifier	extraAttributes		1258695	1					
ANR	1258972	Argument	( * tmp ) -> extraAttributes		1258695	1					
ANR	1258973	PtrMemberAccess	( * tmp ) -> extraAttributes		1258695	0					
ANR	1258974	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258975	UnaryOperator	*		1258695	0					
ANR	1258976	Identifier	tmp		1258695	1					
ANR	1258977	Identifier	extraAttributes		1258695	1					
ANR	1258978	Argument	copy_extra_attribute		1258695	2					
ANR	1258979	Identifier	copy_extra_attribute		1258695	0					
ANR	1258980	Argument	& node		1258695	3					
ANR	1258981	UnaryOperationExpression	& node		1258695	0					
ANR	1258982	UnaryOperator	&		1258695	0					
ANR	1258983	Identifier	node		1258695	1					
ANR	1258984	Argument	sizeof ( xmlNodePtr )		1258695	4					
ANR	1258985	SizeofExpression	sizeof ( xmlNodePtr )		1258695	0					
ANR	1258986	Sizeof	sizeof		1258695	0					
ANR	1258987	SizeofOperand	xmlNodePtr		1258695	1					
ANR	1258988	ExpressionStatement	attr -> encode = ( * tmp ) -> encode	2114:4:67897:67926	1258695	8	True				
ANR	1258989	AssignmentExpression	attr -> encode = ( * tmp ) -> encode		1258695	0		=			
ANR	1258990	PtrMemberAccess	attr -> encode		1258695	0					
ANR	1258991	Identifier	attr		1258695	0					
ANR	1258992	Identifier	encode		1258695	1					
ANR	1258993	PtrMemberAccess	( * tmp ) -> encode		1258695	1					
ANR	1258994	UnaryOperationExpression	* tmp		1258695	0					
ANR	1258995	UnaryOperator	*		1258695	0					
ANR	1258996	Identifier	tmp		1258695	1					
ANR	1258997	Identifier	encode		1258695	1					
ANR	1258998	IfStatement	if ( attr -> name == NULL && attr -> ref != NULL )		1258695	1					
ANR	1258999	Condition	attr -> name == NULL && attr -> ref != NULL	2117:6:67943:67981	1258695	0	True				
ANR	1259000	AndExpression	attr -> name == NULL && attr -> ref != NULL		1258695	0		&&			
ANR	1259001	EqualityExpression	attr -> name == NULL		1258695	0		==			
ANR	1259002	PtrMemberAccess	attr -> name		1258695	0					
ANR	1259003	Identifier	attr		1258695	0					
ANR	1259004	Identifier	name		1258695	1					
ANR	1259005	Identifier	NULL		1258695	1					
ANR	1259006	EqualityExpression	attr -> ref != NULL		1258695	1		!=			
ANR	1259007	PtrMemberAccess	attr -> ref		1258695	0					
ANR	1259008	Identifier	attr		1258695	0					
ANR	1259009	Identifier	ref		1258695	1					
ANR	1259010	Identifier	NULL		1258695	1					
ANR	1259011	CompoundStatement		38:3:1251:1287	1258695	1					
ANR	1259012	IdentifierDeclStatement	"char * name = strrchr ( attr -> ref , ':' ) ;"	2118:3:67989:68025	1258695	0	True				
ANR	1259013	IdentifierDecl	"* name = strrchr ( attr -> ref , ':' )"		1258695	0					
ANR	1259014	IdentifierDeclType	char *		1258695	0					
ANR	1259015	Identifier	name		1258695	1					
ANR	1259016	AssignmentExpression	"* name = strrchr ( attr -> ref , ':' )"		1258695	2		=			
ANR	1259017	Identifier	name		1258695	0					
ANR	1259018	CallExpression	"strrchr ( attr -> ref , ':' )"		1258695	1					
ANR	1259019	Callee	strrchr		1258695	0					
ANR	1259020	Identifier	strrchr		1258695	0					
ANR	1259021	ArgumentList	attr -> ref		1258695	1					
ANR	1259022	Argument	attr -> ref		1258695	0					
ANR	1259023	PtrMemberAccess	attr -> ref		1258695	0					
ANR	1259024	Identifier	attr		1258695	0					
ANR	1259025	Identifier	ref		1258695	1					
ANR	1259026	Argument	':'		1258695	1					
ANR	1259027	PrimaryExpression	':'		1258695	0					
ANR	1259028	IfStatement	if ( name )		1258695	1					
ANR	1259029	Condition	name	2119:7:68034:68037	1258695	0	True				
ANR	1259030	Identifier	name		1258695	0					
ANR	1259031	CompoundStatement		39:13:1302:1302	1258695	1					
ANR	1259032	ExpressionStatement	attr -> name = estrdup ( name + 1 )	2120:4:68046:68074	1258695	0	True				
ANR	1259033	AssignmentExpression	attr -> name = estrdup ( name + 1 )		1258695	0		=			
ANR	1259034	PtrMemberAccess	attr -> name		1258695	0					
ANR	1259035	Identifier	attr		1258695	0					
ANR	1259036	Identifier	name		1258695	1					
ANR	1259037	CallExpression	estrdup ( name + 1 )		1258695	1					
ANR	1259038	Callee	estrdup		1258695	0					
ANR	1259039	Identifier	estrdup		1258695	0					
ANR	1259040	ArgumentList	name + 1		1258695	1					
ANR	1259041	Argument	name + 1		1258695	0					
ANR	1259042	AdditiveExpression	name + 1		1258695	0		+			
ANR	1259043	Identifier	name		1258695	0					
ANR	1259044	PrimaryExpression	1		1258695	1					
ANR	1259045	ElseStatement	else		1258695	0					
ANR	1259046	CompoundStatement		41:9:1347:1347	1258695	0					
ANR	1259047	ExpressionStatement	attr -> name = estrdup ( attr -> ref )	2122:4:68091:68122	1258695	0	True				
ANR	1259048	AssignmentExpression	attr -> name = estrdup ( attr -> ref )		1258695	0		=			
ANR	1259049	PtrMemberAccess	attr -> name		1258695	0					
ANR	1259050	Identifier	attr		1258695	0					
ANR	1259051	Identifier	name		1258695	1					
ANR	1259052	CallExpression	estrdup ( attr -> ref )		1258695	1					
ANR	1259053	Callee	estrdup		1258695	0					
ANR	1259054	Identifier	estrdup		1258695	0					
ANR	1259055	ArgumentList	attr -> ref		1258695	1					
ANR	1259056	Argument	attr -> ref		1258695	0					
ANR	1259057	PtrMemberAccess	attr -> ref		1258695	0					
ANR	1259058	Identifier	attr		1258695	0					
ANR	1259059	Identifier	ref		1258695	1					
ANR	1259060	ExpressionStatement	efree ( attr -> ref )	2125:2:68135:68151	1258695	2	True				
ANR	1259061	CallExpression	efree ( attr -> ref )		1258695	0					
ANR	1259062	Callee	efree		1258695	0					
ANR	1259063	Identifier	efree		1258695	0					
ANR	1259064	ArgumentList	attr -> ref		1258695	1					
ANR	1259065	Argument	attr -> ref		1258695	0					
ANR	1259066	PtrMemberAccess	attr -> ref		1258695	0					
ANR	1259067	Identifier	attr		1258695	0					
ANR	1259068	Identifier	ref		1258695	1					
ANR	1259069	ExpressionStatement	attr -> ref = NULL	2126:2:68155:68171	1258695	3	True				
ANR	1259070	AssignmentExpression	attr -> ref = NULL		1258695	0		=			
ANR	1259071	PtrMemberAccess	attr -> ref		1258695	0					
ANR	1259072	Identifier	attr		1258695	0					
ANR	1259073	Identifier	ref		1258695	1					
ANR	1259074	Identifier	NULL		1258695	1					
ANR	1259075	ReturnType	static void		1258695	1					
ANR	1259076	Identifier	schema_attribute_fixup		1258695	2					
ANR	1259077	ParameterList	"sdlCtx * ctx , sdlAttributePtr attr"		1258695	3					
ANR	1259078	Parameter	sdlCtx * ctx	2080:35:66702:66712	1258695	0	True				
ANR	1259079	ParameterType	sdlCtx *		1258695	0					
ANR	1259080	Identifier	ctx		1258695	1					
ANR	1259081	Parameter	sdlAttributePtr attr	2080:48:66715:66734	1258695	1	True				
ANR	1259082	ParameterType	sdlAttributePtr		1258695	0					
ANR	1259083	Identifier	attr		1258695	1					
ANR	1259084	CFGEntryNode	ENTRY		1258695		True				
ANR	1259085	CFGExitNode	EXIT		1258695		True				
ANR	1259086	Symbol	* tmp		1258695						
ANR	1259087	Symbol	ctx -> attributes		1258695						
ANR	1259088	Symbol	copy_extra_attribute		1258695						
ANR	1259089	Symbol	( * tmp ) -> namens		1258695						
ANR	1259090	Symbol	( * tmp ) -> extraAttributes		1258695						
ANR	1259091	Symbol	emalloc		1258695						
ANR	1259092	Symbol	tmp		1258695						
ANR	1259093	Symbol	attr -> extraAttributes		1258695						
ANR	1259094	Symbol	attr		1258695						
ANR	1259095	Symbol	attr -> fixed		1258695						
ANR	1259096	Symbol	XSD_USE_DEFAULT		1258695						
ANR	1259097	Symbol	delete_extra_attribute		1258695						
ANR	1259098	Symbol	( * tmp ) -> def		1258695						
ANR	1259099	Symbol	( * tmp ) -> encode		1258695						
ANR	1259100	Symbol	NULL		1258695						
ANR	1259101	Symbol	( * tmp ) -> use		1258695						
ANR	1259102	Symbol	attr -> use		1258695						
ANR	1259103	Symbol	zend_hash_num_elements		1258695						
ANR	1259104	Symbol	ctx		1258695						
ANR	1259105	Symbol	attr -> def		1258695						
ANR	1259106	Symbol	attr -> form		1258695						
ANR	1259107	Symbol	* * tmp		1258695						
ANR	1259108	Symbol	attr -> encode		1258695						
ANR	1259109	Symbol	* ctx		1258695						
ANR	1259110	Symbol	attr -> ref		1258695						
ANR	1259111	Symbol	node		1258695						
ANR	1259112	Symbol	& node		1258695						
ANR	1259113	Symbol	attr -> namens		1258695						
ANR	1259114	Symbol	( * tmp ) -> form		1258695						
ANR	1259115	Symbol	strrchr		1258695						
ANR	1259116	Symbol	( * tmp ) -> name		1258695						
ANR	1259117	Symbol	name		1258695						
ANR	1259118	Symbol	attr -> name		1258695						
ANR	1259119	Symbol	estrdup		1258695						
ANR	1259120	Symbol	schema_find_by_ref		1258695						
ANR	1259121	Symbol	* attr		1258695						
ANR	1259122	Symbol	XSD_FORM_DEFAULT		1258695						
ANR	1259123	Symbol	( * tmp ) -> fixed		1258695						
ANR	1259124	Function	schema_attributegroup_fixup	2130:0:68179:70130							
ANR	1259125	FunctionDef	"schema_attributegroup_fixup (sdlCtx * ctx , sdlAttributePtr attr , HashTable * ht)"		1259124	0					
ANR	1259126	CompoundStatement		2131:0:68269:70130	1259124	0					
ANR	1259127	IdentifierDeclStatement	sdlTypePtr * tmp ;	2132:1:68272:68287	1259124	0	True				
ANR	1259128	IdentifierDecl	* tmp		1259124	0					
ANR	1259129	IdentifierDeclType	sdlTypePtr *		1259124	0					
ANR	1259130	Identifier	tmp		1259124	1					
ANR	1259131	IdentifierDeclStatement	sdlAttributePtr * tmp_attr ;	2133:1:68290:68315	1259124	1	True				
ANR	1259132	IdentifierDecl	* tmp_attr		1259124	0					
ANR	1259133	IdentifierDeclType	sdlAttributePtr *		1259124	0					
ANR	1259134	Identifier	tmp_attr		1259124	1					
ANR	1259135	IfStatement	if ( attr -> ref != NULL )		1259124	2					
ANR	1259136	Condition	attr -> ref != NULL	2135:5:68323:68339	1259124	0	True				
ANR	1259137	EqualityExpression	attr -> ref != NULL		1259124	0		!=			
ANR	1259138	PtrMemberAccess	attr -> ref		1259124	0					
ANR	1259139	Identifier	attr		1259124	0					
ANR	1259140	Identifier	ref		1259124	1					
ANR	1259141	Identifier	NULL		1259124	1					
ANR	1259142	CompoundStatement		5:24:72:72	1259124	1					
ANR	1259143	IfStatement	if ( ctx -> attributeGroups != NULL )		1259124	0					
ANR	1259144	Condition	ctx -> attributeGroups != NULL	2136:6:68350:68377	1259124	0	True				
ANR	1259145	EqualityExpression	ctx -> attributeGroups != NULL		1259124	0		!=			
ANR	1259146	PtrMemberAccess	ctx -> attributeGroups		1259124	0					
ANR	1259147	Identifier	ctx		1259124	0					
ANR	1259148	Identifier	attributeGroups		1259124	1					
ANR	1259149	Identifier	NULL		1259124	1					
ANR	1259150	CompoundStatement		6:36:110:110	1259124	1					
ANR	1259151	ExpressionStatement	"tmp = ( sdlTypePtr * ) schema_find_by_ref ( ctx -> attributeGroups , attr -> ref )"	2137:3:68385:68455	1259124	0	True				
ANR	1259152	AssignmentExpression	"tmp = ( sdlTypePtr * ) schema_find_by_ref ( ctx -> attributeGroups , attr -> ref )"		1259124	0		=			
ANR	1259153	Identifier	tmp		1259124	0					
ANR	1259154	CastExpression	"( sdlTypePtr * ) schema_find_by_ref ( ctx -> attributeGroups , attr -> ref )"		1259124	1					
ANR	1259155	CastTarget	sdlTypePtr *		1259124	0					
ANR	1259156	CallExpression	"schema_find_by_ref ( ctx -> attributeGroups , attr -> ref )"		1259124	1					
ANR	1259157	Callee	schema_find_by_ref		1259124	0					
ANR	1259158	Identifier	schema_find_by_ref		1259124	0					
ANR	1259159	ArgumentList	ctx -> attributeGroups		1259124	1					
ANR	1259160	Argument	ctx -> attributeGroups		1259124	0					
ANR	1259161	PtrMemberAccess	ctx -> attributeGroups		1259124	0					
ANR	1259162	Identifier	ctx		1259124	0					
ANR	1259163	Identifier	attributeGroups		1259124	1					
ANR	1259164	Argument	attr -> ref		1259124	1					
ANR	1259165	PtrMemberAccess	attr -> ref		1259124	0					
ANR	1259166	Identifier	attr		1259124	0					
ANR	1259167	Identifier	ref		1259124	1					
ANR	1259168	IfStatement	if ( tmp )		1259124	1					
ANR	1259169	Condition	tmp	2138:7:68464:68466	1259124	0	True				
ANR	1259170	Identifier	tmp		1259124	0					
ANR	1259171	CompoundStatement		8:12:199:199	1259124	1					
ANR	1259172	IfStatement	if ( ( * tmp ) -> attributes )		1259124	0					
ANR	1259173	Condition	( * tmp ) -> attributes	2139:8:68479:68496	1259124	0	True				
ANR	1259174	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259175	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259176	UnaryOperator	*		1259124	0					
ANR	1259177	Identifier	tmp		1259124	1					
ANR	1259178	Identifier	attributes		1259124	1					
ANR	1259179	CompoundStatement		9:28:229:229	1259124	1					
ANR	1259180	ExpressionStatement	zend_hash_internal_pointer_reset ( ( * tmp ) -> attributes )	2140:5:68506:68558	1259124	0	True				
ANR	1259181	CallExpression	zend_hash_internal_pointer_reset ( ( * tmp ) -> attributes )		1259124	0					
ANR	1259182	Callee	zend_hash_internal_pointer_reset		1259124	0					
ANR	1259183	Identifier	zend_hash_internal_pointer_reset		1259124	0					
ANR	1259184	ArgumentList	( * tmp ) -> attributes		1259124	1					
ANR	1259185	Argument	( * tmp ) -> attributes		1259124	0					
ANR	1259186	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259187	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259188	UnaryOperator	*		1259124	0					
ANR	1259189	Identifier	tmp		1259124	1					
ANR	1259190	Identifier	attributes		1259124	1					
ANR	1259191	WhileStatement	"while ( zend_hash_get_current_data ( ( * tmp ) -> attributes , ( void * * ) & tmp_attr ) == SUCCESS )"		1259124	1					
ANR	1259192	Condition	"zend_hash_get_current_data ( ( * tmp ) -> attributes , ( void * * ) & tmp_attr ) == SUCCESS"	2141:12:68572:68646	1259124	0	True				
ANR	1259193	EqualityExpression	"zend_hash_get_current_data ( ( * tmp ) -> attributes , ( void * * ) & tmp_attr ) == SUCCESS"		1259124	0		==			
ANR	1259194	CallExpression	"zend_hash_get_current_data ( ( * tmp ) -> attributes , ( void * * ) & tmp_attr )"		1259124	0					
ANR	1259195	Callee	zend_hash_get_current_data		1259124	0					
ANR	1259196	Identifier	zend_hash_get_current_data		1259124	0					
ANR	1259197	ArgumentList	( * tmp ) -> attributes		1259124	1					
ANR	1259198	Argument	( * tmp ) -> attributes		1259124	0					
ANR	1259199	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259200	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259201	UnaryOperator	*		1259124	0					
ANR	1259202	Identifier	tmp		1259124	1					
ANR	1259203	Identifier	attributes		1259124	1					
ANR	1259204	Argument	( void * * ) & tmp_attr		1259124	1					
ANR	1259205	CastExpression	( void * * ) & tmp_attr		1259124	0					
ANR	1259206	CastTarget	void * *		1259124	0					
ANR	1259207	UnaryOperationExpression	& tmp_attr		1259124	1					
ANR	1259208	UnaryOperator	&		1259124	0					
ANR	1259209	Identifier	tmp_attr		1259124	1					
ANR	1259210	Identifier	SUCCESS		1259124	1					
ANR	1259211	CompoundStatement		11:89:379:379	1259124	1					
ANR	1259212	IfStatement	if ( zend_hash_get_current_key_type ( ( * tmp ) -> attributes ) == HASH_KEY_IS_STRING )		1259124	0					
ANR	1259213	Condition	zend_hash_get_current_key_type ( ( * tmp ) -> attributes ) == HASH_KEY_IS_STRING	2142:10:68661:68732	1259124	0	True				
ANR	1259214	EqualityExpression	zend_hash_get_current_key_type ( ( * tmp ) -> attributes ) == HASH_KEY_IS_STRING		1259124	0		==			
ANR	1259215	CallExpression	zend_hash_get_current_key_type ( ( * tmp ) -> attributes )		1259124	0					
ANR	1259216	Callee	zend_hash_get_current_key_type		1259124	0					
ANR	1259217	Identifier	zend_hash_get_current_key_type		1259124	0					
ANR	1259218	ArgumentList	( * tmp ) -> attributes		1259124	1					
ANR	1259219	Argument	( * tmp ) -> attributes		1259124	0					
ANR	1259220	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259221	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259222	UnaryOperator	*		1259124	0					
ANR	1259223	Identifier	tmp		1259124	1					
ANR	1259224	Identifier	attributes		1259124	1					
ANR	1259225	Identifier	HASH_KEY_IS_STRING		1259124	1					
ANR	1259226	CompoundStatement		15:7:513:536	1259124	1					
ANR	1259227	IdentifierDeclStatement	char * key ;	2143:7:68744:68753	1259124	0	True				
ANR	1259228	IdentifierDecl	* key		1259124	0					
ANR	1259229	IdentifierDeclType	char *		1259124	0					
ANR	1259230	Identifier	key		1259124	1					
ANR	1259231	IdentifierDeclStatement	uint key_len ;	2144:7:68762:68774	1259124	1	True				
ANR	1259232	IdentifierDecl	key_len		1259124	0					
ANR	1259233	IdentifierDeclType	uint		1259124	0					
ANR	1259234	Identifier	key_len		1259124	1					
ANR	1259235	IdentifierDeclStatement	sdlAttributePtr newAttr ;	2145:7:68783:68806	1259124	2	True				
ANR	1259236	IdentifierDecl	newAttr		1259124	0					
ANR	1259237	IdentifierDeclType	sdlAttributePtr		1259124	0					
ANR	1259238	Identifier	newAttr		1259124	1					
ANR	1259239	ExpressionStatement	"schema_attribute_fixup ( ctx , * tmp_attr )"	2147:7:68816:68853	1259124	3	True				
ANR	1259240	CallExpression	"schema_attribute_fixup ( ctx , * tmp_attr )"		1259124	0					
ANR	1259241	Callee	schema_attribute_fixup		1259124	0					
ANR	1259242	Identifier	schema_attribute_fixup		1259124	0					
ANR	1259243	ArgumentList	ctx		1259124	1					
ANR	1259244	Argument	ctx		1259124	0					
ANR	1259245	Identifier	ctx		1259124	0					
ANR	1259246	Argument	* tmp_attr		1259124	1					
ANR	1259247	UnaryOperationExpression	* tmp_attr		1259124	0					
ANR	1259248	UnaryOperator	*		1259124	0					
ANR	1259249	Identifier	tmp_attr		1259124	1					
ANR	1259250	ExpressionStatement	newAttr = emalloc ( sizeof ( sdlAttribute ) )	2149:7:68863:68902	1259124	4	True				
ANR	1259251	AssignmentExpression	newAttr = emalloc ( sizeof ( sdlAttribute ) )		1259124	0		=			
ANR	1259252	Identifier	newAttr		1259124	0					
ANR	1259253	CallExpression	emalloc ( sizeof ( sdlAttribute ) )		1259124	1					
ANR	1259254	Callee	emalloc		1259124	0					
ANR	1259255	Identifier	emalloc		1259124	0					
ANR	1259256	ArgumentList	sizeof ( sdlAttribute )		1259124	1					
ANR	1259257	Argument	sizeof ( sdlAttribute )		1259124	0					
ANR	1259258	SizeofExpression	sizeof ( sdlAttribute )		1259124	0					
ANR	1259259	Sizeof	sizeof		1259124	0					
ANR	1259260	SizeofOperand	sdlAttribute		1259124	1					
ANR	1259261	ExpressionStatement	"memcpy ( newAttr , * tmp_attr , sizeof ( sdlAttribute ) )"	2150:7:68911:68959	1259124	5	True				
ANR	1259262	CallExpression	"memcpy ( newAttr , * tmp_attr , sizeof ( sdlAttribute ) )"		1259124	0					
ANR	1259263	Callee	memcpy		1259124	0					
ANR	1259264	Identifier	memcpy		1259124	0					
ANR	1259265	ArgumentList	newAttr		1259124	1					
ANR	1259266	Argument	newAttr		1259124	0					
ANR	1259267	Identifier	newAttr		1259124	0					
ANR	1259268	Argument	* tmp_attr		1259124	1					
ANR	1259269	UnaryOperationExpression	* tmp_attr		1259124	0					
ANR	1259270	UnaryOperator	*		1259124	0					
ANR	1259271	Identifier	tmp_attr		1259124	1					
ANR	1259272	Argument	sizeof ( sdlAttribute )		1259124	2					
ANR	1259273	SizeofExpression	sizeof ( sdlAttribute )		1259124	0					
ANR	1259274	Sizeof	sizeof		1259124	0					
ANR	1259275	SizeofOperand	sdlAttribute		1259124	1					
ANR	1259276	IfStatement	if ( newAttr -> def )		1259124	6					
ANR	1259277	Condition	newAttr -> def	2151:11:68972:68983	1259124	0	True				
ANR	1259278	PtrMemberAccess	newAttr -> def		1259124	0					
ANR	1259279	Identifier	newAttr		1259124	0					
ANR	1259280	Identifier	def		1259124	1					
ANR	1259281	CompoundStatement		21:25:716:716	1259124	1					
ANR	1259282	ExpressionStatement	newAttr -> def = estrdup ( newAttr -> def )	2151:26:68987:69023	1259124	0	True				
ANR	1259283	AssignmentExpression	newAttr -> def = estrdup ( newAttr -> def )		1259124	0		=			
ANR	1259284	PtrMemberAccess	newAttr -> def		1259124	0					
ANR	1259285	Identifier	newAttr		1259124	0					
ANR	1259286	Identifier	def		1259124	1					
ANR	1259287	CallExpression	estrdup ( newAttr -> def )		1259124	1					
ANR	1259288	Callee	estrdup		1259124	0					
ANR	1259289	Identifier	estrdup		1259124	0					
ANR	1259290	ArgumentList	newAttr -> def		1259124	1					
ANR	1259291	Argument	newAttr -> def		1259124	0					
ANR	1259292	PtrMemberAccess	newAttr -> def		1259124	0					
ANR	1259293	Identifier	newAttr		1259124	0					
ANR	1259294	Identifier	def		1259124	1					
ANR	1259295	IfStatement	if ( newAttr -> fixed )		1259124	7					
ANR	1259296	Condition	newAttr -> fixed	2152:11:69037:69050	1259124	0	True				
ANR	1259297	PtrMemberAccess	newAttr -> fixed		1259124	0					
ANR	1259298	Identifier	newAttr		1259124	0					
ANR	1259299	Identifier	fixed		1259124	1					
ANR	1259300	CompoundStatement		22:27:783:783	1259124	1					
ANR	1259301	ExpressionStatement	newAttr -> fixed = estrdup ( newAttr -> fixed )	2152:28:69054:69094	1259124	0	True				
ANR	1259302	AssignmentExpression	newAttr -> fixed = estrdup ( newAttr -> fixed )		1259124	0		=			
ANR	1259303	PtrMemberAccess	newAttr -> fixed		1259124	0					
ANR	1259304	Identifier	newAttr		1259124	0					
ANR	1259305	Identifier	fixed		1259124	1					
ANR	1259306	CallExpression	estrdup ( newAttr -> fixed )		1259124	1					
ANR	1259307	Callee	estrdup		1259124	0					
ANR	1259308	Identifier	estrdup		1259124	0					
ANR	1259309	ArgumentList	newAttr -> fixed		1259124	1					
ANR	1259310	Argument	newAttr -> fixed		1259124	0					
ANR	1259311	PtrMemberAccess	newAttr -> fixed		1259124	0					
ANR	1259312	Identifier	newAttr		1259124	0					
ANR	1259313	Identifier	fixed		1259124	1					
ANR	1259314	IfStatement	if ( newAttr -> namens )		1259124	8					
ANR	1259315	Condition	newAttr -> namens	2153:11:69108:69122	1259124	0	True				
ANR	1259316	PtrMemberAccess	newAttr -> namens		1259124	0					
ANR	1259317	Identifier	newAttr		1259124	0					
ANR	1259318	Identifier	namens		1259124	1					
ANR	1259319	CompoundStatement		23:28:855:855	1259124	1					
ANR	1259320	ExpressionStatement	newAttr -> namens = estrdup ( newAttr -> namens )	2153:29:69126:69168	1259124	0	True				
ANR	1259321	AssignmentExpression	newAttr -> namens = estrdup ( newAttr -> namens )		1259124	0		=			
ANR	1259322	PtrMemberAccess	newAttr -> namens		1259124	0					
ANR	1259323	Identifier	newAttr		1259124	0					
ANR	1259324	Identifier	namens		1259124	1					
ANR	1259325	CallExpression	estrdup ( newAttr -> namens )		1259124	1					
ANR	1259326	Callee	estrdup		1259124	0					
ANR	1259327	Identifier	estrdup		1259124	0					
ANR	1259328	ArgumentList	newAttr -> namens		1259124	1					
ANR	1259329	Argument	newAttr -> namens		1259124	0					
ANR	1259330	PtrMemberAccess	newAttr -> namens		1259124	0					
ANR	1259331	Identifier	newAttr		1259124	0					
ANR	1259332	Identifier	namens		1259124	1					
ANR	1259333	IfStatement	if ( newAttr -> name )		1259124	9					
ANR	1259334	Condition	newAttr -> name	2154:11:69182:69194	1259124	0	True				
ANR	1259335	PtrMemberAccess	newAttr -> name		1259124	0					
ANR	1259336	Identifier	newAttr		1259124	0					
ANR	1259337	Identifier	name		1259124	1					
ANR	1259338	CompoundStatement		24:26:927:927	1259124	1					
ANR	1259339	ExpressionStatement	newAttr -> name = estrdup ( newAttr -> name )	2154:27:69198:69236	1259124	0	True				
ANR	1259340	AssignmentExpression	newAttr -> name = estrdup ( newAttr -> name )		1259124	0		=			
ANR	1259341	PtrMemberAccess	newAttr -> name		1259124	0					
ANR	1259342	Identifier	newAttr		1259124	0					
ANR	1259343	Identifier	name		1259124	1					
ANR	1259344	CallExpression	estrdup ( newAttr -> name )		1259124	1					
ANR	1259345	Callee	estrdup		1259124	0					
ANR	1259346	Identifier	estrdup		1259124	0					
ANR	1259347	ArgumentList	newAttr -> name		1259124	1					
ANR	1259348	Argument	newAttr -> name		1259124	0					
ANR	1259349	PtrMemberAccess	newAttr -> name		1259124	0					
ANR	1259350	Identifier	newAttr		1259124	0					
ANR	1259351	Identifier	name		1259124	1					
ANR	1259352	IfStatement	if ( newAttr -> extraAttributes )		1259124	10					
ANR	1259353	Condition	newAttr -> extraAttributes	2155:11:69250:69273	1259124	0	True				
ANR	1259354	PtrMemberAccess	newAttr -> extraAttributes		1259124	0					
ANR	1259355	Identifier	newAttr		1259124	0					
ANR	1259356	Identifier	extraAttributes		1259124	1					
ANR	1259357	CompoundStatement		27:8:1042:1084	1259124	1					
ANR	1259358	IdentifierDeclStatement	xmlNodePtr node ;	2156:9:69287:69302	1259124	0	True				
ANR	1259359	IdentifierDecl	node		1259124	0					
ANR	1259360	IdentifierDeclType	xmlNodePtr		1259124	0					
ANR	1259361	Identifier	node		1259124	1					
ANR	1259362	IdentifierDeclStatement	HashTable * ht = emalloc ( sizeof ( HashTable ) ) ;	2157:8:69312:69354	1259124	1	True				
ANR	1259363	IdentifierDecl	* ht = emalloc ( sizeof ( HashTable ) )		1259124	0					
ANR	1259364	IdentifierDeclType	HashTable *		1259124	0					
ANR	1259365	Identifier	ht		1259124	1					
ANR	1259366	AssignmentExpression	* ht = emalloc ( sizeof ( HashTable ) )		1259124	2		=			
ANR	1259367	Identifier	ht		1259124	0					
ANR	1259368	CallExpression	emalloc ( sizeof ( HashTable ) )		1259124	1					
ANR	1259369	Callee	emalloc		1259124	0					
ANR	1259370	Identifier	emalloc		1259124	0					
ANR	1259371	ArgumentList	sizeof ( HashTable )		1259124	1					
ANR	1259372	Argument	sizeof ( HashTable )		1259124	0					
ANR	1259373	SizeofExpression	sizeof ( HashTable )		1259124	0					
ANR	1259374	Sizeof	sizeof		1259124	0					
ANR	1259375	SizeofOperand	HashTable		1259124	1					
ANR	1259376	ExpressionStatement	"zend_hash_init ( ht , zend_hash_num_elements ( newAttr -> extraAttributes ) , NULL , delete_extra_attribute , 0 )"	2158:8:69364:69465	1259124	2	True				
ANR	1259377	CallExpression	"zend_hash_init ( ht , zend_hash_num_elements ( newAttr -> extraAttributes ) , NULL , delete_extra_attribute , 0 )"		1259124	0					
ANR	1259378	Callee	zend_hash_init		1259124	0					
ANR	1259379	Identifier	zend_hash_init		1259124	0					
ANR	1259380	ArgumentList	ht		1259124	1					
ANR	1259381	Argument	ht		1259124	0					
ANR	1259382	Identifier	ht		1259124	0					
ANR	1259383	Argument	zend_hash_num_elements ( newAttr -> extraAttributes )		1259124	1					
ANR	1259384	CallExpression	zend_hash_num_elements ( newAttr -> extraAttributes )		1259124	0					
ANR	1259385	Callee	zend_hash_num_elements		1259124	0					
ANR	1259386	Identifier	zend_hash_num_elements		1259124	0					
ANR	1259387	ArgumentList	newAttr -> extraAttributes		1259124	1					
ANR	1259388	Argument	newAttr -> extraAttributes		1259124	0					
ANR	1259389	PtrMemberAccess	newAttr -> extraAttributes		1259124	0					
ANR	1259390	Identifier	newAttr		1259124	0					
ANR	1259391	Identifier	extraAttributes		1259124	1					
ANR	1259392	Argument	NULL		1259124	2					
ANR	1259393	Identifier	NULL		1259124	0					
ANR	1259394	Argument	delete_extra_attribute		1259124	3					
ANR	1259395	Identifier	delete_extra_attribute		1259124	0					
ANR	1259396	Argument	0		1259124	4					
ANR	1259397	PrimaryExpression	0		1259124	0					
ANR	1259398	ExpressionStatement	"zend_hash_copy ( ht , newAttr -> extraAttributes , copy_extra_attribute , & node , sizeof ( xmlNodePtr ) )"	2159:8:69475:69568	1259124	3	True				
ANR	1259399	CallExpression	"zend_hash_copy ( ht , newAttr -> extraAttributes , copy_extra_attribute , & node , sizeof ( xmlNodePtr ) )"		1259124	0					
ANR	1259400	Callee	zend_hash_copy		1259124	0					
ANR	1259401	Identifier	zend_hash_copy		1259124	0					
ANR	1259402	ArgumentList	ht		1259124	1					
ANR	1259403	Argument	ht		1259124	0					
ANR	1259404	Identifier	ht		1259124	0					
ANR	1259405	Argument	newAttr -> extraAttributes		1259124	1					
ANR	1259406	PtrMemberAccess	newAttr -> extraAttributes		1259124	0					
ANR	1259407	Identifier	newAttr		1259124	0					
ANR	1259408	Identifier	extraAttributes		1259124	1					
ANR	1259409	Argument	copy_extra_attribute		1259124	2					
ANR	1259410	Identifier	copy_extra_attribute		1259124	0					
ANR	1259411	Argument	& node		1259124	3					
ANR	1259412	UnaryOperationExpression	& node		1259124	0					
ANR	1259413	UnaryOperator	&		1259124	0					
ANR	1259414	Identifier	node		1259124	1					
ANR	1259415	Argument	sizeof ( xmlNodePtr )		1259124	4					
ANR	1259416	SizeofExpression	sizeof ( xmlNodePtr )		1259124	0					
ANR	1259417	Sizeof	sizeof		1259124	0					
ANR	1259418	SizeofOperand	xmlNodePtr		1259124	1					
ANR	1259419	ExpressionStatement	newAttr -> extraAttributes = ht	2160:8:69578:69607	1259124	4	True				
ANR	1259420	AssignmentExpression	newAttr -> extraAttributes = ht		1259124	0		=			
ANR	1259421	PtrMemberAccess	newAttr -> extraAttributes		1259124	0					
ANR	1259422	Identifier	newAttr		1259124	0					
ANR	1259423	Identifier	extraAttributes		1259124	1					
ANR	1259424	Identifier	ht		1259124	1					
ANR	1259425	ExpressionStatement	"zend_hash_get_current_key_ex ( ( * tmp ) -> attributes , & key , & key_len , NULL , 0 , NULL )"	2163:7:69626:69705	1259124	11	True				
ANR	1259426	CallExpression	"zend_hash_get_current_key_ex ( ( * tmp ) -> attributes , & key , & key_len , NULL , 0 , NULL )"		1259124	0					
ANR	1259427	Callee	zend_hash_get_current_key_ex		1259124	0					
ANR	1259428	Identifier	zend_hash_get_current_key_ex		1259124	0					
ANR	1259429	ArgumentList	( * tmp ) -> attributes		1259124	1					
ANR	1259430	Argument	( * tmp ) -> attributes		1259124	0					
ANR	1259431	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259432	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259433	UnaryOperator	*		1259124	0					
ANR	1259434	Identifier	tmp		1259124	1					
ANR	1259435	Identifier	attributes		1259124	1					
ANR	1259436	Argument	& key		1259124	1					
ANR	1259437	UnaryOperationExpression	& key		1259124	0					
ANR	1259438	UnaryOperator	&		1259124	0					
ANR	1259439	Identifier	key		1259124	1					
ANR	1259440	Argument	& key_len		1259124	2					
ANR	1259441	UnaryOperationExpression	& key_len		1259124	0					
ANR	1259442	UnaryOperator	&		1259124	0					
ANR	1259443	Identifier	key_len		1259124	1					
ANR	1259444	Argument	NULL		1259124	3					
ANR	1259445	Identifier	NULL		1259124	0					
ANR	1259446	Argument	0		1259124	4					
ANR	1259447	PrimaryExpression	0		1259124	0					
ANR	1259448	Argument	NULL		1259124	5					
ANR	1259449	Identifier	NULL		1259124	0					
ANR	1259450	ExpressionStatement	"zend_hash_add ( ht , key , key_len , & newAttr , sizeof ( sdlAttributePtr ) , NULL )"	2164:7:69714:69786	1259124	12	True				
ANR	1259451	CallExpression	"zend_hash_add ( ht , key , key_len , & newAttr , sizeof ( sdlAttributePtr ) , NULL )"		1259124	0					
ANR	1259452	Callee	zend_hash_add		1259124	0					
ANR	1259453	Identifier	zend_hash_add		1259124	0					
ANR	1259454	ArgumentList	ht		1259124	1					
ANR	1259455	Argument	ht		1259124	0					
ANR	1259456	Identifier	ht		1259124	0					
ANR	1259457	Argument	key		1259124	1					
ANR	1259458	Identifier	key		1259124	0					
ANR	1259459	Argument	key_len		1259124	2					
ANR	1259460	Identifier	key_len		1259124	0					
ANR	1259461	Argument	& newAttr		1259124	3					
ANR	1259462	UnaryOperationExpression	& newAttr		1259124	0					
ANR	1259463	UnaryOperator	&		1259124	0					
ANR	1259464	Identifier	newAttr		1259124	1					
ANR	1259465	Argument	sizeof ( sdlAttributePtr )		1259124	4					
ANR	1259466	SizeofExpression	sizeof ( sdlAttributePtr )		1259124	0					
ANR	1259467	Sizeof	sizeof		1259124	0					
ANR	1259468	SizeofOperand	sdlAttributePtr		1259124	1					
ANR	1259469	Argument	NULL		1259124	5					
ANR	1259470	Identifier	NULL		1259124	0					
ANR	1259471	ExpressionStatement	zend_hash_move_forward ( ( * tmp ) -> attributes )	2166:7:69796:69838	1259124	13	True				
ANR	1259472	CallExpression	zend_hash_move_forward ( ( * tmp ) -> attributes )		1259124	0					
ANR	1259473	Callee	zend_hash_move_forward		1259124	0					
ANR	1259474	Identifier	zend_hash_move_forward		1259124	0					
ANR	1259475	ArgumentList	( * tmp ) -> attributes		1259124	1					
ANR	1259476	Argument	( * tmp ) -> attributes		1259124	0					
ANR	1259477	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259478	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259479	UnaryOperator	*		1259124	0					
ANR	1259480	Identifier	tmp		1259124	1					
ANR	1259481	Identifier	attributes		1259124	1					
ANR	1259482	ElseStatement	else		1259124	0					
ANR	1259483	CompoundStatement		38:7:1592:1603	1259124	0					
ANR	1259484	IdentifierDeclStatement	ulong index ;	2168:7:69862:69873	1259124	0	True				
ANR	1259485	IdentifierDecl	index		1259124	0					
ANR	1259486	IdentifierDeclType	ulong		1259124	0					
ANR	1259487	Identifier	index		1259124	1					
ANR	1259488	ExpressionStatement	"schema_attributegroup_fixup ( ctx , * tmp_attr , ht )"	2170:7:69883:69929	1259124	1	True				
ANR	1259489	CallExpression	"schema_attributegroup_fixup ( ctx , * tmp_attr , ht )"		1259124	0					
ANR	1259490	Callee	schema_attributegroup_fixup		1259124	0					
ANR	1259491	Identifier	schema_attributegroup_fixup		1259124	0					
ANR	1259492	ArgumentList	ctx		1259124	1					
ANR	1259493	Argument	ctx		1259124	0					
ANR	1259494	Identifier	ctx		1259124	0					
ANR	1259495	Argument	* tmp_attr		1259124	1					
ANR	1259496	UnaryOperationExpression	* tmp_attr		1259124	0					
ANR	1259497	UnaryOperator	*		1259124	0					
ANR	1259498	Identifier	tmp_attr		1259124	1					
ANR	1259499	Argument	ht		1259124	2					
ANR	1259500	Identifier	ht		1259124	0					
ANR	1259501	ExpressionStatement	"zend_hash_get_current_key ( ( * tmp ) -> attributes , NULL , & index , 0 )"	2171:7:69938:70000	1259124	2	True				
ANR	1259502	CallExpression	"zend_hash_get_current_key ( ( * tmp ) -> attributes , NULL , & index , 0 )"		1259124	0					
ANR	1259503	Callee	zend_hash_get_current_key		1259124	0					
ANR	1259504	Identifier	zend_hash_get_current_key		1259124	0					
ANR	1259505	ArgumentList	( * tmp ) -> attributes		1259124	1					
ANR	1259506	Argument	( * tmp ) -> attributes		1259124	0					
ANR	1259507	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259508	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259509	UnaryOperator	*		1259124	0					
ANR	1259510	Identifier	tmp		1259124	1					
ANR	1259511	Identifier	attributes		1259124	1					
ANR	1259512	Argument	NULL		1259124	1					
ANR	1259513	Identifier	NULL		1259124	0					
ANR	1259514	Argument	& index		1259124	2					
ANR	1259515	UnaryOperationExpression	& index		1259124	0					
ANR	1259516	UnaryOperator	&		1259124	0					
ANR	1259517	Identifier	index		1259124	1					
ANR	1259518	Argument	0		1259124	3					
ANR	1259519	PrimaryExpression	0		1259124	0					
ANR	1259520	ExpressionStatement	"zend_hash_index_del ( ( * tmp ) -> attributes , index )"	2172:7:70009:70055	1259124	3	True				
ANR	1259521	CallExpression	"zend_hash_index_del ( ( * tmp ) -> attributes , index )"		1259124	0					
ANR	1259522	Callee	zend_hash_index_del		1259124	0					
ANR	1259523	Identifier	zend_hash_index_del		1259124	0					
ANR	1259524	ArgumentList	( * tmp ) -> attributes		1259124	1					
ANR	1259525	Argument	( * tmp ) -> attributes		1259124	0					
ANR	1259526	PtrMemberAccess	( * tmp ) -> attributes		1259124	0					
ANR	1259527	UnaryOperationExpression	* tmp		1259124	0					
ANR	1259528	UnaryOperator	*		1259124	0					
ANR	1259529	Identifier	tmp		1259124	1					
ANR	1259530	Identifier	attributes		1259124	1					
ANR	1259531	Argument	index		1259124	1					
ANR	1259532	Identifier	index		1259124	0					
ANR	1259533	ExpressionStatement	efree ( attr -> ref )	2178:2:70089:70105	1259124	1	True				
ANR	1259534	CallExpression	efree ( attr -> ref )		1259124	0					
ANR	1259535	Callee	efree		1259124	0					
ANR	1259536	Identifier	efree		1259124	0					
ANR	1259537	ArgumentList	attr -> ref		1259124	1					
ANR	1259538	Argument	attr -> ref		1259124	0					
ANR	1259539	PtrMemberAccess	attr -> ref		1259124	0					
ANR	1259540	Identifier	attr		1259124	0					
ANR	1259541	Identifier	ref		1259124	1					
ANR	1259542	ExpressionStatement	attr -> ref = NULL	2179:2:70109:70125	1259124	2	True				
ANR	1259543	AssignmentExpression	attr -> ref = NULL		1259124	0		=			
ANR	1259544	PtrMemberAccess	attr -> ref		1259124	0					
ANR	1259545	Identifier	attr		1259124	0					
ANR	1259546	Identifier	ref		1259124	1					
ANR	1259547	Identifier	NULL		1259124	1					
ANR	1259548	ReturnType	static void		1259124	1					
ANR	1259549	Identifier	schema_attributegroup_fixup		1259124	2					
ANR	1259550	ParameterList	"sdlCtx * ctx , sdlAttributePtr attr , HashTable * ht"		1259124	3					
ANR	1259551	Parameter	sdlCtx * ctx	2130:40:68219:68229	1259124	0	True				
ANR	1259552	ParameterType	sdlCtx *		1259124	0					
ANR	1259553	Identifier	ctx		1259124	1					
ANR	1259554	Parameter	sdlAttributePtr attr	2130:53:68232:68251	1259124	1	True				
ANR	1259555	ParameterType	sdlAttributePtr		1259124	0					
ANR	1259556	Identifier	attr		1259124	1					
ANR	1259557	Parameter	HashTable * ht	2130:75:68254:68266	1259124	2	True				
ANR	1259558	ParameterType	HashTable *		1259124	0					
ANR	1259559	Identifier	ht		1259124	1					
ANR	1259560	CFGEntryNode	ENTRY		1259124		True				
ANR	1259561	CFGExitNode	EXIT		1259124		True				
ANR	1259562	Symbol	* tmp		1259124						
ANR	1259563	Symbol	newAttr		1259124						
ANR	1259564	Symbol	& key		1259124						
ANR	1259565	Symbol	& key_len		1259124						
ANR	1259566	Symbol	copy_extra_attribute		1259124						
ANR	1259567	Symbol	HASH_KEY_IS_STRING		1259124						
ANR	1259568	Symbol	ht		1259124						
ANR	1259569	Symbol	tmp_attr		1259124						
ANR	1259570	Symbol	emalloc		1259124						
ANR	1259571	Symbol	zend_hash_get_current_data		1259124						
ANR	1259572	Symbol	newAttr -> extraAttributes		1259124						
ANR	1259573	Symbol	tmp		1259124						
ANR	1259574	Symbol	& tmp_attr		1259124						
ANR	1259575	Symbol	newAttr -> def		1259124						
ANR	1259576	Symbol	& index		1259124						
ANR	1259577	Symbol	attr		1259124						
ANR	1259578	Symbol	key		1259124						
ANR	1259579	Symbol	delete_extra_attribute		1259124						
ANR	1259580	Symbol	key_len		1259124						
ANR	1259581	Symbol	( * tmp ) -> attributes		1259124						
ANR	1259582	Symbol	newAttr -> namens		1259124						
ANR	1259583	Symbol	NULL		1259124						
ANR	1259584	Symbol	SUCCESS		1259124						
ANR	1259585	Symbol	zend_hash_num_elements		1259124						
ANR	1259586	Symbol	ctx		1259124						
ANR	1259587	Symbol	newAttr -> name		1259124						
ANR	1259588	Symbol	* newAttr		1259124						
ANR	1259589	Symbol	index		1259124						
ANR	1259590	Symbol	* * tmp		1259124						
ANR	1259591	Symbol	newAttr -> fixed		1259124						
ANR	1259592	Symbol	* ctx		1259124						
ANR	1259593	Symbol	zend_hash_get_current_key_type		1259124						
ANR	1259594	Symbol	attr -> ref		1259124						
ANR	1259595	Symbol	node		1259124						
ANR	1259596	Symbol	& node		1259124						
ANR	1259597	Symbol	& newAttr		1259124						
ANR	1259598	Symbol	ctx -> attributeGroups		1259124						
ANR	1259599	Symbol	estrdup		1259124						
ANR	1259600	Symbol	schema_find_by_ref		1259124						
ANR	1259601	Symbol	* attr		1259124						
ANR	1259602	Symbol	* tmp_attr		1259124						
ANR	1259603	Function	schema_content_model_fixup	2183:0:70133:71553							
ANR	1259604	FunctionDef	"schema_content_model_fixup (sdlCtx * ctx , sdlContentModelPtr model)"		1259603	0					
ANR	1259605	CompoundStatement		2184:0:70211:71553	1259603	0					
ANR	1259606	SwitchStatement	switch ( model -> kind )		1259603	0					
ANR	1259607	Condition	model -> kind	2185:9:70222:70232	1259603	0	True				
ANR	1259608	PtrMemberAccess	model -> kind		1259603	0					
ANR	1259609	Identifier	model		1259603	0					
ANR	1259610	Identifier	kind		1259603	1					
ANR	1259611	CompoundStatement		2:22:23:23	1259603	1					
ANR	1259612	Label	case XSD_CONTENT_GROUP_REF :	2186:2:70239:70265	1259603	0	True				
ANR	1259613	Identifier	XSD_CONTENT_GROUP_REF		1259603	0					
ANR	1259614	CompoundStatement		4:3:60:75	1259603	1					
ANR	1259615	IdentifierDeclStatement	sdlTypePtr * tmp ;	2187:3:70272:70287	1259603	0	True				
ANR	1259616	IdentifierDecl	* tmp		1259603	0					
ANR	1259617	IdentifierDeclType	sdlTypePtr *		1259603	0					
ANR	1259618	Identifier	tmp		1259603	1					
ANR	1259619	IfStatement	"if ( ctx -> sdl -> groups && zend_hash_find ( ctx -> sdl -> groups , model -> u . group_ref , strlen ( model -> u . group_ref ) + 1 , ( void * * ) & tmp ) == SUCCESS )"		1259603	1					
ANR	1259620	Condition	"ctx -> sdl -> groups && zend_hash_find ( ctx -> sdl -> groups , model -> u . group_ref , strlen ( model -> u . group_ref ) + 1 , ( void * * ) & tmp ) == SUCCESS"	2189:7:70297:70423	1259603	0	True				
ANR	1259621	AndExpression	"ctx -> sdl -> groups && zend_hash_find ( ctx -> sdl -> groups , model -> u . group_ref , strlen ( model -> u . group_ref ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1259603	0		&&			
ANR	1259622	PtrMemberAccess	ctx -> sdl -> groups		1259603	0					
ANR	1259623	PtrMemberAccess	ctx -> sdl		1259603	0					
ANR	1259624	Identifier	ctx		1259603	0					
ANR	1259625	Identifier	sdl		1259603	1					
ANR	1259626	Identifier	groups		1259603	1					
ANR	1259627	EqualityExpression	"zend_hash_find ( ctx -> sdl -> groups , model -> u . group_ref , strlen ( model -> u . group_ref ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1259603	1		==			
ANR	1259628	CallExpression	"zend_hash_find ( ctx -> sdl -> groups , model -> u . group_ref , strlen ( model -> u . group_ref ) + 1 , ( void * * ) & tmp )"		1259603	0					
ANR	1259629	Callee	zend_hash_find		1259603	0					
ANR	1259630	Identifier	zend_hash_find		1259603	0					
ANR	1259631	ArgumentList	ctx -> sdl -> groups		1259603	1					
ANR	1259632	Argument	ctx -> sdl -> groups		1259603	0					
ANR	1259633	PtrMemberAccess	ctx -> sdl -> groups		1259603	0					
ANR	1259634	PtrMemberAccess	ctx -> sdl		1259603	0					
ANR	1259635	Identifier	ctx		1259603	0					
ANR	1259636	Identifier	sdl		1259603	1					
ANR	1259637	Identifier	groups		1259603	1					
ANR	1259638	Argument	model -> u . group_ref		1259603	1					
ANR	1259639	MemberAccess	model -> u . group_ref		1259603	0					
ANR	1259640	PtrMemberAccess	model -> u		1259603	0					
ANR	1259641	Identifier	model		1259603	0					
ANR	1259642	Identifier	u		1259603	1					
ANR	1259643	Identifier	group_ref		1259603	1					
ANR	1259644	Argument	strlen ( model -> u . group_ref ) + 1		1259603	2					
ANR	1259645	AdditiveExpression	strlen ( model -> u . group_ref ) + 1		1259603	0		+			
ANR	1259646	CallExpression	strlen ( model -> u . group_ref )		1259603	0					
ANR	1259647	Callee	strlen		1259603	0					
ANR	1259648	Identifier	strlen		1259603	0					
ANR	1259649	ArgumentList	model -> u . group_ref		1259603	1					
ANR	1259650	Argument	model -> u . group_ref		1259603	0					
ANR	1259651	MemberAccess	model -> u . group_ref		1259603	0					
ANR	1259652	PtrMemberAccess	model -> u		1259603	0					
ANR	1259653	Identifier	model		1259603	0					
ANR	1259654	Identifier	u		1259603	1					
ANR	1259655	Identifier	group_ref		1259603	1					
ANR	1259656	PrimaryExpression	1		1259603	1					
ANR	1259657	Argument	( void * * ) & tmp		1259603	3					
ANR	1259658	CastExpression	( void * * ) & tmp		1259603	0					
ANR	1259659	CastTarget	void * *		1259603	0					
ANR	1259660	UnaryOperationExpression	& tmp		1259603	1					
ANR	1259661	UnaryOperator	&		1259603	0					
ANR	1259662	Identifier	tmp		1259603	1					
ANR	1259663	Identifier	SUCCESS		1259603	1					
ANR	1259664	CompoundStatement		6:136:214:214	1259603	1					
ANR	1259665	ExpressionStatement	"schema_type_fixup ( ctx , * tmp )"	2190:4:70432:70459	1259603	0	True				
ANR	1259666	CallExpression	"schema_type_fixup ( ctx , * tmp )"		1259603	0					
ANR	1259667	Callee	schema_type_fixup		1259603	0					
ANR	1259668	Identifier	schema_type_fixup		1259603	0					
ANR	1259669	ArgumentList	ctx		1259603	1					
ANR	1259670	Argument	ctx		1259603	0					
ANR	1259671	Identifier	ctx		1259603	0					
ANR	1259672	Argument	* tmp		1259603	1					
ANR	1259673	UnaryOperationExpression	* tmp		1259603	0					
ANR	1259674	UnaryOperator	*		1259603	0					
ANR	1259675	Identifier	tmp		1259603	1					
ANR	1259676	ExpressionStatement	efree ( model -> u . group_ref )	2191:4:70465:70490	1259603	1	True				
ANR	1259677	CallExpression	efree ( model -> u . group_ref )		1259603	0					
ANR	1259678	Callee	efree		1259603	0					
ANR	1259679	Identifier	efree		1259603	0					
ANR	1259680	ArgumentList	model -> u . group_ref		1259603	1					
ANR	1259681	Argument	model -> u . group_ref		1259603	0					
ANR	1259682	MemberAccess	model -> u . group_ref		1259603	0					
ANR	1259683	PtrMemberAccess	model -> u		1259603	0					
ANR	1259684	Identifier	model		1259603	0					
ANR	1259685	Identifier	u		1259603	1					
ANR	1259686	Identifier	group_ref		1259603	1					
ANR	1259687	ExpressionStatement	model -> kind = XSD_CONTENT_GROUP	2192:4:70496:70527	1259603	2	True				
ANR	1259688	AssignmentExpression	model -> kind = XSD_CONTENT_GROUP		1259603	0		=			
ANR	1259689	PtrMemberAccess	model -> kind		1259603	0					
ANR	1259690	Identifier	model		1259603	0					
ANR	1259691	Identifier	kind		1259603	1					
ANR	1259692	Identifier	XSD_CONTENT_GROUP		1259603	1					
ANR	1259693	ExpressionStatement	model -> u . group = ( * tmp )	2193:4:70533:70556	1259603	3	True				
ANR	1259694	AssignmentExpression	model -> u . group = ( * tmp )		1259603	0		=			
ANR	1259695	MemberAccess	model -> u . group		1259603	0					
ANR	1259696	PtrMemberAccess	model -> u		1259603	0					
ANR	1259697	Identifier	model		1259603	0					
ANR	1259698	Identifier	u		1259603	1					
ANR	1259699	Identifier	group		1259603	1					
ANR	1259700	UnaryOperationExpression	* tmp		1259603	1					
ANR	1259701	UnaryOperator	*		1259603	0					
ANR	1259702	Identifier	tmp		1259603	1					
ANR	1259703	ElseStatement	else		1259603	0					
ANR	1259704	CompoundStatement		11:10:356:356	1259603	0					
ANR	1259705	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unresolved group 'ref' attribute '%s'"" , model -> u . group_ref )"	2195:4:70574:70671	1259603	0	True				
ANR	1259706	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unresolved group 'ref' attribute '%s'"" , model -> u . group_ref )"		1259603	0					
ANR	1259707	Callee	soap_error1		1259603	0					
ANR	1259708	Identifier	soap_error1		1259603	0					
ANR	1259709	ArgumentList	E_ERROR		1259603	1					
ANR	1259710	Argument	E_ERROR		1259603	0					
ANR	1259711	Identifier	E_ERROR		1259603	0					
ANR	1259712	Argument	"""Parsing Schema: unresolved group 'ref' attribute '%s'"""		1259603	1					
ANR	1259713	PrimaryExpression	"""Parsing Schema: unresolved group 'ref' attribute '%s'"""		1259603	0					
ANR	1259714	Argument	model -> u . group_ref		1259603	2					
ANR	1259715	MemberAccess	model -> u . group_ref		1259603	0					
ANR	1259716	PtrMemberAccess	model -> u		1259603	0					
ANR	1259717	Identifier	model		1259603	0					
ANR	1259718	Identifier	u		1259603	1					
ANR	1259719	Identifier	group_ref		1259603	1					
ANR	1259720	BreakStatement	break ;	2197:3:70681:70686	1259603	2	True				
ANR	1259721	Label	case XSD_CONTENT_CHOICE :	2199:2:70694:70717	1259603	2	True				
ANR	1259722	Identifier	XSD_CONTENT_CHOICE		1259603	0					
ANR	1259723	CompoundStatement		16:27:507:507	1259603	3					
ANR	1259724	IfStatement	if ( model -> max_occurs != 1 )		1259603	0					
ANR	1259725	Condition	model -> max_occurs != 1	2200:7:70728:70749	1259603	0	True				
ANR	1259726	EqualityExpression	model -> max_occurs != 1		1259603	0		!=			
ANR	1259727	PtrMemberAccess	model -> max_occurs		1259603	0					
ANR	1259728	Identifier	model		1259603	0					
ANR	1259729	Identifier	max_occurs		1259603	1					
ANR	1259730	PrimaryExpression	1		1259603	1					
ANR	1259731	CompoundStatement		19:4:568:591	1259603	1					
ANR	1259732	IdentifierDeclStatement	HashPosition pos ;	2201:4:70758:70774	1259603	0	True				
ANR	1259733	IdentifierDecl	pos		1259603	0					
ANR	1259734	IdentifierDeclType	HashPosition		1259603	0					
ANR	1259735	Identifier	pos		1259603	1					
ANR	1259736	IdentifierDeclStatement	sdlContentModelPtr * tmp ;	2202:4:70780:70803	1259603	1	True				
ANR	1259737	IdentifierDecl	* tmp		1259603	0					
ANR	1259738	IdentifierDeclType	sdlContentModelPtr *		1259603	0					
ANR	1259739	Identifier	tmp		1259603	1					
ANR	1259740	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"	2204:4:70810:70869	1259603	2	True				
ANR	1259741	CallExpression	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"		1259603	0					
ANR	1259742	Callee	zend_hash_internal_pointer_reset_ex		1259603	0					
ANR	1259743	Identifier	zend_hash_internal_pointer_reset_ex		1259603	0					
ANR	1259744	ArgumentList	model -> u . content		1259603	1					
ANR	1259745	Argument	model -> u . content		1259603	0					
ANR	1259746	MemberAccess	model -> u . content		1259603	0					
ANR	1259747	PtrMemberAccess	model -> u		1259603	0					
ANR	1259748	Identifier	model		1259603	0					
ANR	1259749	Identifier	u		1259603	1					
ANR	1259750	Identifier	content		1259603	1					
ANR	1259751	Argument	& pos		1259603	1					
ANR	1259752	UnaryOperationExpression	& pos		1259603	0					
ANR	1259753	UnaryOperator	&		1259603	0					
ANR	1259754	Identifier	pos		1259603	1					
ANR	1259755	WhileStatement	"while ( zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS )"		1259603	3					
ANR	1259756	Condition	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"	2205:11:70882:70959	1259603	0	True				
ANR	1259757	EqualityExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"		1259603	0		==			
ANR	1259758	CallExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos )"		1259603	0					
ANR	1259759	Callee	zend_hash_get_current_data_ex		1259603	0					
ANR	1259760	Identifier	zend_hash_get_current_data_ex		1259603	0					
ANR	1259761	ArgumentList	model -> u . content		1259603	1					
ANR	1259762	Argument	model -> u . content		1259603	0					
ANR	1259763	MemberAccess	model -> u . content		1259603	0					
ANR	1259764	PtrMemberAccess	model -> u		1259603	0					
ANR	1259765	Identifier	model		1259603	0					
ANR	1259766	Identifier	u		1259603	1					
ANR	1259767	Identifier	content		1259603	1					
ANR	1259768	Argument	( void * * ) & tmp		1259603	1					
ANR	1259769	CastExpression	( void * * ) & tmp		1259603	0					
ANR	1259770	CastTarget	void * *		1259603	0					
ANR	1259771	UnaryOperationExpression	& tmp		1259603	1					
ANR	1259772	UnaryOperator	&		1259603	0					
ANR	1259773	Identifier	tmp		1259603	1					
ANR	1259774	Argument	& pos		1259603	2					
ANR	1259775	UnaryOperationExpression	& pos		1259603	0					
ANR	1259776	UnaryOperator	&		1259603	0					
ANR	1259777	Identifier	pos		1259603	1					
ANR	1259778	Identifier	SUCCESS		1259603	1					
ANR	1259779	CompoundStatement		22:91:750:750	1259603	1					
ANR	1259780	ExpressionStatement	( * tmp ) -> min_occurs = 0	2206:5:70969:70991	1259603	0	True				
ANR	1259781	AssignmentExpression	( * tmp ) -> min_occurs = 0		1259603	0		=			
ANR	1259782	PtrMemberAccess	( * tmp ) -> min_occurs		1259603	0					
ANR	1259783	UnaryOperationExpression	* tmp		1259603	0					
ANR	1259784	UnaryOperator	*		1259603	0					
ANR	1259785	Identifier	tmp		1259603	1					
ANR	1259786	Identifier	min_occurs		1259603	1					
ANR	1259787	PrimaryExpression	0		1259603	1					
ANR	1259788	ExpressionStatement	( * tmp ) -> max_occurs = model -> max_occurs	2207:5:70998:71036	1259603	1	True				
ANR	1259789	AssignmentExpression	( * tmp ) -> max_occurs = model -> max_occurs		1259603	0		=			
ANR	1259790	PtrMemberAccess	( * tmp ) -> max_occurs		1259603	0					
ANR	1259791	UnaryOperationExpression	* tmp		1259603	0					
ANR	1259792	UnaryOperator	*		1259603	0					
ANR	1259793	Identifier	tmp		1259603	1					
ANR	1259794	Identifier	max_occurs		1259603	1					
ANR	1259795	PtrMemberAccess	model -> max_occurs		1259603	1					
ANR	1259796	Identifier	model		1259603	0					
ANR	1259797	Identifier	max_occurs		1259603	1					
ANR	1259798	ExpressionStatement	"zend_hash_move_forward_ex ( model -> u . content , & pos )"	2208:5:71043:71092	1259603	2	True				
ANR	1259799	CallExpression	"zend_hash_move_forward_ex ( model -> u . content , & pos )"		1259603	0					
ANR	1259800	Callee	zend_hash_move_forward_ex		1259603	0					
ANR	1259801	Identifier	zend_hash_move_forward_ex		1259603	0					
ANR	1259802	ArgumentList	model -> u . content		1259603	1					
ANR	1259803	Argument	model -> u . content		1259603	0					
ANR	1259804	MemberAccess	model -> u . content		1259603	0					
ANR	1259805	PtrMemberAccess	model -> u		1259603	0					
ANR	1259806	Identifier	model		1259603	0					
ANR	1259807	Identifier	u		1259603	1					
ANR	1259808	Identifier	content		1259603	1					
ANR	1259809	Argument	& pos		1259603	1					
ANR	1259810	UnaryOperationExpression	& pos		1259603	0					
ANR	1259811	UnaryOperator	&		1259603	0					
ANR	1259812	Identifier	pos		1259603	1					
ANR	1259813	ExpressionStatement	model -> kind = XSD_CONTENT_ALL	2211:4:71105:71134	1259603	4	True				
ANR	1259814	AssignmentExpression	model -> kind = XSD_CONTENT_ALL		1259603	0		=			
ANR	1259815	PtrMemberAccess	model -> kind		1259603	0					
ANR	1259816	Identifier	model		1259603	0					
ANR	1259817	Identifier	kind		1259603	1					
ANR	1259818	Identifier	XSD_CONTENT_ALL		1259603	1					
ANR	1259819	ExpressionStatement	model -> min_occurs = 1	2212:4:71140:71161	1259603	5	True				
ANR	1259820	AssignmentExpression	model -> min_occurs = 1		1259603	0		=			
ANR	1259821	PtrMemberAccess	model -> min_occurs		1259603	0					
ANR	1259822	Identifier	model		1259603	0					
ANR	1259823	Identifier	min_occurs		1259603	1					
ANR	1259824	PrimaryExpression	1		1259603	1					
ANR	1259825	ExpressionStatement	model -> max_occurs = 1	2213:4:71167:71188	1259603	6	True				
ANR	1259826	AssignmentExpression	model -> max_occurs = 1		1259603	0		=			
ANR	1259827	PtrMemberAccess	model -> max_occurs		1259603	0					
ANR	1259828	Identifier	model		1259603	0					
ANR	1259829	Identifier	max_occurs		1259603	1					
ANR	1259830	PrimaryExpression	1		1259603	1					
ANR	1259831	Label	case XSD_CONTENT_SEQUENCE :	2216:2:71201:71226	1259603	4	True				
ANR	1259832	Identifier	XSD_CONTENT_SEQUENCE		1259603	0					
ANR	1259833	Label	case XSD_CONTENT_ALL :	2217:2:71230:71250	1259603	5	True				
ANR	1259834	Identifier	XSD_CONTENT_ALL		1259603	0					
ANR	1259835	CompoundStatement		35:3:1045:1068	1259603	6					
ANR	1259836	IdentifierDeclStatement	sdlContentModelPtr * tmp ;	2218:3:71257:71280	1259603	0	True				
ANR	1259837	IdentifierDecl	* tmp		1259603	0					
ANR	1259838	IdentifierDeclType	sdlContentModelPtr *		1259603	0					
ANR	1259839	Identifier	tmp		1259603	1					
ANR	1259840	ExpressionStatement	zend_hash_internal_pointer_reset ( model -> u . content )	2220:3:71286:71336	1259603	1	True				
ANR	1259841	CallExpression	zend_hash_internal_pointer_reset ( model -> u . content )		1259603	0					
ANR	1259842	Callee	zend_hash_internal_pointer_reset		1259603	0					
ANR	1259843	Identifier	zend_hash_internal_pointer_reset		1259603	0					
ANR	1259844	ArgumentList	model -> u . content		1259603	1					
ANR	1259845	Argument	model -> u . content		1259603	0					
ANR	1259846	MemberAccess	model -> u . content		1259603	0					
ANR	1259847	PtrMemberAccess	model -> u		1259603	0					
ANR	1259848	Identifier	model		1259603	0					
ANR	1259849	Identifier	u		1259603	1					
ANR	1259850	Identifier	content		1259603	1					
ANR	1259851	WhileStatement	"while ( zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp ) == SUCCESS )"		1259603	2					
ANR	1259852	Condition	"zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp ) == SUCCESS"	2221:10:71348:71416	1259603	0	True				
ANR	1259853	EqualityExpression	"zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp ) == SUCCESS"		1259603	0		==			
ANR	1259854	CallExpression	"zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp )"		1259603	0					
ANR	1259855	Callee	zend_hash_get_current_data		1259603	0					
ANR	1259856	Identifier	zend_hash_get_current_data		1259603	0					
ANR	1259857	ArgumentList	model -> u . content		1259603	1					
ANR	1259858	Argument	model -> u . content		1259603	0					
ANR	1259859	MemberAccess	model -> u . content		1259603	0					
ANR	1259860	PtrMemberAccess	model -> u		1259603	0					
ANR	1259861	Identifier	model		1259603	0					
ANR	1259862	Identifier	u		1259603	1					
ANR	1259863	Identifier	content		1259603	1					
ANR	1259864	Argument	( void * * ) & tmp		1259603	1					
ANR	1259865	CastExpression	( void * * ) & tmp		1259603	0					
ANR	1259866	CastTarget	void * *		1259603	0					
ANR	1259867	UnaryOperationExpression	& tmp		1259603	1					
ANR	1259868	UnaryOperator	&		1259603	0					
ANR	1259869	Identifier	tmp		1259603	1					
ANR	1259870	Identifier	SUCCESS		1259603	1					
ANR	1259871	CompoundStatement		38:81:1207:1207	1259603	1					
ANR	1259872	ExpressionStatement	"schema_content_model_fixup ( ctx , * tmp )"	2222:4:71425:71462	1259603	0	True				
ANR	1259873	CallExpression	"schema_content_model_fixup ( ctx , * tmp )"		1259603	0					
ANR	1259874	Callee	schema_content_model_fixup		1259603	0					
ANR	1259875	Identifier	schema_content_model_fixup		1259603	0					
ANR	1259876	ArgumentList	ctx		1259603	1					
ANR	1259877	Argument	ctx		1259603	0					
ANR	1259878	Identifier	ctx		1259603	0					
ANR	1259879	Argument	* tmp		1259603	1					
ANR	1259880	UnaryOperationExpression	* tmp		1259603	0					
ANR	1259881	UnaryOperator	*		1259603	0					
ANR	1259882	Identifier	tmp		1259603	1					
ANR	1259883	ExpressionStatement	zend_hash_move_forward ( model -> u . content )	2223:4:71468:71508	1259603	1	True				
ANR	1259884	CallExpression	zend_hash_move_forward ( model -> u . content )		1259603	0					
ANR	1259885	Callee	zend_hash_move_forward		1259603	0					
ANR	1259886	Identifier	zend_hash_move_forward		1259603	0					
ANR	1259887	ArgumentList	model -> u . content		1259603	1					
ANR	1259888	Argument	model -> u . content		1259603	0					
ANR	1259889	MemberAccess	model -> u . content		1259603	0					
ANR	1259890	PtrMemberAccess	model -> u		1259603	0					
ANR	1259891	Identifier	model		1259603	0					
ANR	1259892	Identifier	u		1259603	1					
ANR	1259893	Identifier	content		1259603	1					
ANR	1259894	BreakStatement	break ;	2225:3:71518:71523	1259603	3	True				
ANR	1259895	Label	default :	2227:2:71531:71538	1259603	7	True				
ANR	1259896	Identifier	default		1259603	0					
ANR	1259897	BreakStatement	break ;	2228:3:71543:71548	1259603	8	True				
ANR	1259898	ReturnType	static void		1259603	1					
ANR	1259899	Identifier	schema_content_model_fixup		1259603	2					
ANR	1259900	ParameterList	"sdlCtx * ctx , sdlContentModelPtr model"		1259603	3					
ANR	1259901	Parameter	sdlCtx * ctx	2183:39:70172:70182	1259603	0	True				
ANR	1259902	ParameterType	sdlCtx *		1259603	0					
ANR	1259903	Identifier	ctx		1259603	1					
ANR	1259904	Parameter	sdlContentModelPtr model	2183:52:70185:70208	1259603	1	True				
ANR	1259905	ParameterType	sdlContentModelPtr		1259603	0					
ANR	1259906	Identifier	model		1259603	1					
ANR	1259907	CFGEntryNode	ENTRY		1259603		True				
ANR	1259908	CFGExitNode	EXIT		1259603		True				
ANR	1259909	Symbol	ctx -> sdl -> groups		1259603						
ANR	1259910	Symbol	* tmp		1259603						
ANR	1259911	Symbol	XSD_CONTENT_ALL		1259603						
ANR	1259912	Symbol	model -> u		1259603						
ANR	1259913	Symbol	zend_hash_get_current_data_ex		1259603						
ANR	1259914	Symbol	model -> max_occurs		1259603						
ANR	1259915	Symbol	( * tmp ) -> max_occurs		1259603						
ANR	1259916	Symbol	( * tmp ) -> min_occurs		1259603						
ANR	1259917	Symbol	XSD_CONTENT_GROUP		1259603						
ANR	1259918	Symbol	model -> u . content		1259603						
ANR	1259919	Symbol	strlen		1259603						
ANR	1259920	Symbol	zend_hash_find		1259603						
ANR	1259921	Symbol	zend_hash_get_current_data		1259603						
ANR	1259922	Symbol	pos		1259603						
ANR	1259923	Symbol	tmp		1259603						
ANR	1259924	Symbol	model		1259603						
ANR	1259925	Symbol	model -> min_occurs		1259603						
ANR	1259926	Symbol	model -> u . group		1259603						
ANR	1259927	Symbol	SUCCESS		1259603						
ANR	1259928	Symbol	ctx -> sdl		1259603						
ANR	1259929	Symbol	ctx		1259603						
ANR	1259930	Symbol	model -> u . group_ref		1259603						
ANR	1259931	Symbol	* ctx -> sdl		1259603						
ANR	1259932	Symbol	* model		1259603						
ANR	1259933	Symbol	* * tmp		1259603						
ANR	1259934	Symbol	* ctx		1259603						
ANR	1259935	Symbol	model -> kind		1259603						
ANR	1259936	Symbol	E_ERROR		1259603						
ANR	1259937	Symbol	& tmp		1259603						
ANR	1259938	Symbol	* * ctx		1259603						
ANR	1259939	Symbol	& pos		1259603						
ANR	1259940	Function	schema_type_fixup	2232:0:71556:73239							
ANR	1259941	FunctionDef	"schema_type_fixup (sdlCtx * ctx , sdlTypePtr type)"		1259940	0					
ANR	1259942	CompoundStatement		2233:0:71616:73239	1259940	0					
ANR	1259943	IdentifierDeclStatement	sdlTypePtr * tmp ;	2234:1:71619:71634	1259940	0	True				
ANR	1259944	IdentifierDecl	* tmp		1259940	0					
ANR	1259945	IdentifierDeclType	sdlTypePtr *		1259940	0					
ANR	1259946	Identifier	tmp		1259940	1					
ANR	1259947	IdentifierDeclStatement	sdlAttributePtr * attr ;	2235:1:71637:71658	1259940	1	True				
ANR	1259948	IdentifierDecl	* attr		1259940	0					
ANR	1259949	IdentifierDeclType	sdlAttributePtr *		1259940	0					
ANR	1259950	Identifier	attr		1259940	1					
ANR	1259951	IfStatement	if ( type -> ref != NULL )		1259940	2					
ANR	1259952	Condition	type -> ref != NULL	2237:5:71666:71682	1259940	0	True				
ANR	1259953	EqualityExpression	type -> ref != NULL		1259940	0		!=			
ANR	1259954	PtrMemberAccess	type -> ref		1259940	0					
ANR	1259955	Identifier	type		1259940	0					
ANR	1259956	Identifier	ref		1259940	1					
ANR	1259957	Identifier	NULL		1259940	1					
ANR	1259958	CompoundStatement		5:24:68:68	1259940	1					
ANR	1259959	IfStatement	if ( ctx -> sdl -> elements != NULL )		1259940	0					
ANR	1259960	Condition	ctx -> sdl -> elements != NULL	2238:6:71693:71718	1259940	0	True				
ANR	1259961	EqualityExpression	ctx -> sdl -> elements != NULL		1259940	0		!=			
ANR	1259962	PtrMemberAccess	ctx -> sdl -> elements		1259940	0					
ANR	1259963	PtrMemberAccess	ctx -> sdl		1259940	0					
ANR	1259964	Identifier	ctx		1259940	0					
ANR	1259965	Identifier	sdl		1259940	1					
ANR	1259966	Identifier	elements		1259940	1					
ANR	1259967	Identifier	NULL		1259940	1					
ANR	1259968	CompoundStatement		6:34:104:104	1259940	1					
ANR	1259969	ExpressionStatement	"tmp = ( sdlTypePtr * ) schema_find_by_ref ( ctx -> sdl -> elements , type -> ref )"	2239:3:71726:71794	1259940	0	True				
ANR	1259970	AssignmentExpression	"tmp = ( sdlTypePtr * ) schema_find_by_ref ( ctx -> sdl -> elements , type -> ref )"		1259940	0		=			
ANR	1259971	Identifier	tmp		1259940	0					
ANR	1259972	CastExpression	"( sdlTypePtr * ) schema_find_by_ref ( ctx -> sdl -> elements , type -> ref )"		1259940	1					
ANR	1259973	CastTarget	sdlTypePtr *		1259940	0					
ANR	1259974	CallExpression	"schema_find_by_ref ( ctx -> sdl -> elements , type -> ref )"		1259940	1					
ANR	1259975	Callee	schema_find_by_ref		1259940	0					
ANR	1259976	Identifier	schema_find_by_ref		1259940	0					
ANR	1259977	ArgumentList	ctx -> sdl -> elements		1259940	1					
ANR	1259978	Argument	ctx -> sdl -> elements		1259940	0					
ANR	1259979	PtrMemberAccess	ctx -> sdl -> elements		1259940	0					
ANR	1259980	PtrMemberAccess	ctx -> sdl		1259940	0					
ANR	1259981	Identifier	ctx		1259940	0					
ANR	1259982	Identifier	sdl		1259940	1					
ANR	1259983	Identifier	elements		1259940	1					
ANR	1259984	Argument	type -> ref		1259940	1					
ANR	1259985	PtrMemberAccess	type -> ref		1259940	0					
ANR	1259986	Identifier	type		1259940	0					
ANR	1259987	Identifier	ref		1259940	1					
ANR	1259988	IfStatement	if ( tmp )		1259940	1					
ANR	1259989	Condition	tmp	2240:7:71803:71805	1259940	0	True				
ANR	1259990	Identifier	tmp		1259940	0					
ANR	1259991	CompoundStatement		8:12:191:191	1259940	1					
ANR	1259992	ExpressionStatement	type -> kind = ( * tmp ) -> kind	2241:4:71814:71839	1259940	0	True				
ANR	1259993	AssignmentExpression	type -> kind = ( * tmp ) -> kind		1259940	0		=			
ANR	1259994	PtrMemberAccess	type -> kind		1259940	0					
ANR	1259995	Identifier	type		1259940	0					
ANR	1259996	Identifier	kind		1259940	1					
ANR	1259997	PtrMemberAccess	( * tmp ) -> kind		1259940	1					
ANR	1259998	UnaryOperationExpression	* tmp		1259940	0					
ANR	1259999	UnaryOperator	*		1259940	0					
ANR	1260000	Identifier	tmp		1259940	1					
ANR	1260001	Identifier	kind		1259940	1					
ANR	1260002	ExpressionStatement	type -> encode = ( * tmp ) -> encode	2242:4:71845:71874	1259940	1	True				
ANR	1260003	AssignmentExpression	type -> encode = ( * tmp ) -> encode		1259940	0		=			
ANR	1260004	PtrMemberAccess	type -> encode		1259940	0					
ANR	1260005	Identifier	type		1259940	0					
ANR	1260006	Identifier	encode		1259940	1					
ANR	1260007	PtrMemberAccess	( * tmp ) -> encode		1259940	1					
ANR	1260008	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260009	UnaryOperator	*		1259940	0					
ANR	1260010	Identifier	tmp		1259940	1					
ANR	1260011	Identifier	encode		1259940	1					
ANR	1260012	IfStatement	if ( ( * tmp ) -> nillable )		1259940	2					
ANR	1260013	Condition	( * tmp ) -> nillable	2243:8:71884:71899	1259940	0	True				
ANR	1260014	PtrMemberAccess	( * tmp ) -> nillable		1259940	0					
ANR	1260015	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260016	UnaryOperator	*		1259940	0					
ANR	1260017	Identifier	tmp		1259940	1					
ANR	1260018	Identifier	nillable		1259940	1					
ANR	1260019	CompoundStatement		11:26:285:285	1259940	1					
ANR	1260020	ExpressionStatement	type -> nillable = 1	2244:6:71910:71928	1259940	0	True				
ANR	1260021	AssignmentExpression	type -> nillable = 1		1259940	0		=			
ANR	1260022	PtrMemberAccess	type -> nillable		1259940	0					
ANR	1260023	Identifier	type		1259940	0					
ANR	1260024	Identifier	nillable		1259940	1					
ANR	1260025	PrimaryExpression	1		1259940	1					
ANR	1260026	IfStatement	if ( ( * tmp ) -> fixed )		1259940	3					
ANR	1260027	Condition	( * tmp ) -> fixed	2246:8:71944:71956	1259940	0	True				
ANR	1260028	PtrMemberAccess	( * tmp ) -> fixed		1259940	0					
ANR	1260029	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260030	UnaryOperator	*		1259940	0					
ANR	1260031	Identifier	tmp		1259940	1					
ANR	1260032	Identifier	fixed		1259940	1					
ANR	1260033	CompoundStatement		14:23:342:342	1259940	1					
ANR	1260034	ExpressionStatement	type -> fixed = estrdup ( ( * tmp ) -> fixed )	2247:6:71967:72003	1259940	0	True				
ANR	1260035	AssignmentExpression	type -> fixed = estrdup ( ( * tmp ) -> fixed )		1259940	0		=			
ANR	1260036	PtrMemberAccess	type -> fixed		1259940	0					
ANR	1260037	Identifier	type		1259940	0					
ANR	1260038	Identifier	fixed		1259940	1					
ANR	1260039	CallExpression	estrdup ( ( * tmp ) -> fixed )		1259940	1					
ANR	1260040	Callee	estrdup		1259940	0					
ANR	1260041	Identifier	estrdup		1259940	0					
ANR	1260042	ArgumentList	( * tmp ) -> fixed		1259940	1					
ANR	1260043	Argument	( * tmp ) -> fixed		1259940	0					
ANR	1260044	PtrMemberAccess	( * tmp ) -> fixed		1259940	0					
ANR	1260045	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260046	UnaryOperator	*		1259940	0					
ANR	1260047	Identifier	tmp		1259940	1					
ANR	1260048	Identifier	fixed		1259940	1					
ANR	1260049	IfStatement	if ( ( * tmp ) -> def )		1259940	4					
ANR	1260050	Condition	( * tmp ) -> def	2249:8:72019:72029	1259940	0	True				
ANR	1260051	PtrMemberAccess	( * tmp ) -> def		1259940	0					
ANR	1260052	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260053	UnaryOperator	*		1259940	0					
ANR	1260054	Identifier	tmp		1259940	1					
ANR	1260055	Identifier	def		1259940	1					
ANR	1260056	CompoundStatement		17:21:415:415	1259940	1					
ANR	1260057	ExpressionStatement	type -> def = estrdup ( ( * tmp ) -> def )	2250:6:72040:72072	1259940	0	True				
ANR	1260058	AssignmentExpression	type -> def = estrdup ( ( * tmp ) -> def )		1259940	0		=			
ANR	1260059	PtrMemberAccess	type -> def		1259940	0					
ANR	1260060	Identifier	type		1259940	0					
ANR	1260061	Identifier	def		1259940	1					
ANR	1260062	CallExpression	estrdup ( ( * tmp ) -> def )		1259940	1					
ANR	1260063	Callee	estrdup		1259940	0					
ANR	1260064	Identifier	estrdup		1259940	0					
ANR	1260065	ArgumentList	( * tmp ) -> def		1259940	1					
ANR	1260066	Argument	( * tmp ) -> def		1259940	0					
ANR	1260067	PtrMemberAccess	( * tmp ) -> def		1259940	0					
ANR	1260068	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260069	UnaryOperator	*		1259940	0					
ANR	1260070	Identifier	tmp		1259940	1					
ANR	1260071	Identifier	def		1259940	1					
ANR	1260072	ExpressionStatement	type -> form = ( * tmp ) -> form	2252:4:72084:72109	1259940	5	True				
ANR	1260073	AssignmentExpression	type -> form = ( * tmp ) -> form		1259940	0		=			
ANR	1260074	PtrMemberAccess	type -> form		1259940	0					
ANR	1260075	Identifier	type		1259940	0					
ANR	1260076	Identifier	form		1259940	1					
ANR	1260077	PtrMemberAccess	( * tmp ) -> form		1259940	1					
ANR	1260078	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260079	UnaryOperator	*		1259940	0					
ANR	1260080	Identifier	tmp		1259940	1					
ANR	1260081	Identifier	form		1259940	1					
ANR	1260082	ElseStatement	else		1259940	0					
ANR	1260083	Statement	if	2253:10:72121:72122	1259940	0	True				
ANR	1260084	Statement	(	2253:13:72124:72124	1259940	2	True				
ANR	1260085	Statement	strcmp	2253:14:72125:72130	1259940	3	True				
ANR	1260086	Statement	(	2253:20:72131:72131	1259940	4	True				
ANR	1260087	Statement	type	2253:21:72132:72135	1259940	5	True				
ANR	1260088	Statement	->	2253:25:72136:72137	1259940	6	True				
ANR	1260089	Statement	ref	2253:27:72138:72140	1259940	7	True				
ANR	1260090	Statement	","	2253:30:72141:72141	1259940	8	True				
ANR	1260091	Statement	SCHEMA_NAMESPACE	2253:32:72143:72158	1259940	9	True				
ANR	1260092	Statement	""":schema"""	2253:49:72160:72168	1259940	10	True				
ANR	1260093	Statement	)	2253:58:72169:72169	1259940	11	True				
ANR	1260094	Statement	==	2253:60:72171:72172	1259940	12	True				
ANR	1260095	Statement	0	2253:63:72174:72174	1259940	13	True				
ANR	1260096	Statement	)	2253:64:72175:72175	1259940	14	True				
ANR	1260097	CompoundStatement		21:66:560:560	1259940	15					
ANR	1260098	ExpressionStatement	type -> encode = get_conversion ( XSD_ANYXML )	2254:4:72183:72224	1259940	0	True				
ANR	1260099	AssignmentExpression	type -> encode = get_conversion ( XSD_ANYXML )		1259940	0		=			
ANR	1260100	PtrMemberAccess	type -> encode		1259940	0					
ANR	1260101	Identifier	type		1259940	0					
ANR	1260102	Identifier	encode		1259940	1					
ANR	1260103	CallExpression	get_conversion ( XSD_ANYXML )		1259940	1					
ANR	1260104	Callee	get_conversion		1259940	0					
ANR	1260105	Identifier	get_conversion		1259940	0					
ANR	1260106	ArgumentList	XSD_ANYXML		1259940	1					
ANR	1260107	Argument	XSD_ANYXML		1259940	0					
ANR	1260108	Identifier	XSD_ANYXML		1259940	0					
ANR	1260109	ElseStatement	else		1259940	0					
ANR	1260110	CompoundStatement		23:10:619:619	1259940	0					
ANR	1260111	ExpressionStatement	"soap_error1 ( E_ERROR , ""Parsing Schema: unresolved element 'ref' attribute '%s'"" , type -> ref )"	2256:4:72242:72332	1259940	0	True				
ANR	1260112	CallExpression	"soap_error1 ( E_ERROR , ""Parsing Schema: unresolved element 'ref' attribute '%s'"" , type -> ref )"		1259940	0					
ANR	1260113	Callee	soap_error1		1259940	0					
ANR	1260114	Identifier	soap_error1		1259940	0					
ANR	1260115	ArgumentList	E_ERROR		1259940	1					
ANR	1260116	Argument	E_ERROR		1259940	0					
ANR	1260117	Identifier	E_ERROR		1259940	0					
ANR	1260118	Argument	"""Parsing Schema: unresolved element 'ref' attribute '%s'"""		1259940	1					
ANR	1260119	PrimaryExpression	"""Parsing Schema: unresolved element 'ref' attribute '%s'"""		1259940	0					
ANR	1260120	Argument	type -> ref		1259940	2					
ANR	1260121	PtrMemberAccess	type -> ref		1259940	0					
ANR	1260122	Identifier	type		1259940	0					
ANR	1260123	Identifier	ref		1259940	1					
ANR	1260124	ExpressionStatement	efree ( type -> ref )	2259:2:72345:72361	1259940	1	True				
ANR	1260125	CallExpression	efree ( type -> ref )		1259940	0					
ANR	1260126	Callee	efree		1259940	0					
ANR	1260127	Identifier	efree		1259940	0					
ANR	1260128	ArgumentList	type -> ref		1259940	1					
ANR	1260129	Argument	type -> ref		1259940	0					
ANR	1260130	PtrMemberAccess	type -> ref		1259940	0					
ANR	1260131	Identifier	type		1259940	0					
ANR	1260132	Identifier	ref		1259940	1					
ANR	1260133	ExpressionStatement	type -> ref = NULL	2260:2:72365:72381	1259940	2	True				
ANR	1260134	AssignmentExpression	type -> ref = NULL		1259940	0		=			
ANR	1260135	PtrMemberAccess	type -> ref		1259940	0					
ANR	1260136	Identifier	type		1259940	0					
ANR	1260137	Identifier	ref		1259940	1					
ANR	1260138	Identifier	NULL		1259940	1					
ANR	1260139	IfStatement	if ( type -> elements )		1259940	3					
ANR	1260140	Condition	type -> elements	2262:5:72391:72404	1259940	0	True				
ANR	1260141	PtrMemberAccess	type -> elements		1259940	0					
ANR	1260142	Identifier	type		1259940	0					
ANR	1260143	Identifier	elements		1259940	1					
ANR	1260144	CompoundStatement		30:21:790:790	1259940	1					
ANR	1260145	ExpressionStatement	zend_hash_internal_pointer_reset ( type -> elements )	2263:2:72411:72459	1259940	0	True				
ANR	1260146	CallExpression	zend_hash_internal_pointer_reset ( type -> elements )		1259940	0					
ANR	1260147	Callee	zend_hash_internal_pointer_reset		1259940	0					
ANR	1260148	Identifier	zend_hash_internal_pointer_reset		1259940	0					
ANR	1260149	ArgumentList	type -> elements		1259940	1					
ANR	1260150	Argument	type -> elements		1259940	0					
ANR	1260151	PtrMemberAccess	type -> elements		1259940	0					
ANR	1260152	Identifier	type		1259940	0					
ANR	1260153	Identifier	elements		1259940	1					
ANR	1260154	WhileStatement	"while ( zend_hash_get_current_data ( type -> elements , ( void * * ) & tmp ) == SUCCESS )"		1259940	1					
ANR	1260155	Condition	"zend_hash_get_current_data ( type -> elements , ( void * * ) & tmp ) == SUCCESS"	2264:9:72470:72535	1259940	0	True				
ANR	1260156	EqualityExpression	"zend_hash_get_current_data ( type -> elements , ( void * * ) & tmp ) == SUCCESS"		1259940	0		==			
ANR	1260157	CallExpression	"zend_hash_get_current_data ( type -> elements , ( void * * ) & tmp )"		1259940	0					
ANR	1260158	Callee	zend_hash_get_current_data		1259940	0					
ANR	1260159	Identifier	zend_hash_get_current_data		1259940	0					
ANR	1260160	ArgumentList	type -> elements		1259940	1					
ANR	1260161	Argument	type -> elements		1259940	0					
ANR	1260162	PtrMemberAccess	type -> elements		1259940	0					
ANR	1260163	Identifier	type		1259940	0					
ANR	1260164	Identifier	elements		1259940	1					
ANR	1260165	Argument	( void * * ) & tmp		1259940	1					
ANR	1260166	CastExpression	( void * * ) & tmp		1259940	0					
ANR	1260167	CastTarget	void * *		1259940	0					
ANR	1260168	UnaryOperationExpression	& tmp		1259940	1					
ANR	1260169	UnaryOperator	&		1259940	0					
ANR	1260170	Identifier	tmp		1259940	1					
ANR	1260171	Identifier	SUCCESS		1259940	1					
ANR	1260172	CompoundStatement		32:77:921:921	1259940	1					
ANR	1260173	ExpressionStatement	"schema_type_fixup ( ctx , * tmp )"	2265:3:72543:72570	1259940	0	True				
ANR	1260174	CallExpression	"schema_type_fixup ( ctx , * tmp )"		1259940	0					
ANR	1260175	Callee	schema_type_fixup		1259940	0					
ANR	1260176	Identifier	schema_type_fixup		1259940	0					
ANR	1260177	ArgumentList	ctx		1259940	1					
ANR	1260178	Argument	ctx		1259940	0					
ANR	1260179	Identifier	ctx		1259940	0					
ANR	1260180	Argument	* tmp		1259940	1					
ANR	1260181	UnaryOperationExpression	* tmp		1259940	0					
ANR	1260182	UnaryOperator	*		1259940	0					
ANR	1260183	Identifier	tmp		1259940	1					
ANR	1260184	ExpressionStatement	zend_hash_move_forward ( type -> elements )	2266:3:72575:72613	1259940	1	True				
ANR	1260185	CallExpression	zend_hash_move_forward ( type -> elements )		1259940	0					
ANR	1260186	Callee	zend_hash_move_forward		1259940	0					
ANR	1260187	Identifier	zend_hash_move_forward		1259940	0					
ANR	1260188	ArgumentList	type -> elements		1259940	1					
ANR	1260189	Argument	type -> elements		1259940	0					
ANR	1260190	PtrMemberAccess	type -> elements		1259940	0					
ANR	1260191	Identifier	type		1259940	0					
ANR	1260192	Identifier	elements		1259940	1					
ANR	1260193	IfStatement	if ( type -> model )		1259940	4					
ANR	1260194	Condition	type -> model	2269:5:72627:72637	1259940	0	True				
ANR	1260195	PtrMemberAccess	type -> model		1259940	0					
ANR	1260196	Identifier	type		1259940	0					
ANR	1260197	Identifier	model		1259940	1					
ANR	1260198	CompoundStatement		37:18:1023:1023	1259940	1					
ANR	1260199	ExpressionStatement	"schema_content_model_fixup ( ctx , type -> model )"	2270:2:72644:72688	1259940	0	True				
ANR	1260200	CallExpression	"schema_content_model_fixup ( ctx , type -> model )"		1259940	0					
ANR	1260201	Callee	schema_content_model_fixup		1259940	0					
ANR	1260202	Identifier	schema_content_model_fixup		1259940	0					
ANR	1260203	ArgumentList	ctx		1259940	1					
ANR	1260204	Argument	ctx		1259940	0					
ANR	1260205	Identifier	ctx		1259940	0					
ANR	1260206	Argument	type -> model		1259940	1					
ANR	1260207	PtrMemberAccess	type -> model		1259940	0					
ANR	1260208	Identifier	type		1259940	0					
ANR	1260209	Identifier	model		1259940	1					
ANR	1260210	IfStatement	if ( type -> attributes )		1259940	5					
ANR	1260211	Condition	type -> attributes	2272:5:72698:72713	1259940	0	True				
ANR	1260212	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260213	Identifier	type		1259940	0					
ANR	1260214	Identifier	attributes		1259940	1					
ANR	1260215	CompoundStatement		40:23:1099:1099	1259940	1					
ANR	1260216	ExpressionStatement	zend_hash_internal_pointer_reset ( type -> attributes )	2273:2:72720:72770	1259940	0	True				
ANR	1260217	CallExpression	zend_hash_internal_pointer_reset ( type -> attributes )		1259940	0					
ANR	1260218	Callee	zend_hash_internal_pointer_reset		1259940	0					
ANR	1260219	Identifier	zend_hash_internal_pointer_reset		1259940	0					
ANR	1260220	ArgumentList	type -> attributes		1259940	1					
ANR	1260221	Argument	type -> attributes		1259940	0					
ANR	1260222	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260223	Identifier	type		1259940	0					
ANR	1260224	Identifier	attributes		1259940	1					
ANR	1260225	WhileStatement	"while ( zend_hash_get_current_data ( type -> attributes , ( void * * ) & attr ) == SUCCESS )"		1259940	1					
ANR	1260226	Condition	"zend_hash_get_current_data ( type -> attributes , ( void * * ) & attr ) == SUCCESS"	2274:9:72781:72849	1259940	0	True				
ANR	1260227	EqualityExpression	"zend_hash_get_current_data ( type -> attributes , ( void * * ) & attr ) == SUCCESS"		1259940	0		==			
ANR	1260228	CallExpression	"zend_hash_get_current_data ( type -> attributes , ( void * * ) & attr )"		1259940	0					
ANR	1260229	Callee	zend_hash_get_current_data		1259940	0					
ANR	1260230	Identifier	zend_hash_get_current_data		1259940	0					
ANR	1260231	ArgumentList	type -> attributes		1259940	1					
ANR	1260232	Argument	type -> attributes		1259940	0					
ANR	1260233	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260234	Identifier	type		1259940	0					
ANR	1260235	Identifier	attributes		1259940	1					
ANR	1260236	Argument	( void * * ) & attr		1259940	1					
ANR	1260237	CastExpression	( void * * ) & attr		1259940	0					
ANR	1260238	CastTarget	void * *		1259940	0					
ANR	1260239	UnaryOperationExpression	& attr		1259940	1					
ANR	1260240	UnaryOperator	&		1259940	0					
ANR	1260241	Identifier	attr		1259940	1					
ANR	1260242	Identifier	SUCCESS		1259940	1					
ANR	1260243	CompoundStatement		42:80:1235:1235	1259940	1					
ANR	1260244	IfStatement	if ( zend_hash_get_current_key_type ( type -> attributes ) == HASH_KEY_IS_STRING )		1259940	0					
ANR	1260245	Condition	zend_hash_get_current_key_type ( type -> attributes ) == HASH_KEY_IS_STRING	2275:7:72861:72930	1259940	0	True				
ANR	1260246	EqualityExpression	zend_hash_get_current_key_type ( type -> attributes ) == HASH_KEY_IS_STRING		1259940	0		==			
ANR	1260247	CallExpression	zend_hash_get_current_key_type ( type -> attributes )		1259940	0					
ANR	1260248	Callee	zend_hash_get_current_key_type		1259940	0					
ANR	1260249	Identifier	zend_hash_get_current_key_type		1259940	0					
ANR	1260250	ArgumentList	type -> attributes		1259940	1					
ANR	1260251	Argument	type -> attributes		1259940	0					
ANR	1260252	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260253	Identifier	type		1259940	0					
ANR	1260254	Identifier	attributes		1259940	1					
ANR	1260255	Identifier	HASH_KEY_IS_STRING		1259940	1					
ANR	1260256	CompoundStatement		43:79:1316:1316	1259940	1					
ANR	1260257	ExpressionStatement	"schema_attribute_fixup ( ctx , * attr )"	2276:4:72939:72972	1259940	0	True				
ANR	1260258	CallExpression	"schema_attribute_fixup ( ctx , * attr )"		1259940	0					
ANR	1260259	Callee	schema_attribute_fixup		1259940	0					
ANR	1260260	Identifier	schema_attribute_fixup		1259940	0					
ANR	1260261	ArgumentList	ctx		1259940	1					
ANR	1260262	Argument	ctx		1259940	0					
ANR	1260263	Identifier	ctx		1259940	0					
ANR	1260264	Argument	* attr		1259940	1					
ANR	1260265	UnaryOperationExpression	* attr		1259940	0					
ANR	1260266	UnaryOperator	*		1259940	0					
ANR	1260267	Identifier	attr		1259940	1					
ANR	1260268	ExpressionStatement	zend_hash_move_forward ( type -> attributes )	2277:4:72978:73018	1259940	1	True				
ANR	1260269	CallExpression	zend_hash_move_forward ( type -> attributes )		1259940	0					
ANR	1260270	Callee	zend_hash_move_forward		1259940	0					
ANR	1260271	Identifier	zend_hash_move_forward		1259940	0					
ANR	1260272	ArgumentList	type -> attributes		1259940	1					
ANR	1260273	Argument	type -> attributes		1259940	0					
ANR	1260274	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260275	Identifier	type		1259940	0					
ANR	1260276	Identifier	attributes		1259940	1					
ANR	1260277	ElseStatement	else		1259940	0					
ANR	1260278	CompoundStatement		47:4:1419:1430	1259940	0					
ANR	1260279	IdentifierDeclStatement	ulong index ;	2279:4:73036:73047	1259940	0	True				
ANR	1260280	IdentifierDecl	index		1259940	0					
ANR	1260281	IdentifierDeclType	ulong		1259940	0					
ANR	1260282	Identifier	index		1259940	1					
ANR	1260283	ExpressionStatement	"schema_attributegroup_fixup ( ctx , * attr , type -> attributes )"	2281:4:73054:73109	1259940	1	True				
ANR	1260284	CallExpression	"schema_attributegroup_fixup ( ctx , * attr , type -> attributes )"		1259940	0					
ANR	1260285	Callee	schema_attributegroup_fixup		1259940	0					
ANR	1260286	Identifier	schema_attributegroup_fixup		1259940	0					
ANR	1260287	ArgumentList	ctx		1259940	1					
ANR	1260288	Argument	ctx		1259940	0					
ANR	1260289	Identifier	ctx		1259940	0					
ANR	1260290	Argument	* attr		1259940	1					
ANR	1260291	UnaryOperationExpression	* attr		1259940	0					
ANR	1260292	UnaryOperator	*		1259940	0					
ANR	1260293	Identifier	attr		1259940	1					
ANR	1260294	Argument	type -> attributes		1259940	2					
ANR	1260295	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260296	Identifier	type		1259940	0					
ANR	1260297	Identifier	attributes		1259940	1					
ANR	1260298	ExpressionStatement	"zend_hash_get_current_key ( type -> attributes , NULL , & index , 0 )"	2282:4:73115:73175	1259940	2	True				
ANR	1260299	CallExpression	"zend_hash_get_current_key ( type -> attributes , NULL , & index , 0 )"		1259940	0					
ANR	1260300	Callee	zend_hash_get_current_key		1259940	0					
ANR	1260301	Identifier	zend_hash_get_current_key		1259940	0					
ANR	1260302	ArgumentList	type -> attributes		1259940	1					
ANR	1260303	Argument	type -> attributes		1259940	0					
ANR	1260304	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260305	Identifier	type		1259940	0					
ANR	1260306	Identifier	attributes		1259940	1					
ANR	1260307	Argument	NULL		1259940	1					
ANR	1260308	Identifier	NULL		1259940	0					
ANR	1260309	Argument	& index		1259940	2					
ANR	1260310	UnaryOperationExpression	& index		1259940	0					
ANR	1260311	UnaryOperator	&		1259940	0					
ANR	1260312	Identifier	index		1259940	1					
ANR	1260313	Argument	0		1259940	3					
ANR	1260314	PrimaryExpression	0		1259940	0					
ANR	1260315	ExpressionStatement	"zend_hash_index_del ( type -> attributes , index )"	2283:4:73181:73225	1259940	3	True				
ANR	1260316	CallExpression	"zend_hash_index_del ( type -> attributes , index )"		1259940	0					
ANR	1260317	Callee	zend_hash_index_del		1259940	0					
ANR	1260318	Identifier	zend_hash_index_del		1259940	0					
ANR	1260319	ArgumentList	type -> attributes		1259940	1					
ANR	1260320	Argument	type -> attributes		1259940	0					
ANR	1260321	PtrMemberAccess	type -> attributes		1259940	0					
ANR	1260322	Identifier	type		1259940	0					
ANR	1260323	Identifier	attributes		1259940	1					
ANR	1260324	Argument	index		1259940	1					
ANR	1260325	Identifier	index		1259940	0					
ANR	1260326	ReturnType	static void		1259940	1					
ANR	1260327	Identifier	schema_type_fixup		1259940	2					
ANR	1260328	ParameterList	"sdlCtx * ctx , sdlTypePtr type"		1259940	3					
ANR	1260329	Parameter	sdlCtx * ctx	2232:30:71586:71596	1259940	0	True				
ANR	1260330	ParameterType	sdlCtx *		1259940	0					
ANR	1260331	Identifier	ctx		1259940	1					
ANR	1260332	Parameter	sdlTypePtr type	2232:43:71599:71613	1259940	1	True				
ANR	1260333	ParameterType	sdlTypePtr		1259940	0					
ANR	1260334	Identifier	type		1259940	1					
ANR	1260335	CFGEntryNode	ENTRY		1259940		True				
ANR	1260336	CFGExitNode	EXIT		1259940		True				
ANR	1260337	Symbol	* tmp		1259940						
ANR	1260338	Symbol	type -> encode		1259940						
ANR	1260339	Symbol	( * tmp ) -> nillable		1259940						
ANR	1260340	Symbol	type -> fixed		1259940						
ANR	1260341	Symbol	HASH_KEY_IS_STRING		1259940						
ANR	1260342	Symbol	get_conversion		1259940						
ANR	1260343	Symbol	type		1259940						
ANR	1260344	Symbol	XSD_ANYXML		1259940						
ANR	1260345	Symbol	type -> attributes		1259940						
ANR	1260346	Symbol	zend_hash_get_current_data		1259940						
ANR	1260347	Symbol	* type		1259940						
ANR	1260348	Symbol	type -> def		1259940						
ANR	1260349	Symbol	tmp		1259940						
ANR	1260350	Symbol	& index		1259940						
ANR	1260351	Symbol	attr		1259940						
ANR	1260352	Symbol	type -> nillable		1259940						
ANR	1260353	Symbol	type -> ref		1259940						
ANR	1260354	Symbol	( * tmp ) -> def		1259940						
ANR	1260355	Symbol	( * tmp ) -> encode		1259940						
ANR	1260356	Symbol	NULL		1259940						
ANR	1260357	Symbol	SUCCESS		1259940						
ANR	1260358	Symbol	& attr		1259940						
ANR	1260359	Symbol	ctx -> sdl		1259940						
ANR	1260360	Symbol	type -> kind		1259940						
ANR	1260361	Symbol	ctx		1259940						
ANR	1260362	Symbol	* ctx -> sdl		1259940						
ANR	1260363	Symbol	ctx -> sdl -> elements		1259940						
ANR	1260364	Symbol	( * tmp ) -> kind		1259940						
ANR	1260365	Symbol	type -> elements		1259940						
ANR	1260366	Symbol	index		1259940						
ANR	1260367	Symbol	* * tmp		1259940						
ANR	1260368	Symbol	* ctx		1259940						
ANR	1260369	Symbol	zend_hash_get_current_key_type		1259940						
ANR	1260370	Symbol	type -> model		1259940						
ANR	1260371	Symbol	E_ERROR		1259940						
ANR	1260372	Symbol	( * tmp ) -> form		1259940						
ANR	1260373	Symbol	estrdup		1259940						
ANR	1260374	Symbol	schema_find_by_ref		1259940						
ANR	1260375	Symbol	& tmp		1259940						
ANR	1260376	Symbol	* * ctx		1259940						
ANR	1260377	Symbol	type -> form		1259940						
ANR	1260378	Symbol	* attr		1259940						
ANR	1260379	Symbol	( * tmp ) -> fixed		1259940						
ANR	1260380	Function	schema_pass2	2289:0:73242:74731							
ANR	1260381	FunctionDef	schema_pass2 (sdlCtx * ctx)		1260380	0					
ANR	1260382	CompoundStatement		2290:0:73273:74731	1260380	0					
ANR	1260383	IdentifierDeclStatement	sdlPtr sdl = ctx -> sdl ;	2291:1:73276:73297	1260380	0	True				
ANR	1260384	IdentifierDecl	sdl = ctx -> sdl		1260380	0					
ANR	1260385	IdentifierDeclType	sdlPtr		1260380	0					
ANR	1260386	Identifier	sdl		1260380	1					
ANR	1260387	AssignmentExpression	sdl = ctx -> sdl		1260380	2		=			
ANR	1260388	Identifier	sdl		1260380	0					
ANR	1260389	PtrMemberAccess	ctx -> sdl		1260380	1					
ANR	1260390	Identifier	ctx		1260380	0					
ANR	1260391	Identifier	sdl		1260380	1					
ANR	1260392	IdentifierDeclStatement	sdlAttributePtr * attr ;	2292:1:73300:73321	1260380	1	True				
ANR	1260393	IdentifierDecl	* attr		1260380	0					
ANR	1260394	IdentifierDeclType	sdlAttributePtr *		1260380	0					
ANR	1260395	Identifier	attr		1260380	1					
ANR	1260396	IdentifierDeclStatement	sdlTypePtr * type ;	2293:1:73324:73340	1260380	2	True				
ANR	1260397	IdentifierDecl	* type		1260380	0					
ANR	1260398	IdentifierDeclType	sdlTypePtr *		1260380	0					
ANR	1260399	Identifier	type		1260380	1					
ANR	1260400	IfStatement	if ( ctx -> attributes )		1260380	3					
ANR	1260401	Condition	ctx -> attributes	2295:5:73348:73362	1260380	0	True				
ANR	1260402	PtrMemberAccess	ctx -> attributes		1260380	0					
ANR	1260403	Identifier	ctx		1260380	0					
ANR	1260404	Identifier	attributes		1260380	1					
ANR	1260405	CompoundStatement		6:22:91:91	1260380	1					
ANR	1260406	ExpressionStatement	zend_hash_internal_pointer_reset ( ctx -> attributes )	2296:2:73369:73418	1260380	0	True				
ANR	1260407	CallExpression	zend_hash_internal_pointer_reset ( ctx -> attributes )		1260380	0					
ANR	1260408	Callee	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260409	Identifier	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260410	ArgumentList	ctx -> attributes		1260380	1					
ANR	1260411	Argument	ctx -> attributes		1260380	0					
ANR	1260412	PtrMemberAccess	ctx -> attributes		1260380	0					
ANR	1260413	Identifier	ctx		1260380	0					
ANR	1260414	Identifier	attributes		1260380	1					
ANR	1260415	WhileStatement	"while ( zend_hash_get_current_data ( ctx -> attributes , ( void * * ) & attr ) == SUCCESS )"		1260380	1					
ANR	1260416	Condition	"zend_hash_get_current_data ( ctx -> attributes , ( void * * ) & attr ) == SUCCESS"	2297:9:73429:73496	1260380	0	True				
ANR	1260417	EqualityExpression	"zend_hash_get_current_data ( ctx -> attributes , ( void * * ) & attr ) == SUCCESS"		1260380	0		==			
ANR	1260418	CallExpression	"zend_hash_get_current_data ( ctx -> attributes , ( void * * ) & attr )"		1260380	0					
ANR	1260419	Callee	zend_hash_get_current_data		1260380	0					
ANR	1260420	Identifier	zend_hash_get_current_data		1260380	0					
ANR	1260421	ArgumentList	ctx -> attributes		1260380	1					
ANR	1260422	Argument	ctx -> attributes		1260380	0					
ANR	1260423	PtrMemberAccess	ctx -> attributes		1260380	0					
ANR	1260424	Identifier	ctx		1260380	0					
ANR	1260425	Identifier	attributes		1260380	1					
ANR	1260426	Argument	( void * * ) & attr		1260380	1					
ANR	1260427	CastExpression	( void * * ) & attr		1260380	0					
ANR	1260428	CastTarget	void * *		1260380	0					
ANR	1260429	UnaryOperationExpression	& attr		1260380	1					
ANR	1260430	UnaryOperator	&		1260380	0					
ANR	1260431	Identifier	attr		1260380	1					
ANR	1260432	Identifier	SUCCESS		1260380	1					
ANR	1260433	CompoundStatement		8:79:225:225	1260380	1					
ANR	1260434	ExpressionStatement	"schema_attribute_fixup ( ctx , * attr )"	2298:3:73504:73537	1260380	0	True				
ANR	1260435	CallExpression	"schema_attribute_fixup ( ctx , * attr )"		1260380	0					
ANR	1260436	Callee	schema_attribute_fixup		1260380	0					
ANR	1260437	Identifier	schema_attribute_fixup		1260380	0					
ANR	1260438	ArgumentList	ctx		1260380	1					
ANR	1260439	Argument	ctx		1260380	0					
ANR	1260440	Identifier	ctx		1260380	0					
ANR	1260441	Argument	* attr		1260380	1					
ANR	1260442	UnaryOperationExpression	* attr		1260380	0					
ANR	1260443	UnaryOperator	*		1260380	0					
ANR	1260444	Identifier	attr		1260380	1					
ANR	1260445	ExpressionStatement	zend_hash_move_forward ( ctx -> attributes )	2299:3:73542:73581	1260380	1	True				
ANR	1260446	CallExpression	zend_hash_move_forward ( ctx -> attributes )		1260380	0					
ANR	1260447	Callee	zend_hash_move_forward		1260380	0					
ANR	1260448	Identifier	zend_hash_move_forward		1260380	0					
ANR	1260449	ArgumentList	ctx -> attributes		1260380	1					
ANR	1260450	Argument	ctx -> attributes		1260380	0					
ANR	1260451	PtrMemberAccess	ctx -> attributes		1260380	0					
ANR	1260452	Identifier	ctx		1260380	0					
ANR	1260453	Identifier	attributes		1260380	1					
ANR	1260454	IfStatement	if ( ctx -> attributeGroups )		1260380	4					
ANR	1260455	Condition	ctx -> attributeGroups	2302:5:73595:73614	1260380	0	True				
ANR	1260456	PtrMemberAccess	ctx -> attributeGroups		1260380	0					
ANR	1260457	Identifier	ctx		1260380	0					
ANR	1260458	Identifier	attributeGroups		1260380	1					
ANR	1260459	CompoundStatement		13:27:343:343	1260380	1					
ANR	1260460	ExpressionStatement	zend_hash_internal_pointer_reset ( ctx -> attributeGroups )	2303:2:73621:73675	1260380	0	True				
ANR	1260461	CallExpression	zend_hash_internal_pointer_reset ( ctx -> attributeGroups )		1260380	0					
ANR	1260462	Callee	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260463	Identifier	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260464	ArgumentList	ctx -> attributeGroups		1260380	1					
ANR	1260465	Argument	ctx -> attributeGroups		1260380	0					
ANR	1260466	PtrMemberAccess	ctx -> attributeGroups		1260380	0					
ANR	1260467	Identifier	ctx		1260380	0					
ANR	1260468	Identifier	attributeGroups		1260380	1					
ANR	1260469	WhileStatement	"while ( zend_hash_get_current_data ( ctx -> attributeGroups , ( void * * ) & type ) == SUCCESS )"		1260380	1					
ANR	1260470	Condition	"zend_hash_get_current_data ( ctx -> attributeGroups , ( void * * ) & type ) == SUCCESS"	2304:9:73686:73758	1260380	0	True				
ANR	1260471	EqualityExpression	"zend_hash_get_current_data ( ctx -> attributeGroups , ( void * * ) & type ) == SUCCESS"		1260380	0		==			
ANR	1260472	CallExpression	"zend_hash_get_current_data ( ctx -> attributeGroups , ( void * * ) & type )"		1260380	0					
ANR	1260473	Callee	zend_hash_get_current_data		1260380	0					
ANR	1260474	Identifier	zend_hash_get_current_data		1260380	0					
ANR	1260475	ArgumentList	ctx -> attributeGroups		1260380	1					
ANR	1260476	Argument	ctx -> attributeGroups		1260380	0					
ANR	1260477	PtrMemberAccess	ctx -> attributeGroups		1260380	0					
ANR	1260478	Identifier	ctx		1260380	0					
ANR	1260479	Identifier	attributeGroups		1260380	1					
ANR	1260480	Argument	( void * * ) & type		1260380	1					
ANR	1260481	CastExpression	( void * * ) & type		1260380	0					
ANR	1260482	CastTarget	void * *		1260380	0					
ANR	1260483	UnaryOperationExpression	& type		1260380	1					
ANR	1260484	UnaryOperator	&		1260380	0					
ANR	1260485	Identifier	type		1260380	1					
ANR	1260486	Identifier	SUCCESS		1260380	1					
ANR	1260487	CompoundStatement		15:84:487:487	1260380	1					
ANR	1260488	ExpressionStatement	"schema_type_fixup ( ctx , * type )"	2305:3:73766:73794	1260380	0	True				
ANR	1260489	CallExpression	"schema_type_fixup ( ctx , * type )"		1260380	0					
ANR	1260490	Callee	schema_type_fixup		1260380	0					
ANR	1260491	Identifier	schema_type_fixup		1260380	0					
ANR	1260492	ArgumentList	ctx		1260380	1					
ANR	1260493	Argument	ctx		1260380	0					
ANR	1260494	Identifier	ctx		1260380	0					
ANR	1260495	Argument	* type		1260380	1					
ANR	1260496	UnaryOperationExpression	* type		1260380	0					
ANR	1260497	UnaryOperator	*		1260380	0					
ANR	1260498	Identifier	type		1260380	1					
ANR	1260499	ExpressionStatement	zend_hash_move_forward ( ctx -> attributeGroups )	2306:3:73799:73843	1260380	1	True				
ANR	1260500	CallExpression	zend_hash_move_forward ( ctx -> attributeGroups )		1260380	0					
ANR	1260501	Callee	zend_hash_move_forward		1260380	0					
ANR	1260502	Identifier	zend_hash_move_forward		1260380	0					
ANR	1260503	ArgumentList	ctx -> attributeGroups		1260380	1					
ANR	1260504	Argument	ctx -> attributeGroups		1260380	0					
ANR	1260505	PtrMemberAccess	ctx -> attributeGroups		1260380	0					
ANR	1260506	Identifier	ctx		1260380	0					
ANR	1260507	Identifier	attributeGroups		1260380	1					
ANR	1260508	IfStatement	if ( sdl -> elements )		1260380	5					
ANR	1260509	Condition	sdl -> elements	2309:5:73857:73869	1260380	0	True				
ANR	1260510	PtrMemberAccess	sdl -> elements		1260380	0					
ANR	1260511	Identifier	sdl		1260380	0					
ANR	1260512	Identifier	elements		1260380	1					
ANR	1260513	CompoundStatement		20:20:598:598	1260380	1					
ANR	1260514	ExpressionStatement	zend_hash_internal_pointer_reset ( sdl -> elements )	2310:2:73876:73923	1260380	0	True				
ANR	1260515	CallExpression	zend_hash_internal_pointer_reset ( sdl -> elements )		1260380	0					
ANR	1260516	Callee	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260517	Identifier	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260518	ArgumentList	sdl -> elements		1260380	1					
ANR	1260519	Argument	sdl -> elements		1260380	0					
ANR	1260520	PtrMemberAccess	sdl -> elements		1260380	0					
ANR	1260521	Identifier	sdl		1260380	0					
ANR	1260522	Identifier	elements		1260380	1					
ANR	1260523	WhileStatement	"while ( zend_hash_get_current_data ( sdl -> elements , ( void * * ) & type ) == SUCCESS )"		1260380	1					
ANR	1260524	Condition	"zend_hash_get_current_data ( sdl -> elements , ( void * * ) & type ) == SUCCESS"	2311:9:73934:73999	1260380	0	True				
ANR	1260525	EqualityExpression	"zend_hash_get_current_data ( sdl -> elements , ( void * * ) & type ) == SUCCESS"		1260380	0		==			
ANR	1260526	CallExpression	"zend_hash_get_current_data ( sdl -> elements , ( void * * ) & type )"		1260380	0					
ANR	1260527	Callee	zend_hash_get_current_data		1260380	0					
ANR	1260528	Identifier	zend_hash_get_current_data		1260380	0					
ANR	1260529	ArgumentList	sdl -> elements		1260380	1					
ANR	1260530	Argument	sdl -> elements		1260380	0					
ANR	1260531	PtrMemberAccess	sdl -> elements		1260380	0					
ANR	1260532	Identifier	sdl		1260380	0					
ANR	1260533	Identifier	elements		1260380	1					
ANR	1260534	Argument	( void * * ) & type		1260380	1					
ANR	1260535	CastExpression	( void * * ) & type		1260380	0					
ANR	1260536	CastTarget	void * *		1260380	0					
ANR	1260537	UnaryOperationExpression	& type		1260380	1					
ANR	1260538	UnaryOperator	&		1260380	0					
ANR	1260539	Identifier	type		1260380	1					
ANR	1260540	Identifier	SUCCESS		1260380	1					
ANR	1260541	CompoundStatement		22:77:728:728	1260380	1					
ANR	1260542	ExpressionStatement	"schema_type_fixup ( ctx , * type )"	2312:3:74007:74035	1260380	0	True				
ANR	1260543	CallExpression	"schema_type_fixup ( ctx , * type )"		1260380	0					
ANR	1260544	Callee	schema_type_fixup		1260380	0					
ANR	1260545	Identifier	schema_type_fixup		1260380	0					
ANR	1260546	ArgumentList	ctx		1260380	1					
ANR	1260547	Argument	ctx		1260380	0					
ANR	1260548	Identifier	ctx		1260380	0					
ANR	1260549	Argument	* type		1260380	1					
ANR	1260550	UnaryOperationExpression	* type		1260380	0					
ANR	1260551	UnaryOperator	*		1260380	0					
ANR	1260552	Identifier	type		1260380	1					
ANR	1260553	ExpressionStatement	zend_hash_move_forward ( sdl -> elements )	2313:3:74040:74077	1260380	1	True				
ANR	1260554	CallExpression	zend_hash_move_forward ( sdl -> elements )		1260380	0					
ANR	1260555	Callee	zend_hash_move_forward		1260380	0					
ANR	1260556	Identifier	zend_hash_move_forward		1260380	0					
ANR	1260557	ArgumentList	sdl -> elements		1260380	1					
ANR	1260558	Argument	sdl -> elements		1260380	0					
ANR	1260559	PtrMemberAccess	sdl -> elements		1260380	0					
ANR	1260560	Identifier	sdl		1260380	0					
ANR	1260561	Identifier	elements		1260380	1					
ANR	1260562	IfStatement	if ( sdl -> groups )		1260380	6					
ANR	1260563	Condition	sdl -> groups	2316:5:74091:74101	1260380	0	True				
ANR	1260564	PtrMemberAccess	sdl -> groups		1260380	0					
ANR	1260565	Identifier	sdl		1260380	0					
ANR	1260566	Identifier	groups		1260380	1					
ANR	1260567	CompoundStatement		27:18:830:830	1260380	1					
ANR	1260568	ExpressionStatement	zend_hash_internal_pointer_reset ( sdl -> groups )	2317:2:74108:74153	1260380	0	True				
ANR	1260569	CallExpression	zend_hash_internal_pointer_reset ( sdl -> groups )		1260380	0					
ANR	1260570	Callee	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260571	Identifier	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260572	ArgumentList	sdl -> groups		1260380	1					
ANR	1260573	Argument	sdl -> groups		1260380	0					
ANR	1260574	PtrMemberAccess	sdl -> groups		1260380	0					
ANR	1260575	Identifier	sdl		1260380	0					
ANR	1260576	Identifier	groups		1260380	1					
ANR	1260577	WhileStatement	"while ( zend_hash_get_current_data ( sdl -> groups , ( void * * ) & type ) == SUCCESS )"		1260380	1					
ANR	1260578	Condition	"zend_hash_get_current_data ( sdl -> groups , ( void * * ) & type ) == SUCCESS"	2318:9:74164:74227	1260380	0	True				
ANR	1260579	EqualityExpression	"zend_hash_get_current_data ( sdl -> groups , ( void * * ) & type ) == SUCCESS"		1260380	0		==			
ANR	1260580	CallExpression	"zend_hash_get_current_data ( sdl -> groups , ( void * * ) & type )"		1260380	0					
ANR	1260581	Callee	zend_hash_get_current_data		1260380	0					
ANR	1260582	Identifier	zend_hash_get_current_data		1260380	0					
ANR	1260583	ArgumentList	sdl -> groups		1260380	1					
ANR	1260584	Argument	sdl -> groups		1260380	0					
ANR	1260585	PtrMemberAccess	sdl -> groups		1260380	0					
ANR	1260586	Identifier	sdl		1260380	0					
ANR	1260587	Identifier	groups		1260380	1					
ANR	1260588	Argument	( void * * ) & type		1260380	1					
ANR	1260589	CastExpression	( void * * ) & type		1260380	0					
ANR	1260590	CastTarget	void * *		1260380	0					
ANR	1260591	UnaryOperationExpression	& type		1260380	1					
ANR	1260592	UnaryOperator	&		1260380	0					
ANR	1260593	Identifier	type		1260380	1					
ANR	1260594	Identifier	SUCCESS		1260380	1					
ANR	1260595	CompoundStatement		29:75:956:956	1260380	1					
ANR	1260596	ExpressionStatement	"schema_type_fixup ( ctx , * type )"	2319:3:74235:74263	1260380	0	True				
ANR	1260597	CallExpression	"schema_type_fixup ( ctx , * type )"		1260380	0					
ANR	1260598	Callee	schema_type_fixup		1260380	0					
ANR	1260599	Identifier	schema_type_fixup		1260380	0					
ANR	1260600	ArgumentList	ctx		1260380	1					
ANR	1260601	Argument	ctx		1260380	0					
ANR	1260602	Identifier	ctx		1260380	0					
ANR	1260603	Argument	* type		1260380	1					
ANR	1260604	UnaryOperationExpression	* type		1260380	0					
ANR	1260605	UnaryOperator	*		1260380	0					
ANR	1260606	Identifier	type		1260380	1					
ANR	1260607	ExpressionStatement	zend_hash_move_forward ( sdl -> groups )	2320:3:74268:74303	1260380	1	True				
ANR	1260608	CallExpression	zend_hash_move_forward ( sdl -> groups )		1260380	0					
ANR	1260609	Callee	zend_hash_move_forward		1260380	0					
ANR	1260610	Identifier	zend_hash_move_forward		1260380	0					
ANR	1260611	ArgumentList	sdl -> groups		1260380	1					
ANR	1260612	Argument	sdl -> groups		1260380	0					
ANR	1260613	PtrMemberAccess	sdl -> groups		1260380	0					
ANR	1260614	Identifier	sdl		1260380	0					
ANR	1260615	Identifier	groups		1260380	1					
ANR	1260616	IfStatement	if ( sdl -> types )		1260380	7					
ANR	1260617	Condition	sdl -> types	2323:5:74317:74326	1260380	0	True				
ANR	1260618	PtrMemberAccess	sdl -> types		1260380	0					
ANR	1260619	Identifier	sdl		1260380	0					
ANR	1260620	Identifier	types		1260380	1					
ANR	1260621	CompoundStatement		34:17:1055:1055	1260380	1					
ANR	1260622	ExpressionStatement	zend_hash_internal_pointer_reset ( sdl -> types )	2324:2:74333:74377	1260380	0	True				
ANR	1260623	CallExpression	zend_hash_internal_pointer_reset ( sdl -> types )		1260380	0					
ANR	1260624	Callee	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260625	Identifier	zend_hash_internal_pointer_reset		1260380	0					
ANR	1260626	ArgumentList	sdl -> types		1260380	1					
ANR	1260627	Argument	sdl -> types		1260380	0					
ANR	1260628	PtrMemberAccess	sdl -> types		1260380	0					
ANR	1260629	Identifier	sdl		1260380	0					
ANR	1260630	Identifier	types		1260380	1					
ANR	1260631	WhileStatement	"while ( zend_hash_get_current_data ( sdl -> types , ( void * * ) & type ) == SUCCESS )"		1260380	1					
ANR	1260632	Condition	"zend_hash_get_current_data ( sdl -> types , ( void * * ) & type ) == SUCCESS"	2325:9:74388:74450	1260380	0	True				
ANR	1260633	EqualityExpression	"zend_hash_get_current_data ( sdl -> types , ( void * * ) & type ) == SUCCESS"		1260380	0		==			
ANR	1260634	CallExpression	"zend_hash_get_current_data ( sdl -> types , ( void * * ) & type )"		1260380	0					
ANR	1260635	Callee	zend_hash_get_current_data		1260380	0					
ANR	1260636	Identifier	zend_hash_get_current_data		1260380	0					
ANR	1260637	ArgumentList	sdl -> types		1260380	1					
ANR	1260638	Argument	sdl -> types		1260380	0					
ANR	1260639	PtrMemberAccess	sdl -> types		1260380	0					
ANR	1260640	Identifier	sdl		1260380	0					
ANR	1260641	Identifier	types		1260380	1					
ANR	1260642	Argument	( void * * ) & type		1260380	1					
ANR	1260643	CastExpression	( void * * ) & type		1260380	0					
ANR	1260644	CastTarget	void * *		1260380	0					
ANR	1260645	UnaryOperationExpression	& type		1260380	1					
ANR	1260646	UnaryOperator	&		1260380	0					
ANR	1260647	Identifier	type		1260380	1					
ANR	1260648	Identifier	SUCCESS		1260380	1					
ANR	1260649	CompoundStatement		36:74:1179:1179	1260380	1					
ANR	1260650	ExpressionStatement	"schema_type_fixup ( ctx , * type )"	2326:3:74458:74486	1260380	0	True				
ANR	1260651	CallExpression	"schema_type_fixup ( ctx , * type )"		1260380	0					
ANR	1260652	Callee	schema_type_fixup		1260380	0					
ANR	1260653	Identifier	schema_type_fixup		1260380	0					
ANR	1260654	ArgumentList	ctx		1260380	1					
ANR	1260655	Argument	ctx		1260380	0					
ANR	1260656	Identifier	ctx		1260380	0					
ANR	1260657	Argument	* type		1260380	1					
ANR	1260658	UnaryOperationExpression	* type		1260380	0					
ANR	1260659	UnaryOperator	*		1260380	0					
ANR	1260660	Identifier	type		1260380	1					
ANR	1260661	ExpressionStatement	zend_hash_move_forward ( sdl -> types )	2327:3:74491:74525	1260380	1	True				
ANR	1260662	CallExpression	zend_hash_move_forward ( sdl -> types )		1260380	0					
ANR	1260663	Callee	zend_hash_move_forward		1260380	0					
ANR	1260664	Identifier	zend_hash_move_forward		1260380	0					
ANR	1260665	ArgumentList	sdl -> types		1260380	1					
ANR	1260666	Argument	sdl -> types		1260380	0					
ANR	1260667	PtrMemberAccess	sdl -> types		1260380	0					
ANR	1260668	Identifier	sdl		1260380	0					
ANR	1260669	Identifier	types		1260380	1					
ANR	1260670	IfStatement	if ( ctx -> attributes )		1260380	8					
ANR	1260671	Condition	ctx -> attributes	2330:5:74539:74553	1260380	0	True				
ANR	1260672	PtrMemberAccess	ctx -> attributes		1260380	0					
ANR	1260673	Identifier	ctx		1260380	0					
ANR	1260674	Identifier	attributes		1260380	1					
ANR	1260675	CompoundStatement		41:22:1282:1282	1260380	1					
ANR	1260676	ExpressionStatement	zend_hash_destroy ( ctx -> attributes )	2331:2:74560:74594	1260380	0	True				
ANR	1260677	CallExpression	zend_hash_destroy ( ctx -> attributes )		1260380	0					
ANR	1260678	Callee	zend_hash_destroy		1260380	0					
ANR	1260679	Identifier	zend_hash_destroy		1260380	0					
ANR	1260680	ArgumentList	ctx -> attributes		1260380	1					
ANR	1260681	Argument	ctx -> attributes		1260380	0					
ANR	1260682	PtrMemberAccess	ctx -> attributes		1260380	0					
ANR	1260683	Identifier	ctx		1260380	0					
ANR	1260684	Identifier	attributes		1260380	1					
ANR	1260685	ExpressionStatement	efree ( ctx -> attributes )	2332:2:74598:74620	1260380	1	True				
ANR	1260686	CallExpression	efree ( ctx -> attributes )		1260380	0					
ANR	1260687	Callee	efree		1260380	0					
ANR	1260688	Identifier	efree		1260380	0					
ANR	1260689	ArgumentList	ctx -> attributes		1260380	1					
ANR	1260690	Argument	ctx -> attributes		1260380	0					
ANR	1260691	PtrMemberAccess	ctx -> attributes		1260380	0					
ANR	1260692	Identifier	ctx		1260380	0					
ANR	1260693	Identifier	attributes		1260380	1					
ANR	1260694	IfStatement	if ( ctx -> attributeGroups )		1260380	9					
ANR	1260695	Condition	ctx -> attributeGroups	2334:5:74630:74649	1260380	0	True				
ANR	1260696	PtrMemberAccess	ctx -> attributeGroups		1260380	0					
ANR	1260697	Identifier	ctx		1260380	0					
ANR	1260698	Identifier	attributeGroups		1260380	1					
ANR	1260699	CompoundStatement		45:27:1378:1378	1260380	1					
ANR	1260700	ExpressionStatement	zend_hash_destroy ( ctx -> attributeGroups )	2335:2:74656:74695	1260380	0	True				
ANR	1260701	CallExpression	zend_hash_destroy ( ctx -> attributeGroups )		1260380	0					
ANR	1260702	Callee	zend_hash_destroy		1260380	0					
ANR	1260703	Identifier	zend_hash_destroy		1260380	0					
ANR	1260704	ArgumentList	ctx -> attributeGroups		1260380	1					
ANR	1260705	Argument	ctx -> attributeGroups		1260380	0					
ANR	1260706	PtrMemberAccess	ctx -> attributeGroups		1260380	0					
ANR	1260707	Identifier	ctx		1260380	0					
ANR	1260708	Identifier	attributeGroups		1260380	1					
ANR	1260709	ExpressionStatement	efree ( ctx -> attributeGroups )	2336:2:74699:74726	1260380	1	True				
ANR	1260710	CallExpression	efree ( ctx -> attributeGroups )		1260380	0					
ANR	1260711	Callee	efree		1260380	0					
ANR	1260712	Identifier	efree		1260380	0					
ANR	1260713	ArgumentList	ctx -> attributeGroups		1260380	1					
ANR	1260714	Argument	ctx -> attributeGroups		1260380	0					
ANR	1260715	PtrMemberAccess	ctx -> attributeGroups		1260380	0					
ANR	1260716	Identifier	ctx		1260380	0					
ANR	1260717	Identifier	attributeGroups		1260380	1					
ANR	1260718	ReturnType	void		1260380	1					
ANR	1260719	Identifier	schema_pass2		1260380	2					
ANR	1260720	ParameterList	sdlCtx * ctx		1260380	3					
ANR	1260721	Parameter	sdlCtx * ctx	2289:18:73260:73270	1260380	0	True				
ANR	1260722	ParameterType	sdlCtx *		1260380	0					
ANR	1260723	Identifier	ctx		1260380	1					
ANR	1260724	CFGEntryNode	ENTRY		1260380		True				
ANR	1260725	CFGExitNode	EXIT		1260380		True				
ANR	1260726	Symbol	sdl -> groups		1260380						
ANR	1260727	Symbol	ctx -> attributes		1260380						
ANR	1260728	Symbol	& attr		1260380						
ANR	1260729	Symbol	SUCCESS		1260380						
ANR	1260730	Symbol	ctx -> sdl		1260380						
ANR	1260731	Symbol	& type		1260380						
ANR	1260732	Symbol	* sdl		1260380						
ANR	1260733	Symbol	ctx		1260380						
ANR	1260734	Symbol	type		1260380						
ANR	1260735	Symbol	* ctx		1260380						
ANR	1260736	Symbol	zend_hash_get_current_data		1260380						
ANR	1260737	Symbol	* type		1260380						
ANR	1260738	Symbol	sdl -> types		1260380						
ANR	1260739	Symbol	ctx -> attributeGroups		1260380						
ANR	1260740	Symbol	sdl		1260380						
ANR	1260741	Symbol	* attr		1260380						
ANR	1260742	Symbol	sdl -> elements		1260380						
ANR	1260743	Symbol	attr		1260380						
ANR	1260744	Function	delete_model	2340:0:74734:75171							
ANR	1260745	FunctionDef	delete_model (void * handle)		1260744	0					
ANR	1260746	CompoundStatement		2341:0:74766:75171	1260744	0					
ANR	1260747	IdentifierDeclStatement	sdlContentModelPtr tmp = * ( ( sdlContentModelPtr * ) handle ) ;	2342:1:74769:74824	1260744	0	True				
ANR	1260748	IdentifierDecl	tmp = * ( ( sdlContentModelPtr * ) handle )		1260744	0					
ANR	1260749	IdentifierDeclType	sdlContentModelPtr		1260744	0					
ANR	1260750	Identifier	tmp		1260744	1					
ANR	1260751	AssignmentExpression	tmp = * ( ( sdlContentModelPtr * ) handle )		1260744	2		=			
ANR	1260752	Identifier	tmp		1260744	0					
ANR	1260753	UnaryOperationExpression	* ( ( sdlContentModelPtr * ) handle )		1260744	1					
ANR	1260754	UnaryOperator	*		1260744	0					
ANR	1260755	CastExpression	( sdlContentModelPtr * ) handle		1260744	1					
ANR	1260756	CastTarget	sdlContentModelPtr *		1260744	0					
ANR	1260757	Identifier	handle		1260744	1					
ANR	1260758	SwitchStatement	switch ( tmp -> kind )		1260744	1					
ANR	1260759	Condition	tmp -> kind	2343:9:74835:74843	1260744	0	True				
ANR	1260760	PtrMemberAccess	tmp -> kind		1260744	0					
ANR	1260761	Identifier	tmp		1260744	0					
ANR	1260762	Identifier	kind		1260744	1					
ANR	1260763	CompoundStatement		3:20:79:79	1260744	1					
ANR	1260764	Label	case XSD_CONTENT_ELEMENT :	2344:2:74850:74874	1260744	0	True				
ANR	1260765	Identifier	XSD_CONTENT_ELEMENT		1260744	0					
ANR	1260766	Label	case XSD_CONTENT_GROUP :	2345:2:74878:74900	1260744	1	True				
ANR	1260767	Identifier	XSD_CONTENT_GROUP		1260744	0					
ANR	1260768	BreakStatement	break ;	2346:3:74905:74910	1260744	2	True				
ANR	1260769	Label	case XSD_CONTENT_SEQUENCE :	2347:2:74914:74939	1260744	3	True				
ANR	1260770	Identifier	XSD_CONTENT_SEQUENCE		1260744	0					
ANR	1260771	Label	case XSD_CONTENT_ALL :	2348:2:74943:74963	1260744	4	True				
ANR	1260772	Identifier	XSD_CONTENT_ALL		1260744	0					
ANR	1260773	Label	case XSD_CONTENT_CHOICE :	2349:2:74967:74990	1260744	5	True				
ANR	1260774	Identifier	XSD_CONTENT_CHOICE		1260744	0					
ANR	1260775	ExpressionStatement	zend_hash_destroy ( tmp -> u . content )	2350:3:74995:75028	1260744	6	True				
ANR	1260776	CallExpression	zend_hash_destroy ( tmp -> u . content )		1260744	0					
ANR	1260777	Callee	zend_hash_destroy		1260744	0					
ANR	1260778	Identifier	zend_hash_destroy		1260744	0					
ANR	1260779	ArgumentList	tmp -> u . content		1260744	1					
ANR	1260780	Argument	tmp -> u . content		1260744	0					
ANR	1260781	MemberAccess	tmp -> u . content		1260744	0					
ANR	1260782	PtrMemberAccess	tmp -> u		1260744	0					
ANR	1260783	Identifier	tmp		1260744	0					
ANR	1260784	Identifier	u		1260744	1					
ANR	1260785	Identifier	content		1260744	1					
ANR	1260786	ExpressionStatement	efree ( tmp -> u . content )	2351:3:75033:75054	1260744	7	True				
ANR	1260787	CallExpression	efree ( tmp -> u . content )		1260744	0					
ANR	1260788	Callee	efree		1260744	0					
ANR	1260789	Identifier	efree		1260744	0					
ANR	1260790	ArgumentList	tmp -> u . content		1260744	1					
ANR	1260791	Argument	tmp -> u . content		1260744	0					
ANR	1260792	MemberAccess	tmp -> u . content		1260744	0					
ANR	1260793	PtrMemberAccess	tmp -> u		1260744	0					
ANR	1260794	Identifier	tmp		1260744	0					
ANR	1260795	Identifier	u		1260744	1					
ANR	1260796	Identifier	content		1260744	1					
ANR	1260797	BreakStatement	break ;	2352:3:75059:75064	1260744	8	True				
ANR	1260798	Label	case XSD_CONTENT_GROUP_REF :	2353:2:75068:75094	1260744	9	True				
ANR	1260799	Identifier	XSD_CONTENT_GROUP_REF		1260744	0					
ANR	1260800	ExpressionStatement	efree ( tmp -> u . group_ref )	2354:3:75099:75122	1260744	10	True				
ANR	1260801	CallExpression	efree ( tmp -> u . group_ref )		1260744	0					
ANR	1260802	Callee	efree		1260744	0					
ANR	1260803	Identifier	efree		1260744	0					
ANR	1260804	ArgumentList	tmp -> u . group_ref		1260744	1					
ANR	1260805	Argument	tmp -> u . group_ref		1260744	0					
ANR	1260806	MemberAccess	tmp -> u . group_ref		1260744	0					
ANR	1260807	PtrMemberAccess	tmp -> u		1260744	0					
ANR	1260808	Identifier	tmp		1260744	0					
ANR	1260809	Identifier	u		1260744	1					
ANR	1260810	Identifier	group_ref		1260744	1					
ANR	1260811	BreakStatement	break ;	2355:3:75127:75132	1260744	11	True				
ANR	1260812	Label	default :	2356:2:75136:75143	1260744	12	True				
ANR	1260813	Identifier	default		1260744	0					
ANR	1260814	BreakStatement	break ;	2357:3:75148:75153	1260744	13	True				
ANR	1260815	ExpressionStatement	efree ( tmp )	2359:1:75159:75169	1260744	2	True				
ANR	1260816	CallExpression	efree ( tmp )		1260744	0					
ANR	1260817	Callee	efree		1260744	0					
ANR	1260818	Identifier	efree		1260744	0					
ANR	1260819	ArgumentList	tmp		1260744	1					
ANR	1260820	Argument	tmp		1260744	0					
ANR	1260821	Identifier	tmp		1260744	0					
ANR	1260822	ReturnType	void		1260744	1					
ANR	1260823	Identifier	delete_model		1260744	2					
ANR	1260824	ParameterList	void * handle		1260744	3					
ANR	1260825	Parameter	void * handle	2340:18:74752:74763	1260744	0	True				
ANR	1260826	ParameterType	void *		1260744	0					
ANR	1260827	Identifier	handle		1260744	1					
ANR	1260828	CFGEntryNode	ENTRY		1260744		True				
ANR	1260829	CFGExitNode	EXIT		1260744		True				
ANR	1260830	Symbol	* tmp		1260744						
ANR	1260831	Symbol	tmp -> u . content		1260744						
ANR	1260832	Symbol	* handle		1260744						
ANR	1260833	Symbol	tmp		1260744						
ANR	1260834	Symbol	tmp -> u		1260744						
ANR	1260835	Symbol	handle		1260744						
ANR	1260836	Symbol	tmp -> kind		1260744						
ANR	1260837	Symbol	* ( ( sdlContentModelPtr * ) handle )		1260744						
ANR	1260838	Symbol	tmp -> u . group_ref		1260744						
ANR	1260839	Function	delete_model_persistent	2362:0:75174:75619							
ANR	1260840	FunctionDef	delete_model_persistent (void * handle)		1260839	0					
ANR	1260841	CompoundStatement		2363:0:75217:75619	1260839	0					
ANR	1260842	IdentifierDeclStatement	sdlContentModelPtr tmp = * ( ( sdlContentModelPtr * ) handle ) ;	2364:1:75220:75275	1260839	0	True				
ANR	1260843	IdentifierDecl	tmp = * ( ( sdlContentModelPtr * ) handle )		1260839	0					
ANR	1260844	IdentifierDeclType	sdlContentModelPtr		1260839	0					
ANR	1260845	Identifier	tmp		1260839	1					
ANR	1260846	AssignmentExpression	tmp = * ( ( sdlContentModelPtr * ) handle )		1260839	2		=			
ANR	1260847	Identifier	tmp		1260839	0					
ANR	1260848	UnaryOperationExpression	* ( ( sdlContentModelPtr * ) handle )		1260839	1					
ANR	1260849	UnaryOperator	*		1260839	0					
ANR	1260850	CastExpression	( sdlContentModelPtr * ) handle		1260839	1					
ANR	1260851	CastTarget	sdlContentModelPtr *		1260839	0					
ANR	1260852	Identifier	handle		1260839	1					
ANR	1260853	SwitchStatement	switch ( tmp -> kind )		1260839	1					
ANR	1260854	Condition	tmp -> kind	2365:9:75286:75294	1260839	0	True				
ANR	1260855	PtrMemberAccess	tmp -> kind		1260839	0					
ANR	1260856	Identifier	tmp		1260839	0					
ANR	1260857	Identifier	kind		1260839	1					
ANR	1260858	CompoundStatement		3:20:79:79	1260839	1					
ANR	1260859	Label	case XSD_CONTENT_ELEMENT :	2366:2:75301:75325	1260839	0	True				
ANR	1260860	Identifier	XSD_CONTENT_ELEMENT		1260839	0					
ANR	1260861	Label	case XSD_CONTENT_GROUP :	2367:2:75329:75351	1260839	1	True				
ANR	1260862	Identifier	XSD_CONTENT_GROUP		1260839	0					
ANR	1260863	BreakStatement	break ;	2368:3:75356:75361	1260839	2	True				
ANR	1260864	Label	case XSD_CONTENT_SEQUENCE :	2369:2:75365:75390	1260839	3	True				
ANR	1260865	Identifier	XSD_CONTENT_SEQUENCE		1260839	0					
ANR	1260866	Label	case XSD_CONTENT_ALL :	2370:2:75394:75414	1260839	4	True				
ANR	1260867	Identifier	XSD_CONTENT_ALL		1260839	0					
ANR	1260868	Label	case XSD_CONTENT_CHOICE :	2371:2:75418:75441	1260839	5	True				
ANR	1260869	Identifier	XSD_CONTENT_CHOICE		1260839	0					
ANR	1260870	ExpressionStatement	zend_hash_destroy ( tmp -> u . content )	2372:3:75446:75479	1260839	6	True				
ANR	1260871	CallExpression	zend_hash_destroy ( tmp -> u . content )		1260839	0					
ANR	1260872	Callee	zend_hash_destroy		1260839	0					
ANR	1260873	Identifier	zend_hash_destroy		1260839	0					
ANR	1260874	ArgumentList	tmp -> u . content		1260839	1					
ANR	1260875	Argument	tmp -> u . content		1260839	0					
ANR	1260876	MemberAccess	tmp -> u . content		1260839	0					
ANR	1260877	PtrMemberAccess	tmp -> u		1260839	0					
ANR	1260878	Identifier	tmp		1260839	0					
ANR	1260879	Identifier	u		1260839	1					
ANR	1260880	Identifier	content		1260839	1					
ANR	1260881	ExpressionStatement	free ( tmp -> u . content )	2373:3:75484:75504	1260839	7	True				
ANR	1260882	CallExpression	free ( tmp -> u . content )		1260839	0					
ANR	1260883	Callee	free		1260839	0					
ANR	1260884	Identifier	free		1260839	0					
ANR	1260885	ArgumentList	tmp -> u . content		1260839	1					
ANR	1260886	Argument	tmp -> u . content		1260839	0					
ANR	1260887	MemberAccess	tmp -> u . content		1260839	0					
ANR	1260888	PtrMemberAccess	tmp -> u		1260839	0					
ANR	1260889	Identifier	tmp		1260839	0					
ANR	1260890	Identifier	u		1260839	1					
ANR	1260891	Identifier	content		1260839	1					
ANR	1260892	BreakStatement	break ;	2374:3:75509:75514	1260839	8	True				
ANR	1260893	Label	case XSD_CONTENT_GROUP_REF :	2375:2:75518:75544	1260839	9	True				
ANR	1260894	Identifier	XSD_CONTENT_GROUP_REF		1260839	0					
ANR	1260895	ExpressionStatement	free ( tmp -> u . group_ref )	2376:3:75549:75571	1260839	10	True				
ANR	1260896	CallExpression	free ( tmp -> u . group_ref )		1260839	0					
ANR	1260897	Callee	free		1260839	0					
ANR	1260898	Identifier	free		1260839	0					
ANR	1260899	ArgumentList	tmp -> u . group_ref		1260839	1					
ANR	1260900	Argument	tmp -> u . group_ref		1260839	0					
ANR	1260901	MemberAccess	tmp -> u . group_ref		1260839	0					
ANR	1260902	PtrMemberAccess	tmp -> u		1260839	0					
ANR	1260903	Identifier	tmp		1260839	0					
ANR	1260904	Identifier	u		1260839	1					
ANR	1260905	Identifier	group_ref		1260839	1					
ANR	1260906	BreakStatement	break ;	2377:3:75576:75581	1260839	11	True				
ANR	1260907	Label	default :	2378:2:75585:75592	1260839	12	True				
ANR	1260908	Identifier	default		1260839	0					
ANR	1260909	BreakStatement	break ;	2379:3:75597:75602	1260839	13	True				
ANR	1260910	ExpressionStatement	free ( tmp )	2381:1:75608:75617	1260839	2	True				
ANR	1260911	CallExpression	free ( tmp )		1260839	0					
ANR	1260912	Callee	free		1260839	0					
ANR	1260913	Identifier	free		1260839	0					
ANR	1260914	ArgumentList	tmp		1260839	1					
ANR	1260915	Argument	tmp		1260839	0					
ANR	1260916	Identifier	tmp		1260839	0					
ANR	1260917	ReturnType	void		1260839	1					
ANR	1260918	Identifier	delete_model_persistent		1260839	2					
ANR	1260919	ParameterList	void * handle		1260839	3					
ANR	1260920	Parameter	void * handle	2362:29:75203:75214	1260839	0	True				
ANR	1260921	ParameterType	void *		1260839	0					
ANR	1260922	Identifier	handle		1260839	1					
ANR	1260923	CFGEntryNode	ENTRY		1260839		True				
ANR	1260924	CFGExitNode	EXIT		1260839		True				
ANR	1260925	Symbol	* tmp		1260839						
ANR	1260926	Symbol	tmp -> u . content		1260839						
ANR	1260927	Symbol	* handle		1260839						
ANR	1260928	Symbol	tmp		1260839						
ANR	1260929	Symbol	tmp -> u		1260839						
ANR	1260930	Symbol	handle		1260839						
ANR	1260931	Symbol	tmp -> kind		1260839						
ANR	1260932	Symbol	* ( ( sdlContentModelPtr * ) handle )		1260839						
ANR	1260933	Symbol	tmp -> u . group_ref		1260839						
ANR	1260934	Function	delete_type	2384:0:75622:77029							
ANR	1260935	FunctionDef	delete_type (void * data)		1260934	0					
ANR	1260936	CompoundStatement		2385:0:75651:77029	1260934	0					
ANR	1260937	IdentifierDeclStatement	sdlTypePtr type = * ( ( sdlTypePtr * ) data ) ;	2386:1:75654:75692	1260934	0	True				
ANR	1260938	IdentifierDecl	type = * ( ( sdlTypePtr * ) data )		1260934	0					
ANR	1260939	IdentifierDeclType	sdlTypePtr		1260934	0					
ANR	1260940	Identifier	type		1260934	1					
ANR	1260941	AssignmentExpression	type = * ( ( sdlTypePtr * ) data )		1260934	2		=			
ANR	1260942	Identifier	type		1260934	0					
ANR	1260943	UnaryOperationExpression	* ( ( sdlTypePtr * ) data )		1260934	1					
ANR	1260944	UnaryOperator	*		1260934	0					
ANR	1260945	CastExpression	( sdlTypePtr * ) data		1260934	1					
ANR	1260946	CastTarget	sdlTypePtr *		1260934	0					
ANR	1260947	Identifier	data		1260934	1					
ANR	1260948	IfStatement	if ( type -> name )		1260934	1					
ANR	1260949	Condition	type -> name	2388:5:75700:75709	1260934	0	True				
ANR	1260950	PtrMemberAccess	type -> name		1260934	0					
ANR	1260951	Identifier	type		1260934	0					
ANR	1260952	Identifier	name		1260934	1					
ANR	1260953	CompoundStatement		4:17:60:60	1260934	1					
ANR	1260954	ExpressionStatement	efree ( type -> name )	2389:2:75716:75733	1260934	0	True				
ANR	1260955	CallExpression	efree ( type -> name )		1260934	0					
ANR	1260956	Callee	efree		1260934	0					
ANR	1260957	Identifier	efree		1260934	0					
ANR	1260958	ArgumentList	type -> name		1260934	1					
ANR	1260959	Argument	type -> name		1260934	0					
ANR	1260960	PtrMemberAccess	type -> name		1260934	0					
ANR	1260961	Identifier	type		1260934	0					
ANR	1260962	Identifier	name		1260934	1					
ANR	1260963	IfStatement	if ( type -> namens )		1260934	2					
ANR	1260964	Condition	type -> namens	2391:5:75743:75754	1260934	0	True				
ANR	1260965	PtrMemberAccess	type -> namens		1260934	0					
ANR	1260966	Identifier	type		1260934	0					
ANR	1260967	Identifier	namens		1260934	1					
ANR	1260968	CompoundStatement		7:19:105:105	1260934	1					
ANR	1260969	ExpressionStatement	efree ( type -> namens )	2392:2:75761:75780	1260934	0	True				
ANR	1260970	CallExpression	efree ( type -> namens )		1260934	0					
ANR	1260971	Callee	efree		1260934	0					
ANR	1260972	Identifier	efree		1260934	0					
ANR	1260973	ArgumentList	type -> namens		1260934	1					
ANR	1260974	Argument	type -> namens		1260934	0					
ANR	1260975	PtrMemberAccess	type -> namens		1260934	0					
ANR	1260976	Identifier	type		1260934	0					
ANR	1260977	Identifier	namens		1260934	1					
ANR	1260978	IfStatement	if ( type -> def )		1260934	3					
ANR	1260979	Condition	type -> def	2394:5:75790:75798	1260934	0	True				
ANR	1260980	PtrMemberAccess	type -> def		1260934	0					
ANR	1260981	Identifier	type		1260934	0					
ANR	1260982	Identifier	def		1260934	1					
ANR	1260983	CompoundStatement		10:16:149:149	1260934	1					
ANR	1260984	ExpressionStatement	efree ( type -> def )	2395:2:75805:75821	1260934	0	True				
ANR	1260985	CallExpression	efree ( type -> def )		1260934	0					
ANR	1260986	Callee	efree		1260934	0					
ANR	1260987	Identifier	efree		1260934	0					
ANR	1260988	ArgumentList	type -> def		1260934	1					
ANR	1260989	Argument	type -> def		1260934	0					
ANR	1260990	PtrMemberAccess	type -> def		1260934	0					
ANR	1260991	Identifier	type		1260934	0					
ANR	1260992	Identifier	def		1260934	1					
ANR	1260993	IfStatement	if ( type -> fixed )		1260934	4					
ANR	1260994	Condition	type -> fixed	2397:5:75831:75841	1260934	0	True				
ANR	1260995	PtrMemberAccess	type -> fixed		1260934	0					
ANR	1260996	Identifier	type		1260934	0					
ANR	1260997	Identifier	fixed		1260934	1					
ANR	1260998	CompoundStatement		13:18:192:192	1260934	1					
ANR	1260999	ExpressionStatement	efree ( type -> fixed )	2398:2:75848:75866	1260934	0	True				
ANR	1261000	CallExpression	efree ( type -> fixed )		1260934	0					
ANR	1261001	Callee	efree		1260934	0					
ANR	1261002	Identifier	efree		1260934	0					
ANR	1261003	ArgumentList	type -> fixed		1260934	1					
ANR	1261004	Argument	type -> fixed		1260934	0					
ANR	1261005	PtrMemberAccess	type -> fixed		1260934	0					
ANR	1261006	Identifier	type		1260934	0					
ANR	1261007	Identifier	fixed		1260934	1					
ANR	1261008	IfStatement	if ( type -> elements )		1260934	5					
ANR	1261009	Condition	type -> elements	2400:5:75876:75889	1260934	0	True				
ANR	1261010	PtrMemberAccess	type -> elements		1260934	0					
ANR	1261011	Identifier	type		1260934	0					
ANR	1261012	Identifier	elements		1260934	1					
ANR	1261013	CompoundStatement		16:21:240:240	1260934	1					
ANR	1261014	ExpressionStatement	zend_hash_destroy ( type -> elements )	2401:2:75896:75929	1260934	0	True				
ANR	1261015	CallExpression	zend_hash_destroy ( type -> elements )		1260934	0					
ANR	1261016	Callee	zend_hash_destroy		1260934	0					
ANR	1261017	Identifier	zend_hash_destroy		1260934	0					
ANR	1261018	ArgumentList	type -> elements		1260934	1					
ANR	1261019	Argument	type -> elements		1260934	0					
ANR	1261020	PtrMemberAccess	type -> elements		1260934	0					
ANR	1261021	Identifier	type		1260934	0					
ANR	1261022	Identifier	elements		1260934	1					
ANR	1261023	ExpressionStatement	efree ( type -> elements )	2402:2:75933:75954	1260934	1	True				
ANR	1261024	CallExpression	efree ( type -> elements )		1260934	0					
ANR	1261025	Callee	efree		1260934	0					
ANR	1261026	Identifier	efree		1260934	0					
ANR	1261027	ArgumentList	type -> elements		1260934	1					
ANR	1261028	Argument	type -> elements		1260934	0					
ANR	1261029	PtrMemberAccess	type -> elements		1260934	0					
ANR	1261030	Identifier	type		1260934	0					
ANR	1261031	Identifier	elements		1260934	1					
ANR	1261032	IfStatement	if ( type -> attributes )		1260934	6					
ANR	1261033	Condition	type -> attributes	2404:5:75964:75979	1260934	0	True				
ANR	1261034	PtrMemberAccess	type -> attributes		1260934	0					
ANR	1261035	Identifier	type		1260934	0					
ANR	1261036	Identifier	attributes		1260934	1					
ANR	1261037	CompoundStatement		20:23:330:330	1260934	1					
ANR	1261038	ExpressionStatement	zend_hash_destroy ( type -> attributes )	2405:2:75986:76021	1260934	0	True				
ANR	1261039	CallExpression	zend_hash_destroy ( type -> attributes )		1260934	0					
ANR	1261040	Callee	zend_hash_destroy		1260934	0					
ANR	1261041	Identifier	zend_hash_destroy		1260934	0					
ANR	1261042	ArgumentList	type -> attributes		1260934	1					
ANR	1261043	Argument	type -> attributes		1260934	0					
ANR	1261044	PtrMemberAccess	type -> attributes		1260934	0					
ANR	1261045	Identifier	type		1260934	0					
ANR	1261046	Identifier	attributes		1260934	1					
ANR	1261047	ExpressionStatement	efree ( type -> attributes )	2406:2:76025:76048	1260934	1	True				
ANR	1261048	CallExpression	efree ( type -> attributes )		1260934	0					
ANR	1261049	Callee	efree		1260934	0					
ANR	1261050	Identifier	efree		1260934	0					
ANR	1261051	ArgumentList	type -> attributes		1260934	1					
ANR	1261052	Argument	type -> attributes		1260934	0					
ANR	1261053	PtrMemberAccess	type -> attributes		1260934	0					
ANR	1261054	Identifier	type		1260934	0					
ANR	1261055	Identifier	attributes		1260934	1					
ANR	1261056	IfStatement	if ( type -> model )		1260934	7					
ANR	1261057	Condition	type -> model	2408:5:76058:76068	1260934	0	True				
ANR	1261058	PtrMemberAccess	type -> model		1260934	0					
ANR	1261059	Identifier	type		1260934	0					
ANR	1261060	Identifier	model		1260934	1					
ANR	1261061	CompoundStatement		24:18:419:419	1260934	1					
ANR	1261062	ExpressionStatement	delete_model ( ( void * * ) & type -> model )	2409:2:76075:76109	1260934	0	True				
ANR	1261063	CallExpression	delete_model ( ( void * * ) & type -> model )		1260934	0					
ANR	1261064	Callee	delete_model		1260934	0					
ANR	1261065	Identifier	delete_model		1260934	0					
ANR	1261066	ArgumentList	( void * * ) & type -> model		1260934	1					
ANR	1261067	Argument	( void * * ) & type -> model		1260934	0					
ANR	1261068	CastExpression	( void * * ) & type -> model		1260934	0					
ANR	1261069	CastTarget	void * *		1260934	0					
ANR	1261070	UnaryOperationExpression	& type -> model		1260934	1					
ANR	1261071	UnaryOperator	&		1260934	0					
ANR	1261072	PtrMemberAccess	type -> model		1260934	1					
ANR	1261073	Identifier	type		1260934	0					
ANR	1261074	Identifier	model		1260934	1					
ANR	1261075	IfStatement	if ( type -> restrictions )		1260934	8					
ANR	1261076	Condition	type -> restrictions	2411:5:76119:76136	1260934	0	True				
ANR	1261077	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261078	Identifier	type		1260934	0					
ANR	1261079	Identifier	restrictions		1260934	1					
ANR	1261080	CompoundStatement		27:25:487:487	1260934	1					
ANR	1261081	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> minExclusive )	2412:2:76143:76204	1260934	0	True				
ANR	1261082	CallExpression	delete_restriction_var_int ( & type -> restrictions -> minExclusive )		1260934	0					
ANR	1261083	Callee	delete_restriction_var_int		1260934	0					
ANR	1261084	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261085	ArgumentList	& type -> restrictions -> minExclusive		1260934	1					
ANR	1261086	Argument	& type -> restrictions -> minExclusive		1260934	0					
ANR	1261087	UnaryOperationExpression	& type -> restrictions -> minExclusive		1260934	0					
ANR	1261088	UnaryOperator	&		1260934	0					
ANR	1261089	PtrMemberAccess	type -> restrictions -> minExclusive		1260934	1					
ANR	1261090	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261091	Identifier	type		1260934	0					
ANR	1261092	Identifier	restrictions		1260934	1					
ANR	1261093	Identifier	minExclusive		1260934	1					
ANR	1261094	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> minInclusive )	2413:2:76208:76269	1260934	1	True				
ANR	1261095	CallExpression	delete_restriction_var_int ( & type -> restrictions -> minInclusive )		1260934	0					
ANR	1261096	Callee	delete_restriction_var_int		1260934	0					
ANR	1261097	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261098	ArgumentList	& type -> restrictions -> minInclusive		1260934	1					
ANR	1261099	Argument	& type -> restrictions -> minInclusive		1260934	0					
ANR	1261100	UnaryOperationExpression	& type -> restrictions -> minInclusive		1260934	0					
ANR	1261101	UnaryOperator	&		1260934	0					
ANR	1261102	PtrMemberAccess	type -> restrictions -> minInclusive		1260934	1					
ANR	1261103	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261104	Identifier	type		1260934	0					
ANR	1261105	Identifier	restrictions		1260934	1					
ANR	1261106	Identifier	minInclusive		1260934	1					
ANR	1261107	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> maxExclusive )	2414:2:76273:76334	1260934	2	True				
ANR	1261108	CallExpression	delete_restriction_var_int ( & type -> restrictions -> maxExclusive )		1260934	0					
ANR	1261109	Callee	delete_restriction_var_int		1260934	0					
ANR	1261110	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261111	ArgumentList	& type -> restrictions -> maxExclusive		1260934	1					
ANR	1261112	Argument	& type -> restrictions -> maxExclusive		1260934	0					
ANR	1261113	UnaryOperationExpression	& type -> restrictions -> maxExclusive		1260934	0					
ANR	1261114	UnaryOperator	&		1260934	0					
ANR	1261115	PtrMemberAccess	type -> restrictions -> maxExclusive		1260934	1					
ANR	1261116	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261117	Identifier	type		1260934	0					
ANR	1261118	Identifier	restrictions		1260934	1					
ANR	1261119	Identifier	maxExclusive		1260934	1					
ANR	1261120	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> maxInclusive )	2415:2:76338:76399	1260934	3	True				
ANR	1261121	CallExpression	delete_restriction_var_int ( & type -> restrictions -> maxInclusive )		1260934	0					
ANR	1261122	Callee	delete_restriction_var_int		1260934	0					
ANR	1261123	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261124	ArgumentList	& type -> restrictions -> maxInclusive		1260934	1					
ANR	1261125	Argument	& type -> restrictions -> maxInclusive		1260934	0					
ANR	1261126	UnaryOperationExpression	& type -> restrictions -> maxInclusive		1260934	0					
ANR	1261127	UnaryOperator	&		1260934	0					
ANR	1261128	PtrMemberAccess	type -> restrictions -> maxInclusive		1260934	1					
ANR	1261129	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261130	Identifier	type		1260934	0					
ANR	1261131	Identifier	restrictions		1260934	1					
ANR	1261132	Identifier	maxInclusive		1260934	1					
ANR	1261133	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> totalDigits )	2416:2:76403:76463	1260934	4	True				
ANR	1261134	CallExpression	delete_restriction_var_int ( & type -> restrictions -> totalDigits )		1260934	0					
ANR	1261135	Callee	delete_restriction_var_int		1260934	0					
ANR	1261136	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261137	ArgumentList	& type -> restrictions -> totalDigits		1260934	1					
ANR	1261138	Argument	& type -> restrictions -> totalDigits		1260934	0					
ANR	1261139	UnaryOperationExpression	& type -> restrictions -> totalDigits		1260934	0					
ANR	1261140	UnaryOperator	&		1260934	0					
ANR	1261141	PtrMemberAccess	type -> restrictions -> totalDigits		1260934	1					
ANR	1261142	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261143	Identifier	type		1260934	0					
ANR	1261144	Identifier	restrictions		1260934	1					
ANR	1261145	Identifier	totalDigits		1260934	1					
ANR	1261146	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> fractionDigits )	2417:2:76467:76530	1260934	5	True				
ANR	1261147	CallExpression	delete_restriction_var_int ( & type -> restrictions -> fractionDigits )		1260934	0					
ANR	1261148	Callee	delete_restriction_var_int		1260934	0					
ANR	1261149	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261150	ArgumentList	& type -> restrictions -> fractionDigits		1260934	1					
ANR	1261151	Argument	& type -> restrictions -> fractionDigits		1260934	0					
ANR	1261152	UnaryOperationExpression	& type -> restrictions -> fractionDigits		1260934	0					
ANR	1261153	UnaryOperator	&		1260934	0					
ANR	1261154	PtrMemberAccess	type -> restrictions -> fractionDigits		1260934	1					
ANR	1261155	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261156	Identifier	type		1260934	0					
ANR	1261157	Identifier	restrictions		1260934	1					
ANR	1261158	Identifier	fractionDigits		1260934	1					
ANR	1261159	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> length )	2418:2:76534:76589	1260934	6	True				
ANR	1261160	CallExpression	delete_restriction_var_int ( & type -> restrictions -> length )		1260934	0					
ANR	1261161	Callee	delete_restriction_var_int		1260934	0					
ANR	1261162	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261163	ArgumentList	& type -> restrictions -> length		1260934	1					
ANR	1261164	Argument	& type -> restrictions -> length		1260934	0					
ANR	1261165	UnaryOperationExpression	& type -> restrictions -> length		1260934	0					
ANR	1261166	UnaryOperator	&		1260934	0					
ANR	1261167	PtrMemberAccess	type -> restrictions -> length		1260934	1					
ANR	1261168	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261169	Identifier	type		1260934	0					
ANR	1261170	Identifier	restrictions		1260934	1					
ANR	1261171	Identifier	length		1260934	1					
ANR	1261172	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> minLength )	2419:2:76593:76651	1260934	7	True				
ANR	1261173	CallExpression	delete_restriction_var_int ( & type -> restrictions -> minLength )		1260934	0					
ANR	1261174	Callee	delete_restriction_var_int		1260934	0					
ANR	1261175	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261176	ArgumentList	& type -> restrictions -> minLength		1260934	1					
ANR	1261177	Argument	& type -> restrictions -> minLength		1260934	0					
ANR	1261178	UnaryOperationExpression	& type -> restrictions -> minLength		1260934	0					
ANR	1261179	UnaryOperator	&		1260934	0					
ANR	1261180	PtrMemberAccess	type -> restrictions -> minLength		1260934	1					
ANR	1261181	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261182	Identifier	type		1260934	0					
ANR	1261183	Identifier	restrictions		1260934	1					
ANR	1261184	Identifier	minLength		1260934	1					
ANR	1261185	ExpressionStatement	delete_restriction_var_int ( & type -> restrictions -> maxLength )	2420:2:76655:76713	1260934	8	True				
ANR	1261186	CallExpression	delete_restriction_var_int ( & type -> restrictions -> maxLength )		1260934	0					
ANR	1261187	Callee	delete_restriction_var_int		1260934	0					
ANR	1261188	Identifier	delete_restriction_var_int		1260934	0					
ANR	1261189	ArgumentList	& type -> restrictions -> maxLength		1260934	1					
ANR	1261190	Argument	& type -> restrictions -> maxLength		1260934	0					
ANR	1261191	UnaryOperationExpression	& type -> restrictions -> maxLength		1260934	0					
ANR	1261192	UnaryOperator	&		1260934	0					
ANR	1261193	PtrMemberAccess	type -> restrictions -> maxLength		1260934	1					
ANR	1261194	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261195	Identifier	type		1260934	0					
ANR	1261196	Identifier	restrictions		1260934	1					
ANR	1261197	Identifier	maxLength		1260934	1					
ANR	1261198	ExpressionStatement	delete_restriction_var_char ( & type -> restrictions -> whiteSpace )	2421:2:76717:76777	1260934	9	True				
ANR	1261199	CallExpression	delete_restriction_var_char ( & type -> restrictions -> whiteSpace )		1260934	0					
ANR	1261200	Callee	delete_restriction_var_char		1260934	0					
ANR	1261201	Identifier	delete_restriction_var_char		1260934	0					
ANR	1261202	ArgumentList	& type -> restrictions -> whiteSpace		1260934	1					
ANR	1261203	Argument	& type -> restrictions -> whiteSpace		1260934	0					
ANR	1261204	UnaryOperationExpression	& type -> restrictions -> whiteSpace		1260934	0					
ANR	1261205	UnaryOperator	&		1260934	0					
ANR	1261206	PtrMemberAccess	type -> restrictions -> whiteSpace		1260934	1					
ANR	1261207	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261208	Identifier	type		1260934	0					
ANR	1261209	Identifier	restrictions		1260934	1					
ANR	1261210	Identifier	whiteSpace		1260934	1					
ANR	1261211	ExpressionStatement	delete_restriction_var_char ( & type -> restrictions -> pattern )	2422:2:76781:76838	1260934	10	True				
ANR	1261212	CallExpression	delete_restriction_var_char ( & type -> restrictions -> pattern )		1260934	0					
ANR	1261213	Callee	delete_restriction_var_char		1260934	0					
ANR	1261214	Identifier	delete_restriction_var_char		1260934	0					
ANR	1261215	ArgumentList	& type -> restrictions -> pattern		1260934	1					
ANR	1261216	Argument	& type -> restrictions -> pattern		1260934	0					
ANR	1261217	UnaryOperationExpression	& type -> restrictions -> pattern		1260934	0					
ANR	1261218	UnaryOperator	&		1260934	0					
ANR	1261219	PtrMemberAccess	type -> restrictions -> pattern		1260934	1					
ANR	1261220	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261221	Identifier	type		1260934	0					
ANR	1261222	Identifier	restrictions		1260934	1					
ANR	1261223	Identifier	pattern		1260934	1					
ANR	1261224	IfStatement	if ( type -> restrictions -> enumeration )		1260934	11					
ANR	1261225	Condition	type -> restrictions -> enumeration	2423:6:76846:76876	1260934	0	True				
ANR	1261226	PtrMemberAccess	type -> restrictions -> enumeration		1260934	0					
ANR	1261227	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261228	Identifier	type		1260934	0					
ANR	1261229	Identifier	restrictions		1260934	1					
ANR	1261230	Identifier	enumeration		1260934	1					
ANR	1261231	CompoundStatement		39:39:1227:1227	1260934	1					
ANR	1261232	ExpressionStatement	zend_hash_destroy ( type -> restrictions -> enumeration )	2424:3:76884:76934	1260934	0	True				
ANR	1261233	CallExpression	zend_hash_destroy ( type -> restrictions -> enumeration )		1260934	0					
ANR	1261234	Callee	zend_hash_destroy		1260934	0					
ANR	1261235	Identifier	zend_hash_destroy		1260934	0					
ANR	1261236	ArgumentList	type -> restrictions -> enumeration		1260934	1					
ANR	1261237	Argument	type -> restrictions -> enumeration		1260934	0					
ANR	1261238	PtrMemberAccess	type -> restrictions -> enumeration		1260934	0					
ANR	1261239	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261240	Identifier	type		1260934	0					
ANR	1261241	Identifier	restrictions		1260934	1					
ANR	1261242	Identifier	enumeration		1260934	1					
ANR	1261243	ExpressionStatement	efree ( type -> restrictions -> enumeration )	2425:3:76939:76977	1260934	1	True				
ANR	1261244	CallExpression	efree ( type -> restrictions -> enumeration )		1260934	0					
ANR	1261245	Callee	efree		1260934	0					
ANR	1261246	Identifier	efree		1260934	0					
ANR	1261247	ArgumentList	type -> restrictions -> enumeration		1260934	1					
ANR	1261248	Argument	type -> restrictions -> enumeration		1260934	0					
ANR	1261249	PtrMemberAccess	type -> restrictions -> enumeration		1260934	0					
ANR	1261250	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261251	Identifier	type		1260934	0					
ANR	1261252	Identifier	restrictions		1260934	1					
ANR	1261253	Identifier	enumeration		1260934	1					
ANR	1261254	ExpressionStatement	efree ( type -> restrictions )	2427:2:76985:77010	1260934	12	True				
ANR	1261255	CallExpression	efree ( type -> restrictions )		1260934	0					
ANR	1261256	Callee	efree		1260934	0					
ANR	1261257	Identifier	efree		1260934	0					
ANR	1261258	ArgumentList	type -> restrictions		1260934	1					
ANR	1261259	Argument	type -> restrictions		1260934	0					
ANR	1261260	PtrMemberAccess	type -> restrictions		1260934	0					
ANR	1261261	Identifier	type		1260934	0					
ANR	1261262	Identifier	restrictions		1260934	1					
ANR	1261263	ExpressionStatement	efree ( type )	2429:1:77016:77027	1260934	9	True				
ANR	1261264	CallExpression	efree ( type )		1260934	0					
ANR	1261265	Callee	efree		1260934	0					
ANR	1261266	Identifier	efree		1260934	0					
ANR	1261267	ArgumentList	type		1260934	1					
ANR	1261268	Argument	type		1260934	0					
ANR	1261269	Identifier	type		1260934	0					
ANR	1261270	ReturnType	void		1260934	1					
ANR	1261271	Identifier	delete_type		1260934	2					
ANR	1261272	ParameterList	void * data		1260934	3					
ANR	1261273	Parameter	void * data	2384:17:75639:75648	1260934	0	True				
ANR	1261274	ParameterType	void *		1260934	0					
ANR	1261275	Identifier	data		1260934	1					
ANR	1261276	CFGEntryNode	ENTRY		1260934		True				
ANR	1261277	CFGExitNode	EXIT		1260934		True				
ANR	1261278	Symbol	data		1260934						
ANR	1261279	Symbol	type -> fixed		1260934						
ANR	1261280	Symbol	& type -> restrictions -> maxExclusive		1260934						
ANR	1261281	Symbol	* ( ( sdlTypePtr * ) data )		1260934						
ANR	1261282	Symbol	type		1260934						
ANR	1261283	Symbol	& type -> restrictions -> totalDigits		1260934						
ANR	1261284	Symbol	& type -> restrictions -> whiteSpace		1260934						
ANR	1261285	Symbol	type -> attributes		1260934						
ANR	1261286	Symbol	& type -> restrictions -> minInclusive		1260934						
ANR	1261287	Symbol	* type		1260934						
ANR	1261288	Symbol	type -> def		1260934						
ANR	1261289	Symbol	& type -> restrictions -> maxLength		1260934						
ANR	1261290	Symbol	type -> namens		1260934						
ANR	1261291	Symbol	& type -> restrictions -> fractionDigits		1260934						
ANR	1261292	Symbol	type -> elements		1260934						
ANR	1261293	Symbol	type -> name		1260934						
ANR	1261294	Symbol	& type -> restrictions -> minLength		1260934						
ANR	1261295	Symbol	* type -> restrictions		1260934						
ANR	1261296	Symbol	type -> model		1260934						
ANR	1261297	Symbol	type -> restrictions -> enumeration		1260934						
ANR	1261298	Symbol	& type -> restrictions -> pattern		1260934						
ANR	1261299	Symbol	type -> restrictions		1260934						
ANR	1261300	Symbol	& type -> model		1260934						
ANR	1261301	Symbol	& type -> restrictions -> maxInclusive		1260934						
ANR	1261302	Symbol	* * type		1260934						
ANR	1261303	Symbol	* data		1260934						
ANR	1261304	Symbol	& type -> restrictions -> minExclusive		1260934						
ANR	1261305	Symbol	& type -> restrictions -> length		1260934						
ANR	1261306	Function	delete_type_persistent	2432:0:77032:78572							
ANR	1261307	FunctionDef	delete_type_persistent (void * data)		1261306	0					
ANR	1261308	CompoundStatement		2433:0:77072:78572	1261306	0					
ANR	1261309	IdentifierDeclStatement	sdlTypePtr type = * ( ( sdlTypePtr * ) data ) ;	2434:1:77075:77113	1261306	0	True				
ANR	1261310	IdentifierDecl	type = * ( ( sdlTypePtr * ) data )		1261306	0					
ANR	1261311	IdentifierDeclType	sdlTypePtr		1261306	0					
ANR	1261312	Identifier	type		1261306	1					
ANR	1261313	AssignmentExpression	type = * ( ( sdlTypePtr * ) data )		1261306	2		=			
ANR	1261314	Identifier	type		1261306	0					
ANR	1261315	UnaryOperationExpression	* ( ( sdlTypePtr * ) data )		1261306	1					
ANR	1261316	UnaryOperator	*		1261306	0					
ANR	1261317	CastExpression	( sdlTypePtr * ) data		1261306	1					
ANR	1261318	CastTarget	sdlTypePtr *		1261306	0					
ANR	1261319	Identifier	data		1261306	1					
ANR	1261320	IfStatement	if ( type -> name )		1261306	1					
ANR	1261321	Condition	type -> name	2435:5:77120:77129	1261306	0	True				
ANR	1261322	PtrMemberAccess	type -> name		1261306	0					
ANR	1261323	Identifier	type		1261306	0					
ANR	1261324	Identifier	name		1261306	1					
ANR	1261325	CompoundStatement		3:17:59:59	1261306	1					
ANR	1261326	ExpressionStatement	free ( type -> name )	2436:2:77136:77152	1261306	0	True				
ANR	1261327	CallExpression	free ( type -> name )		1261306	0					
ANR	1261328	Callee	free		1261306	0					
ANR	1261329	Identifier	free		1261306	0					
ANR	1261330	ArgumentList	type -> name		1261306	1					
ANR	1261331	Argument	type -> name		1261306	0					
ANR	1261332	PtrMemberAccess	type -> name		1261306	0					
ANR	1261333	Identifier	type		1261306	0					
ANR	1261334	Identifier	name		1261306	1					
ANR	1261335	IfStatement	if ( type -> namens )		1261306	2					
ANR	1261336	Condition	type -> namens	2438:5:77162:77173	1261306	0	True				
ANR	1261337	PtrMemberAccess	type -> namens		1261306	0					
ANR	1261338	Identifier	type		1261306	0					
ANR	1261339	Identifier	namens		1261306	1					
ANR	1261340	CompoundStatement		6:19:103:103	1261306	1					
ANR	1261341	ExpressionStatement	free ( type -> namens )	2439:2:77180:77198	1261306	0	True				
ANR	1261342	CallExpression	free ( type -> namens )		1261306	0					
ANR	1261343	Callee	free		1261306	0					
ANR	1261344	Identifier	free		1261306	0					
ANR	1261345	ArgumentList	type -> namens		1261306	1					
ANR	1261346	Argument	type -> namens		1261306	0					
ANR	1261347	PtrMemberAccess	type -> namens		1261306	0					
ANR	1261348	Identifier	type		1261306	0					
ANR	1261349	Identifier	namens		1261306	1					
ANR	1261350	IfStatement	if ( type -> def )		1261306	3					
ANR	1261351	Condition	type -> def	2441:5:77208:77216	1261306	0	True				
ANR	1261352	PtrMemberAccess	type -> def		1261306	0					
ANR	1261353	Identifier	type		1261306	0					
ANR	1261354	Identifier	def		1261306	1					
ANR	1261355	CompoundStatement		9:16:146:146	1261306	1					
ANR	1261356	ExpressionStatement	free ( type -> def )	2442:2:77223:77238	1261306	0	True				
ANR	1261357	CallExpression	free ( type -> def )		1261306	0					
ANR	1261358	Callee	free		1261306	0					
ANR	1261359	Identifier	free		1261306	0					
ANR	1261360	ArgumentList	type -> def		1261306	1					
ANR	1261361	Argument	type -> def		1261306	0					
ANR	1261362	PtrMemberAccess	type -> def		1261306	0					
ANR	1261363	Identifier	type		1261306	0					
ANR	1261364	Identifier	def		1261306	1					
ANR	1261365	IfStatement	if ( type -> fixed )		1261306	4					
ANR	1261366	Condition	type -> fixed	2444:5:77248:77258	1261306	0	True				
ANR	1261367	PtrMemberAccess	type -> fixed		1261306	0					
ANR	1261368	Identifier	type		1261306	0					
ANR	1261369	Identifier	fixed		1261306	1					
ANR	1261370	CompoundStatement		12:18:188:188	1261306	1					
ANR	1261371	ExpressionStatement	free ( type -> fixed )	2445:2:77265:77282	1261306	0	True				
ANR	1261372	CallExpression	free ( type -> fixed )		1261306	0					
ANR	1261373	Callee	free		1261306	0					
ANR	1261374	Identifier	free		1261306	0					
ANR	1261375	ArgumentList	type -> fixed		1261306	1					
ANR	1261376	Argument	type -> fixed		1261306	0					
ANR	1261377	PtrMemberAccess	type -> fixed		1261306	0					
ANR	1261378	Identifier	type		1261306	0					
ANR	1261379	Identifier	fixed		1261306	1					
ANR	1261380	IfStatement	if ( type -> elements )		1261306	5					
ANR	1261381	Condition	type -> elements	2447:5:77292:77305	1261306	0	True				
ANR	1261382	PtrMemberAccess	type -> elements		1261306	0					
ANR	1261383	Identifier	type		1261306	0					
ANR	1261384	Identifier	elements		1261306	1					
ANR	1261385	CompoundStatement		15:21:235:235	1261306	1					
ANR	1261386	ExpressionStatement	zend_hash_destroy ( type -> elements )	2448:2:77312:77345	1261306	0	True				
ANR	1261387	CallExpression	zend_hash_destroy ( type -> elements )		1261306	0					
ANR	1261388	Callee	zend_hash_destroy		1261306	0					
ANR	1261389	Identifier	zend_hash_destroy		1261306	0					
ANR	1261390	ArgumentList	type -> elements		1261306	1					
ANR	1261391	Argument	type -> elements		1261306	0					
ANR	1261392	PtrMemberAccess	type -> elements		1261306	0					
ANR	1261393	Identifier	type		1261306	0					
ANR	1261394	Identifier	elements		1261306	1					
ANR	1261395	ExpressionStatement	free ( type -> elements )	2449:2:77349:77369	1261306	1	True				
ANR	1261396	CallExpression	free ( type -> elements )		1261306	0					
ANR	1261397	Callee	free		1261306	0					
ANR	1261398	Identifier	free		1261306	0					
ANR	1261399	ArgumentList	type -> elements		1261306	1					
ANR	1261400	Argument	type -> elements		1261306	0					
ANR	1261401	PtrMemberAccess	type -> elements		1261306	0					
ANR	1261402	Identifier	type		1261306	0					
ANR	1261403	Identifier	elements		1261306	1					
ANR	1261404	IfStatement	if ( type -> attributes )		1261306	6					
ANR	1261405	Condition	type -> attributes	2451:5:77379:77394	1261306	0	True				
ANR	1261406	PtrMemberAccess	type -> attributes		1261306	0					
ANR	1261407	Identifier	type		1261306	0					
ANR	1261408	Identifier	attributes		1261306	1					
ANR	1261409	CompoundStatement		19:23:324:324	1261306	1					
ANR	1261410	ExpressionStatement	zend_hash_destroy ( type -> attributes )	2452:2:77401:77436	1261306	0	True				
ANR	1261411	CallExpression	zend_hash_destroy ( type -> attributes )		1261306	0					
ANR	1261412	Callee	zend_hash_destroy		1261306	0					
ANR	1261413	Identifier	zend_hash_destroy		1261306	0					
ANR	1261414	ArgumentList	type -> attributes		1261306	1					
ANR	1261415	Argument	type -> attributes		1261306	0					
ANR	1261416	PtrMemberAccess	type -> attributes		1261306	0					
ANR	1261417	Identifier	type		1261306	0					
ANR	1261418	Identifier	attributes		1261306	1					
ANR	1261419	ExpressionStatement	free ( type -> attributes )	2453:2:77440:77462	1261306	1	True				
ANR	1261420	CallExpression	free ( type -> attributes )		1261306	0					
ANR	1261421	Callee	free		1261306	0					
ANR	1261422	Identifier	free		1261306	0					
ANR	1261423	ArgumentList	type -> attributes		1261306	1					
ANR	1261424	Argument	type -> attributes		1261306	0					
ANR	1261425	PtrMemberAccess	type -> attributes		1261306	0					
ANR	1261426	Identifier	type		1261306	0					
ANR	1261427	Identifier	attributes		1261306	1					
ANR	1261428	IfStatement	if ( type -> model )		1261306	7					
ANR	1261429	Condition	type -> model	2455:5:77472:77482	1261306	0	True				
ANR	1261430	PtrMemberAccess	type -> model		1261306	0					
ANR	1261431	Identifier	type		1261306	0					
ANR	1261432	Identifier	model		1261306	1					
ANR	1261433	CompoundStatement		23:18:412:412	1261306	1					
ANR	1261434	ExpressionStatement	delete_model_persistent ( ( void * * ) & type -> model )	2456:2:77489:77534	1261306	0	True				
ANR	1261435	CallExpression	delete_model_persistent ( ( void * * ) & type -> model )		1261306	0					
ANR	1261436	Callee	delete_model_persistent		1261306	0					
ANR	1261437	Identifier	delete_model_persistent		1261306	0					
ANR	1261438	ArgumentList	( void * * ) & type -> model		1261306	1					
ANR	1261439	Argument	( void * * ) & type -> model		1261306	0					
ANR	1261440	CastExpression	( void * * ) & type -> model		1261306	0					
ANR	1261441	CastTarget	void * *		1261306	0					
ANR	1261442	UnaryOperationExpression	& type -> model		1261306	1					
ANR	1261443	UnaryOperator	&		1261306	0					
ANR	1261444	PtrMemberAccess	type -> model		1261306	1					
ANR	1261445	Identifier	type		1261306	0					
ANR	1261446	Identifier	model		1261306	1					
ANR	1261447	IfStatement	if ( type -> restrictions )		1261306	8					
ANR	1261448	Condition	type -> restrictions	2458:5:77544:77561	1261306	0	True				
ANR	1261449	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261450	Identifier	type		1261306	0					
ANR	1261451	Identifier	restrictions		1261306	1					
ANR	1261452	CompoundStatement		26:25:491:491	1261306	1					
ANR	1261453	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> minExclusive )	2459:2:77568:77640	1261306	0	True				
ANR	1261454	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> minExclusive )		1261306	0					
ANR	1261455	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261456	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261457	ArgumentList	& type -> restrictions -> minExclusive		1261306	1					
ANR	1261458	Argument	& type -> restrictions -> minExclusive		1261306	0					
ANR	1261459	UnaryOperationExpression	& type -> restrictions -> minExclusive		1261306	0					
ANR	1261460	UnaryOperator	&		1261306	0					
ANR	1261461	PtrMemberAccess	type -> restrictions -> minExclusive		1261306	1					
ANR	1261462	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261463	Identifier	type		1261306	0					
ANR	1261464	Identifier	restrictions		1261306	1					
ANR	1261465	Identifier	minExclusive		1261306	1					
ANR	1261466	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> minInclusive )	2460:2:77644:77716	1261306	1	True				
ANR	1261467	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> minInclusive )		1261306	0					
ANR	1261468	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261469	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261470	ArgumentList	& type -> restrictions -> minInclusive		1261306	1					
ANR	1261471	Argument	& type -> restrictions -> minInclusive		1261306	0					
ANR	1261472	UnaryOperationExpression	& type -> restrictions -> minInclusive		1261306	0					
ANR	1261473	UnaryOperator	&		1261306	0					
ANR	1261474	PtrMemberAccess	type -> restrictions -> minInclusive		1261306	1					
ANR	1261475	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261476	Identifier	type		1261306	0					
ANR	1261477	Identifier	restrictions		1261306	1					
ANR	1261478	Identifier	minInclusive		1261306	1					
ANR	1261479	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> maxExclusive )	2461:2:77720:77792	1261306	2	True				
ANR	1261480	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> maxExclusive )		1261306	0					
ANR	1261481	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261482	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261483	ArgumentList	& type -> restrictions -> maxExclusive		1261306	1					
ANR	1261484	Argument	& type -> restrictions -> maxExclusive		1261306	0					
ANR	1261485	UnaryOperationExpression	& type -> restrictions -> maxExclusive		1261306	0					
ANR	1261486	UnaryOperator	&		1261306	0					
ANR	1261487	PtrMemberAccess	type -> restrictions -> maxExclusive		1261306	1					
ANR	1261488	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261489	Identifier	type		1261306	0					
ANR	1261490	Identifier	restrictions		1261306	1					
ANR	1261491	Identifier	maxExclusive		1261306	1					
ANR	1261492	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> maxInclusive )	2462:2:77796:77868	1261306	3	True				
ANR	1261493	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> maxInclusive )		1261306	0					
ANR	1261494	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261495	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261496	ArgumentList	& type -> restrictions -> maxInclusive		1261306	1					
ANR	1261497	Argument	& type -> restrictions -> maxInclusive		1261306	0					
ANR	1261498	UnaryOperationExpression	& type -> restrictions -> maxInclusive		1261306	0					
ANR	1261499	UnaryOperator	&		1261306	0					
ANR	1261500	PtrMemberAccess	type -> restrictions -> maxInclusive		1261306	1					
ANR	1261501	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261502	Identifier	type		1261306	0					
ANR	1261503	Identifier	restrictions		1261306	1					
ANR	1261504	Identifier	maxInclusive		1261306	1					
ANR	1261505	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> totalDigits )	2463:2:77872:77943	1261306	4	True				
ANR	1261506	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> totalDigits )		1261306	0					
ANR	1261507	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261508	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261509	ArgumentList	& type -> restrictions -> totalDigits		1261306	1					
ANR	1261510	Argument	& type -> restrictions -> totalDigits		1261306	0					
ANR	1261511	UnaryOperationExpression	& type -> restrictions -> totalDigits		1261306	0					
ANR	1261512	UnaryOperator	&		1261306	0					
ANR	1261513	PtrMemberAccess	type -> restrictions -> totalDigits		1261306	1					
ANR	1261514	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261515	Identifier	type		1261306	0					
ANR	1261516	Identifier	restrictions		1261306	1					
ANR	1261517	Identifier	totalDigits		1261306	1					
ANR	1261518	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> fractionDigits )	2464:2:77947:78021	1261306	5	True				
ANR	1261519	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> fractionDigits )		1261306	0					
ANR	1261520	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261521	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261522	ArgumentList	& type -> restrictions -> fractionDigits		1261306	1					
ANR	1261523	Argument	& type -> restrictions -> fractionDigits		1261306	0					
ANR	1261524	UnaryOperationExpression	& type -> restrictions -> fractionDigits		1261306	0					
ANR	1261525	UnaryOperator	&		1261306	0					
ANR	1261526	PtrMemberAccess	type -> restrictions -> fractionDigits		1261306	1					
ANR	1261527	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261528	Identifier	type		1261306	0					
ANR	1261529	Identifier	restrictions		1261306	1					
ANR	1261530	Identifier	fractionDigits		1261306	1					
ANR	1261531	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> length )	2465:2:78025:78091	1261306	6	True				
ANR	1261532	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> length )		1261306	0					
ANR	1261533	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261534	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261535	ArgumentList	& type -> restrictions -> length		1261306	1					
ANR	1261536	Argument	& type -> restrictions -> length		1261306	0					
ANR	1261537	UnaryOperationExpression	& type -> restrictions -> length		1261306	0					
ANR	1261538	UnaryOperator	&		1261306	0					
ANR	1261539	PtrMemberAccess	type -> restrictions -> length		1261306	1					
ANR	1261540	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261541	Identifier	type		1261306	0					
ANR	1261542	Identifier	restrictions		1261306	1					
ANR	1261543	Identifier	length		1261306	1					
ANR	1261544	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> minLength )	2466:2:78095:78164	1261306	7	True				
ANR	1261545	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> minLength )		1261306	0					
ANR	1261546	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261547	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261548	ArgumentList	& type -> restrictions -> minLength		1261306	1					
ANR	1261549	Argument	& type -> restrictions -> minLength		1261306	0					
ANR	1261550	UnaryOperationExpression	& type -> restrictions -> minLength		1261306	0					
ANR	1261551	UnaryOperator	&		1261306	0					
ANR	1261552	PtrMemberAccess	type -> restrictions -> minLength		1261306	1					
ANR	1261553	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261554	Identifier	type		1261306	0					
ANR	1261555	Identifier	restrictions		1261306	1					
ANR	1261556	Identifier	minLength		1261306	1					
ANR	1261557	ExpressionStatement	delete_restriction_var_int_persistent ( & type -> restrictions -> maxLength )	2467:2:78168:78237	1261306	8	True				
ANR	1261558	CallExpression	delete_restriction_var_int_persistent ( & type -> restrictions -> maxLength )		1261306	0					
ANR	1261559	Callee	delete_restriction_var_int_persistent		1261306	0					
ANR	1261560	Identifier	delete_restriction_var_int_persistent		1261306	0					
ANR	1261561	ArgumentList	& type -> restrictions -> maxLength		1261306	1					
ANR	1261562	Argument	& type -> restrictions -> maxLength		1261306	0					
ANR	1261563	UnaryOperationExpression	& type -> restrictions -> maxLength		1261306	0					
ANR	1261564	UnaryOperator	&		1261306	0					
ANR	1261565	PtrMemberAccess	type -> restrictions -> maxLength		1261306	1					
ANR	1261566	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261567	Identifier	type		1261306	0					
ANR	1261568	Identifier	restrictions		1261306	1					
ANR	1261569	Identifier	maxLength		1261306	1					
ANR	1261570	ExpressionStatement	delete_restriction_var_char_persistent ( & type -> restrictions -> whiteSpace )	2468:2:78241:78312	1261306	9	True				
ANR	1261571	CallExpression	delete_restriction_var_char_persistent ( & type -> restrictions -> whiteSpace )		1261306	0					
ANR	1261572	Callee	delete_restriction_var_char_persistent		1261306	0					
ANR	1261573	Identifier	delete_restriction_var_char_persistent		1261306	0					
ANR	1261574	ArgumentList	& type -> restrictions -> whiteSpace		1261306	1					
ANR	1261575	Argument	& type -> restrictions -> whiteSpace		1261306	0					
ANR	1261576	UnaryOperationExpression	& type -> restrictions -> whiteSpace		1261306	0					
ANR	1261577	UnaryOperator	&		1261306	0					
ANR	1261578	PtrMemberAccess	type -> restrictions -> whiteSpace		1261306	1					
ANR	1261579	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261580	Identifier	type		1261306	0					
ANR	1261581	Identifier	restrictions		1261306	1					
ANR	1261582	Identifier	whiteSpace		1261306	1					
ANR	1261583	ExpressionStatement	delete_restriction_var_char_persistent ( & type -> restrictions -> pattern )	2469:2:78316:78384	1261306	10	True				
ANR	1261584	CallExpression	delete_restriction_var_char_persistent ( & type -> restrictions -> pattern )		1261306	0					
ANR	1261585	Callee	delete_restriction_var_char_persistent		1261306	0					
ANR	1261586	Identifier	delete_restriction_var_char_persistent		1261306	0					
ANR	1261587	ArgumentList	& type -> restrictions -> pattern		1261306	1					
ANR	1261588	Argument	& type -> restrictions -> pattern		1261306	0					
ANR	1261589	UnaryOperationExpression	& type -> restrictions -> pattern		1261306	0					
ANR	1261590	UnaryOperator	&		1261306	0					
ANR	1261591	PtrMemberAccess	type -> restrictions -> pattern		1261306	1					
ANR	1261592	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261593	Identifier	type		1261306	0					
ANR	1261594	Identifier	restrictions		1261306	1					
ANR	1261595	Identifier	pattern		1261306	1					
ANR	1261596	IfStatement	if ( type -> restrictions -> enumeration )		1261306	11					
ANR	1261597	Condition	type -> restrictions -> enumeration	2470:6:78392:78422	1261306	0	True				
ANR	1261598	PtrMemberAccess	type -> restrictions -> enumeration		1261306	0					
ANR	1261599	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261600	Identifier	type		1261306	0					
ANR	1261601	Identifier	restrictions		1261306	1					
ANR	1261602	Identifier	enumeration		1261306	1					
ANR	1261603	CompoundStatement		38:39:1352:1352	1261306	1					
ANR	1261604	ExpressionStatement	zend_hash_destroy ( type -> restrictions -> enumeration )	2471:3:78430:78480	1261306	0	True				
ANR	1261605	CallExpression	zend_hash_destroy ( type -> restrictions -> enumeration )		1261306	0					
ANR	1261606	Callee	zend_hash_destroy		1261306	0					
ANR	1261607	Identifier	zend_hash_destroy		1261306	0					
ANR	1261608	ArgumentList	type -> restrictions -> enumeration		1261306	1					
ANR	1261609	Argument	type -> restrictions -> enumeration		1261306	0					
ANR	1261610	PtrMemberAccess	type -> restrictions -> enumeration		1261306	0					
ANR	1261611	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261612	Identifier	type		1261306	0					
ANR	1261613	Identifier	restrictions		1261306	1					
ANR	1261614	Identifier	enumeration		1261306	1					
ANR	1261615	ExpressionStatement	free ( type -> restrictions -> enumeration )	2472:3:78485:78522	1261306	1	True				
ANR	1261616	CallExpression	free ( type -> restrictions -> enumeration )		1261306	0					
ANR	1261617	Callee	free		1261306	0					
ANR	1261618	Identifier	free		1261306	0					
ANR	1261619	ArgumentList	type -> restrictions -> enumeration		1261306	1					
ANR	1261620	Argument	type -> restrictions -> enumeration		1261306	0					
ANR	1261621	PtrMemberAccess	type -> restrictions -> enumeration		1261306	0					
ANR	1261622	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261623	Identifier	type		1261306	0					
ANR	1261624	Identifier	restrictions		1261306	1					
ANR	1261625	Identifier	enumeration		1261306	1					
ANR	1261626	ExpressionStatement	free ( type -> restrictions )	2474:2:78530:78554	1261306	12	True				
ANR	1261627	CallExpression	free ( type -> restrictions )		1261306	0					
ANR	1261628	Callee	free		1261306	0					
ANR	1261629	Identifier	free		1261306	0					
ANR	1261630	ArgumentList	type -> restrictions		1261306	1					
ANR	1261631	Argument	type -> restrictions		1261306	0					
ANR	1261632	PtrMemberAccess	type -> restrictions		1261306	0					
ANR	1261633	Identifier	type		1261306	0					
ANR	1261634	Identifier	restrictions		1261306	1					
ANR	1261635	ExpressionStatement	free ( type )	2476:1:78560:78570	1261306	9	True				
ANR	1261636	CallExpression	free ( type )		1261306	0					
ANR	1261637	Callee	free		1261306	0					
ANR	1261638	Identifier	free		1261306	0					
ANR	1261639	ArgumentList	type		1261306	1					
ANR	1261640	Argument	type		1261306	0					
ANR	1261641	Identifier	type		1261306	0					
ANR	1261642	ReturnType	void		1261306	1					
ANR	1261643	Identifier	delete_type_persistent		1261306	2					
ANR	1261644	ParameterList	void * data		1261306	3					
ANR	1261645	Parameter	void * data	2432:28:77060:77069	1261306	0	True				
ANR	1261646	ParameterType	void *		1261306	0					
ANR	1261647	Identifier	data		1261306	1					
ANR	1261648	CFGEntryNode	ENTRY		1261306		True				
ANR	1261649	CFGExitNode	EXIT		1261306		True				
ANR	1261650	Symbol	data		1261306						
ANR	1261651	Symbol	type -> fixed		1261306						
ANR	1261652	Symbol	& type -> restrictions -> maxExclusive		1261306						
ANR	1261653	Symbol	* ( ( sdlTypePtr * ) data )		1261306						
ANR	1261654	Symbol	type		1261306						
ANR	1261655	Symbol	& type -> restrictions -> totalDigits		1261306						
ANR	1261656	Symbol	& type -> restrictions -> whiteSpace		1261306						
ANR	1261657	Symbol	type -> attributes		1261306						
ANR	1261658	Symbol	& type -> restrictions -> minInclusive		1261306						
ANR	1261659	Symbol	* type		1261306						
ANR	1261660	Symbol	type -> def		1261306						
ANR	1261661	Symbol	& type -> restrictions -> maxLength		1261306						
ANR	1261662	Symbol	type -> namens		1261306						
ANR	1261663	Symbol	& type -> restrictions -> fractionDigits		1261306						
ANR	1261664	Symbol	type -> elements		1261306						
ANR	1261665	Symbol	type -> name		1261306						
ANR	1261666	Symbol	& type -> restrictions -> minLength		1261306						
ANR	1261667	Symbol	* type -> restrictions		1261306						
ANR	1261668	Symbol	type -> model		1261306						
ANR	1261669	Symbol	type -> restrictions -> enumeration		1261306						
ANR	1261670	Symbol	& type -> restrictions -> pattern		1261306						
ANR	1261671	Symbol	type -> restrictions		1261306						
ANR	1261672	Symbol	& type -> model		1261306						
ANR	1261673	Symbol	& type -> restrictions -> maxInclusive		1261306						
ANR	1261674	Symbol	* * type		1261306						
ANR	1261675	Symbol	* data		1261306						
ANR	1261676	Symbol	& type -> restrictions -> minExclusive		1261306						
ANR	1261677	Symbol	& type -> restrictions -> length		1261306						
ANR	1261678	Function	delete_extra_attribute	2479:0:78575:78783							
ANR	1261679	FunctionDef	delete_extra_attribute (void * attribute)		1261678	0					
ANR	1261680	CompoundStatement		2480:0:78620:78783	1261678	0					
ANR	1261681	IdentifierDeclStatement	sdlExtraAttributePtr attr = * ( ( sdlExtraAttributePtr * ) attribute ) ;	2481:1:78623:78686	1261678	0	True				
ANR	1261682	IdentifierDecl	attr = * ( ( sdlExtraAttributePtr * ) attribute )		1261678	0					
ANR	1261683	IdentifierDeclType	sdlExtraAttributePtr		1261678	0					
ANR	1261684	Identifier	attr		1261678	1					
ANR	1261685	AssignmentExpression	attr = * ( ( sdlExtraAttributePtr * ) attribute )		1261678	2		=			
ANR	1261686	Identifier	attr		1261678	0					
ANR	1261687	UnaryOperationExpression	* ( ( sdlExtraAttributePtr * ) attribute )		1261678	1					
ANR	1261688	UnaryOperator	*		1261678	0					
ANR	1261689	CastExpression	( sdlExtraAttributePtr * ) attribute		1261678	1					
ANR	1261690	CastTarget	sdlExtraAttributePtr *		1261678	0					
ANR	1261691	Identifier	attribute		1261678	1					
ANR	1261692	IfStatement	if ( attr -> ns )		1261678	1					
ANR	1261693	Condition	attr -> ns	2483:5:78694:78701	1261678	0	True				
ANR	1261694	PtrMemberAccess	attr -> ns		1261678	0					
ANR	1261695	Identifier	attr		1261678	0					
ANR	1261696	Identifier	ns		1261678	1					
ANR	1261697	CompoundStatement		4:15:83:83	1261678	1					
ANR	1261698	ExpressionStatement	efree ( attr -> ns )	2484:2:78708:78723	1261678	0	True				
ANR	1261699	CallExpression	efree ( attr -> ns )		1261678	0					
ANR	1261700	Callee	efree		1261678	0					
ANR	1261701	Identifier	efree		1261678	0					
ANR	1261702	ArgumentList	attr -> ns		1261678	1					
ANR	1261703	Argument	attr -> ns		1261678	0					
ANR	1261704	PtrMemberAccess	attr -> ns		1261678	0					
ANR	1261705	Identifier	attr		1261678	0					
ANR	1261706	Identifier	ns		1261678	1					
ANR	1261707	IfStatement	if ( attr -> val )		1261678	2					
ANR	1261708	Condition	attr -> val	2486:5:78733:78741	1261678	0	True				
ANR	1261709	PtrMemberAccess	attr -> val		1261678	0					
ANR	1261710	Identifier	attr		1261678	0					
ANR	1261711	Identifier	val		1261678	1					
ANR	1261712	CompoundStatement		7:16:123:123	1261678	1					
ANR	1261713	ExpressionStatement	efree ( attr -> val )	2487:2:78748:78764	1261678	0	True				
ANR	1261714	CallExpression	efree ( attr -> val )		1261678	0					
ANR	1261715	Callee	efree		1261678	0					
ANR	1261716	Identifier	efree		1261678	0					
ANR	1261717	ArgumentList	attr -> val		1261678	1					
ANR	1261718	Argument	attr -> val		1261678	0					
ANR	1261719	PtrMemberAccess	attr -> val		1261678	0					
ANR	1261720	Identifier	attr		1261678	0					
ANR	1261721	Identifier	val		1261678	1					
ANR	1261722	ExpressionStatement	efree ( attr )	2489:1:78770:78781	1261678	3	True				
ANR	1261723	CallExpression	efree ( attr )		1261678	0					
ANR	1261724	Callee	efree		1261678	0					
ANR	1261725	Identifier	efree		1261678	0					
ANR	1261726	ArgumentList	attr		1261678	1					
ANR	1261727	Argument	attr		1261678	0					
ANR	1261728	Identifier	attr		1261678	0					
ANR	1261729	ReturnType	void		1261678	1					
ANR	1261730	Identifier	delete_extra_attribute		1261678	2					
ANR	1261731	ParameterList	void * attribute		1261678	3					
ANR	1261732	Parameter	void * attribute	2479:28:78603:78617	1261678	0	True				
ANR	1261733	ParameterType	void *		1261678	0					
ANR	1261734	Identifier	attribute		1261678	1					
ANR	1261735	CFGEntryNode	ENTRY		1261678		True				
ANR	1261736	CFGExitNode	EXIT		1261678		True				
ANR	1261737	Symbol	attr -> ns		1261678						
ANR	1261738	Symbol	attr -> val		1261678						
ANR	1261739	Symbol	* ( ( sdlExtraAttributePtr * ) attribute )		1261678						
ANR	1261740	Symbol	attribute		1261678						
ANR	1261741	Symbol	* attr		1261678						
ANR	1261742	Symbol	attr		1261678						
ANR	1261743	Symbol	* attribute		1261678						
ANR	1261744	Function	delete_extra_attribute_persistent	2492:0:78786:79002							
ANR	1261745	FunctionDef	delete_extra_attribute_persistent (void * attribute)		1261744	0					
ANR	1261746	CompoundStatement		2493:0:78842:79002	1261744	0					
ANR	1261747	IdentifierDeclStatement	sdlExtraAttributePtr attr = * ( ( sdlExtraAttributePtr * ) attribute ) ;	2494:1:78845:78908	1261744	0	True				
ANR	1261748	IdentifierDecl	attr = * ( ( sdlExtraAttributePtr * ) attribute )		1261744	0					
ANR	1261749	IdentifierDeclType	sdlExtraAttributePtr		1261744	0					
ANR	1261750	Identifier	attr		1261744	1					
ANR	1261751	AssignmentExpression	attr = * ( ( sdlExtraAttributePtr * ) attribute )		1261744	2		=			
ANR	1261752	Identifier	attr		1261744	0					
ANR	1261753	UnaryOperationExpression	* ( ( sdlExtraAttributePtr * ) attribute )		1261744	1					
ANR	1261754	UnaryOperator	*		1261744	0					
ANR	1261755	CastExpression	( sdlExtraAttributePtr * ) attribute		1261744	1					
ANR	1261756	CastTarget	sdlExtraAttributePtr *		1261744	0					
ANR	1261757	Identifier	attribute		1261744	1					
ANR	1261758	IfStatement	if ( attr -> ns )		1261744	1					
ANR	1261759	Condition	attr -> ns	2496:5:78916:78923	1261744	0	True				
ANR	1261760	PtrMemberAccess	attr -> ns		1261744	0					
ANR	1261761	Identifier	attr		1261744	0					
ANR	1261762	Identifier	ns		1261744	1					
ANR	1261763	CompoundStatement		4:15:83:83	1261744	1					
ANR	1261764	ExpressionStatement	free ( attr -> ns )	2497:2:78930:78944	1261744	0	True				
ANR	1261765	CallExpression	free ( attr -> ns )		1261744	0					
ANR	1261766	Callee	free		1261744	0					
ANR	1261767	Identifier	free		1261744	0					
ANR	1261768	ArgumentList	attr -> ns		1261744	1					
ANR	1261769	Argument	attr -> ns		1261744	0					
ANR	1261770	PtrMemberAccess	attr -> ns		1261744	0					
ANR	1261771	Identifier	attr		1261744	0					
ANR	1261772	Identifier	ns		1261744	1					
ANR	1261773	IfStatement	if ( attr -> val )		1261744	2					
ANR	1261774	Condition	attr -> val	2499:5:78954:78962	1261744	0	True				
ANR	1261775	PtrMemberAccess	attr -> val		1261744	0					
ANR	1261776	Identifier	attr		1261744	0					
ANR	1261777	Identifier	val		1261744	1					
ANR	1261778	CompoundStatement		7:16:122:122	1261744	1					
ANR	1261779	ExpressionStatement	free ( attr -> val )	2500:2:78969:78984	1261744	0	True				
ANR	1261780	CallExpression	free ( attr -> val )		1261744	0					
ANR	1261781	Callee	free		1261744	0					
ANR	1261782	Identifier	free		1261744	0					
ANR	1261783	ArgumentList	attr -> val		1261744	1					
ANR	1261784	Argument	attr -> val		1261744	0					
ANR	1261785	PtrMemberAccess	attr -> val		1261744	0					
ANR	1261786	Identifier	attr		1261744	0					
ANR	1261787	Identifier	val		1261744	1					
ANR	1261788	ExpressionStatement	free ( attr )	2502:1:78990:79000	1261744	3	True				
ANR	1261789	CallExpression	free ( attr )		1261744	0					
ANR	1261790	Callee	free		1261744	0					
ANR	1261791	Identifier	free		1261744	0					
ANR	1261792	ArgumentList	attr		1261744	1					
ANR	1261793	Argument	attr		1261744	0					
ANR	1261794	Identifier	attr		1261744	0					
ANR	1261795	ReturnType	void		1261744	1					
ANR	1261796	Identifier	delete_extra_attribute_persistent		1261744	2					
ANR	1261797	ParameterList	void * attribute		1261744	3					
ANR	1261798	Parameter	void * attribute	2492:39:78825:78839	1261744	0	True				
ANR	1261799	ParameterType	void *		1261744	0					
ANR	1261800	Identifier	attribute		1261744	1					
ANR	1261801	CFGEntryNode	ENTRY		1261744		True				
ANR	1261802	CFGExitNode	EXIT		1261744		True				
ANR	1261803	Symbol	attr -> ns		1261744						
ANR	1261804	Symbol	attr -> val		1261744						
ANR	1261805	Symbol	* ( ( sdlExtraAttributePtr * ) attribute )		1261744						
ANR	1261806	Symbol	attribute		1261744						
ANR	1261807	Symbol	* attr		1261744						
ANR	1261808	Symbol	attr		1261744						
ANR	1261809	Symbol	* attribute		1261744						
ANR	1261810	Function	delete_attribute	2505:0:79005:79443							
ANR	1261811	FunctionDef	delete_attribute (void * attribute)		1261810	0					
ANR	1261812	CompoundStatement		2506:0:79044:79443	1261810	0					
ANR	1261813	IdentifierDeclStatement	sdlAttributePtr attr = * ( ( sdlAttributePtr * ) attribute ) ;	2507:1:79047:79100	1261810	0	True				
ANR	1261814	IdentifierDecl	attr = * ( ( sdlAttributePtr * ) attribute )		1261810	0					
ANR	1261815	IdentifierDeclType	sdlAttributePtr		1261810	0					
ANR	1261816	Identifier	attr		1261810	1					
ANR	1261817	AssignmentExpression	attr = * ( ( sdlAttributePtr * ) attribute )		1261810	2		=			
ANR	1261818	Identifier	attr		1261810	0					
ANR	1261819	UnaryOperationExpression	* ( ( sdlAttributePtr * ) attribute )		1261810	1					
ANR	1261820	UnaryOperator	*		1261810	0					
ANR	1261821	CastExpression	( sdlAttributePtr * ) attribute		1261810	1					
ANR	1261822	CastTarget	sdlAttributePtr *		1261810	0					
ANR	1261823	Identifier	attribute		1261810	1					
ANR	1261824	IfStatement	if ( attr -> def )		1261810	1					
ANR	1261825	Condition	attr -> def	2509:5:79108:79116	1261810	0	True				
ANR	1261826	PtrMemberAccess	attr -> def		1261810	0					
ANR	1261827	Identifier	attr		1261810	0					
ANR	1261828	Identifier	def		1261810	1					
ANR	1261829	CompoundStatement		4:16:74:74	1261810	1					
ANR	1261830	ExpressionStatement	efree ( attr -> def )	2510:2:79123:79139	1261810	0	True				
ANR	1261831	CallExpression	efree ( attr -> def )		1261810	0					
ANR	1261832	Callee	efree		1261810	0					
ANR	1261833	Identifier	efree		1261810	0					
ANR	1261834	ArgumentList	attr -> def		1261810	1					
ANR	1261835	Argument	attr -> def		1261810	0					
ANR	1261836	PtrMemberAccess	attr -> def		1261810	0					
ANR	1261837	Identifier	attr		1261810	0					
ANR	1261838	Identifier	def		1261810	1					
ANR	1261839	IfStatement	if ( attr -> fixed )		1261810	2					
ANR	1261840	Condition	attr -> fixed	2512:5:79149:79159	1261810	0	True				
ANR	1261841	PtrMemberAccess	attr -> fixed		1261810	0					
ANR	1261842	Identifier	attr		1261810	0					
ANR	1261843	Identifier	fixed		1261810	1					
ANR	1261844	CompoundStatement		7:18:117:117	1261810	1					
ANR	1261845	ExpressionStatement	efree ( attr -> fixed )	2513:2:79166:79184	1261810	0	True				
ANR	1261846	CallExpression	efree ( attr -> fixed )		1261810	0					
ANR	1261847	Callee	efree		1261810	0					
ANR	1261848	Identifier	efree		1261810	0					
ANR	1261849	ArgumentList	attr -> fixed		1261810	1					
ANR	1261850	Argument	attr -> fixed		1261810	0					
ANR	1261851	PtrMemberAccess	attr -> fixed		1261810	0					
ANR	1261852	Identifier	attr		1261810	0					
ANR	1261853	Identifier	fixed		1261810	1					
ANR	1261854	IfStatement	if ( attr -> name )		1261810	3					
ANR	1261855	Condition	attr -> name	2515:5:79194:79203	1261810	0	True				
ANR	1261856	PtrMemberAccess	attr -> name		1261810	0					
ANR	1261857	Identifier	attr		1261810	0					
ANR	1261858	Identifier	name		1261810	1					
ANR	1261859	CompoundStatement		10:17:161:161	1261810	1					
ANR	1261860	ExpressionStatement	efree ( attr -> name )	2516:2:79210:79227	1261810	0	True				
ANR	1261861	CallExpression	efree ( attr -> name )		1261810	0					
ANR	1261862	Callee	efree		1261810	0					
ANR	1261863	Identifier	efree		1261810	0					
ANR	1261864	ArgumentList	attr -> name		1261810	1					
ANR	1261865	Argument	attr -> name		1261810	0					
ANR	1261866	PtrMemberAccess	attr -> name		1261810	0					
ANR	1261867	Identifier	attr		1261810	0					
ANR	1261868	Identifier	name		1261810	1					
ANR	1261869	IfStatement	if ( attr -> namens )		1261810	4					
ANR	1261870	Condition	attr -> namens	2518:5:79237:79248	1261810	0	True				
ANR	1261871	PtrMemberAccess	attr -> namens		1261810	0					
ANR	1261872	Identifier	attr		1261810	0					
ANR	1261873	Identifier	namens		1261810	1					
ANR	1261874	CompoundStatement		13:19:206:206	1261810	1					
ANR	1261875	ExpressionStatement	efree ( attr -> namens )	2519:2:79255:79274	1261810	0	True				
ANR	1261876	CallExpression	efree ( attr -> namens )		1261810	0					
ANR	1261877	Callee	efree		1261810	0					
ANR	1261878	Identifier	efree		1261810	0					
ANR	1261879	ArgumentList	attr -> namens		1261810	1					
ANR	1261880	Argument	attr -> namens		1261810	0					
ANR	1261881	PtrMemberAccess	attr -> namens		1261810	0					
ANR	1261882	Identifier	attr		1261810	0					
ANR	1261883	Identifier	namens		1261810	1					
ANR	1261884	IfStatement	if ( attr -> ref )		1261810	5					
ANR	1261885	Condition	attr -> ref	2521:5:79284:79292	1261810	0	True				
ANR	1261886	PtrMemberAccess	attr -> ref		1261810	0					
ANR	1261887	Identifier	attr		1261810	0					
ANR	1261888	Identifier	ref		1261810	1					
ANR	1261889	CompoundStatement		16:16:250:250	1261810	1					
ANR	1261890	ExpressionStatement	efree ( attr -> ref )	2522:2:79299:79315	1261810	0	True				
ANR	1261891	CallExpression	efree ( attr -> ref )		1261810	0					
ANR	1261892	Callee	efree		1261810	0					
ANR	1261893	Identifier	efree		1261810	0					
ANR	1261894	ArgumentList	attr -> ref		1261810	1					
ANR	1261895	Argument	attr -> ref		1261810	0					
ANR	1261896	PtrMemberAccess	attr -> ref		1261810	0					
ANR	1261897	Identifier	attr		1261810	0					
ANR	1261898	Identifier	ref		1261810	1					
ANR	1261899	IfStatement	if ( attr -> extraAttributes )		1261810	6					
ANR	1261900	Condition	attr -> extraAttributes	2524:5:79325:79345	1261810	0	True				
ANR	1261901	PtrMemberAccess	attr -> extraAttributes		1261810	0					
ANR	1261902	Identifier	attr		1261810	0					
ANR	1261903	Identifier	extraAttributes		1261810	1					
ANR	1261904	CompoundStatement		19:28:303:303	1261810	1					
ANR	1261905	ExpressionStatement	zend_hash_destroy ( attr -> extraAttributes )	2525:2:79352:79392	1261810	0	True				
ANR	1261906	CallExpression	zend_hash_destroy ( attr -> extraAttributes )		1261810	0					
ANR	1261907	Callee	zend_hash_destroy		1261810	0					
ANR	1261908	Identifier	zend_hash_destroy		1261810	0					
ANR	1261909	ArgumentList	attr -> extraAttributes		1261810	1					
ANR	1261910	Argument	attr -> extraAttributes		1261810	0					
ANR	1261911	PtrMemberAccess	attr -> extraAttributes		1261810	0					
ANR	1261912	Identifier	attr		1261810	0					
ANR	1261913	Identifier	extraAttributes		1261810	1					
ANR	1261914	ExpressionStatement	efree ( attr -> extraAttributes )	2526:2:79396:79424	1261810	1	True				
ANR	1261915	CallExpression	efree ( attr -> extraAttributes )		1261810	0					
ANR	1261916	Callee	efree		1261810	0					
ANR	1261917	Identifier	efree		1261810	0					
ANR	1261918	ArgumentList	attr -> extraAttributes		1261810	1					
ANR	1261919	Argument	attr -> extraAttributes		1261810	0					
ANR	1261920	PtrMemberAccess	attr -> extraAttributes		1261810	0					
ANR	1261921	Identifier	attr		1261810	0					
ANR	1261922	Identifier	extraAttributes		1261810	1					
ANR	1261923	ExpressionStatement	efree ( attr )	2528:1:79430:79441	1261810	7	True				
ANR	1261924	CallExpression	efree ( attr )		1261810	0					
ANR	1261925	Callee	efree		1261810	0					
ANR	1261926	Identifier	efree		1261810	0					
ANR	1261927	ArgumentList	attr		1261810	1					
ANR	1261928	Argument	attr		1261810	0					
ANR	1261929	Identifier	attr		1261810	0					
ANR	1261930	ReturnType	void		1261810	1					
ANR	1261931	Identifier	delete_attribute		1261810	2					
ANR	1261932	ParameterList	void * attribute		1261810	3					
ANR	1261933	Parameter	void * attribute	2505:22:79027:79041	1261810	0	True				
ANR	1261934	ParameterType	void *		1261810	0					
ANR	1261935	Identifier	attribute		1261810	1					
ANR	1261936	CFGEntryNode	ENTRY		1261810		True				
ANR	1261937	CFGExitNode	EXIT		1261810		True				
ANR	1261938	Symbol	attr -> ref		1261810						
ANR	1261939	Symbol	attr -> namens		1261810						
ANR	1261940	Symbol	* ( ( sdlAttributePtr * ) attribute )		1261810						
ANR	1261941	Symbol	attr -> def		1261810						
ANR	1261942	Symbol	attr -> name		1261810						
ANR	1261943	Symbol	attr -> extraAttributes		1261810						
ANR	1261944	Symbol	attribute		1261810						
ANR	1261945	Symbol	* attr		1261810						
ANR	1261946	Symbol	attr		1261810						
ANR	1261947	Symbol	attr -> fixed		1261810						
ANR	1261948	Symbol	* attribute		1261810						
ANR	1261949	Function	delete_attribute_persistent	2531:0:79446:79888							
ANR	1261950	FunctionDef	delete_attribute_persistent (void * attribute)		1261949	0					
ANR	1261951	CompoundStatement		2532:0:79496:79888	1261949	0					
ANR	1261952	IdentifierDeclStatement	sdlAttributePtr attr = * ( ( sdlAttributePtr * ) attribute ) ;	2533:1:79499:79552	1261949	0	True				
ANR	1261953	IdentifierDecl	attr = * ( ( sdlAttributePtr * ) attribute )		1261949	0					
ANR	1261954	IdentifierDeclType	sdlAttributePtr		1261949	0					
ANR	1261955	Identifier	attr		1261949	1					
ANR	1261956	AssignmentExpression	attr = * ( ( sdlAttributePtr * ) attribute )		1261949	2		=			
ANR	1261957	Identifier	attr		1261949	0					
ANR	1261958	UnaryOperationExpression	* ( ( sdlAttributePtr * ) attribute )		1261949	1					
ANR	1261959	UnaryOperator	*		1261949	0					
ANR	1261960	CastExpression	( sdlAttributePtr * ) attribute		1261949	1					
ANR	1261961	CastTarget	sdlAttributePtr *		1261949	0					
ANR	1261962	Identifier	attribute		1261949	1					
ANR	1261963	IfStatement	if ( attr -> def )		1261949	1					
ANR	1261964	Condition	attr -> def	2535:5:79560:79568	1261949	0	True				
ANR	1261965	PtrMemberAccess	attr -> def		1261949	0					
ANR	1261966	Identifier	attr		1261949	0					
ANR	1261967	Identifier	def		1261949	1					
ANR	1261968	CompoundStatement		4:16:74:74	1261949	1					
ANR	1261969	ExpressionStatement	free ( attr -> def )	2536:2:79575:79590	1261949	0	True				
ANR	1261970	CallExpression	free ( attr -> def )		1261949	0					
ANR	1261971	Callee	free		1261949	0					
ANR	1261972	Identifier	free		1261949	0					
ANR	1261973	ArgumentList	attr -> def		1261949	1					
ANR	1261974	Argument	attr -> def		1261949	0					
ANR	1261975	PtrMemberAccess	attr -> def		1261949	0					
ANR	1261976	Identifier	attr		1261949	0					
ANR	1261977	Identifier	def		1261949	1					
ANR	1261978	IfStatement	if ( attr -> fixed )		1261949	2					
ANR	1261979	Condition	attr -> fixed	2538:5:79600:79610	1261949	0	True				
ANR	1261980	PtrMemberAccess	attr -> fixed		1261949	0					
ANR	1261981	Identifier	attr		1261949	0					
ANR	1261982	Identifier	fixed		1261949	1					
ANR	1261983	CompoundStatement		7:18:116:116	1261949	1					
ANR	1261984	ExpressionStatement	free ( attr -> fixed )	2539:2:79617:79634	1261949	0	True				
ANR	1261985	CallExpression	free ( attr -> fixed )		1261949	0					
ANR	1261986	Callee	free		1261949	0					
ANR	1261987	Identifier	free		1261949	0					
ANR	1261988	ArgumentList	attr -> fixed		1261949	1					
ANR	1261989	Argument	attr -> fixed		1261949	0					
ANR	1261990	PtrMemberAccess	attr -> fixed		1261949	0					
ANR	1261991	Identifier	attr		1261949	0					
ANR	1261992	Identifier	fixed		1261949	1					
ANR	1261993	IfStatement	if ( attr -> name )		1261949	3					
ANR	1261994	Condition	attr -> name	2541:5:79644:79653	1261949	0	True				
ANR	1261995	PtrMemberAccess	attr -> name		1261949	0					
ANR	1261996	Identifier	attr		1261949	0					
ANR	1261997	Identifier	name		1261949	1					
ANR	1261998	CompoundStatement		10:17:159:159	1261949	1					
ANR	1261999	ExpressionStatement	free ( attr -> name )	2542:2:79660:79676	1261949	0	True				
ANR	1262000	CallExpression	free ( attr -> name )		1261949	0					
ANR	1262001	Callee	free		1261949	0					
ANR	1262002	Identifier	free		1261949	0					
ANR	1262003	ArgumentList	attr -> name		1261949	1					
ANR	1262004	Argument	attr -> name		1261949	0					
ANR	1262005	PtrMemberAccess	attr -> name		1261949	0					
ANR	1262006	Identifier	attr		1261949	0					
ANR	1262007	Identifier	name		1261949	1					
ANR	1262008	IfStatement	if ( attr -> namens )		1261949	4					
ANR	1262009	Condition	attr -> namens	2544:5:79686:79697	1261949	0	True				
ANR	1262010	PtrMemberAccess	attr -> namens		1261949	0					
ANR	1262011	Identifier	attr		1261949	0					
ANR	1262012	Identifier	namens		1261949	1					
ANR	1262013	CompoundStatement		13:19:203:203	1261949	1					
ANR	1262014	ExpressionStatement	free ( attr -> namens )	2545:2:79704:79722	1261949	0	True				
ANR	1262015	CallExpression	free ( attr -> namens )		1261949	0					
ANR	1262016	Callee	free		1261949	0					
ANR	1262017	Identifier	free		1261949	0					
ANR	1262018	ArgumentList	attr -> namens		1261949	1					
ANR	1262019	Argument	attr -> namens		1261949	0					
ANR	1262020	PtrMemberAccess	attr -> namens		1261949	0					
ANR	1262021	Identifier	attr		1261949	0					
ANR	1262022	Identifier	namens		1261949	1					
ANR	1262023	IfStatement	if ( attr -> ref )		1261949	5					
ANR	1262024	Condition	attr -> ref	2547:5:79732:79740	1261949	0	True				
ANR	1262025	PtrMemberAccess	attr -> ref		1261949	0					
ANR	1262026	Identifier	attr		1261949	0					
ANR	1262027	Identifier	ref		1261949	1					
ANR	1262028	CompoundStatement		16:16:246:246	1261949	1					
ANR	1262029	ExpressionStatement	free ( attr -> ref )	2548:2:79747:79762	1261949	0	True				
ANR	1262030	CallExpression	free ( attr -> ref )		1261949	0					
ANR	1262031	Callee	free		1261949	0					
ANR	1262032	Identifier	free		1261949	0					
ANR	1262033	ArgumentList	attr -> ref		1261949	1					
ANR	1262034	Argument	attr -> ref		1261949	0					
ANR	1262035	PtrMemberAccess	attr -> ref		1261949	0					
ANR	1262036	Identifier	attr		1261949	0					
ANR	1262037	Identifier	ref		1261949	1					
ANR	1262038	IfStatement	if ( attr -> extraAttributes )		1261949	6					
ANR	1262039	Condition	attr -> extraAttributes	2550:5:79772:79792	1261949	0	True				
ANR	1262040	PtrMemberAccess	attr -> extraAttributes		1261949	0					
ANR	1262041	Identifier	attr		1261949	0					
ANR	1262042	Identifier	extraAttributes		1261949	1					
ANR	1262043	CompoundStatement		19:28:298:298	1261949	1					
ANR	1262044	ExpressionStatement	zend_hash_destroy ( attr -> extraAttributes )	2551:2:79799:79839	1261949	0	True				
ANR	1262045	CallExpression	zend_hash_destroy ( attr -> extraAttributes )		1261949	0					
ANR	1262046	Callee	zend_hash_destroy		1261949	0					
ANR	1262047	Identifier	zend_hash_destroy		1261949	0					
ANR	1262048	ArgumentList	attr -> extraAttributes		1261949	1					
ANR	1262049	Argument	attr -> extraAttributes		1261949	0					
ANR	1262050	PtrMemberAccess	attr -> extraAttributes		1261949	0					
ANR	1262051	Identifier	attr		1261949	0					
ANR	1262052	Identifier	extraAttributes		1261949	1					
ANR	1262053	ExpressionStatement	free ( attr -> extraAttributes )	2552:2:79843:79870	1261949	1	True				
ANR	1262054	CallExpression	free ( attr -> extraAttributes )		1261949	0					
ANR	1262055	Callee	free		1261949	0					
ANR	1262056	Identifier	free		1261949	0					
ANR	1262057	ArgumentList	attr -> extraAttributes		1261949	1					
ANR	1262058	Argument	attr -> extraAttributes		1261949	0					
ANR	1262059	PtrMemberAccess	attr -> extraAttributes		1261949	0					
ANR	1262060	Identifier	attr		1261949	0					
ANR	1262061	Identifier	extraAttributes		1261949	1					
ANR	1262062	ExpressionStatement	free ( attr )	2554:1:79876:79886	1261949	7	True				
ANR	1262063	CallExpression	free ( attr )		1261949	0					
ANR	1262064	Callee	free		1261949	0					
ANR	1262065	Identifier	free		1261949	0					
ANR	1262066	ArgumentList	attr		1261949	1					
ANR	1262067	Argument	attr		1261949	0					
ANR	1262068	Identifier	attr		1261949	0					
ANR	1262069	ReturnType	void		1261949	1					
ANR	1262070	Identifier	delete_attribute_persistent		1261949	2					
ANR	1262071	ParameterList	void * attribute		1261949	3					
ANR	1262072	Parameter	void * attribute	2531:33:79479:79493	1261949	0	True				
ANR	1262073	ParameterType	void *		1261949	0					
ANR	1262074	Identifier	attribute		1261949	1					
ANR	1262075	CFGEntryNode	ENTRY		1261949		True				
ANR	1262076	CFGExitNode	EXIT		1261949		True				
ANR	1262077	Symbol	attr -> ref		1261949						
ANR	1262078	Symbol	attr -> namens		1261949						
ANR	1262079	Symbol	* ( ( sdlAttributePtr * ) attribute )		1261949						
ANR	1262080	Symbol	attr -> def		1261949						
ANR	1262081	Symbol	attr -> name		1261949						
ANR	1262082	Symbol	attr -> extraAttributes		1261949						
ANR	1262083	Symbol	attribute		1261949						
ANR	1262084	Symbol	* attr		1261949						
ANR	1262085	Symbol	attr		1261949						
ANR	1262086	Symbol	attr -> fixed		1261949						
ANR	1262087	Symbol	* attribute		1261949						
ANR	1262088	Function	delete_restriction_var_int	2557:0:79891:80024							
ANR	1262089	FunctionDef	delete_restriction_var_int (void * rvi)		1262088	0					
ANR	1262090	CompoundStatement		2558:0:79934:80024	1262088	0					
ANR	1262091	IdentifierDeclStatement	sdlRestrictionIntPtr ptr = * ( ( sdlRestrictionIntPtr * ) rvi ) ;	2559:1:79937:79993	1262088	0	True				
ANR	1262092	IdentifierDecl	ptr = * ( ( sdlRestrictionIntPtr * ) rvi )		1262088	0					
ANR	1262093	IdentifierDeclType	sdlRestrictionIntPtr		1262088	0					
ANR	1262094	Identifier	ptr		1262088	1					
ANR	1262095	AssignmentExpression	ptr = * ( ( sdlRestrictionIntPtr * ) rvi )		1262088	2		=			
ANR	1262096	Identifier	ptr		1262088	0					
ANR	1262097	UnaryOperationExpression	* ( ( sdlRestrictionIntPtr * ) rvi )		1262088	1					
ANR	1262098	UnaryOperator	*		1262088	0					
ANR	1262099	CastExpression	( sdlRestrictionIntPtr * ) rvi		1262088	1					
ANR	1262100	CastTarget	sdlRestrictionIntPtr *		1262088	0					
ANR	1262101	Identifier	rvi		1262088	1					
ANR	1262102	IfStatement	if ( ptr )		1262088	1					
ANR	1262103	Condition	ptr	2560:5:80000:80002	1262088	0	True				
ANR	1262104	Identifier	ptr		1262088	0					
ANR	1262105	CompoundStatement		3:10:70:70	1262088	1					
ANR	1262106	ExpressionStatement	efree ( ptr )	2561:2:80009:80019	1262088	0	True				
ANR	1262107	CallExpression	efree ( ptr )		1262088	0					
ANR	1262108	Callee	efree		1262088	0					
ANR	1262109	Identifier	efree		1262088	0					
ANR	1262110	ArgumentList	ptr		1262088	1					
ANR	1262111	Argument	ptr		1262088	0					
ANR	1262112	Identifier	ptr		1262088	0					
ANR	1262113	ReturnType	void		1262088	1					
ANR	1262114	Identifier	delete_restriction_var_int		1262088	2					
ANR	1262115	ParameterList	void * rvi		1262088	3					
ANR	1262116	Parameter	void * rvi	2557:32:79923:79931	1262088	0	True				
ANR	1262117	ParameterType	void *		1262088	0					
ANR	1262118	Identifier	rvi		1262088	1					
ANR	1262119	CFGEntryNode	ENTRY		1262088		True				
ANR	1262120	CFGExitNode	EXIT		1262088		True				
ANR	1262121	Symbol	* ( ( sdlRestrictionIntPtr * ) rvi )		1262088						
ANR	1262122	Symbol	rvi		1262088						
ANR	1262123	Symbol	ptr		1262088						
ANR	1262124	Symbol	* rvi		1262088						
ANR	1262125	Function	delete_restriction_var_int_persistent	2565:0:80027:80170							
ANR	1262126	FunctionDef	delete_restriction_var_int_persistent (void * rvi)		1262125	0					
ANR	1262127	CompoundStatement		2566:0:80081:80170	1262125	0					
ANR	1262128	IdentifierDeclStatement	sdlRestrictionIntPtr ptr = * ( ( sdlRestrictionIntPtr * ) rvi ) ;	2567:1:80084:80140	1262125	0	True				
ANR	1262129	IdentifierDecl	ptr = * ( ( sdlRestrictionIntPtr * ) rvi )		1262125	0					
ANR	1262130	IdentifierDeclType	sdlRestrictionIntPtr		1262125	0					
ANR	1262131	Identifier	ptr		1262125	1					
ANR	1262132	AssignmentExpression	ptr = * ( ( sdlRestrictionIntPtr * ) rvi )		1262125	2		=			
ANR	1262133	Identifier	ptr		1262125	0					
ANR	1262134	UnaryOperationExpression	* ( ( sdlRestrictionIntPtr * ) rvi )		1262125	1					
ANR	1262135	UnaryOperator	*		1262125	0					
ANR	1262136	CastExpression	( sdlRestrictionIntPtr * ) rvi		1262125	1					
ANR	1262137	CastTarget	sdlRestrictionIntPtr *		1262125	0					
ANR	1262138	Identifier	rvi		1262125	1					
ANR	1262139	IfStatement	if ( ptr )		1262125	1					
ANR	1262140	Condition	ptr	2568:5:80147:80149	1262125	0	True				
ANR	1262141	Identifier	ptr		1262125	0					
ANR	1262142	CompoundStatement		3:10:70:70	1262125	1					
ANR	1262143	ExpressionStatement	free ( ptr )	2569:2:80156:80165	1262125	0	True				
ANR	1262144	CallExpression	free ( ptr )		1262125	0					
ANR	1262145	Callee	free		1262125	0					
ANR	1262146	Identifier	free		1262125	0					
ANR	1262147	ArgumentList	ptr		1262125	1					
ANR	1262148	Argument	ptr		1262125	0					
ANR	1262149	Identifier	ptr		1262125	0					
ANR	1262150	ReturnType	void		1262125	1					
ANR	1262151	Identifier	delete_restriction_var_int_persistent		1262125	2					
ANR	1262152	ParameterList	void * rvi		1262125	3					
ANR	1262153	Parameter	void * rvi	2565:43:80070:80078	1262125	0	True				
ANR	1262154	ParameterType	void *		1262125	0					
ANR	1262155	Identifier	rvi		1262125	1					
ANR	1262156	CFGEntryNode	ENTRY		1262125		True				
ANR	1262157	CFGExitNode	EXIT		1262125		True				
ANR	1262158	Symbol	* ( ( sdlRestrictionIntPtr * ) rvi )		1262125						
ANR	1262159	Symbol	rvi		1262125						
ANR	1262160	Symbol	ptr		1262125						
ANR	1262161	Symbol	* rvi		1262125						
ANR	1262162	Function	delete_restriction_var_char	2573:0:80173:80357							
ANR	1262163	FunctionDef	delete_restriction_var_char (void * srvc)		1262162	0					
ANR	1262164	CompoundStatement		2574:0:80218:80357	1262162	0					
ANR	1262165	IdentifierDeclStatement	sdlRestrictionCharPtr ptr = * ( ( sdlRestrictionCharPtr * ) srvc ) ;	2575:1:80221:80280	1262162	0	True				
ANR	1262166	IdentifierDecl	ptr = * ( ( sdlRestrictionCharPtr * ) srvc )		1262162	0					
ANR	1262167	IdentifierDeclType	sdlRestrictionCharPtr		1262162	0					
ANR	1262168	Identifier	ptr		1262162	1					
ANR	1262169	AssignmentExpression	ptr = * ( ( sdlRestrictionCharPtr * ) srvc )		1262162	2		=			
ANR	1262170	Identifier	ptr		1262162	0					
ANR	1262171	UnaryOperationExpression	* ( ( sdlRestrictionCharPtr * ) srvc )		1262162	1					
ANR	1262172	UnaryOperator	*		1262162	0					
ANR	1262173	CastExpression	( sdlRestrictionCharPtr * ) srvc		1262162	1					
ANR	1262174	CastTarget	sdlRestrictionCharPtr *		1262162	0					
ANR	1262175	Identifier	srvc		1262162	1					
ANR	1262176	IfStatement	if ( ptr )		1262162	1					
ANR	1262177	Condition	ptr	2576:5:80287:80289	1262162	0	True				
ANR	1262178	Identifier	ptr		1262162	0					
ANR	1262179	CompoundStatement		3:10:73:73	1262162	1					
ANR	1262180	IfStatement	if ( ptr -> value )		1262162	0					
ANR	1262181	Condition	ptr -> value	2577:6:80300:80309	1262162	0	True				
ANR	1262182	PtrMemberAccess	ptr -> value		1262162	0					
ANR	1262183	Identifier	ptr		1262162	0					
ANR	1262184	Identifier	value		1262162	1					
ANR	1262185	CompoundStatement		4:18:93:93	1262162	1					
ANR	1262186	ExpressionStatement	efree ( ptr -> value )	2578:3:80317:80334	1262162	0	True				
ANR	1262187	CallExpression	efree ( ptr -> value )		1262162	0					
ANR	1262188	Callee	efree		1262162	0					
ANR	1262189	Identifier	efree		1262162	0					
ANR	1262190	ArgumentList	ptr -> value		1262162	1					
ANR	1262191	Argument	ptr -> value		1262162	0					
ANR	1262192	PtrMemberAccess	ptr -> value		1262162	0					
ANR	1262193	Identifier	ptr		1262162	0					
ANR	1262194	Identifier	value		1262162	1					
ANR	1262195	ExpressionStatement	efree ( ptr )	2580:2:80342:80352	1262162	1	True				
ANR	1262196	CallExpression	efree ( ptr )		1262162	0					
ANR	1262197	Callee	efree		1262162	0					
ANR	1262198	Identifier	efree		1262162	0					
ANR	1262199	ArgumentList	ptr		1262162	1					
ANR	1262200	Argument	ptr		1262162	0					
ANR	1262201	Identifier	ptr		1262162	0					
ANR	1262202	ReturnType	void		1262162	1					
ANR	1262203	Identifier	delete_restriction_var_char		1262162	2					
ANR	1262204	ParameterList	void * srvc		1262162	3					
ANR	1262205	Parameter	void * srvc	2573:33:80206:80215	1262162	0	True				
ANR	1262206	ParameterType	void *		1262162	0					
ANR	1262207	Identifier	srvc		1262162	1					
ANR	1262208	CFGEntryNode	ENTRY		1262162		True				
ANR	1262209	CFGExitNode	EXIT		1262162		True				
ANR	1262210	Symbol	* srvc		1262162						
ANR	1262211	Symbol	* ptr		1262162						
ANR	1262212	Symbol	* ( ( sdlRestrictionCharPtr * ) srvc )		1262162						
ANR	1262213	Symbol	srvc		1262162						
ANR	1262214	Symbol	ptr -> value		1262162						
ANR	1262215	Symbol	ptr		1262162						
ANR	1262216	Function	delete_restriction_var_char_persistent	2584:0:80360:80553							
ANR	1262217	FunctionDef	delete_restriction_var_char_persistent (void * srvc)		1262216	0					
ANR	1262218	CompoundStatement		2585:0:80416:80553	1262216	0					
ANR	1262219	IdentifierDeclStatement	sdlRestrictionCharPtr ptr = * ( ( sdlRestrictionCharPtr * ) srvc ) ;	2586:1:80419:80478	1262216	0	True				
ANR	1262220	IdentifierDecl	ptr = * ( ( sdlRestrictionCharPtr * ) srvc )		1262216	0					
ANR	1262221	IdentifierDeclType	sdlRestrictionCharPtr		1262216	0					
ANR	1262222	Identifier	ptr		1262216	1					
ANR	1262223	AssignmentExpression	ptr = * ( ( sdlRestrictionCharPtr * ) srvc )		1262216	2		=			
ANR	1262224	Identifier	ptr		1262216	0					
ANR	1262225	UnaryOperationExpression	* ( ( sdlRestrictionCharPtr * ) srvc )		1262216	1					
ANR	1262226	UnaryOperator	*		1262216	0					
ANR	1262227	CastExpression	( sdlRestrictionCharPtr * ) srvc		1262216	1					
ANR	1262228	CastTarget	sdlRestrictionCharPtr *		1262216	0					
ANR	1262229	Identifier	srvc		1262216	1					
ANR	1262230	IfStatement	if ( ptr )		1262216	1					
ANR	1262231	Condition	ptr	2587:5:80485:80487	1262216	0	True				
ANR	1262232	Identifier	ptr		1262216	0					
ANR	1262233	CompoundStatement		3:10:73:73	1262216	1					
ANR	1262234	IfStatement	if ( ptr -> value )		1262216	0					
ANR	1262235	Condition	ptr -> value	2588:6:80498:80507	1262216	0	True				
ANR	1262236	PtrMemberAccess	ptr -> value		1262216	0					
ANR	1262237	Identifier	ptr		1262216	0					
ANR	1262238	Identifier	value		1262216	1					
ANR	1262239	CompoundStatement		4:18:93:93	1262216	1					
ANR	1262240	ExpressionStatement	free ( ptr -> value )	2589:3:80515:80531	1262216	0	True				
ANR	1262241	CallExpression	free ( ptr -> value )		1262216	0					
ANR	1262242	Callee	free		1262216	0					
ANR	1262243	Identifier	free		1262216	0					
ANR	1262244	ArgumentList	ptr -> value		1262216	1					
ANR	1262245	Argument	ptr -> value		1262216	0					
ANR	1262246	PtrMemberAccess	ptr -> value		1262216	0					
ANR	1262247	Identifier	ptr		1262216	0					
ANR	1262248	Identifier	value		1262216	1					
ANR	1262249	ExpressionStatement	free ( ptr )	2591:2:80539:80548	1262216	1	True				
ANR	1262250	CallExpression	free ( ptr )		1262216	0					
ANR	1262251	Callee	free		1262216	0					
ANR	1262252	Identifier	free		1262216	0					
ANR	1262253	ArgumentList	ptr		1262216	1					
ANR	1262254	Argument	ptr		1262216	0					
ANR	1262255	Identifier	ptr		1262216	0					
ANR	1262256	ReturnType	void		1262216	1					
ANR	1262257	Identifier	delete_restriction_var_char_persistent		1262216	2					
ANR	1262258	ParameterList	void * srvc		1262216	3					
ANR	1262259	Parameter	void * srvc	2584:44:80404:80413	1262216	0	True				
ANR	1262260	ParameterType	void *		1262216	0					
ANR	1262261	Identifier	srvc		1262216	1					
ANR	1262262	CFGEntryNode	ENTRY		1262216		True				
ANR	1262263	CFGExitNode	EXIT		1262216		True				
ANR	1262264	Symbol	* srvc		1262216						
ANR	1262265	Symbol	* ptr		1262216						
ANR	1262266	Symbol	* ( ( sdlRestrictionCharPtr * ) srvc )		1262216						
ANR	1262267	Symbol	srvc		1262216						
ANR	1262268	Symbol	ptr -> value		1262216						
ANR	1262269	Symbol	ptr		1262216						
