command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	529951	File	data/converged/CVE-2017-11142_php-src/ext_imap_php_imap.c								
ANR	529952	DeclStmt									
ANR	529953	Decl							MAILSTREAM	MAILSTREAM	DEFAULTPROTO
ANR	529954	DeclStmt									
ANR	529955	Decl							char	"char * ( readfn_t f , void * stream , unsigned long size , GETS_DATA * md )"	php_mail_gets
ANR	529956	DeclStmt									
ANR	529957	Decl							void	void ( char * date )	rfc822_date
ANR	529958	DeclStmt									
ANR	529959	Decl							char	char * ( const char * str )	cpystr
ANR	529960	DeclStmt									
ANR	529961	Decl							char	"char * ( SIZEDTEXT * dst , char * text , unsigned long size )"	cpytxt
ANR	529962	DeclStmt									
ANR	529963	Decl							long	"long ( SIZEDTEXT * src , SIZEDTEXT * dst )"	utf8_mime2text
ANR	529964	DeclStmt									
ANR	529965	Decl							long	"long ( SIZEDTEXT * src , SIZEDTEXT * dst , long flags )"	utf8_mime2text
ANR	529966	DeclStmt									
ANR	529967	Decl							unsigned long	unsigned long ( unsigned long * valptr )	find_rightmost_bit
ANR	529968	DeclStmt									
ANR	529969	Decl							void	void ( void * * block )	fs_give
ANR	529970	DeclStmt									
ANR	529971	Decl							void	void * ( size_t size )	fs_get
ANR	529972	DeclStmt									
ANR	529973	Decl							const zend_function_entry	const zend_function_entry [ ]	imap_functions
ANR	529974	DeclStmt									
ANR	529975	Decl							const zend_module_dep	const zend_module_dep [ ]	imap_deps
ANR	529976	DeclStmt									
ANR	529977	Decl							zend_module_entry	zend_module_entry	imap_module_entry
ANR	529978	DeclStmt									
ANR	529979	Decl							int	int	le_imap
ANR	529980	DeclStmt									
ANR	529981	Decl							pils	pils *	imap_le_struct
ANR	529982	DeclStmt									
ANR	529983	Decl							HashTable	HashTable *	symtable
ANR	529984	DeclStmt									
ANR	529985	Decl							HashTable	HashTable *	symtable
ANR	529986	Function	mail_newfolderobjectlist	660:0:19971:20102							
ANR	529987	FunctionDef	mail_newfolderobjectlist ()		529986	0					
ANR	529988	CompoundStatement		661:0:20015:20102	529986	0					
ANR	529989	ReturnStatement	"return ( FOBJECTLIST * ) memset ( fs_get ( sizeof ( FOBJECTLIST ) ) , 0 , sizeof ( FOBJECTLIST ) ) ;"	662:1:20018:20100	529986	0	True				
ANR	529990	CastExpression	"( FOBJECTLIST * ) memset ( fs_get ( sizeof ( FOBJECTLIST ) ) , 0 , sizeof ( FOBJECTLIST ) )"		529986	0					
ANR	529991	CastTarget	FOBJECTLIST *		529986	0					
ANR	529992	CallExpression	"memset ( fs_get ( sizeof ( FOBJECTLIST ) ) , 0 , sizeof ( FOBJECTLIST ) )"		529986	1					
ANR	529993	Callee	memset		529986	0					
ANR	529994	Identifier	memset		529986	0					
ANR	529995	ArgumentList	fs_get ( sizeof ( FOBJECTLIST ) )		529986	1					
ANR	529996	Argument	fs_get ( sizeof ( FOBJECTLIST ) )		529986	0					
ANR	529997	CallExpression	fs_get ( sizeof ( FOBJECTLIST ) )		529986	0					
ANR	529998	Callee	fs_get		529986	0					
ANR	529999	Identifier	fs_get		529986	0					
ANR	530000	ArgumentList	sizeof ( FOBJECTLIST )		529986	1					
ANR	530001	Argument	sizeof ( FOBJECTLIST )		529986	0					
ANR	530002	SizeofExpression	sizeof ( FOBJECTLIST )		529986	0					
ANR	530003	Sizeof	sizeof		529986	0					
ANR	530004	SizeofOperand	FOBJECTLIST		529986	1					
ANR	530005	Argument	0		529986	1					
ANR	530006	PrimaryExpression	0		529986	0					
ANR	530007	Argument	sizeof ( FOBJECTLIST )		529986	2					
ANR	530008	SizeofExpression	sizeof ( FOBJECTLIST )		529986	0					
ANR	530009	Sizeof	sizeof		529986	0					
ANR	530010	SizeofOperand	FOBJECTLIST		529986	1					
ANR	530011	ReturnType	FOBJECTLIST *		529986	1					
ANR	530012	Identifier	mail_newfolderobjectlist		529986	2					
ANR	530013	ParameterList			529986	3					
ANR	530014	CFGEntryNode	ENTRY		529986		True				
ANR	530015	CFGExitNode	EXIT		529986		True				
ANR	530016	Symbol	fs_get		529986						
ANR	530017	Symbol	memset		529986						
ANR	530018	Function	mail_free_foblist	672:0:20241:20533							
ANR	530019	FunctionDef	"mail_free_foblist (FOBJECTLIST * * foblist , FOBJECTLIST * * tail)"		530018	0					
ANR	530020	CompoundStatement		673:0:20307:20533	530018	0					
ANR	530021	IdentifierDeclStatement	"FOBJECTLIST * cur , * next ;"	674:1:20310:20333	530018	0	True				
ANR	530022	IdentifierDecl	* cur		530018	0					
ANR	530023	IdentifierDeclType	FOBJECTLIST *		530018	0					
ANR	530024	Identifier	cur		530018	1					
ANR	530025	IdentifierDecl	* next		530018	1					
ANR	530026	IdentifierDeclType	FOBJECTLIST *		530018	0					
ANR	530027	Identifier	next		530018	1					
ANR	530028	ForStatement	"for ( cur = * foblist , next = cur -> next ; cur ; cur = next )"		530018	1					
ANR	530029	ForInit	"cur = * foblist , next = cur -> next ;"	676:6:20342:20370	530018	0	True				
ANR	530030	Expression	"cur = * foblist , next = cur -> next"		530018	0					
ANR	530031	AssignmentExpression	cur = * foblist		530018	0		=			
ANR	530032	Identifier	cur		530018	0					
ANR	530033	UnaryOperationExpression	* foblist		530018	1					
ANR	530034	UnaryOperator	*		530018	0					
ANR	530035	Identifier	foblist		530018	1					
ANR	530036	AssignmentExpression	next = cur -> next		530018	1		=			
ANR	530037	Identifier	next		530018	0					
ANR	530038	PtrMemberAccess	cur -> next		530018	1					
ANR	530039	Identifier	cur		530018	0					
ANR	530040	Identifier	next		530018	1					
ANR	530041	Condition	cur	676:36:20372:20374	530018	1	True				
ANR	530042	Identifier	cur		530018	0					
ANR	530043	AssignmentExpression	cur = next	676:41:20377:20384	530018	2	True	=			
ANR	530044	Identifier	cur		530018	0					
ANR	530045	Identifier	next		530018	1					
ANR	530046	CompoundStatement		4:51:79:79	530018	3					
ANR	530047	ExpressionStatement	next = cur -> next	677:2:20391:20407	530018	0	True				
ANR	530048	AssignmentExpression	next = cur -> next		530018	0		=			
ANR	530049	Identifier	next		530018	0					
ANR	530050	PtrMemberAccess	cur -> next		530018	1					
ANR	530051	Identifier	cur		530018	0					
ANR	530052	Identifier	next		530018	1					
ANR	530053	IfStatement	if ( cur -> text . data )		530018	1					
ANR	530054	Condition	cur -> text . data	679:5:20415:20428	530018	0	True				
ANR	530055	MemberAccess	cur -> text . data		530018	0					
ANR	530056	PtrMemberAccess	cur -> text		530018	0					
ANR	530057	Identifier	cur		530018	0					
ANR	530058	Identifier	text		530018	1					
ANR	530059	Identifier	data		530018	1					
ANR	530060	ExpressionStatement	fs_give ( ( void * * ) & ( cur -> text . data ) )	680:3:20434:20469	530018	1	True				
ANR	530061	CallExpression	fs_give ( ( void * * ) & ( cur -> text . data ) )		530018	0					
ANR	530062	Callee	fs_give		530018	0					
ANR	530063	Identifier	fs_give		530018	0					
ANR	530064	ArgumentList	( void * * ) & ( cur -> text . data )		530018	1					
ANR	530065	Argument	( void * * ) & ( cur -> text . data )		530018	0					
ANR	530066	CastExpression	( void * * ) & ( cur -> text . data )		530018	0					
ANR	530067	CastTarget	void * *		530018	0					
ANR	530068	UnaryOperationExpression	& ( cur -> text . data )		530018	1					
ANR	530069	UnaryOperator	&		530018	0					
ANR	530070	MemberAccess	cur -> text . data		530018	1					
ANR	530071	PtrMemberAccess	cur -> text		530018	0					
ANR	530072	Identifier	cur		530018	0					
ANR	530073	Identifier	text		530018	1					
ANR	530074	Identifier	data		530018	1					
ANR	530075	ExpressionStatement	fs_give ( ( void * * ) & cur )	682:2:20474:20496	530018	2	True				
ANR	530076	CallExpression	fs_give ( ( void * * ) & cur )		530018	0					
ANR	530077	Callee	fs_give		530018	0					
ANR	530078	Identifier	fs_give		530018	0					
ANR	530079	ArgumentList	( void * * ) & cur		530018	1					
ANR	530080	Argument	( void * * ) & cur		530018	0					
ANR	530081	CastExpression	( void * * ) & cur		530018	0					
ANR	530082	CastTarget	void * *		530018	0					
ANR	530083	UnaryOperationExpression	& cur		530018	1					
ANR	530084	UnaryOperator	&		530018	0					
ANR	530085	Identifier	cur		530018	1					
ANR	530086	ExpressionStatement	* tail = NIL	685:1:20503:20514	530018	2	True				
ANR	530087	AssignmentExpression	* tail = NIL		530018	0		=			
ANR	530088	UnaryOperationExpression	* tail		530018	0					
ANR	530089	UnaryOperator	*		530018	0					
ANR	530090	Identifier	tail		530018	1					
ANR	530091	Identifier	NIL		530018	1					
ANR	530092	ExpressionStatement	* foblist = NIL	686:1:20517:20531	530018	3	True				
ANR	530093	AssignmentExpression	* foblist = NIL		530018	0		=			
ANR	530094	UnaryOperationExpression	* foblist		530018	0					
ANR	530095	UnaryOperator	*		530018	0					
ANR	530096	Identifier	foblist		530018	1					
ANR	530097	Identifier	NIL		530018	1					
ANR	530098	ReturnType	void		530018	1					
ANR	530099	Identifier	mail_free_foblist		530018	2					
ANR	530100	ParameterList	"FOBJECTLIST * * foblist , FOBJECTLIST * * tail"		530018	3					
ANR	530101	Parameter	FOBJECTLIST * * foblist	672:23:20264:20284	530018	0	True				
ANR	530102	ParameterType	FOBJECTLIST * *		530018	0					
ANR	530103	Identifier	foblist		530018	1					
ANR	530104	Parameter	FOBJECTLIST * * tail	672:46:20287:20304	530018	1	True				
ANR	530105	ParameterType	FOBJECTLIST * *		530018	0					
ANR	530106	Identifier	tail		530018	1					
ANR	530107	CFGEntryNode	ENTRY		530018		True				
ANR	530108	CFGExitNode	EXIT		530018		True				
ANR	530109	Symbol	next		530018						
ANR	530110	Symbol	cur		530018						
ANR	530111	Symbol	& cur		530018						
ANR	530112	Symbol	cur -> text		530018						
ANR	530113	Symbol	* tail		530018						
ANR	530114	Symbol	& cur -> text		530018						
ANR	530115	Symbol	tail		530018						
ANR	530116	Symbol	& cur -> text . data		530018						
ANR	530117	Symbol	foblist		530018						
ANR	530118	Symbol	cur -> text . data		530018						
ANR	530119	Symbol	NIL		530018						
ANR	530120	Symbol	* cur		530018						
ANR	530121	Symbol	* foblist		530018						
ANR	530122	Symbol	cur -> next		530018						
ANR	530123	Function	mail_newerrorlist	696:0:20654:20770							
ANR	530124	FunctionDef	mail_newerrorlist ()		530123	0					
ANR	530125	CompoundStatement		697:0:20689:20770	530123	0					
ANR	530126	ReturnStatement	"return ( ERRORLIST * ) memset ( fs_get ( sizeof ( ERRORLIST ) ) , 0 , sizeof ( ERRORLIST ) ) ;"	698:1:20692:20768	530123	0	True				
ANR	530127	CastExpression	"( ERRORLIST * ) memset ( fs_get ( sizeof ( ERRORLIST ) ) , 0 , sizeof ( ERRORLIST ) )"		530123	0					
ANR	530128	CastTarget	ERRORLIST *		530123	0					
ANR	530129	CallExpression	"memset ( fs_get ( sizeof ( ERRORLIST ) ) , 0 , sizeof ( ERRORLIST ) )"		530123	1					
ANR	530130	Callee	memset		530123	0					
ANR	530131	Identifier	memset		530123	0					
ANR	530132	ArgumentList	fs_get ( sizeof ( ERRORLIST ) )		530123	1					
ANR	530133	Argument	fs_get ( sizeof ( ERRORLIST ) )		530123	0					
ANR	530134	CallExpression	fs_get ( sizeof ( ERRORLIST ) )		530123	0					
ANR	530135	Callee	fs_get		530123	0					
ANR	530136	Identifier	fs_get		530123	0					
ANR	530137	ArgumentList	sizeof ( ERRORLIST )		530123	1					
ANR	530138	Argument	sizeof ( ERRORLIST )		530123	0					
ANR	530139	SizeofExpression	sizeof ( ERRORLIST )		530123	0					
ANR	530140	Sizeof	sizeof		530123	0					
ANR	530141	SizeofOperand	ERRORLIST		530123	1					
ANR	530142	Argument	0		530123	1					
ANR	530143	PrimaryExpression	0		530123	0					
ANR	530144	Argument	sizeof ( ERRORLIST )		530123	2					
ANR	530145	SizeofExpression	sizeof ( ERRORLIST )		530123	0					
ANR	530146	Sizeof	sizeof		530123	0					
ANR	530147	SizeofOperand	ERRORLIST		530123	1					
ANR	530148	ReturnType	ERRORLIST *		530123	1					
ANR	530149	Identifier	mail_newerrorlist		530123	2					
ANR	530150	ParameterList			530123	3					
ANR	530151	CFGEntryNode	ENTRY		530123		True				
ANR	530152	CFGExitNode	EXIT		530123		True				
ANR	530153	Symbol	fs_get		530123						
ANR	530154	Symbol	memset		530123						
ANR	530155	Function	mail_free_errorlist	708:0:20911:21196							
ANR	530156	FunctionDef	mail_free_errorlist (ERRORLIST * * errlist)		530155	0					
ANR	530157	CompoundStatement		709:0:20957:21196	530155	0					
ANR	530158	IfStatement	if ( * errlist )		530155	0					
ANR	530159	Condition	* errlist	710:5:20964:20971	530155	0	True				
ANR	530160	UnaryOperationExpression	* errlist		530155	0					
ANR	530161	UnaryOperator	*		530155	0					
ANR	530162	Identifier	errlist		530155	1					
ANR	530163	CompoundStatement		2:15:16:16	530155	1					
ANR	530164	IfStatement	if ( ( * errlist ) -> text . data )		530155	0					
ANR	530165	Condition	( * errlist ) -> text . data	711:6:21009:21029	530155	0	True				
ANR	530166	MemberAccess	( * errlist ) -> text . data		530155	0					
ANR	530167	PtrMemberAccess	( * errlist ) -> text		530155	0					
ANR	530168	UnaryOperationExpression	* errlist		530155	0					
ANR	530169	UnaryOperator	*		530155	0					
ANR	530170	Identifier	errlist		530155	1					
ANR	530171	Identifier	text		530155	1					
ANR	530172	Identifier	data		530155	1					
ANR	530173	CompoundStatement		3:29:74:74	530155	1					
ANR	530174	ExpressionStatement	fs_give ( ( void * * ) & ( * errlist ) -> text . data )	712:3:21037:21078	530155	0	True				
ANR	530175	CallExpression	fs_give ( ( void * * ) & ( * errlist ) -> text . data )		530155	0					
ANR	530176	Callee	fs_give		530155	0					
ANR	530177	Identifier	fs_give		530155	0					
ANR	530178	ArgumentList	( void * * ) & ( * errlist ) -> text . data		530155	1					
ANR	530179	Argument	( void * * ) & ( * errlist ) -> text . data		530155	0					
ANR	530180	CastExpression	( void * * ) & ( * errlist ) -> text . data		530155	0					
ANR	530181	CastTarget	void * *		530155	0					
ANR	530182	UnaryOperationExpression	& ( * errlist ) -> text . data		530155	1					
ANR	530183	UnaryOperator	&		530155	0					
ANR	530184	MemberAccess	( * errlist ) -> text . data		530155	1					
ANR	530185	PtrMemberAccess	( * errlist ) -> text		530155	0					
ANR	530186	UnaryOperationExpression	* errlist		530155	0					
ANR	530187	UnaryOperator	*		530155	0					
ANR	530188	Identifier	errlist		530155	1					
ANR	530189	Identifier	text		530155	1					
ANR	530190	Identifier	data		530155	1					
ANR	530191	ExpressionStatement	mail_free_errorlist ( & ( * errlist ) -> next )	714:2:21086:21125	530155	1	True				
ANR	530192	CallExpression	mail_free_errorlist ( & ( * errlist ) -> next )		530155	0					
ANR	530193	Callee	mail_free_errorlist		530155	0					
ANR	530194	Identifier	mail_free_errorlist		530155	0					
ANR	530195	ArgumentList	& ( * errlist ) -> next		530155	1					
ANR	530196	Argument	& ( * errlist ) -> next		530155	0					
ANR	530197	UnaryOperationExpression	& ( * errlist ) -> next		530155	0					
ANR	530198	UnaryOperator	&		530155	0					
ANR	530199	PtrMemberAccess	( * errlist ) -> next		530155	1					
ANR	530200	UnaryOperationExpression	* errlist		530155	0					
ANR	530201	UnaryOperator	*		530155	0					
ANR	530202	Identifier	errlist		530155	1					
ANR	530203	Identifier	next		530155	1					
ANR	530204	ExpressionStatement	fs_give ( ( void * * ) errlist )	715:2:21129:21155	530155	2	True				
ANR	530205	CallExpression	fs_give ( ( void * * ) errlist )		530155	0					
ANR	530206	Callee	fs_give		530155	0					
ANR	530207	Identifier	fs_give		530155	0					
ANR	530208	ArgumentList	( void * * ) errlist		530155	1					
ANR	530209	Argument	( void * * ) errlist		530155	0					
ANR	530210	CastExpression	( void * * ) errlist		530155	0					
ANR	530211	CastTarget	void * *		530155	0					
ANR	530212	Identifier	errlist		530155	1					
ANR	530213	ReturnType	void		530155	1					
ANR	530214	Identifier	mail_free_errorlist		530155	2					
ANR	530215	ParameterList	ERRORLIST * * errlist		530155	3					
ANR	530216	Parameter	ERRORLIST * * errlist	708:25:20936:20954	530155	0	True				
ANR	530217	ParameterType	ERRORLIST * *		530155	0					
ANR	530218	Identifier	errlist		530155	1					
ANR	530219	CFGEntryNode	ENTRY		530155		True				
ANR	530220	CFGExitNode	EXIT		530155		True				
ANR	530221	Symbol	& ( * errlist ) -> next		530155						
ANR	530222	Symbol	errlist		530155						
ANR	530223	Symbol	& ( * errlist ) -> text . data		530155						
ANR	530224	Symbol	& ( * errlist ) -> text		530155						
ANR	530225	Symbol	( * errlist ) -> text . data		530155						
ANR	530226	Symbol	* errlist		530155						
ANR	530227	Symbol	* * errlist		530155						
ANR	530228	Symbol	( * errlist ) -> text		530155						
ANR	530229	Function	mail_newmessagelist	726:0:21323:21449							
ANR	530230	FunctionDef	mail_newmessagelist ()		530229	0					
ANR	530231	CompoundStatement		727:0:21362:21449	530229	0					
ANR	530232	ReturnStatement	"return ( MESSAGELIST * ) memset ( fs_get ( sizeof ( MESSAGELIST ) ) , 0 , sizeof ( MESSAGELIST ) ) ;"	728:1:21365:21447	530229	0	True				
ANR	530233	CastExpression	"( MESSAGELIST * ) memset ( fs_get ( sizeof ( MESSAGELIST ) ) , 0 , sizeof ( MESSAGELIST ) )"		530229	0					
ANR	530234	CastTarget	MESSAGELIST *		530229	0					
ANR	530235	CallExpression	"memset ( fs_get ( sizeof ( MESSAGELIST ) ) , 0 , sizeof ( MESSAGELIST ) )"		530229	1					
ANR	530236	Callee	memset		530229	0					
ANR	530237	Identifier	memset		530229	0					
ANR	530238	ArgumentList	fs_get ( sizeof ( MESSAGELIST ) )		530229	1					
ANR	530239	Argument	fs_get ( sizeof ( MESSAGELIST ) )		530229	0					
ANR	530240	CallExpression	fs_get ( sizeof ( MESSAGELIST ) )		530229	0					
ANR	530241	Callee	fs_get		530229	0					
ANR	530242	Identifier	fs_get		530229	0					
ANR	530243	ArgumentList	sizeof ( MESSAGELIST )		530229	1					
ANR	530244	Argument	sizeof ( MESSAGELIST )		530229	0					
ANR	530245	SizeofExpression	sizeof ( MESSAGELIST )		530229	0					
ANR	530246	Sizeof	sizeof		530229	0					
ANR	530247	SizeofOperand	MESSAGELIST		530229	1					
ANR	530248	Argument	0		530229	1					
ANR	530249	PrimaryExpression	0		530229	0					
ANR	530250	Argument	sizeof ( MESSAGELIST )		530229	2					
ANR	530251	SizeofExpression	sizeof ( MESSAGELIST )		530229	0					
ANR	530252	Sizeof	sizeof		530229	0					
ANR	530253	SizeofOperand	MESSAGELIST		530229	1					
ANR	530254	ReturnType	MESSAGELIST *		530229	1					
ANR	530255	Identifier	mail_newmessagelist		530229	2					
ANR	530256	ParameterList			530229	3					
ANR	530257	CFGEntryNode	ENTRY		530229		True				
ANR	530258	CFGExitNode	EXIT		530229		True				
ANR	530259	Symbol	fs_get		530229						
ANR	530260	Symbol	memset		530229						
ANR	530261	Function	mail_free_messagelist	738:0:21592:21831							
ANR	530262	FunctionDef	"mail_free_messagelist (MESSAGELIST * * msglist , MESSAGELIST * * tail)"		530261	0					
ANR	530263	CompoundStatement		739:0:21662:21831	530261	0					
ANR	530264	IdentifierDeclStatement	"MESSAGELIST * cur , * next ;"	740:1:21665:21688	530261	0	True				
ANR	530265	IdentifierDecl	* cur		530261	0					
ANR	530266	IdentifierDeclType	MESSAGELIST *		530261	0					
ANR	530267	Identifier	cur		530261	1					
ANR	530268	IdentifierDecl	* next		530261	1					
ANR	530269	IdentifierDeclType	MESSAGELIST *		530261	0					
ANR	530270	Identifier	next		530261	1					
ANR	530271	ForStatement	"for ( cur = * msglist , next = cur -> next ; cur ; cur = next )"		530261	1					
ANR	530272	ForInit	"cur = * msglist , next = cur -> next ;"	742:6:21697:21729	530261	0	True				
ANR	530273	Expression	"cur = * msglist , next = cur -> next"		530261	0					
ANR	530274	AssignmentExpression	cur = * msglist		530261	0		=			
ANR	530275	Identifier	cur		530261	0					
ANR	530276	UnaryOperationExpression	* msglist		530261	1					
ANR	530277	UnaryOperator	*		530261	0					
ANR	530278	Identifier	msglist		530261	1					
ANR	530279	AssignmentExpression	next = cur -> next		530261	1		=			
ANR	530280	Identifier	next		530261	0					
ANR	530281	PtrMemberAccess	cur -> next		530261	1					
ANR	530282	Identifier	cur		530261	0					
ANR	530283	Identifier	next		530261	1					
ANR	530284	Condition	cur	742:40:21731:21733	530261	1	True				
ANR	530285	Identifier	cur		530261	0					
ANR	530286	AssignmentExpression	cur = next	742:45:21736:21745	530261	2	True	=			
ANR	530287	Identifier	cur		530261	0					
ANR	530288	Identifier	next		530261	1					
ANR	530289	CompoundStatement		4:57:85:85	530261	3					
ANR	530290	ExpressionStatement	next = cur -> next	743:2:21752:21768	530261	0	True				
ANR	530291	AssignmentExpression	next = cur -> next		530261	0		=			
ANR	530292	Identifier	next		530261	0					
ANR	530293	PtrMemberAccess	cur -> next		530261	1					
ANR	530294	Identifier	cur		530261	0					
ANR	530295	Identifier	next		530261	1					
ANR	530296	ExpressionStatement	fs_give ( ( void * * ) & cur )	744:2:21772:21794	530261	1	True				
ANR	530297	CallExpression	fs_give ( ( void * * ) & cur )		530261	0					
ANR	530298	Callee	fs_give		530261	0					
ANR	530299	Identifier	fs_give		530261	0					
ANR	530300	ArgumentList	( void * * ) & cur		530261	1					
ANR	530301	Argument	( void * * ) & cur		530261	0					
ANR	530302	CastExpression	( void * * ) & cur		530261	0					
ANR	530303	CastTarget	void * *		530261	0					
ANR	530304	UnaryOperationExpression	& cur		530261	1					
ANR	530305	UnaryOperator	&		530261	0					
ANR	530306	Identifier	cur		530261	1					
ANR	530307	ExpressionStatement	* tail = NIL	747:1:21801:21812	530261	2	True				
ANR	530308	AssignmentExpression	* tail = NIL		530261	0		=			
ANR	530309	UnaryOperationExpression	* tail		530261	0					
ANR	530310	UnaryOperator	*		530261	0					
ANR	530311	Identifier	tail		530261	1					
ANR	530312	Identifier	NIL		530261	1					
ANR	530313	ExpressionStatement	* msglist = NIL	748:1:21815:21829	530261	3	True				
ANR	530314	AssignmentExpression	* msglist = NIL		530261	0		=			
ANR	530315	UnaryOperationExpression	* msglist		530261	0					
ANR	530316	UnaryOperator	*		530261	0					
ANR	530317	Identifier	msglist		530261	1					
ANR	530318	Identifier	NIL		530261	1					
ANR	530319	ReturnType	void		530261	1					
ANR	530320	Identifier	mail_free_messagelist		530261	2					
ANR	530321	ParameterList	"MESSAGELIST * * msglist , MESSAGELIST * * tail"		530261	3					
ANR	530322	Parameter	MESSAGELIST * * msglist	738:27:21619:21639	530261	0	True				
ANR	530323	ParameterType	MESSAGELIST * *		530261	0					
ANR	530324	Identifier	msglist		530261	1					
ANR	530325	Parameter	MESSAGELIST * * tail	738:50:21642:21659	530261	1	True				
ANR	530326	ParameterType	MESSAGELIST * *		530261	0					
ANR	530327	Identifier	tail		530261	1					
ANR	530328	CFGEntryNode	ENTRY		530261		True				
ANR	530329	CFGExitNode	EXIT		530261		True				
ANR	530330	Symbol	next		530261						
ANR	530331	Symbol	NIL		530261						
ANR	530332	Symbol	cur		530261						
ANR	530333	Symbol	& cur		530261						
ANR	530334	Symbol	* tail		530261						
ANR	530335	Symbol	* cur		530261						
ANR	530336	Symbol	tail		530261						
ANR	530337	Symbol	* msglist		530261						
ANR	530338	Symbol	msglist		530261						
ANR	530339	Symbol	cur -> next		530261						
ANR	530340	Function	mail_getquota	760:0:22041:22782							
ANR	530341	FunctionDef	"mail_getquota (MAILSTREAM * stream , char * qroot , QUOTALIST * qlist)"		530340	0					
ANR	530342	CompoundStatement		761:0:22111:22782	530340	0					
ANR	530343	IdentifierDeclStatement	"zval * t_map , * return_value ;"	762:1:22114:22140	530340	0	True				
ANR	530344	IdentifierDecl	* t_map		530340	0					
ANR	530345	IdentifierDeclType	zval *		530340	0					
ANR	530346	Identifier	t_map		530340	1					
ANR	530347	IdentifierDecl	* return_value		530340	1					
ANR	530348	IdentifierDeclType	zval *		530340	0					
ANR	530349	Identifier	return_value		530340	1					
ANR	530350	ExpressionStatement	TSRMLS_FETCH ( )	763:1:22143:22157	530340	1	True				
ANR	530351	CallExpression	TSRMLS_FETCH ( )		530340	0					
ANR	530352	Callee	TSRMLS_FETCH		530340	0					
ANR	530353	Identifier	TSRMLS_FETCH		530340	0					
ANR	530354	ArgumentList			530340	1					
ANR	530355	ExpressionStatement	return_value = * IMAPG ( quota_return )	765:1:22161:22196	530340	2	True				
ANR	530356	AssignmentExpression	return_value = * IMAPG ( quota_return )		530340	0		=			
ANR	530357	Identifier	return_value		530340	0					
ANR	530358	UnaryOperationExpression	* IMAPG ( quota_return )		530340	1					
ANR	530359	UnaryOperator	*		530340	0					
ANR	530360	CallExpression	IMAPG ( quota_return )		530340	1					
ANR	530361	Callee	IMAPG		530340	0					
ANR	530362	Identifier	IMAPG		530340	0					
ANR	530363	ArgumentList	quota_return		530340	1					
ANR	530364	Argument	quota_return		530340	0					
ANR	530365	Identifier	quota_return		530340	0					
ANR	530366	ForStatement	for ( ; qlist ; qlist = qlist -> next )		530340	3					
ANR	530367	Condition	qlist	768:7:22234:22238	530340	0	True				
ANR	530368	Identifier	qlist		530340	0					
ANR	530369	AssignmentExpression	qlist = qlist -> next	768:14:22241:22259	530340	1	True	=			
ANR	530370	Identifier	qlist		530340	0					
ANR	530371	PtrMemberAccess	qlist -> next		530340	1					
ANR	530372	Identifier	qlist		530340	0					
ANR	530373	Identifier	next		530340	1					
ANR	530374	CompoundStatement		8:35:150:150	530340	2					
ANR	530375	ExpressionStatement	MAKE_STD_ZVAL ( t_map )	769:2:22266:22286	530340	0	True				
ANR	530376	CallExpression	MAKE_STD_ZVAL ( t_map )		530340	0					
ANR	530377	Callee	MAKE_STD_ZVAL		530340	0					
ANR	530378	Identifier	MAKE_STD_ZVAL		530340	0					
ANR	530379	ArgumentList	t_map		530340	1					
ANR	530380	Argument	t_map		530340	0					
ANR	530381	Identifier	t_map		530340	0					
ANR	530382	ExpressionStatement	array_init ( t_map )	770:2:22290:22307	530340	1	True				
ANR	530383	CallExpression	array_init ( t_map )		530340	0					
ANR	530384	Callee	array_init		530340	0					
ANR	530385	Identifier	array_init		530340	0					
ANR	530386	ArgumentList	t_map		530340	1					
ANR	530387	Argument	t_map		530340	0					
ANR	530388	Identifier	t_map		530340	0					
ANR	530389	IfStatement	"if ( strncmp ( qlist -> name , ""STORAGE"" , 7 ) == 0 )"		530340	2					
ANR	530390	Condition	"strncmp ( qlist -> name , ""STORAGE"" , 7 ) == 0"	771:6:22315:22353	530340	0	True				
ANR	530391	EqualityExpression	"strncmp ( qlist -> name , ""STORAGE"" , 7 ) == 0"		530340	0		==			
ANR	530392	CallExpression	"strncmp ( qlist -> name , ""STORAGE"" , 7 )"		530340	0					
ANR	530393	Callee	strncmp		530340	0					
ANR	530394	Identifier	strncmp		530340	0					
ANR	530395	ArgumentList	qlist -> name		530340	1					
ANR	530396	Argument	qlist -> name		530340	0					
ANR	530397	PtrMemberAccess	qlist -> name		530340	0					
ANR	530398	Identifier	qlist		530340	0					
ANR	530399	Identifier	name		530340	1					
ANR	530400	Argument	"""STORAGE"""		530340	1					
ANR	530401	PrimaryExpression	"""STORAGE"""		530340	0					
ANR	530402	Argument	7		530340	2					
ANR	530403	PrimaryExpression	7		530340	0					
ANR	530404	PrimaryExpression	0		530340	1					
ANR	530405	CompoundStatement		12:2:246:246	530340	1					
ANR	530406	ExpressionStatement	"add_assoc_long_ex ( return_value , ""usage"" , sizeof ( ""usage"" ) , qlist -> usage )"	774:3:22411:22482	530340	0	True				
ANR	530407	CallExpression	"add_assoc_long_ex ( return_value , ""usage"" , sizeof ( ""usage"" ) , qlist -> usage )"		530340	0					
ANR	530408	Callee	add_assoc_long_ex		530340	0					
ANR	530409	Identifier	add_assoc_long_ex		530340	0					
ANR	530410	ArgumentList	return_value		530340	1					
ANR	530411	Argument	return_value		530340	0					
ANR	530412	Identifier	return_value		530340	0					
ANR	530413	Argument	"""usage"""		530340	1					
ANR	530414	PrimaryExpression	"""usage"""		530340	0					
ANR	530415	Argument	"sizeof ( ""usage"" )"		530340	2					
ANR	530416	SizeofExpression	"sizeof ( ""usage"" )"		530340	0					
ANR	530417	Sizeof	sizeof		530340	0					
ANR	530418	PrimaryExpression	"""usage"""		530340	1					
ANR	530419	Argument	qlist -> usage		530340	3					
ANR	530420	PtrMemberAccess	qlist -> usage		530340	0					
ANR	530421	Identifier	qlist		530340	0					
ANR	530422	Identifier	usage		530340	1					
ANR	530423	ExpressionStatement	"add_assoc_long_ex ( return_value , ""limit"" , sizeof ( ""limit"" ) , qlist -> limit )"	775:3:22487:22558	530340	1	True				
ANR	530424	CallExpression	"add_assoc_long_ex ( return_value , ""limit"" , sizeof ( ""limit"" ) , qlist -> limit )"		530340	0					
ANR	530425	Callee	add_assoc_long_ex		530340	0					
ANR	530426	Identifier	add_assoc_long_ex		530340	0					
ANR	530427	ArgumentList	return_value		530340	1					
ANR	530428	Argument	return_value		530340	0					
ANR	530429	Identifier	return_value		530340	0					
ANR	530430	Argument	"""limit"""		530340	1					
ANR	530431	PrimaryExpression	"""limit"""		530340	0					
ANR	530432	Argument	"sizeof ( ""limit"" )"		530340	2					
ANR	530433	SizeofExpression	"sizeof ( ""limit"" )"		530340	0					
ANR	530434	Sizeof	sizeof		530340	0					
ANR	530435	PrimaryExpression	"""limit"""		530340	1					
ANR	530436	Argument	qlist -> limit		530340	3					
ANR	530437	PtrMemberAccess	qlist -> limit		530340	0					
ANR	530438	Identifier	qlist		530340	0					
ANR	530439	Identifier	limit		530340	1					
ANR	530440	ExpressionStatement	"add_assoc_long_ex ( t_map , ""usage"" , sizeof ( ""usage"" ) , qlist -> usage )"	778:2:22567:22631	530340	3	True				
ANR	530441	CallExpression	"add_assoc_long_ex ( t_map , ""usage"" , sizeof ( ""usage"" ) , qlist -> usage )"		530340	0					
ANR	530442	Callee	add_assoc_long_ex		530340	0					
ANR	530443	Identifier	add_assoc_long_ex		530340	0					
ANR	530444	ArgumentList	t_map		530340	1					
ANR	530445	Argument	t_map		530340	0					
ANR	530446	Identifier	t_map		530340	0					
ANR	530447	Argument	"""usage"""		530340	1					
ANR	530448	PrimaryExpression	"""usage"""		530340	0					
ANR	530449	Argument	"sizeof ( ""usage"" )"		530340	2					
ANR	530450	SizeofExpression	"sizeof ( ""usage"" )"		530340	0					
ANR	530451	Sizeof	sizeof		530340	0					
ANR	530452	PrimaryExpression	"""usage"""		530340	1					
ANR	530453	Argument	qlist -> usage		530340	3					
ANR	530454	PtrMemberAccess	qlist -> usage		530340	0					
ANR	530455	Identifier	qlist		530340	0					
ANR	530456	Identifier	usage		530340	1					
ANR	530457	ExpressionStatement	"add_assoc_long_ex ( t_map , ""limit"" , sizeof ( ""limit"" ) , qlist -> limit )"	779:2:22635:22699	530340	4	True				
ANR	530458	CallExpression	"add_assoc_long_ex ( t_map , ""limit"" , sizeof ( ""limit"" ) , qlist -> limit )"		530340	0					
ANR	530459	Callee	add_assoc_long_ex		530340	0					
ANR	530460	Identifier	add_assoc_long_ex		530340	0					
ANR	530461	ArgumentList	t_map		530340	1					
ANR	530462	Argument	t_map		530340	0					
ANR	530463	Identifier	t_map		530340	0					
ANR	530464	Argument	"""limit"""		530340	1					
ANR	530465	PrimaryExpression	"""limit"""		530340	0					
ANR	530466	Argument	"sizeof ( ""limit"" )"		530340	2					
ANR	530467	SizeofExpression	"sizeof ( ""limit"" )"		530340	0					
ANR	530468	Sizeof	sizeof		530340	0					
ANR	530469	PrimaryExpression	"""limit"""		530340	1					
ANR	530470	Argument	qlist -> limit		530340	3					
ANR	530471	PtrMemberAccess	qlist -> limit		530340	0					
ANR	530472	Identifier	qlist		530340	0					
ANR	530473	Identifier	limit		530340	1					
ANR	530474	ExpressionStatement	"add_assoc_zval_ex ( return_value , qlist -> name , strlen ( qlist -> name ) + 1 , t_map )"	780:2:22703:22777	530340	5	True				
ANR	530475	CallExpression	"add_assoc_zval_ex ( return_value , qlist -> name , strlen ( qlist -> name ) + 1 , t_map )"		530340	0					
ANR	530476	Callee	add_assoc_zval_ex		530340	0					
ANR	530477	Identifier	add_assoc_zval_ex		530340	0					
ANR	530478	ArgumentList	return_value		530340	1					
ANR	530479	Argument	return_value		530340	0					
ANR	530480	Identifier	return_value		530340	0					
ANR	530481	Argument	qlist -> name		530340	1					
ANR	530482	PtrMemberAccess	qlist -> name		530340	0					
ANR	530483	Identifier	qlist		530340	0					
ANR	530484	Identifier	name		530340	1					
ANR	530485	Argument	strlen ( qlist -> name ) + 1		530340	2					
ANR	530486	AdditiveExpression	strlen ( qlist -> name ) + 1		530340	0		+			
ANR	530487	CallExpression	strlen ( qlist -> name )		530340	0					
ANR	530488	Callee	strlen		530340	0					
ANR	530489	Identifier	strlen		530340	0					
ANR	530490	ArgumentList	qlist -> name		530340	1					
ANR	530491	Argument	qlist -> name		530340	0					
ANR	530492	PtrMemberAccess	qlist -> name		530340	0					
ANR	530493	Identifier	qlist		530340	0					
ANR	530494	Identifier	name		530340	1					
ANR	530495	PrimaryExpression	1		530340	1					
ANR	530496	Argument	t_map		530340	3					
ANR	530497	Identifier	t_map		530340	0					
ANR	530498	ReturnType	void		530340	1					
ANR	530499	Identifier	mail_getquota		530340	2					
ANR	530500	ParameterList	"MAILSTREAM * stream , char * qroot , QUOTALIST * qlist"		530340	3					
ANR	530501	Parameter	MAILSTREAM * stream	760:19:22060:22077	530340	0	True				
ANR	530502	ParameterType	MAILSTREAM *		530340	0					
ANR	530503	Identifier	stream		530340	1					
ANR	530504	Parameter	char * qroot	760:39:22080:22090	530340	1	True				
ANR	530505	ParameterType	char *		530340	0					
ANR	530506	Identifier	qroot		530340	1					
ANR	530507	Parameter	QUOTALIST * qlist	760:52:22093:22108	530340	2	True				
ANR	530508	ParameterType	QUOTALIST *		530340	0					
ANR	530509	Identifier	qlist		530340	1					
ANR	530510	CFGEntryNode	ENTRY		530340		True				
ANR	530511	CFGExitNode	EXIT		530340		True				
ANR	530512	Symbol	return_value		530340						
ANR	530513	Symbol	qlist		530340						
ANR	530514	Symbol	qlist -> next		530340						
ANR	530515	Symbol	quota_return		530340						
ANR	530516	Symbol	qlist -> limit		530340						
ANR	530517	Symbol	* IMAPG ( quota_return )		530340						
ANR	530518	Symbol	qlist -> usage		530340						
ANR	530519	Symbol	strncmp		530340						
ANR	530520	Symbol	strlen		530340						
ANR	530521	Symbol	* qlist		530340						
ANR	530522	Symbol	stream		530340						
ANR	530523	Symbol	* IMAPG		530340						
ANR	530524	Symbol	IMAPG		530340						
ANR	530525	Symbol	qlist -> name		530340						
ANR	530526	Symbol	qroot		530340						
ANR	530527	Symbol	t_map		530340						
ANR	530528	Function	mail_getacl	790:0:22922:23185							
ANR	530529	FunctionDef	"mail_getacl (MAILSTREAM * stream , char * mailbox , ACLLIST * alist)"		530528	0					
ANR	530530	CompoundStatement		791:0:22990:23185	530528	0					
ANR	530531	ExpressionStatement	TSRMLS_FETCH ( )	792:1:22993:23007	530528	0	True				
ANR	530532	CallExpression	TSRMLS_FETCH ( )		530528	0					
ANR	530533	Callee	TSRMLS_FETCH		530528	0					
ANR	530534	Identifier	TSRMLS_FETCH		530528	0					
ANR	530535	ArgumentList			530528	1					
ANR	530536	ForStatement	for ( ; alist ; alist = alist -> next )		530528	1					
ANR	530537	Condition	alist	795:7:23049:23053	530528	0	True				
ANR	530538	Identifier	alist		530528	0					
ANR	530539	AssignmentExpression	alist = alist -> next	795:14:23056:23074	530528	1	True	=			
ANR	530540	Identifier	alist		530528	0					
ANR	530541	PtrMemberAccess	alist -> next		530528	1					
ANR	530542	Identifier	alist		530528	0					
ANR	530543	Identifier	next		530528	1					
ANR	530544	CompoundStatement		5:35:86:86	530528	2					
ANR	530545	ExpressionStatement	"add_assoc_stringl ( IMAPG ( imap_acl_list ) , alist -> identifier , alist -> rights , strlen ( alist -> rights ) , 1 )"	796:2:23081:23180	530528	0	True				
ANR	530546	CallExpression	"add_assoc_stringl ( IMAPG ( imap_acl_list ) , alist -> identifier , alist -> rights , strlen ( alist -> rights ) , 1 )"		530528	0					
ANR	530547	Callee	add_assoc_stringl		530528	0					
ANR	530548	Identifier	add_assoc_stringl		530528	0					
ANR	530549	ArgumentList	IMAPG ( imap_acl_list )		530528	1					
ANR	530550	Argument	IMAPG ( imap_acl_list )		530528	0					
ANR	530551	CallExpression	IMAPG ( imap_acl_list )		530528	0					
ANR	530552	Callee	IMAPG		530528	0					
ANR	530553	Identifier	IMAPG		530528	0					
ANR	530554	ArgumentList	imap_acl_list		530528	1					
ANR	530555	Argument	imap_acl_list		530528	0					
ANR	530556	Identifier	imap_acl_list		530528	0					
ANR	530557	Argument	alist -> identifier		530528	1					
ANR	530558	PtrMemberAccess	alist -> identifier		530528	0					
ANR	530559	Identifier	alist		530528	0					
ANR	530560	Identifier	identifier		530528	1					
ANR	530561	Argument	alist -> rights		530528	2					
ANR	530562	PtrMemberAccess	alist -> rights		530528	0					
ANR	530563	Identifier	alist		530528	0					
ANR	530564	Identifier	rights		530528	1					
ANR	530565	Argument	strlen ( alist -> rights )		530528	3					
ANR	530566	CallExpression	strlen ( alist -> rights )		530528	0					
ANR	530567	Callee	strlen		530528	0					
ANR	530568	Identifier	strlen		530528	0					
ANR	530569	ArgumentList	alist -> rights		530528	1					
ANR	530570	Argument	alist -> rights		530528	0					
ANR	530571	PtrMemberAccess	alist -> rights		530528	0					
ANR	530572	Identifier	alist		530528	0					
ANR	530573	Identifier	rights		530528	1					
ANR	530574	Argument	1		530528	4					
ANR	530575	PrimaryExpression	1		530528	0					
ANR	530576	ReturnType	void		530528	1					
ANR	530577	Identifier	mail_getacl		530528	2					
ANR	530578	ParameterList	"MAILSTREAM * stream , char * mailbox , ACLLIST * alist"		530528	3					
ANR	530579	Parameter	MAILSTREAM * stream	790:17:22939:22956	530528	0	True				
ANR	530580	ParameterType	MAILSTREAM *		530528	0					
ANR	530581	Identifier	stream		530528	1					
ANR	530582	Parameter	char * mailbox	790:37:22959:22971	530528	1	True				
ANR	530583	ParameterType	char *		530528	0					
ANR	530584	Identifier	mailbox		530528	1					
ANR	530585	Parameter	ACLLIST * alist	790:52:22974:22987	530528	2	True				
ANR	530586	ParameterType	ACLLIST *		530528	0					
ANR	530587	Identifier	alist		530528	1					
ANR	530588	CFGEntryNode	ENTRY		530528		True				
ANR	530589	CFGExitNode	EXIT		530528		True				
ANR	530590	Symbol	strlen		530528						
ANR	530591	Symbol	mailbox		530528						
ANR	530592	Symbol	* alist		530528						
ANR	530593	Symbol	alist -> rights		530528						
ANR	530594	Symbol	alist -> next		530528						
ANR	530595	Symbol	stream		530528						
ANR	530596	Symbol	alist		530528						
ANR	530597	Symbol	alist -> identifier		530528						
ANR	530598	Symbol	imap_acl_list		530528						
ANR	530599	Symbol	IMAPG		530528						
ANR	530600	DeclStmt									
ANR	530601	Decl							unsigned long	unsigned long	sa_all
ANR	530602	DeclStmt									
ANR	530603	Decl							ERRORLIST	ERRORLIST *	ecur
ANR	530604	DeclStmt									
ANR	530605	Decl							STRINGLIST	STRINGLIST *	acur
ANR	530606	DeclStmt									
ANR	530607	Decl							char	char *	mailbox
ANR	530608	Decl							char	char *	user
ANR	530609	Decl							char	char *	passwd
ANR	530610	DeclStmt									
ANR	530611	Decl							int	int	mailbox_len
ANR	530612	Decl							int	int	user_len
ANR	530613	Decl							int	int	passwd_len
ANR	530614	DeclStmt									
ANR	530615	Decl							long	long	retries
ANR	530616	Decl							long	long	flags
ANR	530617	Decl							long	long	cl_flags
ANR	530618	DeclStmt									
ANR	530619	Decl							MAILSTREAM	MAILSTREAM *	imap_stream
ANR	530620	DeclStmt									
ANR	530621	Decl							pils	pils *	imap_le_struct
ANR	530622	DeclStmt									
ANR	530623	Decl							zval	zval *	params
ANR	530624	DeclStmt									
ANR	530625	Decl							int	int	argc
ANR	530626	DeclStmt									
ANR	530627	Decl							zval	zval * *	disabled_auth_method
ANR	530628	DeclStmt									
ANR	530629	Decl							zval	zval * *	z_auth_method
ANR	530630	DeclStmt									
ANR	530631	Decl							int	int	i
ANR	530632	DeclStmt									
ANR	530633	Decl							int	int	nelems
ANR	530634	DeclStmt									
ANR	530635	Decl							zval	zval *	streamind
ANR	530636	DeclStmt									
ANR	530637	Decl							char	char *	mailbox
ANR	530638	DeclStmt									
ANR	530639	Decl							int	int	mailbox_len
ANR	530640	DeclStmt									
ANR	530641	Decl							long	long	options
ANR	530642	Decl							long	long	retries
ANR	530643	DeclStmt									
ANR	530644	Decl							pils	pils *	imap_le_struct
ANR	530645	DeclStmt									
ANR	530646	Decl							long	long	flags
ANR	530647	DeclStmt									
ANR	530648	Decl							long	long	cl_flags
ANR	530649	DeclStmt									
ANR	530650	Decl							zval	zval *	streamind
ANR	530651	DeclStmt									
ANR	530652	Decl							char	char *	folder
ANR	530653	Decl							char	char *	message
ANR	530654	Decl							char	char *	internal_date
ANR	530655	Decl							char	char *	flags
ANR	530656	DeclStmt									
ANR	530657	Decl							int	int	folder_len
ANR	530658	Decl							int	int	message_len
ANR	530659	Decl							int	int	internal_date_len
ANR	530660	Decl							int	int	flags_len
ANR	530661	DeclStmt									
ANR	530662	Decl							pils	pils *	imap_le_struct
ANR	530663	DeclStmt									
ANR	530664	Decl							STRING	STRING	st
ANR	530665	DeclStmt									
ANR	530666	Decl							char	char *	regex
ANR	530667	DeclStmt									
ANR	530668	Decl							const int	const int	regex_len
ANR	530669	DeclStmt									
ANR	530670	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	530671	DeclStmt									
ANR	530672	Decl							zval	zval *	subpats
ANR	530673	DeclStmt									
ANR	530674	Decl							long	long	regex_flags
ANR	530675	DeclStmt									
ANR	530676	Decl							long	long	start_offset
ANR	530677	DeclStmt									
ANR	530678	Decl							int	int	global
ANR	530679	DeclStmt									
ANR	530680	Decl							zval	zval *	streamind
ANR	530681	DeclStmt									
ANR	530682	Decl							pils	pils *	imap_le_struct
ANR	530683	DeclStmt									
ANR	530684	Decl							zval	zval *	streamind
ANR	530685	DeclStmt									
ANR	530686	Decl							pils	pils *	imap_le_struct
ANR	530687	DeclStmt									
ANR	530688	Decl							zval	zval *	streamind
ANR	530689	DeclStmt									
ANR	530690	Decl							pils	pils *	imap_le_struct
ANR	530691	DeclStmt									
ANR	530692	Decl							zval	zval *	streamind
ANR	530693	DeclStmt									
ANR	530694	Decl							char	char *	qroot
ANR	530695	DeclStmt									
ANR	530696	Decl							int	int	qroot_len
ANR	530697	DeclStmt									
ANR	530698	Decl							pils	pils *	imap_le_struct
ANR	530699	DeclStmt									
ANR	530700	Decl							zval	zval *	streamind
ANR	530701	DeclStmt									
ANR	530702	Decl							char	char *	mbox
ANR	530703	DeclStmt									
ANR	530704	Decl							int	int	mbox_len
ANR	530705	DeclStmt									
ANR	530706	Decl							pils	pils *	imap_le_struct
ANR	530707	DeclStmt									
ANR	530708	Decl							zval	zval *	streamind
ANR	530709	DeclStmt									
ANR	530710	Decl							char	char *	qroot
ANR	530711	DeclStmt									
ANR	530712	Decl							int	int	qroot_len
ANR	530713	DeclStmt									
ANR	530714	Decl							long	long	mailbox_size
ANR	530715	DeclStmt									
ANR	530716	Decl							pils	pils *	imap_le_struct
ANR	530717	DeclStmt									
ANR	530718	Decl							STRINGLIST	STRINGLIST	limits
ANR	530719	DeclStmt									
ANR	530720	Decl							zval	zval *	streamind
ANR	530721	DeclStmt									
ANR	530722	Decl							char	char *	mailbox
ANR	530723	Decl							char	char *	id
ANR	530724	Decl							char	char *	rights
ANR	530725	DeclStmt									
ANR	530726	Decl							int	int	mailbox_len
ANR	530727	Decl							int	int	id_len
ANR	530728	Decl							int	int	rights_len
ANR	530729	DeclStmt									
ANR	530730	Decl							pils	pils *	imap_le_struct
ANR	530731	DeclStmt									
ANR	530732	Decl							zval	zval *	streamind
ANR	530733	DeclStmt									
ANR	530734	Decl							char	char *	mailbox
ANR	530735	DeclStmt									
ANR	530736	Decl							int	int	mailbox_len
ANR	530737	DeclStmt									
ANR	530738	Decl							pils	pils *	imap_le_struct
ANR	530739	DeclStmt									
ANR	530740	Decl							zval	zval *	streamind
ANR	530741	DeclStmt									
ANR	530742	Decl							pils	pils *	imap_le_struct
ANR	530743	DeclStmt									
ANR	530744	Decl							zval	zval *	streamind
ANR	530745	DeclStmt									
ANR	530746	Decl							pils	pils *	imap_le_struct
ANR	530747	DeclStmt									
ANR	530748	Decl							long	long	flags
ANR	530749	DeclStmt									
ANR	530750	Decl							zval	zval *	streamind
ANR	530751	DeclStmt									
ANR	530752	Decl							pils	pils *	imap_le_struct
ANR	530753	DeclStmt									
ANR	530754	Decl							long	long	options
ANR	530755	Decl							long	long	flags
ANR	530756	DeclStmt									
ANR	530757	Decl							int	int	argc
ANR	530758	DeclStmt									
ANR	530759	Decl							zval	zval *	streamind
ANR	530760	DeclStmt									
ANR	530761	Decl							pils	pils *	imap_le_struct
ANR	530762	DeclStmt									
ANR	530763	Decl							unsigned long	unsigned long	i
ANR	530764	DeclStmt									
ANR	530765	Decl							char	char *	t
ANR	530766	DeclStmt									
ANR	530767	Decl							unsigned int	unsigned int	msgno
ANR	530768	DeclStmt									
ANR	530769	Decl							char	char [ MAILTMPLEN ]	tmp
ANR	530770	DeclStmt									
ANR	530771	Decl							MESSAGECACHE	MESSAGECACHE *	cache
ANR	530772	DeclStmt									
ANR	530773	Decl							zval	zval *	streamind
ANR	530774	DeclStmt									
ANR	530775	Decl							long	long	msgno
ANR	530776	Decl							long	long	flags
ANR	530777	DeclStmt									
ANR	530778	Decl							pils	pils *	imap_le_struct
ANR	530779	DeclStmt									
ANR	530780	Decl							int	int	msgindex
ANR	530781	Decl							int	int	argc
ANR	530782	DeclStmt									
ANR	530783	Decl							char	char *	body
ANR	530784	DeclStmt									
ANR	530785	Decl							unsigned long	unsigned long	body_len
ANR	530786	DeclStmt									
ANR	530787	Decl							zval	zval *	streamind
ANR	530788	DeclStmt									
ANR	530789	Decl							long	long	options
ANR	530790	DeclStmt									
ANR	530791	Decl							char	char *	seq
ANR	530792	Decl							char	char *	folder
ANR	530793	DeclStmt									
ANR	530794	Decl							int	int	seq_len
ANR	530795	Decl							int	int	folder_len
ANR	530796	Decl							int	int	argc
ANR	530797	DeclStmt									
ANR	530798	Decl							pils	pils *	imap_le_struct
ANR	530799	DeclStmt									
ANR	530800	Decl							zval	zval *	streamind
ANR	530801	DeclStmt									
ANR	530802	Decl							char	char *	seq
ANR	530803	Decl							char	char *	folder
ANR	530804	DeclStmt									
ANR	530805	Decl							int	int	seq_len
ANR	530806	Decl							int	int	folder_len
ANR	530807	DeclStmt									
ANR	530808	Decl							long	long	options
ANR	530809	DeclStmt									
ANR	530810	Decl							pils	pils *	imap_le_struct
ANR	530811	DeclStmt									
ANR	530812	Decl							int	int	argc
ANR	530813	DeclStmt									
ANR	530814	Decl							zval	zval *	streamind
ANR	530815	DeclStmt									
ANR	530816	Decl							char	char *	folder
ANR	530817	DeclStmt									
ANR	530818	Decl							int	int	folder_len
ANR	530819	DeclStmt									
ANR	530820	Decl							pils	pils *	imap_le_struct
ANR	530821	DeclStmt									
ANR	530822	Decl							zval	zval *	streamind
ANR	530823	DeclStmt									
ANR	530824	Decl							char	char *	old_mailbox
ANR	530825	Decl							char	char *	new_mailbox
ANR	530826	DeclStmt									
ANR	530827	Decl							int	int	old_mailbox_len
ANR	530828	Decl							int	int	new_mailbox_len
ANR	530829	DeclStmt									
ANR	530830	Decl							pils	pils *	imap_le_struct
ANR	530831	DeclStmt									
ANR	530832	Decl							zval	zval *	streamind
ANR	530833	DeclStmt									
ANR	530834	Decl							char	char *	folder
ANR	530835	DeclStmt									
ANR	530836	Decl							int	int	folder_len
ANR	530837	DeclStmt									
ANR	530838	Decl							pils	pils *	imap_le_struct
ANR	530839	DeclStmt									
ANR	530840	Decl							zval	zval *	streamind
ANR	530841	DeclStmt									
ANR	530842	Decl							char	char *	ref
ANR	530843	Decl							char	char *	pat
ANR	530844	DeclStmt									
ANR	530845	Decl							int	int	ref_len
ANR	530846	Decl							int	int	pat_len
ANR	530847	DeclStmt									
ANR	530848	Decl							pils	pils *	imap_le_struct
ANR	530849	DeclStmt									
ANR	530850	Decl							STRINGLIST	STRINGLIST *	cur
ANR	530851	DeclStmt									
ANR	530852	Decl							zval	zval *	streamind
ANR	530853	Decl							zval	zval *	mboxob
ANR	530854	DeclStmt									
ANR	530855	Decl							char	char *	ref
ANR	530856	Decl							char	char *	pat
ANR	530857	DeclStmt									
ANR	530858	Decl							int	int	ref_len
ANR	530859	Decl							int	int	pat_len
ANR	530860	DeclStmt									
ANR	530861	Decl							pils	pils *	imap_le_struct
ANR	530862	DeclStmt									
ANR	530863	Decl							FOBJECTLIST	FOBJECTLIST *	cur
ANR	530864	DeclStmt									
ANR	530865	Decl							char	char *	delim
ANR	530866	DeclStmt									
ANR	530867	Decl							zval	zval *	streamind
ANR	530868	DeclStmt									
ANR	530869	Decl							char	char *	ref
ANR	530870	Decl							char	char *	pat
ANR	530871	Decl							char	char *	content
ANR	530872	DeclStmt									
ANR	530873	Decl							int	int	ref_len
ANR	530874	Decl							int	int	pat_len
ANR	530875	Decl							int	int	content_len
ANR	530876	DeclStmt									
ANR	530877	Decl							pils	pils *	imap_le_struct
ANR	530878	DeclStmt									
ANR	530879	Decl							STRINGLIST	STRINGLIST *	cur
ANR	530880	DeclStmt									
ANR	530881	Decl							zval	zval *	streamind
ANR	530882	DeclStmt									
ANR	530883	Decl							pils	pils *	imap_le_struct
ANR	530884	DeclStmt									
ANR	530885	Decl							char	char [ 100 ]	date
ANR	530886	DeclStmt									
ANR	530887	Decl							zval	zval *	streamind
ANR	530888	Decl							zval	zval * *	sequence
ANR	530889	DeclStmt									
ANR	530890	Decl							pils	pils *	imap_le_struct
ANR	530891	DeclStmt									
ANR	530892	Decl							long	long	flags
ANR	530893	DeclStmt									
ANR	530894	Decl							int	int	argc
ANR	530895	DeclStmt									
ANR	530896	Decl							zval	zval *	streamind
ANR	530897	Decl							zval	zval * *	sequence
ANR	530898	DeclStmt									
ANR	530899	Decl							long	long	flags
ANR	530900	DeclStmt									
ANR	530901	Decl							pils	pils *	imap_le_struct
ANR	530902	DeclStmt									
ANR	530903	Decl							int	int	argc
ANR	530904	DeclStmt									
ANR	530905	Decl							zval	zval *	streamind
ANR	530906	DeclStmt									
ANR	530907	Decl							char	char *	defaulthost
ANR	530908	DeclStmt									
ANR	530909	Decl							int	int	defaulthost_len
ANR	530910	Decl							int	int	argc
ANR	530911	DeclStmt									
ANR	530912	Decl							long	long	msgno
ANR	530913	Decl							long	long	fromlength
ANR	530914	Decl							long	long	subjectlength
ANR	530915	DeclStmt									
ANR	530916	Decl							pils	pils *	imap_le_struct
ANR	530917	DeclStmt									
ANR	530918	Decl							MESSAGECACHE	MESSAGECACHE *	cache
ANR	530919	DeclStmt									
ANR	530920	Decl							ENVELOPE	ENVELOPE *	en
ANR	530921	DeclStmt									
ANR	530922	Decl							char	char [ 2000 ]	dummy
ANR	530923	Decl							char	char [ MAILTMPLEN + 1 ]	fulladdress
ANR	530924	DeclStmt									
ANR	530925	Decl							char	char *	headers
ANR	530926	Decl							char	char *	defaulthost
ANR	530927	DeclStmt									
ANR	530928	Decl							ENVELOPE	ENVELOPE *	en
ANR	530929	DeclStmt									
ANR	530930	Decl							int	int	headers_len
ANR	530931	Decl							int	int	defaulthost_len
ANR	530932	Decl							int	int	argc
ANR	530933	DeclStmt									
ANR	530934	Decl							zval	zval *	streamind
ANR	530935	DeclStmt									
ANR	530936	Decl							char	char *	ref
ANR	530937	Decl							char	char *	pat
ANR	530938	DeclStmt									
ANR	530939	Decl							int	int	ref_len
ANR	530940	Decl							int	int	pat_len
ANR	530941	DeclStmt									
ANR	530942	Decl							pils	pils *	imap_le_struct
ANR	530943	DeclStmt									
ANR	530944	Decl							STRINGLIST	STRINGLIST *	cur
ANR	530945	DeclStmt									
ANR	530946	Decl							zval	zval *	streamind
ANR	530947	Decl							zval	zval *	mboxob
ANR	530948	DeclStmt									
ANR	530949	Decl							char	char *	ref
ANR	530950	Decl							char	char *	pat
ANR	530951	DeclStmt									
ANR	530952	Decl							int	int	ref_len
ANR	530953	Decl							int	int	pat_len
ANR	530954	DeclStmt									
ANR	530955	Decl							pils	pils *	imap_le_struct
ANR	530956	DeclStmt									
ANR	530957	Decl							FOBJECTLIST	FOBJECTLIST *	cur
ANR	530958	DeclStmt									
ANR	530959	Decl							char	char *	delim
ANR	530960	DeclStmt									
ANR	530961	Decl							zval	zval *	streamind
ANR	530962	DeclStmt									
ANR	530963	Decl							char	char *	folder
ANR	530964	DeclStmt									
ANR	530965	Decl							int	int	folder_len
ANR	530966	DeclStmt									
ANR	530967	Decl							pils	pils *	imap_le_struct
ANR	530968	DeclStmt									
ANR	530969	Decl							zval	zval *	streamind
ANR	530970	DeclStmt									
ANR	530971	Decl							char	char *	folder
ANR	530972	DeclStmt									
ANR	530973	Decl							int	int	folder_len
ANR	530974	DeclStmt									
ANR	530975	Decl							pils	pils *	imap_le_struct
ANR	530976	DeclStmt									
ANR	530977	Decl							zval	zval *	streamind
ANR	530978	DeclStmt									
ANR	530979	Decl							long	long	msgno
ANR	530980	Decl							long	long	flags
ANR	530981	DeclStmt									
ANR	530982	Decl							pils	pils *	imap_le_struct
ANR	530983	DeclStmt									
ANR	530984	Decl							BODY	BODY *	body
ANR	530985	DeclStmt									
ANR	530986	Decl							int	int	msgindex
ANR	530987	Decl							int	int	argc
ANR	530988	DeclStmt									
ANR	530989	Decl							zval	zval *	streamind
ANR	530990	DeclStmt									
ANR	530991	Decl							long	long	msgno
ANR	530992	Decl							long	long	flags
ANR	530993	DeclStmt									
ANR	530994	Decl							pils	pils *	imap_le_struct
ANR	530995	DeclStmt									
ANR	530996	Decl							char	char *	body
ANR	530997	Decl							char	char *	sec
ANR	530998	DeclStmt									
ANR	530999	Decl							int	int	sec_len
ANR	531000	DeclStmt									
ANR	531001	Decl							unsigned long	unsigned long	len
ANR	531002	DeclStmt									
ANR	531003	Decl							int	int	argc
ANR	531004	DeclStmt									
ANR	531005	Decl							zval	zval *	streamind
ANR	531006	DeclStmt									
ANR	531007	Decl							long	long	msgno
ANR	531008	Decl							long	long	flags
ANR	531009	DeclStmt									
ANR	531010	Decl							pils	pils *	imap_le_struct
ANR	531011	DeclStmt									
ANR	531012	Decl							char	char *	body
ANR	531013	Decl							char	char *	sec
ANR	531014	DeclStmt									
ANR	531015	Decl							int	int	sec_len
ANR	531016	DeclStmt									
ANR	531017	Decl							unsigned long	unsigned long	len
ANR	531018	DeclStmt									
ANR	531019	Decl							int	int	argc
ANR	531020	DeclStmt									
ANR	531021	Decl							zval	zval *	stream
ANR	531022	Decl							zval	zval * *	out
ANR	531023	DeclStmt									
ANR	531024	Decl							pils	pils *	imap_ptr
ANR	531025	DeclStmt									
ANR	531026	Decl							php_stream	php_stream *	writer
ANR	531027	DeclStmt									
ANR	531028	Decl							char	char *	section
ANR	531029	DeclStmt									
ANR	531030	Decl							int	int	section_len
ANR	531031	Decl							int	int	close_stream
ANR	531032	DeclStmt									
ANR	531033	Decl							long	long	msgno
ANR	531034	Decl							long	long	flags
ANR	531035	DeclStmt									
ANR	531036	Decl							char	char *	text
ANR	531037	Decl							char	char *	decode
ANR	531038	DeclStmt									
ANR	531039	Decl							int	int	text_len
ANR	531040	DeclStmt									
ANR	531041	Decl							unsigned long	unsigned long	newlength
ANR	531042	DeclStmt									
ANR	531043	Decl							char	char *	text
ANR	531044	Decl							char	char *	decode
ANR	531045	DeclStmt									
ANR	531046	Decl							int	int	text_len
ANR	531047	DeclStmt									
ANR	531048	Decl							unsigned long	unsigned long	newlength
ANR	531049	DeclStmt									
ANR	531050	Decl							char	char *	text
ANR	531051	Decl							char	char *	decode
ANR	531052	DeclStmt									
ANR	531053	Decl							int	int	text_len
ANR	531054	DeclStmt									
ANR	531055	Decl							unsigned long	unsigned long	newlength
ANR	531056	DeclStmt									
ANR	531057	Decl							char	char *	text
ANR	531058	Decl							char	char *	decode
ANR	531059	DeclStmt									
ANR	531060	Decl							int	int	text_len
ANR	531061	DeclStmt									
ANR	531062	Decl							unsigned long	unsigned long	newlength
ANR	531063	DeclStmt									
ANR	531064	Decl							zval	zval *	streamind
ANR	531065	DeclStmt									
ANR	531066	Decl							pils	pils *	imap_le_struct
ANR	531067	DeclStmt									
ANR	531068	Decl							char	char [ 100 ]	date
ANR	531069	DeclStmt									
ANR	531070	Decl							unsigned int	unsigned int	msgno
ANR	531071	Decl							unsigned int	unsigned int	unreadmsg
ANR	531072	Decl							unsigned int	unsigned int	deletedmsg
ANR	531073	Decl							unsigned int	unsigned int	msize
ANR	531074	DeclStmt									
ANR	531075	Decl							MESSAGECACHE	MESSAGECACHE *	cache
ANR	531076	DeclStmt									
ANR	531077	Decl							char	char *	mailbox
ANR	531078	Decl							char	char *	host
ANR	531079	Decl							char	char *	personal
ANR	531080	DeclStmt									
ANR	531081	Decl							int	int	mailbox_len
ANR	531082	Decl							int	int	host_len
ANR	531083	Decl							int	int	personal_len
ANR	531084	DeclStmt									
ANR	531085	Decl							ADDRESS	ADDRESS *	addr
ANR	531086	DeclStmt									
ANR	531087	Decl							char	char *	string
ANR	531088	DeclStmt									
ANR	531089	Decl							zval	zval *	tovals
ANR	531090	DeclStmt									
ANR	531091	Decl							char	char *	str
ANR	531092	Decl							char	char *	defaulthost
ANR	531093	Decl							char	char *	str_copy
ANR	531094	DeclStmt									
ANR	531095	Decl							int	int	str_len
ANR	531096	Decl							int	int	defaulthost_len
ANR	531097	DeclStmt									
ANR	531098	Decl							ADDRESS	ADDRESS *	addresstmp
ANR	531099	DeclStmt									
ANR	531100	Decl							ENVELOPE	ENVELOPE *	env
ANR	531101	DeclStmt									
ANR	531102	Decl							char	char *	str
ANR	531103	DeclStmt									
ANR	531104	Decl							int	int	str_len
ANR	531105	DeclStmt									
ANR	531106	Decl							SIZEDTEXT	SIZEDTEXT	src
ANR	531107	Decl							SIZEDTEXT	SIZEDTEXT	dest
ANR	531108	DeclStmt									
ANR	531109	Decl							char	char *	arg
ANR	531110	DeclStmt									
ANR	531111	Decl							const unsigned char	const unsigned char *	in
ANR	531112	Decl							const unsigned char	const unsigned char *	inp
ANR	531113	Decl							const unsigned char	const unsigned char *	endp
ANR	531114	DeclStmt									
ANR	531115	Decl							unsigned char	unsigned char *	out
ANR	531116	Decl							unsigned char	unsigned char *	outp
ANR	531117	DeclStmt									
ANR	531118	Decl							unsigned char	unsigned char	c
ANR	531119	DeclStmt									
ANR	531120	Decl							int	int	arg_len
ANR	531121	Decl							int	int	inlen
ANR	531122	Decl							int	int	outlen
ANR	531123	ClassDef	<unnamed>	2752:1:81008:81143							
ANR	531124	DeclStmt									
ANR	531125	Decl									state
ANR	531126	DeclStmt									
ANR	531127	Decl							char	char *	arg
ANR	531128	DeclStmt									
ANR	531129	Decl							const unsigned char	const unsigned char *	in
ANR	531130	Decl							const unsigned char	const unsigned char *	inp
ANR	531131	Decl							const unsigned char	const unsigned char *	endp
ANR	531132	DeclStmt									
ANR	531133	Decl							unsigned char	unsigned char *	out
ANR	531134	Decl							unsigned char	unsigned char *	outp
ANR	531135	DeclStmt									
ANR	531136	Decl							unsigned char	unsigned char	c
ANR	531137	DeclStmt									
ANR	531138	Decl							int	int	arg_len
ANR	531139	Decl							int	int	inlen
ANR	531140	DeclStmt									
ANR	531141	Decl							size_t	size_t	outlen
ANR	531142	ClassDef	<unnamed>	2892:1:84166:84287							
ANR	531143	DeclStmt									
ANR	531144	Decl									state
ANR	531145	DeclStmt									
ANR	531146	Decl							char	char *	in
ANR	531147	DeclStmt									
ANR	531148	Decl							int	int	in_len
ANR	531149	DeclStmt									
ANR	531150	Decl							unsigned char	unsigned char *	out
ANR	531151	DeclStmt									
ANR	531152	Decl							zval	zval *	streamind
ANR	531153	DeclStmt									
ANR	531154	Decl							char	char *	sequence
ANR	531155	Decl							char	char *	flag
ANR	531156	DeclStmt									
ANR	531157	Decl							int	int	sequence_len
ANR	531158	Decl							int	int	flag_len
ANR	531159	DeclStmt									
ANR	531160	Decl							long	long	flags
ANR	531161	DeclStmt									
ANR	531162	Decl							pils	pils *	imap_le_struct
ANR	531163	DeclStmt									
ANR	531164	Decl							zval	zval *	streamind
ANR	531165	DeclStmt									
ANR	531166	Decl							char	char *	sequence
ANR	531167	Decl							char	char *	flag
ANR	531168	DeclStmt									
ANR	531169	Decl							int	int	sequence_len
ANR	531170	Decl							int	int	flag_len
ANR	531171	DeclStmt									
ANR	531172	Decl							long	long	flags
ANR	531173	DeclStmt									
ANR	531174	Decl							pils	pils *	imap_le_struct
ANR	531175	DeclStmt									
ANR	531176	Decl							int	int	argc
ANR	531177	DeclStmt									
ANR	531178	Decl							zval	zval *	streamind
ANR	531179	DeclStmt									
ANR	531180	Decl							char	char *	criteria
ANR	531181	Decl							char	char *	charset
ANR	531182	DeclStmt									
ANR	531183	Decl							int	int	criteria_len
ANR	531184	Decl							int	int	charset_len
ANR	531185	DeclStmt									
ANR	531186	Decl							long	long	pgm
ANR	531187	Decl							long	long	rev
ANR	531188	Decl							long	long	flags
ANR	531189	DeclStmt									
ANR	531190	Decl							pils	pils *	imap_le_struct
ANR	531191	DeclStmt									
ANR	531192	Decl							unsigned long	unsigned long *	slst
ANR	531193	Decl							unsigned long	unsigned long *	sl
ANR	531194	DeclStmt									
ANR	531195	Decl							char	char *	search_criteria
ANR	531196	DeclStmt									
ANR	531197	Decl							SORTPGM	SORTPGM *	mypgm
ANR	531198	DeclStmt									
ANR	531199	Decl							SEARCHPGM	SEARCHPGM *	spg
ANR	531200	DeclStmt									
ANR	531201	Decl							int	int	argc
ANR	531202	DeclStmt									
ANR	531203	Decl							zval	zval *	streamind
ANR	531204	DeclStmt									
ANR	531205	Decl							long	long	msgno
ANR	531206	Decl							long	long	flags
ANR	531207	DeclStmt									
ANR	531208	Decl							pils	pils *	imap_le_struct
ANR	531209	DeclStmt									
ANR	531210	Decl							int	int	msgindex
ANR	531211	Decl							int	int	argc
ANR	531212	DeclStmt									
ANR	531213	Decl							zval	zval *	streamind
ANR	531214	DeclStmt									
ANR	531215	Decl							long	long	msgno
ANR	531216	DeclStmt									
ANR	531217	Decl							pils	pils *	imap_le_struct
ANR	531218	DeclStmt									
ANR	531219	Decl							int	int	msgindex
ANR	531220	DeclStmt									
ANR	531221	Decl							zval	zval *	streamind
ANR	531222	DeclStmt									
ANR	531223	Decl							long	long	msgno
ANR	531224	DeclStmt									
ANR	531225	Decl							pils	pils *	imap_le_struct
ANR	531226	DeclStmt									
ANR	531227	Decl							zval	zval *	streamind
ANR	531228	DeclStmt									
ANR	531229	Decl							char	char *	mbx
ANR	531230	DeclStmt									
ANR	531231	Decl							int	int	mbx_len
ANR	531232	DeclStmt									
ANR	531233	Decl							long	long	flags
ANR	531234	DeclStmt									
ANR	531235	Decl							pils	pils *	imap_le_struct
ANR	531236	DeclStmt									
ANR	531237	Decl							zval	zval *	streamind
ANR	531238	DeclStmt									
ANR	531239	Decl							long	long	msg
ANR	531240	DeclStmt									
ANR	531241	Decl							char	char *	section
ANR	531242	DeclStmt									
ANR	531243	Decl							int	int	section_len
ANR	531244	DeclStmt									
ANR	531245	Decl							pils	pils *	imap_le_struct
ANR	531246	DeclStmt									
ANR	531247	Decl							zval	zval *	parametres
ANR	531248	Decl							zval	zval *	param
ANR	531249	Decl							zval	zval *	dparametres
ANR	531250	Decl							zval	zval *	dparam
ANR	531251	DeclStmt									
ANR	531252	Decl							PARAMETER	PARAMETER *	par
ANR	531253	Decl							PARAMETER	PARAMETER *	dpar
ANR	531254	DeclStmt									
ANR	531255	Decl							BODY	BODY *	body
ANR	531256	DeclStmt									
ANR	531257	Decl							zval	zval *	streamind
ANR	531258	DeclStmt									
ANR	531259	Decl							char	char *	sequence
ANR	531260	DeclStmt									
ANR	531261	Decl							int	int	sequence_len
ANR	531262	DeclStmt									
ANR	531263	Decl							pils	pils *	imap_le_struct
ANR	531264	DeclStmt									
ANR	531265	Decl							zval	zval *	myoverview
ANR	531266	DeclStmt									
ANR	531267	Decl							char	char *	address
ANR	531268	DeclStmt									
ANR	531269	Decl							long	long	status
ANR	531270	Decl							long	long	flags
ANR	531271	DeclStmt									
ANR	531272	Decl							int	int	argc
ANR	531273	DeclStmt									
ANR	531274	Decl							MESSAGECACHE	MESSAGECACHE *	elt
ANR	531275	DeclStmt									
ANR	531276	Decl							ENVELOPE	ENVELOPE *	env
ANR	531277	DeclStmt									
ANR	531278	Decl							unsigned long	unsigned long	i
ANR	531279	DeclStmt									
ANR	531280	Decl							zval	zval *	envelope
ANR	531281	Decl							zval	zval *	body
ANR	531282	DeclStmt									
ANR	531283	Decl							char	char *	key
ANR	531284	DeclStmt									
ANR	531285	Decl							zval	zval * *	data
ANR	531286	Decl							zval	zval * *	pvalue
ANR	531287	Decl							zval	zval * *	disp_data
ANR	531288	Decl							zval	zval * *	env_data
ANR	531289	DeclStmt									
ANR	531290	Decl							ulong	ulong	ind
ANR	531291	DeclStmt									
ANR	531292	Decl							char	char *	cookie
ANR	531293	DeclStmt									
ANR	531294	Decl							ENVELOPE	ENVELOPE *	env
ANR	531295	DeclStmt									
ANR	531296	Decl							BODY	BODY *	bod
ANR	531297	Decl							BODY	BODY *	topbod
ANR	531298	DeclStmt									
ANR	531299	Decl							PART	PART *	mypart
ANR	531300	Decl							PART	PART *	part
ANR	531301	DeclStmt									
ANR	531302	Decl							PARAMETER	PARAMETER *	param
ANR	531303	Decl							PARAMETER	PARAMETER *	disp_param
ANR	531304	Decl							PARAMETER	PARAMETER *	custom_headers_param
ANR	531305	Decl							PARAMETER	PARAMETER *	tmp_param
ANR	531306	DeclStmt									
ANR	531307	Decl							char	char *	tmp
ANR	531308	Decl							char	char *	mystring
ANR	531309	Decl							char	char *	t
ANR	531310	Decl							char	char *	tempstring
ANR	531311	Decl							char	char *	str_copy
ANR	531312	DeclStmt									
ANR	531313	Decl							int	int	toppart
ANR	531314	DeclStmt									
ANR	531315	Decl							short	short	type
ANR	531316	DeclStmt									
ANR	531317	Decl							int	int	l
ANR	531318	Decl							int	int	l2
ANR	531319	DeclStmt									
ANR	531320	Decl							PARAMETER	PARAMETER *	tp
ANR	531321	DeclStmt									
ANR	531322	Decl							int	int	tsm_err
ANR	531323	DeclStmt									
ANR	531324	Decl							FILE	FILE *	sendmail
ANR	531325	DeclStmt									
ANR	531326	Decl							int	int	ret
ANR	531327	DeclStmt									
ANR	531328	Decl							char	char *	tempMailTo
ANR	531329	DeclStmt									
ANR	531330	Decl							char	char *	tsm_errmsg
ANR	531331	DeclStmt									
ANR	531332	Decl							ADDRESS	ADDRESS *	addr
ANR	531333	DeclStmt									
ANR	531334	Decl							char	char *	bufferTo
ANR	531335	Decl							char	char *	bufferCc
ANR	531336	Decl							char	char *	bufferBcc
ANR	531337	Decl							char	char *	bufferHeader
ANR	531338	DeclStmt									
ANR	531339	Decl							size_t	size_t	offset
ANR	531340	Decl							size_t	size_t	bufferLen
ANR	531341	DeclStmt									
ANR	531342	Decl							size_t	size_t	bt_len
ANR	531343	DeclStmt									
ANR	531344	Decl							define PHP_IMAP_BAD_DEST	define PHP_IMAP_BAD_DEST	PHP_IMAP_CLEAN
ANR	531345	DeclStmt									
ANR	531346	Decl							char	char *	to
ANR	531347	Decl							char	char *	message
ANR	531348	Decl							char	char *	headers
ANR	531349	Decl							char	char *	subject
ANR	531350	Decl							char	char *	cc
ANR	531351	Decl							char	char *	bcc
ANR	531352	Decl							char	char *	rpath
ANR	531353	DeclStmt									
ANR	531354	Decl							int	int	to_len
ANR	531355	Decl							int	int	message_len
ANR	531356	Decl							int	int	headers_len
ANR	531357	Decl							int	int	subject_len
ANR	531358	Decl							int	int	cc_len
ANR	531359	Decl							int	int	bcc_len
ANR	531360	Decl							int	int	rpath_len
ANR	531361	Decl							int	int	argc
ANR	531362	DeclStmt									
ANR	531363	Decl							zval	zval *	streamind
ANR	531364	DeclStmt									
ANR	531365	Decl							char	char *	criteria
ANR	531366	Decl							char	char *	charset
ANR	531367	DeclStmt									
ANR	531368	Decl							int	int	criteria_len
ANR	531369	Decl							int	int	charset_len
ANR	531370	DeclStmt									
ANR	531371	Decl							long	long	flags
ANR	531372	DeclStmt									
ANR	531373	Decl							pils	pils *	imap_le_struct
ANR	531374	DeclStmt									
ANR	531375	Decl							char	char *	search_criteria
ANR	531376	DeclStmt									
ANR	531377	Decl							MESSAGELIST	MESSAGELIST *	cur
ANR	531378	DeclStmt									
ANR	531379	Decl							int	int	argc
ANR	531380	DeclStmt									
ANR	531381	Decl							SEARCHPGM	SEARCHPGM *	pgm
ANR	531382	DeclStmt									
ANR	531383	Decl							STRINGLIST	STRINGLIST *	cur
ANR	531384	DeclStmt									
ANR	531385	Decl							ERRORLIST	ERRORLIST *	cur
ANR	531386	DeclStmt									
ANR	531387	Decl							ERRORLIST	ERRORLIST *	cur
ANR	531388	DeclStmt									
ANR	531389	Decl							zval	zval *	myobject
ANR	531390	DeclStmt									
ANR	531391	Decl							char	char *	str
ANR	531392	Decl							char	char *	string
ANR	531393	Decl							char	char *	charset
ANR	531394	Decl							char	char	encoding
ANR	531395	Decl							char	char *	text
ANR	531396	Decl							char	char *	decode
ANR	531397	DeclStmt									
ANR	531398	Decl							int	int	str_len
ANR	531399	DeclStmt									
ANR	531400	Decl							long	long	charset_token
ANR	531401	Decl							long	long	encoding_token
ANR	531402	Decl							long	long	end_token
ANR	531403	Decl							long	long	end
ANR	531404	Decl							long	long	offset
ANR	531405	Decl							long	long	i
ANR	531406	DeclStmt									
ANR	531407	Decl							unsigned long	unsigned long	newlength
ANR	531408	Function	_php_rfc822_soutr	4319:0:129475:129655							
ANR	531409	FunctionDef	"_php_rfc822_soutr (void * stream , char * string)"		531408	0					
ANR	531410	CompoundStatement		4320:0:129534:129655	531408	0					
ANR	531411	IdentifierDeclStatement	smart_str * ret = ( smart_str * ) stream ;	4321:1:129537:129572	531408	0	True				
ANR	531412	IdentifierDecl	* ret = ( smart_str * ) stream		531408	0					
ANR	531413	IdentifierDeclType	smart_str *		531408	0					
ANR	531414	Identifier	ret		531408	1					
ANR	531415	AssignmentExpression	* ret = ( smart_str * ) stream		531408	2		=			
ANR	531416	Identifier	ret		531408	0					
ANR	531417	CastExpression	( smart_str * ) stream		531408	1					
ANR	531418	CastTarget	smart_str *		531408	0					
ANR	531419	Identifier	stream		531408	1					
ANR	531420	IdentifierDeclStatement	int len = strlen ( string ) ;	4322:1:129575:129599	531408	1	True				
ANR	531421	IdentifierDecl	len = strlen ( string )		531408	0					
ANR	531422	IdentifierDeclType	int		531408	0					
ANR	531423	Identifier	len		531408	1					
ANR	531424	AssignmentExpression	len = strlen ( string )		531408	2		=			
ANR	531425	Identifier	len		531408	0					
ANR	531426	CallExpression	strlen ( string )		531408	1					
ANR	531427	Callee	strlen		531408	0					
ANR	531428	Identifier	strlen		531408	0					
ANR	531429	ArgumentList	string		531408	1					
ANR	531430	Argument	string		531408	0					
ANR	531431	Identifier	string		531408	0					
ANR	531432	ExpressionStatement	"smart_str_appendl ( ret , string , len )"	4324:1:129603:129638	531408	2	True				
ANR	531433	CallExpression	"smart_str_appendl ( ret , string , len )"		531408	0					
ANR	531434	Callee	smart_str_appendl		531408	0					
ANR	531435	Identifier	smart_str_appendl		531408	0					
ANR	531436	ArgumentList	ret		531408	1					
ANR	531437	Argument	ret		531408	0					
ANR	531438	Identifier	ret		531408	0					
ANR	531439	Argument	string		531408	1					
ANR	531440	Identifier	string		531408	0					
ANR	531441	Argument	len		531408	2					
ANR	531442	Identifier	len		531408	0					
ANR	531443	ReturnStatement	return LONGT ;	4325:1:129641:129653	531408	3	True				
ANR	531444	Identifier	LONGT		531408	0					
ANR	531445	ReturnType	static long		531408	1					
ANR	531446	Identifier	_php_rfc822_soutr		531408	2					
ANR	531447	ParameterList	"void * stream , char * string"		531408	3					
ANR	531448	Parameter	void * stream	4319:31:129506:129517	531408	0	True				
ANR	531449	ParameterType	void *		531408	0					
ANR	531450	Identifier	stream		531408	1					
ANR	531451	Parameter	char * string	4319:45:129520:129531	531408	1	True				
ANR	531452	ParameterType	char *		531408	0					
ANR	531453	Identifier	string		531408	1					
ANR	531454	CFGEntryNode	ENTRY		531408		True				
ANR	531455	CFGExitNode	EXIT		531408		True				
ANR	531456	Symbol	ret		531408						
ANR	531457	Symbol	strlen		531408						
ANR	531458	Symbol	string		531408						
ANR	531459	Symbol	len		531408						
ANR	531460	Symbol	stream		531408						
ANR	531461	Symbol	LONGT		531408						
ANR	531462	DeclStmt									
ANR	531463	Decl							char	char [ MAILTMPLEN ]	address
ANR	531464	DeclStmt									
ANR	531465	Decl							smart_str	smart_str	ret
ANR	531466	DeclStmt									
ANR	531467	Decl							RFC822BUFFER	RFC822BUFFER	buf
ANR	531468	Function	_php_rfc822_len	4354:0:130203:130680							
ANR	531469	FunctionDef	_php_rfc822_len (char * str)		531468	0					
ANR	531470	CompoundStatement		4355:0:130241:130680	531468	0					
ANR	531471	IdentifierDeclStatement	int len ;	4356:1:130244:130251	531468	0	True				
ANR	531472	IdentifierDecl	len		531468	0					
ANR	531473	IdentifierDeclType	int		531468	0					
ANR	531474	Identifier	len		531468	1					
ANR	531475	IdentifierDeclStatement	char * p ;	4357:1:130254:130261	531468	1	True				
ANR	531476	IdentifierDecl	* p		531468	0					
ANR	531477	IdentifierDeclType	char *		531468	0					
ANR	531478	Identifier	p		531468	1					
ANR	531479	IfStatement	if ( ! str || ! * str )		531468	2					
ANR	531480	Condition	! str || ! * str	4359:5:130269:130281	531468	0	True				
ANR	531481	OrExpression	! str || ! * str		531468	0		||			
ANR	531482	UnaryOperationExpression	! str		531468	0					
ANR	531483	UnaryOperator	!		531468	0					
ANR	531484	Identifier	str		531468	1					
ANR	531485	UnaryOperationExpression	! * str		531468	1					
ANR	531486	UnaryOperator	!		531468	0					
ANR	531487	UnaryOperationExpression	* str		531468	1					
ANR	531488	UnaryOperator	*		531468	0					
ANR	531489	Identifier	str		531468	1					
ANR	531490	CompoundStatement		5:20:42:42	531468	1					
ANR	531491	ReturnStatement	return 0 ;	4360:2:130288:130296	531468	0	True				
ANR	531492	PrimaryExpression	0		531468	0					
ANR	531493	ExpressionStatement	len = strlen ( str ) + 2	4366:1:130436:130457	531468	3	True				
ANR	531494	AssignmentExpression	len = strlen ( str ) + 2		531468	0		=			
ANR	531495	Identifier	len		531468	0					
ANR	531496	AdditiveExpression	strlen ( str ) + 2		531468	1		+			
ANR	531497	CallExpression	strlen ( str )		531468	0					
ANR	531498	Callee	strlen		531468	0					
ANR	531499	Identifier	strlen		531468	0					
ANR	531500	ArgumentList	str		531468	1					
ANR	531501	Argument	str		531468	0					
ANR	531502	Identifier	str		531468	0					
ANR	531503	PrimaryExpression	2		531468	1					
ANR	531504	ExpressionStatement	p = str	4367:1:130460:130467	531468	4	True				
ANR	531505	AssignmentExpression	p = str		531468	0		=			
ANR	531506	Identifier	p		531468	0					
ANR	531507	Identifier	str		531468	1					
ANR	531508	WhileStatement	"while ( ( p = strpbrk ( p , ""\\\\\\"""" ) ) )"		531468	5					
ANR	531509	Condition	"p = strpbrk ( p , ""\\\\\\"""" )"	4371:8:130619:130642	531468	0	True				
ANR	531510	AssignmentExpression	"p = strpbrk ( p , ""\\\\\\"""" )"		531468	0		=			
ANR	531511	Identifier	p		531468	0					
ANR	531512	CallExpression	"strpbrk ( p , ""\\\\\\"""" )"		531468	1					
ANR	531513	Callee	strpbrk		531468	0					
ANR	531514	Identifier	strpbrk		531468	0					
ANR	531515	ArgumentList	p		531468	1					
ANR	531516	Argument	p		531468	0					
ANR	531517	Identifier	p		531468	0					
ANR	531518	Argument	"""\\\\\\"""""		531468	1					
ANR	531519	PrimaryExpression	"""\\\\\\"""""		531468	0					
ANR	531520	CompoundStatement		17:34:403:403	531468	1					
ANR	531521	ExpressionStatement	p ++	4372:2:130649:130652	531468	0	True				
ANR	531522	PostIncDecOperationExpression	p ++		531468	0					
ANR	531523	Identifier	p		531468	0					
ANR	531524	IncDec	++		531468	1					
ANR	531525	ExpressionStatement	len ++	4373:2:130656:130661	531468	1	True				
ANR	531526	PostIncDecOperationExpression	len ++		531468	0					
ANR	531527	Identifier	len		531468	0					
ANR	531528	IncDec	++		531468	1					
ANR	531529	ReturnStatement	return len ;	4376:1:130668:130678	531468	6	True				
ANR	531530	Identifier	len		531468	0					
ANR	531531	ReturnType	static int		531468	1					
ANR	531532	Identifier	_php_rfc822_len		531468	2					
ANR	531533	ParameterList	char * str		531468	3					
ANR	531534	Parameter	char * str	4354:27:130230:130238	531468	0	True				
ANR	531535	ParameterType	char *		531468	0					
ANR	531536	Identifier	str		531468	1					
ANR	531537	CFGEntryNode	ENTRY		531468		True				
ANR	531538	CFGExitNode	EXIT		531468		True				
ANR	531539	Symbol	str		531468						
ANR	531540	Symbol	p		531468						
ANR	531541	Symbol	strlen		531468						
ANR	531542	Symbol	len		531468						
ANR	531543	Symbol	strpbrk		531468						
ANR	531544	Symbol	* str		531468						
ANR	531545	Function	_php_imap_address_size	4382:0:130731:131332							
ANR	531546	FunctionDef	_php_imap_address_size (ADDRESS * addresslist)		531545	0					
ANR	531547	CompoundStatement		4383:0:130788:131332	531545	0					
ANR	531548	IdentifierDeclStatement	ADDRESS * tmp ;	4384:1:130791:130803	531545	0	True				
ANR	531549	IdentifierDecl	* tmp		531545	0					
ANR	531550	IdentifierDeclType	ADDRESS *		531545	0					
ANR	531551	Identifier	tmp		531545	1					
ANR	531552	IdentifierDeclStatement	"int ret = 0 , num_ent = 0 ;"	4385:1:130806:130826	531545	1	True				
ANR	531553	IdentifierDecl	ret = 0		531545	0					
ANR	531554	IdentifierDeclType	int		531545	0					
ANR	531555	Identifier	ret		531545	1					
ANR	531556	AssignmentExpression	ret = 0		531545	2		=			
ANR	531557	Identifier	ret		531545	0					
ANR	531558	PrimaryExpression	0		531545	1					
ANR	531559	IdentifierDecl	num_ent = 0		531545	1					
ANR	531560	IdentifierDeclType	int		531545	0					
ANR	531561	Identifier	num_ent		531545	1					
ANR	531562	AssignmentExpression	num_ent = 0		531545	2		=			
ANR	531563	Identifier	num_ent		531545	0					
ANR	531564	PrimaryExpression	0		531545	1					
ANR	531565	ExpressionStatement	tmp = addresslist	4387:1:130830:130847	531545	2	True				
ANR	531566	AssignmentExpression	tmp = addresslist		531545	0		=			
ANR	531567	Identifier	tmp		531545	0					
ANR	531568	Identifier	addresslist		531545	1					
ANR	531569	IfStatement	if ( tmp )		531545	3					
ANR	531570	Condition	tmp	4389:5:130855:130857	531545	0	True				
ANR	531571	Identifier	tmp		531545	0					
ANR	531572	DoStatement	do		531545	1					
ANR	531573	CompoundStatement		7:13:74:74	531545	0					
ANR	531574	ExpressionStatement	ret += _php_rfc822_len ( tmp -> personal )	4390:2:130867:130904	531545	0	True				
ANR	531575	AssignmentExpression	ret += _php_rfc822_len ( tmp -> personal )		531545	0		+=			
ANR	531576	Identifier	ret		531545	0					
ANR	531577	CallExpression	_php_rfc822_len ( tmp -> personal )		531545	1					
ANR	531578	Callee	_php_rfc822_len		531545	0					
ANR	531579	Identifier	_php_rfc822_len		531545	0					
ANR	531580	ArgumentList	tmp -> personal		531545	1					
ANR	531581	Argument	tmp -> personal		531545	0					
ANR	531582	PtrMemberAccess	tmp -> personal		531545	0					
ANR	531583	Identifier	tmp		531545	0					
ANR	531584	Identifier	personal		531545	1					
ANR	531585	ExpressionStatement	ret += _php_rfc822_len ( tmp -> adl )	4391:2:130908:130940	531545	1	True				
ANR	531586	AssignmentExpression	ret += _php_rfc822_len ( tmp -> adl )		531545	0		+=			
ANR	531587	Identifier	ret		531545	0					
ANR	531588	CallExpression	_php_rfc822_len ( tmp -> adl )		531545	1					
ANR	531589	Callee	_php_rfc822_len		531545	0					
ANR	531590	Identifier	_php_rfc822_len		531545	0					
ANR	531591	ArgumentList	tmp -> adl		531545	1					
ANR	531592	Argument	tmp -> adl		531545	0					
ANR	531593	PtrMemberAccess	tmp -> adl		531545	0					
ANR	531594	Identifier	tmp		531545	0					
ANR	531595	Identifier	adl		531545	1					
ANR	531596	ExpressionStatement	ret += _php_rfc822_len ( tmp -> mailbox )	4392:2:130944:130980	531545	2	True				
ANR	531597	AssignmentExpression	ret += _php_rfc822_len ( tmp -> mailbox )		531545	0		+=			
ANR	531598	Identifier	ret		531545	0					
ANR	531599	CallExpression	_php_rfc822_len ( tmp -> mailbox )		531545	1					
ANR	531600	Callee	_php_rfc822_len		531545	0					
ANR	531601	Identifier	_php_rfc822_len		531545	0					
ANR	531602	ArgumentList	tmp -> mailbox		531545	1					
ANR	531603	Argument	tmp -> mailbox		531545	0					
ANR	531604	PtrMemberAccess	tmp -> mailbox		531545	0					
ANR	531605	Identifier	tmp		531545	0					
ANR	531606	Identifier	mailbox		531545	1					
ANR	531607	ExpressionStatement	ret += _php_rfc822_len ( tmp -> host )	4393:2:130984:131017	531545	3	True				
ANR	531608	AssignmentExpression	ret += _php_rfc822_len ( tmp -> host )		531545	0		+=			
ANR	531609	Identifier	ret		531545	0					
ANR	531610	CallExpression	_php_rfc822_len ( tmp -> host )		531545	1					
ANR	531611	Callee	_php_rfc822_len		531545	0					
ANR	531612	Identifier	_php_rfc822_len		531545	0					
ANR	531613	ArgumentList	tmp -> host		531545	1					
ANR	531614	Argument	tmp -> host		531545	0					
ANR	531615	PtrMemberAccess	tmp -> host		531545	0					
ANR	531616	Identifier	tmp		531545	0					
ANR	531617	Identifier	host		531545	1					
ANR	531618	ExpressionStatement	num_ent ++	4394:2:131021:131030	531545	4	True				
ANR	531619	PostIncDecOperationExpression	num_ent ++		531545	0					
ANR	531620	Identifier	num_ent		531545	0					
ANR	531621	IncDec	++		531545	1					
ANR	531622	Condition	tmp = tmp -> next	4395:10:131042:131058	531545	1	True				
ANR	531623	AssignmentExpression	tmp = tmp -> next		531545	0		=			
ANR	531624	Identifier	tmp		531545	0					
ANR	531625	PtrMemberAccess	tmp -> next		531545	1					
ANR	531626	Identifier	tmp		531545	0					
ANR	531627	Identifier	next		531545	1					
ANR	531628	ExpressionStatement	ret += ( ret ) ? num_ent * PHP_IMAP_ADDRESS_SIZE_BUF : 0	4402:1:131264:131316	531545	4	True				
ANR	531629	AssignmentExpression	ret += ( ret ) ? num_ent * PHP_IMAP_ADDRESS_SIZE_BUF : 0		531545	0		+=			
ANR	531630	Identifier	ret		531545	0					
ANR	531631	ConditionalExpression	( ret ) ? num_ent * PHP_IMAP_ADDRESS_SIZE_BUF : 0		531545	1					
ANR	531632	Condition	ret		531545	0					
ANR	531633	Identifier	ret		531545	0					
ANR	531634	MultiplicativeExpression	num_ent * PHP_IMAP_ADDRESS_SIZE_BUF		531545	1		*			
ANR	531635	Identifier	num_ent		531545	0					
ANR	531636	Identifier	PHP_IMAP_ADDRESS_SIZE_BUF		531545	1					
ANR	531637	PrimaryExpression	0		531545	2					
ANR	531638	ReturnStatement	return ret ;	4404:1:131320:131330	531545	5	True				
ANR	531639	Identifier	ret		531545	0					
ANR	531640	ReturnType	static int		531545	1					
ANR	531641	Identifier	_php_imap_address_size		531545	2					
ANR	531642	ParameterList	ADDRESS * addresslist		531545	3					
ANR	531643	Parameter	ADDRESS * addresslist	4382:35:130766:130785	531545	0	True				
ANR	531644	ParameterType	ADDRESS *		531545	0					
ANR	531645	Identifier	addresslist		531545	1					
ANR	531646	CFGEntryNode	ENTRY		531545		True				
ANR	531647	CFGExitNode	EXIT		531545		True				
ANR	531648	Symbol	ret		531545						
ANR	531649	Symbol	addresslist		531545						
ANR	531650	Symbol	* tmp		531545						
ANR	531651	Symbol	tmp -> personal		531545						
ANR	531652	Symbol	num_ent		531545						
ANR	531653	Symbol	tmp		531545						
ANR	531654	Symbol	_php_rfc822_len		531545						
ANR	531655	Symbol	tmp -> adl		531545						
ANR	531656	Symbol	tmp -> host		531545						
ANR	531657	Symbol	tmp -> next		531545						
ANR	531658	Symbol	tmp -> mailbox		531545						
ANR	531659	Symbol	PHP_IMAP_ADDRESS_SIZE_BUF		531545						
ANR	531660	DeclStmt									
ANR	531661	Decl							char	char [ SENDBUFLEN ]	address
ANR	531662	DeclStmt									
ANR	531663	Decl							char	char *	fulladdress
ANR	531664	DeclStmt									
ANR	531665	Decl							ADDRESS	ADDRESS *	addresstmp
ANR	531666	DeclStmt									
ANR	531667	Decl							zval	zval *	tmpvals
ANR	531668	DeclStmt									
ANR	531669	Decl							zval	zval *	paddress
ANR	531670	DeclStmt									
ANR	531671	Decl							char	char *	fulladdress
ANR	531672	DeclStmt									
ANR	531673	Decl							zval	zval *	parametres
ANR	531674	Decl							zval	zval *	param
ANR	531675	Decl							zval	zval *	dparametres
ANR	531676	Decl							zval	zval *	dparam
ANR	531677	DeclStmt									
ANR	531678	Decl							PARAMETER	PARAMETER *	par
ANR	531679	Decl							PARAMETER	PARAMETER *	dpar
ANR	531680	DeclStmt									
ANR	531681	Decl							PART	PART *	part
ANR	531682	Function	build_thread_tree_helper	4668:0:139000:139727							
ANR	531683	FunctionDef	"build_thread_tree_helper (THREADNODE * cur , zval * tree , long * numNodes , char * buf)"		531682	0					
ANR	531684	CompoundStatement		4669:0:139093:139727	531682	0					
ANR	531685	IdentifierDeclStatement	unsigned long thisNode = * numNodes ;	4670:1:139096:139130	531682	0	True				
ANR	531686	IdentifierDecl	thisNode = * numNodes		531682	0					
ANR	531687	IdentifierDeclType	unsigned long		531682	0					
ANR	531688	Identifier	thisNode		531682	1					
ANR	531689	AssignmentExpression	thisNode = * numNodes		531682	2		=			
ANR	531690	Identifier	thisNode		531682	0					
ANR	531691	UnaryOperationExpression	* numNodes		531682	1					
ANR	531692	UnaryOperator	*		531682	0					
ANR	531693	Identifier	numNodes		531682	1					
ANR	531694	ExpressionStatement	"snprintf ( buf , 25 , ""%ld.num"" , thisNode )"	4673:1:139156:139194	531682	1	True				
ANR	531695	CallExpression	"snprintf ( buf , 25 , ""%ld.num"" , thisNode )"		531682	0					
ANR	531696	Callee	snprintf		531682	0					
ANR	531697	Identifier	snprintf		531682	0					
ANR	531698	ArgumentList	buf		531682	1					
ANR	531699	Argument	buf		531682	0					
ANR	531700	Identifier	buf		531682	0					
ANR	531701	Argument	25		531682	1					
ANR	531702	PrimaryExpression	25		531682	0					
ANR	531703	Argument	"""%ld.num"""		531682	2					
ANR	531704	PrimaryExpression	"""%ld.num"""		531682	0					
ANR	531705	Argument	thisNode		531682	3					
ANR	531706	Identifier	thisNode		531682	0					
ANR	531707	ExpressionStatement	"add_assoc_long ( tree , buf , cur -> num )"	4675:1:139198:139233	531682	2	True				
ANR	531708	CallExpression	"add_assoc_long ( tree , buf , cur -> num )"		531682	0					
ANR	531709	Callee	add_assoc_long		531682	0					
ANR	531710	Identifier	add_assoc_long		531682	0					
ANR	531711	ArgumentList	tree		531682	1					
ANR	531712	Argument	tree		531682	0					
ANR	531713	Identifier	tree		531682	0					
ANR	531714	Argument	buf		531682	1					
ANR	531715	Identifier	buf		531682	0					
ANR	531716	Argument	cur -> num		531682	2					
ANR	531717	PtrMemberAccess	cur -> num		531682	0					
ANR	531718	Identifier	cur		531682	0					
ANR	531719	Identifier	num		531682	1					
ANR	531720	ExpressionStatement	"snprintf ( buf , 25 , ""%ld.next"" , thisNode )"	4677:1:139237:139276	531682	3	True				
ANR	531721	CallExpression	"snprintf ( buf , 25 , ""%ld.next"" , thisNode )"		531682	0					
ANR	531722	Callee	snprintf		531682	0					
ANR	531723	Identifier	snprintf		531682	0					
ANR	531724	ArgumentList	buf		531682	1					
ANR	531725	Argument	buf		531682	0					
ANR	531726	Identifier	buf		531682	0					
ANR	531727	Argument	25		531682	1					
ANR	531728	PrimaryExpression	25		531682	0					
ANR	531729	Argument	"""%ld.next"""		531682	2					
ANR	531730	PrimaryExpression	"""%ld.next"""		531682	0					
ANR	531731	Argument	thisNode		531682	3					
ANR	531732	Identifier	thisNode		531682	0					
ANR	531733	IfStatement	if ( cur -> next )		531682	4					
ANR	531734	Condition	cur -> next	4678:4:139282:139290	531682	0	True				
ANR	531735	PtrMemberAccess	cur -> next		531682	0					
ANR	531736	Identifier	cur		531682	0					
ANR	531737	Identifier	next		531682	1					
ANR	531738	CompoundStatement		10:15:199:199	531682	1					
ANR	531739	ExpressionStatement	( * numNodes ) ++	4679:2:139297:139310	531682	0	True				
ANR	531740	PostIncDecOperationExpression	( * numNodes ) ++		531682	0					
ANR	531741	UnaryOperationExpression	* numNodes		531682	0					
ANR	531742	UnaryOperator	*		531682	0					
ANR	531743	Identifier	numNodes		531682	1					
ANR	531744	IncDec	++		531682	1					
ANR	531745	ExpressionStatement	"add_assoc_long ( tree , buf , * numNodes )"	4680:2:139314:139350	531682	1	True				
ANR	531746	CallExpression	"add_assoc_long ( tree , buf , * numNodes )"		531682	0					
ANR	531747	Callee	add_assoc_long		531682	0					
ANR	531748	Identifier	add_assoc_long		531682	0					
ANR	531749	ArgumentList	tree		531682	1					
ANR	531750	Argument	tree		531682	0					
ANR	531751	Identifier	tree		531682	0					
ANR	531752	Argument	buf		531682	1					
ANR	531753	Identifier	buf		531682	0					
ANR	531754	Argument	* numNodes		531682	2					
ANR	531755	UnaryOperationExpression	* numNodes		531682	0					
ANR	531756	UnaryOperator	*		531682	0					
ANR	531757	Identifier	numNodes		531682	1					
ANR	531758	ExpressionStatement	"build_thread_tree_helper ( cur -> next , tree , numNodes , buf )"	4681:2:139354:139410	531682	2	True				
ANR	531759	CallExpression	"build_thread_tree_helper ( cur -> next , tree , numNodes , buf )"		531682	0					
ANR	531760	Callee	build_thread_tree_helper		531682	0					
ANR	531761	Identifier	build_thread_tree_helper		531682	0					
ANR	531762	ArgumentList	cur -> next		531682	1					
ANR	531763	Argument	cur -> next		531682	0					
ANR	531764	PtrMemberAccess	cur -> next		531682	0					
ANR	531765	Identifier	cur		531682	0					
ANR	531766	Identifier	next		531682	1					
ANR	531767	Argument	tree		531682	1					
ANR	531768	Identifier	tree		531682	0					
ANR	531769	Argument	numNodes		531682	2					
ANR	531770	Identifier	numNodes		531682	0					
ANR	531771	Argument	buf		531682	3					
ANR	531772	Identifier	buf		531682	0					
ANR	531773	ElseStatement	else		531682	0					
ANR	531774	CompoundStatement		14:8:326:326	531682	0					
ANR	531775	ExpressionStatement	"add_assoc_long ( tree , buf , 0 )"	4683:2:139445:139473	531682	0	True				
ANR	531776	CallExpression	"add_assoc_long ( tree , buf , 0 )"		531682	0					
ANR	531777	Callee	add_assoc_long		531682	0					
ANR	531778	Identifier	add_assoc_long		531682	0					
ANR	531779	ArgumentList	tree		531682	1					
ANR	531780	Argument	tree		531682	0					
ANR	531781	Identifier	tree		531682	0					
ANR	531782	Argument	buf		531682	1					
ANR	531783	Identifier	buf		531682	0					
ANR	531784	Argument	0		531682	2					
ANR	531785	PrimaryExpression	0		531682	0					
ANR	531786	ExpressionStatement	"snprintf ( buf , 25 , ""%ld.branch"" , thisNode )"	4686:1:139480:139521	531682	5	True				
ANR	531787	CallExpression	"snprintf ( buf , 25 , ""%ld.branch"" , thisNode )"		531682	0					
ANR	531788	Callee	snprintf		531682	0					
ANR	531789	Identifier	snprintf		531682	0					
ANR	531790	ArgumentList	buf		531682	1					
ANR	531791	Argument	buf		531682	0					
ANR	531792	Identifier	buf		531682	0					
ANR	531793	Argument	25		531682	1					
ANR	531794	PrimaryExpression	25		531682	0					
ANR	531795	Argument	"""%ld.branch"""		531682	2					
ANR	531796	PrimaryExpression	"""%ld.branch"""		531682	0					
ANR	531797	Argument	thisNode		531682	3					
ANR	531798	Identifier	thisNode		531682	0					
ANR	531799	IfStatement	if ( cur -> branch )		531682	6					
ANR	531800	Condition	cur -> branch	4687:4:139527:139537	531682	0	True				
ANR	531801	PtrMemberAccess	cur -> branch		531682	0					
ANR	531802	Identifier	cur		531682	0					
ANR	531803	Identifier	branch		531682	1					
ANR	531804	CompoundStatement		19:17:446:446	531682	1					
ANR	531805	ExpressionStatement	( * numNodes ) ++	4688:2:139544:139557	531682	0	True				
ANR	531806	PostIncDecOperationExpression	( * numNodes ) ++		531682	0					
ANR	531807	UnaryOperationExpression	* numNodes		531682	0					
ANR	531808	UnaryOperator	*		531682	0					
ANR	531809	Identifier	numNodes		531682	1					
ANR	531810	IncDec	++		531682	1					
ANR	531811	ExpressionStatement	"add_assoc_long ( tree , buf , * numNodes )"	4689:2:139561:139597	531682	1	True				
ANR	531812	CallExpression	"add_assoc_long ( tree , buf , * numNodes )"		531682	0					
ANR	531813	Callee	add_assoc_long		531682	0					
ANR	531814	Identifier	add_assoc_long		531682	0					
ANR	531815	ArgumentList	tree		531682	1					
ANR	531816	Argument	tree		531682	0					
ANR	531817	Identifier	tree		531682	0					
ANR	531818	Argument	buf		531682	1					
ANR	531819	Identifier	buf		531682	0					
ANR	531820	Argument	* numNodes		531682	2					
ANR	531821	UnaryOperationExpression	* numNodes		531682	0					
ANR	531822	UnaryOperator	*		531682	0					
ANR	531823	Identifier	numNodes		531682	1					
ANR	531824	ExpressionStatement	"build_thread_tree_helper ( cur -> branch , tree , numNodes , buf )"	4690:2:139601:139659	531682	2	True				
ANR	531825	CallExpression	"build_thread_tree_helper ( cur -> branch , tree , numNodes , buf )"		531682	0					
ANR	531826	Callee	build_thread_tree_helper		531682	0					
ANR	531827	Identifier	build_thread_tree_helper		531682	0					
ANR	531828	ArgumentList	cur -> branch		531682	1					
ANR	531829	Argument	cur -> branch		531682	0					
ANR	531830	PtrMemberAccess	cur -> branch		531682	0					
ANR	531831	Identifier	cur		531682	0					
ANR	531832	Identifier	branch		531682	1					
ANR	531833	Argument	tree		531682	1					
ANR	531834	Identifier	tree		531682	0					
ANR	531835	Argument	numNodes		531682	2					
ANR	531836	Identifier	numNodes		531682	0					
ANR	531837	Argument	buf		531682	3					
ANR	531838	Identifier	buf		531682	0					
ANR	531839	ElseStatement	else		531682	0					
ANR	531840	CompoundStatement		23:8:575:575	531682	0					
ANR	531841	ExpressionStatement	"add_assoc_long ( tree , buf , 0 )"	4692:2:139694:139722	531682	0	True				
ANR	531842	CallExpression	"add_assoc_long ( tree , buf , 0 )"		531682	0					
ANR	531843	Callee	add_assoc_long		531682	0					
ANR	531844	Identifier	add_assoc_long		531682	0					
ANR	531845	ArgumentList	tree		531682	1					
ANR	531846	Argument	tree		531682	0					
ANR	531847	Identifier	tree		531682	0					
ANR	531848	Argument	buf		531682	1					
ANR	531849	Identifier	buf		531682	0					
ANR	531850	Argument	0		531682	2					
ANR	531851	PrimaryExpression	0		531682	0					
ANR	531852	ReturnType	static void		531682	1					
ANR	531853	Identifier	build_thread_tree_helper		531682	2					
ANR	531854	ParameterList	"THREADNODE * cur , zval * tree , long * numNodes , char * buf"		531682	3					
ANR	531855	Parameter	THREADNODE * cur	4668:37:139037:139051	531682	0	True				
ANR	531856	ParameterType	THREADNODE *		531682	0					
ANR	531857	Identifier	cur		531682	1					
ANR	531858	Parameter	zval * tree	4668:54:139054:139063	531682	1	True				
ANR	531859	ParameterType	zval *		531682	0					
ANR	531860	Identifier	tree		531682	1					
ANR	531861	Parameter	long * numNodes	4668:66:139066:139079	531682	2	True				
ANR	531862	ParameterType	long *		531682	0					
ANR	531863	Identifier	numNodes		531682	1					
ANR	531864	Parameter	char * buf	4668:82:139082:139090	531682	3	True				
ANR	531865	ParameterType	char *		531682	0					
ANR	531866	Identifier	buf		531682	1					
ANR	531867	CFGEntryNode	ENTRY		531682		True				
ANR	531868	CFGExitNode	EXIT		531682		True				
ANR	531869	Symbol	cur		531682						
ANR	531870	Symbol	numNodes		531682						
ANR	531871	Symbol	buf		531682						
ANR	531872	Symbol	* numNodes		531682						
ANR	531873	Symbol	* cur		531682						
ANR	531874	Symbol	thisNode		531682						
ANR	531875	Symbol	tree		531682						
ANR	531876	Symbol	cur -> num		531682						
ANR	531877	Symbol	cur -> branch		531682						
ANR	531878	Symbol	cur -> next		531682						
ANR	531879	Function	build_thread_tree	4699:0:139769:139960							
ANR	531880	FunctionDef	"build_thread_tree (THREADNODE * top , zval * * tree)"		531879	0					
ANR	531881	CompoundStatement		4700:0:139828:139960	531879	0					
ANR	531882	IdentifierDeclStatement	long numNodes = 0 ;	4701:1:139831:139848	531879	0	True				
ANR	531883	IdentifierDecl	numNodes = 0		531879	0					
ANR	531884	IdentifierDeclType	long		531879	0					
ANR	531885	Identifier	numNodes		531879	1					
ANR	531886	AssignmentExpression	numNodes = 0		531879	2		=			
ANR	531887	Identifier	numNodes		531879	0					
ANR	531888	PrimaryExpression	0		531879	1					
ANR	531889	IdentifierDeclStatement	char buf [ 25 ] ;	4702:1:139851:139863	531879	1	True				
ANR	531890	IdentifierDecl	buf [ 25 ]		531879	0					
ANR	531891	IdentifierDeclType	char [ 25 ]		531879	0					
ANR	531892	Identifier	buf		531879	1					
ANR	531893	PrimaryExpression	25		531879	2					
ANR	531894	ExpressionStatement	array_init ( * tree )	4704:1:139867:139884	531879	2	True				
ANR	531895	CallExpression	array_init ( * tree )		531879	0					
ANR	531896	Callee	array_init		531879	0					
ANR	531897	Identifier	array_init		531879	0					
ANR	531898	ArgumentList	* tree		531879	1					
ANR	531899	Argument	* tree		531879	0					
ANR	531900	UnaryOperationExpression	* tree		531879	0					
ANR	531901	UnaryOperator	*		531879	0					
ANR	531902	Identifier	tree		531879	1					
ANR	531903	ExpressionStatement	"build_thread_tree_helper ( top , * tree , & numNodes , buf )"	4706:1:139888:139940	531879	3	True				
ANR	531904	CallExpression	"build_thread_tree_helper ( top , * tree , & numNodes , buf )"		531879	0					
ANR	531905	Callee	build_thread_tree_helper		531879	0					
ANR	531906	Identifier	build_thread_tree_helper		531879	0					
ANR	531907	ArgumentList	top		531879	1					
ANR	531908	Argument	top		531879	0					
ANR	531909	Identifier	top		531879	0					
ANR	531910	Argument	* tree		531879	1					
ANR	531911	UnaryOperationExpression	* tree		531879	0					
ANR	531912	UnaryOperator	*		531879	0					
ANR	531913	Identifier	tree		531879	1					
ANR	531914	Argument	& numNodes		531879	2					
ANR	531915	UnaryOperationExpression	& numNodes		531879	0					
ANR	531916	UnaryOperator	&		531879	0					
ANR	531917	Identifier	numNodes		531879	1					
ANR	531918	Argument	buf		531879	3					
ANR	531919	Identifier	buf		531879	0					
ANR	531920	ReturnStatement	return SUCCESS ;	4708:1:139944:139958	531879	4	True				
ANR	531921	Identifier	SUCCESS		531879	0					
ANR	531922	ReturnType	static int		531879	1					
ANR	531923	Identifier	build_thread_tree		531879	2					
ANR	531924	ParameterList	"THREADNODE * top , zval * * tree"		531879	3					
ANR	531925	Parameter	THREADNODE * top	4699:29:139798:139812	531879	0	True				
ANR	531926	ParameterType	THREADNODE *		531879	0					
ANR	531927	Identifier	top		531879	1					
ANR	531928	Parameter	zval * * tree	4699:46:139815:139825	531879	1	True				
ANR	531929	ParameterType	zval * *		531879	0					
ANR	531930	Identifier	tree		531879	1					
ANR	531931	CFGEntryNode	ENTRY		531879		True				
ANR	531932	CFGExitNode	EXIT		531879		True				
ANR	531933	Symbol	* tree		531879						
ANR	531934	Symbol	numNodes		531879						
ANR	531935	Symbol	buf		531879						
ANR	531936	Symbol	SUCCESS		531879						
ANR	531937	Symbol	top		531879						
ANR	531938	Symbol	tree		531879						
ANR	531939	Symbol	& numNodes		531879						
ANR	531940	DeclStmt									
ANR	531941	Decl							zval	zval *	streamind
ANR	531942	DeclStmt									
ANR	531943	Decl							pils	pils *	imap_le_struct
ANR	531944	DeclStmt									
ANR	531945	Decl							long	long	flags
ANR	531946	DeclStmt									
ANR	531947	Decl							char	char [ ]	criteria
ANR	531948	DeclStmt									
ANR	531949	Decl							THREADNODE	THREADNODE *	top
ANR	531950	DeclStmt									
ANR	531951	Decl							int	int	argc
ANR	531952	DeclStmt									
ANR	531953	Decl							SEARCHPGM	SEARCHPGM *	pgm
ANR	531954	DeclStmt									
ANR	531955	Decl							long	long	ttype
ANR	531956	Decl							long	long	timeout
ANR	531957	DeclStmt									
ANR	531958	Decl							int	int	timeout_type
ANR	531959	Function	php_mail_gets	4810:0:142126:143110							
ANR	531960	FunctionDef	"php_mail_gets (readfn_t f , void * stream , unsigned long size , GETS_DATA * md)"		531959	0					
ANR	531961	CompoundStatement		4811:0:142224:143110	531959	0					
ANR	531962	ExpressionStatement	TSRMLS_FETCH ( )	4812:1:142227:142241	531959	0	True				
ANR	531963	CallExpression	TSRMLS_FETCH ( )		531959	0					
ANR	531964	Callee	TSRMLS_FETCH		531959	0					
ANR	531965	Identifier	TSRMLS_FETCH		531959	0					
ANR	531966	ArgumentList			531959	1					
ANR	531967	IfStatement	if ( IMAPG ( gets_stream ) )		531959	1					
ANR	531968	Condition	IMAPG ( gets_stream )	4816:5:142333:142350	531959	0	True				
ANR	531969	CallExpression	IMAPG ( gets_stream )		531959	0					
ANR	531970	Callee	IMAPG		531959	0					
ANR	531971	Identifier	IMAPG		531959	0					
ANR	531972	ArgumentList	gets_stream		531959	1					
ANR	531973	Argument	gets_stream		531959	0					
ANR	531974	Identifier	gets_stream		531959	0					
ANR	531975	CompoundStatement		7:2:132:157	531959	1					
ANR	531976	IdentifierDeclStatement	char buf [ GETS_FETCH_SIZE ] ;	4817:2:142357:142382	531959	0	True				
ANR	531977	IdentifierDecl	buf [ GETS_FETCH_SIZE ]		531959	0					
ANR	531978	IdentifierDeclType	char [ GETS_FETCH_SIZE ]		531959	0					
ANR	531979	Identifier	buf		531959	1					
ANR	531980	Identifier	GETS_FETCH_SIZE		531959	2					
ANR	531981	WhileStatement	while ( size )		531959	1					
ANR	531982	Condition	size	4819:9:142394:142397	531959	0	True				
ANR	531983	Identifier	size		531959	0					
ANR	531984	CompoundStatement		10:3:180:198	531959	1					
ANR	531985	IdentifierDeclStatement	unsigned long read ;	4820:3:142405:142423	531959	0	True				
ANR	531986	IdentifierDecl	read		531959	0					
ANR	531987	IdentifierDeclType	unsigned long		531959	0					
ANR	531988	Identifier	read		531959	1					
ANR	531989	IfStatement	if ( size > GETS_FETCH_SIZE )		531959	1					
ANR	531990	Condition	size > GETS_FETCH_SIZE	4822:7:142433:142454	531959	0	True				
ANR	531991	RelationalExpression	size > GETS_FETCH_SIZE		531959	0		>			
ANR	531992	Identifier	size		531959	0					
ANR	531993	Identifier	GETS_FETCH_SIZE		531959	1					
ANR	531994	CompoundStatement		12:31:232:232	531959	1					
ANR	531995	ExpressionStatement	read = GETS_FETCH_SIZE	4823:4:142463:142485	531959	0	True				
ANR	531996	AssignmentExpression	read = GETS_FETCH_SIZE		531959	0		=			
ANR	531997	Identifier	read		531959	0					
ANR	531998	Identifier	GETS_FETCH_SIZE		531959	1					
ANR	531999	ExpressionStatement	size -= GETS_FETCH_SIZE	4824:4:142491:142513	531959	1	True				
ANR	532000	AssignmentExpression	size -= GETS_FETCH_SIZE		531959	0		-=			
ANR	532001	Identifier	size		531959	0					
ANR	532002	Identifier	GETS_FETCH_SIZE		531959	1					
ANR	532003	ElseStatement	else		531959	0					
ANR	532004	CompoundStatement		15:10:300:300	531959	0					
ANR	532005	ExpressionStatement	read = size	4826:4:142531:142542	531959	0	True				
ANR	532006	AssignmentExpression	read = size		531959	0		=			
ANR	532007	Identifier	read		531959	0					
ANR	532008	Identifier	size		531959	1					
ANR	532009	ExpressionStatement	size = 0	4827:4:142548:142556	531959	1	True				
ANR	532010	AssignmentExpression	size = 0		531959	0		=			
ANR	532011	Identifier	size		531959	0					
ANR	532012	PrimaryExpression	0		531959	1					
ANR	532013	IfStatement	"if ( ! f ( stream , read , buf ) )"		531959	2					
ANR	532014	Condition	"! f ( stream , read , buf )"	4830:7:142571:142591	531959	0	True				
ANR	532015	UnaryOperationExpression	"! f ( stream , read , buf )"		531959	0					
ANR	532016	UnaryOperator	!		531959	0					
ANR	532017	CallExpression	"f ( stream , read , buf )"		531959	1					
ANR	532018	Callee	f		531959	0					
ANR	532019	Identifier	f		531959	0					
ANR	532020	ArgumentList	stream		531959	1					
ANR	532021	Argument	stream		531959	0					
ANR	532022	Identifier	stream		531959	0					
ANR	532023	Argument	read		531959	1					
ANR	532024	Identifier	read		531959	0					
ANR	532025	Argument	buf		531959	2					
ANR	532026	Identifier	buf		531959	0					
ANR	532027	CompoundStatement		20:30:369:369	531959	1					
ANR	532028	Statement	php_error_docref	4831:4:142600:142615	531959	0	True				
ANR	532029	Statement	(	4831:20:142616:142616	531959	1	True				
ANR	532030	Statement	NULL	4831:21:142617:142620	531959	2	True				
ANR	532031	Statement	TSRMLS_CC	4831:26:142622:142630	531959	3	True				
ANR	532032	Statement	","	4831:35:142631:142631	531959	4	True				
ANR	532033	Statement	E_WARNING	4831:37:142633:142641	531959	5	True				
ANR	532034	Statement	","	4831:46:142642:142642	531959	6	True				
ANR	532035	Statement	"""Failed to read from socket"""	4831:48:142644:142671	531959	7	True				
ANR	532036	Statement	)	4831:76:142672:142672	531959	8	True				
ANR	532037	ExpressionStatement		4831:77:142673:142673	531959	9	True				
ANR	532038	BreakStatement	break ;	4832:4:142679:142684	531959	10	True				
ANR	532039	ElseStatement	else		531959	0					
ANR	532040	IfStatement	"if ( read != php_stream_write ( IMAPG ( gets_stream ) , buf , read ) )"		531959	0					
ANR	532041	Condition	"read != php_stream_write ( IMAPG ( gets_stream ) , buf , read )"	4833:14:142700:142754	531959	0	True				
ANR	532042	EqualityExpression	"read != php_stream_write ( IMAPG ( gets_stream ) , buf , read )"		531959	0		!=			
ANR	532043	Identifier	read		531959	0					
ANR	532044	CallExpression	"php_stream_write ( IMAPG ( gets_stream ) , buf , read )"		531959	1					
ANR	532045	Callee	php_stream_write		531959	0					
ANR	532046	Identifier	php_stream_write		531959	0					
ANR	532047	ArgumentList	IMAPG ( gets_stream )		531959	1					
ANR	532048	Argument	IMAPG ( gets_stream )		531959	0					
ANR	532049	CallExpression	IMAPG ( gets_stream )		531959	0					
ANR	532050	Callee	IMAPG		531959	0					
ANR	532051	Identifier	IMAPG		531959	0					
ANR	532052	ArgumentList	gets_stream		531959	1					
ANR	532053	Argument	gets_stream		531959	0					
ANR	532054	Identifier	gets_stream		531959	0					
ANR	532055	Argument	buf		531959	1					
ANR	532056	Identifier	buf		531959	0					
ANR	532057	Argument	read		531959	2					
ANR	532058	Identifier	read		531959	0					
ANR	532059	CompoundStatement		23:71:532:532	531959	1					
ANR	532060	Statement	php_error_docref	4834:4:142763:142778	531959	0	True				
ANR	532061	Statement	(	4834:20:142779:142779	531959	1	True				
ANR	532062	Statement	NULL	4834:21:142780:142783	531959	2	True				
ANR	532063	Statement	TSRMLS_CC	4834:26:142785:142793	531959	3	True				
ANR	532064	Statement	","	4834:35:142794:142794	531959	4	True				
ANR	532065	Statement	E_WARNING	4834:37:142796:142804	531959	5	True				
ANR	532066	Statement	","	4834:46:142805:142805	531959	6	True				
ANR	532067	Statement	"""Failed to write to stream"""	4834:48:142807:142833	531959	7	True				
ANR	532068	Statement	)	4834:75:142834:142834	531959	8	True				
ANR	532069	ExpressionStatement		4834:76:142835:142835	531959	9	True				
ANR	532070	BreakStatement	break ;	4835:4:142841:142846	531959	10	True				
ANR	532071	ReturnStatement	return NULL ;	4838:2:142859:142870	531959	2	True				
ANR	532072	Identifier	NULL		531959	0					
ANR	532073	ElseStatement	else		531959	0					
ANR	532074	CompoundStatement		30:2:659:692	531959	0					
ANR	532075	IdentifierDeclStatement	"char * buf = pemalloc ( size + 1 , 1 ) ;"	4840:2:142884:142917	531959	0	True				
ANR	532076	IdentifierDecl	"* buf = pemalloc ( size + 1 , 1 )"		531959	0					
ANR	532077	IdentifierDeclType	char *		531959	0					
ANR	532078	Identifier	buf		531959	1					
ANR	532079	AssignmentExpression	"* buf = pemalloc ( size + 1 , 1 )"		531959	2		=			
ANR	532080	Identifier	buf		531959	0					
ANR	532081	CallExpression	"pemalloc ( size + 1 , 1 )"		531959	1					
ANR	532082	Callee	pemalloc		531959	0					
ANR	532083	Identifier	pemalloc		531959	0					
ANR	532084	ArgumentList	size + 1		531959	1					
ANR	532085	Argument	size + 1		531959	0					
ANR	532086	AdditiveExpression	size + 1		531959	0		+			
ANR	532087	Identifier	size		531959	0					
ANR	532088	PrimaryExpression	1		531959	1					
ANR	532089	Argument	1		531959	1					
ANR	532090	PrimaryExpression	1		531959	0					
ANR	532091	IfStatement	"if ( f ( stream , size , buf ) )"		531959	1					
ANR	532092	Condition	"f ( stream , size , buf )"	4842:6:142926:142945	531959	0	True				
ANR	532093	CallExpression	"f ( stream , size , buf )"		531959	0					
ANR	532094	Callee	f		531959	0					
ANR	532095	Identifier	f		531959	0					
ANR	532096	ArgumentList	stream		531959	1					
ANR	532097	Argument	stream		531959	0					
ANR	532098	Identifier	stream		531959	0					
ANR	532099	Argument	size		531959	1					
ANR	532100	Identifier	size		531959	0					
ANR	532101	Argument	buf		531959	2					
ANR	532102	Identifier	buf		531959	0					
ANR	532103	CompoundStatement		32:28:723:723	531959	1					
ANR	532104	ExpressionStatement	buf [ size ] = '\\0'	4843:3:142953:142969	531959	0	True				
ANR	532105	AssignmentExpression	buf [ size ] = '\\0'		531959	0		=			
ANR	532106	ArrayIndexing	buf [ size ]		531959	0					
ANR	532107	Identifier	buf		531959	0					
ANR	532108	Identifier	size		531959	1					
ANR	532109	PrimaryExpression	'\\0'		531959	1					
ANR	532110	ElseStatement	else		531959	0					
ANR	532111	CompoundStatement		34:9:755:755	531959	0					
ANR	532112	Statement	php_error_docref	4845:3:142985:143000	531959	0	True				
ANR	532113	Statement	(	4845:19:143001:143001	531959	1	True				
ANR	532114	Statement	NULL	4845:20:143002:143005	531959	2	True				
ANR	532115	Statement	TSRMLS_CC	4845:25:143007:143015	531959	3	True				
ANR	532116	Statement	","	4845:34:143016:143016	531959	4	True				
ANR	532117	Statement	E_WARNING	4845:36:143018:143026	531959	5	True				
ANR	532118	Statement	","	4845:45:143027:143027	531959	6	True				
ANR	532119	Statement	"""Failed to read from socket"""	4845:47:143029:143056	531959	7	True				
ANR	532120	Statement	)	4845:75:143057:143057	531959	8	True				
ANR	532121	ExpressionStatement		4845:76:143058:143058	531959	9	True				
ANR	532122	ExpressionStatement	free ( buf )	4846:3:143063:143072	531959	10	True				
ANR	532123	CallExpression	free ( buf )		531959	0					
ANR	532124	Callee	free		531959	0					
ANR	532125	Identifier	free		531959	0					
ANR	532126	ArgumentList	buf		531959	1					
ANR	532127	Argument	buf		531959	0					
ANR	532128	Identifier	buf		531959	0					
ANR	532129	ExpressionStatement	buf = NULL	4847:3:143077:143087	531959	11	True				
ANR	532130	AssignmentExpression	buf = NULL		531959	0		=			
ANR	532131	Identifier	buf		531959	0					
ANR	532132	Identifier	NULL		531959	1					
ANR	532133	ReturnStatement	return buf ;	4849:2:143095:143105	531959	2	True				
ANR	532134	Identifier	buf		531959	0					
ANR	532135	ReturnType	static char *		531959	1					
ANR	532136	Identifier	php_mail_gets		531959	2					
ANR	532137	ParameterList	"readfn_t f , void * stream , unsigned long size , GETS_DATA * md"		531959	3					
ANR	532138	Parameter	readfn_t f	4810:27:142153:142162	531959	0	True				
ANR	532139	ParameterType	readfn_t		531959	0					
ANR	532140	Identifier	f		531959	1					
ANR	532141	Parameter	void * stream	4810:39:142165:142176	531959	1	True				
ANR	532142	ParameterType	void *		531959	0					
ANR	532143	Identifier	stream		531959	1					
ANR	532144	Parameter	unsigned long size	4810:53:142179:142196	531959	2	True				
ANR	532145	ParameterType	unsigned long		531959	0					
ANR	532146	Identifier	size		531959	1					
ANR	532147	Parameter	GETS_DATA * md	4810:73:142199:142211	531959	3	True				
ANR	532148	ParameterType	GETS_DATA *		531959	0					
ANR	532149	Identifier	md		531959	1					
ANR	532150	CFGEntryNode	ENTRY		531959		True				
ANR	532151	CFGExitNode	EXIT		531959		True				
ANR	532152	Symbol	* buf		531959						
ANR	532153	Symbol	read		531959						
ANR	532154	Symbol	NULL		531959						
ANR	532155	Symbol	f		531959						
ANR	532156	Symbol	GETS_FETCH_SIZE		531959						
ANR	532157	Symbol	gets_stream		531959						
ANR	532158	Symbol	php_stream_write		531959						
ANR	532159	Symbol	buf		531959						
ANR	532160	Symbol	* size		531959						
ANR	532161	Symbol	size		531959						
ANR	532162	Symbol	stream		531959						
ANR	532163	Symbol	md		531959						
ANR	532164	Symbol	IMAPG		531959						
ANR	532165	Symbol	pemalloc		531959						
ANR	532166	Function	mm_searched	4856:0:143157:143670							
ANR	532167	FunctionDef	"mm_searched (MAILSTREAM * stream , unsigned long number)"		532166	0					
ANR	532168	CompoundStatement		4857:0:143232:143670	532166	0					
ANR	532169	IdentifierDeclStatement	MESSAGELIST * cur = NIL ;	4858:1:143235:143257	532166	0	True				
ANR	532170	IdentifierDecl	* cur = NIL		532166	0					
ANR	532171	IdentifierDeclType	MESSAGELIST *		532166	0					
ANR	532172	Identifier	cur		532166	1					
ANR	532173	AssignmentExpression	* cur = NIL		532166	2		=			
ANR	532174	Identifier	NIL		532166	0					
ANR	532175	Identifier	NIL		532166	1					
ANR	532176	ExpressionStatement	TSRMLS_FETCH ( )	4859:1:143260:143274	532166	1	True				
ANR	532177	CallExpression	TSRMLS_FETCH ( )		532166	0					
ANR	532178	Callee	TSRMLS_FETCH		532166	0					
ANR	532179	Identifier	TSRMLS_FETCH		532166	0					
ANR	532180	ArgumentList			532166	1					
ANR	532181	IfStatement	if ( IMAPG ( imap_messages ) == NIL )		532166	2					
ANR	532182	Condition	IMAPG ( imap_messages ) == NIL	4861:5:143282:143308	532166	0	True				
ANR	532183	EqualityExpression	IMAPG ( imap_messages ) == NIL		532166	0		==			
ANR	532184	CallExpression	IMAPG ( imap_messages )		532166	0					
ANR	532185	Callee	IMAPG		532166	0					
ANR	532186	Identifier	IMAPG		532166	0					
ANR	532187	ArgumentList	imap_messages		532166	1					
ANR	532188	Argument	imap_messages		532166	0					
ANR	532189	Identifier	imap_messages		532166	0					
ANR	532190	Identifier	NIL		532166	1					
ANR	532191	CompoundStatement		5:34:78:78	532166	1					
ANR	532192	ExpressionStatement	IMAPG ( imap_messages ) = mail_newmessagelist ( )	4862:2:143315:143359	532166	0	True				
ANR	532193	AssignmentExpression	IMAPG ( imap_messages ) = mail_newmessagelist ( )		532166	0		=			
ANR	532194	CallExpression	IMAPG ( imap_messages )		532166	0					
ANR	532195	Callee	IMAPG		532166	0					
ANR	532196	Identifier	IMAPG		532166	0					
ANR	532197	ArgumentList	imap_messages		532166	1					
ANR	532198	Argument	imap_messages		532166	0					
ANR	532199	Identifier	imap_messages		532166	0					
ANR	532200	CallExpression	mail_newmessagelist ( )		532166	1					
ANR	532201	Callee	mail_newmessagelist		532166	0					
ANR	532202	Identifier	mail_newmessagelist		532166	0					
ANR	532203	ArgumentList			532166	1					
ANR	532204	ExpressionStatement	IMAPG ( imap_messages ) -> msgid = number	4863:2:143363:143399	532166	1	True				
ANR	532205	AssignmentExpression	IMAPG ( imap_messages ) -> msgid = number		532166	0		=			
ANR	532206	PtrMemberAccess	IMAPG ( imap_messages ) -> msgid		532166	0					
ANR	532207	CallExpression	IMAPG ( imap_messages )		532166	0					
ANR	532208	Callee	IMAPG		532166	0					
ANR	532209	Identifier	IMAPG		532166	0					
ANR	532210	ArgumentList	imap_messages		532166	1					
ANR	532211	Argument	imap_messages		532166	0					
ANR	532212	Identifier	imap_messages		532166	0					
ANR	532213	Identifier	msgid		532166	1					
ANR	532214	Identifier	number		532166	1					
ANR	532215	ExpressionStatement	IMAPG ( imap_messages ) -> next = NIL	4864:2:143403:143435	532166	2	True				
ANR	532216	AssignmentExpression	IMAPG ( imap_messages ) -> next = NIL		532166	0		=			
ANR	532217	PtrMemberAccess	IMAPG ( imap_messages ) -> next		532166	0					
ANR	532218	CallExpression	IMAPG ( imap_messages )		532166	0					
ANR	532219	Callee	IMAPG		532166	0					
ANR	532220	Identifier	IMAPG		532166	0					
ANR	532221	ArgumentList	imap_messages		532166	1					
ANR	532222	Argument	imap_messages		532166	0					
ANR	532223	Identifier	imap_messages		532166	0					
ANR	532224	Identifier	next		532166	1					
ANR	532225	Identifier	NIL		532166	1					
ANR	532226	ExpressionStatement	IMAPG ( imap_messages_tail ) = IMAPG ( imap_messages )	4865:2:143439:143487	532166	3	True				
ANR	532227	AssignmentExpression	IMAPG ( imap_messages_tail ) = IMAPG ( imap_messages )		532166	0		=			
ANR	532228	CallExpression	IMAPG ( imap_messages_tail )		532166	0					
ANR	532229	Callee	IMAPG		532166	0					
ANR	532230	Identifier	IMAPG		532166	0					
ANR	532231	ArgumentList	imap_messages_tail		532166	1					
ANR	532232	Argument	imap_messages_tail		532166	0					
ANR	532233	Identifier	imap_messages_tail		532166	0					
ANR	532234	CallExpression	IMAPG ( imap_messages )		532166	1					
ANR	532235	Callee	IMAPG		532166	0					
ANR	532236	Identifier	IMAPG		532166	0					
ANR	532237	ArgumentList	imap_messages		532166	1					
ANR	532238	Argument	imap_messages		532166	0					
ANR	532239	Identifier	imap_messages		532166	0					
ANR	532240	ElseStatement	else		532166	0					
ANR	532241	CompoundStatement		10:8:264:264	532166	0					
ANR	532242	ExpressionStatement	cur = IMAPG ( imap_messages_tail )	4867:2:143501:143532	532166	0	True				
ANR	532243	AssignmentExpression	cur = IMAPG ( imap_messages_tail )		532166	0		=			
ANR	532244	Identifier	cur		532166	0					
ANR	532245	CallExpression	IMAPG ( imap_messages_tail )		532166	1					
ANR	532246	Callee	IMAPG		532166	0					
ANR	532247	Identifier	IMAPG		532166	0					
ANR	532248	ArgumentList	imap_messages_tail		532166	1					
ANR	532249	Argument	imap_messages_tail		532166	0					
ANR	532250	Identifier	imap_messages_tail		532166	0					
ANR	532251	ExpressionStatement	cur -> next = mail_newmessagelist ( )	4868:2:143536:143569	532166	1	True				
ANR	532252	AssignmentExpression	cur -> next = mail_newmessagelist ( )		532166	0		=			
ANR	532253	PtrMemberAccess	cur -> next		532166	0					
ANR	532254	Identifier	cur		532166	0					
ANR	532255	Identifier	next		532166	1					
ANR	532256	CallExpression	mail_newmessagelist ( )		532166	1					
ANR	532257	Callee	mail_newmessagelist		532166	0					
ANR	532258	Identifier	mail_newmessagelist		532166	0					
ANR	532259	ArgumentList			532166	1					
ANR	532260	ExpressionStatement	cur = cur -> next	4869:2:143573:143588	532166	2	True				
ANR	532261	AssignmentExpression	cur = cur -> next		532166	0		=			
ANR	532262	Identifier	cur		532166	0					
ANR	532263	PtrMemberAccess	cur -> next		532166	1					
ANR	532264	Identifier	cur		532166	0					
ANR	532265	Identifier	next		532166	1					
ANR	532266	ExpressionStatement	cur -> msgid = number	4870:2:143592:143611	532166	3	True				
ANR	532267	AssignmentExpression	cur -> msgid = number		532166	0		=			
ANR	532268	PtrMemberAccess	cur -> msgid		532166	0					
ANR	532269	Identifier	cur		532166	0					
ANR	532270	Identifier	msgid		532166	1					
ANR	532271	Identifier	number		532166	1					
ANR	532272	ExpressionStatement	cur -> next = NIL	4871:2:143615:143630	532166	4	True				
ANR	532273	AssignmentExpression	cur -> next = NIL		532166	0		=			
ANR	532274	PtrMemberAccess	cur -> next		532166	0					
ANR	532275	Identifier	cur		532166	0					
ANR	532276	Identifier	next		532166	1					
ANR	532277	Identifier	NIL		532166	1					
ANR	532278	ExpressionStatement	IMAPG ( imap_messages_tail ) = cur	4872:2:143634:143665	532166	5	True				
ANR	532279	AssignmentExpression	IMAPG ( imap_messages_tail ) = cur		532166	0		=			
ANR	532280	CallExpression	IMAPG ( imap_messages_tail )		532166	0					
ANR	532281	Callee	IMAPG		532166	0					
ANR	532282	Identifier	IMAPG		532166	0					
ANR	532283	ArgumentList	imap_messages_tail		532166	1					
ANR	532284	Argument	imap_messages_tail		532166	0					
ANR	532285	Identifier	imap_messages_tail		532166	0					
ANR	532286	Identifier	cur		532166	1					
ANR	532287	ReturnType	PHP_IMAP_EXPORT void		532166	1					
ANR	532288	Identifier	mm_searched		532166	2					
ANR	532289	ParameterList	"MAILSTREAM * stream , unsigned long number"		532166	3					
ANR	532290	Parameter	MAILSTREAM * stream	4856:33:143190:143207	532166	0	True				
ANR	532291	ParameterType	MAILSTREAM *		532166	0					
ANR	532292	Identifier	stream		532166	1					
ANR	532293	Parameter	unsigned long number	4856:53:143210:143229	532166	1	True				
ANR	532294	ParameterType	unsigned long		532166	0					
ANR	532295	Identifier	number		532166	1					
ANR	532296	CFGEntryNode	ENTRY		532166		True				
ANR	532297	CFGExitNode	EXIT		532166		True				
ANR	532298	Symbol	cur		532166						
ANR	532299	Symbol	IMAPG ( imap_messages ) -> msgid		532166						
ANR	532300	Symbol	imap_messages_tail		532166						
ANR	532301	Symbol	mail_newmessagelist		532166						
ANR	532302	Symbol	cur -> msgid		532166						
ANR	532303	Symbol	NIL		532166						
ANR	532304	Symbol	number		532166						
ANR	532305	Symbol	stream		532166						
ANR	532306	Symbol	* cur		532166						
ANR	532307	Symbol	* IMAPG		532166						
ANR	532308	Symbol	IMAPG ( imap_messages ) -> next		532166						
ANR	532309	Symbol	imap_messages		532166						
ANR	532310	Symbol	IMAPG		532166						
ANR	532311	Symbol	cur -> next		532166						
ANR	532312	Function	mm_exists	4876:0:143673:143748							
ANR	532313	FunctionDef	"mm_exists (MAILSTREAM * stream , unsigned long number)"		532312	0					
ANR	532314	CompoundStatement		4877:0:143746:143748	532312	0					
ANR	532315	ReturnType	PHP_IMAP_EXPORT void		532312	1					
ANR	532316	Identifier	mm_exists		532312	2					
ANR	532317	ParameterList	"MAILSTREAM * stream , unsigned long number"		532312	3					
ANR	532318	Parameter	MAILSTREAM * stream	4876:31:143704:143721	532312	0	True				
ANR	532319	ParameterType	MAILSTREAM *		532312	0					
ANR	532320	Identifier	stream		532312	1					
ANR	532321	Parameter	unsigned long number	4876:51:143724:143743	532312	1	True				
ANR	532322	ParameterType	unsigned long		532312	0					
ANR	532323	Identifier	number		532312	1					
ANR	532324	CFGEntryNode	ENTRY		532312		True				
ANR	532325	CFGExitNode	EXIT		532312		True				
ANR	532326	Symbol	number		532312						
ANR	532327	Symbol	stream		532312						
ANR	532328	Function	mm_expunged	4880:0:143751:143828							
ANR	532329	FunctionDef	"mm_expunged (MAILSTREAM * stream , unsigned long number)"		532328	0					
ANR	532330	CompoundStatement		4881:0:143826:143828	532328	0					
ANR	532331	ReturnType	PHP_IMAP_EXPORT void		532328	1					
ANR	532332	Identifier	mm_expunged		532328	2					
ANR	532333	ParameterList	"MAILSTREAM * stream , unsigned long number"		532328	3					
ANR	532334	Parameter	MAILSTREAM * stream	4880:33:143784:143801	532328	0	True				
ANR	532335	ParameterType	MAILSTREAM *		532328	0					
ANR	532336	Identifier	stream		532328	1					
ANR	532337	Parameter	unsigned long number	4880:53:143804:143823	532328	1	True				
ANR	532338	ParameterType	unsigned long		532328	0					
ANR	532339	Identifier	number		532328	1					
ANR	532340	CFGEntryNode	ENTRY		532328		True				
ANR	532341	CFGExitNode	EXIT		532328		True				
ANR	532342	Symbol	number		532328						
ANR	532343	Symbol	stream		532328						
ANR	532344	Function	mm_flags	4884:0:143831:143905							
ANR	532345	FunctionDef	"mm_flags (MAILSTREAM * stream , unsigned long number)"		532344	0					
ANR	532346	CompoundStatement		4885:0:143903:143905	532344	0					
ANR	532347	ReturnType	PHP_IMAP_EXPORT void		532344	1					
ANR	532348	Identifier	mm_flags		532344	2					
ANR	532349	ParameterList	"MAILSTREAM * stream , unsigned long number"		532344	3					
ANR	532350	Parameter	MAILSTREAM * stream	4884:30:143861:143878	532344	0	True				
ANR	532351	ParameterType	MAILSTREAM *		532344	0					
ANR	532352	Identifier	stream		532344	1					
ANR	532353	Parameter	unsigned long number	4884:50:143881:143900	532344	1	True				
ANR	532354	ParameterType	unsigned long		532344	0					
ANR	532355	Identifier	number		532344	1					
ANR	532356	CFGEntryNode	ENTRY		532344		True				
ANR	532357	CFGExitNode	EXIT		532344		True				
ANR	532358	Symbol	number		532344						
ANR	532359	Symbol	stream		532344						
ANR	532360	Function	mm_notify	4889:0:143926:144537							
ANR	532361	FunctionDef	"mm_notify (MAILSTREAM * stream , char * str , long errflg)"		532360	0					
ANR	532362	CompoundStatement		4890:0:144001:144537	532360	0					
ANR	532363	IdentifierDeclStatement	STRINGLIST * cur = NIL ;	4891:1:144004:144025	532360	0	True				
ANR	532364	IdentifierDecl	* cur = NIL		532360	0					
ANR	532365	IdentifierDeclType	STRINGLIST *		532360	0					
ANR	532366	Identifier	cur		532360	1					
ANR	532367	AssignmentExpression	* cur = NIL		532360	2		=			
ANR	532368	Identifier	NIL		532360	0					
ANR	532369	Identifier	NIL		532360	1					
ANR	532370	ExpressionStatement	TSRMLS_FETCH ( )	4892:1:144028:144042	532360	1	True				
ANR	532371	CallExpression	TSRMLS_FETCH ( )		532360	0					
ANR	532372	Callee	TSRMLS_FETCH		532360	0					
ANR	532373	Identifier	TSRMLS_FETCH		532360	0					
ANR	532374	ArgumentList			532360	1					
ANR	532375	IfStatement	"if ( strncmp ( str , ""[ALERT] "" , 8 ) == 0 )"		532360	2					
ANR	532376	Condition	"strncmp ( str , ""[ALERT] "" , 8 ) == 0"	4894:5:144050:144081	532360	0	True				
ANR	532377	EqualityExpression	"strncmp ( str , ""[ALERT] "" , 8 ) == 0"		532360	0		==			
ANR	532378	CallExpression	"strncmp ( str , ""[ALERT] "" , 8 )"		532360	0					
ANR	532379	Callee	strncmp		532360	0					
ANR	532380	Identifier	strncmp		532360	0					
ANR	532381	ArgumentList	str		532360	1					
ANR	532382	Argument	str		532360	0					
ANR	532383	Identifier	str		532360	0					
ANR	532384	Argument	"""[ALERT] """		532360	1					
ANR	532385	PrimaryExpression	"""[ALERT] """		532360	0					
ANR	532386	Argument	8		532360	2					
ANR	532387	PrimaryExpression	8		532360	0					
ANR	532388	PrimaryExpression	0		532360	1					
ANR	532389	CompoundStatement		5:39:82:82	532360	1					
ANR	532390	IfStatement	if ( IMAPG ( imap_alertstack ) == NIL )		532360	0					
ANR	532391	Condition	IMAPG ( imap_alertstack ) == NIL	4895:6:144092:144120	532360	0	True				
ANR	532392	EqualityExpression	IMAPG ( imap_alertstack ) == NIL		532360	0		==			
ANR	532393	CallExpression	IMAPG ( imap_alertstack )		532360	0					
ANR	532394	Callee	IMAPG		532360	0					
ANR	532395	Identifier	IMAPG		532360	0					
ANR	532396	ArgumentList	imap_alertstack		532360	1					
ANR	532397	Argument	imap_alertstack		532360	0					
ANR	532398	Identifier	imap_alertstack		532360	0					
ANR	532399	Identifier	NIL		532360	1					
ANR	532400	CompoundStatement		6:37:121:121	532360	1					
ANR	532401	ExpressionStatement	IMAPG ( imap_alertstack ) = mail_newstringlist ( )	4896:3:144128:144173	532360	0	True				
ANR	532402	AssignmentExpression	IMAPG ( imap_alertstack ) = mail_newstringlist ( )		532360	0		=			
ANR	532403	CallExpression	IMAPG ( imap_alertstack )		532360	0					
ANR	532404	Callee	IMAPG		532360	0					
ANR	532405	Identifier	IMAPG		532360	0					
ANR	532406	ArgumentList	imap_alertstack		532360	1					
ANR	532407	Argument	imap_alertstack		532360	0					
ANR	532408	Identifier	imap_alertstack		532360	0					
ANR	532409	CallExpression	mail_newstringlist ( )		532360	1					
ANR	532410	Callee	mail_newstringlist		532360	0					
ANR	532411	Identifier	mail_newstringlist		532360	0					
ANR	532412	ArgumentList			532360	1					
ANR	532413	ExpressionStatement	IMAPG ( imap_alertstack ) -> LSIZE = strlen ( IMAPG ( imap_alertstack ) -> LTEXT = cpystr ( str ) )	4897:3:144178:144261	532360	1	True				
ANR	532414	AssignmentExpression	IMAPG ( imap_alertstack ) -> LSIZE = strlen ( IMAPG ( imap_alertstack ) -> LTEXT = cpystr ( str ) )		532360	0		=			
ANR	532415	PtrMemberAccess	IMAPG ( imap_alertstack ) -> LSIZE		532360	0					
ANR	532416	CallExpression	IMAPG ( imap_alertstack )		532360	0					
ANR	532417	Callee	IMAPG		532360	0					
ANR	532418	Identifier	IMAPG		532360	0					
ANR	532419	ArgumentList	imap_alertstack		532360	1					
ANR	532420	Argument	imap_alertstack		532360	0					
ANR	532421	Identifier	imap_alertstack		532360	0					
ANR	532422	Identifier	LSIZE		532360	1					
ANR	532423	CallExpression	strlen ( IMAPG ( imap_alertstack ) -> LTEXT = cpystr ( str ) )		532360	1					
ANR	532424	Callee	strlen		532360	0					
ANR	532425	Identifier	strlen		532360	0					
ANR	532426	ArgumentList	IMAPG ( imap_alertstack ) -> LTEXT = cpystr ( str )		532360	1					
ANR	532427	Argument	IMAPG ( imap_alertstack ) -> LTEXT = cpystr ( str )		532360	0					
ANR	532428	AssignmentExpression	IMAPG ( imap_alertstack ) -> LTEXT = cpystr ( str )		532360	0		=			
ANR	532429	PtrMemberAccess	IMAPG ( imap_alertstack ) -> LTEXT		532360	0					
ANR	532430	CallExpression	IMAPG ( imap_alertstack )		532360	0					
ANR	532431	Callee	IMAPG		532360	0					
ANR	532432	Identifier	IMAPG		532360	0					
ANR	532433	ArgumentList	imap_alertstack		532360	1					
ANR	532434	Argument	imap_alertstack		532360	0					
ANR	532435	Identifier	imap_alertstack		532360	0					
ANR	532436	Identifier	LTEXT		532360	1					
ANR	532437	CallExpression	cpystr ( str )		532360	1					
ANR	532438	Callee	cpystr		532360	0					
ANR	532439	Identifier	cpystr		532360	0					
ANR	532440	ArgumentList	str		532360	1					
ANR	532441	Argument	str		532360	0					
ANR	532442	Identifier	str		532360	0					
ANR	532443	ExpressionStatement	IMAPG ( imap_alertstack ) -> next = NIL	4898:3:144266:144300	532360	2	True				
ANR	532444	AssignmentExpression	IMAPG ( imap_alertstack ) -> next = NIL		532360	0		=			
ANR	532445	PtrMemberAccess	IMAPG ( imap_alertstack ) -> next		532360	0					
ANR	532446	CallExpression	IMAPG ( imap_alertstack )		532360	0					
ANR	532447	Callee	IMAPG		532360	0					
ANR	532448	Identifier	IMAPG		532360	0					
ANR	532449	ArgumentList	imap_alertstack		532360	1					
ANR	532450	Argument	imap_alertstack		532360	0					
ANR	532451	Identifier	imap_alertstack		532360	0					
ANR	532452	Identifier	next		532360	1					
ANR	532453	Identifier	NIL		532360	1					
ANR	532454	ElseStatement	else		532360	0					
ANR	532455	CompoundStatement		10:9:309:309	532360	0					
ANR	532456	ExpressionStatement	cur = IMAPG ( imap_alertstack )	4900:3:144316:144344	532360	0	True				
ANR	532457	AssignmentExpression	cur = IMAPG ( imap_alertstack )		532360	0		=			
ANR	532458	Identifier	cur		532360	0					
ANR	532459	CallExpression	IMAPG ( imap_alertstack )		532360	1					
ANR	532460	Callee	IMAPG		532360	0					
ANR	532461	Identifier	IMAPG		532360	0					
ANR	532462	ArgumentList	imap_alertstack		532360	1					
ANR	532463	Argument	imap_alertstack		532360	0					
ANR	532464	Identifier	imap_alertstack		532360	0					
ANR	532465	WhileStatement	while ( cur -> next != NIL )		532360	1					
ANR	532466	Condition	cur -> next != NIL	4901:10:144356:144371	532360	0	True				
ANR	532467	EqualityExpression	cur -> next != NIL		532360	0		!=			
ANR	532468	PtrMemberAccess	cur -> next		532360	0					
ANR	532469	Identifier	cur		532360	0					
ANR	532470	Identifier	next		532360	1					
ANR	532471	Identifier	NIL		532360	1					
ANR	532472	CompoundStatement		12:28:372:372	532360	1					
ANR	532473	ExpressionStatement	cur = cur -> next	4902:4:144380:144395	532360	0	True				
ANR	532474	AssignmentExpression	cur = cur -> next		532360	0		=			
ANR	532475	Identifier	cur		532360	0					
ANR	532476	PtrMemberAccess	cur -> next		532360	1					
ANR	532477	Identifier	cur		532360	0					
ANR	532478	Identifier	next		532360	1					
ANR	532479	ExpressionStatement	cur -> next = mail_newstringlist ( )	4904:3:144405:144438	532360	2	True				
ANR	532480	AssignmentExpression	cur -> next = mail_newstringlist ( )		532360	0		=			
ANR	532481	PtrMemberAccess	cur -> next		532360	0					
ANR	532482	Identifier	cur		532360	0					
ANR	532483	Identifier	next		532360	1					
ANR	532484	CallExpression	mail_newstringlist ( )		532360	1					
ANR	532485	Callee	mail_newstringlist		532360	0					
ANR	532486	Identifier	mail_newstringlist		532360	0					
ANR	532487	ArgumentList			532360	1					
ANR	532488	ExpressionStatement	cur = cur -> next	4905:3:144443:144458	532360	3	True				
ANR	532489	AssignmentExpression	cur = cur -> next		532360	0		=			
ANR	532490	Identifier	cur		532360	0					
ANR	532491	PtrMemberAccess	cur -> next		532360	1					
ANR	532492	Identifier	cur		532360	0					
ANR	532493	Identifier	next		532360	1					
ANR	532494	ExpressionStatement	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( str ) )	4906:3:144463:144508	532360	4	True				
ANR	532495	AssignmentExpression	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( str ) )		532360	0		=			
ANR	532496	PtrMemberAccess	cur -> LSIZE		532360	0					
ANR	532497	Identifier	cur		532360	0					
ANR	532498	Identifier	LSIZE		532360	1					
ANR	532499	CallExpression	strlen ( cur -> LTEXT = cpystr ( str ) )		532360	1					
ANR	532500	Callee	strlen		532360	0					
ANR	532501	Identifier	strlen		532360	0					
ANR	532502	ArgumentList	cur -> LTEXT = cpystr ( str )		532360	1					
ANR	532503	Argument	cur -> LTEXT = cpystr ( str )		532360	0					
ANR	532504	AssignmentExpression	cur -> LTEXT = cpystr ( str )		532360	0		=			
ANR	532505	PtrMemberAccess	cur -> LTEXT		532360	0					
ANR	532506	Identifier	cur		532360	0					
ANR	532507	Identifier	LTEXT		532360	1					
ANR	532508	CallExpression	cpystr ( str )		532360	1					
ANR	532509	Callee	cpystr		532360	0					
ANR	532510	Identifier	cpystr		532360	0					
ANR	532511	ArgumentList	str		532360	1					
ANR	532512	Argument	str		532360	0					
ANR	532513	Identifier	str		532360	0					
ANR	532514	ExpressionStatement	cur -> next = NIL	4907:3:144513:144528	532360	5	True				
ANR	532515	AssignmentExpression	cur -> next = NIL		532360	0		=			
ANR	532516	PtrMemberAccess	cur -> next		532360	0					
ANR	532517	Identifier	cur		532360	0					
ANR	532518	Identifier	next		532360	1					
ANR	532519	Identifier	NIL		532360	1					
ANR	532520	ReturnType	PHP_IMAP_EXPORT void		532360	1					
ANR	532521	Identifier	mm_notify		532360	2					
ANR	532522	ParameterList	"MAILSTREAM * stream , char * str , long errflg"		532360	3					
ANR	532523	Parameter	MAILSTREAM * stream	4889:31:143957:143974	532360	0	True				
ANR	532524	ParameterType	MAILSTREAM *		532360	0					
ANR	532525	Identifier	stream		532360	1					
ANR	532526	Parameter	char * str	4889:51:143977:143985	532360	1	True				
ANR	532527	ParameterType	char *		532360	0					
ANR	532528	Identifier	str		532360	1					
ANR	532529	Parameter	long errflg	4889:62:143988:143998	532360	2	True				
ANR	532530	ParameterType	long		532360	0					
ANR	532531	Identifier	errflg		532360	1					
ANR	532532	CFGEntryNode	ENTRY		532360		True				
ANR	532533	CFGExitNode	EXIT		532360		True				
ANR	532534	Symbol	cur		532360						
ANR	532535	Symbol	mail_newstringlist		532360						
ANR	532536	Symbol	errflg		532360						
ANR	532537	Symbol	cur -> LTEXT		532360						
ANR	532538	Symbol	imap_alertstack		532360						
ANR	532539	Symbol	str		532360						
ANR	532540	Symbol	NIL		532360						
ANR	532541	Symbol	strncmp		532360						
ANR	532542	Symbol	strlen		532360						
ANR	532543	Symbol	IMAPG ( imap_alertstack ) -> LSIZE		532360						
ANR	532544	Symbol	stream		532360						
ANR	532545	Symbol	* cur		532360						
ANR	532546	Symbol	* IMAPG		532360						
ANR	532547	Symbol	cpystr		532360						
ANR	532548	Symbol	IMAPG ( imap_alertstack ) -> LTEXT		532360						
ANR	532549	Symbol	IMAPG		532360						
ANR	532550	Symbol	IMAPG ( imap_alertstack ) -> next		532360						
ANR	532551	Symbol	cur -> LSIZE		532360						
ANR	532552	Symbol	cur -> next		532360						
ANR	532553	Function	mm_list	4912:0:144540:146159							
ANR	532554	FunctionDef	"mm_list (MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes)"		532553	0					
ANR	532555	CompoundStatement		4913:0:144638:146159	532553	0					
ANR	532556	IdentifierDeclStatement	STRINGLIST * cur = NIL ;	4914:1:144641:144660	532553	0	True				
ANR	532557	IdentifierDecl	* cur = NIL		532553	0					
ANR	532558	IdentifierDeclType	STRINGLIST *		532553	0					
ANR	532559	Identifier	cur		532553	1					
ANR	532560	AssignmentExpression	* cur = NIL		532553	2		=			
ANR	532561	Identifier	NIL		532553	0					
ANR	532562	Identifier	NIL		532553	1					
ANR	532563	IdentifierDeclStatement	FOBJECTLIST * ocur = NIL ;	4915:1:144663:144684	532553	1	True				
ANR	532564	IdentifierDecl	* ocur = NIL		532553	0					
ANR	532565	IdentifierDeclType	FOBJECTLIST *		532553	0					
ANR	532566	Identifier	ocur		532553	1					
ANR	532567	AssignmentExpression	* ocur = NIL		532553	2		=			
ANR	532568	Identifier	NIL		532553	0					
ANR	532569	Identifier	NIL		532553	1					
ANR	532570	ExpressionStatement	TSRMLS_FETCH ( )	4916:1:144687:144701	532553	2	True				
ANR	532571	CallExpression	TSRMLS_FETCH ( )		532553	0					
ANR	532572	Callee	TSRMLS_FETCH		532553	0					
ANR	532573	Identifier	TSRMLS_FETCH		532553	0					
ANR	532574	ArgumentList			532553	1					
ANR	532575	IfStatement	if ( IMAPG ( folderlist_style ) == FLIST_OBJECT )		532553	3					
ANR	532576	Condition	IMAPG ( folderlist_style ) == FLIST_OBJECT	4918:5:144709:144747	532553	0	True				
ANR	532577	EqualityExpression	IMAPG ( folderlist_style ) == FLIST_OBJECT		532553	0		==			
ANR	532578	CallExpression	IMAPG ( folderlist_style )		532553	0					
ANR	532579	Callee	IMAPG		532553	0					
ANR	532580	Identifier	IMAPG		532553	0					
ANR	532581	ArgumentList	folderlist_style		532553	1					
ANR	532582	Argument	folderlist_style		532553	0					
ANR	532583	Identifier	folderlist_style		532553	0					
ANR	532584	Identifier	FLIST_OBJECT		532553	1					
ANR	532585	CompoundStatement		6:46:111:111	532553	1					
ANR	532586	IfStatement	if ( IMAPG ( imap_folder_objects ) == NIL )		532553	0					
ANR	532587	Condition	IMAPG ( imap_folder_objects ) == NIL	4921:6:144822:144854	532553	0	True				
ANR	532588	EqualityExpression	IMAPG ( imap_folder_objects ) == NIL		532553	0		==			
ANR	532589	CallExpression	IMAPG ( imap_folder_objects )		532553	0					
ANR	532590	Callee	IMAPG		532553	0					
ANR	532591	Identifier	IMAPG		532553	0					
ANR	532592	ArgumentList	imap_folder_objects		532553	1					
ANR	532593	Argument	imap_folder_objects		532553	0					
ANR	532594	Identifier	imap_folder_objects		532553	0					
ANR	532595	Identifier	NIL		532553	1					
ANR	532596	CompoundStatement		9:41:218:218	532553	1					
ANR	532597	ExpressionStatement	IMAPG ( imap_folder_objects ) = mail_newfolderobjectlist ( )	4922:3:144862:144917	532553	0	True				
ANR	532598	AssignmentExpression	IMAPG ( imap_folder_objects ) = mail_newfolderobjectlist ( )		532553	0		=			
ANR	532599	CallExpression	IMAPG ( imap_folder_objects )		532553	0					
ANR	532600	Callee	IMAPG		532553	0					
ANR	532601	Identifier	IMAPG		532553	0					
ANR	532602	ArgumentList	imap_folder_objects		532553	1					
ANR	532603	Argument	imap_folder_objects		532553	0					
ANR	532604	Identifier	imap_folder_objects		532553	0					
ANR	532605	CallExpression	mail_newfolderobjectlist ( )		532553	1					
ANR	532606	Callee	mail_newfolderobjectlist		532553	0					
ANR	532607	Identifier	mail_newfolderobjectlist		532553	0					
ANR	532608	ArgumentList			532553	1					
ANR	532609	ExpressionStatement	IMAPG ( imap_folder_objects ) -> LSIZE = strlen ( IMAPG ( imap_folder_objects ) -> LTEXT = cpystr ( mailbox ) )	4923:3:144922:145013	532553	1	True				
ANR	532610	AssignmentExpression	IMAPG ( imap_folder_objects ) -> LSIZE = strlen ( IMAPG ( imap_folder_objects ) -> LTEXT = cpystr ( mailbox ) )		532553	0		=			
ANR	532611	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> LSIZE		532553	0					
ANR	532612	CallExpression	IMAPG ( imap_folder_objects )		532553	0					
ANR	532613	Callee	IMAPG		532553	0					
ANR	532614	Identifier	IMAPG		532553	0					
ANR	532615	ArgumentList	imap_folder_objects		532553	1					
ANR	532616	Argument	imap_folder_objects		532553	0					
ANR	532617	Identifier	imap_folder_objects		532553	0					
ANR	532618	Identifier	LSIZE		532553	1					
ANR	532619	CallExpression	strlen ( IMAPG ( imap_folder_objects ) -> LTEXT = cpystr ( mailbox ) )		532553	1					
ANR	532620	Callee	strlen		532553	0					
ANR	532621	Identifier	strlen		532553	0					
ANR	532622	ArgumentList	IMAPG ( imap_folder_objects ) -> LTEXT = cpystr ( mailbox )		532553	1					
ANR	532623	Argument	IMAPG ( imap_folder_objects ) -> LTEXT = cpystr ( mailbox )		532553	0					
ANR	532624	AssignmentExpression	IMAPG ( imap_folder_objects ) -> LTEXT = cpystr ( mailbox )		532553	0		=			
ANR	532625	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> LTEXT		532553	0					
ANR	532626	CallExpression	IMAPG ( imap_folder_objects )		532553	0					
ANR	532627	Callee	IMAPG		532553	0					
ANR	532628	Identifier	IMAPG		532553	0					
ANR	532629	ArgumentList	imap_folder_objects		532553	1					
ANR	532630	Argument	imap_folder_objects		532553	0					
ANR	532631	Identifier	imap_folder_objects		532553	0					
ANR	532632	Identifier	LTEXT		532553	1					
ANR	532633	CallExpression	cpystr ( mailbox )		532553	1					
ANR	532634	Callee	cpystr		532553	0					
ANR	532635	Identifier	cpystr		532553	0					
ANR	532636	ArgumentList	mailbox		532553	1					
ANR	532637	Argument	mailbox		532553	0					
ANR	532638	Identifier	mailbox		532553	0					
ANR	532639	ExpressionStatement	IMAPG ( imap_folder_objects ) -> delimiter = delimiter	4924:3:145018:145067	532553	2	True				
ANR	532640	AssignmentExpression	IMAPG ( imap_folder_objects ) -> delimiter = delimiter		532553	0		=			
ANR	532641	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> delimiter		532553	0					
ANR	532642	CallExpression	IMAPG ( imap_folder_objects )		532553	0					
ANR	532643	Callee	IMAPG		532553	0					
ANR	532644	Identifier	IMAPG		532553	0					
ANR	532645	ArgumentList	imap_folder_objects		532553	1					
ANR	532646	Argument	imap_folder_objects		532553	0					
ANR	532647	Identifier	imap_folder_objects		532553	0					
ANR	532648	Identifier	delimiter		532553	1					
ANR	532649	Identifier	delimiter		532553	1					
ANR	532650	ExpressionStatement	IMAPG ( imap_folder_objects ) -> attributes = attributes	4925:3:145072:145123	532553	3	True				
ANR	532651	AssignmentExpression	IMAPG ( imap_folder_objects ) -> attributes = attributes		532553	0		=			
ANR	532652	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> attributes		532553	0					
ANR	532653	CallExpression	IMAPG ( imap_folder_objects )		532553	0					
ANR	532654	Callee	IMAPG		532553	0					
ANR	532655	Identifier	IMAPG		532553	0					
ANR	532656	ArgumentList	imap_folder_objects		532553	1					
ANR	532657	Argument	imap_folder_objects		532553	0					
ANR	532658	Identifier	imap_folder_objects		532553	0					
ANR	532659	Identifier	attributes		532553	1					
ANR	532660	Identifier	attributes		532553	1					
ANR	532661	ExpressionStatement	IMAPG ( imap_folder_objects ) -> next = NIL	4926:3:145128:145166	532553	4	True				
ANR	532662	AssignmentExpression	IMAPG ( imap_folder_objects ) -> next = NIL		532553	0		=			
ANR	532663	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> next		532553	0					
ANR	532664	CallExpression	IMAPG ( imap_folder_objects )		532553	0					
ANR	532665	Callee	IMAPG		532553	0					
ANR	532666	Identifier	IMAPG		532553	0					
ANR	532667	ArgumentList	imap_folder_objects		532553	1					
ANR	532668	Argument	imap_folder_objects		532553	0					
ANR	532669	Identifier	imap_folder_objects		532553	0					
ANR	532670	Identifier	next		532553	1					
ANR	532671	Identifier	NIL		532553	1					
ANR	532672	ExpressionStatement	IMAPG ( imap_folder_objects_tail ) = IMAPG ( imap_folder_objects )	4927:3:145171:145231	532553	5	True				
ANR	532673	AssignmentExpression	IMAPG ( imap_folder_objects_tail ) = IMAPG ( imap_folder_objects )		532553	0		=			
ANR	532674	CallExpression	IMAPG ( imap_folder_objects_tail )		532553	0					
ANR	532675	Callee	IMAPG		532553	0					
ANR	532676	Identifier	IMAPG		532553	0					
ANR	532677	ArgumentList	imap_folder_objects_tail		532553	1					
ANR	532678	Argument	imap_folder_objects_tail		532553	0					
ANR	532679	Identifier	imap_folder_objects_tail		532553	0					
ANR	532680	CallExpression	IMAPG ( imap_folder_objects )		532553	1					
ANR	532681	Callee	IMAPG		532553	0					
ANR	532682	Identifier	IMAPG		532553	0					
ANR	532683	ArgumentList	imap_folder_objects		532553	1					
ANR	532684	Argument	imap_folder_objects		532553	0					
ANR	532685	Identifier	imap_folder_objects		532553	0					
ANR	532686	ElseStatement	else		532553	0					
ANR	532687	CompoundStatement		16:9:603:603	532553	0					
ANR	532688	ExpressionStatement	ocur = IMAPG ( imap_folder_objects_tail )	4929:3:145247:145283	532553	0	True				
ANR	532689	AssignmentExpression	ocur = IMAPG ( imap_folder_objects_tail )		532553	0		=			
ANR	532690	Identifier	ocur		532553	0					
ANR	532691	CallExpression	IMAPG ( imap_folder_objects_tail )		532553	1					
ANR	532692	Callee	IMAPG		532553	0					
ANR	532693	Identifier	IMAPG		532553	0					
ANR	532694	ArgumentList	imap_folder_objects_tail		532553	1					
ANR	532695	Argument	imap_folder_objects_tail		532553	0					
ANR	532696	Identifier	imap_folder_objects_tail		532553	0					
ANR	532697	ExpressionStatement	ocur -> next = mail_newfolderobjectlist ( )	4930:3:145288:145325	532553	1	True				
ANR	532698	AssignmentExpression	ocur -> next = mail_newfolderobjectlist ( )		532553	0		=			
ANR	532699	PtrMemberAccess	ocur -> next		532553	0					
ANR	532700	Identifier	ocur		532553	0					
ANR	532701	Identifier	next		532553	1					
ANR	532702	CallExpression	mail_newfolderobjectlist ( )		532553	1					
ANR	532703	Callee	mail_newfolderobjectlist		532553	0					
ANR	532704	Identifier	mail_newfolderobjectlist		532553	0					
ANR	532705	ArgumentList			532553	1					
ANR	532706	ExpressionStatement	ocur = ocur -> next	4931:3:145330:145345	532553	2	True				
ANR	532707	AssignmentExpression	ocur = ocur -> next		532553	0		=			
ANR	532708	Identifier	ocur		532553	0					
ANR	532709	PtrMemberAccess	ocur -> next		532553	1					
ANR	532710	Identifier	ocur		532553	0					
ANR	532711	Identifier	next		532553	1					
ANR	532712	ExpressionStatement	ocur -> LSIZE = strlen ( ocur -> LTEXT = cpystr ( mailbox ) )	4932:3:145350:145401	532553	3	True				
ANR	532713	AssignmentExpression	ocur -> LSIZE = strlen ( ocur -> LTEXT = cpystr ( mailbox ) )		532553	0		=			
ANR	532714	PtrMemberAccess	ocur -> LSIZE		532553	0					
ANR	532715	Identifier	ocur		532553	0					
ANR	532716	Identifier	LSIZE		532553	1					
ANR	532717	CallExpression	strlen ( ocur -> LTEXT = cpystr ( mailbox ) )		532553	1					
ANR	532718	Callee	strlen		532553	0					
ANR	532719	Identifier	strlen		532553	0					
ANR	532720	ArgumentList	ocur -> LTEXT = cpystr ( mailbox )		532553	1					
ANR	532721	Argument	ocur -> LTEXT = cpystr ( mailbox )		532553	0					
ANR	532722	AssignmentExpression	ocur -> LTEXT = cpystr ( mailbox )		532553	0		=			
ANR	532723	PtrMemberAccess	ocur -> LTEXT		532553	0					
ANR	532724	Identifier	ocur		532553	0					
ANR	532725	Identifier	LTEXT		532553	1					
ANR	532726	CallExpression	cpystr ( mailbox )		532553	1					
ANR	532727	Callee	cpystr		532553	0					
ANR	532728	Identifier	cpystr		532553	0					
ANR	532729	ArgumentList	mailbox		532553	1					
ANR	532730	Argument	mailbox		532553	0					
ANR	532731	Identifier	mailbox		532553	0					
ANR	532732	ExpressionStatement	ocur -> delimiter = delimiter	4933:3:145406:145433	532553	4	True				
ANR	532733	AssignmentExpression	ocur -> delimiter = delimiter		532553	0		=			
ANR	532734	PtrMemberAccess	ocur -> delimiter		532553	0					
ANR	532735	Identifier	ocur		532553	0					
ANR	532736	Identifier	delimiter		532553	1					
ANR	532737	Identifier	delimiter		532553	1					
ANR	532738	ExpressionStatement	ocur -> attributes = attributes	4934:3:145438:145467	532553	5	True				
ANR	532739	AssignmentExpression	ocur -> attributes = attributes		532553	0		=			
ANR	532740	PtrMemberAccess	ocur -> attributes		532553	0					
ANR	532741	Identifier	ocur		532553	0					
ANR	532742	Identifier	attributes		532553	1					
ANR	532743	Identifier	attributes		532553	1					
ANR	532744	ExpressionStatement	ocur -> next = NIL	4935:3:145472:145488	532553	6	True				
ANR	532745	AssignmentExpression	ocur -> next = NIL		532553	0		=			
ANR	532746	PtrMemberAccess	ocur -> next		532553	0					
ANR	532747	Identifier	ocur		532553	0					
ANR	532748	Identifier	next		532553	1					
ANR	532749	Identifier	NIL		532553	1					
ANR	532750	ExpressionStatement	IMAPG ( imap_folder_objects_tail ) = ocur	4936:3:145493:145531	532553	7	True				
ANR	532751	AssignmentExpression	IMAPG ( imap_folder_objects_tail ) = ocur		532553	0		=			
ANR	532752	CallExpression	IMAPG ( imap_folder_objects_tail )		532553	0					
ANR	532753	Callee	IMAPG		532553	0					
ANR	532754	Identifier	IMAPG		532553	0					
ANR	532755	ArgumentList	imap_folder_objects_tail		532553	1					
ANR	532756	Argument	imap_folder_objects_tail		532553	0					
ANR	532757	Identifier	imap_folder_objects_tail		532553	0					
ANR	532758	Identifier	ocur		532553	1					
ANR	532759	ElseStatement	else		532553	0					
ANR	532760	CompoundStatement		27:8:907:907	532553	0					
ANR	532761	IfStatement	if ( ! ( attributes & LATT_NOSELECT ) )		532553	0					
ANR	532762	Condition	! ( attributes & LATT_NOSELECT )	4941:6:145645:145673	532553	0	True				
ANR	532763	UnaryOperationExpression	! ( attributes & LATT_NOSELECT )		532553	0					
ANR	532764	UnaryOperator	!		532553	0					
ANR	532765	BitAndExpression	attributes & LATT_NOSELECT		532553	1		&			
ANR	532766	Identifier	attributes		532553	0					
ANR	532767	Identifier	LATT_NOSELECT		532553	1					
ANR	532768	CompoundStatement		29:37:1037:1037	532553	1					
ANR	532769	IfStatement	if ( IMAPG ( imap_folders ) == NIL )		532553	0					
ANR	532770	Condition	IMAPG ( imap_folders ) == NIL	4942:7:145685:145710	532553	0	True				
ANR	532771	EqualityExpression	IMAPG ( imap_folders ) == NIL		532553	0		==			
ANR	532772	CallExpression	IMAPG ( imap_folders )		532553	0					
ANR	532773	Callee	IMAPG		532553	0					
ANR	532774	Identifier	IMAPG		532553	0					
ANR	532775	ArgumentList	imap_folders		532553	1					
ANR	532776	Argument	imap_folders		532553	0					
ANR	532777	Identifier	imap_folders		532553	0					
ANR	532778	Identifier	NIL		532553	1					
ANR	532779	CompoundStatement		30:35:1074:1074	532553	1					
ANR	532780	ExpressionStatement	IMAPG ( imap_folders ) = mail_newstringlist ( )	4943:4:145719:145759	532553	0	True				
ANR	532781	AssignmentExpression	IMAPG ( imap_folders ) = mail_newstringlist ( )		532553	0		=			
ANR	532782	CallExpression	IMAPG ( imap_folders )		532553	0					
ANR	532783	Callee	IMAPG		532553	0					
ANR	532784	Identifier	IMAPG		532553	0					
ANR	532785	ArgumentList	imap_folders		532553	1					
ANR	532786	Argument	imap_folders		532553	0					
ANR	532787	Identifier	imap_folders		532553	0					
ANR	532788	CallExpression	mail_newstringlist ( )		532553	1					
ANR	532789	Callee	mail_newstringlist		532553	0					
ANR	532790	Identifier	mail_newstringlist		532553	0					
ANR	532791	ArgumentList			532553	1					
ANR	532792	ExpressionStatement	IMAPG ( imap_folders ) -> LSIZE = strlen ( IMAPG ( imap_folders ) -> LTEXT = cpystr ( mailbox ) )	4944:4:145765:145842	532553	1	True				
ANR	532793	AssignmentExpression	IMAPG ( imap_folders ) -> LSIZE = strlen ( IMAPG ( imap_folders ) -> LTEXT = cpystr ( mailbox ) )		532553	0		=			
ANR	532794	PtrMemberAccess	IMAPG ( imap_folders ) -> LSIZE		532553	0					
ANR	532795	CallExpression	IMAPG ( imap_folders )		532553	0					
ANR	532796	Callee	IMAPG		532553	0					
ANR	532797	Identifier	IMAPG		532553	0					
ANR	532798	ArgumentList	imap_folders		532553	1					
ANR	532799	Argument	imap_folders		532553	0					
ANR	532800	Identifier	imap_folders		532553	0					
ANR	532801	Identifier	LSIZE		532553	1					
ANR	532802	CallExpression	strlen ( IMAPG ( imap_folders ) -> LTEXT = cpystr ( mailbox ) )		532553	1					
ANR	532803	Callee	strlen		532553	0					
ANR	532804	Identifier	strlen		532553	0					
ANR	532805	ArgumentList	IMAPG ( imap_folders ) -> LTEXT = cpystr ( mailbox )		532553	1					
ANR	532806	Argument	IMAPG ( imap_folders ) -> LTEXT = cpystr ( mailbox )		532553	0					
ANR	532807	AssignmentExpression	IMAPG ( imap_folders ) -> LTEXT = cpystr ( mailbox )		532553	0		=			
ANR	532808	PtrMemberAccess	IMAPG ( imap_folders ) -> LTEXT		532553	0					
ANR	532809	CallExpression	IMAPG ( imap_folders )		532553	0					
ANR	532810	Callee	IMAPG		532553	0					
ANR	532811	Identifier	IMAPG		532553	0					
ANR	532812	ArgumentList	imap_folders		532553	1					
ANR	532813	Argument	imap_folders		532553	0					
ANR	532814	Identifier	imap_folders		532553	0					
ANR	532815	Identifier	LTEXT		532553	1					
ANR	532816	CallExpression	cpystr ( mailbox )		532553	1					
ANR	532817	Callee	cpystr		532553	0					
ANR	532818	Identifier	cpystr		532553	0					
ANR	532819	ArgumentList	mailbox		532553	1					
ANR	532820	Argument	mailbox		532553	0					
ANR	532821	Identifier	mailbox		532553	0					
ANR	532822	ExpressionStatement	IMAPG ( imap_folders ) -> next = NIL	4945:4:145848:145877	532553	2	True				
ANR	532823	AssignmentExpression	IMAPG ( imap_folders ) -> next = NIL		532553	0		=			
ANR	532824	PtrMemberAccess	IMAPG ( imap_folders ) -> next		532553	0					
ANR	532825	CallExpression	IMAPG ( imap_folders )		532553	0					
ANR	532826	Callee	IMAPG		532553	0					
ANR	532827	Identifier	IMAPG		532553	0					
ANR	532828	ArgumentList	imap_folders		532553	1					
ANR	532829	Argument	imap_folders		532553	0					
ANR	532830	Identifier	imap_folders		532553	0					
ANR	532831	Identifier	next		532553	1					
ANR	532832	Identifier	NIL		532553	1					
ANR	532833	ExpressionStatement	IMAPG ( imap_folders_tail ) = IMAPG ( imap_folders )	4946:4:145883:145929	532553	3	True				
ANR	532834	AssignmentExpression	IMAPG ( imap_folders_tail ) = IMAPG ( imap_folders )		532553	0		=			
ANR	532835	CallExpression	IMAPG ( imap_folders_tail )		532553	0					
ANR	532836	Callee	IMAPG		532553	0					
ANR	532837	Identifier	IMAPG		532553	0					
ANR	532838	ArgumentList	imap_folders_tail		532553	1					
ANR	532839	Argument	imap_folders_tail		532553	0					
ANR	532840	Identifier	imap_folders_tail		532553	0					
ANR	532841	CallExpression	IMAPG ( imap_folders )		532553	1					
ANR	532842	Callee	IMAPG		532553	0					
ANR	532843	Identifier	IMAPG		532553	0					
ANR	532844	ArgumentList	imap_folders		532553	1					
ANR	532845	Argument	imap_folders		532553	0					
ANR	532846	Identifier	imap_folders		532553	0					
ANR	532847	ElseStatement	else		532553	0					
ANR	532848	CompoundStatement		35:10:1302:1302	532553	0					
ANR	532849	ExpressionStatement	cur = IMAPG ( imap_folders_tail )	4948:4:145947:145975	532553	0	True				
ANR	532850	AssignmentExpression	cur = IMAPG ( imap_folders_tail )		532553	0		=			
ANR	532851	Identifier	cur		532553	0					
ANR	532852	CallExpression	IMAPG ( imap_folders_tail )		532553	1					
ANR	532853	Callee	IMAPG		532553	0					
ANR	532854	Identifier	IMAPG		532553	0					
ANR	532855	ArgumentList	imap_folders_tail		532553	1					
ANR	532856	Argument	imap_folders_tail		532553	0					
ANR	532857	Identifier	imap_folders_tail		532553	0					
ANR	532858	ExpressionStatement	cur -> next = mail_newstringlist ( )	4949:4:145981:146012	532553	1	True				
ANR	532859	AssignmentExpression	cur -> next = mail_newstringlist ( )		532553	0		=			
ANR	532860	PtrMemberAccess	cur -> next		532553	0					
ANR	532861	Identifier	cur		532553	0					
ANR	532862	Identifier	next		532553	1					
ANR	532863	CallExpression	mail_newstringlist ( )		532553	1					
ANR	532864	Callee	mail_newstringlist		532553	0					
ANR	532865	Identifier	mail_newstringlist		532553	0					
ANR	532866	ArgumentList			532553	1					
ANR	532867	ExpressionStatement	cur = cur -> next	4950:4:146018:146031	532553	2	True				
ANR	532868	AssignmentExpression	cur = cur -> next		532553	0		=			
ANR	532869	Identifier	cur		532553	0					
ANR	532870	PtrMemberAccess	cur -> next		532553	1					
ANR	532871	Identifier	cur		532553	0					
ANR	532872	Identifier	next		532553	1					
ANR	532873	ExpressionStatement	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( mailbox ) )	4951:4:146037:146088	532553	3	True				
ANR	532874	AssignmentExpression	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( mailbox ) )		532553	0		=			
ANR	532875	PtrMemberAccess	cur -> LSIZE		532553	0					
ANR	532876	Identifier	cur		532553	0					
ANR	532877	Identifier	LSIZE		532553	1					
ANR	532878	CallExpression	strlen ( cur -> LTEXT = cpystr ( mailbox ) )		532553	1					
ANR	532879	Callee	strlen		532553	0					
ANR	532880	Identifier	strlen		532553	0					
ANR	532881	ArgumentList	cur -> LTEXT = cpystr ( mailbox )		532553	1					
ANR	532882	Argument	cur -> LTEXT = cpystr ( mailbox )		532553	0					
ANR	532883	AssignmentExpression	cur -> LTEXT = cpystr ( mailbox )		532553	0		=			
ANR	532884	PtrMemberAccess	cur -> LTEXT		532553	0					
ANR	532885	Identifier	cur		532553	0					
ANR	532886	Identifier	LTEXT		532553	1					
ANR	532887	CallExpression	cpystr ( mailbox )		532553	1					
ANR	532888	Callee	cpystr		532553	0					
ANR	532889	Identifier	cpystr		532553	0					
ANR	532890	ArgumentList	mailbox		532553	1					
ANR	532891	Argument	mailbox		532553	0					
ANR	532892	Identifier	mailbox		532553	0					
ANR	532893	ExpressionStatement	cur -> next = NIL	4952:4:146094:146109	532553	4	True				
ANR	532894	AssignmentExpression	cur -> next = NIL		532553	0		=			
ANR	532895	PtrMemberAccess	cur -> next		532553	0					
ANR	532896	Identifier	cur		532553	0					
ANR	532897	Identifier	next		532553	1					
ANR	532898	Identifier	NIL		532553	1					
ANR	532899	ExpressionStatement	IMAPG ( imap_folders_tail ) = cur	4953:4:146115:146145	532553	5	True				
ANR	532900	AssignmentExpression	IMAPG ( imap_folders_tail ) = cur		532553	0		=			
ANR	532901	CallExpression	IMAPG ( imap_folders_tail )		532553	0					
ANR	532902	Callee	IMAPG		532553	0					
ANR	532903	Identifier	IMAPG		532553	0					
ANR	532904	ArgumentList	imap_folders_tail		532553	1					
ANR	532905	Argument	imap_folders_tail		532553	0					
ANR	532906	Identifier	imap_folders_tail		532553	0					
ANR	532907	Identifier	cur		532553	1					
ANR	532908	ReturnType	PHP_IMAP_EXPORT void		532553	1					
ANR	532909	Identifier	mm_list		532553	2					
ANR	532910	ParameterList	"MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes"		532553	3					
ANR	532911	Parameter	MAILSTREAM * stream	4912:29:144569:144586	532553	0	True				
ANR	532912	ParameterType	MAILSTREAM *		532553	0					
ANR	532913	Identifier	stream		532553	1					
ANR	532914	Parameter	DTYPE delimiter	4912:49:144589:144603	532553	1	True				
ANR	532915	ParameterType	DTYPE		532553	0					
ANR	532916	Identifier	delimiter		532553	1					
ANR	532917	Parameter	char * mailbox	4912:66:144606:144618	532553	2	True				
ANR	532918	ParameterType	char *		532553	0					
ANR	532919	Identifier	mailbox		532553	1					
ANR	532920	Parameter	long attributes	4912:81:144621:144635	532553	3	True				
ANR	532921	ParameterType	long		532553	0					
ANR	532922	Identifier	attributes		532553	1					
ANR	532923	CFGEntryNode	ENTRY		532553		True				
ANR	532924	CFGExitNode	EXIT		532553		True				
ANR	532925	Symbol	IMAPG ( imap_folder_objects ) -> attributes		532553						
ANR	532926	Symbol	cur		532553						
ANR	532927	Symbol	ocur		532553						
ANR	532928	Symbol	LATT_NOSELECT		532553						
ANR	532929	Symbol	FLIST_OBJECT		532553						
ANR	532930	Symbol	* ocur		532553						
ANR	532931	Symbol	imap_folder_objects		532553						
ANR	532932	Symbol	ocur -> LTEXT		532553						
ANR	532933	Symbol	IMAPG ( imap_folder_objects ) -> LTEXT		532553						
ANR	532934	Symbol	mail_newfolderobjectlist		532553						
ANR	532935	Symbol	imap_folders		532553						
ANR	532936	Symbol	strlen		532553						
ANR	532937	Symbol	stream		532553						
ANR	532938	Symbol	imap_folder_objects_tail		532553						
ANR	532939	Symbol	* cur		532553						
ANR	532940	Symbol	delimiter		532553						
ANR	532941	Symbol	* IMAPG		532553						
ANR	532942	Symbol	cpystr		532553						
ANR	532943	Symbol	IMAPG ( imap_folder_objects ) -> next		532553						
ANR	532944	Symbol	IMAPG ( imap_folders ) -> next		532553						
ANR	532945	Symbol	mail_newstringlist		532553						
ANR	532946	Symbol	folderlist_style		532553						
ANR	532947	Symbol	cur -> LTEXT		532553						
ANR	532948	Symbol	ocur -> attributes		532553						
ANR	532949	Symbol	IMAPG ( imap_folders ) -> LSIZE		532553						
ANR	532950	Symbol	NIL		532553						
ANR	532951	Symbol	imap_folders_tail		532553						
ANR	532952	Symbol	ocur -> next		532553						
ANR	532953	Symbol	mailbox		532553						
ANR	532954	Symbol	IMAPG ( imap_folders ) -> LTEXT		532553						
ANR	532955	Symbol	IMAPG ( imap_folder_objects ) -> LSIZE		532553						
ANR	532956	Symbol	attributes		532553						
ANR	532957	Symbol	IMAPG		532553						
ANR	532958	Symbol	IMAPG ( imap_folder_objects ) -> delimiter		532553						
ANR	532959	Symbol	cur -> LSIZE		532553						
ANR	532960	Symbol	ocur -> delimiter		532553						
ANR	532961	Symbol	cur -> next		532553						
ANR	532962	Symbol	ocur -> LSIZE		532553						
ANR	532963	Function	mm_lsub	4959:0:146162:147703							
ANR	532964	FunctionDef	"mm_lsub (MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes)"		532963	0					
ANR	532965	CompoundStatement		4960:0:146260:147703	532963	0					
ANR	532966	IdentifierDeclStatement	STRINGLIST * cur = NIL ;	4961:1:146263:146282	532963	0	True				
ANR	532967	IdentifierDecl	* cur = NIL		532963	0					
ANR	532968	IdentifierDeclType	STRINGLIST *		532963	0					
ANR	532969	Identifier	cur		532963	1					
ANR	532970	AssignmentExpression	* cur = NIL		532963	2		=			
ANR	532971	Identifier	NIL		532963	0					
ANR	532972	Identifier	NIL		532963	1					
ANR	532973	IdentifierDeclStatement	FOBJECTLIST * ocur = NIL ;	4962:1:146285:146306	532963	1	True				
ANR	532974	IdentifierDecl	* ocur = NIL		532963	0					
ANR	532975	IdentifierDeclType	FOBJECTLIST *		532963	0					
ANR	532976	Identifier	ocur		532963	1					
ANR	532977	AssignmentExpression	* ocur = NIL		532963	2		=			
ANR	532978	Identifier	NIL		532963	0					
ANR	532979	Identifier	NIL		532963	1					
ANR	532980	ExpressionStatement	TSRMLS_FETCH ( )	4963:1:146309:146323	532963	2	True				
ANR	532981	CallExpression	TSRMLS_FETCH ( )		532963	0					
ANR	532982	Callee	TSRMLS_FETCH		532963	0					
ANR	532983	Identifier	TSRMLS_FETCH		532963	0					
ANR	532984	ArgumentList			532963	1					
ANR	532985	IfStatement	if ( IMAPG ( folderlist_style ) == FLIST_OBJECT )		532963	3					
ANR	532986	Condition	IMAPG ( folderlist_style ) == FLIST_OBJECT	4965:5:146331:146369	532963	0	True				
ANR	532987	EqualityExpression	IMAPG ( folderlist_style ) == FLIST_OBJECT		532963	0		==			
ANR	532988	CallExpression	IMAPG ( folderlist_style )		532963	0					
ANR	532989	Callee	IMAPG		532963	0					
ANR	532990	Identifier	IMAPG		532963	0					
ANR	532991	ArgumentList	folderlist_style		532963	1					
ANR	532992	Argument	folderlist_style		532963	0					
ANR	532993	Identifier	folderlist_style		532963	0					
ANR	532994	Identifier	FLIST_OBJECT		532963	1					
ANR	532995	CompoundStatement		6:46:111:111	532963	1					
ANR	532996	IfStatement	if ( IMAPG ( imap_sfolder_objects ) == NIL )		532963	0					
ANR	532997	Condition	IMAPG ( imap_sfolder_objects ) == NIL	4968:6:146435:146468	532963	0	True				
ANR	532998	EqualityExpression	IMAPG ( imap_sfolder_objects ) == NIL		532963	0		==			
ANR	532999	CallExpression	IMAPG ( imap_sfolder_objects )		532963	0					
ANR	533000	Callee	IMAPG		532963	0					
ANR	533001	Identifier	IMAPG		532963	0					
ANR	533002	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533003	Argument	imap_sfolder_objects		532963	0					
ANR	533004	Identifier	imap_sfolder_objects		532963	0					
ANR	533005	Identifier	NIL		532963	1					
ANR	533006	CompoundStatement		9:42:210:210	532963	1					
ANR	533007	ExpressionStatement	IMAPG ( imap_sfolder_objects ) = mail_newfolderobjectlist ( )	4969:3:146476:146532	532963	0	True				
ANR	533008	AssignmentExpression	IMAPG ( imap_sfolder_objects ) = mail_newfolderobjectlist ( )		532963	0		=			
ANR	533009	CallExpression	IMAPG ( imap_sfolder_objects )		532963	0					
ANR	533010	Callee	IMAPG		532963	0					
ANR	533011	Identifier	IMAPG		532963	0					
ANR	533012	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533013	Argument	imap_sfolder_objects		532963	0					
ANR	533014	Identifier	imap_sfolder_objects		532963	0					
ANR	533015	CallExpression	mail_newfolderobjectlist ( )		532963	1					
ANR	533016	Callee	mail_newfolderobjectlist		532963	0					
ANR	533017	Identifier	mail_newfolderobjectlist		532963	0					
ANR	533018	ArgumentList			532963	1					
ANR	533019	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> LSIZE = strlen ( IMAPG ( imap_sfolder_objects ) -> LTEXT = cpystr ( mailbox ) )	4970:3:146537:146630	532963	1	True				
ANR	533020	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> LSIZE = strlen ( IMAPG ( imap_sfolder_objects ) -> LTEXT = cpystr ( mailbox ) )		532963	0		=			
ANR	533021	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> LSIZE		532963	0					
ANR	533022	CallExpression	IMAPG ( imap_sfolder_objects )		532963	0					
ANR	533023	Callee	IMAPG		532963	0					
ANR	533024	Identifier	IMAPG		532963	0					
ANR	533025	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533026	Argument	imap_sfolder_objects		532963	0					
ANR	533027	Identifier	imap_sfolder_objects		532963	0					
ANR	533028	Identifier	LSIZE		532963	1					
ANR	533029	CallExpression	strlen ( IMAPG ( imap_sfolder_objects ) -> LTEXT = cpystr ( mailbox ) )		532963	1					
ANR	533030	Callee	strlen		532963	0					
ANR	533031	Identifier	strlen		532963	0					
ANR	533032	ArgumentList	IMAPG ( imap_sfolder_objects ) -> LTEXT = cpystr ( mailbox )		532963	1					
ANR	533033	Argument	IMAPG ( imap_sfolder_objects ) -> LTEXT = cpystr ( mailbox )		532963	0					
ANR	533034	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> LTEXT = cpystr ( mailbox )		532963	0		=			
ANR	533035	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> LTEXT		532963	0					
ANR	533036	CallExpression	IMAPG ( imap_sfolder_objects )		532963	0					
ANR	533037	Callee	IMAPG		532963	0					
ANR	533038	Identifier	IMAPG		532963	0					
ANR	533039	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533040	Argument	imap_sfolder_objects		532963	0					
ANR	533041	Identifier	imap_sfolder_objects		532963	0					
ANR	533042	Identifier	LTEXT		532963	1					
ANR	533043	CallExpression	cpystr ( mailbox )		532963	1					
ANR	533044	Callee	cpystr		532963	0					
ANR	533045	Identifier	cpystr		532963	0					
ANR	533046	ArgumentList	mailbox		532963	1					
ANR	533047	Argument	mailbox		532963	0					
ANR	533048	Identifier	mailbox		532963	0					
ANR	533049	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> delimiter = delimiter	4971:3:146635:146685	532963	2	True				
ANR	533050	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> delimiter = delimiter		532963	0		=			
ANR	533051	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> delimiter		532963	0					
ANR	533052	CallExpression	IMAPG ( imap_sfolder_objects )		532963	0					
ANR	533053	Callee	IMAPG		532963	0					
ANR	533054	Identifier	IMAPG		532963	0					
ANR	533055	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533056	Argument	imap_sfolder_objects		532963	0					
ANR	533057	Identifier	imap_sfolder_objects		532963	0					
ANR	533058	Identifier	delimiter		532963	1					
ANR	533059	Identifier	delimiter		532963	1					
ANR	533060	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> attributes = attributes	4972:3:146690:146742	532963	3	True				
ANR	533061	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> attributes = attributes		532963	0		=			
ANR	533062	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> attributes		532963	0					
ANR	533063	CallExpression	IMAPG ( imap_sfolder_objects )		532963	0					
ANR	533064	Callee	IMAPG		532963	0					
ANR	533065	Identifier	IMAPG		532963	0					
ANR	533066	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533067	Argument	imap_sfolder_objects		532963	0					
ANR	533068	Identifier	imap_sfolder_objects		532963	0					
ANR	533069	Identifier	attributes		532963	1					
ANR	533070	Identifier	attributes		532963	1					
ANR	533071	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> next = NIL	4973:3:146747:146786	532963	4	True				
ANR	533072	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> next = NIL		532963	0		=			
ANR	533073	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> next		532963	0					
ANR	533074	CallExpression	IMAPG ( imap_sfolder_objects )		532963	0					
ANR	533075	Callee	IMAPG		532963	0					
ANR	533076	Identifier	IMAPG		532963	0					
ANR	533077	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533078	Argument	imap_sfolder_objects		532963	0					
ANR	533079	Identifier	imap_sfolder_objects		532963	0					
ANR	533080	Identifier	next		532963	1					
ANR	533081	Identifier	NIL		532963	1					
ANR	533082	ExpressionStatement	IMAPG ( imap_sfolder_objects_tail ) = IMAPG ( imap_sfolder_objects )	4974:3:146791:146853	532963	5	True				
ANR	533083	AssignmentExpression	IMAPG ( imap_sfolder_objects_tail ) = IMAPG ( imap_sfolder_objects )		532963	0		=			
ANR	533084	CallExpression	IMAPG ( imap_sfolder_objects_tail )		532963	0					
ANR	533085	Callee	IMAPG		532963	0					
ANR	533086	Identifier	IMAPG		532963	0					
ANR	533087	ArgumentList	imap_sfolder_objects_tail		532963	1					
ANR	533088	Argument	imap_sfolder_objects_tail		532963	0					
ANR	533089	Identifier	imap_sfolder_objects_tail		532963	0					
ANR	533090	CallExpression	IMAPG ( imap_sfolder_objects )		532963	1					
ANR	533091	Callee	IMAPG		532963	0					
ANR	533092	Identifier	IMAPG		532963	0					
ANR	533093	ArgumentList	imap_sfolder_objects		532963	1					
ANR	533094	Argument	imap_sfolder_objects		532963	0					
ANR	533095	Identifier	imap_sfolder_objects		532963	0					
ANR	533096	ElseStatement	else		532963	0					
ANR	533097	CompoundStatement		16:9:603:603	532963	0					
ANR	533098	ExpressionStatement	ocur = IMAPG ( imap_sfolder_objects_tail )	4976:3:146869:146906	532963	0	True				
ANR	533099	AssignmentExpression	ocur = IMAPG ( imap_sfolder_objects_tail )		532963	0		=			
ANR	533100	Identifier	ocur		532963	0					
ANR	533101	CallExpression	IMAPG ( imap_sfolder_objects_tail )		532963	1					
ANR	533102	Callee	IMAPG		532963	0					
ANR	533103	Identifier	IMAPG		532963	0					
ANR	533104	ArgumentList	imap_sfolder_objects_tail		532963	1					
ANR	533105	Argument	imap_sfolder_objects_tail		532963	0					
ANR	533106	Identifier	imap_sfolder_objects_tail		532963	0					
ANR	533107	ExpressionStatement	ocur -> next = mail_newfolderobjectlist ( )	4977:3:146911:146948	532963	1	True				
ANR	533108	AssignmentExpression	ocur -> next = mail_newfolderobjectlist ( )		532963	0		=			
ANR	533109	PtrMemberAccess	ocur -> next		532963	0					
ANR	533110	Identifier	ocur		532963	0					
ANR	533111	Identifier	next		532963	1					
ANR	533112	CallExpression	mail_newfolderobjectlist ( )		532963	1					
ANR	533113	Callee	mail_newfolderobjectlist		532963	0					
ANR	533114	Identifier	mail_newfolderobjectlist		532963	0					
ANR	533115	ArgumentList			532963	1					
ANR	533116	ExpressionStatement	ocur = ocur -> next	4978:3:146953:146968	532963	2	True				
ANR	533117	AssignmentExpression	ocur = ocur -> next		532963	0		=			
ANR	533118	Identifier	ocur		532963	0					
ANR	533119	PtrMemberAccess	ocur -> next		532963	1					
ANR	533120	Identifier	ocur		532963	0					
ANR	533121	Identifier	next		532963	1					
ANR	533122	ExpressionStatement	ocur -> LSIZE = strlen ( ocur -> LTEXT = cpystr ( mailbox ) )	4979:3:146973:147022	532963	3	True				
ANR	533123	AssignmentExpression	ocur -> LSIZE = strlen ( ocur -> LTEXT = cpystr ( mailbox ) )		532963	0		=			
ANR	533124	PtrMemberAccess	ocur -> LSIZE		532963	0					
ANR	533125	Identifier	ocur		532963	0					
ANR	533126	Identifier	LSIZE		532963	1					
ANR	533127	CallExpression	strlen ( ocur -> LTEXT = cpystr ( mailbox ) )		532963	1					
ANR	533128	Callee	strlen		532963	0					
ANR	533129	Identifier	strlen		532963	0					
ANR	533130	ArgumentList	ocur -> LTEXT = cpystr ( mailbox )		532963	1					
ANR	533131	Argument	ocur -> LTEXT = cpystr ( mailbox )		532963	0					
ANR	533132	AssignmentExpression	ocur -> LTEXT = cpystr ( mailbox )		532963	0		=			
ANR	533133	PtrMemberAccess	ocur -> LTEXT		532963	0					
ANR	533134	Identifier	ocur		532963	0					
ANR	533135	Identifier	LTEXT		532963	1					
ANR	533136	CallExpression	cpystr ( mailbox )		532963	1					
ANR	533137	Callee	cpystr		532963	0					
ANR	533138	Identifier	cpystr		532963	0					
ANR	533139	ArgumentList	mailbox		532963	1					
ANR	533140	Argument	mailbox		532963	0					
ANR	533141	Identifier	mailbox		532963	0					
ANR	533142	ExpressionStatement	ocur -> delimiter = delimiter	4980:3:147027:147054	532963	4	True				
ANR	533143	AssignmentExpression	ocur -> delimiter = delimiter		532963	0		=			
ANR	533144	PtrMemberAccess	ocur -> delimiter		532963	0					
ANR	533145	Identifier	ocur		532963	0					
ANR	533146	Identifier	delimiter		532963	1					
ANR	533147	Identifier	delimiter		532963	1					
ANR	533148	ExpressionStatement	ocur -> attributes = attributes	4981:3:147059:147088	532963	5	True				
ANR	533149	AssignmentExpression	ocur -> attributes = attributes		532963	0		=			
ANR	533150	PtrMemberAccess	ocur -> attributes		532963	0					
ANR	533151	Identifier	ocur		532963	0					
ANR	533152	Identifier	attributes		532963	1					
ANR	533153	Identifier	attributes		532963	1					
ANR	533154	ExpressionStatement	ocur -> next = NIL	4982:3:147093:147109	532963	6	True				
ANR	533155	AssignmentExpression	ocur -> next = NIL		532963	0		=			
ANR	533156	PtrMemberAccess	ocur -> next		532963	0					
ANR	533157	Identifier	ocur		532963	0					
ANR	533158	Identifier	next		532963	1					
ANR	533159	Identifier	NIL		532963	1					
ANR	533160	ExpressionStatement	IMAPG ( imap_sfolder_objects_tail ) = ocur	4983:3:147114:147153	532963	7	True				
ANR	533161	AssignmentExpression	IMAPG ( imap_sfolder_objects_tail ) = ocur		532963	0		=			
ANR	533162	CallExpression	IMAPG ( imap_sfolder_objects_tail )		532963	0					
ANR	533163	Callee	IMAPG		532963	0					
ANR	533164	Identifier	IMAPG		532963	0					
ANR	533165	ArgumentList	imap_sfolder_objects_tail		532963	1					
ANR	533166	Argument	imap_sfolder_objects_tail		532963	0					
ANR	533167	Identifier	imap_sfolder_objects_tail		532963	0					
ANR	533168	Identifier	ocur		532963	1					
ANR	533169	ElseStatement	else		532963	0					
ANR	533170	CompoundStatement		26:8:906:906	532963	0					
ANR	533171	IfStatement	if ( IMAPG ( imap_sfolders ) == NIL )		532963	0					
ANR	533172	Condition	IMAPG ( imap_sfolders ) == NIL	4987:6:147236:147262	532963	0	True				
ANR	533173	EqualityExpression	IMAPG ( imap_sfolders ) == NIL		532963	0		==			
ANR	533174	CallExpression	IMAPG ( imap_sfolders )		532963	0					
ANR	533175	Callee	IMAPG		532963	0					
ANR	533176	Identifier	IMAPG		532963	0					
ANR	533177	ArgumentList	imap_sfolders		532963	1					
ANR	533178	Argument	imap_sfolders		532963	0					
ANR	533179	Identifier	imap_sfolders		532963	0					
ANR	533180	Identifier	NIL		532963	1					
ANR	533181	CompoundStatement		28:35:1004:1004	532963	1					
ANR	533182	ExpressionStatement	IMAPG ( imap_sfolders ) = mail_newstringlist ( )	4988:3:147270:147311	532963	0	True				
ANR	533183	AssignmentExpression	IMAPG ( imap_sfolders ) = mail_newstringlist ( )		532963	0		=			
ANR	533184	CallExpression	IMAPG ( imap_sfolders )		532963	0					
ANR	533185	Callee	IMAPG		532963	0					
ANR	533186	Identifier	IMAPG		532963	0					
ANR	533187	ArgumentList	imap_sfolders		532963	1					
ANR	533188	Argument	imap_sfolders		532963	0					
ANR	533189	Identifier	imap_sfolders		532963	0					
ANR	533190	CallExpression	mail_newstringlist ( )		532963	1					
ANR	533191	Callee	mail_newstringlist		532963	0					
ANR	533192	Identifier	mail_newstringlist		532963	0					
ANR	533193	ArgumentList			532963	1					
ANR	533194	ExpressionStatement	IMAPG ( imap_sfolders ) -> LSIZE = strlen ( IMAPG ( imap_sfolders ) -> LTEXT = cpystr ( mailbox ) )	4989:3:147316:147395	532963	1	True				
ANR	533195	AssignmentExpression	IMAPG ( imap_sfolders ) -> LSIZE = strlen ( IMAPG ( imap_sfolders ) -> LTEXT = cpystr ( mailbox ) )		532963	0		=			
ANR	533196	PtrMemberAccess	IMAPG ( imap_sfolders ) -> LSIZE		532963	0					
ANR	533197	CallExpression	IMAPG ( imap_sfolders )		532963	0					
ANR	533198	Callee	IMAPG		532963	0					
ANR	533199	Identifier	IMAPG		532963	0					
ANR	533200	ArgumentList	imap_sfolders		532963	1					
ANR	533201	Argument	imap_sfolders		532963	0					
ANR	533202	Identifier	imap_sfolders		532963	0					
ANR	533203	Identifier	LSIZE		532963	1					
ANR	533204	CallExpression	strlen ( IMAPG ( imap_sfolders ) -> LTEXT = cpystr ( mailbox ) )		532963	1					
ANR	533205	Callee	strlen		532963	0					
ANR	533206	Identifier	strlen		532963	0					
ANR	533207	ArgumentList	IMAPG ( imap_sfolders ) -> LTEXT = cpystr ( mailbox )		532963	1					
ANR	533208	Argument	IMAPG ( imap_sfolders ) -> LTEXT = cpystr ( mailbox )		532963	0					
ANR	533209	AssignmentExpression	IMAPG ( imap_sfolders ) -> LTEXT = cpystr ( mailbox )		532963	0		=			
ANR	533210	PtrMemberAccess	IMAPG ( imap_sfolders ) -> LTEXT		532963	0					
ANR	533211	CallExpression	IMAPG ( imap_sfolders )		532963	0					
ANR	533212	Callee	IMAPG		532963	0					
ANR	533213	Identifier	IMAPG		532963	0					
ANR	533214	ArgumentList	imap_sfolders		532963	1					
ANR	533215	Argument	imap_sfolders		532963	0					
ANR	533216	Identifier	imap_sfolders		532963	0					
ANR	533217	Identifier	LTEXT		532963	1					
ANR	533218	CallExpression	cpystr ( mailbox )		532963	1					
ANR	533219	Callee	cpystr		532963	0					
ANR	533220	Identifier	cpystr		532963	0					
ANR	533221	ArgumentList	mailbox		532963	1					
ANR	533222	Argument	mailbox		532963	0					
ANR	533223	Identifier	mailbox		532963	0					
ANR	533224	ExpressionStatement	IMAPG ( imap_sfolders ) -> next = NIL	4990:3:147400:147430	532963	2	True				
ANR	533225	AssignmentExpression	IMAPG ( imap_sfolders ) -> next = NIL		532963	0		=			
ANR	533226	PtrMemberAccess	IMAPG ( imap_sfolders ) -> next		532963	0					
ANR	533227	CallExpression	IMAPG ( imap_sfolders )		532963	0					
ANR	533228	Callee	IMAPG		532963	0					
ANR	533229	Identifier	IMAPG		532963	0					
ANR	533230	ArgumentList	imap_sfolders		532963	1					
ANR	533231	Argument	imap_sfolders		532963	0					
ANR	533232	Identifier	imap_sfolders		532963	0					
ANR	533233	Identifier	next		532963	1					
ANR	533234	Identifier	NIL		532963	1					
ANR	533235	ExpressionStatement	IMAPG ( imap_sfolders_tail ) = IMAPG ( imap_sfolders )	4991:3:147435:147483	532963	3	True				
ANR	533236	AssignmentExpression	IMAPG ( imap_sfolders_tail ) = IMAPG ( imap_sfolders )		532963	0		=			
ANR	533237	CallExpression	IMAPG ( imap_sfolders_tail )		532963	0					
ANR	533238	Callee	IMAPG		532963	0					
ANR	533239	Identifier	IMAPG		532963	0					
ANR	533240	ArgumentList	imap_sfolders_tail		532963	1					
ANR	533241	Argument	imap_sfolders_tail		532963	0					
ANR	533242	Identifier	imap_sfolders_tail		532963	0					
ANR	533243	CallExpression	IMAPG ( imap_sfolders )		532963	1					
ANR	533244	Callee	IMAPG		532963	0					
ANR	533245	Identifier	IMAPG		532963	0					
ANR	533246	ArgumentList	imap_sfolders		532963	1					
ANR	533247	Argument	imap_sfolders		532963	0					
ANR	533248	Identifier	imap_sfolders		532963	0					
ANR	533249	ElseStatement	else		532963	0					
ANR	533250	CompoundStatement		33:9:1233:1233	532963	0					
ANR	533251	ExpressionStatement	cur = IMAPG ( imap_sfolders_tail )	4993:3:147499:147528	532963	0	True				
ANR	533252	AssignmentExpression	cur = IMAPG ( imap_sfolders_tail )		532963	0		=			
ANR	533253	Identifier	cur		532963	0					
ANR	533254	CallExpression	IMAPG ( imap_sfolders_tail )		532963	1					
ANR	533255	Callee	IMAPG		532963	0					
ANR	533256	Identifier	IMAPG		532963	0					
ANR	533257	ArgumentList	imap_sfolders_tail		532963	1					
ANR	533258	Argument	imap_sfolders_tail		532963	0					
ANR	533259	Identifier	imap_sfolders_tail		532963	0					
ANR	533260	ExpressionStatement	cur -> next = mail_newstringlist ( )	4994:3:147533:147564	532963	1	True				
ANR	533261	AssignmentExpression	cur -> next = mail_newstringlist ( )		532963	0		=			
ANR	533262	PtrMemberAccess	cur -> next		532963	0					
ANR	533263	Identifier	cur		532963	0					
ANR	533264	Identifier	next		532963	1					
ANR	533265	CallExpression	mail_newstringlist ( )		532963	1					
ANR	533266	Callee	mail_newstringlist		532963	0					
ANR	533267	Identifier	mail_newstringlist		532963	0					
ANR	533268	ArgumentList			532963	1					
ANR	533269	ExpressionStatement	cur = cur -> next	4995:3:147569:147582	532963	2	True				
ANR	533270	AssignmentExpression	cur = cur -> next		532963	0		=			
ANR	533271	Identifier	cur		532963	0					
ANR	533272	PtrMemberAccess	cur -> next		532963	1					
ANR	533273	Identifier	cur		532963	0					
ANR	533274	Identifier	next		532963	1					
ANR	533275	ExpressionStatement	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( mailbox ) )	4996:3:147587:147638	532963	3	True				
ANR	533276	AssignmentExpression	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( mailbox ) )		532963	0		=			
ANR	533277	PtrMemberAccess	cur -> LSIZE		532963	0					
ANR	533278	Identifier	cur		532963	0					
ANR	533279	Identifier	LSIZE		532963	1					
ANR	533280	CallExpression	strlen ( cur -> LTEXT = cpystr ( mailbox ) )		532963	1					
ANR	533281	Callee	strlen		532963	0					
ANR	533282	Identifier	strlen		532963	0					
ANR	533283	ArgumentList	cur -> LTEXT = cpystr ( mailbox )		532963	1					
ANR	533284	Argument	cur -> LTEXT = cpystr ( mailbox )		532963	0					
ANR	533285	AssignmentExpression	cur -> LTEXT = cpystr ( mailbox )		532963	0		=			
ANR	533286	PtrMemberAccess	cur -> LTEXT		532963	0					
ANR	533287	Identifier	cur		532963	0					
ANR	533288	Identifier	LTEXT		532963	1					
ANR	533289	CallExpression	cpystr ( mailbox )		532963	1					
ANR	533290	Callee	cpystr		532963	0					
ANR	533291	Identifier	cpystr		532963	0					
ANR	533292	ArgumentList	mailbox		532963	1					
ANR	533293	Argument	mailbox		532963	0					
ANR	533294	Identifier	mailbox		532963	0					
ANR	533295	ExpressionStatement	cur -> next = NIL	4997:3:147643:147658	532963	4	True				
ANR	533296	AssignmentExpression	cur -> next = NIL		532963	0		=			
ANR	533297	PtrMemberAccess	cur -> next		532963	0					
ANR	533298	Identifier	cur		532963	0					
ANR	533299	Identifier	next		532963	1					
ANR	533300	Identifier	NIL		532963	1					
ANR	533301	ExpressionStatement	IMAPG ( imap_sfolders_tail ) = cur	4998:3:147663:147694	532963	5	True				
ANR	533302	AssignmentExpression	IMAPG ( imap_sfolders_tail ) = cur		532963	0		=			
ANR	533303	CallExpression	IMAPG ( imap_sfolders_tail )		532963	0					
ANR	533304	Callee	IMAPG		532963	0					
ANR	533305	Identifier	IMAPG		532963	0					
ANR	533306	ArgumentList	imap_sfolders_tail		532963	1					
ANR	533307	Argument	imap_sfolders_tail		532963	0					
ANR	533308	Identifier	imap_sfolders_tail		532963	0					
ANR	533309	Identifier	cur		532963	1					
ANR	533310	ReturnType	PHP_IMAP_EXPORT void		532963	1					
ANR	533311	Identifier	mm_lsub		532963	2					
ANR	533312	ParameterList	"MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes"		532963	3					
ANR	533313	Parameter	MAILSTREAM * stream	4959:29:146191:146208	532963	0	True				
ANR	533314	ParameterType	MAILSTREAM *		532963	0					
ANR	533315	Identifier	stream		532963	1					
ANR	533316	Parameter	DTYPE delimiter	4959:49:146211:146225	532963	1	True				
ANR	533317	ParameterType	DTYPE		532963	0					
ANR	533318	Identifier	delimiter		532963	1					
ANR	533319	Parameter	char * mailbox	4959:66:146228:146240	532963	2	True				
ANR	533320	ParameterType	char *		532963	0					
ANR	533321	Identifier	mailbox		532963	1					
ANR	533322	Parameter	long attributes	4959:81:146243:146257	532963	3	True				
ANR	533323	ParameterType	long		532963	0					
ANR	533324	Identifier	attributes		532963	1					
ANR	533325	CFGEntryNode	ENTRY		532963		True				
ANR	533326	CFGExitNode	EXIT		532963		True				
ANR	533327	Symbol	cur		532963						
ANR	533328	Symbol	ocur		532963						
ANR	533329	Symbol	FLIST_OBJECT		532963						
ANR	533330	Symbol	* ocur		532963						
ANR	533331	Symbol	IMAPG ( imap_sfolders ) -> LSIZE		532963						
ANR	533332	Symbol	imap_sfolder_objects		532963						
ANR	533333	Symbol	IMAPG ( imap_sfolders ) -> next		532963						
ANR	533334	Symbol	ocur -> LTEXT		532963						
ANR	533335	Symbol	mail_newfolderobjectlist		532963						
ANR	533336	Symbol	IMAPG ( imap_sfolder_objects ) -> LSIZE		532963						
ANR	533337	Symbol	strlen		532963						
ANR	533338	Symbol	stream		532963						
ANR	533339	Symbol	* cur		532963						
ANR	533340	Symbol	delimiter		532963						
ANR	533341	Symbol	* IMAPG		532963						
ANR	533342	Symbol	cpystr		532963						
ANR	533343	Symbol	IMAPG ( imap_sfolders ) -> LTEXT		532963						
ANR	533344	Symbol	imap_sfolders_tail		532963						
ANR	533345	Symbol	IMAPG ( imap_sfolder_objects ) -> attributes		532963						
ANR	533346	Symbol	mail_newstringlist		532963						
ANR	533347	Symbol	folderlist_style		532963						
ANR	533348	Symbol	imap_sfolders		532963						
ANR	533349	Symbol	IMAPG ( imap_sfolder_objects ) -> delimiter		532963						
ANR	533350	Symbol	cur -> LTEXT		532963						
ANR	533351	Symbol	ocur -> attributes		532963						
ANR	533352	Symbol	IMAPG ( imap_sfolder_objects ) -> LTEXT		532963						
ANR	533353	Symbol	imap_sfolder_objects_tail		532963						
ANR	533354	Symbol	NIL		532963						
ANR	533355	Symbol	ocur -> next		532963						
ANR	533356	Symbol	mailbox		532963						
ANR	533357	Symbol	attributes		532963						
ANR	533358	Symbol	IMAPG ( imap_sfolder_objects ) -> next		532963						
ANR	533359	Symbol	IMAPG		532963						
ANR	533360	Symbol	cur -> LSIZE		532963						
ANR	533361	Symbol	ocur -> delimiter		532963						
ANR	533362	Symbol	cur -> next		532963						
ANR	533363	Symbol	ocur -> LSIZE		532963						
ANR	533364	Function	mm_status	5003:0:147706:148282							
ANR	533365	FunctionDef	"mm_status (MAILSTREAM * stream , char * mailbox , MAILSTATUS * status)"		533364	0					
ANR	533366	CompoundStatement		5004:0:147792:148282	533364	0					
ANR	533367	ExpressionStatement	TSRMLS_FETCH ( )	5005:1:147795:147809	533364	0	True				
ANR	533368	CallExpression	TSRMLS_FETCH ( )		533364	0					
ANR	533369	Callee	TSRMLS_FETCH		533364	0					
ANR	533370	Identifier	TSRMLS_FETCH		533364	0					
ANR	533371	ArgumentList			533364	1					
ANR	533372	ExpressionStatement	IMAPG ( status_flags ) = status -> flags	5007:1:147813:147846	533364	1	True				
ANR	533373	AssignmentExpression	IMAPG ( status_flags ) = status -> flags		533364	0		=			
ANR	533374	CallExpression	IMAPG ( status_flags )		533364	0					
ANR	533375	Callee	IMAPG		533364	0					
ANR	533376	Identifier	IMAPG		533364	0					
ANR	533377	ArgumentList	status_flags		533364	1					
ANR	533378	Argument	status_flags		533364	0					
ANR	533379	Identifier	status_flags		533364	0					
ANR	533380	PtrMemberAccess	status -> flags		533364	1					
ANR	533381	Identifier	status		533364	0					
ANR	533382	Identifier	flags		533364	1					
ANR	533383	IfStatement	if ( IMAPG ( status_flags ) & SA_MESSAGES )		533364	2					
ANR	533384	Condition	IMAPG ( status_flags ) & SA_MESSAGES	5008:5:147853:147885	533364	0	True				
ANR	533385	BitAndExpression	IMAPG ( status_flags ) & SA_MESSAGES		533364	0		&			
ANR	533386	CallExpression	IMAPG ( status_flags )		533364	0					
ANR	533387	Callee	IMAPG		533364	0					
ANR	533388	Identifier	IMAPG		533364	0					
ANR	533389	ArgumentList	status_flags		533364	1					
ANR	533390	Argument	status_flags		533364	0					
ANR	533391	Identifier	status_flags		533364	0					
ANR	533392	Identifier	SA_MESSAGES		533364	1					
ANR	533393	CompoundStatement		5:40:95:95	533364	1					
ANR	533394	ExpressionStatement	IMAPG ( status_messages ) = status -> messages	5009:2:147892:147931	533364	0	True				
ANR	533395	AssignmentExpression	IMAPG ( status_messages ) = status -> messages		533364	0		=			
ANR	533396	CallExpression	IMAPG ( status_messages )		533364	0					
ANR	533397	Callee	IMAPG		533364	0					
ANR	533398	Identifier	IMAPG		533364	0					
ANR	533399	ArgumentList	status_messages		533364	1					
ANR	533400	Argument	status_messages		533364	0					
ANR	533401	Identifier	status_messages		533364	0					
ANR	533402	PtrMemberAccess	status -> messages		533364	1					
ANR	533403	Identifier	status		533364	0					
ANR	533404	Identifier	messages		533364	1					
ANR	533405	IfStatement	if ( IMAPG ( status_flags ) & SA_RECENT )		533364	3					
ANR	533406	Condition	IMAPG ( status_flags ) & SA_RECENT	5011:5:147941:147971	533364	0	True				
ANR	533407	BitAndExpression	IMAPG ( status_flags ) & SA_RECENT		533364	0		&			
ANR	533408	CallExpression	IMAPG ( status_flags )		533364	0					
ANR	533409	Callee	IMAPG		533364	0					
ANR	533410	Identifier	IMAPG		533364	0					
ANR	533411	ArgumentList	status_flags		533364	1					
ANR	533412	Argument	status_flags		533364	0					
ANR	533413	Identifier	status_flags		533364	0					
ANR	533414	Identifier	SA_RECENT		533364	1					
ANR	533415	CompoundStatement		8:38:181:181	533364	1					
ANR	533416	ExpressionStatement	IMAPG ( status_recent ) = status -> recent	5012:2:147978:148013	533364	0	True				
ANR	533417	AssignmentExpression	IMAPG ( status_recent ) = status -> recent		533364	0		=			
ANR	533418	CallExpression	IMAPG ( status_recent )		533364	0					
ANR	533419	Callee	IMAPG		533364	0					
ANR	533420	Identifier	IMAPG		533364	0					
ANR	533421	ArgumentList	status_recent		533364	1					
ANR	533422	Argument	status_recent		533364	0					
ANR	533423	Identifier	status_recent		533364	0					
ANR	533424	PtrMemberAccess	status -> recent		533364	1					
ANR	533425	Identifier	status		533364	0					
ANR	533426	Identifier	recent		533364	1					
ANR	533427	IfStatement	if ( IMAPG ( status_flags ) & SA_UNSEEN )		533364	4					
ANR	533428	Condition	IMAPG ( status_flags ) & SA_UNSEEN	5014:5:148023:148053	533364	0	True				
ANR	533429	BitAndExpression	IMAPG ( status_flags ) & SA_UNSEEN		533364	0		&			
ANR	533430	CallExpression	IMAPG ( status_flags )		533364	0					
ANR	533431	Callee	IMAPG		533364	0					
ANR	533432	Identifier	IMAPG		533364	0					
ANR	533433	ArgumentList	status_flags		533364	1					
ANR	533434	Argument	status_flags		533364	0					
ANR	533435	Identifier	status_flags		533364	0					
ANR	533436	Identifier	SA_UNSEEN		533364	1					
ANR	533437	CompoundStatement		11:38:263:263	533364	1					
ANR	533438	ExpressionStatement	IMAPG ( status_unseen ) = status -> unseen	5015:2:148060:148095	533364	0	True				
ANR	533439	AssignmentExpression	IMAPG ( status_unseen ) = status -> unseen		533364	0		=			
ANR	533440	CallExpression	IMAPG ( status_unseen )		533364	0					
ANR	533441	Callee	IMAPG		533364	0					
ANR	533442	Identifier	IMAPG		533364	0					
ANR	533443	ArgumentList	status_unseen		533364	1					
ANR	533444	Argument	status_unseen		533364	0					
ANR	533445	Identifier	status_unseen		533364	0					
ANR	533446	PtrMemberAccess	status -> unseen		533364	1					
ANR	533447	Identifier	status		533364	0					
ANR	533448	Identifier	unseen		533364	1					
ANR	533449	IfStatement	if ( IMAPG ( status_flags ) & SA_UIDNEXT )		533364	5					
ANR	533450	Condition	IMAPG ( status_flags ) & SA_UIDNEXT	5017:5:148105:148136	533364	0	True				
ANR	533451	BitAndExpression	IMAPG ( status_flags ) & SA_UIDNEXT		533364	0		&			
ANR	533452	CallExpression	IMAPG ( status_flags )		533364	0					
ANR	533453	Callee	IMAPG		533364	0					
ANR	533454	Identifier	IMAPG		533364	0					
ANR	533455	ArgumentList	status_flags		533364	1					
ANR	533456	Argument	status_flags		533364	0					
ANR	533457	Identifier	status_flags		533364	0					
ANR	533458	Identifier	SA_UIDNEXT		533364	1					
ANR	533459	CompoundStatement		14:39:346:346	533364	1					
ANR	533460	ExpressionStatement	IMAPG ( status_uidnext ) = status -> uidnext	5018:2:148143:148180	533364	0	True				
ANR	533461	AssignmentExpression	IMAPG ( status_uidnext ) = status -> uidnext		533364	0		=			
ANR	533462	CallExpression	IMAPG ( status_uidnext )		533364	0					
ANR	533463	Callee	IMAPG		533364	0					
ANR	533464	Identifier	IMAPG		533364	0					
ANR	533465	ArgumentList	status_uidnext		533364	1					
ANR	533466	Argument	status_uidnext		533364	0					
ANR	533467	Identifier	status_uidnext		533364	0					
ANR	533468	PtrMemberAccess	status -> uidnext		533364	1					
ANR	533469	Identifier	status		533364	0					
ANR	533470	Identifier	uidnext		533364	1					
ANR	533471	IfStatement	if ( IMAPG ( status_flags ) & SA_UIDVALIDITY )		533364	6					
ANR	533472	Condition	IMAPG ( status_flags ) & SA_UIDVALIDITY	5020:5:148190:148225	533364	0	True				
ANR	533473	BitAndExpression	IMAPG ( status_flags ) & SA_UIDVALIDITY		533364	0		&			
ANR	533474	CallExpression	IMAPG ( status_flags )		533364	0					
ANR	533475	Callee	IMAPG		533364	0					
ANR	533476	Identifier	IMAPG		533364	0					
ANR	533477	ArgumentList	status_flags		533364	1					
ANR	533478	Argument	status_flags		533364	0					
ANR	533479	Identifier	status_flags		533364	0					
ANR	533480	Identifier	SA_UIDVALIDITY		533364	1					
ANR	533481	CompoundStatement		17:43:435:435	533364	1					
ANR	533482	ExpressionStatement	IMAPG ( status_uidvalidity ) = status -> uidvalidity	5021:2:148232:148277	533364	0	True				
ANR	533483	AssignmentExpression	IMAPG ( status_uidvalidity ) = status -> uidvalidity		533364	0		=			
ANR	533484	CallExpression	IMAPG ( status_uidvalidity )		533364	0					
ANR	533485	Callee	IMAPG		533364	0					
ANR	533486	Identifier	IMAPG		533364	0					
ANR	533487	ArgumentList	status_uidvalidity		533364	1					
ANR	533488	Argument	status_uidvalidity		533364	0					
ANR	533489	Identifier	status_uidvalidity		533364	0					
ANR	533490	PtrMemberAccess	status -> uidvalidity		533364	1					
ANR	533491	Identifier	status		533364	0					
ANR	533492	Identifier	uidvalidity		533364	1					
ANR	533493	ReturnType	PHP_IMAP_EXPORT void		533364	1					
ANR	533494	Identifier	mm_status		533364	2					
ANR	533495	ParameterList	"MAILSTREAM * stream , char * mailbox , MAILSTATUS * status"		533364	3					
ANR	533496	Parameter	MAILSTREAM * stream	5003:31:147737:147754	533364	0	True				
ANR	533497	ParameterType	MAILSTREAM *		533364	0					
ANR	533498	Identifier	stream		533364	1					
ANR	533499	Parameter	char * mailbox	5003:51:147757:147769	533364	1	True				
ANR	533500	ParameterType	char *		533364	0					
ANR	533501	Identifier	mailbox		533364	1					
ANR	533502	Parameter	MAILSTATUS * status	5003:66:147772:147789	533364	2	True				
ANR	533503	ParameterType	MAILSTATUS *		533364	0					
ANR	533504	Identifier	status		533364	1					
ANR	533505	CFGEntryNode	ENTRY		533364		True				
ANR	533506	CFGExitNode	EXIT		533364		True				
ANR	533507	Symbol	status -> uidvalidity		533364						
ANR	533508	Symbol	status_recent		533364						
ANR	533509	Symbol	SA_UIDVALIDITY		533364						
ANR	533510	Symbol	status -> recent		533364						
ANR	533511	Symbol	SA_RECENT		533364						
ANR	533512	Symbol	status -> uidnext		533364						
ANR	533513	Symbol	status_messages		533364						
ANR	533514	Symbol	status -> unseen		533364						
ANR	533515	Symbol	status -> flags		533364						
ANR	533516	Symbol	* status		533364						
ANR	533517	Symbol	SA_UNSEEN		533364						
ANR	533518	Symbol	status -> messages		533364						
ANR	533519	Symbol	mailbox		533364						
ANR	533520	Symbol	status_unseen		533364						
ANR	533521	Symbol	status_uidvalidity		533364						
ANR	533522	Symbol	stream		533364						
ANR	533523	Symbol	SA_MESSAGES		533364						
ANR	533524	Symbol	SA_UIDNEXT		533364						
ANR	533525	Symbol	status_flags		533364						
ANR	533526	Symbol	IMAPG		533364						
ANR	533527	Symbol	status_uidnext		533364						
ANR	533528	Symbol	status		533364						
ANR	533529	Function	mm_log	5025:0:148285:149019							
ANR	533530	FunctionDef	"mm_log (char * str , long errflg)"		533529	0					
ANR	533531	CompoundStatement		5026:0:148337:149019	533529	0					
ANR	533532	IdentifierDeclStatement	ERRORLIST * cur = NIL ;	5027:1:148340:148360	533529	0	True				
ANR	533533	IdentifierDecl	* cur = NIL		533529	0					
ANR	533534	IdentifierDeclType	ERRORLIST *		533529	0					
ANR	533535	Identifier	cur		533529	1					
ANR	533536	AssignmentExpression	* cur = NIL		533529	2		=			
ANR	533537	Identifier	NIL		533529	0					
ANR	533538	Identifier	NIL		533529	1					
ANR	533539	ExpressionStatement	TSRMLS_FETCH ( )	5028:1:148363:148377	533529	1	True				
ANR	533540	CallExpression	TSRMLS_FETCH ( )		533529	0					
ANR	533541	Callee	TSRMLS_FETCH		533529	0					
ANR	533542	Identifier	TSRMLS_FETCH		533529	0					
ANR	533543	ArgumentList			533529	1					
ANR	533544	IfStatement	if ( errflg != NIL )		533529	2					
ANR	533545	Condition	errflg != NIL	5031:5:148404:148416	533529	0	True				
ANR	533546	EqualityExpression	errflg != NIL		533529	0		!=			
ANR	533547	Identifier	errflg		533529	0					
ANR	533548	Identifier	NIL		533529	1					
ANR	533549	CompoundStatement		6:20:81:81	533529	1					
ANR	533550	IfStatement	if ( IMAPG ( imap_errorstack ) == NIL )		533529	0					
ANR	533551	Condition	IMAPG ( imap_errorstack ) == NIL	5032:6:148508:148536	533529	0	True				
ANR	533552	EqualityExpression	IMAPG ( imap_errorstack ) == NIL		533529	0		==			
ANR	533553	CallExpression	IMAPG ( imap_errorstack )		533529	0					
ANR	533554	Callee	IMAPG		533529	0					
ANR	533555	Identifier	IMAPG		533529	0					
ANR	533556	ArgumentList	imap_errorstack		533529	1					
ANR	533557	Argument	imap_errorstack		533529	0					
ANR	533558	Identifier	imap_errorstack		533529	0					
ANR	533559	Identifier	NIL		533529	1					
ANR	533560	CompoundStatement		7:37:201:201	533529	1					
ANR	533561	ExpressionStatement	IMAPG ( imap_errorstack ) = mail_newerrorlist ( )	5033:3:148544:148588	533529	0	True				
ANR	533562	AssignmentExpression	IMAPG ( imap_errorstack ) = mail_newerrorlist ( )		533529	0		=			
ANR	533563	CallExpression	IMAPG ( imap_errorstack )		533529	0					
ANR	533564	Callee	IMAPG		533529	0					
ANR	533565	Identifier	IMAPG		533529	0					
ANR	533566	ArgumentList	imap_errorstack		533529	1					
ANR	533567	Argument	imap_errorstack		533529	0					
ANR	533568	Identifier	imap_errorstack		533529	0					
ANR	533569	CallExpression	mail_newerrorlist ( )		533529	1					
ANR	533570	Callee	mail_newerrorlist		533529	0					
ANR	533571	Identifier	mail_newerrorlist		533529	0					
ANR	533572	ArgumentList			533529	1					
ANR	533573	ExpressionStatement	IMAPG ( imap_errorstack ) -> LSIZE = strlen ( IMAPG ( imap_errorstack ) -> LTEXT = cpystr ( str ) )	5034:3:148593:148676	533529	1	True				
ANR	533574	AssignmentExpression	IMAPG ( imap_errorstack ) -> LSIZE = strlen ( IMAPG ( imap_errorstack ) -> LTEXT = cpystr ( str ) )		533529	0		=			
ANR	533575	PtrMemberAccess	IMAPG ( imap_errorstack ) -> LSIZE		533529	0					
ANR	533576	CallExpression	IMAPG ( imap_errorstack )		533529	0					
ANR	533577	Callee	IMAPG		533529	0					
ANR	533578	Identifier	IMAPG		533529	0					
ANR	533579	ArgumentList	imap_errorstack		533529	1					
ANR	533580	Argument	imap_errorstack		533529	0					
ANR	533581	Identifier	imap_errorstack		533529	0					
ANR	533582	Identifier	LSIZE		533529	1					
ANR	533583	CallExpression	strlen ( IMAPG ( imap_errorstack ) -> LTEXT = cpystr ( str ) )		533529	1					
ANR	533584	Callee	strlen		533529	0					
ANR	533585	Identifier	strlen		533529	0					
ANR	533586	ArgumentList	IMAPG ( imap_errorstack ) -> LTEXT = cpystr ( str )		533529	1					
ANR	533587	Argument	IMAPG ( imap_errorstack ) -> LTEXT = cpystr ( str )		533529	0					
ANR	533588	AssignmentExpression	IMAPG ( imap_errorstack ) -> LTEXT = cpystr ( str )		533529	0		=			
ANR	533589	PtrMemberAccess	IMAPG ( imap_errorstack ) -> LTEXT		533529	0					
ANR	533590	CallExpression	IMAPG ( imap_errorstack )		533529	0					
ANR	533591	Callee	IMAPG		533529	0					
ANR	533592	Identifier	IMAPG		533529	0					
ANR	533593	ArgumentList	imap_errorstack		533529	1					
ANR	533594	Argument	imap_errorstack		533529	0					
ANR	533595	Identifier	imap_errorstack		533529	0					
ANR	533596	Identifier	LTEXT		533529	1					
ANR	533597	CallExpression	cpystr ( str )		533529	1					
ANR	533598	Callee	cpystr		533529	0					
ANR	533599	Identifier	cpystr		533529	0					
ANR	533600	ArgumentList	str		533529	1					
ANR	533601	Argument	str		533529	0					
ANR	533602	Identifier	str		533529	0					
ANR	533603	ExpressionStatement	IMAPG ( imap_errorstack ) -> errflg = errflg	5035:3:148681:148720	533529	2	True				
ANR	533604	AssignmentExpression	IMAPG ( imap_errorstack ) -> errflg = errflg		533529	0		=			
ANR	533605	PtrMemberAccess	IMAPG ( imap_errorstack ) -> errflg		533529	0					
ANR	533606	CallExpression	IMAPG ( imap_errorstack )		533529	0					
ANR	533607	Callee	IMAPG		533529	0					
ANR	533608	Identifier	IMAPG		533529	0					
ANR	533609	ArgumentList	imap_errorstack		533529	1					
ANR	533610	Argument	imap_errorstack		533529	0					
ANR	533611	Identifier	imap_errorstack		533529	0					
ANR	533612	Identifier	errflg		533529	1					
ANR	533613	Identifier	errflg		533529	1					
ANR	533614	ExpressionStatement	IMAPG ( imap_errorstack ) -> next = NIL	5036:3:148725:148759	533529	3	True				
ANR	533615	AssignmentExpression	IMAPG ( imap_errorstack ) -> next = NIL		533529	0		=			
ANR	533616	PtrMemberAccess	IMAPG ( imap_errorstack ) -> next		533529	0					
ANR	533617	CallExpression	IMAPG ( imap_errorstack )		533529	0					
ANR	533618	Callee	IMAPG		533529	0					
ANR	533619	Identifier	IMAPG		533529	0					
ANR	533620	ArgumentList	imap_errorstack		533529	1					
ANR	533621	Argument	imap_errorstack		533529	0					
ANR	533622	Identifier	imap_errorstack		533529	0					
ANR	533623	Identifier	next		533529	1					
ANR	533624	Identifier	NIL		533529	1					
ANR	533625	ElseStatement	else		533529	0					
ANR	533626	CompoundStatement		12:9:432:432	533529	0					
ANR	533627	ExpressionStatement	cur = IMAPG ( imap_errorstack )	5038:3:148775:148803	533529	0	True				
ANR	533628	AssignmentExpression	cur = IMAPG ( imap_errorstack )		533529	0		=			
ANR	533629	Identifier	cur		533529	0					
ANR	533630	CallExpression	IMAPG ( imap_errorstack )		533529	1					
ANR	533631	Callee	IMAPG		533529	0					
ANR	533632	Identifier	IMAPG		533529	0					
ANR	533633	ArgumentList	imap_errorstack		533529	1					
ANR	533634	Argument	imap_errorstack		533529	0					
ANR	533635	Identifier	imap_errorstack		533529	0					
ANR	533636	WhileStatement	while ( cur -> next != NIL )		533529	1					
ANR	533637	Condition	cur -> next != NIL	5039:10:148815:148830	533529	0	True				
ANR	533638	EqualityExpression	cur -> next != NIL		533529	0		!=			
ANR	533639	PtrMemberAccess	cur -> next		533529	0					
ANR	533640	Identifier	cur		533529	0					
ANR	533641	Identifier	next		533529	1					
ANR	533642	Identifier	NIL		533529	1					
ANR	533643	CompoundStatement		14:28:495:495	533529	1					
ANR	533644	ExpressionStatement	cur = cur -> next	5040:4:148839:148854	533529	0	True				
ANR	533645	AssignmentExpression	cur = cur -> next		533529	0		=			
ANR	533646	Identifier	cur		533529	0					
ANR	533647	PtrMemberAccess	cur -> next		533529	1					
ANR	533648	Identifier	cur		533529	0					
ANR	533649	Identifier	next		533529	1					
ANR	533650	ExpressionStatement	cur -> next = mail_newerrorlist ( )	5042:3:148864:148895	533529	2	True				
ANR	533651	AssignmentExpression	cur -> next = mail_newerrorlist ( )		533529	0		=			
ANR	533652	PtrMemberAccess	cur -> next		533529	0					
ANR	533653	Identifier	cur		533529	0					
ANR	533654	Identifier	next		533529	1					
ANR	533655	CallExpression	mail_newerrorlist ( )		533529	1					
ANR	533656	Callee	mail_newerrorlist		533529	0					
ANR	533657	Identifier	mail_newerrorlist		533529	0					
ANR	533658	ArgumentList			533529	1					
ANR	533659	ExpressionStatement	cur = cur -> next	5043:3:148900:148915	533529	3	True				
ANR	533660	AssignmentExpression	cur = cur -> next		533529	0		=			
ANR	533661	Identifier	cur		533529	0					
ANR	533662	PtrMemberAccess	cur -> next		533529	1					
ANR	533663	Identifier	cur		533529	0					
ANR	533664	Identifier	next		533529	1					
ANR	533665	ExpressionStatement	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( str ) )	5044:3:148920:148965	533529	4	True				
ANR	533666	AssignmentExpression	cur -> LSIZE = strlen ( cur -> LTEXT = cpystr ( str ) )		533529	0		=			
ANR	533667	PtrMemberAccess	cur -> LSIZE		533529	0					
ANR	533668	Identifier	cur		533529	0					
ANR	533669	Identifier	LSIZE		533529	1					
ANR	533670	CallExpression	strlen ( cur -> LTEXT = cpystr ( str ) )		533529	1					
ANR	533671	Callee	strlen		533529	0					
ANR	533672	Identifier	strlen		533529	0					
ANR	533673	ArgumentList	cur -> LTEXT = cpystr ( str )		533529	1					
ANR	533674	Argument	cur -> LTEXT = cpystr ( str )		533529	0					
ANR	533675	AssignmentExpression	cur -> LTEXT = cpystr ( str )		533529	0		=			
ANR	533676	PtrMemberAccess	cur -> LTEXT		533529	0					
ANR	533677	Identifier	cur		533529	0					
ANR	533678	Identifier	LTEXT		533529	1					
ANR	533679	CallExpression	cpystr ( str )		533529	1					
ANR	533680	Callee	cpystr		533529	0					
ANR	533681	Identifier	cpystr		533529	0					
ANR	533682	ArgumentList	str		533529	1					
ANR	533683	Argument	str		533529	0					
ANR	533684	Identifier	str		533529	0					
ANR	533685	ExpressionStatement	cur -> errflg = errflg	5045:3:148970:148990	533529	5	True				
ANR	533686	AssignmentExpression	cur -> errflg = errflg		533529	0		=			
ANR	533687	PtrMemberAccess	cur -> errflg		533529	0					
ANR	533688	Identifier	cur		533529	0					
ANR	533689	Identifier	errflg		533529	1					
ANR	533690	Identifier	errflg		533529	1					
ANR	533691	ExpressionStatement	cur -> next = NIL	5046:3:148995:149010	533529	6	True				
ANR	533692	AssignmentExpression	cur -> next = NIL		533529	0		=			
ANR	533693	PtrMemberAccess	cur -> next		533529	0					
ANR	533694	Identifier	cur		533529	0					
ANR	533695	Identifier	next		533529	1					
ANR	533696	Identifier	NIL		533529	1					
ANR	533697	ReturnType	PHP_IMAP_EXPORT void		533529	1					
ANR	533698	Identifier	mm_log		533529	2					
ANR	533699	ParameterList	"char * str , long errflg"		533529	3					
ANR	533700	Parameter	char * str	5025:28:148313:148321	533529	0	True				
ANR	533701	ParameterType	char *		533529	0					
ANR	533702	Identifier	str		533529	1					
ANR	533703	Parameter	long errflg	5025:39:148324:148334	533529	1	True				
ANR	533704	ParameterType	long		533529	0					
ANR	533705	Identifier	errflg		533529	1					
ANR	533706	CFGEntryNode	ENTRY		533529		True				
ANR	533707	CFGExitNode	EXIT		533529		True				
ANR	533708	Symbol	cur		533529						
ANR	533709	Symbol	mail_newerrorlist		533529						
ANR	533710	Symbol	imap_errorstack		533529						
ANR	533711	Symbol	cur -> errflg		533529						
ANR	533712	Symbol	errflg		533529						
ANR	533713	Symbol	cur -> LTEXT		533529						
ANR	533714	Symbol	IMAPG ( imap_errorstack ) -> errflg		533529						
ANR	533715	Symbol	IMAPG ( imap_errorstack ) -> LSIZE		533529						
ANR	533716	Symbol	str		533529						
ANR	533717	Symbol	NIL		533529						
ANR	533718	Symbol	strlen		533529						
ANR	533719	Symbol	* cur		533529						
ANR	533720	Symbol	* IMAPG		533529						
ANR	533721	Symbol	cpystr		533529						
ANR	533722	Symbol	IMAPG ( imap_errorstack ) -> LTEXT		533529						
ANR	533723	Symbol	IMAPG		533529						
ANR	533724	Symbol	IMAPG ( imap_errorstack ) -> next		533529						
ANR	533725	Symbol	cur -> LSIZE		533529						
ANR	533726	Symbol	cur -> next		533529						
ANR	533727	Function	mm_dlog	5051:0:149022:149221							
ANR	533728	FunctionDef	mm_dlog (char * str)		533727	0					
ANR	533729	CompoundStatement		5052:0:149062:149221	533727	0					
ANR	533730	ReturnType	PHP_IMAP_EXPORT void		533727	1					
ANR	533731	Identifier	mm_dlog		533727	2					
ANR	533732	ParameterList	char * str		533727	3					
ANR	533733	Parameter	char * str	5051:29:149051:149059	533727	0	True				
ANR	533734	ParameterType	char *		533727	0					
ANR	533735	Identifier	str		533727	1					
ANR	533736	CFGEntryNode	ENTRY		533727		True				
ANR	533737	CFGExitNode	EXIT		533727		True				
ANR	533738	Symbol	str		533727						
ANR	533739	Function	mm_login	5058:0:149224:149490							
ANR	533740	FunctionDef	"mm_login (NETMBX * mb , char * user , char * pwd , long trial)"		533739	0					
ANR	533741	CompoundStatement		5059:0:149301:149490	533739	0					
ANR	533742	ExpressionStatement	TSRMLS_FETCH ( )	5060:1:149304:149318	533739	0	True				
ANR	533743	CallExpression	TSRMLS_FETCH ( )		533739	0					
ANR	533744	Callee	TSRMLS_FETCH		533739	0					
ANR	533745	Identifier	TSRMLS_FETCH		533739	0					
ANR	533746	ArgumentList			533739	1					
ANR	533747	IfStatement	if ( * mb -> user )		533739	1					
ANR	533748	Condition	* mb -> user	5062:5:149326:149334	533739	0	True				
ANR	533749	UnaryOperationExpression	* mb -> user		533739	0					
ANR	533750	UnaryOperator	*		533739	0					
ANR	533751	PtrMemberAccess	mb -> user		533739	1					
ANR	533752	Identifier	mb		533739	0					
ANR	533753	Identifier	user		533739	1					
ANR	533754	CompoundStatement		4:16:35:35	533739	1					
ANR	533755	ExpressionStatement	"strlcpy ( user , mb -> user , MAILTMPLEN )"	5063:2:149341:149377	533739	0	True				
ANR	533756	CallExpression	"strlcpy ( user , mb -> user , MAILTMPLEN )"		533739	0					
ANR	533757	Callee	strlcpy		533739	0					
ANR	533758	Identifier	strlcpy		533739	0					
ANR	533759	ArgumentList	user		533739	1					
ANR	533760	Argument	user		533739	0					
ANR	533761	Identifier	user		533739	0					
ANR	533762	Argument	mb -> user		533739	1					
ANR	533763	PtrMemberAccess	mb -> user		533739	0					
ANR	533764	Identifier	mb		533739	0					
ANR	533765	Identifier	user		533739	1					
ANR	533766	Argument	MAILTMPLEN		533739	2					
ANR	533767	Identifier	MAILTMPLEN		533739	0					
ANR	533768	ElseStatement	else		533739	0					
ANR	533769	CompoundStatement		6:8:85:85	533739	0					
ANR	533770	ExpressionStatement	"strlcpy ( user , IMAPG ( imap_user ) , MAILTMPLEN )"	5065:2:149391:149435	533739	0	True				
ANR	533771	CallExpression	"strlcpy ( user , IMAPG ( imap_user ) , MAILTMPLEN )"		533739	0					
ANR	533772	Callee	strlcpy		533739	0					
ANR	533773	Identifier	strlcpy		533739	0					
ANR	533774	ArgumentList	user		533739	1					
ANR	533775	Argument	user		533739	0					
ANR	533776	Identifier	user		533739	0					
ANR	533777	Argument	IMAPG ( imap_user )		533739	1					
ANR	533778	CallExpression	IMAPG ( imap_user )		533739	0					
ANR	533779	Callee	IMAPG		533739	0					
ANR	533780	Identifier	IMAPG		533739	0					
ANR	533781	ArgumentList	imap_user		533739	1					
ANR	533782	Argument	imap_user		533739	0					
ANR	533783	Identifier	imap_user		533739	0					
ANR	533784	Argument	MAILTMPLEN		533739	2					
ANR	533785	Identifier	MAILTMPLEN		533739	0					
ANR	533786	ExpressionStatement	"strlcpy ( pwd , IMAPG ( imap_password ) , MAILTMPLEN )"	5067:1:149441:149488	533739	2	True				
ANR	533787	CallExpression	"strlcpy ( pwd , IMAPG ( imap_password ) , MAILTMPLEN )"		533739	0					
ANR	533788	Callee	strlcpy		533739	0					
ANR	533789	Identifier	strlcpy		533739	0					
ANR	533790	ArgumentList	pwd		533739	1					
ANR	533791	Argument	pwd		533739	0					
ANR	533792	Identifier	pwd		533739	0					
ANR	533793	Argument	IMAPG ( imap_password )		533739	1					
ANR	533794	CallExpression	IMAPG ( imap_password )		533739	0					
ANR	533795	Callee	IMAPG		533739	0					
ANR	533796	Identifier	IMAPG		533739	0					
ANR	533797	ArgumentList	imap_password		533739	1					
ANR	533798	Argument	imap_password		533739	0					
ANR	533799	Identifier	imap_password		533739	0					
ANR	533800	Argument	MAILTMPLEN		533739	2					
ANR	533801	Identifier	MAILTMPLEN		533739	0					
ANR	533802	ReturnType	PHP_IMAP_EXPORT void		533739	1					
ANR	533803	Identifier	mm_login		533739	2					
ANR	533804	ParameterList	"NETMBX * mb , char * user , char * pwd , long trial"		533739	3					
ANR	533805	Parameter	NETMBX * mb	5058:30:149254:149263	533739	0	True				
ANR	533806	ParameterType	NETMBX *		533739	0					
ANR	533807	Identifier	mb		533739	1					
ANR	533808	Parameter	char * user	5058:42:149266:149275	533739	1	True				
ANR	533809	ParameterType	char *		533739	0					
ANR	533810	Identifier	user		533739	1					
ANR	533811	Parameter	char * pwd	5058:54:149278:149286	533739	2	True				
ANR	533812	ParameterType	char *		533739	0					
ANR	533813	Identifier	pwd		533739	1					
ANR	533814	Parameter	long trial	5058:65:149289:149298	533739	3	True				
ANR	533815	ParameterType	long		533739	0					
ANR	533816	Identifier	trial		533739	1					
ANR	533817	CFGEntryNode	ENTRY		533739		True				
ANR	533818	CFGExitNode	EXIT		533739		True				
ANR	533819	Symbol	* mb -> user		533739						
ANR	533820	Symbol	* * mb		533739						
ANR	533821	Symbol	mb -> user		533739						
ANR	533822	Symbol	mb		533739						
ANR	533823	Symbol	MAILTMPLEN		533739						
ANR	533824	Symbol	* mb		533739						
ANR	533825	Symbol	imap_user		533739						
ANR	533826	Symbol	pwd		533739						
ANR	533827	Symbol	IMAPG		533739						
ANR	533828	Symbol	user		533739						
ANR	533829	Symbol	trial		533739						
ANR	533830	Symbol	imap_password		533739						
ANR	533831	Function	mm_critical	5070:0:149493:149548							
ANR	533832	FunctionDef	mm_critical (MAILSTREAM * stream)		533831	0					
ANR	533833	CompoundStatement		5071:0:149546:149548	533831	0					
ANR	533834	ReturnType	PHP_IMAP_EXPORT void		533831	1					
ANR	533835	Identifier	mm_critical		533831	2					
ANR	533836	ParameterList	MAILSTREAM * stream		533831	3					
ANR	533837	Parameter	MAILSTREAM * stream	5070:33:149526:149543	533831	0	True				
ANR	533838	ParameterType	MAILSTREAM *		533831	0					
ANR	533839	Identifier	stream		533831	1					
ANR	533840	CFGEntryNode	ENTRY		533831		True				
ANR	533841	CFGExitNode	EXIT		533831		True				
ANR	533842	Symbol	stream		533831						
ANR	533843	Function	mm_nocritical	5074:0:149551:149608							
ANR	533844	FunctionDef	mm_nocritical (MAILSTREAM * stream)		533843	0					
ANR	533845	CompoundStatement		5075:0:149606:149608	533843	0					
ANR	533846	ReturnType	PHP_IMAP_EXPORT void		533843	1					
ANR	533847	Identifier	mm_nocritical		533843	2					
ANR	533848	ParameterList	MAILSTREAM * stream		533843	3					
ANR	533849	Parameter	MAILSTREAM * stream	5074:35:149586:149603	533843	0	True				
ANR	533850	ParameterType	MAILSTREAM *		533843	0					
ANR	533851	Identifier	stream		533843	1					
ANR	533852	CFGEntryNode	ENTRY		533843		True				
ANR	533853	CFGExitNode	EXIT		533843		True				
ANR	533854	Symbol	stream		533843						
ANR	533855	Function	mm_diskerror	5078:0:149611:149706							
ANR	533856	FunctionDef	"mm_diskerror (MAILSTREAM * stream , long errcode , long serious)"		533855	0					
ANR	533857	CompoundStatement		5079:0:149693:149706	533855	0					
ANR	533858	ReturnStatement	return 1 ;	5080:1:149696:149704	533855	0	True				
ANR	533859	PrimaryExpression	1		533855	0					
ANR	533860	ReturnType	PHP_IMAP_EXPORT long		533855	1					
ANR	533861	Identifier	mm_diskerror		533855	2					
ANR	533862	ParameterList	"MAILSTREAM * stream , long errcode , long serious"		533855	3					
ANR	533863	Parameter	MAILSTREAM * stream	5078:34:149645:149662	533855	0	True				
ANR	533864	ParameterType	MAILSTREAM *		533855	0					
ANR	533865	Identifier	stream		533855	1					
ANR	533866	Parameter	long errcode	5078:54:149665:149676	533855	1	True				
ANR	533867	ParameterType	long		533855	0					
ANR	533868	Identifier	errcode		533855	1					
ANR	533869	Parameter	long serious	5078:68:149679:149690	533855	2	True				
ANR	533870	ParameterType	long		533855	0					
ANR	533871	Identifier	serious		533855	1					
ANR	533872	CFGEntryNode	ENTRY		533855		True				
ANR	533873	CFGExitNode	EXIT		533855		True				
ANR	533874	Symbol	errcode		533855						
ANR	533875	Symbol	stream		533855						
ANR	533876	Symbol	serious		533855						
ANR	533877	Function	mm_fatal	5083:0:149709:149752							
ANR	533878	FunctionDef	mm_fatal (char * str)		533877	0					
ANR	533879	CompoundStatement		5084:0:149750:149752	533877	0					
ANR	533880	ReturnType	PHP_IMAP_EXPORT void		533877	1					
ANR	533881	Identifier	mm_fatal		533877	2					
ANR	533882	ParameterList	char * str		533877	3					
ANR	533883	Parameter	char * str	5083:30:149739:149747	533877	0	True				
ANR	533884	ParameterType	char *		533877	0					
ANR	533885	Identifier	str		533877	1					
ANR	533886	CFGEntryNode	ENTRY		533877		True				
ANR	533887	CFGExitNode	EXIT		533877		True				
ANR	533888	Symbol	str		533877						
