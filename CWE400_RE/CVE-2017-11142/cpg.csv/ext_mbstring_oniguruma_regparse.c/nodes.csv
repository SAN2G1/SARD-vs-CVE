command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	744897	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_regparse.c								
ANR	744898	DeclStmt									
ANR	744899	Decl							define CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS OnigSyntaxType	define CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS OnigSyntaxType	OnigSyntaxRuby
ANR	744900	DeclStmt									
ANR	744901	Decl							OnigSyntaxType	OnigSyntaxType *	OnigDefaultSyntax
ANR	744902	DeclStmt									
ANR	744903	Decl							OnigWarnFunc	OnigWarnFunc	onig_warn
ANR	744904	DeclStmt									
ANR	744905	Decl							OnigWarnFunc	OnigWarnFunc	onig_warn
ANR	744906	DeclStmt									
ANR	744907	Decl							OnigWarnFunc	OnigWarnFunc	onig_verb_warn
ANR	744908	DeclStmt									
ANR	744909	Decl							OnigWarnFunc	OnigWarnFunc	onig_verb_warn
ANR	744910	Function	onig_set_warn_func	90:0:3760:3826							
ANR	744911	FunctionDef	onig_set_warn_func (OnigWarnFunc f)		744910	0					
ANR	744912	CompoundStatement		91:0:3807:3826	744910	0					
ANR	744913	ExpressionStatement	onig_warn = f	92:2:3811:3824	744910	0	True				
ANR	744914	AssignmentExpression	onig_warn = f		744910	0		=			
ANR	744915	Identifier	onig_warn		744910	0					
ANR	744916	Identifier	f		744910	1					
ANR	744917	ReturnType	extern void		744910	1					
ANR	744918	Identifier	onig_set_warn_func		744910	2					
ANR	744919	ParameterList	OnigWarnFunc f		744910	3					
ANR	744920	Parameter	OnigWarnFunc f	90:31:3791:3804	744910	0	True				
ANR	744921	ParameterType	OnigWarnFunc		744910	0					
ANR	744922	Identifier	f		744910	1					
ANR	744923	CFGEntryNode	ENTRY		744910		True				
ANR	744924	CFGExitNode	EXIT		744910		True				
ANR	744925	Symbol	f		744910						
ANR	744926	Symbol	onig_warn		744910						
ANR	744927	Function	onig_set_verb_warn_func	95:0:3829:3905							
ANR	744928	FunctionDef	onig_set_verb_warn_func (OnigWarnFunc f)		744927	0					
ANR	744929	CompoundStatement		96:0:3881:3905	744927	0					
ANR	744930	ExpressionStatement	onig_verb_warn = f	97:2:3885:3903	744927	0	True				
ANR	744931	AssignmentExpression	onig_verb_warn = f		744927	0		=			
ANR	744932	Identifier	onig_verb_warn		744927	0					
ANR	744933	Identifier	f		744927	1					
ANR	744934	ReturnType	extern void		744927	1					
ANR	744935	Identifier	onig_set_verb_warn_func		744927	2					
ANR	744936	ParameterList	OnigWarnFunc f		744927	3					
ANR	744937	Parameter	OnigWarnFunc f	95:36:3865:3878	744927	0	True				
ANR	744938	ParameterType	OnigWarnFunc		744927	0					
ANR	744939	Identifier	f		744927	1					
ANR	744940	CFGEntryNode	ENTRY		744927		True				
ANR	744941	CFGExitNode	EXIT		744927		True				
ANR	744942	Symbol	f		744927						
ANR	744943	Symbol	onig_verb_warn		744927						
ANR	744944	Function	bbuf_free	100:0:3908:4038							
ANR	744945	FunctionDef	bbuf_free (BBuf * bbuf)		744944	0					
ANR	744946	CompoundStatement		102:0:3942:4038	744944	0					
ANR	744947	IfStatement	if ( IS_NOT_NULL ( bbuf ) )		744944	0					
ANR	744948	Condition	IS_NOT_NULL ( bbuf )	103:6:3950:3966	744944	0	True				
ANR	744949	CallExpression	IS_NOT_NULL ( bbuf )		744944	0					
ANR	744950	Callee	IS_NOT_NULL		744944	0					
ANR	744951	Identifier	IS_NOT_NULL		744944	0					
ANR	744952	ArgumentList	bbuf		744944	1					
ANR	744953	Argument	bbuf		744944	0					
ANR	744954	Identifier	bbuf		744944	0					
ANR	744955	CompoundStatement		2:25:26:26	744944	1					
ANR	744956	IfStatement	if ( IS_NOT_NULL ( bbuf -> p ) )		744944	0					
ANR	744957	Condition	IS_NOT_NULL ( bbuf -> p )	104:8:3979:3998	744944	0	True				
ANR	744958	CallExpression	IS_NOT_NULL ( bbuf -> p )		744944	0					
ANR	744959	Callee	IS_NOT_NULL		744944	0					
ANR	744960	Identifier	IS_NOT_NULL		744944	0					
ANR	744961	ArgumentList	bbuf -> p		744944	1					
ANR	744962	Argument	bbuf -> p		744944	0					
ANR	744963	PtrMemberAccess	bbuf -> p		744944	0					
ANR	744964	Identifier	bbuf		744944	0					
ANR	744965	Identifier	p		744944	1					
ANR	744966	ExpressionStatement	xfree ( bbuf -> p )	104:30:4001:4015	744944	1	True				
ANR	744967	CallExpression	xfree ( bbuf -> p )		744944	0					
ANR	744968	Callee	xfree		744944	0					
ANR	744969	Identifier	xfree		744944	0					
ANR	744970	ArgumentList	bbuf -> p		744944	1					
ANR	744971	Argument	bbuf -> p		744944	0					
ANR	744972	PtrMemberAccess	bbuf -> p		744944	0					
ANR	744973	Identifier	bbuf		744944	0					
ANR	744974	Identifier	p		744944	1					
ANR	744975	ExpressionStatement	xfree ( bbuf )	105:4:4021:4032	744944	1	True				
ANR	744976	CallExpression	xfree ( bbuf )		744944	0					
ANR	744977	Callee	xfree		744944	0					
ANR	744978	Identifier	xfree		744944	0					
ANR	744979	ArgumentList	bbuf		744944	1					
ANR	744980	Argument	bbuf		744944	0					
ANR	744981	Identifier	bbuf		744944	0					
ANR	744982	ReturnType	static void		744944	1					
ANR	744983	Identifier	bbuf_free		744944	2					
ANR	744984	ParameterList	BBuf * bbuf		744944	3					
ANR	744985	Parameter	BBuf * bbuf	101:10:3930:3939	744944	0	True				
ANR	744986	ParameterType	BBuf *		744944	0					
ANR	744987	Identifier	bbuf		744944	1					
ANR	744988	CFGEntryNode	ENTRY		744944		True				
ANR	744989	CFGExitNode	EXIT		744944		True				
ANR	744990	Symbol	IS_NOT_NULL		744944						
ANR	744991	Symbol	bbuf -> p		744944						
ANR	744992	Symbol	* bbuf		744944						
ANR	744993	Symbol	bbuf		744944						
ANR	744994	Function	bbuf_clone	109:0:4041:4322							
ANR	744995	FunctionDef	"bbuf_clone (BBuf * * rto , BBuf * from)"		744994	0					
ANR	744996	CompoundStatement		111:0:4087:4322	744994	0					
ANR	744997	IdentifierDeclStatement	int r ;	112:2:4091:4096	744994	0	True				
ANR	744998	IdentifierDecl	r		744994	0					
ANR	744999	IdentifierDeclType	int		744994	0					
ANR	745000	Identifier	r		744994	1					
ANR	745001	IdentifierDeclStatement	BBuf * to ;	113:2:4100:4108	744994	1	True				
ANR	745002	IdentifierDecl	* to		744994	0					
ANR	745003	IdentifierDeclType	BBuf *		744994	0					
ANR	745004	Identifier	to		744994	1					
ANR	745005	ExpressionStatement	* rto = to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	115:2:4113:4154	744994	2	True				
ANR	745006	AssignmentExpression	* rto = to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		744994	0		=			
ANR	745007	UnaryOperationExpression	* rto		744994	0					
ANR	745008	UnaryOperator	*		744994	0					
ANR	745009	Identifier	rto		744994	1					
ANR	745010	AssignmentExpression	to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		744994	1		=			
ANR	745011	Identifier	to		744994	0					
ANR	745012	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		744994	1					
ANR	745013	CastTarget	BBuf *		744994	0					
ANR	745014	CallExpression	xmalloc ( sizeof ( BBuf ) )		744994	1					
ANR	745015	Callee	xmalloc		744994	0					
ANR	745016	Identifier	xmalloc		744994	0					
ANR	745017	ArgumentList	sizeof ( BBuf )		744994	1					
ANR	745018	Argument	sizeof ( BBuf )		744994	0					
ANR	745019	SizeofExpression	sizeof ( BBuf )		744994	0					
ANR	745020	Sizeof	sizeof		744994	0					
ANR	745021	SizeofOperand	BBuf		744994	1					
ANR	745022	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( to )	116:2:4158:4186	744994	3	True				
ANR	745023	CallExpression	CHECK_NULL_RETURN_MEMERR ( to )		744994	0					
ANR	745024	Callee	CHECK_NULL_RETURN_MEMERR		744994	0					
ANR	745025	Identifier	CHECK_NULL_RETURN_MEMERR		744994	0					
ANR	745026	ArgumentList	to		744994	1					
ANR	745027	Argument	to		744994	0					
ANR	745028	Identifier	to		744994	0					
ANR	745029	ExpressionStatement	"r = BBUF_INIT ( to , from -> alloc )"	117:2:4190:4220	744994	4	True				
ANR	745030	AssignmentExpression	"r = BBUF_INIT ( to , from -> alloc )"		744994	0		=			
ANR	745031	Identifier	r		744994	0					
ANR	745032	CallExpression	"BBUF_INIT ( to , from -> alloc )"		744994	1					
ANR	745033	Callee	BBUF_INIT		744994	0					
ANR	745034	Identifier	BBUF_INIT		744994	0					
ANR	745035	ArgumentList	to		744994	1					
ANR	745036	Argument	to		744994	0					
ANR	745037	Identifier	to		744994	0					
ANR	745038	Argument	from -> alloc		744994	1					
ANR	745039	PtrMemberAccess	from -> alloc		744994	0					
ANR	745040	Identifier	from		744994	0					
ANR	745041	Identifier	alloc		744994	1					
ANR	745042	IfStatement	if ( r != 0 )		744994	5					
ANR	745043	Condition	r != 0	118:6:4228:4233	744994	0	True				
ANR	745044	EqualityExpression	r != 0		744994	0		!=			
ANR	745045	Identifier	r		744994	0					
ANR	745046	PrimaryExpression	0		744994	1					
ANR	745047	ReturnStatement	return r ;	118:14:4236:4244	744994	1	True				
ANR	745048	Identifier	r		744994	0					
ANR	745049	ExpressionStatement	to -> used = from -> used	119:2:4248:4269	744994	6	True				
ANR	745050	AssignmentExpression	to -> used = from -> used		744994	0		=			
ANR	745051	PtrMemberAccess	to -> used		744994	0					
ANR	745052	Identifier	to		744994	0					
ANR	745053	Identifier	used		744994	1					
ANR	745054	PtrMemberAccess	from -> used		744994	1					
ANR	745055	Identifier	from		744994	0					
ANR	745056	Identifier	used		744994	1					
ANR	745057	ExpressionStatement	"xmemcpy ( to -> p , from -> p , from -> used )"	120:2:4273:4308	744994	7	True				
ANR	745058	CallExpression	"xmemcpy ( to -> p , from -> p , from -> used )"		744994	0					
ANR	745059	Callee	xmemcpy		744994	0					
ANR	745060	Identifier	xmemcpy		744994	0					
ANR	745061	ArgumentList	to -> p		744994	1					
ANR	745062	Argument	to -> p		744994	0					
ANR	745063	PtrMemberAccess	to -> p		744994	0					
ANR	745064	Identifier	to		744994	0					
ANR	745065	Identifier	p		744994	1					
ANR	745066	Argument	from -> p		744994	1					
ANR	745067	PtrMemberAccess	from -> p		744994	0					
ANR	745068	Identifier	from		744994	0					
ANR	745069	Identifier	p		744994	1					
ANR	745070	Argument	from -> used		744994	2					
ANR	745071	PtrMemberAccess	from -> used		744994	0					
ANR	745072	Identifier	from		744994	0					
ANR	745073	Identifier	used		744994	1					
ANR	745074	ReturnStatement	return 0 ;	121:2:4312:4320	744994	8	True				
ANR	745075	PrimaryExpression	0		744994	0					
ANR	745076	ReturnType	static int		744994	1					
ANR	745077	Identifier	bbuf_clone		744994	2					
ANR	745078	ParameterList	"BBuf * * rto , BBuf * from"		744994	3					
ANR	745079	Parameter	BBuf * * rto	110:11:4063:4072	744994	0	True				
ANR	745080	ParameterType	BBuf * *		744994	0					
ANR	745081	Identifier	rto		744994	1					
ANR	745082	Parameter	BBuf * from	110:23:4075:4084	744994	1	True				
ANR	745083	ParameterType	BBuf *		744994	0					
ANR	745084	Identifier	from		744994	1					
ANR	745085	CFGEntryNode	ENTRY		744994		True				
ANR	745086	CFGExitNode	EXIT		744994		True				
ANR	745087	Symbol	from -> p		744994						
ANR	745088	Symbol	* to		744994						
ANR	745089	Symbol	from -> used		744994						
ANR	745090	Symbol	BBUF_INIT		744994						
ANR	745091	Symbol	rto		744994						
ANR	745092	Symbol	to -> used		744994						
ANR	745093	Symbol	r		744994						
ANR	745094	Symbol	to -> p		744994						
ANR	745095	Symbol	from -> alloc		744994						
ANR	745096	Symbol	xmalloc		744994						
ANR	745097	Symbol	* rto		744994						
ANR	745098	Symbol	from		744994						
ANR	745099	Symbol	to		744994						
ANR	745100	Symbol	* from		744994						
ANR	745101	DeclStmt									
ANR	745102	Decl							int	int	i
ANR	745103	Function	bitset_set_range	153:0:5053:5213							
ANR	745104	FunctionDef	"bitset_set_range (BitSetRef bs , int from , int to)"		745103	0					
ANR	745105	CompoundStatement		155:0:5114:5213	745103	0					
ANR	745106	IdentifierDeclStatement	int i ;	156:2:5118:5123	745103	0	True				
ANR	745107	IdentifierDecl	i		745103	0					
ANR	745108	IdentifierDeclType	int		745103	0					
ANR	745109	Identifier	i		745103	1					
ANR	745110	ForStatement	for ( i = from ; i <= to && i < SINGLE_BYTE_SIZE ; i ++ )		745103	1					
ANR	745111	ForInit	i = from ;	157:7:5132:5140	745103	0	True				
ANR	745112	AssignmentExpression	i = from		745103	0		=			
ANR	745113	Identifier	i		745103	0					
ANR	745114	Identifier	from		745103	1					
ANR	745115	Condition	i <= to && i < SINGLE_BYTE_SIZE	157:17:5142:5172	745103	1	True				
ANR	745116	AndExpression	i <= to && i < SINGLE_BYTE_SIZE		745103	0		&&			
ANR	745117	RelationalExpression	i <= to		745103	0		<=			
ANR	745118	Identifier	i		745103	0					
ANR	745119	Identifier	to		745103	1					
ANR	745120	RelationalExpression	i < SINGLE_BYTE_SIZE		745103	1		<			
ANR	745121	Identifier	i		745103	0					
ANR	745122	Identifier	SINGLE_BYTE_SIZE		745103	1					
ANR	745123	PostIncDecOperationExpression	i ++	157:50:5175:5177	745103	2	True				
ANR	745124	Identifier	i		745103	0					
ANR	745125	IncDec	++		745103	1					
ANR	745126	CompoundStatement		3:55:65:65	745103	3					
ANR	745127	ExpressionStatement	"BITSET_SET_BIT ( bs , i )"	158:4:5186:5207	745103	0	True				
ANR	745128	CallExpression	"BITSET_SET_BIT ( bs , i )"		745103	0					
ANR	745129	Callee	BITSET_SET_BIT		745103	0					
ANR	745130	Identifier	BITSET_SET_BIT		745103	0					
ANR	745131	ArgumentList	bs		745103	1					
ANR	745132	Argument	bs		745103	0					
ANR	745133	Identifier	bs		745103	0					
ANR	745134	Argument	i		745103	1					
ANR	745135	Identifier	i		745103	0					
ANR	745136	ReturnType	static void		745103	1					
ANR	745137	Identifier	bitset_set_range		745103	2					
ANR	745138	ParameterList	"BitSetRef bs , int from , int to"		745103	3					
ANR	745139	Parameter	BitSetRef bs	154:17:5082:5093	745103	0	True				
ANR	745140	ParameterType	BitSetRef		745103	0					
ANR	745141	Identifier	bs		745103	1					
ANR	745142	Parameter	int from	154:31:5096:5103	745103	1	True				
ANR	745143	ParameterType	int		745103	0					
ANR	745144	Identifier	from		745103	1					
ANR	745145	Parameter	int to	154:41:5106:5111	745103	2	True				
ANR	745146	ParameterType	int		745103	0					
ANR	745147	Identifier	to		745103	1					
ANR	745148	CFGEntryNode	ENTRY		745103		True				
ANR	745149	CFGExitNode	EXIT		745103		True				
ANR	745150	Symbol	SINGLE_BYTE_SIZE		745103						
ANR	745151	Symbol	bs		745103						
ANR	745152	Symbol	i		745103						
ANR	745153	Symbol	from		745103						
ANR	745154	Symbol	to		745103						
ANR	745155	Function	bitset_set_all	163:0:5222:5335							
ANR	745156	FunctionDef	bitset_set_all (BitSetRef bs)		745155	0					
ANR	745157	CompoundStatement		165:0:5263:5335	745155	0					
ANR	745158	IdentifierDeclStatement	int i ;	166:2:5267:5272	745155	0	True				
ANR	745159	IdentifierDecl	i		745155	0					
ANR	745160	IdentifierDeclType	int		745155	0					
ANR	745161	Identifier	i		745155	1					
ANR	745162	ForStatement	for ( i = 0 ; i < BITSET_SIZE ; i ++ )		745155	1					
ANR	745163	ForInit	i = 0 ;	167:7:5281:5286	745155	0	True				
ANR	745164	AssignmentExpression	i = 0		745155	0		=			
ANR	745165	Identifier	i		745155	0					
ANR	745166	PrimaryExpression	0		745155	1					
ANR	745167	Condition	i < BITSET_SIZE	167:14:5288:5302	745155	1	True				
ANR	745168	RelationalExpression	i < BITSET_SIZE		745155	0		<			
ANR	745169	Identifier	i		745155	0					
ANR	745170	Identifier	BITSET_SIZE		745155	1					
ANR	745171	PostIncDecOperationExpression	i ++	167:31:5305:5307	745155	2	True				
ANR	745172	Identifier	i		745155	0					
ANR	745173	IncDec	++		745155	1					
ANR	745174	CompoundStatement		3:36:46:46	745155	3					
ANR	745175	ExpressionStatement	bs [ i ] = ~ ( ( Bits ) 0 )	167:38:5312:5331	745155	0	True				
ANR	745176	AssignmentExpression	bs [ i ] = ~ ( ( Bits ) 0 )		745155	0		=			
ANR	745177	ArrayIndexing	bs [ i ]		745155	0					
ANR	745178	Identifier	bs		745155	0					
ANR	745179	Identifier	i		745155	1					
ANR	745180	UnaryOperationExpression	~ ( ( Bits ) 0 )		745155	1					
ANR	745181	UnaryOperator	~		745155	0					
ANR	745182	CastExpression	( Bits ) 0		745155	1					
ANR	745183	CastTarget	Bits		745155	0					
ANR	745184	PrimaryExpression	0		745155	1					
ANR	745185	ReturnType	static void		745155	1					
ANR	745186	Identifier	bitset_set_all		745155	2					
ANR	745187	ParameterList	BitSetRef bs		745155	3					
ANR	745188	Parameter	BitSetRef bs	164:15:5249:5260	745155	0	True				
ANR	745189	ParameterType	BitSetRef		745155	0					
ANR	745190	Identifier	bs		745155	1					
ANR	745191	CFGEntryNode	ENTRY		745155		True				
ANR	745192	CFGExitNode	EXIT		745155		True				
ANR	745193	Symbol	bs		745155						
ANR	745194	Symbol	* i		745155						
ANR	745195	Symbol	* bs		745155						
ANR	745196	Symbol	BITSET_SIZE		745155						
ANR	745197	Symbol	i		745155						
ANR	745198	Function	bitset_invert	171:0:5345:5460							
ANR	745199	FunctionDef	bitset_invert (BitSetRef bs)		745198	0					
ANR	745200	CompoundStatement		173:0:5385:5460	745198	0					
ANR	745201	IdentifierDeclStatement	int i ;	174:2:5389:5394	745198	0	True				
ANR	745202	IdentifierDecl	i		745198	0					
ANR	745203	IdentifierDeclType	int		745198	0					
ANR	745204	Identifier	i		745198	1					
ANR	745205	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		745198	1					
ANR	745206	ForInit	i = 0 ;	175:7:5403:5408	745198	0	True				
ANR	745207	AssignmentExpression	i = 0		745198	0		=			
ANR	745208	Identifier	i		745198	0					
ANR	745209	PrimaryExpression	0		745198	1					
ANR	745210	Condition	i < ( int ) BITSET_SIZE	175:14:5410:5430	745198	1	True				
ANR	745211	RelationalExpression	i < ( int ) BITSET_SIZE		745198	0		<			
ANR	745212	Identifier	i		745198	0					
ANR	745213	CastExpression	( int ) BITSET_SIZE		745198	1					
ANR	745214	CastTarget	int		745198	0					
ANR	745215	Identifier	BITSET_SIZE		745198	1					
ANR	745216	PostIncDecOperationExpression	i ++	175:37:5433:5435	745198	2	True				
ANR	745217	Identifier	i		745198	0					
ANR	745218	IncDec	++		745198	1					
ANR	745219	CompoundStatement		3:42:52:52	745198	3					
ANR	745220	ExpressionStatement	bs [ i ] = ~ ( bs [ i ] )	175:44:5440:5456	745198	0	True				
ANR	745221	AssignmentExpression	bs [ i ] = ~ ( bs [ i ] )		745198	0		=			
ANR	745222	ArrayIndexing	bs [ i ]		745198	0					
ANR	745223	Identifier	bs		745198	0					
ANR	745224	Identifier	i		745198	1					
ANR	745225	UnaryOperationExpression	~ ( bs [ i ] )		745198	1					
ANR	745226	UnaryOperator	~		745198	0					
ANR	745227	ArrayIndexing	bs [ i ]		745198	1					
ANR	745228	Identifier	bs		745198	0					
ANR	745229	Identifier	i		745198	1					
ANR	745230	ReturnType	static void		745198	1					
ANR	745231	Identifier	bitset_invert		745198	2					
ANR	745232	ParameterList	BitSetRef bs		745198	3					
ANR	745233	Parameter	BitSetRef bs	172:14:5371:5382	745198	0	True				
ANR	745234	ParameterType	BitSetRef		745198	0					
ANR	745235	Identifier	bs		745198	1					
ANR	745236	CFGEntryNode	ENTRY		745198		True				
ANR	745237	CFGExitNode	EXIT		745198		True				
ANR	745238	Symbol	bs		745198						
ANR	745239	Symbol	* i		745198						
ANR	745240	Symbol	* bs		745198						
ANR	745241	Symbol	BITSET_SIZE		745198						
ANR	745242	Symbol	i		745198						
ANR	745243	Function	bitset_invert_to	178:0:5463:5599							
ANR	745244	FunctionDef	"bitset_invert_to (BitSetRef from , BitSetRef to)"		745243	0					
ANR	745245	CompoundStatement		180:0:5522:5599	745243	0					
ANR	745246	IdentifierDeclStatement	int i ;	181:2:5526:5531	745243	0	True				
ANR	745247	IdentifierDecl	i		745243	0					
ANR	745248	IdentifierDeclType	int		745243	0					
ANR	745249	Identifier	i		745243	1					
ANR	745250	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		745243	1					
ANR	745251	ForInit	i = 0 ;	182:7:5540:5545	745243	0	True				
ANR	745252	AssignmentExpression	i = 0		745243	0		=			
ANR	745253	Identifier	i		745243	0					
ANR	745254	PrimaryExpression	0		745243	1					
ANR	745255	Condition	i < ( int ) BITSET_SIZE	182:14:5547:5567	745243	1	True				
ANR	745256	RelationalExpression	i < ( int ) BITSET_SIZE		745243	0		<			
ANR	745257	Identifier	i		745243	0					
ANR	745258	CastExpression	( int ) BITSET_SIZE		745243	1					
ANR	745259	CastTarget	int		745243	0					
ANR	745260	Identifier	BITSET_SIZE		745243	1					
ANR	745261	PostIncDecOperationExpression	i ++	182:37:5570:5572	745243	2	True				
ANR	745262	Identifier	i		745243	0					
ANR	745263	IncDec	++		745243	1					
ANR	745264	CompoundStatement		3:42:52:52	745243	3					
ANR	745265	ExpressionStatement	to [ i ] = ~ ( from [ i ] )	182:44:5577:5595	745243	0	True				
ANR	745266	AssignmentExpression	to [ i ] = ~ ( from [ i ] )		745243	0		=			
ANR	745267	ArrayIndexing	to [ i ]		745243	0					
ANR	745268	Identifier	to		745243	0					
ANR	745269	Identifier	i		745243	1					
ANR	745270	UnaryOperationExpression	~ ( from [ i ] )		745243	1					
ANR	745271	UnaryOperator	~		745243	0					
ANR	745272	ArrayIndexing	from [ i ]		745243	1					
ANR	745273	Identifier	from		745243	0					
ANR	745274	Identifier	i		745243	1					
ANR	745275	ReturnType	static void		745243	1					
ANR	745276	Identifier	bitset_invert_to		745243	2					
ANR	745277	ParameterList	"BitSetRef from , BitSetRef to"		745243	3					
ANR	745278	Parameter	BitSetRef from	179:17:5492:5505	745243	0	True				
ANR	745279	ParameterType	BitSetRef		745243	0					
ANR	745280	Identifier	from		745243	1					
ANR	745281	Parameter	BitSetRef to	179:33:5508:5519	745243	1	True				
ANR	745282	ParameterType	BitSetRef		745243	0					
ANR	745283	Identifier	to		745243	1					
ANR	745284	CFGEntryNode	ENTRY		745243		True				
ANR	745285	CFGExitNode	EXIT		745243		True				
ANR	745286	Symbol	* to		745243						
ANR	745287	Symbol	* i		745243						
ANR	745288	Symbol	BITSET_SIZE		745243						
ANR	745289	Symbol	i		745243						
ANR	745290	Symbol	from		745243						
ANR	745291	Symbol	to		745243						
ANR	745292	Symbol	* from		745243						
ANR	745293	Function	bitset_and	185:0:5602:5730							
ANR	745294	FunctionDef	"bitset_and (BitSetRef dest , BitSetRef bs)"		745293	0					
ANR	745295	CompoundStatement		187:0:5655:5730	745293	0					
ANR	745296	IdentifierDeclStatement	int i ;	188:2:5659:5664	745293	0	True				
ANR	745297	IdentifierDecl	i		745293	0					
ANR	745298	IdentifierDeclType	int		745293	0					
ANR	745299	Identifier	i		745293	1					
ANR	745300	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		745293	1					
ANR	745301	ForInit	i = 0 ;	189:7:5673:5678	745293	0	True				
ANR	745302	AssignmentExpression	i = 0		745293	0		=			
ANR	745303	Identifier	i		745293	0					
ANR	745304	PrimaryExpression	0		745293	1					
ANR	745305	Condition	i < ( int ) BITSET_SIZE	189:14:5680:5700	745293	1	True				
ANR	745306	RelationalExpression	i < ( int ) BITSET_SIZE		745293	0		<			
ANR	745307	Identifier	i		745293	0					
ANR	745308	CastExpression	( int ) BITSET_SIZE		745293	1					
ANR	745309	CastTarget	int		745293	0					
ANR	745310	Identifier	BITSET_SIZE		745293	1					
ANR	745311	PostIncDecOperationExpression	i ++	189:37:5703:5705	745293	2	True				
ANR	745312	Identifier	i		745293	0					
ANR	745313	IncDec	++		745293	1					
ANR	745314	CompoundStatement		3:42:52:52	745293	3					
ANR	745315	ExpressionStatement	dest [ i ] &= bs [ i ]	189:44:5710:5726	745293	0	True				
ANR	745316	AssignmentExpression	dest [ i ] &= bs [ i ]		745293	0		&=			
ANR	745317	ArrayIndexing	dest [ i ]		745293	0					
ANR	745318	Identifier	dest		745293	0					
ANR	745319	Identifier	i		745293	1					
ANR	745320	ArrayIndexing	bs [ i ]		745293	1					
ANR	745321	Identifier	bs		745293	0					
ANR	745322	Identifier	i		745293	1					
ANR	745323	ReturnType	static void		745293	1					
ANR	745324	Identifier	bitset_and		745293	2					
ANR	745325	ParameterList	"BitSetRef dest , BitSetRef bs"		745293	3					
ANR	745326	Parameter	BitSetRef dest	186:11:5625:5638	745293	0	True				
ANR	745327	ParameterType	BitSetRef		745293	0					
ANR	745328	Identifier	dest		745293	1					
ANR	745329	Parameter	BitSetRef bs	186:27:5641:5652	745293	1	True				
ANR	745330	ParameterType	BitSetRef		745293	0					
ANR	745331	Identifier	bs		745293	1					
ANR	745332	CFGEntryNode	ENTRY		745293		True				
ANR	745333	CFGExitNode	EXIT		745293		True				
ANR	745334	Symbol	bs		745293						
ANR	745335	Symbol	* i		745293						
ANR	745336	Symbol	* bs		745293						
ANR	745337	Symbol	* dest		745293						
ANR	745338	Symbol	BITSET_SIZE		745293						
ANR	745339	Symbol	i		745293						
ANR	745340	Symbol	dest		745293						
ANR	745341	Function	bitset_or	192:0:5733:5860							
ANR	745342	FunctionDef	"bitset_or (BitSetRef dest , BitSetRef bs)"		745341	0					
ANR	745343	CompoundStatement		194:0:5785:5860	745341	0					
ANR	745344	IdentifierDeclStatement	int i ;	195:2:5789:5794	745341	0	True				
ANR	745345	IdentifierDecl	i		745341	0					
ANR	745346	IdentifierDeclType	int		745341	0					
ANR	745347	Identifier	i		745341	1					
ANR	745348	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		745341	1					
ANR	745349	ForInit	i = 0 ;	196:7:5803:5808	745341	0	True				
ANR	745350	AssignmentExpression	i = 0		745341	0		=			
ANR	745351	Identifier	i		745341	0					
ANR	745352	PrimaryExpression	0		745341	1					
ANR	745353	Condition	i < ( int ) BITSET_SIZE	196:14:5810:5830	745341	1	True				
ANR	745354	RelationalExpression	i < ( int ) BITSET_SIZE		745341	0		<			
ANR	745355	Identifier	i		745341	0					
ANR	745356	CastExpression	( int ) BITSET_SIZE		745341	1					
ANR	745357	CastTarget	int		745341	0					
ANR	745358	Identifier	BITSET_SIZE		745341	1					
ANR	745359	PostIncDecOperationExpression	i ++	196:37:5833:5835	745341	2	True				
ANR	745360	Identifier	i		745341	0					
ANR	745361	IncDec	++		745341	1					
ANR	745362	CompoundStatement		3:42:52:52	745341	3					
ANR	745363	ExpressionStatement	dest [ i ] |= bs [ i ]	196:44:5840:5856	745341	0	True				
ANR	745364	AssignmentExpression	dest [ i ] |= bs [ i ]		745341	0		|=			
ANR	745365	ArrayIndexing	dest [ i ]		745341	0					
ANR	745366	Identifier	dest		745341	0					
ANR	745367	Identifier	i		745341	1					
ANR	745368	ArrayIndexing	bs [ i ]		745341	1					
ANR	745369	Identifier	bs		745341	0					
ANR	745370	Identifier	i		745341	1					
ANR	745371	ReturnType	static void		745341	1					
ANR	745372	Identifier	bitset_or		745341	2					
ANR	745373	ParameterList	"BitSetRef dest , BitSetRef bs"		745341	3					
ANR	745374	Parameter	BitSetRef dest	193:10:5755:5768	745341	0	True				
ANR	745375	ParameterType	BitSetRef		745341	0					
ANR	745376	Identifier	dest		745341	1					
ANR	745377	Parameter	BitSetRef bs	193:26:5771:5782	745341	1	True				
ANR	745378	ParameterType	BitSetRef		745341	0					
ANR	745379	Identifier	bs		745341	1					
ANR	745380	CFGEntryNode	ENTRY		745341		True				
ANR	745381	CFGExitNode	EXIT		745341		True				
ANR	745382	Symbol	bs		745341						
ANR	745383	Symbol	* i		745341						
ANR	745384	Symbol	* bs		745341						
ANR	745385	Symbol	* dest		745341						
ANR	745386	Symbol	BITSET_SIZE		745341						
ANR	745387	Symbol	i		745341						
ANR	745388	Symbol	dest		745341						
ANR	745389	Function	bitset_copy	199:0:5863:5991							
ANR	745390	FunctionDef	"bitset_copy (BitSetRef dest , BitSetRef bs)"		745389	0					
ANR	745391	CompoundStatement		201:0:5917:5991	745389	0					
ANR	745392	IdentifierDeclStatement	int i ;	202:2:5921:5926	745389	0	True				
ANR	745393	IdentifierDecl	i		745389	0					
ANR	745394	IdentifierDeclType	int		745389	0					
ANR	745395	Identifier	i		745389	1					
ANR	745396	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		745389	1					
ANR	745397	ForInit	i = 0 ;	203:7:5935:5940	745389	0	True				
ANR	745398	AssignmentExpression	i = 0		745389	0		=			
ANR	745399	Identifier	i		745389	0					
ANR	745400	PrimaryExpression	0		745389	1					
ANR	745401	Condition	i < ( int ) BITSET_SIZE	203:14:5942:5962	745389	1	True				
ANR	745402	RelationalExpression	i < ( int ) BITSET_SIZE		745389	0		<			
ANR	745403	Identifier	i		745389	0					
ANR	745404	CastExpression	( int ) BITSET_SIZE		745389	1					
ANR	745405	CastTarget	int		745389	0					
ANR	745406	Identifier	BITSET_SIZE		745389	1					
ANR	745407	PostIncDecOperationExpression	i ++	203:37:5965:5967	745389	2	True				
ANR	745408	Identifier	i		745389	0					
ANR	745409	IncDec	++		745389	1					
ANR	745410	CompoundStatement		3:42:52:52	745389	3					
ANR	745411	ExpressionStatement	dest [ i ] = bs [ i ]	203:44:5972:5987	745389	0	True				
ANR	745412	AssignmentExpression	dest [ i ] = bs [ i ]		745389	0		=			
ANR	745413	ArrayIndexing	dest [ i ]		745389	0					
ANR	745414	Identifier	dest		745389	0					
ANR	745415	Identifier	i		745389	1					
ANR	745416	ArrayIndexing	bs [ i ]		745389	1					
ANR	745417	Identifier	bs		745389	0					
ANR	745418	Identifier	i		745389	1					
ANR	745419	ReturnType	static void		745389	1					
ANR	745420	Identifier	bitset_copy		745389	2					
ANR	745421	ParameterList	"BitSetRef dest , BitSetRef bs"		745389	3					
ANR	745422	Parameter	BitSetRef dest	200:12:5887:5900	745389	0	True				
ANR	745423	ParameterType	BitSetRef		745389	0					
ANR	745424	Identifier	dest		745389	1					
ANR	745425	Parameter	BitSetRef bs	200:28:5903:5914	745389	1	True				
ANR	745426	ParameterType	BitSetRef		745389	0					
ANR	745427	Identifier	bs		745389	1					
ANR	745428	CFGEntryNode	ENTRY		745389		True				
ANR	745429	CFGExitNode	EXIT		745389		True				
ANR	745430	Symbol	bs		745389						
ANR	745431	Symbol	* i		745389						
ANR	745432	Symbol	* bs		745389						
ANR	745433	Symbol	* dest		745389						
ANR	745434	Symbol	BITSET_SIZE		745389						
ANR	745435	Symbol	i		745389						
ANR	745436	Symbol	dest		745389						
ANR	745437	Function	onig_strncmp	206:0:5994:6151							
ANR	745438	FunctionDef	"onig_strncmp (const UChar * s1 , const UChar * s2 , int n)"		745437	0					
ANR	745439	CompoundStatement		208:0:6059:6151	745437	0					
ANR	745440	IdentifierDeclStatement	int x ;	209:2:6063:6068	745437	0	True				
ANR	745441	IdentifierDecl	x		745437	0					
ANR	745442	IdentifierDeclType	int		745437	0					
ANR	745443	Identifier	x		745437	1					
ANR	745444	WhileStatement	while ( n -- > 0 )		745437	1					
ANR	745445	Condition	n -- > 0	211:9:6080:6086	745437	0	True				
ANR	745446	RelationalExpression	n -- > 0		745437	0		>			
ANR	745447	PostIncDecOperationExpression	n --		745437	0					
ANR	745448	Identifier	n		745437	0					
ANR	745449	IncDec	--		745437	1					
ANR	745450	PrimaryExpression	0		745437	1					
ANR	745451	CompoundStatement		4:18:29:29	745437	1					
ANR	745452	ExpressionStatement	x = * s2 ++ - * s1 ++	212:4:6095:6112	745437	0	True				
ANR	745453	AssignmentExpression	x = * s2 ++ - * s1 ++		745437	0		=			
ANR	745454	Identifier	x		745437	0					
ANR	745455	AdditiveExpression	* s2 ++ - * s1 ++		745437	1		-			
ANR	745456	UnaryOperationExpression	* s2 ++		745437	0					
ANR	745457	UnaryOperator	*		745437	0					
ANR	745458	PostIncDecOperationExpression	s2 ++		745437	1					
ANR	745459	Identifier	s2		745437	0					
ANR	745460	IncDec	++		745437	1					
ANR	745461	UnaryOperationExpression	* s1 ++		745437	1					
ANR	745462	UnaryOperator	*		745437	0					
ANR	745463	PostIncDecOperationExpression	s1 ++		745437	1					
ANR	745464	Identifier	s1		745437	0					
ANR	745465	IncDec	++		745437	1					
ANR	745466	IfStatement	if ( x )		745437	1					
ANR	745467	Condition	x	213:8:6122:6122	745437	0	True				
ANR	745468	Identifier	x		745437	0					
ANR	745469	ReturnStatement	return x ;	213:11:6125:6133	745437	1	True				
ANR	745470	Identifier	x		745437	0					
ANR	745471	ReturnStatement	return 0 ;	215:2:6141:6149	745437	2	True				
ANR	745472	PrimaryExpression	0		745437	0					
ANR	745473	ReturnType	extern int		745437	1					
ANR	745474	Identifier	onig_strncmp		745437	2					
ANR	745475	ParameterList	"const UChar * s1 , const UChar * s2 , int n"		745437	3					
ANR	745476	Parameter	const UChar * s1	207:13:6018:6032	745437	0	True				
ANR	745477	ParameterType	const UChar *		745437	0					
ANR	745478	Identifier	s1		745437	1					
ANR	745479	Parameter	const UChar * s2	207:30:6035:6049	745437	1	True				
ANR	745480	ParameterType	const UChar *		745437	0					
ANR	745481	Identifier	s2		745437	1					
ANR	745482	Parameter	int n	207:47:6052:6056	745437	2	True				
ANR	745483	ParameterType	int		745437	0					
ANR	745484	Identifier	n		745437	1					
ANR	745485	CFGEntryNode	ENTRY		745437		True				
ANR	745486	CFGExitNode	EXIT		745437		True				
ANR	745487	Symbol	* s1 ++		745437						
ANR	745488	Symbol	* s2 ++		745437						
ANR	745489	Symbol	x		745437						
ANR	745490	Symbol	s1		745437						
ANR	745491	Symbol	n		745437						
ANR	745492	Symbol	s2		745437						
ANR	745493	Function	onig_strcpy	218:0:6154:6329							
ANR	745494	FunctionDef	"onig_strcpy (UChar * dest , const UChar * src , const UChar * end)"		745493	0					
ANR	745495	CompoundStatement		220:0:6227:6329	745493	0					
ANR	745496	IdentifierDeclStatement	int len = end - src ;	221:2:6231:6250	745493	0	True				
ANR	745497	IdentifierDecl	len = end - src		745493	0					
ANR	745498	IdentifierDeclType	int		745493	0					
ANR	745499	Identifier	len		745493	1					
ANR	745500	AssignmentExpression	len = end - src		745493	2		=			
ANR	745501	Identifier	len		745493	0					
ANR	745502	AdditiveExpression	end - src		745493	1		-			
ANR	745503	Identifier	end		745493	0					
ANR	745504	Identifier	src		745493	1					
ANR	745505	IfStatement	if ( len > 0 )		745493	1					
ANR	745506	Condition	len > 0	222:6:6258:6264	745493	0	True				
ANR	745507	RelationalExpression	len > 0		745493	0		>			
ANR	745508	Identifier	len		745493	0					
ANR	745509	PrimaryExpression	0		745493	1					
ANR	745510	CompoundStatement		3:15:39:39	745493	1					
ANR	745511	ExpressionStatement	"xmemcpy ( dest , src , len )"	223:4:6273:6296	745493	0	True				
ANR	745512	CallExpression	"xmemcpy ( dest , src , len )"		745493	0					
ANR	745513	Callee	xmemcpy		745493	0					
ANR	745514	Identifier	xmemcpy		745493	0					
ANR	745515	ArgumentList	dest		745493	1					
ANR	745516	Argument	dest		745493	0					
ANR	745517	Identifier	dest		745493	0					
ANR	745518	Argument	src		745493	1					
ANR	745519	Identifier	src		745493	0					
ANR	745520	Argument	len		745493	2					
ANR	745521	Identifier	len		745493	0					
ANR	745522	ExpressionStatement	dest [ len ] = ( UChar ) 0	224:4:6302:6323	745493	1	True				
ANR	745523	AssignmentExpression	dest [ len ] = ( UChar ) 0		745493	0		=			
ANR	745524	ArrayIndexing	dest [ len ]		745493	0					
ANR	745525	Identifier	dest		745493	0					
ANR	745526	Identifier	len		745493	1					
ANR	745527	CastExpression	( UChar ) 0		745493	1					
ANR	745528	CastTarget	UChar		745493	0					
ANR	745529	PrimaryExpression	0		745493	1					
ANR	745530	ReturnType	extern void		745493	1					
ANR	745531	Identifier	onig_strcpy		745493	2					
ANR	745532	ParameterList	"UChar * dest , const UChar * src , const UChar * end"		745493	3					
ANR	745533	Parameter	UChar * dest	219:12:6178:6188	745493	0	True				
ANR	745534	ParameterType	UChar *		745493	0					
ANR	745535	Identifier	dest		745493	1					
ANR	745536	Parameter	const UChar * src	219:25:6191:6206	745493	1	True				
ANR	745537	ParameterType	const UChar *		745493	0					
ANR	745538	Identifier	src		745493	1					
ANR	745539	Parameter	const UChar * end	219:43:6209:6224	745493	2	True				
ANR	745540	ParameterType	const UChar *		745493	0					
ANR	745541	Identifier	end		745493	1					
ANR	745542	CFGEntryNode	ENTRY		745493		True				
ANR	745543	CFGExitNode	EXIT		745493		True				
ANR	745544	Symbol	len		745493						
ANR	745545	Symbol	src		745493						
ANR	745546	Symbol	* dest		745493						
ANR	745547	Symbol	end		745493						
ANR	745548	Symbol	dest		745493						
ANR	745549	Symbol	* len		745493						
ANR	745550	Function	strdup_with_null	229:0:6355:6687							
ANR	745551	FunctionDef	"strdup_with_null (OnigEncoding enc , UChar * s , UChar * end)"		745550	0					
ANR	745552	CompoundStatement		231:0:6426:6687	745550	0					
ANR	745553	IdentifierDeclStatement	"int slen , term_len , i ;"	232:2:6430:6451	745550	0	True				
ANR	745554	IdentifierDecl	slen		745550	0					
ANR	745555	IdentifierDeclType	int		745550	0					
ANR	745556	Identifier	slen		745550	1					
ANR	745557	IdentifierDecl	term_len		745550	1					
ANR	745558	IdentifierDeclType	int		745550	0					
ANR	745559	Identifier	term_len		745550	1					
ANR	745560	IdentifierDecl	i		745550	2					
ANR	745561	IdentifierDeclType	int		745550	0					
ANR	745562	Identifier	i		745550	1					
ANR	745563	IdentifierDeclStatement	UChar * r ;	233:2:6455:6463	745550	1	True				
ANR	745564	IdentifierDecl	* r		745550	0					
ANR	745565	IdentifierDeclType	UChar *		745550	0					
ANR	745566	Identifier	r		745550	1					
ANR	745567	ExpressionStatement	slen = end - s	235:2:6468:6482	745550	2	True				
ANR	745568	AssignmentExpression	slen = end - s		745550	0		=			
ANR	745569	Identifier	slen		745550	0					
ANR	745570	AdditiveExpression	end - s		745550	1		-			
ANR	745571	Identifier	end		745550	0					
ANR	745572	Identifier	s		745550	1					
ANR	745573	ExpressionStatement	term_len = ONIGENC_MBC_MINLEN ( enc )	236:2:6486:6520	745550	3	True				
ANR	745574	AssignmentExpression	term_len = ONIGENC_MBC_MINLEN ( enc )		745550	0		=			
ANR	745575	Identifier	term_len		745550	0					
ANR	745576	CallExpression	ONIGENC_MBC_MINLEN ( enc )		745550	1					
ANR	745577	Callee	ONIGENC_MBC_MINLEN		745550	0					
ANR	745578	Identifier	ONIGENC_MBC_MINLEN		745550	0					
ANR	745579	ArgumentList	enc		745550	1					
ANR	745580	Argument	enc		745550	0					
ANR	745581	Identifier	enc		745550	0					
ANR	745582	ExpressionStatement	r = ( UChar * ) xmalloc ( slen + term_len )	238:2:6525:6562	745550	4	True				
ANR	745583	AssignmentExpression	r = ( UChar * ) xmalloc ( slen + term_len )		745550	0		=			
ANR	745584	Identifier	r		745550	0					
ANR	745585	CastExpression	( UChar * ) xmalloc ( slen + term_len )		745550	1					
ANR	745586	CastTarget	UChar *		745550	0					
ANR	745587	CallExpression	xmalloc ( slen + term_len )		745550	1					
ANR	745588	Callee	xmalloc		745550	0					
ANR	745589	Identifier	xmalloc		745550	0					
ANR	745590	ArgumentList	slen + term_len		745550	1					
ANR	745591	Argument	slen + term_len		745550	0					
ANR	745592	AdditiveExpression	slen + term_len		745550	0		+			
ANR	745593	Identifier	slen		745550	0					
ANR	745594	Identifier	term_len		745550	1					
ANR	745595	ExpressionStatement	CHECK_NULL_RETURN ( r )	239:2:6566:6586	745550	5	True				
ANR	745596	CallExpression	CHECK_NULL_RETURN ( r )		745550	0					
ANR	745597	Callee	CHECK_NULL_RETURN		745550	0					
ANR	745598	Identifier	CHECK_NULL_RETURN		745550	0					
ANR	745599	ArgumentList	r		745550	1					
ANR	745600	Argument	r		745550	0					
ANR	745601	Identifier	r		745550	0					
ANR	745602	ExpressionStatement	"xmemcpy ( r , s , slen )"	240:2:6590:6609	745550	6	True				
ANR	745603	CallExpression	"xmemcpy ( r , s , slen )"		745550	0					
ANR	745604	Callee	xmemcpy		745550	0					
ANR	745605	Identifier	xmemcpy		745550	0					
ANR	745606	ArgumentList	r		745550	1					
ANR	745607	Argument	r		745550	0					
ANR	745608	Identifier	r		745550	0					
ANR	745609	Argument	s		745550	1					
ANR	745610	Identifier	s		745550	0					
ANR	745611	Argument	slen		745550	2					
ANR	745612	Identifier	slen		745550	0					
ANR	745613	ForStatement	for ( i = 0 ; i < term_len ; i ++ )		745550	7					
ANR	745614	ForInit	i = 0 ;	242:7:6619:6624	745550	0	True				
ANR	745615	AssignmentExpression	i = 0		745550	0		=			
ANR	745616	Identifier	i		745550	0					
ANR	745617	PrimaryExpression	0		745550	1					
ANR	745618	Condition	i < term_len	242:14:6626:6637	745550	1	True				
ANR	745619	RelationalExpression	i < term_len		745550	0		<			
ANR	745620	Identifier	i		745550	0					
ANR	745621	Identifier	term_len		745550	1					
ANR	745622	PostIncDecOperationExpression	i ++	242:28:6640:6642	745550	2	True				
ANR	745623	Identifier	i		745550	0					
ANR	745624	IncDec	++		745550	1					
ANR	745625	ExpressionStatement	r [ slen + i ] = ( UChar ) 0	243:4:6649:6672	745550	3	True				
ANR	745626	AssignmentExpression	r [ slen + i ] = ( UChar ) 0		745550	0		=			
ANR	745627	ArrayIndexing	r [ slen + i ]		745550	0					
ANR	745628	Identifier	r		745550	0					
ANR	745629	AdditiveExpression	slen + i		745550	1		+			
ANR	745630	Identifier	slen		745550	0					
ANR	745631	Identifier	i		745550	1					
ANR	745632	CastExpression	( UChar ) 0		745550	1					
ANR	745633	CastTarget	UChar		745550	0					
ANR	745634	PrimaryExpression	0		745550	1					
ANR	745635	ReturnStatement	return r ;	245:2:6677:6685	745550	8	True				
ANR	745636	Identifier	r		745550	0					
ANR	745637	ReturnType	static UChar *		745550	1					
ANR	745638	Identifier	strdup_with_null		745550	2					
ANR	745639	ParameterList	"OnigEncoding enc , UChar * s , UChar * end"		745550	3					
ANR	745640	Parameter	OnigEncoding enc	230:17:6386:6401	745550	0	True				
ANR	745641	ParameterType	OnigEncoding		745550	0					
ANR	745642	Identifier	enc		745550	1					
ANR	745643	Parameter	UChar * s	230:35:6404:6411	745550	1	True				
ANR	745644	ParameterType	UChar *		745550	0					
ANR	745645	Identifier	s		745550	1					
ANR	745646	Parameter	UChar * end	230:45:6414:6423	745550	2	True				
ANR	745647	ParameterType	UChar *		745550	0					
ANR	745648	Identifier	end		745550	1					
ANR	745649	CFGEntryNode	ENTRY		745550		True				
ANR	745650	CFGExitNode	EXIT		745550		True				
ANR	745651	Symbol	term_len		745550						
ANR	745652	Symbol	r		745550						
ANR	745653	Symbol	s		745550						
ANR	745654	Symbol	* i		745550						
ANR	745655	Symbol	xmalloc		745550						
ANR	745656	Symbol	slen		745550						
ANR	745657	Symbol	ONIGENC_MBC_MINLEN		745550						
ANR	745658	Symbol	i		745550						
ANR	745659	Symbol	end		745550						
ANR	745660	Symbol	enc		745550						
ANR	745661	Symbol	* slen		745550						
ANR	745662	Symbol	* r		745550						
ANR	745663	DeclStmt									
ANR	745664	Decl							define PUNFETCH	define PUNFETCH	p
ANR	745665	Function	str_end_cmp	314:0:8154:8434							
ANR	745666	FunctionDef	"str_end_cmp (st_str_end_key * x , st_str_end_key * y)"		745665	0					
ANR	745667	CompoundStatement		316:0:8215:8434	745665	0					
ANR	745668	IdentifierDeclStatement	"UChar * p , * q ;"	317:2:8219:8231	745665	0	True				
ANR	745669	IdentifierDecl	* p		745665	0					
ANR	745670	IdentifierDeclType	UChar *		745665	0					
ANR	745671	Identifier	p		745665	1					
ANR	745672	IdentifierDecl	* q		745665	1					
ANR	745673	IdentifierDeclType	UChar *		745665	0					
ANR	745674	Identifier	q		745665	1					
ANR	745675	IdentifierDeclStatement	int c ;	318:2:8235:8240	745665	1	True				
ANR	745676	IdentifierDecl	c		745665	0					
ANR	745677	IdentifierDeclType	int		745665	0					
ANR	745678	Identifier	c		745665	1					
ANR	745679	IfStatement	if ( ( x -> end - x -> s ) != ( y -> end - y -> s ) )		745665	2					
ANR	745680	Condition	( x -> end - x -> s ) != ( y -> end - y -> s )	320:6:8249:8282	745665	0	True				
ANR	745681	EqualityExpression	( x -> end - x -> s ) != ( y -> end - y -> s )		745665	0		!=			
ANR	745682	AdditiveExpression	x -> end - x -> s		745665	0		-			
ANR	745683	PtrMemberAccess	x -> end		745665	0					
ANR	745684	Identifier	x		745665	0					
ANR	745685	Identifier	end		745665	1					
ANR	745686	PtrMemberAccess	x -> s		745665	1					
ANR	745687	Identifier	x		745665	0					
ANR	745688	Identifier	s		745665	1					
ANR	745689	AdditiveExpression	y -> end - y -> s		745665	1		-			
ANR	745690	PtrMemberAccess	y -> end		745665	0					
ANR	745691	Identifier	y		745665	0					
ANR	745692	Identifier	end		745665	1					
ANR	745693	PtrMemberAccess	y -> s		745665	1					
ANR	745694	Identifier	y		745665	0					
ANR	745695	Identifier	s		745665	1					
ANR	745696	ReturnStatement	return 1 ;	321:4:8289:8297	745665	1	True				
ANR	745697	PrimaryExpression	1		745665	0					
ANR	745698	ExpressionStatement	p = x -> s	323:2:8302:8310	745665	3	True				
ANR	745699	AssignmentExpression	p = x -> s		745665	0		=			
ANR	745700	Identifier	p		745665	0					
ANR	745701	PtrMemberAccess	x -> s		745665	1					
ANR	745702	Identifier	x		745665	0					
ANR	745703	Identifier	s		745665	1					
ANR	745704	ExpressionStatement	q = y -> s	324:2:8314:8322	745665	4	True				
ANR	745705	AssignmentExpression	q = y -> s		745665	0		=			
ANR	745706	Identifier	q		745665	0					
ANR	745707	PtrMemberAccess	y -> s		745665	1					
ANR	745708	Identifier	y		745665	0					
ANR	745709	Identifier	s		745665	1					
ANR	745710	WhileStatement	while ( p < x -> end )		745665	5					
ANR	745711	Condition	p < x -> end	325:9:8333:8342	745665	0	True				
ANR	745712	RelationalExpression	p < x -> end		745665	0		<			
ANR	745713	Identifier	p		745665	0					
ANR	745714	PtrMemberAccess	x -> end		745665	1					
ANR	745715	Identifier	x		745665	0					
ANR	745716	Identifier	end		745665	1					
ANR	745717	CompoundStatement		10:21:129:129	745665	1					
ANR	745718	ExpressionStatement	c = ( int ) * p - ( int ) * q	326:4:8351:8374	745665	0	True				
ANR	745719	AssignmentExpression	c = ( int ) * p - ( int ) * q		745665	0		=			
ANR	745720	Identifier	c		745665	0					
ANR	745721	AdditiveExpression	( int ) * p - ( int ) * q		745665	1		-			
ANR	745722	CastExpression	( int ) * p		745665	0					
ANR	745723	CastTarget	int		745665	0					
ANR	745724	UnaryOperationExpression	* p		745665	1					
ANR	745725	UnaryOperator	*		745665	0					
ANR	745726	Identifier	p		745665	1					
ANR	745727	CastExpression	( int ) * q		745665	1					
ANR	745728	CastTarget	int		745665	0					
ANR	745729	UnaryOperationExpression	* q		745665	1					
ANR	745730	UnaryOperator	*		745665	0					
ANR	745731	Identifier	q		745665	1					
ANR	745732	IfStatement	if ( c != 0 )		745665	1					
ANR	745733	Condition	c != 0	327:8:8384:8389	745665	0	True				
ANR	745734	EqualityExpression	c != 0		745665	0		!=			
ANR	745735	Identifier	c		745665	0					
ANR	745736	PrimaryExpression	0		745665	1					
ANR	745737	ReturnStatement	return c ;	327:16:8392:8400	745665	1	True				
ANR	745738	Identifier	c		745665	0					
ANR	745739	ExpressionStatement	p ++	329:4:8407:8410	745665	2	True				
ANR	745740	PostIncDecOperationExpression	p ++		745665	0					
ANR	745741	Identifier	p		745665	0					
ANR	745742	IncDec	++		745665	1					
ANR	745743	ExpressionStatement	q ++	329:9:8412:8415	745665	3	True				
ANR	745744	PostIncDecOperationExpression	q ++		745665	0					
ANR	745745	Identifier	q		745665	0					
ANR	745746	IncDec	++		745665	1					
ANR	745747	ReturnStatement	return 0 ;	332:2:8424:8432	745665	6	True				
ANR	745748	PrimaryExpression	0		745665	0					
ANR	745749	ReturnType	static int		745665	1					
ANR	745750	Identifier	str_end_cmp		745665	2					
ANR	745751	ParameterList	"st_str_end_key * x , st_str_end_key * y"		745665	3					
ANR	745752	Parameter	st_str_end_key * x	315:12:8177:8193	745665	0	True				
ANR	745753	ParameterType	st_str_end_key *		745665	0					
ANR	745754	Identifier	x		745665	1					
ANR	745755	Parameter	st_str_end_key * y	315:31:8196:8212	745665	1	True				
ANR	745756	ParameterType	st_str_end_key *		745665	0					
ANR	745757	Identifier	y		745665	1					
ANR	745758	CFGEntryNode	ENTRY		745665		True				
ANR	745759	CFGExitNode	EXIT		745665		True				
ANR	745760	Symbol	* x		745665						
ANR	745761	Symbol	c		745665						
ANR	745762	Symbol	* y		745665						
ANR	745763	Symbol	y -> end		745665						
ANR	745764	Symbol	x -> end		745665						
ANR	745765	Symbol	p		745665						
ANR	745766	Symbol	q		745665						
ANR	745767	Symbol	x -> s		745665						
ANR	745768	Symbol	x		745665						
ANR	745769	Symbol	y		745665						
ANR	745770	Symbol	y -> s		745665						
ANR	745771	Symbol	* p		745665						
ANR	745772	Symbol	* q		745665						
ANR	745773	Function	str_end_hash	335:0:8437:8611							
ANR	745774	FunctionDef	str_end_hash (st_str_end_key * x)		745773	0					
ANR	745775	CompoundStatement		337:0:8480:8611	745773	0					
ANR	745776	IdentifierDeclStatement	UChar * p ;	338:2:8484:8492	745773	0	True				
ANR	745777	IdentifierDecl	* p		745773	0					
ANR	745778	IdentifierDeclType	UChar *		745773	0					
ANR	745779	Identifier	p		745773	1					
ANR	745780	IdentifierDeclStatement	int val = 0 ;	339:2:8496:8507	745773	1	True				
ANR	745781	IdentifierDecl	val = 0		745773	0					
ANR	745782	IdentifierDeclType	int		745773	0					
ANR	745783	Identifier	val		745773	1					
ANR	745784	AssignmentExpression	val = 0		745773	2		=			
ANR	745785	Identifier	val		745773	0					
ANR	745786	PrimaryExpression	0		745773	1					
ANR	745787	ExpressionStatement	p = x -> s	341:2:8512:8520	745773	2	True				
ANR	745788	AssignmentExpression	p = x -> s		745773	0		=			
ANR	745789	Identifier	p		745773	0					
ANR	745790	PtrMemberAccess	x -> s		745773	1					
ANR	745791	Identifier	x		745773	0					
ANR	745792	Identifier	s		745773	1					
ANR	745793	WhileStatement	while ( p < x -> end )		745773	3					
ANR	745794	Condition	p < x -> end	342:9:8531:8540	745773	0	True				
ANR	745795	RelationalExpression	p < x -> end		745773	0		<			
ANR	745796	Identifier	p		745773	0					
ANR	745797	PtrMemberAccess	x -> end		745773	1					
ANR	745798	Identifier	x		745773	0					
ANR	745799	Identifier	end		745773	1					
ANR	745800	CompoundStatement		6:21:62:62	745773	1					
ANR	745801	ExpressionStatement	val = val * 997 + ( int ) * p ++	343:4:8549:8577	745773	0	True				
ANR	745802	AssignmentExpression	val = val * 997 + ( int ) * p ++		745773	0		=			
ANR	745803	Identifier	val		745773	0					
ANR	745804	AdditiveExpression	val * 997 + ( int ) * p ++		745773	1		+			
ANR	745805	MultiplicativeExpression	val * 997		745773	0		*			
ANR	745806	Identifier	val		745773	0					
ANR	745807	PrimaryExpression	997		745773	1					
ANR	745808	CastExpression	( int ) * p ++		745773	1					
ANR	745809	CastTarget	int		745773	0					
ANR	745810	UnaryOperationExpression	* p ++		745773	1					
ANR	745811	UnaryOperator	*		745773	0					
ANR	745812	PostIncDecOperationExpression	p ++		745773	1					
ANR	745813	Identifier	p		745773	0					
ANR	745814	IncDec	++		745773	1					
ANR	745815	ReturnStatement	return val + ( val >> 5 ) ;	346:2:8586:8609	745773	4	True				
ANR	745816	AdditiveExpression	val + ( val >> 5 )		745773	0		+			
ANR	745817	Identifier	val		745773	0					
ANR	745818	ShiftExpression	val >> 5		745773	1		>>			
ANR	745819	Identifier	val		745773	0					
ANR	745820	PrimaryExpression	5		745773	1					
ANR	745821	ReturnType	static int		745773	1					
ANR	745822	Identifier	str_end_hash		745773	2					
ANR	745823	ParameterList	st_str_end_key * x		745773	3					
ANR	745824	Parameter	st_str_end_key * x	336:13:8461:8477	745773	0	True				
ANR	745825	ParameterType	st_str_end_key *		745773	0					
ANR	745826	Identifier	x		745773	1					
ANR	745827	CFGEntryNode	ENTRY		745773		True				
ANR	745828	CFGExitNode	EXIT		745773		True				
ANR	745829	Symbol	p		745773						
ANR	745830	Symbol	val		745773						
ANR	745831	Symbol	x -> s		745773						
ANR	745832	Symbol	* x		745773						
ANR	745833	Symbol	* p ++		745773						
ANR	745834	Symbol	x		745773						
ANR	745835	Symbol	x -> end		745773						
ANR	745836	Function	onig_st_init_strend_table_with_size	349:0:8614:8856							
ANR	745837	FunctionDef	onig_st_init_strend_table_with_size (int size)		745836	0					
ANR	745838	CompoundStatement		351:0:8684:8856	745836	0					
ANR	745839	Statement	static	352:2:8688:8693	745836	0	True				
ANR	745840	Statement	struct	352:9:8695:8700	745836	1	True				
ANR	745841	Statement	st_hash_type	352:16:8702:8713	745836	2	True				
ANR	745842	Statement	hashType	352:29:8715:8722	745836	3	True				
ANR	745843	Statement	=	352:38:8724:8724	745836	4	True				
ANR	745844	CompoundStatement		2:40:41:41	745836	5					
ANR	745845	Statement	str_end_cmp	353:4:8732:8742	745836	0	True				
ANR	745846	Statement	","	353:15:8743:8743	745836	1	True				
ANR	745847	Statement	str_end_hash	354:4:8749:8760	745836	2	True				
ANR	745848	Statement	","	354:16:8761:8761	745836	3	True				
ANR	745849	ExpressionStatement		355:3:8766:8766	745836	6	True				
ANR	745850	ReturnStatement	"return ( hash_table_type * ) onig_st_init_table_with_size ( & hashType , size ) ;"	357:2:8771:8854	745836	7	True				
ANR	745851	CastExpression	"( hash_table_type * ) onig_st_init_table_with_size ( & hashType , size )"		745836	0					
ANR	745852	CastTarget	hash_table_type *		745836	0					
ANR	745853	CallExpression	"onig_st_init_table_with_size ( & hashType , size )"		745836	1					
ANR	745854	Callee	onig_st_init_table_with_size		745836	0					
ANR	745855	Identifier	onig_st_init_table_with_size		745836	0					
ANR	745856	ArgumentList	& hashType		745836	1					
ANR	745857	Argument	& hashType		745836	0					
ANR	745858	UnaryOperationExpression	& hashType		745836	0					
ANR	745859	UnaryOperator	&		745836	0					
ANR	745860	Identifier	hashType		745836	1					
ANR	745861	Argument	size		745836	1					
ANR	745862	Identifier	size		745836	0					
ANR	745863	ReturnType	extern hash_table_type *		745836	1					
ANR	745864	Identifier	onig_st_init_strend_table_with_size		745836	2					
ANR	745865	ParameterList	int size		745836	3					
ANR	745866	Parameter	int size	350:36:8674:8681	745836	0	True				
ANR	745867	ParameterType	int		745836	0					
ANR	745868	Identifier	size		745836	1					
ANR	745869	CFGEntryNode	ENTRY		745836		True				
ANR	745870	CFGExitNode	EXIT		745836		True				
ANR	745871	Symbol	size		745836						
ANR	745872	Symbol	& hashType		745836						
ANR	745873	Symbol	onig_st_init_table_with_size		745836						
ANR	745874	Function	onig_st_lookup_strend	361:0:8859:9136							
ANR	745875	FunctionDef	"onig_st_lookup_strend (hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type * value)"		745874	0					
ANR	745876	CompoundStatement		364:0:8991:9136	745874	0					
ANR	745877	IdentifierDeclStatement	st_str_end_key key ;	365:2:8995:9013	745874	0	True				
ANR	745878	IdentifierDecl	key		745874	0					
ANR	745879	IdentifierDeclType	st_str_end_key		745874	0					
ANR	745880	Identifier	key		745874	1					
ANR	745881	ExpressionStatement	key . s = ( UChar * ) str_key	367:2:9018:9044	745874	1	True				
ANR	745882	AssignmentExpression	key . s = ( UChar * ) str_key		745874	0		=			
ANR	745883	MemberAccess	key . s		745874	0					
ANR	745884	Identifier	key		745874	0					
ANR	745885	Identifier	s		745874	1					
ANR	745886	CastExpression	( UChar * ) str_key		745874	1					
ANR	745887	CastTarget	UChar *		745874	0					
ANR	745888	Identifier	str_key		745874	1					
ANR	745889	ExpressionStatement	key . end = ( UChar * ) end_key	368:2:9048:9074	745874	2	True				
ANR	745890	AssignmentExpression	key . end = ( UChar * ) end_key		745874	0		=			
ANR	745891	MemberAccess	key . end		745874	0					
ANR	745892	Identifier	key		745874	0					
ANR	745893	Identifier	end		745874	1					
ANR	745894	CastExpression	( UChar * ) end_key		745874	1					
ANR	745895	CastTarget	UChar *		745874	0					
ANR	745896	Identifier	end_key		745874	1					
ANR	745897	ReturnStatement	"return onig_st_lookup ( table , ( st_data_t ) ( & key ) , value ) ;"	370:2:9079:9134	745874	3	True				
ANR	745898	CallExpression	"onig_st_lookup ( table , ( st_data_t ) ( & key ) , value )"		745874	0					
ANR	745899	Callee	onig_st_lookup		745874	0					
ANR	745900	Identifier	onig_st_lookup		745874	0					
ANR	745901	ArgumentList	table		745874	1					
ANR	745902	Argument	table		745874	0					
ANR	745903	Identifier	table		745874	0					
ANR	745904	Argument	( st_data_t ) ( & key )		745874	1					
ANR	745905	CastExpression	( st_data_t ) ( & key )		745874	0					
ANR	745906	CastTarget	st_data_t		745874	0					
ANR	745907	UnaryOperationExpression	& key		745874	1					
ANR	745908	UnaryOperator	&		745874	0					
ANR	745909	Identifier	key		745874	1					
ANR	745910	Argument	value		745874	2					
ANR	745911	Identifier	value		745874	0					
ANR	745912	ReturnType	extern int		745874	1					
ANR	745913	Identifier	onig_st_lookup_strend		745874	2					
ANR	745914	ParameterList	"hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type * value"		745874	3					
ANR	745915	Parameter	hash_table_type * table	362:22:8892:8913	745874	0	True				
ANR	745916	ParameterType	hash_table_type *		745874	0					
ANR	745917	Identifier	table		745874	1					
ANR	745918	Parameter	const UChar * str_key	362:46:8916:8935	745874	1	True				
ANR	745919	ParameterType	const UChar *		745874	0					
ANR	745920	Identifier	str_key		745874	1					
ANR	745921	Parameter	const UChar * end_key	363:8:8946:8965	745874	2	True				
ANR	745922	ParameterType	const UChar *		745874	0					
ANR	745923	Identifier	end_key		745874	1					
ANR	745924	Parameter	hash_data_type * value	363:30:8968:8988	745874	3	True				
ANR	745925	ParameterType	hash_data_type *		745874	0					
ANR	745926	Identifier	value		745874	1					
ANR	745927	CFGEntryNode	ENTRY		745874		True				
ANR	745928	CFGExitNode	EXIT		745874		True				
ANR	745929	Symbol	& key		745874						
ANR	745930	Symbol	str_key		745874						
ANR	745931	Symbol	end_key		745874						
ANR	745932	Symbol	key . s		745874						
ANR	745933	Symbol	onig_st_lookup		745874						
ANR	745934	Symbol	value		745874						
ANR	745935	Symbol	table		745874						
ANR	745936	Symbol	key		745874						
ANR	745937	Symbol	key . end		745874						
ANR	745938	Function	onig_st_insert_strend	373:0:9139:9542							
ANR	745939	FunctionDef	"onig_st_insert_strend (hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type value)"		745938	0					
ANR	745940	CompoundStatement		376:0:9270:9542	745938	0					
ANR	745941	IdentifierDeclStatement	st_str_end_key * key ;	377:2:9274:9293	745938	0	True				
ANR	745942	IdentifierDecl	* key		745938	0					
ANR	745943	IdentifierDeclType	st_str_end_key *		745938	0					
ANR	745944	Identifier	key		745938	1					
ANR	745945	IdentifierDeclStatement	int result ;	378:2:9297:9307	745938	1	True				
ANR	745946	IdentifierDecl	result		745938	0					
ANR	745947	IdentifierDeclType	int		745938	0					
ANR	745948	Identifier	result		745938	1					
ANR	745949	ExpressionStatement	key = ( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )	380:2:9312:9367	745938	2	True				
ANR	745950	AssignmentExpression	key = ( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )		745938	0		=			
ANR	745951	Identifier	key		745938	0					
ANR	745952	CastExpression	( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )		745938	1					
ANR	745953	CastTarget	st_str_end_key *		745938	0					
ANR	745954	CallExpression	xmalloc ( sizeof ( st_str_end_key ) )		745938	1					
ANR	745955	Callee	xmalloc		745938	0					
ANR	745956	Identifier	xmalloc		745938	0					
ANR	745957	ArgumentList	sizeof ( st_str_end_key )		745938	1					
ANR	745958	Argument	sizeof ( st_str_end_key )		745938	0					
ANR	745959	SizeofExpression	sizeof ( st_str_end_key )		745938	0					
ANR	745960	Sizeof	sizeof		745938	0					
ANR	745961	SizeofOperand	st_str_end_key		745938	1					
ANR	745962	ExpressionStatement	key -> s = ( UChar * ) str_key	381:2:9371:9398	745938	3	True				
ANR	745963	AssignmentExpression	key -> s = ( UChar * ) str_key		745938	0		=			
ANR	745964	PtrMemberAccess	key -> s		745938	0					
ANR	745965	Identifier	key		745938	0					
ANR	745966	Identifier	s		745938	1					
ANR	745967	CastExpression	( UChar * ) str_key		745938	1					
ANR	745968	CastTarget	UChar *		745938	0					
ANR	745969	Identifier	str_key		745938	1					
ANR	745970	ExpressionStatement	key -> end = ( UChar * ) end_key	382:2:9402:9429	745938	4	True				
ANR	745971	AssignmentExpression	key -> end = ( UChar * ) end_key		745938	0		=			
ANR	745972	PtrMemberAccess	key -> end		745938	0					
ANR	745973	Identifier	key		745938	0					
ANR	745974	Identifier	end		745938	1					
ANR	745975	CastExpression	( UChar * ) end_key		745938	1					
ANR	745976	CastTarget	UChar *		745938	0					
ANR	745977	Identifier	end_key		745938	1					
ANR	745978	ExpressionStatement	"result = onig_st_insert ( table , ( st_data_t ) key , value )"	383:2:9433:9487	745938	5	True				
ANR	745979	AssignmentExpression	"result = onig_st_insert ( table , ( st_data_t ) key , value )"		745938	0		=			
ANR	745980	Identifier	result		745938	0					
ANR	745981	CallExpression	"onig_st_insert ( table , ( st_data_t ) key , value )"		745938	1					
ANR	745982	Callee	onig_st_insert		745938	0					
ANR	745983	Identifier	onig_st_insert		745938	0					
ANR	745984	ArgumentList	table		745938	1					
ANR	745985	Argument	table		745938	0					
ANR	745986	Identifier	table		745938	0					
ANR	745987	Argument	( st_data_t ) key		745938	1					
ANR	745988	CastExpression	( st_data_t ) key		745938	0					
ANR	745989	CastTarget	st_data_t		745938	0					
ANR	745990	Identifier	key		745938	1					
ANR	745991	Argument	value		745938	2					
ANR	745992	Identifier	value		745938	0					
ANR	745993	IfStatement	if ( result )		745938	6					
ANR	745994	Condition	result	384:6:9495:9500	745938	0	True				
ANR	745995	Identifier	result		745938	0					
ANR	745996	CompoundStatement		9:14:232:232	745938	1					
ANR	745997	ExpressionStatement	xfree ( key )	385:4:9509:9519	745938	0	True				
ANR	745998	CallExpression	xfree ( key )		745938	0					
ANR	745999	Callee	xfree		745938	0					
ANR	746000	Identifier	xfree		745938	0					
ANR	746001	ArgumentList	key		745938	1					
ANR	746002	Argument	key		745938	0					
ANR	746003	Identifier	key		745938	0					
ANR	746004	ReturnStatement	return result ;	387:2:9527:9540	745938	7	True				
ANR	746005	Identifier	result		745938	0					
ANR	746006	ReturnType	extern int		745938	1					
ANR	746007	Identifier	onig_st_insert_strend		745938	2					
ANR	746008	ParameterList	"hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type value"		745938	3					
ANR	746009	Parameter	hash_table_type * table	374:22:9172:9193	745938	0	True				
ANR	746010	ParameterType	hash_table_type *		745938	0					
ANR	746011	Identifier	table		745938	1					
ANR	746012	Parameter	const UChar * str_key	374:46:9196:9215	745938	1	True				
ANR	746013	ParameterType	const UChar *		745938	0					
ANR	746014	Identifier	str_key		745938	1					
ANR	746015	Parameter	const UChar * end_key	375:8:9226:9245	745938	2	True				
ANR	746016	ParameterType	const UChar *		745938	0					
ANR	746017	Identifier	end_key		745938	1					
ANR	746018	Parameter	hash_data_type value	375:30:9248:9267	745938	3	True				
ANR	746019	ParameterType	hash_data_type		745938	0					
ANR	746020	Identifier	value		745938	1					
ANR	746021	CFGEntryNode	ENTRY		745938		True				
ANR	746022	CFGExitNode	EXIT		745938		True				
ANR	746023	Symbol	result		745938						
ANR	746024	Symbol	key -> s		745938						
ANR	746025	Symbol	str_key		745938						
ANR	746026	Symbol	end_key		745938						
ANR	746027	Symbol	xmalloc		745938						
ANR	746028	Symbol	key -> end		745938						
ANR	746029	Symbol	* key		745938						
ANR	746030	Symbol	onig_st_insert		745938						
ANR	746031	Symbol	value		745938						
ANR	746032	Symbol	table		745938						
ANR	746033	Symbol	key		745938						
ANR	746034	ClassDef	<unnamed>	397:8:9649:9830							
ANR	746035	DeclStmt									
ANR	746036	Decl							UChar	UChar *	name
ANR	746037	DeclStmt									
ANR	746038	Decl							int	int	name_len
ANR	746039	DeclStmt									
ANR	746040	Decl							int	int	back_num
ANR	746041	DeclStmt									
ANR	746042	Decl							int	int	back_alloc
ANR	746043	DeclStmt									
ANR	746044	Decl							int	int	back_ref1
ANR	746045	DeclStmt									
ANR	746046	Decl							int	int *	back_refs
ANR	746047	DeclStmt									
ANR	746048	Decl									NameEntry
ANR	746049	DeclStmt									
ANR	746050	Decl							st_table	st_table	NameTable
ANR	746051	DeclStmt									
ANR	746052	Decl							st_data_t	st_data_t	HashDataType
ANR	746053	Function	i_print_name_entry	415:0:10038:10463							
ANR	746054	FunctionDef	"i_print_name_entry (UChar * key , NameEntry * e , void * arg)"		746053	0					
ANR	746055	CompoundStatement		417:0:10105:10463	746053	0					
ANR	746056	IdentifierDeclStatement	int i ;	418:2:10109:10114	746053	0	True				
ANR	746057	IdentifierDecl	i		746053	0					
ANR	746058	IdentifierDeclType	int		746053	0					
ANR	746059	Identifier	i		746053	1					
ANR	746060	IdentifierDeclStatement	FILE * fp = ( FILE * ) arg ;	419:2:10118:10140	746053	1	True				
ANR	746061	IdentifierDecl	* fp = ( FILE * ) arg		746053	0					
ANR	746062	IdentifierDeclType	FILE *		746053	0					
ANR	746063	Identifier	fp		746053	1					
ANR	746064	AssignmentExpression	* fp = ( FILE * ) arg		746053	2		=			
ANR	746065	Identifier	fp		746053	0					
ANR	746066	CastExpression	( FILE * ) arg		746053	1					
ANR	746067	CastTarget	FILE *		746053	0					
ANR	746068	Identifier	arg		746053	1					
ANR	746069	ExpressionStatement	"fprintf ( fp , ""%s: "" , e -> name )"	421:2:10145:10173	746053	2	True				
ANR	746070	CallExpression	"fprintf ( fp , ""%s: "" , e -> name )"		746053	0					
ANR	746071	Callee	fprintf		746053	0					
ANR	746072	Identifier	fprintf		746053	0					
ANR	746073	ArgumentList	fp		746053	1					
ANR	746074	Argument	fp		746053	0					
ANR	746075	Identifier	fp		746053	0					
ANR	746076	Argument	"""%s: """		746053	1					
ANR	746077	PrimaryExpression	"""%s: """		746053	0					
ANR	746078	Argument	e -> name		746053	2					
ANR	746079	PtrMemberAccess	e -> name		746053	0					
ANR	746080	Identifier	e		746053	0					
ANR	746081	Identifier	name		746053	1					
ANR	746082	IfStatement	if ( e -> back_num == 0 )		746053	3					
ANR	746083	Condition	e -> back_num == 0	422:6:10181:10196	746053	0	True				
ANR	746084	EqualityExpression	e -> back_num == 0		746053	0		==			
ANR	746085	PtrMemberAccess	e -> back_num		746053	0					
ANR	746086	Identifier	e		746053	0					
ANR	746087	Identifier	back_num		746053	1					
ANR	746088	PrimaryExpression	0		746053	1					
ANR	746089	ExpressionStatement	"fputs ( ""-"" , fp )"	423:4:10203:10217	746053	1	True				
ANR	746090	CallExpression	"fputs ( ""-"" , fp )"		746053	0					
ANR	746091	Callee	fputs		746053	0					
ANR	746092	Identifier	fputs		746053	0					
ANR	746093	ArgumentList	"""-"""		746053	1					
ANR	746094	Argument	"""-"""		746053	0					
ANR	746095	PrimaryExpression	"""-"""		746053	0					
ANR	746096	Argument	fp		746053	1					
ANR	746097	Identifier	fp		746053	0					
ANR	746098	ElseStatement	else		746053	0					
ANR	746099	IfStatement	if ( e -> back_num == 1 )		746053	0					
ANR	746100	Condition	e -> back_num == 1	424:11:10230:10245	746053	0	True				
ANR	746101	EqualityExpression	e -> back_num == 1		746053	0		==			
ANR	746102	PtrMemberAccess	e -> back_num		746053	0					
ANR	746103	Identifier	e		746053	0					
ANR	746104	Identifier	back_num		746053	1					
ANR	746105	PrimaryExpression	1		746053	1					
ANR	746106	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_ref1 )"	425:4:10252:10283	746053	1	True				
ANR	746107	CallExpression	"fprintf ( fp , ""%d"" , e -> back_ref1 )"		746053	0					
ANR	746108	Callee	fprintf		746053	0					
ANR	746109	Identifier	fprintf		746053	0					
ANR	746110	ArgumentList	fp		746053	1					
ANR	746111	Argument	fp		746053	0					
ANR	746112	Identifier	fp		746053	0					
ANR	746113	Argument	"""%d"""		746053	1					
ANR	746114	PrimaryExpression	"""%d"""		746053	0					
ANR	746115	Argument	e -> back_ref1		746053	2					
ANR	746116	PtrMemberAccess	e -> back_ref1		746053	0					
ANR	746117	Identifier	e		746053	0					
ANR	746118	Identifier	back_ref1		746053	1					
ANR	746119	ElseStatement	else		746053	0					
ANR	746120	CompoundStatement		10:7:186:186	746053	0					
ANR	746121	ForStatement	for ( i = 0 ; i < e -> back_num ; i ++ )		746053	0					
ANR	746122	ForInit	i = 0 ;	427:9:10303:10308	746053	0	True				
ANR	746123	AssignmentExpression	i = 0		746053	0		=			
ANR	746124	Identifier	i		746053	0					
ANR	746125	PrimaryExpression	0		746053	1					
ANR	746126	Condition	i < e -> back_num	427:16:10310:10324	746053	1	True				
ANR	746127	RelationalExpression	i < e -> back_num		746053	0		<			
ANR	746128	Identifier	i		746053	0					
ANR	746129	PtrMemberAccess	e -> back_num		746053	1					
ANR	746130	Identifier	e		746053	0					
ANR	746131	Identifier	back_num		746053	1					
ANR	746132	PostIncDecOperationExpression	i ++	427:33:10327:10329	746053	2	True				
ANR	746133	Identifier	i		746053	0					
ANR	746134	IncDec	++		746053	1					
ANR	746135	CompoundStatement		11:38:226:226	746053	3					
ANR	746136	IfStatement	if ( i > 0 )		746053	0					
ANR	746137	Condition	i > 0	428:10:10344:10348	746053	0	True				
ANR	746138	RelationalExpression	i > 0		746053	0		>			
ANR	746139	Identifier	i		746053	0					
ANR	746140	PrimaryExpression	0		746053	1					
ANR	746141	ExpressionStatement	"fprintf ( fp , "", "" )"	428:17:10351:10368	746053	1	True				
ANR	746142	CallExpression	"fprintf ( fp , "", "" )"		746053	0					
ANR	746143	Callee	fprintf		746053	0					
ANR	746144	Identifier	fprintf		746053	0					
ANR	746145	ArgumentList	fp		746053	1					
ANR	746146	Argument	fp		746053	0					
ANR	746147	Identifier	fp		746053	0					
ANR	746148	Argument	""", """		746053	1					
ANR	746149	PrimaryExpression	""", """		746053	0					
ANR	746150	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_refs [ i ] )"	429:6:10376:10410	746053	1	True				
ANR	746151	CallExpression	"fprintf ( fp , ""%d"" , e -> back_refs [ i ] )"		746053	0					
ANR	746152	Callee	fprintf		746053	0					
ANR	746153	Identifier	fprintf		746053	0					
ANR	746154	ArgumentList	fp		746053	1					
ANR	746155	Argument	fp		746053	0					
ANR	746156	Identifier	fp		746053	0					
ANR	746157	Argument	"""%d"""		746053	1					
ANR	746158	PrimaryExpression	"""%d"""		746053	0					
ANR	746159	Argument	e -> back_refs [ i ]		746053	2					
ANR	746160	ArrayIndexing	e -> back_refs [ i ]		746053	0					
ANR	746161	PtrMemberAccess	e -> back_refs		746053	0					
ANR	746162	Identifier	e		746053	0					
ANR	746163	Identifier	back_refs		746053	1					
ANR	746164	Identifier	i		746053	1					
ANR	746165	ExpressionStatement	"fputs ( ""\\n"" , fp )"	432:2:10424:10439	746053	4	True				
ANR	746166	CallExpression	"fputs ( ""\\n"" , fp )"		746053	0					
ANR	746167	Callee	fputs		746053	0					
ANR	746168	Identifier	fputs		746053	0					
ANR	746169	ArgumentList	"""\\n"""		746053	1					
ANR	746170	Argument	"""\\n"""		746053	0					
ANR	746171	PrimaryExpression	"""\\n"""		746053	0					
ANR	746172	Argument	fp		746053	1					
ANR	746173	Identifier	fp		746053	0					
ANR	746174	ReturnStatement	return ST_CONTINUE ;	433:2:10443:10461	746053	5	True				
ANR	746175	Identifier	ST_CONTINUE		746053	0					
ANR	746176	ReturnType	static int		746053	1					
ANR	746177	Identifier	i_print_name_entry		746053	2					
ANR	746178	ParameterList	"UChar * key , NameEntry * e , void * arg"		746053	3					
ANR	746179	Parameter	UChar * key	416:19:10068:10077	746053	0	True				
ANR	746180	ParameterType	UChar *		746053	0					
ANR	746181	Identifier	key		746053	1					
ANR	746182	Parameter	NameEntry * e	416:31:10080:10091	746053	1	True				
ANR	746183	ParameterType	NameEntry *		746053	0					
ANR	746184	Identifier	e		746053	1					
ANR	746185	Parameter	void * arg	416:45:10094:10102	746053	2	True				
ANR	746186	ParameterType	void *		746053	0					
ANR	746187	Identifier	arg		746053	1					
ANR	746188	CFGEntryNode	ENTRY		746053		True				
ANR	746189	CFGExitNode	EXIT		746053		True				
ANR	746190	Symbol	e -> back_ref1		746053						
ANR	746191	Symbol	e -> back_num		746053						
ANR	746192	Symbol	e -> back_refs		746053						
ANR	746193	Symbol	e		746053						
ANR	746194	Symbol	* e -> back_refs		746053						
ANR	746195	Symbol	* * e		746053						
ANR	746196	Symbol	i		746053						
ANR	746197	Symbol	fp		746053						
ANR	746198	Symbol	* e		746053						
ANR	746199	Symbol	* i		746053						
ANR	746200	Symbol	arg		746053						
ANR	746201	Symbol	key		746053						
ANR	746202	Symbol	ST_CONTINUE		746053						
ANR	746203	Symbol	e -> name		746053						
ANR	746204	Function	onig_print_names	436:0:10466:10725							
ANR	746205	FunctionDef	"onig_print_names (FILE * fp , regex_t * reg)"		746204	0					
ANR	746206	CompoundStatement		438:0:10518:10725	746204	0					
ANR	746207	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	439:2:10522:10565	746204	0	True				
ANR	746208	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746204	0					
ANR	746209	IdentifierDeclType	NameTable *		746204	0					
ANR	746210	Identifier	t		746204	1					
ANR	746211	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746204	2		=			
ANR	746212	Identifier	t		746204	0					
ANR	746213	CastExpression	( NameTable * ) reg -> name_table		746204	1					
ANR	746214	CastTarget	NameTable *		746204	0					
ANR	746215	PtrMemberAccess	reg -> name_table		746204	1					
ANR	746216	Identifier	reg		746204	0					
ANR	746217	Identifier	name_table		746204	1					
ANR	746218	IfStatement	if ( IS_NOT_NULL ( t ) )		746204	1					
ANR	746219	Condition	IS_NOT_NULL ( t )	441:6:10574:10587	746204	0	True				
ANR	746220	CallExpression	IS_NOT_NULL ( t )		746204	0					
ANR	746221	Callee	IS_NOT_NULL		746204	0					
ANR	746222	Identifier	IS_NOT_NULL		746204	0					
ANR	746223	ArgumentList	t		746204	1					
ANR	746224	Argument	t		746204	0					
ANR	746225	Identifier	t		746204	0					
ANR	746226	CompoundStatement		4:22:71:71	746204	1					
ANR	746227	ExpressionStatement	"fprintf ( fp , ""name table\\n"" )"	442:4:10596:10623	746204	0	True				
ANR	746228	CallExpression	"fprintf ( fp , ""name table\\n"" )"		746204	0					
ANR	746229	Callee	fprintf		746204	0					
ANR	746230	Identifier	fprintf		746204	0					
ANR	746231	ArgumentList	fp		746204	1					
ANR	746232	Argument	fp		746204	0					
ANR	746233	Identifier	fp		746204	0					
ANR	746234	Argument	"""name table\\n"""		746204	1					
ANR	746235	PrimaryExpression	"""name table\\n"""		746204	0					
ANR	746236	ExpressionStatement	"onig_st_foreach ( t , i_print_name_entry , ( HashDataType ) fp )"	443:4:10629:10686	746204	1	True				
ANR	746237	CallExpression	"onig_st_foreach ( t , i_print_name_entry , ( HashDataType ) fp )"		746204	0					
ANR	746238	Callee	onig_st_foreach		746204	0					
ANR	746239	Identifier	onig_st_foreach		746204	0					
ANR	746240	ArgumentList	t		746204	1					
ANR	746241	Argument	t		746204	0					
ANR	746242	Identifier	t		746204	0					
ANR	746243	Argument	i_print_name_entry		746204	1					
ANR	746244	Identifier	i_print_name_entry		746204	0					
ANR	746245	Argument	( HashDataType ) fp		746204	2					
ANR	746246	CastExpression	( HashDataType ) fp		746204	0					
ANR	746247	CastTarget	HashDataType		746204	0					
ANR	746248	Identifier	fp		746204	1					
ANR	746249	ExpressionStatement	"fputs ( ""\\n"" , fp )"	444:4:10692:10707	746204	2	True				
ANR	746250	CallExpression	"fputs ( ""\\n"" , fp )"		746204	0					
ANR	746251	Callee	fputs		746204	0					
ANR	746252	Identifier	fputs		746204	0					
ANR	746253	ArgumentList	"""\\n"""		746204	1					
ANR	746254	Argument	"""\\n"""		746204	0					
ANR	746255	PrimaryExpression	"""\\n"""		746204	0					
ANR	746256	Argument	fp		746204	1					
ANR	746257	Identifier	fp		746204	0					
ANR	746258	ReturnStatement	return 0 ;	446:2:10715:10723	746204	2	True				
ANR	746259	PrimaryExpression	0		746204	0					
ANR	746260	ReturnType	extern int		746204	1					
ANR	746261	Identifier	onig_print_names		746204	2					
ANR	746262	ParameterList	"FILE * fp , regex_t * reg"		746204	3					
ANR	746263	Parameter	FILE * fp	437:17:10494:10501	746204	0	True				
ANR	746264	ParameterType	FILE *		746204	0					
ANR	746265	Identifier	fp		746204	1					
ANR	746266	Parameter	regex_t * reg	437:27:10504:10515	746204	1	True				
ANR	746267	ParameterType	regex_t *		746204	0					
ANR	746268	Identifier	reg		746204	1					
ANR	746269	CFGEntryNode	ENTRY		746204		True				
ANR	746270	CFGExitNode	EXIT		746204		True				
ANR	746271	Symbol	IS_NOT_NULL		746204						
ANR	746272	Symbol	t		746204						
ANR	746273	Symbol	reg		746204						
ANR	746274	Symbol	reg -> name_table		746204						
ANR	746275	Symbol	fp		746204						
ANR	746276	Symbol	* reg		746204						
ANR	746277	Symbol	i_print_name_entry		746204						
ANR	746278	Function	names_clear	460:0:10952:11125							
ANR	746279	FunctionDef	names_clear (regex_t * reg)		746278	0					
ANR	746280	CompoundStatement		462:0:10989:11125	746278	0					
ANR	746281	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	463:2:10993:11036	746278	0	True				
ANR	746282	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746278	0					
ANR	746283	IdentifierDeclType	NameTable *		746278	0					
ANR	746284	Identifier	t		746278	1					
ANR	746285	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746278	2		=			
ANR	746286	Identifier	t		746278	0					
ANR	746287	CastExpression	( NameTable * ) reg -> name_table		746278	1					
ANR	746288	CastTarget	NameTable *		746278	0					
ANR	746289	PtrMemberAccess	reg -> name_table		746278	1					
ANR	746290	Identifier	reg		746278	0					
ANR	746291	Identifier	name_table		746278	1					
ANR	746292	IfStatement	if ( IS_NOT_NULL ( t ) )		746278	1					
ANR	746293	Condition	IS_NOT_NULL ( t )	465:6:11045:11058	746278	0	True				
ANR	746294	CallExpression	IS_NOT_NULL ( t )		746278	0					
ANR	746295	Callee	IS_NOT_NULL		746278	0					
ANR	746296	Identifier	IS_NOT_NULL		746278	0					
ANR	746297	ArgumentList	t		746278	1					
ANR	746298	Argument	t		746278	0					
ANR	746299	Identifier	t		746278	0					
ANR	746300	CompoundStatement		4:22:71:71	746278	1					
ANR	746301	ExpressionStatement	"onig_st_foreach ( t , i_free_name_entry , 0 )"	466:4:11067:11107	746278	0	True				
ANR	746302	CallExpression	"onig_st_foreach ( t , i_free_name_entry , 0 )"		746278	0					
ANR	746303	Callee	onig_st_foreach		746278	0					
ANR	746304	Identifier	onig_st_foreach		746278	0					
ANR	746305	ArgumentList	t		746278	1					
ANR	746306	Argument	t		746278	0					
ANR	746307	Identifier	t		746278	0					
ANR	746308	Argument	i_free_name_entry		746278	1					
ANR	746309	Identifier	i_free_name_entry		746278	0					
ANR	746310	Argument	0		746278	2					
ANR	746311	PrimaryExpression	0		746278	0					
ANR	746312	ReturnStatement	return 0 ;	468:2:11115:11123	746278	2	True				
ANR	746313	PrimaryExpression	0		746278	0					
ANR	746314	ReturnType	static int		746278	1					
ANR	746315	Identifier	names_clear		746278	2					
ANR	746316	ParameterList	regex_t * reg		746278	3					
ANR	746317	Parameter	regex_t * reg	461:12:10975:10986	746278	0	True				
ANR	746318	ParameterType	regex_t *		746278	0					
ANR	746319	Identifier	reg		746278	1					
ANR	746320	CFGEntryNode	ENTRY		746278		True				
ANR	746321	CFGExitNode	EXIT		746278		True				
ANR	746322	Symbol	IS_NOT_NULL		746278						
ANR	746323	Symbol	t		746278						
ANR	746324	Symbol	reg		746278						
ANR	746325	Symbol	reg -> name_table		746278						
ANR	746326	Symbol	* reg		746278						
ANR	746327	Symbol	i_free_name_entry		746278						
ANR	746328	Function	onig_names_free	471:0:11128:11368							
ANR	746329	FunctionDef	onig_names_free (regex_t * reg)		746328	0					
ANR	746330	CompoundStatement		473:0:11169:11368	746328	0					
ANR	746331	IdentifierDeclStatement	int r ;	474:2:11173:11178	746328	0	True				
ANR	746332	IdentifierDecl	r		746328	0					
ANR	746333	IdentifierDeclType	int		746328	0					
ANR	746334	Identifier	r		746328	1					
ANR	746335	IdentifierDeclStatement	NameTable * t ;	475:2:11182:11194	746328	1	True				
ANR	746336	IdentifierDecl	* t		746328	0					
ANR	746337	IdentifierDeclType	NameTable *		746328	0					
ANR	746338	Identifier	t		746328	1					
ANR	746339	ExpressionStatement	r = names_clear ( reg )	477:2:11199:11219	746328	2	True				
ANR	746340	AssignmentExpression	r = names_clear ( reg )		746328	0		=			
ANR	746341	Identifier	r		746328	0					
ANR	746342	CallExpression	names_clear ( reg )		746328	1					
ANR	746343	Callee	names_clear		746328	0					
ANR	746344	Identifier	names_clear		746328	0					
ANR	746345	ArgumentList	reg		746328	1					
ANR	746346	Argument	reg		746328	0					
ANR	746347	Identifier	reg		746328	0					
ANR	746348	IfStatement	if ( r )		746328	3					
ANR	746349	Condition	r	478:6:11227:11227	746328	0	True				
ANR	746350	Identifier	r		746328	0					
ANR	746351	ReturnStatement	return r ;	478:9:11230:11238	746328	1	True				
ANR	746352	Identifier	r		746328	0					
ANR	746353	ExpressionStatement	t = ( NameTable * ) reg -> name_table	480:2:11243:11275	746328	4	True				
ANR	746354	AssignmentExpression	t = ( NameTable * ) reg -> name_table		746328	0		=			
ANR	746355	Identifier	t		746328	0					
ANR	746356	CastExpression	( NameTable * ) reg -> name_table		746328	1					
ANR	746357	CastTarget	NameTable *		746328	0					
ANR	746358	PtrMemberAccess	reg -> name_table		746328	1					
ANR	746359	Identifier	reg		746328	0					
ANR	746360	Identifier	name_table		746328	1					
ANR	746361	IfStatement	if ( IS_NOT_NULL ( t ) )		746328	5					
ANR	746362	Condition	IS_NOT_NULL ( t )	481:6:11283:11296	746328	0	True				
ANR	746363	CallExpression	IS_NOT_NULL ( t )		746328	0					
ANR	746364	Callee	IS_NOT_NULL		746328	0					
ANR	746365	Identifier	IS_NOT_NULL		746328	0					
ANR	746366	ArgumentList	t		746328	1					
ANR	746367	Argument	t		746328	0					
ANR	746368	Identifier	t		746328	0					
ANR	746369	ExpressionStatement	onig_st_free_table ( t )	481:22:11299:11320	746328	1	True				
ANR	746370	CallExpression	onig_st_free_table ( t )		746328	0					
ANR	746371	Callee	onig_st_free_table		746328	0					
ANR	746372	Identifier	onig_st_free_table		746328	0					
ANR	746373	ArgumentList	t		746328	1					
ANR	746374	Argument	t		746328	0					
ANR	746375	Identifier	t		746328	0					
ANR	746376	ExpressionStatement	reg -> name_table = ( void * ) NULL	482:2:11324:11354	746328	6	True				
ANR	746377	AssignmentExpression	reg -> name_table = ( void * ) NULL		746328	0		=			
ANR	746378	PtrMemberAccess	reg -> name_table		746328	0					
ANR	746379	Identifier	reg		746328	0					
ANR	746380	Identifier	name_table		746328	1					
ANR	746381	CastExpression	( void * ) NULL		746328	1					
ANR	746382	CastTarget	void *		746328	0					
ANR	746383	Identifier	NULL		746328	1					
ANR	746384	ReturnStatement	return 0 ;	483:2:11358:11366	746328	7	True				
ANR	746385	PrimaryExpression	0		746328	0					
ANR	746386	ReturnType	extern int		746328	1					
ANR	746387	Identifier	onig_names_free		746328	2					
ANR	746388	ParameterList	regex_t * reg		746328	3					
ANR	746389	Parameter	regex_t * reg	472:16:11155:11166	746328	0	True				
ANR	746390	ParameterType	regex_t *		746328	0					
ANR	746391	Identifier	reg		746328	1					
ANR	746392	CFGEntryNode	ENTRY		746328		True				
ANR	746393	CFGExitNode	EXIT		746328		True				
ANR	746394	Symbol	r		746328						
ANR	746395	Symbol	IS_NOT_NULL		746328						
ANR	746396	Symbol	NULL		746328						
ANR	746397	Symbol	t		746328						
ANR	746398	Symbol	reg		746328						
ANR	746399	Symbol	names_clear		746328						
ANR	746400	Symbol	reg -> name_table		746328						
ANR	746401	Symbol	* reg		746328						
ANR	746402	Function	name_find	486:0:11371:11664							
ANR	746403	FunctionDef	"name_find (regex_t * reg , const UChar * name , const UChar * name_end)"		746402	0					
ANR	746404	CompoundStatement		488:0:11455:11664	746402	0					
ANR	746405	IdentifierDeclStatement	NameEntry * e ;	489:2:11459:11471	746402	0	True				
ANR	746406	IdentifierDecl	* e		746402	0					
ANR	746407	IdentifierDeclType	NameEntry *		746402	0					
ANR	746408	Identifier	e		746402	1					
ANR	746409	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	490:2:11475:11518	746402	1	True				
ANR	746410	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746402	0					
ANR	746411	IdentifierDeclType	NameTable *		746402	0					
ANR	746412	Identifier	t		746402	1					
ANR	746413	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746402	2		=			
ANR	746414	Identifier	t		746402	0					
ANR	746415	CastExpression	( NameTable * ) reg -> name_table		746402	1					
ANR	746416	CastTarget	NameTable *		746402	0					
ANR	746417	PtrMemberAccess	reg -> name_table		746402	1					
ANR	746418	Identifier	reg		746402	0					
ANR	746419	Identifier	name_table		746402	1					
ANR	746420	ExpressionStatement	e = ( NameEntry * ) NULL	492:2:11523:11544	746402	2	True				
ANR	746421	AssignmentExpression	e = ( NameEntry * ) NULL		746402	0		=			
ANR	746422	Identifier	e		746402	0					
ANR	746423	CastExpression	( NameEntry * ) NULL		746402	1					
ANR	746424	CastTarget	NameEntry *		746402	0					
ANR	746425	Identifier	NULL		746402	1					
ANR	746426	IfStatement	if ( IS_NOT_NULL ( t ) )		746402	3					
ANR	746427	Condition	IS_NOT_NULL ( t )	493:6:11552:11565	746402	0	True				
ANR	746428	CallExpression	IS_NOT_NULL ( t )		746402	0					
ANR	746429	Callee	IS_NOT_NULL		746402	0					
ANR	746430	Identifier	IS_NOT_NULL		746402	0					
ANR	746431	ArgumentList	t		746402	1					
ANR	746432	Argument	t		746402	0					
ANR	746433	Identifier	t		746402	0					
ANR	746434	CompoundStatement		6:22:112:112	746402	1					
ANR	746435	ExpressionStatement	"onig_st_lookup_strend ( t , name , name_end , ( HashDataType * ) ( ( void * ) ( & e ) ) )"	494:4:11574:11646	746402	0	True				
ANR	746436	CallExpression	"onig_st_lookup_strend ( t , name , name_end , ( HashDataType * ) ( ( void * ) ( & e ) ) )"		746402	0					
ANR	746437	Callee	onig_st_lookup_strend		746402	0					
ANR	746438	Identifier	onig_st_lookup_strend		746402	0					
ANR	746439	ArgumentList	t		746402	1					
ANR	746440	Argument	t		746402	0					
ANR	746441	Identifier	t		746402	0					
ANR	746442	Argument	name		746402	1					
ANR	746443	Identifier	name		746402	0					
ANR	746444	Argument	name_end		746402	2					
ANR	746445	Identifier	name_end		746402	0					
ANR	746446	Argument	( HashDataType * ) ( ( void * ) ( & e ) )		746402	3					
ANR	746447	CastExpression	( HashDataType * ) ( ( void * ) ( & e ) )		746402	0					
ANR	746448	CastTarget	HashDataType *		746402	0					
ANR	746449	CastExpression	( void * ) ( & e )		746402	1					
ANR	746450	CastTarget	void *		746402	0					
ANR	746451	UnaryOperationExpression	& e		746402	1					
ANR	746452	UnaryOperator	&		746402	0					
ANR	746453	Identifier	e		746402	1					
ANR	746454	ReturnStatement	return e ;	496:2:11654:11662	746402	4	True				
ANR	746455	Identifier	e		746402	0					
ANR	746456	ReturnType	static NameEntry *		746402	1					
ANR	746457	Identifier	name_find		746402	2					
ANR	746458	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end"		746402	3					
ANR	746459	Parameter	regex_t * reg	487:10:11399:11410	746402	0	True				
ANR	746460	ParameterType	regex_t *		746402	0					
ANR	746461	Identifier	reg		746402	1					
ANR	746462	Parameter	const UChar * name	487:24:11413:11429	746402	1	True				
ANR	746463	ParameterType	const UChar *		746402	0					
ANR	746464	Identifier	name		746402	1					
ANR	746465	Parameter	const UChar * name_end	487:43:11432:11452	746402	2	True				
ANR	746466	ParameterType	const UChar *		746402	0					
ANR	746467	Identifier	name_end		746402	1					
ANR	746468	CFGEntryNode	ENTRY		746402		True				
ANR	746469	CFGExitNode	EXIT		746402		True				
ANR	746470	Symbol	IS_NOT_NULL		746402						
ANR	746471	Symbol	NULL		746402						
ANR	746472	Symbol	t		746402						
ANR	746473	Symbol	reg		746402						
ANR	746474	Symbol	e		746402						
ANR	746475	Symbol	name		746402						
ANR	746476	Symbol	reg -> name_table		746402						
ANR	746477	Symbol	& e		746402						
ANR	746478	Symbol	name_end		746402						
ANR	746479	Symbol	* reg		746402						
ANR	746480	ClassDef	<unnamed>	499:8:11675:11822							
ANR	746481	DeclStmt									
ANR	746482	Decl							"int ( * ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	"int ( * ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	func
ANR	746483	DeclStmt									
ANR	746484	Decl							regex_t	regex_t *	reg
ANR	746485	DeclStmt									
ANR	746486	Decl							void	void *	arg
ANR	746487	DeclStmt									
ANR	746488	Decl							int	int	ret
ANR	746489	DeclStmt									
ANR	746490	Decl							OnigEncoding	OnigEncoding	enc
ANR	746491	DeclStmt									
ANR	746492	Decl									INamesArg
ANR	746493	DeclStmt									
ANR	746494	Decl							int	int	r
ANR	746495	Function	onig_foreach_name	522:0:12183:12614							
ANR	746496	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		746495	0					
ANR	746497	CompoundStatement		525:0:12304:12614	746495	0					
ANR	746498	IdentifierDeclStatement	INamesArg narg ;	526:2:12308:12322	746495	0	True				
ANR	746499	IdentifierDecl	narg		746495	0					
ANR	746500	IdentifierDeclType	INamesArg		746495	0					
ANR	746501	Identifier	narg		746495	1					
ANR	746502	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	527:2:12326:12369	746495	1	True				
ANR	746503	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746495	0					
ANR	746504	IdentifierDeclType	NameTable *		746495	0					
ANR	746505	Identifier	t		746495	1					
ANR	746506	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746495	2		=			
ANR	746507	Identifier	t		746495	0					
ANR	746508	CastExpression	( NameTable * ) reg -> name_table		746495	1					
ANR	746509	CastTarget	NameTable *		746495	0					
ANR	746510	PtrMemberAccess	reg -> name_table		746495	1					
ANR	746511	Identifier	reg		746495	0					
ANR	746512	Identifier	name_table		746495	1					
ANR	746513	ExpressionStatement	narg . ret = 0	529:2:12374:12386	746495	2	True				
ANR	746514	AssignmentExpression	narg . ret = 0		746495	0		=			
ANR	746515	MemberAccess	narg . ret		746495	0					
ANR	746516	Identifier	narg		746495	0					
ANR	746517	Identifier	ret		746495	1					
ANR	746518	PrimaryExpression	0		746495	1					
ANR	746519	IfStatement	if ( IS_NOT_NULL ( t ) )		746495	3					
ANR	746520	Condition	IS_NOT_NULL ( t )	530:6:12394:12407	746495	0	True				
ANR	746521	CallExpression	IS_NOT_NULL ( t )		746495	0					
ANR	746522	Callee	IS_NOT_NULL		746495	0					
ANR	746523	Identifier	IS_NOT_NULL		746495	0					
ANR	746524	ArgumentList	t		746495	1					
ANR	746525	Argument	t		746495	0					
ANR	746526	Identifier	t		746495	0					
ANR	746527	CompoundStatement		6:22:105:105	746495	1					
ANR	746528	ExpressionStatement	narg . func = func	531:4:12416:12432	746495	0	True				
ANR	746529	AssignmentExpression	narg . func = func		746495	0		=			
ANR	746530	MemberAccess	narg . func		746495	0					
ANR	746531	Identifier	narg		746495	0					
ANR	746532	Identifier	func		746495	1					
ANR	746533	Identifier	func		746495	1					
ANR	746534	ExpressionStatement	narg . reg = reg	532:4:12438:12453	746495	1	True				
ANR	746535	AssignmentExpression	narg . reg = reg		746495	0		=			
ANR	746536	MemberAccess	narg . reg		746495	0					
ANR	746537	Identifier	narg		746495	0					
ANR	746538	Identifier	reg		746495	1					
ANR	746539	Identifier	reg		746495	1					
ANR	746540	ExpressionStatement	narg . arg = arg	533:4:12459:12474	746495	2	True				
ANR	746541	AssignmentExpression	narg . arg = arg		746495	0		=			
ANR	746542	MemberAccess	narg . arg		746495	0					
ANR	746543	Identifier	narg		746495	0					
ANR	746544	Identifier	arg		746495	1					
ANR	746545	Identifier	arg		746495	1					
ANR	746546	ExpressionStatement	narg . enc = reg -> enc	534:4:12480:12500	746495	3	True				
ANR	746547	AssignmentExpression	narg . enc = reg -> enc		746495	0		=			
ANR	746548	MemberAccess	narg . enc		746495	0					
ANR	746549	Identifier	narg		746495	0					
ANR	746550	Identifier	enc		746495	1					
ANR	746551	PtrMemberAccess	reg -> enc		746495	1					
ANR	746552	Identifier	reg		746495	0					
ANR	746553	Identifier	enc		746495	1					
ANR	746554	ExpressionStatement	"onig_st_foreach ( t , i_names , ( HashDataType ) & narg )"	535:4:12540:12589	746495	4	True				
ANR	746555	CallExpression	"onig_st_foreach ( t , i_names , ( HashDataType ) & narg )"		746495	0					
ANR	746556	Callee	onig_st_foreach		746495	0					
ANR	746557	Identifier	onig_st_foreach		746495	0					
ANR	746558	ArgumentList	t		746495	1					
ANR	746559	Argument	t		746495	0					
ANR	746560	Identifier	t		746495	0					
ANR	746561	Argument	i_names		746495	1					
ANR	746562	Identifier	i_names		746495	0					
ANR	746563	Argument	( HashDataType ) & narg		746495	2					
ANR	746564	CastExpression	( HashDataType ) & narg		746495	0					
ANR	746565	CastTarget	HashDataType		746495	0					
ANR	746566	UnaryOperationExpression	& narg		746495	1					
ANR	746567	UnaryOperator	&		746495	0					
ANR	746568	Identifier	narg		746495	1					
ANR	746569	ReturnStatement	return narg . ret ;	537:2:12597:12612	746495	4	True				
ANR	746570	MemberAccess	narg . ret		746495	0					
ANR	746571	Identifier	narg		746495	0					
ANR	746572	Identifier	ret		746495	1					
ANR	746573	ReturnType	extern int		746495	1					
ANR	746574	Identifier	onig_foreach_name		746495	2					
ANR	746575	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		746495	3					
ANR	746576	Parameter	regex_t * reg	523:18:12212:12223	746495	0	True				
ANR	746577	ParameterType	regex_t *		746495	0					
ANR	746578	Identifier	reg		746495	1					
ANR	746579	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	524:2:12228:12290	746495	1	True				
ANR	746580	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		746495	0					
ANR	746581	Identifier	func		746495	1					
ANR	746582	Parameter	void * arg	524:67:12293:12301	746495	2	True				
ANR	746583	ParameterType	void *		746495	0					
ANR	746584	Identifier	arg		746495	1					
ANR	746585	CFGEntryNode	ENTRY		746495		True				
ANR	746586	CFGExitNode	EXIT		746495		True				
ANR	746587	Symbol	IS_NOT_NULL		746495						
ANR	746588	Symbol	narg . enc		746495						
ANR	746589	Symbol	reg -> name_table		746495						
ANR	746590	Symbol	narg . func		746495						
ANR	746591	Symbol	& narg		746495						
ANR	746592	Symbol	narg . ret		746495						
ANR	746593	Symbol	reg -> enc		746495						
ANR	746594	Symbol	narg . reg		746495						
ANR	746595	Symbol	func		746495						
ANR	746596	Symbol	t		746495						
ANR	746597	Symbol	i_names		746495						
ANR	746598	Symbol	reg		746495						
ANR	746599	Symbol	arg		746495						
ANR	746600	Symbol	narg		746495						
ANR	746601	Symbol	narg . arg		746495						
ANR	746602	Symbol	* reg		746495						
ANR	746603	DeclStmt									
ANR	746604	Decl							int	int	i
ANR	746605	Function	onig_renumber_name_table	557:0:12949:13170							
ANR	746606	FunctionDef	"onig_renumber_name_table (regex_t * reg , GroupNumRemap * map)"		746605	0					
ANR	746607	CompoundStatement		559:0:13019:13170	746605	0					
ANR	746608	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	560:2:13023:13066	746605	0	True				
ANR	746609	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746605	0					
ANR	746610	IdentifierDeclType	NameTable *		746605	0					
ANR	746611	Identifier	t		746605	1					
ANR	746612	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746605	2		=			
ANR	746613	Identifier	t		746605	0					
ANR	746614	CastExpression	( NameTable * ) reg -> name_table		746605	1					
ANR	746615	CastTarget	NameTable *		746605	0					
ANR	746616	PtrMemberAccess	reg -> name_table		746605	1					
ANR	746617	Identifier	reg		746605	0					
ANR	746618	Identifier	name_table		746605	1					
ANR	746619	IfStatement	if ( IS_NOT_NULL ( t ) )		746605	1					
ANR	746620	Condition	IS_NOT_NULL ( t )	562:6:13075:13088	746605	0	True				
ANR	746621	CallExpression	IS_NOT_NULL ( t )		746605	0					
ANR	746622	Callee	IS_NOT_NULL		746605	0					
ANR	746623	Identifier	IS_NOT_NULL		746605	0					
ANR	746624	ArgumentList	t		746605	1					
ANR	746625	Argument	t		746605	0					
ANR	746626	Identifier	t		746605	0					
ANR	746627	CompoundStatement		4:22:71:71	746605	1					
ANR	746628	ExpressionStatement	"onig_st_foreach ( t , i_renumber_name , ( HashDataType ) map )"	563:4:13097:13152	746605	0	True				
ANR	746629	CallExpression	"onig_st_foreach ( t , i_renumber_name , ( HashDataType ) map )"		746605	0					
ANR	746630	Callee	onig_st_foreach		746605	0					
ANR	746631	Identifier	onig_st_foreach		746605	0					
ANR	746632	ArgumentList	t		746605	1					
ANR	746633	Argument	t		746605	0					
ANR	746634	Identifier	t		746605	0					
ANR	746635	Argument	i_renumber_name		746605	1					
ANR	746636	Identifier	i_renumber_name		746605	0					
ANR	746637	Argument	( HashDataType ) map		746605	2					
ANR	746638	CastExpression	( HashDataType ) map		746605	0					
ANR	746639	CastTarget	HashDataType		746605	0					
ANR	746640	Identifier	map		746605	1					
ANR	746641	ReturnStatement	return 0 ;	565:2:13160:13168	746605	2	True				
ANR	746642	PrimaryExpression	0		746605	0					
ANR	746643	ReturnType	extern int		746605	1					
ANR	746644	Identifier	onig_renumber_name_table		746605	2					
ANR	746645	ParameterList	"regex_t * reg , GroupNumRemap * map"		746605	3					
ANR	746646	Parameter	regex_t * reg	558:25:12985:12996	746605	0	True				
ANR	746647	ParameterType	regex_t *		746605	0					
ANR	746648	Identifier	reg		746605	1					
ANR	746649	Parameter	GroupNumRemap * map	558:39:12999:13016	746605	1	True				
ANR	746650	ParameterType	GroupNumRemap *		746605	0					
ANR	746651	Identifier	map		746605	1					
ANR	746652	CFGEntryNode	ENTRY		746605		True				
ANR	746653	CFGExitNode	EXIT		746605		True				
ANR	746654	Symbol	IS_NOT_NULL		746605						
ANR	746655	Symbol	t		746605						
ANR	746656	Symbol	reg		746605						
ANR	746657	Symbol	reg -> name_table		746605						
ANR	746658	Symbol	i_renumber_name		746605						
ANR	746659	Symbol	map		746605						
ANR	746660	Symbol	* reg		746605						
ANR	746661	Function	onig_number_of_names	569:0:13174:13340							
ANR	746662	FunctionDef	onig_number_of_names (regex_t * reg)		746661	0					
ANR	746663	CompoundStatement		571:0:13220:13340	746661	0					
ANR	746664	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	572:2:13224:13267	746661	0	True				
ANR	746665	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746661	0					
ANR	746666	IdentifierDeclType	NameTable *		746661	0					
ANR	746667	Identifier	t		746661	1					
ANR	746668	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746661	2		=			
ANR	746669	Identifier	t		746661	0					
ANR	746670	CastExpression	( NameTable * ) reg -> name_table		746661	1					
ANR	746671	CastTarget	NameTable *		746661	0					
ANR	746672	PtrMemberAccess	reg -> name_table		746661	1					
ANR	746673	Identifier	reg		746661	0					
ANR	746674	Identifier	name_table		746661	1					
ANR	746675	IfStatement	if ( IS_NOT_NULL ( t ) )		746661	1					
ANR	746676	Condition	IS_NOT_NULL ( t )	574:6:13276:13289	746661	0	True				
ANR	746677	CallExpression	IS_NOT_NULL ( t )		746661	0					
ANR	746678	Callee	IS_NOT_NULL		746661	0					
ANR	746679	Identifier	IS_NOT_NULL		746661	0					
ANR	746680	ArgumentList	t		746661	1					
ANR	746681	Argument	t		746661	0					
ANR	746682	Identifier	t		746661	0					
ANR	746683	ReturnStatement	return t -> num_entries ;	575:4:13296:13317	746661	1	True				
ANR	746684	PtrMemberAccess	t -> num_entries		746661	0					
ANR	746685	Identifier	t		746661	0					
ANR	746686	Identifier	num_entries		746661	1					
ANR	746687	ElseStatement	else		746661	0					
ANR	746688	ReturnStatement	return 0 ;	577:4:13330:13338	746661	0	True				
ANR	746689	PrimaryExpression	0		746661	0					
ANR	746690	ReturnType	extern int		746661	1					
ANR	746691	Identifier	onig_number_of_names		746661	2					
ANR	746692	ParameterList	regex_t * reg		746661	3					
ANR	746693	Parameter	regex_t * reg	570:21:13206:13217	746661	0	True				
ANR	746694	ParameterType	regex_t *		746661	0					
ANR	746695	Identifier	reg		746661	1					
ANR	746696	CFGEntryNode	ENTRY		746661		True				
ANR	746697	CFGExitNode	EXIT		746661		True				
ANR	746698	Symbol	IS_NOT_NULL		746661						
ANR	746699	Symbol	t		746661						
ANR	746700	Symbol	reg		746661						
ANR	746701	Symbol	reg -> name_table		746661						
ANR	746702	Symbol	t -> num_entries		746661						
ANR	746703	Symbol	* reg		746661						
ANR	746704	Symbol	* t		746661						
ANR	746705	ClassDef	<unnamed>	584:8:13415:13489							
ANR	746706	DeclStmt									
ANR	746707	Decl							NameEntry	NameEntry *	e
ANR	746708	DeclStmt									
ANR	746709	Decl							int	int	num
ANR	746710	DeclStmt									
ANR	746711	Decl							int	int	alloc
ANR	746712	DeclStmt									
ANR	746713	Decl									NameTable
ANR	746714	Function	onig_print_names	591:0:13510:14135							
ANR	746715	FunctionDef	"onig_print_names (FILE * fp , regex_t * reg)"		746714	0					
ANR	746716	CompoundStatement		593:0:13562:14135	746714	0					
ANR	746717	IdentifierDeclStatement	"int i , j ;"	594:2:13566:13574	746714	0	True				
ANR	746718	IdentifierDecl	i		746714	0					
ANR	746719	IdentifierDeclType	int		746714	0					
ANR	746720	Identifier	i		746714	1					
ANR	746721	IdentifierDecl	j		746714	1					
ANR	746722	IdentifierDeclType	int		746714	0					
ANR	746723	Identifier	j		746714	1					
ANR	746724	IdentifierDeclStatement	NameEntry * e ;	595:2:13578:13590	746714	1	True				
ANR	746725	IdentifierDecl	* e		746714	0					
ANR	746726	IdentifierDeclType	NameEntry *		746714	0					
ANR	746727	Identifier	e		746714	1					
ANR	746728	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	596:2:13594:13637	746714	2	True				
ANR	746729	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746714	0					
ANR	746730	IdentifierDeclType	NameTable *		746714	0					
ANR	746731	Identifier	t		746714	1					
ANR	746732	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746714	2		=			
ANR	746733	Identifier	t		746714	0					
ANR	746734	CastExpression	( NameTable * ) reg -> name_table		746714	1					
ANR	746735	CastTarget	NameTable *		746714	0					
ANR	746736	PtrMemberAccess	reg -> name_table		746714	1					
ANR	746737	Identifier	reg		746714	0					
ANR	746738	Identifier	name_table		746714	1					
ANR	746739	IfStatement	if ( IS_NOT_NULL ( t ) && t -> num > 0 )		746714	3					
ANR	746740	Condition	IS_NOT_NULL ( t ) && t -> num > 0	598:6:13646:13673	746714	0	True				
ANR	746741	AndExpression	IS_NOT_NULL ( t ) && t -> num > 0		746714	0		&&			
ANR	746742	CallExpression	IS_NOT_NULL ( t )		746714	0					
ANR	746743	Callee	IS_NOT_NULL		746714	0					
ANR	746744	Identifier	IS_NOT_NULL		746714	0					
ANR	746745	ArgumentList	t		746714	1					
ANR	746746	Argument	t		746714	0					
ANR	746747	Identifier	t		746714	0					
ANR	746748	RelationalExpression	t -> num > 0		746714	1		>			
ANR	746749	PtrMemberAccess	t -> num		746714	0					
ANR	746750	Identifier	t		746714	0					
ANR	746751	Identifier	num		746714	1					
ANR	746752	PrimaryExpression	0		746714	1					
ANR	746753	CompoundStatement		6:36:113:113	746714	1					
ANR	746754	ExpressionStatement	"fprintf ( fp , ""name table\\n"" )"	599:4:13682:13709	746714	0	True				
ANR	746755	CallExpression	"fprintf ( fp , ""name table\\n"" )"		746714	0					
ANR	746756	Callee	fprintf		746714	0					
ANR	746757	Identifier	fprintf		746714	0					
ANR	746758	ArgumentList	fp		746714	1					
ANR	746759	Argument	fp		746714	0					
ANR	746760	Identifier	fp		746714	0					
ANR	746761	Argument	"""name table\\n"""		746714	1					
ANR	746762	PrimaryExpression	"""name table\\n"""		746714	0					
ANR	746763	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		746714	1					
ANR	746764	ForInit	i = 0 ;	600:9:13720:13725	746714	0	True				
ANR	746765	AssignmentExpression	i = 0		746714	0		=			
ANR	746766	Identifier	i		746714	0					
ANR	746767	PrimaryExpression	0		746714	1					
ANR	746768	Condition	i < t -> num	600:16:13727:13736	746714	1	True				
ANR	746769	RelationalExpression	i < t -> num		746714	0		<			
ANR	746770	Identifier	i		746714	0					
ANR	746771	PtrMemberAccess	t -> num		746714	1					
ANR	746772	Identifier	t		746714	0					
ANR	746773	Identifier	num		746714	1					
ANR	746774	PostIncDecOperationExpression	i ++	600:28:13739:13741	746714	2	True				
ANR	746775	Identifier	i		746714	0					
ANR	746776	IncDec	++		746714	1					
ANR	746777	CompoundStatement		8:33:181:181	746714	3					
ANR	746778	ExpressionStatement	e = & ( t -> e [ i ] )	601:6:13752:13766	746714	0	True				
ANR	746779	AssignmentExpression	e = & ( t -> e [ i ] )		746714	0		=			
ANR	746780	Identifier	e		746714	0					
ANR	746781	UnaryOperationExpression	& ( t -> e [ i ] )		746714	1					
ANR	746782	UnaryOperator	&		746714	0					
ANR	746783	ArrayIndexing	t -> e [ i ]		746714	1					
ANR	746784	PtrMemberAccess	t -> e		746714	0					
ANR	746785	Identifier	t		746714	0					
ANR	746786	Identifier	e		746714	1					
ANR	746787	Identifier	i		746714	1					
ANR	746788	ExpressionStatement	"fprintf ( fp , ""%s: "" , e -> name )"	602:6:13774:13802	746714	1	True				
ANR	746789	CallExpression	"fprintf ( fp , ""%s: "" , e -> name )"		746714	0					
ANR	746790	Callee	fprintf		746714	0					
ANR	746791	Identifier	fprintf		746714	0					
ANR	746792	ArgumentList	fp		746714	1					
ANR	746793	Argument	fp		746714	0					
ANR	746794	Identifier	fp		746714	0					
ANR	746795	Argument	"""%s: """		746714	1					
ANR	746796	PrimaryExpression	"""%s: """		746714	0					
ANR	746797	Argument	e -> name		746714	2					
ANR	746798	PtrMemberAccess	e -> name		746714	0					
ANR	746799	Identifier	e		746714	0					
ANR	746800	Identifier	name		746714	1					
ANR	746801	IfStatement	if ( e -> back_num == 0 )		746714	2					
ANR	746802	Condition	e -> back_num == 0	603:10:13814:13829	746714	0	True				
ANR	746803	EqualityExpression	e -> back_num == 0		746714	0		==			
ANR	746804	PtrMemberAccess	e -> back_num		746714	0					
ANR	746805	Identifier	e		746714	0					
ANR	746806	Identifier	back_num		746714	1					
ANR	746807	PrimaryExpression	0		746714	1					
ANR	746808	CompoundStatement		11:28:269:269	746714	1					
ANR	746809	ExpressionStatement	"fputs ( ""-"" , fp )"	604:1:13835:13849	746714	0	True				
ANR	746810	CallExpression	"fputs ( ""-"" , fp )"		746714	0					
ANR	746811	Callee	fputs		746714	0					
ANR	746812	Identifier	fputs		746714	0					
ANR	746813	ArgumentList	"""-"""		746714	1					
ANR	746814	Argument	"""-"""		746714	0					
ANR	746815	PrimaryExpression	"""-"""		746714	0					
ANR	746816	Argument	fp		746714	1					
ANR	746817	Identifier	fp		746714	0					
ANR	746818	ElseStatement	else		746714	0					
ANR	746819	IfStatement	if ( e -> back_num == 1 )		746714	0					
ANR	746820	Condition	e -> back_num == 1	606:15:13874:13889	746714	0	True				
ANR	746821	EqualityExpression	e -> back_num == 1		746714	0		==			
ANR	746822	PtrMemberAccess	e -> back_num		746714	0					
ANR	746823	Identifier	e		746714	0					
ANR	746824	Identifier	back_num		746714	1					
ANR	746825	PrimaryExpression	1		746714	1					
ANR	746826	CompoundStatement		14:33:329:329	746714	1					
ANR	746827	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_ref1 )"	607:1:13895:13926	746714	0	True				
ANR	746828	CallExpression	"fprintf ( fp , ""%d"" , e -> back_ref1 )"		746714	0					
ANR	746829	Callee	fprintf		746714	0					
ANR	746830	Identifier	fprintf		746714	0					
ANR	746831	ArgumentList	fp		746714	1					
ANR	746832	Argument	fp		746714	0					
ANR	746833	Identifier	fp		746714	0					
ANR	746834	Argument	"""%d"""		746714	1					
ANR	746835	PrimaryExpression	"""%d"""		746714	0					
ANR	746836	Argument	e -> back_ref1		746714	2					
ANR	746837	PtrMemberAccess	e -> back_ref1		746714	0					
ANR	746838	Identifier	e		746714	0					
ANR	746839	Identifier	back_ref1		746714	1					
ANR	746840	ElseStatement	else		746714	0					
ANR	746841	CompoundStatement		17:11:384:384	746714	0					
ANR	746842	ForStatement	for ( j = 0 ; j < e -> back_num ; j ++ )		746714	0					
ANR	746843	ForInit	j = 0 ;	610:6:13955:13960	746714	0	True				
ANR	746844	AssignmentExpression	j = 0		746714	0		=			
ANR	746845	Identifier	j		746714	0					
ANR	746846	PrimaryExpression	0		746714	1					
ANR	746847	Condition	j < e -> back_num	610:13:13962:13976	746714	1	True				
ANR	746848	RelationalExpression	j < e -> back_num		746714	0		<			
ANR	746849	Identifier	j		746714	0					
ANR	746850	PtrMemberAccess	e -> back_num		746714	1					
ANR	746851	Identifier	e		746714	0					
ANR	746852	Identifier	back_num		746714	1					
ANR	746853	PostIncDecOperationExpression	j ++	610:30:13979:13981	746714	2	True				
ANR	746854	Identifier	j		746714	0					
ANR	746855	IncDec	++		746714	1					
ANR	746856	CompoundStatement		18:35:421:421	746714	3					
ANR	746857	IfStatement	if ( j > 0 )		746714	0					
ANR	746858	Condition	j > 0	611:7:13993:13997	746714	0	True				
ANR	746859	RelationalExpression	j > 0		746714	0		>			
ANR	746860	Identifier	j		746714	0					
ANR	746861	PrimaryExpression	0		746714	1					
ANR	746862	ExpressionStatement	"fprintf ( fp , "", "" )"	611:14:14000:14017	746714	1	True				
ANR	746863	CallExpression	"fprintf ( fp , "", "" )"		746714	0					
ANR	746864	Callee	fprintf		746714	0					
ANR	746865	Identifier	fprintf		746714	0					
ANR	746866	ArgumentList	fp		746714	1					
ANR	746867	Argument	fp		746714	0					
ANR	746868	Identifier	fp		746714	0					
ANR	746869	Argument	""", """		746714	1					
ANR	746870	PrimaryExpression	""", """		746714	0					
ANR	746871	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_refs [ j ] )"	612:3:14022:14056	746714	1	True				
ANR	746872	CallExpression	"fprintf ( fp , ""%d"" , e -> back_refs [ j ] )"		746714	0					
ANR	746873	Callee	fprintf		746714	0					
ANR	746874	Identifier	fprintf		746714	0					
ANR	746875	ArgumentList	fp		746714	1					
ANR	746876	Argument	fp		746714	0					
ANR	746877	Identifier	fp		746714	0					
ANR	746878	Argument	"""%d"""		746714	1					
ANR	746879	PrimaryExpression	"""%d"""		746714	0					
ANR	746880	Argument	e -> back_refs [ j ]		746714	2					
ANR	746881	ArrayIndexing	e -> back_refs [ j ]		746714	0					
ANR	746882	PtrMemberAccess	e -> back_refs		746714	0					
ANR	746883	Identifier	e		746714	0					
ANR	746884	Identifier	back_refs		746714	1					
ANR	746885	Identifier	j		746714	1					
ANR	746886	ExpressionStatement	"fputs ( ""\\n"" , fp )"	615:6:14075:14090	746714	3	True				
ANR	746887	CallExpression	"fputs ( ""\\n"" , fp )"		746714	0					
ANR	746888	Callee	fputs		746714	0					
ANR	746889	Identifier	fputs		746714	0					
ANR	746890	ArgumentList	"""\\n"""		746714	1					
ANR	746891	Argument	"""\\n"""		746714	0					
ANR	746892	PrimaryExpression	"""\\n"""		746714	0					
ANR	746893	Argument	fp		746714	1					
ANR	746894	Identifier	fp		746714	0					
ANR	746895	ExpressionStatement	"fputs ( ""\\n"" , fp )"	617:4:14102:14117	746714	2	True				
ANR	746896	CallExpression	"fputs ( ""\\n"" , fp )"		746714	0					
ANR	746897	Callee	fputs		746714	0					
ANR	746898	Identifier	fputs		746714	0					
ANR	746899	ArgumentList	"""\\n"""		746714	1					
ANR	746900	Argument	"""\\n"""		746714	0					
ANR	746901	PrimaryExpression	"""\\n"""		746714	0					
ANR	746902	Argument	fp		746714	1					
ANR	746903	Identifier	fp		746714	0					
ANR	746904	ReturnStatement	return 0 ;	619:2:14125:14133	746714	4	True				
ANR	746905	PrimaryExpression	0		746714	0					
ANR	746906	ReturnType	extern int		746714	1					
ANR	746907	Identifier	onig_print_names		746714	2					
ANR	746908	ParameterList	"FILE * fp , regex_t * reg"		746714	3					
ANR	746909	Parameter	FILE * fp	592:17:13538:13545	746714	0	True				
ANR	746910	ParameterType	FILE *		746714	0					
ANR	746911	Identifier	fp		746714	1					
ANR	746912	Parameter	regex_t * reg	592:27:13548:13559	746714	1	True				
ANR	746913	ParameterType	regex_t *		746714	0					
ANR	746914	Identifier	reg		746714	1					
ANR	746915	CFGEntryNode	ENTRY		746714		True				
ANR	746916	CFGExitNode	EXIT		746714		True				
ANR	746917	Symbol	IS_NOT_NULL		746714						
ANR	746918	Symbol	e -> back_ref1		746714						
ANR	746919	Symbol	e -> back_num		746714						
ANR	746920	Symbol	e -> back_refs		746714						
ANR	746921	Symbol	e		746714						
ANR	746922	Symbol	* e -> back_refs		746714						
ANR	746923	Symbol	* * e		746714						
ANR	746924	Symbol	reg -> name_table		746714						
ANR	746925	Symbol	t -> e		746714						
ANR	746926	Symbol	i		746714						
ANR	746927	Symbol	fp		746714						
ANR	746928	Symbol	j		746714						
ANR	746929	Symbol	* e		746714						
ANR	746930	Symbol	t -> num		746714						
ANR	746931	Symbol	t		746714						
ANR	746932	Symbol	* j		746714						
ANR	746933	Symbol	reg		746714						
ANR	746934	Symbol	* reg		746714						
ANR	746935	Symbol	* t		746714						
ANR	746936	Symbol	e -> name		746714						
ANR	746937	Function	names_clear	623:0:14145:14673							
ANR	746938	FunctionDef	names_clear (regex_t * reg)		746937	0					
ANR	746939	CompoundStatement		625:0:14182:14673	746937	0					
ANR	746940	IdentifierDeclStatement	int i ;	626:2:14186:14191	746937	0	True				
ANR	746941	IdentifierDecl	i		746937	0					
ANR	746942	IdentifierDeclType	int		746937	0					
ANR	746943	Identifier	i		746937	1					
ANR	746944	IdentifierDeclStatement	NameEntry * e ;	627:2:14195:14207	746937	1	True				
ANR	746945	IdentifierDecl	* e		746937	0					
ANR	746946	IdentifierDeclType	NameEntry *		746937	0					
ANR	746947	Identifier	e		746937	1					
ANR	746948	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	628:2:14211:14254	746937	2	True				
ANR	746949	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		746937	0					
ANR	746950	IdentifierDeclType	NameTable *		746937	0					
ANR	746951	Identifier	t		746937	1					
ANR	746952	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		746937	2		=			
ANR	746953	Identifier	t		746937	0					
ANR	746954	CastExpression	( NameTable * ) reg -> name_table		746937	1					
ANR	746955	CastTarget	NameTable *		746937	0					
ANR	746956	PtrMemberAccess	reg -> name_table		746937	1					
ANR	746957	Identifier	reg		746937	0					
ANR	746958	Identifier	name_table		746937	1					
ANR	746959	IfStatement	if ( IS_NOT_NULL ( t ) )		746937	3					
ANR	746960	Condition	IS_NOT_NULL ( t )	630:6:14263:14276	746937	0	True				
ANR	746961	CallExpression	IS_NOT_NULL ( t )		746937	0					
ANR	746962	Callee	IS_NOT_NULL		746937	0					
ANR	746963	Identifier	IS_NOT_NULL		746937	0					
ANR	746964	ArgumentList	t		746937	1					
ANR	746965	Argument	t		746937	0					
ANR	746966	Identifier	t		746937	0					
ANR	746967	CompoundStatement		6:22:96:96	746937	1					
ANR	746968	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		746937	0					
ANR	746969	ForInit	i = 0 ;	631:9:14290:14295	746937	0	True				
ANR	746970	AssignmentExpression	i = 0		746937	0		=			
ANR	746971	Identifier	i		746937	0					
ANR	746972	PrimaryExpression	0		746937	1					
ANR	746973	Condition	i < t -> num	631:16:14297:14306	746937	1	True				
ANR	746974	RelationalExpression	i < t -> num		746937	0		<			
ANR	746975	Identifier	i		746937	0					
ANR	746976	PtrMemberAccess	t -> num		746937	1					
ANR	746977	Identifier	t		746937	0					
ANR	746978	Identifier	num		746937	1					
ANR	746979	PostIncDecOperationExpression	i ++	631:28:14309:14311	746937	2	True				
ANR	746980	Identifier	i		746937	0					
ANR	746981	IncDec	++		746937	1					
ANR	746982	CompoundStatement		7:33:131:131	746937	3					
ANR	746983	ExpressionStatement	e = & ( t -> e [ i ] )	632:6:14322:14336	746937	0	True				
ANR	746984	AssignmentExpression	e = & ( t -> e [ i ] )		746937	0		=			
ANR	746985	Identifier	e		746937	0					
ANR	746986	UnaryOperationExpression	& ( t -> e [ i ] )		746937	1					
ANR	746987	UnaryOperator	&		746937	0					
ANR	746988	ArrayIndexing	t -> e [ i ]		746937	1					
ANR	746989	PtrMemberAccess	t -> e		746937	0					
ANR	746990	Identifier	t		746937	0					
ANR	746991	Identifier	e		746937	1					
ANR	746992	Identifier	i		746937	1					
ANR	746993	IfStatement	if ( IS_NOT_NULL ( e -> name ) )		746937	1					
ANR	746994	Condition	IS_NOT_NULL ( e -> name )	633:10:14348:14367	746937	0	True				
ANR	746995	CallExpression	IS_NOT_NULL ( e -> name )		746937	0					
ANR	746996	Callee	IS_NOT_NULL		746937	0					
ANR	746997	Identifier	IS_NOT_NULL		746937	0					
ANR	746998	ArgumentList	e -> name		746937	1					
ANR	746999	Argument	e -> name		746937	0					
ANR	747000	PtrMemberAccess	e -> name		746937	0					
ANR	747001	Identifier	e		746937	0					
ANR	747002	Identifier	name		746937	1					
ANR	747003	CompoundStatement		9:32:187:187	746937	1					
ANR	747004	ExpressionStatement	xfree ( e -> name )	634:1:14373:14387	746937	0	True				
ANR	747005	CallExpression	xfree ( e -> name )		746937	0					
ANR	747006	Callee	xfree		746937	0					
ANR	747007	Identifier	xfree		746937	0					
ANR	747008	ArgumentList	e -> name		746937	1					
ANR	747009	Argument	e -> name		746937	0					
ANR	747010	PtrMemberAccess	e -> name		746937	0					
ANR	747011	Identifier	e		746937	0					
ANR	747012	Identifier	name		746937	1					
ANR	747013	ExpressionStatement	e -> name = NULL	635:1:14390:14410	746937	1	True				
ANR	747014	AssignmentExpression	e -> name = NULL		746937	0		=			
ANR	747015	PtrMemberAccess	e -> name		746937	0					
ANR	747016	Identifier	e		746937	0					
ANR	747017	Identifier	name		746937	1					
ANR	747018	Identifier	NULL		746937	1					
ANR	747019	ExpressionStatement	e -> name_len = 0	636:1:14413:14430	746937	2	True				
ANR	747020	AssignmentExpression	e -> name_len = 0		746937	0		=			
ANR	747021	PtrMemberAccess	e -> name_len		746937	0					
ANR	747022	Identifier	e		746937	0					
ANR	747023	Identifier	name_len		746937	1					
ANR	747024	PrimaryExpression	0		746937	1					
ANR	747025	ExpressionStatement	e -> back_num = 0	637:1:14433:14450	746937	3	True				
ANR	747026	AssignmentExpression	e -> back_num = 0		746937	0		=			
ANR	747027	PtrMemberAccess	e -> back_num		746937	0					
ANR	747028	Identifier	e		746937	0					
ANR	747029	Identifier	back_num		746937	1					
ANR	747030	PrimaryExpression	0		746937	1					
ANR	747031	ExpressionStatement	e -> back_alloc = 0	638:1:14453:14470	746937	4	True				
ANR	747032	AssignmentExpression	e -> back_alloc = 0		746937	0		=			
ANR	747033	PtrMemberAccess	e -> back_alloc		746937	0					
ANR	747034	Identifier	e		746937	0					
ANR	747035	Identifier	back_alloc		746937	1					
ANR	747036	PrimaryExpression	0		746937	1					
ANR	747037	IfStatement	if ( IS_NOT_NULL ( e -> back_refs ) )		746937	5					
ANR	747038	Condition	IS_NOT_NULL ( e -> back_refs )	639:5:14477:14501	746937	0	True				
ANR	747039	CallExpression	IS_NOT_NULL ( e -> back_refs )		746937	0					
ANR	747040	Callee	IS_NOT_NULL		746937	0					
ANR	747041	Identifier	IS_NOT_NULL		746937	0					
ANR	747042	ArgumentList	e -> back_refs		746937	1					
ANR	747043	Argument	e -> back_refs		746937	0					
ANR	747044	PtrMemberAccess	e -> back_refs		746937	0					
ANR	747045	Identifier	e		746937	0					
ANR	747046	Identifier	back_refs		746937	1					
ANR	747047	ExpressionStatement	xfree ( e -> back_refs )	639:32:14504:14523	746937	1	True				
ANR	747048	CallExpression	xfree ( e -> back_refs )		746937	0					
ANR	747049	Callee	xfree		746937	0					
ANR	747050	Identifier	xfree		746937	0					
ANR	747051	ArgumentList	e -> back_refs		746937	1					
ANR	747052	Argument	e -> back_refs		746937	0					
ANR	747053	PtrMemberAccess	e -> back_refs		746937	0					
ANR	747054	Identifier	e		746937	0					
ANR	747055	Identifier	back_refs		746937	1					
ANR	747056	ExpressionStatement	e -> back_refs = ( int * ) NULL	640:1:14526:14552	746937	6	True				
ANR	747057	AssignmentExpression	e -> back_refs = ( int * ) NULL		746937	0		=			
ANR	747058	PtrMemberAccess	e -> back_refs		746937	0					
ANR	747059	Identifier	e		746937	0					
ANR	747060	Identifier	back_refs		746937	1					
ANR	747061	CastExpression	( int * ) NULL		746937	1					
ANR	747062	CastTarget	int *		746937	0					
ANR	747063	Identifier	NULL		746937	1					
ANR	747064	IfStatement	if ( IS_NOT_NULL ( t -> e ) )		746937	1					
ANR	747065	Condition	IS_NOT_NULL ( t -> e )	643:8:14576:14592	746937	0	True				
ANR	747066	CallExpression	IS_NOT_NULL ( t -> e )		746937	0					
ANR	747067	Callee	IS_NOT_NULL		746937	0					
ANR	747068	Identifier	IS_NOT_NULL		746937	0					
ANR	747069	ArgumentList	t -> e		746937	1					
ANR	747070	Argument	t -> e		746937	0					
ANR	747071	PtrMemberAccess	t -> e		746937	0					
ANR	747072	Identifier	t		746937	0					
ANR	747073	Identifier	e		746937	1					
ANR	747074	CompoundStatement		19:27:412:412	746937	1					
ANR	747075	ExpressionStatement	xfree ( t -> e )	644:6:14603:14614	746937	0	True				
ANR	747076	CallExpression	xfree ( t -> e )		746937	0					
ANR	747077	Callee	xfree		746937	0					
ANR	747078	Identifier	xfree		746937	0					
ANR	747079	ArgumentList	t -> e		746937	1					
ANR	747080	Argument	t -> e		746937	0					
ANR	747081	PtrMemberAccess	t -> e		746937	0					
ANR	747082	Identifier	t		746937	0					
ANR	747083	Identifier	e		746937	1					
ANR	747084	ExpressionStatement	t -> e = NULL	645:6:14622:14633	746937	1	True				
ANR	747085	AssignmentExpression	t -> e = NULL		746937	0		=			
ANR	747086	PtrMemberAccess	t -> e		746937	0					
ANR	747087	Identifier	t		746937	0					
ANR	747088	Identifier	e		746937	1					
ANR	747089	Identifier	NULL		746937	1					
ANR	747090	ExpressionStatement	t -> num = 0	647:4:14645:14655	746937	2	True				
ANR	747091	AssignmentExpression	t -> num = 0		746937	0		=			
ANR	747092	PtrMemberAccess	t -> num		746937	0					
ANR	747093	Identifier	t		746937	0					
ANR	747094	Identifier	num		746937	1					
ANR	747095	PrimaryExpression	0		746937	1					
ANR	747096	ReturnStatement	return 0 ;	649:2:14663:14671	746937	4	True				
ANR	747097	PrimaryExpression	0		746937	0					
ANR	747098	ReturnType	static int		746937	1					
ANR	747099	Identifier	names_clear		746937	2					
ANR	747100	ParameterList	regex_t * reg		746937	3					
ANR	747101	Parameter	regex_t * reg	624:12:14168:14179	746937	0	True				
ANR	747102	ParameterType	regex_t *		746937	0					
ANR	747103	Identifier	reg		746937	1					
ANR	747104	CFGEntryNode	ENTRY		746937		True				
ANR	747105	CFGExitNode	EXIT		746937		True				
ANR	747106	Symbol	IS_NOT_NULL		746937						
ANR	747107	Symbol	NULL		746937						
ANR	747108	Symbol	e -> back_num		746937						
ANR	747109	Symbol	e -> back_refs		746937						
ANR	747110	Symbol	e		746937						
ANR	747111	Symbol	reg -> name_table		746937						
ANR	747112	Symbol	t -> e		746937						
ANR	747113	Symbol	i		746937						
ANR	747114	Symbol	* e		746937						
ANR	747115	Symbol	t -> num		746937						
ANR	747116	Symbol	t		746937						
ANR	747117	Symbol	reg		746937						
ANR	747118	Symbol	* reg		746937						
ANR	747119	Symbol	* t		746937						
ANR	747120	Symbol	e -> back_alloc		746937						
ANR	747121	Symbol	e -> name		746937						
ANR	747122	Symbol	e -> name_len		746937						
ANR	747123	Function	onig_names_free	652:0:14676:14895							
ANR	747124	FunctionDef	onig_names_free (regex_t * reg)		747123	0					
ANR	747125	CompoundStatement		654:0:14717:14895	747123	0					
ANR	747126	IdentifierDeclStatement	int r ;	655:2:14721:14726	747123	0	True				
ANR	747127	IdentifierDecl	r		747123	0					
ANR	747128	IdentifierDeclType	int		747123	0					
ANR	747129	Identifier	r		747123	1					
ANR	747130	IdentifierDeclStatement	NameTable * t ;	656:2:14730:14742	747123	1	True				
ANR	747131	IdentifierDecl	* t		747123	0					
ANR	747132	IdentifierDeclType	NameTable *		747123	0					
ANR	747133	Identifier	t		747123	1					
ANR	747134	ExpressionStatement	r = names_clear ( reg )	658:2:14747:14767	747123	2	True				
ANR	747135	AssignmentExpression	r = names_clear ( reg )		747123	0		=			
ANR	747136	Identifier	r		747123	0					
ANR	747137	CallExpression	names_clear ( reg )		747123	1					
ANR	747138	Callee	names_clear		747123	0					
ANR	747139	Identifier	names_clear		747123	0					
ANR	747140	ArgumentList	reg		747123	1					
ANR	747141	Argument	reg		747123	0					
ANR	747142	Identifier	reg		747123	0					
ANR	747143	IfStatement	if ( r )		747123	3					
ANR	747144	Condition	r	659:6:14775:14775	747123	0	True				
ANR	747145	Identifier	r		747123	0					
ANR	747146	ReturnStatement	return r ;	659:9:14778:14786	747123	1	True				
ANR	747147	Identifier	r		747123	0					
ANR	747148	ExpressionStatement	t = ( NameTable * ) reg -> name_table	661:2:14791:14823	747123	4	True				
ANR	747149	AssignmentExpression	t = ( NameTable * ) reg -> name_table		747123	0		=			
ANR	747150	Identifier	t		747123	0					
ANR	747151	CastExpression	( NameTable * ) reg -> name_table		747123	1					
ANR	747152	CastTarget	NameTable *		747123	0					
ANR	747153	PtrMemberAccess	reg -> name_table		747123	1					
ANR	747154	Identifier	reg		747123	0					
ANR	747155	Identifier	name_table		747123	1					
ANR	747156	IfStatement	if ( IS_NOT_NULL ( t ) )		747123	5					
ANR	747157	Condition	IS_NOT_NULL ( t )	662:6:14831:14844	747123	0	True				
ANR	747158	CallExpression	IS_NOT_NULL ( t )		747123	0					
ANR	747159	Callee	IS_NOT_NULL		747123	0					
ANR	747160	Identifier	IS_NOT_NULL		747123	0					
ANR	747161	ArgumentList	t		747123	1					
ANR	747162	Argument	t		747123	0					
ANR	747163	Identifier	t		747123	0					
ANR	747164	ExpressionStatement	xfree ( t )	662:22:14847:14855	747123	1	True				
ANR	747165	CallExpression	xfree ( t )		747123	0					
ANR	747166	Callee	xfree		747123	0					
ANR	747167	Identifier	xfree		747123	0					
ANR	747168	ArgumentList	t		747123	1					
ANR	747169	Argument	t		747123	0					
ANR	747170	Identifier	t		747123	0					
ANR	747171	ExpressionStatement	reg -> name_table = NULL	663:2:14859:14881	747123	6	True				
ANR	747172	AssignmentExpression	reg -> name_table = NULL		747123	0		=			
ANR	747173	PtrMemberAccess	reg -> name_table		747123	0					
ANR	747174	Identifier	reg		747123	0					
ANR	747175	Identifier	name_table		747123	1					
ANR	747176	Identifier	NULL		747123	1					
ANR	747177	ReturnStatement	return 0 ;	664:2:14885:14893	747123	7	True				
ANR	747178	PrimaryExpression	0		747123	0					
ANR	747179	ReturnType	extern int		747123	1					
ANR	747180	Identifier	onig_names_free		747123	2					
ANR	747181	ParameterList	regex_t * reg		747123	3					
ANR	747182	Parameter	regex_t * reg	653:16:14703:14714	747123	0	True				
ANR	747183	ParameterType	regex_t *		747123	0					
ANR	747184	Identifier	reg		747123	1					
ANR	747185	CFGEntryNode	ENTRY		747123		True				
ANR	747186	CFGExitNode	EXIT		747123		True				
ANR	747187	Symbol	r		747123						
ANR	747188	Symbol	IS_NOT_NULL		747123						
ANR	747189	Symbol	NULL		747123						
ANR	747190	Symbol	t		747123						
ANR	747191	Symbol	reg		747123						
ANR	747192	Symbol	names_clear		747123						
ANR	747193	Symbol	reg -> name_table		747123						
ANR	747194	Symbol	* reg		747123						
ANR	747195	Function	name_find	667:0:14898:15278							
ANR	747196	FunctionDef	"name_find (regex_t * reg , UChar * name , UChar * name_end)"		747195	0					
ANR	747197	CompoundStatement		669:0:14970:15278	747195	0					
ANR	747198	IdentifierDeclStatement	"int i , len ;"	670:2:14974:14984	747195	0	True				
ANR	747199	IdentifierDecl	i		747195	0					
ANR	747200	IdentifierDeclType	int		747195	0					
ANR	747201	Identifier	i		747195	1					
ANR	747202	IdentifierDecl	len		747195	1					
ANR	747203	IdentifierDeclType	int		747195	0					
ANR	747204	Identifier	len		747195	1					
ANR	747205	IdentifierDeclStatement	NameEntry * e ;	671:2:14988:15000	747195	1	True				
ANR	747206	IdentifierDecl	* e		747195	0					
ANR	747207	IdentifierDeclType	NameEntry *		747195	0					
ANR	747208	Identifier	e		747195	1					
ANR	747209	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	672:2:15004:15047	747195	2	True				
ANR	747210	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		747195	0					
ANR	747211	IdentifierDeclType	NameTable *		747195	0					
ANR	747212	Identifier	t		747195	1					
ANR	747213	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		747195	2		=			
ANR	747214	Identifier	t		747195	0					
ANR	747215	CastExpression	( NameTable * ) reg -> name_table		747195	1					
ANR	747216	CastTarget	NameTable *		747195	0					
ANR	747217	PtrMemberAccess	reg -> name_table		747195	1					
ANR	747218	Identifier	reg		747195	0					
ANR	747219	Identifier	name_table		747195	1					
ANR	747220	IfStatement	if ( IS_NOT_NULL ( t ) )		747195	3					
ANR	747221	Condition	IS_NOT_NULL ( t )	674:6:15056:15069	747195	0	True				
ANR	747222	CallExpression	IS_NOT_NULL ( t )		747195	0					
ANR	747223	Callee	IS_NOT_NULL		747195	0					
ANR	747224	Identifier	IS_NOT_NULL		747195	0					
ANR	747225	ArgumentList	t		747195	1					
ANR	747226	Argument	t		747195	0					
ANR	747227	Identifier	t		747195	0					
ANR	747228	CompoundStatement		6:22:101:101	747195	1					
ANR	747229	ExpressionStatement	len = name_end - name	675:4:15078:15099	747195	0	True				
ANR	747230	AssignmentExpression	len = name_end - name		747195	0		=			
ANR	747231	Identifier	len		747195	0					
ANR	747232	AdditiveExpression	name_end - name		747195	1		-			
ANR	747233	Identifier	name_end		747195	0					
ANR	747234	Identifier	name		747195	1					
ANR	747235	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		747195	1					
ANR	747236	ForInit	i = 0 ;	676:9:15110:15115	747195	0	True				
ANR	747237	AssignmentExpression	i = 0		747195	0		=			
ANR	747238	Identifier	i		747195	0					
ANR	747239	PrimaryExpression	0		747195	1					
ANR	747240	Condition	i < t -> num	676:16:15117:15126	747195	1	True				
ANR	747241	RelationalExpression	i < t -> num		747195	0		<			
ANR	747242	Identifier	i		747195	0					
ANR	747243	PtrMemberAccess	t -> num		747195	1					
ANR	747244	Identifier	t		747195	0					
ANR	747245	Identifier	num		747195	1					
ANR	747246	PostIncDecOperationExpression	i ++	676:28:15129:15131	747195	2	True				
ANR	747247	Identifier	i		747195	0					
ANR	747248	IncDec	++		747195	1					
ANR	747249	CompoundStatement		8:33:163:163	747195	3					
ANR	747250	ExpressionStatement	e = & ( t -> e [ i ] )	677:6:15142:15156	747195	0	True				
ANR	747251	AssignmentExpression	e = & ( t -> e [ i ] )		747195	0		=			
ANR	747252	Identifier	e		747195	0					
ANR	747253	UnaryOperationExpression	& ( t -> e [ i ] )		747195	1					
ANR	747254	UnaryOperator	&		747195	0					
ANR	747255	ArrayIndexing	t -> e [ i ]		747195	1					
ANR	747256	PtrMemberAccess	t -> e		747195	0					
ANR	747257	Identifier	t		747195	0					
ANR	747258	Identifier	e		747195	1					
ANR	747259	Identifier	i		747195	1					
ANR	747260	IfStatement	"if ( len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0 )"		747195	1					
ANR	747261	Condition	"len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0"	678:10:15168:15226	747195	0	True				
ANR	747262	AndExpression	"len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0"		747195	0		&&			
ANR	747263	EqualityExpression	len == e -> name_len		747195	0		==			
ANR	747264	Identifier	len		747195	0					
ANR	747265	PtrMemberAccess	e -> name_len		747195	1					
ANR	747266	Identifier	e		747195	0					
ANR	747267	Identifier	name_len		747195	1					
ANR	747268	EqualityExpression	"onig_strncmp ( name , e -> name , len ) == 0"		747195	1		==			
ANR	747269	CallExpression	"onig_strncmp ( name , e -> name , len )"		747195	0					
ANR	747270	Callee	onig_strncmp		747195	0					
ANR	747271	Identifier	onig_strncmp		747195	0					
ANR	747272	ArgumentList	name		747195	1					
ANR	747273	Argument	name		747195	0					
ANR	747274	Identifier	name		747195	0					
ANR	747275	Argument	e -> name		747195	1					
ANR	747276	PtrMemberAccess	e -> name		747195	0					
ANR	747277	Identifier	e		747195	0					
ANR	747278	Identifier	name		747195	1					
ANR	747279	Argument	len		747195	2					
ANR	747280	Identifier	len		747195	0					
ANR	747281	PrimaryExpression	0		747195	1					
ANR	747282	ReturnStatement	return e ;	679:1:15230:15238	747195	1	True				
ANR	747283	Identifier	e		747195	0					
ANR	747284	ReturnStatement	return ( NameEntry * ) NULL ;	682:2:15252:15276	747195	4	True				
ANR	747285	CastExpression	( NameEntry * ) NULL		747195	0					
ANR	747286	CastTarget	NameEntry *		747195	0					
ANR	747287	Identifier	NULL		747195	1					
ANR	747288	ReturnType	static NameEntry *		747195	1					
ANR	747289	Identifier	name_find		747195	2					
ANR	747290	ParameterList	"regex_t * reg , UChar * name , UChar * name_end"		747195	3					
ANR	747291	Parameter	regex_t * reg	668:10:14926:14937	747195	0	True				
ANR	747292	ParameterType	regex_t *		747195	0					
ANR	747293	Identifier	reg		747195	1					
ANR	747294	Parameter	UChar * name	668:24:14940:14950	747195	1	True				
ANR	747295	ParameterType	UChar *		747195	0					
ANR	747296	Identifier	name		747195	1					
ANR	747297	Parameter	UChar * name_end	668:37:14953:14967	747195	2	True				
ANR	747298	ParameterType	UChar *		747195	0					
ANR	747299	Identifier	name_end		747195	1					
ANR	747300	CFGEntryNode	ENTRY		747195		True				
ANR	747301	CFGExitNode	EXIT		747195		True				
ANR	747302	Symbol	IS_NOT_NULL		747195						
ANR	747303	Symbol	NULL		747195						
ANR	747304	Symbol	e		747195						
ANR	747305	Symbol	reg -> name_table		747195						
ANR	747306	Symbol	t -> e		747195						
ANR	747307	Symbol	i		747195						
ANR	747308	Symbol	* e		747195						
ANR	747309	Symbol	t -> num		747195						
ANR	747310	Symbol	len		747195						
ANR	747311	Symbol	t		747195						
ANR	747312	Symbol	reg		747195						
ANR	747313	Symbol	name		747195						
ANR	747314	Symbol	onig_strncmp		747195						
ANR	747315	Symbol	name_end		747195						
ANR	747316	Symbol	* reg		747195						
ANR	747317	Symbol	* t		747195						
ANR	747318	Symbol	e -> name_len		747195						
ANR	747319	Symbol	e -> name		747195						
ANR	747320	Function	onig_foreach_name	685:0:15281:15745							
ANR	747321	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		747320	0					
ANR	747322	CompoundStatement		688:0:15402:15745	747320	0					
ANR	747323	IdentifierDeclStatement	"int i , r ;"	689:2:15406:15414	747320	0	True				
ANR	747324	IdentifierDecl	i		747320	0					
ANR	747325	IdentifierDeclType	int		747320	0					
ANR	747326	Identifier	i		747320	1					
ANR	747327	IdentifierDecl	r		747320	1					
ANR	747328	IdentifierDeclType	int		747320	0					
ANR	747329	Identifier	r		747320	1					
ANR	747330	IdentifierDeclStatement	NameEntry * e ;	690:2:15418:15430	747320	1	True				
ANR	747331	IdentifierDecl	* e		747320	0					
ANR	747332	IdentifierDeclType	NameEntry *		747320	0					
ANR	747333	Identifier	e		747320	1					
ANR	747334	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	691:2:15434:15477	747320	2	True				
ANR	747335	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		747320	0					
ANR	747336	IdentifierDeclType	NameTable *		747320	0					
ANR	747337	Identifier	t		747320	1					
ANR	747338	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		747320	2		=			
ANR	747339	Identifier	t		747320	0					
ANR	747340	CastExpression	( NameTable * ) reg -> name_table		747320	1					
ANR	747341	CastTarget	NameTable *		747320	0					
ANR	747342	PtrMemberAccess	reg -> name_table		747320	1					
ANR	747343	Identifier	reg		747320	0					
ANR	747344	Identifier	name_table		747320	1					
ANR	747345	IfStatement	if ( IS_NOT_NULL ( t ) )		747320	3					
ANR	747346	Condition	IS_NOT_NULL ( t )	693:6:15486:15499	747320	0	True				
ANR	747347	CallExpression	IS_NOT_NULL ( t )		747320	0					
ANR	747348	Callee	IS_NOT_NULL		747320	0					
ANR	747349	Identifier	IS_NOT_NULL		747320	0					
ANR	747350	ArgumentList	t		747320	1					
ANR	747351	Argument	t		747320	0					
ANR	747352	Identifier	t		747320	0					
ANR	747353	CompoundStatement		6:22:99:99	747320	1					
ANR	747354	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		747320	0					
ANR	747355	ForInit	i = 0 ;	694:9:15513:15518	747320	0	True				
ANR	747356	AssignmentExpression	i = 0		747320	0		=			
ANR	747357	Identifier	i		747320	0					
ANR	747358	PrimaryExpression	0		747320	1					
ANR	747359	Condition	i < t -> num	694:16:15520:15529	747320	1	True				
ANR	747360	RelationalExpression	i < t -> num		747320	0		<			
ANR	747361	Identifier	i		747320	0					
ANR	747362	PtrMemberAccess	t -> num		747320	1					
ANR	747363	Identifier	t		747320	0					
ANR	747364	Identifier	num		747320	1					
ANR	747365	PostIncDecOperationExpression	i ++	694:28:15532:15534	747320	2	True				
ANR	747366	Identifier	i		747320	0					
ANR	747367	IncDec	++		747320	1					
ANR	747368	CompoundStatement		7:33:134:134	747320	3					
ANR	747369	ExpressionStatement	e = & ( t -> e [ i ] )	695:6:15545:15559	747320	0	True				
ANR	747370	AssignmentExpression	e = & ( t -> e [ i ] )		747320	0		=			
ANR	747371	Identifier	e		747320	0					
ANR	747372	UnaryOperationExpression	& ( t -> e [ i ] )		747320	1					
ANR	747373	UnaryOperator	&		747320	0					
ANR	747374	ArrayIndexing	t -> e [ i ]		747320	1					
ANR	747375	PtrMemberAccess	t -> e		747320	0					
ANR	747376	Identifier	t		747320	0					
ANR	747377	Identifier	e		747320	1					
ANR	747378	Identifier	i		747320	1					
ANR	747379	ExpressionStatement	"r = ( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"	696:6:15567:15693	747320	1	True				
ANR	747380	AssignmentExpression	"r = ( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"		747320	0		=			
ANR	747381	Identifier	r		747320	0					
ANR	747382	CallExpression	"( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"		747320	1					
ANR	747383	Callee	* func		747320	0					
ANR	747384	UnaryOperationExpression	* func		747320	0					
ANR	747385	UnaryOperator	*		747320	0					
ANR	747386	Identifier	func		747320	1					
ANR	747387	ArgumentList	e -> name		747320	1					
ANR	747388	Argument	e -> name		747320	0					
ANR	747389	PtrMemberAccess	e -> name		747320	0					
ANR	747390	Identifier	e		747320	0					
ANR	747391	Identifier	name		747320	1					
ANR	747392	Argument	e -> name + e -> name_len		747320	1					
ANR	747393	AdditiveExpression	e -> name + e -> name_len		747320	0		+			
ANR	747394	PtrMemberAccess	e -> name		747320	0					
ANR	747395	Identifier	e		747320	0					
ANR	747396	Identifier	name		747320	1					
ANR	747397	PtrMemberAccess	e -> name_len		747320	1					
ANR	747398	Identifier	e		747320	0					
ANR	747399	Identifier	name_len		747320	1					
ANR	747400	Argument	e -> back_num		747320	2					
ANR	747401	PtrMemberAccess	e -> back_num		747320	0					
ANR	747402	Identifier	e		747320	0					
ANR	747403	Identifier	back_num		747320	1					
ANR	747404	Argument	e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 )		747320	3					
ANR	747405	ConditionalExpression	e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 )		747320	0					
ANR	747406	Condition	e -> back_num > 1		747320	0					
ANR	747407	RelationalExpression	e -> back_num > 1		747320	0		>			
ANR	747408	PtrMemberAccess	e -> back_num		747320	0					
ANR	747409	Identifier	e		747320	0					
ANR	747410	Identifier	back_num		747320	1					
ANR	747411	PrimaryExpression	1		747320	1					
ANR	747412	PtrMemberAccess	e -> back_refs		747320	1					
ANR	747413	Identifier	e		747320	0					
ANR	747414	Identifier	back_refs		747320	1					
ANR	747415	UnaryOperationExpression	& ( e -> back_ref1 )		747320	2					
ANR	747416	UnaryOperator	&		747320	0					
ANR	747417	PtrMemberAccess	e -> back_ref1		747320	1					
ANR	747418	Identifier	e		747320	0					
ANR	747419	Identifier	back_ref1		747320	1					
ANR	747420	Argument	reg		747320	4					
ANR	747421	Identifier	reg		747320	0					
ANR	747422	Argument	arg		747320	5					
ANR	747423	Identifier	arg		747320	0					
ANR	747424	IfStatement	if ( r != 0 )		747320	2					
ANR	747425	Condition	r != 0	699:10:15705:15710	747320	0	True				
ANR	747426	EqualityExpression	r != 0		747320	0		!=			
ANR	747427	Identifier	r		747320	0					
ANR	747428	PrimaryExpression	0		747320	1					
ANR	747429	ReturnStatement	return r ;	699:18:15713:15721	747320	1	True				
ANR	747430	Identifier	r		747320	0					
ANR	747431	ReturnStatement	return 0 ;	702:2:15735:15743	747320	4	True				
ANR	747432	PrimaryExpression	0		747320	0					
ANR	747433	ReturnType	extern int		747320	1					
ANR	747434	Identifier	onig_foreach_name		747320	2					
ANR	747435	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		747320	3					
ANR	747436	Parameter	regex_t * reg	686:18:15310:15321	747320	0	True				
ANR	747437	ParameterType	regex_t *		747320	0					
ANR	747438	Identifier	reg		747320	1					
ANR	747439	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	687:2:15326:15388	747320	1	True				
ANR	747440	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		747320	0					
ANR	747441	Identifier	func		747320	1					
ANR	747442	Parameter	void * arg	687:67:15391:15399	747320	2	True				
ANR	747443	ParameterType	void *		747320	0					
ANR	747444	Identifier	arg		747320	1					
ANR	747445	CFGEntryNode	ENTRY		747320		True				
ANR	747446	CFGExitNode	EXIT		747320		True				
ANR	747447	Symbol	IS_NOT_NULL		747320						
ANR	747448	Symbol	e -> back_num		747320						
ANR	747449	Symbol	* func		747320						
ANR	747450	Symbol	e -> back_refs		747320						
ANR	747451	Symbol	e		747320						
ANR	747452	Symbol	reg -> name_table		747320						
ANR	747453	Symbol	t -> e		747320						
ANR	747454	Symbol	i		747320						
ANR	747455	Symbol	& e -> back_ref1		747320						
ANR	747456	Symbol	* e		747320						
ANR	747457	Symbol	t -> num		747320						
ANR	747458	Symbol	r		747320						
ANR	747459	Symbol	func		747320						
ANR	747460	Symbol	t		747320						
ANR	747461	Symbol	reg		747320						
ANR	747462	Symbol	arg		747320						
ANR	747463	Symbol	* reg		747320						
ANR	747464	Symbol	* t		747320						
ANR	747465	Symbol	e -> name		747320						
ANR	747466	Symbol	e -> name_len		747320						
ANR	747467	Function	onig_number_of_names	705:0:15748:15906							
ANR	747468	FunctionDef	onig_number_of_names (regex_t * reg)		747467	0					
ANR	747469	CompoundStatement		707:0:15794:15906	747467	0					
ANR	747470	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	708:2:15798:15841	747467	0	True				
ANR	747471	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		747467	0					
ANR	747472	IdentifierDeclType	NameTable *		747467	0					
ANR	747473	Identifier	t		747467	1					
ANR	747474	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		747467	2		=			
ANR	747475	Identifier	t		747467	0					
ANR	747476	CastExpression	( NameTable * ) reg -> name_table		747467	1					
ANR	747477	CastTarget	NameTable *		747467	0					
ANR	747478	PtrMemberAccess	reg -> name_table		747467	1					
ANR	747479	Identifier	reg		747467	0					
ANR	747480	Identifier	name_table		747467	1					
ANR	747481	IfStatement	if ( IS_NOT_NULL ( t ) )		747467	1					
ANR	747482	Condition	IS_NOT_NULL ( t )	710:6:15850:15863	747467	0	True				
ANR	747483	CallExpression	IS_NOT_NULL ( t )		747467	0					
ANR	747484	Callee	IS_NOT_NULL		747467	0					
ANR	747485	Identifier	IS_NOT_NULL		747467	0					
ANR	747486	ArgumentList	t		747467	1					
ANR	747487	Argument	t		747467	0					
ANR	747488	Identifier	t		747467	0					
ANR	747489	ReturnStatement	return t -> num ;	711:4:15870:15883	747467	1	True				
ANR	747490	PtrMemberAccess	t -> num		747467	0					
ANR	747491	Identifier	t		747467	0					
ANR	747492	Identifier	num		747467	1					
ANR	747493	ElseStatement	else		747467	0					
ANR	747494	ReturnStatement	return 0 ;	713:4:15896:15904	747467	0	True				
ANR	747495	PrimaryExpression	0		747467	0					
ANR	747496	ReturnType	extern int		747467	1					
ANR	747497	Identifier	onig_number_of_names		747467	2					
ANR	747498	ParameterList	regex_t * reg		747467	3					
ANR	747499	Parameter	regex_t * reg	706:21:15780:15791	747467	0	True				
ANR	747500	ParameterType	regex_t *		747467	0					
ANR	747501	Identifier	reg		747467	1					
ANR	747502	CFGEntryNode	ENTRY		747467		True				
ANR	747503	CFGExitNode	EXIT		747467		True				
ANR	747504	Symbol	t -> num		747467						
ANR	747505	Symbol	IS_NOT_NULL		747467						
ANR	747506	Symbol	t		747467						
ANR	747507	Symbol	reg		747467						
ANR	747508	Symbol	reg -> name_table		747467						
ANR	747509	Symbol	* reg		747467						
ANR	747510	Symbol	* t		747467						
ANR	747511	Function	name_add	718:0:15943:18757							
ANR	747512	FunctionDef	"name_add (regex_t * reg , UChar * name , UChar * name_end , int backref , ScanEnv * env)"		747511	0					
ANR	747513	CompoundStatement		720:0:16034:18757	747511	0					
ANR	747514	IdentifierDeclStatement	int alloc ;	721:2:16038:16047	747511	0	True				
ANR	747515	IdentifierDecl	alloc		747511	0					
ANR	747516	IdentifierDeclType	int		747511	0					
ANR	747517	Identifier	alloc		747511	1					
ANR	747518	IdentifierDeclStatement	NameEntry * e ;	722:2:16051:16063	747511	1	True				
ANR	747519	IdentifierDecl	* e		747511	0					
ANR	747520	IdentifierDeclType	NameEntry *		747511	0					
ANR	747521	Identifier	e		747511	1					
ANR	747522	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	723:2:16067:16110	747511	2	True				
ANR	747523	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		747511	0					
ANR	747524	IdentifierDeclType	NameTable *		747511	0					
ANR	747525	Identifier	t		747511	1					
ANR	747526	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		747511	2		=			
ANR	747527	Identifier	t		747511	0					
ANR	747528	CastExpression	( NameTable * ) reg -> name_table		747511	1					
ANR	747529	CastTarget	NameTable *		747511	0					
ANR	747530	PtrMemberAccess	reg -> name_table		747511	1					
ANR	747531	Identifier	reg		747511	0					
ANR	747532	Identifier	name_table		747511	1					
ANR	747533	IfStatement	if ( name_end - name <= 0 )		747511	3					
ANR	747534	Condition	name_end - name <= 0	725:6:16119:16138	747511	0	True				
ANR	747535	RelationalExpression	name_end - name <= 0		747511	0		<=			
ANR	747536	AdditiveExpression	name_end - name		747511	0		-			
ANR	747537	Identifier	name_end		747511	0					
ANR	747538	Identifier	name		747511	1					
ANR	747539	PrimaryExpression	0		747511	1					
ANR	747540	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	726:4:16145:16176	747511	1	True				
ANR	747541	Identifier	ONIGERR_EMPTY_GROUP_NAME		747511	0					
ANR	747542	ExpressionStatement	"e = name_find ( reg , name , name_end )"	728:2:16181:16215	747511	4	True				
ANR	747543	AssignmentExpression	"e = name_find ( reg , name , name_end )"		747511	0		=			
ANR	747544	Identifier	e		747511	0					
ANR	747545	CallExpression	"name_find ( reg , name , name_end )"		747511	1					
ANR	747546	Callee	name_find		747511	0					
ANR	747547	Identifier	name_find		747511	0					
ANR	747548	ArgumentList	reg		747511	1					
ANR	747549	Argument	reg		747511	0					
ANR	747550	Identifier	reg		747511	0					
ANR	747551	Argument	name		747511	1					
ANR	747552	Identifier	name		747511	0					
ANR	747553	Argument	name_end		747511	2					
ANR	747554	Identifier	name_end		747511	0					
ANR	747555	IfStatement	if ( IS_NULL ( e ) )		747511	5					
ANR	747556	Condition	IS_NULL ( e )	729:6:16223:16232	747511	0	True				
ANR	747557	CallExpression	IS_NULL ( e )		747511	0					
ANR	747558	Callee	IS_NULL		747511	0					
ANR	747559	Identifier	IS_NULL		747511	0					
ANR	747560	ArgumentList	e		747511	1					
ANR	747561	Argument	e		747511	0					
ANR	747562	Identifier	e		747511	0					
ANR	747563	CompoundStatement		10:18:200:200	747511	1					
ANR	747564	IfStatement	if ( IS_NULL ( t ) )		747511	0					
ANR	747565	Condition	IS_NULL ( t )	731:8:16267:16276	747511	0	True				
ANR	747566	CallExpression	IS_NULL ( t )		747511	0					
ANR	747567	Callee	IS_NULL		747511	0					
ANR	747568	Identifier	IS_NULL		747511	0					
ANR	747569	ArgumentList	t		747511	1					
ANR	747570	Argument	t		747511	0					
ANR	747571	Identifier	t		747511	0					
ANR	747572	CompoundStatement		12:20:244:244	747511	1					
ANR	747573	ExpressionStatement	t = onig_st_init_strend_table_with_size ( 5 )	732:6:16287:16329	747511	0	True				
ANR	747574	AssignmentExpression	t = onig_st_init_strend_table_with_size ( 5 )		747511	0		=			
ANR	747575	Identifier	t		747511	0					
ANR	747576	CallExpression	onig_st_init_strend_table_with_size ( 5 )		747511	1					
ANR	747577	Callee	onig_st_init_strend_table_with_size		747511	0					
ANR	747578	Identifier	onig_st_init_strend_table_with_size		747511	0					
ANR	747579	ArgumentList	5		747511	1					
ANR	747580	Argument	5		747511	0					
ANR	747581	PrimaryExpression	5		747511	0					
ANR	747582	ExpressionStatement	reg -> name_table = ( void * ) t	733:6:16337:16364	747511	1	True				
ANR	747583	AssignmentExpression	reg -> name_table = ( void * ) t		747511	0		=			
ANR	747584	PtrMemberAccess	reg -> name_table		747511	0					
ANR	747585	Identifier	reg		747511	0					
ANR	747586	Identifier	name_table		747511	1					
ANR	747587	CastExpression	( void * ) t		747511	1					
ANR	747588	CastTarget	void *		747511	0					
ANR	747589	Identifier	t		747511	1					
ANR	747590	ExpressionStatement	e = ( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )	735:4:16376:16419	747511	1	True				
ANR	747591	AssignmentExpression	e = ( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )		747511	0		=			
ANR	747592	Identifier	e		747511	0					
ANR	747593	CastExpression	( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )		747511	1					
ANR	747594	CastTarget	NameEntry *		747511	0					
ANR	747595	CallExpression	xmalloc ( sizeof ( NameEntry ) )		747511	1					
ANR	747596	Callee	xmalloc		747511	0					
ANR	747597	Identifier	xmalloc		747511	0					
ANR	747598	ArgumentList	sizeof ( NameEntry )		747511	1					
ANR	747599	Argument	sizeof ( NameEntry )		747511	0					
ANR	747600	SizeofExpression	sizeof ( NameEntry )		747511	0					
ANR	747601	Sizeof	sizeof		747511	0					
ANR	747602	SizeofOperand	NameEntry		747511	1					
ANR	747603	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e )	736:4:16425:16452	747511	2	True				
ANR	747604	CallExpression	CHECK_NULL_RETURN_MEMERR ( e )		747511	0					
ANR	747605	Callee	CHECK_NULL_RETURN_MEMERR		747511	0					
ANR	747606	Identifier	CHECK_NULL_RETURN_MEMERR		747511	0					
ANR	747607	ArgumentList	e		747511	1					
ANR	747608	Argument	e		747511	0					
ANR	747609	Identifier	e		747511	0					
ANR	747610	ExpressionStatement	"e -> name = strdup_with_null ( reg -> enc , name , name_end )"	738:4:16459:16511	747511	3	True				
ANR	747611	AssignmentExpression	"e -> name = strdup_with_null ( reg -> enc , name , name_end )"		747511	0		=			
ANR	747612	PtrMemberAccess	e -> name		747511	0					
ANR	747613	Identifier	e		747511	0					
ANR	747614	Identifier	name		747511	1					
ANR	747615	CallExpression	"strdup_with_null ( reg -> enc , name , name_end )"		747511	1					
ANR	747616	Callee	strdup_with_null		747511	0					
ANR	747617	Identifier	strdup_with_null		747511	0					
ANR	747618	ArgumentList	reg -> enc		747511	1					
ANR	747619	Argument	reg -> enc		747511	0					
ANR	747620	PtrMemberAccess	reg -> enc		747511	0					
ANR	747621	Identifier	reg		747511	0					
ANR	747622	Identifier	enc		747511	1					
ANR	747623	Argument	name		747511	1					
ANR	747624	Identifier	name		747511	0					
ANR	747625	Argument	name_end		747511	2					
ANR	747626	Identifier	name_end		747511	0					
ANR	747627	IfStatement	if ( IS_NULL ( e -> name ) )		747511	4					
ANR	747628	Condition	IS_NULL ( e -> name )	739:8:16521:16536	747511	0	True				
ANR	747629	CallExpression	IS_NULL ( e -> name )		747511	0					
ANR	747630	Callee	IS_NULL		747511	0					
ANR	747631	Identifier	IS_NULL		747511	0					
ANR	747632	ArgumentList	e -> name		747511	1					
ANR	747633	Argument	e -> name		747511	0					
ANR	747634	PtrMemberAccess	e -> name		747511	0					
ANR	747635	Identifier	e		747511	0					
ANR	747636	Identifier	name		747511	1					
ANR	747637	CompoundStatement		20:26:504:504	747511	1					
ANR	747638	ExpressionStatement	xfree ( e )	740:6:16547:16555	747511	0	True				
ANR	747639	CallExpression	xfree ( e )		747511	0					
ANR	747640	Callee	xfree		747511	0					
ANR	747641	Identifier	xfree		747511	0					
ANR	747642	ArgumentList	e		747511	1					
ANR	747643	Argument	e		747511	0					
ANR	747644	Identifier	e		747511	0					
ANR	747645	ReturnStatement	return ONIGERR_MEMORY ;	740:17:16558:16579	747511	1	True				
ANR	747646	Identifier	ONIGERR_MEMORY		747511	0					
ANR	747647	ExpressionStatement	"onig_st_insert_strend ( t , e -> name , ( e -> name + ( name_end - name ) ) , ( HashDataType ) e )"	742:4:16591:16699	747511	5	True				
ANR	747648	CallExpression	"onig_st_insert_strend ( t , e -> name , ( e -> name + ( name_end - name ) ) , ( HashDataType ) e )"		747511	0					
ANR	747649	Callee	onig_st_insert_strend		747511	0					
ANR	747650	Identifier	onig_st_insert_strend		747511	0					
ANR	747651	ArgumentList	t		747511	1					
ANR	747652	Argument	t		747511	0					
ANR	747653	Identifier	t		747511	0					
ANR	747654	Argument	e -> name		747511	1					
ANR	747655	PtrMemberAccess	e -> name		747511	0					
ANR	747656	Identifier	e		747511	0					
ANR	747657	Identifier	name		747511	1					
ANR	747658	Argument	e -> name + ( name_end - name )		747511	2					
ANR	747659	AdditiveExpression	e -> name + ( name_end - name )		747511	0		+			
ANR	747660	PtrMemberAccess	e -> name		747511	0					
ANR	747661	Identifier	e		747511	0					
ANR	747662	Identifier	name		747511	1					
ANR	747663	AdditiveExpression	name_end - name		747511	1		-			
ANR	747664	Identifier	name_end		747511	0					
ANR	747665	Identifier	name		747511	1					
ANR	747666	Argument	( HashDataType ) e		747511	3					
ANR	747667	CastExpression	( HashDataType ) e		747511	0					
ANR	747668	CastTarget	HashDataType		747511	0					
ANR	747669	Identifier	e		747511	1					
ANR	747670	ExpressionStatement	e -> name_len = name_end - name	745:4:16706:16737	747511	6	True				
ANR	747671	AssignmentExpression	e -> name_len = name_end - name		747511	0		=			
ANR	747672	PtrMemberAccess	e -> name_len		747511	0					
ANR	747673	Identifier	e		747511	0					
ANR	747674	Identifier	name_len		747511	1					
ANR	747675	AdditiveExpression	name_end - name		747511	1		-			
ANR	747676	Identifier	name_end		747511	0					
ANR	747677	Identifier	name		747511	1					
ANR	747678	ExpressionStatement	e -> back_num = 0	746:4:16743:16760	747511	7	True				
ANR	747679	AssignmentExpression	e -> back_num = 0		747511	0		=			
ANR	747680	PtrMemberAccess	e -> back_num		747511	0					
ANR	747681	Identifier	e		747511	0					
ANR	747682	Identifier	back_num		747511	1					
ANR	747683	PrimaryExpression	0		747511	1					
ANR	747684	ExpressionStatement	e -> back_alloc = 0	747:4:16766:16783	747511	8	True				
ANR	747685	AssignmentExpression	e -> back_alloc = 0		747511	0		=			
ANR	747686	PtrMemberAccess	e -> back_alloc		747511	0					
ANR	747687	Identifier	e		747511	0					
ANR	747688	Identifier	back_alloc		747511	1					
ANR	747689	PrimaryExpression	0		747511	1					
ANR	747690	ExpressionStatement	e -> back_refs = ( int * ) NULL	748:4:16789:16816	747511	9	True				
ANR	747691	AssignmentExpression	e -> back_refs = ( int * ) NULL		747511	0		=			
ANR	747692	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747693	Identifier	e		747511	0					
ANR	747694	Identifier	back_refs		747511	1					
ANR	747695	CastExpression	( int * ) NULL		747511	1					
ANR	747696	CastTarget	int *		747511	0					
ANR	747697	Identifier	NULL		747511	1					
ANR	747698	IfStatement	"if ( e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME ) )"		747511	6					
ANR	747699	Condition	"e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"	794:6:17856:17950	747511	0	True				
ANR	747700	AndExpression	"e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		747511	0		&&			
ANR	747701	RelationalExpression	e -> back_num >= 1		747511	0		>=			
ANR	747702	PtrMemberAccess	e -> back_num		747511	0					
ANR	747703	Identifier	e		747511	0					
ANR	747704	Identifier	back_num		747511	1					
ANR	747705	PrimaryExpression	1		747511	1					
ANR	747706	UnaryOperationExpression	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		747511	1					
ANR	747707	UnaryOperator	!		747511	0					
ANR	747708	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		747511	1					
ANR	747709	Callee	IS_SYNTAX_BV		747511	0					
ANR	747710	Identifier	IS_SYNTAX_BV		747511	0					
ANR	747711	ArgumentList	env -> syntax		747511	1					
ANR	747712	Argument	env -> syntax		747511	0					
ANR	747713	PtrMemberAccess	env -> syntax		747511	0					
ANR	747714	Identifier	env		747511	0					
ANR	747715	Identifier	syntax		747511	1					
ANR	747716	Argument	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		747511	1					
ANR	747717	Identifier	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		747511	0					
ANR	747718	CompoundStatement		76:77:1918:1918	747511	1					
ANR	747719	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINED_NAME , name , name_end )"	796:4:17959:18050	747511	0	True				
ANR	747720	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINED_NAME , name , name_end )"		747511	0					
ANR	747721	Callee	onig_scan_env_set_error_string		747511	0					
ANR	747722	Identifier	onig_scan_env_set_error_string		747511	0					
ANR	747723	ArgumentList	env		747511	1					
ANR	747724	Argument	env		747511	0					
ANR	747725	Identifier	env		747511	0					
ANR	747726	Argument	ONIGERR_MULTIPLEX_DEFINED_NAME		747511	1					
ANR	747727	Identifier	ONIGERR_MULTIPLEX_DEFINED_NAME		747511	0					
ANR	747728	Argument	name		747511	2					
ANR	747729	Identifier	name		747511	0					
ANR	747730	Argument	name_end		747511	3					
ANR	747731	Identifier	name_end		747511	0					
ANR	747732	ReturnStatement	return ONIGERR_MULTIPLEX_DEFINED_NAME ;	798:4:18056:18093	747511	1	True				
ANR	747733	Identifier	ONIGERR_MULTIPLEX_DEFINED_NAME		747511	0					
ANR	747734	ExpressionStatement	e -> back_num ++	801:2:18102:18115	747511	7	True				
ANR	747735	PostIncDecOperationExpression	e -> back_num ++		747511	0					
ANR	747736	PtrMemberAccess	e -> back_num		747511	0					
ANR	747737	Identifier	e		747511	0					
ANR	747738	Identifier	back_num		747511	1					
ANR	747739	IncDec	++		747511	1					
ANR	747740	IfStatement	if ( e -> back_num == 1 )		747511	8					
ANR	747741	Condition	e -> back_num == 1	802:6:18123:18138	747511	0	True				
ANR	747742	EqualityExpression	e -> back_num == 1		747511	0		==			
ANR	747743	PtrMemberAccess	e -> back_num		747511	0					
ANR	747744	Identifier	e		747511	0					
ANR	747745	Identifier	back_num		747511	1					
ANR	747746	PrimaryExpression	1		747511	1					
ANR	747747	CompoundStatement		83:24:2106:2106	747511	1					
ANR	747748	ExpressionStatement	e -> back_ref1 = backref	803:4:18147:18169	747511	0	True				
ANR	747749	AssignmentExpression	e -> back_ref1 = backref		747511	0		=			
ANR	747750	PtrMemberAccess	e -> back_ref1		747511	0					
ANR	747751	Identifier	e		747511	0					
ANR	747752	Identifier	back_ref1		747511	1					
ANR	747753	Identifier	backref		747511	1					
ANR	747754	ElseStatement	else		747511	0					
ANR	747755	CompoundStatement		86:7:2147:2147	747511	0					
ANR	747756	IfStatement	if ( e -> back_num == 2 )		747511	0					
ANR	747757	Condition	e -> back_num == 2	806:8:18192:18207	747511	0	True				
ANR	747758	EqualityExpression	e -> back_num == 2		747511	0		==			
ANR	747759	PtrMemberAccess	e -> back_num		747511	0					
ANR	747760	Identifier	e		747511	0					
ANR	747761	Identifier	back_num		747511	1					
ANR	747762	PrimaryExpression	2		747511	1					
ANR	747763	CompoundStatement		87:26:2175:2175	747511	1					
ANR	747764	ExpressionStatement	alloc = INIT_NAME_BACKREFS_ALLOC_NUM	807:6:18218:18254	747511	0	True				
ANR	747765	AssignmentExpression	alloc = INIT_NAME_BACKREFS_ALLOC_NUM		747511	0		=			
ANR	747766	Identifier	alloc		747511	0					
ANR	747767	Identifier	INIT_NAME_BACKREFS_ALLOC_NUM		747511	1					
ANR	747768	ExpressionStatement	e -> back_refs = ( int * ) xmalloc ( sizeof ( int ) * alloc )	808:6:18262:18312	747511	1	True				
ANR	747769	AssignmentExpression	e -> back_refs = ( int * ) xmalloc ( sizeof ( int ) * alloc )		747511	0		=			
ANR	747770	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747771	Identifier	e		747511	0					
ANR	747772	Identifier	back_refs		747511	1					
ANR	747773	CastExpression	( int * ) xmalloc ( sizeof ( int ) * alloc )		747511	1					
ANR	747774	CastTarget	int *		747511	0					
ANR	747775	CallExpression	xmalloc ( sizeof ( int ) * alloc )		747511	1					
ANR	747776	Callee	xmalloc		747511	0					
ANR	747777	Identifier	xmalloc		747511	0					
ANR	747778	ArgumentList	sizeof ( int ) * alloc		747511	1					
ANR	747779	Argument	sizeof ( int ) * alloc		747511	0					
ANR	747780	MultiplicativeExpression	sizeof ( int ) * alloc		747511	0		*			
ANR	747781	SizeofExpression	sizeof ( int )		747511	0					
ANR	747782	Sizeof	sizeof		747511	0					
ANR	747783	SizeofOperand	int		747511	1					
ANR	747784	Identifier	alloc		747511	1					
ANR	747785	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )	809:6:18320:18358	747511	2	True				
ANR	747786	CallExpression	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )		747511	0					
ANR	747787	Callee	CHECK_NULL_RETURN_MEMERR		747511	0					
ANR	747788	Identifier	CHECK_NULL_RETURN_MEMERR		747511	0					
ANR	747789	ArgumentList	e -> back_refs		747511	1					
ANR	747790	Argument	e -> back_refs		747511	0					
ANR	747791	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747792	Identifier	e		747511	0					
ANR	747793	Identifier	back_refs		747511	1					
ANR	747794	ExpressionStatement	e -> back_alloc = alloc	810:6:18366:18387	747511	3	True				
ANR	747795	AssignmentExpression	e -> back_alloc = alloc		747511	0		=			
ANR	747796	PtrMemberAccess	e -> back_alloc		747511	0					
ANR	747797	Identifier	e		747511	0					
ANR	747798	Identifier	back_alloc		747511	1					
ANR	747799	Identifier	alloc		747511	1					
ANR	747800	ExpressionStatement	e -> back_refs [ 0 ] = e -> back_ref1	811:6:18395:18425	747511	4	True				
ANR	747801	AssignmentExpression	e -> back_refs [ 0 ] = e -> back_ref1		747511	0		=			
ANR	747802	ArrayIndexing	e -> back_refs [ 0 ]		747511	0					
ANR	747803	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747804	Identifier	e		747511	0					
ANR	747805	Identifier	back_refs		747511	1					
ANR	747806	PrimaryExpression	0		747511	1					
ANR	747807	PtrMemberAccess	e -> back_ref1		747511	1					
ANR	747808	Identifier	e		747511	0					
ANR	747809	Identifier	back_ref1		747511	1					
ANR	747810	ExpressionStatement	e -> back_refs [ 1 ] = backref	812:6:18433:18458	747511	5	True				
ANR	747811	AssignmentExpression	e -> back_refs [ 1 ] = backref		747511	0		=			
ANR	747812	ArrayIndexing	e -> back_refs [ 1 ]		747511	0					
ANR	747813	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747814	Identifier	e		747511	0					
ANR	747815	Identifier	back_refs		747511	1					
ANR	747816	PrimaryExpression	1		747511	1					
ANR	747817	Identifier	backref		747511	1					
ANR	747818	ElseStatement	else		747511	0					
ANR	747819	CompoundStatement		95:9:2440:2440	747511	0					
ANR	747820	IfStatement	if ( e -> back_num > e -> back_alloc )		747511	0					
ANR	747821	Condition	e -> back_num > e -> back_alloc	815:10:18487:18513	747511	0	True				
ANR	747822	RelationalExpression	e -> back_num > e -> back_alloc		747511	0		>			
ANR	747823	PtrMemberAccess	e -> back_num		747511	0					
ANR	747824	Identifier	e		747511	0					
ANR	747825	Identifier	back_num		747511	1					
ANR	747826	PtrMemberAccess	e -> back_alloc		747511	1					
ANR	747827	Identifier	e		747511	0					
ANR	747828	Identifier	back_alloc		747511	1					
ANR	747829	CompoundStatement		96:39:2481:2481	747511	1					
ANR	747830	ExpressionStatement	alloc = e -> back_alloc * 2	816:1:18519:18544	747511	0	True				
ANR	747831	AssignmentExpression	alloc = e -> back_alloc * 2		747511	0		=			
ANR	747832	Identifier	alloc		747511	0					
ANR	747833	MultiplicativeExpression	e -> back_alloc * 2		747511	1		*			
ANR	747834	PtrMemberAccess	e -> back_alloc		747511	0					
ANR	747835	Identifier	e		747511	0					
ANR	747836	Identifier	back_alloc		747511	1					
ANR	747837	PrimaryExpression	2		747511	1					
ANR	747838	ExpressionStatement	"e -> back_refs = ( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"	817:1:18547:18612	747511	1	True				
ANR	747839	AssignmentExpression	"e -> back_refs = ( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		747511	0		=			
ANR	747840	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747841	Identifier	e		747511	0					
ANR	747842	Identifier	back_refs		747511	1					
ANR	747843	CastExpression	"( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		747511	1					
ANR	747844	CastTarget	int *		747511	0					
ANR	747845	CallExpression	"xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		747511	1					
ANR	747846	Callee	xrealloc		747511	0					
ANR	747847	Identifier	xrealloc		747511	0					
ANR	747848	ArgumentList	e -> back_refs		747511	1					
ANR	747849	Argument	e -> back_refs		747511	0					
ANR	747850	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747851	Identifier	e		747511	0					
ANR	747852	Identifier	back_refs		747511	1					
ANR	747853	Argument	sizeof ( int ) * alloc		747511	1					
ANR	747854	MultiplicativeExpression	sizeof ( int ) * alloc		747511	0		*			
ANR	747855	SizeofExpression	sizeof ( int )		747511	0					
ANR	747856	Sizeof	sizeof		747511	0					
ANR	747857	SizeofOperand	int		747511	1					
ANR	747858	Identifier	alloc		747511	1					
ANR	747859	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )	818:1:18615:18653	747511	2	True				
ANR	747860	CallExpression	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )		747511	0					
ANR	747861	Callee	CHECK_NULL_RETURN_MEMERR		747511	0					
ANR	747862	Identifier	CHECK_NULL_RETURN_MEMERR		747511	0					
ANR	747863	ArgumentList	e -> back_refs		747511	1					
ANR	747864	Argument	e -> back_refs		747511	0					
ANR	747865	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747866	Identifier	e		747511	0					
ANR	747867	Identifier	back_refs		747511	1					
ANR	747868	ExpressionStatement	e -> back_alloc = alloc	819:1:18656:18677	747511	3	True				
ANR	747869	AssignmentExpression	e -> back_alloc = alloc		747511	0		=			
ANR	747870	PtrMemberAccess	e -> back_alloc		747511	0					
ANR	747871	Identifier	e		747511	0					
ANR	747872	Identifier	back_alloc		747511	1					
ANR	747873	Identifier	alloc		747511	1					
ANR	747874	ExpressionStatement	e -> back_refs [ e -> back_num - 1 ] = backref	821:6:18693:18732	747511	1	True				
ANR	747875	AssignmentExpression	e -> back_refs [ e -> back_num - 1 ] = backref		747511	0		=			
ANR	747876	ArrayIndexing	e -> back_refs [ e -> back_num - 1 ]		747511	0					
ANR	747877	PtrMemberAccess	e -> back_refs		747511	0					
ANR	747878	Identifier	e		747511	0					
ANR	747879	Identifier	back_refs		747511	1					
ANR	747880	AdditiveExpression	e -> back_num - 1		747511	1		-			
ANR	747881	PtrMemberAccess	e -> back_num		747511	0					
ANR	747882	Identifier	e		747511	0					
ANR	747883	Identifier	back_num		747511	1					
ANR	747884	PrimaryExpression	1		747511	1					
ANR	747885	Identifier	backref		747511	1					
ANR	747886	ReturnStatement	return 0 ;	825:2:18747:18755	747511	9	True				
ANR	747887	PrimaryExpression	0		747511	0					
ANR	747888	ReturnType	static int		747511	1					
ANR	747889	Identifier	name_add		747511	2					
ANR	747890	ParameterList	"regex_t * reg , UChar * name , UChar * name_end , int backref , ScanEnv * env"		747511	3					
ANR	747891	Parameter	regex_t * reg	719:9:15963:15974	747511	0	True				
ANR	747892	ParameterType	regex_t *		747511	0					
ANR	747893	Identifier	reg		747511	1					
ANR	747894	Parameter	UChar * name	719:23:15977:15987	747511	1	True				
ANR	747895	ParameterType	UChar *		747511	0					
ANR	747896	Identifier	name		747511	1					
ANR	747897	Parameter	UChar * name_end	719:36:15990:16004	747511	2	True				
ANR	747898	ParameterType	UChar *		747511	0					
ANR	747899	Identifier	name_end		747511	1					
ANR	747900	Parameter	int backref	719:53:16007:16017	747511	3	True				
ANR	747901	ParameterType	int		747511	0					
ANR	747902	Identifier	backref		747511	1					
ANR	747903	Parameter	ScanEnv * env	719:66:16020:16031	747511	4	True				
ANR	747904	ParameterType	ScanEnv *		747511	0					
ANR	747905	Identifier	env		747511	1					
ANR	747906	CFGEntryNode	ENTRY		747511		True				
ANR	747907	CFGExitNode	EXIT		747511		True				
ANR	747908	Symbol	ONIGERR_EMPTY_GROUP_NAME		747511						
ANR	747909	Symbol	backref		747511						
ANR	747910	Symbol	e -> back_ref1		747511						
ANR	747911	Symbol	e -> back_refs		747511						
ANR	747912	Symbol	strdup_with_null		747511						
ANR	747913	Symbol	INIT_NAME_BACKREFS_ALLOC_NUM		747511						
ANR	747914	Symbol	IS_NULL		747511						
ANR	747915	Symbol	reg		747511						
ANR	747916	Symbol	xmalloc		747511						
ANR	747917	Symbol	* e -> back_num		747511						
ANR	747918	Symbol	IS_SYNTAX_BV		747511						
ANR	747919	Symbol	xrealloc		747511						
ANR	747920	Symbol	name_end		747511						
ANR	747921	Symbol	e -> back_alloc		747511						
ANR	747922	Symbol	e -> name_len		747511						
ANR	747923	Symbol	e -> back_num		747511						
ANR	747924	Symbol	NULL		747511						
ANR	747925	Symbol	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		747511						
ANR	747926	Symbol	e		747511						
ANR	747927	Symbol	* * e		747511						
ANR	747928	Symbol	* e -> back_refs		747511						
ANR	747929	Symbol	reg -> name_table		747511						
ANR	747930	Symbol	name_find		747511						
ANR	747931	Symbol	ONIGERR_MEMORY		747511						
ANR	747932	Symbol	* env		747511						
ANR	747933	Symbol	env		747511						
ANR	747934	Symbol	env -> syntax		747511						
ANR	747935	Symbol	* e		747511						
ANR	747936	Symbol	reg -> enc		747511						
ANR	747937	Symbol	onig_st_init_strend_table_with_size		747511						
ANR	747938	Symbol	ONIGERR_MULTIPLEX_DEFINED_NAME		747511						
ANR	747939	Symbol	t		747511						
ANR	747940	Symbol	name		747511						
ANR	747941	Symbol	alloc		747511						
ANR	747942	Symbol	* reg		747511						
ANR	747943	Symbol	e -> name		747511						
ANR	747944	Function	onig_name_to_group_numbers	828:0:18760:19154							
ANR	747945	FunctionDef	"onig_name_to_group_numbers (regex_t * reg , const UChar * name , const UChar * name_end , int * * nums)"		747944	0					
ANR	747946	CompoundStatement		831:0:18872:19154	747944	0					
ANR	747947	IdentifierDeclStatement	"NameEntry * e = name_find ( reg , name , name_end ) ;"	832:2:18876:18921	747944	0	True				
ANR	747948	IdentifierDecl	"* e = name_find ( reg , name , name_end )"		747944	0					
ANR	747949	IdentifierDeclType	NameEntry *		747944	0					
ANR	747950	Identifier	e		747944	1					
ANR	747951	AssignmentExpression	"* e = name_find ( reg , name , name_end )"		747944	2		=			
ANR	747952	Identifier	e		747944	0					
ANR	747953	CallExpression	"name_find ( reg , name , name_end )"		747944	1					
ANR	747954	Callee	name_find		747944	0					
ANR	747955	Identifier	name_find		747944	0					
ANR	747956	ArgumentList	reg		747944	1					
ANR	747957	Argument	reg		747944	0					
ANR	747958	Identifier	reg		747944	0					
ANR	747959	Argument	name		747944	1					
ANR	747960	Identifier	name		747944	0					
ANR	747961	Argument	name_end		747944	2					
ANR	747962	Identifier	name_end		747944	0					
ANR	747963	IfStatement	if ( IS_NULL ( e ) )		747944	1					
ANR	747964	Condition	IS_NULL ( e )	834:6:18930:18939	747944	0	True				
ANR	747965	CallExpression	IS_NULL ( e )		747944	0					
ANR	747966	Callee	IS_NULL		747944	0					
ANR	747967	Identifier	IS_NULL		747944	0					
ANR	747968	ArgumentList	e		747944	1					
ANR	747969	Argument	e		747944	0					
ANR	747970	Identifier	e		747944	0					
ANR	747971	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	834:18:18942:18981	747944	1	True				
ANR	747972	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		747944	0					
ANR	747973	SwitchStatement	switch ( e -> back_num )		747944	2					
ANR	747974	Condition	e -> back_num	836:10:18994:19004	747944	0	True				
ANR	747975	PtrMemberAccess	e -> back_num		747944	0					
ANR	747976	Identifier	e		747944	0					
ANR	747977	Identifier	back_num		747944	1					
ANR	747978	CompoundStatement		6:23:134:134	747944	1					
ANR	747979	Label	case 0 :	837:2:19011:19017	747944	0	True				
ANR	747980	BreakStatement	break ;	838:4:19023:19028	747944	1	True				
ANR	747981	Label	case 1 :	839:2:19032:19038	747944	2	True				
ANR	747982	ExpressionStatement	* nums = & ( e -> back_ref1 )	840:4:19044:19067	747944	3	True				
ANR	747983	AssignmentExpression	* nums = & ( e -> back_ref1 )		747944	0		=			
ANR	747984	UnaryOperationExpression	* nums		747944	0					
ANR	747985	UnaryOperator	*		747944	0					
ANR	747986	Identifier	nums		747944	1					
ANR	747987	UnaryOperationExpression	& ( e -> back_ref1 )		747944	1					
ANR	747988	UnaryOperator	&		747944	0					
ANR	747989	PtrMemberAccess	e -> back_ref1		747944	1					
ANR	747990	Identifier	e		747944	0					
ANR	747991	Identifier	back_ref1		747944	1					
ANR	747992	BreakStatement	break ;	841:4:19073:19078	747944	4	True				
ANR	747993	Label	default :	842:2:19082:19089	747944	5	True				
ANR	747994	Identifier	default		747944	0					
ANR	747995	ExpressionStatement	* nums = e -> back_refs	843:4:19095:19115	747944	6	True				
ANR	747996	AssignmentExpression	* nums = e -> back_refs		747944	0		=			
ANR	747997	UnaryOperationExpression	* nums		747944	0					
ANR	747998	UnaryOperator	*		747944	0					
ANR	747999	Identifier	nums		747944	1					
ANR	748000	PtrMemberAccess	e -> back_refs		747944	1					
ANR	748001	Identifier	e		747944	0					
ANR	748002	Identifier	back_refs		747944	1					
ANR	748003	BreakStatement	break ;	844:4:19121:19126	747944	7	True				
ANR	748004	ReturnStatement	return e -> back_num ;	846:2:19134:19152	747944	3	True				
ANR	748005	PtrMemberAccess	e -> back_num		747944	0					
ANR	748006	Identifier	e		747944	0					
ANR	748007	Identifier	back_num		747944	1					
ANR	748008	ReturnType	extern int		747944	1					
ANR	748009	Identifier	onig_name_to_group_numbers		747944	2					
ANR	748010	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , int * * nums"		747944	3					
ANR	748011	Parameter	regex_t * reg	829:27:18798:18809	747944	0	True				
ANR	748012	ParameterType	regex_t *		747944	0					
ANR	748013	Identifier	reg		747944	1					
ANR	748014	Parameter	const UChar * name	829:41:18812:18828	747944	1	True				
ANR	748015	ParameterType	const UChar *		747944	0					
ANR	748016	Identifier	name		747944	1					
ANR	748017	Parameter	const UChar * name_end	830:6:18837:18857	747944	2	True				
ANR	748018	ParameterType	const UChar *		747944	0					
ANR	748019	Identifier	name_end		747944	1					
ANR	748020	Parameter	int * * nums	830:29:18860:18869	747944	3	True				
ANR	748021	ParameterType	int * *		747944	0					
ANR	748022	Identifier	nums		747944	1					
ANR	748023	CFGEntryNode	ENTRY		747944		True				
ANR	748024	CFGExitNode	EXIT		747944		True				
ANR	748025	Symbol	* nums		747944						
ANR	748026	Symbol	e -> back_num		747944						
ANR	748027	Symbol	e -> back_refs		747944						
ANR	748028	Symbol	e		747944						
ANR	748029	Symbol	name_find		747944						
ANR	748030	Symbol	& e -> back_ref1		747944						
ANR	748031	Symbol	* e		747944						
ANR	748032	Symbol	IS_NULL		747944						
ANR	748033	Symbol	reg		747944						
ANR	748034	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		747944						
ANR	748035	Symbol	name		747944						
ANR	748036	Symbol	name_end		747944						
ANR	748037	Symbol	nums		747944						
ANR	748038	Function	onig_name_to_backref_number	849:0:19157:19666							
ANR	748039	FunctionDef	"onig_name_to_backref_number (regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region)"		748038	0					
ANR	748040	CompoundStatement		852:0:19279:19666	748038	0					
ANR	748041	IdentifierDeclStatement	"int i , n , * nums ;"	853:2:19283:19298	748038	0	True				
ANR	748042	IdentifierDecl	i		748038	0					
ANR	748043	IdentifierDeclType	int		748038	0					
ANR	748044	Identifier	i		748038	1					
ANR	748045	IdentifierDecl	n		748038	1					
ANR	748046	IdentifierDeclType	int		748038	0					
ANR	748047	Identifier	n		748038	1					
ANR	748048	IdentifierDecl	* nums		748038	2					
ANR	748049	IdentifierDeclType	int *		748038	0					
ANR	748050	Identifier	nums		748038	1					
ANR	748051	ExpressionStatement	"n = onig_name_to_group_numbers ( reg , name , name_end , & nums )"	855:2:19303:19361	748038	1	True				
ANR	748052	AssignmentExpression	"n = onig_name_to_group_numbers ( reg , name , name_end , & nums )"		748038	0		=			
ANR	748053	Identifier	n		748038	0					
ANR	748054	CallExpression	"onig_name_to_group_numbers ( reg , name , name_end , & nums )"		748038	1					
ANR	748055	Callee	onig_name_to_group_numbers		748038	0					
ANR	748056	Identifier	onig_name_to_group_numbers		748038	0					
ANR	748057	ArgumentList	reg		748038	1					
ANR	748058	Argument	reg		748038	0					
ANR	748059	Identifier	reg		748038	0					
ANR	748060	Argument	name		748038	1					
ANR	748061	Identifier	name		748038	0					
ANR	748062	Argument	name_end		748038	2					
ANR	748063	Identifier	name_end		748038	0					
ANR	748064	Argument	& nums		748038	3					
ANR	748065	UnaryOperationExpression	& nums		748038	0					
ANR	748066	UnaryOperator	&		748038	0					
ANR	748067	Identifier	nums		748038	1					
ANR	748068	IfStatement	if ( n < 0 )		748038	2					
ANR	748069	Condition	n < 0	856:6:19369:19373	748038	0	True				
ANR	748070	RelationalExpression	n < 0		748038	0		<			
ANR	748071	Identifier	n		748038	0					
ANR	748072	PrimaryExpression	0		748038	1					
ANR	748073	ReturnStatement	return n ;	857:4:19380:19388	748038	1	True				
ANR	748074	Identifier	n		748038	0					
ANR	748075	ElseStatement	else		748038	0					
ANR	748076	IfStatement	if ( n == 0 )		748038	0					
ANR	748077	Condition	n == 0	858:11:19401:19406	748038	0	True				
ANR	748078	EqualityExpression	n == 0		748038	0		==			
ANR	748079	Identifier	n		748038	0					
ANR	748080	PrimaryExpression	0		748038	1					
ANR	748081	ReturnStatement	return ONIGERR_PARSER_BUG ;	859:4:19413:19438	748038	1	True				
ANR	748082	Identifier	ONIGERR_PARSER_BUG		748038	0					
ANR	748083	ElseStatement	else		748038	0					
ANR	748084	IfStatement	if ( n == 1 )		748038	0					
ANR	748085	Condition	n == 1	860:11:19451:19456	748038	0	True				
ANR	748086	EqualityExpression	n == 1		748038	0		==			
ANR	748087	Identifier	n		748038	0					
ANR	748088	PrimaryExpression	1		748038	1					
ANR	748089	ReturnStatement	return nums [ 0 ] ;	861:4:19463:19477	748038	1	True				
ANR	748090	ArrayIndexing	nums [ 0 ]		748038	0					
ANR	748091	Identifier	nums		748038	0					
ANR	748092	PrimaryExpression	0		748038	1					
ANR	748093	ElseStatement	else		748038	0					
ANR	748094	CompoundStatement		11:7:206:206	748038	0					
ANR	748095	IfStatement	if ( IS_NOT_NULL ( region ) )		748038	0					
ANR	748096	Condition	IS_NOT_NULL ( region )	863:8:19496:19514	748038	0	True				
ANR	748097	CallExpression	IS_NOT_NULL ( region )		748038	0					
ANR	748098	Callee	IS_NOT_NULL		748038	0					
ANR	748099	Identifier	IS_NOT_NULL		748038	0					
ANR	748100	ArgumentList	region		748038	1					
ANR	748101	Argument	region		748038	0					
ANR	748102	Identifier	region		748038	0					
ANR	748103	CompoundStatement		12:29:237:237	748038	1					
ANR	748104	ForStatement	for ( i = n - 1 ; i >= 0 ; i -- )		748038	0					
ANR	748105	ForInit	i = n - 1 ;	864:11:19530:19539	748038	0	True				
ANR	748106	AssignmentExpression	i = n - 1		748038	0		=			
ANR	748107	Identifier	i		748038	0					
ANR	748108	AdditiveExpression	n - 1		748038	1		-			
ANR	748109	Identifier	n		748038	0					
ANR	748110	PrimaryExpression	1		748038	1					
ANR	748111	Condition	i >= 0	864:22:19541:19546	748038	1	True				
ANR	748112	RelationalExpression	i >= 0		748038	0		>=			
ANR	748113	Identifier	i		748038	0					
ANR	748114	PrimaryExpression	0		748038	1					
ANR	748115	PostIncDecOperationExpression	i --	864:30:19549:19551	748038	2	True				
ANR	748116	Identifier	i		748038	0					
ANR	748117	IncDec	--		748038	1					
ANR	748118	CompoundStatement		13:35:274:274	748038	3					
ANR	748119	IfStatement	if ( region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS )		748038	0					
ANR	748120	Condition	region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS	865:5:19561:19602	748038	0	True				
ANR	748121	EqualityExpression	region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS		748038	0		!=			
ANR	748122	ArrayIndexing	region -> beg [ nums [ i ] ]		748038	0					
ANR	748123	PtrMemberAccess	region -> beg		748038	0					
ANR	748124	Identifier	region		748038	0					
ANR	748125	Identifier	beg		748038	1					
ANR	748126	ArrayIndexing	nums [ i ]		748038	1					
ANR	748127	Identifier	nums		748038	0					
ANR	748128	Identifier	i		748038	1					
ANR	748129	Identifier	ONIG_REGION_NOTPOS		748038	1					
ANR	748130	ReturnStatement	return nums [ i ] ;	866:3:19608:19622	748038	1	True				
ANR	748131	ArrayIndexing	nums [ i ]		748038	0					
ANR	748132	Identifier	nums		748038	0					
ANR	748133	Identifier	i		748038	1					
ANR	748134	ReturnStatement	return nums [ n - 1 ] ;	869:4:19642:19660	748038	1	True				
ANR	748135	ArrayIndexing	nums [ n - 1 ]		748038	0					
ANR	748136	Identifier	nums		748038	0					
ANR	748137	AdditiveExpression	n - 1		748038	1		-			
ANR	748138	Identifier	n		748038	0					
ANR	748139	PrimaryExpression	1		748038	1					
ANR	748140	ReturnType	extern int		748038	1					
ANR	748141	Identifier	onig_name_to_backref_number		748038	2					
ANR	748142	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region"		748038	3					
ANR	748143	Parameter	regex_t * reg	850:28:19196:19207	748038	0	True				
ANR	748144	ParameterType	regex_t *		748038	0					
ANR	748145	Identifier	reg		748038	1					
ANR	748146	Parameter	const UChar * name	850:42:19210:19226	748038	1	True				
ANR	748147	ParameterType	const UChar *		748038	0					
ANR	748148	Identifier	name		748038	1					
ANR	748149	Parameter	const UChar * name_end	851:7:19236:19256	748038	2	True				
ANR	748150	ParameterType	const UChar *		748038	0					
ANR	748151	Identifier	name_end		748038	1					
ANR	748152	Parameter	OnigRegion * region	851:30:19259:19276	748038	3	True				
ANR	748153	ParameterType	OnigRegion *		748038	0					
ANR	748154	Identifier	region		748038	1					
ANR	748155	CFGEntryNode	ENTRY		748038		True				
ANR	748156	CFGExitNode	EXIT		748038		True				
ANR	748157	Symbol	* nums		748038						
ANR	748158	Symbol	IS_NOT_NULL		748038						
ANR	748159	Symbol	* * nums		748038						
ANR	748160	Symbol	* * i		748038						
ANR	748161	Symbol	onig_name_to_group_numbers		748038						
ANR	748162	Symbol	* region -> beg		748038						
ANR	748163	Symbol	i		748038						
ANR	748164	Symbol	& nums		748038						
ANR	748165	Symbol	region -> beg		748038						
ANR	748166	Symbol	* region		748038						
ANR	748167	Symbol	n		748038						
ANR	748168	Symbol	ONIGERR_PARSER_BUG		748038						
ANR	748169	Symbol	ONIG_REGION_NOTPOS		748038						
ANR	748170	Symbol	* i		748038						
ANR	748171	Symbol	reg		748038						
ANR	748172	Symbol	name		748038						
ANR	748173	Symbol	* n		748038						
ANR	748174	Symbol	* * region		748038						
ANR	748175	Symbol	region		748038						
ANR	748176	Symbol	name_end		748038						
ANR	748177	Symbol	nums		748038						
ANR	748178	Function	onig_name_to_group_numbers	875:0:19698:19845							
ANR	748179	FunctionDef	"onig_name_to_group_numbers (regex_t * reg , const UChar * name , const UChar * name_end , int * * nums)"		748178	0					
ANR	748180	CompoundStatement		878:0:19810:19845	748178	0					
ANR	748181	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	879:2:19814:19843	748178	0	True				
ANR	748182	Identifier	ONIG_NO_SUPPORT_CONFIG		748178	0					
ANR	748183	ReturnType	extern int		748178	1					
ANR	748184	Identifier	onig_name_to_group_numbers		748178	2					
ANR	748185	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , int * * nums"		748178	3					
ANR	748186	Parameter	regex_t * reg	876:27:19736:19747	748178	0	True				
ANR	748187	ParameterType	regex_t *		748178	0					
ANR	748188	Identifier	reg		748178	1					
ANR	748189	Parameter	const UChar * name	876:41:19750:19766	748178	1	True				
ANR	748190	ParameterType	const UChar *		748178	0					
ANR	748191	Identifier	name		748178	1					
ANR	748192	Parameter	const UChar * name_end	877:6:19775:19795	748178	2	True				
ANR	748193	ParameterType	const UChar *		748178	0					
ANR	748194	Identifier	name_end		748178	1					
ANR	748195	Parameter	int * * nums	877:29:19798:19807	748178	3	True				
ANR	748196	ParameterType	int * *		748178	0					
ANR	748197	Identifier	nums		748178	1					
ANR	748198	CFGEntryNode	ENTRY		748178		True				
ANR	748199	CFGExitNode	EXIT		748178		True				
ANR	748200	Symbol	ONIG_NO_SUPPORT_CONFIG		748178						
ANR	748201	Symbol	reg		748178						
ANR	748202	Symbol	name		748178						
ANR	748203	Symbol	name_end		748178						
ANR	748204	Symbol	nums		748178						
ANR	748205	Function	onig_name_to_backref_number	882:0:19848:20005							
ANR	748206	FunctionDef	"onig_name_to_backref_number (regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region)"		748205	0					
ANR	748207	CompoundStatement		885:0:19970:20005	748205	0					
ANR	748208	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	886:2:19974:20003	748205	0	True				
ANR	748209	Identifier	ONIG_NO_SUPPORT_CONFIG		748205	0					
ANR	748210	ReturnType	extern int		748205	1					
ANR	748211	Identifier	onig_name_to_backref_number		748205	2					
ANR	748212	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region"		748205	3					
ANR	748213	Parameter	regex_t * reg	883:28:19887:19898	748205	0	True				
ANR	748214	ParameterType	regex_t *		748205	0					
ANR	748215	Identifier	reg		748205	1					
ANR	748216	Parameter	const UChar * name	883:42:19901:19917	748205	1	True				
ANR	748217	ParameterType	const UChar *		748205	0					
ANR	748218	Identifier	name		748205	1					
ANR	748219	Parameter	const UChar * name_end	884:7:19927:19947	748205	2	True				
ANR	748220	ParameterType	const UChar *		748205	0					
ANR	748221	Identifier	name_end		748205	1					
ANR	748222	Parameter	OnigRegion * region	884:30:19950:19967	748205	3	True				
ANR	748223	ParameterType	OnigRegion *		748205	0					
ANR	748224	Identifier	region		748205	1					
ANR	748225	CFGEntryNode	ENTRY		748205		True				
ANR	748226	CFGExitNode	EXIT		748205		True				
ANR	748227	Symbol	ONIG_NO_SUPPORT_CONFIG		748205						
ANR	748228	Symbol	reg		748205						
ANR	748229	Symbol	name		748205						
ANR	748230	Symbol	region		748205						
ANR	748231	Symbol	name_end		748205						
ANR	748232	Function	onig_foreach_name	889:0:20008:20164							
ANR	748233	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		748232	0					
ANR	748234	CompoundStatement		892:0:20129:20164	748232	0					
ANR	748235	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	893:2:20133:20162	748232	0	True				
ANR	748236	Identifier	ONIG_NO_SUPPORT_CONFIG		748232	0					
ANR	748237	ReturnType	extern int		748232	1					
ANR	748238	Identifier	onig_foreach_name		748232	2					
ANR	748239	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		748232	3					
ANR	748240	Parameter	regex_t * reg	890:18:20037:20048	748232	0	True				
ANR	748241	ParameterType	regex_t *		748232	0					
ANR	748242	Identifier	reg		748232	1					
ANR	748243	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	891:2:20053:20115	748232	1	True				
ANR	748244	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		748232	0					
ANR	748245	Identifier	func		748232	1					
ANR	748246	Parameter	void * arg	891:67:20118:20126	748232	2	True				
ANR	748247	ParameterType	void *		748232	0					
ANR	748248	Identifier	arg		748232	1					
ANR	748249	CFGEntryNode	ENTRY		748232		True				
ANR	748250	CFGExitNode	EXIT		748232		True				
ANR	748251	Symbol	func		748232						
ANR	748252	Symbol	ONIG_NO_SUPPORT_CONFIG		748232						
ANR	748253	Symbol	reg		748232						
ANR	748254	Symbol	arg		748232						
ANR	748255	Function	onig_number_of_names	896:0:20167:20227							
ANR	748256	FunctionDef	onig_number_of_names (regex_t * reg)		748255	0					
ANR	748257	CompoundStatement		898:0:20213:20227	748255	0					
ANR	748258	ReturnStatement	return 0 ;	899:2:20217:20225	748255	0	True				
ANR	748259	PrimaryExpression	0		748255	0					
ANR	748260	ReturnType	extern int		748255	1					
ANR	748261	Identifier	onig_number_of_names		748255	2					
ANR	748262	ParameterList	regex_t * reg		748255	3					
ANR	748263	Parameter	regex_t * reg	897:21:20199:20210	748255	0	True				
ANR	748264	ParameterType	regex_t *		748255	0					
ANR	748265	Identifier	reg		748255	1					
ANR	748266	CFGEntryNode	ENTRY		748255		True				
ANR	748267	CFGExitNode	EXIT		748255		True				
ANR	748268	Symbol	reg		748255						
ANR	748269	Function	onig_noname_group_capture_is_active	903:0:20264:20652							
ANR	748270	FunctionDef	onig_noname_group_capture_is_active (regex_t * reg)		748269	0					
ANR	748271	CompoundStatement		905:0:20325:20652	748269	0					
ANR	748272	IfStatement	"if ( ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP ) )"		748269	0					
ANR	748273	Condition	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP )"	906:6:20333:20395	748269	0	True				
ANR	748274	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP )"		748269	0					
ANR	748275	Callee	ONIG_IS_OPTION_ON		748269	0					
ANR	748276	Identifier	ONIG_IS_OPTION_ON		748269	0					
ANR	748277	ArgumentList	reg -> options		748269	1					
ANR	748278	Argument	reg -> options		748269	0					
ANR	748279	PtrMemberAccess	reg -> options		748269	0					
ANR	748280	Identifier	reg		748269	0					
ANR	748281	Identifier	options		748269	1					
ANR	748282	Argument	ONIG_OPTION_DONT_CAPTURE_GROUP		748269	1					
ANR	748283	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		748269	0					
ANR	748284	ReturnStatement	return 0 ;	907:4:20402:20410	748269	1	True				
ANR	748285	PrimaryExpression	0		748269	0					
ANR	748286	IfStatement	"if ( onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP ) )"		748269	1					
ANR	748287	Condition	"onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"	910:6:20442:20609	748269	0	True				
ANR	748288	AndExpression	"onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		748269	0		&&			
ANR	748289	RelationalExpression	onig_number_of_names ( reg ) > 0		748269	0		>			
ANR	748290	CallExpression	onig_number_of_names ( reg )		748269	0					
ANR	748291	Callee	onig_number_of_names		748269	0					
ANR	748292	Identifier	onig_number_of_names		748269	0					
ANR	748293	ArgumentList	reg		748269	1					
ANR	748294	Argument	reg		748269	0					
ANR	748295	Identifier	reg		748269	0					
ANR	748296	PrimaryExpression	0		748269	1					
ANR	748297	AndExpression	"IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		748269	1		&&			
ANR	748298	CallExpression	"IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP )"		748269	0					
ANR	748299	Callee	IS_SYNTAX_BV		748269	0					
ANR	748300	Identifier	IS_SYNTAX_BV		748269	0					
ANR	748301	ArgumentList	reg -> syntax		748269	1					
ANR	748302	Argument	reg -> syntax		748269	0					
ANR	748303	PtrMemberAccess	reg -> syntax		748269	0					
ANR	748304	Identifier	reg		748269	0					
ANR	748305	Identifier	syntax		748269	1					
ANR	748306	Argument	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		748269	1					
ANR	748307	Identifier	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		748269	0					
ANR	748308	UnaryOperationExpression	"! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		748269	1					
ANR	748309	UnaryOperator	!		748269	0					
ANR	748310	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		748269	1					
ANR	748311	Callee	ONIG_IS_OPTION_ON		748269	0					
ANR	748312	Identifier	ONIG_IS_OPTION_ON		748269	0					
ANR	748313	ArgumentList	reg -> options		748269	1					
ANR	748314	Argument	reg -> options		748269	0					
ANR	748315	PtrMemberAccess	reg -> options		748269	0					
ANR	748316	Identifier	reg		748269	0					
ANR	748317	Identifier	options		748269	1					
ANR	748318	Argument	ONIG_OPTION_CAPTURE_GROUP		748269	1					
ANR	748319	Identifier	ONIG_OPTION_CAPTURE_GROUP		748269	0					
ANR	748320	CompoundStatement		8:67:286:286	748269	1					
ANR	748321	ReturnStatement	return 0 ;	913:4:20618:20626	748269	0	True				
ANR	748322	PrimaryExpression	0		748269	0					
ANR	748323	ReturnStatement	return 1 ;	917:2:20642:20650	748269	2	True				
ANR	748324	PrimaryExpression	1		748269	0					
ANR	748325	ReturnType	extern int		748269	1					
ANR	748326	Identifier	onig_noname_group_capture_is_active		748269	2					
ANR	748327	ParameterList	regex_t * reg		748269	3					
ANR	748328	Parameter	regex_t * reg	904:36:20311:20322	748269	0	True				
ANR	748329	ParameterType	regex_t *		748269	0					
ANR	748330	Identifier	reg		748269	1					
ANR	748331	CFGEntryNode	ENTRY		748269		True				
ANR	748332	CFGExitNode	EXIT		748269		True				
ANR	748333	Symbol	ONIG_IS_OPTION_ON		748269						
ANR	748334	Symbol	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		748269						
ANR	748335	Symbol	reg		748269						
ANR	748336	Symbol	reg -> syntax		748269						
ANR	748337	Symbol	reg -> options		748269						
ANR	748338	Symbol	IS_SYNTAX_BV		748269						
ANR	748339	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		748269						
ANR	748340	Symbol	ONIG_OPTION_CAPTURE_GROUP		748269						
ANR	748341	Symbol	* reg		748269						
ANR	748342	Symbol	onig_number_of_names		748269						
ANR	748343	Function	scan_env_clear	923:0:20703:21419							
ANR	748344	FunctionDef	scan_env_clear (ScanEnv * env)		748343	0					
ANR	748345	CompoundStatement		925:0:20744:21419	748343	0					
ANR	748346	IdentifierDeclStatement	int i ;	926:2:20748:20753	748343	0	True				
ANR	748347	IdentifierDecl	i		748343	0					
ANR	748348	IdentifierDeclType	int		748343	0					
ANR	748349	Identifier	i		748343	1					
ANR	748350	ExpressionStatement	BIT_STATUS_CLEAR ( env -> capture_history )	928:2:20758:20796	748343	1	True				
ANR	748351	CallExpression	BIT_STATUS_CLEAR ( env -> capture_history )		748343	0					
ANR	748352	Callee	BIT_STATUS_CLEAR		748343	0					
ANR	748353	Identifier	BIT_STATUS_CLEAR		748343	0					
ANR	748354	ArgumentList	env -> capture_history		748343	1					
ANR	748355	Argument	env -> capture_history		748343	0					
ANR	748356	PtrMemberAccess	env -> capture_history		748343	0					
ANR	748357	Identifier	env		748343	0					
ANR	748358	Identifier	capture_history		748343	1					
ANR	748359	ExpressionStatement	BIT_STATUS_CLEAR ( env -> bt_mem_start )	929:2:20800:20835	748343	2	True				
ANR	748360	CallExpression	BIT_STATUS_CLEAR ( env -> bt_mem_start )		748343	0					
ANR	748361	Callee	BIT_STATUS_CLEAR		748343	0					
ANR	748362	Identifier	BIT_STATUS_CLEAR		748343	0					
ANR	748363	ArgumentList	env -> bt_mem_start		748343	1					
ANR	748364	Argument	env -> bt_mem_start		748343	0					
ANR	748365	PtrMemberAccess	env -> bt_mem_start		748343	0					
ANR	748366	Identifier	env		748343	0					
ANR	748367	Identifier	bt_mem_start		748343	1					
ANR	748368	ExpressionStatement	BIT_STATUS_CLEAR ( env -> bt_mem_end )	930:2:20839:20872	748343	3	True				
ANR	748369	CallExpression	BIT_STATUS_CLEAR ( env -> bt_mem_end )		748343	0					
ANR	748370	Callee	BIT_STATUS_CLEAR		748343	0					
ANR	748371	Identifier	BIT_STATUS_CLEAR		748343	0					
ANR	748372	ArgumentList	env -> bt_mem_end		748343	1					
ANR	748373	Argument	env -> bt_mem_end		748343	0					
ANR	748374	PtrMemberAccess	env -> bt_mem_end		748343	0					
ANR	748375	Identifier	env		748343	0					
ANR	748376	Identifier	bt_mem_end		748343	1					
ANR	748377	ExpressionStatement	BIT_STATUS_CLEAR ( env -> backrefed_mem )	931:2:20876:20912	748343	4	True				
ANR	748378	CallExpression	BIT_STATUS_CLEAR ( env -> backrefed_mem )		748343	0					
ANR	748379	Callee	BIT_STATUS_CLEAR		748343	0					
ANR	748380	Identifier	BIT_STATUS_CLEAR		748343	0					
ANR	748381	ArgumentList	env -> backrefed_mem		748343	1					
ANR	748382	Argument	env -> backrefed_mem		748343	0					
ANR	748383	PtrMemberAccess	env -> backrefed_mem		748343	0					
ANR	748384	Identifier	env		748343	0					
ANR	748385	Identifier	backrefed_mem		748343	1					
ANR	748386	ExpressionStatement	env -> error = ( UChar * ) NULL	932:2:20916:20947	748343	5	True				
ANR	748387	AssignmentExpression	env -> error = ( UChar * ) NULL		748343	0		=			
ANR	748388	PtrMemberAccess	env -> error		748343	0					
ANR	748389	Identifier	env		748343	0					
ANR	748390	Identifier	error		748343	1					
ANR	748391	CastExpression	( UChar * ) NULL		748343	1					
ANR	748392	CastTarget	UChar *		748343	0					
ANR	748393	Identifier	NULL		748343	1					
ANR	748394	ExpressionStatement	env -> error_end = ( UChar * ) NULL	933:2:20951:20982	748343	6	True				
ANR	748395	AssignmentExpression	env -> error_end = ( UChar * ) NULL		748343	0		=			
ANR	748396	PtrMemberAccess	env -> error_end		748343	0					
ANR	748397	Identifier	env		748343	0					
ANR	748398	Identifier	error_end		748343	1					
ANR	748399	CastExpression	( UChar * ) NULL		748343	1					
ANR	748400	CastTarget	UChar *		748343	0					
ANR	748401	Identifier	NULL		748343	1					
ANR	748402	ExpressionStatement	env -> num_call = 0	934:2:20986:21005	748343	7	True				
ANR	748403	AssignmentExpression	env -> num_call = 0		748343	0		=			
ANR	748404	PtrMemberAccess	env -> num_call		748343	0					
ANR	748405	Identifier	env		748343	0					
ANR	748406	Identifier	num_call		748343	1					
ANR	748407	PrimaryExpression	0		748343	1					
ANR	748408	ExpressionStatement	env -> num_mem = 0	935:2:21009:21028	748343	8	True				
ANR	748409	AssignmentExpression	env -> num_mem = 0		748343	0		=			
ANR	748410	PtrMemberAccess	env -> num_mem		748343	0					
ANR	748411	Identifier	env		748343	0					
ANR	748412	Identifier	num_mem		748343	1					
ANR	748413	PrimaryExpression	0		748343	1					
ANR	748414	ExpressionStatement	env -> num_named = 0	937:2:21055:21074	748343	9	True				
ANR	748415	AssignmentExpression	env -> num_named = 0		748343	0		=			
ANR	748416	PtrMemberAccess	env -> num_named		748343	0					
ANR	748417	Identifier	env		748343	0					
ANR	748418	Identifier	num_named		748343	1					
ANR	748419	PrimaryExpression	0		748343	1					
ANR	748420	ExpressionStatement	env -> mem_alloc = 0	939:2:21085:21111	748343	10	True				
ANR	748421	AssignmentExpression	env -> mem_alloc = 0		748343	0		=			
ANR	748422	PtrMemberAccess	env -> mem_alloc		748343	0					
ANR	748423	Identifier	env		748343	0					
ANR	748424	Identifier	mem_alloc		748343	1					
ANR	748425	PrimaryExpression	0		748343	1					
ANR	748426	ExpressionStatement	env -> mem_nodes_dynamic = ( Node * * ) NULL	940:2:21115:21153	748343	11	True				
ANR	748427	AssignmentExpression	env -> mem_nodes_dynamic = ( Node * * ) NULL		748343	0		=			
ANR	748428	PtrMemberAccess	env -> mem_nodes_dynamic		748343	0					
ANR	748429	Identifier	env		748343	0					
ANR	748430	Identifier	mem_nodes_dynamic		748343	1					
ANR	748431	CastExpression	( Node * * ) NULL		748343	1					
ANR	748432	CastTarget	Node * *		748343	0					
ANR	748433	Identifier	NULL		748343	1					
ANR	748434	ForStatement	for ( i = 0 ; i < SCANENV_MEMNODES_SIZE ; i ++ )		748343	12					
ANR	748435	ForInit	i = 0 ;	942:7:21163:21168	748343	0	True				
ANR	748436	AssignmentExpression	i = 0		748343	0		=			
ANR	748437	Identifier	i		748343	0					
ANR	748438	PrimaryExpression	0		748343	1					
ANR	748439	Condition	i < SCANENV_MEMNODES_SIZE	942:14:21170:21194	748343	1	True				
ANR	748440	RelationalExpression	i < SCANENV_MEMNODES_SIZE		748343	0		<			
ANR	748441	Identifier	i		748343	0					
ANR	748442	Identifier	SCANENV_MEMNODES_SIZE		748343	1					
ANR	748443	PostIncDecOperationExpression	i ++	942:41:21197:21199	748343	2	True				
ANR	748444	Identifier	i		748343	0					
ANR	748445	IncDec	++		748343	1					
ANR	748446	ExpressionStatement	env -> mem_nodes_static [ i ] = NULL_NODE	943:4:21206:21242	748343	3	True				
ANR	748447	AssignmentExpression	env -> mem_nodes_static [ i ] = NULL_NODE		748343	0		=			
ANR	748448	ArrayIndexing	env -> mem_nodes_static [ i ]		748343	0					
ANR	748449	PtrMemberAccess	env -> mem_nodes_static		748343	0					
ANR	748450	Identifier	env		748343	0					
ANR	748451	Identifier	mem_nodes_static		748343	1					
ANR	748452	Identifier	i		748343	1					
ANR	748453	Identifier	NULL_NODE		748343	1					
ANR	748454	ExpressionStatement	env -> num_comb_exp_check = 0	946:2:21286:21314	748343	13	True				
ANR	748455	AssignmentExpression	env -> num_comb_exp_check = 0		748343	0		=			
ANR	748456	PtrMemberAccess	env -> num_comb_exp_check		748343	0					
ANR	748457	Identifier	env		748343	0					
ANR	748458	Identifier	num_comb_exp_check		748343	1					
ANR	748459	PrimaryExpression	0		748343	1					
ANR	748460	ExpressionStatement	env -> comb_exp_max_regnum = 0	947:2:21318:21346	748343	14	True				
ANR	748461	AssignmentExpression	env -> comb_exp_max_regnum = 0		748343	0		=			
ANR	748462	PtrMemberAccess	env -> comb_exp_max_regnum		748343	0					
ANR	748463	Identifier	env		748343	0					
ANR	748464	Identifier	comb_exp_max_regnum		748343	1					
ANR	748465	PrimaryExpression	0		748343	1					
ANR	748466	ExpressionStatement	env -> curr_max_regnum = 0	948:2:21350:21378	748343	15	True				
ANR	748467	AssignmentExpression	env -> curr_max_regnum = 0		748343	0		=			
ANR	748468	PtrMemberAccess	env -> curr_max_regnum		748343	0					
ANR	748469	Identifier	env		748343	0					
ANR	748470	Identifier	curr_max_regnum		748343	1					
ANR	748471	PrimaryExpression	0		748343	1					
ANR	748472	ExpressionStatement	env -> has_recursion = 0	949:2:21382:21410	748343	16	True				
ANR	748473	AssignmentExpression	env -> has_recursion = 0		748343	0		=			
ANR	748474	PtrMemberAccess	env -> has_recursion		748343	0					
ANR	748475	Identifier	env		748343	0					
ANR	748476	Identifier	has_recursion		748343	1					
ANR	748477	PrimaryExpression	0		748343	1					
ANR	748478	ReturnType	static void		748343	1					
ANR	748479	Identifier	scan_env_clear		748343	2					
ANR	748480	ParameterList	ScanEnv * env		748343	3					
ANR	748481	Parameter	ScanEnv * env	924:15:20730:20741	748343	0	True				
ANR	748482	ParameterType	ScanEnv *		748343	0					
ANR	748483	Identifier	env		748343	1					
ANR	748484	CFGEntryNode	ENTRY		748343		True				
ANR	748485	CFGExitNode	EXIT		748343		True				
ANR	748486	Symbol	* * env		748343						
ANR	748487	Symbol	env -> bt_mem_start		748343						
ANR	748488	Symbol	env -> num_named		748343						
ANR	748489	Symbol	env -> num_comb_exp_check		748343						
ANR	748490	Symbol	env -> mem_alloc		748343						
ANR	748491	Symbol	SCANENV_MEMNODES_SIZE		748343						
ANR	748492	Symbol	env -> bt_mem_end		748343						
ANR	748493	Symbol	env -> error		748343						
ANR	748494	Symbol	env -> mem_nodes_static		748343						
ANR	748495	Symbol	env -> comb_exp_max_regnum		748343						
ANR	748496	Symbol	env -> curr_max_regnum		748343						
ANR	748497	Symbol	env -> capture_history		748343						
ANR	748498	Symbol	env -> backrefed_mem		748343						
ANR	748499	Symbol	NULL		748343						
ANR	748500	Symbol	* env		748343						
ANR	748501	Symbol	env -> num_mem		748343						
ANR	748502	Symbol	i		748343						
ANR	748503	Symbol	env		748343						
ANR	748504	Symbol	env -> error_end		748343						
ANR	748505	Symbol	env -> has_recursion		748343						
ANR	748506	Symbol	* i		748343						
ANR	748507	Symbol	env -> num_call		748343						
ANR	748508	Symbol	env -> mem_nodes_dynamic		748343						
ANR	748509	Symbol	NULL_NODE		748343						
ANR	748510	Symbol	* env -> mem_nodes_static		748343						
ANR	748511	Function	scan_env_add_mem_entry	953:0:21422:22168							
ANR	748512	FunctionDef	scan_env_add_mem_entry (ScanEnv * env)		748511	0					
ANR	748513	CompoundStatement		955:0:21470:22168	748511	0					
ANR	748514	IdentifierDeclStatement	"int i , need , alloc ;"	956:2:21474:21492	748511	0	True				
ANR	748515	IdentifierDecl	i		748511	0					
ANR	748516	IdentifierDeclType	int		748511	0					
ANR	748517	Identifier	i		748511	1					
ANR	748518	IdentifierDecl	need		748511	1					
ANR	748519	IdentifierDeclType	int		748511	0					
ANR	748520	Identifier	need		748511	1					
ANR	748521	IdentifierDecl	alloc		748511	2					
ANR	748522	IdentifierDeclType	int		748511	0					
ANR	748523	Identifier	alloc		748511	1					
ANR	748524	IdentifierDeclStatement	Node * * p ;	957:2:21496:21504	748511	1	True				
ANR	748525	IdentifierDecl	* * p		748511	0					
ANR	748526	IdentifierDeclType	Node * *		748511	0					
ANR	748527	Identifier	p		748511	1					
ANR	748528	ExpressionStatement	need = env -> num_mem + 1	959:2:21509:21532	748511	2	True				
ANR	748529	AssignmentExpression	need = env -> num_mem + 1		748511	0		=			
ANR	748530	Identifier	need		748511	0					
ANR	748531	AdditiveExpression	env -> num_mem + 1		748511	1		+			
ANR	748532	PtrMemberAccess	env -> num_mem		748511	0					
ANR	748533	Identifier	env		748511	0					
ANR	748534	Identifier	num_mem		748511	1					
ANR	748535	PrimaryExpression	1		748511	1					
ANR	748536	IfStatement	if ( need >= SCANENV_MEMNODES_SIZE )		748511	3					
ANR	748537	Condition	need >= SCANENV_MEMNODES_SIZE	960:6:21540:21568	748511	0	True				
ANR	748538	RelationalExpression	need >= SCANENV_MEMNODES_SIZE		748511	0		>=			
ANR	748539	Identifier	need		748511	0					
ANR	748540	Identifier	SCANENV_MEMNODES_SIZE		748511	1					
ANR	748541	CompoundStatement		6:37:100:100	748511	1					
ANR	748542	IfStatement	if ( env -> mem_alloc <= need )		748511	0					
ANR	748543	Condition	env -> mem_alloc <= need	961:8:21581:21602	748511	0	True				
ANR	748544	RelationalExpression	env -> mem_alloc <= need		748511	0		<=			
ANR	748545	PtrMemberAccess	env -> mem_alloc		748511	0					
ANR	748546	Identifier	env		748511	0					
ANR	748547	Identifier	mem_alloc		748511	1					
ANR	748548	Identifier	need		748511	1					
ANR	748549	CompoundStatement		7:32:134:134	748511	1					
ANR	748550	IfStatement	if ( IS_NULL ( env -> mem_nodes_dynamic ) )		748511	0					
ANR	748551	Condition	IS_NULL ( env -> mem_nodes_dynamic )	962:10:21617:21647	748511	0	True				
ANR	748552	CallExpression	IS_NULL ( env -> mem_nodes_dynamic )		748511	0					
ANR	748553	Callee	IS_NULL		748511	0					
ANR	748554	Identifier	IS_NULL		748511	0					
ANR	748555	ArgumentList	env -> mem_nodes_dynamic		748511	1					
ANR	748556	Argument	env -> mem_nodes_dynamic		748511	0					
ANR	748557	PtrMemberAccess	env -> mem_nodes_dynamic		748511	0					
ANR	748558	Identifier	env		748511	0					
ANR	748559	Identifier	mem_nodes_dynamic		748511	1					
ANR	748560	CompoundStatement		8:43:179:179	748511	1					
ANR	748561	ExpressionStatement	alloc = INIT_SCANENV_MEMNODES_ALLOC_SIZE	963:1:21653:21693	748511	0	True				
ANR	748562	AssignmentExpression	alloc = INIT_SCANENV_MEMNODES_ALLOC_SIZE		748511	0		=			
ANR	748563	Identifier	alloc		748511	0					
ANR	748564	Identifier	INIT_SCANENV_MEMNODES_ALLOC_SIZE		748511	1					
ANR	748565	ExpressionStatement	p = ( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )	964:1:21696:21739	748511	1	True				
ANR	748566	AssignmentExpression	p = ( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )		748511	0		=			
ANR	748567	Identifier	p		748511	0					
ANR	748568	CastExpression	( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )		748511	1					
ANR	748569	CastTarget	Node * *		748511	0					
ANR	748570	CallExpression	xmalloc ( sizeof ( Node * ) * alloc )		748511	1					
ANR	748571	Callee	xmalloc		748511	0					
ANR	748572	Identifier	xmalloc		748511	0					
ANR	748573	ArgumentList	sizeof ( Node * ) * alloc		748511	1					
ANR	748574	Argument	sizeof ( Node * ) * alloc		748511	0					
ANR	748575	MultiplicativeExpression	sizeof ( Node * ) * alloc		748511	0		*			
ANR	748576	SizeofExpression	sizeof ( Node * )		748511	0					
ANR	748577	Sizeof	sizeof		748511	0					
ANR	748578	SizeofOperand	Node *		748511	1					
ANR	748579	Identifier	alloc		748511	1					
ANR	748580	ExpressionStatement	"xmemcpy ( p , env -> mem_nodes_static , sizeof ( Node * ) * SCANENV_MEMNODES_SIZE )"	965:1:21742:21816	748511	2	True				
ANR	748581	CallExpression	"xmemcpy ( p , env -> mem_nodes_static , sizeof ( Node * ) * SCANENV_MEMNODES_SIZE )"		748511	0					
ANR	748582	Callee	xmemcpy		748511	0					
ANR	748583	Identifier	xmemcpy		748511	0					
ANR	748584	ArgumentList	p		748511	1					
ANR	748585	Argument	p		748511	0					
ANR	748586	Identifier	p		748511	0					
ANR	748587	Argument	env -> mem_nodes_static		748511	1					
ANR	748588	PtrMemberAccess	env -> mem_nodes_static		748511	0					
ANR	748589	Identifier	env		748511	0					
ANR	748590	Identifier	mem_nodes_static		748511	1					
ANR	748591	Argument	sizeof ( Node * ) * SCANENV_MEMNODES_SIZE		748511	2					
ANR	748592	MultiplicativeExpression	sizeof ( Node * ) * SCANENV_MEMNODES_SIZE		748511	0		*			
ANR	748593	SizeofExpression	sizeof ( Node * )		748511	0					
ANR	748594	Sizeof	sizeof		748511	0					
ANR	748595	SizeofOperand	Node *		748511	1					
ANR	748596	Identifier	SCANENV_MEMNODES_SIZE		748511	1					
ANR	748597	ElseStatement	else		748511	0					
ANR	748598	CompoundStatement		14:11:366:366	748511	0					
ANR	748599	ExpressionStatement	alloc = env -> mem_alloc * 2	969:1:21840:21866	748511	0	True				
ANR	748600	AssignmentExpression	alloc = env -> mem_alloc * 2		748511	0		=			
ANR	748601	Identifier	alloc		748511	0					
ANR	748602	MultiplicativeExpression	env -> mem_alloc * 2		748511	1		*			
ANR	748603	PtrMemberAccess	env -> mem_alloc		748511	0					
ANR	748604	Identifier	env		748511	0					
ANR	748605	Identifier	mem_alloc		748511	1					
ANR	748606	PrimaryExpression	2		748511	1					
ANR	748607	ExpressionStatement	"p = ( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"	970:1:21869:21937	748511	1	True				
ANR	748608	AssignmentExpression	"p = ( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		748511	0		=			
ANR	748609	Identifier	p		748511	0					
ANR	748610	CastExpression	"( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		748511	1					
ANR	748611	CastTarget	Node * *		748511	0					
ANR	748612	CallExpression	"xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		748511	1					
ANR	748613	Callee	xrealloc		748511	0					
ANR	748614	Identifier	xrealloc		748511	0					
ANR	748615	ArgumentList	env -> mem_nodes_dynamic		748511	1					
ANR	748616	Argument	env -> mem_nodes_dynamic		748511	0					
ANR	748617	PtrMemberAccess	env -> mem_nodes_dynamic		748511	0					
ANR	748618	Identifier	env		748511	0					
ANR	748619	Identifier	mem_nodes_dynamic		748511	1					
ANR	748620	Argument	sizeof ( Node * ) * alloc		748511	1					
ANR	748621	MultiplicativeExpression	sizeof ( Node * ) * alloc		748511	0		*			
ANR	748622	SizeofExpression	sizeof ( Node * )		748511	0					
ANR	748623	Sizeof	sizeof		748511	0					
ANR	748624	SizeofOperand	Node *		748511	1					
ANR	748625	Identifier	alloc		748511	1					
ANR	748626	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	972:6:21953:21980	748511	1	True				
ANR	748627	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		748511	0					
ANR	748628	Callee	CHECK_NULL_RETURN_MEMERR		748511	0					
ANR	748629	Identifier	CHECK_NULL_RETURN_MEMERR		748511	0					
ANR	748630	ArgumentList	p		748511	1					
ANR	748631	Argument	p		748511	0					
ANR	748632	Identifier	p		748511	0					
ANR	748633	ForStatement	for ( i = env -> num_mem + 1 ; i < alloc ; i ++ )		748511	2					
ANR	748634	ForInit	i = env -> num_mem + 1 ;	974:11:21994:22014	748511	0	True				
ANR	748635	AssignmentExpression	i = env -> num_mem + 1		748511	0		=			
ANR	748636	Identifier	i		748511	0					
ANR	748637	AdditiveExpression	env -> num_mem + 1		748511	1		+			
ANR	748638	PtrMemberAccess	env -> num_mem		748511	0					
ANR	748639	Identifier	env		748511	0					
ANR	748640	Identifier	num_mem		748511	1					
ANR	748641	PrimaryExpression	1		748511	1					
ANR	748642	Condition	i < alloc	974:33:22016:22024	748511	1	True				
ANR	748643	RelationalExpression	i < alloc		748511	0		<			
ANR	748644	Identifier	i		748511	0					
ANR	748645	Identifier	alloc		748511	1					
ANR	748646	PostIncDecOperationExpression	i ++	974:44:22027:22029	748511	2	True				
ANR	748647	Identifier	i		748511	0					
ANR	748648	IncDec	++		748511	1					
ANR	748649	ExpressionStatement	p [ i ] = NULL_NODE	975:1:22033:22049	748511	3	True				
ANR	748650	AssignmentExpression	p [ i ] = NULL_NODE		748511	0		=			
ANR	748651	ArrayIndexing	p [ i ]		748511	0					
ANR	748652	Identifier	p		748511	0					
ANR	748653	Identifier	i		748511	1					
ANR	748654	Identifier	NULL_NODE		748511	1					
ANR	748655	ExpressionStatement	env -> mem_nodes_dynamic = p	977:6:22058:22084	748511	3	True				
ANR	748656	AssignmentExpression	env -> mem_nodes_dynamic = p		748511	0		=			
ANR	748657	PtrMemberAccess	env -> mem_nodes_dynamic		748511	0					
ANR	748658	Identifier	env		748511	0					
ANR	748659	Identifier	mem_nodes_dynamic		748511	1					
ANR	748660	Identifier	p		748511	1					
ANR	748661	ExpressionStatement	env -> mem_alloc = alloc	978:6:22092:22114	748511	4	True				
ANR	748662	AssignmentExpression	env -> mem_alloc = alloc		748511	0		=			
ANR	748663	PtrMemberAccess	env -> mem_alloc		748511	0					
ANR	748664	Identifier	env		748511	0					
ANR	748665	Identifier	mem_alloc		748511	1					
ANR	748666	Identifier	alloc		748511	1					
ANR	748667	ExpressionStatement	env -> num_mem ++	982:2:22129:22143	748511	4	True				
ANR	748668	PostIncDecOperationExpression	env -> num_mem ++		748511	0					
ANR	748669	PtrMemberAccess	env -> num_mem		748511	0					
ANR	748670	Identifier	env		748511	0					
ANR	748671	Identifier	num_mem		748511	1					
ANR	748672	IncDec	++		748511	1					
ANR	748673	ReturnStatement	return env -> num_mem ;	983:2:22147:22166	748511	5	True				
ANR	748674	PtrMemberAccess	env -> num_mem		748511	0					
ANR	748675	Identifier	env		748511	0					
ANR	748676	Identifier	num_mem		748511	1					
ANR	748677	ReturnType	static int		748511	1					
ANR	748678	Identifier	scan_env_add_mem_entry		748511	2					
ANR	748679	ParameterList	ScanEnv * env		748511	3					
ANR	748680	Parameter	ScanEnv * env	954:23:21456:21467	748511	0	True				
ANR	748681	ParameterType	ScanEnv *		748511	0					
ANR	748682	Identifier	env		748511	1					
ANR	748683	CFGEntryNode	ENTRY		748511		True				
ANR	748684	CFGExitNode	EXIT		748511		True				
ANR	748685	Symbol	need		748511						
ANR	748686	Symbol	env -> num_mem		748511						
ANR	748687	Symbol	* env		748511						
ANR	748688	Symbol	i		748511						
ANR	748689	Symbol	env		748511						
ANR	748690	Symbol	env -> mem_alloc		748511						
ANR	748691	Symbol	INIT_SCANENV_MEMNODES_ALLOC_SIZE		748511						
ANR	748692	Symbol	SCANENV_MEMNODES_SIZE		748511						
ANR	748693	Symbol	p		748511						
ANR	748694	Symbol	* i		748511						
ANR	748695	Symbol	IS_NULL		748511						
ANR	748696	Symbol	xmalloc		748511						
ANR	748697	Symbol	env -> mem_nodes_static		748511						
ANR	748698	Symbol	env -> mem_nodes_dynamic		748511						
ANR	748699	Symbol	* p		748511						
ANR	748700	Symbol	alloc		748511						
ANR	748701	Symbol	xrealloc		748511						
ANR	748702	Symbol	NULL_NODE		748511						
ANR	748703	Function	scan_env_set_mem_node	986:0:22171:22358							
ANR	748704	FunctionDef	"scan_env_set_mem_node (ScanEnv * env , int num , Node * node)"		748703	0					
ANR	748705	CompoundStatement		988:0:22239:22358	748703	0					
ANR	748706	IfStatement	if ( env -> num_mem >= num )		748703	0					
ANR	748707	Condition	env -> num_mem >= num	989:6:22247:22265	748703	0	True				
ANR	748708	RelationalExpression	env -> num_mem >= num		748703	0		>=			
ANR	748709	PtrMemberAccess	env -> num_mem		748703	0					
ANR	748710	Identifier	env		748703	0					
ANR	748711	Identifier	num_mem		748703	1					
ANR	748712	Identifier	num		748703	1					
ANR	748713	ExpressionStatement	SCANENV_MEM_NODES ( env ) [ num ] = node	990:4:22272:22306	748703	1	True				
ANR	748714	AssignmentExpression	SCANENV_MEM_NODES ( env ) [ num ] = node		748703	0		=			
ANR	748715	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ num ]		748703	0					
ANR	748716	CallExpression	SCANENV_MEM_NODES ( env )		748703	0					
ANR	748717	Callee	SCANENV_MEM_NODES		748703	0					
ANR	748718	Identifier	SCANENV_MEM_NODES		748703	0					
ANR	748719	ArgumentList	env		748703	1					
ANR	748720	Argument	env		748703	0					
ANR	748721	Identifier	env		748703	0					
ANR	748722	Identifier	num		748703	1					
ANR	748723	Identifier	node		748703	1					
ANR	748724	ElseStatement	else		748703	0					
ANR	748725	ReturnStatement	return ONIGERR_PARSER_BUG ;	992:4:22319:22344	748703	0	True				
ANR	748726	Identifier	ONIGERR_PARSER_BUG		748703	0					
ANR	748727	ReturnStatement	return 0 ;	993:2:22348:22356	748703	1	True				
ANR	748728	PrimaryExpression	0		748703	0					
ANR	748729	ReturnType	static int		748703	1					
ANR	748730	Identifier	scan_env_set_mem_node		748703	2					
ANR	748731	ParameterList	"ScanEnv * env , int num , Node * node"		748703	3					
ANR	748732	Parameter	ScanEnv * env	987:22:22204:22215	748703	0	True				
ANR	748733	ParameterType	ScanEnv *		748703	0					
ANR	748734	Identifier	env		748703	1					
ANR	748735	Parameter	int num	987:36:22218:22224	748703	1	True				
ANR	748736	ParameterType	int		748703	0					
ANR	748737	Identifier	num		748703	1					
ANR	748738	Parameter	Node * node	987:45:22227:22236	748703	2	True				
ANR	748739	ParameterType	Node *		748703	0					
ANR	748740	Identifier	node		748703	1					
ANR	748741	CFGEntryNode	ENTRY		748703		True				
ANR	748742	CFGExitNode	EXIT		748703		True				
ANR	748743	Symbol	* SCANENV_MEM_NODES		748703						
ANR	748744	Symbol	* num		748703						
ANR	748745	Symbol	node		748703						
ANR	748746	Symbol	num		748703						
ANR	748747	Symbol	* env		748703						
ANR	748748	Symbol	env -> num_mem		748703						
ANR	748749	Symbol	SCANENV_MEM_NODES		748703						
ANR	748750	Symbol	env		748703						
ANR	748751	Symbol	ONIGERR_PARSER_BUG		748703						
ANR	748752	ClassDef	_FreeNode	998:8:22405:22460							
ANR	748753	DeclStmt									
ANR	748754	Decl							struct _FreeNode	struct _FreeNode *	next
ANR	748755	DeclStmt									
ANR	748756	Decl							_FreeNode	_FreeNode	FreeNode
ANR	748757	DeclStmt									
ANR	748758	Decl							FreeNode	FreeNode *	FreeNodeList
ANR	748759	Function	onig_node_free	1005:0:22521:23982							
ANR	748760	FunctionDef	onig_node_free (Node * node)		748759	0					
ANR	748761	CompoundStatement		1007:0:22560:23982	748759	0					
ANR	748762	Label	start :	1008:1:22563:22568	748759	0	True				
ANR	748763	Identifier	start		748759	0					
ANR	748764	IfStatement	if ( IS_NULL ( node ) )		748759	1					
ANR	748765	Condition	IS_NULL ( node )	1009:6:22576:22588	748759	0	True				
ANR	748766	CallExpression	IS_NULL ( node )		748759	0					
ANR	748767	Callee	IS_NULL		748759	0					
ANR	748768	Identifier	IS_NULL		748759	0					
ANR	748769	ArgumentList	node		748759	1					
ANR	748770	Argument	node		748759	0					
ANR	748771	Identifier	node		748759	0					
ANR	748772	ReturnStatement	return ;	1009:21:22591:22598	748759	1	True				
ANR	748773	SwitchStatement	switch ( NTYPE ( node ) )		748759	2					
ANR	748774	Condition	NTYPE ( node )	1011:10:22611:22621	748759	0	True				
ANR	748775	CallExpression	NTYPE ( node )		748759	0					
ANR	748776	Callee	NTYPE		748759	0					
ANR	748777	Identifier	NTYPE		748759	0					
ANR	748778	ArgumentList	node		748759	1					
ANR	748779	Argument	node		748759	0					
ANR	748780	Identifier	node		748759	0					
ANR	748781	CompoundStatement		5:23:63:63	748759	1					
ANR	748782	Label	case NT_STR :	1012:2:22628:22639	748759	0	True				
ANR	748783	Identifier	NT_STR		748759	0					
ANR	748784	IfStatement	if ( NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf )		748759	1					
ANR	748785	Condition	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf	1013:8:22649:22736	748759	0	True				
ANR	748786	AndExpression	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		748759	0		&&			
ANR	748787	EqualityExpression	NSTR ( node ) -> capa != 0		748759	0		!=			
ANR	748788	PtrMemberAccess	NSTR ( node ) -> capa		748759	0					
ANR	748789	CallExpression	NSTR ( node )		748759	0					
ANR	748790	Callee	NSTR		748759	0					
ANR	748791	Identifier	NSTR		748759	0					
ANR	748792	ArgumentList	node		748759	1					
ANR	748793	Argument	node		748759	0					
ANR	748794	Identifier	node		748759	0					
ANR	748795	Identifier	capa		748759	1					
ANR	748796	PrimaryExpression	0		748759	1					
ANR	748797	AndExpression	IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		748759	1		&&			
ANR	748798	CallExpression	IS_NOT_NULL ( NSTR ( node ) -> s )		748759	0					
ANR	748799	Callee	IS_NOT_NULL		748759	0					
ANR	748800	Identifier	IS_NOT_NULL		748759	0					
ANR	748801	ArgumentList	NSTR ( node ) -> s		748759	1					
ANR	748802	Argument	NSTR ( node ) -> s		748759	0					
ANR	748803	PtrMemberAccess	NSTR ( node ) -> s		748759	0					
ANR	748804	CallExpression	NSTR ( node )		748759	0					
ANR	748805	Callee	NSTR		748759	0					
ANR	748806	Identifier	NSTR		748759	0					
ANR	748807	ArgumentList	node		748759	1					
ANR	748808	Argument	node		748759	0					
ANR	748809	Identifier	node		748759	0					
ANR	748810	Identifier	s		748759	1					
ANR	748811	EqualityExpression	NSTR ( node ) -> s != NSTR ( node ) -> buf		748759	1		!=			
ANR	748812	PtrMemberAccess	NSTR ( node ) -> s		748759	0					
ANR	748813	CallExpression	NSTR ( node )		748759	0					
ANR	748814	Callee	NSTR		748759	0					
ANR	748815	Identifier	NSTR		748759	0					
ANR	748816	ArgumentList	node		748759	1					
ANR	748817	Argument	node		748759	0					
ANR	748818	Identifier	node		748759	0					
ANR	748819	Identifier	s		748759	1					
ANR	748820	PtrMemberAccess	NSTR ( node ) -> buf		748759	1					
ANR	748821	CallExpression	NSTR ( node )		748759	0					
ANR	748822	Callee	NSTR		748759	0					
ANR	748823	Identifier	NSTR		748759	0					
ANR	748824	ArgumentList	node		748759	1					
ANR	748825	Argument	node		748759	0					
ANR	748826	Identifier	node		748759	0					
ANR	748827	Identifier	buf		748759	1					
ANR	748828	CompoundStatement		8:65:178:178	748759	1					
ANR	748829	ExpressionStatement	xfree ( NSTR ( node ) -> s )	1015:6:22747:22767	748759	0	True				
ANR	748830	CallExpression	xfree ( NSTR ( node ) -> s )		748759	0					
ANR	748831	Callee	xfree		748759	0					
ANR	748832	Identifier	xfree		748759	0					
ANR	748833	ArgumentList	NSTR ( node ) -> s		748759	1					
ANR	748834	Argument	NSTR ( node ) -> s		748759	0					
ANR	748835	PtrMemberAccess	NSTR ( node ) -> s		748759	0					
ANR	748836	CallExpression	NSTR ( node )		748759	0					
ANR	748837	Callee	NSTR		748759	0					
ANR	748838	Identifier	NSTR		748759	0					
ANR	748839	ArgumentList	node		748759	1					
ANR	748840	Argument	node		748759	0					
ANR	748841	Identifier	node		748759	0					
ANR	748842	Identifier	s		748759	1					
ANR	748843	BreakStatement	break ;	1017:4:22779:22784	748759	2	True				
ANR	748844	Label	case NT_LIST :	1019:2:22789:22801	748759	3	True				
ANR	748845	Identifier	NT_LIST		748759	0					
ANR	748846	Label	case NT_ALT :	1020:2:22805:22816	748759	4	True				
ANR	748847	Identifier	NT_ALT		748759	0					
ANR	748848	ExpressionStatement	onig_node_free ( NCAR ( node ) )	1021:4:22822:22848	748759	5	True				
ANR	748849	CallExpression	onig_node_free ( NCAR ( node ) )		748759	0					
ANR	748850	Callee	onig_node_free		748759	0					
ANR	748851	Identifier	onig_node_free		748759	0					
ANR	748852	ArgumentList	NCAR ( node )		748759	1					
ANR	748853	Argument	NCAR ( node )		748759	0					
ANR	748854	CallExpression	NCAR ( node )		748759	0					
ANR	748855	Callee	NCAR		748759	0					
ANR	748856	Identifier	NCAR		748759	0					
ANR	748857	ArgumentList	node		748759	1					
ANR	748858	Argument	node		748759	0					
ANR	748859	Identifier	node		748759	0					
ANR	748860	CompoundStatement		17:6:301:329	748759	6					
ANR	748861	IdentifierDeclStatement	Node * next_node = NCDR ( node ) ;	1023:6:22862:22890	748759	0	True				
ANR	748862	IdentifierDecl	* next_node = NCDR ( node )		748759	0					
ANR	748863	IdentifierDeclType	Node *		748759	0					
ANR	748864	Identifier	next_node		748759	1					
ANR	748865	AssignmentExpression	* next_node = NCDR ( node )		748759	2		=			
ANR	748866	Identifier	next_node		748759	0					
ANR	748867	CallExpression	NCDR ( node )		748759	1					
ANR	748868	Callee	NCDR		748759	0					
ANR	748869	Identifier	NCDR		748759	0					
ANR	748870	ArgumentList	node		748759	1					
ANR	748871	Argument	node		748759	0					
ANR	748872	Identifier	node		748759	0					
ANR	748873	CompoundStatement		21:1:376:406	748759	1					
ANR	748874	IdentifierDeclStatement	FreeNode * n = ( FreeNode * ) node ;	1027:1:22937:22967	748759	0	True				
ANR	748875	IdentifierDecl	* n = ( FreeNode * ) node		748759	0					
ANR	748876	IdentifierDeclType	FreeNode *		748759	0					
ANR	748877	Identifier	n		748759	1					
ANR	748878	AssignmentExpression	* n = ( FreeNode * ) node		748759	2		=			
ANR	748879	Identifier	n		748759	0					
ANR	748880	CastExpression	( FreeNode * ) node		748759	1					
ANR	748881	CastTarget	FreeNode *		748759	0					
ANR	748882	Identifier	node		748759	1					
ANR	748883	ExpressionStatement	THREAD_ATOMIC_START	1029:8:22978:22997	748759	1	True				
ANR	748884	Identifier	THREAD_ATOMIC_START		748759	0					
ANR	748885	ExpressionStatement	n -> next = FreeNodeList	1030:1:23000:23022	748759	2	True				
ANR	748886	AssignmentExpression	n -> next = FreeNodeList		748759	0		=			
ANR	748887	PtrMemberAccess	n -> next		748759	0					
ANR	748888	Identifier	n		748759	0					
ANR	748889	Identifier	next		748759	1					
ANR	748890	Identifier	FreeNodeList		748759	1					
ANR	748891	ExpressionStatement	FreeNodeList = n	1031:1:23025:23041	748759	3	True				
ANR	748892	AssignmentExpression	FreeNodeList = n		748759	0		=			
ANR	748893	Identifier	FreeNodeList		748759	0					
ANR	748894	Identifier	n		748759	1					
ANR	748895	ExpressionStatement	THREAD_ATOMIC_END	1032:8:23051:23068	748759	4	True				
ANR	748896	Identifier	THREAD_ATOMIC_END		748759	0					
ANR	748897	ExpressionStatement	node = next_node	1037:6:23116:23132	748759	2	True				
ANR	748898	AssignmentExpression	node = next_node		748759	0		=			
ANR	748899	Identifier	node		748759	0					
ANR	748900	Identifier	next_node		748759	1					
ANR	748901	GotoStatement	goto start ;	1038:6:23140:23150	748759	3	True				
ANR	748902	Identifier	start		748759	0					
ANR	748903	BreakStatement	break ;	1040:4:23162:23167	748759	7	True				
ANR	748904	Label	case NT_CCLASS :	1042:2:23172:23186	748759	8	True				
ANR	748905	Identifier	NT_CCLASS		748759	0					
ANR	748906	CompoundStatement		38:6:639:669	748759	9					
ANR	748907	IdentifierDeclStatement	CClassNode * cc = NCCLASS ( node ) ;	1044:6:23200:23230	748759	0	True				
ANR	748908	IdentifierDecl	* cc = NCCLASS ( node )		748759	0					
ANR	748909	IdentifierDeclType	CClassNode *		748759	0					
ANR	748910	Identifier	cc		748759	1					
ANR	748911	AssignmentExpression	* cc = NCCLASS ( node )		748759	2		=			
ANR	748912	Identifier	cc		748759	0					
ANR	748913	CallExpression	NCCLASS ( node )		748759	1					
ANR	748914	Callee	NCCLASS		748759	0					
ANR	748915	Identifier	NCCLASS		748759	0					
ANR	748916	ArgumentList	node		748759	1					
ANR	748917	Argument	node		748759	0					
ANR	748918	Identifier	node		748759	0					
ANR	748919	IfStatement	if ( IS_NCCLASS_SHARE ( cc ) )		748759	1					
ANR	748920	Condition	IS_NCCLASS_SHARE ( cc )	1046:10:23243:23262	748759	0	True				
ANR	748921	CallExpression	IS_NCCLASS_SHARE ( cc )		748759	0					
ANR	748922	Callee	IS_NCCLASS_SHARE		748759	0					
ANR	748923	Identifier	IS_NCCLASS_SHARE		748759	0					
ANR	748924	ArgumentList	cc		748759	1					
ANR	748925	Argument	cc		748759	0					
ANR	748926	Identifier	cc		748759	0					
ANR	748927	ReturnStatement	return ;	1046:32:23265:23272	748759	1	True				
ANR	748928	IfStatement	if ( cc -> mbuf )		748759	2					
ANR	748929	Condition	cc -> mbuf	1047:10:23284:23291	748759	0	True				
ANR	748930	PtrMemberAccess	cc -> mbuf		748759	0					
ANR	748931	Identifier	cc		748759	0					
ANR	748932	Identifier	mbuf		748759	1					
ANR	748933	ExpressionStatement	bbuf_free ( cc -> mbuf )	1048:8:23302:23321	748759	1	True				
ANR	748934	CallExpression	bbuf_free ( cc -> mbuf )		748759	0					
ANR	748935	Callee	bbuf_free		748759	0					
ANR	748936	Identifier	bbuf_free		748759	0					
ANR	748937	ArgumentList	cc -> mbuf		748759	1					
ANR	748938	Argument	cc -> mbuf		748759	0					
ANR	748939	PtrMemberAccess	cc -> mbuf		748759	0					
ANR	748940	Identifier	cc		748759	0					
ANR	748941	Identifier	mbuf		748759	1					
ANR	748942	BreakStatement	break ;	1050:4:23333:23338	748759	10	True				
ANR	748943	Label	case NT_QTFR :	1052:2:23343:23355	748759	11	True				
ANR	748944	Identifier	NT_QTFR		748759	0					
ANR	748945	IfStatement	if ( NQTFR ( node ) -> target )		748759	12					
ANR	748946	Condition	NQTFR ( node ) -> target	1053:8:23365:23383	748759	0	True				
ANR	748947	PtrMemberAccess	NQTFR ( node ) -> target		748759	0					
ANR	748948	CallExpression	NQTFR ( node )		748759	0					
ANR	748949	Callee	NQTFR		748759	0					
ANR	748950	Identifier	NQTFR		748759	0					
ANR	748951	ArgumentList	node		748759	1					
ANR	748952	Argument	node		748759	0					
ANR	748953	Identifier	node		748759	0					
ANR	748954	Identifier	target		748759	1					
ANR	748955	ExpressionStatement	onig_node_free ( NQTFR ( node ) -> target )	1054:6:23392:23427	748759	1	True				
ANR	748956	CallExpression	onig_node_free ( NQTFR ( node ) -> target )		748759	0					
ANR	748957	Callee	onig_node_free		748759	0					
ANR	748958	Identifier	onig_node_free		748759	0					
ANR	748959	ArgumentList	NQTFR ( node ) -> target		748759	1					
ANR	748960	Argument	NQTFR ( node ) -> target		748759	0					
ANR	748961	PtrMemberAccess	NQTFR ( node ) -> target		748759	0					
ANR	748962	CallExpression	NQTFR ( node )		748759	0					
ANR	748963	Callee	NQTFR		748759	0					
ANR	748964	Identifier	NQTFR		748759	0					
ANR	748965	ArgumentList	node		748759	1					
ANR	748966	Argument	node		748759	0					
ANR	748967	Identifier	node		748759	0					
ANR	748968	Identifier	target		748759	1					
ANR	748969	BreakStatement	break ;	1055:4:23433:23438	748759	13	True				
ANR	748970	Label	case NT_ENCLOSE :	1057:2:23443:23458	748759	14	True				
ANR	748971	Identifier	NT_ENCLOSE		748759	0					
ANR	748972	IfStatement	if ( NENCLOSE ( node ) -> target )		748759	15					
ANR	748973	Condition	NENCLOSE ( node ) -> target	1058:8:23468:23489	748759	0	True				
ANR	748974	PtrMemberAccess	NENCLOSE ( node ) -> target		748759	0					
ANR	748975	CallExpression	NENCLOSE ( node )		748759	0					
ANR	748976	Callee	NENCLOSE		748759	0					
ANR	748977	Identifier	NENCLOSE		748759	0					
ANR	748978	ArgumentList	node		748759	1					
ANR	748979	Argument	node		748759	0					
ANR	748980	Identifier	node		748759	0					
ANR	748981	Identifier	target		748759	1					
ANR	748982	ExpressionStatement	onig_node_free ( NENCLOSE ( node ) -> target )	1059:6:23498:23536	748759	1	True				
ANR	748983	CallExpression	onig_node_free ( NENCLOSE ( node ) -> target )		748759	0					
ANR	748984	Callee	onig_node_free		748759	0					
ANR	748985	Identifier	onig_node_free		748759	0					
ANR	748986	ArgumentList	NENCLOSE ( node ) -> target		748759	1					
ANR	748987	Argument	NENCLOSE ( node ) -> target		748759	0					
ANR	748988	PtrMemberAccess	NENCLOSE ( node ) -> target		748759	0					
ANR	748989	CallExpression	NENCLOSE ( node )		748759	0					
ANR	748990	Callee	NENCLOSE		748759	0					
ANR	748991	Identifier	NENCLOSE		748759	0					
ANR	748992	ArgumentList	node		748759	1					
ANR	748993	Argument	node		748759	0					
ANR	748994	Identifier	node		748759	0					
ANR	748995	Identifier	target		748759	1					
ANR	748996	BreakStatement	break ;	1060:4:23542:23547	748759	16	True				
ANR	748997	Label	case NT_BREF :	1062:2:23552:23564	748759	17	True				
ANR	748998	Identifier	NT_BREF		748759	0					
ANR	748999	IfStatement	if ( IS_NOT_NULL ( NBREF ( node ) -> back_dynamic ) )		748759	18					
ANR	749000	Condition	IS_NOT_NULL ( NBREF ( node ) -> back_dynamic )	1063:8:23574:23611	748759	0	True				
ANR	749001	CallExpression	IS_NOT_NULL ( NBREF ( node ) -> back_dynamic )		748759	0					
ANR	749002	Callee	IS_NOT_NULL		748759	0					
ANR	749003	Identifier	IS_NOT_NULL		748759	0					
ANR	749004	ArgumentList	NBREF ( node ) -> back_dynamic		748759	1					
ANR	749005	Argument	NBREF ( node ) -> back_dynamic		748759	0					
ANR	749006	PtrMemberAccess	NBREF ( node ) -> back_dynamic		748759	0					
ANR	749007	CallExpression	NBREF ( node )		748759	0					
ANR	749008	Callee	NBREF		748759	0					
ANR	749009	Identifier	NBREF		748759	0					
ANR	749010	ArgumentList	node		748759	1					
ANR	749011	Argument	node		748759	0					
ANR	749012	Identifier	node		748759	0					
ANR	749013	Identifier	back_dynamic		748759	1					
ANR	749014	ExpressionStatement	xfree ( NBREF ( node ) -> back_dynamic )	1064:6:23620:23652	748759	1	True				
ANR	749015	CallExpression	xfree ( NBREF ( node ) -> back_dynamic )		748759	0					
ANR	749016	Callee	xfree		748759	0					
ANR	749017	Identifier	xfree		748759	0					
ANR	749018	ArgumentList	NBREF ( node ) -> back_dynamic		748759	1					
ANR	749019	Argument	NBREF ( node ) -> back_dynamic		748759	0					
ANR	749020	PtrMemberAccess	NBREF ( node ) -> back_dynamic		748759	0					
ANR	749021	CallExpression	NBREF ( node )		748759	0					
ANR	749022	Callee	NBREF		748759	0					
ANR	749023	Identifier	NBREF		748759	0					
ANR	749024	ArgumentList	node		748759	1					
ANR	749025	Argument	node		748759	0					
ANR	749026	Identifier	node		748759	0					
ANR	749027	Identifier	back_dynamic		748759	1					
ANR	749028	BreakStatement	break ;	1065:4:23658:23663	748759	19	True				
ANR	749029	Label	case NT_ANCHOR :	1067:2:23668:23682	748759	20	True				
ANR	749030	Identifier	NT_ANCHOR		748759	0					
ANR	749031	IfStatement	if ( NANCHOR ( node ) -> target )		748759	21					
ANR	749032	Condition	NANCHOR ( node ) -> target	1068:8:23692:23712	748759	0	True				
ANR	749033	PtrMemberAccess	NANCHOR ( node ) -> target		748759	0					
ANR	749034	CallExpression	NANCHOR ( node )		748759	0					
ANR	749035	Callee	NANCHOR		748759	0					
ANR	749036	Identifier	NANCHOR		748759	0					
ANR	749037	ArgumentList	node		748759	1					
ANR	749038	Argument	node		748759	0					
ANR	749039	Identifier	node		748759	0					
ANR	749040	Identifier	target		748759	1					
ANR	749041	ExpressionStatement	onig_node_free ( NANCHOR ( node ) -> target )	1069:6:23721:23758	748759	1	True				
ANR	749042	CallExpression	onig_node_free ( NANCHOR ( node ) -> target )		748759	0					
ANR	749043	Callee	onig_node_free		748759	0					
ANR	749044	Identifier	onig_node_free		748759	0					
ANR	749045	ArgumentList	NANCHOR ( node ) -> target		748759	1					
ANR	749046	Argument	NANCHOR ( node ) -> target		748759	0					
ANR	749047	PtrMemberAccess	NANCHOR ( node ) -> target		748759	0					
ANR	749048	CallExpression	NANCHOR ( node )		748759	0					
ANR	749049	Callee	NANCHOR		748759	0					
ANR	749050	Identifier	NANCHOR		748759	0					
ANR	749051	ArgumentList	node		748759	1					
ANR	749052	Argument	node		748759	0					
ANR	749053	Identifier	node		748759	0					
ANR	749054	Identifier	target		748759	1					
ANR	749055	BreakStatement	break ;	1070:4:23764:23769	748759	22	True				
ANR	749056	CompoundStatement		69:4:1258:1288	748759	3					
ANR	749057	IdentifierDeclStatement	FreeNode * n = ( FreeNode * ) node ;	1075:4:23819:23849	748759	0	True				
ANR	749058	IdentifierDecl	* n = ( FreeNode * ) node		748759	0					
ANR	749059	IdentifierDeclType	FreeNode *		748759	0					
ANR	749060	Identifier	n		748759	1					
ANR	749061	AssignmentExpression	* n = ( FreeNode * ) node		748759	2		=			
ANR	749062	Identifier	n		748759	0					
ANR	749063	CastExpression	( FreeNode * ) node		748759	1					
ANR	749064	CastTarget	FreeNode *		748759	0					
ANR	749065	Identifier	node		748759	1					
ANR	749066	ExpressionStatement	THREAD_ATOMIC_START	1077:4:23856:23875	748759	1	True				
ANR	749067	Identifier	THREAD_ATOMIC_START		748759	0					
ANR	749068	ExpressionStatement	n -> next = FreeNodeList	1078:4:23881:23903	748759	2	True				
ANR	749069	AssignmentExpression	n -> next = FreeNodeList		748759	0		=			
ANR	749070	PtrMemberAccess	n -> next		748759	0					
ANR	749071	Identifier	n		748759	0					
ANR	749072	Identifier	next		748759	1					
ANR	749073	Identifier	FreeNodeList		748759	1					
ANR	749074	ExpressionStatement	FreeNodeList = n	1079:4:23909:23925	748759	3	True				
ANR	749075	AssignmentExpression	FreeNodeList = n		748759	0		=			
ANR	749076	Identifier	FreeNodeList		748759	0					
ANR	749077	Identifier	n		748759	1					
ANR	749078	ExpressionStatement	THREAD_ATOMIC_END	1080:4:23931:23948	748759	4	True				
ANR	749079	Identifier	THREAD_ATOMIC_END		748759	0					
ANR	749080	ReturnType	extern void		748759	1					
ANR	749081	Identifier	onig_node_free		748759	2					
ANR	749082	ParameterList	Node * node		748759	3					
ANR	749083	Parameter	Node * node	1006:15:22548:22557	748759	0	True				
ANR	749084	ParameterType	Node *		748759	0					
ANR	749085	Identifier	node		748759	1					
ANR	749086	CFGEntryNode	ENTRY		748759		True				
ANR	749087	CFGExitNode	EXIT		748759		True				
ANR	749088	Symbol	NQTFR ( node ) -> target		748759						
ANR	749089	Symbol	IS_NOT_NULL		748759						
ANR	749090	Symbol	NCAR		748759						
ANR	749091	Symbol	NBREF ( node ) -> back_dynamic		748759						
ANR	749092	Symbol	* NBREF		748759						
ANR	749093	Symbol	next_node		748759						
ANR	749094	Symbol	* cc		748759						
ANR	749095	Symbol	* NENCLOSE		748759						
ANR	749096	Symbol	FreeNodeList		748759						
ANR	749097	Symbol	cc -> mbuf		748759						
ANR	749098	Symbol	NQTFR		748759						
ANR	749099	Symbol	NCCLASS		748759						
ANR	749100	Symbol	IS_NULL		748759						
ANR	749101	Symbol	* NQTFR		748759						
ANR	749102	Symbol	NBREF		748759						
ANR	749103	Symbol	NENCLOSE		748759						
ANR	749104	Symbol	* NANCHOR		748759						
ANR	749105	Symbol	n -> next		748759						
ANR	749106	Symbol	NSTR ( node ) -> capa		748759						
ANR	749107	Symbol	IS_NCCLASS_SHARE		748759						
ANR	749108	Symbol	cc		748759						
ANR	749109	Symbol	NSTR		748759						
ANR	749110	Symbol	NCDR		748759						
ANR	749111	Symbol	NANCHOR ( node ) -> target		748759						
ANR	749112	Symbol	* NSTR		748759						
ANR	749113	Symbol	n		748759						
ANR	749114	Symbol	NENCLOSE ( node ) -> target		748759						
ANR	749115	Symbol	node		748759						
ANR	749116	Symbol	NSTR ( node ) -> s		748759						
ANR	749117	Symbol	* n		748759						
ANR	749118	Symbol	NANCHOR		748759						
ANR	749119	Symbol	NTYPE		748759						
ANR	749120	Symbol	NSTR ( node ) -> buf		748759						
ANR	749121	Function	onig_free_node_list	1088:0:24020:24260							
ANR	749122	FunctionDef	onig_free_node_list ()		749121	0					
ANR	749123	CompoundStatement		1090:0:24057:24260	749121	0					
ANR	749124	IdentifierDeclStatement	FreeNode * n ;	1091:2:24061:24072	749121	0	True				
ANR	749125	IdentifierDecl	* n		749121	0					
ANR	749126	IdentifierDeclType	FreeNode *		749121	0					
ANR	749127	Identifier	n		749121	1					
ANR	749128	WhileStatement	while ( IS_NOT_NULL ( FreeNodeList ) )		749121	1					
ANR	749129	Condition	IS_NOT_NULL ( FreeNodeList )	1094:9:24113:24137	749121	0	True				
ANR	749130	CallExpression	IS_NOT_NULL ( FreeNodeList )		749121	0					
ANR	749131	Callee	IS_NOT_NULL		749121	0					
ANR	749132	Identifier	IS_NOT_NULL		749121	0					
ANR	749133	ArgumentList	FreeNodeList		749121	1					
ANR	749134	Argument	FreeNodeList		749121	0					
ANR	749135	Identifier	FreeNodeList		749121	0					
ANR	749136	CompoundStatement		5:36:82:82	749121	1					
ANR	749137	ExpressionStatement	n = FreeNodeList	1095:4:24146:24162	749121	0	True				
ANR	749138	AssignmentExpression	n = FreeNodeList		749121	0		=			
ANR	749139	Identifier	n		749121	0					
ANR	749140	Identifier	FreeNodeList		749121	1					
ANR	749141	ExpressionStatement	FreeNodeList = FreeNodeList -> next	1096:4:24168:24201	749121	1	True				
ANR	749142	AssignmentExpression	FreeNodeList = FreeNodeList -> next		749121	0		=			
ANR	749143	Identifier	FreeNodeList		749121	0					
ANR	749144	PtrMemberAccess	FreeNodeList -> next		749121	1					
ANR	749145	Identifier	FreeNodeList		749121	0					
ANR	749146	Identifier	next		749121	1					
ANR	749147	ExpressionStatement	xfree ( n )	1097:4:24207:24215	749121	2	True				
ANR	749148	CallExpression	xfree ( n )		749121	0					
ANR	749149	Callee	xfree		749121	0					
ANR	749150	Identifier	xfree		749121	0					
ANR	749151	ArgumentList	n		749121	1					
ANR	749152	Argument	n		749121	0					
ANR	749153	Identifier	n		749121	0					
ANR	749154	ReturnStatement	return 0 ;	1100:2:24250:24258	749121	2	True				
ANR	749155	PrimaryExpression	0		749121	0					
ANR	749156	ReturnType	extern int		749121	1					
ANR	749157	Identifier	onig_free_node_list		749121	2					
ANR	749158	ParameterList			749121	3					
ANR	749159	CFGEntryNode	ENTRY		749121		True				
ANR	749160	CFGExitNode	EXIT		749121		True				
ANR	749161	Symbol	IS_NOT_NULL		749121						
ANR	749162	Symbol	FreeNodeList		749121						
ANR	749163	Symbol	FreeNodeList -> next		749121						
ANR	749164	Symbol	* FreeNodeList		749121						
ANR	749165	Symbol	n		749121						
ANR	749166	Function	node_new	1104:0:24270:24648							
ANR	749167	FunctionDef	node_new ()		749166	0					
ANR	749168	CompoundStatement		1106:0:24298:24648	749166	0					
ANR	749169	IdentifierDeclStatement	Node * node ;	1107:2:24302:24312	749166	0	True				
ANR	749170	IdentifierDecl	* node		749166	0					
ANR	749171	IdentifierDeclType	Node *		749166	0					
ANR	749172	Identifier	node		749166	1					
ANR	749173	ExpressionStatement	THREAD_ATOMIC_START	1110:2:24352:24371	749166	1	True				
ANR	749174	Identifier	THREAD_ATOMIC_START		749166	0					
ANR	749175	IfStatement	if ( IS_NOT_NULL ( FreeNodeList ) )		749166	2					
ANR	749176	Condition	IS_NOT_NULL ( FreeNodeList )	1111:6:24379:24403	749166	0	True				
ANR	749177	CallExpression	IS_NOT_NULL ( FreeNodeList )		749166	0					
ANR	749178	Callee	IS_NOT_NULL		749166	0					
ANR	749179	Identifier	IS_NOT_NULL		749166	0					
ANR	749180	ArgumentList	FreeNodeList		749166	1					
ANR	749181	Argument	FreeNodeList		749166	0					
ANR	749182	Identifier	FreeNodeList		749166	0					
ANR	749183	CompoundStatement		6:33:107:107	749166	1					
ANR	749184	ExpressionStatement	node = ( Node * ) FreeNodeList	1112:4:24412:24439	749166	0	True				
ANR	749185	AssignmentExpression	node = ( Node * ) FreeNodeList		749166	0		=			
ANR	749186	Identifier	node		749166	0					
ANR	749187	CastExpression	( Node * ) FreeNodeList		749166	1					
ANR	749188	CastTarget	Node *		749166	0					
ANR	749189	Identifier	FreeNodeList		749166	1					
ANR	749190	ExpressionStatement	FreeNodeList = FreeNodeList -> next	1113:4:24445:24478	749166	1	True				
ANR	749191	AssignmentExpression	FreeNodeList = FreeNodeList -> next		749166	0		=			
ANR	749192	Identifier	FreeNodeList		749166	0					
ANR	749193	PtrMemberAccess	FreeNodeList -> next		749166	1					
ANR	749194	Identifier	FreeNodeList		749166	0					
ANR	749195	Identifier	next		749166	1					
ANR	749196	ExpressionStatement	THREAD_ATOMIC_END	1114:4:24484:24501	749166	2	True				
ANR	749197	Identifier	THREAD_ATOMIC_END		749166	0					
ANR	749198	ReturnStatement	return node ;	1115:4:24507:24518	749166	3	True				
ANR	749199	Identifier	node		749166	0					
ANR	749200	ExpressionStatement	THREAD_ATOMIC_END	1117:2:24526:24543	749166	3	True				
ANR	749201	Identifier	THREAD_ATOMIC_END		749166	0					
ANR	749202	ExpressionStatement	node = ( Node * ) xmalloc ( sizeof ( Node ) )	1120:2:24555:24591	749166	4	True				
ANR	749203	AssignmentExpression	node = ( Node * ) xmalloc ( sizeof ( Node ) )		749166	0		=			
ANR	749204	Identifier	node		749166	0					
ANR	749205	CastExpression	( Node * ) xmalloc ( sizeof ( Node ) )		749166	1					
ANR	749206	CastTarget	Node *		749166	0					
ANR	749207	CallExpression	xmalloc ( sizeof ( Node ) )		749166	1					
ANR	749208	Callee	xmalloc		749166	0					
ANR	749209	Identifier	xmalloc		749166	0					
ANR	749210	ArgumentList	sizeof ( Node )		749166	1					
ANR	749211	Argument	sizeof ( Node )		749166	0					
ANR	749212	SizeofExpression	sizeof ( Node )		749166	0					
ANR	749213	Sizeof	sizeof		749166	0					
ANR	749214	SizeofOperand	Node		749166	1					
ANR	749215	ReturnStatement	return node ;	1122:2:24635:24646	749166	5	True				
ANR	749216	Identifier	node		749166	0					
ANR	749217	ReturnType	static Node *		749166	1					
ANR	749218	Identifier	node_new		749166	2					
ANR	749219	ParameterList			749166	3					
ANR	749220	CFGEntryNode	ENTRY		749166		True				
ANR	749221	CFGExitNode	EXIT		749166		True				
ANR	749222	Symbol	node		749166						
ANR	749223	Symbol	IS_NOT_NULL		749166						
ANR	749224	Symbol	xmalloc		749166						
ANR	749225	Symbol	FreeNodeList		749166						
ANR	749226	Symbol	FreeNodeList -> next		749166						
ANR	749227	Symbol	* FreeNodeList		749166						
ANR	749228	Function	initialize_cclass	1126:0:24652:24789							
ANR	749229	FunctionDef	initialize_cclass (CClassNode * cc)		749228	0					
ANR	749230	CompoundStatement		1128:0:24698:24789	749228	0					
ANR	749231	ExpressionStatement	BITSET_CLEAR ( cc -> bs )	1129:2:24702:24722	749228	0	True				
ANR	749232	CallExpression	BITSET_CLEAR ( cc -> bs )		749228	0					
ANR	749233	Callee	BITSET_CLEAR		749228	0					
ANR	749234	Identifier	BITSET_CLEAR		749228	0					
ANR	749235	ArgumentList	cc -> bs		749228	1					
ANR	749236	Argument	cc -> bs		749228	0					
ANR	749237	PtrMemberAccess	cc -> bs		749228	0					
ANR	749238	Identifier	cc		749228	0					
ANR	749239	Identifier	bs		749228	1					
ANR	749240	ExpressionStatement	cc -> flags = 0	1131:2:24754:24767	749228	1	True				
ANR	749241	AssignmentExpression	cc -> flags = 0		749228	0		=			
ANR	749242	PtrMemberAccess	cc -> flags		749228	0					
ANR	749243	Identifier	cc		749228	0					
ANR	749244	Identifier	flags		749228	1					
ANR	749245	PrimaryExpression	0		749228	1					
ANR	749246	ExpressionStatement	cc -> mbuf = NULL	1132:2:24771:24787	749228	2	True				
ANR	749247	AssignmentExpression	cc -> mbuf = NULL		749228	0		=			
ANR	749248	PtrMemberAccess	cc -> mbuf		749228	0					
ANR	749249	Identifier	cc		749228	0					
ANR	749250	Identifier	mbuf		749228	1					
ANR	749251	Identifier	NULL		749228	1					
ANR	749252	ReturnType	static void		749228	1					
ANR	749253	Identifier	initialize_cclass		749228	2					
ANR	749254	ParameterList	CClassNode * cc		749228	3					
ANR	749255	Parameter	CClassNode * cc	1127:18:24682:24695	749228	0	True				
ANR	749256	ParameterType	CClassNode *		749228	0					
ANR	749257	Identifier	cc		749228	1					
ANR	749258	CFGEntryNode	ENTRY		749228		True				
ANR	749259	CFGExitNode	EXIT		749228		True				
ANR	749260	Symbol	cc		749228						
ANR	749261	Symbol	NULL		749228						
ANR	749262	Symbol	* cc		749228						
ANR	749263	Symbol	cc -> mbuf		749228						
ANR	749264	Symbol	cc -> bs		749228						
ANR	749265	Symbol	cc -> flags		749228						
ANR	749266	Function	node_new_cclass	1135:0:24792:24965							
ANR	749267	FunctionDef	node_new_cclass ()		749266	0					
ANR	749268	CompoundStatement		1137:0:24827:24965	749266	0					
ANR	749269	IdentifierDeclStatement	Node * node = node_new ( ) ;	1138:2:24831:24854	749266	0	True				
ANR	749270	IdentifierDecl	* node = node_new ( )		749266	0					
ANR	749271	IdentifierDeclType	Node *		749266	0					
ANR	749272	Identifier	node		749266	1					
ANR	749273	AssignmentExpression	* node = node_new ( )		749266	2		=			
ANR	749274	Identifier	node		749266	0					
ANR	749275	CallExpression	node_new ( )		749266	1					
ANR	749276	Callee	node_new		749266	0					
ANR	749277	Identifier	node_new		749266	0					
ANR	749278	ArgumentList			749266	1					
ANR	749279	ExpressionStatement	CHECK_NULL_RETURN ( node )	1139:2:24858:24881	749266	1	True				
ANR	749280	CallExpression	CHECK_NULL_RETURN ( node )		749266	0					
ANR	749281	Callee	CHECK_NULL_RETURN		749266	0					
ANR	749282	Identifier	CHECK_NULL_RETURN		749266	0					
ANR	749283	ArgumentList	node		749266	1					
ANR	749284	Argument	node		749266	0					
ANR	749285	Identifier	node		749266	0					
ANR	749286	ExpressionStatement	"SET_NTYPE ( node , NT_CCLASS )"	1141:2:24886:24912	749266	2	True				
ANR	749287	CallExpression	"SET_NTYPE ( node , NT_CCLASS )"		749266	0					
ANR	749288	Callee	SET_NTYPE		749266	0					
ANR	749289	Identifier	SET_NTYPE		749266	0					
ANR	749290	ArgumentList	node		749266	1					
ANR	749291	Argument	node		749266	0					
ANR	749292	Identifier	node		749266	0					
ANR	749293	Argument	NT_CCLASS		749266	1					
ANR	749294	Identifier	NT_CCLASS		749266	0					
ANR	749295	ExpressionStatement	initialize_cclass ( NCCLASS ( node ) )	1142:2:24916:24948	749266	3	True				
ANR	749296	CallExpression	initialize_cclass ( NCCLASS ( node ) )		749266	0					
ANR	749297	Callee	initialize_cclass		749266	0					
ANR	749298	Identifier	initialize_cclass		749266	0					
ANR	749299	ArgumentList	NCCLASS ( node )		749266	1					
ANR	749300	Argument	NCCLASS ( node )		749266	0					
ANR	749301	CallExpression	NCCLASS ( node )		749266	0					
ANR	749302	Callee	NCCLASS		749266	0					
ANR	749303	Identifier	NCCLASS		749266	0					
ANR	749304	ArgumentList	node		749266	1					
ANR	749305	Argument	node		749266	0					
ANR	749306	Identifier	node		749266	0					
ANR	749307	ReturnStatement	return node ;	1143:2:24952:24963	749266	4	True				
ANR	749308	Identifier	node		749266	0					
ANR	749309	ReturnType	static Node *		749266	1					
ANR	749310	Identifier	node_new_cclass		749266	2					
ANR	749311	ParameterList			749266	3					
ANR	749312	CFGEntryNode	ENTRY		749266		True				
ANR	749313	CFGExitNode	EXIT		749266		True				
ANR	749314	Symbol	node		749266						
ANR	749315	Symbol	node_new		749266						
ANR	749316	Symbol	NT_CCLASS		749266						
ANR	749317	Symbol	NCCLASS		749266						
ANR	749318	Function	node_new_cclass_by_codepoint_range	1146:0:24968:25981							
ANR	749319	FunctionDef	"node_new_cclass_by_codepoint_range (int not , OnigCodePoint sb_out , const OnigCodePoint ranges [ ])"		749318	0					
ANR	749320	CompoundStatement		1149:0:25084:25981	749318	0					
ANR	749321	IdentifierDeclStatement	"int n , i ;"	1150:2:25088:25096	749318	0	True				
ANR	749322	IdentifierDecl	n		749318	0					
ANR	749323	IdentifierDeclType	int		749318	0					
ANR	749324	Identifier	n		749318	1					
ANR	749325	IdentifierDecl	i		749318	1					
ANR	749326	IdentifierDeclType	int		749318	0					
ANR	749327	Identifier	i		749318	1					
ANR	749328	IdentifierDeclStatement	CClassNode * cc ;	1151:2:25100:25114	749318	1	True				
ANR	749329	IdentifierDecl	* cc		749318	0					
ANR	749330	IdentifierDeclType	CClassNode *		749318	0					
ANR	749331	Identifier	cc		749318	1					
ANR	749332	IdentifierDeclStatement	OnigCodePoint j ;	1152:2:25118:25133	749318	2	True				
ANR	749333	IdentifierDecl	j		749318	0					
ANR	749334	IdentifierDeclType	OnigCodePoint		749318	0					
ANR	749335	Identifier	j		749318	1					
ANR	749336	IdentifierDeclStatement	Node * node = node_new_cclass ( ) ;	1154:2:25138:25168	749318	3	True				
ANR	749337	IdentifierDecl	* node = node_new_cclass ( )		749318	0					
ANR	749338	IdentifierDeclType	Node *		749318	0					
ANR	749339	Identifier	node		749318	1					
ANR	749340	AssignmentExpression	* node = node_new_cclass ( )		749318	2		=			
ANR	749341	Identifier	node		749318	0					
ANR	749342	CallExpression	node_new_cclass ( )		749318	1					
ANR	749343	Callee	node_new_cclass		749318	0					
ANR	749344	Identifier	node_new_cclass		749318	0					
ANR	749345	ArgumentList			749318	1					
ANR	749346	ExpressionStatement	CHECK_NULL_RETURN ( node )	1155:2:25172:25195	749318	4	True				
ANR	749347	CallExpression	CHECK_NULL_RETURN ( node )		749318	0					
ANR	749348	Callee	CHECK_NULL_RETURN		749318	0					
ANR	749349	Identifier	CHECK_NULL_RETURN		749318	0					
ANR	749350	ArgumentList	node		749318	1					
ANR	749351	Argument	node		749318	0					
ANR	749352	Identifier	node		749318	0					
ANR	749353	ExpressionStatement	cc = NCCLASS ( node )	1157:2:25200:25218	749318	5	True				
ANR	749354	AssignmentExpression	cc = NCCLASS ( node )		749318	0		=			
ANR	749355	Identifier	cc		749318	0					
ANR	749356	CallExpression	NCCLASS ( node )		749318	1					
ANR	749357	Callee	NCCLASS		749318	0					
ANR	749358	Identifier	NCCLASS		749318	0					
ANR	749359	ArgumentList	node		749318	1					
ANR	749360	Argument	node		749318	0					
ANR	749361	Identifier	node		749318	0					
ANR	749362	IfStatement	if ( not != 0 )		749318	6					
ANR	749363	Condition	not != 0	1158:6:25226:25233	749318	0	True				
ANR	749364	EqualityExpression	not != 0		749318	0		!=			
ANR	749365	Identifier	not		749318	0					
ANR	749366	PrimaryExpression	0		749318	1					
ANR	749367	ExpressionStatement	NCCLASS_SET_NOT ( cc )	1158:16:25236:25255	749318	1	True				
ANR	749368	CallExpression	NCCLASS_SET_NOT ( cc )		749318	0					
ANR	749369	Callee	NCCLASS_SET_NOT		749318	0					
ANR	749370	Identifier	NCCLASS_SET_NOT		749318	0					
ANR	749371	ArgumentList	cc		749318	1					
ANR	749372	Argument	cc		749318	0					
ANR	749373	Identifier	cc		749318	0					
ANR	749374	ExpressionStatement	BITSET_CLEAR ( cc -> bs )	1160:2:25260:25280	749318	7	True				
ANR	749375	CallExpression	BITSET_CLEAR ( cc -> bs )		749318	0					
ANR	749376	Callee	BITSET_CLEAR		749318	0					
ANR	749377	Identifier	BITSET_CLEAR		749318	0					
ANR	749378	ArgumentList	cc -> bs		749318	1					
ANR	749379	Argument	cc -> bs		749318	0					
ANR	749380	PtrMemberAccess	cc -> bs		749318	0					
ANR	749381	Identifier	cc		749318	0					
ANR	749382	Identifier	bs		749318	1					
ANR	749383	IfStatement	if ( sb_out > 0 && IS_NOT_NULL ( ranges ) )		749318	8					
ANR	749384	Condition	sb_out > 0 && IS_NOT_NULL ( ranges )	1161:6:25288:25320	749318	0	True				
ANR	749385	AndExpression	sb_out > 0 && IS_NOT_NULL ( ranges )		749318	0		&&			
ANR	749386	RelationalExpression	sb_out > 0		749318	0		>			
ANR	749387	Identifier	sb_out		749318	0					
ANR	749388	PrimaryExpression	0		749318	1					
ANR	749389	CallExpression	IS_NOT_NULL ( ranges )		749318	1					
ANR	749390	Callee	IS_NOT_NULL		749318	0					
ANR	749391	Identifier	IS_NOT_NULL		749318	0					
ANR	749392	ArgumentList	ranges		749318	1					
ANR	749393	Argument	ranges		749318	0					
ANR	749394	Identifier	ranges		749318	0					
ANR	749395	CompoundStatement		13:41:238:238	749318	1					
ANR	749396	ExpressionStatement	n = ONIGENC_CODE_RANGE_NUM ( ranges )	1162:4:25329:25363	749318	0	True				
ANR	749397	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( ranges )		749318	0		=			
ANR	749398	Identifier	n		749318	0					
ANR	749399	CallExpression	ONIGENC_CODE_RANGE_NUM ( ranges )		749318	1					
ANR	749400	Callee	ONIGENC_CODE_RANGE_NUM		749318	0					
ANR	749401	Identifier	ONIGENC_CODE_RANGE_NUM		749318	0					
ANR	749402	ArgumentList	ranges		749318	1					
ANR	749403	Argument	ranges		749318	0					
ANR	749404	Identifier	ranges		749318	0					
ANR	749405	ForStatement	for ( i = 0 ; i < n ; i ++ )		749318	1					
ANR	749406	ForInit	i = 0 ;	1163:9:25374:25379	749318	0	True				
ANR	749407	AssignmentExpression	i = 0		749318	0		=			
ANR	749408	Identifier	i		749318	0					
ANR	749409	PrimaryExpression	0		749318	1					
ANR	749410	Condition	i < n	1163:16:25381:25385	749318	1	True				
ANR	749411	RelationalExpression	i < n		749318	0		<			
ANR	749412	Identifier	i		749318	0					
ANR	749413	Identifier	n		749318	1					
ANR	749414	PostIncDecOperationExpression	i ++	1163:23:25388:25390	749318	2	True				
ANR	749415	Identifier	i		749318	0					
ANR	749416	IncDec	++		749318	1					
ANR	749417	CompoundStatement		15:28:308:308	749318	3					
ANR	749418	ForStatement	"for ( j = ONIGENC_CODE_RANGE_FROM ( ranges , i ) ; j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i ) ; j ++ )"		749318	0					
ANR	749419	ForInit	"j = ONIGENC_CODE_RANGE_FROM ( ranges , i ) ;"	1164:11:25406:25445	749318	0	True				
ANR	749420	AssignmentExpression	"j = ONIGENC_CODE_RANGE_FROM ( ranges , i )"		749318	0		=			
ANR	749421	Identifier	j		749318	0					
ANR	749422	CallExpression	"ONIGENC_CODE_RANGE_FROM ( ranges , i )"		749318	1					
ANR	749423	Callee	ONIGENC_CODE_RANGE_FROM		749318	0					
ANR	749424	Identifier	ONIGENC_CODE_RANGE_FROM		749318	0					
ANR	749425	ArgumentList	ranges		749318	1					
ANR	749426	Argument	ranges		749318	0					
ANR	749427	Identifier	ranges		749318	0					
ANR	749428	Argument	i		749318	1					
ANR	749429	Identifier	i		749318	0					
ANR	749430	Condition	"j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"	1165:11:25458:25510	749318	1	True				
ANR	749431	RelationalExpression	"j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"		749318	0		<=			
ANR	749432	Identifier	j		749318	0					
ANR	749433	CastExpression	"( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"		749318	1					
ANR	749434	CastTarget	OnigCodePoint		749318	0					
ANR	749435	CallExpression	"ONIGENC_CODE_RANGE_TO ( ranges , i )"		749318	1					
ANR	749436	Callee	ONIGENC_CODE_RANGE_TO		749318	0					
ANR	749437	Identifier	ONIGENC_CODE_RANGE_TO		749318	0					
ANR	749438	ArgumentList	ranges		749318	1					
ANR	749439	Argument	ranges		749318	0					
ANR	749440	Identifier	ranges		749318	0					
ANR	749441	Argument	i		749318	1					
ANR	749442	Identifier	i		749318	0					
ANR	749443	PostIncDecOperationExpression	j ++	1165:66:25513:25515	749318	2	True				
ANR	749444	Identifier	j		749318	0					
ANR	749445	IncDec	++		749318	1					
ANR	749446	CompoundStatement		17:71:433:433	749318	3					
ANR	749447	IfStatement	if ( j >= sb_out )		749318	0					
ANR	749448	Condition	j >= sb_out	1166:5:25525:25535	749318	0	True				
ANR	749449	RelationalExpression	j >= sb_out		749318	0		>=			
ANR	749450	Identifier	j		749318	0					
ANR	749451	Identifier	sb_out		749318	1					
ANR	749452	GotoStatement	goto sb_end ;	1166:18:25538:25549	749318	1	True				
ANR	749453	Identifier	sb_end		749318	0					
ANR	749454	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	1168:8:25560:25585	749318	1	True				
ANR	749455	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		749318	0					
ANR	749456	Callee	BITSET_SET_BIT		749318	0					
ANR	749457	Identifier	BITSET_SET_BIT		749318	0					
ANR	749458	ArgumentList	cc -> bs		749318	1					
ANR	749459	Argument	cc -> bs		749318	0					
ANR	749460	PtrMemberAccess	cc -> bs		749318	0					
ANR	749461	Identifier	cc		749318	0					
ANR	749462	Identifier	bs		749318	1					
ANR	749463	Argument	j		749318	1					
ANR	749464	Identifier	j		749318	0					
ANR	749465	Label	sb_end :	1173:1:25607:25613	749318	9	True				
ANR	749466	Identifier	sb_end		749318	0					
ANR	749467	IfStatement	if ( IS_NULL ( ranges ) )		749318	10					
ANR	749468	Condition	IS_NULL ( ranges )	1174:6:25621:25635	749318	0	True				
ANR	749469	CallExpression	IS_NULL ( ranges )		749318	0					
ANR	749470	Callee	IS_NULL		749318	0					
ANR	749471	Identifier	IS_NULL		749318	0					
ANR	749472	ArgumentList	ranges		749318	1					
ANR	749473	Argument	ranges		749318	0					
ANR	749474	Identifier	ranges		749318	0					
ANR	749475	CompoundStatement		26:23:553:553	749318	1					
ANR	749476	Label	is_null :	1175:2:25642:25649	749318	0	True				
ANR	749477	Identifier	is_null		749318	0					
ANR	749478	ExpressionStatement	cc -> mbuf = NULL	1176:4:25655:25670	749318	1	True				
ANR	749479	AssignmentExpression	cc -> mbuf = NULL		749318	0		=			
ANR	749480	PtrMemberAccess	cc -> mbuf		749318	0					
ANR	749481	Identifier	cc		749318	0					
ANR	749482	Identifier	mbuf		749318	1					
ANR	749483	Identifier	NULL		749318	1					
ANR	749484	ElseStatement	else		749318	0					
ANR	749485	CompoundStatement		31:4:604:614	749318	0					
ANR	749486	IdentifierDeclStatement	BBuf * bbuf ;	1179:4:25689:25699	749318	0	True				
ANR	749487	IdentifierDecl	* bbuf		749318	0					
ANR	749488	IdentifierDeclType	BBuf *		749318	0					
ANR	749489	Identifier	bbuf		749318	1					
ANR	749490	ExpressionStatement	n = ONIGENC_CODE_RANGE_NUM ( ranges )	1181:4:25706:25740	749318	1	True				
ANR	749491	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( ranges )		749318	0		=			
ANR	749492	Identifier	n		749318	0					
ANR	749493	CallExpression	ONIGENC_CODE_RANGE_NUM ( ranges )		749318	1					
ANR	749494	Callee	ONIGENC_CODE_RANGE_NUM		749318	0					
ANR	749495	Identifier	ONIGENC_CODE_RANGE_NUM		749318	0					
ANR	749496	ArgumentList	ranges		749318	1					
ANR	749497	Argument	ranges		749318	0					
ANR	749498	Identifier	ranges		749318	0					
ANR	749499	IfStatement	if ( n == 0 )		749318	2					
ANR	749500	Condition	n == 0	1182:8:25750:25755	749318	0	True				
ANR	749501	EqualityExpression	n == 0		749318	0		==			
ANR	749502	Identifier	n		749318	0					
ANR	749503	PrimaryExpression	0		749318	1					
ANR	749504	GotoStatement	goto is_null ;	1182:16:25758:25770	749318	1	True				
ANR	749505	Identifier	is_null		749318	0					
ANR	749506	ExpressionStatement	bbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	1184:4:25777:25813	749318	3	True				
ANR	749507	AssignmentExpression	bbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		749318	0		=			
ANR	749508	Identifier	bbuf		749318	0					
ANR	749509	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		749318	1					
ANR	749510	CastTarget	BBuf *		749318	0					
ANR	749511	CallExpression	xmalloc ( sizeof ( BBuf ) )		749318	1					
ANR	749512	Callee	xmalloc		749318	0					
ANR	749513	Identifier	xmalloc		749318	0					
ANR	749514	ArgumentList	sizeof ( BBuf )		749318	1					
ANR	749515	Argument	sizeof ( BBuf )		749318	0					
ANR	749516	SizeofExpression	sizeof ( BBuf )		749318	0					
ANR	749517	Sizeof	sizeof		749318	0					
ANR	749518	SizeofOperand	BBuf		749318	1					
ANR	749519	ExpressionStatement	CHECK_NULL_RETURN ( bbuf )	1185:4:25819:25842	749318	4	True				
ANR	749520	CallExpression	CHECK_NULL_RETURN ( bbuf )		749318	0					
ANR	749521	Callee	CHECK_NULL_RETURN		749318	0					
ANR	749522	Identifier	CHECK_NULL_RETURN		749318	0					
ANR	749523	ArgumentList	bbuf		749318	1					
ANR	749524	Argument	bbuf		749318	0					
ANR	749525	Identifier	bbuf		749318	0					
ANR	749526	ExpressionStatement	bbuf -> alloc = n + 1	1186:4:25848:25867	749318	5	True				
ANR	749527	AssignmentExpression	bbuf -> alloc = n + 1		749318	0		=			
ANR	749528	PtrMemberAccess	bbuf -> alloc		749318	0					
ANR	749529	Identifier	bbuf		749318	0					
ANR	749530	Identifier	alloc		749318	1					
ANR	749531	AdditiveExpression	n + 1		749318	1		+			
ANR	749532	Identifier	n		749318	0					
ANR	749533	PrimaryExpression	1		749318	1					
ANR	749534	ExpressionStatement	bbuf -> used = n + 1	1187:4:25873:25892	749318	6	True				
ANR	749535	AssignmentExpression	bbuf -> used = n + 1		749318	0		=			
ANR	749536	PtrMemberAccess	bbuf -> used		749318	0					
ANR	749537	Identifier	bbuf		749318	0					
ANR	749538	Identifier	used		749318	1					
ANR	749539	AdditiveExpression	n + 1		749318	1		+			
ANR	749540	Identifier	n		749318	0					
ANR	749541	PrimaryExpression	1		749318	1					
ANR	749542	ExpressionStatement	bbuf -> p = ( UChar * ) ( ( void * ) ranges )	1188:4:25898:25937	749318	7	True				
ANR	749543	AssignmentExpression	bbuf -> p = ( UChar * ) ( ( void * ) ranges )		749318	0		=			
ANR	749544	PtrMemberAccess	bbuf -> p		749318	0					
ANR	749545	Identifier	bbuf		749318	0					
ANR	749546	Identifier	p		749318	1					
ANR	749547	CastExpression	( UChar * ) ( ( void * ) ranges )		749318	1					
ANR	749548	CastTarget	UChar *		749318	0					
ANR	749549	CastExpression	( void * ) ranges		749318	1					
ANR	749550	CastTarget	void *		749318	0					
ANR	749551	Identifier	ranges		749318	1					
ANR	749552	ExpressionStatement	cc -> mbuf = bbuf	1190:4:25944:25959	749318	8	True				
ANR	749553	AssignmentExpression	cc -> mbuf = bbuf		749318	0		=			
ANR	749554	PtrMemberAccess	cc -> mbuf		749318	0					
ANR	749555	Identifier	cc		749318	0					
ANR	749556	Identifier	mbuf		749318	1					
ANR	749557	Identifier	bbuf		749318	1					
ANR	749558	ReturnStatement	return node ;	1193:2:25968:25979	749318	11	True				
ANR	749559	Identifier	node		749318	0					
ANR	749560	ReturnType	static Node *		749318	1					
ANR	749561	Identifier	node_new_cclass_by_codepoint_range		749318	2					
ANR	749562	ParameterList	"int not , OnigCodePoint sb_out , const OnigCodePoint ranges [ ]"		749318	3					
ANR	749563	Parameter	int not	1147:35:25016:25022	749318	0	True				
ANR	749564	ParameterType	int		749318	0					
ANR	749565	Identifier	not		749318	1					
ANR	749566	Parameter	OnigCodePoint sb_out	1147:44:25025:25044	749318	1	True				
ANR	749567	ParameterType	OnigCodePoint		749318	0					
ANR	749568	Identifier	sb_out		749318	1					
ANR	749569	Parameter	const OnigCodePoint ranges [ ]	1148:7:25054:25081	749318	2	True				
ANR	749570	ParameterType	const OnigCodePoint [ ]		749318	0					
ANR	749571	Identifier	ranges		749318	1					
ANR	749572	CFGEntryNode	ENTRY		749318		True				
ANR	749573	CFGExitNode	EXIT		749318		True				
ANR	749574	Symbol	IS_NOT_NULL		749318						
ANR	749575	Symbol	ranges		749318						
ANR	749576	Symbol	ONIGENC_CODE_RANGE_TO		749318						
ANR	749577	Symbol	node_new_cclass		749318						
ANR	749578	Symbol	* cc		749318						
ANR	749579	Symbol	bbuf -> alloc		749318						
ANR	749580	Symbol	cc -> mbuf		749318						
ANR	749581	Symbol	NCCLASS		749318						
ANR	749582	Symbol	sb_out		749318						
ANR	749583	Symbol	not		749318						
ANR	749584	Symbol	IS_NULL		749318						
ANR	749585	Symbol	xmalloc		749318						
ANR	749586	Symbol	ONIGENC_CODE_RANGE_FROM		749318						
ANR	749587	Symbol	* bbuf		749318						
ANR	749588	Symbol	cc		749318						
ANR	749589	Symbol	NULL		749318						
ANR	749590	Symbol	i		749318						
ANR	749591	Symbol	j		749318						
ANR	749592	Symbol	n		749318						
ANR	749593	Symbol	cc -> bs		749318						
ANR	749594	Symbol	node		749318						
ANR	749595	Symbol	bbuf -> p		749318						
ANR	749596	Symbol	ONIGENC_CODE_RANGE_NUM		749318						
ANR	749597	Symbol	bbuf -> used		749318						
ANR	749598	Symbol	bbuf		749318						
ANR	749599	Function	node_new_ctype	1196:0:25984:26191							
ANR	749600	FunctionDef	"node_new_ctype (int type , int not)"		749599	0					
ANR	749601	CompoundStatement		1198:0:26031:26191	749599	0					
ANR	749602	IdentifierDeclStatement	Node * node = node_new ( ) ;	1199:2:26035:26058	749599	0	True				
ANR	749603	IdentifierDecl	* node = node_new ( )		749599	0					
ANR	749604	IdentifierDeclType	Node *		749599	0					
ANR	749605	Identifier	node		749599	1					
ANR	749606	AssignmentExpression	* node = node_new ( )		749599	2		=			
ANR	749607	Identifier	node		749599	0					
ANR	749608	CallExpression	node_new ( )		749599	1					
ANR	749609	Callee	node_new		749599	0					
ANR	749610	Identifier	node_new		749599	0					
ANR	749611	ArgumentList			749599	1					
ANR	749612	ExpressionStatement	CHECK_NULL_RETURN ( node )	1200:2:26062:26085	749599	1	True				
ANR	749613	CallExpression	CHECK_NULL_RETURN ( node )		749599	0					
ANR	749614	Callee	CHECK_NULL_RETURN		749599	0					
ANR	749615	Identifier	CHECK_NULL_RETURN		749599	0					
ANR	749616	ArgumentList	node		749599	1					
ANR	749617	Argument	node		749599	0					
ANR	749618	Identifier	node		749599	0					
ANR	749619	ExpressionStatement	"SET_NTYPE ( node , NT_CTYPE )"	1202:2:26090:26115	749599	2	True				
ANR	749620	CallExpression	"SET_NTYPE ( node , NT_CTYPE )"		749599	0					
ANR	749621	Callee	SET_NTYPE		749599	0					
ANR	749622	Identifier	SET_NTYPE		749599	0					
ANR	749623	ArgumentList	node		749599	1					
ANR	749624	Argument	node		749599	0					
ANR	749625	Identifier	node		749599	0					
ANR	749626	Argument	NT_CTYPE		749599	1					
ANR	749627	Identifier	NT_CTYPE		749599	0					
ANR	749628	ExpressionStatement	NCTYPE ( node ) -> ctype = type	1203:2:26119:26145	749599	3	True				
ANR	749629	AssignmentExpression	NCTYPE ( node ) -> ctype = type		749599	0		=			
ANR	749630	PtrMemberAccess	NCTYPE ( node ) -> ctype		749599	0					
ANR	749631	CallExpression	NCTYPE ( node )		749599	0					
ANR	749632	Callee	NCTYPE		749599	0					
ANR	749633	Identifier	NCTYPE		749599	0					
ANR	749634	ArgumentList	node		749599	1					
ANR	749635	Argument	node		749599	0					
ANR	749636	Identifier	node		749599	0					
ANR	749637	Identifier	ctype		749599	1					
ANR	749638	Identifier	type		749599	1					
ANR	749639	ExpressionStatement	NCTYPE ( node ) -> not = not	1204:2:26149:26174	749599	4	True				
ANR	749640	AssignmentExpression	NCTYPE ( node ) -> not = not		749599	0		=			
ANR	749641	PtrMemberAccess	NCTYPE ( node ) -> not		749599	0					
ANR	749642	CallExpression	NCTYPE ( node )		749599	0					
ANR	749643	Callee	NCTYPE		749599	0					
ANR	749644	Identifier	NCTYPE		749599	0					
ANR	749645	ArgumentList	node		749599	1					
ANR	749646	Argument	node		749599	0					
ANR	749647	Identifier	node		749599	0					
ANR	749648	Identifier	not		749599	1					
ANR	749649	Identifier	not		749599	1					
ANR	749650	ReturnStatement	return node ;	1205:2:26178:26189	749599	5	True				
ANR	749651	Identifier	node		749599	0					
ANR	749652	ReturnType	static Node *		749599	1					
ANR	749653	Identifier	node_new_ctype		749599	2					
ANR	749654	ParameterList	"int type , int not"		749599	3					
ANR	749655	Parameter	int type	1197:15:26012:26019	749599	0	True				
ANR	749656	ParameterType	int		749599	0					
ANR	749657	Identifier	type		749599	1					
ANR	749658	Parameter	int not	1197:25:26022:26028	749599	1	True				
ANR	749659	ParameterType	int		749599	0					
ANR	749660	Identifier	not		749599	1					
ANR	749661	CFGEntryNode	ENTRY		749599		True				
ANR	749662	CFGExitNode	EXIT		749599		True				
ANR	749663	Symbol	node		749599						
ANR	749664	Symbol	not		749599						
ANR	749665	Symbol	NCTYPE ( node ) -> ctype		749599						
ANR	749666	Symbol	node_new		749599						
ANR	749667	Symbol	NCTYPE ( node ) -> not		749599						
ANR	749668	Symbol	type		749599						
ANR	749669	Symbol	NCTYPE		749599						
ANR	749670	Symbol	NT_CTYPE		749599						
ANR	749671	Symbol	* NCTYPE		749599						
ANR	749672	Function	node_new_anychar	1208:0:26194:26330							
ANR	749673	FunctionDef	node_new_anychar ()		749672	0					
ANR	749674	CompoundStatement		1210:0:26230:26330	749672	0					
ANR	749675	IdentifierDeclStatement	Node * node = node_new ( ) ;	1211:2:26234:26257	749672	0	True				
ANR	749676	IdentifierDecl	* node = node_new ( )		749672	0					
ANR	749677	IdentifierDeclType	Node *		749672	0					
ANR	749678	Identifier	node		749672	1					
ANR	749679	AssignmentExpression	* node = node_new ( )		749672	2		=			
ANR	749680	Identifier	node		749672	0					
ANR	749681	CallExpression	node_new ( )		749672	1					
ANR	749682	Callee	node_new		749672	0					
ANR	749683	Identifier	node_new		749672	0					
ANR	749684	ArgumentList			749672	1					
ANR	749685	ExpressionStatement	CHECK_NULL_RETURN ( node )	1212:2:26261:26284	749672	1	True				
ANR	749686	CallExpression	CHECK_NULL_RETURN ( node )		749672	0					
ANR	749687	Callee	CHECK_NULL_RETURN		749672	0					
ANR	749688	Identifier	CHECK_NULL_RETURN		749672	0					
ANR	749689	ArgumentList	node		749672	1					
ANR	749690	Argument	node		749672	0					
ANR	749691	Identifier	node		749672	0					
ANR	749692	ExpressionStatement	"SET_NTYPE ( node , NT_CANY )"	1214:2:26289:26313	749672	2	True				
ANR	749693	CallExpression	"SET_NTYPE ( node , NT_CANY )"		749672	0					
ANR	749694	Callee	SET_NTYPE		749672	0					
ANR	749695	Identifier	SET_NTYPE		749672	0					
ANR	749696	ArgumentList	node		749672	1					
ANR	749697	Argument	node		749672	0					
ANR	749698	Identifier	node		749672	0					
ANR	749699	Argument	NT_CANY		749672	1					
ANR	749700	Identifier	NT_CANY		749672	0					
ANR	749701	ReturnStatement	return node ;	1215:2:26317:26328	749672	3	True				
ANR	749702	Identifier	node		749672	0					
ANR	749703	ReturnType	static Node *		749672	1					
ANR	749704	Identifier	node_new_anychar		749672	2					
ANR	749705	ParameterList			749672	3					
ANR	749706	CFGEntryNode	ENTRY		749672		True				
ANR	749707	CFGExitNode	EXIT		749672		True				
ANR	749708	Symbol	node		749672						
ANR	749709	Symbol	NT_CANY		749672						
ANR	749710	Symbol	node_new		749672						
ANR	749711	Function	node_new_list	1218:0:26333:26529							
ANR	749712	FunctionDef	"node_new_list (Node * left , Node * right)"		749711	0					
ANR	749713	CompoundStatement		1220:0:26385:26529	749711	0					
ANR	749714	IdentifierDeclStatement	Node * node = node_new ( ) ;	1221:2:26389:26412	749711	0	True				
ANR	749715	IdentifierDecl	* node = node_new ( )		749711	0					
ANR	749716	IdentifierDeclType	Node *		749711	0					
ANR	749717	Identifier	node		749711	1					
ANR	749718	AssignmentExpression	* node = node_new ( )		749711	2		=			
ANR	749719	Identifier	node		749711	0					
ANR	749720	CallExpression	node_new ( )		749711	1					
ANR	749721	Callee	node_new		749711	0					
ANR	749722	Identifier	node_new		749711	0					
ANR	749723	ArgumentList			749711	1					
ANR	749724	ExpressionStatement	CHECK_NULL_RETURN ( node )	1222:2:26416:26439	749711	1	True				
ANR	749725	CallExpression	CHECK_NULL_RETURN ( node )		749711	0					
ANR	749726	Callee	CHECK_NULL_RETURN		749711	0					
ANR	749727	Identifier	CHECK_NULL_RETURN		749711	0					
ANR	749728	ArgumentList	node		749711	1					
ANR	749729	Argument	node		749711	0					
ANR	749730	Identifier	node		749711	0					
ANR	749731	ExpressionStatement	"SET_NTYPE ( node , NT_LIST )"	1224:2:26444:26468	749711	2	True				
ANR	749732	CallExpression	"SET_NTYPE ( node , NT_LIST )"		749711	0					
ANR	749733	Callee	SET_NTYPE		749711	0					
ANR	749734	Identifier	SET_NTYPE		749711	0					
ANR	749735	ArgumentList	node		749711	1					
ANR	749736	Argument	node		749711	0					
ANR	749737	Identifier	node		749711	0					
ANR	749738	Argument	NT_LIST		749711	1					
ANR	749739	Identifier	NT_LIST		749711	0					
ANR	749740	ExpressionStatement	NCAR ( node ) = left	1225:2:26472:26490	749711	3	True				
ANR	749741	AssignmentExpression	NCAR ( node ) = left		749711	0		=			
ANR	749742	CallExpression	NCAR ( node )		749711	0					
ANR	749743	Callee	NCAR		749711	0					
ANR	749744	Identifier	NCAR		749711	0					
ANR	749745	ArgumentList	node		749711	1					
ANR	749746	Argument	node		749711	0					
ANR	749747	Identifier	node		749711	0					
ANR	749748	Identifier	left		749711	1					
ANR	749749	ExpressionStatement	NCDR ( node ) = right	1226:2:26494:26512	749711	4	True				
ANR	749750	AssignmentExpression	NCDR ( node ) = right		749711	0		=			
ANR	749751	CallExpression	NCDR ( node )		749711	0					
ANR	749752	Callee	NCDR		749711	0					
ANR	749753	Identifier	NCDR		749711	0					
ANR	749754	ArgumentList	node		749711	1					
ANR	749755	Argument	node		749711	0					
ANR	749756	Identifier	node		749711	0					
ANR	749757	Identifier	right		749711	1					
ANR	749758	ReturnStatement	return node ;	1227:2:26516:26527	749711	5	True				
ANR	749759	Identifier	node		749711	0					
ANR	749760	ReturnType	static Node *		749711	1					
ANR	749761	Identifier	node_new_list		749711	2					
ANR	749762	ParameterList	"Node * left , Node * right"		749711	3					
ANR	749763	Parameter	Node * left	1219:14:26360:26369	749711	0	True				
ANR	749764	ParameterType	Node *		749711	0					
ANR	749765	Identifier	left		749711	1					
ANR	749766	Parameter	Node * right	1219:26:26372:26382	749711	1	True				
ANR	749767	ParameterType	Node *		749711	0					
ANR	749768	Identifier	right		749711	1					
ANR	749769	CFGEntryNode	ENTRY		749711		True				
ANR	749770	CFGExitNode	EXIT		749711		True				
ANR	749771	Symbol	node		749711						
ANR	749772	Symbol	NCAR		749711						
ANR	749773	Symbol	left		749711						
ANR	749774	Symbol	node_new		749711						
ANR	749775	Symbol	NCDR		749711						
ANR	749776	Symbol	right		749711						
ANR	749777	Symbol	NT_LIST		749711						
ANR	749778	Function	onig_node_new_list	1230:0:26532:26628							
ANR	749779	FunctionDef	"onig_node_new_list (Node * left , Node * right)"		749778	0					
ANR	749780	CompoundStatement		1232:0:26589:26628	749778	0					
ANR	749781	ReturnStatement	"return node_new_list ( left , right ) ;"	1233:2:26593:26626	749778	0	True				
ANR	749782	CallExpression	"node_new_list ( left , right )"		749778	0					
ANR	749783	Callee	node_new_list		749778	0					
ANR	749784	Identifier	node_new_list		749778	0					
ANR	749785	ArgumentList	left		749778	1					
ANR	749786	Argument	left		749778	0					
ANR	749787	Identifier	left		749778	0					
ANR	749788	Argument	right		749778	1					
ANR	749789	Identifier	right		749778	0					
ANR	749790	ReturnType	extern Node *		749778	1					
ANR	749791	Identifier	onig_node_new_list		749778	2					
ANR	749792	ParameterList	"Node * left , Node * right"		749778	3					
ANR	749793	Parameter	Node * left	1231:19:26564:26573	749778	0	True				
ANR	749794	ParameterType	Node *		749778	0					
ANR	749795	Identifier	left		749778	1					
ANR	749796	Parameter	Node * right	1231:31:26576:26586	749778	1	True				
ANR	749797	ParameterType	Node *		749778	0					
ANR	749798	Identifier	right		749778	1					
ANR	749799	CFGEntryNode	ENTRY		749778		True				
ANR	749800	CFGExitNode	EXIT		749778		True				
ANR	749801	Symbol	left		749778						
ANR	749802	Symbol	node_new_list		749778						
ANR	749803	Symbol	right		749778						
ANR	749804	Function	onig_node_list_add	1236:0:26631:26896							
ANR	749805	FunctionDef	"onig_node_list_add (Node * list , Node * x)"		749804	0					
ANR	749806	CompoundStatement		1238:0:26684:26896	749804	0					
ANR	749807	IdentifierDeclStatement	Node * n ;	1239:2:26688:26695	749804	0	True				
ANR	749808	IdentifierDecl	* n		749804	0					
ANR	749809	IdentifierDeclType	Node *		749804	0					
ANR	749810	Identifier	n		749804	1					
ANR	749811	ExpressionStatement	"n = onig_node_new_list ( x , NULL )"	1241:2:26700:26731	749804	1	True				
ANR	749812	AssignmentExpression	"n = onig_node_new_list ( x , NULL )"		749804	0		=			
ANR	749813	Identifier	n		749804	0					
ANR	749814	CallExpression	"onig_node_new_list ( x , NULL )"		749804	1					
ANR	749815	Callee	onig_node_new_list		749804	0					
ANR	749816	Identifier	onig_node_new_list		749804	0					
ANR	749817	ArgumentList	x		749804	1					
ANR	749818	Argument	x		749804	0					
ANR	749819	Identifier	x		749804	0					
ANR	749820	Argument	NULL		749804	1					
ANR	749821	Identifier	NULL		749804	0					
ANR	749822	IfStatement	if ( IS_NULL ( n ) )		749804	2					
ANR	749823	Condition	IS_NULL ( n )	1242:6:26739:26748	749804	0	True				
ANR	749824	CallExpression	IS_NULL ( n )		749804	0					
ANR	749825	Callee	IS_NULL		749804	0					
ANR	749826	Identifier	IS_NULL		749804	0					
ANR	749827	ArgumentList	n		749804	1					
ANR	749828	Argument	n		749804	0					
ANR	749829	Identifier	n		749804	0					
ANR	749830	ReturnStatement	return NULL_NODE ;	1242:18:26751:26767	749804	1	True				
ANR	749831	Identifier	NULL_NODE		749804	0					
ANR	749832	IfStatement	if ( IS_NOT_NULL ( list ) )		749804	3					
ANR	749833	Condition	IS_NOT_NULL ( list )	1244:6:26776:26792	749804	0	True				
ANR	749834	CallExpression	IS_NOT_NULL ( list )		749804	0					
ANR	749835	Callee	IS_NOT_NULL		749804	0					
ANR	749836	Identifier	IS_NOT_NULL		749804	0					
ANR	749837	ArgumentList	list		749804	1					
ANR	749838	Argument	list		749804	0					
ANR	749839	Identifier	list		749804	0					
ANR	749840	CompoundStatement		7:25:110:110	749804	1					
ANR	749841	WhileStatement	while ( IS_NOT_NULL ( NCDR ( list ) ) )		749804	0					
ANR	749842	Condition	IS_NOT_NULL ( NCDR ( list ) )	1245:11:26808:26830	749804	0	True				
ANR	749843	CallExpression	IS_NOT_NULL ( NCDR ( list ) )		749804	0					
ANR	749844	Callee	IS_NOT_NULL		749804	0					
ANR	749845	Identifier	IS_NOT_NULL		749804	0					
ANR	749846	ArgumentList	NCDR ( list )		749804	1					
ANR	749847	Argument	NCDR ( list )		749804	0					
ANR	749848	CallExpression	NCDR ( list )		749804	0					
ANR	749849	Callee	NCDR		749804	0					
ANR	749850	Identifier	NCDR		749804	0					
ANR	749851	ArgumentList	list		749804	1					
ANR	749852	Argument	list		749804	0					
ANR	749853	Identifier	list		749804	0					
ANR	749854	ExpressionStatement	list = NCDR ( list )	1246:6:26839:26856	749804	1	True				
ANR	749855	AssignmentExpression	list = NCDR ( list )		749804	0		=			
ANR	749856	Identifier	list		749804	0					
ANR	749857	CallExpression	NCDR ( list )		749804	1					
ANR	749858	Callee	NCDR		749804	0					
ANR	749859	Identifier	NCDR		749804	0					
ANR	749860	ArgumentList	list		749804	1					
ANR	749861	Argument	list		749804	0					
ANR	749862	Identifier	list		749804	0					
ANR	749863	ExpressionStatement	NCDR ( list ) = n	1248:4:26863:26877	749804	1	True				
ANR	749864	AssignmentExpression	NCDR ( list ) = n		749804	0		=			
ANR	749865	CallExpression	NCDR ( list )		749804	0					
ANR	749866	Callee	NCDR		749804	0					
ANR	749867	Identifier	NCDR		749804	0					
ANR	749868	ArgumentList	list		749804	1					
ANR	749869	Argument	list		749804	0					
ANR	749870	Identifier	list		749804	0					
ANR	749871	Identifier	n		749804	1					
ANR	749872	ReturnStatement	return n ;	1251:2:26886:26894	749804	4	True				
ANR	749873	Identifier	n		749804	0					
ANR	749874	ReturnType	extern Node *		749804	1					
ANR	749875	Identifier	onig_node_list_add		749804	2					
ANR	749876	ParameterList	"Node * list , Node * x"		749804	3					
ANR	749877	Parameter	Node * list	1237:19:26663:26672	749804	0	True				
ANR	749878	ParameterType	Node *		749804	0					
ANR	749879	Identifier	list		749804	1					
ANR	749880	Parameter	Node * x	1237:31:26675:26681	749804	1	True				
ANR	749881	ParameterType	Node *		749804	0					
ANR	749882	Identifier	x		749804	1					
ANR	749883	CFGEntryNode	ENTRY		749804		True				
ANR	749884	CFGExitNode	EXIT		749804		True				
ANR	749885	Symbol	IS_NOT_NULL		749804						
ANR	749886	Symbol	NULL		749804						
ANR	749887	Symbol	IS_NULL		749804						
ANR	749888	Symbol	NCDR		749804						
ANR	749889	Symbol	x		749804						
ANR	749890	Symbol	list		749804						
ANR	749891	Symbol	onig_node_new_list		749804						
ANR	749892	Symbol	NULL_NODE		749804						
ANR	749893	Symbol	n		749804						
ANR	749894	Function	onig_node_new_alt	1254:0:26899:27098							
ANR	749895	FunctionDef	"onig_node_new_alt (Node * left , Node * right)"		749894	0					
ANR	749896	CompoundStatement		1256:0:26955:27098	749894	0					
ANR	749897	IdentifierDeclStatement	Node * node = node_new ( ) ;	1257:2:26959:26982	749894	0	True				
ANR	749898	IdentifierDecl	* node = node_new ( )		749894	0					
ANR	749899	IdentifierDeclType	Node *		749894	0					
ANR	749900	Identifier	node		749894	1					
ANR	749901	AssignmentExpression	* node = node_new ( )		749894	2		=			
ANR	749902	Identifier	node		749894	0					
ANR	749903	CallExpression	node_new ( )		749894	1					
ANR	749904	Callee	node_new		749894	0					
ANR	749905	Identifier	node_new		749894	0					
ANR	749906	ArgumentList			749894	1					
ANR	749907	ExpressionStatement	CHECK_NULL_RETURN ( node )	1258:2:26986:27009	749894	1	True				
ANR	749908	CallExpression	CHECK_NULL_RETURN ( node )		749894	0					
ANR	749909	Callee	CHECK_NULL_RETURN		749894	0					
ANR	749910	Identifier	CHECK_NULL_RETURN		749894	0					
ANR	749911	ArgumentList	node		749894	1					
ANR	749912	Argument	node		749894	0					
ANR	749913	Identifier	node		749894	0					
ANR	749914	ExpressionStatement	"SET_NTYPE ( node , NT_ALT )"	1260:2:27014:27037	749894	2	True				
ANR	749915	CallExpression	"SET_NTYPE ( node , NT_ALT )"		749894	0					
ANR	749916	Callee	SET_NTYPE		749894	0					
ANR	749917	Identifier	SET_NTYPE		749894	0					
ANR	749918	ArgumentList	node		749894	1					
ANR	749919	Argument	node		749894	0					
ANR	749920	Identifier	node		749894	0					
ANR	749921	Argument	NT_ALT		749894	1					
ANR	749922	Identifier	NT_ALT		749894	0					
ANR	749923	ExpressionStatement	NCAR ( node ) = left	1261:2:27041:27059	749894	3	True				
ANR	749924	AssignmentExpression	NCAR ( node ) = left		749894	0		=			
ANR	749925	CallExpression	NCAR ( node )		749894	0					
ANR	749926	Callee	NCAR		749894	0					
ANR	749927	Identifier	NCAR		749894	0					
ANR	749928	ArgumentList	node		749894	1					
ANR	749929	Argument	node		749894	0					
ANR	749930	Identifier	node		749894	0					
ANR	749931	Identifier	left		749894	1					
ANR	749932	ExpressionStatement	NCDR ( node ) = right	1262:2:27063:27081	749894	4	True				
ANR	749933	AssignmentExpression	NCDR ( node ) = right		749894	0		=			
ANR	749934	CallExpression	NCDR ( node )		749894	0					
ANR	749935	Callee	NCDR		749894	0					
ANR	749936	Identifier	NCDR		749894	0					
ANR	749937	ArgumentList	node		749894	1					
ANR	749938	Argument	node		749894	0					
ANR	749939	Identifier	node		749894	0					
ANR	749940	Identifier	right		749894	1					
ANR	749941	ReturnStatement	return node ;	1263:2:27085:27096	749894	5	True				
ANR	749942	Identifier	node		749894	0					
ANR	749943	ReturnType	extern Node *		749894	1					
ANR	749944	Identifier	onig_node_new_alt		749894	2					
ANR	749945	ParameterList	"Node * left , Node * right"		749894	3					
ANR	749946	Parameter	Node * left	1255:18:26930:26939	749894	0	True				
ANR	749947	ParameterType	Node *		749894	0					
ANR	749948	Identifier	left		749894	1					
ANR	749949	Parameter	Node * right	1255:30:26942:26952	749894	1	True				
ANR	749950	ParameterType	Node *		749894	0					
ANR	749951	Identifier	right		749894	1					
ANR	749952	CFGEntryNode	ENTRY		749894		True				
ANR	749953	CFGExitNode	EXIT		749894		True				
ANR	749954	Symbol	node		749894						
ANR	749955	Symbol	NCAR		749894						
ANR	749956	Symbol	left		749894						
ANR	749957	Symbol	NT_ALT		749894						
ANR	749958	Symbol	node_new		749894						
ANR	749959	Symbol	NCDR		749894						
ANR	749960	Symbol	right		749894						
ANR	749961	Function	onig_node_new_anchor	1266:0:27101:27347							
ANR	749962	FunctionDef	onig_node_new_anchor (int type)		749961	0					
ANR	749963	CompoundStatement		1268:0:27145:27347	749961	0					
ANR	749964	IdentifierDeclStatement	Node * node = node_new ( ) ;	1269:2:27149:27172	749961	0	True				
ANR	749965	IdentifierDecl	* node = node_new ( )		749961	0					
ANR	749966	IdentifierDeclType	Node *		749961	0					
ANR	749967	Identifier	node		749961	1					
ANR	749968	AssignmentExpression	* node = node_new ( )		749961	2		=			
ANR	749969	Identifier	node		749961	0					
ANR	749970	CallExpression	node_new ( )		749961	1					
ANR	749971	Callee	node_new		749961	0					
ANR	749972	Identifier	node_new		749961	0					
ANR	749973	ArgumentList			749961	1					
ANR	749974	ExpressionStatement	CHECK_NULL_RETURN ( node )	1270:2:27176:27199	749961	1	True				
ANR	749975	CallExpression	CHECK_NULL_RETURN ( node )		749961	0					
ANR	749976	Callee	CHECK_NULL_RETURN		749961	0					
ANR	749977	Identifier	CHECK_NULL_RETURN		749961	0					
ANR	749978	ArgumentList	node		749961	1					
ANR	749979	Argument	node		749961	0					
ANR	749980	Identifier	node		749961	0					
ANR	749981	ExpressionStatement	"SET_NTYPE ( node , NT_ANCHOR )"	1272:2:27204:27230	749961	2	True				
ANR	749982	CallExpression	"SET_NTYPE ( node , NT_ANCHOR )"		749961	0					
ANR	749983	Callee	SET_NTYPE		749961	0					
ANR	749984	Identifier	SET_NTYPE		749961	0					
ANR	749985	ArgumentList	node		749961	1					
ANR	749986	Argument	node		749961	0					
ANR	749987	Identifier	node		749961	0					
ANR	749988	Argument	NT_ANCHOR		749961	1					
ANR	749989	Identifier	NT_ANCHOR		749961	0					
ANR	749990	ExpressionStatement	NANCHOR ( node ) -> type = type	1273:2:27234:27264	749961	3	True				
ANR	749991	AssignmentExpression	NANCHOR ( node ) -> type = type		749961	0		=			
ANR	749992	PtrMemberAccess	NANCHOR ( node ) -> type		749961	0					
ANR	749993	CallExpression	NANCHOR ( node )		749961	0					
ANR	749994	Callee	NANCHOR		749961	0					
ANR	749995	Identifier	NANCHOR		749961	0					
ANR	749996	ArgumentList	node		749961	1					
ANR	749997	Argument	node		749961	0					
ANR	749998	Identifier	node		749961	0					
ANR	749999	Identifier	type		749961	1					
ANR	750000	Identifier	type		749961	1					
ANR	750001	ExpressionStatement	NANCHOR ( node ) -> target = NULL	1274:2:27268:27298	749961	4	True				
ANR	750002	AssignmentExpression	NANCHOR ( node ) -> target = NULL		749961	0		=			
ANR	750003	PtrMemberAccess	NANCHOR ( node ) -> target		749961	0					
ANR	750004	CallExpression	NANCHOR ( node )		749961	0					
ANR	750005	Callee	NANCHOR		749961	0					
ANR	750006	Identifier	NANCHOR		749961	0					
ANR	750007	ArgumentList	node		749961	1					
ANR	750008	Argument	node		749961	0					
ANR	750009	Identifier	node		749961	0					
ANR	750010	Identifier	target		749961	1					
ANR	750011	Identifier	NULL		749961	1					
ANR	750012	ExpressionStatement	NANCHOR ( node ) -> char_len = - 1	1275:2:27302:27330	749961	5	True				
ANR	750013	AssignmentExpression	NANCHOR ( node ) -> char_len = - 1		749961	0		=			
ANR	750014	PtrMemberAccess	NANCHOR ( node ) -> char_len		749961	0					
ANR	750015	CallExpression	NANCHOR ( node )		749961	0					
ANR	750016	Callee	NANCHOR		749961	0					
ANR	750017	Identifier	NANCHOR		749961	0					
ANR	750018	ArgumentList	node		749961	1					
ANR	750019	Argument	node		749961	0					
ANR	750020	Identifier	node		749961	0					
ANR	750021	Identifier	char_len		749961	1					
ANR	750022	UnaryOperationExpression	- 1		749961	1					
ANR	750023	UnaryOperator	-		749961	0					
ANR	750024	PrimaryExpression	1		749961	1					
ANR	750025	ReturnStatement	return node ;	1276:2:27334:27345	749961	6	True				
ANR	750026	Identifier	node		749961	0					
ANR	750027	ReturnType	extern Node *		749961	1					
ANR	750028	Identifier	onig_node_new_anchor		749961	2					
ANR	750029	ParameterList	int type		749961	3					
ANR	750030	Parameter	int type	1267:21:27135:27142	749961	0	True				
ANR	750031	ParameterType	int		749961	0					
ANR	750032	Identifier	type		749961	1					
ANR	750033	CFGEntryNode	ENTRY		749961		True				
ANR	750034	CFGExitNode	EXIT		749961		True				
ANR	750035	Symbol	node		749961						
ANR	750036	Symbol	NULL		749961						
ANR	750037	Symbol	node_new		749961						
ANR	750038	Symbol	* NANCHOR		749961						
ANR	750039	Symbol	NANCHOR		749961						
ANR	750040	Symbol	NANCHOR ( node ) -> target		749961						
ANR	750041	Symbol	NANCHOR ( node ) -> type		749961						
ANR	750042	Symbol	type		749961						
ANR	750043	Symbol	NT_ANCHOR		749961						
ANR	750044	Symbol	NANCHOR ( node ) -> char_len		749961						
ANR	750045	DeclStmt									
ANR	750046	Decl							int	int	i
ANR	750047	DeclStmt									
ANR	750048	Decl							Node	Node *	node
ANR	750049	DeclStmt									
ANR	750050	Decl							int	int *	p
ANR	750051	Function	node_new_call	1331:0:28546:28919							
ANR	750052	FunctionDef	"node_new_call (UChar * name , UChar * name_end , int gnum)"		750051	0					
ANR	750053	CompoundStatement		1333:0:28613:28919	750051	0					
ANR	750054	IdentifierDeclStatement	Node * node = node_new ( ) ;	1334:2:28617:28640	750051	0	True				
ANR	750055	IdentifierDecl	* node = node_new ( )		750051	0					
ANR	750056	IdentifierDeclType	Node *		750051	0					
ANR	750057	Identifier	node		750051	1					
ANR	750058	AssignmentExpression	* node = node_new ( )		750051	2		=			
ANR	750059	Identifier	node		750051	0					
ANR	750060	CallExpression	node_new ( )		750051	1					
ANR	750061	Callee	node_new		750051	0					
ANR	750062	Identifier	node_new		750051	0					
ANR	750063	ArgumentList			750051	1					
ANR	750064	ExpressionStatement	CHECK_NULL_RETURN ( node )	1335:2:28644:28667	750051	1	True				
ANR	750065	CallExpression	CHECK_NULL_RETURN ( node )		750051	0					
ANR	750066	Callee	CHECK_NULL_RETURN		750051	0					
ANR	750067	Identifier	CHECK_NULL_RETURN		750051	0					
ANR	750068	ArgumentList	node		750051	1					
ANR	750069	Argument	node		750051	0					
ANR	750070	Identifier	node		750051	0					
ANR	750071	ExpressionStatement	"SET_NTYPE ( node , NT_CALL )"	1337:2:28672:28696	750051	2	True				
ANR	750072	CallExpression	"SET_NTYPE ( node , NT_CALL )"		750051	0					
ANR	750073	Callee	SET_NTYPE		750051	0					
ANR	750074	Identifier	SET_NTYPE		750051	0					
ANR	750075	ArgumentList	node		750051	1					
ANR	750076	Argument	node		750051	0					
ANR	750077	Identifier	node		750051	0					
ANR	750078	Argument	NT_CALL		750051	1					
ANR	750079	Identifier	NT_CALL		750051	0					
ANR	750080	ExpressionStatement	NCALL ( node ) -> state = 0	1338:2:28700:28726	750051	3	True				
ANR	750081	AssignmentExpression	NCALL ( node ) -> state = 0		750051	0		=			
ANR	750082	PtrMemberAccess	NCALL ( node ) -> state		750051	0					
ANR	750083	CallExpression	NCALL ( node )		750051	0					
ANR	750084	Callee	NCALL		750051	0					
ANR	750085	Identifier	NCALL		750051	0					
ANR	750086	ArgumentList	node		750051	1					
ANR	750087	Argument	node		750051	0					
ANR	750088	Identifier	node		750051	0					
ANR	750089	Identifier	state		750051	1					
ANR	750090	PrimaryExpression	0		750051	1					
ANR	750091	ExpressionStatement	NCALL ( node ) -> target = NULL_NODE	1339:2:28730:28764	750051	4	True				
ANR	750092	AssignmentExpression	NCALL ( node ) -> target = NULL_NODE		750051	0		=			
ANR	750093	PtrMemberAccess	NCALL ( node ) -> target		750051	0					
ANR	750094	CallExpression	NCALL ( node )		750051	0					
ANR	750095	Callee	NCALL		750051	0					
ANR	750096	Identifier	NCALL		750051	0					
ANR	750097	ArgumentList	node		750051	1					
ANR	750098	Argument	node		750051	0					
ANR	750099	Identifier	node		750051	0					
ANR	750100	Identifier	target		750051	1					
ANR	750101	Identifier	NULL_NODE		750051	1					
ANR	750102	ExpressionStatement	NCALL ( node ) -> name = name	1340:2:28768:28797	750051	5	True				
ANR	750103	AssignmentExpression	NCALL ( node ) -> name = name		750051	0		=			
ANR	750104	PtrMemberAccess	NCALL ( node ) -> name		750051	0					
ANR	750105	CallExpression	NCALL ( node )		750051	0					
ANR	750106	Callee	NCALL		750051	0					
ANR	750107	Identifier	NCALL		750051	0					
ANR	750108	ArgumentList	node		750051	1					
ANR	750109	Argument	node		750051	0					
ANR	750110	Identifier	node		750051	0					
ANR	750111	Identifier	name		750051	1					
ANR	750112	Identifier	name		750051	1					
ANR	750113	ExpressionStatement	NCALL ( node ) -> name_end = name_end	1341:2:28801:28834	750051	6	True				
ANR	750114	AssignmentExpression	NCALL ( node ) -> name_end = name_end		750051	0		=			
ANR	750115	PtrMemberAccess	NCALL ( node ) -> name_end		750051	0					
ANR	750116	CallExpression	NCALL ( node )		750051	0					
ANR	750117	Callee	NCALL		750051	0					
ANR	750118	Identifier	NCALL		750051	0					
ANR	750119	ArgumentList	node		750051	1					
ANR	750120	Argument	node		750051	0					
ANR	750121	Identifier	node		750051	0					
ANR	750122	Identifier	name_end		750051	1					
ANR	750123	Identifier	name_end		750051	1					
ANR	750124	ExpressionStatement	NCALL ( node ) -> group_num = gnum	1342:2:28838:28867	750051	7	True				
ANR	750125	AssignmentExpression	NCALL ( node ) -> group_num = gnum		750051	0		=			
ANR	750126	PtrMemberAccess	NCALL ( node ) -> group_num		750051	0					
ANR	750127	CallExpression	NCALL ( node )		750051	0					
ANR	750128	Callee	NCALL		750051	0					
ANR	750129	Identifier	NCALL		750051	0					
ANR	750130	ArgumentList	node		750051	1					
ANR	750131	Argument	node		750051	0					
ANR	750132	Identifier	node		750051	0					
ANR	750133	Identifier	group_num		750051	1					
ANR	750134	Identifier	gnum		750051	1					
ANR	750135	ReturnStatement	return node ;	1343:2:28906:28917	750051	8	True				
ANR	750136	Identifier	node		750051	0					
ANR	750137	ReturnType	static Node *		750051	1					
ANR	750138	Identifier	node_new_call		750051	2					
ANR	750139	ParameterList	"UChar * name , UChar * name_end , int gnum"		750051	3					
ANR	750140	Parameter	UChar * name	1332:14:28573:28583	750051	0	True				
ANR	750141	ParameterType	UChar *		750051	0					
ANR	750142	Identifier	name		750051	1					
ANR	750143	Parameter	UChar * name_end	1332:27:28586:28600	750051	1	True				
ANR	750144	ParameterType	UChar *		750051	0					
ANR	750145	Identifier	name_end		750051	1					
ANR	750146	Parameter	int gnum	1332:44:28603:28610	750051	2	True				
ANR	750147	ParameterType	int		750051	0					
ANR	750148	Identifier	gnum		750051	1					
ANR	750149	CFGEntryNode	ENTRY		750051		True				
ANR	750150	CFGExitNode	EXIT		750051		True				
ANR	750151	Symbol	NT_CALL		750051						
ANR	750152	Symbol	NCALL		750051						
ANR	750153	Symbol	NCALL ( node ) -> name		750051						
ANR	750154	Symbol	gnum		750051						
ANR	750155	Symbol	node		750051						
ANR	750156	Symbol	node_new		750051						
ANR	750157	Symbol	name		750051						
ANR	750158	Symbol	NCALL ( node ) -> target		750051						
ANR	750159	Symbol	NCALL ( node ) -> state		750051						
ANR	750160	Symbol	NULL_NODE		750051						
ANR	750161	Symbol	* NCALL		750051						
ANR	750162	Symbol	NCALL ( node ) -> group_num		750051						
ANR	750163	Symbol	name_end		750051						
ANR	750164	Symbol	NCALL ( node ) -> name_end		750051						
ANR	750165	Function	node_new_quantifier	1347:0:28929:29583							
ANR	750166	FunctionDef	"node_new_quantifier (int lower , int upper , int by_number)"		750165	0					
ANR	750167	CompoundStatement		1349:0:28999:29583	750165	0					
ANR	750168	IdentifierDeclStatement	Node * node = node_new ( ) ;	1350:2:29003:29026	750165	0	True				
ANR	750169	IdentifierDecl	* node = node_new ( )		750165	0					
ANR	750170	IdentifierDeclType	Node *		750165	0					
ANR	750171	Identifier	node		750165	1					
ANR	750172	AssignmentExpression	* node = node_new ( )		750165	2		=			
ANR	750173	Identifier	node		750165	0					
ANR	750174	CallExpression	node_new ( )		750165	1					
ANR	750175	Callee	node_new		750165	0					
ANR	750176	Identifier	node_new		750165	0					
ANR	750177	ArgumentList			750165	1					
ANR	750178	ExpressionStatement	CHECK_NULL_RETURN ( node )	1351:2:29030:29053	750165	1	True				
ANR	750179	CallExpression	CHECK_NULL_RETURN ( node )		750165	0					
ANR	750180	Callee	CHECK_NULL_RETURN		750165	0					
ANR	750181	Identifier	CHECK_NULL_RETURN		750165	0					
ANR	750182	ArgumentList	node		750165	1					
ANR	750183	Argument	node		750165	0					
ANR	750184	Identifier	node		750165	0					
ANR	750185	ExpressionStatement	"SET_NTYPE ( node , NT_QTFR )"	1353:2:29058:29082	750165	2	True				
ANR	750186	CallExpression	"SET_NTYPE ( node , NT_QTFR )"		750165	0					
ANR	750187	Callee	SET_NTYPE		750165	0					
ANR	750188	Identifier	SET_NTYPE		750165	0					
ANR	750189	ArgumentList	node		750165	1					
ANR	750190	Argument	node		750165	0					
ANR	750191	Identifier	node		750165	0					
ANR	750192	Argument	NT_QTFR		750165	1					
ANR	750193	Identifier	NT_QTFR		750165	0					
ANR	750194	ExpressionStatement	NQTFR ( node ) -> state = 0	1354:2:29086:29109	750165	3	True				
ANR	750195	AssignmentExpression	NQTFR ( node ) -> state = 0		750165	0		=			
ANR	750196	PtrMemberAccess	NQTFR ( node ) -> state		750165	0					
ANR	750197	CallExpression	NQTFR ( node )		750165	0					
ANR	750198	Callee	NQTFR		750165	0					
ANR	750199	Identifier	NQTFR		750165	0					
ANR	750200	ArgumentList	node		750165	1					
ANR	750201	Argument	node		750165	0					
ANR	750202	Identifier	node		750165	0					
ANR	750203	Identifier	state		750165	1					
ANR	750204	PrimaryExpression	0		750165	1					
ANR	750205	ExpressionStatement	NQTFR ( node ) -> target = NULL	1355:2:29113:29139	750165	4	True				
ANR	750206	AssignmentExpression	NQTFR ( node ) -> target = NULL		750165	0		=			
ANR	750207	PtrMemberAccess	NQTFR ( node ) -> target		750165	0					
ANR	750208	CallExpression	NQTFR ( node )		750165	0					
ANR	750209	Callee	NQTFR		750165	0					
ANR	750210	Identifier	NQTFR		750165	0					
ANR	750211	ArgumentList	node		750165	1					
ANR	750212	Argument	node		750165	0					
ANR	750213	Identifier	node		750165	0					
ANR	750214	Identifier	target		750165	1					
ANR	750215	Identifier	NULL		750165	1					
ANR	750216	ExpressionStatement	NQTFR ( node ) -> lower = lower	1356:2:29143:29170	750165	5	True				
ANR	750217	AssignmentExpression	NQTFR ( node ) -> lower = lower		750165	0		=			
ANR	750218	PtrMemberAccess	NQTFR ( node ) -> lower		750165	0					
ANR	750219	CallExpression	NQTFR ( node )		750165	0					
ANR	750220	Callee	NQTFR		750165	0					
ANR	750221	Identifier	NQTFR		750165	0					
ANR	750222	ArgumentList	node		750165	1					
ANR	750223	Argument	node		750165	0					
ANR	750224	Identifier	node		750165	0					
ANR	750225	Identifier	lower		750165	1					
ANR	750226	Identifier	lower		750165	1					
ANR	750227	ExpressionStatement	NQTFR ( node ) -> upper = upper	1357:2:29174:29201	750165	6	True				
ANR	750228	AssignmentExpression	NQTFR ( node ) -> upper = upper		750165	0		=			
ANR	750229	PtrMemberAccess	NQTFR ( node ) -> upper		750165	0					
ANR	750230	CallExpression	NQTFR ( node )		750165	0					
ANR	750231	Callee	NQTFR		750165	0					
ANR	750232	Identifier	NQTFR		750165	0					
ANR	750233	ArgumentList	node		750165	1					
ANR	750234	Argument	node		750165	0					
ANR	750235	Identifier	node		750165	0					
ANR	750236	Identifier	upper		750165	1					
ANR	750237	Identifier	upper		750165	1					
ANR	750238	ExpressionStatement	NQTFR ( node ) -> greedy = 1	1358:2:29205:29228	750165	7	True				
ANR	750239	AssignmentExpression	NQTFR ( node ) -> greedy = 1		750165	0		=			
ANR	750240	PtrMemberAccess	NQTFR ( node ) -> greedy		750165	0					
ANR	750241	CallExpression	NQTFR ( node )		750165	0					
ANR	750242	Callee	NQTFR		750165	0					
ANR	750243	Identifier	NQTFR		750165	0					
ANR	750244	ArgumentList	node		750165	1					
ANR	750245	Argument	node		750165	0					
ANR	750246	Identifier	node		750165	0					
ANR	750247	Identifier	greedy		750165	1					
ANR	750248	PrimaryExpression	1		750165	1					
ANR	750249	ExpressionStatement	NQTFR ( node ) -> target_empty_info = NQ_TARGET_ISNOT_EMPTY	1359:2:29232:29286	750165	8	True				
ANR	750250	AssignmentExpression	NQTFR ( node ) -> target_empty_info = NQ_TARGET_ISNOT_EMPTY		750165	0		=			
ANR	750251	PtrMemberAccess	NQTFR ( node ) -> target_empty_info		750165	0					
ANR	750252	CallExpression	NQTFR ( node )		750165	0					
ANR	750253	Callee	NQTFR		750165	0					
ANR	750254	Identifier	NQTFR		750165	0					
ANR	750255	ArgumentList	node		750165	1					
ANR	750256	Argument	node		750165	0					
ANR	750257	Identifier	node		750165	0					
ANR	750258	Identifier	target_empty_info		750165	1					
ANR	750259	Identifier	NQ_TARGET_ISNOT_EMPTY		750165	1					
ANR	750260	ExpressionStatement	NQTFR ( node ) -> head_exact = NULL_NODE	1360:2:29290:29332	750165	9	True				
ANR	750261	AssignmentExpression	NQTFR ( node ) -> head_exact = NULL_NODE		750165	0		=			
ANR	750262	PtrMemberAccess	NQTFR ( node ) -> head_exact		750165	0					
ANR	750263	CallExpression	NQTFR ( node )		750165	0					
ANR	750264	Callee	NQTFR		750165	0					
ANR	750265	Identifier	NQTFR		750165	0					
ANR	750266	ArgumentList	node		750165	1					
ANR	750267	Argument	node		750165	0					
ANR	750268	Identifier	node		750165	0					
ANR	750269	Identifier	head_exact		750165	1					
ANR	750270	Identifier	NULL_NODE		750165	1					
ANR	750271	ExpressionStatement	NQTFR ( node ) -> next_head_exact = NULL_NODE	1361:2:29336:29378	750165	10	True				
ANR	750272	AssignmentExpression	NQTFR ( node ) -> next_head_exact = NULL_NODE		750165	0		=			
ANR	750273	PtrMemberAccess	NQTFR ( node ) -> next_head_exact		750165	0					
ANR	750274	CallExpression	NQTFR ( node )		750165	0					
ANR	750275	Callee	NQTFR		750165	0					
ANR	750276	Identifier	NQTFR		750165	0					
ANR	750277	ArgumentList	node		750165	1					
ANR	750278	Argument	node		750165	0					
ANR	750279	Identifier	node		750165	0					
ANR	750280	Identifier	next_head_exact		750165	1					
ANR	750281	Identifier	NULL_NODE		750165	1					
ANR	750282	ExpressionStatement	NQTFR ( node ) -> is_refered = 0	1362:2:29382:29416	750165	11	True				
ANR	750283	AssignmentExpression	NQTFR ( node ) -> is_refered = 0		750165	0		=			
ANR	750284	PtrMemberAccess	NQTFR ( node ) -> is_refered		750165	0					
ANR	750285	CallExpression	NQTFR ( node )		750165	0					
ANR	750286	Callee	NQTFR		750165	0					
ANR	750287	Identifier	NQTFR		750165	0					
ANR	750288	ArgumentList	node		750165	1					
ANR	750289	Argument	node		750165	0					
ANR	750290	Identifier	node		750165	0					
ANR	750291	Identifier	is_refered		750165	1					
ANR	750292	PrimaryExpression	0		750165	1					
ANR	750293	IfStatement	if ( by_number != 0 )		750165	12					
ANR	750294	Condition	by_number != 0	1363:6:29424:29437	750165	0	True				
ANR	750295	EqualityExpression	by_number != 0		750165	0		!=			
ANR	750296	Identifier	by_number		750165	0					
ANR	750297	PrimaryExpression	0		750165	1					
ANR	750298	ExpressionStatement	NQTFR ( node ) -> state |= NST_BY_NUMBER	1364:4:29444:29479	750165	1	True				
ANR	750299	AssignmentExpression	NQTFR ( node ) -> state |= NST_BY_NUMBER		750165	0		|=			
ANR	750300	PtrMemberAccess	NQTFR ( node ) -> state		750165	0					
ANR	750301	CallExpression	NQTFR ( node )		750165	0					
ANR	750302	Callee	NQTFR		750165	0					
ANR	750303	Identifier	NQTFR		750165	0					
ANR	750304	ArgumentList	node		750165	1					
ANR	750305	Argument	node		750165	0					
ANR	750306	Identifier	node		750165	0					
ANR	750307	Identifier	state		750165	1					
ANR	750308	Identifier	NST_BY_NUMBER		750165	1					
ANR	750309	ExpressionStatement	NQTFR ( node ) -> comb_exp_check_num = 0	1367:2:29523:29558	750165	13	True				
ANR	750310	AssignmentExpression	NQTFR ( node ) -> comb_exp_check_num = 0		750165	0		=			
ANR	750311	PtrMemberAccess	NQTFR ( node ) -> comb_exp_check_num		750165	0					
ANR	750312	CallExpression	NQTFR ( node )		750165	0					
ANR	750313	Callee	NQTFR		750165	0					
ANR	750314	Identifier	NQTFR		750165	0					
ANR	750315	ArgumentList	node		750165	1					
ANR	750316	Argument	node		750165	0					
ANR	750317	Identifier	node		750165	0					
ANR	750318	Identifier	comb_exp_check_num		750165	1					
ANR	750319	PrimaryExpression	0		750165	1					
ANR	750320	ReturnStatement	return node ;	1370:2:29570:29581	750165	14	True				
ANR	750321	Identifier	node		750165	0					
ANR	750322	ReturnType	static Node *		750165	1					
ANR	750323	Identifier	node_new_quantifier		750165	2					
ANR	750324	ParameterList	"int lower , int upper , int by_number"		750165	3					
ANR	750325	Parameter	int lower	1348:20:28962:28970	750165	0	True				
ANR	750326	ParameterType	int		750165	0					
ANR	750327	Identifier	lower		750165	1					
ANR	750328	Parameter	int upper	1348:31:28973:28981	750165	1	True				
ANR	750329	ParameterType	int		750165	0					
ANR	750330	Identifier	upper		750165	1					
ANR	750331	Parameter	int by_number	1348:42:28984:28996	750165	2	True				
ANR	750332	ParameterType	int		750165	0					
ANR	750333	Identifier	by_number		750165	1					
ANR	750334	CFGEntryNode	ENTRY		750165		True				
ANR	750335	CFGExitNode	EXIT		750165		True				
ANR	750336	Symbol	NQTFR ( node ) -> head_exact		750165						
ANR	750337	Symbol	NQTFR ( node ) -> target		750165						
ANR	750338	Symbol	NQ_TARGET_ISNOT_EMPTY		750165						
ANR	750339	Symbol	NULL		750165						
ANR	750340	Symbol	NQTFR ( node ) -> upper		750165						
ANR	750341	Symbol	NQTFR ( node ) -> lower		750165						
ANR	750342	Symbol	lower		750165						
ANR	750343	Symbol	upper		750165						
ANR	750344	Symbol	NQTFR ( node ) -> is_refered		750165						
ANR	750345	Symbol	NQTFR		750165						
ANR	750346	Symbol	NQTFR ( node ) -> next_head_exact		750165						
ANR	750347	Symbol	node		750165						
ANR	750348	Symbol	NQTFR ( node ) -> state		750165						
ANR	750349	Symbol	NT_QTFR		750165						
ANR	750350	Symbol	* NQTFR		750165						
ANR	750351	Symbol	node_new		750165						
ANR	750352	Symbol	NQTFR ( node ) -> greedy		750165						
ANR	750353	Symbol	NQTFR ( node ) -> comb_exp_check_num		750165						
ANR	750354	Symbol	by_number		750165						
ANR	750355	Symbol	NST_BY_NUMBER		750165						
ANR	750356	Symbol	NULL_NODE		750165						
ANR	750357	Symbol	NQTFR ( node ) -> target_empty_info		750165						
ANR	750358	Function	node_new_enclose	1373:0:29586:29971							
ANR	750359	FunctionDef	node_new_enclose (int type)		750358	0					
ANR	750360	CompoundStatement		1375:0:29626:29971	750358	0					
ANR	750361	IdentifierDeclStatement	Node * node = node_new ( ) ;	1376:2:29630:29653	750358	0	True				
ANR	750362	IdentifierDecl	* node = node_new ( )		750358	0					
ANR	750363	IdentifierDeclType	Node *		750358	0					
ANR	750364	Identifier	node		750358	1					
ANR	750365	AssignmentExpression	* node = node_new ( )		750358	2		=			
ANR	750366	Identifier	node		750358	0					
ANR	750367	CallExpression	node_new ( )		750358	1					
ANR	750368	Callee	node_new		750358	0					
ANR	750369	Identifier	node_new		750358	0					
ANR	750370	ArgumentList			750358	1					
ANR	750371	ExpressionStatement	CHECK_NULL_RETURN ( node )	1377:2:29657:29680	750358	1	True				
ANR	750372	CallExpression	CHECK_NULL_RETURN ( node )		750358	0					
ANR	750373	Callee	CHECK_NULL_RETURN		750358	0					
ANR	750374	Identifier	CHECK_NULL_RETURN		750358	0					
ANR	750375	ArgumentList	node		750358	1					
ANR	750376	Argument	node		750358	0					
ANR	750377	Identifier	node		750358	0					
ANR	750378	ExpressionStatement	"SET_NTYPE ( node , NT_ENCLOSE )"	1379:2:29685:29712	750358	2	True				
ANR	750379	CallExpression	"SET_NTYPE ( node , NT_ENCLOSE )"		750358	0					
ANR	750380	Callee	SET_NTYPE		750358	0					
ANR	750381	Identifier	SET_NTYPE		750358	0					
ANR	750382	ArgumentList	node		750358	1					
ANR	750383	Argument	node		750358	0					
ANR	750384	Identifier	node		750358	0					
ANR	750385	Argument	NT_ENCLOSE		750358	1					
ANR	750386	Identifier	NT_ENCLOSE		750358	0					
ANR	750387	ExpressionStatement	NENCLOSE ( node ) -> type = type	1380:2:29716:29748	750358	3	True				
ANR	750388	AssignmentExpression	NENCLOSE ( node ) -> type = type		750358	0		=			
ANR	750389	PtrMemberAccess	NENCLOSE ( node ) -> type		750358	0					
ANR	750390	CallExpression	NENCLOSE ( node )		750358	0					
ANR	750391	Callee	NENCLOSE		750358	0					
ANR	750392	Identifier	NENCLOSE		750358	0					
ANR	750393	ArgumentList	node		750358	1					
ANR	750394	Argument	node		750358	0					
ANR	750395	Identifier	node		750358	0					
ANR	750396	Identifier	type		750358	1					
ANR	750397	Identifier	type		750358	1					
ANR	750398	ExpressionStatement	NENCLOSE ( node ) -> state = 0	1381:2:29752:29782	750358	4	True				
ANR	750399	AssignmentExpression	NENCLOSE ( node ) -> state = 0		750358	0		=			
ANR	750400	PtrMemberAccess	NENCLOSE ( node ) -> state		750358	0					
ANR	750401	CallExpression	NENCLOSE ( node )		750358	0					
ANR	750402	Callee	NENCLOSE		750358	0					
ANR	750403	Identifier	NENCLOSE		750358	0					
ANR	750404	ArgumentList	node		750358	1					
ANR	750405	Argument	node		750358	0					
ANR	750406	Identifier	node		750358	0					
ANR	750407	Identifier	state		750358	1					
ANR	750408	PrimaryExpression	0		750358	1					
ANR	750409	ExpressionStatement	NENCLOSE ( node ) -> regnum = 0	1382:2:29786:29816	750358	5	True				
ANR	750410	AssignmentExpression	NENCLOSE ( node ) -> regnum = 0		750358	0		=			
ANR	750411	PtrMemberAccess	NENCLOSE ( node ) -> regnum		750358	0					
ANR	750412	CallExpression	NENCLOSE ( node )		750358	0					
ANR	750413	Callee	NENCLOSE		750358	0					
ANR	750414	Identifier	NENCLOSE		750358	0					
ANR	750415	ArgumentList	node		750358	1					
ANR	750416	Argument	node		750358	0					
ANR	750417	Identifier	node		750358	0					
ANR	750418	Identifier	regnum		750358	1					
ANR	750419	PrimaryExpression	0		750358	1					
ANR	750420	ExpressionStatement	NENCLOSE ( node ) -> option = 0	1383:2:29820:29850	750358	6	True				
ANR	750421	AssignmentExpression	NENCLOSE ( node ) -> option = 0		750358	0		=			
ANR	750422	PtrMemberAccess	NENCLOSE ( node ) -> option		750358	0					
ANR	750423	CallExpression	NENCLOSE ( node )		750358	0					
ANR	750424	Callee	NENCLOSE		750358	0					
ANR	750425	Identifier	NENCLOSE		750358	0					
ANR	750426	ArgumentList	node		750358	1					
ANR	750427	Argument	node		750358	0					
ANR	750428	Identifier	node		750358	0					
ANR	750429	Identifier	option		750358	1					
ANR	750430	PrimaryExpression	0		750358	1					
ANR	750431	ExpressionStatement	NENCLOSE ( node ) -> target = NULL	1384:2:29854:29886	750358	7	True				
ANR	750432	AssignmentExpression	NENCLOSE ( node ) -> target = NULL		750358	0		=			
ANR	750433	PtrMemberAccess	NENCLOSE ( node ) -> target		750358	0					
ANR	750434	CallExpression	NENCLOSE ( node )		750358	0					
ANR	750435	Callee	NENCLOSE		750358	0					
ANR	750436	Identifier	NENCLOSE		750358	0					
ANR	750437	ArgumentList	node		750358	1					
ANR	750438	Argument	node		750358	0					
ANR	750439	Identifier	node		750358	0					
ANR	750440	Identifier	target		750358	1					
ANR	750441	Identifier	NULL		750358	1					
ANR	750442	ExpressionStatement	NENCLOSE ( node ) -> call_addr = - 1	1385:2:29890:29920	750358	8	True				
ANR	750443	AssignmentExpression	NENCLOSE ( node ) -> call_addr = - 1		750358	0		=			
ANR	750444	PtrMemberAccess	NENCLOSE ( node ) -> call_addr		750358	0					
ANR	750445	CallExpression	NENCLOSE ( node )		750358	0					
ANR	750446	Callee	NENCLOSE		750358	0					
ANR	750447	Identifier	NENCLOSE		750358	0					
ANR	750448	ArgumentList	node		750358	1					
ANR	750449	Argument	node		750358	0					
ANR	750450	Identifier	node		750358	0					
ANR	750451	Identifier	call_addr		750358	1					
ANR	750452	UnaryOperationExpression	- 1		750358	1					
ANR	750453	UnaryOperator	-		750358	0					
ANR	750454	PrimaryExpression	1		750358	1					
ANR	750455	ExpressionStatement	NENCLOSE ( node ) -> opt_count = 0	1386:2:29924:29954	750358	9	True				
ANR	750456	AssignmentExpression	NENCLOSE ( node ) -> opt_count = 0		750358	0		=			
ANR	750457	PtrMemberAccess	NENCLOSE ( node ) -> opt_count		750358	0					
ANR	750458	CallExpression	NENCLOSE ( node )		750358	0					
ANR	750459	Callee	NENCLOSE		750358	0					
ANR	750460	Identifier	NENCLOSE		750358	0					
ANR	750461	ArgumentList	node		750358	1					
ANR	750462	Argument	node		750358	0					
ANR	750463	Identifier	node		750358	0					
ANR	750464	Identifier	opt_count		750358	1					
ANR	750465	PrimaryExpression	0		750358	1					
ANR	750466	ReturnStatement	return node ;	1387:2:29958:29969	750358	10	True				
ANR	750467	Identifier	node		750358	0					
ANR	750468	ReturnType	static Node *		750358	1					
ANR	750469	Identifier	node_new_enclose		750358	2					
ANR	750470	ParameterList	int type		750358	3					
ANR	750471	Parameter	int type	1374:17:29616:29623	750358	0	True				
ANR	750472	ParameterType	int		750358	0					
ANR	750473	Identifier	type		750358	1					
ANR	750474	CFGEntryNode	ENTRY		750358		True				
ANR	750475	CFGExitNode	EXIT		750358		True				
ANR	750476	Symbol	NULL		750358						
ANR	750477	Symbol	* NENCLOSE		750358						
ANR	750478	Symbol	NENCLOSE ( node ) -> opt_count		750358						
ANR	750479	Symbol	NENCLOSE ( node ) -> call_addr		750358						
ANR	750480	Symbol	NENCLOSE ( node ) -> type		750358						
ANR	750481	Symbol	type		750358						
ANR	750482	Symbol	NENCLOSE ( node ) -> target		750358						
ANR	750483	Symbol	node		750358						
ANR	750484	Symbol	NENCLOSE ( node ) -> regnum		750358						
ANR	750485	Symbol	node_new		750358						
ANR	750486	Symbol	NT_ENCLOSE		750358						
ANR	750487	Symbol	NENCLOSE		750358						
ANR	750488	Symbol	NENCLOSE ( node ) -> state		750358						
ANR	750489	Symbol	NENCLOSE ( node ) -> option		750358						
ANR	750490	Function	onig_node_new_enclose	1390:0:29974:30054							
ANR	750491	FunctionDef	onig_node_new_enclose (int type)		750490	0					
ANR	750492	CompoundStatement		1392:0:30019:30054	750490	0					
ANR	750493	ReturnStatement	return node_new_enclose ( type ) ;	1393:2:30023:30052	750490	0	True				
ANR	750494	CallExpression	node_new_enclose ( type )		750490	0					
ANR	750495	Callee	node_new_enclose		750490	0					
ANR	750496	Identifier	node_new_enclose		750490	0					
ANR	750497	ArgumentList	type		750490	1					
ANR	750498	Argument	type		750490	0					
ANR	750499	Identifier	type		750490	0					
ANR	750500	ReturnType	extern Node *		750490	1					
ANR	750501	Identifier	onig_node_new_enclose		750490	2					
ANR	750502	ParameterList	int type		750490	3					
ANR	750503	Parameter	int type	1391:22:30009:30016	750490	0	True				
ANR	750504	ParameterType	int		750490	0					
ANR	750505	Identifier	type		750490	1					
ANR	750506	CFGEntryNode	ENTRY		750490		True				
ANR	750507	CFGExitNode	EXIT		750490		True				
ANR	750508	Symbol	type		750490						
ANR	750509	Symbol	node_new_enclose		750490						
ANR	750510	Function	node_new_enclose_memory	1396:0:30057:30358							
ANR	750511	FunctionDef	"node_new_enclose_memory (OnigOptionType option , int is_named)"		750510	0					
ANR	750512	CompoundStatement		1398:0:30131:30358	750510	0					
ANR	750513	IdentifierDeclStatement	Node * node = node_new_enclose ( ENCLOSE_MEMORY ) ;	1399:2:30135:30180	750510	0	True				
ANR	750514	IdentifierDecl	* node = node_new_enclose ( ENCLOSE_MEMORY )		750510	0					
ANR	750515	IdentifierDeclType	Node *		750510	0					
ANR	750516	Identifier	node		750510	1					
ANR	750517	AssignmentExpression	* node = node_new_enclose ( ENCLOSE_MEMORY )		750510	2		=			
ANR	750518	Identifier	node		750510	0					
ANR	750519	CallExpression	node_new_enclose ( ENCLOSE_MEMORY )		750510	1					
ANR	750520	Callee	node_new_enclose		750510	0					
ANR	750521	Identifier	node_new_enclose		750510	0					
ANR	750522	ArgumentList	ENCLOSE_MEMORY		750510	1					
ANR	750523	Argument	ENCLOSE_MEMORY		750510	0					
ANR	750524	Identifier	ENCLOSE_MEMORY		750510	0					
ANR	750525	ExpressionStatement	CHECK_NULL_RETURN ( node )	1400:2:30184:30207	750510	1	True				
ANR	750526	CallExpression	CHECK_NULL_RETURN ( node )		750510	0					
ANR	750527	Callee	CHECK_NULL_RETURN		750510	0					
ANR	750528	Identifier	CHECK_NULL_RETURN		750510	0					
ANR	750529	ArgumentList	node		750510	1					
ANR	750530	Argument	node		750510	0					
ANR	750531	Identifier	node		750510	0					
ANR	750532	IfStatement	if ( is_named != 0 )		750510	2					
ANR	750533	Condition	is_named != 0	1401:6:30215:30227	750510	0	True				
ANR	750534	EqualityExpression	is_named != 0		750510	0		!=			
ANR	750535	Identifier	is_named		750510	0					
ANR	750536	PrimaryExpression	0		750510	1					
ANR	750537	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_NAMED_GROUP )"	1402:4:30234:30275	750510	1	True				
ANR	750538	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_NAMED_GROUP )"		750510	0					
ANR	750539	Callee	SET_ENCLOSE_STATUS		750510	0					
ANR	750540	Identifier	SET_ENCLOSE_STATUS		750510	0					
ANR	750541	ArgumentList	node		750510	1					
ANR	750542	Argument	node		750510	0					
ANR	750543	Identifier	node		750510	0					
ANR	750544	Argument	NST_NAMED_GROUP		750510	1					
ANR	750545	Identifier	NST_NAMED_GROUP		750510	0					
ANR	750546	ExpressionStatement	NENCLOSE ( node ) -> option = option	1405:2:30303:30334	750510	3	True				
ANR	750547	AssignmentExpression	NENCLOSE ( node ) -> option = option		750510	0		=			
ANR	750548	PtrMemberAccess	NENCLOSE ( node ) -> option		750510	0					
ANR	750549	CallExpression	NENCLOSE ( node )		750510	0					
ANR	750550	Callee	NENCLOSE		750510	0					
ANR	750551	Identifier	NENCLOSE		750510	0					
ANR	750552	ArgumentList	node		750510	1					
ANR	750553	Argument	node		750510	0					
ANR	750554	Identifier	node		750510	0					
ANR	750555	Identifier	option		750510	1					
ANR	750556	Identifier	option		750510	1					
ANR	750557	ReturnStatement	return node ;	1407:2:30345:30356	750510	4	True				
ANR	750558	Identifier	node		750510	0					
ANR	750559	ReturnType	static Node *		750510	1					
ANR	750560	Identifier	node_new_enclose_memory		750510	2					
ANR	750561	ParameterList	"OnigOptionType option , int is_named"		750510	3					
ANR	750562	Parameter	OnigOptionType option	1397:24:30094:30114	750510	0	True				
ANR	750563	ParameterType	OnigOptionType		750510	0					
ANR	750564	Identifier	option		750510	1					
ANR	750565	Parameter	int is_named	1397:47:30117:30128	750510	1	True				
ANR	750566	ParameterType	int		750510	0					
ANR	750567	Identifier	is_named		750510	1					
ANR	750568	CFGEntryNode	ENTRY		750510		True				
ANR	750569	CFGExitNode	EXIT		750510		True				
ANR	750570	Symbol	node		750510						
ANR	750571	Symbol	NST_NAMED_GROUP		750510						
ANR	750572	Symbol	is_named		750510						
ANR	750573	Symbol	ENCLOSE_MEMORY		750510						
ANR	750574	Symbol	* NENCLOSE		750510						
ANR	750575	Symbol	NENCLOSE		750510						
ANR	750576	Symbol	node_new_enclose		750510						
ANR	750577	Symbol	NENCLOSE ( node ) -> option		750510						
ANR	750578	Symbol	option		750510						
ANR	750579	Function	node_new_option	1410:0:30361:30541							
ANR	750580	FunctionDef	node_new_option (OnigOptionType option)		750579	0					
ANR	750581	CompoundStatement		1412:0:30413:30541	750579	0					
ANR	750582	IdentifierDeclStatement	Node * node = node_new_enclose ( ENCLOSE_OPTION ) ;	1413:2:30417:30462	750579	0	True				
ANR	750583	IdentifierDecl	* node = node_new_enclose ( ENCLOSE_OPTION )		750579	0					
ANR	750584	IdentifierDeclType	Node *		750579	0					
ANR	750585	Identifier	node		750579	1					
ANR	750586	AssignmentExpression	* node = node_new_enclose ( ENCLOSE_OPTION )		750579	2		=			
ANR	750587	Identifier	node		750579	0					
ANR	750588	CallExpression	node_new_enclose ( ENCLOSE_OPTION )		750579	1					
ANR	750589	Callee	node_new_enclose		750579	0					
ANR	750590	Identifier	node_new_enclose		750579	0					
ANR	750591	ArgumentList	ENCLOSE_OPTION		750579	1					
ANR	750592	Argument	ENCLOSE_OPTION		750579	0					
ANR	750593	Identifier	ENCLOSE_OPTION		750579	0					
ANR	750594	ExpressionStatement	CHECK_NULL_RETURN ( node )	1414:2:30466:30489	750579	1	True				
ANR	750595	CallExpression	CHECK_NULL_RETURN ( node )		750579	0					
ANR	750596	Callee	CHECK_NULL_RETURN		750579	0					
ANR	750597	Identifier	CHECK_NULL_RETURN		750579	0					
ANR	750598	ArgumentList	node		750579	1					
ANR	750599	Argument	node		750579	0					
ANR	750600	Identifier	node		750579	0					
ANR	750601	ExpressionStatement	NENCLOSE ( node ) -> option = option	1415:2:30493:30524	750579	2	True				
ANR	750602	AssignmentExpression	NENCLOSE ( node ) -> option = option		750579	0		=			
ANR	750603	PtrMemberAccess	NENCLOSE ( node ) -> option		750579	0					
ANR	750604	CallExpression	NENCLOSE ( node )		750579	0					
ANR	750605	Callee	NENCLOSE		750579	0					
ANR	750606	Identifier	NENCLOSE		750579	0					
ANR	750607	ArgumentList	node		750579	1					
ANR	750608	Argument	node		750579	0					
ANR	750609	Identifier	node		750579	0					
ANR	750610	Identifier	option		750579	1					
ANR	750611	Identifier	option		750579	1					
ANR	750612	ReturnStatement	return node ;	1416:2:30528:30539	750579	3	True				
ANR	750613	Identifier	node		750579	0					
ANR	750614	ReturnType	static Node *		750579	1					
ANR	750615	Identifier	node_new_option		750579	2					
ANR	750616	ParameterList	OnigOptionType option		750579	3					
ANR	750617	Parameter	OnigOptionType option	1411:16:30390:30410	750579	0	True				
ANR	750618	ParameterType	OnigOptionType		750579	0					
ANR	750619	Identifier	option		750579	1					
ANR	750620	CFGEntryNode	ENTRY		750579		True				
ANR	750621	CFGExitNode	EXIT		750579		True				
ANR	750622	Symbol	node		750579						
ANR	750623	Symbol	NENCLOSE		750579						
ANR	750624	Symbol	* NENCLOSE		750579						
ANR	750625	Symbol	ENCLOSE_OPTION		750579						
ANR	750626	Symbol	node_new_enclose		750579						
ANR	750627	Symbol	NENCLOSE ( node ) -> option		750579						
ANR	750628	Symbol	option		750579						
ANR	750629	Function	onig_node_str_cat	1419:0:30544:31384							
ANR	750630	FunctionDef	"onig_node_str_cat (Node * node , const UChar * s , const UChar * end)"		750629	0					
ANR	750631	CompoundStatement		1421:0:30619:31384	750629	0					
ANR	750632	IdentifierDeclStatement	int addlen = end - s ;	1422:2:30623:30643	750629	0	True				
ANR	750633	IdentifierDecl	addlen = end - s		750629	0					
ANR	750634	IdentifierDeclType	int		750629	0					
ANR	750635	Identifier	addlen		750629	1					
ANR	750636	AssignmentExpression	addlen = end - s		750629	2		=			
ANR	750637	Identifier	addlen		750629	0					
ANR	750638	AdditiveExpression	end - s		750629	1		-			
ANR	750639	Identifier	end		750629	0					
ANR	750640	Identifier	s		750629	1					
ANR	750641	IfStatement	if ( addlen > 0 )		750629	1					
ANR	750642	Condition	addlen > 0	1424:6:30652:30661	750629	0	True				
ANR	750643	RelationalExpression	addlen > 0		750629	0		>			
ANR	750644	Identifier	addlen		750629	0					
ANR	750645	PrimaryExpression	0		750629	1					
ANR	750646	CompoundStatement		5:4:50:92	750629	1					
ANR	750647	IdentifierDeclStatement	int len = NSTR ( node ) -> end - NSTR ( node ) -> s ;	1425:4:30670:30712	750629	0	True				
ANR	750648	IdentifierDecl	len = NSTR ( node ) -> end - NSTR ( node ) -> s		750629	0					
ANR	750649	IdentifierDeclType	int		750629	0					
ANR	750650	Identifier	len		750629	1					
ANR	750651	AssignmentExpression	len = NSTR ( node ) -> end - NSTR ( node ) -> s		750629	2		=			
ANR	750652	Identifier	len		750629	0					
ANR	750653	AdditiveExpression	NSTR ( node ) -> end - NSTR ( node ) -> s		750629	1		-			
ANR	750654	PtrMemberAccess	NSTR ( node ) -> end		750629	0					
ANR	750655	CallExpression	NSTR ( node )		750629	0					
ANR	750656	Callee	NSTR		750629	0					
ANR	750657	Identifier	NSTR		750629	0					
ANR	750658	ArgumentList	node		750629	1					
ANR	750659	Argument	node		750629	0					
ANR	750660	Identifier	node		750629	0					
ANR	750661	Identifier	end		750629	1					
ANR	750662	PtrMemberAccess	NSTR ( node ) -> s		750629	1					
ANR	750663	CallExpression	NSTR ( node )		750629	0					
ANR	750664	Callee	NSTR		750629	0					
ANR	750665	Identifier	NSTR		750629	0					
ANR	750666	ArgumentList	node		750629	1					
ANR	750667	Argument	node		750629	0					
ANR	750668	Identifier	node		750629	0					
ANR	750669	Identifier	s		750629	1					
ANR	750670	IfStatement	if ( NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 ) )		750629	1					
ANR	750671	Condition	NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 )	1427:8:30723:30784	750629	0	True				
ANR	750672	OrExpression	NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 )		750629	0		||			
ANR	750673	RelationalExpression	NSTR ( node ) -> capa > 0		750629	0		>			
ANR	750674	PtrMemberAccess	NSTR ( node ) -> capa		750629	0					
ANR	750675	CallExpression	NSTR ( node )		750629	0					
ANR	750676	Callee	NSTR		750629	0					
ANR	750677	Identifier	NSTR		750629	0					
ANR	750678	ArgumentList	node		750629	1					
ANR	750679	Argument	node		750629	0					
ANR	750680	Identifier	node		750629	0					
ANR	750681	Identifier	capa		750629	1					
ANR	750682	PrimaryExpression	0		750629	1					
ANR	750683	RelationalExpression	len + addlen > NODE_STR_BUF_SIZE - 1		750629	1		>			
ANR	750684	AdditiveExpression	len + addlen		750629	0		+			
ANR	750685	Identifier	len		750629	0					
ANR	750686	Identifier	addlen		750629	1					
ANR	750687	AdditiveExpression	NODE_STR_BUF_SIZE - 1		750629	1		-			
ANR	750688	Identifier	NODE_STR_BUF_SIZE		750629	0					
ANR	750689	PrimaryExpression	1		750629	1					
ANR	750690	CompoundStatement		9:6:191:232	750629	1					
ANR	750691	IdentifierDeclStatement	UChar * p ;	1428:6:30795:30803	750629	0	True				
ANR	750692	IdentifierDecl	* p		750629	0					
ANR	750693	IdentifierDeclType	UChar *		750629	0					
ANR	750694	Identifier	p		750629	1					
ANR	750695	IdentifierDeclStatement	int capa = len + addlen + NODE_STR_MARGIN ;	1429:6:30811:30852	750629	1	True				
ANR	750696	IdentifierDecl	capa = len + addlen + NODE_STR_MARGIN		750629	0					
ANR	750697	IdentifierDeclType	int		750629	0					
ANR	750698	Identifier	capa		750629	1					
ANR	750699	AssignmentExpression	capa = len + addlen + NODE_STR_MARGIN		750629	2		=			
ANR	750700	Identifier	capa		750629	0					
ANR	750701	AdditiveExpression	len + addlen + NODE_STR_MARGIN		750629	1		+			
ANR	750702	Identifier	len		750629	0					
ANR	750703	AdditiveExpression	addlen + NODE_STR_MARGIN		750629	1		+			
ANR	750704	Identifier	addlen		750629	0					
ANR	750705	Identifier	NODE_STR_MARGIN		750629	1					
ANR	750706	IfStatement	if ( capa <= NSTR ( node ) -> capa )		750629	2					
ANR	750707	Condition	capa <= NSTR ( node ) -> capa	1431:10:30865:30888	750629	0	True				
ANR	750708	RelationalExpression	capa <= NSTR ( node ) -> capa		750629	0		<=			
ANR	750709	Identifier	capa		750629	0					
ANR	750710	PtrMemberAccess	NSTR ( node ) -> capa		750629	1					
ANR	750711	CallExpression	NSTR ( node )		750629	0					
ANR	750712	Callee	NSTR		750629	0					
ANR	750713	Identifier	NSTR		750629	0					
ANR	750714	ArgumentList	node		750629	1					
ANR	750715	Argument	node		750629	0					
ANR	750716	Identifier	node		750629	0					
ANR	750717	Identifier	capa		750629	1					
ANR	750718	CompoundStatement		11:36:271:271	750629	1					
ANR	750719	ExpressionStatement	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"	1432:1:30894:30934	750629	0	True				
ANR	750720	CallExpression	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"		750629	0					
ANR	750721	Callee	onig_strcpy		750629	0					
ANR	750722	Identifier	onig_strcpy		750629	0					
ANR	750723	ArgumentList	NSTR ( node ) -> s + len		750629	1					
ANR	750724	Argument	NSTR ( node ) -> s + len		750629	0					
ANR	750725	AdditiveExpression	NSTR ( node ) -> s + len		750629	0		+			
ANR	750726	PtrMemberAccess	NSTR ( node ) -> s		750629	0					
ANR	750727	CallExpression	NSTR ( node )		750629	0					
ANR	750728	Callee	NSTR		750629	0					
ANR	750729	Identifier	NSTR		750629	0					
ANR	750730	ArgumentList	node		750629	1					
ANR	750731	Argument	node		750629	0					
ANR	750732	Identifier	node		750629	0					
ANR	750733	Identifier	s		750629	1					
ANR	750734	Identifier	len		750629	1					
ANR	750735	Argument	s		750629	1					
ANR	750736	Identifier	s		750629	0					
ANR	750737	Argument	end		750629	2					
ANR	750738	Identifier	end		750629	0					
ANR	750739	ElseStatement	else		750629	0					
ANR	750740	CompoundStatement		14:11:335:335	750629	0					
ANR	750741	IfStatement	if ( NSTR ( node ) -> s == NSTR ( node ) -> buf )		750629	0					
ANR	750742	Condition	NSTR ( node ) -> s == NSTR ( node ) -> buf	1435:5:30962:30993	750629	0	True				
ANR	750743	EqualityExpression	NSTR ( node ) -> s == NSTR ( node ) -> buf		750629	0		==			
ANR	750744	PtrMemberAccess	NSTR ( node ) -> s		750629	0					
ANR	750745	CallExpression	NSTR ( node )		750629	0					
ANR	750746	Callee	NSTR		750629	0					
ANR	750747	Identifier	NSTR		750629	0					
ANR	750748	ArgumentList	node		750629	1					
ANR	750749	Argument	node		750629	0					
ANR	750750	Identifier	node		750629	0					
ANR	750751	Identifier	s		750629	1					
ANR	750752	PtrMemberAccess	NSTR ( node ) -> buf		750629	1					
ANR	750753	CallExpression	NSTR ( node )		750629	0					
ANR	750754	Callee	NSTR		750629	0					
ANR	750755	Identifier	NSTR		750629	0					
ANR	750756	ArgumentList	node		750629	1					
ANR	750757	Argument	node		750629	0					
ANR	750758	Identifier	node		750629	0					
ANR	750759	Identifier	buf		750629	1					
ANR	750760	ExpressionStatement	"p = strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"	1436:3:30999:31082	750629	1	True				
ANR	750761	AssignmentExpression	"p = strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		750629	0		=			
ANR	750762	Identifier	p		750629	0					
ANR	750763	CallExpression	"strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		750629	1					
ANR	750764	Callee	strcat_capa_from_static		750629	0					
ANR	750765	Identifier	strcat_capa_from_static		750629	0					
ANR	750766	ArgumentList	NSTR ( node ) -> s		750629	1					
ANR	750767	Argument	NSTR ( node ) -> s		750629	0					
ANR	750768	PtrMemberAccess	NSTR ( node ) -> s		750629	0					
ANR	750769	CallExpression	NSTR ( node )		750629	0					
ANR	750770	Callee	NSTR		750629	0					
ANR	750771	Identifier	NSTR		750629	0					
ANR	750772	ArgumentList	node		750629	1					
ANR	750773	Argument	node		750629	0					
ANR	750774	Identifier	node		750629	0					
ANR	750775	Identifier	s		750629	1					
ANR	750776	Argument	NSTR ( node ) -> end		750629	1					
ANR	750777	PtrMemberAccess	NSTR ( node ) -> end		750629	0					
ANR	750778	CallExpression	NSTR ( node )		750629	0					
ANR	750779	Callee	NSTR		750629	0					
ANR	750780	Identifier	NSTR		750629	0					
ANR	750781	ArgumentList	node		750629	1					
ANR	750782	Argument	node		750629	0					
ANR	750783	Identifier	node		750629	0					
ANR	750784	Identifier	end		750629	1					
ANR	750785	Argument	s		750629	2					
ANR	750786	Identifier	s		750629	0					
ANR	750787	Argument	end		750629	3					
ANR	750788	Identifier	end		750629	0					
ANR	750789	Argument	capa		750629	4					
ANR	750790	Identifier	capa		750629	0					
ANR	750791	ElseStatement	else		750629	0					
ANR	750792	ExpressionStatement	"p = strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"	1439:3:31093:31154	750629	0	True				
ANR	750793	AssignmentExpression	"p = strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		750629	0		=			
ANR	750794	Identifier	p		750629	0					
ANR	750795	CallExpression	"strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		750629	1					
ANR	750796	Callee	strcat_capa		750629	0					
ANR	750797	Identifier	strcat_capa		750629	0					
ANR	750798	ArgumentList	NSTR ( node ) -> s		750629	1					
ANR	750799	Argument	NSTR ( node ) -> s		750629	0					
ANR	750800	PtrMemberAccess	NSTR ( node ) -> s		750629	0					
ANR	750801	CallExpression	NSTR ( node )		750629	0					
ANR	750802	Callee	NSTR		750629	0					
ANR	750803	Identifier	NSTR		750629	0					
ANR	750804	ArgumentList	node		750629	1					
ANR	750805	Argument	node		750629	0					
ANR	750806	Identifier	node		750629	0					
ANR	750807	Identifier	s		750629	1					
ANR	750808	Argument	NSTR ( node ) -> end		750629	1					
ANR	750809	PtrMemberAccess	NSTR ( node ) -> end		750629	0					
ANR	750810	CallExpression	NSTR ( node )		750629	0					
ANR	750811	Callee	NSTR		750629	0					
ANR	750812	Identifier	NSTR		750629	0					
ANR	750813	ArgumentList	node		750629	1					
ANR	750814	Argument	node		750629	0					
ANR	750815	Identifier	node		750629	0					
ANR	750816	Identifier	end		750629	1					
ANR	750817	Argument	s		750629	2					
ANR	750818	Identifier	s		750629	0					
ANR	750819	Argument	end		750629	3					
ANR	750820	Identifier	end		750629	0					
ANR	750821	Argument	capa		750629	4					
ANR	750822	Identifier	capa		750629	0					
ANR	750823	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	1441:1:31158:31185	750629	1	True				
ANR	750824	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		750629	0					
ANR	750825	Callee	CHECK_NULL_RETURN_MEMERR		750629	0					
ANR	750826	Identifier	CHECK_NULL_RETURN_MEMERR		750629	0					
ANR	750827	ArgumentList	p		750629	1					
ANR	750828	Argument	p		750629	0					
ANR	750829	Identifier	p		750629	0					
ANR	750830	ExpressionStatement	NSTR ( node ) -> s = p	1442:1:31188:31208	750629	2	True				
ANR	750831	AssignmentExpression	NSTR ( node ) -> s = p		750629	0		=			
ANR	750832	PtrMemberAccess	NSTR ( node ) -> s		750629	0					
ANR	750833	CallExpression	NSTR ( node )		750629	0					
ANR	750834	Callee	NSTR		750629	0					
ANR	750835	Identifier	NSTR		750629	0					
ANR	750836	ArgumentList	node		750629	1					
ANR	750837	Argument	node		750629	0					
ANR	750838	Identifier	node		750629	0					
ANR	750839	Identifier	s		750629	1					
ANR	750840	Identifier	p		750629	1					
ANR	750841	ExpressionStatement	NSTR ( node ) -> capa = capa	1443:1:31211:31234	750629	3	True				
ANR	750842	AssignmentExpression	NSTR ( node ) -> capa = capa		750629	0		=			
ANR	750843	PtrMemberAccess	NSTR ( node ) -> capa		750629	0					
ANR	750844	CallExpression	NSTR ( node )		750629	0					
ANR	750845	Callee	NSTR		750629	0					
ANR	750846	Identifier	NSTR		750629	0					
ANR	750847	ArgumentList	node		750629	1					
ANR	750848	Argument	node		750629	0					
ANR	750849	Identifier	node		750629	0					
ANR	750850	Identifier	capa		750629	1					
ANR	750851	Identifier	capa		750629	1					
ANR	750852	ElseStatement	else		750629	0					
ANR	750853	CompoundStatement		26:9:639:639	750629	0					
ANR	750854	ExpressionStatement	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"	1447:6:31267:31307	750629	0	True				
ANR	750855	CallExpression	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"		750629	0					
ANR	750856	Callee	onig_strcpy		750629	0					
ANR	750857	Identifier	onig_strcpy		750629	0					
ANR	750858	ArgumentList	NSTR ( node ) -> s + len		750629	1					
ANR	750859	Argument	NSTR ( node ) -> s + len		750629	0					
ANR	750860	AdditiveExpression	NSTR ( node ) -> s + len		750629	0		+			
ANR	750861	PtrMemberAccess	NSTR ( node ) -> s		750629	0					
ANR	750862	CallExpression	NSTR ( node )		750629	0					
ANR	750863	Callee	NSTR		750629	0					
ANR	750864	Identifier	NSTR		750629	0					
ANR	750865	ArgumentList	node		750629	1					
ANR	750866	Argument	node		750629	0					
ANR	750867	Identifier	node		750629	0					
ANR	750868	Identifier	s		750629	1					
ANR	750869	Identifier	len		750629	1					
ANR	750870	Argument	s		750629	1					
ANR	750871	Identifier	s		750629	0					
ANR	750872	Argument	end		750629	2					
ANR	750873	Identifier	end		750629	0					
ANR	750874	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> s + len + addlen	1449:4:31319:31365	750629	2	True				
ANR	750875	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> s + len + addlen		750629	0		=			
ANR	750876	PtrMemberAccess	NSTR ( node ) -> end		750629	0					
ANR	750877	CallExpression	NSTR ( node )		750629	0					
ANR	750878	Callee	NSTR		750629	0					
ANR	750879	Identifier	NSTR		750629	0					
ANR	750880	ArgumentList	node		750629	1					
ANR	750881	Argument	node		750629	0					
ANR	750882	Identifier	node		750629	0					
ANR	750883	Identifier	end		750629	1					
ANR	750884	AdditiveExpression	NSTR ( node ) -> s + len + addlen		750629	1		+			
ANR	750885	PtrMemberAccess	NSTR ( node ) -> s		750629	0					
ANR	750886	CallExpression	NSTR ( node )		750629	0					
ANR	750887	Callee	NSTR		750629	0					
ANR	750888	Identifier	NSTR		750629	0					
ANR	750889	ArgumentList	node		750629	1					
ANR	750890	Argument	node		750629	0					
ANR	750891	Identifier	node		750629	0					
ANR	750892	Identifier	s		750629	1					
ANR	750893	AdditiveExpression	len + addlen		750629	1		+			
ANR	750894	Identifier	len		750629	0					
ANR	750895	Identifier	addlen		750629	1					
ANR	750896	ReturnStatement	return 0 ;	1452:2:31374:31382	750629	2	True				
ANR	750897	PrimaryExpression	0		750629	0					
ANR	750898	ReturnType	extern int		750629	1					
ANR	750899	Identifier	onig_node_str_cat		750629	2					
ANR	750900	ParameterList	"Node * node , const UChar * s , const UChar * end"		750629	3					
ANR	750901	Parameter	Node * node	1420:18:30573:30582	750629	0	True				
ANR	750902	ParameterType	Node *		750629	0					
ANR	750903	Identifier	node		750629	1					
ANR	750904	Parameter	const UChar * s	1420:30:30585:30598	750629	1	True				
ANR	750905	ParameterType	const UChar *		750629	0					
ANR	750906	Identifier	s		750629	1					
ANR	750907	Parameter	const UChar * end	1420:46:30601:30616	750629	2	True				
ANR	750908	ParameterType	const UChar *		750629	0					
ANR	750909	Identifier	end		750629	1					
ANR	750910	CFGEntryNode	ENTRY		750629		True				
ANR	750911	CFGExitNode	EXIT		750629		True				
ANR	750912	Symbol	strcat_capa		750629						
ANR	750913	Symbol	capa		750629						
ANR	750914	Symbol	addlen		750629						
ANR	750915	Symbol	NSTR		750629						
ANR	750916	Symbol	strcat_capa_from_static		750629						
ANR	750917	Symbol	* NSTR		750629						
ANR	750918	Symbol	NODE_STR_BUF_SIZE		750629						
ANR	750919	Symbol	p		750629						
ANR	750920	Symbol	node		750629						
ANR	750921	Symbol	NSTR ( node ) -> s		750629						
ANR	750922	Symbol	NSTR ( node ) -> end		750629						
ANR	750923	Symbol	s		750629						
ANR	750924	Symbol	len		750629						
ANR	750925	Symbol	NODE_STR_MARGIN		750629						
ANR	750926	Symbol	end		750629						
ANR	750927	Symbol	NSTR ( node ) -> capa		750629						
ANR	750928	Symbol	NSTR ( node ) -> buf		750629						
ANR	750929	Function	onig_node_str_set	1455:0:31387:31535							
ANR	750930	FunctionDef	"onig_node_str_set (Node * node , const UChar * s , const UChar * end)"		750929	0					
ANR	750931	CompoundStatement		1457:0:31462:31535	750929	0					
ANR	750932	ExpressionStatement	onig_node_str_clear ( node )	1458:2:31466:31491	750929	0	True				
ANR	750933	CallExpression	onig_node_str_clear ( node )		750929	0					
ANR	750934	Callee	onig_node_str_clear		750929	0					
ANR	750935	Identifier	onig_node_str_clear		750929	0					
ANR	750936	ArgumentList	node		750929	1					
ANR	750937	Argument	node		750929	0					
ANR	750938	Identifier	node		750929	0					
ANR	750939	ReturnStatement	"return onig_node_str_cat ( node , s , end ) ;"	1459:2:31495:31533	750929	1	True				
ANR	750940	CallExpression	"onig_node_str_cat ( node , s , end )"		750929	0					
ANR	750941	Callee	onig_node_str_cat		750929	0					
ANR	750942	Identifier	onig_node_str_cat		750929	0					
ANR	750943	ArgumentList	node		750929	1					
ANR	750944	Argument	node		750929	0					
ANR	750945	Identifier	node		750929	0					
ANR	750946	Argument	s		750929	1					
ANR	750947	Identifier	s		750929	0					
ANR	750948	Argument	end		750929	2					
ANR	750949	Identifier	end		750929	0					
ANR	750950	ReturnType	extern int		750929	1					
ANR	750951	Identifier	onig_node_str_set		750929	2					
ANR	750952	ParameterList	"Node * node , const UChar * s , const UChar * end"		750929	3					
ANR	750953	Parameter	Node * node	1456:18:31416:31425	750929	0	True				
ANR	750954	ParameterType	Node *		750929	0					
ANR	750955	Identifier	node		750929	1					
ANR	750956	Parameter	const UChar * s	1456:30:31428:31441	750929	1	True				
ANR	750957	ParameterType	const UChar *		750929	0					
ANR	750958	Identifier	s		750929	1					
ANR	750959	Parameter	const UChar * end	1456:46:31444:31459	750929	2	True				
ANR	750960	ParameterType	const UChar *		750929	0					
ANR	750961	Identifier	end		750929	1					
ANR	750962	CFGEntryNode	ENTRY		750929		True				
ANR	750963	CFGExitNode	EXIT		750929		True				
ANR	750964	Symbol	node		750929						
ANR	750965	Symbol	s		750929						
ANR	750966	Symbol	onig_node_str_cat		750929						
ANR	750967	Symbol	end		750929						
ANR	750968	Function	node_str_cat_char	1462:0:31538:31661							
ANR	750969	FunctionDef	"node_str_cat_char (Node * node , UChar c)"		750968	0					
ANR	750970	CompoundStatement		1464:0:31588:31661	750968	0					
ANR	750971	IdentifierDeclStatement	UChar s [ 1 ] ;	1465:2:31592:31602	750968	0	True				
ANR	750972	IdentifierDecl	s [ 1 ]		750968	0					
ANR	750973	IdentifierDeclType	UChar [ 1 ]		750968	0					
ANR	750974	Identifier	s		750968	1					
ANR	750975	PrimaryExpression	1		750968	2					
ANR	750976	ExpressionStatement	s [ 0 ] = c	1467:2:31607:31615	750968	1	True				
ANR	750977	AssignmentExpression	s [ 0 ] = c		750968	0		=			
ANR	750978	ArrayIndexing	s [ 0 ]		750968	0					
ANR	750979	Identifier	s		750968	0					
ANR	750980	PrimaryExpression	0		750968	1					
ANR	750981	Identifier	c		750968	1					
ANR	750982	ReturnStatement	"return onig_node_str_cat ( node , s , s + 1 ) ;"	1468:2:31619:31659	750968	2	True				
ANR	750983	CallExpression	"onig_node_str_cat ( node , s , s + 1 )"		750968	0					
ANR	750984	Callee	onig_node_str_cat		750968	0					
ANR	750985	Identifier	onig_node_str_cat		750968	0					
ANR	750986	ArgumentList	node		750968	1					
ANR	750987	Argument	node		750968	0					
ANR	750988	Identifier	node		750968	0					
ANR	750989	Argument	s		750968	1					
ANR	750990	Identifier	s		750968	0					
ANR	750991	Argument	s + 1		750968	2					
ANR	750992	AdditiveExpression	s + 1		750968	0		+			
ANR	750993	Identifier	s		750968	0					
ANR	750994	PrimaryExpression	1		750968	1					
ANR	750995	ReturnType	static int		750968	1					
ANR	750996	Identifier	node_str_cat_char		750968	2					
ANR	750997	ParameterList	"Node * node , UChar c"		750968	3					
ANR	750998	Parameter	Node * node	1463:18:31567:31576	750968	0	True				
ANR	750999	ParameterType	Node *		750968	0					
ANR	751000	Identifier	node		750968	1					
ANR	751001	Parameter	UChar c	1463:30:31579:31585	750968	1	True				
ANR	751002	ParameterType	UChar		750968	0					
ANR	751003	Identifier	c		750968	1					
ANR	751004	CFGEntryNode	ENTRY		750968		True				
ANR	751005	CFGExitNode	EXIT		750968		True				
ANR	751006	Symbol	node		750968						
ANR	751007	Symbol	c		750968						
ANR	751008	Symbol	s		750968						
ANR	751009	Symbol	onig_node_str_cat		750968						
ANR	751010	Symbol	* s		750968						
ANR	751011	Function	onig_node_conv_to_str_node	1471:0:31664:31881							
ANR	751012	FunctionDef	"onig_node_conv_to_str_node (Node * node , int flag)"		751011	0					
ANR	751013	CompoundStatement		1473:0:31725:31881	751011	0					
ANR	751014	ExpressionStatement	"SET_NTYPE ( node , NT_STR )"	1474:2:31729:31752	751011	0	True				
ANR	751015	CallExpression	"SET_NTYPE ( node , NT_STR )"		751011	0					
ANR	751016	Callee	SET_NTYPE		751011	0					
ANR	751017	Identifier	SET_NTYPE		751011	0					
ANR	751018	ArgumentList	node		751011	1					
ANR	751019	Argument	node		751011	0					
ANR	751020	Identifier	node		751011	0					
ANR	751021	Argument	NT_STR		751011	1					
ANR	751022	Identifier	NT_STR		751011	0					
ANR	751023	ExpressionStatement	NSTR ( node ) -> flag = flag	1475:2:31756:31779	751011	1	True				
ANR	751024	AssignmentExpression	NSTR ( node ) -> flag = flag		751011	0		=			
ANR	751025	PtrMemberAccess	NSTR ( node ) -> flag		751011	0					
ANR	751026	CallExpression	NSTR ( node )		751011	0					
ANR	751027	Callee	NSTR		751011	0					
ANR	751028	Identifier	NSTR		751011	0					
ANR	751029	ArgumentList	node		751011	1					
ANR	751030	Argument	node		751011	0					
ANR	751031	Identifier	node		751011	0					
ANR	751032	Identifier	flag		751011	1					
ANR	751033	Identifier	flag		751011	1					
ANR	751034	ExpressionStatement	NSTR ( node ) -> capa = 0	1476:2:31783:31803	751011	2	True				
ANR	751035	AssignmentExpression	NSTR ( node ) -> capa = 0		751011	0		=			
ANR	751036	PtrMemberAccess	NSTR ( node ) -> capa		751011	0					
ANR	751037	CallExpression	NSTR ( node )		751011	0					
ANR	751038	Callee	NSTR		751011	0					
ANR	751039	Identifier	NSTR		751011	0					
ANR	751040	ArgumentList	node		751011	1					
ANR	751041	Argument	node		751011	0					
ANR	751042	Identifier	node		751011	0					
ANR	751043	Identifier	capa		751011	1					
ANR	751044	PrimaryExpression	0		751011	1					
ANR	751045	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1477:2:31807:31841	751011	3	True				
ANR	751046	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		751011	0		=			
ANR	751047	PtrMemberAccess	NSTR ( node ) -> s		751011	0					
ANR	751048	CallExpression	NSTR ( node )		751011	0					
ANR	751049	Callee	NSTR		751011	0					
ANR	751050	Identifier	NSTR		751011	0					
ANR	751051	ArgumentList	node		751011	1					
ANR	751052	Argument	node		751011	0					
ANR	751053	Identifier	node		751011	0					
ANR	751054	Identifier	s		751011	1					
ANR	751055	PtrMemberAccess	NSTR ( node ) -> buf		751011	1					
ANR	751056	CallExpression	NSTR ( node )		751011	0					
ANR	751057	Callee	NSTR		751011	0					
ANR	751058	Identifier	NSTR		751011	0					
ANR	751059	ArgumentList	node		751011	1					
ANR	751060	Argument	node		751011	0					
ANR	751061	Identifier	node		751011	0					
ANR	751062	Identifier	buf		751011	1					
ANR	751063	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1478:2:31845:31879	751011	4	True				
ANR	751064	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		751011	0		=			
ANR	751065	PtrMemberAccess	NSTR ( node ) -> end		751011	0					
ANR	751066	CallExpression	NSTR ( node )		751011	0					
ANR	751067	Callee	NSTR		751011	0					
ANR	751068	Identifier	NSTR		751011	0					
ANR	751069	ArgumentList	node		751011	1					
ANR	751070	Argument	node		751011	0					
ANR	751071	Identifier	node		751011	0					
ANR	751072	Identifier	end		751011	1					
ANR	751073	PtrMemberAccess	NSTR ( node ) -> buf		751011	1					
ANR	751074	CallExpression	NSTR ( node )		751011	0					
ANR	751075	Callee	NSTR		751011	0					
ANR	751076	Identifier	NSTR		751011	0					
ANR	751077	ArgumentList	node		751011	1					
ANR	751078	Argument	node		751011	0					
ANR	751079	Identifier	node		751011	0					
ANR	751080	Identifier	buf		751011	1					
ANR	751081	ReturnType	extern void		751011	1					
ANR	751082	Identifier	onig_node_conv_to_str_node		751011	2					
ANR	751083	ParameterList	"Node * node , int flag"		751011	3					
ANR	751084	Parameter	Node * node	1472:27:31703:31712	751011	0	True				
ANR	751085	ParameterType	Node *		751011	0					
ANR	751086	Identifier	node		751011	1					
ANR	751087	Parameter	int flag	1472:39:31715:31722	751011	1	True				
ANR	751088	ParameterType	int		751011	0					
ANR	751089	Identifier	flag		751011	1					
ANR	751090	CFGEntryNode	ENTRY		751011		True				
ANR	751091	CFGExitNode	EXIT		751011		True				
ANR	751092	Symbol	node		751011						
ANR	751093	Symbol	NSTR ( node ) -> s		751011						
ANR	751094	Symbol	NSTR ( node ) -> end		751011						
ANR	751095	Symbol	flag		751011						
ANR	751096	Symbol	NSTR		751011						
ANR	751097	Symbol	* NSTR		751011						
ANR	751098	Symbol	NSTR ( node ) -> capa		751011						
ANR	751099	Symbol	NSTR ( node ) -> buf		751011						
ANR	751100	Symbol	NSTR ( node ) -> flag		751011						
ANR	751101	Symbol	NT_STR		751011						
ANR	751102	Function	onig_node_str_clear	1481:0:31884:32188							
ANR	751103	FunctionDef	onig_node_str_clear (Node * node)		751102	0					
ANR	751104	CompoundStatement		1483:0:31928:32188	751102	0					
ANR	751105	IfStatement	if ( NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf )		751102	0					
ANR	751106	Condition	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf	1484:6:31936:32028	751102	0	True				
ANR	751107	AndExpression	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		751102	0		&&			
ANR	751108	EqualityExpression	NSTR ( node ) -> capa != 0		751102	0		!=			
ANR	751109	PtrMemberAccess	NSTR ( node ) -> capa		751102	0					
ANR	751110	CallExpression	NSTR ( node )		751102	0					
ANR	751111	Callee	NSTR		751102	0					
ANR	751112	Identifier	NSTR		751102	0					
ANR	751113	ArgumentList	node		751102	1					
ANR	751114	Argument	node		751102	0					
ANR	751115	Identifier	node		751102	0					
ANR	751116	Identifier	capa		751102	1					
ANR	751117	PrimaryExpression	0		751102	1					
ANR	751118	AndExpression	IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		751102	1		&&			
ANR	751119	CallExpression	IS_NOT_NULL ( NSTR ( node ) -> s )		751102	0					
ANR	751120	Callee	IS_NOT_NULL		751102	0					
ANR	751121	Identifier	IS_NOT_NULL		751102	0					
ANR	751122	ArgumentList	NSTR ( node ) -> s		751102	1					
ANR	751123	Argument	NSTR ( node ) -> s		751102	0					
ANR	751124	PtrMemberAccess	NSTR ( node ) -> s		751102	0					
ANR	751125	CallExpression	NSTR ( node )		751102	0					
ANR	751126	Callee	NSTR		751102	0					
ANR	751127	Identifier	NSTR		751102	0					
ANR	751128	ArgumentList	node		751102	1					
ANR	751129	Argument	node		751102	0					
ANR	751130	Identifier	node		751102	0					
ANR	751131	Identifier	s		751102	1					
ANR	751132	EqualityExpression	NSTR ( node ) -> s != NSTR ( node ) -> buf		751102	1		!=			
ANR	751133	PtrMemberAccess	NSTR ( node ) -> s		751102	0					
ANR	751134	CallExpression	NSTR ( node )		751102	0					
ANR	751135	Callee	NSTR		751102	0					
ANR	751136	Identifier	NSTR		751102	0					
ANR	751137	ArgumentList	node		751102	1					
ANR	751138	Argument	node		751102	0					
ANR	751139	Identifier	node		751102	0					
ANR	751140	Identifier	s		751102	1					
ANR	751141	PtrMemberAccess	NSTR ( node ) -> buf		751102	1					
ANR	751142	CallExpression	NSTR ( node )		751102	0					
ANR	751143	Callee	NSTR		751102	0					
ANR	751144	Identifier	NSTR		751102	0					
ANR	751145	ArgumentList	node		751102	1					
ANR	751146	Argument	node		751102	0					
ANR	751147	Identifier	node		751102	0					
ANR	751148	Identifier	buf		751102	1					
ANR	751149	CompoundStatement		3:70:102:102	751102	1					
ANR	751150	ExpressionStatement	xfree ( NSTR ( node ) -> s )	1486:4:32037:32057	751102	0	True				
ANR	751151	CallExpression	xfree ( NSTR ( node ) -> s )		751102	0					
ANR	751152	Callee	xfree		751102	0					
ANR	751153	Identifier	xfree		751102	0					
ANR	751154	ArgumentList	NSTR ( node ) -> s		751102	1					
ANR	751155	Argument	NSTR ( node ) -> s		751102	0					
ANR	751156	PtrMemberAccess	NSTR ( node ) -> s		751102	0					
ANR	751157	CallExpression	NSTR ( node )		751102	0					
ANR	751158	Callee	NSTR		751102	0					
ANR	751159	Identifier	NSTR		751102	0					
ANR	751160	ArgumentList	node		751102	1					
ANR	751161	Argument	node		751102	0					
ANR	751162	Identifier	node		751102	0					
ANR	751163	Identifier	s		751102	1					
ANR	751164	ExpressionStatement	NSTR ( node ) -> capa = 0	1489:2:32066:32086	751102	1	True				
ANR	751165	AssignmentExpression	NSTR ( node ) -> capa = 0		751102	0		=			
ANR	751166	PtrMemberAccess	NSTR ( node ) -> capa		751102	0					
ANR	751167	CallExpression	NSTR ( node )		751102	0					
ANR	751168	Callee	NSTR		751102	0					
ANR	751169	Identifier	NSTR		751102	0					
ANR	751170	ArgumentList	node		751102	1					
ANR	751171	Argument	node		751102	0					
ANR	751172	Identifier	node		751102	0					
ANR	751173	Identifier	capa		751102	1					
ANR	751174	PrimaryExpression	0		751102	1					
ANR	751175	ExpressionStatement	NSTR ( node ) -> flag = 0	1490:2:32090:32110	751102	2	True				
ANR	751176	AssignmentExpression	NSTR ( node ) -> flag = 0		751102	0		=			
ANR	751177	PtrMemberAccess	NSTR ( node ) -> flag		751102	0					
ANR	751178	CallExpression	NSTR ( node )		751102	0					
ANR	751179	Callee	NSTR		751102	0					
ANR	751180	Identifier	NSTR		751102	0					
ANR	751181	ArgumentList	node		751102	1					
ANR	751182	Argument	node		751102	0					
ANR	751183	Identifier	node		751102	0					
ANR	751184	Identifier	flag		751102	1					
ANR	751185	PrimaryExpression	0		751102	1					
ANR	751186	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1491:2:32114:32148	751102	3	True				
ANR	751187	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		751102	0		=			
ANR	751188	PtrMemberAccess	NSTR ( node ) -> s		751102	0					
ANR	751189	CallExpression	NSTR ( node )		751102	0					
ANR	751190	Callee	NSTR		751102	0					
ANR	751191	Identifier	NSTR		751102	0					
ANR	751192	ArgumentList	node		751102	1					
ANR	751193	Argument	node		751102	0					
ANR	751194	Identifier	node		751102	0					
ANR	751195	Identifier	s		751102	1					
ANR	751196	PtrMemberAccess	NSTR ( node ) -> buf		751102	1					
ANR	751197	CallExpression	NSTR ( node )		751102	0					
ANR	751198	Callee	NSTR		751102	0					
ANR	751199	Identifier	NSTR		751102	0					
ANR	751200	ArgumentList	node		751102	1					
ANR	751201	Argument	node		751102	0					
ANR	751202	Identifier	node		751102	0					
ANR	751203	Identifier	buf		751102	1					
ANR	751204	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1492:2:32152:32186	751102	4	True				
ANR	751205	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		751102	0		=			
ANR	751206	PtrMemberAccess	NSTR ( node ) -> end		751102	0					
ANR	751207	CallExpression	NSTR ( node )		751102	0					
ANR	751208	Callee	NSTR		751102	0					
ANR	751209	Identifier	NSTR		751102	0					
ANR	751210	ArgumentList	node		751102	1					
ANR	751211	Argument	node		751102	0					
ANR	751212	Identifier	node		751102	0					
ANR	751213	Identifier	end		751102	1					
ANR	751214	PtrMemberAccess	NSTR ( node ) -> buf		751102	1					
ANR	751215	CallExpression	NSTR ( node )		751102	0					
ANR	751216	Callee	NSTR		751102	0					
ANR	751217	Identifier	NSTR		751102	0					
ANR	751218	ArgumentList	node		751102	1					
ANR	751219	Argument	node		751102	0					
ANR	751220	Identifier	node		751102	0					
ANR	751221	Identifier	buf		751102	1					
ANR	751222	ReturnType	extern void		751102	1					
ANR	751223	Identifier	onig_node_str_clear		751102	2					
ANR	751224	ParameterList	Node * node		751102	3					
ANR	751225	Parameter	Node * node	1482:20:31916:31925	751102	0	True				
ANR	751226	ParameterType	Node *		751102	0					
ANR	751227	Identifier	node		751102	1					
ANR	751228	CFGEntryNode	ENTRY		751102		True				
ANR	751229	CFGExitNode	EXIT		751102		True				
ANR	751230	Symbol	node		751102						
ANR	751231	Symbol	NSTR ( node ) -> s		751102						
ANR	751232	Symbol	IS_NOT_NULL		751102						
ANR	751233	Symbol	NSTR ( node ) -> end		751102						
ANR	751234	Symbol	NSTR		751102						
ANR	751235	Symbol	NSTR ( node ) -> capa		751102						
ANR	751236	Symbol	NSTR ( node ) -> buf		751102						
ANR	751237	Symbol	* NSTR		751102						
ANR	751238	Symbol	NSTR ( node ) -> flag		751102						
ANR	751239	Function	node_new_str	1495:0:32191:32562							
ANR	751240	FunctionDef	"node_new_str (const UChar * s , const UChar * end)"		751239	0					
ANR	751241	CompoundStatement		1497:0:32251:32562	751239	0					
ANR	751242	IdentifierDeclStatement	Node * node = node_new ( ) ;	1498:2:32255:32278	751239	0	True				
ANR	751243	IdentifierDecl	* node = node_new ( )		751239	0					
ANR	751244	IdentifierDeclType	Node *		751239	0					
ANR	751245	Identifier	node		751239	1					
ANR	751246	AssignmentExpression	* node = node_new ( )		751239	2		=			
ANR	751247	Identifier	node		751239	0					
ANR	751248	CallExpression	node_new ( )		751239	1					
ANR	751249	Callee	node_new		751239	0					
ANR	751250	Identifier	node_new		751239	0					
ANR	751251	ArgumentList			751239	1					
ANR	751252	ExpressionStatement	CHECK_NULL_RETURN ( node )	1499:2:32282:32305	751239	1	True				
ANR	751253	CallExpression	CHECK_NULL_RETURN ( node )		751239	0					
ANR	751254	Callee	CHECK_NULL_RETURN		751239	0					
ANR	751255	Identifier	CHECK_NULL_RETURN		751239	0					
ANR	751256	ArgumentList	node		751239	1					
ANR	751257	Argument	node		751239	0					
ANR	751258	Identifier	node		751239	0					
ANR	751259	ExpressionStatement	"SET_NTYPE ( node , NT_STR )"	1501:2:32310:32333	751239	2	True				
ANR	751260	CallExpression	"SET_NTYPE ( node , NT_STR )"		751239	0					
ANR	751261	Callee	SET_NTYPE		751239	0					
ANR	751262	Identifier	SET_NTYPE		751239	0					
ANR	751263	ArgumentList	node		751239	1					
ANR	751264	Argument	node		751239	0					
ANR	751265	Identifier	node		751239	0					
ANR	751266	Argument	NT_STR		751239	1					
ANR	751267	Identifier	NT_STR		751239	0					
ANR	751268	ExpressionStatement	NSTR ( node ) -> capa = 0	1502:2:32337:32357	751239	3	True				
ANR	751269	AssignmentExpression	NSTR ( node ) -> capa = 0		751239	0		=			
ANR	751270	PtrMemberAccess	NSTR ( node ) -> capa		751239	0					
ANR	751271	CallExpression	NSTR ( node )		751239	0					
ANR	751272	Callee	NSTR		751239	0					
ANR	751273	Identifier	NSTR		751239	0					
ANR	751274	ArgumentList	node		751239	1					
ANR	751275	Argument	node		751239	0					
ANR	751276	Identifier	node		751239	0					
ANR	751277	Identifier	capa		751239	1					
ANR	751278	PrimaryExpression	0		751239	1					
ANR	751279	ExpressionStatement	NSTR ( node ) -> flag = 0	1503:2:32361:32381	751239	4	True				
ANR	751280	AssignmentExpression	NSTR ( node ) -> flag = 0		751239	0		=			
ANR	751281	PtrMemberAccess	NSTR ( node ) -> flag		751239	0					
ANR	751282	CallExpression	NSTR ( node )		751239	0					
ANR	751283	Callee	NSTR		751239	0					
ANR	751284	Identifier	NSTR		751239	0					
ANR	751285	ArgumentList	node		751239	1					
ANR	751286	Argument	node		751239	0					
ANR	751287	Identifier	node		751239	0					
ANR	751288	Identifier	flag		751239	1					
ANR	751289	PrimaryExpression	0		751239	1					
ANR	751290	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1504:2:32385:32419	751239	5	True				
ANR	751291	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		751239	0		=			
ANR	751292	PtrMemberAccess	NSTR ( node ) -> s		751239	0					
ANR	751293	CallExpression	NSTR ( node )		751239	0					
ANR	751294	Callee	NSTR		751239	0					
ANR	751295	Identifier	NSTR		751239	0					
ANR	751296	ArgumentList	node		751239	1					
ANR	751297	Argument	node		751239	0					
ANR	751298	Identifier	node		751239	0					
ANR	751299	Identifier	s		751239	1					
ANR	751300	PtrMemberAccess	NSTR ( node ) -> buf		751239	1					
ANR	751301	CallExpression	NSTR ( node )		751239	0					
ANR	751302	Callee	NSTR		751239	0					
ANR	751303	Identifier	NSTR		751239	0					
ANR	751304	ArgumentList	node		751239	1					
ANR	751305	Argument	node		751239	0					
ANR	751306	Identifier	node		751239	0					
ANR	751307	Identifier	buf		751239	1					
ANR	751308	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1505:2:32423:32457	751239	6	True				
ANR	751309	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		751239	0		=			
ANR	751310	PtrMemberAccess	NSTR ( node ) -> end		751239	0					
ANR	751311	CallExpression	NSTR ( node )		751239	0					
ANR	751312	Callee	NSTR		751239	0					
ANR	751313	Identifier	NSTR		751239	0					
ANR	751314	ArgumentList	node		751239	1					
ANR	751315	Argument	node		751239	0					
ANR	751316	Identifier	node		751239	0					
ANR	751317	Identifier	end		751239	1					
ANR	751318	PtrMemberAccess	NSTR ( node ) -> buf		751239	1					
ANR	751319	CallExpression	NSTR ( node )		751239	0					
ANR	751320	Callee	NSTR		751239	0					
ANR	751321	Identifier	NSTR		751239	0					
ANR	751322	ArgumentList	node		751239	1					
ANR	751323	Argument	node		751239	0					
ANR	751324	Identifier	node		751239	0					
ANR	751325	Identifier	buf		751239	1					
ANR	751326	IfStatement	"if ( onig_node_str_cat ( node , s , end ) )"		751239	7					
ANR	751327	Condition	"onig_node_str_cat ( node , s , end )"	1506:6:32465:32495	751239	0	True				
ANR	751328	CallExpression	"onig_node_str_cat ( node , s , end )"		751239	0					
ANR	751329	Callee	onig_node_str_cat		751239	0					
ANR	751330	Identifier	onig_node_str_cat		751239	0					
ANR	751331	ArgumentList	node		751239	1					
ANR	751332	Argument	node		751239	0					
ANR	751333	Identifier	node		751239	0					
ANR	751334	Argument	s		751239	1					
ANR	751335	Identifier	s		751239	0					
ANR	751336	Argument	end		751239	2					
ANR	751337	Identifier	end		751239	0					
ANR	751338	CompoundStatement		10:39:246:246	751239	1					
ANR	751339	ExpressionStatement	onig_node_free ( node )	1507:4:32504:32524	751239	0	True				
ANR	751340	CallExpression	onig_node_free ( node )		751239	0					
ANR	751341	Callee	onig_node_free		751239	0					
ANR	751342	Identifier	onig_node_free		751239	0					
ANR	751343	ArgumentList	node		751239	1					
ANR	751344	Argument	node		751239	0					
ANR	751345	Identifier	node		751239	0					
ANR	751346	ReturnStatement	return NULL ;	1508:4:32530:32541	751239	1	True				
ANR	751347	Identifier	NULL		751239	0					
ANR	751348	ReturnStatement	return node ;	1510:2:32549:32560	751239	8	True				
ANR	751349	Identifier	node		751239	0					
ANR	751350	ReturnType	static Node *		751239	1					
ANR	751351	Identifier	node_new_str		751239	2					
ANR	751352	ParameterList	"const UChar * s , const UChar * end"		751239	3					
ANR	751353	Parameter	const UChar * s	1496:13:32217:32230	751239	0	True				
ANR	751354	ParameterType	const UChar *		751239	0					
ANR	751355	Identifier	s		751239	1					
ANR	751356	Parameter	const UChar * end	1496:29:32233:32248	751239	1	True				
ANR	751357	ParameterType	const UChar *		751239	0					
ANR	751358	Identifier	end		751239	1					
ANR	751359	CFGEntryNode	ENTRY		751239		True				
ANR	751360	CFGExitNode	EXIT		751239		True				
ANR	751361	Symbol	NULL		751239						
ANR	751362	Symbol	NSTR		751239						
ANR	751363	Symbol	* NSTR		751239						
ANR	751364	Symbol	node		751239						
ANR	751365	Symbol	NSTR ( node ) -> s		751239						
ANR	751366	Symbol	NSTR ( node ) -> end		751239						
ANR	751367	Symbol	s		751239						
ANR	751368	Symbol	onig_node_str_cat		751239						
ANR	751369	Symbol	node_new		751239						
ANR	751370	Symbol	end		751239						
ANR	751371	Symbol	NSTR ( node ) -> capa		751239						
ANR	751372	Symbol	NSTR ( node ) -> buf		751239						
ANR	751373	Symbol	NSTR ( node ) -> flag		751239						
ANR	751374	Symbol	NT_STR		751239						
ANR	751375	Function	onig_node_new_str	1513:0:32565:32663							
ANR	751376	FunctionDef	"onig_node_new_str (const UChar * s , const UChar * end)"		751375	0					
ANR	751377	CompoundStatement		1515:0:32630:32663	751375	0					
ANR	751378	ReturnStatement	"return node_new_str ( s , end ) ;"	1516:2:32634:32661	751375	0	True				
ANR	751379	CallExpression	"node_new_str ( s , end )"		751375	0					
ANR	751380	Callee	node_new_str		751375	0					
ANR	751381	Identifier	node_new_str		751375	0					
ANR	751382	ArgumentList	s		751375	1					
ANR	751383	Argument	s		751375	0					
ANR	751384	Identifier	s		751375	0					
ANR	751385	Argument	end		751375	1					
ANR	751386	Identifier	end		751375	0					
ANR	751387	ReturnType	extern Node *		751375	1					
ANR	751388	Identifier	onig_node_new_str		751375	2					
ANR	751389	ParameterList	"const UChar * s , const UChar * end"		751375	3					
ANR	751390	Parameter	const UChar * s	1514:18:32596:32609	751375	0	True				
ANR	751391	ParameterType	const UChar *		751375	0					
ANR	751392	Identifier	s		751375	1					
ANR	751393	Parameter	const UChar * end	1514:34:32612:32627	751375	1	True				
ANR	751394	ParameterType	const UChar *		751375	0					
ANR	751395	Identifier	end		751375	1					
ANR	751396	CFGEntryNode	ENTRY		751375		True				
ANR	751397	CFGExitNode	EXIT		751375		True				
ANR	751398	Symbol	s		751375						
ANR	751399	Symbol	end		751375						
ANR	751400	Symbol	node_new_str		751375						
ANR	751401	Function	node_new_str_raw	1519:0:32666:32797							
ANR	751402	FunctionDef	"node_new_str_raw (UChar * s , UChar * end)"		751401	0					
ANR	751403	CompoundStatement		1521:0:32718:32797	751401	0					
ANR	751404	IdentifierDeclStatement	"Node * node = node_new_str ( s , end ) ;"	1522:2:32722:32755	751401	0	True				
ANR	751405	IdentifierDecl	"* node = node_new_str ( s , end )"		751401	0					
ANR	751406	IdentifierDeclType	Node *		751401	0					
ANR	751407	Identifier	node		751401	1					
ANR	751408	AssignmentExpression	"* node = node_new_str ( s , end )"		751401	2		=			
ANR	751409	Identifier	node		751401	0					
ANR	751410	CallExpression	"node_new_str ( s , end )"		751401	1					
ANR	751411	Callee	node_new_str		751401	0					
ANR	751412	Identifier	node_new_str		751401	0					
ANR	751413	ArgumentList	s		751401	1					
ANR	751414	Argument	s		751401	0					
ANR	751415	Identifier	s		751401	0					
ANR	751416	Argument	end		751401	1					
ANR	751417	Identifier	end		751401	0					
ANR	751418	ExpressionStatement	NSTRING_SET_RAW ( node )	1523:2:32759:32780	751401	1	True				
ANR	751419	CallExpression	NSTRING_SET_RAW ( node )		751401	0					
ANR	751420	Callee	NSTRING_SET_RAW		751401	0					
ANR	751421	Identifier	NSTRING_SET_RAW		751401	0					
ANR	751422	ArgumentList	node		751401	1					
ANR	751423	Argument	node		751401	0					
ANR	751424	Identifier	node		751401	0					
ANR	751425	ReturnStatement	return node ;	1524:2:32784:32795	751401	2	True				
ANR	751426	Identifier	node		751401	0					
ANR	751427	ReturnType	static Node *		751401	1					
ANR	751428	Identifier	node_new_str_raw		751401	2					
ANR	751429	ParameterList	"UChar * s , UChar * end"		751401	3					
ANR	751430	Parameter	UChar * s	1520:17:32696:32703	751401	0	True				
ANR	751431	ParameterType	UChar *		751401	0					
ANR	751432	Identifier	s		751401	1					
ANR	751433	Parameter	UChar * end	1520:27:32706:32715	751401	1	True				
ANR	751434	ParameterType	UChar *		751401	0					
ANR	751435	Identifier	end		751401	1					
ANR	751436	CFGEntryNode	ENTRY		751401		True				
ANR	751437	CFGExitNode	EXIT		751401		True				
ANR	751438	Symbol	node		751401						
ANR	751439	Symbol	s		751401						
ANR	751440	Symbol	end		751401						
ANR	751441	Symbol	node_new_str		751401						
ANR	751442	Function	node_new_empty	1527:0:32800:32871							
ANR	751443	FunctionDef	node_new_empty ()		751442	0					
ANR	751444	CompoundStatement		1529:0:32834:32871	751442	0					
ANR	751445	ReturnStatement	"return node_new_str ( NULL , NULL ) ;"	1530:2:32838:32869	751442	0	True				
ANR	751446	CallExpression	"node_new_str ( NULL , NULL )"		751442	0					
ANR	751447	Callee	node_new_str		751442	0					
ANR	751448	Identifier	node_new_str		751442	0					
ANR	751449	ArgumentList	NULL		751442	1					
ANR	751450	Argument	NULL		751442	0					
ANR	751451	Identifier	NULL		751442	0					
ANR	751452	Argument	NULL		751442	1					
ANR	751453	Identifier	NULL		751442	0					
ANR	751454	ReturnType	static Node *		751442	1					
ANR	751455	Identifier	node_new_empty		751442	2					
ANR	751456	ParameterList			751442	3					
ANR	751457	CFGEntryNode	ENTRY		751442		True				
ANR	751458	CFGExitNode	EXIT		751442		True				
ANR	751459	Symbol	NULL		751442						
ANR	751460	Symbol	node_new_str		751442						
ANR	751461	Function	node_new_str_raw_char	1533:0:32874:32984							
ANR	751462	FunctionDef	node_new_str_raw_char (UChar c)		751461	0					
ANR	751463	CompoundStatement		1535:0:32918:32984	751461	0					
ANR	751464	IdentifierDeclStatement	UChar p [ 1 ] ;	1536:2:32922:32932	751461	0	True				
ANR	751465	IdentifierDecl	p [ 1 ]		751461	0					
ANR	751466	IdentifierDeclType	UChar [ 1 ]		751461	0					
ANR	751467	Identifier	p		751461	1					
ANR	751468	PrimaryExpression	1		751461	2					
ANR	751469	ExpressionStatement	p [ 0 ] = c	1538:2:32937:32945	751461	1	True				
ANR	751470	AssignmentExpression	p [ 0 ] = c		751461	0		=			
ANR	751471	ArrayIndexing	p [ 0 ]		751461	0					
ANR	751472	Identifier	p		751461	0					
ANR	751473	PrimaryExpression	0		751461	1					
ANR	751474	Identifier	c		751461	1					
ANR	751475	ReturnStatement	"return node_new_str_raw ( p , p + 1 ) ;"	1539:2:32949:32982	751461	2	True				
ANR	751476	CallExpression	"node_new_str_raw ( p , p + 1 )"		751461	0					
ANR	751477	Callee	node_new_str_raw		751461	0					
ANR	751478	Identifier	node_new_str_raw		751461	0					
ANR	751479	ArgumentList	p		751461	1					
ANR	751480	Argument	p		751461	0					
ANR	751481	Identifier	p		751461	0					
ANR	751482	Argument	p + 1		751461	1					
ANR	751483	AdditiveExpression	p + 1		751461	0		+			
ANR	751484	Identifier	p		751461	0					
ANR	751485	PrimaryExpression	1		751461	1					
ANR	751486	ReturnType	static Node *		751461	1					
ANR	751487	Identifier	node_new_str_raw_char		751461	2					
ANR	751488	ParameterList	UChar c		751461	3					
ANR	751489	Parameter	UChar c	1534:22:32909:32915	751461	0	True				
ANR	751490	ParameterType	UChar		751461	0					
ANR	751491	Identifier	c		751461	1					
ANR	751492	CFGEntryNode	ENTRY		751461		True				
ANR	751493	CFGExitNode	EXIT		751461		True				
ANR	751494	Symbol	p		751461						
ANR	751495	Symbol	c		751461						
ANR	751496	Symbol	* p		751461						
ANR	751497	Symbol	node_new_str_raw		751461						
ANR	751498	Function	str_node_split_last_char	1542:0:32987:33376							
ANR	751499	FunctionDef	"str_node_split_last_char (StrNode * sn , OnigEncoding enc)"		751498	0					
ANR	751500	CompoundStatement		1544:0:33056:33376	751498	0					
ANR	751501	IdentifierDeclStatement	const UChar * p ;	1545:2:33060:33074	751498	0	True				
ANR	751502	IdentifierDecl	* p		751498	0					
ANR	751503	IdentifierDeclType	const UChar *		751498	0					
ANR	751504	Identifier	p		751498	1					
ANR	751505	IdentifierDeclStatement	Node * n = NULL_NODE ;	1546:2:33078:33097	751498	1	True				
ANR	751506	IdentifierDecl	* n = NULL_NODE		751498	0					
ANR	751507	IdentifierDeclType	Node *		751498	0					
ANR	751508	Identifier	n		751498	1					
ANR	751509	AssignmentExpression	* n = NULL_NODE		751498	2		=			
ANR	751510	Identifier	NULL_NODE		751498	0					
ANR	751511	Identifier	NULL_NODE		751498	1					
ANR	751512	IfStatement	if ( sn -> end > sn -> s )		751498	2					
ANR	751513	Condition	sn -> end > sn -> s	1548:6:33106:33120	751498	0	True				
ANR	751514	RelationalExpression	sn -> end > sn -> s		751498	0		>			
ANR	751515	PtrMemberAccess	sn -> end		751498	0					
ANR	751516	Identifier	sn		751498	0					
ANR	751517	Identifier	end		751498	1					
ANR	751518	PtrMemberAccess	sn -> s		751498	1					
ANR	751519	Identifier	sn		751498	0					
ANR	751520	Identifier	s		751498	1					
ANR	751521	CompoundStatement		5:23:66:66	751498	1					
ANR	751522	ExpressionStatement	"p = onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"	1549:4:33129:33180	751498	0	True				
ANR	751523	AssignmentExpression	"p = onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"		751498	0		=			
ANR	751524	Identifier	p		751498	0					
ANR	751525	CallExpression	"onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"		751498	1					
ANR	751526	Callee	onigenc_get_prev_char_head		751498	0					
ANR	751527	Identifier	onigenc_get_prev_char_head		751498	0					
ANR	751528	ArgumentList	enc		751498	1					
ANR	751529	Argument	enc		751498	0					
ANR	751530	Identifier	enc		751498	0					
ANR	751531	Argument	sn -> s		751498	1					
ANR	751532	PtrMemberAccess	sn -> s		751498	0					
ANR	751533	Identifier	sn		751498	0					
ANR	751534	Identifier	s		751498	1					
ANR	751535	Argument	sn -> end		751498	2					
ANR	751536	PtrMemberAccess	sn -> end		751498	0					
ANR	751537	Identifier	sn		751498	0					
ANR	751538	Identifier	end		751498	1					
ANR	751539	IfStatement	if ( p && p > sn -> s )		751498	1					
ANR	751540	Condition	p && p > sn -> s	1550:8:33190:33203	751498	0	True				
ANR	751541	AndExpression	p && p > sn -> s		751498	0		&&			
ANR	751542	Identifier	p		751498	0					
ANR	751543	RelationalExpression	p > sn -> s		751498	1		>			
ANR	751544	Identifier	p		751498	0					
ANR	751545	PtrMemberAccess	sn -> s		751498	1					
ANR	751546	Identifier	sn		751498	0					
ANR	751547	Identifier	s		751498	1					
ANR	751548	CompoundStatement		7:24:149:149	751498	1					
ANR	751549	ExpressionStatement	"n = node_new_str ( p , sn -> end )"	1551:6:33237:33265	751498	0	True				
ANR	751550	AssignmentExpression	"n = node_new_str ( p , sn -> end )"		751498	0		=			
ANR	751551	Identifier	n		751498	0					
ANR	751552	CallExpression	"node_new_str ( p , sn -> end )"		751498	1					
ANR	751553	Callee	node_new_str		751498	0					
ANR	751554	Identifier	node_new_str		751498	0					
ANR	751555	ArgumentList	p		751498	1					
ANR	751556	Argument	p		751498	0					
ANR	751557	Identifier	p		751498	0					
ANR	751558	Argument	sn -> end		751498	1					
ANR	751559	PtrMemberAccess	sn -> end		751498	0					
ANR	751560	Identifier	sn		751498	0					
ANR	751561	Identifier	end		751498	1					
ANR	751562	IfStatement	if ( ( sn -> flag & NSTR_RAW ) != 0 )		751498	1					
ANR	751563	Condition	( sn -> flag & NSTR_RAW ) != 0	1552:10:33277:33302	751498	0	True				
ANR	751564	EqualityExpression	( sn -> flag & NSTR_RAW ) != 0		751498	0		!=			
ANR	751565	BitAndExpression	sn -> flag & NSTR_RAW		751498	0		&			
ANR	751566	PtrMemberAccess	sn -> flag		751498	0					
ANR	751567	Identifier	sn		751498	0					
ANR	751568	Identifier	flag		751498	1					
ANR	751569	Identifier	NSTR_RAW		751498	1					
ANR	751570	PrimaryExpression	0		751498	1					
ANR	751571	ExpressionStatement	NSTRING_SET_RAW ( n )	1553:1:33306:33324	751498	1	True				
ANR	751572	CallExpression	NSTRING_SET_RAW ( n )		751498	0					
ANR	751573	Callee	NSTRING_SET_RAW		751498	0					
ANR	751574	Identifier	NSTRING_SET_RAW		751498	0					
ANR	751575	ArgumentList	n		751498	1					
ANR	751576	Argument	n		751498	0					
ANR	751577	Identifier	n		751498	0					
ANR	751578	ExpressionStatement	sn -> end = ( UChar * ) p	1554:6:33332:33352	751498	2	True				
ANR	751579	AssignmentExpression	sn -> end = ( UChar * ) p		751498	0		=			
ANR	751580	PtrMemberAccess	sn -> end		751498	0					
ANR	751581	Identifier	sn		751498	0					
ANR	751582	Identifier	end		751498	1					
ANR	751583	CastExpression	( UChar * ) p		751498	1					
ANR	751584	CastTarget	UChar *		751498	0					
ANR	751585	Identifier	p		751498	1					
ANR	751586	ReturnStatement	return n ;	1557:2:33366:33374	751498	3	True				
ANR	751587	Identifier	n		751498	0					
ANR	751588	ReturnType	static Node *		751498	1					
ANR	751589	Identifier	str_node_split_last_char		751498	2					
ANR	751590	ParameterList	"StrNode * sn , OnigEncoding enc"		751498	3					
ANR	751591	Parameter	StrNode * sn	1543:25:33025:33035	751498	0	True				
ANR	751592	ParameterType	StrNode *		751498	0					
ANR	751593	Identifier	sn		751498	1					
ANR	751594	Parameter	OnigEncoding enc	1543:38:33038:33053	751498	1	True				
ANR	751595	ParameterType	OnigEncoding		751498	0					
ANR	751596	Identifier	enc		751498	1					
ANR	751597	CFGEntryNode	ENTRY		751498		True				
ANR	751598	CFGExitNode	EXIT		751498		True				
ANR	751599	Symbol	p		751498						
ANR	751600	Symbol	* sn		751498						
ANR	751601	Symbol	sn -> s		751498						
ANR	751602	Symbol	sn -> flag		751498						
ANR	751603	Symbol	onigenc_get_prev_char_head		751498						
ANR	751604	Symbol	sn		751498						
ANR	751605	Symbol	enc		751498						
ANR	751606	Symbol	sn -> end		751498						
ANR	751607	Symbol	node_new_str		751498						
ANR	751608	Symbol	NSTR_RAW		751498						
ANR	751609	Symbol	NULL_NODE		751498						
ANR	751610	Symbol	n		751498						
ANR	751611	Function	str_node_can_be_split	1560:0:33379:33549							
ANR	751612	FunctionDef	"str_node_can_be_split (StrNode * sn , OnigEncoding enc)"		751611	0					
ANR	751613	CompoundStatement		1562:0:33443:33549	751611	0					
ANR	751614	IfStatement	if ( sn -> end > sn -> s )		751611	0					
ANR	751615	Condition	sn -> end > sn -> s	1563:6:33451:33465	751611	0	True				
ANR	751616	RelationalExpression	sn -> end > sn -> s		751611	0		>			
ANR	751617	PtrMemberAccess	sn -> end		751611	0					
ANR	751618	Identifier	sn		751611	0					
ANR	751619	Identifier	end		751611	1					
ANR	751620	PtrMemberAccess	sn -> s		751611	1					
ANR	751621	Identifier	sn		751611	0					
ANR	751622	Identifier	s		751611	1					
ANR	751623	CompoundStatement		2:23:24:24	751611	1					
ANR	751624	ReturnStatement	"return ( ( enclen ( enc , sn -> s ) < sn -> end - sn -> s ) ? 1 : 0 ) ;"	1564:4:33474:33531	751611	0	True				
ANR	751625	ConditionalExpression	"( enclen ( enc , sn -> s ) < sn -> end - sn -> s ) ? 1 : 0"		751611	0					
ANR	751626	Condition	"enclen ( enc , sn -> s ) < sn -> end - sn -> s"		751611	0					
ANR	751627	RelationalExpression	"enclen ( enc , sn -> s ) < sn -> end - sn -> s"		751611	0		<			
ANR	751628	CallExpression	"enclen ( enc , sn -> s )"		751611	0					
ANR	751629	Callee	enclen		751611	0					
ANR	751630	Identifier	enclen		751611	0					
ANR	751631	ArgumentList	enc		751611	1					
ANR	751632	Argument	enc		751611	0					
ANR	751633	Identifier	enc		751611	0					
ANR	751634	Argument	sn -> s		751611	1					
ANR	751635	PtrMemberAccess	sn -> s		751611	0					
ANR	751636	Identifier	sn		751611	0					
ANR	751637	Identifier	s		751611	1					
ANR	751638	AdditiveExpression	sn -> end - sn -> s		751611	1		-			
ANR	751639	PtrMemberAccess	sn -> end		751611	0					
ANR	751640	Identifier	sn		751611	0					
ANR	751641	Identifier	end		751611	1					
ANR	751642	PtrMemberAccess	sn -> s		751611	1					
ANR	751643	Identifier	sn		751611	0					
ANR	751644	Identifier	s		751611	1					
ANR	751645	PrimaryExpression	1		751611	1					
ANR	751646	PrimaryExpression	0		751611	2					
ANR	751647	ReturnStatement	return 0 ;	1566:2:33539:33547	751611	1	True				
ANR	751648	PrimaryExpression	0		751611	0					
ANR	751649	ReturnType	static int		751611	1					
ANR	751650	Identifier	str_node_can_be_split		751611	2					
ANR	751651	ParameterList	"StrNode * sn , OnigEncoding enc"		751611	3					
ANR	751652	Parameter	StrNode * sn	1561:22:33412:33422	751611	0	True				
ANR	751653	ParameterType	StrNode *		751611	0					
ANR	751654	Identifier	sn		751611	1					
ANR	751655	Parameter	OnigEncoding enc	1561:35:33425:33440	751611	1	True				
ANR	751656	ParameterType	OnigEncoding		751611	0					
ANR	751657	Identifier	enc		751611	1					
ANR	751658	CFGEntryNode	ENTRY		751611		True				
ANR	751659	CFGExitNode	EXIT		751611		True				
ANR	751660	Symbol	* sn		751611						
ANR	751661	Symbol	sn -> s		751611						
ANR	751662	Symbol	sn		751611						
ANR	751663	Symbol	enc		751611						
ANR	751664	Symbol	sn -> end		751611						
ANR	751665	Symbol	enclen		751611						
ANR	751666	Function	node_str_head_pad	1570:0:33586:33877							
ANR	751667	FunctionDef	"node_str_head_pad (StrNode * sn , int num , UChar val)"		751666	0					
ANR	751668	CompoundStatement		1572:0:33648:33877	751666	0					
ANR	751669	IdentifierDeclStatement	UChar buf [ NODE_STR_BUF_SIZE ] ;	1573:2:33652:33680	751666	0	True				
ANR	751670	IdentifierDecl	buf [ NODE_STR_BUF_SIZE ]		751666	0					
ANR	751671	IdentifierDeclType	UChar [ NODE_STR_BUF_SIZE ]		751666	0					
ANR	751672	Identifier	buf		751666	1					
ANR	751673	Identifier	NODE_STR_BUF_SIZE		751666	2					
ANR	751674	IdentifierDeclStatement	"int i , len ;"	1574:2:33684:33694	751666	1	True				
ANR	751675	IdentifierDecl	i		751666	0					
ANR	751676	IdentifierDeclType	int		751666	0					
ANR	751677	Identifier	i		751666	1					
ANR	751678	IdentifierDecl	len		751666	1					
ANR	751679	IdentifierDeclType	int		751666	0					
ANR	751680	Identifier	len		751666	1					
ANR	751681	ExpressionStatement	len = sn -> end - sn -> s	1576:2:33699:33720	751666	2	True				
ANR	751682	AssignmentExpression	len = sn -> end - sn -> s		751666	0		=			
ANR	751683	Identifier	len		751666	0					
ANR	751684	AdditiveExpression	sn -> end - sn -> s		751666	1		-			
ANR	751685	PtrMemberAccess	sn -> end		751666	0					
ANR	751686	Identifier	sn		751666	0					
ANR	751687	Identifier	end		751666	1					
ANR	751688	PtrMemberAccess	sn -> s		751666	1					
ANR	751689	Identifier	sn		751666	0					
ANR	751690	Identifier	s		751666	1					
ANR	751691	ExpressionStatement	"onig_strcpy ( buf , sn -> s , sn -> end )"	1577:2:33724:33756	751666	3	True				
ANR	751692	CallExpression	"onig_strcpy ( buf , sn -> s , sn -> end )"		751666	0					
ANR	751693	Callee	onig_strcpy		751666	0					
ANR	751694	Identifier	onig_strcpy		751666	0					
ANR	751695	ArgumentList	buf		751666	1					
ANR	751696	Argument	buf		751666	0					
ANR	751697	Identifier	buf		751666	0					
ANR	751698	Argument	sn -> s		751666	1					
ANR	751699	PtrMemberAccess	sn -> s		751666	0					
ANR	751700	Identifier	sn		751666	0					
ANR	751701	Identifier	s		751666	1					
ANR	751702	Argument	sn -> end		751666	2					
ANR	751703	PtrMemberAccess	sn -> end		751666	0					
ANR	751704	Identifier	sn		751666	0					
ANR	751705	Identifier	end		751666	1					
ANR	751706	ExpressionStatement	"onig_strcpy ( & ( sn -> s [ num ] ) , buf , buf + len )"	1578:2:33760:33802	751666	4	True				
ANR	751707	CallExpression	"onig_strcpy ( & ( sn -> s [ num ] ) , buf , buf + len )"		751666	0					
ANR	751708	Callee	onig_strcpy		751666	0					
ANR	751709	Identifier	onig_strcpy		751666	0					
ANR	751710	ArgumentList	& ( sn -> s [ num ] )		751666	1					
ANR	751711	Argument	& ( sn -> s [ num ] )		751666	0					
ANR	751712	UnaryOperationExpression	& ( sn -> s [ num ] )		751666	0					
ANR	751713	UnaryOperator	&		751666	0					
ANR	751714	ArrayIndexing	sn -> s [ num ]		751666	1					
ANR	751715	PtrMemberAccess	sn -> s		751666	0					
ANR	751716	Identifier	sn		751666	0					
ANR	751717	Identifier	s		751666	1					
ANR	751718	Identifier	num		751666	1					
ANR	751719	Argument	buf		751666	1					
ANR	751720	Identifier	buf		751666	0					
ANR	751721	Argument	buf + len		751666	2					
ANR	751722	AdditiveExpression	buf + len		751666	0		+			
ANR	751723	Identifier	buf		751666	0					
ANR	751724	Identifier	len		751666	1					
ANR	751725	ExpressionStatement	sn -> end += num	1579:2:33806:33820	751666	5	True				
ANR	751726	AssignmentExpression	sn -> end += num		751666	0		+=			
ANR	751727	PtrMemberAccess	sn -> end		751666	0					
ANR	751728	Identifier	sn		751666	0					
ANR	751729	Identifier	end		751666	1					
ANR	751730	Identifier	num		751666	1					
ANR	751731	ForStatement	for ( i = 0 ; i < num ; i ++ )		751666	6					
ANR	751732	ForInit	i = 0 ;	1581:7:33830:33835	751666	0	True				
ANR	751733	AssignmentExpression	i = 0		751666	0		=			
ANR	751734	Identifier	i		751666	0					
ANR	751735	PrimaryExpression	0		751666	1					
ANR	751736	Condition	i < num	1581:14:33837:33843	751666	1	True				
ANR	751737	RelationalExpression	i < num		751666	0		<			
ANR	751738	Identifier	i		751666	0					
ANR	751739	Identifier	num		751666	1					
ANR	751740	PostIncDecOperationExpression	i ++	1581:23:33846:33848	751666	2	True				
ANR	751741	Identifier	i		751666	0					
ANR	751742	IncDec	++		751666	1					
ANR	751743	CompoundStatement		10:28:202:202	751666	3					
ANR	751744	ExpressionStatement	sn -> s [ i ] = val	1582:4:33857:33871	751666	0	True				
ANR	751745	AssignmentExpression	sn -> s [ i ] = val		751666	0		=			
ANR	751746	ArrayIndexing	sn -> s [ i ]		751666	0					
ANR	751747	PtrMemberAccess	sn -> s		751666	0					
ANR	751748	Identifier	sn		751666	0					
ANR	751749	Identifier	s		751666	1					
ANR	751750	Identifier	i		751666	1					
ANR	751751	Identifier	val		751666	1					
ANR	751752	ReturnType	static int		751666	1					
ANR	751753	Identifier	node_str_head_pad		751666	2					
ANR	751754	ParameterList	"StrNode * sn , int num , UChar val"		751666	3					
ANR	751755	Parameter	StrNode * sn	1571:18:33615:33625	751666	0	True				
ANR	751756	ParameterType	StrNode *		751666	0					
ANR	751757	Identifier	sn		751666	1					
ANR	751758	Parameter	int num	1571:31:33628:33634	751666	1	True				
ANR	751759	ParameterType	int		751666	0					
ANR	751760	Identifier	num		751666	1					
ANR	751761	Parameter	UChar val	1571:40:33637:33645	751666	2	True				
ANR	751762	ParameterType	UChar		751666	0					
ANR	751763	Identifier	val		751666	1					
ANR	751764	CFGEntryNode	ENTRY		751666		True				
ANR	751765	CFGExitNode	EXIT		751666		True				
ANR	751766	Symbol	val		751666						
ANR	751767	Symbol	buf		751666						
ANR	751768	Symbol	* sn		751666						
ANR	751769	Symbol	sn -> s		751666						
ANR	751770	Symbol	* i		751666						
ANR	751771	Symbol	len		751666						
ANR	751772	Symbol	* * sn		751666						
ANR	751773	Symbol	num		751666						
ANR	751774	Symbol	i		751666						
ANR	751775	Symbol	* sn -> s		751666						
ANR	751776	Symbol	sn		751666						
ANR	751777	Symbol	sn -> end		751666						
ANR	751778	Function	onig_scan_unsigned_number	1587:0:33887:34365							
ANR	751779	FunctionDef	"onig_scan_unsigned_number (UChar * * src , const UChar * end , OnigEncoding enc)"		751778	0					
ANR	751780	CompoundStatement		1589:0:33973:34365	751778	0					
ANR	751781	IdentifierDeclStatement	"unsigned int num , val ;"	1590:2:33977:33998	751778	0	True				
ANR	751782	IdentifierDecl	num		751778	0					
ANR	751783	IdentifierDeclType	unsigned int		751778	0					
ANR	751784	Identifier	num		751778	1					
ANR	751785	IdentifierDecl	val		751778	1					
ANR	751786	IdentifierDeclType	unsigned int		751778	0					
ANR	751787	Identifier	val		751778	1					
ANR	751788	IdentifierDeclStatement	OnigCodePoint c ;	1591:2:34002:34017	751778	1	True				
ANR	751789	IdentifierDecl	c		751778	0					
ANR	751790	IdentifierDeclType	OnigCodePoint		751778	0					
ANR	751791	Identifier	c		751778	1					
ANR	751792	IdentifierDeclStatement	UChar * p = * src ;	1592:2:34021:34036	751778	2	True				
ANR	751793	IdentifierDecl	* p = * src		751778	0					
ANR	751794	IdentifierDeclType	UChar *		751778	0					
ANR	751795	Identifier	p		751778	1					
ANR	751796	AssignmentExpression	* p = * src		751778	2		=			
ANR	751797	Identifier	p		751778	0					
ANR	751798	UnaryOperationExpression	* src		751778	1					
ANR	751799	UnaryOperator	*		751778	0					
ANR	751800	Identifier	src		751778	1					
ANR	751801	ExpressionStatement	PFETCH_READY	1593:2:34040:34052	751778	3	True				
ANR	751802	Identifier	PFETCH_READY		751778	0					
ANR	751803	ExpressionStatement	num = 0	1595:2:34057:34064	751778	4	True				
ANR	751804	AssignmentExpression	num = 0		751778	0		=			
ANR	751805	Identifier	num		751778	0					
ANR	751806	PrimaryExpression	0		751778	1					
ANR	751807	WhileStatement	while ( ! PEND )		751778	5					
ANR	751808	Condition	! PEND	1596:9:34075:34079	751778	0	True				
ANR	751809	UnaryOperationExpression	! PEND		751778	0					
ANR	751810	UnaryOperator	!		751778	0					
ANR	751811	Identifier	PEND		751778	1					
ANR	751812	CompoundStatement		8:16:108:108	751778	1					
ANR	751813	ExpressionStatement	PFETCH ( c )	1597:4:34088:34097	751778	0	True				
ANR	751814	CallExpression	PFETCH ( c )		751778	0					
ANR	751815	Callee	PFETCH		751778	0					
ANR	751816	Identifier	PFETCH		751778	0					
ANR	751817	ArgumentList	c		751778	1					
ANR	751818	Argument	c		751778	0					
ANR	751819	Identifier	c		751778	0					
ANR	751820	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		751778	1					
ANR	751821	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	1598:8:34107:34135	751778	0	True				
ANR	751822	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		751778	0					
ANR	751823	Callee	ONIGENC_IS_CODE_DIGIT		751778	0					
ANR	751824	Identifier	ONIGENC_IS_CODE_DIGIT		751778	0					
ANR	751825	ArgumentList	enc		751778	1					
ANR	751826	Argument	enc		751778	0					
ANR	751827	Identifier	enc		751778	0					
ANR	751828	Argument	c		751778	1					
ANR	751829	Identifier	c		751778	0					
ANR	751830	CompoundStatement		10:39:164:164	751778	1					
ANR	751831	ExpressionStatement	val = ( unsigned int ) DIGITVAL ( c )	1599:6:34146:34178	751778	0	True				
ANR	751832	AssignmentExpression	val = ( unsigned int ) DIGITVAL ( c )		751778	0		=			
ANR	751833	Identifier	val		751778	0					
ANR	751834	CastExpression	( unsigned int ) DIGITVAL ( c )		751778	1					
ANR	751835	CastTarget	unsigned int		751778	0					
ANR	751836	CallExpression	DIGITVAL ( c )		751778	1					
ANR	751837	Callee	DIGITVAL		751778	0					
ANR	751838	Identifier	DIGITVAL		751778	0					
ANR	751839	ArgumentList	c		751778	1					
ANR	751840	Argument	c		751778	0					
ANR	751841	Identifier	c		751778	0					
ANR	751842	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 10UL < num )		751778	1					
ANR	751843	Condition	( INT_MAX_LIMIT - val ) / 10UL < num	1600:10:34190:34223	751778	0	True				
ANR	751844	RelationalExpression	( INT_MAX_LIMIT - val ) / 10UL < num		751778	0		<			
ANR	751845	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 10UL		751778	0		/			
ANR	751846	AdditiveExpression	INT_MAX_LIMIT - val		751778	0		-			
ANR	751847	Identifier	INT_MAX_LIMIT		751778	0					
ANR	751848	Identifier	val		751778	1					
ANR	751849	PrimaryExpression	10UL		751778	1					
ANR	751850	Identifier	num		751778	1					
ANR	751851	ReturnStatement	return - 1 ;	1601:1:34227:34236	751778	1	True				
ANR	751852	UnaryOperationExpression	- 1		751778	0					
ANR	751853	UnaryOperator	-		751778	0					
ANR	751854	PrimaryExpression	1		751778	1					
ANR	751855	ExpressionStatement	num = num * 10 + val	1603:6:34261:34281	751778	2	True				
ANR	751856	AssignmentExpression	num = num * 10 + val		751778	0		=			
ANR	751857	Identifier	num		751778	0					
ANR	751858	AdditiveExpression	num * 10 + val		751778	1		+			
ANR	751859	MultiplicativeExpression	num * 10		751778	0		*			
ANR	751860	Identifier	num		751778	0					
ANR	751861	PrimaryExpression	10		751778	1					
ANR	751862	Identifier	val		751778	1					
ANR	751863	ElseStatement	else		751778	0					
ANR	751864	CompoundStatement		17:9:324:324	751778	0					
ANR	751865	ExpressionStatement	PUNFETCH	1606:6:34306:34314	751778	0	True				
ANR	751866	Identifier	PUNFETCH		751778	0					
ANR	751867	BreakStatement	break ;	1607:6:34322:34327	751778	1	True				
ANR	751868	ExpressionStatement	* src = p	1610:2:34341:34349	751778	6	True				
ANR	751869	AssignmentExpression	* src = p		751778	0		=			
ANR	751870	UnaryOperationExpression	* src		751778	0					
ANR	751871	UnaryOperator	*		751778	0					
ANR	751872	Identifier	src		751778	1					
ANR	751873	Identifier	p		751778	1					
ANR	751874	ReturnStatement	return num ;	1611:2:34353:34363	751778	7	True				
ANR	751875	Identifier	num		751778	0					
ANR	751876	ReturnType	extern int		751778	1					
ANR	751877	Identifier	onig_scan_unsigned_number		751778	2					
ANR	751878	ParameterList	"UChar * * src , const UChar * end , OnigEncoding enc"		751778	3					
ANR	751879	Parameter	UChar * * src	1588:26:33924:33934	751778	0	True				
ANR	751880	ParameterType	UChar * *		751778	0					
ANR	751881	Identifier	src		751778	1					
ANR	751882	Parameter	const UChar * end	1588:39:33937:33952	751778	1	True				
ANR	751883	ParameterType	const UChar *		751778	0					
ANR	751884	Identifier	end		751778	1					
ANR	751885	Parameter	OnigEncoding enc	1588:57:33955:33970	751778	2	True				
ANR	751886	ParameterType	OnigEncoding		751778	0					
ANR	751887	Identifier	enc		751778	1					
ANR	751888	CFGEntryNode	ENTRY		751778		True				
ANR	751889	CFGExitNode	EXIT		751778		True				
ANR	751890	Symbol	val		751778						
ANR	751891	Symbol	p		751778						
ANR	751892	Symbol	c		751778						
ANR	751893	Symbol	src		751778						
ANR	751894	Symbol	num		751778						
ANR	751895	Symbol	ONIGENC_IS_CODE_DIGIT		751778						
ANR	751896	Symbol	end		751778						
ANR	751897	Symbol	enc		751778						
ANR	751898	Symbol	INT_MAX_LIMIT		751778						
ANR	751899	Symbol	* src		751778						
ANR	751900	Symbol	PEND		751778						
ANR	751901	Symbol	DIGITVAL		751778						
ANR	751902	Function	scan_unsigned_hexadecimal_number	1614:0:34368:34902							
ANR	751903	FunctionDef	"scan_unsigned_hexadecimal_number (UChar * * src , UChar * end , int maxlen , OnigEncoding enc)"		751902	0					
ANR	751904	CompoundStatement		1617:0:34472:34902	751902	0					
ANR	751905	IdentifierDeclStatement	OnigCodePoint c ;	1618:2:34476:34491	751902	0	True				
ANR	751906	IdentifierDecl	c		751902	0					
ANR	751907	IdentifierDeclType	OnigCodePoint		751902	0					
ANR	751908	Identifier	c		751902	1					
ANR	751909	IdentifierDeclStatement	"unsigned int num , val ;"	1619:2:34495:34516	751902	1	True				
ANR	751910	IdentifierDecl	num		751902	0					
ANR	751911	IdentifierDeclType	unsigned int		751902	0					
ANR	751912	Identifier	num		751902	1					
ANR	751913	IdentifierDecl	val		751902	1					
ANR	751914	IdentifierDeclType	unsigned int		751902	0					
ANR	751915	Identifier	val		751902	1					
ANR	751916	IdentifierDeclStatement	UChar * p = * src ;	1620:2:34520:34535	751902	2	True				
ANR	751917	IdentifierDecl	* p = * src		751902	0					
ANR	751918	IdentifierDeclType	UChar *		751902	0					
ANR	751919	Identifier	p		751902	1					
ANR	751920	AssignmentExpression	* p = * src		751902	2		=			
ANR	751921	Identifier	p		751902	0					
ANR	751922	UnaryOperationExpression	* src		751902	1					
ANR	751923	UnaryOperator	*		751902	0					
ANR	751924	Identifier	src		751902	1					
ANR	751925	ExpressionStatement	PFETCH_READY	1621:2:34539:34551	751902	3	True				
ANR	751926	Identifier	PFETCH_READY		751902	0					
ANR	751927	ExpressionStatement	num = 0	1623:2:34556:34563	751902	4	True				
ANR	751928	AssignmentExpression	num = 0		751902	0		=			
ANR	751929	Identifier	num		751902	0					
ANR	751930	PrimaryExpression	0		751902	1					
ANR	751931	WhileStatement	while ( ! PEND && maxlen -- != 0 )		751902	5					
ANR	751932	Condition	! PEND && maxlen -- != 0	1624:9:34574:34595	751902	0	True				
ANR	751933	AndExpression	! PEND && maxlen -- != 0		751902	0		&&			
ANR	751934	UnaryOperationExpression	! PEND		751902	0					
ANR	751935	UnaryOperator	!		751902	0					
ANR	751936	Identifier	PEND		751902	1					
ANR	751937	EqualityExpression	maxlen -- != 0		751902	1		!=			
ANR	751938	PostIncDecOperationExpression	maxlen --		751902	0					
ANR	751939	Identifier	maxlen		751902	0					
ANR	751940	IncDec	--		751902	1					
ANR	751941	PrimaryExpression	0		751902	1					
ANR	751942	CompoundStatement		8:33:125:125	751902	1					
ANR	751943	ExpressionStatement	PFETCH ( c )	1625:4:34604:34613	751902	0	True				
ANR	751944	CallExpression	PFETCH ( c )		751902	0					
ANR	751945	Callee	PFETCH		751902	0					
ANR	751946	Identifier	PFETCH		751902	0					
ANR	751947	ArgumentList	c		751902	1					
ANR	751948	Argument	c		751902	0					
ANR	751949	Identifier	c		751902	0					
ANR	751950	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , c ) )"		751902	1					
ANR	751951	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , c )"	1626:8:34623:34652	751902	0	True				
ANR	751952	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , c )"		751902	0					
ANR	751953	Callee	ONIGENC_IS_CODE_XDIGIT		751902	0					
ANR	751954	Identifier	ONIGENC_IS_CODE_XDIGIT		751902	0					
ANR	751955	ArgumentList	enc		751902	1					
ANR	751956	Argument	enc		751902	0					
ANR	751957	Identifier	enc		751902	0					
ANR	751958	Argument	c		751902	1					
ANR	751959	Identifier	c		751902	0					
ANR	751960	CompoundStatement		10:40:182:182	751902	1					
ANR	751961	ExpressionStatement	"val = ( unsigned int ) XDIGITVAL ( enc , c )"	1627:6:34663:34700	751902	0	True				
ANR	751962	AssignmentExpression	"val = ( unsigned int ) XDIGITVAL ( enc , c )"		751902	0		=			
ANR	751963	Identifier	val		751902	0					
ANR	751964	CastExpression	"( unsigned int ) XDIGITVAL ( enc , c )"		751902	1					
ANR	751965	CastTarget	unsigned int		751902	0					
ANR	751966	CallExpression	"XDIGITVAL ( enc , c )"		751902	1					
ANR	751967	Callee	XDIGITVAL		751902	0					
ANR	751968	Identifier	XDIGITVAL		751902	0					
ANR	751969	ArgumentList	enc		751902	1					
ANR	751970	Argument	enc		751902	0					
ANR	751971	Identifier	enc		751902	0					
ANR	751972	Argument	c		751902	1					
ANR	751973	Identifier	c		751902	0					
ANR	751974	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 16UL < num )		751902	1					
ANR	751975	Condition	( INT_MAX_LIMIT - val ) / 16UL < num	1628:10:34712:34745	751902	0	True				
ANR	751976	RelationalExpression	( INT_MAX_LIMIT - val ) / 16UL < num		751902	0		<			
ANR	751977	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 16UL		751902	0		/			
ANR	751978	AdditiveExpression	INT_MAX_LIMIT - val		751902	0		-			
ANR	751979	Identifier	INT_MAX_LIMIT		751902	0					
ANR	751980	Identifier	val		751902	1					
ANR	751981	PrimaryExpression	16UL		751902	1					
ANR	751982	Identifier	num		751902	1					
ANR	751983	ReturnStatement	return - 1 ;	1629:1:34749:34758	751902	1	True				
ANR	751984	UnaryOperationExpression	- 1		751902	0					
ANR	751985	UnaryOperator	-		751902	0					
ANR	751986	PrimaryExpression	1		751902	1					
ANR	751987	ExpressionStatement	"num = ( num << 4 ) + XDIGITVAL ( enc , c )"	1631:6:34783:34818	751902	2	True				
ANR	751988	AssignmentExpression	"num = ( num << 4 ) + XDIGITVAL ( enc , c )"		751902	0		=			
ANR	751989	Identifier	num		751902	0					
ANR	751990	AdditiveExpression	"( num << 4 ) + XDIGITVAL ( enc , c )"		751902	1		+			
ANR	751991	ShiftExpression	num << 4		751902	0		<<			
ANR	751992	Identifier	num		751902	0					
ANR	751993	PrimaryExpression	4		751902	1					
ANR	751994	CallExpression	"XDIGITVAL ( enc , c )"		751902	1					
ANR	751995	Callee	XDIGITVAL		751902	0					
ANR	751996	Identifier	XDIGITVAL		751902	0					
ANR	751997	ArgumentList	enc		751902	1					
ANR	751998	Argument	enc		751902	0					
ANR	751999	Identifier	enc		751902	0					
ANR	752000	Argument	c		751902	1					
ANR	752001	Identifier	c		751902	0					
ANR	752002	ElseStatement	else		751902	0					
ANR	752003	CompoundStatement		17:9:362:362	751902	0					
ANR	752004	ExpressionStatement	PUNFETCH	1634:6:34843:34851	751902	0	True				
ANR	752005	Identifier	PUNFETCH		751902	0					
ANR	752006	BreakStatement	break ;	1635:6:34859:34864	751902	1	True				
ANR	752007	ExpressionStatement	* src = p	1638:2:34878:34886	751902	6	True				
ANR	752008	AssignmentExpression	* src = p		751902	0		=			
ANR	752009	UnaryOperationExpression	* src		751902	0					
ANR	752010	UnaryOperator	*		751902	0					
ANR	752011	Identifier	src		751902	1					
ANR	752012	Identifier	p		751902	1					
ANR	752013	ReturnStatement	return num ;	1639:2:34890:34900	751902	7	True				
ANR	752014	Identifier	num		751902	0					
ANR	752015	ReturnType	static int		751902	1					
ANR	752016	Identifier	scan_unsigned_hexadecimal_number		751902	2					
ANR	752017	ParameterList	"UChar * * src , UChar * end , int maxlen , OnigEncoding enc"		751902	3					
ANR	752018	Parameter	UChar * * src	1615:33:34412:34422	751902	0	True				
ANR	752019	ParameterType	UChar * *		751902	0					
ANR	752020	Identifier	src		751902	1					
ANR	752021	Parameter	UChar * end	1615:46:34425:34434	751902	1	True				
ANR	752022	ParameterType	UChar *		751902	0					
ANR	752023	Identifier	end		751902	1					
ANR	752024	Parameter	int maxlen	1615:58:34437:34446	751902	2	True				
ANR	752025	ParameterType	int		751902	0					
ANR	752026	Identifier	maxlen		751902	1					
ANR	752027	Parameter	OnigEncoding enc	1616:5:34454:34469	751902	3	True				
ANR	752028	ParameterType	OnigEncoding		751902	0					
ANR	752029	Identifier	enc		751902	1					
ANR	752030	CFGEntryNode	ENTRY		751902		True				
ANR	752031	CFGExitNode	EXIT		751902		True				
ANR	752032	Symbol	val		751902						
ANR	752033	Symbol	c		751902						
ANR	752034	Symbol	ONIGENC_IS_CODE_XDIGIT		751902						
ANR	752035	Symbol	src		751902						
ANR	752036	Symbol	num		751902						
ANR	752037	Symbol	INT_MAX_LIMIT		751902						
ANR	752038	Symbol	* src		751902						
ANR	752039	Symbol	PEND		751902						
ANR	752040	Symbol	p		751902						
ANR	752041	Symbol	end		751902						
ANR	752042	Symbol	enc		751902						
ANR	752043	Symbol	XDIGITVAL		751902						
ANR	752044	Symbol	maxlen		751902						
ANR	752045	Function	scan_unsigned_octal_number	1642:0:34905:35411							
ANR	752046	FunctionDef	"scan_unsigned_octal_number (UChar * * src , UChar * end , int maxlen , OnigEncoding enc)"		752045	0					
ANR	752047	CompoundStatement		1645:0:35004:35411	752045	0					
ANR	752048	IdentifierDeclStatement	OnigCodePoint c ;	1646:2:35008:35023	752045	0	True				
ANR	752049	IdentifierDecl	c		752045	0					
ANR	752050	IdentifierDeclType	OnigCodePoint		752045	0					
ANR	752051	Identifier	c		752045	1					
ANR	752052	IdentifierDeclStatement	"unsigned int num , val ;"	1647:2:35027:35048	752045	1	True				
ANR	752053	IdentifierDecl	num		752045	0					
ANR	752054	IdentifierDeclType	unsigned int		752045	0					
ANR	752055	Identifier	num		752045	1					
ANR	752056	IdentifierDecl	val		752045	1					
ANR	752057	IdentifierDeclType	unsigned int		752045	0					
ANR	752058	Identifier	val		752045	1					
ANR	752059	IdentifierDeclStatement	UChar * p = * src ;	1648:2:35052:35067	752045	2	True				
ANR	752060	IdentifierDecl	* p = * src		752045	0					
ANR	752061	IdentifierDeclType	UChar *		752045	0					
ANR	752062	Identifier	p		752045	1					
ANR	752063	AssignmentExpression	* p = * src		752045	2		=			
ANR	752064	Identifier	p		752045	0					
ANR	752065	UnaryOperationExpression	* src		752045	1					
ANR	752066	UnaryOperator	*		752045	0					
ANR	752067	Identifier	src		752045	1					
ANR	752068	ExpressionStatement	PFETCH_READY	1649:2:35071:35083	752045	3	True				
ANR	752069	Identifier	PFETCH_READY		752045	0					
ANR	752070	ExpressionStatement	num = 0	1651:2:35088:35095	752045	4	True				
ANR	752071	AssignmentExpression	num = 0		752045	0		=			
ANR	752072	Identifier	num		752045	0					
ANR	752073	PrimaryExpression	0		752045	1					
ANR	752074	WhileStatement	while ( ! PEND && maxlen -- != 0 )		752045	5					
ANR	752075	Condition	! PEND && maxlen -- != 0	1652:9:35106:35127	752045	0	True				
ANR	752076	AndExpression	! PEND && maxlen -- != 0		752045	0		&&			
ANR	752077	UnaryOperationExpression	! PEND		752045	0					
ANR	752078	UnaryOperator	!		752045	0					
ANR	752079	Identifier	PEND		752045	1					
ANR	752080	EqualityExpression	maxlen -- != 0		752045	1		!=			
ANR	752081	PostIncDecOperationExpression	maxlen --		752045	0					
ANR	752082	Identifier	maxlen		752045	0					
ANR	752083	IncDec	--		752045	1					
ANR	752084	PrimaryExpression	0		752045	1					
ANR	752085	CompoundStatement		8:33:125:125	752045	1					
ANR	752086	ExpressionStatement	PFETCH ( c )	1653:4:35136:35145	752045	0	True				
ANR	752087	CallExpression	PFETCH ( c )		752045	0					
ANR	752088	Callee	PFETCH		752045	0					
ANR	752089	Identifier	PFETCH		752045	0					
ANR	752090	ArgumentList	c		752045	1					
ANR	752091	Argument	c		752045	0					
ANR	752092	Identifier	c		752045	0					
ANR	752093	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8' )"		752045	1					
ANR	752094	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8'"	1654:8:35155:35194	752045	0	True				
ANR	752095	AndExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8'"		752045	0		&&			
ANR	752096	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		752045	0					
ANR	752097	Callee	ONIGENC_IS_CODE_DIGIT		752045	0					
ANR	752098	Identifier	ONIGENC_IS_CODE_DIGIT		752045	0					
ANR	752099	ArgumentList	enc		752045	1					
ANR	752100	Argument	enc		752045	0					
ANR	752101	Identifier	enc		752045	0					
ANR	752102	Argument	c		752045	1					
ANR	752103	Identifier	c		752045	0					
ANR	752104	RelationalExpression	c < '8'		752045	1		<			
ANR	752105	Identifier	c		752045	0					
ANR	752106	PrimaryExpression	'8'		752045	1					
ANR	752107	CompoundStatement		10:50:192:192	752045	1					
ANR	752108	ExpressionStatement	val = ODIGITVAL ( c )	1655:6:35205:35223	752045	0	True				
ANR	752109	AssignmentExpression	val = ODIGITVAL ( c )		752045	0		=			
ANR	752110	Identifier	val		752045	0					
ANR	752111	CallExpression	ODIGITVAL ( c )		752045	1					
ANR	752112	Callee	ODIGITVAL		752045	0					
ANR	752113	Identifier	ODIGITVAL		752045	0					
ANR	752114	ArgumentList	c		752045	1					
ANR	752115	Argument	c		752045	0					
ANR	752116	Identifier	c		752045	0					
ANR	752117	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 8UL < num )		752045	1					
ANR	752118	Condition	( INT_MAX_LIMIT - val ) / 8UL < num	1656:10:35235:35267	752045	0	True				
ANR	752119	RelationalExpression	( INT_MAX_LIMIT - val ) / 8UL < num		752045	0		<			
ANR	752120	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 8UL		752045	0		/			
ANR	752121	AdditiveExpression	INT_MAX_LIMIT - val		752045	0		-			
ANR	752122	Identifier	INT_MAX_LIMIT		752045	0					
ANR	752123	Identifier	val		752045	1					
ANR	752124	PrimaryExpression	8UL		752045	1					
ANR	752125	Identifier	num		752045	1					
ANR	752126	ReturnStatement	return - 1 ;	1657:1:35271:35280	752045	1	True				
ANR	752127	UnaryOperationExpression	- 1		752045	0					
ANR	752128	UnaryOperator	-		752045	0					
ANR	752129	PrimaryExpression	1		752045	1					
ANR	752130	ExpressionStatement	num = ( num << 3 ) + val	1659:6:35305:35327	752045	2	True				
ANR	752131	AssignmentExpression	num = ( num << 3 ) + val		752045	0		=			
ANR	752132	Identifier	num		752045	0					
ANR	752133	AdditiveExpression	( num << 3 ) + val		752045	1		+			
ANR	752134	ShiftExpression	num << 3		752045	0		<<			
ANR	752135	Identifier	num		752045	0					
ANR	752136	PrimaryExpression	3		752045	1					
ANR	752137	Identifier	val		752045	1					
ANR	752138	ElseStatement	else		752045	0					
ANR	752139	CompoundStatement		17:9:339:339	752045	0					
ANR	752140	ExpressionStatement	PUNFETCH	1662:6:35352:35360	752045	0	True				
ANR	752141	Identifier	PUNFETCH		752045	0					
ANR	752142	BreakStatement	break ;	1663:6:35368:35373	752045	1	True				
ANR	752143	ExpressionStatement	* src = p	1666:2:35387:35395	752045	6	True				
ANR	752144	AssignmentExpression	* src = p		752045	0		=			
ANR	752145	UnaryOperationExpression	* src		752045	0					
ANR	752146	UnaryOperator	*		752045	0					
ANR	752147	Identifier	src		752045	1					
ANR	752148	Identifier	p		752045	1					
ANR	752149	ReturnStatement	return num ;	1667:2:35399:35409	752045	7	True				
ANR	752150	Identifier	num		752045	0					
ANR	752151	ReturnType	static int		752045	1					
ANR	752152	Identifier	scan_unsigned_octal_number		752045	2					
ANR	752153	ParameterList	"UChar * * src , UChar * end , int maxlen , OnigEncoding enc"		752045	3					
ANR	752154	Parameter	UChar * * src	1643:27:34943:34953	752045	0	True				
ANR	752155	ParameterType	UChar * *		752045	0					
ANR	752156	Identifier	src		752045	1					
ANR	752157	Parameter	UChar * end	1643:40:34956:34965	752045	1	True				
ANR	752158	ParameterType	UChar *		752045	0					
ANR	752159	Identifier	end		752045	1					
ANR	752160	Parameter	int maxlen	1643:52:34968:34977	752045	2	True				
ANR	752161	ParameterType	int		752045	0					
ANR	752162	Identifier	maxlen		752045	1					
ANR	752163	Parameter	OnigEncoding enc	1644:6:34986:35001	752045	3	True				
ANR	752164	ParameterType	OnigEncoding		752045	0					
ANR	752165	Identifier	enc		752045	1					
ANR	752166	CFGEntryNode	ENTRY		752045		True				
ANR	752167	CFGExitNode	EXIT		752045		True				
ANR	752168	Symbol	val		752045						
ANR	752169	Symbol	c		752045						
ANR	752170	Symbol	src		752045						
ANR	752171	Symbol	num		752045						
ANR	752172	Symbol	ONIGENC_IS_CODE_DIGIT		752045						
ANR	752173	Symbol	ODIGITVAL		752045						
ANR	752174	Symbol	INT_MAX_LIMIT		752045						
ANR	752175	Symbol	* src		752045						
ANR	752176	Symbol	PEND		752045						
ANR	752177	Symbol	p		752045						
ANR	752178	Symbol	end		752045						
ANR	752179	Symbol	enc		752045						
ANR	752180	Symbol	maxlen		752045						
ANR	752181	Function	new_code_range	1678:0:35629:35984							
ANR	752182	FunctionDef	new_code_range (BBuf * * pbuf)		752181	0					
ANR	752183	CompoundStatement		1680:0:35668:35984	752181	0					
ANR	752184	Statement	define	1681:1:35671:35676	752181	0	True				
ANR	752185	Statement	INIT_MULTI_BYTE_RANGE_SIZE	1681:8:35678:35703	752181	1	True				
ANR	752186	Statement	(	1681:36:35706:35706	752181	2	True				
ANR	752187	Statement	SIZE_CODE_POINT	1681:37:35707:35721	752181	3	True				
ANR	752188	Statement	*	1681:53:35723:35723	752181	4	True				
ANR	752189	Statement	5	1681:55:35725:35725	752181	5	True				
ANR	752190	Statement	)	1681:56:35726:35726	752181	6	True				
ANR	752191	IdentifierDeclStatement	int r ;	1682:2:35730:35735	752181	7	True				
ANR	752192	IdentifierDecl	r		752181	0					
ANR	752193	IdentifierDeclType	int		752181	0					
ANR	752194	Identifier	r		752181	1					
ANR	752195	IdentifierDeclStatement	OnigCodePoint n ;	1683:2:35739:35754	752181	8	True				
ANR	752196	IdentifierDecl	n		752181	0					
ANR	752197	IdentifierDeclType	OnigCodePoint		752181	0					
ANR	752198	Identifier	n		752181	1					
ANR	752199	IdentifierDeclStatement	BBuf * bbuf ;	1684:2:35758:35768	752181	9	True				
ANR	752200	IdentifierDecl	* bbuf		752181	0					
ANR	752201	IdentifierDeclType	BBuf *		752181	0					
ANR	752202	Identifier	bbuf		752181	1					
ANR	752203	ExpressionStatement	bbuf = * pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	1686:2:35773:35817	752181	10	True				
ANR	752204	AssignmentExpression	bbuf = * pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		752181	0		=			
ANR	752205	Identifier	bbuf		752181	0					
ANR	752206	AssignmentExpression	* pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		752181	1		=			
ANR	752207	UnaryOperationExpression	* pbuf		752181	0					
ANR	752208	UnaryOperator	*		752181	0					
ANR	752209	Identifier	pbuf		752181	1					
ANR	752210	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		752181	1					
ANR	752211	CastTarget	BBuf *		752181	0					
ANR	752212	CallExpression	xmalloc ( sizeof ( BBuf ) )		752181	1					
ANR	752213	Callee	xmalloc		752181	0					
ANR	752214	Identifier	xmalloc		752181	0					
ANR	752215	ArgumentList	sizeof ( BBuf )		752181	1					
ANR	752216	Argument	sizeof ( BBuf )		752181	0					
ANR	752217	SizeofExpression	sizeof ( BBuf )		752181	0					
ANR	752218	Sizeof	sizeof		752181	0					
ANR	752219	SizeofOperand	BBuf		752181	1					
ANR	752220	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * pbuf )	1687:2:35821:35852	752181	11	True				
ANR	752221	CallExpression	CHECK_NULL_RETURN_MEMERR ( * pbuf )		752181	0					
ANR	752222	Callee	CHECK_NULL_RETURN_MEMERR		752181	0					
ANR	752223	Identifier	CHECK_NULL_RETURN_MEMERR		752181	0					
ANR	752224	ArgumentList	* pbuf		752181	1					
ANR	752225	Argument	* pbuf		752181	0					
ANR	752226	UnaryOperationExpression	* pbuf		752181	0					
ANR	752227	UnaryOperator	*		752181	0					
ANR	752228	Identifier	pbuf		752181	1					
ANR	752229	ExpressionStatement	"r = BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"	1688:2:35856:35904	752181	12	True				
ANR	752230	AssignmentExpression	"r = BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"		752181	0		=			
ANR	752231	Identifier	r		752181	0					
ANR	752232	CallExpression	"BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"		752181	1					
ANR	752233	Callee	BBUF_INIT		752181	0					
ANR	752234	Identifier	BBUF_INIT		752181	0					
ANR	752235	ArgumentList	* pbuf		752181	1					
ANR	752236	Argument	* pbuf		752181	0					
ANR	752237	UnaryOperationExpression	* pbuf		752181	0					
ANR	752238	UnaryOperator	*		752181	0					
ANR	752239	Identifier	pbuf		752181	1					
ANR	752240	Argument	INIT_MULTI_BYTE_RANGE_SIZE		752181	1					
ANR	752241	Identifier	INIT_MULTI_BYTE_RANGE_SIZE		752181	0					
ANR	752242	IfStatement	if ( r )		752181	13					
ANR	752243	Condition	r	1689:6:35912:35912	752181	0	True				
ANR	752244	Identifier	r		752181	0					
ANR	752245	ReturnStatement	return r ;	1689:9:35915:35923	752181	1	True				
ANR	752246	Identifier	r		752181	0					
ANR	752247	ExpressionStatement	n = 0	1691:2:35928:35933	752181	14	True				
ANR	752248	AssignmentExpression	n = 0		752181	0		=			
ANR	752249	Identifier	n		752181	0					
ANR	752250	PrimaryExpression	0		752181	1					
ANR	752251	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"	1692:2:35937:35970	752181	15	True				
ANR	752252	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"		752181	0					
ANR	752253	Callee	BBUF_WRITE_CODE_POINT		752181	0					
ANR	752254	Identifier	BBUF_WRITE_CODE_POINT		752181	0					
ANR	752255	ArgumentList	bbuf		752181	1					
ANR	752256	Argument	bbuf		752181	0					
ANR	752257	Identifier	bbuf		752181	0					
ANR	752258	Argument	0		752181	1					
ANR	752259	PrimaryExpression	0		752181	0					
ANR	752260	Argument	n		752181	2					
ANR	752261	Identifier	n		752181	0					
ANR	752262	ReturnStatement	return 0 ;	1693:2:35974:35982	752181	16	True				
ANR	752263	PrimaryExpression	0		752181	0					
ANR	752264	ReturnType	static int		752181	1					
ANR	752265	Identifier	new_code_range		752181	2					
ANR	752266	ParameterList	BBuf * * pbuf		752181	3					
ANR	752267	Parameter	BBuf * * pbuf	1679:15:35655:35665	752181	0	True				
ANR	752268	ParameterType	BBuf * *		752181	0					
ANR	752269	Identifier	pbuf		752181	1					
ANR	752270	CFGEntryNode	ENTRY		752181		True				
ANR	752271	CFGExitNode	EXIT		752181		True				
ANR	752272	Symbol	r		752181						
ANR	752273	Symbol	xmalloc		752181						
ANR	752274	Symbol	pbuf		752181						
ANR	752275	Symbol	INIT_MULTI_BYTE_RANGE_SIZE		752181						
ANR	752276	Symbol	BBUF_INIT		752181						
ANR	752277	Symbol	* pbuf		752181						
ANR	752278	Symbol	n		752181						
ANR	752279	Symbol	bbuf		752181						
ANR	752280	Function	add_code_range_to_buf	1696:0:35987:37644							
ANR	752281	FunctionDef	"add_code_range_to_buf (BBuf * * pbuf , OnigCodePoint from , OnigCodePoint to)"		752280	0					
ANR	752282	CompoundStatement		1698:0:36071:37644	752280	0					
ANR	752283	IdentifierDeclStatement	"int r , inc_n , pos ;"	1699:2:36075:36092	752280	0	True				
ANR	752284	IdentifierDecl	r		752280	0					
ANR	752285	IdentifierDeclType	int		752280	0					
ANR	752286	Identifier	r		752280	1					
ANR	752287	IdentifierDecl	inc_n		752280	1					
ANR	752288	IdentifierDeclType	int		752280	0					
ANR	752289	Identifier	inc_n		752280	1					
ANR	752290	IdentifierDecl	pos		752280	2					
ANR	752291	IdentifierDeclType	int		752280	0					
ANR	752292	Identifier	pos		752280	1					
ANR	752293	IdentifierDeclStatement	"int low , high , bound , x ;"	1700:2:36096:36119	752280	1	True				
ANR	752294	IdentifierDecl	low		752280	0					
ANR	752295	IdentifierDeclType	int		752280	0					
ANR	752296	Identifier	low		752280	1					
ANR	752297	IdentifierDecl	high		752280	1					
ANR	752298	IdentifierDeclType	int		752280	0					
ANR	752299	Identifier	high		752280	1					
ANR	752300	IdentifierDecl	bound		752280	2					
ANR	752301	IdentifierDeclType	int		752280	0					
ANR	752302	Identifier	bound		752280	1					
ANR	752303	IdentifierDecl	x		752280	3					
ANR	752304	IdentifierDeclType	int		752280	0					
ANR	752305	Identifier	x		752280	1					
ANR	752306	IdentifierDeclStatement	"OnigCodePoint n , * data ;"	1701:2:36123:36145	752280	2	True				
ANR	752307	IdentifierDecl	n		752280	0					
ANR	752308	IdentifierDeclType	OnigCodePoint		752280	0					
ANR	752309	Identifier	n		752280	1					
ANR	752310	IdentifierDecl	* data		752280	1					
ANR	752311	IdentifierDeclType	OnigCodePoint *		752280	0					
ANR	752312	Identifier	data		752280	1					
ANR	752313	IdentifierDeclStatement	BBuf * bbuf ;	1702:2:36149:36159	752280	3	True				
ANR	752314	IdentifierDecl	* bbuf		752280	0					
ANR	752315	IdentifierDeclType	BBuf *		752280	0					
ANR	752316	Identifier	bbuf		752280	1					
ANR	752317	IfStatement	if ( from > to )		752280	4					
ANR	752318	Condition	from > to	1704:6:36168:36176	752280	0	True				
ANR	752319	RelationalExpression	from > to		752280	0		>			
ANR	752320	Identifier	from		752280	0					
ANR	752321	Identifier	to		752280	1					
ANR	752322	CompoundStatement		7:17:107:107	752280	1					
ANR	752323	ExpressionStatement	n = from	1705:4:36185:36193	752280	0	True				
ANR	752324	AssignmentExpression	n = from		752280	0		=			
ANR	752325	Identifier	n		752280	0					
ANR	752326	Identifier	from		752280	1					
ANR	752327	ExpressionStatement	from = to	1705:14:36195:36204	752280	1	True				
ANR	752328	AssignmentExpression	from = to		752280	0		=			
ANR	752329	Identifier	from		752280	0					
ANR	752330	Identifier	to		752280	1					
ANR	752331	ExpressionStatement	to = n	1705:25:36206:36212	752280	2	True				
ANR	752332	AssignmentExpression	to = n		752280	0		=			
ANR	752333	Identifier	to		752280	0					
ANR	752334	Identifier	n		752280	1					
ANR	752335	IfStatement	if ( IS_NULL ( * pbuf ) )		752280	5					
ANR	752336	Condition	IS_NULL ( * pbuf )	1708:6:36225:36238	752280	0	True				
ANR	752337	CallExpression	IS_NULL ( * pbuf )		752280	0					
ANR	752338	Callee	IS_NULL		752280	0					
ANR	752339	Identifier	IS_NULL		752280	0					
ANR	752340	ArgumentList	* pbuf		752280	1					
ANR	752341	Argument	* pbuf		752280	0					
ANR	752342	UnaryOperationExpression	* pbuf		752280	0					
ANR	752343	UnaryOperator	*		752280	0					
ANR	752344	Identifier	pbuf		752280	1					
ANR	752345	CompoundStatement		11:22:169:169	752280	1					
ANR	752346	ExpressionStatement	r = new_code_range ( pbuf )	1709:4:36247:36271	752280	0	True				
ANR	752347	AssignmentExpression	r = new_code_range ( pbuf )		752280	0		=			
ANR	752348	Identifier	r		752280	0					
ANR	752349	CallExpression	new_code_range ( pbuf )		752280	1					
ANR	752350	Callee	new_code_range		752280	0					
ANR	752351	Identifier	new_code_range		752280	0					
ANR	752352	ArgumentList	pbuf		752280	1					
ANR	752353	Argument	pbuf		752280	0					
ANR	752354	Identifier	pbuf		752280	0					
ANR	752355	IfStatement	if ( r )		752280	1					
ANR	752356	Condition	r	1710:8:36281:36281	752280	0	True				
ANR	752357	Identifier	r		752280	0					
ANR	752358	ReturnStatement	return r ;	1710:11:36284:36292	752280	1	True				
ANR	752359	Identifier	r		752280	0					
ANR	752360	ExpressionStatement	bbuf = * pbuf	1711:4:36298:36310	752280	2	True				
ANR	752361	AssignmentExpression	bbuf = * pbuf		752280	0		=			
ANR	752362	Identifier	bbuf		752280	0					
ANR	752363	UnaryOperationExpression	* pbuf		752280	1					
ANR	752364	UnaryOperator	*		752280	0					
ANR	752365	Identifier	pbuf		752280	1					
ANR	752366	ExpressionStatement	n = 0	1712:4:36316:36321	752280	3	True				
ANR	752367	AssignmentExpression	n = 0		752280	0		=			
ANR	752368	Identifier	n		752280	0					
ANR	752369	PrimaryExpression	0		752280	1					
ANR	752370	ElseStatement	else		752280	0					
ANR	752371	CompoundStatement		17:7:262:262	752280	0					
ANR	752372	ExpressionStatement	bbuf = * pbuf	1715:4:36340:36352	752280	0	True				
ANR	752373	AssignmentExpression	bbuf = * pbuf		752280	0		=			
ANR	752374	Identifier	bbuf		752280	0					
ANR	752375	UnaryOperationExpression	* pbuf		752280	1					
ANR	752376	UnaryOperator	*		752280	0					
ANR	752377	Identifier	pbuf		752280	1					
ANR	752378	ExpressionStatement	"GET_CODE_POINT ( n , bbuf -> p )"	1716:4:36358:36384	752280	1	True				
ANR	752379	CallExpression	"GET_CODE_POINT ( n , bbuf -> p )"		752280	0					
ANR	752380	Callee	GET_CODE_POINT		752280	0					
ANR	752381	Identifier	GET_CODE_POINT		752280	0					
ANR	752382	ArgumentList	n		752280	1					
ANR	752383	Argument	n		752280	0					
ANR	752384	Identifier	n		752280	0					
ANR	752385	Argument	bbuf -> p		752280	1					
ANR	752386	PtrMemberAccess	bbuf -> p		752280	0					
ANR	752387	Identifier	bbuf		752280	0					
ANR	752388	Identifier	p		752280	1					
ANR	752389	ExpressionStatement	data = ( OnigCodePoint * ) ( bbuf -> p )	1718:2:36392:36425	752280	6	True				
ANR	752390	AssignmentExpression	data = ( OnigCodePoint * ) ( bbuf -> p )		752280	0		=			
ANR	752391	Identifier	data		752280	0					
ANR	752392	CastExpression	( OnigCodePoint * ) ( bbuf -> p )		752280	1					
ANR	752393	CastTarget	OnigCodePoint *		752280	0					
ANR	752394	PtrMemberAccess	bbuf -> p		752280	1					
ANR	752395	Identifier	bbuf		752280	0					
ANR	752396	Identifier	p		752280	1					
ANR	752397	ExpressionStatement	data ++	1719:2:36429:36435	752280	7	True				
ANR	752398	PostIncDecOperationExpression	data ++		752280	0					
ANR	752399	Identifier	data		752280	0					
ANR	752400	IncDec	++		752280	1					
ANR	752401	ForStatement	"for ( low = 0 , bound = n ; low < bound ; )"		752280	8					
ANR	752402	ForInit	"low = 0 , bound = n ;"	1721:7:36445:36463	752280	0	True				
ANR	752403	Expression	"low = 0 , bound = n"		752280	0					
ANR	752404	AssignmentExpression	low = 0		752280	0		=			
ANR	752405	Identifier	low		752280	0					
ANR	752406	PrimaryExpression	0		752280	1					
ANR	752407	AssignmentExpression	bound = n		752280	1		=			
ANR	752408	Identifier	bound		752280	0					
ANR	752409	Identifier	n		752280	1					
ANR	752410	Condition	low < bound	1721:27:36465:36475	752280	1	True				
ANR	752411	RelationalExpression	low < bound		752280	0		<			
ANR	752412	Identifier	low		752280	0					
ANR	752413	Identifier	bound		752280	1					
ANR	752414	CompoundStatement		24:42:408:408	752280	2					
ANR	752415	ExpressionStatement	x = ( low + bound ) >> 1	1722:4:36486:36508	752280	0	True				
ANR	752416	AssignmentExpression	x = ( low + bound ) >> 1		752280	0		=			
ANR	752417	Identifier	x		752280	0					
ANR	752418	ShiftExpression	( low + bound ) >> 1		752280	1		>>			
ANR	752419	AdditiveExpression	low + bound		752280	0		+			
ANR	752420	Identifier	low		752280	0					
ANR	752421	Identifier	bound		752280	1					
ANR	752422	PrimaryExpression	1		752280	1					
ANR	752423	IfStatement	if ( from > data [ x * 2 + 1 ] )		752280	1					
ANR	752424	Condition	from > data [ x * 2 + 1 ]	1723:8:36518:36537	752280	0	True				
ANR	752425	RelationalExpression	from > data [ x * 2 + 1 ]		752280	0		>			
ANR	752426	Identifier	from		752280	0					
ANR	752427	ArrayIndexing	data [ x * 2 + 1 ]		752280	1					
ANR	752428	Identifier	data		752280	0					
ANR	752429	AdditiveExpression	x * 2 + 1		752280	1		+			
ANR	752430	MultiplicativeExpression	x * 2		752280	0		*			
ANR	752431	Identifier	x		752280	0					
ANR	752432	PrimaryExpression	2		752280	1					
ANR	752433	PrimaryExpression	1		752280	1					
ANR	752434	ExpressionStatement	low = x + 1	1724:6:36546:36557	752280	1	True				
ANR	752435	AssignmentExpression	low = x + 1		752280	0		=			
ANR	752436	Identifier	low		752280	0					
ANR	752437	AdditiveExpression	x + 1		752280	1		+			
ANR	752438	Identifier	x		752280	0					
ANR	752439	PrimaryExpression	1		752280	1					
ANR	752440	ElseStatement	else		752280	0					
ANR	752441	ExpressionStatement	bound = x	1726:6:36574:36583	752280	0	True				
ANR	752442	AssignmentExpression	bound = x		752280	0		=			
ANR	752443	Identifier	bound		752280	0					
ANR	752444	Identifier	x		752280	1					
ANR	752445	ForStatement	"for ( high = low , bound = n ; high < bound ; )"		752280	9					
ANR	752446	ForInit	"high = low , bound = n ;"	1729:7:36597:36618	752280	0	True				
ANR	752447	Expression	"high = low , bound = n"		752280	0					
ANR	752448	AssignmentExpression	high = low		752280	0		=			
ANR	752449	Identifier	high		752280	0					
ANR	752450	Identifier	low		752280	1					
ANR	752451	AssignmentExpression	bound = n		752280	1		=			
ANR	752452	Identifier	bound		752280	0					
ANR	752453	Identifier	n		752280	1					
ANR	752454	Condition	high < bound	1729:30:36620:36631	752280	1	True				
ANR	752455	RelationalExpression	high < bound		752280	0		<			
ANR	752456	Identifier	high		752280	0					
ANR	752457	Identifier	bound		752280	1					
ANR	752458	CompoundStatement		32:46:564:564	752280	2					
ANR	752459	ExpressionStatement	x = ( high + bound ) >> 1	1730:4:36642:36665	752280	0	True				
ANR	752460	AssignmentExpression	x = ( high + bound ) >> 1		752280	0		=			
ANR	752461	Identifier	x		752280	0					
ANR	752462	ShiftExpression	( high + bound ) >> 1		752280	1		>>			
ANR	752463	AdditiveExpression	high + bound		752280	0		+			
ANR	752464	Identifier	high		752280	0					
ANR	752465	Identifier	bound		752280	1					
ANR	752466	PrimaryExpression	1		752280	1					
ANR	752467	IfStatement	if ( to >= data [ x * 2 ] - 1 )		752280	1					
ANR	752468	Condition	to >= data [ x * 2 ] - 1	1731:8:36675:36693	752280	0	True				
ANR	752469	RelationalExpression	to >= data [ x * 2 ] - 1		752280	0		>=			
ANR	752470	Identifier	to		752280	0					
ANR	752471	AdditiveExpression	data [ x * 2 ] - 1		752280	1		-			
ANR	752472	ArrayIndexing	data [ x * 2 ]		752280	0					
ANR	752473	Identifier	data		752280	0					
ANR	752474	MultiplicativeExpression	x * 2		752280	1		*			
ANR	752475	Identifier	x		752280	0					
ANR	752476	PrimaryExpression	2		752280	1					
ANR	752477	PrimaryExpression	1		752280	1					
ANR	752478	ExpressionStatement	high = x + 1	1732:6:36702:36714	752280	1	True				
ANR	752479	AssignmentExpression	high = x + 1		752280	0		=			
ANR	752480	Identifier	high		752280	0					
ANR	752481	AdditiveExpression	x + 1		752280	1		+			
ANR	752482	Identifier	x		752280	0					
ANR	752483	PrimaryExpression	1		752280	1					
ANR	752484	ElseStatement	else		752280	0					
ANR	752485	ExpressionStatement	bound = x	1734:6:36731:36740	752280	0	True				
ANR	752486	AssignmentExpression	bound = x		752280	0		=			
ANR	752487	Identifier	bound		752280	0					
ANR	752488	Identifier	x		752280	1					
ANR	752489	ExpressionStatement	inc_n = low + 1 - high	1737:2:36749:36771	752280	10	True				
ANR	752490	AssignmentExpression	inc_n = low + 1 - high		752280	0		=			
ANR	752491	Identifier	inc_n		752280	0					
ANR	752492	AdditiveExpression	low + 1 - high		752280	1		+			
ANR	752493	Identifier	low		752280	0					
ANR	752494	AdditiveExpression	1 - high		752280	1		-			
ANR	752495	PrimaryExpression	1		752280	0					
ANR	752496	Identifier	high		752280	1					
ANR	752497	IfStatement	if ( n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM )		752280	11					
ANR	752498	Condition	n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM	1738:6:36779:36820	752280	0	True				
ANR	752499	RelationalExpression	n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM		752280	0		>			
ANR	752500	AdditiveExpression	n + inc_n		752280	0		+			
ANR	752501	Identifier	n		752280	0					
ANR	752502	Identifier	inc_n		752280	1					
ANR	752503	Identifier	ONIG_MAX_MULTI_BYTE_RANGES_NUM		752280	1					
ANR	752504	ReturnStatement	return ONIGERR_TOO_MANY_MULTI_BYTE_RANGES ;	1739:4:36827:36868	752280	1	True				
ANR	752505	Identifier	ONIGERR_TOO_MANY_MULTI_BYTE_RANGES		752280	0					
ANR	752506	IfStatement	if ( inc_n != 1 )		752280	12					
ANR	752507	Condition	inc_n != 1	1741:6:36877:36886	752280	0	True				
ANR	752508	EqualityExpression	inc_n != 1		752280	0		!=			
ANR	752509	Identifier	inc_n		752280	0					
ANR	752510	PrimaryExpression	1		752280	1					
ANR	752511	CompoundStatement		44:18:817:817	752280	1					
ANR	752512	IfStatement	if ( from > data [ low * 2 ] )		752280	0					
ANR	752513	Condition	from > data [ low * 2 ]	1742:8:36899:36916	752280	0	True				
ANR	752514	RelationalExpression	from > data [ low * 2 ]		752280	0		>			
ANR	752515	Identifier	from		752280	0					
ANR	752516	ArrayIndexing	data [ low * 2 ]		752280	1					
ANR	752517	Identifier	data		752280	0					
ANR	752518	MultiplicativeExpression	low * 2		752280	1		*			
ANR	752519	Identifier	low		752280	0					
ANR	752520	PrimaryExpression	2		752280	1					
ANR	752521	ExpressionStatement	from = data [ low * 2 ]	1743:6:36925:36943	752280	1	True				
ANR	752522	AssignmentExpression	from = data [ low * 2 ]		752280	0		=			
ANR	752523	Identifier	from		752280	0					
ANR	752524	ArrayIndexing	data [ low * 2 ]		752280	1					
ANR	752525	Identifier	data		752280	0					
ANR	752526	MultiplicativeExpression	low * 2		752280	1		*			
ANR	752527	Identifier	low		752280	0					
ANR	752528	PrimaryExpression	2		752280	1					
ANR	752529	IfStatement	if ( to < data [ ( high - 1 ) * 2 + 1 ] )		752280	1					
ANR	752530	Condition	to < data [ ( high - 1 ) * 2 + 1 ]	1744:8:36953:36979	752280	0	True				
ANR	752531	RelationalExpression	to < data [ ( high - 1 ) * 2 + 1 ]		752280	0		<			
ANR	752532	Identifier	to		752280	0					
ANR	752533	ArrayIndexing	data [ ( high - 1 ) * 2 + 1 ]		752280	1					
ANR	752534	Identifier	data		752280	0					
ANR	752535	AdditiveExpression	( high - 1 ) * 2 + 1		752280	1		+			
ANR	752536	MultiplicativeExpression	( high - 1 ) * 2		752280	0		*			
ANR	752537	AdditiveExpression	high - 1		752280	0		-			
ANR	752538	Identifier	high		752280	0					
ANR	752539	PrimaryExpression	1		752280	1					
ANR	752540	PrimaryExpression	2		752280	1					
ANR	752541	PrimaryExpression	1		752280	1					
ANR	752542	ExpressionStatement	to = data [ ( high - 1 ) * 2 + 1 ]	1745:6:36988:37015	752280	1	True				
ANR	752543	AssignmentExpression	to = data [ ( high - 1 ) * 2 + 1 ]		752280	0		=			
ANR	752544	Identifier	to		752280	0					
ANR	752545	ArrayIndexing	data [ ( high - 1 ) * 2 + 1 ]		752280	1					
ANR	752546	Identifier	data		752280	0					
ANR	752547	AdditiveExpression	( high - 1 ) * 2 + 1		752280	1		+			
ANR	752548	MultiplicativeExpression	( high - 1 ) * 2		752280	0		*			
ANR	752549	AdditiveExpression	high - 1		752280	0		-			
ANR	752550	Identifier	high		752280	0					
ANR	752551	PrimaryExpression	1		752280	1					
ANR	752552	PrimaryExpression	2		752280	1					
ANR	752553	PrimaryExpression	1		752280	1					
ANR	752554	IfStatement	if ( inc_n != 0 && ( OnigCodePoint ) high < n )		752280	13					
ANR	752555	Condition	inc_n != 0 && ( OnigCodePoint ) high < n	1748:6:37028:37065	752280	0	True				
ANR	752556	AndExpression	inc_n != 0 && ( OnigCodePoint ) high < n		752280	0		&&			
ANR	752557	EqualityExpression	inc_n != 0		752280	0		!=			
ANR	752558	Identifier	inc_n		752280	0					
ANR	752559	PrimaryExpression	0		752280	1					
ANR	752560	RelationalExpression	( OnigCodePoint ) high < n		752280	1		<			
ANR	752561	CastExpression	( OnigCodePoint ) high		752280	0					
ANR	752562	CastTarget	OnigCodePoint		752280	0					
ANR	752563	Identifier	high		752280	1					
ANR	752564	Identifier	n		752280	1					
ANR	752565	CompoundStatement		54:4:1113:1156	752280	1					
ANR	752566	IdentifierDeclStatement	int from_pos = SIZE_CODE_POINT * ( 1 + high * 2 ) ;	1749:4:37074:37121	752280	0	True				
ANR	752567	IdentifierDecl	from_pos = SIZE_CODE_POINT * ( 1 + high * 2 )		752280	0					
ANR	752568	IdentifierDeclType	int		752280	0					
ANR	752569	Identifier	from_pos		752280	1					
ANR	752570	AssignmentExpression	from_pos = SIZE_CODE_POINT * ( 1 + high * 2 )		752280	2		=			
ANR	752571	Identifier	from_pos		752280	0					
ANR	752572	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + high * 2 )		752280	1		*			
ANR	752573	Identifier	SIZE_CODE_POINT		752280	0					
ANR	752574	AdditiveExpression	1 + high * 2		752280	1		+			
ANR	752575	PrimaryExpression	1		752280	0					
ANR	752576	MultiplicativeExpression	high * 2		752280	1		*			
ANR	752577	Identifier	high		752280	0					
ANR	752578	PrimaryExpression	2		752280	1					
ANR	752579	IdentifierDeclStatement	int to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 ) ;	1750:4:37127:37179	752280	1	True				
ANR	752580	IdentifierDecl	to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		752280	0					
ANR	752581	IdentifierDeclType	int		752280	0					
ANR	752582	Identifier	to_pos		752280	1					
ANR	752583	AssignmentExpression	to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		752280	2		=			
ANR	752584	Identifier	to_pos		752280	0					
ANR	752585	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		752280	1		*			
ANR	752586	Identifier	SIZE_CODE_POINT		752280	0					
ANR	752587	AdditiveExpression	1 + ( low + 1 ) * 2		752280	1		+			
ANR	752588	PrimaryExpression	1		752280	0					
ANR	752589	MultiplicativeExpression	( low + 1 ) * 2		752280	1		*			
ANR	752590	AdditiveExpression	low + 1		752280	0		+			
ANR	752591	Identifier	low		752280	0					
ANR	752592	PrimaryExpression	1		752280	1					
ANR	752593	PrimaryExpression	2		752280	1					
ANR	752594	IdentifierDeclStatement	int size = ( n - high ) * 2 * SIZE_CODE_POINT ;	1751:4:37185:37228	752280	2	True				
ANR	752595	IdentifierDecl	size = ( n - high ) * 2 * SIZE_CODE_POINT		752280	0					
ANR	752596	IdentifierDeclType	int		752280	0					
ANR	752597	Identifier	size		752280	1					
ANR	752598	AssignmentExpression	size = ( n - high ) * 2 * SIZE_CODE_POINT		752280	2		=			
ANR	752599	Identifier	size		752280	0					
ANR	752600	MultiplicativeExpression	( n - high ) * 2 * SIZE_CODE_POINT		752280	1		*			
ANR	752601	AdditiveExpression	n - high		752280	0		-			
ANR	752602	Identifier	n		752280	0					
ANR	752603	Identifier	high		752280	1					
ANR	752604	MultiplicativeExpression	2 * SIZE_CODE_POINT		752280	1		*			
ANR	752605	PrimaryExpression	2		752280	0					
ANR	752606	Identifier	SIZE_CODE_POINT		752280	1					
ANR	752607	IfStatement	if ( inc_n > 0 )		752280	3					
ANR	752608	Condition	inc_n > 0	1753:8:37239:37247	752280	0	True				
ANR	752609	RelationalExpression	inc_n > 0		752280	0		>			
ANR	752610	Identifier	inc_n		752280	0					
ANR	752611	PrimaryExpression	0		752280	1					
ANR	752612	CompoundStatement		56:19:1178:1178	752280	1					
ANR	752613	ExpressionStatement	"BBUF_MOVE_RIGHT ( bbuf , from_pos , to_pos , size )"	1754:6:37258:37303	752280	0	True				
ANR	752614	CallExpression	"BBUF_MOVE_RIGHT ( bbuf , from_pos , to_pos , size )"		752280	0					
ANR	752615	Callee	BBUF_MOVE_RIGHT		752280	0					
ANR	752616	Identifier	BBUF_MOVE_RIGHT		752280	0					
ANR	752617	ArgumentList	bbuf		752280	1					
ANR	752618	Argument	bbuf		752280	0					
ANR	752619	Identifier	bbuf		752280	0					
ANR	752620	Argument	from_pos		752280	1					
ANR	752621	Identifier	from_pos		752280	0					
ANR	752622	Argument	to_pos		752280	2					
ANR	752623	Identifier	to_pos		752280	0					
ANR	752624	Argument	size		752280	3					
ANR	752625	Identifier	size		752280	0					
ANR	752626	ElseStatement	else		752280	0					
ANR	752627	CompoundStatement		59:9:1248:1248	752280	0					
ANR	752628	ExpressionStatement	"BBUF_MOVE_LEFT_REDUCE ( bbuf , from_pos , to_pos )"	1757:6:37328:37373	752280	0	True				
ANR	752629	CallExpression	"BBUF_MOVE_LEFT_REDUCE ( bbuf , from_pos , to_pos )"		752280	0					
ANR	752630	Callee	BBUF_MOVE_LEFT_REDUCE		752280	0					
ANR	752631	Identifier	BBUF_MOVE_LEFT_REDUCE		752280	0					
ANR	752632	ArgumentList	bbuf		752280	1					
ANR	752633	Argument	bbuf		752280	0					
ANR	752634	Identifier	bbuf		752280	0					
ANR	752635	Argument	from_pos		752280	1					
ANR	752636	Identifier	from_pos		752280	0					
ANR	752637	Argument	to_pos		752280	2					
ANR	752638	Identifier	to_pos		752280	0					
ANR	752639	ExpressionStatement	pos = SIZE_CODE_POINT * ( 1 + low * 2 )	1761:2:37388:37425	752280	14	True				
ANR	752640	AssignmentExpression	pos = SIZE_CODE_POINT * ( 1 + low * 2 )		752280	0		=			
ANR	752641	Identifier	pos		752280	0					
ANR	752642	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + low * 2 )		752280	1		*			
ANR	752643	Identifier	SIZE_CODE_POINT		752280	0					
ANR	752644	AdditiveExpression	1 + low * 2		752280	1		+			
ANR	752645	PrimaryExpression	1		752280	0					
ANR	752646	MultiplicativeExpression	low * 2		752280	1		*			
ANR	752647	Identifier	low		752280	0					
ANR	752648	PrimaryExpression	2		752280	1					
ANR	752649	ExpressionStatement	"BBUF_ENSURE_SIZE ( bbuf , pos + SIZE_CODE_POINT * 2 )"	1762:2:37429:37478	752280	15	True				
ANR	752650	CallExpression	"BBUF_ENSURE_SIZE ( bbuf , pos + SIZE_CODE_POINT * 2 )"		752280	0					
ANR	752651	Callee	BBUF_ENSURE_SIZE		752280	0					
ANR	752652	Identifier	BBUF_ENSURE_SIZE		752280	0					
ANR	752653	ArgumentList	bbuf		752280	1					
ANR	752654	Argument	bbuf		752280	0					
ANR	752655	Identifier	bbuf		752280	0					
ANR	752656	Argument	pos + SIZE_CODE_POINT * 2		752280	1					
ANR	752657	AdditiveExpression	pos + SIZE_CODE_POINT * 2		752280	0		+			
ANR	752658	Identifier	pos		752280	0					
ANR	752659	MultiplicativeExpression	SIZE_CODE_POINT * 2		752280	1		*			
ANR	752660	Identifier	SIZE_CODE_POINT		752280	0					
ANR	752661	PrimaryExpression	2		752280	1					
ANR	752662	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , pos , from )"	1763:2:37482:37520	752280	16	True				
ANR	752663	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , pos , from )"		752280	0					
ANR	752664	Callee	BBUF_WRITE_CODE_POINT		752280	0					
ANR	752665	Identifier	BBUF_WRITE_CODE_POINT		752280	0					
ANR	752666	ArgumentList	bbuf		752280	1					
ANR	752667	Argument	bbuf		752280	0					
ANR	752668	Identifier	bbuf		752280	0					
ANR	752669	Argument	pos		752280	1					
ANR	752670	Identifier	pos		752280	0					
ANR	752671	Argument	from		752280	2					
ANR	752672	Identifier	from		752280	0					
ANR	752673	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , pos + SIZE_CODE_POINT , to )"	1764:2:37524:37578	752280	17	True				
ANR	752674	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , pos + SIZE_CODE_POINT , to )"		752280	0					
ANR	752675	Callee	BBUF_WRITE_CODE_POINT		752280	0					
ANR	752676	Identifier	BBUF_WRITE_CODE_POINT		752280	0					
ANR	752677	ArgumentList	bbuf		752280	1					
ANR	752678	Argument	bbuf		752280	0					
ANR	752679	Identifier	bbuf		752280	0					
ANR	752680	Argument	pos + SIZE_CODE_POINT		752280	1					
ANR	752681	AdditiveExpression	pos + SIZE_CODE_POINT		752280	0		+			
ANR	752682	Identifier	pos		752280	0					
ANR	752683	Identifier	SIZE_CODE_POINT		752280	1					
ANR	752684	Argument	to		752280	2					
ANR	752685	Identifier	to		752280	0					
ANR	752686	ExpressionStatement	n += inc_n	1765:2:37582:37592	752280	18	True				
ANR	752687	AssignmentExpression	n += inc_n		752280	0		+=			
ANR	752688	Identifier	n		752280	0					
ANR	752689	Identifier	inc_n		752280	1					
ANR	752690	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"	1766:2:37596:37629	752280	19	True				
ANR	752691	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"		752280	0					
ANR	752692	Callee	BBUF_WRITE_CODE_POINT		752280	0					
ANR	752693	Identifier	BBUF_WRITE_CODE_POINT		752280	0					
ANR	752694	ArgumentList	bbuf		752280	1					
ANR	752695	Argument	bbuf		752280	0					
ANR	752696	Identifier	bbuf		752280	0					
ANR	752697	Argument	0		752280	1					
ANR	752698	PrimaryExpression	0		752280	0					
ANR	752699	Argument	n		752280	2					
ANR	752700	Identifier	n		752280	0					
ANR	752701	ReturnStatement	return 0 ;	1768:2:37634:37642	752280	20	True				
ANR	752702	PrimaryExpression	0		752280	0					
ANR	752703	ReturnType	static int		752280	1					
ANR	752704	Identifier	add_code_range_to_buf		752280	2					
ANR	752705	ParameterList	"BBuf * * pbuf , OnigCodePoint from , OnigCodePoint to"		752280	3					
ANR	752706	Parameter	BBuf * * pbuf	1697:22:36020:36030	752280	0	True				
ANR	752707	ParameterType	BBuf * *		752280	0					
ANR	752708	Identifier	pbuf		752280	1					
ANR	752709	Parameter	OnigCodePoint from	1697:35:36033:36050	752280	1	True				
ANR	752710	ParameterType	OnigCodePoint		752280	0					
ANR	752711	Identifier	from		752280	1					
ANR	752712	Parameter	OnigCodePoint to	1697:55:36053:36068	752280	2	True				
ANR	752713	ParameterType	OnigCodePoint		752280	0					
ANR	752714	Identifier	to		752280	1					
ANR	752715	CFGEntryNode	ENTRY		752280		True				
ANR	752716	CFGExitNode	EXIT		752280		True				
ANR	752717	Symbol	* x		752280						
ANR	752718	Symbol	data		752280						
ANR	752719	Symbol	* high		752280						
ANR	752720	Symbol	ONIG_MAX_MULTI_BYTE_RANGES_NUM		752280						
ANR	752721	Symbol	high		752280						
ANR	752722	Symbol	SIZE_CODE_POINT		752280						
ANR	752723	Symbol	IS_NULL		752280						
ANR	752724	Symbol	pos		752280						
ANR	752725	Symbol	low		752280						
ANR	752726	Symbol	ONIGERR_TOO_MANY_MULTI_BYTE_RANGES		752280						
ANR	752727	Symbol	from		752280						
ANR	752728	Symbol	* pbuf		752280						
ANR	752729	Symbol	* bbuf		752280						
ANR	752730	Symbol	bound		752280						
ANR	752731	Symbol	from_pos		752280						
ANR	752732	Symbol	to_pos		752280						
ANR	752733	Symbol	n		752280						
ANR	752734	Symbol	r		752280						
ANR	752735	Symbol	new_code_range		752280						
ANR	752736	Symbol	size		752280						
ANR	752737	Symbol	bbuf -> p		752280						
ANR	752738	Symbol	inc_n		752280						
ANR	752739	Symbol	pbuf		752280						
ANR	752740	Symbol	x		752280						
ANR	752741	Symbol	to		752280						
ANR	752742	Symbol	* data		752280						
ANR	752743	Symbol	* low		752280						
ANR	752744	Symbol	bbuf		752280						
ANR	752745	Function	add_code_range	1771:0:37647:37954							
ANR	752746	FunctionDef	"add_code_range (BBuf * * pbuf , ScanEnv * env , OnigCodePoint from , OnigCodePoint to)"		752745	0					
ANR	752747	CompoundStatement		1773:0:37738:37954	752745	0					
ANR	752748	IfStatement	if ( from > to )		752745	0					
ANR	752749	Condition	from > to	1774:6:37746:37754	752745	0	True				
ANR	752750	RelationalExpression	from > to		752745	0		>			
ANR	752751	Identifier	from		752745	0					
ANR	752752	Identifier	to		752745	1					
ANR	752753	CompoundStatement		2:17:18:18	752745	1					
ANR	752754	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		752745	0					
ANR	752755	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	1775:8:37767:37825	752745	0	True				
ANR	752756	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		752745	0					
ANR	752757	Callee	IS_SYNTAX_BV		752745	0					
ANR	752758	Identifier	IS_SYNTAX_BV		752745	0					
ANR	752759	ArgumentList	env -> syntax		752745	1					
ANR	752760	Argument	env -> syntax		752745	0					
ANR	752761	PtrMemberAccess	env -> syntax		752745	0					
ANR	752762	Identifier	env		752745	0					
ANR	752763	Identifier	syntax		752745	1					
ANR	752764	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		752745	1					
ANR	752765	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		752745	0					
ANR	752766	ReturnStatement	return 0 ;	1776:6:37834:37842	752745	1	True				
ANR	752767	PrimaryExpression	0		752745	0					
ANR	752768	ElseStatement	else		752745	0					
ANR	752769	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	1778:6:37859:37899	752745	0	True				
ANR	752770	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		752745	0					
ANR	752771	ReturnStatement	"return add_code_range_to_buf ( pbuf , from , to ) ;"	1781:2:37908:37952	752745	1	True				
ANR	752772	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		752745	0					
ANR	752773	Callee	add_code_range_to_buf		752745	0					
ANR	752774	Identifier	add_code_range_to_buf		752745	0					
ANR	752775	ArgumentList	pbuf		752745	1					
ANR	752776	Argument	pbuf		752745	0					
ANR	752777	Identifier	pbuf		752745	0					
ANR	752778	Argument	from		752745	1					
ANR	752779	Identifier	from		752745	0					
ANR	752780	Argument	to		752745	2					
ANR	752781	Identifier	to		752745	0					
ANR	752782	ReturnType	static int		752745	1					
ANR	752783	Identifier	add_code_range		752745	2					
ANR	752784	ParameterList	"BBuf * * pbuf , ScanEnv * env , OnigCodePoint from , OnigCodePoint to"		752745	3					
ANR	752785	Parameter	BBuf * * pbuf	1772:15:37673:37683	752745	0	True				
ANR	752786	ParameterType	BBuf * *		752745	0					
ANR	752787	Identifier	pbuf		752745	1					
ANR	752788	Parameter	ScanEnv * env	1772:28:37686:37697	752745	1	True				
ANR	752789	ParameterType	ScanEnv *		752745	0					
ANR	752790	Identifier	env		752745	1					
ANR	752791	Parameter	OnigCodePoint from	1772:42:37700:37717	752745	2	True				
ANR	752792	ParameterType	OnigCodePoint		752745	0					
ANR	752793	Identifier	from		752745	1					
ANR	752794	Parameter	OnigCodePoint to	1772:62:37720:37735	752745	3	True				
ANR	752795	ParameterType	OnigCodePoint		752745	0					
ANR	752796	Identifier	to		752745	1					
ANR	752797	CFGEntryNode	ENTRY		752745		True				
ANR	752798	CFGExitNode	EXIT		752745		True				
ANR	752799	Symbol	pbuf		752745						
ANR	752800	Symbol	* env		752745						
ANR	752801	Symbol	IS_SYNTAX_BV		752745						
ANR	752802	Symbol	from		752745						
ANR	752803	Symbol	add_code_range_to_buf		752745						
ANR	752804	Symbol	to		752745						
ANR	752805	Symbol	env		752745						
ANR	752806	Symbol	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		752745						
ANR	752807	Symbol	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		752745						
ANR	752808	Symbol	env -> syntax		752745						
ANR	752809	Function	not_code_range_buf	1784:0:37957:38716							
ANR	752810	FunctionDef	"not_code_range_buf (OnigEncoding enc , BBuf * bbuf , BBuf * * pbuf)"		752809	0					
ANR	752811	CompoundStatement		1786:0:38030:38716	752809	0					
ANR	752812	IdentifierDeclStatement	"int r , i , n ;"	1787:2:38034:38045	752809	0	True				
ANR	752813	IdentifierDecl	r		752809	0					
ANR	752814	IdentifierDeclType	int		752809	0					
ANR	752815	Identifier	r		752809	1					
ANR	752816	IdentifierDecl	i		752809	1					
ANR	752817	IdentifierDeclType	int		752809	0					
ANR	752818	Identifier	i		752809	1					
ANR	752819	IdentifierDecl	n		752809	2					
ANR	752820	IdentifierDeclType	int		752809	0					
ANR	752821	Identifier	n		752809	1					
ANR	752822	IdentifierDeclStatement	"OnigCodePoint pre , from , * data , to = 0 ;"	1788:2:38049:38087	752809	1	True				
ANR	752823	IdentifierDecl	pre		752809	0					
ANR	752824	IdentifierDeclType	OnigCodePoint		752809	0					
ANR	752825	Identifier	pre		752809	1					
ANR	752826	IdentifierDecl	from		752809	1					
ANR	752827	IdentifierDeclType	OnigCodePoint		752809	0					
ANR	752828	Identifier	from		752809	1					
ANR	752829	IdentifierDecl	* data		752809	2					
ANR	752830	IdentifierDeclType	OnigCodePoint *		752809	0					
ANR	752831	Identifier	data		752809	1					
ANR	752832	IdentifierDecl	to = 0		752809	3					
ANR	752833	IdentifierDeclType	OnigCodePoint		752809	0					
ANR	752834	Identifier	to		752809	1					
ANR	752835	AssignmentExpression	to = 0		752809	2		=			
ANR	752836	Identifier	to		752809	0					
ANR	752837	PrimaryExpression	0		752809	1					
ANR	752838	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1790:2:38092:38112	752809	2	True				
ANR	752839	AssignmentExpression	* pbuf = ( BBuf * ) NULL		752809	0		=			
ANR	752840	UnaryOperationExpression	* pbuf		752809	0					
ANR	752841	UnaryOperator	*		752809	0					
ANR	752842	Identifier	pbuf		752809	1					
ANR	752843	CastExpression	( BBuf * ) NULL		752809	1					
ANR	752844	CastTarget	BBuf *		752809	0					
ANR	752845	Identifier	NULL		752809	1					
ANR	752846	IfStatement	if ( IS_NULL ( bbuf ) )		752809	3					
ANR	752847	Condition	IS_NULL ( bbuf )	1791:6:38120:38132	752809	0	True				
ANR	752848	CallExpression	IS_NULL ( bbuf )		752809	0					
ANR	752849	Callee	IS_NULL		752809	0					
ANR	752850	Identifier	IS_NULL		752809	0					
ANR	752851	ArgumentList	bbuf		752809	1					
ANR	752852	Argument	bbuf		752809	0					
ANR	752853	Identifier	bbuf		752809	0					
ANR	752854	CompoundStatement		6:21:104:104	752809	1					
ANR	752855	Label	set_all :	1792:2:38139:38146	752809	0	True				
ANR	752856	Identifier	set_all		752809	0					
ANR	752857	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1793:4:38152:38194	752809	1	True				
ANR	752858	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		752809	0					
ANR	752859	Callee	SET_ALL_MULTI_BYTE_RANGE		752809	0					
ANR	752860	Identifier	SET_ALL_MULTI_BYTE_RANGE		752809	0					
ANR	752861	ArgumentList	enc		752809	1					
ANR	752862	Argument	enc		752809	0					
ANR	752863	Identifier	enc		752809	0					
ANR	752864	Argument	pbuf		752809	1					
ANR	752865	Identifier	pbuf		752809	0					
ANR	752866	ExpressionStatement	data = ( OnigCodePoint * ) ( bbuf -> p )	1796:2:38203:38236	752809	4	True				
ANR	752867	AssignmentExpression	data = ( OnigCodePoint * ) ( bbuf -> p )		752809	0		=			
ANR	752868	Identifier	data		752809	0					
ANR	752869	CastExpression	( OnigCodePoint * ) ( bbuf -> p )		752809	1					
ANR	752870	CastTarget	OnigCodePoint *		752809	0					
ANR	752871	PtrMemberAccess	bbuf -> p		752809	1					
ANR	752872	Identifier	bbuf		752809	0					
ANR	752873	Identifier	p		752809	1					
ANR	752874	ExpressionStatement	"GET_CODE_POINT ( n , data )"	1797:2:38240:38263	752809	5	True				
ANR	752875	CallExpression	"GET_CODE_POINT ( n , data )"		752809	0					
ANR	752876	Callee	GET_CODE_POINT		752809	0					
ANR	752877	Identifier	GET_CODE_POINT		752809	0					
ANR	752878	ArgumentList	n		752809	1					
ANR	752879	Argument	n		752809	0					
ANR	752880	Identifier	n		752809	0					
ANR	752881	Argument	data		752809	1					
ANR	752882	Identifier	data		752809	0					
ANR	752883	ExpressionStatement	data ++	1798:2:38267:38273	752809	6	True				
ANR	752884	PostIncDecOperationExpression	data ++		752809	0					
ANR	752885	Identifier	data		752809	0					
ANR	752886	IncDec	++		752809	1					
ANR	752887	IfStatement	if ( n <= 0 )		752809	7					
ANR	752888	Condition	n <= 0	1799:6:38281:38286	752809	0	True				
ANR	752889	RelationalExpression	n <= 0		752809	0		<=			
ANR	752890	Identifier	n		752809	0					
ANR	752891	PrimaryExpression	0		752809	1					
ANR	752892	GotoStatement	goto set_all ;	1799:14:38289:38301	752809	1	True				
ANR	752893	Identifier	set_all		752809	0					
ANR	752894	ExpressionStatement	r = 0	1801:2:38306:38311	752809	8	True				
ANR	752895	AssignmentExpression	r = 0		752809	0		=			
ANR	752896	Identifier	r		752809	0					
ANR	752897	PrimaryExpression	0		752809	1					
ANR	752898	ExpressionStatement	pre = MBCODE_START_POS ( enc )	1802:2:38315:38342	752809	9	True				
ANR	752899	AssignmentExpression	pre = MBCODE_START_POS ( enc )		752809	0		=			
ANR	752900	Identifier	pre		752809	0					
ANR	752901	CallExpression	MBCODE_START_POS ( enc )		752809	1					
ANR	752902	Callee	MBCODE_START_POS		752809	0					
ANR	752903	Identifier	MBCODE_START_POS		752809	0					
ANR	752904	ArgumentList	enc		752809	1					
ANR	752905	Argument	enc		752809	0					
ANR	752906	Identifier	enc		752809	0					
ANR	752907	ForStatement	for ( i = 0 ; i < n ; i ++ )		752809	10					
ANR	752908	ForInit	i = 0 ;	1803:7:38351:38356	752809	0	True				
ANR	752909	AssignmentExpression	i = 0		752809	0		=			
ANR	752910	Identifier	i		752809	0					
ANR	752911	PrimaryExpression	0		752809	1					
ANR	752912	Condition	i < n	1803:14:38358:38362	752809	1	True				
ANR	752913	RelationalExpression	i < n		752809	0		<			
ANR	752914	Identifier	i		752809	0					
ANR	752915	Identifier	n		752809	1					
ANR	752916	PostIncDecOperationExpression	i ++	1803:21:38365:38367	752809	2	True				
ANR	752917	Identifier	i		752809	0					
ANR	752918	IncDec	++		752809	1					
ANR	752919	CompoundStatement		18:26:339:339	752809	3					
ANR	752920	ExpressionStatement	from = data [ i * 2 ]	1804:4:38376:38392	752809	0	True				
ANR	752921	AssignmentExpression	from = data [ i * 2 ]		752809	0		=			
ANR	752922	Identifier	from		752809	0					
ANR	752923	ArrayIndexing	data [ i * 2 ]		752809	1					
ANR	752924	Identifier	data		752809	0					
ANR	752925	MultiplicativeExpression	i * 2		752809	1		*			
ANR	752926	Identifier	i		752809	0					
ANR	752927	PrimaryExpression	2		752809	1					
ANR	752928	ExpressionStatement	to = data [ i * 2 + 1 ]	1805:4:38398:38416	752809	1	True				
ANR	752929	AssignmentExpression	to = data [ i * 2 + 1 ]		752809	0		=			
ANR	752930	Identifier	to		752809	0					
ANR	752931	ArrayIndexing	data [ i * 2 + 1 ]		752809	1					
ANR	752932	Identifier	data		752809	0					
ANR	752933	AdditiveExpression	i * 2 + 1		752809	1		+			
ANR	752934	MultiplicativeExpression	i * 2		752809	0		*			
ANR	752935	Identifier	i		752809	0					
ANR	752936	PrimaryExpression	2		752809	1					
ANR	752937	PrimaryExpression	1		752809	1					
ANR	752938	IfStatement	if ( pre <= from - 1 )		752809	2					
ANR	752939	Condition	pre <= from - 1	1806:8:38426:38440	752809	0	True				
ANR	752940	RelationalExpression	pre <= from - 1		752809	0		<=			
ANR	752941	Identifier	pre		752809	0					
ANR	752942	AdditiveExpression	from - 1		752809	1		-			
ANR	752943	Identifier	from		752809	0					
ANR	752944	PrimaryExpression	1		752809	1					
ANR	752945	CompoundStatement		21:25:412:412	752809	1					
ANR	752946	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , pre , from - 1 )"	1807:6:38451:38497	752809	0	True				
ANR	752947	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , pre , from - 1 )"		752809	0		=			
ANR	752948	Identifier	r		752809	0					
ANR	752949	CallExpression	"add_code_range_to_buf ( pbuf , pre , from - 1 )"		752809	1					
ANR	752950	Callee	add_code_range_to_buf		752809	0					
ANR	752951	Identifier	add_code_range_to_buf		752809	0					
ANR	752952	ArgumentList	pbuf		752809	1					
ANR	752953	Argument	pbuf		752809	0					
ANR	752954	Identifier	pbuf		752809	0					
ANR	752955	Argument	pre		752809	1					
ANR	752956	Identifier	pre		752809	0					
ANR	752957	Argument	from - 1		752809	2					
ANR	752958	AdditiveExpression	from - 1		752809	0		-			
ANR	752959	Identifier	from		752809	0					
ANR	752960	PrimaryExpression	1		752809	1					
ANR	752961	IfStatement	if ( r != 0 )		752809	1					
ANR	752962	Condition	r != 0	1808:10:38509:38514	752809	0	True				
ANR	752963	EqualityExpression	r != 0		752809	0		!=			
ANR	752964	Identifier	r		752809	0					
ANR	752965	PrimaryExpression	0		752809	1					
ANR	752966	ReturnStatement	return r ;	1808:18:38517:38525	752809	1	True				
ANR	752967	Identifier	r		752809	0					
ANR	752968	IfStatement	if ( to == ~ ( ( OnigCodePoint ) 0 ) )		752809	3					
ANR	752969	Condition	to == ~ ( ( OnigCodePoint ) 0 )	1810:8:38541:38566	752809	0	True				
ANR	752970	EqualityExpression	to == ~ ( ( OnigCodePoint ) 0 )		752809	0		==			
ANR	752971	Identifier	to		752809	0					
ANR	752972	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		752809	1					
ANR	752973	UnaryOperator	~		752809	0					
ANR	752974	CastExpression	( OnigCodePoint ) 0		752809	1					
ANR	752975	CastTarget	OnigCodePoint		752809	0					
ANR	752976	PrimaryExpression	0		752809	1					
ANR	752977	BreakStatement	break ;	1810:36:38569:38574	752809	1	True				
ANR	752978	ExpressionStatement	pre = to + 1	1811:4:38580:38592	752809	4	True				
ANR	752979	AssignmentExpression	pre = to + 1		752809	0		=			
ANR	752980	Identifier	pre		752809	0					
ANR	752981	AdditiveExpression	to + 1		752809	1		+			
ANR	752982	Identifier	to		752809	0					
ANR	752983	PrimaryExpression	1		752809	1					
ANR	752984	IfStatement	if ( to < ~ ( ( OnigCodePoint ) 0 ) )		752809	11					
ANR	752985	Condition	to < ~ ( ( OnigCodePoint ) 0 )	1813:6:38604:38628	752809	0	True				
ANR	752986	RelationalExpression	to < ~ ( ( OnigCodePoint ) 0 )		752809	0		<			
ANR	752987	Identifier	to		752809	0					
ANR	752988	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		752809	1					
ANR	752989	UnaryOperator	~		752809	0					
ANR	752990	CastExpression	( OnigCodePoint ) 0		752809	1					
ANR	752991	CastTarget	OnigCodePoint		752809	0					
ANR	752992	PrimaryExpression	0		752809	1					
ANR	752993	CompoundStatement		28:33:600:600	752809	1					
ANR	752994	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"	1814:4:38637:38698	752809	0	True				
ANR	752995	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"		752809	0		=			
ANR	752996	Identifier	r		752809	0					
ANR	752997	CallExpression	"add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"		752809	1					
ANR	752998	Callee	add_code_range_to_buf		752809	0					
ANR	752999	Identifier	add_code_range_to_buf		752809	0					
ANR	753000	ArgumentList	pbuf		752809	1					
ANR	753001	Argument	pbuf		752809	0					
ANR	753002	Identifier	pbuf		752809	0					
ANR	753003	Argument	to + 1		752809	1					
ANR	753004	AdditiveExpression	to + 1		752809	0		+			
ANR	753005	Identifier	to		752809	0					
ANR	753006	PrimaryExpression	1		752809	1					
ANR	753007	Argument	~ ( ( OnigCodePoint ) 0 )		752809	2					
ANR	753008	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		752809	0					
ANR	753009	UnaryOperator	~		752809	0					
ANR	753010	CastExpression	( OnigCodePoint ) 0		752809	1					
ANR	753011	CastTarget	OnigCodePoint		752809	0					
ANR	753012	PrimaryExpression	0		752809	1					
ANR	753013	ReturnStatement	return r ;	1816:2:38706:38714	752809	12	True				
ANR	753014	Identifier	r		752809	0					
ANR	753015	ReturnType	static int		752809	1					
ANR	753016	Identifier	not_code_range_buf		752809	2					
ANR	753017	ParameterList	"OnigEncoding enc , BBuf * bbuf , BBuf * * pbuf"		752809	3					
ANR	753018	Parameter	OnigEncoding enc	1785:19:37987:38002	752809	0	True				
ANR	753019	ParameterType	OnigEncoding		752809	0					
ANR	753020	Identifier	enc		752809	1					
ANR	753021	Parameter	BBuf * bbuf	1785:37:38005:38014	752809	1	True				
ANR	753022	ParameterType	BBuf *		752809	0					
ANR	753023	Identifier	bbuf		752809	1					
ANR	753024	Parameter	BBuf * * pbuf	1785:49:38017:38027	752809	2	True				
ANR	753025	ParameterType	BBuf * *		752809	0					
ANR	753026	Identifier	pbuf		752809	1					
ANR	753027	CFGEntryNode	ENTRY		752809		True				
ANR	753028	CFGExitNode	EXIT		752809		True				
ANR	753029	Symbol	pre		752809						
ANR	753030	Symbol	NULL		752809						
ANR	753031	Symbol	data		752809						
ANR	753032	Symbol	i		752809						
ANR	753033	Symbol	n		752809						
ANR	753034	Symbol	SET_ALL_MULTI_BYTE_RANGE		752809						
ANR	753035	Symbol	r		752809						
ANR	753036	Symbol	* i		752809						
ANR	753037	Symbol	IS_NULL		752809						
ANR	753038	Symbol	bbuf -> p		752809						
ANR	753039	Symbol	pbuf		752809						
ANR	753040	Symbol	MBCODE_START_POS		752809						
ANR	753041	Symbol	from		752809						
ANR	753042	Symbol	add_code_range_to_buf		752809						
ANR	753043	Symbol	enc		752809						
ANR	753044	Symbol	to		752809						
ANR	753045	Symbol	* pbuf		752809						
ANR	753046	Symbol	* bbuf		752809						
ANR	753047	Symbol	* data		752809						
ANR	753048	Symbol	bbuf		752809						
ANR	753049	DeclStmt									
ANR	753050	Decl							BBuf	BBuf *	tbuf
ANR	753051	DeclStmt									
ANR	753052	Decl							int	int	tnot
ANR	753053	Function	or_code_range_buf	1826:0:38911:40111							
ANR	753054	FunctionDef	"or_code_range_buf (OnigEncoding enc , BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf)"		753053	0					
ANR	753055	CompoundStatement		1829:0:39035:40111	753053	0					
ANR	753056	IdentifierDeclStatement	int r ;	1830:2:39039:39044	753053	0	True				
ANR	753057	IdentifierDecl	r		753053	0					
ANR	753058	IdentifierDeclType	int		753053	0					
ANR	753059	Identifier	r		753053	1					
ANR	753060	IdentifierDeclStatement	"OnigCodePoint i , n1 , * data1 ;"	1831:2:39048:39075	753053	1	True				
ANR	753061	IdentifierDecl	i		753053	0					
ANR	753062	IdentifierDeclType	OnigCodePoint		753053	0					
ANR	753063	Identifier	i		753053	1					
ANR	753064	IdentifierDecl	n1		753053	1					
ANR	753065	IdentifierDeclType	OnigCodePoint		753053	0					
ANR	753066	Identifier	n1		753053	1					
ANR	753067	IdentifierDecl	* data1		753053	2					
ANR	753068	IdentifierDeclType	OnigCodePoint *		753053	0					
ANR	753069	Identifier	data1		753053	1					
ANR	753070	IdentifierDeclStatement	"OnigCodePoint from , to ;"	1832:2:39079:39101	753053	2	True				
ANR	753071	IdentifierDecl	from		753053	0					
ANR	753072	IdentifierDeclType	OnigCodePoint		753053	0					
ANR	753073	Identifier	from		753053	1					
ANR	753074	IdentifierDecl	to		753053	1					
ANR	753075	IdentifierDeclType	OnigCodePoint		753053	0					
ANR	753076	Identifier	to		753053	1					
ANR	753077	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1834:2:39106:39126	753053	3	True				
ANR	753078	AssignmentExpression	* pbuf = ( BBuf * ) NULL		753053	0		=			
ANR	753079	UnaryOperationExpression	* pbuf		753053	0					
ANR	753080	UnaryOperator	*		753053	0					
ANR	753081	Identifier	pbuf		753053	1					
ANR	753082	CastExpression	( BBuf * ) NULL		753053	1					
ANR	753083	CastTarget	BBuf *		753053	0					
ANR	753084	Identifier	NULL		753053	1					
ANR	753085	IfStatement	if ( IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 ) )		753053	4					
ANR	753086	Condition	IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 )	1835:6:39134:39165	753053	0	True				
ANR	753087	AndExpression	IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 )		753053	0		&&			
ANR	753088	CallExpression	IS_NULL ( bbuf1 )		753053	0					
ANR	753089	Callee	IS_NULL		753053	0					
ANR	753090	Identifier	IS_NULL		753053	0					
ANR	753091	ArgumentList	bbuf1		753053	1					
ANR	753092	Argument	bbuf1		753053	0					
ANR	753093	Identifier	bbuf1		753053	0					
ANR	753094	CallExpression	IS_NULL ( bbuf2 )		753053	1					
ANR	753095	Callee	IS_NULL		753053	0					
ANR	753096	Identifier	IS_NULL		753053	0					
ANR	753097	ArgumentList	bbuf2		753053	1					
ANR	753098	Argument	bbuf2		753053	0					
ANR	753099	Identifier	bbuf2		753053	0					
ANR	753100	CompoundStatement		7:40:132:132	753053	1					
ANR	753101	IfStatement	if ( not1 != 0 || not2 != 0 )		753053	0					
ANR	753102	Condition	not1 != 0 || not2 != 0	1836:8:39178:39199	753053	0	True				
ANR	753103	OrExpression	not1 != 0 || not2 != 0		753053	0		||			
ANR	753104	EqualityExpression	not1 != 0		753053	0		!=			
ANR	753105	Identifier	not1		753053	0					
ANR	753106	PrimaryExpression	0		753053	1					
ANR	753107	EqualityExpression	not2 != 0		753053	1		!=			
ANR	753108	Identifier	not2		753053	0					
ANR	753109	PrimaryExpression	0		753053	1					
ANR	753110	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1837:6:39208:39250	753053	1	True				
ANR	753111	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		753053	0					
ANR	753112	Callee	SET_ALL_MULTI_BYTE_RANGE		753053	0					
ANR	753113	Identifier	SET_ALL_MULTI_BYTE_RANGE		753053	0					
ANR	753114	ArgumentList	enc		753053	1					
ANR	753115	Argument	enc		753053	0					
ANR	753116	Identifier	enc		753053	0					
ANR	753117	Argument	pbuf		753053	1					
ANR	753118	Identifier	pbuf		753053	0					
ANR	753119	ReturnStatement	return 0 ;	1838:4:39256:39264	753053	1	True				
ANR	753120	PrimaryExpression	0		753053	0					
ANR	753121	ExpressionStatement	r = 0	1841:2:39273:39278	753053	5	True				
ANR	753122	AssignmentExpression	r = 0		753053	0		=			
ANR	753123	Identifier	r		753053	0					
ANR	753124	PrimaryExpression	0		753053	1					
ANR	753125	IfStatement	if ( IS_NULL ( bbuf2 ) )		753053	6					
ANR	753126	Condition	IS_NULL ( bbuf2 )	1842:6:39286:39299	753053	0	True				
ANR	753127	CallExpression	IS_NULL ( bbuf2 )		753053	0					
ANR	753128	Callee	IS_NULL		753053	0					
ANR	753129	Identifier	IS_NULL		753053	0					
ANR	753130	ArgumentList	bbuf2		753053	1					
ANR	753131	Argument	bbuf2		753053	0					
ANR	753132	Identifier	bbuf2		753053	0					
ANR	753133	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1843:4:39306:39345	753053	1	True				
ANR	753134	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		753053	0					
ANR	753135	Callee	SWAP_BBUF_NOT		753053	0					
ANR	753136	Identifier	SWAP_BBUF_NOT		753053	0					
ANR	753137	ArgumentList	bbuf1		753053	1					
ANR	753138	Argument	bbuf1		753053	0					
ANR	753139	Identifier	bbuf1		753053	0					
ANR	753140	Argument	not1		753053	1					
ANR	753141	Identifier	not1		753053	0					
ANR	753142	Argument	bbuf2		753053	2					
ANR	753143	Identifier	bbuf2		753053	0					
ANR	753144	Argument	not2		753053	3					
ANR	753145	Identifier	not2		753053	0					
ANR	753146	IfStatement	if ( IS_NULL ( bbuf1 ) )		753053	7					
ANR	753147	Condition	IS_NULL ( bbuf1 )	1845:6:39354:39367	753053	0	True				
ANR	753148	CallExpression	IS_NULL ( bbuf1 )		753053	0					
ANR	753149	Callee	IS_NULL		753053	0					
ANR	753150	Identifier	IS_NULL		753053	0					
ANR	753151	ArgumentList	bbuf1		753053	1					
ANR	753152	Argument	bbuf1		753053	0					
ANR	753153	Identifier	bbuf1		753053	0					
ANR	753154	CompoundStatement		17:22:334:334	753053	1					
ANR	753155	IfStatement	if ( not1 != 0 )		753053	0					
ANR	753156	Condition	not1 != 0	1846:8:39380:39388	753053	0	True				
ANR	753157	EqualityExpression	not1 != 0		753053	0		!=			
ANR	753158	Identifier	not1		753053	0					
ANR	753159	PrimaryExpression	0		753053	1					
ANR	753160	CompoundStatement		18:19:355:355	753053	1					
ANR	753161	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1847:6:39399:39441	753053	0	True				
ANR	753162	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		753053	0					
ANR	753163	Callee	SET_ALL_MULTI_BYTE_RANGE		753053	0					
ANR	753164	Identifier	SET_ALL_MULTI_BYTE_RANGE		753053	0					
ANR	753165	ArgumentList	enc		753053	1					
ANR	753166	Argument	enc		753053	0					
ANR	753167	Identifier	enc		753053	0					
ANR	753168	Argument	pbuf		753053	1					
ANR	753169	Identifier	pbuf		753053	0					
ANR	753170	ElseStatement	else		753053	0					
ANR	753171	CompoundStatement		21:9:422:422	753053	0					
ANR	753172	IfStatement	if ( not2 == 0 )		753053	0					
ANR	753173	Condition	not2 == 0	1850:10:39470:39478	753053	0	True				
ANR	753174	EqualityExpression	not2 == 0		753053	0		==			
ANR	753175	Identifier	not2		753053	0					
ANR	753176	PrimaryExpression	0		753053	1					
ANR	753177	CompoundStatement		22:21:445:445	753053	1					
ANR	753178	ReturnStatement	"return bbuf_clone ( pbuf , bbuf2 ) ;"	1851:1:39484:39514	753053	0	True				
ANR	753179	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		753053	0					
ANR	753180	Callee	bbuf_clone		753053	0					
ANR	753181	Identifier	bbuf_clone		753053	0					
ANR	753182	ArgumentList	pbuf		753053	1					
ANR	753183	Argument	pbuf		753053	0					
ANR	753184	Identifier	pbuf		753053	0					
ANR	753185	Argument	bbuf2		753053	1					
ANR	753186	Identifier	bbuf2		753053	0					
ANR	753187	ElseStatement	else		753053	0					
ANR	753188	CompoundStatement		25:11:499:499	753053	0					
ANR	753189	ReturnStatement	"return not_code_range_buf ( enc , bbuf2 , pbuf ) ;"	1854:1:39538:39581	753053	0	True				
ANR	753190	CallExpression	"not_code_range_buf ( enc , bbuf2 , pbuf )"		753053	0					
ANR	753191	Callee	not_code_range_buf		753053	0					
ANR	753192	Identifier	not_code_range_buf		753053	0					
ANR	753193	ArgumentList	enc		753053	1					
ANR	753194	Argument	enc		753053	0					
ANR	753195	Identifier	enc		753053	0					
ANR	753196	Argument	bbuf2		753053	1					
ANR	753197	Identifier	bbuf2		753053	0					
ANR	753198	Argument	pbuf		753053	2					
ANR	753199	Identifier	pbuf		753053	0					
ANR	753200	IfStatement	if ( not1 != 0 )		753053	8					
ANR	753201	Condition	not1 != 0	1859:6:39608:39616	753053	0	True				
ANR	753202	EqualityExpression	not1 != 0		753053	0		!=			
ANR	753203	Identifier	not1		753053	0					
ANR	753204	PrimaryExpression	0		753053	1					
ANR	753205	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1860:4:39623:39662	753053	1	True				
ANR	753206	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		753053	0					
ANR	753207	Callee	SWAP_BBUF_NOT		753053	0					
ANR	753208	Identifier	SWAP_BBUF_NOT		753053	0					
ANR	753209	ArgumentList	bbuf1		753053	1					
ANR	753210	Argument	bbuf1		753053	0					
ANR	753211	Identifier	bbuf1		753053	0					
ANR	753212	Argument	not1		753053	1					
ANR	753213	Identifier	not1		753053	0					
ANR	753214	Argument	bbuf2		753053	2					
ANR	753215	Identifier	bbuf2		753053	0					
ANR	753216	Argument	not2		753053	3					
ANR	753217	Identifier	not2		753053	0					
ANR	753218	ExpressionStatement	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )	1862:2:39667:39702	753053	9	True				
ANR	753219	AssignmentExpression	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )		753053	0		=			
ANR	753220	Identifier	data1		753053	0					
ANR	753221	CastExpression	( OnigCodePoint * ) ( bbuf1 -> p )		753053	1					
ANR	753222	CastTarget	OnigCodePoint *		753053	0					
ANR	753223	PtrMemberAccess	bbuf1 -> p		753053	1					
ANR	753224	Identifier	bbuf1		753053	0					
ANR	753225	Identifier	p		753053	1					
ANR	753226	ExpressionStatement	"GET_CODE_POINT ( n1 , data1 )"	1863:2:39706:39731	753053	10	True				
ANR	753227	CallExpression	"GET_CODE_POINT ( n1 , data1 )"		753053	0					
ANR	753228	Callee	GET_CODE_POINT		753053	0					
ANR	753229	Identifier	GET_CODE_POINT		753053	0					
ANR	753230	ArgumentList	n1		753053	1					
ANR	753231	Argument	n1		753053	0					
ANR	753232	Identifier	n1		753053	0					
ANR	753233	Argument	data1		753053	1					
ANR	753234	Identifier	data1		753053	0					
ANR	753235	ExpressionStatement	data1 ++	1864:2:39735:39742	753053	11	True				
ANR	753236	PostIncDecOperationExpression	data1 ++		753053	0					
ANR	753237	Identifier	data1		753053	0					
ANR	753238	IncDec	++		753053	1					
ANR	753239	IfStatement	if ( not2 == 0 && not1 == 0 )		753053	12					
ANR	753240	Condition	not2 == 0 && not1 == 0	1866:6:39751:39772	753053	0	True				
ANR	753241	AndExpression	not2 == 0 && not1 == 0		753053	0		&&			
ANR	753242	EqualityExpression	not2 == 0		753053	0		==			
ANR	753243	Identifier	not2		753053	0					
ANR	753244	PrimaryExpression	0		753053	1					
ANR	753245	EqualityExpression	not1 == 0		753053	1		==			
ANR	753246	Identifier	not1		753053	0					
ANR	753247	PrimaryExpression	0		753053	1					
ANR	753248	CompoundStatement		38:30:739:739	753053	1					
ANR	753249	ExpressionStatement	"r = bbuf_clone ( pbuf , bbuf2 )"	1867:4:39794:39821	753053	0	True				
ANR	753250	AssignmentExpression	"r = bbuf_clone ( pbuf , bbuf2 )"		753053	0		=			
ANR	753251	Identifier	r		753053	0					
ANR	753252	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		753053	1					
ANR	753253	Callee	bbuf_clone		753053	0					
ANR	753254	Identifier	bbuf_clone		753053	0					
ANR	753255	ArgumentList	pbuf		753053	1					
ANR	753256	Argument	pbuf		753053	0					
ANR	753257	Identifier	pbuf		753053	0					
ANR	753258	Argument	bbuf2		753053	1					
ANR	753259	Identifier	bbuf2		753053	0					
ANR	753260	ElseStatement	else		753053	0					
ANR	753261	IfStatement	if ( not1 == 0 )		753053	0					
ANR	753262	Condition	not1 == 0	1869:11:39838:39846	753053	0	True				
ANR	753263	EqualityExpression	not1 == 0		753053	0		==			
ANR	753264	Identifier	not1		753053	0					
ANR	753265	PrimaryExpression	0		753053	1					
ANR	753266	CompoundStatement		41:22:813:813	753053	1					
ANR	753267	ExpressionStatement	"r = not_code_range_buf ( enc , bbuf2 , pbuf )"	1870:4:39874:39914	753053	0	True				
ANR	753268	AssignmentExpression	"r = not_code_range_buf ( enc , bbuf2 , pbuf )"		753053	0		=			
ANR	753269	Identifier	r		753053	0					
ANR	753270	CallExpression	"not_code_range_buf ( enc , bbuf2 , pbuf )"		753053	1					
ANR	753271	Callee	not_code_range_buf		753053	0					
ANR	753272	Identifier	not_code_range_buf		753053	0					
ANR	753273	ArgumentList	enc		753053	1					
ANR	753274	Argument	enc		753053	0					
ANR	753275	Identifier	enc		753053	0					
ANR	753276	Argument	bbuf2		753053	1					
ANR	753277	Identifier	bbuf2		753053	0					
ANR	753278	Argument	pbuf		753053	2					
ANR	753279	Identifier	pbuf		753053	0					
ANR	753280	IfStatement	if ( r != 0 )		753053	13					
ANR	753281	Condition	r != 0	1872:6:39926:39931	753053	0	True				
ANR	753282	EqualityExpression	r != 0		753053	0		!=			
ANR	753283	Identifier	r		753053	0					
ANR	753284	PrimaryExpression	0		753053	1					
ANR	753285	ReturnStatement	return r ;	1872:14:39934:39942	753053	1	True				
ANR	753286	Identifier	r		753053	0					
ANR	753287	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		753053	14					
ANR	753288	ForInit	i = 0 ;	1874:7:39952:39957	753053	0	True				
ANR	753289	AssignmentExpression	i = 0		753053	0		=			
ANR	753290	Identifier	i		753053	0					
ANR	753291	PrimaryExpression	0		753053	1					
ANR	753292	Condition	i < n1	1874:14:39959:39964	753053	1	True				
ANR	753293	RelationalExpression	i < n1		753053	0		<			
ANR	753294	Identifier	i		753053	0					
ANR	753295	Identifier	n1		753053	1					
ANR	753296	PostIncDecOperationExpression	i ++	1874:22:39967:39969	753053	2	True				
ANR	753297	Identifier	i		753053	0					
ANR	753298	IncDec	++		753053	1					
ANR	753299	CompoundStatement		46:27:936:936	753053	3					
ANR	753300	ExpressionStatement	from = data1 [ i * 2 ]	1875:4:39978:39995	753053	0	True				
ANR	753301	AssignmentExpression	from = data1 [ i * 2 ]		753053	0		=			
ANR	753302	Identifier	from		753053	0					
ANR	753303	ArrayIndexing	data1 [ i * 2 ]		753053	1					
ANR	753304	Identifier	data1		753053	0					
ANR	753305	MultiplicativeExpression	i * 2		753053	1		*			
ANR	753306	Identifier	i		753053	0					
ANR	753307	PrimaryExpression	2		753053	1					
ANR	753308	ExpressionStatement	to = data1 [ i * 2 + 1 ]	1876:4:40001:40020	753053	1	True				
ANR	753309	AssignmentExpression	to = data1 [ i * 2 + 1 ]		753053	0		=			
ANR	753310	Identifier	to		753053	0					
ANR	753311	ArrayIndexing	data1 [ i * 2 + 1 ]		753053	1					
ANR	753312	Identifier	data1		753053	0					
ANR	753313	AdditiveExpression	i * 2 + 1		753053	1		+			
ANR	753314	MultiplicativeExpression	i * 2		753053	0		*			
ANR	753315	Identifier	i		753053	0					
ANR	753316	PrimaryExpression	2		753053	1					
ANR	753317	PrimaryExpression	1		753053	1					
ANR	753318	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from , to )"	1877:4:40026:40067	753053	2	True				
ANR	753319	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from , to )"		753053	0		=			
ANR	753320	Identifier	r		753053	0					
ANR	753321	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		753053	1					
ANR	753322	Callee	add_code_range_to_buf		753053	0					
ANR	753323	Identifier	add_code_range_to_buf		753053	0					
ANR	753324	ArgumentList	pbuf		753053	1					
ANR	753325	Argument	pbuf		753053	0					
ANR	753326	Identifier	pbuf		753053	0					
ANR	753327	Argument	from		753053	1					
ANR	753328	Identifier	from		753053	0					
ANR	753329	Argument	to		753053	2					
ANR	753330	Identifier	to		753053	0					
ANR	753331	IfStatement	if ( r != 0 )		753053	3					
ANR	753332	Condition	r != 0	1878:8:40077:40082	753053	0	True				
ANR	753333	EqualityExpression	r != 0		753053	0		!=			
ANR	753334	Identifier	r		753053	0					
ANR	753335	PrimaryExpression	0		753053	1					
ANR	753336	ReturnStatement	return r ;	1878:16:40085:40093	753053	1	True				
ANR	753337	Identifier	r		753053	0					
ANR	753338	ReturnStatement	return 0 ;	1880:2:40101:40109	753053	15	True				
ANR	753339	PrimaryExpression	0		753053	0					
ANR	753340	ReturnType	static int		753053	1					
ANR	753341	Identifier	or_code_range_buf		753053	2					
ANR	753342	ParameterList	"OnigEncoding enc , BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf"		753053	3					
ANR	753343	Parameter	OnigEncoding enc	1827:18:38940:38955	753053	0	True				
ANR	753344	ParameterType	OnigEncoding		753053	0					
ANR	753345	Identifier	enc		753053	1					
ANR	753346	Parameter	BBuf * bbuf1	1827:36:38958:38968	753053	1	True				
ANR	753347	ParameterType	BBuf *		753053	0					
ANR	753348	Identifier	bbuf1		753053	1					
ANR	753349	Parameter	int not1	1827:49:38971:38978	753053	2	True				
ANR	753350	ParameterType	int		753053	0					
ANR	753351	Identifier	not1		753053	1					
ANR	753352	Parameter	BBuf * bbuf2	1828:18:38999:39009	753053	3	True				
ANR	753353	ParameterType	BBuf *		753053	0					
ANR	753354	Identifier	bbuf2		753053	1					
ANR	753355	Parameter	int not2	1828:31:39012:39019	753053	4	True				
ANR	753356	ParameterType	int		753053	0					
ANR	753357	Identifier	not2		753053	1					
ANR	753358	Parameter	BBuf * * pbuf	1828:41:39022:39032	753053	5	True				
ANR	753359	ParameterType	BBuf * *		753053	0					
ANR	753360	Identifier	pbuf		753053	1					
ANR	753361	CFGEntryNode	ENTRY		753053		True				
ANR	753362	CFGExitNode	EXIT		753053		True				
ANR	753363	Symbol	n1		753053						
ANR	753364	Symbol	NULL		753053						
ANR	753365	Symbol	not_code_range_buf		753053						
ANR	753366	Symbol	data1		753053						
ANR	753367	Symbol	i		753053						
ANR	753368	Symbol	bbuf1 -> p		753053						
ANR	753369	Symbol	not2		753053						
ANR	753370	Symbol	not1		753053						
ANR	753371	Symbol	SET_ALL_MULTI_BYTE_RANGE		753053						
ANR	753372	Symbol	bbuf2		753053						
ANR	753373	Symbol	r		753053						
ANR	753374	Symbol	bbuf1		753053						
ANR	753375	Symbol	* i		753053						
ANR	753376	Symbol	IS_NULL		753053						
ANR	753377	Symbol	pbuf		753053						
ANR	753378	Symbol	bbuf_clone		753053						
ANR	753379	Symbol	from		753053						
ANR	753380	Symbol	add_code_range_to_buf		753053						
ANR	753381	Symbol	enc		753053						
ANR	753382	Symbol	to		753053						
ANR	753383	Symbol	* pbuf		753053						
ANR	753384	Symbol	* bbuf1		753053						
ANR	753385	Symbol	* data1		753053						
ANR	753386	Function	and_code_range1	1883:0:40114:40866							
ANR	753387	FunctionDef	"and_code_range1 (BBuf * * pbuf , OnigCodePoint from1 , OnigCodePoint to1 , OnigCodePoint * data , int n)"		753386	0					
ANR	753388	CompoundStatement		1886:0:40231:40866	753386	0					
ANR	753389	IdentifierDeclStatement	"int i , r ;"	1887:2:40235:40243	753386	0	True				
ANR	753390	IdentifierDecl	i		753386	0					
ANR	753391	IdentifierDeclType	int		753386	0					
ANR	753392	Identifier	i		753386	1					
ANR	753393	IdentifierDecl	r		753386	1					
ANR	753394	IdentifierDeclType	int		753386	0					
ANR	753395	Identifier	r		753386	1					
ANR	753396	IdentifierDeclStatement	"OnigCodePoint from2 , to2 ;"	1888:2:40247:40271	753386	1	True				
ANR	753397	IdentifierDecl	from2		753386	0					
ANR	753398	IdentifierDeclType	OnigCodePoint		753386	0					
ANR	753399	Identifier	from2		753386	1					
ANR	753400	IdentifierDecl	to2		753386	1					
ANR	753401	IdentifierDeclType	OnigCodePoint		753386	0					
ANR	753402	Identifier	to2		753386	1					
ANR	753403	ForStatement	for ( i = 0 ; i < n ; i ++ )		753386	2					
ANR	753404	ForInit	i = 0 ;	1890:7:40281:40286	753386	0	True				
ANR	753405	AssignmentExpression	i = 0		753386	0		=			
ANR	753406	Identifier	i		753386	0					
ANR	753407	PrimaryExpression	0		753386	1					
ANR	753408	Condition	i < n	1890:14:40288:40292	753386	1	True				
ANR	753409	RelationalExpression	i < n		753386	0		<			
ANR	753410	Identifier	i		753386	0					
ANR	753411	Identifier	n		753386	1					
ANR	753412	PostIncDecOperationExpression	i ++	1890:21:40295:40297	753386	2	True				
ANR	753413	Identifier	i		753386	0					
ANR	753414	IncDec	++		753386	1					
ANR	753415	CompoundStatement		5:26:68:68	753386	3					
ANR	753416	ExpressionStatement	from2 = data [ i * 2 ]	1891:4:40306:40323	753386	0	True				
ANR	753417	AssignmentExpression	from2 = data [ i * 2 ]		753386	0		=			
ANR	753418	Identifier	from2		753386	0					
ANR	753419	ArrayIndexing	data [ i * 2 ]		753386	1					
ANR	753420	Identifier	data		753386	0					
ANR	753421	MultiplicativeExpression	i * 2		753386	1		*			
ANR	753422	Identifier	i		753386	0					
ANR	753423	PrimaryExpression	2		753386	1					
ANR	753424	ExpressionStatement	to2 = data [ i * 2 + 1 ]	1892:4:40329:40348	753386	1	True				
ANR	753425	AssignmentExpression	to2 = data [ i * 2 + 1 ]		753386	0		=			
ANR	753426	Identifier	to2		753386	0					
ANR	753427	ArrayIndexing	data [ i * 2 + 1 ]		753386	1					
ANR	753428	Identifier	data		753386	0					
ANR	753429	AdditiveExpression	i * 2 + 1		753386	1		+			
ANR	753430	MultiplicativeExpression	i * 2		753386	0		*			
ANR	753431	Identifier	i		753386	0					
ANR	753432	PrimaryExpression	2		753386	1					
ANR	753433	PrimaryExpression	1		753386	1					
ANR	753434	IfStatement	if ( from2 < from1 )		753386	2					
ANR	753435	Condition	from2 < from1	1893:8:40358:40370	753386	0	True				
ANR	753436	RelationalExpression	from2 < from1		753386	0		<			
ANR	753437	Identifier	from2		753386	0					
ANR	753438	Identifier	from1		753386	1					
ANR	753439	CompoundStatement		8:23:141:141	753386	1					
ANR	753440	IfStatement	if ( to2 < from1 )		753386	0					
ANR	753441	Condition	to2 < from1	1894:10:40385:40395	753386	0	True				
ANR	753442	RelationalExpression	to2 < from1		753386	0		<			
ANR	753443	Identifier	to2		753386	0					
ANR	753444	Identifier	from1		753386	1					
ANR	753445	ContinueStatement	continue ;	1894:23:40398:40406	753386	1	True				
ANR	753446	ElseStatement	else		753386	0					
ANR	753447	CompoundStatement		10:11:187:187	753386	0					
ANR	753448	ExpressionStatement	from1 = to2 + 1	1896:1:40422:40437	753386	0	True				
ANR	753449	AssignmentExpression	from1 = to2 + 1		753386	0		=			
ANR	753450	Identifier	from1		753386	0					
ANR	753451	AdditiveExpression	to2 + 1		753386	1		+			
ANR	753452	Identifier	to2		753386	0					
ANR	753453	PrimaryExpression	1		753386	1					
ANR	753454	ElseStatement	else		753386	0					
ANR	753455	IfStatement	if ( from2 <= to1 )		753386	0					
ANR	753456	Condition	from2 <= to1	1899:13:40466:40477	753386	0	True				
ANR	753457	RelationalExpression	from2 <= to1		753386	0		<=			
ANR	753458	Identifier	from2		753386	0					
ANR	753459	Identifier	to1		753386	1					
ANR	753460	CompoundStatement		14:27:248:248	753386	1					
ANR	753461	IfStatement	if ( to2 < to1 )		753386	0					
ANR	753462	Condition	to2 < to1	1900:10:40492:40500	753386	0	True				
ANR	753463	RelationalExpression	to2 < to1		753386	0		<			
ANR	753464	Identifier	to2		753386	0					
ANR	753465	Identifier	to1		753386	1					
ANR	753466	CompoundStatement		15:21:271:271	753386	1					
ANR	753467	IfStatement	if ( from1 <= from2 - 1 )		753386	0					
ANR	753468	Condition	from1 <= from2 - 1	1901:5:40510:40527	753386	0	True				
ANR	753469	RelationalExpression	from1 <= from2 - 1		753386	0		<=			
ANR	753470	Identifier	from1		753386	0					
ANR	753471	AdditiveExpression	from2 - 1		753386	1		-			
ANR	753472	Identifier	from2		753386	0					
ANR	753473	PrimaryExpression	1		753386	1					
ANR	753474	CompoundStatement		16:25:298:298	753386	1					
ANR	753475	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"	1902:3:40535:40582	753386	0	True				
ANR	753476	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"		753386	0		=			
ANR	753477	Identifier	r		753386	0					
ANR	753478	CallExpression	"add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"		753386	1					
ANR	753479	Callee	add_code_range_to_buf		753386	0					
ANR	753480	Identifier	add_code_range_to_buf		753386	0					
ANR	753481	ArgumentList	pbuf		753386	1					
ANR	753482	Argument	pbuf		753386	0					
ANR	753483	Identifier	pbuf		753386	0					
ANR	753484	Argument	from1		753386	1					
ANR	753485	Identifier	from1		753386	0					
ANR	753486	Argument	from2 - 1		753386	2					
ANR	753487	AdditiveExpression	from2 - 1		753386	0		-			
ANR	753488	Identifier	from2		753386	0					
ANR	753489	PrimaryExpression	1		753386	1					
ANR	753490	IfStatement	if ( r != 0 )		753386	1					
ANR	753491	Condition	r != 0	1903:7:40591:40596	753386	0	True				
ANR	753492	EqualityExpression	r != 0		753386	0		!=			
ANR	753493	Identifier	r		753386	0					
ANR	753494	PrimaryExpression	0		753386	1					
ANR	753495	ReturnStatement	return r ;	1903:15:40599:40607	753386	1	True				
ANR	753496	Identifier	r		753386	0					
ANR	753497	ExpressionStatement	from1 = to2 + 1	1905:1:40613:40628	753386	1	True				
ANR	753498	AssignmentExpression	from1 = to2 + 1		753386	0		=			
ANR	753499	Identifier	from1		753386	0					
ANR	753500	AdditiveExpression	to2 + 1		753386	1		+			
ANR	753501	Identifier	to2		753386	0					
ANR	753502	PrimaryExpression	1		753386	1					
ANR	753503	ElseStatement	else		753386	0					
ANR	753504	CompoundStatement		22:11:417:417	753386	0					
ANR	753505	ExpressionStatement	to1 = from2 - 1	1908:1:40652:40667	753386	0	True				
ANR	753506	AssignmentExpression	to1 = from2 - 1		753386	0		=			
ANR	753507	Identifier	to1		753386	0					
ANR	753508	AdditiveExpression	from2 - 1		753386	1		-			
ANR	753509	Identifier	from2		753386	0					
ANR	753510	PrimaryExpression	1		753386	1					
ANR	753511	ElseStatement	else		753386	0					
ANR	753512	CompoundStatement		26:9:460:460	753386	0					
ANR	753513	ExpressionStatement	from1 = from2	1912:6:40700:40713	753386	0	True				
ANR	753514	AssignmentExpression	from1 = from2		753386	0		=			
ANR	753515	Identifier	from1		753386	0					
ANR	753516	Identifier	from2		753386	1					
ANR	753517	IfStatement	if ( from1 > to1 )		753386	3					
ANR	753518	Condition	from1 > to1	1914:8:40729:40739	753386	0	True				
ANR	753519	RelationalExpression	from1 > to1		753386	0		>			
ANR	753520	Identifier	from1		753386	0					
ANR	753521	Identifier	to1		753386	1					
ANR	753522	BreakStatement	break ;	1914:21:40742:40747	753386	1	True				
ANR	753523	IfStatement	if ( from1 <= to1 )		753386	3					
ANR	753524	Condition	from1 <= to1	1916:6:40759:40770	753386	0	True				
ANR	753525	RelationalExpression	from1 <= to1		753386	0		<=			
ANR	753526	Identifier	from1		753386	0					
ANR	753527	Identifier	to1		753386	1					
ANR	753528	CompoundStatement		31:20:541:541	753386	1					
ANR	753529	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from1 , to1 )"	1917:4:40779:40822	753386	0	True				
ANR	753530	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from1 , to1 )"		753386	0		=			
ANR	753531	Identifier	r		753386	0					
ANR	753532	CallExpression	"add_code_range_to_buf ( pbuf , from1 , to1 )"		753386	1					
ANR	753533	Callee	add_code_range_to_buf		753386	0					
ANR	753534	Identifier	add_code_range_to_buf		753386	0					
ANR	753535	ArgumentList	pbuf		753386	1					
ANR	753536	Argument	pbuf		753386	0					
ANR	753537	Identifier	pbuf		753386	0					
ANR	753538	Argument	from1		753386	1					
ANR	753539	Identifier	from1		753386	0					
ANR	753540	Argument	to1		753386	2					
ANR	753541	Identifier	to1		753386	0					
ANR	753542	IfStatement	if ( r != 0 )		753386	1					
ANR	753543	Condition	r != 0	1918:8:40832:40837	753386	0	True				
ANR	753544	EqualityExpression	r != 0		753386	0		!=			
ANR	753545	Identifier	r		753386	0					
ANR	753546	PrimaryExpression	0		753386	1					
ANR	753547	ReturnStatement	return r ;	1918:16:40840:40848	753386	1	True				
ANR	753548	Identifier	r		753386	0					
ANR	753549	ReturnStatement	return 0 ;	1920:2:40856:40864	753386	4	True				
ANR	753550	PrimaryExpression	0		753386	0					
ANR	753551	ReturnType	static int		753386	1					
ANR	753552	Identifier	and_code_range1		753386	2					
ANR	753553	ParameterList	"BBuf * * pbuf , OnigCodePoint from1 , OnigCodePoint to1 , OnigCodePoint * data , int n"		753386	3					
ANR	753554	Parameter	BBuf * * pbuf	1884:16:40141:40151	753386	0	True				
ANR	753555	ParameterType	BBuf * *		753386	0					
ANR	753556	Identifier	pbuf		753386	1					
ANR	753557	Parameter	OnigCodePoint from1	1884:29:40154:40172	753386	1	True				
ANR	753558	ParameterType	OnigCodePoint		753386	0					
ANR	753559	Identifier	from1		753386	1					
ANR	753560	Parameter	OnigCodePoint to1	1884:50:40175:40191	753386	2	True				
ANR	753561	ParameterType	OnigCodePoint		753386	0					
ANR	753562	Identifier	to1		753386	1					
ANR	753563	Parameter	OnigCodePoint * data	1885:9:40203:40221	753386	3	True				
ANR	753564	ParameterType	OnigCodePoint *		753386	0					
ANR	753565	Identifier	data		753386	1					
ANR	753566	Parameter	int n	1885:30:40224:40228	753386	4	True				
ANR	753567	ParameterType	int		753386	0					
ANR	753568	Identifier	n		753386	1					
ANR	753569	CFGEntryNode	ENTRY		753386		True				
ANR	753570	CFGExitNode	EXIT		753386		True				
ANR	753571	Symbol	r		753386						
ANR	753572	Symbol	* i		753386						
ANR	753573	Symbol	data		753386						
ANR	753574	Symbol	from1		753386						
ANR	753575	Symbol	to2		753386						
ANR	753576	Symbol	pbuf		753386						
ANR	753577	Symbol	to1		753386						
ANR	753578	Symbol	i		753386						
ANR	753579	Symbol	from2		753386						
ANR	753580	Symbol	add_code_range_to_buf		753386						
ANR	753581	Symbol	* data		753386						
ANR	753582	Symbol	n		753386						
ANR	753583	Function	and_code_range_buf	1923:0:40869:42199							
ANR	753584	FunctionDef	"and_code_range_buf (BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf)"		753583	0					
ANR	753585	CompoundStatement		1925:0:40958:42199	753583	0					
ANR	753586	IdentifierDeclStatement	int r ;	1926:2:40962:40967	753583	0	True				
ANR	753587	IdentifierDecl	r		753583	0					
ANR	753588	IdentifierDeclType	int		753583	0					
ANR	753589	Identifier	r		753583	1					
ANR	753590	IdentifierDeclStatement	"OnigCodePoint i , j , n1 , n2 , * data1 , * data2 ;"	1927:2:40971:41013	753583	1	True				
ANR	753591	IdentifierDecl	i		753583	0					
ANR	753592	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753593	Identifier	i		753583	1					
ANR	753594	IdentifierDecl	j		753583	1					
ANR	753595	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753596	Identifier	j		753583	1					
ANR	753597	IdentifierDecl	n1		753583	2					
ANR	753598	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753599	Identifier	n1		753583	1					
ANR	753600	IdentifierDecl	n2		753583	3					
ANR	753601	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753602	Identifier	n2		753583	1					
ANR	753603	IdentifierDecl	* data1		753583	4					
ANR	753604	IdentifierDeclType	OnigCodePoint *		753583	0					
ANR	753605	Identifier	data1		753583	1					
ANR	753606	IdentifierDecl	* data2		753583	5					
ANR	753607	IdentifierDeclType	OnigCodePoint *		753583	0					
ANR	753608	Identifier	data2		753583	1					
ANR	753609	IdentifierDeclStatement	"OnigCodePoint from , to , from1 , to1 , from2 , to2 ;"	1928:2:41017:41063	753583	2	True				
ANR	753610	IdentifierDecl	from		753583	0					
ANR	753611	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753612	Identifier	from		753583	1					
ANR	753613	IdentifierDecl	to		753583	1					
ANR	753614	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753615	Identifier	to		753583	1					
ANR	753616	IdentifierDecl	from1		753583	2					
ANR	753617	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753618	Identifier	from1		753583	1					
ANR	753619	IdentifierDecl	to1		753583	3					
ANR	753620	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753621	Identifier	to1		753583	1					
ANR	753622	IdentifierDecl	from2		753583	4					
ANR	753623	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753624	Identifier	from2		753583	1					
ANR	753625	IdentifierDecl	to2		753583	5					
ANR	753626	IdentifierDeclType	OnigCodePoint		753583	0					
ANR	753627	Identifier	to2		753583	1					
ANR	753628	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1930:2:41068:41088	753583	3	True				
ANR	753629	AssignmentExpression	* pbuf = ( BBuf * ) NULL		753583	0		=			
ANR	753630	UnaryOperationExpression	* pbuf		753583	0					
ANR	753631	UnaryOperator	*		753583	0					
ANR	753632	Identifier	pbuf		753583	1					
ANR	753633	CastExpression	( BBuf * ) NULL		753583	1					
ANR	753634	CastTarget	BBuf *		753583	0					
ANR	753635	Identifier	NULL		753583	1					
ANR	753636	IfStatement	if ( IS_NULL ( bbuf1 ) )		753583	4					
ANR	753637	Condition	IS_NULL ( bbuf1 )	1931:6:41096:41109	753583	0	True				
ANR	753638	CallExpression	IS_NULL ( bbuf1 )		753583	0					
ANR	753639	Callee	IS_NULL		753583	0					
ANR	753640	Identifier	IS_NULL		753583	0					
ANR	753641	ArgumentList	bbuf1		753583	1					
ANR	753642	Argument	bbuf1		753583	0					
ANR	753643	Identifier	bbuf1		753583	0					
ANR	753644	CompoundStatement		7:22:153:153	753583	1					
ANR	753645	IfStatement	if ( not1 != 0 && IS_NOT_NULL ( bbuf2 ) )		753583	0					
ANR	753646	Condition	not1 != 0 && IS_NOT_NULL ( bbuf2 )	1932:8:41122:41152	753583	0	True				
ANR	753647	AndExpression	not1 != 0 && IS_NOT_NULL ( bbuf2 )		753583	0		&&			
ANR	753648	EqualityExpression	not1 != 0		753583	0		!=			
ANR	753649	Identifier	not1		753583	0					
ANR	753650	PrimaryExpression	0		753583	1					
ANR	753651	CallExpression	IS_NOT_NULL ( bbuf2 )		753583	1					
ANR	753652	Callee	IS_NOT_NULL		753583	0					
ANR	753653	Identifier	IS_NOT_NULL		753583	0					
ANR	753654	ArgumentList	bbuf2		753583	1					
ANR	753655	Argument	bbuf2		753583	0					
ANR	753656	Identifier	bbuf2		753583	0					
ANR	753657	ReturnStatement	"return bbuf_clone ( pbuf , bbuf2 ) ;"	1933:6:41190:41220	753583	1	True				
ANR	753658	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		753583	0					
ANR	753659	Callee	bbuf_clone		753583	0					
ANR	753660	Identifier	bbuf_clone		753583	0					
ANR	753661	ArgumentList	pbuf		753583	1					
ANR	753662	Argument	pbuf		753583	0					
ANR	753663	Identifier	pbuf		753583	0					
ANR	753664	Argument	bbuf2		753583	1					
ANR	753665	Identifier	bbuf2		753583	0					
ANR	753666	ReturnStatement	return 0 ;	1934:4:41226:41234	753583	1	True				
ANR	753667	PrimaryExpression	0		753583	0					
ANR	753668	ElseStatement	else		753583	0					
ANR	753669	IfStatement	if ( IS_NULL ( bbuf2 ) )		753583	0					
ANR	753670	Condition	IS_NULL ( bbuf2 )	1936:11:41251:41264	753583	0	True				
ANR	753671	CallExpression	IS_NULL ( bbuf2 )		753583	0					
ANR	753672	Callee	IS_NULL		753583	0					
ANR	753673	Identifier	IS_NULL		753583	0					
ANR	753674	ArgumentList	bbuf2		753583	1					
ANR	753675	Argument	bbuf2		753583	0					
ANR	753676	Identifier	bbuf2		753583	0					
ANR	753677	CompoundStatement		12:27:308:308	753583	1					
ANR	753678	IfStatement	if ( not2 != 0 )		753583	0					
ANR	753679	Condition	not2 != 0	1937:8:41277:41285	753583	0	True				
ANR	753680	EqualityExpression	not2 != 0		753583	0		!=			
ANR	753681	Identifier	not2		753583	0					
ANR	753682	PrimaryExpression	0		753583	1					
ANR	753683	ReturnStatement	"return bbuf_clone ( pbuf , bbuf1 ) ;"	1938:6:41294:41324	753583	1	True				
ANR	753684	CallExpression	"bbuf_clone ( pbuf , bbuf1 )"		753583	0					
ANR	753685	Callee	bbuf_clone		753583	0					
ANR	753686	Identifier	bbuf_clone		753583	0					
ANR	753687	ArgumentList	pbuf		753583	1					
ANR	753688	Argument	pbuf		753583	0					
ANR	753689	Identifier	pbuf		753583	0					
ANR	753690	Argument	bbuf1		753583	1					
ANR	753691	Identifier	bbuf1		753583	0					
ANR	753692	ReturnStatement	return 0 ;	1939:4:41330:41338	753583	1	True				
ANR	753693	PrimaryExpression	0		753583	0					
ANR	753694	IfStatement	if ( not1 != 0 )		753583	5					
ANR	753695	Condition	not1 != 0	1942:6:41351:41359	753583	0	True				
ANR	753696	EqualityExpression	not1 != 0		753583	0		!=			
ANR	753697	Identifier	not1		753583	0					
ANR	753698	PrimaryExpression	0		753583	1					
ANR	753699	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1943:4:41366:41405	753583	1	True				
ANR	753700	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		753583	0					
ANR	753701	Callee	SWAP_BBUF_NOT		753583	0					
ANR	753702	Identifier	SWAP_BBUF_NOT		753583	0					
ANR	753703	ArgumentList	bbuf1		753583	1					
ANR	753704	Argument	bbuf1		753583	0					
ANR	753705	Identifier	bbuf1		753583	0					
ANR	753706	Argument	not1		753583	1					
ANR	753707	Identifier	not1		753583	0					
ANR	753708	Argument	bbuf2		753583	2					
ANR	753709	Identifier	bbuf2		753583	0					
ANR	753710	Argument	not2		753583	3					
ANR	753711	Identifier	not2		753583	0					
ANR	753712	ExpressionStatement	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )	1945:2:41410:41445	753583	6	True				
ANR	753713	AssignmentExpression	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )		753583	0		=			
ANR	753714	Identifier	data1		753583	0					
ANR	753715	CastExpression	( OnigCodePoint * ) ( bbuf1 -> p )		753583	1					
ANR	753716	CastTarget	OnigCodePoint *		753583	0					
ANR	753717	PtrMemberAccess	bbuf1 -> p		753583	1					
ANR	753718	Identifier	bbuf1		753583	0					
ANR	753719	Identifier	p		753583	1					
ANR	753720	ExpressionStatement	data2 = ( OnigCodePoint * ) ( bbuf2 -> p )	1946:2:41449:41484	753583	7	True				
ANR	753721	AssignmentExpression	data2 = ( OnigCodePoint * ) ( bbuf2 -> p )		753583	0		=			
ANR	753722	Identifier	data2		753583	0					
ANR	753723	CastExpression	( OnigCodePoint * ) ( bbuf2 -> p )		753583	1					
ANR	753724	CastTarget	OnigCodePoint *		753583	0					
ANR	753725	PtrMemberAccess	bbuf2 -> p		753583	1					
ANR	753726	Identifier	bbuf2		753583	0					
ANR	753727	Identifier	p		753583	1					
ANR	753728	ExpressionStatement	"GET_CODE_POINT ( n1 , data1 )"	1947:2:41488:41513	753583	8	True				
ANR	753729	CallExpression	"GET_CODE_POINT ( n1 , data1 )"		753583	0					
ANR	753730	Callee	GET_CODE_POINT		753583	0					
ANR	753731	Identifier	GET_CODE_POINT		753583	0					
ANR	753732	ArgumentList	n1		753583	1					
ANR	753733	Argument	n1		753583	0					
ANR	753734	Identifier	n1		753583	0					
ANR	753735	Argument	data1		753583	1					
ANR	753736	Identifier	data1		753583	0					
ANR	753737	ExpressionStatement	"GET_CODE_POINT ( n2 , data2 )"	1948:2:41517:41542	753583	9	True				
ANR	753738	CallExpression	"GET_CODE_POINT ( n2 , data2 )"		753583	0					
ANR	753739	Callee	GET_CODE_POINT		753583	0					
ANR	753740	Identifier	GET_CODE_POINT		753583	0					
ANR	753741	ArgumentList	n2		753583	1					
ANR	753742	Argument	n2		753583	0					
ANR	753743	Identifier	n2		753583	0					
ANR	753744	Argument	data2		753583	1					
ANR	753745	Identifier	data2		753583	0					
ANR	753746	ExpressionStatement	data1 ++	1949:2:41546:41553	753583	10	True				
ANR	753747	PostIncDecOperationExpression	data1 ++		753583	0					
ANR	753748	Identifier	data1		753583	0					
ANR	753749	IncDec	++		753583	1					
ANR	753750	ExpressionStatement	data2 ++	1950:2:41557:41564	753583	11	True				
ANR	753751	PostIncDecOperationExpression	data2 ++		753583	0					
ANR	753752	Identifier	data2		753583	0					
ANR	753753	IncDec	++		753583	1					
ANR	753754	IfStatement	if ( not2 == 0 && not1 == 0 )		753583	12					
ANR	753755	Condition	not2 == 0 && not1 == 0	1952:6:41573:41594	753583	0	True				
ANR	753756	AndExpression	not2 == 0 && not1 == 0		753583	0		&&			
ANR	753757	EqualityExpression	not2 == 0		753583	0		==			
ANR	753758	Identifier	not2		753583	0					
ANR	753759	PrimaryExpression	0		753583	1					
ANR	753760	EqualityExpression	not1 == 0		753583	1		==			
ANR	753761	Identifier	not1		753583	0					
ANR	753762	PrimaryExpression	0		753583	1					
ANR	753763	CompoundStatement		28:30:638:638	753583	1					
ANR	753764	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		753583	0					
ANR	753765	ForInit	i = 0 ;	1953:9:41622:41627	753583	0	True				
ANR	753766	AssignmentExpression	i = 0		753583	0		=			
ANR	753767	Identifier	i		753583	0					
ANR	753768	PrimaryExpression	0		753583	1					
ANR	753769	Condition	i < n1	1953:16:41629:41634	753583	1	True				
ANR	753770	RelationalExpression	i < n1		753583	0		<			
ANR	753771	Identifier	i		753583	0					
ANR	753772	Identifier	n1		753583	1					
ANR	753773	PostIncDecOperationExpression	i ++	1953:24:41637:41639	753583	2	True				
ANR	753774	Identifier	i		753583	0					
ANR	753775	IncDec	++		753583	1					
ANR	753776	CompoundStatement		29:29:683:683	753583	3					
ANR	753777	ExpressionStatement	from1 = data1 [ i * 2 ]	1954:6:41650:41668	753583	0	True				
ANR	753778	AssignmentExpression	from1 = data1 [ i * 2 ]		753583	0		=			
ANR	753779	Identifier	from1		753583	0					
ANR	753780	ArrayIndexing	data1 [ i * 2 ]		753583	1					
ANR	753781	Identifier	data1		753583	0					
ANR	753782	MultiplicativeExpression	i * 2		753583	1		*			
ANR	753783	Identifier	i		753583	0					
ANR	753784	PrimaryExpression	2		753583	1					
ANR	753785	ExpressionStatement	to1 = data1 [ i * 2 + 1 ]	1955:6:41676:41696	753583	1	True				
ANR	753786	AssignmentExpression	to1 = data1 [ i * 2 + 1 ]		753583	0		=			
ANR	753787	Identifier	to1		753583	0					
ANR	753788	ArrayIndexing	data1 [ i * 2 + 1 ]		753583	1					
ANR	753789	Identifier	data1		753583	0					
ANR	753790	AdditiveExpression	i * 2 + 1		753583	1		+			
ANR	753791	MultiplicativeExpression	i * 2		753583	0		*			
ANR	753792	Identifier	i		753583	0					
ANR	753793	PrimaryExpression	2		753583	1					
ANR	753794	PrimaryExpression	1		753583	1					
ANR	753795	ForStatement	for ( j = 0 ; j < n2 ; j ++ )		753583	2					
ANR	753796	ForInit	j = 0 ;	1956:11:41709:41714	753583	0	True				
ANR	753797	AssignmentExpression	j = 0		753583	0		=			
ANR	753798	Identifier	j		753583	0					
ANR	753799	PrimaryExpression	0		753583	1					
ANR	753800	Condition	j < n2	1956:18:41716:41721	753583	1	True				
ANR	753801	RelationalExpression	j < n2		753583	0		<			
ANR	753802	Identifier	j		753583	0					
ANR	753803	Identifier	n2		753583	1					
ANR	753804	PostIncDecOperationExpression	j ++	1956:26:41724:41726	753583	2	True				
ANR	753805	Identifier	j		753583	0					
ANR	753806	IncDec	++		753583	1					
ANR	753807	CompoundStatement		32:31:770:770	753583	3					
ANR	753808	ExpressionStatement	from2 = data2 [ j * 2 ]	1957:1:41732:41750	753583	0	True				
ANR	753809	AssignmentExpression	from2 = data2 [ j * 2 ]		753583	0		=			
ANR	753810	Identifier	from2		753583	0					
ANR	753811	ArrayIndexing	data2 [ j * 2 ]		753583	1					
ANR	753812	Identifier	data2		753583	0					
ANR	753813	MultiplicativeExpression	j * 2		753583	1		*			
ANR	753814	Identifier	j		753583	0					
ANR	753815	PrimaryExpression	2		753583	1					
ANR	753816	ExpressionStatement	to2 = data2 [ j * 2 + 1 ]	1958:1:41753:41773	753583	1	True				
ANR	753817	AssignmentExpression	to2 = data2 [ j * 2 + 1 ]		753583	0		=			
ANR	753818	Identifier	to2		753583	0					
ANR	753819	ArrayIndexing	data2 [ j * 2 + 1 ]		753583	1					
ANR	753820	Identifier	data2		753583	0					
ANR	753821	AdditiveExpression	j * 2 + 1		753583	1		+			
ANR	753822	MultiplicativeExpression	j * 2		753583	0		*			
ANR	753823	Identifier	j		753583	0					
ANR	753824	PrimaryExpression	2		753583	1					
ANR	753825	PrimaryExpression	1		753583	1					
ANR	753826	IfStatement	if ( from2 > to1 )		753583	2					
ANR	753827	Condition	from2 > to1	1959:5:41780:41790	753583	0	True				
ANR	753828	RelationalExpression	from2 > to1		753583	0		>			
ANR	753829	Identifier	from2		753583	0					
ANR	753830	Identifier	to1		753583	1					
ANR	753831	BreakStatement	break ;	1959:18:41793:41798	753583	1	True				
ANR	753832	IfStatement	if ( to2 < from1 )		753583	3					
ANR	753833	Condition	to2 < from1	1960:5:41805:41815	753583	0	True				
ANR	753834	RelationalExpression	to2 < from1		753583	0		<			
ANR	753835	Identifier	to2		753583	0					
ANR	753836	Identifier	from1		753583	1					
ANR	753837	ContinueStatement	continue ;	1960:18:41818:41826	753583	1	True				
ANR	753838	ExpressionStatement	"from = MAX ( from1 , from2 )"	1961:1:41829:41853	753583	4	True				
ANR	753839	AssignmentExpression	"from = MAX ( from1 , from2 )"		753583	0		=			
ANR	753840	Identifier	from		753583	0					
ANR	753841	CallExpression	"MAX ( from1 , from2 )"		753583	1					
ANR	753842	Callee	MAX		753583	0					
ANR	753843	Identifier	MAX		753583	0					
ANR	753844	ArgumentList	from1		753583	1					
ANR	753845	Argument	from1		753583	0					
ANR	753846	Identifier	from1		753583	0					
ANR	753847	Argument	from2		753583	1					
ANR	753848	Identifier	from2		753583	0					
ANR	753849	ExpressionStatement	"to = MIN ( to1 , to2 )"	1962:1:41856:41876	753583	5	True				
ANR	753850	AssignmentExpression	"to = MIN ( to1 , to2 )"		753583	0		=			
ANR	753851	Identifier	to		753583	0					
ANR	753852	CallExpression	"MIN ( to1 , to2 )"		753583	1					
ANR	753853	Callee	MIN		753583	0					
ANR	753854	Identifier	MIN		753583	0					
ANR	753855	ArgumentList	to1		753583	1					
ANR	753856	Argument	to1		753583	0					
ANR	753857	Identifier	to1		753583	0					
ANR	753858	Argument	to2		753583	1					
ANR	753859	Identifier	to2		753583	0					
ANR	753860	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from , to )"	1963:1:41879:41920	753583	6	True				
ANR	753861	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from , to )"		753583	0		=			
ANR	753862	Identifier	r		753583	0					
ANR	753863	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		753583	1					
ANR	753864	Callee	add_code_range_to_buf		753583	0					
ANR	753865	Identifier	add_code_range_to_buf		753583	0					
ANR	753866	ArgumentList	pbuf		753583	1					
ANR	753867	Argument	pbuf		753583	0					
ANR	753868	Identifier	pbuf		753583	0					
ANR	753869	Argument	from		753583	1					
ANR	753870	Identifier	from		753583	0					
ANR	753871	Argument	to		753583	2					
ANR	753872	Identifier	to		753583	0					
ANR	753873	IfStatement	if ( r != 0 )		753583	7					
ANR	753874	Condition	r != 0	1964:5:41927:41932	753583	0	True				
ANR	753875	EqualityExpression	r != 0		753583	0		!=			
ANR	753876	Identifier	r		753583	0					
ANR	753877	PrimaryExpression	0		753583	1					
ANR	753878	ReturnStatement	return r ;	1964:13:41935:41943	753583	1	True				
ANR	753879	Identifier	r		753583	0					
ANR	753880	ElseStatement	else		753583	0					
ANR	753881	IfStatement	if ( not1 == 0 )		753583	0					
ANR	753882	Condition	not1 == 0	1968:11:41974:41982	753583	0	True				
ANR	753883	EqualityExpression	not1 == 0		753583	0		==			
ANR	753884	Identifier	not1		753583	0					
ANR	753885	PrimaryExpression	0		753583	1					
ANR	753886	CompoundStatement		44:22:1026:1026	753583	1					
ANR	753887	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		753583	0					
ANR	753888	ForInit	i = 0 ;	1969:9:42016:42021	753583	0	True				
ANR	753889	AssignmentExpression	i = 0		753583	0		=			
ANR	753890	Identifier	i		753583	0					
ANR	753891	PrimaryExpression	0		753583	1					
ANR	753892	Condition	i < n1	1969:16:42023:42028	753583	1	True				
ANR	753893	RelationalExpression	i < n1		753583	0		<			
ANR	753894	Identifier	i		753583	0					
ANR	753895	Identifier	n1		753583	1					
ANR	753896	PostIncDecOperationExpression	i ++	1969:24:42031:42033	753583	2	True				
ANR	753897	Identifier	i		753583	0					
ANR	753898	IncDec	++		753583	1					
ANR	753899	CompoundStatement		45:29:1077:1077	753583	3					
ANR	753900	ExpressionStatement	from1 = data1 [ i * 2 ]	1970:6:42044:42062	753583	0	True				
ANR	753901	AssignmentExpression	from1 = data1 [ i * 2 ]		753583	0		=			
ANR	753902	Identifier	from1		753583	0					
ANR	753903	ArrayIndexing	data1 [ i * 2 ]		753583	1					
ANR	753904	Identifier	data1		753583	0					
ANR	753905	MultiplicativeExpression	i * 2		753583	1		*			
ANR	753906	Identifier	i		753583	0					
ANR	753907	PrimaryExpression	2		753583	1					
ANR	753908	ExpressionStatement	to1 = data1 [ i * 2 + 1 ]	1971:6:42070:42090	753583	1	True				
ANR	753909	AssignmentExpression	to1 = data1 [ i * 2 + 1 ]		753583	0		=			
ANR	753910	Identifier	to1		753583	0					
ANR	753911	ArrayIndexing	data1 [ i * 2 + 1 ]		753583	1					
ANR	753912	Identifier	data1		753583	0					
ANR	753913	AdditiveExpression	i * 2 + 1		753583	1		+			
ANR	753914	MultiplicativeExpression	i * 2		753583	0		*			
ANR	753915	Identifier	i		753583	0					
ANR	753916	PrimaryExpression	2		753583	1					
ANR	753917	PrimaryExpression	1		753583	1					
ANR	753918	ExpressionStatement	"r = and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"	1972:6:42098:42146	753583	2	True				
ANR	753919	AssignmentExpression	"r = and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"		753583	0		=			
ANR	753920	Identifier	r		753583	0					
ANR	753921	CallExpression	"and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"		753583	1					
ANR	753922	Callee	and_code_range1		753583	0					
ANR	753923	Identifier	and_code_range1		753583	0					
ANR	753924	ArgumentList	pbuf		753583	1					
ANR	753925	Argument	pbuf		753583	0					
ANR	753926	Identifier	pbuf		753583	0					
ANR	753927	Argument	from1		753583	1					
ANR	753928	Identifier	from1		753583	0					
ANR	753929	Argument	to1		753583	2					
ANR	753930	Identifier	to1		753583	0					
ANR	753931	Argument	data2		753583	3					
ANR	753932	Identifier	data2		753583	0					
ANR	753933	Argument	n2		753583	4					
ANR	753934	Identifier	n2		753583	0					
ANR	753935	IfStatement	if ( r != 0 )		753583	3					
ANR	753936	Condition	r != 0	1973:10:42158:42163	753583	0	True				
ANR	753937	EqualityExpression	r != 0		753583	0		!=			
ANR	753938	Identifier	r		753583	0					
ANR	753939	PrimaryExpression	0		753583	1					
ANR	753940	ReturnStatement	return r ;	1973:18:42166:42174	753583	1	True				
ANR	753941	Identifier	r		753583	0					
ANR	753942	ReturnStatement	return 0 ;	1977:2:42189:42197	753583	13	True				
ANR	753943	PrimaryExpression	0		753583	0					
ANR	753944	ReturnType	static int		753583	1					
ANR	753945	Identifier	and_code_range_buf		753583	2					
ANR	753946	ParameterList	"BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf"		753583	3					
ANR	753947	Parameter	BBuf * bbuf1	1924:19:40899:40909	753583	0	True				
ANR	753948	ParameterType	BBuf *		753583	0					
ANR	753949	Identifier	bbuf1		753583	1					
ANR	753950	Parameter	int not1	1924:32:40912:40919	753583	1	True				
ANR	753951	ParameterType	int		753583	0					
ANR	753952	Identifier	not1		753583	1					
ANR	753953	Parameter	BBuf * bbuf2	1924:42:40922:40932	753583	2	True				
ANR	753954	ParameterType	BBuf *		753583	0					
ANR	753955	Identifier	bbuf2		753583	1					
ANR	753956	Parameter	int not2	1924:55:40935:40942	753583	3	True				
ANR	753957	ParameterType	int		753583	0					
ANR	753958	Identifier	not2		753583	1					
ANR	753959	Parameter	BBuf * * pbuf	1924:65:40945:40955	753583	4	True				
ANR	753960	ParameterType	BBuf * *		753583	0					
ANR	753961	Identifier	pbuf		753583	1					
ANR	753962	CFGEntryNode	ENTRY		753583		True				
ANR	753963	CFGExitNode	EXIT		753583		True				
ANR	753964	Symbol	IS_NOT_NULL		753583						
ANR	753965	Symbol	n1		753583						
ANR	753966	Symbol	n2		753583						
ANR	753967	Symbol	MAX		753583						
ANR	753968	Symbol	bbuf1 -> p		753583						
ANR	753969	Symbol	not2		753583						
ANR	753970	Symbol	not1		753583						
ANR	753971	Symbol	bbuf2		753583						
ANR	753972	Symbol	bbuf1		753583						
ANR	753973	Symbol	IS_NULL		753583						
ANR	753974	Symbol	from1		753583						
ANR	753975	Symbol	to2		753583						
ANR	753976	Symbol	and_code_range1		753583						
ANR	753977	Symbol	to1		753583						
ANR	753978	Symbol	bbuf_clone		753583						
ANR	753979	Symbol	from		753583						
ANR	753980	Symbol	from2		753583						
ANR	753981	Symbol	add_code_range_to_buf		753583						
ANR	753982	Symbol	* pbuf		753583						
ANR	753983	Symbol	* data2		753583						
ANR	753984	Symbol	* data1		753583						
ANR	753985	Symbol	bbuf2 -> p		753583						
ANR	753986	Symbol	NULL		753583						
ANR	753987	Symbol	data2		753583						
ANR	753988	Symbol	data1		753583						
ANR	753989	Symbol	i		753583						
ANR	753990	Symbol	j		753583						
ANR	753991	Symbol	r		753583						
ANR	753992	Symbol	* i		753583						
ANR	753993	Symbol	MIN		753583						
ANR	753994	Symbol	* j		753583						
ANR	753995	Symbol	pbuf		753583						
ANR	753996	Symbol	to		753583						
ANR	753997	Symbol	* bbuf1		753583						
ANR	753998	Symbol	* bbuf2		753583						
ANR	753999	Function	and_cclass	1980:0:42202:43311							
ANR	754000	FunctionDef	"and_cclass (CClassNode * dest , CClassNode * cc , OnigEncoding enc)"		753999	0					
ANR	754001	CompoundStatement		1982:0:42276:43311	753999	0					
ANR	754002	IdentifierDeclStatement	"int r , not1 , not2 ;"	1983:2:42280:42297	753999	0	True				
ANR	754003	IdentifierDecl	r		753999	0					
ANR	754004	IdentifierDeclType	int		753999	0					
ANR	754005	Identifier	r		753999	1					
ANR	754006	IdentifierDecl	not1		753999	1					
ANR	754007	IdentifierDeclType	int		753999	0					
ANR	754008	Identifier	not1		753999	1					
ANR	754009	IdentifierDecl	not2		753999	2					
ANR	754010	IdentifierDeclType	int		753999	0					
ANR	754011	Identifier	not2		753999	1					
ANR	754012	IdentifierDeclStatement	"BBuf * buf1 , * buf2 , * pbuf ;"	1984:2:42301:42325	753999	1	True				
ANR	754013	IdentifierDecl	* buf1		753999	0					
ANR	754014	IdentifierDeclType	BBuf *		753999	0					
ANR	754015	Identifier	buf1		753999	1					
ANR	754016	IdentifierDecl	* buf2		753999	1					
ANR	754017	IdentifierDeclType	BBuf *		753999	0					
ANR	754018	Identifier	buf2		753999	1					
ANR	754019	IdentifierDecl	* pbuf		753999	2					
ANR	754020	IdentifierDeclType	BBuf *		753999	0					
ANR	754021	Identifier	pbuf		753999	1					
ANR	754022	IdentifierDeclStatement	"BitSetRef bsr1 , bsr2 ;"	1985:2:42329:42349	753999	2	True				
ANR	754023	IdentifierDecl	bsr1		753999	0					
ANR	754024	IdentifierDeclType	BitSetRef		753999	0					
ANR	754025	Identifier	bsr1		753999	1					
ANR	754026	IdentifierDecl	bsr2		753999	1					
ANR	754027	IdentifierDeclType	BitSetRef		753999	0					
ANR	754028	Identifier	bsr2		753999	1					
ANR	754029	IdentifierDeclStatement	"BitSet bs1 , bs2 ;"	1986:2:42353:42368	753999	3	True				
ANR	754030	IdentifierDecl	bs1		753999	0					
ANR	754031	IdentifierDeclType	BitSet		753999	0					
ANR	754032	Identifier	bs1		753999	1					
ANR	754033	IdentifierDecl	bs2		753999	1					
ANR	754034	IdentifierDeclType	BitSet		753999	0					
ANR	754035	Identifier	bs2		753999	1					
ANR	754036	ExpressionStatement	not1 = IS_NCCLASS_NOT ( dest )	1988:2:42373:42400	753999	4	True				
ANR	754037	AssignmentExpression	not1 = IS_NCCLASS_NOT ( dest )		753999	0		=			
ANR	754038	Identifier	not1		753999	0					
ANR	754039	CallExpression	IS_NCCLASS_NOT ( dest )		753999	1					
ANR	754040	Callee	IS_NCCLASS_NOT		753999	0					
ANR	754041	Identifier	IS_NCCLASS_NOT		753999	0					
ANR	754042	ArgumentList	dest		753999	1					
ANR	754043	Argument	dest		753999	0					
ANR	754044	Identifier	dest		753999	0					
ANR	754045	ExpressionStatement	bsr1 = dest -> bs	1989:2:42404:42419	753999	5	True				
ANR	754046	AssignmentExpression	bsr1 = dest -> bs		753999	0		=			
ANR	754047	Identifier	bsr1		753999	0					
ANR	754048	PtrMemberAccess	dest -> bs		753999	1					
ANR	754049	Identifier	dest		753999	0					
ANR	754050	Identifier	bs		753999	1					
ANR	754051	ExpressionStatement	buf1 = dest -> mbuf	1990:2:42423:42440	753999	6	True				
ANR	754052	AssignmentExpression	buf1 = dest -> mbuf		753999	0		=			
ANR	754053	Identifier	buf1		753999	0					
ANR	754054	PtrMemberAccess	dest -> mbuf		753999	1					
ANR	754055	Identifier	dest		753999	0					
ANR	754056	Identifier	mbuf		753999	1					
ANR	754057	ExpressionStatement	not2 = IS_NCCLASS_NOT ( cc )	1991:2:42444:42469	753999	7	True				
ANR	754058	AssignmentExpression	not2 = IS_NCCLASS_NOT ( cc )		753999	0		=			
ANR	754059	Identifier	not2		753999	0					
ANR	754060	CallExpression	IS_NCCLASS_NOT ( cc )		753999	1					
ANR	754061	Callee	IS_NCCLASS_NOT		753999	0					
ANR	754062	Identifier	IS_NCCLASS_NOT		753999	0					
ANR	754063	ArgumentList	cc		753999	1					
ANR	754064	Argument	cc		753999	0					
ANR	754065	Identifier	cc		753999	0					
ANR	754066	ExpressionStatement	bsr2 = cc -> bs	1992:2:42473:42486	753999	8	True				
ANR	754067	AssignmentExpression	bsr2 = cc -> bs		753999	0		=			
ANR	754068	Identifier	bsr2		753999	0					
ANR	754069	PtrMemberAccess	cc -> bs		753999	1					
ANR	754070	Identifier	cc		753999	0					
ANR	754071	Identifier	bs		753999	1					
ANR	754072	ExpressionStatement	buf2 = cc -> mbuf	1993:2:42490:42505	753999	9	True				
ANR	754073	AssignmentExpression	buf2 = cc -> mbuf		753999	0		=			
ANR	754074	Identifier	buf2		753999	0					
ANR	754075	PtrMemberAccess	cc -> mbuf		753999	1					
ANR	754076	Identifier	cc		753999	0					
ANR	754077	Identifier	mbuf		753999	1					
ANR	754078	IfStatement	if ( not1 != 0 )		753999	10					
ANR	754079	Condition	not1 != 0	1995:6:42514:42522	753999	0	True				
ANR	754080	EqualityExpression	not1 != 0		753999	0		!=			
ANR	754081	Identifier	not1		753999	0					
ANR	754082	PrimaryExpression	0		753999	1					
ANR	754083	CompoundStatement		14:17:248:248	753999	1					
ANR	754084	ExpressionStatement	"bitset_invert_to ( bsr1 , bs1 )"	1996:4:42531:42558	753999	0	True				
ANR	754085	CallExpression	"bitset_invert_to ( bsr1 , bs1 )"		753999	0					
ANR	754086	Callee	bitset_invert_to		753999	0					
ANR	754087	Identifier	bitset_invert_to		753999	0					
ANR	754088	ArgumentList	bsr1		753999	1					
ANR	754089	Argument	bsr1		753999	0					
ANR	754090	Identifier	bsr1		753999	0					
ANR	754091	Argument	bs1		753999	1					
ANR	754092	Identifier	bs1		753999	0					
ANR	754093	ExpressionStatement	bsr1 = bs1	1997:4:42564:42574	753999	1	True				
ANR	754094	AssignmentExpression	bsr1 = bs1		753999	0		=			
ANR	754095	Identifier	bsr1		753999	0					
ANR	754096	Identifier	bs1		753999	1					
ANR	754097	IfStatement	if ( not2 != 0 )		753999	11					
ANR	754098	Condition	not2 != 0	1999:6:42586:42594	753999	0	True				
ANR	754099	EqualityExpression	not2 != 0		753999	0		!=			
ANR	754100	Identifier	not2		753999	0					
ANR	754101	PrimaryExpression	0		753999	1					
ANR	754102	CompoundStatement		18:17:320:320	753999	1					
ANR	754103	ExpressionStatement	"bitset_invert_to ( bsr2 , bs2 )"	2000:4:42603:42630	753999	0	True				
ANR	754104	CallExpression	"bitset_invert_to ( bsr2 , bs2 )"		753999	0					
ANR	754105	Callee	bitset_invert_to		753999	0					
ANR	754106	Identifier	bitset_invert_to		753999	0					
ANR	754107	ArgumentList	bsr2		753999	1					
ANR	754108	Argument	bsr2		753999	0					
ANR	754109	Identifier	bsr2		753999	0					
ANR	754110	Argument	bs2		753999	1					
ANR	754111	Identifier	bs2		753999	0					
ANR	754112	ExpressionStatement	bsr2 = bs2	2001:4:42636:42646	753999	1	True				
ANR	754113	AssignmentExpression	bsr2 = bs2		753999	0		=			
ANR	754114	Identifier	bsr2		753999	0					
ANR	754115	Identifier	bs2		753999	1					
ANR	754116	ExpressionStatement	"bitset_and ( bsr1 , bsr2 )"	2003:2:42654:42676	753999	12	True				
ANR	754117	CallExpression	"bitset_and ( bsr1 , bsr2 )"		753999	0					
ANR	754118	Callee	bitset_and		753999	0					
ANR	754119	Identifier	bitset_and		753999	0					
ANR	754120	ArgumentList	bsr1		753999	1					
ANR	754121	Argument	bsr1		753999	0					
ANR	754122	Identifier	bsr1		753999	0					
ANR	754123	Argument	bsr2		753999	1					
ANR	754124	Identifier	bsr2		753999	0					
ANR	754125	IfStatement	if ( bsr1 != dest -> bs )		753999	13					
ANR	754126	Condition	bsr1 != dest -> bs	2004:6:42684:42699	753999	0	True				
ANR	754127	EqualityExpression	bsr1 != dest -> bs		753999	0		!=			
ANR	754128	Identifier	bsr1		753999	0					
ANR	754129	PtrMemberAccess	dest -> bs		753999	1					
ANR	754130	Identifier	dest		753999	0					
ANR	754131	Identifier	bs		753999	1					
ANR	754132	CompoundStatement		23:24:425:425	753999	1					
ANR	754133	ExpressionStatement	"bitset_copy ( dest -> bs , bsr1 )"	2005:4:42708:42735	753999	0	True				
ANR	754134	CallExpression	"bitset_copy ( dest -> bs , bsr1 )"		753999	0					
ANR	754135	Callee	bitset_copy		753999	0					
ANR	754136	Identifier	bitset_copy		753999	0					
ANR	754137	ArgumentList	dest -> bs		753999	1					
ANR	754138	Argument	dest -> bs		753999	0					
ANR	754139	PtrMemberAccess	dest -> bs		753999	0					
ANR	754140	Identifier	dest		753999	0					
ANR	754141	Identifier	bs		753999	1					
ANR	754142	Argument	bsr1		753999	1					
ANR	754143	Identifier	bsr1		753999	0					
ANR	754144	ExpressionStatement	bsr1 = dest -> bs	2006:4:42741:42756	753999	1	True				
ANR	754145	AssignmentExpression	bsr1 = dest -> bs		753999	0		=			
ANR	754146	Identifier	bsr1		753999	0					
ANR	754147	PtrMemberAccess	dest -> bs		753999	1					
ANR	754148	Identifier	dest		753999	0					
ANR	754149	Identifier	bs		753999	1					
ANR	754150	IfStatement	if ( not1 != 0 )		753999	14					
ANR	754151	Condition	not1 != 0	2008:6:42768:42776	753999	0	True				
ANR	754152	EqualityExpression	not1 != 0		753999	0		!=			
ANR	754153	Identifier	not1		753999	0					
ANR	754154	PrimaryExpression	0		753999	1					
ANR	754155	CompoundStatement		27:17:502:502	753999	1					
ANR	754156	ExpressionStatement	bitset_invert ( dest -> bs )	2009:4:42785:42808	753999	0	True				
ANR	754157	CallExpression	bitset_invert ( dest -> bs )		753999	0					
ANR	754158	Callee	bitset_invert		753999	0					
ANR	754159	Identifier	bitset_invert		753999	0					
ANR	754160	ArgumentList	dest -> bs		753999	1					
ANR	754161	Argument	dest -> bs		753999	0					
ANR	754162	PtrMemberAccess	dest -> bs		753999	0					
ANR	754163	Identifier	dest		753999	0					
ANR	754164	Identifier	bs		753999	1					
ANR	754165	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		753999	15					
ANR	754166	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	2012:6:42821:42848	753999	0	True				
ANR	754167	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		753999	0					
ANR	754168	UnaryOperator	!		753999	0					
ANR	754169	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		753999	1					
ANR	754170	Callee	ONIGENC_IS_SINGLEBYTE		753999	0					
ANR	754171	Identifier	ONIGENC_IS_SINGLEBYTE		753999	0					
ANR	754172	ArgumentList	enc		753999	1					
ANR	754173	Argument	enc		753999	0					
ANR	754174	Identifier	enc		753999	0					
ANR	754175	CompoundStatement		31:36:574:574	753999	1					
ANR	754176	IfStatement	if ( not1 != 0 && not2 != 0 )		753999	0					
ANR	754177	Condition	not1 != 0 && not2 != 0	2013:8:42861:42882	753999	0	True				
ANR	754178	AndExpression	not1 != 0 && not2 != 0		753999	0		&&			
ANR	754179	EqualityExpression	not1 != 0		753999	0		!=			
ANR	754180	Identifier	not1		753999	0					
ANR	754181	PrimaryExpression	0		753999	1					
ANR	754182	EqualityExpression	not2 != 0		753999	1		!=			
ANR	754183	Identifier	not2		753999	0					
ANR	754184	PrimaryExpression	0		753999	1					
ANR	754185	CompoundStatement		32:32:608:608	753999	1					
ANR	754186	ExpressionStatement	"r = or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"	2014:6:42893:42944	753999	0	True				
ANR	754187	AssignmentExpression	"r = or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"		753999	0		=			
ANR	754188	Identifier	r		753999	0					
ANR	754189	CallExpression	"or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"		753999	1					
ANR	754190	Callee	or_code_range_buf		753999	0					
ANR	754191	Identifier	or_code_range_buf		753999	0					
ANR	754192	ArgumentList	enc		753999	1					
ANR	754193	Argument	enc		753999	0					
ANR	754194	Identifier	enc		753999	0					
ANR	754195	Argument	buf1		753999	1					
ANR	754196	Identifier	buf1		753999	0					
ANR	754197	Argument	0		753999	2					
ANR	754198	PrimaryExpression	0		753999	0					
ANR	754199	Argument	buf2		753999	3					
ANR	754200	Identifier	buf2		753999	0					
ANR	754201	Argument	0		753999	4					
ANR	754202	PrimaryExpression	0		753999	0					
ANR	754203	Argument	& pbuf		753999	5					
ANR	754204	UnaryOperationExpression	& pbuf		753999	0					
ANR	754205	UnaryOperator	&		753999	0					
ANR	754206	Identifier	pbuf		753999	1					
ANR	754207	ElseStatement	else		753999	0					
ANR	754208	CompoundStatement		35:9:684:684	753999	0					
ANR	754209	ExpressionStatement	"r = and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"	2017:6:42969:43022	753999	0	True				
ANR	754210	AssignmentExpression	"r = and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"		753999	0		=			
ANR	754211	Identifier	r		753999	0					
ANR	754212	CallExpression	"and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"		753999	1					
ANR	754213	Callee	and_code_range_buf		753999	0					
ANR	754214	Identifier	and_code_range_buf		753999	0					
ANR	754215	ArgumentList	buf1		753999	1					
ANR	754216	Argument	buf1		753999	0					
ANR	754217	Identifier	buf1		753999	0					
ANR	754218	Argument	not1		753999	1					
ANR	754219	Identifier	not1		753999	0					
ANR	754220	Argument	buf2		753999	2					
ANR	754221	Identifier	buf2		753999	0					
ANR	754222	Argument	not2		753999	3					
ANR	754223	Identifier	not2		753999	0					
ANR	754224	Argument	& pbuf		753999	4					
ANR	754225	UnaryOperationExpression	& pbuf		753999	0					
ANR	754226	UnaryOperator	&		753999	0					
ANR	754227	Identifier	pbuf		753999	1					
ANR	754228	IfStatement	if ( r == 0 && not1 != 0 )		753999	1					
ANR	754229	Condition	r == 0 && not1 != 0	2018:10:43034:43052	753999	0	True				
ANR	754230	AndExpression	r == 0 && not1 != 0		753999	0		&&			
ANR	754231	EqualityExpression	r == 0		753999	0		==			
ANR	754232	Identifier	r		753999	0					
ANR	754233	PrimaryExpression	0		753999	1					
ANR	754234	EqualityExpression	not1 != 0		753999	1		!=			
ANR	754235	Identifier	not1		753999	0					
ANR	754236	PrimaryExpression	0		753999	1					
ANR	754237	CompoundStatement		38:1:781:791	753999	1					
ANR	754238	IdentifierDeclStatement	BBuf * tbuf ;	2019:1:43058:43068	753999	0	True				
ANR	754239	IdentifierDecl	* tbuf		753999	0					
ANR	754240	IdentifierDeclType	BBuf *		753999	0					
ANR	754241	Identifier	tbuf		753999	1					
ANR	754242	ExpressionStatement	"r = not_code_range_buf ( enc , pbuf , & tbuf )"	2020:1:43071:43111	753999	1	True				
ANR	754243	AssignmentExpression	"r = not_code_range_buf ( enc , pbuf , & tbuf )"		753999	0		=			
ANR	754244	Identifier	r		753999	0					
ANR	754245	CallExpression	"not_code_range_buf ( enc , pbuf , & tbuf )"		753999	1					
ANR	754246	Callee	not_code_range_buf		753999	0					
ANR	754247	Identifier	not_code_range_buf		753999	0					
ANR	754248	ArgumentList	enc		753999	1					
ANR	754249	Argument	enc		753999	0					
ANR	754250	Identifier	enc		753999	0					
ANR	754251	Argument	pbuf		753999	1					
ANR	754252	Identifier	pbuf		753999	0					
ANR	754253	Argument	& tbuf		753999	2					
ANR	754254	UnaryOperationExpression	& tbuf		753999	0					
ANR	754255	UnaryOperator	&		753999	0					
ANR	754256	Identifier	tbuf		753999	1					
ANR	754257	IfStatement	if ( r != 0 )		753999	2					
ANR	754258	Condition	r != 0	2021:5:43118:43123	753999	0	True				
ANR	754259	EqualityExpression	r != 0		753999	0		!=			
ANR	754260	Identifier	r		753999	0					
ANR	754261	PrimaryExpression	0		753999	1					
ANR	754262	CompoundStatement		40:13:849:849	753999	1					
ANR	754263	ExpressionStatement	bbuf_free ( pbuf )	2022:3:43131:43146	753999	0	True				
ANR	754264	CallExpression	bbuf_free ( pbuf )		753999	0					
ANR	754265	Callee	bbuf_free		753999	0					
ANR	754266	Identifier	bbuf_free		753999	0					
ANR	754267	ArgumentList	pbuf		753999	1					
ANR	754268	Argument	pbuf		753999	0					
ANR	754269	Identifier	pbuf		753999	0					
ANR	754270	ReturnStatement	return r ;	2023:3:43151:43159	753999	1	True				
ANR	754271	Identifier	r		753999	0					
ANR	754272	ExpressionStatement	bbuf_free ( pbuf )	2025:1:43165:43180	753999	3	True				
ANR	754273	CallExpression	bbuf_free ( pbuf )		753999	0					
ANR	754274	Callee	bbuf_free		753999	0					
ANR	754275	Identifier	bbuf_free		753999	0					
ANR	754276	ArgumentList	pbuf		753999	1					
ANR	754277	Argument	pbuf		753999	0					
ANR	754278	Identifier	pbuf		753999	0					
ANR	754279	ExpressionStatement	pbuf = tbuf	2026:1:43183:43194	753999	4	True				
ANR	754280	AssignmentExpression	pbuf = tbuf		753999	0		=			
ANR	754281	Identifier	pbuf		753999	0					
ANR	754282	Identifier	tbuf		753999	1					
ANR	754283	IfStatement	if ( r != 0 )		753999	1					
ANR	754284	Condition	r != 0	2029:8:43218:43223	753999	0	True				
ANR	754285	EqualityExpression	r != 0		753999	0		!=			
ANR	754286	Identifier	r		753999	0					
ANR	754287	PrimaryExpression	0		753999	1					
ANR	754288	ReturnStatement	return r ;	2029:16:43226:43234	753999	1	True				
ANR	754289	Identifier	r		753999	0					
ANR	754290	ExpressionStatement	dest -> mbuf = pbuf	2031:4:43241:43258	753999	2	True				
ANR	754291	AssignmentExpression	dest -> mbuf = pbuf		753999	0		=			
ANR	754292	PtrMemberAccess	dest -> mbuf		753999	0					
ANR	754293	Identifier	dest		753999	0					
ANR	754294	Identifier	mbuf		753999	1					
ANR	754295	Identifier	pbuf		753999	1					
ANR	754296	ExpressionStatement	bbuf_free ( buf1 )	2032:4:43264:43279	753999	3	True				
ANR	754297	CallExpression	bbuf_free ( buf1 )		753999	0					
ANR	754298	Callee	bbuf_free		753999	0					
ANR	754299	Identifier	bbuf_free		753999	0					
ANR	754300	ArgumentList	buf1		753999	1					
ANR	754301	Argument	buf1		753999	0					
ANR	754302	Identifier	buf1		753999	0					
ANR	754303	ReturnStatement	return r ;	2033:4:43285:43293	753999	4	True				
ANR	754304	Identifier	r		753999	0					
ANR	754305	ReturnStatement	return 0 ;	2035:2:43301:43309	753999	16	True				
ANR	754306	PrimaryExpression	0		753999	0					
ANR	754307	ReturnType	static int		753999	1					
ANR	754308	Identifier	and_cclass		753999	2					
ANR	754309	ParameterList	"CClassNode * dest , CClassNode * cc , OnigEncoding enc"		753999	3					
ANR	754310	Parameter	CClassNode * dest	1981:11:42224:42239	753999	0	True				
ANR	754311	ParameterType	CClassNode *		753999	0					
ANR	754312	Identifier	dest		753999	1					
ANR	754313	Parameter	CClassNode * cc	1981:29:42242:42255	753999	1	True				
ANR	754314	ParameterType	CClassNode *		753999	0					
ANR	754315	Identifier	cc		753999	1					
ANR	754316	Parameter	OnigEncoding enc	1981:45:42258:42273	753999	2	True				
ANR	754317	ParameterType	OnigEncoding		753999	0					
ANR	754318	Identifier	enc		753999	1					
ANR	754319	CFGEntryNode	ENTRY		753999		True				
ANR	754320	CFGExitNode	EXIT		753999		True				
ANR	754321	Symbol	bs2		753999						
ANR	754322	Symbol	bs1		753999						
ANR	754323	Symbol	not_code_range_buf		753999						
ANR	754324	Symbol	* dest		753999						
ANR	754325	Symbol	* cc		753999						
ANR	754326	Symbol	IS_NCCLASS_NOT		753999						
ANR	754327	Symbol	dest -> mbuf		753999						
ANR	754328	Symbol	tbuf		753999						
ANR	754329	Symbol	cc -> mbuf		753999						
ANR	754330	Symbol	dest		753999						
ANR	754331	Symbol	not2		753999						
ANR	754332	Symbol	not1		753999						
ANR	754333	Symbol	or_code_range_buf		753999						
ANR	754334	Symbol	enc		753999						
ANR	754335	Symbol	ONIGENC_IS_SINGLEBYTE		753999						
ANR	754336	Symbol	and_code_range_buf		753999						
ANR	754337	Symbol	cc		753999						
ANR	754338	Symbol	& tbuf		753999						
ANR	754339	Symbol	cc -> bs		753999						
ANR	754340	Symbol	buf1		753999						
ANR	754341	Symbol	buf2		753999						
ANR	754342	Symbol	r		753999						
ANR	754343	Symbol	& pbuf		753999						
ANR	754344	Symbol	pbuf		753999						
ANR	754345	Symbol	dest -> bs		753999						
ANR	754346	Symbol	bsr1		753999						
ANR	754347	Symbol	bsr2		753999						
ANR	754348	Function	or_cclass	2038:0:43314:44430							
ANR	754349	FunctionDef	"or_cclass (CClassNode * dest , CClassNode * cc , OnigEncoding enc)"		754348	0					
ANR	754350	CompoundStatement		2040:0:43387:44430	754348	0					
ANR	754351	IdentifierDeclStatement	"int r , not1 , not2 ;"	2041:2:43391:43408	754348	0	True				
ANR	754352	IdentifierDecl	r		754348	0					
ANR	754353	IdentifierDeclType	int		754348	0					
ANR	754354	Identifier	r		754348	1					
ANR	754355	IdentifierDecl	not1		754348	1					
ANR	754356	IdentifierDeclType	int		754348	0					
ANR	754357	Identifier	not1		754348	1					
ANR	754358	IdentifierDecl	not2		754348	2					
ANR	754359	IdentifierDeclType	int		754348	0					
ANR	754360	Identifier	not2		754348	1					
ANR	754361	IdentifierDeclStatement	"BBuf * buf1 , * buf2 , * pbuf ;"	2042:2:43412:43436	754348	1	True				
ANR	754362	IdentifierDecl	* buf1		754348	0					
ANR	754363	IdentifierDeclType	BBuf *		754348	0					
ANR	754364	Identifier	buf1		754348	1					
ANR	754365	IdentifierDecl	* buf2		754348	1					
ANR	754366	IdentifierDeclType	BBuf *		754348	0					
ANR	754367	Identifier	buf2		754348	1					
ANR	754368	IdentifierDecl	* pbuf		754348	2					
ANR	754369	IdentifierDeclType	BBuf *		754348	0					
ANR	754370	Identifier	pbuf		754348	1					
ANR	754371	IdentifierDeclStatement	"BitSetRef bsr1 , bsr2 ;"	2043:2:43440:43460	754348	2	True				
ANR	754372	IdentifierDecl	bsr1		754348	0					
ANR	754373	IdentifierDeclType	BitSetRef		754348	0					
ANR	754374	Identifier	bsr1		754348	1					
ANR	754375	IdentifierDecl	bsr2		754348	1					
ANR	754376	IdentifierDeclType	BitSetRef		754348	0					
ANR	754377	Identifier	bsr2		754348	1					
ANR	754378	IdentifierDeclStatement	"BitSet bs1 , bs2 ;"	2044:2:43464:43479	754348	3	True				
ANR	754379	IdentifierDecl	bs1		754348	0					
ANR	754380	IdentifierDeclType	BitSet		754348	0					
ANR	754381	Identifier	bs1		754348	1					
ANR	754382	IdentifierDecl	bs2		754348	1					
ANR	754383	IdentifierDeclType	BitSet		754348	0					
ANR	754384	Identifier	bs2		754348	1					
ANR	754385	ExpressionStatement	not1 = IS_NCCLASS_NOT ( dest )	2046:2:43484:43511	754348	4	True				
ANR	754386	AssignmentExpression	not1 = IS_NCCLASS_NOT ( dest )		754348	0		=			
ANR	754387	Identifier	not1		754348	0					
ANR	754388	CallExpression	IS_NCCLASS_NOT ( dest )		754348	1					
ANR	754389	Callee	IS_NCCLASS_NOT		754348	0					
ANR	754390	Identifier	IS_NCCLASS_NOT		754348	0					
ANR	754391	ArgumentList	dest		754348	1					
ANR	754392	Argument	dest		754348	0					
ANR	754393	Identifier	dest		754348	0					
ANR	754394	ExpressionStatement	bsr1 = dest -> bs	2047:2:43515:43530	754348	5	True				
ANR	754395	AssignmentExpression	bsr1 = dest -> bs		754348	0		=			
ANR	754396	Identifier	bsr1		754348	0					
ANR	754397	PtrMemberAccess	dest -> bs		754348	1					
ANR	754398	Identifier	dest		754348	0					
ANR	754399	Identifier	bs		754348	1					
ANR	754400	ExpressionStatement	buf1 = dest -> mbuf	2048:2:43534:43551	754348	6	True				
ANR	754401	AssignmentExpression	buf1 = dest -> mbuf		754348	0		=			
ANR	754402	Identifier	buf1		754348	0					
ANR	754403	PtrMemberAccess	dest -> mbuf		754348	1					
ANR	754404	Identifier	dest		754348	0					
ANR	754405	Identifier	mbuf		754348	1					
ANR	754406	ExpressionStatement	not2 = IS_NCCLASS_NOT ( cc )	2049:2:43555:43580	754348	7	True				
ANR	754407	AssignmentExpression	not2 = IS_NCCLASS_NOT ( cc )		754348	0		=			
ANR	754408	Identifier	not2		754348	0					
ANR	754409	CallExpression	IS_NCCLASS_NOT ( cc )		754348	1					
ANR	754410	Callee	IS_NCCLASS_NOT		754348	0					
ANR	754411	Identifier	IS_NCCLASS_NOT		754348	0					
ANR	754412	ArgumentList	cc		754348	1					
ANR	754413	Argument	cc		754348	0					
ANR	754414	Identifier	cc		754348	0					
ANR	754415	ExpressionStatement	bsr2 = cc -> bs	2050:2:43584:43597	754348	8	True				
ANR	754416	AssignmentExpression	bsr2 = cc -> bs		754348	0		=			
ANR	754417	Identifier	bsr2		754348	0					
ANR	754418	PtrMemberAccess	cc -> bs		754348	1					
ANR	754419	Identifier	cc		754348	0					
ANR	754420	Identifier	bs		754348	1					
ANR	754421	ExpressionStatement	buf2 = cc -> mbuf	2051:2:43601:43616	754348	9	True				
ANR	754422	AssignmentExpression	buf2 = cc -> mbuf		754348	0		=			
ANR	754423	Identifier	buf2		754348	0					
ANR	754424	PtrMemberAccess	cc -> mbuf		754348	1					
ANR	754425	Identifier	cc		754348	0					
ANR	754426	Identifier	mbuf		754348	1					
ANR	754427	IfStatement	if ( not1 != 0 )		754348	10					
ANR	754428	Condition	not1 != 0	2053:6:43625:43633	754348	0	True				
ANR	754429	EqualityExpression	not1 != 0		754348	0		!=			
ANR	754430	Identifier	not1		754348	0					
ANR	754431	PrimaryExpression	0		754348	1					
ANR	754432	CompoundStatement		14:17:248:248	754348	1					
ANR	754433	ExpressionStatement	"bitset_invert_to ( bsr1 , bs1 )"	2054:4:43642:43669	754348	0	True				
ANR	754434	CallExpression	"bitset_invert_to ( bsr1 , bs1 )"		754348	0					
ANR	754435	Callee	bitset_invert_to		754348	0					
ANR	754436	Identifier	bitset_invert_to		754348	0					
ANR	754437	ArgumentList	bsr1		754348	1					
ANR	754438	Argument	bsr1		754348	0					
ANR	754439	Identifier	bsr1		754348	0					
ANR	754440	Argument	bs1		754348	1					
ANR	754441	Identifier	bs1		754348	0					
ANR	754442	ExpressionStatement	bsr1 = bs1	2055:4:43675:43685	754348	1	True				
ANR	754443	AssignmentExpression	bsr1 = bs1		754348	0		=			
ANR	754444	Identifier	bsr1		754348	0					
ANR	754445	Identifier	bs1		754348	1					
ANR	754446	IfStatement	if ( not2 != 0 )		754348	11					
ANR	754447	Condition	not2 != 0	2057:6:43697:43705	754348	0	True				
ANR	754448	EqualityExpression	not2 != 0		754348	0		!=			
ANR	754449	Identifier	not2		754348	0					
ANR	754450	PrimaryExpression	0		754348	1					
ANR	754451	CompoundStatement		18:17:320:320	754348	1					
ANR	754452	ExpressionStatement	"bitset_invert_to ( bsr2 , bs2 )"	2058:4:43714:43741	754348	0	True				
ANR	754453	CallExpression	"bitset_invert_to ( bsr2 , bs2 )"		754348	0					
ANR	754454	Callee	bitset_invert_to		754348	0					
ANR	754455	Identifier	bitset_invert_to		754348	0					
ANR	754456	ArgumentList	bsr2		754348	1					
ANR	754457	Argument	bsr2		754348	0					
ANR	754458	Identifier	bsr2		754348	0					
ANR	754459	Argument	bs2		754348	1					
ANR	754460	Identifier	bs2		754348	0					
ANR	754461	ExpressionStatement	bsr2 = bs2	2059:4:43747:43757	754348	1	True				
ANR	754462	AssignmentExpression	bsr2 = bs2		754348	0		=			
ANR	754463	Identifier	bsr2		754348	0					
ANR	754464	Identifier	bs2		754348	1					
ANR	754465	ExpressionStatement	"bitset_or ( bsr1 , bsr2 )"	2061:2:43765:43786	754348	12	True				
ANR	754466	CallExpression	"bitset_or ( bsr1 , bsr2 )"		754348	0					
ANR	754467	Callee	bitset_or		754348	0					
ANR	754468	Identifier	bitset_or		754348	0					
ANR	754469	ArgumentList	bsr1		754348	1					
ANR	754470	Argument	bsr1		754348	0					
ANR	754471	Identifier	bsr1		754348	0					
ANR	754472	Argument	bsr2		754348	1					
ANR	754473	Identifier	bsr2		754348	0					
ANR	754474	IfStatement	if ( bsr1 != dest -> bs )		754348	13					
ANR	754475	Condition	bsr1 != dest -> bs	2062:6:43794:43809	754348	0	True				
ANR	754476	EqualityExpression	bsr1 != dest -> bs		754348	0		!=			
ANR	754477	Identifier	bsr1		754348	0					
ANR	754478	PtrMemberAccess	dest -> bs		754348	1					
ANR	754479	Identifier	dest		754348	0					
ANR	754480	Identifier	bs		754348	1					
ANR	754481	CompoundStatement		23:24:424:424	754348	1					
ANR	754482	ExpressionStatement	"bitset_copy ( dest -> bs , bsr1 )"	2063:4:43818:43845	754348	0	True				
ANR	754483	CallExpression	"bitset_copy ( dest -> bs , bsr1 )"		754348	0					
ANR	754484	Callee	bitset_copy		754348	0					
ANR	754485	Identifier	bitset_copy		754348	0					
ANR	754486	ArgumentList	dest -> bs		754348	1					
ANR	754487	Argument	dest -> bs		754348	0					
ANR	754488	PtrMemberAccess	dest -> bs		754348	0					
ANR	754489	Identifier	dest		754348	0					
ANR	754490	Identifier	bs		754348	1					
ANR	754491	Argument	bsr1		754348	1					
ANR	754492	Identifier	bsr1		754348	0					
ANR	754493	ExpressionStatement	bsr1 = dest -> bs	2064:4:43851:43866	754348	1	True				
ANR	754494	AssignmentExpression	bsr1 = dest -> bs		754348	0		=			
ANR	754495	Identifier	bsr1		754348	0					
ANR	754496	PtrMemberAccess	dest -> bs		754348	1					
ANR	754497	Identifier	dest		754348	0					
ANR	754498	Identifier	bs		754348	1					
ANR	754499	IfStatement	if ( not1 != 0 )		754348	14					
ANR	754500	Condition	not1 != 0	2066:6:43878:43886	754348	0	True				
ANR	754501	EqualityExpression	not1 != 0		754348	0		!=			
ANR	754502	Identifier	not1		754348	0					
ANR	754503	PrimaryExpression	0		754348	1					
ANR	754504	CompoundStatement		27:17:501:501	754348	1					
ANR	754505	ExpressionStatement	bitset_invert ( dest -> bs )	2067:4:43895:43918	754348	0	True				
ANR	754506	CallExpression	bitset_invert ( dest -> bs )		754348	0					
ANR	754507	Callee	bitset_invert		754348	0					
ANR	754508	Identifier	bitset_invert		754348	0					
ANR	754509	ArgumentList	dest -> bs		754348	1					
ANR	754510	Argument	dest -> bs		754348	0					
ANR	754511	PtrMemberAccess	dest -> bs		754348	0					
ANR	754512	Identifier	dest		754348	0					
ANR	754513	Identifier	bs		754348	1					
ANR	754514	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		754348	15					
ANR	754515	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	2070:6:43931:43958	754348	0	True				
ANR	754516	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		754348	0					
ANR	754517	UnaryOperator	!		754348	0					
ANR	754518	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		754348	1					
ANR	754519	Callee	ONIGENC_IS_SINGLEBYTE		754348	0					
ANR	754520	Identifier	ONIGENC_IS_SINGLEBYTE		754348	0					
ANR	754521	ArgumentList	enc		754348	1					
ANR	754522	Argument	enc		754348	0					
ANR	754523	Identifier	enc		754348	0					
ANR	754524	CompoundStatement		31:36:573:573	754348	1					
ANR	754525	IfStatement	if ( not1 != 0 && not2 != 0 )		754348	0					
ANR	754526	Condition	not1 != 0 && not2 != 0	2071:8:43971:43992	754348	0	True				
ANR	754527	AndExpression	not1 != 0 && not2 != 0		754348	0		&&			
ANR	754528	EqualityExpression	not1 != 0		754348	0		!=			
ANR	754529	Identifier	not1		754348	0					
ANR	754530	PrimaryExpression	0		754348	1					
ANR	754531	EqualityExpression	not2 != 0		754348	1		!=			
ANR	754532	Identifier	not2		754348	0					
ANR	754533	PrimaryExpression	0		754348	1					
ANR	754534	CompoundStatement		32:32:607:607	754348	1					
ANR	754535	ExpressionStatement	"r = and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"	2072:6:44003:44050	754348	0	True				
ANR	754536	AssignmentExpression	"r = and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"		754348	0		=			
ANR	754537	Identifier	r		754348	0					
ANR	754538	CallExpression	"and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"		754348	1					
ANR	754539	Callee	and_code_range_buf		754348	0					
ANR	754540	Identifier	and_code_range_buf		754348	0					
ANR	754541	ArgumentList	buf1		754348	1					
ANR	754542	Argument	buf1		754348	0					
ANR	754543	Identifier	buf1		754348	0					
ANR	754544	Argument	0		754348	1					
ANR	754545	PrimaryExpression	0		754348	0					
ANR	754546	Argument	buf2		754348	2					
ANR	754547	Identifier	buf2		754348	0					
ANR	754548	Argument	0		754348	3					
ANR	754549	PrimaryExpression	0		754348	0					
ANR	754550	Argument	& pbuf		754348	4					
ANR	754551	UnaryOperationExpression	& pbuf		754348	0					
ANR	754552	UnaryOperator	&		754348	0					
ANR	754553	Identifier	pbuf		754348	1					
ANR	754554	ElseStatement	else		754348	0					
ANR	754555	CompoundStatement		35:9:679:679	754348	0					
ANR	754556	ExpressionStatement	"r = or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"	2075:6:44075:44132	754348	0	True				
ANR	754557	AssignmentExpression	"r = or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"		754348	0		=			
ANR	754558	Identifier	r		754348	0					
ANR	754559	CallExpression	"or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"		754348	1					
ANR	754560	Callee	or_code_range_buf		754348	0					
ANR	754561	Identifier	or_code_range_buf		754348	0					
ANR	754562	ArgumentList	enc		754348	1					
ANR	754563	Argument	enc		754348	0					
ANR	754564	Identifier	enc		754348	0					
ANR	754565	Argument	buf1		754348	1					
ANR	754566	Identifier	buf1		754348	0					
ANR	754567	Argument	not1		754348	2					
ANR	754568	Identifier	not1		754348	0					
ANR	754569	Argument	buf2		754348	3					
ANR	754570	Identifier	buf2		754348	0					
ANR	754571	Argument	not2		754348	4					
ANR	754572	Identifier	not2		754348	0					
ANR	754573	Argument	& pbuf		754348	5					
ANR	754574	UnaryOperationExpression	& pbuf		754348	0					
ANR	754575	UnaryOperator	&		754348	0					
ANR	754576	Identifier	pbuf		754348	1					
ANR	754577	IfStatement	if ( r == 0 && not1 != 0 )		754348	1					
ANR	754578	Condition	r == 0 && not1 != 0	2076:10:44144:44162	754348	0	True				
ANR	754579	AndExpression	r == 0 && not1 != 0		754348	0		&&			
ANR	754580	EqualityExpression	r == 0		754348	0		==			
ANR	754581	Identifier	r		754348	0					
ANR	754582	PrimaryExpression	0		754348	1					
ANR	754583	EqualityExpression	not1 != 0		754348	1		!=			
ANR	754584	Identifier	not1		754348	0					
ANR	754585	PrimaryExpression	0		754348	1					
ANR	754586	CompoundStatement		38:1:780:790	754348	1					
ANR	754587	IdentifierDeclStatement	BBuf * tbuf ;	2077:1:44168:44178	754348	0	True				
ANR	754588	IdentifierDecl	* tbuf		754348	0					
ANR	754589	IdentifierDeclType	BBuf *		754348	0					
ANR	754590	Identifier	tbuf		754348	1					
ANR	754591	ExpressionStatement	"r = not_code_range_buf ( enc , pbuf , & tbuf )"	2078:1:44181:44221	754348	1	True				
ANR	754592	AssignmentExpression	"r = not_code_range_buf ( enc , pbuf , & tbuf )"		754348	0		=			
ANR	754593	Identifier	r		754348	0					
ANR	754594	CallExpression	"not_code_range_buf ( enc , pbuf , & tbuf )"		754348	1					
ANR	754595	Callee	not_code_range_buf		754348	0					
ANR	754596	Identifier	not_code_range_buf		754348	0					
ANR	754597	ArgumentList	enc		754348	1					
ANR	754598	Argument	enc		754348	0					
ANR	754599	Identifier	enc		754348	0					
ANR	754600	Argument	pbuf		754348	1					
ANR	754601	Identifier	pbuf		754348	0					
ANR	754602	Argument	& tbuf		754348	2					
ANR	754603	UnaryOperationExpression	& tbuf		754348	0					
ANR	754604	UnaryOperator	&		754348	0					
ANR	754605	Identifier	tbuf		754348	1					
ANR	754606	IfStatement	if ( r != 0 )		754348	2					
ANR	754607	Condition	r != 0	2079:5:44228:44233	754348	0	True				
ANR	754608	EqualityExpression	r != 0		754348	0		!=			
ANR	754609	Identifier	r		754348	0					
ANR	754610	PrimaryExpression	0		754348	1					
ANR	754611	CompoundStatement		40:13:848:848	754348	1					
ANR	754612	ExpressionStatement	bbuf_free ( pbuf )	2080:3:44241:44256	754348	0	True				
ANR	754613	CallExpression	bbuf_free ( pbuf )		754348	0					
ANR	754614	Callee	bbuf_free		754348	0					
ANR	754615	Identifier	bbuf_free		754348	0					
ANR	754616	ArgumentList	pbuf		754348	1					
ANR	754617	Argument	pbuf		754348	0					
ANR	754618	Identifier	pbuf		754348	0					
ANR	754619	ReturnStatement	return r ;	2081:3:44261:44269	754348	1	True				
ANR	754620	Identifier	r		754348	0					
ANR	754621	ExpressionStatement	bbuf_free ( pbuf )	2083:1:44275:44290	754348	3	True				
ANR	754622	CallExpression	bbuf_free ( pbuf )		754348	0					
ANR	754623	Callee	bbuf_free		754348	0					
ANR	754624	Identifier	bbuf_free		754348	0					
ANR	754625	ArgumentList	pbuf		754348	1					
ANR	754626	Argument	pbuf		754348	0					
ANR	754627	Identifier	pbuf		754348	0					
ANR	754628	ExpressionStatement	pbuf = tbuf	2084:1:44293:44304	754348	4	True				
ANR	754629	AssignmentExpression	pbuf = tbuf		754348	0		=			
ANR	754630	Identifier	pbuf		754348	0					
ANR	754631	Identifier	tbuf		754348	1					
ANR	754632	IfStatement	if ( r != 0 )		754348	1					
ANR	754633	Condition	r != 0	2087:8:44328:44333	754348	0	True				
ANR	754634	EqualityExpression	r != 0		754348	0		!=			
ANR	754635	Identifier	r		754348	0					
ANR	754636	PrimaryExpression	0		754348	1					
ANR	754637	ReturnStatement	return r ;	2087:16:44336:44344	754348	1	True				
ANR	754638	Identifier	r		754348	0					
ANR	754639	ExpressionStatement	dest -> mbuf = pbuf	2089:4:44351:44368	754348	2	True				
ANR	754640	AssignmentExpression	dest -> mbuf = pbuf		754348	0		=			
ANR	754641	PtrMemberAccess	dest -> mbuf		754348	0					
ANR	754642	Identifier	dest		754348	0					
ANR	754643	Identifier	mbuf		754348	1					
ANR	754644	Identifier	pbuf		754348	1					
ANR	754645	ExpressionStatement	bbuf_free ( buf1 )	2090:4:44374:44389	754348	3	True				
ANR	754646	CallExpression	bbuf_free ( buf1 )		754348	0					
ANR	754647	Callee	bbuf_free		754348	0					
ANR	754648	Identifier	bbuf_free		754348	0					
ANR	754649	ArgumentList	buf1		754348	1					
ANR	754650	Argument	buf1		754348	0					
ANR	754651	Identifier	buf1		754348	0					
ANR	754652	ReturnStatement	return r ;	2091:4:44395:44403	754348	4	True				
ANR	754653	Identifier	r		754348	0					
ANR	754654	ElseStatement	else		754348	0					
ANR	754655	ReturnStatement	return 0 ;	2094:4:44420:44428	754348	0	True				
ANR	754656	PrimaryExpression	0		754348	0					
ANR	754657	ReturnType	static int		754348	1					
ANR	754658	Identifier	or_cclass		754348	2					
ANR	754659	ParameterList	"CClassNode * dest , CClassNode * cc , OnigEncoding enc"		754348	3					
ANR	754660	Parameter	CClassNode * dest	2039:10:43335:43350	754348	0	True				
ANR	754661	ParameterType	CClassNode *		754348	0					
ANR	754662	Identifier	dest		754348	1					
ANR	754663	Parameter	CClassNode * cc	2039:28:43353:43366	754348	1	True				
ANR	754664	ParameterType	CClassNode *		754348	0					
ANR	754665	Identifier	cc		754348	1					
ANR	754666	Parameter	OnigEncoding enc	2039:44:43369:43384	754348	2	True				
ANR	754667	ParameterType	OnigEncoding		754348	0					
ANR	754668	Identifier	enc		754348	1					
ANR	754669	CFGEntryNode	ENTRY		754348		True				
ANR	754670	CFGExitNode	EXIT		754348		True				
ANR	754671	Symbol	bs2		754348						
ANR	754672	Symbol	bs1		754348						
ANR	754673	Symbol	not_code_range_buf		754348						
ANR	754674	Symbol	* dest		754348						
ANR	754675	Symbol	* cc		754348						
ANR	754676	Symbol	IS_NCCLASS_NOT		754348						
ANR	754677	Symbol	dest -> mbuf		754348						
ANR	754678	Symbol	tbuf		754348						
ANR	754679	Symbol	cc -> mbuf		754348						
ANR	754680	Symbol	dest		754348						
ANR	754681	Symbol	not2		754348						
ANR	754682	Symbol	not1		754348						
ANR	754683	Symbol	or_code_range_buf		754348						
ANR	754684	Symbol	enc		754348						
ANR	754685	Symbol	ONIGENC_IS_SINGLEBYTE		754348						
ANR	754686	Symbol	and_code_range_buf		754348						
ANR	754687	Symbol	cc		754348						
ANR	754688	Symbol	& tbuf		754348						
ANR	754689	Symbol	cc -> bs		754348						
ANR	754690	Symbol	buf1		754348						
ANR	754691	Symbol	buf2		754348						
ANR	754692	Symbol	r		754348						
ANR	754693	Symbol	& pbuf		754348						
ANR	754694	Symbol	pbuf		754348						
ANR	754695	Symbol	dest -> bs		754348						
ANR	754696	Symbol	bsr1		754348						
ANR	754697	Symbol	bsr2		754348						
ANR	754698	Function	conv_backslash_value	2097:0:44433:44919							
ANR	754699	FunctionDef	"conv_backslash_value (int c , ScanEnv * env)"		754698	0					
ANR	754700	CompoundStatement		2099:0:44486:44919	754698	0					
ANR	754701	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS ) )"		754698	0					
ANR	754702	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS )"	2100:6:44494:44549	754698	0	True				
ANR	754703	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS )"		754698	0					
ANR	754704	Callee	IS_SYNTAX_OP		754698	0					
ANR	754705	Identifier	IS_SYNTAX_OP		754698	0					
ANR	754706	ArgumentList	env -> syntax		754698	1					
ANR	754707	Argument	env -> syntax		754698	0					
ANR	754708	PtrMemberAccess	env -> syntax		754698	0					
ANR	754709	Identifier	env		754698	0					
ANR	754710	Identifier	syntax		754698	1					
ANR	754711	Argument	ONIG_SYN_OP_ESC_CONTROL_CHARS		754698	1					
ANR	754712	Identifier	ONIG_SYN_OP_ESC_CONTROL_CHARS		754698	0					
ANR	754713	CompoundStatement		2:64:65:65	754698	1					
ANR	754714	SwitchStatement	switch ( c )		754698	0					
ANR	754715	Condition	c	2101:12:44566:44566	754698	0	True				
ANR	754716	Identifier	c		754698	0					
ANR	754717	CompoundStatement		3:15:82:82	754698	1					
ANR	754718	Label	case 'n' :	2102:4:44575:44583	754698	0	True				
ANR	754719	ReturnStatement	return '\\n' ;	2102:14:44585:44596	754698	1	True				
ANR	754720	PrimaryExpression	'\\n'		754698	0					
ANR	754721	Label	case 't' :	2103:4:44602:44610	754698	2	True				
ANR	754722	ReturnStatement	return '\\t' ;	2103:14:44612:44623	754698	3	True				
ANR	754723	PrimaryExpression	'\\t'		754698	0					
ANR	754724	Label	case 'r' :	2104:4:44629:44637	754698	4	True				
ANR	754725	ReturnStatement	return '\\r' ;	2104:14:44639:44650	754698	5	True				
ANR	754726	PrimaryExpression	'\\r'		754698	0					
ANR	754727	Label	case 'f' :	2105:4:44656:44664	754698	6	True				
ANR	754728	ReturnStatement	return '\\f' ;	2105:14:44666:44677	754698	7	True				
ANR	754729	PrimaryExpression	'\\f'		754698	0					
ANR	754730	Label	case 'a' :	2106:4:44683:44691	754698	8	True				
ANR	754731	ReturnStatement	return '\\007' ;	2106:14:44693:44706	754698	9	True				
ANR	754732	PrimaryExpression	'\\007'		754698	0					
ANR	754733	Label	case 'b' :	2107:4:44712:44720	754698	10	True				
ANR	754734	ReturnStatement	return '\\010' ;	2107:14:44722:44735	754698	11	True				
ANR	754735	PrimaryExpression	'\\010'		754698	0					
ANR	754736	Label	case 'e' :	2108:4:44741:44749	754698	12	True				
ANR	754737	ReturnStatement	return '\\033' ;	2108:14:44751:44764	754698	13	True				
ANR	754738	PrimaryExpression	'\\033'		754698	0					
ANR	754739	Label	case 'v' :	2109:4:44770:44778	754698	14	True				
ANR	754740	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB ) )"		754698	15					
ANR	754741	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB )"	2110:10:44790:44840	754698	0	True				
ANR	754742	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB )"		754698	0					
ANR	754743	Callee	IS_SYNTAX_OP2		754698	0					
ANR	754744	Identifier	IS_SYNTAX_OP2		754698	0					
ANR	754745	ArgumentList	env -> syntax		754698	1					
ANR	754746	Argument	env -> syntax		754698	0					
ANR	754747	PtrMemberAccess	env -> syntax		754698	0					
ANR	754748	Identifier	env		754698	0					
ANR	754749	Identifier	syntax		754698	1					
ANR	754750	Argument	ONIG_SYN_OP2_ESC_V_VTAB		754698	1					
ANR	754751	Identifier	ONIG_SYN_OP2_ESC_V_VTAB		754698	0					
ANR	754752	ReturnStatement	return '\\v' ;	2111:1:44844:44855	754698	1	True				
ANR	754753	PrimaryExpression	'\\v'		754698	0					
ANR	754754	BreakStatement	break ;	2112:6:44863:44868	754698	16	True				
ANR	754755	Label	default :	2114:4:44875:44882	754698	17	True				
ANR	754756	Identifier	default		754698	0					
ANR	754757	BreakStatement	break ;	2115:6:44890:44895	754698	18	True				
ANR	754758	ReturnStatement	return c ;	2118:2:44909:44917	754698	1	True				
ANR	754759	Identifier	c		754698	0					
ANR	754760	ReturnType	static int		754698	1					
ANR	754761	Identifier	conv_backslash_value		754698	2					
ANR	754762	ParameterList	"int c , ScanEnv * env"		754698	3					
ANR	754763	Parameter	int c	2098:21:44465:44469	754698	0	True				
ANR	754764	ParameterType	int		754698	0					
ANR	754765	Identifier	c		754698	1					
ANR	754766	Parameter	ScanEnv * env	2098:28:44472:44483	754698	1	True				
ANR	754767	ParameterType	ScanEnv *		754698	0					
ANR	754768	Identifier	env		754698	1					
ANR	754769	CFGEntryNode	ENTRY		754698		True				
ANR	754770	CFGExitNode	EXIT		754698		True				
ANR	754771	Symbol	c		754698						
ANR	754772	Symbol	ONIG_SYN_OP_ESC_CONTROL_CHARS		754698						
ANR	754773	Symbol	* env		754698						
ANR	754774	Symbol	IS_SYNTAX_OP		754698						
ANR	754775	Symbol	ONIG_SYN_OP2_ESC_V_VTAB		754698						
ANR	754776	Symbol	env		754698						
ANR	754777	Symbol	env -> syntax		754698						
ANR	754778	Symbol	IS_SYNTAX_OP2		754698						
ANR	754779	Function	is_invalid_quantifier_target	2121:0:44922:45524							
ANR	754780	FunctionDef	is_invalid_quantifier_target (Node * node)		754779	0					
ANR	754781	CompoundStatement		2123:0:44974:45524	754779	0					
ANR	754782	SwitchStatement	switch ( NTYPE ( node ) )		754779	0					
ANR	754783	Condition	NTYPE ( node )	2124:10:44986:44996	754779	0	True				
ANR	754784	CallExpression	NTYPE ( node )		754779	0					
ANR	754785	Callee	NTYPE		754779	0					
ANR	754786	Identifier	NTYPE		754779	0					
ANR	754787	ArgumentList	node		754779	1					
ANR	754788	Argument	node		754779	0					
ANR	754789	Identifier	node		754779	0					
ANR	754790	CompoundStatement		2:23:24:24	754779	1					
ANR	754791	Label	case NT_ANCHOR :	2125:2:45003:45017	754779	0	True				
ANR	754792	Identifier	NT_ANCHOR		754779	0					
ANR	754793	ReturnStatement	return 1 ;	2126:4:45023:45031	754779	1	True				
ANR	754794	PrimaryExpression	1		754779	0					
ANR	754795	BreakStatement	break ;	2127:4:45037:45042	754779	2	True				
ANR	754796	Label	case NT_ENCLOSE :	2129:2:45047:45062	754779	3	True				
ANR	754797	Identifier	NT_ENCLOSE		754779	0					
ANR	754798	BreakStatement	break ;	2132:4:45173:45178	754779	4	True				
ANR	754799	Label	case NT_LIST :	2134:2:45183:45195	754779	5	True				
ANR	754800	Identifier	NT_LIST		754779	0					
ANR	754801	DoStatement	do		754779	6					
ANR	754802	CompoundStatement		13:7:229:229	754779	0					
ANR	754803	IfStatement	if ( ! is_invalid_quantifier_target ( NCAR ( node ) ) )		754779	0					
ANR	754804	Condition	! is_invalid_quantifier_target ( NCAR ( node ) )	2136:10:45216:45257	754779	0	True				
ANR	754805	UnaryOperationExpression	! is_invalid_quantifier_target ( NCAR ( node ) )		754779	0					
ANR	754806	UnaryOperator	!		754779	0					
ANR	754807	CallExpression	is_invalid_quantifier_target ( NCAR ( node ) )		754779	1					
ANR	754808	Callee	is_invalid_quantifier_target		754779	0					
ANR	754809	Identifier	is_invalid_quantifier_target		754779	0					
ANR	754810	ArgumentList	NCAR ( node )		754779	1					
ANR	754811	Argument	NCAR ( node )		754779	0					
ANR	754812	CallExpression	NCAR ( node )		754779	0					
ANR	754813	Callee	NCAR		754779	0					
ANR	754814	Identifier	NCAR		754779	0					
ANR	754815	ArgumentList	node		754779	1					
ANR	754816	Argument	node		754779	0					
ANR	754817	Identifier	node		754779	0					
ANR	754818	ReturnStatement	return 0 ;	2136:54:45260:45268	754779	1	True				
ANR	754819	PrimaryExpression	0		754779	0					
ANR	754820	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2137:13:45283:45312	754779	1	True				
ANR	754821	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		754779	0					
ANR	754822	Callee	IS_NOT_NULL		754779	0					
ANR	754823	Identifier	IS_NOT_NULL		754779	0					
ANR	754824	ArgumentList	node = NCDR ( node )		754779	1					
ANR	754825	Argument	node = NCDR ( node )		754779	0					
ANR	754826	AssignmentExpression	node = NCDR ( node )		754779	0		=			
ANR	754827	Identifier	node		754779	0					
ANR	754828	CallExpression	NCDR ( node )		754779	1					
ANR	754829	Callee	NCDR		754779	0					
ANR	754830	Identifier	NCDR		754779	0					
ANR	754831	ArgumentList	node		754779	1					
ANR	754832	Argument	node		754779	0					
ANR	754833	Identifier	node		754779	0					
ANR	754834	ReturnStatement	return 0 ;	2138:4:45320:45328	754779	7	True				
ANR	754835	PrimaryExpression	0		754779	0					
ANR	754836	BreakStatement	break ;	2139:4:45334:45339	754779	8	True				
ANR	754837	Label	case NT_ALT :	2141:2:45344:45355	754779	9	True				
ANR	754838	Identifier	NT_ALT		754779	0					
ANR	754839	DoStatement	do		754779	10					
ANR	754840	CompoundStatement		20:7:389:389	754779	0					
ANR	754841	IfStatement	if ( is_invalid_quantifier_target ( NCAR ( node ) ) )		754779	0					
ANR	754842	Condition	is_invalid_quantifier_target ( NCAR ( node ) )	2143:10:45376:45415	754779	0	True				
ANR	754843	CallExpression	is_invalid_quantifier_target ( NCAR ( node ) )		754779	0					
ANR	754844	Callee	is_invalid_quantifier_target		754779	0					
ANR	754845	Identifier	is_invalid_quantifier_target		754779	0					
ANR	754846	ArgumentList	NCAR ( node )		754779	1					
ANR	754847	Argument	NCAR ( node )		754779	0					
ANR	754848	CallExpression	NCAR ( node )		754779	0					
ANR	754849	Callee	NCAR		754779	0					
ANR	754850	Identifier	NCAR		754779	0					
ANR	754851	ArgumentList	node		754779	1					
ANR	754852	Argument	node		754779	0					
ANR	754853	Identifier	node		754779	0					
ANR	754854	ReturnStatement	return 1 ;	2143:52:45418:45426	754779	1	True				
ANR	754855	PrimaryExpression	1		754779	0					
ANR	754856	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2144:13:45441:45470	754779	1	True				
ANR	754857	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		754779	0					
ANR	754858	Callee	IS_NOT_NULL		754779	0					
ANR	754859	Identifier	IS_NOT_NULL		754779	0					
ANR	754860	ArgumentList	node = NCDR ( node )		754779	1					
ANR	754861	Argument	node = NCDR ( node )		754779	0					
ANR	754862	AssignmentExpression	node = NCDR ( node )		754779	0		=			
ANR	754863	Identifier	node		754779	0					
ANR	754864	CallExpression	NCDR ( node )		754779	1					
ANR	754865	Callee	NCDR		754779	0					
ANR	754866	Identifier	NCDR		754779	0					
ANR	754867	ArgumentList	node		754779	1					
ANR	754868	Argument	node		754779	0					
ANR	754869	Identifier	node		754779	0					
ANR	754870	BreakStatement	break ;	2145:4:45478:45483	754779	11	True				
ANR	754871	Label	default :	2147:2:45488:45495	754779	12	True				
ANR	754872	Identifier	default		754779	0					
ANR	754873	BreakStatement	break ;	2148:4:45501:45506	754779	13	True				
ANR	754874	ReturnStatement	return 0 ;	2150:2:45514:45522	754779	1	True				
ANR	754875	PrimaryExpression	0		754779	0					
ANR	754876	ReturnType	static int		754779	1					
ANR	754877	Identifier	is_invalid_quantifier_target		754779	2					
ANR	754878	ParameterList	Node * node		754779	3					
ANR	754879	Parameter	Node * node	2122:29:44962:44971	754779	0	True				
ANR	754880	ParameterType	Node *		754779	0					
ANR	754881	Identifier	node		754779	1					
ANR	754882	CFGEntryNode	ENTRY		754779		True				
ANR	754883	CFGExitNode	EXIT		754779		True				
ANR	754884	Symbol	is_invalid_quantifier_target		754779						
ANR	754885	Symbol	node		754779						
ANR	754886	Symbol	IS_NOT_NULL		754779						
ANR	754887	Symbol	NCAR		754779						
ANR	754888	Symbol	NCDR		754779						
ANR	754889	Symbol	NTYPE		754779						
ANR	754890	Function	popular_quantifier_num	2154:0:45565:46077							
ANR	754891	FunctionDef	popular_quantifier_num (QtfrNode * q)		754890	0					
ANR	754892	CompoundStatement		2156:0:45612:46077	754890	0					
ANR	754893	IfStatement	if ( q -> greedy )		754890	0					
ANR	754894	Condition	q -> greedy	2157:6:45620:45628	754890	0	True				
ANR	754895	PtrMemberAccess	q -> greedy		754890	0					
ANR	754896	Identifier	q		754890	0					
ANR	754897	Identifier	greedy		754890	1					
ANR	754898	CompoundStatement		2:17:18:18	754890	1					
ANR	754899	IfStatement	if ( q -> lower == 0 )		754890	0					
ANR	754900	Condition	q -> lower == 0	2158:8:45641:45653	754890	0	True				
ANR	754901	EqualityExpression	q -> lower == 0		754890	0		==			
ANR	754902	PtrMemberAccess	q -> lower		754890	0					
ANR	754903	Identifier	q		754890	0					
ANR	754904	Identifier	lower		754890	1					
ANR	754905	PrimaryExpression	0		754890	1					
ANR	754906	CompoundStatement		3:23:43:43	754890	1					
ANR	754907	IfStatement	if ( q -> upper == 1 )		754890	0					
ANR	754908	Condition	q -> upper == 1	2159:10:45668:45680	754890	0	True				
ANR	754909	EqualityExpression	q -> upper == 1		754890	0		==			
ANR	754910	PtrMemberAccess	q -> upper		754890	0					
ANR	754911	Identifier	q		754890	0					
ANR	754912	Identifier	upper		754890	1					
ANR	754913	PrimaryExpression	1		754890	1					
ANR	754914	ReturnStatement	return 0 ;	2159:25:45683:45691	754890	1	True				
ANR	754915	PrimaryExpression	0		754890	0					
ANR	754916	ElseStatement	else		754890	0					
ANR	754917	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		754890	0					
ANR	754918	Condition	IS_REPEAT_INFINITE ( q -> upper )	2160:15:45708:45735	754890	0	True				
ANR	754919	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		754890	0					
ANR	754920	Callee	IS_REPEAT_INFINITE		754890	0					
ANR	754921	Identifier	IS_REPEAT_INFINITE		754890	0					
ANR	754922	ArgumentList	q -> upper		754890	1					
ANR	754923	Argument	q -> upper		754890	0					
ANR	754924	PtrMemberAccess	q -> upper		754890	0					
ANR	754925	Identifier	q		754890	0					
ANR	754926	Identifier	upper		754890	1					
ANR	754927	ReturnStatement	return 1 ;	2160:45:45738:45746	754890	1	True				
ANR	754928	PrimaryExpression	1		754890	0					
ANR	754929	ElseStatement	else		754890	0					
ANR	754930	IfStatement	if ( q -> lower == 1 )		754890	0					
ANR	754931	Condition	q -> lower == 1	2162:13:45767:45779	754890	0	True				
ANR	754932	EqualityExpression	q -> lower == 1		754890	0		==			
ANR	754933	PtrMemberAccess	q -> lower		754890	0					
ANR	754934	Identifier	q		754890	0					
ANR	754935	Identifier	lower		754890	1					
ANR	754936	PrimaryExpression	1		754890	1					
ANR	754937	CompoundStatement		7:28:169:169	754890	1					
ANR	754938	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		754890	0					
ANR	754939	Condition	IS_REPEAT_INFINITE ( q -> upper )	2163:10:45794:45821	754890	0	True				
ANR	754940	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		754890	0					
ANR	754941	Callee	IS_REPEAT_INFINITE		754890	0					
ANR	754942	Identifier	IS_REPEAT_INFINITE		754890	0					
ANR	754943	ArgumentList	q -> upper		754890	1					
ANR	754944	Argument	q -> upper		754890	0					
ANR	754945	PtrMemberAccess	q -> upper		754890	0					
ANR	754946	Identifier	q		754890	0					
ANR	754947	Identifier	upper		754890	1					
ANR	754948	ReturnStatement	return 2 ;	2163:40:45824:45832	754890	1	True				
ANR	754949	PrimaryExpression	2		754890	0					
ANR	754950	ElseStatement	else		754890	0					
ANR	754951	CompoundStatement		11:7:238:238	754890	0					
ANR	754952	IfStatement	if ( q -> lower == 0 )		754890	0					
ANR	754953	Condition	q -> lower == 0	2167:8:45861:45873	754890	0	True				
ANR	754954	EqualityExpression	q -> lower == 0		754890	0		==			
ANR	754955	PtrMemberAccess	q -> lower		754890	0					
ANR	754956	Identifier	q		754890	0					
ANR	754957	Identifier	lower		754890	1					
ANR	754958	PrimaryExpression	0		754890	1					
ANR	754959	CompoundStatement		12:23:263:263	754890	1					
ANR	754960	IfStatement	if ( q -> upper == 1 )		754890	0					
ANR	754961	Condition	q -> upper == 1	2168:10:45888:45900	754890	0	True				
ANR	754962	EqualityExpression	q -> upper == 1		754890	0		==			
ANR	754963	PtrMemberAccess	q -> upper		754890	0					
ANR	754964	Identifier	q		754890	0					
ANR	754965	Identifier	upper		754890	1					
ANR	754966	PrimaryExpression	1		754890	1					
ANR	754967	ReturnStatement	return 3 ;	2168:25:45903:45911	754890	1	True				
ANR	754968	PrimaryExpression	3		754890	0					
ANR	754969	ElseStatement	else		754890	0					
ANR	754970	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		754890	0					
ANR	754971	Condition	IS_REPEAT_INFINITE ( q -> upper )	2169:15:45928:45955	754890	0	True				
ANR	754972	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		754890	0					
ANR	754973	Callee	IS_REPEAT_INFINITE		754890	0					
ANR	754974	Identifier	IS_REPEAT_INFINITE		754890	0					
ANR	754975	ArgumentList	q -> upper		754890	1					
ANR	754976	Argument	q -> upper		754890	0					
ANR	754977	PtrMemberAccess	q -> upper		754890	0					
ANR	754978	Identifier	q		754890	0					
ANR	754979	Identifier	upper		754890	1					
ANR	754980	ReturnStatement	return 4 ;	2169:45:45958:45966	754890	1	True				
ANR	754981	PrimaryExpression	4		754890	0					
ANR	754982	ElseStatement	else		754890	0					
ANR	754983	IfStatement	if ( q -> lower == 1 )		754890	0					
ANR	754984	Condition	q -> lower == 1	2171:13:45987:45999	754890	0	True				
ANR	754985	EqualityExpression	q -> lower == 1		754890	0		==			
ANR	754986	PtrMemberAccess	q -> lower		754890	0					
ANR	754987	Identifier	q		754890	0					
ANR	754988	Identifier	lower		754890	1					
ANR	754989	PrimaryExpression	1		754890	1					
ANR	754990	CompoundStatement		16:28:389:389	754890	1					
ANR	754991	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		754890	0					
ANR	754992	Condition	IS_REPEAT_INFINITE ( q -> upper )	2172:10:46014:46041	754890	0	True				
ANR	754993	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		754890	0					
ANR	754994	Callee	IS_REPEAT_INFINITE		754890	0					
ANR	754995	Identifier	IS_REPEAT_INFINITE		754890	0					
ANR	754996	ArgumentList	q -> upper		754890	1					
ANR	754997	Argument	q -> upper		754890	0					
ANR	754998	PtrMemberAccess	q -> upper		754890	0					
ANR	754999	Identifier	q		754890	0					
ANR	755000	Identifier	upper		754890	1					
ANR	755001	ReturnStatement	return 5 ;	2172:40:46044:46052	754890	1	True				
ANR	755002	PrimaryExpression	5		754890	0					
ANR	755003	ReturnStatement	return - 1 ;	2175:2:46066:46075	754890	1	True				
ANR	755004	UnaryOperationExpression	- 1		754890	0					
ANR	755005	UnaryOperator	-		754890	0					
ANR	755006	PrimaryExpression	1		754890	1					
ANR	755007	ReturnType	static int		754890	1					
ANR	755008	Identifier	popular_quantifier_num		754890	2					
ANR	755009	ParameterList	QtfrNode * q		754890	3					
ANR	755010	Parameter	QtfrNode * q	2155:23:45599:45609	754890	0	True				
ANR	755011	ParameterType	QtfrNode *		754890	0					
ANR	755012	Identifier	q		754890	1					
ANR	755013	CFGEntryNode	ENTRY		754890		True				
ANR	755014	CFGExitNode	EXIT		754890		True				
ANR	755015	Symbol	q -> lower		754890						
ANR	755016	Symbol	q		754890						
ANR	755017	Symbol	q -> greedy		754890						
ANR	755018	Symbol	q -> upper		754890						
ANR	755019	Symbol	* q		754890						
ANR	755020	Symbol	IS_REPEAT_INFINITE		754890						
ANR	755021	ClassDef	ReduceType	2179:0:46081:46316							
ANR	755022	Function	onig_reduce_nested_quantifier	2198:0:46781:47931							
ANR	755023	FunctionDef	"onig_reduce_nested_quantifier (Node * pnode , Node * cnode)"		755022	0					
ANR	755024	CompoundStatement		2200:0:46849:47931	755022	0					
ANR	755025	IdentifierDeclStatement	"int pnum , cnum ;"	2201:2:46853:46867	755022	0	True				
ANR	755026	IdentifierDecl	pnum		755022	0					
ANR	755027	IdentifierDeclType	int		755022	0					
ANR	755028	Identifier	pnum		755022	1					
ANR	755029	IdentifierDecl	cnum		755022	1					
ANR	755030	IdentifierDeclType	int		755022	0					
ANR	755031	Identifier	cnum		755022	1					
ANR	755032	IdentifierDeclStatement	"QtfrNode * p , * c ;"	2202:2:46871:46886	755022	1	True				
ANR	755033	IdentifierDecl	* p		755022	0					
ANR	755034	IdentifierDeclType	QtfrNode *		755022	0					
ANR	755035	Identifier	p		755022	1					
ANR	755036	IdentifierDecl	* c		755022	1					
ANR	755037	IdentifierDeclType	QtfrNode *		755022	0					
ANR	755038	Identifier	c		755022	1					
ANR	755039	ExpressionStatement	p = NQTFR ( pnode )	2204:2:46891:46907	755022	2	True				
ANR	755040	AssignmentExpression	p = NQTFR ( pnode )		755022	0		=			
ANR	755041	Identifier	p		755022	0					
ANR	755042	CallExpression	NQTFR ( pnode )		755022	1					
ANR	755043	Callee	NQTFR		755022	0					
ANR	755044	Identifier	NQTFR		755022	0					
ANR	755045	ArgumentList	pnode		755022	1					
ANR	755046	Argument	pnode		755022	0					
ANR	755047	Identifier	pnode		755022	0					
ANR	755048	ExpressionStatement	c = NQTFR ( cnode )	2205:2:46911:46927	755022	3	True				
ANR	755049	AssignmentExpression	c = NQTFR ( cnode )		755022	0		=			
ANR	755050	Identifier	c		755022	0					
ANR	755051	CallExpression	NQTFR ( cnode )		755022	1					
ANR	755052	Callee	NQTFR		755022	0					
ANR	755053	Identifier	NQTFR		755022	0					
ANR	755054	ArgumentList	cnode		755022	1					
ANR	755055	Argument	cnode		755022	0					
ANR	755056	Identifier	cnode		755022	0					
ANR	755057	ExpressionStatement	pnum = popular_quantifier_num ( p )	2206:2:46931:46963	755022	4	True				
ANR	755058	AssignmentExpression	pnum = popular_quantifier_num ( p )		755022	0		=			
ANR	755059	Identifier	pnum		755022	0					
ANR	755060	CallExpression	popular_quantifier_num ( p )		755022	1					
ANR	755061	Callee	popular_quantifier_num		755022	0					
ANR	755062	Identifier	popular_quantifier_num		755022	0					
ANR	755063	ArgumentList	p		755022	1					
ANR	755064	Argument	p		755022	0					
ANR	755065	Identifier	p		755022	0					
ANR	755066	ExpressionStatement	cnum = popular_quantifier_num ( c )	2207:2:46967:46999	755022	5	True				
ANR	755067	AssignmentExpression	cnum = popular_quantifier_num ( c )		755022	0		=			
ANR	755068	Identifier	cnum		755022	0					
ANR	755069	CallExpression	popular_quantifier_num ( c )		755022	1					
ANR	755070	Callee	popular_quantifier_num		755022	0					
ANR	755071	Identifier	popular_quantifier_num		755022	0					
ANR	755072	ArgumentList	c		755022	1					
ANR	755073	Argument	c		755022	0					
ANR	755074	Identifier	c		755022	0					
ANR	755075	IfStatement	if ( pnum < 0 || cnum < 0 )		755022	6					
ANR	755076	Condition	pnum < 0 || cnum < 0	2208:6:47007:47026	755022	0	True				
ANR	755077	OrExpression	pnum < 0 || cnum < 0		755022	0		||			
ANR	755078	RelationalExpression	pnum < 0		755022	0		<			
ANR	755079	Identifier	pnum		755022	0					
ANR	755080	PrimaryExpression	0		755022	1					
ANR	755081	RelationalExpression	cnum < 0		755022	1		<			
ANR	755082	Identifier	cnum		755022	0					
ANR	755083	PrimaryExpression	0		755022	1					
ANR	755084	ReturnStatement	return ;	2208:28:47029:47036	755022	1	True				
ANR	755085	SwitchStatement	switch ( ReduceTypeTable [ cnum ] [ pnum ] )		755022	7					
ANR	755086	Condition	ReduceTypeTable [ cnum ] [ pnum ]	2210:9:47048:47074	755022	0	True				
ANR	755087	ArrayIndexing	ReduceTypeTable [ cnum ] [ pnum ]		755022	0					
ANR	755088	ArrayIndexing	ReduceTypeTable [ cnum ]		755022	0					
ANR	755089	Identifier	ReduceTypeTable		755022	0					
ANR	755090	Identifier	cnum		755022	1					
ANR	755091	Identifier	pnum		755022	1					
ANR	755092	CompoundStatement		11:38:227:227	755022	1					
ANR	755093	Label	case RQ_DEL :	2211:2:47081:47092	755022	0	True				
ANR	755094	Identifier	RQ_DEL		755022	0					
ANR	755095	ExpressionStatement	* pnode = * cnode	2212:4:47098:47113	755022	1	True				
ANR	755096	AssignmentExpression	* pnode = * cnode		755022	0		=			
ANR	755097	UnaryOperationExpression	* pnode		755022	0					
ANR	755098	UnaryOperator	*		755022	0					
ANR	755099	Identifier	pnode		755022	1					
ANR	755100	UnaryOperationExpression	* cnode		755022	1					
ANR	755101	UnaryOperator	*		755022	0					
ANR	755102	Identifier	cnode		755022	1					
ANR	755103	BreakStatement	break ;	2213:4:47119:47124	755022	2	True				
ANR	755104	Label	case RQ_A :	2214:2:47128:47137	755022	3	True				
ANR	755105	Identifier	RQ_A		755022	0					
ANR	755106	ExpressionStatement	p -> target = c -> target	2215:4:47143:47164	755022	4	True				
ANR	755107	AssignmentExpression	p -> target = c -> target		755022	0		=			
ANR	755108	PtrMemberAccess	p -> target		755022	0					
ANR	755109	Identifier	p		755022	0					
ANR	755110	Identifier	target		755022	1					
ANR	755111	PtrMemberAccess	c -> target		755022	1					
ANR	755112	Identifier	c		755022	0					
ANR	755113	Identifier	target		755022	1					
ANR	755114	ExpressionStatement	p -> lower = 0	2216:4:47170:47183	755022	5	True				
ANR	755115	AssignmentExpression	p -> lower = 0		755022	0		=			
ANR	755116	PtrMemberAccess	p -> lower		755022	0					
ANR	755117	Identifier	p		755022	0					
ANR	755118	Identifier	lower		755022	1					
ANR	755119	PrimaryExpression	0		755022	1					
ANR	755120	ExpressionStatement	p -> upper = REPEAT_INFINITE	2216:20:47186:47212	755022	6	True				
ANR	755121	AssignmentExpression	p -> upper = REPEAT_INFINITE		755022	0		=			
ANR	755122	PtrMemberAccess	p -> upper		755022	0					
ANR	755123	Identifier	p		755022	0					
ANR	755124	Identifier	upper		755022	1					
ANR	755125	Identifier	REPEAT_INFINITE		755022	1					
ANR	755126	ExpressionStatement	p -> greedy = 1	2216:49:47215:47228	755022	7	True				
ANR	755127	AssignmentExpression	p -> greedy = 1		755022	0		=			
ANR	755128	PtrMemberAccess	p -> greedy		755022	0					
ANR	755129	Identifier	p		755022	0					
ANR	755130	Identifier	greedy		755022	1					
ANR	755131	PrimaryExpression	1		755022	1					
ANR	755132	BreakStatement	break ;	2217:4:47234:47239	755022	8	True				
ANR	755133	Label	case RQ_AQ :	2218:2:47243:47253	755022	9	True				
ANR	755134	Identifier	RQ_AQ		755022	0					
ANR	755135	ExpressionStatement	p -> target = c -> target	2219:4:47259:47280	755022	10	True				
ANR	755136	AssignmentExpression	p -> target = c -> target		755022	0		=			
ANR	755137	PtrMemberAccess	p -> target		755022	0					
ANR	755138	Identifier	p		755022	0					
ANR	755139	Identifier	target		755022	1					
ANR	755140	PtrMemberAccess	c -> target		755022	1					
ANR	755141	Identifier	c		755022	0					
ANR	755142	Identifier	target		755022	1					
ANR	755143	ExpressionStatement	p -> lower = 0	2220:4:47286:47299	755022	11	True				
ANR	755144	AssignmentExpression	p -> lower = 0		755022	0		=			
ANR	755145	PtrMemberAccess	p -> lower		755022	0					
ANR	755146	Identifier	p		755022	0					
ANR	755147	Identifier	lower		755022	1					
ANR	755148	PrimaryExpression	0		755022	1					
ANR	755149	ExpressionStatement	p -> upper = REPEAT_INFINITE	2220:20:47302:47328	755022	12	True				
ANR	755150	AssignmentExpression	p -> upper = REPEAT_INFINITE		755022	0		=			
ANR	755151	PtrMemberAccess	p -> upper		755022	0					
ANR	755152	Identifier	p		755022	0					
ANR	755153	Identifier	upper		755022	1					
ANR	755154	Identifier	REPEAT_INFINITE		755022	1					
ANR	755155	ExpressionStatement	p -> greedy = 0	2220:49:47331:47344	755022	13	True				
ANR	755156	AssignmentExpression	p -> greedy = 0		755022	0		=			
ANR	755157	PtrMemberAccess	p -> greedy		755022	0					
ANR	755158	Identifier	p		755022	0					
ANR	755159	Identifier	greedy		755022	1					
ANR	755160	PrimaryExpression	0		755022	1					
ANR	755161	BreakStatement	break ;	2221:4:47350:47355	755022	14	True				
ANR	755162	Label	case RQ_QQ :	2222:2:47359:47369	755022	15	True				
ANR	755163	Identifier	RQ_QQ		755022	0					
ANR	755164	ExpressionStatement	p -> target = c -> target	2223:4:47375:47396	755022	16	True				
ANR	755165	AssignmentExpression	p -> target = c -> target		755022	0		=			
ANR	755166	PtrMemberAccess	p -> target		755022	0					
ANR	755167	Identifier	p		755022	0					
ANR	755168	Identifier	target		755022	1					
ANR	755169	PtrMemberAccess	c -> target		755022	1					
ANR	755170	Identifier	c		755022	0					
ANR	755171	Identifier	target		755022	1					
ANR	755172	ExpressionStatement	p -> lower = 0	2224:4:47402:47415	755022	17	True				
ANR	755173	AssignmentExpression	p -> lower = 0		755022	0		=			
ANR	755174	PtrMemberAccess	p -> lower		755022	0					
ANR	755175	Identifier	p		755022	0					
ANR	755176	Identifier	lower		755022	1					
ANR	755177	PrimaryExpression	0		755022	1					
ANR	755178	ExpressionStatement	p -> upper = 1	2224:20:47418:47430	755022	18	True				
ANR	755179	AssignmentExpression	p -> upper = 1		755022	0		=			
ANR	755180	PtrMemberAccess	p -> upper		755022	0					
ANR	755181	Identifier	p		755022	0					
ANR	755182	Identifier	upper		755022	1					
ANR	755183	PrimaryExpression	1		755022	1					
ANR	755184	ExpressionStatement	p -> greedy = 0	2224:35:47433:47446	755022	19	True				
ANR	755185	AssignmentExpression	p -> greedy = 0		755022	0		=			
ANR	755186	PtrMemberAccess	p -> greedy		755022	0					
ANR	755187	Identifier	p		755022	0					
ANR	755188	Identifier	greedy		755022	1					
ANR	755189	PrimaryExpression	0		755022	1					
ANR	755190	BreakStatement	break ;	2225:4:47452:47457	755022	20	True				
ANR	755191	Label	case RQ_P_QQ :	2226:2:47461:47473	755022	21	True				
ANR	755192	Identifier	RQ_P_QQ		755022	0					
ANR	755193	ExpressionStatement	p -> target = cnode	2227:4:47479:47496	755022	22	True				
ANR	755194	AssignmentExpression	p -> target = cnode		755022	0		=			
ANR	755195	PtrMemberAccess	p -> target		755022	0					
ANR	755196	Identifier	p		755022	0					
ANR	755197	Identifier	target		755022	1					
ANR	755198	Identifier	cnode		755022	1					
ANR	755199	ExpressionStatement	p -> lower = 0	2228:4:47502:47515	755022	23	True				
ANR	755200	AssignmentExpression	p -> lower = 0		755022	0		=			
ANR	755201	PtrMemberAccess	p -> lower		755022	0					
ANR	755202	Identifier	p		755022	0					
ANR	755203	Identifier	lower		755022	1					
ANR	755204	PrimaryExpression	0		755022	1					
ANR	755205	ExpressionStatement	p -> upper = 1	2228:20:47518:47530	755022	24	True				
ANR	755206	AssignmentExpression	p -> upper = 1		755022	0		=			
ANR	755207	PtrMemberAccess	p -> upper		755022	0					
ANR	755208	Identifier	p		755022	0					
ANR	755209	Identifier	upper		755022	1					
ANR	755210	PrimaryExpression	1		755022	1					
ANR	755211	ExpressionStatement	p -> greedy = 0	2228:35:47533:47546	755022	25	True				
ANR	755212	AssignmentExpression	p -> greedy = 0		755022	0		=			
ANR	755213	PtrMemberAccess	p -> greedy		755022	0					
ANR	755214	Identifier	p		755022	0					
ANR	755215	Identifier	greedy		755022	1					
ANR	755216	PrimaryExpression	0		755022	1					
ANR	755217	ExpressionStatement	c -> lower = 1	2229:4:47552:47565	755022	26	True				
ANR	755218	AssignmentExpression	c -> lower = 1		755022	0		=			
ANR	755219	PtrMemberAccess	c -> lower		755022	0					
ANR	755220	Identifier	c		755022	0					
ANR	755221	Identifier	lower		755022	1					
ANR	755222	PrimaryExpression	1		755022	1					
ANR	755223	ExpressionStatement	c -> upper = REPEAT_INFINITE	2229:20:47568:47594	755022	27	True				
ANR	755224	AssignmentExpression	c -> upper = REPEAT_INFINITE		755022	0		=			
ANR	755225	PtrMemberAccess	c -> upper		755022	0					
ANR	755226	Identifier	c		755022	0					
ANR	755227	Identifier	upper		755022	1					
ANR	755228	Identifier	REPEAT_INFINITE		755022	1					
ANR	755229	ExpressionStatement	c -> greedy = 1	2229:49:47597:47610	755022	28	True				
ANR	755230	AssignmentExpression	c -> greedy = 1		755022	0		=			
ANR	755231	PtrMemberAccess	c -> greedy		755022	0					
ANR	755232	Identifier	c		755022	0					
ANR	755233	Identifier	greedy		755022	1					
ANR	755234	PrimaryExpression	1		755022	1					
ANR	755235	ReturnStatement	return ;	2230:4:47616:47623	755022	29	True				
ANR	755236	BreakStatement	break ;	2231:4:47629:47634	755022	30	True				
ANR	755237	Label	case RQ_PQ_Q :	2232:2:47638:47650	755022	31	True				
ANR	755238	Identifier	RQ_PQ_Q		755022	0					
ANR	755239	ExpressionStatement	p -> target = cnode	2233:4:47656:47673	755022	32	True				
ANR	755240	AssignmentExpression	p -> target = cnode		755022	0		=			
ANR	755241	PtrMemberAccess	p -> target		755022	0					
ANR	755242	Identifier	p		755022	0					
ANR	755243	Identifier	target		755022	1					
ANR	755244	Identifier	cnode		755022	1					
ANR	755245	ExpressionStatement	p -> lower = 0	2234:4:47679:47692	755022	33	True				
ANR	755246	AssignmentExpression	p -> lower = 0		755022	0		=			
ANR	755247	PtrMemberAccess	p -> lower		755022	0					
ANR	755248	Identifier	p		755022	0					
ANR	755249	Identifier	lower		755022	1					
ANR	755250	PrimaryExpression	0		755022	1					
ANR	755251	ExpressionStatement	p -> upper = 1	2234:20:47695:47707	755022	34	True				
ANR	755252	AssignmentExpression	p -> upper = 1		755022	0		=			
ANR	755253	PtrMemberAccess	p -> upper		755022	0					
ANR	755254	Identifier	p		755022	0					
ANR	755255	Identifier	upper		755022	1					
ANR	755256	PrimaryExpression	1		755022	1					
ANR	755257	ExpressionStatement	p -> greedy = 1	2234:35:47710:47723	755022	35	True				
ANR	755258	AssignmentExpression	p -> greedy = 1		755022	0		=			
ANR	755259	PtrMemberAccess	p -> greedy		755022	0					
ANR	755260	Identifier	p		755022	0					
ANR	755261	Identifier	greedy		755022	1					
ANR	755262	PrimaryExpression	1		755022	1					
ANR	755263	ExpressionStatement	c -> lower = 1	2235:4:47729:47742	755022	36	True				
ANR	755264	AssignmentExpression	c -> lower = 1		755022	0		=			
ANR	755265	PtrMemberAccess	c -> lower		755022	0					
ANR	755266	Identifier	c		755022	0					
ANR	755267	Identifier	lower		755022	1					
ANR	755268	PrimaryExpression	1		755022	1					
ANR	755269	ExpressionStatement	c -> upper = REPEAT_INFINITE	2235:20:47745:47771	755022	37	True				
ANR	755270	AssignmentExpression	c -> upper = REPEAT_INFINITE		755022	0		=			
ANR	755271	PtrMemberAccess	c -> upper		755022	0					
ANR	755272	Identifier	c		755022	0					
ANR	755273	Identifier	upper		755022	1					
ANR	755274	Identifier	REPEAT_INFINITE		755022	1					
ANR	755275	ExpressionStatement	c -> greedy = 0	2235:49:47774:47787	755022	38	True				
ANR	755276	AssignmentExpression	c -> greedy = 0		755022	0		=			
ANR	755277	PtrMemberAccess	c -> greedy		755022	0					
ANR	755278	Identifier	c		755022	0					
ANR	755279	Identifier	greedy		755022	1					
ANR	755280	PrimaryExpression	0		755022	1					
ANR	755281	ReturnStatement	return ;	2236:4:47793:47800	755022	39	True				
ANR	755282	BreakStatement	break ;	2237:4:47806:47811	755022	40	True				
ANR	755283	Label	case RQ_ASIS :	2238:2:47815:47827	755022	41	True				
ANR	755284	Identifier	RQ_ASIS		755022	0					
ANR	755285	ExpressionStatement	p -> target = cnode	2239:4:47833:47850	755022	42	True				
ANR	755286	AssignmentExpression	p -> target = cnode		755022	0		=			
ANR	755287	PtrMemberAccess	p -> target		755022	0					
ANR	755288	Identifier	p		755022	0					
ANR	755289	Identifier	target		755022	1					
ANR	755290	Identifier	cnode		755022	1					
ANR	755291	ReturnStatement	return ;	2240:4:47856:47863	755022	43	True				
ANR	755292	BreakStatement	break ;	2241:4:47869:47874	755022	44	True				
ANR	755293	ExpressionStatement	c -> target = NULL_NODE	2244:2:47883:47904	755022	8	True				
ANR	755294	AssignmentExpression	c -> target = NULL_NODE		755022	0		=			
ANR	755295	PtrMemberAccess	c -> target		755022	0					
ANR	755296	Identifier	c		755022	0					
ANR	755297	Identifier	target		755022	1					
ANR	755298	Identifier	NULL_NODE		755022	1					
ANR	755299	ExpressionStatement	onig_node_free ( cnode )	2245:2:47908:47929	755022	9	True				
ANR	755300	CallExpression	onig_node_free ( cnode )		755022	0					
ANR	755301	Callee	onig_node_free		755022	0					
ANR	755302	Identifier	onig_node_free		755022	0					
ANR	755303	ArgumentList	cnode		755022	1					
ANR	755304	Argument	cnode		755022	0					
ANR	755305	Identifier	cnode		755022	0					
ANR	755306	ReturnType	extern void		755022	1					
ANR	755307	Identifier	onig_reduce_nested_quantifier		755022	2					
ANR	755308	ParameterList	"Node * pnode , Node * cnode"		755022	3					
ANR	755309	Parameter	Node * pnode	2199:30:46823:46833	755022	0	True				
ANR	755310	ParameterType	Node *		755022	0					
ANR	755311	Identifier	pnode		755022	1					
ANR	755312	Parameter	Node * cnode	2199:43:46836:46846	755022	1	True				
ANR	755313	ParameterType	Node *		755022	0					
ANR	755314	Identifier	cnode		755022	1					
ANR	755315	CFGEntryNode	ENTRY		755022		True				
ANR	755316	CFGExitNode	EXIT		755022		True				
ANR	755317	Symbol	* * ReduceTypeTable		755022						
ANR	755318	Symbol	* pnode		755022						
ANR	755319	Symbol	c -> greedy		755022						
ANR	755320	Symbol	cnode		755022						
ANR	755321	Symbol	p -> lower		755022						
ANR	755322	Symbol	NQTFR		755022						
ANR	755323	Symbol	popular_quantifier_num		755022						
ANR	755324	Symbol	REPEAT_INFINITE		755022						
ANR	755325	Symbol	c -> target		755022						
ANR	755326	Symbol	ReduceTypeTable		755022						
ANR	755327	Symbol	c -> upper		755022						
ANR	755328	Symbol	pnum		755022						
ANR	755329	Symbol	p -> target		755022						
ANR	755330	Symbol	c -> lower		755022						
ANR	755331	Symbol	c		755022						
ANR	755332	Symbol	* cnum		755022						
ANR	755333	Symbol	p -> upper		755022						
ANR	755334	Symbol	* cnode		755022						
ANR	755335	Symbol	cnum		755022						
ANR	755336	Symbol	* c		755022						
ANR	755337	Symbol	pnode		755022						
ANR	755338	Symbol	* pnum		755022						
ANR	755339	Symbol	p		755022						
ANR	755340	Symbol	p -> greedy		755022						
ANR	755341	Symbol	* ReduceTypeTable		755022						
ANR	755342	Symbol	* * cnum		755022						
ANR	755343	Symbol	* p		755022						
ANR	755344	Symbol	NULL_NODE		755022						
ANR	755345	ClassDef	TokenSyms	2249:0:47935:48454							
ANR	755346	ClassDef	<unnamed>	2277:8:48466:49139							
ANR	755347	DeclStmt									
ANR	755348	Decl							enum TokenSyms	enum TokenSyms	type
ANR	755349	DeclStmt									
ANR	755350	Decl							int	int	escaped
ANR	755351	DeclStmt									
ANR	755352	Decl							int	int	base
ANR	755353	DeclStmt									
ANR	755354	Decl							UChar	UChar *	backp
ANR	755355	ClassDef	<unnamed>	2282:2:48585:49126							
ANR	755356	DeclStmt									
ANR	755357	Decl							UChar	UChar *	s
ANR	755358	DeclStmt									
ANR	755359	Decl							int	int	c
ANR	755360	DeclStmt									
ANR	755361	Decl							OnigCodePoint	OnigCodePoint	code
ANR	755362	DeclStmt									
ANR	755363	Decl							int	int	anchor
ANR	755364	DeclStmt									
ANR	755365	Decl							int	int	subtype
ANR	755366	ClassDef	<unnamed>	2288:4:48685:48780							
ANR	755367	DeclStmt									
ANR	755368	Decl							int	int	lower
ANR	755369	DeclStmt									
ANR	755370	Decl							int	int	upper
ANR	755371	DeclStmt									
ANR	755372	Decl							int	int	greedy
ANR	755373	DeclStmt									
ANR	755374	Decl							int	int	possessive
ANR	755375	DeclStmt									
ANR	755376	Decl									repeat
ANR	755377	ClassDef	<unnamed>	2294:4:48786:48976							
ANR	755378	DeclStmt									
ANR	755379	Decl							int	int	num
ANR	755380	DeclStmt									
ANR	755381	Decl							int	int	ref1
ANR	755382	DeclStmt									
ANR	755383	Decl							int	int *	refs
ANR	755384	DeclStmt									
ANR	755385	Decl							int	int	by_name
ANR	755386	DeclStmt									
ANR	755387	Decl							int	int	exist_level
ANR	755388	DeclStmt									
ANR	755389	Decl							int	int	level
ANR	755390	DeclStmt									
ANR	755391	Decl									backref
ANR	755392	ClassDef	<unnamed>	2304:4:48982:49062							
ANR	755393	DeclStmt									
ANR	755394	Decl							UChar	UChar *	name
ANR	755395	DeclStmt									
ANR	755396	Decl							UChar	UChar *	name_end
ANR	755397	DeclStmt									
ANR	755398	Decl							int	int	gnum
ANR	755399	DeclStmt									
ANR	755400	Decl									call
ANR	755401	ClassDef	<unnamed>	2309:4:49068:49119							
ANR	755402	DeclStmt									
ANR	755403	Decl							int	int	ctype
ANR	755404	DeclStmt									
ANR	755405	Decl							int	int	not
ANR	755406	DeclStmt									
ANR	755407	Decl									prop
ANR	755408	DeclStmt									
ANR	755409	Decl									u
ANR	755410	DeclStmt									
ANR	755411	Decl									OnigToken
ANR	755412	Function	fetch_range_quantifier	2317:0:49143:51285							
ANR	755413	FunctionDef	"fetch_range_quantifier (UChar * * src , UChar * end , OnigToken * tok , ScanEnv * env)"		755412	0					
ANR	755414	CompoundStatement		2319:0:49232:51285	755412	0					
ANR	755415	IdentifierDeclStatement	"int low , up , syn_allow , non_low = 0 ;"	2320:2:49236:49271	755412	0	True				
ANR	755416	IdentifierDecl	low		755412	0					
ANR	755417	IdentifierDeclType	int		755412	0					
ANR	755418	Identifier	low		755412	1					
ANR	755419	IdentifierDecl	up		755412	1					
ANR	755420	IdentifierDeclType	int		755412	0					
ANR	755421	Identifier	up		755412	1					
ANR	755422	IdentifierDecl	syn_allow		755412	2					
ANR	755423	IdentifierDeclType	int		755412	0					
ANR	755424	Identifier	syn_allow		755412	1					
ANR	755425	IdentifierDecl	non_low = 0		755412	3					
ANR	755426	IdentifierDeclType	int		755412	0					
ANR	755427	Identifier	non_low		755412	1					
ANR	755428	AssignmentExpression	non_low = 0		755412	2		=			
ANR	755429	Identifier	non_low		755412	0					
ANR	755430	PrimaryExpression	0		755412	1					
ANR	755431	IdentifierDeclStatement	int r = 0 ;	2321:2:49275:49284	755412	1	True				
ANR	755432	IdentifierDecl	r = 0		755412	0					
ANR	755433	IdentifierDeclType	int		755412	0					
ANR	755434	Identifier	r		755412	1					
ANR	755435	AssignmentExpression	r = 0		755412	2		=			
ANR	755436	Identifier	r		755412	0					
ANR	755437	PrimaryExpression	0		755412	1					
ANR	755438	IdentifierDeclStatement	OnigCodePoint c ;	2322:2:49288:49303	755412	2	True				
ANR	755439	IdentifierDecl	c		755412	0					
ANR	755440	IdentifierDeclType	OnigCodePoint		755412	0					
ANR	755441	Identifier	c		755412	1					
ANR	755442	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2323:2:49307:49334	755412	3	True				
ANR	755443	IdentifierDecl	enc = env -> enc		755412	0					
ANR	755444	IdentifierDeclType	OnigEncoding		755412	0					
ANR	755445	Identifier	enc		755412	1					
ANR	755446	AssignmentExpression	enc = env -> enc		755412	2		=			
ANR	755447	Identifier	enc		755412	0					
ANR	755448	PtrMemberAccess	env -> enc		755412	1					
ANR	755449	Identifier	env		755412	0					
ANR	755450	Identifier	enc		755412	1					
ANR	755451	IdentifierDeclStatement	UChar * p = * src ;	2324:2:49338:49353	755412	4	True				
ANR	755452	IdentifierDecl	* p = * src		755412	0					
ANR	755453	IdentifierDeclType	UChar *		755412	0					
ANR	755454	Identifier	p		755412	1					
ANR	755455	AssignmentExpression	* p = * src		755412	2		=			
ANR	755456	Identifier	p		755412	0					
ANR	755457	UnaryOperationExpression	* src		755412	1					
ANR	755458	UnaryOperator	*		755412	0					
ANR	755459	Identifier	src		755412	1					
ANR	755460	ExpressionStatement	PFETCH_READY	2325:2:49357:49369	755412	5	True				
ANR	755461	Identifier	PFETCH_READY		755412	0					
ANR	755462	ExpressionStatement	"syn_allow = IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"	2327:2:49374:49444	755412	6	True				
ANR	755463	AssignmentExpression	"syn_allow = IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"		755412	0		=			
ANR	755464	Identifier	syn_allow		755412	0					
ANR	755465	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"		755412	1					
ANR	755466	Callee	IS_SYNTAX_BV		755412	0					
ANR	755467	Identifier	IS_SYNTAX_BV		755412	0					
ANR	755468	ArgumentList	env -> syntax		755412	1					
ANR	755469	Argument	env -> syntax		755412	0					
ANR	755470	PtrMemberAccess	env -> syntax		755412	0					
ANR	755471	Identifier	env		755412	0					
ANR	755472	Identifier	syntax		755412	1					
ANR	755473	Argument	ONIG_SYN_ALLOW_INVALID_INTERVAL		755412	1					
ANR	755474	Identifier	ONIG_SYN_ALLOW_INVALID_INTERVAL		755412	0					
ANR	755475	IfStatement	if ( PEND )		755412	7					
ANR	755476	Condition	PEND	2329:6:49453:49456	755412	0	True				
ANR	755477	Identifier	PEND		755412	0					
ANR	755478	CompoundStatement		11:12:226:226	755412	1					
ANR	755479	IfStatement	if ( syn_allow )		755412	0					
ANR	755480	Condition	syn_allow	2330:8:49469:49477	755412	0	True				
ANR	755481	Identifier	syn_allow		755412	0					
ANR	755482	ReturnStatement	return 1 ;	2331:6:49486:49494	755412	1	True				
ANR	755483	PrimaryExpression	1		755412	0					
ANR	755484	ElseStatement	else		755412	0					
ANR	755485	ReturnStatement	return ONIGERR_END_PATTERN_AT_LEFT_BRACE ;	2333:6:49532:49572	755412	0	True				
ANR	755486	Identifier	ONIGERR_END_PATTERN_AT_LEFT_BRACE		755412	0					
ANR	755487	IfStatement	if ( ! syn_allow )		755412	8					
ANR	755488	Condition	! syn_allow	2336:6:49613:49623	755412	0	True				
ANR	755489	UnaryOperationExpression	! syn_allow		755412	0					
ANR	755490	UnaryOperator	!		755412	0					
ANR	755491	Identifier	syn_allow		755412	1					
ANR	755492	CompoundStatement		18:19:393:393	755412	1					
ANR	755493	ExpressionStatement	c = PPEEK	2337:4:49632:49641	755412	0	True				
ANR	755494	AssignmentExpression	c = PPEEK		755412	0		=			
ANR	755495	Identifier	c		755412	0					
ANR	755496	Identifier	PPEEK		755412	1					
ANR	755497	IfStatement	if ( c == ')' || c == '(' || c == '|' )		755412	1					
ANR	755498	Condition	c == ')' || c == '(' || c == '|'	2338:8:49651:49682	755412	0	True				
ANR	755499	OrExpression	c == ')' || c == '(' || c == '|'		755412	0		||			
ANR	755500	EqualityExpression	c == ')'		755412	0		==			
ANR	755501	Identifier	c		755412	0					
ANR	755502	PrimaryExpression	')'		755412	1					
ANR	755503	OrExpression	c == '(' || c == '|'		755412	1		||			
ANR	755504	EqualityExpression	c == '('		755412	0		==			
ANR	755505	Identifier	c		755412	0					
ANR	755506	PrimaryExpression	'('		755412	1					
ANR	755507	EqualityExpression	c == '|'		755412	1		==			
ANR	755508	Identifier	c		755412	0					
ANR	755509	PrimaryExpression	'|'		755412	1					
ANR	755510	CompoundStatement		20:42:452:452	755412	1					
ANR	755511	ReturnStatement	return ONIGERR_END_PATTERN_AT_LEFT_BRACE ;	2339:6:49693:49733	755412	0	True				
ANR	755512	Identifier	ONIGERR_END_PATTERN_AT_LEFT_BRACE		755412	0					
ANR	755513	ExpressionStatement	"low = onig_scan_unsigned_number ( & p , end , env -> enc )"	2343:2:49748:49798	755412	9	True				
ANR	755514	AssignmentExpression	"low = onig_scan_unsigned_number ( & p , end , env -> enc )"		755412	0		=			
ANR	755515	Identifier	low		755412	0					
ANR	755516	CallExpression	"onig_scan_unsigned_number ( & p , end , env -> enc )"		755412	1					
ANR	755517	Callee	onig_scan_unsigned_number		755412	0					
ANR	755518	Identifier	onig_scan_unsigned_number		755412	0					
ANR	755519	ArgumentList	& p		755412	1					
ANR	755520	Argument	& p		755412	0					
ANR	755521	UnaryOperationExpression	& p		755412	0					
ANR	755522	UnaryOperator	&		755412	0					
ANR	755523	Identifier	p		755412	1					
ANR	755524	Argument	end		755412	1					
ANR	755525	Identifier	end		755412	0					
ANR	755526	Argument	env -> enc		755412	2					
ANR	755527	PtrMemberAccess	env -> enc		755412	0					
ANR	755528	Identifier	env		755412	0					
ANR	755529	Identifier	enc		755412	1					
ANR	755530	IfStatement	if ( low < 0 )		755412	10					
ANR	755531	Condition	low < 0	2344:6:49806:49812	755412	0	True				
ANR	755532	RelationalExpression	low < 0		755412	0		<			
ANR	755533	Identifier	low		755412	0					
ANR	755534	PrimaryExpression	0		755412	1					
ANR	755535	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2344:15:49815:49861	755412	1	True				
ANR	755536	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		755412	0					
ANR	755537	IfStatement	if ( low > ONIG_MAX_REPEAT_NUM )		755412	11					
ANR	755538	Condition	low > ONIG_MAX_REPEAT_NUM	2345:6:49869:49893	755412	0	True				
ANR	755539	RelationalExpression	low > ONIG_MAX_REPEAT_NUM		755412	0		>			
ANR	755540	Identifier	low		755412	0					
ANR	755541	Identifier	ONIG_MAX_REPEAT_NUM		755412	1					
ANR	755542	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2346:4:49900:49946	755412	1	True				
ANR	755543	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		755412	0					
ANR	755544	IfStatement	if ( p == * src )		755412	12					
ANR	755545	Condition	p == * src	2348:6:49955:49963	755412	0	True				
ANR	755546	EqualityExpression	p == * src		755412	0		==			
ANR	755547	Identifier	p		755412	0					
ANR	755548	UnaryOperationExpression	* src		755412	1					
ANR	755549	UnaryOperator	*		755412	0					
ANR	755550	Identifier	src		755412	1					
ANR	755551	CompoundStatement		30:17:733:733	755412	1					
ANR	755552	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV ) )"		755412	0					
ANR	755553	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV )"	2349:8:49997:50057	755412	0	True				
ANR	755554	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV )"		755412	0					
ANR	755555	Callee	IS_SYNTAX_BV		755412	0					
ANR	755556	Identifier	IS_SYNTAX_BV		755412	0					
ANR	755557	ArgumentList	env -> syntax		755412	1					
ANR	755558	Argument	env -> syntax		755412	0					
ANR	755559	PtrMemberAccess	env -> syntax		755412	0					
ANR	755560	Identifier	env		755412	0					
ANR	755561	Identifier	syntax		755412	1					
ANR	755562	Argument	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		755412	1					
ANR	755563	Identifier	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		755412	0					
ANR	755564	CompoundStatement		31:71:827:827	755412	1					
ANR	755565	ExpressionStatement	low = 0	2351:6:50100:50107	755412	0	True				
ANR	755566	AssignmentExpression	low = 0		755412	0		=			
ANR	755567	Identifier	low		755412	0					
ANR	755568	PrimaryExpression	0		755412	1					
ANR	755569	ExpressionStatement	non_low = 1	2352:6:50115:50126	755412	1	True				
ANR	755570	AssignmentExpression	non_low = 1		755412	0		=			
ANR	755571	Identifier	non_low		755412	0					
ANR	755572	PrimaryExpression	1		755412	1					
ANR	755573	ElseStatement	else		755412	0					
ANR	755574	GotoStatement	goto invalid ;	2355:6:50149:50161	755412	0	True				
ANR	755575	Identifier	invalid		755412	0					
ANR	755576	IfStatement	if ( PEND )		755412	13					
ANR	755577	Condition	PEND	2358:6:50174:50177	755412	0	True				
ANR	755578	Identifier	PEND		755412	0					
ANR	755579	GotoStatement	goto invalid ;	2358:12:50180:50192	755412	1	True				
ANR	755580	Identifier	invalid		755412	0					
ANR	755581	ExpressionStatement	PFETCH ( c )	2359:2:50196:50205	755412	14	True				
ANR	755582	CallExpression	PFETCH ( c )		755412	0					
ANR	755583	Callee	PFETCH		755412	0					
ANR	755584	Identifier	PFETCH		755412	0					
ANR	755585	ArgumentList	c		755412	1					
ANR	755586	Argument	c		755412	0					
ANR	755587	Identifier	c		755412	0					
ANR	755588	IfStatement	"if ( c == ',' )"		755412	15					
ANR	755589	Condition	"c == ','"	2360:6:50213:50220	755412	0	True				
ANR	755590	EqualityExpression	"c == ','"		755412	0		==			
ANR	755591	Identifier	c		755412	0					
ANR	755592	PrimaryExpression	"','"		755412	1					
ANR	755593	CompoundStatement		43:4:996:1011	755412	1					
ANR	755594	IdentifierDeclStatement	UChar * prev = p ;	2361:4:50229:50244	755412	0	True				
ANR	755595	IdentifierDecl	* prev = p		755412	0					
ANR	755596	IdentifierDeclType	UChar *		755412	0					
ANR	755597	Identifier	prev		755412	1					
ANR	755598	AssignmentExpression	* prev = p		755412	2		=			
ANR	755599	Identifier	p		755412	0					
ANR	755600	Identifier	p		755412	1					
ANR	755601	ExpressionStatement	"up = onig_scan_unsigned_number ( & p , end , env -> enc )"	2362:4:50250:50299	755412	1	True				
ANR	755602	AssignmentExpression	"up = onig_scan_unsigned_number ( & p , end , env -> enc )"		755412	0		=			
ANR	755603	Identifier	up		755412	0					
ANR	755604	CallExpression	"onig_scan_unsigned_number ( & p , end , env -> enc )"		755412	1					
ANR	755605	Callee	onig_scan_unsigned_number		755412	0					
ANR	755606	Identifier	onig_scan_unsigned_number		755412	0					
ANR	755607	ArgumentList	& p		755412	1					
ANR	755608	Argument	& p		755412	0					
ANR	755609	UnaryOperationExpression	& p		755412	0					
ANR	755610	UnaryOperator	&		755412	0					
ANR	755611	Identifier	p		755412	1					
ANR	755612	Argument	end		755412	1					
ANR	755613	Identifier	end		755412	0					
ANR	755614	Argument	env -> enc		755412	2					
ANR	755615	PtrMemberAccess	env -> enc		755412	0					
ANR	755616	Identifier	env		755412	0					
ANR	755617	Identifier	enc		755412	1					
ANR	755618	IfStatement	if ( up < 0 )		755412	2					
ANR	755619	Condition	up < 0	2363:8:50309:50314	755412	0	True				
ANR	755620	RelationalExpression	up < 0		755412	0		<			
ANR	755621	Identifier	up		755412	0					
ANR	755622	PrimaryExpression	0		755412	1					
ANR	755623	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2363:16:50317:50363	755412	1	True				
ANR	755624	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		755412	0					
ANR	755625	IfStatement	if ( up > ONIG_MAX_REPEAT_NUM )		755412	3					
ANR	755626	Condition	up > ONIG_MAX_REPEAT_NUM	2364:8:50373:50396	755412	0	True				
ANR	755627	RelationalExpression	up > ONIG_MAX_REPEAT_NUM		755412	0		>			
ANR	755628	Identifier	up		755412	0					
ANR	755629	Identifier	ONIG_MAX_REPEAT_NUM		755412	1					
ANR	755630	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2365:6:50405:50451	755412	1	True				
ANR	755631	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		755412	0					
ANR	755632	IfStatement	if ( p == prev )		755412	4					
ANR	755633	Condition	p == prev	2367:8:50462:50470	755412	0	True				
ANR	755634	EqualityExpression	p == prev		755412	0		==			
ANR	755635	Identifier	p		755412	0					
ANR	755636	Identifier	prev		755412	1					
ANR	755637	CompoundStatement		49:19:1240:1240	755412	1					
ANR	755638	IfStatement	if ( non_low != 0 )		755412	0					
ANR	755639	Condition	non_low != 0	2368:10:50485:50496	755412	0	True				
ANR	755640	EqualityExpression	non_low != 0		755412	0		!=			
ANR	755641	Identifier	non_low		755412	0					
ANR	755642	PrimaryExpression	0		755412	1					
ANR	755643	GotoStatement	goto invalid ;	2369:1:50500:50512	755412	1	True				
ANR	755644	Identifier	invalid		755412	0					
ANR	755645	ExpressionStatement	up = REPEAT_INFINITE	2370:6:50520:50540	755412	1	True				
ANR	755646	AssignmentExpression	up = REPEAT_INFINITE		755412	0		=			
ANR	755647	Identifier	up		755412	0					
ANR	755648	Identifier	REPEAT_INFINITE		755412	1					
ANR	755649	ElseStatement	else		755412	0					
ANR	755650	CompoundStatement		55:7:1353:1353	755412	0					
ANR	755651	IfStatement	if ( non_low != 0 )		755412	0					
ANR	755652	Condition	non_low != 0	2374:8:50596:50607	755412	0	True				
ANR	755653	EqualityExpression	non_low != 0		755412	0		!=			
ANR	755654	Identifier	non_low		755412	0					
ANR	755655	PrimaryExpression	0		755412	1					
ANR	755656	GotoStatement	goto invalid ;	2375:6:50616:50628	755412	1	True				
ANR	755657	Identifier	invalid		755412	0					
ANR	755658	ExpressionStatement	PUNFETCH	2377:4:50635:50643	755412	1	True				
ANR	755659	Identifier	PUNFETCH		755412	0					
ANR	755660	ExpressionStatement	up = low	2378:4:50649:50657	755412	2	True				
ANR	755661	AssignmentExpression	up = low		755412	0		=			
ANR	755662	Identifier	up		755412	0					
ANR	755663	Identifier	low		755412	1					
ANR	755664	ExpressionStatement	r = 2	2379:4:50690:50695	755412	3	True				
ANR	755665	AssignmentExpression	r = 2		755412	0		=			
ANR	755666	Identifier	r		755412	0					
ANR	755667	PrimaryExpression	2		755412	1					
ANR	755668	IfStatement	if ( PEND )		755412	16					
ANR	755669	Condition	PEND	2382:6:50724:50727	755412	0	True				
ANR	755670	Identifier	PEND		755412	0					
ANR	755671	GotoStatement	goto invalid ;	2382:12:50730:50742	755412	1	True				
ANR	755672	Identifier	invalid		755412	0					
ANR	755673	ExpressionStatement	PFETCH ( c )	2383:2:50746:50755	755412	17	True				
ANR	755674	CallExpression	PFETCH ( c )		755412	0					
ANR	755675	Callee	PFETCH		755412	0					
ANR	755676	Identifier	PFETCH		755412	0					
ANR	755677	ArgumentList	c		755412	1					
ANR	755678	Argument	c		755412	0					
ANR	755679	Identifier	c		755412	0					
ANR	755680	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL ) )"		755412	18					
ANR	755681	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"	2384:6:50763:50819	755412	0	True				
ANR	755682	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		755412	0					
ANR	755683	Callee	IS_SYNTAX_OP		755412	0					
ANR	755684	Identifier	IS_SYNTAX_OP		755412	0					
ANR	755685	ArgumentList	env -> syntax		755412	1					
ANR	755686	Argument	env -> syntax		755412	0					
ANR	755687	PtrMemberAccess	env -> syntax		755412	0					
ANR	755688	Identifier	env		755412	0					
ANR	755689	Identifier	syntax		755412	1					
ANR	755690	Argument	ONIG_SYN_OP_ESC_BRACE_INTERVAL		755412	1					
ANR	755691	Identifier	ONIG_SYN_OP_ESC_BRACE_INTERVAL		755412	0					
ANR	755692	CompoundStatement		66:65:1589:1589	755412	1					
ANR	755693	IfStatement	if ( c != MC_ESC ( env -> syntax ) )		755412	0					
ANR	755694	Condition	c != MC_ESC ( env -> syntax )	2385:8:50832:50855	755412	0	True				
ANR	755695	EqualityExpression	c != MC_ESC ( env -> syntax )		755412	0		!=			
ANR	755696	Identifier	c		755412	0					
ANR	755697	CallExpression	MC_ESC ( env -> syntax )		755412	1					
ANR	755698	Callee	MC_ESC		755412	0					
ANR	755699	Identifier	MC_ESC		755412	0					
ANR	755700	ArgumentList	env -> syntax		755412	1					
ANR	755701	Argument	env -> syntax		755412	0					
ANR	755702	PtrMemberAccess	env -> syntax		755412	0					
ANR	755703	Identifier	env		755412	0					
ANR	755704	Identifier	syntax		755412	1					
ANR	755705	GotoStatement	goto invalid ;	2385:34:50858:50870	755412	1	True				
ANR	755706	Identifier	invalid		755412	0					
ANR	755707	ExpressionStatement	PFETCH ( c )	2386:4:50876:50885	755412	1	True				
ANR	755708	CallExpression	PFETCH ( c )		755412	0					
ANR	755709	Callee	PFETCH		755412	0					
ANR	755710	Identifier	PFETCH		755412	0					
ANR	755711	ArgumentList	c		755412	1					
ANR	755712	Argument	c		755412	0					
ANR	755713	Identifier	c		755412	0					
ANR	755714	IfStatement	if ( c != '}' )		755412	19					
ANR	755715	Condition	c != '}'	2388:6:50897:50904	755412	0	True				
ANR	755716	EqualityExpression	c != '}'		755412	0		!=			
ANR	755717	Identifier	c		755412	0					
ANR	755718	PrimaryExpression	'}'		755412	1					
ANR	755719	GotoStatement	goto invalid ;	2388:16:50907:50919	755412	1	True				
ANR	755720	Identifier	invalid		755412	0					
ANR	755721	IfStatement	if ( ! IS_REPEAT_INFINITE ( up ) && low > up )		755412	20					
ANR	755722	Condition	! IS_REPEAT_INFINITE ( up ) && low > up	2390:6:50928:50962	755412	0	True				
ANR	755723	AndExpression	! IS_REPEAT_INFINITE ( up ) && low > up		755412	0		&&			
ANR	755724	UnaryOperationExpression	! IS_REPEAT_INFINITE ( up )		755412	0					
ANR	755725	UnaryOperator	!		755412	0					
ANR	755726	CallExpression	IS_REPEAT_INFINITE ( up )		755412	1					
ANR	755727	Callee	IS_REPEAT_INFINITE		755412	0					
ANR	755728	Identifier	IS_REPEAT_INFINITE		755412	0					
ANR	755729	ArgumentList	up		755412	1					
ANR	755730	Argument	up		755412	0					
ANR	755731	Identifier	up		755412	0					
ANR	755732	RelationalExpression	low > up		755412	1		>			
ANR	755733	Identifier	low		755412	0					
ANR	755734	Identifier	up		755412	1					
ANR	755735	CompoundStatement		72:43:1732:1732	755412	1					
ANR	755736	ReturnStatement	return ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE ;	2391:4:50971:51026	755412	0	True				
ANR	755737	Identifier	ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE		755412	0					
ANR	755738	ExpressionStatement	tok -> type = TK_INTERVAL	2394:2:51035:51058	755412	21	True				
ANR	755739	AssignmentExpression	tok -> type = TK_INTERVAL		755412	0		=			
ANR	755740	PtrMemberAccess	tok -> type		755412	0					
ANR	755741	Identifier	tok		755412	0					
ANR	755742	Identifier	type		755412	1					
ANR	755743	Identifier	TK_INTERVAL		755412	1					
ANR	755744	ExpressionStatement	tok -> u . repeat . lower = low	2395:2:51062:51087	755412	22	True				
ANR	755745	AssignmentExpression	tok -> u . repeat . lower = low		755412	0		=			
ANR	755746	MemberAccess	tok -> u . repeat . lower		755412	0					
ANR	755747	MemberAccess	tok -> u . repeat		755412	0					
ANR	755748	PtrMemberAccess	tok -> u		755412	0					
ANR	755749	Identifier	tok		755412	0					
ANR	755750	Identifier	u		755412	1					
ANR	755751	Identifier	repeat		755412	1					
ANR	755752	Identifier	lower		755412	1					
ANR	755753	Identifier	low		755412	1					
ANR	755754	ExpressionStatement	tok -> u . repeat . upper = up	2396:2:51091:51115	755412	23	True				
ANR	755755	AssignmentExpression	tok -> u . repeat . upper = up		755412	0		=			
ANR	755756	MemberAccess	tok -> u . repeat . upper		755412	0					
ANR	755757	MemberAccess	tok -> u . repeat		755412	0					
ANR	755758	PtrMemberAccess	tok -> u		755412	0					
ANR	755759	Identifier	tok		755412	0					
ANR	755760	Identifier	u		755412	1					
ANR	755761	Identifier	repeat		755412	1					
ANR	755762	Identifier	upper		755412	1					
ANR	755763	Identifier	up		755412	1					
ANR	755764	ExpressionStatement	* src = p	2397:2:51119:51127	755412	24	True				
ANR	755765	AssignmentExpression	* src = p		755412	0		=			
ANR	755766	UnaryOperationExpression	* src		755412	0					
ANR	755767	UnaryOperator	*		755412	0					
ANR	755768	Identifier	src		755412	1					
ANR	755769	Identifier	p		755412	1					
ANR	755770	ReturnStatement	return r ;	2398:2:51131:51139	755412	25	True				
ANR	755771	Identifier	r		755412	0					
ANR	755772	Label	invalid :	2400:1:51179:51186	755412	26	True				
ANR	755773	Identifier	invalid		755412	0					
ANR	755774	IfStatement	if ( syn_allow )		755412	27					
ANR	755775	Condition	syn_allow	2401:6:51194:51202	755412	0	True				
ANR	755776	Identifier	syn_allow		755412	0					
ANR	755777	ReturnStatement	return 1 ;	2402:4:51209:51217	755412	1	True				
ANR	755778	PrimaryExpression	1		755412	0					
ANR	755779	ElseStatement	else		755412	0					
ANR	755780	ReturnStatement	return ONIGERR_INVALID_REPEAT_RANGE_PATTERN ;	2404:4:51240:51283	755412	0	True				
ANR	755781	Identifier	ONIGERR_INVALID_REPEAT_RANGE_PATTERN		755412	0					
ANR	755782	ReturnType	static int		755412	1					
ANR	755783	Identifier	fetch_range_quantifier		755412	2					
ANR	755784	ParameterList	"UChar * * src , UChar * end , OnigToken * tok , ScanEnv * env"		755412	3					
ANR	755785	Parameter	UChar * * src	2318:23:49177:49187	755412	0	True				
ANR	755786	ParameterType	UChar * *		755412	0					
ANR	755787	Identifier	src		755412	1					
ANR	755788	Parameter	UChar * end	2318:36:49190:49199	755412	1	True				
ANR	755789	ParameterType	UChar *		755412	0					
ANR	755790	Identifier	end		755412	1					
ANR	755791	Parameter	OnigToken * tok	2318:48:49202:49215	755412	2	True				
ANR	755792	ParameterType	OnigToken *		755412	0					
ANR	755793	Identifier	tok		755412	1					
ANR	755794	Parameter	ScanEnv * env	2318:64:49218:49229	755412	3	True				
ANR	755795	ParameterType	ScanEnv *		755412	0					
ANR	755796	Identifier	env		755412	1					
ANR	755797	CFGEntryNode	ENTRY		755412		True				
ANR	755798	CFGExitNode	EXIT		755412		True				
ANR	755799	Symbol	ONIG_MAX_REPEAT_NUM		755412						
ANR	755800	Symbol	ONIG_SYN_ALLOW_INVALID_INTERVAL		755412						
ANR	755801	Symbol	prev		755412						
ANR	755802	Symbol	env -> enc		755412						
ANR	755803	Symbol	ONIGERR_END_PATTERN_AT_LEFT_BRACE		755412						
ANR	755804	Symbol	onig_scan_unsigned_number		755412						
ANR	755805	Symbol	* src		755412						
ANR	755806	Symbol	PEND		755412						
ANR	755807	Symbol	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		755412						
ANR	755808	Symbol	tok -> type		755412						
ANR	755809	Symbol	tok		755412						
ANR	755810	Symbol	REPEAT_INFINITE		755412						
ANR	755811	Symbol	TK_INTERVAL		755412						
ANR	755812	Symbol	low		755412						
ANR	755813	Symbol	ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE		755412						
ANR	755814	Symbol	tok -> u . repeat . upper		755412						
ANR	755815	Symbol	IS_SYNTAX_BV		755412						
ANR	755816	Symbol	end		755412						
ANR	755817	Symbol	up		755412						
ANR	755818	Symbol	enc		755412						
ANR	755819	Symbol	IS_REPEAT_INFINITE		755412						
ANR	755820	Symbol	tok -> u		755412						
ANR	755821	Symbol	ONIG_SYN_OP_ESC_BRACE_INTERVAL		755412						
ANR	755822	Symbol	c		755412						
ANR	755823	Symbol	tok -> u . repeat		755412						
ANR	755824	Symbol	src		755412						
ANR	755825	Symbol	ONIGERR_INVALID_REPEAT_RANGE_PATTERN		755412						
ANR	755826	Symbol	PPEEK		755412						
ANR	755827	Symbol	* env		755412						
ANR	755828	Symbol	IS_SYNTAX_OP		755412						
ANR	755829	Symbol	env		755412						
ANR	755830	Symbol	syn_allow		755412						
ANR	755831	Symbol	MC_ESC		755412						
ANR	755832	Symbol	env -> syntax		755412						
ANR	755833	Symbol	non_low		755412						
ANR	755834	Symbol	p		755412						
ANR	755835	Symbol	r		755412						
ANR	755836	Symbol	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		755412						
ANR	755837	Symbol	tok -> u . repeat . lower		755412						
ANR	755838	Symbol	& p		755412						
ANR	755839	Symbol	* tok		755412						
ANR	755840	Function	fetch_escaped_value	2408:0:51316:52916							
ANR	755841	FunctionDef	"fetch_escaped_value (UChar * * src , UChar * end , ScanEnv * env)"		755840	0					
ANR	755842	CompoundStatement		2410:0:51386:52916	755840	0					
ANR	755843	IdentifierDeclStatement	int v ;	2411:2:51390:51395	755840	0	True				
ANR	755844	IdentifierDecl	v		755840	0					
ANR	755845	IdentifierDeclType	int		755840	0					
ANR	755846	Identifier	v		755840	1					
ANR	755847	IdentifierDeclStatement	OnigCodePoint c ;	2412:2:51399:51414	755840	1	True				
ANR	755848	IdentifierDecl	c		755840	0					
ANR	755849	IdentifierDeclType	OnigCodePoint		755840	0					
ANR	755850	Identifier	c		755840	1					
ANR	755851	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2413:2:51418:51445	755840	2	True				
ANR	755852	IdentifierDecl	enc = env -> enc		755840	0					
ANR	755853	IdentifierDeclType	OnigEncoding		755840	0					
ANR	755854	Identifier	enc		755840	1					
ANR	755855	AssignmentExpression	enc = env -> enc		755840	2		=			
ANR	755856	Identifier	enc		755840	0					
ANR	755857	PtrMemberAccess	env -> enc		755840	1					
ANR	755858	Identifier	env		755840	0					
ANR	755859	Identifier	enc		755840	1					
ANR	755860	IdentifierDeclStatement	UChar * p = * src ;	2414:2:51449:51464	755840	3	True				
ANR	755861	IdentifierDecl	* p = * src		755840	0					
ANR	755862	IdentifierDeclType	UChar *		755840	0					
ANR	755863	Identifier	p		755840	1					
ANR	755864	AssignmentExpression	* p = * src		755840	2		=			
ANR	755865	Identifier	p		755840	0					
ANR	755866	UnaryOperationExpression	* src		755840	1					
ANR	755867	UnaryOperator	*		755840	0					
ANR	755868	Identifier	src		755840	1					
ANR	755869	IfStatement	if ( PEND )		755840	4					
ANR	755870	Condition	PEND	2416:6:51473:51476	755840	0	True				
ANR	755871	Identifier	PEND		755840	0					
ANR	755872	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	2416:12:51479:51515	755840	1	True				
ANR	755873	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		755840	0					
ANR	755874	ExpressionStatement	PFETCH_S ( c )	2418:2:51520:51531	755840	5	True				
ANR	755875	CallExpression	PFETCH_S ( c )		755840	0					
ANR	755876	Callee	PFETCH_S		755840	0					
ANR	755877	Identifier	PFETCH_S		755840	0					
ANR	755878	ArgumentList	c		755840	1					
ANR	755879	Argument	c		755840	0					
ANR	755880	Identifier	c		755840	0					
ANR	755881	SwitchStatement	switch ( c )		755840	6					
ANR	755882	Condition	c	2419:10:51543:51543	755840	0	True				
ANR	755883	Identifier	c		755840	0					
ANR	755884	CompoundStatement		10:13:159:159	755840	1					
ANR	755885	Label	case 'M' :	2420:2:51550:51558	755840	0	True				
ANR	755886	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META ) )"		755840	1					
ANR	755887	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META )"	2421:8:51568:51630	755840	0	True				
ANR	755888	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META )"		755840	0					
ANR	755889	Callee	IS_SYNTAX_OP2		755840	0					
ANR	755890	Identifier	IS_SYNTAX_OP2		755840	0					
ANR	755891	ArgumentList	env -> syntax		755840	1					
ANR	755892	Argument	env -> syntax		755840	0					
ANR	755893	PtrMemberAccess	env -> syntax		755840	0					
ANR	755894	Identifier	env		755840	0					
ANR	755895	Identifier	syntax		755840	1					
ANR	755896	Argument	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		755840	1					
ANR	755897	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		755840	0					
ANR	755898	CompoundStatement		12:73:246:246	755840	1					
ANR	755899	IfStatement	if ( PEND )		755840	0					
ANR	755900	Condition	PEND	2422:10:51645:51648	755840	0	True				
ANR	755901	Identifier	PEND		755840	0					
ANR	755902	ReturnStatement	return ONIGERR_END_PATTERN_AT_META ;	2422:16:51651:51685	755840	1	True				
ANR	755903	Identifier	ONIGERR_END_PATTERN_AT_META		755840	0					
ANR	755904	ExpressionStatement	PFETCH_S ( c )	2423:6:51693:51704	755840	1	True				
ANR	755905	CallExpression	PFETCH_S ( c )		755840	0					
ANR	755906	Callee	PFETCH_S		755840	0					
ANR	755907	Identifier	PFETCH_S		755840	0					
ANR	755908	ArgumentList	c		755840	1					
ANR	755909	Argument	c		755840	0					
ANR	755910	Identifier	c		755840	0					
ANR	755911	IfStatement	if ( c != '-' )		755840	2					
ANR	755912	Condition	c != '-'	2424:10:51716:51723	755840	0	True				
ANR	755913	EqualityExpression	c != '-'		755840	0		!=			
ANR	755914	Identifier	c		755840	0					
ANR	755915	PrimaryExpression	'-'		755840	1					
ANR	755916	ReturnStatement	return ONIGERR_META_CODE_SYNTAX ;	2424:20:51726:51757	755840	1	True				
ANR	755917	Identifier	ONIGERR_META_CODE_SYNTAX		755840	0					
ANR	755918	IfStatement	if ( PEND )		755840	3					
ANR	755919	Condition	PEND	2425:10:51769:51772	755840	0	True				
ANR	755920	Identifier	PEND		755840	0					
ANR	755921	ReturnStatement	return ONIGERR_END_PATTERN_AT_META ;	2425:16:51775:51809	755840	1	True				
ANR	755922	Identifier	ONIGERR_END_PATTERN_AT_META		755840	0					
ANR	755923	ExpressionStatement	PFETCH_S ( c )	2426:6:51817:51828	755840	4	True				
ANR	755924	CallExpression	PFETCH_S ( c )		755840	0					
ANR	755925	Callee	PFETCH_S		755840	0					
ANR	755926	Identifier	PFETCH_S		755840	0					
ANR	755927	ArgumentList	c		755840	1					
ANR	755928	Argument	c		755840	0					
ANR	755929	Identifier	c		755840	0					
ANR	755930	IfStatement	if ( c == MC_ESC ( env -> syntax ) )		755840	5					
ANR	755931	Condition	c == MC_ESC ( env -> syntax )	2427:10:51840:51863	755840	0	True				
ANR	755932	EqualityExpression	c == MC_ESC ( env -> syntax )		755840	0		==			
ANR	755933	Identifier	c		755840	0					
ANR	755934	CallExpression	MC_ESC ( env -> syntax )		755840	1					
ANR	755935	Callee	MC_ESC		755840	0					
ANR	755936	Identifier	MC_ESC		755840	0					
ANR	755937	ArgumentList	env -> syntax		755840	1					
ANR	755938	Argument	env -> syntax		755840	0					
ANR	755939	PtrMemberAccess	env -> syntax		755840	0					
ANR	755940	Identifier	env		755840	0					
ANR	755941	Identifier	syntax		755840	1					
ANR	755942	CompoundStatement		18:36:479:479	755840	1					
ANR	755943	ExpressionStatement	"v = fetch_escaped_value ( & p , end , env )"	2428:8:51876:51913	755840	0	True				
ANR	755944	AssignmentExpression	"v = fetch_escaped_value ( & p , end , env )"		755840	0		=			
ANR	755945	Identifier	v		755840	0					
ANR	755946	CallExpression	"fetch_escaped_value ( & p , end , env )"		755840	1					
ANR	755947	Callee	fetch_escaped_value		755840	0					
ANR	755948	Identifier	fetch_escaped_value		755840	0					
ANR	755949	ArgumentList	& p		755840	1					
ANR	755950	Argument	& p		755840	0					
ANR	755951	UnaryOperationExpression	& p		755840	0					
ANR	755952	UnaryOperator	&		755840	0					
ANR	755953	Identifier	p		755840	1					
ANR	755954	Argument	end		755840	1					
ANR	755955	Identifier	end		755840	0					
ANR	755956	Argument	env		755840	2					
ANR	755957	Identifier	env		755840	0					
ANR	755958	IfStatement	if ( v < 0 )		755840	1					
ANR	755959	Condition	v < 0	2429:12:51927:51931	755840	0	True				
ANR	755960	RelationalExpression	v < 0		755840	0		<			
ANR	755961	Identifier	v		755840	0					
ANR	755962	PrimaryExpression	0		755840	1					
ANR	755963	ReturnStatement	return v ;	2429:19:51934:51942	755840	1	True				
ANR	755964	Identifier	v		755840	0					
ANR	755965	ExpressionStatement	c = ( OnigCodePoint ) v	2430:8:51952:51973	755840	2	True				
ANR	755966	AssignmentExpression	c = ( OnigCodePoint ) v		755840	0		=			
ANR	755967	Identifier	c		755840	0					
ANR	755968	CastExpression	( OnigCodePoint ) v		755840	1					
ANR	755969	CastTarget	OnigCodePoint		755840	0					
ANR	755970	Identifier	v		755840	1					
ANR	755971	ExpressionStatement	c = ( ( c & 0xff ) | 0x80 )	2432:6:51989:52012	755840	6	True				
ANR	755972	AssignmentExpression	c = ( ( c & 0xff ) | 0x80 )		755840	0		=			
ANR	755973	Identifier	c		755840	0					
ANR	755974	InclusiveOrExpression	( c & 0xff ) | 0x80		755840	1		|			
ANR	755975	BitAndExpression	c & 0xff		755840	0		&			
ANR	755976	Identifier	c		755840	0					
ANR	755977	PrimaryExpression	0xff		755840	1					
ANR	755978	PrimaryExpression	0x80		755840	1					
ANR	755979	ElseStatement	else		755840	0					
ANR	755980	GotoStatement	goto backslash ;	2435:6:52035:52049	755840	0	True				
ANR	755981	Identifier	backslash		755840	0					
ANR	755982	BreakStatement	break ;	2436:4:52055:52060	755840	2	True				
ANR	755983	Label	case 'C' :	2438:2:52065:52073	755840	3	True				
ANR	755984	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL ) )"		755840	4					
ANR	755985	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL )"	2439:8:52083:52148	755840	0	True				
ANR	755986	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL )"		755840	0					
ANR	755987	Callee	IS_SYNTAX_OP2		755840	0					
ANR	755988	Identifier	IS_SYNTAX_OP2		755840	0					
ANR	755989	ArgumentList	env -> syntax		755840	1					
ANR	755990	Argument	env -> syntax		755840	0					
ANR	755991	PtrMemberAccess	env -> syntax		755840	0					
ANR	755992	Identifier	env		755840	0					
ANR	755993	Identifier	syntax		755840	1					
ANR	755994	Argument	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		755840	1					
ANR	755995	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		755840	0					
ANR	755996	CompoundStatement		30:76:764:764	755840	1					
ANR	755997	IfStatement	if ( PEND )		755840	0					
ANR	755998	Condition	PEND	2440:10:52163:52166	755840	0	True				
ANR	755999	Identifier	PEND		755840	0					
ANR	756000	ReturnStatement	return ONIGERR_END_PATTERN_AT_CONTROL ;	2440:16:52169:52206	755840	1	True				
ANR	756001	Identifier	ONIGERR_END_PATTERN_AT_CONTROL		755840	0					
ANR	756002	ExpressionStatement	PFETCH_S ( c )	2441:6:52214:52225	755840	1	True				
ANR	756003	CallExpression	PFETCH_S ( c )		755840	0					
ANR	756004	Callee	PFETCH_S		755840	0					
ANR	756005	Identifier	PFETCH_S		755840	0					
ANR	756006	ArgumentList	c		755840	1					
ANR	756007	Argument	c		755840	0					
ANR	756008	Identifier	c		755840	0					
ANR	756009	IfStatement	if ( c != '-' )		755840	2					
ANR	756010	Condition	c != '-'	2442:10:52237:52244	755840	0	True				
ANR	756011	EqualityExpression	c != '-'		755840	0		!=			
ANR	756012	Identifier	c		755840	0					
ANR	756013	PrimaryExpression	'-'		755840	1					
ANR	756014	ReturnStatement	return ONIGERR_CONTROL_CODE_SYNTAX ;	2442:20:52247:52281	755840	1	True				
ANR	756015	Identifier	ONIGERR_CONTROL_CODE_SYNTAX		755840	0					
ANR	756016	GotoStatement	goto control ;	2443:6:52289:52301	755840	3	True				
ANR	756017	Identifier	control		755840	0					
ANR	756018	ElseStatement	else		755840	0					
ANR	756019	GotoStatement	goto backslash ;	2446:6:52324:52338	755840	0	True				
ANR	756020	Identifier	backslash		755840	0					
ANR	756021	Label	case 'c' :	2448:2:52343:52351	755840	5	True				
ANR	756022	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL ) )"		755840	6					
ANR	756023	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL )"	2449:8:52361:52412	755840	0	True				
ANR	756024	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL )"		755840	0					
ANR	756025	Callee	IS_SYNTAX_OP		755840	0					
ANR	756026	Identifier	IS_SYNTAX_OP		755840	0					
ANR	756027	ArgumentList	env -> syntax		755840	1					
ANR	756028	Argument	env -> syntax		755840	0					
ANR	756029	PtrMemberAccess	env -> syntax		755840	0					
ANR	756030	Identifier	env		755840	0					
ANR	756031	Identifier	syntax		755840	1					
ANR	756032	Argument	ONIG_SYN_OP_ESC_C_CONTROL		755840	1					
ANR	756033	Identifier	ONIG_SYN_OP_ESC_C_CONTROL		755840	0					
ANR	756034	CompoundStatement		40:62:1028:1028	755840	1					
ANR	756035	Label	control :	2450:4:52421:52428	755840	0	True				
ANR	756036	Identifier	control		755840	0					
ANR	756037	IfStatement	if ( PEND )		755840	1					
ANR	756038	Condition	PEND	2451:10:52440:52443	755840	0	True				
ANR	756039	Identifier	PEND		755840	0					
ANR	756040	ReturnStatement	return ONIGERR_END_PATTERN_AT_CONTROL ;	2451:16:52446:52483	755840	1	True				
ANR	756041	Identifier	ONIGERR_END_PATTERN_AT_CONTROL		755840	0					
ANR	756042	ExpressionStatement	PFETCH_S ( c )	2452:6:52491:52502	755840	2	True				
ANR	756043	CallExpression	PFETCH_S ( c )		755840	0					
ANR	756044	Callee	PFETCH_S		755840	0					
ANR	756045	Identifier	PFETCH_S		755840	0					
ANR	756046	ArgumentList	c		755840	1					
ANR	756047	Argument	c		755840	0					
ANR	756048	Identifier	c		755840	0					
ANR	756049	IfStatement	if ( c == '?' )		755840	3					
ANR	756050	Condition	c == '?'	2453:10:52514:52521	755840	0	True				
ANR	756051	EqualityExpression	c == '?'		755840	0		==			
ANR	756052	Identifier	c		755840	0					
ANR	756053	PrimaryExpression	'?'		755840	1					
ANR	756054	CompoundStatement		44:20:1137:1137	755840	1					
ANR	756055	ExpressionStatement	c = 0177	2454:8:52534:52542	755840	0	True				
ANR	756056	AssignmentExpression	c = 0177		755840	0		=			
ANR	756057	Identifier	c		755840	0					
ANR	756058	PrimaryExpression	0177		755840	1					
ANR	756059	ElseStatement	else		755840	0					
ANR	756060	CompoundStatement		47:11:1176:1176	755840	0					
ANR	756061	IfStatement	if ( c == MC_ESC ( env -> syntax ) )		755840	0					
ANR	756062	Condition	c == MC_ESC ( env -> syntax )	2457:12:52577:52600	755840	0	True				
ANR	756063	EqualityExpression	c == MC_ESC ( env -> syntax )		755840	0		==			
ANR	756064	Identifier	c		755840	0					
ANR	756065	CallExpression	MC_ESC ( env -> syntax )		755840	1					
ANR	756066	Callee	MC_ESC		755840	0					
ANR	756067	Identifier	MC_ESC		755840	0					
ANR	756068	ArgumentList	env -> syntax		755840	1					
ANR	756069	Argument	env -> syntax		755840	0					
ANR	756070	PtrMemberAccess	env -> syntax		755840	0					
ANR	756071	Identifier	env		755840	0					
ANR	756072	Identifier	syntax		755840	1					
ANR	756073	CompoundStatement		48:38:1216:1216	755840	1					
ANR	756074	ExpressionStatement	"v = fetch_escaped_value ( & p , end , env )"	2458:10:52615:52652	755840	0	True				
ANR	756075	AssignmentExpression	"v = fetch_escaped_value ( & p , end , env )"		755840	0		=			
ANR	756076	Identifier	v		755840	0					
ANR	756077	CallExpression	"fetch_escaped_value ( & p , end , env )"		755840	1					
ANR	756078	Callee	fetch_escaped_value		755840	0					
ANR	756079	Identifier	fetch_escaped_value		755840	0					
ANR	756080	ArgumentList	& p		755840	1					
ANR	756081	Argument	& p		755840	0					
ANR	756082	UnaryOperationExpression	& p		755840	0					
ANR	756083	UnaryOperator	&		755840	0					
ANR	756084	Identifier	p		755840	1					
ANR	756085	Argument	end		755840	1					
ANR	756086	Identifier	end		755840	0					
ANR	756087	Argument	env		755840	2					
ANR	756088	Identifier	env		755840	0					
ANR	756089	IfStatement	if ( v < 0 )		755840	1					
ANR	756090	Condition	v < 0	2459:14:52668:52672	755840	0	True				
ANR	756091	RelationalExpression	v < 0		755840	0		<			
ANR	756092	Identifier	v		755840	0					
ANR	756093	PrimaryExpression	0		755840	1					
ANR	756094	ReturnStatement	return v ;	2459:21:52675:52683	755840	1	True				
ANR	756095	Identifier	v		755840	0					
ANR	756096	ExpressionStatement	c = ( OnigCodePoint ) v	2460:10:52695:52716	755840	2	True				
ANR	756097	AssignmentExpression	c = ( OnigCodePoint ) v		755840	0		=			
ANR	756098	Identifier	c		755840	0					
ANR	756099	CastExpression	( OnigCodePoint ) v		755840	1					
ANR	756100	CastTarget	OnigCodePoint		755840	0					
ANR	756101	Identifier	v		755840	1					
ANR	756102	ExpressionStatement	c &= 0x9f	2462:8:52736:52745	755840	1	True				
ANR	756103	AssignmentExpression	c &= 0x9f		755840	0		&=			
ANR	756104	Identifier	c		755840	0					
ANR	756105	PrimaryExpression	0x9f		755840	1					
ANR	756106	BreakStatement	break ;	2464:6:52761:52766	755840	4	True				
ANR	756107	Label	default :	2468:2:52800:52807	755840	7	True				
ANR	756108	Identifier	default		755840	0					
ANR	756109	CompoundStatement		60:4:1426:1426	755840	8					
ANR	756110	Label	backslash :	2470:4:52819:52828	755840	0	True				
ANR	756111	Identifier	backslash		755840	0					
ANR	756112	ExpressionStatement	"c = conv_backslash_value ( c , env )"	2471:6:52836:52868	755840	1	True				
ANR	756113	AssignmentExpression	"c = conv_backslash_value ( c , env )"		755840	0		=			
ANR	756114	Identifier	c		755840	0					
ANR	756115	CallExpression	"conv_backslash_value ( c , env )"		755840	1					
ANR	756116	Callee	conv_backslash_value		755840	0					
ANR	756117	Identifier	conv_backslash_value		755840	0					
ANR	756118	ArgumentList	c		755840	1					
ANR	756119	Argument	c		755840	0					
ANR	756120	Identifier	c		755840	0					
ANR	756121	Argument	env		755840	1					
ANR	756122	Identifier	env		755840	0					
ANR	756123	BreakStatement	break ;	2473:4:52880:52885	755840	9	True				
ANR	756124	ExpressionStatement	* src = p	2476:2:52894:52902	755840	7	True				
ANR	756125	AssignmentExpression	* src = p		755840	0		=			
ANR	756126	UnaryOperationExpression	* src		755840	0					
ANR	756127	UnaryOperator	*		755840	0					
ANR	756128	Identifier	src		755840	1					
ANR	756129	Identifier	p		755840	1					
ANR	756130	ReturnStatement	return c ;	2477:2:52906:52914	755840	8	True				
ANR	756131	Identifier	c		755840	0					
ANR	756132	ReturnType	static int		755840	1					
ANR	756133	Identifier	fetch_escaped_value		755840	2					
ANR	756134	ParameterList	"UChar * * src , UChar * end , ScanEnv * env"		755840	3					
ANR	756135	Parameter	UChar * * src	2409:20:51347:51357	755840	0	True				
ANR	756136	ParameterType	UChar * *		755840	0					
ANR	756137	Identifier	src		755840	1					
ANR	756138	Parameter	UChar * end	2409:33:51360:51369	755840	1	True				
ANR	756139	ParameterType	UChar *		755840	0					
ANR	756140	Identifier	end		755840	1					
ANR	756141	Parameter	ScanEnv * env	2409:45:51372:51383	755840	2	True				
ANR	756142	ParameterType	ScanEnv *		755840	0					
ANR	756143	Identifier	env		755840	1					
ANR	756144	CFGEntryNode	ENTRY		755840		True				
ANR	756145	CFGExitNode	EXIT		755840		True				
ANR	756146	Symbol	ONIG_SYN_OP_ESC_C_CONTROL		755840						
ANR	756147	Symbol	env -> enc		755840						
ANR	756148	Symbol	* src		755840						
ANR	756149	Symbol	PEND		755840						
ANR	756150	Symbol	IS_SYNTAX_OP2		755840						
ANR	756151	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		755840						
ANR	756152	Symbol	end		755840						
ANR	756153	Symbol	enc		755840						
ANR	756154	Symbol	ONIGERR_END_PATTERN_AT_CONTROL		755840						
ANR	756155	Symbol	ONIGERR_END_PATTERN_AT_META		755840						
ANR	756156	Symbol	c		755840						
ANR	756157	Symbol	ONIGERR_META_CODE_SYNTAX		755840						
ANR	756158	Symbol	ONIGERR_CONTROL_CODE_SYNTAX		755840						
ANR	756159	Symbol	src		755840						
ANR	756160	Symbol	* env		755840						
ANR	756161	Symbol	IS_SYNTAX_OP		755840						
ANR	756162	Symbol	env		755840						
ANR	756163	Symbol	MC_ESC		755840						
ANR	756164	Symbol	env -> syntax		755840						
ANR	756165	Symbol	p		755840						
ANR	756166	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		755840						
ANR	756167	Symbol	v		755840						
ANR	756168	Symbol	fetch_escaped_value		755840						
ANR	756169	Symbol	& p		755840						
ANR	756170	Symbol	conv_backslash_value		755840						
ANR	756171	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		755840						
ANR	756172	DeclStmt									
ANR	756173	Decl							int	"int ( OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env )"	fetch_token
ANR	756174	Function	get_name_end_code_point	2482:0:52999:53238							
ANR	756175	FunctionDef	get_name_end_code_point (OnigCodePoint start)		756174	0					
ANR	756176	CompoundStatement		2484:0:53065:53238	756174	0					
ANR	756177	SwitchStatement	switch ( start )		756174	0					
ANR	756178	Condition	start	2485:10:53077:53081	756174	0	True				
ANR	756179	Identifier	start		756174	0					
ANR	756180	CompoundStatement		2:17:18:18	756174	1					
ANR	756181	Label	case '<' :	2486:2:53088:53096	756174	0	True				
ANR	756182	ReturnStatement	return ( OnigCodePoint ) '>' ;	2486:13:53099:53125	756174	1	True				
ANR	756183	CastExpression	( OnigCodePoint ) '>'		756174	0					
ANR	756184	CastTarget	OnigCodePoint		756174	0					
ANR	756185	PrimaryExpression	'>'		756174	1					
ANR	756186	BreakStatement	break ;	2486:41:53127:53132	756174	2	True				
ANR	756187	Label	case '\\'' :	2487:2:53136:53145	756174	3	True				
ANR	756188	ReturnStatement	return ( OnigCodePoint ) '\\'' ;	2487:13:53147:53174	756174	4	True				
ANR	756189	CastExpression	( OnigCodePoint ) '\\''		756174	0					
ANR	756190	CastTarget	OnigCodePoint		756174	0					
ANR	756191	PrimaryExpression	'\\''		756174	1					
ANR	756192	BreakStatement	break ;	2487:42:53176:53181	756174	5	True				
ANR	756193	Label	default :	2488:2:53185:53192	756174	6	True				
ANR	756194	Identifier	default		756174	0					
ANR	756195	BreakStatement	break ;	2489:4:53198:53203	756174	7	True				
ANR	756196	ReturnStatement	return ( OnigCodePoint ) 0 ;	2492:2:53212:53236	756174	1	True				
ANR	756197	CastExpression	( OnigCodePoint ) 0		756174	0					
ANR	756198	CastTarget	OnigCodePoint		756174	0					
ANR	756199	PrimaryExpression	0		756174	1					
ANR	756200	ReturnType	static OnigCodePoint		756174	1					
ANR	756201	Identifier	get_name_end_code_point		756174	2					
ANR	756202	ParameterList	OnigCodePoint start		756174	3					
ANR	756203	Parameter	OnigCodePoint start	2483:24:53044:53062	756174	0	True				
ANR	756204	ParameterType	OnigCodePoint		756174	0					
ANR	756205	Identifier	start		756174	1					
ANR	756206	CFGEntryNode	ENTRY		756174		True				
ANR	756207	CFGExitNode	EXIT		756174		True				
ANR	756208	Symbol	start		756174						
ANR	756209	Function	fetch_name_with_level	2502:0:53377:55673							
ANR	756210	FunctionDef	"fetch_name_with_level (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int * rlevel)"		756209	0					
ANR	756211	CompoundStatement		2506:0:53539:55673	756209	0					
ANR	756212	IdentifierDeclStatement	"int r , sign , is_num , exist_level ;"	2507:2:53543:53575	756209	0	True				
ANR	756213	IdentifierDecl	r		756209	0					
ANR	756214	IdentifierDeclType	int		756209	0					
ANR	756215	Identifier	r		756209	1					
ANR	756216	IdentifierDecl	sign		756209	1					
ANR	756217	IdentifierDeclType	int		756209	0					
ANR	756218	Identifier	sign		756209	1					
ANR	756219	IdentifierDecl	is_num		756209	2					
ANR	756220	IdentifierDeclType	int		756209	0					
ANR	756221	Identifier	is_num		756209	1					
ANR	756222	IdentifierDecl	exist_level		756209	3					
ANR	756223	IdentifierDeclType	int		756209	0					
ANR	756224	Identifier	exist_level		756209	1					
ANR	756225	IdentifierDeclStatement	OnigCodePoint end_code ;	2508:2:53579:53601	756209	1	True				
ANR	756226	IdentifierDecl	end_code		756209	0					
ANR	756227	IdentifierDeclType	OnigCodePoint		756209	0					
ANR	756228	Identifier	end_code		756209	1					
ANR	756229	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2509:2:53605:53624	756209	2	True				
ANR	756230	IdentifierDecl	c = 0		756209	0					
ANR	756231	IdentifierDeclType	OnigCodePoint		756209	0					
ANR	756232	Identifier	c		756209	1					
ANR	756233	AssignmentExpression	c = 0		756209	2		=			
ANR	756234	Identifier	c		756209	0					
ANR	756235	PrimaryExpression	0		756209	1					
ANR	756236	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2510:2:53628:53655	756209	3	True				
ANR	756237	IdentifierDecl	enc = env -> enc		756209	0					
ANR	756238	IdentifierDeclType	OnigEncoding		756209	0					
ANR	756239	Identifier	enc		756209	1					
ANR	756240	AssignmentExpression	enc = env -> enc		756209	2		=			
ANR	756241	Identifier	enc		756209	0					
ANR	756242	PtrMemberAccess	env -> enc		756209	1					
ANR	756243	Identifier	env		756209	0					
ANR	756244	Identifier	enc		756209	1					
ANR	756245	IdentifierDeclStatement	UChar * name_end ;	2511:2:53659:53674	756209	4	True				
ANR	756246	IdentifierDecl	* name_end		756209	0					
ANR	756247	IdentifierDeclType	UChar *		756209	0					
ANR	756248	Identifier	name_end		756209	1					
ANR	756249	IdentifierDeclStatement	UChar * pnum_head ;	2512:2:53678:53694	756209	5	True				
ANR	756250	IdentifierDecl	* pnum_head		756209	0					
ANR	756251	IdentifierDeclType	UChar *		756209	0					
ANR	756252	Identifier	pnum_head		756209	1					
ANR	756253	IdentifierDeclStatement	UChar * p = * src ;	2513:2:53698:53713	756209	6	True				
ANR	756254	IdentifierDecl	* p = * src		756209	0					
ANR	756255	IdentifierDeclType	UChar *		756209	0					
ANR	756256	Identifier	p		756209	1					
ANR	756257	AssignmentExpression	* p = * src		756209	2		=			
ANR	756258	Identifier	p		756209	0					
ANR	756259	UnaryOperationExpression	* src		756209	1					
ANR	756260	UnaryOperator	*		756209	0					
ANR	756261	Identifier	src		756209	1					
ANR	756262	ExpressionStatement	PFETCH_READY	2514:2:53717:53729	756209	7	True				
ANR	756263	Identifier	PFETCH_READY		756209	0					
ANR	756264	ExpressionStatement	* rback_num = 0	2516:2:53734:53748	756209	8	True				
ANR	756265	AssignmentExpression	* rback_num = 0		756209	0		=			
ANR	756266	UnaryOperationExpression	* rback_num		756209	0					
ANR	756267	UnaryOperator	*		756209	0					
ANR	756268	Identifier	rback_num		756209	1					
ANR	756269	PrimaryExpression	0		756209	1					
ANR	756270	ExpressionStatement	is_num = exist_level = 0	2517:2:53752:53776	756209	9	True				
ANR	756271	AssignmentExpression	is_num = exist_level = 0		756209	0		=			
ANR	756272	Identifier	is_num		756209	0					
ANR	756273	AssignmentExpression	exist_level = 0		756209	1		=			
ANR	756274	Identifier	exist_level		756209	0					
ANR	756275	PrimaryExpression	0		756209	1					
ANR	756276	ExpressionStatement	sign = 1	2518:2:53780:53788	756209	10	True				
ANR	756277	AssignmentExpression	sign = 1		756209	0		=			
ANR	756278	Identifier	sign		756209	0					
ANR	756279	PrimaryExpression	1		756209	1					
ANR	756280	ExpressionStatement	pnum_head = * src	2519:2:53792:53808	756209	11	True				
ANR	756281	AssignmentExpression	pnum_head = * src		756209	0		=			
ANR	756282	Identifier	pnum_head		756209	0					
ANR	756283	UnaryOperationExpression	* src		756209	1					
ANR	756284	UnaryOperator	*		756209	0					
ANR	756285	Identifier	src		756209	1					
ANR	756286	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2521:2:53813:53859	756209	12	True				
ANR	756287	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		756209	0		=			
ANR	756288	Identifier	end_code		756209	0					
ANR	756289	CallExpression	get_name_end_code_point ( start_code )		756209	1					
ANR	756290	Callee	get_name_end_code_point		756209	0					
ANR	756291	Identifier	get_name_end_code_point		756209	0					
ANR	756292	ArgumentList	start_code		756209	1					
ANR	756293	Argument	start_code		756209	0					
ANR	756294	Identifier	start_code		756209	0					
ANR	756295	ExpressionStatement	name_end = end	2523:2:53864:53878	756209	13	True				
ANR	756296	AssignmentExpression	name_end = end		756209	0		=			
ANR	756297	Identifier	name_end		756209	0					
ANR	756298	Identifier	end		756209	1					
ANR	756299	ExpressionStatement	r = 0	2524:2:53882:53887	756209	14	True				
ANR	756300	AssignmentExpression	r = 0		756209	0		=			
ANR	756301	Identifier	r		756209	0					
ANR	756302	PrimaryExpression	0		756209	1					
ANR	756303	IfStatement	if ( PEND )		756209	15					
ANR	756304	Condition	PEND	2525:6:53895:53898	756209	0	True				
ANR	756305	Identifier	PEND		756209	0					
ANR	756306	CompoundStatement		20:12:361:361	756209	1					
ANR	756307	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2526:4:53907:53938	756209	0	True				
ANR	756308	Identifier	ONIGERR_EMPTY_GROUP_NAME		756209	0					
ANR	756309	ElseStatement	else		756209	0					
ANR	756310	CompoundStatement		23:7:411:411	756209	0					
ANR	756311	ExpressionStatement	PFETCH ( c )	2529:4:53957:53966	756209	0	True				
ANR	756312	CallExpression	PFETCH ( c )		756209	0					
ANR	756313	Callee	PFETCH		756209	0					
ANR	756314	Identifier	PFETCH		756209	0					
ANR	756315	ArgumentList	c		756209	1					
ANR	756316	Argument	c		756209	0					
ANR	756317	Identifier	c		756209	0					
ANR	756318	IfStatement	if ( c == end_code )		756209	1					
ANR	756319	Condition	c == end_code	2530:8:53976:53988	756209	0	True				
ANR	756320	EqualityExpression	c == end_code		756209	0		==			
ANR	756321	Identifier	c		756209	0					
ANR	756322	Identifier	end_code		756209	1					
ANR	756323	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2531:6:53997:54028	756209	1	True				
ANR	756324	Identifier	ONIGERR_EMPTY_GROUP_NAME		756209	0					
ANR	756325	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		756209	2					
ANR	756326	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2533:8:54039:54067	756209	0	True				
ANR	756327	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		756209	0					
ANR	756328	Callee	ONIGENC_IS_CODE_DIGIT		756209	0					
ANR	756329	Identifier	ONIGENC_IS_CODE_DIGIT		756209	0					
ANR	756330	ArgumentList	enc		756209	1					
ANR	756331	Argument	enc		756209	0					
ANR	756332	Identifier	enc		756209	0					
ANR	756333	Argument	c		756209	1					
ANR	756334	Identifier	c		756209	0					
ANR	756335	CompoundStatement		28:39:530:530	756209	1					
ANR	756336	ExpressionStatement	is_num = 1	2534:6:54078:54088	756209	0	True				
ANR	756337	AssignmentExpression	is_num = 1		756209	0		=			
ANR	756338	Identifier	is_num		756209	0					
ANR	756339	PrimaryExpression	1		756209	1					
ANR	756340	ElseStatement	else		756209	0					
ANR	756341	IfStatement	if ( c == '-' )		756209	0					
ANR	756342	Condition	c == '-'	2536:13:54109:54116	756209	0	True				
ANR	756343	EqualityExpression	c == '-'		756209	0		==			
ANR	756344	Identifier	c		756209	0					
ANR	756345	PrimaryExpression	'-'		756209	1					
ANR	756346	CompoundStatement		31:23:579:579	756209	1					
ANR	756347	ExpressionStatement	is_num = 2	2537:6:54127:54137	756209	0	True				
ANR	756348	AssignmentExpression	is_num = 2		756209	0		=			
ANR	756349	Identifier	is_num		756209	0					
ANR	756350	PrimaryExpression	2		756209	1					
ANR	756351	ExpressionStatement	sign = - 1	2538:6:54145:54154	756209	1	True				
ANR	756352	AssignmentExpression	sign = - 1		756209	0		=			
ANR	756353	Identifier	sign		756209	0					
ANR	756354	UnaryOperationExpression	- 1		756209	1					
ANR	756355	UnaryOperator	-		756209	0					
ANR	756356	PrimaryExpression	1		756209	1					
ANR	756357	ExpressionStatement	pnum_head = p	2539:6:54162:54175	756209	2	True				
ANR	756358	AssignmentExpression	pnum_head = p		756209	0		=			
ANR	756359	Identifier	pnum_head		756209	0					
ANR	756360	Identifier	p		756209	1					
ANR	756361	ElseStatement	else		756209	0					
ANR	756362	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		756209	0					
ANR	756363	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2541:13:54196:54224	756209	0	True				
ANR	756364	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		756209	0					
ANR	756365	UnaryOperator	!		756209	0					
ANR	756366	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		756209	1					
ANR	756367	Callee	ONIGENC_IS_CODE_WORD		756209	0					
ANR	756368	Identifier	ONIGENC_IS_CODE_WORD		756209	0					
ANR	756369	ArgumentList	enc		756209	1					
ANR	756370	Argument	enc		756209	0					
ANR	756371	Identifier	enc		756209	0					
ANR	756372	Argument	c		756209	1					
ANR	756373	Identifier	c		756209	0					
ANR	756374	CompoundStatement		36:44:687:687	756209	1					
ANR	756375	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2542:6:54235:54273	756209	0	True				
ANR	756376	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756209	0		=			
ANR	756377	Identifier	r		756209	0					
ANR	756378	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756209	1					
ANR	756379	WhileStatement	while ( ! PEND )		756209	16					
ANR	756380	Condition	! PEND	2546:9:54295:54299	756209	0	True				
ANR	756381	UnaryOperationExpression	! PEND		756209	0					
ANR	756382	UnaryOperator	!		756209	0					
ANR	756383	Identifier	PEND		756209	1					
ANR	756384	CompoundStatement		41:16:762:762	756209	1					
ANR	756385	ExpressionStatement	name_end = p	2547:4:54308:54320	756209	0	True				
ANR	756386	AssignmentExpression	name_end = p		756209	0		=			
ANR	756387	Identifier	name_end		756209	0					
ANR	756388	Identifier	p		756209	1					
ANR	756389	ExpressionStatement	PFETCH ( c )	2548:4:54326:54335	756209	1	True				
ANR	756390	CallExpression	PFETCH ( c )		756209	0					
ANR	756391	Callee	PFETCH		756209	0					
ANR	756392	Identifier	PFETCH		756209	0					
ANR	756393	ArgumentList	c		756209	1					
ANR	756394	Argument	c		756209	0					
ANR	756395	Identifier	c		756209	0					
ANR	756396	IfStatement	if ( c == end_code || c == ')' || c == '+' || c == '-' )		756209	2					
ANR	756397	Condition	c == end_code || c == ')' || c == '+' || c == '-'	2549:8:54345:54393	756209	0	True				
ANR	756398	OrExpression	c == end_code || c == ')' || c == '+' || c == '-'		756209	0		||			
ANR	756399	EqualityExpression	c == end_code		756209	0		==			
ANR	756400	Identifier	c		756209	0					
ANR	756401	Identifier	end_code		756209	1					
ANR	756402	OrExpression	c == ')' || c == '+' || c == '-'		756209	1		||			
ANR	756403	EqualityExpression	c == ')'		756209	0		==			
ANR	756404	Identifier	c		756209	0					
ANR	756405	PrimaryExpression	')'		756209	1					
ANR	756406	OrExpression	c == '+' || c == '-'		756209	1		||			
ANR	756407	EqualityExpression	c == '+'		756209	0		==			
ANR	756408	Identifier	c		756209	0					
ANR	756409	PrimaryExpression	'+'		756209	1					
ANR	756410	EqualityExpression	c == '-'		756209	1		==			
ANR	756411	Identifier	c		756209	0					
ANR	756412	PrimaryExpression	'-'		756209	1					
ANR	756413	CompoundStatement		44:59:856:856	756209	1					
ANR	756414	IfStatement	if ( is_num == 2 )		756209	0					
ANR	756415	Condition	is_num == 2	2550:10:54408:54418	756209	0	True				
ANR	756416	EqualityExpression	is_num == 2		756209	0		==			
ANR	756417	Identifier	is_num		756209	0					
ANR	756418	PrimaryExpression	2		756209	1					
ANR	756419	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2550:24:54422:54452	756209	1	True				
ANR	756420	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756209	0		=			
ANR	756421	Identifier	r		756209	0					
ANR	756422	Identifier	ONIGERR_INVALID_GROUP_NAME		756209	1					
ANR	756423	BreakStatement	break ;	2551:6:54460:54465	756209	1	True				
ANR	756424	IfStatement	if ( is_num != 0 )		756209	3					
ANR	756425	Condition	is_num != 0	2554:8:54482:54492	756209	0	True				
ANR	756426	EqualityExpression	is_num != 0		756209	0		!=			
ANR	756427	Identifier	is_num		756209	0					
ANR	756428	PrimaryExpression	0		756209	1					
ANR	756429	CompoundStatement		49:21:955:955	756209	1					
ANR	756430	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		756209	0					
ANR	756431	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2555:10:54507:54535	756209	0	True				
ANR	756432	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		756209	0					
ANR	756433	Callee	ONIGENC_IS_CODE_DIGIT		756209	0					
ANR	756434	Identifier	ONIGENC_IS_CODE_DIGIT		756209	0					
ANR	756435	ArgumentList	enc		756209	1					
ANR	756436	Argument	enc		756209	0					
ANR	756437	Identifier	enc		756209	0					
ANR	756438	Argument	c		756209	1					
ANR	756439	Identifier	c		756209	0					
ANR	756440	CompoundStatement		50:41:998:998	756209	1					
ANR	756441	ExpressionStatement	is_num = 1	2556:8:54548:54558	756209	0	True				
ANR	756442	AssignmentExpression	is_num = 1		756209	0		=			
ANR	756443	Identifier	is_num		756209	0					
ANR	756444	PrimaryExpression	1		756209	1					
ANR	756445	ElseStatement	else		756209	0					
ANR	756446	CompoundStatement		53:11:1039:1039	756209	0					
ANR	756447	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2559:8:54589:54619	756209	0	True				
ANR	756448	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756209	0		=			
ANR	756449	Identifier	r		756209	0					
ANR	756450	Identifier	ONIGERR_INVALID_GROUP_NAME		756209	1					
ANR	756451	ExpressionStatement	is_num = 0	2560:8:54629:54639	756209	1	True				
ANR	756452	AssignmentExpression	is_num = 0		756209	0		=			
ANR	756453	Identifier	is_num		756209	0					
ANR	756454	PrimaryExpression	0		756209	1					
ANR	756455	ElseStatement	else		756209	0					
ANR	756456	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		756209	0					
ANR	756457	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2563:13:54668:54696	756209	0	True				
ANR	756458	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		756209	0					
ANR	756459	UnaryOperator	!		756209	0					
ANR	756460	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		756209	1					
ANR	756461	Callee	ONIGENC_IS_CODE_WORD		756209	0					
ANR	756462	Identifier	ONIGENC_IS_CODE_WORD		756209	0					
ANR	756463	ArgumentList	enc		756209	1					
ANR	756464	Argument	enc		756209	0					
ANR	756465	Identifier	enc		756209	0					
ANR	756466	Argument	c		756209	1					
ANR	756467	Identifier	c		756209	0					
ANR	756468	CompoundStatement		58:44:1159:1159	756209	1					
ANR	756469	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2564:6:54707:54745	756209	0	True				
ANR	756470	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756209	0		=			
ANR	756471	Identifier	r		756209	0					
ANR	756472	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756209	1					
ANR	756473	IfStatement	if ( r == 0 && c != end_code )		756209	17					
ANR	756474	Condition	r == 0 && c != end_code	2568:6:54764:54786	756209	0	True				
ANR	756475	AndExpression	r == 0 && c != end_code		756209	0		&&			
ANR	756476	EqualityExpression	r == 0		756209	0		==			
ANR	756477	Identifier	r		756209	0					
ANR	756478	PrimaryExpression	0		756209	1					
ANR	756479	EqualityExpression	c != end_code		756209	1		!=			
ANR	756480	Identifier	c		756209	0					
ANR	756481	Identifier	end_code		756209	1					
ANR	756482	CompoundStatement		63:31:1249:1249	756209	1					
ANR	756483	IfStatement	if ( c == '+' || c == '-' )		756209	0					
ANR	756484	Condition	c == '+' || c == '-'	2569:8:54799:54818	756209	0	True				
ANR	756485	OrExpression	c == '+' || c == '-'		756209	0		||			
ANR	756486	EqualityExpression	c == '+'		756209	0		==			
ANR	756487	Identifier	c		756209	0					
ANR	756488	PrimaryExpression	'+'		756209	1					
ANR	756489	EqualityExpression	c == '-'		756209	1		==			
ANR	756490	Identifier	c		756209	0					
ANR	756491	PrimaryExpression	'-'		756209	1					
ANR	756492	CompoundStatement		66:6:1306:1336	756209	1					
ANR	756493	IdentifierDeclStatement	int level ;	2570:6:54829:54838	756209	0	True				
ANR	756494	IdentifierDecl	level		756209	0					
ANR	756495	IdentifierDeclType	int		756209	0					
ANR	756496	Identifier	level		756209	1					
ANR	756497	IdentifierDeclStatement	int flag = ( c == '-' ? - 1 : 1 ) ;	2571:6:54846:54876	756209	1	True				
ANR	756498	IdentifierDecl	flag = ( c == '-' ? - 1 : 1 )		756209	0					
ANR	756499	IdentifierDeclType	int		756209	0					
ANR	756500	Identifier	flag		756209	1					
ANR	756501	AssignmentExpression	flag = ( c == '-' ? - 1 : 1 )		756209	2		=			
ANR	756502	Identifier	flag		756209	0					
ANR	756503	ConditionalExpression	c == '-' ? - 1 : 1		756209	1					
ANR	756504	Condition	c == '-'		756209	0					
ANR	756505	EqualityExpression	c == '-'		756209	0		==			
ANR	756506	Identifier	c		756209	0					
ANR	756507	PrimaryExpression	'-'		756209	1					
ANR	756508	UnaryOperationExpression	- 1		756209	1					
ANR	756509	UnaryOperator	-		756209	0					
ANR	756510	PrimaryExpression	1		756209	1					
ANR	756511	PrimaryExpression	1		756209	2					
ANR	756512	ExpressionStatement	PFETCH ( c )	2573:6:54885:54894	756209	2	True				
ANR	756513	CallExpression	PFETCH ( c )		756209	0					
ANR	756514	Callee	PFETCH		756209	0					
ANR	756515	Identifier	PFETCH		756209	0					
ANR	756516	ArgumentList	c		756209	1					
ANR	756517	Argument	c		756209	0					
ANR	756518	Identifier	c		756209	0					
ANR	756519	IfStatement	"if ( ! ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		756209	3					
ANR	756520	Condition	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"	2574:10:54906:54936	756209	0	True				
ANR	756521	UnaryOperationExpression	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"		756209	0					
ANR	756522	UnaryOperator	!		756209	0					
ANR	756523	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		756209	1					
ANR	756524	Callee	ONIGENC_IS_CODE_DIGIT		756209	0					
ANR	756525	Identifier	ONIGENC_IS_CODE_DIGIT		756209	0					
ANR	756526	ArgumentList	enc		756209	1					
ANR	756527	Argument	enc		756209	0					
ANR	756528	Identifier	enc		756209	0					
ANR	756529	Argument	c		756209	1					
ANR	756530	Identifier	c		756209	0					
ANR	756531	GotoStatement	goto err ;	2574:43:54939:54947	756209	1	True				
ANR	756532	Identifier	err		756209	0					
ANR	756533	ExpressionStatement	PUNFETCH	2575:6:54955:54963	756209	4	True				
ANR	756534	Identifier	PUNFETCH		756209	0					
ANR	756535	ExpressionStatement	"level = onig_scan_unsigned_number ( & p , end , enc )"	2576:6:54971:55018	756209	5	True				
ANR	756536	AssignmentExpression	"level = onig_scan_unsigned_number ( & p , end , enc )"		756209	0		=			
ANR	756537	Identifier	level		756209	0					
ANR	756538	CallExpression	"onig_scan_unsigned_number ( & p , end , enc )"		756209	1					
ANR	756539	Callee	onig_scan_unsigned_number		756209	0					
ANR	756540	Identifier	onig_scan_unsigned_number		756209	0					
ANR	756541	ArgumentList	& p		756209	1					
ANR	756542	Argument	& p		756209	0					
ANR	756543	UnaryOperationExpression	& p		756209	0					
ANR	756544	UnaryOperator	&		756209	0					
ANR	756545	Identifier	p		756209	1					
ANR	756546	Argument	end		756209	1					
ANR	756547	Identifier	end		756209	0					
ANR	756548	Argument	enc		756209	2					
ANR	756549	Identifier	enc		756209	0					
ANR	756550	IfStatement	if ( level < 0 )		756209	6					
ANR	756551	Condition	level < 0	2577:10:55030:55038	756209	0	True				
ANR	756552	RelationalExpression	level < 0		756209	0		<			
ANR	756553	Identifier	level		756209	0					
ANR	756554	PrimaryExpression	0		756209	1					
ANR	756555	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2577:21:55041:55070	756209	1	True				
ANR	756556	Identifier	ONIGERR_TOO_BIG_NUMBER		756209	0					
ANR	756557	ExpressionStatement	* rlevel = ( level * flag )	2578:6:55078:55102	756209	7	True				
ANR	756558	AssignmentExpression	* rlevel = ( level * flag )		756209	0		=			
ANR	756559	UnaryOperationExpression	* rlevel		756209	0					
ANR	756560	UnaryOperator	*		756209	0					
ANR	756561	Identifier	rlevel		756209	1					
ANR	756562	MultiplicativeExpression	level * flag		756209	1		*			
ANR	756563	Identifier	level		756209	0					
ANR	756564	Identifier	flag		756209	1					
ANR	756565	ExpressionStatement	exist_level = 1	2579:6:55110:55125	756209	8	True				
ANR	756566	AssignmentExpression	exist_level = 1		756209	0		=			
ANR	756567	Identifier	exist_level		756209	0					
ANR	756568	PrimaryExpression	1		756209	1					
ANR	756569	ExpressionStatement	PFETCH ( c )	2581:6:55134:55143	756209	9	True				
ANR	756570	CallExpression	PFETCH ( c )		756209	0					
ANR	756571	Callee	PFETCH		756209	0					
ANR	756572	Identifier	PFETCH		756209	0					
ANR	756573	ArgumentList	c		756209	1					
ANR	756574	Argument	c		756209	0					
ANR	756575	Identifier	c		756209	0					
ANR	756576	IfStatement	if ( c == end_code )		756209	10					
ANR	756577	Condition	c == end_code	2582:10:55155:55167	756209	0	True				
ANR	756578	EqualityExpression	c == end_code		756209	0		==			
ANR	756579	Identifier	c		756209	0					
ANR	756580	Identifier	end_code		756209	1					
ANR	756581	GotoStatement	goto end ;	2583:1:55171:55179	756209	1	True				
ANR	756582	Identifier	end		756209	0					
ANR	756583	Label	err :	2586:2:55190:55193	756209	1	True				
ANR	756584	Identifier	err		756209	0					
ANR	756585	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2587:4:55199:55229	756209	2	True				
ANR	756586	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756209	0		=			
ANR	756587	Identifier	r		756209	0					
ANR	756588	Identifier	ONIGERR_INVALID_GROUP_NAME		756209	1					
ANR	756589	ExpressionStatement	name_end = end	2588:4:55235:55249	756209	3	True				
ANR	756590	AssignmentExpression	name_end = end		756209	0		=			
ANR	756591	Identifier	name_end		756209	0					
ANR	756592	Identifier	end		756209	1					
ANR	756593	Label	end :	2591:1:55257:55260	756209	18	True				
ANR	756594	Identifier	end		756209	0					
ANR	756595	IfStatement	if ( r == 0 )		756209	19					
ANR	756596	Condition	r == 0	2592:6:55268:55273	756209	0	True				
ANR	756597	EqualityExpression	r == 0		756209	0		==			
ANR	756598	Identifier	r		756209	0					
ANR	756599	PrimaryExpression	0		756209	1					
ANR	756600	CompoundStatement		87:14:1736:1736	756209	1					
ANR	756601	IfStatement	if ( is_num != 0 )		756209	0					
ANR	756602	Condition	is_num != 0	2593:8:55286:55296	756209	0	True				
ANR	756603	EqualityExpression	is_num != 0		756209	0		!=			
ANR	756604	Identifier	is_num		756209	0					
ANR	756605	PrimaryExpression	0		756209	1					
ANR	756606	CompoundStatement		88:21:1759:1759	756209	1					
ANR	756607	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2594:6:55307:55372	756209	0	True				
ANR	756608	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		756209	0		=			
ANR	756609	UnaryOperationExpression	* rback_num		756209	0					
ANR	756610	UnaryOperator	*		756209	0					
ANR	756611	Identifier	rback_num		756209	1					
ANR	756612	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		756209	1					
ANR	756613	Callee	onig_scan_unsigned_number		756209	0					
ANR	756614	Identifier	onig_scan_unsigned_number		756209	0					
ANR	756615	ArgumentList	& pnum_head		756209	1					
ANR	756616	Argument	& pnum_head		756209	0					
ANR	756617	UnaryOperationExpression	& pnum_head		756209	0					
ANR	756618	UnaryOperator	&		756209	0					
ANR	756619	Identifier	pnum_head		756209	1					
ANR	756620	Argument	name_end		756209	1					
ANR	756621	Identifier	name_end		756209	0					
ANR	756622	Argument	enc		756209	2					
ANR	756623	Identifier	enc		756209	0					
ANR	756624	IfStatement	if ( * rback_num < 0 )		756209	1					
ANR	756625	Condition	* rback_num < 0	2595:10:55384:55397	756209	0	True				
ANR	756626	RelationalExpression	* rback_num < 0		756209	0		<			
ANR	756627	UnaryOperationExpression	* rback_num		756209	0					
ANR	756628	UnaryOperator	*		756209	0					
ANR	756629	Identifier	rback_num		756209	1					
ANR	756630	PrimaryExpression	0		756209	1					
ANR	756631	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2595:26:55400:55429	756209	1	True				
ANR	756632	Identifier	ONIGERR_TOO_BIG_NUMBER		756209	0					
ANR	756633	ElseStatement	else		756209	0					
ANR	756634	IfStatement	if ( * rback_num == 0 )		756209	0					
ANR	756635	Condition	* rback_num == 0	2596:15:55446:55460	756209	0	True				
ANR	756636	EqualityExpression	* rback_num == 0		756209	0		==			
ANR	756637	UnaryOperationExpression	* rback_num		756209	0					
ANR	756638	UnaryOperator	*		756209	0					
ANR	756639	Identifier	rback_num		756209	1					
ANR	756640	PrimaryExpression	0		756209	1					
ANR	756641	GotoStatement	goto err ;	2596:32:55463:55471	756209	1	True				
ANR	756642	Identifier	err		756209	0					
ANR	756643	ExpressionStatement	* rback_num *= sign	2598:6:55480:55498	756209	2	True				
ANR	756644	AssignmentExpression	* rback_num *= sign		756209	0		*=			
ANR	756645	UnaryOperationExpression	* rback_num		756209	0					
ANR	756646	UnaryOperator	*		756209	0					
ANR	756647	Identifier	rback_num		756209	1					
ANR	756648	Identifier	sign		756209	1					
ANR	756649	ExpressionStatement	* rname_end = name_end	2601:4:55511:55532	756209	1	True				
ANR	756650	AssignmentExpression	* rname_end = name_end		756209	0		=			
ANR	756651	UnaryOperationExpression	* rname_end		756209	0					
ANR	756652	UnaryOperator	*		756209	0					
ANR	756653	Identifier	rname_end		756209	1					
ANR	756654	Identifier	name_end		756209	1					
ANR	756655	ExpressionStatement	* src = p	2602:4:55538:55546	756209	2	True				
ANR	756656	AssignmentExpression	* src = p		756209	0		=			
ANR	756657	UnaryOperationExpression	* src		756209	0					
ANR	756658	UnaryOperator	*		756209	0					
ANR	756659	Identifier	src		756209	1					
ANR	756660	Identifier	p		756209	1					
ANR	756661	ReturnStatement	return ( exist_level ? 1 : 0 ) ;	2603:4:55552:55580	756209	3	True				
ANR	756662	ConditionalExpression	exist_level ? 1 : 0		756209	0					
ANR	756663	Condition	exist_level		756209	0					
ANR	756664	Identifier	exist_level		756209	0					
ANR	756665	PrimaryExpression	1		756209	1					
ANR	756666	PrimaryExpression	0		756209	2					
ANR	756667	ElseStatement	else		756209	0					
ANR	756668	CompoundStatement		100:7:2053:2053	756209	0					
ANR	756669	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2606:4:55599:55653	756209	0	True				
ANR	756670	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		756209	0					
ANR	756671	Callee	onig_scan_env_set_error_string		756209	0					
ANR	756672	Identifier	onig_scan_env_set_error_string		756209	0					
ANR	756673	ArgumentList	env		756209	1					
ANR	756674	Argument	env		756209	0					
ANR	756675	Identifier	env		756209	0					
ANR	756676	Argument	r		756209	1					
ANR	756677	Identifier	r		756209	0					
ANR	756678	Argument	* src		756209	2					
ANR	756679	UnaryOperationExpression	* src		756209	0					
ANR	756680	UnaryOperator	*		756209	0					
ANR	756681	Identifier	src		756209	1					
ANR	756682	Argument	name_end		756209	3					
ANR	756683	Identifier	name_end		756209	0					
ANR	756684	ReturnStatement	return r ;	2607:4:55659:55667	756209	1	True				
ANR	756685	Identifier	r		756209	0					
ANR	756686	ReturnType	static int		756209	1					
ANR	756687	Identifier	fetch_name_with_level		756209	2					
ANR	756688	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int * rlevel"		756209	3					
ANR	756689	Parameter	OnigCodePoint start_code	2503:22:53410:53433	756209	0	True				
ANR	756690	ParameterType	OnigCodePoint		756209	0					
ANR	756691	Identifier	start_code		756209	1					
ANR	756692	Parameter	UChar * * src	2503:48:53436:53446	756209	1	True				
ANR	756693	ParameterType	UChar * *		756209	0					
ANR	756694	Identifier	src		756209	1					
ANR	756695	Parameter	UChar * end	2503:61:53449:53458	756209	2	True				
ANR	756696	ParameterType	UChar *		756209	0					
ANR	756697	Identifier	end		756209	1					
ANR	756698	Parameter	UChar * * rname_end	2504:8:53469:53485	756209	3	True				
ANR	756699	ParameterType	UChar * *		756209	0					
ANR	756700	Identifier	rname_end		756209	1					
ANR	756701	Parameter	ScanEnv * env	2504:27:53488:53499	756209	4	True				
ANR	756702	ParameterType	ScanEnv *		756209	0					
ANR	756703	Identifier	env		756209	1					
ANR	756704	Parameter	int * rback_num	2505:8:53510:53523	756209	5	True				
ANR	756705	ParameterType	int *		756209	0					
ANR	756706	Identifier	rback_num		756209	1					
ANR	756707	Parameter	int * rlevel	2505:24:53526:53536	756209	6	True				
ANR	756708	ParameterType	int *		756209	0					
ANR	756709	Identifier	rlevel		756209	1					
ANR	756710	CFGEntryNode	ENTRY		756209		True				
ANR	756711	CFGExitNode	EXIT		756209		True				
ANR	756712	Symbol	ONIGERR_EMPTY_GROUP_NAME		756209						
ANR	756713	Symbol	end_code		756209						
ANR	756714	Symbol	flag		756209						
ANR	756715	Symbol	* rname_end		756209						
ANR	756716	Symbol	ONIGENC_IS_CODE_DIGIT		756209						
ANR	756717	Symbol	sign		756209						
ANR	756718	Symbol	rback_num		756209						
ANR	756719	Symbol	env -> enc		756209						
ANR	756720	Symbol	ONIGENC_IS_CODE_WORD		756209						
ANR	756721	Symbol	ONIGERR_INVALID_GROUP_NAME		756209						
ANR	756722	Symbol	onig_scan_unsigned_number		756209						
ANR	756723	Symbol	exist_level		756209						
ANR	756724	Symbol	* src		756209						
ANR	756725	Symbol	PEND		756209						
ANR	756726	Symbol	& pnum_head		756209						
ANR	756727	Symbol	end		756209						
ANR	756728	Symbol	enc		756209						
ANR	756729	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756209						
ANR	756730	Symbol	start_code		756209						
ANR	756731	Symbol	name_end		756209						
ANR	756732	Symbol	is_num		756209						
ANR	756733	Symbol	c		756209						
ANR	756734	Symbol	ONIGERR_TOO_BIG_NUMBER		756209						
ANR	756735	Symbol	src		756209						
ANR	756736	Symbol	level		756209						
ANR	756737	Symbol	* env		756209						
ANR	756738	Symbol	rname_end		756209						
ANR	756739	Symbol	get_name_end_code_point		756209						
ANR	756740	Symbol	* rlevel		756209						
ANR	756741	Symbol	env		756209						
ANR	756742	Symbol	p		756209						
ANR	756743	Symbol	r		756209						
ANR	756744	Symbol	* rback_num		756209						
ANR	756745	Symbol	& p		756209						
ANR	756746	Symbol	rlevel		756209						
ANR	756747	Symbol	pnum_head		756209						
ANR	756748	Function	fetch_name	2616:0:55818:58207							
ANR	756749	FunctionDef	"fetch_name (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref)"		756748	0					
ANR	756750	CompoundStatement		2619:0:55953:58207	756748	0					
ANR	756751	IdentifierDeclStatement	"int r , is_num , sign ;"	2620:2:55957:55976	756748	0	True				
ANR	756752	IdentifierDecl	r		756748	0					
ANR	756753	IdentifierDeclType	int		756748	0					
ANR	756754	Identifier	r		756748	1					
ANR	756755	IdentifierDecl	is_num		756748	1					
ANR	756756	IdentifierDeclType	int		756748	0					
ANR	756757	Identifier	is_num		756748	1					
ANR	756758	IdentifierDecl	sign		756748	2					
ANR	756759	IdentifierDeclType	int		756748	0					
ANR	756760	Identifier	sign		756748	1					
ANR	756761	IdentifierDeclStatement	OnigCodePoint end_code ;	2621:2:55980:56002	756748	1	True				
ANR	756762	IdentifierDecl	end_code		756748	0					
ANR	756763	IdentifierDeclType	OnigCodePoint		756748	0					
ANR	756764	Identifier	end_code		756748	1					
ANR	756765	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2622:2:56006:56025	756748	2	True				
ANR	756766	IdentifierDecl	c = 0		756748	0					
ANR	756767	IdentifierDeclType	OnigCodePoint		756748	0					
ANR	756768	Identifier	c		756748	1					
ANR	756769	AssignmentExpression	c = 0		756748	2		=			
ANR	756770	Identifier	c		756748	0					
ANR	756771	PrimaryExpression	0		756748	1					
ANR	756772	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2623:2:56029:56056	756748	3	True				
ANR	756773	IdentifierDecl	enc = env -> enc		756748	0					
ANR	756774	IdentifierDeclType	OnigEncoding		756748	0					
ANR	756775	Identifier	enc		756748	1					
ANR	756776	AssignmentExpression	enc = env -> enc		756748	2		=			
ANR	756777	Identifier	enc		756748	0					
ANR	756778	PtrMemberAccess	env -> enc		756748	1					
ANR	756779	Identifier	env		756748	0					
ANR	756780	Identifier	enc		756748	1					
ANR	756781	IdentifierDeclStatement	UChar * name_end ;	2624:2:56060:56075	756748	4	True				
ANR	756782	IdentifierDecl	* name_end		756748	0					
ANR	756783	IdentifierDeclType	UChar *		756748	0					
ANR	756784	Identifier	name_end		756748	1					
ANR	756785	IdentifierDeclStatement	UChar * pnum_head ;	2625:2:56079:56095	756748	5	True				
ANR	756786	IdentifierDecl	* pnum_head		756748	0					
ANR	756787	IdentifierDeclType	UChar *		756748	0					
ANR	756788	Identifier	pnum_head		756748	1					
ANR	756789	IdentifierDeclStatement	UChar * p = * src ;	2626:2:56099:56114	756748	6	True				
ANR	756790	IdentifierDecl	* p = * src		756748	0					
ANR	756791	IdentifierDeclType	UChar *		756748	0					
ANR	756792	Identifier	p		756748	1					
ANR	756793	AssignmentExpression	* p = * src		756748	2		=			
ANR	756794	Identifier	p		756748	0					
ANR	756795	UnaryOperationExpression	* src		756748	1					
ANR	756796	UnaryOperator	*		756748	0					
ANR	756797	Identifier	src		756748	1					
ANR	756798	ExpressionStatement	* rback_num = 0	2628:2:56119:56133	756748	7	True				
ANR	756799	AssignmentExpression	* rback_num = 0		756748	0		=			
ANR	756800	UnaryOperationExpression	* rback_num		756748	0					
ANR	756801	UnaryOperator	*		756748	0					
ANR	756802	Identifier	rback_num		756748	1					
ANR	756803	PrimaryExpression	0		756748	1					
ANR	756804	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2630:2:56138:56184	756748	8	True				
ANR	756805	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		756748	0		=			
ANR	756806	Identifier	end_code		756748	0					
ANR	756807	CallExpression	get_name_end_code_point ( start_code )		756748	1					
ANR	756808	Callee	get_name_end_code_point		756748	0					
ANR	756809	Identifier	get_name_end_code_point		756748	0					
ANR	756810	ArgumentList	start_code		756748	1					
ANR	756811	Argument	start_code		756748	0					
ANR	756812	Identifier	start_code		756748	0					
ANR	756813	ExpressionStatement	name_end = end	2632:2:56189:56203	756748	9	True				
ANR	756814	AssignmentExpression	name_end = end		756748	0		=			
ANR	756815	Identifier	name_end		756748	0					
ANR	756816	Identifier	end		756748	1					
ANR	756817	ExpressionStatement	pnum_head = * src	2633:2:56207:56223	756748	10	True				
ANR	756818	AssignmentExpression	pnum_head = * src		756748	0		=			
ANR	756819	Identifier	pnum_head		756748	0					
ANR	756820	UnaryOperationExpression	* src		756748	1					
ANR	756821	UnaryOperator	*		756748	0					
ANR	756822	Identifier	src		756748	1					
ANR	756823	ExpressionStatement	r = 0	2634:2:56227:56232	756748	11	True				
ANR	756824	AssignmentExpression	r = 0		756748	0		=			
ANR	756825	Identifier	r		756748	0					
ANR	756826	PrimaryExpression	0		756748	1					
ANR	756827	ExpressionStatement	is_num = 0	2635:2:56236:56246	756748	12	True				
ANR	756828	AssignmentExpression	is_num = 0		756748	0		=			
ANR	756829	Identifier	is_num		756748	0					
ANR	756830	PrimaryExpression	0		756748	1					
ANR	756831	ExpressionStatement	sign = 1	2636:2:56250:56258	756748	13	True				
ANR	756832	AssignmentExpression	sign = 1		756748	0		=			
ANR	756833	Identifier	sign		756748	0					
ANR	756834	PrimaryExpression	1		756748	1					
ANR	756835	IfStatement	if ( PEND )		756748	14					
ANR	756836	Condition	PEND	2637:6:56266:56269	756748	0	True				
ANR	756837	Identifier	PEND		756748	0					
ANR	756838	CompoundStatement		19:12:318:318	756748	1					
ANR	756839	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2638:4:56278:56309	756748	0	True				
ANR	756840	Identifier	ONIGERR_EMPTY_GROUP_NAME		756748	0					
ANR	756841	ElseStatement	else		756748	0					
ANR	756842	CompoundStatement		22:7:368:368	756748	0					
ANR	756843	ExpressionStatement	PFETCH_S ( c )	2641:4:56328:56339	756748	0	True				
ANR	756844	CallExpression	PFETCH_S ( c )		756748	0					
ANR	756845	Callee	PFETCH_S		756748	0					
ANR	756846	Identifier	PFETCH_S		756748	0					
ANR	756847	ArgumentList	c		756748	1					
ANR	756848	Argument	c		756748	0					
ANR	756849	Identifier	c		756748	0					
ANR	756850	IfStatement	if ( c == end_code )		756748	1					
ANR	756851	Condition	c == end_code	2642:8:56349:56361	756748	0	True				
ANR	756852	EqualityExpression	c == end_code		756748	0		==			
ANR	756853	Identifier	c		756748	0					
ANR	756854	Identifier	end_code		756748	1					
ANR	756855	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2643:6:56370:56401	756748	1	True				
ANR	756856	Identifier	ONIGERR_EMPTY_GROUP_NAME		756748	0					
ANR	756857	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		756748	2					
ANR	756858	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2645:8:56412:56440	756748	0	True				
ANR	756859	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		756748	0					
ANR	756860	Callee	ONIGENC_IS_CODE_DIGIT		756748	0					
ANR	756861	Identifier	ONIGENC_IS_CODE_DIGIT		756748	0					
ANR	756862	ArgumentList	enc		756748	1					
ANR	756863	Argument	enc		756748	0					
ANR	756864	Identifier	enc		756748	0					
ANR	756865	Argument	c		756748	1					
ANR	756866	Identifier	c		756748	0					
ANR	756867	CompoundStatement		27:39:489:489	756748	1					
ANR	756868	IfStatement	if ( ref == 1 )		756748	0					
ANR	756869	Condition	ref == 1	2646:10:56455:56462	756748	0	True				
ANR	756870	EqualityExpression	ref == 1		756748	0		==			
ANR	756871	Identifier	ref		756748	0					
ANR	756872	PrimaryExpression	1		756748	1					
ANR	756873	ExpressionStatement	is_num = 1	2647:8:56473:56483	756748	1	True				
ANR	756874	AssignmentExpression	is_num = 1		756748	0		=			
ANR	756875	Identifier	is_num		756748	0					
ANR	756876	PrimaryExpression	1		756748	1					
ANR	756877	ElseStatement	else		756748	0					
ANR	756878	CompoundStatement		30:11:542:542	756748	0					
ANR	756879	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2649:8:56506:56536	756748	0	True				
ANR	756880	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756748	0		=			
ANR	756881	Identifier	r		756748	0					
ANR	756882	Identifier	ONIGERR_INVALID_GROUP_NAME		756748	1					
ANR	756883	ExpressionStatement	is_num = 0	2650:8:56546:56556	756748	1	True				
ANR	756884	AssignmentExpression	is_num = 0		756748	0		=			
ANR	756885	Identifier	is_num		756748	0					
ANR	756886	PrimaryExpression	0		756748	1					
ANR	756887	ElseStatement	else		756748	0					
ANR	756888	IfStatement	if ( c == '-' )		756748	0					
ANR	756889	Condition	c == '-'	2653:13:56585:56592	756748	0	True				
ANR	756890	EqualityExpression	c == '-'		756748	0		==			
ANR	756891	Identifier	c		756748	0					
ANR	756892	PrimaryExpression	'-'		756748	1					
ANR	756893	CompoundStatement		35:23:641:641	756748	1					
ANR	756894	IfStatement	if ( ref == 1 )		756748	0					
ANR	756895	Condition	ref == 1	2654:10:56607:56614	756748	0	True				
ANR	756896	EqualityExpression	ref == 1		756748	0		==			
ANR	756897	Identifier	ref		756748	0					
ANR	756898	PrimaryExpression	1		756748	1					
ANR	756899	CompoundStatement		36:20:663:663	756748	1					
ANR	756900	ExpressionStatement	is_num = 2	2655:8:56627:56637	756748	0	True				
ANR	756901	AssignmentExpression	is_num = 2		756748	0		=			
ANR	756902	Identifier	is_num		756748	0					
ANR	756903	PrimaryExpression	2		756748	1					
ANR	756904	ExpressionStatement	sign = - 1	2656:8:56647:56656	756748	1	True				
ANR	756905	AssignmentExpression	sign = - 1		756748	0		=			
ANR	756906	Identifier	sign		756748	0					
ANR	756907	UnaryOperationExpression	- 1		756748	1					
ANR	756908	UnaryOperator	-		756748	0					
ANR	756909	PrimaryExpression	1		756748	1					
ANR	756910	ExpressionStatement	pnum_head = p	2657:8:56666:56679	756748	2	True				
ANR	756911	AssignmentExpression	pnum_head = p		756748	0		=			
ANR	756912	Identifier	pnum_head		756748	0					
ANR	756913	Identifier	p		756748	1					
ANR	756914	ElseStatement	else		756748	0					
ANR	756915	CompoundStatement		41:11:746:746	756748	0					
ANR	756916	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2660:8:56710:56740	756748	0	True				
ANR	756917	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756748	0		=			
ANR	756918	Identifier	r		756748	0					
ANR	756919	Identifier	ONIGERR_INVALID_GROUP_NAME		756748	1					
ANR	756920	ExpressionStatement	is_num = 0	2661:8:56750:56760	756748	1	True				
ANR	756921	AssignmentExpression	is_num = 0		756748	0		=			
ANR	756922	Identifier	is_num		756748	0					
ANR	756923	PrimaryExpression	0		756748	1					
ANR	756924	ElseStatement	else		756748	0					
ANR	756925	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		756748	0					
ANR	756926	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2664:13:56789:56817	756748	0	True				
ANR	756927	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		756748	0					
ANR	756928	UnaryOperator	!		756748	0					
ANR	756929	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		756748	1					
ANR	756930	Callee	ONIGENC_IS_CODE_WORD		756748	0					
ANR	756931	Identifier	ONIGENC_IS_CODE_WORD		756748	0					
ANR	756932	ArgumentList	enc		756748	1					
ANR	756933	Argument	enc		756748	0					
ANR	756934	Identifier	enc		756748	0					
ANR	756935	Argument	c		756748	1					
ANR	756936	Identifier	c		756748	0					
ANR	756937	CompoundStatement		46:44:866:866	756748	1					
ANR	756938	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2665:6:56828:56866	756748	0	True				
ANR	756939	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756748	0		=			
ANR	756940	Identifier	r		756748	0					
ANR	756941	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756748	1					
ANR	756942	IfStatement	if ( r == 0 )		756748	15					
ANR	756943	Condition	r == 0	2669:6:56885:56890	756748	0	True				
ANR	756944	EqualityExpression	r == 0		756748	0		==			
ANR	756945	Identifier	r		756748	0					
ANR	756946	PrimaryExpression	0		756748	1					
ANR	756947	CompoundStatement		51:14:939:939	756748	1					
ANR	756948	WhileStatement	while ( ! PEND )		756748	0					
ANR	756949	Condition	! PEND	2670:11:56906:56910	756748	0	True				
ANR	756950	UnaryOperationExpression	! PEND		756748	0					
ANR	756951	UnaryOperator	!		756748	0					
ANR	756952	Identifier	PEND		756748	1					
ANR	756953	CompoundStatement		52:18:959:959	756748	1					
ANR	756954	ExpressionStatement	name_end = p	2671:6:56921:56933	756748	0	True				
ANR	756955	AssignmentExpression	name_end = p		756748	0		=			
ANR	756956	Identifier	name_end		756748	0					
ANR	756957	Identifier	p		756748	1					
ANR	756958	ExpressionStatement	PFETCH_S ( c )	2672:6:56941:56952	756748	1	True				
ANR	756959	CallExpression	PFETCH_S ( c )		756748	0					
ANR	756960	Callee	PFETCH_S		756748	0					
ANR	756961	Identifier	PFETCH_S		756748	0					
ANR	756962	ArgumentList	c		756748	1					
ANR	756963	Argument	c		756748	0					
ANR	756964	Identifier	c		756748	0					
ANR	756965	IfStatement	if ( c == end_code || c == ')' )		756748	2					
ANR	756966	Condition	c == end_code || c == ')'	2673:10:56964:56988	756748	0	True				
ANR	756967	OrExpression	c == end_code || c == ')'		756748	0		||			
ANR	756968	EqualityExpression	c == end_code		756748	0		==			
ANR	756969	Identifier	c		756748	0					
ANR	756970	Identifier	end_code		756748	1					
ANR	756971	EqualityExpression	c == ')'		756748	1		==			
ANR	756972	Identifier	c		756748	0					
ANR	756973	PrimaryExpression	')'		756748	1					
ANR	756974	CompoundStatement		55:37:1037:1037	756748	1					
ANR	756975	IfStatement	if ( is_num == 2 )		756748	0					
ANR	756976	Condition	is_num == 2	2674:12:57005:57015	756748	0	True				
ANR	756977	EqualityExpression	is_num == 2		756748	0		==			
ANR	756978	Identifier	is_num		756748	0					
ANR	756979	PrimaryExpression	2		756748	1					
ANR	756980	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2674:26:57019:57049	756748	1	True				
ANR	756981	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756748	0		=			
ANR	756982	Identifier	r		756748	0					
ANR	756983	Identifier	ONIGERR_INVALID_GROUP_NAME		756748	1					
ANR	756984	BreakStatement	break ;	2675:8:57059:57064	756748	1	True				
ANR	756985	IfStatement	if ( is_num != 0 )		756748	3					
ANR	756986	Condition	is_num != 0	2678:10:57085:57095	756748	0	True				
ANR	756987	EqualityExpression	is_num != 0		756748	0		!=			
ANR	756988	Identifier	is_num		756748	0					
ANR	756989	PrimaryExpression	0		756748	1					
ANR	756990	CompoundStatement		60:23:1144:1144	756748	1					
ANR	756991	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		756748	0					
ANR	756992	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2679:12:57112:57140	756748	0	True				
ANR	756993	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		756748	0					
ANR	756994	Callee	ONIGENC_IS_CODE_DIGIT		756748	0					
ANR	756995	Identifier	ONIGENC_IS_CODE_DIGIT		756748	0					
ANR	756996	ArgumentList	enc		756748	1					
ANR	756997	Argument	enc		756748	0					
ANR	756998	Identifier	enc		756748	0					
ANR	756999	Argument	c		756748	1					
ANR	757000	Identifier	c		756748	0					
ANR	757001	CompoundStatement		61:43:1189:1189	756748	1					
ANR	757002	ExpressionStatement	is_num = 1	2680:10:57155:57165	756748	0	True				
ANR	757003	AssignmentExpression	is_num = 1		756748	0		=			
ANR	757004	Identifier	is_num		756748	0					
ANR	757005	PrimaryExpression	1		756748	1					
ANR	757006	ElseStatement	else		756748	0					
ANR	757007	CompoundStatement		64:13:1236:1236	756748	0					
ANR	757008	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		756748	0					
ANR	757009	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2683:14:57206:57234	756748	0	True				
ANR	757010	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		756748	0					
ANR	757011	UnaryOperator	!		756748	0					
ANR	757012	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		756748	1					
ANR	757013	Callee	ONIGENC_IS_CODE_WORD		756748	0					
ANR	757014	Identifier	ONIGENC_IS_CODE_WORD		756748	0					
ANR	757015	ArgumentList	enc		756748	1					
ANR	757016	Argument	enc		756748	0					
ANR	757017	Identifier	enc		756748	0					
ANR	757018	Argument	c		756748	1					
ANR	757019	Identifier	c		756748	0					
ANR	757020	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2684:12:57249:57287	756748	1	True				
ANR	757021	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756748	0		=			
ANR	757022	Identifier	r		756748	0					
ANR	757023	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756748	1					
ANR	757024	ElseStatement	else		756748	0					
ANR	757025	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2686:12:57316:57346	756748	0	True				
ANR	757026	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756748	0		=			
ANR	757027	Identifier	r		756748	0					
ANR	757028	Identifier	ONIGERR_INVALID_GROUP_NAME		756748	1					
ANR	757029	ExpressionStatement	is_num = 0	2687:10:57358:57368	756748	1	True				
ANR	757030	AssignmentExpression	is_num = 0		756748	0		=			
ANR	757031	Identifier	is_num		756748	0					
ANR	757032	PrimaryExpression	0		756748	1					
ANR	757033	ElseStatement	else		756748	0					
ANR	757034	CompoundStatement		72:11:1445:1445	756748	0					
ANR	757035	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		756748	0					
ANR	757036	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2691:12:57413:57441	756748	0	True				
ANR	757037	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		756748	0					
ANR	757038	UnaryOperator	!		756748	0					
ANR	757039	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		756748	1					
ANR	757040	Callee	ONIGENC_IS_CODE_WORD		756748	0					
ANR	757041	Identifier	ONIGENC_IS_CODE_WORD		756748	0					
ANR	757042	ArgumentList	enc		756748	1					
ANR	757043	Argument	enc		756748	0					
ANR	757044	Identifier	enc		756748	0					
ANR	757045	Argument	c		756748	1					
ANR	757046	Identifier	c		756748	0					
ANR	757047	CompoundStatement		73:43:1490:1490	756748	1					
ANR	757048	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2692:10:57456:57494	756748	0	True				
ANR	757049	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756748	0		=			
ANR	757050	Identifier	r		756748	0					
ANR	757051	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756748	1					
ANR	757052	IfStatement	if ( c != end_code )		756748	1					
ANR	757053	Condition	c != end_code	2697:8:57529:57541	756748	0	True				
ANR	757054	EqualityExpression	c != end_code		756748	0		!=			
ANR	757055	Identifier	c		756748	0					
ANR	757056	Identifier	end_code		756748	1					
ANR	757057	CompoundStatement		79:23:1590:1590	756748	1					
ANR	757058	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2698:6:57552:57582	756748	0	True				
ANR	757059	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756748	0		=			
ANR	757060	Identifier	r		756748	0					
ANR	757061	Identifier	ONIGERR_INVALID_GROUP_NAME		756748	1					
ANR	757062	ExpressionStatement	name_end = end	2699:6:57590:57604	756748	1	True				
ANR	757063	AssignmentExpression	name_end = end		756748	0		=			
ANR	757064	Identifier	name_end		756748	0					
ANR	757065	Identifier	end		756748	1					
ANR	757066	IfStatement	if ( is_num != 0 )		756748	2					
ANR	757067	Condition	is_num != 0	2702:8:57621:57631	756748	0	True				
ANR	757068	EqualityExpression	is_num != 0		756748	0		!=			
ANR	757069	Identifier	is_num		756748	0					
ANR	757070	PrimaryExpression	0		756748	1					
ANR	757071	CompoundStatement		84:21:1680:1680	756748	1					
ANR	757072	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2703:6:57642:57707	756748	0	True				
ANR	757073	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		756748	0		=			
ANR	757074	UnaryOperationExpression	* rback_num		756748	0					
ANR	757075	UnaryOperator	*		756748	0					
ANR	757076	Identifier	rback_num		756748	1					
ANR	757077	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		756748	1					
ANR	757078	Callee	onig_scan_unsigned_number		756748	0					
ANR	757079	Identifier	onig_scan_unsigned_number		756748	0					
ANR	757080	ArgumentList	& pnum_head		756748	1					
ANR	757081	Argument	& pnum_head		756748	0					
ANR	757082	UnaryOperationExpression	& pnum_head		756748	0					
ANR	757083	UnaryOperator	&		756748	0					
ANR	757084	Identifier	pnum_head		756748	1					
ANR	757085	Argument	name_end		756748	1					
ANR	757086	Identifier	name_end		756748	0					
ANR	757087	Argument	enc		756748	2					
ANR	757088	Identifier	enc		756748	0					
ANR	757089	IfStatement	if ( * rback_num < 0 )		756748	1					
ANR	757090	Condition	* rback_num < 0	2704:10:57719:57732	756748	0	True				
ANR	757091	RelationalExpression	* rback_num < 0		756748	0		<			
ANR	757092	UnaryOperationExpression	* rback_num		756748	0					
ANR	757093	UnaryOperator	*		756748	0					
ANR	757094	Identifier	rback_num		756748	1					
ANR	757095	PrimaryExpression	0		756748	1					
ANR	757096	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2704:26:57735:57764	756748	1	True				
ANR	757097	Identifier	ONIGERR_TOO_BIG_NUMBER		756748	0					
ANR	757098	ElseStatement	else		756748	0					
ANR	757099	IfStatement	if ( * rback_num == 0 )		756748	0					
ANR	757100	Condition	* rback_num == 0	2705:15:57781:57795	756748	0	True				
ANR	757101	EqualityExpression	* rback_num == 0		756748	0		==			
ANR	757102	UnaryOperationExpression	* rback_num		756748	0					
ANR	757103	UnaryOperator	*		756748	0					
ANR	757104	Identifier	rback_num		756748	1					
ANR	757105	PrimaryExpression	0		756748	1					
ANR	757106	CompoundStatement		87:32:1844:1844	756748	1					
ANR	757107	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2706:8:57808:57838	756748	0	True				
ANR	757108	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		756748	0		=			
ANR	757109	Identifier	r		756748	0					
ANR	757110	Identifier	ONIGERR_INVALID_GROUP_NAME		756748	1					
ANR	757111	GotoStatement	goto err ;	2707:8:57848:57856	756748	1	True				
ANR	757112	Identifier	err		756748	0					
ANR	757113	ExpressionStatement	* rback_num *= sign	2710:6:57873:57891	756748	2	True				
ANR	757114	AssignmentExpression	* rback_num *= sign		756748	0		*=			
ANR	757115	UnaryOperationExpression	* rback_num		756748	0					
ANR	757116	UnaryOperator	*		756748	0					
ANR	757117	Identifier	rback_num		756748	1					
ANR	757118	Identifier	sign		756748	1					
ANR	757119	ExpressionStatement	* rname_end = name_end	2713:4:57904:57925	756748	3	True				
ANR	757120	AssignmentExpression	* rname_end = name_end		756748	0		=			
ANR	757121	UnaryOperationExpression	* rname_end		756748	0					
ANR	757122	UnaryOperator	*		756748	0					
ANR	757123	Identifier	rname_end		756748	1					
ANR	757124	Identifier	name_end		756748	1					
ANR	757125	ExpressionStatement	* src = p	2714:4:57931:57939	756748	4	True				
ANR	757126	AssignmentExpression	* src = p		756748	0		=			
ANR	757127	UnaryOperationExpression	* src		756748	0					
ANR	757128	UnaryOperator	*		756748	0					
ANR	757129	Identifier	src		756748	1					
ANR	757130	Identifier	p		756748	1					
ANR	757131	ReturnStatement	return 0 ;	2715:4:57945:57953	756748	5	True				
ANR	757132	PrimaryExpression	0		756748	0					
ANR	757133	ElseStatement	else		756748	0					
ANR	757134	CompoundStatement		99:7:2012:2012	756748	0					
ANR	757135	WhileStatement	while ( ! PEND )		756748	0					
ANR	757136	Condition	! PEND	2718:11:57979:57983	756748	0	True				
ANR	757137	UnaryOperationExpression	! PEND		756748	0					
ANR	757138	UnaryOperator	!		756748	0					
ANR	757139	Identifier	PEND		756748	1					
ANR	757140	CompoundStatement		100:18:2032:2032	756748	1					
ANR	757141	ExpressionStatement	name_end = p	2719:6:57994:58006	756748	0	True				
ANR	757142	AssignmentExpression	name_end = p		756748	0		=			
ANR	757143	Identifier	name_end		756748	0					
ANR	757144	Identifier	p		756748	1					
ANR	757145	ExpressionStatement	PFETCH_S ( c )	2720:6:58014:58025	756748	1	True				
ANR	757146	CallExpression	PFETCH_S ( c )		756748	0					
ANR	757147	Callee	PFETCH_S		756748	0					
ANR	757148	Identifier	PFETCH_S		756748	0					
ANR	757149	ArgumentList	c		756748	1					
ANR	757150	Argument	c		756748	0					
ANR	757151	Identifier	c		756748	0					
ANR	757152	IfStatement	if ( c == end_code || c == ')' )		756748	2					
ANR	757153	Condition	c == end_code || c == ')'	2721:10:58037:58061	756748	0	True				
ANR	757154	OrExpression	c == end_code || c == ')'		756748	0		||			
ANR	757155	EqualityExpression	c == end_code		756748	0		==			
ANR	757156	Identifier	c		756748	0					
ANR	757157	Identifier	end_code		756748	1					
ANR	757158	EqualityExpression	c == ')'		756748	1		==			
ANR	757159	Identifier	c		756748	0					
ANR	757160	PrimaryExpression	')'		756748	1					
ANR	757161	BreakStatement	break ;	2722:8:58072:58077	756748	1	True				
ANR	757162	IfStatement	if ( PEND )		756748	1					
ANR	757163	Condition	PEND	2724:8:58093:58096	756748	0	True				
ANR	757164	Identifier	PEND		756748	0					
ANR	757165	ExpressionStatement	name_end = end	2725:6:58105:58119	756748	1	True				
ANR	757166	AssignmentExpression	name_end = end		756748	0		=			
ANR	757167	Identifier	name_end		756748	0					
ANR	757168	Identifier	end		756748	1					
ANR	757169	Label	err :	2727:2:58124:58127	756748	2	True				
ANR	757170	Identifier	err		756748	0					
ANR	757171	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2728:4:58133:58187	756748	3	True				
ANR	757172	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		756748	0					
ANR	757173	Callee	onig_scan_env_set_error_string		756748	0					
ANR	757174	Identifier	onig_scan_env_set_error_string		756748	0					
ANR	757175	ArgumentList	env		756748	1					
ANR	757176	Argument	env		756748	0					
ANR	757177	Identifier	env		756748	0					
ANR	757178	Argument	r		756748	1					
ANR	757179	Identifier	r		756748	0					
ANR	757180	Argument	* src		756748	2					
ANR	757181	UnaryOperationExpression	* src		756748	0					
ANR	757182	UnaryOperator	*		756748	0					
ANR	757183	Identifier	src		756748	1					
ANR	757184	Argument	name_end		756748	3					
ANR	757185	Identifier	name_end		756748	0					
ANR	757186	ReturnStatement	return r ;	2729:4:58193:58201	756748	4	True				
ANR	757187	Identifier	r		756748	0					
ANR	757188	ReturnType	static int		756748	1					
ANR	757189	Identifier	fetch_name		756748	2					
ANR	757190	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref"		756748	3					
ANR	757191	Parameter	OnigCodePoint start_code	2617:11:55840:55863	756748	0	True				
ANR	757192	ParameterType	OnigCodePoint		756748	0					
ANR	757193	Identifier	start_code		756748	1					
ANR	757194	Parameter	UChar * * src	2617:37:55866:55876	756748	1	True				
ANR	757195	ParameterType	UChar * *		756748	0					
ANR	757196	Identifier	src		756748	1					
ANR	757197	Parameter	UChar * end	2617:50:55879:55888	756748	2	True				
ANR	757198	ParameterType	UChar *		756748	0					
ANR	757199	Identifier	end		756748	1					
ANR	757200	Parameter	UChar * * rname_end	2618:4:55895:55911	756748	3	True				
ANR	757201	ParameterType	UChar * *		756748	0					
ANR	757202	Identifier	rname_end		756748	1					
ANR	757203	Parameter	ScanEnv * env	2618:23:55914:55925	756748	4	True				
ANR	757204	ParameterType	ScanEnv *		756748	0					
ANR	757205	Identifier	env		756748	1					
ANR	757206	Parameter	int * rback_num	2618:37:55928:55941	756748	5	True				
ANR	757207	ParameterType	int *		756748	0					
ANR	757208	Identifier	rback_num		756748	1					
ANR	757209	Parameter	int ref	2618:53:55944:55950	756748	6	True				
ANR	757210	ParameterType	int		756748	0					
ANR	757211	Identifier	ref		756748	1					
ANR	757212	CFGEntryNode	ENTRY		756748		True				
ANR	757213	CFGExitNode	EXIT		756748		True				
ANR	757214	Symbol	ONIGERR_EMPTY_GROUP_NAME		756748						
ANR	757215	Symbol	end_code		756748						
ANR	757216	Symbol	* rname_end		756748						
ANR	757217	Symbol	ONIGENC_IS_CODE_DIGIT		756748						
ANR	757218	Symbol	sign		756748						
ANR	757219	Symbol	rback_num		756748						
ANR	757220	Symbol	env -> enc		756748						
ANR	757221	Symbol	ONIGERR_INVALID_GROUP_NAME		756748						
ANR	757222	Symbol	ONIGENC_IS_CODE_WORD		756748						
ANR	757223	Symbol	onig_scan_unsigned_number		756748						
ANR	757224	Symbol	* src		756748						
ANR	757225	Symbol	PEND		756748						
ANR	757226	Symbol	ref		756748						
ANR	757227	Symbol	& pnum_head		756748						
ANR	757228	Symbol	end		756748						
ANR	757229	Symbol	enc		756748						
ANR	757230	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		756748						
ANR	757231	Symbol	start_code		756748						
ANR	757232	Symbol	name_end		756748						
ANR	757233	Symbol	is_num		756748						
ANR	757234	Symbol	c		756748						
ANR	757235	Symbol	ONIGERR_TOO_BIG_NUMBER		756748						
ANR	757236	Symbol	src		756748						
ANR	757237	Symbol	* env		756748						
ANR	757238	Symbol	rname_end		756748						
ANR	757239	Symbol	get_name_end_code_point		756748						
ANR	757240	Symbol	env		756748						
ANR	757241	Symbol	p		756748						
ANR	757242	Symbol	r		756748						
ANR	757243	Symbol	* rback_num		756748						
ANR	757244	Symbol	pnum_head		756748						
ANR	757245	Function	fetch_name	2733:0:58215:59740							
ANR	757246	FunctionDef	"fetch_name (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref)"		757245	0					
ANR	757247	CompoundStatement		2736:0:58350:59740	757245	0					
ANR	757248	IdentifierDeclStatement	"int r , is_num , sign ;"	2737:2:58354:58373	757245	0	True				
ANR	757249	IdentifierDecl	r		757245	0					
ANR	757250	IdentifierDeclType	int		757245	0					
ANR	757251	Identifier	r		757245	1					
ANR	757252	IdentifierDecl	is_num		757245	1					
ANR	757253	IdentifierDeclType	int		757245	0					
ANR	757254	Identifier	is_num		757245	1					
ANR	757255	IdentifierDecl	sign		757245	2					
ANR	757256	IdentifierDeclType	int		757245	0					
ANR	757257	Identifier	sign		757245	1					
ANR	757258	IdentifierDeclStatement	OnigCodePoint end_code ;	2738:2:58377:58399	757245	1	True				
ANR	757259	IdentifierDecl	end_code		757245	0					
ANR	757260	IdentifierDeclType	OnigCodePoint		757245	0					
ANR	757261	Identifier	end_code		757245	1					
ANR	757262	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2739:2:58403:58422	757245	2	True				
ANR	757263	IdentifierDecl	c = 0		757245	0					
ANR	757264	IdentifierDeclType	OnigCodePoint		757245	0					
ANR	757265	Identifier	c		757245	1					
ANR	757266	AssignmentExpression	c = 0		757245	2		=			
ANR	757267	Identifier	c		757245	0					
ANR	757268	PrimaryExpression	0		757245	1					
ANR	757269	IdentifierDeclStatement	UChar * name_end ;	2740:2:58426:58441	757245	3	True				
ANR	757270	IdentifierDecl	* name_end		757245	0					
ANR	757271	IdentifierDeclType	UChar *		757245	0					
ANR	757272	Identifier	name_end		757245	1					
ANR	757273	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2741:2:58445:58472	757245	4	True				
ANR	757274	IdentifierDecl	enc = env -> enc		757245	0					
ANR	757275	IdentifierDeclType	OnigEncoding		757245	0					
ANR	757276	Identifier	enc		757245	1					
ANR	757277	AssignmentExpression	enc = env -> enc		757245	2		=			
ANR	757278	Identifier	enc		757245	0					
ANR	757279	PtrMemberAccess	env -> enc		757245	1					
ANR	757280	Identifier	env		757245	0					
ANR	757281	Identifier	enc		757245	1					
ANR	757282	IdentifierDeclStatement	UChar * pnum_head ;	2742:2:58476:58492	757245	5	True				
ANR	757283	IdentifierDecl	* pnum_head		757245	0					
ANR	757284	IdentifierDeclType	UChar *		757245	0					
ANR	757285	Identifier	pnum_head		757245	1					
ANR	757286	IdentifierDeclStatement	UChar * p = * src ;	2743:2:58496:58511	757245	6	True				
ANR	757287	IdentifierDecl	* p = * src		757245	0					
ANR	757288	IdentifierDeclType	UChar *		757245	0					
ANR	757289	Identifier	p		757245	1					
ANR	757290	AssignmentExpression	* p = * src		757245	2		=			
ANR	757291	Identifier	p		757245	0					
ANR	757292	UnaryOperationExpression	* src		757245	1					
ANR	757293	UnaryOperator	*		757245	0					
ANR	757294	Identifier	src		757245	1					
ANR	757295	ExpressionStatement	PFETCH_READY	2744:2:58515:58527	757245	7	True				
ANR	757296	Identifier	PFETCH_READY		757245	0					
ANR	757297	ExpressionStatement	* rback_num = 0	2746:2:58532:58546	757245	8	True				
ANR	757298	AssignmentExpression	* rback_num = 0		757245	0		=			
ANR	757299	UnaryOperationExpression	* rback_num		757245	0					
ANR	757300	UnaryOperator	*		757245	0					
ANR	757301	Identifier	rback_num		757245	1					
ANR	757302	PrimaryExpression	0		757245	1					
ANR	757303	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2748:2:58551:58597	757245	9	True				
ANR	757304	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		757245	0		=			
ANR	757305	Identifier	end_code		757245	0					
ANR	757306	CallExpression	get_name_end_code_point ( start_code )		757245	1					
ANR	757307	Callee	get_name_end_code_point		757245	0					
ANR	757308	Identifier	get_name_end_code_point		757245	0					
ANR	757309	ArgumentList	start_code		757245	1					
ANR	757310	Argument	start_code		757245	0					
ANR	757311	Identifier	start_code		757245	0					
ANR	757312	ExpressionStatement	* rname_end = name_end = end	2750:2:58602:58629	757245	10	True				
ANR	757313	AssignmentExpression	* rname_end = name_end = end		757245	0		=			
ANR	757314	UnaryOperationExpression	* rname_end		757245	0					
ANR	757315	UnaryOperator	*		757245	0					
ANR	757316	Identifier	rname_end		757245	1					
ANR	757317	AssignmentExpression	name_end = end		757245	1		=			
ANR	757318	Identifier	name_end		757245	0					
ANR	757319	Identifier	end		757245	1					
ANR	757320	ExpressionStatement	r = 0	2751:2:58633:58638	757245	11	True				
ANR	757321	AssignmentExpression	r = 0		757245	0		=			
ANR	757322	Identifier	r		757245	0					
ANR	757323	PrimaryExpression	0		757245	1					
ANR	757324	ExpressionStatement	pnum_head = * src	2752:2:58642:58658	757245	12	True				
ANR	757325	AssignmentExpression	pnum_head = * src		757245	0		=			
ANR	757326	Identifier	pnum_head		757245	0					
ANR	757327	UnaryOperationExpression	* src		757245	1					
ANR	757328	UnaryOperator	*		757245	0					
ANR	757329	Identifier	src		757245	1					
ANR	757330	ExpressionStatement	is_num = 0	2753:2:58662:58672	757245	13	True				
ANR	757331	AssignmentExpression	is_num = 0		757245	0		=			
ANR	757332	Identifier	is_num		757245	0					
ANR	757333	PrimaryExpression	0		757245	1					
ANR	757334	ExpressionStatement	sign = 1	2754:2:58676:58684	757245	14	True				
ANR	757335	AssignmentExpression	sign = 1		757245	0		=			
ANR	757336	Identifier	sign		757245	0					
ANR	757337	PrimaryExpression	1		757245	1					
ANR	757338	IfStatement	if ( PEND )		757245	15					
ANR	757339	Condition	PEND	2756:6:58693:58696	757245	0	True				
ANR	757340	Identifier	PEND		757245	0					
ANR	757341	CompoundStatement		21:12:348:348	757245	1					
ANR	757342	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2757:4:58705:58736	757245	0	True				
ANR	757343	Identifier	ONIGERR_EMPTY_GROUP_NAME		757245	0					
ANR	757344	ElseStatement	else		757245	0					
ANR	757345	CompoundStatement		24:7:398:398	757245	0					
ANR	757346	ExpressionStatement	PFETCH ( c )	2760:4:58755:58764	757245	0	True				
ANR	757347	CallExpression	PFETCH ( c )		757245	0					
ANR	757348	Callee	PFETCH		757245	0					
ANR	757349	Identifier	PFETCH		757245	0					
ANR	757350	ArgumentList	c		757245	1					
ANR	757351	Argument	c		757245	0					
ANR	757352	Identifier	c		757245	0					
ANR	757353	IfStatement	if ( c == end_code )		757245	1					
ANR	757354	Condition	c == end_code	2761:8:58774:58786	757245	0	True				
ANR	757355	EqualityExpression	c == end_code		757245	0		==			
ANR	757356	Identifier	c		757245	0					
ANR	757357	Identifier	end_code		757245	1					
ANR	757358	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2762:6:58795:58826	757245	1	True				
ANR	757359	Identifier	ONIGERR_EMPTY_GROUP_NAME		757245	0					
ANR	757360	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		757245	2					
ANR	757361	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2764:8:58837:58865	757245	0	True				
ANR	757362	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		757245	0					
ANR	757363	Callee	ONIGENC_IS_CODE_DIGIT		757245	0					
ANR	757364	Identifier	ONIGENC_IS_CODE_DIGIT		757245	0					
ANR	757365	ArgumentList	enc		757245	1					
ANR	757366	Argument	enc		757245	0					
ANR	757367	Identifier	enc		757245	0					
ANR	757368	Argument	c		757245	1					
ANR	757369	Identifier	c		757245	0					
ANR	757370	CompoundStatement		29:39:517:517	757245	1					
ANR	757371	ExpressionStatement	is_num = 1	2765:6:58876:58886	757245	0	True				
ANR	757372	AssignmentExpression	is_num = 1		757245	0		=			
ANR	757373	Identifier	is_num		757245	0					
ANR	757374	PrimaryExpression	1		757245	1					
ANR	757375	ElseStatement	else		757245	0					
ANR	757376	IfStatement	if ( c == '-' )		757245	0					
ANR	757377	Condition	c == '-'	2767:13:58907:58914	757245	0	True				
ANR	757378	EqualityExpression	c == '-'		757245	0		==			
ANR	757379	Identifier	c		757245	0					
ANR	757380	PrimaryExpression	'-'		757245	1					
ANR	757381	CompoundStatement		32:23:566:566	757245	1					
ANR	757382	ExpressionStatement	is_num = 2	2768:6:58925:58935	757245	0	True				
ANR	757383	AssignmentExpression	is_num = 2		757245	0		=			
ANR	757384	Identifier	is_num		757245	0					
ANR	757385	PrimaryExpression	2		757245	1					
ANR	757386	ExpressionStatement	sign = - 1	2769:6:58943:58952	757245	1	True				
ANR	757387	AssignmentExpression	sign = - 1		757245	0		=			
ANR	757388	Identifier	sign		757245	0					
ANR	757389	UnaryOperationExpression	- 1		757245	1					
ANR	757390	UnaryOperator	-		757245	0					
ANR	757391	PrimaryExpression	1		757245	1					
ANR	757392	ExpressionStatement	pnum_head = p	2770:6:58960:58973	757245	2	True				
ANR	757393	AssignmentExpression	pnum_head = p		757245	0		=			
ANR	757394	Identifier	pnum_head		757245	0					
ANR	757395	Identifier	p		757245	1					
ANR	757396	ElseStatement	else		757245	0					
ANR	757397	CompoundStatement		37:9:639:639	757245	0					
ANR	757398	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2773:6:58998:59036	757245	0	True				
ANR	757399	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		757245	0		=			
ANR	757400	Identifier	r		757245	0					
ANR	757401	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		757245	1					
ANR	757402	WhileStatement	while ( ! PEND )		757245	16					
ANR	757403	Condition	! PEND	2777:9:59058:59062	757245	0	True				
ANR	757404	UnaryOperationExpression	! PEND		757245	0					
ANR	757405	UnaryOperator	!		757245	0					
ANR	757406	Identifier	PEND		757245	1					
ANR	757407	CompoundStatement		42:16:714:714	757245	1					
ANR	757408	ExpressionStatement	name_end = p	2778:4:59071:59083	757245	0	True				
ANR	757409	AssignmentExpression	name_end = p		757245	0		=			
ANR	757410	Identifier	name_end		757245	0					
ANR	757411	Identifier	p		757245	1					
ANR	757412	ExpressionStatement	PFETCH ( c )	2780:4:59090:59099	757245	1	True				
ANR	757413	CallExpression	PFETCH ( c )		757245	0					
ANR	757414	Callee	PFETCH		757245	0					
ANR	757415	Identifier	PFETCH		757245	0					
ANR	757416	ArgumentList	c		757245	1					
ANR	757417	Argument	c		757245	0					
ANR	757418	Identifier	c		757245	0					
ANR	757419	IfStatement	if ( c == end_code || c == ')' )		757245	2					
ANR	757420	Condition	c == end_code || c == ')'	2781:8:59109:59133	757245	0	True				
ANR	757421	OrExpression	c == end_code || c == ')'		757245	0		||			
ANR	757422	EqualityExpression	c == end_code		757245	0		==			
ANR	757423	Identifier	c		757245	0					
ANR	757424	Identifier	end_code		757245	1					
ANR	757425	EqualityExpression	c == ')'		757245	1		==			
ANR	757426	Identifier	c		757245	0					
ANR	757427	PrimaryExpression	')'		757245	1					
ANR	757428	BreakStatement	break ;	2781:35:59136:59141	757245	1	True				
ANR	757429	IfStatement	"if ( ! ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		757245	3					
ANR	757430	Condition	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"	2782:8:59151:59181	757245	0	True				
ANR	757431	UnaryOperationExpression	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"		757245	0					
ANR	757432	UnaryOperator	!		757245	0					
ANR	757433	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		757245	1					
ANR	757434	Callee	ONIGENC_IS_CODE_DIGIT		757245	0					
ANR	757435	Identifier	ONIGENC_IS_CODE_DIGIT		757245	0					
ANR	757436	ArgumentList	enc		757245	1					
ANR	757437	Argument	enc		757245	0					
ANR	757438	Identifier	enc		757245	0					
ANR	757439	Argument	c		757245	1					
ANR	757440	Identifier	c		757245	0					
ANR	757441	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2783:6:59190:59228	757245	1	True				
ANR	757442	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		757245	0		=			
ANR	757443	Identifier	r		757245	0					
ANR	757444	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		757245	1					
ANR	757445	IfStatement	if ( r == 0 && c != end_code )		757245	17					
ANR	757446	Condition	r == 0 && c != end_code	2785:6:59240:59262	757245	0	True				
ANR	757447	AndExpression	r == 0 && c != end_code		757245	0		&&			
ANR	757448	EqualityExpression	r == 0		757245	0		==			
ANR	757449	Identifier	r		757245	0					
ANR	757450	PrimaryExpression	0		757245	1					
ANR	757451	EqualityExpression	c != end_code		757245	1		!=			
ANR	757452	Identifier	c		757245	0					
ANR	757453	Identifier	end_code		757245	1					
ANR	757454	CompoundStatement		50:31:914:914	757245	1					
ANR	757455	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2786:4:59271:59301	757245	0	True				
ANR	757456	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		757245	0		=			
ANR	757457	Identifier	r		757245	0					
ANR	757458	Identifier	ONIGERR_INVALID_GROUP_NAME		757245	1					
ANR	757459	ExpressionStatement	name_end = end	2787:4:59307:59321	757245	1	True				
ANR	757460	AssignmentExpression	name_end = end		757245	0		=			
ANR	757461	Identifier	name_end		757245	0					
ANR	757462	Identifier	end		757245	1					
ANR	757463	IfStatement	if ( r == 0 )		757245	18					
ANR	757464	Condition	r == 0	2790:6:59334:59339	757245	0	True				
ANR	757465	EqualityExpression	r == 0		757245	0		==			
ANR	757466	Identifier	r		757245	0					
ANR	757467	PrimaryExpression	0		757245	1					
ANR	757468	CompoundStatement		55:14:991:991	757245	1					
ANR	757469	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2791:4:59348:59413	757245	0	True				
ANR	757470	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		757245	0		=			
ANR	757471	UnaryOperationExpression	* rback_num		757245	0					
ANR	757472	UnaryOperator	*		757245	0					
ANR	757473	Identifier	rback_num		757245	1					
ANR	757474	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		757245	1					
ANR	757475	Callee	onig_scan_unsigned_number		757245	0					
ANR	757476	Identifier	onig_scan_unsigned_number		757245	0					
ANR	757477	ArgumentList	& pnum_head		757245	1					
ANR	757478	Argument	& pnum_head		757245	0					
ANR	757479	UnaryOperationExpression	& pnum_head		757245	0					
ANR	757480	UnaryOperator	&		757245	0					
ANR	757481	Identifier	pnum_head		757245	1					
ANR	757482	Argument	name_end		757245	1					
ANR	757483	Identifier	name_end		757245	0					
ANR	757484	Argument	enc		757245	2					
ANR	757485	Identifier	enc		757245	0					
ANR	757486	IfStatement	if ( * rback_num < 0 )		757245	1					
ANR	757487	Condition	* rback_num < 0	2792:8:59423:59436	757245	0	True				
ANR	757488	RelationalExpression	* rback_num < 0		757245	0		<			
ANR	757489	UnaryOperationExpression	* rback_num		757245	0					
ANR	757490	UnaryOperator	*		757245	0					
ANR	757491	Identifier	rback_num		757245	1					
ANR	757492	PrimaryExpression	0		757245	1					
ANR	757493	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2792:24:59439:59468	757245	1	True				
ANR	757494	Identifier	ONIGERR_TOO_BIG_NUMBER		757245	0					
ANR	757495	ElseStatement	else		757245	0					
ANR	757496	IfStatement	if ( * rback_num == 0 )		757245	0					
ANR	757497	Condition	* rback_num == 0	2793:13:59483:59497	757245	0	True				
ANR	757498	EqualityExpression	* rback_num == 0		757245	0		==			
ANR	757499	UnaryOperationExpression	* rback_num		757245	0					
ANR	757500	UnaryOperator	*		757245	0					
ANR	757501	Identifier	rback_num		757245	1					
ANR	757502	PrimaryExpression	0		757245	1					
ANR	757503	CompoundStatement		58:30:1149:1149	757245	1					
ANR	757504	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2794:6:59508:59538	757245	0	True				
ANR	757505	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		757245	0		=			
ANR	757506	Identifier	r		757245	0					
ANR	757507	Identifier	ONIGERR_INVALID_GROUP_NAME		757245	1					
ANR	757508	GotoStatement	goto err ;	2795:6:59546:59554	757245	1	True				
ANR	757509	Identifier	err		757245	0					
ANR	757510	ExpressionStatement	* rback_num *= sign	2797:4:59566:59584	757245	2	True				
ANR	757511	AssignmentExpression	* rback_num *= sign		757245	0		*=			
ANR	757512	UnaryOperationExpression	* rback_num		757245	0					
ANR	757513	UnaryOperator	*		757245	0					
ANR	757514	Identifier	rback_num		757245	1					
ANR	757515	Identifier	sign		757245	1					
ANR	757516	ExpressionStatement	* rname_end = name_end	2799:4:59591:59612	757245	3	True				
ANR	757517	AssignmentExpression	* rname_end = name_end		757245	0		=			
ANR	757518	UnaryOperationExpression	* rname_end		757245	0					
ANR	757519	UnaryOperator	*		757245	0					
ANR	757520	Identifier	rname_end		757245	1					
ANR	757521	Identifier	name_end		757245	1					
ANR	757522	ExpressionStatement	* src = p	2800:4:59618:59626	757245	4	True				
ANR	757523	AssignmentExpression	* src = p		757245	0		=			
ANR	757524	UnaryOperationExpression	* src		757245	0					
ANR	757525	UnaryOperator	*		757245	0					
ANR	757526	Identifier	src		757245	1					
ANR	757527	Identifier	p		757245	1					
ANR	757528	ReturnStatement	return 0 ;	2801:4:59632:59640	757245	5	True				
ANR	757529	PrimaryExpression	0		757245	0					
ANR	757530	ElseStatement	else		757245	0					
ANR	757531	CompoundStatement		68:7:1302:1302	757245	0					
ANR	757532	Label	err :	2804:2:59657:59660	757245	0	True				
ANR	757533	Identifier	err		757245	0					
ANR	757534	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2805:4:59666:59720	757245	1	True				
ANR	757535	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		757245	0					
ANR	757536	Callee	onig_scan_env_set_error_string		757245	0					
ANR	757537	Identifier	onig_scan_env_set_error_string		757245	0					
ANR	757538	ArgumentList	env		757245	1					
ANR	757539	Argument	env		757245	0					
ANR	757540	Identifier	env		757245	0					
ANR	757541	Argument	r		757245	1					
ANR	757542	Identifier	r		757245	0					
ANR	757543	Argument	* src		757245	2					
ANR	757544	UnaryOperationExpression	* src		757245	0					
ANR	757545	UnaryOperator	*		757245	0					
ANR	757546	Identifier	src		757245	1					
ANR	757547	Argument	name_end		757245	3					
ANR	757548	Identifier	name_end		757245	0					
ANR	757549	ReturnStatement	return r ;	2806:4:59726:59734	757245	2	True				
ANR	757550	Identifier	r		757245	0					
ANR	757551	ReturnType	static int		757245	1					
ANR	757552	Identifier	fetch_name		757245	2					
ANR	757553	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref"		757245	3					
ANR	757554	Parameter	OnigCodePoint start_code	2734:11:58237:58260	757245	0	True				
ANR	757555	ParameterType	OnigCodePoint		757245	0					
ANR	757556	Identifier	start_code		757245	1					
ANR	757557	Parameter	UChar * * src	2734:37:58263:58273	757245	1	True				
ANR	757558	ParameterType	UChar * *		757245	0					
ANR	757559	Identifier	src		757245	1					
ANR	757560	Parameter	UChar * end	2734:50:58276:58285	757245	2	True				
ANR	757561	ParameterType	UChar *		757245	0					
ANR	757562	Identifier	end		757245	1					
ANR	757563	Parameter	UChar * * rname_end	2735:4:58292:58308	757245	3	True				
ANR	757564	ParameterType	UChar * *		757245	0					
ANR	757565	Identifier	rname_end		757245	1					
ANR	757566	Parameter	ScanEnv * env	2735:23:58311:58322	757245	4	True				
ANR	757567	ParameterType	ScanEnv *		757245	0					
ANR	757568	Identifier	env		757245	1					
ANR	757569	Parameter	int * rback_num	2735:37:58325:58338	757245	5	True				
ANR	757570	ParameterType	int *		757245	0					
ANR	757571	Identifier	rback_num		757245	1					
ANR	757572	Parameter	int ref	2735:53:58341:58347	757245	6	True				
ANR	757573	ParameterType	int		757245	0					
ANR	757574	Identifier	ref		757245	1					
ANR	757575	CFGEntryNode	ENTRY		757245		True				
ANR	757576	CFGExitNode	EXIT		757245		True				
ANR	757577	Symbol	ONIGERR_EMPTY_GROUP_NAME		757245						
ANR	757578	Symbol	end_code		757245						
ANR	757579	Symbol	* rname_end		757245						
ANR	757580	Symbol	ONIGENC_IS_CODE_DIGIT		757245						
ANR	757581	Symbol	sign		757245						
ANR	757582	Symbol	rback_num		757245						
ANR	757583	Symbol	env -> enc		757245						
ANR	757584	Symbol	ONIGERR_INVALID_GROUP_NAME		757245						
ANR	757585	Symbol	onig_scan_unsigned_number		757245						
ANR	757586	Symbol	* src		757245						
ANR	757587	Symbol	PEND		757245						
ANR	757588	Symbol	ref		757245						
ANR	757589	Symbol	& pnum_head		757245						
ANR	757590	Symbol	end		757245						
ANR	757591	Symbol	enc		757245						
ANR	757592	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		757245						
ANR	757593	Symbol	start_code		757245						
ANR	757594	Symbol	name_end		757245						
ANR	757595	Symbol	is_num		757245						
ANR	757596	Symbol	c		757245						
ANR	757597	Symbol	ONIGERR_TOO_BIG_NUMBER		757245						
ANR	757598	Symbol	src		757245						
ANR	757599	Symbol	* env		757245						
ANR	757600	Symbol	rname_end		757245						
ANR	757601	Symbol	get_name_end_code_point		757245						
ANR	757602	Symbol	env		757245						
ANR	757603	Symbol	p		757245						
ANR	757604	Symbol	r		757245						
ANR	757605	Symbol	* rback_num		757245						
ANR	757606	Symbol	pnum_head		757245						
ANR	757607	Function	CC_ESC_WARN	2811:0:59772:60233							
ANR	757608	FunctionDef	"CC_ESC_WARN (ScanEnv * env , UChar * c)"		757607	0					
ANR	757609	CompoundStatement		2813:0:59820:60233	757607	0					
ANR	757610	IfStatement	if ( onig_warn == onig_null_warn )		757607	0					
ANR	757611	Condition	onig_warn == onig_null_warn	2814:6:59828:59854	757607	0	True				
ANR	757612	EqualityExpression	onig_warn == onig_null_warn		757607	0		==			
ANR	757613	Identifier	onig_warn		757607	0					
ANR	757614	Identifier	onig_null_warn		757607	1					
ANR	757615	ReturnStatement	return ;	2814:35:59857:59864	757607	1	True				
ANR	757616	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC ) )"		757607	1					
ANR	757617	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"	2816:6:59873:59998	757607	0	True				
ANR	757618	AndExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		757607	0		&&			
ANR	757619	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"		757607	0					
ANR	757620	Callee	IS_SYNTAX_BV		757607	0					
ANR	757621	Identifier	IS_SYNTAX_BV		757607	0					
ANR	757622	ArgumentList	env -> syntax		757607	1					
ANR	757623	Argument	env -> syntax		757607	0					
ANR	757624	PtrMemberAccess	env -> syntax		757607	0					
ANR	757625	Identifier	env		757607	0					
ANR	757626	Identifier	syntax		757607	1					
ANR	757627	Argument	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		757607	1					
ANR	757628	Identifier	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		757607	0					
ANR	757629	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		757607	1					
ANR	757630	Callee	IS_SYNTAX_BV		757607	0					
ANR	757631	Identifier	IS_SYNTAX_BV		757607	0					
ANR	757632	ArgumentList	env -> syntax		757607	1					
ANR	757633	Argument	env -> syntax		757607	0					
ANR	757634	PtrMemberAccess	env -> syntax		757607	0					
ANR	757635	Identifier	env		757607	0					
ANR	757636	Identifier	syntax		757607	1					
ANR	757637	Argument	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		757607	1					
ANR	757638	Identifier	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		757607	0					
ANR	757639	CompoundStatement		6:4:186:209	757607	1					
ANR	757640	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	2818:4:60007:60030	757607	0	True				
ANR	757641	IdentifierDecl	buf [ WARN_BUFSIZE ]		757607	0					
ANR	757642	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		757607	0					
ANR	757643	Identifier	buf		757607	1					
ANR	757644	Identifier	WARN_BUFSIZE		757607	2					
ANR	757645	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""character class has '%s' without escape"" , c )"	2819:4:60036:60196	757607	1	True				
ANR	757646	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""character class has '%s' without escape"" , c )"		757607	0					
ANR	757647	Callee	onig_snprintf_with_pattern		757607	0					
ANR	757648	Identifier	onig_snprintf_with_pattern		757607	0					
ANR	757649	ArgumentList	buf		757607	1					
ANR	757650	Argument	buf		757607	0					
ANR	757651	Identifier	buf		757607	0					
ANR	757652	Argument	WARN_BUFSIZE		757607	1					
ANR	757653	Identifier	WARN_BUFSIZE		757607	0					
ANR	757654	Argument	env -> enc		757607	2					
ANR	757655	PtrMemberAccess	env -> enc		757607	0					
ANR	757656	Identifier	env		757607	0					
ANR	757657	Identifier	enc		757607	1					
ANR	757658	Argument	env -> pattern		757607	3					
ANR	757659	PtrMemberAccess	env -> pattern		757607	0					
ANR	757660	Identifier	env		757607	0					
ANR	757661	Identifier	pattern		757607	1					
ANR	757662	Argument	env -> pattern_end		757607	4					
ANR	757663	PtrMemberAccess	env -> pattern_end		757607	0					
ANR	757664	Identifier	env		757607	0					
ANR	757665	Identifier	pattern_end		757607	1					
ANR	757666	Argument	"( UChar * ) ""character class has '%s' without escape"""		757607	5					
ANR	757667	CastExpression	"( UChar * ) ""character class has '%s' without escape"""		757607	0					
ANR	757668	CastTarget	UChar *		757607	0					
ANR	757669	PrimaryExpression	"""character class has '%s' without escape"""		757607	1					
ANR	757670	Argument	c		757607	6					
ANR	757671	Identifier	c		757607	0					
ANR	757672	ExpressionStatement	( * onig_warn ) ( ( char * ) buf )	2822:4:60202:60227	757607	2	True				
ANR	757673	CallExpression	( * onig_warn ) ( ( char * ) buf )		757607	0					
ANR	757674	Callee	* onig_warn		757607	0					
ANR	757675	UnaryOperationExpression	* onig_warn		757607	0					
ANR	757676	UnaryOperator	*		757607	0					
ANR	757677	Identifier	onig_warn		757607	1					
ANR	757678	ArgumentList	( char * ) buf		757607	1					
ANR	757679	Argument	( char * ) buf		757607	0					
ANR	757680	CastExpression	( char * ) buf		757607	0					
ANR	757681	CastTarget	char *		757607	0					
ANR	757682	Identifier	buf		757607	1					
ANR	757683	ReturnType	static void		757607	1					
ANR	757684	Identifier	CC_ESC_WARN		757607	2					
ANR	757685	ParameterList	"ScanEnv * env , UChar * c"		757607	3					
ANR	757686	Parameter	ScanEnv * env	2812:12:59796:59807	757607	0	True				
ANR	757687	ParameterType	ScanEnv *		757607	0					
ANR	757688	Identifier	env		757607	1					
ANR	757689	Parameter	UChar * c	2812:26:59810:59817	757607	1	True				
ANR	757690	ParameterType	UChar *		757607	0					
ANR	757691	Identifier	c		757607	1					
ANR	757692	CFGEntryNode	ENTRY		757607		True				
ANR	757693	CFGExitNode	EXIT		757607		True				
ANR	757694	Symbol	c		757607						
ANR	757695	Symbol	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		757607						
ANR	757696	Symbol	* env		757607						
ANR	757697	Symbol	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		757607						
ANR	757698	Symbol	env -> enc		757607						
ANR	757699	Symbol	env		757607						
ANR	757700	Symbol	env -> syntax		757607						
ANR	757701	Symbol	buf		757607						
ANR	757702	Symbol	WARN_BUFSIZE		757607						
ANR	757703	Symbol	onig_null_warn		757607						
ANR	757704	Symbol	env -> pattern		757607						
ANR	757705	Symbol	env -> pattern_end		757607						
ANR	757706	Symbol	onig_warn		757607						
ANR	757707	Symbol	IS_SYNTAX_BV		757607						
ANR	757708	Function	CLOSE_BRACKET_WITHOUT_ESC_WARN	2826:0:60236:60645							
ANR	757709	FunctionDef	"CLOSE_BRACKET_WITHOUT_ESC_WARN (ScanEnv * env , UChar * c)"		757708	0					
ANR	757710	CompoundStatement		2828:0:60303:60645	757708	0					
ANR	757711	IfStatement	if ( onig_warn == onig_null_warn )		757708	0					
ANR	757712	Condition	onig_warn == onig_null_warn	2829:6:60311:60337	757708	0	True				
ANR	757713	EqualityExpression	onig_warn == onig_null_warn		757708	0		==			
ANR	757714	Identifier	onig_warn		757708	0					
ANR	757715	Identifier	onig_null_warn		757708	1					
ANR	757716	ReturnStatement	return ;	2829:35:60340:60347	757708	1	True				
ANR	757717	IfStatement	"if ( IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) )"		757708	1					
ANR	757718	Condition	"IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"	2831:6:60356:60415	757708	0	True				
ANR	757719	CallExpression	"IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"		757708	0					
ANR	757720	Callee	IS_SYNTAX_BV		757708	0					
ANR	757721	Identifier	IS_SYNTAX_BV		757708	0					
ANR	757722	ArgumentList	( env ) -> syntax		757708	1					
ANR	757723	Argument	( env ) -> syntax		757708	0					
ANR	757724	PtrMemberAccess	( env ) -> syntax		757708	0					
ANR	757725	Identifier	env		757708	0					
ANR	757726	Identifier	syntax		757708	1					
ANR	757727	Argument	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		757708	1					
ANR	757728	Identifier	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		757708	0					
ANR	757729	CompoundStatement		5:4:120:143	757708	1					
ANR	757730	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	2832:4:60424:60447	757708	0	True				
ANR	757731	IdentifierDecl	buf [ WARN_BUFSIZE ]		757708	0					
ANR	757732	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		757708	0					
ANR	757733	Identifier	buf		757708	1					
ANR	757734	Identifier	WARN_BUFSIZE		757708	2					
ANR	757735	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , ( env ) -> enc , ( env ) -> pattern , ( env ) -> pattern_end , ( UChar * ) ""regular expression has '%s' without escape"" , c )"	2833:4:60453:60608	757708	1	True				
ANR	757736	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , ( env ) -> enc , ( env ) -> pattern , ( env ) -> pattern_end , ( UChar * ) ""regular expression has '%s' without escape"" , c )"		757708	0					
ANR	757737	Callee	onig_snprintf_with_pattern		757708	0					
ANR	757738	Identifier	onig_snprintf_with_pattern		757708	0					
ANR	757739	ArgumentList	buf		757708	1					
ANR	757740	Argument	buf		757708	0					
ANR	757741	Identifier	buf		757708	0					
ANR	757742	Argument	WARN_BUFSIZE		757708	1					
ANR	757743	Identifier	WARN_BUFSIZE		757708	0					
ANR	757744	Argument	( env ) -> enc		757708	2					
ANR	757745	PtrMemberAccess	( env ) -> enc		757708	0					
ANR	757746	Identifier	env		757708	0					
ANR	757747	Identifier	enc		757708	1					
ANR	757748	Argument	( env ) -> pattern		757708	3					
ANR	757749	PtrMemberAccess	( env ) -> pattern		757708	0					
ANR	757750	Identifier	env		757708	0					
ANR	757751	Identifier	pattern		757708	1					
ANR	757752	Argument	( env ) -> pattern_end		757708	4					
ANR	757753	PtrMemberAccess	( env ) -> pattern_end		757708	0					
ANR	757754	Identifier	env		757708	0					
ANR	757755	Identifier	pattern_end		757708	1					
ANR	757756	Argument	"( UChar * ) ""regular expression has '%s' without escape"""		757708	5					
ANR	757757	CastExpression	"( UChar * ) ""regular expression has '%s' without escape"""		757708	0					
ANR	757758	CastTarget	UChar *		757708	0					
ANR	757759	PrimaryExpression	"""regular expression has '%s' without escape"""		757708	1					
ANR	757760	Argument	c		757708	6					
ANR	757761	Identifier	c		757708	0					
ANR	757762	ExpressionStatement	( * onig_warn ) ( ( char * ) buf )	2836:4:60614:60639	757708	2	True				
ANR	757763	CallExpression	( * onig_warn ) ( ( char * ) buf )		757708	0					
ANR	757764	Callee	* onig_warn		757708	0					
ANR	757765	UnaryOperationExpression	* onig_warn		757708	0					
ANR	757766	UnaryOperator	*		757708	0					
ANR	757767	Identifier	onig_warn		757708	1					
ANR	757768	ArgumentList	( char * ) buf		757708	1					
ANR	757769	Argument	( char * ) buf		757708	0					
ANR	757770	CastExpression	( char * ) buf		757708	0					
ANR	757771	CastTarget	char *		757708	0					
ANR	757772	Identifier	buf		757708	1					
ANR	757773	ReturnType	static void		757708	1					
ANR	757774	Identifier	CLOSE_BRACKET_WITHOUT_ESC_WARN		757708	2					
ANR	757775	ParameterList	"ScanEnv * env , UChar * c"		757708	3					
ANR	757776	Parameter	ScanEnv * env	2827:31:60279:60290	757708	0	True				
ANR	757777	ParameterType	ScanEnv *		757708	0					
ANR	757778	Identifier	env		757708	1					
ANR	757779	Parameter	UChar * c	2827:45:60293:60300	757708	1	True				
ANR	757780	ParameterType	UChar *		757708	0					
ANR	757781	Identifier	c		757708	1					
ANR	757782	CFGEntryNode	ENTRY		757708		True				
ANR	757783	CFGExitNode	EXIT		757708		True				
ANR	757784	Symbol	c		757708						
ANR	757785	Symbol	* env		757708						
ANR	757786	Symbol	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		757708						
ANR	757787	Symbol	( env ) -> enc		757708						
ANR	757788	Symbol	env		757708						
ANR	757789	Symbol	( env ) -> syntax		757708						
ANR	757790	Symbol	buf		757708						
ANR	757791	Symbol	WARN_BUFSIZE		757708						
ANR	757792	Symbol	onig_null_warn		757708						
ANR	757793	Symbol	( env ) -> pattern_end		757708						
ANR	757794	Symbol	( env ) -> pattern		757708						
ANR	757795	Symbol	onig_warn		757708						
ANR	757796	Symbol	IS_SYNTAX_BV		757708						
ANR	757797	Function	find_str_position	2840:0:60648:61192							
ANR	757798	FunctionDef	"find_str_position (OnigCodePoint s [ ] , int n , UChar * from , UChar * to , UChar * * next , OnigEncoding enc)"		757797	0					
ANR	757799	CompoundStatement		2843:0:60766:61192	757797	0					
ANR	757800	IdentifierDeclStatement	int i ;	2844:2:60770:60775	757797	0	True				
ANR	757801	IdentifierDecl	i		757797	0					
ANR	757802	IdentifierDeclType	int		757797	0					
ANR	757803	Identifier	i		757797	1					
ANR	757804	IdentifierDeclStatement	OnigCodePoint x ;	2845:2:60779:60794	757797	1	True				
ANR	757805	IdentifierDecl	x		757797	0					
ANR	757806	IdentifierDeclType	OnigCodePoint		757797	0					
ANR	757807	Identifier	x		757797	1					
ANR	757808	IdentifierDeclStatement	UChar * q ;	2846:2:60798:60806	757797	2	True				
ANR	757809	IdentifierDecl	* q		757797	0					
ANR	757810	IdentifierDeclType	UChar *		757797	0					
ANR	757811	Identifier	q		757797	1					
ANR	757812	IdentifierDeclStatement	UChar * p = from ;	2847:2:60810:60825	757797	3	True				
ANR	757813	IdentifierDecl	* p = from		757797	0					
ANR	757814	IdentifierDeclType	UChar *		757797	0					
ANR	757815	Identifier	p		757797	1					
ANR	757816	AssignmentExpression	* p = from		757797	2		=			
ANR	757817	Identifier	from		757797	0					
ANR	757818	Identifier	from		757797	1					
ANR	757819	WhileStatement	while ( p < to )		757797	4					
ANR	757820	Condition	p < to	2849:9:60839:60844	757797	0	True				
ANR	757821	RelationalExpression	p < to		757797	0		<			
ANR	757822	Identifier	p		757797	0					
ANR	757823	Identifier	to		757797	1					
ANR	757824	CompoundStatement		7:17:80:80	757797	1					
ANR	757825	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2850:4:60853:60888	757797	0	True				
ANR	757826	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		757797	0		=			
ANR	757827	Identifier	x		757797	0					
ANR	757828	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		757797	1					
ANR	757829	Callee	ONIGENC_MBC_TO_CODE		757797	0					
ANR	757830	Identifier	ONIGENC_MBC_TO_CODE		757797	0					
ANR	757831	ArgumentList	enc		757797	1					
ANR	757832	Argument	enc		757797	0					
ANR	757833	Identifier	enc		757797	0					
ANR	757834	Argument	p		757797	1					
ANR	757835	Identifier	p		757797	0					
ANR	757836	Argument	to		757797	2					
ANR	757837	Identifier	to		757797	0					
ANR	757838	ExpressionStatement	"q = p + enclen ( enc , p )"	2851:4:60894:60916	757797	1	True				
ANR	757839	AssignmentExpression	"q = p + enclen ( enc , p )"		757797	0		=			
ANR	757840	Identifier	q		757797	0					
ANR	757841	AdditiveExpression	"p + enclen ( enc , p )"		757797	1		+			
ANR	757842	Identifier	p		757797	0					
ANR	757843	CallExpression	"enclen ( enc , p )"		757797	1					
ANR	757844	Callee	enclen		757797	0					
ANR	757845	Identifier	enclen		757797	0					
ANR	757846	ArgumentList	enc		757797	1					
ANR	757847	Argument	enc		757797	0					
ANR	757848	Identifier	enc		757797	0					
ANR	757849	Argument	p		757797	1					
ANR	757850	Identifier	p		757797	0					
ANR	757851	IfStatement	if ( x == s [ 0 ] )		757797	2					
ANR	757852	Condition	x == s [ 0 ]	2852:8:60926:60934	757797	0	True				
ANR	757853	EqualityExpression	x == s [ 0 ]		757797	0		==			
ANR	757854	Identifier	x		757797	0					
ANR	757855	ArrayIndexing	s [ 0 ]		757797	1					
ANR	757856	Identifier	s		757797	0					
ANR	757857	PrimaryExpression	0		757797	1					
ANR	757858	CompoundStatement		10:19:170:170	757797	1					
ANR	757859	ForStatement	for ( i = 1 ; i < n && q < to ; i ++ )		757797	0					
ANR	757860	ForInit	i = 1 ;	2853:11:60950:60955	757797	0	True				
ANR	757861	AssignmentExpression	i = 1		757797	0		=			
ANR	757862	Identifier	i		757797	0					
ANR	757863	PrimaryExpression	1		757797	1					
ANR	757864	Condition	i < n && q < to	2853:18:60957:60971	757797	1	True				
ANR	757865	AndExpression	i < n && q < to		757797	0		&&			
ANR	757866	RelationalExpression	i < n		757797	0		<			
ANR	757867	Identifier	i		757797	0					
ANR	757868	Identifier	n		757797	1					
ANR	757869	RelationalExpression	q < to		757797	1		<			
ANR	757870	Identifier	q		757797	0					
ANR	757871	Identifier	to		757797	1					
ANR	757872	PostIncDecOperationExpression	i ++	2853:35:60974:60976	757797	2	True				
ANR	757873	Identifier	i		757797	0					
ANR	757874	IncDec	++		757797	1					
ANR	757875	CompoundStatement		11:40:212:212	757797	3					
ANR	757876	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"	2854:1:60982:61017	757797	0	True				
ANR	757877	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"		757797	0		=			
ANR	757878	Identifier	x		757797	0					
ANR	757879	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , q , to )"		757797	1					
ANR	757880	Callee	ONIGENC_MBC_TO_CODE		757797	0					
ANR	757881	Identifier	ONIGENC_MBC_TO_CODE		757797	0					
ANR	757882	ArgumentList	enc		757797	1					
ANR	757883	Argument	enc		757797	0					
ANR	757884	Identifier	enc		757797	0					
ANR	757885	Argument	q		757797	1					
ANR	757886	Identifier	q		757797	0					
ANR	757887	Argument	to		757797	2					
ANR	757888	Identifier	to		757797	0					
ANR	757889	IfStatement	if ( x != s [ i ] )		757797	1					
ANR	757890	Condition	x != s [ i ]	2855:5:61024:61032	757797	0	True				
ANR	757891	EqualityExpression	x != s [ i ]		757797	0		!=			
ANR	757892	Identifier	x		757797	0					
ANR	757893	ArrayIndexing	s [ i ]		757797	1					
ANR	757894	Identifier	s		757797	0					
ANR	757895	Identifier	i		757797	1					
ANR	757896	BreakStatement	break ;	2855:16:61035:61040	757797	1	True				
ANR	757897	ExpressionStatement	"q += enclen ( enc , q )"	2856:1:61043:61062	757797	2	True				
ANR	757898	AssignmentExpression	"q += enclen ( enc , q )"		757797	0		+=			
ANR	757899	Identifier	q		757797	0					
ANR	757900	CallExpression	"enclen ( enc , q )"		757797	1					
ANR	757901	Callee	enclen		757797	0					
ANR	757902	Identifier	enclen		757797	0					
ANR	757903	ArgumentList	enc		757797	1					
ANR	757904	Argument	enc		757797	0					
ANR	757905	Identifier	enc		757797	0					
ANR	757906	Argument	q		757797	1					
ANR	757907	Identifier	q		757797	0					
ANR	757908	IfStatement	if ( i >= n )		757797	1					
ANR	757909	Condition	i >= n	2858:10:61082:61087	757797	0	True				
ANR	757910	RelationalExpression	i >= n		757797	0		>=			
ANR	757911	Identifier	i		757797	0					
ANR	757912	Identifier	n		757797	1					
ANR	757913	CompoundStatement		16:18:323:323	757797	1					
ANR	757914	IfStatement	if ( IS_NOT_NULL ( next ) )		757797	0					
ANR	757915	Condition	IS_NOT_NULL ( next )	2859:5:61097:61113	757797	0	True				
ANR	757916	CallExpression	IS_NOT_NULL ( next )		757797	0					
ANR	757917	Callee	IS_NOT_NULL		757797	0					
ANR	757918	Identifier	IS_NOT_NULL		757797	0					
ANR	757919	ArgumentList	next		757797	1					
ANR	757920	Argument	next		757797	0					
ANR	757921	Identifier	next		757797	0					
ANR	757922	ExpressionStatement	* next = q	2860:3:61119:61128	757797	1	True				
ANR	757923	AssignmentExpression	* next = q		757797	0		=			
ANR	757924	UnaryOperationExpression	* next		757797	0					
ANR	757925	UnaryOperator	*		757797	0					
ANR	757926	Identifier	next		757797	1					
ANR	757927	Identifier	q		757797	1					
ANR	757928	ReturnStatement	return p ;	2861:1:61131:61139	757797	1	True				
ANR	757929	Identifier	p		757797	0					
ANR	757930	ExpressionStatement	p = q	2864:4:61159:61164	757797	3	True				
ANR	757931	AssignmentExpression	p = q		757797	0		=			
ANR	757932	Identifier	p		757797	0					
ANR	757933	Identifier	q		757797	1					
ANR	757934	ReturnStatement	return NULL_UCHARP ;	2866:2:61172:61190	757797	5	True				
ANR	757935	Identifier	NULL_UCHARP		757797	0					
ANR	757936	ReturnType	static UChar *		757797	1					
ANR	757937	Identifier	find_str_position		757797	2					
ANR	757938	ParameterList	"OnigCodePoint s [ ] , int n , UChar * from , UChar * to , UChar * * next , OnigEncoding enc"		757797	3					
ANR	757939	Parameter	OnigCodePoint s [ ]	2841:18:60680:60696	757797	0	True				
ANR	757940	ParameterType	OnigCodePoint [ ]		757797	0					
ANR	757941	Identifier	s		757797	1					
ANR	757942	Parameter	int n	2841:37:60699:60703	757797	1	True				
ANR	757943	ParameterType	int		757797	0					
ANR	757944	Identifier	n		757797	1					
ANR	757945	Parameter	UChar * from	2841:44:60706:60716	757797	2	True				
ANR	757946	ParameterType	UChar *		757797	0					
ANR	757947	Identifier	from		757797	1					
ANR	757948	Parameter	UChar * to	2841:57:60719:60727	757797	3	True				
ANR	757949	ParameterType	UChar *		757797	0					
ANR	757950	Identifier	to		757797	1					
ANR	757951	Parameter	UChar * * next	2842:4:60734:60745	757797	4	True				
ANR	757952	ParameterType	UChar * *		757797	0					
ANR	757953	Identifier	next		757797	1					
ANR	757954	Parameter	OnigEncoding enc	2842:18:60748:60763	757797	5	True				
ANR	757955	ParameterType	OnigEncoding		757797	0					
ANR	757956	Identifier	enc		757797	1					
ANR	757957	CFGEntryNode	ENTRY		757797		True				
ANR	757958	CFGExitNode	EXIT		757797		True				
ANR	757959	Symbol	next		757797						
ANR	757960	Symbol	IS_NOT_NULL		757797						
ANR	757961	Symbol	i		757797						
ANR	757962	Symbol	* next		757797						
ANR	757963	Symbol	enclen		757797						
ANR	757964	Symbol	n		757797						
ANR	757965	Symbol	p		757797						
ANR	757966	Symbol	q		757797						
ANR	757967	Symbol	s		757797						
ANR	757968	Symbol	* i		757797						
ANR	757969	Symbol	NULL_UCHARP		757797						
ANR	757970	Symbol	x		757797						
ANR	757971	Symbol	from		757797						
ANR	757972	Symbol	to		757797						
ANR	757973	Symbol	enc		757797						
ANR	757974	Symbol	* s		757797						
ANR	757975	Symbol	ONIGENC_MBC_TO_CODE		757797						
ANR	757976	Function	str_exist_check_with_esc	2869:0:61195:61957							
ANR	757977	FunctionDef	"str_exist_check_with_esc (OnigCodePoint s [ ] , int n , UChar * from , UChar * to , OnigCodePoint bad , OnigEncoding enc , OnigSyntaxType * syn)"		757976	0					
ANR	757978	CompoundStatement		2872:0:61342:61957	757976	0					
ANR	757979	IdentifierDeclStatement	"int i , in_esc ;"	2873:2:61346:61359	757976	0	True				
ANR	757980	IdentifierDecl	i		757976	0					
ANR	757981	IdentifierDeclType	int		757976	0					
ANR	757982	Identifier	i		757976	1					
ANR	757983	IdentifierDecl	in_esc		757976	1					
ANR	757984	IdentifierDeclType	int		757976	0					
ANR	757985	Identifier	in_esc		757976	1					
ANR	757986	IdentifierDeclStatement	OnigCodePoint x ;	2874:2:61363:61378	757976	1	True				
ANR	757987	IdentifierDecl	x		757976	0					
ANR	757988	IdentifierDeclType	OnigCodePoint		757976	0					
ANR	757989	Identifier	x		757976	1					
ANR	757990	IdentifierDeclStatement	UChar * q ;	2875:2:61382:61390	757976	2	True				
ANR	757991	IdentifierDecl	* q		757976	0					
ANR	757992	IdentifierDeclType	UChar *		757976	0					
ANR	757993	Identifier	q		757976	1					
ANR	757994	IdentifierDeclStatement	UChar * p = from ;	2876:2:61394:61409	757976	3	True				
ANR	757995	IdentifierDecl	* p = from		757976	0					
ANR	757996	IdentifierDeclType	UChar *		757976	0					
ANR	757997	Identifier	p		757976	1					
ANR	757998	AssignmentExpression	* p = from		757976	2		=			
ANR	757999	Identifier	from		757976	0					
ANR	758000	Identifier	from		757976	1					
ANR	758001	ExpressionStatement	in_esc = 0	2878:2:61414:61424	757976	4	True				
ANR	758002	AssignmentExpression	in_esc = 0		757976	0		=			
ANR	758003	Identifier	in_esc		757976	0					
ANR	758004	PrimaryExpression	0		757976	1					
ANR	758005	WhileStatement	while ( p < to )		757976	5					
ANR	758006	Condition	p < to	2879:9:61435:61440	757976	0	True				
ANR	758007	RelationalExpression	p < to		757976	0		<			
ANR	758008	Identifier	p		757976	0					
ANR	758009	Identifier	to		757976	1					
ANR	758010	CompoundStatement		8:17:100:100	757976	1					
ANR	758011	IfStatement	if ( in_esc )		757976	0					
ANR	758012	Condition	in_esc	2880:8:61453:61458	757976	0	True				
ANR	758013	Identifier	in_esc		757976	0					
ANR	758014	CompoundStatement		9:16:118:118	757976	1					
ANR	758015	ExpressionStatement	in_esc = 0	2881:6:61469:61479	757976	0	True				
ANR	758016	AssignmentExpression	in_esc = 0		757976	0		=			
ANR	758017	Identifier	in_esc		757976	0					
ANR	758018	PrimaryExpression	0		757976	1					
ANR	758019	ExpressionStatement	"p += enclen ( enc , p )"	2882:6:61487:61506	757976	1	True				
ANR	758020	AssignmentExpression	"p += enclen ( enc , p )"		757976	0		+=			
ANR	758021	Identifier	p		757976	0					
ANR	758022	CallExpression	"enclen ( enc , p )"		757976	1					
ANR	758023	Callee	enclen		757976	0					
ANR	758024	Identifier	enclen		757976	0					
ANR	758025	ArgumentList	enc		757976	1					
ANR	758026	Argument	enc		757976	0					
ANR	758027	Identifier	enc		757976	0					
ANR	758028	Argument	p		757976	1					
ANR	758029	Identifier	p		757976	0					
ANR	758030	ElseStatement	else		757976	0					
ANR	758031	CompoundStatement		13:9:180:180	757976	0					
ANR	758032	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2885:6:61531:61566	757976	0	True				
ANR	758033	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		757976	0		=			
ANR	758034	Identifier	x		757976	0					
ANR	758035	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		757976	1					
ANR	758036	Callee	ONIGENC_MBC_TO_CODE		757976	0					
ANR	758037	Identifier	ONIGENC_MBC_TO_CODE		757976	0					
ANR	758038	ArgumentList	enc		757976	1					
ANR	758039	Argument	enc		757976	0					
ANR	758040	Identifier	enc		757976	0					
ANR	758041	Argument	p		757976	1					
ANR	758042	Identifier	p		757976	0					
ANR	758043	Argument	to		757976	2					
ANR	758044	Identifier	to		757976	0					
ANR	758045	ExpressionStatement	"q = p + enclen ( enc , p )"	2886:6:61574:61596	757976	1	True				
ANR	758046	AssignmentExpression	"q = p + enclen ( enc , p )"		757976	0		=			
ANR	758047	Identifier	q		757976	0					
ANR	758048	AdditiveExpression	"p + enclen ( enc , p )"		757976	1		+			
ANR	758049	Identifier	p		757976	0					
ANR	758050	CallExpression	"enclen ( enc , p )"		757976	1					
ANR	758051	Callee	enclen		757976	0					
ANR	758052	Identifier	enclen		757976	0					
ANR	758053	ArgumentList	enc		757976	1					
ANR	758054	Argument	enc		757976	0					
ANR	758055	Identifier	enc		757976	0					
ANR	758056	Argument	p		757976	1					
ANR	758057	Identifier	p		757976	0					
ANR	758058	IfStatement	if ( x == s [ 0 ] )		757976	2					
ANR	758059	Condition	x == s [ 0 ]	2887:10:61608:61616	757976	0	True				
ANR	758060	EqualityExpression	x == s [ 0 ]		757976	0		==			
ANR	758061	Identifier	x		757976	0					
ANR	758062	ArrayIndexing	s [ 0 ]		757976	1					
ANR	758063	Identifier	s		757976	0					
ANR	758064	PrimaryExpression	0		757976	1					
ANR	758065	CompoundStatement		16:21:276:276	757976	1					
ANR	758066	ForStatement	for ( i = 1 ; i < n && q < to ; i ++ )		757976	0					
ANR	758067	ForInit	i = 1 ;	2888:6:61627:61632	757976	0	True				
ANR	758068	AssignmentExpression	i = 1		757976	0		=			
ANR	758069	Identifier	i		757976	0					
ANR	758070	PrimaryExpression	1		757976	1					
ANR	758071	Condition	i < n && q < to	2888:13:61634:61648	757976	1	True				
ANR	758072	AndExpression	i < n && q < to		757976	0		&&			
ANR	758073	RelationalExpression	i < n		757976	0		<			
ANR	758074	Identifier	i		757976	0					
ANR	758075	Identifier	n		757976	1					
ANR	758076	RelationalExpression	q < to		757976	1		<			
ANR	758077	Identifier	q		757976	0					
ANR	758078	Identifier	to		757976	1					
ANR	758079	PostIncDecOperationExpression	i ++	2888:30:61651:61653	757976	2	True				
ANR	758080	Identifier	i		757976	0					
ANR	758081	IncDec	++		757976	1					
ANR	758082	CompoundStatement		17:35:313:313	757976	3					
ANR	758083	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"	2889:3:61661:61696	757976	0	True				
ANR	758084	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"		757976	0		=			
ANR	758085	Identifier	x		757976	0					
ANR	758086	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , q , to )"		757976	1					
ANR	758087	Callee	ONIGENC_MBC_TO_CODE		757976	0					
ANR	758088	Identifier	ONIGENC_MBC_TO_CODE		757976	0					
ANR	758089	ArgumentList	enc		757976	1					
ANR	758090	Argument	enc		757976	0					
ANR	758091	Identifier	enc		757976	0					
ANR	758092	Argument	q		757976	1					
ANR	758093	Identifier	q		757976	0					
ANR	758094	Argument	to		757976	2					
ANR	758095	Identifier	to		757976	0					
ANR	758096	IfStatement	if ( x != s [ i ] )		757976	1					
ANR	758097	Condition	x != s [ i ]	2890:7:61705:61713	757976	0	True				
ANR	758098	EqualityExpression	x != s [ i ]		757976	0		!=			
ANR	758099	Identifier	x		757976	0					
ANR	758100	ArrayIndexing	s [ i ]		757976	1					
ANR	758101	Identifier	s		757976	0					
ANR	758102	Identifier	i		757976	1					
ANR	758103	BreakStatement	break ;	2890:18:61716:61721	757976	1	True				
ANR	758104	ExpressionStatement	"q += enclen ( enc , q )"	2891:3:61726:61745	757976	2	True				
ANR	758105	AssignmentExpression	"q += enclen ( enc , q )"		757976	0		+=			
ANR	758106	Identifier	q		757976	0					
ANR	758107	CallExpression	"enclen ( enc , q )"		757976	1					
ANR	758108	Callee	enclen		757976	0					
ANR	758109	Identifier	enclen		757976	0					
ANR	758110	ArgumentList	enc		757976	1					
ANR	758111	Argument	enc		757976	0					
ANR	758112	Identifier	enc		757976	0					
ANR	758113	Argument	q		757976	1					
ANR	758114	Identifier	q		757976	0					
ANR	758115	IfStatement	if ( i >= n )		757976	1					
ANR	758116	Condition	i >= n	2893:5:61755:61760	757976	0	True				
ANR	758117	RelationalExpression	i >= n		757976	0		>=			
ANR	758118	Identifier	i		757976	0					
ANR	758119	Identifier	n		757976	1					
ANR	758120	ReturnStatement	return 1 ;	2893:13:61763:61771	757976	1	True				
ANR	758121	PrimaryExpression	1		757976	0					
ANR	758122	ExpressionStatement	"p += enclen ( enc , p )"	2894:1:61774:61793	757976	2	True				
ANR	758123	AssignmentExpression	"p += enclen ( enc , p )"		757976	0		+=			
ANR	758124	Identifier	p		757976	0					
ANR	758125	CallExpression	"enclen ( enc , p )"		757976	1					
ANR	758126	Callee	enclen		757976	0					
ANR	758127	Identifier	enclen		757976	0					
ANR	758128	ArgumentList	enc		757976	1					
ANR	758129	Argument	enc		757976	0					
ANR	758130	Identifier	enc		757976	0					
ANR	758131	Argument	p		757976	1					
ANR	758132	Identifier	p		757976	0					
ANR	758133	ElseStatement	else		757976	0					
ANR	758134	CompoundStatement		25:11:471:471	757976	0					
ANR	758135	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2897:1:61817:61852	757976	0	True				
ANR	758136	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		757976	0		=			
ANR	758137	Identifier	x		757976	0					
ANR	758138	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		757976	1					
ANR	758139	Callee	ONIGENC_MBC_TO_CODE		757976	0					
ANR	758140	Identifier	ONIGENC_MBC_TO_CODE		757976	0					
ANR	758141	ArgumentList	enc		757976	1					
ANR	758142	Argument	enc		757976	0					
ANR	758143	Identifier	enc		757976	0					
ANR	758144	Argument	p		757976	1					
ANR	758145	Identifier	p		757976	0					
ANR	758146	Argument	to		757976	2					
ANR	758147	Identifier	to		757976	0					
ANR	758148	IfStatement	if ( x == bad )		757976	1					
ANR	758149	Condition	x == bad	2898:5:61859:61866	757976	0	True				
ANR	758150	EqualityExpression	x == bad		757976	0		==			
ANR	758151	Identifier	x		757976	0					
ANR	758152	Identifier	bad		757976	1					
ANR	758153	ReturnStatement	return 0 ;	2898:15:61869:61877	757976	1	True				
ANR	758154	PrimaryExpression	0		757976	0					
ANR	758155	ElseStatement	else		757976	0					
ANR	758156	IfStatement	if ( x == MC_ESC ( syn ) )		757976	0					
ANR	758157	Condition	x == MC_ESC ( syn )	2899:10:61889:61904	757976	0	True				
ANR	758158	EqualityExpression	x == MC_ESC ( syn )		757976	0		==			
ANR	758159	Identifier	x		757976	0					
ANR	758160	CallExpression	MC_ESC ( syn )		757976	1					
ANR	758161	Callee	MC_ESC		757976	0					
ANR	758162	Identifier	MC_ESC		757976	0					
ANR	758163	ArgumentList	syn		757976	1					
ANR	758164	Argument	syn		757976	0					
ANR	758165	Identifier	syn		757976	0					
ANR	758166	ExpressionStatement	in_esc = 1	2899:28:61907:61917	757976	1	True				
ANR	758167	AssignmentExpression	in_esc = 1		757976	0		=			
ANR	758168	Identifier	in_esc		757976	0					
ANR	758169	PrimaryExpression	1		757976	1					
ANR	758170	ExpressionStatement	p = q	2900:1:61920:61925	757976	2	True				
ANR	758171	AssignmentExpression	p = q		757976	0		=			
ANR	758172	Identifier	p		757976	0					
ANR	758173	Identifier	q		757976	1					
ANR	758174	ReturnStatement	return 0 ;	2904:2:61947:61955	757976	6	True				
ANR	758175	PrimaryExpression	0		757976	0					
ANR	758176	ReturnType	static int		757976	1					
ANR	758177	Identifier	str_exist_check_with_esc		757976	2					
ANR	758178	ParameterList	"OnigCodePoint s [ ] , int n , UChar * from , UChar * to , OnigCodePoint bad , OnigEncoding enc , OnigSyntaxType * syn"		757976	3					
ANR	758179	Parameter	OnigCodePoint s [ ]	2870:25:61231:61247	757976	0	True				
ANR	758180	ParameterType	OnigCodePoint [ ]		757976	0					
ANR	758181	Identifier	s		757976	1					
ANR	758182	Parameter	int n	2870:44:61250:61254	757976	1	True				
ANR	758183	ParameterType	int		757976	0					
ANR	758184	Identifier	n		757976	1					
ANR	758185	Parameter	UChar * from	2870:51:61257:61267	757976	2	True				
ANR	758186	ParameterType	UChar *		757976	0					
ANR	758187	Identifier	from		757976	1					
ANR	758188	Parameter	UChar * to	2870:64:61270:61278	757976	3	True				
ANR	758189	ParameterType	UChar *		757976	0					
ANR	758190	Identifier	to		757976	1					
ANR	758191	Parameter	OnigCodePoint bad	2871:3:61284:61300	757976	4	True				
ANR	758192	ParameterType	OnigCodePoint		757976	0					
ANR	758193	Identifier	bad		757976	1					
ANR	758194	Parameter	OnigEncoding enc	2871:22:61303:61318	757976	5	True				
ANR	758195	ParameterType	OnigEncoding		757976	0					
ANR	758196	Identifier	enc		757976	1					
ANR	758197	Parameter	OnigSyntaxType * syn	2871:40:61321:61339	757976	6	True				
ANR	758198	ParameterType	OnigSyntaxType *		757976	0					
ANR	758199	Identifier	syn		757976	1					
ANR	758200	CFGEntryNode	ENTRY		757976		True				
ANR	758201	CFGExitNode	EXIT		757976		True				
ANR	758202	Symbol	bad		757976						
ANR	758203	Symbol	syn		757976						
ANR	758204	Symbol	i		757976						
ANR	758205	Symbol	enclen		757976						
ANR	758206	Symbol	MC_ESC		757976						
ANR	758207	Symbol	n		757976						
ANR	758208	Symbol	p		757976						
ANR	758209	Symbol	q		757976						
ANR	758210	Symbol	s		757976						
ANR	758211	Symbol	* i		757976						
ANR	758212	Symbol	x		757976						
ANR	758213	Symbol	from		757976						
ANR	758214	Symbol	to		757976						
ANR	758215	Symbol	enc		757976						
ANR	758216	Symbol	in_esc		757976						
ANR	758217	Symbol	* s		757976						
ANR	758218	Symbol	ONIGENC_MBC_TO_CODE		757976						
ANR	758219	Function	fetch_token_in_cc	2907:0:61960:67219							
ANR	758220	FunctionDef	"fetch_token_in_cc (OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		758219	0					
ANR	758221	CompoundStatement		2909:0:62044:67219	758219	0					
ANR	758222	IdentifierDeclStatement	int num ;	2910:2:62048:62055	758219	0	True				
ANR	758223	IdentifierDecl	num		758219	0					
ANR	758224	IdentifierDeclType	int		758219	0					
ANR	758225	Identifier	num		758219	1					
ANR	758226	IdentifierDeclStatement	"OnigCodePoint c , c2 ;"	2911:2:62059:62078	758219	1	True				
ANR	758227	IdentifierDecl	c		758219	0					
ANR	758228	IdentifierDeclType	OnigCodePoint		758219	0					
ANR	758229	Identifier	c		758219	1					
ANR	758230	IdentifierDecl	c2		758219	1					
ANR	758231	IdentifierDeclType	OnigCodePoint		758219	0					
ANR	758232	Identifier	c2		758219	1					
ANR	758233	IdentifierDeclStatement	OnigSyntaxType * syn = env -> syntax ;	2912:2:62082:62115	758219	2	True				
ANR	758234	IdentifierDecl	* syn = env -> syntax		758219	0					
ANR	758235	IdentifierDeclType	OnigSyntaxType *		758219	0					
ANR	758236	Identifier	syn		758219	1					
ANR	758237	AssignmentExpression	* syn = env -> syntax		758219	2		=			
ANR	758238	Identifier	syn		758219	0					
ANR	758239	PtrMemberAccess	env -> syntax		758219	1					
ANR	758240	Identifier	env		758219	0					
ANR	758241	Identifier	syntax		758219	1					
ANR	758242	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2913:2:62119:62146	758219	3	True				
ANR	758243	IdentifierDecl	enc = env -> enc		758219	0					
ANR	758244	IdentifierDeclType	OnigEncoding		758219	0					
ANR	758245	Identifier	enc		758219	1					
ANR	758246	AssignmentExpression	enc = env -> enc		758219	2		=			
ANR	758247	Identifier	enc		758219	0					
ANR	758248	PtrMemberAccess	env -> enc		758219	1					
ANR	758249	Identifier	env		758219	0					
ANR	758250	Identifier	enc		758219	1					
ANR	758251	IdentifierDeclStatement	UChar * prev ;	2914:2:62150:62161	758219	4	True				
ANR	758252	IdentifierDecl	* prev		758219	0					
ANR	758253	IdentifierDeclType	UChar *		758219	0					
ANR	758254	Identifier	prev		758219	1					
ANR	758255	IdentifierDeclStatement	UChar * p = * src ;	2915:2:62165:62180	758219	5	True				
ANR	758256	IdentifierDecl	* p = * src		758219	0					
ANR	758257	IdentifierDeclType	UChar *		758219	0					
ANR	758258	Identifier	p		758219	1					
ANR	758259	AssignmentExpression	* p = * src		758219	2		=			
ANR	758260	Identifier	p		758219	0					
ANR	758261	UnaryOperationExpression	* src		758219	1					
ANR	758262	UnaryOperator	*		758219	0					
ANR	758263	Identifier	src		758219	1					
ANR	758264	ExpressionStatement	PFETCH_READY	2916:2:62184:62196	758219	6	True				
ANR	758265	Identifier	PFETCH_READY		758219	0					
ANR	758266	IfStatement	if ( PEND )		758219	7					
ANR	758267	Condition	PEND	2918:6:62205:62208	758219	0	True				
ANR	758268	Identifier	PEND		758219	0					
ANR	758269	CompoundStatement		10:12:166:166	758219	1					
ANR	758270	ExpressionStatement	tok -> type = TK_EOT	2919:4:62217:62235	758219	0	True				
ANR	758271	AssignmentExpression	tok -> type = TK_EOT		758219	0		=			
ANR	758272	PtrMemberAccess	tok -> type		758219	0					
ANR	758273	Identifier	tok		758219	0					
ANR	758274	Identifier	type		758219	1					
ANR	758275	Identifier	TK_EOT		758219	1					
ANR	758276	ReturnStatement	return tok -> type ;	2920:4:62241:62257	758219	1	True				
ANR	758277	PtrMemberAccess	tok -> type		758219	0					
ANR	758278	Identifier	tok		758219	0					
ANR	758279	Identifier	type		758219	1					
ANR	758280	ExpressionStatement	PFETCH ( c )	2923:2:62266:62275	758219	8	True				
ANR	758281	CallExpression	PFETCH ( c )		758219	0					
ANR	758282	Callee	PFETCH		758219	0					
ANR	758283	Identifier	PFETCH		758219	0					
ANR	758284	ArgumentList	c		758219	1					
ANR	758285	Argument	c		758219	0					
ANR	758286	Identifier	c		758219	0					
ANR	758287	ExpressionStatement	tok -> type = TK_CHAR	2924:2:62279:62298	758219	9	True				
ANR	758288	AssignmentExpression	tok -> type = TK_CHAR		758219	0		=			
ANR	758289	PtrMemberAccess	tok -> type		758219	0					
ANR	758290	Identifier	tok		758219	0					
ANR	758291	Identifier	type		758219	1					
ANR	758292	Identifier	TK_CHAR		758219	1					
ANR	758293	ExpressionStatement	tok -> base = 0	2925:2:62302:62315	758219	10	True				
ANR	758294	AssignmentExpression	tok -> base = 0		758219	0		=			
ANR	758295	PtrMemberAccess	tok -> base		758219	0					
ANR	758296	Identifier	tok		758219	0					
ANR	758297	Identifier	base		758219	1					
ANR	758298	PrimaryExpression	0		758219	1					
ANR	758299	ExpressionStatement	tok -> u . c = c	2926:2:62319:62332	758219	11	True				
ANR	758300	AssignmentExpression	tok -> u . c = c		758219	0		=			
ANR	758301	MemberAccess	tok -> u . c		758219	0					
ANR	758302	PtrMemberAccess	tok -> u		758219	0					
ANR	758303	Identifier	tok		758219	0					
ANR	758304	Identifier	u		758219	1					
ANR	758305	Identifier	c		758219	1					
ANR	758306	Identifier	c		758219	1					
ANR	758307	ExpressionStatement	tok -> escaped = 0	2927:2:62336:62352	758219	12	True				
ANR	758308	AssignmentExpression	tok -> escaped = 0		758219	0		=			
ANR	758309	PtrMemberAccess	tok -> escaped		758219	0					
ANR	758310	Identifier	tok		758219	0					
ANR	758311	Identifier	escaped		758219	1					
ANR	758312	PrimaryExpression	0		758219	1					
ANR	758313	IfStatement	if ( c == ']' )		758219	13					
ANR	758314	Condition	c == ']'	2929:6:62361:62368	758219	0	True				
ANR	758315	EqualityExpression	c == ']'		758219	0		==			
ANR	758316	Identifier	c		758219	0					
ANR	758317	PrimaryExpression	']'		758219	1					
ANR	758318	CompoundStatement		21:16:326:326	758219	1					
ANR	758319	ExpressionStatement	tok -> type = TK_CC_CLOSE	2930:4:62377:62400	758219	0	True				
ANR	758320	AssignmentExpression	tok -> type = TK_CC_CLOSE		758219	0		=			
ANR	758321	PtrMemberAccess	tok -> type		758219	0					
ANR	758322	Identifier	tok		758219	0					
ANR	758323	Identifier	type		758219	1					
ANR	758324	Identifier	TK_CC_CLOSE		758219	1					
ANR	758325	ElseStatement	else		758219	0					
ANR	758326	IfStatement	if ( c == '-' )		758219	0					
ANR	758327	Condition	c == '-'	2932:11:62417:62424	758219	0	True				
ANR	758328	EqualityExpression	c == '-'		758219	0		==			
ANR	758329	Identifier	c		758219	0					
ANR	758330	PrimaryExpression	'-'		758219	1					
ANR	758331	CompoundStatement		24:21:382:382	758219	1					
ANR	758332	ExpressionStatement	tok -> type = TK_CC_RANGE	2933:4:62433:62456	758219	0	True				
ANR	758333	AssignmentExpression	tok -> type = TK_CC_RANGE		758219	0		=			
ANR	758334	PtrMemberAccess	tok -> type		758219	0					
ANR	758335	Identifier	tok		758219	0					
ANR	758336	Identifier	type		758219	1					
ANR	758337	Identifier	TK_CC_RANGE		758219	1					
ANR	758338	ElseStatement	else		758219	0					
ANR	758339	IfStatement	if ( c == MC_ESC ( syn ) )		758219	0					
ANR	758340	Condition	c == MC_ESC ( syn )	2935:11:62473:62488	758219	0	True				
ANR	758341	EqualityExpression	c == MC_ESC ( syn )		758219	0		==			
ANR	758342	Identifier	c		758219	0					
ANR	758343	CallExpression	MC_ESC ( syn )		758219	1					
ANR	758344	Callee	MC_ESC		758219	0					
ANR	758345	Identifier	MC_ESC		758219	0					
ANR	758346	ArgumentList	syn		758219	1					
ANR	758347	Argument	syn		758219	0					
ANR	758348	Identifier	syn		758219	0					
ANR	758349	CompoundStatement		27:29:446:446	758219	1					
ANR	758350	IfStatement	"if ( ! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC ) )"		758219	0					
ANR	758351	Condition	"! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"	2936:8:62501:62552	758219	0	True				
ANR	758352	UnaryOperationExpression	"! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		758219	0					
ANR	758353	UnaryOperator	!		758219	0					
ANR	758354	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		758219	1					
ANR	758355	Callee	IS_SYNTAX_BV		758219	0					
ANR	758356	Identifier	IS_SYNTAX_BV		758219	0					
ANR	758357	ArgumentList	syn		758219	1					
ANR	758358	Argument	syn		758219	0					
ANR	758359	Identifier	syn		758219	0					
ANR	758360	Argument	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		758219	1					
ANR	758361	Identifier	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		758219	0					
ANR	758362	GotoStatement	goto end ;	2937:6:62561:62569	758219	1	True				
ANR	758363	Identifier	end		758219	0					
ANR	758364	IfStatement	if ( PEND )		758219	1					
ANR	758365	Condition	PEND	2939:8:62580:62583	758219	0	True				
ANR	758366	Identifier	PEND		758219	0					
ANR	758367	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	2939:14:62586:62622	758219	1	True				
ANR	758368	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		758219	0					
ANR	758369	ExpressionStatement	PFETCH ( c )	2941:4:62629:62638	758219	2	True				
ANR	758370	CallExpression	PFETCH ( c )		758219	0					
ANR	758371	Callee	PFETCH		758219	0					
ANR	758372	Identifier	PFETCH		758219	0					
ANR	758373	ArgumentList	c		758219	1					
ANR	758374	Argument	c		758219	0					
ANR	758375	Identifier	c		758219	0					
ANR	758376	ExpressionStatement	tok -> escaped = 1	2942:4:62644:62660	758219	3	True				
ANR	758377	AssignmentExpression	tok -> escaped = 1		758219	0		=			
ANR	758378	PtrMemberAccess	tok -> escaped		758219	0					
ANR	758379	Identifier	tok		758219	0					
ANR	758380	Identifier	escaped		758219	1					
ANR	758381	PrimaryExpression	1		758219	1					
ANR	758382	ExpressionStatement	tok -> u . c = c	2943:4:62666:62678	758219	4	True				
ANR	758383	AssignmentExpression	tok -> u . c = c		758219	0		=			
ANR	758384	MemberAccess	tok -> u . c		758219	0					
ANR	758385	PtrMemberAccess	tok -> u		758219	0					
ANR	758386	Identifier	tok		758219	0					
ANR	758387	Identifier	u		758219	1					
ANR	758388	Identifier	c		758219	1					
ANR	758389	Identifier	c		758219	1					
ANR	758390	SwitchStatement	switch ( c )		758219	5					
ANR	758391	Condition	c	2944:12:62692:62692	758219	0	True				
ANR	758392	Identifier	c		758219	0					
ANR	758393	CompoundStatement		36:15:650:650	758219	1					
ANR	758394	Label	case 'w' :	2945:4:62701:62709	758219	0	True				
ANR	758395	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2946:6:62717:62741	758219	1	True				
ANR	758396	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758397	PtrMemberAccess	tok -> type		758219	0					
ANR	758398	Identifier	tok		758219	0					
ANR	758399	Identifier	type		758219	1					
ANR	758400	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758401	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	2947:6:62749:62787	758219	2	True				
ANR	758402	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		758219	0		=			
ANR	758403	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758404	MemberAccess	tok -> u . prop		758219	0					
ANR	758405	PtrMemberAccess	tok -> u		758219	0					
ANR	758406	Identifier	tok		758219	0					
ANR	758407	Identifier	u		758219	1					
ANR	758408	Identifier	prop		758219	1					
ANR	758409	Identifier	ctype		758219	1					
ANR	758410	Identifier	ONIGENC_CTYPE_WORD		758219	1					
ANR	758411	ExpressionStatement	tok -> u . prop . not = 0	2948:6:62795:62816	758219	3	True				
ANR	758412	AssignmentExpression	tok -> u . prop . not = 0		758219	0		=			
ANR	758413	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758414	MemberAccess	tok -> u . prop		758219	0					
ANR	758415	PtrMemberAccess	tok -> u		758219	0					
ANR	758416	Identifier	tok		758219	0					
ANR	758417	Identifier	u		758219	1					
ANR	758418	Identifier	prop		758219	1					
ANR	758419	Identifier	not		758219	1					
ANR	758420	PrimaryExpression	0		758219	1					
ANR	758421	BreakStatement	break ;	2949:6:62824:62829	758219	4	True				
ANR	758422	Label	case 'W' :	2950:4:62835:62843	758219	5	True				
ANR	758423	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2951:6:62851:62875	758219	6	True				
ANR	758424	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758425	PtrMemberAccess	tok -> type		758219	0					
ANR	758426	Identifier	tok		758219	0					
ANR	758427	Identifier	type		758219	1					
ANR	758428	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758429	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	2952:6:62883:62921	758219	7	True				
ANR	758430	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		758219	0		=			
ANR	758431	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758432	MemberAccess	tok -> u . prop		758219	0					
ANR	758433	PtrMemberAccess	tok -> u		758219	0					
ANR	758434	Identifier	tok		758219	0					
ANR	758435	Identifier	u		758219	1					
ANR	758436	Identifier	prop		758219	1					
ANR	758437	Identifier	ctype		758219	1					
ANR	758438	Identifier	ONIGENC_CTYPE_WORD		758219	1					
ANR	758439	ExpressionStatement	tok -> u . prop . not = 1	2953:6:62929:62950	758219	8	True				
ANR	758440	AssignmentExpression	tok -> u . prop . not = 1		758219	0		=			
ANR	758441	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758442	MemberAccess	tok -> u . prop		758219	0					
ANR	758443	PtrMemberAccess	tok -> u		758219	0					
ANR	758444	Identifier	tok		758219	0					
ANR	758445	Identifier	u		758219	1					
ANR	758446	Identifier	prop		758219	1					
ANR	758447	Identifier	not		758219	1					
ANR	758448	PrimaryExpression	1		758219	1					
ANR	758449	BreakStatement	break ;	2954:6:62958:62963	758219	9	True				
ANR	758450	Label	case 'd' :	2955:4:62969:62977	758219	10	True				
ANR	758451	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2956:6:62985:63009	758219	11	True				
ANR	758452	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758453	PtrMemberAccess	tok -> type		758219	0					
ANR	758454	Identifier	tok		758219	0					
ANR	758455	Identifier	type		758219	1					
ANR	758456	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758457	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	2957:6:63017:63056	758219	12	True				
ANR	758458	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		758219	0		=			
ANR	758459	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758460	MemberAccess	tok -> u . prop		758219	0					
ANR	758461	PtrMemberAccess	tok -> u		758219	0					
ANR	758462	Identifier	tok		758219	0					
ANR	758463	Identifier	u		758219	1					
ANR	758464	Identifier	prop		758219	1					
ANR	758465	Identifier	ctype		758219	1					
ANR	758466	Identifier	ONIGENC_CTYPE_DIGIT		758219	1					
ANR	758467	ExpressionStatement	tok -> u . prop . not = 0	2958:6:63064:63085	758219	13	True				
ANR	758468	AssignmentExpression	tok -> u . prop . not = 0		758219	0		=			
ANR	758469	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758470	MemberAccess	tok -> u . prop		758219	0					
ANR	758471	PtrMemberAccess	tok -> u		758219	0					
ANR	758472	Identifier	tok		758219	0					
ANR	758473	Identifier	u		758219	1					
ANR	758474	Identifier	prop		758219	1					
ANR	758475	Identifier	not		758219	1					
ANR	758476	PrimaryExpression	0		758219	1					
ANR	758477	BreakStatement	break ;	2959:6:63093:63098	758219	14	True				
ANR	758478	Label	case 'D' :	2960:4:63104:63112	758219	15	True				
ANR	758479	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2961:6:63120:63144	758219	16	True				
ANR	758480	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758481	PtrMemberAccess	tok -> type		758219	0					
ANR	758482	Identifier	tok		758219	0					
ANR	758483	Identifier	type		758219	1					
ANR	758484	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758485	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	2962:6:63152:63191	758219	17	True				
ANR	758486	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		758219	0		=			
ANR	758487	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758488	MemberAccess	tok -> u . prop		758219	0					
ANR	758489	PtrMemberAccess	tok -> u		758219	0					
ANR	758490	Identifier	tok		758219	0					
ANR	758491	Identifier	u		758219	1					
ANR	758492	Identifier	prop		758219	1					
ANR	758493	Identifier	ctype		758219	1					
ANR	758494	Identifier	ONIGENC_CTYPE_DIGIT		758219	1					
ANR	758495	ExpressionStatement	tok -> u . prop . not = 1	2963:6:63199:63220	758219	18	True				
ANR	758496	AssignmentExpression	tok -> u . prop . not = 1		758219	0		=			
ANR	758497	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758498	MemberAccess	tok -> u . prop		758219	0					
ANR	758499	PtrMemberAccess	tok -> u		758219	0					
ANR	758500	Identifier	tok		758219	0					
ANR	758501	Identifier	u		758219	1					
ANR	758502	Identifier	prop		758219	1					
ANR	758503	Identifier	not		758219	1					
ANR	758504	PrimaryExpression	1		758219	1					
ANR	758505	BreakStatement	break ;	2964:6:63228:63233	758219	19	True				
ANR	758506	Label	case 's' :	2965:4:63239:63247	758219	20	True				
ANR	758507	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2966:6:63255:63279	758219	21	True				
ANR	758508	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758509	PtrMemberAccess	tok -> type		758219	0					
ANR	758510	Identifier	tok		758219	0					
ANR	758511	Identifier	type		758219	1					
ANR	758512	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758513	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	2967:6:63287:63326	758219	22	True				
ANR	758514	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		758219	0		=			
ANR	758515	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758516	MemberAccess	tok -> u . prop		758219	0					
ANR	758517	PtrMemberAccess	tok -> u		758219	0					
ANR	758518	Identifier	tok		758219	0					
ANR	758519	Identifier	u		758219	1					
ANR	758520	Identifier	prop		758219	1					
ANR	758521	Identifier	ctype		758219	1					
ANR	758522	Identifier	ONIGENC_CTYPE_SPACE		758219	1					
ANR	758523	ExpressionStatement	tok -> u . prop . not = 0	2968:6:63334:63355	758219	23	True				
ANR	758524	AssignmentExpression	tok -> u . prop . not = 0		758219	0		=			
ANR	758525	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758526	MemberAccess	tok -> u . prop		758219	0					
ANR	758527	PtrMemberAccess	tok -> u		758219	0					
ANR	758528	Identifier	tok		758219	0					
ANR	758529	Identifier	u		758219	1					
ANR	758530	Identifier	prop		758219	1					
ANR	758531	Identifier	not		758219	1					
ANR	758532	PrimaryExpression	0		758219	1					
ANR	758533	BreakStatement	break ;	2969:6:63363:63368	758219	24	True				
ANR	758534	Label	case 'S' :	2970:4:63374:63382	758219	25	True				
ANR	758535	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2971:6:63390:63414	758219	26	True				
ANR	758536	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758537	PtrMemberAccess	tok -> type		758219	0					
ANR	758538	Identifier	tok		758219	0					
ANR	758539	Identifier	type		758219	1					
ANR	758540	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758541	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	2972:6:63422:63461	758219	27	True				
ANR	758542	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		758219	0		=			
ANR	758543	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758544	MemberAccess	tok -> u . prop		758219	0					
ANR	758545	PtrMemberAccess	tok -> u		758219	0					
ANR	758546	Identifier	tok		758219	0					
ANR	758547	Identifier	u		758219	1					
ANR	758548	Identifier	prop		758219	1					
ANR	758549	Identifier	ctype		758219	1					
ANR	758550	Identifier	ONIGENC_CTYPE_SPACE		758219	1					
ANR	758551	ExpressionStatement	tok -> u . prop . not = 1	2973:6:63469:63490	758219	28	True				
ANR	758552	AssignmentExpression	tok -> u . prop . not = 1		758219	0		=			
ANR	758553	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758554	MemberAccess	tok -> u . prop		758219	0					
ANR	758555	PtrMemberAccess	tok -> u		758219	0					
ANR	758556	Identifier	tok		758219	0					
ANR	758557	Identifier	u		758219	1					
ANR	758558	Identifier	prop		758219	1					
ANR	758559	Identifier	not		758219	1					
ANR	758560	PrimaryExpression	1		758219	1					
ANR	758561	BreakStatement	break ;	2974:6:63498:63503	758219	29	True				
ANR	758562	Label	case 'h' :	2975:4:63509:63517	758219	30	True				
ANR	758563	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		758219	31					
ANR	758564	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	2976:10:63529:63575	758219	0	True				
ANR	758565	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		758219	0					
ANR	758566	UnaryOperator	!		758219	0					
ANR	758567	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		758219	1					
ANR	758568	Callee	IS_SYNTAX_OP2		758219	0					
ANR	758569	Identifier	IS_SYNTAX_OP2		758219	0					
ANR	758570	ArgumentList	syn		758219	1					
ANR	758571	Argument	syn		758219	0					
ANR	758572	Identifier	syn		758219	0					
ANR	758573	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		758219	1					
ANR	758574	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		758219	0					
ANR	758575	BreakStatement	break ;	2976:59:63578:63583	758219	1	True				
ANR	758576	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2977:6:63591:63615	758219	32	True				
ANR	758577	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758578	PtrMemberAccess	tok -> type		758219	0					
ANR	758579	Identifier	tok		758219	0					
ANR	758580	Identifier	type		758219	1					
ANR	758581	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758582	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	2978:6:63623:63663	758219	33	True				
ANR	758583	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		758219	0		=			
ANR	758584	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758585	MemberAccess	tok -> u . prop		758219	0					
ANR	758586	PtrMemberAccess	tok -> u		758219	0					
ANR	758587	Identifier	tok		758219	0					
ANR	758588	Identifier	u		758219	1					
ANR	758589	Identifier	prop		758219	1					
ANR	758590	Identifier	ctype		758219	1					
ANR	758591	Identifier	ONIGENC_CTYPE_XDIGIT		758219	1					
ANR	758592	ExpressionStatement	tok -> u . prop . not = 0	2979:6:63671:63692	758219	34	True				
ANR	758593	AssignmentExpression	tok -> u . prop . not = 0		758219	0		=			
ANR	758594	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758595	MemberAccess	tok -> u . prop		758219	0					
ANR	758596	PtrMemberAccess	tok -> u		758219	0					
ANR	758597	Identifier	tok		758219	0					
ANR	758598	Identifier	u		758219	1					
ANR	758599	Identifier	prop		758219	1					
ANR	758600	Identifier	not		758219	1					
ANR	758601	PrimaryExpression	0		758219	1					
ANR	758602	BreakStatement	break ;	2980:6:63700:63705	758219	35	True				
ANR	758603	Label	case 'H' :	2981:4:63711:63719	758219	36	True				
ANR	758604	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		758219	37					
ANR	758605	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	2982:10:63731:63777	758219	0	True				
ANR	758606	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		758219	0					
ANR	758607	UnaryOperator	!		758219	0					
ANR	758608	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		758219	1					
ANR	758609	Callee	IS_SYNTAX_OP2		758219	0					
ANR	758610	Identifier	IS_SYNTAX_OP2		758219	0					
ANR	758611	ArgumentList	syn		758219	1					
ANR	758612	Argument	syn		758219	0					
ANR	758613	Identifier	syn		758219	0					
ANR	758614	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		758219	1					
ANR	758615	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		758219	0					
ANR	758616	BreakStatement	break ;	2982:59:63780:63785	758219	1	True				
ANR	758617	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2983:6:63793:63817	758219	38	True				
ANR	758618	AssignmentExpression	tok -> type = TK_CHAR_TYPE		758219	0		=			
ANR	758619	PtrMemberAccess	tok -> type		758219	0					
ANR	758620	Identifier	tok		758219	0					
ANR	758621	Identifier	type		758219	1					
ANR	758622	Identifier	TK_CHAR_TYPE		758219	1					
ANR	758623	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	2984:6:63825:63865	758219	39	True				
ANR	758624	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		758219	0		=			
ANR	758625	MemberAccess	tok -> u . prop . ctype		758219	0					
ANR	758626	MemberAccess	tok -> u . prop		758219	0					
ANR	758627	PtrMemberAccess	tok -> u		758219	0					
ANR	758628	Identifier	tok		758219	0					
ANR	758629	Identifier	u		758219	1					
ANR	758630	Identifier	prop		758219	1					
ANR	758631	Identifier	ctype		758219	1					
ANR	758632	Identifier	ONIGENC_CTYPE_XDIGIT		758219	1					
ANR	758633	ExpressionStatement	tok -> u . prop . not = 1	2985:6:63873:63894	758219	40	True				
ANR	758634	AssignmentExpression	tok -> u . prop . not = 1		758219	0		=			
ANR	758635	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758636	MemberAccess	tok -> u . prop		758219	0					
ANR	758637	PtrMemberAccess	tok -> u		758219	0					
ANR	758638	Identifier	tok		758219	0					
ANR	758639	Identifier	u		758219	1					
ANR	758640	Identifier	prop		758219	1					
ANR	758641	Identifier	not		758219	1					
ANR	758642	PrimaryExpression	1		758219	1					
ANR	758643	BreakStatement	break ;	2986:6:63902:63907	758219	41	True				
ANR	758644	Label	case 'p' :	2988:4:63914:63922	758219	42	True				
ANR	758645	Label	case 'P' :	2989:4:63928:63936	758219	43	True				
ANR	758646	ExpressionStatement	c2 = PPEEK	2990:6:63944:63954	758219	44	True				
ANR	758647	AssignmentExpression	c2 = PPEEK		758219	0		=			
ANR	758648	Identifier	c2		758219	0					
ANR	758649	Identifier	PPEEK		758219	1					
ANR	758650	IfStatement	"if ( c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY ) )"		758219	45					
ANR	758651	Condition	"c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"	2991:10:63966:64039	758219	0	True				
ANR	758652	AndExpression	"c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		758219	0		&&			
ANR	758653	EqualityExpression	c2 == '{'		758219	0		==			
ANR	758654	Identifier	c2		758219	0					
ANR	758655	PrimaryExpression	'{'		758219	1					
ANR	758656	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		758219	1					
ANR	758657	Callee	IS_SYNTAX_OP2		758219	0					
ANR	758658	Identifier	IS_SYNTAX_OP2		758219	0					
ANR	758659	ArgumentList	syn		758219	1					
ANR	758660	Argument	syn		758219	0					
ANR	758661	Identifier	syn		758219	0					
ANR	758662	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		758219	1					
ANR	758663	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		758219	0					
ANR	758664	CompoundStatement		84:63:1997:1997	758219	1					
ANR	758665	ExpressionStatement	PINC	2993:1:64045:64049	758219	0	True				
ANR	758666	Identifier	PINC		758219	0					
ANR	758667	ExpressionStatement	tok -> type = TK_CHAR_PROPERTY	2994:1:64052:64080	758219	1	True				
ANR	758668	AssignmentExpression	tok -> type = TK_CHAR_PROPERTY		758219	0		=			
ANR	758669	PtrMemberAccess	tok -> type		758219	0					
ANR	758670	Identifier	tok		758219	0					
ANR	758671	Identifier	type		758219	1					
ANR	758672	Identifier	TK_CHAR_PROPERTY		758219	1					
ANR	758673	ExpressionStatement	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )	2995:1:64083:64119	758219	2	True				
ANR	758674	AssignmentExpression	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )		758219	0		=			
ANR	758675	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758676	MemberAccess	tok -> u . prop		758219	0					
ANR	758677	PtrMemberAccess	tok -> u		758219	0					
ANR	758678	Identifier	tok		758219	0					
ANR	758679	Identifier	u		758219	1					
ANR	758680	Identifier	prop		758219	1					
ANR	758681	Identifier	not		758219	1					
ANR	758682	ConditionalExpression	c == 'P' ? 1 : 0		758219	1					
ANR	758683	Condition	c == 'P'		758219	0					
ANR	758684	EqualityExpression	c == 'P'		758219	0		==			
ANR	758685	Identifier	c		758219	0					
ANR	758686	PrimaryExpression	'P'		758219	1					
ANR	758687	PrimaryExpression	1		758219	1					
ANR	758688	PrimaryExpression	0		758219	2					
ANR	758689	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT ) )"		758219	3					
ANR	758690	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"	2997:5:64127:64185	758219	0	True				
ANR	758691	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"		758219	0					
ANR	758692	Callee	IS_SYNTAX_OP2		758219	0					
ANR	758693	Identifier	IS_SYNTAX_OP2		758219	0					
ANR	758694	ArgumentList	syn		758219	1					
ANR	758695	Argument	syn		758219	0					
ANR	758696	Identifier	syn		758219	0					
ANR	758697	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		758219	1					
ANR	758698	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		758219	0					
ANR	758699	CompoundStatement		89:66:2143:2143	758219	1					
ANR	758700	ExpressionStatement	PFETCH ( c2 )	2998:3:64193:64203	758219	0	True				
ANR	758701	CallExpression	PFETCH ( c2 )		758219	0					
ANR	758702	Callee	PFETCH		758219	0					
ANR	758703	Identifier	PFETCH		758219	0					
ANR	758704	ArgumentList	c2		758219	1					
ANR	758705	Argument	c2		758219	0					
ANR	758706	Identifier	c2		758219	0					
ANR	758707	IfStatement	if ( c2 == '^' )		758219	1					
ANR	758708	Condition	c2 == '^'	2999:7:64212:64220	758219	0	True				
ANR	758709	EqualityExpression	c2 == '^'		758219	0		==			
ANR	758710	Identifier	c2		758219	0					
ANR	758711	PrimaryExpression	'^'		758219	1					
ANR	758712	CompoundStatement		91:18:2178:2178	758219	1					
ANR	758713	ExpressionStatement	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )	3000:5:64230:64278	758219	0	True				
ANR	758714	AssignmentExpression	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )		758219	0		=			
ANR	758715	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758716	MemberAccess	tok -> u . prop		758219	0					
ANR	758717	PtrMemberAccess	tok -> u		758219	0					
ANR	758718	Identifier	tok		758219	0					
ANR	758719	Identifier	u		758219	1					
ANR	758720	Identifier	prop		758219	1					
ANR	758721	Identifier	not		758219	1					
ANR	758722	ConditionalExpression	tok -> u . prop . not == 0 ? 1 : 0		758219	1					
ANR	758723	Condition	tok -> u . prop . not == 0		758219	0					
ANR	758724	EqualityExpression	tok -> u . prop . not == 0		758219	0		==			
ANR	758725	MemberAccess	tok -> u . prop . not		758219	0					
ANR	758726	MemberAccess	tok -> u . prop		758219	0					
ANR	758727	PtrMemberAccess	tok -> u		758219	0					
ANR	758728	Identifier	tok		758219	0					
ANR	758729	Identifier	u		758219	1					
ANR	758730	Identifier	prop		758219	1					
ANR	758731	Identifier	not		758219	1					
ANR	758732	PrimaryExpression	0		758219	1					
ANR	758733	PrimaryExpression	1		758219	1					
ANR	758734	PrimaryExpression	0		758219	2					
ANR	758735	ElseStatement	else		758219	0					
ANR	758736	ExpressionStatement	PUNFETCH	3003:5:64298:64306	758219	0	True				
ANR	758737	Identifier	PUNFETCH		758219	0					
ANR	758738	BreakStatement	break ;	3006:6:64325:64330	758219	46	True				
ANR	758739	Label	case 'x' :	3008:4:64337:64345	758219	47	True				
ANR	758740	IfStatement	if ( PEND )		758219	48					
ANR	758741	Condition	PEND	3009:10:64357:64360	758219	0	True				
ANR	758742	Identifier	PEND		758219	0					
ANR	758743	BreakStatement	break ;	3009:16:64363:64368	758219	1	True				
ANR	758744	ExpressionStatement	prev = p	3011:6:64377:64385	758219	49	True				
ANR	758745	AssignmentExpression	prev = p		758219	0		=			
ANR	758746	Identifier	prev		758219	0					
ANR	758747	Identifier	p		758219	1					
ANR	758748	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 ) )"		758219	50					
ANR	758749	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"	3012:10:64397:64460	758219	0	True				
ANR	758750	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		758219	0		&&			
ANR	758751	CallExpression	PPEEK_IS ( '{' )		758219	0					
ANR	758752	Callee	PPEEK_IS		758219	0					
ANR	758753	Identifier	PPEEK_IS		758219	0					
ANR	758754	ArgumentList	'{'		758219	1					
ANR	758755	Argument	'{'		758219	0					
ANR	758756	PrimaryExpression	'{'		758219	0					
ANR	758757	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		758219	1					
ANR	758758	Callee	IS_SYNTAX_OP		758219	0					
ANR	758759	Identifier	IS_SYNTAX_OP		758219	0					
ANR	758760	ArgumentList	syn		758219	1					
ANR	758761	Argument	syn		758219	0					
ANR	758762	Identifier	syn		758219	0					
ANR	758763	Argument	ONIG_SYN_OP_ESC_X_BRACE_HEX8		758219	1					
ANR	758764	Identifier	ONIG_SYN_OP_ESC_X_BRACE_HEX8		758219	0					
ANR	758765	CompoundStatement		104:76:2418:2418	758219	1					
ANR	758766	ExpressionStatement	PINC	3013:1:64466:64470	758219	0	True				
ANR	758767	Identifier	PINC		758219	0					
ANR	758768	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"	3014:1:64473:64528	758219	1	True				
ANR	758769	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		758219	0		=			
ANR	758770	Identifier	num		758219	0					
ANR	758771	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		758219	1					
ANR	758772	Callee	scan_unsigned_hexadecimal_number		758219	0					
ANR	758773	Identifier	scan_unsigned_hexadecimal_number		758219	0					
ANR	758774	ArgumentList	& p		758219	1					
ANR	758775	Argument	& p		758219	0					
ANR	758776	UnaryOperationExpression	& p		758219	0					
ANR	758777	UnaryOperator	&		758219	0					
ANR	758778	Identifier	p		758219	1					
ANR	758779	Argument	end		758219	1					
ANR	758780	Identifier	end		758219	0					
ANR	758781	Argument	8		758219	2					
ANR	758782	PrimaryExpression	8		758219	0					
ANR	758783	Argument	enc		758219	3					
ANR	758784	Identifier	enc		758219	0					
ANR	758785	IfStatement	if ( num < 0 )		758219	2					
ANR	758786	Condition	num < 0	3015:5:64535:64541	758219	0	True				
ANR	758787	RelationalExpression	num < 0		758219	0		<			
ANR	758788	Identifier	num		758219	0					
ANR	758789	PrimaryExpression	0		758219	1					
ANR	758790	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	3015:14:64544:64582	758219	1	True				
ANR	758791	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		758219	0					
ANR	758792	IfStatement	if ( ! PEND )		758219	3					
ANR	758793	Condition	! PEND	3016:5:64589:64593	758219	0	True				
ANR	758794	UnaryOperationExpression	! PEND		758219	0					
ANR	758795	UnaryOperator	!		758219	0					
ANR	758796	Identifier	PEND		758219	1					
ANR	758797	CompoundStatement		108:12:2551:2551	758219	1					
ANR	758798	ExpressionStatement	c2 = PPEEK	3017:10:64608:64618	758219	0	True				
ANR	758799	AssignmentExpression	c2 = PPEEK		758219	0		=			
ANR	758800	Identifier	c2		758219	0					
ANR	758801	Identifier	PPEEK		758219	1					
ANR	758802	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , c2 ) )"		758219	1					
ANR	758803	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , c2 )"	3018:14:64634:64664	758219	0	True				
ANR	758804	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , c2 )"		758219	0					
ANR	758805	Callee	ONIGENC_IS_CODE_XDIGIT		758219	0					
ANR	758806	Identifier	ONIGENC_IS_CODE_XDIGIT		758219	0					
ANR	758807	ArgumentList	enc		758219	1					
ANR	758808	Argument	enc		758219	0					
ANR	758809	Identifier	enc		758219	0					
ANR	758810	Argument	c2		758219	1					
ANR	758811	Identifier	c2		758219	0					
ANR	758812	ReturnStatement	return ONIGERR_TOO_LONG_WIDE_CHAR_VALUE ;	3019:12:64679:64718	758219	1	True				
ANR	758813	Identifier	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		758219	0					
ANR	758814	IfStatement	"if ( p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) ) )"		758219	4					
ANR	758815	Condition	"p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) )"	3022:5:64736:64791	758219	0	True				
ANR	758816	AndExpression	"p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) )"		758219	0		&&			
ANR	758817	RelationalExpression	"p > prev + enclen ( enc , prev )"		758219	0		>			
ANR	758818	Identifier	p		758219	0					
ANR	758819	AdditiveExpression	"prev + enclen ( enc , prev )"		758219	1		+			
ANR	758820	Identifier	prev		758219	0					
ANR	758821	CallExpression	"enclen ( enc , prev )"		758219	1					
ANR	758822	Callee	enclen		758219	0					
ANR	758823	Identifier	enclen		758219	0					
ANR	758824	ArgumentList	enc		758219	1					
ANR	758825	Argument	enc		758219	0					
ANR	758826	Identifier	enc		758219	0					
ANR	758827	Argument	prev		758219	1					
ANR	758828	Identifier	prev		758219	0					
ANR	758829	AndExpression	! PEND && ( PPEEK_IS ( '}' ) )		758219	1		&&			
ANR	758830	UnaryOperationExpression	! PEND		758219	0					
ANR	758831	UnaryOperator	!		758219	0					
ANR	758832	Identifier	PEND		758219	1					
ANR	758833	CallExpression	PPEEK_IS ( '}' )		758219	1					
ANR	758834	Callee	PPEEK_IS		758219	0					
ANR	758835	Identifier	PPEEK_IS		758219	0					
ANR	758836	ArgumentList	'}'		758219	1					
ANR	758837	Argument	'}'		758219	0					
ANR	758838	PrimaryExpression	'}'		758219	0					
ANR	758839	CompoundStatement		114:63:2749:2749	758219	1					
ANR	758840	ExpressionStatement	PINC	3023:3:64799:64803	758219	0	True				
ANR	758841	Identifier	PINC		758219	0					
ANR	758842	ExpressionStatement	tok -> type = TK_CODE_POINT	3024:3:64808:64835	758219	1	True				
ANR	758843	AssignmentExpression	tok -> type = TK_CODE_POINT		758219	0		=			
ANR	758844	PtrMemberAccess	tok -> type		758219	0					
ANR	758845	Identifier	tok		758219	0					
ANR	758846	Identifier	type		758219	1					
ANR	758847	Identifier	TK_CODE_POINT		758219	1					
ANR	758848	ExpressionStatement	tok -> base = 16	3025:3:64840:64856	758219	2	True				
ANR	758849	AssignmentExpression	tok -> base = 16		758219	0		=			
ANR	758850	PtrMemberAccess	tok -> base		758219	0					
ANR	758851	Identifier	tok		758219	0					
ANR	758852	Identifier	base		758219	1					
ANR	758853	PrimaryExpression	16		758219	1					
ANR	758854	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3026:3:64861:64894	758219	3	True				
ANR	758855	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		758219	0		=			
ANR	758856	MemberAccess	tok -> u . code		758219	0					
ANR	758857	PtrMemberAccess	tok -> u		758219	0					
ANR	758858	Identifier	tok		758219	0					
ANR	758859	Identifier	u		758219	1					
ANR	758860	Identifier	code		758219	1					
ANR	758861	CastExpression	( OnigCodePoint ) num		758219	1					
ANR	758862	CastTarget	OnigCodePoint		758219	0					
ANR	758863	Identifier	num		758219	1					
ANR	758864	ElseStatement	else		758219	0					
ANR	758865	CompoundStatement		120:6:2860:2860	758219	0					
ANR	758866	ExpressionStatement	p = prev	3030:3:64956:64964	758219	0	True				
ANR	758867	AssignmentExpression	p = prev		758219	0		=			
ANR	758868	Identifier	p		758219	0					
ANR	758869	Identifier	prev		758219	1					
ANR	758870	ElseStatement	else		758219	0					
ANR	758871	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 ) )"		758219	0					
ANR	758872	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"	3033:15:64992:65032	758219	0	True				
ANR	758873	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"		758219	0					
ANR	758874	Callee	IS_SYNTAX_OP		758219	0					
ANR	758875	Identifier	IS_SYNTAX_OP		758219	0					
ANR	758876	ArgumentList	syn		758219	1					
ANR	758877	Argument	syn		758219	0					
ANR	758878	Identifier	syn		758219	0					
ANR	758879	Argument	ONIG_SYN_OP_ESC_X_HEX2		758219	1					
ANR	758880	Identifier	ONIG_SYN_OP_ESC_X_HEX2		758219	0					
ANR	758881	CompoundStatement		125:58:2990:2990	758219	1					
ANR	758882	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"	3034:1:65038:65093	758219	0	True				
ANR	758883	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		758219	0		=			
ANR	758884	Identifier	num		758219	0					
ANR	758885	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		758219	1					
ANR	758886	Callee	scan_unsigned_hexadecimal_number		758219	0					
ANR	758887	Identifier	scan_unsigned_hexadecimal_number		758219	0					
ANR	758888	ArgumentList	& p		758219	1					
ANR	758889	Argument	& p		758219	0					
ANR	758890	UnaryOperationExpression	& p		758219	0					
ANR	758891	UnaryOperator	&		758219	0					
ANR	758892	Identifier	p		758219	1					
ANR	758893	Argument	end		758219	1					
ANR	758894	Identifier	end		758219	0					
ANR	758895	Argument	2		758219	2					
ANR	758896	PrimaryExpression	2		758219	0					
ANR	758897	Argument	enc		758219	3					
ANR	758898	Identifier	enc		758219	0					
ANR	758899	IfStatement	if ( num < 0 )		758219	1					
ANR	758900	Condition	num < 0	3035:5:65100:65106	758219	0	True				
ANR	758901	RelationalExpression	num < 0		758219	0		<			
ANR	758902	Identifier	num		758219	0					
ANR	758903	PrimaryExpression	0		758219	1					
ANR	758904	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3035:14:65109:65138	758219	1	True				
ANR	758905	Identifier	ONIGERR_TOO_BIG_NUMBER		758219	0					
ANR	758906	IfStatement	if ( p == prev )		758219	2					
ANR	758907	Condition	p == prev	3036:5:65145:65153	758219	0	True				
ANR	758908	EqualityExpression	p == prev		758219	0		==			
ANR	758909	Identifier	p		758219	0					
ANR	758910	Identifier	prev		758219	1					
ANR	758911	CompoundStatement		128:16:3111:3111	758219	1					
ANR	758912	ExpressionStatement	num = 0	3037:3:65188:65195	758219	0	True				
ANR	758913	AssignmentExpression	num = 0		758219	0		=			
ANR	758914	Identifier	num		758219	0					
ANR	758915	PrimaryExpression	0		758219	1					
ANR	758916	ExpressionStatement	tok -> type = TK_RAW_BYTE	3039:1:65227:65250	758219	3	True				
ANR	758917	AssignmentExpression	tok -> type = TK_RAW_BYTE		758219	0		=			
ANR	758918	PtrMemberAccess	tok -> type		758219	0					
ANR	758919	Identifier	tok		758219	0					
ANR	758920	Identifier	type		758219	1					
ANR	758921	Identifier	TK_RAW_BYTE		758219	1					
ANR	758922	ExpressionStatement	tok -> base = 16	3040:1:65253:65267	758219	4	True				
ANR	758923	AssignmentExpression	tok -> base = 16		758219	0		=			
ANR	758924	PtrMemberAccess	tok -> base		758219	0					
ANR	758925	Identifier	tok		758219	0					
ANR	758926	Identifier	base		758219	1					
ANR	758927	PrimaryExpression	16		758219	1					
ANR	758928	ExpressionStatement	tok -> u . c = num	3041:1:65270:65285	758219	5	True				
ANR	758929	AssignmentExpression	tok -> u . c = num		758219	0		=			
ANR	758930	MemberAccess	tok -> u . c		758219	0					
ANR	758931	PtrMemberAccess	tok -> u		758219	0					
ANR	758932	Identifier	tok		758219	0					
ANR	758933	Identifier	u		758219	1					
ANR	758934	Identifier	c		758219	1					
ANR	758935	Identifier	num		758219	1					
ANR	758936	BreakStatement	break ;	3043:6:65301:65306	758219	51	True				
ANR	758937	Label	case 'u' :	3045:4:65313:65321	758219	52	True				
ANR	758938	IfStatement	if ( PEND )		758219	53					
ANR	758939	Condition	PEND	3046:10:65333:65336	758219	0	True				
ANR	758940	Identifier	PEND		758219	0					
ANR	758941	BreakStatement	break ;	3046:16:65339:65344	758219	1	True				
ANR	758942	ExpressionStatement	prev = p	3048:6:65353:65361	758219	54	True				
ANR	758943	AssignmentExpression	prev = p		758219	0		=			
ANR	758944	Identifier	prev		758219	0					
ANR	758945	Identifier	p		758219	1					
ANR	758946	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 ) )"		758219	55					
ANR	758947	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"	3049:10:65373:65415	758219	0	True				
ANR	758948	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"		758219	0					
ANR	758949	Callee	IS_SYNTAX_OP2		758219	0					
ANR	758950	Identifier	IS_SYNTAX_OP2		758219	0					
ANR	758951	ArgumentList	syn		758219	1					
ANR	758952	Argument	syn		758219	0					
ANR	758953	Identifier	syn		758219	0					
ANR	758954	Argument	ONIG_SYN_OP2_ESC_U_HEX4		758219	1					
ANR	758955	Identifier	ONIG_SYN_OP2_ESC_U_HEX4		758219	0					
ANR	758956	CompoundStatement		141:55:3373:3373	758219	1					
ANR	758957	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"	3050:1:65421:65476	758219	0	True				
ANR	758958	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		758219	0		=			
ANR	758959	Identifier	num		758219	0					
ANR	758960	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		758219	1					
ANR	758961	Callee	scan_unsigned_hexadecimal_number		758219	0					
ANR	758962	Identifier	scan_unsigned_hexadecimal_number		758219	0					
ANR	758963	ArgumentList	& p		758219	1					
ANR	758964	Argument	& p		758219	0					
ANR	758965	UnaryOperationExpression	& p		758219	0					
ANR	758966	UnaryOperator	&		758219	0					
ANR	758967	Identifier	p		758219	1					
ANR	758968	Argument	end		758219	1					
ANR	758969	Identifier	end		758219	0					
ANR	758970	Argument	4		758219	2					
ANR	758971	PrimaryExpression	4		758219	0					
ANR	758972	Argument	enc		758219	3					
ANR	758973	Identifier	enc		758219	0					
ANR	758974	IfStatement	if ( num < 0 )		758219	1					
ANR	758975	Condition	num < 0	3051:5:65483:65489	758219	0	True				
ANR	758976	RelationalExpression	num < 0		758219	0		<			
ANR	758977	Identifier	num		758219	0					
ANR	758978	PrimaryExpression	0		758219	1					
ANR	758979	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3051:14:65492:65521	758219	1	True				
ANR	758980	Identifier	ONIGERR_TOO_BIG_NUMBER		758219	0					
ANR	758981	IfStatement	if ( p == prev )		758219	2					
ANR	758982	Condition	p == prev	3052:5:65528:65536	758219	0	True				
ANR	758983	EqualityExpression	p == prev		758219	0		==			
ANR	758984	Identifier	p		758219	0					
ANR	758985	Identifier	prev		758219	1					
ANR	758986	CompoundStatement		144:16:3494:3494	758219	1					
ANR	758987	ExpressionStatement	num = 0	3053:3:65571:65578	758219	0	True				
ANR	758988	AssignmentExpression	num = 0		758219	0		=			
ANR	758989	Identifier	num		758219	0					
ANR	758990	PrimaryExpression	0		758219	1					
ANR	758991	ExpressionStatement	tok -> type = TK_CODE_POINT	3055:1:65610:65637	758219	3	True				
ANR	758992	AssignmentExpression	tok -> type = TK_CODE_POINT		758219	0		=			
ANR	758993	PtrMemberAccess	tok -> type		758219	0					
ANR	758994	Identifier	tok		758219	0					
ANR	758995	Identifier	type		758219	1					
ANR	758996	Identifier	TK_CODE_POINT		758219	1					
ANR	758997	ExpressionStatement	tok -> base = 16	3056:1:65640:65656	758219	4	True				
ANR	758998	AssignmentExpression	tok -> base = 16		758219	0		=			
ANR	758999	PtrMemberAccess	tok -> base		758219	0					
ANR	759000	Identifier	tok		758219	0					
ANR	759001	Identifier	base		758219	1					
ANR	759002	PrimaryExpression	16		758219	1					
ANR	759003	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3057:1:65659:65692	758219	5	True				
ANR	759004	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		758219	0		=			
ANR	759005	MemberAccess	tok -> u . code		758219	0					
ANR	759006	PtrMemberAccess	tok -> u		758219	0					
ANR	759007	Identifier	tok		758219	0					
ANR	759008	Identifier	u		758219	1					
ANR	759009	Identifier	code		758219	1					
ANR	759010	CastExpression	( OnigCodePoint ) num		758219	1					
ANR	759011	CastTarget	OnigCodePoint		758219	0					
ANR	759012	Identifier	num		758219	1					
ANR	759013	BreakStatement	break ;	3059:6:65708:65713	758219	56	True				
ANR	759014	Label	case '0' :	3061:4:65720:65728	758219	57	True				
ANR	759015	Label	case '1' :	3062:4:65734:65742	758219	58	True				
ANR	759016	Label	case '2' :	3062:14:65744:65752	758219	59	True				
ANR	759017	Label	case '3' :	3062:24:65754:65762	758219	60	True				
ANR	759018	Label	case '4' :	3062:34:65764:65772	758219	61	True				
ANR	759019	Label	case '5' :	3062:44:65774:65782	758219	62	True				
ANR	759020	Label	case '6' :	3062:54:65784:65792	758219	63	True				
ANR	759021	Label	case '7' :	3062:64:65794:65802	758219	64	True				
ANR	759022	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 ) )"		758219	65					
ANR	759023	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"	3063:10:65814:65854	758219	0	True				
ANR	759024	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"		758219	0					
ANR	759025	Callee	IS_SYNTAX_OP		758219	0					
ANR	759026	Identifier	IS_SYNTAX_OP		758219	0					
ANR	759027	ArgumentList	syn		758219	1					
ANR	759028	Argument	syn		758219	0					
ANR	759029	Identifier	syn		758219	0					
ANR	759030	Argument	ONIG_SYN_OP_ESC_OCTAL3		758219	1					
ANR	759031	Identifier	ONIG_SYN_OP_ESC_OCTAL3		758219	0					
ANR	759032	CompoundStatement		155:53:3812:3812	758219	1					
ANR	759033	ExpressionStatement	PUNFETCH	3064:1:65860:65868	758219	0	True				
ANR	759034	Identifier	PUNFETCH		758219	0					
ANR	759035	ExpressionStatement	prev = p	3065:1:65871:65879	758219	1	True				
ANR	759036	AssignmentExpression	prev = p		758219	0		=			
ANR	759037	Identifier	prev		758219	0					
ANR	759038	Identifier	p		758219	1					
ANR	759039	ExpressionStatement	"num = scan_unsigned_octal_number ( & p , end , 3 , enc )"	3066:1:65882:65931	758219	2	True				
ANR	759040	AssignmentExpression	"num = scan_unsigned_octal_number ( & p , end , 3 , enc )"		758219	0		=			
ANR	759041	Identifier	num		758219	0					
ANR	759042	CallExpression	"scan_unsigned_octal_number ( & p , end , 3 , enc )"		758219	1					
ANR	759043	Callee	scan_unsigned_octal_number		758219	0					
ANR	759044	Identifier	scan_unsigned_octal_number		758219	0					
ANR	759045	ArgumentList	& p		758219	1					
ANR	759046	Argument	& p		758219	0					
ANR	759047	UnaryOperationExpression	& p		758219	0					
ANR	759048	UnaryOperator	&		758219	0					
ANR	759049	Identifier	p		758219	1					
ANR	759050	Argument	end		758219	1					
ANR	759051	Identifier	end		758219	0					
ANR	759052	Argument	3		758219	2					
ANR	759053	PrimaryExpression	3		758219	0					
ANR	759054	Argument	enc		758219	3					
ANR	759055	Identifier	enc		758219	0					
ANR	759056	IfStatement	if ( num < 0 )		758219	3					
ANR	759057	Condition	num < 0	3067:5:65938:65944	758219	0	True				
ANR	759058	RelationalExpression	num < 0		758219	0		<			
ANR	759059	Identifier	num		758219	0					
ANR	759060	PrimaryExpression	0		758219	1					
ANR	759061	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3067:14:65947:65976	758219	1	True				
ANR	759062	Identifier	ONIGERR_TOO_BIG_NUMBER		758219	0					
ANR	759063	IfStatement	if ( p == prev )		758219	4					
ANR	759064	Condition	p == prev	3068:5:65983:65991	758219	0	True				
ANR	759065	EqualityExpression	p == prev		758219	0		==			
ANR	759066	Identifier	p		758219	0					
ANR	759067	Identifier	prev		758219	1					
ANR	759068	CompoundStatement		160:16:3949:3949	758219	1					
ANR	759069	ExpressionStatement	num = 0	3069:3:66026:66033	758219	0	True				
ANR	759070	AssignmentExpression	num = 0		758219	0		=			
ANR	759071	Identifier	num		758219	0					
ANR	759072	PrimaryExpression	0		758219	1					
ANR	759073	ExpressionStatement	tok -> type = TK_RAW_BYTE	3071:1:66065:66088	758219	5	True				
ANR	759074	AssignmentExpression	tok -> type = TK_RAW_BYTE		758219	0		=			
ANR	759075	PtrMemberAccess	tok -> type		758219	0					
ANR	759076	Identifier	tok		758219	0					
ANR	759077	Identifier	type		758219	1					
ANR	759078	Identifier	TK_RAW_BYTE		758219	1					
ANR	759079	ExpressionStatement	tok -> base = 8	3072:1:66091:66104	758219	6	True				
ANR	759080	AssignmentExpression	tok -> base = 8		758219	0		=			
ANR	759081	PtrMemberAccess	tok -> base		758219	0					
ANR	759082	Identifier	tok		758219	0					
ANR	759083	Identifier	base		758219	1					
ANR	759084	PrimaryExpression	8		758219	1					
ANR	759085	ExpressionStatement	tok -> u . c = num	3073:1:66107:66122	758219	7	True				
ANR	759086	AssignmentExpression	tok -> u . c = num		758219	0		=			
ANR	759087	MemberAccess	tok -> u . c		758219	0					
ANR	759088	PtrMemberAccess	tok -> u		758219	0					
ANR	759089	Identifier	tok		758219	0					
ANR	759090	Identifier	u		758219	1					
ANR	759091	Identifier	c		758219	1					
ANR	759092	Identifier	num		758219	1					
ANR	759093	BreakStatement	break ;	3075:6:66138:66143	758219	66	True				
ANR	759094	Label	default :	3077:4:66150:66157	758219	67	True				
ANR	759095	Identifier	default		758219	0					
ANR	759096	ExpressionStatement	PUNFETCH	3078:6:66165:66173	758219	68	True				
ANR	759097	Identifier	PUNFETCH		758219	0					
ANR	759098	ExpressionStatement	"num = fetch_escaped_value ( & p , end , env )"	3079:6:66181:66220	758219	69	True				
ANR	759099	AssignmentExpression	"num = fetch_escaped_value ( & p , end , env )"		758219	0		=			
ANR	759100	Identifier	num		758219	0					
ANR	759101	CallExpression	"fetch_escaped_value ( & p , end , env )"		758219	1					
ANR	759102	Callee	fetch_escaped_value		758219	0					
ANR	759103	Identifier	fetch_escaped_value		758219	0					
ANR	759104	ArgumentList	& p		758219	1					
ANR	759105	Argument	& p		758219	0					
ANR	759106	UnaryOperationExpression	& p		758219	0					
ANR	759107	UnaryOperator	&		758219	0					
ANR	759108	Identifier	p		758219	1					
ANR	759109	Argument	end		758219	1					
ANR	759110	Identifier	end		758219	0					
ANR	759111	Argument	env		758219	2					
ANR	759112	Identifier	env		758219	0					
ANR	759113	IfStatement	if ( num < 0 )		758219	70					
ANR	759114	Condition	num < 0	3080:10:66232:66238	758219	0	True				
ANR	759115	RelationalExpression	num < 0		758219	0		<			
ANR	759116	Identifier	num		758219	0					
ANR	759117	PrimaryExpression	0		758219	1					
ANR	759118	ReturnStatement	return num ;	3080:19:66241:66251	758219	1	True				
ANR	759119	Identifier	num		758219	0					
ANR	759120	IfStatement	if ( tok -> u . c != num )		758219	71					
ANR	759121	Condition	tok -> u . c != num	3081:10:66263:66277	758219	0	True				
ANR	759122	EqualityExpression	tok -> u . c != num		758219	0		!=			
ANR	759123	MemberAccess	tok -> u . c		758219	0					
ANR	759124	PtrMemberAccess	tok -> u		758219	0					
ANR	759125	Identifier	tok		758219	0					
ANR	759126	Identifier	u		758219	1					
ANR	759127	Identifier	c		758219	1					
ANR	759128	Identifier	num		758219	1					
ANR	759129	CompoundStatement		173:27:4235:4235	758219	1					
ANR	759130	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3082:1:66283:66316	758219	0	True				
ANR	759131	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		758219	0		=			
ANR	759132	MemberAccess	tok -> u . code		758219	0					
ANR	759133	PtrMemberAccess	tok -> u		758219	0					
ANR	759134	Identifier	tok		758219	0					
ANR	759135	Identifier	u		758219	1					
ANR	759136	Identifier	code		758219	1					
ANR	759137	CastExpression	( OnigCodePoint ) num		758219	1					
ANR	759138	CastTarget	OnigCodePoint		758219	0					
ANR	759139	Identifier	num		758219	1					
ANR	759140	ExpressionStatement	tok -> type = TK_CODE_POINT	3083:1:66319:66346	758219	1	True				
ANR	759141	AssignmentExpression	tok -> type = TK_CODE_POINT		758219	0		=			
ANR	759142	PtrMemberAccess	tok -> type		758219	0					
ANR	759143	Identifier	tok		758219	0					
ANR	759144	Identifier	type		758219	1					
ANR	759145	Identifier	TK_CODE_POINT		758219	1					
ANR	759146	BreakStatement	break ;	3085:6:66362:66367	758219	72	True				
ANR	759147	ElseStatement	else		758219	0					
ANR	759148	IfStatement	if ( c == '[' )		758219	0					
ANR	759149	Condition	c == '['	3088:11:66390:66397	758219	0	True				
ANR	759150	EqualityExpression	c == '['		758219	0		==			
ANR	759151	Identifier	c		758219	0					
ANR	759152	PrimaryExpression	'['		758219	1					
ANR	759153	CompoundStatement		180:21:4355:4355	758219	1					
ANR	759154	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) ) )"		758219	0					
ANR	759155	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) )"	3089:8:66410:66472	758219	0	True				
ANR	759156	AndExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) )"		758219	0		&&			
ANR	759157	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET )"		758219	0					
ANR	759158	Callee	IS_SYNTAX_OP		758219	0					
ANR	759159	Identifier	IS_SYNTAX_OP		758219	0					
ANR	759160	ArgumentList	syn		758219	1					
ANR	759161	Argument	syn		758219	0					
ANR	759162	Identifier	syn		758219	0					
ANR	759163	Argument	ONIG_SYN_OP_POSIX_BRACKET		758219	1					
ANR	759164	Identifier	ONIG_SYN_OP_POSIX_BRACKET		758219	0					
ANR	759165	CallExpression	PPEEK_IS ( ':' )		758219	1					
ANR	759166	Callee	PPEEK_IS		758219	0					
ANR	759167	Identifier	PPEEK_IS		758219	0					
ANR	759168	ArgumentList	':'		758219	1					
ANR	759169	Argument	':'		758219	0					
ANR	759170	PrimaryExpression	':'		758219	0					
ANR	759171	CompoundStatement		182:6:4438:4505	758219	1					
ANR	759172	IdentifierDeclStatement	"OnigCodePoint send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' } ;"	3090:6:66483:66550	758219	0	True				
ANR	759173	IdentifierDecl	"send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' }"		758219	0					
ANR	759174	IdentifierDeclType	OnigCodePoint [ ]		758219	0					
ANR	759175	Identifier	send		758219	1					
ANR	759176	AssignmentExpression	"send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' }"		758219	2		=			
ANR	759177	Identifier	send		758219	0					
ANR	759178	InitializerList	( OnigCodePoint ) ':'		758219	1					
ANR	759179	CastExpression	( OnigCodePoint ) ':'		758219	0					
ANR	759180	CastTarget	OnigCodePoint		758219	0					
ANR	759181	PrimaryExpression	':'		758219	1					
ANR	759182	CastExpression	( OnigCodePoint ) ']'		758219	1					
ANR	759183	CastTarget	OnigCodePoint		758219	0					
ANR	759184	PrimaryExpression	']'		758219	1					
ANR	759185	ExpressionStatement	tok -> backp = p	3091:6:66558:66572	758219	1	True				
ANR	759186	AssignmentExpression	tok -> backp = p		758219	0		=			
ANR	759187	PtrMemberAccess	tok -> backp		758219	0					
ANR	759188	Identifier	tok		758219	0					
ANR	759189	Identifier	backp		758219	1					
ANR	759190	Identifier	p		758219	1					
ANR	759191	ExpressionStatement	PINC	3092:6:66609:66613	758219	2	True				
ANR	759192	Identifier	PINC		758219	0					
ANR	759193	IfStatement	"if ( str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn ) )"		758219	3					
ANR	759194	Condition	"str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn )"	3093:10:66625:66731	758219	0	True				
ANR	759195	CallExpression	"str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn )"		758219	0					
ANR	759196	Callee	str_exist_check_with_esc		758219	0					
ANR	759197	Identifier	str_exist_check_with_esc		758219	0					
ANR	759198	ArgumentList	send		758219	1					
ANR	759199	Argument	send		758219	0					
ANR	759200	Identifier	send		758219	0					
ANR	759201	Argument	2		758219	1					
ANR	759202	PrimaryExpression	2		758219	0					
ANR	759203	Argument	p		758219	2					
ANR	759204	Identifier	p		758219	0					
ANR	759205	Argument	end		758219	3					
ANR	759206	Identifier	end		758219	0					
ANR	759207	Argument	( OnigCodePoint ) ']'		758219	4					
ANR	759208	CastExpression	( OnigCodePoint ) ']'		758219	0					
ANR	759209	CastTarget	OnigCodePoint		758219	0					
ANR	759210	PrimaryExpression	']'		758219	1					
ANR	759211	Argument	enc		758219	5					
ANR	759212	Identifier	enc		758219	0					
ANR	759213	Argument	syn		758219	6					
ANR	759214	Identifier	syn		758219	0					
ANR	759215	CompoundStatement		186:67:4689:4689	758219	1					
ANR	759216	ExpressionStatement	tok -> type = TK_POSIX_BRACKET_OPEN	3095:1:66737:66770	758219	0	True				
ANR	759217	AssignmentExpression	tok -> type = TK_POSIX_BRACKET_OPEN		758219	0		=			
ANR	759218	PtrMemberAccess	tok -> type		758219	0					
ANR	759219	Identifier	tok		758219	0					
ANR	759220	Identifier	type		758219	1					
ANR	759221	Identifier	TK_POSIX_BRACKET_OPEN		758219	1					
ANR	759222	ElseStatement	else		758219	0					
ANR	759223	CompoundStatement		189:11:4746:4746	758219	0					
ANR	759224	ExpressionStatement	PUNFETCH	3098:1:66794:66802	758219	0	True				
ANR	759225	Identifier	PUNFETCH		758219	0					
ANR	759226	GotoStatement	goto cc_in_cc ;	3099:1:66805:66818	758219	1	True				
ANR	759227	Identifier	cc_in_cc		758219	0					
ANR	759228	ElseStatement	else		758219	0					
ANR	759229	CompoundStatement		194:9:4798:4798	758219	0					
ANR	759230	Label	cc_in_cc :	3103:4:66849:66857	758219	0	True				
ANR	759231	Identifier	cc_in_cc		758219	0					
ANR	759232	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) )"		758219	1					
ANR	759233	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"	3104:10:66869:66914	758219	0	True				
ANR	759234	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"		758219	0					
ANR	759235	Callee	IS_SYNTAX_OP2		758219	0					
ANR	759236	Identifier	IS_SYNTAX_OP2		758219	0					
ANR	759237	ArgumentList	syn		758219	1					
ANR	759238	Argument	syn		758219	0					
ANR	759239	Identifier	syn		758219	0					
ANR	759240	Argument	ONIG_SYN_OP2_CCLASS_SET_OP		758219	1					
ANR	759241	Identifier	ONIG_SYN_OP2_CCLASS_SET_OP		758219	0					
ANR	759242	CompoundStatement		196:58:4872:4872	758219	1					
ANR	759243	ExpressionStatement	tok -> type = TK_CC_CC_OPEN	3105:1:66920:66945	758219	0	True				
ANR	759244	AssignmentExpression	tok -> type = TK_CC_CC_OPEN		758219	0		=			
ANR	759245	PtrMemberAccess	tok -> type		758219	0					
ANR	759246	Identifier	tok		758219	0					
ANR	759247	Identifier	type		758219	1					
ANR	759248	Identifier	TK_CC_CC_OPEN		758219	1					
ANR	759249	ElseStatement	else		758219	0					
ANR	759250	CompoundStatement		199:11:4921:4921	758219	0					
ANR	759251	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"	3108:1:66969:66999	758219	0	True				
ANR	759252	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"		758219	0					
ANR	759253	Callee	CC_ESC_WARN		758219	0					
ANR	759254	Identifier	CC_ESC_WARN		758219	0					
ANR	759255	ArgumentList	env		758219	1					
ANR	759256	Argument	env		758219	0					
ANR	759257	Identifier	env		758219	0					
ANR	759258	Argument	"( UChar * ) ""["""		758219	1					
ANR	759259	CastExpression	"( UChar * ) ""["""		758219	0					
ANR	759260	CastTarget	UChar *		758219	0					
ANR	759261	PrimaryExpression	"""["""		758219	1					
ANR	759262	ElseStatement	else		758219	0					
ANR	759263	IfStatement	if ( c == '&' )		758219	0					
ANR	759264	Condition	c == '&'	3112:11:67030:67037	758219	0	True				
ANR	759265	EqualityExpression	c == '&'		758219	0		==			
ANR	759266	Identifier	c		758219	0					
ANR	759267	PrimaryExpression	'&'		758219	1					
ANR	759268	CompoundStatement		204:21:4995:4995	758219	1					
ANR	759269	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) ) )"		758219	0					
ANR	759270	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) )"	3113:8:67050:67124	758219	0	True				
ANR	759271	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) )"		758219	0		&&			
ANR	759272	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"		758219	0					
ANR	759273	Callee	IS_SYNTAX_OP2		758219	0					
ANR	759274	Identifier	IS_SYNTAX_OP2		758219	0					
ANR	759275	ArgumentList	syn		758219	1					
ANR	759276	Argument	syn		758219	0					
ANR	759277	Identifier	syn		758219	0					
ANR	759278	Argument	ONIG_SYN_OP2_CCLASS_SET_OP		758219	1					
ANR	759279	Identifier	ONIG_SYN_OP2_CCLASS_SET_OP		758219	0					
ANR	759280	AndExpression	! PEND && ( PPEEK_IS ( '&' ) )		758219	1		&&			
ANR	759281	UnaryOperationExpression	! PEND		758219	0					
ANR	759282	UnaryOperator	!		758219	0					
ANR	759283	Identifier	PEND		758219	1					
ANR	759284	CallExpression	PPEEK_IS ( '&' )		758219	1					
ANR	759285	Callee	PPEEK_IS		758219	0					
ANR	759286	Identifier	PPEEK_IS		758219	0					
ANR	759287	ArgumentList	'&'		758219	1					
ANR	759288	Argument	'&'		758219	0					
ANR	759289	PrimaryExpression	'&'		758219	0					
ANR	759290	CompoundStatement		206:27:5082:5082	758219	1					
ANR	759291	ExpressionStatement	PINC	3115:6:67135:67139	758219	0	True				
ANR	759292	Identifier	PINC		758219	0					
ANR	759293	ExpressionStatement	tok -> type = TK_CC_AND	3116:6:67147:67168	758219	1	True				
ANR	759294	AssignmentExpression	tok -> type = TK_CC_AND		758219	0		=			
ANR	759295	PtrMemberAccess	tok -> type		758219	0					
ANR	759296	Identifier	tok		758219	0					
ANR	759297	Identifier	type		758219	1					
ANR	759298	Identifier	TK_CC_AND		758219	1					
ANR	759299	Label	end :	3120:1:67182:67185	758219	14	True				
ANR	759300	Identifier	end		758219	0					
ANR	759301	ExpressionStatement	* src = p	3121:2:67189:67197	758219	15	True				
ANR	759302	AssignmentExpression	* src = p		758219	0		=			
ANR	759303	UnaryOperationExpression	* src		758219	0					
ANR	759304	UnaryOperator	*		758219	0					
ANR	759305	Identifier	src		758219	1					
ANR	759306	Identifier	p		758219	1					
ANR	759307	ReturnStatement	return tok -> type ;	3122:2:67201:67217	758219	16	True				
ANR	759308	PtrMemberAccess	tok -> type		758219	0					
ANR	759309	Identifier	tok		758219	0					
ANR	759310	Identifier	type		758219	1					
ANR	759311	ReturnType	static int		758219	1					
ANR	759312	Identifier	fetch_token_in_cc		758219	2					
ANR	759313	ParameterList	"OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		758219	3					
ANR	759314	Parameter	OnigToken * tok	2908:18:61989:62002	758219	0	True				
ANR	759315	ParameterType	OnigToken *		758219	0					
ANR	759316	Identifier	tok		758219	1					
ANR	759317	Parameter	UChar * * src	2908:34:62005:62015	758219	1	True				
ANR	759318	ParameterType	UChar * *		758219	0					
ANR	759319	Identifier	src		758219	1					
ANR	759320	Parameter	UChar * end	2908:47:62018:62027	758219	2	True				
ANR	759321	ParameterType	UChar *		758219	0					
ANR	759322	Identifier	end		758219	1					
ANR	759323	Parameter	ScanEnv * env	2908:59:62030:62041	758219	3	True				
ANR	759324	ParameterType	ScanEnv *		758219	0					
ANR	759325	Identifier	env		758219	1					
ANR	759326	CFGEntryNode	ENTRY		758219		True				
ANR	759327	CFGExitNode	EXIT		758219		True				
ANR	759328	Symbol	ONIG_SYN_OP_ESC_X_HEX2		758219						
ANR	759329	Symbol	ONIG_SYN_OP2_ESC_U_HEX4		758219						
ANR	759330	Symbol	TK_EOT		758219						
ANR	759331	Symbol	num		758219						
ANR	759332	Symbol	prev		758219						
ANR	759333	Symbol	str_exist_check_with_esc		758219						
ANR	759334	Symbol	* src		758219						
ANR	759335	Symbol	tok -> type		758219						
ANR	759336	Symbol	TK_CC_CLOSE		758219						
ANR	759337	Symbol	ONIGENC_CTYPE_SPACE		758219						
ANR	759338	Symbol	tok -> u . prop . not		758219						
ANR	759339	Symbol	IS_SYNTAX_BV		758219						
ANR	759340	Symbol	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		758219						
ANR	759341	Symbol	tok -> escaped		758219						
ANR	759342	Symbol	tok -> u . prop		758219						
ANR	759343	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		758219						
ANR	759344	Symbol	ONIGENC_IS_CODE_XDIGIT		758219						
ANR	759345	Symbol	TK_CODE_POINT		758219						
ANR	759346	Symbol	TK_CC_RANGE		758219						
ANR	759347	Symbol	PPEEK		758219						
ANR	759348	Symbol	ONIG_SYN_OP_POSIX_BRACKET		758219						
ANR	759349	Symbol	* env		758219						
ANR	759350	Symbol	IS_SYNTAX_OP		758219						
ANR	759351	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		758219						
ANR	759352	Symbol	TK_POSIX_BRACKET_OPEN		758219						
ANR	759353	Symbol	TK_CC_AND		758219						
ANR	759354	Symbol	env -> syntax		758219						
ANR	759355	Symbol	c2		758219						
ANR	759356	Symbol	TK_CHAR_TYPE		758219						
ANR	759357	Symbol	ONIG_SYN_OP2_ESC_H_XDIGIT		758219						
ANR	759358	Symbol	ONIG_SYN_OP_ESC_X_BRACE_HEX8		758219						
ANR	759359	Symbol	* tok		758219						
ANR	759360	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		758219						
ANR	759361	Symbol	tok -> u . c		758219						
ANR	759362	Symbol	send		758219						
ANR	759363	Symbol	TK_CC_CC_OPEN		758219						
ANR	759364	Symbol	PPEEK_IS		758219						
ANR	759365	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		758219						
ANR	759366	Symbol	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		758219						
ANR	759367	Symbol	syn		758219						
ANR	759368	Symbol	env -> enc		758219						
ANR	759369	Symbol	PEND		758219						
ANR	759370	Symbol	IS_SYNTAX_OP2		758219						
ANR	759371	Symbol	tok		758219						
ANR	759372	Symbol	tok -> u . code		758219						
ANR	759373	Symbol	ONIG_SYN_OP2_CCLASS_SET_OP		758219						
ANR	759374	Symbol	end		758219						
ANR	759375	Symbol	enc		758219						
ANR	759376	Symbol	tok -> u		758219						
ANR	759377	Symbol	ONIGENC_CTYPE_XDIGIT		758219						
ANR	759378	Symbol	c		758219						
ANR	759379	Symbol	ONIGERR_TOO_BIG_NUMBER		758219						
ANR	759380	Symbol	src		758219						
ANR	759381	Symbol	tok -> backp		758219						
ANR	759382	Symbol	ONIGENC_CTYPE_DIGIT		758219						
ANR	759383	Symbol	env		758219						
ANR	759384	Symbol	MC_ESC		758219						
ANR	759385	Symbol	enclen		758219						
ANR	759386	Symbol	p		758219						
ANR	759387	Symbol	scan_unsigned_octal_number		758219						
ANR	759388	Symbol	TK_CHAR_PROPERTY		758219						
ANR	759389	Symbol	& p		758219						
ANR	759390	Symbol	fetch_escaped_value		758219						
ANR	759391	Symbol	ONIG_SYN_OP_ESC_OCTAL3		758219						
ANR	759392	Symbol	tok -> u . prop . ctype		758219						
ANR	759393	Symbol	ONIGENC_CTYPE_WORD		758219						
ANR	759394	Symbol	tok -> base		758219						
ANR	759395	Symbol	TK_RAW_BYTE		758219						
ANR	759396	Symbol	TK_CHAR		758219						
ANR	759397	Symbol	scan_unsigned_hexadecimal_number		758219						
ANR	759398	Function	fetch_token	3125:0:67222:82995							
ANR	759399	FunctionDef	"fetch_token (OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		759398	0					
ANR	759400	CompoundStatement		3127:0:67300:82995	759398	0					
ANR	759401	IdentifierDeclStatement	"int r , num ;"	3128:2:67304:67314	759398	0	True				
ANR	759402	IdentifierDecl	r		759398	0					
ANR	759403	IdentifierDeclType	int		759398	0					
ANR	759404	Identifier	r		759398	1					
ANR	759405	IdentifierDecl	num		759398	1					
ANR	759406	IdentifierDeclType	int		759398	0					
ANR	759407	Identifier	num		759398	1					
ANR	759408	IdentifierDeclStatement	OnigCodePoint c ;	3129:2:67318:67333	759398	1	True				
ANR	759409	IdentifierDecl	c		759398	0					
ANR	759410	IdentifierDeclType	OnigCodePoint		759398	0					
ANR	759411	Identifier	c		759398	1					
ANR	759412	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3130:2:67337:67364	759398	2	True				
ANR	759413	IdentifierDecl	enc = env -> enc		759398	0					
ANR	759414	IdentifierDeclType	OnigEncoding		759398	0					
ANR	759415	Identifier	enc		759398	1					
ANR	759416	AssignmentExpression	enc = env -> enc		759398	2		=			
ANR	759417	Identifier	enc		759398	0					
ANR	759418	PtrMemberAccess	env -> enc		759398	1					
ANR	759419	Identifier	env		759398	0					
ANR	759420	Identifier	enc		759398	1					
ANR	759421	IdentifierDeclStatement	OnigSyntaxType * syn = env -> syntax ;	3131:2:67368:67401	759398	3	True				
ANR	759422	IdentifierDecl	* syn = env -> syntax		759398	0					
ANR	759423	IdentifierDeclType	OnigSyntaxType *		759398	0					
ANR	759424	Identifier	syn		759398	1					
ANR	759425	AssignmentExpression	* syn = env -> syntax		759398	2		=			
ANR	759426	Identifier	syn		759398	0					
ANR	759427	PtrMemberAccess	env -> syntax		759398	1					
ANR	759428	Identifier	env		759398	0					
ANR	759429	Identifier	syntax		759398	1					
ANR	759430	IdentifierDeclStatement	UChar * prev ;	3132:2:67405:67416	759398	4	True				
ANR	759431	IdentifierDecl	* prev		759398	0					
ANR	759432	IdentifierDeclType	UChar *		759398	0					
ANR	759433	Identifier	prev		759398	1					
ANR	759434	IdentifierDeclStatement	UChar * p = * src ;	3133:2:67420:67435	759398	5	True				
ANR	759435	IdentifierDecl	* p = * src		759398	0					
ANR	759436	IdentifierDeclType	UChar *		759398	0					
ANR	759437	Identifier	p		759398	1					
ANR	759438	AssignmentExpression	* p = * src		759398	2		=			
ANR	759439	Identifier	p		759398	0					
ANR	759440	UnaryOperationExpression	* src		759398	1					
ANR	759441	UnaryOperator	*		759398	0					
ANR	759442	Identifier	src		759398	1					
ANR	759443	ExpressionStatement	PFETCH_READY	3134:2:67439:67451	759398	6	True				
ANR	759444	Identifier	PFETCH_READY		759398	0					
ANR	759445	Label	start :	3136:1:67455:67460	759398	7	True				
ANR	759446	Identifier	start		759398	0					
ANR	759447	IfStatement	if ( PEND )		759398	8					
ANR	759448	Condition	PEND	3137:6:67468:67471	759398	0	True				
ANR	759449	Identifier	PEND		759398	0					
ANR	759450	CompoundStatement		11:12:173:173	759398	1					
ANR	759451	ExpressionStatement	tok -> type = TK_EOT	3138:4:67480:67498	759398	0	True				
ANR	759452	AssignmentExpression	tok -> type = TK_EOT		759398	0		=			
ANR	759453	PtrMemberAccess	tok -> type		759398	0					
ANR	759454	Identifier	tok		759398	0					
ANR	759455	Identifier	type		759398	1					
ANR	759456	Identifier	TK_EOT		759398	1					
ANR	759457	ReturnStatement	return tok -> type ;	3139:4:67504:67520	759398	1	True				
ANR	759458	PtrMemberAccess	tok -> type		759398	0					
ANR	759459	Identifier	tok		759398	0					
ANR	759460	Identifier	type		759398	1					
ANR	759461	ExpressionStatement	tok -> type = TK_STRING	3142:2:67529:67551	759398	9	True				
ANR	759462	AssignmentExpression	tok -> type = TK_STRING		759398	0		=			
ANR	759463	PtrMemberAccess	tok -> type		759398	0					
ANR	759464	Identifier	tok		759398	0					
ANR	759465	Identifier	type		759398	1					
ANR	759466	Identifier	TK_STRING		759398	1					
ANR	759467	ExpressionStatement	tok -> base = 0	3143:2:67555:67569	759398	10	True				
ANR	759468	AssignmentExpression	tok -> base = 0		759398	0		=			
ANR	759469	PtrMemberAccess	tok -> base		759398	0					
ANR	759470	Identifier	tok		759398	0					
ANR	759471	Identifier	base		759398	1					
ANR	759472	PrimaryExpression	0		759398	1					
ANR	759473	ExpressionStatement	tok -> backp = p	3144:2:67573:67587	759398	11	True				
ANR	759474	AssignmentExpression	tok -> backp = p		759398	0		=			
ANR	759475	PtrMemberAccess	tok -> backp		759398	0					
ANR	759476	Identifier	tok		759398	0					
ANR	759477	Identifier	backp		759398	1					
ANR	759478	Identifier	p		759398	1					
ANR	759479	ExpressionStatement	PFETCH ( c )	3146:2:67592:67601	759398	12	True				
ANR	759480	CallExpression	PFETCH ( c )		759398	0					
ANR	759481	Callee	PFETCH		759398	0					
ANR	759482	Identifier	PFETCH		759398	0					
ANR	759483	ArgumentList	c		759398	1					
ANR	759484	Argument	c		759398	0					
ANR	759485	Identifier	c		759398	0					
ANR	759486	IfStatement	"if ( IS_MC_ESC_CODE ( c , syn ) )"		759398	13					
ANR	759487	Condition	"IS_MC_ESC_CODE ( c , syn )"	3147:6:67609:67630	759398	0	True				
ANR	759488	CallExpression	"IS_MC_ESC_CODE ( c , syn )"		759398	0					
ANR	759489	Callee	IS_MC_ESC_CODE		759398	0					
ANR	759490	Identifier	IS_MC_ESC_CODE		759398	0					
ANR	759491	ArgumentList	c		759398	1					
ANR	759492	Argument	c		759398	0					
ANR	759493	Identifier	c		759398	0					
ANR	759494	Argument	syn		759398	1					
ANR	759495	Identifier	syn		759398	0					
ANR	759496	CompoundStatement		21:30:332:332	759398	1					
ANR	759497	IfStatement	if ( PEND )		759398	0					
ANR	759498	Condition	PEND	3148:8:67643:67646	759398	0	True				
ANR	759499	Identifier	PEND		759398	0					
ANR	759500	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	3148:14:67649:67685	759398	1	True				
ANR	759501	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		759398	0					
ANR	759502	ExpressionStatement	tok -> backp = p	3150:4:67692:67706	759398	1	True				
ANR	759503	AssignmentExpression	tok -> backp = p		759398	0		=			
ANR	759504	PtrMemberAccess	tok -> backp		759398	0					
ANR	759505	Identifier	tok		759398	0					
ANR	759506	Identifier	backp		759398	1					
ANR	759507	Identifier	p		759398	1					
ANR	759508	ExpressionStatement	PFETCH ( c )	3151:4:67712:67721	759398	2	True				
ANR	759509	CallExpression	PFETCH ( c )		759398	0					
ANR	759510	Callee	PFETCH		759398	0					
ANR	759511	Identifier	PFETCH		759398	0					
ANR	759512	ArgumentList	c		759398	1					
ANR	759513	Argument	c		759398	0					
ANR	759514	Identifier	c		759398	0					
ANR	759515	ExpressionStatement	tok -> u . c = c	3153:4:67728:67740	759398	3	True				
ANR	759516	AssignmentExpression	tok -> u . c = c		759398	0		=			
ANR	759517	MemberAccess	tok -> u . c		759398	0					
ANR	759518	PtrMemberAccess	tok -> u		759398	0					
ANR	759519	Identifier	tok		759398	0					
ANR	759520	Identifier	u		759398	1					
ANR	759521	Identifier	c		759398	1					
ANR	759522	Identifier	c		759398	1					
ANR	759523	ExpressionStatement	tok -> escaped = 1	3154:4:67746:67762	759398	4	True				
ANR	759524	AssignmentExpression	tok -> escaped = 1		759398	0		=			
ANR	759525	PtrMemberAccess	tok -> escaped		759398	0					
ANR	759526	Identifier	tok		759398	0					
ANR	759527	Identifier	escaped		759398	1					
ANR	759528	PrimaryExpression	1		759398	1					
ANR	759529	SwitchStatement	switch ( c )		759398	5					
ANR	759530	Condition	c	3155:12:67776:67776	759398	0	True				
ANR	759531	Identifier	c		759398	0					
ANR	759532	CompoundStatement		29:15:478:478	759398	1					
ANR	759533	Label	case '*' :	3156:4:67785:67793	759398	0	True				
ANR	759534	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF ) )"		759398	1					
ANR	759535	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"	3157:10:67805:67858	759398	0	True				
ANR	759536	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"		759398	0					
ANR	759537	UnaryOperator	!		759398	0					
ANR	759538	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"		759398	1					
ANR	759539	Callee	IS_SYNTAX_OP		759398	0					
ANR	759540	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759541	ArgumentList	syn		759398	1					
ANR	759542	Argument	syn		759398	0					
ANR	759543	Identifier	syn		759398	0					
ANR	759544	Argument	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		759398	1					
ANR	759545	Identifier	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		759398	0					
ANR	759546	BreakStatement	break ;	3157:66:67861:67866	759398	1	True				
ANR	759547	ExpressionStatement	tok -> type = TK_OP_REPEAT	3158:6:67874:67898	759398	2	True				
ANR	759548	AssignmentExpression	tok -> type = TK_OP_REPEAT		759398	0		=			
ANR	759549	PtrMemberAccess	tok -> type		759398	0					
ANR	759550	Identifier	tok		759398	0					
ANR	759551	Identifier	type		759398	1					
ANR	759552	Identifier	TK_OP_REPEAT		759398	1					
ANR	759553	ExpressionStatement	tok -> u . repeat . lower = 0	3159:6:67906:67929	759398	3	True				
ANR	759554	AssignmentExpression	tok -> u . repeat . lower = 0		759398	0		=			
ANR	759555	MemberAccess	tok -> u . repeat . lower		759398	0					
ANR	759556	MemberAccess	tok -> u . repeat		759398	0					
ANR	759557	PtrMemberAccess	tok -> u		759398	0					
ANR	759558	Identifier	tok		759398	0					
ANR	759559	Identifier	u		759398	1					
ANR	759560	Identifier	repeat		759398	1					
ANR	759561	Identifier	lower		759398	1					
ANR	759562	PrimaryExpression	0		759398	1					
ANR	759563	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3160:6:67937:67974	759398	4	True				
ANR	759564	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		759398	0		=			
ANR	759565	MemberAccess	tok -> u . repeat . upper		759398	0					
ANR	759566	MemberAccess	tok -> u . repeat		759398	0					
ANR	759567	PtrMemberAccess	tok -> u		759398	0					
ANR	759568	Identifier	tok		759398	0					
ANR	759569	Identifier	u		759398	1					
ANR	759570	Identifier	repeat		759398	1					
ANR	759571	Identifier	upper		759398	1					
ANR	759572	Identifier	REPEAT_INFINITE		759398	1					
ANR	759573	GotoStatement	goto greedy_check ;	3161:6:67982:67999	759398	5	True				
ANR	759574	Identifier	greedy_check		759398	0					
ANR	759575	BreakStatement	break ;	3162:6:68007:68012	759398	6	True				
ANR	759576	Label	case '+' :	3164:4:68019:68027	759398	7	True				
ANR	759577	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF ) )"		759398	8					
ANR	759578	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"	3165:10:68039:68087	759398	0	True				
ANR	759579	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"		759398	0					
ANR	759580	UnaryOperator	!		759398	0					
ANR	759581	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"		759398	1					
ANR	759582	Callee	IS_SYNTAX_OP		759398	0					
ANR	759583	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759584	ArgumentList	syn		759398	1					
ANR	759585	Argument	syn		759398	0					
ANR	759586	Identifier	syn		759398	0					
ANR	759587	Argument	ONIG_SYN_OP_ESC_PLUS_ONE_INF		759398	1					
ANR	759588	Identifier	ONIG_SYN_OP_ESC_PLUS_ONE_INF		759398	0					
ANR	759589	BreakStatement	break ;	3165:61:68090:68095	759398	1	True				
ANR	759590	ExpressionStatement	tok -> type = TK_OP_REPEAT	3166:6:68103:68127	759398	9	True				
ANR	759591	AssignmentExpression	tok -> type = TK_OP_REPEAT		759398	0		=			
ANR	759592	PtrMemberAccess	tok -> type		759398	0					
ANR	759593	Identifier	tok		759398	0					
ANR	759594	Identifier	type		759398	1					
ANR	759595	Identifier	TK_OP_REPEAT		759398	1					
ANR	759596	ExpressionStatement	tok -> u . repeat . lower = 1	3167:6:68135:68158	759398	10	True				
ANR	759597	AssignmentExpression	tok -> u . repeat . lower = 1		759398	0		=			
ANR	759598	MemberAccess	tok -> u . repeat . lower		759398	0					
ANR	759599	MemberAccess	tok -> u . repeat		759398	0					
ANR	759600	PtrMemberAccess	tok -> u		759398	0					
ANR	759601	Identifier	tok		759398	0					
ANR	759602	Identifier	u		759398	1					
ANR	759603	Identifier	repeat		759398	1					
ANR	759604	Identifier	lower		759398	1					
ANR	759605	PrimaryExpression	1		759398	1					
ANR	759606	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3168:6:68166:68203	759398	11	True				
ANR	759607	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		759398	0		=			
ANR	759608	MemberAccess	tok -> u . repeat . upper		759398	0					
ANR	759609	MemberAccess	tok -> u . repeat		759398	0					
ANR	759610	PtrMemberAccess	tok -> u		759398	0					
ANR	759611	Identifier	tok		759398	0					
ANR	759612	Identifier	u		759398	1					
ANR	759613	Identifier	repeat		759398	1					
ANR	759614	Identifier	upper		759398	1					
ANR	759615	Identifier	REPEAT_INFINITE		759398	1					
ANR	759616	GotoStatement	goto greedy_check ;	3169:6:68211:68228	759398	12	True				
ANR	759617	Identifier	greedy_check		759398	0					
ANR	759618	BreakStatement	break ;	3170:6:68236:68241	759398	13	True				
ANR	759619	Label	case '?' :	3172:4:68248:68256	759398	14	True				
ANR	759620	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE ) )"		759398	15					
ANR	759621	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"	3173:10:68268:68318	759398	0	True				
ANR	759622	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"		759398	0					
ANR	759623	UnaryOperator	!		759398	0					
ANR	759624	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"		759398	1					
ANR	759625	Callee	IS_SYNTAX_OP		759398	0					
ANR	759626	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759627	ArgumentList	syn		759398	1					
ANR	759628	Argument	syn		759398	0					
ANR	759629	Identifier	syn		759398	0					
ANR	759630	Argument	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		759398	1					
ANR	759631	Identifier	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		759398	0					
ANR	759632	BreakStatement	break ;	3173:63:68321:68326	759398	1	True				
ANR	759633	ExpressionStatement	tok -> type = TK_OP_REPEAT	3174:6:68334:68358	759398	16	True				
ANR	759634	AssignmentExpression	tok -> type = TK_OP_REPEAT		759398	0		=			
ANR	759635	PtrMemberAccess	tok -> type		759398	0					
ANR	759636	Identifier	tok		759398	0					
ANR	759637	Identifier	type		759398	1					
ANR	759638	Identifier	TK_OP_REPEAT		759398	1					
ANR	759639	ExpressionStatement	tok -> u . repeat . lower = 0	3175:6:68366:68389	759398	17	True				
ANR	759640	AssignmentExpression	tok -> u . repeat . lower = 0		759398	0		=			
ANR	759641	MemberAccess	tok -> u . repeat . lower		759398	0					
ANR	759642	MemberAccess	tok -> u . repeat		759398	0					
ANR	759643	PtrMemberAccess	tok -> u		759398	0					
ANR	759644	Identifier	tok		759398	0					
ANR	759645	Identifier	u		759398	1					
ANR	759646	Identifier	repeat		759398	1					
ANR	759647	Identifier	lower		759398	1					
ANR	759648	PrimaryExpression	0		759398	1					
ANR	759649	ExpressionStatement	tok -> u . repeat . upper = 1	3176:6:68397:68420	759398	18	True				
ANR	759650	AssignmentExpression	tok -> u . repeat . upper = 1		759398	0		=			
ANR	759651	MemberAccess	tok -> u . repeat . upper		759398	0					
ANR	759652	MemberAccess	tok -> u . repeat		759398	0					
ANR	759653	PtrMemberAccess	tok -> u		759398	0					
ANR	759654	Identifier	tok		759398	0					
ANR	759655	Identifier	u		759398	1					
ANR	759656	Identifier	repeat		759398	1					
ANR	759657	Identifier	upper		759398	1					
ANR	759658	PrimaryExpression	1		759398	1					
ANR	759659	Label	greedy_check :	3177:4:68426:68438	759398	19	True				
ANR	759660	Identifier	greedy_check		759398	0					
ANR	759661	IfStatement	"if ( ! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY ) )"		759398	20					
ANR	759662	Condition	"! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"	3178:10:68450:68525	759398	0	True				
ANR	759663	AndExpression	"! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		759398	0		&&			
ANR	759664	UnaryOperationExpression	! PEND		759398	0					
ANR	759665	UnaryOperator	!		759398	0					
ANR	759666	Identifier	PEND		759398	1					
ANR	759667	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		759398	1		&&			
ANR	759668	CallExpression	PPEEK_IS ( '?' )		759398	0					
ANR	759669	Callee	PPEEK_IS		759398	0					
ANR	759670	Identifier	PPEEK_IS		759398	0					
ANR	759671	ArgumentList	'?'		759398	1					
ANR	759672	Argument	'?'		759398	0					
ANR	759673	PrimaryExpression	'?'		759398	0					
ANR	759674	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		759398	1					
ANR	759675	Callee	IS_SYNTAX_OP		759398	0					
ANR	759676	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759677	ArgumentList	syn		759398	1					
ANR	759678	Argument	syn		759398	0					
ANR	759679	Identifier	syn		759398	0					
ANR	759680	Argument	ONIG_SYN_OP_QMARK_NON_GREEDY		759398	1					
ANR	759681	Identifier	ONIG_SYN_OP_QMARK_NON_GREEDY		759398	0					
ANR	759682	CompoundStatement		53:52:1227:1227	759398	1					
ANR	759683	ExpressionStatement	PFETCH ( c )	3180:1:68531:68540	759398	0	True				
ANR	759684	CallExpression	PFETCH ( c )		759398	0					
ANR	759685	Callee	PFETCH		759398	0					
ANR	759686	Identifier	PFETCH		759398	0					
ANR	759687	ArgumentList	c		759398	1					
ANR	759688	Argument	c		759398	0					
ANR	759689	Identifier	c		759398	0					
ANR	759690	ExpressionStatement	tok -> u . repeat . greedy = 0	3181:1:68543:68571	759398	1	True				
ANR	759691	AssignmentExpression	tok -> u . repeat . greedy = 0		759398	0		=			
ANR	759692	MemberAccess	tok -> u . repeat . greedy		759398	0					
ANR	759693	MemberAccess	tok -> u . repeat		759398	0					
ANR	759694	PtrMemberAccess	tok -> u		759398	0					
ANR	759695	Identifier	tok		759398	0					
ANR	759696	Identifier	u		759398	1					
ANR	759697	Identifier	repeat		759398	1					
ANR	759698	Identifier	greedy		759398	1					
ANR	759699	PrimaryExpression	0		759398	1					
ANR	759700	ExpressionStatement	tok -> u . repeat . possessive = 0	3182:1:68574:68602	759398	2	True				
ANR	759701	AssignmentExpression	tok -> u . repeat . possessive = 0		759398	0		=			
ANR	759702	MemberAccess	tok -> u . repeat . possessive		759398	0					
ANR	759703	MemberAccess	tok -> u . repeat		759398	0					
ANR	759704	PtrMemberAccess	tok -> u		759398	0					
ANR	759705	Identifier	tok		759398	0					
ANR	759706	Identifier	u		759398	1					
ANR	759707	Identifier	repeat		759398	1					
ANR	759708	Identifier	possessive		759398	1					
ANR	759709	PrimaryExpression	0		759398	1					
ANR	759710	ElseStatement	else		759398	0					
ANR	759711	CompoundStatement		58:11:1322:1322	759398	0					
ANR	759712	Label	possessive_check :	3185:6:68631:68647	759398	0	True				
ANR	759713	Identifier	possessive_check		759398	0					
ANR	759714	IfStatement	"if ( ! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) ) )"		759398	1					
ANR	759715	Condition	"! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"	3186:5:68654:68883	759398	0	True				
ANR	759716	AndExpression	"! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"		759398	0		&&			
ANR	759717	UnaryOperationExpression	! PEND		759398	0					
ANR	759718	UnaryOperator	!		759398	0					
ANR	759719	Identifier	PEND		759398	1					
ANR	759720	AndExpression	"PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"		759398	1		&&			
ANR	759721	CallExpression	PPEEK_IS ( '+' )		759398	0					
ANR	759722	Callee	PPEEK_IS		759398	0					
ANR	759723	Identifier	PPEEK_IS		759398	0					
ANR	759724	ArgumentList	'+'		759398	1					
ANR	759725	Argument	'+'		759398	0					
ANR	759726	PrimaryExpression	'+'		759398	0					
ANR	759727	OrExpression	"( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL )"		759398	1		||			
ANR	759728	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL"		759398	0		&&			
ANR	759729	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT )"		759398	0					
ANR	759730	Callee	IS_SYNTAX_OP2		759398	0					
ANR	759731	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	759732	ArgumentList	syn		759398	1					
ANR	759733	Argument	syn		759398	0					
ANR	759734	Identifier	syn		759398	0					
ANR	759735	Argument	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		759398	1					
ANR	759736	Identifier	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		759398	0					
ANR	759737	EqualityExpression	tok -> type != TK_INTERVAL		759398	1		!=			
ANR	759738	PtrMemberAccess	tok -> type		759398	0					
ANR	759739	Identifier	tok		759398	0					
ANR	759740	Identifier	type		759398	1					
ANR	759741	Identifier	TK_INTERVAL		759398	1					
ANR	759742	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL"		759398	1		&&			
ANR	759743	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL )"		759398	0					
ANR	759744	Callee	IS_SYNTAX_OP2		759398	0					
ANR	759745	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	759746	ArgumentList	syn		759398	1					
ANR	759747	Argument	syn		759398	0					
ANR	759748	Identifier	syn		759398	0					
ANR	759749	Argument	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		759398	1					
ANR	759750	Identifier	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		759398	0					
ANR	759751	EqualityExpression	tok -> type == TK_INTERVAL		759398	1		==			
ANR	759752	PtrMemberAccess	tok -> type		759398	0					
ANR	759753	Identifier	tok		759398	0					
ANR	759754	Identifier	type		759398	1					
ANR	759755	Identifier	TK_INTERVAL		759398	1					
ANR	759756	CompoundStatement		64:35:1585:1585	759398	1					
ANR	759757	ExpressionStatement	PFETCH ( c )	3191:3:68891:68900	759398	0	True				
ANR	759758	CallExpression	PFETCH ( c )		759398	0					
ANR	759759	Callee	PFETCH		759398	0					
ANR	759760	Identifier	PFETCH		759398	0					
ANR	759761	ArgumentList	c		759398	1					
ANR	759762	Argument	c		759398	0					
ANR	759763	Identifier	c		759398	0					
ANR	759764	ExpressionStatement	tok -> u . repeat . greedy = 1	3192:3:68905:68933	759398	1	True				
ANR	759765	AssignmentExpression	tok -> u . repeat . greedy = 1		759398	0		=			
ANR	759766	MemberAccess	tok -> u . repeat . greedy		759398	0					
ANR	759767	MemberAccess	tok -> u . repeat		759398	0					
ANR	759768	PtrMemberAccess	tok -> u		759398	0					
ANR	759769	Identifier	tok		759398	0					
ANR	759770	Identifier	u		759398	1					
ANR	759771	Identifier	repeat		759398	1					
ANR	759772	Identifier	greedy		759398	1					
ANR	759773	PrimaryExpression	1		759398	1					
ANR	759774	ExpressionStatement	tok -> u . repeat . possessive = 1	3193:3:68938:68966	759398	2	True				
ANR	759775	AssignmentExpression	tok -> u . repeat . possessive = 1		759398	0		=			
ANR	759776	MemberAccess	tok -> u . repeat . possessive		759398	0					
ANR	759777	MemberAccess	tok -> u . repeat		759398	0					
ANR	759778	PtrMemberAccess	tok -> u		759398	0					
ANR	759779	Identifier	tok		759398	0					
ANR	759780	Identifier	u		759398	1					
ANR	759781	Identifier	repeat		759398	1					
ANR	759782	Identifier	possessive		759398	1					
ANR	759783	PrimaryExpression	1		759398	1					
ANR	759784	ElseStatement	else		759398	0					
ANR	759785	CompoundStatement		69:6:1676:1676	759398	0					
ANR	759786	ExpressionStatement	tok -> u . repeat . greedy = 1	3196:3:68982:69010	759398	0	True				
ANR	759787	AssignmentExpression	tok -> u . repeat . greedy = 1		759398	0		=			
ANR	759788	MemberAccess	tok -> u . repeat . greedy		759398	0					
ANR	759789	MemberAccess	tok -> u . repeat		759398	0					
ANR	759790	PtrMemberAccess	tok -> u		759398	0					
ANR	759791	Identifier	tok		759398	0					
ANR	759792	Identifier	u		759398	1					
ANR	759793	Identifier	repeat		759398	1					
ANR	759794	Identifier	greedy		759398	1					
ANR	759795	PrimaryExpression	1		759398	1					
ANR	759796	ExpressionStatement	tok -> u . repeat . possessive = 0	3197:3:69015:69043	759398	1	True				
ANR	759797	AssignmentExpression	tok -> u . repeat . possessive = 0		759398	0		=			
ANR	759798	MemberAccess	tok -> u . repeat . possessive		759398	0					
ANR	759799	MemberAccess	tok -> u . repeat		759398	0					
ANR	759800	PtrMemberAccess	tok -> u		759398	0					
ANR	759801	Identifier	tok		759398	0					
ANR	759802	Identifier	u		759398	1					
ANR	759803	Identifier	repeat		759398	1					
ANR	759804	Identifier	possessive		759398	1					
ANR	759805	PrimaryExpression	0		759398	1					
ANR	759806	BreakStatement	break ;	3200:6:69062:69067	759398	21	True				
ANR	759807	Label	case '{' :	3202:4:69074:69082	759398	22	True				
ANR	759808	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL ) )"		759398	23					
ANR	759809	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"	3203:10:69094:69144	759398	0	True				
ANR	759810	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		759398	0					
ANR	759811	UnaryOperator	!		759398	0					
ANR	759812	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		759398	1					
ANR	759813	Callee	IS_SYNTAX_OP		759398	0					
ANR	759814	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759815	ArgumentList	syn		759398	1					
ANR	759816	Argument	syn		759398	0					
ANR	759817	Identifier	syn		759398	0					
ANR	759818	Argument	ONIG_SYN_OP_ESC_BRACE_INTERVAL		759398	1					
ANR	759819	Identifier	ONIG_SYN_OP_ESC_BRACE_INTERVAL		759398	0					
ANR	759820	BreakStatement	break ;	3203:63:69147:69152	759398	1	True				
ANR	759821	ExpressionStatement	"r = fetch_range_quantifier ( & p , end , tok , env )"	3204:6:69160:69205	759398	24	True				
ANR	759822	AssignmentExpression	"r = fetch_range_quantifier ( & p , end , tok , env )"		759398	0		=			
ANR	759823	Identifier	r		759398	0					
ANR	759824	CallExpression	"fetch_range_quantifier ( & p , end , tok , env )"		759398	1					
ANR	759825	Callee	fetch_range_quantifier		759398	0					
ANR	759826	Identifier	fetch_range_quantifier		759398	0					
ANR	759827	ArgumentList	& p		759398	1					
ANR	759828	Argument	& p		759398	0					
ANR	759829	UnaryOperationExpression	& p		759398	0					
ANR	759830	UnaryOperator	&		759398	0					
ANR	759831	Identifier	p		759398	1					
ANR	759832	Argument	end		759398	1					
ANR	759833	Identifier	end		759398	0					
ANR	759834	Argument	tok		759398	2					
ANR	759835	Identifier	tok		759398	0					
ANR	759836	Argument	env		759398	3					
ANR	759837	Identifier	env		759398	0					
ANR	759838	IfStatement	if ( r < 0 )		759398	25					
ANR	759839	Condition	r < 0	3205:10:69217:69221	759398	0	True				
ANR	759840	RelationalExpression	r < 0		759398	0		<			
ANR	759841	Identifier	r		759398	0					
ANR	759842	PrimaryExpression	0		759398	1					
ANR	759843	ReturnStatement	return r ;	3205:17:69224:69232	759398	1	True				
ANR	759844	Identifier	r		759398	0					
ANR	759845	IfStatement	if ( r == 0 )		759398	26					
ANR	759846	Condition	r == 0	3206:10:69257:69262	759398	0	True				
ANR	759847	EqualityExpression	r == 0		759398	0		==			
ANR	759848	Identifier	r		759398	0					
ANR	759849	PrimaryExpression	0		759398	1					
ANR	759850	GotoStatement	goto greedy_check ;	3206:18:69265:69282	759398	1	True				
ANR	759851	Identifier	greedy_check		759398	0					
ANR	759852	ElseStatement	else		759398	0					
ANR	759853	IfStatement	if ( r == 2 )		759398	0					
ANR	759854	Condition	r == 2	3207:15:69299:69304	759398	0	True				
ANR	759855	EqualityExpression	r == 2		759398	0		==			
ANR	759856	Identifier	r		759398	0					
ANR	759857	PrimaryExpression	2		759398	1					
ANR	759858	CompoundStatement		81:23:2006:2006	759398	1					
ANR	759859	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY ) )"		759398	0					
ANR	759860	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"	3208:5:69324:69380	759398	0	True				
ANR	759861	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"		759398	0					
ANR	759862	Callee	IS_SYNTAX_BV		759398	0					
ANR	759863	Identifier	IS_SYNTAX_BV		759398	0					
ANR	759864	ArgumentList	syn		759398	1					
ANR	759865	Argument	syn		759398	0					
ANR	759866	Identifier	syn		759398	0					
ANR	759867	Argument	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		759398	1					
ANR	759868	Identifier	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		759398	0					
ANR	759869	GotoStatement	goto possessive_check ;	3209:3:69386:69407	759398	1	True				
ANR	759870	Identifier	possessive_check		759398	0					
ANR	759871	GotoStatement	goto greedy_check ;	3211:1:69411:69428	759398	1	True				
ANR	759872	Identifier	greedy_check		759398	0					
ANR	759873	BreakStatement	break ;	3214:6:69477:69482	759398	27	True				
ANR	759874	Label	case '|' :	3216:4:69489:69497	759398	28	True				
ANR	759875	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT ) )"		759398	29					
ANR	759876	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"	3217:10:69509:69553	759398	0	True				
ANR	759877	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"		759398	0					
ANR	759878	UnaryOperator	!		759398	0					
ANR	759879	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"		759398	1					
ANR	759880	Callee	IS_SYNTAX_OP		759398	0					
ANR	759881	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759882	ArgumentList	syn		759398	1					
ANR	759883	Argument	syn		759398	0					
ANR	759884	Identifier	syn		759398	0					
ANR	759885	Argument	ONIG_SYN_OP_ESC_VBAR_ALT		759398	1					
ANR	759886	Identifier	ONIG_SYN_OP_ESC_VBAR_ALT		759398	0					
ANR	759887	BreakStatement	break ;	3217:57:69556:69561	759398	1	True				
ANR	759888	ExpressionStatement	tok -> type = TK_ALT	3218:6:69569:69587	759398	30	True				
ANR	759889	AssignmentExpression	tok -> type = TK_ALT		759398	0		=			
ANR	759890	PtrMemberAccess	tok -> type		759398	0					
ANR	759891	Identifier	tok		759398	0					
ANR	759892	Identifier	type		759398	1					
ANR	759893	Identifier	TK_ALT		759398	1					
ANR	759894	BreakStatement	break ;	3219:6:69595:69600	759398	31	True				
ANR	759895	Label	case '(' :	3221:4:69607:69615	759398	32	True				
ANR	759896	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP ) )"		759398	33					
ANR	759897	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"	3222:10:69627:69676	759398	0	True				
ANR	759898	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		759398	0					
ANR	759899	UnaryOperator	!		759398	0					
ANR	759900	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		759398	1					
ANR	759901	Callee	IS_SYNTAX_OP		759398	0					
ANR	759902	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759903	ArgumentList	syn		759398	1					
ANR	759904	Argument	syn		759398	0					
ANR	759905	Identifier	syn		759398	0					
ANR	759906	Argument	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		759398	1					
ANR	759907	Identifier	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		759398	0					
ANR	759908	BreakStatement	break ;	3222:62:69679:69684	759398	1	True				
ANR	759909	ExpressionStatement	tok -> type = TK_SUBEXP_OPEN	3223:6:69692:69718	759398	34	True				
ANR	759910	AssignmentExpression	tok -> type = TK_SUBEXP_OPEN		759398	0		=			
ANR	759911	PtrMemberAccess	tok -> type		759398	0					
ANR	759912	Identifier	tok		759398	0					
ANR	759913	Identifier	type		759398	1					
ANR	759914	Identifier	TK_SUBEXP_OPEN		759398	1					
ANR	759915	BreakStatement	break ;	3224:6:69726:69731	759398	35	True				
ANR	759916	Label	case ')' :	3226:4:69738:69746	759398	36	True				
ANR	759917	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP ) )"		759398	37					
ANR	759918	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"	3227:10:69758:69807	759398	0	True				
ANR	759919	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		759398	0					
ANR	759920	UnaryOperator	!		759398	0					
ANR	759921	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		759398	1					
ANR	759922	Callee	IS_SYNTAX_OP		759398	0					
ANR	759923	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759924	ArgumentList	syn		759398	1					
ANR	759925	Argument	syn		759398	0					
ANR	759926	Identifier	syn		759398	0					
ANR	759927	Argument	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		759398	1					
ANR	759928	Identifier	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		759398	0					
ANR	759929	BreakStatement	break ;	3227:62:69810:69815	759398	1	True				
ANR	759930	ExpressionStatement	tok -> type = TK_SUBEXP_CLOSE	3228:6:69823:69850	759398	38	True				
ANR	759931	AssignmentExpression	tok -> type = TK_SUBEXP_CLOSE		759398	0		=			
ANR	759932	PtrMemberAccess	tok -> type		759398	0					
ANR	759933	Identifier	tok		759398	0					
ANR	759934	Identifier	type		759398	1					
ANR	759935	Identifier	TK_SUBEXP_CLOSE		759398	1					
ANR	759936	BreakStatement	break ;	3229:6:69858:69863	759398	39	True				
ANR	759937	Label	case 'w' :	3231:4:69870:69878	759398	40	True				
ANR	759938	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD ) )"		759398	41					
ANR	759939	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"	3232:10:69890:69932	759398	0	True				
ANR	759940	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		759398	0					
ANR	759941	UnaryOperator	!		759398	0					
ANR	759942	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		759398	1					
ANR	759943	Callee	IS_SYNTAX_OP		759398	0					
ANR	759944	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759945	ArgumentList	syn		759398	1					
ANR	759946	Argument	syn		759398	0					
ANR	759947	Identifier	syn		759398	0					
ANR	759948	Argument	ONIG_SYN_OP_ESC_W_WORD		759398	1					
ANR	759949	Identifier	ONIG_SYN_OP_ESC_W_WORD		759398	0					
ANR	759950	BreakStatement	break ;	3232:55:69935:69940	759398	1	True				
ANR	759951	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3233:6:69948:69972	759398	42	True				
ANR	759952	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	759953	PtrMemberAccess	tok -> type		759398	0					
ANR	759954	Identifier	tok		759398	0					
ANR	759955	Identifier	type		759398	1					
ANR	759956	Identifier	TK_CHAR_TYPE		759398	1					
ANR	759957	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	3234:6:69980:70018	759398	43	True				
ANR	759958	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		759398	0		=			
ANR	759959	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	759960	MemberAccess	tok -> u . prop		759398	0					
ANR	759961	PtrMemberAccess	tok -> u		759398	0					
ANR	759962	Identifier	tok		759398	0					
ANR	759963	Identifier	u		759398	1					
ANR	759964	Identifier	prop		759398	1					
ANR	759965	Identifier	ctype		759398	1					
ANR	759966	Identifier	ONIGENC_CTYPE_WORD		759398	1					
ANR	759967	ExpressionStatement	tok -> u . prop . not = 0	3235:6:70026:70047	759398	44	True				
ANR	759968	AssignmentExpression	tok -> u . prop . not = 0		759398	0		=			
ANR	759969	MemberAccess	tok -> u . prop . not		759398	0					
ANR	759970	MemberAccess	tok -> u . prop		759398	0					
ANR	759971	PtrMemberAccess	tok -> u		759398	0					
ANR	759972	Identifier	tok		759398	0					
ANR	759973	Identifier	u		759398	1					
ANR	759974	Identifier	prop		759398	1					
ANR	759975	Identifier	not		759398	1					
ANR	759976	PrimaryExpression	0		759398	1					
ANR	759977	BreakStatement	break ;	3236:6:70055:70060	759398	45	True				
ANR	759978	Label	case 'W' :	3238:4:70067:70075	759398	46	True				
ANR	759979	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD ) )"		759398	47					
ANR	759980	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"	3239:10:70087:70129	759398	0	True				
ANR	759981	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		759398	0					
ANR	759982	UnaryOperator	!		759398	0					
ANR	759983	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		759398	1					
ANR	759984	Callee	IS_SYNTAX_OP		759398	0					
ANR	759985	Identifier	IS_SYNTAX_OP		759398	0					
ANR	759986	ArgumentList	syn		759398	1					
ANR	759987	Argument	syn		759398	0					
ANR	759988	Identifier	syn		759398	0					
ANR	759989	Argument	ONIG_SYN_OP_ESC_W_WORD		759398	1					
ANR	759990	Identifier	ONIG_SYN_OP_ESC_W_WORD		759398	0					
ANR	759991	BreakStatement	break ;	3239:55:70132:70137	759398	1	True				
ANR	759992	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3240:6:70145:70169	759398	48	True				
ANR	759993	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	759994	PtrMemberAccess	tok -> type		759398	0					
ANR	759995	Identifier	tok		759398	0					
ANR	759996	Identifier	type		759398	1					
ANR	759997	Identifier	TK_CHAR_TYPE		759398	1					
ANR	759998	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	3241:6:70177:70215	759398	49	True				
ANR	759999	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		759398	0		=			
ANR	760000	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	760001	MemberAccess	tok -> u . prop		759398	0					
ANR	760002	PtrMemberAccess	tok -> u		759398	0					
ANR	760003	Identifier	tok		759398	0					
ANR	760004	Identifier	u		759398	1					
ANR	760005	Identifier	prop		759398	1					
ANR	760006	Identifier	ctype		759398	1					
ANR	760007	Identifier	ONIGENC_CTYPE_WORD		759398	1					
ANR	760008	ExpressionStatement	tok -> u . prop . not = 1	3242:6:70223:70244	759398	50	True				
ANR	760009	AssignmentExpression	tok -> u . prop . not = 1		759398	0		=			
ANR	760010	MemberAccess	tok -> u . prop . not		759398	0					
ANR	760011	MemberAccess	tok -> u . prop		759398	0					
ANR	760012	PtrMemberAccess	tok -> u		759398	0					
ANR	760013	Identifier	tok		759398	0					
ANR	760014	Identifier	u		759398	1					
ANR	760015	Identifier	prop		759398	1					
ANR	760016	Identifier	not		759398	1					
ANR	760017	PrimaryExpression	1		759398	1					
ANR	760018	BreakStatement	break ;	3243:6:70252:70257	759398	51	True				
ANR	760019	Label	case 'b' :	3245:4:70264:70272	759398	52	True				
ANR	760020	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND ) )"		759398	53					
ANR	760021	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"	3246:10:70284:70332	759398	0	True				
ANR	760022	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		759398	0					
ANR	760023	UnaryOperator	!		759398	0					
ANR	760024	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		759398	1					
ANR	760025	Callee	IS_SYNTAX_OP		759398	0					
ANR	760026	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760027	ArgumentList	syn		759398	1					
ANR	760028	Argument	syn		759398	0					
ANR	760029	Identifier	syn		759398	0					
ANR	760030	Argument	ONIG_SYN_OP_ESC_B_WORD_BOUND		759398	1					
ANR	760031	Identifier	ONIG_SYN_OP_ESC_B_WORD_BOUND		759398	0					
ANR	760032	BreakStatement	break ;	3246:61:70335:70340	759398	1	True				
ANR	760033	ExpressionStatement	tok -> type = TK_ANCHOR	3247:6:70348:70369	759398	54	True				
ANR	760034	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760035	PtrMemberAccess	tok -> type		759398	0					
ANR	760036	Identifier	tok		759398	0					
ANR	760037	Identifier	type		759398	1					
ANR	760038	Identifier	TK_ANCHOR		759398	1					
ANR	760039	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_BOUND	3248:6:70377:70410	759398	55	True				
ANR	760040	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_BOUND		759398	0		=			
ANR	760041	MemberAccess	tok -> u . anchor		759398	0					
ANR	760042	PtrMemberAccess	tok -> u		759398	0					
ANR	760043	Identifier	tok		759398	0					
ANR	760044	Identifier	u		759398	1					
ANR	760045	Identifier	anchor		759398	1					
ANR	760046	Identifier	ANCHOR_WORD_BOUND		759398	1					
ANR	760047	BreakStatement	break ;	3249:6:70418:70423	759398	56	True				
ANR	760048	Label	case 'B' :	3251:4:70430:70438	759398	57	True				
ANR	760049	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND ) )"		759398	58					
ANR	760050	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"	3252:10:70450:70498	759398	0	True				
ANR	760051	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		759398	0					
ANR	760052	UnaryOperator	!		759398	0					
ANR	760053	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		759398	1					
ANR	760054	Callee	IS_SYNTAX_OP		759398	0					
ANR	760055	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760056	ArgumentList	syn		759398	1					
ANR	760057	Argument	syn		759398	0					
ANR	760058	Identifier	syn		759398	0					
ANR	760059	Argument	ONIG_SYN_OP_ESC_B_WORD_BOUND		759398	1					
ANR	760060	Identifier	ONIG_SYN_OP_ESC_B_WORD_BOUND		759398	0					
ANR	760061	BreakStatement	break ;	3252:61:70501:70506	759398	1	True				
ANR	760062	ExpressionStatement	tok -> type = TK_ANCHOR	3253:6:70514:70535	759398	59	True				
ANR	760063	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760064	PtrMemberAccess	tok -> type		759398	0					
ANR	760065	Identifier	tok		759398	0					
ANR	760066	Identifier	type		759398	1					
ANR	760067	Identifier	TK_ANCHOR		759398	1					
ANR	760068	ExpressionStatement	tok -> u . anchor = ANCHOR_NOT_WORD_BOUND	3254:6:70543:70580	759398	60	True				
ANR	760069	AssignmentExpression	tok -> u . anchor = ANCHOR_NOT_WORD_BOUND		759398	0		=			
ANR	760070	MemberAccess	tok -> u . anchor		759398	0					
ANR	760071	PtrMemberAccess	tok -> u		759398	0					
ANR	760072	Identifier	tok		759398	0					
ANR	760073	Identifier	u		759398	1					
ANR	760074	Identifier	anchor		759398	1					
ANR	760075	Identifier	ANCHOR_NOT_WORD_BOUND		759398	1					
ANR	760076	BreakStatement	break ;	3255:6:70588:70593	759398	61	True				
ANR	760077	Label	case '<' :	3258:4:70626:70634	759398	62	True				
ANR	760078	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END ) )"		759398	63					
ANR	760079	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"	3259:10:70646:70701	759398	0	True				
ANR	760080	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		759398	0					
ANR	760081	UnaryOperator	!		759398	0					
ANR	760082	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		759398	1					
ANR	760083	Callee	IS_SYNTAX_OP		759398	0					
ANR	760084	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760085	ArgumentList	syn		759398	1					
ANR	760086	Argument	syn		759398	0					
ANR	760087	Identifier	syn		759398	0					
ANR	760088	Argument	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		759398	1					
ANR	760089	Identifier	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		759398	0					
ANR	760090	BreakStatement	break ;	3259:68:70704:70709	759398	1	True				
ANR	760091	ExpressionStatement	tok -> type = TK_ANCHOR	3260:6:70717:70738	759398	64	True				
ANR	760092	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760093	PtrMemberAccess	tok -> type		759398	0					
ANR	760094	Identifier	tok		759398	0					
ANR	760095	Identifier	type		759398	1					
ANR	760096	Identifier	TK_ANCHOR		759398	1					
ANR	760097	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_BEGIN	3261:6:70746:70779	759398	65	True				
ANR	760098	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_BEGIN		759398	0		=			
ANR	760099	MemberAccess	tok -> u . anchor		759398	0					
ANR	760100	PtrMemberAccess	tok -> u		759398	0					
ANR	760101	Identifier	tok		759398	0					
ANR	760102	Identifier	u		759398	1					
ANR	760103	Identifier	anchor		759398	1					
ANR	760104	Identifier	ANCHOR_WORD_BEGIN		759398	1					
ANR	760105	BreakStatement	break ;	3262:6:70787:70792	759398	66	True				
ANR	760106	Label	case '>' :	3264:4:70799:70807	759398	67	True				
ANR	760107	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END ) )"		759398	68					
ANR	760108	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"	3265:10:70819:70874	759398	0	True				
ANR	760109	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		759398	0					
ANR	760110	UnaryOperator	!		759398	0					
ANR	760111	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		759398	1					
ANR	760112	Callee	IS_SYNTAX_OP		759398	0					
ANR	760113	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760114	ArgumentList	syn		759398	1					
ANR	760115	Argument	syn		759398	0					
ANR	760116	Identifier	syn		759398	0					
ANR	760117	Argument	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		759398	1					
ANR	760118	Identifier	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		759398	0					
ANR	760119	BreakStatement	break ;	3265:68:70877:70882	759398	1	True				
ANR	760120	ExpressionStatement	tok -> type = TK_ANCHOR	3266:6:70890:70911	759398	69	True				
ANR	760121	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760122	PtrMemberAccess	tok -> type		759398	0					
ANR	760123	Identifier	tok		759398	0					
ANR	760124	Identifier	type		759398	1					
ANR	760125	Identifier	TK_ANCHOR		759398	1					
ANR	760126	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_END	3267:6:70919:70950	759398	70	True				
ANR	760127	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_END		759398	0		=			
ANR	760128	MemberAccess	tok -> u . anchor		759398	0					
ANR	760129	PtrMemberAccess	tok -> u		759398	0					
ANR	760130	Identifier	tok		759398	0					
ANR	760131	Identifier	u		759398	1					
ANR	760132	Identifier	anchor		759398	1					
ANR	760133	Identifier	ANCHOR_WORD_END		759398	1					
ANR	760134	BreakStatement	break ;	3268:6:70958:70963	759398	71	True				
ANR	760135	Label	case 's' :	3271:4:70977:70985	759398	72	True				
ANR	760136	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE ) )"		759398	73					
ANR	760137	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"	3272:10:70997:71046	759398	0	True				
ANR	760138	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		759398	0					
ANR	760139	UnaryOperator	!		759398	0					
ANR	760140	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		759398	1					
ANR	760141	Callee	IS_SYNTAX_OP		759398	0					
ANR	760142	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760143	ArgumentList	syn		759398	1					
ANR	760144	Argument	syn		759398	0					
ANR	760145	Identifier	syn		759398	0					
ANR	760146	Argument	ONIG_SYN_OP_ESC_S_WHITE_SPACE		759398	1					
ANR	760147	Identifier	ONIG_SYN_OP_ESC_S_WHITE_SPACE		759398	0					
ANR	760148	BreakStatement	break ;	3272:62:71049:71054	759398	1	True				
ANR	760149	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3273:6:71062:71086	759398	74	True				
ANR	760150	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	760151	PtrMemberAccess	tok -> type		759398	0					
ANR	760152	Identifier	tok		759398	0					
ANR	760153	Identifier	type		759398	1					
ANR	760154	Identifier	TK_CHAR_TYPE		759398	1					
ANR	760155	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	3274:6:71094:71133	759398	75	True				
ANR	760156	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		759398	0		=			
ANR	760157	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	760158	MemberAccess	tok -> u . prop		759398	0					
ANR	760159	PtrMemberAccess	tok -> u		759398	0					
ANR	760160	Identifier	tok		759398	0					
ANR	760161	Identifier	u		759398	1					
ANR	760162	Identifier	prop		759398	1					
ANR	760163	Identifier	ctype		759398	1					
ANR	760164	Identifier	ONIGENC_CTYPE_SPACE		759398	1					
ANR	760165	ExpressionStatement	tok -> u . prop . not = 0	3275:6:71141:71162	759398	76	True				
ANR	760166	AssignmentExpression	tok -> u . prop . not = 0		759398	0		=			
ANR	760167	MemberAccess	tok -> u . prop . not		759398	0					
ANR	760168	MemberAccess	tok -> u . prop		759398	0					
ANR	760169	PtrMemberAccess	tok -> u		759398	0					
ANR	760170	Identifier	tok		759398	0					
ANR	760171	Identifier	u		759398	1					
ANR	760172	Identifier	prop		759398	1					
ANR	760173	Identifier	not		759398	1					
ANR	760174	PrimaryExpression	0		759398	1					
ANR	760175	BreakStatement	break ;	3276:6:71170:71175	759398	77	True				
ANR	760176	Label	case 'S' :	3278:4:71182:71190	759398	78	True				
ANR	760177	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE ) )"		759398	79					
ANR	760178	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"	3279:10:71202:71251	759398	0	True				
ANR	760179	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		759398	0					
ANR	760180	UnaryOperator	!		759398	0					
ANR	760181	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		759398	1					
ANR	760182	Callee	IS_SYNTAX_OP		759398	0					
ANR	760183	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760184	ArgumentList	syn		759398	1					
ANR	760185	Argument	syn		759398	0					
ANR	760186	Identifier	syn		759398	0					
ANR	760187	Argument	ONIG_SYN_OP_ESC_S_WHITE_SPACE		759398	1					
ANR	760188	Identifier	ONIG_SYN_OP_ESC_S_WHITE_SPACE		759398	0					
ANR	760189	BreakStatement	break ;	3279:62:71254:71259	759398	1	True				
ANR	760190	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3280:6:71267:71291	759398	80	True				
ANR	760191	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	760192	PtrMemberAccess	tok -> type		759398	0					
ANR	760193	Identifier	tok		759398	0					
ANR	760194	Identifier	type		759398	1					
ANR	760195	Identifier	TK_CHAR_TYPE		759398	1					
ANR	760196	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	3281:6:71299:71338	759398	81	True				
ANR	760197	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		759398	0		=			
ANR	760198	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	760199	MemberAccess	tok -> u . prop		759398	0					
ANR	760200	PtrMemberAccess	tok -> u		759398	0					
ANR	760201	Identifier	tok		759398	0					
ANR	760202	Identifier	u		759398	1					
ANR	760203	Identifier	prop		759398	1					
ANR	760204	Identifier	ctype		759398	1					
ANR	760205	Identifier	ONIGENC_CTYPE_SPACE		759398	1					
ANR	760206	ExpressionStatement	tok -> u . prop . not = 1	3282:6:71346:71367	759398	82	True				
ANR	760207	AssignmentExpression	tok -> u . prop . not = 1		759398	0		=			
ANR	760208	MemberAccess	tok -> u . prop . not		759398	0					
ANR	760209	MemberAccess	tok -> u . prop		759398	0					
ANR	760210	PtrMemberAccess	tok -> u		759398	0					
ANR	760211	Identifier	tok		759398	0					
ANR	760212	Identifier	u		759398	1					
ANR	760213	Identifier	prop		759398	1					
ANR	760214	Identifier	not		759398	1					
ANR	760215	PrimaryExpression	1		759398	1					
ANR	760216	BreakStatement	break ;	3283:6:71375:71380	759398	83	True				
ANR	760217	Label	case 'd' :	3285:4:71387:71395	759398	84	True				
ANR	760218	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT ) )"		759398	85					
ANR	760219	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"	3286:10:71407:71450	759398	0	True				
ANR	760220	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		759398	0					
ANR	760221	UnaryOperator	!		759398	0					
ANR	760222	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		759398	1					
ANR	760223	Callee	IS_SYNTAX_OP		759398	0					
ANR	760224	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760225	ArgumentList	syn		759398	1					
ANR	760226	Argument	syn		759398	0					
ANR	760227	Identifier	syn		759398	0					
ANR	760228	Argument	ONIG_SYN_OP_ESC_D_DIGIT		759398	1					
ANR	760229	Identifier	ONIG_SYN_OP_ESC_D_DIGIT		759398	0					
ANR	760230	BreakStatement	break ;	3286:56:71453:71458	759398	1	True				
ANR	760231	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3287:6:71466:71490	759398	86	True				
ANR	760232	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	760233	PtrMemberAccess	tok -> type		759398	0					
ANR	760234	Identifier	tok		759398	0					
ANR	760235	Identifier	type		759398	1					
ANR	760236	Identifier	TK_CHAR_TYPE		759398	1					
ANR	760237	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	3288:6:71498:71537	759398	87	True				
ANR	760238	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		759398	0		=			
ANR	760239	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	760240	MemberAccess	tok -> u . prop		759398	0					
ANR	760241	PtrMemberAccess	tok -> u		759398	0					
ANR	760242	Identifier	tok		759398	0					
ANR	760243	Identifier	u		759398	1					
ANR	760244	Identifier	prop		759398	1					
ANR	760245	Identifier	ctype		759398	1					
ANR	760246	Identifier	ONIGENC_CTYPE_DIGIT		759398	1					
ANR	760247	ExpressionStatement	tok -> u . prop . not = 0	3289:6:71545:71566	759398	88	True				
ANR	760248	AssignmentExpression	tok -> u . prop . not = 0		759398	0		=			
ANR	760249	MemberAccess	tok -> u . prop . not		759398	0					
ANR	760250	MemberAccess	tok -> u . prop		759398	0					
ANR	760251	PtrMemberAccess	tok -> u		759398	0					
ANR	760252	Identifier	tok		759398	0					
ANR	760253	Identifier	u		759398	1					
ANR	760254	Identifier	prop		759398	1					
ANR	760255	Identifier	not		759398	1					
ANR	760256	PrimaryExpression	0		759398	1					
ANR	760257	BreakStatement	break ;	3290:6:71574:71579	759398	89	True				
ANR	760258	Label	case 'D' :	3292:4:71586:71594	759398	90	True				
ANR	760259	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT ) )"		759398	91					
ANR	760260	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"	3293:10:71606:71649	759398	0	True				
ANR	760261	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		759398	0					
ANR	760262	UnaryOperator	!		759398	0					
ANR	760263	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		759398	1					
ANR	760264	Callee	IS_SYNTAX_OP		759398	0					
ANR	760265	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760266	ArgumentList	syn		759398	1					
ANR	760267	Argument	syn		759398	0					
ANR	760268	Identifier	syn		759398	0					
ANR	760269	Argument	ONIG_SYN_OP_ESC_D_DIGIT		759398	1					
ANR	760270	Identifier	ONIG_SYN_OP_ESC_D_DIGIT		759398	0					
ANR	760271	BreakStatement	break ;	3293:56:71652:71657	759398	1	True				
ANR	760272	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3294:6:71665:71689	759398	92	True				
ANR	760273	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	760274	PtrMemberAccess	tok -> type		759398	0					
ANR	760275	Identifier	tok		759398	0					
ANR	760276	Identifier	type		759398	1					
ANR	760277	Identifier	TK_CHAR_TYPE		759398	1					
ANR	760278	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	3295:6:71697:71736	759398	93	True				
ANR	760279	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		759398	0		=			
ANR	760280	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	760281	MemberAccess	tok -> u . prop		759398	0					
ANR	760282	PtrMemberAccess	tok -> u		759398	0					
ANR	760283	Identifier	tok		759398	0					
ANR	760284	Identifier	u		759398	1					
ANR	760285	Identifier	prop		759398	1					
ANR	760286	Identifier	ctype		759398	1					
ANR	760287	Identifier	ONIGENC_CTYPE_DIGIT		759398	1					
ANR	760288	ExpressionStatement	tok -> u . prop . not = 1	3296:6:71744:71765	759398	94	True				
ANR	760289	AssignmentExpression	tok -> u . prop . not = 1		759398	0		=			
ANR	760290	MemberAccess	tok -> u . prop . not		759398	0					
ANR	760291	MemberAccess	tok -> u . prop		759398	0					
ANR	760292	PtrMemberAccess	tok -> u		759398	0					
ANR	760293	Identifier	tok		759398	0					
ANR	760294	Identifier	u		759398	1					
ANR	760295	Identifier	prop		759398	1					
ANR	760296	Identifier	not		759398	1					
ANR	760297	PrimaryExpression	1		759398	1					
ANR	760298	BreakStatement	break ;	3297:6:71773:71778	759398	95	True				
ANR	760299	Label	case 'h' :	3299:4:71785:71793	759398	96	True				
ANR	760300	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		759398	97					
ANR	760301	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	3300:10:71805:71851	759398	0	True				
ANR	760302	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		759398	0					
ANR	760303	UnaryOperator	!		759398	0					
ANR	760304	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		759398	1					
ANR	760305	Callee	IS_SYNTAX_OP2		759398	0					
ANR	760306	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	760307	ArgumentList	syn		759398	1					
ANR	760308	Argument	syn		759398	0					
ANR	760309	Identifier	syn		759398	0					
ANR	760310	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		759398	1					
ANR	760311	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		759398	0					
ANR	760312	BreakStatement	break ;	3300:59:71854:71859	759398	1	True				
ANR	760313	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3301:6:71867:71891	759398	98	True				
ANR	760314	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	760315	PtrMemberAccess	tok -> type		759398	0					
ANR	760316	Identifier	tok		759398	0					
ANR	760317	Identifier	type		759398	1					
ANR	760318	Identifier	TK_CHAR_TYPE		759398	1					
ANR	760319	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	3302:6:71899:71939	759398	99	True				
ANR	760320	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		759398	0		=			
ANR	760321	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	760322	MemberAccess	tok -> u . prop		759398	0					
ANR	760323	PtrMemberAccess	tok -> u		759398	0					
ANR	760324	Identifier	tok		759398	0					
ANR	760325	Identifier	u		759398	1					
ANR	760326	Identifier	prop		759398	1					
ANR	760327	Identifier	ctype		759398	1					
ANR	760328	Identifier	ONIGENC_CTYPE_XDIGIT		759398	1					
ANR	760329	ExpressionStatement	tok -> u . prop . not = 0	3303:6:71947:71968	759398	100	True				
ANR	760330	AssignmentExpression	tok -> u . prop . not = 0		759398	0		=			
ANR	760331	MemberAccess	tok -> u . prop . not		759398	0					
ANR	760332	MemberAccess	tok -> u . prop		759398	0					
ANR	760333	PtrMemberAccess	tok -> u		759398	0					
ANR	760334	Identifier	tok		759398	0					
ANR	760335	Identifier	u		759398	1					
ANR	760336	Identifier	prop		759398	1					
ANR	760337	Identifier	not		759398	1					
ANR	760338	PrimaryExpression	0		759398	1					
ANR	760339	BreakStatement	break ;	3304:6:71976:71981	759398	101	True				
ANR	760340	Label	case 'H' :	3306:4:71988:71996	759398	102	True				
ANR	760341	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		759398	103					
ANR	760342	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	3307:10:72008:72054	759398	0	True				
ANR	760343	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		759398	0					
ANR	760344	UnaryOperator	!		759398	0					
ANR	760345	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		759398	1					
ANR	760346	Callee	IS_SYNTAX_OP2		759398	0					
ANR	760347	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	760348	ArgumentList	syn		759398	1					
ANR	760349	Argument	syn		759398	0					
ANR	760350	Identifier	syn		759398	0					
ANR	760351	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		759398	1					
ANR	760352	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		759398	0					
ANR	760353	BreakStatement	break ;	3307:59:72057:72062	759398	1	True				
ANR	760354	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3308:6:72070:72094	759398	104	True				
ANR	760355	AssignmentExpression	tok -> type = TK_CHAR_TYPE		759398	0		=			
ANR	760356	PtrMemberAccess	tok -> type		759398	0					
ANR	760357	Identifier	tok		759398	0					
ANR	760358	Identifier	type		759398	1					
ANR	760359	Identifier	TK_CHAR_TYPE		759398	1					
ANR	760360	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	3309:6:72102:72142	759398	105	True				
ANR	760361	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		759398	0		=			
ANR	760362	MemberAccess	tok -> u . prop . ctype		759398	0					
ANR	760363	MemberAccess	tok -> u . prop		759398	0					
ANR	760364	PtrMemberAccess	tok -> u		759398	0					
ANR	760365	Identifier	tok		759398	0					
ANR	760366	Identifier	u		759398	1					
ANR	760367	Identifier	prop		759398	1					
ANR	760368	Identifier	ctype		759398	1					
ANR	760369	Identifier	ONIGENC_CTYPE_XDIGIT		759398	1					
ANR	760370	ExpressionStatement	tok -> u . prop . not = 1	3310:6:72150:72171	759398	106	True				
ANR	760371	AssignmentExpression	tok -> u . prop . not = 1		759398	0		=			
ANR	760372	MemberAccess	tok -> u . prop . not		759398	0					
ANR	760373	MemberAccess	tok -> u . prop		759398	0					
ANR	760374	PtrMemberAccess	tok -> u		759398	0					
ANR	760375	Identifier	tok		759398	0					
ANR	760376	Identifier	u		759398	1					
ANR	760377	Identifier	prop		759398	1					
ANR	760378	Identifier	not		759398	1					
ANR	760379	PrimaryExpression	1		759398	1					
ANR	760380	BreakStatement	break ;	3311:6:72179:72184	759398	107	True				
ANR	760381	Label	case 'A' :	3313:4:72191:72199	759398	108	True				
ANR	760382	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		759398	109					
ANR	760383	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3314:10:72211:72260	759398	0	True				
ANR	760384	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		759398	0					
ANR	760385	UnaryOperator	!		759398	0					
ANR	760386	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		759398	1					
ANR	760387	Callee	IS_SYNTAX_OP		759398	0					
ANR	760388	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760389	ArgumentList	syn		759398	1					
ANR	760390	Argument	syn		759398	0					
ANR	760391	Identifier	syn		759398	0					
ANR	760392	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		759398	1					
ANR	760393	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		759398	0					
ANR	760394	BreakStatement	break ;	3314:62:72263:72268	759398	1	True				
ANR	760395	Label	begin_buf :	3315:4:72274:72283	759398	110	True				
ANR	760396	Identifier	begin_buf		759398	0					
ANR	760397	ExpressionStatement	tok -> type = TK_ANCHOR	3316:6:72291:72312	759398	111	True				
ANR	760398	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760399	PtrMemberAccess	tok -> type		759398	0					
ANR	760400	Identifier	tok		759398	0					
ANR	760401	Identifier	type		759398	1					
ANR	760402	Identifier	TK_ANCHOR		759398	1					
ANR	760403	ExpressionStatement	tok -> u . subtype = ANCHOR_BEGIN_BUF	3317:6:72320:72353	759398	112	True				
ANR	760404	AssignmentExpression	tok -> u . subtype = ANCHOR_BEGIN_BUF		759398	0		=			
ANR	760405	MemberAccess	tok -> u . subtype		759398	0					
ANR	760406	PtrMemberAccess	tok -> u		759398	0					
ANR	760407	Identifier	tok		759398	0					
ANR	760408	Identifier	u		759398	1					
ANR	760409	Identifier	subtype		759398	1					
ANR	760410	Identifier	ANCHOR_BEGIN_BUF		759398	1					
ANR	760411	BreakStatement	break ;	3318:6:72361:72366	759398	113	True				
ANR	760412	Label	case 'Z' :	3320:4:72373:72381	759398	114	True				
ANR	760413	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		759398	115					
ANR	760414	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3321:10:72393:72442	759398	0	True				
ANR	760415	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		759398	0					
ANR	760416	UnaryOperator	!		759398	0					
ANR	760417	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		759398	1					
ANR	760418	Callee	IS_SYNTAX_OP		759398	0					
ANR	760419	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760420	ArgumentList	syn		759398	1					
ANR	760421	Argument	syn		759398	0					
ANR	760422	Identifier	syn		759398	0					
ANR	760423	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		759398	1					
ANR	760424	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		759398	0					
ANR	760425	BreakStatement	break ;	3321:62:72445:72450	759398	1	True				
ANR	760426	ExpressionStatement	tok -> type = TK_ANCHOR	3322:6:72458:72479	759398	116	True				
ANR	760427	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760428	PtrMemberAccess	tok -> type		759398	0					
ANR	760429	Identifier	tok		759398	0					
ANR	760430	Identifier	type		759398	1					
ANR	760431	Identifier	TK_ANCHOR		759398	1					
ANR	760432	ExpressionStatement	tok -> u . subtype = ANCHOR_SEMI_END_BUF	3323:6:72487:72523	759398	117	True				
ANR	760433	AssignmentExpression	tok -> u . subtype = ANCHOR_SEMI_END_BUF		759398	0		=			
ANR	760434	MemberAccess	tok -> u . subtype		759398	0					
ANR	760435	PtrMemberAccess	tok -> u		759398	0					
ANR	760436	Identifier	tok		759398	0					
ANR	760437	Identifier	u		759398	1					
ANR	760438	Identifier	subtype		759398	1					
ANR	760439	Identifier	ANCHOR_SEMI_END_BUF		759398	1					
ANR	760440	BreakStatement	break ;	3324:6:72531:72536	759398	118	True				
ANR	760441	Label	case 'z' :	3326:4:72543:72551	759398	119	True				
ANR	760442	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		759398	120					
ANR	760443	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3327:10:72563:72612	759398	0	True				
ANR	760444	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		759398	0					
ANR	760445	UnaryOperator	!		759398	0					
ANR	760446	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		759398	1					
ANR	760447	Callee	IS_SYNTAX_OP		759398	0					
ANR	760448	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760449	ArgumentList	syn		759398	1					
ANR	760450	Argument	syn		759398	0					
ANR	760451	Identifier	syn		759398	0					
ANR	760452	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		759398	1					
ANR	760453	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		759398	0					
ANR	760454	BreakStatement	break ;	3327:62:72615:72620	759398	1	True				
ANR	760455	Label	end_buf :	3328:4:72626:72633	759398	121	True				
ANR	760456	Identifier	end_buf		759398	0					
ANR	760457	ExpressionStatement	tok -> type = TK_ANCHOR	3329:6:72641:72662	759398	122	True				
ANR	760458	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760459	PtrMemberAccess	tok -> type		759398	0					
ANR	760460	Identifier	tok		759398	0					
ANR	760461	Identifier	type		759398	1					
ANR	760462	Identifier	TK_ANCHOR		759398	1					
ANR	760463	ExpressionStatement	tok -> u . subtype = ANCHOR_END_BUF	3330:6:72670:72701	759398	123	True				
ANR	760464	AssignmentExpression	tok -> u . subtype = ANCHOR_END_BUF		759398	0		=			
ANR	760465	MemberAccess	tok -> u . subtype		759398	0					
ANR	760466	PtrMemberAccess	tok -> u		759398	0					
ANR	760467	Identifier	tok		759398	0					
ANR	760468	Identifier	u		759398	1					
ANR	760469	Identifier	subtype		759398	1					
ANR	760470	Identifier	ANCHOR_END_BUF		759398	1					
ANR	760471	BreakStatement	break ;	3331:6:72709:72714	759398	124	True				
ANR	760472	Label	case 'G' :	3333:4:72721:72729	759398	125	True				
ANR	760473	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR ) )"		759398	126					
ANR	760474	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"	3334:10:72741:72799	759398	0	True				
ANR	760475	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"		759398	0					
ANR	760476	UnaryOperator	!		759398	0					
ANR	760477	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"		759398	1					
ANR	760478	Callee	IS_SYNTAX_OP		759398	0					
ANR	760479	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760480	ArgumentList	syn		759398	1					
ANR	760481	Argument	syn		759398	0					
ANR	760482	Identifier	syn		759398	0					
ANR	760483	Argument	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		759398	1					
ANR	760484	Identifier	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		759398	0					
ANR	760485	BreakStatement	break ;	3334:71:72802:72807	759398	1	True				
ANR	760486	ExpressionStatement	tok -> type = TK_ANCHOR	3335:6:72815:72836	759398	127	True				
ANR	760487	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	760488	PtrMemberAccess	tok -> type		759398	0					
ANR	760489	Identifier	tok		759398	0					
ANR	760490	Identifier	type		759398	1					
ANR	760491	Identifier	TK_ANCHOR		759398	1					
ANR	760492	ExpressionStatement	tok -> u . subtype = ANCHOR_BEGIN_POSITION	3336:6:72844:72882	759398	128	True				
ANR	760493	AssignmentExpression	tok -> u . subtype = ANCHOR_BEGIN_POSITION		759398	0		=			
ANR	760494	MemberAccess	tok -> u . subtype		759398	0					
ANR	760495	PtrMemberAccess	tok -> u		759398	0					
ANR	760496	Identifier	tok		759398	0					
ANR	760497	Identifier	u		759398	1					
ANR	760498	Identifier	subtype		759398	1					
ANR	760499	Identifier	ANCHOR_BEGIN_POSITION		759398	1					
ANR	760500	BreakStatement	break ;	3337:6:72890:72895	759398	129	True				
ANR	760501	Label	case '`' :	3339:4:72902:72910	759398	130	True				
ANR	760502	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR ) )"		759398	131					
ANR	760503	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"	3340:10:72922:72974	759398	0	True				
ANR	760504	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		759398	0					
ANR	760505	UnaryOperator	!		759398	0					
ANR	760506	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		759398	1					
ANR	760507	Callee	IS_SYNTAX_OP2		759398	0					
ANR	760508	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	760509	ArgumentList	syn		759398	1					
ANR	760510	Argument	syn		759398	0					
ANR	760511	Identifier	syn		759398	0					
ANR	760512	Argument	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		759398	1					
ANR	760513	Identifier	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		759398	0					
ANR	760514	BreakStatement	break ;	3340:65:72977:72982	759398	1	True				
ANR	760515	GotoStatement	goto begin_buf ;	3341:6:72990:73004	759398	132	True				
ANR	760516	Identifier	begin_buf		759398	0					
ANR	760517	BreakStatement	break ;	3342:6:73012:73017	759398	133	True				
ANR	760518	Label	case '\\'' :	3344:4:73024:73033	759398	134	True				
ANR	760519	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR ) )"		759398	135					
ANR	760520	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"	3345:10:73045:73097	759398	0	True				
ANR	760521	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		759398	0					
ANR	760522	UnaryOperator	!		759398	0					
ANR	760523	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		759398	1					
ANR	760524	Callee	IS_SYNTAX_OP2		759398	0					
ANR	760525	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	760526	ArgumentList	syn		759398	1					
ANR	760527	Argument	syn		759398	0					
ANR	760528	Identifier	syn		759398	0					
ANR	760529	Argument	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		759398	1					
ANR	760530	Identifier	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		759398	0					
ANR	760531	BreakStatement	break ;	3345:65:73100:73105	759398	1	True				
ANR	760532	GotoStatement	goto end_buf ;	3346:6:73113:73125	759398	136	True				
ANR	760533	Identifier	end_buf		759398	0					
ANR	760534	BreakStatement	break ;	3347:6:73133:73138	759398	137	True				
ANR	760535	Label	case 'x' :	3349:4:73145:73153	759398	138	True				
ANR	760536	IfStatement	if ( PEND )		759398	139					
ANR	760537	Condition	PEND	3350:10:73165:73168	759398	0	True				
ANR	760538	Identifier	PEND		759398	0					
ANR	760539	BreakStatement	break ;	3350:16:73171:73176	759398	1	True				
ANR	760540	ExpressionStatement	prev = p	3352:6:73185:73193	759398	140	True				
ANR	760541	AssignmentExpression	prev = p		759398	0		=			
ANR	760542	Identifier	prev		759398	0					
ANR	760543	Identifier	p		759398	1					
ANR	760544	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 ) )"		759398	141					
ANR	760545	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"	3353:10:73205:73268	759398	0	True				
ANR	760546	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		759398	0		&&			
ANR	760547	CallExpression	PPEEK_IS ( '{' )		759398	0					
ANR	760548	Callee	PPEEK_IS		759398	0					
ANR	760549	Identifier	PPEEK_IS		759398	0					
ANR	760550	ArgumentList	'{'		759398	1					
ANR	760551	Argument	'{'		759398	0					
ANR	760552	PrimaryExpression	'{'		759398	0					
ANR	760553	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		759398	1					
ANR	760554	Callee	IS_SYNTAX_OP		759398	0					
ANR	760555	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760556	ArgumentList	syn		759398	1					
ANR	760557	Argument	syn		759398	0					
ANR	760558	Identifier	syn		759398	0					
ANR	760559	Argument	ONIG_SYN_OP_ESC_X_BRACE_HEX8		759398	1					
ANR	760560	Identifier	ONIG_SYN_OP_ESC_X_BRACE_HEX8		759398	0					
ANR	760561	CompoundStatement		227:76:5970:5970	759398	1					
ANR	760562	ExpressionStatement	PINC	3354:1:73274:73278	759398	0	True				
ANR	760563	Identifier	PINC		759398	0					
ANR	760564	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"	3355:1:73281:73336	759398	1	True				
ANR	760565	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		759398	0		=			
ANR	760566	Identifier	num		759398	0					
ANR	760567	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		759398	1					
ANR	760568	Callee	scan_unsigned_hexadecimal_number		759398	0					
ANR	760569	Identifier	scan_unsigned_hexadecimal_number		759398	0					
ANR	760570	ArgumentList	& p		759398	1					
ANR	760571	Argument	& p		759398	0					
ANR	760572	UnaryOperationExpression	& p		759398	0					
ANR	760573	UnaryOperator	&		759398	0					
ANR	760574	Identifier	p		759398	1					
ANR	760575	Argument	end		759398	1					
ANR	760576	Identifier	end		759398	0					
ANR	760577	Argument	8		759398	2					
ANR	760578	PrimaryExpression	8		759398	0					
ANR	760579	Argument	enc		759398	3					
ANR	760580	Identifier	enc		759398	0					
ANR	760581	IfStatement	if ( num < 0 )		759398	2					
ANR	760582	Condition	num < 0	3356:5:73343:73349	759398	0	True				
ANR	760583	RelationalExpression	num < 0		759398	0		<			
ANR	760584	Identifier	num		759398	0					
ANR	760585	PrimaryExpression	0		759398	1					
ANR	760586	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	3356:14:73352:73390	759398	1	True				
ANR	760587	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		759398	0					
ANR	760588	IfStatement	if ( ! PEND )		759398	3					
ANR	760589	Condition	! PEND	3357:5:73397:73401	759398	0	True				
ANR	760590	UnaryOperationExpression	! PEND		759398	0					
ANR	760591	UnaryOperator	!		759398	0					
ANR	760592	Identifier	PEND		759398	1					
ANR	760593	CompoundStatement		231:12:6103:6103	759398	1					
ANR	760594	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK ) )"		759398	0					
ANR	760595	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK )"	3358:14:73420:73453	759398	0	True				
ANR	760596	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK )"		759398	0					
ANR	760597	Callee	ONIGENC_IS_CODE_XDIGIT		759398	0					
ANR	760598	Identifier	ONIGENC_IS_CODE_XDIGIT		759398	0					
ANR	760599	ArgumentList	enc		759398	1					
ANR	760600	Argument	enc		759398	0					
ANR	760601	Identifier	enc		759398	0					
ANR	760602	Argument	PPEEK		759398	1					
ANR	760603	Identifier	PPEEK		759398	0					
ANR	760604	ReturnStatement	return ONIGERR_TOO_LONG_WIDE_CHAR_VALUE ;	3359:12:73468:73507	759398	1	True				
ANR	760605	Identifier	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		759398	0					
ANR	760606	IfStatement	"if ( ( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' ) )"		759398	4					
ANR	760607	Condition	"( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' )"	3362:5:73525:73580	759398	0	True				
ANR	760608	AndExpression	"( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' )"		759398	0		&&			
ANR	760609	RelationalExpression	"p > prev + enclen ( enc , prev )"		759398	0		>			
ANR	760610	Identifier	p		759398	0					
ANR	760611	AdditiveExpression	"prev + enclen ( enc , prev )"		759398	1		+			
ANR	760612	Identifier	prev		759398	0					
ANR	760613	CallExpression	"enclen ( enc , prev )"		759398	1					
ANR	760614	Callee	enclen		759398	0					
ANR	760615	Identifier	enclen		759398	0					
ANR	760616	ArgumentList	enc		759398	1					
ANR	760617	Argument	enc		759398	0					
ANR	760618	Identifier	enc		759398	0					
ANR	760619	Argument	prev		759398	1					
ANR	760620	Identifier	prev		759398	0					
ANR	760621	AndExpression	! PEND && PPEEK_IS ( '}' )		759398	1		&&			
ANR	760622	UnaryOperationExpression	! PEND		759398	0					
ANR	760623	UnaryOperator	!		759398	0					
ANR	760624	Identifier	PEND		759398	1					
ANR	760625	CallExpression	PPEEK_IS ( '}' )		759398	1					
ANR	760626	Callee	PPEEK_IS		759398	0					
ANR	760627	Identifier	PPEEK_IS		759398	0					
ANR	760628	ArgumentList	'}'		759398	1					
ANR	760629	Argument	'}'		759398	0					
ANR	760630	PrimaryExpression	'}'		759398	0					
ANR	760631	CompoundStatement		236:63:6282:6282	759398	1					
ANR	760632	ExpressionStatement	PINC	3363:3:73588:73592	759398	0	True				
ANR	760633	Identifier	PINC		759398	0					
ANR	760634	ExpressionStatement	tok -> type = TK_CODE_POINT	3364:3:73597:73624	759398	1	True				
ANR	760635	AssignmentExpression	tok -> type = TK_CODE_POINT		759398	0		=			
ANR	760636	PtrMemberAccess	tok -> type		759398	0					
ANR	760637	Identifier	tok		759398	0					
ANR	760638	Identifier	type		759398	1					
ANR	760639	Identifier	TK_CODE_POINT		759398	1					
ANR	760640	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3365:3:73629:73662	759398	2	True				
ANR	760641	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		759398	0		=			
ANR	760642	MemberAccess	tok -> u . code		759398	0					
ANR	760643	PtrMemberAccess	tok -> u		759398	0					
ANR	760644	Identifier	tok		759398	0					
ANR	760645	Identifier	u		759398	1					
ANR	760646	Identifier	code		759398	1					
ANR	760647	CastExpression	( OnigCodePoint ) num		759398	1					
ANR	760648	CastTarget	OnigCodePoint		759398	0					
ANR	760649	Identifier	num		759398	1					
ANR	760650	ElseStatement	else		759398	0					
ANR	760651	CompoundStatement		241:6:6372:6372	759398	0					
ANR	760652	ExpressionStatement	p = prev	3369:3:73724:73732	759398	0	True				
ANR	760653	AssignmentExpression	p = prev		759398	0		=			
ANR	760654	Identifier	p		759398	0					
ANR	760655	Identifier	prev		759398	1					
ANR	760656	ElseStatement	else		759398	0					
ANR	760657	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 ) )"		759398	0					
ANR	760658	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"	3372:15:73760:73800	759398	0	True				
ANR	760659	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"		759398	0					
ANR	760660	Callee	IS_SYNTAX_OP		759398	0					
ANR	760661	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760662	ArgumentList	syn		759398	1					
ANR	760663	Argument	syn		759398	0					
ANR	760664	Identifier	syn		759398	0					
ANR	760665	Argument	ONIG_SYN_OP_ESC_X_HEX2		759398	1					
ANR	760666	Identifier	ONIG_SYN_OP_ESC_X_HEX2		759398	0					
ANR	760667	CompoundStatement		246:58:6502:6502	759398	1					
ANR	760668	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"	3373:1:73806:73861	759398	0	True				
ANR	760669	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		759398	0		=			
ANR	760670	Identifier	num		759398	0					
ANR	760671	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		759398	1					
ANR	760672	Callee	scan_unsigned_hexadecimal_number		759398	0					
ANR	760673	Identifier	scan_unsigned_hexadecimal_number		759398	0					
ANR	760674	ArgumentList	& p		759398	1					
ANR	760675	Argument	& p		759398	0					
ANR	760676	UnaryOperationExpression	& p		759398	0					
ANR	760677	UnaryOperator	&		759398	0					
ANR	760678	Identifier	p		759398	1					
ANR	760679	Argument	end		759398	1					
ANR	760680	Identifier	end		759398	0					
ANR	760681	Argument	2		759398	2					
ANR	760682	PrimaryExpression	2		759398	0					
ANR	760683	Argument	enc		759398	3					
ANR	760684	Identifier	enc		759398	0					
ANR	760685	IfStatement	if ( num < 0 )		759398	1					
ANR	760686	Condition	num < 0	3374:5:73868:73874	759398	0	True				
ANR	760687	RelationalExpression	num < 0		759398	0		<			
ANR	760688	Identifier	num		759398	0					
ANR	760689	PrimaryExpression	0		759398	1					
ANR	760690	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3374:14:73877:73906	759398	1	True				
ANR	760691	Identifier	ONIGERR_TOO_BIG_NUMBER		759398	0					
ANR	760692	IfStatement	if ( p == prev )		759398	2					
ANR	760693	Condition	p == prev	3375:5:73913:73921	759398	0	True				
ANR	760694	EqualityExpression	p == prev		759398	0		==			
ANR	760695	Identifier	p		759398	0					
ANR	760696	Identifier	prev		759398	1					
ANR	760697	CompoundStatement		249:16:6623:6623	759398	1					
ANR	760698	ExpressionStatement	num = 0	3376:3:73956:73963	759398	0	True				
ANR	760699	AssignmentExpression	num = 0		759398	0		=			
ANR	760700	Identifier	num		759398	0					
ANR	760701	PrimaryExpression	0		759398	1					
ANR	760702	ExpressionStatement	tok -> type = TK_RAW_BYTE	3378:1:73995:74018	759398	3	True				
ANR	760703	AssignmentExpression	tok -> type = TK_RAW_BYTE		759398	0		=			
ANR	760704	PtrMemberAccess	tok -> type		759398	0					
ANR	760705	Identifier	tok		759398	0					
ANR	760706	Identifier	type		759398	1					
ANR	760707	Identifier	TK_RAW_BYTE		759398	1					
ANR	760708	ExpressionStatement	tok -> base = 16	3379:1:74021:74035	759398	4	True				
ANR	760709	AssignmentExpression	tok -> base = 16		759398	0		=			
ANR	760710	PtrMemberAccess	tok -> base		759398	0					
ANR	760711	Identifier	tok		759398	0					
ANR	760712	Identifier	base		759398	1					
ANR	760713	PrimaryExpression	16		759398	1					
ANR	760714	ExpressionStatement	tok -> u . c = num	3380:1:74038:74053	759398	5	True				
ANR	760715	AssignmentExpression	tok -> u . c = num		759398	0		=			
ANR	760716	MemberAccess	tok -> u . c		759398	0					
ANR	760717	PtrMemberAccess	tok -> u		759398	0					
ANR	760718	Identifier	tok		759398	0					
ANR	760719	Identifier	u		759398	1					
ANR	760720	Identifier	c		759398	1					
ANR	760721	Identifier	num		759398	1					
ANR	760722	BreakStatement	break ;	3382:6:74069:74074	759398	142	True				
ANR	760723	Label	case 'u' :	3384:4:74081:74089	759398	143	True				
ANR	760724	IfStatement	if ( PEND )		759398	144					
ANR	760725	Condition	PEND	3385:10:74101:74104	759398	0	True				
ANR	760726	Identifier	PEND		759398	0					
ANR	760727	BreakStatement	break ;	3385:16:74107:74112	759398	1	True				
ANR	760728	ExpressionStatement	prev = p	3387:6:74121:74129	759398	145	True				
ANR	760729	AssignmentExpression	prev = p		759398	0		=			
ANR	760730	Identifier	prev		759398	0					
ANR	760731	Identifier	p		759398	1					
ANR	760732	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 ) )"		759398	146					
ANR	760733	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"	3388:10:74141:74183	759398	0	True				
ANR	760734	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"		759398	0					
ANR	760735	Callee	IS_SYNTAX_OP2		759398	0					
ANR	760736	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	760737	ArgumentList	syn		759398	1					
ANR	760738	Argument	syn		759398	0					
ANR	760739	Identifier	syn		759398	0					
ANR	760740	Argument	ONIG_SYN_OP2_ESC_U_HEX4		759398	1					
ANR	760741	Identifier	ONIG_SYN_OP2_ESC_U_HEX4		759398	0					
ANR	760742	CompoundStatement		262:55:6885:6885	759398	1					
ANR	760743	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"	3389:1:74189:74244	759398	0	True				
ANR	760744	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		759398	0		=			
ANR	760745	Identifier	num		759398	0					
ANR	760746	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		759398	1					
ANR	760747	Callee	scan_unsigned_hexadecimal_number		759398	0					
ANR	760748	Identifier	scan_unsigned_hexadecimal_number		759398	0					
ANR	760749	ArgumentList	& p		759398	1					
ANR	760750	Argument	& p		759398	0					
ANR	760751	UnaryOperationExpression	& p		759398	0					
ANR	760752	UnaryOperator	&		759398	0					
ANR	760753	Identifier	p		759398	1					
ANR	760754	Argument	end		759398	1					
ANR	760755	Identifier	end		759398	0					
ANR	760756	Argument	4		759398	2					
ANR	760757	PrimaryExpression	4		759398	0					
ANR	760758	Argument	enc		759398	3					
ANR	760759	Identifier	enc		759398	0					
ANR	760760	IfStatement	if ( num < 0 )		759398	1					
ANR	760761	Condition	num < 0	3390:5:74251:74257	759398	0	True				
ANR	760762	RelationalExpression	num < 0		759398	0		<			
ANR	760763	Identifier	num		759398	0					
ANR	760764	PrimaryExpression	0		759398	1					
ANR	760765	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3390:14:74260:74289	759398	1	True				
ANR	760766	Identifier	ONIGERR_TOO_BIG_NUMBER		759398	0					
ANR	760767	IfStatement	if ( p == prev )		759398	2					
ANR	760768	Condition	p == prev	3391:5:74296:74304	759398	0	True				
ANR	760769	EqualityExpression	p == prev		759398	0		==			
ANR	760770	Identifier	p		759398	0					
ANR	760771	Identifier	prev		759398	1					
ANR	760772	CompoundStatement		265:16:7006:7006	759398	1					
ANR	760773	ExpressionStatement	num = 0	3392:3:74339:74346	759398	0	True				
ANR	760774	AssignmentExpression	num = 0		759398	0		=			
ANR	760775	Identifier	num		759398	0					
ANR	760776	PrimaryExpression	0		759398	1					
ANR	760777	ExpressionStatement	tok -> type = TK_CODE_POINT	3394:1:74378:74405	759398	3	True				
ANR	760778	AssignmentExpression	tok -> type = TK_CODE_POINT		759398	0		=			
ANR	760779	PtrMemberAccess	tok -> type		759398	0					
ANR	760780	Identifier	tok		759398	0					
ANR	760781	Identifier	type		759398	1					
ANR	760782	Identifier	TK_CODE_POINT		759398	1					
ANR	760783	ExpressionStatement	tok -> base = 16	3395:1:74408:74424	759398	4	True				
ANR	760784	AssignmentExpression	tok -> base = 16		759398	0		=			
ANR	760785	PtrMemberAccess	tok -> base		759398	0					
ANR	760786	Identifier	tok		759398	0					
ANR	760787	Identifier	base		759398	1					
ANR	760788	PrimaryExpression	16		759398	1					
ANR	760789	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3396:1:74427:74460	759398	5	True				
ANR	760790	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		759398	0		=			
ANR	760791	MemberAccess	tok -> u . code		759398	0					
ANR	760792	PtrMemberAccess	tok -> u		759398	0					
ANR	760793	Identifier	tok		759398	0					
ANR	760794	Identifier	u		759398	1					
ANR	760795	Identifier	code		759398	1					
ANR	760796	CastExpression	( OnigCodePoint ) num		759398	1					
ANR	760797	CastTarget	OnigCodePoint		759398	0					
ANR	760798	Identifier	num		759398	1					
ANR	760799	BreakStatement	break ;	3398:6:74476:74481	759398	147	True				
ANR	760800	Label	case '1' :	3400:4:74488:74496	759398	148	True				
ANR	760801	Label	case '2' :	3400:14:74498:74506	759398	149	True				
ANR	760802	Label	case '3' :	3400:24:74508:74516	759398	150	True				
ANR	760803	Label	case '4' :	3400:34:74518:74526	759398	151	True				
ANR	760804	Label	case '5' :	3401:4:74532:74540	759398	152	True				
ANR	760805	Label	case '6' :	3401:14:74542:74550	759398	153	True				
ANR	760806	Label	case '7' :	3401:24:74552:74560	759398	154	True				
ANR	760807	Label	case '8' :	3401:34:74562:74570	759398	155	True				
ANR	760808	Label	case '9' :	3401:44:74572:74580	759398	156	True				
ANR	760809	ExpressionStatement	PUNFETCH	3402:6:74588:74596	759398	157	True				
ANR	760810	Identifier	PUNFETCH		759398	0					
ANR	760811	ExpressionStatement	prev = p	3403:6:74604:74612	759398	158	True				
ANR	760812	AssignmentExpression	prev = p		759398	0		=			
ANR	760813	Identifier	prev		759398	0					
ANR	760814	Identifier	p		759398	1					
ANR	760815	ExpressionStatement	"num = onig_scan_unsigned_number ( & p , end , enc )"	3404:6:74620:74665	759398	159	True				
ANR	760816	AssignmentExpression	"num = onig_scan_unsigned_number ( & p , end , enc )"		759398	0		=			
ANR	760817	Identifier	num		759398	0					
ANR	760818	CallExpression	"onig_scan_unsigned_number ( & p , end , enc )"		759398	1					
ANR	760819	Callee	onig_scan_unsigned_number		759398	0					
ANR	760820	Identifier	onig_scan_unsigned_number		759398	0					
ANR	760821	ArgumentList	& p		759398	1					
ANR	760822	Argument	& p		759398	0					
ANR	760823	UnaryOperationExpression	& p		759398	0					
ANR	760824	UnaryOperator	&		759398	0					
ANR	760825	Identifier	p		759398	1					
ANR	760826	Argument	end		759398	1					
ANR	760827	Identifier	end		759398	0					
ANR	760828	Argument	enc		759398	2					
ANR	760829	Identifier	enc		759398	0					
ANR	760830	IfStatement	if ( num < 0 || num > ONIG_MAX_BACKREF_NUM )		759398	160					
ANR	760831	Condition	num < 0 || num > ONIG_MAX_BACKREF_NUM	3405:10:74677:74713	759398	0	True				
ANR	760832	OrExpression	num < 0 || num > ONIG_MAX_BACKREF_NUM		759398	0		||			
ANR	760833	RelationalExpression	num < 0		759398	0		<			
ANR	760834	Identifier	num		759398	0					
ANR	760835	PrimaryExpression	0		759398	1					
ANR	760836	RelationalExpression	num > ONIG_MAX_BACKREF_NUM		759398	1		>			
ANR	760837	Identifier	num		759398	0					
ANR	760838	Identifier	ONIG_MAX_BACKREF_NUM		759398	1					
ANR	760839	CompoundStatement		279:49:7415:7415	759398	1					
ANR	760840	GotoStatement	goto skip_backref ;	3406:8:74726:74743	759398	0	True				
ANR	760841	Identifier	skip_backref		759398	0					
ANR	760842	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 ) )"		759398	161					
ANR	760843	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 )"	3409:10:74764:74850	759398	0	True				
ANR	760844	AndExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 )"		759398	0		&&			
ANR	760845	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF )"		759398	0					
ANR	760846	Callee	IS_SYNTAX_OP		759398	0					
ANR	760847	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760848	ArgumentList	syn		759398	1					
ANR	760849	Argument	syn		759398	0					
ANR	760850	Identifier	syn		759398	0					
ANR	760851	Argument	ONIG_SYN_OP_DECIMAL_BACKREF		759398	1					
ANR	760852	Identifier	ONIG_SYN_OP_DECIMAL_BACKREF		759398	0					
ANR	760853	OrExpression	num <= env -> num_mem || num <= 9		759398	1		||			
ANR	760854	RelationalExpression	num <= env -> num_mem		759398	0		<=			
ANR	760855	Identifier	num		759398	0					
ANR	760856	PtrMemberAccess	env -> num_mem		759398	1					
ANR	760857	Identifier	env		759398	0					
ANR	760858	Identifier	num_mem		759398	1					
ANR	760859	RelationalExpression	num <= 9		759398	1		<=			
ANR	760860	Identifier	num		759398	0					
ANR	760861	PrimaryExpression	9		759398	1					
ANR	760862	CompoundStatement		284:38:7552:7552	759398	1					
ANR	760863	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		759398	0					
ANR	760864	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3411:5:74892:74939	759398	0	True				
ANR	760865	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		759398	0					
ANR	760866	Callee	IS_SYNTAX_BV		759398	0					
ANR	760867	Identifier	IS_SYNTAX_BV		759398	0					
ANR	760868	ArgumentList	syn		759398	1					
ANR	760869	Argument	syn		759398	0					
ANR	760870	Identifier	syn		759398	0					
ANR	760871	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		759398	1					
ANR	760872	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		759398	0					
ANR	760873	CompoundStatement		285:55:7641:7641	759398	1					
ANR	760874	IfStatement	if ( num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] ) )		759398	0					
ANR	760875	Condition	num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )	3412:7:74951:75008	759398	0	True				
ANR	760876	OrExpression	num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )		759398	0		||			
ANR	760877	RelationalExpression	num > env -> num_mem		759398	0		>			
ANR	760878	Identifier	num		759398	0					
ANR	760879	PtrMemberAccess	env -> num_mem		759398	1					
ANR	760880	Identifier	env		759398	0					
ANR	760881	Identifier	num_mem		759398	1					
ANR	760882	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )		759398	1					
ANR	760883	Callee	IS_NULL		759398	0					
ANR	760884	Identifier	IS_NULL		759398	0					
ANR	760885	ArgumentList	SCANENV_MEM_NODES ( env ) [ num ]		759398	1					
ANR	760886	Argument	SCANENV_MEM_NODES ( env ) [ num ]		759398	0					
ANR	760887	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ num ]		759398	0					
ANR	760888	CallExpression	SCANENV_MEM_NODES ( env )		759398	0					
ANR	760889	Callee	SCANENV_MEM_NODES		759398	0					
ANR	760890	Identifier	SCANENV_MEM_NODES		759398	0					
ANR	760891	ArgumentList	env		759398	1					
ANR	760892	Argument	env		759398	0					
ANR	760893	Identifier	env		759398	0					
ANR	760894	Identifier	num		759398	1					
ANR	760895	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3413:5:75016:75046	759398	1	True				
ANR	760896	Identifier	ONIGERR_INVALID_BACKREF		759398	0					
ANR	760897	ExpressionStatement	tok -> type = TK_BACKREF	3416:1:75053:75075	759398	1	True				
ANR	760898	AssignmentExpression	tok -> type = TK_BACKREF		759398	0		=			
ANR	760899	PtrMemberAccess	tok -> type		759398	0					
ANR	760900	Identifier	tok		759398	0					
ANR	760901	Identifier	type		759398	1					
ANR	760902	Identifier	TK_BACKREF		759398	1					
ANR	760903	ExpressionStatement	tok -> u . backref . num = 1	3417:1:75078:75104	759398	2	True				
ANR	760904	AssignmentExpression	tok -> u . backref . num = 1		759398	0		=			
ANR	760905	MemberAccess	tok -> u . backref . num		759398	0					
ANR	760906	MemberAccess	tok -> u . backref		759398	0					
ANR	760907	PtrMemberAccess	tok -> u		759398	0					
ANR	760908	Identifier	tok		759398	0					
ANR	760909	Identifier	u		759398	1					
ANR	760910	Identifier	backref		759398	1					
ANR	760911	Identifier	num		759398	1					
ANR	760912	PrimaryExpression	1		759398	1					
ANR	760913	ExpressionStatement	tok -> u . backref . ref1 = num	3418:1:75107:75135	759398	3	True				
ANR	760914	AssignmentExpression	tok -> u . backref . ref1 = num		759398	0		=			
ANR	760915	MemberAccess	tok -> u . backref . ref1		759398	0					
ANR	760916	MemberAccess	tok -> u . backref		759398	0					
ANR	760917	PtrMemberAccess	tok -> u		759398	0					
ANR	760918	Identifier	tok		759398	0					
ANR	760919	Identifier	u		759398	1					
ANR	760920	Identifier	backref		759398	1					
ANR	760921	Identifier	ref1		759398	1					
ANR	760922	Identifier	num		759398	1					
ANR	760923	ExpressionStatement	tok -> u . backref . by_name = 0	3419:1:75138:75164	759398	4	True				
ANR	760924	AssignmentExpression	tok -> u . backref . by_name = 0		759398	0		=			
ANR	760925	MemberAccess	tok -> u . backref . by_name		759398	0					
ANR	760926	MemberAccess	tok -> u . backref		759398	0					
ANR	760927	PtrMemberAccess	tok -> u		759398	0					
ANR	760928	Identifier	tok		759398	0					
ANR	760929	Identifier	u		759398	1					
ANR	760930	Identifier	backref		759398	1					
ANR	760931	Identifier	by_name		759398	1					
ANR	760932	PrimaryExpression	0		759398	1					
ANR	760933	ExpressionStatement	tok -> u . backref . exist_level = 0	3421:1:75197:75227	759398	5	True				
ANR	760934	AssignmentExpression	tok -> u . backref . exist_level = 0		759398	0		=			
ANR	760935	MemberAccess	tok -> u . backref . exist_level		759398	0					
ANR	760936	MemberAccess	tok -> u . backref		759398	0					
ANR	760937	PtrMemberAccess	tok -> u		759398	0					
ANR	760938	Identifier	tok		759398	0					
ANR	760939	Identifier	u		759398	1					
ANR	760940	Identifier	backref		759398	1					
ANR	760941	Identifier	exist_level		759398	1					
ANR	760942	PrimaryExpression	0		759398	1					
ANR	760943	BreakStatement	break ;	3423:1:75237:75242	759398	6	True				
ANR	760944	Label	skip_backref :	3426:4:75257:75269	759398	162	True				
ANR	760945	Identifier	skip_backref		759398	0					
ANR	760946	IfStatement	if ( c == '8' || c == '9' )		759398	163					
ANR	760947	Condition	c == '8' || c == '9'	3427:10:75281:75300	759398	0	True				
ANR	760948	OrExpression	c == '8' || c == '9'		759398	0		||			
ANR	760949	EqualityExpression	c == '8'		759398	0		==			
ANR	760950	Identifier	c		759398	0					
ANR	760951	PrimaryExpression	'8'		759398	1					
ANR	760952	EqualityExpression	c == '9'		759398	1		==			
ANR	760953	Identifier	c		759398	0					
ANR	760954	PrimaryExpression	'9'		759398	1					
ANR	760955	CompoundStatement		301:32:8002:8002	759398	1					
ANR	760956	ExpressionStatement	p = prev	3429:1:75325:75333	759398	0	True				
ANR	760957	AssignmentExpression	p = prev		759398	0		=			
ANR	760958	Identifier	p		759398	0					
ANR	760959	Identifier	prev		759398	1					
ANR	760960	ExpressionStatement	PINC	3429:11:75335:75339	759398	1	True				
ANR	760961	Identifier	PINC		759398	0					
ANR	760962	BreakStatement	break ;	3430:1:75342:75347	759398	2	True				
ANR	760963	ExpressionStatement	p = prev	3433:6:75364:75372	759398	164	True				
ANR	760964	AssignmentExpression	p = prev		759398	0		=			
ANR	760965	Identifier	p		759398	0					
ANR	760966	Identifier	prev		759398	1					
ANR	760967	Label	case '0' :	3435:4:75403:75411	759398	165	True				
ANR	760968	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 ) )"		759398	166					
ANR	760969	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"	3436:10:75423:75463	759398	0	True				
ANR	760970	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"		759398	0					
ANR	760971	Callee	IS_SYNTAX_OP		759398	0					
ANR	760972	Identifier	IS_SYNTAX_OP		759398	0					
ANR	760973	ArgumentList	syn		759398	1					
ANR	760974	Argument	syn		759398	0					
ANR	760975	Identifier	syn		759398	0					
ANR	760976	Argument	ONIG_SYN_OP_ESC_OCTAL3		759398	1					
ANR	760977	Identifier	ONIG_SYN_OP_ESC_OCTAL3		759398	0					
ANR	760978	CompoundStatement		310:53:8165:8165	759398	1					
ANR	760979	ExpressionStatement	prev = p	3437:1:75469:75477	759398	0	True				
ANR	760980	AssignmentExpression	prev = p		759398	0		=			
ANR	760981	Identifier	prev		759398	0					
ANR	760982	Identifier	p		759398	1					
ANR	760983	ExpressionStatement	"num = scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"	3438:1:75480:75544	759398	1	True				
ANR	760984	AssignmentExpression	"num = scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"		759398	0		=			
ANR	760985	Identifier	num		759398	0					
ANR	760986	CallExpression	"scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"		759398	1					
ANR	760987	Callee	scan_unsigned_octal_number		759398	0					
ANR	760988	Identifier	scan_unsigned_octal_number		759398	0					
ANR	760989	ArgumentList	& p		759398	1					
ANR	760990	Argument	& p		759398	0					
ANR	760991	UnaryOperationExpression	& p		759398	0					
ANR	760992	UnaryOperator	&		759398	0					
ANR	760993	Identifier	p		759398	1					
ANR	760994	Argument	end		759398	1					
ANR	760995	Identifier	end		759398	0					
ANR	760996	Argument	c == '0' ? 2 : 3		759398	2					
ANR	760997	ConditionalExpression	c == '0' ? 2 : 3		759398	0					
ANR	760998	Condition	c == '0'		759398	0					
ANR	760999	EqualityExpression	c == '0'		759398	0		==			
ANR	761000	Identifier	c		759398	0					
ANR	761001	PrimaryExpression	'0'		759398	1					
ANR	761002	PrimaryExpression	2		759398	1					
ANR	761003	PrimaryExpression	3		759398	2					
ANR	761004	Argument	enc		759398	3					
ANR	761005	Identifier	enc		759398	0					
ANR	761006	IfStatement	if ( num < 0 )		759398	2					
ANR	761007	Condition	num < 0	3439:5:75551:75557	759398	0	True				
ANR	761008	RelationalExpression	num < 0		759398	0		<			
ANR	761009	Identifier	num		759398	0					
ANR	761010	PrimaryExpression	0		759398	1					
ANR	761011	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3439:14:75560:75589	759398	1	True				
ANR	761012	Identifier	ONIGERR_TOO_BIG_NUMBER		759398	0					
ANR	761013	IfStatement	if ( p == prev )		759398	3					
ANR	761014	Condition	p == prev	3440:5:75596:75604	759398	0	True				
ANR	761015	EqualityExpression	p == prev		759398	0		==			
ANR	761016	Identifier	p		759398	0					
ANR	761017	Identifier	prev		759398	1					
ANR	761018	CompoundStatement		314:16:8306:8306	759398	1					
ANR	761019	ExpressionStatement	num = 0	3441:3:75639:75646	759398	0	True				
ANR	761020	AssignmentExpression	num = 0		759398	0		=			
ANR	761021	Identifier	num		759398	0					
ANR	761022	PrimaryExpression	0		759398	1					
ANR	761023	ExpressionStatement	tok -> type = TK_RAW_BYTE	3443:1:75678:75701	759398	4	True				
ANR	761024	AssignmentExpression	tok -> type = TK_RAW_BYTE		759398	0		=			
ANR	761025	PtrMemberAccess	tok -> type		759398	0					
ANR	761026	Identifier	tok		759398	0					
ANR	761027	Identifier	type		759398	1					
ANR	761028	Identifier	TK_RAW_BYTE		759398	1					
ANR	761029	ExpressionStatement	tok -> base = 8	3444:1:75704:75717	759398	5	True				
ANR	761030	AssignmentExpression	tok -> base = 8		759398	0		=			
ANR	761031	PtrMemberAccess	tok -> base		759398	0					
ANR	761032	Identifier	tok		759398	0					
ANR	761033	Identifier	base		759398	1					
ANR	761034	PrimaryExpression	8		759398	1					
ANR	761035	ExpressionStatement	tok -> u . c = num	3445:1:75720:75735	759398	6	True				
ANR	761036	AssignmentExpression	tok -> u . c = num		759398	0		=			
ANR	761037	MemberAccess	tok -> u . c		759398	0					
ANR	761038	PtrMemberAccess	tok -> u		759398	0					
ANR	761039	Identifier	tok		759398	0					
ANR	761040	Identifier	u		759398	1					
ANR	761041	Identifier	c		759398	1					
ANR	761042	Identifier	num		759398	1					
ANR	761043	ElseStatement	else		759398	0					
ANR	761044	IfStatement	if ( c != '0' )		759398	0					
ANR	761045	Condition	c != '0'	3447:15:75760:75767	759398	0	True				
ANR	761046	EqualityExpression	c != '0'		759398	0		!=			
ANR	761047	Identifier	c		759398	0					
ANR	761048	PrimaryExpression	'0'		759398	1					
ANR	761049	CompoundStatement		321:25:8469:8469	759398	1					
ANR	761050	ExpressionStatement	PINC	3448:1:75773:75777	759398	0	True				
ANR	761051	Identifier	PINC		759398	0					
ANR	761052	BreakStatement	break ;	3450:6:75793:75798	759398	167	True				
ANR	761053	Label	case 'k' :	3453:4:75828:75836	759398	168	True				
ANR	761054	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF ) )"		759398	169					
ANR	761055	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF )"	3454:10:75848:75899	759398	0	True				
ANR	761056	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF )"		759398	0					
ANR	761057	Callee	IS_SYNTAX_OP2		759398	0					
ANR	761058	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	761059	ArgumentList	syn		759398	1					
ANR	761060	Argument	syn		759398	0					
ANR	761061	Identifier	syn		759398	0					
ANR	761062	Argument	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		759398	1					
ANR	761063	Identifier	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		759398	0					
ANR	761064	CompoundStatement		328:64:8601:8601	759398	1					
ANR	761065	ExpressionStatement	PFETCH ( c )	3455:1:75905:75914	759398	0	True				
ANR	761066	CallExpression	PFETCH ( c )		759398	0					
ANR	761067	Callee	PFETCH		759398	0					
ANR	761068	Identifier	PFETCH		759398	0					
ANR	761069	ArgumentList	c		759398	1					
ANR	761070	Argument	c		759398	0					
ANR	761071	Identifier	c		759398	0					
ANR	761072	IfStatement	if ( c == '<' || c == '\\'' )		759398	1					
ANR	761073	Condition	c == '<' || c == '\\''	3456:5:75921:75941	759398	0	True				
ANR	761074	OrExpression	c == '<' || c == '\\''		759398	0		||			
ANR	761075	EqualityExpression	c == '<'		759398	0		==			
ANR	761076	Identifier	c		759398	0					
ANR	761077	PrimaryExpression	'<'		759398	1					
ANR	761078	EqualityExpression	c == '\\''		759398	1		==			
ANR	761079	Identifier	c		759398	0					
ANR	761080	PrimaryExpression	'\\''		759398	1					
ANR	761081	CompoundStatement		333:3:8683:8695	759398	1					
ANR	761082	IdentifierDeclStatement	UChar * name_end ;	3457:3:75949:75964	759398	0	True				
ANR	761083	IdentifierDecl	* name_end		759398	0					
ANR	761084	IdentifierDeclType	UChar *		759398	0					
ANR	761085	Identifier	name_end		759398	1					
ANR	761086	IdentifierDeclStatement	int * backs ;	3458:3:75969:75979	759398	1	True				
ANR	761087	IdentifierDecl	* backs		759398	0					
ANR	761088	IdentifierDeclType	int *		759398	0					
ANR	761089	Identifier	backs		759398	1					
ANR	761090	IdentifierDeclStatement	int back_num ;	3459:3:75984:75996	759398	2	True				
ANR	761091	IdentifierDecl	back_num		759398	0					
ANR	761092	IdentifierDeclType	int		759398	0					
ANR	761093	Identifier	back_num		759398	1					
ANR	761094	ExpressionStatement	prev = p	3461:3:76002:76010	759398	3	True				
ANR	761095	AssignmentExpression	prev = p		759398	0		=			
ANR	761096	Identifier	prev		759398	0					
ANR	761097	Identifier	p		759398	1					
ANR	761098	ExpressionStatement	name_end = NULL_UCHARP	3464:3:76046:76068	759398	4	True				
ANR	761099	AssignmentExpression	name_end = NULL_UCHARP		759398	0		=			
ANR	761100	Identifier	name_end		759398	0					
ANR	761101	Identifier	NULL_UCHARP		759398	1					
ANR	761102	ExpressionStatement	"r = fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"	3465:3:76108:76219	759398	5	True				
ANR	761103	AssignmentExpression	"r = fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"		759398	0		=			
ANR	761104	Identifier	r		759398	0					
ANR	761105	CallExpression	"fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"		759398	1					
ANR	761106	Callee	fetch_name_with_level		759398	0					
ANR	761107	Identifier	fetch_name_with_level		759398	0					
ANR	761108	ArgumentList	( OnigCodePoint ) c		759398	1					
ANR	761109	Argument	( OnigCodePoint ) c		759398	0					
ANR	761110	CastExpression	( OnigCodePoint ) c		759398	0					
ANR	761111	CastTarget	OnigCodePoint		759398	0					
ANR	761112	Identifier	c		759398	1					
ANR	761113	Argument	& p		759398	1					
ANR	761114	UnaryOperationExpression	& p		759398	0					
ANR	761115	UnaryOperator	&		759398	0					
ANR	761116	Identifier	p		759398	1					
ANR	761117	Argument	end		759398	2					
ANR	761118	Identifier	end		759398	0					
ANR	761119	Argument	& name_end		759398	3					
ANR	761120	UnaryOperationExpression	& name_end		759398	0					
ANR	761121	UnaryOperator	&		759398	0					
ANR	761122	Identifier	name_end		759398	1					
ANR	761123	Argument	env		759398	4					
ANR	761124	Identifier	env		759398	0					
ANR	761125	Argument	& back_num		759398	5					
ANR	761126	UnaryOperationExpression	& back_num		759398	0					
ANR	761127	UnaryOperator	&		759398	0					
ANR	761128	Identifier	back_num		759398	1					
ANR	761129	Argument	& tok -> u . backref . level		759398	6					
ANR	761130	UnaryOperationExpression	& tok -> u . backref . level		759398	0					
ANR	761131	UnaryOperator	&		759398	0					
ANR	761132	MemberAccess	tok -> u . backref . level		759398	1					
ANR	761133	MemberAccess	tok -> u . backref		759398	0					
ANR	761134	PtrMemberAccess	tok -> u		759398	0					
ANR	761135	Identifier	tok		759398	0					
ANR	761136	Identifier	u		759398	1					
ANR	761137	Identifier	backref		759398	1					
ANR	761138	Identifier	level		759398	1					
ANR	761139	IfStatement	if ( r == 1 )		759398	6					
ANR	761140	Condition	r == 1	3467:7:76228:76233	759398	0	True				
ANR	761141	EqualityExpression	r == 1		759398	0		==			
ANR	761142	Identifier	r		759398	0					
ANR	761143	PrimaryExpression	1		759398	1					
ANR	761144	ExpressionStatement	tok -> u . backref . exist_level = 1	3467:15:76236:76266	759398	1	True				
ANR	761145	AssignmentExpression	tok -> u . backref . exist_level = 1		759398	0		=			
ANR	761146	MemberAccess	tok -> u . backref . exist_level		759398	0					
ANR	761147	MemberAccess	tok -> u . backref		759398	0					
ANR	761148	PtrMemberAccess	tok -> u		759398	0					
ANR	761149	Identifier	tok		759398	0					
ANR	761150	Identifier	u		759398	1					
ANR	761151	Identifier	backref		759398	1					
ANR	761152	Identifier	exist_level		759398	1					
ANR	761153	PrimaryExpression	1		759398	1					
ANR	761154	ElseStatement	else		759398	0					
ANR	761155	ExpressionStatement	tok -> u . backref . exist_level = 0	3468:15:76283:76313	759398	0	True				
ANR	761156	AssignmentExpression	tok -> u . backref . exist_level = 0		759398	0		=			
ANR	761157	MemberAccess	tok -> u . backref . exist_level		759398	0					
ANR	761158	MemberAccess	tok -> u . backref		759398	0					
ANR	761159	PtrMemberAccess	tok -> u		759398	0					
ANR	761160	Identifier	tok		759398	0					
ANR	761161	Identifier	u		759398	1					
ANR	761162	Identifier	backref		759398	1					
ANR	761163	Identifier	exist_level		759398	1					
ANR	761164	PrimaryExpression	0		759398	1					
ANR	761165	IfStatement	if ( r < 0 )		759398	7					
ANR	761166	Condition	r < 0	3472:7:76393:76397	759398	0	True				
ANR	761167	RelationalExpression	r < 0		759398	0		<			
ANR	761168	Identifier	r		759398	0					
ANR	761169	PrimaryExpression	0		759398	1					
ANR	761170	ReturnStatement	return r ;	3472:14:76400:76408	759398	1	True				
ANR	761171	Identifier	r		759398	0					
ANR	761172	IfStatement	if ( back_num != 0 )		759398	8					
ANR	761173	Condition	back_num != 0	3474:7:76418:76430	759398	0	True				
ANR	761174	EqualityExpression	back_num != 0		759398	0		!=			
ANR	761175	Identifier	back_num		759398	0					
ANR	761176	PrimaryExpression	0		759398	1					
ANR	761177	CompoundStatement		348:22:9132:9132	759398	1					
ANR	761178	IfStatement	if ( back_num < 0 )		759398	0					
ANR	761179	Condition	back_num < 0	3475:9:76444:76455	759398	0	True				
ANR	761180	RelationalExpression	back_num < 0		759398	0		<			
ANR	761181	Identifier	back_num		759398	0					
ANR	761182	PrimaryExpression	0		759398	1					
ANR	761183	CompoundStatement		349:23:9157:9157	759398	1					
ANR	761184	ExpressionStatement	"back_num = BACKREF_REL_TO_ABS ( back_num , env )"	3476:7:76467:76511	759398	0	True				
ANR	761185	AssignmentExpression	"back_num = BACKREF_REL_TO_ABS ( back_num , env )"		759398	0		=			
ANR	761186	Identifier	back_num		759398	0					
ANR	761187	CallExpression	"BACKREF_REL_TO_ABS ( back_num , env )"		759398	1					
ANR	761188	Callee	BACKREF_REL_TO_ABS		759398	0					
ANR	761189	Identifier	BACKREF_REL_TO_ABS		759398	0					
ANR	761190	ArgumentList	back_num		759398	1					
ANR	761191	Argument	back_num		759398	0					
ANR	761192	Identifier	back_num		759398	0					
ANR	761193	Argument	env		759398	1					
ANR	761194	Identifier	env		759398	0					
ANR	761195	IfStatement	if ( back_num <= 0 )		759398	1					
ANR	761196	Condition	back_num <= 0	3477:11:76524:76536	759398	0	True				
ANR	761197	RelationalExpression	back_num <= 0		759398	0		<=			
ANR	761198	Identifier	back_num		759398	0					
ANR	761199	PrimaryExpression	0		759398	1					
ANR	761200	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3478:2:76541:76571	759398	1	True				
ANR	761201	Identifier	ONIGERR_INVALID_BACKREF		759398	0					
ANR	761202	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		759398	1					
ANR	761203	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3481:9:76590:76637	759398	0	True				
ANR	761204	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		759398	0					
ANR	761205	Callee	IS_SYNTAX_BV		759398	0					
ANR	761206	Identifier	IS_SYNTAX_BV		759398	0					
ANR	761207	ArgumentList	syn		759398	1					
ANR	761208	Argument	syn		759398	0					
ANR	761209	Identifier	syn		759398	0					
ANR	761210	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		759398	1					
ANR	761211	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		759398	0					
ANR	761212	CompoundStatement		355:59:9339:9339	759398	1					
ANR	761213	IfStatement	if ( back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] ) )		759398	0					
ANR	761214	Condition	back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )	3482:11:76653:76724	759398	0	True				
ANR	761215	OrExpression	back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )		759398	0		||			
ANR	761216	RelationalExpression	back_num > env -> num_mem		759398	0		>			
ANR	761217	Identifier	back_num		759398	0					
ANR	761218	PtrMemberAccess	env -> num_mem		759398	1					
ANR	761219	Identifier	env		759398	0					
ANR	761220	Identifier	num_mem		759398	1					
ANR	761221	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )		759398	1					
ANR	761222	Callee	IS_NULL		759398	0					
ANR	761223	Identifier	IS_NULL		759398	0					
ANR	761224	ArgumentList	SCANENV_MEM_NODES ( env ) [ back_num ]		759398	1					
ANR	761225	Argument	SCANENV_MEM_NODES ( env ) [ back_num ]		759398	0					
ANR	761226	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ back_num ]		759398	0					
ANR	761227	CallExpression	SCANENV_MEM_NODES ( env )		759398	0					
ANR	761228	Callee	SCANENV_MEM_NODES		759398	0					
ANR	761229	Identifier	SCANENV_MEM_NODES		759398	0					
ANR	761230	ArgumentList	env		759398	1					
ANR	761231	Argument	env		759398	0					
ANR	761232	Identifier	env		759398	0					
ANR	761233	Identifier	back_num		759398	1					
ANR	761234	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3484:2:76729:76759	759398	1	True				
ANR	761235	Identifier	ONIGERR_INVALID_BACKREF		759398	0					
ANR	761236	ExpressionStatement	tok -> type = TK_BACKREF	3486:5:76773:76795	759398	2	True				
ANR	761237	AssignmentExpression	tok -> type = TK_BACKREF		759398	0		=			
ANR	761238	PtrMemberAccess	tok -> type		759398	0					
ANR	761239	Identifier	tok		759398	0					
ANR	761240	Identifier	type		759398	1					
ANR	761241	Identifier	TK_BACKREF		759398	1					
ANR	761242	ExpressionStatement	tok -> u . backref . by_name = 0	3487:5:76802:76828	759398	3	True				
ANR	761243	AssignmentExpression	tok -> u . backref . by_name = 0		759398	0		=			
ANR	761244	MemberAccess	tok -> u . backref . by_name		759398	0					
ANR	761245	MemberAccess	tok -> u . backref		759398	0					
ANR	761246	PtrMemberAccess	tok -> u		759398	0					
ANR	761247	Identifier	tok		759398	0					
ANR	761248	Identifier	u		759398	1					
ANR	761249	Identifier	backref		759398	1					
ANR	761250	Identifier	by_name		759398	1					
ANR	761251	PrimaryExpression	0		759398	1					
ANR	761252	ExpressionStatement	tok -> u . backref . num = 1	3488:5:76835:76858	759398	4	True				
ANR	761253	AssignmentExpression	tok -> u . backref . num = 1		759398	0		=			
ANR	761254	MemberAccess	tok -> u . backref . num		759398	0					
ANR	761255	MemberAccess	tok -> u . backref		759398	0					
ANR	761256	PtrMemberAccess	tok -> u		759398	0					
ANR	761257	Identifier	tok		759398	0					
ANR	761258	Identifier	u		759398	1					
ANR	761259	Identifier	backref		759398	1					
ANR	761260	Identifier	num		759398	1					
ANR	761261	PrimaryExpression	1		759398	1					
ANR	761262	ExpressionStatement	tok -> u . backref . ref1 = back_num	3489:5:76865:76895	759398	5	True				
ANR	761263	AssignmentExpression	tok -> u . backref . ref1 = back_num		759398	0		=			
ANR	761264	MemberAccess	tok -> u . backref . ref1		759398	0					
ANR	761265	MemberAccess	tok -> u . backref		759398	0					
ANR	761266	PtrMemberAccess	tok -> u		759398	0					
ANR	761267	Identifier	tok		759398	0					
ANR	761268	Identifier	u		759398	1					
ANR	761269	Identifier	backref		759398	1					
ANR	761270	Identifier	ref1		759398	1					
ANR	761271	Identifier	back_num		759398	1					
ANR	761272	ElseStatement	else		759398	0					
ANR	761273	CompoundStatement		365:8:9609:9609	759398	0					
ANR	761274	ExpressionStatement	"num = onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"	3492:5:76917:76983	759398	0	True				
ANR	761275	AssignmentExpression	"num = onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"		759398	0		=			
ANR	761276	Identifier	num		759398	0					
ANR	761277	CallExpression	"onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"		759398	1					
ANR	761278	Callee	onig_name_to_group_numbers		759398	0					
ANR	761279	Identifier	onig_name_to_group_numbers		759398	0					
ANR	761280	ArgumentList	env -> reg		759398	1					
ANR	761281	Argument	env -> reg		759398	0					
ANR	761282	PtrMemberAccess	env -> reg		759398	0					
ANR	761283	Identifier	env		759398	0					
ANR	761284	Identifier	reg		759398	1					
ANR	761285	Argument	prev		759398	1					
ANR	761286	Identifier	prev		759398	0					
ANR	761287	Argument	name_end		759398	2					
ANR	761288	Identifier	name_end		759398	0					
ANR	761289	Argument	& backs		759398	3					
ANR	761290	UnaryOperationExpression	& backs		759398	0					
ANR	761291	UnaryOperator	&		759398	0					
ANR	761292	Identifier	backs		759398	1					
ANR	761293	IfStatement	if ( num <= 0 )		759398	1					
ANR	761294	Condition	num <= 0	3493:9:76994:77001	759398	0	True				
ANR	761295	RelationalExpression	num <= 0		759398	0		<=			
ANR	761296	Identifier	num		759398	0					
ANR	761297	PrimaryExpression	0		759398	1					
ANR	761298	CompoundStatement		367:19:9703:9703	759398	1					
ANR	761299	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , prev , name_end )"	3494:7:77013:77106	759398	0	True				
ANR	761300	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , prev , name_end )"		759398	0					
ANR	761301	Callee	onig_scan_env_set_error_string		759398	0					
ANR	761302	Identifier	onig_scan_env_set_error_string		759398	0					
ANR	761303	ArgumentList	env		759398	1					
ANR	761304	Argument	env		759398	0					
ANR	761305	Identifier	env		759398	0					
ANR	761306	Argument	ONIGERR_UNDEFINED_NAME_REFERENCE		759398	1					
ANR	761307	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		759398	0					
ANR	761308	Argument	prev		759398	2					
ANR	761309	Identifier	prev		759398	0					
ANR	761310	Argument	name_end		759398	3					
ANR	761311	Identifier	name_end		759398	0					
ANR	761312	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	3496:7:77115:77154	759398	1	True				
ANR	761313	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		759398	0					
ANR	761314	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		759398	2					
ANR	761315	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3498:9:77172:77219	759398	0	True				
ANR	761316	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		759398	0					
ANR	761317	Callee	IS_SYNTAX_BV		759398	0					
ANR	761318	Identifier	IS_SYNTAX_BV		759398	0					
ANR	761319	ArgumentList	syn		759398	1					
ANR	761320	Argument	syn		759398	0					
ANR	761321	Identifier	syn		759398	0					
ANR	761322	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		759398	1					
ANR	761323	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		759398	0					
ANR	761324	CompoundStatement		373:7:9930:9935	759398	1					
ANR	761325	IdentifierDeclStatement	int i ;	3499:7:77231:77236	759398	0	True				
ANR	761326	IdentifierDecl	i		759398	0					
ANR	761327	IdentifierDeclType	int		759398	0					
ANR	761328	Identifier	i		759398	1					
ANR	761329	ForStatement	for ( i = 0 ; i < num ; i ++ )		759398	1					
ANR	761330	ForInit	i = 0 ;	3500:12:77250:77255	759398	0	True				
ANR	761331	AssignmentExpression	i = 0		759398	0		=			
ANR	761332	Identifier	i		759398	0					
ANR	761333	PrimaryExpression	0		759398	1					
ANR	761334	Condition	i < num	3500:19:77257:77263	759398	1	True				
ANR	761335	RelationalExpression	i < num		759398	0		<			
ANR	761336	Identifier	i		759398	0					
ANR	761337	Identifier	num		759398	1					
ANR	761338	PostIncDecOperationExpression	i ++	3500:28:77266:77268	759398	2	True				
ANR	761339	Identifier	i		759398	0					
ANR	761340	IncDec	++		759398	1					
ANR	761341	CompoundStatement		374:33:9970:9970	759398	3					
ANR	761342	IfStatement	if ( backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] ) )		759398	0					
ANR	761343	Condition	backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )	3501:6:77279:77352	759398	0	True				
ANR	761344	OrExpression	backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )		759398	0		||			
ANR	761345	RelationalExpression	backs [ i ] > env -> num_mem		759398	0		>			
ANR	761346	ArrayIndexing	backs [ i ]		759398	0					
ANR	761347	Identifier	backs		759398	0					
ANR	761348	Identifier	i		759398	1					
ANR	761349	PtrMemberAccess	env -> num_mem		759398	1					
ANR	761350	Identifier	env		759398	0					
ANR	761351	Identifier	num_mem		759398	1					
ANR	761352	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )		759398	1					
ANR	761353	Callee	IS_NULL		759398	0					
ANR	761354	Identifier	IS_NULL		759398	0					
ANR	761355	ArgumentList	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		759398	1					
ANR	761356	Argument	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		759398	0					
ANR	761357	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		759398	0					
ANR	761358	CallExpression	SCANENV_MEM_NODES ( env )		759398	0					
ANR	761359	Callee	SCANENV_MEM_NODES		759398	0					
ANR	761360	Identifier	SCANENV_MEM_NODES		759398	0					
ANR	761361	ArgumentList	env		759398	1					
ANR	761362	Argument	env		759398	0					
ANR	761363	Identifier	env		759398	0					
ANR	761364	ArrayIndexing	backs [ i ]		759398	1					
ANR	761365	Identifier	backs		759398	0					
ANR	761366	Identifier	i		759398	1					
ANR	761367	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3503:4:77359:77389	759398	1	True				
ANR	761368	Identifier	ONIGERR_INVALID_BACKREF		759398	0					
ANR	761369	ExpressionStatement	tok -> type = TK_BACKREF	3507:5:77413:77435	759398	3	True				
ANR	761370	AssignmentExpression	tok -> type = TK_BACKREF		759398	0		=			
ANR	761371	PtrMemberAccess	tok -> type		759398	0					
ANR	761372	Identifier	tok		759398	0					
ANR	761373	Identifier	type		759398	1					
ANR	761374	Identifier	TK_BACKREF		759398	1					
ANR	761375	ExpressionStatement	tok -> u . backref . by_name = 1	3508:5:77442:77468	759398	4	True				
ANR	761376	AssignmentExpression	tok -> u . backref . by_name = 1		759398	0		=			
ANR	761377	MemberAccess	tok -> u . backref . by_name		759398	0					
ANR	761378	MemberAccess	tok -> u . backref		759398	0					
ANR	761379	PtrMemberAccess	tok -> u		759398	0					
ANR	761380	Identifier	tok		759398	0					
ANR	761381	Identifier	u		759398	1					
ANR	761382	Identifier	backref		759398	1					
ANR	761383	Identifier	by_name		759398	1					
ANR	761384	PrimaryExpression	1		759398	1					
ANR	761385	IfStatement	if ( num == 1 )		759398	5					
ANR	761386	Condition	num == 1	3509:9:77479:77486	759398	0	True				
ANR	761387	EqualityExpression	num == 1		759398	0		==			
ANR	761388	Identifier	num		759398	0					
ANR	761389	PrimaryExpression	1		759398	1					
ANR	761390	CompoundStatement		383:19:10188:10188	759398	1					
ANR	761391	ExpressionStatement	tok -> u . backref . num = 1	3510:7:77498:77521	759398	0	True				
ANR	761392	AssignmentExpression	tok -> u . backref . num = 1		759398	0		=			
ANR	761393	MemberAccess	tok -> u . backref . num		759398	0					
ANR	761394	MemberAccess	tok -> u . backref		759398	0					
ANR	761395	PtrMemberAccess	tok -> u		759398	0					
ANR	761396	Identifier	tok		759398	0					
ANR	761397	Identifier	u		759398	1					
ANR	761398	Identifier	backref		759398	1					
ANR	761399	Identifier	num		759398	1					
ANR	761400	PrimaryExpression	1		759398	1					
ANR	761401	ExpressionStatement	tok -> u . backref . ref1 = backs [ 0 ]	3511:7:77530:77560	759398	1	True				
ANR	761402	AssignmentExpression	tok -> u . backref . ref1 = backs [ 0 ]		759398	0		=			
ANR	761403	MemberAccess	tok -> u . backref . ref1		759398	0					
ANR	761404	MemberAccess	tok -> u . backref		759398	0					
ANR	761405	PtrMemberAccess	tok -> u		759398	0					
ANR	761406	Identifier	tok		759398	0					
ANR	761407	Identifier	u		759398	1					
ANR	761408	Identifier	backref		759398	1					
ANR	761409	Identifier	ref1		759398	1					
ANR	761410	ArrayIndexing	backs [ 0 ]		759398	1					
ANR	761411	Identifier	backs		759398	0					
ANR	761412	PrimaryExpression	0		759398	1					
ANR	761413	ElseStatement	else		759398	0					
ANR	761414	CompoundStatement		387:10:10278:10278	759398	0					
ANR	761415	ExpressionStatement	tok -> u . backref . num = num	3514:7:77588:77613	759398	0	True				
ANR	761416	AssignmentExpression	tok -> u . backref . num = num		759398	0		=			
ANR	761417	MemberAccess	tok -> u . backref . num		759398	0					
ANR	761418	MemberAccess	tok -> u . backref		759398	0					
ANR	761419	PtrMemberAccess	tok -> u		759398	0					
ANR	761420	Identifier	tok		759398	0					
ANR	761421	Identifier	u		759398	1					
ANR	761422	Identifier	backref		759398	1					
ANR	761423	Identifier	num		759398	1					
ANR	761424	Identifier	num		759398	1					
ANR	761425	ExpressionStatement	tok -> u . backref . refs = backs	3515:7:77622:77649	759398	1	True				
ANR	761426	AssignmentExpression	tok -> u . backref . refs = backs		759398	0		=			
ANR	761427	MemberAccess	tok -> u . backref . refs		759398	0					
ANR	761428	MemberAccess	tok -> u . backref		759398	0					
ANR	761429	PtrMemberAccess	tok -> u		759398	0					
ANR	761430	Identifier	tok		759398	0					
ANR	761431	Identifier	u		759398	1					
ANR	761432	Identifier	backref		759398	1					
ANR	761433	Identifier	refs		759398	1					
ANR	761434	Identifier	backs		759398	1					
ANR	761435	ElseStatement	else		759398	0					
ANR	761436	ExpressionStatement	PUNFETCH	3520:3:77675:77683	759398	0	True				
ANR	761437	Identifier	PUNFETCH		759398	0					
ANR	761438	BreakStatement	break ;	3522:6:77699:77704	759398	170	True				
ANR	761439	Label	case 'g' :	3526:4:77741:77749	759398	171	True				
ANR	761440	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL ) )"		759398	172					
ANR	761441	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL )"	3527:10:77761:77810	759398	0	True				
ANR	761442	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL )"		759398	0					
ANR	761443	Callee	IS_SYNTAX_OP2		759398	0					
ANR	761444	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	761445	ArgumentList	syn		759398	1					
ANR	761446	Argument	syn		759398	0					
ANR	761447	Identifier	syn		759398	0					
ANR	761448	Argument	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		759398	1					
ANR	761449	Identifier	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		759398	0					
ANR	761450	CompoundStatement		401:62:10512:10512	759398	1					
ANR	761451	ExpressionStatement	PFETCH ( c )	3528:1:77816:77825	759398	0	True				
ANR	761452	CallExpression	PFETCH ( c )		759398	0					
ANR	761453	Callee	PFETCH		759398	0					
ANR	761454	Identifier	PFETCH		759398	0					
ANR	761455	ArgumentList	c		759398	1					
ANR	761456	Argument	c		759398	0					
ANR	761457	Identifier	c		759398	0					
ANR	761458	IfStatement	if ( c == '<' || c == '\\'' )		759398	1					
ANR	761459	Condition	c == '<' || c == '\\''	3529:5:77832:77852	759398	0	True				
ANR	761460	OrExpression	c == '<' || c == '\\''		759398	0		||			
ANR	761461	EqualityExpression	c == '<'		759398	0		==			
ANR	761462	Identifier	c		759398	0					
ANR	761463	PrimaryExpression	'<'		759398	1					
ANR	761464	EqualityExpression	c == '\\''		759398	1		==			
ANR	761465	Identifier	c		759398	0					
ANR	761466	PrimaryExpression	'\\''		759398	1					
ANR	761467	CompoundStatement		405:3:10572:10587	759398	1					
ANR	761468	IdentifierDeclStatement	int gnum ;	3530:3:77860:77868	759398	0	True				
ANR	761469	IdentifierDecl	gnum		759398	0					
ANR	761470	IdentifierDeclType	int		759398	0					
ANR	761471	Identifier	gnum		759398	1					
ANR	761472	IdentifierDeclStatement	UChar * name_end ;	3531:3:77873:77888	759398	1	True				
ANR	761473	IdentifierDecl	* name_end		759398	0					
ANR	761474	IdentifierDeclType	UChar *		759398	0					
ANR	761475	Identifier	name_end		759398	1					
ANR	761476	ExpressionStatement	prev = p	3533:3:77894:77902	759398	2	True				
ANR	761477	AssignmentExpression	prev = p		759398	0		=			
ANR	761478	Identifier	prev		759398	0					
ANR	761479	Identifier	p		759398	1					
ANR	761480	ExpressionStatement	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"	3534:3:77907:77975	759398	3	True				
ANR	761481	AssignmentExpression	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"		759398	0		=			
ANR	761482	Identifier	r		759398	0					
ANR	761483	CallExpression	"fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"		759398	1					
ANR	761484	Callee	fetch_name		759398	0					
ANR	761485	Identifier	fetch_name		759398	0					
ANR	761486	ArgumentList	( OnigCodePoint ) c		759398	1					
ANR	761487	Argument	( OnigCodePoint ) c		759398	0					
ANR	761488	CastExpression	( OnigCodePoint ) c		759398	0					
ANR	761489	CastTarget	OnigCodePoint		759398	0					
ANR	761490	Identifier	c		759398	1					
ANR	761491	Argument	& p		759398	1					
ANR	761492	UnaryOperationExpression	& p		759398	0					
ANR	761493	UnaryOperator	&		759398	0					
ANR	761494	Identifier	p		759398	1					
ANR	761495	Argument	end		759398	2					
ANR	761496	Identifier	end		759398	0					
ANR	761497	Argument	& name_end		759398	3					
ANR	761498	UnaryOperationExpression	& name_end		759398	0					
ANR	761499	UnaryOperator	&		759398	0					
ANR	761500	Identifier	name_end		759398	1					
ANR	761501	Argument	env		759398	4					
ANR	761502	Identifier	env		759398	0					
ANR	761503	Argument	& gnum		759398	5					
ANR	761504	UnaryOperationExpression	& gnum		759398	0					
ANR	761505	UnaryOperator	&		759398	0					
ANR	761506	Identifier	gnum		759398	1					
ANR	761507	Argument	1		759398	6					
ANR	761508	PrimaryExpression	1		759398	0					
ANR	761509	IfStatement	if ( r < 0 )		759398	4					
ANR	761510	Condition	r < 0	3535:7:77984:77988	759398	0	True				
ANR	761511	RelationalExpression	r < 0		759398	0		<			
ANR	761512	Identifier	r		759398	0					
ANR	761513	PrimaryExpression	0		759398	1					
ANR	761514	ReturnStatement	return r ;	3535:14:77991:77999	759398	1	True				
ANR	761515	Identifier	r		759398	0					
ANR	761516	ExpressionStatement	tok -> type = TK_CALL	3537:3:78005:78024	759398	5	True				
ANR	761517	AssignmentExpression	tok -> type = TK_CALL		759398	0		=			
ANR	761518	PtrMemberAccess	tok -> type		759398	0					
ANR	761519	Identifier	tok		759398	0					
ANR	761520	Identifier	type		759398	1					
ANR	761521	Identifier	TK_CALL		759398	1					
ANR	761522	ExpressionStatement	tok -> u . call . name = prev	3538:3:78029:78056	759398	6	True				
ANR	761523	AssignmentExpression	tok -> u . call . name = prev		759398	0		=			
ANR	761524	MemberAccess	tok -> u . call . name		759398	0					
ANR	761525	MemberAccess	tok -> u . call		759398	0					
ANR	761526	PtrMemberAccess	tok -> u		759398	0					
ANR	761527	Identifier	tok		759398	0					
ANR	761528	Identifier	u		759398	1					
ANR	761529	Identifier	call		759398	1					
ANR	761530	Identifier	name		759398	1					
ANR	761531	Identifier	prev		759398	1					
ANR	761532	ExpressionStatement	tok -> u . call . name_end = name_end	3539:3:78061:78092	759398	7	True				
ANR	761533	AssignmentExpression	tok -> u . call . name_end = name_end		759398	0		=			
ANR	761534	MemberAccess	tok -> u . call . name_end		759398	0					
ANR	761535	MemberAccess	tok -> u . call		759398	0					
ANR	761536	PtrMemberAccess	tok -> u		759398	0					
ANR	761537	Identifier	tok		759398	0					
ANR	761538	Identifier	u		759398	1					
ANR	761539	Identifier	call		759398	1					
ANR	761540	Identifier	name_end		759398	1					
ANR	761541	Identifier	name_end		759398	1					
ANR	761542	ExpressionStatement	tok -> u . call . gnum = gnum	3540:3:78097:78124	759398	8	True				
ANR	761543	AssignmentExpression	tok -> u . call . gnum = gnum		759398	0		=			
ANR	761544	MemberAccess	tok -> u . call . gnum		759398	0					
ANR	761545	MemberAccess	tok -> u . call		759398	0					
ANR	761546	PtrMemberAccess	tok -> u		759398	0					
ANR	761547	Identifier	tok		759398	0					
ANR	761548	Identifier	u		759398	1					
ANR	761549	Identifier	call		759398	1					
ANR	761550	Identifier	gnum		759398	1					
ANR	761551	Identifier	gnum		759398	1					
ANR	761552	ElseStatement	else		759398	0					
ANR	761553	ExpressionStatement	PUNFETCH	3543:3:78138:78146	759398	0	True				
ANR	761554	Identifier	PUNFETCH		759398	0					
ANR	761555	BreakStatement	break ;	3545:6:78162:78167	759398	173	True				
ANR	761556	Label	case 'Q' :	3548:4:78181:78189	759398	174	True				
ANR	761557	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE ) )"		759398	175					
ANR	761558	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE )"	3549:10:78201:78252	759398	0	True				
ANR	761559	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE )"		759398	0					
ANR	761560	Callee	IS_SYNTAX_OP2		759398	0					
ANR	761561	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	761562	ArgumentList	syn		759398	1					
ANR	761563	Argument	syn		759398	0					
ANR	761564	Identifier	syn		759398	0					
ANR	761565	Argument	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		759398	1					
ANR	761566	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		759398	0					
ANR	761567	CompoundStatement		423:64:10954:10954	759398	1					
ANR	761568	ExpressionStatement	tok -> type = TK_QUOTE_OPEN	3550:1:78258:78283	759398	0	True				
ANR	761569	AssignmentExpression	tok -> type = TK_QUOTE_OPEN		759398	0		=			
ANR	761570	PtrMemberAccess	tok -> type		759398	0					
ANR	761571	Identifier	tok		759398	0					
ANR	761572	Identifier	type		759398	1					
ANR	761573	Identifier	TK_QUOTE_OPEN		759398	1					
ANR	761574	BreakStatement	break ;	3552:6:78299:78304	759398	176	True				
ANR	761575	Label	case 'p' :	3554:4:78311:78319	759398	177	True				
ANR	761576	Label	case 'P' :	3555:4:78325:78333	759398	178	True				
ANR	761577	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY ) )"		759398	179					
ANR	761578	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"	3556:10:78345:78422	759398	0	True				
ANR	761579	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		759398	0		&&			
ANR	761580	CallExpression	PPEEK_IS ( '{' )		759398	0					
ANR	761581	Callee	PPEEK_IS		759398	0					
ANR	761582	Identifier	PPEEK_IS		759398	0					
ANR	761583	ArgumentList	'{'		759398	1					
ANR	761584	Argument	'{'		759398	0					
ANR	761585	PrimaryExpression	'{'		759398	0					
ANR	761586	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		759398	1					
ANR	761587	Callee	IS_SYNTAX_OP2		759398	0					
ANR	761588	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	761589	ArgumentList	syn		759398	1					
ANR	761590	Argument	syn		759398	0					
ANR	761591	Identifier	syn		759398	0					
ANR	761592	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		759398	1					
ANR	761593	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		759398	0					
ANR	761594	CompoundStatement		431:63:11124:11124	759398	1					
ANR	761595	ExpressionStatement	PINC	3558:1:78428:78432	759398	0	True				
ANR	761596	Identifier	PINC		759398	0					
ANR	761597	ExpressionStatement	tok -> type = TK_CHAR_PROPERTY	3559:1:78435:78463	759398	1	True				
ANR	761598	AssignmentExpression	tok -> type = TK_CHAR_PROPERTY		759398	0		=			
ANR	761599	PtrMemberAccess	tok -> type		759398	0					
ANR	761600	Identifier	tok		759398	0					
ANR	761601	Identifier	type		759398	1					
ANR	761602	Identifier	TK_CHAR_PROPERTY		759398	1					
ANR	761603	ExpressionStatement	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )	3560:1:78466:78502	759398	2	True				
ANR	761604	AssignmentExpression	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )		759398	0		=			
ANR	761605	MemberAccess	tok -> u . prop . not		759398	0					
ANR	761606	MemberAccess	tok -> u . prop		759398	0					
ANR	761607	PtrMemberAccess	tok -> u		759398	0					
ANR	761608	Identifier	tok		759398	0					
ANR	761609	Identifier	u		759398	1					
ANR	761610	Identifier	prop		759398	1					
ANR	761611	Identifier	not		759398	1					
ANR	761612	ConditionalExpression	c == 'P' ? 1 : 0		759398	1					
ANR	761613	Condition	c == 'P'		759398	0					
ANR	761614	EqualityExpression	c == 'P'		759398	0		==			
ANR	761615	Identifier	c		759398	0					
ANR	761616	PrimaryExpression	'P'		759398	1					
ANR	761617	PrimaryExpression	1		759398	1					
ANR	761618	PrimaryExpression	0		759398	2					
ANR	761619	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT ) )"		759398	3					
ANR	761620	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"	3562:5:78510:78568	759398	0	True				
ANR	761621	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"		759398	0					
ANR	761622	Callee	IS_SYNTAX_OP2		759398	0					
ANR	761623	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	761624	ArgumentList	syn		759398	1					
ANR	761625	Argument	syn		759398	0					
ANR	761626	Identifier	syn		759398	0					
ANR	761627	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		759398	1					
ANR	761628	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		759398	0					
ANR	761629	CompoundStatement		436:66:11270:11270	759398	1					
ANR	761630	ExpressionStatement	PFETCH ( c )	3563:3:78576:78585	759398	0	True				
ANR	761631	CallExpression	PFETCH ( c )		759398	0					
ANR	761632	Callee	PFETCH		759398	0					
ANR	761633	Identifier	PFETCH		759398	0					
ANR	761634	ArgumentList	c		759398	1					
ANR	761635	Argument	c		759398	0					
ANR	761636	Identifier	c		759398	0					
ANR	761637	IfStatement	if ( c == '^' )		759398	1					
ANR	761638	Condition	c == '^'	3564:7:78594:78601	759398	0	True				
ANR	761639	EqualityExpression	c == '^'		759398	0		==			
ANR	761640	Identifier	c		759398	0					
ANR	761641	PrimaryExpression	'^'		759398	1					
ANR	761642	CompoundStatement		438:17:11303:11303	759398	1					
ANR	761643	ExpressionStatement	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )	3565:5:78611:78659	759398	0	True				
ANR	761644	AssignmentExpression	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )		759398	0		=			
ANR	761645	MemberAccess	tok -> u . prop . not		759398	0					
ANR	761646	MemberAccess	tok -> u . prop		759398	0					
ANR	761647	PtrMemberAccess	tok -> u		759398	0					
ANR	761648	Identifier	tok		759398	0					
ANR	761649	Identifier	u		759398	1					
ANR	761650	Identifier	prop		759398	1					
ANR	761651	Identifier	not		759398	1					
ANR	761652	ConditionalExpression	tok -> u . prop . not == 0 ? 1 : 0		759398	1					
ANR	761653	Condition	tok -> u . prop . not == 0		759398	0					
ANR	761654	EqualityExpression	tok -> u . prop . not == 0		759398	0		==			
ANR	761655	MemberAccess	tok -> u . prop . not		759398	0					
ANR	761656	MemberAccess	tok -> u . prop		759398	0					
ANR	761657	PtrMemberAccess	tok -> u		759398	0					
ANR	761658	Identifier	tok		759398	0					
ANR	761659	Identifier	u		759398	1					
ANR	761660	Identifier	prop		759398	1					
ANR	761661	Identifier	not		759398	1					
ANR	761662	PrimaryExpression	0		759398	1					
ANR	761663	PrimaryExpression	1		759398	1					
ANR	761664	PrimaryExpression	0		759398	2					
ANR	761665	ElseStatement	else		759398	0					
ANR	761666	ExpressionStatement	PUNFETCH	3568:5:78679:78687	759398	0	True				
ANR	761667	Identifier	PUNFETCH		759398	0					
ANR	761668	BreakStatement	break ;	3571:6:78706:78711	759398	180	True				
ANR	761669	Label	default :	3573:4:78718:78725	759398	181	True				
ANR	761670	Identifier	default		759398	0					
ANR	761671	ExpressionStatement	PUNFETCH	3574:6:78733:78741	759398	182	True				
ANR	761672	Identifier	PUNFETCH		759398	0					
ANR	761673	ExpressionStatement	"num = fetch_escaped_value ( & p , end , env )"	3575:6:78749:78788	759398	183	True				
ANR	761674	AssignmentExpression	"num = fetch_escaped_value ( & p , end , env )"		759398	0		=			
ANR	761675	Identifier	num		759398	0					
ANR	761676	CallExpression	"fetch_escaped_value ( & p , end , env )"		759398	1					
ANR	761677	Callee	fetch_escaped_value		759398	0					
ANR	761678	Identifier	fetch_escaped_value		759398	0					
ANR	761679	ArgumentList	& p		759398	1					
ANR	761680	Argument	& p		759398	0					
ANR	761681	UnaryOperationExpression	& p		759398	0					
ANR	761682	UnaryOperator	&		759398	0					
ANR	761683	Identifier	p		759398	1					
ANR	761684	Argument	end		759398	1					
ANR	761685	Identifier	end		759398	0					
ANR	761686	Argument	env		759398	2					
ANR	761687	Identifier	env		759398	0					
ANR	761688	IfStatement	if ( num < 0 )		759398	184					
ANR	761689	Condition	num < 0	3576:10:78800:78806	759398	0	True				
ANR	761690	RelationalExpression	num < 0		759398	0		<			
ANR	761691	Identifier	num		759398	0					
ANR	761692	PrimaryExpression	0		759398	1					
ANR	761693	ReturnStatement	return num ;	3576:19:78809:78819	759398	1	True				
ANR	761694	Identifier	num		759398	0					
ANR	761695	IfStatement	if ( tok -> u . c != num )		759398	185					
ANR	761696	Condition	tok -> u . c != num	3578:10:78852:78866	759398	0	True				
ANR	761697	EqualityExpression	tok -> u . c != num		759398	0		!=			
ANR	761698	MemberAccess	tok -> u . c		759398	0					
ANR	761699	PtrMemberAccess	tok -> u		759398	0					
ANR	761700	Identifier	tok		759398	0					
ANR	761701	Identifier	u		759398	1					
ANR	761702	Identifier	c		759398	1					
ANR	761703	Identifier	num		759398	1					
ANR	761704	CompoundStatement		452:27:11568:11568	759398	1					
ANR	761705	ExpressionStatement	tok -> type = TK_CODE_POINT	3579:1:78872:78897	759398	0	True				
ANR	761706	AssignmentExpression	tok -> type = TK_CODE_POINT		759398	0		=			
ANR	761707	PtrMemberAccess	tok -> type		759398	0					
ANR	761708	Identifier	tok		759398	0					
ANR	761709	Identifier	type		759398	1					
ANR	761710	Identifier	TK_CODE_POINT		759398	1					
ANR	761711	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3580:1:78900:78933	759398	1	True				
ANR	761712	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		759398	0		=			
ANR	761713	MemberAccess	tok -> u . code		759398	0					
ANR	761714	PtrMemberAccess	tok -> u		759398	0					
ANR	761715	Identifier	tok		759398	0					
ANR	761716	Identifier	u		759398	1					
ANR	761717	Identifier	code		759398	1					
ANR	761718	CastExpression	( OnigCodePoint ) num		759398	1					
ANR	761719	CastTarget	OnigCodePoint		759398	0					
ANR	761720	Identifier	num		759398	1					
ANR	761721	ElseStatement	else		759398	0					
ANR	761722	CompoundStatement		456:11:11653:11653	759398	0					
ANR	761723	ExpressionStatement	"p = tok -> backp + enclen ( enc , tok -> backp )"	3583:1:78970:79010	759398	0	True				
ANR	761724	AssignmentExpression	"p = tok -> backp + enclen ( enc , tok -> backp )"		759398	0		=			
ANR	761725	Identifier	p		759398	0					
ANR	761726	AdditiveExpression	"tok -> backp + enclen ( enc , tok -> backp )"		759398	1		+			
ANR	761727	PtrMemberAccess	tok -> backp		759398	0					
ANR	761728	Identifier	tok		759398	0					
ANR	761729	Identifier	backp		759398	1					
ANR	761730	CallExpression	"enclen ( enc , tok -> backp )"		759398	1					
ANR	761731	Callee	enclen		759398	0					
ANR	761732	Identifier	enclen		759398	0					
ANR	761733	ArgumentList	enc		759398	1					
ANR	761734	Argument	enc		759398	0					
ANR	761735	Identifier	enc		759398	0					
ANR	761736	Argument	tok -> backp		759398	1					
ANR	761737	PtrMemberAccess	tok -> backp		759398	0					
ANR	761738	Identifier	tok		759398	0					
ANR	761739	Identifier	backp		759398	1					
ANR	761740	BreakStatement	break ;	3585:6:79026:79031	759398	186	True				
ANR	761741	ElseStatement	else		759398	0					
ANR	761742	CompoundStatement		462:7:11749:11749	759398	0					
ANR	761743	ExpressionStatement	tok -> u . c = c	3589:4:79056:79068	759398	0	True				
ANR	761744	AssignmentExpression	tok -> u . c = c		759398	0		=			
ANR	761745	MemberAccess	tok -> u . c		759398	0					
ANR	761746	PtrMemberAccess	tok -> u		759398	0					
ANR	761747	Identifier	tok		759398	0					
ANR	761748	Identifier	u		759398	1					
ANR	761749	Identifier	c		759398	1					
ANR	761750	Identifier	c		759398	1					
ANR	761751	ExpressionStatement	tok -> escaped = 0	3590:4:79074:79090	759398	1	True				
ANR	761752	AssignmentExpression	tok -> escaped = 0		759398	0		=			
ANR	761753	PtrMemberAccess	tok -> escaped		759398	0					
ANR	761754	Identifier	tok		759398	0					
ANR	761755	Identifier	escaped		759398	1					
ANR	761756	PrimaryExpression	0		759398	1					
ANR	761757	IfStatement	"if ( ( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS ) )"		759398	2					
ANR	761758	Condition	"( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"	3593:8:79132:79224	759398	0	True				
ANR	761759	AndExpression	"( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"		759398	0		&&			
ANR	761760	EqualityExpression	c != ONIG_INEFFECTIVE_META_CHAR		759398	0		!=			
ANR	761761	Identifier	c		759398	0					
ANR	761762	Identifier	ONIG_INEFFECTIVE_META_CHAR		759398	1					
ANR	761763	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"		759398	1					
ANR	761764	Callee	IS_SYNTAX_OP		759398	0					
ANR	761765	Identifier	IS_SYNTAX_OP		759398	0					
ANR	761766	ArgumentList	syn		759398	1					
ANR	761767	Argument	syn		759398	0					
ANR	761768	Identifier	syn		759398	0					
ANR	761769	Argument	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		759398	1					
ANR	761770	Identifier	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		759398	0					
ANR	761771	CompoundStatement		468:58:11926:11926	759398	1					
ANR	761772	IfStatement	if ( c == MC_ANYCHAR ( syn ) )		759398	0					
ANR	761773	Condition	c == MC_ANYCHAR ( syn )	3595:10:79239:79258	759398	0	True				
ANR	761774	EqualityExpression	c == MC_ANYCHAR ( syn )		759398	0		==			
ANR	761775	Identifier	c		759398	0					
ANR	761776	CallExpression	MC_ANYCHAR ( syn )		759398	1					
ANR	761777	Callee	MC_ANYCHAR		759398	0					
ANR	761778	Identifier	MC_ANYCHAR		759398	0					
ANR	761779	ArgumentList	syn		759398	1					
ANR	761780	Argument	syn		759398	0					
ANR	761781	Identifier	syn		759398	0					
ANR	761782	GotoStatement	goto any_char ;	3596:1:79262:79275	759398	1	True				
ANR	761783	Identifier	any_char		759398	0					
ANR	761784	ElseStatement	else		759398	0					
ANR	761785	IfStatement	if ( c == MC_ANYTIME ( syn ) )		759398	0					
ANR	761786	Condition	c == MC_ANYTIME ( syn )	3597:15:79292:79311	759398	0	True				
ANR	761787	EqualityExpression	c == MC_ANYTIME ( syn )		759398	0		==			
ANR	761788	Identifier	c		759398	0					
ANR	761789	CallExpression	MC_ANYTIME ( syn )		759398	1					
ANR	761790	Callee	MC_ANYTIME		759398	0					
ANR	761791	Identifier	MC_ANYTIME		759398	0					
ANR	761792	ArgumentList	syn		759398	1					
ANR	761793	Argument	syn		759398	0					
ANR	761794	Identifier	syn		759398	0					
ANR	761795	GotoStatement	goto anytime ;	3598:1:79315:79327	759398	1	True				
ANR	761796	Identifier	anytime		759398	0					
ANR	761797	ElseStatement	else		759398	0					
ANR	761798	IfStatement	if ( c == MC_ZERO_OR_ONE_TIME ( syn ) )		759398	0					
ANR	761799	Condition	c == MC_ZERO_OR_ONE_TIME ( syn )	3599:15:79344:79372	759398	0	True				
ANR	761800	EqualityExpression	c == MC_ZERO_OR_ONE_TIME ( syn )		759398	0		==			
ANR	761801	Identifier	c		759398	0					
ANR	761802	CallExpression	MC_ZERO_OR_ONE_TIME ( syn )		759398	1					
ANR	761803	Callee	MC_ZERO_OR_ONE_TIME		759398	0					
ANR	761804	Identifier	MC_ZERO_OR_ONE_TIME		759398	0					
ANR	761805	ArgumentList	syn		759398	1					
ANR	761806	Argument	syn		759398	0					
ANR	761807	Identifier	syn		759398	0					
ANR	761808	GotoStatement	goto zero_or_one_time ;	3600:1:79376:79397	759398	1	True				
ANR	761809	Identifier	zero_or_one_time		759398	0					
ANR	761810	ElseStatement	else		759398	0					
ANR	761811	IfStatement	if ( c == MC_ONE_OR_MORE_TIME ( syn ) )		759398	0					
ANR	761812	Condition	c == MC_ONE_OR_MORE_TIME ( syn )	3601:15:79414:79442	759398	0	True				
ANR	761813	EqualityExpression	c == MC_ONE_OR_MORE_TIME ( syn )		759398	0		==			
ANR	761814	Identifier	c		759398	0					
ANR	761815	CallExpression	MC_ONE_OR_MORE_TIME ( syn )		759398	1					
ANR	761816	Callee	MC_ONE_OR_MORE_TIME		759398	0					
ANR	761817	Identifier	MC_ONE_OR_MORE_TIME		759398	0					
ANR	761818	ArgumentList	syn		759398	1					
ANR	761819	Argument	syn		759398	0					
ANR	761820	Identifier	syn		759398	0					
ANR	761821	GotoStatement	goto one_or_more_time ;	3602:1:79446:79467	759398	1	True				
ANR	761822	Identifier	one_or_more_time		759398	0					
ANR	761823	ElseStatement	else		759398	0					
ANR	761824	IfStatement	if ( c == MC_ANYCHAR_ANYTIME ( syn ) )		759398	0					
ANR	761825	Condition	c == MC_ANYCHAR_ANYTIME ( syn )	3603:15:79484:79511	759398	0	True				
ANR	761826	EqualityExpression	c == MC_ANYCHAR_ANYTIME ( syn )		759398	0		==			
ANR	761827	Identifier	c		759398	0					
ANR	761828	CallExpression	MC_ANYCHAR_ANYTIME ( syn )		759398	1					
ANR	761829	Callee	MC_ANYCHAR_ANYTIME		759398	0					
ANR	761830	Identifier	MC_ANYCHAR_ANYTIME		759398	0					
ANR	761831	ArgumentList	syn		759398	1					
ANR	761832	Argument	syn		759398	0					
ANR	761833	Identifier	syn		759398	0					
ANR	761834	CompoundStatement		477:45:12213:12213	759398	1					
ANR	761835	ExpressionStatement	tok -> type = TK_ANYCHAR_ANYTIME	3604:1:79517:79547	759398	0	True				
ANR	761836	AssignmentExpression	tok -> type = TK_ANYCHAR_ANYTIME		759398	0		=			
ANR	761837	PtrMemberAccess	tok -> type		759398	0					
ANR	761838	Identifier	tok		759398	0					
ANR	761839	Identifier	type		759398	1					
ANR	761840	Identifier	TK_ANYCHAR_ANYTIME		759398	1					
ANR	761841	GotoStatement	goto out ;	3605:1:79550:79558	759398	1	True				
ANR	761842	Identifier	out		759398	0					
ANR	761843	SwitchStatement	switch ( c )		759398	3					
ANR	761844	Condition	c	3610:12:79594:79594	759398	0	True				
ANR	761845	Identifier	c		759398	0					
ANR	761846	CompoundStatement		484:15:12296:12296	759398	1					
ANR	761847	Label	case '.' :	3611:4:79603:79611	759398	0	True				
ANR	761848	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR ) )"		759398	1					
ANR	761849	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"	3612:10:79623:79666	759398	0	True				
ANR	761850	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"		759398	0					
ANR	761851	UnaryOperator	!		759398	0					
ANR	761852	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"		759398	1					
ANR	761853	Callee	IS_SYNTAX_OP		759398	0					
ANR	761854	Identifier	IS_SYNTAX_OP		759398	0					
ANR	761855	ArgumentList	syn		759398	1					
ANR	761856	Argument	syn		759398	0					
ANR	761857	Identifier	syn		759398	0					
ANR	761858	Argument	ONIG_SYN_OP_DOT_ANYCHAR		759398	1					
ANR	761859	Identifier	ONIG_SYN_OP_DOT_ANYCHAR		759398	0					
ANR	761860	BreakStatement	break ;	3612:56:79669:79674	759398	1	True				
ANR	761861	Label	any_char :	3614:4:79711:79719	759398	2	True				
ANR	761862	Identifier	any_char		759398	0					
ANR	761863	ExpressionStatement	tok -> type = TK_ANYCHAR	3616:6:79734:79756	759398	3	True				
ANR	761864	AssignmentExpression	tok -> type = TK_ANYCHAR		759398	0		=			
ANR	761865	PtrMemberAccess	tok -> type		759398	0					
ANR	761866	Identifier	tok		759398	0					
ANR	761867	Identifier	type		759398	1					
ANR	761868	Identifier	TK_ANYCHAR		759398	1					
ANR	761869	BreakStatement	break ;	3617:6:79764:79769	759398	4	True				
ANR	761870	Label	case '*' :	3619:4:79776:79784	759398	5	True				
ANR	761871	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF ) )"		759398	6					
ANR	761872	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"	3620:10:79796:79845	759398	0	True				
ANR	761873	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"		759398	0					
ANR	761874	UnaryOperator	!		759398	0					
ANR	761875	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"		759398	1					
ANR	761876	Callee	IS_SYNTAX_OP		759398	0					
ANR	761877	Identifier	IS_SYNTAX_OP		759398	0					
ANR	761878	ArgumentList	syn		759398	1					
ANR	761879	Argument	syn		759398	0					
ANR	761880	Identifier	syn		759398	0					
ANR	761881	Argument	ONIG_SYN_OP_ASTERISK_ZERO_INF		759398	1					
ANR	761882	Identifier	ONIG_SYN_OP_ASTERISK_ZERO_INF		759398	0					
ANR	761883	BreakStatement	break ;	3620:62:79848:79853	759398	1	True				
ANR	761884	Label	anytime :	3622:4:79890:79897	759398	7	True				
ANR	761885	Identifier	anytime		759398	0					
ANR	761886	ExpressionStatement	tok -> type = TK_OP_REPEAT	3624:6:79912:79936	759398	8	True				
ANR	761887	AssignmentExpression	tok -> type = TK_OP_REPEAT		759398	0		=			
ANR	761888	PtrMemberAccess	tok -> type		759398	0					
ANR	761889	Identifier	tok		759398	0					
ANR	761890	Identifier	type		759398	1					
ANR	761891	Identifier	TK_OP_REPEAT		759398	1					
ANR	761892	ExpressionStatement	tok -> u . repeat . lower = 0	3625:6:79944:79967	759398	9	True				
ANR	761893	AssignmentExpression	tok -> u . repeat . lower = 0		759398	0		=			
ANR	761894	MemberAccess	tok -> u . repeat . lower		759398	0					
ANR	761895	MemberAccess	tok -> u . repeat		759398	0					
ANR	761896	PtrMemberAccess	tok -> u		759398	0					
ANR	761897	Identifier	tok		759398	0					
ANR	761898	Identifier	u		759398	1					
ANR	761899	Identifier	repeat		759398	1					
ANR	761900	Identifier	lower		759398	1					
ANR	761901	PrimaryExpression	0		759398	1					
ANR	761902	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3626:6:79975:80012	759398	10	True				
ANR	761903	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		759398	0		=			
ANR	761904	MemberAccess	tok -> u . repeat . upper		759398	0					
ANR	761905	MemberAccess	tok -> u . repeat		759398	0					
ANR	761906	PtrMemberAccess	tok -> u		759398	0					
ANR	761907	Identifier	tok		759398	0					
ANR	761908	Identifier	u		759398	1					
ANR	761909	Identifier	repeat		759398	1					
ANR	761910	Identifier	upper		759398	1					
ANR	761911	Identifier	REPEAT_INFINITE		759398	1					
ANR	761912	GotoStatement	goto greedy_check ;	3627:6:80020:80037	759398	11	True				
ANR	761913	Identifier	greedy_check		759398	0					
ANR	761914	BreakStatement	break ;	3628:6:80045:80050	759398	12	True				
ANR	761915	Label	case '+' :	3630:4:80057:80065	759398	13	True				
ANR	761916	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF ) )"		759398	14					
ANR	761917	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"	3631:10:80077:80121	759398	0	True				
ANR	761918	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"		759398	0					
ANR	761919	UnaryOperator	!		759398	0					
ANR	761920	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"		759398	1					
ANR	761921	Callee	IS_SYNTAX_OP		759398	0					
ANR	761922	Identifier	IS_SYNTAX_OP		759398	0					
ANR	761923	ArgumentList	syn		759398	1					
ANR	761924	Argument	syn		759398	0					
ANR	761925	Identifier	syn		759398	0					
ANR	761926	Argument	ONIG_SYN_OP_PLUS_ONE_INF		759398	1					
ANR	761927	Identifier	ONIG_SYN_OP_PLUS_ONE_INF		759398	0					
ANR	761928	BreakStatement	break ;	3631:57:80124:80129	759398	1	True				
ANR	761929	Label	one_or_more_time :	3633:4:80166:80182	759398	15	True				
ANR	761930	Identifier	one_or_more_time		759398	0					
ANR	761931	ExpressionStatement	tok -> type = TK_OP_REPEAT	3635:6:80197:80221	759398	16	True				
ANR	761932	AssignmentExpression	tok -> type = TK_OP_REPEAT		759398	0		=			
ANR	761933	PtrMemberAccess	tok -> type		759398	0					
ANR	761934	Identifier	tok		759398	0					
ANR	761935	Identifier	type		759398	1					
ANR	761936	Identifier	TK_OP_REPEAT		759398	1					
ANR	761937	ExpressionStatement	tok -> u . repeat . lower = 1	3636:6:80229:80252	759398	17	True				
ANR	761938	AssignmentExpression	tok -> u . repeat . lower = 1		759398	0		=			
ANR	761939	MemberAccess	tok -> u . repeat . lower		759398	0					
ANR	761940	MemberAccess	tok -> u . repeat		759398	0					
ANR	761941	PtrMemberAccess	tok -> u		759398	0					
ANR	761942	Identifier	tok		759398	0					
ANR	761943	Identifier	u		759398	1					
ANR	761944	Identifier	repeat		759398	1					
ANR	761945	Identifier	lower		759398	1					
ANR	761946	PrimaryExpression	1		759398	1					
ANR	761947	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3637:6:80260:80297	759398	18	True				
ANR	761948	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		759398	0		=			
ANR	761949	MemberAccess	tok -> u . repeat . upper		759398	0					
ANR	761950	MemberAccess	tok -> u . repeat		759398	0					
ANR	761951	PtrMemberAccess	tok -> u		759398	0					
ANR	761952	Identifier	tok		759398	0					
ANR	761953	Identifier	u		759398	1					
ANR	761954	Identifier	repeat		759398	1					
ANR	761955	Identifier	upper		759398	1					
ANR	761956	Identifier	REPEAT_INFINITE		759398	1					
ANR	761957	GotoStatement	goto greedy_check ;	3638:6:80305:80322	759398	19	True				
ANR	761958	Identifier	greedy_check		759398	0					
ANR	761959	BreakStatement	break ;	3639:6:80330:80335	759398	20	True				
ANR	761960	Label	case '?' :	3641:4:80342:80350	759398	21	True				
ANR	761961	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE ) )"		759398	22					
ANR	761962	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"	3642:10:80362:80408	759398	0	True				
ANR	761963	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"		759398	0					
ANR	761964	UnaryOperator	!		759398	0					
ANR	761965	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"		759398	1					
ANR	761966	Callee	IS_SYNTAX_OP		759398	0					
ANR	761967	Identifier	IS_SYNTAX_OP		759398	0					
ANR	761968	ArgumentList	syn		759398	1					
ANR	761969	Argument	syn		759398	0					
ANR	761970	Identifier	syn		759398	0					
ANR	761971	Argument	ONIG_SYN_OP_QMARK_ZERO_ONE		759398	1					
ANR	761972	Identifier	ONIG_SYN_OP_QMARK_ZERO_ONE		759398	0					
ANR	761973	BreakStatement	break ;	3642:59:80411:80416	759398	1	True				
ANR	761974	Label	zero_or_one_time :	3644:4:80453:80469	759398	23	True				
ANR	761975	Identifier	zero_or_one_time		759398	0					
ANR	761976	ExpressionStatement	tok -> type = TK_OP_REPEAT	3646:6:80484:80508	759398	24	True				
ANR	761977	AssignmentExpression	tok -> type = TK_OP_REPEAT		759398	0		=			
ANR	761978	PtrMemberAccess	tok -> type		759398	0					
ANR	761979	Identifier	tok		759398	0					
ANR	761980	Identifier	type		759398	1					
ANR	761981	Identifier	TK_OP_REPEAT		759398	1					
ANR	761982	ExpressionStatement	tok -> u . repeat . lower = 0	3647:6:80516:80539	759398	25	True				
ANR	761983	AssignmentExpression	tok -> u . repeat . lower = 0		759398	0		=			
ANR	761984	MemberAccess	tok -> u . repeat . lower		759398	0					
ANR	761985	MemberAccess	tok -> u . repeat		759398	0					
ANR	761986	PtrMemberAccess	tok -> u		759398	0					
ANR	761987	Identifier	tok		759398	0					
ANR	761988	Identifier	u		759398	1					
ANR	761989	Identifier	repeat		759398	1					
ANR	761990	Identifier	lower		759398	1					
ANR	761991	PrimaryExpression	0		759398	1					
ANR	761992	ExpressionStatement	tok -> u . repeat . upper = 1	3648:6:80547:80570	759398	26	True				
ANR	761993	AssignmentExpression	tok -> u . repeat . upper = 1		759398	0		=			
ANR	761994	MemberAccess	tok -> u . repeat . upper		759398	0					
ANR	761995	MemberAccess	tok -> u . repeat		759398	0					
ANR	761996	PtrMemberAccess	tok -> u		759398	0					
ANR	761997	Identifier	tok		759398	0					
ANR	761998	Identifier	u		759398	1					
ANR	761999	Identifier	repeat		759398	1					
ANR	762000	Identifier	upper		759398	1					
ANR	762001	PrimaryExpression	1		759398	1					
ANR	762002	GotoStatement	goto greedy_check ;	3649:6:80578:80595	759398	27	True				
ANR	762003	Identifier	greedy_check		759398	0					
ANR	762004	BreakStatement	break ;	3650:6:80603:80608	759398	28	True				
ANR	762005	Label	case '{' :	3652:4:80615:80623	759398	29	True				
ANR	762006	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL ) )"		759398	30					
ANR	762007	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"	3653:10:80635:80681	759398	0	True				
ANR	762008	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"		759398	0					
ANR	762009	UnaryOperator	!		759398	0					
ANR	762010	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"		759398	1					
ANR	762011	Callee	IS_SYNTAX_OP		759398	0					
ANR	762012	Identifier	IS_SYNTAX_OP		759398	0					
ANR	762013	ArgumentList	syn		759398	1					
ANR	762014	Argument	syn		759398	0					
ANR	762015	Identifier	syn		759398	0					
ANR	762016	Argument	ONIG_SYN_OP_BRACE_INTERVAL		759398	1					
ANR	762017	Identifier	ONIG_SYN_OP_BRACE_INTERVAL		759398	0					
ANR	762018	BreakStatement	break ;	3653:59:80684:80689	759398	1	True				
ANR	762019	ExpressionStatement	"r = fetch_range_quantifier ( & p , end , tok , env )"	3654:6:80697:80742	759398	31	True				
ANR	762020	AssignmentExpression	"r = fetch_range_quantifier ( & p , end , tok , env )"		759398	0		=			
ANR	762021	Identifier	r		759398	0					
ANR	762022	CallExpression	"fetch_range_quantifier ( & p , end , tok , env )"		759398	1					
ANR	762023	Callee	fetch_range_quantifier		759398	0					
ANR	762024	Identifier	fetch_range_quantifier		759398	0					
ANR	762025	ArgumentList	& p		759398	1					
ANR	762026	Argument	& p		759398	0					
ANR	762027	UnaryOperationExpression	& p		759398	0					
ANR	762028	UnaryOperator	&		759398	0					
ANR	762029	Identifier	p		759398	1					
ANR	762030	Argument	end		759398	1					
ANR	762031	Identifier	end		759398	0					
ANR	762032	Argument	tok		759398	2					
ANR	762033	Identifier	tok		759398	0					
ANR	762034	Argument	env		759398	3					
ANR	762035	Identifier	env		759398	0					
ANR	762036	IfStatement	if ( r < 0 )		759398	32					
ANR	762037	Condition	r < 0	3655:10:80754:80758	759398	0	True				
ANR	762038	RelationalExpression	r < 0		759398	0		<			
ANR	762039	Identifier	r		759398	0					
ANR	762040	PrimaryExpression	0		759398	1					
ANR	762041	ReturnStatement	return r ;	3655:17:80761:80769	759398	1	True				
ANR	762042	Identifier	r		759398	0					
ANR	762043	IfStatement	if ( r == 0 )		759398	33					
ANR	762044	Condition	r == 0	3656:10:80794:80799	759398	0	True				
ANR	762045	EqualityExpression	r == 0		759398	0		==			
ANR	762046	Identifier	r		759398	0					
ANR	762047	PrimaryExpression	0		759398	1					
ANR	762048	GotoStatement	goto greedy_check ;	3656:18:80802:80819	759398	1	True				
ANR	762049	Identifier	greedy_check		759398	0					
ANR	762050	ElseStatement	else		759398	0					
ANR	762051	IfStatement	if ( r == 2 )		759398	0					
ANR	762052	Condition	r == 2	3657:15:80836:80841	759398	0	True				
ANR	762053	EqualityExpression	r == 2		759398	0		==			
ANR	762054	Identifier	r		759398	0					
ANR	762055	PrimaryExpression	2		759398	1					
ANR	762056	CompoundStatement		531:23:13543:13543	759398	1					
ANR	762057	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY ) )"		759398	0					
ANR	762058	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"	3658:5:80861:80917	759398	0	True				
ANR	762059	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"		759398	0					
ANR	762060	Callee	IS_SYNTAX_BV		759398	0					
ANR	762061	Identifier	IS_SYNTAX_BV		759398	0					
ANR	762062	ArgumentList	syn		759398	1					
ANR	762063	Argument	syn		759398	0					
ANR	762064	Identifier	syn		759398	0					
ANR	762065	Argument	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		759398	1					
ANR	762066	Identifier	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		759398	0					
ANR	762067	GotoStatement	goto possessive_check ;	3659:3:80923:80944	759398	1	True				
ANR	762068	Identifier	possessive_check		759398	0					
ANR	762069	GotoStatement	goto greedy_check ;	3661:1:80948:80965	759398	1	True				
ANR	762070	Identifier	greedy_check		759398	0					
ANR	762071	BreakStatement	break ;	3664:6:81014:81019	759398	34	True				
ANR	762072	Label	case '|' :	3666:4:81026:81034	759398	35	True				
ANR	762073	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT ) )"		759398	36					
ANR	762074	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"	3667:10:81046:81086	759398	0	True				
ANR	762075	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"		759398	0					
ANR	762076	UnaryOperator	!		759398	0					
ANR	762077	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"		759398	1					
ANR	762078	Callee	IS_SYNTAX_OP		759398	0					
ANR	762079	Identifier	IS_SYNTAX_OP		759398	0					
ANR	762080	ArgumentList	syn		759398	1					
ANR	762081	Argument	syn		759398	0					
ANR	762082	Identifier	syn		759398	0					
ANR	762083	Argument	ONIG_SYN_OP_VBAR_ALT		759398	1					
ANR	762084	Identifier	ONIG_SYN_OP_VBAR_ALT		759398	0					
ANR	762085	BreakStatement	break ;	3667:53:81089:81094	759398	1	True				
ANR	762086	ExpressionStatement	tok -> type = TK_ALT	3668:6:81102:81120	759398	37	True				
ANR	762087	AssignmentExpression	tok -> type = TK_ALT		759398	0		=			
ANR	762088	PtrMemberAccess	tok -> type		759398	0					
ANR	762089	Identifier	tok		759398	0					
ANR	762090	Identifier	type		759398	1					
ANR	762091	Identifier	TK_ALT		759398	1					
ANR	762092	BreakStatement	break ;	3669:6:81128:81133	759398	38	True				
ANR	762093	Label	case '(' :	3671:4:81140:81148	759398	39	True				
ANR	762094	IfStatement	"if ( PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT ) )"		759398	40					
ANR	762095	Condition	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"	3672:10:81160:81237	759398	0	True				
ANR	762096	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		759398	0		&&			
ANR	762097	CallExpression	PPEEK_IS ( '?' )		759398	0					
ANR	762098	Callee	PPEEK_IS		759398	0					
ANR	762099	Identifier	PPEEK_IS		759398	0					
ANR	762100	ArgumentList	'?'		759398	1					
ANR	762101	Argument	'?'		759398	0					
ANR	762102	PrimaryExpression	'?'		759398	0					
ANR	762103	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		759398	1					
ANR	762104	Callee	IS_SYNTAX_OP2		759398	0					
ANR	762105	Identifier	IS_SYNTAX_OP2		759398	0					
ANR	762106	ArgumentList	syn		759398	1					
ANR	762107	Argument	syn		759398	0					
ANR	762108	Identifier	syn		759398	0					
ANR	762109	Argument	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		759398	1					
ANR	762110	Identifier	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		759398	0					
ANR	762111	CompoundStatement		547:63:13939:13939	759398	1					
ANR	762112	ExpressionStatement	PINC	3674:8:81250:81254	759398	0	True				
ANR	762113	Identifier	PINC		759398	0					
ANR	762114	IfStatement	if ( PPEEK_IS ( '#' ) )		759398	1					
ANR	762115	Condition	PPEEK_IS ( '#' )	3675:12:81268:81280	759398	0	True				
ANR	762116	CallExpression	PPEEK_IS ( '#' )		759398	0					
ANR	762117	Callee	PPEEK_IS		759398	0					
ANR	762118	Identifier	PPEEK_IS		759398	0					
ANR	762119	ArgumentList	'#'		759398	1					
ANR	762120	Argument	'#'		759398	0					
ANR	762121	PrimaryExpression	'#'		759398	0					
ANR	762122	CompoundStatement		549:27:13982:13982	759398	1					
ANR	762123	ExpressionStatement	PFETCH ( c )	3676:10:81295:81304	759398	0	True				
ANR	762124	CallExpression	PFETCH ( c )		759398	0					
ANR	762125	Callee	PFETCH		759398	0					
ANR	762126	Identifier	PFETCH		759398	0					
ANR	762127	ArgumentList	c		759398	1					
ANR	762128	Argument	c		759398	0					
ANR	762129	Identifier	c		759398	0					
ANR	762130	WhileStatement	while ( 1 )		759398	1					
ANR	762131	Condition	1	3677:17:81323:81323	759398	0	True				
ANR	762132	PrimaryExpression	1		759398	0					
ANR	762133	CompoundStatement		551:20:14025:14025	759398	1					
ANR	762134	IfStatement	if ( PEND )		759398	0					
ANR	762135	Condition	PEND	3678:16:81344:81347	759398	0	True				
ANR	762136	Identifier	PEND		759398	0					
ANR	762137	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	3678:22:81350:81385	759398	1	True				
ANR	762138	Identifier	ONIGERR_END_PATTERN_IN_GROUP		759398	0					
ANR	762139	ExpressionStatement	PFETCH ( c )	3679:12:81399:81408	759398	1	True				
ANR	762140	CallExpression	PFETCH ( c )		759398	0					
ANR	762141	Callee	PFETCH		759398	0					
ANR	762142	Identifier	PFETCH		759398	0					
ANR	762143	ArgumentList	c		759398	1					
ANR	762144	Argument	c		759398	0					
ANR	762145	Identifier	c		759398	0					
ANR	762146	IfStatement	if ( c == MC_ESC ( syn ) )		759398	2					
ANR	762147	Condition	c == MC_ESC ( syn )	3680:16:81426:81441	759398	0	True				
ANR	762148	EqualityExpression	c == MC_ESC ( syn )		759398	0		==			
ANR	762149	Identifier	c		759398	0					
ANR	762150	CallExpression	MC_ESC ( syn )		759398	1					
ANR	762151	Callee	MC_ESC		759398	0					
ANR	762152	Identifier	MC_ESC		759398	0					
ANR	762153	ArgumentList	syn		759398	1					
ANR	762154	Argument	syn		759398	0					
ANR	762155	Identifier	syn		759398	0					
ANR	762156	CompoundStatement		554:34:14143:14143	759398	1					
ANR	762157	IfStatement	if ( ! PEND )		759398	0					
ANR	762158	Condition	! PEND	3681:18:81464:81468	759398	0	True				
ANR	762159	UnaryOperationExpression	! PEND		759398	0					
ANR	762160	UnaryOperator	!		759398	0					
ANR	762161	Identifier	PEND		759398	1					
ANR	762162	ExpressionStatement	PFETCH ( c )	3681:25:81471:81480	759398	1	True				
ANR	762163	CallExpression	PFETCH ( c )		759398	0					
ANR	762164	Callee	PFETCH		759398	0					
ANR	762165	Identifier	PFETCH		759398	0					
ANR	762166	ArgumentList	c		759398	1					
ANR	762167	Argument	c		759398	0					
ANR	762168	Identifier	c		759398	0					
ANR	762169	ElseStatement	else		759398	0					
ANR	762170	CompoundStatement		557:17:14212:14212	759398	0					
ANR	762171	IfStatement	if ( c == ')' )		759398	0					
ANR	762172	Condition	c == ')'	3684:18:81533:81540	759398	0	True				
ANR	762173	EqualityExpression	c == ')'		759398	0		==			
ANR	762174	Identifier	c		759398	0					
ANR	762175	PrimaryExpression	')'		759398	1					
ANR	762176	BreakStatement	break ;	3684:28:81543:81548	759398	1	True				
ANR	762177	GotoStatement	goto start ;	3687:10:81586:81596	759398	2	True				
ANR	762178	Identifier	start		759398	0					
ANR	762179	ExpressionStatement	PUNFETCH	3689:8:81616:81624	759398	2	True				
ANR	762180	Identifier	PUNFETCH		759398	0					
ANR	762181	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP ) )"		759398	41					
ANR	762182	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"	3692:10:81645:81690	759398	0	True				
ANR	762183	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		759398	0					
ANR	762184	UnaryOperator	!		759398	0					
ANR	762185	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		759398	1					
ANR	762186	Callee	IS_SYNTAX_OP		759398	0					
ANR	762187	Identifier	IS_SYNTAX_OP		759398	0					
ANR	762188	ArgumentList	syn		759398	1					
ANR	762189	Argument	syn		759398	0					
ANR	762190	Identifier	syn		759398	0					
ANR	762191	Argument	ONIG_SYN_OP_LPAREN_SUBEXP		759398	1					
ANR	762192	Identifier	ONIG_SYN_OP_LPAREN_SUBEXP		759398	0					
ANR	762193	BreakStatement	break ;	3692:58:81693:81698	759398	1	True				
ANR	762194	ExpressionStatement	tok -> type = TK_SUBEXP_OPEN	3693:6:81706:81732	759398	42	True				
ANR	762195	AssignmentExpression	tok -> type = TK_SUBEXP_OPEN		759398	0		=			
ANR	762196	PtrMemberAccess	tok -> type		759398	0					
ANR	762197	Identifier	tok		759398	0					
ANR	762198	Identifier	type		759398	1					
ANR	762199	Identifier	TK_SUBEXP_OPEN		759398	1					
ANR	762200	BreakStatement	break ;	3694:6:81740:81745	759398	43	True				
ANR	762201	Label	case ')' :	3696:4:81752:81760	759398	44	True				
ANR	762202	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP ) )"		759398	45					
ANR	762203	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"	3697:10:81772:81817	759398	0	True				
ANR	762204	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		759398	0					
ANR	762205	UnaryOperator	!		759398	0					
ANR	762206	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		759398	1					
ANR	762207	Callee	IS_SYNTAX_OP		759398	0					
ANR	762208	Identifier	IS_SYNTAX_OP		759398	0					
ANR	762209	ArgumentList	syn		759398	1					
ANR	762210	Argument	syn		759398	0					
ANR	762211	Identifier	syn		759398	0					
ANR	762212	Argument	ONIG_SYN_OP_LPAREN_SUBEXP		759398	1					
ANR	762213	Identifier	ONIG_SYN_OP_LPAREN_SUBEXP		759398	0					
ANR	762214	BreakStatement	break ;	3697:58:81820:81825	759398	1	True				
ANR	762215	ExpressionStatement	tok -> type = TK_SUBEXP_CLOSE	3698:6:81833:81860	759398	46	True				
ANR	762216	AssignmentExpression	tok -> type = TK_SUBEXP_CLOSE		759398	0		=			
ANR	762217	PtrMemberAccess	tok -> type		759398	0					
ANR	762218	Identifier	tok		759398	0					
ANR	762219	Identifier	type		759398	1					
ANR	762220	Identifier	TK_SUBEXP_CLOSE		759398	1					
ANR	762221	BreakStatement	break ;	3699:6:81868:81873	759398	47	True				
ANR	762222	Label	case '^' :	3701:4:81880:81888	759398	48	True				
ANR	762223	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR ) )"		759398	49					
ANR	762224	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"	3702:10:81900:81943	759398	0	True				
ANR	762225	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		759398	0					
ANR	762226	UnaryOperator	!		759398	0					
ANR	762227	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		759398	1					
ANR	762228	Callee	IS_SYNTAX_OP		759398	0					
ANR	762229	Identifier	IS_SYNTAX_OP		759398	0					
ANR	762230	ArgumentList	syn		759398	1					
ANR	762231	Argument	syn		759398	0					
ANR	762232	Identifier	syn		759398	0					
ANR	762233	Argument	ONIG_SYN_OP_LINE_ANCHOR		759398	1					
ANR	762234	Identifier	ONIG_SYN_OP_LINE_ANCHOR		759398	0					
ANR	762235	BreakStatement	break ;	3702:56:81946:81951	759398	1	True				
ANR	762236	ExpressionStatement	tok -> type = TK_ANCHOR	3703:6:81959:81980	759398	50	True				
ANR	762237	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	762238	PtrMemberAccess	tok -> type		759398	0					
ANR	762239	Identifier	tok		759398	0					
ANR	762240	Identifier	type		759398	1					
ANR	762241	Identifier	TK_ANCHOR		759398	1					
ANR	762242	ExpressionStatement	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE )	3704:6:81988:82075	759398	51	True				
ANR	762243	AssignmentExpression	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE )		759398	0		=			
ANR	762244	MemberAccess	tok -> u . subtype		759398	0					
ANR	762245	PtrMemberAccess	tok -> u		759398	0					
ANR	762246	Identifier	tok		759398	0					
ANR	762247	Identifier	u		759398	1					
ANR	762248	Identifier	subtype		759398	1					
ANR	762249	ConditionalExpression	IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE		759398	1					
ANR	762250	Condition	IS_SINGLELINE ( env -> option )		759398	0					
ANR	762251	CallExpression	IS_SINGLELINE ( env -> option )		759398	0					
ANR	762252	Callee	IS_SINGLELINE		759398	0					
ANR	762253	Identifier	IS_SINGLELINE		759398	0					
ANR	762254	ArgumentList	env -> option		759398	1					
ANR	762255	Argument	env -> option		759398	0					
ANR	762256	PtrMemberAccess	env -> option		759398	0					
ANR	762257	Identifier	env		759398	0					
ANR	762258	Identifier	option		759398	1					
ANR	762259	Identifier	ANCHOR_BEGIN_BUF		759398	1					
ANR	762260	Identifier	ANCHOR_BEGIN_LINE		759398	2					
ANR	762261	BreakStatement	break ;	3706:6:82083:82088	759398	52	True				
ANR	762262	Label	case '$' :	3708:4:82095:82103	759398	53	True				
ANR	762263	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR ) )"		759398	54					
ANR	762264	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"	3709:10:82115:82158	759398	0	True				
ANR	762265	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		759398	0					
ANR	762266	UnaryOperator	!		759398	0					
ANR	762267	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		759398	1					
ANR	762268	Callee	IS_SYNTAX_OP		759398	0					
ANR	762269	Identifier	IS_SYNTAX_OP		759398	0					
ANR	762270	ArgumentList	syn		759398	1					
ANR	762271	Argument	syn		759398	0					
ANR	762272	Identifier	syn		759398	0					
ANR	762273	Argument	ONIG_SYN_OP_LINE_ANCHOR		759398	1					
ANR	762274	Identifier	ONIG_SYN_OP_LINE_ANCHOR		759398	0					
ANR	762275	BreakStatement	break ;	3709:56:82161:82166	759398	1	True				
ANR	762276	ExpressionStatement	tok -> type = TK_ANCHOR	3710:6:82174:82195	759398	55	True				
ANR	762277	AssignmentExpression	tok -> type = TK_ANCHOR		759398	0		=			
ANR	762278	PtrMemberAccess	tok -> type		759398	0					
ANR	762279	Identifier	tok		759398	0					
ANR	762280	Identifier	type		759398	1					
ANR	762281	Identifier	TK_ANCHOR		759398	1					
ANR	762282	ExpressionStatement	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE )	3711:6:82203:82291	759398	56	True				
ANR	762283	AssignmentExpression	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE )		759398	0		=			
ANR	762284	MemberAccess	tok -> u . subtype		759398	0					
ANR	762285	PtrMemberAccess	tok -> u		759398	0					
ANR	762286	Identifier	tok		759398	0					
ANR	762287	Identifier	u		759398	1					
ANR	762288	Identifier	subtype		759398	1					
ANR	762289	ConditionalExpression	IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE		759398	1					
ANR	762290	Condition	IS_SINGLELINE ( env -> option )		759398	0					
ANR	762291	CallExpression	IS_SINGLELINE ( env -> option )		759398	0					
ANR	762292	Callee	IS_SINGLELINE		759398	0					
ANR	762293	Identifier	IS_SINGLELINE		759398	0					
ANR	762294	ArgumentList	env -> option		759398	1					
ANR	762295	Argument	env -> option		759398	0					
ANR	762296	PtrMemberAccess	env -> option		759398	0					
ANR	762297	Identifier	env		759398	0					
ANR	762298	Identifier	option		759398	1					
ANR	762299	Identifier	ANCHOR_SEMI_END_BUF		759398	1					
ANR	762300	Identifier	ANCHOR_END_LINE		759398	2					
ANR	762301	BreakStatement	break ;	3713:6:82299:82304	759398	57	True				
ANR	762302	Label	case '[' :	3715:4:82311:82319	759398	58	True				
ANR	762303	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC ) )"		759398	59					
ANR	762304	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"	3716:10:82331:82373	759398	0	True				
ANR	762305	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"		759398	0					
ANR	762306	UnaryOperator	!		759398	0					
ANR	762307	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"		759398	1					
ANR	762308	Callee	IS_SYNTAX_OP		759398	0					
ANR	762309	Identifier	IS_SYNTAX_OP		759398	0					
ANR	762310	ArgumentList	syn		759398	1					
ANR	762311	Argument	syn		759398	0					
ANR	762312	Identifier	syn		759398	0					
ANR	762313	Argument	ONIG_SYN_OP_BRACKET_CC		759398	1					
ANR	762314	Identifier	ONIG_SYN_OP_BRACKET_CC		759398	0					
ANR	762315	BreakStatement	break ;	3716:55:82376:82381	759398	1	True				
ANR	762316	ExpressionStatement	tok -> type = TK_CC_OPEN	3717:6:82389:82411	759398	60	True				
ANR	762317	AssignmentExpression	tok -> type = TK_CC_OPEN		759398	0		=			
ANR	762318	PtrMemberAccess	tok -> type		759398	0					
ANR	762319	Identifier	tok		759398	0					
ANR	762320	Identifier	type		759398	1					
ANR	762321	Identifier	TK_CC_OPEN		759398	1					
ANR	762322	BreakStatement	break ;	3718:6:82419:82424	759398	61	True				
ANR	762323	Label	case ']' :	3720:4:82431:82439	759398	62	True				
ANR	762324	IfStatement	if ( * src > env -> pattern )		759398	63					
ANR	762325	Condition	* src > env -> pattern	3721:10:82451:82469	759398	0	True				
ANR	762326	RelationalExpression	* src > env -> pattern		759398	0		>			
ANR	762327	UnaryOperationExpression	* src		759398	0					
ANR	762328	UnaryOperator	*		759398	0					
ANR	762329	Identifier	src		759398	1					
ANR	762330	PtrMemberAccess	env -> pattern		759398	1					
ANR	762331	Identifier	env		759398	0					
ANR	762332	Identifier	pattern		759398	1					
ANR	762333	ExpressionStatement	"CLOSE_BRACKET_WITHOUT_ESC_WARN ( env , ( UChar * ) ""]"" )"	3722:1:82500:82549	759398	1	True				
ANR	762334	CallExpression	"CLOSE_BRACKET_WITHOUT_ESC_WARN ( env , ( UChar * ) ""]"" )"		759398	0					
ANR	762335	Callee	CLOSE_BRACKET_WITHOUT_ESC_WARN		759398	0					
ANR	762336	Identifier	CLOSE_BRACKET_WITHOUT_ESC_WARN		759398	0					
ANR	762337	ArgumentList	env		759398	1					
ANR	762338	Argument	env		759398	0					
ANR	762339	Identifier	env		759398	0					
ANR	762340	Argument	"( UChar * ) ""]"""		759398	1					
ANR	762341	CastExpression	"( UChar * ) ""]"""		759398	0					
ANR	762342	CastTarget	UChar *		759398	0					
ANR	762343	PrimaryExpression	"""]"""		759398	1					
ANR	762344	BreakStatement	break ;	3723:6:82557:82562	759398	64	True				
ANR	762345	Label	case '#' :	3725:4:82569:82577	759398	65	True				
ANR	762346	IfStatement	if ( IS_EXTEND ( env -> option ) )		759398	66					
ANR	762347	Condition	IS_EXTEND ( env -> option )	3726:10:82589:82610	759398	0	True				
ANR	762348	CallExpression	IS_EXTEND ( env -> option )		759398	0					
ANR	762349	Callee	IS_EXTEND		759398	0					
ANR	762350	Identifier	IS_EXTEND		759398	0					
ANR	762351	ArgumentList	env -> option		759398	1					
ANR	762352	Argument	env -> option		759398	0					
ANR	762353	PtrMemberAccess	env -> option		759398	0					
ANR	762354	Identifier	env		759398	0					
ANR	762355	Identifier	option		759398	1					
ANR	762356	CompoundStatement		600:34:15312:15312	759398	1					
ANR	762357	WhileStatement	while ( ! PEND )		759398	0					
ANR	762358	Condition	! PEND	3727:8:82623:82627	759398	0	True				
ANR	762359	UnaryOperationExpression	! PEND		759398	0					
ANR	762360	UnaryOperator	!		759398	0					
ANR	762361	Identifier	PEND		759398	1					
ANR	762362	CompoundStatement		601:15:15329:15329	759398	1					
ANR	762363	ExpressionStatement	PFETCH ( c )	3728:3:82635:82644	759398	0	True				
ANR	762364	CallExpression	PFETCH ( c )		759398	0					
ANR	762365	Callee	PFETCH		759398	0					
ANR	762366	Identifier	PFETCH		759398	0					
ANR	762367	ArgumentList	c		759398	1					
ANR	762368	Argument	c		759398	0					
ANR	762369	Identifier	c		759398	0					
ANR	762370	IfStatement	"if ( ONIGENC_IS_CODE_NEWLINE ( enc , c ) )"		759398	1					
ANR	762371	Condition	"ONIGENC_IS_CODE_NEWLINE ( enc , c )"	3729:7:82653:82683	759398	0	True				
ANR	762372	CallExpression	"ONIGENC_IS_CODE_NEWLINE ( enc , c )"		759398	0					
ANR	762373	Callee	ONIGENC_IS_CODE_NEWLINE		759398	0					
ANR	762374	Identifier	ONIGENC_IS_CODE_NEWLINE		759398	0					
ANR	762375	ArgumentList	enc		759398	1					
ANR	762376	Argument	enc		759398	0					
ANR	762377	Identifier	enc		759398	0					
ANR	762378	Argument	c		759398	1					
ANR	762379	Identifier	c		759398	0					
ANR	762380	BreakStatement	break ;	3730:5:82691:82696	759398	1	True				
ANR	762381	GotoStatement	goto start ;	3732:1:82702:82712	759398	1	True				
ANR	762382	Identifier	start		759398	0					
ANR	762383	BreakStatement	break ;	3733:1:82715:82720	759398	2	True				
ANR	762384	BreakStatement	break ;	3735:6:82736:82741	759398	67	True				
ANR	762385	Label	case ' ' :	3737:4:82748:82756	759398	68	True				
ANR	762386	Label	case '\\t' :	3737:14:82758:82767	759398	69	True				
ANR	762387	Label	case '\\n' :	3737:25:82769:82778	759398	70	True				
ANR	762388	Label	case '\\r' :	3737:36:82780:82789	759398	71	True				
ANR	762389	Label	case '\\f' :	3737:47:82791:82800	759398	72	True				
ANR	762390	IfStatement	if ( IS_EXTEND ( env -> option ) )		759398	73					
ANR	762391	Condition	IS_EXTEND ( env -> option )	3738:10:82812:82833	759398	0	True				
ANR	762392	CallExpression	IS_EXTEND ( env -> option )		759398	0					
ANR	762393	Callee	IS_EXTEND		759398	0					
ANR	762394	Identifier	IS_EXTEND		759398	0					
ANR	762395	ArgumentList	env -> option		759398	1					
ANR	762396	Argument	env -> option		759398	0					
ANR	762397	PtrMemberAccess	env -> option		759398	0					
ANR	762398	Identifier	env		759398	0					
ANR	762399	Identifier	option		759398	1					
ANR	762400	GotoStatement	goto start ;	3739:1:82837:82847	759398	1	True				
ANR	762401	Identifier	start		759398	0					
ANR	762402	BreakStatement	break ;	3740:6:82855:82860	759398	74	True				
ANR	762403	Label	default :	3742:4:82867:82874	759398	75	True				
ANR	762404	Identifier	default		759398	0					
ANR	762405	BreakStatement	break ;	3744:6:82901:82906	759398	76	True				
ANR	762406	Label	out :	3749:1:82951:82954	759398	14	True				
ANR	762407	Identifier	out		759398	0					
ANR	762408	ExpressionStatement	* src = p	3751:2:82965:82973	759398	15	True				
ANR	762409	AssignmentExpression	* src = p		759398	0		=			
ANR	762410	UnaryOperationExpression	* src		759398	0					
ANR	762411	UnaryOperator	*		759398	0					
ANR	762412	Identifier	src		759398	1					
ANR	762413	Identifier	p		759398	1					
ANR	762414	ReturnStatement	return tok -> type ;	3752:2:82977:82993	759398	16	True				
ANR	762415	PtrMemberAccess	tok -> type		759398	0					
ANR	762416	Identifier	tok		759398	0					
ANR	762417	Identifier	type		759398	1					
ANR	762418	ReturnType	static int		759398	1					
ANR	762419	Identifier	fetch_token		759398	2					
ANR	762420	ParameterList	"OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		759398	3					
ANR	762421	Parameter	OnigToken * tok	3126:12:67245:67258	759398	0	True				
ANR	762422	ParameterType	OnigToken *		759398	0					
ANR	762423	Identifier	tok		759398	1					
ANR	762424	Parameter	UChar * * src	3126:28:67261:67271	759398	1	True				
ANR	762425	ParameterType	UChar * *		759398	0					
ANR	762426	Identifier	src		759398	1					
ANR	762427	Parameter	UChar * end	3126:41:67274:67283	759398	2	True				
ANR	762428	ParameterType	UChar *		759398	0					
ANR	762429	Identifier	end		759398	1					
ANR	762430	Parameter	ScanEnv * env	3126:53:67286:67297	759398	3	True				
ANR	762431	ParameterType	ScanEnv *		759398	0					
ANR	762432	Identifier	env		759398	1					
ANR	762433	CFGEntryNode	ENTRY		759398		True				
ANR	762434	CFGExitNode	EXIT		759398		True				
ANR	762435	Symbol	ANCHOR_END_BUF		759398						
ANR	762436	Symbol	ONIG_SYN_OP2_ESC_U_HEX4		759398						
ANR	762437	Symbol	ONIG_SYN_OP_QMARK_ZERO_ONE		759398						
ANR	762438	Symbol	* backs		759398						
ANR	762439	Symbol	prev		759398						
ANR	762440	Symbol	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		759398						
ANR	762441	Symbol	ANCHOR_END_LINE		759398						
ANR	762442	Symbol	& back_num		759398						
ANR	762443	Symbol	tok -> type		759398						
ANR	762444	Symbol	env -> reg		759398						
ANR	762445	Symbol	MC_ANYCHAR_ANYTIME		759398						
ANR	762446	Symbol	TK_ANYCHAR		759398						
ANR	762447	Symbol	ANCHOR_WORD_BEGIN		759398						
ANR	762448	Symbol	TK_QUOTE_OPEN		759398						
ANR	762449	Symbol	TK_INTERVAL		759398						
ANR	762450	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		759398						
ANR	762451	Symbol	ONIG_SYN_STRICT_CHECK_BACKREF		759398						
ANR	762452	Symbol	SCANENV_MEM_NODES		759398						
ANR	762453	Symbol	BACKREF_REL_TO_ABS		759398						
ANR	762454	Symbol	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		759398						
ANR	762455	Symbol	tok -> escaped		759398						
ANR	762456	Symbol	& tok -> u . backref . level		759398						
ANR	762457	Symbol	ANCHOR_WORD_END		759398						
ANR	762458	Symbol	ONIG_SYN_OP_ESC_VBAR_ALT		759398						
ANR	762459	Symbol	PPEEK		759398						
ANR	762460	Symbol	IS_SYNTAX_OP		759398						
ANR	762461	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		759398						
ANR	762462	Symbol	ONIG_SYN_OP_DOT_ANYCHAR		759398						
ANR	762463	Symbol	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		759398						
ANR	762464	Symbol	TK_CHAR_TYPE		759398						
ANR	762465	Symbol	ONIGENC_IS_CODE_NEWLINE		759398						
ANR	762466	Symbol	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		759398						
ANR	762467	Symbol	ONIG_SYN_OP2_ESC_H_XDIGIT		759398						
ANR	762468	Symbol	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		759398						
ANR	762469	Symbol	* tok		759398						
ANR	762470	Symbol	ONIG_SYN_OP_ASTERISK_ZERO_INF		759398						
ANR	762471	Symbol	ANCHOR_BEGIN_LINE		759398						
ANR	762472	Symbol	tok -> u . c		759398						
ANR	762473	Symbol	ONIG_SYN_OP_ESC_W_WORD		759398						
ANR	762474	Symbol	ANCHOR_SEMI_END_BUF		759398						
ANR	762475	Symbol	tok -> u . call . name		759398						
ANR	762476	Symbol	env -> enc		759398						
ANR	762477	Symbol	IS_SINGLELINE		759398						
ANR	762478	Symbol	PEND		759398						
ANR	762479	Symbol	fetch_range_quantifier		759398						
ANR	762480	Symbol	TK_ANCHOR		759398						
ANR	762481	Symbol	tok		759398						
ANR	762482	Symbol	tok -> u . code		759398						
ANR	762483	Symbol	REPEAT_INFINITE		759398						
ANR	762484	Symbol	& tok -> u . backref		759398						
ANR	762485	Symbol	* * backs		759398						
ANR	762486	Symbol	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		759398						
ANR	762487	Symbol	tok -> u . anchor		759398						
ANR	762488	Symbol	MC_ANYCHAR		759398						
ANR	762489	Symbol	back_num		759398						
ANR	762490	Symbol	TK_SUBEXP_OPEN		759398						
ANR	762491	Symbol	c		759398						
ANR	762492	Symbol	TK_ALT		759398						
ANR	762493	Symbol	tok -> backp		759398						
ANR	762494	Symbol	ANCHOR_WORD_BOUND		759398						
ANR	762495	Symbol	ONIGENC_CTYPE_DIGIT		759398						
ANR	762496	Symbol	i		759398						
ANR	762497	Symbol	ONIG_SYN_OP_DECIMAL_BACKREF		759398						
ANR	762498	Symbol	enclen		759398						
ANR	762499	Symbol	MC_ESC		759398						
ANR	762500	Symbol	* back_num		759398						
ANR	762501	Symbol	p		759398						
ANR	762502	Symbol	scan_unsigned_octal_number		759398						
ANR	762503	Symbol	r		759398						
ANR	762504	Symbol	TK_SUBEXP_CLOSE		759398						
ANR	762505	Symbol	tok -> u . backref . by_name		759398						
ANR	762506	Symbol	ONIG_SYN_OP_QMARK_NON_GREEDY		759398						
ANR	762507	Symbol	ONIGENC_CTYPE_WORD		759398						
ANR	762508	Symbol	IS_EXTEND		759398						
ANR	762509	Symbol	tok -> base		759398						
ANR	762510	Symbol	ANCHOR_NOT_WORD_BOUND		759398						
ANR	762511	Symbol	scan_unsigned_hexadecimal_number		759398						
ANR	762512	Symbol	ONIG_SYN_OP_ESC_X_HEX2		759398						
ANR	762513	Symbol	tok -> u . repeat . possessive		759398						
ANR	762514	Symbol	TK_EOT		759398						
ANR	762515	Symbol	num		759398						
ANR	762516	Symbol	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		759398						
ANR	762517	Symbol	ONIG_INEFFECTIVE_META_CHAR		759398						
ANR	762518	Symbol	tok -> u . call . gnum		759398						
ANR	762519	Symbol	ONIG_SYN_OP_ESC_PLUS_ONE_INF		759398						
ANR	762520	Symbol	* src		759398						
ANR	762521	Symbol	gnum		759398						
ANR	762522	Symbol	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		759398						
ANR	762523	Symbol	* SCANENV_MEM_NODES		759398						
ANR	762524	Symbol	env -> option		759398						
ANR	762525	Symbol	ONIG_SYN_OP_ESC_B_WORD_BOUND		759398						
ANR	762526	Symbol	ONIGENC_CTYPE_SPACE		759398						
ANR	762527	Symbol	tok -> u . prop . not		759398						
ANR	762528	Symbol	IS_MC_ESC_CODE		759398						
ANR	762529	Symbol	IS_SYNTAX_BV		759398						
ANR	762530	Symbol	tok -> u . subtype		759398						
ANR	762531	Symbol	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		759398						
ANR	762532	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		759398						
ANR	762533	Symbol	TK_ANYCHAR_ANYTIME		759398						
ANR	762534	Symbol	TK_STRING		759398						
ANR	762535	Symbol	tok -> u . prop		759398						
ANR	762536	Symbol	name_end		759398						
ANR	762537	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		759398						
ANR	762538	Symbol	ONIG_SYN_OP_ESC_D_DIGIT		759398						
ANR	762539	Symbol	* * i		759398						
ANR	762540	Symbol	ONIGENC_IS_CODE_XDIGIT		759398						
ANR	762541	Symbol	TK_CODE_POINT		759398						
ANR	762542	Symbol	TK_OP_REPEAT		759398						
ANR	762543	Symbol	ANCHOR_BEGIN_POSITION		759398						
ANR	762544	Symbol	* env		759398						
ANR	762545	Symbol	& backs		759398						
ANR	762546	Symbol	TK_CC_OPEN		759398						
ANR	762547	Symbol	TK_BACKREF		759398						
ANR	762548	Symbol	tok -> u . backref . refs		759398						
ANR	762549	Symbol	env -> syntax		759398						
ANR	762550	Symbol	ONIG_MAX_BACKREF_NUM		759398						
ANR	762551	Symbol	& gnum		759398						
ANR	762552	Symbol	NULL_UCHARP		759398						
ANR	762553	Symbol	ONIG_SYN_OP_ESC_X_BRACE_HEX8		759398						
ANR	762554	Symbol	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		759398						
ANR	762555	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		759398						
ANR	762556	Symbol	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		759398						
ANR	762557	Symbol	PPEEK_IS		759398						
ANR	762558	Symbol	tok -> u . repeat . greedy		759398						
ANR	762559	Symbol	ONIGERR_INVALID_BACKREF		759398						
ANR	762560	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		759398						
ANR	762561	Symbol	ANCHOR_BEGIN_BUF		759398						
ANR	762562	Symbol	onig_name_to_group_numbers		759398						
ANR	762563	Symbol	TK_CALL		759398						
ANR	762564	Symbol	syn		759398						
ANR	762565	Symbol	tok -> u . call . name_end		759398						
ANR	762566	Symbol	fetch_name		759398						
ANR	762567	Symbol	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		759398						
ANR	762568	Symbol	onig_scan_unsigned_number		759398						
ANR	762569	Symbol	ONIG_SYN_OP_LINE_ANCHOR		759398						
ANR	762570	Symbol	IS_SYNTAX_OP2		759398						
ANR	762571	Symbol	tok -> u . backref . num		759398						
ANR	762572	Symbol	& name_end		759398						
ANR	762573	Symbol	tok -> u . backref . exist_level		759398						
ANR	762574	Symbol	IS_NULL		759398						
ANR	762575	Symbol	ONIG_SYN_OP_BRACE_INTERVAL		759398						
ANR	762576	Symbol	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		759398						
ANR	762577	Symbol	tok -> u . repeat . upper		759398						
ANR	762578	Symbol	tok -> u . backref		759398						
ANR	762579	Symbol	ONIG_SYN_OP_LPAREN_SUBEXP		759398						
ANR	762580	Symbol	end		759398						
ANR	762581	Symbol	fetch_name_with_level		759398						
ANR	762582	Symbol	enc		759398						
ANR	762583	Symbol	tok -> u		759398						
ANR	762584	Symbol	MC_ANYTIME		759398						
ANR	762585	Symbol	ONIGENC_CTYPE_XDIGIT		759398						
ANR	762586	Symbol	ONIG_SYN_OP_ESC_BRACE_INTERVAL		759398						
ANR	762587	Symbol	ONIG_SYN_OP_BRACKET_CC		759398						
ANR	762588	Symbol	tok -> u . call		759398						
ANR	762589	Symbol	ONIG_SYN_OP_VBAR_ALT		759398						
ANR	762590	Symbol	tok -> u . repeat		759398						
ANR	762591	Symbol	ONIGERR_TOO_BIG_NUMBER		759398						
ANR	762592	Symbol	ONIGERR_END_PATTERN_IN_GROUP		759398						
ANR	762593	Symbol	src		759398						
ANR	762594	Symbol	env -> num_mem		759398						
ANR	762595	Symbol	env		759398						
ANR	762596	Symbol	ONIG_SYN_OP_ESC_S_WHITE_SPACE		759398						
ANR	762597	Symbol	tok -> u . backref . ref1		759398						
ANR	762598	Symbol	& tok -> u		759398						
ANR	762599	Symbol	* num		759398						
ANR	762600	Symbol	TK_CHAR_PROPERTY		759398						
ANR	762601	Symbol	ONIG_SYN_OP_PLUS_ONE_INF		759398						
ANR	762602	Symbol	* i		759398						
ANR	762603	Symbol	tok -> u . repeat . lower		759398						
ANR	762604	Symbol	env -> pattern		759398						
ANR	762605	Symbol	& p		759398						
ANR	762606	Symbol	fetch_escaped_value		759398						
ANR	762607	Symbol	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		759398						
ANR	762608	Symbol	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		759398						
ANR	762609	Symbol	ONIG_SYN_OP_ESC_OCTAL3		759398						
ANR	762610	Symbol	tok -> u . prop . ctype		759398						
ANR	762611	Symbol	MC_ONE_OR_MORE_TIME		759398						
ANR	762612	Symbol	TK_RAW_BYTE		759398						
ANR	762613	Symbol	backs		759398						
ANR	762614	Symbol	MC_ZERO_OR_ONE_TIME		759398						
ANR	762615	Function	add_ctype_to_cc_by_range	3755:0:82998:84786							
ANR	762616	FunctionDef	"add_ctype_to_cc_by_range (CClassNode * cc , int ctype ARG_UNUSED , int not , OnigEncoding enc ARG_UNUSED , OnigCodePoint sb_out , const OnigCodePoint mbr [ ])"		762615	0					
ANR	762617	CompoundStatement		3759:0:83188:84786	762615	0					
ANR	762618	IdentifierDeclStatement	"int i , r ;"	3760:2:83192:83200	762615	0	True				
ANR	762619	IdentifierDecl	i		762615	0					
ANR	762620	IdentifierDeclType	int		762615	0					
ANR	762621	Identifier	i		762615	1					
ANR	762622	IdentifierDecl	r		762615	1					
ANR	762623	IdentifierDeclType	int		762615	0					
ANR	762624	Identifier	r		762615	1					
ANR	762625	IdentifierDeclStatement	OnigCodePoint j ;	3761:2:83204:83219	762615	1	True				
ANR	762626	IdentifierDecl	j		762615	0					
ANR	762627	IdentifierDeclType	OnigCodePoint		762615	0					
ANR	762628	Identifier	j		762615	1					
ANR	762629	IdentifierDeclStatement	int n = ONIGENC_CODE_RANGE_NUM ( mbr ) ;	3763:2:83224:83259	762615	2	True				
ANR	762630	IdentifierDecl	n = ONIGENC_CODE_RANGE_NUM ( mbr )		762615	0					
ANR	762631	IdentifierDeclType	int		762615	0					
ANR	762632	Identifier	n		762615	1					
ANR	762633	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( mbr )		762615	2		=			
ANR	762634	Identifier	n		762615	0					
ANR	762635	CallExpression	ONIGENC_CODE_RANGE_NUM ( mbr )		762615	1					
ANR	762636	Callee	ONIGENC_CODE_RANGE_NUM		762615	0					
ANR	762637	Identifier	ONIGENC_CODE_RANGE_NUM		762615	0					
ANR	762638	ArgumentList	mbr		762615	1					
ANR	762639	Argument	mbr		762615	0					
ANR	762640	Identifier	mbr		762615	0					
ANR	762641	IfStatement	if ( not == 0 )		762615	3					
ANR	762642	Condition	not == 0	3765:6:83268:83275	762615	0	True				
ANR	762643	EqualityExpression	not == 0		762615	0		==			
ANR	762644	Identifier	not		762615	0					
ANR	762645	PrimaryExpression	0		762615	1					
ANR	762646	CompoundStatement		7:16:89:89	762615	1					
ANR	762647	ForStatement	for ( i = 0 ; i < n ; i ++ )		762615	0					
ANR	762648	ForInit	i = 0 ;	3766:9:83289:83294	762615	0	True				
ANR	762649	AssignmentExpression	i = 0		762615	0		=			
ANR	762650	Identifier	i		762615	0					
ANR	762651	PrimaryExpression	0		762615	1					
ANR	762652	Condition	i < n	3766:16:83296:83300	762615	1	True				
ANR	762653	RelationalExpression	i < n		762615	0		<			
ANR	762654	Identifier	i		762615	0					
ANR	762655	Identifier	n		762615	1					
ANR	762656	PostIncDecOperationExpression	i ++	3766:23:83303:83305	762615	2	True				
ANR	762657	Identifier	i		762615	0					
ANR	762658	IncDec	++		762615	1					
ANR	762659	CompoundStatement		8:28:119:119	762615	3					
ANR	762660	ForStatement	"for ( j = ONIGENC_CODE_RANGE_FROM ( mbr , i ) ; j <= ONIGENC_CODE_RANGE_TO ( mbr , i ) ; j ++ )"		762615	0					
ANR	762661	ForInit	"j = ONIGENC_CODE_RANGE_FROM ( mbr , i ) ;"	3767:11:83321:83357	762615	0	True				
ANR	762662	AssignmentExpression	"j = ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	0		=			
ANR	762663	Identifier	j		762615	0					
ANR	762664	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	1					
ANR	762665	Callee	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762666	Identifier	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762667	ArgumentList	mbr		762615	1					
ANR	762668	Argument	mbr		762615	0					
ANR	762669	Identifier	mbr		762615	0					
ANR	762670	Argument	i		762615	1					
ANR	762671	Identifier	i		762615	0					
ANR	762672	Condition	"j <= ONIGENC_CODE_RANGE_TO ( mbr , i )"	3768:11:83370:83403	762615	1	True				
ANR	762673	RelationalExpression	"j <= ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	0		<=			
ANR	762674	Identifier	j		762615	0					
ANR	762675	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	1					
ANR	762676	Callee	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762677	Identifier	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762678	ArgumentList	mbr		762615	1					
ANR	762679	Argument	mbr		762615	0					
ANR	762680	Identifier	mbr		762615	0					
ANR	762681	Argument	i		762615	1					
ANR	762682	Identifier	i		762615	0					
ANR	762683	PostIncDecOperationExpression	j ++	3768:47:83406:83408	762615	2	True				
ANR	762684	Identifier	j		762615	0					
ANR	762685	IncDec	++		762615	1					
ANR	762686	CompoundStatement		10:52:222:222	762615	3					
ANR	762687	IfStatement	if ( j >= sb_out )		762615	0					
ANR	762688	Condition	j >= sb_out	3769:5:83418:83428	762615	0	True				
ANR	762689	RelationalExpression	j >= sb_out		762615	0		>=			
ANR	762690	Identifier	j		762615	0					
ANR	762691	Identifier	sb_out		762615	1					
ANR	762692	CompoundStatement		11:18:242:242	762615	1					
ANR	762693	IfStatement	"if ( j == ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		762615	0					
ANR	762694	Condition	"j == ONIGENC_CODE_RANGE_TO ( mbr , i )"	3770:7:83440:83473	762615	0	True				
ANR	762695	EqualityExpression	"j == ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	0		==			
ANR	762696	Identifier	j		762615	0					
ANR	762697	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	1					
ANR	762698	Callee	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762699	Identifier	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762700	ArgumentList	mbr		762615	1					
ANR	762701	Argument	mbr		762615	0					
ANR	762702	Identifier	mbr		762615	0					
ANR	762703	Argument	i		762615	1					
ANR	762704	Identifier	i		762615	0					
ANR	762705	ExpressionStatement	i ++	3770:43:83476:83479	762615	1	True				
ANR	762706	PostIncDecOperationExpression	i ++		762615	0					
ANR	762707	Identifier	i		762615	0					
ANR	762708	IncDec	++		762615	1					
ANR	762709	ElseStatement	else		762615	0					
ANR	762710	IfStatement	"if ( j > ONIGENC_CODE_RANGE_FROM ( mbr , i ) )"		762615	0					
ANR	762711	Condition	"j > ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3771:12:83493:83527	762615	0	True				
ANR	762712	RelationalExpression	"j > ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	0		>			
ANR	762713	Identifier	j		762615	0					
ANR	762714	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	1					
ANR	762715	Callee	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762716	Identifier	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762717	ArgumentList	mbr		762615	1					
ANR	762718	Argument	mbr		762615	0					
ANR	762719	Identifier	mbr		762615	0					
ANR	762720	Argument	i		762615	1					
ANR	762721	Identifier	i		762615	0					
ANR	762722	CompoundStatement		13:49:341:341	762615	1					
ANR	762723	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"	3772:5:83537:83619	762615	0	True				
ANR	762724	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		762615	0		=			
ANR	762725	Identifier	r		762615	0					
ANR	762726	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		762615	1					
ANR	762727	Callee	add_code_range_to_buf		762615	0					
ANR	762728	Identifier	add_code_range_to_buf		762615	0					
ANR	762729	ArgumentList	& ( cc -> mbuf )		762615	1					
ANR	762730	Argument	& ( cc -> mbuf )		762615	0					
ANR	762731	UnaryOperationExpression	& ( cc -> mbuf )		762615	0					
ANR	762732	UnaryOperator	&		762615	0					
ANR	762733	PtrMemberAccess	cc -> mbuf		762615	1					
ANR	762734	Identifier	cc		762615	0					
ANR	762735	Identifier	mbuf		762615	1					
ANR	762736	Argument	j		762615	1					
ANR	762737	Identifier	j		762615	0					
ANR	762738	Argument	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	2					
ANR	762739	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	0					
ANR	762740	Callee	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762741	Identifier	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762742	ArgumentList	mbr		762615	1					
ANR	762743	Argument	mbr		762615	0					
ANR	762744	Identifier	mbr		762615	0					
ANR	762745	Argument	i		762615	1					
ANR	762746	Identifier	i		762615	0					
ANR	762747	IfStatement	if ( r != 0 )		762615	1					
ANR	762748	Condition	r != 0	3774:9:83630:83635	762615	0	True				
ANR	762749	EqualityExpression	r != 0		762615	0		!=			
ANR	762750	Identifier	r		762615	0					
ANR	762751	PrimaryExpression	0		762615	1					
ANR	762752	ReturnStatement	return r ;	3774:17:83638:83646	762615	1	True				
ANR	762753	Identifier	r		762615	0					
ANR	762754	ExpressionStatement	i ++	3775:5:83653:83656	762615	2	True				
ANR	762755	PostIncDecOperationExpression	i ++		762615	0					
ANR	762756	Identifier	i		762615	0					
ANR	762757	IncDec	++		762615	1					
ANR	762758	GotoStatement	goto sb_end ;	3778:3:83667:83678	762615	1	True				
ANR	762759	Identifier	sb_end		762615	0					
ANR	762760	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3780:8:83691:83716	762615	1	True				
ANR	762761	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		762615	0					
ANR	762762	Callee	BITSET_SET_BIT		762615	0					
ANR	762763	Identifier	BITSET_SET_BIT		762615	0					
ANR	762764	ArgumentList	cc -> bs		762615	1					
ANR	762765	Argument	cc -> bs		762615	0					
ANR	762766	PtrMemberAccess	cc -> bs		762615	0					
ANR	762767	Identifier	cc		762615	0					
ANR	762768	Identifier	bs		762615	1					
ANR	762769	Argument	j		762615	1					
ANR	762770	Identifier	j		762615	0					
ANR	762771	Label	sb_end :	3784:2:83735:83741	762615	1	True				
ANR	762772	Identifier	sb_end		762615	0					
ANR	762773	ForStatement	for ( ; i < n ; i ++ )		762615	2					
ANR	762774	Condition	i < n	3785:12:83755:83759	762615	0	True				
ANR	762775	RelationalExpression	i < n		762615	0		<			
ANR	762776	Identifier	i		762615	0					
ANR	762777	Identifier	n		762615	1					
ANR	762778	PostIncDecOperationExpression	i ++	3785:19:83762:83764	762615	1	True				
ANR	762779	Identifier	i		762615	0					
ANR	762780	IncDec	++		762615	1					
ANR	762781	CompoundStatement		27:24:578:578	762615	2					
ANR	762782	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"	3786:6:83775:83941	762615	0	True				
ANR	762783	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		762615	0		=			
ANR	762784	Identifier	r		762615	0					
ANR	762785	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		762615	1					
ANR	762786	Callee	add_code_range_to_buf		762615	0					
ANR	762787	Identifier	add_code_range_to_buf		762615	0					
ANR	762788	ArgumentList	& ( cc -> mbuf )		762615	1					
ANR	762789	Argument	& ( cc -> mbuf )		762615	0					
ANR	762790	UnaryOperationExpression	& ( cc -> mbuf )		762615	0					
ANR	762791	UnaryOperator	&		762615	0					
ANR	762792	PtrMemberAccess	cc -> mbuf		762615	1					
ANR	762793	Identifier	cc		762615	0					
ANR	762794	Identifier	mbuf		762615	1					
ANR	762795	Argument	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	1					
ANR	762796	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	0					
ANR	762797	Callee	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762798	Identifier	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762799	ArgumentList	mbr		762615	1					
ANR	762800	Argument	mbr		762615	0					
ANR	762801	Identifier	mbr		762615	0					
ANR	762802	Argument	i		762615	1					
ANR	762803	Identifier	i		762615	0					
ANR	762804	Argument	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	2					
ANR	762805	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	0					
ANR	762806	Callee	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762807	Identifier	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762808	ArgumentList	mbr		762615	1					
ANR	762809	Argument	mbr		762615	0					
ANR	762810	Identifier	mbr		762615	0					
ANR	762811	Argument	i		762615	1					
ANR	762812	Identifier	i		762615	0					
ANR	762813	IfStatement	if ( r != 0 )		762615	1					
ANR	762814	Condition	r != 0	3789:10:83953:83958	762615	0	True				
ANR	762815	EqualityExpression	r != 0		762615	0		!=			
ANR	762816	Identifier	r		762615	0					
ANR	762817	PrimaryExpression	0		762615	1					
ANR	762818	ReturnStatement	return r ;	3789:18:83961:83969	762615	1	True				
ANR	762819	Identifier	r		762615	0					
ANR	762820	ElseStatement	else		762615	0					
ANR	762821	CompoundStatement		35:4:805:827	762615	0					
ANR	762822	IdentifierDeclStatement	OnigCodePoint prev = 0 ;	3793:4:83994:84016	762615	0	True				
ANR	762823	IdentifierDecl	prev = 0		762615	0					
ANR	762824	IdentifierDeclType	OnigCodePoint		762615	0					
ANR	762825	Identifier	prev		762615	1					
ANR	762826	AssignmentExpression	prev = 0		762615	2		=			
ANR	762827	Identifier	prev		762615	0					
ANR	762828	PrimaryExpression	0		762615	1					
ANR	762829	ForStatement	for ( i = 0 ; i < n ; i ++ )		762615	1					
ANR	762830	ForInit	i = 0 ;	3795:9:84028:84033	762615	0	True				
ANR	762831	AssignmentExpression	i = 0		762615	0		=			
ANR	762832	Identifier	i		762615	0					
ANR	762833	PrimaryExpression	0		762615	1					
ANR	762834	Condition	i < n	3795:16:84035:84039	762615	1	True				
ANR	762835	RelationalExpression	i < n		762615	0		<			
ANR	762836	Identifier	i		762615	0					
ANR	762837	Identifier	n		762615	1					
ANR	762838	PostIncDecOperationExpression	i ++	3795:23:84042:84044	762615	2	True				
ANR	762839	Identifier	i		762615	0					
ANR	762840	IncDec	++		762615	1					
ANR	762841	CompoundStatement		37:28:858:858	762615	3					
ANR	762842	ForStatement	"for ( j = prev ; j < ONIGENC_CODE_RANGE_FROM ( mbr , i ) ; j ++ )"		762615	0					
ANR	762843	ForInit	j = prev ;	3796:11:84060:84068	762615	0	True				
ANR	762844	AssignmentExpression	j = prev		762615	0		=			
ANR	762845	Identifier	j		762615	0					
ANR	762846	Identifier	prev		762615	1					
ANR	762847	Condition	"j < ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3797:4:84074:84108	762615	1	True				
ANR	762848	RelationalExpression	"j < ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	0		<			
ANR	762849	Identifier	j		762615	0					
ANR	762850	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	1					
ANR	762851	Callee	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762852	Identifier	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762853	ArgumentList	mbr		762615	1					
ANR	762854	Argument	mbr		762615	0					
ANR	762855	Identifier	mbr		762615	0					
ANR	762856	Argument	i		762615	1					
ANR	762857	Identifier	i		762615	0					
ANR	762858	PostIncDecOperationExpression	j ++	3797:41:84111:84113	762615	2	True				
ANR	762859	Identifier	j		762615	0					
ANR	762860	IncDec	++		762615	1					
ANR	762861	CompoundStatement		39:46:927:927	762615	3					
ANR	762862	IfStatement	if ( j >= sb_out )		762615	0					
ANR	762863	Condition	j >= sb_out	3798:5:84123:84133	762615	0	True				
ANR	762864	RelationalExpression	j >= sb_out		762615	0		>=			
ANR	762865	Identifier	j		762615	0					
ANR	762866	Identifier	sb_out		762615	1					
ANR	762867	CompoundStatement		40:18:947:947	762615	1					
ANR	762868	GotoStatement	goto sb_end2 ;	3799:3:84141:84153	762615	0	True				
ANR	762869	Identifier	sb_end2		762615	0					
ANR	762870	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3801:1:84159:84184	762615	1	True				
ANR	762871	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		762615	0					
ANR	762872	Callee	BITSET_SET_BIT		762615	0					
ANR	762873	Identifier	BITSET_SET_BIT		762615	0					
ANR	762874	ArgumentList	cc -> bs		762615	1					
ANR	762875	Argument	cc -> bs		762615	0					
ANR	762876	PtrMemberAccess	cc -> bs		762615	0					
ANR	762877	Identifier	cc		762615	0					
ANR	762878	Identifier	bs		762615	1					
ANR	762879	Argument	j		762615	1					
ANR	762880	Identifier	j		762615	0					
ANR	762881	ExpressionStatement	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"	3803:6:84200:84240	762615	1	True				
ANR	762882	AssignmentExpression	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		762615	0		=			
ANR	762883	Identifier	prev		762615	0					
ANR	762884	AdditiveExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		762615	1		+			
ANR	762885	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	0					
ANR	762886	Callee	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762887	Identifier	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762888	ArgumentList	mbr		762615	1					
ANR	762889	Argument	mbr		762615	0					
ANR	762890	Identifier	mbr		762615	0					
ANR	762891	Argument	i		762615	1					
ANR	762892	Identifier	i		762615	0					
ANR	762893	PrimaryExpression	1		762615	1					
ANR	762894	ForStatement	for ( j = prev ; j < sb_out ; j ++ )		762615	2					
ANR	762895	ForInit	j = prev ;	3805:9:84257:84265	762615	0	True				
ANR	762896	AssignmentExpression	j = prev		762615	0		=			
ANR	762897	Identifier	j		762615	0					
ANR	762898	Identifier	prev		762615	1					
ANR	762899	Condition	j < sb_out	3805:19:84267:84276	762615	1	True				
ANR	762900	RelationalExpression	j < sb_out		762615	0		<			
ANR	762901	Identifier	j		762615	0					
ANR	762902	Identifier	sb_out		762615	1					
ANR	762903	PostIncDecOperationExpression	j ++	3805:31:84279:84281	762615	2	True				
ANR	762904	Identifier	j		762615	0					
ANR	762905	IncDec	++		762615	1					
ANR	762906	CompoundStatement		47:36:1095:1095	762615	3					
ANR	762907	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3806:6:84292:84317	762615	0	True				
ANR	762908	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		762615	0					
ANR	762909	Callee	BITSET_SET_BIT		762615	0					
ANR	762910	Identifier	BITSET_SET_BIT		762615	0					
ANR	762911	ArgumentList	cc -> bs		762615	1					
ANR	762912	Argument	cc -> bs		762615	0					
ANR	762913	PtrMemberAccess	cc -> bs		762615	0					
ANR	762914	Identifier	cc		762615	0					
ANR	762915	Identifier	bs		762615	1					
ANR	762916	Argument	j		762615	1					
ANR	762917	Identifier	j		762615	0					
ANR	762918	Label	sb_end2 :	3809:2:84328:84335	762615	3	True				
ANR	762919	Identifier	sb_end2		762615	0					
ANR	762920	ExpressionStatement	prev = sb_out	3810:4:84341:84354	762615	4	True				
ANR	762921	AssignmentExpression	prev = sb_out		762615	0		=			
ANR	762922	Identifier	prev		762615	0					
ANR	762923	Identifier	sb_out		762615	1					
ANR	762924	ForStatement	for ( i = 0 ; i < n ; i ++ )		762615	5					
ANR	762925	ForInit	i = 0 ;	3812:9:84366:84371	762615	0	True				
ANR	762926	AssignmentExpression	i = 0		762615	0		=			
ANR	762927	Identifier	i		762615	0					
ANR	762928	PrimaryExpression	0		762615	1					
ANR	762929	Condition	i < n	3812:16:84373:84377	762615	1	True				
ANR	762930	RelationalExpression	i < n		762615	0		<			
ANR	762931	Identifier	i		762615	0					
ANR	762932	Identifier	n		762615	1					
ANR	762933	PostIncDecOperationExpression	i ++	3812:23:84380:84382	762615	2	True				
ANR	762934	Identifier	i		762615	0					
ANR	762935	IncDec	++		762615	1					
ANR	762936	CompoundStatement		54:28:1196:1196	762615	3					
ANR	762937	IfStatement	"if ( prev < ONIGENC_CODE_RANGE_FROM ( mbr , i ) )"		762615	0					
ANR	762938	Condition	"prev < ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3813:10:84397:84434	762615	0	True				
ANR	762939	RelationalExpression	"prev < ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	0		<			
ANR	762940	Identifier	prev		762615	0					
ANR	762941	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	1					
ANR	762942	Callee	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762943	Identifier	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762944	ArgumentList	mbr		762615	1					
ANR	762945	Argument	mbr		762615	0					
ANR	762946	Identifier	mbr		762615	0					
ANR	762947	Argument	i		762615	1					
ANR	762948	Identifier	i		762615	0					
ANR	762949	CompoundStatement		55:50:1248:1248	762615	1					
ANR	762950	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"	3814:1:84440:84555	762615	0	True				
ANR	762951	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"		762615	0		=			
ANR	762952	Identifier	r		762615	0					
ANR	762953	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"		762615	1					
ANR	762954	Callee	add_code_range_to_buf		762615	0					
ANR	762955	Identifier	add_code_range_to_buf		762615	0					
ANR	762956	ArgumentList	& ( cc -> mbuf )		762615	1					
ANR	762957	Argument	& ( cc -> mbuf )		762615	0					
ANR	762958	UnaryOperationExpression	& ( cc -> mbuf )		762615	0					
ANR	762959	UnaryOperator	&		762615	0					
ANR	762960	PtrMemberAccess	cc -> mbuf		762615	1					
ANR	762961	Identifier	cc		762615	0					
ANR	762962	Identifier	mbuf		762615	1					
ANR	762963	Argument	prev		762615	1					
ANR	762964	Identifier	prev		762615	0					
ANR	762965	Argument	"ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1"		762615	2					
ANR	762966	AdditiveExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1"		762615	0		-			
ANR	762967	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		762615	0					
ANR	762968	Callee	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762969	Identifier	ONIGENC_CODE_RANGE_FROM		762615	0					
ANR	762970	ArgumentList	mbr		762615	1					
ANR	762971	Argument	mbr		762615	0					
ANR	762972	Identifier	mbr		762615	0					
ANR	762973	Argument	i		762615	1					
ANR	762974	Identifier	i		762615	0					
ANR	762975	PrimaryExpression	1		762615	1					
ANR	762976	IfStatement	if ( r != 0 )		762615	1					
ANR	762977	Condition	r != 0	3816:5:84562:84567	762615	0	True				
ANR	762978	EqualityExpression	r != 0		762615	0		!=			
ANR	762979	Identifier	r		762615	0					
ANR	762980	PrimaryExpression	0		762615	1					
ANR	762981	ReturnStatement	return r ;	3816:13:84570:84578	762615	1	True				
ANR	762982	Identifier	r		762615	0					
ANR	762983	ExpressionStatement	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"	3818:6:84594:84634	762615	1	True				
ANR	762984	AssignmentExpression	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		762615	0		=			
ANR	762985	Identifier	prev		762615	0					
ANR	762986	AdditiveExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		762615	1		+			
ANR	762987	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		762615	0					
ANR	762988	Callee	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762989	Identifier	ONIGENC_CODE_RANGE_TO		762615	0					
ANR	762990	ArgumentList	mbr		762615	1					
ANR	762991	Argument	mbr		762615	0					
ANR	762992	Identifier	mbr		762615	0					
ANR	762993	Argument	i		762615	1					
ANR	762994	Identifier	i		762615	0					
ANR	762995	PrimaryExpression	1		762615	1					
ANR	762996	IfStatement	if ( prev < 0x7fffffff )		762615	6					
ANR	762997	Condition	prev < 0x7fffffff	3820:8:84650:84666	762615	0	True				
ANR	762998	RelationalExpression	prev < 0x7fffffff		762615	0		<			
ANR	762999	Identifier	prev		762615	0					
ANR	763000	PrimaryExpression	0x7fffffff		762615	1					
ANR	763001	CompoundStatement		62:27:1480:1480	762615	1					
ANR	763002	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"	3821:6:84677:84733	762615	0	True				
ANR	763003	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"		762615	0		=			
ANR	763004	Identifier	r		762615	0					
ANR	763005	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"		762615	1					
ANR	763006	Callee	add_code_range_to_buf		762615	0					
ANR	763007	Identifier	add_code_range_to_buf		762615	0					
ANR	763008	ArgumentList	& ( cc -> mbuf )		762615	1					
ANR	763009	Argument	& ( cc -> mbuf )		762615	0					
ANR	763010	UnaryOperationExpression	& ( cc -> mbuf )		762615	0					
ANR	763011	UnaryOperator	&		762615	0					
ANR	763012	PtrMemberAccess	cc -> mbuf		762615	1					
ANR	763013	Identifier	cc		762615	0					
ANR	763014	Identifier	mbuf		762615	1					
ANR	763015	Argument	prev		762615	1					
ANR	763016	Identifier	prev		762615	0					
ANR	763017	Argument	0x7fffffff		762615	2					
ANR	763018	PrimaryExpression	0x7fffffff		762615	0					
ANR	763019	IfStatement	if ( r != 0 )		762615	1					
ANR	763020	Condition	r != 0	3822:10:84745:84750	762615	0	True				
ANR	763021	EqualityExpression	r != 0		762615	0		!=			
ANR	763022	Identifier	r		762615	0					
ANR	763023	PrimaryExpression	0		762615	1					
ANR	763024	ReturnStatement	return r ;	3822:18:84753:84761	762615	1	True				
ANR	763025	Identifier	r		762615	0					
ANR	763026	ReturnStatement	return 0 ;	3826:2:84776:84784	762615	4	True				
ANR	763027	PrimaryExpression	0		762615	0					
ANR	763028	ReturnType	static int		762615	1					
ANR	763029	Identifier	add_ctype_to_cc_by_range		762615	2					
ANR	763030	ParameterList	"CClassNode * cc , int ctype ARG_UNUSED , int not , OnigEncoding enc ARG_UNUSED , OnigCodePoint sb_out , const OnigCodePoint mbr [ ]"		762615	3					
ANR	763031	Parameter	CClassNode * cc	3756:25:83034:83047	762615	0	True				
ANR	763032	ParameterType	CClassNode *		762615	0					
ANR	763033	Identifier	cc		762615	1					
ANR	763034	Parameter	int ctype ARG_UNUSED	3756:41:83050:83069	762615	1	True				
ANR	763035	ParameterType	int ctype		762615	0					
ANR	763036	Identifier	ARG_UNUSED		762615	1					
ANR	763037	Parameter	int not	3756:63:83072:83078	762615	2	True				
ANR	763038	ParameterType	int		762615	0					
ANR	763039	Identifier	not		762615	1					
ANR	763040	Parameter	OnigEncoding enc ARG_UNUSED	3757:4:83085:83111	762615	3	True				
ANR	763041	ParameterType	OnigEncoding enc		762615	0					
ANR	763042	Identifier	ARG_UNUSED		762615	1					
ANR	763043	Parameter	OnigCodePoint sb_out	3758:25:83139:83158	762615	4	True				
ANR	763044	ParameterType	OnigCodePoint		762615	0					
ANR	763045	Identifier	sb_out		762615	1					
ANR	763046	Parameter	const OnigCodePoint mbr [ ]	3758:47:83161:83185	762615	5	True				
ANR	763047	ParameterType	const OnigCodePoint [ ]		762615	0					
ANR	763048	Identifier	mbr		762615	1					
ANR	763049	CFGEntryNode	ENTRY		762615		True				
ANR	763050	CFGExitNode	EXIT		762615		True				
ANR	763051	Symbol	cc		762615						
ANR	763052	Symbol	ONIGENC_CODE_RANGE_TO		762615						
ANR	763053	Symbol	* cc		762615						
ANR	763054	Symbol	prev		762615						
ANR	763055	Symbol	i		762615						
ANR	763056	Symbol	j		762615						
ANR	763057	Symbol	ARG_UNUSED		762615						
ANR	763058	Symbol	n		762615						
ANR	763059	Symbol	cc -> bs		762615						
ANR	763060	Symbol	sb_out		762615						
ANR	763061	Symbol	not		762615						
ANR	763062	Symbol	r		762615						
ANR	763063	Symbol	ONIGENC_CODE_RANGE_NUM		762615						
ANR	763064	Symbol	ONIGENC_CODE_RANGE_FROM		762615						
ANR	763065	Symbol	add_code_range_to_buf		762615						
ANR	763066	Symbol	mbr		762615						
ANR	763067	Symbol	& cc -> mbuf		762615						
ANR	763068	Function	add_ctype_to_cc	3829:0:84789:86886							
ANR	763069	FunctionDef	"add_ctype_to_cc (CClassNode * cc , int ctype , int not , ScanEnv * env)"		763068	0					
ANR	763070	CompoundStatement		3831:0:84866:86886	763068	0					
ANR	763071	IdentifierDeclStatement	"int c , r ;"	3832:2:84870:84878	763068	0	True				
ANR	763072	IdentifierDecl	c		763068	0					
ANR	763073	IdentifierDeclType	int		763068	0					
ANR	763074	Identifier	c		763068	1					
ANR	763075	IdentifierDecl	r		763068	1					
ANR	763076	IdentifierDeclType	int		763068	0					
ANR	763077	Identifier	r		763068	1					
ANR	763078	IdentifierDeclStatement	const OnigCodePoint * ranges ;	3833:2:84882:84909	763068	1	True				
ANR	763079	IdentifierDecl	* ranges		763068	0					
ANR	763080	IdentifierDeclType	const OnigCodePoint *		763068	0					
ANR	763081	Identifier	ranges		763068	1					
ANR	763082	IdentifierDeclStatement	OnigCodePoint sb_out ;	3834:2:84913:84933	763068	2	True				
ANR	763083	IdentifierDecl	sb_out		763068	0					
ANR	763084	IdentifierDeclType	OnigCodePoint		763068	0					
ANR	763085	Identifier	sb_out		763068	1					
ANR	763086	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3835:2:84937:84964	763068	3	True				
ANR	763087	IdentifierDecl	enc = env -> enc		763068	0					
ANR	763088	IdentifierDeclType	OnigEncoding		763068	0					
ANR	763089	Identifier	enc		763068	1					
ANR	763090	AssignmentExpression	enc = env -> enc		763068	2		=			
ANR	763091	Identifier	enc		763068	0					
ANR	763092	PtrMemberAccess	env -> enc		763068	1					
ANR	763093	Identifier	env		763068	0					
ANR	763094	Identifier	enc		763068	1					
ANR	763095	ExpressionStatement	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"	3837:2:84969:85031	763068	4	True				
ANR	763096	AssignmentExpression	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"		763068	0		=			
ANR	763097	Identifier	r		763068	0					
ANR	763098	CallExpression	"ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"		763068	1					
ANR	763099	Callee	ONIGENC_GET_CTYPE_CODE_RANGE		763068	0					
ANR	763100	Identifier	ONIGENC_GET_CTYPE_CODE_RANGE		763068	0					
ANR	763101	ArgumentList	enc		763068	1					
ANR	763102	Argument	enc		763068	0					
ANR	763103	Identifier	enc		763068	0					
ANR	763104	Argument	ctype		763068	1					
ANR	763105	Identifier	ctype		763068	0					
ANR	763106	Argument	& sb_out		763068	2					
ANR	763107	UnaryOperationExpression	& sb_out		763068	0					
ANR	763108	UnaryOperator	&		763068	0					
ANR	763109	Identifier	sb_out		763068	1					
ANR	763110	Argument	& ranges		763068	3					
ANR	763111	UnaryOperationExpression	& ranges		763068	0					
ANR	763112	UnaryOperator	&		763068	0					
ANR	763113	Identifier	ranges		763068	1					
ANR	763114	IfStatement	if ( r == 0 )		763068	5					
ANR	763115	Condition	r == 0	3838:6:85039:85044	763068	0	True				
ANR	763116	EqualityExpression	r == 0		763068	0		==			
ANR	763117	Identifier	r		763068	0					
ANR	763118	PrimaryExpression	0		763068	1					
ANR	763119	CompoundStatement		8:14:180:180	763068	1					
ANR	763120	ReturnStatement	"return add_ctype_to_cc_by_range ( cc , ctype , not , env -> enc , sb_out , ranges ) ;"	3839:4:85053:85126	763068	0	True				
ANR	763121	CallExpression	"add_ctype_to_cc_by_range ( cc , ctype , not , env -> enc , sb_out , ranges )"		763068	0					
ANR	763122	Callee	add_ctype_to_cc_by_range		763068	0					
ANR	763123	Identifier	add_ctype_to_cc_by_range		763068	0					
ANR	763124	ArgumentList	cc		763068	1					
ANR	763125	Argument	cc		763068	0					
ANR	763126	Identifier	cc		763068	0					
ANR	763127	Argument	ctype		763068	1					
ANR	763128	Identifier	ctype		763068	0					
ANR	763129	Argument	not		763068	2					
ANR	763130	Identifier	not		763068	0					
ANR	763131	Argument	env -> enc		763068	3					
ANR	763132	PtrMemberAccess	env -> enc		763068	0					
ANR	763133	Identifier	env		763068	0					
ANR	763134	Identifier	enc		763068	1					
ANR	763135	Argument	sb_out		763068	4					
ANR	763136	Identifier	sb_out		763068	0					
ANR	763137	Argument	ranges		763068	5					
ANR	763138	Identifier	ranges		763068	0					
ANR	763139	ElseStatement	else		763068	0					
ANR	763140	IfStatement	if ( r != ONIG_NO_SUPPORT_CONFIG )		763068	0					
ANR	763141	Condition	r != ONIG_NO_SUPPORT_CONFIG	3841:11:85143:85169	763068	0	True				
ANR	763142	EqualityExpression	r != ONIG_NO_SUPPORT_CONFIG		763068	0		!=			
ANR	763143	Identifier	r		763068	0					
ANR	763144	Identifier	ONIG_NO_SUPPORT_CONFIG		763068	1					
ANR	763145	CompoundStatement		11:40:305:305	763068	1					
ANR	763146	ReturnStatement	return r ;	3842:4:85178:85186	763068	0	True				
ANR	763147	Identifier	r		763068	0					
ANR	763148	ExpressionStatement	r = 0	3845:2:85195:85200	763068	6	True				
ANR	763149	AssignmentExpression	r = 0		763068	0		=			
ANR	763150	Identifier	r		763068	0					
ANR	763151	PrimaryExpression	0		763068	1					
ANR	763152	SwitchStatement	switch ( ctype )		763068	7					
ANR	763153	Condition	ctype	3846:10:85212:85216	763068	0	True				
ANR	763154	Identifier	ctype		763068	0					
ANR	763155	CompoundStatement		16:17:352:352	763068	1					
ANR	763156	Label	case ONIGENC_CTYPE_ALPHA :	3847:2:85223:85247	763068	0	True				
ANR	763157	Identifier	ONIGENC_CTYPE_ALPHA		763068	0					
ANR	763158	Label	case ONIGENC_CTYPE_BLANK :	3848:2:85251:85275	763068	1	True				
ANR	763159	Identifier	ONIGENC_CTYPE_BLANK		763068	0					
ANR	763160	Label	case ONIGENC_CTYPE_CNTRL :	3849:2:85279:85303	763068	2	True				
ANR	763161	Identifier	ONIGENC_CTYPE_CNTRL		763068	0					
ANR	763162	Label	case ONIGENC_CTYPE_DIGIT :	3850:2:85307:85331	763068	3	True				
ANR	763163	Identifier	ONIGENC_CTYPE_DIGIT		763068	0					
ANR	763164	Label	case ONIGENC_CTYPE_LOWER :	3851:2:85335:85359	763068	4	True				
ANR	763165	Identifier	ONIGENC_CTYPE_LOWER		763068	0					
ANR	763166	Label	case ONIGENC_CTYPE_PUNCT :	3852:2:85363:85387	763068	5	True				
ANR	763167	Identifier	ONIGENC_CTYPE_PUNCT		763068	0					
ANR	763168	Label	case ONIGENC_CTYPE_SPACE :	3853:2:85391:85415	763068	6	True				
ANR	763169	Identifier	ONIGENC_CTYPE_SPACE		763068	0					
ANR	763170	Label	case ONIGENC_CTYPE_UPPER :	3854:2:85419:85443	763068	7	True				
ANR	763171	Identifier	ONIGENC_CTYPE_UPPER		763068	0					
ANR	763172	Label	case ONIGENC_CTYPE_XDIGIT :	3855:2:85447:85472	763068	8	True				
ANR	763173	Identifier	ONIGENC_CTYPE_XDIGIT		763068	0					
ANR	763174	Label	case ONIGENC_CTYPE_ASCII :	3856:2:85476:85500	763068	9	True				
ANR	763175	Identifier	ONIGENC_CTYPE_ASCII		763068	0					
ANR	763176	Label	case ONIGENC_CTYPE_ALNUM :	3857:2:85504:85528	763068	10	True				
ANR	763177	Identifier	ONIGENC_CTYPE_ALNUM		763068	0					
ANR	763178	IfStatement	if ( not != 0 )		763068	11					
ANR	763179	Condition	not != 0	3858:8:85538:85545	763068	0	True				
ANR	763180	EqualityExpression	not != 0		763068	0		!=			
ANR	763181	Identifier	not		763068	0					
ANR	763182	PrimaryExpression	0		763068	1					
ANR	763183	CompoundStatement		28:18:681:681	763068	1					
ANR	763184	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		763068	0					
ANR	763185	ForInit	c = 0 ;	3859:11:85561:85566	763068	0	True				
ANR	763186	AssignmentExpression	c = 0		763068	0		=			
ANR	763187	Identifier	c		763068	0					
ANR	763188	PrimaryExpression	0		763068	1					
ANR	763189	Condition	c < SINGLE_BYTE_SIZE	3859:18:85568:85587	763068	1	True				
ANR	763190	RelationalExpression	c < SINGLE_BYTE_SIZE		763068	0		<			
ANR	763191	Identifier	c		763068	0					
ANR	763192	Identifier	SINGLE_BYTE_SIZE		763068	1					
ANR	763193	PostIncDecOperationExpression	c ++	3859:40:85590:85592	763068	2	True				
ANR	763194	Identifier	c		763068	0					
ANR	763195	IncDec	++		763068	1					
ANR	763196	CompoundStatement		29:45:728:728	763068	3					
ANR	763197	IfStatement	"if ( ! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		763068	0					
ANR	763198	Condition	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3860:5:85602:85655	763068	0	True				
ANR	763199	UnaryOperationExpression	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		763068	0					
ANR	763200	UnaryOperator	!		763068	0					
ANR	763201	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		763068	1					
ANR	763202	Callee	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763203	Identifier	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763204	ArgumentList	enc		763068	1					
ANR	763205	Argument	enc		763068	0					
ANR	763206	Identifier	enc		763068	0					
ANR	763207	Argument	( OnigCodePoint ) c		763068	1					
ANR	763208	CastExpression	( OnigCodePoint ) c		763068	0					
ANR	763209	CastTarget	OnigCodePoint		763068	0					
ANR	763210	Identifier	c		763068	1					
ANR	763211	Argument	ctype		763068	2					
ANR	763212	Identifier	ctype		763068	0					
ANR	763213	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3861:3:85661:85686	763068	1	True				
ANR	763214	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		763068	0					
ANR	763215	Callee	BITSET_SET_BIT		763068	0					
ANR	763216	Identifier	BITSET_SET_BIT		763068	0					
ANR	763217	ArgumentList	cc -> bs		763068	1					
ANR	763218	Argument	cc -> bs		763068	0					
ANR	763219	PtrMemberAccess	cc -> bs		763068	0					
ANR	763220	Identifier	cc		763068	0					
ANR	763221	Identifier	bs		763068	1					
ANR	763222	Argument	c		763068	1					
ANR	763223	Identifier	c		763068	0					
ANR	763224	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3863:6:85702:85741	763068	1	True				
ANR	763225	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		763068	0					
ANR	763226	Callee	ADD_ALL_MULTI_BYTE_RANGE		763068	0					
ANR	763227	Identifier	ADD_ALL_MULTI_BYTE_RANGE		763068	0					
ANR	763228	ArgumentList	enc		763068	1					
ANR	763229	Argument	enc		763068	0					
ANR	763230	Identifier	enc		763068	0					
ANR	763231	Argument	cc -> mbuf		763068	1					
ANR	763232	PtrMemberAccess	cc -> mbuf		763068	0					
ANR	763233	Identifier	cc		763068	0					
ANR	763234	Identifier	mbuf		763068	1					
ANR	763235	ElseStatement	else		763068	0					
ANR	763236	CompoundStatement		35:9:891:891	763068	0					
ANR	763237	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		763068	0					
ANR	763238	ForInit	c = 0 ;	3866:11:85771:85776	763068	0	True				
ANR	763239	AssignmentExpression	c = 0		763068	0		=			
ANR	763240	Identifier	c		763068	0					
ANR	763241	PrimaryExpression	0		763068	1					
ANR	763242	Condition	c < SINGLE_BYTE_SIZE	3866:18:85778:85797	763068	1	True				
ANR	763243	RelationalExpression	c < SINGLE_BYTE_SIZE		763068	0		<			
ANR	763244	Identifier	c		763068	0					
ANR	763245	Identifier	SINGLE_BYTE_SIZE		763068	1					
ANR	763246	PostIncDecOperationExpression	c ++	3866:40:85800:85802	763068	2	True				
ANR	763247	Identifier	c		763068	0					
ANR	763248	IncDec	++		763068	1					
ANR	763249	CompoundStatement		36:45:938:938	763068	3					
ANR	763250	IfStatement	"if ( ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		763068	0					
ANR	763251	Condition	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3867:5:85812:85863	763068	0	True				
ANR	763252	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		763068	0					
ANR	763253	Callee	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763254	Identifier	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763255	ArgumentList	enc		763068	1					
ANR	763256	Argument	enc		763068	0					
ANR	763257	Identifier	enc		763068	0					
ANR	763258	Argument	( OnigCodePoint ) c		763068	1					
ANR	763259	CastExpression	( OnigCodePoint ) c		763068	0					
ANR	763260	CastTarget	OnigCodePoint		763068	0					
ANR	763261	Identifier	c		763068	1					
ANR	763262	Argument	ctype		763068	2					
ANR	763263	Identifier	ctype		763068	0					
ANR	763264	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3868:3:85869:85894	763068	1	True				
ANR	763265	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		763068	0					
ANR	763266	Callee	BITSET_SET_BIT		763068	0					
ANR	763267	Identifier	BITSET_SET_BIT		763068	0					
ANR	763268	ArgumentList	cc -> bs		763068	1					
ANR	763269	Argument	cc -> bs		763068	0					
ANR	763270	PtrMemberAccess	cc -> bs		763068	0					
ANR	763271	Identifier	cc		763068	0					
ANR	763272	Identifier	bs		763068	1					
ANR	763273	Argument	c		763068	1					
ANR	763274	Identifier	c		763068	0					
ANR	763275	BreakStatement	break ;	3871:4:85914:85919	763068	12	True				
ANR	763276	Label	case ONIGENC_CTYPE_GRAPH :	3873:2:85924:85948	763068	13	True				
ANR	763277	Identifier	ONIGENC_CTYPE_GRAPH		763068	0					
ANR	763278	Label	case ONIGENC_CTYPE_PRINT :	3874:2:85952:85976	763068	14	True				
ANR	763279	Identifier	ONIGENC_CTYPE_PRINT		763068	0					
ANR	763280	IfStatement	if ( not != 0 )		763068	15					
ANR	763281	Condition	not != 0	3875:8:85986:85993	763068	0	True				
ANR	763282	EqualityExpression	not != 0		763068	0		!=			
ANR	763283	Identifier	not		763068	0					
ANR	763284	PrimaryExpression	0		763068	1					
ANR	763285	CompoundStatement		45:18:1129:1129	763068	1					
ANR	763286	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		763068	0					
ANR	763287	ForInit	c = 0 ;	3876:11:86009:86014	763068	0	True				
ANR	763288	AssignmentExpression	c = 0		763068	0		=			
ANR	763289	Identifier	c		763068	0					
ANR	763290	PrimaryExpression	0		763068	1					
ANR	763291	Condition	c < SINGLE_BYTE_SIZE	3876:18:86016:86035	763068	1	True				
ANR	763292	RelationalExpression	c < SINGLE_BYTE_SIZE		763068	0		<			
ANR	763293	Identifier	c		763068	0					
ANR	763294	Identifier	SINGLE_BYTE_SIZE		763068	1					
ANR	763295	PostIncDecOperationExpression	c ++	3876:40:86038:86040	763068	2	True				
ANR	763296	Identifier	c		763068	0					
ANR	763297	IncDec	++		763068	1					
ANR	763298	CompoundStatement		46:45:1176:1176	763068	3					
ANR	763299	IfStatement	"if ( ! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		763068	0					
ANR	763300	Condition	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3877:5:86050:86103	763068	0	True				
ANR	763301	UnaryOperationExpression	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		763068	0					
ANR	763302	UnaryOperator	!		763068	0					
ANR	763303	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		763068	1					
ANR	763304	Callee	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763305	Identifier	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763306	ArgumentList	enc		763068	1					
ANR	763307	Argument	enc		763068	0					
ANR	763308	Identifier	enc		763068	0					
ANR	763309	Argument	( OnigCodePoint ) c		763068	1					
ANR	763310	CastExpression	( OnigCodePoint ) c		763068	0					
ANR	763311	CastTarget	OnigCodePoint		763068	0					
ANR	763312	Identifier	c		763068	1					
ANR	763313	Argument	ctype		763068	2					
ANR	763314	Identifier	ctype		763068	0					
ANR	763315	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3878:3:86109:86134	763068	1	True				
ANR	763316	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		763068	0					
ANR	763317	Callee	BITSET_SET_BIT		763068	0					
ANR	763318	Identifier	BITSET_SET_BIT		763068	0					
ANR	763319	ArgumentList	cc -> bs		763068	1					
ANR	763320	Argument	cc -> bs		763068	0					
ANR	763321	PtrMemberAccess	cc -> bs		763068	0					
ANR	763322	Identifier	cc		763068	0					
ANR	763323	Identifier	bs		763068	1					
ANR	763324	Argument	c		763068	1					
ANR	763325	Identifier	c		763068	0					
ANR	763326	ElseStatement	else		763068	0					
ANR	763327	CompoundStatement		51:9:1292:1292	763068	0					
ANR	763328	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		763068	0					
ANR	763329	ForInit	c = 0 ;	3882:11:86172:86177	763068	0	True				
ANR	763330	AssignmentExpression	c = 0		763068	0		=			
ANR	763331	Identifier	c		763068	0					
ANR	763332	PrimaryExpression	0		763068	1					
ANR	763333	Condition	c < SINGLE_BYTE_SIZE	3882:18:86179:86198	763068	1	True				
ANR	763334	RelationalExpression	c < SINGLE_BYTE_SIZE		763068	0		<			
ANR	763335	Identifier	c		763068	0					
ANR	763336	Identifier	SINGLE_BYTE_SIZE		763068	1					
ANR	763337	PostIncDecOperationExpression	c ++	3882:40:86201:86203	763068	2	True				
ANR	763338	Identifier	c		763068	0					
ANR	763339	IncDec	++		763068	1					
ANR	763340	CompoundStatement		52:45:1339:1339	763068	3					
ANR	763341	IfStatement	"if ( ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		763068	0					
ANR	763342	Condition	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3883:5:86213:86264	763068	0	True				
ANR	763343	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		763068	0					
ANR	763344	Callee	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763345	Identifier	ONIGENC_IS_CODE_CTYPE		763068	0					
ANR	763346	ArgumentList	enc		763068	1					
ANR	763347	Argument	enc		763068	0					
ANR	763348	Identifier	enc		763068	0					
ANR	763349	Argument	( OnigCodePoint ) c		763068	1					
ANR	763350	CastExpression	( OnigCodePoint ) c		763068	0					
ANR	763351	CastTarget	OnigCodePoint		763068	0					
ANR	763352	Identifier	c		763068	1					
ANR	763353	Argument	ctype		763068	2					
ANR	763354	Identifier	ctype		763068	0					
ANR	763355	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3884:3:86270:86295	763068	1	True				
ANR	763356	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		763068	0					
ANR	763357	Callee	BITSET_SET_BIT		763068	0					
ANR	763358	Identifier	BITSET_SET_BIT		763068	0					
ANR	763359	ArgumentList	cc -> bs		763068	1					
ANR	763360	Argument	cc -> bs		763068	0					
ANR	763361	PtrMemberAccess	cc -> bs		763068	0					
ANR	763362	Identifier	cc		763068	0					
ANR	763363	Identifier	bs		763068	1					
ANR	763364	Argument	c		763068	1					
ANR	763365	Identifier	c		763068	0					
ANR	763366	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3886:6:86311:86350	763068	1	True				
ANR	763367	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		763068	0					
ANR	763368	Callee	ADD_ALL_MULTI_BYTE_RANGE		763068	0					
ANR	763369	Identifier	ADD_ALL_MULTI_BYTE_RANGE		763068	0					
ANR	763370	ArgumentList	enc		763068	1					
ANR	763371	Argument	enc		763068	0					
ANR	763372	Identifier	enc		763068	0					
ANR	763373	Argument	cc -> mbuf		763068	1					
ANR	763374	PtrMemberAccess	cc -> mbuf		763068	0					
ANR	763375	Identifier	cc		763068	0					
ANR	763376	Identifier	mbuf		763068	1					
ANR	763377	BreakStatement	break ;	3888:4:86362:86367	763068	16	True				
ANR	763378	Label	case ONIGENC_CTYPE_WORD :	3890:2:86372:86395	763068	17	True				
ANR	763379	Identifier	ONIGENC_CTYPE_WORD		763068	0					
ANR	763380	IfStatement	if ( not == 0 )		763068	18					
ANR	763381	Condition	not == 0	3891:8:86405:86412	763068	0	True				
ANR	763382	EqualityExpression	not == 0		763068	0		==			
ANR	763383	Identifier	not		763068	0					
ANR	763384	PrimaryExpression	0		763068	1					
ANR	763385	CompoundStatement		61:18:1548:1548	763068	1					
ANR	763386	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		763068	0					
ANR	763387	ForInit	c = 0 ;	3892:11:86428:86433	763068	0	True				
ANR	763388	AssignmentExpression	c = 0		763068	0		=			
ANR	763389	Identifier	c		763068	0					
ANR	763390	PrimaryExpression	0		763068	1					
ANR	763391	Condition	c < SINGLE_BYTE_SIZE	3892:18:86435:86454	763068	1	True				
ANR	763392	RelationalExpression	c < SINGLE_BYTE_SIZE		763068	0		<			
ANR	763393	Identifier	c		763068	0					
ANR	763394	Identifier	SINGLE_BYTE_SIZE		763068	1					
ANR	763395	PostIncDecOperationExpression	c ++	3892:40:86457:86459	763068	2	True				
ANR	763396	Identifier	c		763068	0					
ANR	763397	IncDec	++		763068	1					
ANR	763398	CompoundStatement		62:45:1595:1595	763068	3					
ANR	763399	IfStatement	"if ( IS_CODE_SB_WORD ( enc , c ) )"		763068	0					
ANR	763400	Condition	"IS_CODE_SB_WORD ( enc , c )"	3893:5:86469:86491	763068	0	True				
ANR	763401	CallExpression	"IS_CODE_SB_WORD ( enc , c )"		763068	0					
ANR	763402	Callee	IS_CODE_SB_WORD		763068	0					
ANR	763403	Identifier	IS_CODE_SB_WORD		763068	0					
ANR	763404	ArgumentList	enc		763068	1					
ANR	763405	Argument	enc		763068	0					
ANR	763406	Identifier	enc		763068	0					
ANR	763407	Argument	c		763068	1					
ANR	763408	Identifier	c		763068	0					
ANR	763409	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3893:30:86494:86519	763068	1	True				
ANR	763410	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		763068	0					
ANR	763411	Callee	BITSET_SET_BIT		763068	0					
ANR	763412	Identifier	BITSET_SET_BIT		763068	0					
ANR	763413	ArgumentList	cc -> bs		763068	1					
ANR	763414	Argument	cc -> bs		763068	0					
ANR	763415	PtrMemberAccess	cc -> bs		763068	0					
ANR	763416	Identifier	cc		763068	0					
ANR	763417	Identifier	bs		763068	1					
ANR	763418	Argument	c		763068	1					
ANR	763419	Identifier	c		763068	0					
ANR	763420	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3895:6:86535:86574	763068	1	True				
ANR	763421	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		763068	0					
ANR	763422	Callee	ADD_ALL_MULTI_BYTE_RANGE		763068	0					
ANR	763423	Identifier	ADD_ALL_MULTI_BYTE_RANGE		763068	0					
ANR	763424	ArgumentList	enc		763068	1					
ANR	763425	Argument	enc		763068	0					
ANR	763426	Identifier	enc		763068	0					
ANR	763427	Argument	cc -> mbuf		763068	1					
ANR	763428	PtrMemberAccess	cc -> mbuf		763068	0					
ANR	763429	Identifier	cc		763068	0					
ANR	763430	Identifier	mbuf		763068	1					
ANR	763431	ElseStatement	else		763068	0					
ANR	763432	CompoundStatement		67:9:1724:1724	763068	0					
ANR	763433	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		763068	0					
ANR	763434	ForInit	c = 0 ;	3898:11:86604:86609	763068	0	True				
ANR	763435	AssignmentExpression	c = 0		763068	0		=			
ANR	763436	Identifier	c		763068	0					
ANR	763437	PrimaryExpression	0		763068	1					
ANR	763438	Condition	c < SINGLE_BYTE_SIZE	3898:18:86611:86630	763068	1	True				
ANR	763439	RelationalExpression	c < SINGLE_BYTE_SIZE		763068	0		<			
ANR	763440	Identifier	c		763068	0					
ANR	763441	Identifier	SINGLE_BYTE_SIZE		763068	1					
ANR	763442	PostIncDecOperationExpression	c ++	3898:40:86633:86635	763068	2	True				
ANR	763443	Identifier	c		763068	0					
ANR	763444	IncDec	++		763068	1					
ANR	763445	CompoundStatement		68:45:1771:1771	763068	3					
ANR	763446	IfStatement	"if ( ( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		763068	0					
ANR	763447	Condition	"( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c )"	3899:12:86652:86757	763068	0	True				
ANR	763448	AndExpression	"( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c )"		763068	0		&&			
ANR	763449	RelationalExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0"		763068	0		>			
ANR	763450	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , c )"		763068	0					
ANR	763451	Callee	ONIGENC_CODE_TO_MBCLEN		763068	0					
ANR	763452	Identifier	ONIGENC_CODE_TO_MBCLEN		763068	0					
ANR	763453	ArgumentList	enc		763068	1					
ANR	763454	Argument	enc		763068	0					
ANR	763455	Identifier	enc		763068	0					
ANR	763456	Argument	c		763068	1					
ANR	763457	Identifier	c		763068	0					
ANR	763458	PrimaryExpression	0		763068	1					
ANR	763459	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		763068	1					
ANR	763460	UnaryOperator	!		763068	0					
ANR	763461	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		763068	1					
ANR	763462	Callee	ONIGENC_IS_CODE_WORD		763068	0					
ANR	763463	Identifier	ONIGENC_IS_CODE_WORD		763068	0					
ANR	763464	ArgumentList	enc		763068	1					
ANR	763465	Argument	enc		763068	0					
ANR	763466	Identifier	enc		763068	0					
ANR	763467	Argument	c		763068	1					
ANR	763468	Identifier	c		763068	0					
ANR	763469	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3901:3:86763:86788	763068	1	True				
ANR	763470	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		763068	0					
ANR	763471	Callee	BITSET_SET_BIT		763068	0					
ANR	763472	Identifier	BITSET_SET_BIT		763068	0					
ANR	763473	ArgumentList	cc -> bs		763068	1					
ANR	763474	Argument	cc -> bs		763068	0					
ANR	763475	PtrMemberAccess	cc -> bs		763068	0					
ANR	763476	Identifier	cc		763068	0					
ANR	763477	Identifier	bs		763068	1					
ANR	763478	Argument	c		763068	1					
ANR	763479	Identifier	c		763068	0					
ANR	763480	BreakStatement	break ;	3904:4:86808:86813	763068	19	True				
ANR	763481	Label	default :	3906:2:86818:86825	763068	20	True				
ANR	763482	Identifier	default		763068	0					
ANR	763483	ReturnStatement	return ONIGERR_PARSER_BUG ;	3907:4:86831:86856	763068	21	True				
ANR	763484	Identifier	ONIGERR_PARSER_BUG		763068	0					
ANR	763485	BreakStatement	break ;	3908:4:86862:86867	763068	22	True				
ANR	763486	ReturnStatement	return r ;	3911:2:86876:86884	763068	8	True				
ANR	763487	Identifier	r		763068	0					
ANR	763488	ReturnType	static int		763068	1					
ANR	763489	Identifier	add_ctype_to_cc		763068	2					
ANR	763490	ParameterList	"CClassNode * cc , int ctype , int not , ScanEnv * env"		763068	3					
ANR	763491	Parameter	CClassNode * cc	3830:16:84816:84829	763068	0	True				
ANR	763492	ParameterType	CClassNode *		763068	0					
ANR	763493	Identifier	cc		763068	1					
ANR	763494	Parameter	int ctype	3830:32:84832:84840	763068	1	True				
ANR	763495	ParameterType	int		763068	0					
ANR	763496	Identifier	ctype		763068	1					
ANR	763497	Parameter	int not	3830:43:84843:84849	763068	2	True				
ANR	763498	ParameterType	int		763068	0					
ANR	763499	Identifier	not		763068	1					
ANR	763500	Parameter	ScanEnv * env	3830:52:84852:84863	763068	3	True				
ANR	763501	ParameterType	ScanEnv *		763068	0					
ANR	763502	Identifier	env		763068	1					
ANR	763503	CFGEntryNode	ENTRY		763068		True				
ANR	763504	CFGExitNode	EXIT		763068		True				
ANR	763505	Symbol	ranges		763068						
ANR	763506	Symbol	* cc		763068						
ANR	763507	Symbol	env -> enc		763068						
ANR	763508	Symbol	cc -> mbuf		763068						
ANR	763509	Symbol	IS_CODE_SB_WORD		763068						
ANR	763510	Symbol	ONIGENC_IS_CODE_WORD		763068						
ANR	763511	Symbol	sb_out		763068						
ANR	763512	Symbol	not		763068						
ANR	763513	Symbol	& ranges		763068						
ANR	763514	Symbol	ONIGENC_GET_CTYPE_CODE_RANGE		763068						
ANR	763515	Symbol	enc		763068						
ANR	763516	Symbol	& sb_out		763068						
ANR	763517	Symbol	add_ctype_to_cc_by_range		763068						
ANR	763518	Symbol	cc		763068						
ANR	763519	Symbol	SINGLE_BYTE_SIZE		763068						
ANR	763520	Symbol	c		763068						
ANR	763521	Symbol	* env		763068						
ANR	763522	Symbol	env		763068						
ANR	763523	Symbol	ONIGERR_PARSER_BUG		763068						
ANR	763524	Symbol	cc -> bs		763068						
ANR	763525	Symbol	ONIGENC_CODE_TO_MBCLEN		763068						
ANR	763526	Symbol	r		763068						
ANR	763527	Symbol	ctype		763068						
ANR	763528	Symbol	ONIG_NO_SUPPORT_CONFIG		763068						
ANR	763529	Symbol	ONIGENC_IS_CODE_CTYPE		763068						
ANR	763530	Function	parse_posix_bracket	3914:0:86889:88992							
ANR	763531	FunctionDef	"parse_posix_bracket (CClassNode * cc , UChar * * src , UChar * end , ScanEnv * env)"		763530	0					
ANR	763532	CompoundStatement		3916:0:86975:88992	763530	0					
ANR	763533	Statement	define	3917:1:86978:86983	763530	0	True				
ANR	763534	Statement	POSIX_BRACKET_CHECK_LIMIT_LENGTH	3917:8:86985:87016	763530	1	True				
ANR	763535	Statement	20	3917:42:87019:87020	763530	2	True				
ANR	763536	Statement	define	3918:1:87023:87028	763530	3	True				
ANR	763537	Statement	POSIX_BRACKET_NAME_MIN_LEN	3918:8:87030:87055	763530	4	True				
ANR	763538	Statement	4	3918:43:87065:87065	763530	5	True				
ANR	763539	Statement	static	3920:2:87070:87075	763530	6	True				
ANR	763540	IdentifierDeclStatement	"PosixBracketEntryType PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } } ;"	3920:9:87077:87873	763530	7	True				
ANR	763541	IdentifierDecl	"PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } }"		763530	0					
ANR	763542	IdentifierDeclType	PosixBracketEntryType [ ]		763530	0					
ANR	763543	Identifier	PBS		763530	1					
ANR	763544	AssignmentExpression	"PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } }"		763530	2		=			
ANR	763545	Identifier	PBS		763530	0					
ANR	763546	InitializerList	"( UChar * ) ""alnum"""		763530	1					
ANR	763547	InitializerList	"( UChar * ) ""alnum"""		763530	0					
ANR	763548	CastExpression	"( UChar * ) ""alnum"""		763530	0					
ANR	763549	CastTarget	UChar *		763530	0					
ANR	763550	PrimaryExpression	"""alnum"""		763530	1					
ANR	763551	Identifier	ONIGENC_CTYPE_ALNUM		763530	1					
ANR	763552	PrimaryExpression	5		763530	2					
ANR	763553	InitializerList	"( UChar * ) ""alpha"""		763530	1					
ANR	763554	CastExpression	"( UChar * ) ""alpha"""		763530	0					
ANR	763555	CastTarget	UChar *		763530	0					
ANR	763556	PrimaryExpression	"""alpha"""		763530	1					
ANR	763557	Identifier	ONIGENC_CTYPE_ALPHA		763530	1					
ANR	763558	PrimaryExpression	5		763530	2					
ANR	763559	InitializerList	"( UChar * ) ""blank"""		763530	2					
ANR	763560	CastExpression	"( UChar * ) ""blank"""		763530	0					
ANR	763561	CastTarget	UChar *		763530	0					
ANR	763562	PrimaryExpression	"""blank"""		763530	1					
ANR	763563	Identifier	ONIGENC_CTYPE_BLANK		763530	1					
ANR	763564	PrimaryExpression	5		763530	2					
ANR	763565	InitializerList	"( UChar * ) ""cntrl"""		763530	3					
ANR	763566	CastExpression	"( UChar * ) ""cntrl"""		763530	0					
ANR	763567	CastTarget	UChar *		763530	0					
ANR	763568	PrimaryExpression	"""cntrl"""		763530	1					
ANR	763569	Identifier	ONIGENC_CTYPE_CNTRL		763530	1					
ANR	763570	PrimaryExpression	5		763530	2					
ANR	763571	InitializerList	"( UChar * ) ""digit"""		763530	4					
ANR	763572	CastExpression	"( UChar * ) ""digit"""		763530	0					
ANR	763573	CastTarget	UChar *		763530	0					
ANR	763574	PrimaryExpression	"""digit"""		763530	1					
ANR	763575	Identifier	ONIGENC_CTYPE_DIGIT		763530	1					
ANR	763576	PrimaryExpression	5		763530	2					
ANR	763577	InitializerList	"( UChar * ) ""graph"""		763530	5					
ANR	763578	CastExpression	"( UChar * ) ""graph"""		763530	0					
ANR	763579	CastTarget	UChar *		763530	0					
ANR	763580	PrimaryExpression	"""graph"""		763530	1					
ANR	763581	Identifier	ONIGENC_CTYPE_GRAPH		763530	1					
ANR	763582	PrimaryExpression	5		763530	2					
ANR	763583	InitializerList	"( UChar * ) ""lower"""		763530	6					
ANR	763584	CastExpression	"( UChar * ) ""lower"""		763530	0					
ANR	763585	CastTarget	UChar *		763530	0					
ANR	763586	PrimaryExpression	"""lower"""		763530	1					
ANR	763587	Identifier	ONIGENC_CTYPE_LOWER		763530	1					
ANR	763588	PrimaryExpression	5		763530	2					
ANR	763589	InitializerList	"( UChar * ) ""print"""		763530	7					
ANR	763590	CastExpression	"( UChar * ) ""print"""		763530	0					
ANR	763591	CastTarget	UChar *		763530	0					
ANR	763592	PrimaryExpression	"""print"""		763530	1					
ANR	763593	Identifier	ONIGENC_CTYPE_PRINT		763530	1					
ANR	763594	PrimaryExpression	5		763530	2					
ANR	763595	InitializerList	"( UChar * ) ""punct"""		763530	8					
ANR	763596	CastExpression	"( UChar * ) ""punct"""		763530	0					
ANR	763597	CastTarget	UChar *		763530	0					
ANR	763598	PrimaryExpression	"""punct"""		763530	1					
ANR	763599	Identifier	ONIGENC_CTYPE_PUNCT		763530	1					
ANR	763600	PrimaryExpression	5		763530	2					
ANR	763601	InitializerList	"( UChar * ) ""space"""		763530	9					
ANR	763602	CastExpression	"( UChar * ) ""space"""		763530	0					
ANR	763603	CastTarget	UChar *		763530	0					
ANR	763604	PrimaryExpression	"""space"""		763530	1					
ANR	763605	Identifier	ONIGENC_CTYPE_SPACE		763530	1					
ANR	763606	PrimaryExpression	5		763530	2					
ANR	763607	InitializerList	"( UChar * ) ""upper"""		763530	10					
ANR	763608	CastExpression	"( UChar * ) ""upper"""		763530	0					
ANR	763609	CastTarget	UChar *		763530	0					
ANR	763610	PrimaryExpression	"""upper"""		763530	1					
ANR	763611	Identifier	ONIGENC_CTYPE_UPPER		763530	1					
ANR	763612	PrimaryExpression	5		763530	2					
ANR	763613	InitializerList	"( UChar * ) ""xdigit"""		763530	11					
ANR	763614	CastExpression	"( UChar * ) ""xdigit"""		763530	0					
ANR	763615	CastTarget	UChar *		763530	0					
ANR	763616	PrimaryExpression	"""xdigit"""		763530	1					
ANR	763617	Identifier	ONIGENC_CTYPE_XDIGIT		763530	1					
ANR	763618	PrimaryExpression	6		763530	2					
ANR	763619	InitializerList	"( UChar * ) ""ascii"""		763530	12					
ANR	763620	CastExpression	"( UChar * ) ""ascii"""		763530	0					
ANR	763621	CastTarget	UChar *		763530	0					
ANR	763622	PrimaryExpression	"""ascii"""		763530	1					
ANR	763623	Identifier	ONIGENC_CTYPE_ASCII		763530	1					
ANR	763624	PrimaryExpression	5		763530	2					
ANR	763625	InitializerList	"( UChar * ) ""word"""		763530	13					
ANR	763626	CastExpression	"( UChar * ) ""word"""		763530	0					
ANR	763627	CastTarget	UChar *		763530	0					
ANR	763628	PrimaryExpression	"""word"""		763530	1					
ANR	763629	Identifier	ONIGENC_CTYPE_WORD		763530	1					
ANR	763630	PrimaryExpression	4		763530	2					
ANR	763631	InitializerList	( UChar * ) NULL		763530	14					
ANR	763632	CastExpression	( UChar * ) NULL		763530	0					
ANR	763633	CastTarget	UChar *		763530	0					
ANR	763634	Identifier	NULL		763530	1					
ANR	763635	UnaryOperationExpression	- 1		763530	1					
ANR	763636	UnaryOperator	-		763530	0					
ANR	763637	PrimaryExpression	1		763530	1					
ANR	763638	PrimaryExpression	0		763530	2					
ANR	763639	IdentifierDeclStatement	PosixBracketEntryType * pb ;	3938:2:87878:87903	763530	8	True				
ANR	763640	IdentifierDecl	* pb		763530	0					
ANR	763641	IdentifierDeclType	PosixBracketEntryType *		763530	0					
ANR	763642	Identifier	pb		763530	1					
ANR	763643	IdentifierDeclStatement	"int not , i , r ;"	3939:2:87907:87920	763530	9	True				
ANR	763644	IdentifierDecl	not		763530	0					
ANR	763645	IdentifierDeclType	int		763530	0					
ANR	763646	Identifier	not		763530	1					
ANR	763647	IdentifierDecl	i		763530	1					
ANR	763648	IdentifierDeclType	int		763530	0					
ANR	763649	Identifier	i		763530	1					
ANR	763650	IdentifierDecl	r		763530	2					
ANR	763651	IdentifierDeclType	int		763530	0					
ANR	763652	Identifier	r		763530	1					
ANR	763653	IdentifierDeclStatement	OnigCodePoint c ;	3940:2:87924:87939	763530	10	True				
ANR	763654	IdentifierDecl	c		763530	0					
ANR	763655	IdentifierDeclType	OnigCodePoint		763530	0					
ANR	763656	Identifier	c		763530	1					
ANR	763657	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3941:2:87943:87970	763530	11	True				
ANR	763658	IdentifierDecl	enc = env -> enc		763530	0					
ANR	763659	IdentifierDeclType	OnigEncoding		763530	0					
ANR	763660	Identifier	enc		763530	1					
ANR	763661	AssignmentExpression	enc = env -> enc		763530	2		=			
ANR	763662	Identifier	enc		763530	0					
ANR	763663	PtrMemberAccess	env -> enc		763530	1					
ANR	763664	Identifier	env		763530	0					
ANR	763665	Identifier	enc		763530	1					
ANR	763666	IdentifierDeclStatement	UChar * p = * src ;	3942:2:87974:87989	763530	12	True				
ANR	763667	IdentifierDecl	* p = * src		763530	0					
ANR	763668	IdentifierDeclType	UChar *		763530	0					
ANR	763669	Identifier	p		763530	1					
ANR	763670	AssignmentExpression	* p = * src		763530	2		=			
ANR	763671	Identifier	p		763530	0					
ANR	763672	UnaryOperationExpression	* src		763530	1					
ANR	763673	UnaryOperator	*		763530	0					
ANR	763674	Identifier	src		763530	1					
ANR	763675	IfStatement	if ( PPEEK_IS ( '^' ) )		763530	13					
ANR	763676	Condition	PPEEK_IS ( '^' )	3944:6:87998:88010	763530	0	True				
ANR	763677	CallExpression	PPEEK_IS ( '^' )		763530	0					
ANR	763678	Callee	PPEEK_IS		763530	0					
ANR	763679	Identifier	PPEEK_IS		763530	0					
ANR	763680	ArgumentList	'^'		763530	1					
ANR	763681	Argument	'^'		763530	0					
ANR	763682	PrimaryExpression	'^'		763530	0					
ANR	763683	CompoundStatement		29:21:1037:1037	763530	1					
ANR	763684	ExpressionStatement	PINC_S	3945:4:88019:88025	763530	0	True				
ANR	763685	Identifier	PINC_S		763530	0					
ANR	763686	ExpressionStatement	not = 1	3946:4:88031:88038	763530	1	True				
ANR	763687	AssignmentExpression	not = 1		763530	0		=			
ANR	763688	Identifier	not		763530	0					
ANR	763689	PrimaryExpression	1		763530	1					
ANR	763690	ElseStatement	else		763530	0					
ANR	763691	ExpressionStatement	not = 0	3949:4:88055:88062	763530	0	True				
ANR	763692	AssignmentExpression	not = 0		763530	0		=			
ANR	763693	Identifier	not		763530	0					
ANR	763694	PrimaryExpression	0		763530	1					
ANR	763695	IfStatement	"if ( onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3 )"		763530	14					
ANR	763696	Condition	"onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3"	3951:6:88071:88130	763530	0	True				
ANR	763697	RelationalExpression	"onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3"		763530	0		<			
ANR	763698	CallExpression	"onigenc_strlen ( enc , p , end )"		763530	0					
ANR	763699	Callee	onigenc_strlen		763530	0					
ANR	763700	Identifier	onigenc_strlen		763530	0					
ANR	763701	ArgumentList	enc		763530	1					
ANR	763702	Argument	enc		763530	0					
ANR	763703	Identifier	enc		763530	0					
ANR	763704	Argument	p		763530	1					
ANR	763705	Identifier	p		763530	0					
ANR	763706	Argument	end		763530	2					
ANR	763707	Identifier	end		763530	0					
ANR	763708	AdditiveExpression	POSIX_BRACKET_NAME_MIN_LEN + 3		763530	1		+			
ANR	763709	Identifier	POSIX_BRACKET_NAME_MIN_LEN		763530	0					
ANR	763710	PrimaryExpression	3		763530	1					
ANR	763711	GotoStatement	goto not_posix_bracket ;	3952:4:88137:88159	763530	1	True				
ANR	763712	Identifier	not_posix_bracket		763530	0					
ANR	763713	ForStatement	for ( pb = PBS ; IS_NOT_NULL ( pb -> name ) ; pb ++ )		763530	15					
ANR	763714	ForInit	pb = PBS ;	3954:7:88169:88177	763530	0	True				
ANR	763715	AssignmentExpression	pb = PBS		763530	0		=			
ANR	763716	Identifier	pb		763530	0					
ANR	763717	Identifier	PBS		763530	1					
ANR	763718	Condition	IS_NOT_NULL ( pb -> name )	3954:17:88179:88199	763530	1	True				
ANR	763719	CallExpression	IS_NOT_NULL ( pb -> name )		763530	0					
ANR	763720	Callee	IS_NOT_NULL		763530	0					
ANR	763721	Identifier	IS_NOT_NULL		763530	0					
ANR	763722	ArgumentList	pb -> name		763530	1					
ANR	763723	Argument	pb -> name		763530	0					
ANR	763724	PtrMemberAccess	pb -> name		763530	0					
ANR	763725	Identifier	pb		763530	0					
ANR	763726	Identifier	name		763530	1					
ANR	763727	PostIncDecOperationExpression	pb ++	3954:40:88202:88205	763530	2	True				
ANR	763728	Identifier	pb		763530	0					
ANR	763729	IncDec	++		763530	1					
ANR	763730	CompoundStatement		39:46:1232:1232	763530	3					
ANR	763731	IfStatement	"if ( onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0 )"		763530	0					
ANR	763732	Condition	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0"	3955:8:88218:88280	763530	0	True				
ANR	763733	EqualityExpression	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0"		763530	0		==			
ANR	763734	CallExpression	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len )"		763530	0					
ANR	763735	Callee	onigenc_with_ascii_strncmp		763530	0					
ANR	763736	Identifier	onigenc_with_ascii_strncmp		763530	0					
ANR	763737	ArgumentList	enc		763530	1					
ANR	763738	Argument	enc		763530	0					
ANR	763739	Identifier	enc		763530	0					
ANR	763740	Argument	p		763530	1					
ANR	763741	Identifier	p		763530	0					
ANR	763742	Argument	end		763530	2					
ANR	763743	Identifier	end		763530	0					
ANR	763744	Argument	pb -> name		763530	3					
ANR	763745	PtrMemberAccess	pb -> name		763530	0					
ANR	763746	Identifier	pb		763530	0					
ANR	763747	Identifier	name		763530	1					
ANR	763748	Argument	pb -> len		763530	4					
ANR	763749	PtrMemberAccess	pb -> len		763530	0					
ANR	763750	Identifier	pb		763530	0					
ANR	763751	Identifier	len		763530	1					
ANR	763752	PrimaryExpression	0		763530	1					
ANR	763753	CompoundStatement		40:73:1307:1307	763530	1					
ANR	763754	ExpressionStatement	"p = ( UChar * ) onigenc_step ( enc , p , end , pb -> len )"	3956:6:88291:88338	763530	0	True				
ANR	763755	AssignmentExpression	"p = ( UChar * ) onigenc_step ( enc , p , end , pb -> len )"		763530	0		=			
ANR	763756	Identifier	p		763530	0					
ANR	763757	CastExpression	"( UChar * ) onigenc_step ( enc , p , end , pb -> len )"		763530	1					
ANR	763758	CastTarget	UChar *		763530	0					
ANR	763759	CallExpression	"onigenc_step ( enc , p , end , pb -> len )"		763530	1					
ANR	763760	Callee	onigenc_step		763530	0					
ANR	763761	Identifier	onigenc_step		763530	0					
ANR	763762	ArgumentList	enc		763530	1					
ANR	763763	Argument	enc		763530	0					
ANR	763764	Identifier	enc		763530	0					
ANR	763765	Argument	p		763530	1					
ANR	763766	Identifier	p		763530	0					
ANR	763767	Argument	end		763530	2					
ANR	763768	Identifier	end		763530	0					
ANR	763769	Argument	pb -> len		763530	3					
ANR	763770	PtrMemberAccess	pb -> len		763530	0					
ANR	763771	Identifier	pb		763530	0					
ANR	763772	Identifier	len		763530	1					
ANR	763773	IfStatement	"if ( onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0 )"		763530	1					
ANR	763774	Condition	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0"	3957:10:88350:88411	763530	0	True				
ANR	763775	EqualityExpression	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0"		763530	0		!=			
ANR	763776	CallExpression	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 )"		763530	0					
ANR	763777	Callee	onigenc_with_ascii_strncmp		763530	0					
ANR	763778	Identifier	onigenc_with_ascii_strncmp		763530	0					
ANR	763779	ArgumentList	enc		763530	1					
ANR	763780	Argument	enc		763530	0					
ANR	763781	Identifier	enc		763530	0					
ANR	763782	Argument	p		763530	1					
ANR	763783	Identifier	p		763530	0					
ANR	763784	Argument	end		763530	2					
ANR	763785	Identifier	end		763530	0					
ANR	763786	Argument	"( UChar * ) "":]"""		763530	3					
ANR	763787	CastExpression	"( UChar * ) "":]"""		763530	0					
ANR	763788	CastTarget	UChar *		763530	0					
ANR	763789	PrimaryExpression	""":]"""		763530	1					
ANR	763790	Argument	2		763530	4					
ANR	763791	PrimaryExpression	2		763530	0					
ANR	763792	PrimaryExpression	0		763530	1					
ANR	763793	ReturnStatement	return ONIGERR_INVALID_POSIX_BRACKET_TYPE ;	3958:8:88422:88463	763530	1	True				
ANR	763794	Identifier	ONIGERR_INVALID_POSIX_BRACKET_TYPE		763530	0					
ANR	763795	ExpressionStatement	"r = add_ctype_to_cc ( cc , pb -> ctype , not , env )"	3960:6:88472:88516	763530	2	True				
ANR	763796	AssignmentExpression	"r = add_ctype_to_cc ( cc , pb -> ctype , not , env )"		763530	0		=			
ANR	763797	Identifier	r		763530	0					
ANR	763798	CallExpression	"add_ctype_to_cc ( cc , pb -> ctype , not , env )"		763530	1					
ANR	763799	Callee	add_ctype_to_cc		763530	0					
ANR	763800	Identifier	add_ctype_to_cc		763530	0					
ANR	763801	ArgumentList	cc		763530	1					
ANR	763802	Argument	cc		763530	0					
ANR	763803	Identifier	cc		763530	0					
ANR	763804	Argument	pb -> ctype		763530	1					
ANR	763805	PtrMemberAccess	pb -> ctype		763530	0					
ANR	763806	Identifier	pb		763530	0					
ANR	763807	Identifier	ctype		763530	1					
ANR	763808	Argument	not		763530	2					
ANR	763809	Identifier	not		763530	0					
ANR	763810	Argument	env		763530	3					
ANR	763811	Identifier	env		763530	0					
ANR	763812	IfStatement	if ( r != 0 )		763530	3					
ANR	763813	Condition	r != 0	3961:10:88528:88533	763530	0	True				
ANR	763814	EqualityExpression	r != 0		763530	0		!=			
ANR	763815	Identifier	r		763530	0					
ANR	763816	PrimaryExpression	0		763530	1					
ANR	763817	ReturnStatement	return r ;	3961:18:88536:88544	763530	1	True				
ANR	763818	Identifier	r		763530	0					
ANR	763819	ExpressionStatement	PINC_S	3963:6:88553:88559	763530	4	True				
ANR	763820	Identifier	PINC_S		763530	0					
ANR	763821	ExpressionStatement	PINC_S	3963:14:88561:88567	763530	5	True				
ANR	763822	Identifier	PINC_S		763530	0					
ANR	763823	ExpressionStatement	* src = p	3964:6:88575:88583	763530	6	True				
ANR	763824	AssignmentExpression	* src = p		763530	0		=			
ANR	763825	UnaryOperationExpression	* src		763530	0					
ANR	763826	UnaryOperator	*		763530	0					
ANR	763827	Identifier	src		763530	1					
ANR	763828	Identifier	p		763530	1					
ANR	763829	ReturnStatement	return 0 ;	3965:6:88591:88599	763530	7	True				
ANR	763830	PrimaryExpression	0		763530	0					
ANR	763831	Label	not_posix_bracket :	3969:1:88613:88630	763530	16	True				
ANR	763832	Identifier	not_posix_bracket		763530	0					
ANR	763833	ExpressionStatement	c = 0	3970:2:88634:88639	763530	17	True				
ANR	763834	AssignmentExpression	c = 0		763530	0		=			
ANR	763835	Identifier	c		763530	0					
ANR	763836	PrimaryExpression	0		763530	1					
ANR	763837	ExpressionStatement	i = 0	3971:2:88643:88648	763530	18	True				
ANR	763838	AssignmentExpression	i = 0		763530	0		=			
ANR	763839	Identifier	i		763530	0					
ANR	763840	PrimaryExpression	0		763530	1					
ANR	763841	WhileStatement	while ( ! PEND && ( ( c = PPEEK ) != ':' ) && c != ']' )		763530	19					
ANR	763842	Condition	! PEND && ( ( c = PPEEK ) != ':' ) && c != ']'	3972:9:88659:88699	763530	0	True				
ANR	763843	AndExpression	! PEND && ( ( c = PPEEK ) != ':' ) && c != ']'		763530	0		&&			
ANR	763844	UnaryOperationExpression	! PEND		763530	0					
ANR	763845	UnaryOperator	!		763530	0					
ANR	763846	Identifier	PEND		763530	1					
ANR	763847	AndExpression	( ( c = PPEEK ) != ':' ) && c != ']'		763530	1		&&			
ANR	763848	EqualityExpression	( c = PPEEK ) != ':'		763530	0		!=			
ANR	763849	AssignmentExpression	c = PPEEK		763530	0		=			
ANR	763850	Identifier	c		763530	0					
ANR	763851	Identifier	PPEEK		763530	1					
ANR	763852	PrimaryExpression	':'		763530	1					
ANR	763853	EqualityExpression	c != ']'		763530	1		!=			
ANR	763854	Identifier	c		763530	0					
ANR	763855	PrimaryExpression	']'		763530	1					
ANR	763856	CompoundStatement		57:52:1726:1726	763530	1					
ANR	763857	ExpressionStatement	PINC_S	3973:4:88708:88714	763530	0	True				
ANR	763858	Identifier	PINC_S		763530	0					
ANR	763859	IfStatement	if ( ++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH )		763530	1					
ANR	763860	Condition	++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH	3974:8:88724:88761	763530	0	True				
ANR	763861	RelationalExpression	++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH		763530	0		>			
ANR	763862	UnaryExpression	++ i		763530	0					
ANR	763863	IncDec	++		763530	0					
ANR	763864	Identifier	i		763530	1					
ANR	763865	Identifier	POSIX_BRACKET_CHECK_LIMIT_LENGTH		763530	1					
ANR	763866	BreakStatement	break ;	3974:48:88764:88769	763530	1	True				
ANR	763867	IfStatement	if ( c == ':' && ! PEND )		763530	20					
ANR	763868	Condition	c == ':' && ! PEND	3976:6:88781:88798	763530	0	True				
ANR	763869	AndExpression	c == ':' && ! PEND		763530	0		&&			
ANR	763870	EqualityExpression	c == ':'		763530	0		==			
ANR	763871	Identifier	c		763530	0					
ANR	763872	PrimaryExpression	':'		763530	1					
ANR	763873	UnaryOperationExpression	! PEND		763530	1					
ANR	763874	UnaryOperator	!		763530	0					
ANR	763875	Identifier	PEND		763530	1					
ANR	763876	CompoundStatement		61:26:1825:1825	763530	1					
ANR	763877	ExpressionStatement	PINC_S	3977:4:88807:88813	763530	0	True				
ANR	763878	Identifier	PINC_S		763530	0					
ANR	763879	IfStatement	if ( ! PEND )		763530	1					
ANR	763880	Condition	! PEND	3978:8:88823:88828	763530	0	True				
ANR	763881	UnaryOperationExpression	! PEND		763530	0					
ANR	763882	UnaryOperator	!		763530	0					
ANR	763883	Identifier	PEND		763530	1					
ANR	763884	CompoundStatement		63:16:1855:1855	763530	1					
ANR	763885	ExpressionStatement	PFETCH_S ( c )	3979:6:88839:88850	763530	0	True				
ANR	763886	CallExpression	PFETCH_S ( c )		763530	0					
ANR	763887	Callee	PFETCH_S		763530	0					
ANR	763888	Identifier	PFETCH_S		763530	0					
ANR	763889	ArgumentList	c		763530	1					
ANR	763890	Argument	c		763530	0					
ANR	763891	Identifier	c		763530	0					
ANR	763892	IfStatement	if ( c == ']' )		763530	1					
ANR	763893	Condition	c == ']'	3980:10:88862:88869	763530	0	True				
ANR	763894	EqualityExpression	c == ']'		763530	0		==			
ANR	763895	Identifier	c		763530	0					
ANR	763896	PrimaryExpression	']'		763530	1					
ANR	763897	ReturnStatement	return ONIGERR_INVALID_POSIX_BRACKET_TYPE ;	3981:8:88880:88921	763530	1	True				
ANR	763898	Identifier	ONIGERR_INVALID_POSIX_BRACKET_TYPE		763530	0					
ANR	763899	ReturnStatement	return 1 ;	3985:2:88936:88944	763530	21	True				
ANR	763900	PrimaryExpression	1		763530	0					
ANR	763901	ReturnType	static int		763530	1					
ANR	763902	Identifier	parse_posix_bracket		763530	2					
ANR	763903	ParameterList	"CClassNode * cc , UChar * * src , UChar * end , ScanEnv * env"		763530	3					
ANR	763904	Parameter	CClassNode * cc	3915:20:86920:86933	763530	0	True				
ANR	763905	ParameterType	CClassNode *		763530	0					
ANR	763906	Identifier	cc		763530	1					
ANR	763907	Parameter	UChar * * src	3915:36:86936:86946	763530	1	True				
ANR	763908	ParameterType	UChar * *		763530	0					
ANR	763909	Identifier	src		763530	1					
ANR	763910	Parameter	UChar * end	3915:49:86949:86958	763530	2	True				
ANR	763911	ParameterType	UChar *		763530	0					
ANR	763912	Identifier	end		763530	1					
ANR	763913	Parameter	ScanEnv * env	3915:61:86961:86972	763530	3	True				
ANR	763914	ParameterType	ScanEnv *		763530	0					
ANR	763915	Identifier	env		763530	1					
ANR	763916	CFGEntryNode	ENTRY		763530		True				
ANR	763917	CFGExitNode	EXIT		763530		True				
ANR	763918	Symbol	PPEEK_IS		763530						
ANR	763919	Symbol	ONIGENC_CTYPE_ALPHA		763530						
ANR	763920	Symbol	IS_NOT_NULL		763530						
ANR	763921	Symbol	ONIGENC_CTYPE_PUNCT		763530						
ANR	763922	Symbol	ONIGENC_CTYPE_PRINT		763530						
ANR	763923	Symbol	onigenc_with_ascii_strncmp		763530						
ANR	763924	Symbol	ONIGENC_CTYPE_LOWER		763530						
ANR	763925	Symbol	env -> enc		763530						
ANR	763926	Symbol	pb -> ctype		763530						
ANR	763927	Symbol	* src		763530						
ANR	763928	Symbol	PEND		763530						
ANR	763929	Symbol	not		763530						
ANR	763930	Symbol	ONIGENC_CTYPE_SPACE		763530						
ANR	763931	Symbol	onigenc_strlen		763530						
ANR	763932	Symbol	ONIGENC_CTYPE_ASCII		763530						
ANR	763933	Symbol	onigenc_step		763530						
ANR	763934	Symbol	pb -> name		763530						
ANR	763935	Symbol	add_ctype_to_cc		763530						
ANR	763936	Symbol	end		763530						
ANR	763937	Symbol	enc		763530						
ANR	763938	Symbol	ONIGENC_CTYPE_XDIGIT		763530						
ANR	763939	Symbol	cc		763530						
ANR	763940	Symbol	PBS		763530						
ANR	763941	Symbol	NULL		763530						
ANR	763942	Symbol	c		763530						
ANR	763943	Symbol	src		763530						
ANR	763944	Symbol	ONIGENC_CTYPE_GRAPH		763530						
ANR	763945	Symbol	PPEEK		763530						
ANR	763946	Symbol	ONIGENC_CTYPE_DIGIT		763530						
ANR	763947	Symbol	* env		763530						
ANR	763948	Symbol	i		763530						
ANR	763949	Symbol	ONIGENC_CTYPE_CNTRL		763530						
ANR	763950	Symbol	ONIGENC_CTYPE_UPPER		763530						
ANR	763951	Symbol	env		763530						
ANR	763952	Symbol	ONIGENC_CTYPE_ALNUM		763530						
ANR	763953	Symbol	p		763530						
ANR	763954	Symbol	POSIX_BRACKET_NAME_MIN_LEN		763530						
ANR	763955	Symbol	pb		763530						
ANR	763956	Symbol	r		763530						
ANR	763957	Symbol	ONIGENC_CTYPE_BLANK		763530						
ANR	763958	Symbol	* pb		763530						
ANR	763959	Symbol	pb -> len		763530						
ANR	763960	Symbol	POSIX_BRACKET_CHECK_LIMIT_LENGTH		763530						
ANR	763961	Symbol	ONIGENC_CTYPE_WORD		763530						
ANR	763962	Symbol	ONIGERR_INVALID_POSIX_BRACKET_TYPE		763530						
ANR	763963	Function	fetch_char_property_to_ctype	3988:0:88995:89589							
ANR	763964	FunctionDef	"fetch_char_property_to_ctype (UChar * * src , UChar * end , ScanEnv * env)"		763963	0					
ANR	763965	CompoundStatement		3990:0:89074:89589	763963	0					
ANR	763966	IdentifierDeclStatement	int r ;	3991:2:89078:89083	763963	0	True				
ANR	763967	IdentifierDecl	r		763963	0					
ANR	763968	IdentifierDeclType	int		763963	0					
ANR	763969	Identifier	r		763963	1					
ANR	763970	IdentifierDeclStatement	OnigCodePoint c ;	3992:2:89087:89102	763963	1	True				
ANR	763971	IdentifierDecl	c		763963	0					
ANR	763972	IdentifierDeclType	OnigCodePoint		763963	0					
ANR	763973	Identifier	c		763963	1					
ANR	763974	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3993:2:89106:89133	763963	2	True				
ANR	763975	IdentifierDecl	enc = env -> enc		763963	0					
ANR	763976	IdentifierDeclType	OnigEncoding		763963	0					
ANR	763977	Identifier	enc		763963	1					
ANR	763978	AssignmentExpression	enc = env -> enc		763963	2		=			
ANR	763979	Identifier	enc		763963	0					
ANR	763980	PtrMemberAccess	env -> enc		763963	1					
ANR	763981	Identifier	env		763963	0					
ANR	763982	Identifier	enc		763963	1					
ANR	763983	IdentifierDeclStatement	"UChar * prev , * start , * p = * src ;"	3994:2:89137:89167	763963	3	True				
ANR	763984	IdentifierDecl	* prev		763963	0					
ANR	763985	IdentifierDeclType	UChar *		763963	0					
ANR	763986	Identifier	prev		763963	1					
ANR	763987	IdentifierDecl	* start		763963	1					
ANR	763988	IdentifierDeclType	UChar *		763963	0					
ANR	763989	Identifier	start		763963	1					
ANR	763990	IdentifierDecl	* p = * src		763963	2					
ANR	763991	IdentifierDeclType	UChar *		763963	0					
ANR	763992	Identifier	p		763963	1					
ANR	763993	AssignmentExpression	* p = * src		763963	2		=			
ANR	763994	Identifier	p		763963	0					
ANR	763995	UnaryOperationExpression	* src		763963	1					
ANR	763996	UnaryOperator	*		763963	0					
ANR	763997	Identifier	src		763963	1					
ANR	763998	ExpressionStatement	r = 0	3996:2:89172:89177	763963	4	True				
ANR	763999	AssignmentExpression	r = 0		763963	0		=			
ANR	764000	Identifier	r		763963	0					
ANR	764001	PrimaryExpression	0		763963	1					
ANR	764002	ExpressionStatement	start = prev = p	3997:2:89181:89197	763963	5	True				
ANR	764003	AssignmentExpression	start = prev = p		763963	0		=			
ANR	764004	Identifier	start		763963	0					
ANR	764005	AssignmentExpression	prev = p		763963	1		=			
ANR	764006	Identifier	prev		763963	0					
ANR	764007	Identifier	p		763963	1					
ANR	764008	WhileStatement	while ( ! PEND )		763963	6					
ANR	764009	Condition	! PEND	3999:9:89209:89213	763963	0	True				
ANR	764010	UnaryOperationExpression	! PEND		763963	0					
ANR	764011	UnaryOperator	!		763963	0					
ANR	764012	Identifier	PEND		763963	1					
ANR	764013	CompoundStatement		10:16:141:141	763963	1					
ANR	764014	ExpressionStatement	prev = p	4000:4:89222:89230	763963	0	True				
ANR	764015	AssignmentExpression	prev = p		763963	0		=			
ANR	764016	Identifier	prev		763963	0					
ANR	764017	Identifier	p		763963	1					
ANR	764018	ExpressionStatement	PFETCH_S ( c )	4001:4:89236:89247	763963	1	True				
ANR	764019	CallExpression	PFETCH_S ( c )		763963	0					
ANR	764020	Callee	PFETCH_S		763963	0					
ANR	764021	Identifier	PFETCH_S		763963	0					
ANR	764022	ArgumentList	c		763963	1					
ANR	764023	Argument	c		763963	0					
ANR	764024	Identifier	c		763963	0					
ANR	764025	IfStatement	if ( c == '}' )		763963	2					
ANR	764026	Condition	c == '}'	4002:8:89257:89264	763963	0	True				
ANR	764027	EqualityExpression	c == '}'		763963	0		==			
ANR	764028	Identifier	c		763963	0					
ANR	764029	PrimaryExpression	'}'		763963	1					
ANR	764030	CompoundStatement		13:18:192:192	763963	1					
ANR	764031	ExpressionStatement	"r = ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"	4003:6:89275:89327	763963	0	True				
ANR	764032	AssignmentExpression	"r = ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"		763963	0		=			
ANR	764033	Identifier	r		763963	0					
ANR	764034	CallExpression	"ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"		763963	1					
ANR	764035	Callee	ONIGENC_PROPERTY_NAME_TO_CTYPE		763963	0					
ANR	764036	Identifier	ONIGENC_PROPERTY_NAME_TO_CTYPE		763963	0					
ANR	764037	ArgumentList	enc		763963	1					
ANR	764038	Argument	enc		763963	0					
ANR	764039	Identifier	enc		763963	0					
ANR	764040	Argument	start		763963	1					
ANR	764041	Identifier	start		763963	0					
ANR	764042	Argument	prev		763963	2					
ANR	764043	Identifier	prev		763963	0					
ANR	764044	IfStatement	if ( r < 0 )		763963	1					
ANR	764045	Condition	r < 0	4004:10:89339:89343	763963	0	True				
ANR	764046	RelationalExpression	r < 0		763963	0		<			
ANR	764047	Identifier	r		763963	0					
ANR	764048	PrimaryExpression	0		763963	1					
ANR	764049	BreakStatement	break ;	4004:17:89346:89351	763963	1	True				
ANR	764050	ExpressionStatement	* src = p	4006:6:89360:89368	763963	2	True				
ANR	764051	AssignmentExpression	* src = p		763963	0		=			
ANR	764052	UnaryOperationExpression	* src		763963	0					
ANR	764053	UnaryOperator	*		763963	0					
ANR	764054	Identifier	src		763963	1					
ANR	764055	Identifier	p		763963	1					
ANR	764056	ReturnStatement	return r ;	4007:6:89376:89384	763963	3	True				
ANR	764057	Identifier	r		763963	0					
ANR	764058	ElseStatement	else		763963	0					
ANR	764059	IfStatement	if ( c == '(' || c == ')' || c == '{' || c == '|' )		763963	0					
ANR	764060	Condition	c == '(' || c == ')' || c == '{' || c == '|'	4009:13:89405:89448	763963	0	True				
ANR	764061	OrExpression	c == '(' || c == ')' || c == '{' || c == '|'		763963	0		||			
ANR	764062	EqualityExpression	c == '('		763963	0		==			
ANR	764063	Identifier	c		763963	0					
ANR	764064	PrimaryExpression	'('		763963	1					
ANR	764065	OrExpression	c == ')' || c == '{' || c == '|'		763963	1		||			
ANR	764066	EqualityExpression	c == ')'		763963	0		==			
ANR	764067	Identifier	c		763963	0					
ANR	764068	PrimaryExpression	')'		763963	1					
ANR	764069	OrExpression	c == '{' || c == '|'		763963	1		||			
ANR	764070	EqualityExpression	c == '{'		763963	0		==			
ANR	764071	Identifier	c		763963	0					
ANR	764072	PrimaryExpression	'{'		763963	1					
ANR	764073	EqualityExpression	c == '|'		763963	1		==			
ANR	764074	Identifier	c		763963	0					
ANR	764075	PrimaryExpression	'|'		763963	1					
ANR	764076	CompoundStatement		20:59:376:376	763963	1					
ANR	764077	ExpressionStatement	r = ONIGERR_INVALID_CHAR_PROPERTY_NAME	4010:6:89459:89497	763963	0	True				
ANR	764078	AssignmentExpression	r = ONIGERR_INVALID_CHAR_PROPERTY_NAME		763963	0		=			
ANR	764079	Identifier	r		763963	0					
ANR	764080	Identifier	ONIGERR_INVALID_CHAR_PROPERTY_NAME		763963	1					
ANR	764081	BreakStatement	break ;	4011:6:89505:89510	763963	1	True				
ANR	764082	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , prev )"	4015:2:89525:89575	763963	7	True				
ANR	764083	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , prev )"		763963	0					
ANR	764084	Callee	onig_scan_env_set_error_string		763963	0					
ANR	764085	Identifier	onig_scan_env_set_error_string		763963	0					
ANR	764086	ArgumentList	env		763963	1					
ANR	764087	Argument	env		763963	0					
ANR	764088	Identifier	env		763963	0					
ANR	764089	Argument	r		763963	1					
ANR	764090	Identifier	r		763963	0					
ANR	764091	Argument	* src		763963	2					
ANR	764092	UnaryOperationExpression	* src		763963	0					
ANR	764093	UnaryOperator	*		763963	0					
ANR	764094	Identifier	src		763963	1					
ANR	764095	Argument	prev		763963	3					
ANR	764096	Identifier	prev		763963	0					
ANR	764097	ReturnStatement	return r ;	4016:2:89579:89587	763963	8	True				
ANR	764098	Identifier	r		763963	0					
ANR	764099	ReturnType	static int		763963	1					
ANR	764100	Identifier	fetch_char_property_to_ctype		763963	2					
ANR	764101	ParameterList	"UChar * * src , UChar * end , ScanEnv * env"		763963	3					
ANR	764102	Parameter	UChar * * src	3989:29:89035:89045	763963	0	True				
ANR	764103	ParameterType	UChar * *		763963	0					
ANR	764104	Identifier	src		763963	1					
ANR	764105	Parameter	UChar * end	3989:42:89048:89057	763963	1	True				
ANR	764106	ParameterType	UChar *		763963	0					
ANR	764107	Identifier	end		763963	1					
ANR	764108	Parameter	ScanEnv * env	3989:54:89060:89071	763963	2	True				
ANR	764109	ParameterType	ScanEnv *		763963	0					
ANR	764110	Identifier	env		763963	1					
ANR	764111	CFGEntryNode	ENTRY		763963		True				
ANR	764112	CFGExitNode	EXIT		763963		True				
ANR	764113	Symbol	ONIGERR_INVALID_CHAR_PROPERTY_NAME		763963						
ANR	764114	Symbol	c		763963						
ANR	764115	Symbol	src		763963						
ANR	764116	Symbol	prev		763963						
ANR	764117	Symbol	* env		763963						
ANR	764118	Symbol	start		763963						
ANR	764119	Symbol	env -> enc		763963						
ANR	764120	Symbol	env		763963						
ANR	764121	Symbol	* src		763963						
ANR	764122	Symbol	PEND		763963						
ANR	764123	Symbol	p		763963						
ANR	764124	Symbol	r		763963						
ANR	764125	Symbol	ONIGENC_PROPERTY_NAME_TO_CTYPE		763963						
ANR	764126	Symbol	end		763963						
ANR	764127	Symbol	enc		763963						
ANR	764128	Function	parse_char_property	4019:0:89592:90028							
ANR	764129	FunctionDef	"parse_char_property (Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		764128	0					
ANR	764130	CompoundStatement		4022:0:89695:90028	764128	0					
ANR	764131	IdentifierDeclStatement	"int r , ctype ;"	4023:2:89699:89711	764128	0	True				
ANR	764132	IdentifierDecl	r		764128	0					
ANR	764133	IdentifierDeclType	int		764128	0					
ANR	764134	Identifier	r		764128	1					
ANR	764135	IdentifierDecl	ctype		764128	1					
ANR	764136	IdentifierDeclType	int		764128	0					
ANR	764137	Identifier	ctype		764128	1					
ANR	764138	IdentifierDeclStatement	CClassNode * cc ;	4024:2:89715:89729	764128	1	True				
ANR	764139	IdentifierDecl	* cc		764128	0					
ANR	764140	IdentifierDeclType	CClassNode *		764128	0					
ANR	764141	Identifier	cc		764128	1					
ANR	764142	ExpressionStatement	"ctype = fetch_char_property_to_ctype ( src , end , env )"	4026:2:89734:89785	764128	2	True				
ANR	764143	AssignmentExpression	"ctype = fetch_char_property_to_ctype ( src , end , env )"		764128	0		=			
ANR	764144	Identifier	ctype		764128	0					
ANR	764145	CallExpression	"fetch_char_property_to_ctype ( src , end , env )"		764128	1					
ANR	764146	Callee	fetch_char_property_to_ctype		764128	0					
ANR	764147	Identifier	fetch_char_property_to_ctype		764128	0					
ANR	764148	ArgumentList	src		764128	1					
ANR	764149	Argument	src		764128	0					
ANR	764150	Identifier	src		764128	0					
ANR	764151	Argument	end		764128	1					
ANR	764152	Identifier	end		764128	0					
ANR	764153	Argument	env		764128	2					
ANR	764154	Identifier	env		764128	0					
ANR	764155	IfStatement	if ( ctype < 0 )		764128	3					
ANR	764156	Condition	ctype < 0	4027:6:89793:89801	764128	0	True				
ANR	764157	RelationalExpression	ctype < 0		764128	0		<			
ANR	764158	Identifier	ctype		764128	0					
ANR	764159	PrimaryExpression	0		764128	1					
ANR	764160	ReturnStatement	return ctype ;	4027:17:89804:89816	764128	1	True				
ANR	764161	Identifier	ctype		764128	0					
ANR	764162	ExpressionStatement	* np = node_new_cclass ( )	4029:2:89821:89844	764128	4	True				
ANR	764163	AssignmentExpression	* np = node_new_cclass ( )		764128	0		=			
ANR	764164	UnaryOperationExpression	* np		764128	0					
ANR	764165	UnaryOperator	*		764128	0					
ANR	764166	Identifier	np		764128	1					
ANR	764167	CallExpression	node_new_cclass ( )		764128	1					
ANR	764168	Callee	node_new_cclass		764128	0					
ANR	764169	Identifier	node_new_cclass		764128	0					
ANR	764170	ArgumentList			764128	1					
ANR	764171	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4030:2:89848:89877	764128	5	True				
ANR	764172	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		764128	0					
ANR	764173	Callee	CHECK_NULL_RETURN_MEMERR		764128	0					
ANR	764174	Identifier	CHECK_NULL_RETURN_MEMERR		764128	0					
ANR	764175	ArgumentList	* np		764128	1					
ANR	764176	Argument	* np		764128	0					
ANR	764177	UnaryOperationExpression	* np		764128	0					
ANR	764178	UnaryOperator	*		764128	0					
ANR	764179	Identifier	np		764128	1					
ANR	764180	ExpressionStatement	cc = NCCLASS ( * np )	4031:2:89881:89898	764128	6	True				
ANR	764181	AssignmentExpression	cc = NCCLASS ( * np )		764128	0		=			
ANR	764182	Identifier	cc		764128	0					
ANR	764183	CallExpression	NCCLASS ( * np )		764128	1					
ANR	764184	Callee	NCCLASS		764128	0					
ANR	764185	Identifier	NCCLASS		764128	0					
ANR	764186	ArgumentList	* np		764128	1					
ANR	764187	Argument	* np		764128	0					
ANR	764188	UnaryOperationExpression	* np		764128	0					
ANR	764189	UnaryOperator	*		764128	0					
ANR	764190	Identifier	np		764128	1					
ANR	764191	ExpressionStatement	"r = add_ctype_to_cc ( cc , ctype , 0 , env )"	4032:2:89902:89940	764128	7	True				
ANR	764192	AssignmentExpression	"r = add_ctype_to_cc ( cc , ctype , 0 , env )"		764128	0		=			
ANR	764193	Identifier	r		764128	0					
ANR	764194	CallExpression	"add_ctype_to_cc ( cc , ctype , 0 , env )"		764128	1					
ANR	764195	Callee	add_ctype_to_cc		764128	0					
ANR	764196	Identifier	add_ctype_to_cc		764128	0					
ANR	764197	ArgumentList	cc		764128	1					
ANR	764198	Argument	cc		764128	0					
ANR	764199	Identifier	cc		764128	0					
ANR	764200	Argument	ctype		764128	1					
ANR	764201	Identifier	ctype		764128	0					
ANR	764202	Argument	0		764128	2					
ANR	764203	PrimaryExpression	0		764128	0					
ANR	764204	Argument	env		764128	3					
ANR	764205	Identifier	env		764128	0					
ANR	764206	IfStatement	if ( r != 0 )		764128	8					
ANR	764207	Condition	r != 0	4033:6:89948:89953	764128	0	True				
ANR	764208	EqualityExpression	r != 0		764128	0		!=			
ANR	764209	Identifier	r		764128	0					
ANR	764210	PrimaryExpression	0		764128	1					
ANR	764211	ReturnStatement	return r ;	4033:14:89956:89964	764128	1	True				
ANR	764212	Identifier	r		764128	0					
ANR	764213	IfStatement	if ( tok -> u . prop . not != 0 )		764128	9					
ANR	764214	Condition	tok -> u . prop . not != 0	4034:6:89972:89991	764128	0	True				
ANR	764215	EqualityExpression	tok -> u . prop . not != 0		764128	0		!=			
ANR	764216	MemberAccess	tok -> u . prop . not		764128	0					
ANR	764217	MemberAccess	tok -> u . prop		764128	0					
ANR	764218	PtrMemberAccess	tok -> u		764128	0					
ANR	764219	Identifier	tok		764128	0					
ANR	764220	Identifier	u		764128	1					
ANR	764221	Identifier	prop		764128	1					
ANR	764222	Identifier	not		764128	1					
ANR	764223	PrimaryExpression	0		764128	1					
ANR	764224	ExpressionStatement	NCCLASS_SET_NOT ( cc )	4034:28:89994:90013	764128	1	True				
ANR	764225	CallExpression	NCCLASS_SET_NOT ( cc )		764128	0					
ANR	764226	Callee	NCCLASS_SET_NOT		764128	0					
ANR	764227	Identifier	NCCLASS_SET_NOT		764128	0					
ANR	764228	ArgumentList	cc		764128	1					
ANR	764229	Argument	cc		764128	0					
ANR	764230	Identifier	cc		764128	0					
ANR	764231	ReturnStatement	return 0 ;	4036:2:90018:90026	764128	10	True				
ANR	764232	PrimaryExpression	0		764128	0					
ANR	764233	ReturnType	static int		764128	1					
ANR	764234	Identifier	parse_char_property		764128	2					
ANR	764235	ParameterList	"Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		764128	3					
ANR	764236	Parameter	Node * * np	4020:20:89623:89631	764128	0	True				
ANR	764237	ParameterType	Node * *		764128	0					
ANR	764238	Identifier	np		764128	1					
ANR	764239	Parameter	OnigToken * tok	4020:31:89634:89647	764128	1	True				
ANR	764240	ParameterType	OnigToken *		764128	0					
ANR	764241	Identifier	tok		764128	1					
ANR	764242	Parameter	UChar * * src	4020:47:89650:89660	764128	2	True				
ANR	764243	ParameterType	UChar * *		764128	0					
ANR	764244	Identifier	src		764128	1					
ANR	764245	Parameter	UChar * end	4020:60:89663:89672	764128	3	True				
ANR	764246	ParameterType	UChar *		764128	0					
ANR	764247	Identifier	end		764128	1					
ANR	764248	Parameter	ScanEnv * env	4021:6:89681:89692	764128	4	True				
ANR	764249	ParameterType	ScanEnv *		764128	0					
ANR	764250	Identifier	env		764128	1					
ANR	764251	CFGEntryNode	ENTRY		764128		True				
ANR	764252	CFGExitNode	EXIT		764128		True				
ANR	764253	Symbol	cc		764128						
ANR	764254	Symbol	np		764128						
ANR	764255	Symbol	src		764128						
ANR	764256	Symbol	node_new_cclass		764128						
ANR	764257	Symbol	* np		764128						
ANR	764258	Symbol	env		764128						
ANR	764259	Symbol	NCCLASS		764128						
ANR	764260	Symbol	tok		764128						
ANR	764261	Symbol	r		764128						
ANR	764262	Symbol	ctype		764128						
ANR	764263	Symbol	tok -> u . prop . not		764128						
ANR	764264	Symbol	add_ctype_to_cc		764128						
ANR	764265	Symbol	end		764128						
ANR	764266	Symbol	* tok		764128						
ANR	764267	Symbol	tok -> u		764128						
ANR	764268	Symbol	fetch_char_property_to_ctype		764128						
ANR	764269	Symbol	tok -> u . prop		764128						
ANR	764270	ClassDef	CCSTATE	4040:0:90032:90101							
ANR	764271	ClassDef	CCVALTYPE	4047:0:90105:90162							
ANR	764272	Function	next_state_class	4053:0:90166:90689							
ANR	764273	FunctionDef	"next_state_class (CClassNode * cc , OnigCodePoint * vs , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env)"		764272	0					
ANR	764274	CompoundStatement		4056:0:90289:90689	764272	0					
ANR	764275	IdentifierDeclStatement	int r ;	4057:2:90293:90298	764272	0	True				
ANR	764276	IdentifierDecl	r		764272	0					
ANR	764277	IdentifierDeclType	int		764272	0					
ANR	764278	Identifier	r		764272	1					
ANR	764279	IfStatement	if ( * state == CCS_RANGE )		764272	1					
ANR	764280	Condition	* state == CCS_RANGE	4059:6:90307:90325	764272	0	True				
ANR	764281	EqualityExpression	* state == CCS_RANGE		764272	0		==			
ANR	764282	UnaryOperationExpression	* state		764272	0					
ANR	764283	UnaryOperator	*		764272	0					
ANR	764284	Identifier	state		764272	1					
ANR	764285	Identifier	CCS_RANGE		764272	1					
ANR	764286	ReturnStatement	return ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE ;	4060:4:90332:90379	764272	1	True				
ANR	764287	Identifier	ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE		764272	0					
ANR	764288	IfStatement	if ( * state == CCS_VALUE && * type != CCV_CLASS )		764272	2					
ANR	764289	Condition	* state == CCS_VALUE && * type != CCV_CLASS	4062:6:90388:90428	764272	0	True				
ANR	764290	AndExpression	* state == CCS_VALUE && * type != CCV_CLASS		764272	0		&&			
ANR	764291	EqualityExpression	* state == CCS_VALUE		764272	0		==			
ANR	764292	UnaryOperationExpression	* state		764272	0					
ANR	764293	UnaryOperator	*		764272	0					
ANR	764294	Identifier	state		764272	1					
ANR	764295	Identifier	CCS_VALUE		764272	1					
ANR	764296	EqualityExpression	* type != CCV_CLASS		764272	1		!=			
ANR	764297	UnaryOperationExpression	* type		764272	0					
ANR	764298	UnaryOperator	*		764272	0					
ANR	764299	Identifier	type		764272	1					
ANR	764300	Identifier	CCV_CLASS		764272	1					
ANR	764301	CompoundStatement		7:49:141:141	764272	1					
ANR	764302	IfStatement	if ( * type == CCV_SB )		764272	0					
ANR	764303	Condition	* type == CCV_SB	4063:8:90441:90455	764272	0	True				
ANR	764304	EqualityExpression	* type == CCV_SB		764272	0		==			
ANR	764305	UnaryOperationExpression	* type		764272	0					
ANR	764306	UnaryOperator	*		764272	0					
ANR	764307	Identifier	type		764272	1					
ANR	764308	Identifier	CCV_SB		764272	1					
ANR	764309	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"	4064:6:90464:90499	764272	1	True				
ANR	764310	CallExpression	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"		764272	0					
ANR	764311	Callee	BITSET_SET_BIT		764272	0					
ANR	764312	Identifier	BITSET_SET_BIT		764272	0					
ANR	764313	ArgumentList	cc -> bs		764272	1					
ANR	764314	Argument	cc -> bs		764272	0					
ANR	764315	PtrMemberAccess	cc -> bs		764272	0					
ANR	764316	Identifier	cc		764272	0					
ANR	764317	Identifier	bs		764272	1					
ANR	764318	Argument	( int ) ( * vs )		764272	1					
ANR	764319	CastExpression	( int ) ( * vs )		764272	0					
ANR	764320	CastTarget	int		764272	0					
ANR	764321	UnaryOperationExpression	* vs		764272	1					
ANR	764322	UnaryOperator	*		764272	0					
ANR	764323	Identifier	vs		764272	1					
ANR	764324	ElseStatement	else		764272	0					
ANR	764325	IfStatement	if ( * type == CCV_CODE_POINT )		764272	0					
ANR	764326	Condition	* type == CCV_CODE_POINT	4065:13:90514:90536	764272	0	True				
ANR	764327	EqualityExpression	* type == CCV_CODE_POINT		764272	0		==			
ANR	764328	UnaryOperationExpression	* type		764272	0					
ANR	764329	UnaryOperator	*		764272	0					
ANR	764330	Identifier	type		764272	1					
ANR	764331	Identifier	CCV_CODE_POINT		764272	1					
ANR	764332	CompoundStatement		10:38:249:249	764272	1					
ANR	764333	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"	4066:6:90547:90593	764272	0	True				
ANR	764334	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		764272	0		=			
ANR	764335	Identifier	r		764272	0					
ANR	764336	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		764272	1					
ANR	764337	Callee	add_code_range		764272	0					
ANR	764338	Identifier	add_code_range		764272	0					
ANR	764339	ArgumentList	& ( cc -> mbuf )		764272	1					
ANR	764340	Argument	& ( cc -> mbuf )		764272	0					
ANR	764341	UnaryOperationExpression	& ( cc -> mbuf )		764272	0					
ANR	764342	UnaryOperator	&		764272	0					
ANR	764343	PtrMemberAccess	cc -> mbuf		764272	1					
ANR	764344	Identifier	cc		764272	0					
ANR	764345	Identifier	mbuf		764272	1					
ANR	764346	Argument	env		764272	1					
ANR	764347	Identifier	env		764272	0					
ANR	764348	Argument	* vs		764272	2					
ANR	764349	UnaryOperationExpression	* vs		764272	0					
ANR	764350	UnaryOperator	*		764272	0					
ANR	764351	Identifier	vs		764272	1					
ANR	764352	Argument	* vs		764272	3					
ANR	764353	UnaryOperationExpression	* vs		764272	0					
ANR	764354	UnaryOperator	*		764272	0					
ANR	764355	Identifier	vs		764272	1					
ANR	764356	IfStatement	if ( r < 0 )		764272	1					
ANR	764357	Condition	r < 0	4067:10:90605:90609	764272	0	True				
ANR	764358	RelationalExpression	r < 0		764272	0		<			
ANR	764359	Identifier	r		764272	0					
ANR	764360	PrimaryExpression	0		764272	1					
ANR	764361	ReturnStatement	return r ;	4067:17:90612:90620	764272	1	True				
ANR	764362	Identifier	r		764272	0					
ANR	764363	ExpressionStatement	* state = CCS_VALUE	4071:2:90635:90653	764272	3	True				
ANR	764364	AssignmentExpression	* state = CCS_VALUE		764272	0		=			
ANR	764365	UnaryOperationExpression	* state		764272	0					
ANR	764366	UnaryOperator	*		764272	0					
ANR	764367	Identifier	state		764272	1					
ANR	764368	Identifier	CCS_VALUE		764272	1					
ANR	764369	ExpressionStatement	* type = CCV_CLASS	4072:2:90657:90675	764272	4	True				
ANR	764370	AssignmentExpression	* type = CCV_CLASS		764272	0		=			
ANR	764371	UnaryOperationExpression	* type		764272	0					
ANR	764372	UnaryOperator	*		764272	0					
ANR	764373	Identifier	type		764272	1					
ANR	764374	Identifier	CCV_CLASS		764272	1					
ANR	764375	ReturnStatement	return 0 ;	4073:2:90679:90687	764272	5	True				
ANR	764376	PrimaryExpression	0		764272	0					
ANR	764377	ReturnType	static int		764272	1					
ANR	764378	Identifier	next_state_class		764272	2					
ANR	764379	ParameterList	"CClassNode * cc , OnigCodePoint * vs , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env"		764272	3					
ANR	764380	Parameter	CClassNode * cc	4054:17:90194:90207	764272	0	True				
ANR	764381	ParameterType	CClassNode *		764272	0					
ANR	764382	Identifier	cc		764272	1					
ANR	764383	Parameter	OnigCodePoint * vs	4054:33:90210:90226	764272	1	True				
ANR	764384	ParameterType	OnigCodePoint *		764272	0					
ANR	764385	Identifier	vs		764272	1					
ANR	764386	Parameter	enum CCVALTYPE * type	4054:52:90229:90248	764272	2	True				
ANR	764387	ParameterType	enum CCVALTYPE *		764272	0					
ANR	764388	Identifier	type		764272	1					
ANR	764389	Parameter	enum CCSTATE * state	4055:3:90254:90272	764272	3	True				
ANR	764390	ParameterType	enum CCSTATE *		764272	0					
ANR	764391	Identifier	state		764272	1					
ANR	764392	Parameter	ScanEnv * env	4055:24:90275:90286	764272	4	True				
ANR	764393	ParameterType	ScanEnv *		764272	0					
ANR	764394	Identifier	env		764272	1					
ANR	764395	CFGEntryNode	ENTRY		764272		True				
ANR	764396	CFGExitNode	EXIT		764272		True				
ANR	764397	Symbol	cc		764272						
ANR	764398	Symbol	* vs		764272						
ANR	764399	Symbol	add_code_range		764272						
ANR	764400	Symbol	* cc		764272						
ANR	764401	Symbol	CCS_RANGE		764272						
ANR	764402	Symbol	type		764272						
ANR	764403	Symbol	env		764272						
ANR	764404	Symbol	ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE		764272						
ANR	764405	Symbol	cc -> bs		764272						
ANR	764406	Symbol	* state		764272						
ANR	764407	Symbol	CCV_CLASS		764272						
ANR	764408	Symbol	r		764272						
ANR	764409	Symbol	* type		764272						
ANR	764410	Symbol	CCV_SB		764272						
ANR	764411	Symbol	CCS_VALUE		764272						
ANR	764412	Symbol	CCV_CODE_POINT		764272						
ANR	764413	Symbol	state		764272						
ANR	764414	Symbol	& cc -> mbuf		764272						
ANR	764415	Symbol	vs		764272						
ANR	764416	Function	next_state_val	4076:0:90692:92363							
ANR	764417	FunctionDef	"next_state_val (CClassNode * cc , OnigCodePoint * vs , OnigCodePoint v , int * vs_israw , int v_israw , enum CCVALTYPE intype , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env)"		764416	0					
ANR	764418	CompoundStatement		4081:0:90902:92363	764416	0					
ANR	764419	IdentifierDeclStatement	int r ;	4082:2:90906:90911	764416	0	True				
ANR	764420	IdentifierDecl	r		764416	0					
ANR	764421	IdentifierDeclType	int		764416	0					
ANR	764422	Identifier	r		764416	1					
ANR	764423	SwitchStatement	switch ( * state )		764416	1					
ANR	764424	Condition	* state	4084:10:90924:90929	764416	0	True				
ANR	764425	UnaryOperationExpression	* state		764416	0					
ANR	764426	UnaryOperator	*		764416	0					
ANR	764427	Identifier	state		764416	1					
ANR	764428	CompoundStatement		4:18:29:29	764416	1					
ANR	764429	Label	case CCS_VALUE :	4085:2:90936:90950	764416	0	True				
ANR	764430	Identifier	CCS_VALUE		764416	0					
ANR	764431	IfStatement	if ( * type == CCV_SB )		764416	1					
ANR	764432	Condition	* type == CCV_SB	4086:8:90960:90974	764416	0	True				
ANR	764433	EqualityExpression	* type == CCV_SB		764416	0		==			
ANR	764434	UnaryOperationExpression	* type		764416	0					
ANR	764435	UnaryOperator	*		764416	0					
ANR	764436	Identifier	type		764416	1					
ANR	764437	Identifier	CCV_SB		764416	1					
ANR	764438	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"	4087:6:90983:91018	764416	1	True				
ANR	764439	CallExpression	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"		764416	0					
ANR	764440	Callee	BITSET_SET_BIT		764416	0					
ANR	764441	Identifier	BITSET_SET_BIT		764416	0					
ANR	764442	ArgumentList	cc -> bs		764416	1					
ANR	764443	Argument	cc -> bs		764416	0					
ANR	764444	PtrMemberAccess	cc -> bs		764416	0					
ANR	764445	Identifier	cc		764416	0					
ANR	764446	Identifier	bs		764416	1					
ANR	764447	Argument	( int ) ( * vs )		764416	1					
ANR	764448	CastExpression	( int ) ( * vs )		764416	0					
ANR	764449	CastTarget	int		764416	0					
ANR	764450	UnaryOperationExpression	* vs		764416	1					
ANR	764451	UnaryOperator	*		764416	0					
ANR	764452	Identifier	vs		764416	1					
ANR	764453	ElseStatement	else		764416	0					
ANR	764454	IfStatement	if ( * type == CCV_CODE_POINT )		764416	0					
ANR	764455	Condition	* type == CCV_CODE_POINT	4088:13:91033:91055	764416	0	True				
ANR	764456	EqualityExpression	* type == CCV_CODE_POINT		764416	0		==			
ANR	764457	UnaryOperationExpression	* type		764416	0					
ANR	764458	UnaryOperator	*		764416	0					
ANR	764459	Identifier	type		764416	1					
ANR	764460	Identifier	CCV_CODE_POINT		764416	1					
ANR	764461	CompoundStatement		8:38:155:155	764416	1					
ANR	764462	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"	4089:6:91066:91112	764416	0	True				
ANR	764463	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		764416	0		=			
ANR	764464	Identifier	r		764416	0					
ANR	764465	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		764416	1					
ANR	764466	Callee	add_code_range		764416	0					
ANR	764467	Identifier	add_code_range		764416	0					
ANR	764468	ArgumentList	& ( cc -> mbuf )		764416	1					
ANR	764469	Argument	& ( cc -> mbuf )		764416	0					
ANR	764470	UnaryOperationExpression	& ( cc -> mbuf )		764416	0					
ANR	764471	UnaryOperator	&		764416	0					
ANR	764472	PtrMemberAccess	cc -> mbuf		764416	1					
ANR	764473	Identifier	cc		764416	0					
ANR	764474	Identifier	mbuf		764416	1					
ANR	764475	Argument	env		764416	1					
ANR	764476	Identifier	env		764416	0					
ANR	764477	Argument	* vs		764416	2					
ANR	764478	UnaryOperationExpression	* vs		764416	0					
ANR	764479	UnaryOperator	*		764416	0					
ANR	764480	Identifier	vs		764416	1					
ANR	764481	Argument	* vs		764416	3					
ANR	764482	UnaryOperationExpression	* vs		764416	0					
ANR	764483	UnaryOperator	*		764416	0					
ANR	764484	Identifier	vs		764416	1					
ANR	764485	IfStatement	if ( r < 0 )		764416	1					
ANR	764486	Condition	r < 0	4090:10:91124:91128	764416	0	True				
ANR	764487	RelationalExpression	r < 0		764416	0		<			
ANR	764488	Identifier	r		764416	0					
ANR	764489	PrimaryExpression	0		764416	1					
ANR	764490	ReturnStatement	return r ;	4090:17:91131:91139	764416	1	True				
ANR	764491	Identifier	r		764416	0					
ANR	764492	BreakStatement	break ;	4092:4:91151:91156	764416	2	True				
ANR	764493	Label	case CCS_RANGE :	4094:2:91161:91175	764416	3	True				
ANR	764494	Identifier	CCS_RANGE		764416	0					
ANR	764495	IfStatement	if ( intype == * type )		764416	4					
ANR	764496	Condition	intype == * type	4095:8:91185:91199	764416	0	True				
ANR	764497	EqualityExpression	intype == * type		764416	0		==			
ANR	764498	Identifier	intype		764416	0					
ANR	764499	UnaryOperationExpression	* type		764416	1					
ANR	764500	UnaryOperator	*		764416	0					
ANR	764501	Identifier	type		764416	1					
ANR	764502	CompoundStatement		15:25:299:299	764416	1					
ANR	764503	IfStatement	if ( intype == CCV_SB )		764416	0					
ANR	764504	Condition	intype == CCV_SB	4096:10:91214:91229	764416	0	True				
ANR	764505	EqualityExpression	intype == CCV_SB		764416	0		==			
ANR	764506	Identifier	intype		764416	0					
ANR	764507	Identifier	CCV_SB		764416	1					
ANR	764508	CompoundStatement		16:28:329:329	764416	1					
ANR	764509	IfStatement	if ( * vs > 0xff || v > 0xff )		764416	0					
ANR	764510	Condition	* vs > 0xff || v > 0xff	4097:12:91246:91267	764416	0	True				
ANR	764511	OrExpression	* vs > 0xff || v > 0xff		764416	0		||			
ANR	764512	RelationalExpression	* vs > 0xff		764416	0		>			
ANR	764513	UnaryOperationExpression	* vs		764416	0					
ANR	764514	UnaryOperator	*		764416	0					
ANR	764515	Identifier	vs		764416	1					
ANR	764516	PrimaryExpression	0xff		764416	1					
ANR	764517	RelationalExpression	v > 0xff		764416	1		>			
ANR	764518	Identifier	v		764416	0					
ANR	764519	PrimaryExpression	0xff		764416	1					
ANR	764520	ReturnStatement	return ONIGERR_INVALID_CODE_POINT_VALUE ;	4098:10:91280:91319	764416	1	True				
ANR	764521	Identifier	ONIGERR_INVALID_CODE_POINT_VALUE		764416	0					
ANR	764522	IfStatement	if ( * vs > v )		764416	1					
ANR	764523	Condition	* vs > v	4100:5:91327:91333	764416	0	True				
ANR	764524	RelationalExpression	* vs > v		764416	0		>			
ANR	764525	UnaryOperationExpression	* vs		764416	0					
ANR	764526	UnaryOperator	*		764416	0					
ANR	764527	Identifier	vs		764416	1					
ANR	764528	Identifier	v		764416	1					
ANR	764529	CompoundStatement		20:14:433:433	764416	1					
ANR	764530	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		764416	0					
ANR	764531	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	4101:7:91345:91403	764416	0	True				
ANR	764532	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		764416	0					
ANR	764533	Callee	IS_SYNTAX_BV		764416	0					
ANR	764534	Identifier	IS_SYNTAX_BV		764416	0					
ANR	764535	ArgumentList	env -> syntax		764416	1					
ANR	764536	Argument	env -> syntax		764416	0					
ANR	764537	PtrMemberAccess	env -> syntax		764416	0					
ANR	764538	Identifier	env		764416	0					
ANR	764539	Identifier	syntax		764416	1					
ANR	764540	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		764416	1					
ANR	764541	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		764416	0					
ANR	764542	GotoStatement	goto ccs_range_end ;	4102:5:91411:91429	764416	1	True				
ANR	764543	Identifier	ccs_range_end		764416	0					
ANR	764544	ElseStatement	else		764416	0					
ANR	764545	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	4104:5:91444:91484	764416	0	True				
ANR	764546	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		764416	0					
ANR	764547	ExpressionStatement	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) v )"	4106:1:91490:91534	764416	2	True				
ANR	764548	CallExpression	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) v )"		764416	0					
ANR	764549	Callee	bitset_set_range		764416	0					
ANR	764550	Identifier	bitset_set_range		764416	0					
ANR	764551	ArgumentList	cc -> bs		764416	1					
ANR	764552	Argument	cc -> bs		764416	0					
ANR	764553	PtrMemberAccess	cc -> bs		764416	0					
ANR	764554	Identifier	cc		764416	0					
ANR	764555	Identifier	bs		764416	1					
ANR	764556	Argument	( int ) * vs		764416	1					
ANR	764557	CastExpression	( int ) * vs		764416	0					
ANR	764558	CastTarget	int		764416	0					
ANR	764559	UnaryOperationExpression	* vs		764416	1					
ANR	764560	UnaryOperator	*		764416	0					
ANR	764561	Identifier	vs		764416	1					
ANR	764562	Argument	( int ) v		764416	2					
ANR	764563	CastExpression	( int ) v		764416	0					
ANR	764564	CastTarget	int		764416	0					
ANR	764565	Identifier	v		764416	1					
ANR	764566	ElseStatement	else		764416	0					
ANR	764567	CompoundStatement		28:11:652:652	764416	0					
ANR	764568	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"	4109:1:91558:91602	764416	0	True				
ANR	764569	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"		764416	0		=			
ANR	764570	Identifier	r		764416	0					
ANR	764571	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"		764416	1					
ANR	764572	Callee	add_code_range		764416	0					
ANR	764573	Identifier	add_code_range		764416	0					
ANR	764574	ArgumentList	& ( cc -> mbuf )		764416	1					
ANR	764575	Argument	& ( cc -> mbuf )		764416	0					
ANR	764576	UnaryOperationExpression	& ( cc -> mbuf )		764416	0					
ANR	764577	UnaryOperator	&		764416	0					
ANR	764578	PtrMemberAccess	cc -> mbuf		764416	1					
ANR	764579	Identifier	cc		764416	0					
ANR	764580	Identifier	mbuf		764416	1					
ANR	764581	Argument	env		764416	1					
ANR	764582	Identifier	env		764416	0					
ANR	764583	Argument	* vs		764416	2					
ANR	764584	UnaryOperationExpression	* vs		764416	0					
ANR	764585	UnaryOperator	*		764416	0					
ANR	764586	Identifier	vs		764416	1					
ANR	764587	Argument	v		764416	3					
ANR	764588	Identifier	v		764416	0					
ANR	764589	IfStatement	if ( r < 0 )		764416	1					
ANR	764590	Condition	r < 0	4110:5:91609:91613	764416	0	True				
ANR	764591	RelationalExpression	r < 0		764416	0		<			
ANR	764592	Identifier	r		764416	0					
ANR	764593	PrimaryExpression	0		764416	1					
ANR	764594	ReturnStatement	return r ;	4110:12:91616:91624	764416	1	True				
ANR	764595	Identifier	r		764416	0					
ANR	764596	ElseStatement	else		764416	0					
ANR	764597	CompoundStatement		33:9:746:746	764416	0					
ANR	764598	IfStatement	if ( intype == CCV_CODE_POINT && * type == CCV_SB )		764416	0					
ANR	764599	Condition	intype == CCV_CODE_POINT && * type == CCV_SB	4115:10:91667:91709	764416	0	True				
ANR	764600	AndExpression	intype == CCV_CODE_POINT && * type == CCV_SB		764416	0		&&			
ANR	764601	EqualityExpression	intype == CCV_CODE_POINT		764416	0		==			
ANR	764602	Identifier	intype		764416	0					
ANR	764603	Identifier	CCV_CODE_POINT		764416	1					
ANR	764604	EqualityExpression	* type == CCV_SB		764416	1		==			
ANR	764605	UnaryOperationExpression	* type		764416	0					
ANR	764606	UnaryOperator	*		764416	0					
ANR	764607	Identifier	type		764416	1					
ANR	764608	Identifier	CCV_SB		764416	1					
ANR	764609	CompoundStatement		35:55:809:809	764416	1					
ANR	764610	IfStatement	if ( * vs > v )		764416	0					
ANR	764611	Condition	* vs > v	4117:5:91726:91732	764416	0	True				
ANR	764612	RelationalExpression	* vs > v		764416	0		>			
ANR	764613	UnaryOperationExpression	* vs		764416	0					
ANR	764614	UnaryOperator	*		764416	0					
ANR	764615	Identifier	vs		764416	1					
ANR	764616	Identifier	v		764416	1					
ANR	764617	CompoundStatement		37:14:832:832	764416	1					
ANR	764618	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		764416	0					
ANR	764619	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	4118:7:91744:91802	764416	0	True				
ANR	764620	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		764416	0					
ANR	764621	Callee	IS_SYNTAX_BV		764416	0					
ANR	764622	Identifier	IS_SYNTAX_BV		764416	0					
ANR	764623	ArgumentList	env -> syntax		764416	1					
ANR	764624	Argument	env -> syntax		764416	0					
ANR	764625	PtrMemberAccess	env -> syntax		764416	0					
ANR	764626	Identifier	env		764416	0					
ANR	764627	Identifier	syntax		764416	1					
ANR	764628	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		764416	1					
ANR	764629	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		764416	0					
ANR	764630	GotoStatement	goto ccs_range_end ;	4119:5:91810:91828	764416	1	True				
ANR	764631	Identifier	ccs_range_end		764416	0					
ANR	764632	ElseStatement	else		764416	0					
ANR	764633	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	4121:5:91843:91883	764416	0	True				
ANR	764634	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		764416	0					
ANR	764635	ExpressionStatement	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) ( v < 0xff ? v : 0xff ) )"	4123:1:91889:91953	764416	1	True				
ANR	764636	CallExpression	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) ( v < 0xff ? v : 0xff ) )"		764416	0					
ANR	764637	Callee	bitset_set_range		764416	0					
ANR	764638	Identifier	bitset_set_range		764416	0					
ANR	764639	ArgumentList	cc -> bs		764416	1					
ANR	764640	Argument	cc -> bs		764416	0					
ANR	764641	PtrMemberAccess	cc -> bs		764416	0					
ANR	764642	Identifier	cc		764416	0					
ANR	764643	Identifier	bs		764416	1					
ANR	764644	Argument	( int ) * vs		764416	1					
ANR	764645	CastExpression	( int ) * vs		764416	0					
ANR	764646	CastTarget	int		764416	0					
ANR	764647	UnaryOperationExpression	* vs		764416	1					
ANR	764648	UnaryOperator	*		764416	0					
ANR	764649	Identifier	vs		764416	1					
ANR	764650	Argument	( int ) ( v < 0xff ? v : 0xff )		764416	2					
ANR	764651	CastExpression	( int ) ( v < 0xff ? v : 0xff )		764416	0					
ANR	764652	CastTarget	int		764416	0					
ANR	764653	ConditionalExpression	v < 0xff ? v : 0xff		764416	1					
ANR	764654	Condition	v < 0xff		764416	0					
ANR	764655	RelationalExpression	v < 0xff		764416	0		<			
ANR	764656	Identifier	v		764416	0					
ANR	764657	PrimaryExpression	0xff		764416	1					
ANR	764658	Identifier	v		764416	1					
ANR	764659	PrimaryExpression	0xff		764416	2					
ANR	764660	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"	4124:1:91956:92016	764416	2	True				
ANR	764661	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"		764416	0		=			
ANR	764662	Identifier	r		764416	0					
ANR	764663	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"		764416	1					
ANR	764664	Callee	add_code_range		764416	0					
ANR	764665	Identifier	add_code_range		764416	0					
ANR	764666	ArgumentList	& ( cc -> mbuf )		764416	1					
ANR	764667	Argument	& ( cc -> mbuf )		764416	0					
ANR	764668	UnaryOperationExpression	& ( cc -> mbuf )		764416	0					
ANR	764669	UnaryOperator	&		764416	0					
ANR	764670	PtrMemberAccess	cc -> mbuf		764416	1					
ANR	764671	Identifier	cc		764416	0					
ANR	764672	Identifier	mbuf		764416	1					
ANR	764673	Argument	env		764416	1					
ANR	764674	Identifier	env		764416	0					
ANR	764675	Argument	( OnigCodePoint ) * vs		764416	2					
ANR	764676	CastExpression	( OnigCodePoint ) * vs		764416	0					
ANR	764677	CastTarget	OnigCodePoint		764416	0					
ANR	764678	UnaryOperationExpression	* vs		764416	1					
ANR	764679	UnaryOperator	*		764416	0					
ANR	764680	Identifier	vs		764416	1					
ANR	764681	Argument	v		764416	3					
ANR	764682	Identifier	v		764416	0					
ANR	764683	IfStatement	if ( r < 0 )		764416	3					
ANR	764684	Condition	r < 0	4125:5:92023:92027	764416	0	True				
ANR	764685	RelationalExpression	r < 0		764416	0		<			
ANR	764686	Identifier	r		764416	0					
ANR	764687	PrimaryExpression	0		764416	1					
ANR	764688	ReturnStatement	return r ;	4125:12:92030:92038	764416	1	True				
ANR	764689	Identifier	r		764416	0					
ANR	764690	ElseStatement	else		764416	0					
ANR	764691	ReturnStatement	return ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE ;	4129:1:92066:92116	764416	0	True				
ANR	764692	Identifier	ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE		764416	0					
ANR	764693	Label	ccs_range_end :	4132:2:92133:92146	764416	5	True				
ANR	764694	Identifier	ccs_range_end		764416	0					
ANR	764695	ExpressionStatement	* state = CCS_COMPLETE	4133:4:92152:92173	764416	6	True				
ANR	764696	AssignmentExpression	* state = CCS_COMPLETE		764416	0		=			
ANR	764697	UnaryOperationExpression	* state		764416	0					
ANR	764698	UnaryOperator	*		764416	0					
ANR	764699	Identifier	state		764416	1					
ANR	764700	Identifier	CCS_COMPLETE		764416	1					
ANR	764701	BreakStatement	break ;	4134:4:92179:92184	764416	7	True				
ANR	764702	Label	case CCS_COMPLETE :	4136:2:92189:92206	764416	8	True				
ANR	764703	Identifier	CCS_COMPLETE		764416	0					
ANR	764704	Label	case CCS_START :	4137:2:92210:92224	764416	9	True				
ANR	764705	Identifier	CCS_START		764416	0					
ANR	764706	ExpressionStatement	* state = CCS_VALUE	4138:4:92230:92248	764416	10	True				
ANR	764707	AssignmentExpression	* state = CCS_VALUE		764416	0		=			
ANR	764708	UnaryOperationExpression	* state		764416	0					
ANR	764709	UnaryOperator	*		764416	0					
ANR	764710	Identifier	state		764416	1					
ANR	764711	Identifier	CCS_VALUE		764416	1					
ANR	764712	BreakStatement	break ;	4139:4:92254:92259	764416	11	True				
ANR	764713	Label	default :	4141:2:92264:92271	764416	12	True				
ANR	764714	Identifier	default		764416	0					
ANR	764715	BreakStatement	break ;	4142:4:92277:92282	764416	13	True				
ANR	764716	ExpressionStatement	* vs_israw = v_israw	4145:2:92291:92310	764416	2	True				
ANR	764717	AssignmentExpression	* vs_israw = v_israw		764416	0		=			
ANR	764718	UnaryOperationExpression	* vs_israw		764416	0					
ANR	764719	UnaryOperator	*		764416	0					
ANR	764720	Identifier	vs_israw		764416	1					
ANR	764721	Identifier	v_israw		764416	1					
ANR	764722	ExpressionStatement	* vs = v	4146:2:92314:92327	764416	3	True				
ANR	764723	AssignmentExpression	* vs = v		764416	0		=			
ANR	764724	UnaryOperationExpression	* vs		764416	0					
ANR	764725	UnaryOperator	*		764416	0					
ANR	764726	Identifier	vs		764416	1					
ANR	764727	Identifier	v		764416	1					
ANR	764728	ExpressionStatement	* type = intype	4147:2:92331:92349	764416	4	True				
ANR	764729	AssignmentExpression	* type = intype		764416	0		=			
ANR	764730	UnaryOperationExpression	* type		764416	0					
ANR	764731	UnaryOperator	*		764416	0					
ANR	764732	Identifier	type		764416	1					
ANR	764733	Identifier	intype		764416	1					
ANR	764734	ReturnStatement	return 0 ;	4148:2:92353:92361	764416	5	True				
ANR	764735	PrimaryExpression	0		764416	0					
ANR	764736	ReturnType	static int		764416	1					
ANR	764737	Identifier	next_state_val		764416	2					
ANR	764738	ParameterList	"CClassNode * cc , OnigCodePoint * vs , OnigCodePoint v , int * vs_israw , int v_israw , enum CCVALTYPE intype , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env"		764416	3					
ANR	764739	Parameter	CClassNode * cc	4077:15:90718:90731	764416	0	True				
ANR	764740	ParameterType	CClassNode *		764416	0					
ANR	764741	Identifier	cc		764416	1					
ANR	764742	Parameter	OnigCodePoint * vs	4077:31:90734:90750	764416	1	True				
ANR	764743	ParameterType	OnigCodePoint *		764416	0					
ANR	764744	Identifier	vs		764416	1					
ANR	764745	Parameter	OnigCodePoint v	4077:50:90753:90767	764416	2	True				
ANR	764746	ParameterType	OnigCodePoint		764416	0					
ANR	764747	Identifier	v		764416	1					
ANR	764748	Parameter	int * vs_israw	4078:8:90778:90790	764416	3	True				
ANR	764749	ParameterType	int *		764416	0					
ANR	764750	Identifier	vs_israw		764416	1					
ANR	764751	Parameter	int v_israw	4078:23:90793:90803	764416	4	True				
ANR	764752	ParameterType	int		764416	0					
ANR	764753	Identifier	v_israw		764416	1					
ANR	764754	Parameter	enum CCVALTYPE intype	4079:8:90814:90834	764416	5	True				
ANR	764755	ParameterType	enum CCVALTYPE		764416	0					
ANR	764756	Identifier	intype		764416	1					
ANR	764757	Parameter	enum CCVALTYPE * type	4079:31:90837:90856	764416	6	True				
ANR	764758	ParameterType	enum CCVALTYPE *		764416	0					
ANR	764759	Identifier	type		764416	1					
ANR	764760	Parameter	enum CCSTATE * state	4080:8:90867:90885	764416	7	True				
ANR	764761	ParameterType	enum CCSTATE *		764416	0					
ANR	764762	Identifier	state		764416	1					
ANR	764763	Parameter	ScanEnv * env	4080:29:90888:90899	764416	8	True				
ANR	764764	ParameterType	ScanEnv *		764416	0					
ANR	764765	Identifier	env		764416	1					
ANR	764766	CFGEntryNode	ENTRY		764416		True				
ANR	764767	CFGExitNode	EXIT		764416		True				
ANR	764768	Symbol	ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE		764416						
ANR	764769	Symbol	* cc		764416						
ANR	764770	Symbol	v_israw		764416						
ANR	764771	Symbol	type		764416						
ANR	764772	Symbol	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		764416						
ANR	764773	Symbol	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		764416						
ANR	764774	Symbol	CCV_SB		764416						
ANR	764775	Symbol	* type		764416						
ANR	764776	Symbol	ONIGERR_INVALID_CODE_POINT_VALUE		764416						
ANR	764777	Symbol	IS_SYNTAX_BV		764416						
ANR	764778	Symbol	* vs_israw		764416						
ANR	764779	Symbol	state		764416						
ANR	764780	Symbol	& cc -> mbuf		764416						
ANR	764781	Symbol	cc		764416						
ANR	764782	Symbol	* vs		764416						
ANR	764783	Symbol	add_code_range		764416						
ANR	764784	Symbol	* env		764416						
ANR	764785	Symbol	env		764416						
ANR	764786	Symbol	vs_israw		764416						
ANR	764787	Symbol	intype		764416						
ANR	764788	Symbol	env -> syntax		764416						
ANR	764789	Symbol	cc -> bs		764416						
ANR	764790	Symbol	* state		764416						
ANR	764791	Symbol	r		764416						
ANR	764792	Symbol	v		764416						
ANR	764793	Symbol	CCS_VALUE		764416						
ANR	764794	Symbol	CCV_CODE_POINT		764416						
ANR	764795	Symbol	CCS_COMPLETE		764416						
ANR	764796	Symbol	vs		764416						
ANR	764797	Function	code_exist_check	4151:0:92366:92792							
ANR	764798	FunctionDef	"code_exist_check (OnigCodePoint c , UChar * from , UChar * end , int ignore_escaped , ScanEnv * env)"		764797	0					
ANR	764799	CompoundStatement		4154:0:92473:92792	764797	0					
ANR	764800	IdentifierDeclStatement	int in_esc ;	4155:2:92477:92487	764797	0	True				
ANR	764801	IdentifierDecl	in_esc		764797	0					
ANR	764802	IdentifierDeclType	int		764797	0					
ANR	764803	Identifier	in_esc		764797	1					
ANR	764804	IdentifierDeclStatement	OnigCodePoint code ;	4156:2:92491:92509	764797	1	True				
ANR	764805	IdentifierDecl	code		764797	0					
ANR	764806	IdentifierDeclType	OnigCodePoint		764797	0					
ANR	764807	Identifier	code		764797	1					
ANR	764808	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	4157:2:92513:92540	764797	2	True				
ANR	764809	IdentifierDecl	enc = env -> enc		764797	0					
ANR	764810	IdentifierDeclType	OnigEncoding		764797	0					
ANR	764811	Identifier	enc		764797	1					
ANR	764812	AssignmentExpression	enc = env -> enc		764797	2		=			
ANR	764813	Identifier	enc		764797	0					
ANR	764814	PtrMemberAccess	env -> enc		764797	1					
ANR	764815	Identifier	env		764797	0					
ANR	764816	Identifier	enc		764797	1					
ANR	764817	IdentifierDeclStatement	UChar * p = from ;	4158:2:92544:92559	764797	3	True				
ANR	764818	IdentifierDecl	* p = from		764797	0					
ANR	764819	IdentifierDeclType	UChar *		764797	0					
ANR	764820	Identifier	p		764797	1					
ANR	764821	AssignmentExpression	* p = from		764797	2		=			
ANR	764822	Identifier	from		764797	0					
ANR	764823	Identifier	from		764797	1					
ANR	764824	ExpressionStatement	in_esc = 0	4160:2:92564:92574	764797	4	True				
ANR	764825	AssignmentExpression	in_esc = 0		764797	0		=			
ANR	764826	Identifier	in_esc		764797	0					
ANR	764827	PrimaryExpression	0		764797	1					
ANR	764828	WhileStatement	while ( ! PEND )		764797	5					
ANR	764829	Condition	! PEND	4161:9:92585:92590	764797	0	True				
ANR	764830	UnaryOperationExpression	! PEND		764797	0					
ANR	764831	UnaryOperator	!		764797	0					
ANR	764832	Identifier	PEND		764797	1					
ANR	764833	CompoundStatement		8:17:119:119	764797	1					
ANR	764834	IfStatement	if ( ignore_escaped && in_esc )		764797	0					
ANR	764835	Condition	ignore_escaped && in_esc	4162:8:92603:92626	764797	0	True				
ANR	764836	AndExpression	ignore_escaped && in_esc		764797	0		&&			
ANR	764837	Identifier	ignore_escaped		764797	0					
ANR	764838	Identifier	in_esc		764797	1					
ANR	764839	CompoundStatement		9:34:155:155	764797	1					
ANR	764840	ExpressionStatement	in_esc = 0	4163:6:92637:92647	764797	0	True				
ANR	764841	AssignmentExpression	in_esc = 0		764797	0		=			
ANR	764842	Identifier	in_esc		764797	0					
ANR	764843	PrimaryExpression	0		764797	1					
ANR	764844	ElseStatement	else		764797	0					
ANR	764845	CompoundStatement		12:9:190:190	764797	0					
ANR	764846	ExpressionStatement	PFETCH_S ( code )	4166:6:92672:92686	764797	0	True				
ANR	764847	CallExpression	PFETCH_S ( code )		764797	0					
ANR	764848	Callee	PFETCH_S		764797	0					
ANR	764849	Identifier	PFETCH_S		764797	0					
ANR	764850	ArgumentList	code		764797	1					
ANR	764851	Argument	code		764797	0					
ANR	764852	Identifier	code		764797	0					
ANR	764853	IfStatement	if ( code == c )		764797	1					
ANR	764854	Condition	code == c	4167:10:92698:92706	764797	0	True				
ANR	764855	EqualityExpression	code == c		764797	0		==			
ANR	764856	Identifier	code		764797	0					
ANR	764857	Identifier	c		764797	1					
ANR	764858	ReturnStatement	return 1 ;	4167:21:92709:92717	764797	1	True				
ANR	764859	PrimaryExpression	1		764797	0					
ANR	764860	IfStatement	if ( code == MC_ESC ( env -> syntax ) )		764797	2					
ANR	764861	Condition	code == MC_ESC ( env -> syntax )	4168:10:92729:92755	764797	0	True				
ANR	764862	EqualityExpression	code == MC_ESC ( env -> syntax )		764797	0		==			
ANR	764863	Identifier	code		764797	0					
ANR	764864	CallExpression	MC_ESC ( env -> syntax )		764797	1					
ANR	764865	Callee	MC_ESC		764797	0					
ANR	764866	Identifier	MC_ESC		764797	0					
ANR	764867	ArgumentList	env -> syntax		764797	1					
ANR	764868	Argument	env -> syntax		764797	0					
ANR	764869	PtrMemberAccess	env -> syntax		764797	0					
ANR	764870	Identifier	env		764797	0					
ANR	764871	Identifier	syntax		764797	1					
ANR	764872	ExpressionStatement	in_esc = 1	4168:39:92758:92768	764797	1	True				
ANR	764873	AssignmentExpression	in_esc = 1		764797	0		=			
ANR	764874	Identifier	in_esc		764797	0					
ANR	764875	PrimaryExpression	1		764797	1					
ANR	764876	ReturnStatement	return 0 ;	4171:2:92782:92790	764797	6	True				
ANR	764877	PrimaryExpression	0		764797	0					
ANR	764878	ReturnType	static int		764797	1					
ANR	764879	Identifier	code_exist_check		764797	2					
ANR	764880	ParameterList	"OnigCodePoint c , UChar * from , UChar * end , int ignore_escaped , ScanEnv * env"		764797	3					
ANR	764881	Parameter	OnigCodePoint c	4152:17:92394:92408	764797	0	True				
ANR	764882	ParameterType	OnigCodePoint		764797	0					
ANR	764883	Identifier	c		764797	1					
ANR	764884	Parameter	UChar * from	4152:34:92411:92421	764797	1	True				
ANR	764885	ParameterType	UChar *		764797	0					
ANR	764886	Identifier	from		764797	1					
ANR	764887	Parameter	UChar * end	4152:47:92424:92433	764797	2	True				
ANR	764888	ParameterType	UChar *		764797	0					
ANR	764889	Identifier	end		764797	1					
ANR	764890	Parameter	int ignore_escaped	4152:59:92436:92453	764797	3	True				
ANR	764891	ParameterType	int		764797	0					
ANR	764892	Identifier	ignore_escaped		764797	1					
ANR	764893	Parameter	ScanEnv * env	4153:3:92459:92470	764797	4	True				
ANR	764894	ParameterType	ScanEnv *		764797	0					
ANR	764895	Identifier	env		764797	1					
ANR	764896	CFGEntryNode	ENTRY		764797		True				
ANR	764897	CFGExitNode	EXIT		764797		True				
ANR	764898	Symbol	c		764797						
ANR	764899	Symbol	code		764797						
ANR	764900	Symbol	* env		764797						
ANR	764901	Symbol	env -> enc		764797						
ANR	764902	Symbol	env		764797						
ANR	764903	Symbol	MC_ESC		764797						
ANR	764904	Symbol	PEND		764797						
ANR	764905	Symbol	env -> syntax		764797						
ANR	764906	Symbol	p		764797						
ANR	764907	Symbol	ignore_escaped		764797						
ANR	764908	Symbol	from		764797						
ANR	764909	Symbol	end		764797						
ANR	764910	Symbol	enc		764797						
ANR	764911	Symbol	in_esc		764797						
ANR	764912	Function	parse_char_class	4174:0:92795:100048							
ANR	764913	FunctionDef	"parse_char_class (Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		764912	0					
ANR	764914	CompoundStatement		4177:0:92892:100048	764912	0					
ANR	764915	IdentifierDeclStatement	"int r , neg , len , fetched , and_start ;"	4178:2:92896:92931	764912	0	True				
ANR	764916	IdentifierDecl	r		764912	0					
ANR	764917	IdentifierDeclType	int		764912	0					
ANR	764918	Identifier	r		764912	1					
ANR	764919	IdentifierDecl	neg		764912	1					
ANR	764920	IdentifierDeclType	int		764912	0					
ANR	764921	Identifier	neg		764912	1					
ANR	764922	IdentifierDecl	len		764912	2					
ANR	764923	IdentifierDeclType	int		764912	0					
ANR	764924	Identifier	len		764912	1					
ANR	764925	IdentifierDecl	fetched		764912	3					
ANR	764926	IdentifierDeclType	int		764912	0					
ANR	764927	Identifier	fetched		764912	1					
ANR	764928	IdentifierDecl	and_start		764912	4					
ANR	764929	IdentifierDeclType	int		764912	0					
ANR	764930	Identifier	and_start		764912	1					
ANR	764931	IdentifierDeclStatement	"OnigCodePoint v , vs ;"	4179:2:92935:92954	764912	1	True				
ANR	764932	IdentifierDecl	v		764912	0					
ANR	764933	IdentifierDeclType	OnigCodePoint		764912	0					
ANR	764934	Identifier	v		764912	1					
ANR	764935	IdentifierDecl	vs		764912	1					
ANR	764936	IdentifierDeclType	OnigCodePoint		764912	0					
ANR	764937	Identifier	vs		764912	1					
ANR	764938	IdentifierDeclStatement	UChar * p ;	4180:2:92958:92966	764912	2	True				
ANR	764939	IdentifierDecl	* p		764912	0					
ANR	764940	IdentifierDeclType	UChar *		764912	0					
ANR	764941	Identifier	p		764912	1					
ANR	764942	IdentifierDeclStatement	Node * node ;	4181:2:92970:92980	764912	3	True				
ANR	764943	IdentifierDecl	* node		764912	0					
ANR	764944	IdentifierDeclType	Node *		764912	0					
ANR	764945	Identifier	node		764912	1					
ANR	764946	IdentifierDeclStatement	"CClassNode * cc , * prev_cc ;"	4182:2:92984:93008	764912	4	True				
ANR	764947	IdentifierDecl	* cc		764912	0					
ANR	764948	IdentifierDeclType	CClassNode *		764912	0					
ANR	764949	Identifier	cc		764912	1					
ANR	764950	IdentifierDecl	* prev_cc		764912	1					
ANR	764951	IdentifierDeclType	CClassNode *		764912	0					
ANR	764952	Identifier	prev_cc		764912	1					
ANR	764953	IdentifierDeclStatement	CClassNode work_cc ;	4183:2:93012:93030	764912	5	True				
ANR	764954	IdentifierDecl	work_cc		764912	0					
ANR	764955	IdentifierDeclType	CClassNode		764912	0					
ANR	764956	Identifier	work_cc		764912	1					
ANR	764957	IdentifierDeclStatement	enum CCSTATE state ;	4185:2:93035:93053	764912	6	True				
ANR	764958	IdentifierDecl	state		764912	0					
ANR	764959	IdentifierDeclType	enum CCSTATE		764912	0					
ANR	764960	Identifier	state		764912	1					
ANR	764961	IdentifierDeclStatement	"enum CCVALTYPE val_type , in_type ;"	4186:2:93057:93089	764912	7	True				
ANR	764962	IdentifierDecl	val_type		764912	0					
ANR	764963	IdentifierDeclType	enum CCVALTYPE		764912	0					
ANR	764964	Identifier	val_type		764912	1					
ANR	764965	IdentifierDecl	in_type		764912	1					
ANR	764966	IdentifierDeclType	enum CCVALTYPE		764912	0					
ANR	764967	Identifier	in_type		764912	1					
ANR	764968	IdentifierDeclStatement	"int val_israw , in_israw ;"	4187:2:93093:93116	764912	8	True				
ANR	764969	IdentifierDecl	val_israw		764912	0					
ANR	764970	IdentifierDeclType	int		764912	0					
ANR	764971	Identifier	val_israw		764912	1					
ANR	764972	IdentifierDecl	in_israw		764912	1					
ANR	764973	IdentifierDeclType	int		764912	0					
ANR	764974	Identifier	in_israw		764912	1					
ANR	764975	ExpressionStatement	prev_cc = ( CClassNode * ) NULL	4189:2:93121:93149	764912	9	True				
ANR	764976	AssignmentExpression	prev_cc = ( CClassNode * ) NULL		764912	0		=			
ANR	764977	Identifier	prev_cc		764912	0					
ANR	764978	CastExpression	( CClassNode * ) NULL		764912	1					
ANR	764979	CastTarget	CClassNode *		764912	0					
ANR	764980	Identifier	NULL		764912	1					
ANR	764981	ExpressionStatement	* np = NULL_NODE	4190:2:93153:93168	764912	10	True				
ANR	764982	AssignmentExpression	* np = NULL_NODE		764912	0		=			
ANR	764983	UnaryOperationExpression	* np		764912	0					
ANR	764984	UnaryOperator	*		764912	0					
ANR	764985	Identifier	np		764912	1					
ANR	764986	Identifier	NULL_NODE		764912	1					
ANR	764987	ExpressionStatement	"r = fetch_token_in_cc ( tok , src , end , env )"	4191:2:93172:93213	764912	11	True				
ANR	764988	AssignmentExpression	"r = fetch_token_in_cc ( tok , src , end , env )"		764912	0		=			
ANR	764989	Identifier	r		764912	0					
ANR	764990	CallExpression	"fetch_token_in_cc ( tok , src , end , env )"		764912	1					
ANR	764991	Callee	fetch_token_in_cc		764912	0					
ANR	764992	Identifier	fetch_token_in_cc		764912	0					
ANR	764993	ArgumentList	tok		764912	1					
ANR	764994	Argument	tok		764912	0					
ANR	764995	Identifier	tok		764912	0					
ANR	764996	Argument	src		764912	1					
ANR	764997	Identifier	src		764912	0					
ANR	764998	Argument	end		764912	2					
ANR	764999	Identifier	end		764912	0					
ANR	765000	Argument	env		764912	3					
ANR	765001	Identifier	env		764912	0					
ANR	765002	IfStatement	if ( r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0 )		764912	12					
ANR	765003	Condition	r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0	4192:6:93221:93272	764912	0	True				
ANR	765004	AndExpression	r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0		764912	0		&&			
ANR	765005	EqualityExpression	r == TK_CHAR		764912	0		==			
ANR	765006	Identifier	r		764912	0					
ANR	765007	Identifier	TK_CHAR		764912	1					
ANR	765008	AndExpression	tok -> u . c == '^' && tok -> escaped == 0		764912	1		&&			
ANR	765009	EqualityExpression	tok -> u . c == '^'		764912	0		==			
ANR	765010	MemberAccess	tok -> u . c		764912	0					
ANR	765011	PtrMemberAccess	tok -> u		764912	0					
ANR	765012	Identifier	tok		764912	0					
ANR	765013	Identifier	u		764912	1					
ANR	765014	Identifier	c		764912	1					
ANR	765015	PrimaryExpression	'^'		764912	1					
ANR	765016	EqualityExpression	tok -> escaped == 0		764912	1		==			
ANR	765017	PtrMemberAccess	tok -> escaped		764912	0					
ANR	765018	Identifier	tok		764912	0					
ANR	765019	Identifier	escaped		764912	1					
ANR	765020	PrimaryExpression	0		764912	1					
ANR	765021	CompoundStatement		16:60:382:382	764912	1					
ANR	765022	ExpressionStatement	neg = 1	4193:4:93281:93288	764912	0	True				
ANR	765023	AssignmentExpression	neg = 1		764912	0		=			
ANR	765024	Identifier	neg		764912	0					
ANR	765025	PrimaryExpression	1		764912	1					
ANR	765026	ExpressionStatement	"r = fetch_token_in_cc ( tok , src , end , env )"	4194:4:93294:93335	764912	1	True				
ANR	765027	AssignmentExpression	"r = fetch_token_in_cc ( tok , src , end , env )"		764912	0		=			
ANR	765028	Identifier	r		764912	0					
ANR	765029	CallExpression	"fetch_token_in_cc ( tok , src , end , env )"		764912	1					
ANR	765030	Callee	fetch_token_in_cc		764912	0					
ANR	765031	Identifier	fetch_token_in_cc		764912	0					
ANR	765032	ArgumentList	tok		764912	1					
ANR	765033	Argument	tok		764912	0					
ANR	765034	Identifier	tok		764912	0					
ANR	765035	Argument	src		764912	1					
ANR	765036	Identifier	src		764912	0					
ANR	765037	Argument	end		764912	2					
ANR	765038	Identifier	end		764912	0					
ANR	765039	Argument	env		764912	3					
ANR	765040	Identifier	env		764912	0					
ANR	765041	ElseStatement	else		764912	0					
ANR	765042	CompoundStatement		20:7:455:455	764912	0					
ANR	765043	ExpressionStatement	neg = 0	4197:4:93354:93361	764912	0	True				
ANR	765044	AssignmentExpression	neg = 0		764912	0		=			
ANR	765045	Identifier	neg		764912	0					
ANR	765046	PrimaryExpression	0		764912	1					
ANR	765047	IfStatement	if ( r < 0 )		764912	13					
ANR	765048	Condition	r < 0	4200:6:93374:93378	764912	0	True				
ANR	765049	RelationalExpression	r < 0		764912	0		<			
ANR	765050	Identifier	r		764912	0					
ANR	765051	PrimaryExpression	0		764912	1					
ANR	765052	ReturnStatement	return r ;	4200:13:93381:93389	764912	1	True				
ANR	765053	Identifier	r		764912	0					
ANR	765054	IfStatement	if ( r == TK_CC_CLOSE )		764912	14					
ANR	765055	Condition	r == TK_CC_CLOSE	4201:6:93397:93412	764912	0	True				
ANR	765056	EqualityExpression	r == TK_CC_CLOSE		764912	0		==			
ANR	765057	Identifier	r		764912	0					
ANR	765058	Identifier	TK_CC_CLOSE		764912	1					
ANR	765059	CompoundStatement		25:24:522:522	764912	1					
ANR	765060	IfStatement	"if ( ! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env ) )"		764912	0					
ANR	765061	Condition	"! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"	4202:8:93425:93522	764912	0	True				
ANR	765062	UnaryOperationExpression	"! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"		764912	0					
ANR	765063	UnaryOperator	!		764912	0					
ANR	765064	CallExpression	"code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"		764912	1					
ANR	765065	Callee	code_exist_check		764912	0					
ANR	765066	Identifier	code_exist_check		764912	0					
ANR	765067	ArgumentList	( OnigCodePoint ) ']'		764912	1					
ANR	765068	Argument	( OnigCodePoint ) ']'		764912	0					
ANR	765069	CastExpression	( OnigCodePoint ) ']'		764912	0					
ANR	765070	CastTarget	OnigCodePoint		764912	0					
ANR	765071	PrimaryExpression	']'		764912	1					
ANR	765072	Argument	* src		764912	1					
ANR	765073	UnaryOperationExpression	* src		764912	0					
ANR	765074	UnaryOperator	*		764912	0					
ANR	765075	Identifier	src		764912	1					
ANR	765076	Argument	env -> pattern_end		764912	2					
ANR	765077	PtrMemberAccess	env -> pattern_end		764912	0					
ANR	765078	Identifier	env		764912	0					
ANR	765079	Identifier	pattern_end		764912	1					
ANR	765080	Argument	1		764912	3					
ANR	765081	PrimaryExpression	1		764912	0					
ANR	765082	Argument	env		764912	4					
ANR	765083	Identifier	env		764912	0					
ANR	765084	ReturnStatement	return ONIGERR_EMPTY_CHAR_CLASS ;	4204:6:93531:93562	764912	1	True				
ANR	765085	Identifier	ONIGERR_EMPTY_CHAR_CLASS		764912	0					
ANR	765086	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""]"" )"	4206:4:93569:93599	764912	1	True				
ANR	765087	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""]"" )"		764912	0					
ANR	765088	Callee	CC_ESC_WARN		764912	0					
ANR	765089	Identifier	CC_ESC_WARN		764912	0					
ANR	765090	ArgumentList	env		764912	1					
ANR	765091	Argument	env		764912	0					
ANR	765092	Identifier	env		764912	0					
ANR	765093	Argument	"( UChar * ) ""]"""		764912	1					
ANR	765094	CastExpression	"( UChar * ) ""]"""		764912	0					
ANR	765095	CastTarget	UChar *		764912	0					
ANR	765096	PrimaryExpression	"""]"""		764912	1					
ANR	765097	ExpressionStatement	r = tok -> type = TK_CHAR	4207:4:93605:93628	764912	2	True				
ANR	765098	AssignmentExpression	r = tok -> type = TK_CHAR		764912	0		=			
ANR	765099	Identifier	r		764912	0					
ANR	765100	AssignmentExpression	tok -> type = TK_CHAR		764912	1		=			
ANR	765101	PtrMemberAccess	tok -> type		764912	0					
ANR	765102	Identifier	tok		764912	0					
ANR	765103	Identifier	type		764912	1					
ANR	765104	Identifier	TK_CHAR		764912	1					
ANR	765105	ExpressionStatement	* np = node = node_new_cclass ( )	4210:2:93657:93687	764912	15	True				
ANR	765106	AssignmentExpression	* np = node = node_new_cclass ( )		764912	0		=			
ANR	765107	UnaryOperationExpression	* np		764912	0					
ANR	765108	UnaryOperator	*		764912	0					
ANR	765109	Identifier	np		764912	1					
ANR	765110	AssignmentExpression	node = node_new_cclass ( )		764912	1		=			
ANR	765111	Identifier	node		764912	0					
ANR	765112	CallExpression	node_new_cclass ( )		764912	1					
ANR	765113	Callee	node_new_cclass		764912	0					
ANR	765114	Identifier	node_new_cclass		764912	0					
ANR	765115	ArgumentList			764912	1					
ANR	765116	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( node )	4211:2:93691:93721	764912	16	True				
ANR	765117	CallExpression	CHECK_NULL_RETURN_MEMERR ( node )		764912	0					
ANR	765118	Callee	CHECK_NULL_RETURN_MEMERR		764912	0					
ANR	765119	Identifier	CHECK_NULL_RETURN_MEMERR		764912	0					
ANR	765120	ArgumentList	node		764912	1					
ANR	765121	Argument	node		764912	0					
ANR	765122	Identifier	node		764912	0					
ANR	765123	ExpressionStatement	cc = NCCLASS ( node )	4212:2:93725:93743	764912	17	True				
ANR	765124	AssignmentExpression	cc = NCCLASS ( node )		764912	0		=			
ANR	765125	Identifier	cc		764912	0					
ANR	765126	CallExpression	NCCLASS ( node )		764912	1					
ANR	765127	Callee	NCCLASS		764912	0					
ANR	765128	Identifier	NCCLASS		764912	0					
ANR	765129	ArgumentList	node		764912	1					
ANR	765130	Argument	node		764912	0					
ANR	765131	Identifier	node		764912	0					
ANR	765132	ExpressionStatement	and_start = 0	4214:2:93748:93761	764912	18	True				
ANR	765133	AssignmentExpression	and_start = 0		764912	0		=			
ANR	765134	Identifier	and_start		764912	0					
ANR	765135	PrimaryExpression	0		764912	1					
ANR	765136	ExpressionStatement	state = CCS_START	4215:2:93765:93782	764912	19	True				
ANR	765137	AssignmentExpression	state = CCS_START		764912	0		=			
ANR	765138	Identifier	state		764912	0					
ANR	765139	Identifier	CCS_START		764912	1					
ANR	765140	ExpressionStatement	p = * src	4216:2:93786:93794	764912	20	True				
ANR	765141	AssignmentExpression	p = * src		764912	0		=			
ANR	765142	Identifier	p		764912	0					
ANR	765143	UnaryOperationExpression	* src		764912	1					
ANR	765144	UnaryOperator	*		764912	0					
ANR	765145	Identifier	src		764912	1					
ANR	765146	WhileStatement	while ( r != TK_CC_CLOSE )		764912	21					
ANR	765147	Condition	r != TK_CC_CLOSE	4217:9:93805:93820	764912	0	True				
ANR	765148	EqualityExpression	r != TK_CC_CLOSE		764912	0		!=			
ANR	765149	Identifier	r		764912	0					
ANR	765150	Identifier	TK_CC_CLOSE		764912	1					
ANR	765151	CompoundStatement		41:27:930:930	764912	1					
ANR	765152	ExpressionStatement	fetched = 0	4218:4:93829:93840	764912	0	True				
ANR	765153	AssignmentExpression	fetched = 0		764912	0		=			
ANR	765154	Identifier	fetched		764912	0					
ANR	765155	PrimaryExpression	0		764912	1					
ANR	765156	SwitchStatement	switch ( r )		764912	1					
ANR	765157	Condition	r	4219:12:93854:93854	764912	0	True				
ANR	765158	Identifier	r		764912	0					
ANR	765159	CompoundStatement		43:15:964:964	764912	1					
ANR	765160	Label	case TK_CHAR :	4220:4:93863:93875	764912	0	True				
ANR	765161	Identifier	TK_CHAR		764912	0					
ANR	765162	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"	4221:6:93883:93931	764912	1	True				
ANR	765163	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"		764912	0		=			
ANR	765164	Identifier	len		764912	0					
ANR	765165	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"		764912	1					
ANR	765166	Callee	ONIGENC_CODE_TO_MBCLEN		764912	0					
ANR	765167	Identifier	ONIGENC_CODE_TO_MBCLEN		764912	0					
ANR	765168	ArgumentList	env -> enc		764912	1					
ANR	765169	Argument	env -> enc		764912	0					
ANR	765170	PtrMemberAccess	env -> enc		764912	0					
ANR	765171	Identifier	env		764912	0					
ANR	765172	Identifier	enc		764912	1					
ANR	765173	Argument	tok -> u . c		764912	1					
ANR	765174	MemberAccess	tok -> u . c		764912	0					
ANR	765175	PtrMemberAccess	tok -> u		764912	0					
ANR	765176	Identifier	tok		764912	0					
ANR	765177	Identifier	u		764912	1					
ANR	765178	Identifier	c		764912	1					
ANR	765179	IfStatement	if ( len > 1 )		764912	2					
ANR	765180	Condition	len > 1	4222:10:93943:93949	764912	0	True				
ANR	765181	RelationalExpression	len > 1		764912	0		>			
ANR	765182	Identifier	len		764912	0					
ANR	765183	PrimaryExpression	1		764912	1					
ANR	765184	CompoundStatement		46:19:1059:1059	764912	1					
ANR	765185	ExpressionStatement	in_type = CCV_CODE_POINT	4223:1:93955:93979	764912	0	True				
ANR	765186	AssignmentExpression	in_type = CCV_CODE_POINT		764912	0		=			
ANR	765187	Identifier	in_type		764912	0					
ANR	765188	Identifier	CCV_CODE_POINT		764912	1					
ANR	765189	ElseStatement	else		764912	0					
ANR	765190	IfStatement	if ( len < 0 )		764912	0					
ANR	765191	Condition	len < 0	4225:15:94004:94010	764912	0	True				
ANR	765192	RelationalExpression	len < 0		764912	0		<			
ANR	765193	Identifier	len		764912	0					
ANR	765194	PrimaryExpression	0		764912	1					
ANR	765195	CompoundStatement		49:24:1120:1120	764912	1					
ANR	765196	ExpressionStatement	r = len	4226:1:94016:94023	764912	0	True				
ANR	765197	AssignmentExpression	r = len		764912	0		=			
ANR	765198	Identifier	r		764912	0					
ANR	765199	Identifier	len		764912	1					
ANR	765200	GotoStatement	goto err ;	4227:1:94026:94034	764912	1	True				
ANR	765201	Identifier	err		764912	0					
ANR	765202	ElseStatement	else		764912	0					
ANR	765203	CompoundStatement		53:11:1162:1162	764912	0					
ANR	765204	Label	sb_char :	4230:6:94063:94070	764912	0	True				
ANR	765205	Identifier	sb_char		764912	0					
ANR	765206	ExpressionStatement	in_type = CCV_SB	4231:1:94073:94089	764912	1	True				
ANR	765207	AssignmentExpression	in_type = CCV_SB		764912	0		=			
ANR	765208	Identifier	in_type		764912	0					
ANR	765209	Identifier	CCV_SB		764912	1					
ANR	765210	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4233:6:94105:94133	764912	3	True				
ANR	765211	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		764912	0		=			
ANR	765212	Identifier	v		764912	0					
ANR	765213	CastExpression	( OnigCodePoint ) tok -> u . c		764912	1					
ANR	765214	CastTarget	OnigCodePoint		764912	0					
ANR	765215	MemberAccess	tok -> u . c		764912	1					
ANR	765216	PtrMemberAccess	tok -> u		764912	0					
ANR	765217	Identifier	tok		764912	0					
ANR	765218	Identifier	u		764912	1					
ANR	765219	Identifier	c		764912	1					
ANR	765220	ExpressionStatement	in_israw = 0	4234:6:94141:94153	764912	4	True				
ANR	765221	AssignmentExpression	in_israw = 0		764912	0		=			
ANR	765222	Identifier	in_israw		764912	0					
ANR	765223	PrimaryExpression	0		764912	1					
ANR	765224	GotoStatement	goto val_entry2 ;	4235:6:94161:94176	764912	5	True				
ANR	765225	Identifier	val_entry2		764912	0					
ANR	765226	BreakStatement	break ;	4236:6:94184:94189	764912	6	True				
ANR	765227	Label	case TK_RAW_BYTE :	4238:4:94196:94212	764912	7	True				
ANR	765228	Identifier	TK_RAW_BYTE		764912	0					
ANR	765229	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0 )		764912	8					
ANR	765230	Condition	! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0	4240:10:94271:94321	764912	0	True				
ANR	765231	AndExpression	! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0		764912	0		&&			
ANR	765232	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( env -> enc )		764912	0					
ANR	765233	UnaryOperator	!		764912	0					
ANR	765234	CallExpression	ONIGENC_IS_SINGLEBYTE ( env -> enc )		764912	1					
ANR	765235	Callee	ONIGENC_IS_SINGLEBYTE		764912	0					
ANR	765236	Identifier	ONIGENC_IS_SINGLEBYTE		764912	0					
ANR	765237	ArgumentList	env -> enc		764912	1					
ANR	765238	Argument	env -> enc		764912	0					
ANR	765239	PtrMemberAccess	env -> enc		764912	0					
ANR	765240	Identifier	env		764912	0					
ANR	765241	Identifier	enc		764912	1					
ANR	765242	EqualityExpression	tok -> base != 0		764912	1		!=			
ANR	765243	PtrMemberAccess	tok -> base		764912	0					
ANR	765244	Identifier	tok		764912	0					
ANR	765245	Identifier	base		764912	1					
ANR	765246	PrimaryExpression	0		764912	1					
ANR	765247	CompoundStatement		68:1:1542:1565	764912	1					
ANR	765248	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	4241:1:94327:94364	764912	0	True				
ANR	765249	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		764912	0					
ANR	765250	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		764912	0					
ANR	765251	Identifier	buf		764912	1					
ANR	765252	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		764912	2					
ANR	765253	IdentifierDeclStatement	UChar * bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN ;	4242:1:94367:94413	764912	1	True				
ANR	765254	IdentifierDecl	* bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN		764912	0					
ANR	765255	IdentifierDeclType	UChar *		764912	0					
ANR	765256	Identifier	bufe		764912	1					
ANR	765257	AssignmentExpression	* bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN		764912	2		=			
ANR	765258	Identifier	bufe		764912	0					
ANR	765259	AdditiveExpression	buf + ONIGENC_CODE_TO_MBC_MAXLEN		764912	1		+			
ANR	765260	Identifier	buf		764912	0					
ANR	765261	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		764912	1					
ANR	765262	IdentifierDeclStatement	UChar * psave = p ;	4243:1:94416:94432	764912	2	True				
ANR	765263	IdentifierDecl	* psave = p		764912	0					
ANR	765264	IdentifierDeclType	UChar *		764912	0					
ANR	765265	Identifier	psave		764912	1					
ANR	765266	AssignmentExpression	* psave = p		764912	2		=			
ANR	765267	Identifier	p		764912	0					
ANR	765268	Identifier	p		764912	1					
ANR	765269	IdentifierDeclStatement	"int i , base = tok -> base ;"	4244:1:94435:94458	764912	3	True				
ANR	765270	IdentifierDecl	i		764912	0					
ANR	765271	IdentifierDeclType	int		764912	0					
ANR	765272	Identifier	i		764912	1					
ANR	765273	IdentifierDecl	base = tok -> base		764912	1					
ANR	765274	IdentifierDeclType	int		764912	0					
ANR	765275	Identifier	base		764912	1					
ANR	765276	AssignmentExpression	base = tok -> base		764912	2		=			
ANR	765277	Identifier	base		764912	0					
ANR	765278	PtrMemberAccess	tok -> base		764912	1					
ANR	765279	Identifier	tok		764912	0					
ANR	765280	Identifier	base		764912	1					
ANR	765281	ExpressionStatement	buf [ 0 ] = tok -> u . c	4246:1:94462:94479	764912	4	True				
ANR	765282	AssignmentExpression	buf [ 0 ] = tok -> u . c		764912	0		=			
ANR	765283	ArrayIndexing	buf [ 0 ]		764912	0					
ANR	765284	Identifier	buf		764912	0					
ANR	765285	PrimaryExpression	0		764912	1					
ANR	765286	MemberAccess	tok -> u . c		764912	1					
ANR	765287	PtrMemberAccess	tok -> u		764912	0					
ANR	765288	Identifier	tok		764912	0					
ANR	765289	Identifier	u		764912	1					
ANR	765290	Identifier	c		764912	1					
ANR	765291	ForStatement	for ( i = 1 ; i < ONIGENC_MBC_MAXLEN ( env -> enc ) ; i ++ )		764912	5					
ANR	765292	ForInit	i = 1 ;	4247:6:94487:94492	764912	0	True				
ANR	765293	AssignmentExpression	i = 1		764912	0		=			
ANR	765294	Identifier	i		764912	0					
ANR	765295	PrimaryExpression	1		764912	1					
ANR	765296	Condition	i < ONIGENC_MBC_MAXLEN ( env -> enc )	4247:13:94494:94525	764912	1	True				
ANR	765297	RelationalExpression	i < ONIGENC_MBC_MAXLEN ( env -> enc )		764912	0		<			
ANR	765298	Identifier	i		764912	0					
ANR	765299	CallExpression	ONIGENC_MBC_MAXLEN ( env -> enc )		764912	1					
ANR	765300	Callee	ONIGENC_MBC_MAXLEN		764912	0					
ANR	765301	Identifier	ONIGENC_MBC_MAXLEN		764912	0					
ANR	765302	ArgumentList	env -> enc		764912	1					
ANR	765303	Argument	env -> enc		764912	0					
ANR	765304	PtrMemberAccess	env -> enc		764912	0					
ANR	765305	Identifier	env		764912	0					
ANR	765306	Identifier	enc		764912	1					
ANR	765307	PostIncDecOperationExpression	i ++	4247:47:94528:94530	764912	2	True				
ANR	765308	Identifier	i		764912	0					
ANR	765309	IncDec	++		764912	1					
ANR	765310	CompoundStatement		71:52:1640:1640	764912	3					
ANR	765311	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4248:3:94538:94578	764912	0	True				
ANR	765312	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		764912	0		=			
ANR	765313	Identifier	r		764912	0					
ANR	765314	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		764912	1					
ANR	765315	Callee	fetch_token_in_cc		764912	0					
ANR	765316	Identifier	fetch_token_in_cc		764912	0					
ANR	765317	ArgumentList	tok		764912	1					
ANR	765318	Argument	tok		764912	0					
ANR	765319	Identifier	tok		764912	0					
ANR	765320	Argument	& p		764912	1					
ANR	765321	UnaryOperationExpression	& p		764912	0					
ANR	765322	UnaryOperator	&		764912	0					
ANR	765323	Identifier	p		764912	1					
ANR	765324	Argument	end		764912	2					
ANR	765325	Identifier	end		764912	0					
ANR	765326	Argument	env		764912	3					
ANR	765327	Identifier	env		764912	0					
ANR	765328	IfStatement	if ( r < 0 )		764912	1					
ANR	765329	Condition	r < 0	4249:7:94587:94591	764912	0	True				
ANR	765330	RelationalExpression	r < 0		764912	0		<			
ANR	765331	Identifier	r		764912	0					
ANR	765332	PrimaryExpression	0		764912	1					
ANR	765333	GotoStatement	goto err ;	4249:14:94594:94602	764912	1	True				
ANR	765334	Identifier	err		764912	0					
ANR	765335	IfStatement	if ( r != TK_RAW_BYTE || tok -> base != base )		764912	2					
ANR	765336	Condition	r != TK_RAW_BYTE || tok -> base != base	4250:7:94611:94647	764912	0	True				
ANR	765337	OrExpression	r != TK_RAW_BYTE || tok -> base != base		764912	0		||			
ANR	765338	EqualityExpression	r != TK_RAW_BYTE		764912	0		!=			
ANR	765339	Identifier	r		764912	0					
ANR	765340	Identifier	TK_RAW_BYTE		764912	1					
ANR	765341	EqualityExpression	tok -> base != base		764912	1		!=			
ANR	765342	PtrMemberAccess	tok -> base		764912	0					
ANR	765343	Identifier	tok		764912	0					
ANR	765344	Identifier	base		764912	1					
ANR	765345	Identifier	base		764912	1					
ANR	765346	CompoundStatement		74:46:1757:1757	764912	1					
ANR	765347	ExpressionStatement	fetched = 1	4251:5:94657:94668	764912	0	True				
ANR	765348	AssignmentExpression	fetched = 1		764912	0		=			
ANR	765349	Identifier	fetched		764912	0					
ANR	765350	PrimaryExpression	1		764912	1					
ANR	765351	BreakStatement	break ;	4252:5:94675:94680	764912	1	True				
ANR	765352	ExpressionStatement	buf [ i ] = tok -> u . c	4254:3:94690:94707	764912	3	True				
ANR	765353	AssignmentExpression	buf [ i ] = tok -> u . c		764912	0		=			
ANR	765354	ArrayIndexing	buf [ i ]		764912	0					
ANR	765355	Identifier	buf		764912	0					
ANR	765356	Identifier	i		764912	1					
ANR	765357	MemberAccess	tok -> u . c		764912	1					
ANR	765358	PtrMemberAccess	tok -> u		764912	0					
ANR	765359	Identifier	tok		764912	0					
ANR	765360	Identifier	u		764912	1					
ANR	765361	Identifier	c		764912	1					
ANR	765362	IfStatement	if ( i < ONIGENC_MBC_MINLEN ( env -> enc ) )		764912	6					
ANR	765363	Condition	i < ONIGENC_MBC_MINLEN ( env -> enc )	4257:5:94718:94749	764912	0	True				
ANR	765364	RelationalExpression	i < ONIGENC_MBC_MINLEN ( env -> enc )		764912	0		<			
ANR	765365	Identifier	i		764912	0					
ANR	765366	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		764912	1					
ANR	765367	Callee	ONIGENC_MBC_MINLEN		764912	0					
ANR	765368	Identifier	ONIGENC_MBC_MINLEN		764912	0					
ANR	765369	ArgumentList	env -> enc		764912	1					
ANR	765370	Argument	env -> enc		764912	0					
ANR	765371	PtrMemberAccess	env -> enc		764912	0					
ANR	765372	Identifier	env		764912	0					
ANR	765373	Identifier	enc		764912	1					
ANR	765374	CompoundStatement		81:39:1859:1859	764912	1					
ANR	765375	ExpressionStatement	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING	4258:3:94757:94796	764912	0	True				
ANR	765376	AssignmentExpression	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		764912	0		=			
ANR	765377	Identifier	r		764912	0					
ANR	765378	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		764912	1					
ANR	765379	GotoStatement	goto err ;	4259:3:94801:94809	764912	1	True				
ANR	765380	Identifier	err		764912	0					
ANR	765381	ExpressionStatement	"len = enclen ( env -> enc , buf )"	4262:1:94816:94843	764912	7	True				
ANR	765382	AssignmentExpression	"len = enclen ( env -> enc , buf )"		764912	0		=			
ANR	765383	Identifier	len		764912	0					
ANR	765384	CallExpression	"enclen ( env -> enc , buf )"		764912	1					
ANR	765385	Callee	enclen		764912	0					
ANR	765386	Identifier	enclen		764912	0					
ANR	765387	ArgumentList	env -> enc		764912	1					
ANR	765388	Argument	env -> enc		764912	0					
ANR	765389	PtrMemberAccess	env -> enc		764912	0					
ANR	765390	Identifier	env		764912	0					
ANR	765391	Identifier	enc		764912	1					
ANR	765392	Argument	buf		764912	1					
ANR	765393	Identifier	buf		764912	0					
ANR	765394	IfStatement	if ( i < len )		764912	8					
ANR	765395	Condition	i < len	4263:5:94850:94856	764912	0	True				
ANR	765396	RelationalExpression	i < len		764912	0		<			
ANR	765397	Identifier	i		764912	0					
ANR	765398	Identifier	len		764912	1					
ANR	765399	CompoundStatement		87:14:1966:1966	764912	1					
ANR	765400	ExpressionStatement	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING	4264:3:94864:94903	764912	0	True				
ANR	765401	AssignmentExpression	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		764912	0		=			
ANR	765402	Identifier	r		764912	0					
ANR	765403	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		764912	1					
ANR	765404	GotoStatement	goto err ;	4265:3:94908:94916	764912	1	True				
ANR	765405	Identifier	err		764912	0					
ANR	765406	ElseStatement	else		764912	0					
ANR	765407	IfStatement	if ( i > len )		764912	0					
ANR	765408	Condition	i > len	4267:10:94931:94937	764912	0	True				
ANR	765409	RelationalExpression	i > len		764912	0		>			
ANR	765410	Identifier	i		764912	0					
ANR	765411	Identifier	len		764912	1					
ANR	765412	CompoundStatement		91:19:2047:2047	764912	1					
ANR	765413	ExpressionStatement	p = psave	4268:3:94962:94971	764912	0	True				
ANR	765414	AssignmentExpression	p = psave		764912	0		=			
ANR	765415	Identifier	p		764912	0					
ANR	765416	Identifier	psave		764912	1					
ANR	765417	ForStatement	for ( i = 1 ; i < len ; i ++ )		764912	1					
ANR	765418	ForInit	i = 1 ;	4269:8:94981:94986	764912	0	True				
ANR	765419	AssignmentExpression	i = 1		764912	0		=			
ANR	765420	Identifier	i		764912	0					
ANR	765421	PrimaryExpression	1		764912	1					
ANR	765422	Condition	i < len	4269:15:94988:94994	764912	1	True				
ANR	765423	RelationalExpression	i < len		764912	0		<			
ANR	765424	Identifier	i		764912	0					
ANR	765425	Identifier	len		764912	1					
ANR	765426	PostIncDecOperationExpression	i ++	4269:24:94997:94999	764912	2	True				
ANR	765427	Identifier	i		764912	0					
ANR	765428	IncDec	++		764912	1					
ANR	765429	CompoundStatement		93:29:2109:2109	764912	3					
ANR	765430	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4270:5:95009:95049	764912	0	True				
ANR	765431	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		764912	0		=			
ANR	765432	Identifier	r		764912	0					
ANR	765433	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		764912	1					
ANR	765434	Callee	fetch_token_in_cc		764912	0					
ANR	765435	Identifier	fetch_token_in_cc		764912	0					
ANR	765436	ArgumentList	tok		764912	1					
ANR	765437	Argument	tok		764912	0					
ANR	765438	Identifier	tok		764912	0					
ANR	765439	Argument	& p		764912	1					
ANR	765440	UnaryOperationExpression	& p		764912	0					
ANR	765441	UnaryOperator	&		764912	0					
ANR	765442	Identifier	p		764912	1					
ANR	765443	Argument	end		764912	2					
ANR	765444	Identifier	end		764912	0					
ANR	765445	Argument	env		764912	3					
ANR	765446	Identifier	env		764912	0					
ANR	765447	ExpressionStatement	fetched = 0	4272:3:95059:95070	764912	2	True				
ANR	765448	AssignmentExpression	fetched = 0		764912	0		=			
ANR	765449	Identifier	fetched		764912	0					
ANR	765450	PrimaryExpression	0		764912	1					
ANR	765451	IfStatement	if ( i == 1 )		764912	9					
ANR	765452	Condition	i == 1	4275:5:95081:95086	764912	0	True				
ANR	765453	EqualityExpression	i == 1		764912	0		==			
ANR	765454	Identifier	i		764912	0					
ANR	765455	PrimaryExpression	1		764912	1					
ANR	765456	CompoundStatement		99:13:2196:2196	764912	1					
ANR	765457	ExpressionStatement	v = ( OnigCodePoint ) buf [ 0 ]	4276:3:95094:95120	764912	0	True				
ANR	765458	AssignmentExpression	v = ( OnigCodePoint ) buf [ 0 ]		764912	0		=			
ANR	765459	Identifier	v		764912	0					
ANR	765460	CastExpression	( OnigCodePoint ) buf [ 0 ]		764912	1					
ANR	765461	CastTarget	OnigCodePoint		764912	0					
ANR	765462	ArrayIndexing	buf [ 0 ]		764912	1					
ANR	765463	Identifier	buf		764912	0					
ANR	765464	PrimaryExpression	0		764912	1					
ANR	765465	GotoStatement	goto raw_single ;	4277:3:95125:95140	764912	1	True				
ANR	765466	Identifier	raw_single		764912	0					
ANR	765467	ElseStatement	else		764912	0					
ANR	765468	CompoundStatement		103:6:2258:2258	764912	0					
ANR	765469	ExpressionStatement	"v = ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"	4280:3:95156:95200	764912	0	True				
ANR	765470	AssignmentExpression	"v = ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"		764912	0		=			
ANR	765471	Identifier	v		764912	0					
ANR	765472	CallExpression	"ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"		764912	1					
ANR	765473	Callee	ONIGENC_MBC_TO_CODE		764912	0					
ANR	765474	Identifier	ONIGENC_MBC_TO_CODE		764912	0					
ANR	765475	ArgumentList	env -> enc		764912	1					
ANR	765476	Argument	env -> enc		764912	0					
ANR	765477	PtrMemberAccess	env -> enc		764912	0					
ANR	765478	Identifier	env		764912	0					
ANR	765479	Identifier	enc		764912	1					
ANR	765480	Argument	buf		764912	1					
ANR	765481	Identifier	buf		764912	0					
ANR	765482	Argument	bufe		764912	2					
ANR	765483	Identifier	bufe		764912	0					
ANR	765484	ExpressionStatement	in_type = CCV_CODE_POINT	4281:3:95205:95229	764912	1	True				
ANR	765485	AssignmentExpression	in_type = CCV_CODE_POINT		764912	0		=			
ANR	765486	Identifier	in_type		764912	0					
ANR	765487	Identifier	CCV_CODE_POINT		764912	1					
ANR	765488	ElseStatement	else		764912	0					
ANR	765489	CompoundStatement		108:11:2360:2360	764912	0					
ANR	765490	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4285:1:95256:95284	764912	0	True				
ANR	765491	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		764912	0		=			
ANR	765492	Identifier	v		764912	0					
ANR	765493	CastExpression	( OnigCodePoint ) tok -> u . c		764912	1					
ANR	765494	CastTarget	OnigCodePoint		764912	0					
ANR	765495	MemberAccess	tok -> u . c		764912	1					
ANR	765496	PtrMemberAccess	tok -> u		764912	0					
ANR	765497	Identifier	tok		764912	0					
ANR	765498	Identifier	u		764912	1					
ANR	765499	Identifier	c		764912	1					
ANR	765500	Label	raw_single :	4286:6:95292:95302	764912	1	True				
ANR	765501	Identifier	raw_single		764912	0					
ANR	765502	ExpressionStatement	in_type = CCV_SB	4287:1:95305:95321	764912	2	True				
ANR	765503	AssignmentExpression	in_type = CCV_SB		764912	0		=			
ANR	765504	Identifier	in_type		764912	0					
ANR	765505	Identifier	CCV_SB		764912	1					
ANR	765506	ExpressionStatement	in_israw = 1	4289:6:95337:95349	764912	9	True				
ANR	765507	AssignmentExpression	in_israw = 1		764912	0		=			
ANR	765508	Identifier	in_israw		764912	0					
ANR	765509	PrimaryExpression	1		764912	1					
ANR	765510	GotoStatement	goto val_entry2 ;	4290:6:95357:95372	764912	10	True				
ANR	765511	Identifier	val_entry2		764912	0					
ANR	765512	BreakStatement	break ;	4291:6:95380:95385	764912	11	True				
ANR	765513	Label	case TK_CODE_POINT :	4293:4:95392:95410	764912	12	True				
ANR	765514	Identifier	TK_CODE_POINT		764912	0					
ANR	765515	ExpressionStatement	v = tok -> u . code	4294:6:95418:95433	764912	13	True				
ANR	765516	AssignmentExpression	v = tok -> u . code		764912	0		=			
ANR	765517	Identifier	v		764912	0					
ANR	765518	MemberAccess	tok -> u . code		764912	1					
ANR	765519	PtrMemberAccess	tok -> u		764912	0					
ANR	765520	Identifier	tok		764912	0					
ANR	765521	Identifier	u		764912	1					
ANR	765522	Identifier	code		764912	1					
ANR	765523	ExpressionStatement	in_israw = 1	4295:6:95441:95453	764912	14	True				
ANR	765524	AssignmentExpression	in_israw = 1		764912	0		=			
ANR	765525	Identifier	in_israw		764912	0					
ANR	765526	PrimaryExpression	1		764912	1					
ANR	765527	Label	val_entry :	4296:4:95459:95468	764912	15	True				
ANR	765528	Identifier	val_entry		764912	0					
ANR	765529	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"	4297:6:95476:95517	764912	16	True				
ANR	765530	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"		764912	0		=			
ANR	765531	Identifier	len		764912	0					
ANR	765532	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"		764912	1					
ANR	765533	Callee	ONIGENC_CODE_TO_MBCLEN		764912	0					
ANR	765534	Identifier	ONIGENC_CODE_TO_MBCLEN		764912	0					
ANR	765535	ArgumentList	env -> enc		764912	1					
ANR	765536	Argument	env -> enc		764912	0					
ANR	765537	PtrMemberAccess	env -> enc		764912	0					
ANR	765538	Identifier	env		764912	0					
ANR	765539	Identifier	enc		764912	1					
ANR	765540	Argument	v		764912	1					
ANR	765541	Identifier	v		764912	0					
ANR	765542	IfStatement	if ( len < 0 )		764912	17					
ANR	765543	Condition	len < 0	4298:10:95529:95535	764912	0	True				
ANR	765544	RelationalExpression	len < 0		764912	0		<			
ANR	765545	Identifier	len		764912	0					
ANR	765546	PrimaryExpression	0		764912	1					
ANR	765547	CompoundStatement		122:19:2645:2645	764912	1					
ANR	765548	ExpressionStatement	r = len	4299:1:95541:95548	764912	0	True				
ANR	765549	AssignmentExpression	r = len		764912	0		=			
ANR	765550	Identifier	r		764912	0					
ANR	765551	Identifier	len		764912	1					
ANR	765552	GotoStatement	goto err ;	4300:1:95551:95559	764912	1	True				
ANR	765553	Identifier	err		764912	0					
ANR	765554	ExpressionStatement	in_type = ( len == 1 ? CCV_SB : CCV_CODE_POINT )	4302:6:95575:95621	764912	18	True				
ANR	765555	AssignmentExpression	in_type = ( len == 1 ? CCV_SB : CCV_CODE_POINT )		764912	0		=			
ANR	765556	Identifier	in_type		764912	0					
ANR	765557	ConditionalExpression	len == 1 ? CCV_SB : CCV_CODE_POINT		764912	1					
ANR	765558	Condition	len == 1		764912	0					
ANR	765559	EqualityExpression	len == 1		764912	0		==			
ANR	765560	Identifier	len		764912	0					
ANR	765561	PrimaryExpression	1		764912	1					
ANR	765562	Identifier	CCV_SB		764912	1					
ANR	765563	Identifier	CCV_CODE_POINT		764912	2					
ANR	765564	Label	val_entry2 :	4303:4:95627:95637	764912	19	True				
ANR	765565	Identifier	val_entry2		764912	0					
ANR	765566	ExpressionStatement	"r = next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"	4304:6:95645:95734	764912	20	True				
ANR	765567	AssignmentExpression	"r = next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"		764912	0		=			
ANR	765568	Identifier	r		764912	0					
ANR	765569	CallExpression	"next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"		764912	1					
ANR	765570	Callee	next_state_val		764912	0					
ANR	765571	Identifier	next_state_val		764912	0					
ANR	765572	ArgumentList	cc		764912	1					
ANR	765573	Argument	cc		764912	0					
ANR	765574	Identifier	cc		764912	0					
ANR	765575	Argument	& vs		764912	1					
ANR	765576	UnaryOperationExpression	& vs		764912	0					
ANR	765577	UnaryOperator	&		764912	0					
ANR	765578	Identifier	vs		764912	1					
ANR	765579	Argument	v		764912	2					
ANR	765580	Identifier	v		764912	0					
ANR	765581	Argument	& val_israw		764912	3					
ANR	765582	UnaryOperationExpression	& val_israw		764912	0					
ANR	765583	UnaryOperator	&		764912	0					
ANR	765584	Identifier	val_israw		764912	1					
ANR	765585	Argument	in_israw		764912	4					
ANR	765586	Identifier	in_israw		764912	0					
ANR	765587	Argument	in_type		764912	5					
ANR	765588	Identifier	in_type		764912	0					
ANR	765589	Argument	& val_type		764912	6					
ANR	765590	UnaryOperationExpression	& val_type		764912	0					
ANR	765591	UnaryOperator	&		764912	0					
ANR	765592	Identifier	val_type		764912	1					
ANR	765593	Argument	& state		764912	7					
ANR	765594	UnaryOperationExpression	& state		764912	0					
ANR	765595	UnaryOperator	&		764912	0					
ANR	765596	Identifier	state		764912	1					
ANR	765597	Argument	env		764912	8					
ANR	765598	Identifier	env		764912	0					
ANR	765599	IfStatement	if ( r != 0 )		764912	21					
ANR	765600	Condition	r != 0	4306:10:95746:95751	764912	0	True				
ANR	765601	EqualityExpression	r != 0		764912	0		!=			
ANR	765602	Identifier	r		764912	0					
ANR	765603	PrimaryExpression	0		764912	1					
ANR	765604	GotoStatement	goto err ;	4306:18:95754:95762	764912	1	True				
ANR	765605	Identifier	err		764912	0					
ANR	765606	BreakStatement	break ;	4307:6:95770:95775	764912	22	True				
ANR	765607	Label	case TK_POSIX_BRACKET_OPEN :	4309:4:95782:95808	764912	23	True				
ANR	765608	Identifier	TK_POSIX_BRACKET_OPEN		764912	0					
ANR	765609	ExpressionStatement	"r = parse_posix_bracket ( cc , & p , end , env )"	4310:6:95816:95857	764912	24	True				
ANR	765610	AssignmentExpression	"r = parse_posix_bracket ( cc , & p , end , env )"		764912	0		=			
ANR	765611	Identifier	r		764912	0					
ANR	765612	CallExpression	"parse_posix_bracket ( cc , & p , end , env )"		764912	1					
ANR	765613	Callee	parse_posix_bracket		764912	0					
ANR	765614	Identifier	parse_posix_bracket		764912	0					
ANR	765615	ArgumentList	cc		764912	1					
ANR	765616	Argument	cc		764912	0					
ANR	765617	Identifier	cc		764912	0					
ANR	765618	Argument	& p		764912	1					
ANR	765619	UnaryOperationExpression	& p		764912	0					
ANR	765620	UnaryOperator	&		764912	0					
ANR	765621	Identifier	p		764912	1					
ANR	765622	Argument	end		764912	2					
ANR	765623	Identifier	end		764912	0					
ANR	765624	Argument	env		764912	3					
ANR	765625	Identifier	env		764912	0					
ANR	765626	IfStatement	if ( r < 0 )		764912	25					
ANR	765627	Condition	r < 0	4311:10:95869:95873	764912	0	True				
ANR	765628	RelationalExpression	r < 0		764912	0		<			
ANR	765629	Identifier	r		764912	0					
ANR	765630	PrimaryExpression	0		764912	1					
ANR	765631	GotoStatement	goto err ;	4311:17:95876:95884	764912	1	True				
ANR	765632	Identifier	err		764912	0					
ANR	765633	IfStatement	if ( r == 1 )		764912	26					
ANR	765634	Condition	r == 1	4312:10:95896:95901	764912	0	True				
ANR	765635	EqualityExpression	r == 1		764912	0		==			
ANR	765636	Identifier	r		764912	0					
ANR	765637	PrimaryExpression	1		764912	1					
ANR	765638	CompoundStatement		136:18:3011:3011	764912	1					
ANR	765639	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"	4313:1:95935:95965	764912	0	True				
ANR	765640	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"		764912	0					
ANR	765641	Callee	CC_ESC_WARN		764912	0					
ANR	765642	Identifier	CC_ESC_WARN		764912	0					
ANR	765643	ArgumentList	env		764912	1					
ANR	765644	Argument	env		764912	0					
ANR	765645	Identifier	env		764912	0					
ANR	765646	Argument	"( UChar * ) ""["""		764912	1					
ANR	765647	CastExpression	"( UChar * ) ""["""		764912	0					
ANR	765648	CastTarget	UChar *		764912	0					
ANR	765649	PrimaryExpression	"""["""		764912	1					
ANR	765650	ExpressionStatement	p = tok -> backp	4314:1:95968:95982	764912	1	True				
ANR	765651	AssignmentExpression	p = tok -> backp		764912	0		=			
ANR	765652	Identifier	p		764912	0					
ANR	765653	PtrMemberAccess	tok -> backp		764912	1					
ANR	765654	Identifier	tok		764912	0					
ANR	765655	Identifier	backp		764912	1					
ANR	765656	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4315:1:95985:96013	764912	2	True				
ANR	765657	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		764912	0		=			
ANR	765658	Identifier	v		764912	0					
ANR	765659	CastExpression	( OnigCodePoint ) tok -> u . c		764912	1					
ANR	765660	CastTarget	OnigCodePoint		764912	0					
ANR	765661	MemberAccess	tok -> u . c		764912	1					
ANR	765662	PtrMemberAccess	tok -> u		764912	0					
ANR	765663	Identifier	tok		764912	0					
ANR	765664	Identifier	u		764912	1					
ANR	765665	Identifier	c		764912	1					
ANR	765666	ExpressionStatement	in_israw = 0	4316:1:96016:96028	764912	3	True				
ANR	765667	AssignmentExpression	in_israw = 0		764912	0		=			
ANR	765668	Identifier	in_israw		764912	0					
ANR	765669	PrimaryExpression	0		764912	1					
ANR	765670	GotoStatement	goto val_entry ;	4317:1:96031:96045	764912	4	True				
ANR	765671	Identifier	val_entry		764912	0					
ANR	765672	GotoStatement	goto next_class ;	4319:6:96061:96076	764912	27	True				
ANR	765673	Identifier	next_class		764912	0					
ANR	765674	BreakStatement	break ;	4320:6:96084:96089	764912	28	True				
ANR	765675	Label	case TK_CHAR_TYPE :	4322:4:96096:96113	764912	29	True				
ANR	765676	Identifier	TK_CHAR_TYPE		764912	0					
ANR	765677	ExpressionStatement	"r = add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"	4323:6:96121:96185	764912	30	True				
ANR	765678	AssignmentExpression	"r = add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"		764912	0		=			
ANR	765679	Identifier	r		764912	0					
ANR	765680	CallExpression	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"		764912	1					
ANR	765681	Callee	add_ctype_to_cc		764912	0					
ANR	765682	Identifier	add_ctype_to_cc		764912	0					
ANR	765683	ArgumentList	cc		764912	1					
ANR	765684	Argument	cc		764912	0					
ANR	765685	Identifier	cc		764912	0					
ANR	765686	Argument	tok -> u . prop . ctype		764912	1					
ANR	765687	MemberAccess	tok -> u . prop . ctype		764912	0					
ANR	765688	MemberAccess	tok -> u . prop		764912	0					
ANR	765689	PtrMemberAccess	tok -> u		764912	0					
ANR	765690	Identifier	tok		764912	0					
ANR	765691	Identifier	u		764912	1					
ANR	765692	Identifier	prop		764912	1					
ANR	765693	Identifier	ctype		764912	1					
ANR	765694	Argument	tok -> u . prop . not		764912	2					
ANR	765695	MemberAccess	tok -> u . prop . not		764912	0					
ANR	765696	MemberAccess	tok -> u . prop		764912	0					
ANR	765697	PtrMemberAccess	tok -> u		764912	0					
ANR	765698	Identifier	tok		764912	0					
ANR	765699	Identifier	u		764912	1					
ANR	765700	Identifier	prop		764912	1					
ANR	765701	Identifier	not		764912	1					
ANR	765702	Argument	env		764912	3					
ANR	765703	Identifier	env		764912	0					
ANR	765704	IfStatement	if ( r != 0 )		764912	31					
ANR	765705	Condition	r != 0	4324:10:96197:96202	764912	0	True				
ANR	765706	EqualityExpression	r != 0		764912	0		!=			
ANR	765707	Identifier	r		764912	0					
ANR	765708	PrimaryExpression	0		764912	1					
ANR	765709	ReturnStatement	return r ;	4324:18:96205:96213	764912	1	True				
ANR	765710	Identifier	r		764912	0					
ANR	765711	Label	next_class :	4326:4:96220:96230	764912	32	True				
ANR	765712	Identifier	next_class		764912	0					
ANR	765713	ExpressionStatement	"r = next_state_class ( cc , & vs , & val_type , & state , env )"	4327:6:96238:96291	764912	33	True				
ANR	765714	AssignmentExpression	"r = next_state_class ( cc , & vs , & val_type , & state , env )"		764912	0		=			
ANR	765715	Identifier	r		764912	0					
ANR	765716	CallExpression	"next_state_class ( cc , & vs , & val_type , & state , env )"		764912	1					
ANR	765717	Callee	next_state_class		764912	0					
ANR	765718	Identifier	next_state_class		764912	0					
ANR	765719	ArgumentList	cc		764912	1					
ANR	765720	Argument	cc		764912	0					
ANR	765721	Identifier	cc		764912	0					
ANR	765722	Argument	& vs		764912	1					
ANR	765723	UnaryOperationExpression	& vs		764912	0					
ANR	765724	UnaryOperator	&		764912	0					
ANR	765725	Identifier	vs		764912	1					
ANR	765726	Argument	& val_type		764912	2					
ANR	765727	UnaryOperationExpression	& val_type		764912	0					
ANR	765728	UnaryOperator	&		764912	0					
ANR	765729	Identifier	val_type		764912	1					
ANR	765730	Argument	& state		764912	3					
ANR	765731	UnaryOperationExpression	& state		764912	0					
ANR	765732	UnaryOperator	&		764912	0					
ANR	765733	Identifier	state		764912	1					
ANR	765734	Argument	env		764912	4					
ANR	765735	Identifier	env		764912	0					
ANR	765736	IfStatement	if ( r != 0 )		764912	34					
ANR	765737	Condition	r != 0	4328:10:96303:96308	764912	0	True				
ANR	765738	EqualityExpression	r != 0		764912	0		!=			
ANR	765739	Identifier	r		764912	0					
ANR	765740	PrimaryExpression	0		764912	1					
ANR	765741	GotoStatement	goto err ;	4328:18:96311:96319	764912	1	True				
ANR	765742	Identifier	err		764912	0					
ANR	765743	BreakStatement	break ;	4329:6:96327:96332	764912	35	True				
ANR	765744	Label	case TK_CHAR_PROPERTY :	4331:4:96339:96360	764912	36	True				
ANR	765745	Identifier	TK_CHAR_PROPERTY		764912	0					
ANR	765746	CompoundStatement		157:1:3478:3487	764912	37					
ANR	765747	IdentifierDeclStatement	int ctype ;	4333:1:96371:96380	764912	0	True				
ANR	765748	IdentifierDecl	ctype		764912	0					
ANR	765749	IdentifierDeclType	int		764912	0					
ANR	765750	Identifier	ctype		764912	1					
ANR	765751	ExpressionStatement	"ctype = fetch_char_property_to_ctype ( & p , end , env )"	4335:1:96384:96434	764912	1	True				
ANR	765752	AssignmentExpression	"ctype = fetch_char_property_to_ctype ( & p , end , env )"		764912	0		=			
ANR	765753	Identifier	ctype		764912	0					
ANR	765754	CallExpression	"fetch_char_property_to_ctype ( & p , end , env )"		764912	1					
ANR	765755	Callee	fetch_char_property_to_ctype		764912	0					
ANR	765756	Identifier	fetch_char_property_to_ctype		764912	0					
ANR	765757	ArgumentList	& p		764912	1					
ANR	765758	Argument	& p		764912	0					
ANR	765759	UnaryOperationExpression	& p		764912	0					
ANR	765760	UnaryOperator	&		764912	0					
ANR	765761	Identifier	p		764912	1					
ANR	765762	Argument	end		764912	1					
ANR	765763	Identifier	end		764912	0					
ANR	765764	Argument	env		764912	2					
ANR	765765	Identifier	env		764912	0					
ANR	765766	IfStatement	if ( ctype < 0 )		764912	2					
ANR	765767	Condition	ctype < 0	4336:5:96441:96449	764912	0	True				
ANR	765768	RelationalExpression	ctype < 0		764912	0		<			
ANR	765769	Identifier	ctype		764912	0					
ANR	765770	PrimaryExpression	0		764912	1					
ANR	765771	ReturnStatement	return ctype ;	4336:16:96452:96464	764912	1	True				
ANR	765772	Identifier	ctype		764912	0					
ANR	765773	ExpressionStatement	"r = add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"	4337:1:96467:96519	764912	3	True				
ANR	765774	AssignmentExpression	"r = add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"		764912	0		=			
ANR	765775	Identifier	r		764912	0					
ANR	765776	CallExpression	"add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"		764912	1					
ANR	765777	Callee	add_ctype_to_cc		764912	0					
ANR	765778	Identifier	add_ctype_to_cc		764912	0					
ANR	765779	ArgumentList	cc		764912	1					
ANR	765780	Argument	cc		764912	0					
ANR	765781	Identifier	cc		764912	0					
ANR	765782	Argument	ctype		764912	1					
ANR	765783	Identifier	ctype		764912	0					
ANR	765784	Argument	tok -> u . prop . not		764912	2					
ANR	765785	MemberAccess	tok -> u . prop . not		764912	0					
ANR	765786	MemberAccess	tok -> u . prop		764912	0					
ANR	765787	PtrMemberAccess	tok -> u		764912	0					
ANR	765788	Identifier	tok		764912	0					
ANR	765789	Identifier	u		764912	1					
ANR	765790	Identifier	prop		764912	1					
ANR	765791	Identifier	not		764912	1					
ANR	765792	Argument	env		764912	3					
ANR	765793	Identifier	env		764912	0					
ANR	765794	IfStatement	if ( r != 0 )		764912	4					
ANR	765795	Condition	r != 0	4338:5:96526:96531	764912	0	True				
ANR	765796	EqualityExpression	r != 0		764912	0		!=			
ANR	765797	Identifier	r		764912	0					
ANR	765798	PrimaryExpression	0		764912	1					
ANR	765799	ReturnStatement	return r ;	4338:13:96534:96542	764912	1	True				
ANR	765800	Identifier	r		764912	0					
ANR	765801	GotoStatement	goto next_class ;	4339:1:96545:96560	764912	5	True				
ANR	765802	Identifier	next_class		764912	0					
ANR	765803	BreakStatement	break ;	4341:6:96576:96581	764912	38	True				
ANR	765804	Label	case TK_CC_RANGE :	4343:4:96588:96604	764912	39	True				
ANR	765805	Identifier	TK_CC_RANGE		764912	0					
ANR	765806	IfStatement	if ( state == CCS_VALUE )		764912	40					
ANR	765807	Condition	state == CCS_VALUE	4344:10:96616:96633	764912	0	True				
ANR	765808	EqualityExpression	state == CCS_VALUE		764912	0		==			
ANR	765809	Identifier	state		764912	0					
ANR	765810	Identifier	CCS_VALUE		764912	1					
ANR	765811	CompoundStatement		168:30:3743:3743	764912	1					
ANR	765812	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4345:1:96639:96679	764912	0	True				
ANR	765813	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		764912	0		=			
ANR	765814	Identifier	r		764912	0					
ANR	765815	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		764912	1					
ANR	765816	Callee	fetch_token_in_cc		764912	0					
ANR	765817	Identifier	fetch_token_in_cc		764912	0					
ANR	765818	ArgumentList	tok		764912	1					
ANR	765819	Argument	tok		764912	0					
ANR	765820	Identifier	tok		764912	0					
ANR	765821	Argument	& p		764912	1					
ANR	765822	UnaryOperationExpression	& p		764912	0					
ANR	765823	UnaryOperator	&		764912	0					
ANR	765824	Identifier	p		764912	1					
ANR	765825	Argument	end		764912	2					
ANR	765826	Identifier	end		764912	0					
ANR	765827	Argument	env		764912	3					
ANR	765828	Identifier	env		764912	0					
ANR	765829	IfStatement	if ( r < 0 )		764912	1					
ANR	765830	Condition	r < 0	4346:5:96686:96690	764912	0	True				
ANR	765831	RelationalExpression	r < 0		764912	0		<			
ANR	765832	Identifier	r		764912	0					
ANR	765833	PrimaryExpression	0		764912	1					
ANR	765834	GotoStatement	goto err ;	4346:12:96693:96701	764912	1	True				
ANR	765835	Identifier	err		764912	0					
ANR	765836	ExpressionStatement	fetched = 1	4347:1:96704:96715	764912	2	True				
ANR	765837	AssignmentExpression	fetched = 1		764912	0		=			
ANR	765838	Identifier	fetched		764912	0					
ANR	765839	PrimaryExpression	1		764912	1					
ANR	765840	IfStatement	if ( r == TK_CC_CLOSE )		764912	3					
ANR	765841	Condition	r == TK_CC_CLOSE	4348:5:96722:96737	764912	0	True				
ANR	765842	EqualityExpression	r == TK_CC_CLOSE		764912	0		==			
ANR	765843	Identifier	r		764912	0					
ANR	765844	Identifier	TK_CC_CLOSE		764912	1					
ANR	765845	CompoundStatement		172:23:3847:3847	764912	1					
ANR	765846	Label	range_end_val :	4349:1:96760:96773	764912	0	True				
ANR	765847	Identifier	range_end_val		764912	0					
ANR	765848	ExpressionStatement	v = ( OnigCodePoint ) '-'	4350:3:96778:96801	764912	1	True				
ANR	765849	AssignmentExpression	v = ( OnigCodePoint ) '-'		764912	0		=			
ANR	765850	Identifier	v		764912	0					
ANR	765851	CastExpression	( OnigCodePoint ) '-'		764912	1					
ANR	765852	CastTarget	OnigCodePoint		764912	0					
ANR	765853	PrimaryExpression	'-'		764912	1					
ANR	765854	ExpressionStatement	in_israw = 0	4351:3:96806:96818	764912	2	True				
ANR	765855	AssignmentExpression	in_israw = 0		764912	0		=			
ANR	765856	Identifier	in_israw		764912	0					
ANR	765857	PrimaryExpression	0		764912	1					
ANR	765858	GotoStatement	goto val_entry ;	4352:3:96823:96837	764912	3	True				
ANR	765859	Identifier	val_entry		764912	0					
ANR	765860	ElseStatement	else		764912	0					
ANR	765861	IfStatement	if ( r == TK_CC_AND )		764912	0					
ANR	765862	Condition	r == TK_CC_AND	4354:10:96852:96865	764912	0	True				
ANR	765863	EqualityExpression	r == TK_CC_AND		764912	0		==			
ANR	765864	Identifier	r		764912	0					
ANR	765865	Identifier	TK_CC_AND		764912	1					
ANR	765866	CompoundStatement		178:26:3975:3975	764912	1					
ANR	765867	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4355:3:96873:96903	764912	0	True				
ANR	765868	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		764912	0					
ANR	765869	Callee	CC_ESC_WARN		764912	0					
ANR	765870	Identifier	CC_ESC_WARN		764912	0					
ANR	765871	ArgumentList	env		764912	1					
ANR	765872	Argument	env		764912	0					
ANR	765873	Identifier	env		764912	0					
ANR	765874	Argument	"( UChar * ) ""-"""		764912	1					
ANR	765875	CastExpression	"( UChar * ) ""-"""		764912	0					
ANR	765876	CastTarget	UChar *		764912	0					
ANR	765877	PrimaryExpression	"""-"""		764912	1					
ANR	765878	GotoStatement	goto range_end_val ;	4356:3:96908:96926	764912	1	True				
ANR	765879	Identifier	range_end_val		764912	0					
ANR	765880	ExpressionStatement	state = CCS_RANGE	4358:1:96932:96949	764912	4	True				
ANR	765881	AssignmentExpression	state = CCS_RANGE		764912	0		=			
ANR	765882	Identifier	state		764912	0					
ANR	765883	Identifier	CCS_RANGE		764912	1					
ANR	765884	ElseStatement	else		764912	0					
ANR	765885	IfStatement	if ( state == CCS_START )		764912	0					
ANR	765886	Condition	state == CCS_START	4360:15:96974:96991	764912	0	True				
ANR	765887	EqualityExpression	state == CCS_START		764912	0		==			
ANR	765888	Identifier	state		764912	0					
ANR	765889	Identifier	CCS_START		764912	1					
ANR	765890	CompoundStatement		184:35:4101:4101	764912	1					
ANR	765891	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4362:1:97021:97049	764912	0	True				
ANR	765892	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		764912	0		=			
ANR	765893	Identifier	v		764912	0					
ANR	765894	CastExpression	( OnigCodePoint ) tok -> u . c		764912	1					
ANR	765895	CastTarget	OnigCodePoint		764912	0					
ANR	765896	MemberAccess	tok -> u . c		764912	1					
ANR	765897	PtrMemberAccess	tok -> u		764912	0					
ANR	765898	Identifier	tok		764912	0					
ANR	765899	Identifier	u		764912	1					
ANR	765900	Identifier	c		764912	1					
ANR	765901	ExpressionStatement	in_israw = 0	4363:1:97052:97064	764912	1	True				
ANR	765902	AssignmentExpression	in_israw = 0		764912	0		=			
ANR	765903	Identifier	in_israw		764912	0					
ANR	765904	PrimaryExpression	0		764912	1					
ANR	765905	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4365:1:97068:97108	764912	2	True				
ANR	765906	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		764912	0		=			
ANR	765907	Identifier	r		764912	0					
ANR	765908	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		764912	1					
ANR	765909	Callee	fetch_token_in_cc		764912	0					
ANR	765910	Identifier	fetch_token_in_cc		764912	0					
ANR	765911	ArgumentList	tok		764912	1					
ANR	765912	Argument	tok		764912	0					
ANR	765913	Identifier	tok		764912	0					
ANR	765914	Argument	& p		764912	1					
ANR	765915	UnaryOperationExpression	& p		764912	0					
ANR	765916	UnaryOperator	&		764912	0					
ANR	765917	Identifier	p		764912	1					
ANR	765918	Argument	end		764912	2					
ANR	765919	Identifier	end		764912	0					
ANR	765920	Argument	env		764912	3					
ANR	765921	Identifier	env		764912	0					
ANR	765922	IfStatement	if ( r < 0 )		764912	3					
ANR	765923	Condition	r < 0	4366:5:97115:97119	764912	0	True				
ANR	765924	RelationalExpression	r < 0		764912	0		<			
ANR	765925	Identifier	r		764912	0					
ANR	765926	PrimaryExpression	0		764912	1					
ANR	765927	GotoStatement	goto err ;	4366:12:97122:97130	764912	1	True				
ANR	765928	Identifier	err		764912	0					
ANR	765929	ExpressionStatement	fetched = 1	4367:1:97133:97144	764912	4	True				
ANR	765930	AssignmentExpression	fetched = 1		764912	0		=			
ANR	765931	Identifier	fetched		764912	0					
ANR	765932	PrimaryExpression	1		764912	1					
ANR	765933	IfStatement	if ( r == TK_CC_RANGE || and_start != 0 )		764912	5					
ANR	765934	Condition	r == TK_CC_RANGE || and_start != 0	4369:5:97186:97219	764912	0	True				
ANR	765935	OrExpression	r == TK_CC_RANGE || and_start != 0		764912	0		||			
ANR	765936	EqualityExpression	r == TK_CC_RANGE		764912	0		==			
ANR	765937	Identifier	r		764912	0					
ANR	765938	Identifier	TK_CC_RANGE		764912	1					
ANR	765939	EqualityExpression	and_start != 0		764912	1		!=			
ANR	765940	Identifier	and_start		764912	0					
ANR	765941	PrimaryExpression	0		764912	1					
ANR	765942	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4370:3:97225:97255	764912	1	True				
ANR	765943	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		764912	0					
ANR	765944	Callee	CC_ESC_WARN		764912	0					
ANR	765945	Identifier	CC_ESC_WARN		764912	0					
ANR	765946	ArgumentList	env		764912	1					
ANR	765947	Argument	env		764912	0					
ANR	765948	Identifier	env		764912	0					
ANR	765949	Argument	"( UChar * ) ""-"""		764912	1					
ANR	765950	CastExpression	"( UChar * ) ""-"""		764912	0					
ANR	765951	CastTarget	UChar *		764912	0					
ANR	765952	PrimaryExpression	"""-"""		764912	1					
ANR	765953	GotoStatement	goto val_entry ;	4372:1:97259:97273	764912	6	True				
ANR	765954	Identifier	val_entry		764912	0					
ANR	765955	ElseStatement	else		764912	0					
ANR	765956	IfStatement	if ( state == CCS_RANGE )		764912	0					
ANR	765957	Condition	state == CCS_RANGE	4374:15:97298:97315	764912	0	True				
ANR	765958	EqualityExpression	state == CCS_RANGE		764912	0		==			
ANR	765959	Identifier	state		764912	0					
ANR	765960	Identifier	CCS_RANGE		764912	1					
ANR	765961	CompoundStatement		198:35:4425:4425	764912	1					
ANR	765962	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4375:1:97321:97351	764912	0	True				
ANR	765963	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		764912	0					
ANR	765964	Callee	CC_ESC_WARN		764912	0					
ANR	765965	Identifier	CC_ESC_WARN		764912	0					
ANR	765966	ArgumentList	env		764912	1					
ANR	765967	Argument	env		764912	0					
ANR	765968	Identifier	env		764912	0					
ANR	765969	Argument	"( UChar * ) ""-"""		764912	1					
ANR	765970	CastExpression	"( UChar * ) ""-"""		764912	0					
ANR	765971	CastTarget	UChar *		764912	0					
ANR	765972	PrimaryExpression	"""-"""		764912	1					
ANR	765973	GotoStatement	goto sb_char ;	4376:1:97354:97366	764912	1	True				
ANR	765974	Identifier	sb_char		764912	0					
ANR	765975	ElseStatement	else		764912	0					
ANR	765976	CompoundStatement		202:11:4519:4519	764912	0					
ANR	765977	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4379:1:97434:97474	764912	0	True				
ANR	765978	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		764912	0		=			
ANR	765979	Identifier	r		764912	0					
ANR	765980	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		764912	1					
ANR	765981	Callee	fetch_token_in_cc		764912	0					
ANR	765982	Identifier	fetch_token_in_cc		764912	0					
ANR	765983	ArgumentList	tok		764912	1					
ANR	765984	Argument	tok		764912	0					
ANR	765985	Identifier	tok		764912	0					
ANR	765986	Argument	& p		764912	1					
ANR	765987	UnaryOperationExpression	& p		764912	0					
ANR	765988	UnaryOperator	&		764912	0					
ANR	765989	Identifier	p		764912	1					
ANR	765990	Argument	end		764912	2					
ANR	765991	Identifier	end		764912	0					
ANR	765992	Argument	env		764912	3					
ANR	765993	Identifier	env		764912	0					
ANR	765994	IfStatement	if ( r < 0 )		764912	1					
ANR	765995	Condition	r < 0	4380:5:97481:97485	764912	0	True				
ANR	765996	RelationalExpression	r < 0		764912	0		<			
ANR	765997	Identifier	r		764912	0					
ANR	765998	PrimaryExpression	0		764912	1					
ANR	765999	GotoStatement	goto err ;	4380:12:97488:97496	764912	1	True				
ANR	766000	Identifier	err		764912	0					
ANR	766001	ExpressionStatement	fetched = 1	4381:1:97499:97510	764912	2	True				
ANR	766002	AssignmentExpression	fetched = 1		764912	0		=			
ANR	766003	Identifier	fetched		764912	0					
ANR	766004	PrimaryExpression	1		764912	1					
ANR	766005	IfStatement	if ( r == TK_CC_CLOSE )		764912	3					
ANR	766006	Condition	r == TK_CC_CLOSE	4382:5:97517:97532	764912	0	True				
ANR	766007	EqualityExpression	r == TK_CC_CLOSE		764912	0		==			
ANR	766008	Identifier	r		764912	0					
ANR	766009	Identifier	TK_CC_CLOSE		764912	1					
ANR	766010	GotoStatement	goto range_end_val ;	4382:23:97535:97553	764912	1	True				
ANR	766011	Identifier	range_end_val		764912	0					
ANR	766012	ElseStatement	else		764912	0					
ANR	766013	IfStatement	if ( r == TK_CC_AND )		764912	0					
ANR	766014	Condition	r == TK_CC_AND	4383:10:97584:97597	764912	0	True				
ANR	766015	EqualityExpression	r == TK_CC_AND		764912	0		==			
ANR	766016	Identifier	r		764912	0					
ANR	766017	Identifier	TK_CC_AND		764912	1					
ANR	766018	CompoundStatement		207:26:4707:4707	764912	1					
ANR	766019	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4384:3:97605:97635	764912	0	True				
ANR	766020	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		764912	0					
ANR	766021	Callee	CC_ESC_WARN		764912	0					
ANR	766022	Identifier	CC_ESC_WARN		764912	0					
ANR	766023	ArgumentList	env		764912	1					
ANR	766024	Argument	env		764912	0					
ANR	766025	Identifier	env		764912	0					
ANR	766026	Argument	"( UChar * ) ""-"""		764912	1					
ANR	766027	CastExpression	"( UChar * ) ""-"""		764912	0					
ANR	766028	CastTarget	UChar *		764912	0					
ANR	766029	PrimaryExpression	"""-"""		764912	1					
ANR	766030	GotoStatement	goto range_end_val ;	4385:3:97640:97658	764912	1	True				
ANR	766031	Identifier	range_end_val		764912	0					
ANR	766032	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC ) )"		764912	4					
ANR	766033	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC )"	4388:5:97670:97732	764912	0	True				
ANR	766034	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC )"		764912	0					
ANR	766035	Callee	IS_SYNTAX_BV		764912	0					
ANR	766036	Identifier	IS_SYNTAX_BV		764912	0					
ANR	766037	ArgumentList	env -> syntax		764912	1					
ANR	766038	Argument	env -> syntax		764912	0					
ANR	766039	PtrMemberAccess	env -> syntax		764912	0					
ANR	766040	Identifier	env		764912	0					
ANR	766041	Identifier	syntax		764912	1					
ANR	766042	Argument	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		764912	1					
ANR	766043	Identifier	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		764912	0					
ANR	766044	CompoundStatement		212:70:4842:4842	764912	1					
ANR	766045	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4389:3:97740:97770	764912	0	True				
ANR	766046	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		764912	0					
ANR	766047	Callee	CC_ESC_WARN		764912	0					
ANR	766048	Identifier	CC_ESC_WARN		764912	0					
ANR	766049	ArgumentList	env		764912	1					
ANR	766050	Argument	env		764912	0					
ANR	766051	Identifier	env		764912	0					
ANR	766052	Argument	"( UChar * ) ""-"""		764912	1					
ANR	766053	CastExpression	"( UChar * ) ""-"""		764912	0					
ANR	766054	CastTarget	UChar *		764912	0					
ANR	766055	PrimaryExpression	"""-"""		764912	1					
ANR	766056	GotoStatement	goto sb_char ;	4390:3:97775:97787	764912	1	True				
ANR	766057	Identifier	sb_char		764912	0					
ANR	766058	ExpressionStatement	r = ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS	4392:1:97832:97883	764912	5	True				
ANR	766059	AssignmentExpression	r = ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		764912	0		=			
ANR	766060	Identifier	r		764912	0					
ANR	766061	Identifier	ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		764912	1					
ANR	766062	GotoStatement	goto err ;	4393:1:97886:97894	764912	6	True				
ANR	766063	Identifier	err		764912	0					
ANR	766064	BreakStatement	break ;	4395:6:97910:97915	764912	41	True				
ANR	766065	Label	case TK_CC_CC_OPEN :	4397:4:97922:97940	764912	42	True				
ANR	766066	Identifier	TK_CC_CC_OPEN		764912	0					
ANR	766067	CompoundStatement		224:1:5080:5095	764912	43					
ANR	766068	IdentifierDeclStatement	Node * anode ;	4399:1:97959:97970	764912	0	True				
ANR	766069	IdentifierDecl	* anode		764912	0					
ANR	766070	IdentifierDeclType	Node *		764912	0					
ANR	766071	Identifier	anode		764912	1					
ANR	766072	IdentifierDeclStatement	CClassNode * acc ;	4400:1:97973:97988	764912	1	True				
ANR	766073	IdentifierDecl	* acc		764912	0					
ANR	766074	IdentifierDeclType	CClassNode *		764912	0					
ANR	766075	Identifier	acc		764912	1					
ANR	766076	ExpressionStatement	"r = parse_char_class ( & anode , tok , & p , end , env )"	4402:1:97992:98039	764912	2	True				
ANR	766077	AssignmentExpression	"r = parse_char_class ( & anode , tok , & p , end , env )"		764912	0		=			
ANR	766078	Identifier	r		764912	0					
ANR	766079	CallExpression	"parse_char_class ( & anode , tok , & p , end , env )"		764912	1					
ANR	766080	Callee	parse_char_class		764912	0					
ANR	766081	Identifier	parse_char_class		764912	0					
ANR	766082	ArgumentList	& anode		764912	1					
ANR	766083	Argument	& anode		764912	0					
ANR	766084	UnaryOperationExpression	& anode		764912	0					
ANR	766085	UnaryOperator	&		764912	0					
ANR	766086	Identifier	anode		764912	1					
ANR	766087	Argument	tok		764912	1					
ANR	766088	Identifier	tok		764912	0					
ANR	766089	Argument	& p		764912	2					
ANR	766090	UnaryOperationExpression	& p		764912	0					
ANR	766091	UnaryOperator	&		764912	0					
ANR	766092	Identifier	p		764912	1					
ANR	766093	Argument	end		764912	3					
ANR	766094	Identifier	end		764912	0					
ANR	766095	Argument	env		764912	4					
ANR	766096	Identifier	env		764912	0					
ANR	766097	IfStatement	if ( r != 0 )		764912	3					
ANR	766098	Condition	r != 0	4403:5:98046:98051	764912	0	True				
ANR	766099	EqualityExpression	r != 0		764912	0		!=			
ANR	766100	Identifier	r		764912	0					
ANR	766101	PrimaryExpression	0		764912	1					
ANR	766102	GotoStatement	goto cc_open_err ;	4403:13:98054:98070	764912	1	True				
ANR	766103	Identifier	cc_open_err		764912	0					
ANR	766104	ExpressionStatement	acc = NCCLASS ( anode )	4404:1:98073:98093	764912	4	True				
ANR	766105	AssignmentExpression	acc = NCCLASS ( anode )		764912	0		=			
ANR	766106	Identifier	acc		764912	0					
ANR	766107	CallExpression	NCCLASS ( anode )		764912	1					
ANR	766108	Callee	NCCLASS		764912	0					
ANR	766109	Identifier	NCCLASS		764912	0					
ANR	766110	ArgumentList	anode		764912	1					
ANR	766111	Argument	anode		764912	0					
ANR	766112	Identifier	anode		764912	0					
ANR	766113	ExpressionStatement	"r = or_cclass ( cc , acc , env -> enc )"	4405:1:98096:98128	764912	5	True				
ANR	766114	AssignmentExpression	"r = or_cclass ( cc , acc , env -> enc )"		764912	0		=			
ANR	766115	Identifier	r		764912	0					
ANR	766116	CallExpression	"or_cclass ( cc , acc , env -> enc )"		764912	1					
ANR	766117	Callee	or_cclass		764912	0					
ANR	766118	Identifier	or_cclass		764912	0					
ANR	766119	ArgumentList	cc		764912	1					
ANR	766120	Argument	cc		764912	0					
ANR	766121	Identifier	cc		764912	0					
ANR	766122	Argument	acc		764912	1					
ANR	766123	Identifier	acc		764912	0					
ANR	766124	Argument	env -> enc		764912	2					
ANR	766125	PtrMemberAccess	env -> enc		764912	0					
ANR	766126	Identifier	env		764912	0					
ANR	766127	Identifier	enc		764912	1					
ANR	766128	ExpressionStatement	onig_node_free ( anode )	4407:1:98132:98153	764912	6	True				
ANR	766129	CallExpression	onig_node_free ( anode )		764912	0					
ANR	766130	Callee	onig_node_free		764912	0					
ANR	766131	Identifier	onig_node_free		764912	0					
ANR	766132	ArgumentList	anode		764912	1					
ANR	766133	Argument	anode		764912	0					
ANR	766134	Identifier	anode		764912	0					
ANR	766135	Label	cc_open_err :	4408:6:98161:98172	764912	7	True				
ANR	766136	Identifier	cc_open_err		764912	0					
ANR	766137	IfStatement	if ( r != 0 )		764912	8					
ANR	766138	Condition	r != 0	4409:5:98179:98184	764912	0	True				
ANR	766139	EqualityExpression	r != 0		764912	0		!=			
ANR	766140	Identifier	r		764912	0					
ANR	766141	PrimaryExpression	0		764912	1					
ANR	766142	GotoStatement	goto err ;	4409:13:98187:98195	764912	1	True				
ANR	766143	Identifier	err		764912	0					
ANR	766144	BreakStatement	break ;	4411:6:98211:98216	764912	44	True				
ANR	766145	Label	case TK_CC_AND :	4413:4:98223:98237	764912	45	True				
ANR	766146	Identifier	TK_CC_AND		764912	0					
ANR	766147	CompoundStatement		238:6:5361:5361	764912	46					
ANR	766148	IfStatement	if ( state == CCS_VALUE )		764912	0					
ANR	766149	Condition	state == CCS_VALUE	4415:5:98261:98278	764912	0	True				
ANR	766150	EqualityExpression	state == CCS_VALUE		764912	0		==			
ANR	766151	Identifier	state		764912	0					
ANR	766152	Identifier	CCS_VALUE		764912	1					
ANR	766153	CompoundStatement		239:25:5388:5388	764912	1					
ANR	766154	ExpressionStatement	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"	4416:3:98286:98373	764912	0	True				
ANR	766155	AssignmentExpression	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		764912	0		=			
ANR	766156	Identifier	r		764912	0					
ANR	766157	CallExpression	"next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		764912	1					
ANR	766158	Callee	next_state_val		764912	0					
ANR	766159	Identifier	next_state_val		764912	0					
ANR	766160	ArgumentList	cc		764912	1					
ANR	766161	Argument	cc		764912	0					
ANR	766162	Identifier	cc		764912	0					
ANR	766163	Argument	& vs		764912	1					
ANR	766164	UnaryOperationExpression	& vs		764912	0					
ANR	766165	UnaryOperator	&		764912	0					
ANR	766166	Identifier	vs		764912	1					
ANR	766167	Argument	0		764912	2					
ANR	766168	PrimaryExpression	0		764912	0					
ANR	766169	Argument	& val_israw		764912	3					
ANR	766170	UnaryOperationExpression	& val_israw		764912	0					
ANR	766171	UnaryOperator	&		764912	0					
ANR	766172	Identifier	val_israw		764912	1					
ANR	766173	Argument	0		764912	4					
ANR	766174	PrimaryExpression	0		764912	0					
ANR	766175	Argument	val_type		764912	5					
ANR	766176	Identifier	val_type		764912	0					
ANR	766177	Argument	& val_type		764912	6					
ANR	766178	UnaryOperationExpression	& val_type		764912	0					
ANR	766179	UnaryOperator	&		764912	0					
ANR	766180	Identifier	val_type		764912	1					
ANR	766181	Argument	& state		764912	7					
ANR	766182	UnaryOperationExpression	& state		764912	0					
ANR	766183	UnaryOperator	&		764912	0					
ANR	766184	Identifier	state		764912	1					
ANR	766185	Argument	env		764912	8					
ANR	766186	Identifier	env		764912	0					
ANR	766187	IfStatement	if ( r != 0 )		764912	1					
ANR	766188	Condition	r != 0	4418:7:98382:98387	764912	0	True				
ANR	766189	EqualityExpression	r != 0		764912	0		!=			
ANR	766190	Identifier	r		764912	0					
ANR	766191	PrimaryExpression	0		764912	1					
ANR	766192	GotoStatement	goto err ;	4418:15:98390:98398	764912	1	True				
ANR	766193	Identifier	err		764912	0					
ANR	766194	ExpressionStatement	and_start = 1	4421:1:98438:98451	764912	1	True				
ANR	766195	AssignmentExpression	and_start = 1		764912	0		=			
ANR	766196	Identifier	and_start		764912	0					
ANR	766197	PrimaryExpression	1		764912	1					
ANR	766198	ExpressionStatement	state = CCS_START	4422:1:98454:98471	764912	2	True				
ANR	766199	AssignmentExpression	state = CCS_START		764912	0		=			
ANR	766200	Identifier	state		764912	0					
ANR	766201	Identifier	CCS_START		764912	1					
ANR	766202	IfStatement	if ( IS_NOT_NULL ( prev_cc ) )		764912	3					
ANR	766203	Condition	IS_NOT_NULL ( prev_cc )	4424:5:98479:98498	764912	0	True				
ANR	766204	CallExpression	IS_NOT_NULL ( prev_cc )		764912	0					
ANR	766205	Callee	IS_NOT_NULL		764912	0					
ANR	766206	Identifier	IS_NOT_NULL		764912	0					
ANR	766207	ArgumentList	prev_cc		764912	1					
ANR	766208	Argument	prev_cc		764912	0					
ANR	766209	Identifier	prev_cc		764912	0					
ANR	766210	CompoundStatement		248:27:5608:5608	764912	1					
ANR	766211	ExpressionStatement	"r = and_cclass ( prev_cc , cc , env -> enc )"	4425:3:98506:98543	764912	0	True				
ANR	766212	AssignmentExpression	"r = and_cclass ( prev_cc , cc , env -> enc )"		764912	0		=			
ANR	766213	Identifier	r		764912	0					
ANR	766214	CallExpression	"and_cclass ( prev_cc , cc , env -> enc )"		764912	1					
ANR	766215	Callee	and_cclass		764912	0					
ANR	766216	Identifier	and_cclass		764912	0					
ANR	766217	ArgumentList	prev_cc		764912	1					
ANR	766218	Argument	prev_cc		764912	0					
ANR	766219	Identifier	prev_cc		764912	0					
ANR	766220	Argument	cc		764912	1					
ANR	766221	Identifier	cc		764912	0					
ANR	766222	Argument	env -> enc		764912	2					
ANR	766223	PtrMemberAccess	env -> enc		764912	0					
ANR	766224	Identifier	env		764912	0					
ANR	766225	Identifier	enc		764912	1					
ANR	766226	IfStatement	if ( r != 0 )		764912	1					
ANR	766227	Condition	r != 0	4426:7:98552:98557	764912	0	True				
ANR	766228	EqualityExpression	r != 0		764912	0		!=			
ANR	766229	Identifier	r		764912	0					
ANR	766230	PrimaryExpression	0		764912	1					
ANR	766231	GotoStatement	goto err ;	4426:15:98560:98568	764912	1	True				
ANR	766232	Identifier	err		764912	0					
ANR	766233	ExpressionStatement	bbuf_free ( cc -> mbuf )	4427:3:98573:98592	764912	2	True				
ANR	766234	CallExpression	bbuf_free ( cc -> mbuf )		764912	0					
ANR	766235	Callee	bbuf_free		764912	0					
ANR	766236	Identifier	bbuf_free		764912	0					
ANR	766237	ArgumentList	cc -> mbuf		764912	1					
ANR	766238	Argument	cc -> mbuf		764912	0					
ANR	766239	PtrMemberAccess	cc -> mbuf		764912	0					
ANR	766240	Identifier	cc		764912	0					
ANR	766241	Identifier	mbuf		764912	1					
ANR	766242	ElseStatement	else		764912	0					
ANR	766243	CompoundStatement		253:6:5710:5710	764912	0					
ANR	766244	ExpressionStatement	prev_cc = cc	4430:3:98608:98620	764912	0	True				
ANR	766245	AssignmentExpression	prev_cc = cc		764912	0		=			
ANR	766246	Identifier	prev_cc		764912	0					
ANR	766247	Identifier	cc		764912	1					
ANR	766248	ExpressionStatement	cc = & work_cc	4431:3:98625:98638	764912	1	True				
ANR	766249	AssignmentExpression	cc = & work_cc		764912	0		=			
ANR	766250	Identifier	cc		764912	0					
ANR	766251	UnaryOperationExpression	& work_cc		764912	1					
ANR	766252	UnaryOperator	&		764912	0					
ANR	766253	Identifier	work_cc		764912	1					
ANR	766254	ExpressionStatement	initialize_cclass ( cc )	4433:1:98644:98665	764912	4	True				
ANR	766255	CallExpression	initialize_cclass ( cc )		764912	0					
ANR	766256	Callee	initialize_cclass		764912	0					
ANR	766257	Identifier	initialize_cclass		764912	0					
ANR	766258	ArgumentList	cc		764912	1					
ANR	766259	Argument	cc		764912	0					
ANR	766260	Identifier	cc		764912	0					
ANR	766261	BreakStatement	break ;	4435:6:98681:98686	764912	47	True				
ANR	766262	Label	case TK_EOT :	4437:4:98693:98704	764912	48	True				
ANR	766263	Identifier	TK_EOT		764912	0					
ANR	766264	ExpressionStatement	r = ONIGERR_PREMATURE_END_OF_CHAR_CLASS	4438:6:98712:98751	764912	49	True				
ANR	766265	AssignmentExpression	r = ONIGERR_PREMATURE_END_OF_CHAR_CLASS		764912	0		=			
ANR	766266	Identifier	r		764912	0					
ANR	766267	Identifier	ONIGERR_PREMATURE_END_OF_CHAR_CLASS		764912	1					
ANR	766268	GotoStatement	goto err ;	4439:6:98759:98767	764912	50	True				
ANR	766269	Identifier	err		764912	0					
ANR	766270	BreakStatement	break ;	4440:6:98775:98780	764912	51	True				
ANR	766271	Label	default :	4441:4:98786:98793	764912	52	True				
ANR	766272	Identifier	default		764912	0					
ANR	766273	ExpressionStatement	r = ONIGERR_PARSER_BUG	4442:6:98801:98823	764912	53	True				
ANR	766274	AssignmentExpression	r = ONIGERR_PARSER_BUG		764912	0		=			
ANR	766275	Identifier	r		764912	0					
ANR	766276	Identifier	ONIGERR_PARSER_BUG		764912	1					
ANR	766277	GotoStatement	goto err ;	4443:6:98831:98839	764912	54	True				
ANR	766278	Identifier	err		764912	0					
ANR	766279	BreakStatement	break ;	4444:6:98847:98852	764912	55	True				
ANR	766280	IfStatement	if ( fetched )		764912	2					
ANR	766281	Condition	fetched	4447:8:98869:98875	764912	0	True				
ANR	766282	Identifier	fetched		764912	0					
ANR	766283	ExpressionStatement	r = tok -> type	4448:6:98884:98897	764912	1	True				
ANR	766284	AssignmentExpression	r = tok -> type		764912	0		=			
ANR	766285	Identifier	r		764912	0					
ANR	766286	PtrMemberAccess	tok -> type		764912	1					
ANR	766287	Identifier	tok		764912	0					
ANR	766288	Identifier	type		764912	1					
ANR	766289	ElseStatement	else		764912	0					
ANR	766290	CompoundStatement		273:9:6015:6015	764912	0					
ANR	766291	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4450:6:98916:98956	764912	0	True				
ANR	766292	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		764912	0		=			
ANR	766293	Identifier	r		764912	0					
ANR	766294	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		764912	1					
ANR	766295	Callee	fetch_token_in_cc		764912	0					
ANR	766296	Identifier	fetch_token_in_cc		764912	0					
ANR	766297	ArgumentList	tok		764912	1					
ANR	766298	Argument	tok		764912	0					
ANR	766299	Identifier	tok		764912	0					
ANR	766300	Argument	& p		764912	1					
ANR	766301	UnaryOperationExpression	& p		764912	0					
ANR	766302	UnaryOperator	&		764912	0					
ANR	766303	Identifier	p		764912	1					
ANR	766304	Argument	end		764912	2					
ANR	766305	Identifier	end		764912	0					
ANR	766306	Argument	env		764912	3					
ANR	766307	Identifier	env		764912	0					
ANR	766308	IfStatement	if ( r < 0 )		764912	1					
ANR	766309	Condition	r < 0	4451:10:98968:98972	764912	0	True				
ANR	766310	RelationalExpression	r < 0		764912	0		<			
ANR	766311	Identifier	r		764912	0					
ANR	766312	PrimaryExpression	0		764912	1					
ANR	766313	GotoStatement	goto err ;	4451:17:98975:98983	764912	1	True				
ANR	766314	Identifier	err		764912	0					
ANR	766315	IfStatement	if ( state == CCS_VALUE )		764912	22					
ANR	766316	Condition	state == CCS_VALUE	4455:6:99002:99019	764912	0	True				
ANR	766317	EqualityExpression	state == CCS_VALUE		764912	0		==			
ANR	766318	Identifier	state		764912	0					
ANR	766319	Identifier	CCS_VALUE		764912	1					
ANR	766320	CompoundStatement		279:26:6129:6129	764912	1					
ANR	766321	ExpressionStatement	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"	4456:4:99028:99116	764912	0	True				
ANR	766322	AssignmentExpression	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		764912	0		=			
ANR	766323	Identifier	r		764912	0					
ANR	766324	CallExpression	"next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		764912	1					
ANR	766325	Callee	next_state_val		764912	0					
ANR	766326	Identifier	next_state_val		764912	0					
ANR	766327	ArgumentList	cc		764912	1					
ANR	766328	Argument	cc		764912	0					
ANR	766329	Identifier	cc		764912	0					
ANR	766330	Argument	& vs		764912	1					
ANR	766331	UnaryOperationExpression	& vs		764912	0					
ANR	766332	UnaryOperator	&		764912	0					
ANR	766333	Identifier	vs		764912	1					
ANR	766334	Argument	0		764912	2					
ANR	766335	PrimaryExpression	0		764912	0					
ANR	766336	Argument	& val_israw		764912	3					
ANR	766337	UnaryOperationExpression	& val_israw		764912	0					
ANR	766338	UnaryOperator	&		764912	0					
ANR	766339	Identifier	val_israw		764912	1					
ANR	766340	Argument	0		764912	4					
ANR	766341	PrimaryExpression	0		764912	0					
ANR	766342	Argument	val_type		764912	5					
ANR	766343	Identifier	val_type		764912	0					
ANR	766344	Argument	& val_type		764912	6					
ANR	766345	UnaryOperationExpression	& val_type		764912	0					
ANR	766346	UnaryOperator	&		764912	0					
ANR	766347	Identifier	val_type		764912	1					
ANR	766348	Argument	& state		764912	7					
ANR	766349	UnaryOperationExpression	& state		764912	0					
ANR	766350	UnaryOperator	&		764912	0					
ANR	766351	Identifier	state		764912	1					
ANR	766352	Argument	env		764912	8					
ANR	766353	Identifier	env		764912	0					
ANR	766354	IfStatement	if ( r != 0 )		764912	1					
ANR	766355	Condition	r != 0	4458:8:99126:99131	764912	0	True				
ANR	766356	EqualityExpression	r != 0		764912	0		!=			
ANR	766357	Identifier	r		764912	0					
ANR	766358	PrimaryExpression	0		764912	1					
ANR	766359	GotoStatement	goto err ;	4458:16:99134:99142	764912	1	True				
ANR	766360	Identifier	err		764912	0					
ANR	766361	IfStatement	if ( IS_NOT_NULL ( prev_cc ) )		764912	23					
ANR	766362	Condition	IS_NOT_NULL ( prev_cc )	4461:6:99155:99174	764912	0	True				
ANR	766363	CallExpression	IS_NOT_NULL ( prev_cc )		764912	0					
ANR	766364	Callee	IS_NOT_NULL		764912	0					
ANR	766365	Identifier	IS_NOT_NULL		764912	0					
ANR	766366	ArgumentList	prev_cc		764912	1					
ANR	766367	Argument	prev_cc		764912	0					
ANR	766368	Identifier	prev_cc		764912	0					
ANR	766369	CompoundStatement		285:28:6284:6284	764912	1					
ANR	766370	ExpressionStatement	"r = and_cclass ( prev_cc , cc , env -> enc )"	4462:4:99183:99220	764912	0	True				
ANR	766371	AssignmentExpression	"r = and_cclass ( prev_cc , cc , env -> enc )"		764912	0		=			
ANR	766372	Identifier	r		764912	0					
ANR	766373	CallExpression	"and_cclass ( prev_cc , cc , env -> enc )"		764912	1					
ANR	766374	Callee	and_cclass		764912	0					
ANR	766375	Identifier	and_cclass		764912	0					
ANR	766376	ArgumentList	prev_cc		764912	1					
ANR	766377	Argument	prev_cc		764912	0					
ANR	766378	Identifier	prev_cc		764912	0					
ANR	766379	Argument	cc		764912	1					
ANR	766380	Identifier	cc		764912	0					
ANR	766381	Argument	env -> enc		764912	2					
ANR	766382	PtrMemberAccess	env -> enc		764912	0					
ANR	766383	Identifier	env		764912	0					
ANR	766384	Identifier	enc		764912	1					
ANR	766385	IfStatement	if ( r != 0 )		764912	1					
ANR	766386	Condition	r != 0	4463:8:99230:99235	764912	0	True				
ANR	766387	EqualityExpression	r != 0		764912	0		!=			
ANR	766388	Identifier	r		764912	0					
ANR	766389	PrimaryExpression	0		764912	1					
ANR	766390	GotoStatement	goto err ;	4463:16:99238:99246	764912	1	True				
ANR	766391	Identifier	err		764912	0					
ANR	766392	ExpressionStatement	bbuf_free ( cc -> mbuf )	4464:4:99252:99271	764912	2	True				
ANR	766393	CallExpression	bbuf_free ( cc -> mbuf )		764912	0					
ANR	766394	Callee	bbuf_free		764912	0					
ANR	766395	Identifier	bbuf_free		764912	0					
ANR	766396	ArgumentList	cc -> mbuf		764912	1					
ANR	766397	Argument	cc -> mbuf		764912	0					
ANR	766398	PtrMemberAccess	cc -> mbuf		764912	0					
ANR	766399	Identifier	cc		764912	0					
ANR	766400	Identifier	mbuf		764912	1					
ANR	766401	ExpressionStatement	cc = prev_cc	4465:4:99277:99289	764912	3	True				
ANR	766402	AssignmentExpression	cc = prev_cc		764912	0		=			
ANR	766403	Identifier	cc		764912	0					
ANR	766404	Identifier	prev_cc		764912	1					
ANR	766405	IfStatement	if ( neg != 0 )		764912	24					
ANR	766406	Condition	neg != 0	4468:6:99302:99309	764912	0	True				
ANR	766407	EqualityExpression	neg != 0		764912	0		!=			
ANR	766408	Identifier	neg		764912	0					
ANR	766409	PrimaryExpression	0		764912	1					
ANR	766410	ExpressionStatement	NCCLASS_SET_NOT ( cc )	4469:4:99316:99335	764912	1	True				
ANR	766411	CallExpression	NCCLASS_SET_NOT ( cc )		764912	0					
ANR	766412	Callee	NCCLASS_SET_NOT		764912	0					
ANR	766413	Identifier	NCCLASS_SET_NOT		764912	0					
ANR	766414	ArgumentList	cc		764912	1					
ANR	766415	Argument	cc		764912	0					
ANR	766416	Identifier	cc		764912	0					
ANR	766417	ElseStatement	else		764912	0					
ANR	766418	ExpressionStatement	NCCLASS_CLEAR_NOT ( cc )	4471:4:99348:99369	764912	0	True				
ANR	766419	CallExpression	NCCLASS_CLEAR_NOT ( cc )		764912	0					
ANR	766420	Callee	NCCLASS_CLEAR_NOT		764912	0					
ANR	766421	Identifier	NCCLASS_CLEAR_NOT		764912	0					
ANR	766422	ArgumentList	cc		764912	1					
ANR	766423	Argument	cc		764912	0					
ANR	766424	Identifier	cc		764912	0					
ANR	766425	IfStatement	"if ( IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC ) )"		764912	25					
ANR	766426	Condition	"IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"	4472:6:99377:99466	764912	0	True				
ANR	766427	AndExpression	"IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"		764912	0		&&			
ANR	766428	CallExpression	IS_NCCLASS_NOT ( cc )		764912	0					
ANR	766429	Callee	IS_NCCLASS_NOT		764912	0					
ANR	766430	Identifier	IS_NCCLASS_NOT		764912	0					
ANR	766431	ArgumentList	cc		764912	1					
ANR	766432	Argument	cc		764912	0					
ANR	766433	Identifier	cc		764912	0					
ANR	766434	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"		764912	1					
ANR	766435	Callee	IS_SYNTAX_BV		764912	0					
ANR	766436	Identifier	IS_SYNTAX_BV		764912	0					
ANR	766437	ArgumentList	env -> syntax		764912	1					
ANR	766438	Argument	env -> syntax		764912	0					
ANR	766439	PtrMemberAccess	env -> syntax		764912	0					
ANR	766440	Identifier	env		764912	0					
ANR	766441	Identifier	syntax		764912	1					
ANR	766442	Argument	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		764912	1					
ANR	766443	Identifier	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		764912	0					
ANR	766444	CompoundStatement		298:4:6582:6594	764912	1					
ANR	766445	IdentifierDeclStatement	int is_empty ;	4474:4:99475:99487	764912	0	True				
ANR	766446	IdentifierDecl	is_empty		764912	0					
ANR	766447	IdentifierDeclType	int		764912	0					
ANR	766448	Identifier	is_empty		764912	1					
ANR	766449	ExpressionStatement	is_empty = ( IS_NULL ( cc -> mbuf ) ? 1 : 0 )	4476:4:99494:99532	764912	1	True				
ANR	766450	AssignmentExpression	is_empty = ( IS_NULL ( cc -> mbuf ) ? 1 : 0 )		764912	0		=			
ANR	766451	Identifier	is_empty		764912	0					
ANR	766452	ConditionalExpression	IS_NULL ( cc -> mbuf ) ? 1 : 0		764912	1					
ANR	766453	Condition	IS_NULL ( cc -> mbuf )		764912	0					
ANR	766454	CallExpression	IS_NULL ( cc -> mbuf )		764912	0					
ANR	766455	Callee	IS_NULL		764912	0					
ANR	766456	Identifier	IS_NULL		764912	0					
ANR	766457	ArgumentList	cc -> mbuf		764912	1					
ANR	766458	Argument	cc -> mbuf		764912	0					
ANR	766459	PtrMemberAccess	cc -> mbuf		764912	0					
ANR	766460	Identifier	cc		764912	0					
ANR	766461	Identifier	mbuf		764912	1					
ANR	766462	PrimaryExpression	1		764912	1					
ANR	766463	PrimaryExpression	0		764912	2					
ANR	766464	IfStatement	if ( is_empty != 0 )		764912	2					
ANR	766465	Condition	is_empty != 0	4477:8:99542:99554	764912	0	True				
ANR	766466	EqualityExpression	is_empty != 0		764912	0		!=			
ANR	766467	Identifier	is_empty		764912	0					
ANR	766468	PrimaryExpression	0		764912	1					
ANR	766469	ExpressionStatement	"BITSET_IS_EMPTY ( cc -> bs , is_empty )"	4478:6:99563:99596	764912	1	True				
ANR	766470	CallExpression	"BITSET_IS_EMPTY ( cc -> bs , is_empty )"		764912	0					
ANR	766471	Callee	BITSET_IS_EMPTY		764912	0					
ANR	766472	Identifier	BITSET_IS_EMPTY		764912	0					
ANR	766473	ArgumentList	cc -> bs		764912	1					
ANR	766474	Argument	cc -> bs		764912	0					
ANR	766475	PtrMemberAccess	cc -> bs		764912	0					
ANR	766476	Identifier	cc		764912	0					
ANR	766477	Identifier	bs		764912	1					
ANR	766478	Argument	is_empty		764912	1					
ANR	766479	Identifier	is_empty		764912	0					
ANR	766480	IfStatement	if ( is_empty == 0 )		764912	3					
ANR	766481	Condition	is_empty == 0	4480:8:99607:99619	764912	0	True				
ANR	766482	EqualityExpression	is_empty == 0		764912	0		==			
ANR	766483	Identifier	is_empty		764912	0					
ANR	766484	PrimaryExpression	0		764912	1					
ANR	766485	CompoundStatement		304:23:6729:6729	764912	1					
ANR	766486	Statement	define	4481:1:99625:99630	764912	0	True				
ANR	766487	Statement	NEWLINE_CODE	4481:8:99632:99643	764912	1	True				
ANR	766488	Statement	0x0a	4481:24:99648:99651	764912	2	True				
ANR	766489	IfStatement	"if ( ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE ) )"		764912	3					
ANR	766490	Condition	"ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE )"	4483:10:99664:99710	764912	0	True				
ANR	766491	CallExpression	"ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE )"		764912	0					
ANR	766492	Callee	ONIGENC_IS_CODE_NEWLINE		764912	0					
ANR	766493	Identifier	ONIGENC_IS_CODE_NEWLINE		764912	0					
ANR	766494	ArgumentList	env -> enc		764912	1					
ANR	766495	Argument	env -> enc		764912	0					
ANR	766496	PtrMemberAccess	env -> enc		764912	0					
ANR	766497	Identifier	env		764912	0					
ANR	766498	Identifier	enc		764912	1					
ANR	766499	Argument	NEWLINE_CODE		764912	1					
ANR	766500	Identifier	NEWLINE_CODE		764912	0					
ANR	766501	CompoundStatement		307:59:6820:6820	764912	1					
ANR	766502	IfStatement	"if ( ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1 )"		764912	0					
ANR	766503	Condition	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1"	4484:12:99727:99777	764912	0	True				
ANR	766504	EqualityExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1"		764912	0		==			
ANR	766505	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE )"		764912	0					
ANR	766506	Callee	ONIGENC_CODE_TO_MBCLEN		764912	0					
ANR	766507	Identifier	ONIGENC_CODE_TO_MBCLEN		764912	0					
ANR	766508	ArgumentList	env -> enc		764912	1					
ANR	766509	Argument	env -> enc		764912	0					
ANR	766510	PtrMemberAccess	env -> enc		764912	0					
ANR	766511	Identifier	env		764912	0					
ANR	766512	Identifier	enc		764912	1					
ANR	766513	Argument	NEWLINE_CODE		764912	1					
ANR	766514	Identifier	NEWLINE_CODE		764912	0					
ANR	766515	PrimaryExpression	1		764912	1					
ANR	766516	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , NEWLINE_CODE )"	4485:10:99790:99826	764912	1	True				
ANR	766517	CallExpression	"BITSET_SET_BIT ( cc -> bs , NEWLINE_CODE )"		764912	0					
ANR	766518	Callee	BITSET_SET_BIT		764912	0					
ANR	766519	Identifier	BITSET_SET_BIT		764912	0					
ANR	766520	ArgumentList	cc -> bs		764912	1					
ANR	766521	Argument	cc -> bs		764912	0					
ANR	766522	PtrMemberAccess	cc -> bs		764912	0					
ANR	766523	Identifier	cc		764912	0					
ANR	766524	Identifier	bs		764912	1					
ANR	766525	Argument	NEWLINE_CODE		764912	1					
ANR	766526	Identifier	NEWLINE_CODE		764912	0					
ANR	766527	ElseStatement	else		764912	0					
ANR	766528	ExpressionStatement	"add_code_range ( & ( cc -> mbuf ) , env , NEWLINE_CODE , NEWLINE_CODE )"	4487:10:99851:99911	764912	0	True				
ANR	766529	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , NEWLINE_CODE , NEWLINE_CODE )"		764912	0					
ANR	766530	Callee	add_code_range		764912	0					
ANR	766531	Identifier	add_code_range		764912	0					
ANR	766532	ArgumentList	& ( cc -> mbuf )		764912	1					
ANR	766533	Argument	& ( cc -> mbuf )		764912	0					
ANR	766534	UnaryOperationExpression	& ( cc -> mbuf )		764912	0					
ANR	766535	UnaryOperator	&		764912	0					
ANR	766536	PtrMemberAccess	cc -> mbuf		764912	1					
ANR	766537	Identifier	cc		764912	0					
ANR	766538	Identifier	mbuf		764912	1					
ANR	766539	Argument	env		764912	1					
ANR	766540	Identifier	env		764912	0					
ANR	766541	Argument	NEWLINE_CODE		764912	2					
ANR	766542	Identifier	NEWLINE_CODE		764912	0					
ANR	766543	Argument	NEWLINE_CODE		764912	3					
ANR	766544	Identifier	NEWLINE_CODE		764912	0					
ANR	766545	ExpressionStatement	* src = p	4491:2:99933:99941	764912	26	True				
ANR	766546	AssignmentExpression	* src = p		764912	0		=			
ANR	766547	UnaryOperationExpression	* src		764912	0					
ANR	766548	UnaryOperator	*		764912	0					
ANR	766549	Identifier	src		764912	1					
ANR	766550	Identifier	p		764912	1					
ANR	766551	ReturnStatement	return 0 ;	4492:2:99945:99953	764912	27	True				
ANR	766552	PrimaryExpression	0		764912	0					
ANR	766553	Label	err :	4494:1:99957:99960	764912	28	True				
ANR	766554	Identifier	err		764912	0					
ANR	766555	IfStatement	if ( cc != NCCLASS ( * np ) )		764912	29					
ANR	766556	Condition	cc != NCCLASS ( * np )	4495:6:99968:99985	764912	0	True				
ANR	766557	EqualityExpression	cc != NCCLASS ( * np )		764912	0		!=			
ANR	766558	Identifier	cc		764912	0					
ANR	766559	CallExpression	NCCLASS ( * np )		764912	1					
ANR	766560	Callee	NCCLASS		764912	0					
ANR	766561	Identifier	NCCLASS		764912	0					
ANR	766562	ArgumentList	* np		764912	1					
ANR	766563	Argument	* np		764912	0					
ANR	766564	UnaryOperationExpression	* np		764912	0					
ANR	766565	UnaryOperator	*		764912	0					
ANR	766566	Identifier	np		764912	1					
ANR	766567	ExpressionStatement	bbuf_free ( cc -> mbuf )	4496:4:99992:100011	764912	1	True				
ANR	766568	CallExpression	bbuf_free ( cc -> mbuf )		764912	0					
ANR	766569	Callee	bbuf_free		764912	0					
ANR	766570	Identifier	bbuf_free		764912	0					
ANR	766571	ArgumentList	cc -> mbuf		764912	1					
ANR	766572	Argument	cc -> mbuf		764912	0					
ANR	766573	PtrMemberAccess	cc -> mbuf		764912	0					
ANR	766574	Identifier	cc		764912	0					
ANR	766575	Identifier	mbuf		764912	1					
ANR	766576	ExpressionStatement	onig_node_free ( * np )	4497:2:100015:100034	764912	30	True				
ANR	766577	CallExpression	onig_node_free ( * np )		764912	0					
ANR	766578	Callee	onig_node_free		764912	0					
ANR	766579	Identifier	onig_node_free		764912	0					
ANR	766580	ArgumentList	* np		764912	1					
ANR	766581	Argument	* np		764912	0					
ANR	766582	UnaryOperationExpression	* np		764912	0					
ANR	766583	UnaryOperator	*		764912	0					
ANR	766584	Identifier	np		764912	1					
ANR	766585	ReturnStatement	return r ;	4498:2:100038:100046	764912	31	True				
ANR	766586	Identifier	r		764912	0					
ANR	766587	ReturnType	static int		764912	1					
ANR	766588	Identifier	parse_char_class		764912	2					
ANR	766589	ParameterList	"Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		764912	3					
ANR	766590	Parameter	Node * * np	4175:17:92823:92831	764912	0	True				
ANR	766591	ParameterType	Node * *		764912	0					
ANR	766592	Identifier	np		764912	1					
ANR	766593	Parameter	OnigToken * tok	4175:28:92834:92847	764912	1	True				
ANR	766594	ParameterType	OnigToken *		764912	0					
ANR	766595	Identifier	tok		764912	1					
ANR	766596	Parameter	UChar * * src	4175:44:92850:92860	764912	2	True				
ANR	766597	ParameterType	UChar * *		764912	0					
ANR	766598	Identifier	src		764912	1					
ANR	766599	Parameter	UChar * end	4175:57:92863:92872	764912	3	True				
ANR	766600	ParameterType	UChar *		764912	0					
ANR	766601	Identifier	end		764912	1					
ANR	766602	Parameter	ScanEnv * env	4176:3:92878:92889	764912	4	True				
ANR	766603	ParameterType	ScanEnv *		764912	0					
ANR	766604	Identifier	env		764912	1					
ANR	766605	CFGEntryNode	ENTRY		764912		True				
ANR	766606	CFGExitNode	EXIT		764912		True				
ANR	766607	Symbol	ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		764912						
ANR	766608	Symbol	ONIGERR_PREMATURE_END_OF_CHAR_CLASS		764912						
ANR	766609	Symbol	node_new_cclass		764912						
ANR	766610	Symbol	* cc		764912						
ANR	766611	Symbol	cc -> mbuf		764912						
ANR	766612	Symbol	parse_char_class		764912						
ANR	766613	Symbol	tok -> type		764912						
ANR	766614	Symbol	len		764912						
ANR	766615	Symbol	TK_CC_CLOSE		764912						
ANR	766616	Symbol	CCV_SB		764912						
ANR	766617	Symbol	state		764912						
ANR	766618	Symbol	tok -> escaped		764912						
ANR	766619	Symbol	* buf		764912						
ANR	766620	Symbol	or_cclass		764912						
ANR	766621	Symbol	TK_CC_AND		764912						
ANR	766622	Symbol	cc -> bs		764912						
ANR	766623	Symbol	node		764912						
ANR	766624	Symbol	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		764912						
ANR	766625	Symbol	ONIGENC_IS_CODE_NEWLINE		764912						
ANR	766626	Symbol	val_israw		764912						
ANR	766627	Symbol	CCV_CODE_POINT		764912						
ANR	766628	Symbol	* tok		764912						
ANR	766629	Symbol	ONIGENC_CODE_TO_MBC_MAXLEN		764912						
ANR	766630	Symbol	& anode		764912						
ANR	766631	Symbol	tok -> u . c		764912						
ANR	766632	Symbol	& state		764912						
ANR	766633	Symbol	in_israw		764912						
ANR	766634	Symbol	ONIGENC_MBC_MINLEN		764912						
ANR	766635	Symbol	env -> enc		764912						
ANR	766636	Symbol	tok		764912						
ANR	766637	Symbol	tok -> u . code		764912						
ANR	766638	Symbol	ONIGERR_EMPTY_CHAR_CLASS		764912						
ANR	766639	Symbol	val_type		764912						
ANR	766640	Symbol	& cc -> mbuf		764912						
ANR	766641	Symbol	is_empty		764912						
ANR	766642	Symbol	cc		764912						
ANR	766643	Symbol	& work_cc		764912						
ANR	766644	Symbol	tok -> backp		764912						
ANR	766645	Symbol	i		764912						
ANR	766646	Symbol	anode		764912						
ANR	766647	Symbol	& val_type		764912						
ANR	766648	Symbol	* np		764912						
ANR	766649	Symbol	and_cclass		764912						
ANR	766650	Symbol	fetch_token_in_cc		764912						
ANR	766651	Symbol	enclen		764912						
ANR	766652	Symbol	p		764912						
ANR	766653	Symbol	ONIGENC_CODE_TO_MBCLEN		764912						
ANR	766654	Symbol	r		764912						
ANR	766655	Symbol	buf		764912						
ANR	766656	Symbol	v		764912						
ANR	766657	Symbol	CCS_VALUE		764912						
ANR	766658	Symbol	bufe		764912						
ANR	766659	Symbol	tok -> base		764912						
ANR	766660	Symbol	fetched		764912						
ANR	766661	Symbol	in_type		764912						
ANR	766662	Symbol	acc		764912						
ANR	766663	Symbol	parse_posix_bracket		764912						
ANR	766664	Symbol	IS_NCCLASS_NOT		764912						
ANR	766665	Symbol	NCCLASS		764912						
ANR	766666	Symbol	psave		764912						
ANR	766667	Symbol	* src		764912						
ANR	766668	Symbol	neg		764912						
ANR	766669	Symbol	tok -> u . prop . not		764912						
ANR	766670	Symbol	add_ctype_to_cc		764912						
ANR	766671	Symbol	IS_SYNTAX_BV		764912						
ANR	766672	Symbol	ONIGENC_MBC_TO_CODE		764912						
ANR	766673	Symbol	& val_israw		764912						
ANR	766674	Symbol	tok -> u . prop		764912						
ANR	766675	Symbol	ONIGENC_IS_SINGLEBYTE		764912						
ANR	766676	Symbol	NULL		764912						
ANR	766677	Symbol	CCS_START		764912						
ANR	766678	Symbol	TK_CC_RANGE		764912						
ANR	766679	Symbol	work_cc		764912						
ANR	766680	Symbol	NEWLINE_CODE		764912						
ANR	766681	Symbol	* env		764912						
ANR	766682	Symbol	env -> syntax		764912						
ANR	766683	Symbol	ONIGERR_PARSER_BUG		764912						
ANR	766684	Symbol	ctype		764912						
ANR	766685	Symbol	NULL_NODE		764912						
ANR	766686	Symbol	vs		764912						
ANR	766687	Symbol	fetch_char_property_to_ctype		764912						
ANR	766688	Symbol	and_start		764912						
ANR	766689	Symbol	np		764912						
ANR	766690	Symbol	IS_NOT_NULL		764912						
ANR	766691	Symbol	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		764912						
ANR	766692	Symbol	code_exist_check		764912						
ANR	766693	Symbol	IS_NULL		764912						
ANR	766694	Symbol	end		764912						
ANR	766695	Symbol	tok -> u		764912						
ANR	766696	Symbol	ONIGENC_MBC_MAXLEN		764912						
ANR	766697	Symbol	prev_cc		764912						
ANR	766698	Symbol	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		764912						
ANR	766699	Symbol	src		764912						
ANR	766700	Symbol	& vs		764912						
ANR	766701	Symbol	CCS_RANGE		764912						
ANR	766702	Symbol	env		764912						
ANR	766703	Symbol	next_state_class		764912						
ANR	766704	Symbol	next_state_val		764912						
ANR	766705	Symbol	* i		764912						
ANR	766706	Symbol	& p		764912						
ANR	766707	Symbol	env -> pattern_end		764912						
ANR	766708	Symbol	tok -> u . prop . ctype		764912						
ANR	766709	Symbol	TK_RAW_BYTE		764912						
ANR	766710	Symbol	TK_CHAR		764912						
ANR	766711	Symbol	base		764912						
ANR	766712	DeclStmt									
ANR	766713	Decl							int	"int ( Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env )"	parse_subexp
ANR	766714	Function	parse_enclose	4504:0:100157:106147							
ANR	766715	FunctionDef	"parse_enclose (Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		766714	0					
ANR	766716	CompoundStatement		4507:0:100265:106147	766714	0					
ANR	766717	IdentifierDeclStatement	"int r , num ;"	4508:2:100269:100279	766714	0	True				
ANR	766718	IdentifierDecl	r		766714	0					
ANR	766719	IdentifierDeclType	int		766714	0					
ANR	766720	Identifier	r		766714	1					
ANR	766721	IdentifierDecl	num		766714	1					
ANR	766722	IdentifierDeclType	int		766714	0					
ANR	766723	Identifier	num		766714	1					
ANR	766724	IdentifierDeclStatement	Node * target ;	4509:2:100283:100295	766714	1	True				
ANR	766725	IdentifierDecl	* target		766714	0					
ANR	766726	IdentifierDeclType	Node *		766714	0					
ANR	766727	Identifier	target		766714	1					
ANR	766728	IdentifierDeclStatement	OnigOptionType option ;	4510:2:100299:100320	766714	2	True				
ANR	766729	IdentifierDecl	option		766714	0					
ANR	766730	IdentifierDeclType	OnigOptionType		766714	0					
ANR	766731	Identifier	option		766714	1					
ANR	766732	IdentifierDeclStatement	OnigCodePoint c ;	4511:2:100324:100339	766714	3	True				
ANR	766733	IdentifierDecl	c		766714	0					
ANR	766734	IdentifierDeclType	OnigCodePoint		766714	0					
ANR	766735	Identifier	c		766714	1					
ANR	766736	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	4512:2:100343:100370	766714	4	True				
ANR	766737	IdentifierDecl	enc = env -> enc		766714	0					
ANR	766738	IdentifierDeclType	OnigEncoding		766714	0					
ANR	766739	Identifier	enc		766714	1					
ANR	766740	AssignmentExpression	enc = env -> enc		766714	2		=			
ANR	766741	Identifier	enc		766714	0					
ANR	766742	PtrMemberAccess	env -> enc		766714	1					
ANR	766743	Identifier	env		766714	0					
ANR	766744	Identifier	enc		766714	1					
ANR	766745	IdentifierDeclStatement	int list_capture ;	4515:2:100398:100414	766714	5	True				
ANR	766746	IdentifierDecl	list_capture		766714	0					
ANR	766747	IdentifierDeclType	int		766714	0					
ANR	766748	Identifier	list_capture		766714	1					
ANR	766749	IdentifierDeclStatement	UChar * p = * src ;	4518:2:100426:100441	766714	6	True				
ANR	766750	IdentifierDecl	* p = * src		766714	0					
ANR	766751	IdentifierDeclType	UChar *		766714	0					
ANR	766752	Identifier	p		766714	1					
ANR	766753	AssignmentExpression	* p = * src		766714	2		=			
ANR	766754	Identifier	p		766714	0					
ANR	766755	UnaryOperationExpression	* src		766714	1					
ANR	766756	UnaryOperator	*		766714	0					
ANR	766757	Identifier	src		766714	1					
ANR	766758	ExpressionStatement	PFETCH_READY	4519:2:100445:100457	766714	7	True				
ANR	766759	Identifier	PFETCH_READY		766714	0					
ANR	766760	ExpressionStatement	* np = NULL	4521:2:100462:100472	766714	8	True				
ANR	766761	AssignmentExpression	* np = NULL		766714	0		=			
ANR	766762	UnaryOperationExpression	* np		766714	0					
ANR	766763	UnaryOperator	*		766714	0					
ANR	766764	Identifier	np		766714	1					
ANR	766765	Identifier	NULL		766714	1					
ANR	766766	IfStatement	if ( PEND )		766714	9					
ANR	766767	Condition	PEND	4522:6:100480:100483	766714	0	True				
ANR	766768	Identifier	PEND		766714	0					
ANR	766769	ReturnStatement	return ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS ;	4522:12:100486:100539	766714	1	True				
ANR	766770	Identifier	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		766714	0					
ANR	766771	ExpressionStatement	option = env -> option	4524:2:100544:100564	766714	10	True				
ANR	766772	AssignmentExpression	option = env -> option		766714	0		=			
ANR	766773	Identifier	option		766714	0					
ANR	766774	PtrMemberAccess	env -> option		766714	1					
ANR	766775	Identifier	env		766714	0					
ANR	766776	Identifier	option		766714	1					
ANR	766777	IfStatement	"if ( PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT ) )"		766714	11					
ANR	766778	Condition	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"	4525:6:100572:100653	766714	0	True				
ANR	766779	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		766714	0		&&			
ANR	766780	CallExpression	PPEEK_IS ( '?' )		766714	0					
ANR	766781	Callee	PPEEK_IS		766714	0					
ANR	766782	Identifier	PPEEK_IS		766714	0					
ANR	766783	ArgumentList	'?'		766714	1					
ANR	766784	Argument	'?'		766714	0					
ANR	766785	PrimaryExpression	'?'		766714	0					
ANR	766786	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		766714	1					
ANR	766787	Callee	IS_SYNTAX_OP2		766714	0					
ANR	766788	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	766789	ArgumentList	env -> syntax		766714	1					
ANR	766790	Argument	env -> syntax		766714	0					
ANR	766791	PtrMemberAccess	env -> syntax		766714	0					
ANR	766792	Identifier	env		766714	0					
ANR	766793	Identifier	syntax		766714	1					
ANR	766794	Argument	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		766714	1					
ANR	766795	Identifier	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		766714	0					
ANR	766796	CompoundStatement		20:67:390:390	766714	1					
ANR	766797	ExpressionStatement	PINC	4527:4:100662:100666	766714	0	True				
ANR	766798	Identifier	PINC		766714	0					
ANR	766799	IfStatement	if ( PEND )		766714	1					
ANR	766800	Condition	PEND	4528:8:100676:100679	766714	0	True				
ANR	766801	Identifier	PEND		766714	0					
ANR	766802	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	4528:14:100682:100717	766714	1	True				
ANR	766803	Identifier	ONIGERR_END_PATTERN_IN_GROUP		766714	0					
ANR	766804	ExpressionStatement	PFETCH ( c )	4530:4:100724:100733	766714	2	True				
ANR	766805	CallExpression	PFETCH ( c )		766714	0					
ANR	766806	Callee	PFETCH		766714	0					
ANR	766807	Identifier	PFETCH		766714	0					
ANR	766808	ArgumentList	c		766714	1					
ANR	766809	Argument	c		766714	0					
ANR	766810	Identifier	c		766714	0					
ANR	766811	SwitchStatement	switch ( c )		766714	3					
ANR	766812	Condition	c	4531:12:100747:100747	766714	0	True				
ANR	766813	Identifier	c		766714	0					
ANR	766814	CompoundStatement		25:15:484:484	766714	1					
ANR	766815	Label	case ':' :	4532:4:100756:100764	766714	0	True				
ANR	766816	Label	group :	4533:4:100800:100805	766714	1	True				
ANR	766817	Identifier	group		766714	0					
ANR	766818	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4534:6:100813:100847	766714	2	True				
ANR	766819	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		766714	0		=			
ANR	766820	Identifier	r		766714	0					
ANR	766821	CallExpression	"fetch_token ( tok , & p , end , env )"		766714	1					
ANR	766822	Callee	fetch_token		766714	0					
ANR	766823	Identifier	fetch_token		766714	0					
ANR	766824	ArgumentList	tok		766714	1					
ANR	766825	Argument	tok		766714	0					
ANR	766826	Identifier	tok		766714	0					
ANR	766827	Argument	& p		766714	1					
ANR	766828	UnaryOperationExpression	& p		766714	0					
ANR	766829	UnaryOperator	&		766714	0					
ANR	766830	Identifier	p		766714	1					
ANR	766831	Argument	end		766714	2					
ANR	766832	Identifier	end		766714	0					
ANR	766833	Argument	env		766714	3					
ANR	766834	Identifier	env		766714	0					
ANR	766835	IfStatement	if ( r < 0 )		766714	3					
ANR	766836	Condition	r < 0	4535:10:100859:100863	766714	0	True				
ANR	766837	RelationalExpression	r < 0		766714	0		<			
ANR	766838	Identifier	r		766714	0					
ANR	766839	PrimaryExpression	0		766714	1					
ANR	766840	ReturnStatement	return r ;	4535:17:100866:100874	766714	1	True				
ANR	766841	Identifier	r		766714	0					
ANR	766842	ExpressionStatement	"r = parse_subexp ( np , tok , term , & p , end , env )"	4536:6:100882:100927	766714	4	True				
ANR	766843	AssignmentExpression	"r = parse_subexp ( np , tok , term , & p , end , env )"		766714	0		=			
ANR	766844	Identifier	r		766714	0					
ANR	766845	CallExpression	"parse_subexp ( np , tok , term , & p , end , env )"		766714	1					
ANR	766846	Callee	parse_subexp		766714	0					
ANR	766847	Identifier	parse_subexp		766714	0					
ANR	766848	ArgumentList	np		766714	1					
ANR	766849	Argument	np		766714	0					
ANR	766850	Identifier	np		766714	0					
ANR	766851	Argument	tok		766714	1					
ANR	766852	Identifier	tok		766714	0					
ANR	766853	Argument	term		766714	2					
ANR	766854	Identifier	term		766714	0					
ANR	766855	Argument	& p		766714	3					
ANR	766856	UnaryOperationExpression	& p		766714	0					
ANR	766857	UnaryOperator	&		766714	0					
ANR	766858	Identifier	p		766714	1					
ANR	766859	Argument	end		766714	4					
ANR	766860	Identifier	end		766714	0					
ANR	766861	Argument	env		766714	5					
ANR	766862	Identifier	env		766714	0					
ANR	766863	IfStatement	if ( r < 0 )		766714	5					
ANR	766864	Condition	r < 0	4537:10:100939:100943	766714	0	True				
ANR	766865	RelationalExpression	r < 0		766714	0		<			
ANR	766866	Identifier	r		766714	0					
ANR	766867	PrimaryExpression	0		766714	1					
ANR	766868	ReturnStatement	return r ;	4537:17:100946:100954	766714	1	True				
ANR	766869	Identifier	r		766714	0					
ANR	766870	ExpressionStatement	* src = p	4538:6:100962:100970	766714	6	True				
ANR	766871	AssignmentExpression	* src = p		766714	0		=			
ANR	766872	UnaryOperationExpression	* src		766714	0					
ANR	766873	UnaryOperator	*		766714	0					
ANR	766874	Identifier	src		766714	1					
ANR	766875	Identifier	p		766714	1					
ANR	766876	ReturnStatement	return 1 ;	4539:6:100978:100986	766714	7	True				
ANR	766877	PrimaryExpression	1		766714	0					
ANR	766878	BreakStatement	break ;	4540:6:101006:101011	766714	8	True				
ANR	766879	Label	case '=' :	4542:4:101018:101026	766714	9	True				
ANR	766880	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_PREC_READ )	4543:6:101034:101078	766714	10	True				
ANR	766881	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_PREC_READ )		766714	0		=			
ANR	766882	UnaryOperationExpression	* np		766714	0					
ANR	766883	UnaryOperator	*		766714	0					
ANR	766884	Identifier	np		766714	1					
ANR	766885	CallExpression	onig_node_new_anchor ( ANCHOR_PREC_READ )		766714	1					
ANR	766886	Callee	onig_node_new_anchor		766714	0					
ANR	766887	Identifier	onig_node_new_anchor		766714	0					
ANR	766888	ArgumentList	ANCHOR_PREC_READ		766714	1					
ANR	766889	Argument	ANCHOR_PREC_READ		766714	0					
ANR	766890	Identifier	ANCHOR_PREC_READ		766714	0					
ANR	766891	BreakStatement	break ;	4544:6:101086:101091	766714	11	True				
ANR	766892	Label	case '!' :	4545:4:101097:101105	766714	12	True				
ANR	766893	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )	4546:6:101143:101191	766714	13	True				
ANR	766894	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )		766714	0		=			
ANR	766895	UnaryOperationExpression	* np		766714	0					
ANR	766896	UnaryOperator	*		766714	0					
ANR	766897	Identifier	np		766714	1					
ANR	766898	CallExpression	onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )		766714	1					
ANR	766899	Callee	onig_node_new_anchor		766714	0					
ANR	766900	Identifier	onig_node_new_anchor		766714	0					
ANR	766901	ArgumentList	ANCHOR_PREC_READ_NOT		766714	1					
ANR	766902	Argument	ANCHOR_PREC_READ_NOT		766714	0					
ANR	766903	Identifier	ANCHOR_PREC_READ_NOT		766714	0					
ANR	766904	BreakStatement	break ;	4547:6:101199:101204	766714	14	True				
ANR	766905	Label	case '>' :	4548:4:101210:101218	766714	15	True				
ANR	766906	ExpressionStatement	* np = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )	4549:6:101266:101312	766714	16	True				
ANR	766907	AssignmentExpression	* np = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		766714	0		=			
ANR	766908	UnaryOperationExpression	* np		766714	0					
ANR	766909	UnaryOperator	*		766714	0					
ANR	766910	Identifier	np		766714	1					
ANR	766911	CallExpression	node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		766714	1					
ANR	766912	Callee	node_new_enclose		766714	0					
ANR	766913	Identifier	node_new_enclose		766714	0					
ANR	766914	ArgumentList	ENCLOSE_STOP_BACKTRACK		766714	1					
ANR	766915	Argument	ENCLOSE_STOP_BACKTRACK		766714	0					
ANR	766916	Identifier	ENCLOSE_STOP_BACKTRACK		766714	0					
ANR	766917	BreakStatement	break ;	4550:6:101320:101325	766714	17	True				
ANR	766918	Label	case '\\'' :	4553:4:101355:101364	766714	18	True				
ANR	766919	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		766714	19					
ANR	766920	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4554:10:101376:101436	766714	0	True				
ANR	766921	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		766714	0					
ANR	766922	Callee	IS_SYNTAX_OP2		766714	0					
ANR	766923	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	766924	ArgumentList	env -> syntax		766714	1					
ANR	766925	Argument	env -> syntax		766714	0					
ANR	766926	PtrMemberAccess	env -> syntax		766714	0					
ANR	766927	Identifier	env		766714	0					
ANR	766928	Identifier	syntax		766714	1					
ANR	766929	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		766714	1					
ANR	766930	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		766714	0					
ANR	766931	CompoundStatement		48:73:1173:1173	766714	1					
ANR	766932	GotoStatement	goto named_group1 ;	4555:1:101442:101459	766714	0	True				
ANR	766933	Identifier	named_group1		766714	0					
ANR	766934	ElseStatement	else		766714	0					
ANR	766935	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4558:1:101481:101518	766714	0	True				
ANR	766936	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		766714	0					
ANR	766937	BreakStatement	break ;	4559:6:101526:101531	766714	20	True				
ANR	766938	Label	case '<' :	4562:4:101545:101553	766714	21	True				
ANR	766939	ExpressionStatement	PFETCH ( c )	4563:6:101600:101609	766714	22	True				
ANR	766940	CallExpression	PFETCH ( c )		766714	0					
ANR	766941	Callee	PFETCH		766714	0					
ANR	766942	Identifier	PFETCH		766714	0					
ANR	766943	ArgumentList	c		766714	1					
ANR	766944	Argument	c		766714	0					
ANR	766945	Identifier	c		766714	0					
ANR	766946	IfStatement	if ( c == '=' )		766714	23					
ANR	766947	Condition	c == '='	4564:10:101621:101628	766714	0	True				
ANR	766948	EqualityExpression	c == '='		766714	0		==			
ANR	766949	Identifier	c		766714	0					
ANR	766950	PrimaryExpression	'='		766714	1					
ANR	766951	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )	4565:1:101632:101678	766714	1	True				
ANR	766952	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )		766714	0		=			
ANR	766953	UnaryOperationExpression	* np		766714	0					
ANR	766954	UnaryOperator	*		766714	0					
ANR	766955	Identifier	np		766714	1					
ANR	766956	CallExpression	onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )		766714	1					
ANR	766957	Callee	onig_node_new_anchor		766714	0					
ANR	766958	Identifier	onig_node_new_anchor		766714	0					
ANR	766959	ArgumentList	ANCHOR_LOOK_BEHIND		766714	1					
ANR	766960	Argument	ANCHOR_LOOK_BEHIND		766714	0					
ANR	766961	Identifier	ANCHOR_LOOK_BEHIND		766714	0					
ANR	766962	ElseStatement	else		766714	0					
ANR	766963	IfStatement	if ( c == '!' )		766714	0					
ANR	766964	Condition	c == '!'	4566:15:101695:101702	766714	0	True				
ANR	766965	EqualityExpression	c == '!'		766714	0		==			
ANR	766966	Identifier	c		766714	0					
ANR	766967	PrimaryExpression	'!'		766714	1					
ANR	766968	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )	4567:1:101706:101756	766714	1	True				
ANR	766969	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )		766714	0		=			
ANR	766970	UnaryOperationExpression	* np		766714	0					
ANR	766971	UnaryOperator	*		766714	0					
ANR	766972	Identifier	np		766714	1					
ANR	766973	CallExpression	onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )		766714	1					
ANR	766974	Callee	onig_node_new_anchor		766714	0					
ANR	766975	Identifier	onig_node_new_anchor		766714	0					
ANR	766976	ArgumentList	ANCHOR_LOOK_BEHIND_NOT		766714	1					
ANR	766977	Argument	ANCHOR_LOOK_BEHIND_NOT		766714	0					
ANR	766978	Identifier	ANCHOR_LOOK_BEHIND_NOT		766714	0					
ANR	766979	ElseStatement	else		766714	0					
ANR	766980	CompoundStatement		63:11:1526:1526	766714	0					
ANR	766981	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		766714	0					
ANR	766982	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4570:5:101799:101859	766714	0	True				
ANR	766983	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		766714	0					
ANR	766984	Callee	IS_SYNTAX_OP2		766714	0					
ANR	766985	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	766986	ArgumentList	env -> syntax		766714	1					
ANR	766987	Argument	env -> syntax		766714	0					
ANR	766988	PtrMemberAccess	env -> syntax		766714	0					
ANR	766989	Identifier	env		766714	0					
ANR	766990	Identifier	syntax		766714	1					
ANR	766991	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		766714	1					
ANR	766992	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		766714	0					
ANR	766993	CompoundStatement		66:3:1617:1632	766714	1					
ANR	766994	IdentifierDeclStatement	UChar * name ;	4571:3:101867:101878	766714	0	True				
ANR	766995	IdentifierDecl	* name		766714	0					
ANR	766996	IdentifierDeclType	UChar *		766714	0					
ANR	766997	Identifier	name		766714	1					
ANR	766998	IdentifierDeclStatement	UChar * name_end ;	4572:3:101883:101898	766714	1	True				
ANR	766999	IdentifierDecl	* name_end		766714	0					
ANR	767000	IdentifierDeclType	UChar *		766714	0					
ANR	767001	Identifier	name_end		766714	1					
ANR	767002	ExpressionStatement	PUNFETCH	4574:3:101904:101912	766714	2	True				
ANR	767003	Identifier	PUNFETCH		766714	0					
ANR	767004	ExpressionStatement	c = '<'	4575:3:101917:101924	766714	3	True				
ANR	767005	AssignmentExpression	c = '<'		766714	0		=			
ANR	767006	Identifier	c		766714	0					
ANR	767007	PrimaryExpression	'<'		766714	1					
ANR	767008	Label	named_group1 :	4577:1:101928:101940	766714	4	True				
ANR	767009	Identifier	named_group1		766714	0					
ANR	767010	ExpressionStatement	list_capture = 0	4578:3:101945:101961	766714	5	True				
ANR	767011	AssignmentExpression	list_capture = 0		766714	0		=			
ANR	767012	Identifier	list_capture		766714	0					
ANR	767013	PrimaryExpression	0		766714	1					
ANR	767014	Label	named_group2 :	4580:1:101965:101977	766714	6	True				
ANR	767015	Identifier	named_group2		766714	0					
ANR	767016	ExpressionStatement	name = p	4581:3:101982:101990	766714	7	True				
ANR	767017	AssignmentExpression	name = p		766714	0		=			
ANR	767018	Identifier	name		766714	0					
ANR	767019	Identifier	p		766714	1					
ANR	767020	ExpressionStatement	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"	4582:3:101995:102062	766714	8	True				
ANR	767021	AssignmentExpression	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"		766714	0		=			
ANR	767022	Identifier	r		766714	0					
ANR	767023	CallExpression	"fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"		766714	1					
ANR	767024	Callee	fetch_name		766714	0					
ANR	767025	Identifier	fetch_name		766714	0					
ANR	767026	ArgumentList	( OnigCodePoint ) c		766714	1					
ANR	767027	Argument	( OnigCodePoint ) c		766714	0					
ANR	767028	CastExpression	( OnigCodePoint ) c		766714	0					
ANR	767029	CastTarget	OnigCodePoint		766714	0					
ANR	767030	Identifier	c		766714	1					
ANR	767031	Argument	& p		766714	1					
ANR	767032	UnaryOperationExpression	& p		766714	0					
ANR	767033	UnaryOperator	&		766714	0					
ANR	767034	Identifier	p		766714	1					
ANR	767035	Argument	end		766714	2					
ANR	767036	Identifier	end		766714	0					
ANR	767037	Argument	& name_end		766714	3					
ANR	767038	UnaryOperationExpression	& name_end		766714	0					
ANR	767039	UnaryOperator	&		766714	0					
ANR	767040	Identifier	name_end		766714	1					
ANR	767041	Argument	env		766714	4					
ANR	767042	Identifier	env		766714	0					
ANR	767043	Argument	& num		766714	5					
ANR	767044	UnaryOperationExpression	& num		766714	0					
ANR	767045	UnaryOperator	&		766714	0					
ANR	767046	Identifier	num		766714	1					
ANR	767047	Argument	0		766714	6					
ANR	767048	PrimaryExpression	0		766714	0					
ANR	767049	IfStatement	if ( r < 0 )		766714	9					
ANR	767050	Condition	r < 0	4583:7:102071:102075	766714	0	True				
ANR	767051	RelationalExpression	r < 0		766714	0		<			
ANR	767052	Identifier	r		766714	0					
ANR	767053	PrimaryExpression	0		766714	1					
ANR	767054	ReturnStatement	return r ;	4583:14:102078:102086	766714	1	True				
ANR	767055	Identifier	r		766714	0					
ANR	767056	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4585:3:102092:102125	766714	10	True				
ANR	767057	AssignmentExpression	num = scan_env_add_mem_entry ( env )		766714	0		=			
ANR	767058	Identifier	num		766714	0					
ANR	767059	CallExpression	scan_env_add_mem_entry ( env )		766714	1					
ANR	767060	Callee	scan_env_add_mem_entry		766714	0					
ANR	767061	Identifier	scan_env_add_mem_entry		766714	0					
ANR	767062	ArgumentList	env		766714	1					
ANR	767063	Argument	env		766714	0					
ANR	767064	Identifier	env		766714	0					
ANR	767065	IfStatement	if ( num < 0 )		766714	11					
ANR	767066	Condition	num < 0	4586:7:102134:102140	766714	0	True				
ANR	767067	RelationalExpression	num < 0		766714	0		<			
ANR	767068	Identifier	num		766714	0					
ANR	767069	PrimaryExpression	0		766714	1					
ANR	767070	ReturnStatement	return num ;	4586:16:102143:102153	766714	1	True				
ANR	767071	Identifier	num		766714	0					
ANR	767072	IfStatement	if ( list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM )		766714	12					
ANR	767073	Condition	list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM	4587:7:102162:102214	766714	0	True				
ANR	767074	AndExpression	list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM		766714	0		&&			
ANR	767075	EqualityExpression	list_capture != 0		766714	0		!=			
ANR	767076	Identifier	list_capture		766714	0					
ANR	767077	PrimaryExpression	0		766714	1					
ANR	767078	RelationalExpression	num >= ( int ) BIT_STATUS_BITS_NUM		766714	1		>=			
ANR	767079	Identifier	num		766714	0					
ANR	767080	CastExpression	( int ) BIT_STATUS_BITS_NUM		766714	1					
ANR	767081	CastTarget	int		766714	0					
ANR	767082	Identifier	BIT_STATUS_BITS_NUM		766714	1					
ANR	767083	ReturnStatement	return ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY ;	4588:5:102222:102274	766714	1	True				
ANR	767084	Identifier	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		766714	0					
ANR	767085	ExpressionStatement	"r = name_add ( env -> reg , name , name_end , num , env )"	4590:3:102280:102328	766714	13	True				
ANR	767086	AssignmentExpression	"r = name_add ( env -> reg , name , name_end , num , env )"		766714	0		=			
ANR	767087	Identifier	r		766714	0					
ANR	767088	CallExpression	"name_add ( env -> reg , name , name_end , num , env )"		766714	1					
ANR	767089	Callee	name_add		766714	0					
ANR	767090	Identifier	name_add		766714	0					
ANR	767091	ArgumentList	env -> reg		766714	1					
ANR	767092	Argument	env -> reg		766714	0					
ANR	767093	PtrMemberAccess	env -> reg		766714	0					
ANR	767094	Identifier	env		766714	0					
ANR	767095	Identifier	reg		766714	1					
ANR	767096	Argument	name		766714	1					
ANR	767097	Identifier	name		766714	0					
ANR	767098	Argument	name_end		766714	2					
ANR	767099	Identifier	name_end		766714	0					
ANR	767100	Argument	num		766714	3					
ANR	767101	Identifier	num		766714	0					
ANR	767102	Argument	env		766714	4					
ANR	767103	Identifier	env		766714	0					
ANR	767104	IfStatement	if ( r != 0 )		766714	14					
ANR	767105	Condition	r != 0	4591:7:102337:102342	766714	0	True				
ANR	767106	EqualityExpression	r != 0		766714	0		!=			
ANR	767107	Identifier	r		766714	0					
ANR	767108	PrimaryExpression	0		766714	1					
ANR	767109	ReturnStatement	return r ;	4591:15:102345:102353	766714	1	True				
ANR	767110	Identifier	r		766714	0					
ANR	767111	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 1 )"	4592:3:102358:102403	766714	15	True				
ANR	767112	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 1 )"		766714	0		=			
ANR	767113	UnaryOperationExpression	* np		766714	0					
ANR	767114	UnaryOperator	*		766714	0					
ANR	767115	Identifier	np		766714	1					
ANR	767116	CallExpression	"node_new_enclose_memory ( env -> option , 1 )"		766714	1					
ANR	767117	Callee	node_new_enclose_memory		766714	0					
ANR	767118	Identifier	node_new_enclose_memory		766714	0					
ANR	767119	ArgumentList	env -> option		766714	1					
ANR	767120	Argument	env -> option		766714	0					
ANR	767121	PtrMemberAccess	env -> option		766714	0					
ANR	767122	Identifier	env		766714	0					
ANR	767123	Identifier	option		766714	1					
ANR	767124	Argument	1		766714	1					
ANR	767125	PrimaryExpression	1		766714	0					
ANR	767126	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4593:3:102408:102437	766714	16	True				
ANR	767127	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		766714	0					
ANR	767128	Callee	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767129	Identifier	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767130	ArgumentList	* np		766714	1					
ANR	767131	Argument	* np		766714	0					
ANR	767132	UnaryOperationExpression	* np		766714	0					
ANR	767133	UnaryOperator	*		766714	0					
ANR	767134	Identifier	np		766714	1					
ANR	767135	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4594:3:102442:102469	766714	17	True				
ANR	767136	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		766714	0		=			
ANR	767137	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		766714	0					
ANR	767138	CallExpression	NENCLOSE ( * np )		766714	0					
ANR	767139	Callee	NENCLOSE		766714	0					
ANR	767140	Identifier	NENCLOSE		766714	0					
ANR	767141	ArgumentList	* np		766714	1					
ANR	767142	Argument	* np		766714	0					
ANR	767143	UnaryOperationExpression	* np		766714	0					
ANR	767144	UnaryOperator	*		766714	0					
ANR	767145	Identifier	np		766714	1					
ANR	767146	Identifier	regnum		766714	1					
ANR	767147	Identifier	num		766714	1					
ANR	767148	IfStatement	if ( list_capture != 0 )		766714	18					
ANR	767149	Condition	list_capture != 0	4595:7:102478:102494	766714	0	True				
ANR	767150	EqualityExpression	list_capture != 0		766714	0		!=			
ANR	767151	Identifier	list_capture		766714	0					
ANR	767152	PrimaryExpression	0		766714	1					
ANR	767153	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"	4596:5:102502:102552	766714	1	True				
ANR	767154	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"		766714	0					
ANR	767155	Callee	BIT_STATUS_ON_AT_SIMPLE		766714	0					
ANR	767156	Identifier	BIT_STATUS_ON_AT_SIMPLE		766714	0					
ANR	767157	ArgumentList	env -> capture_history		766714	1					
ANR	767158	Argument	env -> capture_history		766714	0					
ANR	767159	PtrMemberAccess	env -> capture_history		766714	0					
ANR	767160	Identifier	env		766714	0					
ANR	767161	Identifier	capture_history		766714	1					
ANR	767162	Argument	num		766714	1					
ANR	767163	Identifier	num		766714	0					
ANR	767164	ExpressionStatement	env -> num_named ++	4597:3:102557:102573	766714	19	True				
ANR	767165	PostIncDecOperationExpression	env -> num_named ++		766714	0					
ANR	767166	PtrMemberAccess	env -> num_named		766714	0					
ANR	767167	Identifier	env		766714	0					
ANR	767168	Identifier	num_named		766714	1					
ANR	767169	IncDec	++		766714	1					
ANR	767170	ElseStatement	else		766714	0					
ANR	767171	CompoundStatement		93:6:2318:2318	766714	0					
ANR	767172	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4600:3:102589:102626	766714	0	True				
ANR	767173	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		766714	0					
ANR	767174	BreakStatement	break ;	4608:6:102719:102724	766714	24	True				
ANR	767175	Label	case '@' :	4610:4:102731:102739	766714	25	True				
ANR	767176	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY ) )"		766714	26					
ANR	767177	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY )"	4611:10:102751:102813	766714	0	True				
ANR	767178	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY )"		766714	0					
ANR	767179	Callee	IS_SYNTAX_OP2		766714	0					
ANR	767180	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	767181	ArgumentList	env -> syntax		766714	1					
ANR	767182	Argument	env -> syntax		766714	0					
ANR	767183	PtrMemberAccess	env -> syntax		766714	0					
ANR	767184	Identifier	env		766714	0					
ANR	767185	Identifier	syntax		766714	1					
ANR	767186	Argument	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		766714	1					
ANR	767187	Identifier	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		766714	0					
ANR	767188	CompoundStatement		105:75:2550:2550	766714	1					
ANR	767189	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		766714	0					
ANR	767190	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4613:5:102846:102906	766714	0	True				
ANR	767191	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		766714	0					
ANR	767192	Callee	IS_SYNTAX_OP2		766714	0					
ANR	767193	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	767194	ArgumentList	env -> syntax		766714	1					
ANR	767195	Argument	env -> syntax		766714	0					
ANR	767196	PtrMemberAccess	env -> syntax		766714	0					
ANR	767197	Identifier	env		766714	0					
ANR	767198	Identifier	syntax		766714	1					
ANR	767199	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		766714	1					
ANR	767200	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		766714	0					
ANR	767201	CompoundStatement		107:68:2643:2643	766714	1					
ANR	767202	ExpressionStatement	PFETCH ( c )	4614:3:102914:102923	766714	0	True				
ANR	767203	CallExpression	PFETCH ( c )		766714	0					
ANR	767204	Callee	PFETCH		766714	0					
ANR	767205	Identifier	PFETCH		766714	0					
ANR	767206	ArgumentList	c		766714	1					
ANR	767207	Argument	c		766714	0					
ANR	767208	Identifier	c		766714	0					
ANR	767209	IfStatement	if ( c == '<' || c == '\\'' )		766714	1					
ANR	767210	Condition	c == '<' || c == '\\''	4615:7:102932:102952	766714	0	True				
ANR	767211	OrExpression	c == '<' || c == '\\''		766714	0		||			
ANR	767212	EqualityExpression	c == '<'		766714	0		==			
ANR	767213	Identifier	c		766714	0					
ANR	767214	PrimaryExpression	'<'		766714	1					
ANR	767215	EqualityExpression	c == '\\''		766714	1		==			
ANR	767216	Identifier	c		766714	0					
ANR	767217	PrimaryExpression	'\\''		766714	1					
ANR	767218	CompoundStatement		109:30:2689:2689	766714	1					
ANR	767219	ExpressionStatement	list_capture = 1	4616:5:102962:102978	766714	0	True				
ANR	767220	AssignmentExpression	list_capture = 1		766714	0		=			
ANR	767221	Identifier	list_capture		766714	0					
ANR	767222	PrimaryExpression	1		766714	1					
ANR	767223	GotoStatement	goto named_group2 ;	4617:5:102985:103002	766714	1	True				
ANR	767224	Identifier	named_group2		766714	0					
ANR	767225	ExpressionStatement	PUNFETCH	4619:3:103032:103040	766714	2	True				
ANR	767226	Identifier	PUNFETCH		766714	0					
ANR	767227	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 0 )"	4622:1:103053:103098	766714	1	True				
ANR	767228	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 0 )"		766714	0		=			
ANR	767229	UnaryOperationExpression	* np		766714	0					
ANR	767230	UnaryOperator	*		766714	0					
ANR	767231	Identifier	np		766714	1					
ANR	767232	CallExpression	"node_new_enclose_memory ( env -> option , 0 )"		766714	1					
ANR	767233	Callee	node_new_enclose_memory		766714	0					
ANR	767234	Identifier	node_new_enclose_memory		766714	0					
ANR	767235	ArgumentList	env -> option		766714	1					
ANR	767236	Argument	env -> option		766714	0					
ANR	767237	PtrMemberAccess	env -> option		766714	0					
ANR	767238	Identifier	env		766714	0					
ANR	767239	Identifier	option		766714	1					
ANR	767240	Argument	0		766714	1					
ANR	767241	PrimaryExpression	0		766714	0					
ANR	767242	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4623:1:103101:103130	766714	2	True				
ANR	767243	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		766714	0					
ANR	767244	Callee	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767245	Identifier	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767246	ArgumentList	* np		766714	1					
ANR	767247	Argument	* np		766714	0					
ANR	767248	UnaryOperationExpression	* np		766714	0					
ANR	767249	UnaryOperator	*		766714	0					
ANR	767250	Identifier	np		766714	1					
ANR	767251	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4624:1:103133:103166	766714	3	True				
ANR	767252	AssignmentExpression	num = scan_env_add_mem_entry ( env )		766714	0		=			
ANR	767253	Identifier	num		766714	0					
ANR	767254	CallExpression	scan_env_add_mem_entry ( env )		766714	1					
ANR	767255	Callee	scan_env_add_mem_entry		766714	0					
ANR	767256	Identifier	scan_env_add_mem_entry		766714	0					
ANR	767257	ArgumentList	env		766714	1					
ANR	767258	Argument	env		766714	0					
ANR	767259	Identifier	env		766714	0					
ANR	767260	IfStatement	if ( num < 0 )		766714	4					
ANR	767261	Condition	num < 0	4625:5:103173:103179	766714	0	True				
ANR	767262	RelationalExpression	num < 0		766714	0		<			
ANR	767263	Identifier	num		766714	0					
ANR	767264	PrimaryExpression	0		766714	1					
ANR	767265	CompoundStatement		119:14:2916:2916	766714	1					
ANR	767266	ExpressionStatement	onig_node_free ( * np )	4626:3:103187:103206	766714	0	True				
ANR	767267	CallExpression	onig_node_free ( * np )		766714	0					
ANR	767268	Callee	onig_node_free		766714	0					
ANR	767269	Identifier	onig_node_free		766714	0					
ANR	767270	ArgumentList	* np		766714	1					
ANR	767271	Argument	* np		766714	0					
ANR	767272	UnaryOperationExpression	* np		766714	0					
ANR	767273	UnaryOperator	*		766714	0					
ANR	767274	Identifier	np		766714	1					
ANR	767275	ReturnStatement	return num ;	4627:3:103211:103221	766714	1	True				
ANR	767276	Identifier	num		766714	0					
ANR	767277	ElseStatement	else		766714	0					
ANR	767278	IfStatement	if ( num >= ( int ) BIT_STATUS_BITS_NUM )		766714	0					
ANR	767279	Condition	num >= ( int ) BIT_STATUS_BITS_NUM	4629:10:103236:103267	766714	0	True				
ANR	767280	RelationalExpression	num >= ( int ) BIT_STATUS_BITS_NUM		766714	0		>=			
ANR	767281	Identifier	num		766714	0					
ANR	767282	CastExpression	( int ) BIT_STATUS_BITS_NUM		766714	1					
ANR	767283	CastTarget	int		766714	0					
ANR	767284	Identifier	BIT_STATUS_BITS_NUM		766714	1					
ANR	767285	CompoundStatement		123:44:3004:3004	766714	1					
ANR	767286	ExpressionStatement	onig_node_free ( * np )	4630:3:103275:103294	766714	0	True				
ANR	767287	CallExpression	onig_node_free ( * np )		766714	0					
ANR	767288	Callee	onig_node_free		766714	0					
ANR	767289	Identifier	onig_node_free		766714	0					
ANR	767290	ArgumentList	* np		766714	1					
ANR	767291	Argument	* np		766714	0					
ANR	767292	UnaryOperationExpression	* np		766714	0					
ANR	767293	UnaryOperator	*		766714	0					
ANR	767294	Identifier	np		766714	1					
ANR	767295	ReturnStatement	return ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY ;	4631:3:103299:103351	766714	1	True				
ANR	767296	Identifier	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		766714	0					
ANR	767297	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4633:1:103357:103384	766714	5	True				
ANR	767298	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		766714	0		=			
ANR	767299	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		766714	0					
ANR	767300	CallExpression	NENCLOSE ( * np )		766714	0					
ANR	767301	Callee	NENCLOSE		766714	0					
ANR	767302	Identifier	NENCLOSE		766714	0					
ANR	767303	ArgumentList	* np		766714	1					
ANR	767304	Argument	* np		766714	0					
ANR	767305	UnaryOperationExpression	* np		766714	0					
ANR	767306	UnaryOperator	*		766714	0					
ANR	767307	Identifier	np		766714	1					
ANR	767308	Identifier	regnum		766714	1					
ANR	767309	Identifier	num		766714	1					
ANR	767310	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"	4634:1:103387:103437	766714	6	True				
ANR	767311	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"		766714	0					
ANR	767312	Callee	BIT_STATUS_ON_AT_SIMPLE		766714	0					
ANR	767313	Identifier	BIT_STATUS_ON_AT_SIMPLE		766714	0					
ANR	767314	ArgumentList	env -> capture_history		766714	1					
ANR	767315	Argument	env -> capture_history		766714	0					
ANR	767316	PtrMemberAccess	env -> capture_history		766714	0					
ANR	767317	Identifier	env		766714	0					
ANR	767318	Identifier	capture_history		766714	1					
ANR	767319	Argument	num		766714	1					
ANR	767320	Identifier	num		766714	0					
ANR	767321	ElseStatement	else		766714	0					
ANR	767322	CompoundStatement		130:11:3192:3192	766714	0					
ANR	767323	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4637:1:103461:103498	766714	0	True				
ANR	767324	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		766714	0					
ANR	767325	BreakStatement	break ;	4639:6:103514:103519	766714	27	True				
ANR	767326	Label	case 'p' :	4642:4:103554:103562	766714	28	True				
ANR	767327	Label	case '-' :	4644:4:103575:103583	766714	29	True				
ANR	767328	Label	case 'i' :	4644:14:103585:103593	766714	30	True				
ANR	767329	Label	case 'm' :	4644:24:103595:103603	766714	31	True				
ANR	767330	Label	case 's' :	4644:34:103605:103613	766714	32	True				
ANR	767331	Label	case 'x' :	4644:44:103615:103623	766714	33	True				
ANR	767332	CompoundStatement		140:1:3368:3379	766714	34					
ANR	767333	IdentifierDeclStatement	int neg = 0 ;	4646:1:103634:103645	766714	0	True				
ANR	767334	IdentifierDecl	neg = 0		766714	0					
ANR	767335	IdentifierDeclType	int		766714	0					
ANR	767336	Identifier	neg		766714	1					
ANR	767337	AssignmentExpression	neg = 0		766714	2		=			
ANR	767338	Identifier	neg		766714	0					
ANR	767339	PrimaryExpression	0		766714	1					
ANR	767340	WhileStatement	while ( 1 )		766714	1					
ANR	767341	Condition	1	4648:8:103656:103656	766714	0	True				
ANR	767342	PrimaryExpression	1		766714	0					
ANR	767343	CompoundStatement		142:11:3393:3393	766714	1					
ANR	767344	SwitchStatement	switch ( c )		766714	0					
ANR	767345	Condition	c	4649:11:103672:103672	766714	0	True				
ANR	767346	Identifier	c		766714	0					
ANR	767347	CompoundStatement		143:14:3409:3409	766714	1					
ANR	767348	Label	case ':' :	4650:3:103680:103688	766714	0	True				
ANR	767349	Label	case ')' :	4651:3:103693:103701	766714	1	True				
ANR	767350	BreakStatement	break ;	4652:3:103706:103711	766714	2	True				
ANR	767351	Label	case '-' :	4654:3:103717:103725	766714	3	True				
ANR	767352	ExpressionStatement	neg = 1	4654:14:103728:103735	766714	4	True				
ANR	767353	AssignmentExpression	neg = 1		766714	0		=			
ANR	767354	Identifier	neg		766714	0					
ANR	767355	PrimaryExpression	1		766714	1					
ANR	767356	BreakStatement	break ;	4654:23:103737:103742	766714	5	True				
ANR	767357	Label	case 'x' :	4655:3:103747:103755	766714	6	True				
ANR	767358	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_EXTEND , neg )"	4655:14:103758:103800	766714	7	True				
ANR	767359	CallExpression	"ONOFF ( option , ONIG_OPTION_EXTEND , neg )"		766714	0					
ANR	767360	Callee	ONOFF		766714	0					
ANR	767361	Identifier	ONOFF		766714	0					
ANR	767362	ArgumentList	option		766714	1					
ANR	767363	Argument	option		766714	0					
ANR	767364	Identifier	option		766714	0					
ANR	767365	Argument	ONIG_OPTION_EXTEND		766714	1					
ANR	767366	Identifier	ONIG_OPTION_EXTEND		766714	0					
ANR	767367	Argument	neg		766714	2					
ANR	767368	Identifier	neg		766714	0					
ANR	767369	BreakStatement	break ;	4655:58:103802:103807	766714	8	True				
ANR	767370	Label	case 'i' :	4656:3:103812:103820	766714	9	True				
ANR	767371	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_IGNORECASE , neg )"	4656:14:103823:103865	766714	10	True				
ANR	767372	CallExpression	"ONOFF ( option , ONIG_OPTION_IGNORECASE , neg )"		766714	0					
ANR	767373	Callee	ONOFF		766714	0					
ANR	767374	Identifier	ONOFF		766714	0					
ANR	767375	ArgumentList	option		766714	1					
ANR	767376	Argument	option		766714	0					
ANR	767377	Identifier	option		766714	0					
ANR	767378	Argument	ONIG_OPTION_IGNORECASE		766714	1					
ANR	767379	Identifier	ONIG_OPTION_IGNORECASE		766714	0					
ANR	767380	Argument	neg		766714	2					
ANR	767381	Identifier	neg		766714	0					
ANR	767382	BreakStatement	break ;	4656:58:103867:103872	766714	11	True				
ANR	767383	Label	case 's' :	4657:3:103877:103885	766714	12	True				
ANR	767384	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL ) )"		766714	13					
ANR	767385	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"	4658:9:103896:103947	766714	0	True				
ANR	767386	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"		766714	0					
ANR	767387	Callee	IS_SYNTAX_OP2		766714	0					
ANR	767388	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	767389	ArgumentList	env -> syntax		766714	1					
ANR	767390	Argument	env -> syntax		766714	0					
ANR	767391	PtrMemberAccess	env -> syntax		766714	0					
ANR	767392	Identifier	env		766714	0					
ANR	767393	Identifier	syntax		766714	1					
ANR	767394	Argument	ONIG_SYN_OP2_OPTION_PERL		766714	1					
ANR	767395	Identifier	ONIG_SYN_OP2_OPTION_PERL		766714	0					
ANR	767396	CompoundStatement		152:63:3684:3684	766714	1					
ANR	767397	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"	4659:7:103959:104001	766714	0	True				
ANR	767398	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"		766714	0					
ANR	767399	Callee	ONOFF		766714	0					
ANR	767400	Identifier	ONOFF		766714	0					
ANR	767401	ArgumentList	option		766714	1					
ANR	767402	Argument	option		766714	0					
ANR	767403	Identifier	option		766714	0					
ANR	767404	Argument	ONIG_OPTION_MULTILINE		766714	1					
ANR	767405	Identifier	ONIG_OPTION_MULTILINE		766714	0					
ANR	767406	Argument	neg		766714	2					
ANR	767407	Identifier	neg		766714	0					
ANR	767408	ElseStatement	else		766714	0					
ANR	767409	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4662:7:104027:104064	766714	0	True				
ANR	767410	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		766714	0					
ANR	767411	BreakStatement	break ;	4663:5:104071:104076	766714	14	True				
ANR	767412	Label	case 'm' :	4665:3:104082:104090	766714	15	True				
ANR	767413	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL ) )"		766714	16					
ANR	767414	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"	4666:9:104101:104152	766714	0	True				
ANR	767415	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"		766714	0					
ANR	767416	Callee	IS_SYNTAX_OP2		766714	0					
ANR	767417	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	767418	ArgumentList	env -> syntax		766714	1					
ANR	767419	Argument	env -> syntax		766714	0					
ANR	767420	PtrMemberAccess	env -> syntax		766714	0					
ANR	767421	Identifier	env		766714	0					
ANR	767422	Identifier	syntax		766714	1					
ANR	767423	Argument	ONIG_SYN_OP2_OPTION_PERL		766714	1					
ANR	767424	Identifier	ONIG_SYN_OP2_OPTION_PERL		766714	0					
ANR	767425	CompoundStatement		160:63:3889:3889	766714	1					
ANR	767426	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_SINGLELINE , ( neg == 0 ? 1 : 0 ) )"	4667:7:104164:104221	766714	0	True				
ANR	767427	CallExpression	"ONOFF ( option , ONIG_OPTION_SINGLELINE , ( neg == 0 ? 1 : 0 ) )"		766714	0					
ANR	767428	Callee	ONOFF		766714	0					
ANR	767429	Identifier	ONOFF		766714	0					
ANR	767430	ArgumentList	option		766714	1					
ANR	767431	Argument	option		766714	0					
ANR	767432	Identifier	option		766714	0					
ANR	767433	Argument	ONIG_OPTION_SINGLELINE		766714	1					
ANR	767434	Identifier	ONIG_OPTION_SINGLELINE		766714	0					
ANR	767435	Argument	neg == 0 ? 1 : 0		766714	2					
ANR	767436	ConditionalExpression	neg == 0 ? 1 : 0		766714	0					
ANR	767437	Condition	neg == 0		766714	0					
ANR	767438	EqualityExpression	neg == 0		766714	0		==			
ANR	767439	Identifier	neg		766714	0					
ANR	767440	PrimaryExpression	0		766714	1					
ANR	767441	PrimaryExpression	1		766714	1					
ANR	767442	PrimaryExpression	0		766714	2					
ANR	767443	ElseStatement	else		766714	0					
ANR	767444	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY ) )"		766714	0					
ANR	767445	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY )"	4669:14:104244:104295	766714	0	True				
ANR	767446	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY )"		766714	0					
ANR	767447	Callee	IS_SYNTAX_OP2		766714	0					
ANR	767448	Identifier	IS_SYNTAX_OP2		766714	0					
ANR	767449	ArgumentList	env -> syntax		766714	1					
ANR	767450	Argument	env -> syntax		766714	0					
ANR	767451	PtrMemberAccess	env -> syntax		766714	0					
ANR	767452	Identifier	env		766714	0					
ANR	767453	Identifier	syntax		766714	1					
ANR	767454	Argument	ONIG_SYN_OP2_OPTION_RUBY		766714	1					
ANR	767455	Identifier	ONIG_SYN_OP2_OPTION_RUBY		766714	0					
ANR	767456	CompoundStatement		163:68:4032:4032	766714	1					
ANR	767457	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"	4670:7:104307:104349	766714	0	True				
ANR	767458	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"		766714	0					
ANR	767459	Callee	ONOFF		766714	0					
ANR	767460	Identifier	ONOFF		766714	0					
ANR	767461	ArgumentList	option		766714	1					
ANR	767462	Argument	option		766714	0					
ANR	767463	Identifier	option		766714	0					
ANR	767464	Argument	ONIG_OPTION_MULTILINE		766714	1					
ANR	767465	Identifier	ONIG_OPTION_MULTILINE		766714	0					
ANR	767466	Argument	neg		766714	2					
ANR	767467	Identifier	neg		766714	0					
ANR	767468	ElseStatement	else		766714	0					
ANR	767469	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4673:7:104375:104412	766714	0	True				
ANR	767470	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		766714	0					
ANR	767471	BreakStatement	break ;	4674:5:104419:104424	766714	17	True				
ANR	767472	Label	case 'p' :	4676:3:104457:104465	766714	18	True				
ANR	767473	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE , neg )"	4677:5:104472:104536	766714	19	True				
ANR	767474	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE , neg )"		766714	0					
ANR	767475	Callee	ONOFF		766714	0					
ANR	767476	Identifier	ONOFF		766714	0					
ANR	767477	ArgumentList	option		766714	1					
ANR	767478	Argument	option		766714	0					
ANR	767479	Identifier	option		766714	0					
ANR	767480	Argument	ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE		766714	1					
ANR	767481	InclusiveOrExpression	ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE		766714	0		|			
ANR	767482	Identifier	ONIG_OPTION_MULTILINE		766714	0					
ANR	767483	Identifier	ONIG_OPTION_SINGLELINE		766714	1					
ANR	767484	Argument	neg		766714	2					
ANR	767485	Identifier	neg		766714	0					
ANR	767486	BreakStatement	break ;	4678:5:104543:104548	766714	20	True				
ANR	767487	Label	default :	4680:3:104560:104567	766714	21	True				
ANR	767488	Identifier	default		766714	0					
ANR	767489	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4681:5:104574:104611	766714	22	True				
ANR	767490	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		766714	0					
ANR	767491	IfStatement	if ( c == ')' )		766714	1					
ANR	767492	Condition	c == ')'	4684:7:104626:104633	766714	0	True				
ANR	767493	EqualityExpression	c == ')'		766714	0		==			
ANR	767494	Identifier	c		766714	0					
ANR	767495	PrimaryExpression	')'		766714	1					
ANR	767496	CompoundStatement		178:17:4370:4370	766714	1					
ANR	767497	ExpressionStatement	* np = node_new_option ( option )	4685:5:104643:104672	766714	0	True				
ANR	767498	AssignmentExpression	* np = node_new_option ( option )		766714	0		=			
ANR	767499	UnaryOperationExpression	* np		766714	0					
ANR	767500	UnaryOperator	*		766714	0					
ANR	767501	Identifier	np		766714	1					
ANR	767502	CallExpression	node_new_option ( option )		766714	1					
ANR	767503	Callee	node_new_option		766714	0					
ANR	767504	Identifier	node_new_option		766714	0					
ANR	767505	ArgumentList	option		766714	1					
ANR	767506	Argument	option		766714	0					
ANR	767507	Identifier	option		766714	0					
ANR	767508	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4686:5:104679:104708	766714	1	True				
ANR	767509	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		766714	0					
ANR	767510	Callee	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767511	Identifier	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767512	ArgumentList	* np		766714	1					
ANR	767513	Argument	* np		766714	0					
ANR	767514	UnaryOperationExpression	* np		766714	0					
ANR	767515	UnaryOperator	*		766714	0					
ANR	767516	Identifier	np		766714	1					
ANR	767517	ExpressionStatement	* src = p	4687:5:104715:104723	766714	2	True				
ANR	767518	AssignmentExpression	* src = p		766714	0		=			
ANR	767519	UnaryOperationExpression	* src		766714	0					
ANR	767520	UnaryOperator	*		766714	0					
ANR	767521	Identifier	src		766714	1					
ANR	767522	Identifier	p		766714	1					
ANR	767523	ReturnStatement	return 2 ;	4688:5:104730:104738	766714	3	True				
ANR	767524	PrimaryExpression	2		766714	0					
ANR	767525	ElseStatement	else		766714	0					
ANR	767526	IfStatement	if ( c == ':' )		766714	0					
ANR	767527	Condition	c == ':'	4690:12:104775:104782	766714	0	True				
ANR	767528	EqualityExpression	c == ':'		766714	0		==			
ANR	767529	Identifier	c		766714	0					
ANR	767530	PrimaryExpression	':'		766714	1					
ANR	767531	CompoundStatement		185:5:4526:4559	766714	1					
ANR	767532	IdentifierDeclStatement	OnigOptionType prev = env -> option ;	4691:5:104792:104825	766714	0	True				
ANR	767533	IdentifierDecl	prev = env -> option		766714	0					
ANR	767534	IdentifierDeclType	OnigOptionType		766714	0					
ANR	767535	Identifier	prev		766714	1					
ANR	767536	AssignmentExpression	prev = env -> option		766714	2		=			
ANR	767537	Identifier	prev		766714	0					
ANR	767538	PtrMemberAccess	env -> option		766714	1					
ANR	767539	Identifier	env		766714	0					
ANR	767540	Identifier	option		766714	1					
ANR	767541	ExpressionStatement	env -> option = option	4693:5:104833:104857	766714	1	True				
ANR	767542	AssignmentExpression	env -> option = option		766714	0		=			
ANR	767543	PtrMemberAccess	env -> option		766714	0					
ANR	767544	Identifier	env		766714	0					
ANR	767545	Identifier	option		766714	1					
ANR	767546	Identifier	option		766714	1					
ANR	767547	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4694:5:104864:104898	766714	2	True				
ANR	767548	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		766714	0		=			
ANR	767549	Identifier	r		766714	0					
ANR	767550	CallExpression	"fetch_token ( tok , & p , end , env )"		766714	1					
ANR	767551	Callee	fetch_token		766714	0					
ANR	767552	Identifier	fetch_token		766714	0					
ANR	767553	ArgumentList	tok		766714	1					
ANR	767554	Argument	tok		766714	0					
ANR	767555	Identifier	tok		766714	0					
ANR	767556	Argument	& p		766714	1					
ANR	767557	UnaryOperationExpression	& p		766714	0					
ANR	767558	UnaryOperator	&		766714	0					
ANR	767559	Identifier	p		766714	1					
ANR	767560	Argument	end		766714	2					
ANR	767561	Identifier	end		766714	0					
ANR	767562	Argument	env		766714	3					
ANR	767563	Identifier	env		766714	0					
ANR	767564	IfStatement	if ( r < 0 )		766714	3					
ANR	767565	Condition	r < 0	4695:9:104909:104913	766714	0	True				
ANR	767566	RelationalExpression	r < 0		766714	0		<			
ANR	767567	Identifier	r		766714	0					
ANR	767568	PrimaryExpression	0		766714	1					
ANR	767569	ReturnStatement	return r ;	4695:16:104916:104924	766714	1	True				
ANR	767570	Identifier	r		766714	0					
ANR	767571	ExpressionStatement	"r = parse_subexp ( & target , tok , term , & p , end , env )"	4696:5:104931:104981	766714	4	True				
ANR	767572	AssignmentExpression	"r = parse_subexp ( & target , tok , term , & p , end , env )"		766714	0		=			
ANR	767573	Identifier	r		766714	0					
ANR	767574	CallExpression	"parse_subexp ( & target , tok , term , & p , end , env )"		766714	1					
ANR	767575	Callee	parse_subexp		766714	0					
ANR	767576	Identifier	parse_subexp		766714	0					
ANR	767577	ArgumentList	& target		766714	1					
ANR	767578	Argument	& target		766714	0					
ANR	767579	UnaryOperationExpression	& target		766714	0					
ANR	767580	UnaryOperator	&		766714	0					
ANR	767581	Identifier	target		766714	1					
ANR	767582	Argument	tok		766714	1					
ANR	767583	Identifier	tok		766714	0					
ANR	767584	Argument	term		766714	2					
ANR	767585	Identifier	term		766714	0					
ANR	767586	Argument	& p		766714	3					
ANR	767587	UnaryOperationExpression	& p		766714	0					
ANR	767588	UnaryOperator	&		766714	0					
ANR	767589	Identifier	p		766714	1					
ANR	767590	Argument	end		766714	4					
ANR	767591	Identifier	end		766714	0					
ANR	767592	Argument	env		766714	5					
ANR	767593	Identifier	env		766714	0					
ANR	767594	ExpressionStatement	env -> option = prev	4697:5:104988:105006	766714	5	True				
ANR	767595	AssignmentExpression	env -> option = prev		766714	0		=			
ANR	767596	PtrMemberAccess	env -> option		766714	0					
ANR	767597	Identifier	env		766714	0					
ANR	767598	Identifier	option		766714	1					
ANR	767599	Identifier	prev		766714	1					
ANR	767600	IfStatement	if ( r < 0 )		766714	6					
ANR	767601	Condition	r < 0	4698:9:105017:105021	766714	0	True				
ANR	767602	RelationalExpression	r < 0		766714	0		<			
ANR	767603	Identifier	r		766714	0					
ANR	767604	PrimaryExpression	0		766714	1					
ANR	767605	ReturnStatement	return r ;	4698:16:105024:105032	766714	1	True				
ANR	767606	Identifier	r		766714	0					
ANR	767607	ExpressionStatement	* np = node_new_option ( option )	4699:5:105039:105068	766714	7	True				
ANR	767608	AssignmentExpression	* np = node_new_option ( option )		766714	0		=			
ANR	767609	UnaryOperationExpression	* np		766714	0					
ANR	767610	UnaryOperator	*		766714	0					
ANR	767611	Identifier	np		766714	1					
ANR	767612	CallExpression	node_new_option ( option )		766714	1					
ANR	767613	Callee	node_new_option		766714	0					
ANR	767614	Identifier	node_new_option		766714	0					
ANR	767615	ArgumentList	option		766714	1					
ANR	767616	Argument	option		766714	0					
ANR	767617	Identifier	option		766714	0					
ANR	767618	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4700:5:105075:105104	766714	8	True				
ANR	767619	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		766714	0					
ANR	767620	Callee	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767621	Identifier	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767622	ArgumentList	* np		766714	1					
ANR	767623	Argument	* np		766714	0					
ANR	767624	UnaryOperationExpression	* np		766714	0					
ANR	767625	UnaryOperator	*		766714	0					
ANR	767626	Identifier	np		766714	1					
ANR	767627	ExpressionStatement	NENCLOSE ( * np ) -> target = target	4701:5:105111:105141	766714	9	True				
ANR	767628	AssignmentExpression	NENCLOSE ( * np ) -> target = target		766714	0		=			
ANR	767629	PtrMemberAccess	NENCLOSE ( * np ) -> target		766714	0					
ANR	767630	CallExpression	NENCLOSE ( * np )		766714	0					
ANR	767631	Callee	NENCLOSE		766714	0					
ANR	767632	Identifier	NENCLOSE		766714	0					
ANR	767633	ArgumentList	* np		766714	1					
ANR	767634	Argument	* np		766714	0					
ANR	767635	UnaryOperationExpression	* np		766714	0					
ANR	767636	UnaryOperator	*		766714	0					
ANR	767637	Identifier	np		766714	1					
ANR	767638	Identifier	target		766714	1					
ANR	767639	Identifier	target		766714	1					
ANR	767640	ExpressionStatement	* src = p	4702:5:105148:105156	766714	10	True				
ANR	767641	AssignmentExpression	* src = p		766714	0		=			
ANR	767642	UnaryOperationExpression	* src		766714	0					
ANR	767643	UnaryOperator	*		766714	0					
ANR	767644	Identifier	src		766714	1					
ANR	767645	Identifier	p		766714	1					
ANR	767646	ReturnStatement	return 0 ;	4703:5:105163:105171	766714	11	True				
ANR	767647	PrimaryExpression	0		766714	0					
ANR	767648	IfStatement	if ( PEND )		766714	2					
ANR	767649	Condition	PEND	4706:7:105186:105189	766714	0	True				
ANR	767650	Identifier	PEND		766714	0					
ANR	767651	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	4706:13:105192:105227	766714	1	True				
ANR	767652	Identifier	ONIGERR_END_PATTERN_IN_GROUP		766714	0					
ANR	767653	ExpressionStatement	PFETCH ( c )	4707:3:105232:105241	766714	3	True				
ANR	767654	CallExpression	PFETCH ( c )		766714	0					
ANR	767655	Callee	PFETCH		766714	0					
ANR	767656	Identifier	PFETCH		766714	0					
ANR	767657	ArgumentList	c		766714	1					
ANR	767658	Argument	c		766714	0					
ANR	767659	Identifier	c		766714	0					
ANR	767660	BreakStatement	break ;	4710:6:105260:105265	766714	35	True				
ANR	767661	Label	default :	4712:4:105272:105279	766714	36	True				
ANR	767662	Identifier	default		766714	0					
ANR	767663	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4713:6:105287:105324	766714	37	True				
ANR	767664	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		766714	0					
ANR	767665	ElseStatement	else		766714	0					
ANR	767666	CompoundStatement		210:7:5077:5077	766714	0					
ANR	767667	IfStatement	"if ( ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP ) )"		766714	0					
ANR	767668	Condition	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP )"	4717:8:105353:105414	766714	0	True				
ANR	767669	CallExpression	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP )"		766714	0					
ANR	767670	Callee	ONIG_IS_OPTION_ON		766714	0					
ANR	767671	Identifier	ONIG_IS_OPTION_ON		766714	0					
ANR	767672	ArgumentList	env -> option		766714	1					
ANR	767673	Argument	env -> option		766714	0					
ANR	767674	PtrMemberAccess	env -> option		766714	0					
ANR	767675	Identifier	env		766714	0					
ANR	767676	Identifier	option		766714	1					
ANR	767677	Argument	ONIG_OPTION_DONT_CAPTURE_GROUP		766714	1					
ANR	767678	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		766714	0					
ANR	767679	GotoStatement	goto group ;	4718:6:105423:105433	766714	1	True				
ANR	767680	Identifier	group		766714	0					
ANR	767681	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 0 )"	4720:4:105440:105485	766714	1	True				
ANR	767682	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 0 )"		766714	0		=			
ANR	767683	UnaryOperationExpression	* np		766714	0					
ANR	767684	UnaryOperator	*		766714	0					
ANR	767685	Identifier	np		766714	1					
ANR	767686	CallExpression	"node_new_enclose_memory ( env -> option , 0 )"		766714	1					
ANR	767687	Callee	node_new_enclose_memory		766714	0					
ANR	767688	Identifier	node_new_enclose_memory		766714	0					
ANR	767689	ArgumentList	env -> option		766714	1					
ANR	767690	Argument	env -> option		766714	0					
ANR	767691	PtrMemberAccess	env -> option		766714	0					
ANR	767692	Identifier	env		766714	0					
ANR	767693	Identifier	option		766714	1					
ANR	767694	Argument	0		766714	1					
ANR	767695	PrimaryExpression	0		766714	0					
ANR	767696	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4721:4:105491:105520	766714	2	True				
ANR	767697	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		766714	0					
ANR	767698	Callee	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767699	Identifier	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767700	ArgumentList	* np		766714	1					
ANR	767701	Argument	* np		766714	0					
ANR	767702	UnaryOperationExpression	* np		766714	0					
ANR	767703	UnaryOperator	*		766714	0					
ANR	767704	Identifier	np		766714	1					
ANR	767705	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4722:4:105526:105559	766714	3	True				
ANR	767706	AssignmentExpression	num = scan_env_add_mem_entry ( env )		766714	0		=			
ANR	767707	Identifier	num		766714	0					
ANR	767708	CallExpression	scan_env_add_mem_entry ( env )		766714	1					
ANR	767709	Callee	scan_env_add_mem_entry		766714	0					
ANR	767710	Identifier	scan_env_add_mem_entry		766714	0					
ANR	767711	ArgumentList	env		766714	1					
ANR	767712	Argument	env		766714	0					
ANR	767713	Identifier	env		766714	0					
ANR	767714	IfStatement	if ( num < 0 )		766714	4					
ANR	767715	Condition	num < 0	4723:8:105569:105575	766714	0	True				
ANR	767716	RelationalExpression	num < 0		766714	0		<			
ANR	767717	Identifier	num		766714	0					
ANR	767718	PrimaryExpression	0		766714	1					
ANR	767719	ReturnStatement	return num ;	4723:17:105578:105588	766714	1	True				
ANR	767720	Identifier	num		766714	0					
ANR	767721	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4724:4:105594:105621	766714	5	True				
ANR	767722	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		766714	0		=			
ANR	767723	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		766714	0					
ANR	767724	CallExpression	NENCLOSE ( * np )		766714	0					
ANR	767725	Callee	NENCLOSE		766714	0					
ANR	767726	Identifier	NENCLOSE		766714	0					
ANR	767727	ArgumentList	* np		766714	1					
ANR	767728	Argument	* np		766714	0					
ANR	767729	UnaryOperationExpression	* np		766714	0					
ANR	767730	UnaryOperator	*		766714	0					
ANR	767731	Identifier	np		766714	1					
ANR	767732	Identifier	regnum		766714	1					
ANR	767733	Identifier	num		766714	1					
ANR	767734	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4727:2:105630:105659	766714	12	True				
ANR	767735	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		766714	0					
ANR	767736	Callee	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767737	Identifier	CHECK_NULL_RETURN_MEMERR		766714	0					
ANR	767738	ArgumentList	* np		766714	1					
ANR	767739	Argument	* np		766714	0					
ANR	767740	UnaryOperationExpression	* np		766714	0					
ANR	767741	UnaryOperator	*		766714	0					
ANR	767742	Identifier	np		766714	1					
ANR	767743	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4728:2:105663:105697	766714	13	True				
ANR	767744	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		766714	0		=			
ANR	767745	Identifier	r		766714	0					
ANR	767746	CallExpression	"fetch_token ( tok , & p , end , env )"		766714	1					
ANR	767747	Callee	fetch_token		766714	0					
ANR	767748	Identifier	fetch_token		766714	0					
ANR	767749	ArgumentList	tok		766714	1					
ANR	767750	Argument	tok		766714	0					
ANR	767751	Identifier	tok		766714	0					
ANR	767752	Argument	& p		766714	1					
ANR	767753	UnaryOperationExpression	& p		766714	0					
ANR	767754	UnaryOperator	&		766714	0					
ANR	767755	Identifier	p		766714	1					
ANR	767756	Argument	end		766714	2					
ANR	767757	Identifier	end		766714	0					
ANR	767758	Argument	env		766714	3					
ANR	767759	Identifier	env		766714	0					
ANR	767760	IfStatement	if ( r < 0 )		766714	14					
ANR	767761	Condition	r < 0	4729:6:105705:105709	766714	0	True				
ANR	767762	RelationalExpression	r < 0		766714	0		<			
ANR	767763	Identifier	r		766714	0					
ANR	767764	PrimaryExpression	0		766714	1					
ANR	767765	ReturnStatement	return r ;	4729:13:105712:105720	766714	1	True				
ANR	767766	Identifier	r		766714	0					
ANR	767767	ExpressionStatement	"r = parse_subexp ( & target , tok , term , & p , end , env )"	4730:2:105724:105774	766714	15	True				
ANR	767768	AssignmentExpression	"r = parse_subexp ( & target , tok , term , & p , end , env )"		766714	0		=			
ANR	767769	Identifier	r		766714	0					
ANR	767770	CallExpression	"parse_subexp ( & target , tok , term , & p , end , env )"		766714	1					
ANR	767771	Callee	parse_subexp		766714	0					
ANR	767772	Identifier	parse_subexp		766714	0					
ANR	767773	ArgumentList	& target		766714	1					
ANR	767774	Argument	& target		766714	0					
ANR	767775	UnaryOperationExpression	& target		766714	0					
ANR	767776	UnaryOperator	&		766714	0					
ANR	767777	Identifier	target		766714	1					
ANR	767778	Argument	tok		766714	1					
ANR	767779	Identifier	tok		766714	0					
ANR	767780	Argument	term		766714	2					
ANR	767781	Identifier	term		766714	0					
ANR	767782	Argument	& p		766714	3					
ANR	767783	UnaryOperationExpression	& p		766714	0					
ANR	767784	UnaryOperator	&		766714	0					
ANR	767785	Identifier	p		766714	1					
ANR	767786	Argument	end		766714	4					
ANR	767787	Identifier	end		766714	0					
ANR	767788	Argument	env		766714	5					
ANR	767789	Identifier	env		766714	0					
ANR	767790	IfStatement	if ( r < 0 )		766714	16					
ANR	767791	Condition	r < 0	4731:6:105782:105786	766714	0	True				
ANR	767792	RelationalExpression	r < 0		766714	0		<			
ANR	767793	Identifier	r		766714	0					
ANR	767794	PrimaryExpression	0		766714	1					
ANR	767795	ReturnStatement	return r ;	4731:13:105789:105797	766714	1	True				
ANR	767796	Identifier	r		766714	0					
ANR	767797	IfStatement	if ( NTYPE ( * np ) == NT_ANCHOR )		766714	17					
ANR	767798	Condition	NTYPE ( * np ) == NT_ANCHOR	4733:6:105806:105828	766714	0	True				
ANR	767799	EqualityExpression	NTYPE ( * np ) == NT_ANCHOR		766714	0		==			
ANR	767800	CallExpression	NTYPE ( * np )		766714	0					
ANR	767801	Callee	NTYPE		766714	0					
ANR	767802	Identifier	NTYPE		766714	0					
ANR	767803	ArgumentList	* np		766714	1					
ANR	767804	Argument	* np		766714	0					
ANR	767805	UnaryOperationExpression	* np		766714	0					
ANR	767806	UnaryOperator	*		766714	0					
ANR	767807	Identifier	np		766714	1					
ANR	767808	Identifier	NT_ANCHOR		766714	1					
ANR	767809	ExpressionStatement	NANCHOR ( * np ) -> target = target	4734:4:105835:105864	766714	1	True				
ANR	767810	AssignmentExpression	NANCHOR ( * np ) -> target = target		766714	0		=			
ANR	767811	PtrMemberAccess	NANCHOR ( * np ) -> target		766714	0					
ANR	767812	CallExpression	NANCHOR ( * np )		766714	0					
ANR	767813	Callee	NANCHOR		766714	0					
ANR	767814	Identifier	NANCHOR		766714	0					
ANR	767815	ArgumentList	* np		766714	1					
ANR	767816	Argument	* np		766714	0					
ANR	767817	UnaryOperationExpression	* np		766714	0					
ANR	767818	UnaryOperator	*		766714	0					
ANR	767819	Identifier	np		766714	1					
ANR	767820	Identifier	target		766714	1					
ANR	767821	Identifier	target		766714	1					
ANR	767822	ElseStatement	else		766714	0					
ANR	767823	CompoundStatement		229:7:5607:5607	766714	0					
ANR	767824	ExpressionStatement	NENCLOSE ( * np ) -> target = target	4736:4:105879:105909	766714	0	True				
ANR	767825	AssignmentExpression	NENCLOSE ( * np ) -> target = target		766714	0		=			
ANR	767826	PtrMemberAccess	NENCLOSE ( * np ) -> target		766714	0					
ANR	767827	CallExpression	NENCLOSE ( * np )		766714	0					
ANR	767828	Callee	NENCLOSE		766714	0					
ANR	767829	Identifier	NENCLOSE		766714	0					
ANR	767830	ArgumentList	* np		766714	1					
ANR	767831	Argument	* np		766714	0					
ANR	767832	UnaryOperationExpression	* np		766714	0					
ANR	767833	UnaryOperator	*		766714	0					
ANR	767834	Identifier	np		766714	1					
ANR	767835	Identifier	target		766714	1					
ANR	767836	Identifier	target		766714	1					
ANR	767837	IfStatement	if ( NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY )		766714	1					
ANR	767838	Condition	NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY	4737:8:105919:105955	766714	0	True				
ANR	767839	EqualityExpression	NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY		766714	0		==			
ANR	767840	PtrMemberAccess	NENCLOSE ( * np ) -> type		766714	0					
ANR	767841	CallExpression	NENCLOSE ( * np )		766714	0					
ANR	767842	Callee	NENCLOSE		766714	0					
ANR	767843	Identifier	NENCLOSE		766714	0					
ANR	767844	ArgumentList	* np		766714	1					
ANR	767845	Argument	* np		766714	0					
ANR	767846	UnaryOperationExpression	* np		766714	0					
ANR	767847	UnaryOperator	*		766714	0					
ANR	767848	Identifier	np		766714	1					
ANR	767849	Identifier	type		766714	1					
ANR	767850	Identifier	ENCLOSE_MEMORY		766714	1					
ANR	767851	CompoundStatement		231:47:5692:5692	766714	1					
ANR	767852	ExpressionStatement	"r = scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"	4739:6:106024:106082	766714	0	True				
ANR	767853	AssignmentExpression	"r = scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"		766714	0		=			
ANR	767854	Identifier	r		766714	0					
ANR	767855	CallExpression	"scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"		766714	1					
ANR	767856	Callee	scan_env_set_mem_node		766714	0					
ANR	767857	Identifier	scan_env_set_mem_node		766714	0					
ANR	767858	ArgumentList	env		766714	1					
ANR	767859	Argument	env		766714	0					
ANR	767860	Identifier	env		766714	0					
ANR	767861	Argument	NENCLOSE ( * np ) -> regnum		766714	1					
ANR	767862	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		766714	0					
ANR	767863	CallExpression	NENCLOSE ( * np )		766714	0					
ANR	767864	Callee	NENCLOSE		766714	0					
ANR	767865	Identifier	NENCLOSE		766714	0					
ANR	767866	ArgumentList	* np		766714	1					
ANR	767867	Argument	* np		766714	0					
ANR	767868	UnaryOperationExpression	* np		766714	0					
ANR	767869	UnaryOperator	*		766714	0					
ANR	767870	Identifier	np		766714	1					
ANR	767871	Identifier	regnum		766714	1					
ANR	767872	Argument	* np		766714	2					
ANR	767873	UnaryOperationExpression	* np		766714	0					
ANR	767874	UnaryOperator	*		766714	0					
ANR	767875	Identifier	np		766714	1					
ANR	767876	IfStatement	if ( r != 0 )		766714	1					
ANR	767877	Condition	r != 0	4740:10:106094:106099	766714	0	True				
ANR	767878	EqualityExpression	r != 0		766714	0		!=			
ANR	767879	Identifier	r		766714	0					
ANR	767880	PrimaryExpression	0		766714	1					
ANR	767881	ReturnStatement	return r ;	4740:18:106102:106110	766714	1	True				
ANR	767882	Identifier	r		766714	0					
ANR	767883	ExpressionStatement	* src = p	4744:2:106125:106133	766714	18	True				
ANR	767884	AssignmentExpression	* src = p		766714	0		=			
ANR	767885	UnaryOperationExpression	* src		766714	0					
ANR	767886	UnaryOperator	*		766714	0					
ANR	767887	Identifier	src		766714	1					
ANR	767888	Identifier	p		766714	1					
ANR	767889	ReturnStatement	return 0 ;	4745:2:106137:106145	766714	19	True				
ANR	767890	PrimaryExpression	0		766714	0					
ANR	767891	ReturnType	static int		766714	1					
ANR	767892	Identifier	parse_enclose		766714	2					
ANR	767893	ParameterList	"Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		766714	3					
ANR	767894	Parameter	Node * * np	4505:14:100182:100190	766714	0	True				
ANR	767895	ParameterType	Node * *		766714	0					
ANR	767896	Identifier	np		766714	1					
ANR	767897	Parameter	OnigToken * tok	4505:25:100193:100206	766714	1	True				
ANR	767898	ParameterType	OnigToken *		766714	0					
ANR	767899	Identifier	tok		766714	1					
ANR	767900	Parameter	int term	4505:41:100209:100216	766714	2	True				
ANR	767901	ParameterType	int		766714	0					
ANR	767902	Identifier	term		766714	1					
ANR	767903	Parameter	UChar * * src	4505:51:100219:100229	766714	3	True				
ANR	767904	ParameterType	UChar * *		766714	0					
ANR	767905	Identifier	src		766714	1					
ANR	767906	Parameter	UChar * end	4505:64:100232:100241	766714	4	True				
ANR	767907	ParameterType	UChar *		766714	0					
ANR	767908	Identifier	end		766714	1					
ANR	767909	Parameter	ScanEnv * env	4506:7:100251:100262	766714	5	True				
ANR	767910	ParameterType	ScanEnv *		766714	0					
ANR	767911	Identifier	env		766714	1					
ANR	767912	CFGEntryNode	ENTRY		766714		True				
ANR	767913	CFGExitNode	EXIT		766714		True				
ANR	767914	Symbol	node_new_enclose_memory		766714						
ANR	767915	Symbol	num		766714						
ANR	767916	Symbol	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		766714						
ANR	767917	Symbol	prev		766714						
ANR	767918	Symbol	env -> num_named		766714						
ANR	767919	Symbol	ONIG_OPTION_IGNORECASE		766714						
ANR	767920	Symbol	NANCHOR ( * np ) -> target		766714						
ANR	767921	Symbol	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		766714						
ANR	767922	Symbol	* src		766714						
ANR	767923	Symbol	env -> reg		766714						
ANR	767924	Symbol	env -> option		766714						
ANR	767925	Symbol	ANCHOR_PREC_READ_NOT		766714						
ANR	767926	Symbol	neg		766714						
ANR	767927	Symbol	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		766714						
ANR	767928	Symbol	NENCLOSE ( * np ) -> regnum		766714						
ANR	767929	Symbol	ENCLOSE_MEMORY		766714						
ANR	767930	Symbol	list_capture		766714						
ANR	767931	Symbol	env -> capture_history		766714						
ANR	767932	Symbol	parse_subexp		766714						
ANR	767933	Symbol	name_end		766714						
ANR	767934	Symbol	NULL		766714						
ANR	767935	Symbol	ENCLOSE_STOP_BACKTRACK		766714						
ANR	767936	Symbol	ONIGERR_UNDEFINED_GROUP_OPTION		766714						
ANR	767937	Symbol	* env		766714						
ANR	767938	Symbol	& num		766714						
ANR	767939	Symbol	env -> syntax		766714						
ANR	767940	Symbol	ANCHOR_PREC_READ		766714						
ANR	767941	Symbol	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		766714						
ANR	767942	Symbol	ONIG_SYN_OP2_OPTION_RUBY		766714						
ANR	767943	Symbol	name		766714						
ANR	767944	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		766714						
ANR	767945	Symbol	ONIG_OPTION_SINGLELINE		766714						
ANR	767946	Symbol	onig_node_new_anchor		766714						
ANR	767947	Symbol	option		766714						
ANR	767948	Symbol	PPEEK_IS		766714						
ANR	767949	Symbol	np		766714						
ANR	767950	Symbol	BIT_STATUS_BITS_NUM		766714						
ANR	767951	Symbol	* NENCLOSE		766714						
ANR	767952	Symbol	ONIG_OPTION_MULTILINE		766714						
ANR	767953	Symbol	env -> enc		766714						
ANR	767954	Symbol	fetch_name		766714						
ANR	767955	Symbol	node_new_enclose		766714						
ANR	767956	Symbol	NT_ANCHOR		766714						
ANR	767957	Symbol	PEND		766714						
ANR	767958	Symbol	IS_SYNTAX_OP2		766714						
ANR	767959	Symbol	& name_end		766714						
ANR	767960	Symbol	tok		766714						
ANR	767961	Symbol	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		766714						
ANR	767962	Symbol	name_add		766714						
ANR	767963	Symbol	NENCLOSE		766714						
ANR	767964	Symbol	* NANCHOR		766714						
ANR	767965	Symbol	node_new_option		766714						
ANR	767966	Symbol	term		766714						
ANR	767967	Symbol	end		766714						
ANR	767968	Symbol	enc		766714						
ANR	767969	Symbol	fetch_token		766714						
ANR	767970	Symbol	ONIG_SYN_OP2_OPTION_PERL		766714						
ANR	767971	Symbol	scan_env_add_mem_entry		766714						
ANR	767972	Symbol	ONIG_IS_OPTION_ON		766714						
ANR	767973	Symbol	c		766714						
ANR	767974	Symbol	ONIGERR_END_PATTERN_IN_GROUP		766714						
ANR	767975	Symbol	src		766714						
ANR	767976	Symbol	scan_env_set_mem_node		766714						
ANR	767977	Symbol	NENCLOSE ( * np ) -> type		766714						
ANR	767978	Symbol	* np		766714						
ANR	767979	Symbol	env		766714						
ANR	767980	Symbol	target		766714						
ANR	767981	Symbol	p		766714						
ANR	767982	Symbol	r		766714						
ANR	767983	Symbol	& p		766714						
ANR	767984	Symbol	ANCHOR_LOOK_BEHIND_NOT		766714						
ANR	767985	Symbol	ANCHOR_LOOK_BEHIND		766714						
ANR	767986	Symbol	NANCHOR		766714						
ANR	767987	Symbol	& target		766714						
ANR	767988	Symbol	NENCLOSE ( * np ) -> target		766714						
ANR	767989	Symbol	NTYPE		766714						
ANR	767990	Symbol	ONIG_OPTION_EXTEND		766714						
ANR	767991	DeclStmt									
ANR	767992	Decl							const char	const char * [ ]	PopularQStr
ANR	767993	DeclStmt									
ANR	767994	Decl							const char	const char * [ ]	ReduceQStr
ANR	767995	Function	set_quantifier	4756:0:106315:108785							
ANR	767996	FunctionDef	"set_quantifier (Node * qnode , Node * target , int group , ScanEnv * env)"		767995	0					
ANR	767997	CompoundStatement		4758:0:106393:108785	767995	0					
ANR	767998	IdentifierDeclStatement	QtfrNode * qn ;	4759:2:106397:106409	767995	0	True				
ANR	767999	IdentifierDecl	* qn		767995	0					
ANR	768000	IdentifierDeclType	QtfrNode *		767995	0					
ANR	768001	Identifier	qn		767995	1					
ANR	768002	ExpressionStatement	qn = NQTFR ( qnode )	4761:2:106414:106431	767995	1	True				
ANR	768003	AssignmentExpression	qn = NQTFR ( qnode )		767995	0		=			
ANR	768004	Identifier	qn		767995	0					
ANR	768005	CallExpression	NQTFR ( qnode )		767995	1					
ANR	768006	Callee	NQTFR		767995	0					
ANR	768007	Identifier	NQTFR		767995	0					
ANR	768008	ArgumentList	qnode		767995	1					
ANR	768009	Argument	qnode		767995	0					
ANR	768010	Identifier	qnode		767995	0					
ANR	768011	IfStatement	if ( qn -> lower == 1 && qn -> upper == 1 )		767995	2					
ANR	768012	Condition	qn -> lower == 1 && qn -> upper == 1	4762:6:106439:106470	767995	0	True				
ANR	768013	AndExpression	qn -> lower == 1 && qn -> upper == 1		767995	0		&&			
ANR	768014	EqualityExpression	qn -> lower == 1		767995	0		==			
ANR	768015	PtrMemberAccess	qn -> lower		767995	0					
ANR	768016	Identifier	qn		767995	0					
ANR	768017	Identifier	lower		767995	1					
ANR	768018	PrimaryExpression	1		767995	1					
ANR	768019	EqualityExpression	qn -> upper == 1		767995	1		==			
ANR	768020	PtrMemberAccess	qn -> upper		767995	0					
ANR	768021	Identifier	qn		767995	0					
ANR	768022	Identifier	upper		767995	1					
ANR	768023	PrimaryExpression	1		767995	1					
ANR	768024	CompoundStatement		5:40:79:79	767995	1					
ANR	768025	ReturnStatement	return 1 ;	4763:4:106479:106487	767995	0	True				
ANR	768026	PrimaryExpression	1		767995	0					
ANR	768027	SwitchStatement	switch ( NTYPE ( target ) )		767995	3					
ANR	768028	Condition	NTYPE ( target )	4766:10:106504:106516	767995	0	True				
ANR	768029	CallExpression	NTYPE ( target )		767995	0					
ANR	768030	Callee	NTYPE		767995	0					
ANR	768031	Identifier	NTYPE		767995	0					
ANR	768032	ArgumentList	target		767995	1					
ANR	768033	Argument	target		767995	0					
ANR	768034	Identifier	target		767995	0					
ANR	768035	CompoundStatement		9:25:125:125	767995	1					
ANR	768036	Label	case NT_STR :	4767:2:106523:106534	767995	0	True				
ANR	768037	Identifier	NT_STR		767995	0					
ANR	768038	IfStatement	if ( ! group )		767995	1					
ANR	768039	Condition	! group	4768:8:106544:106550	767995	0	True				
ANR	768040	UnaryOperationExpression	! group		767995	0					
ANR	768041	UnaryOperator	!		767995	0					
ANR	768042	Identifier	group		767995	1					
ANR	768043	CompoundStatement		12:6:167:193	767995	1					
ANR	768044	IdentifierDeclStatement	StrNode * sn = NSTR ( target ) ;	4769:6:106561:106587	767995	0	True				
ANR	768045	IdentifierDecl	* sn = NSTR ( target )		767995	0					
ANR	768046	IdentifierDeclType	StrNode *		767995	0					
ANR	768047	Identifier	sn		767995	1					
ANR	768048	AssignmentExpression	* sn = NSTR ( target )		767995	2		=			
ANR	768049	Identifier	sn		767995	0					
ANR	768050	CallExpression	NSTR ( target )		767995	1					
ANR	768051	Callee	NSTR		767995	0					
ANR	768052	Identifier	NSTR		767995	0					
ANR	768053	ArgumentList	target		767995	1					
ANR	768054	Argument	target		767995	0					
ANR	768055	Identifier	target		767995	0					
ANR	768056	IfStatement	"if ( str_node_can_be_split ( sn , env -> enc ) )"		767995	1					
ANR	768057	Condition	"str_node_can_be_split ( sn , env -> enc )"	4770:10:106599:106633	767995	0	True				
ANR	768058	CallExpression	"str_node_can_be_split ( sn , env -> enc )"		767995	0					
ANR	768059	Callee	str_node_can_be_split		767995	0					
ANR	768060	Identifier	str_node_can_be_split		767995	0					
ANR	768061	ArgumentList	sn		767995	1					
ANR	768062	Argument	sn		767995	0					
ANR	768063	Identifier	sn		767995	0					
ANR	768064	Argument	env -> enc		767995	1					
ANR	768065	PtrMemberAccess	env -> enc		767995	0					
ANR	768066	Identifier	env		767995	0					
ANR	768067	Identifier	enc		767995	1					
ANR	768068	CompoundStatement		14:1:245:293	767995	1					
ANR	768069	IdentifierDeclStatement	"Node * n = str_node_split_last_char ( sn , env -> enc ) ;"	4771:1:106639:106687	767995	0	True				
ANR	768070	IdentifierDecl	"* n = str_node_split_last_char ( sn , env -> enc )"		767995	0					
ANR	768071	IdentifierDeclType	Node *		767995	0					
ANR	768072	Identifier	n		767995	1					
ANR	768073	AssignmentExpression	"* n = str_node_split_last_char ( sn , env -> enc )"		767995	2		=			
ANR	768074	Identifier	n		767995	0					
ANR	768075	CallExpression	"str_node_split_last_char ( sn , env -> enc )"		767995	1					
ANR	768076	Callee	str_node_split_last_char		767995	0					
ANR	768077	Identifier	str_node_split_last_char		767995	0					
ANR	768078	ArgumentList	sn		767995	1					
ANR	768079	Argument	sn		767995	0					
ANR	768080	Identifier	sn		767995	0					
ANR	768081	Argument	env -> enc		767995	1					
ANR	768082	PtrMemberAccess	env -> enc		767995	0					
ANR	768083	Identifier	env		767995	0					
ANR	768084	Identifier	enc		767995	1					
ANR	768085	IfStatement	if ( IS_NOT_NULL ( n ) )		767995	1					
ANR	768086	Condition	IS_NOT_NULL ( n )	4772:5:106694:106707	767995	0	True				
ANR	768087	CallExpression	IS_NOT_NULL ( n )		767995	0					
ANR	768088	Callee	IS_NOT_NULL		767995	0					
ANR	768089	Identifier	IS_NOT_NULL		767995	0					
ANR	768090	ArgumentList	n		767995	1					
ANR	768091	Argument	n		767995	0					
ANR	768092	Identifier	n		767995	0					
ANR	768093	CompoundStatement		15:21:316:316	767995	1					
ANR	768094	ExpressionStatement	qn -> target = n	4773:3:106715:106729	767995	0	True				
ANR	768095	AssignmentExpression	qn -> target = n		767995	0		=			
ANR	768096	PtrMemberAccess	qn -> target		767995	0					
ANR	768097	Identifier	qn		767995	0					
ANR	768098	Identifier	target		767995	1					
ANR	768099	Identifier	n		767995	1					
ANR	768100	ReturnStatement	return 2 ;	4774:3:106734:106742	767995	1	True				
ANR	768101	PrimaryExpression	2		767995	0					
ANR	768102	BreakStatement	break ;	4778:4:106765:106770	767995	2	True				
ANR	768103	Label	case NT_QTFR :	4780:2:106775:106787	767995	3	True				
ANR	768104	Identifier	NT_QTFR		767995	0					
ANR	768105	CompoundStatement		28:6:601:646	767995	4					
ANR	768106	IdentifierDeclStatement	QtfrNode * qnt = NQTFR ( target ) ;	4783:6:106904:106935	767995	0	True				
ANR	768107	IdentifierDecl	* qnt = NQTFR ( target )		767995	0					
ANR	768108	IdentifierDeclType	QtfrNode *		767995	0					
ANR	768109	Identifier	qnt		767995	1					
ANR	768110	AssignmentExpression	* qnt = NQTFR ( target )		767995	2		=			
ANR	768111	Identifier	qnt		767995	0					
ANR	768112	CallExpression	NQTFR ( target )		767995	1					
ANR	768113	Callee	NQTFR		767995	0					
ANR	768114	Identifier	NQTFR		767995	0					
ANR	768115	ArgumentList	target		767995	1					
ANR	768116	Argument	target		767995	0					
ANR	768117	Identifier	target		767995	0					
ANR	768118	IdentifierDeclStatement	int nestq_num = popular_quantifier_num ( qn ) ;	4784:6:106943:106987	767995	1	True				
ANR	768119	IdentifierDecl	nestq_num = popular_quantifier_num ( qn )		767995	0					
ANR	768120	IdentifierDeclType	int		767995	0					
ANR	768121	Identifier	nestq_num		767995	1					
ANR	768122	AssignmentExpression	nestq_num = popular_quantifier_num ( qn )		767995	2		=			
ANR	768123	Identifier	nestq_num		767995	0					
ANR	768124	CallExpression	popular_quantifier_num ( qn )		767995	1					
ANR	768125	Callee	popular_quantifier_num		767995	0					
ANR	768126	Identifier	popular_quantifier_num		767995	0					
ANR	768127	ArgumentList	qn		767995	1					
ANR	768128	Argument	qn		767995	0					
ANR	768129	Identifier	qn		767995	0					
ANR	768130	IdentifierDeclStatement	int targetq_num = popular_quantifier_num ( qnt ) ;	4785:6:106995:107040	767995	2	True				
ANR	768131	IdentifierDecl	targetq_num = popular_quantifier_num ( qnt )		767995	0					
ANR	768132	IdentifierDeclType	int		767995	0					
ANR	768133	Identifier	targetq_num		767995	1					
ANR	768134	AssignmentExpression	targetq_num = popular_quantifier_num ( qnt )		767995	2		=			
ANR	768135	Identifier	targetq_num		767995	0					
ANR	768136	CallExpression	popular_quantifier_num ( qnt )		767995	1					
ANR	768137	Callee	popular_quantifier_num		767995	0					
ANR	768138	Identifier	popular_quantifier_num		767995	0					
ANR	768139	ArgumentList	qnt		767995	1					
ANR	768140	Argument	qnt		767995	0					
ANR	768141	Identifier	qnt		767995	0					
ANR	768142	IfStatement	"if ( ! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT ) )"		767995	3					
ANR	768143	Condition	"! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"	4788:10:107105:107236	767995	0	True				
ANR	768144	AndExpression	"! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		767995	0		&&			
ANR	768145	UnaryOperationExpression	! IS_QUANTIFIER_BY_NUMBER ( qn )		767995	0					
ANR	768146	UnaryOperator	!		767995	0					
ANR	768147	CallExpression	IS_QUANTIFIER_BY_NUMBER ( qn )		767995	1					
ANR	768148	Callee	IS_QUANTIFIER_BY_NUMBER		767995	0					
ANR	768149	Identifier	IS_QUANTIFIER_BY_NUMBER		767995	0					
ANR	768150	ArgumentList	qn		767995	1					
ANR	768151	Argument	qn		767995	0					
ANR	768152	Identifier	qn		767995	0					
ANR	768153	AndExpression	"! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		767995	1		&&			
ANR	768154	UnaryOperationExpression	! IS_QUANTIFIER_BY_NUMBER ( qnt )		767995	0					
ANR	768155	UnaryOperator	!		767995	0					
ANR	768156	CallExpression	IS_QUANTIFIER_BY_NUMBER ( qnt )		767995	1					
ANR	768157	Callee	IS_QUANTIFIER_BY_NUMBER		767995	0					
ANR	768158	Identifier	IS_QUANTIFIER_BY_NUMBER		767995	0					
ANR	768159	ArgumentList	qnt		767995	1					
ANR	768160	Argument	qnt		767995	0					
ANR	768161	Identifier	qnt		767995	0					
ANR	768162	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		767995	1					
ANR	768163	Callee	IS_SYNTAX_BV		767995	0					
ANR	768164	Identifier	IS_SYNTAX_BV		767995	0					
ANR	768165	ArgumentList	env -> syntax		767995	1					
ANR	768166	Argument	env -> syntax		767995	0					
ANR	768167	PtrMemberAccess	env -> syntax		767995	0					
ANR	768168	Identifier	env		767995	0					
ANR	768169	Identifier	syntax		767995	1					
ANR	768170	Argument	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		767995	1					
ANR	768171	Identifier	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		767995	0					
ANR	768172	CompoundStatement		33:8:855:878	767995	1					
ANR	768173	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	4790:8:107249:107272	767995	0	True				
ANR	768174	IdentifierDecl	buf [ WARN_BUFSIZE ]		767995	0					
ANR	768175	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		767995	0					
ANR	768176	Identifier	buf		767995	1					
ANR	768177	Identifier	WARN_BUFSIZE		767995	2					
ANR	768178	SwitchStatement	switch ( ReduceTypeTable [ targetq_num ] [ nestq_num ] )		767995	1					
ANR	768179	Condition	ReduceTypeTable [ targetq_num ] [ nestq_num ]	4792:15:107290:107328	767995	0	True				
ANR	768180	ArrayIndexing	ReduceTypeTable [ targetq_num ] [ nestq_num ]		767995	0					
ANR	768181	ArrayIndexing	ReduceTypeTable [ targetq_num ]		767995	0					
ANR	768182	Identifier	ReduceTypeTable		767995	0					
ANR	768183	Identifier	targetq_num		767995	1					
ANR	768184	Identifier	nestq_num		767995	1					
ANR	768185	CompoundStatement		35:56:937:937	767995	1					
ANR	768186	Label	case RQ_ASIS :	4793:8:107341:107353	767995	0	True				
ANR	768187	Identifier	RQ_ASIS		767995	0					
ANR	768188	BreakStatement	break ;	4794:10:107365:107370	767995	1	True				
ANR	768189	Label	case RQ_DEL :	4796:8:107381:107392	767995	2	True				
ANR	768190	Identifier	RQ_DEL		767995	0					
ANR	768191	IfStatement	if ( onig_verb_warn != onig_null_warn )		767995	3					
ANR	768192	Condition	onig_verb_warn != onig_null_warn	4797:14:107408:107439	767995	0	True				
ANR	768193	EqualityExpression	onig_verb_warn != onig_null_warn		767995	0		!=			
ANR	768194	Identifier	onig_verb_warn		767995	0					
ANR	768195	Identifier	onig_null_warn		767995	1					
ANR	768196	CompoundStatement		40:48:1048:1048	767995	1					
ANR	768197	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""redundant nested repeat operator"" )"	4798:12:107456:107654	767995	0	True				
ANR	768198	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""redundant nested repeat operator"" )"		767995	0					
ANR	768199	Callee	onig_snprintf_with_pattern		767995	0					
ANR	768200	Identifier	onig_snprintf_with_pattern		767995	0					
ANR	768201	ArgumentList	buf		767995	1					
ANR	768202	Argument	buf		767995	0					
ANR	768203	Identifier	buf		767995	0					
ANR	768204	Argument	WARN_BUFSIZE		767995	1					
ANR	768205	Identifier	WARN_BUFSIZE		767995	0					
ANR	768206	Argument	env -> enc		767995	2					
ANR	768207	PtrMemberAccess	env -> enc		767995	0					
ANR	768208	Identifier	env		767995	0					
ANR	768209	Identifier	enc		767995	1					
ANR	768210	Argument	env -> pattern		767995	3					
ANR	768211	PtrMemberAccess	env -> pattern		767995	0					
ANR	768212	Identifier	env		767995	0					
ANR	768213	Identifier	pattern		767995	1					
ANR	768214	Argument	env -> pattern_end		767995	4					
ANR	768215	PtrMemberAccess	env -> pattern_end		767995	0					
ANR	768216	Identifier	env		767995	0					
ANR	768217	Identifier	pattern_end		767995	1					
ANR	768218	Argument	"( UChar * ) ""redundant nested repeat operator"""		767995	5					
ANR	768219	CastExpression	"( UChar * ) ""redundant nested repeat operator"""		767995	0					
ANR	768220	CastTarget	UChar *		767995	0					
ANR	768221	PrimaryExpression	"""redundant nested repeat operator"""		767995	1					
ANR	768222	ExpressionStatement	( * onig_verb_warn ) ( ( char * ) buf )	4801:12:107668:107698	767995	1	True				
ANR	768223	CallExpression	( * onig_verb_warn ) ( ( char * ) buf )		767995	0					
ANR	768224	Callee	* onig_verb_warn		767995	0					
ANR	768225	UnaryOperationExpression	* onig_verb_warn		767995	0					
ANR	768226	UnaryOperator	*		767995	0					
ANR	768227	Identifier	onig_verb_warn		767995	1					
ANR	768228	ArgumentList	( char * ) buf		767995	1					
ANR	768229	Argument	( char * ) buf		767995	0					
ANR	768230	CastExpression	( char * ) buf		767995	0					
ANR	768231	CastTarget	char *		767995	0					
ANR	768232	Identifier	buf		767995	1					
ANR	768233	GotoStatement	goto warn_exit ;	4803:10:107722:107736	767995	4	True				
ANR	768234	Identifier	warn_exit		767995	0					
ANR	768235	BreakStatement	break ;	4804:10:107748:107753	767995	5	True				
ANR	768236	Label	default :	4806:8:107764:107771	767995	6	True				
ANR	768237	Identifier	default		767995	0					
ANR	768238	IfStatement	if ( onig_verb_warn != onig_null_warn )		767995	7					
ANR	768239	Condition	onig_verb_warn != onig_null_warn	4807:14:107787:107818	767995	0	True				
ANR	768240	EqualityExpression	onig_verb_warn != onig_null_warn		767995	0		!=			
ANR	768241	Identifier	onig_verb_warn		767995	0					
ANR	768242	Identifier	onig_null_warn		767995	1					
ANR	768243	CompoundStatement		50:48:1427:1427	767995	1					
ANR	768244	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"" , PopularQStr [ targetq_num ] , PopularQStr [ nestq_num ] , ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ] )"	4808:12:107835:108168	767995	0	True				
ANR	768245	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"" , PopularQStr [ targetq_num ] , PopularQStr [ nestq_num ] , ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ] )"		767995	0					
ANR	768246	Callee	onig_snprintf_with_pattern		767995	0					
ANR	768247	Identifier	onig_snprintf_with_pattern		767995	0					
ANR	768248	ArgumentList	buf		767995	1					
ANR	768249	Argument	buf		767995	0					
ANR	768250	Identifier	buf		767995	0					
ANR	768251	Argument	WARN_BUFSIZE		767995	1					
ANR	768252	Identifier	WARN_BUFSIZE		767995	0					
ANR	768253	Argument	env -> enc		767995	2					
ANR	768254	PtrMemberAccess	env -> enc		767995	0					
ANR	768255	Identifier	env		767995	0					
ANR	768256	Identifier	enc		767995	1					
ANR	768257	Argument	env -> pattern		767995	3					
ANR	768258	PtrMemberAccess	env -> pattern		767995	0					
ANR	768259	Identifier	env		767995	0					
ANR	768260	Identifier	pattern		767995	1					
ANR	768261	Argument	env -> pattern_end		767995	4					
ANR	768262	PtrMemberAccess	env -> pattern_end		767995	0					
ANR	768263	Identifier	env		767995	0					
ANR	768264	Identifier	pattern_end		767995	1					
ANR	768265	Argument	"( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"""		767995	5					
ANR	768266	CastExpression	"( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"""		767995	0					
ANR	768267	CastTarget	UChar *		767995	0					
ANR	768268	PrimaryExpression	"""nested repeat operator %s and %s was replaced with '%s'"""		767995	1					
ANR	768269	Argument	PopularQStr [ targetq_num ]		767995	6					
ANR	768270	ArrayIndexing	PopularQStr [ targetq_num ]		767995	0					
ANR	768271	Identifier	PopularQStr		767995	0					
ANR	768272	Identifier	targetq_num		767995	1					
ANR	768273	Argument	PopularQStr [ nestq_num ]		767995	7					
ANR	768274	ArrayIndexing	PopularQStr [ nestq_num ]		767995	0					
ANR	768275	Identifier	PopularQStr		767995	0					
ANR	768276	Identifier	nestq_num		767995	1					
ANR	768277	Argument	ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ]		767995	8					
ANR	768278	ArrayIndexing	ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ]		767995	0					
ANR	768279	Identifier	ReduceQStr		767995	0					
ANR	768280	ArrayIndexing	ReduceTypeTable [ targetq_num ] [ nestq_num ]		767995	1					
ANR	768281	ArrayIndexing	ReduceTypeTable [ targetq_num ]		767995	0					
ANR	768282	Identifier	ReduceTypeTable		767995	0					
ANR	768283	Identifier	targetq_num		767995	1					
ANR	768284	Identifier	nestq_num		767995	1					
ANR	768285	ExpressionStatement	( * onig_verb_warn ) ( ( char * ) buf )	4813:12:108182:108212	767995	1	True				
ANR	768286	CallExpression	( * onig_verb_warn ) ( ( char * ) buf )		767995	0					
ANR	768287	Callee	* onig_verb_warn		767995	0					
ANR	768288	UnaryOperationExpression	* onig_verb_warn		767995	0					
ANR	768289	UnaryOperator	*		767995	0					
ANR	768290	Identifier	onig_verb_warn		767995	1					
ANR	768291	ArgumentList	( char * ) buf		767995	1					
ANR	768292	Argument	( char * ) buf		767995	0					
ANR	768293	CastExpression	( char * ) buf		767995	0					
ANR	768294	CastTarget	char *		767995	0					
ANR	768295	Identifier	buf		767995	1					
ANR	768296	GotoStatement	goto warn_exit ;	4815:10:108236:108250	767995	8	True				
ANR	768297	Identifier	warn_exit		767995	0					
ANR	768298	BreakStatement	break ;	4816:10:108262:108267	767995	9	True				
ANR	768299	Label	warn_exit :	4820:4:108292:108301	767995	4	True				
ANR	768300	Identifier	warn_exit		767995	0					
ANR	768301	IfStatement	if ( targetq_num >= 0 )		767995	5					
ANR	768302	Condition	targetq_num >= 0	4822:10:108320:108335	767995	0	True				
ANR	768303	RelationalExpression	targetq_num >= 0		767995	0		>=			
ANR	768304	Identifier	targetq_num		767995	0					
ANR	768305	PrimaryExpression	0		767995	1					
ANR	768306	CompoundStatement		65:28:1944:1944	767995	1					
ANR	768307	IfStatement	if ( nestq_num >= 0 )		767995	0					
ANR	768308	Condition	nestq_num >= 0	4823:5:108345:108358	767995	0	True				
ANR	768309	RelationalExpression	nestq_num >= 0		767995	0		>=			
ANR	768310	Identifier	nestq_num		767995	0					
ANR	768311	PrimaryExpression	0		767995	1					
ANR	768312	CompoundStatement		66:21:1967:1967	767995	1					
ANR	768313	ExpressionStatement	"onig_reduce_nested_quantifier ( qnode , target )"	4824:3:108366:108410	767995	0	True				
ANR	768314	CallExpression	"onig_reduce_nested_quantifier ( qnode , target )"		767995	0					
ANR	768315	Callee	onig_reduce_nested_quantifier		767995	0					
ANR	768316	Identifier	onig_reduce_nested_quantifier		767995	0					
ANR	768317	ArgumentList	qnode		767995	1					
ANR	768318	Argument	qnode		767995	0					
ANR	768319	Identifier	qnode		767995	0					
ANR	768320	Argument	target		767995	1					
ANR	768321	Identifier	target		767995	0					
ANR	768322	GotoStatement	goto q_exit ;	4825:3:108415:108426	767995	1	True				
ANR	768323	Identifier	q_exit		767995	0					
ANR	768324	ElseStatement	else		767995	0					
ANR	768325	IfStatement	if ( targetq_num == 1 || targetq_num == 2 )		767995	0					
ANR	768326	Condition	targetq_num == 1 || targetq_num == 2	4827:10:108441:108476	767995	0	True				
ANR	768327	OrExpression	targetq_num == 1 || targetq_num == 2		767995	0		||			
ANR	768328	EqualityExpression	targetq_num == 1		767995	0		==			
ANR	768329	Identifier	targetq_num		767995	0					
ANR	768330	PrimaryExpression	1		767995	1					
ANR	768331	EqualityExpression	targetq_num == 2		767995	1		==			
ANR	768332	Identifier	targetq_num		767995	0					
ANR	768333	PrimaryExpression	2		767995	1					
ANR	768334	CompoundStatement		70:48:2085:2085	767995	1					
ANR	768335	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy )		767995	0					
ANR	768336	Condition	! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy	4829:7:108563:108624	767995	0	True				
ANR	768337	AndExpression	! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy		767995	0		&&			
ANR	768338	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> upper )		767995	0					
ANR	768339	UnaryOperator	!		767995	0					
ANR	768340	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		767995	1					
ANR	768341	Callee	IS_REPEAT_INFINITE		767995	0					
ANR	768342	Identifier	IS_REPEAT_INFINITE		767995	0					
ANR	768343	ArgumentList	qn -> upper		767995	1					
ANR	768344	Argument	qn -> upper		767995	0					
ANR	768345	PtrMemberAccess	qn -> upper		767995	0					
ANR	768346	Identifier	qn		767995	0					
ANR	768347	Identifier	upper		767995	1					
ANR	768348	AndExpression	qn -> upper > 1 && qn -> greedy		767995	1		&&			
ANR	768349	RelationalExpression	qn -> upper > 1		767995	0		>			
ANR	768350	PtrMemberAccess	qn -> upper		767995	0					
ANR	768351	Identifier	qn		767995	0					
ANR	768352	Identifier	upper		767995	1					
ANR	768353	PrimaryExpression	1		767995	1					
ANR	768354	PtrMemberAccess	qn -> greedy		767995	1					
ANR	768355	Identifier	qn		767995	0					
ANR	768356	Identifier	greedy		767995	1					
ANR	768357	CompoundStatement		72:71:2233:2233	767995	1					
ANR	768358	ExpressionStatement	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )	4830:5:108634:108678	767995	0	True				
ANR	768359	AssignmentExpression	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )		767995	0		=			
ANR	768360	PtrMemberAccess	qn -> upper		767995	0					
ANR	768361	Identifier	qn		767995	0					
ANR	768362	Identifier	upper		767995	1					
ANR	768363	ConditionalExpression	qn -> lower == 0 ? 1 : qn -> lower		767995	1					
ANR	768364	Condition	qn -> lower == 0		767995	0					
ANR	768365	EqualityExpression	qn -> lower == 0		767995	0		==			
ANR	768366	PtrMemberAccess	qn -> lower		767995	0					
ANR	768367	Identifier	qn		767995	0					
ANR	768368	Identifier	lower		767995	1					
ANR	768369	PrimaryExpression	0		767995	1					
ANR	768370	PrimaryExpression	1		767995	1					
ANR	768371	PtrMemberAccess	qn -> lower		767995	2					
ANR	768372	Identifier	qn		767995	0					
ANR	768373	Identifier	lower		767995	1					
ANR	768374	BreakStatement	break ;	4835:4:108706:108711	767995	5	True				
ANR	768375	Label	default :	4837:2:108716:108723	767995	6	True				
ANR	768376	Identifier	default		767995	0					
ANR	768377	BreakStatement	break ;	4838:4:108729:108734	767995	7	True				
ANR	768378	ExpressionStatement	qn -> target = target	4841:2:108743:108762	767995	4	True				
ANR	768379	AssignmentExpression	qn -> target = target		767995	0		=			
ANR	768380	PtrMemberAccess	qn -> target		767995	0					
ANR	768381	Identifier	qn		767995	0					
ANR	768382	Identifier	target		767995	1					
ANR	768383	Identifier	target		767995	1					
ANR	768384	Label	q_exit :	4842:1:108765:108771	767995	5	True				
ANR	768385	Identifier	q_exit		767995	0					
ANR	768386	ReturnStatement	return 0 ;	4843:2:108775:108783	767995	6	True				
ANR	768387	PrimaryExpression	0		767995	0					
ANR	768388	ReturnType	static int		767995	1					
ANR	768389	Identifier	set_quantifier		767995	2					
ANR	768390	ParameterList	"Node * qnode , Node * target , int group , ScanEnv * env"		767995	3					
ANR	768391	Parameter	Node * qnode	4757:15:106341:106351	767995	0	True				
ANR	768392	ParameterType	Node *		767995	0					
ANR	768393	Identifier	qnode		767995	1					
ANR	768394	Parameter	Node * target	4757:28:106354:106365	767995	1	True				
ANR	768395	ParameterType	Node *		767995	0					
ANR	768396	Identifier	target		767995	1					
ANR	768397	Parameter	int group	4757:42:106368:106376	767995	2	True				
ANR	768398	ParameterType	int		767995	0					
ANR	768399	Identifier	group		767995	1					
ANR	768400	Parameter	ScanEnv * env	4757:53:106379:106390	767995	3	True				
ANR	768401	ParameterType	ScanEnv *		767995	0					
ANR	768402	Identifier	env		767995	1					
ANR	768403	CFGEntryNode	ENTRY		767995		True				
ANR	768404	CFGExitNode	EXIT		767995		True				
ANR	768405	Symbol	* qn		767995						
ANR	768406	Symbol	qn -> greedy		767995						
ANR	768407	Symbol	IS_NOT_NULL		767995						
ANR	768408	Symbol	* * ReduceTypeTable		767995						
ANR	768409	Symbol	env -> enc		767995						
ANR	768410	Symbol	* ReduceQStr		767995						
ANR	768411	Symbol	onig_verb_warn		767995						
ANR	768412	Symbol	NQTFR		767995						
ANR	768413	Symbol	popular_quantifier_num		767995						
ANR	768414	Symbol	qn -> lower		767995						
ANR	768415	Symbol	* PopularQStr		767995						
ANR	768416	Symbol	WARN_BUFSIZE		767995						
ANR	768417	Symbol	IS_SYNTAX_BV		767995						
ANR	768418	Symbol	sn		767995						
ANR	768419	Symbol	ReduceTypeTable		767995						
ANR	768420	Symbol	IS_REPEAT_INFINITE		767995						
ANR	768421	Symbol	qn		767995						
ANR	768422	Symbol	* * nestq_num		767995						
ANR	768423	Symbol	qnode		767995						
ANR	768424	Symbol	group		767995						
ANR	768425	Symbol	* nestq_num		767995						
ANR	768426	Symbol	* * * ReduceTypeTable		767995						
ANR	768427	Symbol	* * * targetq_num		767995						
ANR	768428	Symbol	str_node_can_be_split		767995						
ANR	768429	Symbol	nestq_num		767995						
ANR	768430	Symbol	PopularQStr		767995						
ANR	768431	Symbol	NSTR		767995						
ANR	768432	Symbol	* env		767995						
ANR	768433	Symbol	str_node_split_last_char		767995						
ANR	768434	Symbol	env		767995						
ANR	768435	Symbol	n		767995						
ANR	768436	Symbol	qn -> target		767995						
ANR	768437	Symbol	IS_QUANTIFIER_BY_NUMBER		767995						
ANR	768438	Symbol	env -> syntax		767995						
ANR	768439	Symbol	target		767995						
ANR	768440	Symbol	qn -> upper		767995						
ANR	768441	Symbol	buf		767995						
ANR	768442	Symbol	targetq_num		767995						
ANR	768443	Symbol	onig_null_warn		767995						
ANR	768444	Symbol	env -> pattern		767995						
ANR	768445	Symbol	qnt		767995						
ANR	768446	Symbol	* targetq_num		767995						
ANR	768447	Symbol	* ReduceTypeTable		767995						
ANR	768448	Symbol	env -> pattern_end		767995						
ANR	768449	Symbol	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		767995						
ANR	768450	Symbol	NTYPE		767995						
ANR	768451	Symbol	* * targetq_num		767995						
ANR	768452	Symbol	ReduceQStr		767995						
ANR	768453	ClassDef	<unnamed>	4853:8:108914:108983							
ANR	768454	DeclStmt									
ANR	768455	Decl							OnigEncoding	OnigEncoding	enc
ANR	768456	DeclStmt									
ANR	768457	Decl							int	int	not
ANR	768458	DeclStmt									
ANR	768459	Decl							int	int	type
ANR	768460	DeclStmt									
ANR	768461	Decl									type_cclass_key
ANR	768462	Function	type_cclass_cmp	4859:0:108986:109175							
ANR	768463	FunctionDef	"type_cclass_cmp (type_cclass_key * x , type_cclass_key * y)"		768462	0					
ANR	768464	CompoundStatement		4860:0:109053:109175	768462	0					
ANR	768465	IfStatement	if ( x -> type != y -> type )		768462	0					
ANR	768466	Condition	x -> type != y -> type	4861:6:109061:109078	768462	0	True				
ANR	768467	EqualityExpression	x -> type != y -> type		768462	0		!=			
ANR	768468	PtrMemberAccess	x -> type		768462	0					
ANR	768469	Identifier	x		768462	0					
ANR	768470	Identifier	type		768462	1					
ANR	768471	PtrMemberAccess	y -> type		768462	1					
ANR	768472	Identifier	y		768462	0					
ANR	768473	Identifier	type		768462	1					
ANR	768474	ReturnStatement	return 1 ;	4861:26:109081:109089	768462	1	True				
ANR	768475	PrimaryExpression	1		768462	0					
ANR	768476	IfStatement	if ( x -> enc != y -> enc )		768462	1					
ANR	768477	Condition	x -> enc != y -> enc	4862:6:109097:109113	768462	0	True				
ANR	768478	EqualityExpression	x -> enc != y -> enc		768462	0		!=			
ANR	768479	PtrMemberAccess	x -> enc		768462	0					
ANR	768480	Identifier	x		768462	0					
ANR	768481	Identifier	enc		768462	1					
ANR	768482	PtrMemberAccess	y -> enc		768462	1					
ANR	768483	Identifier	y		768462	0					
ANR	768484	Identifier	enc		768462	1					
ANR	768485	ReturnStatement	return 1 ;	4862:26:109117:109125	768462	1	True				
ANR	768486	PrimaryExpression	1		768462	0					
ANR	768487	IfStatement	if ( x -> not != y -> not )		768462	2					
ANR	768488	Condition	x -> not != y -> not	4863:6:109133:109149	768462	0	True				
ANR	768489	EqualityExpression	x -> not != y -> not		768462	0		!=			
ANR	768490	PtrMemberAccess	x -> not		768462	0					
ANR	768491	Identifier	x		768462	0					
ANR	768492	Identifier	not		768462	1					
ANR	768493	PtrMemberAccess	y -> not		768462	1					
ANR	768494	Identifier	y		768462	0					
ANR	768495	Identifier	not		768462	1					
ANR	768496	ReturnStatement	return 1 ;	4863:26:109153:109161	768462	1	True				
ANR	768497	PrimaryExpression	1		768462	0					
ANR	768498	ReturnStatement	return 0 ;	4864:2:109165:109173	768462	3	True				
ANR	768499	PrimaryExpression	0		768462	0					
ANR	768500	ReturnType	static int		768462	1					
ANR	768501	Identifier	type_cclass_cmp		768462	2					
ANR	768502	ParameterList	"type_cclass_key * x , type_cclass_key * y"		768462	3					
ANR	768503	Parameter	type_cclass_key * x	4859:27:109013:109030	768462	0	True				
ANR	768504	ParameterType	type_cclass_key *		768462	0					
ANR	768505	Identifier	x		768462	1					
ANR	768506	Parameter	type_cclass_key * y	4859:47:109033:109050	768462	1	True				
ANR	768507	ParameterType	type_cclass_key *		768462	0					
ANR	768508	Identifier	y		768462	1					
ANR	768509	CFGEntryNode	ENTRY		768462		True				
ANR	768510	CFGExitNode	EXIT		768462		True				
ANR	768511	Symbol	* x		768462						
ANR	768512	Symbol	y -> not		768462						
ANR	768513	Symbol	* y		768462						
ANR	768514	Symbol	x -> not		768462						
ANR	768515	Symbol	x		768462						
ANR	768516	Symbol	y		768462						
ANR	768517	Symbol	x -> type		768462						
ANR	768518	Symbol	y -> enc		768462						
ANR	768519	Symbol	x -> enc		768462						
ANR	768520	Symbol	y -> type		768462						
ANR	768521	Function	type_cclass_hash	4867:0:109178:109549							
ANR	768522	FunctionDef	type_cclass_hash (type_cclass_key * key)		768521	0					
ANR	768523	CompoundStatement		4868:0:109228:109549	768521	0					
ANR	768524	IdentifierDeclStatement	"int i , val ;"	4869:2:109232:109242	768521	0	True				
ANR	768525	IdentifierDecl	i		768521	0					
ANR	768526	IdentifierDeclType	int		768521	0					
ANR	768527	Identifier	i		768521	1					
ANR	768528	IdentifierDecl	val		768521	1					
ANR	768529	IdentifierDeclType	int		768521	0					
ANR	768530	Identifier	val		768521	1					
ANR	768531	IdentifierDeclStatement	UChar * p ;	4870:2:109246:109254	768521	1	True				
ANR	768532	IdentifierDecl	* p		768521	0					
ANR	768533	IdentifierDeclType	UChar *		768521	0					
ANR	768534	Identifier	p		768521	1					
ANR	768535	ExpressionStatement	val = 0	4872:2:109259:109266	768521	2	True				
ANR	768536	AssignmentExpression	val = 0		768521	0		=			
ANR	768537	Identifier	val		768521	0					
ANR	768538	PrimaryExpression	0		768521	1					
ANR	768539	ExpressionStatement	p = ( UChar * ) & ( key -> enc )	4874:2:109271:109295	768521	3	True				
ANR	768540	AssignmentExpression	p = ( UChar * ) & ( key -> enc )		768521	0		=			
ANR	768541	Identifier	p		768521	0					
ANR	768542	CastExpression	( UChar * ) & ( key -> enc )		768521	1					
ANR	768543	CastTarget	UChar *		768521	0					
ANR	768544	UnaryOperationExpression	& ( key -> enc )		768521	1					
ANR	768545	UnaryOperator	&		768521	0					
ANR	768546	PtrMemberAccess	key -> enc		768521	1					
ANR	768547	Identifier	key		768521	0					
ANR	768548	Identifier	enc		768521	1					
ANR	768549	ForStatement	for ( i = 0 ; i < ( int ) sizeof ( key -> enc ) ; i ++ )		768521	4					
ANR	768550	ForInit	i = 0 ;	4875:7:109304:109309	768521	0	True				
ANR	768551	AssignmentExpression	i = 0		768521	0		=			
ANR	768552	Identifier	i		768521	0					
ANR	768553	PrimaryExpression	0		768521	1					
ANR	768554	Condition	i < ( int ) sizeof ( key -> enc )	4875:14:109311:109336	768521	1	True				
ANR	768555	RelationalExpression	i < ( int ) sizeof ( key -> enc )		768521	0		<			
ANR	768556	Identifier	i		768521	0					
ANR	768557	CastExpression	( int ) sizeof ( key -> enc )		768521	1					
ANR	768558	CastTarget	int		768521	0					
ANR	768559	SizeofExpression	sizeof ( key -> enc )		768521	1					
ANR	768560	Sizeof	sizeof		768521	0					
ANR	768561	PtrMemberAccess	key -> enc		768521	1					
ANR	768562	Identifier	key		768521	0					
ANR	768563	Identifier	enc		768521	1					
ANR	768564	PostIncDecOperationExpression	i ++	4875:42:109339:109341	768521	2	True				
ANR	768565	Identifier	i		768521	0					
ANR	768566	IncDec	++		768521	1					
ANR	768567	CompoundStatement		8:47:115:115	768521	3					
ANR	768568	ExpressionStatement	val = val * 997 + ( int ) * p ++	4876:4:109350:109378	768521	0	True				
ANR	768569	AssignmentExpression	val = val * 997 + ( int ) * p ++		768521	0		=			
ANR	768570	Identifier	val		768521	0					
ANR	768571	AdditiveExpression	val * 997 + ( int ) * p ++		768521	1		+			
ANR	768572	MultiplicativeExpression	val * 997		768521	0		*			
ANR	768573	Identifier	val		768521	0					
ANR	768574	PrimaryExpression	997		768521	1					
ANR	768575	CastExpression	( int ) * p ++		768521	1					
ANR	768576	CastTarget	int		768521	0					
ANR	768577	UnaryOperationExpression	* p ++		768521	1					
ANR	768578	UnaryOperator	*		768521	0					
ANR	768579	PostIncDecOperationExpression	p ++		768521	1					
ANR	768580	Identifier	p		768521	0					
ANR	768581	IncDec	++		768521	1					
ANR	768582	ExpressionStatement	p = ( UChar * ) ( & key -> type )	4879:2:109387:109412	768521	5	True				
ANR	768583	AssignmentExpression	p = ( UChar * ) ( & key -> type )		768521	0		=			
ANR	768584	Identifier	p		768521	0					
ANR	768585	CastExpression	( UChar * ) ( & key -> type )		768521	1					
ANR	768586	CastTarget	UChar *		768521	0					
ANR	768587	UnaryOperationExpression	& key -> type		768521	1					
ANR	768588	UnaryOperator	&		768521	0					
ANR	768589	PtrMemberAccess	key -> type		768521	1					
ANR	768590	Identifier	key		768521	0					
ANR	768591	Identifier	type		768521	1					
ANR	768592	ForStatement	for ( i = 0 ; i < ( int ) sizeof ( key -> type ) ; i ++ )		768521	6					
ANR	768593	ForInit	i = 0 ;	4880:7:109421:109426	768521	0	True				
ANR	768594	AssignmentExpression	i = 0		768521	0		=			
ANR	768595	Identifier	i		768521	0					
ANR	768596	PrimaryExpression	0		768521	1					
ANR	768597	Condition	i < ( int ) sizeof ( key -> type )	4880:14:109428:109454	768521	1	True				
ANR	768598	RelationalExpression	i < ( int ) sizeof ( key -> type )		768521	0		<			
ANR	768599	Identifier	i		768521	0					
ANR	768600	CastExpression	( int ) sizeof ( key -> type )		768521	1					
ANR	768601	CastTarget	int		768521	0					
ANR	768602	SizeofExpression	sizeof ( key -> type )		768521	1					
ANR	768603	Sizeof	sizeof		768521	0					
ANR	768604	PtrMemberAccess	key -> type		768521	1					
ANR	768605	Identifier	key		768521	0					
ANR	768606	Identifier	type		768521	1					
ANR	768607	PostIncDecOperationExpression	i ++	4880:43:109457:109459	768521	2	True				
ANR	768608	Identifier	i		768521	0					
ANR	768609	IncDec	++		768521	1					
ANR	768610	CompoundStatement		13:48:233:233	768521	3					
ANR	768611	ExpressionStatement	val = val * 997 + ( int ) * p ++	4881:4:109468:109496	768521	0	True				
ANR	768612	AssignmentExpression	val = val * 997 + ( int ) * p ++		768521	0		=			
ANR	768613	Identifier	val		768521	0					
ANR	768614	AdditiveExpression	val * 997 + ( int ) * p ++		768521	1		+			
ANR	768615	MultiplicativeExpression	val * 997		768521	0		*			
ANR	768616	Identifier	val		768521	0					
ANR	768617	PrimaryExpression	997		768521	1					
ANR	768618	CastExpression	( int ) * p ++		768521	1					
ANR	768619	CastTarget	int		768521	0					
ANR	768620	UnaryOperationExpression	* p ++		768521	1					
ANR	768621	UnaryOperator	*		768521	0					
ANR	768622	PostIncDecOperationExpression	p ++		768521	1					
ANR	768623	Identifier	p		768521	0					
ANR	768624	IncDec	++		768521	1					
ANR	768625	ExpressionStatement	val += key -> not	4884:2:109505:109520	768521	7	True				
ANR	768626	AssignmentExpression	val += key -> not		768521	0		+=			
ANR	768627	Identifier	val		768521	0					
ANR	768628	PtrMemberAccess	key -> not		768521	1					
ANR	768629	Identifier	key		768521	0					
ANR	768630	Identifier	not		768521	1					
ANR	768631	ReturnStatement	return val + ( val >> 5 ) ;	4885:2:109524:109547	768521	8	True				
ANR	768632	AdditiveExpression	val + ( val >> 5 )		768521	0		+			
ANR	768633	Identifier	val		768521	0					
ANR	768634	ShiftExpression	val >> 5		768521	1		>>			
ANR	768635	Identifier	val		768521	0					
ANR	768636	PrimaryExpression	5		768521	1					
ANR	768637	ReturnType	static int		768521	1					
ANR	768638	Identifier	type_cclass_hash		768521	2					
ANR	768639	ParameterList	type_cclass_key * key		768521	3					
ANR	768640	Parameter	type_cclass_key * key	4867:28:109206:109225	768521	0	True				
ANR	768641	ParameterType	type_cclass_key *		768521	0					
ANR	768642	Identifier	key		768521	1					
ANR	768643	CFGEntryNode	ENTRY		768521		True				
ANR	768644	CFGExitNode	EXIT		768521		True				
ANR	768645	Symbol	val		768521						
ANR	768646	Symbol	p		768521						
ANR	768647	Symbol	key -> type		768521						
ANR	768648	Symbol	& key -> enc		768521						
ANR	768649	Symbol	key -> enc		768521						
ANR	768650	Symbol	* p ++		768521						
ANR	768651	Symbol	i		768521						
ANR	768652	Symbol	* key		768521						
ANR	768653	Symbol	& key -> type		768521						
ANR	768654	Symbol	key		768521						
ANR	768655	Symbol	key -> not		768521						
ANR	768656	DeclStmt									
ANR	768657	Decl							struct st_hash_type	struct st_hash_type	type_type_cclass_hash
ANR	768658	DeclStmt									
ANR	768659	Decl							st_table	st_table *	OnigTypeCClassTable
ANR	768660	DeclStmt									
ANR	768661	Decl							CClassNode	CClassNode *	cc
ANR	768662	Function	onig_free_shared_cclass_table	4909:0:109973:110224							
ANR	768663	FunctionDef	onig_free_shared_cclass_table ()		768662	0					
ANR	768664	CompoundStatement		4911:0:110020:110224	768662	0					
ANR	768665	IfStatement	if ( IS_NOT_NULL ( OnigTypeCClassTable ) )		768662	0					
ANR	768666	Condition	IS_NOT_NULL ( OnigTypeCClassTable )	4912:6:110028:110059	768662	0	True				
ANR	768667	CallExpression	IS_NOT_NULL ( OnigTypeCClassTable )		768662	0					
ANR	768668	Callee	IS_NOT_NULL		768662	0					
ANR	768669	Identifier	IS_NOT_NULL		768662	0					
ANR	768670	ArgumentList	OnigTypeCClassTable		768662	1					
ANR	768671	Argument	OnigTypeCClassTable		768662	0					
ANR	768672	Identifier	OnigTypeCClassTable		768662	0					
ANR	768673	CompoundStatement		2:40:41:41	768662	1					
ANR	768674	ExpressionStatement	"onig_st_foreach ( OnigTypeCClassTable , i_free_shared_class , 0 )"	4913:4:110068:110128	768662	0	True				
ANR	768675	CallExpression	"onig_st_foreach ( OnigTypeCClassTable , i_free_shared_class , 0 )"		768662	0					
ANR	768676	Callee	onig_st_foreach		768662	0					
ANR	768677	Identifier	onig_st_foreach		768662	0					
ANR	768678	ArgumentList	OnigTypeCClassTable		768662	1					
ANR	768679	Argument	OnigTypeCClassTable		768662	0					
ANR	768680	Identifier	OnigTypeCClassTable		768662	0					
ANR	768681	Argument	i_free_shared_class		768662	1					
ANR	768682	Identifier	i_free_shared_class		768662	0					
ANR	768683	Argument	0		768662	2					
ANR	768684	PrimaryExpression	0		768662	0					
ANR	768685	ExpressionStatement	onig_st_free_table ( OnigTypeCClassTable )	4914:4:110134:110173	768662	1	True				
ANR	768686	CallExpression	onig_st_free_table ( OnigTypeCClassTable )		768662	0					
ANR	768687	Callee	onig_st_free_table		768662	0					
ANR	768688	Identifier	onig_st_free_table		768662	0					
ANR	768689	ArgumentList	OnigTypeCClassTable		768662	1					
ANR	768690	Argument	OnigTypeCClassTable		768662	0					
ANR	768691	Identifier	OnigTypeCClassTable		768662	0					
ANR	768692	ExpressionStatement	OnigTypeCClassTable = NULL	4915:4:110179:110205	768662	2	True				
ANR	768693	AssignmentExpression	OnigTypeCClassTable = NULL		768662	0		=			
ANR	768694	Identifier	OnigTypeCClassTable		768662	0					
ANR	768695	Identifier	NULL		768662	1					
ANR	768696	ReturnStatement	return 0 ;	4918:2:110214:110222	768662	1	True				
ANR	768697	PrimaryExpression	0		768662	0					
ANR	768698	ReturnType	extern int		768662	1					
ANR	768699	Identifier	onig_free_shared_cclass_table		768662	2					
ANR	768700	ParameterList			768662	3					
ANR	768701	CFGEntryNode	ENTRY		768662		True				
ANR	768702	CFGExitNode	EXIT		768662		True				
ANR	768703	Symbol	IS_NOT_NULL		768662						
ANR	768704	Symbol	NULL		768662						
ANR	768705	Symbol	OnigTypeCClassTable		768662						
ANR	768706	Symbol	i_free_shared_class		768662						
ANR	768707	Function	clear_not_flag_cclass	4925:0:110318:110689							
ANR	768708	FunctionDef	"clear_not_flag_cclass (CClassNode * cc , OnigEncoding enc)"		768707	0					
ANR	768709	CompoundStatement		4927:0:110385:110689	768707	0					
ANR	768710	IdentifierDeclStatement	BBuf * tbuf ;	4928:2:110389:110399	768707	0	True				
ANR	768711	IdentifierDecl	* tbuf		768707	0					
ANR	768712	IdentifierDeclType	BBuf *		768707	0					
ANR	768713	Identifier	tbuf		768707	1					
ANR	768714	IdentifierDeclStatement	int r ;	4929:2:110403:110408	768707	1	True				
ANR	768715	IdentifierDecl	r		768707	0					
ANR	768716	IdentifierDeclType	int		768707	0					
ANR	768717	Identifier	r		768707	1					
ANR	768718	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		768707	2					
ANR	768719	Condition	IS_NCCLASS_NOT ( cc )	4931:6:110417:110434	768707	0	True				
ANR	768720	CallExpression	IS_NCCLASS_NOT ( cc )		768707	0					
ANR	768721	Callee	IS_NCCLASS_NOT		768707	0					
ANR	768722	Identifier	IS_NCCLASS_NOT		768707	0					
ANR	768723	ArgumentList	cc		768707	1					
ANR	768724	Argument	cc		768707	0					
ANR	768725	Identifier	cc		768707	0					
ANR	768726	CompoundStatement		5:26:51:51	768707	1					
ANR	768727	ExpressionStatement	bitset_invert ( cc -> bs )	4932:4:110443:110464	768707	0	True				
ANR	768728	CallExpression	bitset_invert ( cc -> bs )		768707	0					
ANR	768729	Callee	bitset_invert		768707	0					
ANR	768730	Identifier	bitset_invert		768707	0					
ANR	768731	ArgumentList	cc -> bs		768707	1					
ANR	768732	Argument	cc -> bs		768707	0					
ANR	768733	PtrMemberAccess	cc -> bs		768707	0					
ANR	768734	Identifier	cc		768707	0					
ANR	768735	Identifier	bs		768707	1					
ANR	768736	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		768707	1					
ANR	768737	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	4934:8:110475:110502	768707	0	True				
ANR	768738	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		768707	0					
ANR	768739	UnaryOperator	!		768707	0					
ANR	768740	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		768707	1					
ANR	768741	Callee	ONIGENC_IS_SINGLEBYTE		768707	0					
ANR	768742	Identifier	ONIGENC_IS_SINGLEBYTE		768707	0					
ANR	768743	ArgumentList	enc		768707	1					
ANR	768744	Argument	enc		768707	0					
ANR	768745	Identifier	enc		768707	0					
ANR	768746	CompoundStatement		8:38:119:119	768707	1					
ANR	768747	ExpressionStatement	"r = not_code_range_buf ( enc , cc -> mbuf , & tbuf )"	4935:6:110513:110557	768707	0	True				
ANR	768748	AssignmentExpression	"r = not_code_range_buf ( enc , cc -> mbuf , & tbuf )"		768707	0		=			
ANR	768749	Identifier	r		768707	0					
ANR	768750	CallExpression	"not_code_range_buf ( enc , cc -> mbuf , & tbuf )"		768707	1					
ANR	768751	Callee	not_code_range_buf		768707	0					
ANR	768752	Identifier	not_code_range_buf		768707	0					
ANR	768753	ArgumentList	enc		768707	1					
ANR	768754	Argument	enc		768707	0					
ANR	768755	Identifier	enc		768707	0					
ANR	768756	Argument	cc -> mbuf		768707	1					
ANR	768757	PtrMemberAccess	cc -> mbuf		768707	0					
ANR	768758	Identifier	cc		768707	0					
ANR	768759	Identifier	mbuf		768707	1					
ANR	768760	Argument	& tbuf		768707	2					
ANR	768761	UnaryOperationExpression	& tbuf		768707	0					
ANR	768762	UnaryOperator	&		768707	0					
ANR	768763	Identifier	tbuf		768707	1					
ANR	768764	IfStatement	if ( r != 0 )		768707	1					
ANR	768765	Condition	r != 0	4936:10:110569:110574	768707	0	True				
ANR	768766	EqualityExpression	r != 0		768707	0		!=			
ANR	768767	Identifier	r		768707	0					
ANR	768768	PrimaryExpression	0		768707	1					
ANR	768769	ReturnStatement	return r ;	4936:18:110577:110585	768707	1	True				
ANR	768770	Identifier	r		768707	0					
ANR	768771	ExpressionStatement	bbuf_free ( cc -> mbuf )	4938:6:110594:110613	768707	2	True				
ANR	768772	CallExpression	bbuf_free ( cc -> mbuf )		768707	0					
ANR	768773	Callee	bbuf_free		768707	0					
ANR	768774	Identifier	bbuf_free		768707	0					
ANR	768775	ArgumentList	cc -> mbuf		768707	1					
ANR	768776	Argument	cc -> mbuf		768707	0					
ANR	768777	PtrMemberAccess	cc -> mbuf		768707	0					
ANR	768778	Identifier	cc		768707	0					
ANR	768779	Identifier	mbuf		768707	1					
ANR	768780	ExpressionStatement	cc -> mbuf = tbuf	4939:6:110621:110636	768707	3	True				
ANR	768781	AssignmentExpression	cc -> mbuf = tbuf		768707	0		=			
ANR	768782	PtrMemberAccess	cc -> mbuf		768707	0					
ANR	768783	Identifier	cc		768707	0					
ANR	768784	Identifier	mbuf		768707	1					
ANR	768785	Identifier	tbuf		768707	1					
ANR	768786	ExpressionStatement	NCCLASS_CLEAR_NOT ( cc )	4942:4:110649:110670	768707	2	True				
ANR	768787	CallExpression	NCCLASS_CLEAR_NOT ( cc )		768707	0					
ANR	768788	Callee	NCCLASS_CLEAR_NOT		768707	0					
ANR	768789	Identifier	NCCLASS_CLEAR_NOT		768707	0					
ANR	768790	ArgumentList	cc		768707	1					
ANR	768791	Argument	cc		768707	0					
ANR	768792	Identifier	cc		768707	0					
ANR	768793	ReturnStatement	return 0 ;	4945:2:110679:110687	768707	3	True				
ANR	768794	PrimaryExpression	0		768707	0					
ANR	768795	ReturnType	static int		768707	1					
ANR	768796	Identifier	clear_not_flag_cclass		768707	2					
ANR	768797	ParameterList	"CClassNode * cc , OnigEncoding enc"		768707	3					
ANR	768798	Parameter	CClassNode * cc	4926:22:110351:110364	768707	0	True				
ANR	768799	ParameterType	CClassNode *		768707	0					
ANR	768800	Identifier	cc		768707	1					
ANR	768801	Parameter	OnigEncoding enc	4926:38:110367:110382	768707	1	True				
ANR	768802	ParameterType	OnigEncoding		768707	0					
ANR	768803	Identifier	enc		768707	1					
ANR	768804	CFGEntryNode	ENTRY		768707		True				
ANR	768805	CFGExitNode	EXIT		768707		True				
ANR	768806	Symbol	cc		768707						
ANR	768807	Symbol	r		768707						
ANR	768808	Symbol	not_code_range_buf		768707						
ANR	768809	Symbol	* cc		768707						
ANR	768810	Symbol	IS_NCCLASS_NOT		768707						
ANR	768811	Symbol	& tbuf		768707						
ANR	768812	Symbol	tbuf		768707						
ANR	768813	Symbol	enc		768707						
ANR	768814	Symbol	cc -> mbuf		768707						
ANR	768815	Symbol	cc -> bs		768707						
ANR	768816	Symbol	ONIGENC_IS_SINGLEBYTE		768707						
ANR	768817	ClassDef	<unnamed>	4949:8:110757:110867							
ANR	768818	DeclStmt									
ANR	768819	Decl							ScanEnv	ScanEnv *	env
ANR	768820	DeclStmt									
ANR	768821	Decl							CClassNode	CClassNode *	cc
ANR	768822	DeclStmt									
ANR	768823	Decl							Node	Node *	alt_root
ANR	768824	DeclStmt									
ANR	768825	Decl							Node	Node * *	ptail
ANR	768826	DeclStmt									
ANR	768827	Decl									IApplyCaseFoldArg
ANR	768828	Function	i_apply_case_fold	4956:0:110870:112782							
ANR	768829	FunctionDef	"i_apply_case_fold (OnigCodePoint from , OnigCodePoint to [ ] , int to_len , void * arg)"		768828	0					
ANR	768830	CompoundStatement		4959:0:110966:112782	768828	0					
ANR	768831	IdentifierDeclStatement	IApplyCaseFoldArg * iarg ;	4960:2:110970:110993	768828	0	True				
ANR	768832	IdentifierDecl	* iarg		768828	0					
ANR	768833	IdentifierDeclType	IApplyCaseFoldArg *		768828	0					
ANR	768834	Identifier	iarg		768828	1					
ANR	768835	IdentifierDeclStatement	ScanEnv * env ;	4961:2:110997:111009	768828	1	True				
ANR	768836	IdentifierDecl	* env		768828	0					
ANR	768837	IdentifierDeclType	ScanEnv *		768828	0					
ANR	768838	Identifier	env		768828	1					
ANR	768839	IdentifierDeclStatement	CClassNode * cc ;	4962:2:111013:111027	768828	2	True				
ANR	768840	IdentifierDecl	* cc		768828	0					
ANR	768841	IdentifierDeclType	CClassNode *		768828	0					
ANR	768842	Identifier	cc		768828	1					
ANR	768843	IdentifierDeclStatement	BitSetRef bs ;	4963:2:111031:111043	768828	3	True				
ANR	768844	IdentifierDecl	bs		768828	0					
ANR	768845	IdentifierDeclType	BitSetRef		768828	0					
ANR	768846	Identifier	bs		768828	1					
ANR	768847	ExpressionStatement	iarg = ( IApplyCaseFoldArg * ) arg	4965:2:111048:111079	768828	4	True				
ANR	768848	AssignmentExpression	iarg = ( IApplyCaseFoldArg * ) arg		768828	0		=			
ANR	768849	Identifier	iarg		768828	0					
ANR	768850	CastExpression	( IApplyCaseFoldArg * ) arg		768828	1					
ANR	768851	CastTarget	IApplyCaseFoldArg *		768828	0					
ANR	768852	Identifier	arg		768828	1					
ANR	768853	ExpressionStatement	env = iarg -> env	4966:2:111083:111098	768828	5	True				
ANR	768854	AssignmentExpression	env = iarg -> env		768828	0		=			
ANR	768855	Identifier	env		768828	0					
ANR	768856	PtrMemberAccess	iarg -> env		768828	1					
ANR	768857	Identifier	iarg		768828	0					
ANR	768858	Identifier	env		768828	1					
ANR	768859	ExpressionStatement	cc = iarg -> cc	4967:2:111102:111116	768828	6	True				
ANR	768860	AssignmentExpression	cc = iarg -> cc		768828	0		=			
ANR	768861	Identifier	cc		768828	0					
ANR	768862	PtrMemberAccess	iarg -> cc		768828	1					
ANR	768863	Identifier	iarg		768828	0					
ANR	768864	Identifier	cc		768828	1					
ANR	768865	ExpressionStatement	bs = cc -> bs	4968:2:111120:111131	768828	7	True				
ANR	768866	AssignmentExpression	bs = cc -> bs		768828	0		=			
ANR	768867	Identifier	bs		768828	0					
ANR	768868	PtrMemberAccess	cc -> bs		768828	1					
ANR	768869	Identifier	cc		768828	0					
ANR	768870	Identifier	bs		768828	1					
ANR	768871	IfStatement	if ( to_len == 1 )		768828	8					
ANR	768872	Condition	to_len == 1	4970:6:111140:111150	768828	0	True				
ANR	768873	EqualityExpression	to_len == 1		768828	0		==			
ANR	768874	Identifier	to_len		768828	0					
ANR	768875	PrimaryExpression	1		768828	1					
ANR	768876	CompoundStatement		13:4:192:242	768828	1					
ANR	768877	IdentifierDeclStatement	"int is_in = onig_is_code_in_cc ( env -> enc , from , cc ) ;"	4971:4:111159:111209	768828	0	True				
ANR	768878	IdentifierDecl	"is_in = onig_is_code_in_cc ( env -> enc , from , cc )"		768828	0					
ANR	768879	IdentifierDeclType	int		768828	0					
ANR	768880	Identifier	is_in		768828	1					
ANR	768881	AssignmentExpression	"is_in = onig_is_code_in_cc ( env -> enc , from , cc )"		768828	2		=			
ANR	768882	Identifier	is_in		768828	0					
ANR	768883	CallExpression	"onig_is_code_in_cc ( env -> enc , from , cc )"		768828	1					
ANR	768884	Callee	onig_is_code_in_cc		768828	0					
ANR	768885	Identifier	onig_is_code_in_cc		768828	0					
ANR	768886	ArgumentList	env -> enc		768828	1					
ANR	768887	Argument	env -> enc		768828	0					
ANR	768888	PtrMemberAccess	env -> enc		768828	0					
ANR	768889	Identifier	env		768828	0					
ANR	768890	Identifier	enc		768828	1					
ANR	768891	Argument	from		768828	1					
ANR	768892	Identifier	from		768828	0					
ANR	768893	Argument	cc		768828	2					
ANR	768894	Identifier	cc		768828	0					
ANR	768895	IfStatement	if ( ( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) ) )		768828	1					
ANR	768896	Condition	( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) )	4973:8:111270:111344	768828	0	True				
ANR	768897	OrExpression	( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) )		768828	0		||			
ANR	768898	AndExpression	is_in != 0 && ! IS_NCCLASS_NOT ( cc )		768828	0		&&			
ANR	768899	EqualityExpression	is_in != 0		768828	0		!=			
ANR	768900	Identifier	is_in		768828	0					
ANR	768901	PrimaryExpression	0		768828	1					
ANR	768902	UnaryOperationExpression	! IS_NCCLASS_NOT ( cc )		768828	1					
ANR	768903	UnaryOperator	!		768828	0					
ANR	768904	CallExpression	IS_NCCLASS_NOT ( cc )		768828	1					
ANR	768905	Callee	IS_NCCLASS_NOT		768828	0					
ANR	768906	Identifier	IS_NCCLASS_NOT		768828	0					
ANR	768907	ArgumentList	cc		768828	1					
ANR	768908	Argument	cc		768828	0					
ANR	768909	Identifier	cc		768828	0					
ANR	768910	AndExpression	is_in == 0 && IS_NCCLASS_NOT ( cc )		768828	1		&&			
ANR	768911	EqualityExpression	is_in == 0		768828	0		==			
ANR	768912	Identifier	is_in		768828	0					
ANR	768913	PrimaryExpression	0		768828	1					
ANR	768914	CallExpression	IS_NCCLASS_NOT ( cc )		768828	1					
ANR	768915	Callee	IS_NCCLASS_NOT		768828	0					
ANR	768916	Identifier	IS_NCCLASS_NOT		768828	0					
ANR	768917	ArgumentList	cc		768828	1					
ANR	768918	Argument	cc		768828	0					
ANR	768919	Identifier	cc		768828	0					
ANR	768920	CompoundStatement		16:38:380:380	768828	1					
ANR	768921	IfStatement	if ( ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE )		768828	0					
ANR	768922	Condition	ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE	4975:10:111359:111417	768828	0	True				
ANR	768923	OrExpression	ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE		768828	0		||			
ANR	768924	RelationalExpression	ONIGENC_MBC_MINLEN ( env -> enc ) > 1		768828	0		>			
ANR	768925	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		768828	0					
ANR	768926	Callee	ONIGENC_MBC_MINLEN		768828	0					
ANR	768927	Identifier	ONIGENC_MBC_MINLEN		768828	0					
ANR	768928	ArgumentList	env -> enc		768828	1					
ANR	768929	Argument	env -> enc		768828	0					
ANR	768930	PtrMemberAccess	env -> enc		768828	0					
ANR	768931	Identifier	env		768828	0					
ANR	768932	Identifier	enc		768828	1					
ANR	768933	PrimaryExpression	1		768828	1					
ANR	768934	RelationalExpression	* to >= SINGLE_BYTE_SIZE		768828	1		>=			
ANR	768935	UnaryOperationExpression	* to		768828	0					
ANR	768936	UnaryOperator	*		768828	0					
ANR	768937	Identifier	to		768828	1					
ANR	768938	Identifier	SINGLE_BYTE_SIZE		768828	1					
ANR	768939	CompoundStatement		17:71:453:453	768828	1					
ANR	768940	ExpressionStatement	"add_code_range ( & ( cc -> mbuf ) , env , * to , * to )"	4976:1:111423:111465	768828	0	True				
ANR	768941	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * to , * to )"		768828	0					
ANR	768942	Callee	add_code_range		768828	0					
ANR	768943	Identifier	add_code_range		768828	0					
ANR	768944	ArgumentList	& ( cc -> mbuf )		768828	1					
ANR	768945	Argument	& ( cc -> mbuf )		768828	0					
ANR	768946	UnaryOperationExpression	& ( cc -> mbuf )		768828	0					
ANR	768947	UnaryOperator	&		768828	0					
ANR	768948	PtrMemberAccess	cc -> mbuf		768828	1					
ANR	768949	Identifier	cc		768828	0					
ANR	768950	Identifier	mbuf		768828	1					
ANR	768951	Argument	env		768828	1					
ANR	768952	Identifier	env		768828	0					
ANR	768953	Argument	* to		768828	2					
ANR	768954	UnaryOperationExpression	* to		768828	0					
ANR	768955	UnaryOperator	*		768828	0					
ANR	768956	Identifier	to		768828	1					
ANR	768957	Argument	* to		768828	3					
ANR	768958	UnaryOperationExpression	* to		768828	0					
ANR	768959	UnaryOperator	*		768828	0					
ANR	768960	Identifier	to		768828	1					
ANR	768961	ElseStatement	else		768828	0					
ANR	768962	CompoundStatement		20:11:519:519	768828	0					
ANR	768963	ExpressionStatement	"BITSET_SET_BIT ( bs , * to )"	4979:1:111489:111512	768828	0	True				
ANR	768964	CallExpression	"BITSET_SET_BIT ( bs , * to )"		768828	0					
ANR	768965	Callee	BITSET_SET_BIT		768828	0					
ANR	768966	Identifier	BITSET_SET_BIT		768828	0					
ANR	768967	ArgumentList	bs		768828	1					
ANR	768968	Argument	bs		768828	0					
ANR	768969	Identifier	bs		768828	0					
ANR	768970	Argument	* to		768828	1					
ANR	768971	UnaryOperationExpression	* to		768828	0					
ANR	768972	UnaryOperator	*		768828	0					
ANR	768973	Identifier	to		768828	1					
ANR	768974	ElseStatement	else		768828	0					
ANR	768975	CompoundStatement		43:4:1034:1057	768828	0					
ANR	768976	IdentifierDeclStatement	"int r , i , len ;"	4999:4:111939:111952	768828	0	True				
ANR	768977	IdentifierDecl	r		768828	0					
ANR	768978	IdentifierDeclType	int		768828	0					
ANR	768979	Identifier	r		768828	1					
ANR	768980	IdentifierDecl	i		768828	1					
ANR	768981	IdentifierDeclType	int		768828	0					
ANR	768982	Identifier	i		768828	1					
ANR	768983	IdentifierDecl	len		768828	2					
ANR	768984	IdentifierDeclType	int		768828	0					
ANR	768985	Identifier	len		768828	1					
ANR	768986	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	5000:4:111958:111995	768828	1	True				
ANR	768987	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		768828	0					
ANR	768988	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		768828	0					
ANR	768989	Identifier	buf		768828	1					
ANR	768990	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		768828	2					
ANR	768991	IdentifierDeclStatement	Node * snode = NULL_NODE ;	5001:4:112001:112024	768828	2	True				
ANR	768992	IdentifierDecl	* snode = NULL_NODE		768828	0					
ANR	768993	IdentifierDeclType	Node *		768828	0					
ANR	768994	Identifier	snode		768828	1					
ANR	768995	AssignmentExpression	* snode = NULL_NODE		768828	2		=			
ANR	768996	Identifier	NULL_NODE		768828	0					
ANR	768997	Identifier	NULL_NODE		768828	1					
ANR	768998	Statement	if	5003:4:112031:112032	768828	3	True				
ANR	768999	Statement	(	5003:7:112034:112034	768828	4	True				
ANR	769000	Statement	onig_is_code_in_cc	5003:8:112035:112052	768828	5	True				
ANR	769001	Statement	(	5003:26:112053:112053	768828	6	True				
ANR	769002	Statement	env	5003:27:112054:112056	768828	7	True				
ANR	769003	Statement	->	5003:30:112057:112058	768828	8	True				
ANR	769004	Statement	enc	5003:32:112059:112061	768828	9	True				
ANR	769005	Statement	","	5003:35:112062:112062	768828	10	True				
ANR	769006	Statement	from	5003:37:112064:112067	768828	11	True				
ANR	769007	Statement	","	5003:41:112068:112068	768828	12	True				
ANR	769008	Statement	cc	5003:43:112070:112071	768828	13	True				
ANR	769009	Statement	)	5003:45:112072:112072	768828	14	True				
ANR	769010	Statement	&&	5005:1:112126:112127	768828	15	True				
ANR	769011	Statement	!	5005:4:112129:112129	768828	16	True				
ANR	769012	Statement	IS_NCCLASS_NOT	5005:5:112130:112143	768828	17	True				
ANR	769013	Statement	(	5005:19:112144:112144	768828	18	True				
ANR	769014	Statement	cc	5005:20:112145:112146	768828	19	True				
ANR	769015	Statement	)	5005:22:112147:112147	768828	20	True				
ANR	769016	Statement	)	5007:1:112157:112157	768828	21	True				
ANR	769017	CompoundStatement		49:3:1192:1192	768828	22					
ANR	769018	ForStatement	for ( i = 0 ; i < to_len ; i ++ )		768828	0					
ANR	769019	ForInit	i = 0 ;	5008:11:112172:112177	768828	0	True				
ANR	769020	AssignmentExpression	i = 0		768828	0		=			
ANR	769021	Identifier	i		768828	0					
ANR	769022	PrimaryExpression	0		768828	1					
ANR	769023	Condition	i < to_len	5008:18:112179:112188	768828	1	True				
ANR	769024	RelationalExpression	i < to_len		768828	0		<			
ANR	769025	Identifier	i		768828	0					
ANR	769026	Identifier	to_len		768828	1					
ANR	769027	PostIncDecOperationExpression	i ++	5008:30:112191:112193	768828	2	True				
ANR	769028	Identifier	i		768828	0					
ANR	769029	IncDec	++		768828	1					
ANR	769030	CompoundStatement		50:35:1229:1229	768828	3					
ANR	769031	ExpressionStatement	"len = ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"	5009:1:112199:112246	768828	0	True				
ANR	769032	AssignmentExpression	"len = ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"		768828	0		=			
ANR	769033	Identifier	len		768828	0					
ANR	769034	CallExpression	"ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"		768828	1					
ANR	769035	Callee	ONIGENC_CODE_TO_MBC		768828	0					
ANR	769036	Identifier	ONIGENC_CODE_TO_MBC		768828	0					
ANR	769037	ArgumentList	env -> enc		768828	1					
ANR	769038	Argument	env -> enc		768828	0					
ANR	769039	PtrMemberAccess	env -> enc		768828	0					
ANR	769040	Identifier	env		768828	0					
ANR	769041	Identifier	enc		768828	1					
ANR	769042	Argument	to [ i ]		768828	1					
ANR	769043	ArrayIndexing	to [ i ]		768828	0					
ANR	769044	Identifier	to		768828	0					
ANR	769045	Identifier	i		768828	1					
ANR	769046	Argument	buf		768828	2					
ANR	769047	Identifier	buf		768828	0					
ANR	769048	IfStatement	if ( i == 0 )		768828	1					
ANR	769049	Condition	i == 0	5010:5:112253:112258	768828	0	True				
ANR	769050	EqualityExpression	i == 0		768828	0		==			
ANR	769051	Identifier	i		768828	0					
ANR	769052	PrimaryExpression	0		768828	1					
ANR	769053	CompoundStatement		52:13:1294:1294	768828	1					
ANR	769054	ExpressionStatement	"snode = onig_node_new_str ( buf , buf + len )"	5011:3:112266:112307	768828	0	True				
ANR	769055	AssignmentExpression	"snode = onig_node_new_str ( buf , buf + len )"		768828	0		=			
ANR	769056	Identifier	snode		768828	0					
ANR	769057	CallExpression	"onig_node_new_str ( buf , buf + len )"		768828	1					
ANR	769058	Callee	onig_node_new_str		768828	0					
ANR	769059	Identifier	onig_node_new_str		768828	0					
ANR	769060	ArgumentList	buf		768828	1					
ANR	769061	Argument	buf		768828	0					
ANR	769062	Identifier	buf		768828	0					
ANR	769063	Argument	buf + len		768828	1					
ANR	769064	AdditiveExpression	buf + len		768828	0		+			
ANR	769065	Identifier	buf		768828	0					
ANR	769066	Identifier	len		768828	1					
ANR	769067	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( snode )	5012:3:112312:112343	768828	1	True				
ANR	769068	CallExpression	CHECK_NULL_RETURN_MEMERR ( snode )		768828	0					
ANR	769069	Callee	CHECK_NULL_RETURN_MEMERR		768828	0					
ANR	769070	Identifier	CHECK_NULL_RETURN_MEMERR		768828	0					
ANR	769071	ArgumentList	snode		768828	1					
ANR	769072	Argument	snode		768828	0					
ANR	769073	Identifier	snode		768828	0					
ANR	769074	ExpressionStatement	NSTRING_SET_AMBIG ( snode )	5016:3:112442:112466	768828	2	True				
ANR	769075	CallExpression	NSTRING_SET_AMBIG ( snode )		768828	0					
ANR	769076	Callee	NSTRING_SET_AMBIG		768828	0					
ANR	769077	Identifier	NSTRING_SET_AMBIG		768828	0					
ANR	769078	ArgumentList	snode		768828	1					
ANR	769079	Argument	snode		768828	0					
ANR	769080	Identifier	snode		768828	0					
ANR	769081	ElseStatement	else		768828	0					
ANR	769082	CompoundStatement		60:6:1510:1510	768828	0					
ANR	769083	ExpressionStatement	"r = onig_node_str_cat ( snode , buf , buf + len )"	5019:3:112482:112526	768828	0	True				
ANR	769084	AssignmentExpression	"r = onig_node_str_cat ( snode , buf , buf + len )"		768828	0		=			
ANR	769085	Identifier	r		768828	0					
ANR	769086	CallExpression	"onig_node_str_cat ( snode , buf , buf + len )"		768828	1					
ANR	769087	Callee	onig_node_str_cat		768828	0					
ANR	769088	Identifier	onig_node_str_cat		768828	0					
ANR	769089	ArgumentList	snode		768828	1					
ANR	769090	Argument	snode		768828	0					
ANR	769091	Identifier	snode		768828	0					
ANR	769092	Argument	buf		768828	1					
ANR	769093	Identifier	buf		768828	0					
ANR	769094	Argument	buf + len		768828	2					
ANR	769095	AdditiveExpression	buf + len		768828	0		+			
ANR	769096	Identifier	buf		768828	0					
ANR	769097	Identifier	len		768828	1					
ANR	769098	IfStatement	if ( r < 0 )		768828	1					
ANR	769099	Condition	r < 0	5020:7:112535:112539	768828	0	True				
ANR	769100	RelationalExpression	r < 0		768828	0		<			
ANR	769101	Identifier	r		768828	0					
ANR	769102	PrimaryExpression	0		768828	1					
ANR	769103	CompoundStatement		62:14:1575:1575	768828	1					
ANR	769104	ExpressionStatement	onig_node_free ( snode )	5021:5:112549:112570	768828	0	True				
ANR	769105	CallExpression	onig_node_free ( snode )		768828	0					
ANR	769106	Callee	onig_node_free		768828	0					
ANR	769107	Identifier	onig_node_free		768828	0					
ANR	769108	ArgumentList	snode		768828	1					
ANR	769109	Argument	snode		768828	0					
ANR	769110	Identifier	snode		768828	0					
ANR	769111	ReturnStatement	return r ;	5022:5:112577:112585	768828	1	True				
ANR	769112	Identifier	r		768828	0					
ANR	769113	ExpressionStatement	"* ( iarg -> ptail ) = onig_node_new_alt ( snode , NULL_NODE )"	5027:6:112610:112662	768828	1	True				
ANR	769114	AssignmentExpression	"* ( iarg -> ptail ) = onig_node_new_alt ( snode , NULL_NODE )"		768828	0		=			
ANR	769115	UnaryOperationExpression	* ( iarg -> ptail )		768828	0					
ANR	769116	UnaryOperator	*		768828	0					
ANR	769117	PtrMemberAccess	iarg -> ptail		768828	1					
ANR	769118	Identifier	iarg		768828	0					
ANR	769119	Identifier	ptail		768828	1					
ANR	769120	CallExpression	"onig_node_new_alt ( snode , NULL_NODE )"		768828	1					
ANR	769121	Callee	onig_node_new_alt		768828	0					
ANR	769122	Identifier	onig_node_new_alt		768828	0					
ANR	769123	ArgumentList	snode		768828	1					
ANR	769124	Argument	snode		768828	0					
ANR	769125	Identifier	snode		768828	0					
ANR	769126	Argument	NULL_NODE		768828	1					
ANR	769127	Identifier	NULL_NODE		768828	0					
ANR	769128	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * ( iarg -> ptail ) )	5028:6:112670:112710	768828	2	True				
ANR	769129	CallExpression	CHECK_NULL_RETURN_MEMERR ( * ( iarg -> ptail ) )		768828	0					
ANR	769130	Callee	CHECK_NULL_RETURN_MEMERR		768828	0					
ANR	769131	Identifier	CHECK_NULL_RETURN_MEMERR		768828	0					
ANR	769132	ArgumentList	* ( iarg -> ptail )		768828	1					
ANR	769133	Argument	* ( iarg -> ptail )		768828	0					
ANR	769134	UnaryOperationExpression	* ( iarg -> ptail )		768828	0					
ANR	769135	UnaryOperator	*		768828	0					
ANR	769136	PtrMemberAccess	iarg -> ptail		768828	1					
ANR	769137	Identifier	iarg		768828	0					
ANR	769138	Identifier	ptail		768828	1					
ANR	769139	ExpressionStatement	iarg -> ptail = & ( NCDR ( ( * ( iarg -> ptail ) ) ) )	5029:6:112718:112757	768828	3	True				
ANR	769140	AssignmentExpression	iarg -> ptail = & ( NCDR ( ( * ( iarg -> ptail ) ) ) )		768828	0		=			
ANR	769141	PtrMemberAccess	iarg -> ptail		768828	0					
ANR	769142	Identifier	iarg		768828	0					
ANR	769143	Identifier	ptail		768828	1					
ANR	769144	UnaryOperationExpression	& ( NCDR ( ( * ( iarg -> ptail ) ) ) )		768828	1					
ANR	769145	UnaryOperator	&		768828	0					
ANR	769146	CallExpression	NCDR ( ( * ( iarg -> ptail ) ) )		768828	1					
ANR	769147	Callee	NCDR		768828	0					
ANR	769148	Identifier	NCDR		768828	0					
ANR	769149	ArgumentList	* ( iarg -> ptail )		768828	1					
ANR	769150	Argument	* ( iarg -> ptail )		768828	0					
ANR	769151	UnaryOperationExpression	* ( iarg -> ptail )		768828	0					
ANR	769152	UnaryOperator	*		768828	0					
ANR	769153	PtrMemberAccess	iarg -> ptail		768828	1					
ANR	769154	Identifier	iarg		768828	0					
ANR	769155	Identifier	ptail		768828	1					
ANR	769156	ReturnStatement	return 0 ;	5033:2:112772:112780	768828	9	True				
ANR	769157	PrimaryExpression	0		768828	0					
ANR	769158	ReturnType	static int		768828	1					
ANR	769159	Identifier	i_apply_case_fold		768828	2					
ANR	769160	ParameterList	"OnigCodePoint from , OnigCodePoint to [ ] , int to_len , void * arg"		768828	3					
ANR	769161	Parameter	OnigCodePoint from	4957:18:110899:110916	768828	0	True				
ANR	769162	ParameterType	OnigCodePoint		768828	0					
ANR	769163	Identifier	from		768828	1					
ANR	769164	Parameter	OnigCodePoint to [ ]	4957:38:110919:110936	768828	1	True				
ANR	769165	ParameterType	OnigCodePoint [ ]		768828	0					
ANR	769166	Identifier	to		768828	1					
ANR	769167	Parameter	int to_len	4958:4:110943:110952	768828	2	True				
ANR	769168	ParameterType	int		768828	0					
ANR	769169	Identifier	to_len		768828	1					
ANR	769170	Parameter	void * arg	4958:16:110955:110963	768828	3	True				
ANR	769171	ParameterType	void *		768828	0					
ANR	769172	Identifier	arg		768828	1					
ANR	769173	CFGEntryNode	ENTRY		768828		True				
ANR	769174	CFGExitNode	EXIT		768828		True				
ANR	769175	Symbol	& NCDR		768828						
ANR	769176	Symbol	* iarg -> ptail		768828						
ANR	769177	Symbol	* cc		768828						
ANR	769178	Symbol	IS_NCCLASS_NOT		768828						
ANR	769179	Symbol	ONIGENC_MBC_MINLEN		768828						
ANR	769180	Symbol	env -> enc		768828						
ANR	769181	Symbol	iarg -> env		768828						
ANR	769182	Symbol	bs		768828						
ANR	769183	Symbol	len		768828						
ANR	769184	Symbol	iarg -> ptail		768828						
ANR	769185	Symbol	arg		768828						
ANR	769186	Symbol	from		768828						
ANR	769187	Symbol	* iarg		768828						
ANR	769188	Symbol	& cc -> mbuf		768828						
ANR	769189	Symbol	onig_is_code_in_cc		768828						
ANR	769190	Symbol	cc		768828						
ANR	769191	Symbol	SINGLE_BYTE_SIZE		768828						
ANR	769192	Symbol	* * iarg		768828						
ANR	769193	Symbol	* to		768828						
ANR	769194	Symbol	onig_node_new_alt		768828						
ANR	769195	Symbol	* ( iarg -> ptail )		768828						
ANR	769196	Symbol	is_in		768828						
ANR	769197	Symbol	* env		768828						
ANR	769198	Symbol	i		768828						
ANR	769199	Symbol	to_len		768828						
ANR	769200	Symbol	env		768828						
ANR	769201	Symbol	cc -> bs		768828						
ANR	769202	Symbol	r		768828						
ANR	769203	Symbol	buf		768828						
ANR	769204	Symbol	* i		768828						
ANR	769205	Symbol	ONIGENC_CODE_TO_MBC		768828						
ANR	769206	Symbol	onig_node_str_cat		768828						
ANR	769207	Symbol	onig_node_new_str		768828						
ANR	769208	Symbol	to		768828						
ANR	769209	Symbol	iarg -> cc		768828						
ANR	769210	Symbol	iarg		768828						
ANR	769211	Symbol	NULL_NODE		768828						
ANR	769212	Symbol	snode		768828						
ANR	769213	Function	parse_exp	5036:0:112785:122115							
ANR	769214	FunctionDef	"parse_exp (Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		769213	0					
ANR	769215	CompoundStatement		5039:0:112885:122115	769213	0					
ANR	769216	IdentifierDeclStatement	"int r , len , group = 0 ;"	5040:2:112889:112910	769213	0	True				
ANR	769217	IdentifierDecl	r		769213	0					
ANR	769218	IdentifierDeclType	int		769213	0					
ANR	769219	Identifier	r		769213	1					
ANR	769220	IdentifierDecl	len		769213	1					
ANR	769221	IdentifierDeclType	int		769213	0					
ANR	769222	Identifier	len		769213	1					
ANR	769223	IdentifierDecl	group = 0		769213	2					
ANR	769224	IdentifierDeclType	int		769213	0					
ANR	769225	Identifier	group		769213	1					
ANR	769226	AssignmentExpression	group = 0		769213	2		=			
ANR	769227	Identifier	group		769213	0					
ANR	769228	PrimaryExpression	0		769213	1					
ANR	769229	IdentifierDeclStatement	Node * qn ;	5041:2:112914:112922	769213	1	True				
ANR	769230	IdentifierDecl	* qn		769213	0					
ANR	769231	IdentifierDeclType	Node *		769213	0					
ANR	769232	Identifier	qn		769213	1					
ANR	769233	IdentifierDeclStatement	Node * * targetp ;	5042:2:112926:112940	769213	2	True				
ANR	769234	IdentifierDecl	* * targetp		769213	0					
ANR	769235	IdentifierDeclType	Node * *		769213	0					
ANR	769236	Identifier	targetp		769213	1					
ANR	769237	ExpressionStatement	* np = NULL	5044:2:112945:112955	769213	3	True				
ANR	769238	AssignmentExpression	* np = NULL		769213	0		=			
ANR	769239	UnaryOperationExpression	* np		769213	0					
ANR	769240	UnaryOperator	*		769213	0					
ANR	769241	Identifier	np		769213	1					
ANR	769242	Identifier	NULL		769213	1					
ANR	769243	IfStatement	if ( tok -> type == ( enum TokenSyms ) term )		769213	4					
ANR	769244	Condition	tok -> type == ( enum TokenSyms ) term	5045:6:112963:112996	769213	0	True				
ANR	769245	EqualityExpression	tok -> type == ( enum TokenSyms ) term		769213	0		==			
ANR	769246	PtrMemberAccess	tok -> type		769213	0					
ANR	769247	Identifier	tok		769213	0					
ANR	769248	Identifier	type		769213	1					
ANR	769249	CastExpression	( enum TokenSyms ) term		769213	1					
ANR	769250	CastTarget	enum TokenSyms		769213	0					
ANR	769251	Identifier	term		769213	1					
ANR	769252	GotoStatement	goto end_of_token ;	5046:4:113003:113020	769213	1	True				
ANR	769253	Identifier	end_of_token		769213	0					
ANR	769254	SwitchStatement	switch ( tok -> type )		769213	5					
ANR	769255	Condition	tok -> type	5048:10:113033:113041	769213	0	True				
ANR	769256	PtrMemberAccess	tok -> type		769213	0					
ANR	769257	Identifier	tok		769213	0					
ANR	769258	Identifier	type		769213	1					
ANR	769259	CompoundStatement		10:21:158:158	769213	1					
ANR	769260	Label	case TK_ALT :	5049:2:113048:113059	769213	0	True				
ANR	769261	Identifier	TK_ALT		769213	0					
ANR	769262	Label	case TK_EOT :	5050:2:113063:113074	769213	1	True				
ANR	769263	Identifier	TK_EOT		769213	0					
ANR	769264	Label	end_of_token :	5051:2:113078:113090	769213	2	True				
ANR	769265	Identifier	end_of_token		769213	0					
ANR	769266	ExpressionStatement	* np = node_new_empty ( )	5052:2:113094:113116	769213	3	True				
ANR	769267	AssignmentExpression	* np = node_new_empty ( )		769213	0		=			
ANR	769268	UnaryOperationExpression	* np		769213	0					
ANR	769269	UnaryOperator	*		769213	0					
ANR	769270	Identifier	np		769213	1					
ANR	769271	CallExpression	node_new_empty ( )		769213	1					
ANR	769272	Callee	node_new_empty		769213	0					
ANR	769273	Identifier	node_new_empty		769213	0					
ANR	769274	ArgumentList			769213	1					
ANR	769275	ReturnStatement	return tok -> type ;	5053:2:113120:113136	769213	4	True				
ANR	769276	PtrMemberAccess	tok -> type		769213	0					
ANR	769277	Identifier	tok		769213	0					
ANR	769278	Identifier	type		769213	1					
ANR	769279	BreakStatement	break ;	5054:2:113140:113145	769213	5	True				
ANR	769280	Label	case TK_SUBEXP_OPEN :	5056:2:113150:113169	769213	6	True				
ANR	769281	Identifier	TK_SUBEXP_OPEN		769213	0					
ANR	769282	ExpressionStatement	"r = parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"	5057:4:113175:113233	769213	7	True				
ANR	769283	AssignmentExpression	"r = parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"		769213	0		=			
ANR	769284	Identifier	r		769213	0					
ANR	769285	CallExpression	"parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"		769213	1					
ANR	769286	Callee	parse_enclose		769213	0					
ANR	769287	Identifier	parse_enclose		769213	0					
ANR	769288	ArgumentList	np		769213	1					
ANR	769289	Argument	np		769213	0					
ANR	769290	Identifier	np		769213	0					
ANR	769291	Argument	tok		769213	1					
ANR	769292	Identifier	tok		769213	0					
ANR	769293	Argument	TK_SUBEXP_CLOSE		769213	2					
ANR	769294	Identifier	TK_SUBEXP_CLOSE		769213	0					
ANR	769295	Argument	src		769213	3					
ANR	769296	Identifier	src		769213	0					
ANR	769297	Argument	end		769213	4					
ANR	769298	Identifier	end		769213	0					
ANR	769299	Argument	env		769213	5					
ANR	769300	Identifier	env		769213	0					
ANR	769301	IfStatement	if ( r < 0 )		769213	8					
ANR	769302	Condition	r < 0	5058:8:113243:113247	769213	0	True				
ANR	769303	RelationalExpression	r < 0		769213	0		<			
ANR	769304	Identifier	r		769213	0					
ANR	769305	PrimaryExpression	0		769213	1					
ANR	769306	ReturnStatement	return r ;	5058:15:113250:113258	769213	1	True				
ANR	769307	Identifier	r		769213	0					
ANR	769308	IfStatement	if ( r == 1 )		769213	9					
ANR	769309	Condition	r == 1	5059:8:113268:113273	769213	0	True				
ANR	769310	EqualityExpression	r == 1		769213	0		==			
ANR	769311	Identifier	r		769213	0					
ANR	769312	PrimaryExpression	1		769213	1					
ANR	769313	ExpressionStatement	group = 1	5059:16:113276:113285	769213	1	True				
ANR	769314	AssignmentExpression	group = 1		769213	0		=			
ANR	769315	Identifier	group		769213	0					
ANR	769316	PrimaryExpression	1		769213	1					
ANR	769317	ElseStatement	else		769213	0					
ANR	769318	IfStatement	if ( r == 2 )		769213	0					
ANR	769319	Condition	r == 2	5060:13:113300:113305	769213	0	True				
ANR	769320	EqualityExpression	r == 2		769213	0		==			
ANR	769321	Identifier	r		769213	0					
ANR	769322	PrimaryExpression	2		769213	1					
ANR	769323	CompoundStatement		24:6:468:501	769213	1					
ANR	769324	IdentifierDeclStatement	Node * target ;	5061:6:113334:113346	769213	0	True				
ANR	769325	IdentifierDecl	* target		769213	0					
ANR	769326	IdentifierDeclType	Node *		769213	0					
ANR	769327	Identifier	target		769213	1					
ANR	769328	IdentifierDeclStatement	OnigOptionType prev = env -> option ;	5062:6:113354:113387	769213	1	True				
ANR	769329	IdentifierDecl	prev = env -> option		769213	0					
ANR	769330	IdentifierDeclType	OnigOptionType		769213	0					
ANR	769331	Identifier	prev		769213	1					
ANR	769332	AssignmentExpression	prev = env -> option		769213	2		=			
ANR	769333	Identifier	prev		769213	0					
ANR	769334	PtrMemberAccess	env -> option		769213	1					
ANR	769335	Identifier	env		769213	0					
ANR	769336	Identifier	option		769213	1					
ANR	769337	ExpressionStatement	env -> option = NENCLOSE ( * np ) -> option	5064:6:113396:113431	769213	2	True				
ANR	769338	AssignmentExpression	env -> option = NENCLOSE ( * np ) -> option		769213	0		=			
ANR	769339	PtrMemberAccess	env -> option		769213	0					
ANR	769340	Identifier	env		769213	0					
ANR	769341	Identifier	option		769213	1					
ANR	769342	PtrMemberAccess	NENCLOSE ( * np ) -> option		769213	1					
ANR	769343	CallExpression	NENCLOSE ( * np )		769213	0					
ANR	769344	Callee	NENCLOSE		769213	0					
ANR	769345	Identifier	NENCLOSE		769213	0					
ANR	769346	ArgumentList	* np		769213	1					
ANR	769347	Argument	* np		769213	0					
ANR	769348	UnaryOperationExpression	* np		769213	0					
ANR	769349	UnaryOperator	*		769213	0					
ANR	769350	Identifier	np		769213	1					
ANR	769351	Identifier	option		769213	1					
ANR	769352	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5065:6:113439:113474	769213	3	True				
ANR	769353	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		769213	0		=			
ANR	769354	Identifier	r		769213	0					
ANR	769355	CallExpression	"fetch_token ( tok , src , end , env )"		769213	1					
ANR	769356	Callee	fetch_token		769213	0					
ANR	769357	Identifier	fetch_token		769213	0					
ANR	769358	ArgumentList	tok		769213	1					
ANR	769359	Argument	tok		769213	0					
ANR	769360	Identifier	tok		769213	0					
ANR	769361	Argument	src		769213	1					
ANR	769362	Identifier	src		769213	0					
ANR	769363	Argument	end		769213	2					
ANR	769364	Identifier	end		769213	0					
ANR	769365	Argument	env		769213	3					
ANR	769366	Identifier	env		769213	0					
ANR	769367	IfStatement	if ( r < 0 )		769213	4					
ANR	769368	Condition	r < 0	5066:10:113486:113490	769213	0	True				
ANR	769369	RelationalExpression	r < 0		769213	0		<			
ANR	769370	Identifier	r		769213	0					
ANR	769371	PrimaryExpression	0		769213	1					
ANR	769372	ReturnStatement	return r ;	5066:17:113493:113501	769213	1	True				
ANR	769373	Identifier	r		769213	0					
ANR	769374	ExpressionStatement	"r = parse_subexp ( & target , tok , term , src , end , env )"	5067:6:113509:113560	769213	5	True				
ANR	769375	AssignmentExpression	"r = parse_subexp ( & target , tok , term , src , end , env )"		769213	0		=			
ANR	769376	Identifier	r		769213	0					
ANR	769377	CallExpression	"parse_subexp ( & target , tok , term , src , end , env )"		769213	1					
ANR	769378	Callee	parse_subexp		769213	0					
ANR	769379	Identifier	parse_subexp		769213	0					
ANR	769380	ArgumentList	& target		769213	1					
ANR	769381	Argument	& target		769213	0					
ANR	769382	UnaryOperationExpression	& target		769213	0					
ANR	769383	UnaryOperator	&		769213	0					
ANR	769384	Identifier	target		769213	1					
ANR	769385	Argument	tok		769213	1					
ANR	769386	Identifier	tok		769213	0					
ANR	769387	Argument	term		769213	2					
ANR	769388	Identifier	term		769213	0					
ANR	769389	Argument	src		769213	3					
ANR	769390	Identifier	src		769213	0					
ANR	769391	Argument	end		769213	4					
ANR	769392	Identifier	end		769213	0					
ANR	769393	Argument	env		769213	5					
ANR	769394	Identifier	env		769213	0					
ANR	769395	ExpressionStatement	env -> option = prev	5068:6:113568:113586	769213	6	True				
ANR	769396	AssignmentExpression	env -> option = prev		769213	0		=			
ANR	769397	PtrMemberAccess	env -> option		769213	0					
ANR	769398	Identifier	env		769213	0					
ANR	769399	Identifier	option		769213	1					
ANR	769400	Identifier	prev		769213	1					
ANR	769401	IfStatement	if ( r < 0 )		769213	7					
ANR	769402	Condition	r < 0	5069:10:113598:113602	769213	0	True				
ANR	769403	RelationalExpression	r < 0		769213	0		<			
ANR	769404	Identifier	r		769213	0					
ANR	769405	PrimaryExpression	0		769213	1					
ANR	769406	ReturnStatement	return r ;	5069:17:113605:113613	769213	1	True				
ANR	769407	Identifier	r		769213	0					
ANR	769408	ExpressionStatement	NENCLOSE ( * np ) -> target = target	5070:6:113621:113651	769213	8	True				
ANR	769409	AssignmentExpression	NENCLOSE ( * np ) -> target = target		769213	0		=			
ANR	769410	PtrMemberAccess	NENCLOSE ( * np ) -> target		769213	0					
ANR	769411	CallExpression	NENCLOSE ( * np )		769213	0					
ANR	769412	Callee	NENCLOSE		769213	0					
ANR	769413	Identifier	NENCLOSE		769213	0					
ANR	769414	ArgumentList	* np		769213	1					
ANR	769415	Argument	* np		769213	0					
ANR	769416	UnaryOperationExpression	* np		769213	0					
ANR	769417	UnaryOperator	*		769213	0					
ANR	769418	Identifier	np		769213	1					
ANR	769419	Identifier	target		769213	1					
ANR	769420	Identifier	target		769213	1					
ANR	769421	ReturnStatement	return tok -> type ;	5071:6:113660:113676	769213	9	True				
ANR	769422	PtrMemberAccess	tok -> type		769213	0					
ANR	769423	Identifier	tok		769213	0					
ANR	769424	Identifier	type		769213	1					
ANR	769425	BreakStatement	break ;	5073:4:113688:113693	769213	10	True				
ANR	769426	Label	case TK_SUBEXP_CLOSE :	5075:2:113698:113718	769213	11	True				
ANR	769427	Identifier	TK_SUBEXP_CLOSE		769213	0					
ANR	769428	IfStatement	"if ( ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP ) )"		769213	12					
ANR	769429	Condition	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"	5076:8:113728:113793	769213	0	True				
ANR	769430	UnaryOperationExpression	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"		769213	0					
ANR	769431	UnaryOperator	!		769213	0					
ANR	769432	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"		769213	1					
ANR	769433	Callee	IS_SYNTAX_BV		769213	0					
ANR	769434	Identifier	IS_SYNTAX_BV		769213	0					
ANR	769435	ArgumentList	env -> syntax		769213	1					
ANR	769436	Argument	env -> syntax		769213	0					
ANR	769437	PtrMemberAccess	env -> syntax		769213	0					
ANR	769438	Identifier	env		769213	0					
ANR	769439	Identifier	syntax		769213	1					
ANR	769440	Argument	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		769213	1					
ANR	769441	Identifier	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		769213	0					
ANR	769442	ReturnStatement	return ONIGERR_UNMATCHED_CLOSE_PARENTHESIS ;	5077:6:113802:113844	769213	1	True				
ANR	769443	Identifier	ONIGERR_UNMATCHED_CLOSE_PARENTHESIS		769213	0					
ANR	769444	IfStatement	if ( tok -> escaped )		769213	13					
ANR	769445	Condition	tok -> escaped	5079:8:113855:113866	769213	0	True				
ANR	769446	PtrMemberAccess	tok -> escaped		769213	0					
ANR	769447	Identifier	tok		769213	0					
ANR	769448	Identifier	escaped		769213	1					
ANR	769449	GotoStatement	goto tk_raw_byte ;	5079:22:113869:113885	769213	1	True				
ANR	769450	Identifier	tk_raw_byte		769213	0					
ANR	769451	ElseStatement	else		769213	0					
ANR	769452	GotoStatement	goto tk_byte ;	5080:9:113896:113908	769213	0	True				
ANR	769453	Identifier	tk_byte		769213	0					
ANR	769454	BreakStatement	break ;	5081:4:113914:113919	769213	14	True				
ANR	769455	Label	case TK_STRING :	5083:2:113924:113938	769213	15	True				
ANR	769456	Identifier	TK_STRING		769213	0					
ANR	769457	Label	tk_byte :	5084:2:113942:113949	769213	16	True				
ANR	769458	Identifier	tk_byte		769213	0					
ANR	769459	CompoundStatement		47:4:1069:1069	769213	17					
ANR	769460	ExpressionStatement	"* np = node_new_str ( tok -> backp , * src )"	5086:6:113963:113999	769213	0	True				
ANR	769461	AssignmentExpression	"* np = node_new_str ( tok -> backp , * src )"		769213	0		=			
ANR	769462	UnaryOperationExpression	* np		769213	0					
ANR	769463	UnaryOperator	*		769213	0					
ANR	769464	Identifier	np		769213	1					
ANR	769465	CallExpression	"node_new_str ( tok -> backp , * src )"		769213	1					
ANR	769466	Callee	node_new_str		769213	0					
ANR	769467	Identifier	node_new_str		769213	0					
ANR	769468	ArgumentList	tok -> backp		769213	1					
ANR	769469	Argument	tok -> backp		769213	0					
ANR	769470	PtrMemberAccess	tok -> backp		769213	0					
ANR	769471	Identifier	tok		769213	0					
ANR	769472	Identifier	backp		769213	1					
ANR	769473	Argument	* src		769213	1					
ANR	769474	UnaryOperationExpression	* src		769213	0					
ANR	769475	UnaryOperator	*		769213	0					
ANR	769476	Identifier	src		769213	1					
ANR	769477	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5087:6:114007:114036	769213	1	True				
ANR	769478	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	769479	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769480	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769481	ArgumentList	* np		769213	1					
ANR	769482	Argument	* np		769213	0					
ANR	769483	UnaryOperationExpression	* np		769213	0					
ANR	769484	UnaryOperator	*		769213	0					
ANR	769485	Identifier	np		769213	1					
ANR	769486	WhileStatement	while ( 1 )		769213	2					
ANR	769487	Condition	1	5089:13:114052:114052	769213	0	True				
ANR	769488	PrimaryExpression	1		769213	0					
ANR	769489	CompoundStatement		51:16:1169:1169	769213	1					
ANR	769490	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5090:1:114058:114093	769213	0	True				
ANR	769491	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		769213	0		=			
ANR	769492	Identifier	r		769213	0					
ANR	769493	CallExpression	"fetch_token ( tok , src , end , env )"		769213	1					
ANR	769494	Callee	fetch_token		769213	0					
ANR	769495	Identifier	fetch_token		769213	0					
ANR	769496	ArgumentList	tok		769213	1					
ANR	769497	Argument	tok		769213	0					
ANR	769498	Identifier	tok		769213	0					
ANR	769499	Argument	src		769213	1					
ANR	769500	Identifier	src		769213	0					
ANR	769501	Argument	end		769213	2					
ANR	769502	Identifier	end		769213	0					
ANR	769503	Argument	env		769213	3					
ANR	769504	Identifier	env		769213	0					
ANR	769505	IfStatement	if ( r < 0 )		769213	1					
ANR	769506	Condition	r < 0	5091:5:114100:114104	769213	0	True				
ANR	769507	RelationalExpression	r < 0		769213	0		<			
ANR	769508	Identifier	r		769213	0					
ANR	769509	PrimaryExpression	0		769213	1					
ANR	769510	ReturnStatement	return r ;	5091:12:114107:114115	769213	1	True				
ANR	769511	Identifier	r		769213	0					
ANR	769512	IfStatement	if ( r != TK_STRING )		769213	2					
ANR	769513	Condition	r != TK_STRING	5092:5:114122:114135	769213	0	True				
ANR	769514	EqualityExpression	r != TK_STRING		769213	0		!=			
ANR	769515	Identifier	r		769213	0					
ANR	769516	Identifier	TK_STRING		769213	1					
ANR	769517	BreakStatement	break ;	5092:21:114138:114143	769213	1	True				
ANR	769518	ExpressionStatement	"r = onig_node_str_cat ( * np , tok -> backp , * src )"	5094:1:114147:114191	769213	3	True				
ANR	769519	AssignmentExpression	"r = onig_node_str_cat ( * np , tok -> backp , * src )"		769213	0		=			
ANR	769520	Identifier	r		769213	0					
ANR	769521	CallExpression	"onig_node_str_cat ( * np , tok -> backp , * src )"		769213	1					
ANR	769522	Callee	onig_node_str_cat		769213	0					
ANR	769523	Identifier	onig_node_str_cat		769213	0					
ANR	769524	ArgumentList	* np		769213	1					
ANR	769525	Argument	* np		769213	0					
ANR	769526	UnaryOperationExpression	* np		769213	0					
ANR	769527	UnaryOperator	*		769213	0					
ANR	769528	Identifier	np		769213	1					
ANR	769529	Argument	tok -> backp		769213	1					
ANR	769530	PtrMemberAccess	tok -> backp		769213	0					
ANR	769531	Identifier	tok		769213	0					
ANR	769532	Identifier	backp		769213	1					
ANR	769533	Argument	* src		769213	2					
ANR	769534	UnaryOperationExpression	* src		769213	0					
ANR	769535	UnaryOperator	*		769213	0					
ANR	769536	Identifier	src		769213	1					
ANR	769537	IfStatement	if ( r < 0 )		769213	4					
ANR	769538	Condition	r < 0	5095:5:114198:114202	769213	0	True				
ANR	769539	RelationalExpression	r < 0		769213	0		<			
ANR	769540	Identifier	r		769213	0					
ANR	769541	PrimaryExpression	0		769213	1					
ANR	769542	ReturnStatement	return r ;	5095:12:114205:114213	769213	1	True				
ANR	769543	Identifier	r		769213	0					
ANR	769544	Label	string_end :	5098:4:114228:114238	769213	3	True				
ANR	769545	Identifier	string_end		769213	0					
ANR	769546	ExpressionStatement	targetp = np	5099:6:114246:114258	769213	4	True				
ANR	769547	AssignmentExpression	targetp = np		769213	0		=			
ANR	769548	Identifier	targetp		769213	0					
ANR	769549	Identifier	np		769213	1					
ANR	769550	GotoStatement	goto repeat ;	5100:6:114266:114277	769213	5	True				
ANR	769551	Identifier	repeat		769213	0					
ANR	769552	BreakStatement	break ;	5102:4:114289:114294	769213	18	True				
ANR	769553	Label	case TK_RAW_BYTE :	5104:2:114299:114315	769213	19	True				
ANR	769554	Identifier	TK_RAW_BYTE		769213	0					
ANR	769555	Label	tk_raw_byte :	5105:2:114319:114330	769213	20	True				
ANR	769556	Identifier	tk_raw_byte		769213	0					
ANR	769557	CompoundStatement		68:4:1450:1450	769213	21					
ANR	769558	ExpressionStatement	* np = node_new_str_raw_char ( ( UChar ) tok -> u . c )	5107:6:114344:114389	769213	0	True				
ANR	769559	AssignmentExpression	* np = node_new_str_raw_char ( ( UChar ) tok -> u . c )		769213	0		=			
ANR	769560	UnaryOperationExpression	* np		769213	0					
ANR	769561	UnaryOperator	*		769213	0					
ANR	769562	Identifier	np		769213	1					
ANR	769563	CallExpression	node_new_str_raw_char ( ( UChar ) tok -> u . c )		769213	1					
ANR	769564	Callee	node_new_str_raw_char		769213	0					
ANR	769565	Identifier	node_new_str_raw_char		769213	0					
ANR	769566	ArgumentList	( UChar ) tok -> u . c		769213	1					
ANR	769567	Argument	( UChar ) tok -> u . c		769213	0					
ANR	769568	CastExpression	( UChar ) tok -> u . c		769213	0					
ANR	769569	CastTarget	UChar		769213	0					
ANR	769570	MemberAccess	tok -> u . c		769213	1					
ANR	769571	PtrMemberAccess	tok -> u		769213	0					
ANR	769572	Identifier	tok		769213	0					
ANR	769573	Identifier	u		769213	1					
ANR	769574	Identifier	c		769213	1					
ANR	769575	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5108:6:114397:114426	769213	1	True				
ANR	769576	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	769577	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769578	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769579	ArgumentList	* np		769213	1					
ANR	769580	Argument	* np		769213	0					
ANR	769581	UnaryOperationExpression	* np		769213	0					
ANR	769582	UnaryOperator	*		769213	0					
ANR	769583	Identifier	np		769213	1					
ANR	769584	ExpressionStatement	len = 1	5109:6:114434:114441	769213	2	True				
ANR	769585	AssignmentExpression	len = 1		769213	0		=			
ANR	769586	Identifier	len		769213	0					
ANR	769587	PrimaryExpression	1		769213	1					
ANR	769588	WhileStatement	while ( 1 )		769213	3					
ANR	769589	Condition	1	5110:13:114456:114456	769213	0	True				
ANR	769590	PrimaryExpression	1		769213	0					
ANR	769591	CompoundStatement		72:16:1573:1573	769213	1					
ANR	769592	IfStatement	if ( len >= ONIGENC_MBC_MINLEN ( env -> enc ) )		769213	0					
ANR	769593	Condition	len >= ONIGENC_MBC_MINLEN ( env -> enc )	5111:5:114466:114500	769213	0	True				
ANR	769594	RelationalExpression	len >= ONIGENC_MBC_MINLEN ( env -> enc )		769213	0		>=			
ANR	769595	Identifier	len		769213	0					
ANR	769596	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		769213	1					
ANR	769597	Callee	ONIGENC_MBC_MINLEN		769213	0					
ANR	769598	Identifier	ONIGENC_MBC_MINLEN		769213	0					
ANR	769599	ArgumentList	env -> enc		769213	1					
ANR	769600	Argument	env -> enc		769213	0					
ANR	769601	PtrMemberAccess	env -> enc		769213	0					
ANR	769602	Identifier	env		769213	0					
ANR	769603	Identifier	enc		769213	1					
ANR	769604	CompoundStatement		73:42:1617:1617	769213	1					
ANR	769605	IfStatement	"if ( len == enclen ( env -> enc , NSTR ( * np ) -> s ) )"		769213	0					
ANR	769606	Condition	"len == enclen ( env -> enc , NSTR ( * np ) -> s )"	5112:7:114512:114548	769213	0	True				
ANR	769607	EqualityExpression	"len == enclen ( env -> enc , NSTR ( * np ) -> s )"		769213	0		==			
ANR	769608	Identifier	len		769213	0					
ANR	769609	CallExpression	"enclen ( env -> enc , NSTR ( * np ) -> s )"		769213	1					
ANR	769610	Callee	enclen		769213	0					
ANR	769611	Identifier	enclen		769213	0					
ANR	769612	ArgumentList	env -> enc		769213	1					
ANR	769613	Argument	env -> enc		769213	0					
ANR	769614	PtrMemberAccess	env -> enc		769213	0					
ANR	769615	Identifier	env		769213	0					
ANR	769616	Identifier	enc		769213	1					
ANR	769617	Argument	NSTR ( * np ) -> s		769213	1					
ANR	769618	PtrMemberAccess	NSTR ( * np ) -> s		769213	0					
ANR	769619	CallExpression	NSTR ( * np )		769213	0					
ANR	769620	Callee	NSTR		769213	0					
ANR	769621	Identifier	NSTR		769213	0					
ANR	769622	ArgumentList	* np		769213	1					
ANR	769623	Argument	* np		769213	0					
ANR	769624	UnaryOperationExpression	* np		769213	0					
ANR	769625	UnaryOperator	*		769213	0					
ANR	769626	Identifier	np		769213	1					
ANR	769627	Identifier	s		769213	1					
ANR	769628	CompoundStatement		74:46:1665:1665	769213	1					
ANR	769629	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5113:5:114558:114593	769213	0	True				
ANR	769630	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		769213	0		=			
ANR	769631	Identifier	r		769213	0					
ANR	769632	CallExpression	"fetch_token ( tok , src , end , env )"		769213	1					
ANR	769633	Callee	fetch_token		769213	0					
ANR	769634	Identifier	fetch_token		769213	0					
ANR	769635	ArgumentList	tok		769213	1					
ANR	769636	Argument	tok		769213	0					
ANR	769637	Identifier	tok		769213	0					
ANR	769638	Argument	src		769213	1					
ANR	769639	Identifier	src		769213	0					
ANR	769640	Argument	end		769213	2					
ANR	769641	Identifier	end		769213	0					
ANR	769642	Argument	env		769213	3					
ANR	769643	Identifier	env		769213	0					
ANR	769644	ExpressionStatement	NSTRING_CLEAR_RAW ( * np )	5114:5:114600:114622	769213	1	True				
ANR	769645	CallExpression	NSTRING_CLEAR_RAW ( * np )		769213	0					
ANR	769646	Callee	NSTRING_CLEAR_RAW		769213	0					
ANR	769647	Identifier	NSTRING_CLEAR_RAW		769213	0					
ANR	769648	ArgumentList	* np		769213	1					
ANR	769649	Argument	* np		769213	0					
ANR	769650	UnaryOperationExpression	* np		769213	0					
ANR	769651	UnaryOperator	*		769213	0					
ANR	769652	Identifier	np		769213	1					
ANR	769653	GotoStatement	goto string_end ;	5115:5:114629:114644	769213	2	True				
ANR	769654	Identifier	string_end		769213	0					
ANR	769655	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5119:1:114656:114691	769213	1	True				
ANR	769656	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		769213	0		=			
ANR	769657	Identifier	r		769213	0					
ANR	769658	CallExpression	"fetch_token ( tok , src , end , env )"		769213	1					
ANR	769659	Callee	fetch_token		769213	0					
ANR	769660	Identifier	fetch_token		769213	0					
ANR	769661	ArgumentList	tok		769213	1					
ANR	769662	Argument	tok		769213	0					
ANR	769663	Identifier	tok		769213	0					
ANR	769664	Argument	src		769213	1					
ANR	769665	Identifier	src		769213	0					
ANR	769666	Argument	end		769213	2					
ANR	769667	Identifier	end		769213	0					
ANR	769668	Argument	env		769213	3					
ANR	769669	Identifier	env		769213	0					
ANR	769670	IfStatement	if ( r < 0 )		769213	2					
ANR	769671	Condition	r < 0	5120:5:114698:114702	769213	0	True				
ANR	769672	RelationalExpression	r < 0		769213	0		<			
ANR	769673	Identifier	r		769213	0					
ANR	769674	PrimaryExpression	0		769213	1					
ANR	769675	ReturnStatement	return r ;	5120:12:114705:114713	769213	1	True				
ANR	769676	Identifier	r		769213	0					
ANR	769677	IfStatement	if ( r != TK_RAW_BYTE )		769213	3					
ANR	769678	Condition	r != TK_RAW_BYTE	5121:5:114720:114735	769213	0	True				
ANR	769679	EqualityExpression	r != TK_RAW_BYTE		769213	0		!=			
ANR	769680	Identifier	r		769213	0					
ANR	769681	Identifier	TK_RAW_BYTE		769213	1					
ANR	769682	CompoundStatement		86:3:1957:1964	769213	1					
ANR	769683	IdentifierDeclStatement	int rem ;	5124:3:114843:114850	769213	0	True				
ANR	769684	IdentifierDecl	rem		769213	0					
ANR	769685	IdentifierDeclType	int		769213	0					
ANR	769686	Identifier	rem		769213	1					
ANR	769687	IfStatement	if ( len < ONIGENC_MBC_MINLEN ( env -> enc ) )		769213	1					
ANR	769688	Condition	len < ONIGENC_MBC_MINLEN ( env -> enc )	5125:7:114859:114892	769213	0	True				
ANR	769689	RelationalExpression	len < ONIGENC_MBC_MINLEN ( env -> enc )		769213	0		<			
ANR	769690	Identifier	len		769213	0					
ANR	769691	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		769213	1					
ANR	769692	Callee	ONIGENC_MBC_MINLEN		769213	0					
ANR	769693	Identifier	ONIGENC_MBC_MINLEN		769213	0					
ANR	769694	ArgumentList	env -> enc		769213	1					
ANR	769695	Argument	env -> enc		769213	0					
ANR	769696	PtrMemberAccess	env -> enc		769213	0					
ANR	769697	Identifier	env		769213	0					
ANR	769698	Identifier	enc		769213	1					
ANR	769699	CompoundStatement		87:43:2009:2009	769213	1					
ANR	769700	ExpressionStatement	rem = ONIGENC_MBC_MINLEN ( env -> enc ) - len	5126:5:114902:114942	769213	0	True				
ANR	769701	AssignmentExpression	rem = ONIGENC_MBC_MINLEN ( env -> enc ) - len		769213	0		=			
ANR	769702	Identifier	rem		769213	0					
ANR	769703	AdditiveExpression	ONIGENC_MBC_MINLEN ( env -> enc ) - len		769213	1		-			
ANR	769704	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		769213	0					
ANR	769705	Callee	ONIGENC_MBC_MINLEN		769213	0					
ANR	769706	Identifier	ONIGENC_MBC_MINLEN		769213	0					
ANR	769707	ArgumentList	env -> enc		769213	1					
ANR	769708	Argument	env -> enc		769213	0					
ANR	769709	PtrMemberAccess	env -> enc		769213	0					
ANR	769710	Identifier	env		769213	0					
ANR	769711	Identifier	enc		769213	1					
ANR	769712	Identifier	len		769213	1					
ANR	769713	ExpressionStatement	"( void ) node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"	5127:5:114949:115000	769213	1	True				
ANR	769714	CastExpression	"( void ) node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"		769213	0					
ANR	769715	CastTarget	void		769213	0					
ANR	769716	CallExpression	"node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"		769213	1					
ANR	769717	Callee	node_str_head_pad		769213	0					
ANR	769718	Identifier	node_str_head_pad		769213	0					
ANR	769719	ArgumentList	NSTR ( * np )		769213	1					
ANR	769720	Argument	NSTR ( * np )		769213	0					
ANR	769721	CallExpression	NSTR ( * np )		769213	0					
ANR	769722	Callee	NSTR		769213	0					
ANR	769723	Identifier	NSTR		769213	0					
ANR	769724	ArgumentList	* np		769213	1					
ANR	769725	Argument	* np		769213	0					
ANR	769726	UnaryOperationExpression	* np		769213	0					
ANR	769727	UnaryOperator	*		769213	0					
ANR	769728	Identifier	np		769213	1					
ANR	769729	Argument	rem		769213	1					
ANR	769730	Identifier	rem		769213	0					
ANR	769731	Argument	( UChar ) 0		769213	2					
ANR	769732	CastExpression	( UChar ) 0		769213	0					
ANR	769733	CastTarget	UChar		769213	0					
ANR	769734	PrimaryExpression	0		769213	1					
ANR	769735	IfStatement	"if ( len + rem == enclen ( env -> enc , NSTR ( * np ) -> s ) )"		769213	2					
ANR	769736	Condition	"len + rem == enclen ( env -> enc , NSTR ( * np ) -> s )"	5128:9:115011:115053	769213	0	True				
ANR	769737	EqualityExpression	"len + rem == enclen ( env -> enc , NSTR ( * np ) -> s )"		769213	0		==			
ANR	769738	AdditiveExpression	len + rem		769213	0		+			
ANR	769739	Identifier	len		769213	0					
ANR	769740	Identifier	rem		769213	1					
ANR	769741	CallExpression	"enclen ( env -> enc , NSTR ( * np ) -> s )"		769213	1					
ANR	769742	Callee	enclen		769213	0					
ANR	769743	Identifier	enclen		769213	0					
ANR	769744	ArgumentList	env -> enc		769213	1					
ANR	769745	Argument	env -> enc		769213	0					
ANR	769746	PtrMemberAccess	env -> enc		769213	0					
ANR	769747	Identifier	env		769213	0					
ANR	769748	Identifier	enc		769213	1					
ANR	769749	Argument	NSTR ( * np ) -> s		769213	1					
ANR	769750	PtrMemberAccess	NSTR ( * np ) -> s		769213	0					
ANR	769751	CallExpression	NSTR ( * np )		769213	0					
ANR	769752	Callee	NSTR		769213	0					
ANR	769753	Identifier	NSTR		769213	0					
ANR	769754	ArgumentList	* np		769213	1					
ANR	769755	Argument	* np		769213	0					
ANR	769756	UnaryOperationExpression	* np		769213	0					
ANR	769757	UnaryOperator	*		769213	0					
ANR	769758	Identifier	np		769213	1					
ANR	769759	Identifier	s		769213	1					
ANR	769760	CompoundStatement		90:54:2170:2170	769213	1					
ANR	769761	ExpressionStatement	NSTRING_CLEAR_RAW ( * np )	5129:7:115065:115087	769213	0	True				
ANR	769762	CallExpression	NSTRING_CLEAR_RAW ( * np )		769213	0					
ANR	769763	Callee	NSTRING_CLEAR_RAW		769213	0					
ANR	769764	Identifier	NSTRING_CLEAR_RAW		769213	0					
ANR	769765	ArgumentList	* np		769213	1					
ANR	769766	Argument	* np		769213	0					
ANR	769767	UnaryOperationExpression	* np		769213	0					
ANR	769768	UnaryOperator	*		769213	0					
ANR	769769	Identifier	np		769213	1					
ANR	769770	GotoStatement	goto string_end ;	5130:7:115096:115111	769213	1	True				
ANR	769771	Identifier	string_end		769213	0					
ANR	769772	ReturnStatement	return ONIGERR_TOO_SHORT_MULTI_BYTE_STRING ;	5134:3:115135:115177	769213	2	True				
ANR	769773	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		769213	0					
ANR	769774	ExpressionStatement	"r = node_str_cat_char ( * np , ( UChar ) tok -> u . c )"	5137:1:115184:115228	769213	4	True				
ANR	769775	AssignmentExpression	"r = node_str_cat_char ( * np , ( UChar ) tok -> u . c )"		769213	0		=			
ANR	769776	Identifier	r		769213	0					
ANR	769777	CallExpression	"node_str_cat_char ( * np , ( UChar ) tok -> u . c )"		769213	1					
ANR	769778	Callee	node_str_cat_char		769213	0					
ANR	769779	Identifier	node_str_cat_char		769213	0					
ANR	769780	ArgumentList	* np		769213	1					
ANR	769781	Argument	* np		769213	0					
ANR	769782	UnaryOperationExpression	* np		769213	0					
ANR	769783	UnaryOperator	*		769213	0					
ANR	769784	Identifier	np		769213	1					
ANR	769785	Argument	( UChar ) tok -> u . c		769213	1					
ANR	769786	CastExpression	( UChar ) tok -> u . c		769213	0					
ANR	769787	CastTarget	UChar		769213	0					
ANR	769788	MemberAccess	tok -> u . c		769213	1					
ANR	769789	PtrMemberAccess	tok -> u		769213	0					
ANR	769790	Identifier	tok		769213	0					
ANR	769791	Identifier	u		769213	1					
ANR	769792	Identifier	c		769213	1					
ANR	769793	IfStatement	if ( r < 0 )		769213	5					
ANR	769794	Condition	r < 0	5138:5:115235:115239	769213	0	True				
ANR	769795	RelationalExpression	r < 0		769213	0		<			
ANR	769796	Identifier	r		769213	0					
ANR	769797	PrimaryExpression	0		769213	1					
ANR	769798	ReturnStatement	return r ;	5138:12:115242:115250	769213	1	True				
ANR	769799	Identifier	r		769213	0					
ANR	769800	ExpressionStatement	len ++	5140:1:115254:115259	769213	6	True				
ANR	769801	PostIncDecOperationExpression	len ++		769213	0					
ANR	769802	Identifier	len		769213	0					
ANR	769803	IncDec	++		769213	1					
ANR	769804	BreakStatement	break ;	5143:4:115279:115284	769213	22	True				
ANR	769805	Label	case TK_CODE_POINT :	5145:2:115289:115307	769213	23	True				
ANR	769806	Identifier	TK_CODE_POINT		769213	0					
ANR	769807	CompoundStatement		110:6:2480:2537	769213	24					
ANR	769808	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	5147:6:115321:115358	769213	0	True				
ANR	769809	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		769213	0					
ANR	769810	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		769213	0					
ANR	769811	Identifier	buf		769213	1					
ANR	769812	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		769213	2					
ANR	769813	IdentifierDeclStatement	"int num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf ) ;"	5148:6:115366:115423	769213	1	True				
ANR	769814	IdentifierDecl	"num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		769213	0					
ANR	769815	IdentifierDeclType	int		769213	0					
ANR	769816	Identifier	num		769213	1					
ANR	769817	AssignmentExpression	"num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		769213	2		=			
ANR	769818	Identifier	num		769213	0					
ANR	769819	CallExpression	"ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		769213	1					
ANR	769820	Callee	ONIGENC_CODE_TO_MBC		769213	0					
ANR	769821	Identifier	ONIGENC_CODE_TO_MBC		769213	0					
ANR	769822	ArgumentList	env -> enc		769213	1					
ANR	769823	Argument	env -> enc		769213	0					
ANR	769824	PtrMemberAccess	env -> enc		769213	0					
ANR	769825	Identifier	env		769213	0					
ANR	769826	Identifier	enc		769213	1					
ANR	769827	Argument	tok -> u . code		769213	1					
ANR	769828	MemberAccess	tok -> u . code		769213	0					
ANR	769829	PtrMemberAccess	tok -> u		769213	0					
ANR	769830	Identifier	tok		769213	0					
ANR	769831	Identifier	u		769213	1					
ANR	769832	Identifier	code		769213	1					
ANR	769833	Argument	buf		769213	2					
ANR	769834	Identifier	buf		769213	0					
ANR	769835	IfStatement	if ( num < 0 )		769213	2					
ANR	769836	Condition	num < 0	5149:10:115435:115441	769213	0	True				
ANR	769837	RelationalExpression	num < 0		769213	0		<			
ANR	769838	Identifier	num		769213	0					
ANR	769839	PrimaryExpression	0		769213	1					
ANR	769840	ReturnStatement	return num ;	5149:19:115444:115454	769213	1	True				
ANR	769841	Identifier	num		769213	0					
ANR	769842	ExpressionStatement	"* np = node_new_str_raw ( buf , buf + num )"	5151:6:115501:115539	769213	3	True				
ANR	769843	AssignmentExpression	"* np = node_new_str_raw ( buf , buf + num )"		769213	0		=			
ANR	769844	UnaryOperationExpression	* np		769213	0					
ANR	769845	UnaryOperator	*		769213	0					
ANR	769846	Identifier	np		769213	1					
ANR	769847	CallExpression	"node_new_str_raw ( buf , buf + num )"		769213	1					
ANR	769848	Callee	node_new_str_raw		769213	0					
ANR	769849	Identifier	node_new_str_raw		769213	0					
ANR	769850	ArgumentList	buf		769213	1					
ANR	769851	Argument	buf		769213	0					
ANR	769852	Identifier	buf		769213	0					
ANR	769853	Argument	buf + num		769213	1					
ANR	769854	AdditiveExpression	buf + num		769213	0		+			
ANR	769855	Identifier	buf		769213	0					
ANR	769856	Identifier	num		769213	1					
ANR	769857	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5155:6:115602:115631	769213	4	True				
ANR	769858	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	769859	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769860	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769861	ArgumentList	* np		769213	1					
ANR	769862	Argument	* np		769213	0					
ANR	769863	UnaryOperationExpression	* np		769213	0					
ANR	769864	UnaryOperator	*		769213	0					
ANR	769865	Identifier	np		769213	1					
ANR	769866	BreakStatement	break ;	5157:4:115643:115648	769213	25	True				
ANR	769867	Label	case TK_QUOTE_OPEN :	5159:2:115653:115671	769213	26	True				
ANR	769868	Identifier	TK_QUOTE_OPEN		769213	0					
ANR	769869	CompoundStatement		124:6:2830:2858	769213	27					
ANR	769870	IdentifierDeclStatement	OnigCodePoint end_op [ 2 ] ;	5161:6:115685:115708	769213	0	True				
ANR	769871	IdentifierDecl	end_op [ 2 ]		769213	0					
ANR	769872	IdentifierDeclType	OnigCodePoint [ 2 ]		769213	0					
ANR	769873	Identifier	end_op		769213	1					
ANR	769874	PrimaryExpression	2		769213	2					
ANR	769875	IdentifierDeclStatement	"UChar * qstart , * qend , * nextp ;"	5162:6:115716:115744	769213	1	True				
ANR	769876	IdentifierDecl	* qstart		769213	0					
ANR	769877	IdentifierDeclType	UChar *		769213	0					
ANR	769878	Identifier	qstart		769213	1					
ANR	769879	IdentifierDecl	* qend		769213	1					
ANR	769880	IdentifierDeclType	UChar *		769213	0					
ANR	769881	Identifier	qend		769213	1					
ANR	769882	IdentifierDecl	* nextp		769213	2					
ANR	769883	IdentifierDeclType	UChar *		769213	0					
ANR	769884	Identifier	nextp		769213	1					
ANR	769885	ExpressionStatement	end_op [ 0 ] = ( OnigCodePoint ) MC_ESC ( env -> syntax )	5164:6:115753:115800	769213	2	True				
ANR	769886	AssignmentExpression	end_op [ 0 ] = ( OnigCodePoint ) MC_ESC ( env -> syntax )		769213	0		=			
ANR	769887	ArrayIndexing	end_op [ 0 ]		769213	0					
ANR	769888	Identifier	end_op		769213	0					
ANR	769889	PrimaryExpression	0		769213	1					
ANR	769890	CastExpression	( OnigCodePoint ) MC_ESC ( env -> syntax )		769213	1					
ANR	769891	CastTarget	OnigCodePoint		769213	0					
ANR	769892	CallExpression	MC_ESC ( env -> syntax )		769213	1					
ANR	769893	Callee	MC_ESC		769213	0					
ANR	769894	Identifier	MC_ESC		769213	0					
ANR	769895	ArgumentList	env -> syntax		769213	1					
ANR	769896	Argument	env -> syntax		769213	0					
ANR	769897	PtrMemberAccess	env -> syntax		769213	0					
ANR	769898	Identifier	env		769213	0					
ANR	769899	Identifier	syntax		769213	1					
ANR	769900	ExpressionStatement	end_op [ 1 ] = ( OnigCodePoint ) 'E'	5165:6:115808:115839	769213	3	True				
ANR	769901	AssignmentExpression	end_op [ 1 ] = ( OnigCodePoint ) 'E'		769213	0		=			
ANR	769902	ArrayIndexing	end_op [ 1 ]		769213	0					
ANR	769903	Identifier	end_op		769213	0					
ANR	769904	PrimaryExpression	1		769213	1					
ANR	769905	CastExpression	( OnigCodePoint ) 'E'		769213	1					
ANR	769906	CastTarget	OnigCodePoint		769213	0					
ANR	769907	PrimaryExpression	'E'		769213	1					
ANR	769908	ExpressionStatement	qstart = * src	5166:6:115847:115860	769213	4	True				
ANR	769909	AssignmentExpression	qstart = * src		769213	0		=			
ANR	769910	Identifier	qstart		769213	0					
ANR	769911	UnaryOperationExpression	* src		769213	1					
ANR	769912	UnaryOperator	*		769213	0					
ANR	769913	Identifier	src		769213	1					
ANR	769914	ExpressionStatement	"qend = find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"	5167:6:115868:115934	769213	5	True				
ANR	769915	AssignmentExpression	"qend = find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"		769213	0		=			
ANR	769916	Identifier	qend		769213	0					
ANR	769917	CallExpression	"find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"		769213	1					
ANR	769918	Callee	find_str_position		769213	0					
ANR	769919	Identifier	find_str_position		769213	0					
ANR	769920	ArgumentList	end_op		769213	1					
ANR	769921	Argument	end_op		769213	0					
ANR	769922	Identifier	end_op		769213	0					
ANR	769923	Argument	2		769213	1					
ANR	769924	PrimaryExpression	2		769213	0					
ANR	769925	Argument	qstart		769213	2					
ANR	769926	Identifier	qstart		769213	0					
ANR	769927	Argument	end		769213	3					
ANR	769928	Identifier	end		769213	0					
ANR	769929	Argument	& nextp		769213	4					
ANR	769930	UnaryOperationExpression	& nextp		769213	0					
ANR	769931	UnaryOperator	&		769213	0					
ANR	769932	Identifier	nextp		769213	1					
ANR	769933	Argument	env -> enc		769213	5					
ANR	769934	PtrMemberAccess	env -> enc		769213	0					
ANR	769935	Identifier	env		769213	0					
ANR	769936	Identifier	enc		769213	1					
ANR	769937	IfStatement	if ( IS_NULL ( qend ) )		769213	6					
ANR	769938	Condition	IS_NULL ( qend )	5168:10:115946:115958	769213	0	True				
ANR	769939	CallExpression	IS_NULL ( qend )		769213	0					
ANR	769940	Callee	IS_NULL		769213	0					
ANR	769941	Identifier	IS_NULL		769213	0					
ANR	769942	ArgumentList	qend		769213	1					
ANR	769943	Argument	qend		769213	0					
ANR	769944	Identifier	qend		769213	0					
ANR	769945	CompoundStatement		130:25:3075:3075	769213	1					
ANR	769946	ExpressionStatement	nextp = qend = end	5169:1:115964:115982	769213	0	True				
ANR	769947	AssignmentExpression	nextp = qend = end		769213	0		=			
ANR	769948	Identifier	nextp		769213	0					
ANR	769949	AssignmentExpression	qend = end		769213	1		=			
ANR	769950	Identifier	qend		769213	0					
ANR	769951	Identifier	end		769213	1					
ANR	769952	ExpressionStatement	"* np = node_new_str ( qstart , qend )"	5171:6:115998:116030	769213	7	True				
ANR	769953	AssignmentExpression	"* np = node_new_str ( qstart , qend )"		769213	0		=			
ANR	769954	UnaryOperationExpression	* np		769213	0					
ANR	769955	UnaryOperator	*		769213	0					
ANR	769956	Identifier	np		769213	1					
ANR	769957	CallExpression	"node_new_str ( qstart , qend )"		769213	1					
ANR	769958	Callee	node_new_str		769213	0					
ANR	769959	Identifier	node_new_str		769213	0					
ANR	769960	ArgumentList	qstart		769213	1					
ANR	769961	Argument	qstart		769213	0					
ANR	769962	Identifier	qstart		769213	0					
ANR	769963	Argument	qend		769213	1					
ANR	769964	Identifier	qend		769213	0					
ANR	769965	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5172:6:116038:116067	769213	8	True				
ANR	769966	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	769967	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769968	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	769969	ArgumentList	* np		769213	1					
ANR	769970	Argument	* np		769213	0					
ANR	769971	UnaryOperationExpression	* np		769213	0					
ANR	769972	UnaryOperator	*		769213	0					
ANR	769973	Identifier	np		769213	1					
ANR	769974	ExpressionStatement	* src = nextp	5173:6:116075:116087	769213	9	True				
ANR	769975	AssignmentExpression	* src = nextp		769213	0		=			
ANR	769976	UnaryOperationExpression	* src		769213	0					
ANR	769977	UnaryOperator	*		769213	0					
ANR	769978	Identifier	src		769213	1					
ANR	769979	Identifier	nextp		769213	1					
ANR	769980	BreakStatement	break ;	5175:4:116099:116104	769213	28	True				
ANR	769981	Label	case TK_CHAR_TYPE :	5177:2:116109:116126	769213	29	True				
ANR	769982	Identifier	TK_CHAR_TYPE		769213	0					
ANR	769983	CompoundStatement		140:4:3246:3246	769213	30					
ANR	769984	SwitchStatement	switch ( tok -> u . prop . ctype )		769213	0					
ANR	769985	Condition	tok -> u . prop . ctype	5179:14:116148:116164	769213	0	True				
ANR	769986	MemberAccess	tok -> u . prop . ctype		769213	0					
ANR	769987	MemberAccess	tok -> u . prop		769213	0					
ANR	769988	PtrMemberAccess	tok -> u		769213	0					
ANR	769989	Identifier	tok		769213	0					
ANR	769990	Identifier	u		769213	1					
ANR	769991	Identifier	prop		769213	1					
ANR	769992	Identifier	ctype		769213	1					
ANR	769993	CompoundStatement		141:33:3281:3281	769213	1					
ANR	769994	Label	case ONIGENC_CTYPE_WORD :	5180:6:116175:116198	769213	0	True				
ANR	769995	Identifier	ONIGENC_CTYPE_WORD		769213	0					
ANR	769996	ExpressionStatement	"* np = node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"	5181:1:116201:116257	769213	1	True				
ANR	769997	AssignmentExpression	"* np = node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"		769213	0		=			
ANR	769998	UnaryOperationExpression	* np		769213	0					
ANR	769999	UnaryOperator	*		769213	0					
ANR	770000	Identifier	np		769213	1					
ANR	770001	CallExpression	"node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"		769213	1					
ANR	770002	Callee	node_new_ctype		769213	0					
ANR	770003	Identifier	node_new_ctype		769213	0					
ANR	770004	ArgumentList	tok -> u . prop . ctype		769213	1					
ANR	770005	Argument	tok -> u . prop . ctype		769213	0					
ANR	770006	MemberAccess	tok -> u . prop . ctype		769213	0					
ANR	770007	MemberAccess	tok -> u . prop		769213	0					
ANR	770008	PtrMemberAccess	tok -> u		769213	0					
ANR	770009	Identifier	tok		769213	0					
ANR	770010	Identifier	u		769213	1					
ANR	770011	Identifier	prop		769213	1					
ANR	770012	Identifier	ctype		769213	1					
ANR	770013	Argument	tok -> u . prop . not		769213	1					
ANR	770014	MemberAccess	tok -> u . prop . not		769213	0					
ANR	770015	MemberAccess	tok -> u . prop		769213	0					
ANR	770016	PtrMemberAccess	tok -> u		769213	0					
ANR	770017	Identifier	tok		769213	0					
ANR	770018	Identifier	u		769213	1					
ANR	770019	Identifier	prop		769213	1					
ANR	770020	Identifier	not		769213	1					
ANR	770021	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5182:1:116260:116289	769213	2	True				
ANR	770022	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	770023	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770024	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770025	ArgumentList	* np		769213	1					
ANR	770026	Argument	* np		769213	0					
ANR	770027	UnaryOperationExpression	* np		769213	0					
ANR	770028	UnaryOperator	*		769213	0					
ANR	770029	Identifier	np		769213	1					
ANR	770030	BreakStatement	break ;	5183:1:116292:116297	769213	3	True				
ANR	770031	Label	case ONIGENC_CTYPE_SPACE :	5185:6:116306:116330	769213	4	True				
ANR	770032	Identifier	ONIGENC_CTYPE_SPACE		769213	0					
ANR	770033	Label	case ONIGENC_CTYPE_DIGIT :	5186:6:116338:116362	769213	5	True				
ANR	770034	Identifier	ONIGENC_CTYPE_DIGIT		769213	0					
ANR	770035	Label	case ONIGENC_CTYPE_XDIGIT :	5187:6:116370:116395	769213	6	True				
ANR	770036	Identifier	ONIGENC_CTYPE_XDIGIT		769213	0					
ANR	770037	CompoundStatement		155:3:3604:3624	769213	7					
ANR	770038	IdentifierDeclStatement	CClassNode * cc ;	5189:3:116403:116417	769213	0	True				
ANR	770039	IdentifierDecl	* cc		769213	0					
ANR	770040	IdentifierDeclType	CClassNode *		769213	0					
ANR	770041	Identifier	cc		769213	1					
ANR	770042	IdentifierDeclStatement	const OnigCodePoint * mbr ;	5192:10:116461:116485	769213	1	True				
ANR	770043	IdentifierDecl	* mbr		769213	0					
ANR	770044	IdentifierDeclType	const OnigCodePoint *		769213	0					
ANR	770045	Identifier	mbr		769213	1					
ANR	770046	IdentifierDeclStatement	OnigCodePoint sb_out ;	5193:3:116490:116510	769213	2	True				
ANR	770047	IdentifierDecl	sb_out		769213	0					
ANR	770048	IdentifierDeclType	OnigCodePoint		769213	0					
ANR	770049	Identifier	sb_out		769213	1					
ANR	770050	ExpressionStatement	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"	5195:10:116523:116607	769213	3	True				
ANR	770051	AssignmentExpression	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"		769213	0		=			
ANR	770052	Identifier	r		769213	0					
ANR	770053	CallExpression	"ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"		769213	1					
ANR	770054	Callee	ONIGENC_GET_CTYPE_CODE_RANGE		769213	0					
ANR	770055	Identifier	ONIGENC_GET_CTYPE_CODE_RANGE		769213	0					
ANR	770056	ArgumentList	env -> enc		769213	1					
ANR	770057	Argument	env -> enc		769213	0					
ANR	770058	PtrMemberAccess	env -> enc		769213	0					
ANR	770059	Identifier	env		769213	0					
ANR	770060	Identifier	enc		769213	1					
ANR	770061	Argument	tok -> u . prop . ctype		769213	1					
ANR	770062	MemberAccess	tok -> u . prop . ctype		769213	0					
ANR	770063	MemberAccess	tok -> u . prop		769213	0					
ANR	770064	PtrMemberAccess	tok -> u		769213	0					
ANR	770065	Identifier	tok		769213	0					
ANR	770066	Identifier	u		769213	1					
ANR	770067	Identifier	prop		769213	1					
ANR	770068	Identifier	ctype		769213	1					
ANR	770069	Argument	& sb_out		769213	2					
ANR	770070	UnaryOperationExpression	& sb_out		769213	0					
ANR	770071	UnaryOperator	&		769213	0					
ANR	770072	Identifier	sb_out		769213	1					
ANR	770073	Argument	& mbr		769213	3					
ANR	770074	UnaryOperationExpression	& mbr		769213	0					
ANR	770075	UnaryOperator	&		769213	0					
ANR	770076	Identifier	mbr		769213	1					
ANR	770077	IfStatement	if ( r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS )		769213	4					
ANR	770078	Condition	r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS	5197:14:116623:116727	769213	0	True				
ANR	770079	AndExpression	r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		769213	0		&&			
ANR	770080	EqualityExpression	r == 0		769213	0		==			
ANR	770081	Identifier	r		769213	0					
ANR	770082	PrimaryExpression	0		769213	1					
ANR	770083	RelationalExpression	ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		769213	1		>=			
ANR	770084	CallExpression	ONIGENC_CODE_RANGE_NUM ( mbr )		769213	0					
ANR	770085	Callee	ONIGENC_CODE_RANGE_NUM		769213	0					
ANR	770086	Identifier	ONIGENC_CODE_RANGE_NUM		769213	0					
ANR	770087	ArgumentList	mbr		769213	1					
ANR	770088	Argument	mbr		769213	0					
ANR	770089	Identifier	mbr		769213	0					
ANR	770090	Identifier	THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		769213	1					
ANR	770091	CompoundStatement		163:12:3892:3916	769213	1					
ANR	770092	IdentifierDeclStatement	type_cclass_key key ;	5200:12:116744:116764	769213	0	True				
ANR	770093	IdentifierDecl	key		769213	0					
ANR	770094	IdentifierDeclType	type_cclass_key		769213	0					
ANR	770095	Identifier	key		769213	1					
ANR	770096	IdentifierDeclStatement	type_cclass_key * new_key ;	5201:12:116778:116802	769213	1	True				
ANR	770097	IdentifierDecl	* new_key		769213	0					
ANR	770098	IdentifierDeclType	type_cclass_key *		769213	0					
ANR	770099	Identifier	new_key		769213	1					
ANR	770100	ExpressionStatement	key . enc = env -> enc	5203:12:116817:116836	769213	2	True				
ANR	770101	AssignmentExpression	key . enc = env -> enc		769213	0		=			
ANR	770102	MemberAccess	key . enc		769213	0					
ANR	770103	Identifier	key		769213	0					
ANR	770104	Identifier	enc		769213	1					
ANR	770105	PtrMemberAccess	env -> enc		769213	1					
ANR	770106	Identifier	env		769213	0					
ANR	770107	Identifier	enc		769213	1					
ANR	770108	ExpressionStatement	key . not = tok -> u . prop . not	5204:12:116850:116876	769213	3	True				
ANR	770109	AssignmentExpression	key . not = tok -> u . prop . not		769213	0		=			
ANR	770110	MemberAccess	key . not		769213	0					
ANR	770111	Identifier	key		769213	0					
ANR	770112	Identifier	not		769213	1					
ANR	770113	MemberAccess	tok -> u . prop . not		769213	1					
ANR	770114	MemberAccess	tok -> u . prop		769213	0					
ANR	770115	PtrMemberAccess	tok -> u		769213	0					
ANR	770116	Identifier	tok		769213	0					
ANR	770117	Identifier	u		769213	1					
ANR	770118	Identifier	prop		769213	1					
ANR	770119	Identifier	not		769213	1					
ANR	770120	ExpressionStatement	key . type = tok -> u . prop . ctype	5205:12:116890:116918	769213	4	True				
ANR	770121	AssignmentExpression	key . type = tok -> u . prop . ctype		769213	0		=			
ANR	770122	MemberAccess	key . type		769213	0					
ANR	770123	Identifier	key		769213	0					
ANR	770124	Identifier	type		769213	1					
ANR	770125	MemberAccess	tok -> u . prop . ctype		769213	1					
ANR	770126	MemberAccess	tok -> u . prop		769213	0					
ANR	770127	PtrMemberAccess	tok -> u		769213	0					
ANR	770128	Identifier	tok		769213	0					
ANR	770129	Identifier	u		769213	1					
ANR	770130	Identifier	prop		769213	1					
ANR	770131	Identifier	ctype		769213	1					
ANR	770132	ExpressionStatement	THREAD_ATOMIC_START	5207:12:116933:116952	769213	5	True				
ANR	770133	Identifier	THREAD_ATOMIC_START		769213	0					
ANR	770134	IfStatement	if ( IS_NULL ( OnigTypeCClassTable ) )		769213	6					
ANR	770135	Condition	IS_NULL ( OnigTypeCClassTable )	5209:16:116971:116998	769213	0	True				
ANR	770136	CallExpression	IS_NULL ( OnigTypeCClassTable )		769213	0					
ANR	770137	Callee	IS_NULL		769213	0					
ANR	770138	Identifier	IS_NULL		769213	0					
ANR	770139	ArgumentList	OnigTypeCClassTable		769213	1					
ANR	770140	Argument	OnigTypeCClassTable		769213	0					
ANR	770141	Identifier	OnigTypeCClassTable		769213	0					
ANR	770142	CompoundStatement		171:46:4115:4115	769213	1					
ANR	770143	ExpressionStatement	"OnigTypeCClassTable = onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"	5210:14:117017:117111	769213	0	True				
ANR	770144	AssignmentExpression	"OnigTypeCClassTable = onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"		769213	0		=			
ANR	770145	Identifier	OnigTypeCClassTable		769213	0					
ANR	770146	CallExpression	"onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"		769213	1					
ANR	770147	Callee	onig_st_init_table_with_size		769213	0					
ANR	770148	Identifier	onig_st_init_table_with_size		769213	0					
ANR	770149	ArgumentList	& type_type_cclass_hash		769213	1					
ANR	770150	Argument	& type_type_cclass_hash		769213	0					
ANR	770151	UnaryOperationExpression	& type_type_cclass_hash		769213	0					
ANR	770152	UnaryOperator	&		769213	0					
ANR	770153	Identifier	type_type_cclass_hash		769213	1					
ANR	770154	Argument	10		769213	1					
ANR	770155	PrimaryExpression	10		769213	0					
ANR	770156	IfStatement	if ( IS_NULL ( OnigTypeCClassTable ) )		769213	1					
ANR	770157	Condition	IS_NULL ( OnigTypeCClassTable )	5212:18:117131:117158	769213	0	True				
ANR	770158	CallExpression	IS_NULL ( OnigTypeCClassTable )		769213	0					
ANR	770159	Callee	IS_NULL		769213	0					
ANR	770160	Identifier	IS_NULL		769213	0					
ANR	770161	ArgumentList	OnigTypeCClassTable		769213	1					
ANR	770162	Argument	OnigTypeCClassTable		769213	0					
ANR	770163	Identifier	OnigTypeCClassTable		769213	0					
ANR	770164	CompoundStatement		174:48:4275:4275	769213	1					
ANR	770165	ExpressionStatement	THREAD_ATOMIC_END	5213:16:117179:117196	769213	0	True				
ANR	770166	Identifier	THREAD_ATOMIC_END		769213	0					
ANR	770167	ReturnStatement	return ONIGERR_MEMORY ;	5214:16:117214:117235	769213	1	True				
ANR	770168	Identifier	ONIGERR_MEMORY		769213	0					
ANR	770169	ElseStatement	else		769213	0					
ANR	770170	CompoundStatement		179:17:4398:4398	769213	0					
ANR	770171	IfStatement	"if ( onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np ) )"		769213	0					
ANR	770172	Condition	"onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np )"	5218:18:117304:117406	769213	0	True				
ANR	770173	CallExpression	"onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np )"		769213	0					
ANR	770174	Callee	onig_st_lookup		769213	0					
ANR	770175	Identifier	onig_st_lookup		769213	0					
ANR	770176	ArgumentList	OnigTypeCClassTable		769213	1					
ANR	770177	Argument	OnigTypeCClassTable		769213	0					
ANR	770178	Identifier	OnigTypeCClassTable		769213	0					
ANR	770179	Argument	( st_data_t ) & key		769213	1					
ANR	770180	CastExpression	( st_data_t ) & key		769213	0					
ANR	770181	CastTarget	st_data_t		769213	0					
ANR	770182	UnaryOperationExpression	& key		769213	1					
ANR	770183	UnaryOperator	&		769213	0					
ANR	770184	Identifier	key		769213	1					
ANR	770185	Argument	( st_data_t * ) np		769213	2					
ANR	770186	CastExpression	( st_data_t * ) np		769213	0					
ANR	770187	CastTarget	st_data_t *		769213	0					
ANR	770188	Identifier	np		769213	1					
ANR	770189	CompoundStatement		181:51:4523:4523	769213	1					
ANR	770190	ExpressionStatement	THREAD_ATOMIC_END	5220:16:117427:117444	769213	0	True				
ANR	770191	Identifier	THREAD_ATOMIC_END		769213	0					
ANR	770192	BreakStatement	break ;	5221:16:117462:117467	769213	1	True				
ANR	770193	ExpressionStatement	"* np = node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"	5225:12:117512:117593	769213	7	True				
ANR	770194	AssignmentExpression	"* np = node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"		769213	0		=			
ANR	770195	UnaryOperationExpression	* np		769213	0					
ANR	770196	UnaryOperator	*		769213	0					
ANR	770197	Identifier	np		769213	1					
ANR	770198	CallExpression	"node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"		769213	1					
ANR	770199	Callee	node_new_cclass_by_codepoint_range		769213	0					
ANR	770200	Identifier	node_new_cclass_by_codepoint_range		769213	0					
ANR	770201	ArgumentList	tok -> u . prop . not		769213	1					
ANR	770202	Argument	tok -> u . prop . not		769213	0					
ANR	770203	MemberAccess	tok -> u . prop . not		769213	0					
ANR	770204	MemberAccess	tok -> u . prop		769213	0					
ANR	770205	PtrMemberAccess	tok -> u		769213	0					
ANR	770206	Identifier	tok		769213	0					
ANR	770207	Identifier	u		769213	1					
ANR	770208	Identifier	prop		769213	1					
ANR	770209	Identifier	not		769213	1					
ANR	770210	Argument	sb_out		769213	1					
ANR	770211	Identifier	sb_out		769213	0					
ANR	770212	Argument	mbr		769213	2					
ANR	770213	Identifier	mbr		769213	0					
ANR	770214	IfStatement	if ( IS_NULL ( * np ) )		769213	8					
ANR	770215	Condition	IS_NULL ( * np )	5227:16:117611:117622	769213	0	True				
ANR	770216	CallExpression	IS_NULL ( * np )		769213	0					
ANR	770217	Callee	IS_NULL		769213	0					
ANR	770218	Identifier	IS_NULL		769213	0					
ANR	770219	ArgumentList	* np		769213	1					
ANR	770220	Argument	* np		769213	0					
ANR	770221	UnaryOperationExpression	* np		769213	0					
ANR	770222	UnaryOperator	*		769213	0					
ANR	770223	Identifier	np		769213	1					
ANR	770224	CompoundStatement		189:30:4739:4739	769213	1					
ANR	770225	ExpressionStatement	THREAD_ATOMIC_END	5228:14:117641:117658	769213	0	True				
ANR	770226	Identifier	THREAD_ATOMIC_END		769213	0					
ANR	770227	ReturnStatement	return ONIGERR_MEMORY ;	5229:14:117674:117695	769213	1	True				
ANR	770228	Identifier	ONIGERR_MEMORY		769213	0					
ANR	770229	ExpressionStatement	cc = NCCLASS ( * np )	5232:12:117724:117741	769213	9	True				
ANR	770230	AssignmentExpression	cc = NCCLASS ( * np )		769213	0		=			
ANR	770231	Identifier	cc		769213	0					
ANR	770232	CallExpression	NCCLASS ( * np )		769213	1					
ANR	770233	Callee	NCCLASS		769213	0					
ANR	770234	Identifier	NCCLASS		769213	0					
ANR	770235	ArgumentList	* np		769213	1					
ANR	770236	Argument	* np		769213	0					
ANR	770237	UnaryOperationExpression	* np		769213	0					
ANR	770238	UnaryOperator	*		769213	0					
ANR	770239	Identifier	np		769213	1					
ANR	770240	ExpressionStatement	NCCLASS_SET_SHARE ( cc )	5233:12:117755:117776	769213	10	True				
ANR	770241	CallExpression	NCCLASS_SET_SHARE ( cc )		769213	0					
ANR	770242	Callee	NCCLASS_SET_SHARE		769213	0					
ANR	770243	Identifier	NCCLASS_SET_SHARE		769213	0					
ANR	770244	ArgumentList	cc		769213	1					
ANR	770245	Argument	cc		769213	0					
ANR	770246	Identifier	cc		769213	0					
ANR	770247	ExpressionStatement	new_key = ( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )	5234:12:117790:117851	769213	11	True				
ANR	770248	AssignmentExpression	new_key = ( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )		769213	0		=			
ANR	770249	Identifier	new_key		769213	0					
ANR	770250	CastExpression	( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )		769213	1					
ANR	770251	CastTarget	type_cclass_key *		769213	0					
ANR	770252	CallExpression	xmalloc ( sizeof ( type_cclass_key ) )		769213	1					
ANR	770253	Callee	xmalloc		769213	0					
ANR	770254	Identifier	xmalloc		769213	0					
ANR	770255	ArgumentList	sizeof ( type_cclass_key )		769213	1					
ANR	770256	Argument	sizeof ( type_cclass_key )		769213	0					
ANR	770257	SizeofExpression	sizeof ( type_cclass_key )		769213	0					
ANR	770258	Sizeof	sizeof		769213	0					
ANR	770259	SizeofOperand	type_cclass_key		769213	1					
ANR	770260	ExpressionStatement	"xmemcpy ( new_key , & key , sizeof ( type_cclass_key ) )"	5235:5:117858:117905	769213	12	True				
ANR	770261	CallExpression	"xmemcpy ( new_key , & key , sizeof ( type_cclass_key ) )"		769213	0					
ANR	770262	Callee	xmemcpy		769213	0					
ANR	770263	Identifier	xmemcpy		769213	0					
ANR	770264	ArgumentList	new_key		769213	1					
ANR	770265	Argument	new_key		769213	0					
ANR	770266	Identifier	new_key		769213	0					
ANR	770267	Argument	& key		769213	1					
ANR	770268	UnaryOperationExpression	& key		769213	0					
ANR	770269	UnaryOperator	&		769213	0					
ANR	770270	Identifier	key		769213	1					
ANR	770271	Argument	sizeof ( type_cclass_key )		769213	2					
ANR	770272	SizeofExpression	sizeof ( type_cclass_key )		769213	0					
ANR	770273	Sizeof	sizeof		769213	0					
ANR	770274	SizeofOperand	type_cclass_key		769213	1					
ANR	770275	ExpressionStatement	"onig_st_add_direct ( OnigTypeCClassTable , ( st_data_t ) new_key , ( st_data_t ) * np )"	5236:12:117919:118027	769213	13	True				
ANR	770276	CallExpression	"onig_st_add_direct ( OnigTypeCClassTable , ( st_data_t ) new_key , ( st_data_t ) * np )"		769213	0					
ANR	770277	Callee	onig_st_add_direct		769213	0					
ANR	770278	Identifier	onig_st_add_direct		769213	0					
ANR	770279	ArgumentList	OnigTypeCClassTable		769213	1					
ANR	770280	Argument	OnigTypeCClassTable		769213	0					
ANR	770281	Identifier	OnigTypeCClassTable		769213	0					
ANR	770282	Argument	( st_data_t ) new_key		769213	1					
ANR	770283	CastExpression	( st_data_t ) new_key		769213	0					
ANR	770284	CastTarget	st_data_t		769213	0					
ANR	770285	Identifier	new_key		769213	1					
ANR	770286	Argument	( st_data_t ) * np		769213	2					
ANR	770287	CastExpression	( st_data_t ) * np		769213	0					
ANR	770288	CastTarget	st_data_t		769213	0					
ANR	770289	UnaryOperationExpression	* np		769213	1					
ANR	770290	UnaryOperator	*		769213	0					
ANR	770291	Identifier	np		769213	1					
ANR	770292	ExpressionStatement	THREAD_ATOMIC_END	5239:12:118054:118071	769213	14	True				
ANR	770293	Identifier	THREAD_ATOMIC_END		769213	0					
ANR	770294	ElseStatement	else		769213	0					
ANR	770295	CompoundStatement		203:15:5214:5214	769213	0					
ANR	770296	ExpressionStatement	* np = node_new_cclass ( )	5243:12:118121:118144	769213	0	True				
ANR	770297	AssignmentExpression	* np = node_new_cclass ( )		769213	0		=			
ANR	770298	UnaryOperationExpression	* np		769213	0					
ANR	770299	UnaryOperator	*		769213	0					
ANR	770300	Identifier	np		769213	1					
ANR	770301	CallExpression	node_new_cclass ( )		769213	1					
ANR	770302	Callee	node_new_cclass		769213	0					
ANR	770303	Identifier	node_new_cclass		769213	0					
ANR	770304	ArgumentList			769213	1					
ANR	770305	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5244:12:118158:118187	769213	1	True				
ANR	770306	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	770307	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770308	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770309	ArgumentList	* np		769213	1					
ANR	770310	Argument	* np		769213	0					
ANR	770311	UnaryOperationExpression	* np		769213	0					
ANR	770312	UnaryOperator	*		769213	0					
ANR	770313	Identifier	np		769213	1					
ANR	770314	ExpressionStatement	cc = NCCLASS ( * np )	5245:12:118201:118218	769213	2	True				
ANR	770315	AssignmentExpression	cc = NCCLASS ( * np )		769213	0		=			
ANR	770316	Identifier	cc		769213	0					
ANR	770317	CallExpression	NCCLASS ( * np )		769213	1					
ANR	770318	Callee	NCCLASS		769213	0					
ANR	770319	Identifier	NCCLASS		769213	0					
ANR	770320	ArgumentList	* np		769213	1					
ANR	770321	Argument	* np		769213	0					
ANR	770322	UnaryOperationExpression	* np		769213	0					
ANR	770323	UnaryOperator	*		769213	0					
ANR	770324	Identifier	np		769213	1					
ANR	770325	ExpressionStatement	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , 0 , env )"	5246:12:118232:118278	769213	3	True				
ANR	770326	CallExpression	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , 0 , env )"		769213	0					
ANR	770327	Callee	add_ctype_to_cc		769213	0					
ANR	770328	Identifier	add_ctype_to_cc		769213	0					
ANR	770329	ArgumentList	cc		769213	1					
ANR	770330	Argument	cc		769213	0					
ANR	770331	Identifier	cc		769213	0					
ANR	770332	Argument	tok -> u . prop . ctype		769213	1					
ANR	770333	MemberAccess	tok -> u . prop . ctype		769213	0					
ANR	770334	MemberAccess	tok -> u . prop		769213	0					
ANR	770335	PtrMemberAccess	tok -> u		769213	0					
ANR	770336	Identifier	tok		769213	0					
ANR	770337	Identifier	u		769213	1					
ANR	770338	Identifier	prop		769213	1					
ANR	770339	Identifier	ctype		769213	1					
ANR	770340	Argument	0		769213	2					
ANR	770341	PrimaryExpression	0		769213	0					
ANR	770342	Argument	env		769213	3					
ANR	770343	Identifier	env		769213	0					
ANR	770344	IfStatement	if ( tok -> u . prop . not != 0 )		769213	4					
ANR	770345	Condition	tok -> u . prop . not != 0	5247:16:118296:118315	769213	0	True				
ANR	770346	EqualityExpression	tok -> u . prop . not != 0		769213	0		!=			
ANR	770347	MemberAccess	tok -> u . prop . not		769213	0					
ANR	770348	MemberAccess	tok -> u . prop		769213	0					
ANR	770349	PtrMemberAccess	tok -> u		769213	0					
ANR	770350	Identifier	tok		769213	0					
ANR	770351	Identifier	u		769213	1					
ANR	770352	Identifier	prop		769213	1					
ANR	770353	Identifier	not		769213	1					
ANR	770354	PrimaryExpression	0		769213	1					
ANR	770355	ExpressionStatement	NCCLASS_SET_NOT ( cc )	5247:38:118318:118337	769213	1	True				
ANR	770356	CallExpression	NCCLASS_SET_NOT ( cc )		769213	0					
ANR	770357	Callee	NCCLASS_SET_NOT		769213	0					
ANR	770358	Identifier	NCCLASS_SET_NOT		769213	0					
ANR	770359	ArgumentList	cc		769213	1					
ANR	770360	Argument	cc		769213	0					
ANR	770361	Identifier	cc		769213	0					
ANR	770362	BreakStatement	break ;	5252:1:118393:118398	769213	8	True				
ANR	770363	Label	default :	5254:6:118407:118414	769213	9	True				
ANR	770364	Identifier	default		769213	0					
ANR	770365	ReturnStatement	return ONIGERR_PARSER_BUG ;	5255:1:118417:118442	769213	10	True				
ANR	770366	Identifier	ONIGERR_PARSER_BUG		769213	0					
ANR	770367	BreakStatement	break ;	5256:1:118445:118450	769213	11	True				
ANR	770368	BreakStatement	break ;	5259:4:118470:118475	769213	31	True				
ANR	770369	Label	case TK_CHAR_PROPERTY :	5261:2:118480:118501	769213	32	True				
ANR	770370	Identifier	TK_CHAR_PROPERTY		769213	0					
ANR	770371	ExpressionStatement	"r = parse_char_property ( np , tok , src , end , env )"	5262:4:118507:118554	769213	33	True				
ANR	770372	AssignmentExpression	"r = parse_char_property ( np , tok , src , end , env )"		769213	0		=			
ANR	770373	Identifier	r		769213	0					
ANR	770374	CallExpression	"parse_char_property ( np , tok , src , end , env )"		769213	1					
ANR	770375	Callee	parse_char_property		769213	0					
ANR	770376	Identifier	parse_char_property		769213	0					
ANR	770377	ArgumentList	np		769213	1					
ANR	770378	Argument	np		769213	0					
ANR	770379	Identifier	np		769213	0					
ANR	770380	Argument	tok		769213	1					
ANR	770381	Identifier	tok		769213	0					
ANR	770382	Argument	src		769213	2					
ANR	770383	Identifier	src		769213	0					
ANR	770384	Argument	end		769213	3					
ANR	770385	Identifier	end		769213	0					
ANR	770386	Argument	env		769213	4					
ANR	770387	Identifier	env		769213	0					
ANR	770388	IfStatement	if ( r != 0 )		769213	34					
ANR	770389	Condition	r != 0	5263:8:118564:118569	769213	0	True				
ANR	770390	EqualityExpression	r != 0		769213	0		!=			
ANR	770391	Identifier	r		769213	0					
ANR	770392	PrimaryExpression	0		769213	1					
ANR	770393	ReturnStatement	return r ;	5263:16:118572:118580	769213	1	True				
ANR	770394	Identifier	r		769213	0					
ANR	770395	BreakStatement	break ;	5264:4:118586:118591	769213	35	True				
ANR	770396	Label	case TK_CC_OPEN :	5266:2:118596:118611	769213	36	True				
ANR	770397	Identifier	TK_CC_OPEN		769213	0					
ANR	770398	CompoundStatement		230:6:5739:5753	769213	37					
ANR	770399	IdentifierDeclStatement	CClassNode * cc ;	5268:6:118625:118639	769213	0	True				
ANR	770400	IdentifierDecl	* cc		769213	0					
ANR	770401	IdentifierDeclType	CClassNode *		769213	0					
ANR	770402	Identifier	cc		769213	1					
ANR	770403	ExpressionStatement	"r = parse_char_class ( np , tok , src , end , env )"	5270:6:118648:118692	769213	1	True				
ANR	770404	AssignmentExpression	"r = parse_char_class ( np , tok , src , end , env )"		769213	0		=			
ANR	770405	Identifier	r		769213	0					
ANR	770406	CallExpression	"parse_char_class ( np , tok , src , end , env )"		769213	1					
ANR	770407	Callee	parse_char_class		769213	0					
ANR	770408	Identifier	parse_char_class		769213	0					
ANR	770409	ArgumentList	np		769213	1					
ANR	770410	Argument	np		769213	0					
ANR	770411	Identifier	np		769213	0					
ANR	770412	Argument	tok		769213	1					
ANR	770413	Identifier	tok		769213	0					
ANR	770414	Argument	src		769213	2					
ANR	770415	Identifier	src		769213	0					
ANR	770416	Argument	end		769213	3					
ANR	770417	Identifier	end		769213	0					
ANR	770418	Argument	env		769213	4					
ANR	770419	Identifier	env		769213	0					
ANR	770420	IfStatement	if ( r != 0 )		769213	2					
ANR	770421	Condition	r != 0	5271:10:118704:118709	769213	0	True				
ANR	770422	EqualityExpression	r != 0		769213	0		!=			
ANR	770423	Identifier	r		769213	0					
ANR	770424	PrimaryExpression	0		769213	1					
ANR	770425	ReturnStatement	return r ;	5271:18:118712:118720	769213	1	True				
ANR	770426	Identifier	r		769213	0					
ANR	770427	ExpressionStatement	cc = NCCLASS ( * np )	5273:6:118729:118746	769213	3	True				
ANR	770428	AssignmentExpression	cc = NCCLASS ( * np )		769213	0		=			
ANR	770429	Identifier	cc		769213	0					
ANR	770430	CallExpression	NCCLASS ( * np )		769213	1					
ANR	770431	Callee	NCCLASS		769213	0					
ANR	770432	Identifier	NCCLASS		769213	0					
ANR	770433	ArgumentList	* np		769213	1					
ANR	770434	Argument	* np		769213	0					
ANR	770435	UnaryOperationExpression	* np		769213	0					
ANR	770436	UnaryOperator	*		769213	0					
ANR	770437	Identifier	np		769213	1					
ANR	770438	IfStatement	if ( IS_IGNORECASE ( env -> option ) )		769213	4					
ANR	770439	Condition	IS_IGNORECASE ( env -> option )	5274:10:118758:118783	769213	0	True				
ANR	770440	CallExpression	IS_IGNORECASE ( env -> option )		769213	0					
ANR	770441	Callee	IS_IGNORECASE		769213	0					
ANR	770442	Identifier	IS_IGNORECASE		769213	0					
ANR	770443	ArgumentList	env -> option		769213	1					
ANR	770444	Argument	env -> option		769213	0					
ANR	770445	PtrMemberAccess	env -> option		769213	0					
ANR	770446	Identifier	env		769213	0					
ANR	770447	Identifier	option		769213	1					
ANR	770448	CompoundStatement		237:1:5903:5925	769213	1					
ANR	770449	IdentifierDeclStatement	IApplyCaseFoldArg iarg ;	5275:1:118789:118811	769213	0	True				
ANR	770450	IdentifierDecl	iarg		769213	0					
ANR	770451	IdentifierDeclType	IApplyCaseFoldArg		769213	0					
ANR	770452	Identifier	iarg		769213	1					
ANR	770453	ExpressionStatement	iarg . env = env	5277:1:118815:118834	769213	1	True				
ANR	770454	AssignmentExpression	iarg . env = env		769213	0		=			
ANR	770455	MemberAccess	iarg . env		769213	0					
ANR	770456	Identifier	iarg		769213	0					
ANR	770457	Identifier	env		769213	1					
ANR	770458	Identifier	env		769213	1					
ANR	770459	ExpressionStatement	iarg . cc = cc	5278:1:118837:118855	769213	2	True				
ANR	770460	AssignmentExpression	iarg . cc = cc		769213	0		=			
ANR	770461	MemberAccess	iarg . cc		769213	0					
ANR	770462	Identifier	iarg		769213	0					
ANR	770463	Identifier	cc		769213	1					
ANR	770464	Identifier	cc		769213	1					
ANR	770465	ExpressionStatement	iarg . alt_root = NULL_NODE	5279:1:118858:118883	769213	3	True				
ANR	770466	AssignmentExpression	iarg . alt_root = NULL_NODE		769213	0		=			
ANR	770467	MemberAccess	iarg . alt_root		769213	0					
ANR	770468	Identifier	iarg		769213	0					
ANR	770469	Identifier	alt_root		769213	1					
ANR	770470	Identifier	NULL_NODE		769213	1					
ANR	770471	ExpressionStatement	iarg . ptail = & ( iarg . alt_root )	5280:1:118886:118918	769213	4	True				
ANR	770472	AssignmentExpression	iarg . ptail = & ( iarg . alt_root )		769213	0		=			
ANR	770473	MemberAccess	iarg . ptail		769213	0					
ANR	770474	Identifier	iarg		769213	0					
ANR	770475	Identifier	ptail		769213	1					
ANR	770476	UnaryOperationExpression	& ( iarg . alt_root )		769213	1					
ANR	770477	UnaryOperator	&		769213	0					
ANR	770478	MemberAccess	iarg . alt_root		769213	1					
ANR	770479	Identifier	iarg		769213	0					
ANR	770480	Identifier	alt_root		769213	1					
ANR	770481	ExpressionStatement	"r = ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"	5282:1:118922:119015	769213	5	True				
ANR	770482	AssignmentExpression	"r = ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"		769213	0		=			
ANR	770483	Identifier	r		769213	0					
ANR	770484	CallExpression	"ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"		769213	1					
ANR	770485	Callee	ONIGENC_APPLY_ALL_CASE_FOLD		769213	0					
ANR	770486	Identifier	ONIGENC_APPLY_ALL_CASE_FOLD		769213	0					
ANR	770487	ArgumentList	env -> enc		769213	1					
ANR	770488	Argument	env -> enc		769213	0					
ANR	770489	PtrMemberAccess	env -> enc		769213	0					
ANR	770490	Identifier	env		769213	0					
ANR	770491	Identifier	enc		769213	1					
ANR	770492	Argument	env -> case_fold_flag		769213	1					
ANR	770493	PtrMemberAccess	env -> case_fold_flag		769213	0					
ANR	770494	Identifier	env		769213	0					
ANR	770495	Identifier	case_fold_flag		769213	1					
ANR	770496	Argument	i_apply_case_fold		769213	2					
ANR	770497	Identifier	i_apply_case_fold		769213	0					
ANR	770498	Argument	& iarg		769213	3					
ANR	770499	UnaryOperationExpression	& iarg		769213	0					
ANR	770500	UnaryOperator	&		769213	0					
ANR	770501	Identifier	iarg		769213	1					
ANR	770502	IfStatement	if ( r != 0 )		769213	6					
ANR	770503	Condition	r != 0	5284:5:119022:119027	769213	0	True				
ANR	770504	EqualityExpression	r != 0		769213	0		!=			
ANR	770505	Identifier	r		769213	0					
ANR	770506	PrimaryExpression	0		769213	1					
ANR	770507	CompoundStatement		246:13:6144:6144	769213	1					
ANR	770508	ExpressionStatement	onig_node_free ( iarg . alt_root )	5285:3:119035:119064	769213	0	True				
ANR	770509	CallExpression	onig_node_free ( iarg . alt_root )		769213	0					
ANR	770510	Callee	onig_node_free		769213	0					
ANR	770511	Identifier	onig_node_free		769213	0					
ANR	770512	ArgumentList	iarg . alt_root		769213	1					
ANR	770513	Argument	iarg . alt_root		769213	0					
ANR	770514	MemberAccess	iarg . alt_root		769213	0					
ANR	770515	Identifier	iarg		769213	0					
ANR	770516	Identifier	alt_root		769213	1					
ANR	770517	ReturnStatement	return r ;	5286:3:119069:119077	769213	1	True				
ANR	770518	Identifier	r		769213	0					
ANR	770519	IfStatement	if ( IS_NOT_NULL ( iarg . alt_root ) )		769213	7					
ANR	770520	Condition	IS_NOT_NULL ( iarg . alt_root )	5288:5:119087:119112	769213	0	True				
ANR	770521	CallExpression	IS_NOT_NULL ( iarg . alt_root )		769213	0					
ANR	770522	Callee	IS_NOT_NULL		769213	0					
ANR	770523	Identifier	IS_NOT_NULL		769213	0					
ANR	770524	ArgumentList	iarg . alt_root		769213	1					
ANR	770525	Argument	iarg . alt_root		769213	0					
ANR	770526	MemberAccess	iarg . alt_root		769213	0					
ANR	770527	Identifier	iarg		769213	0					
ANR	770528	Identifier	alt_root		769213	1					
ANR	770529	CompoundStatement		251:10:6241:6291	769213	1					
ANR	770530	IdentifierDeclStatement	"Node * work = onig_node_new_alt ( * np , iarg . alt_root ) ;"	5289:10:119127:119177	769213	0	True				
ANR	770531	IdentifierDecl	"* work = onig_node_new_alt ( * np , iarg . alt_root )"		769213	0					
ANR	770532	IdentifierDeclType	Node *		769213	0					
ANR	770533	Identifier	work		769213	1					
ANR	770534	AssignmentExpression	"* work = onig_node_new_alt ( * np , iarg . alt_root )"		769213	2		=			
ANR	770535	Identifier	work		769213	0					
ANR	770536	CallExpression	"onig_node_new_alt ( * np , iarg . alt_root )"		769213	1					
ANR	770537	Callee	onig_node_new_alt		769213	0					
ANR	770538	Identifier	onig_node_new_alt		769213	0					
ANR	770539	ArgumentList	* np		769213	1					
ANR	770540	Argument	* np		769213	0					
ANR	770541	UnaryOperationExpression	* np		769213	0					
ANR	770542	UnaryOperator	*		769213	0					
ANR	770543	Identifier	np		769213	1					
ANR	770544	Argument	iarg . alt_root		769213	1					
ANR	770545	MemberAccess	iarg . alt_root		769213	0					
ANR	770546	Identifier	iarg		769213	0					
ANR	770547	Identifier	alt_root		769213	1					
ANR	770548	IfStatement	if ( IS_NULL ( work ) )		769213	1					
ANR	770549	Condition	IS_NULL ( work )	5290:14:119193:119205	769213	0	True				
ANR	770550	CallExpression	IS_NULL ( work )		769213	0					
ANR	770551	Callee	IS_NULL		769213	0					
ANR	770552	Identifier	IS_NULL		769213	0					
ANR	770553	ArgumentList	work		769213	1					
ANR	770554	Argument	work		769213	0					
ANR	770555	Identifier	work		769213	0					
ANR	770556	CompoundStatement		252:29:6322:6322	769213	1					
ANR	770557	ExpressionStatement	onig_node_free ( iarg . alt_root )	5291:12:119222:119251	769213	0	True				
ANR	770558	CallExpression	onig_node_free ( iarg . alt_root )		769213	0					
ANR	770559	Callee	onig_node_free		769213	0					
ANR	770560	Identifier	onig_node_free		769213	0					
ANR	770561	ArgumentList	iarg . alt_root		769213	1					
ANR	770562	Argument	iarg . alt_root		769213	0					
ANR	770563	MemberAccess	iarg . alt_root		769213	0					
ANR	770564	Identifier	iarg		769213	0					
ANR	770565	Identifier	alt_root		769213	1					
ANR	770566	ReturnStatement	return ONIGERR_MEMORY ;	5292:12:119265:119286	769213	1	True				
ANR	770567	Identifier	ONIGERR_MEMORY		769213	0					
ANR	770568	ExpressionStatement	* np = work	5294:10:119310:119320	769213	2	True				
ANR	770569	AssignmentExpression	* np = work		769213	0		=			
ANR	770570	UnaryOperationExpression	* np		769213	0					
ANR	770571	UnaryOperator	*		769213	0					
ANR	770572	Identifier	np		769213	1					
ANR	770573	Identifier	work		769213	1					
ANR	770574	BreakStatement	break ;	5298:4:119343:119348	769213	38	True				
ANR	770575	Label	case TK_ANYCHAR :	5300:2:119353:119368	769213	39	True				
ANR	770576	Identifier	TK_ANYCHAR		769213	0					
ANR	770577	ExpressionStatement	* np = node_new_anychar ( )	5301:4:119374:119398	769213	40	True				
ANR	770578	AssignmentExpression	* np = node_new_anychar ( )		769213	0		=			
ANR	770579	UnaryOperationExpression	* np		769213	0					
ANR	770580	UnaryOperator	*		769213	0					
ANR	770581	Identifier	np		769213	1					
ANR	770582	CallExpression	node_new_anychar ( )		769213	1					
ANR	770583	Callee	node_new_anychar		769213	0					
ANR	770584	Identifier	node_new_anychar		769213	0					
ANR	770585	ArgumentList			769213	1					
ANR	770586	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5302:4:119404:119433	769213	41	True				
ANR	770587	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	770588	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770589	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770590	ArgumentList	* np		769213	1					
ANR	770591	Argument	* np		769213	0					
ANR	770592	UnaryOperationExpression	* np		769213	0					
ANR	770593	UnaryOperator	*		769213	0					
ANR	770594	Identifier	np		769213	1					
ANR	770595	BreakStatement	break ;	5303:4:119439:119444	769213	42	True				
ANR	770596	Label	case TK_ANYCHAR_ANYTIME :	5305:2:119449:119472	769213	43	True				
ANR	770597	Identifier	TK_ANYCHAR_ANYTIME		769213	0					
ANR	770598	ExpressionStatement	* np = node_new_anychar ( )	5306:4:119478:119502	769213	44	True				
ANR	770599	AssignmentExpression	* np = node_new_anychar ( )		769213	0		=			
ANR	770600	UnaryOperationExpression	* np		769213	0					
ANR	770601	UnaryOperator	*		769213	0					
ANR	770602	Identifier	np		769213	1					
ANR	770603	CallExpression	node_new_anychar ( )		769213	1					
ANR	770604	Callee	node_new_anychar		769213	0					
ANR	770605	Identifier	node_new_anychar		769213	0					
ANR	770606	ArgumentList			769213	1					
ANR	770607	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5307:4:119508:119537	769213	45	True				
ANR	770608	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	770609	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770610	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770611	ArgumentList	* np		769213	1					
ANR	770612	Argument	* np		769213	0					
ANR	770613	UnaryOperationExpression	* np		769213	0					
ANR	770614	UnaryOperator	*		769213	0					
ANR	770615	Identifier	np		769213	1					
ANR	770616	ExpressionStatement	"qn = node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"	5308:4:119543:119590	769213	46	True				
ANR	770617	AssignmentExpression	"qn = node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"		769213	0		=			
ANR	770618	Identifier	qn		769213	0					
ANR	770619	CallExpression	"node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"		769213	1					
ANR	770620	Callee	node_new_quantifier		769213	0					
ANR	770621	Identifier	node_new_quantifier		769213	0					
ANR	770622	ArgumentList	0		769213	1					
ANR	770623	Argument	0		769213	0					
ANR	770624	PrimaryExpression	0		769213	0					
ANR	770625	Argument	REPEAT_INFINITE		769213	1					
ANR	770626	Identifier	REPEAT_INFINITE		769213	0					
ANR	770627	Argument	0		769213	2					
ANR	770628	PrimaryExpression	0		769213	0					
ANR	770629	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( qn )	5309:4:119596:119624	769213	47	True				
ANR	770630	CallExpression	CHECK_NULL_RETURN_MEMERR ( qn )		769213	0					
ANR	770631	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770632	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770633	ArgumentList	qn		769213	1					
ANR	770634	Argument	qn		769213	0					
ANR	770635	Identifier	qn		769213	0					
ANR	770636	ExpressionStatement	NQTFR ( qn ) -> target = * np	5310:4:119630:119653	769213	48	True				
ANR	770637	AssignmentExpression	NQTFR ( qn ) -> target = * np		769213	0		=			
ANR	770638	PtrMemberAccess	NQTFR ( qn ) -> target		769213	0					
ANR	770639	CallExpression	NQTFR ( qn )		769213	0					
ANR	770640	Callee	NQTFR		769213	0					
ANR	770641	Identifier	NQTFR		769213	0					
ANR	770642	ArgumentList	qn		769213	1					
ANR	770643	Argument	qn		769213	0					
ANR	770644	Identifier	qn		769213	0					
ANR	770645	Identifier	target		769213	1					
ANR	770646	UnaryOperationExpression	* np		769213	1					
ANR	770647	UnaryOperator	*		769213	0					
ANR	770648	Identifier	np		769213	1					
ANR	770649	ExpressionStatement	* np = qn	5311:4:119659:119667	769213	49	True				
ANR	770650	AssignmentExpression	* np = qn		769213	0		=			
ANR	770651	UnaryOperationExpression	* np		769213	0					
ANR	770652	UnaryOperator	*		769213	0					
ANR	770653	Identifier	np		769213	1					
ANR	770654	Identifier	qn		769213	1					
ANR	770655	BreakStatement	break ;	5312:4:119673:119678	769213	50	True				
ANR	770656	Label	case TK_BACKREF :	5314:2:119683:119698	769213	51	True				
ANR	770657	Identifier	TK_BACKREF		769213	0					
ANR	770658	ExpressionStatement	len = tok -> u . backref . num	5315:4:119704:119728	769213	52	True				
ANR	770659	AssignmentExpression	len = tok -> u . backref . num		769213	0		=			
ANR	770660	Identifier	len		769213	0					
ANR	770661	MemberAccess	tok -> u . backref . num		769213	1					
ANR	770662	MemberAccess	tok -> u . backref		769213	0					
ANR	770663	PtrMemberAccess	tok -> u		769213	0					
ANR	770664	Identifier	tok		769213	0					
ANR	770665	Identifier	u		769213	1					
ANR	770666	Identifier	backref		769213	1					
ANR	770667	Identifier	num		769213	1					
ANR	770668	Statement	*	5316:4:119734:119734	769213	53	True				
ANR	770669	Statement	np	5316:5:119735:119736	769213	54	True				
ANR	770670	Statement	=	5316:8:119738:119738	769213	55	True				
ANR	770671	Statement	node_new_backref	5316:10:119740:119755	769213	56	True				
ANR	770672	Statement	(	5316:26:119756:119756	769213	57	True				
ANR	770673	Statement	len	5316:27:119757:119759	769213	58	True				
ANR	770674	Statement	","	5316:30:119760:119760	769213	59	True				
ANR	770675	Statement	(	5317:5:119767:119767	769213	60	True				
ANR	770676	Statement	len	5317:6:119768:119770	769213	61	True				
ANR	770677	Statement	>	5317:10:119772:119772	769213	62	True				
ANR	770678	Statement	1	5317:12:119774:119774	769213	63	True				
ANR	770679	Statement	?	5317:14:119776:119776	769213	64	True				
ANR	770680	Statement	tok	5317:16:119778:119780	769213	65	True				
ANR	770681	Statement	->	5317:19:119781:119782	769213	66	True				
ANR	770682	Statement	u	5317:21:119783:119783	769213	67	True				
ANR	770683	Statement	.	5317:22:119784:119784	769213	68	True				
ANR	770684	Statement	backref	5317:23:119785:119791	769213	69	True				
ANR	770685	Statement	.	5317:30:119792:119792	769213	70	True				
ANR	770686	Label	refs :	5317:31:119793:119798	769213	71	True				
ANR	770687	Identifier	refs		769213	0					
ANR	770688	Statement	&	5317:38:119800:119800	769213	72	True				
ANR	770689	Statement	(	5317:39:119801:119801	769213	73	True				
ANR	770690	Statement	tok	5317:40:119802:119804	769213	74	True				
ANR	770691	Statement	->	5317:43:119805:119806	769213	75	True				
ANR	770692	Statement	u	5317:45:119807:119807	769213	76	True				
ANR	770693	Statement	.	5317:46:119808:119808	769213	77	True				
ANR	770694	Statement	backref	5317:47:119809:119815	769213	78	True				
ANR	770695	Statement	.	5317:54:119816:119816	769213	79	True				
ANR	770696	Statement	ref1	5317:55:119817:119820	769213	80	True				
ANR	770697	Statement	)	5317:59:119821:119821	769213	81	True				
ANR	770698	Statement	)	5317:60:119822:119822	769213	82	True				
ANR	770699	Statement	","	5317:61:119823:119823	769213	83	True				
ANR	770700	Statement	tok	5318:6:119831:119833	769213	84	True				
ANR	770701	Statement	->	5318:9:119834:119835	769213	85	True				
ANR	770702	Statement	u	5318:11:119836:119836	769213	86	True				
ANR	770703	Statement	.	5318:12:119837:119837	769213	87	True				
ANR	770704	Statement	backref	5318:13:119838:119844	769213	88	True				
ANR	770705	Statement	.	5318:20:119845:119845	769213	89	True				
ANR	770706	Statement	by_name	5318:21:119846:119852	769213	90	True				
ANR	770707	Statement	","	5318:28:119853:119853	769213	91	True				
ANR	770708	Statement	tok	5320:6:119891:119893	769213	92	True				
ANR	770709	Statement	->	5320:9:119894:119895	769213	93	True				
ANR	770710	Statement	u	5320:11:119896:119896	769213	94	True				
ANR	770711	Statement	.	5320:12:119897:119897	769213	95	True				
ANR	770712	Statement	backref	5320:13:119898:119904	769213	96	True				
ANR	770713	Statement	.	5320:20:119905:119905	769213	97	True				
ANR	770714	Statement	exist_level	5320:21:119906:119916	769213	98	True				
ANR	770715	Statement	","	5320:32:119917:119917	769213	99	True				
ANR	770716	Statement	tok	5321:6:119925:119927	769213	100	True				
ANR	770717	Statement	->	5321:9:119928:119929	769213	101	True				
ANR	770718	Statement	u	5321:11:119930:119930	769213	102	True				
ANR	770719	Statement	.	5321:12:119931:119931	769213	103	True				
ANR	770720	Statement	backref	5321:13:119932:119938	769213	104	True				
ANR	770721	Statement	.	5321:20:119939:119939	769213	105	True				
ANR	770722	Statement	level	5321:21:119940:119944	769213	106	True				
ANR	770723	Statement	","	5321:26:119945:119945	769213	107	True				
ANR	770724	Statement	env	5323:6:119960:119962	769213	108	True				
ANR	770725	Statement	)	5323:9:119963:119963	769213	109	True				
ANR	770726	ExpressionStatement		5323:10:119964:119964	769213	110	True				
ANR	770727	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5324:4:119970:119999	769213	111	True				
ANR	770728	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	770729	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770730	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770731	ArgumentList	* np		769213	1					
ANR	770732	Argument	* np		769213	0					
ANR	770733	UnaryOperationExpression	* np		769213	0					
ANR	770734	UnaryOperator	*		769213	0					
ANR	770735	Identifier	np		769213	1					
ANR	770736	BreakStatement	break ;	5325:4:120005:120010	769213	112	True				
ANR	770737	Label	case TK_CALL :	5328:2:120038:120050	769213	113	True				
ANR	770738	Identifier	TK_CALL		769213	0					
ANR	770739	CompoundStatement		292:6:7178:7205	769213	114					
ANR	770740	IdentifierDeclStatement	int gnum = tok -> u . call . gnum ;	5330:6:120064:120091	769213	0	True				
ANR	770741	IdentifierDecl	gnum = tok -> u . call . gnum		769213	0					
ANR	770742	IdentifierDeclType	int		769213	0					
ANR	770743	Identifier	gnum		769213	1					
ANR	770744	AssignmentExpression	gnum = tok -> u . call . gnum		769213	2		=			
ANR	770745	Identifier	gnum		769213	0					
ANR	770746	MemberAccess	tok -> u . call . gnum		769213	1					
ANR	770747	MemberAccess	tok -> u . call		769213	0					
ANR	770748	PtrMemberAccess	tok -> u		769213	0					
ANR	770749	Identifier	tok		769213	0					
ANR	770750	Identifier	u		769213	1					
ANR	770751	Identifier	call		769213	1					
ANR	770752	Identifier	gnum		769213	1					
ANR	770753	IfStatement	if ( gnum < 0 )		769213	1					
ANR	770754	Condition	gnum < 0	5332:10:120104:120111	769213	0	True				
ANR	770755	RelationalExpression	gnum < 0		769213	0		<			
ANR	770756	Identifier	gnum		769213	0					
ANR	770757	PrimaryExpression	0		769213	1					
ANR	770758	CompoundStatement		294:20:7228:7228	769213	1					
ANR	770759	ExpressionStatement	"gnum = BACKREF_REL_TO_ABS ( gnum , env )"	5333:1:120117:120153	769213	0	True				
ANR	770760	AssignmentExpression	"gnum = BACKREF_REL_TO_ABS ( gnum , env )"		769213	0		=			
ANR	770761	Identifier	gnum		769213	0					
ANR	770762	CallExpression	"BACKREF_REL_TO_ABS ( gnum , env )"		769213	1					
ANR	770763	Callee	BACKREF_REL_TO_ABS		769213	0					
ANR	770764	Identifier	BACKREF_REL_TO_ABS		769213	0					
ANR	770765	ArgumentList	gnum		769213	1					
ANR	770766	Argument	gnum		769213	0					
ANR	770767	Identifier	gnum		769213	0					
ANR	770768	Argument	env		769213	1					
ANR	770769	Identifier	env		769213	0					
ANR	770770	IfStatement	if ( gnum <= 0 )		769213	1					
ANR	770771	Condition	gnum <= 0	5334:5:120160:120168	769213	0	True				
ANR	770772	RelationalExpression	gnum <= 0		769213	0		<=			
ANR	770773	Identifier	gnum		769213	0					
ANR	770774	PrimaryExpression	0		769213	1					
ANR	770775	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	5335:3:120174:120204	769213	1	True				
ANR	770776	Identifier	ONIGERR_INVALID_BACKREF		769213	0					
ANR	770777	ExpressionStatement	"* np = node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"	5337:6:120220:120285	769213	2	True				
ANR	770778	AssignmentExpression	"* np = node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"		769213	0		=			
ANR	770779	UnaryOperationExpression	* np		769213	0					
ANR	770780	UnaryOperator	*		769213	0					
ANR	770781	Identifier	np		769213	1					
ANR	770782	CallExpression	"node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"		769213	1					
ANR	770783	Callee	node_new_call		769213	0					
ANR	770784	Identifier	node_new_call		769213	0					
ANR	770785	ArgumentList	tok -> u . call . name		769213	1					
ANR	770786	Argument	tok -> u . call . name		769213	0					
ANR	770787	MemberAccess	tok -> u . call . name		769213	0					
ANR	770788	MemberAccess	tok -> u . call		769213	0					
ANR	770789	PtrMemberAccess	tok -> u		769213	0					
ANR	770790	Identifier	tok		769213	0					
ANR	770791	Identifier	u		769213	1					
ANR	770792	Identifier	call		769213	1					
ANR	770793	Identifier	name		769213	1					
ANR	770794	Argument	tok -> u . call . name_end		769213	1					
ANR	770795	MemberAccess	tok -> u . call . name_end		769213	0					
ANR	770796	MemberAccess	tok -> u . call		769213	0					
ANR	770797	PtrMemberAccess	tok -> u		769213	0					
ANR	770798	Identifier	tok		769213	0					
ANR	770799	Identifier	u		769213	1					
ANR	770800	Identifier	call		769213	1					
ANR	770801	Identifier	name_end		769213	1					
ANR	770802	Argument	gnum		769213	2					
ANR	770803	Identifier	gnum		769213	0					
ANR	770804	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5338:6:120293:120322	769213	3	True				
ANR	770805	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		769213	0					
ANR	770806	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770807	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770808	ArgumentList	* np		769213	1					
ANR	770809	Argument	* np		769213	0					
ANR	770810	UnaryOperationExpression	* np		769213	0					
ANR	770811	UnaryOperator	*		769213	0					
ANR	770812	Identifier	np		769213	1					
ANR	770813	ExpressionStatement	env -> num_call ++	5339:6:120330:120345	769213	4	True				
ANR	770814	PostIncDecOperationExpression	env -> num_call ++		769213	0					
ANR	770815	PtrMemberAccess	env -> num_call		769213	0					
ANR	770816	Identifier	env		769213	0					
ANR	770817	Identifier	num_call		769213	1					
ANR	770818	IncDec	++		769213	1					
ANR	770819	BreakStatement	break ;	5341:4:120357:120362	769213	115	True				
ANR	770820	Label	case TK_ANCHOR :	5344:2:120374:120388	769213	116	True				
ANR	770821	Identifier	TK_ANCHOR		769213	0					
ANR	770822	ExpressionStatement	* np = onig_node_new_anchor ( tok -> u . anchor )	5345:4:120394:120435	769213	117	True				
ANR	770823	AssignmentExpression	* np = onig_node_new_anchor ( tok -> u . anchor )		769213	0		=			
ANR	770824	UnaryOperationExpression	* np		769213	0					
ANR	770825	UnaryOperator	*		769213	0					
ANR	770826	Identifier	np		769213	1					
ANR	770827	CallExpression	onig_node_new_anchor ( tok -> u . anchor )		769213	1					
ANR	770828	Callee	onig_node_new_anchor		769213	0					
ANR	770829	Identifier	onig_node_new_anchor		769213	0					
ANR	770830	ArgumentList	tok -> u . anchor		769213	1					
ANR	770831	Argument	tok -> u . anchor		769213	0					
ANR	770832	MemberAccess	tok -> u . anchor		769213	0					
ANR	770833	PtrMemberAccess	tok -> u		769213	0					
ANR	770834	Identifier	tok		769213	0					
ANR	770835	Identifier	u		769213	1					
ANR	770836	Identifier	anchor		769213	1					
ANR	770837	BreakStatement	break ;	5346:4:120441:120446	769213	118	True				
ANR	770838	Label	case TK_OP_REPEAT :	5348:2:120451:120468	769213	119	True				
ANR	770839	Identifier	TK_OP_REPEAT		769213	0					
ANR	770840	Label	case TK_INTERVAL :	5349:2:120472:120488	769213	120	True				
ANR	770841	Identifier	TK_INTERVAL		769213	0					
ANR	770842	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS ) )"		769213	121					
ANR	770843	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS )"	5350:8:120498:120557	769213	0	True				
ANR	770844	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS )"		769213	0					
ANR	770845	Callee	IS_SYNTAX_BV		769213	0					
ANR	770846	Identifier	IS_SYNTAX_BV		769213	0					
ANR	770847	ArgumentList	env -> syntax		769213	1					
ANR	770848	Argument	env -> syntax		769213	0					
ANR	770849	PtrMemberAccess	env -> syntax		769213	0					
ANR	770850	Identifier	env		769213	0					
ANR	770851	Identifier	syntax		769213	1					
ANR	770852	Argument	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		769213	1					
ANR	770853	Identifier	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		769213	0					
ANR	770854	CompoundStatement		312:70:7674:7674	769213	1					
ANR	770855	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS ) )"		769213	0					
ANR	770856	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS )"	5351:10:120572:120633	769213	0	True				
ANR	770857	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS )"		769213	0					
ANR	770858	Callee	IS_SYNTAX_BV		769213	0					
ANR	770859	Identifier	IS_SYNTAX_BV		769213	0					
ANR	770860	ArgumentList	env -> syntax		769213	1					
ANR	770861	Argument	env -> syntax		769213	0					
ANR	770862	PtrMemberAccess	env -> syntax		769213	0					
ANR	770863	Identifier	env		769213	0					
ANR	770864	Identifier	syntax		769213	1					
ANR	770865	Argument	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		769213	1					
ANR	770866	Identifier	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		769213	0					
ANR	770867	ReturnStatement	return ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED ;	5352:1:120637:120691	769213	1	True				
ANR	770868	Identifier	ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED		769213	0					
ANR	770869	ElseStatement	else		769213	0					
ANR	770870	ExpressionStatement	* np = node_new_empty ( )	5354:1:120705:120727	769213	0	True				
ANR	770871	AssignmentExpression	* np = node_new_empty ( )		769213	0		=			
ANR	770872	UnaryOperationExpression	* np		769213	0					
ANR	770873	UnaryOperator	*		769213	0					
ANR	770874	Identifier	np		769213	1					
ANR	770875	CallExpression	node_new_empty ( )		769213	1					
ANR	770876	Callee	node_new_empty		769213	0					
ANR	770877	Identifier	node_new_empty		769213	0					
ANR	770878	ArgumentList			769213	1					
ANR	770879	ElseStatement	else		769213	0					
ANR	770880	CompoundStatement		318:9:7858:7858	769213	0					
ANR	770881	GotoStatement	goto tk_byte ;	5357:6:120752:120764	769213	0	True				
ANR	770882	Identifier	tk_byte		769213	0					
ANR	770883	BreakStatement	break ;	5359:4:120776:120781	769213	122	True				
ANR	770884	Label	default :	5361:2:120786:120793	769213	123	True				
ANR	770885	Identifier	default		769213	0					
ANR	770886	ReturnStatement	return ONIGERR_PARSER_BUG ;	5362:4:120799:120824	769213	124	True				
ANR	770887	Identifier	ONIGERR_PARSER_BUG		769213	0					
ANR	770888	BreakStatement	break ;	5363:4:120830:120835	769213	125	True				
ANR	770889	CompoundStatement		328:2:7958:7958	769213	6					
ANR	770890	ExpressionStatement	targetp = np	5367:4:120850:120862	769213	0	True				
ANR	770891	AssignmentExpression	targetp = np		769213	0		=			
ANR	770892	Identifier	targetp		769213	0					
ANR	770893	Identifier	np		769213	1					
ANR	770894	Label	re_entry :	5369:2:120867:120875	769213	1	True				
ANR	770895	Identifier	re_entry		769213	0					
ANR	770896	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5370:4:120881:120916	769213	2	True				
ANR	770897	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		769213	0		=			
ANR	770898	Identifier	r		769213	0					
ANR	770899	CallExpression	"fetch_token ( tok , src , end , env )"		769213	1					
ANR	770900	Callee	fetch_token		769213	0					
ANR	770901	Identifier	fetch_token		769213	0					
ANR	770902	ArgumentList	tok		769213	1					
ANR	770903	Argument	tok		769213	0					
ANR	770904	Identifier	tok		769213	0					
ANR	770905	Argument	src		769213	1					
ANR	770906	Identifier	src		769213	0					
ANR	770907	Argument	end		769213	2					
ANR	770908	Identifier	end		769213	0					
ANR	770909	Argument	env		769213	3					
ANR	770910	Identifier	env		769213	0					
ANR	770911	IfStatement	if ( r < 0 )		769213	3					
ANR	770912	Condition	r < 0	5371:8:120926:120930	769213	0	True				
ANR	770913	RelationalExpression	r < 0		769213	0		<			
ANR	770914	Identifier	r		769213	0					
ANR	770915	PrimaryExpression	0		769213	1					
ANR	770916	ReturnStatement	return r ;	5371:15:120933:120941	769213	1	True				
ANR	770917	Identifier	r		769213	0					
ANR	770918	Label	repeat :	5373:2:120946:120952	769213	4	True				
ANR	770919	Identifier	repeat		769213	0					
ANR	770920	IfStatement	if ( r == TK_OP_REPEAT || r == TK_INTERVAL )		769213	5					
ANR	770921	Condition	r == TK_OP_REPEAT || r == TK_INTERVAL	5374:8:120962:120998	769213	0	True				
ANR	770922	OrExpression	r == TK_OP_REPEAT || r == TK_INTERVAL		769213	0		||			
ANR	770923	EqualityExpression	r == TK_OP_REPEAT		769213	0		==			
ANR	770924	Identifier	r		769213	0					
ANR	770925	Identifier	TK_OP_REPEAT		769213	1					
ANR	770926	EqualityExpression	r == TK_INTERVAL		769213	1		==			
ANR	770927	Identifier	r		769213	0					
ANR	770928	Identifier	TK_INTERVAL		769213	1					
ANR	770929	CompoundStatement		336:47:8115:8115	769213	1					
ANR	770930	IfStatement	if ( is_invalid_quantifier_target ( * targetp ) )		769213	0					
ANR	770931	Condition	is_invalid_quantifier_target ( * targetp )	5375:10:121013:121050	769213	0	True				
ANR	770932	CallExpression	is_invalid_quantifier_target ( * targetp )		769213	0					
ANR	770933	Callee	is_invalid_quantifier_target		769213	0					
ANR	770934	Identifier	is_invalid_quantifier_target		769213	0					
ANR	770935	ArgumentList	* targetp		769213	1					
ANR	770936	Argument	* targetp		769213	0					
ANR	770937	UnaryOperationExpression	* targetp		769213	0					
ANR	770938	UnaryOperator	*		769213	0					
ANR	770939	Identifier	targetp		769213	1					
ANR	770940	ReturnStatement	return ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID ;	5376:1:121054:121102	769213	1	True				
ANR	770941	Identifier	ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID		769213	0					
ANR	770942	ExpressionStatement	"qn = node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"	5378:6:121111:121215	769213	1	True				
ANR	770943	AssignmentExpression	"qn = node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"		769213	0		=			
ANR	770944	Identifier	qn		769213	0					
ANR	770945	CallExpression	"node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"		769213	1					
ANR	770946	Callee	node_new_quantifier		769213	0					
ANR	770947	Identifier	node_new_quantifier		769213	0					
ANR	770948	ArgumentList	tok -> u . repeat . lower		769213	1					
ANR	770949	Argument	tok -> u . repeat . lower		769213	0					
ANR	770950	MemberAccess	tok -> u . repeat . lower		769213	0					
ANR	770951	MemberAccess	tok -> u . repeat		769213	0					
ANR	770952	PtrMemberAccess	tok -> u		769213	0					
ANR	770953	Identifier	tok		769213	0					
ANR	770954	Identifier	u		769213	1					
ANR	770955	Identifier	repeat		769213	1					
ANR	770956	Identifier	lower		769213	1					
ANR	770957	Argument	tok -> u . repeat . upper		769213	1					
ANR	770958	MemberAccess	tok -> u . repeat . upper		769213	0					
ANR	770959	MemberAccess	tok -> u . repeat		769213	0					
ANR	770960	PtrMemberAccess	tok -> u		769213	0					
ANR	770961	Identifier	tok		769213	0					
ANR	770962	Identifier	u		769213	1					
ANR	770963	Identifier	repeat		769213	1					
ANR	770964	Identifier	upper		769213	1					
ANR	770965	Argument	r == TK_INTERVAL ? 1 : 0		769213	2					
ANR	770966	ConditionalExpression	r == TK_INTERVAL ? 1 : 0		769213	0					
ANR	770967	Condition	r == TK_INTERVAL		769213	0					
ANR	770968	EqualityExpression	r == TK_INTERVAL		769213	0		==			
ANR	770969	Identifier	r		769213	0					
ANR	770970	Identifier	TK_INTERVAL		769213	1					
ANR	770971	PrimaryExpression	1		769213	1					
ANR	770972	PrimaryExpression	0		769213	2					
ANR	770973	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( qn )	5380:6:121223:121251	769213	2	True				
ANR	770974	CallExpression	CHECK_NULL_RETURN_MEMERR ( qn )		769213	0					
ANR	770975	Callee	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770976	Identifier	CHECK_NULL_RETURN_MEMERR		769213	0					
ANR	770977	ArgumentList	qn		769213	1					
ANR	770978	Argument	qn		769213	0					
ANR	770979	Identifier	qn		769213	0					
ANR	770980	ExpressionStatement	NQTFR ( qn ) -> greedy = tok -> u . repeat . greedy	5381:6:121259:121299	769213	3	True				
ANR	770981	AssignmentExpression	NQTFR ( qn ) -> greedy = tok -> u . repeat . greedy		769213	0		=			
ANR	770982	PtrMemberAccess	NQTFR ( qn ) -> greedy		769213	0					
ANR	770983	CallExpression	NQTFR ( qn )		769213	0					
ANR	770984	Callee	NQTFR		769213	0					
ANR	770985	Identifier	NQTFR		769213	0					
ANR	770986	ArgumentList	qn		769213	1					
ANR	770987	Argument	qn		769213	0					
ANR	770988	Identifier	qn		769213	0					
ANR	770989	Identifier	greedy		769213	1					
ANR	770990	MemberAccess	tok -> u . repeat . greedy		769213	1					
ANR	770991	MemberAccess	tok -> u . repeat		769213	0					
ANR	770992	PtrMemberAccess	tok -> u		769213	0					
ANR	770993	Identifier	tok		769213	0					
ANR	770994	Identifier	u		769213	1					
ANR	770995	Identifier	repeat		769213	1					
ANR	770996	Identifier	greedy		769213	1					
ANR	770997	ExpressionStatement	"r = set_quantifier ( qn , * targetp , group , env )"	5382:6:121307:121351	769213	4	True				
ANR	770998	AssignmentExpression	"r = set_quantifier ( qn , * targetp , group , env )"		769213	0		=			
ANR	770999	Identifier	r		769213	0					
ANR	771000	CallExpression	"set_quantifier ( qn , * targetp , group , env )"		769213	1					
ANR	771001	Callee	set_quantifier		769213	0					
ANR	771002	Identifier	set_quantifier		769213	0					
ANR	771003	ArgumentList	qn		769213	1					
ANR	771004	Argument	qn		769213	0					
ANR	771005	Identifier	qn		769213	0					
ANR	771006	Argument	* targetp		769213	1					
ANR	771007	UnaryOperationExpression	* targetp		769213	0					
ANR	771008	UnaryOperator	*		769213	0					
ANR	771009	Identifier	targetp		769213	1					
ANR	771010	Argument	group		769213	2					
ANR	771011	Identifier	group		769213	0					
ANR	771012	Argument	env		769213	3					
ANR	771013	Identifier	env		769213	0					
ANR	771014	IfStatement	if ( r < 0 )		769213	5					
ANR	771015	Condition	r < 0	5383:10:121363:121367	769213	0	True				
ANR	771016	RelationalExpression	r < 0		769213	0		<			
ANR	771017	Identifier	r		769213	0					
ANR	771018	PrimaryExpression	0		769213	1					
ANR	771019	CompoundStatement		345:17:8484:8484	769213	1					
ANR	771020	ExpressionStatement	onig_node_free ( qn )	5384:1:121373:121391	769213	0	True				
ANR	771021	CallExpression	onig_node_free ( qn )		769213	0					
ANR	771022	Callee	onig_node_free		769213	0					
ANR	771023	Identifier	onig_node_free		769213	0					
ANR	771024	ArgumentList	qn		769213	1					
ANR	771025	Argument	qn		769213	0					
ANR	771026	Identifier	qn		769213	0					
ANR	771027	ReturnStatement	return r ;	5385:1:121394:121402	769213	1	True				
ANR	771028	Identifier	r		769213	0					
ANR	771029	IfStatement	if ( tok -> u . repeat . possessive != 0 )		769213	6					
ANR	771030	Condition	tok -> u . repeat . possessive != 0	5388:10:121423:121451	769213	0	True				
ANR	771031	EqualityExpression	tok -> u . repeat . possessive != 0		769213	0		!=			
ANR	771032	MemberAccess	tok -> u . repeat . possessive		769213	0					
ANR	771033	MemberAccess	tok -> u . repeat		769213	0					
ANR	771034	PtrMemberAccess	tok -> u		769213	0					
ANR	771035	Identifier	tok		769213	0					
ANR	771036	Identifier	u		769213	1					
ANR	771037	Identifier	repeat		769213	1					
ANR	771038	Identifier	possessive		769213	1					
ANR	771039	PrimaryExpression	0		769213	1					
ANR	771040	CompoundStatement		351:1:8571:8579	769213	1					
ANR	771041	IdentifierDeclStatement	Node * en ;	5389:1:121457:121465	769213	0	True				
ANR	771042	IdentifierDecl	* en		769213	0					
ANR	771043	IdentifierDeclType	Node *		769213	0					
ANR	771044	Identifier	en		769213	1					
ANR	771045	ExpressionStatement	en = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )	5390:1:121468:121513	769213	1	True				
ANR	771046	AssignmentExpression	en = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		769213	0		=			
ANR	771047	Identifier	en		769213	0					
ANR	771048	CallExpression	node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		769213	1					
ANR	771049	Callee	node_new_enclose		769213	0					
ANR	771050	Identifier	node_new_enclose		769213	0					
ANR	771051	ArgumentList	ENCLOSE_STOP_BACKTRACK		769213	1					
ANR	771052	Argument	ENCLOSE_STOP_BACKTRACK		769213	0					
ANR	771053	Identifier	ENCLOSE_STOP_BACKTRACK		769213	0					
ANR	771054	IfStatement	if ( IS_NULL ( en ) )		769213	2					
ANR	771055	Condition	IS_NULL ( en )	5391:5:121520:121530	769213	0	True				
ANR	771056	CallExpression	IS_NULL ( en )		769213	0					
ANR	771057	Callee	IS_NULL		769213	0					
ANR	771058	Identifier	IS_NULL		769213	0					
ANR	771059	ArgumentList	en		769213	1					
ANR	771060	Argument	en		769213	0					
ANR	771061	Identifier	en		769213	0					
ANR	771062	CompoundStatement		353:18:8647:8647	769213	1					
ANR	771063	ExpressionStatement	onig_node_free ( qn )	5392:3:121538:121556	769213	0	True				
ANR	771064	CallExpression	onig_node_free ( qn )		769213	0					
ANR	771065	Callee	onig_node_free		769213	0					
ANR	771066	Identifier	onig_node_free		769213	0					
ANR	771067	ArgumentList	qn		769213	1					
ANR	771068	Argument	qn		769213	0					
ANR	771069	Identifier	qn		769213	0					
ANR	771070	ReturnStatement	return ONIGERR_MEMORY ;	5393:3:121561:121582	769213	1	True				
ANR	771071	Identifier	ONIGERR_MEMORY		769213	0					
ANR	771072	ExpressionStatement	NENCLOSE ( en ) -> target = qn	5395:1:121588:121613	769213	3	True				
ANR	771073	AssignmentExpression	NENCLOSE ( en ) -> target = qn		769213	0		=			
ANR	771074	PtrMemberAccess	NENCLOSE ( en ) -> target		769213	0					
ANR	771075	CallExpression	NENCLOSE ( en )		769213	0					
ANR	771076	Callee	NENCLOSE		769213	0					
ANR	771077	Identifier	NENCLOSE		769213	0					
ANR	771078	ArgumentList	en		769213	1					
ANR	771079	Argument	en		769213	0					
ANR	771080	Identifier	en		769213	0					
ANR	771081	Identifier	target		769213	1					
ANR	771082	Identifier	qn		769213	1					
ANR	771083	ExpressionStatement	qn = en	5396:1:121616:121623	769213	4	True				
ANR	771084	AssignmentExpression	qn = en		769213	0		=			
ANR	771085	Identifier	qn		769213	0					
ANR	771086	Identifier	en		769213	1					
ANR	771087	IfStatement	if ( r == 0 )		769213	7					
ANR	771088	Condition	r == 0	5399:10:121644:121649	769213	0	True				
ANR	771089	EqualityExpression	r == 0		769213	0		==			
ANR	771090	Identifier	r		769213	0					
ANR	771091	PrimaryExpression	0		769213	1					
ANR	771092	CompoundStatement		361:18:8766:8766	769213	1					
ANR	771093	ExpressionStatement	* targetp = qn	5400:1:121655:121668	769213	0	True				
ANR	771094	AssignmentExpression	* targetp = qn		769213	0		=			
ANR	771095	UnaryOperationExpression	* targetp		769213	0					
ANR	771096	UnaryOperator	*		769213	0					
ANR	771097	Identifier	targetp		769213	1					
ANR	771098	Identifier	qn		769213	1					
ANR	771099	ElseStatement	else		769213	0					
ANR	771100	IfStatement	if ( r == 1 )		769213	0					
ANR	771101	Condition	r == 1	5402:15:121693:121698	769213	0	True				
ANR	771102	EqualityExpression	r == 1		769213	0		==			
ANR	771103	Identifier	r		769213	0					
ANR	771104	PrimaryExpression	1		769213	1					
ANR	771105	CompoundStatement		364:23:8815:8815	769213	1					
ANR	771106	ExpressionStatement	onig_node_free ( qn )	5403:1:121704:121722	769213	0	True				
ANR	771107	CallExpression	onig_node_free ( qn )		769213	0					
ANR	771108	Callee	onig_node_free		769213	0					
ANR	771109	Identifier	onig_node_free		769213	0					
ANR	771110	ArgumentList	qn		769213	1					
ANR	771111	Argument	qn		769213	0					
ANR	771112	Identifier	qn		769213	0					
ANR	771113	ElseStatement	else		769213	0					
ANR	771114	IfStatement	if ( r == 2 )		769213	0					
ANR	771115	Condition	r == 2	5405:15:121747:121752	769213	0	True				
ANR	771116	EqualityExpression	r == 2		769213	0		==			
ANR	771117	Identifier	r		769213	0					
ANR	771118	PrimaryExpression	2		769213	1					
ANR	771119	CompoundStatement		368:1:8897:8906	769213	1					
ANR	771120	IdentifierDeclStatement	Node * tmp ;	5406:1:121783:121792	769213	0	True				
ANR	771121	IdentifierDecl	* tmp		769213	0					
ANR	771122	IdentifierDeclType	Node *		769213	0					
ANR	771123	Identifier	tmp		769213	1					
ANR	771124	ExpressionStatement	"* targetp = node_new_list ( * targetp , NULL )"	5408:1:121796:121836	769213	1	True				
ANR	771125	AssignmentExpression	"* targetp = node_new_list ( * targetp , NULL )"		769213	0		=			
ANR	771126	UnaryOperationExpression	* targetp		769213	0					
ANR	771127	UnaryOperator	*		769213	0					
ANR	771128	Identifier	targetp		769213	1					
ANR	771129	CallExpression	"node_new_list ( * targetp , NULL )"		769213	1					
ANR	771130	Callee	node_new_list		769213	0					
ANR	771131	Identifier	node_new_list		769213	0					
ANR	771132	ArgumentList	* targetp		769213	1					
ANR	771133	Argument	* targetp		769213	0					
ANR	771134	UnaryOperationExpression	* targetp		769213	0					
ANR	771135	UnaryOperator	*		769213	0					
ANR	771136	Identifier	targetp		769213	1					
ANR	771137	Argument	NULL		769213	1					
ANR	771138	Identifier	NULL		769213	0					
ANR	771139	IfStatement	if ( IS_NULL ( * targetp ) )		769213	2					
ANR	771140	Condition	IS_NULL ( * targetp )	5409:5:121843:121859	769213	0	True				
ANR	771141	CallExpression	IS_NULL ( * targetp )		769213	0					
ANR	771142	Callee	IS_NULL		769213	0					
ANR	771143	Identifier	IS_NULL		769213	0					
ANR	771144	ArgumentList	* targetp		769213	1					
ANR	771145	Argument	* targetp		769213	0					
ANR	771146	UnaryOperationExpression	* targetp		769213	0					
ANR	771147	UnaryOperator	*		769213	0					
ANR	771148	Identifier	targetp		769213	1					
ANR	771149	CompoundStatement		371:24:8976:8976	769213	1					
ANR	771150	ExpressionStatement	onig_node_free ( qn )	5410:3:121867:121885	769213	0	True				
ANR	771151	CallExpression	onig_node_free ( qn )		769213	0					
ANR	771152	Callee	onig_node_free		769213	0					
ANR	771153	Identifier	onig_node_free		769213	0					
ANR	771154	ArgumentList	qn		769213	1					
ANR	771155	Argument	qn		769213	0					
ANR	771156	Identifier	qn		769213	0					
ANR	771157	ReturnStatement	return ONIGERR_MEMORY ;	5411:3:121890:121911	769213	1	True				
ANR	771158	Identifier	ONIGERR_MEMORY		769213	0					
ANR	771159	ExpressionStatement	"tmp = NCDR ( * targetp ) = node_new_list ( qn , NULL )"	5413:1:121917:121963	769213	3	True				
ANR	771160	AssignmentExpression	"tmp = NCDR ( * targetp ) = node_new_list ( qn , NULL )"		769213	0		=			
ANR	771161	Identifier	tmp		769213	0					
ANR	771162	AssignmentExpression	"NCDR ( * targetp ) = node_new_list ( qn , NULL )"		769213	1		=			
ANR	771163	CallExpression	NCDR ( * targetp )		769213	0					
ANR	771164	Callee	NCDR		769213	0					
ANR	771165	Identifier	NCDR		769213	0					
ANR	771166	ArgumentList	* targetp		769213	1					
ANR	771167	Argument	* targetp		769213	0					
ANR	771168	UnaryOperationExpression	* targetp		769213	0					
ANR	771169	UnaryOperator	*		769213	0					
ANR	771170	Identifier	targetp		769213	1					
ANR	771171	CallExpression	"node_new_list ( qn , NULL )"		769213	1					
ANR	771172	Callee	node_new_list		769213	0					
ANR	771173	Identifier	node_new_list		769213	0					
ANR	771174	ArgumentList	qn		769213	1					
ANR	771175	Argument	qn		769213	0					
ANR	771176	Identifier	qn		769213	0					
ANR	771177	Argument	NULL		769213	1					
ANR	771178	Identifier	NULL		769213	0					
ANR	771179	IfStatement	if ( IS_NULL ( tmp ) )		769213	4					
ANR	771180	Condition	IS_NULL ( tmp )	5414:5:121970:121981	769213	0	True				
ANR	771181	CallExpression	IS_NULL ( tmp )		769213	0					
ANR	771182	Callee	IS_NULL		769213	0					
ANR	771183	Identifier	IS_NULL		769213	0					
ANR	771184	ArgumentList	tmp		769213	1					
ANR	771185	Argument	tmp		769213	0					
ANR	771186	Identifier	tmp		769213	0					
ANR	771187	CompoundStatement		376:19:9098:9098	769213	1					
ANR	771188	ExpressionStatement	onig_node_free ( qn )	5415:3:121989:122007	769213	0	True				
ANR	771189	CallExpression	onig_node_free ( qn )		769213	0					
ANR	771190	Callee	onig_node_free		769213	0					
ANR	771191	Identifier	onig_node_free		769213	0					
ANR	771192	ArgumentList	qn		769213	1					
ANR	771193	Argument	qn		769213	0					
ANR	771194	Identifier	qn		769213	0					
ANR	771195	ReturnStatement	return ONIGERR_MEMORY ;	5416:3:122012:122033	769213	1	True				
ANR	771196	Identifier	ONIGERR_MEMORY		769213	0					
ANR	771197	ExpressionStatement	targetp = & ( NCAR ( tmp ) )	5418:1:122039:122061	769213	5	True				
ANR	771198	AssignmentExpression	targetp = & ( NCAR ( tmp ) )		769213	0		=			
ANR	771199	Identifier	targetp		769213	0					
ANR	771200	UnaryOperationExpression	& ( NCAR ( tmp ) )		769213	1					
ANR	771201	UnaryOperator	&		769213	0					
ANR	771202	CallExpression	NCAR ( tmp )		769213	1					
ANR	771203	Callee	NCAR		769213	0					
ANR	771204	Identifier	NCAR		769213	0					
ANR	771205	ArgumentList	tmp		769213	1					
ANR	771206	Argument	tmp		769213	0					
ANR	771207	Identifier	tmp		769213	0					
ANR	771208	GotoStatement	goto re_entry ;	5420:6:122077:122090	769213	8	True				
ANR	771209	Identifier	re_entry		769213	0					
ANR	771210	ReturnStatement	return r ;	5424:2:122105:122113	769213	7	True				
ANR	771211	Identifier	r		769213	0					
ANR	771212	ReturnType	static int		769213	1					
ANR	771213	Identifier	parse_exp		769213	2					
ANR	771214	ParameterList	"Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		769213	3					
ANR	771215	Parameter	Node * * np	5037:10:112806:112814	769213	0	True				
ANR	771216	ParameterType	Node * *		769213	0					
ANR	771217	Identifier	np		769213	1					
ANR	771218	Parameter	OnigToken * tok	5037:21:112817:112830	769213	1	True				
ANR	771219	ParameterType	OnigToken *		769213	0					
ANR	771220	Identifier	tok		769213	1					
ANR	771221	Parameter	int term	5037:37:112833:112840	769213	2	True				
ANR	771222	ParameterType	int		769213	0					
ANR	771223	Identifier	term		769213	1					
ANR	771224	Parameter	UChar * * src	5038:3:112846:112856	769213	3	True				
ANR	771225	ParameterType	UChar * *		769213	0					
ANR	771226	Identifier	src		769213	1					
ANR	771227	Parameter	UChar * end	5038:16:112859:112868	769213	4	True				
ANR	771228	ParameterType	UChar *		769213	0					
ANR	771229	Identifier	end		769213	1					
ANR	771230	Parameter	ScanEnv * env	5038:28:112871:112882	769213	5	True				
ANR	771231	ParameterType	ScanEnv *		769213	0					
ANR	771232	Identifier	env		769213	1					
ANR	771233	CFGEntryNode	ENTRY		769213		True				
ANR	771234	CFGExitNode	EXIT		769213		True				
ANR	771235	Symbol	iarg . cc		769213						
ANR	771236	Symbol	node_new_quantifier		769213						
ANR	771237	Symbol	node_new_cclass		769213						
ANR	771238	Symbol	prev		769213						
ANR	771239	Symbol	NQTFR		769213						
ANR	771240	Symbol	parse_char_class		769213						
ANR	771241	Symbol	tok -> type		769213						
ANR	771242	Symbol	len		769213						
ANR	771243	Symbol	TK_INTERVAL		769213						
ANR	771244	Symbol	xmalloc		769213						
ANR	771245	Symbol	tmp		769213						
ANR	771246	Symbol	BACKREF_REL_TO_ABS		769213						
ANR	771247	Symbol	find_str_position		769213						
ANR	771248	Symbol	iarg . alt_root		769213						
ANR	771249	Symbol	parse_subexp		769213						
ANR	771250	Symbol	qn		769213						
ANR	771251	Symbol	tok -> escaped		769213						
ANR	771252	Symbol	ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED		769213						
ANR	771253	Symbol	node_new_call		769213						
ANR	771254	Symbol	work		769213						
ANR	771255	Symbol	NSTR		769213						
ANR	771256	Symbol	THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		769213						
ANR	771257	Symbol	NCDR		769213						
ANR	771258	Symbol	ONIGERR_MEMORY		769213						
ANR	771259	Symbol	ONIGENC_APPLY_ALL_CASE_FOLD		769213						
ANR	771260	Symbol	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		769213						
ANR	771261	Symbol	* end_op		769213						
ANR	771262	Symbol	env -> num_call		769213						
ANR	771263	Symbol	* tok		769213						
ANR	771264	Symbol	iarg . ptail		769213						
ANR	771265	Symbol	onig_node_new_anchor		769213						
ANR	771266	Symbol	tok -> u . c		769213						
ANR	771267	Symbol	node_new_str_raw		769213						
ANR	771268	Symbol	new_key		769213						
ANR	771269	Symbol	iarg . env		769213						
ANR	771270	Symbol	& key		769213						
ANR	771271	Symbol	tok -> u . call . name		769213						
ANR	771272	Symbol	ONIGENC_MBC_MINLEN		769213						
ANR	771273	Symbol	env -> enc		769213						
ANR	771274	Symbol	node_new_enclose		769213						
ANR	771275	Symbol	tok		769213						
ANR	771276	Symbol	tok -> u . code		769213						
ANR	771277	Symbol	end_op		769213						
ANR	771278	Symbol	parse_char_property		769213						
ANR	771279	Symbol	REPEAT_INFINITE		769213						
ANR	771280	Symbol	parse_enclose		769213						
ANR	771281	Symbol	NENCLOSE		769213						
ANR	771282	Symbol	tok -> u . anchor		769213						
ANR	771283	Symbol	term		769213						
ANR	771284	Symbol	& iarg . alt_root		769213						
ANR	771285	Symbol	fetch_token		769213						
ANR	771286	Symbol	key		769213						
ANR	771287	Symbol	cc		769213						
ANR	771288	Symbol	& nextp		769213						
ANR	771289	Symbol	node_new_list		769213						
ANR	771290	Symbol	tok -> backp		769213						
ANR	771291	Symbol	NENCLOSE ( en ) -> target		769213						
ANR	771292	Symbol	* np		769213						
ANR	771293	Symbol	node_new_str		769213						
ANR	771294	Symbol	enclen		769213						
ANR	771295	Symbol	MC_ESC		769213						
ANR	771296	Symbol	NQTFR ( qn ) -> target		769213						
ANR	771297	Symbol	r		769213						
ANR	771298	Symbol	buf		769213						
ANR	771299	Symbol	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		769213						
ANR	771300	Symbol	ONIGERR_UNMATCHED_CLOSE_PARENTHESIS		769213						
ANR	771301	Symbol	TK_SUBEXP_CLOSE		769213						
ANR	771302	Symbol	ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID		769213						
ANR	771303	Symbol	ONIGENC_CODE_RANGE_NUM		769213						
ANR	771304	Symbol	IS_IGNORECASE		769213						
ANR	771305	Symbol	env -> case_fold_flag		769213						
ANR	771306	Symbol	& target		769213						
ANR	771307	Symbol	NENCLOSE ( * np ) -> target		769213						
ANR	771308	Symbol	mbr		769213						
ANR	771309	Symbol	iarg		769213						
ANR	771310	Symbol	tok -> u . repeat . possessive		769213						
ANR	771311	Symbol	num		769213						
ANR	771312	Symbol	tok -> u . call . gnum		769213						
ANR	771313	Symbol	NCCLASS		769213						
ANR	771314	Symbol	* src		769213						
ANR	771315	Symbol	gnum		769213						
ANR	771316	Symbol	env -> option		769213						
ANR	771317	Symbol	sb_out		769213						
ANR	771318	Symbol	key . enc		769213						
ANR	771319	Symbol	NENCLOSE ( * np ) -> option		769213						
ANR	771320	Symbol	tok -> u . prop . not		769213						
ANR	771321	Symbol	key . not		769213						
ANR	771322	Symbol	IS_SYNTAX_BV		769213						
ANR	771323	Symbol	rem		769213						
ANR	771324	Symbol	& sb_out		769213						
ANR	771325	Symbol	TK_STRING		769213						
ANR	771326	Symbol	tok -> u . prop		769213						
ANR	771327	Symbol	node_new_anychar		769213						
ANR	771328	Symbol	group		769213						
ANR	771329	Symbol	NULL		769213						
ANR	771330	Symbol	& mbr		769213						
ANR	771331	Symbol	TK_OP_REPEAT		769213						
ANR	771332	Symbol	* targetp		769213						
ANR	771333	Symbol	ENCLOSE_STOP_BACKTRACK		769213						
ANR	771334	Symbol	* env		769213						
ANR	771335	Symbol	en		769213						
ANR	771336	Symbol	* NSTR		769213						
ANR	771337	Symbol	key . type		769213						
ANR	771338	Symbol	env -> syntax		769213						
ANR	771339	Symbol	ONIGERR_PARSER_BUG		769213						
ANR	771340	Symbol	onig_st_init_table_with_size		769213						
ANR	771341	Symbol	targetp		769213						
ANR	771342	Symbol	is_invalid_quantifier_target		769213						
ANR	771343	Symbol	node_new_str_raw_char		769213						
ANR	771344	Symbol	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		769213						
ANR	771345	Symbol	ONIGENC_CODE_TO_MBC		769213						
ANR	771346	Symbol	set_quantifier		769213						
ANR	771347	Symbol	NQTFR ( qn ) -> greedy		769213						
ANR	771348	Symbol	NULL_NODE		769213						
ANR	771349	Symbol	tok -> u . repeat . greedy		769213						
ANR	771350	Symbol	np		769213						
ANR	771351	Symbol	IS_NOT_NULL		769213						
ANR	771352	Symbol	ONIGERR_INVALID_BACKREF		769213						
ANR	771353	Symbol	node_new_cclass_by_codepoint_range		769213						
ANR	771354	Symbol	* NENCLOSE		769213						
ANR	771355	Symbol	node_new_ctype		769213						
ANR	771356	Symbol	tok -> u . call . name_end		769213						
ANR	771357	Symbol	& iarg		769213						
ANR	771358	Symbol	node_str_cat_char		769213						
ANR	771359	Symbol	qstart		769213						
ANR	771360	Symbol	tok -> u . backref . num		769213						
ANR	771361	Symbol	IS_NULL		769213						
ANR	771362	Symbol	OnigTypeCClassTable		769213						
ANR	771363	Symbol	* NQTFR		769213						
ANR	771364	Symbol	tok -> u . repeat . upper		769213						
ANR	771365	Symbol	tok -> u . backref		769213						
ANR	771366	Symbol	ONIGENC_GET_CTYPE_CODE_RANGE		769213						
ANR	771367	Symbol	i_apply_case_fold		769213						
ANR	771368	Symbol	end		769213						
ANR	771369	Symbol	tok -> u		769213						
ANR	771370	Symbol	& NCAR		769213						
ANR	771371	Symbol	nextp		769213						
ANR	771372	Symbol	tok -> u . call		769213						
ANR	771373	Symbol	onig_node_new_alt		769213						
ANR	771374	Symbol	tok -> u . repeat		769213						
ANR	771375	Symbol	src		769213						
ANR	771376	Symbol	NSTR ( * np ) -> s		769213						
ANR	771377	Symbol	& type_type_cclass_hash		769213						
ANR	771378	Symbol	env		769213						
ANR	771379	Symbol	node_new_empty		769213						
ANR	771380	Symbol	target		769213						
ANR	771381	Symbol	onig_node_str_cat		769213						
ANR	771382	Symbol	tok -> u . repeat . lower		769213						
ANR	771383	Symbol	tok -> u . prop . ctype		769213						
ANR	771384	Symbol	onig_st_lookup		769213						
ANR	771385	Symbol	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		769213						
ANR	771386	Symbol	TK_RAW_BYTE		769213						
ANR	771387	Symbol	qend		769213						
ANR	771388	Function	parse_branch	5427:0:122118:122873							
ANR	771389	FunctionDef	"parse_branch (Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		771388	0					
ANR	771390	CompoundStatement		5430:0:122225:122873	771388	0					
ANR	771391	IdentifierDeclStatement	int r ;	5431:2:122229:122234	771388	0	True				
ANR	771392	IdentifierDecl	r		771388	0					
ANR	771393	IdentifierDeclType	int		771388	0					
ANR	771394	Identifier	r		771388	1					
ANR	771395	IdentifierDeclStatement	"Node * node , * * headp ;"	5432:2:122238:122257	771388	1	True				
ANR	771396	IdentifierDecl	* node		771388	0					
ANR	771397	IdentifierDeclType	Node *		771388	0					
ANR	771398	Identifier	node		771388	1					
ANR	771399	IdentifierDecl	* * headp		771388	1					
ANR	771400	IdentifierDeclType	Node * *		771388	0					
ANR	771401	Identifier	headp		771388	1					
ANR	771402	ExpressionStatement	* top = NULL	5434:2:122262:122273	771388	2	True				
ANR	771403	AssignmentExpression	* top = NULL		771388	0		=			
ANR	771404	UnaryOperationExpression	* top		771388	0					
ANR	771405	UnaryOperator	*		771388	0					
ANR	771406	Identifier	top		771388	1					
ANR	771407	Identifier	NULL		771388	1					
ANR	771408	ExpressionStatement	"r = parse_exp ( & node , tok , term , src , end , env )"	5435:2:122277:122323	771388	3	True				
ANR	771409	AssignmentExpression	"r = parse_exp ( & node , tok , term , src , end , env )"		771388	0		=			
ANR	771410	Identifier	r		771388	0					
ANR	771411	CallExpression	"parse_exp ( & node , tok , term , src , end , env )"		771388	1					
ANR	771412	Callee	parse_exp		771388	0					
ANR	771413	Identifier	parse_exp		771388	0					
ANR	771414	ArgumentList	& node		771388	1					
ANR	771415	Argument	& node		771388	0					
ANR	771416	UnaryOperationExpression	& node		771388	0					
ANR	771417	UnaryOperator	&		771388	0					
ANR	771418	Identifier	node		771388	1					
ANR	771419	Argument	tok		771388	1					
ANR	771420	Identifier	tok		771388	0					
ANR	771421	Argument	term		771388	2					
ANR	771422	Identifier	term		771388	0					
ANR	771423	Argument	src		771388	3					
ANR	771424	Identifier	src		771388	0					
ANR	771425	Argument	end		771388	4					
ANR	771426	Identifier	end		771388	0					
ANR	771427	Argument	env		771388	5					
ANR	771428	Identifier	env		771388	0					
ANR	771429	IfStatement	if ( r < 0 )		771388	4					
ANR	771430	Condition	r < 0	5436:6:122331:122335	771388	0	True				
ANR	771431	RelationalExpression	r < 0		771388	0		<			
ANR	771432	Identifier	r		771388	0					
ANR	771433	PrimaryExpression	0		771388	1					
ANR	771434	ReturnStatement	return r ;	5436:13:122338:122346	771388	1	True				
ANR	771435	Identifier	r		771388	0					
ANR	771436	IfStatement	if ( r == TK_EOT || r == term || r == TK_ALT )		771388	5					
ANR	771437	Condition	r == TK_EOT || r == term || r == TK_ALT	5438:6:122355:122393	771388	0	True				
ANR	771438	OrExpression	r == TK_EOT || r == term || r == TK_ALT		771388	0		||			
ANR	771439	EqualityExpression	r == TK_EOT		771388	0		==			
ANR	771440	Identifier	r		771388	0					
ANR	771441	Identifier	TK_EOT		771388	1					
ANR	771442	OrExpression	r == term || r == TK_ALT		771388	1		||			
ANR	771443	EqualityExpression	r == term		771388	0		==			
ANR	771444	Identifier	r		771388	0					
ANR	771445	Identifier	term		771388	1					
ANR	771446	EqualityExpression	r == TK_ALT		771388	1		==			
ANR	771447	Identifier	r		771388	0					
ANR	771448	Identifier	TK_ALT		771388	1					
ANR	771449	CompoundStatement		9:47:170:170	771388	1					
ANR	771450	ExpressionStatement	* top = node	5439:4:122402:122413	771388	0	True				
ANR	771451	AssignmentExpression	* top = node		771388	0		=			
ANR	771452	UnaryOperationExpression	* top		771388	0					
ANR	771453	UnaryOperator	*		771388	0					
ANR	771454	Identifier	top		771388	1					
ANR	771455	Identifier	node		771388	1					
ANR	771456	ElseStatement	else		771388	0					
ANR	771457	CompoundStatement		12:7:200:200	771388	0					
ANR	771458	ExpressionStatement	"* top = node_new_list ( node , NULL )"	5442:4:122432:122465	771388	0	True				
ANR	771459	AssignmentExpression	"* top = node_new_list ( node , NULL )"		771388	0		=			
ANR	771460	UnaryOperationExpression	* top		771388	0					
ANR	771461	UnaryOperator	*		771388	0					
ANR	771462	Identifier	top		771388	1					
ANR	771463	CallExpression	"node_new_list ( node , NULL )"		771388	1					
ANR	771464	Callee	node_new_list		771388	0					
ANR	771465	Identifier	node_new_list		771388	0					
ANR	771466	ArgumentList	node		771388	1					
ANR	771467	Argument	node		771388	0					
ANR	771468	Identifier	node		771388	0					
ANR	771469	Argument	NULL		771388	1					
ANR	771470	Identifier	NULL		771388	0					
ANR	771471	ExpressionStatement	headp = & ( NCDR ( * top ) )	5443:4:122471:122492	771388	1	True				
ANR	771472	AssignmentExpression	headp = & ( NCDR ( * top ) )		771388	0		=			
ANR	771473	Identifier	headp		771388	0					
ANR	771474	UnaryOperationExpression	& ( NCDR ( * top ) )		771388	1					
ANR	771475	UnaryOperator	&		771388	0					
ANR	771476	CallExpression	NCDR ( * top )		771388	1					
ANR	771477	Callee	NCDR		771388	0					
ANR	771478	Identifier	NCDR		771388	0					
ANR	771479	ArgumentList	* top		771388	1					
ANR	771480	Argument	* top		771388	0					
ANR	771481	UnaryOperationExpression	* top		771388	0					
ANR	771482	UnaryOperator	*		771388	0					
ANR	771483	Identifier	top		771388	1					
ANR	771484	WhileStatement	while ( r != TK_EOT && r != term && r != TK_ALT )		771388	2					
ANR	771485	Condition	r != TK_EOT && r != term && r != TK_ALT	5444:11:122505:122543	771388	0	True				
ANR	771486	AndExpression	r != TK_EOT && r != term && r != TK_ALT		771388	0		&&			
ANR	771487	EqualityExpression	r != TK_EOT		771388	0		!=			
ANR	771488	Identifier	r		771388	0					
ANR	771489	Identifier	TK_EOT		771388	1					
ANR	771490	AndExpression	r != term && r != TK_ALT		771388	1		&&			
ANR	771491	EqualityExpression	r != term		771388	0		!=			
ANR	771492	Identifier	r		771388	0					
ANR	771493	Identifier	term		771388	1					
ANR	771494	EqualityExpression	r != TK_ALT		771388	1		!=			
ANR	771495	Identifier	r		771388	0					
ANR	771496	Identifier	TK_ALT		771388	1					
ANR	771497	CompoundStatement		15:52:320:320	771388	1					
ANR	771498	ExpressionStatement	"r = parse_exp ( & node , tok , term , src , end , env )"	5445:6:122554:122600	771388	0	True				
ANR	771499	AssignmentExpression	"r = parse_exp ( & node , tok , term , src , end , env )"		771388	0		=			
ANR	771500	Identifier	r		771388	0					
ANR	771501	CallExpression	"parse_exp ( & node , tok , term , src , end , env )"		771388	1					
ANR	771502	Callee	parse_exp		771388	0					
ANR	771503	Identifier	parse_exp		771388	0					
ANR	771504	ArgumentList	& node		771388	1					
ANR	771505	Argument	& node		771388	0					
ANR	771506	UnaryOperationExpression	& node		771388	0					
ANR	771507	UnaryOperator	&		771388	0					
ANR	771508	Identifier	node		771388	1					
ANR	771509	Argument	tok		771388	1					
ANR	771510	Identifier	tok		771388	0					
ANR	771511	Argument	term		771388	2					
ANR	771512	Identifier	term		771388	0					
ANR	771513	Argument	src		771388	3					
ANR	771514	Identifier	src		771388	0					
ANR	771515	Argument	end		771388	4					
ANR	771516	Identifier	end		771388	0					
ANR	771517	Argument	env		771388	5					
ANR	771518	Identifier	env		771388	0					
ANR	771519	IfStatement	if ( r < 0 )		771388	1					
ANR	771520	Condition	r < 0	5446:10:122612:122616	771388	0	True				
ANR	771521	RelationalExpression	r < 0		771388	0		<			
ANR	771522	Identifier	r		771388	0					
ANR	771523	PrimaryExpression	0		771388	1					
ANR	771524	ReturnStatement	return r ;	5446:17:122619:122627	771388	1	True				
ANR	771525	Identifier	r		771388	0					
ANR	771526	IfStatement	if ( NTYPE ( node ) == NT_LIST )		771388	2					
ANR	771527	Condition	NTYPE ( node ) == NT_LIST	5448:10:122640:122661	771388	0	True				
ANR	771528	EqualityExpression	NTYPE ( node ) == NT_LIST		771388	0		==			
ANR	771529	CallExpression	NTYPE ( node )		771388	0					
ANR	771530	Callee	NTYPE		771388	0					
ANR	771531	Identifier	NTYPE		771388	0					
ANR	771532	ArgumentList	node		771388	1					
ANR	771533	Argument	node		771388	0					
ANR	771534	Identifier	node		771388	0					
ANR	771535	Identifier	NT_LIST		771388	1					
ANR	771536	CompoundStatement		19:34:438:438	771388	1					
ANR	771537	ExpressionStatement	* headp = node	5449:1:122667:122680	771388	0	True				
ANR	771538	AssignmentExpression	* headp = node		771388	0		=			
ANR	771539	UnaryOperationExpression	* headp		771388	0					
ANR	771540	UnaryOperator	*		771388	0					
ANR	771541	Identifier	headp		771388	1					
ANR	771542	Identifier	node		771388	1					
ANR	771543	WhileStatement	while ( IS_NOT_NULL ( NCDR ( node ) ) )		771388	1					
ANR	771544	Condition	IS_NOT_NULL ( NCDR ( node ) )	5450:8:122690:122712	771388	0	True				
ANR	771545	CallExpression	IS_NOT_NULL ( NCDR ( node ) )		771388	0					
ANR	771546	Callee	IS_NOT_NULL		771388	0					
ANR	771547	Identifier	IS_NOT_NULL		771388	0					
ANR	771548	ArgumentList	NCDR ( node )		771388	1					
ANR	771549	Argument	NCDR ( node )		771388	0					
ANR	771550	CallExpression	NCDR ( node )		771388	0					
ANR	771551	Callee	NCDR		771388	0					
ANR	771552	Identifier	NCDR		771388	0					
ANR	771553	ArgumentList	node		771388	1					
ANR	771554	Argument	node		771388	0					
ANR	771555	Identifier	node		771388	0					
ANR	771556	ExpressionStatement	node = NCDR ( node )	5450:33:122715:122732	771388	1	True				
ANR	771557	AssignmentExpression	node = NCDR ( node )		771388	0		=			
ANR	771558	Identifier	node		771388	0					
ANR	771559	CallExpression	NCDR ( node )		771388	1					
ANR	771560	Callee	NCDR		771388	0					
ANR	771561	Identifier	NCDR		771388	0					
ANR	771562	ArgumentList	node		771388	1					
ANR	771563	Argument	node		771388	0					
ANR	771564	Identifier	node		771388	0					
ANR	771565	ExpressionStatement	headp = & ( NCDR ( node ) )	5451:1:122735:122756	771388	2	True				
ANR	771566	AssignmentExpression	headp = & ( NCDR ( node ) )		771388	0		=			
ANR	771567	Identifier	headp		771388	0					
ANR	771568	UnaryOperationExpression	& ( NCDR ( node ) )		771388	1					
ANR	771569	UnaryOperator	&		771388	0					
ANR	771570	CallExpression	NCDR ( node )		771388	1					
ANR	771571	Callee	NCDR		771388	0					
ANR	771572	Identifier	NCDR		771388	0					
ANR	771573	ArgumentList	node		771388	1					
ANR	771574	Argument	node		771388	0					
ANR	771575	Identifier	node		771388	0					
ANR	771576	ElseStatement	else		771388	0					
ANR	771577	CompoundStatement		24:11:551:551	771388	0					
ANR	771578	ExpressionStatement	"* headp = node_new_list ( node , NULL )"	5454:1:122780:122814	771388	0	True				
ANR	771579	AssignmentExpression	"* headp = node_new_list ( node , NULL )"		771388	0		=			
ANR	771580	UnaryOperationExpression	* headp		771388	0					
ANR	771581	UnaryOperator	*		771388	0					
ANR	771582	Identifier	headp		771388	1					
ANR	771583	CallExpression	"node_new_list ( node , NULL )"		771388	1					
ANR	771584	Callee	node_new_list		771388	0					
ANR	771585	Identifier	node_new_list		771388	0					
ANR	771586	ArgumentList	node		771388	1					
ANR	771587	Argument	node		771388	0					
ANR	771588	Identifier	node		771388	0					
ANR	771589	Argument	NULL		771388	1					
ANR	771590	Identifier	NULL		771388	0					
ANR	771591	ExpressionStatement	headp = & ( NCDR ( * headp ) )	5455:1:122817:122840	771388	1	True				
ANR	771592	AssignmentExpression	headp = & ( NCDR ( * headp ) )		771388	0		=			
ANR	771593	Identifier	headp		771388	0					
ANR	771594	UnaryOperationExpression	& ( NCDR ( * headp ) )		771388	1					
ANR	771595	UnaryOperator	&		771388	0					
ANR	771596	CallExpression	NCDR ( * headp )		771388	1					
ANR	771597	Callee	NCDR		771388	0					
ANR	771598	Identifier	NCDR		771388	0					
ANR	771599	ArgumentList	* headp		771388	1					
ANR	771600	Argument	* headp		771388	0					
ANR	771601	UnaryOperationExpression	* headp		771388	0					
ANR	771602	UnaryOperator	*		771388	0					
ANR	771603	Identifier	headp		771388	1					
ANR	771604	ReturnStatement	return r ;	5460:2:122863:122871	771388	6	True				
ANR	771605	Identifier	r		771388	0					
ANR	771606	ReturnType	static int		771388	1					
ANR	771607	Identifier	parse_branch		771388	2					
ANR	771608	ParameterList	"Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		771388	3					
ANR	771609	Parameter	Node * * top	5428:13:122142:122151	771388	0	True				
ANR	771610	ParameterType	Node * *		771388	0					
ANR	771611	Identifier	top		771388	1					
ANR	771612	Parameter	OnigToken * tok	5428:25:122154:122167	771388	1	True				
ANR	771613	ParameterType	OnigToken *		771388	0					
ANR	771614	Identifier	tok		771388	1					
ANR	771615	Parameter	int term	5428:41:122170:122177	771388	2	True				
ANR	771616	ParameterType	int		771388	0					
ANR	771617	Identifier	term		771388	1					
ANR	771618	Parameter	UChar * * src	5429:6:122186:122196	771388	3	True				
ANR	771619	ParameterType	UChar * *		771388	0					
ANR	771620	Identifier	src		771388	1					
ANR	771621	Parameter	UChar * end	5429:19:122199:122208	771388	4	True				
ANR	771622	ParameterType	UChar *		771388	0					
ANR	771623	Identifier	end		771388	1					
ANR	771624	Parameter	ScanEnv * env	5429:31:122211:122222	771388	5	True				
ANR	771625	ParameterType	ScanEnv *		771388	0					
ANR	771626	Identifier	env		771388	1					
ANR	771627	CFGEntryNode	ENTRY		771388		True				
ANR	771628	CFGExitNode	EXIT		771388		True				
ANR	771629	Symbol	& NCDR		771388						
ANR	771630	Symbol	IS_NOT_NULL		771388						
ANR	771631	Symbol	NULL		771388						
ANR	771632	Symbol	src		771388						
ANR	771633	Symbol	TK_ALT		771388						
ANR	771634	Symbol	TK_EOT		771388						
ANR	771635	Symbol	node_new_list		771388						
ANR	771636	Symbol	NCDR		771388						
ANR	771637	Symbol	env		771388						
ANR	771638	Symbol	NT_LIST		771388						
ANR	771639	Symbol	tok		771388						
ANR	771640	Symbol	node		771388						
ANR	771641	Symbol	r		771388						
ANR	771642	Symbol	& node		771388						
ANR	771643	Symbol	parse_exp		771388						
ANR	771644	Symbol	* headp		771388						
ANR	771645	Symbol	top		771388						
ANR	771646	Symbol	headp		771388						
ANR	771647	Symbol	term		771388						
ANR	771648	Symbol	end		771388						
ANR	771649	Symbol	NTYPE		771388						
ANR	771650	Symbol	* top		771388						
ANR	771651	Function	parse_subexp	5464:0:122918:123822							
ANR	771652	FunctionDef	"parse_subexp (Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		771651	0					
ANR	771653	CompoundStatement		5467:0:123025:123822	771651	0					
ANR	771654	IdentifierDeclStatement	int r ;	5468:2:123029:123034	771651	0	True				
ANR	771655	IdentifierDecl	r		771651	0					
ANR	771656	IdentifierDeclType	int		771651	0					
ANR	771657	Identifier	r		771651	1					
ANR	771658	IdentifierDeclStatement	"Node * node , * * headp ;"	5469:2:123038:123057	771651	1	True				
ANR	771659	IdentifierDecl	* node		771651	0					
ANR	771660	IdentifierDeclType	Node *		771651	0					
ANR	771661	Identifier	node		771651	1					
ANR	771662	IdentifierDecl	* * headp		771651	1					
ANR	771663	IdentifierDeclType	Node * *		771651	0					
ANR	771664	Identifier	headp		771651	1					
ANR	771665	ExpressionStatement	* top = NULL	5471:2:123062:123073	771651	2	True				
ANR	771666	AssignmentExpression	* top = NULL		771651	0		=			
ANR	771667	UnaryOperationExpression	* top		771651	0					
ANR	771668	UnaryOperator	*		771651	0					
ANR	771669	Identifier	top		771651	1					
ANR	771670	Identifier	NULL		771651	1					
ANR	771671	ExpressionStatement	"r = parse_branch ( & node , tok , term , src , end , env )"	5472:2:123077:123126	771651	3	True				
ANR	771672	AssignmentExpression	"r = parse_branch ( & node , tok , term , src , end , env )"		771651	0		=			
ANR	771673	Identifier	r		771651	0					
ANR	771674	CallExpression	"parse_branch ( & node , tok , term , src , end , env )"		771651	1					
ANR	771675	Callee	parse_branch		771651	0					
ANR	771676	Identifier	parse_branch		771651	0					
ANR	771677	ArgumentList	& node		771651	1					
ANR	771678	Argument	& node		771651	0					
ANR	771679	UnaryOperationExpression	& node		771651	0					
ANR	771680	UnaryOperator	&		771651	0					
ANR	771681	Identifier	node		771651	1					
ANR	771682	Argument	tok		771651	1					
ANR	771683	Identifier	tok		771651	0					
ANR	771684	Argument	term		771651	2					
ANR	771685	Identifier	term		771651	0					
ANR	771686	Argument	src		771651	3					
ANR	771687	Identifier	src		771651	0					
ANR	771688	Argument	end		771651	4					
ANR	771689	Identifier	end		771651	0					
ANR	771690	Argument	env		771651	5					
ANR	771691	Identifier	env		771651	0					
ANR	771692	IfStatement	if ( r < 0 )		771651	4					
ANR	771693	Condition	r < 0	5473:6:123134:123138	771651	0	True				
ANR	771694	RelationalExpression	r < 0		771651	0		<			
ANR	771695	Identifier	r		771651	0					
ANR	771696	PrimaryExpression	0		771651	1					
ANR	771697	CompoundStatement		7:13:115:115	771651	1					
ANR	771698	ExpressionStatement	onig_node_free ( node )	5474:4:123147:123167	771651	0	True				
ANR	771699	CallExpression	onig_node_free ( node )		771651	0					
ANR	771700	Callee	onig_node_free		771651	0					
ANR	771701	Identifier	onig_node_free		771651	0					
ANR	771702	ArgumentList	node		771651	1					
ANR	771703	Argument	node		771651	0					
ANR	771704	Identifier	node		771651	0					
ANR	771705	ReturnStatement	return r ;	5475:4:123173:123181	771651	1	True				
ANR	771706	Identifier	r		771651	0					
ANR	771707	IfStatement	if ( r == term )		771651	5					
ANR	771708	Condition	r == term	5478:6:123194:123202	771651	0	True				
ANR	771709	EqualityExpression	r == term		771651	0		==			
ANR	771710	Identifier	r		771651	0					
ANR	771711	Identifier	term		771651	1					
ANR	771712	CompoundStatement		12:17:179:179	771651	1					
ANR	771713	ExpressionStatement	* top = node	5479:4:123211:123222	771651	0	True				
ANR	771714	AssignmentExpression	* top = node		771651	0		=			
ANR	771715	UnaryOperationExpression	* top		771651	0					
ANR	771716	UnaryOperator	*		771651	0					
ANR	771717	Identifier	top		771651	1					
ANR	771718	Identifier	node		771651	1					
ANR	771719	ElseStatement	else		771651	0					
ANR	771720	IfStatement	if ( r == TK_ALT )		771651	0					
ANR	771721	Condition	r == TK_ALT	5481:11:123239:123249	771651	0	True				
ANR	771722	EqualityExpression	r == TK_ALT		771651	0		==			
ANR	771723	Identifier	r		771651	0					
ANR	771724	Identifier	TK_ALT		771651	1					
ANR	771725	CompoundStatement		15:24:226:226	771651	1					
ANR	771726	ExpressionStatement	"* top = onig_node_new_alt ( node , NULL )"	5482:4:123258:123295	771651	0	True				
ANR	771727	AssignmentExpression	"* top = onig_node_new_alt ( node , NULL )"		771651	0		=			
ANR	771728	UnaryOperationExpression	* top		771651	0					
ANR	771729	UnaryOperator	*		771651	0					
ANR	771730	Identifier	top		771651	1					
ANR	771731	CallExpression	"onig_node_new_alt ( node , NULL )"		771651	1					
ANR	771732	Callee	onig_node_new_alt		771651	0					
ANR	771733	Identifier	onig_node_new_alt		771651	0					
ANR	771734	ArgumentList	node		771651	1					
ANR	771735	Argument	node		771651	0					
ANR	771736	Identifier	node		771651	0					
ANR	771737	Argument	NULL		771651	1					
ANR	771738	Identifier	NULL		771651	0					
ANR	771739	ExpressionStatement	headp = & ( NCDR ( * top ) )	5483:4:123301:123322	771651	1	True				
ANR	771740	AssignmentExpression	headp = & ( NCDR ( * top ) )		771651	0		=			
ANR	771741	Identifier	headp		771651	0					
ANR	771742	UnaryOperationExpression	& ( NCDR ( * top ) )		771651	1					
ANR	771743	UnaryOperator	&		771651	0					
ANR	771744	CallExpression	NCDR ( * top )		771651	1					
ANR	771745	Callee	NCDR		771651	0					
ANR	771746	Identifier	NCDR		771651	0					
ANR	771747	ArgumentList	* top		771651	1					
ANR	771748	Argument	* top		771651	0					
ANR	771749	UnaryOperationExpression	* top		771651	0					
ANR	771750	UnaryOperator	*		771651	0					
ANR	771751	Identifier	top		771651	1					
ANR	771752	WhileStatement	while ( r == TK_ALT )		771651	2					
ANR	771753	Condition	r == TK_ALT	5484:11:123335:123345	771651	0	True				
ANR	771754	EqualityExpression	r == TK_ALT		771651	0		==			
ANR	771755	Identifier	r		771651	0					
ANR	771756	Identifier	TK_ALT		771651	1					
ANR	771757	CompoundStatement		18:24:322:322	771651	1					
ANR	771758	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5485:6:123356:123391	771651	0	True				
ANR	771759	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		771651	0		=			
ANR	771760	Identifier	r		771651	0					
ANR	771761	CallExpression	"fetch_token ( tok , src , end , env )"		771651	1					
ANR	771762	Callee	fetch_token		771651	0					
ANR	771763	Identifier	fetch_token		771651	0					
ANR	771764	ArgumentList	tok		771651	1					
ANR	771765	Argument	tok		771651	0					
ANR	771766	Identifier	tok		771651	0					
ANR	771767	Argument	src		771651	1					
ANR	771768	Identifier	src		771651	0					
ANR	771769	Argument	end		771651	2					
ANR	771770	Identifier	end		771651	0					
ANR	771771	Argument	env		771651	3					
ANR	771772	Identifier	env		771651	0					
ANR	771773	IfStatement	if ( r < 0 )		771651	1					
ANR	771774	Condition	r < 0	5486:10:123403:123407	771651	0	True				
ANR	771775	RelationalExpression	r < 0		771651	0		<			
ANR	771776	Identifier	r		771651	0					
ANR	771777	PrimaryExpression	0		771651	1					
ANR	771778	ReturnStatement	return r ;	5486:17:123410:123418	771651	1	True				
ANR	771779	Identifier	r		771651	0					
ANR	771780	ExpressionStatement	"r = parse_branch ( & node , tok , term , src , end , env )"	5487:6:123426:123475	771651	2	True				
ANR	771781	AssignmentExpression	"r = parse_branch ( & node , tok , term , src , end , env )"		771651	0		=			
ANR	771782	Identifier	r		771651	0					
ANR	771783	CallExpression	"parse_branch ( & node , tok , term , src , end , env )"		771651	1					
ANR	771784	Callee	parse_branch		771651	0					
ANR	771785	Identifier	parse_branch		771651	0					
ANR	771786	ArgumentList	& node		771651	1					
ANR	771787	Argument	& node		771651	0					
ANR	771788	UnaryOperationExpression	& node		771651	0					
ANR	771789	UnaryOperator	&		771651	0					
ANR	771790	Identifier	node		771651	1					
ANR	771791	Argument	tok		771651	1					
ANR	771792	Identifier	tok		771651	0					
ANR	771793	Argument	term		771651	2					
ANR	771794	Identifier	term		771651	0					
ANR	771795	Argument	src		771651	3					
ANR	771796	Identifier	src		771651	0					
ANR	771797	Argument	end		771651	4					
ANR	771798	Identifier	end		771651	0					
ANR	771799	Argument	env		771651	5					
ANR	771800	Identifier	env		771651	0					
ANR	771801	IfStatement	if ( r < 0 )		771651	3					
ANR	771802	Condition	r < 0	5488:10:123487:123491	771651	0	True				
ANR	771803	RelationalExpression	r < 0		771651	0		<			
ANR	771804	Identifier	r		771651	0					
ANR	771805	PrimaryExpression	0		771651	1					
ANR	771806	ReturnStatement	return r ;	5488:17:123494:123502	771651	1	True				
ANR	771807	Identifier	r		771651	0					
ANR	771808	ExpressionStatement	"* headp = onig_node_new_alt ( node , NULL )"	5490:6:123511:123549	771651	4	True				
ANR	771809	AssignmentExpression	"* headp = onig_node_new_alt ( node , NULL )"		771651	0		=			
ANR	771810	UnaryOperationExpression	* headp		771651	0					
ANR	771811	UnaryOperator	*		771651	0					
ANR	771812	Identifier	headp		771651	1					
ANR	771813	CallExpression	"onig_node_new_alt ( node , NULL )"		771651	1					
ANR	771814	Callee	onig_node_new_alt		771651	0					
ANR	771815	Identifier	onig_node_new_alt		771651	0					
ANR	771816	ArgumentList	node		771651	1					
ANR	771817	Argument	node		771651	0					
ANR	771818	Identifier	node		771651	0					
ANR	771819	Argument	NULL		771651	1					
ANR	771820	Identifier	NULL		771651	0					
ANR	771821	ExpressionStatement	headp = & ( NCDR ( * headp ) )	5491:6:123557:123580	771651	5	True				
ANR	771822	AssignmentExpression	headp = & ( NCDR ( * headp ) )		771651	0		=			
ANR	771823	Identifier	headp		771651	0					
ANR	771824	UnaryOperationExpression	& ( NCDR ( * headp ) )		771651	1					
ANR	771825	UnaryOperator	&		771651	0					
ANR	771826	CallExpression	NCDR ( * headp )		771651	1					
ANR	771827	Callee	NCDR		771651	0					
ANR	771828	Identifier	NCDR		771651	0					
ANR	771829	ArgumentList	* headp		771651	1					
ANR	771830	Argument	* headp		771651	0					
ANR	771831	UnaryOperationExpression	* headp		771651	0					
ANR	771832	UnaryOperator	*		771651	0					
ANR	771833	Identifier	headp		771651	1					
ANR	771834	IfStatement	if ( tok -> type != ( enum TokenSyms ) term )		771651	3					
ANR	771835	Condition	tok -> type != ( enum TokenSyms ) term	5494:8:123597:123630	771651	0	True				
ANR	771836	EqualityExpression	tok -> type != ( enum TokenSyms ) term		771651	0		!=			
ANR	771837	PtrMemberAccess	tok -> type		771651	0					
ANR	771838	Identifier	tok		771651	0					
ANR	771839	Identifier	type		771651	1					
ANR	771840	CastExpression	( enum TokenSyms ) term		771651	1					
ANR	771841	CastTarget	enum TokenSyms		771651	0					
ANR	771842	Identifier	term		771651	1					
ANR	771843	GotoStatement	goto err ;	5495:6:123639:123647	771651	1	True				
ANR	771844	Identifier	err		771651	0					
ANR	771845	ElseStatement	else		771651	0					
ANR	771846	CompoundStatement		31:7:634:634	771651	0					
ANR	771847	Label	err :	5498:2:123664:123667	771651	0	True				
ANR	771848	Identifier	err		771651	0					
ANR	771849	IfStatement	if ( term == TK_SUBEXP_CLOSE )		771651	1					
ANR	771850	Condition	term == TK_SUBEXP_CLOSE	5499:8:123677:123699	771651	0	True				
ANR	771851	EqualityExpression	term == TK_SUBEXP_CLOSE		771651	0		==			
ANR	771852	Identifier	term		771651	0					
ANR	771853	Identifier	TK_SUBEXP_CLOSE		771651	1					
ANR	771854	ReturnStatement	return ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS ;	5500:6:123708:123761	771651	1	True				
ANR	771855	Identifier	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		771651	0					
ANR	771856	ElseStatement	else		771651	0					
ANR	771857	ReturnStatement	return ONIGERR_PARSER_BUG ;	5502:6:123778:123803	771651	0	True				
ANR	771858	Identifier	ONIGERR_PARSER_BUG		771651	0					
ANR	771859	ReturnStatement	return r ;	5505:2:123812:123820	771651	6	True				
ANR	771860	Identifier	r		771651	0					
ANR	771861	ReturnType	static int		771651	1					
ANR	771862	Identifier	parse_subexp		771651	2					
ANR	771863	ParameterList	"Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		771651	3					
ANR	771864	Parameter	Node * * top	5465:13:122942:122951	771651	0	True				
ANR	771865	ParameterType	Node * *		771651	0					
ANR	771866	Identifier	top		771651	1					
ANR	771867	Parameter	OnigToken * tok	5465:25:122954:122967	771651	1	True				
ANR	771868	ParameterType	OnigToken *		771651	0					
ANR	771869	Identifier	tok		771651	1					
ANR	771870	Parameter	int term	5465:41:122970:122977	771651	2	True				
ANR	771871	ParameterType	int		771651	0					
ANR	771872	Identifier	term		771651	1					
ANR	771873	Parameter	UChar * * src	5466:6:122986:122996	771651	3	True				
ANR	771874	ParameterType	UChar * *		771651	0					
ANR	771875	Identifier	src		771651	1					
ANR	771876	Parameter	UChar * end	5466:19:122999:123008	771651	4	True				
ANR	771877	ParameterType	UChar *		771651	0					
ANR	771878	Identifier	end		771651	1					
ANR	771879	Parameter	ScanEnv * env	5466:31:123011:123022	771651	5	True				
ANR	771880	ParameterType	ScanEnv *		771651	0					
ANR	771881	Identifier	env		771651	1					
ANR	771882	CFGEntryNode	ENTRY		771651		True				
ANR	771883	CFGExitNode	EXIT		771651		True				
ANR	771884	Symbol	onig_node_new_alt		771651						
ANR	771885	Symbol	& NCDR		771651						
ANR	771886	Symbol	NULL		771651						
ANR	771887	Symbol	src		771651						
ANR	771888	Symbol	TK_ALT		771651						
ANR	771889	Symbol	parse_branch		771651						
ANR	771890	Symbol	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		771651						
ANR	771891	Symbol	env		771651						
ANR	771892	Symbol	tok -> type		771651						
ANR	771893	Symbol	ONIGERR_PARSER_BUG		771651						
ANR	771894	Symbol	tok		771651						
ANR	771895	Symbol	node		771651						
ANR	771896	Symbol	r		771651						
ANR	771897	Symbol	& node		771651						
ANR	771898	Symbol	* headp		771651						
ANR	771899	Symbol	top		771651						
ANR	771900	Symbol	TK_SUBEXP_CLOSE		771651						
ANR	771901	Symbol	headp		771651						
ANR	771902	Symbol	term		771651						
ANR	771903	Symbol	end		771651						
ANR	771904	Symbol	* tok		771651						
ANR	771905	Symbol	fetch_token		771651						
ANR	771906	Symbol	* top		771651						
ANR	771907	Function	parse_regexp	5508:0:123825:124081							
ANR	771908	FunctionDef	"parse_regexp (Node * * top , UChar * * src , UChar * end , ScanEnv * env)"		771907	0					
ANR	771909	CompoundStatement		5510:0:123900:124081	771907	0					
ANR	771910	IdentifierDeclStatement	int r ;	5511:2:123904:123909	771907	0	True				
ANR	771911	IdentifierDecl	r		771907	0					
ANR	771912	IdentifierDeclType	int		771907	0					
ANR	771913	Identifier	r		771907	1					
ANR	771914	IdentifierDeclStatement	OnigToken tok ;	5512:2:123913:123926	771907	1	True				
ANR	771915	IdentifierDecl	tok		771907	0					
ANR	771916	IdentifierDeclType	OnigToken		771907	0					
ANR	771917	Identifier	tok		771907	1					
ANR	771918	ExpressionStatement	"r = fetch_token ( & tok , src , end , env )"	5514:2:123931:123967	771907	2	True				
ANR	771919	AssignmentExpression	"r = fetch_token ( & tok , src , end , env )"		771907	0		=			
ANR	771920	Identifier	r		771907	0					
ANR	771921	CallExpression	"fetch_token ( & tok , src , end , env )"		771907	1					
ANR	771922	Callee	fetch_token		771907	0					
ANR	771923	Identifier	fetch_token		771907	0					
ANR	771924	ArgumentList	& tok		771907	1					
ANR	771925	Argument	& tok		771907	0					
ANR	771926	UnaryOperationExpression	& tok		771907	0					
ANR	771927	UnaryOperator	&		771907	0					
ANR	771928	Identifier	tok		771907	1					
ANR	771929	Argument	src		771907	1					
ANR	771930	Identifier	src		771907	0					
ANR	771931	Argument	end		771907	2					
ANR	771932	Identifier	end		771907	0					
ANR	771933	Argument	env		771907	3					
ANR	771934	Identifier	env		771907	0					
ANR	771935	IfStatement	if ( r < 0 )		771907	3					
ANR	771936	Condition	r < 0	5515:6:123975:123979	771907	0	True				
ANR	771937	RelationalExpression	r < 0		771907	0		<			
ANR	771938	Identifier	r		771907	0					
ANR	771939	PrimaryExpression	0		771907	1					
ANR	771940	ReturnStatement	return r ;	5515:13:123982:123990	771907	1	True				
ANR	771941	Identifier	r		771907	0					
ANR	771942	ExpressionStatement	"r = parse_subexp ( top , & tok , TK_EOT , src , end , env )"	5516:2:123994:124044	771907	4	True				
ANR	771943	AssignmentExpression	"r = parse_subexp ( top , & tok , TK_EOT , src , end , env )"		771907	0		=			
ANR	771944	Identifier	r		771907	0					
ANR	771945	CallExpression	"parse_subexp ( top , & tok , TK_EOT , src , end , env )"		771907	1					
ANR	771946	Callee	parse_subexp		771907	0					
ANR	771947	Identifier	parse_subexp		771907	0					
ANR	771948	ArgumentList	top		771907	1					
ANR	771949	Argument	top		771907	0					
ANR	771950	Identifier	top		771907	0					
ANR	771951	Argument	& tok		771907	1					
ANR	771952	UnaryOperationExpression	& tok		771907	0					
ANR	771953	UnaryOperator	&		771907	0					
ANR	771954	Identifier	tok		771907	1					
ANR	771955	Argument	TK_EOT		771907	2					
ANR	771956	Identifier	TK_EOT		771907	0					
ANR	771957	Argument	src		771907	3					
ANR	771958	Identifier	src		771907	0					
ANR	771959	Argument	end		771907	4					
ANR	771960	Identifier	end		771907	0					
ANR	771961	Argument	env		771907	5					
ANR	771962	Identifier	env		771907	0					
ANR	771963	IfStatement	if ( r < 0 )		771907	5					
ANR	771964	Condition	r < 0	5517:6:124052:124056	771907	0	True				
ANR	771965	RelationalExpression	r < 0		771907	0		<			
ANR	771966	Identifier	r		771907	0					
ANR	771967	PrimaryExpression	0		771907	1					
ANR	771968	ReturnStatement	return r ;	5517:13:124059:124067	771907	1	True				
ANR	771969	Identifier	r		771907	0					
ANR	771970	ReturnStatement	return 0 ;	5518:2:124071:124079	771907	6	True				
ANR	771971	PrimaryExpression	0		771907	0					
ANR	771972	ReturnType	static int		771907	1					
ANR	771973	Identifier	parse_regexp		771907	2					
ANR	771974	ParameterList	"Node * * top , UChar * * src , UChar * end , ScanEnv * env"		771907	3					
ANR	771975	Parameter	Node * * top	5509:13:123849:123858	771907	0	True				
ANR	771976	ParameterType	Node * *		771907	0					
ANR	771977	Identifier	top		771907	1					
ANR	771978	Parameter	UChar * * src	5509:25:123861:123871	771907	1	True				
ANR	771979	ParameterType	UChar * *		771907	0					
ANR	771980	Identifier	src		771907	1					
ANR	771981	Parameter	UChar * end	5509:38:123874:123883	771907	2	True				
ANR	771982	ParameterType	UChar *		771907	0					
ANR	771983	Identifier	end		771907	1					
ANR	771984	Parameter	ScanEnv * env	5509:50:123886:123897	771907	3	True				
ANR	771985	ParameterType	ScanEnv *		771907	0					
ANR	771986	Identifier	env		771907	1					
ANR	771987	CFGEntryNode	ENTRY		771907		True				
ANR	771988	CFGExitNode	EXIT		771907		True				
ANR	771989	Symbol	tok		771907						
ANR	771990	Symbol	& tok		771907						
ANR	771991	Symbol	r		771907						
ANR	771992	Symbol	top		771907						
ANR	771993	Symbol	src		771907						
ANR	771994	Symbol	TK_EOT		771907						
ANR	771995	Symbol	end		771907						
ANR	771996	Symbol	env		771907						
ANR	771997	Symbol	parse_subexp		771907						
ANR	771998	Symbol	fetch_token		771907						
ANR	771999	Function	onig_parse_make_tree	5521:0:124084:124698							
ANR	772000	FunctionDef	"onig_parse_make_tree (Node * * root , const UChar * pattern , const UChar * end , regex_t * reg , ScanEnv * env)"		771999	0					
ANR	772001	CompoundStatement		5524:0:124204:124698	771999	0					
ANR	772002	IdentifierDeclStatement	int r ;	5525:2:124208:124213	771999	0	True				
ANR	772003	IdentifierDecl	r		771999	0					
ANR	772004	IdentifierDeclType	int		771999	0					
ANR	772005	Identifier	r		771999	1					
ANR	772006	IdentifierDeclStatement	UChar * p ;	5526:2:124217:124225	771999	1	True				
ANR	772007	IdentifierDecl	* p		771999	0					
ANR	772008	IdentifierDeclType	UChar *		771999	0					
ANR	772009	Identifier	p		771999	1					
ANR	772010	ExpressionStatement	names_clear ( reg )	5529:2:124253:124269	771999	2	True				
ANR	772011	CallExpression	names_clear ( reg )		771999	0					
ANR	772012	Callee	names_clear		771999	0					
ANR	772013	Identifier	names_clear		771999	0					
ANR	772014	ArgumentList	reg		771999	1					
ANR	772015	Argument	reg		771999	0					
ANR	772016	Identifier	reg		771999	0					
ANR	772017	ExpressionStatement	scan_env_clear ( env )	5532:2:124281:124300	771999	3	True				
ANR	772018	CallExpression	scan_env_clear ( env )		771999	0					
ANR	772019	Callee	scan_env_clear		771999	0					
ANR	772020	Identifier	scan_env_clear		771999	0					
ANR	772021	ArgumentList	env		771999	1					
ANR	772022	Argument	env		771999	0					
ANR	772023	Identifier	env		771999	0					
ANR	772024	ExpressionStatement	env -> option = reg -> options	5533:2:124304:124338	771999	4	True				
ANR	772025	AssignmentExpression	env -> option = reg -> options		771999	0		=			
ANR	772026	PtrMemberAccess	env -> option		771999	0					
ANR	772027	Identifier	env		771999	0					
ANR	772028	Identifier	option		771999	1					
ANR	772029	PtrMemberAccess	reg -> options		771999	1					
ANR	772030	Identifier	reg		771999	0					
ANR	772031	Identifier	options		771999	1					
ANR	772032	ExpressionStatement	env -> case_fold_flag = reg -> case_fold_flag	5534:2:124342:124383	771999	5	True				
ANR	772033	AssignmentExpression	env -> case_fold_flag = reg -> case_fold_flag		771999	0		=			
ANR	772034	PtrMemberAccess	env -> case_fold_flag		771999	0					
ANR	772035	Identifier	env		771999	0					
ANR	772036	Identifier	case_fold_flag		771999	1					
ANR	772037	PtrMemberAccess	reg -> case_fold_flag		771999	1					
ANR	772038	Identifier	reg		771999	0					
ANR	772039	Identifier	case_fold_flag		771999	1					
ANR	772040	ExpressionStatement	env -> enc = reg -> enc	5535:2:124387:124417	771999	6	True				
ANR	772041	AssignmentExpression	env -> enc = reg -> enc		771999	0		=			
ANR	772042	PtrMemberAccess	env -> enc		771999	0					
ANR	772043	Identifier	env		771999	0					
ANR	772044	Identifier	enc		771999	1					
ANR	772045	PtrMemberAccess	reg -> enc		771999	1					
ANR	772046	Identifier	reg		771999	0					
ANR	772047	Identifier	enc		771999	1					
ANR	772048	ExpressionStatement	env -> syntax = reg -> syntax	5536:2:124421:124454	771999	7	True				
ANR	772049	AssignmentExpression	env -> syntax = reg -> syntax		771999	0		=			
ANR	772050	PtrMemberAccess	env -> syntax		771999	0					
ANR	772051	Identifier	env		771999	0					
ANR	772052	Identifier	syntax		771999	1					
ANR	772053	PtrMemberAccess	reg -> syntax		771999	1					
ANR	772054	Identifier	reg		771999	0					
ANR	772055	Identifier	syntax		771999	1					
ANR	772056	ExpressionStatement	env -> pattern = ( UChar * ) pattern	5537:2:124458:124496	771999	8	True				
ANR	772057	AssignmentExpression	env -> pattern = ( UChar * ) pattern		771999	0		=			
ANR	772058	PtrMemberAccess	env -> pattern		771999	0					
ANR	772059	Identifier	env		771999	0					
ANR	772060	Identifier	pattern		771999	1					
ANR	772061	CastExpression	( UChar * ) pattern		771999	1					
ANR	772062	CastTarget	UChar *		771999	0					
ANR	772063	Identifier	pattern		771999	1					
ANR	772064	ExpressionStatement	env -> pattern_end = ( UChar * ) end	5538:2:124500:124534	771999	9	True				
ANR	772065	AssignmentExpression	env -> pattern_end = ( UChar * ) end		771999	0		=			
ANR	772066	PtrMemberAccess	env -> pattern_end		771999	0					
ANR	772067	Identifier	env		771999	0					
ANR	772068	Identifier	pattern_end		771999	1					
ANR	772069	CastExpression	( UChar * ) end		771999	1					
ANR	772070	CastTarget	UChar *		771999	0					
ANR	772071	Identifier	end		771999	1					
ANR	772072	ExpressionStatement	env -> reg = reg	5539:2:124538:124563	771999	10	True				
ANR	772073	AssignmentExpression	env -> reg = reg		771999	0		=			
ANR	772074	PtrMemberAccess	env -> reg		771999	0					
ANR	772075	Identifier	env		771999	0					
ANR	772076	Identifier	reg		771999	1					
ANR	772077	Identifier	reg		771999	1					
ANR	772078	ExpressionStatement	* root = NULL	5541:2:124568:124580	771999	11	True				
ANR	772079	AssignmentExpression	* root = NULL		771999	0		=			
ANR	772080	UnaryOperationExpression	* root		771999	0					
ANR	772081	UnaryOperator	*		771999	0					
ANR	772082	Identifier	root		771999	1					
ANR	772083	Identifier	NULL		771999	1					
ANR	772084	ExpressionStatement	p = ( UChar * ) pattern	5542:2:124584:124604	771999	12	True				
ANR	772085	AssignmentExpression	p = ( UChar * ) pattern		771999	0		=			
ANR	772086	Identifier	p		771999	0					
ANR	772087	CastExpression	( UChar * ) pattern		771999	1					
ANR	772088	CastTarget	UChar *		771999	0					
ANR	772089	Identifier	pattern		771999	1					
ANR	772090	ExpressionStatement	"r = parse_regexp ( root , & p , ( UChar * ) end , env )"	5543:2:124608:124653	771999	13	True				
ANR	772091	AssignmentExpression	"r = parse_regexp ( root , & p , ( UChar * ) end , env )"		771999	0		=			
ANR	772092	Identifier	r		771999	0					
ANR	772093	CallExpression	"parse_regexp ( root , & p , ( UChar * ) end , env )"		771999	1					
ANR	772094	Callee	parse_regexp		771999	0					
ANR	772095	Identifier	parse_regexp		771999	0					
ANR	772096	ArgumentList	root		771999	1					
ANR	772097	Argument	root		771999	0					
ANR	772098	Identifier	root		771999	0					
ANR	772099	Argument	& p		771999	1					
ANR	772100	UnaryOperationExpression	& p		771999	0					
ANR	772101	UnaryOperator	&		771999	0					
ANR	772102	Identifier	p		771999	1					
ANR	772103	Argument	( UChar * ) end		771999	2					
ANR	772104	CastExpression	( UChar * ) end		771999	0					
ANR	772105	CastTarget	UChar *		771999	0					
ANR	772106	Identifier	end		771999	1					
ANR	772107	Argument	env		771999	3					
ANR	772108	Identifier	env		771999	0					
ANR	772109	ExpressionStatement	reg -> num_mem = env -> num_mem	5544:2:124657:124684	771999	14	True				
ANR	772110	AssignmentExpression	reg -> num_mem = env -> num_mem		771999	0		=			
ANR	772111	PtrMemberAccess	reg -> num_mem		771999	0					
ANR	772112	Identifier	reg		771999	0					
ANR	772113	Identifier	num_mem		771999	1					
ANR	772114	PtrMemberAccess	env -> num_mem		771999	1					
ANR	772115	Identifier	env		771999	0					
ANR	772116	Identifier	num_mem		771999	1					
ANR	772117	ReturnStatement	return r ;	5545:2:124688:124696	771999	15	True				
ANR	772118	Identifier	r		771999	0					
ANR	772119	ReturnType	extern int		771999	1					
ANR	772120	Identifier	onig_parse_make_tree		771999	2					
ANR	772121	ParameterList	"Node * * root , const UChar * pattern , const UChar * end , regex_t * reg , ScanEnv * env"		771999	3					
ANR	772122	Parameter	Node * * root	5522:21:124116:124126	771999	0	True				
ANR	772123	ParameterType	Node * *		771999	0					
ANR	772124	Identifier	root		771999	1					
ANR	772125	Parameter	const UChar * pattern	5522:34:124129:124148	771999	1	True				
ANR	772126	ParameterType	const UChar *		771999	0					
ANR	772127	Identifier	pattern		771999	1					
ANR	772128	Parameter	const UChar * end	5522:56:124151:124166	771999	2	True				
ANR	772129	ParameterType	const UChar *		771999	0					
ANR	772130	Identifier	end		771999	1					
ANR	772131	Parameter	regex_t * reg	5523:7:124176:124187	771999	3	True				
ANR	772132	ParameterType	regex_t *		771999	0					
ANR	772133	Identifier	reg		771999	1					
ANR	772134	Parameter	ScanEnv * env	5523:21:124190:124201	771999	4	True				
ANR	772135	ParameterType	ScanEnv *		771999	0					
ANR	772136	Identifier	env		771999	1					
ANR	772137	CFGEntryNode	ENTRY		771999		True				
ANR	772138	CFGExitNode	EXIT		771999		True				
ANR	772139	Symbol	pattern		771999						
ANR	772140	Symbol	env -> enc		771999						
ANR	772141	Symbol	env -> reg		771999						
ANR	772142	Symbol	env -> option		771999						
ANR	772143	Symbol	reg		771999						
ANR	772144	Symbol	reg -> options		771999						
ANR	772145	Symbol	root		771999						
ANR	772146	Symbol	end		771999						
ANR	772147	Symbol	reg -> num_mem		771999						
ANR	772148	Symbol	NULL		771999						
ANR	772149	Symbol	* env		771999						
ANR	772150	Symbol	env -> num_mem		771999						
ANR	772151	Symbol	env		771999						
ANR	772152	Symbol	env -> syntax		771999						
ANR	772153	Symbol	reg -> enc		771999						
ANR	772154	Symbol	p		771999						
ANR	772155	Symbol	r		771999						
ANR	772156	Symbol	env -> pattern		771999						
ANR	772157	Symbol	parse_regexp		771999						
ANR	772158	Symbol	reg -> syntax		771999						
ANR	772159	Symbol	& p		771999						
ANR	772160	Symbol	env -> pattern_end		771999						
ANR	772161	Symbol	env -> case_fold_flag		771999						
ANR	772162	Symbol	reg -> case_fold_flag		771999						
ANR	772163	Symbol	* root		771999						
ANR	772164	Symbol	* reg		771999						
ANR	772165	Function	onig_scan_env_set_error_string	5548:0:124701:124866							
ANR	772166	FunctionDef	"onig_scan_env_set_error_string (ScanEnv * env , int ecode ARG_UNUSED , UChar * arg , UChar * arg_end)"		772165	0					
ANR	772167	CompoundStatement		5551:0:124812:124866	772165	0					
ANR	772168	ExpressionStatement	env -> error = arg	5552:2:124816:124836	772165	0	True				
ANR	772169	AssignmentExpression	env -> error = arg		772165	0		=			
ANR	772170	PtrMemberAccess	env -> error		772165	0					
ANR	772171	Identifier	env		772165	0					
ANR	772172	Identifier	error		772165	1					
ANR	772173	Identifier	arg		772165	1					
ANR	772174	ExpressionStatement	env -> error_end = arg_end	5553:2:124840:124864	772165	1	True				
ANR	772175	AssignmentExpression	env -> error_end = arg_end		772165	0		=			
ANR	772176	PtrMemberAccess	env -> error_end		772165	0					
ANR	772177	Identifier	env		772165	0					
ANR	772178	Identifier	error_end		772165	1					
ANR	772179	Identifier	arg_end		772165	1					
ANR	772180	ReturnType	extern void		772165	1					
ANR	772181	Identifier	onig_scan_env_set_error_string		772165	2					
ANR	772182	ParameterList	"ScanEnv * env , int ecode ARG_UNUSED , UChar * arg , UChar * arg_end"		772165	3					
ANR	772183	Parameter	ScanEnv * env	5549:31:124744:124755	772165	0	True				
ANR	772184	ParameterType	ScanEnv *		772165	0					
ANR	772185	Identifier	env		772165	1					
ANR	772186	Parameter	int ecode ARG_UNUSED	5549:45:124758:124777	772165	1	True				
ANR	772187	ParameterType	int ecode		772165	0					
ANR	772188	Identifier	ARG_UNUSED		772165	1					
ANR	772189	Parameter	UChar * arg	5550:4:124784:124793	772165	2	True				
ANR	772190	ParameterType	UChar *		772165	0					
ANR	772191	Identifier	arg		772165	1					
ANR	772192	Parameter	UChar * arg_end	5550:16:124796:124809	772165	3	True				
ANR	772193	ParameterType	UChar *		772165	0					
ANR	772194	Identifier	arg_end		772165	1					
ANR	772195	CFGEntryNode	ENTRY		772165		True				
ANR	772196	CFGExitNode	EXIT		772165		True				
ANR	772197	Symbol	env -> error		772165						
ANR	772198	Symbol	arg		772165						
ANR	772199	Symbol	* env		772165						
ANR	772200	Symbol	env		772165						
ANR	772201	Symbol	ARG_UNUSED		772165						
ANR	772202	Symbol	env -> error_end		772165						
ANR	772203	Symbol	arg_end		772165						
