command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1022447	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativeARM_64.c								
ANR	1022448	Function	sljit_get_platform_name	27:0:1455:1562							
ANR	1022449	FunctionDef	sljit_get_platform_name ()		1022448	0					
ANR	1022450	CompoundStatement		28:0:1528:1562	1022448	0					
ANR	1022451	Statement	return	29:1:1531:1536	1022448	0	True				
ANR	1022452	Statement	"""ARM-64"""	29:8:1538:1545	1022448	1	True				
ANR	1022453	ExpressionStatement	SLJIT_CPUINFO	29:17:1547:1560	1022448	2	True				
ANR	1022454	Identifier	SLJIT_CPUINFO		1022448	0					
ANR	1022455	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1022448	1					
ANR	1022456	Identifier	sljit_get_platform_name		1022448	2					
ANR	1022457	ParameterList			1022448	3					
ANR	1022458	CFGEntryNode	ENTRY		1022448		True				
ANR	1022459	CFGExitNode	EXIT		1022448		True				
ANR	1022460	DeclStmt									
ANR	1022461	Decl							sljit_ui	sljit_ui	sljit_ins
ANR	1022462	DeclStmt									
ANR	1022463	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 8 ]	reg_map
ANR	1022464	Function	push_inst	127:0:4206:4424							
ANR	1022465	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_ins ins)"		1022464	0					
ANR	1022466	CompoundStatement		128:0:4280:4424	1022464	0					
ANR	1022467	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	129:1:4283:4351	1022464	0	True				
ANR	1022468	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1022464	0					
ANR	1022469	IdentifierDeclType	sljit_ins *		1022464	0					
ANR	1022470	Identifier	ptr		1022464	1					
ANR	1022471	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1022464	2		=			
ANR	1022472	Identifier	ptr		1022464	0					
ANR	1022473	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1022464	1					
ANR	1022474	CastTarget	sljit_ins *		1022464	0					
ANR	1022475	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1022464	1					
ANR	1022476	Callee	ensure_buf		1022464	0					
ANR	1022477	Identifier	ensure_buf		1022464	0					
ANR	1022478	ArgumentList	compiler		1022464	1					
ANR	1022479	Argument	compiler		1022464	0					
ANR	1022480	Identifier	compiler		1022464	0					
ANR	1022481	Argument	sizeof ( sljit_ins )		1022464	1					
ANR	1022482	SizeofExpression	sizeof ( sljit_ins )		1022464	0					
ANR	1022483	Sizeof	sizeof		1022464	0					
ANR	1022484	SizeofOperand	sljit_ins		1022464	1					
ANR	1022485	ExpressionStatement	FAIL_IF ( ! ptr )	130:1:4354:4367	1022464	1	True				
ANR	1022486	CallExpression	FAIL_IF ( ! ptr )		1022464	0					
ANR	1022487	Callee	FAIL_IF		1022464	0					
ANR	1022488	Identifier	FAIL_IF		1022464	0					
ANR	1022489	ArgumentList	! ptr		1022464	1					
ANR	1022490	Argument	! ptr		1022464	0					
ANR	1022491	UnaryOperationExpression	! ptr		1022464	0					
ANR	1022492	UnaryOperator	!		1022464	0					
ANR	1022493	Identifier	ptr		1022464	1					
ANR	1022494	ExpressionStatement	* ptr = ins	131:1:4370:4380	1022464	2	True				
ANR	1022495	AssignmentExpression	* ptr = ins		1022464	0		=			
ANR	1022496	UnaryOperationExpression	* ptr		1022464	0					
ANR	1022497	UnaryOperator	*		1022464	0					
ANR	1022498	Identifier	ptr		1022464	1					
ANR	1022499	Identifier	ins		1022464	1					
ANR	1022500	ExpressionStatement	compiler -> size ++	132:1:4383:4399	1022464	3	True				
ANR	1022501	PostIncDecOperationExpression	compiler -> size ++		1022464	0					
ANR	1022502	PtrMemberAccess	compiler -> size		1022464	0					
ANR	1022503	Identifier	compiler		1022464	0					
ANR	1022504	Identifier	size		1022464	1					
ANR	1022505	IncDec	++		1022464	1					
ANR	1022506	ReturnStatement	return SLJIT_SUCCESS ;	133:1:4402:4422	1022464	4	True				
ANR	1022507	Identifier	SLJIT_SUCCESS		1022464	0					
ANR	1022508	ReturnType	static sljit_si		1022464	1					
ANR	1022509	Identifier	push_inst		1022464	2					
ANR	1022510	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins"		1022464	3					
ANR	1022511	Parameter	struct sljit_compiler * compiler	127:26:4232:4262	1022464	0	True				
ANR	1022512	ParameterType	struct sljit_compiler *		1022464	0					
ANR	1022513	Identifier	compiler		1022464	1					
ANR	1022514	Parameter	sljit_ins ins	127:59:4265:4277	1022464	1	True				
ANR	1022515	ParameterType	sljit_ins		1022464	0					
ANR	1022516	Identifier	ins		1022464	1					
ANR	1022517	CFGEntryNode	ENTRY		1022464		True				
ANR	1022518	CFGExitNode	EXIT		1022464		True				
ANR	1022519	Symbol	compiler -> size		1022464						
ANR	1022520	Symbol	ensure_buf		1022464						
ANR	1022521	Symbol	* ptr		1022464						
ANR	1022522	Symbol	SLJIT_SUCCESS		1022464						
ANR	1022523	Symbol	* compiler		1022464						
ANR	1022524	Symbol	compiler		1022464						
ANR	1022525	Symbol	ins		1022464						
ANR	1022526	Symbol	ptr		1022464						
ANR	1022527	Function	emit_imm64_const	136:0:4427:4867							
ANR	1022528	FunctionDef	"emit_imm64_const (struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm)"		1022527	0					
ANR	1022529	CompoundStatement		137:0:4534:4867	1022527	0					
ANR	1022530	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) ) )"	138:1:4537:4605	1022527	0	True				
ANR	1022531	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) ) )"		1022527	0					
ANR	1022532	Callee	FAIL_IF		1022527	0					
ANR	1022533	Identifier	FAIL_IF		1022527	0					
ANR	1022534	ArgumentList	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) )"		1022527	1					
ANR	1022535	Argument	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) )"		1022527	0					
ANR	1022536	CallExpression	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) )"		1022527	0					
ANR	1022537	Callee	push_inst		1022527	0					
ANR	1022538	Identifier	push_inst		1022527	0					
ANR	1022539	ArgumentList	compiler		1022527	1					
ANR	1022540	Argument	compiler		1022527	0					
ANR	1022541	Identifier	compiler		1022527	0					
ANR	1022542	Argument	MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 )		1022527	1					
ANR	1022543	InclusiveOrExpression	MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 )		1022527	0		|			
ANR	1022544	Identifier	MOVZ		1022527	0					
ANR	1022545	InclusiveOrExpression	RD ( dst ) | ( ( imm & 0xffff ) << 5 )		1022527	1		|			
ANR	1022546	CallExpression	RD ( dst )		1022527	0					
ANR	1022547	Callee	RD		1022527	0					
ANR	1022548	Identifier	RD		1022527	0					
ANR	1022549	ArgumentList	dst		1022527	1					
ANR	1022550	Argument	dst		1022527	0					
ANR	1022551	Identifier	dst		1022527	0					
ANR	1022552	ShiftExpression	( imm & 0xffff ) << 5		1022527	1		<<			
ANR	1022553	BitAndExpression	imm & 0xffff		1022527	0		&			
ANR	1022554	Identifier	imm		1022527	0					
ANR	1022555	PrimaryExpression	0xffff		1022527	1					
ANR	1022556	PrimaryExpression	5		1022527	1					
ANR	1022557	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 ) ) )"	139:1:4608:4696	1022527	1	True				
ANR	1022558	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 ) ) )"		1022527	0					
ANR	1022559	Callee	FAIL_IF		1022527	0					
ANR	1022560	Identifier	FAIL_IF		1022527	0					
ANR	1022561	ArgumentList	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 ) )"		1022527	1					
ANR	1022562	Argument	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 ) )"		1022527	0					
ANR	1022563	CallExpression	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 ) )"		1022527	0					
ANR	1022564	Callee	push_inst		1022527	0					
ANR	1022565	Identifier	push_inst		1022527	0					
ANR	1022566	ArgumentList	compiler		1022527	1					
ANR	1022567	Argument	compiler		1022527	0					
ANR	1022568	Identifier	compiler		1022527	0					
ANR	1022569	Argument	MOVK | RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022527	1					
ANR	1022570	InclusiveOrExpression	MOVK | RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022527	0		|			
ANR	1022571	Identifier	MOVK		1022527	0					
ANR	1022572	InclusiveOrExpression	RD ( dst ) | ( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022527	1		|			
ANR	1022573	CallExpression	RD ( dst )		1022527	0					
ANR	1022574	Callee	RD		1022527	0					
ANR	1022575	Identifier	RD		1022527	0					
ANR	1022576	ArgumentList	dst		1022527	1					
ANR	1022577	Argument	dst		1022527	0					
ANR	1022578	Identifier	dst		1022527	0					
ANR	1022579	InclusiveOrExpression	( ( ( imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022527	1		|			
ANR	1022580	ShiftExpression	( ( imm >> 16 ) & 0xffff ) << 5		1022527	0		<<			
ANR	1022581	BitAndExpression	( imm >> 16 ) & 0xffff		1022527	0		&			
ANR	1022582	ShiftExpression	imm >> 16		1022527	0		>>			
ANR	1022583	Identifier	imm		1022527	0					
ANR	1022584	PrimaryExpression	16		1022527	1					
ANR	1022585	PrimaryExpression	0xffff		1022527	1					
ANR	1022586	PrimaryExpression	5		1022527	1					
ANR	1022587	ShiftExpression	1 << 21		1022527	1		<<			
ANR	1022588	PrimaryExpression	1		1022527	0					
ANR	1022589	PrimaryExpression	21		1022527	1					
ANR	1022590	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 ) ) )"	140:1:4699:4787	1022527	2	True				
ANR	1022591	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 ) ) )"		1022527	0					
ANR	1022592	Callee	FAIL_IF		1022527	0					
ANR	1022593	Identifier	FAIL_IF		1022527	0					
ANR	1022594	ArgumentList	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 ) )"		1022527	1					
ANR	1022595	Argument	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 ) )"		1022527	0					
ANR	1022596	CallExpression	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 ) )"		1022527	0					
ANR	1022597	Callee	push_inst		1022527	0					
ANR	1022598	Identifier	push_inst		1022527	0					
ANR	1022599	ArgumentList	compiler		1022527	1					
ANR	1022600	Argument	compiler		1022527	0					
ANR	1022601	Identifier	compiler		1022527	0					
ANR	1022602	Argument	MOVK | RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022527	1					
ANR	1022603	InclusiveOrExpression	MOVK | RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022527	0		|			
ANR	1022604	Identifier	MOVK		1022527	0					
ANR	1022605	InclusiveOrExpression	RD ( dst ) | ( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022527	1		|			
ANR	1022606	CallExpression	RD ( dst )		1022527	0					
ANR	1022607	Callee	RD		1022527	0					
ANR	1022608	Identifier	RD		1022527	0					
ANR	1022609	ArgumentList	dst		1022527	1					
ANR	1022610	Argument	dst		1022527	0					
ANR	1022611	Identifier	dst		1022527	0					
ANR	1022612	InclusiveOrExpression	( ( ( imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022527	1		|			
ANR	1022613	ShiftExpression	( ( imm >> 32 ) & 0xffff ) << 5		1022527	0		<<			
ANR	1022614	BitAndExpression	( imm >> 32 ) & 0xffff		1022527	0		&			
ANR	1022615	ShiftExpression	imm >> 32		1022527	0		>>			
ANR	1022616	Identifier	imm		1022527	0					
ANR	1022617	PrimaryExpression	32		1022527	1					
ANR	1022618	PrimaryExpression	0xffff		1022527	1					
ANR	1022619	PrimaryExpression	5		1022527	1					
ANR	1022620	ShiftExpression	2 << 21		1022527	1		<<			
ANR	1022621	PrimaryExpression	2		1022527	0					
ANR	1022622	PrimaryExpression	21		1022527	1					
ANR	1022623	ReturnStatement	"return push_inst ( compiler , MOVK | RD ( dst ) | ( ( imm >> 48 ) << 5 ) | ( 3 << 21 ) ) ;"	141:1:4790:4865	1022527	3	True				
ANR	1022624	CallExpression	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( imm >> 48 ) << 5 ) | ( 3 << 21 ) )"		1022527	0					
ANR	1022625	Callee	push_inst		1022527	0					
ANR	1022626	Identifier	push_inst		1022527	0					
ANR	1022627	ArgumentList	compiler		1022527	1					
ANR	1022628	Argument	compiler		1022527	0					
ANR	1022629	Identifier	compiler		1022527	0					
ANR	1022630	Argument	MOVK | RD ( dst ) | ( ( imm >> 48 ) << 5 ) | ( 3 << 21 )		1022527	1					
ANR	1022631	InclusiveOrExpression	MOVK | RD ( dst ) | ( ( imm >> 48 ) << 5 ) | ( 3 << 21 )		1022527	0		|			
ANR	1022632	Identifier	MOVK		1022527	0					
ANR	1022633	InclusiveOrExpression	RD ( dst ) | ( ( imm >> 48 ) << 5 ) | ( 3 << 21 )		1022527	1		|			
ANR	1022634	CallExpression	RD ( dst )		1022527	0					
ANR	1022635	Callee	RD		1022527	0					
ANR	1022636	Identifier	RD		1022527	0					
ANR	1022637	ArgumentList	dst		1022527	1					
ANR	1022638	Argument	dst		1022527	0					
ANR	1022639	Identifier	dst		1022527	0					
ANR	1022640	InclusiveOrExpression	( ( imm >> 48 ) << 5 ) | ( 3 << 21 )		1022527	1		|			
ANR	1022641	ShiftExpression	( imm >> 48 ) << 5		1022527	0		<<			
ANR	1022642	ShiftExpression	imm >> 48		1022527	0		>>			
ANR	1022643	Identifier	imm		1022527	0					
ANR	1022644	PrimaryExpression	48		1022527	1					
ANR	1022645	PrimaryExpression	5		1022527	1					
ANR	1022646	ShiftExpression	3 << 21		1022527	1		<<			
ANR	1022647	PrimaryExpression	3		1022527	0					
ANR	1022648	PrimaryExpression	21		1022527	1					
ANR	1022649	ReturnType	static SLJIT_INLINE sljit_si		1022527	1					
ANR	1022650	Identifier	emit_imm64_const		1022527	2					
ANR	1022651	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm"		1022527	3					
ANR	1022652	Parameter	struct sljit_compiler * compiler	136:46:4473:4503	1022527	0	True				
ANR	1022653	ParameterType	struct sljit_compiler *		1022527	0					
ANR	1022654	Identifier	compiler		1022527	1					
ANR	1022655	Parameter	sljit_si dst	136:79:4506:4517	1022527	1	True				
ANR	1022656	ParameterType	sljit_si		1022527	0					
ANR	1022657	Identifier	dst		1022527	1					
ANR	1022658	Parameter	sljit_uw imm	136:93:4520:4531	1022527	2	True				
ANR	1022659	ParameterType	sljit_uw		1022527	0					
ANR	1022660	Identifier	imm		1022527	1					
ANR	1022661	CFGEntryNode	ENTRY		1022527		True				
ANR	1022662	CFGExitNode	EXIT		1022527		True				
ANR	1022663	Symbol	push_inst		1022527						
ANR	1022664	Symbol	MOVZ		1022527						
ANR	1022665	Symbol	RD		1022527						
ANR	1022666	Symbol	MOVK		1022527						
ANR	1022667	Symbol	dst		1022527						
ANR	1022668	Symbol	imm		1022527						
ANR	1022669	Symbol	compiler		1022527						
ANR	1022670	Function	modify_imm64_const	144:0:4870:5331							
ANR	1022671	FunctionDef	"modify_imm64_const (sljit_ins * inst , sljit_uw new_imm)"		1022670	0					
ANR	1022672	CompoundStatement		145:0:4949:5331	1022670	0					
ANR	1022673	IdentifierDeclStatement	sljit_si dst = inst [ 0 ] & 0x1f ;	146:1:4952:4981	1022670	0	True				
ANR	1022674	IdentifierDecl	dst = inst [ 0 ] & 0x1f		1022670	0					
ANR	1022675	IdentifierDeclType	sljit_si		1022670	0					
ANR	1022676	Identifier	dst		1022670	1					
ANR	1022677	AssignmentExpression	dst = inst [ 0 ] & 0x1f		1022670	2		=			
ANR	1022678	Identifier	dst		1022670	0					
ANR	1022679	BitAndExpression	inst [ 0 ] & 0x1f		1022670	1		&			
ANR	1022680	ArrayIndexing	inst [ 0 ]		1022670	0					
ANR	1022681	Identifier	inst		1022670	0					
ANR	1022682	PrimaryExpression	0		1022670	1					
ANR	1022683	PrimaryExpression	0x1f		1022670	1					
ANR	1022684	ExpressionStatement	SLJIT_ASSERT ( ( inst [ 0 ] & 0xffe00000 ) == MOVZ && ( inst [ 1 ] & 0xffe00000 ) == ( MOVK | ( 1 << 21 ) ) )	147:1:4984:5076	1022670	1	True				
ANR	1022685	CallExpression	SLJIT_ASSERT ( ( inst [ 0 ] & 0xffe00000 ) == MOVZ && ( inst [ 1 ] & 0xffe00000 ) == ( MOVK | ( 1 << 21 ) ) )		1022670	0					
ANR	1022686	Callee	SLJIT_ASSERT		1022670	0					
ANR	1022687	Identifier	SLJIT_ASSERT		1022670	0					
ANR	1022688	ArgumentList	( inst [ 0 ] & 0xffe00000 ) == MOVZ && ( inst [ 1 ] & 0xffe00000 ) == ( MOVK | ( 1 << 21 ) )		1022670	1					
ANR	1022689	Argument	( inst [ 0 ] & 0xffe00000 ) == MOVZ && ( inst [ 1 ] & 0xffe00000 ) == ( MOVK | ( 1 << 21 ) )		1022670	0					
ANR	1022690	AndExpression	( inst [ 0 ] & 0xffe00000 ) == MOVZ && ( inst [ 1 ] & 0xffe00000 ) == ( MOVK | ( 1 << 21 ) )		1022670	0		&&			
ANR	1022691	EqualityExpression	( inst [ 0 ] & 0xffe00000 ) == MOVZ		1022670	0		==			
ANR	1022692	BitAndExpression	inst [ 0 ] & 0xffe00000		1022670	0		&			
ANR	1022693	ArrayIndexing	inst [ 0 ]		1022670	0					
ANR	1022694	Identifier	inst		1022670	0					
ANR	1022695	PrimaryExpression	0		1022670	1					
ANR	1022696	PrimaryExpression	0xffe00000		1022670	1					
ANR	1022697	Identifier	MOVZ		1022670	1					
ANR	1022698	EqualityExpression	( inst [ 1 ] & 0xffe00000 ) == ( MOVK | ( 1 << 21 ) )		1022670	1		==			
ANR	1022699	BitAndExpression	inst [ 1 ] & 0xffe00000		1022670	0		&			
ANR	1022700	ArrayIndexing	inst [ 1 ]		1022670	0					
ANR	1022701	Identifier	inst		1022670	0					
ANR	1022702	PrimaryExpression	1		1022670	1					
ANR	1022703	PrimaryExpression	0xffe00000		1022670	1					
ANR	1022704	InclusiveOrExpression	MOVK | ( 1 << 21 )		1022670	1		|			
ANR	1022705	Identifier	MOVK		1022670	0					
ANR	1022706	ShiftExpression	1 << 21		1022670	1		<<			
ANR	1022707	PrimaryExpression	1		1022670	0					
ANR	1022708	PrimaryExpression	21		1022670	1					
ANR	1022709	ExpressionStatement	inst [ 0 ] = MOVZ | dst | ( ( new_imm & 0xffff ) << 5 )	148:1:5079:5127	1022670	2	True				
ANR	1022710	AssignmentExpression	inst [ 0 ] = MOVZ | dst | ( ( new_imm & 0xffff ) << 5 )		1022670	0		=			
ANR	1022711	ArrayIndexing	inst [ 0 ]		1022670	0					
ANR	1022712	Identifier	inst		1022670	0					
ANR	1022713	PrimaryExpression	0		1022670	1					
ANR	1022714	InclusiveOrExpression	MOVZ | dst | ( ( new_imm & 0xffff ) << 5 )		1022670	1		|			
ANR	1022715	Identifier	MOVZ		1022670	0					
ANR	1022716	InclusiveOrExpression	dst | ( ( new_imm & 0xffff ) << 5 )		1022670	1		|			
ANR	1022717	Identifier	dst		1022670	0					
ANR	1022718	ShiftExpression	( new_imm & 0xffff ) << 5		1022670	1		<<			
ANR	1022719	BitAndExpression	new_imm & 0xffff		1022670	0		&			
ANR	1022720	Identifier	new_imm		1022670	0					
ANR	1022721	PrimaryExpression	0xffff		1022670	1					
ANR	1022722	PrimaryExpression	5		1022670	1					
ANR	1022723	ExpressionStatement	inst [ 1 ] = MOVK | dst | ( ( ( new_imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )	149:1:5130:5198	1022670	3	True				
ANR	1022724	AssignmentExpression	inst [ 1 ] = MOVK | dst | ( ( ( new_imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022670	0		=			
ANR	1022725	ArrayIndexing	inst [ 1 ]		1022670	0					
ANR	1022726	Identifier	inst		1022670	0					
ANR	1022727	PrimaryExpression	1		1022670	1					
ANR	1022728	InclusiveOrExpression	MOVK | dst | ( ( ( new_imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022670	1		|			
ANR	1022729	Identifier	MOVK		1022670	0					
ANR	1022730	InclusiveOrExpression	dst | ( ( ( new_imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022670	1		|			
ANR	1022731	Identifier	dst		1022670	0					
ANR	1022732	InclusiveOrExpression	( ( ( new_imm >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1022670	1		|			
ANR	1022733	ShiftExpression	( ( new_imm >> 16 ) & 0xffff ) << 5		1022670	0		<<			
ANR	1022734	BitAndExpression	( new_imm >> 16 ) & 0xffff		1022670	0		&			
ANR	1022735	ShiftExpression	new_imm >> 16		1022670	0		>>			
ANR	1022736	Identifier	new_imm		1022670	0					
ANR	1022737	PrimaryExpression	16		1022670	1					
ANR	1022738	PrimaryExpression	0xffff		1022670	1					
ANR	1022739	PrimaryExpression	5		1022670	1					
ANR	1022740	ShiftExpression	1 << 21		1022670	1		<<			
ANR	1022741	PrimaryExpression	1		1022670	0					
ANR	1022742	PrimaryExpression	21		1022670	1					
ANR	1022743	ExpressionStatement	inst [ 2 ] = MOVK | dst | ( ( ( new_imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )	150:1:5201:5269	1022670	4	True				
ANR	1022744	AssignmentExpression	inst [ 2 ] = MOVK | dst | ( ( ( new_imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022670	0		=			
ANR	1022745	ArrayIndexing	inst [ 2 ]		1022670	0					
ANR	1022746	Identifier	inst		1022670	0					
ANR	1022747	PrimaryExpression	2		1022670	1					
ANR	1022748	InclusiveOrExpression	MOVK | dst | ( ( ( new_imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022670	1		|			
ANR	1022749	Identifier	MOVK		1022670	0					
ANR	1022750	InclusiveOrExpression	dst | ( ( ( new_imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022670	1		|			
ANR	1022751	Identifier	dst		1022670	0					
ANR	1022752	InclusiveOrExpression	( ( ( new_imm >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1022670	1		|			
ANR	1022753	ShiftExpression	( ( new_imm >> 32 ) & 0xffff ) << 5		1022670	0		<<			
ANR	1022754	BitAndExpression	( new_imm >> 32 ) & 0xffff		1022670	0		&			
ANR	1022755	ShiftExpression	new_imm >> 32		1022670	0		>>			
ANR	1022756	Identifier	new_imm		1022670	0					
ANR	1022757	PrimaryExpression	32		1022670	1					
ANR	1022758	PrimaryExpression	0xffff		1022670	1					
ANR	1022759	PrimaryExpression	5		1022670	1					
ANR	1022760	ShiftExpression	2 << 21		1022670	1		<<			
ANR	1022761	PrimaryExpression	2		1022670	0					
ANR	1022762	PrimaryExpression	21		1022670	1					
ANR	1022763	ExpressionStatement	inst [ 3 ] = MOVK | dst | ( ( new_imm >> 48 ) << 5 ) | ( 3 << 21 )	151:1:5272:5329	1022670	5	True				
ANR	1022764	AssignmentExpression	inst [ 3 ] = MOVK | dst | ( ( new_imm >> 48 ) << 5 ) | ( 3 << 21 )		1022670	0		=			
ANR	1022765	ArrayIndexing	inst [ 3 ]		1022670	0					
ANR	1022766	Identifier	inst		1022670	0					
ANR	1022767	PrimaryExpression	3		1022670	1					
ANR	1022768	InclusiveOrExpression	MOVK | dst | ( ( new_imm >> 48 ) << 5 ) | ( 3 << 21 )		1022670	1		|			
ANR	1022769	Identifier	MOVK		1022670	0					
ANR	1022770	InclusiveOrExpression	dst | ( ( new_imm >> 48 ) << 5 ) | ( 3 << 21 )		1022670	1		|			
ANR	1022771	Identifier	dst		1022670	0					
ANR	1022772	InclusiveOrExpression	( ( new_imm >> 48 ) << 5 ) | ( 3 << 21 )		1022670	1		|			
ANR	1022773	ShiftExpression	( new_imm >> 48 ) << 5		1022670	0		<<			
ANR	1022774	ShiftExpression	new_imm >> 48		1022670	0		>>			
ANR	1022775	Identifier	new_imm		1022670	0					
ANR	1022776	PrimaryExpression	48		1022670	1					
ANR	1022777	PrimaryExpression	5		1022670	1					
ANR	1022778	ShiftExpression	3 << 21		1022670	1		<<			
ANR	1022779	PrimaryExpression	3		1022670	0					
ANR	1022780	PrimaryExpression	21		1022670	1					
ANR	1022781	ReturnType	static SLJIT_INLINE void		1022670	1					
ANR	1022782	Identifier	modify_imm64_const		1022670	2					
ANR	1022783	ParameterList	"sljit_ins * inst , sljit_uw new_imm"		1022670	3					
ANR	1022784	Parameter	sljit_ins * inst	144:44:4914:4928	1022670	0	True				
ANR	1022785	ParameterType	sljit_ins *		1022670	0					
ANR	1022786	Identifier	inst		1022670	1					
ANR	1022787	Parameter	sljit_uw new_imm	144:61:4931:4946	1022670	1	True				
ANR	1022788	ParameterType	sljit_uw		1022670	0					
ANR	1022789	Identifier	new_imm		1022670	1					
ANR	1022790	CFGEntryNode	ENTRY		1022670		True				
ANR	1022791	CFGExitNode	EXIT		1022670		True				
ANR	1022792	Symbol	MOVZ		1022670						
ANR	1022793	Symbol	* inst		1022670						
ANR	1022794	Symbol	MOVK		1022670						
ANR	1022795	Symbol	dst		1022670						
ANR	1022796	Symbol	inst		1022670						
ANR	1022797	Symbol	new_imm		1022670						
ANR	1022798	Function	detect_jump_type	154:0:5334:6530							
ANR	1022799	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code)"		1022798	0					
ANR	1022800	CompoundStatement		155:0:5443:6530	1022798	0					
ANR	1022801	IdentifierDeclStatement	sljit_sw diff ;	156:1:5446:5459	1022798	0	True				
ANR	1022802	IdentifierDecl	diff		1022798	0					
ANR	1022803	IdentifierDeclType	sljit_sw		1022798	0					
ANR	1022804	Identifier	diff		1022798	1					
ANR	1022805	IdentifierDeclStatement	sljit_uw target_addr ;	157:1:5462:5482	1022798	1	True				
ANR	1022806	IdentifierDecl	target_addr		1022798	0					
ANR	1022807	IdentifierDeclType	sljit_uw		1022798	0					
ANR	1022808	Identifier	target_addr		1022798	1					
ANR	1022809	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1022798	2					
ANR	1022810	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	159:5:5490:5524	1022798	0	True				
ANR	1022811	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1022798	0		&			
ANR	1022812	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022813	Identifier	jump		1022798	0					
ANR	1022814	Identifier	flags		1022798	1					
ANR	1022815	Identifier	SLJIT_REWRITABLE_JUMP		1022798	1					
ANR	1022816	CompoundStatement		5:42:83:83	1022798	1					
ANR	1022817	ExpressionStatement	jump -> flags |= PATCH_ABS64	160:2:5531:5557	1022798	0	True				
ANR	1022818	AssignmentExpression	jump -> flags |= PATCH_ABS64		1022798	0		|=			
ANR	1022819	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022820	Identifier	jump		1022798	0					
ANR	1022821	Identifier	flags		1022798	1					
ANR	1022822	Identifier	PATCH_ABS64		1022798	1					
ANR	1022823	ReturnStatement	return 0 ;	161:2:5561:5569	1022798	1	True				
ANR	1022824	PrimaryExpression	0		1022798	0					
ANR	1022825	IfStatement	if ( jump -> flags & JUMP_ADDR )		1022798	3					
ANR	1022826	Condition	jump -> flags & JUMP_ADDR	164:5:5580:5602	1022798	0	True				
ANR	1022827	BitAndExpression	jump -> flags & JUMP_ADDR		1022798	0		&			
ANR	1022828	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022829	Identifier	jump		1022798	0					
ANR	1022830	Identifier	flags		1022798	1					
ANR	1022831	Identifier	JUMP_ADDR		1022798	1					
ANR	1022832	ExpressionStatement	target_addr = jump -> u . target	165:2:5607:5635	1022798	1	True				
ANR	1022833	AssignmentExpression	target_addr = jump -> u . target		1022798	0		=			
ANR	1022834	Identifier	target_addr		1022798	0					
ANR	1022835	MemberAccess	jump -> u . target		1022798	1					
ANR	1022836	PtrMemberAccess	jump -> u		1022798	0					
ANR	1022837	Identifier	jump		1022798	0					
ANR	1022838	Identifier	u		1022798	1					
ANR	1022839	Identifier	target		1022798	1					
ANR	1022840	ElseStatement	else		1022798	0					
ANR	1022841	CompoundStatement		12:6:199:199	1022798	0					
ANR	1022842	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	167:2:5647:5685	1022798	0	True				
ANR	1022843	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1022798	0					
ANR	1022844	Callee	SLJIT_ASSERT		1022798	0					
ANR	1022845	Identifier	SLJIT_ASSERT		1022798	0					
ANR	1022846	ArgumentList	jump -> flags & JUMP_LABEL		1022798	1					
ANR	1022847	Argument	jump -> flags & JUMP_LABEL		1022798	0					
ANR	1022848	BitAndExpression	jump -> flags & JUMP_LABEL		1022798	0		&			
ANR	1022849	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022850	Identifier	jump		1022798	0					
ANR	1022851	Identifier	flags		1022798	1					
ANR	1022852	Identifier	JUMP_LABEL		1022798	1					
ANR	1022853	ExpressionStatement	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	168:2:5689:5741	1022798	1	True				
ANR	1022854	AssignmentExpression	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1022798	0		=			
ANR	1022855	Identifier	target_addr		1022798	0					
ANR	1022856	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1022798	1					
ANR	1022857	CastTarget	sljit_uw		1022798	0					
ANR	1022858	AdditiveExpression	code + jump -> u . label -> size		1022798	1		+			
ANR	1022859	Identifier	code		1022798	0					
ANR	1022860	PtrMemberAccess	jump -> u . label -> size		1022798	1					
ANR	1022861	MemberAccess	jump -> u . label		1022798	0					
ANR	1022862	PtrMemberAccess	jump -> u		1022798	0					
ANR	1022863	Identifier	jump		1022798	0					
ANR	1022864	Identifier	u		1022798	1					
ANR	1022865	Identifier	label		1022798	1					
ANR	1022866	Identifier	size		1022798	1					
ANR	1022867	ExpressionStatement	diff = ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr + 4 )	170:1:5747:5802	1022798	4	True				
ANR	1022868	AssignmentExpression	diff = ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr + 4 )		1022798	0		=			
ANR	1022869	Identifier	diff		1022798	0					
ANR	1022870	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr + 4 )		1022798	1		-			
ANR	1022871	CastExpression	( sljit_sw ) target_addr		1022798	0					
ANR	1022872	CastTarget	sljit_sw		1022798	0					
ANR	1022873	Identifier	target_addr		1022798	1					
ANR	1022874	CastExpression	( sljit_sw ) ( code_ptr + 4 )		1022798	1					
ANR	1022875	CastTarget	sljit_sw		1022798	0					
ANR	1022876	AdditiveExpression	code_ptr + 4		1022798	1		+			
ANR	1022877	Identifier	code_ptr		1022798	0					
ANR	1022878	PrimaryExpression	4		1022798	1					
ANR	1022879	IfStatement	if ( jump -> flags & IS_COND )		1022798	5					
ANR	1022880	Condition	jump -> flags & IS_COND	172:5:5810:5830	1022798	0	True				
ANR	1022881	BitAndExpression	jump -> flags & IS_COND		1022798	0		&			
ANR	1022882	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022883	Identifier	jump		1022798	0					
ANR	1022884	Identifier	flags		1022798	1					
ANR	1022885	Identifier	IS_COND		1022798	1					
ANR	1022886	CompoundStatement		18:28:389:389	1022798	1					
ANR	1022887	ExpressionStatement	diff += sizeof ( sljit_ins )	173:2:5837:5862	1022798	0	True				
ANR	1022888	AssignmentExpression	diff += sizeof ( sljit_ins )		1022798	0		+=			
ANR	1022889	Identifier	diff		1022798	0					
ANR	1022890	SizeofExpression	sizeof ( sljit_ins )		1022798	1					
ANR	1022891	Sizeof	sizeof		1022798	0					
ANR	1022892	SizeofOperand	sljit_ins		1022798	1					
ANR	1022893	IfStatement	if ( diff <= 0xfffff && diff >= - 0x100000 )		1022798	1					
ANR	1022894	Condition	diff <= 0xfffff && diff >= - 0x100000	174:6:5870:5905	1022798	0	True				
ANR	1022895	AndExpression	diff <= 0xfffff && diff >= - 0x100000		1022798	0		&&			
ANR	1022896	RelationalExpression	diff <= 0xfffff		1022798	0		<=			
ANR	1022897	Identifier	diff		1022798	0					
ANR	1022898	PrimaryExpression	0xfffff		1022798	1					
ANR	1022899	RelationalExpression	diff >= - 0x100000		1022798	1		>=			
ANR	1022900	Identifier	diff		1022798	0					
ANR	1022901	UnaryOperationExpression	- 0x100000		1022798	1					
ANR	1022902	UnaryOperator	-		1022798	0					
ANR	1022903	PrimaryExpression	0x100000		1022798	1					
ANR	1022904	CompoundStatement		20:44:464:464	1022798	1					
ANR	1022905	ExpressionStatement	code_ptr [ - 5 ] ^= ( jump -> flags & IS_CBZ ) ? ( 0x1 << 24 ) : 0x1	175:3:5913:5971	1022798	0	True				
ANR	1022906	AssignmentExpression	code_ptr [ - 5 ] ^= ( jump -> flags & IS_CBZ ) ? ( 0x1 << 24 ) : 0x1		1022798	0		^=			
ANR	1022907	ArrayIndexing	code_ptr [ - 5 ]		1022798	0					
ANR	1022908	Identifier	code_ptr		1022798	0					
ANR	1022909	UnaryOperationExpression	- 5		1022798	1					
ANR	1022910	UnaryOperator	-		1022798	0					
ANR	1022911	PrimaryExpression	5		1022798	1					
ANR	1022912	ConditionalExpression	( jump -> flags & IS_CBZ ) ? ( 0x1 << 24 ) : 0x1		1022798	1					
ANR	1022913	Condition	jump -> flags & IS_CBZ		1022798	0					
ANR	1022914	BitAndExpression	jump -> flags & IS_CBZ		1022798	0		&			
ANR	1022915	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022916	Identifier	jump		1022798	0					
ANR	1022917	Identifier	flags		1022798	1					
ANR	1022918	Identifier	IS_CBZ		1022798	1					
ANR	1022919	ShiftExpression	0x1 << 24		1022798	1		<<			
ANR	1022920	PrimaryExpression	0x1		1022798	0					
ANR	1022921	PrimaryExpression	24		1022798	1					
ANR	1022922	PrimaryExpression	0x1		1022798	2					
ANR	1022923	ExpressionStatement	jump -> addr -= sizeof ( sljit_ins )	176:3:5976:6007	1022798	1	True				
ANR	1022924	AssignmentExpression	jump -> addr -= sizeof ( sljit_ins )		1022798	0		-=			
ANR	1022925	PtrMemberAccess	jump -> addr		1022798	0					
ANR	1022926	Identifier	jump		1022798	0					
ANR	1022927	Identifier	addr		1022798	1					
ANR	1022928	SizeofExpression	sizeof ( sljit_ins )		1022798	1					
ANR	1022929	Sizeof	sizeof		1022798	0					
ANR	1022930	SizeofOperand	sljit_ins		1022798	1					
ANR	1022931	ExpressionStatement	jump -> flags |= PATCH_COND	177:3:6012:6037	1022798	2	True				
ANR	1022932	AssignmentExpression	jump -> flags |= PATCH_COND		1022798	0		|=			
ANR	1022933	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022934	Identifier	jump		1022798	0					
ANR	1022935	Identifier	flags		1022798	1					
ANR	1022936	Identifier	PATCH_COND		1022798	1					
ANR	1022937	ReturnStatement	return 5 ;	178:3:6042:6050	1022798	3	True				
ANR	1022938	PrimaryExpression	5		1022798	0					
ANR	1022939	ExpressionStatement	diff -= sizeof ( sljit_ins )	180:2:6058:6083	1022798	2	True				
ANR	1022940	AssignmentExpression	diff -= sizeof ( sljit_ins )		1022798	0		-=			
ANR	1022941	Identifier	diff		1022798	0					
ANR	1022942	SizeofExpression	sizeof ( sljit_ins )		1022798	1					
ANR	1022943	Sizeof	sizeof		1022798	0					
ANR	1022944	SizeofOperand	sljit_ins		1022798	1					
ANR	1022945	IfStatement	if ( diff <= 0x7ffffff && diff >= - 0x8000000 )		1022798	6					
ANR	1022946	Condition	diff <= 0x7ffffff && diff >= - 0x8000000	183:5:6094:6132	1022798	0	True				
ANR	1022947	AndExpression	diff <= 0x7ffffff && diff >= - 0x8000000		1022798	0		&&			
ANR	1022948	RelationalExpression	diff <= 0x7ffffff		1022798	0		<=			
ANR	1022949	Identifier	diff		1022798	0					
ANR	1022950	PrimaryExpression	0x7ffffff		1022798	1					
ANR	1022951	RelationalExpression	diff >= - 0x8000000		1022798	1		>=			
ANR	1022952	Identifier	diff		1022798	0					
ANR	1022953	UnaryOperationExpression	- 0x8000000		1022798	1					
ANR	1022954	UnaryOperator	-		1022798	0					
ANR	1022955	PrimaryExpression	0x8000000		1022798	1					
ANR	1022956	CompoundStatement		29:46:691:691	1022798	1					
ANR	1022957	ExpressionStatement	jump -> flags |= PATCH_B	184:2:6139:6161	1022798	0	True				
ANR	1022958	AssignmentExpression	jump -> flags |= PATCH_B		1022798	0		|=			
ANR	1022959	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022960	Identifier	jump		1022798	0					
ANR	1022961	Identifier	flags		1022798	1					
ANR	1022962	Identifier	PATCH_B		1022798	1					
ANR	1022963	ReturnStatement	return 4 ;	185:2:6165:6173	1022798	1	True				
ANR	1022964	PrimaryExpression	4		1022798	0					
ANR	1022965	IfStatement	if ( target_addr <= 0xffffffffl )		1022798	7					
ANR	1022966	Condition	target_addr <= 0xffffffffl	188:5:6184:6209	1022798	0	True				
ANR	1022967	RelationalExpression	target_addr <= 0xffffffffl		1022798	0		<=			
ANR	1022968	Identifier	target_addr		1022798	0					
ANR	1022969	PrimaryExpression	0xffffffffl		1022798	1					
ANR	1022970	CompoundStatement		34:33:768:768	1022798	1					
ANR	1022971	IfStatement	if ( jump -> flags & IS_COND )		1022798	0					
ANR	1022972	Condition	jump -> flags & IS_COND	189:6:6220:6240	1022798	0	True				
ANR	1022973	BitAndExpression	jump -> flags & IS_COND		1022798	0		&			
ANR	1022974	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1022975	Identifier	jump		1022798	0					
ANR	1022976	Identifier	flags		1022798	1					
ANR	1022977	Identifier	IS_COND		1022798	1					
ANR	1022978	ExpressionStatement	code_ptr [ - 5 ] -= ( 2 << 5 )	190:3:6246:6270	1022798	1	True				
ANR	1022979	AssignmentExpression	code_ptr [ - 5 ] -= ( 2 << 5 )		1022798	0		-=			
ANR	1022980	ArrayIndexing	code_ptr [ - 5 ]		1022798	0					
ANR	1022981	Identifier	code_ptr		1022798	0					
ANR	1022982	UnaryOperationExpression	- 5		1022798	1					
ANR	1022983	UnaryOperator	-		1022798	0					
ANR	1022984	PrimaryExpression	5		1022798	1					
ANR	1022985	ShiftExpression	2 << 5		1022798	1		<<			
ANR	1022986	PrimaryExpression	2		1022798	0					
ANR	1022987	PrimaryExpression	5		1022798	1					
ANR	1022988	ExpressionStatement	code_ptr [ - 2 ] = code_ptr [ 0 ]	191:2:6274:6300	1022798	1	True				
ANR	1022989	AssignmentExpression	code_ptr [ - 2 ] = code_ptr [ 0 ]		1022798	0		=			
ANR	1022990	ArrayIndexing	code_ptr [ - 2 ]		1022798	0					
ANR	1022991	Identifier	code_ptr		1022798	0					
ANR	1022992	UnaryOperationExpression	- 2		1022798	1					
ANR	1022993	UnaryOperator	-		1022798	0					
ANR	1022994	PrimaryExpression	2		1022798	1					
ANR	1022995	ArrayIndexing	code_ptr [ 0 ]		1022798	1					
ANR	1022996	Identifier	code_ptr		1022798	0					
ANR	1022997	PrimaryExpression	0		1022798	1					
ANR	1022998	ReturnStatement	return 2 ;	192:2:6304:6312	1022798	2	True				
ANR	1022999	PrimaryExpression	2		1022798	0					
ANR	1023000	IfStatement	if ( target_addr <= 0xffffffffffffl )		1022798	8					
ANR	1023001	Condition	target_addr <= 0xffffffffffffl	194:5:6322:6351	1022798	0	True				
ANR	1023002	RelationalExpression	target_addr <= 0xffffffffffffl		1022798	0		<=			
ANR	1023003	Identifier	target_addr		1022798	0					
ANR	1023004	PrimaryExpression	0xffffffffffffl		1022798	1					
ANR	1023005	CompoundStatement		40:37:910:910	1022798	1					
ANR	1023006	IfStatement	if ( jump -> flags & IS_COND )		1022798	0					
ANR	1023007	Condition	jump -> flags & IS_COND	195:6:6362:6382	1022798	0	True				
ANR	1023008	BitAndExpression	jump -> flags & IS_COND		1022798	0		&			
ANR	1023009	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1023010	Identifier	jump		1022798	0					
ANR	1023011	Identifier	flags		1022798	1					
ANR	1023012	Identifier	IS_COND		1022798	1					
ANR	1023013	ExpressionStatement	code_ptr [ - 5 ] -= ( 1 << 5 )	196:3:6388:6412	1022798	1	True				
ANR	1023014	AssignmentExpression	code_ptr [ - 5 ] -= ( 1 << 5 )		1022798	0		-=			
ANR	1023015	ArrayIndexing	code_ptr [ - 5 ]		1022798	0					
ANR	1023016	Identifier	code_ptr		1022798	0					
ANR	1023017	UnaryOperationExpression	- 5		1022798	1					
ANR	1023018	UnaryOperator	-		1022798	0					
ANR	1023019	PrimaryExpression	5		1022798	1					
ANR	1023020	ShiftExpression	1 << 5		1022798	1		<<			
ANR	1023021	PrimaryExpression	1		1022798	0					
ANR	1023022	PrimaryExpression	5		1022798	1					
ANR	1023023	ExpressionStatement	jump -> flags |= PATCH_ABS48	197:2:6416:6442	1022798	1	True				
ANR	1023024	AssignmentExpression	jump -> flags |= PATCH_ABS48		1022798	0		|=			
ANR	1023025	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1023026	Identifier	jump		1022798	0					
ANR	1023027	Identifier	flags		1022798	1					
ANR	1023028	Identifier	PATCH_ABS48		1022798	1					
ANR	1023029	ExpressionStatement	code_ptr [ - 1 ] = code_ptr [ 0 ]	198:2:6446:6472	1022798	2	True				
ANR	1023030	AssignmentExpression	code_ptr [ - 1 ] = code_ptr [ 0 ]		1022798	0		=			
ANR	1023031	ArrayIndexing	code_ptr [ - 1 ]		1022798	0					
ANR	1023032	Identifier	code_ptr		1022798	0					
ANR	1023033	UnaryOperationExpression	- 1		1022798	1					
ANR	1023034	UnaryOperator	-		1022798	0					
ANR	1023035	PrimaryExpression	1		1022798	1					
ANR	1023036	ArrayIndexing	code_ptr [ 0 ]		1022798	1					
ANR	1023037	Identifier	code_ptr		1022798	0					
ANR	1023038	PrimaryExpression	0		1022798	1					
ANR	1023039	ReturnStatement	return 1 ;	199:2:6476:6484	1022798	3	True				
ANR	1023040	PrimaryExpression	1		1022798	0					
ANR	1023041	ExpressionStatement	jump -> flags |= PATCH_ABS64	202:1:6491:6517	1022798	9	True				
ANR	1023042	AssignmentExpression	jump -> flags |= PATCH_ABS64		1022798	0		|=			
ANR	1023043	PtrMemberAccess	jump -> flags		1022798	0					
ANR	1023044	Identifier	jump		1022798	0					
ANR	1023045	Identifier	flags		1022798	1					
ANR	1023046	Identifier	PATCH_ABS64		1022798	1					
ANR	1023047	ReturnStatement	return 0 ;	203:1:6520:6528	1022798	10	True				
ANR	1023048	PrimaryExpression	0		1022798	0					
ANR	1023049	ReturnType	static SLJIT_INLINE sljit_si		1022798	1					
ANR	1023050	Identifier	detect_jump_type		1022798	2					
ANR	1023051	ParameterList	"struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code"		1022798	3					
ANR	1023052	Parameter	struct sljit_jump * jump	154:46:5380:5402	1022798	0	True				
ANR	1023053	ParameterType	struct sljit_jump *		1022798	0					
ANR	1023054	Identifier	jump		1022798	1					
ANR	1023055	Parameter	sljit_ins * code_ptr	154:71:5405:5423	1022798	1	True				
ANR	1023056	ParameterType	sljit_ins *		1022798	0					
ANR	1023057	Identifier	code_ptr		1022798	1					
ANR	1023058	Parameter	sljit_ins * code	154:92:5426:5440	1022798	2	True				
ANR	1023059	ParameterType	sljit_ins *		1022798	0					
ANR	1023060	Identifier	code		1022798	1					
ANR	1023061	CFGEntryNode	ENTRY		1022798		True				
ANR	1023062	CFGExitNode	EXIT		1022798		True				
ANR	1023063	Symbol	jump -> u . label -> size		1022798						
ANR	1023064	Symbol	code		1022798						
ANR	1023065	Symbol	* * jump		1022798						
ANR	1023066	Symbol	* jump		1022798						
ANR	1023067	Symbol	jump -> u		1022798						
ANR	1023068	Symbol	jump -> flags		1022798						
ANR	1023069	Symbol	JUMP_LABEL		1022798						
ANR	1023070	Symbol	IS_CBZ		1022798						
ANR	1023071	Symbol	JUMP_ADDR		1022798						
ANR	1023072	Symbol	code_ptr		1022798						
ANR	1023073	Symbol	SLJIT_REWRITABLE_JUMP		1022798						
ANR	1023074	Symbol	jump		1022798						
ANR	1023075	Symbol	target_addr		1022798						
ANR	1023076	Symbol	PATCH_ABS64		1022798						
ANR	1023077	Symbol	diff		1022798						
ANR	1023078	Symbol	jump -> addr		1022798						
ANR	1023079	Symbol	PATCH_ABS48		1022798						
ANR	1023080	Symbol	* code_ptr		1022798						
ANR	1023081	Symbol	* jump -> u . label		1022798						
ANR	1023082	Symbol	* jump -> u		1022798						
ANR	1023083	Symbol	IS_COND		1022798						
ANR	1023084	Symbol	PATCH_COND		1022798						
ANR	1023085	Symbol	jump -> u . target		1022798						
ANR	1023086	Symbol	PATCH_B		1022798						
ANR	1023087	Symbol	jump -> u . label		1022798						
ANR	1023088	Function	sljit_generate_code	206:0:6533:9817							
ANR	1023089	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1023088	0					
ANR	1023090	CompoundStatement		207:0:6617:9817	1023088	0					
ANR	1023091	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	208:1:6620:6653	1023088	0	True				
ANR	1023092	IdentifierDecl	* buf		1023088	0					
ANR	1023093	IdentifierDeclType	struct sljit_memory_fragment *		1023088	0					
ANR	1023094	Identifier	buf		1023088	1					
ANR	1023095	IdentifierDeclStatement	sljit_ins * code ;	209:1:6656:6671	1023088	1	True				
ANR	1023096	IdentifierDecl	* code		1023088	0					
ANR	1023097	IdentifierDeclType	sljit_ins *		1023088	0					
ANR	1023098	Identifier	code		1023088	1					
ANR	1023099	IdentifierDeclStatement	sljit_ins * code_ptr ;	210:1:6674:6693	1023088	2	True				
ANR	1023100	IdentifierDecl	* code_ptr		1023088	0					
ANR	1023101	IdentifierDeclType	sljit_ins *		1023088	0					
ANR	1023102	Identifier	code_ptr		1023088	1					
ANR	1023103	IdentifierDeclStatement	sljit_ins * buf_ptr ;	211:1:6696:6714	1023088	3	True				
ANR	1023104	IdentifierDecl	* buf_ptr		1023088	0					
ANR	1023105	IdentifierDeclType	sljit_ins *		1023088	0					
ANR	1023106	Identifier	buf_ptr		1023088	1					
ANR	1023107	IdentifierDeclStatement	sljit_ins * buf_end ;	212:1:6717:6735	1023088	4	True				
ANR	1023108	IdentifierDecl	* buf_end		1023088	0					
ANR	1023109	IdentifierDeclType	sljit_ins *		1023088	0					
ANR	1023110	Identifier	buf_end		1023088	1					
ANR	1023111	IdentifierDeclStatement	sljit_uw word_count ;	213:1:6738:6757	1023088	5	True				
ANR	1023112	IdentifierDecl	word_count		1023088	0					
ANR	1023113	IdentifierDeclType	sljit_uw		1023088	0					
ANR	1023114	Identifier	word_count		1023088	1					
ANR	1023115	IdentifierDeclStatement	sljit_uw addr ;	214:1:6760:6773	1023088	6	True				
ANR	1023116	IdentifierDecl	addr		1023088	0					
ANR	1023117	IdentifierDeclType	sljit_uw		1023088	0					
ANR	1023118	Identifier	addr		1023088	1					
ANR	1023119	IdentifierDeclStatement	sljit_si dst ;	215:1:6776:6788	1023088	7	True				
ANR	1023120	IdentifierDecl	dst		1023088	0					
ANR	1023121	IdentifierDeclType	sljit_si		1023088	0					
ANR	1023122	Identifier	dst		1023088	1					
ANR	1023123	IdentifierDeclStatement	struct sljit_label * label ;	217:1:6792:6817	1023088	8	True				
ANR	1023124	IdentifierDecl	* label		1023088	0					
ANR	1023125	IdentifierDeclType	struct sljit_label *		1023088	0					
ANR	1023126	Identifier	label		1023088	1					
ANR	1023127	IdentifierDeclStatement	struct sljit_jump * jump ;	218:1:6820:6843	1023088	9	True				
ANR	1023128	IdentifierDecl	* jump		1023088	0					
ANR	1023129	IdentifierDeclType	struct sljit_jump *		1023088	0					
ANR	1023130	Identifier	jump		1023088	1					
ANR	1023131	IdentifierDeclStatement	struct sljit_const * const_ ;	219:1:6846:6872	1023088	10	True				
ANR	1023132	IdentifierDecl	* const_		1023088	0					
ANR	1023133	IdentifierDeclType	struct sljit_const *		1023088	0					
ANR	1023134	Identifier	const_		1023088	1					
ANR	1023135	ExpressionStatement	CHECK_ERROR_PTR ( )	221:1:6876:6893	1023088	11	True				
ANR	1023136	CallExpression	CHECK_ERROR_PTR ( )		1023088	0					
ANR	1023137	Callee	CHECK_ERROR_PTR		1023088	0					
ANR	1023138	Identifier	CHECK_ERROR_PTR		1023088	0					
ANR	1023139	ArgumentList			1023088	1					
ANR	1023140	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	222:1:6896:6942	1023088	12	True				
ANR	1023141	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1023088	0					
ANR	1023142	Callee	CHECK_PTR		1023088	0					
ANR	1023143	Identifier	CHECK_PTR		1023088	0					
ANR	1023144	ArgumentList	check_sljit_generate_code ( compiler )		1023088	1					
ANR	1023145	Argument	check_sljit_generate_code ( compiler )		1023088	0					
ANR	1023146	CallExpression	check_sljit_generate_code ( compiler )		1023088	0					
ANR	1023147	Callee	check_sljit_generate_code		1023088	0					
ANR	1023148	Identifier	check_sljit_generate_code		1023088	0					
ANR	1023149	ArgumentList	compiler		1023088	1					
ANR	1023150	Argument	compiler		1023088	0					
ANR	1023151	Identifier	compiler		1023088	0					
ANR	1023152	ExpressionStatement	reverse_buf ( compiler )	223:1:6945:6966	1023088	13	True				
ANR	1023153	CallExpression	reverse_buf ( compiler )		1023088	0					
ANR	1023154	Callee	reverse_buf		1023088	0					
ANR	1023155	Identifier	reverse_buf		1023088	0					
ANR	1023156	ArgumentList	compiler		1023088	1					
ANR	1023157	Argument	compiler		1023088	0					
ANR	1023158	Identifier	compiler		1023088	0					
ANR	1023159	ExpressionStatement	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )	225:1:6970:7042	1023088	14	True				
ANR	1023160	AssignmentExpression	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1023088	0		=			
ANR	1023161	Identifier	code		1023088	0					
ANR	1023162	CastExpression	( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1023088	1					
ANR	1023163	CastTarget	sljit_ins *		1023088	0					
ANR	1023164	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1023088	1					
ANR	1023165	Callee	SLJIT_MALLOC_EXEC		1023088	0					
ANR	1023166	Identifier	SLJIT_MALLOC_EXEC		1023088	0					
ANR	1023167	ArgumentList	compiler -> size * sizeof ( sljit_ins )		1023088	1					
ANR	1023168	Argument	compiler -> size * sizeof ( sljit_ins )		1023088	0					
ANR	1023169	MultiplicativeExpression	compiler -> size * sizeof ( sljit_ins )		1023088	0		*			
ANR	1023170	PtrMemberAccess	compiler -> size		1023088	0					
ANR	1023171	Identifier	compiler		1023088	0					
ANR	1023172	Identifier	size		1023088	1					
ANR	1023173	SizeofExpression	sizeof ( sljit_ins )		1023088	1					
ANR	1023174	Sizeof	sizeof		1023088	0					
ANR	1023175	SizeofOperand	sljit_ins		1023088	1					
ANR	1023176	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	226:1:7045:7072	1023088	15	True				
ANR	1023177	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1023088	0					
ANR	1023178	Callee	PTR_FAIL_WITH_EXEC_IF		1023088	0					
ANR	1023179	Identifier	PTR_FAIL_WITH_EXEC_IF		1023088	0					
ANR	1023180	ArgumentList	code		1023088	1					
ANR	1023181	Argument	code		1023088	0					
ANR	1023182	Identifier	code		1023088	0					
ANR	1023183	ExpressionStatement	buf = compiler -> buf	227:1:7075:7094	1023088	16	True				
ANR	1023184	AssignmentExpression	buf = compiler -> buf		1023088	0		=			
ANR	1023185	Identifier	buf		1023088	0					
ANR	1023186	PtrMemberAccess	compiler -> buf		1023088	1					
ANR	1023187	Identifier	compiler		1023088	0					
ANR	1023188	Identifier	buf		1023088	1					
ANR	1023189	ExpressionStatement	code_ptr = code	229:1:7098:7113	1023088	17	True				
ANR	1023190	AssignmentExpression	code_ptr = code		1023088	0		=			
ANR	1023191	Identifier	code_ptr		1023088	0					
ANR	1023192	Identifier	code		1023088	1					
ANR	1023193	ExpressionStatement	word_count = 0	230:1:7116:7130	1023088	18	True				
ANR	1023194	AssignmentExpression	word_count = 0		1023088	0		=			
ANR	1023195	Identifier	word_count		1023088	0					
ANR	1023196	PrimaryExpression	0		1023088	1					
ANR	1023197	ExpressionStatement	label = compiler -> labels	231:1:7133:7157	1023088	19	True				
ANR	1023198	AssignmentExpression	label = compiler -> labels		1023088	0		=			
ANR	1023199	Identifier	label		1023088	0					
ANR	1023200	PtrMemberAccess	compiler -> labels		1023088	1					
ANR	1023201	Identifier	compiler		1023088	0					
ANR	1023202	Identifier	labels		1023088	1					
ANR	1023203	ExpressionStatement	jump = compiler -> jumps	232:1:7160:7182	1023088	20	True				
ANR	1023204	AssignmentExpression	jump = compiler -> jumps		1023088	0		=			
ANR	1023205	Identifier	jump		1023088	0					
ANR	1023206	PtrMemberAccess	compiler -> jumps		1023088	1					
ANR	1023207	Identifier	compiler		1023088	0					
ANR	1023208	Identifier	jumps		1023088	1					
ANR	1023209	ExpressionStatement	const_ = compiler -> consts	233:1:7185:7210	1023088	21	True				
ANR	1023210	AssignmentExpression	const_ = compiler -> consts		1023088	0		=			
ANR	1023211	Identifier	const_		1023088	0					
ANR	1023212	PtrMemberAccess	compiler -> consts		1023088	1					
ANR	1023213	Identifier	compiler		1023088	0					
ANR	1023214	Identifier	consts		1023088	1					
ANR	1023215	DoStatement	do		1023088	22					
ANR	1023216	CompoundStatement		29:4:599:599	1023088	0					
ANR	1023217	ExpressionStatement	buf_ptr = ( sljit_ins * ) buf -> memory	236:2:7221:7254	1023088	0	True				
ANR	1023218	AssignmentExpression	buf_ptr = ( sljit_ins * ) buf -> memory		1023088	0		=			
ANR	1023219	Identifier	buf_ptr		1023088	0					
ANR	1023220	CastExpression	( sljit_ins * ) buf -> memory		1023088	1					
ANR	1023221	CastTarget	sljit_ins *		1023088	0					
ANR	1023222	PtrMemberAccess	buf -> memory		1023088	1					
ANR	1023223	Identifier	buf		1023088	0					
ANR	1023224	Identifier	memory		1023088	1					
ANR	1023225	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 2 )	237:2:7258:7299	1023088	1	True				
ANR	1023226	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 2 )		1023088	0		=			
ANR	1023227	Identifier	buf_end		1023088	0					
ANR	1023228	AdditiveExpression	buf_ptr + ( buf -> used_size >> 2 )		1023088	1		+			
ANR	1023229	Identifier	buf_ptr		1023088	0					
ANR	1023230	ShiftExpression	buf -> used_size >> 2		1023088	1		>>			
ANR	1023231	PtrMemberAccess	buf -> used_size		1023088	0					
ANR	1023232	Identifier	buf		1023088	0					
ANR	1023233	Identifier	used_size		1023088	1					
ANR	1023234	PrimaryExpression	2		1023088	1					
ANR	1023235	DoStatement	do		1023088	2					
ANR	1023236	CompoundStatement		32:5:688:688	1023088	0					
ANR	1023237	ExpressionStatement	* code_ptr = * buf_ptr ++	239:3:7311:7333	1023088	0	True				
ANR	1023238	AssignmentExpression	* code_ptr = * buf_ptr ++		1023088	0		=			
ANR	1023239	UnaryOperationExpression	* code_ptr		1023088	0					
ANR	1023240	UnaryOperator	*		1023088	0					
ANR	1023241	Identifier	code_ptr		1023088	1					
ANR	1023242	UnaryOperationExpression	* buf_ptr ++		1023088	1					
ANR	1023243	UnaryOperator	*		1023088	0					
ANR	1023244	PostIncDecOperationExpression	buf_ptr ++		1023088	1					
ANR	1023245	Identifier	buf_ptr		1023088	0					
ANR	1023246	IncDec	++		1023088	1					
ANR	1023247	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	241:3:7394:7443	1023088	1	True				
ANR	1023248	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1023088	0					
ANR	1023249	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023250	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023251	ArgumentList	! label || label -> size >= word_count		1023088	1					
ANR	1023252	Argument	! label || label -> size >= word_count		1023088	0					
ANR	1023253	OrExpression	! label || label -> size >= word_count		1023088	0		||			
ANR	1023254	UnaryOperationExpression	! label		1023088	0					
ANR	1023255	UnaryOperator	!		1023088	0					
ANR	1023256	Identifier	label		1023088	1					
ANR	1023257	RelationalExpression	label -> size >= word_count		1023088	1		>=			
ANR	1023258	PtrMemberAccess	label -> size		1023088	0					
ANR	1023259	Identifier	label		1023088	0					
ANR	1023260	Identifier	size		1023088	1					
ANR	1023261	Identifier	word_count		1023088	1					
ANR	1023262	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	242:3:7448:7495	1023088	2	True				
ANR	1023263	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1023088	0					
ANR	1023264	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023265	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023266	ArgumentList	! jump || jump -> addr >= word_count		1023088	1					
ANR	1023267	Argument	! jump || jump -> addr >= word_count		1023088	0					
ANR	1023268	OrExpression	! jump || jump -> addr >= word_count		1023088	0		||			
ANR	1023269	UnaryOperationExpression	! jump		1023088	0					
ANR	1023270	UnaryOperator	!		1023088	0					
ANR	1023271	Identifier	jump		1023088	1					
ANR	1023272	RelationalExpression	jump -> addr >= word_count		1023088	1		>=			
ANR	1023273	PtrMemberAccess	jump -> addr		1023088	0					
ANR	1023274	Identifier	jump		1023088	0					
ANR	1023275	Identifier	addr		1023088	1					
ANR	1023276	Identifier	word_count		1023088	1					
ANR	1023277	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	243:3:7500:7551	1023088	3	True				
ANR	1023278	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1023088	0					
ANR	1023279	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023280	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023281	ArgumentList	! const_ || const_ -> addr >= word_count		1023088	1					
ANR	1023282	Argument	! const_ || const_ -> addr >= word_count		1023088	0					
ANR	1023283	OrExpression	! const_ || const_ -> addr >= word_count		1023088	0		||			
ANR	1023284	UnaryOperationExpression	! const_		1023088	0					
ANR	1023285	UnaryOperator	!		1023088	0					
ANR	1023286	Identifier	const_		1023088	1					
ANR	1023287	RelationalExpression	const_ -> addr >= word_count		1023088	1		>=			
ANR	1023288	PtrMemberAccess	const_ -> addr		1023088	0					
ANR	1023289	Identifier	const_		1023088	0					
ANR	1023290	Identifier	addr		1023088	1					
ANR	1023291	Identifier	word_count		1023088	1					
ANR	1023292	IfStatement	if ( label && label -> size == word_count )		1023088	4					
ANR	1023293	Condition	label && label -> size == word_count	244:7:7560:7593	1023088	0	True				
ANR	1023294	AndExpression	label && label -> size == word_count		1023088	0		&&			
ANR	1023295	Identifier	label		1023088	0					
ANR	1023296	EqualityExpression	label -> size == word_count		1023088	1		==			
ANR	1023297	PtrMemberAccess	label -> size		1023088	0					
ANR	1023298	Identifier	label		1023088	0					
ANR	1023299	Identifier	size		1023088	1					
ANR	1023300	Identifier	word_count		1023088	1					
ANR	1023301	CompoundStatement		38:43:978:978	1023088	1					
ANR	1023302	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	245:4:7602:7634	1023088	0	True				
ANR	1023303	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1023088	0		=			
ANR	1023304	PtrMemberAccess	label -> addr		1023088	0					
ANR	1023305	Identifier	label		1023088	0					
ANR	1023306	Identifier	addr		1023088	1					
ANR	1023307	CastExpression	( sljit_uw ) code_ptr		1023088	1					
ANR	1023308	CastTarget	sljit_uw		1023088	0					
ANR	1023309	Identifier	code_ptr		1023088	1					
ANR	1023310	ExpressionStatement	label -> size = code_ptr - code	246:4:7640:7669	1023088	1	True				
ANR	1023311	AssignmentExpression	label -> size = code_ptr - code		1023088	0		=			
ANR	1023312	PtrMemberAccess	label -> size		1023088	0					
ANR	1023313	Identifier	label		1023088	0					
ANR	1023314	Identifier	size		1023088	1					
ANR	1023315	AdditiveExpression	code_ptr - code		1023088	1		-			
ANR	1023316	Identifier	code_ptr		1023088	0					
ANR	1023317	Identifier	code		1023088	1					
ANR	1023318	ExpressionStatement	label = label -> next	247:4:7675:7694	1023088	2	True				
ANR	1023319	AssignmentExpression	label = label -> next		1023088	0		=			
ANR	1023320	Identifier	label		1023088	0					
ANR	1023321	PtrMemberAccess	label -> next		1023088	1					
ANR	1023322	Identifier	label		1023088	0					
ANR	1023323	Identifier	next		1023088	1					
ANR	1023324	IfStatement	if ( jump && jump -> addr == word_count )		1023088	5					
ANR	1023325	Condition	jump && jump -> addr == word_count	249:7:7708:7739	1023088	0	True				
ANR	1023326	AndExpression	jump && jump -> addr == word_count		1023088	0		&&			
ANR	1023327	Identifier	jump		1023088	0					
ANR	1023328	EqualityExpression	jump -> addr == word_count		1023088	1		==			
ANR	1023329	PtrMemberAccess	jump -> addr		1023088	0					
ANR	1023330	Identifier	jump		1023088	0					
ANR	1023331	Identifier	addr		1023088	1					
ANR	1023332	Identifier	word_count		1023088	1					
ANR	1023333	CompoundStatement		43:41:1124:1124	1023088	1					
ANR	1023334	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 4 )	250:5:7749:7786	1023088	0	True				
ANR	1023335	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 4 )		1023088	0		=			
ANR	1023336	PtrMemberAccess	jump -> addr		1023088	0					
ANR	1023337	Identifier	jump		1023088	0					
ANR	1023338	Identifier	addr		1023088	1					
ANR	1023339	CastExpression	( sljit_uw ) ( code_ptr - 4 )		1023088	1					
ANR	1023340	CastTarget	sljit_uw		1023088	0					
ANR	1023341	AdditiveExpression	code_ptr - 4		1023088	1		-			
ANR	1023342	Identifier	code_ptr		1023088	0					
ANR	1023343	PrimaryExpression	4		1023088	1					
ANR	1023344	ExpressionStatement	"code_ptr -= detect_jump_type ( jump , code_ptr , code )"	251:5:7793:7843	1023088	1	True				
ANR	1023345	AssignmentExpression	"code_ptr -= detect_jump_type ( jump , code_ptr , code )"		1023088	0		-=			
ANR	1023346	Identifier	code_ptr		1023088	0					
ANR	1023347	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1023088	1					
ANR	1023348	Callee	detect_jump_type		1023088	0					
ANR	1023349	Identifier	detect_jump_type		1023088	0					
ANR	1023350	ArgumentList	jump		1023088	1					
ANR	1023351	Argument	jump		1023088	0					
ANR	1023352	Identifier	jump		1023088	0					
ANR	1023353	Argument	code_ptr		1023088	1					
ANR	1023354	Identifier	code_ptr		1023088	0					
ANR	1023355	Argument	code		1023088	2					
ANR	1023356	Identifier	code		1023088	0					
ANR	1023357	ExpressionStatement	jump = jump -> next	252:5:7850:7867	1023088	2	True				
ANR	1023358	AssignmentExpression	jump = jump -> next		1023088	0		=			
ANR	1023359	Identifier	jump		1023088	0					
ANR	1023360	PtrMemberAccess	jump -> next		1023088	1					
ANR	1023361	Identifier	jump		1023088	0					
ANR	1023362	Identifier	next		1023088	1					
ANR	1023363	IfStatement	if ( const_ && const_ -> addr == word_count )		1023088	6					
ANR	1023364	Condition	const_ && const_ -> addr == word_count	254:7:7881:7916	1023088	0	True				
ANR	1023365	AndExpression	const_ && const_ -> addr == word_count		1023088	0		&&			
ANR	1023366	Identifier	const_		1023088	0					
ANR	1023367	EqualityExpression	const_ -> addr == word_count		1023088	1		==			
ANR	1023368	PtrMemberAccess	const_ -> addr		1023088	0					
ANR	1023369	Identifier	const_		1023088	0					
ANR	1023370	Identifier	addr		1023088	1					
ANR	1023371	Identifier	word_count		1023088	1					
ANR	1023372	CompoundStatement		48:45:1301:1301	1023088	1					
ANR	1023373	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	255:4:7925:7958	1023088	0	True				
ANR	1023374	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1023088	0		=			
ANR	1023375	PtrMemberAccess	const_ -> addr		1023088	0					
ANR	1023376	Identifier	const_		1023088	0					
ANR	1023377	Identifier	addr		1023088	1					
ANR	1023378	CastExpression	( sljit_uw ) code_ptr		1023088	1					
ANR	1023379	CastTarget	sljit_uw		1023088	0					
ANR	1023380	Identifier	code_ptr		1023088	1					
ANR	1023381	ExpressionStatement	const_ = const_ -> next	256:4:7964:7985	1023088	1	True				
ANR	1023382	AssignmentExpression	const_ = const_ -> next		1023088	0		=			
ANR	1023383	Identifier	const_		1023088	0					
ANR	1023384	PtrMemberAccess	const_ -> next		1023088	1					
ANR	1023385	Identifier	const_		1023088	0					
ANR	1023386	Identifier	next		1023088	1					
ANR	1023387	ExpressionStatement	code_ptr ++	258:3:7995:8006	1023088	7	True				
ANR	1023388	PostIncDecOperationExpression	code_ptr ++		1023088	0					
ANR	1023389	Identifier	code_ptr		1023088	0					
ANR	1023390	IncDec	++		1023088	1					
ANR	1023391	ExpressionStatement	word_count ++	259:3:8011:8024	1023088	8	True				
ANR	1023392	PostIncDecOperationExpression	word_count ++		1023088	0					
ANR	1023393	Identifier	word_count		1023088	0					
ANR	1023394	IncDec	++		1023088	1					
ANR	1023395	Condition	buf_ptr < buf_end	260:11:8037:8053	1023088	1	True				
ANR	1023396	RelationalExpression	buf_ptr < buf_end		1023088	0		<			
ANR	1023397	Identifier	buf_ptr		1023088	0					
ANR	1023398	Identifier	buf_end		1023088	1					
ANR	1023399	ExpressionStatement	buf = buf -> next	262:2:8060:8075	1023088	3	True				
ANR	1023400	AssignmentExpression	buf = buf -> next		1023088	0		=			
ANR	1023401	Identifier	buf		1023088	0					
ANR	1023402	PtrMemberAccess	buf -> next		1023088	1					
ANR	1023403	Identifier	buf		1023088	0					
ANR	1023404	Identifier	next		1023088	1					
ANR	1023405	Condition	buf	263:10:8087:8089	1023088	1	True				
ANR	1023406	Identifier	buf		1023088	0					
ANR	1023407	IfStatement	if ( label && label -> size == word_count )		1023088	23					
ANR	1023408	Condition	label && label -> size == word_count	265:5:8099:8132	1023088	0	True				
ANR	1023409	AndExpression	label && label -> size == word_count		1023088	0		&&			
ANR	1023410	Identifier	label		1023088	0					
ANR	1023411	EqualityExpression	label -> size == word_count		1023088	1		==			
ANR	1023412	PtrMemberAccess	label -> size		1023088	0					
ANR	1023413	Identifier	label		1023088	0					
ANR	1023414	Identifier	size		1023088	1					
ANR	1023415	Identifier	word_count		1023088	1					
ANR	1023416	CompoundStatement		59:41:1517:1517	1023088	1					
ANR	1023417	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	266:2:8139:8171	1023088	0	True				
ANR	1023418	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1023088	0		=			
ANR	1023419	PtrMemberAccess	label -> addr		1023088	0					
ANR	1023420	Identifier	label		1023088	0					
ANR	1023421	Identifier	addr		1023088	1					
ANR	1023422	CastExpression	( sljit_uw ) code_ptr		1023088	1					
ANR	1023423	CastTarget	sljit_uw		1023088	0					
ANR	1023424	Identifier	code_ptr		1023088	1					
ANR	1023425	ExpressionStatement	label -> size = code_ptr - code	267:2:8175:8204	1023088	1	True				
ANR	1023426	AssignmentExpression	label -> size = code_ptr - code		1023088	0		=			
ANR	1023427	PtrMemberAccess	label -> size		1023088	0					
ANR	1023428	Identifier	label		1023088	0					
ANR	1023429	Identifier	size		1023088	1					
ANR	1023430	AdditiveExpression	code_ptr - code		1023088	1		-			
ANR	1023431	Identifier	code_ptr		1023088	0					
ANR	1023432	Identifier	code		1023088	1					
ANR	1023433	ExpressionStatement	label = label -> next	268:2:8208:8227	1023088	2	True				
ANR	1023434	AssignmentExpression	label = label -> next		1023088	0		=			
ANR	1023435	Identifier	label		1023088	0					
ANR	1023436	PtrMemberAccess	label -> next		1023088	1					
ANR	1023437	Identifier	label		1023088	0					
ANR	1023438	Identifier	next		1023088	1					
ANR	1023439	ExpressionStatement	SLJIT_ASSERT ( ! label )	271:1:8234:8254	1023088	24	True				
ANR	1023440	CallExpression	SLJIT_ASSERT ( ! label )		1023088	0					
ANR	1023441	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023442	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023443	ArgumentList	! label		1023088	1					
ANR	1023444	Argument	! label		1023088	0					
ANR	1023445	UnaryOperationExpression	! label		1023088	0					
ANR	1023446	UnaryOperator	!		1023088	0					
ANR	1023447	Identifier	label		1023088	1					
ANR	1023448	ExpressionStatement	SLJIT_ASSERT ( ! jump )	272:1:8257:8276	1023088	25	True				
ANR	1023449	CallExpression	SLJIT_ASSERT ( ! jump )		1023088	0					
ANR	1023450	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023451	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023452	ArgumentList	! jump		1023088	1					
ANR	1023453	Argument	! jump		1023088	0					
ANR	1023454	UnaryOperationExpression	! jump		1023088	0					
ANR	1023455	UnaryOperator	!		1023088	0					
ANR	1023456	Identifier	jump		1023088	1					
ANR	1023457	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	273:1:8279:8300	1023088	26	True				
ANR	1023458	CallExpression	SLJIT_ASSERT ( ! const_ )		1023088	0					
ANR	1023459	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023460	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023461	ArgumentList	! const_		1023088	1					
ANR	1023462	Argument	! const_		1023088	0					
ANR	1023463	UnaryOperationExpression	! const_		1023088	0					
ANR	1023464	UnaryOperator	!		1023088	0					
ANR	1023465	Identifier	const_		1023088	1					
ANR	1023466	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )	274:1:8303:8360	1023088	27	True				
ANR	1023467	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )		1023088	0					
ANR	1023468	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023469	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023470	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size		1023088	1					
ANR	1023471	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size		1023088	0					
ANR	1023472	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size		1023088	0		<=			
ANR	1023473	AdditiveExpression	code_ptr - code		1023088	0		-			
ANR	1023474	Identifier	code_ptr		1023088	0					
ANR	1023475	Identifier	code		1023088	1					
ANR	1023476	CastExpression	( sljit_sw ) compiler -> size		1023088	1					
ANR	1023477	CastTarget	sljit_sw		1023088	0					
ANR	1023478	PtrMemberAccess	compiler -> size		1023088	1					
ANR	1023479	Identifier	compiler		1023088	0					
ANR	1023480	Identifier	size		1023088	1					
ANR	1023481	ExpressionStatement	jump = compiler -> jumps	276:1:8364:8386	1023088	28	True				
ANR	1023482	AssignmentExpression	jump = compiler -> jumps		1023088	0		=			
ANR	1023483	Identifier	jump		1023088	0					
ANR	1023484	PtrMemberAccess	compiler -> jumps		1023088	1					
ANR	1023485	Identifier	compiler		1023088	0					
ANR	1023486	Identifier	jumps		1023088	1					
ANR	1023487	WhileStatement	while ( jump )		1023088	29					
ANR	1023488	Condition	jump	277:8:8396:8399	1023088	0	True				
ANR	1023489	Identifier	jump		1023088	0					
ANR	1023490	CompoundStatement		71:14:1784:1784	1023088	1					
ANR	1023491	DoStatement	do		1023088	0					
ANR	1023492	CompoundStatement		72:5:1791:1791	1023088	0					
ANR	1023493	ExpressionStatement	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	279:3:8414:8486	1023088	0	True				
ANR	1023494	AssignmentExpression	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1023088	0		=			
ANR	1023495	Identifier	addr		1023088	0					
ANR	1023496	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1023088	1					
ANR	1023497	Condition	jump -> flags & JUMP_LABEL		1023088	0					
ANR	1023498	BitAndExpression	jump -> flags & JUMP_LABEL		1023088	0		&			
ANR	1023499	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023500	Identifier	jump		1023088	0					
ANR	1023501	Identifier	flags		1023088	1					
ANR	1023502	Identifier	JUMP_LABEL		1023088	1					
ANR	1023503	PtrMemberAccess	jump -> u . label -> addr		1023088	1					
ANR	1023504	MemberAccess	jump -> u . label		1023088	0					
ANR	1023505	PtrMemberAccess	jump -> u		1023088	0					
ANR	1023506	Identifier	jump		1023088	0					
ANR	1023507	Identifier	u		1023088	1					
ANR	1023508	Identifier	label		1023088	1					
ANR	1023509	Identifier	addr		1023088	1					
ANR	1023510	MemberAccess	jump -> u . target		1023088	2					
ANR	1023511	PtrMemberAccess	jump -> u		1023088	0					
ANR	1023512	Identifier	jump		1023088	0					
ANR	1023513	Identifier	u		1023088	1					
ANR	1023514	Identifier	target		1023088	1					
ANR	1023515	ExpressionStatement	buf_ptr = ( sljit_ins * ) jump -> addr	280:3:8491:8523	1023088	1	True				
ANR	1023516	AssignmentExpression	buf_ptr = ( sljit_ins * ) jump -> addr		1023088	0		=			
ANR	1023517	Identifier	buf_ptr		1023088	0					
ANR	1023518	CastExpression	( sljit_ins * ) jump -> addr		1023088	1					
ANR	1023519	CastTarget	sljit_ins *		1023088	0					
ANR	1023520	PtrMemberAccess	jump -> addr		1023088	1					
ANR	1023521	Identifier	jump		1023088	0					
ANR	1023522	Identifier	addr		1023088	1					
ANR	1023523	IfStatement	if ( jump -> flags & PATCH_B )		1023088	2					
ANR	1023524	Condition	jump -> flags & PATCH_B	281:7:8532:8552	1023088	0	True				
ANR	1023525	BitAndExpression	jump -> flags & PATCH_B		1023088	0		&			
ANR	1023526	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023527	Identifier	jump		1023088	0					
ANR	1023528	Identifier	flags		1023088	1					
ANR	1023529	Identifier	PATCH_B		1023088	1					
ANR	1023530	CompoundStatement		75:30:1937:1937	1023088	1					
ANR	1023531	ExpressionStatement	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2	282:4:8561:8602	1023088	0	True				
ANR	1023532	AssignmentExpression	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2		1023088	0		=			
ANR	1023533	Identifier	addr		1023088	0					
ANR	1023534	ShiftExpression	( sljit_sw ) ( addr - jump -> addr ) >> 2		1023088	1		>>			
ANR	1023535	CastExpression	( sljit_sw ) ( addr - jump -> addr )		1023088	0					
ANR	1023536	CastTarget	sljit_sw		1023088	0					
ANR	1023537	AdditiveExpression	addr - jump -> addr		1023088	1		-			
ANR	1023538	Identifier	addr		1023088	0					
ANR	1023539	PtrMemberAccess	jump -> addr		1023088	1					
ANR	1023540	Identifier	jump		1023088	0					
ANR	1023541	Identifier	addr		1023088	1					
ANR	1023542	PrimaryExpression	2		1023088	1					
ANR	1023543	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x1ffffff && ( sljit_sw ) addr >= - 0x2000000 )	283:4:8608:8681	1023088	1	True				
ANR	1023544	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x1ffffff && ( sljit_sw ) addr >= - 0x2000000 )		1023088	0					
ANR	1023545	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023546	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023547	ArgumentList	( sljit_sw ) addr <= 0x1ffffff && ( sljit_sw ) addr >= - 0x2000000		1023088	1					
ANR	1023548	Argument	( sljit_sw ) addr <= 0x1ffffff && ( sljit_sw ) addr >= - 0x2000000		1023088	0					
ANR	1023549	AndExpression	( sljit_sw ) addr <= 0x1ffffff && ( sljit_sw ) addr >= - 0x2000000		1023088	0		&&			
ANR	1023550	RelationalExpression	( sljit_sw ) addr <= 0x1ffffff		1023088	0		<=			
ANR	1023551	CastExpression	( sljit_sw ) addr		1023088	0					
ANR	1023552	CastTarget	sljit_sw		1023088	0					
ANR	1023553	Identifier	addr		1023088	1					
ANR	1023554	PrimaryExpression	0x1ffffff		1023088	1					
ANR	1023555	RelationalExpression	( sljit_sw ) addr >= - 0x2000000		1023088	1		>=			
ANR	1023556	CastExpression	( sljit_sw ) addr		1023088	0					
ANR	1023557	CastTarget	sljit_sw		1023088	0					
ANR	1023558	Identifier	addr		1023088	1					
ANR	1023559	UnaryOperationExpression	- 0x2000000		1023088	1					
ANR	1023560	UnaryOperator	-		1023088	0					
ANR	1023561	PrimaryExpression	0x2000000		1023088	1					
ANR	1023562	ExpressionStatement	buf_ptr [ 0 ] = ( ( jump -> flags & IS_BL ) ? BL : B ) | ( addr & 0x3ffffff )	284:4:8687:8753	1023088	2	True				
ANR	1023563	AssignmentExpression	buf_ptr [ 0 ] = ( ( jump -> flags & IS_BL ) ? BL : B ) | ( addr & 0x3ffffff )		1023088	0		=			
ANR	1023564	ArrayIndexing	buf_ptr [ 0 ]		1023088	0					
ANR	1023565	Identifier	buf_ptr		1023088	0					
ANR	1023566	PrimaryExpression	0		1023088	1					
ANR	1023567	InclusiveOrExpression	( ( jump -> flags & IS_BL ) ? BL : B ) | ( addr & 0x3ffffff )		1023088	1		|			
ANR	1023568	ConditionalExpression	( jump -> flags & IS_BL ) ? BL : B		1023088	0					
ANR	1023569	Condition	jump -> flags & IS_BL		1023088	0					
ANR	1023570	BitAndExpression	jump -> flags & IS_BL		1023088	0		&			
ANR	1023571	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023572	Identifier	jump		1023088	0					
ANR	1023573	Identifier	flags		1023088	1					
ANR	1023574	Identifier	IS_BL		1023088	1					
ANR	1023575	Identifier	BL		1023088	1					
ANR	1023576	Identifier	B		1023088	2					
ANR	1023577	BitAndExpression	addr & 0x3ffffff		1023088	1		&			
ANR	1023578	Identifier	addr		1023088	0					
ANR	1023579	PrimaryExpression	0x3ffffff		1023088	1					
ANR	1023580	IfStatement	if ( jump -> flags & IS_COND )		1023088	3					
ANR	1023581	Condition	jump -> flags & IS_COND	285:8:8763:8783	1023088	0	True				
ANR	1023582	BitAndExpression	jump -> flags & IS_COND		1023088	0		&			
ANR	1023583	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023584	Identifier	jump		1023088	0					
ANR	1023585	Identifier	flags		1023088	1					
ANR	1023586	Identifier	IS_COND		1023088	1					
ANR	1023587	ExpressionStatement	buf_ptr [ - 1 ] -= ( 4 << 5 )	286:5:8791:8814	1023088	1	True				
ANR	1023588	AssignmentExpression	buf_ptr [ - 1 ] -= ( 4 << 5 )		1023088	0		-=			
ANR	1023589	ArrayIndexing	buf_ptr [ - 1 ]		1023088	0					
ANR	1023590	Identifier	buf_ptr		1023088	0					
ANR	1023591	UnaryOperationExpression	- 1		1023088	1					
ANR	1023592	UnaryOperator	-		1023088	0					
ANR	1023593	PrimaryExpression	1		1023088	1					
ANR	1023594	ShiftExpression	4 << 5		1023088	1		<<			
ANR	1023595	PrimaryExpression	4		1023088	0					
ANR	1023596	PrimaryExpression	5		1023088	1					
ANR	1023597	BreakStatement	break ;	287:4:8820:8825	1023088	4	True				
ANR	1023598	IfStatement	if ( jump -> flags & PATCH_COND )		1023088	3					
ANR	1023599	Condition	jump -> flags & PATCH_COND	289:7:8839:8862	1023088	0	True				
ANR	1023600	BitAndExpression	jump -> flags & PATCH_COND		1023088	0		&			
ANR	1023601	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023602	Identifier	jump		1023088	0					
ANR	1023603	Identifier	flags		1023088	1					
ANR	1023604	Identifier	PATCH_COND		1023088	1					
ANR	1023605	CompoundStatement		83:33:2247:2247	1023088	1					
ANR	1023606	ExpressionStatement	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2	290:4:8871:8912	1023088	0	True				
ANR	1023607	AssignmentExpression	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2		1023088	0		=			
ANR	1023608	Identifier	addr		1023088	0					
ANR	1023609	ShiftExpression	( sljit_sw ) ( addr - jump -> addr ) >> 2		1023088	1		>>			
ANR	1023610	CastExpression	( sljit_sw ) ( addr - jump -> addr )		1023088	0					
ANR	1023611	CastTarget	sljit_sw		1023088	0					
ANR	1023612	AdditiveExpression	addr - jump -> addr		1023088	1		-			
ANR	1023613	Identifier	addr		1023088	0					
ANR	1023614	PtrMemberAccess	jump -> addr		1023088	1					
ANR	1023615	Identifier	jump		1023088	0					
ANR	1023616	Identifier	addr		1023088	1					
ANR	1023617	PrimaryExpression	2		1023088	1					
ANR	1023618	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x3ffff && ( sljit_sw ) addr >= - 0x40000 )	291:4:8918:8987	1023088	1	True				
ANR	1023619	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x3ffff && ( sljit_sw ) addr >= - 0x40000 )		1023088	0					
ANR	1023620	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023621	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023622	ArgumentList	( sljit_sw ) addr <= 0x3ffff && ( sljit_sw ) addr >= - 0x40000		1023088	1					
ANR	1023623	Argument	( sljit_sw ) addr <= 0x3ffff && ( sljit_sw ) addr >= - 0x40000		1023088	0					
ANR	1023624	AndExpression	( sljit_sw ) addr <= 0x3ffff && ( sljit_sw ) addr >= - 0x40000		1023088	0		&&			
ANR	1023625	RelationalExpression	( sljit_sw ) addr <= 0x3ffff		1023088	0		<=			
ANR	1023626	CastExpression	( sljit_sw ) addr		1023088	0					
ANR	1023627	CastTarget	sljit_sw		1023088	0					
ANR	1023628	Identifier	addr		1023088	1					
ANR	1023629	PrimaryExpression	0x3ffff		1023088	1					
ANR	1023630	RelationalExpression	( sljit_sw ) addr >= - 0x40000		1023088	1		>=			
ANR	1023631	CastExpression	( sljit_sw ) addr		1023088	0					
ANR	1023632	CastTarget	sljit_sw		1023088	0					
ANR	1023633	Identifier	addr		1023088	1					
ANR	1023634	UnaryOperationExpression	- 0x40000		1023088	1					
ANR	1023635	UnaryOperator	-		1023088	0					
ANR	1023636	PrimaryExpression	0x40000		1023088	1					
ANR	1023637	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~0xffffe0 ) | ( ( addr & 0x7ffff ) << 5 )	292:4:8993:9056	1023088	2	True				
ANR	1023638	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~0xffffe0 ) | ( ( addr & 0x7ffff ) << 5 )		1023088	0		=			
ANR	1023639	ArrayIndexing	buf_ptr [ 0 ]		1023088	0					
ANR	1023640	Identifier	buf_ptr		1023088	0					
ANR	1023641	PrimaryExpression	0		1023088	1					
ANR	1023642	InclusiveOrExpression	( buf_ptr [ 0 ] & ~0xffffe0 ) | ( ( addr & 0x7ffff ) << 5 )		1023088	1		|			
ANR	1023643	BitAndExpression	buf_ptr [ 0 ] & ~0xffffe0		1023088	0		&			
ANR	1023644	ArrayIndexing	buf_ptr [ 0 ]		1023088	0					
ANR	1023645	Identifier	buf_ptr		1023088	0					
ANR	1023646	PrimaryExpression	0		1023088	1					
ANR	1023647	Identifier	~0xffffe0		1023088	1					
ANR	1023648	ShiftExpression	( addr & 0x7ffff ) << 5		1023088	1		<<			
ANR	1023649	BitAndExpression	addr & 0x7ffff		1023088	0		&			
ANR	1023650	Identifier	addr		1023088	0					
ANR	1023651	PrimaryExpression	0x7ffff		1023088	1					
ANR	1023652	PrimaryExpression	5		1023088	1					
ANR	1023653	BreakStatement	break ;	293:4:9062:9067	1023088	3	True				
ANR	1023654	ExpressionStatement	SLJIT_ASSERT ( ( jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 ) ) || addr <= 0xffffffffl )	296:3:9078:9158	1023088	4	True				
ANR	1023655	CallExpression	SLJIT_ASSERT ( ( jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 ) ) || addr <= 0xffffffffl )		1023088	0					
ANR	1023656	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023657	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023658	ArgumentList	( jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 ) ) || addr <= 0xffffffffl		1023088	1					
ANR	1023659	Argument	( jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 ) ) || addr <= 0xffffffffl		1023088	0					
ANR	1023660	OrExpression	( jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 ) ) || addr <= 0xffffffffl		1023088	0		||			
ANR	1023661	BitAndExpression	jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 )		1023088	0		&			
ANR	1023662	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023663	Identifier	jump		1023088	0					
ANR	1023664	Identifier	flags		1023088	1					
ANR	1023665	InclusiveOrExpression	PATCH_ABS48 | PATCH_ABS64		1023088	1		|			
ANR	1023666	Identifier	PATCH_ABS48		1023088	0					
ANR	1023667	Identifier	PATCH_ABS64		1023088	1					
ANR	1023668	RelationalExpression	addr <= 0xffffffffl		1023088	1		<=			
ANR	1023669	Identifier	addr		1023088	0					
ANR	1023670	PrimaryExpression	0xffffffffl		1023088	1					
ANR	1023671	ExpressionStatement	SLJIT_ASSERT ( ( jump -> flags & PATCH_ABS64 ) || addr <= 0xffffffffffffl )	297:3:9163:9231	1023088	5	True				
ANR	1023672	CallExpression	SLJIT_ASSERT ( ( jump -> flags & PATCH_ABS64 ) || addr <= 0xffffffffffffl )		1023088	0					
ANR	1023673	Callee	SLJIT_ASSERT		1023088	0					
ANR	1023674	Identifier	SLJIT_ASSERT		1023088	0					
ANR	1023675	ArgumentList	( jump -> flags & PATCH_ABS64 ) || addr <= 0xffffffffffffl		1023088	1					
ANR	1023676	Argument	( jump -> flags & PATCH_ABS64 ) || addr <= 0xffffffffffffl		1023088	0					
ANR	1023677	OrExpression	( jump -> flags & PATCH_ABS64 ) || addr <= 0xffffffffffffl		1023088	0		||			
ANR	1023678	BitAndExpression	jump -> flags & PATCH_ABS64		1023088	0		&			
ANR	1023679	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023680	Identifier	jump		1023088	0					
ANR	1023681	Identifier	flags		1023088	1					
ANR	1023682	Identifier	PATCH_ABS64		1023088	1					
ANR	1023683	RelationalExpression	addr <= 0xffffffffffffl		1023088	1		<=			
ANR	1023684	Identifier	addr		1023088	0					
ANR	1023685	PrimaryExpression	0xffffffffffffl		1023088	1					
ANR	1023686	ExpressionStatement	dst = buf_ptr [ 0 ] & 0x1f	299:3:9237:9260	1023088	6	True				
ANR	1023687	AssignmentExpression	dst = buf_ptr [ 0 ] & 0x1f		1023088	0		=			
ANR	1023688	Identifier	dst		1023088	0					
ANR	1023689	BitAndExpression	buf_ptr [ 0 ] & 0x1f		1023088	1		&			
ANR	1023690	ArrayIndexing	buf_ptr [ 0 ]		1023088	0					
ANR	1023691	Identifier	buf_ptr		1023088	0					
ANR	1023692	PrimaryExpression	0		1023088	1					
ANR	1023693	PrimaryExpression	0x1f		1023088	1					
ANR	1023694	ExpressionStatement	buf_ptr [ 0 ] = MOVZ | dst | ( ( addr & 0xffff ) << 5 )	300:3:9265:9313	1023088	7	True				
ANR	1023695	AssignmentExpression	buf_ptr [ 0 ] = MOVZ | dst | ( ( addr & 0xffff ) << 5 )		1023088	0		=			
ANR	1023696	ArrayIndexing	buf_ptr [ 0 ]		1023088	0					
ANR	1023697	Identifier	buf_ptr		1023088	0					
ANR	1023698	PrimaryExpression	0		1023088	1					
ANR	1023699	InclusiveOrExpression	MOVZ | dst | ( ( addr & 0xffff ) << 5 )		1023088	1		|			
ANR	1023700	Identifier	MOVZ		1023088	0					
ANR	1023701	InclusiveOrExpression	dst | ( ( addr & 0xffff ) << 5 )		1023088	1		|			
ANR	1023702	Identifier	dst		1023088	0					
ANR	1023703	ShiftExpression	( addr & 0xffff ) << 5		1023088	1		<<			
ANR	1023704	BitAndExpression	addr & 0xffff		1023088	0		&			
ANR	1023705	Identifier	addr		1023088	0					
ANR	1023706	PrimaryExpression	0xffff		1023088	1					
ANR	1023707	PrimaryExpression	5		1023088	1					
ANR	1023708	ExpressionStatement	buf_ptr [ 1 ] = MOVK | dst | ( ( ( addr >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )	301:3:9318:9386	1023088	8	True				
ANR	1023709	AssignmentExpression	buf_ptr [ 1 ] = MOVK | dst | ( ( ( addr >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1023088	0		=			
ANR	1023710	ArrayIndexing	buf_ptr [ 1 ]		1023088	0					
ANR	1023711	Identifier	buf_ptr		1023088	0					
ANR	1023712	PrimaryExpression	1		1023088	1					
ANR	1023713	InclusiveOrExpression	MOVK | dst | ( ( ( addr >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1023088	1		|			
ANR	1023714	Identifier	MOVK		1023088	0					
ANR	1023715	InclusiveOrExpression	dst | ( ( ( addr >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1023088	1		|			
ANR	1023716	Identifier	dst		1023088	0					
ANR	1023717	InclusiveOrExpression	( ( ( addr >> 16 ) & 0xffff ) << 5 ) | ( 1 << 21 )		1023088	1		|			
ANR	1023718	ShiftExpression	( ( addr >> 16 ) & 0xffff ) << 5		1023088	0		<<			
ANR	1023719	BitAndExpression	( addr >> 16 ) & 0xffff		1023088	0		&			
ANR	1023720	ShiftExpression	addr >> 16		1023088	0		>>			
ANR	1023721	Identifier	addr		1023088	0					
ANR	1023722	PrimaryExpression	16		1023088	1					
ANR	1023723	PrimaryExpression	0xffff		1023088	1					
ANR	1023724	PrimaryExpression	5		1023088	1					
ANR	1023725	ShiftExpression	1 << 21		1023088	1		<<			
ANR	1023726	PrimaryExpression	1		1023088	0					
ANR	1023727	PrimaryExpression	21		1023088	1					
ANR	1023728	IfStatement	if ( jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 ) )		1023088	9					
ANR	1023729	Condition	jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 )	302:7:9395:9435	1023088	0	True				
ANR	1023730	BitAndExpression	jump -> flags & ( PATCH_ABS48 | PATCH_ABS64 )		1023088	0		&			
ANR	1023731	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023732	Identifier	jump		1023088	0					
ANR	1023733	Identifier	flags		1023088	1					
ANR	1023734	InclusiveOrExpression	PATCH_ABS48 | PATCH_ABS64		1023088	1		|			
ANR	1023735	Identifier	PATCH_ABS48		1023088	0					
ANR	1023736	Identifier	PATCH_ABS64		1023088	1					
ANR	1023737	ExpressionStatement	buf_ptr [ 2 ] = MOVK | dst | ( ( ( addr >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )	303:4:9442:9510	1023088	1	True				
ANR	1023738	AssignmentExpression	buf_ptr [ 2 ] = MOVK | dst | ( ( ( addr >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1023088	0		=			
ANR	1023739	ArrayIndexing	buf_ptr [ 2 ]		1023088	0					
ANR	1023740	Identifier	buf_ptr		1023088	0					
ANR	1023741	PrimaryExpression	2		1023088	1					
ANR	1023742	InclusiveOrExpression	MOVK | dst | ( ( ( addr >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1023088	1		|			
ANR	1023743	Identifier	MOVK		1023088	0					
ANR	1023744	InclusiveOrExpression	dst | ( ( ( addr >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1023088	1		|			
ANR	1023745	Identifier	dst		1023088	0					
ANR	1023746	InclusiveOrExpression	( ( ( addr >> 32 ) & 0xffff ) << 5 ) | ( 2 << 21 )		1023088	1		|			
ANR	1023747	ShiftExpression	( ( addr >> 32 ) & 0xffff ) << 5		1023088	0		<<			
ANR	1023748	BitAndExpression	( addr >> 32 ) & 0xffff		1023088	0		&			
ANR	1023749	ShiftExpression	addr >> 32		1023088	0		>>			
ANR	1023750	Identifier	addr		1023088	0					
ANR	1023751	PrimaryExpression	32		1023088	1					
ANR	1023752	PrimaryExpression	0xffff		1023088	1					
ANR	1023753	PrimaryExpression	5		1023088	1					
ANR	1023754	ShiftExpression	2 << 21		1023088	1		<<			
ANR	1023755	PrimaryExpression	2		1023088	0					
ANR	1023756	PrimaryExpression	21		1023088	1					
ANR	1023757	IfStatement	if ( jump -> flags & PATCH_ABS64 )		1023088	10					
ANR	1023758	Condition	jump -> flags & PATCH_ABS64	304:7:9519:9543	1023088	0	True				
ANR	1023759	BitAndExpression	jump -> flags & PATCH_ABS64		1023088	0		&			
ANR	1023760	PtrMemberAccess	jump -> flags		1023088	0					
ANR	1023761	Identifier	jump		1023088	0					
ANR	1023762	Identifier	flags		1023088	1					
ANR	1023763	Identifier	PATCH_ABS64		1023088	1					
ANR	1023764	ExpressionStatement	buf_ptr [ 3 ] = MOVK | dst | ( ( ( addr >> 48 ) & 0xffff ) << 5 ) | ( 3 << 21 )	305:4:9550:9618	1023088	1	True				
ANR	1023765	AssignmentExpression	buf_ptr [ 3 ] = MOVK | dst | ( ( ( addr >> 48 ) & 0xffff ) << 5 ) | ( 3 << 21 )		1023088	0		=			
ANR	1023766	ArrayIndexing	buf_ptr [ 3 ]		1023088	0					
ANR	1023767	Identifier	buf_ptr		1023088	0					
ANR	1023768	PrimaryExpression	3		1023088	1					
ANR	1023769	InclusiveOrExpression	MOVK | dst | ( ( ( addr >> 48 ) & 0xffff ) << 5 ) | ( 3 << 21 )		1023088	1		|			
ANR	1023770	Identifier	MOVK		1023088	0					
ANR	1023771	InclusiveOrExpression	dst | ( ( ( addr >> 48 ) & 0xffff ) << 5 ) | ( 3 << 21 )		1023088	1		|			
ANR	1023772	Identifier	dst		1023088	0					
ANR	1023773	InclusiveOrExpression	( ( ( addr >> 48 ) & 0xffff ) << 5 ) | ( 3 << 21 )		1023088	1		|			
ANR	1023774	ShiftExpression	( ( addr >> 48 ) & 0xffff ) << 5		1023088	0		<<			
ANR	1023775	BitAndExpression	( addr >> 48 ) & 0xffff		1023088	0		&			
ANR	1023776	ShiftExpression	addr >> 48		1023088	0		>>			
ANR	1023777	Identifier	addr		1023088	0					
ANR	1023778	PrimaryExpression	48		1023088	1					
ANR	1023779	PrimaryExpression	0xffff		1023088	1					
ANR	1023780	PrimaryExpression	5		1023088	1					
ANR	1023781	ShiftExpression	3 << 21		1023088	1		<<			
ANR	1023782	PrimaryExpression	3		1023088	0					
ANR	1023783	PrimaryExpression	21		1023088	1					
ANR	1023784	Condition	0	306:11:9631:9631	1023088	1	True				
ANR	1023785	PrimaryExpression	0		1023088	0					
ANR	1023786	ExpressionStatement	jump = jump -> next	307:2:9637:9654	1023088	1	True				
ANR	1023787	AssignmentExpression	jump = jump -> next		1023088	0		=			
ANR	1023788	Identifier	jump		1023088	0					
ANR	1023789	PtrMemberAccess	jump -> next		1023088	1					
ANR	1023790	Identifier	jump		1023088	0					
ANR	1023791	Identifier	next		1023088	1					
ANR	1023792	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	310:1:9661:9697	1023088	30	True				
ANR	1023793	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1023088	0		=			
ANR	1023794	PtrMemberAccess	compiler -> error		1023088	0					
ANR	1023795	Identifier	compiler		1023088	0					
ANR	1023796	Identifier	error		1023088	1					
ANR	1023797	Identifier	SLJIT_ERR_COMPILED		1023088	1					
ANR	1023798	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )	311:1:9700:9765	1023088	31	True				
ANR	1023799	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )		1023088	0		=			
ANR	1023800	PtrMemberAccess	compiler -> executable_size		1023088	0					
ANR	1023801	Identifier	compiler		1023088	0					
ANR	1023802	Identifier	executable_size		1023088	1					
ANR	1023803	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_ins )		1023088	1		*			
ANR	1023804	AdditiveExpression	code_ptr - code		1023088	0		-			
ANR	1023805	Identifier	code_ptr		1023088	0					
ANR	1023806	Identifier	code		1023088	1					
ANR	1023807	SizeofExpression	sizeof ( sljit_ins )		1023088	1					
ANR	1023808	Sizeof	sizeof		1023088	0					
ANR	1023809	SizeofOperand	sljit_ins		1023088	1					
ANR	1023810	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	312:1:9768:9801	1023088	32	True				
ANR	1023811	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1023088	0					
ANR	1023812	Callee	SLJIT_CACHE_FLUSH		1023088	0					
ANR	1023813	Identifier	SLJIT_CACHE_FLUSH		1023088	0					
ANR	1023814	ArgumentList	code		1023088	1					
ANR	1023815	Argument	code		1023088	0					
ANR	1023816	Identifier	code		1023088	0					
ANR	1023817	Argument	code_ptr		1023088	1					
ANR	1023818	Identifier	code_ptr		1023088	0					
ANR	1023819	ReturnStatement	return code ;	313:1:9804:9815	1023088	33	True				
ANR	1023820	Identifier	code		1023088	0					
ANR	1023821	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1023088	1					
ANR	1023822	Identifier	sljit_generate_code		1023088	2					
ANR	1023823	ParameterList	struct sljit_compiler * compiler		1023088	3					
ANR	1023824	Parameter	struct sljit_compiler * compiler	206:51:6584:6614	1023088	0	True				
ANR	1023825	ParameterType	struct sljit_compiler *		1023088	0					
ANR	1023826	Identifier	compiler		1023088	1					
ANR	1023827	CFGEntryNode	ENTRY		1023088		True				
ANR	1023828	CFGExitNode	EXIT		1023088		True				
ANR	1023829	Symbol	label -> addr		1023088						
ANR	1023830	Symbol	compiler -> buf		1023088						
ANR	1023831	Symbol	SLJIT_MALLOC_EXEC		1023088						
ANR	1023832	Symbol	JUMP_LABEL		1023088						
ANR	1023833	Symbol	label -> next		1023088						
ANR	1023834	Symbol	* compiler		1023088						
ANR	1023835	Symbol	const_ -> next		1023088						
ANR	1023836	Symbol	const_ -> addr		1023088						
ANR	1023837	Symbol	buf -> next		1023088						
ANR	1023838	Symbol	buf_end		1023088						
ANR	1023839	Symbol	compiler -> executable_size		1023088						
ANR	1023840	Symbol	jump		1023088						
ANR	1023841	Symbol	~0xffffe0		1023088						
ANR	1023842	Symbol	buf -> used_size		1023088						
ANR	1023843	Symbol	check_sljit_generate_code		1023088						
ANR	1023844	Symbol	* buf		1023088						
ANR	1023845	Symbol	compiler -> labels		1023088						
ANR	1023846	Symbol	buf -> memory		1023088						
ANR	1023847	Symbol	detect_jump_type		1023088						
ANR	1023848	Symbol	PATCH_ABS64		1023088						
ANR	1023849	Symbol	* buf_ptr ++		1023088						
ANR	1023850	Symbol	jump -> addr		1023088						
ANR	1023851	Symbol	buf_ptr		1023088						
ANR	1023852	Symbol	* code_ptr		1023088						
ANR	1023853	Symbol	* jump -> u . label		1023088						
ANR	1023854	Symbol	IS_COND		1023088						
ANR	1023855	Symbol	jump -> u . target		1023088						
ANR	1023856	Symbol	compiler -> jumps		1023088						
ANR	1023857	Symbol	label -> size		1023088						
ANR	1023858	Symbol	jump -> next		1023088						
ANR	1023859	Symbol	B		1023088						
ANR	1023860	Symbol	MOVZ		1023088						
ANR	1023861	Symbol	code		1023088						
ANR	1023862	Symbol	* * jump		1023088						
ANR	1023863	Symbol	dst		1023088						
ANR	1023864	Symbol	* jump		1023088						
ANR	1023865	Symbol	jump -> u		1023088						
ANR	1023866	Symbol	jump -> flags		1023088						
ANR	1023867	Symbol	BL		1023088						
ANR	1023868	Symbol	word_count		1023088						
ANR	1023869	Symbol	code_ptr		1023088						
ANR	1023870	Symbol	IS_BL		1023088						
ANR	1023871	Symbol	compiler		1023088						
ANR	1023872	Symbol	addr		1023088						
ANR	1023873	Symbol	* buf_ptr		1023088						
ANR	1023874	Symbol	const_		1023088						
ANR	1023875	Symbol	compiler -> consts		1023088						
ANR	1023876	Symbol	* const_		1023088						
ANR	1023877	Symbol	label		1023088						
ANR	1023878	Symbol	PATCH_ABS48		1023088						
ANR	1023879	Symbol	buf		1023088						
ANR	1023880	Symbol	compiler -> size		1023088						
ANR	1023881	Symbol	* jump -> u		1023088						
ANR	1023882	Symbol	MOVK		1023088						
ANR	1023883	Symbol	PATCH_COND		1023088						
ANR	1023884	Symbol	PATCH_B		1023088						
ANR	1023885	Symbol	jump -> u . label -> addr		1023088						
ANR	1023886	Symbol	jump -> u . label		1023088						
ANR	1023887	Symbol	compiler -> error		1023088						
ANR	1023888	Symbol	SLJIT_ERR_COMPILED		1023088						
ANR	1023889	Symbol	* label		1023088						
ANR	1023890	Function	logical_imm	349:0:10540:11782							
ANR	1023891	FunctionDef	"logical_imm (sljit_sw imm , sljit_si len)"		1023890	0					
ANR	1023892	CompoundStatement		350:0:10597:11782	1023890	0					
ANR	1023893	IdentifierDeclStatement	"sljit_si negated , ones , right ;"	351:1:10600:10629	1023890	0	True				
ANR	1023894	IdentifierDecl	negated		1023890	0					
ANR	1023895	IdentifierDeclType	sljit_si		1023890	0					
ANR	1023896	Identifier	negated		1023890	1					
ANR	1023897	IdentifierDecl	ones		1023890	1					
ANR	1023898	IdentifierDeclType	sljit_si		1023890	0					
ANR	1023899	Identifier	ones		1023890	1					
ANR	1023900	IdentifierDecl	right		1023890	2					
ANR	1023901	IdentifierDeclType	sljit_si		1023890	0					
ANR	1023902	Identifier	right		1023890	1					
ANR	1023903	IdentifierDeclStatement	"sljit_uw mask , uimm ;"	352:1:10632:10651	1023890	1	True				
ANR	1023904	IdentifierDecl	mask		1023890	0					
ANR	1023905	IdentifierDeclType	sljit_uw		1023890	0					
ANR	1023906	Identifier	mask		1023890	1					
ANR	1023907	IdentifierDecl	uimm		1023890	1					
ANR	1023908	IdentifierDeclType	sljit_uw		1023890	0					
ANR	1023909	Identifier	uimm		1023890	1					
ANR	1023910	IdentifierDeclStatement	sljit_ins ins ;	353:1:10654:10667	1023890	2	True				
ANR	1023911	IdentifierDecl	ins		1023890	0					
ANR	1023912	IdentifierDeclType	sljit_ins		1023890	0					
ANR	1023913	Identifier	ins		1023890	1					
ANR	1023914	IfStatement	if ( len & LOGICAL_IMM_CHECK )		1023890	3					
ANR	1023915	Condition	len & LOGICAL_IMM_CHECK	355:5:10675:10697	1023890	0	True				
ANR	1023916	BitAndExpression	len & LOGICAL_IMM_CHECK		1023890	0		&			
ANR	1023917	Identifier	len		1023890	0					
ANR	1023918	Identifier	LOGICAL_IMM_CHECK		1023890	1					
ANR	1023919	CompoundStatement		6:30:102:102	1023890	1					
ANR	1023920	ExpressionStatement	len &= ~LOGICAL_IMM_CHECK	356:2:10704:10729	1023890	0	True				
ANR	1023921	AssignmentExpression	len &= ~LOGICAL_IMM_CHECK		1023890	0		&=			
ANR	1023922	Identifier	len		1023890	0					
ANR	1023923	Identifier	~LOGICAL_IMM_CHECK		1023890	1					
ANR	1023924	IfStatement	if ( len == 32 && ( imm == 0 || imm == - 1 ) )		1023890	1					
ANR	1023925	Condition	len == 32 && ( imm == 0 || imm == - 1 )	357:6:10737:10772	1023890	0	True				
ANR	1023926	AndExpression	len == 32 && ( imm == 0 || imm == - 1 )		1023890	0		&&			
ANR	1023927	EqualityExpression	len == 32		1023890	0		==			
ANR	1023928	Identifier	len		1023890	0					
ANR	1023929	PrimaryExpression	32		1023890	1					
ANR	1023930	OrExpression	imm == 0 || imm == - 1		1023890	1		||			
ANR	1023931	EqualityExpression	imm == 0		1023890	0		==			
ANR	1023932	Identifier	imm		1023890	0					
ANR	1023933	PrimaryExpression	0		1023890	1					
ANR	1023934	EqualityExpression	imm == - 1		1023890	1		==			
ANR	1023935	Identifier	imm		1023890	0					
ANR	1023936	UnaryOperationExpression	- 1		1023890	1					
ANR	1023937	UnaryOperator	-		1023890	0					
ANR	1023938	PrimaryExpression	1		1023890	1					
ANR	1023939	ReturnStatement	return 0 ;	358:3:10778:10786	1023890	1	True				
ANR	1023940	PrimaryExpression	0		1023890	0					
ANR	1023941	IfStatement	if ( len == 16 && ( ( sljit_si ) imm == 0 || ( sljit_si ) imm == - 1 ) )		1023890	2					
ANR	1023942	Condition	len == 16 && ( ( sljit_si ) imm == 0 || ( sljit_si ) imm == - 1 )	359:6:10794:10849	1023890	0	True				
ANR	1023943	AndExpression	len == 16 && ( ( sljit_si ) imm == 0 || ( sljit_si ) imm == - 1 )		1023890	0		&&			
ANR	1023944	EqualityExpression	len == 16		1023890	0		==			
ANR	1023945	Identifier	len		1023890	0					
ANR	1023946	PrimaryExpression	16		1023890	1					
ANR	1023947	OrExpression	( sljit_si ) imm == 0 || ( sljit_si ) imm == - 1		1023890	1		||			
ANR	1023948	EqualityExpression	( sljit_si ) imm == 0		1023890	0		==			
ANR	1023949	CastExpression	( sljit_si ) imm		1023890	0					
ANR	1023950	CastTarget	sljit_si		1023890	0					
ANR	1023951	Identifier	imm		1023890	1					
ANR	1023952	PrimaryExpression	0		1023890	1					
ANR	1023953	EqualityExpression	( sljit_si ) imm == - 1		1023890	1		==			
ANR	1023954	CastExpression	( sljit_si ) imm		1023890	0					
ANR	1023955	CastTarget	sljit_si		1023890	0					
ANR	1023956	Identifier	imm		1023890	1					
ANR	1023957	UnaryOperationExpression	- 1		1023890	1					
ANR	1023958	UnaryOperator	-		1023890	0					
ANR	1023959	PrimaryExpression	1		1023890	1					
ANR	1023960	ReturnStatement	return 0 ;	360:3:10855:10863	1023890	1	True				
ANR	1023961	PrimaryExpression	0		1023890	0					
ANR	1023962	ExpressionStatement	SLJIT_ASSERT ( ( len == 32 && imm != 0 && imm != - 1 ) || ( len == 16 && ( sljit_si ) imm != 0 && ( sljit_si ) imm != - 1 ) )	363:1:10870:10982	1023890	4	True				
ANR	1023963	CallExpression	SLJIT_ASSERT ( ( len == 32 && imm != 0 && imm != - 1 ) || ( len == 16 && ( sljit_si ) imm != 0 && ( sljit_si ) imm != - 1 ) )		1023890	0					
ANR	1023964	Callee	SLJIT_ASSERT		1023890	0					
ANR	1023965	Identifier	SLJIT_ASSERT		1023890	0					
ANR	1023966	ArgumentList	( len == 32 && imm != 0 && imm != - 1 ) || ( len == 16 && ( sljit_si ) imm != 0 && ( sljit_si ) imm != - 1 )		1023890	1					
ANR	1023967	Argument	( len == 32 && imm != 0 && imm != - 1 ) || ( len == 16 && ( sljit_si ) imm != 0 && ( sljit_si ) imm != - 1 )		1023890	0					
ANR	1023968	OrExpression	( len == 32 && imm != 0 && imm != - 1 ) || ( len == 16 && ( sljit_si ) imm != 0 && ( sljit_si ) imm != - 1 )		1023890	0		||			
ANR	1023969	AndExpression	len == 32 && imm != 0 && imm != - 1		1023890	0		&&			
ANR	1023970	EqualityExpression	len == 32		1023890	0		==			
ANR	1023971	Identifier	len		1023890	0					
ANR	1023972	PrimaryExpression	32		1023890	1					
ANR	1023973	AndExpression	imm != 0 && imm != - 1		1023890	1		&&			
ANR	1023974	EqualityExpression	imm != 0		1023890	0		!=			
ANR	1023975	Identifier	imm		1023890	0					
ANR	1023976	PrimaryExpression	0		1023890	1					
ANR	1023977	EqualityExpression	imm != - 1		1023890	1		!=			
ANR	1023978	Identifier	imm		1023890	0					
ANR	1023979	UnaryOperationExpression	- 1		1023890	1					
ANR	1023980	UnaryOperator	-		1023890	0					
ANR	1023981	PrimaryExpression	1		1023890	1					
ANR	1023982	AndExpression	len == 16 && ( sljit_si ) imm != 0 && ( sljit_si ) imm != - 1		1023890	1		&&			
ANR	1023983	EqualityExpression	len == 16		1023890	0		==			
ANR	1023984	Identifier	len		1023890	0					
ANR	1023985	PrimaryExpression	16		1023890	1					
ANR	1023986	AndExpression	( sljit_si ) imm != 0 && ( sljit_si ) imm != - 1		1023890	1		&&			
ANR	1023987	EqualityExpression	( sljit_si ) imm != 0		1023890	0		!=			
ANR	1023988	CastExpression	( sljit_si ) imm		1023890	0					
ANR	1023989	CastTarget	sljit_si		1023890	0					
ANR	1023990	Identifier	imm		1023890	1					
ANR	1023991	PrimaryExpression	0		1023890	1					
ANR	1023992	EqualityExpression	( sljit_si ) imm != - 1		1023890	1		!=			
ANR	1023993	CastExpression	( sljit_si ) imm		1023890	0					
ANR	1023994	CastTarget	sljit_si		1023890	0					
ANR	1023995	Identifier	imm		1023890	1					
ANR	1023996	UnaryOperationExpression	- 1		1023890	1					
ANR	1023997	UnaryOperator	-		1023890	0					
ANR	1023998	PrimaryExpression	1		1023890	1					
ANR	1023999	ExpressionStatement	uimm = ( sljit_uw ) imm	365:1:10985:11005	1023890	5	True				
ANR	1024000	AssignmentExpression	uimm = ( sljit_uw ) imm		1023890	0		=			
ANR	1024001	Identifier	uimm		1023890	0					
ANR	1024002	CastExpression	( sljit_uw ) imm		1023890	1					
ANR	1024003	CastTarget	sljit_uw		1023890	0					
ANR	1024004	Identifier	imm		1023890	1					
ANR	1024005	WhileStatement	while ( 1 )		1023890	6					
ANR	1024006	Condition	1	366:8:11015:11015	1023890	0	True				
ANR	1024007	PrimaryExpression	1		1023890	0					
ANR	1024008	CompoundStatement		17:11:420:420	1023890	1					
ANR	1024009	IfStatement	if ( len <= 0 )		1023890	0					
ANR	1024010	Condition	len <= 0	367:6:11026:11033	1023890	0	True				
ANR	1024011	RelationalExpression	len <= 0		1023890	0		<=			
ANR	1024012	Identifier	len		1023890	0					
ANR	1024013	PrimaryExpression	0		1023890	1					
ANR	1024014	CompoundStatement		18:16:438:438	1023890	1					
ANR	1024015	ExpressionStatement	SLJIT_ASSERT_STOP ( )	368:3:11041:11060	1023890	0	True				
ANR	1024016	CallExpression	SLJIT_ASSERT_STOP ( )		1023890	0					
ANR	1024017	Callee	SLJIT_ASSERT_STOP		1023890	0					
ANR	1024018	Identifier	SLJIT_ASSERT_STOP		1023890	0					
ANR	1024019	ArgumentList			1023890	1					
ANR	1024020	ReturnStatement	return 0 ;	369:3:11065:11073	1023890	1	True				
ANR	1024021	PrimaryExpression	0		1023890	0					
ANR	1024022	ExpressionStatement	mask = ( ( sljit_uw ) 1 << len ) - 1	371:2:11081:11112	1023890	1	True				
ANR	1024023	AssignmentExpression	mask = ( ( sljit_uw ) 1 << len ) - 1		1023890	0		=			
ANR	1024024	Identifier	mask		1023890	0					
ANR	1024025	AdditiveExpression	( ( sljit_uw ) 1 << len ) - 1		1023890	1		-			
ANR	1024026	ShiftExpression	( sljit_uw ) 1 << len		1023890	0		<<			
ANR	1024027	CastExpression	( sljit_uw ) 1		1023890	0					
ANR	1024028	CastTarget	sljit_uw		1023890	0					
ANR	1024029	PrimaryExpression	1		1023890	1					
ANR	1024030	Identifier	len		1023890	1					
ANR	1024031	PrimaryExpression	1		1023890	1					
ANR	1024032	IfStatement	if ( ( uimm & mask ) != ( ( uimm >> len ) & mask ) )		1023890	2					
ANR	1024033	Condition	( uimm & mask ) != ( ( uimm >> len ) & mask )	372:6:11120:11158	1023890	0	True				
ANR	1024034	EqualityExpression	( uimm & mask ) != ( ( uimm >> len ) & mask )		1023890	0		!=			
ANR	1024035	BitAndExpression	uimm & mask		1023890	0		&			
ANR	1024036	Identifier	uimm		1023890	0					
ANR	1024037	Identifier	mask		1023890	1					
ANR	1024038	BitAndExpression	( uimm >> len ) & mask		1023890	1		&			
ANR	1024039	ShiftExpression	uimm >> len		1023890	0		>>			
ANR	1024040	Identifier	uimm		1023890	0					
ANR	1024041	Identifier	len		1023890	1					
ANR	1024042	Identifier	mask		1023890	1					
ANR	1024043	BreakStatement	break ;	373:3:11164:11169	1023890	1	True				
ANR	1024044	ExpressionStatement	len >>= 1	374:2:11173:11182	1023890	3	True				
ANR	1024045	AssignmentExpression	len >>= 1		1023890	0		>>=			
ANR	1024046	Identifier	len		1023890	0					
ANR	1024047	PrimaryExpression	1		1023890	1					
ANR	1024048	ExpressionStatement	len <<= 1	377:1:11189:11198	1023890	7	True				
ANR	1024049	AssignmentExpression	len <<= 1		1023890	0		<<=			
ANR	1024050	Identifier	len		1023890	0					
ANR	1024051	PrimaryExpression	1		1023890	1					
ANR	1024052	ExpressionStatement	negated = 0	379:1:11202:11213	1023890	8	True				
ANR	1024053	AssignmentExpression	negated = 0		1023890	0		=			
ANR	1024054	Identifier	negated		1023890	0					
ANR	1024055	PrimaryExpression	0		1023890	1					
ANR	1024056	IfStatement	if ( uimm & 0x1 )		1023890	9					
ANR	1024057	Condition	uimm & 0x1	380:5:11220:11229	1023890	0	True				
ANR	1024058	BitAndExpression	uimm & 0x1		1023890	0		&			
ANR	1024059	Identifier	uimm		1023890	0					
ANR	1024060	PrimaryExpression	0x1		1023890	1					
ANR	1024061	CompoundStatement		31:17:634:634	1023890	1					
ANR	1024062	ExpressionStatement	negated = 1	381:2:11236:11247	1023890	0	True				
ANR	1024063	AssignmentExpression	negated = 1		1023890	0		=			
ANR	1024064	Identifier	negated		1023890	0					
ANR	1024065	PrimaryExpression	1		1023890	1					
ANR	1024066	ExpressionStatement	uimm = ~uimm	382:2:11251:11263	1023890	1	True				
ANR	1024067	AssignmentExpression	uimm = ~uimm		1023890	0		=			
ANR	1024068	Identifier	uimm		1023890	0					
ANR	1024069	Identifier	~uimm		1023890	1					
ANR	1024070	IfStatement	if ( len < 64 )		1023890	10					
ANR	1024071	Condition	len < 64	385:5:11274:11281	1023890	0	True				
ANR	1024072	RelationalExpression	len < 64		1023890	0		<			
ANR	1024073	Identifier	len		1023890	0					
ANR	1024074	PrimaryExpression	64		1023890	1					
ANR	1024075	ExpressionStatement	uimm &= ( ( sljit_uw ) 1 << len ) - 1	386:2:11286:11318	1023890	1	True				
ANR	1024076	AssignmentExpression	uimm &= ( ( sljit_uw ) 1 << len ) - 1		1023890	0		&=			
ANR	1024077	Identifier	uimm		1023890	0					
ANR	1024078	AdditiveExpression	( ( sljit_uw ) 1 << len ) - 1		1023890	1		-			
ANR	1024079	ShiftExpression	( sljit_uw ) 1 << len		1023890	0		<<			
ANR	1024080	CastExpression	( sljit_uw ) 1		1023890	0					
ANR	1024081	CastTarget	sljit_uw		1023890	0					
ANR	1024082	PrimaryExpression	1		1023890	1					
ANR	1024083	Identifier	len		1023890	1					
ANR	1024084	PrimaryExpression	1		1023890	1					
ANR	1024085	ExpressionStatement	"COUNT_TRAILING_ZERO ( uimm , right )"	389:1:11351:11383	1023890	11	True				
ANR	1024086	CallExpression	"COUNT_TRAILING_ZERO ( uimm , right )"		1023890	0					
ANR	1024087	Callee	COUNT_TRAILING_ZERO		1023890	0					
ANR	1024088	Identifier	COUNT_TRAILING_ZERO		1023890	0					
ANR	1024089	ArgumentList	uimm		1023890	1					
ANR	1024090	Argument	uimm		1023890	0					
ANR	1024091	Identifier	uimm		1023890	0					
ANR	1024092	Argument	right		1023890	1					
ANR	1024093	Identifier	right		1023890	0					
ANR	1024094	ExpressionStatement	imm = ( sljit_sw ) ~uimm	392:1:11450:11471	1023890	12	True				
ANR	1024095	AssignmentExpression	imm = ( sljit_sw ) ~uimm		1023890	0		=			
ANR	1024096	Identifier	imm		1023890	0					
ANR	1024097	CastExpression	( sljit_sw ) ~uimm		1023890	1					
ANR	1024098	CastTarget	sljit_sw		1023890	0					
ANR	1024099	Identifier	~uimm		1023890	1					
ANR	1024100	ExpressionStatement	SLJIT_ASSERT ( imm < 0 )	393:1:11474:11495	1023890	13	True				
ANR	1024101	CallExpression	SLJIT_ASSERT ( imm < 0 )		1023890	0					
ANR	1024102	Callee	SLJIT_ASSERT		1023890	0					
ANR	1024103	Identifier	SLJIT_ASSERT		1023890	0					
ANR	1024104	ArgumentList	imm < 0		1023890	1					
ANR	1024105	Argument	imm < 0		1023890	0					
ANR	1024106	RelationalExpression	imm < 0		1023890	0		<			
ANR	1024107	Identifier	imm		1023890	0					
ANR	1024108	PrimaryExpression	0		1023890	1					
ANR	1024109	ExpressionStatement	"COUNT_TRAILING_ZERO ( imm , ones )"	395:1:11499:11529	1023890	14	True				
ANR	1024110	CallExpression	"COUNT_TRAILING_ZERO ( imm , ones )"		1023890	0					
ANR	1024111	Callee	COUNT_TRAILING_ZERO		1023890	0					
ANR	1024112	Identifier	COUNT_TRAILING_ZERO		1023890	0					
ANR	1024113	ArgumentList	imm		1023890	1					
ANR	1024114	Argument	imm		1023890	0					
ANR	1024115	Identifier	imm		1023890	0					
ANR	1024116	Argument	ones		1023890	1					
ANR	1024117	Identifier	ones		1023890	0					
ANR	1024118	IfStatement	if ( ~imm )		1023890	15					
ANR	1024119	Condition	~imm	397:5:11537:11540	1023890	0	True				
ANR	1024120	Identifier	~imm		1023890	0					
ANR	1024121	ReturnStatement	return 0 ;	398:2:11545:11553	1023890	1	True				
ANR	1024122	PrimaryExpression	0		1023890	0					
ANR	1024123	IfStatement	if ( len == 64 )		1023890	16					
ANR	1024124	Condition	len == 64	400:5:11561:11569	1023890	0	True				
ANR	1024125	EqualityExpression	len == 64		1023890	0		==			
ANR	1024126	Identifier	len		1023890	0					
ANR	1024127	PrimaryExpression	64		1023890	1					
ANR	1024128	ExpressionStatement	ins = 1 << 22	401:2:11574:11587	1023890	1	True				
ANR	1024129	AssignmentExpression	ins = 1 << 22		1023890	0		=			
ANR	1024130	Identifier	ins		1023890	0					
ANR	1024131	ShiftExpression	1 << 22		1023890	1		<<			
ANR	1024132	PrimaryExpression	1		1023890	0					
ANR	1024133	PrimaryExpression	22		1023890	1					
ANR	1024134	ElseStatement	else		1023890	0					
ANR	1024135	ExpressionStatement	ins = ( 0x3f - ( ( len << 1 ) - 1 ) ) << 10	403:2:11597:11634	1023890	0	True				
ANR	1024136	AssignmentExpression	ins = ( 0x3f - ( ( len << 1 ) - 1 ) ) << 10		1023890	0		=			
ANR	1024137	Identifier	ins		1023890	0					
ANR	1024138	ShiftExpression	( 0x3f - ( ( len << 1 ) - 1 ) ) << 10		1023890	1		<<			
ANR	1024139	AdditiveExpression	0x3f - ( ( len << 1 ) - 1 )		1023890	0		-			
ANR	1024140	PrimaryExpression	0x3f		1023890	0					
ANR	1024141	AdditiveExpression	( len << 1 ) - 1		1023890	1		-			
ANR	1024142	ShiftExpression	len << 1		1023890	0		<<			
ANR	1024143	Identifier	len		1023890	0					
ANR	1024144	PrimaryExpression	1		1023890	1					
ANR	1024145	PrimaryExpression	1		1023890	1					
ANR	1024146	PrimaryExpression	10		1023890	1					
ANR	1024147	IfStatement	if ( negated )		1023890	17					
ANR	1024148	Condition	negated	405:5:11642:11648	1023890	0	True				
ANR	1024149	Identifier	negated		1023890	0					
ANR	1024150	ReturnStatement	return ins | ( ( len - ones - 1 ) << 10 ) | ( ( len - ones - right ) << 16 ) ;	406:2:11653:11721	1023890	1	True				
ANR	1024151	InclusiveOrExpression	ins | ( ( len - ones - 1 ) << 10 ) | ( ( len - ones - right ) << 16 )		1023890	0		|			
ANR	1024152	Identifier	ins		1023890	0					
ANR	1024153	InclusiveOrExpression	( ( len - ones - 1 ) << 10 ) | ( ( len - ones - right ) << 16 )		1023890	1		|			
ANR	1024154	ShiftExpression	( len - ones - 1 ) << 10		1023890	0		<<			
ANR	1024155	AdditiveExpression	len - ones - 1		1023890	0		-			
ANR	1024156	Identifier	len		1023890	0					
ANR	1024157	AdditiveExpression	ones - 1		1023890	1		-			
ANR	1024158	Identifier	ones		1023890	0					
ANR	1024159	PrimaryExpression	1		1023890	1					
ANR	1024160	PrimaryExpression	10		1023890	1					
ANR	1024161	ShiftExpression	( len - ones - right ) << 16		1023890	1		<<			
ANR	1024162	AdditiveExpression	len - ones - right		1023890	0		-			
ANR	1024163	Identifier	len		1023890	0					
ANR	1024164	AdditiveExpression	ones - right		1023890	1		-			
ANR	1024165	Identifier	ones		1023890	0					
ANR	1024166	Identifier	right		1023890	1					
ANR	1024167	PrimaryExpression	16		1023890	1					
ANR	1024168	ReturnStatement	return ins | ( ( ones - 1 ) << 10 ) | ( ( len - right ) << 16 ) ;	408:1:11725:11780	1023890	18	True				
ANR	1024169	InclusiveOrExpression	ins | ( ( ones - 1 ) << 10 ) | ( ( len - right ) << 16 )		1023890	0		|			
ANR	1024170	Identifier	ins		1023890	0					
ANR	1024171	InclusiveOrExpression	( ( ones - 1 ) << 10 ) | ( ( len - right ) << 16 )		1023890	1		|			
ANR	1024172	ShiftExpression	( ones - 1 ) << 10		1023890	0		<<			
ANR	1024173	AdditiveExpression	ones - 1		1023890	0		-			
ANR	1024174	Identifier	ones		1023890	0					
ANR	1024175	PrimaryExpression	1		1023890	1					
ANR	1024176	PrimaryExpression	10		1023890	1					
ANR	1024177	ShiftExpression	( len - right ) << 16		1023890	1		<<			
ANR	1024178	AdditiveExpression	len - right		1023890	0		-			
ANR	1024179	Identifier	len		1023890	0					
ANR	1024180	Identifier	right		1023890	1					
ANR	1024181	PrimaryExpression	16		1023890	1					
ANR	1024182	ReturnType	static sljit_ins		1023890	1					
ANR	1024183	Identifier	logical_imm		1023890	2					
ANR	1024184	ParameterList	"sljit_sw imm , sljit_si len"		1023890	3					
ANR	1024185	Parameter	sljit_sw imm	349:29:10569:10580	1023890	0	True				
ANR	1024186	ParameterType	sljit_sw		1023890	0					
ANR	1024187	Identifier	imm		1023890	1					
ANR	1024188	Parameter	sljit_si len	349:43:10583:10594	1023890	1	True				
ANR	1024189	ParameterType	sljit_si		1023890	0					
ANR	1024190	Identifier	len		1023890	1					
ANR	1024191	CFGEntryNode	ENTRY		1023890		True				
ANR	1024192	CFGExitNode	EXIT		1023890		True				
ANR	1024193	Symbol	~LOGICAL_IMM_CHECK		1023890						
ANR	1024194	Symbol	~imm		1023890						
ANR	1024195	Symbol	negated		1023890						
ANR	1024196	Symbol	uimm		1023890						
ANR	1024197	Symbol	len		1023890						
ANR	1024198	Symbol	~uimm		1023890						
ANR	1024199	Symbol	imm		1023890						
ANR	1024200	Symbol	ones		1023890						
ANR	1024201	Symbol	right		1023890						
ANR	1024202	Symbol	LOGICAL_IMM_CHECK		1023890						
ANR	1024203	Symbol	mask		1023890						
ANR	1024204	Symbol	ins		1023890						
ANR	1024205	Function	load_immediate	413:0:11813:14189							
ANR	1024206	FunctionDef	"load_immediate (struct sljit_compiler * compiler , sljit_si dst , sljit_sw simm)"		1024205	0					
ANR	1024207	CompoundStatement		414:0:11906:14189	1024205	0					
ANR	1024208	IdentifierDeclStatement	sljit_uw imm = ( sljit_uw ) simm ;	415:1:11909:11938	1024205	0	True				
ANR	1024209	IdentifierDecl	imm = ( sljit_uw ) simm		1024205	0					
ANR	1024210	IdentifierDeclType	sljit_uw		1024205	0					
ANR	1024211	Identifier	imm		1024205	1					
ANR	1024212	AssignmentExpression	imm = ( sljit_uw ) simm		1024205	2		=			
ANR	1024213	Identifier	imm		1024205	0					
ANR	1024214	CastExpression	( sljit_uw ) simm		1024205	1					
ANR	1024215	CastTarget	sljit_uw		1024205	0					
ANR	1024216	Identifier	simm		1024205	1					
ANR	1024217	IdentifierDeclStatement	"sljit_si i , zeros , ones , first ;"	416:1:11941:11971	1024205	1	True				
ANR	1024218	IdentifierDecl	i		1024205	0					
ANR	1024219	IdentifierDeclType	sljit_si		1024205	0					
ANR	1024220	Identifier	i		1024205	1					
ANR	1024221	IdentifierDecl	zeros		1024205	1					
ANR	1024222	IdentifierDeclType	sljit_si		1024205	0					
ANR	1024223	Identifier	zeros		1024205	1					
ANR	1024224	IdentifierDecl	ones		1024205	2					
ANR	1024225	IdentifierDeclType	sljit_si		1024205	0					
ANR	1024226	Identifier	ones		1024205	1					
ANR	1024227	IdentifierDecl	first		1024205	3					
ANR	1024228	IdentifierDeclType	sljit_si		1024205	0					
ANR	1024229	Identifier	first		1024205	1					
ANR	1024230	IdentifierDeclStatement	sljit_ins bitmask ;	417:1:11974:11991	1024205	2	True				
ANR	1024231	IdentifierDecl	bitmask		1024205	0					
ANR	1024232	IdentifierDeclType	sljit_ins		1024205	0					
ANR	1024233	Identifier	bitmask		1024205	1					
ANR	1024234	IfStatement	if ( imm <= 0xffff )		1024205	3					
ANR	1024235	Condition	imm <= 0xffff	419:5:11999:12011	1024205	0	True				
ANR	1024236	RelationalExpression	imm <= 0xffff		1024205	0		<=			
ANR	1024237	Identifier	imm		1024205	0					
ANR	1024238	PrimaryExpression	0xffff		1024205	1					
ANR	1024239	ReturnStatement	"return push_inst ( compiler , MOVZ | RD ( dst ) | ( imm << 5 ) ) ;"	420:2:12016:12071	1024205	1	True				
ANR	1024240	CallExpression	"push_inst ( compiler , MOVZ | RD ( dst ) | ( imm << 5 ) )"		1024205	0					
ANR	1024241	Callee	push_inst		1024205	0					
ANR	1024242	Identifier	push_inst		1024205	0					
ANR	1024243	ArgumentList	compiler		1024205	1					
ANR	1024244	Argument	compiler		1024205	0					
ANR	1024245	Identifier	compiler		1024205	0					
ANR	1024246	Argument	MOVZ | RD ( dst ) | ( imm << 5 )		1024205	1					
ANR	1024247	InclusiveOrExpression	MOVZ | RD ( dst ) | ( imm << 5 )		1024205	0		|			
ANR	1024248	Identifier	MOVZ		1024205	0					
ANR	1024249	InclusiveOrExpression	RD ( dst ) | ( imm << 5 )		1024205	1		|			
ANR	1024250	CallExpression	RD ( dst )		1024205	0					
ANR	1024251	Callee	RD		1024205	0					
ANR	1024252	Identifier	RD		1024205	0					
ANR	1024253	ArgumentList	dst		1024205	1					
ANR	1024254	Argument	dst		1024205	0					
ANR	1024255	Identifier	dst		1024205	0					
ANR	1024256	ShiftExpression	imm << 5		1024205	1		<<			
ANR	1024257	Identifier	imm		1024205	0					
ANR	1024258	PrimaryExpression	5		1024205	1					
ANR	1024259	IfStatement	if ( simm >= - 0x10000 && simm < 0 )		1024205	4					
ANR	1024260	Condition	simm >= - 0x10000 && simm < 0	422:5:12079:12106	1024205	0	True				
ANR	1024261	AndExpression	simm >= - 0x10000 && simm < 0		1024205	0		&&			
ANR	1024262	RelationalExpression	simm >= - 0x10000		1024205	0		>=			
ANR	1024263	Identifier	simm		1024205	0					
ANR	1024264	UnaryOperationExpression	- 0x10000		1024205	1					
ANR	1024265	UnaryOperator	-		1024205	0					
ANR	1024266	PrimaryExpression	0x10000		1024205	1					
ANR	1024267	RelationalExpression	simm < 0		1024205	1		<			
ANR	1024268	Identifier	simm		1024205	0					
ANR	1024269	PrimaryExpression	0		1024205	1					
ANR	1024270	ReturnStatement	"return push_inst ( compiler , MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) ) ;"	423:2:12111:12178	1024205	1	True				
ANR	1024271	CallExpression	"push_inst ( compiler , MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) )"		1024205	0					
ANR	1024272	Callee	push_inst		1024205	0					
ANR	1024273	Identifier	push_inst		1024205	0					
ANR	1024274	ArgumentList	compiler		1024205	1					
ANR	1024275	Argument	compiler		1024205	0					
ANR	1024276	Identifier	compiler		1024205	0					
ANR	1024277	Argument	MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	1					
ANR	1024278	InclusiveOrExpression	MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	0		|			
ANR	1024279	Identifier	MOVN		1024205	0					
ANR	1024280	InclusiveOrExpression	RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	1		|			
ANR	1024281	CallExpression	RD ( dst )		1024205	0					
ANR	1024282	Callee	RD		1024205	0					
ANR	1024283	Identifier	RD		1024205	0					
ANR	1024284	ArgumentList	dst		1024205	1					
ANR	1024285	Argument	dst		1024205	0					
ANR	1024286	Identifier	dst		1024205	0					
ANR	1024287	ShiftExpression	( ~imm & 0xffff ) << 5		1024205	1		<<			
ANR	1024288	BitAndExpression	~imm & 0xffff		1024205	0		&			
ANR	1024289	Identifier	~imm		1024205	0					
ANR	1024290	PrimaryExpression	0xffff		1024205	1					
ANR	1024291	PrimaryExpression	5		1024205	1					
ANR	1024292	IfStatement	if ( imm <= 0xffffffffl )		1024205	5					
ANR	1024293	Condition	imm <= 0xffffffffl	425:5:12186:12203	1024205	0	True				
ANR	1024294	RelationalExpression	imm <= 0xffffffffl		1024205	0		<=			
ANR	1024295	Identifier	imm		1024205	0					
ANR	1024296	PrimaryExpression	0xffffffffl		1024205	1					
ANR	1024297	CompoundStatement		12:25:299:299	1024205	1					
ANR	1024298	IfStatement	if ( ( imm & 0xffff0000l ) == 0xffff0000 )		1024205	0					
ANR	1024299	Condition	( imm & 0xffff0000l ) == 0xffff0000	426:6:12214:12246	1024205	0	True				
ANR	1024300	EqualityExpression	( imm & 0xffff0000l ) == 0xffff0000		1024205	0		==			
ANR	1024301	BitAndExpression	imm & 0xffff0000l		1024205	0		&			
ANR	1024302	Identifier	imm		1024205	0					
ANR	1024303	PrimaryExpression	0xffff0000l		1024205	1					
ANR	1024304	PrimaryExpression	0xffff0000		1024205	1					
ANR	1024305	ReturnStatement	"return push_inst ( compiler , ( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) ) ;"	427:3:12252:12328	1024205	1	True				
ANR	1024306	CallExpression	"push_inst ( compiler , ( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) )"		1024205	0					
ANR	1024307	Callee	push_inst		1024205	0					
ANR	1024308	Identifier	push_inst		1024205	0					
ANR	1024309	ArgumentList	compiler		1024205	1					
ANR	1024310	Argument	compiler		1024205	0					
ANR	1024311	Identifier	compiler		1024205	0					
ANR	1024312	Argument	( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	1					
ANR	1024313	InclusiveOrExpression	( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	0		|			
ANR	1024314	ExclusiveOrExpression	MOVN ^ W_OP		1024205	0		^			
ANR	1024315	Identifier	MOVN		1024205	0					
ANR	1024316	Identifier	W_OP		1024205	1					
ANR	1024317	InclusiveOrExpression	RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	1		|			
ANR	1024318	CallExpression	RD ( dst )		1024205	0					
ANR	1024319	Callee	RD		1024205	0					
ANR	1024320	Identifier	RD		1024205	0					
ANR	1024321	ArgumentList	dst		1024205	1					
ANR	1024322	Argument	dst		1024205	0					
ANR	1024323	Identifier	dst		1024205	0					
ANR	1024324	ShiftExpression	( ~imm & 0xffff ) << 5		1024205	1		<<			
ANR	1024325	BitAndExpression	~imm & 0xffff		1024205	0		&			
ANR	1024326	Identifier	~imm		1024205	0					
ANR	1024327	PrimaryExpression	0xffff		1024205	1					
ANR	1024328	PrimaryExpression	5		1024205	1					
ANR	1024329	IfStatement	if ( ( imm & 0xffff ) == 0xffff )		1024205	1					
ANR	1024330	Condition	( imm & 0xffff ) == 0xffff	428:6:12336:12359	1024205	0	True				
ANR	1024331	EqualityExpression	( imm & 0xffff ) == 0xffff		1024205	0		==			
ANR	1024332	BitAndExpression	imm & 0xffff		1024205	0		&			
ANR	1024333	Identifier	imm		1024205	0					
ANR	1024334	PrimaryExpression	0xffff		1024205	1					
ANR	1024335	PrimaryExpression	0xffff		1024205	1					
ANR	1024336	ReturnStatement	"return push_inst ( compiler , ( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 ) ) ;"	429:3:12365:12465	1024205	1	True				
ANR	1024337	CallExpression	"push_inst ( compiler , ( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 ) )"		1024205	0					
ANR	1024338	Callee	push_inst		1024205	0					
ANR	1024339	Identifier	push_inst		1024205	0					
ANR	1024340	ArgumentList	compiler		1024205	1					
ANR	1024341	Argument	compiler		1024205	0					
ANR	1024342	Identifier	compiler		1024205	0					
ANR	1024343	Argument	( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1					
ANR	1024344	InclusiveOrExpression	( MOVN ^ W_OP ) | RD ( dst ) | ( ( ~imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	0		|			
ANR	1024345	ExclusiveOrExpression	MOVN ^ W_OP		1024205	0		^			
ANR	1024346	Identifier	MOVN		1024205	0					
ANR	1024347	Identifier	W_OP		1024205	1					
ANR	1024348	InclusiveOrExpression	RD ( dst ) | ( ( ~imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1		|			
ANR	1024349	CallExpression	RD ( dst )		1024205	0					
ANR	1024350	Callee	RD		1024205	0					
ANR	1024351	Identifier	RD		1024205	0					
ANR	1024352	ArgumentList	dst		1024205	1					
ANR	1024353	Argument	dst		1024205	0					
ANR	1024354	Identifier	dst		1024205	0					
ANR	1024355	InclusiveOrExpression	( ( ~imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1		|			
ANR	1024356	ShiftExpression	( ~imm & 0xffff0000l ) >> ( 16 - 5 )		1024205	0		>>			
ANR	1024357	BitAndExpression	~imm & 0xffff0000l		1024205	0		&			
ANR	1024358	Identifier	~imm		1024205	0					
ANR	1024359	PrimaryExpression	0xffff0000l		1024205	1					
ANR	1024360	AdditiveExpression	16 - 5		1024205	1		-			
ANR	1024361	PrimaryExpression	16		1024205	0					
ANR	1024362	PrimaryExpression	5		1024205	1					
ANR	1024363	ShiftExpression	1 << 21		1024205	1		<<			
ANR	1024364	PrimaryExpression	1		1024205	0					
ANR	1024365	PrimaryExpression	21		1024205	1					
ANR	1024366	ExpressionStatement	"bitmask = logical_imm ( simm , 16 )"	430:2:12469:12500	1024205	2	True				
ANR	1024367	AssignmentExpression	"bitmask = logical_imm ( simm , 16 )"		1024205	0		=			
ANR	1024368	Identifier	bitmask		1024205	0					
ANR	1024369	CallExpression	"logical_imm ( simm , 16 )"		1024205	1					
ANR	1024370	Callee	logical_imm		1024205	0					
ANR	1024371	Identifier	logical_imm		1024205	0					
ANR	1024372	ArgumentList	simm		1024205	1					
ANR	1024373	Argument	simm		1024205	0					
ANR	1024374	Identifier	simm		1024205	0					
ANR	1024375	Argument	16		1024205	1					
ANR	1024376	PrimaryExpression	16		1024205	0					
ANR	1024377	IfStatement	if ( bitmask != 0 )		1024205	3					
ANR	1024378	Condition	bitmask != 0	431:6:12508:12519	1024205	0	True				
ANR	1024379	EqualityExpression	bitmask != 0		1024205	0		!=			
ANR	1024380	Identifier	bitmask		1024205	0					
ANR	1024381	PrimaryExpression	0		1024205	1					
ANR	1024382	ReturnStatement	"return push_inst ( compiler , ( ORRI ^ W_OP ) | RD ( dst ) | RN ( TMP_ZERO ) | bitmask ) ;"	432:3:12525:12601	1024205	1	True				
ANR	1024383	CallExpression	"push_inst ( compiler , ( ORRI ^ W_OP ) | RD ( dst ) | RN ( TMP_ZERO ) | bitmask )"		1024205	0					
ANR	1024384	Callee	push_inst		1024205	0					
ANR	1024385	Identifier	push_inst		1024205	0					
ANR	1024386	ArgumentList	compiler		1024205	1					
ANR	1024387	Argument	compiler		1024205	0					
ANR	1024388	Identifier	compiler		1024205	0					
ANR	1024389	Argument	( ORRI ^ W_OP ) | RD ( dst ) | RN ( TMP_ZERO ) | bitmask		1024205	1					
ANR	1024390	InclusiveOrExpression	( ORRI ^ W_OP ) | RD ( dst ) | RN ( TMP_ZERO ) | bitmask		1024205	0		|			
ANR	1024391	ExclusiveOrExpression	ORRI ^ W_OP		1024205	0		^			
ANR	1024392	Identifier	ORRI		1024205	0					
ANR	1024393	Identifier	W_OP		1024205	1					
ANR	1024394	InclusiveOrExpression	RD ( dst ) | RN ( TMP_ZERO ) | bitmask		1024205	1		|			
ANR	1024395	CallExpression	RD ( dst )		1024205	0					
ANR	1024396	Callee	RD		1024205	0					
ANR	1024397	Identifier	RD		1024205	0					
ANR	1024398	ArgumentList	dst		1024205	1					
ANR	1024399	Argument	dst		1024205	0					
ANR	1024400	Identifier	dst		1024205	0					
ANR	1024401	InclusiveOrExpression	RN ( TMP_ZERO ) | bitmask		1024205	1		|			
ANR	1024402	CallExpression	RN ( TMP_ZERO )		1024205	0					
ANR	1024403	Callee	RN		1024205	0					
ANR	1024404	Identifier	RN		1024205	0					
ANR	1024405	ArgumentList	TMP_ZERO		1024205	1					
ANR	1024406	Argument	TMP_ZERO		1024205	0					
ANR	1024407	Identifier	TMP_ZERO		1024205	0					
ANR	1024408	Identifier	bitmask		1024205	1					
ANR	1024409	ElseStatement	else		1024205	0					
ANR	1024410	CompoundStatement		21:6:705:705	1024205	0					
ANR	1024411	ExpressionStatement	"bitmask = logical_imm ( simm , 32 )"	435:2:12616:12647	1024205	0	True				
ANR	1024412	AssignmentExpression	"bitmask = logical_imm ( simm , 32 )"		1024205	0		=			
ANR	1024413	Identifier	bitmask		1024205	0					
ANR	1024414	CallExpression	"logical_imm ( simm , 32 )"		1024205	1					
ANR	1024415	Callee	logical_imm		1024205	0					
ANR	1024416	Identifier	logical_imm		1024205	0					
ANR	1024417	ArgumentList	simm		1024205	1					
ANR	1024418	Argument	simm		1024205	0					
ANR	1024419	Identifier	simm		1024205	0					
ANR	1024420	Argument	32		1024205	1					
ANR	1024421	PrimaryExpression	32		1024205	0					
ANR	1024422	IfStatement	if ( bitmask != 0 )		1024205	1					
ANR	1024423	Condition	bitmask != 0	436:6:12655:12666	1024205	0	True				
ANR	1024424	EqualityExpression	bitmask != 0		1024205	0		!=			
ANR	1024425	Identifier	bitmask		1024205	0					
ANR	1024426	PrimaryExpression	0		1024205	1					
ANR	1024427	ReturnStatement	"return push_inst ( compiler , ORRI | RD ( dst ) | RN ( TMP_ZERO ) | bitmask ) ;"	437:3:12672:12739	1024205	1	True				
ANR	1024428	CallExpression	"push_inst ( compiler , ORRI | RD ( dst ) | RN ( TMP_ZERO ) | bitmask )"		1024205	0					
ANR	1024429	Callee	push_inst		1024205	0					
ANR	1024430	Identifier	push_inst		1024205	0					
ANR	1024431	ArgumentList	compiler		1024205	1					
ANR	1024432	Argument	compiler		1024205	0					
ANR	1024433	Identifier	compiler		1024205	0					
ANR	1024434	Argument	ORRI | RD ( dst ) | RN ( TMP_ZERO ) | bitmask		1024205	1					
ANR	1024435	InclusiveOrExpression	ORRI | RD ( dst ) | RN ( TMP_ZERO ) | bitmask		1024205	0		|			
ANR	1024436	Identifier	ORRI		1024205	0					
ANR	1024437	InclusiveOrExpression	RD ( dst ) | RN ( TMP_ZERO ) | bitmask		1024205	1		|			
ANR	1024438	CallExpression	RD ( dst )		1024205	0					
ANR	1024439	Callee	RD		1024205	0					
ANR	1024440	Identifier	RD		1024205	0					
ANR	1024441	ArgumentList	dst		1024205	1					
ANR	1024442	Argument	dst		1024205	0					
ANR	1024443	Identifier	dst		1024205	0					
ANR	1024444	InclusiveOrExpression	RN ( TMP_ZERO ) | bitmask		1024205	1		|			
ANR	1024445	CallExpression	RN ( TMP_ZERO )		1024205	0					
ANR	1024446	Callee	RN		1024205	0					
ANR	1024447	Identifier	RN		1024205	0					
ANR	1024448	ArgumentList	TMP_ZERO		1024205	1					
ANR	1024449	Argument	TMP_ZERO		1024205	0					
ANR	1024450	Identifier	TMP_ZERO		1024205	0					
ANR	1024451	Identifier	bitmask		1024205	1					
ANR	1024452	IfStatement	if ( imm <= 0xffffffffl )		1024205	6					
ANR	1024453	Condition	imm <= 0xffffffffl	440:5:12750:12767	1024205	0	True				
ANR	1024454	RelationalExpression	imm <= 0xffffffffl		1024205	0		<=			
ANR	1024455	Identifier	imm		1024205	0					
ANR	1024456	PrimaryExpression	0xffffffffl		1024205	1					
ANR	1024457	CompoundStatement		27:25:863:863	1024205	1					
ANR	1024458	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) ) )"	441:2:12774:12842	1024205	0	True				
ANR	1024459	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) ) )"		1024205	0					
ANR	1024460	Callee	FAIL_IF		1024205	0					
ANR	1024461	Identifier	FAIL_IF		1024205	0					
ANR	1024462	ArgumentList	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) )"		1024205	1					
ANR	1024463	Argument	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) )"		1024205	0					
ANR	1024464	CallExpression	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 ) )"		1024205	0					
ANR	1024465	Callee	push_inst		1024205	0					
ANR	1024466	Identifier	push_inst		1024205	0					
ANR	1024467	ArgumentList	compiler		1024205	1					
ANR	1024468	Argument	compiler		1024205	0					
ANR	1024469	Identifier	compiler		1024205	0					
ANR	1024470	Argument	MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 )		1024205	1					
ANR	1024471	InclusiveOrExpression	MOVZ | RD ( dst ) | ( ( imm & 0xffff ) << 5 )		1024205	0		|			
ANR	1024472	Identifier	MOVZ		1024205	0					
ANR	1024473	InclusiveOrExpression	RD ( dst ) | ( ( imm & 0xffff ) << 5 )		1024205	1		|			
ANR	1024474	CallExpression	RD ( dst )		1024205	0					
ANR	1024475	Callee	RD		1024205	0					
ANR	1024476	Identifier	RD		1024205	0					
ANR	1024477	ArgumentList	dst		1024205	1					
ANR	1024478	Argument	dst		1024205	0					
ANR	1024479	Identifier	dst		1024205	0					
ANR	1024480	ShiftExpression	( imm & 0xffff ) << 5		1024205	1		<<			
ANR	1024481	BitAndExpression	imm & 0xffff		1024205	0		&			
ANR	1024482	Identifier	imm		1024205	0					
ANR	1024483	PrimaryExpression	0xffff		1024205	1					
ANR	1024484	PrimaryExpression	5		1024205	1					
ANR	1024485	ReturnStatement	"return push_inst ( compiler , MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 ) ) ;"	442:2:12846:12936	1024205	1	True				
ANR	1024486	CallExpression	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 ) )"		1024205	0					
ANR	1024487	Callee	push_inst		1024205	0					
ANR	1024488	Identifier	push_inst		1024205	0					
ANR	1024489	ArgumentList	compiler		1024205	1					
ANR	1024490	Argument	compiler		1024205	0					
ANR	1024491	Identifier	compiler		1024205	0					
ANR	1024492	Argument	MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1					
ANR	1024493	InclusiveOrExpression	MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	0		|			
ANR	1024494	Identifier	MOVK		1024205	0					
ANR	1024495	InclusiveOrExpression	RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1		|			
ANR	1024496	CallExpression	RD ( dst )		1024205	0					
ANR	1024497	Callee	RD		1024205	0					
ANR	1024498	Identifier	RD		1024205	0					
ANR	1024499	ArgumentList	dst		1024205	1					
ANR	1024500	Argument	dst		1024205	0					
ANR	1024501	Identifier	dst		1024205	0					
ANR	1024502	InclusiveOrExpression	( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1		|			
ANR	1024503	ShiftExpression	( imm & 0xffff0000l ) >> ( 16 - 5 )		1024205	0		>>			
ANR	1024504	BitAndExpression	imm & 0xffff0000l		1024205	0		&			
ANR	1024505	Identifier	imm		1024205	0					
ANR	1024506	PrimaryExpression	0xffff0000l		1024205	1					
ANR	1024507	AdditiveExpression	16 - 5		1024205	1		-			
ANR	1024508	PrimaryExpression	16		1024205	0					
ANR	1024509	PrimaryExpression	5		1024205	1					
ANR	1024510	ShiftExpression	1 << 21		1024205	1		<<			
ANR	1024511	PrimaryExpression	1		1024205	0					
ANR	1024512	PrimaryExpression	21		1024205	1					
ANR	1024513	IfStatement	if ( simm >= - 0x100000000l && simm < 0 )		1024205	7					
ANR	1024514	Condition	simm >= - 0x100000000l && simm < 0	445:5:12947:12979	1024205	0	True				
ANR	1024515	AndExpression	simm >= - 0x100000000l && simm < 0		1024205	0		&&			
ANR	1024516	RelationalExpression	simm >= - 0x100000000l		1024205	0		>=			
ANR	1024517	Identifier	simm		1024205	0					
ANR	1024518	UnaryOperationExpression	- 0x100000000l		1024205	1					
ANR	1024519	UnaryOperator	-		1024205	0					
ANR	1024520	PrimaryExpression	0x100000000l		1024205	1					
ANR	1024521	RelationalExpression	simm < 0		1024205	1		<			
ANR	1024522	Identifier	simm		1024205	0					
ANR	1024523	PrimaryExpression	0		1024205	1					
ANR	1024524	CompoundStatement		32:40:1075:1075	1024205	1					
ANR	1024525	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) ) )"	446:2:12986:13055	1024205	0	True				
ANR	1024526	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) ) )"		1024205	0					
ANR	1024527	Callee	FAIL_IF		1024205	0					
ANR	1024528	Identifier	FAIL_IF		1024205	0					
ANR	1024529	ArgumentList	"push_inst ( compiler , MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) )"		1024205	1					
ANR	1024530	Argument	"push_inst ( compiler , MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) )"		1024205	0					
ANR	1024531	CallExpression	"push_inst ( compiler , MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 ) )"		1024205	0					
ANR	1024532	Callee	push_inst		1024205	0					
ANR	1024533	Identifier	push_inst		1024205	0					
ANR	1024534	ArgumentList	compiler		1024205	1					
ANR	1024535	Argument	compiler		1024205	0					
ANR	1024536	Identifier	compiler		1024205	0					
ANR	1024537	Argument	MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	1					
ANR	1024538	InclusiveOrExpression	MOVN | RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	0		|			
ANR	1024539	Identifier	MOVN		1024205	0					
ANR	1024540	InclusiveOrExpression	RD ( dst ) | ( ( ~imm & 0xffff ) << 5 )		1024205	1		|			
ANR	1024541	CallExpression	RD ( dst )		1024205	0					
ANR	1024542	Callee	RD		1024205	0					
ANR	1024543	Identifier	RD		1024205	0					
ANR	1024544	ArgumentList	dst		1024205	1					
ANR	1024545	Argument	dst		1024205	0					
ANR	1024546	Identifier	dst		1024205	0					
ANR	1024547	ShiftExpression	( ~imm & 0xffff ) << 5		1024205	1		<<			
ANR	1024548	BitAndExpression	~imm & 0xffff		1024205	0		&			
ANR	1024549	Identifier	~imm		1024205	0					
ANR	1024550	PrimaryExpression	0xffff		1024205	1					
ANR	1024551	PrimaryExpression	5		1024205	1					
ANR	1024552	ReturnStatement	"return push_inst ( compiler , MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 ) ) ;"	447:2:13059:13149	1024205	1	True				
ANR	1024553	CallExpression	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 ) )"		1024205	0					
ANR	1024554	Callee	push_inst		1024205	0					
ANR	1024555	Identifier	push_inst		1024205	0					
ANR	1024556	ArgumentList	compiler		1024205	1					
ANR	1024557	Argument	compiler		1024205	0					
ANR	1024558	Identifier	compiler		1024205	0					
ANR	1024559	Argument	MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1					
ANR	1024560	InclusiveOrExpression	MOVK | RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	0		|			
ANR	1024561	Identifier	MOVK		1024205	0					
ANR	1024562	InclusiveOrExpression	RD ( dst ) | ( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1		|			
ANR	1024563	CallExpression	RD ( dst )		1024205	0					
ANR	1024564	Callee	RD		1024205	0					
ANR	1024565	Identifier	RD		1024205	0					
ANR	1024566	ArgumentList	dst		1024205	1					
ANR	1024567	Argument	dst		1024205	0					
ANR	1024568	Identifier	dst		1024205	0					
ANR	1024569	InclusiveOrExpression	( ( imm & 0xffff0000l ) >> ( 16 - 5 ) ) | ( 1 << 21 )		1024205	1		|			
ANR	1024570	ShiftExpression	( imm & 0xffff0000l ) >> ( 16 - 5 )		1024205	0		>>			
ANR	1024571	BitAndExpression	imm & 0xffff0000l		1024205	0		&			
ANR	1024572	Identifier	imm		1024205	0					
ANR	1024573	PrimaryExpression	0xffff0000l		1024205	1					
ANR	1024574	AdditiveExpression	16 - 5		1024205	1		-			
ANR	1024575	PrimaryExpression	16		1024205	0					
ANR	1024576	PrimaryExpression	5		1024205	1					
ANR	1024577	ShiftExpression	1 << 21		1024205	1		<<			
ANR	1024578	PrimaryExpression	1		1024205	0					
ANR	1024579	PrimaryExpression	21		1024205	1					
ANR	1024580	ExpressionStatement	zeros = 0	453:1:13268:13277	1024205	8	True				
ANR	1024581	AssignmentExpression	zeros = 0		1024205	0		=			
ANR	1024582	Identifier	zeros		1024205	0					
ANR	1024583	PrimaryExpression	0		1024205	1					
ANR	1024584	ExpressionStatement	ones = 0	454:1:13280:13288	1024205	9	True				
ANR	1024585	AssignmentExpression	ones = 0		1024205	0		=			
ANR	1024586	Identifier	ones		1024205	0					
ANR	1024587	PrimaryExpression	0		1024205	1					
ANR	1024588	ForStatement	for ( i = 4 ; i > 0 ; i -- )		1024205	10					
ANR	1024589	ForInit	i = 4 ;	455:6:13296:13301	1024205	0	True				
ANR	1024590	AssignmentExpression	i = 4		1024205	0		=			
ANR	1024591	Identifier	i		1024205	0					
ANR	1024592	PrimaryExpression	4		1024205	1					
ANR	1024593	Condition	i > 0	455:13:13303:13307	1024205	1	True				
ANR	1024594	RelationalExpression	i > 0		1024205	0		>			
ANR	1024595	Identifier	i		1024205	0					
ANR	1024596	PrimaryExpression	0		1024205	1					
ANR	1024597	PostIncDecOperationExpression	i --	455:20:13310:13312	1024205	2	True				
ANR	1024598	Identifier	i		1024205	0					
ANR	1024599	IncDec	--		1024205	1					
ANR	1024600	CompoundStatement		42:25:1408:1408	1024205	3					
ANR	1024601	IfStatement	if ( ( simm & 0xffff ) == 0 )		1024205	0					
ANR	1024602	Condition	( simm & 0xffff ) == 0	456:6:13323:13342	1024205	0	True				
ANR	1024603	EqualityExpression	( simm & 0xffff ) == 0		1024205	0		==			
ANR	1024604	BitAndExpression	simm & 0xffff		1024205	0		&			
ANR	1024605	Identifier	simm		1024205	0					
ANR	1024606	PrimaryExpression	0xffff		1024205	1					
ANR	1024607	PrimaryExpression	0		1024205	1					
ANR	1024608	ExpressionStatement	zeros ++	457:3:13348:13355	1024205	1	True				
ANR	1024609	PostIncDecOperationExpression	zeros ++		1024205	0					
ANR	1024610	Identifier	zeros		1024205	0					
ANR	1024611	IncDec	++		1024205	1					
ANR	1024612	IfStatement	if ( ( simm & 0xffff ) == 0xffff )		1024205	1					
ANR	1024613	Condition	( simm & 0xffff ) == 0xffff	458:6:13363:13387	1024205	0	True				
ANR	1024614	EqualityExpression	( simm & 0xffff ) == 0xffff		1024205	0		==			
ANR	1024615	BitAndExpression	simm & 0xffff		1024205	0		&			
ANR	1024616	Identifier	simm		1024205	0					
ANR	1024617	PrimaryExpression	0xffff		1024205	1					
ANR	1024618	PrimaryExpression	0xffff		1024205	1					
ANR	1024619	ExpressionStatement	ones ++	459:3:13393:13399	1024205	1	True				
ANR	1024620	PostIncDecOperationExpression	ones ++		1024205	0					
ANR	1024621	Identifier	ones		1024205	0					
ANR	1024622	IncDec	++		1024205	1					
ANR	1024623	ExpressionStatement	simm >>= 16	460:2:13403:13414	1024205	2	True				
ANR	1024624	AssignmentExpression	simm >>= 16		1024205	0		>>=			
ANR	1024625	Identifier	simm		1024205	0					
ANR	1024626	PrimaryExpression	16		1024205	1					
ANR	1024627	ExpressionStatement	simm = ( sljit_sw ) imm	463:1:13421:13441	1024205	11	True				
ANR	1024628	AssignmentExpression	simm = ( sljit_sw ) imm		1024205	0		=			
ANR	1024629	Identifier	simm		1024205	0					
ANR	1024630	CastExpression	( sljit_sw ) imm		1024205	1					
ANR	1024631	CastTarget	sljit_sw		1024205	0					
ANR	1024632	Identifier	imm		1024205	1					
ANR	1024633	ExpressionStatement	first = 1	464:1:13444:13453	1024205	12	True				
ANR	1024634	AssignmentExpression	first = 1		1024205	0		=			
ANR	1024635	Identifier	first		1024205	0					
ANR	1024636	PrimaryExpression	1		1024205	1					
ANR	1024637	IfStatement	if ( ones > zeros )		1024205	13					
ANR	1024638	Condition	ones > zeros	465:5:13460:13471	1024205	0	True				
ANR	1024639	RelationalExpression	ones > zeros		1024205	0		>			
ANR	1024640	Identifier	ones		1024205	0					
ANR	1024641	Identifier	zeros		1024205	1					
ANR	1024642	CompoundStatement		52:19:1567:1567	1024205	1					
ANR	1024643	ExpressionStatement	simm = ~simm	466:2:13478:13490	1024205	0	True				
ANR	1024644	AssignmentExpression	simm = ~simm		1024205	0		=			
ANR	1024645	Identifier	simm		1024205	0					
ANR	1024646	Identifier	~simm		1024205	1					
ANR	1024647	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		1024205	1					
ANR	1024648	ForInit	i = 0 ;	467:7:13499:13504	1024205	0	True				
ANR	1024649	AssignmentExpression	i = 0		1024205	0		=			
ANR	1024650	Identifier	i		1024205	0					
ANR	1024651	PrimaryExpression	0		1024205	1					
ANR	1024652	Condition	i < 4	467:14:13506:13510	1024205	1	True				
ANR	1024653	RelationalExpression	i < 4		1024205	0		<			
ANR	1024654	Identifier	i		1024205	0					
ANR	1024655	PrimaryExpression	4		1024205	1					
ANR	1024656	PostIncDecOperationExpression	i ++	467:21:13513:13515	1024205	2	True				
ANR	1024657	Identifier	i		1024205	0					
ANR	1024658	IncDec	++		1024205	1					
ANR	1024659	CompoundStatement		54:26:1611:1611	1024205	3					
ANR	1024660	IfStatement	if ( ! ( simm & 0xffff ) )		1024205	0					
ANR	1024661	Condition	! ( simm & 0xffff )	468:7:13527:13542	1024205	0	True				
ANR	1024662	UnaryOperationExpression	! ( simm & 0xffff )		1024205	0					
ANR	1024663	UnaryOperator	!		1024205	0					
ANR	1024664	BitAndExpression	simm & 0xffff		1024205	1		&			
ANR	1024665	Identifier	simm		1024205	0					
ANR	1024666	PrimaryExpression	0xffff		1024205	1					
ANR	1024667	CompoundStatement		55:25:1638:1638	1024205	1					
ANR	1024668	ExpressionStatement	simm >>= 16	469:4:13551:13562	1024205	0	True				
ANR	1024669	AssignmentExpression	simm >>= 16		1024205	0		>>=			
ANR	1024670	Identifier	simm		1024205	0					
ANR	1024671	PrimaryExpression	16		1024205	1					
ANR	1024672	ContinueStatement	continue ;	470:4:13568:13576	1024205	1	True				
ANR	1024673	IfStatement	if ( first )		1024205	1					
ANR	1024674	Condition	first	472:7:13590:13594	1024205	0	True				
ANR	1024675	Identifier	first		1024205	0					
ANR	1024676	CompoundStatement		59:14:1690:1690	1024205	1					
ANR	1024677	ExpressionStatement	first = 0	473:4:13603:13612	1024205	0	True				
ANR	1024678	AssignmentExpression	first = 0		1024205	0		=			
ANR	1024679	Identifier	first		1024205	0					
ANR	1024680	PrimaryExpression	0		1024205	1					
ANR	1024681	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVN | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"	474:4:13618:13699	1024205	1	True				
ANR	1024682	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVN | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"		1024205	0					
ANR	1024683	Callee	FAIL_IF		1024205	0					
ANR	1024684	Identifier	FAIL_IF		1024205	0					
ANR	1024685	ArgumentList	"push_inst ( compiler , MOVN | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	1					
ANR	1024686	Argument	"push_inst ( compiler , MOVN | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024687	CallExpression	"push_inst ( compiler , MOVN | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024688	Callee	push_inst		1024205	0					
ANR	1024689	Identifier	push_inst		1024205	0					
ANR	1024690	ArgumentList	compiler		1024205	1					
ANR	1024691	Argument	compiler		1024205	0					
ANR	1024692	Identifier	compiler		1024205	0					
ANR	1024693	Argument	MOVN | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1					
ANR	1024694	InclusiveOrExpression	MOVN | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	0		|			
ANR	1024695	Identifier	MOVN		1024205	0					
ANR	1024696	InclusiveOrExpression	RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024697	CallExpression	RD ( dst )		1024205	0					
ANR	1024698	Callee	RD		1024205	0					
ANR	1024699	Identifier	RD		1024205	0					
ANR	1024700	ArgumentList	dst		1024205	1					
ANR	1024701	Argument	dst		1024205	0					
ANR	1024702	Identifier	dst		1024205	0					
ANR	1024703	InclusiveOrExpression	( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024704	ShiftExpression	( simm & 0xffff ) << 5		1024205	0		<<			
ANR	1024705	BitAndExpression	simm & 0xffff		1024205	0		&			
ANR	1024706	Identifier	simm		1024205	0					
ANR	1024707	PrimaryExpression	0xffff		1024205	1					
ANR	1024708	PrimaryExpression	5		1024205	1					
ANR	1024709	ShiftExpression	i << 21		1024205	1		<<			
ANR	1024710	Identifier	i		1024205	0					
ANR	1024711	PrimaryExpression	21		1024205	1					
ANR	1024712	ElseStatement	else		1024205	0					
ANR	1024713	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"	477:4:13718:13800	1024205	0	True				
ANR	1024714	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"		1024205	0					
ANR	1024715	Callee	FAIL_IF		1024205	0					
ANR	1024716	Identifier	FAIL_IF		1024205	0					
ANR	1024717	ArgumentList	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	1					
ANR	1024718	Argument	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024719	CallExpression	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024720	Callee	push_inst		1024205	0					
ANR	1024721	Identifier	push_inst		1024205	0					
ANR	1024722	ArgumentList	compiler		1024205	1					
ANR	1024723	Argument	compiler		1024205	0					
ANR	1024724	Identifier	compiler		1024205	0					
ANR	1024725	Argument	MOVK | RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1					
ANR	1024726	InclusiveOrExpression	MOVK | RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	0		|			
ANR	1024727	Identifier	MOVK		1024205	0					
ANR	1024728	InclusiveOrExpression	RD ( dst ) | ( ( ~simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024729	CallExpression	RD ( dst )		1024205	0					
ANR	1024730	Callee	RD		1024205	0					
ANR	1024731	Identifier	RD		1024205	0					
ANR	1024732	ArgumentList	dst		1024205	1					
ANR	1024733	Argument	dst		1024205	0					
ANR	1024734	Identifier	dst		1024205	0					
ANR	1024735	InclusiveOrExpression	( ( ~simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024736	ShiftExpression	( ~simm & 0xffff ) << 5		1024205	0		<<			
ANR	1024737	BitAndExpression	~simm & 0xffff		1024205	0		&			
ANR	1024738	Identifier	~simm		1024205	0					
ANR	1024739	PrimaryExpression	0xffff		1024205	1					
ANR	1024740	PrimaryExpression	5		1024205	1					
ANR	1024741	ShiftExpression	i << 21		1024205	1		<<			
ANR	1024742	Identifier	i		1024205	0					
ANR	1024743	PrimaryExpression	21		1024205	1					
ANR	1024744	ExpressionStatement	simm >>= 16	478:3:13805:13816	1024205	2	True				
ANR	1024745	AssignmentExpression	simm >>= 16		1024205	0		>>=			
ANR	1024746	Identifier	simm		1024205	0					
ANR	1024747	PrimaryExpression	16		1024205	1					
ANR	1024748	ReturnStatement	return SLJIT_SUCCESS ;	480:2:13824:13844	1024205	2	True				
ANR	1024749	Identifier	SLJIT_SUCCESS		1024205	0					
ANR	1024750	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		1024205	14					
ANR	1024751	ForInit	i = 0 ;	483:6:13856:13861	1024205	0	True				
ANR	1024752	AssignmentExpression	i = 0		1024205	0		=			
ANR	1024753	Identifier	i		1024205	0					
ANR	1024754	PrimaryExpression	0		1024205	1					
ANR	1024755	Condition	i < 4	483:13:13863:13867	1024205	1	True				
ANR	1024756	RelationalExpression	i < 4		1024205	0		<			
ANR	1024757	Identifier	i		1024205	0					
ANR	1024758	PrimaryExpression	4		1024205	1					
ANR	1024759	PostIncDecOperationExpression	i ++	483:20:13870:13872	1024205	2	True				
ANR	1024760	Identifier	i		1024205	0					
ANR	1024761	IncDec	++		1024205	1					
ANR	1024762	CompoundStatement		70:25:1968:1968	1024205	3					
ANR	1024763	IfStatement	if ( ! ( simm & 0xffff ) )		1024205	0					
ANR	1024764	Condition	! ( simm & 0xffff )	484:6:13883:13898	1024205	0	True				
ANR	1024765	UnaryOperationExpression	! ( simm & 0xffff )		1024205	0					
ANR	1024766	UnaryOperator	!		1024205	0					
ANR	1024767	BitAndExpression	simm & 0xffff		1024205	1		&			
ANR	1024768	Identifier	simm		1024205	0					
ANR	1024769	PrimaryExpression	0xffff		1024205	1					
ANR	1024770	CompoundStatement		71:24:1994:1994	1024205	1					
ANR	1024771	ExpressionStatement	simm >>= 16	485:3:13906:13917	1024205	0	True				
ANR	1024772	AssignmentExpression	simm >>= 16		1024205	0		>>=			
ANR	1024773	Identifier	simm		1024205	0					
ANR	1024774	PrimaryExpression	16		1024205	1					
ANR	1024775	ContinueStatement	continue ;	486:3:13922:13930	1024205	1	True				
ANR	1024776	IfStatement	if ( first )		1024205	1					
ANR	1024777	Condition	first	488:6:13942:13946	1024205	0	True				
ANR	1024778	Identifier	first		1024205	0					
ANR	1024779	CompoundStatement		75:13:2042:2042	1024205	1					
ANR	1024780	ExpressionStatement	first = 0	489:3:13954:13963	1024205	0	True				
ANR	1024781	AssignmentExpression	first = 0		1024205	0		=			
ANR	1024782	Identifier	first		1024205	0					
ANR	1024783	PrimaryExpression	0		1024205	1					
ANR	1024784	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVZ | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"	490:3:13968:14049	1024205	1	True				
ANR	1024785	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVZ | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"		1024205	0					
ANR	1024786	Callee	FAIL_IF		1024205	0					
ANR	1024787	Identifier	FAIL_IF		1024205	0					
ANR	1024788	ArgumentList	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	1					
ANR	1024789	Argument	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024790	CallExpression	"push_inst ( compiler , MOVZ | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024791	Callee	push_inst		1024205	0					
ANR	1024792	Identifier	push_inst		1024205	0					
ANR	1024793	ArgumentList	compiler		1024205	1					
ANR	1024794	Argument	compiler		1024205	0					
ANR	1024795	Identifier	compiler		1024205	0					
ANR	1024796	Argument	MOVZ | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1					
ANR	1024797	InclusiveOrExpression	MOVZ | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	0		|			
ANR	1024798	Identifier	MOVZ		1024205	0					
ANR	1024799	InclusiveOrExpression	RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024800	CallExpression	RD ( dst )		1024205	0					
ANR	1024801	Callee	RD		1024205	0					
ANR	1024802	Identifier	RD		1024205	0					
ANR	1024803	ArgumentList	dst		1024205	1					
ANR	1024804	Argument	dst		1024205	0					
ANR	1024805	Identifier	dst		1024205	0					
ANR	1024806	InclusiveOrExpression	( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024807	ShiftExpression	( simm & 0xffff ) << 5		1024205	0		<<			
ANR	1024808	BitAndExpression	simm & 0xffff		1024205	0		&			
ANR	1024809	Identifier	simm		1024205	0					
ANR	1024810	PrimaryExpression	0xffff		1024205	1					
ANR	1024811	PrimaryExpression	5		1024205	1					
ANR	1024812	ShiftExpression	i << 21		1024205	1		<<			
ANR	1024813	Identifier	i		1024205	0					
ANR	1024814	PrimaryExpression	21		1024205	1					
ANR	1024815	ElseStatement	else		1024205	0					
ANR	1024816	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"	493:3:14065:14146	1024205	0	True				
ANR	1024817	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVK | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) ) )"		1024205	0					
ANR	1024818	Callee	FAIL_IF		1024205	0					
ANR	1024819	Identifier	FAIL_IF		1024205	0					
ANR	1024820	ArgumentList	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	1					
ANR	1024821	Argument	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024822	CallExpression	"push_inst ( compiler , MOVK | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 ) )"		1024205	0					
ANR	1024823	Callee	push_inst		1024205	0					
ANR	1024824	Identifier	push_inst		1024205	0					
ANR	1024825	ArgumentList	compiler		1024205	1					
ANR	1024826	Argument	compiler		1024205	0					
ANR	1024827	Identifier	compiler		1024205	0					
ANR	1024828	Argument	MOVK | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1					
ANR	1024829	InclusiveOrExpression	MOVK | RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	0		|			
ANR	1024830	Identifier	MOVK		1024205	0					
ANR	1024831	InclusiveOrExpression	RD ( dst ) | ( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024832	CallExpression	RD ( dst )		1024205	0					
ANR	1024833	Callee	RD		1024205	0					
ANR	1024834	Identifier	RD		1024205	0					
ANR	1024835	ArgumentList	dst		1024205	1					
ANR	1024836	Argument	dst		1024205	0					
ANR	1024837	Identifier	dst		1024205	0					
ANR	1024838	InclusiveOrExpression	( ( simm & 0xffff ) << 5 ) | ( i << 21 )		1024205	1		|			
ANR	1024839	ShiftExpression	( simm & 0xffff ) << 5		1024205	0		<<			
ANR	1024840	BitAndExpression	simm & 0xffff		1024205	0		&			
ANR	1024841	Identifier	simm		1024205	0					
ANR	1024842	PrimaryExpression	0xffff		1024205	1					
ANR	1024843	PrimaryExpression	5		1024205	1					
ANR	1024844	ShiftExpression	i << 21		1024205	1		<<			
ANR	1024845	Identifier	i		1024205	0					
ANR	1024846	PrimaryExpression	21		1024205	1					
ANR	1024847	ExpressionStatement	simm >>= 16	494:2:14150:14161	1024205	2	True				
ANR	1024848	AssignmentExpression	simm >>= 16		1024205	0		>>=			
ANR	1024849	Identifier	simm		1024205	0					
ANR	1024850	PrimaryExpression	16		1024205	1					
ANR	1024851	ReturnStatement	return SLJIT_SUCCESS ;	496:1:14167:14187	1024205	15	True				
ANR	1024852	Identifier	SLJIT_SUCCESS		1024205	0					
ANR	1024853	ReturnType	static sljit_si		1024205	1					
ANR	1024854	Identifier	load_immediate		1024205	2					
ANR	1024855	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw simm"		1024205	3					
ANR	1024856	Parameter	struct sljit_compiler * compiler	413:31:11844:11874	1024205	0	True				
ANR	1024857	ParameterType	struct sljit_compiler *		1024205	0					
ANR	1024858	Identifier	compiler		1024205	1					
ANR	1024859	Parameter	sljit_si dst	413:64:11877:11888	1024205	1	True				
ANR	1024860	ParameterType	sljit_si		1024205	0					
ANR	1024861	Identifier	dst		1024205	1					
ANR	1024862	Parameter	sljit_sw simm	413:78:11891:11903	1024205	2	True				
ANR	1024863	ParameterType	sljit_sw		1024205	0					
ANR	1024864	Identifier	simm		1024205	1					
ANR	1024865	CFGEntryNode	ENTRY		1024205		True				
ANR	1024866	CFGExitNode	EXIT		1024205		True				
ANR	1024867	Symbol	push_inst		1024205						
ANR	1024868	Symbol	W_OP		1024205						
ANR	1024869	Symbol	MOVZ		1024205						
ANR	1024870	Symbol	simm		1024205						
ANR	1024871	Symbol	dst		1024205						
ANR	1024872	Symbol	imm		1024205						
ANR	1024873	Symbol	i		1024205						
ANR	1024874	Symbol	SLJIT_SUCCESS		1024205						
ANR	1024875	Symbol	zeros		1024205						
ANR	1024876	Symbol	~imm		1024205						
ANR	1024877	Symbol	~simm		1024205						
ANR	1024878	Symbol	RD		1024205						
ANR	1024879	Symbol	MOVK		1024205						
ANR	1024880	Symbol	logical_imm		1024205						
ANR	1024881	Symbol	ones		1024205						
ANR	1024882	Symbol	TMP_ZERO		1024205						
ANR	1024883	Symbol	compiler		1024205						
ANR	1024884	Symbol	bitmask		1024205						
ANR	1024885	Symbol	RN		1024205						
ANR	1024886	Symbol	first		1024205						
ANR	1024887	Symbol	MOVN		1024205						
ANR	1024888	Symbol	ORRI		1024205						
ANR	1024889	Function	emit_op_imm	515:0:14561:23372							
ANR	1024890	FunctionDef	"emit_op_imm (struct sljit_compiler * compiler , sljit_si flags , sljit_si dst , sljit_sw arg1 , sljit_sw arg2)"		1024889	0					
ANR	1024891	CompoundStatement		516:0:14682:23372	1024889	0					
ANR	1024892	IdentifierDeclStatement	sljit_ins inv_bits = ( flags & INT_OP ) ? ( 1 << 31 ) : 0 ;	520:1:14805:14858	1024889	0	True				
ANR	1024893	IdentifierDecl	inv_bits = ( flags & INT_OP ) ? ( 1 << 31 ) : 0		1024889	0					
ANR	1024894	IdentifierDeclType	sljit_ins		1024889	0					
ANR	1024895	Identifier	inv_bits		1024889	1					
ANR	1024896	AssignmentExpression	inv_bits = ( flags & INT_OP ) ? ( 1 << 31 ) : 0		1024889	2		=			
ANR	1024897	Identifier	inv_bits		1024889	0					
ANR	1024898	ConditionalExpression	( flags & INT_OP ) ? ( 1 << 31 ) : 0		1024889	1					
ANR	1024899	Condition	flags & INT_OP		1024889	0					
ANR	1024900	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1024901	Identifier	flags		1024889	0					
ANR	1024902	Identifier	INT_OP		1024889	1					
ANR	1024903	ShiftExpression	1 << 31		1024889	1		<<			
ANR	1024904	PrimaryExpression	1		1024889	0					
ANR	1024905	PrimaryExpression	31		1024889	1					
ANR	1024906	PrimaryExpression	0		1024889	2					
ANR	1024907	IdentifierDeclStatement	sljit_ins inst_bits ;	521:1:14861:14880	1024889	1	True				
ANR	1024908	IdentifierDecl	inst_bits		1024889	0					
ANR	1024909	IdentifierDeclType	sljit_ins		1024889	0					
ANR	1024910	Identifier	inst_bits		1024889	1					
ANR	1024911	IdentifierDeclStatement	sljit_si op = ( flags & 0xffff ) ;	522:1:14883:14913	1024889	2	True				
ANR	1024912	IdentifierDecl	op = ( flags & 0xffff )		1024889	0					
ANR	1024913	IdentifierDeclType	sljit_si		1024889	0					
ANR	1024914	Identifier	op		1024889	1					
ANR	1024915	AssignmentExpression	op = ( flags & 0xffff )		1024889	2		=			
ANR	1024916	Identifier	op		1024889	0					
ANR	1024917	BitAndExpression	flags & 0xffff		1024889	1		&			
ANR	1024918	Identifier	flags		1024889	0					
ANR	1024919	PrimaryExpression	0xffff		1024889	1					
ANR	1024920	IdentifierDeclStatement	sljit_si reg ;	523:1:14916:14928	1024889	3	True				
ANR	1024921	IdentifierDecl	reg		1024889	0					
ANR	1024922	IdentifierDeclType	sljit_si		1024889	0					
ANR	1024923	Identifier	reg		1024889	1					
ANR	1024924	IdentifierDeclStatement	"sljit_sw imm , nimm ;"	524:1:14931:14949	1024889	4	True				
ANR	1024925	IdentifierDecl	imm		1024889	0					
ANR	1024926	IdentifierDeclType	sljit_sw		1024889	0					
ANR	1024927	Identifier	imm		1024889	1					
ANR	1024928	IdentifierDecl	nimm		1024889	1					
ANR	1024929	IdentifierDeclType	sljit_sw		1024889	0					
ANR	1024930	Identifier	nimm		1024889	1					
ANR	1024931	IfStatement	if ( SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) ) )		1024889	5					
ANR	1024932	Condition	SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) )	526:5:14957:15028	1024889	0	True				
ANR	1024933	CallExpression	SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) )		1024889	0					
ANR	1024934	Callee	SLJIT_UNLIKELY		1024889	0					
ANR	1024935	Identifier	SLJIT_UNLIKELY		1024889	0					
ANR	1024936	ArgumentList	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1024889	1					
ANR	1024937	Argument	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1024889	0					
ANR	1024938	EqualityExpression	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1024889	0		==			
ANR	1024939	BitAndExpression	flags & ( ARG1_IMM | ARG2_IMM )		1024889	0		&			
ANR	1024940	Identifier	flags		1024889	0					
ANR	1024941	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1024889	1		|			
ANR	1024942	Identifier	ARG1_IMM		1024889	0					
ANR	1024943	Identifier	ARG2_IMM		1024889	1					
ANR	1024944	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1024889	1		|			
ANR	1024945	Identifier	ARG1_IMM		1024889	0					
ANR	1024946	Identifier	ARG2_IMM		1024889	1					
ANR	1024947	CompoundStatement		11:79:348:348	1024889	1					
ANR	1024948	ExpressionStatement	flags &= ~ARG1_IMM	528:2:15064:15082	1024889	0	True				
ANR	1024949	AssignmentExpression	flags &= ~ARG1_IMM		1024889	0		&=			
ANR	1024950	Identifier	flags		1024889	0					
ANR	1024951	Identifier	~ARG1_IMM		1024889	1					
ANR	1024952	IfStatement	if ( arg1 == 0 && op != SLJIT_ADD && op != SLJIT_SUB )		1024889	1					
ANR	1024953	Condition	arg1 == 0 && op != SLJIT_ADD && op != SLJIT_SUB	529:6:15090:15136	1024889	0	True				
ANR	1024954	AndExpression	arg1 == 0 && op != SLJIT_ADD && op != SLJIT_SUB		1024889	0		&&			
ANR	1024955	EqualityExpression	arg1 == 0		1024889	0		==			
ANR	1024956	Identifier	arg1		1024889	0					
ANR	1024957	PrimaryExpression	0		1024889	1					
ANR	1024958	AndExpression	op != SLJIT_ADD && op != SLJIT_SUB		1024889	1		&&			
ANR	1024959	EqualityExpression	op != SLJIT_ADD		1024889	0		!=			
ANR	1024960	Identifier	op		1024889	0					
ANR	1024961	Identifier	SLJIT_ADD		1024889	1					
ANR	1024962	EqualityExpression	op != SLJIT_SUB		1024889	1		!=			
ANR	1024963	Identifier	op		1024889	0					
ANR	1024964	Identifier	SLJIT_SUB		1024889	1					
ANR	1024965	ExpressionStatement	arg1 = TMP_ZERO	530:3:15142:15157	1024889	1	True				
ANR	1024966	AssignmentExpression	arg1 = TMP_ZERO		1024889	0		=			
ANR	1024967	Identifier	arg1		1024889	0					
ANR	1024968	Identifier	TMP_ZERO		1024889	1					
ANR	1024969	ElseStatement	else		1024889	0					
ANR	1024970	CompoundStatement		16:7:483:483	1024889	0					
ANR	1024971	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"	532:3:15171:15220	1024889	0	True				
ANR	1024972	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"		1024889	0					
ANR	1024973	Callee	FAIL_IF		1024889	0					
ANR	1024974	Identifier	FAIL_IF		1024889	0					
ANR	1024975	ArgumentList	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1024889	1					
ANR	1024976	Argument	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1024889	0					
ANR	1024977	CallExpression	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1024889	0					
ANR	1024978	Callee	load_immediate		1024889	0					
ANR	1024979	Identifier	load_immediate		1024889	0					
ANR	1024980	ArgumentList	compiler		1024889	1					
ANR	1024981	Argument	compiler		1024889	0					
ANR	1024982	Identifier	compiler		1024889	0					
ANR	1024983	Argument	TMP_REG1		1024889	1					
ANR	1024984	Identifier	TMP_REG1		1024889	0					
ANR	1024985	Argument	arg1		1024889	2					
ANR	1024986	Identifier	arg1		1024889	0					
ANR	1024987	ExpressionStatement	arg1 = TMP_REG1	533:3:15225:15240	1024889	1	True				
ANR	1024988	AssignmentExpression	arg1 = TMP_REG1		1024889	0		=			
ANR	1024989	Identifier	arg1		1024889	0					
ANR	1024990	Identifier	TMP_REG1		1024889	1					
ANR	1024991	IfStatement	if ( flags & ( ARG1_IMM | ARG2_IMM ) )		1024889	6					
ANR	1024992	Condition	flags & ( ARG1_IMM | ARG2_IMM )	537:5:15255:15283	1024889	0	True				
ANR	1024993	BitAndExpression	flags & ( ARG1_IMM | ARG2_IMM )		1024889	0		&			
ANR	1024994	Identifier	flags		1024889	0					
ANR	1024995	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1024889	1		|			
ANR	1024996	Identifier	ARG1_IMM		1024889	0					
ANR	1024997	Identifier	ARG2_IMM		1024889	1					
ANR	1024998	CompoundStatement		22:36:603:603	1024889	1					
ANR	1024999	ExpressionStatement	reg = ( flags & ARG2_IMM ) ? arg1 : arg2	538:2:15290:15328	1024889	0	True				
ANR	1025000	AssignmentExpression	reg = ( flags & ARG2_IMM ) ? arg1 : arg2		1024889	0		=			
ANR	1025001	Identifier	reg		1024889	0					
ANR	1025002	ConditionalExpression	( flags & ARG2_IMM ) ? arg1 : arg2		1024889	1					
ANR	1025003	Condition	flags & ARG2_IMM		1024889	0					
ANR	1025004	BitAndExpression	flags & ARG2_IMM		1024889	0		&			
ANR	1025005	Identifier	flags		1024889	0					
ANR	1025006	Identifier	ARG2_IMM		1024889	1					
ANR	1025007	Identifier	arg1		1024889	1					
ANR	1025008	Identifier	arg2		1024889	2					
ANR	1025009	ExpressionStatement	imm = ( flags & ARG2_IMM ) ? arg2 : arg1	539:2:15332:15370	1024889	1	True				
ANR	1025010	AssignmentExpression	imm = ( flags & ARG2_IMM ) ? arg2 : arg1		1024889	0		=			
ANR	1025011	Identifier	imm		1024889	0					
ANR	1025012	ConditionalExpression	( flags & ARG2_IMM ) ? arg2 : arg1		1024889	1					
ANR	1025013	Condition	flags & ARG2_IMM		1024889	0					
ANR	1025014	BitAndExpression	flags & ARG2_IMM		1024889	0		&			
ANR	1025015	Identifier	flags		1024889	0					
ANR	1025016	Identifier	ARG2_IMM		1024889	1					
ANR	1025017	Identifier	arg2		1024889	1					
ANR	1025018	Identifier	arg1		1024889	2					
ANR	1025019	SwitchStatement	switch ( op )		1024889	2					
ANR	1025020	Condition	op	541:10:15383:15384	1024889	0	True				
ANR	1025021	Identifier	op		1024889	0					
ANR	1025022	CompoundStatement		26:14:704:704	1024889	1					
ANR	1025023	Label	case SLJIT_MUL :	542:2:15391:15405	1024889	0	True				
ANR	1025024	Identifier	SLJIT_MUL		1024889	0					
ANR	1025025	Label	case SLJIT_NEG :	543:2:15409:15423	1024889	1	True				
ANR	1025026	Identifier	SLJIT_NEG		1024889	0					
ANR	1025027	Label	case SLJIT_CLZ :	544:2:15427:15441	1024889	2	True				
ANR	1025028	Identifier	SLJIT_CLZ		1024889	0					
ANR	1025029	Label	case SLJIT_ADDC :	545:2:15445:15460	1024889	3	True				
ANR	1025030	Identifier	SLJIT_ADDC		1024889	0					
ANR	1025031	Label	case SLJIT_SUBC :	546:2:15464:15479	1024889	4	True				
ANR	1025032	Identifier	SLJIT_SUBC		1024889	0					
ANR	1025033	BreakStatement	break ;	549:3:15584:15589	1024889	5	True				
ANR	1025034	Label	case SLJIT_MOV :	550:2:15593:15607	1024889	6	True				
ANR	1025035	Identifier	SLJIT_MOV		1024889	0					
ANR	1025036	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1 )	551:3:15612:15688	1024889	7	True				
ANR	1025037	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1025038	Callee	SLJIT_ASSERT		1024889	0					
ANR	1025039	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1025040	ArgumentList	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1024889	1					
ANR	1025041	Argument	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1024889	0					
ANR	1025042	AndExpression	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1025043	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1025044	UnaryOperator	!		1024889	0					
ANR	1025045	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1025046	Identifier	flags		1024889	0					
ANR	1025047	Identifier	SET_FLAGS		1024889	1					
ANR	1025048	AndExpression	( flags & ARG2_IMM ) && arg1 == TMP_REG1		1024889	1		&&			
ANR	1025049	BitAndExpression	flags & ARG2_IMM		1024889	0		&			
ANR	1025050	Identifier	flags		1024889	0					
ANR	1025051	Identifier	ARG2_IMM		1024889	1					
ANR	1025052	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1025053	Identifier	arg1		1024889	0					
ANR	1025054	Identifier	TMP_REG1		1024889	1					
ANR	1025055	ReturnStatement	"return load_immediate ( compiler , dst , imm ) ;"	552:3:15693:15734	1024889	8	True				
ANR	1025056	CallExpression	"load_immediate ( compiler , dst , imm )"		1024889	0					
ANR	1025057	Callee	load_immediate		1024889	0					
ANR	1025058	Identifier	load_immediate		1024889	0					
ANR	1025059	ArgumentList	compiler		1024889	1					
ANR	1025060	Argument	compiler		1024889	0					
ANR	1025061	Identifier	compiler		1024889	0					
ANR	1025062	Argument	dst		1024889	1					
ANR	1025063	Identifier	dst		1024889	0					
ANR	1025064	Argument	imm		1024889	2					
ANR	1025065	Identifier	imm		1024889	0					
ANR	1025066	Label	case SLJIT_NOT :	553:2:15738:15752	1024889	9	True				
ANR	1025067	Identifier	SLJIT_NOT		1024889	0					
ANR	1025068	ExpressionStatement	SLJIT_ASSERT ( flags & ARG2_IMM )	554:3:15757:15787	1024889	10	True				
ANR	1025069	CallExpression	SLJIT_ASSERT ( flags & ARG2_IMM )		1024889	0					
ANR	1025070	Callee	SLJIT_ASSERT		1024889	0					
ANR	1025071	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1025072	ArgumentList	flags & ARG2_IMM		1024889	1					
ANR	1025073	Argument	flags & ARG2_IMM		1024889	0					
ANR	1025074	BitAndExpression	flags & ARG2_IMM		1024889	0		&			
ANR	1025075	Identifier	flags		1024889	0					
ANR	1025076	Identifier	ARG2_IMM		1024889	1					
ANR	1025077	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , dst , ( flags & INT_OP ) ? ( ~imm & 0xffffffff ) : ~imm ) )"	555:3:15792:15877	1024889	11	True				
ANR	1025078	CallExpression	"FAIL_IF ( load_immediate ( compiler , dst , ( flags & INT_OP ) ? ( ~imm & 0xffffffff ) : ~imm ) )"		1024889	0					
ANR	1025079	Callee	FAIL_IF		1024889	0					
ANR	1025080	Identifier	FAIL_IF		1024889	0					
ANR	1025081	ArgumentList	"load_immediate ( compiler , dst , ( flags & INT_OP ) ? ( ~imm & 0xffffffff ) : ~imm )"		1024889	1					
ANR	1025082	Argument	"load_immediate ( compiler , dst , ( flags & INT_OP ) ? ( ~imm & 0xffffffff ) : ~imm )"		1024889	0					
ANR	1025083	CallExpression	"load_immediate ( compiler , dst , ( flags & INT_OP ) ? ( ~imm & 0xffffffff ) : ~imm )"		1024889	0					
ANR	1025084	Callee	load_immediate		1024889	0					
ANR	1025085	Identifier	load_immediate		1024889	0					
ANR	1025086	ArgumentList	compiler		1024889	1					
ANR	1025087	Argument	compiler		1024889	0					
ANR	1025088	Identifier	compiler		1024889	0					
ANR	1025089	Argument	dst		1024889	1					
ANR	1025090	Identifier	dst		1024889	0					
ANR	1025091	Argument	( flags & INT_OP ) ? ( ~imm & 0xffffffff ) : ~imm		1024889	2					
ANR	1025092	ConditionalExpression	( flags & INT_OP ) ? ( ~imm & 0xffffffff ) : ~imm		1024889	0					
ANR	1025093	Condition	flags & INT_OP		1024889	0					
ANR	1025094	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1025095	Identifier	flags		1024889	0					
ANR	1025096	Identifier	INT_OP		1024889	1					
ANR	1025097	BitAndExpression	~imm & 0xffffffff		1024889	1		&			
ANR	1025098	Identifier	~imm		1024889	0					
ANR	1025099	PrimaryExpression	0xffffffff		1024889	1					
ANR	1025100	Identifier	~imm		1024889	2					
ANR	1025101	GotoStatement	goto set_flags ;	556:3:15882:15896	1024889	12	True				
ANR	1025102	Identifier	set_flags		1024889	0					
ANR	1025103	Label	case SLJIT_SUB :	557:2:15900:15914	1024889	13	True				
ANR	1025104	Identifier	SLJIT_SUB		1024889	0					
ANR	1025105	IfStatement	if ( flags & ARG1_IMM )		1024889	14					
ANR	1025106	Condition	flags & ARG1_IMM	558:7:15923:15938	1024889	0	True				
ANR	1025107	BitAndExpression	flags & ARG1_IMM		1024889	0		&			
ANR	1025108	Identifier	flags		1024889	0					
ANR	1025109	Identifier	ARG1_IMM		1024889	1					
ANR	1025110	BreakStatement	break ;	559:4:15945:15950	1024889	1	True				
ANR	1025111	ExpressionStatement	imm = - imm	560:3:15955:15965	1024889	15	True				
ANR	1025112	AssignmentExpression	imm = - imm		1024889	0		=			
ANR	1025113	Identifier	imm		1024889	0					
ANR	1025114	UnaryOperationExpression	- imm		1024889	1					
ANR	1025115	UnaryOperator	-		1024889	0					
ANR	1025116	Identifier	imm		1024889	1					
ANR	1025117	Label	case SLJIT_ADD :	562:2:15992:16006	1024889	16	True				
ANR	1025118	Identifier	SLJIT_ADD		1024889	0					
ANR	1025119	IfStatement	if ( imm == 0 )		1024889	17					
ANR	1025120	Condition	imm == 0	563:7:16015:16022	1024889	0	True				
ANR	1025121	EqualityExpression	imm == 0		1024889	0		==			
ANR	1025122	Identifier	imm		1024889	0					
ANR	1025123	PrimaryExpression	0		1024889	1					
ANR	1025124	CompoundStatement		48:17:1342:1342	1024889	1					
ANR	1025125	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	564:4:16031:16051	1024889	0	True				
ANR	1025126	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1025127	Callee	CHECK_FLAGS		1024889	0					
ANR	1025128	Identifier	CHECK_FLAGS		1024889	0					
ANR	1025129	ArgumentList	1 << 29		1024889	1					
ANR	1025130	Argument	1 << 29		1024889	0					
ANR	1025131	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1025132	PrimaryExpression	1		1024889	0					
ANR	1025133	PrimaryExpression	29		1024889	1					
ANR	1025134	ReturnStatement	"return push_inst ( compiler , ( ( op == SLJIT_ADD ? ADDI : SUBI ) ^ inv_bits ) | RD ( dst ) | RN ( reg ) ) ;"	565:4:16057:16149	1024889	1	True				
ANR	1025135	CallExpression	"push_inst ( compiler , ( ( op == SLJIT_ADD ? ADDI : SUBI ) ^ inv_bits ) | RD ( dst ) | RN ( reg ) )"		1024889	0					
ANR	1025136	Callee	push_inst		1024889	0					
ANR	1025137	Identifier	push_inst		1024889	0					
ANR	1025138	ArgumentList	compiler		1024889	1					
ANR	1025139	Argument	compiler		1024889	0					
ANR	1025140	Identifier	compiler		1024889	0					
ANR	1025141	Argument	( ( op == SLJIT_ADD ? ADDI : SUBI ) ^ inv_bits ) | RD ( dst ) | RN ( reg )		1024889	1					
ANR	1025142	InclusiveOrExpression	( ( op == SLJIT_ADD ? ADDI : SUBI ) ^ inv_bits ) | RD ( dst ) | RN ( reg )		1024889	0		|			
ANR	1025143	ExclusiveOrExpression	( op == SLJIT_ADD ? ADDI : SUBI ) ^ inv_bits		1024889	0		^			
ANR	1025144	ConditionalExpression	op == SLJIT_ADD ? ADDI : SUBI		1024889	0					
ANR	1025145	Condition	op == SLJIT_ADD		1024889	0					
ANR	1025146	EqualityExpression	op == SLJIT_ADD		1024889	0		==			
ANR	1025147	Identifier	op		1024889	0					
ANR	1025148	Identifier	SLJIT_ADD		1024889	1					
ANR	1025149	Identifier	ADDI		1024889	1					
ANR	1025150	Identifier	SUBI		1024889	2					
ANR	1025151	Identifier	inv_bits		1024889	1					
ANR	1025152	InclusiveOrExpression	RD ( dst ) | RN ( reg )		1024889	1		|			
ANR	1025153	CallExpression	RD ( dst )		1024889	0					
ANR	1025154	Callee	RD		1024889	0					
ANR	1025155	Identifier	RD		1024889	0					
ANR	1025156	ArgumentList	dst		1024889	1					
ANR	1025157	Argument	dst		1024889	0					
ANR	1025158	Identifier	dst		1024889	0					
ANR	1025159	CallExpression	RN ( reg )		1024889	1					
ANR	1025160	Callee	RN		1024889	0					
ANR	1025161	Identifier	RN		1024889	0					
ANR	1025162	ArgumentList	reg		1024889	1					
ANR	1025163	Argument	reg		1024889	0					
ANR	1025164	Identifier	reg		1024889	0					
ANR	1025165	IfStatement	if ( imm > 0 && imm <= 0xfff )		1024889	18					
ANR	1025166	Condition	imm > 0 && imm <= 0xfff	567:7:16163:16185	1024889	0	True				
ANR	1025167	AndExpression	imm > 0 && imm <= 0xfff		1024889	0		&&			
ANR	1025168	RelationalExpression	imm > 0		1024889	0		>			
ANR	1025169	Identifier	imm		1024889	0					
ANR	1025170	PrimaryExpression	0		1024889	1					
ANR	1025171	RelationalExpression	imm <= 0xfff		1024889	1		<=			
ANR	1025172	Identifier	imm		1024889	0					
ANR	1025173	PrimaryExpression	0xfff		1024889	1					
ANR	1025174	CompoundStatement		52:32:1505:1505	1024889	1					
ANR	1025175	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	568:4:16194:16214	1024889	0	True				
ANR	1025176	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1025177	Callee	CHECK_FLAGS		1024889	0					
ANR	1025178	Identifier	CHECK_FLAGS		1024889	0					
ANR	1025179	ArgumentList	1 << 29		1024889	1					
ANR	1025180	Argument	1 << 29		1024889	0					
ANR	1025181	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1025182	PrimaryExpression	1		1024889	0					
ANR	1025183	PrimaryExpression	29		1024889	1					
ANR	1025184	ReturnStatement	"return push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( imm << 10 ) ) ;"	569:4:16220:16299	1024889	1	True				
ANR	1025185	CallExpression	"push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( imm << 10 ) )"		1024889	0					
ANR	1025186	Callee	push_inst		1024889	0					
ANR	1025187	Identifier	push_inst		1024889	0					
ANR	1025188	ArgumentList	compiler		1024889	1					
ANR	1025189	Argument	compiler		1024889	0					
ANR	1025190	Identifier	compiler		1024889	0					
ANR	1025191	Argument	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( imm << 10 )		1024889	1					
ANR	1025192	InclusiveOrExpression	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( imm << 10 )		1024889	0		|			
ANR	1025193	ExclusiveOrExpression	ADDI ^ inv_bits		1024889	0		^			
ANR	1025194	Identifier	ADDI		1024889	0					
ANR	1025195	Identifier	inv_bits		1024889	1					
ANR	1025196	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( imm << 10 )		1024889	1		|			
ANR	1025197	CallExpression	RD ( dst )		1024889	0					
ANR	1025198	Callee	RD		1024889	0					
ANR	1025199	Identifier	RD		1024889	0					
ANR	1025200	ArgumentList	dst		1024889	1					
ANR	1025201	Argument	dst		1024889	0					
ANR	1025202	Identifier	dst		1024889	0					
ANR	1025203	InclusiveOrExpression	RN ( reg ) | ( imm << 10 )		1024889	1		|			
ANR	1025204	CallExpression	RN ( reg )		1024889	0					
ANR	1025205	Callee	RN		1024889	0					
ANR	1025206	Identifier	RN		1024889	0					
ANR	1025207	ArgumentList	reg		1024889	1					
ANR	1025208	Argument	reg		1024889	0					
ANR	1025209	Identifier	reg		1024889	0					
ANR	1025210	ShiftExpression	imm << 10		1024889	1		<<			
ANR	1025211	Identifier	imm		1024889	0					
ANR	1025212	PrimaryExpression	10		1024889	1					
ANR	1025213	ExpressionStatement	nimm = - imm	571:3:16309:16320	1024889	19	True				
ANR	1025214	AssignmentExpression	nimm = - imm		1024889	0		=			
ANR	1025215	Identifier	nimm		1024889	0					
ANR	1025216	UnaryOperationExpression	- imm		1024889	1					
ANR	1025217	UnaryOperator	-		1024889	0					
ANR	1025218	Identifier	imm		1024889	1					
ANR	1025219	IfStatement	if ( nimm > 0 && nimm <= 0xfff )		1024889	20					
ANR	1025220	Condition	nimm > 0 && nimm <= 0xfff	572:7:16329:16353	1024889	0	True				
ANR	1025221	AndExpression	nimm > 0 && nimm <= 0xfff		1024889	0		&&			
ANR	1025222	RelationalExpression	nimm > 0		1024889	0		>			
ANR	1025223	Identifier	nimm		1024889	0					
ANR	1025224	PrimaryExpression	0		1024889	1					
ANR	1025225	RelationalExpression	nimm <= 0xfff		1024889	1		<=			
ANR	1025226	Identifier	nimm		1024889	0					
ANR	1025227	PrimaryExpression	0xfff		1024889	1					
ANR	1025228	CompoundStatement		57:34:1673:1673	1024889	1					
ANR	1025229	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	573:4:16362:16382	1024889	0	True				
ANR	1025230	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1025231	Callee	CHECK_FLAGS		1024889	0					
ANR	1025232	Identifier	CHECK_FLAGS		1024889	0					
ANR	1025233	ArgumentList	1 << 29		1024889	1					
ANR	1025234	Argument	1 << 29		1024889	0					
ANR	1025235	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1025236	PrimaryExpression	1		1024889	0					
ANR	1025237	PrimaryExpression	29		1024889	1					
ANR	1025238	ReturnStatement	"return push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( nimm << 10 ) ) ;"	574:4:16388:16468	1024889	1	True				
ANR	1025239	CallExpression	"push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( nimm << 10 ) )"		1024889	0					
ANR	1025240	Callee	push_inst		1024889	0					
ANR	1025241	Identifier	push_inst		1024889	0					
ANR	1025242	ArgumentList	compiler		1024889	1					
ANR	1025243	Argument	compiler		1024889	0					
ANR	1025244	Identifier	compiler		1024889	0					
ANR	1025245	Argument	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( nimm << 10 )		1024889	1					
ANR	1025246	InclusiveOrExpression	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( nimm << 10 )		1024889	0		|			
ANR	1025247	ExclusiveOrExpression	SUBI ^ inv_bits		1024889	0		^			
ANR	1025248	Identifier	SUBI		1024889	0					
ANR	1025249	Identifier	inv_bits		1024889	1					
ANR	1025250	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( nimm << 10 )		1024889	1		|			
ANR	1025251	CallExpression	RD ( dst )		1024889	0					
ANR	1025252	Callee	RD		1024889	0					
ANR	1025253	Identifier	RD		1024889	0					
ANR	1025254	ArgumentList	dst		1024889	1					
ANR	1025255	Argument	dst		1024889	0					
ANR	1025256	Identifier	dst		1024889	0					
ANR	1025257	InclusiveOrExpression	RN ( reg ) | ( nimm << 10 )		1024889	1		|			
ANR	1025258	CallExpression	RN ( reg )		1024889	0					
ANR	1025259	Callee	RN		1024889	0					
ANR	1025260	Identifier	RN		1024889	0					
ANR	1025261	ArgumentList	reg		1024889	1					
ANR	1025262	Argument	reg		1024889	0					
ANR	1025263	Identifier	reg		1024889	0					
ANR	1025264	ShiftExpression	nimm << 10		1024889	1		<<			
ANR	1025265	Identifier	nimm		1024889	0					
ANR	1025266	PrimaryExpression	10		1024889	1					
ANR	1025267	IfStatement	if ( imm > 0 && imm <= 0xffffff && ! ( imm & 0xfff ) )		1024889	21					
ANR	1025268	Condition	imm > 0 && imm <= 0xffffff && ! ( imm & 0xfff )	576:7:16482:16525	1024889	0	True				
ANR	1025269	AndExpression	imm > 0 && imm <= 0xffffff && ! ( imm & 0xfff )		1024889	0		&&			
ANR	1025270	RelationalExpression	imm > 0		1024889	0		>			
ANR	1025271	Identifier	imm		1024889	0					
ANR	1025272	PrimaryExpression	0		1024889	1					
ANR	1025273	AndExpression	imm <= 0xffffff && ! ( imm & 0xfff )		1024889	1		&&			
ANR	1025274	RelationalExpression	imm <= 0xffffff		1024889	0		<=			
ANR	1025275	Identifier	imm		1024889	0					
ANR	1025276	PrimaryExpression	0xffffff		1024889	1					
ANR	1025277	UnaryOperationExpression	! ( imm & 0xfff )		1024889	1					
ANR	1025278	UnaryOperator	!		1024889	0					
ANR	1025279	BitAndExpression	imm & 0xfff		1024889	1		&			
ANR	1025280	Identifier	imm		1024889	0					
ANR	1025281	PrimaryExpression	0xfff		1024889	1					
ANR	1025282	CompoundStatement		61:53:1845:1845	1024889	1					
ANR	1025283	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	577:4:16534:16554	1024889	0	True				
ANR	1025284	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1025285	Callee	CHECK_FLAGS		1024889	0					
ANR	1025286	Identifier	CHECK_FLAGS		1024889	0					
ANR	1025287	ArgumentList	1 << 29		1024889	1					
ANR	1025288	Argument	1 << 29		1024889	0					
ANR	1025289	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1025290	PrimaryExpression	1		1024889	0					
ANR	1025291	PrimaryExpression	29		1024889	1					
ANR	1025292	ReturnStatement	"return push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 ) ) ;"	578:4:16560:16659	1024889	1	True				
ANR	1025293	CallExpression	"push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	0					
ANR	1025294	Callee	push_inst		1024889	0					
ANR	1025295	Identifier	push_inst		1024889	0					
ANR	1025296	ArgumentList	compiler		1024889	1					
ANR	1025297	Argument	compiler		1024889	0					
ANR	1025298	Identifier	compiler		1024889	0					
ANR	1025299	Argument	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1					
ANR	1025300	InclusiveOrExpression	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	0		|			
ANR	1025301	ExclusiveOrExpression	ADDI ^ inv_bits		1024889	0		^			
ANR	1025302	Identifier	ADDI		1024889	0					
ANR	1025303	Identifier	inv_bits		1024889	1					
ANR	1025304	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025305	CallExpression	RD ( dst )		1024889	0					
ANR	1025306	Callee	RD		1024889	0					
ANR	1025307	Identifier	RD		1024889	0					
ANR	1025308	ArgumentList	dst		1024889	1					
ANR	1025309	Argument	dst		1024889	0					
ANR	1025310	Identifier	dst		1024889	0					
ANR	1025311	InclusiveOrExpression	RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025312	CallExpression	RN ( reg )		1024889	0					
ANR	1025313	Callee	RN		1024889	0					
ANR	1025314	Identifier	RN		1024889	0					
ANR	1025315	ArgumentList	reg		1024889	1					
ANR	1025316	Argument	reg		1024889	0					
ANR	1025317	Identifier	reg		1024889	0					
ANR	1025318	InclusiveOrExpression	( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025319	ShiftExpression	( imm >> 12 ) << 10		1024889	0		<<			
ANR	1025320	ShiftExpression	imm >> 12		1024889	0		>>			
ANR	1025321	Identifier	imm		1024889	0					
ANR	1025322	PrimaryExpression	12		1024889	1					
ANR	1025323	PrimaryExpression	10		1024889	1					
ANR	1025324	ShiftExpression	1 << 22		1024889	1		<<			
ANR	1025325	PrimaryExpression	1		1024889	0					
ANR	1025326	PrimaryExpression	22		1024889	1					
ANR	1025327	IfStatement	if ( nimm > 0 && nimm <= 0xffffff && ! ( nimm & 0xfff ) )		1024889	22					
ANR	1025328	Condition	nimm > 0 && nimm <= 0xffffff && ! ( nimm & 0xfff )	580:7:16673:16719	1024889	0	True				
ANR	1025329	AndExpression	nimm > 0 && nimm <= 0xffffff && ! ( nimm & 0xfff )		1024889	0		&&			
ANR	1025330	RelationalExpression	nimm > 0		1024889	0		>			
ANR	1025331	Identifier	nimm		1024889	0					
ANR	1025332	PrimaryExpression	0		1024889	1					
ANR	1025333	AndExpression	nimm <= 0xffffff && ! ( nimm & 0xfff )		1024889	1		&&			
ANR	1025334	RelationalExpression	nimm <= 0xffffff		1024889	0		<=			
ANR	1025335	Identifier	nimm		1024889	0					
ANR	1025336	PrimaryExpression	0xffffff		1024889	1					
ANR	1025337	UnaryOperationExpression	! ( nimm & 0xfff )		1024889	1					
ANR	1025338	UnaryOperator	!		1024889	0					
ANR	1025339	BitAndExpression	nimm & 0xfff		1024889	1		&			
ANR	1025340	Identifier	nimm		1024889	0					
ANR	1025341	PrimaryExpression	0xfff		1024889	1					
ANR	1025342	CompoundStatement		65:56:2039:2039	1024889	1					
ANR	1025343	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	581:4:16728:16748	1024889	0	True				
ANR	1025344	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1025345	Callee	CHECK_FLAGS		1024889	0					
ANR	1025346	Identifier	CHECK_FLAGS		1024889	0					
ANR	1025347	ArgumentList	1 << 29		1024889	1					
ANR	1025348	Argument	1 << 29		1024889	0					
ANR	1025349	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1025350	PrimaryExpression	1		1024889	0					
ANR	1025351	PrimaryExpression	29		1024889	1					
ANR	1025352	ReturnStatement	"return push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 ) ) ;"	582:4:16754:16854	1024889	1	True				
ANR	1025353	CallExpression	"push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	0					
ANR	1025354	Callee	push_inst		1024889	0					
ANR	1025355	Identifier	push_inst		1024889	0					
ANR	1025356	ArgumentList	compiler		1024889	1					
ANR	1025357	Argument	compiler		1024889	0					
ANR	1025358	Identifier	compiler		1024889	0					
ANR	1025359	Argument	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1					
ANR	1025360	InclusiveOrExpression	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	0		|			
ANR	1025361	ExclusiveOrExpression	SUBI ^ inv_bits		1024889	0		^			
ANR	1025362	Identifier	SUBI		1024889	0					
ANR	1025363	Identifier	inv_bits		1024889	1					
ANR	1025364	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025365	CallExpression	RD ( dst )		1024889	0					
ANR	1025366	Callee	RD		1024889	0					
ANR	1025367	Identifier	RD		1024889	0					
ANR	1025368	ArgumentList	dst		1024889	1					
ANR	1025369	Argument	dst		1024889	0					
ANR	1025370	Identifier	dst		1024889	0					
ANR	1025371	InclusiveOrExpression	RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025372	CallExpression	RN ( reg )		1024889	0					
ANR	1025373	Callee	RN		1024889	0					
ANR	1025374	Identifier	RN		1024889	0					
ANR	1025375	ArgumentList	reg		1024889	1					
ANR	1025376	Argument	reg		1024889	0					
ANR	1025377	Identifier	reg		1024889	0					
ANR	1025378	InclusiveOrExpression	( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025379	ShiftExpression	( nimm >> 12 ) << 10		1024889	0		<<			
ANR	1025380	ShiftExpression	nimm >> 12		1024889	0		>>			
ANR	1025381	Identifier	nimm		1024889	0					
ANR	1025382	PrimaryExpression	12		1024889	1					
ANR	1025383	PrimaryExpression	10		1024889	1					
ANR	1025384	ShiftExpression	1 << 22		1024889	1		<<			
ANR	1025385	PrimaryExpression	1		1024889	0					
ANR	1025386	PrimaryExpression	22		1024889	1					
ANR	1025387	IfStatement	if ( imm > 0 && imm <= 0xffffff && ! ( flags & SET_FLAGS ) )		1024889	23					
ANR	1025388	Condition	imm > 0 && imm <= 0xffffff && ! ( flags & SET_FLAGS )	584:7:16868:16917	1024889	0	True				
ANR	1025389	AndExpression	imm > 0 && imm <= 0xffffff && ! ( flags & SET_FLAGS )		1024889	0		&&			
ANR	1025390	RelationalExpression	imm > 0		1024889	0		>			
ANR	1025391	Identifier	imm		1024889	0					
ANR	1025392	PrimaryExpression	0		1024889	1					
ANR	1025393	AndExpression	imm <= 0xffffff && ! ( flags & SET_FLAGS )		1024889	1		&&			
ANR	1025394	RelationalExpression	imm <= 0xffffff		1024889	0		<=			
ANR	1025395	Identifier	imm		1024889	0					
ANR	1025396	PrimaryExpression	0xffffff		1024889	1					
ANR	1025397	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	1					
ANR	1025398	UnaryOperator	!		1024889	0					
ANR	1025399	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1025400	Identifier	flags		1024889	0					
ANR	1025401	Identifier	SET_FLAGS		1024889	1					
ANR	1025402	CompoundStatement		69:59:2237:2237	1024889	1					
ANR	1025403	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 ) ) )"	585:4:16926:17027	1024889	0	True				
ANR	1025404	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 ) ) )"		1024889	0					
ANR	1025405	Callee	FAIL_IF		1024889	0					
ANR	1025406	Identifier	FAIL_IF		1024889	0					
ANR	1025407	ArgumentList	"push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	1					
ANR	1025408	Argument	"push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	0					
ANR	1025409	CallExpression	"push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	0					
ANR	1025410	Callee	push_inst		1024889	0					
ANR	1025411	Identifier	push_inst		1024889	0					
ANR	1025412	ArgumentList	compiler		1024889	1					
ANR	1025413	Argument	compiler		1024889	0					
ANR	1025414	Identifier	compiler		1024889	0					
ANR	1025415	Argument	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1					
ANR	1025416	InclusiveOrExpression	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	0		|			
ANR	1025417	ExclusiveOrExpression	ADDI ^ inv_bits		1024889	0		^			
ANR	1025418	Identifier	ADDI		1024889	0					
ANR	1025419	Identifier	inv_bits		1024889	1					
ANR	1025420	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025421	CallExpression	RD ( dst )		1024889	0					
ANR	1025422	Callee	RD		1024889	0					
ANR	1025423	Identifier	RD		1024889	0					
ANR	1025424	ArgumentList	dst		1024889	1					
ANR	1025425	Argument	dst		1024889	0					
ANR	1025426	Identifier	dst		1024889	0					
ANR	1025427	InclusiveOrExpression	RN ( reg ) | ( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025428	CallExpression	RN ( reg )		1024889	0					
ANR	1025429	Callee	RN		1024889	0					
ANR	1025430	Identifier	RN		1024889	0					
ANR	1025431	ArgumentList	reg		1024889	1					
ANR	1025432	Argument	reg		1024889	0					
ANR	1025433	Identifier	reg		1024889	0					
ANR	1025434	InclusiveOrExpression	( ( imm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025435	ShiftExpression	( imm >> 12 ) << 10		1024889	0		<<			
ANR	1025436	ShiftExpression	imm >> 12		1024889	0		>>			
ANR	1025437	Identifier	imm		1024889	0					
ANR	1025438	PrimaryExpression	12		1024889	1					
ANR	1025439	PrimaryExpression	10		1024889	1					
ANR	1025440	ShiftExpression	1 << 22		1024889	1		<<			
ANR	1025441	PrimaryExpression	1		1024889	0					
ANR	1025442	PrimaryExpression	22		1024889	1					
ANR	1025443	ReturnStatement	"return push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( imm & 0xfff ) << 10 ) ) ;"	586:4:17033:17122	1024889	1	True				
ANR	1025444	CallExpression	"push_inst ( compiler , ( ADDI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( imm & 0xfff ) << 10 ) )"		1024889	0					
ANR	1025445	Callee	push_inst		1024889	0					
ANR	1025446	Identifier	push_inst		1024889	0					
ANR	1025447	ArgumentList	compiler		1024889	1					
ANR	1025448	Argument	compiler		1024889	0					
ANR	1025449	Identifier	compiler		1024889	0					
ANR	1025450	Argument	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( imm & 0xfff ) << 10 )		1024889	1					
ANR	1025451	InclusiveOrExpression	( ADDI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( imm & 0xfff ) << 10 )		1024889	0		|			
ANR	1025452	ExclusiveOrExpression	ADDI ^ inv_bits		1024889	0		^			
ANR	1025453	Identifier	ADDI		1024889	0					
ANR	1025454	Identifier	inv_bits		1024889	1					
ANR	1025455	InclusiveOrExpression	RD ( dst ) | RN ( dst ) | ( ( imm & 0xfff ) << 10 )		1024889	1		|			
ANR	1025456	CallExpression	RD ( dst )		1024889	0					
ANR	1025457	Callee	RD		1024889	0					
ANR	1025458	Identifier	RD		1024889	0					
ANR	1025459	ArgumentList	dst		1024889	1					
ANR	1025460	Argument	dst		1024889	0					
ANR	1025461	Identifier	dst		1024889	0					
ANR	1025462	InclusiveOrExpression	RN ( dst ) | ( ( imm & 0xfff ) << 10 )		1024889	1		|			
ANR	1025463	CallExpression	RN ( dst )		1024889	0					
ANR	1025464	Callee	RN		1024889	0					
ANR	1025465	Identifier	RN		1024889	0					
ANR	1025466	ArgumentList	dst		1024889	1					
ANR	1025467	Argument	dst		1024889	0					
ANR	1025468	Identifier	dst		1024889	0					
ANR	1025469	ShiftExpression	( imm & 0xfff ) << 10		1024889	1		<<			
ANR	1025470	BitAndExpression	imm & 0xfff		1024889	0		&			
ANR	1025471	Identifier	imm		1024889	0					
ANR	1025472	PrimaryExpression	0xfff		1024889	1					
ANR	1025473	PrimaryExpression	10		1024889	1					
ANR	1025474	IfStatement	if ( nimm > 0 && nimm <= 0xffffff && ! ( flags & SET_FLAGS ) )		1024889	24					
ANR	1025475	Condition	nimm > 0 && nimm <= 0xffffff && ! ( flags & SET_FLAGS )	588:7:17136:17187	1024889	0	True				
ANR	1025476	AndExpression	nimm > 0 && nimm <= 0xffffff && ! ( flags & SET_FLAGS )		1024889	0		&&			
ANR	1025477	RelationalExpression	nimm > 0		1024889	0		>			
ANR	1025478	Identifier	nimm		1024889	0					
ANR	1025479	PrimaryExpression	0		1024889	1					
ANR	1025480	AndExpression	nimm <= 0xffffff && ! ( flags & SET_FLAGS )		1024889	1		&&			
ANR	1025481	RelationalExpression	nimm <= 0xffffff		1024889	0		<=			
ANR	1025482	Identifier	nimm		1024889	0					
ANR	1025483	PrimaryExpression	0xffffff		1024889	1					
ANR	1025484	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	1					
ANR	1025485	UnaryOperator	!		1024889	0					
ANR	1025486	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1025487	Identifier	flags		1024889	0					
ANR	1025488	Identifier	SET_FLAGS		1024889	1					
ANR	1025489	CompoundStatement		73:61:2507:2507	1024889	1					
ANR	1025490	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 ) ) )"	589:4:17196:17298	1024889	0	True				
ANR	1025491	CallExpression	"FAIL_IF ( push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 ) ) )"		1024889	0					
ANR	1025492	Callee	FAIL_IF		1024889	0					
ANR	1025493	Identifier	FAIL_IF		1024889	0					
ANR	1025494	ArgumentList	"push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	1					
ANR	1025495	Argument	"push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	0					
ANR	1025496	CallExpression	"push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 ) )"		1024889	0					
ANR	1025497	Callee	push_inst		1024889	0					
ANR	1025498	Identifier	push_inst		1024889	0					
ANR	1025499	ArgumentList	compiler		1024889	1					
ANR	1025500	Argument	compiler		1024889	0					
ANR	1025501	Identifier	compiler		1024889	0					
ANR	1025502	Argument	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1					
ANR	1025503	InclusiveOrExpression	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	0		|			
ANR	1025504	ExclusiveOrExpression	SUBI ^ inv_bits		1024889	0		^			
ANR	1025505	Identifier	SUBI		1024889	0					
ANR	1025506	Identifier	inv_bits		1024889	1					
ANR	1025507	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025508	CallExpression	RD ( dst )		1024889	0					
ANR	1025509	Callee	RD		1024889	0					
ANR	1025510	Identifier	RD		1024889	0					
ANR	1025511	ArgumentList	dst		1024889	1					
ANR	1025512	Argument	dst		1024889	0					
ANR	1025513	Identifier	dst		1024889	0					
ANR	1025514	InclusiveOrExpression	RN ( reg ) | ( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025515	CallExpression	RN ( reg )		1024889	0					
ANR	1025516	Callee	RN		1024889	0					
ANR	1025517	Identifier	RN		1024889	0					
ANR	1025518	ArgumentList	reg		1024889	1					
ANR	1025519	Argument	reg		1024889	0					
ANR	1025520	Identifier	reg		1024889	0					
ANR	1025521	InclusiveOrExpression	( ( nimm >> 12 ) << 10 ) | ( 1 << 22 )		1024889	1		|			
ANR	1025522	ShiftExpression	( nimm >> 12 ) << 10		1024889	0		<<			
ANR	1025523	ShiftExpression	nimm >> 12		1024889	0		>>			
ANR	1025524	Identifier	nimm		1024889	0					
ANR	1025525	PrimaryExpression	12		1024889	1					
ANR	1025526	PrimaryExpression	10		1024889	1					
ANR	1025527	ShiftExpression	1 << 22		1024889	1		<<			
ANR	1025528	PrimaryExpression	1		1024889	0					
ANR	1025529	PrimaryExpression	22		1024889	1					
ANR	1025530	ReturnStatement	"return push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( nimm & 0xfff ) << 10 ) ) ;"	590:4:17304:17394	1024889	1	True				
ANR	1025531	CallExpression	"push_inst ( compiler , ( SUBI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( nimm & 0xfff ) << 10 ) )"		1024889	0					
ANR	1025532	Callee	push_inst		1024889	0					
ANR	1025533	Identifier	push_inst		1024889	0					
ANR	1025534	ArgumentList	compiler		1024889	1					
ANR	1025535	Argument	compiler		1024889	0					
ANR	1025536	Identifier	compiler		1024889	0					
ANR	1025537	Argument	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( nimm & 0xfff ) << 10 )		1024889	1					
ANR	1025538	InclusiveOrExpression	( SUBI ^ inv_bits ) | RD ( dst ) | RN ( dst ) | ( ( nimm & 0xfff ) << 10 )		1024889	0		|			
ANR	1025539	ExclusiveOrExpression	SUBI ^ inv_bits		1024889	0		^			
ANR	1025540	Identifier	SUBI		1024889	0					
ANR	1025541	Identifier	inv_bits		1024889	1					
ANR	1025542	InclusiveOrExpression	RD ( dst ) | RN ( dst ) | ( ( nimm & 0xfff ) << 10 )		1024889	1		|			
ANR	1025543	CallExpression	RD ( dst )		1024889	0					
ANR	1025544	Callee	RD		1024889	0					
ANR	1025545	Identifier	RD		1024889	0					
ANR	1025546	ArgumentList	dst		1024889	1					
ANR	1025547	Argument	dst		1024889	0					
ANR	1025548	Identifier	dst		1024889	0					
ANR	1025549	InclusiveOrExpression	RN ( dst ) | ( ( nimm & 0xfff ) << 10 )		1024889	1		|			
ANR	1025550	CallExpression	RN ( dst )		1024889	0					
ANR	1025551	Callee	RN		1024889	0					
ANR	1025552	Identifier	RN		1024889	0					
ANR	1025553	ArgumentList	dst		1024889	1					
ANR	1025554	Argument	dst		1024889	0					
ANR	1025555	Identifier	dst		1024889	0					
ANR	1025556	ShiftExpression	( nimm & 0xfff ) << 10		1024889	1		<<			
ANR	1025557	BitAndExpression	nimm & 0xfff		1024889	0		&			
ANR	1025558	Identifier	nimm		1024889	0					
ANR	1025559	PrimaryExpression	0xfff		1024889	1					
ANR	1025560	PrimaryExpression	10		1024889	1					
ANR	1025561	BreakStatement	break ;	592:3:17404:17409	1024889	25	True				
ANR	1025562	Label	case SLJIT_AND :	593:2:17413:17427	1024889	26	True				
ANR	1025563	Identifier	SLJIT_AND		1024889	0					
ANR	1025564	ExpressionStatement	"inst_bits = logical_imm ( imm , LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 ) )"	594:3:17432:17510	1024889	27	True				
ANR	1025565	AssignmentExpression	"inst_bits = logical_imm ( imm , LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 ) )"		1024889	0		=			
ANR	1025566	Identifier	inst_bits		1024889	0					
ANR	1025567	CallExpression	"logical_imm ( imm , LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 ) )"		1024889	1					
ANR	1025568	Callee	logical_imm		1024889	0					
ANR	1025569	Identifier	logical_imm		1024889	0					
ANR	1025570	ArgumentList	imm		1024889	1					
ANR	1025571	Argument	imm		1024889	0					
ANR	1025572	Identifier	imm		1024889	0					
ANR	1025573	Argument	LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 )		1024889	1					
ANR	1025574	InclusiveOrExpression	LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 )		1024889	0		|			
ANR	1025575	Identifier	LOGICAL_IMM_CHECK		1024889	0					
ANR	1025576	ConditionalExpression	( flags & INT_OP ) ? 16 : 32		1024889	1					
ANR	1025577	Condition	flags & INT_OP		1024889	0					
ANR	1025578	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1025579	Identifier	flags		1024889	0					
ANR	1025580	Identifier	INT_OP		1024889	1					
ANR	1025581	PrimaryExpression	16		1024889	1					
ANR	1025582	PrimaryExpression	32		1024889	2					
ANR	1025583	IfStatement	if ( ! inst_bits )		1024889	28					
ANR	1025584	Condition	! inst_bits	595:7:17519:17528	1024889	0	True				
ANR	1025585	UnaryOperationExpression	! inst_bits		1024889	0					
ANR	1025586	UnaryOperator	!		1024889	0					
ANR	1025587	Identifier	inst_bits		1024889	1					
ANR	1025588	BreakStatement	break ;	596:4:17535:17540	1024889	1	True				
ANR	1025589	ExpressionStatement	CHECK_FLAGS ( 3 << 29 )	597:3:17545:17565	1024889	29	True				
ANR	1025590	CallExpression	CHECK_FLAGS ( 3 << 29 )		1024889	0					
ANR	1025591	Callee	CHECK_FLAGS		1024889	0					
ANR	1025592	Identifier	CHECK_FLAGS		1024889	0					
ANR	1025593	ArgumentList	3 << 29		1024889	1					
ANR	1025594	Argument	3 << 29		1024889	0					
ANR	1025595	ShiftExpression	3 << 29		1024889	0		<<			
ANR	1025596	PrimaryExpression	3		1024889	0					
ANR	1025597	PrimaryExpression	29		1024889	1					
ANR	1025598	ReturnStatement	"return push_inst ( compiler , ( ANDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | inst_bits ) ;"	598:3:17570:17647	1024889	30	True				
ANR	1025599	CallExpression	"push_inst ( compiler , ( ANDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | inst_bits )"		1024889	0					
ANR	1025600	Callee	push_inst		1024889	0					
ANR	1025601	Identifier	push_inst		1024889	0					
ANR	1025602	ArgumentList	compiler		1024889	1					
ANR	1025603	Argument	compiler		1024889	0					
ANR	1025604	Identifier	compiler		1024889	0					
ANR	1025605	Argument	( ANDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | inst_bits		1024889	1					
ANR	1025606	InclusiveOrExpression	( ANDI ^ inv_bits ) | RD ( dst ) | RN ( reg ) | inst_bits		1024889	0		|			
ANR	1025607	ExclusiveOrExpression	ANDI ^ inv_bits		1024889	0		^			
ANR	1025608	Identifier	ANDI		1024889	0					
ANR	1025609	Identifier	inv_bits		1024889	1					
ANR	1025610	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | inst_bits		1024889	1		|			
ANR	1025611	CallExpression	RD ( dst )		1024889	0					
ANR	1025612	Callee	RD		1024889	0					
ANR	1025613	Identifier	RD		1024889	0					
ANR	1025614	ArgumentList	dst		1024889	1					
ANR	1025615	Argument	dst		1024889	0					
ANR	1025616	Identifier	dst		1024889	0					
ANR	1025617	InclusiveOrExpression	RN ( reg ) | inst_bits		1024889	1		|			
ANR	1025618	CallExpression	RN ( reg )		1024889	0					
ANR	1025619	Callee	RN		1024889	0					
ANR	1025620	Identifier	RN		1024889	0					
ANR	1025621	ArgumentList	reg		1024889	1					
ANR	1025622	Argument	reg		1024889	0					
ANR	1025623	Identifier	reg		1024889	0					
ANR	1025624	Identifier	inst_bits		1024889	1					
ANR	1025625	Label	case SLJIT_OR :	599:2:17651:17664	1024889	31	True				
ANR	1025626	Identifier	SLJIT_OR		1024889	0					
ANR	1025627	Label	case SLJIT_XOR :	600:2:17668:17682	1024889	32	True				
ANR	1025628	Identifier	SLJIT_XOR		1024889	0					
ANR	1025629	ExpressionStatement	"inst_bits = logical_imm ( imm , LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 ) )"	601:3:17687:17765	1024889	33	True				
ANR	1025630	AssignmentExpression	"inst_bits = logical_imm ( imm , LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 ) )"		1024889	0		=			
ANR	1025631	Identifier	inst_bits		1024889	0					
ANR	1025632	CallExpression	"logical_imm ( imm , LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 ) )"		1024889	1					
ANR	1025633	Callee	logical_imm		1024889	0					
ANR	1025634	Identifier	logical_imm		1024889	0					
ANR	1025635	ArgumentList	imm		1024889	1					
ANR	1025636	Argument	imm		1024889	0					
ANR	1025637	Identifier	imm		1024889	0					
ANR	1025638	Argument	LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 )		1024889	1					
ANR	1025639	InclusiveOrExpression	LOGICAL_IMM_CHECK | ( ( flags & INT_OP ) ? 16 : 32 )		1024889	0		|			
ANR	1025640	Identifier	LOGICAL_IMM_CHECK		1024889	0					
ANR	1025641	ConditionalExpression	( flags & INT_OP ) ? 16 : 32		1024889	1					
ANR	1025642	Condition	flags & INT_OP		1024889	0					
ANR	1025643	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1025644	Identifier	flags		1024889	0					
ANR	1025645	Identifier	INT_OP		1024889	1					
ANR	1025646	PrimaryExpression	16		1024889	1					
ANR	1025647	PrimaryExpression	32		1024889	2					
ANR	1025648	IfStatement	if ( ! inst_bits )		1024889	34					
ANR	1025649	Condition	! inst_bits	602:7:17774:17783	1024889	0	True				
ANR	1025650	UnaryOperationExpression	! inst_bits		1024889	0					
ANR	1025651	UnaryOperator	!		1024889	0					
ANR	1025652	Identifier	inst_bits		1024889	1					
ANR	1025653	BreakStatement	break ;	603:4:17790:17795	1024889	1	True				
ANR	1025654	IfStatement	if ( op == SLJIT_OR )		1024889	35					
ANR	1025655	Condition	op == SLJIT_OR	604:7:17804:17817	1024889	0	True				
ANR	1025656	EqualityExpression	op == SLJIT_OR		1024889	0		==			
ANR	1025657	Identifier	op		1024889	0					
ANR	1025658	Identifier	SLJIT_OR		1024889	1					
ANR	1025659	ExpressionStatement	inst_bits |= ORRI	605:4:17824:17841	1024889	1	True				
ANR	1025660	AssignmentExpression	inst_bits |= ORRI		1024889	0		|=			
ANR	1025661	Identifier	inst_bits		1024889	0					
ANR	1025662	Identifier	ORRI		1024889	1					
ANR	1025663	ElseStatement	else		1024889	0					
ANR	1025664	ExpressionStatement	inst_bits |= EORI	607:4:17855:17872	1024889	0	True				
ANR	1025665	AssignmentExpression	inst_bits |= EORI		1024889	0		|=			
ANR	1025666	Identifier	inst_bits		1024889	0					
ANR	1025667	Identifier	EORI		1024889	1					
ANR	1025668	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( inst_bits ^ inv_bits ) | RD ( dst ) | RN ( reg ) ) )"	608:3:17877:17949	1024889	36	True				
ANR	1025669	CallExpression	"FAIL_IF ( push_inst ( compiler , ( inst_bits ^ inv_bits ) | RD ( dst ) | RN ( reg ) ) )"		1024889	0					
ANR	1025670	Callee	FAIL_IF		1024889	0					
ANR	1025671	Identifier	FAIL_IF		1024889	0					
ANR	1025672	ArgumentList	"push_inst ( compiler , ( inst_bits ^ inv_bits ) | RD ( dst ) | RN ( reg ) )"		1024889	1					
ANR	1025673	Argument	"push_inst ( compiler , ( inst_bits ^ inv_bits ) | RD ( dst ) | RN ( reg ) )"		1024889	0					
ANR	1025674	CallExpression	"push_inst ( compiler , ( inst_bits ^ inv_bits ) | RD ( dst ) | RN ( reg ) )"		1024889	0					
ANR	1025675	Callee	push_inst		1024889	0					
ANR	1025676	Identifier	push_inst		1024889	0					
ANR	1025677	ArgumentList	compiler		1024889	1					
ANR	1025678	Argument	compiler		1024889	0					
ANR	1025679	Identifier	compiler		1024889	0					
ANR	1025680	Argument	( inst_bits ^ inv_bits ) | RD ( dst ) | RN ( reg )		1024889	1					
ANR	1025681	InclusiveOrExpression	( inst_bits ^ inv_bits ) | RD ( dst ) | RN ( reg )		1024889	0		|			
ANR	1025682	ExclusiveOrExpression	inst_bits ^ inv_bits		1024889	0		^			
ANR	1025683	Identifier	inst_bits		1024889	0					
ANR	1025684	Identifier	inv_bits		1024889	1					
ANR	1025685	InclusiveOrExpression	RD ( dst ) | RN ( reg )		1024889	1		|			
ANR	1025686	CallExpression	RD ( dst )		1024889	0					
ANR	1025687	Callee	RD		1024889	0					
ANR	1025688	Identifier	RD		1024889	0					
ANR	1025689	ArgumentList	dst		1024889	1					
ANR	1025690	Argument	dst		1024889	0					
ANR	1025691	Identifier	dst		1024889	0					
ANR	1025692	CallExpression	RN ( reg )		1024889	1					
ANR	1025693	Callee	RN		1024889	0					
ANR	1025694	Identifier	RN		1024889	0					
ANR	1025695	ArgumentList	reg		1024889	1					
ANR	1025696	Argument	reg		1024889	0					
ANR	1025697	Identifier	reg		1024889	0					
ANR	1025698	GotoStatement	goto set_flags ;	609:3:17954:17968	1024889	37	True				
ANR	1025699	Identifier	set_flags		1024889	0					
ANR	1025700	Label	case SLJIT_SHL :	610:2:17972:17986	1024889	38	True				
ANR	1025701	Identifier	SLJIT_SHL		1024889	0					
ANR	1025702	IfStatement	if ( flags & ARG1_IMM )		1024889	39					
ANR	1025703	Condition	flags & ARG1_IMM	611:7:17995:18010	1024889	0	True				
ANR	1025704	BitAndExpression	flags & ARG1_IMM		1024889	0		&			
ANR	1025705	Identifier	flags		1024889	0					
ANR	1025706	Identifier	ARG1_IMM		1024889	1					
ANR	1025707	BreakStatement	break ;	612:4:18017:18022	1024889	1	True				
ANR	1025708	IfStatement	if ( flags & INT_OP )		1024889	40					
ANR	1025709	Condition	flags & INT_OP	613:7:18031:18044	1024889	0	True				
ANR	1025710	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1025711	Identifier	flags		1024889	0					
ANR	1025712	Identifier	INT_OP		1024889	1					
ANR	1025713	CompoundStatement		98:23:3364:3364	1024889	1					
ANR	1025714	ExpressionStatement	imm &= 0x1f	614:4:18053:18064	1024889	0	True				
ANR	1025715	AssignmentExpression	imm &= 0x1f		1024889	0		&=			
ANR	1025716	Identifier	imm		1024889	0					
ANR	1025717	PrimaryExpression	0x1f		1024889	1					
ANR	1025718	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 ) ) )"	615:4:18070:18183	1024889	1	True				
ANR	1025719	CallExpression	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 ) ) )"		1024889	0					
ANR	1025720	Callee	FAIL_IF		1024889	0					
ANR	1025721	Identifier	FAIL_IF		1024889	0					
ANR	1025722	ArgumentList	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 ) )"		1024889	1					
ANR	1025723	Argument	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 ) )"		1024889	0					
ANR	1025724	CallExpression	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 ) )"		1024889	0					
ANR	1025725	Callee	push_inst		1024889	0					
ANR	1025726	Identifier	push_inst		1024889	0					
ANR	1025727	ArgumentList	compiler		1024889	1					
ANR	1025728	Argument	compiler		1024889	0					
ANR	1025729	Identifier	compiler		1024889	0					
ANR	1025730	Argument	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 )		1024889	1					
ANR	1025731	InclusiveOrExpression	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 )		1024889	0		|			
ANR	1025732	ExclusiveOrExpression	UBFM ^ inv_bits		1024889	0		^			
ANR	1025733	Identifier	UBFM		1024889	0					
ANR	1025734	Identifier	inv_bits		1024889	1					
ANR	1025735	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 )		1024889	1		|			
ANR	1025736	CallExpression	RD ( dst )		1024889	0					
ANR	1025737	Callee	RD		1024889	0					
ANR	1025738	Identifier	RD		1024889	0					
ANR	1025739	ArgumentList	dst		1024889	1					
ANR	1025740	Argument	dst		1024889	0					
ANR	1025741	Identifier	dst		1024889	0					
ANR	1025742	InclusiveOrExpression	RN ( arg1 ) | ( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 )		1024889	1		|			
ANR	1025743	CallExpression	RN ( arg1 )		1024889	0					
ANR	1025744	Callee	RN		1024889	0					
ANR	1025745	Identifier	RN		1024889	0					
ANR	1025746	ArgumentList	arg1		1024889	1					
ANR	1025747	Argument	arg1		1024889	0					
ANR	1025748	Identifier	arg1		1024889	0					
ANR	1025749	InclusiveOrExpression	( ( - imm & 0x1f ) << 16 ) | ( ( 31 - imm ) << 10 )		1024889	1		|			
ANR	1025750	ShiftExpression	( - imm & 0x1f ) << 16		1024889	0		<<			
ANR	1025751	BitAndExpression	- imm & 0x1f		1024889	0		&			
ANR	1025752	UnaryOperationExpression	- imm		1024889	0					
ANR	1025753	UnaryOperator	-		1024889	0					
ANR	1025754	Identifier	imm		1024889	1					
ANR	1025755	PrimaryExpression	0x1f		1024889	1					
ANR	1025756	PrimaryExpression	16		1024889	1					
ANR	1025757	ShiftExpression	( 31 - imm ) << 10		1024889	1		<<			
ANR	1025758	AdditiveExpression	31 - imm		1024889	0		-			
ANR	1025759	PrimaryExpression	31		1024889	0					
ANR	1025760	Identifier	imm		1024889	1					
ANR	1025761	PrimaryExpression	10		1024889	1					
ANR	1025762	ElseStatement	else		1024889	0					
ANR	1025763	CompoundStatement		102:8:3515:3515	1024889	0					
ANR	1025764	ExpressionStatement	imm &= 0x3f	618:4:18204:18215	1024889	0	True				
ANR	1025765	AssignmentExpression	imm &= 0x3f		1024889	0		&=			
ANR	1025766	Identifier	imm		1024889	0					
ANR	1025767	PrimaryExpression	0x3f		1024889	1					
ANR	1025768	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 ) ) )"	619:4:18221:18346	1024889	1	True				
ANR	1025769	CallExpression	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 ) ) )"		1024889	0					
ANR	1025770	Callee	FAIL_IF		1024889	0					
ANR	1025771	Identifier	FAIL_IF		1024889	0					
ANR	1025772	ArgumentList	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 ) )"		1024889	1					
ANR	1025773	Argument	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 ) )"		1024889	0					
ANR	1025774	CallExpression	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 ) )"		1024889	0					
ANR	1025775	Callee	push_inst		1024889	0					
ANR	1025776	Identifier	push_inst		1024889	0					
ANR	1025777	ArgumentList	compiler		1024889	1					
ANR	1025778	Argument	compiler		1024889	0					
ANR	1025779	Identifier	compiler		1024889	0					
ANR	1025780	Argument	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 )		1024889	1					
ANR	1025781	InclusiveOrExpression	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 )		1024889	0		|			
ANR	1025782	ExclusiveOrExpression	UBFM ^ inv_bits		1024889	0		^			
ANR	1025783	Identifier	UBFM		1024889	0					
ANR	1025784	Identifier	inv_bits		1024889	1					
ANR	1025785	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 )		1024889	1		|			
ANR	1025786	CallExpression	RD ( dst )		1024889	0					
ANR	1025787	Callee	RD		1024889	0					
ANR	1025788	Identifier	RD		1024889	0					
ANR	1025789	ArgumentList	dst		1024889	1					
ANR	1025790	Argument	dst		1024889	0					
ANR	1025791	Identifier	dst		1024889	0					
ANR	1025792	InclusiveOrExpression	RN ( arg1 ) | ( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 )		1024889	1		|			
ANR	1025793	CallExpression	RN ( arg1 )		1024889	0					
ANR	1025794	Callee	RN		1024889	0					
ANR	1025795	Identifier	RN		1024889	0					
ANR	1025796	ArgumentList	arg1		1024889	1					
ANR	1025797	Argument	arg1		1024889	0					
ANR	1025798	Identifier	arg1		1024889	0					
ANR	1025799	InclusiveOrExpression	( 1 << 22 ) | ( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 )		1024889	1		|			
ANR	1025800	ShiftExpression	1 << 22		1024889	0		<<			
ANR	1025801	PrimaryExpression	1		1024889	0					
ANR	1025802	PrimaryExpression	22		1024889	1					
ANR	1025803	InclusiveOrExpression	( ( - imm & 0x3f ) << 16 ) | ( ( 63 - imm ) << 10 )		1024889	1		|			
ANR	1025804	ShiftExpression	( - imm & 0x3f ) << 16		1024889	0		<<			
ANR	1025805	BitAndExpression	- imm & 0x3f		1024889	0		&			
ANR	1025806	UnaryOperationExpression	- imm		1024889	0					
ANR	1025807	UnaryOperator	-		1024889	0					
ANR	1025808	Identifier	imm		1024889	1					
ANR	1025809	PrimaryExpression	0x3f		1024889	1					
ANR	1025810	PrimaryExpression	16		1024889	1					
ANR	1025811	ShiftExpression	( 63 - imm ) << 10		1024889	1		<<			
ANR	1025812	AdditiveExpression	63 - imm		1024889	0		-			
ANR	1025813	PrimaryExpression	63		1024889	0					
ANR	1025814	Identifier	imm		1024889	1					
ANR	1025815	PrimaryExpression	10		1024889	1					
ANR	1025816	GotoStatement	goto set_flags ;	621:3:18356:18370	1024889	41	True				
ANR	1025817	Identifier	set_flags		1024889	0					
ANR	1025818	Label	case SLJIT_LSHR :	622:2:18374:18389	1024889	42	True				
ANR	1025819	Identifier	SLJIT_LSHR		1024889	0					
ANR	1025820	Label	case SLJIT_ASHR :	623:2:18393:18408	1024889	43	True				
ANR	1025821	Identifier	SLJIT_ASHR		1024889	0					
ANR	1025822	IfStatement	if ( flags & ARG1_IMM )		1024889	44					
ANR	1025823	Condition	flags & ARG1_IMM	624:7:18417:18432	1024889	0	True				
ANR	1025824	BitAndExpression	flags & ARG1_IMM		1024889	0		&			
ANR	1025825	Identifier	flags		1024889	0					
ANR	1025826	Identifier	ARG1_IMM		1024889	1					
ANR	1025827	BreakStatement	break ;	625:4:18439:18444	1024889	1	True				
ANR	1025828	IfStatement	if ( op == SLJIT_ASHR )		1024889	45					
ANR	1025829	Condition	op == SLJIT_ASHR	626:7:18453:18468	1024889	0	True				
ANR	1025830	EqualityExpression	op == SLJIT_ASHR		1024889	0		==			
ANR	1025831	Identifier	op		1024889	0					
ANR	1025832	Identifier	SLJIT_ASHR		1024889	1					
ANR	1025833	ExpressionStatement	inv_bits |= 1 << 30	627:4:18475:18494	1024889	1	True				
ANR	1025834	AssignmentExpression	inv_bits |= 1 << 30		1024889	0		|=			
ANR	1025835	Identifier	inv_bits		1024889	0					
ANR	1025836	ShiftExpression	1 << 30		1024889	1		<<			
ANR	1025837	PrimaryExpression	1		1024889	0					
ANR	1025838	PrimaryExpression	30		1024889	1					
ANR	1025839	IfStatement	if ( flags & INT_OP )		1024889	46					
ANR	1025840	Condition	flags & INT_OP	628:7:18503:18516	1024889	0	True				
ANR	1025841	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1025842	Identifier	flags		1024889	0					
ANR	1025843	Identifier	INT_OP		1024889	1					
ANR	1025844	CompoundStatement		113:23:3836:3836	1024889	1					
ANR	1025845	ExpressionStatement	imm &= 0x1f	629:4:18525:18536	1024889	0	True				
ANR	1025846	AssignmentExpression	imm &= 0x1f		1024889	0		&=			
ANR	1025847	Identifier	imm		1024889	0					
ANR	1025848	PrimaryExpression	0x1f		1024889	1					
ANR	1025849	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 ) ) )"	630:4:18542:18637	1024889	1	True				
ANR	1025850	CallExpression	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 ) ) )"		1024889	0					
ANR	1025851	Callee	FAIL_IF		1024889	0					
ANR	1025852	Identifier	FAIL_IF		1024889	0					
ANR	1025853	ArgumentList	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 ) )"		1024889	1					
ANR	1025854	Argument	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 ) )"		1024889	0					
ANR	1025855	CallExpression	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 ) )"		1024889	0					
ANR	1025856	Callee	push_inst		1024889	0					
ANR	1025857	Identifier	push_inst		1024889	0					
ANR	1025858	ArgumentList	compiler		1024889	1					
ANR	1025859	Argument	compiler		1024889	0					
ANR	1025860	Identifier	compiler		1024889	0					
ANR	1025861	Argument	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 )		1024889	1					
ANR	1025862	InclusiveOrExpression	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 )		1024889	0		|			
ANR	1025863	ExclusiveOrExpression	UBFM ^ inv_bits		1024889	0		^			
ANR	1025864	Identifier	UBFM		1024889	0					
ANR	1025865	Identifier	inv_bits		1024889	1					
ANR	1025866	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 )		1024889	1		|			
ANR	1025867	CallExpression	RD ( dst )		1024889	0					
ANR	1025868	Callee	RD		1024889	0					
ANR	1025869	Identifier	RD		1024889	0					
ANR	1025870	ArgumentList	dst		1024889	1					
ANR	1025871	Argument	dst		1024889	0					
ANR	1025872	Identifier	dst		1024889	0					
ANR	1025873	InclusiveOrExpression	RN ( arg1 ) | ( imm << 16 ) | ( 31 << 10 )		1024889	1		|			
ANR	1025874	CallExpression	RN ( arg1 )		1024889	0					
ANR	1025875	Callee	RN		1024889	0					
ANR	1025876	Identifier	RN		1024889	0					
ANR	1025877	ArgumentList	arg1		1024889	1					
ANR	1025878	Argument	arg1		1024889	0					
ANR	1025879	Identifier	arg1		1024889	0					
ANR	1025880	InclusiveOrExpression	( imm << 16 ) | ( 31 << 10 )		1024889	1		|			
ANR	1025881	ShiftExpression	imm << 16		1024889	0		<<			
ANR	1025882	Identifier	imm		1024889	0					
ANR	1025883	PrimaryExpression	16		1024889	1					
ANR	1025884	ShiftExpression	31 << 10		1024889	1		<<			
ANR	1025885	PrimaryExpression	31		1024889	0					
ANR	1025886	PrimaryExpression	10		1024889	1					
ANR	1025887	ElseStatement	else		1024889	0					
ANR	1025888	CompoundStatement		117:8:3969:3969	1024889	0					
ANR	1025889	ExpressionStatement	imm &= 0x3f	633:4:18658:18669	1024889	0	True				
ANR	1025890	AssignmentExpression	imm &= 0x3f		1024889	0		&=			
ANR	1025891	Identifier	imm		1024889	0					
ANR	1025892	PrimaryExpression	0x3f		1024889	1					
ANR	1025893	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 ) ) )"	634:4:18675:18782	1024889	1	True				
ANR	1025894	CallExpression	"FAIL_IF ( push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 ) ) )"		1024889	0					
ANR	1025895	Callee	FAIL_IF		1024889	0					
ANR	1025896	Identifier	FAIL_IF		1024889	0					
ANR	1025897	ArgumentList	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 ) )"		1024889	1					
ANR	1025898	Argument	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 ) )"		1024889	0					
ANR	1025899	CallExpression	"push_inst ( compiler , ( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 ) )"		1024889	0					
ANR	1025900	Callee	push_inst		1024889	0					
ANR	1025901	Identifier	push_inst		1024889	0					
ANR	1025902	ArgumentList	compiler		1024889	1					
ANR	1025903	Argument	compiler		1024889	0					
ANR	1025904	Identifier	compiler		1024889	0					
ANR	1025905	Argument	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 )		1024889	1					
ANR	1025906	InclusiveOrExpression	( UBFM ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 )		1024889	0		|			
ANR	1025907	ExclusiveOrExpression	UBFM ^ inv_bits		1024889	0		^			
ANR	1025908	Identifier	UBFM		1024889	0					
ANR	1025909	Identifier	inv_bits		1024889	1					
ANR	1025910	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 )		1024889	1		|			
ANR	1025911	CallExpression	RD ( dst )		1024889	0					
ANR	1025912	Callee	RD		1024889	0					
ANR	1025913	Identifier	RD		1024889	0					
ANR	1025914	ArgumentList	dst		1024889	1					
ANR	1025915	Argument	dst		1024889	0					
ANR	1025916	Identifier	dst		1024889	0					
ANR	1025917	InclusiveOrExpression	RN ( arg1 ) | ( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 )		1024889	1		|			
ANR	1025918	CallExpression	RN ( arg1 )		1024889	0					
ANR	1025919	Callee	RN		1024889	0					
ANR	1025920	Identifier	RN		1024889	0					
ANR	1025921	ArgumentList	arg1		1024889	1					
ANR	1025922	Argument	arg1		1024889	0					
ANR	1025923	Identifier	arg1		1024889	0					
ANR	1025924	InclusiveOrExpression	( 1 << 22 ) | ( imm << 16 ) | ( 63 << 10 )		1024889	1		|			
ANR	1025925	ShiftExpression	1 << 22		1024889	0		<<			
ANR	1025926	PrimaryExpression	1		1024889	0					
ANR	1025927	PrimaryExpression	22		1024889	1					
ANR	1025928	InclusiveOrExpression	( imm << 16 ) | ( 63 << 10 )		1024889	1		|			
ANR	1025929	ShiftExpression	imm << 16		1024889	0		<<			
ANR	1025930	Identifier	imm		1024889	0					
ANR	1025931	PrimaryExpression	16		1024889	1					
ANR	1025932	ShiftExpression	63 << 10		1024889	1		<<			
ANR	1025933	PrimaryExpression	63		1024889	0					
ANR	1025934	PrimaryExpression	10		1024889	1					
ANR	1025935	GotoStatement	goto set_flags ;	636:3:18792:18806	1024889	47	True				
ANR	1025936	Identifier	set_flags		1024889	0					
ANR	1025937	Label	default :	637:2:18810:18817	1024889	48	True				
ANR	1025938	Identifier	default		1024889	0					
ANR	1025939	ExpressionStatement	SLJIT_ASSERT_STOP ( )	638:3:18822:18841	1024889	49	True				
ANR	1025940	CallExpression	SLJIT_ASSERT_STOP ( )		1024889	0					
ANR	1025941	Callee	SLJIT_ASSERT_STOP		1024889	0					
ANR	1025942	Identifier	SLJIT_ASSERT_STOP		1024889	0					
ANR	1025943	ArgumentList			1024889	1					
ANR	1025944	BreakStatement	break ;	639:3:18846:18851	1024889	50	True				
ANR	1025945	IfStatement	if ( flags & ARG2_IMM )		1024889	3					
ANR	1025946	Condition	flags & ARG2_IMM	642:6:18864:18879	1024889	0	True				
ANR	1025947	BitAndExpression	flags & ARG2_IMM		1024889	0		&			
ANR	1025948	Identifier	flags		1024889	0					
ANR	1025949	Identifier	ARG2_IMM		1024889	1					
ANR	1025950	CompoundStatement		127:24:4199:4199	1024889	1					
ANR	1025951	IfStatement	if ( arg2 == 0 )		1024889	0					
ANR	1025952	Condition	arg2 == 0	643:7:18891:18899	1024889	0	True				
ANR	1025953	EqualityExpression	arg2 == 0		1024889	0		==			
ANR	1025954	Identifier	arg2		1024889	0					
ANR	1025955	PrimaryExpression	0		1024889	1					
ANR	1025956	ExpressionStatement	arg2 = TMP_ZERO	644:4:18906:18921	1024889	1	True				
ANR	1025957	AssignmentExpression	arg2 = TMP_ZERO		1024889	0		=			
ANR	1025958	Identifier	arg2		1024889	0					
ANR	1025959	Identifier	TMP_ZERO		1024889	1					
ANR	1025960	ElseStatement	else		1024889	0					
ANR	1025961	CompoundStatement		130:8:4248:4248	1024889	0					
ANR	1025962	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , arg2 ) )"	646:4:18937:18986	1024889	0	True				
ANR	1025963	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , arg2 ) )"		1024889	0					
ANR	1025964	Callee	FAIL_IF		1024889	0					
ANR	1025965	Identifier	FAIL_IF		1024889	0					
ANR	1025966	ArgumentList	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1024889	1					
ANR	1025967	Argument	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1024889	0					
ANR	1025968	CallExpression	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1024889	0					
ANR	1025969	Callee	load_immediate		1024889	0					
ANR	1025970	Identifier	load_immediate		1024889	0					
ANR	1025971	ArgumentList	compiler		1024889	1					
ANR	1025972	Argument	compiler		1024889	0					
ANR	1025973	Identifier	compiler		1024889	0					
ANR	1025974	Argument	TMP_REG2		1024889	1					
ANR	1025975	Identifier	TMP_REG2		1024889	0					
ANR	1025976	Argument	arg2		1024889	2					
ANR	1025977	Identifier	arg2		1024889	0					
ANR	1025978	ExpressionStatement	arg2 = TMP_REG2	647:4:18992:19007	1024889	1	True				
ANR	1025979	AssignmentExpression	arg2 = TMP_REG2		1024889	0		=			
ANR	1025980	Identifier	arg2		1024889	0					
ANR	1025981	Identifier	TMP_REG2		1024889	1					
ANR	1025982	ElseStatement	else		1024889	0					
ANR	1025983	CompoundStatement		135:7:4342:4342	1024889	0					
ANR	1025984	IfStatement	if ( arg1 == 0 )		1024889	0					
ANR	1025985	Condition	arg1 == 0	651:7:19034:19042	1024889	0	True				
ANR	1025986	EqualityExpression	arg1 == 0		1024889	0		==			
ANR	1025987	Identifier	arg1		1024889	0					
ANR	1025988	PrimaryExpression	0		1024889	1					
ANR	1025989	ExpressionStatement	arg1 = TMP_ZERO	652:4:19049:19064	1024889	1	True				
ANR	1025990	AssignmentExpression	arg1 = TMP_ZERO		1024889	0		=			
ANR	1025991	Identifier	arg1		1024889	0					
ANR	1025992	Identifier	TMP_ZERO		1024889	1					
ANR	1025993	ElseStatement	else		1024889	0					
ANR	1025994	CompoundStatement		138:8:4391:4391	1024889	0					
ANR	1025995	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"	654:4:19080:19129	1024889	0	True				
ANR	1025996	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"		1024889	0					
ANR	1025997	Callee	FAIL_IF		1024889	0					
ANR	1025998	Identifier	FAIL_IF		1024889	0					
ANR	1025999	ArgumentList	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1024889	1					
ANR	1026000	Argument	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1024889	0					
ANR	1026001	CallExpression	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1024889	0					
ANR	1026002	Callee	load_immediate		1024889	0					
ANR	1026003	Identifier	load_immediate		1024889	0					
ANR	1026004	ArgumentList	compiler		1024889	1					
ANR	1026005	Argument	compiler		1024889	0					
ANR	1026006	Identifier	compiler		1024889	0					
ANR	1026007	Argument	TMP_REG1		1024889	1					
ANR	1026008	Identifier	TMP_REG1		1024889	0					
ANR	1026009	Argument	arg1		1024889	2					
ANR	1026010	Identifier	arg1		1024889	0					
ANR	1026011	ExpressionStatement	arg1 = TMP_REG1	655:4:19135:19150	1024889	1	True				
ANR	1026012	AssignmentExpression	arg1 = TMP_REG1		1024889	0		=			
ANR	1026013	Identifier	arg1		1024889	0					
ANR	1026014	Identifier	TMP_REG1		1024889	1					
ANR	1026015	SwitchStatement	switch ( op )		1024889	7					
ANR	1026016	Condition	op	661:9:19211:19212	1024889	0	True				
ANR	1026017	Identifier	op		1024889	0					
ANR	1026018	CompoundStatement		146:13:4532:4532	1024889	1					
ANR	1026019	Label	case SLJIT_MOV :	662:1:19218:19232	1024889	0	True				
ANR	1026020	Identifier	SLJIT_MOV		1024889	0					
ANR	1026021	Label	case SLJIT_MOV_P :	663:1:19235:19251	1024889	1	True				
ANR	1026022	Identifier	SLJIT_MOV_P		1024889	0					
ANR	1026023	Label	case SLJIT_MOVU :	664:1:19254:19269	1024889	2	True				
ANR	1026024	Identifier	SLJIT_MOVU		1024889	0					
ANR	1026025	Label	case SLJIT_MOVU_P :	665:1:19272:19289	1024889	3	True				
ANR	1026026	Identifier	SLJIT_MOVU_P		1024889	0					
ANR	1026027	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	666:2:19293:19347	1024889	4	True				
ANR	1026028	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1026029	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026030	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026031	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	1					
ANR	1026032	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0					
ANR	1026033	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1026034	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026035	UnaryOperator	!		1024889	0					
ANR	1026036	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026037	Identifier	flags		1024889	0					
ANR	1026038	Identifier	SET_FLAGS		1024889	1					
ANR	1026039	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1026040	Identifier	arg1		1024889	0					
ANR	1026041	Identifier	TMP_REG1		1024889	1					
ANR	1026042	IfStatement	if ( dst == arg2 )		1024889	5					
ANR	1026043	Condition	dst == arg2	667:6:19355:19365	1024889	0	True				
ANR	1026044	EqualityExpression	dst == arg2		1024889	0		==			
ANR	1026045	Identifier	dst		1024889	0					
ANR	1026046	Identifier	arg2		1024889	1					
ANR	1026047	ReturnStatement	return SLJIT_SUCCESS ;	668:3:19371:19391	1024889	1	True				
ANR	1026048	Identifier	SLJIT_SUCCESS		1024889	0					
ANR	1026049	ReturnStatement	"return push_inst ( compiler , ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) ) ;"	669:2:19395:19462	1024889	6	True				
ANR	1026050	CallExpression	"push_inst ( compiler , ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) )"		1024889	0					
ANR	1026051	Callee	push_inst		1024889	0					
ANR	1026052	Identifier	push_inst		1024889	0					
ANR	1026053	ArgumentList	compiler		1024889	1					
ANR	1026054	Argument	compiler		1024889	0					
ANR	1026055	Identifier	compiler		1024889	0					
ANR	1026056	Argument	ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1					
ANR	1026057	InclusiveOrExpression	ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	0		|			
ANR	1026058	Identifier	ORR		1024889	0					
ANR	1026059	InclusiveOrExpression	RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026060	CallExpression	RD ( dst )		1024889	0					
ANR	1026061	Callee	RD		1024889	0					
ANR	1026062	Identifier	RD		1024889	0					
ANR	1026063	ArgumentList	dst		1024889	1					
ANR	1026064	Argument	dst		1024889	0					
ANR	1026065	Identifier	dst		1024889	0					
ANR	1026066	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026067	CallExpression	RN ( TMP_ZERO )		1024889	0					
ANR	1026068	Callee	RN		1024889	0					
ANR	1026069	Identifier	RN		1024889	0					
ANR	1026070	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026071	Argument	TMP_ZERO		1024889	0					
ANR	1026072	Identifier	TMP_ZERO		1024889	0					
ANR	1026073	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026074	Callee	RM		1024889	0					
ANR	1026075	Identifier	RM		1024889	0					
ANR	1026076	ArgumentList	arg2		1024889	1					
ANR	1026077	Argument	arg2		1024889	0					
ANR	1026078	Identifier	arg2		1024889	0					
ANR	1026079	Label	case SLJIT_MOV_UB :	670:1:19465:19482	1024889	7	True				
ANR	1026080	Identifier	SLJIT_MOV_UB		1024889	0					
ANR	1026081	Label	case SLJIT_MOVU_UB :	671:1:19485:19503	1024889	8	True				
ANR	1026082	Identifier	SLJIT_MOVU_UB		1024889	0					
ANR	1026083	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	672:2:19507:19561	1024889	9	True				
ANR	1026084	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1026085	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026086	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026087	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	1					
ANR	1026088	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0					
ANR	1026089	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1026090	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026091	UnaryOperator	!		1024889	0					
ANR	1026092	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026093	Identifier	flags		1024889	0					
ANR	1026094	Identifier	SET_FLAGS		1024889	1					
ANR	1026095	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1026096	Identifier	arg1		1024889	0					
ANR	1026097	Identifier	TMP_REG1		1024889	1					
ANR	1026098	ReturnStatement	"return push_inst ( compiler , ( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 ) ) ;"	673:2:19565:19644	1024889	10	True				
ANR	1026099	CallExpression	"push_inst ( compiler , ( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 ) )"		1024889	0					
ANR	1026100	Callee	push_inst		1024889	0					
ANR	1026101	Identifier	push_inst		1024889	0					
ANR	1026102	ArgumentList	compiler		1024889	1					
ANR	1026103	Argument	compiler		1024889	0					
ANR	1026104	Identifier	compiler		1024889	0					
ANR	1026105	Argument	( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 )		1024889	1					
ANR	1026106	InclusiveOrExpression	( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 )		1024889	0		|			
ANR	1026107	ExclusiveOrExpression	UBFM ^ ( 1 << 31 )		1024889	0		^			
ANR	1026108	Identifier	UBFM		1024889	0					
ANR	1026109	ShiftExpression	1 << 31		1024889	1		<<			
ANR	1026110	PrimaryExpression	1		1024889	0					
ANR	1026111	PrimaryExpression	31		1024889	1					
ANR	1026112	InclusiveOrExpression	RD ( dst ) | RN ( arg2 ) | ( 7 << 10 )		1024889	1		|			
ANR	1026113	CallExpression	RD ( dst )		1024889	0					
ANR	1026114	Callee	RD		1024889	0					
ANR	1026115	Identifier	RD		1024889	0					
ANR	1026116	ArgumentList	dst		1024889	1					
ANR	1026117	Argument	dst		1024889	0					
ANR	1026118	Identifier	dst		1024889	0					
ANR	1026119	InclusiveOrExpression	RN ( arg2 ) | ( 7 << 10 )		1024889	1		|			
ANR	1026120	CallExpression	RN ( arg2 )		1024889	0					
ANR	1026121	Callee	RN		1024889	0					
ANR	1026122	Identifier	RN		1024889	0					
ANR	1026123	ArgumentList	arg2		1024889	1					
ANR	1026124	Argument	arg2		1024889	0					
ANR	1026125	Identifier	arg2		1024889	0					
ANR	1026126	ShiftExpression	7 << 10		1024889	1		<<			
ANR	1026127	PrimaryExpression	7		1024889	0					
ANR	1026128	PrimaryExpression	10		1024889	1					
ANR	1026129	Label	case SLJIT_MOV_SB :	674:1:19647:19664	1024889	11	True				
ANR	1026130	Identifier	SLJIT_MOV_SB		1024889	0					
ANR	1026131	Label	case SLJIT_MOVU_SB :	675:1:19667:19685	1024889	12	True				
ANR	1026132	Identifier	SLJIT_MOVU_SB		1024889	0					
ANR	1026133	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	676:2:19689:19743	1024889	13	True				
ANR	1026134	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1026135	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026136	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026137	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	1					
ANR	1026138	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0					
ANR	1026139	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1026140	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026141	UnaryOperator	!		1024889	0					
ANR	1026142	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026143	Identifier	flags		1024889	0					
ANR	1026144	Identifier	SET_FLAGS		1024889	1					
ANR	1026145	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1026146	Identifier	arg1		1024889	0					
ANR	1026147	Identifier	TMP_REG1		1024889	1					
ANR	1026148	IfStatement	if ( ! ( flags & INT_OP ) )		1024889	14					
ANR	1026149	Condition	! ( flags & INT_OP )	677:6:19751:19767	1024889	0	True				
ANR	1026150	UnaryOperationExpression	! ( flags & INT_OP )		1024889	0					
ANR	1026151	UnaryOperator	!		1024889	0					
ANR	1026152	BitAndExpression	flags & INT_OP		1024889	1		&			
ANR	1026153	Identifier	flags		1024889	0					
ANR	1026154	Identifier	INT_OP		1024889	1					
ANR	1026155	ExpressionStatement	inv_bits |= 1 << 22	678:3:19773:19792	1024889	1	True				
ANR	1026156	AssignmentExpression	inv_bits |= 1 << 22		1024889	0		|=			
ANR	1026157	Identifier	inv_bits		1024889	0					
ANR	1026158	ShiftExpression	1 << 22		1024889	1		<<			
ANR	1026159	PrimaryExpression	1		1024889	0					
ANR	1026160	PrimaryExpression	22		1024889	1					
ANR	1026161	ReturnStatement	"return push_inst ( compiler , ( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 ) ) ;"	679:2:19796:19874	1024889	15	True				
ANR	1026162	CallExpression	"push_inst ( compiler , ( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 ) )"		1024889	0					
ANR	1026163	Callee	push_inst		1024889	0					
ANR	1026164	Identifier	push_inst		1024889	0					
ANR	1026165	ArgumentList	compiler		1024889	1					
ANR	1026166	Argument	compiler		1024889	0					
ANR	1026167	Identifier	compiler		1024889	0					
ANR	1026168	Argument	( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 )		1024889	1					
ANR	1026169	InclusiveOrExpression	( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 7 << 10 )		1024889	0		|			
ANR	1026170	ExclusiveOrExpression	SBFM ^ inv_bits		1024889	0		^			
ANR	1026171	Identifier	SBFM		1024889	0					
ANR	1026172	Identifier	inv_bits		1024889	1					
ANR	1026173	InclusiveOrExpression	RD ( dst ) | RN ( arg2 ) | ( 7 << 10 )		1024889	1		|			
ANR	1026174	CallExpression	RD ( dst )		1024889	0					
ANR	1026175	Callee	RD		1024889	0					
ANR	1026176	Identifier	RD		1024889	0					
ANR	1026177	ArgumentList	dst		1024889	1					
ANR	1026178	Argument	dst		1024889	0					
ANR	1026179	Identifier	dst		1024889	0					
ANR	1026180	InclusiveOrExpression	RN ( arg2 ) | ( 7 << 10 )		1024889	1		|			
ANR	1026181	CallExpression	RN ( arg2 )		1024889	0					
ANR	1026182	Callee	RN		1024889	0					
ANR	1026183	Identifier	RN		1024889	0					
ANR	1026184	ArgumentList	arg2		1024889	1					
ANR	1026185	Argument	arg2		1024889	0					
ANR	1026186	Identifier	arg2		1024889	0					
ANR	1026187	ShiftExpression	7 << 10		1024889	1		<<			
ANR	1026188	PrimaryExpression	7		1024889	0					
ANR	1026189	PrimaryExpression	10		1024889	1					
ANR	1026190	Label	case SLJIT_MOV_UH :	680:1:19877:19894	1024889	16	True				
ANR	1026191	Identifier	SLJIT_MOV_UH		1024889	0					
ANR	1026192	Label	case SLJIT_MOVU_UH :	681:1:19897:19915	1024889	17	True				
ANR	1026193	Identifier	SLJIT_MOVU_UH		1024889	0					
ANR	1026194	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	682:2:19919:19973	1024889	18	True				
ANR	1026195	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1026196	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026197	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026198	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	1					
ANR	1026199	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0					
ANR	1026200	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1026201	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026202	UnaryOperator	!		1024889	0					
ANR	1026203	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026204	Identifier	flags		1024889	0					
ANR	1026205	Identifier	SET_FLAGS		1024889	1					
ANR	1026206	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1026207	Identifier	arg1		1024889	0					
ANR	1026208	Identifier	TMP_REG1		1024889	1					
ANR	1026209	ReturnStatement	"return push_inst ( compiler , ( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 ) ) ;"	683:2:19977:20057	1024889	19	True				
ANR	1026210	CallExpression	"push_inst ( compiler , ( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 ) )"		1024889	0					
ANR	1026211	Callee	push_inst		1024889	0					
ANR	1026212	Identifier	push_inst		1024889	0					
ANR	1026213	ArgumentList	compiler		1024889	1					
ANR	1026214	Argument	compiler		1024889	0					
ANR	1026215	Identifier	compiler		1024889	0					
ANR	1026216	Argument	( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 )		1024889	1					
ANR	1026217	InclusiveOrExpression	( UBFM ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 )		1024889	0		|			
ANR	1026218	ExclusiveOrExpression	UBFM ^ ( 1 << 31 )		1024889	0		^			
ANR	1026219	Identifier	UBFM		1024889	0					
ANR	1026220	ShiftExpression	1 << 31		1024889	1		<<			
ANR	1026221	PrimaryExpression	1		1024889	0					
ANR	1026222	PrimaryExpression	31		1024889	1					
ANR	1026223	InclusiveOrExpression	RD ( dst ) | RN ( arg2 ) | ( 15 << 10 )		1024889	1		|			
ANR	1026224	CallExpression	RD ( dst )		1024889	0					
ANR	1026225	Callee	RD		1024889	0					
ANR	1026226	Identifier	RD		1024889	0					
ANR	1026227	ArgumentList	dst		1024889	1					
ANR	1026228	Argument	dst		1024889	0					
ANR	1026229	Identifier	dst		1024889	0					
ANR	1026230	InclusiveOrExpression	RN ( arg2 ) | ( 15 << 10 )		1024889	1		|			
ANR	1026231	CallExpression	RN ( arg2 )		1024889	0					
ANR	1026232	Callee	RN		1024889	0					
ANR	1026233	Identifier	RN		1024889	0					
ANR	1026234	ArgumentList	arg2		1024889	1					
ANR	1026235	Argument	arg2		1024889	0					
ANR	1026236	Identifier	arg2		1024889	0					
ANR	1026237	ShiftExpression	15 << 10		1024889	1		<<			
ANR	1026238	PrimaryExpression	15		1024889	0					
ANR	1026239	PrimaryExpression	10		1024889	1					
ANR	1026240	Label	case SLJIT_MOV_SH :	684:1:20060:20077	1024889	20	True				
ANR	1026241	Identifier	SLJIT_MOV_SH		1024889	0					
ANR	1026242	Label	case SLJIT_MOVU_SH :	685:1:20080:20098	1024889	21	True				
ANR	1026243	Identifier	SLJIT_MOVU_SH		1024889	0					
ANR	1026244	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	686:2:20102:20156	1024889	22	True				
ANR	1026245	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1026246	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026247	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026248	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	1					
ANR	1026249	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0					
ANR	1026250	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1026251	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026252	UnaryOperator	!		1024889	0					
ANR	1026253	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026254	Identifier	flags		1024889	0					
ANR	1026255	Identifier	SET_FLAGS		1024889	1					
ANR	1026256	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1026257	Identifier	arg1		1024889	0					
ANR	1026258	Identifier	TMP_REG1		1024889	1					
ANR	1026259	IfStatement	if ( ! ( flags & INT_OP ) )		1024889	23					
ANR	1026260	Condition	! ( flags & INT_OP )	687:6:20164:20180	1024889	0	True				
ANR	1026261	UnaryOperationExpression	! ( flags & INT_OP )		1024889	0					
ANR	1026262	UnaryOperator	!		1024889	0					
ANR	1026263	BitAndExpression	flags & INT_OP		1024889	1		&			
ANR	1026264	Identifier	flags		1024889	0					
ANR	1026265	Identifier	INT_OP		1024889	1					
ANR	1026266	ExpressionStatement	inv_bits |= 1 << 22	688:3:20186:20205	1024889	1	True				
ANR	1026267	AssignmentExpression	inv_bits |= 1 << 22		1024889	0		|=			
ANR	1026268	Identifier	inv_bits		1024889	0					
ANR	1026269	ShiftExpression	1 << 22		1024889	1		<<			
ANR	1026270	PrimaryExpression	1		1024889	0					
ANR	1026271	PrimaryExpression	22		1024889	1					
ANR	1026272	ReturnStatement	"return push_inst ( compiler , ( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 ) ) ;"	689:2:20209:20288	1024889	24	True				
ANR	1026273	CallExpression	"push_inst ( compiler , ( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 ) )"		1024889	0					
ANR	1026274	Callee	push_inst		1024889	0					
ANR	1026275	Identifier	push_inst		1024889	0					
ANR	1026276	ArgumentList	compiler		1024889	1					
ANR	1026277	Argument	compiler		1024889	0					
ANR	1026278	Identifier	compiler		1024889	0					
ANR	1026279	Argument	( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 )		1024889	1					
ANR	1026280	InclusiveOrExpression	( SBFM ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) | ( 15 << 10 )		1024889	0		|			
ANR	1026281	ExclusiveOrExpression	SBFM ^ inv_bits		1024889	0		^			
ANR	1026282	Identifier	SBFM		1024889	0					
ANR	1026283	Identifier	inv_bits		1024889	1					
ANR	1026284	InclusiveOrExpression	RD ( dst ) | RN ( arg2 ) | ( 15 << 10 )		1024889	1		|			
ANR	1026285	CallExpression	RD ( dst )		1024889	0					
ANR	1026286	Callee	RD		1024889	0					
ANR	1026287	Identifier	RD		1024889	0					
ANR	1026288	ArgumentList	dst		1024889	1					
ANR	1026289	Argument	dst		1024889	0					
ANR	1026290	Identifier	dst		1024889	0					
ANR	1026291	InclusiveOrExpression	RN ( arg2 ) | ( 15 << 10 )		1024889	1		|			
ANR	1026292	CallExpression	RN ( arg2 )		1024889	0					
ANR	1026293	Callee	RN		1024889	0					
ANR	1026294	Identifier	RN		1024889	0					
ANR	1026295	ArgumentList	arg2		1024889	1					
ANR	1026296	Argument	arg2		1024889	0					
ANR	1026297	Identifier	arg2		1024889	0					
ANR	1026298	ShiftExpression	15 << 10		1024889	1		<<			
ANR	1026299	PrimaryExpression	15		1024889	0					
ANR	1026300	PrimaryExpression	10		1024889	1					
ANR	1026301	Label	case SLJIT_MOV_UI :	690:1:20291:20308	1024889	25	True				
ANR	1026302	Identifier	SLJIT_MOV_UI		1024889	0					
ANR	1026303	Label	case SLJIT_MOVU_UI :	691:1:20311:20329	1024889	26	True				
ANR	1026304	Identifier	SLJIT_MOVU_UI		1024889	0					
ANR	1026305	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	692:2:20333:20387	1024889	27	True				
ANR	1026306	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1026307	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026308	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026309	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	1					
ANR	1026310	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0					
ANR	1026311	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1026312	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026313	UnaryOperator	!		1024889	0					
ANR	1026314	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026315	Identifier	flags		1024889	0					
ANR	1026316	Identifier	SET_FLAGS		1024889	1					
ANR	1026317	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1026318	Identifier	arg1		1024889	0					
ANR	1026319	Identifier	TMP_REG1		1024889	1					
ANR	1026320	IfStatement	if ( ( flags & INT_OP ) && dst == arg2 )		1024889	28					
ANR	1026321	Condition	( flags & INT_OP ) && dst == arg2	693:6:20395:20425	1024889	0	True				
ANR	1026322	AndExpression	( flags & INT_OP ) && dst == arg2		1024889	0		&&			
ANR	1026323	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1026324	Identifier	flags		1024889	0					
ANR	1026325	Identifier	INT_OP		1024889	1					
ANR	1026326	EqualityExpression	dst == arg2		1024889	1		==			
ANR	1026327	Identifier	dst		1024889	0					
ANR	1026328	Identifier	arg2		1024889	1					
ANR	1026329	ReturnStatement	return SLJIT_SUCCESS ;	694:3:20431:20451	1024889	1	True				
ANR	1026330	Identifier	SLJIT_SUCCESS		1024889	0					
ANR	1026331	ReturnStatement	"return push_inst ( compiler , ( ORR ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) ) ;"	695:2:20455:20536	1024889	29	True				
ANR	1026332	CallExpression	"push_inst ( compiler , ( ORR ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) )"		1024889	0					
ANR	1026333	Callee	push_inst		1024889	0					
ANR	1026334	Identifier	push_inst		1024889	0					
ANR	1026335	ArgumentList	compiler		1024889	1					
ANR	1026336	Argument	compiler		1024889	0					
ANR	1026337	Identifier	compiler		1024889	0					
ANR	1026338	Argument	( ORR ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1					
ANR	1026339	InclusiveOrExpression	( ORR ^ ( 1 << 31 ) ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	0		|			
ANR	1026340	ExclusiveOrExpression	ORR ^ ( 1 << 31 )		1024889	0		^			
ANR	1026341	Identifier	ORR		1024889	0					
ANR	1026342	ShiftExpression	1 << 31		1024889	1		<<			
ANR	1026343	PrimaryExpression	1		1024889	0					
ANR	1026344	PrimaryExpression	31		1024889	1					
ANR	1026345	InclusiveOrExpression	RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026346	CallExpression	RD ( dst )		1024889	0					
ANR	1026347	Callee	RD		1024889	0					
ANR	1026348	Identifier	RD		1024889	0					
ANR	1026349	ArgumentList	dst		1024889	1					
ANR	1026350	Argument	dst		1024889	0					
ANR	1026351	Identifier	dst		1024889	0					
ANR	1026352	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026353	CallExpression	RN ( TMP_ZERO )		1024889	0					
ANR	1026354	Callee	RN		1024889	0					
ANR	1026355	Identifier	RN		1024889	0					
ANR	1026356	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026357	Argument	TMP_ZERO		1024889	0					
ANR	1026358	Identifier	TMP_ZERO		1024889	0					
ANR	1026359	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026360	Callee	RM		1024889	0					
ANR	1026361	Identifier	RM		1024889	0					
ANR	1026362	ArgumentList	arg2		1024889	1					
ANR	1026363	Argument	arg2		1024889	0					
ANR	1026364	Identifier	arg2		1024889	0					
ANR	1026365	Label	case SLJIT_MOV_SI :	696:1:20539:20556	1024889	30	True				
ANR	1026366	Identifier	SLJIT_MOV_SI		1024889	0					
ANR	1026367	Label	case SLJIT_MOVU_SI :	697:1:20559:20577	1024889	31	True				
ANR	1026368	Identifier	SLJIT_MOVU_SI		1024889	0					
ANR	1026369	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	698:2:20581:20635	1024889	32	True				
ANR	1026370	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1024889	0					
ANR	1026371	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026372	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026373	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	1					
ANR	1026374	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0					
ANR	1026375	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1024889	0		&&			
ANR	1026376	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026377	UnaryOperator	!		1024889	0					
ANR	1026378	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026379	Identifier	flags		1024889	0					
ANR	1026380	Identifier	SET_FLAGS		1024889	1					
ANR	1026381	EqualityExpression	arg1 == TMP_REG1		1024889	1		==			
ANR	1026382	Identifier	arg1		1024889	0					
ANR	1026383	Identifier	TMP_REG1		1024889	1					
ANR	1026384	IfStatement	if ( ( flags & INT_OP ) && dst == arg2 )		1024889	33					
ANR	1026385	Condition	( flags & INT_OP ) && dst == arg2	699:6:20643:20673	1024889	0	True				
ANR	1026386	AndExpression	( flags & INT_OP ) && dst == arg2		1024889	0		&&			
ANR	1026387	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1026388	Identifier	flags		1024889	0					
ANR	1026389	Identifier	INT_OP		1024889	1					
ANR	1026390	EqualityExpression	dst == arg2		1024889	1		==			
ANR	1026391	Identifier	dst		1024889	0					
ANR	1026392	Identifier	arg2		1024889	1					
ANR	1026393	ReturnStatement	return SLJIT_SUCCESS ;	700:3:20679:20699	1024889	1	True				
ANR	1026394	Identifier	SLJIT_SUCCESS		1024889	0					
ANR	1026395	ReturnStatement	"return push_inst ( compiler , SBFM | ( 1 << 22 ) | RD ( dst ) | RN ( arg2 ) | ( 31 << 10 ) ) ;"	701:2:20703:20781	1024889	34	True				
ANR	1026396	CallExpression	"push_inst ( compiler , SBFM | ( 1 << 22 ) | RD ( dst ) | RN ( arg2 ) | ( 31 << 10 ) )"		1024889	0					
ANR	1026397	Callee	push_inst		1024889	0					
ANR	1026398	Identifier	push_inst		1024889	0					
ANR	1026399	ArgumentList	compiler		1024889	1					
ANR	1026400	Argument	compiler		1024889	0					
ANR	1026401	Identifier	compiler		1024889	0					
ANR	1026402	Argument	SBFM | ( 1 << 22 ) | RD ( dst ) | RN ( arg2 ) | ( 31 << 10 )		1024889	1					
ANR	1026403	InclusiveOrExpression	SBFM | ( 1 << 22 ) | RD ( dst ) | RN ( arg2 ) | ( 31 << 10 )		1024889	0		|			
ANR	1026404	Identifier	SBFM		1024889	0					
ANR	1026405	InclusiveOrExpression	( 1 << 22 ) | RD ( dst ) | RN ( arg2 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026406	ShiftExpression	1 << 22		1024889	0		<<			
ANR	1026407	PrimaryExpression	1		1024889	0					
ANR	1026408	PrimaryExpression	22		1024889	1					
ANR	1026409	InclusiveOrExpression	RD ( dst ) | RN ( arg2 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026410	CallExpression	RD ( dst )		1024889	0					
ANR	1026411	Callee	RD		1024889	0					
ANR	1026412	Identifier	RD		1024889	0					
ANR	1026413	ArgumentList	dst		1024889	1					
ANR	1026414	Argument	dst		1024889	0					
ANR	1026415	Identifier	dst		1024889	0					
ANR	1026416	InclusiveOrExpression	RN ( arg2 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026417	CallExpression	RN ( arg2 )		1024889	0					
ANR	1026418	Callee	RN		1024889	0					
ANR	1026419	Identifier	RN		1024889	0					
ANR	1026420	ArgumentList	arg2		1024889	1					
ANR	1026421	Argument	arg2		1024889	0					
ANR	1026422	Identifier	arg2		1024889	0					
ANR	1026423	ShiftExpression	31 << 10		1024889	1		<<			
ANR	1026424	PrimaryExpression	31		1024889	0					
ANR	1026425	PrimaryExpression	10		1024889	1					
ANR	1026426	Label	case SLJIT_NOT :	702:1:20784:20798	1024889	35	True				
ANR	1026427	Identifier	SLJIT_NOT		1024889	0					
ANR	1026428	ExpressionStatement	SLJIT_ASSERT ( arg1 == TMP_REG1 )	703:2:20802:20832	1024889	36	True				
ANR	1026429	CallExpression	SLJIT_ASSERT ( arg1 == TMP_REG1 )		1024889	0					
ANR	1026430	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026431	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026432	ArgumentList	arg1 == TMP_REG1		1024889	1					
ANR	1026433	Argument	arg1 == TMP_REG1		1024889	0					
ANR	1026434	EqualityExpression	arg1 == TMP_REG1		1024889	0		==			
ANR	1026435	Identifier	arg1		1024889	0					
ANR	1026436	Identifier	TMP_REG1		1024889	1					
ANR	1026437	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ORN ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) ) )"	704:2:20836:20918	1024889	37	True				
ANR	1026438	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ORN ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) ) )"		1024889	0					
ANR	1026439	Callee	FAIL_IF		1024889	0					
ANR	1026440	Identifier	FAIL_IF		1024889	0					
ANR	1026441	ArgumentList	"push_inst ( compiler , ( ORN ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) )"		1024889	1					
ANR	1026442	Argument	"push_inst ( compiler , ( ORN ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) )"		1024889	0					
ANR	1026443	CallExpression	"push_inst ( compiler , ( ORN ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) )"		1024889	0					
ANR	1026444	Callee	push_inst		1024889	0					
ANR	1026445	Identifier	push_inst		1024889	0					
ANR	1026446	ArgumentList	compiler		1024889	1					
ANR	1026447	Argument	compiler		1024889	0					
ANR	1026448	Identifier	compiler		1024889	0					
ANR	1026449	Argument	( ORN ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1					
ANR	1026450	InclusiveOrExpression	( ORN ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	0		|			
ANR	1026451	ExclusiveOrExpression	ORN ^ inv_bits		1024889	0		^			
ANR	1026452	Identifier	ORN		1024889	0					
ANR	1026453	Identifier	inv_bits		1024889	1					
ANR	1026454	InclusiveOrExpression	RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026455	CallExpression	RD ( dst )		1024889	0					
ANR	1026456	Callee	RD		1024889	0					
ANR	1026457	Identifier	RD		1024889	0					
ANR	1026458	ArgumentList	dst		1024889	1					
ANR	1026459	Argument	dst		1024889	0					
ANR	1026460	Identifier	dst		1024889	0					
ANR	1026461	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026462	CallExpression	RN ( TMP_ZERO )		1024889	0					
ANR	1026463	Callee	RN		1024889	0					
ANR	1026464	Identifier	RN		1024889	0					
ANR	1026465	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026466	Argument	TMP_ZERO		1024889	0					
ANR	1026467	Identifier	TMP_ZERO		1024889	0					
ANR	1026468	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026469	Callee	RM		1024889	0					
ANR	1026470	Identifier	RM		1024889	0					
ANR	1026471	ArgumentList	arg2		1024889	1					
ANR	1026472	Argument	arg2		1024889	0					
ANR	1026473	Identifier	arg2		1024889	0					
ANR	1026474	GotoStatement	goto set_flags ;	705:2:20922:20936	1024889	38	True				
ANR	1026475	Identifier	set_flags		1024889	0					
ANR	1026476	Label	case SLJIT_NEG :	706:1:20939:20953	1024889	39	True				
ANR	1026477	Identifier	SLJIT_NEG		1024889	0					
ANR	1026478	ExpressionStatement	SLJIT_ASSERT ( arg1 == TMP_REG1 )	707:2:20957:20987	1024889	40	True				
ANR	1026479	CallExpression	SLJIT_ASSERT ( arg1 == TMP_REG1 )		1024889	0					
ANR	1026480	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026481	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026482	ArgumentList	arg1 == TMP_REG1		1024889	1					
ANR	1026483	Argument	arg1 == TMP_REG1		1024889	0					
ANR	1026484	EqualityExpression	arg1 == TMP_REG1		1024889	0		==			
ANR	1026485	Identifier	arg1		1024889	0					
ANR	1026486	Identifier	TMP_REG1		1024889	1					
ANR	1026487	IfStatement	if ( flags & SET_FLAGS )		1024889	41					
ANR	1026488	Condition	flags & SET_FLAGS	708:6:20995:21011	1024889	0	True				
ANR	1026489	BitAndExpression	flags & SET_FLAGS		1024889	0		&			
ANR	1026490	Identifier	flags		1024889	0					
ANR	1026491	Identifier	SET_FLAGS		1024889	1					
ANR	1026492	ExpressionStatement	inv_bits |= 1 << 29	709:3:21017:21036	1024889	1	True				
ANR	1026493	AssignmentExpression	inv_bits |= 1 << 29		1024889	0		|=			
ANR	1026494	Identifier	inv_bits		1024889	0					
ANR	1026495	ShiftExpression	1 << 29		1024889	1		<<			
ANR	1026496	PrimaryExpression	1		1024889	0					
ANR	1026497	PrimaryExpression	29		1024889	1					
ANR	1026498	ReturnStatement	"return push_inst ( compiler , ( SUB ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) ) ;"	710:2:21040:21120	1024889	42	True				
ANR	1026499	CallExpression	"push_inst ( compiler , ( SUB ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 ) )"		1024889	0					
ANR	1026500	Callee	push_inst		1024889	0					
ANR	1026501	Identifier	push_inst		1024889	0					
ANR	1026502	ArgumentList	compiler		1024889	1					
ANR	1026503	Argument	compiler		1024889	0					
ANR	1026504	Identifier	compiler		1024889	0					
ANR	1026505	Argument	( SUB ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1					
ANR	1026506	InclusiveOrExpression	( SUB ^ inv_bits ) | RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	0		|			
ANR	1026507	ExclusiveOrExpression	SUB ^ inv_bits		1024889	0		^			
ANR	1026508	Identifier	SUB		1024889	0					
ANR	1026509	Identifier	inv_bits		1024889	1					
ANR	1026510	InclusiveOrExpression	RD ( dst ) | RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026511	CallExpression	RD ( dst )		1024889	0					
ANR	1026512	Callee	RD		1024889	0					
ANR	1026513	Identifier	RD		1024889	0					
ANR	1026514	ArgumentList	dst		1024889	1					
ANR	1026515	Argument	dst		1024889	0					
ANR	1026516	Identifier	dst		1024889	0					
ANR	1026517	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( arg2 )		1024889	1		|			
ANR	1026518	CallExpression	RN ( TMP_ZERO )		1024889	0					
ANR	1026519	Callee	RN		1024889	0					
ANR	1026520	Identifier	RN		1024889	0					
ANR	1026521	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026522	Argument	TMP_ZERO		1024889	0					
ANR	1026523	Identifier	TMP_ZERO		1024889	0					
ANR	1026524	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026525	Callee	RM		1024889	0					
ANR	1026526	Identifier	RM		1024889	0					
ANR	1026527	ArgumentList	arg2		1024889	1					
ANR	1026528	Argument	arg2		1024889	0					
ANR	1026529	Identifier	arg2		1024889	0					
ANR	1026530	Label	case SLJIT_CLZ :	711:1:21123:21137	1024889	43	True				
ANR	1026531	Identifier	SLJIT_CLZ		1024889	0					
ANR	1026532	ExpressionStatement	SLJIT_ASSERT ( arg1 == TMP_REG1 )	712:2:21141:21171	1024889	44	True				
ANR	1026533	CallExpression	SLJIT_ASSERT ( arg1 == TMP_REG1 )		1024889	0					
ANR	1026534	Callee	SLJIT_ASSERT		1024889	0					
ANR	1026535	Identifier	SLJIT_ASSERT		1024889	0					
ANR	1026536	ArgumentList	arg1 == TMP_REG1		1024889	1					
ANR	1026537	Argument	arg1 == TMP_REG1		1024889	0					
ANR	1026538	EqualityExpression	arg1 == TMP_REG1		1024889	0		==			
ANR	1026539	Identifier	arg1		1024889	0					
ANR	1026540	Identifier	TMP_REG1		1024889	1					
ANR	1026541	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( CLZ ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) ) )"	713:2:21175:21242	1024889	45	True				
ANR	1026542	CallExpression	"FAIL_IF ( push_inst ( compiler , ( CLZ ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) ) )"		1024889	0					
ANR	1026543	Callee	FAIL_IF		1024889	0					
ANR	1026544	Identifier	FAIL_IF		1024889	0					
ANR	1026545	ArgumentList	"push_inst ( compiler , ( CLZ ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) )"		1024889	1					
ANR	1026546	Argument	"push_inst ( compiler , ( CLZ ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) )"		1024889	0					
ANR	1026547	CallExpression	"push_inst ( compiler , ( CLZ ^ inv_bits ) | RD ( dst ) | RN ( arg2 ) )"		1024889	0					
ANR	1026548	Callee	push_inst		1024889	0					
ANR	1026549	Identifier	push_inst		1024889	0					
ANR	1026550	ArgumentList	compiler		1024889	1					
ANR	1026551	Argument	compiler		1024889	0					
ANR	1026552	Identifier	compiler		1024889	0					
ANR	1026553	Argument	( CLZ ^ inv_bits ) | RD ( dst ) | RN ( arg2 )		1024889	1					
ANR	1026554	InclusiveOrExpression	( CLZ ^ inv_bits ) | RD ( dst ) | RN ( arg2 )		1024889	0		|			
ANR	1026555	ExclusiveOrExpression	CLZ ^ inv_bits		1024889	0		^			
ANR	1026556	Identifier	CLZ		1024889	0					
ANR	1026557	Identifier	inv_bits		1024889	1					
ANR	1026558	InclusiveOrExpression	RD ( dst ) | RN ( arg2 )		1024889	1		|			
ANR	1026559	CallExpression	RD ( dst )		1024889	0					
ANR	1026560	Callee	RD		1024889	0					
ANR	1026561	Identifier	RD		1024889	0					
ANR	1026562	ArgumentList	dst		1024889	1					
ANR	1026563	Argument	dst		1024889	0					
ANR	1026564	Identifier	dst		1024889	0					
ANR	1026565	CallExpression	RN ( arg2 )		1024889	1					
ANR	1026566	Callee	RN		1024889	0					
ANR	1026567	Identifier	RN		1024889	0					
ANR	1026568	ArgumentList	arg2		1024889	1					
ANR	1026569	Argument	arg2		1024889	0					
ANR	1026570	Identifier	arg2		1024889	0					
ANR	1026571	GotoStatement	goto set_flags ;	714:2:21246:21260	1024889	46	True				
ANR	1026572	Identifier	set_flags		1024889	0					
ANR	1026573	Label	case SLJIT_ADD :	715:1:21263:21277	1024889	47	True				
ANR	1026574	Identifier	SLJIT_ADD		1024889	0					
ANR	1026575	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	716:2:21281:21301	1024889	48	True				
ANR	1026576	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1026577	Callee	CHECK_FLAGS		1024889	0					
ANR	1026578	Identifier	CHECK_FLAGS		1024889	0					
ANR	1026579	ArgumentList	1 << 29		1024889	1					
ANR	1026580	Argument	1 << 29		1024889	0					
ANR	1026581	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1026582	PrimaryExpression	1		1024889	0					
ANR	1026583	PrimaryExpression	29		1024889	1					
ANR	1026584	ReturnStatement	"return push_inst ( compiler , ( ADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) ;"	717:2:21305:21381	1024889	49	True				
ANR	1026585	CallExpression	"push_inst ( compiler , ( ADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1026586	Callee	push_inst		1024889	0					
ANR	1026587	Identifier	push_inst		1024889	0					
ANR	1026588	ArgumentList	compiler		1024889	1					
ANR	1026589	Argument	compiler		1024889	0					
ANR	1026590	Identifier	compiler		1024889	0					
ANR	1026591	Argument	( ADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1026592	InclusiveOrExpression	( ADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1026593	ExclusiveOrExpression	ADD ^ inv_bits		1024889	0		^			
ANR	1026594	Identifier	ADD		1024889	0					
ANR	1026595	Identifier	inv_bits		1024889	1					
ANR	1026596	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026597	CallExpression	RD ( dst )		1024889	0					
ANR	1026598	Callee	RD		1024889	0					
ANR	1026599	Identifier	RD		1024889	0					
ANR	1026600	ArgumentList	dst		1024889	1					
ANR	1026601	Argument	dst		1024889	0					
ANR	1026602	Identifier	dst		1024889	0					
ANR	1026603	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026604	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026605	Callee	RN		1024889	0					
ANR	1026606	Identifier	RN		1024889	0					
ANR	1026607	ArgumentList	arg1		1024889	1					
ANR	1026608	Argument	arg1		1024889	0					
ANR	1026609	Identifier	arg1		1024889	0					
ANR	1026610	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026611	Callee	RM		1024889	0					
ANR	1026612	Identifier	RM		1024889	0					
ANR	1026613	ArgumentList	arg2		1024889	1					
ANR	1026614	Argument	arg2		1024889	0					
ANR	1026615	Identifier	arg2		1024889	0					
ANR	1026616	Label	case SLJIT_ADDC :	718:1:21384:21399	1024889	50	True				
ANR	1026617	Identifier	SLJIT_ADDC		1024889	0					
ANR	1026618	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	719:2:21403:21423	1024889	51	True				
ANR	1026619	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1026620	Callee	CHECK_FLAGS		1024889	0					
ANR	1026621	Identifier	CHECK_FLAGS		1024889	0					
ANR	1026622	ArgumentList	1 << 29		1024889	1					
ANR	1026623	Argument	1 << 29		1024889	0					
ANR	1026624	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1026625	PrimaryExpression	1		1024889	0					
ANR	1026626	PrimaryExpression	29		1024889	1					
ANR	1026627	ReturnStatement	"return push_inst ( compiler , ( ADC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) ;"	720:2:21427:21503	1024889	52	True				
ANR	1026628	CallExpression	"push_inst ( compiler , ( ADC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1026629	Callee	push_inst		1024889	0					
ANR	1026630	Identifier	push_inst		1024889	0					
ANR	1026631	ArgumentList	compiler		1024889	1					
ANR	1026632	Argument	compiler		1024889	0					
ANR	1026633	Identifier	compiler		1024889	0					
ANR	1026634	Argument	( ADC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1026635	InclusiveOrExpression	( ADC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1026636	ExclusiveOrExpression	ADC ^ inv_bits		1024889	0		^			
ANR	1026637	Identifier	ADC		1024889	0					
ANR	1026638	Identifier	inv_bits		1024889	1					
ANR	1026639	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026640	CallExpression	RD ( dst )		1024889	0					
ANR	1026641	Callee	RD		1024889	0					
ANR	1026642	Identifier	RD		1024889	0					
ANR	1026643	ArgumentList	dst		1024889	1					
ANR	1026644	Argument	dst		1024889	0					
ANR	1026645	Identifier	dst		1024889	0					
ANR	1026646	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026647	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026648	Callee	RN		1024889	0					
ANR	1026649	Identifier	RN		1024889	0					
ANR	1026650	ArgumentList	arg1		1024889	1					
ANR	1026651	Argument	arg1		1024889	0					
ANR	1026652	Identifier	arg1		1024889	0					
ANR	1026653	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026654	Callee	RM		1024889	0					
ANR	1026655	Identifier	RM		1024889	0					
ANR	1026656	ArgumentList	arg2		1024889	1					
ANR	1026657	Argument	arg2		1024889	0					
ANR	1026658	Identifier	arg2		1024889	0					
ANR	1026659	Label	case SLJIT_SUB :	721:1:21506:21520	1024889	53	True				
ANR	1026660	Identifier	SLJIT_SUB		1024889	0					
ANR	1026661	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	722:2:21524:21544	1024889	54	True				
ANR	1026662	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1026663	Callee	CHECK_FLAGS		1024889	0					
ANR	1026664	Identifier	CHECK_FLAGS		1024889	0					
ANR	1026665	ArgumentList	1 << 29		1024889	1					
ANR	1026666	Argument	1 << 29		1024889	0					
ANR	1026667	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1026668	PrimaryExpression	1		1024889	0					
ANR	1026669	PrimaryExpression	29		1024889	1					
ANR	1026670	ReturnStatement	"return push_inst ( compiler , ( SUB ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) ;"	723:2:21548:21624	1024889	55	True				
ANR	1026671	CallExpression	"push_inst ( compiler , ( SUB ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1026672	Callee	push_inst		1024889	0					
ANR	1026673	Identifier	push_inst		1024889	0					
ANR	1026674	ArgumentList	compiler		1024889	1					
ANR	1026675	Argument	compiler		1024889	0					
ANR	1026676	Identifier	compiler		1024889	0					
ANR	1026677	Argument	( SUB ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1026678	InclusiveOrExpression	( SUB ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1026679	ExclusiveOrExpression	SUB ^ inv_bits		1024889	0		^			
ANR	1026680	Identifier	SUB		1024889	0					
ANR	1026681	Identifier	inv_bits		1024889	1					
ANR	1026682	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026683	CallExpression	RD ( dst )		1024889	0					
ANR	1026684	Callee	RD		1024889	0					
ANR	1026685	Identifier	RD		1024889	0					
ANR	1026686	ArgumentList	dst		1024889	1					
ANR	1026687	Argument	dst		1024889	0					
ANR	1026688	Identifier	dst		1024889	0					
ANR	1026689	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026690	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026691	Callee	RN		1024889	0					
ANR	1026692	Identifier	RN		1024889	0					
ANR	1026693	ArgumentList	arg1		1024889	1					
ANR	1026694	Argument	arg1		1024889	0					
ANR	1026695	Identifier	arg1		1024889	0					
ANR	1026696	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026697	Callee	RM		1024889	0					
ANR	1026698	Identifier	RM		1024889	0					
ANR	1026699	ArgumentList	arg2		1024889	1					
ANR	1026700	Argument	arg2		1024889	0					
ANR	1026701	Identifier	arg2		1024889	0					
ANR	1026702	Label	case SLJIT_SUBC :	724:1:21627:21642	1024889	56	True				
ANR	1026703	Identifier	SLJIT_SUBC		1024889	0					
ANR	1026704	ExpressionStatement	CHECK_FLAGS ( 1 << 29 )	725:2:21646:21666	1024889	57	True				
ANR	1026705	CallExpression	CHECK_FLAGS ( 1 << 29 )		1024889	0					
ANR	1026706	Callee	CHECK_FLAGS		1024889	0					
ANR	1026707	Identifier	CHECK_FLAGS		1024889	0					
ANR	1026708	ArgumentList	1 << 29		1024889	1					
ANR	1026709	Argument	1 << 29		1024889	0					
ANR	1026710	ShiftExpression	1 << 29		1024889	0		<<			
ANR	1026711	PrimaryExpression	1		1024889	0					
ANR	1026712	PrimaryExpression	29		1024889	1					
ANR	1026713	ReturnStatement	"return push_inst ( compiler , ( SBC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) ;"	726:2:21670:21746	1024889	58	True				
ANR	1026714	CallExpression	"push_inst ( compiler , ( SBC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1026715	Callee	push_inst		1024889	0					
ANR	1026716	Identifier	push_inst		1024889	0					
ANR	1026717	ArgumentList	compiler		1024889	1					
ANR	1026718	Argument	compiler		1024889	0					
ANR	1026719	Identifier	compiler		1024889	0					
ANR	1026720	Argument	( SBC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1026721	InclusiveOrExpression	( SBC ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1026722	ExclusiveOrExpression	SBC ^ inv_bits		1024889	0		^			
ANR	1026723	Identifier	SBC		1024889	0					
ANR	1026724	Identifier	inv_bits		1024889	1					
ANR	1026725	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026726	CallExpression	RD ( dst )		1024889	0					
ANR	1026727	Callee	RD		1024889	0					
ANR	1026728	Identifier	RD		1024889	0					
ANR	1026729	ArgumentList	dst		1024889	1					
ANR	1026730	Argument	dst		1024889	0					
ANR	1026731	Identifier	dst		1024889	0					
ANR	1026732	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026733	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026734	Callee	RN		1024889	0					
ANR	1026735	Identifier	RN		1024889	0					
ANR	1026736	ArgumentList	arg1		1024889	1					
ANR	1026737	Argument	arg1		1024889	0					
ANR	1026738	Identifier	arg1		1024889	0					
ANR	1026739	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026740	Callee	RM		1024889	0					
ANR	1026741	Identifier	RM		1024889	0					
ANR	1026742	ArgumentList	arg2		1024889	1					
ANR	1026743	Argument	arg2		1024889	0					
ANR	1026744	Identifier	arg2		1024889	0					
ANR	1026745	Label	case SLJIT_MUL :	727:1:21749:21763	1024889	59	True				
ANR	1026746	Identifier	SLJIT_MUL		1024889	0					
ANR	1026747	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1024889	60					
ANR	1026748	Condition	! ( flags & SET_FLAGS )	728:6:21771:21790	1024889	0	True				
ANR	1026749	UnaryOperationExpression	! ( flags & SET_FLAGS )		1024889	0					
ANR	1026750	UnaryOperator	!		1024889	0					
ANR	1026751	BitAndExpression	flags & SET_FLAGS		1024889	1		&			
ANR	1026752	Identifier	flags		1024889	0					
ANR	1026753	Identifier	SET_FLAGS		1024889	1					
ANR	1026754	ReturnStatement	"return push_inst ( compiler , ( MADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO ) ) ;"	729:3:21796:21889	1024889	1	True				
ANR	1026755	CallExpression	"push_inst ( compiler , ( MADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO ) )"		1024889	0					
ANR	1026756	Callee	push_inst		1024889	0					
ANR	1026757	Identifier	push_inst		1024889	0					
ANR	1026758	ArgumentList	compiler		1024889	1					
ANR	1026759	Argument	compiler		1024889	0					
ANR	1026760	Identifier	compiler		1024889	0					
ANR	1026761	Argument	( MADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1					
ANR	1026762	InclusiveOrExpression	( MADD ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	0		|			
ANR	1026763	ExclusiveOrExpression	MADD ^ inv_bits		1024889	0		^			
ANR	1026764	Identifier	MADD		1024889	0					
ANR	1026765	Identifier	inv_bits		1024889	1					
ANR	1026766	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1		|			
ANR	1026767	CallExpression	RD ( dst )		1024889	0					
ANR	1026768	Callee	RD		1024889	0					
ANR	1026769	Identifier	RD		1024889	0					
ANR	1026770	ArgumentList	dst		1024889	1					
ANR	1026771	Argument	dst		1024889	0					
ANR	1026772	Identifier	dst		1024889	0					
ANR	1026773	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1		|			
ANR	1026774	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026775	Callee	RN		1024889	0					
ANR	1026776	Identifier	RN		1024889	0					
ANR	1026777	ArgumentList	arg1		1024889	1					
ANR	1026778	Argument	arg1		1024889	0					
ANR	1026779	Identifier	arg1		1024889	0					
ANR	1026780	InclusiveOrExpression	RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1		|			
ANR	1026781	CallExpression	RM ( arg2 )		1024889	0					
ANR	1026782	Callee	RM		1024889	0					
ANR	1026783	Identifier	RM		1024889	0					
ANR	1026784	ArgumentList	arg2		1024889	1					
ANR	1026785	Argument	arg2		1024889	0					
ANR	1026786	Identifier	arg2		1024889	0					
ANR	1026787	CallExpression	RT2 ( TMP_ZERO )		1024889	1					
ANR	1026788	Callee	RT2		1024889	0					
ANR	1026789	Identifier	RT2		1024889	0					
ANR	1026790	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026791	Argument	TMP_ZERO		1024889	0					
ANR	1026792	Identifier	TMP_ZERO		1024889	0					
ANR	1026793	IfStatement	if ( flags & INT_OP )		1024889	61					
ANR	1026794	Condition	flags & INT_OP	730:6:21897:21910	1024889	0	True				
ANR	1026795	BitAndExpression	flags & INT_OP		1024889	0		&			
ANR	1026796	Identifier	flags		1024889	0					
ANR	1026797	Identifier	INT_OP		1024889	1					
ANR	1026798	CompoundStatement		215:22:7230:7230	1024889	1					
ANR	1026799	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SMADDL | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 ) ) )"	731:3:21918:21999	1024889	0	True				
ANR	1026800	CallExpression	"FAIL_IF ( push_inst ( compiler , SMADDL | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 ) ) )"		1024889	0					
ANR	1026801	Callee	FAIL_IF		1024889	0					
ANR	1026802	Identifier	FAIL_IF		1024889	0					
ANR	1026803	ArgumentList	"push_inst ( compiler , SMADDL | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 ) )"		1024889	1					
ANR	1026804	Argument	"push_inst ( compiler , SMADDL | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 ) )"		1024889	0					
ANR	1026805	CallExpression	"push_inst ( compiler , SMADDL | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 ) )"		1024889	0					
ANR	1026806	Callee	push_inst		1024889	0					
ANR	1026807	Identifier	push_inst		1024889	0					
ANR	1026808	ArgumentList	compiler		1024889	1					
ANR	1026809	Argument	compiler		1024889	0					
ANR	1026810	Identifier	compiler		1024889	0					
ANR	1026811	Argument	SMADDL | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 )		1024889	1					
ANR	1026812	InclusiveOrExpression	SMADDL | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 )		1024889	0		|			
ANR	1026813	Identifier	SMADDL		1024889	0					
ANR	1026814	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026815	CallExpression	RD ( dst )		1024889	0					
ANR	1026816	Callee	RD		1024889	0					
ANR	1026817	Identifier	RD		1024889	0					
ANR	1026818	ArgumentList	dst		1024889	1					
ANR	1026819	Argument	dst		1024889	0					
ANR	1026820	Identifier	dst		1024889	0					
ANR	1026821	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026822	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026823	Callee	RN		1024889	0					
ANR	1026824	Identifier	RN		1024889	0					
ANR	1026825	ArgumentList	arg1		1024889	1					
ANR	1026826	Argument	arg1		1024889	0					
ANR	1026827	Identifier	arg1		1024889	0					
ANR	1026828	InclusiveOrExpression	RM ( arg2 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026829	CallExpression	RM ( arg2 )		1024889	0					
ANR	1026830	Callee	RM		1024889	0					
ANR	1026831	Identifier	RM		1024889	0					
ANR	1026832	ArgumentList	arg2		1024889	1					
ANR	1026833	Argument	arg2		1024889	0					
ANR	1026834	Identifier	arg2		1024889	0					
ANR	1026835	ShiftExpression	31 << 10		1024889	1		<<			
ANR	1026836	PrimaryExpression	31		1024889	0					
ANR	1026837	PrimaryExpression	10		1024889	1					
ANR	1026838	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 ) ) )"	732:3:22004:22100	1024889	1	True				
ANR	1026839	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 ) ) )"		1024889	0					
ANR	1026840	Callee	FAIL_IF		1024889	0					
ANR	1026841	Identifier	FAIL_IF		1024889	0					
ANR	1026842	ArgumentList	"push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 ) )"		1024889	1					
ANR	1026843	Argument	"push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 ) )"		1024889	0					
ANR	1026844	CallExpression	"push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 ) )"		1024889	0					
ANR	1026845	Callee	push_inst		1024889	0					
ANR	1026846	Identifier	push_inst		1024889	0					
ANR	1026847	ArgumentList	compiler		1024889	1					
ANR	1026848	Argument	compiler		1024889	0					
ANR	1026849	Identifier	compiler		1024889	0					
ANR	1026850	Argument	ADD | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 )		1024889	1					
ANR	1026851	InclusiveOrExpression	ADD | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 )		1024889	0		|			
ANR	1026852	Identifier	ADD		1024889	0					
ANR	1026853	InclusiveOrExpression	RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026854	CallExpression	RD ( TMP_LR )		1024889	0					
ANR	1026855	Callee	RD		1024889	0					
ANR	1026856	Identifier	RD		1024889	0					
ANR	1026857	ArgumentList	TMP_LR		1024889	1					
ANR	1026858	Argument	TMP_LR		1024889	0					
ANR	1026859	Identifier	TMP_LR		1024889	0					
ANR	1026860	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026861	CallExpression	RN ( TMP_ZERO )		1024889	0					
ANR	1026862	Callee	RN		1024889	0					
ANR	1026863	Identifier	RN		1024889	0					
ANR	1026864	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026865	Argument	TMP_ZERO		1024889	0					
ANR	1026866	Identifier	TMP_ZERO		1024889	0					
ANR	1026867	InclusiveOrExpression	RM ( dst ) | ( 2 << 22 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026868	CallExpression	RM ( dst )		1024889	0					
ANR	1026869	Callee	RM		1024889	0					
ANR	1026870	Identifier	RM		1024889	0					
ANR	1026871	ArgumentList	dst		1024889	1					
ANR	1026872	Argument	dst		1024889	0					
ANR	1026873	Identifier	dst		1024889	0					
ANR	1026874	InclusiveOrExpression	( 2 << 22 ) | ( 31 << 10 )		1024889	1		|			
ANR	1026875	ShiftExpression	2 << 22		1024889	0		<<			
ANR	1026876	PrimaryExpression	2		1024889	0					
ANR	1026877	PrimaryExpression	22		1024889	1					
ANR	1026878	ShiftExpression	31 << 10		1024889	1		<<			
ANR	1026879	PrimaryExpression	31		1024889	0					
ANR	1026880	PrimaryExpression	10		1024889	1					
ANR	1026881	ReturnStatement	"return push_inst ( compiler , SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 ) ) ;"	733:3:22105:22200	1024889	2	True				
ANR	1026882	CallExpression	"push_inst ( compiler , SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 ) )"		1024889	0					
ANR	1026883	Callee	push_inst		1024889	0					
ANR	1026884	Identifier	push_inst		1024889	0					
ANR	1026885	ArgumentList	compiler		1024889	1					
ANR	1026886	Argument	compiler		1024889	0					
ANR	1026887	Identifier	compiler		1024889	0					
ANR	1026888	Argument	SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1					
ANR	1026889	InclusiveOrExpression	SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	0		|			
ANR	1026890	Identifier	SUBS		1024889	0					
ANR	1026891	InclusiveOrExpression	RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1026892	CallExpression	RD ( TMP_ZERO )		1024889	0					
ANR	1026893	Callee	RD		1024889	0					
ANR	1026894	Identifier	RD		1024889	0					
ANR	1026895	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026896	Argument	TMP_ZERO		1024889	0					
ANR	1026897	Identifier	TMP_ZERO		1024889	0					
ANR	1026898	InclusiveOrExpression	RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1026899	CallExpression	RN ( TMP_LR )		1024889	0					
ANR	1026900	Callee	RN		1024889	0					
ANR	1026901	Identifier	RN		1024889	0					
ANR	1026902	ArgumentList	TMP_LR		1024889	1					
ANR	1026903	Argument	TMP_LR		1024889	0					
ANR	1026904	Identifier	TMP_LR		1024889	0					
ANR	1026905	InclusiveOrExpression	RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1026906	CallExpression	RM ( dst )		1024889	0					
ANR	1026907	Callee	RM		1024889	0					
ANR	1026908	Identifier	RM		1024889	0					
ANR	1026909	ArgumentList	dst		1024889	1					
ANR	1026910	Argument	dst		1024889	0					
ANR	1026911	Identifier	dst		1024889	0					
ANR	1026912	InclusiveOrExpression	( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1026913	ShiftExpression	2 << 22		1024889	0		<<			
ANR	1026914	PrimaryExpression	2		1024889	0					
ANR	1026915	PrimaryExpression	22		1024889	1					
ANR	1026916	ShiftExpression	63 << 10		1024889	1		<<			
ANR	1026917	PrimaryExpression	63		1024889	0					
ANR	1026918	PrimaryExpression	10		1024889	1					
ANR	1026919	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SMULH | RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 ) ) )"	735:2:22208:22278	1024889	62	True				
ANR	1026920	CallExpression	"FAIL_IF ( push_inst ( compiler , SMULH | RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 ) ) )"		1024889	0					
ANR	1026921	Callee	FAIL_IF		1024889	0					
ANR	1026922	Identifier	FAIL_IF		1024889	0					
ANR	1026923	ArgumentList	"push_inst ( compiler , SMULH | RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	1					
ANR	1026924	Argument	"push_inst ( compiler , SMULH | RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1026925	CallExpression	"push_inst ( compiler , SMULH | RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1026926	Callee	push_inst		1024889	0					
ANR	1026927	Identifier	push_inst		1024889	0					
ANR	1026928	ArgumentList	compiler		1024889	1					
ANR	1026929	Argument	compiler		1024889	0					
ANR	1026930	Identifier	compiler		1024889	0					
ANR	1026931	Argument	SMULH | RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1026932	InclusiveOrExpression	SMULH | RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1026933	Identifier	SMULH		1024889	0					
ANR	1026934	InclusiveOrExpression	RD ( TMP_LR ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026935	CallExpression	RD ( TMP_LR )		1024889	0					
ANR	1026936	Callee	RD		1024889	0					
ANR	1026937	Identifier	RD		1024889	0					
ANR	1026938	ArgumentList	TMP_LR		1024889	1					
ANR	1026939	Argument	TMP_LR		1024889	0					
ANR	1026940	Identifier	TMP_LR		1024889	0					
ANR	1026941	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1026942	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026943	Callee	RN		1024889	0					
ANR	1026944	Identifier	RN		1024889	0					
ANR	1026945	ArgumentList	arg1		1024889	1					
ANR	1026946	Argument	arg1		1024889	0					
ANR	1026947	Identifier	arg1		1024889	0					
ANR	1026948	CallExpression	RM ( arg2 )		1024889	1					
ANR	1026949	Callee	RM		1024889	0					
ANR	1026950	Identifier	RM		1024889	0					
ANR	1026951	ArgumentList	arg2		1024889	1					
ANR	1026952	Argument	arg2		1024889	0					
ANR	1026953	Identifier	arg2		1024889	0					
ANR	1026954	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MADD | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO ) ) )"	736:2:22282:22364	1024889	63	True				
ANR	1026955	CallExpression	"FAIL_IF ( push_inst ( compiler , MADD | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO ) ) )"		1024889	0					
ANR	1026956	Callee	FAIL_IF		1024889	0					
ANR	1026957	Identifier	FAIL_IF		1024889	0					
ANR	1026958	ArgumentList	"push_inst ( compiler , MADD | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO ) )"		1024889	1					
ANR	1026959	Argument	"push_inst ( compiler , MADD | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO ) )"		1024889	0					
ANR	1026960	CallExpression	"push_inst ( compiler , MADD | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO ) )"		1024889	0					
ANR	1026961	Callee	push_inst		1024889	0					
ANR	1026962	Identifier	push_inst		1024889	0					
ANR	1026963	ArgumentList	compiler		1024889	1					
ANR	1026964	Argument	compiler		1024889	0					
ANR	1026965	Identifier	compiler		1024889	0					
ANR	1026966	Argument	MADD | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1					
ANR	1026967	InclusiveOrExpression	MADD | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	0		|			
ANR	1026968	Identifier	MADD		1024889	0					
ANR	1026969	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1		|			
ANR	1026970	CallExpression	RD ( dst )		1024889	0					
ANR	1026971	Callee	RD		1024889	0					
ANR	1026972	Identifier	RD		1024889	0					
ANR	1026973	ArgumentList	dst		1024889	1					
ANR	1026974	Argument	dst		1024889	0					
ANR	1026975	Identifier	dst		1024889	0					
ANR	1026976	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1		|			
ANR	1026977	CallExpression	RN ( arg1 )		1024889	0					
ANR	1026978	Callee	RN		1024889	0					
ANR	1026979	Identifier	RN		1024889	0					
ANR	1026980	ArgumentList	arg1		1024889	1					
ANR	1026981	Argument	arg1		1024889	0					
ANR	1026982	Identifier	arg1		1024889	0					
ANR	1026983	InclusiveOrExpression	RM ( arg2 ) | RT2 ( TMP_ZERO )		1024889	1		|			
ANR	1026984	CallExpression	RM ( arg2 )		1024889	0					
ANR	1026985	Callee	RM		1024889	0					
ANR	1026986	Identifier	RM		1024889	0					
ANR	1026987	ArgumentList	arg2		1024889	1					
ANR	1026988	Argument	arg2		1024889	0					
ANR	1026989	Identifier	arg2		1024889	0					
ANR	1026990	CallExpression	RT2 ( TMP_ZERO )		1024889	1					
ANR	1026991	Callee	RT2		1024889	0					
ANR	1026992	Identifier	RT2		1024889	0					
ANR	1026993	ArgumentList	TMP_ZERO		1024889	1					
ANR	1026994	Argument	TMP_ZERO		1024889	0					
ANR	1026995	Identifier	TMP_ZERO		1024889	0					
ANR	1026996	ReturnStatement	"return push_inst ( compiler , SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 ) ) ;"	737:2:22368:22463	1024889	64	True				
ANR	1026997	CallExpression	"push_inst ( compiler , SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 ) )"		1024889	0					
ANR	1026998	Callee	push_inst		1024889	0					
ANR	1026999	Identifier	push_inst		1024889	0					
ANR	1027000	ArgumentList	compiler		1024889	1					
ANR	1027001	Argument	compiler		1024889	0					
ANR	1027002	Identifier	compiler		1024889	0					
ANR	1027003	Argument	SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1					
ANR	1027004	InclusiveOrExpression	SUBS | RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	0		|			
ANR	1027005	Identifier	SUBS		1024889	0					
ANR	1027006	InclusiveOrExpression	RD ( TMP_ZERO ) | RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1027007	CallExpression	RD ( TMP_ZERO )		1024889	0					
ANR	1027008	Callee	RD		1024889	0					
ANR	1027009	Identifier	RD		1024889	0					
ANR	1027010	ArgumentList	TMP_ZERO		1024889	1					
ANR	1027011	Argument	TMP_ZERO		1024889	0					
ANR	1027012	Identifier	TMP_ZERO		1024889	0					
ANR	1027013	InclusiveOrExpression	RN ( TMP_LR ) | RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1027014	CallExpression	RN ( TMP_LR )		1024889	0					
ANR	1027015	Callee	RN		1024889	0					
ANR	1027016	Identifier	RN		1024889	0					
ANR	1027017	ArgumentList	TMP_LR		1024889	1					
ANR	1027018	Argument	TMP_LR		1024889	0					
ANR	1027019	Identifier	TMP_LR		1024889	0					
ANR	1027020	InclusiveOrExpression	RM ( dst ) | ( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1027021	CallExpression	RM ( dst )		1024889	0					
ANR	1027022	Callee	RM		1024889	0					
ANR	1027023	Identifier	RM		1024889	0					
ANR	1027024	ArgumentList	dst		1024889	1					
ANR	1027025	Argument	dst		1024889	0					
ANR	1027026	Identifier	dst		1024889	0					
ANR	1027027	InclusiveOrExpression	( 2 << 22 ) | ( 63 << 10 )		1024889	1		|			
ANR	1027028	ShiftExpression	2 << 22		1024889	0		<<			
ANR	1027029	PrimaryExpression	2		1024889	0					
ANR	1027030	PrimaryExpression	22		1024889	1					
ANR	1027031	ShiftExpression	63 << 10		1024889	1		<<			
ANR	1027032	PrimaryExpression	63		1024889	0					
ANR	1027033	PrimaryExpression	10		1024889	1					
ANR	1027034	Label	case SLJIT_AND :	738:1:22466:22480	1024889	65	True				
ANR	1027035	Identifier	SLJIT_AND		1024889	0					
ANR	1027036	ExpressionStatement	CHECK_FLAGS ( 3 << 29 )	739:2:22484:22504	1024889	66	True				
ANR	1027037	CallExpression	CHECK_FLAGS ( 3 << 29 )		1024889	0					
ANR	1027038	Callee	CHECK_FLAGS		1024889	0					
ANR	1027039	Identifier	CHECK_FLAGS		1024889	0					
ANR	1027040	ArgumentList	3 << 29		1024889	1					
ANR	1027041	Argument	3 << 29		1024889	0					
ANR	1027042	ShiftExpression	3 << 29		1024889	0		<<			
ANR	1027043	PrimaryExpression	3		1024889	0					
ANR	1027044	PrimaryExpression	29		1024889	1					
ANR	1027045	ReturnStatement	"return push_inst ( compiler , ( AND ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) ;"	740:2:22508:22584	1024889	67	True				
ANR	1027046	CallExpression	"push_inst ( compiler , ( AND ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027047	Callee	push_inst		1024889	0					
ANR	1027048	Identifier	push_inst		1024889	0					
ANR	1027049	ArgumentList	compiler		1024889	1					
ANR	1027050	Argument	compiler		1024889	0					
ANR	1027051	Identifier	compiler		1024889	0					
ANR	1027052	Argument	( AND ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1027053	InclusiveOrExpression	( AND ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1027054	ExclusiveOrExpression	AND ^ inv_bits		1024889	0		^			
ANR	1027055	Identifier	AND		1024889	0					
ANR	1027056	Identifier	inv_bits		1024889	1					
ANR	1027057	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027058	CallExpression	RD ( dst )		1024889	0					
ANR	1027059	Callee	RD		1024889	0					
ANR	1027060	Identifier	RD		1024889	0					
ANR	1027061	ArgumentList	dst		1024889	1					
ANR	1027062	Argument	dst		1024889	0					
ANR	1027063	Identifier	dst		1024889	0					
ANR	1027064	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027065	CallExpression	RN ( arg1 )		1024889	0					
ANR	1027066	Callee	RN		1024889	0					
ANR	1027067	Identifier	RN		1024889	0					
ANR	1027068	ArgumentList	arg1		1024889	1					
ANR	1027069	Argument	arg1		1024889	0					
ANR	1027070	Identifier	arg1		1024889	0					
ANR	1027071	CallExpression	RM ( arg2 )		1024889	1					
ANR	1027072	Callee	RM		1024889	0					
ANR	1027073	Identifier	RM		1024889	0					
ANR	1027074	ArgumentList	arg2		1024889	1					
ANR	1027075	Argument	arg2		1024889	0					
ANR	1027076	Identifier	arg2		1024889	0					
ANR	1027077	Label	case SLJIT_OR :	741:1:22587:22600	1024889	68	True				
ANR	1027078	Identifier	SLJIT_OR		1024889	0					
ANR	1027079	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"	742:2:22604:22682	1024889	69	True				
ANR	1027080	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"		1024889	0					
ANR	1027081	Callee	FAIL_IF		1024889	0					
ANR	1027082	Identifier	FAIL_IF		1024889	0					
ANR	1027083	ArgumentList	"push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	1					
ANR	1027084	Argument	"push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027085	CallExpression	"push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027086	Callee	push_inst		1024889	0					
ANR	1027087	Identifier	push_inst		1024889	0					
ANR	1027088	ArgumentList	compiler		1024889	1					
ANR	1027089	Argument	compiler		1024889	0					
ANR	1027090	Identifier	compiler		1024889	0					
ANR	1027091	Argument	( ORR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1027092	InclusiveOrExpression	( ORR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1027093	ExclusiveOrExpression	ORR ^ inv_bits		1024889	0		^			
ANR	1027094	Identifier	ORR		1024889	0					
ANR	1027095	Identifier	inv_bits		1024889	1					
ANR	1027096	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027097	CallExpression	RD ( dst )		1024889	0					
ANR	1027098	Callee	RD		1024889	0					
ANR	1027099	Identifier	RD		1024889	0					
ANR	1027100	ArgumentList	dst		1024889	1					
ANR	1027101	Argument	dst		1024889	0					
ANR	1027102	Identifier	dst		1024889	0					
ANR	1027103	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027104	CallExpression	RN ( arg1 )		1024889	0					
ANR	1027105	Callee	RN		1024889	0					
ANR	1027106	Identifier	RN		1024889	0					
ANR	1027107	ArgumentList	arg1		1024889	1					
ANR	1027108	Argument	arg1		1024889	0					
ANR	1027109	Identifier	arg1		1024889	0					
ANR	1027110	CallExpression	RM ( arg2 )		1024889	1					
ANR	1027111	Callee	RM		1024889	0					
ANR	1027112	Identifier	RM		1024889	0					
ANR	1027113	ArgumentList	arg2		1024889	1					
ANR	1027114	Argument	arg2		1024889	0					
ANR	1027115	Identifier	arg2		1024889	0					
ANR	1027116	GotoStatement	goto set_flags ;	743:2:22686:22700	1024889	70	True				
ANR	1027117	Identifier	set_flags		1024889	0					
ANR	1027118	Label	case SLJIT_XOR :	744:1:22703:22717	1024889	71	True				
ANR	1027119	Identifier	SLJIT_XOR		1024889	0					
ANR	1027120	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( EOR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"	745:2:22721:22799	1024889	72	True				
ANR	1027121	CallExpression	"FAIL_IF ( push_inst ( compiler , ( EOR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"		1024889	0					
ANR	1027122	Callee	FAIL_IF		1024889	0					
ANR	1027123	Identifier	FAIL_IF		1024889	0					
ANR	1027124	ArgumentList	"push_inst ( compiler , ( EOR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	1					
ANR	1027125	Argument	"push_inst ( compiler , ( EOR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027126	CallExpression	"push_inst ( compiler , ( EOR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027127	Callee	push_inst		1024889	0					
ANR	1027128	Identifier	push_inst		1024889	0					
ANR	1027129	ArgumentList	compiler		1024889	1					
ANR	1027130	Argument	compiler		1024889	0					
ANR	1027131	Identifier	compiler		1024889	0					
ANR	1027132	Argument	( EOR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1027133	InclusiveOrExpression	( EOR ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1027134	ExclusiveOrExpression	EOR ^ inv_bits		1024889	0		^			
ANR	1027135	Identifier	EOR		1024889	0					
ANR	1027136	Identifier	inv_bits		1024889	1					
ANR	1027137	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027138	CallExpression	RD ( dst )		1024889	0					
ANR	1027139	Callee	RD		1024889	0					
ANR	1027140	Identifier	RD		1024889	0					
ANR	1027141	ArgumentList	dst		1024889	1					
ANR	1027142	Argument	dst		1024889	0					
ANR	1027143	Identifier	dst		1024889	0					
ANR	1027144	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027145	CallExpression	RN ( arg1 )		1024889	0					
ANR	1027146	Callee	RN		1024889	0					
ANR	1027147	Identifier	RN		1024889	0					
ANR	1027148	ArgumentList	arg1		1024889	1					
ANR	1027149	Argument	arg1		1024889	0					
ANR	1027150	Identifier	arg1		1024889	0					
ANR	1027151	CallExpression	RM ( arg2 )		1024889	1					
ANR	1027152	Callee	RM		1024889	0					
ANR	1027153	Identifier	RM		1024889	0					
ANR	1027154	ArgumentList	arg2		1024889	1					
ANR	1027155	Argument	arg2		1024889	0					
ANR	1027156	Identifier	arg2		1024889	0					
ANR	1027157	GotoStatement	goto set_flags ;	746:2:22803:22817	1024889	73	True				
ANR	1027158	Identifier	set_flags		1024889	0					
ANR	1027159	Label	case SLJIT_SHL :	747:1:22820:22834	1024889	74	True				
ANR	1027160	Identifier	SLJIT_SHL		1024889	0					
ANR	1027161	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( LSLV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"	748:2:22838:22917	1024889	75	True				
ANR	1027162	CallExpression	"FAIL_IF ( push_inst ( compiler , ( LSLV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"		1024889	0					
ANR	1027163	Callee	FAIL_IF		1024889	0					
ANR	1027164	Identifier	FAIL_IF		1024889	0					
ANR	1027165	ArgumentList	"push_inst ( compiler , ( LSLV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	1					
ANR	1027166	Argument	"push_inst ( compiler , ( LSLV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027167	CallExpression	"push_inst ( compiler , ( LSLV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027168	Callee	push_inst		1024889	0					
ANR	1027169	Identifier	push_inst		1024889	0					
ANR	1027170	ArgumentList	compiler		1024889	1					
ANR	1027171	Argument	compiler		1024889	0					
ANR	1027172	Identifier	compiler		1024889	0					
ANR	1027173	Argument	( LSLV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1027174	InclusiveOrExpression	( LSLV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1027175	ExclusiveOrExpression	LSLV ^ inv_bits		1024889	0		^			
ANR	1027176	Identifier	LSLV		1024889	0					
ANR	1027177	Identifier	inv_bits		1024889	1					
ANR	1027178	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027179	CallExpression	RD ( dst )		1024889	0					
ANR	1027180	Callee	RD		1024889	0					
ANR	1027181	Identifier	RD		1024889	0					
ANR	1027182	ArgumentList	dst		1024889	1					
ANR	1027183	Argument	dst		1024889	0					
ANR	1027184	Identifier	dst		1024889	0					
ANR	1027185	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027186	CallExpression	RN ( arg1 )		1024889	0					
ANR	1027187	Callee	RN		1024889	0					
ANR	1027188	Identifier	RN		1024889	0					
ANR	1027189	ArgumentList	arg1		1024889	1					
ANR	1027190	Argument	arg1		1024889	0					
ANR	1027191	Identifier	arg1		1024889	0					
ANR	1027192	CallExpression	RM ( arg2 )		1024889	1					
ANR	1027193	Callee	RM		1024889	0					
ANR	1027194	Identifier	RM		1024889	0					
ANR	1027195	ArgumentList	arg2		1024889	1					
ANR	1027196	Argument	arg2		1024889	0					
ANR	1027197	Identifier	arg2		1024889	0					
ANR	1027198	GotoStatement	goto set_flags ;	749:2:22921:22935	1024889	76	True				
ANR	1027199	Identifier	set_flags		1024889	0					
ANR	1027200	Label	case SLJIT_LSHR :	750:1:22938:22953	1024889	77	True				
ANR	1027201	Identifier	SLJIT_LSHR		1024889	0					
ANR	1027202	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( LSRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"	751:2:22957:23036	1024889	78	True				
ANR	1027203	CallExpression	"FAIL_IF ( push_inst ( compiler , ( LSRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"		1024889	0					
ANR	1027204	Callee	FAIL_IF		1024889	0					
ANR	1027205	Identifier	FAIL_IF		1024889	0					
ANR	1027206	ArgumentList	"push_inst ( compiler , ( LSRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	1					
ANR	1027207	Argument	"push_inst ( compiler , ( LSRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027208	CallExpression	"push_inst ( compiler , ( LSRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027209	Callee	push_inst		1024889	0					
ANR	1027210	Identifier	push_inst		1024889	0					
ANR	1027211	ArgumentList	compiler		1024889	1					
ANR	1027212	Argument	compiler		1024889	0					
ANR	1027213	Identifier	compiler		1024889	0					
ANR	1027214	Argument	( LSRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1027215	InclusiveOrExpression	( LSRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1027216	ExclusiveOrExpression	LSRV ^ inv_bits		1024889	0		^			
ANR	1027217	Identifier	LSRV		1024889	0					
ANR	1027218	Identifier	inv_bits		1024889	1					
ANR	1027219	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027220	CallExpression	RD ( dst )		1024889	0					
ANR	1027221	Callee	RD		1024889	0					
ANR	1027222	Identifier	RD		1024889	0					
ANR	1027223	ArgumentList	dst		1024889	1					
ANR	1027224	Argument	dst		1024889	0					
ANR	1027225	Identifier	dst		1024889	0					
ANR	1027226	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027227	CallExpression	RN ( arg1 )		1024889	0					
ANR	1027228	Callee	RN		1024889	0					
ANR	1027229	Identifier	RN		1024889	0					
ANR	1027230	ArgumentList	arg1		1024889	1					
ANR	1027231	Argument	arg1		1024889	0					
ANR	1027232	Identifier	arg1		1024889	0					
ANR	1027233	CallExpression	RM ( arg2 )		1024889	1					
ANR	1027234	Callee	RM		1024889	0					
ANR	1027235	Identifier	RM		1024889	0					
ANR	1027236	ArgumentList	arg2		1024889	1					
ANR	1027237	Argument	arg2		1024889	0					
ANR	1027238	Identifier	arg2		1024889	0					
ANR	1027239	GotoStatement	goto set_flags ;	752:2:23040:23054	1024889	79	True				
ANR	1027240	Identifier	set_flags		1024889	0					
ANR	1027241	Label	case SLJIT_ASHR :	753:1:23057:23072	1024889	80	True				
ANR	1027242	Identifier	SLJIT_ASHR		1024889	0					
ANR	1027243	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ASRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"	754:2:23076:23155	1024889	81	True				
ANR	1027244	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ASRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) ) )"		1024889	0					
ANR	1027245	Callee	FAIL_IF		1024889	0					
ANR	1027246	Identifier	FAIL_IF		1024889	0					
ANR	1027247	ArgumentList	"push_inst ( compiler , ( ASRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	1					
ANR	1027248	Argument	"push_inst ( compiler , ( ASRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027249	CallExpression	"push_inst ( compiler , ( ASRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 ) )"		1024889	0					
ANR	1027250	Callee	push_inst		1024889	0					
ANR	1027251	Identifier	push_inst		1024889	0					
ANR	1027252	ArgumentList	compiler		1024889	1					
ANR	1027253	Argument	compiler		1024889	0					
ANR	1027254	Identifier	compiler		1024889	0					
ANR	1027255	Argument	( ASRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1					
ANR	1027256	InclusiveOrExpression	( ASRV ^ inv_bits ) | RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	0		|			
ANR	1027257	ExclusiveOrExpression	ASRV ^ inv_bits		1024889	0		^			
ANR	1027258	Identifier	ASRV		1024889	0					
ANR	1027259	Identifier	inv_bits		1024889	1					
ANR	1027260	InclusiveOrExpression	RD ( dst ) | RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027261	CallExpression	RD ( dst )		1024889	0					
ANR	1027262	Callee	RD		1024889	0					
ANR	1027263	Identifier	RD		1024889	0					
ANR	1027264	ArgumentList	dst		1024889	1					
ANR	1027265	Argument	dst		1024889	0					
ANR	1027266	Identifier	dst		1024889	0					
ANR	1027267	InclusiveOrExpression	RN ( arg1 ) | RM ( arg2 )		1024889	1		|			
ANR	1027268	CallExpression	RN ( arg1 )		1024889	0					
ANR	1027269	Callee	RN		1024889	0					
ANR	1027270	Identifier	RN		1024889	0					
ANR	1027271	ArgumentList	arg1		1024889	1					
ANR	1027272	Argument	arg1		1024889	0					
ANR	1027273	Identifier	arg1		1024889	0					
ANR	1027274	CallExpression	RM ( arg2 )		1024889	1					
ANR	1027275	Callee	RM		1024889	0					
ANR	1027276	Identifier	RM		1024889	0					
ANR	1027277	ArgumentList	arg2		1024889	1					
ANR	1027278	Argument	arg2		1024889	0					
ANR	1027279	Identifier	arg2		1024889	0					
ANR	1027280	GotoStatement	goto set_flags ;	755:2:23159:23173	1024889	82	True				
ANR	1027281	Identifier	set_flags		1024889	0					
ANR	1027282	ExpressionStatement	SLJIT_ASSERT_STOP ( )	758:1:23180:23199	1024889	8	True				
ANR	1027283	CallExpression	SLJIT_ASSERT_STOP ( )		1024889	0					
ANR	1027284	Callee	SLJIT_ASSERT_STOP		1024889	0					
ANR	1027285	Identifier	SLJIT_ASSERT_STOP		1024889	0					
ANR	1027286	ArgumentList			1024889	1					
ANR	1027287	ReturnStatement	return SLJIT_SUCCESS ;	759:1:23202:23222	1024889	9	True				
ANR	1027288	Identifier	SLJIT_SUCCESS		1024889	0					
ANR	1027289	Label	set_flags :	761:0:23225:23234	1024889	10	True				
ANR	1027290	Identifier	set_flags		1024889	0					
ANR	1027291	IfStatement	if ( flags & SET_FLAGS )		1024889	11					
ANR	1027292	Condition	flags & SET_FLAGS	762:5:23241:23257	1024889	0	True				
ANR	1027293	BitAndExpression	flags & SET_FLAGS		1024889	0		&			
ANR	1027294	Identifier	flags		1024889	0					
ANR	1027295	Identifier	SET_FLAGS		1024889	1					
ANR	1027296	ReturnStatement	"return push_inst ( compiler , ( SUBS ^ inv_bits ) | RD ( TMP_ZERO ) | RN ( dst ) | RM ( TMP_ZERO ) ) ;"	763:2:23262:23347	1024889	1	True				
ANR	1027297	CallExpression	"push_inst ( compiler , ( SUBS ^ inv_bits ) | RD ( TMP_ZERO ) | RN ( dst ) | RM ( TMP_ZERO ) )"		1024889	0					
ANR	1027298	Callee	push_inst		1024889	0					
ANR	1027299	Identifier	push_inst		1024889	0					
ANR	1027300	ArgumentList	compiler		1024889	1					
ANR	1027301	Argument	compiler		1024889	0					
ANR	1027302	Identifier	compiler		1024889	0					
ANR	1027303	Argument	( SUBS ^ inv_bits ) | RD ( TMP_ZERO ) | RN ( dst ) | RM ( TMP_ZERO )		1024889	1					
ANR	1027304	InclusiveOrExpression	( SUBS ^ inv_bits ) | RD ( TMP_ZERO ) | RN ( dst ) | RM ( TMP_ZERO )		1024889	0		|			
ANR	1027305	ExclusiveOrExpression	SUBS ^ inv_bits		1024889	0		^			
ANR	1027306	Identifier	SUBS		1024889	0					
ANR	1027307	Identifier	inv_bits		1024889	1					
ANR	1027308	InclusiveOrExpression	RD ( TMP_ZERO ) | RN ( dst ) | RM ( TMP_ZERO )		1024889	1		|			
ANR	1027309	CallExpression	RD ( TMP_ZERO )		1024889	0					
ANR	1027310	Callee	RD		1024889	0					
ANR	1027311	Identifier	RD		1024889	0					
ANR	1027312	ArgumentList	TMP_ZERO		1024889	1					
ANR	1027313	Argument	TMP_ZERO		1024889	0					
ANR	1027314	Identifier	TMP_ZERO		1024889	0					
ANR	1027315	InclusiveOrExpression	RN ( dst ) | RM ( TMP_ZERO )		1024889	1		|			
ANR	1027316	CallExpression	RN ( dst )		1024889	0					
ANR	1027317	Callee	RN		1024889	0					
ANR	1027318	Identifier	RN		1024889	0					
ANR	1027319	ArgumentList	dst		1024889	1					
ANR	1027320	Argument	dst		1024889	0					
ANR	1027321	Identifier	dst		1024889	0					
ANR	1027322	CallExpression	RM ( TMP_ZERO )		1024889	1					
ANR	1027323	Callee	RM		1024889	0					
ANR	1027324	Identifier	RM		1024889	0					
ANR	1027325	ArgumentList	TMP_ZERO		1024889	1					
ANR	1027326	Argument	TMP_ZERO		1024889	0					
ANR	1027327	Identifier	TMP_ZERO		1024889	0					
ANR	1027328	ReturnStatement	return SLJIT_SUCCESS ;	764:1:23350:23370	1024889	12	True				
ANR	1027329	Identifier	SLJIT_SUCCESS		1024889	0					
ANR	1027330	ReturnType	static sljit_si		1024889	1					
ANR	1027331	Identifier	emit_op_imm		1024889	2					
ANR	1027332	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si dst , sljit_sw arg1 , sljit_sw arg2"		1024889	3					
ANR	1027333	Parameter	struct sljit_compiler * compiler	515:28:14589:14619	1024889	0	True				
ANR	1027334	ParameterType	struct sljit_compiler *		1024889	0					
ANR	1027335	Identifier	compiler		1024889	1					
ANR	1027336	Parameter	sljit_si flags	515:61:14622:14635	1024889	1	True				
ANR	1027337	ParameterType	sljit_si		1024889	0					
ANR	1027338	Identifier	flags		1024889	1					
ANR	1027339	Parameter	sljit_si dst	515:77:14638:14649	1024889	2	True				
ANR	1027340	ParameterType	sljit_si		1024889	0					
ANR	1027341	Identifier	dst		1024889	1					
ANR	1027342	Parameter	sljit_sw arg1	515:91:14652:14664	1024889	3	True				
ANR	1027343	ParameterType	sljit_sw		1024889	0					
ANR	1027344	Identifier	arg1		1024889	1					
ANR	1027345	Parameter	sljit_sw arg2	515:106:14667:14679	1024889	4	True				
ANR	1027346	ParameterType	sljit_sw		1024889	0					
ANR	1027347	Identifier	arg2		1024889	1					
ANR	1027348	CFGEntryNode	ENTRY		1024889		True				
ANR	1027349	CFGExitNode	EXIT		1024889		True				
ANR	1027350	Symbol	ADC		1024889						
ANR	1027351	Symbol	TMP_REG2		1024889						
ANR	1027352	Symbol	ADD		1024889						
ANR	1027353	Symbol	TMP_REG1		1024889						
ANR	1027354	Symbol	~ARG1_IMM		1024889						
ANR	1027355	Symbol	SUBI		1024889						
ANR	1027356	Symbol	SLJIT_ASHR		1024889						
ANR	1027357	Symbol	CLZ		1024889						
ANR	1027358	Symbol	SUBS		1024889						
ANR	1027359	Symbol	reg		1024889						
ANR	1027360	Symbol	inv_bits		1024889						
ANR	1027361	Symbol	SUB		1024889						
ANR	1027362	Symbol	ARG2_IMM		1024889						
ANR	1027363	Symbol	nimm		1024889						
ANR	1027364	Symbol	LSRV		1024889						
ANR	1027365	Symbol	SLJIT_SUB		1024889						
ANR	1027366	Symbol	SET_FLAGS		1024889						
ANR	1027367	Symbol	arg2		1024889						
ANR	1027368	Symbol	~imm		1024889						
ANR	1027369	Symbol	RT2		1024889						
ANR	1027370	Symbol	RD		1024889						
ANR	1027371	Symbol	UBFM		1024889						
ANR	1027372	Symbol	arg1		1024889						
ANR	1027373	Symbol	MADD		1024889						
ANR	1027374	Symbol	AND		1024889						
ANR	1027375	Symbol	SMADDL		1024889						
ANR	1027376	Symbol	RM		1024889						
ANR	1027377	Symbol	RN		1024889						
ANR	1027378	Symbol	SLJIT_UNLIKELY		1024889						
ANR	1027379	Symbol	EORI		1024889						
ANR	1027380	Symbol	SMULH		1024889						
ANR	1027381	Symbol	dst		1024889						
ANR	1027382	Symbol	inst_bits		1024889						
ANR	1027383	Symbol	flags		1024889						
ANR	1027384	Symbol	imm		1024889						
ANR	1027385	Symbol	SLJIT_OR		1024889						
ANR	1027386	Symbol	SLJIT_ADD		1024889						
ANR	1027387	Symbol	ORN		1024889						
ANR	1027388	Symbol	ORR		1024889						
ANR	1027389	Symbol	load_immediate		1024889						
ANR	1027390	Symbol	INT_OP		1024889						
ANR	1027391	Symbol	SBC		1024889						
ANR	1027392	Symbol	ARG1_IMM		1024889						
ANR	1027393	Symbol	compiler		1024889						
ANR	1027394	Symbol	op		1024889						
ANR	1027395	Symbol	push_inst		1024889						
ANR	1027396	Symbol	ASRV		1024889						
ANR	1027397	Symbol	EOR		1024889						
ANR	1027398	Symbol	SLJIT_SUCCESS		1024889						
ANR	1027399	Symbol	ANDI		1024889						
ANR	1027400	Symbol	SBFM		1024889						
ANR	1027401	Symbol	LSLV		1024889						
ANR	1027402	Symbol	ADDI		1024889						
ANR	1027403	Symbol	logical_imm		1024889						
ANR	1027404	Symbol	TMP_LR		1024889						
ANR	1027405	Symbol	TMP_ZERO		1024889						
ANR	1027406	Symbol	LOGICAL_IMM_CHECK		1024889						
ANR	1027407	Symbol	ORRI		1024889						
ANR	1027408	DeclStmt									
ANR	1027409	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 4 ]	sljit_mem_imm
ANR	1027410	DeclStmt									
ANR	1027411	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 4 ]	sljit_mem_simm
ANR	1027412	DeclStmt									
ANR	1027413	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 4 ]	sljit_mem_pre_simm
ANR	1027414	DeclStmt									
ANR	1027415	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 4 ]	sljit_mem_reg
ANR	1027416	Function	emit_set_delta	809:0:24624:25264							
ANR	1027417	FunctionDef	"emit_set_delta (struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value)"		1027416	0					
ANR	1027418	CompoundStatement		810:0:24732:25264	1027416	0					
ANR	1027419	IfStatement	if ( value >= 0 )		1027416	0					
ANR	1027420	Condition	value >= 0	811:5:24739:24748	1027416	0	True				
ANR	1027421	RelationalExpression	value >= 0		1027416	0		>=			
ANR	1027422	Identifier	value		1027416	0					
ANR	1027423	PrimaryExpression	0		1027416	1					
ANR	1027424	CompoundStatement		2:17:18:18	1027416	1					
ANR	1027425	IfStatement	if ( value <= 0xfff )		1027416	0					
ANR	1027426	Condition	value <= 0xfff	812:6:24759:24772	1027416	0	True				
ANR	1027427	RelationalExpression	value <= 0xfff		1027416	0		<=			
ANR	1027428	Identifier	value		1027416	0					
ANR	1027429	PrimaryExpression	0xfff		1027416	1					
ANR	1027430	ReturnStatement	"return push_inst ( compiler , ADDI | RD ( dst ) | RN ( reg ) | ( value << 10 ) ) ;"	813:3:24778:24846	1027416	1	True				
ANR	1027431	CallExpression	"push_inst ( compiler , ADDI | RD ( dst ) | RN ( reg ) | ( value << 10 ) )"		1027416	0					
ANR	1027432	Callee	push_inst		1027416	0					
ANR	1027433	Identifier	push_inst		1027416	0					
ANR	1027434	ArgumentList	compiler		1027416	1					
ANR	1027435	Argument	compiler		1027416	0					
ANR	1027436	Identifier	compiler		1027416	0					
ANR	1027437	Argument	ADDI | RD ( dst ) | RN ( reg ) | ( value << 10 )		1027416	1					
ANR	1027438	InclusiveOrExpression	ADDI | RD ( dst ) | RN ( reg ) | ( value << 10 )		1027416	0		|			
ANR	1027439	Identifier	ADDI		1027416	0					
ANR	1027440	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( value << 10 )		1027416	1		|			
ANR	1027441	CallExpression	RD ( dst )		1027416	0					
ANR	1027442	Callee	RD		1027416	0					
ANR	1027443	Identifier	RD		1027416	0					
ANR	1027444	ArgumentList	dst		1027416	1					
ANR	1027445	Argument	dst		1027416	0					
ANR	1027446	Identifier	dst		1027416	0					
ANR	1027447	InclusiveOrExpression	RN ( reg ) | ( value << 10 )		1027416	1		|			
ANR	1027448	CallExpression	RN ( reg )		1027416	0					
ANR	1027449	Callee	RN		1027416	0					
ANR	1027450	Identifier	RN		1027416	0					
ANR	1027451	ArgumentList	reg		1027416	1					
ANR	1027452	Argument	reg		1027416	0					
ANR	1027453	Identifier	reg		1027416	0					
ANR	1027454	ShiftExpression	value << 10		1027416	1		<<			
ANR	1027455	Identifier	value		1027416	0					
ANR	1027456	PrimaryExpression	10		1027416	1					
ANR	1027457	IfStatement	if ( value <= 0xffffff && ! ( value & 0xfff ) )		1027416	1					
ANR	1027458	Condition	value <= 0xffffff && ! ( value & 0xfff )	814:6:24854:24890	1027416	0	True				
ANR	1027459	AndExpression	value <= 0xffffff && ! ( value & 0xfff )		1027416	0		&&			
ANR	1027460	RelationalExpression	value <= 0xffffff		1027416	0		<=			
ANR	1027461	Identifier	value		1027416	0					
ANR	1027462	PrimaryExpression	0xffffff		1027416	1					
ANR	1027463	UnaryOperationExpression	! ( value & 0xfff )		1027416	1					
ANR	1027464	UnaryOperator	!		1027416	0					
ANR	1027465	BitAndExpression	value & 0xfff		1027416	1		&			
ANR	1027466	Identifier	value		1027416	0					
ANR	1027467	PrimaryExpression	0xfff		1027416	1					
ANR	1027468	ReturnStatement	"return push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 ) ) ;"	815:3:24896:24975	1027416	1	True				
ANR	1027469	CallExpression	"push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 ) )"		1027416	0					
ANR	1027470	Callee	push_inst		1027416	0					
ANR	1027471	Identifier	push_inst		1027416	0					
ANR	1027472	ArgumentList	compiler		1027416	1					
ANR	1027473	Argument	compiler		1027416	0					
ANR	1027474	Identifier	compiler		1027416	0					
ANR	1027475	Argument	ADDI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	1					
ANR	1027476	InclusiveOrExpression	ADDI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	0		|			
ANR	1027477	Identifier	ADDI		1027416	0					
ANR	1027478	InclusiveOrExpression	( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	1		|			
ANR	1027479	ShiftExpression	1 << 22		1027416	0		<<			
ANR	1027480	PrimaryExpression	1		1027416	0					
ANR	1027481	PrimaryExpression	22		1027416	1					
ANR	1027482	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	1		|			
ANR	1027483	CallExpression	RD ( dst )		1027416	0					
ANR	1027484	Callee	RD		1027416	0					
ANR	1027485	Identifier	RD		1027416	0					
ANR	1027486	ArgumentList	dst		1027416	1					
ANR	1027487	Argument	dst		1027416	0					
ANR	1027488	Identifier	dst		1027416	0					
ANR	1027489	InclusiveOrExpression	RN ( reg ) | ( value >> 2 )		1027416	1		|			
ANR	1027490	CallExpression	RN ( reg )		1027416	0					
ANR	1027491	Callee	RN		1027416	0					
ANR	1027492	Identifier	RN		1027416	0					
ANR	1027493	ArgumentList	reg		1027416	1					
ANR	1027494	Argument	reg		1027416	0					
ANR	1027495	Identifier	reg		1027416	0					
ANR	1027496	ShiftExpression	value >> 2		1027416	1		>>			
ANR	1027497	Identifier	value		1027416	0					
ANR	1027498	PrimaryExpression	2		1027416	1					
ANR	1027499	ElseStatement	else		1027416	0					
ANR	1027500	CompoundStatement		8:6:253:253	1027416	0					
ANR	1027501	ExpressionStatement	value = - value	818:2:24990:25004	1027416	0	True				
ANR	1027502	AssignmentExpression	value = - value		1027416	0		=			
ANR	1027503	Identifier	value		1027416	0					
ANR	1027504	UnaryOperationExpression	- value		1027416	1					
ANR	1027505	UnaryOperator	-		1027416	0					
ANR	1027506	Identifier	value		1027416	1					
ANR	1027507	IfStatement	if ( value <= 0xfff )		1027416	1					
ANR	1027508	Condition	value <= 0xfff	819:6:25012:25025	1027416	0	True				
ANR	1027509	RelationalExpression	value <= 0xfff		1027416	0		<=			
ANR	1027510	Identifier	value		1027416	0					
ANR	1027511	PrimaryExpression	0xfff		1027416	1					
ANR	1027512	ReturnStatement	"return push_inst ( compiler , SUBI | RD ( dst ) | RN ( reg ) | ( value << 10 ) ) ;"	820:3:25031:25099	1027416	1	True				
ANR	1027513	CallExpression	"push_inst ( compiler , SUBI | RD ( dst ) | RN ( reg ) | ( value << 10 ) )"		1027416	0					
ANR	1027514	Callee	push_inst		1027416	0					
ANR	1027515	Identifier	push_inst		1027416	0					
ANR	1027516	ArgumentList	compiler		1027416	1					
ANR	1027517	Argument	compiler		1027416	0					
ANR	1027518	Identifier	compiler		1027416	0					
ANR	1027519	Argument	SUBI | RD ( dst ) | RN ( reg ) | ( value << 10 )		1027416	1					
ANR	1027520	InclusiveOrExpression	SUBI | RD ( dst ) | RN ( reg ) | ( value << 10 )		1027416	0		|			
ANR	1027521	Identifier	SUBI		1027416	0					
ANR	1027522	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( value << 10 )		1027416	1		|			
ANR	1027523	CallExpression	RD ( dst )		1027416	0					
ANR	1027524	Callee	RD		1027416	0					
ANR	1027525	Identifier	RD		1027416	0					
ANR	1027526	ArgumentList	dst		1027416	1					
ANR	1027527	Argument	dst		1027416	0					
ANR	1027528	Identifier	dst		1027416	0					
ANR	1027529	InclusiveOrExpression	RN ( reg ) | ( value << 10 )		1027416	1		|			
ANR	1027530	CallExpression	RN ( reg )		1027416	0					
ANR	1027531	Callee	RN		1027416	0					
ANR	1027532	Identifier	RN		1027416	0					
ANR	1027533	ArgumentList	reg		1027416	1					
ANR	1027534	Argument	reg		1027416	0					
ANR	1027535	Identifier	reg		1027416	0					
ANR	1027536	ShiftExpression	value << 10		1027416	1		<<			
ANR	1027537	Identifier	value		1027416	0					
ANR	1027538	PrimaryExpression	10		1027416	1					
ANR	1027539	IfStatement	if ( value <= 0xffffff && ! ( value & 0xfff ) )		1027416	2					
ANR	1027540	Condition	value <= 0xffffff && ! ( value & 0xfff )	821:6:25107:25143	1027416	0	True				
ANR	1027541	AndExpression	value <= 0xffffff && ! ( value & 0xfff )		1027416	0		&&			
ANR	1027542	RelationalExpression	value <= 0xffffff		1027416	0		<=			
ANR	1027543	Identifier	value		1027416	0					
ANR	1027544	PrimaryExpression	0xffffff		1027416	1					
ANR	1027545	UnaryOperationExpression	! ( value & 0xfff )		1027416	1					
ANR	1027546	UnaryOperator	!		1027416	0					
ANR	1027547	BitAndExpression	value & 0xfff		1027416	1		&			
ANR	1027548	Identifier	value		1027416	0					
ANR	1027549	PrimaryExpression	0xfff		1027416	1					
ANR	1027550	ReturnStatement	"return push_inst ( compiler , SUBI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 ) ) ;"	822:3:25149:25228	1027416	1	True				
ANR	1027551	CallExpression	"push_inst ( compiler , SUBI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 ) )"		1027416	0					
ANR	1027552	Callee	push_inst		1027416	0					
ANR	1027553	Identifier	push_inst		1027416	0					
ANR	1027554	ArgumentList	compiler		1027416	1					
ANR	1027555	Argument	compiler		1027416	0					
ANR	1027556	Identifier	compiler		1027416	0					
ANR	1027557	Argument	SUBI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	1					
ANR	1027558	InclusiveOrExpression	SUBI | ( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	0		|			
ANR	1027559	Identifier	SUBI		1027416	0					
ANR	1027560	InclusiveOrExpression	( 1 << 22 ) | RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	1		|			
ANR	1027561	ShiftExpression	1 << 22		1027416	0		<<			
ANR	1027562	PrimaryExpression	1		1027416	0					
ANR	1027563	PrimaryExpression	22		1027416	1					
ANR	1027564	InclusiveOrExpression	RD ( dst ) | RN ( reg ) | ( value >> 2 )		1027416	1		|			
ANR	1027565	CallExpression	RD ( dst )		1027416	0					
ANR	1027566	Callee	RD		1027416	0					
ANR	1027567	Identifier	RD		1027416	0					
ANR	1027568	ArgumentList	dst		1027416	1					
ANR	1027569	Argument	dst		1027416	0					
ANR	1027570	Identifier	dst		1027416	0					
ANR	1027571	InclusiveOrExpression	RN ( reg ) | ( value >> 2 )		1027416	1		|			
ANR	1027572	CallExpression	RN ( reg )		1027416	0					
ANR	1027573	Callee	RN		1027416	0					
ANR	1027574	Identifier	RN		1027416	0					
ANR	1027575	ArgumentList	reg		1027416	1					
ANR	1027576	Argument	reg		1027416	0					
ANR	1027577	Identifier	reg		1027416	0					
ANR	1027578	ShiftExpression	value >> 2		1027416	1		>>			
ANR	1027579	Identifier	value		1027416	0					
ANR	1027580	PrimaryExpression	2		1027416	1					
ANR	1027581	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	824:1:25234:25262	1027416	1	True				
ANR	1027582	Identifier	SLJIT_ERR_UNSUPPORTED		1027416	0					
ANR	1027583	ReturnType	static sljit_si		1027416	1					
ANR	1027584	Identifier	emit_set_delta		1027416	2					
ANR	1027585	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value"		1027416	3					
ANR	1027586	Parameter	struct sljit_compiler * compiler	809:31:24655:24685	1027416	0	True				
ANR	1027587	ParameterType	struct sljit_compiler *		1027416	0					
ANR	1027588	Identifier	compiler		1027416	1					
ANR	1027589	Parameter	sljit_si dst	809:64:24688:24699	1027416	1	True				
ANR	1027590	ParameterType	sljit_si		1027416	0					
ANR	1027591	Identifier	dst		1027416	1					
ANR	1027592	Parameter	sljit_si reg	809:78:24702:24713	1027416	2	True				
ANR	1027593	ParameterType	sljit_si		1027416	0					
ANR	1027594	Identifier	reg		1027416	1					
ANR	1027595	Parameter	sljit_sw value	809:92:24716:24729	1027416	3	True				
ANR	1027596	ParameterType	sljit_sw		1027416	0					
ANR	1027597	Identifier	value		1027416	1					
ANR	1027598	CFGEntryNode	ENTRY		1027416		True				
ANR	1027599	CFGExitNode	EXIT		1027416		True				
ANR	1027600	Symbol	push_inst		1027416						
ANR	1027601	Symbol	RD		1027416						
ANR	1027602	Symbol	dst		1027416						
ANR	1027603	Symbol	reg		1027416						
ANR	1027604	Symbol	ADDI		1027416						
ANR	1027605	Symbol	compiler		1027416						
ANR	1027606	Symbol	RN		1027416						
ANR	1027607	Symbol	value		1027416						
ANR	1027608	Symbol	SUBI		1027416						
ANR	1027609	Symbol	SLJIT_ERR_UNSUPPORTED		1027416						
ANR	1027610	Function	getput_arg_fast	828:0:25327:26754							
ANR	1027611	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1027610	0					
ANR	1027612	CompoundStatement		829:0:25451:26754	1027610	0					
ANR	1027613	IdentifierDeclStatement	sljit_ui shift = MEM_SIZE_SHIFT ( flags ) ;	830:1:25454:25492	1027610	0	True				
ANR	1027614	IdentifierDecl	shift = MEM_SIZE_SHIFT ( flags )		1027610	0					
ANR	1027615	IdentifierDeclType	sljit_ui		1027610	0					
ANR	1027616	Identifier	shift		1027610	1					
ANR	1027617	AssignmentExpression	shift = MEM_SIZE_SHIFT ( flags )		1027610	2		=			
ANR	1027618	Identifier	shift		1027610	0					
ANR	1027619	CallExpression	MEM_SIZE_SHIFT ( flags )		1027610	1					
ANR	1027620	Callee	MEM_SIZE_SHIFT		1027610	0					
ANR	1027621	Identifier	MEM_SIZE_SHIFT		1027610	0					
ANR	1027622	ArgumentList	flags		1027610	1					
ANR	1027623	Argument	flags		1027610	0					
ANR	1027624	Identifier	flags		1027610	0					
ANR	1027625	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	832:1:25496:25525	1027610	1	True				
ANR	1027626	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1027610	0					
ANR	1027627	Callee	SLJIT_ASSERT		1027610	0					
ANR	1027628	Identifier	SLJIT_ASSERT		1027610	0					
ANR	1027629	ArgumentList	arg & SLJIT_MEM		1027610	1					
ANR	1027630	Argument	arg & SLJIT_MEM		1027610	0					
ANR	1027631	BitAndExpression	arg & SLJIT_MEM		1027610	0		&			
ANR	1027632	Identifier	arg		1027610	0					
ANR	1027633	Identifier	SLJIT_MEM		1027610	1					
ANR	1027634	IfStatement	if ( SLJIT_UNLIKELY ( flags & UPDATE ) )		1027610	2					
ANR	1027635	Condition	SLJIT_UNLIKELY ( flags & UPDATE )	834:5:25533:25562	1027610	0	True				
ANR	1027636	CallExpression	SLJIT_UNLIKELY ( flags & UPDATE )		1027610	0					
ANR	1027637	Callee	SLJIT_UNLIKELY		1027610	0					
ANR	1027638	Identifier	SLJIT_UNLIKELY		1027610	0					
ANR	1027639	ArgumentList	flags & UPDATE		1027610	1					
ANR	1027640	Argument	flags & UPDATE		1027610	0					
ANR	1027641	BitAndExpression	flags & UPDATE		1027610	0		&			
ANR	1027642	Identifier	flags		1027610	0					
ANR	1027643	Identifier	UPDATE		1027610	1					
ANR	1027644	CompoundStatement		6:37:113:113	1027610	1					
ANR	1027645	IfStatement	if ( ( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 255 && argw >= - 256 )		1027610	0					
ANR	1027646	Condition	( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 255 && argw >= - 256	835:6:25573:25645	1027610	0	True				
ANR	1027647	AndExpression	( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 255 && argw >= - 256		1027610	0		&&			
ANR	1027648	BitAndExpression	arg & REG_MASK		1027610	0		&			
ANR	1027649	Identifier	arg		1027610	0					
ANR	1027650	Identifier	REG_MASK		1027610	1					
ANR	1027651	AndExpression	! ( arg & OFFS_REG_MASK ) && argw <= 255 && argw >= - 256		1027610	1		&&			
ANR	1027652	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1027610	0					
ANR	1027653	UnaryOperator	!		1027610	0					
ANR	1027654	BitAndExpression	arg & OFFS_REG_MASK		1027610	1		&			
ANR	1027655	Identifier	arg		1027610	0					
ANR	1027656	Identifier	OFFS_REG_MASK		1027610	1					
ANR	1027657	AndExpression	argw <= 255 && argw >= - 256		1027610	1		&&			
ANR	1027658	RelationalExpression	argw <= 255		1027610	0		<=			
ANR	1027659	Identifier	argw		1027610	0					
ANR	1027660	PrimaryExpression	255		1027610	1					
ANR	1027661	RelationalExpression	argw >= - 256		1027610	1		>=			
ANR	1027662	Identifier	argw		1027610	0					
ANR	1027663	UnaryOperationExpression	- 256		1027610	1					
ANR	1027664	UnaryOperator	-		1027610	0					
ANR	1027665	PrimaryExpression	256		1027610	1					
ANR	1027666	CompoundStatement		7:81:196:196	1027610	1					
ANR	1027667	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1027610	0					
ANR	1027668	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	836:7:25657:25688	1027610	0	True				
ANR	1027669	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1027610	0					
ANR	1027670	Callee	SLJIT_UNLIKELY		1027610	0					
ANR	1027671	Identifier	SLJIT_UNLIKELY		1027610	0					
ANR	1027672	ArgumentList	flags & ARG_TEST		1027610	1					
ANR	1027673	Argument	flags & ARG_TEST		1027610	0					
ANR	1027674	BitAndExpression	flags & ARG_TEST		1027610	0		&			
ANR	1027675	Identifier	flags		1027610	0					
ANR	1027676	Identifier	ARG_TEST		1027610	1					
ANR	1027677	ReturnStatement	return 1 ;	837:4:25695:25703	1027610	1	True				
ANR	1027678	PrimaryExpression	1		1027610	0					
ANR	1027679	ExpressionStatement	arg &= REG_MASK	839:3:25709:25724	1027610	1	True				
ANR	1027680	AssignmentExpression	arg &= REG_MASK		1027610	0		&=			
ANR	1027681	Identifier	arg		1027610	0					
ANR	1027682	Identifier	REG_MASK		1027610	1					
ANR	1027683	ExpressionStatement	argw &= 0x1ff	840:3:25729:25742	1027610	2	True				
ANR	1027684	AssignmentExpression	argw &= 0x1ff		1027610	0		&=			
ANR	1027685	Identifier	argw		1027610	0					
ANR	1027686	PrimaryExpression	0x1ff		1027610	1					
ANR	1027687	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , sljit_mem_pre_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 ) ) )"	841:3:25747:25863	1027610	3	True				
ANR	1027688	CallExpression	"FAIL_IF ( push_inst ( compiler , sljit_mem_pre_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 ) ) )"		1027610	0					
ANR	1027689	Callee	FAIL_IF		1027610	0					
ANR	1027690	Identifier	FAIL_IF		1027610	0					
ANR	1027691	ArgumentList	"push_inst ( compiler , sljit_mem_pre_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 ) )"		1027610	1					
ANR	1027692	Argument	"push_inst ( compiler , sljit_mem_pre_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 ) )"		1027610	0					
ANR	1027693	CallExpression	"push_inst ( compiler , sljit_mem_pre_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 ) )"		1027610	0					
ANR	1027694	Callee	push_inst		1027610	0					
ANR	1027695	Identifier	push_inst		1027610	0					
ANR	1027696	ArgumentList	compiler		1027610	1					
ANR	1027697	Argument	compiler		1027610	0					
ANR	1027698	Identifier	compiler		1027610	0					
ANR	1027699	Argument	sljit_mem_pre_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 )		1027610	1					
ANR	1027700	InclusiveOrExpression	sljit_mem_pre_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 )		1027610	0		|			
ANR	1027701	ArrayIndexing	sljit_mem_pre_simm [ flags & 0x3 ]		1027610	0					
ANR	1027702	Identifier	sljit_mem_pre_simm		1027610	0					
ANR	1027703	BitAndExpression	flags & 0x3		1027610	1		&			
ANR	1027704	Identifier	flags		1027610	0					
ANR	1027705	PrimaryExpression	0x3		1027610	1					
ANR	1027706	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << 12 )		1027610	1		|			
ANR	1027707	ShiftExpression	shift << 30		1027610	0		<<			
ANR	1027708	Identifier	shift		1027610	0					
ANR	1027709	PrimaryExpression	30		1027610	1					
ANR	1027710	InclusiveOrExpression	RT ( reg ) | RN ( arg ) | ( argw << 12 )		1027610	1		|			
ANR	1027711	CallExpression	RT ( reg )		1027610	0					
ANR	1027712	Callee	RT		1027610	0					
ANR	1027713	Identifier	RT		1027610	0					
ANR	1027714	ArgumentList	reg		1027610	1					
ANR	1027715	Argument	reg		1027610	0					
ANR	1027716	Identifier	reg		1027610	0					
ANR	1027717	InclusiveOrExpression	RN ( arg ) | ( argw << 12 )		1027610	1		|			
ANR	1027718	CallExpression	RN ( arg )		1027610	0					
ANR	1027719	Callee	RN		1027610	0					
ANR	1027720	Identifier	RN		1027610	0					
ANR	1027721	ArgumentList	arg		1027610	1					
ANR	1027722	Argument	arg		1027610	0					
ANR	1027723	Identifier	arg		1027610	0					
ANR	1027724	ShiftExpression	argw << 12		1027610	1		<<			
ANR	1027725	Identifier	argw		1027610	0					
ANR	1027726	PrimaryExpression	12		1027610	1					
ANR	1027727	ReturnStatement	return - 1 ;	843:3:25868:25877	1027610	4	True				
ANR	1027728	UnaryOperationExpression	- 1		1027610	0					
ANR	1027729	UnaryOperator	-		1027610	0					
ANR	1027730	PrimaryExpression	1		1027610	1					
ANR	1027731	ReturnStatement	return 0 ;	845:2:25885:25893	1027610	1	True				
ANR	1027732	PrimaryExpression	0		1027610	0					
ANR	1027733	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1027610	3					
ANR	1027734	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	848:5:25904:25938	1027610	0	True				
ANR	1027735	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1027610	0					
ANR	1027736	Callee	SLJIT_UNLIKELY		1027610	0					
ANR	1027737	Identifier	SLJIT_UNLIKELY		1027610	0					
ANR	1027738	ArgumentList	arg & OFFS_REG_MASK		1027610	1					
ANR	1027739	Argument	arg & OFFS_REG_MASK		1027610	0					
ANR	1027740	BitAndExpression	arg & OFFS_REG_MASK		1027610	0		&			
ANR	1027741	Identifier	arg		1027610	0					
ANR	1027742	Identifier	OFFS_REG_MASK		1027610	1					
ANR	1027743	CompoundStatement		20:42:489:489	1027610	1					
ANR	1027744	ExpressionStatement	argw &= 0x3	849:2:25945:25956	1027610	0	True				
ANR	1027745	AssignmentExpression	argw &= 0x3		1027610	0		&=			
ANR	1027746	Identifier	argw		1027610	0					
ANR	1027747	PrimaryExpression	0x3		1027610	1					
ANR	1027748	IfStatement	if ( argw && argw != shift )		1027610	1					
ANR	1027749	Condition	argw && argw != shift	850:6:25964:25984	1027610	0	True				
ANR	1027750	AndExpression	argw && argw != shift		1027610	0		&&			
ANR	1027751	Identifier	argw		1027610	0					
ANR	1027752	EqualityExpression	argw != shift		1027610	1		!=			
ANR	1027753	Identifier	argw		1027610	0					
ANR	1027754	Identifier	shift		1027610	1					
ANR	1027755	ReturnStatement	return 0 ;	851:3:25990:25998	1027610	1	True				
ANR	1027756	PrimaryExpression	0		1027610	0					
ANR	1027757	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1027610	2					
ANR	1027758	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	853:6:26007:26038	1027610	0	True				
ANR	1027759	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1027610	0					
ANR	1027760	Callee	SLJIT_UNLIKELY		1027610	0					
ANR	1027761	Identifier	SLJIT_UNLIKELY		1027610	0					
ANR	1027762	ArgumentList	flags & ARG_TEST		1027610	1					
ANR	1027763	Argument	flags & ARG_TEST		1027610	0					
ANR	1027764	BitAndExpression	flags & ARG_TEST		1027610	0		&			
ANR	1027765	Identifier	flags		1027610	0					
ANR	1027766	Identifier	ARG_TEST		1027610	1					
ANR	1027767	ReturnStatement	return 1 ;	854:3:26044:26052	1027610	1	True				
ANR	1027768	PrimaryExpression	1		1027610	0					
ANR	1027769	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 ) ) )"	856:2:26057:26208	1027610	3	True				
ANR	1027770	CallExpression	"FAIL_IF ( push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 ) ) )"		1027610	0					
ANR	1027771	Callee	FAIL_IF		1027610	0					
ANR	1027772	Identifier	FAIL_IF		1027610	0					
ANR	1027773	ArgumentList	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 ) )"		1027610	1					
ANR	1027774	Argument	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 ) )"		1027610	0					
ANR	1027775	CallExpression	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 ) )"		1027610	0					
ANR	1027776	Callee	push_inst		1027610	0					
ANR	1027777	Identifier	push_inst		1027610	0					
ANR	1027778	ArgumentList	compiler		1027610	1					
ANR	1027779	Argument	compiler		1027610	0					
ANR	1027780	Identifier	compiler		1027610	0					
ANR	1027781	Argument	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1027610	1					
ANR	1027782	InclusiveOrExpression	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1027610	0		|			
ANR	1027783	ArrayIndexing	sljit_mem_reg [ flags & 0x3 ]		1027610	0					
ANR	1027784	Identifier	sljit_mem_reg		1027610	0					
ANR	1027785	BitAndExpression	flags & 0x3		1027610	1		&			
ANR	1027786	Identifier	flags		1027610	0					
ANR	1027787	PrimaryExpression	0x3		1027610	1					
ANR	1027788	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1027610	1		|			
ANR	1027789	ShiftExpression	shift << 30		1027610	0		<<			
ANR	1027790	Identifier	shift		1027610	0					
ANR	1027791	PrimaryExpression	30		1027610	1					
ANR	1027792	InclusiveOrExpression	RT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1027610	1		|			
ANR	1027793	CallExpression	RT ( reg )		1027610	0					
ANR	1027794	Callee	RT		1027610	0					
ANR	1027795	Identifier	RT		1027610	0					
ANR	1027796	ArgumentList	reg		1027610	1					
ANR	1027797	Argument	reg		1027610	0					
ANR	1027798	Identifier	reg		1027610	0					
ANR	1027799	InclusiveOrExpression	RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1027610	1		|			
ANR	1027800	CallExpression	RN ( arg & REG_MASK )		1027610	0					
ANR	1027801	Callee	RN		1027610	0					
ANR	1027802	Identifier	RN		1027610	0					
ANR	1027803	ArgumentList	arg & REG_MASK		1027610	1					
ANR	1027804	Argument	arg & REG_MASK		1027610	0					
ANR	1027805	BitAndExpression	arg & REG_MASK		1027610	0		&			
ANR	1027806	Identifier	arg		1027610	0					
ANR	1027807	Identifier	REG_MASK		1027610	1					
ANR	1027808	InclusiveOrExpression	RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1027610	1		|			
ANR	1027809	CallExpression	RM ( OFFS_REG ( arg ) )		1027610	0					
ANR	1027810	Callee	RM		1027610	0					
ANR	1027811	Identifier	RM		1027610	0					
ANR	1027812	ArgumentList	OFFS_REG ( arg )		1027610	1					
ANR	1027813	Argument	OFFS_REG ( arg )		1027610	0					
ANR	1027814	CallExpression	OFFS_REG ( arg )		1027610	0					
ANR	1027815	Callee	OFFS_REG		1027610	0					
ANR	1027816	Identifier	OFFS_REG		1027610	0					
ANR	1027817	ArgumentList	arg		1027610	1					
ANR	1027818	Argument	arg		1027610	0					
ANR	1027819	Identifier	arg		1027610	0					
ANR	1027820	ConditionalExpression	argw ? ( 1 << 12 ) : 0		1027610	1					
ANR	1027821	Condition	argw		1027610	0					
ANR	1027822	Identifier	argw		1027610	0					
ANR	1027823	ShiftExpression	1 << 12		1027610	1		<<			
ANR	1027824	PrimaryExpression	1		1027610	0					
ANR	1027825	PrimaryExpression	12		1027610	1					
ANR	1027826	PrimaryExpression	0		1027610	2					
ANR	1027827	ReturnStatement	return - 1 ;	858:2:26212:26221	1027610	4	True				
ANR	1027828	UnaryOperationExpression	- 1		1027610	0					
ANR	1027829	UnaryOperator	-		1027610	0					
ANR	1027830	PrimaryExpression	1		1027610	1					
ANR	1027831	ExpressionStatement	arg &= REG_MASK	861:1:26228:26243	1027610	4	True				
ANR	1027832	AssignmentExpression	arg &= REG_MASK		1027610	0		&=			
ANR	1027833	Identifier	arg		1027610	0					
ANR	1027834	Identifier	REG_MASK		1027610	1					
ANR	1027835	IfStatement	if ( argw >= 0 && ( argw >> shift ) <= 0xfff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0 )		1027610	5					
ANR	1027836	Condition	argw >= 0 && ( argw >> shift ) <= 0xfff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0	862:5:26250:26322	1027610	0	True				
ANR	1027837	AndExpression	argw >= 0 && ( argw >> shift ) <= 0xfff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0		1027610	0		&&			
ANR	1027838	RelationalExpression	argw >= 0		1027610	0		>=			
ANR	1027839	Identifier	argw		1027610	0					
ANR	1027840	PrimaryExpression	0		1027610	1					
ANR	1027841	AndExpression	( argw >> shift ) <= 0xfff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0		1027610	1		&&			
ANR	1027842	RelationalExpression	( argw >> shift ) <= 0xfff		1027610	0		<=			
ANR	1027843	ShiftExpression	argw >> shift		1027610	0		>>			
ANR	1027844	Identifier	argw		1027610	0					
ANR	1027845	Identifier	shift		1027610	1					
ANR	1027846	PrimaryExpression	0xfff		1027610	1					
ANR	1027847	EqualityExpression	( argw & ( ( 1 << shift ) - 1 ) ) == 0		1027610	1		==			
ANR	1027848	BitAndExpression	argw & ( ( 1 << shift ) - 1 )		1027610	0		&			
ANR	1027849	Identifier	argw		1027610	0					
ANR	1027850	AdditiveExpression	( 1 << shift ) - 1		1027610	1		-			
ANR	1027851	ShiftExpression	1 << shift		1027610	0		<<			
ANR	1027852	PrimaryExpression	1		1027610	0					
ANR	1027853	Identifier	shift		1027610	1					
ANR	1027854	PrimaryExpression	1		1027610	1					
ANR	1027855	PrimaryExpression	0		1027610	1					
ANR	1027856	CompoundStatement		34:80:873:873	1027610	1					
ANR	1027857	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1027610	0					
ANR	1027858	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	863:6:26333:26364	1027610	0	True				
ANR	1027859	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1027610	0					
ANR	1027860	Callee	SLJIT_UNLIKELY		1027610	0					
ANR	1027861	Identifier	SLJIT_UNLIKELY		1027610	0					
ANR	1027862	ArgumentList	flags & ARG_TEST		1027610	1					
ANR	1027863	Argument	flags & ARG_TEST		1027610	0					
ANR	1027864	BitAndExpression	flags & ARG_TEST		1027610	0		&			
ANR	1027865	Identifier	flags		1027610	0					
ANR	1027866	Identifier	ARG_TEST		1027610	1					
ANR	1027867	ReturnStatement	return 1 ;	864:3:26370:26378	1027610	1	True				
ANR	1027868	PrimaryExpression	1		1027610	0					
ANR	1027869	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) ) ) )"	866:2:26383:26503	1027610	1	True				
ANR	1027870	CallExpression	"FAIL_IF ( push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) ) ) )"		1027610	0					
ANR	1027871	Callee	FAIL_IF		1027610	0					
ANR	1027872	Identifier	FAIL_IF		1027610	0					
ANR	1027873	ArgumentList	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) ) )"		1027610	1					
ANR	1027874	Argument	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) ) )"		1027610	0					
ANR	1027875	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) ) )"		1027610	0					
ANR	1027876	Callee	push_inst		1027610	0					
ANR	1027877	Identifier	push_inst		1027610	0					
ANR	1027878	ArgumentList	compiler		1027610	1					
ANR	1027879	Argument	compiler		1027610	0					
ANR	1027880	Identifier	compiler		1027610	0					
ANR	1027881	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1027610	1					
ANR	1027882	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1027610	0		|			
ANR	1027883	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1027610	0					
ANR	1027884	Identifier	sljit_mem_imm		1027610	0					
ANR	1027885	BitAndExpression	flags & 0x3		1027610	1		&			
ANR	1027886	Identifier	flags		1027610	0					
ANR	1027887	PrimaryExpression	0x3		1027610	1					
ANR	1027888	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1027610	1		|			
ANR	1027889	ShiftExpression	shift << 30		1027610	0		<<			
ANR	1027890	Identifier	shift		1027610	0					
ANR	1027891	PrimaryExpression	30		1027610	1					
ANR	1027892	InclusiveOrExpression	RT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1027610	1		|			
ANR	1027893	CallExpression	RT ( reg )		1027610	0					
ANR	1027894	Callee	RT		1027610	0					
ANR	1027895	Identifier	RT		1027610	0					
ANR	1027896	ArgumentList	reg		1027610	1					
ANR	1027897	Argument	reg		1027610	0					
ANR	1027898	Identifier	reg		1027610	0					
ANR	1027899	InclusiveOrExpression	RN ( arg ) | ( argw << ( 10 - shift ) )		1027610	1		|			
ANR	1027900	CallExpression	RN ( arg )		1027610	0					
ANR	1027901	Callee	RN		1027610	0					
ANR	1027902	Identifier	RN		1027610	0					
ANR	1027903	ArgumentList	arg		1027610	1					
ANR	1027904	Argument	arg		1027610	0					
ANR	1027905	Identifier	arg		1027610	0					
ANR	1027906	ShiftExpression	argw << ( 10 - shift )		1027610	1		<<			
ANR	1027907	Identifier	argw		1027610	0					
ANR	1027908	AdditiveExpression	10 - shift		1027610	1		-			
ANR	1027909	PrimaryExpression	10		1027610	0					
ANR	1027910	Identifier	shift		1027610	1					
ANR	1027911	ReturnStatement	return - 1 ;	868:2:26507:26516	1027610	2	True				
ANR	1027912	UnaryOperationExpression	- 1		1027610	0					
ANR	1027913	UnaryOperator	-		1027610	0					
ANR	1027914	PrimaryExpression	1		1027610	1					
ANR	1027915	IfStatement	if ( argw > 255 || argw < - 256 )		1027610	6					
ANR	1027916	Condition	argw > 255 || argw < - 256	871:5:26527:26551	1027610	0	True				
ANR	1027917	OrExpression	argw > 255 || argw < - 256		1027610	0		||			
ANR	1027918	RelationalExpression	argw > 255		1027610	0		>			
ANR	1027919	Identifier	argw		1027610	0					
ANR	1027920	PrimaryExpression	255		1027610	1					
ANR	1027921	RelationalExpression	argw < - 256		1027610	1		<			
ANR	1027922	Identifier	argw		1027610	0					
ANR	1027923	UnaryOperationExpression	- 256		1027610	1					
ANR	1027924	UnaryOperator	-		1027610	0					
ANR	1027925	PrimaryExpression	256		1027610	1					
ANR	1027926	ReturnStatement	return 0 ;	872:2:26556:26564	1027610	1	True				
ANR	1027927	PrimaryExpression	0		1027610	0					
ANR	1027928	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1027610	7					
ANR	1027929	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	874:5:26572:26603	1027610	0	True				
ANR	1027930	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1027610	0					
ANR	1027931	Callee	SLJIT_UNLIKELY		1027610	0					
ANR	1027932	Identifier	SLJIT_UNLIKELY		1027610	0					
ANR	1027933	ArgumentList	flags & ARG_TEST		1027610	1					
ANR	1027934	Argument	flags & ARG_TEST		1027610	0					
ANR	1027935	BitAndExpression	flags & ARG_TEST		1027610	0		&			
ANR	1027936	Identifier	flags		1027610	0					
ANR	1027937	Identifier	ARG_TEST		1027610	1					
ANR	1027938	ReturnStatement	return 1 ;	875:2:26608:26616	1027610	1	True				
ANR	1027939	PrimaryExpression	1		1027610	0					
ANR	1027940	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 ) ) )"	877:1:26620:26740	1027610	8	True				
ANR	1027941	CallExpression	"FAIL_IF ( push_inst ( compiler , sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 ) ) )"		1027610	0					
ANR	1027942	Callee	FAIL_IF		1027610	0					
ANR	1027943	Identifier	FAIL_IF		1027610	0					
ANR	1027944	ArgumentList	"push_inst ( compiler , sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 ) )"		1027610	1					
ANR	1027945	Argument	"push_inst ( compiler , sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 ) )"		1027610	0					
ANR	1027946	CallExpression	"push_inst ( compiler , sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 ) )"		1027610	0					
ANR	1027947	Callee	push_inst		1027610	0					
ANR	1027948	Identifier	push_inst		1027610	0					
ANR	1027949	ArgumentList	compiler		1027610	1					
ANR	1027950	Argument	compiler		1027610	0					
ANR	1027951	Identifier	compiler		1027610	0					
ANR	1027952	Argument	sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1027610	1					
ANR	1027953	InclusiveOrExpression	sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1027610	0		|			
ANR	1027954	ArrayIndexing	sljit_mem_simm [ flags & 0x3 ]		1027610	0					
ANR	1027955	Identifier	sljit_mem_simm		1027610	0					
ANR	1027956	BitAndExpression	flags & 0x3		1027610	1		&			
ANR	1027957	Identifier	flags		1027610	0					
ANR	1027958	PrimaryExpression	0x3		1027610	1					
ANR	1027959	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1027610	1		|			
ANR	1027960	ShiftExpression	shift << 30		1027610	0		<<			
ANR	1027961	Identifier	shift		1027610	0					
ANR	1027962	PrimaryExpression	30		1027610	1					
ANR	1027963	InclusiveOrExpression	RT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1027610	1		|			
ANR	1027964	CallExpression	RT ( reg )		1027610	0					
ANR	1027965	Callee	RT		1027610	0					
ANR	1027966	Identifier	RT		1027610	0					
ANR	1027967	ArgumentList	reg		1027610	1					
ANR	1027968	Argument	reg		1027610	0					
ANR	1027969	Identifier	reg		1027610	0					
ANR	1027970	InclusiveOrExpression	RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1027610	1		|			
ANR	1027971	CallExpression	RN ( arg )		1027610	0					
ANR	1027972	Callee	RN		1027610	0					
ANR	1027973	Identifier	RN		1027610	0					
ANR	1027974	ArgumentList	arg		1027610	1					
ANR	1027975	Argument	arg		1027610	0					
ANR	1027976	Identifier	arg		1027610	0					
ANR	1027977	ShiftExpression	( argw & 0x1ff ) << 12		1027610	1		<<			
ANR	1027978	BitAndExpression	argw & 0x1ff		1027610	0		&			
ANR	1027979	Identifier	argw		1027610	0					
ANR	1027980	PrimaryExpression	0x1ff		1027610	1					
ANR	1027981	PrimaryExpression	12		1027610	1					
ANR	1027982	ReturnStatement	return - 1 ;	879:1:26743:26752	1027610	9	True				
ANR	1027983	UnaryOperationExpression	- 1		1027610	0					
ANR	1027984	UnaryOperator	-		1027610	0					
ANR	1027985	PrimaryExpression	1		1027610	1					
ANR	1027986	ReturnType	static sljit_si		1027610	1					
ANR	1027987	Identifier	getput_arg_fast		1027610	2					
ANR	1027988	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1027610	3					
ANR	1027989	Parameter	struct sljit_compiler * compiler	828:32:25359:25389	1027610	0	True				
ANR	1027990	ParameterType	struct sljit_compiler *		1027610	0					
ANR	1027991	Identifier	compiler		1027610	1					
ANR	1027992	Parameter	sljit_si flags	828:65:25392:25405	1027610	1	True				
ANR	1027993	ParameterType	sljit_si		1027610	0					
ANR	1027994	Identifier	flags		1027610	1					
ANR	1027995	Parameter	sljit_si reg	828:81:25408:25419	1027610	2	True				
ANR	1027996	ParameterType	sljit_si		1027610	0					
ANR	1027997	Identifier	reg		1027610	1					
ANR	1027998	Parameter	sljit_si arg	828:95:25422:25433	1027610	3	True				
ANR	1027999	ParameterType	sljit_si		1027610	0					
ANR	1028000	Identifier	arg		1027610	1					
ANR	1028001	Parameter	sljit_sw argw	828:109:25436:25448	1027610	4	True				
ANR	1028002	ParameterType	sljit_sw		1027610	0					
ANR	1028003	Identifier	argw		1027610	1					
ANR	1028004	CFGEntryNode	ENTRY		1027610		True				
ANR	1028005	CFGExitNode	EXIT		1027610		True				
ANR	1028006	Symbol	MEM_SIZE_SHIFT		1027610						
ANR	1028007	Symbol	RT		1027610						
ANR	1028008	Symbol	sljit_mem_imm		1027610						
ANR	1028009	Symbol	SLJIT_MEM		1027610						
ANR	1028010	Symbol	shift		1027610						
ANR	1028011	Symbol	flags		1027610						
ANR	1028012	Symbol	argw		1027610						
ANR	1028013	Symbol	ARG_TEST		1027610						
ANR	1028014	Symbol	reg		1027610						
ANR	1028015	Symbol	arg		1027610						
ANR	1028016	Symbol	UPDATE		1027610						
ANR	1028017	Symbol	compiler		1027610						
ANR	1028018	Symbol	* sljit_mem_pre_simm		1027610						
ANR	1028019	Symbol	push_inst		1027610						
ANR	1028020	Symbol	* flags		1027610						
ANR	1028021	Symbol	REG_MASK		1027610						
ANR	1028022	Symbol	* sljit_mem_reg		1027610						
ANR	1028023	Symbol	OFFS_REG_MASK		1027610						
ANR	1028024	Symbol	* sljit_mem_simm		1027610						
ANR	1028025	Symbol	sljit_mem_pre_simm		1027610						
ANR	1028026	Symbol	* sljit_mem_imm		1027610						
ANR	1028027	Symbol	sljit_mem_simm		1027610						
ANR	1028028	Symbol	sljit_mem_reg		1027610						
ANR	1028029	Symbol	OFFS_REG		1027610						
ANR	1028030	Symbol	RM		1027610						
ANR	1028031	Symbol	RN		1027610						
ANR	1028032	Symbol	SLJIT_UNLIKELY		1027610						
ANR	1028033	Function	can_cache	885:0:26907:27352							
ANR	1028034	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1028033	0					
ANR	1028035	CompoundStatement		886:0:27001:27352	1028033	0					
ANR	1028036	IdentifierDeclStatement	sljit_sw diff ;	887:1:27004:27017	1028033	0	True				
ANR	1028037	IdentifierDecl	diff		1028033	0					
ANR	1028038	IdentifierDeclType	sljit_sw		1028033	0					
ANR	1028039	Identifier	diff		1028033	1					
ANR	1028040	IfStatement	if ( ( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM ) )		1028033	1					
ANR	1028041	Condition	( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM )	888:5:27024:27071	1028033	0	True				
ANR	1028042	OrExpression	( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM )		1028033	0		||			
ANR	1028043	BitAndExpression	arg & OFFS_REG_MASK		1028033	0		&			
ANR	1028044	Identifier	arg		1028033	0					
ANR	1028045	Identifier	OFFS_REG_MASK		1028033	1					
ANR	1028046	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1028033	1					
ANR	1028047	UnaryOperator	!		1028033	0					
ANR	1028048	BitAndExpression	next_arg & SLJIT_MEM		1028033	1		&			
ANR	1028049	Identifier	next_arg		1028033	0					
ANR	1028050	Identifier	SLJIT_MEM		1028033	1					
ANR	1028051	ReturnStatement	return 0 ;	889:2:27076:27084	1028033	1	True				
ANR	1028052	PrimaryExpression	0		1028033	0					
ANR	1028053	IfStatement	if ( ! ( arg & REG_MASK ) )		1028033	2					
ANR	1028054	Condition	! ( arg & REG_MASK )	891:5:27092:27108	1028033	0	True				
ANR	1028055	UnaryOperationExpression	! ( arg & REG_MASK )		1028033	0					
ANR	1028056	UnaryOperator	!		1028033	0					
ANR	1028057	BitAndExpression	arg & REG_MASK		1028033	1		&			
ANR	1028058	Identifier	arg		1028033	0					
ANR	1028059	Identifier	REG_MASK		1028033	1					
ANR	1028060	CompoundStatement		6:24:109:109	1028033	1					
ANR	1028061	ExpressionStatement	diff = argw - next_argw	892:2:27115:27138	1028033	0	True				
ANR	1028062	AssignmentExpression	diff = argw - next_argw		1028033	0		=			
ANR	1028063	Identifier	diff		1028033	0					
ANR	1028064	AdditiveExpression	argw - next_argw		1028033	1		-			
ANR	1028065	Identifier	argw		1028033	0					
ANR	1028066	Identifier	next_argw		1028033	1					
ANR	1028067	IfStatement	if ( diff <= 0xfff && diff >= - 0xfff )		1028033	1					
ANR	1028068	Condition	diff <= 0xfff && diff >= - 0xfff	893:6:27146:27176	1028033	0	True				
ANR	1028069	AndExpression	diff <= 0xfff && diff >= - 0xfff		1028033	0		&&			
ANR	1028070	RelationalExpression	diff <= 0xfff		1028033	0		<=			
ANR	1028071	Identifier	diff		1028033	0					
ANR	1028072	PrimaryExpression	0xfff		1028033	1					
ANR	1028073	RelationalExpression	diff >= - 0xfff		1028033	1		>=			
ANR	1028074	Identifier	diff		1028033	0					
ANR	1028075	UnaryOperationExpression	- 0xfff		1028033	1					
ANR	1028076	UnaryOperator	-		1028033	0					
ANR	1028077	PrimaryExpression	0xfff		1028033	1					
ANR	1028078	ReturnStatement	return 1 ;	894:3:27182:27190	1028033	1	True				
ANR	1028079	PrimaryExpression	1		1028033	0					
ANR	1028080	ReturnStatement	return 0 ;	895:2:27194:27202	1028033	2	True				
ANR	1028081	PrimaryExpression	0		1028033	0					
ANR	1028082	IfStatement	if ( argw == next_argw )		1028033	3					
ANR	1028083	Condition	argw == next_argw	898:5:27213:27229	1028033	0	True				
ANR	1028084	EqualityExpression	argw == next_argw		1028033	0		==			
ANR	1028085	Identifier	argw		1028033	0					
ANR	1028086	Identifier	next_argw		1028033	1					
ANR	1028087	ReturnStatement	return 1 ;	899:2:27234:27242	1028033	1	True				
ANR	1028088	PrimaryExpression	1		1028033	0					
ANR	1028089	ExpressionStatement	diff = argw - next_argw	901:1:27246:27269	1028033	4	True				
ANR	1028090	AssignmentExpression	diff = argw - next_argw		1028033	0		=			
ANR	1028091	Identifier	diff		1028033	0					
ANR	1028092	AdditiveExpression	argw - next_argw		1028033	1		-			
ANR	1028093	Identifier	argw		1028033	0					
ANR	1028094	Identifier	next_argw		1028033	1					
ANR	1028095	IfStatement	if ( arg == next_arg && diff <= 0xfff && diff >= - 0xfff )		1028033	5					
ANR	1028096	Condition	arg == next_arg && diff <= 0xfff && diff >= - 0xfff	902:5:27276:27325	1028033	0	True				
ANR	1028097	AndExpression	arg == next_arg && diff <= 0xfff && diff >= - 0xfff		1028033	0		&&			
ANR	1028098	EqualityExpression	arg == next_arg		1028033	0		==			
ANR	1028099	Identifier	arg		1028033	0					
ANR	1028100	Identifier	next_arg		1028033	1					
ANR	1028101	AndExpression	diff <= 0xfff && diff >= - 0xfff		1028033	1		&&			
ANR	1028102	RelationalExpression	diff <= 0xfff		1028033	0		<=			
ANR	1028103	Identifier	diff		1028033	0					
ANR	1028104	PrimaryExpression	0xfff		1028033	1					
ANR	1028105	RelationalExpression	diff >= - 0xfff		1028033	1		>=			
ANR	1028106	Identifier	diff		1028033	0					
ANR	1028107	UnaryOperationExpression	- 0xfff		1028033	1					
ANR	1028108	UnaryOperator	-		1028033	0					
ANR	1028109	PrimaryExpression	0xfff		1028033	1					
ANR	1028110	ReturnStatement	return 1 ;	903:2:27330:27338	1028033	1	True				
ANR	1028111	PrimaryExpression	1		1028033	0					
ANR	1028112	ReturnStatement	return 0 ;	905:1:27342:27350	1028033	6	True				
ANR	1028113	PrimaryExpression	0		1028033	0					
ANR	1028114	ReturnType	static sljit_si		1028033	1					
ANR	1028115	Identifier	can_cache		1028033	2					
ANR	1028116	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1028033	3					
ANR	1028117	Parameter	sljit_si arg	885:26:26933:26944	1028033	0	True				
ANR	1028118	ParameterType	sljit_si		1028033	0					
ANR	1028119	Identifier	arg		1028033	1					
ANR	1028120	Parameter	sljit_sw argw	885:40:26947:26959	1028033	1	True				
ANR	1028121	ParameterType	sljit_sw		1028033	0					
ANR	1028122	Identifier	argw		1028033	1					
ANR	1028123	Parameter	sljit_si next_arg	885:55:26962:26978	1028033	2	True				
ANR	1028124	ParameterType	sljit_si		1028033	0					
ANR	1028125	Identifier	next_arg		1028033	1					
ANR	1028126	Parameter	sljit_sw next_argw	885:74:26981:26998	1028033	3	True				
ANR	1028127	ParameterType	sljit_sw		1028033	0					
ANR	1028128	Identifier	next_argw		1028033	1					
ANR	1028129	CFGEntryNode	ENTRY		1028033		True				
ANR	1028130	CFGExitNode	EXIT		1028033		True				
ANR	1028131	Symbol	next_arg		1028033						
ANR	1028132	Symbol	REG_MASK		1028033						
ANR	1028133	Symbol	SLJIT_MEM		1028033						
ANR	1028134	Symbol	arg		1028033						
ANR	1028135	Symbol	OFFS_REG_MASK		1028033						
ANR	1028136	Symbol	next_argw		1028033						
ANR	1028137	Symbol	diff		1028033						
ANR	1028138	Symbol	argw		1028033						
ANR	1028139	Function	getput_arg	909:0:27415:32519							
ANR	1028140	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1028139	0					
ANR	1028141	CompoundStatement		911:0:27574:32519	1028139	0					
ANR	1028142	IdentifierDeclStatement	sljit_ui shift = MEM_SIZE_SHIFT ( flags ) ;	912:1:27577:27615	1028139	0	True				
ANR	1028143	IdentifierDecl	shift = MEM_SIZE_SHIFT ( flags )		1028139	0					
ANR	1028144	IdentifierDeclType	sljit_ui		1028139	0					
ANR	1028145	Identifier	shift		1028139	1					
ANR	1028146	AssignmentExpression	shift = MEM_SIZE_SHIFT ( flags )		1028139	2		=			
ANR	1028147	Identifier	shift		1028139	0					
ANR	1028148	CallExpression	MEM_SIZE_SHIFT ( flags )		1028139	1					
ANR	1028149	Callee	MEM_SIZE_SHIFT		1028139	0					
ANR	1028150	Identifier	MEM_SIZE_SHIFT		1028139	0					
ANR	1028151	ArgumentList	flags		1028139	1					
ANR	1028152	Argument	flags		1028139	0					
ANR	1028153	Identifier	flags		1028139	0					
ANR	1028154	IdentifierDeclStatement	"sljit_si tmp_r , other_r ;"	913:1:27618:27641	1028139	1	True				
ANR	1028155	IdentifierDecl	tmp_r		1028139	0					
ANR	1028156	IdentifierDeclType	sljit_si		1028139	0					
ANR	1028157	Identifier	tmp_r		1028139	1					
ANR	1028158	IdentifierDecl	other_r		1028139	1					
ANR	1028159	IdentifierDeclType	sljit_si		1028139	0					
ANR	1028160	Identifier	other_r		1028139	1					
ANR	1028161	IdentifierDeclStatement	sljit_sw diff ;	914:1:27644:27657	1028139	2	True				
ANR	1028162	IdentifierDecl	diff		1028139	0					
ANR	1028163	IdentifierDeclType	sljit_sw		1028139	0					
ANR	1028164	Identifier	diff		1028139	1					
ANR	1028165	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	916:1:27661:27690	1028139	3	True				
ANR	1028166	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1028139	0					
ANR	1028167	Callee	SLJIT_ASSERT		1028139	0					
ANR	1028168	Identifier	SLJIT_ASSERT		1028139	0					
ANR	1028169	ArgumentList	arg & SLJIT_MEM		1028139	1					
ANR	1028170	Argument	arg & SLJIT_MEM		1028139	0					
ANR	1028171	BitAndExpression	arg & SLJIT_MEM		1028139	0		&			
ANR	1028172	Identifier	arg		1028139	0					
ANR	1028173	Identifier	SLJIT_MEM		1028139	1					
ANR	1028174	IfStatement	if ( ! ( next_arg & SLJIT_MEM ) )		1028139	4					
ANR	1028175	Condition	! ( next_arg & SLJIT_MEM )	917:5:27697:27719	1028139	0	True				
ANR	1028176	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1028139	0					
ANR	1028177	UnaryOperator	!		1028139	0					
ANR	1028178	BitAndExpression	next_arg & SLJIT_MEM		1028139	1		&			
ANR	1028179	Identifier	next_arg		1028139	0					
ANR	1028180	Identifier	SLJIT_MEM		1028139	1					
ANR	1028181	CompoundStatement		7:30:147:147	1028139	1					
ANR	1028182	ExpressionStatement	next_arg = 0	918:2:27726:27738	1028139	0	True				
ANR	1028183	AssignmentExpression	next_arg = 0		1028139	0		=			
ANR	1028184	Identifier	next_arg		1028139	0					
ANR	1028185	PrimaryExpression	0		1028139	1					
ANR	1028186	ExpressionStatement	next_argw = 0	919:2:27742:27755	1028139	1	True				
ANR	1028187	AssignmentExpression	next_argw = 0		1028139	0		=			
ANR	1028188	Identifier	next_argw		1028139	0					
ANR	1028189	PrimaryExpression	0		1028139	1					
ANR	1028190	ExpressionStatement	tmp_r = ( flags & STORE ) ? TMP_REG3 : reg	922:1:27762:27802	1028139	5	True				
ANR	1028191	AssignmentExpression	tmp_r = ( flags & STORE ) ? TMP_REG3 : reg		1028139	0		=			
ANR	1028192	Identifier	tmp_r		1028139	0					
ANR	1028193	ConditionalExpression	( flags & STORE ) ? TMP_REG3 : reg		1028139	1					
ANR	1028194	Condition	flags & STORE		1028139	0					
ANR	1028195	BitAndExpression	flags & STORE		1028139	0		&			
ANR	1028196	Identifier	flags		1028139	0					
ANR	1028197	Identifier	STORE		1028139	1					
ANR	1028198	Identifier	TMP_REG3		1028139	1					
ANR	1028199	Identifier	reg		1028139	2					
ANR	1028200	IfStatement	if ( SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) ) )		1028139	6					
ANR	1028201	Condition	SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) )	924:5:27810:27861	1028139	0	True				
ANR	1028202	CallExpression	SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) )		1028139	0					
ANR	1028203	Callee	SLJIT_UNLIKELY		1028139	0					
ANR	1028204	Identifier	SLJIT_UNLIKELY		1028139	0					
ANR	1028205	ArgumentList	( flags & UPDATE ) && ( arg & REG_MASK )		1028139	1					
ANR	1028206	Argument	( flags & UPDATE ) && ( arg & REG_MASK )		1028139	0					
ANR	1028207	AndExpression	( flags & UPDATE ) && ( arg & REG_MASK )		1028139	0		&&			
ANR	1028208	BitAndExpression	flags & UPDATE		1028139	0		&			
ANR	1028209	Identifier	flags		1028139	0					
ANR	1028210	Identifier	UPDATE		1028139	1					
ANR	1028211	BitAndExpression	arg & REG_MASK		1028139	1		&			
ANR	1028212	Identifier	arg		1028139	0					
ANR	1028213	Identifier	REG_MASK		1028139	1					
ANR	1028214	CompoundStatement		14:59:289:289	1028139	1					
ANR	1028215	ExpressionStatement	other_r = OFFS_REG ( arg )	926:2:27923:27946	1028139	0	True				
ANR	1028216	AssignmentExpression	other_r = OFFS_REG ( arg )		1028139	0		=			
ANR	1028217	Identifier	other_r		1028139	0					
ANR	1028218	CallExpression	OFFS_REG ( arg )		1028139	1					
ANR	1028219	Callee	OFFS_REG		1028139	0					
ANR	1028220	Identifier	OFFS_REG		1028139	0					
ANR	1028221	ArgumentList	arg		1028139	1					
ANR	1028222	Argument	arg		1028139	0					
ANR	1028223	Identifier	arg		1028139	0					
ANR	1028224	IfStatement	if ( ! other_r )		1028139	1					
ANR	1028225	Condition	! other_r	927:6:27954:27961	1028139	0	True				
ANR	1028226	UnaryOperationExpression	! other_r		1028139	0					
ANR	1028227	UnaryOperator	!		1028139	0					
ANR	1028228	Identifier	other_r		1028139	1					
ANR	1028229	CompoundStatement		17:16:389:389	1028139	1					
ANR	1028230	ExpressionStatement	other_r = arg & REG_MASK	928:3:27969:27993	1028139	0	True				
ANR	1028231	AssignmentExpression	other_r = arg & REG_MASK		1028139	0		=			
ANR	1028232	Identifier	other_r		1028139	0					
ANR	1028233	BitAndExpression	arg & REG_MASK		1028139	1		&			
ANR	1028234	Identifier	arg		1028139	0					
ANR	1028235	Identifier	REG_MASK		1028139	1					
ANR	1028236	IfStatement	if ( other_r != reg && argw >= 0 && argw <= 0xffffff )		1028139	1					
ANR	1028237	Condition	other_r != reg && argw >= 0 && argw <= 0xffffff	929:7:28002:28048	1028139	0	True				
ANR	1028238	AndExpression	other_r != reg && argw >= 0 && argw <= 0xffffff		1028139	0		&&			
ANR	1028239	EqualityExpression	other_r != reg		1028139	0		!=			
ANR	1028240	Identifier	other_r		1028139	0					
ANR	1028241	Identifier	reg		1028139	1					
ANR	1028242	AndExpression	argw >= 0 && argw <= 0xffffff		1028139	1		&&			
ANR	1028243	RelationalExpression	argw >= 0		1028139	0		>=			
ANR	1028244	Identifier	argw		1028139	0					
ANR	1028245	PrimaryExpression	0		1028139	1					
ANR	1028246	RelationalExpression	argw <= 0xffffff		1028139	1		<=			
ANR	1028247	Identifier	argw		1028139	0					
ANR	1028248	PrimaryExpression	0xffffff		1028139	1					
ANR	1028249	CompoundStatement		19:56:476:476	1028139	1					
ANR	1028250	IfStatement	if ( ( argw & 0xfff ) != 0 )		1028139	0					
ANR	1028251	Condition	( argw & 0xfff ) != 0	930:8:28061:28079	1028139	0	True				
ANR	1028252	EqualityExpression	( argw & 0xfff ) != 0		1028139	0		!=			
ANR	1028253	BitAndExpression	argw & 0xfff		1028139	0		&			
ANR	1028254	Identifier	argw		1028139	0					
ANR	1028255	PrimaryExpression	0xfff		1028139	1					
ANR	1028256	PrimaryExpression	0		1028139	1					
ANR	1028257	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) ) )"	931:5:28087:28174	1028139	1	True				
ANR	1028258	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) ) )"		1028139	0					
ANR	1028259	Callee	FAIL_IF		1028139	0					
ANR	1028260	Identifier	FAIL_IF		1028139	0					
ANR	1028261	ArgumentList	"push_inst ( compiler , ADDI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) )"		1028139	1					
ANR	1028262	Argument	"push_inst ( compiler , ADDI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) )"		1028139	0					
ANR	1028263	CallExpression	"push_inst ( compiler , ADDI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) )"		1028139	0					
ANR	1028264	Callee	push_inst		1028139	0					
ANR	1028265	Identifier	push_inst		1028139	0					
ANR	1028266	ArgumentList	compiler		1028139	1					
ANR	1028267	Argument	compiler		1028139	0					
ANR	1028268	Identifier	compiler		1028139	0					
ANR	1028269	Argument	ADDI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	1					
ANR	1028270	InclusiveOrExpression	ADDI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	0		|			
ANR	1028271	Identifier	ADDI		1028139	0					
ANR	1028272	InclusiveOrExpression	RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	1		|			
ANR	1028273	CallExpression	RD ( other_r )		1028139	0					
ANR	1028274	Callee	RD		1028139	0					
ANR	1028275	Identifier	RD		1028139	0					
ANR	1028276	ArgumentList	other_r		1028139	1					
ANR	1028277	Argument	other_r		1028139	0					
ANR	1028278	Identifier	other_r		1028139	0					
ANR	1028279	InclusiveOrExpression	RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	1		|			
ANR	1028280	CallExpression	RN ( other_r )		1028139	0					
ANR	1028281	Callee	RN		1028139	0					
ANR	1028282	Identifier	RN		1028139	0					
ANR	1028283	ArgumentList	other_r		1028139	1					
ANR	1028284	Argument	other_r		1028139	0					
ANR	1028285	Identifier	other_r		1028139	0					
ANR	1028286	ShiftExpression	( argw & 0xfff ) << 10		1028139	1		<<			
ANR	1028287	BitAndExpression	argw & 0xfff		1028139	0		&			
ANR	1028288	Identifier	argw		1028139	0					
ANR	1028289	PrimaryExpression	0xfff		1028139	1					
ANR	1028290	PrimaryExpression	10		1028139	1					
ANR	1028291	IfStatement	if ( argw >> 12 )		1028139	1					
ANR	1028292	Condition	argw >> 12	932:8:28184:28193	1028139	0	True				
ANR	1028293	ShiftExpression	argw >> 12		1028139	0		>>			
ANR	1028294	Identifier	argw		1028139	0					
ANR	1028295	PrimaryExpression	12		1028139	1					
ANR	1028296	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) ) )"	933:5:28201:28298	1028139	1	True				
ANR	1028297	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) ) )"		1028139	0					
ANR	1028298	Callee	FAIL_IF		1028139	0					
ANR	1028299	Identifier	FAIL_IF		1028139	0					
ANR	1028300	ArgumentList	"push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) )"		1028139	1					
ANR	1028301	Argument	"push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) )"		1028139	0					
ANR	1028302	CallExpression	"push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) )"		1028139	0					
ANR	1028303	Callee	push_inst		1028139	0					
ANR	1028304	Identifier	push_inst		1028139	0					
ANR	1028305	ArgumentList	compiler		1028139	1					
ANR	1028306	Argument	compiler		1028139	0					
ANR	1028307	Identifier	compiler		1028139	0					
ANR	1028308	Argument	ADDI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1					
ANR	1028309	InclusiveOrExpression	ADDI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	0		|			
ANR	1028310	Identifier	ADDI		1028139	0					
ANR	1028311	InclusiveOrExpression	( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1028312	ShiftExpression	1 << 22		1028139	0		<<			
ANR	1028313	PrimaryExpression	1		1028139	0					
ANR	1028314	PrimaryExpression	22		1028139	1					
ANR	1028315	InclusiveOrExpression	RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1028316	CallExpression	RD ( other_r )		1028139	0					
ANR	1028317	Callee	RD		1028139	0					
ANR	1028318	Identifier	RD		1028139	0					
ANR	1028319	ArgumentList	other_r		1028139	1					
ANR	1028320	Argument	other_r		1028139	0					
ANR	1028321	Identifier	other_r		1028139	0					
ANR	1028322	InclusiveOrExpression	RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1028323	CallExpression	RN ( other_r )		1028139	0					
ANR	1028324	Callee	RN		1028139	0					
ANR	1028325	Identifier	RN		1028139	0					
ANR	1028326	ArgumentList	other_r		1028139	1					
ANR	1028327	Argument	other_r		1028139	0					
ANR	1028328	Identifier	other_r		1028139	0					
ANR	1028329	ShiftExpression	( argw >> 12 ) << 10		1028139	1		<<			
ANR	1028330	ShiftExpression	argw >> 12		1028139	0		>>			
ANR	1028331	Identifier	argw		1028139	0					
ANR	1028332	PrimaryExpression	12		1028139	1					
ANR	1028333	PrimaryExpression	10		1028139	1					
ANR	1028334	ReturnStatement	"return push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r ) ) ;"	934:4:28304:28398	1028139	2	True				
ANR	1028335	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r ) )"		1028139	0					
ANR	1028336	Callee	push_inst		1028139	0					
ANR	1028337	Identifier	push_inst		1028139	0					
ANR	1028338	ArgumentList	compiler		1028139	1					
ANR	1028339	Argument	compiler		1028139	0					
ANR	1028340	Identifier	compiler		1028139	0					
ANR	1028341	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r )		1028139	1					
ANR	1028342	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r )		1028139	0		|			
ANR	1028343	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1028344	Identifier	sljit_mem_imm		1028139	0					
ANR	1028345	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1028346	Identifier	flags		1028139	0					
ANR	1028347	PrimaryExpression	0x3		1028139	1					
ANR	1028348	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( other_r )		1028139	1		|			
ANR	1028349	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1028350	Identifier	shift		1028139	0					
ANR	1028351	PrimaryExpression	30		1028139	1					
ANR	1028352	InclusiveOrExpression	RT ( reg ) | RN ( other_r )		1028139	1		|			
ANR	1028353	CallExpression	RT ( reg )		1028139	0					
ANR	1028354	Callee	RT		1028139	0					
ANR	1028355	Identifier	RT		1028139	0					
ANR	1028356	ArgumentList	reg		1028139	1					
ANR	1028357	Argument	reg		1028139	0					
ANR	1028358	Identifier	reg		1028139	0					
ANR	1028359	CallExpression	RN ( other_r )		1028139	1					
ANR	1028360	Callee	RN		1028139	0					
ANR	1028361	Identifier	RN		1028139	0					
ANR	1028362	ArgumentList	other_r		1028139	1					
ANR	1028363	Argument	other_r		1028139	0					
ANR	1028364	Identifier	other_r		1028139	0					
ANR	1028365	ElseStatement	else		1028139	0					
ANR	1028366	IfStatement	if ( other_r != reg && argw < 0 && argw >= - 0xffffff )		1028139	0					
ANR	1028367	Condition	other_r != reg && argw < 0 && argw >= - 0xffffff	936:12:28417:28463	1028139	0	True				
ANR	1028368	AndExpression	other_r != reg && argw < 0 && argw >= - 0xffffff		1028139	0		&&			
ANR	1028369	EqualityExpression	other_r != reg		1028139	0		!=			
ANR	1028370	Identifier	other_r		1028139	0					
ANR	1028371	Identifier	reg		1028139	1					
ANR	1028372	AndExpression	argw < 0 && argw >= - 0xffffff		1028139	1		&&			
ANR	1028373	RelationalExpression	argw < 0		1028139	0		<			
ANR	1028374	Identifier	argw		1028139	0					
ANR	1028375	PrimaryExpression	0		1028139	1					
ANR	1028376	RelationalExpression	argw >= - 0xffffff		1028139	1		>=			
ANR	1028377	Identifier	argw		1028139	0					
ANR	1028378	UnaryOperationExpression	- 0xffffff		1028139	1					
ANR	1028379	UnaryOperator	-		1028139	0					
ANR	1028380	PrimaryExpression	0xffffff		1028139	1					
ANR	1028381	CompoundStatement		26:61:891:891	1028139	1					
ANR	1028382	ExpressionStatement	argw = - argw	937:4:28472:28484	1028139	0	True				
ANR	1028383	AssignmentExpression	argw = - argw		1028139	0		=			
ANR	1028384	Identifier	argw		1028139	0					
ANR	1028385	UnaryOperationExpression	- argw		1028139	1					
ANR	1028386	UnaryOperator	-		1028139	0					
ANR	1028387	Identifier	argw		1028139	1					
ANR	1028388	IfStatement	if ( ( argw & 0xfff ) != 0 )		1028139	1					
ANR	1028389	Condition	( argw & 0xfff ) != 0	938:8:28494:28512	1028139	0	True				
ANR	1028390	EqualityExpression	( argw & 0xfff ) != 0		1028139	0		!=			
ANR	1028391	BitAndExpression	argw & 0xfff		1028139	0		&			
ANR	1028392	Identifier	argw		1028139	0					
ANR	1028393	PrimaryExpression	0xfff		1028139	1					
ANR	1028394	PrimaryExpression	0		1028139	1					
ANR	1028395	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) ) )"	939:5:28520:28607	1028139	1	True				
ANR	1028396	CallExpression	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) ) )"		1028139	0					
ANR	1028397	Callee	FAIL_IF		1028139	0					
ANR	1028398	Identifier	FAIL_IF		1028139	0					
ANR	1028399	ArgumentList	"push_inst ( compiler , SUBI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) )"		1028139	1					
ANR	1028400	Argument	"push_inst ( compiler , SUBI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) )"		1028139	0					
ANR	1028401	CallExpression	"push_inst ( compiler , SUBI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 ) )"		1028139	0					
ANR	1028402	Callee	push_inst		1028139	0					
ANR	1028403	Identifier	push_inst		1028139	0					
ANR	1028404	ArgumentList	compiler		1028139	1					
ANR	1028405	Argument	compiler		1028139	0					
ANR	1028406	Identifier	compiler		1028139	0					
ANR	1028407	Argument	SUBI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	1					
ANR	1028408	InclusiveOrExpression	SUBI | RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	0		|			
ANR	1028409	Identifier	SUBI		1028139	0					
ANR	1028410	InclusiveOrExpression	RD ( other_r ) | RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	1		|			
ANR	1028411	CallExpression	RD ( other_r )		1028139	0					
ANR	1028412	Callee	RD		1028139	0					
ANR	1028413	Identifier	RD		1028139	0					
ANR	1028414	ArgumentList	other_r		1028139	1					
ANR	1028415	Argument	other_r		1028139	0					
ANR	1028416	Identifier	other_r		1028139	0					
ANR	1028417	InclusiveOrExpression	RN ( other_r ) | ( ( argw & 0xfff ) << 10 )		1028139	1		|			
ANR	1028418	CallExpression	RN ( other_r )		1028139	0					
ANR	1028419	Callee	RN		1028139	0					
ANR	1028420	Identifier	RN		1028139	0					
ANR	1028421	ArgumentList	other_r		1028139	1					
ANR	1028422	Argument	other_r		1028139	0					
ANR	1028423	Identifier	other_r		1028139	0					
ANR	1028424	ShiftExpression	( argw & 0xfff ) << 10		1028139	1		<<			
ANR	1028425	BitAndExpression	argw & 0xfff		1028139	0		&			
ANR	1028426	Identifier	argw		1028139	0					
ANR	1028427	PrimaryExpression	0xfff		1028139	1					
ANR	1028428	PrimaryExpression	10		1028139	1					
ANR	1028429	IfStatement	if ( argw >> 12 )		1028139	2					
ANR	1028430	Condition	argw >> 12	940:8:28617:28626	1028139	0	True				
ANR	1028431	ShiftExpression	argw >> 12		1028139	0		>>			
ANR	1028432	Identifier	argw		1028139	0					
ANR	1028433	PrimaryExpression	12		1028139	1					
ANR	1028434	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUBI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) ) )"	941:5:28634:28731	1028139	1	True				
ANR	1028435	CallExpression	"FAIL_IF ( push_inst ( compiler , SUBI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) ) )"		1028139	0					
ANR	1028436	Callee	FAIL_IF		1028139	0					
ANR	1028437	Identifier	FAIL_IF		1028139	0					
ANR	1028438	ArgumentList	"push_inst ( compiler , SUBI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) )"		1028139	1					
ANR	1028439	Argument	"push_inst ( compiler , SUBI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) )"		1028139	0					
ANR	1028440	CallExpression	"push_inst ( compiler , SUBI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 ) )"		1028139	0					
ANR	1028441	Callee	push_inst		1028139	0					
ANR	1028442	Identifier	push_inst		1028139	0					
ANR	1028443	ArgumentList	compiler		1028139	1					
ANR	1028444	Argument	compiler		1028139	0					
ANR	1028445	Identifier	compiler		1028139	0					
ANR	1028446	Argument	SUBI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1					
ANR	1028447	InclusiveOrExpression	SUBI | ( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	0		|			
ANR	1028448	Identifier	SUBI		1028139	0					
ANR	1028449	InclusiveOrExpression	( 1 << 22 ) | RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1028450	ShiftExpression	1 << 22		1028139	0		<<			
ANR	1028451	PrimaryExpression	1		1028139	0					
ANR	1028452	PrimaryExpression	22		1028139	1					
ANR	1028453	InclusiveOrExpression	RD ( other_r ) | RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1028454	CallExpression	RD ( other_r )		1028139	0					
ANR	1028455	Callee	RD		1028139	0					
ANR	1028456	Identifier	RD		1028139	0					
ANR	1028457	ArgumentList	other_r		1028139	1					
ANR	1028458	Argument	other_r		1028139	0					
ANR	1028459	Identifier	other_r		1028139	0					
ANR	1028460	InclusiveOrExpression	RN ( other_r ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1028461	CallExpression	RN ( other_r )		1028139	0					
ANR	1028462	Callee	RN		1028139	0					
ANR	1028463	Identifier	RN		1028139	0					
ANR	1028464	ArgumentList	other_r		1028139	1					
ANR	1028465	Argument	other_r		1028139	0					
ANR	1028466	Identifier	other_r		1028139	0					
ANR	1028467	ShiftExpression	( argw >> 12 ) << 10		1028139	1		<<			
ANR	1028468	ShiftExpression	argw >> 12		1028139	0		>>			
ANR	1028469	Identifier	argw		1028139	0					
ANR	1028470	PrimaryExpression	12		1028139	1					
ANR	1028471	PrimaryExpression	10		1028139	1					
ANR	1028472	ReturnStatement	"return push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r ) ) ;"	942:4:28737:28831	1028139	3	True				
ANR	1028473	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r ) )"		1028139	0					
ANR	1028474	Callee	push_inst		1028139	0					
ANR	1028475	Identifier	push_inst		1028139	0					
ANR	1028476	ArgumentList	compiler		1028139	1					
ANR	1028477	Argument	compiler		1028139	0					
ANR	1028478	Identifier	compiler		1028139	0					
ANR	1028479	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r )		1028139	1					
ANR	1028480	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( other_r )		1028139	0		|			
ANR	1028481	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1028482	Identifier	sljit_mem_imm		1028139	0					
ANR	1028483	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1028484	Identifier	flags		1028139	0					
ANR	1028485	PrimaryExpression	0x3		1028139	1					
ANR	1028486	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( other_r )		1028139	1		|			
ANR	1028487	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1028488	Identifier	shift		1028139	0					
ANR	1028489	PrimaryExpression	30		1028139	1					
ANR	1028490	InclusiveOrExpression	RT ( reg ) | RN ( other_r )		1028139	1		|			
ANR	1028491	CallExpression	RT ( reg )		1028139	0					
ANR	1028492	Callee	RT		1028139	0					
ANR	1028493	Identifier	RT		1028139	0					
ANR	1028494	ArgumentList	reg		1028139	1					
ANR	1028495	Argument	reg		1028139	0					
ANR	1028496	Identifier	reg		1028139	0					
ANR	1028497	CallExpression	RN ( other_r )		1028139	1					
ANR	1028498	Callee	RN		1028139	0					
ANR	1028499	Identifier	RN		1028139	0					
ANR	1028500	ArgumentList	other_r		1028139	1					
ANR	1028501	Argument	other_r		1028139	0					
ANR	1028502	Identifier	other_r		1028139	0					
ANR	1028503	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM )		1028139	2					
ANR	1028504	Condition	compiler -> cache_arg == SLJIT_MEM	945:7:28846:28877	1028139	0	True				
ANR	1028505	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1028139	0		==			
ANR	1028506	PtrMemberAccess	compiler -> cache_arg		1028139	0					
ANR	1028507	Identifier	compiler		1028139	0					
ANR	1028508	Identifier	cache_arg		1028139	1					
ANR	1028509	Identifier	SLJIT_MEM		1028139	1					
ANR	1028510	CompoundStatement		35:41:1305:1305	1028139	1					
ANR	1028511	IfStatement	if ( argw == compiler -> cache_argw )		1028139	0					
ANR	1028512	Condition	argw == compiler -> cache_argw	946:8:28890:28917	1028139	0	True				
ANR	1028513	EqualityExpression	argw == compiler -> cache_argw		1028139	0		==			
ANR	1028514	Identifier	argw		1028139	0					
ANR	1028515	PtrMemberAccess	compiler -> cache_argw		1028139	1					
ANR	1028516	Identifier	compiler		1028139	0					
ANR	1028517	Identifier	cache_argw		1028139	1					
ANR	1028518	CompoundStatement		36:38:1345:1345	1028139	1					
ANR	1028519	ExpressionStatement	other_r = TMP_REG3	947:5:28927:28945	1028139	0	True				
ANR	1028520	AssignmentExpression	other_r = TMP_REG3		1028139	0		=			
ANR	1028521	Identifier	other_r		1028139	0					
ANR	1028522	Identifier	TMP_REG3		1028139	1					
ANR	1028523	ExpressionStatement	argw = 0	948:5:28952:28960	1028139	1	True				
ANR	1028524	AssignmentExpression	argw = 0		1028139	0		=			
ANR	1028525	Identifier	argw		1028139	0					
ANR	1028526	PrimaryExpression	0		1028139	1					
ANR	1028527	ElseStatement	else		1028139	0					
ANR	1028528	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED )"		1028139	0					
ANR	1028529	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"	950:13:28981:29078	1028139	0	True				
ANR	1028530	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"		1028139	0		!=			
ANR	1028531	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw )"		1028139	0					
ANR	1028532	Callee	emit_set_delta		1028139	0					
ANR	1028533	Identifier	emit_set_delta		1028139	0					
ANR	1028534	ArgumentList	compiler		1028139	1					
ANR	1028535	Argument	compiler		1028139	0					
ANR	1028536	Identifier	compiler		1028139	0					
ANR	1028537	Argument	TMP_REG3		1028139	1					
ANR	1028538	Identifier	TMP_REG3		1028139	0					
ANR	1028539	Argument	TMP_REG3		1028139	2					
ANR	1028540	Identifier	TMP_REG3		1028139	0					
ANR	1028541	Argument	argw - compiler -> cache_argw		1028139	3					
ANR	1028542	AdditiveExpression	argw - compiler -> cache_argw		1028139	0		-			
ANR	1028543	Identifier	argw		1028139	0					
ANR	1028544	PtrMemberAccess	compiler -> cache_argw		1028139	1					
ANR	1028545	Identifier	compiler		1028139	0					
ANR	1028546	Identifier	cache_argw		1028139	1					
ANR	1028547	Identifier	SLJIT_ERR_UNSUPPORTED		1028139	1					
ANR	1028548	CompoundStatement		40:113:1506:1506	1028139	1					
ANR	1028549	ExpressionStatement	FAIL_IF ( compiler -> error )	951:5:29088:29112	1028139	0	True				
ANR	1028550	CallExpression	FAIL_IF ( compiler -> error )		1028139	0					
ANR	1028551	Callee	FAIL_IF		1028139	0					
ANR	1028552	Identifier	FAIL_IF		1028139	0					
ANR	1028553	ArgumentList	compiler -> error		1028139	1					
ANR	1028554	Argument	compiler -> error		1028139	0					
ANR	1028555	PtrMemberAccess	compiler -> error		1028139	0					
ANR	1028556	Identifier	compiler		1028139	0					
ANR	1028557	Identifier	error		1028139	1					
ANR	1028558	ExpressionStatement	compiler -> cache_argw = argw	952:5:29119:29146	1028139	1	True				
ANR	1028559	AssignmentExpression	compiler -> cache_argw = argw		1028139	0		=			
ANR	1028560	PtrMemberAccess	compiler -> cache_argw		1028139	0					
ANR	1028561	Identifier	compiler		1028139	0					
ANR	1028562	Identifier	cache_argw		1028139	1					
ANR	1028563	Identifier	argw		1028139	1					
ANR	1028564	ExpressionStatement	other_r = TMP_REG3	953:5:29153:29171	1028139	2	True				
ANR	1028565	AssignmentExpression	other_r = TMP_REG3		1028139	0		=			
ANR	1028566	Identifier	other_r		1028139	0					
ANR	1028567	Identifier	TMP_REG3		1028139	1					
ANR	1028568	ExpressionStatement	argw = 0	954:5:29178:29186	1028139	3	True				
ANR	1028569	AssignmentExpression	argw = 0		1028139	0		=			
ANR	1028570	Identifier	argw		1028139	0					
ANR	1028571	PrimaryExpression	0		1028139	1					
ANR	1028572	IfStatement	if ( argw )		1028139	3					
ANR	1028573	Condition	argw	958:7:29207:29210	1028139	0	True				
ANR	1028574	Identifier	argw		1028139	0					
ANR	1028575	CompoundStatement		48:13:1638:1638	1028139	1					
ANR	1028576	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	959:4:29219:29268	1028139	0	True				
ANR	1028577	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1028139	0					
ANR	1028578	Callee	FAIL_IF		1028139	0					
ANR	1028579	Identifier	FAIL_IF		1028139	0					
ANR	1028580	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1028139	1					
ANR	1028581	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1028139	0					
ANR	1028582	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1028139	0					
ANR	1028583	Callee	load_immediate		1028139	0					
ANR	1028584	Identifier	load_immediate		1028139	0					
ANR	1028585	ArgumentList	compiler		1028139	1					
ANR	1028586	Argument	compiler		1028139	0					
ANR	1028587	Identifier	compiler		1028139	0					
ANR	1028588	Argument	TMP_REG3		1028139	1					
ANR	1028589	Identifier	TMP_REG3		1028139	0					
ANR	1028590	Argument	argw		1028139	2					
ANR	1028591	Identifier	argw		1028139	0					
ANR	1028592	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	960:4:29274:29305	1028139	1	True				
ANR	1028593	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1028139	0		=			
ANR	1028594	PtrMemberAccess	compiler -> cache_arg		1028139	0					
ANR	1028595	Identifier	compiler		1028139	0					
ANR	1028596	Identifier	cache_arg		1028139	1					
ANR	1028597	Identifier	SLJIT_MEM		1028139	1					
ANR	1028598	ExpressionStatement	compiler -> cache_argw = argw	961:4:29311:29338	1028139	2	True				
ANR	1028599	AssignmentExpression	compiler -> cache_argw = argw		1028139	0		=			
ANR	1028600	PtrMemberAccess	compiler -> cache_argw		1028139	0					
ANR	1028601	Identifier	compiler		1028139	0					
ANR	1028602	Identifier	cache_argw		1028139	1					
ANR	1028603	Identifier	argw		1028139	1					
ANR	1028604	ExpressionStatement	other_r = TMP_REG3	962:4:29344:29362	1028139	3	True				
ANR	1028605	AssignmentExpression	other_r = TMP_REG3		1028139	0		=			
ANR	1028606	Identifier	other_r		1028139	0					
ANR	1028607	Identifier	TMP_REG3		1028139	1					
ANR	1028608	ExpressionStatement	argw = 0	963:4:29368:29376	1028139	4	True				
ANR	1028609	AssignmentExpression	argw = 0		1028139	0		=			
ANR	1028610	Identifier	argw		1028139	0					
ANR	1028611	PrimaryExpression	0		1028139	1					
ANR	1028612	ExpressionStatement	arg &= REG_MASK	968:2:29415:29430	1028139	2	True				
ANR	1028613	AssignmentExpression	arg &= REG_MASK		1028139	0		&=			
ANR	1028614	Identifier	arg		1028139	0					
ANR	1028615	Identifier	REG_MASK		1028139	1					
ANR	1028616	ExpressionStatement	argw &= 0x3	969:2:29434:29445	1028139	3	True				
ANR	1028617	AssignmentExpression	argw &= 0x3		1028139	0		&=			
ANR	1028618	Identifier	argw		1028139	0					
ANR	1028619	PrimaryExpression	0x3		1028139	1					
ANR	1028620	IfStatement	if ( ! argw || argw == shift )		1028139	4					
ANR	1028621	Condition	! argw || argw == shift	970:6:29453:29474	1028139	0	True				
ANR	1028622	OrExpression	! argw || argw == shift		1028139	0		||			
ANR	1028623	UnaryOperationExpression	! argw		1028139	0					
ANR	1028624	UnaryOperator	!		1028139	0					
ANR	1028625	Identifier	argw		1028139	1					
ANR	1028626	EqualityExpression	argw == shift		1028139	1		==			
ANR	1028627	Identifier	argw		1028139	0					
ANR	1028628	Identifier	shift		1028139	1					
ANR	1028629	CompoundStatement		60:30:1902:1902	1028139	1					
ANR	1028630	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 ) ) )"	971:3:29482:29613	1028139	0	True				
ANR	1028631	CallExpression	"FAIL_IF ( push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 ) ) )"		1028139	0					
ANR	1028632	Callee	FAIL_IF		1028139	0					
ANR	1028633	Identifier	FAIL_IF		1028139	0					
ANR	1028634	ArgumentList	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 ) )"		1028139	1					
ANR	1028635	Argument	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 ) )"		1028139	0					
ANR	1028636	CallExpression	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 ) )"		1028139	0					
ANR	1028637	Callee	push_inst		1028139	0					
ANR	1028638	Identifier	push_inst		1028139	0					
ANR	1028639	ArgumentList	compiler		1028139	1					
ANR	1028640	Argument	compiler		1028139	0					
ANR	1028641	Identifier	compiler		1028139	0					
ANR	1028642	Argument	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 )		1028139	1					
ANR	1028643	InclusiveOrExpression	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 )		1028139	0		|			
ANR	1028644	ArrayIndexing	sljit_mem_reg [ flags & 0x3 ]		1028139	0					
ANR	1028645	Identifier	sljit_mem_reg		1028139	0					
ANR	1028646	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1028647	Identifier	flags		1028139	0					
ANR	1028648	PrimaryExpression	0x3		1028139	1					
ANR	1028649	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 )		1028139	1		|			
ANR	1028650	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1028651	Identifier	shift		1028139	0					
ANR	1028652	PrimaryExpression	30		1028139	1					
ANR	1028653	InclusiveOrExpression	RT ( reg ) | RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 )		1028139	1		|			
ANR	1028654	CallExpression	RT ( reg )		1028139	0					
ANR	1028655	Callee	RT		1028139	0					
ANR	1028656	Identifier	RT		1028139	0					
ANR	1028657	ArgumentList	reg		1028139	1					
ANR	1028658	Argument	reg		1028139	0					
ANR	1028659	Identifier	reg		1028139	0					
ANR	1028660	InclusiveOrExpression	RN ( arg ) | RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 )		1028139	1		|			
ANR	1028661	CallExpression	RN ( arg )		1028139	0					
ANR	1028662	Callee	RN		1028139	0					
ANR	1028663	Identifier	RN		1028139	0					
ANR	1028664	ArgumentList	arg		1028139	1					
ANR	1028665	Argument	arg		1028139	0					
ANR	1028666	Identifier	arg		1028139	0					
ANR	1028667	InclusiveOrExpression	RM ( other_r ) | ( argw ? ( 1 << 12 ) : 0 )		1028139	1		|			
ANR	1028668	CallExpression	RM ( other_r )		1028139	0					
ANR	1028669	Callee	RM		1028139	0					
ANR	1028670	Identifier	RM		1028139	0					
ANR	1028671	ArgumentList	other_r		1028139	1					
ANR	1028672	Argument	other_r		1028139	0					
ANR	1028673	Identifier	other_r		1028139	0					
ANR	1028674	ConditionalExpression	argw ? ( 1 << 12 ) : 0		1028139	1					
ANR	1028675	Condition	argw		1028139	0					
ANR	1028676	Identifier	argw		1028139	0					
ANR	1028677	ShiftExpression	1 << 12		1028139	1		<<			
ANR	1028678	PrimaryExpression	1		1028139	0					
ANR	1028679	PrimaryExpression	12		1028139	1					
ANR	1028680	PrimaryExpression	0		1028139	2					
ANR	1028681	ReturnStatement	"return push_inst ( compiler , ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) ) ;"	972:3:29618:29698	1028139	1	True				
ANR	1028682	CallExpression	"push_inst ( compiler , ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1028139	0					
ANR	1028683	Callee	push_inst		1028139	0					
ANR	1028684	Identifier	push_inst		1028139	0					
ANR	1028685	ArgumentList	compiler		1028139	1					
ANR	1028686	Argument	compiler		1028139	0					
ANR	1028687	Identifier	compiler		1028139	0					
ANR	1028688	Argument	ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1					
ANR	1028689	InclusiveOrExpression	ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	0		|			
ANR	1028690	Identifier	ADD		1028139	0					
ANR	1028691	InclusiveOrExpression	RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028692	CallExpression	RD ( arg )		1028139	0					
ANR	1028693	Callee	RD		1028139	0					
ANR	1028694	Identifier	RD		1028139	0					
ANR	1028695	ArgumentList	arg		1028139	1					
ANR	1028696	Argument	arg		1028139	0					
ANR	1028697	Identifier	arg		1028139	0					
ANR	1028698	InclusiveOrExpression	RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028699	CallExpression	RN ( arg )		1028139	0					
ANR	1028700	Callee	RN		1028139	0					
ANR	1028701	Identifier	RN		1028139	0					
ANR	1028702	ArgumentList	arg		1028139	1					
ANR	1028703	Argument	arg		1028139	0					
ANR	1028704	Identifier	arg		1028139	0					
ANR	1028705	InclusiveOrExpression	RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028706	CallExpression	RM ( other_r )		1028139	0					
ANR	1028707	Callee	RM		1028139	0					
ANR	1028708	Identifier	RM		1028139	0					
ANR	1028709	ArgumentList	other_r		1028139	1					
ANR	1028710	Argument	other_r		1028139	0					
ANR	1028711	Identifier	other_r		1028139	0					
ANR	1028712	ShiftExpression	argw << 10		1028139	1		<<			
ANR	1028713	Identifier	argw		1028139	0					
ANR	1028714	PrimaryExpression	10		1028139	1					
ANR	1028715	IfStatement	if ( arg != reg )		1028139	5					
ANR	1028716	Condition	arg != reg	974:6:29710:29719	1028139	0	True				
ANR	1028717	EqualityExpression	arg != reg		1028139	0		!=			
ANR	1028718	Identifier	arg		1028139	0					
ANR	1028719	Identifier	reg		1028139	1					
ANR	1028720	CompoundStatement		64:18:2147:2147	1028139	1					
ANR	1028721	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) ) )"	975:3:29727:29809	1028139	0	True				
ANR	1028722	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) ) )"		1028139	0					
ANR	1028723	Callee	FAIL_IF		1028139	0					
ANR	1028724	Identifier	FAIL_IF		1028139	0					
ANR	1028725	ArgumentList	"push_inst ( compiler , ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1028139	1					
ANR	1028726	Argument	"push_inst ( compiler , ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1028139	0					
ANR	1028727	CallExpression	"push_inst ( compiler , ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1028139	0					
ANR	1028728	Callee	push_inst		1028139	0					
ANR	1028729	Identifier	push_inst		1028139	0					
ANR	1028730	ArgumentList	compiler		1028139	1					
ANR	1028731	Argument	compiler		1028139	0					
ANR	1028732	Identifier	compiler		1028139	0					
ANR	1028733	Argument	ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1					
ANR	1028734	InclusiveOrExpression	ADD | RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	0		|			
ANR	1028735	Identifier	ADD		1028139	0					
ANR	1028736	InclusiveOrExpression	RD ( arg ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028737	CallExpression	RD ( arg )		1028139	0					
ANR	1028738	Callee	RD		1028139	0					
ANR	1028739	Identifier	RD		1028139	0					
ANR	1028740	ArgumentList	arg		1028139	1					
ANR	1028741	Argument	arg		1028139	0					
ANR	1028742	Identifier	arg		1028139	0					
ANR	1028743	InclusiveOrExpression	RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028744	CallExpression	RN ( arg )		1028139	0					
ANR	1028745	Callee	RN		1028139	0					
ANR	1028746	Identifier	RN		1028139	0					
ANR	1028747	ArgumentList	arg		1028139	1					
ANR	1028748	Argument	arg		1028139	0					
ANR	1028749	Identifier	arg		1028139	0					
ANR	1028750	InclusiveOrExpression	RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028751	CallExpression	RM ( other_r )		1028139	0					
ANR	1028752	Callee	RM		1028139	0					
ANR	1028753	Identifier	RM		1028139	0					
ANR	1028754	ArgumentList	other_r		1028139	1					
ANR	1028755	Argument	other_r		1028139	0					
ANR	1028756	Identifier	other_r		1028139	0					
ANR	1028757	ShiftExpression	argw << 10		1028139	1		<<			
ANR	1028758	Identifier	argw		1028139	0					
ANR	1028759	PrimaryExpression	10		1028139	1					
ANR	1028760	ReturnStatement	"return push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) ) ;"	976:3:29814:29904	1028139	1	True				
ANR	1028761	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) )"		1028139	0					
ANR	1028762	Callee	push_inst		1028139	0					
ANR	1028763	Identifier	push_inst		1028139	0					
ANR	1028764	ArgumentList	compiler		1028139	1					
ANR	1028765	Argument	compiler		1028139	0					
ANR	1028766	Identifier	compiler		1028139	0					
ANR	1028767	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg )		1028139	1					
ANR	1028768	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg )		1028139	0		|			
ANR	1028769	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1028770	Identifier	sljit_mem_imm		1028139	0					
ANR	1028771	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1028772	Identifier	flags		1028139	0					
ANR	1028773	PrimaryExpression	0x3		1028139	1					
ANR	1028774	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg )		1028139	1		|			
ANR	1028775	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1028776	Identifier	shift		1028139	0					
ANR	1028777	PrimaryExpression	30		1028139	1					
ANR	1028778	InclusiveOrExpression	RT ( reg ) | RN ( arg )		1028139	1		|			
ANR	1028779	CallExpression	RT ( reg )		1028139	0					
ANR	1028780	Callee	RT		1028139	0					
ANR	1028781	Identifier	RT		1028139	0					
ANR	1028782	ArgumentList	reg		1028139	1					
ANR	1028783	Argument	reg		1028139	0					
ANR	1028784	Identifier	reg		1028139	0					
ANR	1028785	CallExpression	RN ( arg )		1028139	1					
ANR	1028786	Callee	RN		1028139	0					
ANR	1028787	Identifier	RN		1028139	0					
ANR	1028788	ArgumentList	arg		1028139	1					
ANR	1028789	Argument	arg		1028139	0					
ANR	1028790	Identifier	arg		1028139	0					
ANR	1028791	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) ) )"	978:2:29912:29997	1028139	6	True				
ANR	1028792	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) ) )"		1028139	0					
ANR	1028793	Callee	FAIL_IF		1028139	0					
ANR	1028794	Identifier	FAIL_IF		1028139	0					
ANR	1028795	ArgumentList	"push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1028139	1					
ANR	1028796	Argument	"push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1028139	0					
ANR	1028797	CallExpression	"push_inst ( compiler , ADD | RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1028139	0					
ANR	1028798	Callee	push_inst		1028139	0					
ANR	1028799	Identifier	push_inst		1028139	0					
ANR	1028800	ArgumentList	compiler		1028139	1					
ANR	1028801	Argument	compiler		1028139	0					
ANR	1028802	Identifier	compiler		1028139	0					
ANR	1028803	Argument	ADD | RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1					
ANR	1028804	InclusiveOrExpression	ADD | RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	0		|			
ANR	1028805	Identifier	ADD		1028139	0					
ANR	1028806	InclusiveOrExpression	RD ( TMP_LR ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028807	CallExpression	RD ( TMP_LR )		1028139	0					
ANR	1028808	Callee	RD		1028139	0					
ANR	1028809	Identifier	RD		1028139	0					
ANR	1028810	ArgumentList	TMP_LR		1028139	1					
ANR	1028811	Argument	TMP_LR		1028139	0					
ANR	1028812	Identifier	TMP_LR		1028139	0					
ANR	1028813	InclusiveOrExpression	RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028814	CallExpression	RN ( arg )		1028139	0					
ANR	1028815	Callee	RN		1028139	0					
ANR	1028816	Identifier	RN		1028139	0					
ANR	1028817	ArgumentList	arg		1028139	1					
ANR	1028818	Argument	arg		1028139	0					
ANR	1028819	Identifier	arg		1028139	0					
ANR	1028820	InclusiveOrExpression	RM ( other_r ) | ( argw << 10 )		1028139	1		|			
ANR	1028821	CallExpression	RM ( other_r )		1028139	0					
ANR	1028822	Callee	RM		1028139	0					
ANR	1028823	Identifier	RM		1028139	0					
ANR	1028824	ArgumentList	other_r		1028139	1					
ANR	1028825	Argument	other_r		1028139	0					
ANR	1028826	Identifier	other_r		1028139	0					
ANR	1028827	ShiftExpression	argw << 10		1028139	1		<<			
ANR	1028828	Identifier	argw		1028139	0					
ANR	1028829	PrimaryExpression	10		1028139	1					
ANR	1028830	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_LR ) ) )"	979:2:30001:30096	1028139	7	True				
ANR	1028831	CallExpression	"FAIL_IF ( push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_LR ) ) )"		1028139	0					
ANR	1028832	Callee	FAIL_IF		1028139	0					
ANR	1028833	Identifier	FAIL_IF		1028139	0					
ANR	1028834	ArgumentList	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_LR ) )"		1028139	1					
ANR	1028835	Argument	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_LR ) )"		1028139	0					
ANR	1028836	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_LR ) )"		1028139	0					
ANR	1028837	Callee	push_inst		1028139	0					
ANR	1028838	Identifier	push_inst		1028139	0					
ANR	1028839	ArgumentList	compiler		1028139	1					
ANR	1028840	Argument	compiler		1028139	0					
ANR	1028841	Identifier	compiler		1028139	0					
ANR	1028842	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_LR )		1028139	1					
ANR	1028843	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_LR )		1028139	0		|			
ANR	1028844	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1028845	Identifier	sljit_mem_imm		1028139	0					
ANR	1028846	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1028847	Identifier	flags		1028139	0					
ANR	1028848	PrimaryExpression	0x3		1028139	1					
ANR	1028849	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( TMP_LR )		1028139	1		|			
ANR	1028850	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1028851	Identifier	shift		1028139	0					
ANR	1028852	PrimaryExpression	30		1028139	1					
ANR	1028853	InclusiveOrExpression	RT ( reg ) | RN ( TMP_LR )		1028139	1		|			
ANR	1028854	CallExpression	RT ( reg )		1028139	0					
ANR	1028855	Callee	RT		1028139	0					
ANR	1028856	Identifier	RT		1028139	0					
ANR	1028857	ArgumentList	reg		1028139	1					
ANR	1028858	Argument	reg		1028139	0					
ANR	1028859	Identifier	reg		1028139	0					
ANR	1028860	CallExpression	RN ( TMP_LR )		1028139	1					
ANR	1028861	Callee	RN		1028139	0					
ANR	1028862	Identifier	RN		1028139	0					
ANR	1028863	ArgumentList	TMP_LR		1028139	1					
ANR	1028864	Argument	TMP_LR		1028139	0					
ANR	1028865	Identifier	TMP_LR		1028139	0					
ANR	1028866	ReturnStatement	"return push_inst ( compiler , ORR | RD ( arg ) | RN ( TMP_ZERO ) | RM ( TMP_LR ) ) ;"	980:2:30100:30169	1028139	8	True				
ANR	1028867	CallExpression	"push_inst ( compiler , ORR | RD ( arg ) | RN ( TMP_ZERO ) | RM ( TMP_LR ) )"		1028139	0					
ANR	1028868	Callee	push_inst		1028139	0					
ANR	1028869	Identifier	push_inst		1028139	0					
ANR	1028870	ArgumentList	compiler		1028139	1					
ANR	1028871	Argument	compiler		1028139	0					
ANR	1028872	Identifier	compiler		1028139	0					
ANR	1028873	Argument	ORR | RD ( arg ) | RN ( TMP_ZERO ) | RM ( TMP_LR )		1028139	1					
ANR	1028874	InclusiveOrExpression	ORR | RD ( arg ) | RN ( TMP_ZERO ) | RM ( TMP_LR )		1028139	0		|			
ANR	1028875	Identifier	ORR		1028139	0					
ANR	1028876	InclusiveOrExpression	RD ( arg ) | RN ( TMP_ZERO ) | RM ( TMP_LR )		1028139	1		|			
ANR	1028877	CallExpression	RD ( arg )		1028139	0					
ANR	1028878	Callee	RD		1028139	0					
ANR	1028879	Identifier	RD		1028139	0					
ANR	1028880	ArgumentList	arg		1028139	1					
ANR	1028881	Argument	arg		1028139	0					
ANR	1028882	Identifier	arg		1028139	0					
ANR	1028883	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( TMP_LR )		1028139	1		|			
ANR	1028884	CallExpression	RN ( TMP_ZERO )		1028139	0					
ANR	1028885	Callee	RN		1028139	0					
ANR	1028886	Identifier	RN		1028139	0					
ANR	1028887	ArgumentList	TMP_ZERO		1028139	1					
ANR	1028888	Argument	TMP_ZERO		1028139	0					
ANR	1028889	Identifier	TMP_ZERO		1028139	0					
ANR	1028890	CallExpression	RM ( TMP_LR )		1028139	1					
ANR	1028891	Callee	RM		1028139	0					
ANR	1028892	Identifier	RM		1028139	0					
ANR	1028893	ArgumentList	TMP_LR		1028139	1					
ANR	1028894	Argument	TMP_LR		1028139	0					
ANR	1028895	Identifier	TMP_LR		1028139	0					
ANR	1028896	IfStatement	if ( arg & OFFS_REG_MASK )		1028139	7					
ANR	1028897	Condition	arg & OFFS_REG_MASK	983:5:30180:30198	1028139	0	True				
ANR	1028898	BitAndExpression	arg & OFFS_REG_MASK		1028139	0		&			
ANR	1028899	Identifier	arg		1028139	0					
ANR	1028900	Identifier	OFFS_REG_MASK		1028139	1					
ANR	1028901	CompoundStatement		73:26:2626:2626	1028139	1					
ANR	1028902	ExpressionStatement	other_r = OFFS_REG ( arg )	984:2:30205:30228	1028139	0	True				
ANR	1028903	AssignmentExpression	other_r = OFFS_REG ( arg )		1028139	0		=			
ANR	1028904	Identifier	other_r		1028139	0					
ANR	1028905	CallExpression	OFFS_REG ( arg )		1028139	1					
ANR	1028906	Callee	OFFS_REG		1028139	0					
ANR	1028907	Identifier	OFFS_REG		1028139	0					
ANR	1028908	ArgumentList	arg		1028139	1					
ANR	1028909	Argument	arg		1028139	0					
ANR	1028910	Identifier	arg		1028139	0					
ANR	1028911	ExpressionStatement	arg &= REG_MASK	985:2:30232:30247	1028139	1	True				
ANR	1028912	AssignmentExpression	arg &= REG_MASK		1028139	0		&=			
ANR	1028913	Identifier	arg		1028139	0					
ANR	1028914	Identifier	REG_MASK		1028139	1					
ANR	1028915	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 ) ) )"	986:2:30251:30343	1028139	2	True				
ANR	1028916	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 ) ) )"		1028139	0					
ANR	1028917	Callee	FAIL_IF		1028139	0					
ANR	1028918	Identifier	FAIL_IF		1028139	0					
ANR	1028919	ArgumentList	"push_inst ( compiler , ADD | RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 ) )"		1028139	1					
ANR	1028920	Argument	"push_inst ( compiler , ADD | RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 ) )"		1028139	0					
ANR	1028921	CallExpression	"push_inst ( compiler , ADD | RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 ) )"		1028139	0					
ANR	1028922	Callee	push_inst		1028139	0					
ANR	1028923	Identifier	push_inst		1028139	0					
ANR	1028924	ArgumentList	compiler		1028139	1					
ANR	1028925	Argument	compiler		1028139	0					
ANR	1028926	Identifier	compiler		1028139	0					
ANR	1028927	Argument	ADD | RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 )		1028139	1					
ANR	1028928	InclusiveOrExpression	ADD | RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 )		1028139	0		|			
ANR	1028929	Identifier	ADD		1028139	0					
ANR	1028930	InclusiveOrExpression	RD ( tmp_r ) | RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 )		1028139	1		|			
ANR	1028931	CallExpression	RD ( tmp_r )		1028139	0					
ANR	1028932	Callee	RD		1028139	0					
ANR	1028933	Identifier	RD		1028139	0					
ANR	1028934	ArgumentList	tmp_r		1028139	1					
ANR	1028935	Argument	tmp_r		1028139	0					
ANR	1028936	Identifier	tmp_r		1028139	0					
ANR	1028937	InclusiveOrExpression	RN ( arg ) | RM ( other_r ) | ( ( argw & 0x3 ) << 10 )		1028139	1		|			
ANR	1028938	CallExpression	RN ( arg )		1028139	0					
ANR	1028939	Callee	RN		1028139	0					
ANR	1028940	Identifier	RN		1028139	0					
ANR	1028941	ArgumentList	arg		1028139	1					
ANR	1028942	Argument	arg		1028139	0					
ANR	1028943	Identifier	arg		1028139	0					
ANR	1028944	InclusiveOrExpression	RM ( other_r ) | ( ( argw & 0x3 ) << 10 )		1028139	1		|			
ANR	1028945	CallExpression	RM ( other_r )		1028139	0					
ANR	1028946	Callee	RM		1028139	0					
ANR	1028947	Identifier	RM		1028139	0					
ANR	1028948	ArgumentList	other_r		1028139	1					
ANR	1028949	Argument	other_r		1028139	0					
ANR	1028950	Identifier	other_r		1028139	0					
ANR	1028951	ShiftExpression	( argw & 0x3 ) << 10		1028139	1		<<			
ANR	1028952	BitAndExpression	argw & 0x3		1028139	0		&			
ANR	1028953	Identifier	argw		1028139	0					
ANR	1028954	PrimaryExpression	0x3		1028139	1					
ANR	1028955	PrimaryExpression	10		1028139	1					
ANR	1028956	ReturnStatement	"return push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r ) ) ;"	987:2:30347:30439	1028139	3	True				
ANR	1028957	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r ) )"		1028139	0					
ANR	1028958	Callee	push_inst		1028139	0					
ANR	1028959	Identifier	push_inst		1028139	0					
ANR	1028960	ArgumentList	compiler		1028139	1					
ANR	1028961	Argument	compiler		1028139	0					
ANR	1028962	Identifier	compiler		1028139	0					
ANR	1028963	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r )		1028139	1					
ANR	1028964	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r )		1028139	0		|			
ANR	1028965	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1028966	Identifier	sljit_mem_imm		1028139	0					
ANR	1028967	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1028968	Identifier	flags		1028139	0					
ANR	1028969	PrimaryExpression	0x3		1028139	1					
ANR	1028970	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( tmp_r )		1028139	1		|			
ANR	1028971	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1028972	Identifier	shift		1028139	0					
ANR	1028973	PrimaryExpression	30		1028139	1					
ANR	1028974	InclusiveOrExpression	RT ( reg ) | RN ( tmp_r )		1028139	1		|			
ANR	1028975	CallExpression	RT ( reg )		1028139	0					
ANR	1028976	Callee	RT		1028139	0					
ANR	1028977	Identifier	RT		1028139	0					
ANR	1028978	ArgumentList	reg		1028139	1					
ANR	1028979	Argument	reg		1028139	0					
ANR	1028980	Identifier	reg		1028139	0					
ANR	1028981	CallExpression	RN ( tmp_r )		1028139	1					
ANR	1028982	Callee	RN		1028139	0					
ANR	1028983	Identifier	RN		1028139	0					
ANR	1028984	ArgumentList	tmp_r		1028139	1					
ANR	1028985	Argument	tmp_r		1028139	0					
ANR	1028986	Identifier	tmp_r		1028139	0					
ANR	1028987	IfStatement	if ( compiler -> cache_arg == arg )		1028139	8					
ANR	1028988	Condition	compiler -> cache_arg == arg	990:5:30450:30475	1028139	0	True				
ANR	1028989	EqualityExpression	compiler -> cache_arg == arg		1028139	0		==			
ANR	1028990	PtrMemberAccess	compiler -> cache_arg		1028139	0					
ANR	1028991	Identifier	compiler		1028139	0					
ANR	1028992	Identifier	cache_arg		1028139	1					
ANR	1028993	Identifier	arg		1028139	1					
ANR	1028994	CompoundStatement		80:33:2903:2903	1028139	1					
ANR	1028995	ExpressionStatement	diff = argw - compiler -> cache_argw	991:2:30482:30516	1028139	0	True				
ANR	1028996	AssignmentExpression	diff = argw - compiler -> cache_argw		1028139	0		=			
ANR	1028997	Identifier	diff		1028139	0					
ANR	1028998	AdditiveExpression	argw - compiler -> cache_argw		1028139	1		-			
ANR	1028999	Identifier	argw		1028139	0					
ANR	1029000	PtrMemberAccess	compiler -> cache_argw		1028139	1					
ANR	1029001	Identifier	compiler		1028139	0					
ANR	1029002	Identifier	cache_argw		1028139	1					
ANR	1029003	IfStatement	if ( diff <= 255 && diff >= - 256 )		1028139	1					
ANR	1029004	Condition	diff <= 255 && diff >= - 256	992:6:30524:30550	1028139	0	True				
ANR	1029005	AndExpression	diff <= 255 && diff >= - 256		1028139	0		&&			
ANR	1029006	RelationalExpression	diff <= 255		1028139	0		<=			
ANR	1029007	Identifier	diff		1028139	0					
ANR	1029008	PrimaryExpression	255		1028139	1					
ANR	1029009	RelationalExpression	diff >= - 256		1028139	1		>=			
ANR	1029010	Identifier	diff		1028139	0					
ANR	1029011	UnaryOperationExpression	- 256		1028139	1					
ANR	1029012	UnaryOperator	-		1028139	0					
ANR	1029013	PrimaryExpression	256		1028139	1					
ANR	1029014	ReturnStatement	"return push_inst ( compiler , sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 ) ) ;"	993:3:30556:30681	1028139	1	True				
ANR	1029015	CallExpression	"push_inst ( compiler , sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 ) )"		1028139	0					
ANR	1029016	Callee	push_inst		1028139	0					
ANR	1029017	Identifier	push_inst		1028139	0					
ANR	1029018	ArgumentList	compiler		1028139	1					
ANR	1029019	Argument	compiler		1028139	0					
ANR	1029020	Identifier	compiler		1028139	0					
ANR	1029021	Argument	sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1028139	1					
ANR	1029022	InclusiveOrExpression	sljit_mem_simm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1028139	0		|			
ANR	1029023	ArrayIndexing	sljit_mem_simm [ flags & 0x3 ]		1028139	0					
ANR	1029024	Identifier	sljit_mem_simm		1028139	0					
ANR	1029025	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1029026	Identifier	flags		1028139	0					
ANR	1029027	PrimaryExpression	0x3		1028139	1					
ANR	1029028	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1028139	1		|			
ANR	1029029	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1029030	Identifier	shift		1028139	0					
ANR	1029031	PrimaryExpression	30		1028139	1					
ANR	1029032	InclusiveOrExpression	RT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1028139	1		|			
ANR	1029033	CallExpression	RT ( reg )		1028139	0					
ANR	1029034	Callee	RT		1028139	0					
ANR	1029035	Identifier	RT		1028139	0					
ANR	1029036	ArgumentList	reg		1028139	1					
ANR	1029037	Argument	reg		1028139	0					
ANR	1029038	Identifier	reg		1028139	0					
ANR	1029039	InclusiveOrExpression	RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1028139	1		|			
ANR	1029040	CallExpression	RN ( TMP_REG3 )		1028139	0					
ANR	1029041	Callee	RN		1028139	0					
ANR	1029042	Identifier	RN		1028139	0					
ANR	1029043	ArgumentList	TMP_REG3		1028139	1					
ANR	1029044	Argument	TMP_REG3		1028139	0					
ANR	1029045	Identifier	TMP_REG3		1028139	0					
ANR	1029046	ShiftExpression	( diff & 0x1ff ) << 12		1028139	1		<<			
ANR	1029047	BitAndExpression	diff & 0x1ff		1028139	0		&			
ANR	1029048	Identifier	diff		1028139	0					
ANR	1029049	PrimaryExpression	0x1ff		1028139	1					
ANR	1029050	PrimaryExpression	12		1028139	1					
ANR	1029051	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED )"		1028139	2					
ANR	1029052	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED"	995:6:30689:30763	1028139	0	True				
ANR	1029053	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED"		1028139	0		!=			
ANR	1029054	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff )"		1028139	0					
ANR	1029055	Callee	emit_set_delta		1028139	0					
ANR	1029056	Identifier	emit_set_delta		1028139	0					
ANR	1029057	ArgumentList	compiler		1028139	1					
ANR	1029058	Argument	compiler		1028139	0					
ANR	1029059	Identifier	compiler		1028139	0					
ANR	1029060	Argument	TMP_REG3		1028139	1					
ANR	1029061	Identifier	TMP_REG3		1028139	0					
ANR	1029062	Argument	TMP_REG3		1028139	2					
ANR	1029063	Identifier	TMP_REG3		1028139	0					
ANR	1029064	Argument	diff		1028139	3					
ANR	1029065	Identifier	diff		1028139	0					
ANR	1029066	Identifier	SLJIT_ERR_UNSUPPORTED		1028139	1					
ANR	1029067	CompoundStatement		85:83:3191:3191	1028139	1					
ANR	1029068	ExpressionStatement	FAIL_IF ( compiler -> error )	996:3:30771:30795	1028139	0	True				
ANR	1029069	CallExpression	FAIL_IF ( compiler -> error )		1028139	0					
ANR	1029070	Callee	FAIL_IF		1028139	0					
ANR	1029071	Identifier	FAIL_IF		1028139	0					
ANR	1029072	ArgumentList	compiler -> error		1028139	1					
ANR	1029073	Argument	compiler -> error		1028139	0					
ANR	1029074	PtrMemberAccess	compiler -> error		1028139	0					
ANR	1029075	Identifier	compiler		1028139	0					
ANR	1029076	Identifier	error		1028139	1					
ANR	1029077	ReturnStatement	"return push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) ) ;"	997:3:30800:30890	1028139	1	True				
ANR	1029078	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) )"		1028139	0					
ANR	1029079	Callee	push_inst		1028139	0					
ANR	1029080	Identifier	push_inst		1028139	0					
ANR	1029081	ArgumentList	compiler		1028139	1					
ANR	1029082	Argument	compiler		1028139	0					
ANR	1029083	Identifier	compiler		1028139	0					
ANR	1029084	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg )		1028139	1					
ANR	1029085	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg )		1028139	0		|			
ANR	1029086	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1029087	Identifier	sljit_mem_imm		1028139	0					
ANR	1029088	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1029089	Identifier	flags		1028139	0					
ANR	1029090	PrimaryExpression	0x3		1028139	1					
ANR	1029091	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg )		1028139	1		|			
ANR	1029092	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1029093	Identifier	shift		1028139	0					
ANR	1029094	PrimaryExpression	30		1028139	1					
ANR	1029095	InclusiveOrExpression	RT ( reg ) | RN ( arg )		1028139	1		|			
ANR	1029096	CallExpression	RT ( reg )		1028139	0					
ANR	1029097	Callee	RT		1028139	0					
ANR	1029098	Identifier	RT		1028139	0					
ANR	1029099	ArgumentList	reg		1028139	1					
ANR	1029100	Argument	reg		1028139	0					
ANR	1029101	Identifier	reg		1028139	0					
ANR	1029102	CallExpression	RN ( arg )		1028139	1					
ANR	1029103	Callee	RN		1028139	0					
ANR	1029104	Identifier	RN		1028139	0					
ANR	1029105	ArgumentList	arg		1028139	1					
ANR	1029106	Argument	arg		1028139	0					
ANR	1029107	Identifier	arg		1028139	0					
ANR	1029108	IfStatement	if ( argw >= 0 && argw <= 0xffffff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0 )		1028139	9					
ANR	1029109	Condition	argw >= 0 && argw <= 0xffffff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0	1001:5:30905:30969	1028139	0	True				
ANR	1029110	AndExpression	argw >= 0 && argw <= 0xffffff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0		1028139	0		&&			
ANR	1029111	RelationalExpression	argw >= 0		1028139	0		>=			
ANR	1029112	Identifier	argw		1028139	0					
ANR	1029113	PrimaryExpression	0		1028139	1					
ANR	1029114	AndExpression	argw <= 0xffffff && ( argw & ( ( 1 << shift ) - 1 ) ) == 0		1028139	1		&&			
ANR	1029115	RelationalExpression	argw <= 0xffffff		1028139	0		<=			
ANR	1029116	Identifier	argw		1028139	0					
ANR	1029117	PrimaryExpression	0xffffff		1028139	1					
ANR	1029118	EqualityExpression	( argw & ( ( 1 << shift ) - 1 ) ) == 0		1028139	1		==			
ANR	1029119	BitAndExpression	argw & ( ( 1 << shift ) - 1 )		1028139	0		&			
ANR	1029120	Identifier	argw		1028139	0					
ANR	1029121	AdditiveExpression	( 1 << shift ) - 1		1028139	1		-			
ANR	1029122	ShiftExpression	1 << shift		1028139	0		<<			
ANR	1029123	PrimaryExpression	1		1028139	0					
ANR	1029124	Identifier	shift		1028139	1					
ANR	1029125	PrimaryExpression	1		1028139	1					
ANR	1029126	PrimaryExpression	0		1028139	1					
ANR	1029127	CompoundStatement		91:72:3397:3397	1028139	1					
ANR	1029128	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 ) ) )"	1002:2:30976:31078	1028139	0	True				
ANR	1029129	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 ) ) )"		1028139	0					
ANR	1029130	Callee	FAIL_IF		1028139	0					
ANR	1029131	Identifier	FAIL_IF		1028139	0					
ANR	1029132	ArgumentList	"push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 ) )"		1028139	1					
ANR	1029133	Argument	"push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 ) )"		1028139	0					
ANR	1029134	CallExpression	"push_inst ( compiler , ADDI | ( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 ) )"		1028139	0					
ANR	1029135	Callee	push_inst		1028139	0					
ANR	1029136	Identifier	push_inst		1028139	0					
ANR	1029137	ArgumentList	compiler		1028139	1					
ANR	1029138	Argument	compiler		1028139	0					
ANR	1029139	Identifier	compiler		1028139	0					
ANR	1029140	Argument	ADDI | ( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 )		1028139	1					
ANR	1029141	InclusiveOrExpression	ADDI | ( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 )		1028139	0		|			
ANR	1029142	Identifier	ADDI		1028139	0					
ANR	1029143	InclusiveOrExpression	( 1 << 22 ) | RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1029144	ShiftExpression	1 << 22		1028139	0		<<			
ANR	1029145	PrimaryExpression	1		1028139	0					
ANR	1029146	PrimaryExpression	22		1028139	1					
ANR	1029147	InclusiveOrExpression	RD ( tmp_r ) | RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1029148	CallExpression	RD ( tmp_r )		1028139	0					
ANR	1029149	Callee	RD		1028139	0					
ANR	1029150	Identifier	RD		1028139	0					
ANR	1029151	ArgumentList	tmp_r		1028139	1					
ANR	1029152	Argument	tmp_r		1028139	0					
ANR	1029153	Identifier	tmp_r		1028139	0					
ANR	1029154	InclusiveOrExpression	RN ( arg & REG_MASK ) | ( ( argw >> 12 ) << 10 )		1028139	1		|			
ANR	1029155	CallExpression	RN ( arg & REG_MASK )		1028139	0					
ANR	1029156	Callee	RN		1028139	0					
ANR	1029157	Identifier	RN		1028139	0					
ANR	1029158	ArgumentList	arg & REG_MASK		1028139	1					
ANR	1029159	Argument	arg & REG_MASK		1028139	0					
ANR	1029160	BitAndExpression	arg & REG_MASK		1028139	0		&			
ANR	1029161	Identifier	arg		1028139	0					
ANR	1029162	Identifier	REG_MASK		1028139	1					
ANR	1029163	ShiftExpression	( argw >> 12 ) << 10		1028139	1		<<			
ANR	1029164	ShiftExpression	argw >> 12		1028139	0		>>			
ANR	1029165	Identifier	argw		1028139	0					
ANR	1029166	PrimaryExpression	12		1028139	1					
ANR	1029167	PrimaryExpression	10		1028139	1					
ANR	1029168	ReturnStatement	"return push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r ) | ( ( argw & 0xfff ) << ( 10 - shift ) ) ) ;"	1003:2:31082:31212	1028139	1	True				
ANR	1029169	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r ) | ( ( argw & 0xfff ) << ( 10 - shift ) ) )"		1028139	0					
ANR	1029170	Callee	push_inst		1028139	0					
ANR	1029171	Identifier	push_inst		1028139	0					
ANR	1029172	ArgumentList	compiler		1028139	1					
ANR	1029173	Argument	compiler		1028139	0					
ANR	1029174	Identifier	compiler		1028139	0					
ANR	1029175	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r ) | ( ( argw & 0xfff ) << ( 10 - shift ) )		1028139	1					
ANR	1029176	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( tmp_r ) | ( ( argw & 0xfff ) << ( 10 - shift ) )		1028139	0		|			
ANR	1029177	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1029178	Identifier	sljit_mem_imm		1028139	0					
ANR	1029179	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1029180	Identifier	flags		1028139	0					
ANR	1029181	PrimaryExpression	0x3		1028139	1					
ANR	1029182	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( tmp_r ) | ( ( argw & 0xfff ) << ( 10 - shift ) )		1028139	1		|			
ANR	1029183	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1029184	Identifier	shift		1028139	0					
ANR	1029185	PrimaryExpression	30		1028139	1					
ANR	1029186	InclusiveOrExpression	RT ( reg ) | RN ( tmp_r ) | ( ( argw & 0xfff ) << ( 10 - shift ) )		1028139	1		|			
ANR	1029187	CallExpression	RT ( reg )		1028139	0					
ANR	1029188	Callee	RT		1028139	0					
ANR	1029189	Identifier	RT		1028139	0					
ANR	1029190	ArgumentList	reg		1028139	1					
ANR	1029191	Argument	reg		1028139	0					
ANR	1029192	Identifier	reg		1028139	0					
ANR	1029193	InclusiveOrExpression	RN ( tmp_r ) | ( ( argw & 0xfff ) << ( 10 - shift ) )		1028139	1		|			
ANR	1029194	CallExpression	RN ( tmp_r )		1028139	0					
ANR	1029195	Callee	RN		1028139	0					
ANR	1029196	Identifier	RN		1028139	0					
ANR	1029197	ArgumentList	tmp_r		1028139	1					
ANR	1029198	Argument	tmp_r		1028139	0					
ANR	1029199	Identifier	tmp_r		1028139	0					
ANR	1029200	ShiftExpression	( argw & 0xfff ) << ( 10 - shift )		1028139	1		<<			
ANR	1029201	BitAndExpression	argw & 0xfff		1028139	0		&			
ANR	1029202	Identifier	argw		1028139	0					
ANR	1029203	PrimaryExpression	0xfff		1028139	1					
ANR	1029204	AdditiveExpression	10 - shift		1028139	1		-			
ANR	1029205	PrimaryExpression	10		1028139	0					
ANR	1029206	Identifier	shift		1028139	1					
ANR	1029207	ExpressionStatement	diff = argw - next_argw	1007:1:31219:31242	1028139	10	True				
ANR	1029208	AssignmentExpression	diff = argw - next_argw		1028139	0		=			
ANR	1029209	Identifier	diff		1028139	0					
ANR	1029210	AdditiveExpression	argw - next_argw		1028139	1		-			
ANR	1029211	Identifier	argw		1028139	0					
ANR	1029212	Identifier	next_argw		1028139	1					
ANR	1029213	ExpressionStatement	next_arg = ( arg & REG_MASK ) && ( arg == next_arg ) && diff <= 0xfff && diff >= - 0xfff && diff != 0	1008:1:31245:31341	1028139	11	True				
ANR	1029214	AssignmentExpression	next_arg = ( arg & REG_MASK ) && ( arg == next_arg ) && diff <= 0xfff && diff >= - 0xfff && diff != 0		1028139	0		=			
ANR	1029215	Identifier	next_arg		1028139	0					
ANR	1029216	AndExpression	( arg & REG_MASK ) && ( arg == next_arg ) && diff <= 0xfff && diff >= - 0xfff && diff != 0		1028139	1		&&			
ANR	1029217	BitAndExpression	arg & REG_MASK		1028139	0		&			
ANR	1029218	Identifier	arg		1028139	0					
ANR	1029219	Identifier	REG_MASK		1028139	1					
ANR	1029220	AndExpression	( arg == next_arg ) && diff <= 0xfff && diff >= - 0xfff && diff != 0		1028139	1		&&			
ANR	1029221	EqualityExpression	arg == next_arg		1028139	0		==			
ANR	1029222	Identifier	arg		1028139	0					
ANR	1029223	Identifier	next_arg		1028139	1					
ANR	1029224	AndExpression	diff <= 0xfff && diff >= - 0xfff && diff != 0		1028139	1		&&			
ANR	1029225	RelationalExpression	diff <= 0xfff		1028139	0		<=			
ANR	1029226	Identifier	diff		1028139	0					
ANR	1029227	PrimaryExpression	0xfff		1028139	1					
ANR	1029228	AndExpression	diff >= - 0xfff && diff != 0		1028139	1		&&			
ANR	1029229	RelationalExpression	diff >= - 0xfff		1028139	0		>=			
ANR	1029230	Identifier	diff		1028139	0					
ANR	1029231	UnaryOperationExpression	- 0xfff		1028139	1					
ANR	1029232	UnaryOperator	-		1028139	0					
ANR	1029233	PrimaryExpression	0xfff		1028139	1					
ANR	1029234	EqualityExpression	diff != 0		1028139	1		!=			
ANR	1029235	Identifier	diff		1028139	0					
ANR	1029236	PrimaryExpression	0		1028139	1					
ANR	1029237	ExpressionStatement	arg &= REG_MASK	1009:1:31344:31359	1028139	12	True				
ANR	1029238	AssignmentExpression	arg &= REG_MASK		1028139	0		&=			
ANR	1029239	Identifier	arg		1028139	0					
ANR	1029240	Identifier	REG_MASK		1028139	1					
ANR	1029241	IfStatement	if ( arg && compiler -> cache_arg == SLJIT_MEM )		1028139	13					
ANR	1029242	Condition	arg && compiler -> cache_arg == SLJIT_MEM	1011:5:31367:31405	1028139	0	True				
ANR	1029243	AndExpression	arg && compiler -> cache_arg == SLJIT_MEM		1028139	0		&&			
ANR	1029244	Identifier	arg		1028139	0					
ANR	1029245	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1028139	1		==			
ANR	1029246	PtrMemberAccess	compiler -> cache_arg		1028139	0					
ANR	1029247	Identifier	compiler		1028139	0					
ANR	1029248	Identifier	cache_arg		1028139	1					
ANR	1029249	Identifier	SLJIT_MEM		1028139	1					
ANR	1029250	CompoundStatement		101:46:3833:3833	1028139	1					
ANR	1029251	IfStatement	if ( compiler -> cache_argw == argw )		1028139	0					
ANR	1029252	Condition	compiler -> cache_argw == argw	1012:6:31416:31443	1028139	0	True				
ANR	1029253	EqualityExpression	compiler -> cache_argw == argw		1028139	0		==			
ANR	1029254	PtrMemberAccess	compiler -> cache_argw		1028139	0					
ANR	1029255	Identifier	compiler		1028139	0					
ANR	1029256	Identifier	cache_argw		1028139	1					
ANR	1029257	Identifier	argw		1028139	1					
ANR	1029258	ReturnStatement	"return push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) ) ;"	1013:3:31449:31554	1028139	1	True				
ANR	1029259	CallExpression	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) )"		1028139	0					
ANR	1029260	Callee	push_inst		1028139	0					
ANR	1029261	Identifier	push_inst		1028139	0					
ANR	1029262	ArgumentList	compiler		1028139	1					
ANR	1029263	Argument	compiler		1028139	0					
ANR	1029264	Identifier	compiler		1028139	0					
ANR	1029265	Argument	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1					
ANR	1029266	InclusiveOrExpression	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	0		|			
ANR	1029267	ArrayIndexing	sljit_mem_reg [ flags & 0x3 ]		1028139	0					
ANR	1029268	Identifier	sljit_mem_reg		1028139	0					
ANR	1029269	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1029270	Identifier	flags		1028139	0					
ANR	1029271	PrimaryExpression	0x3		1028139	1					
ANR	1029272	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029273	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1029274	Identifier	shift		1028139	0					
ANR	1029275	PrimaryExpression	30		1028139	1					
ANR	1029276	InclusiveOrExpression	RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029277	CallExpression	RT ( reg )		1028139	0					
ANR	1029278	Callee	RT		1028139	0					
ANR	1029279	Identifier	RT		1028139	0					
ANR	1029280	ArgumentList	reg		1028139	1					
ANR	1029281	Argument	reg		1028139	0					
ANR	1029282	Identifier	reg		1028139	0					
ANR	1029283	InclusiveOrExpression	RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029284	CallExpression	RN ( arg )		1028139	0					
ANR	1029285	Callee	RN		1028139	0					
ANR	1029286	Identifier	RN		1028139	0					
ANR	1029287	ArgumentList	arg		1028139	1					
ANR	1029288	Argument	arg		1028139	0					
ANR	1029289	Identifier	arg		1028139	0					
ANR	1029290	CallExpression	RM ( TMP_REG3 )		1028139	1					
ANR	1029291	Callee	RM		1028139	0					
ANR	1029292	Identifier	RM		1028139	0					
ANR	1029293	ArgumentList	TMP_REG3		1028139	1					
ANR	1029294	Argument	TMP_REG3		1028139	0					
ANR	1029295	Identifier	TMP_REG3		1028139	0					
ANR	1029296	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED )"		1028139	1					
ANR	1029297	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"	1014:6:31562:31659	1028139	0	True				
ANR	1029298	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"		1028139	0		!=			
ANR	1029299	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw )"		1028139	0					
ANR	1029300	Callee	emit_set_delta		1028139	0					
ANR	1029301	Identifier	emit_set_delta		1028139	0					
ANR	1029302	ArgumentList	compiler		1028139	1					
ANR	1029303	Argument	compiler		1028139	0					
ANR	1029304	Identifier	compiler		1028139	0					
ANR	1029305	Argument	TMP_REG3		1028139	1					
ANR	1029306	Identifier	TMP_REG3		1028139	0					
ANR	1029307	Argument	TMP_REG3		1028139	2					
ANR	1029308	Identifier	TMP_REG3		1028139	0					
ANR	1029309	Argument	argw - compiler -> cache_argw		1028139	3					
ANR	1029310	AdditiveExpression	argw - compiler -> cache_argw		1028139	0		-			
ANR	1029311	Identifier	argw		1028139	0					
ANR	1029312	PtrMemberAccess	compiler -> cache_argw		1028139	1					
ANR	1029313	Identifier	compiler		1028139	0					
ANR	1029314	Identifier	cache_argw		1028139	1					
ANR	1029315	Identifier	SLJIT_ERR_UNSUPPORTED		1028139	1					
ANR	1029316	CompoundStatement		104:106:4087:4087	1028139	1					
ANR	1029317	ExpressionStatement	FAIL_IF ( compiler -> error )	1015:3:31667:31691	1028139	0	True				
ANR	1029318	CallExpression	FAIL_IF ( compiler -> error )		1028139	0					
ANR	1029319	Callee	FAIL_IF		1028139	0					
ANR	1029320	Identifier	FAIL_IF		1028139	0					
ANR	1029321	ArgumentList	compiler -> error		1028139	1					
ANR	1029322	Argument	compiler -> error		1028139	0					
ANR	1029323	PtrMemberAccess	compiler -> error		1028139	0					
ANR	1029324	Identifier	compiler		1028139	0					
ANR	1029325	Identifier	error		1028139	1					
ANR	1029326	ExpressionStatement	compiler -> cache_argw = argw	1016:3:31696:31723	1028139	1	True				
ANR	1029327	AssignmentExpression	compiler -> cache_argw = argw		1028139	0		=			
ANR	1029328	PtrMemberAccess	compiler -> cache_argw		1028139	0					
ANR	1029329	Identifier	compiler		1028139	0					
ANR	1029330	Identifier	cache_argw		1028139	1					
ANR	1029331	Identifier	argw		1028139	1					
ANR	1029332	ReturnStatement	"return push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) ) ;"	1017:3:31728:31833	1028139	2	True				
ANR	1029333	CallExpression	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) )"		1028139	0					
ANR	1029334	Callee	push_inst		1028139	0					
ANR	1029335	Identifier	push_inst		1028139	0					
ANR	1029336	ArgumentList	compiler		1028139	1					
ANR	1029337	Argument	compiler		1028139	0					
ANR	1029338	Identifier	compiler		1028139	0					
ANR	1029339	Argument	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1					
ANR	1029340	InclusiveOrExpression	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	0		|			
ANR	1029341	ArrayIndexing	sljit_mem_reg [ flags & 0x3 ]		1028139	0					
ANR	1029342	Identifier	sljit_mem_reg		1028139	0					
ANR	1029343	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1029344	Identifier	flags		1028139	0					
ANR	1029345	PrimaryExpression	0x3		1028139	1					
ANR	1029346	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029347	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1029348	Identifier	shift		1028139	0					
ANR	1029349	PrimaryExpression	30		1028139	1					
ANR	1029350	InclusiveOrExpression	RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029351	CallExpression	RT ( reg )		1028139	0					
ANR	1029352	Callee	RT		1028139	0					
ANR	1029353	Identifier	RT		1028139	0					
ANR	1029354	ArgumentList	reg		1028139	1					
ANR	1029355	Argument	reg		1028139	0					
ANR	1029356	Identifier	reg		1028139	0					
ANR	1029357	InclusiveOrExpression	RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029358	CallExpression	RN ( arg )		1028139	0					
ANR	1029359	Callee	RN		1028139	0					
ANR	1029360	Identifier	RN		1028139	0					
ANR	1029361	ArgumentList	arg		1028139	1					
ANR	1029362	Argument	arg		1028139	0					
ANR	1029363	Identifier	arg		1028139	0					
ANR	1029364	CallExpression	RM ( TMP_REG3 )		1028139	1					
ANR	1029365	Callee	RM		1028139	0					
ANR	1029366	Identifier	RM		1028139	0					
ANR	1029367	ArgumentList	TMP_REG3		1028139	1					
ANR	1029368	Argument	TMP_REG3		1028139	0					
ANR	1029369	Identifier	TMP_REG3		1028139	0					
ANR	1029370	ExpressionStatement	compiler -> cache_argw = argw	1021:1:31844:31871	1028139	14	True				
ANR	1029371	AssignmentExpression	compiler -> cache_argw = argw		1028139	0		=			
ANR	1029372	PtrMemberAccess	compiler -> cache_argw		1028139	0					
ANR	1029373	Identifier	compiler		1028139	0					
ANR	1029374	Identifier	cache_argw		1028139	1					
ANR	1029375	Identifier	argw		1028139	1					
ANR	1029376	IfStatement	"if ( next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED )"		1028139	15					
ANR	1029377	Condition	"next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"	1022:5:31878:31959	1028139	0	True				
ANR	1029378	AndExpression	"next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"		1028139	0		&&			
ANR	1029379	Identifier	next_arg		1028139	0					
ANR	1029380	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"		1028139	1		!=			
ANR	1029381	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , arg , argw )"		1028139	0					
ANR	1029382	Callee	emit_set_delta		1028139	0					
ANR	1029383	Identifier	emit_set_delta		1028139	0					
ANR	1029384	ArgumentList	compiler		1028139	1					
ANR	1029385	Argument	compiler		1028139	0					
ANR	1029386	Identifier	compiler		1028139	0					
ANR	1029387	Argument	TMP_REG3		1028139	1					
ANR	1029388	Identifier	TMP_REG3		1028139	0					
ANR	1029389	Argument	arg		1028139	2					
ANR	1029390	Identifier	arg		1028139	0					
ANR	1029391	Argument	argw		1028139	3					
ANR	1029392	Identifier	argw		1028139	0					
ANR	1029393	Identifier	SLJIT_ERR_UNSUPPORTED		1028139	1					
ANR	1029394	CompoundStatement		112:89:4387:4387	1028139	1					
ANR	1029395	ExpressionStatement	FAIL_IF ( compiler -> error )	1023:2:31966:31990	1028139	0	True				
ANR	1029396	CallExpression	FAIL_IF ( compiler -> error )		1028139	0					
ANR	1029397	Callee	FAIL_IF		1028139	0					
ANR	1029398	Identifier	FAIL_IF		1028139	0					
ANR	1029399	ArgumentList	compiler -> error		1028139	1					
ANR	1029400	Argument	compiler -> error		1028139	0					
ANR	1029401	PtrMemberAccess	compiler -> error		1028139	0					
ANR	1029402	Identifier	compiler		1028139	0					
ANR	1029403	Identifier	error		1028139	1					
ANR	1029404	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1024:2:31994:32031	1028139	1	True				
ANR	1029405	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1028139	0		=			
ANR	1029406	PtrMemberAccess	compiler -> cache_arg		1028139	0					
ANR	1029407	Identifier	compiler		1028139	0					
ANR	1029408	Identifier	cache_arg		1028139	1					
ANR	1029409	InclusiveOrExpression	SLJIT_MEM | arg		1028139	1		|			
ANR	1029410	Identifier	SLJIT_MEM		1028139	0					
ANR	1029411	Identifier	arg		1028139	1					
ANR	1029412	ExpressionStatement	arg = 0	1025:2:32035:32042	1028139	2	True				
ANR	1029413	AssignmentExpression	arg = 0		1028139	0		=			
ANR	1029414	Identifier	arg		1028139	0					
ANR	1029415	PrimaryExpression	0		1028139	1					
ANR	1029416	ElseStatement	else		1028139	0					
ANR	1029417	CompoundStatement		117:6:4478:4478	1028139	0					
ANR	1029418	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1028:2:32057:32106	1028139	0	True				
ANR	1029419	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1028139	0					
ANR	1029420	Callee	FAIL_IF		1028139	0					
ANR	1029421	Identifier	FAIL_IF		1028139	0					
ANR	1029422	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1028139	1					
ANR	1029423	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1028139	0					
ANR	1029424	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1028139	0					
ANR	1029425	Callee	load_immediate		1028139	0					
ANR	1029426	Identifier	load_immediate		1028139	0					
ANR	1029427	ArgumentList	compiler		1028139	1					
ANR	1029428	Argument	compiler		1028139	0					
ANR	1029429	Identifier	compiler		1028139	0					
ANR	1029430	Argument	TMP_REG3		1028139	1					
ANR	1029431	Identifier	TMP_REG3		1028139	0					
ANR	1029432	Argument	argw		1028139	2					
ANR	1029433	Identifier	argw		1028139	0					
ANR	1029434	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1029:2:32110:32141	1028139	1	True				
ANR	1029435	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1028139	0		=			
ANR	1029436	PtrMemberAccess	compiler -> cache_arg		1028139	0					
ANR	1029437	Identifier	compiler		1028139	0					
ANR	1029438	Identifier	cache_arg		1028139	1					
ANR	1029439	Identifier	SLJIT_MEM		1028139	1					
ANR	1029440	IfStatement	if ( next_arg )		1028139	2					
ANR	1029441	Condition	next_arg	1031:6:32150:32157	1028139	0	True				
ANR	1029442	Identifier	next_arg		1028139	0					
ANR	1029443	CompoundStatement		121:16:4585:4585	1028139	1					
ANR	1029444	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg ) ) )"	1032:3:32165:32238	1028139	0	True				
ANR	1029445	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg ) ) )"		1028139	0					
ANR	1029446	Callee	FAIL_IF		1028139	0					
ANR	1029447	Identifier	FAIL_IF		1028139	0					
ANR	1029448	ArgumentList	"push_inst ( compiler , ADD | RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg ) )"		1028139	1					
ANR	1029449	Argument	"push_inst ( compiler , ADD | RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg ) )"		1028139	0					
ANR	1029450	CallExpression	"push_inst ( compiler , ADD | RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg ) )"		1028139	0					
ANR	1029451	Callee	push_inst		1028139	0					
ANR	1029452	Identifier	push_inst		1028139	0					
ANR	1029453	ArgumentList	compiler		1028139	1					
ANR	1029454	Argument	compiler		1028139	0					
ANR	1029455	Identifier	compiler		1028139	0					
ANR	1029456	Argument	ADD | RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg )		1028139	1					
ANR	1029457	InclusiveOrExpression	ADD | RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg )		1028139	0		|			
ANR	1029458	Identifier	ADD		1028139	0					
ANR	1029459	InclusiveOrExpression	RD ( TMP_REG3 ) | RN ( TMP_REG3 ) | RM ( arg )		1028139	1		|			
ANR	1029460	CallExpression	RD ( TMP_REG3 )		1028139	0					
ANR	1029461	Callee	RD		1028139	0					
ANR	1029462	Identifier	RD		1028139	0					
ANR	1029463	ArgumentList	TMP_REG3		1028139	1					
ANR	1029464	Argument	TMP_REG3		1028139	0					
ANR	1029465	Identifier	TMP_REG3		1028139	0					
ANR	1029466	InclusiveOrExpression	RN ( TMP_REG3 ) | RM ( arg )		1028139	1		|			
ANR	1029467	CallExpression	RN ( TMP_REG3 )		1028139	0					
ANR	1029468	Callee	RN		1028139	0					
ANR	1029469	Identifier	RN		1028139	0					
ANR	1029470	ArgumentList	TMP_REG3		1028139	1					
ANR	1029471	Argument	TMP_REG3		1028139	0					
ANR	1029472	Identifier	TMP_REG3		1028139	0					
ANR	1029473	CallExpression	RM ( arg )		1028139	1					
ANR	1029474	Callee	RM		1028139	0					
ANR	1029475	Identifier	RM		1028139	0					
ANR	1029476	ArgumentList	arg		1028139	1					
ANR	1029477	Argument	arg		1028139	0					
ANR	1029478	Identifier	arg		1028139	0					
ANR	1029479	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1033:3:32243:32280	1028139	1	True				
ANR	1029480	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1028139	0		=			
ANR	1029481	PtrMemberAccess	compiler -> cache_arg		1028139	0					
ANR	1029482	Identifier	compiler		1028139	0					
ANR	1029483	Identifier	cache_arg		1028139	1					
ANR	1029484	InclusiveOrExpression	SLJIT_MEM | arg		1028139	1		|			
ANR	1029485	Identifier	SLJIT_MEM		1028139	0					
ANR	1029486	Identifier	arg		1028139	1					
ANR	1029487	ExpressionStatement	arg = 0	1034:3:32285:32292	1028139	2	True				
ANR	1029488	AssignmentExpression	arg = 0		1028139	0		=			
ANR	1029489	Identifier	arg		1028139	0					
ANR	1029490	PrimaryExpression	0		1028139	1					
ANR	1029491	IfStatement	if ( arg )		1028139	16					
ANR	1029492	Condition	arg	1038:5:32307:32309	1028139	0	True				
ANR	1029493	Identifier	arg		1028139	0					
ANR	1029494	ReturnStatement	"return push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) ) ;"	1039:2:32314:32419	1028139	1	True				
ANR	1029495	CallExpression	"push_inst ( compiler , sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) )"		1028139	0					
ANR	1029496	Callee	push_inst		1028139	0					
ANR	1029497	Identifier	push_inst		1028139	0					
ANR	1029498	ArgumentList	compiler		1028139	1					
ANR	1029499	Argument	compiler		1028139	0					
ANR	1029500	Identifier	compiler		1028139	0					
ANR	1029501	Argument	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1					
ANR	1029502	InclusiveOrExpression	sljit_mem_reg [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	0		|			
ANR	1029503	ArrayIndexing	sljit_mem_reg [ flags & 0x3 ]		1028139	0					
ANR	1029504	Identifier	sljit_mem_reg		1028139	0					
ANR	1029505	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1029506	Identifier	flags		1028139	0					
ANR	1029507	PrimaryExpression	0x3		1028139	1					
ANR	1029508	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029509	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1029510	Identifier	shift		1028139	0					
ANR	1029511	PrimaryExpression	30		1028139	1					
ANR	1029512	InclusiveOrExpression	RT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029513	CallExpression	RT ( reg )		1028139	0					
ANR	1029514	Callee	RT		1028139	0					
ANR	1029515	Identifier	RT		1028139	0					
ANR	1029516	ArgumentList	reg		1028139	1					
ANR	1029517	Argument	reg		1028139	0					
ANR	1029518	Identifier	reg		1028139	0					
ANR	1029519	InclusiveOrExpression	RN ( arg ) | RM ( TMP_REG3 )		1028139	1		|			
ANR	1029520	CallExpression	RN ( arg )		1028139	0					
ANR	1029521	Callee	RN		1028139	0					
ANR	1029522	Identifier	RN		1028139	0					
ANR	1029523	ArgumentList	arg		1028139	1					
ANR	1029524	Argument	arg		1028139	0					
ANR	1029525	Identifier	arg		1028139	0					
ANR	1029526	CallExpression	RM ( TMP_REG3 )		1028139	1					
ANR	1029527	Callee	RM		1028139	0					
ANR	1029528	Identifier	RM		1028139	0					
ANR	1029529	ArgumentList	TMP_REG3		1028139	1					
ANR	1029530	Argument	TMP_REG3		1028139	0					
ANR	1029531	Identifier	TMP_REG3		1028139	0					
ANR	1029532	ReturnStatement	"return push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 ) ) ;"	1040:1:32422:32517	1028139	17	True				
ANR	1029533	CallExpression	"push_inst ( compiler , sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 ) )"		1028139	0					
ANR	1029534	Callee	push_inst		1028139	0					
ANR	1029535	Identifier	push_inst		1028139	0					
ANR	1029536	ArgumentList	compiler		1028139	1					
ANR	1029537	Argument	compiler		1028139	0					
ANR	1029538	Identifier	compiler		1028139	0					
ANR	1029539	Argument	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 )		1028139	1					
ANR	1029540	InclusiveOrExpression	sljit_mem_imm [ flags & 0x3 ] | ( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 )		1028139	0		|			
ANR	1029541	ArrayIndexing	sljit_mem_imm [ flags & 0x3 ]		1028139	0					
ANR	1029542	Identifier	sljit_mem_imm		1028139	0					
ANR	1029543	BitAndExpression	flags & 0x3		1028139	1		&			
ANR	1029544	Identifier	flags		1028139	0					
ANR	1029545	PrimaryExpression	0x3		1028139	1					
ANR	1029546	InclusiveOrExpression	( shift << 30 ) | RT ( reg ) | RN ( TMP_REG3 )		1028139	1		|			
ANR	1029547	ShiftExpression	shift << 30		1028139	0		<<			
ANR	1029548	Identifier	shift		1028139	0					
ANR	1029549	PrimaryExpression	30		1028139	1					
ANR	1029550	InclusiveOrExpression	RT ( reg ) | RN ( TMP_REG3 )		1028139	1		|			
ANR	1029551	CallExpression	RT ( reg )		1028139	0					
ANR	1029552	Callee	RT		1028139	0					
ANR	1029553	Identifier	RT		1028139	0					
ANR	1029554	ArgumentList	reg		1028139	1					
ANR	1029555	Argument	reg		1028139	0					
ANR	1029556	Identifier	reg		1028139	0					
ANR	1029557	CallExpression	RN ( TMP_REG3 )		1028139	1					
ANR	1029558	Callee	RN		1028139	0					
ANR	1029559	Identifier	RN		1028139	0					
ANR	1029560	ArgumentList	TMP_REG3		1028139	1					
ANR	1029561	Argument	TMP_REG3		1028139	0					
ANR	1029562	Identifier	TMP_REG3		1028139	0					
ANR	1029563	ReturnType	static sljit_si		1028139	1					
ANR	1029564	Identifier	getput_arg		1028139	2					
ANR	1029565	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1028139	3					
ANR	1029566	Parameter	struct sljit_compiler * compiler	909:27:27442:27472	1028139	0	True				
ANR	1029567	ParameterType	struct sljit_compiler *		1028139	0					
ANR	1029568	Identifier	compiler		1028139	1					
ANR	1029569	Parameter	sljit_si flags	909:60:27475:27488	1028139	1	True				
ANR	1029570	ParameterType	sljit_si		1028139	0					
ANR	1029571	Identifier	flags		1028139	1					
ANR	1029572	Parameter	sljit_si reg	909:76:27491:27502	1028139	2	True				
ANR	1029573	ParameterType	sljit_si		1028139	0					
ANR	1029574	Identifier	reg		1028139	1					
ANR	1029575	Parameter	sljit_si arg	910:1:27506:27517	1028139	3	True				
ANR	1029576	ParameterType	sljit_si		1028139	0					
ANR	1029577	Identifier	arg		1028139	1					
ANR	1029578	Parameter	sljit_sw argw	910:15:27520:27532	1028139	4	True				
ANR	1029579	ParameterType	sljit_sw		1028139	0					
ANR	1029580	Identifier	argw		1028139	1					
ANR	1029581	Parameter	sljit_si next_arg	910:30:27535:27551	1028139	5	True				
ANR	1029582	ParameterType	sljit_si		1028139	0					
ANR	1029583	Identifier	next_arg		1028139	1					
ANR	1029584	Parameter	sljit_sw next_argw	910:49:27554:27571	1028139	6	True				
ANR	1029585	ParameterType	sljit_sw		1028139	0					
ANR	1029586	Identifier	next_argw		1028139	1					
ANR	1029587	CFGEntryNode	ENTRY		1028139		True				
ANR	1029588	CFGExitNode	EXIT		1028139		True				
ANR	1029589	Symbol	MEM_SIZE_SHIFT		1028139						
ANR	1029590	Symbol	TMP_REG3		1028139						
ANR	1029591	Symbol	ADD		1028139						
ANR	1029592	Symbol	sljit_mem_imm		1028139						
ANR	1029593	Symbol	RT		1028139						
ANR	1029594	Symbol	compiler -> cache_argw		1028139						
ANR	1029595	Symbol	SLJIT_MEM		1028139						
ANR	1029596	Symbol	shift		1028139						
ANR	1029597	Symbol	flags		1028139						
ANR	1029598	Symbol	* compiler		1028139						
ANR	1029599	Symbol	argw		1028139						
ANR	1029600	Symbol	SUBI		1028139						
ANR	1029601	Symbol	ORR		1028139						
ANR	1029602	Symbol	emit_set_delta		1028139						
ANR	1029603	Symbol	load_immediate		1028139						
ANR	1029604	Symbol	reg		1028139						
ANR	1029605	Symbol	arg		1028139						
ANR	1029606	Symbol	UPDATE		1028139						
ANR	1029607	Symbol	compiler		1028139						
ANR	1029608	Symbol	tmp_r		1028139						
ANR	1029609	Symbol	next_arg		1028139						
ANR	1029610	Symbol	push_inst		1028139						
ANR	1029611	Symbol	* flags		1028139						
ANR	1029612	Symbol	REG_MASK		1028139						
ANR	1029613	Symbol	compiler -> cache_arg		1028139						
ANR	1029614	Symbol	* sljit_mem_reg		1028139						
ANR	1029615	Symbol	OFFS_REG_MASK		1028139						
ANR	1029616	Symbol	next_argw		1028139						
ANR	1029617	Symbol	diff		1028139						
ANR	1029618	Symbol	* sljit_mem_simm		1028139						
ANR	1029619	Symbol	other_r		1028139						
ANR	1029620	Symbol	* sljit_mem_imm		1028139						
ANR	1029621	Symbol	RD		1028139						
ANR	1029622	Symbol	sljit_mem_simm		1028139						
ANR	1029623	Symbol	ADDI		1028139						
ANR	1029624	Symbol	TMP_LR		1028139						
ANR	1029625	Symbol	STORE		1028139						
ANR	1029626	Symbol	sljit_mem_reg		1028139						
ANR	1029627	Symbol	TMP_ZERO		1028139						
ANR	1029628	Symbol	OFFS_REG		1028139						
ANR	1029629	Symbol	RM		1028139						
ANR	1029630	Symbol	RN		1028139						
ANR	1029631	Symbol	compiler -> error		1028139						
ANR	1029632	Symbol	SLJIT_UNLIKELY		1028139						
ANR	1029633	Symbol	SLJIT_ERR_UNSUPPORTED		1028139						
ANR	1029634	Function	emit_op_mem	1043:0:32522:32850							
ANR	1029635	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1029634	0					
ANR	1029636	CompoundStatement		1044:0:32655:32850	1029634	0					
ANR	1029637	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg , argw ) )"		1029634	0					
ANR	1029638	Condition	"getput_arg_fast ( compiler , flags , reg , arg , argw )"	1045:5:32662:32709	1029634	0	True				
ANR	1029639	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg , argw )"		1029634	0					
ANR	1029640	Callee	getput_arg_fast		1029634	0					
ANR	1029641	Identifier	getput_arg_fast		1029634	0					
ANR	1029642	ArgumentList	compiler		1029634	1					
ANR	1029643	Argument	compiler		1029634	0					
ANR	1029644	Identifier	compiler		1029634	0					
ANR	1029645	Argument	flags		1029634	1					
ANR	1029646	Identifier	flags		1029634	0					
ANR	1029647	Argument	reg		1029634	2					
ANR	1029648	Identifier	reg		1029634	0					
ANR	1029649	Argument	arg		1029634	3					
ANR	1029650	Identifier	arg		1029634	0					
ANR	1029651	Argument	argw		1029634	4					
ANR	1029652	Identifier	argw		1029634	0					
ANR	1029653	ReturnStatement	return compiler -> error ;	1046:2:32714:32736	1029634	1	True				
ANR	1029654	PtrMemberAccess	compiler -> error		1029634	0					
ANR	1029655	Identifier	compiler		1029634	0					
ANR	1029656	Identifier	error		1029634	1					
ANR	1029657	ExpressionStatement	compiler -> cache_arg = 0	1047:1:32739:32762	1029634	1	True				
ANR	1029658	AssignmentExpression	compiler -> cache_arg = 0		1029634	0		=			
ANR	1029659	PtrMemberAccess	compiler -> cache_arg		1029634	0					
ANR	1029660	Identifier	compiler		1029634	0					
ANR	1029661	Identifier	cache_arg		1029634	1					
ANR	1029662	PrimaryExpression	0		1029634	1					
ANR	1029663	ExpressionStatement	compiler -> cache_argw = 0	1048:1:32765:32789	1029634	2	True				
ANR	1029664	AssignmentExpression	compiler -> cache_argw = 0		1029634	0		=			
ANR	1029665	PtrMemberAccess	compiler -> cache_argw		1029634	0					
ANR	1029666	Identifier	compiler		1029634	0					
ANR	1029667	Identifier	cache_argw		1029634	1					
ANR	1029668	PrimaryExpression	0		1029634	1					
ANR	1029669	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 ) ;"	1049:1:32792:32848	1029634	3	True				
ANR	1029670	CallExpression	"getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 )"		1029634	0					
ANR	1029671	Callee	getput_arg		1029634	0					
ANR	1029672	Identifier	getput_arg		1029634	0					
ANR	1029673	ArgumentList	compiler		1029634	1					
ANR	1029674	Argument	compiler		1029634	0					
ANR	1029675	Identifier	compiler		1029634	0					
ANR	1029676	Argument	flags		1029634	1					
ANR	1029677	Identifier	flags		1029634	0					
ANR	1029678	Argument	reg		1029634	2					
ANR	1029679	Identifier	reg		1029634	0					
ANR	1029680	Argument	arg		1029634	3					
ANR	1029681	Identifier	arg		1029634	0					
ANR	1029682	Argument	argw		1029634	4					
ANR	1029683	Identifier	argw		1029634	0					
ANR	1029684	Argument	0		1029634	5					
ANR	1029685	PrimaryExpression	0		1029634	0					
ANR	1029686	Argument	0		1029634	6					
ANR	1029687	PrimaryExpression	0		1029634	0					
ANR	1029688	ReturnType	static SLJIT_INLINE sljit_si		1029634	1					
ANR	1029689	Identifier	emit_op_mem		1029634	2					
ANR	1029690	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1029634	3					
ANR	1029691	Parameter	struct sljit_compiler * compiler	1043:41:32563:32593	1029634	0	True				
ANR	1029692	ParameterType	struct sljit_compiler *		1029634	0					
ANR	1029693	Identifier	compiler		1029634	1					
ANR	1029694	Parameter	sljit_si flags	1043:74:32596:32609	1029634	1	True				
ANR	1029695	ParameterType	sljit_si		1029634	0					
ANR	1029696	Identifier	flags		1029634	1					
ANR	1029697	Parameter	sljit_si reg	1043:90:32612:32623	1029634	2	True				
ANR	1029698	ParameterType	sljit_si		1029634	0					
ANR	1029699	Identifier	reg		1029634	1					
ANR	1029700	Parameter	sljit_si arg	1043:104:32626:32637	1029634	3	True				
ANR	1029701	ParameterType	sljit_si		1029634	0					
ANR	1029702	Identifier	arg		1029634	1					
ANR	1029703	Parameter	sljit_sw argw	1043:118:32640:32652	1029634	4	True				
ANR	1029704	ParameterType	sljit_sw		1029634	0					
ANR	1029705	Identifier	argw		1029634	1					
ANR	1029706	CFGEntryNode	ENTRY		1029634		True				
ANR	1029707	CFGExitNode	EXIT		1029634		True				
ANR	1029708	Symbol	compiler -> cache_argw		1029634						
ANR	1029709	Symbol	getput_arg		1029634						
ANR	1029710	Symbol	reg		1029634						
ANR	1029711	Symbol	compiler -> cache_arg		1029634						
ANR	1029712	Symbol	arg		1029634						
ANR	1029713	Symbol	flags		1029634						
ANR	1029714	Symbol	* compiler		1029634						
ANR	1029715	Symbol	compiler		1029634						
ANR	1029716	Symbol	argw		1029634						
ANR	1029717	Symbol	getput_arg_fast		1029634						
ANR	1029718	Symbol	compiler -> error		1029634						
ANR	1029719	Function	emit_op_mem2	1052:0:32853:33173							
ANR	1029720	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1029719	0					
ANR	1029721	CompoundStatement		1053:0:33020:33173	1029719	0					
ANR	1029722	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1029719	0					
ANR	1029723	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1054:5:33027:33076	1029719	0	True				
ANR	1029724	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1029719	0					
ANR	1029725	Callee	getput_arg_fast		1029719	0					
ANR	1029726	Identifier	getput_arg_fast		1029719	0					
ANR	1029727	ArgumentList	compiler		1029719	1					
ANR	1029728	Argument	compiler		1029719	0					
ANR	1029729	Identifier	compiler		1029719	0					
ANR	1029730	Argument	flags		1029719	1					
ANR	1029731	Identifier	flags		1029719	0					
ANR	1029732	Argument	reg		1029719	2					
ANR	1029733	Identifier	reg		1029719	0					
ANR	1029734	Argument	arg1		1029719	3					
ANR	1029735	Identifier	arg1		1029719	0					
ANR	1029736	Argument	arg1w		1029719	4					
ANR	1029737	Identifier	arg1w		1029719	0					
ANR	1029738	ReturnStatement	return compiler -> error ;	1055:2:33081:33103	1029719	1	True				
ANR	1029739	PtrMemberAccess	compiler -> error		1029719	0					
ANR	1029740	Identifier	compiler		1029719	0					
ANR	1029741	Identifier	error		1029719	1					
ANR	1029742	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1056:1:33106:33171	1029719	1	True				
ANR	1029743	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1029719	0					
ANR	1029744	Callee	getput_arg		1029719	0					
ANR	1029745	Identifier	getput_arg		1029719	0					
ANR	1029746	ArgumentList	compiler		1029719	1					
ANR	1029747	Argument	compiler		1029719	0					
ANR	1029748	Identifier	compiler		1029719	0					
ANR	1029749	Argument	flags		1029719	1					
ANR	1029750	Identifier	flags		1029719	0					
ANR	1029751	Argument	reg		1029719	2					
ANR	1029752	Identifier	reg		1029719	0					
ANR	1029753	Argument	arg1		1029719	3					
ANR	1029754	Identifier	arg1		1029719	0					
ANR	1029755	Argument	arg1w		1029719	4					
ANR	1029756	Identifier	arg1w		1029719	0					
ANR	1029757	Argument	arg2		1029719	5					
ANR	1029758	Identifier	arg2		1029719	0					
ANR	1029759	Argument	arg2w		1029719	6					
ANR	1029760	Identifier	arg2w		1029719	0					
ANR	1029761	ReturnType	static SLJIT_INLINE sljit_si		1029719	1					
ANR	1029762	Identifier	emit_op_mem2		1029719	2					
ANR	1029763	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1029719	3					
ANR	1029764	Parameter	struct sljit_compiler * compiler	1052:42:32895:32925	1029719	0	True				
ANR	1029765	ParameterType	struct sljit_compiler *		1029719	0					
ANR	1029766	Identifier	compiler		1029719	1					
ANR	1029767	Parameter	sljit_si flags	1052:75:32928:32941	1029719	1	True				
ANR	1029768	ParameterType	sljit_si		1029719	0					
ANR	1029769	Identifier	flags		1029719	1					
ANR	1029770	Parameter	sljit_si reg	1052:91:32944:32955	1029719	2	True				
ANR	1029771	ParameterType	sljit_si		1029719	0					
ANR	1029772	Identifier	reg		1029719	1					
ANR	1029773	Parameter	sljit_si arg1	1052:105:32958:32970	1029719	3	True				
ANR	1029774	ParameterType	sljit_si		1029719	0					
ANR	1029775	Identifier	arg1		1029719	1					
ANR	1029776	Parameter	sljit_sw arg1w	1052:120:32973:32986	1029719	4	True				
ANR	1029777	ParameterType	sljit_sw		1029719	0					
ANR	1029778	Identifier	arg1w		1029719	1					
ANR	1029779	Parameter	sljit_si arg2	1052:136:32989:33001	1029719	5	True				
ANR	1029780	ParameterType	sljit_si		1029719	0					
ANR	1029781	Identifier	arg2		1029719	1					
ANR	1029782	Parameter	sljit_sw arg2w	1052:151:33004:33017	1029719	6	True				
ANR	1029783	ParameterType	sljit_sw		1029719	0					
ANR	1029784	Identifier	arg2w		1029719	1					
ANR	1029785	CFGEntryNode	ENTRY		1029719		True				
ANR	1029786	CFGExitNode	EXIT		1029719		True				
ANR	1029787	Symbol	arg1w		1029719						
ANR	1029788	Symbol	arg2		1029719						
ANR	1029789	Symbol	getput_arg		1029719						
ANR	1029790	Symbol	reg		1029719						
ANR	1029791	Symbol	arg1		1029719						
ANR	1029792	Symbol	arg2w		1029719						
ANR	1029793	Symbol	flags		1029719						
ANR	1029794	Symbol	* compiler		1029719						
ANR	1029795	Symbol	compiler		1029719						
ANR	1029796	Symbol	getput_arg_fast		1029719						
ANR	1029797	Symbol	compiler -> error		1029719						
ANR	1029798	Function	sljit_emit_enter	1063:0:33405:36419							
ANR	1029799	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1029798	0					
ANR	1029800	CompoundStatement		1066:0:33621:36419	1029798	0					
ANR	1029801	IdentifierDeclStatement	"sljit_si i , tmp , offs , prev , saved_regs_size ;"	1067:1:33624:33668	1029798	0	True				
ANR	1029802	IdentifierDecl	i		1029798	0					
ANR	1029803	IdentifierDeclType	sljit_si		1029798	0					
ANR	1029804	Identifier	i		1029798	1					
ANR	1029805	IdentifierDecl	tmp		1029798	1					
ANR	1029806	IdentifierDeclType	sljit_si		1029798	0					
ANR	1029807	Identifier	tmp		1029798	1					
ANR	1029808	IdentifierDecl	offs		1029798	2					
ANR	1029809	IdentifierDeclType	sljit_si		1029798	0					
ANR	1029810	Identifier	offs		1029798	1					
ANR	1029811	IdentifierDecl	prev		1029798	3					
ANR	1029812	IdentifierDeclType	sljit_si		1029798	0					
ANR	1029813	Identifier	prev		1029798	1					
ANR	1029814	IdentifierDecl	saved_regs_size		1029798	4					
ANR	1029815	IdentifierDeclType	sljit_si		1029798	0					
ANR	1029816	Identifier	saved_regs_size		1029798	1					
ANR	1029817	ExpressionStatement	CHECK_ERROR ( )	1069:1:33672:33685	1029798	1	True				
ANR	1029818	CallExpression	CHECK_ERROR ( )		1029798	0					
ANR	1029819	Callee	CHECK_ERROR		1029798	0					
ANR	1029820	Identifier	CHECK_ERROR		1029798	0					
ANR	1029821	ArgumentList			1029798	1					
ANR	1029822	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1070:1:33688:33794	1029798	2	True				
ANR	1029823	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1029798	0					
ANR	1029824	Callee	CHECK		1029798	0					
ANR	1029825	Identifier	CHECK		1029798	0					
ANR	1029826	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1029798	1					
ANR	1029827	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1029798	0					
ANR	1029828	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1029798	0					
ANR	1029829	Callee	check_sljit_emit_enter		1029798	0					
ANR	1029830	Identifier	check_sljit_emit_enter		1029798	0					
ANR	1029831	ArgumentList	compiler		1029798	1					
ANR	1029832	Argument	compiler		1029798	0					
ANR	1029833	Identifier	compiler		1029798	0					
ANR	1029834	Argument	options		1029798	1					
ANR	1029835	Identifier	options		1029798	0					
ANR	1029836	Argument	args		1029798	2					
ANR	1029837	Identifier	args		1029798	0					
ANR	1029838	Argument	scratches		1029798	3					
ANR	1029839	Identifier	scratches		1029798	0					
ANR	1029840	Argument	saveds		1029798	4					
ANR	1029841	Identifier	saveds		1029798	0					
ANR	1029842	Argument	fscratches		1029798	5					
ANR	1029843	Identifier	fscratches		1029798	0					
ANR	1029844	Argument	fsaveds		1029798	6					
ANR	1029845	Identifier	fsaveds		1029798	0					
ANR	1029846	Argument	local_size		1029798	7					
ANR	1029847	Identifier	local_size		1029798	0					
ANR	1029848	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1071:1:33797:33888	1029798	3	True				
ANR	1029849	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1029798	0					
ANR	1029850	Callee	set_emit_enter		1029798	0					
ANR	1029851	Identifier	set_emit_enter		1029798	0					
ANR	1029852	ArgumentList	compiler		1029798	1					
ANR	1029853	Argument	compiler		1029798	0					
ANR	1029854	Identifier	compiler		1029798	0					
ANR	1029855	Argument	options		1029798	1					
ANR	1029856	Identifier	options		1029798	0					
ANR	1029857	Argument	args		1029798	2					
ANR	1029858	Identifier	args		1029798	0					
ANR	1029859	Argument	scratches		1029798	3					
ANR	1029860	Identifier	scratches		1029798	0					
ANR	1029861	Argument	saveds		1029798	4					
ANR	1029862	Identifier	saveds		1029798	0					
ANR	1029863	Argument	fscratches		1029798	5					
ANR	1029864	Identifier	fscratches		1029798	0					
ANR	1029865	Argument	fsaveds		1029798	6					
ANR	1029866	Identifier	fsaveds		1029798	0					
ANR	1029867	Argument	local_size		1029798	7					
ANR	1029868	Identifier	local_size		1029798	0					
ANR	1029869	ExpressionStatement	"saved_regs_size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 0 )"	1073:1:33892:33956	1029798	4	True				
ANR	1029870	AssignmentExpression	"saved_regs_size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 0 )"		1029798	0		=			
ANR	1029871	Identifier	saved_regs_size		1029798	0					
ANR	1029872	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 0 )"		1029798	1					
ANR	1029873	Callee	GET_SAVED_REGISTERS_SIZE		1029798	0					
ANR	1029874	Identifier	GET_SAVED_REGISTERS_SIZE		1029798	0					
ANR	1029875	ArgumentList	scratches		1029798	1					
ANR	1029876	Argument	scratches		1029798	0					
ANR	1029877	Identifier	scratches		1029798	0					
ANR	1029878	Argument	saveds		1029798	1					
ANR	1029879	Identifier	saveds		1029798	0					
ANR	1029880	Argument	0		1029798	2					
ANR	1029881	PrimaryExpression	0		1029798	0					
ANR	1029882	ExpressionStatement	local_size += saved_regs_size + SLJIT_LOCALS_OFFSET	1074:1:33959:34010	1029798	5	True				
ANR	1029883	AssignmentExpression	local_size += saved_regs_size + SLJIT_LOCALS_OFFSET		1029798	0		+=			
ANR	1029884	Identifier	local_size		1029798	0					
ANR	1029885	AdditiveExpression	saved_regs_size + SLJIT_LOCALS_OFFSET		1029798	1		+			
ANR	1029886	Identifier	saved_regs_size		1029798	0					
ANR	1029887	Identifier	SLJIT_LOCALS_OFFSET		1029798	1					
ANR	1029888	ExpressionStatement	local_size = ( local_size + 15 ) & ~0xf	1075:1:34013:34050	1029798	6	True				
ANR	1029889	AssignmentExpression	local_size = ( local_size + 15 ) & ~0xf		1029798	0		=			
ANR	1029890	Identifier	local_size		1029798	0					
ANR	1029891	BitAndExpression	( local_size + 15 ) & ~0xf		1029798	1		&			
ANR	1029892	AdditiveExpression	local_size + 15		1029798	0		+			
ANR	1029893	Identifier	local_size		1029798	0					
ANR	1029894	PrimaryExpression	15		1029798	1					
ANR	1029895	Identifier	~0xf		1029798	1					
ANR	1029896	ExpressionStatement	compiler -> local_size = local_size	1076:1:34053:34086	1029798	7	True				
ANR	1029897	AssignmentExpression	compiler -> local_size = local_size		1029798	0		=			
ANR	1029898	PtrMemberAccess	compiler -> local_size		1029798	0					
ANR	1029899	Identifier	compiler		1029798	0					
ANR	1029900	Identifier	local_size		1029798	1					
ANR	1029901	Identifier	local_size		1029798	1					
ANR	1029902	IfStatement	if ( local_size <= ( 63 * sizeof ( sljit_sw ) ) )		1029798	8					
ANR	1029903	Condition	local_size <= ( 63 * sizeof ( sljit_sw ) )	1078:5:34094:34130	1029798	0	True				
ANR	1029904	RelationalExpression	local_size <= ( 63 * sizeof ( sljit_sw ) )		1029798	0		<=			
ANR	1029905	Identifier	local_size		1029798	0					
ANR	1029906	MultiplicativeExpression	63 * sizeof ( sljit_sw )		1029798	1		*			
ANR	1029907	PrimaryExpression	63		1029798	0					
ANR	1029908	SizeofExpression	sizeof ( sljit_sw )		1029798	1					
ANR	1029909	Sizeof	sizeof		1029798	0					
ANR	1029910	SizeofOperand	sljit_sw		1029798	1					
ANR	1029911	CompoundStatement		13:44:511:511	1029798	1					
ANR	1029912	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 ) ) )"	1079:2:34137:34247	1029798	0	True				
ANR	1029913	CallExpression	"FAIL_IF ( push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 ) ) )"		1029798	0					
ANR	1029914	Callee	FAIL_IF		1029798	0					
ANR	1029915	Identifier	FAIL_IF		1029798	0					
ANR	1029916	ArgumentList	"push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 ) )"		1029798	1					
ANR	1029917	Argument	"push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 ) )"		1029798	0					
ANR	1029918	CallExpression	"push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 ) )"		1029798	0					
ANR	1029919	Callee	push_inst		1029798	0					
ANR	1029920	Identifier	push_inst		1029798	0					
ANR	1029921	ArgumentList	compiler		1029798	1					
ANR	1029922	Argument	compiler		1029798	0					
ANR	1029923	Identifier	compiler		1029798	0					
ANR	1029924	Argument	STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 )		1029798	1					
ANR	1029925	InclusiveOrExpression	STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 )		1029798	0		|			
ANR	1029926	Identifier	STP_PRE		1029798	0					
ANR	1029927	InclusiveOrExpression	29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 )		1029798	1		|			
ANR	1029928	PrimaryExpression	29		1029798	0					
ANR	1029929	InclusiveOrExpression	RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 )		1029798	1		|			
ANR	1029930	CallExpression	RT2 ( TMP_LR )		1029798	0					
ANR	1029931	Callee	RT2		1029798	0					
ANR	1029932	Identifier	RT2		1029798	0					
ANR	1029933	ArgumentList	TMP_LR		1029798	1					
ANR	1029934	Argument	TMP_LR		1029798	0					
ANR	1029935	Identifier	TMP_LR		1029798	0					
ANR	1029936	InclusiveOrExpression	RN ( TMP_SP ) | ( ( - ( local_size >> 3 ) & 0x7f ) << 15 )		1029798	1		|			
ANR	1029937	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1029938	Callee	RN		1029798	0					
ANR	1029939	Identifier	RN		1029798	0					
ANR	1029940	ArgumentList	TMP_SP		1029798	1					
ANR	1029941	Argument	TMP_SP		1029798	0					
ANR	1029942	Identifier	TMP_SP		1029798	0					
ANR	1029943	ShiftExpression	( - ( local_size >> 3 ) & 0x7f ) << 15		1029798	1		<<			
ANR	1029944	BitAndExpression	- ( local_size >> 3 ) & 0x7f		1029798	0		&			
ANR	1029945	UnaryOperationExpression	- ( local_size >> 3 )		1029798	0					
ANR	1029946	UnaryOperator	-		1029798	0					
ANR	1029947	ShiftExpression	local_size >> 3		1029798	1		>>			
ANR	1029948	Identifier	local_size		1029798	0					
ANR	1029949	PrimaryExpression	3		1029798	1					
ANR	1029950	PrimaryExpression	0x7f		1029798	1					
ANR	1029951	PrimaryExpression	15		1029798	1					
ANR	1029952	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) ) )"	1081:2:34251:34325	1029798	1	True				
ANR	1029953	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) ) )"		1029798	0					
ANR	1029954	Callee	FAIL_IF		1029798	0					
ANR	1029955	Identifier	FAIL_IF		1029798	0					
ANR	1029956	ArgumentList	"push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) )"		1029798	1					
ANR	1029957	Argument	"push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) )"		1029798	0					
ANR	1029958	CallExpression	"push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) )"		1029798	0					
ANR	1029959	Callee	push_inst		1029798	0					
ANR	1029960	Identifier	push_inst		1029798	0					
ANR	1029961	ArgumentList	compiler		1029798	1					
ANR	1029962	Argument	compiler		1029798	0					
ANR	1029963	Identifier	compiler		1029798	0					
ANR	1029964	Argument	ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 )		1029798	1					
ANR	1029965	InclusiveOrExpression	ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 )		1029798	0		|			
ANR	1029966	Identifier	ADDI		1029798	0					
ANR	1029967	InclusiveOrExpression	RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 )		1029798	1		|			
ANR	1029968	CallExpression	RD ( SLJIT_SP )		1029798	0					
ANR	1029969	Callee	RD		1029798	0					
ANR	1029970	Identifier	RD		1029798	0					
ANR	1029971	ArgumentList	SLJIT_SP		1029798	1					
ANR	1029972	Argument	SLJIT_SP		1029798	0					
ANR	1029973	Identifier	SLJIT_SP		1029798	0					
ANR	1029974	InclusiveOrExpression	RN ( TMP_SP ) | ( 0 << 10 )		1029798	1		|			
ANR	1029975	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1029976	Callee	RN		1029798	0					
ANR	1029977	Identifier	RN		1029798	0					
ANR	1029978	ArgumentList	TMP_SP		1029798	1					
ANR	1029979	Argument	TMP_SP		1029798	0					
ANR	1029980	Identifier	TMP_SP		1029798	0					
ANR	1029981	ShiftExpression	0 << 10		1029798	1		<<			
ANR	1029982	PrimaryExpression	0		1029798	0					
ANR	1029983	PrimaryExpression	10		1029798	1					
ANR	1029984	ExpressionStatement	offs = ( local_size - saved_regs_size ) << ( 15 - 3 )	1082:2:34329:34378	1029798	2	True				
ANR	1029985	AssignmentExpression	offs = ( local_size - saved_regs_size ) << ( 15 - 3 )		1029798	0		=			
ANR	1029986	Identifier	offs		1029798	0					
ANR	1029987	ShiftExpression	( local_size - saved_regs_size ) << ( 15 - 3 )		1029798	1		<<			
ANR	1029988	AdditiveExpression	local_size - saved_regs_size		1029798	0		-			
ANR	1029989	Identifier	local_size		1029798	0					
ANR	1029990	Identifier	saved_regs_size		1029798	1					
ANR	1029991	AdditiveExpression	15 - 3		1029798	1		-			
ANR	1029992	PrimaryExpression	15		1029798	0					
ANR	1029993	PrimaryExpression	3		1029798	1					
ANR	1029994	ElseStatement	else		1029798	0					
ANR	1029995	CompoundStatement		18:8:766:766	1029798	0					
ANR	1029996	ExpressionStatement	offs = 0 << 15	1084:2:34392:34406	1029798	0	True				
ANR	1029997	AssignmentExpression	offs = 0 << 15		1029798	0		=			
ANR	1029998	Identifier	offs		1029798	0					
ANR	1029999	ShiftExpression	0 << 15		1029798	1		<<			
ANR	1030000	PrimaryExpression	0		1029798	0					
ANR	1030001	PrimaryExpression	15		1029798	1					
ANR	1030002	IfStatement	if ( saved_regs_size & 0x8 )		1029798	1					
ANR	1030003	Condition	saved_regs_size & 0x8	1085:6:34414:34434	1029798	0	True				
ANR	1030004	BitAndExpression	saved_regs_size & 0x8		1029798	0		&			
ANR	1030005	Identifier	saved_regs_size		1029798	0					
ANR	1030006	PrimaryExpression	0x8		1029798	1					
ANR	1030007	CompoundStatement		20:29:815:815	1029798	1					
ANR	1030008	ExpressionStatement	offs = 1 << 15	1086:3:34442:34456	1029798	0	True				
ANR	1030009	AssignmentExpression	offs = 1 << 15		1029798	0		=			
ANR	1030010	Identifier	offs		1029798	0					
ANR	1030011	ShiftExpression	1 << 15		1029798	1		<<			
ANR	1030012	PrimaryExpression	1		1029798	0					
ANR	1030013	PrimaryExpression	15		1029798	1					
ANR	1030014	ExpressionStatement	saved_regs_size += sizeof ( sljit_sw )	1087:3:34461:34496	1029798	1	True				
ANR	1030015	AssignmentExpression	saved_regs_size += sizeof ( sljit_sw )		1029798	0		+=			
ANR	1030016	Identifier	saved_regs_size		1029798	0					
ANR	1030017	SizeofExpression	sizeof ( sljit_sw )		1029798	1					
ANR	1030018	Sizeof	sizeof		1029798	0					
ANR	1030019	SizeofOperand	sljit_sw		1029798	1					
ANR	1030020	ExpressionStatement	local_size -= saved_regs_size + SLJIT_LOCALS_OFFSET	1089:2:34504:34555	1029798	2	True				
ANR	1030021	AssignmentExpression	local_size -= saved_regs_size + SLJIT_LOCALS_OFFSET		1029798	0		-=			
ANR	1030022	Identifier	local_size		1029798	0					
ANR	1030023	AdditiveExpression	saved_regs_size + SLJIT_LOCALS_OFFSET		1029798	1		+			
ANR	1030024	Identifier	saved_regs_size		1029798	0					
ANR	1030025	Identifier	SLJIT_LOCALS_OFFSET		1029798	1					
ANR	1030026	IfStatement	if ( saved_regs_size > 0 )		1029798	3					
ANR	1030027	Condition	saved_regs_size > 0	1090:6:34563:34581	1029798	0	True				
ANR	1030028	RelationalExpression	saved_regs_size > 0		1029798	0		>			
ANR	1030029	Identifier	saved_regs_size		1029798	0					
ANR	1030030	PrimaryExpression	0		1029798	1					
ANR	1030031	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) ) )"	1091:3:34587:34673	1029798	1	True				
ANR	1030032	CallExpression	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) ) )"		1029798	0					
ANR	1030033	Callee	FAIL_IF		1029798	0					
ANR	1030034	Identifier	FAIL_IF		1029798	0					
ANR	1030035	ArgumentList	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) )"		1029798	1					
ANR	1030036	Argument	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) )"		1029798	0					
ANR	1030037	CallExpression	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) )"		1029798	0					
ANR	1030038	Callee	push_inst		1029798	0					
ANR	1030039	Identifier	push_inst		1029798	0					
ANR	1030040	ArgumentList	compiler		1029798	1					
ANR	1030041	Argument	compiler		1029798	0					
ANR	1030042	Identifier	compiler		1029798	0					
ANR	1030043	Argument	SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 )		1029798	1					
ANR	1030044	InclusiveOrExpression	SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 )		1029798	0		|			
ANR	1030045	Identifier	SUBI		1029798	0					
ANR	1030046	InclusiveOrExpression	RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 )		1029798	1		|			
ANR	1030047	CallExpression	RD ( TMP_SP )		1029798	0					
ANR	1030048	Callee	RD		1029798	0					
ANR	1030049	Identifier	RD		1029798	0					
ANR	1030050	ArgumentList	TMP_SP		1029798	1					
ANR	1030051	Argument	TMP_SP		1029798	0					
ANR	1030052	Identifier	TMP_SP		1029798	0					
ANR	1030053	InclusiveOrExpression	RN ( TMP_SP ) | ( saved_regs_size << 10 )		1029798	1		|			
ANR	1030054	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030055	Callee	RN		1029798	0					
ANR	1030056	Identifier	RN		1029798	0					
ANR	1030057	ArgumentList	TMP_SP		1029798	1					
ANR	1030058	Argument	TMP_SP		1029798	0					
ANR	1030059	Identifier	TMP_SP		1029798	0					
ANR	1030060	ShiftExpression	saved_regs_size << 10		1029798	1		<<			
ANR	1030061	Identifier	saved_regs_size		1029798	0					
ANR	1030062	PrimaryExpression	10		1029798	1					
ANR	1030063	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	1094:1:34680:34776	1029798	9	True				
ANR	1030064	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1029798	0		=			
ANR	1030065	Identifier	tmp		1029798	0					
ANR	1030066	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1029798	1					
ANR	1030067	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1029798	0					
ANR	1030068	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1029798	0		<			
ANR	1030069	Identifier	saveds		1029798	0					
ANR	1030070	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1029798	1					
ANR	1030071	AdditiveExpression	SLJIT_S0 + 1 - saveds		1029798	1		+			
ANR	1030072	Identifier	SLJIT_S0		1029798	0					
ANR	1030073	AdditiveExpression	1 - saveds		1029798	1		-			
ANR	1030074	PrimaryExpression	1		1029798	0					
ANR	1030075	Identifier	saveds		1029798	1					
ANR	1030076	Identifier	SLJIT_FIRST_SAVED_REG		1029798	2					
ANR	1030077	ExpressionStatement	prev = - 1	1095:1:34779:34788	1029798	10	True				
ANR	1030078	AssignmentExpression	prev = - 1		1029798	0		=			
ANR	1030079	Identifier	prev		1029798	0					
ANR	1030080	UnaryOperationExpression	- 1		1029798	1					
ANR	1030081	UnaryOperator	-		1029798	0					
ANR	1030082	PrimaryExpression	1		1029798	1					
ANR	1030083	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1029798	11					
ANR	1030084	ForInit	i = SLJIT_S0 ;	1096:6:34796:34808	1029798	0	True				
ANR	1030085	AssignmentExpression	i = SLJIT_S0		1029798	0		=			
ANR	1030086	Identifier	i		1029798	0					
ANR	1030087	Identifier	SLJIT_S0		1029798	1					
ANR	1030088	Condition	i >= tmp	1096:20:34810:34817	1029798	1	True				
ANR	1030089	RelationalExpression	i >= tmp		1029798	0		>=			
ANR	1030090	Identifier	i		1029798	0					
ANR	1030091	Identifier	tmp		1029798	1					
ANR	1030092	PostIncDecOperationExpression	i --	1096:30:34820:34822	1029798	2	True				
ANR	1030093	Identifier	i		1029798	0					
ANR	1030094	IncDec	--		1029798	1					
ANR	1030095	CompoundStatement		31:35:1203:1203	1029798	3					
ANR	1030096	IfStatement	if ( prev == - 1 )		1029798	0					
ANR	1030097	Condition	prev == - 1	1097:6:34833:34842	1029798	0	True				
ANR	1030098	EqualityExpression	prev == - 1		1029798	0		==			
ANR	1030099	Identifier	prev		1029798	0					
ANR	1030100	UnaryOperationExpression	- 1		1029798	1					
ANR	1030101	UnaryOperator	-		1029798	0					
ANR	1030102	PrimaryExpression	1		1029798	1					
ANR	1030103	CompoundStatement		32:18:1223:1223	1029798	1					
ANR	1030104	IfStatement	if ( ! ( offs & ( 1 << 15 ) ) )		1029798	0					
ANR	1030105	Condition	! ( offs & ( 1 << 15 ) )	1098:7:34854:34872	1029798	0	True				
ANR	1030106	UnaryOperationExpression	! ( offs & ( 1 << 15 ) )		1029798	0					
ANR	1030107	UnaryOperator	!		1029798	0					
ANR	1030108	BitAndExpression	offs & ( 1 << 15 )		1029798	1		&			
ANR	1030109	Identifier	offs		1029798	0					
ANR	1030110	ShiftExpression	1 << 15		1029798	1		<<			
ANR	1030111	PrimaryExpression	1		1029798	0					
ANR	1030112	PrimaryExpression	15		1029798	1					
ANR	1030113	CompoundStatement		33:28:1253:1253	1029798	1					
ANR	1030114	ExpressionStatement	prev = i	1099:4:34881:34889	1029798	0	True				
ANR	1030115	AssignmentExpression	prev = i		1029798	0		=			
ANR	1030116	Identifier	prev		1029798	0					
ANR	1030117	Identifier	i		1029798	1					
ANR	1030118	ContinueStatement	continue ;	1100:4:34895:34903	1029798	1	True				
ANR	1030119	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"	1102:3:34913:34982	1029798	1	True				
ANR	1030120	CallExpression	"FAIL_IF ( push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"		1029798	0					
ANR	1030121	Callee	FAIL_IF		1029798	0					
ANR	1030122	Identifier	FAIL_IF		1029798	0					
ANR	1030123	ArgumentList	"push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1029798	1					
ANR	1030124	Argument	"push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1029798	0					
ANR	1030125	CallExpression	"push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1029798	0					
ANR	1030126	Callee	push_inst		1029798	0					
ANR	1030127	Identifier	push_inst		1029798	0					
ANR	1030128	ArgumentList	compiler		1029798	1					
ANR	1030129	Argument	compiler		1029798	0					
ANR	1030130	Identifier	compiler		1029798	0					
ANR	1030131	Argument	STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1029798	1					
ANR	1030132	InclusiveOrExpression	STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1029798	0		|			
ANR	1030133	Identifier	STRI		1029798	0					
ANR	1030134	InclusiveOrExpression	RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1029798	1		|			
ANR	1030135	CallExpression	RT ( i )		1029798	0					
ANR	1030136	Callee	RT		1029798	0					
ANR	1030137	Identifier	RT		1029798	0					
ANR	1030138	ArgumentList	i		1029798	1					
ANR	1030139	Argument	i		1029798	0					
ANR	1030140	Identifier	i		1029798	0					
ANR	1030141	InclusiveOrExpression	RN ( TMP_SP ) | ( offs >> 5 )		1029798	1		|			
ANR	1030142	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030143	Callee	RN		1029798	0					
ANR	1030144	Identifier	RN		1029798	0					
ANR	1030145	ArgumentList	TMP_SP		1029798	1					
ANR	1030146	Argument	TMP_SP		1029798	0					
ANR	1030147	Identifier	TMP_SP		1029798	0					
ANR	1030148	ShiftExpression	offs >> 5		1029798	1		>>			
ANR	1030149	Identifier	offs		1029798	0					
ANR	1030150	PrimaryExpression	5		1029798	1					
ANR	1030151	ExpressionStatement	offs += 1 << 15	1103:3:34987:35002	1029798	2	True				
ANR	1030152	AssignmentExpression	offs += 1 << 15		1029798	0		+=			
ANR	1030153	Identifier	offs		1029798	0					
ANR	1030154	ShiftExpression	1 << 15		1029798	1		<<			
ANR	1030155	PrimaryExpression	1		1029798	0					
ANR	1030156	PrimaryExpression	15		1029798	1					
ANR	1030157	ContinueStatement	continue ;	1104:3:35007:35015	1029798	3	True				
ANR	1030158	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"	1106:2:35023:35096	1029798	1	True				
ANR	1030159	CallExpression	"FAIL_IF ( push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"		1029798	0					
ANR	1030160	Callee	FAIL_IF		1029798	0					
ANR	1030161	Identifier	FAIL_IF		1029798	0					
ANR	1030162	ArgumentList	"push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1029798	1					
ANR	1030163	Argument	"push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1029798	0					
ANR	1030164	CallExpression	"push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1029798	0					
ANR	1030165	Callee	push_inst		1029798	0					
ANR	1030166	Identifier	push_inst		1029798	0					
ANR	1030167	ArgumentList	compiler		1029798	1					
ANR	1030168	Argument	compiler		1029798	0					
ANR	1030169	Identifier	compiler		1029798	0					
ANR	1030170	Argument	STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	1					
ANR	1030171	InclusiveOrExpression	STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	0		|			
ANR	1030172	Identifier	STP		1029798	0					
ANR	1030173	InclusiveOrExpression	RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	1		|			
ANR	1030174	CallExpression	RT ( prev )		1029798	0					
ANR	1030175	Callee	RT		1029798	0					
ANR	1030176	Identifier	RT		1029798	0					
ANR	1030177	ArgumentList	prev		1029798	1					
ANR	1030178	Argument	prev		1029798	0					
ANR	1030179	Identifier	prev		1029798	0					
ANR	1030180	InclusiveOrExpression	RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	1		|			
ANR	1030181	CallExpression	RT2 ( i )		1029798	0					
ANR	1030182	Callee	RT2		1029798	0					
ANR	1030183	Identifier	RT2		1029798	0					
ANR	1030184	ArgumentList	i		1029798	1					
ANR	1030185	Argument	i		1029798	0					
ANR	1030186	Identifier	i		1029798	0					
ANR	1030187	InclusiveOrExpression	RN ( TMP_SP ) | offs		1029798	1		|			
ANR	1030188	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030189	Callee	RN		1029798	0					
ANR	1030190	Identifier	RN		1029798	0					
ANR	1030191	ArgumentList	TMP_SP		1029798	1					
ANR	1030192	Argument	TMP_SP		1029798	0					
ANR	1030193	Identifier	TMP_SP		1029798	0					
ANR	1030194	Identifier	offs		1029798	1					
ANR	1030195	ExpressionStatement	offs += 2 << 15	1107:2:35100:35115	1029798	2	True				
ANR	1030196	AssignmentExpression	offs += 2 << 15		1029798	0		+=			
ANR	1030197	Identifier	offs		1029798	0					
ANR	1030198	ShiftExpression	2 << 15		1029798	1		<<			
ANR	1030199	PrimaryExpression	2		1029798	0					
ANR	1030200	PrimaryExpression	15		1029798	1					
ANR	1030201	ExpressionStatement	prev = - 1	1108:2:35119:35128	1029798	3	True				
ANR	1030202	AssignmentExpression	prev = - 1		1029798	0		=			
ANR	1030203	Identifier	prev		1029798	0					
ANR	1030204	UnaryOperationExpression	- 1		1029798	1					
ANR	1030205	UnaryOperator	-		1029798	0					
ANR	1030206	PrimaryExpression	1		1029798	1					
ANR	1030207	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1029798	12					
ANR	1030208	ForInit	i = scratches ;	1111:6:35140:35153	1029798	0	True				
ANR	1030209	AssignmentExpression	i = scratches		1029798	0		=			
ANR	1030210	Identifier	i		1029798	0					
ANR	1030211	Identifier	scratches		1029798	1					
ANR	1030212	Condition	i >= SLJIT_FIRST_SAVED_REG	1111:21:35155:35180	1029798	1	True				
ANR	1030213	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1029798	0		>=			
ANR	1030214	Identifier	i		1029798	0					
ANR	1030215	Identifier	SLJIT_FIRST_SAVED_REG		1029798	1					
ANR	1030216	PostIncDecOperationExpression	i --	1111:49:35183:35185	1029798	2	True				
ANR	1030217	Identifier	i		1029798	0					
ANR	1030218	IncDec	--		1029798	1					
ANR	1030219	CompoundStatement		46:54:1566:1566	1029798	3					
ANR	1030220	IfStatement	if ( prev == - 1 )		1029798	0					
ANR	1030221	Condition	prev == - 1	1112:6:35196:35205	1029798	0	True				
ANR	1030222	EqualityExpression	prev == - 1		1029798	0		==			
ANR	1030223	Identifier	prev		1029798	0					
ANR	1030224	UnaryOperationExpression	- 1		1029798	1					
ANR	1030225	UnaryOperator	-		1029798	0					
ANR	1030226	PrimaryExpression	1		1029798	1					
ANR	1030227	CompoundStatement		47:18:1586:1586	1029798	1					
ANR	1030228	IfStatement	if ( ! ( offs & ( 1 << 15 ) ) )		1029798	0					
ANR	1030229	Condition	! ( offs & ( 1 << 15 ) )	1113:7:35217:35235	1029798	0	True				
ANR	1030230	UnaryOperationExpression	! ( offs & ( 1 << 15 ) )		1029798	0					
ANR	1030231	UnaryOperator	!		1029798	0					
ANR	1030232	BitAndExpression	offs & ( 1 << 15 )		1029798	1		&			
ANR	1030233	Identifier	offs		1029798	0					
ANR	1030234	ShiftExpression	1 << 15		1029798	1		<<			
ANR	1030235	PrimaryExpression	1		1029798	0					
ANR	1030236	PrimaryExpression	15		1029798	1					
ANR	1030237	CompoundStatement		48:28:1616:1616	1029798	1					
ANR	1030238	ExpressionStatement	prev = i	1114:4:35244:35252	1029798	0	True				
ANR	1030239	AssignmentExpression	prev = i		1029798	0		=			
ANR	1030240	Identifier	prev		1029798	0					
ANR	1030241	Identifier	i		1029798	1					
ANR	1030242	ContinueStatement	continue ;	1115:4:35258:35266	1029798	1	True				
ANR	1030243	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"	1117:3:35276:35345	1029798	1	True				
ANR	1030244	CallExpression	"FAIL_IF ( push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"		1029798	0					
ANR	1030245	Callee	FAIL_IF		1029798	0					
ANR	1030246	Identifier	FAIL_IF		1029798	0					
ANR	1030247	ArgumentList	"push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1029798	1					
ANR	1030248	Argument	"push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1029798	0					
ANR	1030249	CallExpression	"push_inst ( compiler , STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1029798	0					
ANR	1030250	Callee	push_inst		1029798	0					
ANR	1030251	Identifier	push_inst		1029798	0					
ANR	1030252	ArgumentList	compiler		1029798	1					
ANR	1030253	Argument	compiler		1029798	0					
ANR	1030254	Identifier	compiler		1029798	0					
ANR	1030255	Argument	STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1029798	1					
ANR	1030256	InclusiveOrExpression	STRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1029798	0		|			
ANR	1030257	Identifier	STRI		1029798	0					
ANR	1030258	InclusiveOrExpression	RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1029798	1		|			
ANR	1030259	CallExpression	RT ( i )		1029798	0					
ANR	1030260	Callee	RT		1029798	0					
ANR	1030261	Identifier	RT		1029798	0					
ANR	1030262	ArgumentList	i		1029798	1					
ANR	1030263	Argument	i		1029798	0					
ANR	1030264	Identifier	i		1029798	0					
ANR	1030265	InclusiveOrExpression	RN ( TMP_SP ) | ( offs >> 5 )		1029798	1		|			
ANR	1030266	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030267	Callee	RN		1029798	0					
ANR	1030268	Identifier	RN		1029798	0					
ANR	1030269	ArgumentList	TMP_SP		1029798	1					
ANR	1030270	Argument	TMP_SP		1029798	0					
ANR	1030271	Identifier	TMP_SP		1029798	0					
ANR	1030272	ShiftExpression	offs >> 5		1029798	1		>>			
ANR	1030273	Identifier	offs		1029798	0					
ANR	1030274	PrimaryExpression	5		1029798	1					
ANR	1030275	ExpressionStatement	offs += 1 << 15	1118:3:35350:35365	1029798	2	True				
ANR	1030276	AssignmentExpression	offs += 1 << 15		1029798	0		+=			
ANR	1030277	Identifier	offs		1029798	0					
ANR	1030278	ShiftExpression	1 << 15		1029798	1		<<			
ANR	1030279	PrimaryExpression	1		1029798	0					
ANR	1030280	PrimaryExpression	15		1029798	1					
ANR	1030281	ContinueStatement	continue ;	1119:3:35370:35378	1029798	3	True				
ANR	1030282	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"	1121:2:35386:35459	1029798	1	True				
ANR	1030283	CallExpression	"FAIL_IF ( push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"		1029798	0					
ANR	1030284	Callee	FAIL_IF		1029798	0					
ANR	1030285	Identifier	FAIL_IF		1029798	0					
ANR	1030286	ArgumentList	"push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1029798	1					
ANR	1030287	Argument	"push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1029798	0					
ANR	1030288	CallExpression	"push_inst ( compiler , STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1029798	0					
ANR	1030289	Callee	push_inst		1029798	0					
ANR	1030290	Identifier	push_inst		1029798	0					
ANR	1030291	ArgumentList	compiler		1029798	1					
ANR	1030292	Argument	compiler		1029798	0					
ANR	1030293	Identifier	compiler		1029798	0					
ANR	1030294	Argument	STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	1					
ANR	1030295	InclusiveOrExpression	STP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	0		|			
ANR	1030296	Identifier	STP		1029798	0					
ANR	1030297	InclusiveOrExpression	RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	1		|			
ANR	1030298	CallExpression	RT ( prev )		1029798	0					
ANR	1030299	Callee	RT		1029798	0					
ANR	1030300	Identifier	RT		1029798	0					
ANR	1030301	ArgumentList	prev		1029798	1					
ANR	1030302	Argument	prev		1029798	0					
ANR	1030303	Identifier	prev		1029798	0					
ANR	1030304	InclusiveOrExpression	RT2 ( i ) | RN ( TMP_SP ) | offs		1029798	1		|			
ANR	1030305	CallExpression	RT2 ( i )		1029798	0					
ANR	1030306	Callee	RT2		1029798	0					
ANR	1030307	Identifier	RT2		1029798	0					
ANR	1030308	ArgumentList	i		1029798	1					
ANR	1030309	Argument	i		1029798	0					
ANR	1030310	Identifier	i		1029798	0					
ANR	1030311	InclusiveOrExpression	RN ( TMP_SP ) | offs		1029798	1		|			
ANR	1030312	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030313	Callee	RN		1029798	0					
ANR	1030314	Identifier	RN		1029798	0					
ANR	1030315	ArgumentList	TMP_SP		1029798	1					
ANR	1030316	Argument	TMP_SP		1029798	0					
ANR	1030317	Identifier	TMP_SP		1029798	0					
ANR	1030318	Identifier	offs		1029798	1					
ANR	1030319	ExpressionStatement	offs += 2 << 15	1122:2:35463:35478	1029798	2	True				
ANR	1030320	AssignmentExpression	offs += 2 << 15		1029798	0		+=			
ANR	1030321	Identifier	offs		1029798	0					
ANR	1030322	ShiftExpression	2 << 15		1029798	1		<<			
ANR	1030323	PrimaryExpression	2		1029798	0					
ANR	1030324	PrimaryExpression	15		1029798	1					
ANR	1030325	ExpressionStatement	prev = - 1	1123:2:35482:35491	1029798	3	True				
ANR	1030326	AssignmentExpression	prev = - 1		1029798	0		=			
ANR	1030327	Identifier	prev		1029798	0					
ANR	1030328	UnaryOperationExpression	- 1		1029798	1					
ANR	1030329	UnaryOperator	-		1029798	0					
ANR	1030330	PrimaryExpression	1		1029798	1					
ANR	1030331	ExpressionStatement	SLJIT_ASSERT ( prev == - 1 )	1126:1:35498:35522	1029798	13	True				
ANR	1030332	CallExpression	SLJIT_ASSERT ( prev == - 1 )		1029798	0					
ANR	1030333	Callee	SLJIT_ASSERT		1029798	0					
ANR	1030334	Identifier	SLJIT_ASSERT		1029798	0					
ANR	1030335	ArgumentList	prev == - 1		1029798	1					
ANR	1030336	Argument	prev == - 1		1029798	0					
ANR	1030337	EqualityExpression	prev == - 1		1029798	0		==			
ANR	1030338	Identifier	prev		1029798	0					
ANR	1030339	UnaryOperationExpression	- 1		1029798	1					
ANR	1030340	UnaryOperator	-		1029798	0					
ANR	1030341	PrimaryExpression	1		1029798	1					
ANR	1030342	IfStatement	if ( compiler -> local_size > ( 63 * sizeof ( sljit_sw ) ) )		1029798	14					
ANR	1030343	Condition	compiler -> local_size > ( 63 * sizeof ( sljit_sw ) )	1128:5:35530:35575	1029798	0	True				
ANR	1030344	RelationalExpression	compiler -> local_size > ( 63 * sizeof ( sljit_sw ) )		1029798	0		>			
ANR	1030345	PtrMemberAccess	compiler -> local_size		1029798	0					
ANR	1030346	Identifier	compiler		1029798	0					
ANR	1030347	Identifier	local_size		1029798	1					
ANR	1030348	MultiplicativeExpression	63 * sizeof ( sljit_sw )		1029798	1		*			
ANR	1030349	PrimaryExpression	63		1029798	0					
ANR	1030350	SizeofExpression	sizeof ( sljit_sw )		1029798	1					
ANR	1030351	Sizeof	sizeof		1029798	0					
ANR	1030352	SizeofOperand	sljit_sw		1029798	1					
ANR	1030353	CompoundStatement		63:53:1956:1956	1029798	1					
ANR	1030354	IfStatement	if ( local_size > 0xfff )		1029798	0					
ANR	1030355	Condition	local_size > 0xfff	1130:6:35653:35670	1029798	0	True				
ANR	1030356	RelationalExpression	local_size > 0xfff		1029798	0		>			
ANR	1030357	Identifier	local_size		1029798	0					
ANR	1030358	PrimaryExpression	0xfff		1029798	1					
ANR	1030359	CompoundStatement		65:26:2051:2051	1029798	1					
ANR	1030360	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) ) )"	1131:3:35678:35779	1029798	0	True				
ANR	1030361	CallExpression	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) ) )"		1029798	0					
ANR	1030362	Callee	FAIL_IF		1029798	0					
ANR	1030363	Identifier	FAIL_IF		1029798	0					
ANR	1030364	ArgumentList	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) )"		1029798	1					
ANR	1030365	Argument	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) )"		1029798	0					
ANR	1030366	CallExpression	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) )"		1029798	0					
ANR	1030367	Callee	push_inst		1029798	0					
ANR	1030368	Identifier	push_inst		1029798	0					
ANR	1030369	ArgumentList	compiler		1029798	1					
ANR	1030370	Argument	compiler		1029798	0					
ANR	1030371	Identifier	compiler		1029798	0					
ANR	1030372	Argument	SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1029798	1					
ANR	1030373	InclusiveOrExpression	SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1029798	0		|			
ANR	1030374	Identifier	SUBI		1029798	0					
ANR	1030375	InclusiveOrExpression	RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1029798	1		|			
ANR	1030376	CallExpression	RD ( TMP_SP )		1029798	0					
ANR	1030377	Callee	RD		1029798	0					
ANR	1030378	Identifier	RD		1029798	0					
ANR	1030379	ArgumentList	TMP_SP		1029798	1					
ANR	1030380	Argument	TMP_SP		1029798	0					
ANR	1030381	Identifier	TMP_SP		1029798	0					
ANR	1030382	InclusiveOrExpression	RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1029798	1		|			
ANR	1030383	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030384	Callee	RN		1029798	0					
ANR	1030385	Identifier	RN		1029798	0					
ANR	1030386	ArgumentList	TMP_SP		1029798	1					
ANR	1030387	Argument	TMP_SP		1029798	0					
ANR	1030388	Identifier	TMP_SP		1029798	0					
ANR	1030389	InclusiveOrExpression	( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1029798	1		|			
ANR	1030390	ShiftExpression	( local_size >> 12 ) << 10		1029798	0		<<			
ANR	1030391	ShiftExpression	local_size >> 12		1029798	0		>>			
ANR	1030392	Identifier	local_size		1029798	0					
ANR	1030393	PrimaryExpression	12		1029798	1					
ANR	1030394	PrimaryExpression	10		1029798	1					
ANR	1030395	ShiftExpression	1 << 22		1029798	1		<<			
ANR	1030396	PrimaryExpression	1		1029798	0					
ANR	1030397	PrimaryExpression	22		1029798	1					
ANR	1030398	ExpressionStatement	local_size &= 0xfff	1132:3:35784:35803	1029798	1	True				
ANR	1030399	AssignmentExpression	local_size &= 0xfff		1029798	0		&=			
ANR	1030400	Identifier	local_size		1029798	0					
ANR	1030401	PrimaryExpression	0xfff		1029798	1					
ANR	1030402	IfStatement	if ( local_size )		1029798	1					
ANR	1030403	Condition	local_size	1134:6:35815:35824	1029798	0	True				
ANR	1030404	Identifier	local_size		1029798	0					
ANR	1030405	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) ) )"	1135:3:35830:35911	1029798	1	True				
ANR	1030406	CallExpression	"FAIL_IF ( push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) ) )"		1029798	0					
ANR	1030407	Callee	FAIL_IF		1029798	0					
ANR	1030408	Identifier	FAIL_IF		1029798	0					
ANR	1030409	ArgumentList	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) )"		1029798	1					
ANR	1030410	Argument	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) )"		1029798	0					
ANR	1030411	CallExpression	"push_inst ( compiler , SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) )"		1029798	0					
ANR	1030412	Callee	push_inst		1029798	0					
ANR	1030413	Identifier	push_inst		1029798	0					
ANR	1030414	ArgumentList	compiler		1029798	1					
ANR	1030415	Argument	compiler		1029798	0					
ANR	1030416	Identifier	compiler		1029798	0					
ANR	1030417	Argument	SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 )		1029798	1					
ANR	1030418	InclusiveOrExpression	SUBI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 )		1029798	0		|			
ANR	1030419	Identifier	SUBI		1029798	0					
ANR	1030420	InclusiveOrExpression	RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 )		1029798	1		|			
ANR	1030421	CallExpression	RD ( TMP_SP )		1029798	0					
ANR	1030422	Callee	RD		1029798	0					
ANR	1030423	Identifier	RD		1029798	0					
ANR	1030424	ArgumentList	TMP_SP		1029798	1					
ANR	1030425	Argument	TMP_SP		1029798	0					
ANR	1030426	Identifier	TMP_SP		1029798	0					
ANR	1030427	InclusiveOrExpression	RN ( TMP_SP ) | ( local_size << 10 )		1029798	1		|			
ANR	1030428	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030429	Callee	RN		1029798	0					
ANR	1030430	Identifier	RN		1029798	0					
ANR	1030431	ArgumentList	TMP_SP		1029798	1					
ANR	1030432	Argument	TMP_SP		1029798	0					
ANR	1030433	Identifier	TMP_SP		1029798	0					
ANR	1030434	ShiftExpression	local_size << 10		1029798	1		<<			
ANR	1030435	Identifier	local_size		1029798	0					
ANR	1030436	PrimaryExpression	10		1029798	1					
ANR	1030437	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 ) ) )"	1136:2:35915:36017	1029798	2	True				
ANR	1030438	CallExpression	"FAIL_IF ( push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 ) ) )"		1029798	0					
ANR	1030439	Callee	FAIL_IF		1029798	0					
ANR	1030440	Identifier	FAIL_IF		1029798	0					
ANR	1030441	ArgumentList	"push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 ) )"		1029798	1					
ANR	1030442	Argument	"push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 ) )"		1029798	0					
ANR	1030443	CallExpression	"push_inst ( compiler , STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 ) )"		1029798	0					
ANR	1030444	Callee	push_inst		1029798	0					
ANR	1030445	Identifier	push_inst		1029798	0					
ANR	1030446	ArgumentList	compiler		1029798	1					
ANR	1030447	Argument	compiler		1029798	0					
ANR	1030448	Identifier	compiler		1029798	0					
ANR	1030449	Argument	STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 )		1029798	1					
ANR	1030450	InclusiveOrExpression	STP_PRE | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 )		1029798	0		|			
ANR	1030451	Identifier	STP_PRE		1029798	0					
ANR	1030452	InclusiveOrExpression	29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 )		1029798	1		|			
ANR	1030453	PrimaryExpression	29		1029798	0					
ANR	1030454	InclusiveOrExpression	RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 )		1029798	1		|			
ANR	1030455	CallExpression	RT2 ( TMP_LR )		1029798	0					
ANR	1030456	Callee	RT2		1029798	0					
ANR	1030457	Identifier	RT2		1029798	0					
ANR	1030458	ArgumentList	TMP_LR		1029798	1					
ANR	1030459	Argument	TMP_LR		1029798	0					
ANR	1030460	Identifier	TMP_LR		1029798	0					
ANR	1030461	InclusiveOrExpression	RN ( TMP_SP ) | ( ( - ( 16 >> 3 ) & 0x7f ) << 15 )		1029798	1		|			
ANR	1030462	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030463	Callee	RN		1029798	0					
ANR	1030464	Identifier	RN		1029798	0					
ANR	1030465	ArgumentList	TMP_SP		1029798	1					
ANR	1030466	Argument	TMP_SP		1029798	0					
ANR	1030467	Identifier	TMP_SP		1029798	0					
ANR	1030468	ShiftExpression	( - ( 16 >> 3 ) & 0x7f ) << 15		1029798	1		<<			
ANR	1030469	BitAndExpression	- ( 16 >> 3 ) & 0x7f		1029798	0		&			
ANR	1030470	UnaryOperationExpression	- ( 16 >> 3 )		1029798	0					
ANR	1030471	UnaryOperator	-		1029798	0					
ANR	1030472	ShiftExpression	16 >> 3		1029798	1		>>			
ANR	1030473	PrimaryExpression	16		1029798	0					
ANR	1030474	PrimaryExpression	3		1029798	1					
ANR	1030475	PrimaryExpression	0x7f		1029798	1					
ANR	1030476	PrimaryExpression	15		1029798	1					
ANR	1030477	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) ) )"	1138:2:36021:36095	1029798	3	True				
ANR	1030478	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) ) )"		1029798	0					
ANR	1030479	Callee	FAIL_IF		1029798	0					
ANR	1030480	Identifier	FAIL_IF		1029798	0					
ANR	1030481	ArgumentList	"push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) )"		1029798	1					
ANR	1030482	Argument	"push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) )"		1029798	0					
ANR	1030483	CallExpression	"push_inst ( compiler , ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 ) )"		1029798	0					
ANR	1030484	Callee	push_inst		1029798	0					
ANR	1030485	Identifier	push_inst		1029798	0					
ANR	1030486	ArgumentList	compiler		1029798	1					
ANR	1030487	Argument	compiler		1029798	0					
ANR	1030488	Identifier	compiler		1029798	0					
ANR	1030489	Argument	ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 )		1029798	1					
ANR	1030490	InclusiveOrExpression	ADDI | RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 )		1029798	0		|			
ANR	1030491	Identifier	ADDI		1029798	0					
ANR	1030492	InclusiveOrExpression	RD ( SLJIT_SP ) | RN ( TMP_SP ) | ( 0 << 10 )		1029798	1		|			
ANR	1030493	CallExpression	RD ( SLJIT_SP )		1029798	0					
ANR	1030494	Callee	RD		1029798	0					
ANR	1030495	Identifier	RD		1029798	0					
ANR	1030496	ArgumentList	SLJIT_SP		1029798	1					
ANR	1030497	Argument	SLJIT_SP		1029798	0					
ANR	1030498	Identifier	SLJIT_SP		1029798	0					
ANR	1030499	InclusiveOrExpression	RN ( TMP_SP ) | ( 0 << 10 )		1029798	1		|			
ANR	1030500	CallExpression	RN ( TMP_SP )		1029798	0					
ANR	1030501	Callee	RN		1029798	0					
ANR	1030502	Identifier	RN		1029798	0					
ANR	1030503	ArgumentList	TMP_SP		1029798	1					
ANR	1030504	Argument	TMP_SP		1029798	0					
ANR	1030505	Identifier	TMP_SP		1029798	0					
ANR	1030506	ShiftExpression	0 << 10		1029798	1		<<			
ANR	1030507	PrimaryExpression	0		1029798	0					
ANR	1030508	PrimaryExpression	10		1029798	1					
ANR	1030509	IfStatement	if ( args >= 1 )		1029798	15					
ANR	1030510	Condition	args >= 1	1141:5:36106:36114	1029798	0	True				
ANR	1030511	RelationalExpression	args >= 1		1029798	0		>=			
ANR	1030512	Identifier	args		1029798	0					
ANR	1030513	PrimaryExpression	1		1029798	1					
ANR	1030514	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ORR | RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) ) )"	1142:2:36119:36197	1029798	1	True				
ANR	1030515	CallExpression	"FAIL_IF ( push_inst ( compiler , ORR | RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) ) )"		1029798	0					
ANR	1030516	Callee	FAIL_IF		1029798	0					
ANR	1030517	Identifier	FAIL_IF		1029798	0					
ANR	1030518	ArgumentList	"push_inst ( compiler , ORR | RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1029798	1					
ANR	1030519	Argument	"push_inst ( compiler , ORR | RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1029798	0					
ANR	1030520	CallExpression	"push_inst ( compiler , ORR | RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1029798	0					
ANR	1030521	Callee	push_inst		1029798	0					
ANR	1030522	Identifier	push_inst		1029798	0					
ANR	1030523	ArgumentList	compiler		1029798	1					
ANR	1030524	Argument	compiler		1029798	0					
ANR	1030525	Identifier	compiler		1029798	0					
ANR	1030526	Argument	ORR | RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1029798	1					
ANR	1030527	InclusiveOrExpression	ORR | RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1029798	0		|			
ANR	1030528	Identifier	ORR		1029798	0					
ANR	1030529	InclusiveOrExpression	RD ( SLJIT_S0 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1029798	1		|			
ANR	1030530	CallExpression	RD ( SLJIT_S0 )		1029798	0					
ANR	1030531	Callee	RD		1029798	0					
ANR	1030532	Identifier	RD		1029798	0					
ANR	1030533	ArgumentList	SLJIT_S0		1029798	1					
ANR	1030534	Argument	SLJIT_S0		1029798	0					
ANR	1030535	Identifier	SLJIT_S0		1029798	0					
ANR	1030536	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1029798	1		|			
ANR	1030537	CallExpression	RN ( TMP_ZERO )		1029798	0					
ANR	1030538	Callee	RN		1029798	0					
ANR	1030539	Identifier	RN		1029798	0					
ANR	1030540	ArgumentList	TMP_ZERO		1029798	1					
ANR	1030541	Argument	TMP_ZERO		1029798	0					
ANR	1030542	Identifier	TMP_ZERO		1029798	0					
ANR	1030543	CallExpression	RM ( SLJIT_R0 )		1029798	1					
ANR	1030544	Callee	RM		1029798	0					
ANR	1030545	Identifier	RM		1029798	0					
ANR	1030546	ArgumentList	SLJIT_R0		1029798	1					
ANR	1030547	Argument	SLJIT_R0		1029798	0					
ANR	1030548	Identifier	SLJIT_R0		1029798	0					
ANR	1030549	IfStatement	if ( args >= 2 )		1029798	16					
ANR	1030550	Condition	args >= 2	1143:5:36204:36212	1029798	0	True				
ANR	1030551	RelationalExpression	args >= 2		1029798	0		>=			
ANR	1030552	Identifier	args		1029798	0					
ANR	1030553	PrimaryExpression	2		1029798	1					
ANR	1030554	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ORR | RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 ) ) )"	1144:2:36217:36295	1029798	1	True				
ANR	1030555	CallExpression	"FAIL_IF ( push_inst ( compiler , ORR | RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 ) ) )"		1029798	0					
ANR	1030556	Callee	FAIL_IF		1029798	0					
ANR	1030557	Identifier	FAIL_IF		1029798	0					
ANR	1030558	ArgumentList	"push_inst ( compiler , ORR | RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 ) )"		1029798	1					
ANR	1030559	Argument	"push_inst ( compiler , ORR | RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 ) )"		1029798	0					
ANR	1030560	CallExpression	"push_inst ( compiler , ORR | RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 ) )"		1029798	0					
ANR	1030561	Callee	push_inst		1029798	0					
ANR	1030562	Identifier	push_inst		1029798	0					
ANR	1030563	ArgumentList	compiler		1029798	1					
ANR	1030564	Argument	compiler		1029798	0					
ANR	1030565	Identifier	compiler		1029798	0					
ANR	1030566	Argument	ORR | RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 )		1029798	1					
ANR	1030567	InclusiveOrExpression	ORR | RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 )		1029798	0		|			
ANR	1030568	Identifier	ORR		1029798	0					
ANR	1030569	InclusiveOrExpression	RD ( SLJIT_S1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R1 )		1029798	1		|			
ANR	1030570	CallExpression	RD ( SLJIT_S1 )		1029798	0					
ANR	1030571	Callee	RD		1029798	0					
ANR	1030572	Identifier	RD		1029798	0					
ANR	1030573	ArgumentList	SLJIT_S1		1029798	1					
ANR	1030574	Argument	SLJIT_S1		1029798	0					
ANR	1030575	Identifier	SLJIT_S1		1029798	0					
ANR	1030576	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( SLJIT_R1 )		1029798	1		|			
ANR	1030577	CallExpression	RN ( TMP_ZERO )		1029798	0					
ANR	1030578	Callee	RN		1029798	0					
ANR	1030579	Identifier	RN		1029798	0					
ANR	1030580	ArgumentList	TMP_ZERO		1029798	1					
ANR	1030581	Argument	TMP_ZERO		1029798	0					
ANR	1030582	Identifier	TMP_ZERO		1029798	0					
ANR	1030583	CallExpression	RM ( SLJIT_R1 )		1029798	1					
ANR	1030584	Callee	RM		1029798	0					
ANR	1030585	Identifier	RM		1029798	0					
ANR	1030586	ArgumentList	SLJIT_R1		1029798	1					
ANR	1030587	Argument	SLJIT_R1		1029798	0					
ANR	1030588	Identifier	SLJIT_R1		1029798	0					
ANR	1030589	IfStatement	if ( args >= 3 )		1029798	17					
ANR	1030590	Condition	args >= 3	1145:5:36302:36310	1029798	0	True				
ANR	1030591	RelationalExpression	args >= 3		1029798	0		>=			
ANR	1030592	Identifier	args		1029798	0					
ANR	1030593	PrimaryExpression	3		1029798	1					
ANR	1030594	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ORR | RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 ) ) )"	1146:2:36315:36393	1029798	1	True				
ANR	1030595	CallExpression	"FAIL_IF ( push_inst ( compiler , ORR | RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 ) ) )"		1029798	0					
ANR	1030596	Callee	FAIL_IF		1029798	0					
ANR	1030597	Identifier	FAIL_IF		1029798	0					
ANR	1030598	ArgumentList	"push_inst ( compiler , ORR | RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 ) )"		1029798	1					
ANR	1030599	Argument	"push_inst ( compiler , ORR | RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 ) )"		1029798	0					
ANR	1030600	CallExpression	"push_inst ( compiler , ORR | RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 ) )"		1029798	0					
ANR	1030601	Callee	push_inst		1029798	0					
ANR	1030602	Identifier	push_inst		1029798	0					
ANR	1030603	ArgumentList	compiler		1029798	1					
ANR	1030604	Argument	compiler		1029798	0					
ANR	1030605	Identifier	compiler		1029798	0					
ANR	1030606	Argument	ORR | RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 )		1029798	1					
ANR	1030607	InclusiveOrExpression	ORR | RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 )		1029798	0		|			
ANR	1030608	Identifier	ORR		1029798	0					
ANR	1030609	InclusiveOrExpression	RD ( SLJIT_S2 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R2 )		1029798	1		|			
ANR	1030610	CallExpression	RD ( SLJIT_S2 )		1029798	0					
ANR	1030611	Callee	RD		1029798	0					
ANR	1030612	Identifier	RD		1029798	0					
ANR	1030613	ArgumentList	SLJIT_S2		1029798	1					
ANR	1030614	Argument	SLJIT_S2		1029798	0					
ANR	1030615	Identifier	SLJIT_S2		1029798	0					
ANR	1030616	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( SLJIT_R2 )		1029798	1		|			
ANR	1030617	CallExpression	RN ( TMP_ZERO )		1029798	0					
ANR	1030618	Callee	RN		1029798	0					
ANR	1030619	Identifier	RN		1029798	0					
ANR	1030620	ArgumentList	TMP_ZERO		1029798	1					
ANR	1030621	Argument	TMP_ZERO		1029798	0					
ANR	1030622	Identifier	TMP_ZERO		1029798	0					
ANR	1030623	CallExpression	RM ( SLJIT_R2 )		1029798	1					
ANR	1030624	Callee	RM		1029798	0					
ANR	1030625	Identifier	RM		1029798	0					
ANR	1030626	ArgumentList	SLJIT_R2		1029798	1					
ANR	1030627	Argument	SLJIT_R2		1029798	0					
ANR	1030628	Identifier	SLJIT_R2		1029798	0					
ANR	1030629	ReturnStatement	return SLJIT_SUCCESS ;	1148:1:36397:36417	1029798	18	True				
ANR	1030630	Identifier	SLJIT_SUCCESS		1029798	0					
ANR	1030631	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1029798	1					
ANR	1030632	Identifier	sljit_emit_enter		1029798	2					
ANR	1030633	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1029798	3					
ANR	1030634	Parameter	struct sljit_compiler * compiler	1063:51:33456:33486	1029798	0	True				
ANR	1030635	ParameterType	struct sljit_compiler *		1029798	0					
ANR	1030636	Identifier	compiler		1029798	1					
ANR	1030637	Parameter	sljit_si options	1064:1:33490:33505	1029798	1	True				
ANR	1030638	ParameterType	sljit_si		1029798	0					
ANR	1030639	Identifier	options		1029798	1					
ANR	1030640	Parameter	sljit_si args	1064:19:33508:33520	1029798	2	True				
ANR	1030641	ParameterType	sljit_si		1029798	0					
ANR	1030642	Identifier	args		1029798	1					
ANR	1030643	Parameter	sljit_si scratches	1064:34:33523:33540	1029798	3	True				
ANR	1030644	ParameterType	sljit_si		1029798	0					
ANR	1030645	Identifier	scratches		1029798	1					
ANR	1030646	Parameter	sljit_si saveds	1064:54:33543:33557	1029798	4	True				
ANR	1030647	ParameterType	sljit_si		1029798	0					
ANR	1030648	Identifier	saveds		1029798	1					
ANR	1030649	Parameter	sljit_si fscratches	1065:1:33561:33579	1029798	5	True				
ANR	1030650	ParameterType	sljit_si		1029798	0					
ANR	1030651	Identifier	fscratches		1029798	1					
ANR	1030652	Parameter	sljit_si fsaveds	1065:22:33582:33597	1029798	6	True				
ANR	1030653	ParameterType	sljit_si		1029798	0					
ANR	1030654	Identifier	fsaveds		1029798	1					
ANR	1030655	Parameter	sljit_si local_size	1065:40:33600:33618	1029798	7	True				
ANR	1030656	ParameterType	sljit_si		1029798	0					
ANR	1030657	Identifier	local_size		1029798	1					
ANR	1030658	CFGEntryNode	ENTRY		1029798		True				
ANR	1030659	CFGExitNode	EXIT		1029798		True				
ANR	1030660	Symbol	RT		1029798						
ANR	1030661	Symbol	STP_PRE		1029798						
ANR	1030662	Symbol	scratches		1029798						
ANR	1030663	Symbol	saveds		1029798						
ANR	1030664	Symbol	prev		1029798						
ANR	1030665	Symbol	check_sljit_emit_enter		1029798						
ANR	1030666	Symbol	* compiler		1029798						
ANR	1030667	Symbol	SLJIT_R1		1029798						
ANR	1030668	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1029798						
ANR	1030669	Symbol	SLJIT_R2		1029798						
ANR	1030670	Symbol	SLJIT_SP		1029798						
ANR	1030671	Symbol	SUBI		1029798						
ANR	1030672	Symbol	STP		1029798						
ANR	1030673	Symbol	ORR		1029798						
ANR	1030674	Symbol	SLJIT_R0		1029798						
ANR	1030675	Symbol	offs		1029798						
ANR	1030676	Symbol	tmp		1029798						
ANR	1030677	Symbol	SLJIT_LOCALS_OFFSET		1029798						
ANR	1030678	Symbol	options		1029798						
ANR	1030679	Symbol	~0xf		1029798						
ANR	1030680	Symbol	compiler		1029798						
ANR	1030681	Symbol	TMP_SP		1029798						
ANR	1030682	Symbol	GET_SAVED_REGISTERS_SIZE		1029798						
ANR	1030683	Symbol	local_size		1029798						
ANR	1030684	Symbol	push_inst		1029798						
ANR	1030685	Symbol	saved_regs_size		1029798						
ANR	1030686	Symbol	i		1029798						
ANR	1030687	Symbol	SLJIT_SUCCESS		1029798						
ANR	1030688	Symbol	SLJIT_S2		1029798						
ANR	1030689	Symbol	SLJIT_S0		1029798						
ANR	1030690	Symbol	SLJIT_S1		1029798						
ANR	1030691	Symbol	args		1029798						
ANR	1030692	Symbol	fscratches		1029798						
ANR	1030693	Symbol	RT2		1029798						
ANR	1030694	Symbol	RD		1029798						
ANR	1030695	Symbol	compiler -> local_size		1029798						
ANR	1030696	Symbol	fsaveds		1029798						
ANR	1030697	Symbol	ADDI		1029798						
ANR	1030698	Symbol	TMP_LR		1029798						
ANR	1030699	Symbol	SLJIT_FIRST_SAVED_REG		1029798						
ANR	1030700	Symbol	TMP_ZERO		1029798						
ANR	1030701	Symbol	RM		1029798						
ANR	1030702	Symbol	RN		1029798						
ANR	1030703	Symbol	STRI		1029798						
ANR	1030704	Function	sljit_set_context	1151:0:36422:37047							
ANR	1030705	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1030704	0					
ANR	1030706	CompoundStatement		1154:0:36639:37047	1030704	0					
ANR	1030707	ExpressionStatement	CHECK_ERROR ( )	1155:1:36642:36655	1030704	0	True				
ANR	1030708	CallExpression	CHECK_ERROR ( )		1030704	0					
ANR	1030709	Callee	CHECK_ERROR		1030704	0					
ANR	1030710	Identifier	CHECK_ERROR		1030704	0					
ANR	1030711	ArgumentList			1030704	1					
ANR	1030712	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1156:1:36658:36765	1030704	1	True				
ANR	1030713	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1030704	0					
ANR	1030714	Callee	CHECK		1030704	0					
ANR	1030715	Identifier	CHECK		1030704	0					
ANR	1030716	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1030704	1					
ANR	1030717	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1030704	0					
ANR	1030718	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1030704	0					
ANR	1030719	Callee	check_sljit_set_context		1030704	0					
ANR	1030720	Identifier	check_sljit_set_context		1030704	0					
ANR	1030721	ArgumentList	compiler		1030704	1					
ANR	1030722	Argument	compiler		1030704	0					
ANR	1030723	Identifier	compiler		1030704	0					
ANR	1030724	Argument	options		1030704	1					
ANR	1030725	Identifier	options		1030704	0					
ANR	1030726	Argument	args		1030704	2					
ANR	1030727	Identifier	args		1030704	0					
ANR	1030728	Argument	scratches		1030704	3					
ANR	1030729	Identifier	scratches		1030704	0					
ANR	1030730	Argument	saveds		1030704	4					
ANR	1030731	Identifier	saveds		1030704	0					
ANR	1030732	Argument	fscratches		1030704	5					
ANR	1030733	Identifier	fscratches		1030704	0					
ANR	1030734	Argument	fsaveds		1030704	6					
ANR	1030735	Identifier	fsaveds		1030704	0					
ANR	1030736	Argument	local_size		1030704	7					
ANR	1030737	Identifier	local_size		1030704	0					
ANR	1030738	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1157:1:36768:36860	1030704	2	True				
ANR	1030739	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1030704	0					
ANR	1030740	Callee	set_set_context		1030704	0					
ANR	1030741	Identifier	set_set_context		1030704	0					
ANR	1030742	ArgumentList	compiler		1030704	1					
ANR	1030743	Argument	compiler		1030704	0					
ANR	1030744	Identifier	compiler		1030704	0					
ANR	1030745	Argument	options		1030704	1					
ANR	1030746	Identifier	options		1030704	0					
ANR	1030747	Argument	args		1030704	2					
ANR	1030748	Identifier	args		1030704	0					
ANR	1030749	Argument	scratches		1030704	3					
ANR	1030750	Identifier	scratches		1030704	0					
ANR	1030751	Argument	saveds		1030704	4					
ANR	1030752	Identifier	saveds		1030704	0					
ANR	1030753	Argument	fscratches		1030704	5					
ANR	1030754	Identifier	fscratches		1030704	0					
ANR	1030755	Argument	fsaveds		1030704	6					
ANR	1030756	Identifier	fsaveds		1030704	0					
ANR	1030757	Argument	local_size		1030704	7					
ANR	1030758	Identifier	local_size		1030704	0					
ANR	1030759	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 0 ) + SLJIT_LOCALS_OFFSET"	1159:1:36864:36946	1030704	3	True				
ANR	1030760	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 0 ) + SLJIT_LOCALS_OFFSET"		1030704	0		+=			
ANR	1030761	Identifier	local_size		1030704	0					
ANR	1030762	AdditiveExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 0 ) + SLJIT_LOCALS_OFFSET"		1030704	1		+			
ANR	1030763	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 0 )"		1030704	0					
ANR	1030764	Callee	GET_SAVED_REGISTERS_SIZE		1030704	0					
ANR	1030765	Identifier	GET_SAVED_REGISTERS_SIZE		1030704	0					
ANR	1030766	ArgumentList	scratches		1030704	1					
ANR	1030767	Argument	scratches		1030704	0					
ANR	1030768	Identifier	scratches		1030704	0					
ANR	1030769	Argument	saveds		1030704	1					
ANR	1030770	Identifier	saveds		1030704	0					
ANR	1030771	Argument	0		1030704	2					
ANR	1030772	PrimaryExpression	0		1030704	0					
ANR	1030773	Identifier	SLJIT_LOCALS_OFFSET		1030704	1					
ANR	1030774	ExpressionStatement	local_size = ( local_size + 15 ) & ~0xf	1160:1:36949:36986	1030704	4	True				
ANR	1030775	AssignmentExpression	local_size = ( local_size + 15 ) & ~0xf		1030704	0		=			
ANR	1030776	Identifier	local_size		1030704	0					
ANR	1030777	BitAndExpression	( local_size + 15 ) & ~0xf		1030704	1		&			
ANR	1030778	AdditiveExpression	local_size + 15		1030704	0		+			
ANR	1030779	Identifier	local_size		1030704	0					
ANR	1030780	PrimaryExpression	15		1030704	1					
ANR	1030781	Identifier	~0xf		1030704	1					
ANR	1030782	ExpressionStatement	compiler -> local_size = local_size	1161:1:36989:37022	1030704	5	True				
ANR	1030783	AssignmentExpression	compiler -> local_size = local_size		1030704	0		=			
ANR	1030784	PtrMemberAccess	compiler -> local_size		1030704	0					
ANR	1030785	Identifier	compiler		1030704	0					
ANR	1030786	Identifier	local_size		1030704	1					
ANR	1030787	Identifier	local_size		1030704	1					
ANR	1030788	ReturnStatement	return SLJIT_SUCCESS ;	1162:1:37025:37045	1030704	6	True				
ANR	1030789	Identifier	SLJIT_SUCCESS		1030704	0					
ANR	1030790	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1030704	1					
ANR	1030791	Identifier	sljit_set_context		1030704	2					
ANR	1030792	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1030704	3					
ANR	1030793	Parameter	struct sljit_compiler * compiler	1151:52:36474:36504	1030704	0	True				
ANR	1030794	ParameterType	struct sljit_compiler *		1030704	0					
ANR	1030795	Identifier	compiler		1030704	1					
ANR	1030796	Parameter	sljit_si options	1152:1:36508:36523	1030704	1	True				
ANR	1030797	ParameterType	sljit_si		1030704	0					
ANR	1030798	Identifier	options		1030704	1					
ANR	1030799	Parameter	sljit_si args	1152:19:36526:36538	1030704	2	True				
ANR	1030800	ParameterType	sljit_si		1030704	0					
ANR	1030801	Identifier	args		1030704	1					
ANR	1030802	Parameter	sljit_si scratches	1152:34:36541:36558	1030704	3	True				
ANR	1030803	ParameterType	sljit_si		1030704	0					
ANR	1030804	Identifier	scratches		1030704	1					
ANR	1030805	Parameter	sljit_si saveds	1152:54:36561:36575	1030704	4	True				
ANR	1030806	ParameterType	sljit_si		1030704	0					
ANR	1030807	Identifier	saveds		1030704	1					
ANR	1030808	Parameter	sljit_si fscratches	1153:1:36579:36597	1030704	5	True				
ANR	1030809	ParameterType	sljit_si		1030704	0					
ANR	1030810	Identifier	fscratches		1030704	1					
ANR	1030811	Parameter	sljit_si fsaveds	1153:22:36600:36615	1030704	6	True				
ANR	1030812	ParameterType	sljit_si		1030704	0					
ANR	1030813	Identifier	fsaveds		1030704	1					
ANR	1030814	Parameter	sljit_si local_size	1153:40:36618:36636	1030704	7	True				
ANR	1030815	ParameterType	sljit_si		1030704	0					
ANR	1030816	Identifier	local_size		1030704	1					
ANR	1030817	CFGEntryNode	ENTRY		1030704		True				
ANR	1030818	CFGExitNode	EXIT		1030704		True				
ANR	1030819	Symbol	GET_SAVED_REGISTERS_SIZE		1030704						
ANR	1030820	Symbol	local_size		1030704						
ANR	1030821	Symbol	scratches		1030704						
ANR	1030822	Symbol	saveds		1030704						
ANR	1030823	Symbol	check_sljit_set_context		1030704						
ANR	1030824	Symbol	SLJIT_SUCCESS		1030704						
ANR	1030825	Symbol	* compiler		1030704						
ANR	1030826	Symbol	args		1030704						
ANR	1030827	Symbol	fscratches		1030704						
ANR	1030828	Symbol	compiler -> local_size		1030704						
ANR	1030829	Symbol	fsaveds		1030704						
ANR	1030830	Symbol	SLJIT_LOCALS_OFFSET		1030704						
ANR	1030831	Symbol	options		1030704						
ANR	1030832	Symbol	~0xf		1030704						
ANR	1030833	Symbol	compiler		1030704						
ANR	1030834	Function	sljit_emit_return	1165:0:37050:39401							
ANR	1030835	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1030834	0					
ANR	1030836	CompoundStatement		1166:0:37177:39401	1030834	0					
ANR	1030837	IdentifierDeclStatement	sljit_si local_size ;	1167:1:37180:37199	1030834	0	True				
ANR	1030838	IdentifierDecl	local_size		1030834	0					
ANR	1030839	IdentifierDeclType	sljit_si		1030834	0					
ANR	1030840	Identifier	local_size		1030834	1					
ANR	1030841	IdentifierDeclStatement	"sljit_si i , tmp , offs , prev , saved_regs_size ;"	1168:1:37202:37246	1030834	1	True				
ANR	1030842	IdentifierDecl	i		1030834	0					
ANR	1030843	IdentifierDeclType	sljit_si		1030834	0					
ANR	1030844	Identifier	i		1030834	1					
ANR	1030845	IdentifierDecl	tmp		1030834	1					
ANR	1030846	IdentifierDeclType	sljit_si		1030834	0					
ANR	1030847	Identifier	tmp		1030834	1					
ANR	1030848	IdentifierDecl	offs		1030834	2					
ANR	1030849	IdentifierDeclType	sljit_si		1030834	0					
ANR	1030850	Identifier	offs		1030834	1					
ANR	1030851	IdentifierDecl	prev		1030834	3					
ANR	1030852	IdentifierDeclType	sljit_si		1030834	0					
ANR	1030853	Identifier	prev		1030834	1					
ANR	1030854	IdentifierDecl	saved_regs_size		1030834	4					
ANR	1030855	IdentifierDeclType	sljit_si		1030834	0					
ANR	1030856	Identifier	saved_regs_size		1030834	1					
ANR	1030857	ExpressionStatement	CHECK_ERROR ( )	1170:1:37250:37263	1030834	2	True				
ANR	1030858	CallExpression	CHECK_ERROR ( )		1030834	0					
ANR	1030859	Callee	CHECK_ERROR		1030834	0					
ANR	1030860	Identifier	CHECK_ERROR		1030834	0					
ANR	1030861	ArgumentList			1030834	1					
ANR	1030862	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	1171:1:37266:37321	1030834	3	True				
ANR	1030863	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1030834	0					
ANR	1030864	Callee	CHECK		1030834	0					
ANR	1030865	Identifier	CHECK		1030834	0					
ANR	1030866	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1030834	1					
ANR	1030867	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1030834	0					
ANR	1030868	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1030834	0					
ANR	1030869	Callee	check_sljit_emit_return		1030834	0					
ANR	1030870	Identifier	check_sljit_emit_return		1030834	0					
ANR	1030871	ArgumentList	compiler		1030834	1					
ANR	1030872	Argument	compiler		1030834	0					
ANR	1030873	Identifier	compiler		1030834	0					
ANR	1030874	Argument	op		1030834	1					
ANR	1030875	Identifier	op		1030834	0					
ANR	1030876	Argument	src		1030834	2					
ANR	1030877	Identifier	src		1030834	0					
ANR	1030878	Argument	srcw		1030834	3					
ANR	1030879	Identifier	srcw		1030834	0					
ANR	1030880	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	1173:1:37325:37381	1030834	4	True				
ANR	1030881	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1030834	0					
ANR	1030882	Callee	FAIL_IF		1030834	0					
ANR	1030883	Identifier	FAIL_IF		1030834	0					
ANR	1030884	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1030834	1					
ANR	1030885	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1030834	0					
ANR	1030886	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1030834	0					
ANR	1030887	Callee	emit_mov_before_return		1030834	0					
ANR	1030888	Identifier	emit_mov_before_return		1030834	0					
ANR	1030889	ArgumentList	compiler		1030834	1					
ANR	1030890	Argument	compiler		1030834	0					
ANR	1030891	Identifier	compiler		1030834	0					
ANR	1030892	Argument	op		1030834	1					
ANR	1030893	Identifier	op		1030834	0					
ANR	1030894	Argument	src		1030834	2					
ANR	1030895	Identifier	src		1030834	0					
ANR	1030896	Argument	srcw		1030834	3					
ANR	1030897	Identifier	srcw		1030834	0					
ANR	1030898	ExpressionStatement	local_size = compiler -> local_size	1175:1:37385:37418	1030834	5	True				
ANR	1030899	AssignmentExpression	local_size = compiler -> local_size		1030834	0		=			
ANR	1030900	Identifier	local_size		1030834	0					
ANR	1030901	PtrMemberAccess	compiler -> local_size		1030834	1					
ANR	1030902	Identifier	compiler		1030834	0					
ANR	1030903	Identifier	local_size		1030834	1					
ANR	1030904	ExpressionStatement	"saved_regs_size = GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 0 )"	1177:1:37422:37506	1030834	6	True				
ANR	1030905	AssignmentExpression	"saved_regs_size = GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 0 )"		1030834	0		=			
ANR	1030906	Identifier	saved_regs_size		1030834	0					
ANR	1030907	CallExpression	"GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 0 )"		1030834	1					
ANR	1030908	Callee	GET_SAVED_REGISTERS_SIZE		1030834	0					
ANR	1030909	Identifier	GET_SAVED_REGISTERS_SIZE		1030834	0					
ANR	1030910	ArgumentList	compiler -> scratches		1030834	1					
ANR	1030911	Argument	compiler -> scratches		1030834	0					
ANR	1030912	PtrMemberAccess	compiler -> scratches		1030834	0					
ANR	1030913	Identifier	compiler		1030834	0					
ANR	1030914	Identifier	scratches		1030834	1					
ANR	1030915	Argument	compiler -> saveds		1030834	1					
ANR	1030916	PtrMemberAccess	compiler -> saveds		1030834	0					
ANR	1030917	Identifier	compiler		1030834	0					
ANR	1030918	Identifier	saveds		1030834	1					
ANR	1030919	Argument	0		1030834	2					
ANR	1030920	PrimaryExpression	0		1030834	0					
ANR	1030921	IfStatement	if ( local_size <= ( 63 * sizeof ( sljit_sw ) ) )		1030834	7					
ANR	1030922	Condition	local_size <= ( 63 * sizeof ( sljit_sw ) )	1178:5:37513:37549	1030834	0	True				
ANR	1030923	RelationalExpression	local_size <= ( 63 * sizeof ( sljit_sw ) )		1030834	0		<=			
ANR	1030924	Identifier	local_size		1030834	0					
ANR	1030925	MultiplicativeExpression	63 * sizeof ( sljit_sw )		1030834	1		*			
ANR	1030926	PrimaryExpression	63		1030834	0					
ANR	1030927	SizeofExpression	sizeof ( sljit_sw )		1030834	1					
ANR	1030928	Sizeof	sizeof		1030834	0					
ANR	1030929	SizeofOperand	sljit_sw		1030834	1					
ANR	1030930	ExpressionStatement	offs = ( local_size - saved_regs_size ) << ( 15 - 3 )	1179:2:37554:37603	1030834	1	True				
ANR	1030931	AssignmentExpression	offs = ( local_size - saved_regs_size ) << ( 15 - 3 )		1030834	0		=			
ANR	1030932	Identifier	offs		1030834	0					
ANR	1030933	ShiftExpression	( local_size - saved_regs_size ) << ( 15 - 3 )		1030834	1		<<			
ANR	1030934	AdditiveExpression	local_size - saved_regs_size		1030834	0		-			
ANR	1030935	Identifier	local_size		1030834	0					
ANR	1030936	Identifier	saved_regs_size		1030834	1					
ANR	1030937	AdditiveExpression	15 - 3		1030834	1		-			
ANR	1030938	PrimaryExpression	15		1030834	0					
ANR	1030939	PrimaryExpression	3		1030834	1					
ANR	1030940	ElseStatement	else		1030834	0					
ANR	1030941	CompoundStatement		15:6:433:433	1030834	0					
ANR	1030942	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 ) ) )"	1181:2:37615:37716	1030834	0	True				
ANR	1030943	CallExpression	"FAIL_IF ( push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 ) ) )"		1030834	0					
ANR	1030944	Callee	FAIL_IF		1030834	0					
ANR	1030945	Identifier	FAIL_IF		1030834	0					
ANR	1030946	ArgumentList	"push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 ) )"		1030834	1					
ANR	1030947	Argument	"push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 ) )"		1030834	0					
ANR	1030948	CallExpression	"push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 ) )"		1030834	0					
ANR	1030949	Callee	push_inst		1030834	0					
ANR	1030950	Identifier	push_inst		1030834	0					
ANR	1030951	ArgumentList	compiler		1030834	1					
ANR	1030952	Argument	compiler		1030834	0					
ANR	1030953	Identifier	compiler		1030834	0					
ANR	1030954	Argument	LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 )		1030834	1					
ANR	1030955	InclusiveOrExpression	LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 )		1030834	0		|			
ANR	1030956	Identifier	LDP_PST		1030834	0					
ANR	1030957	InclusiveOrExpression	29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 )		1030834	1		|			
ANR	1030958	PrimaryExpression	29		1030834	0					
ANR	1030959	InclusiveOrExpression	RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 )		1030834	1		|			
ANR	1030960	CallExpression	RT2 ( TMP_LR )		1030834	0					
ANR	1030961	Callee	RT2		1030834	0					
ANR	1030962	Identifier	RT2		1030834	0					
ANR	1030963	ArgumentList	TMP_LR		1030834	1					
ANR	1030964	Argument	TMP_LR		1030834	0					
ANR	1030965	Identifier	TMP_LR		1030834	0					
ANR	1030966	InclusiveOrExpression	RN ( TMP_SP ) | ( ( ( 16 >> 3 ) & 0x7f ) << 15 )		1030834	1		|			
ANR	1030967	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1030968	Callee	RN		1030834	0					
ANR	1030969	Identifier	RN		1030834	0					
ANR	1030970	ArgumentList	TMP_SP		1030834	1					
ANR	1030971	Argument	TMP_SP		1030834	0					
ANR	1030972	Identifier	TMP_SP		1030834	0					
ANR	1030973	ShiftExpression	( ( 16 >> 3 ) & 0x7f ) << 15		1030834	1		<<			
ANR	1030974	BitAndExpression	( 16 >> 3 ) & 0x7f		1030834	0		&			
ANR	1030975	ShiftExpression	16 >> 3		1030834	0		>>			
ANR	1030976	PrimaryExpression	16		1030834	0					
ANR	1030977	PrimaryExpression	3		1030834	1					
ANR	1030978	PrimaryExpression	0x7f		1030834	1					
ANR	1030979	PrimaryExpression	15		1030834	1					
ANR	1030980	ExpressionStatement	offs = 0 << 15	1183:2:37720:37734	1030834	1	True				
ANR	1030981	AssignmentExpression	offs = 0 << 15		1030834	0		=			
ANR	1030982	Identifier	offs		1030834	0					
ANR	1030983	ShiftExpression	0 << 15		1030834	1		<<			
ANR	1030984	PrimaryExpression	0		1030834	0					
ANR	1030985	PrimaryExpression	15		1030834	1					
ANR	1030986	IfStatement	if ( saved_regs_size & 0x8 )		1030834	2					
ANR	1030987	Condition	saved_regs_size & 0x8	1184:6:37742:37762	1030834	0	True				
ANR	1030988	BitAndExpression	saved_regs_size & 0x8		1030834	0		&			
ANR	1030989	Identifier	saved_regs_size		1030834	0					
ANR	1030990	PrimaryExpression	0x8		1030834	1					
ANR	1030991	CompoundStatement		19:29:587:587	1030834	1					
ANR	1030992	ExpressionStatement	offs = 1 << 15	1185:3:37770:37784	1030834	0	True				
ANR	1030993	AssignmentExpression	offs = 1 << 15		1030834	0		=			
ANR	1030994	Identifier	offs		1030834	0					
ANR	1030995	ShiftExpression	1 << 15		1030834	1		<<			
ANR	1030996	PrimaryExpression	1		1030834	0					
ANR	1030997	PrimaryExpression	15		1030834	1					
ANR	1030998	ExpressionStatement	saved_regs_size += sizeof ( sljit_sw )	1186:3:37789:37824	1030834	1	True				
ANR	1030999	AssignmentExpression	saved_regs_size += sizeof ( sljit_sw )		1030834	0		+=			
ANR	1031000	Identifier	saved_regs_size		1030834	0					
ANR	1031001	SizeofExpression	sizeof ( sljit_sw )		1030834	1					
ANR	1031002	Sizeof	sizeof		1030834	0					
ANR	1031003	SizeofOperand	sljit_sw		1030834	1					
ANR	1031004	ExpressionStatement	local_size -= saved_regs_size + SLJIT_LOCALS_OFFSET	1188:2:37832:37883	1030834	3	True				
ANR	1031005	AssignmentExpression	local_size -= saved_regs_size + SLJIT_LOCALS_OFFSET		1030834	0		-=			
ANR	1031006	Identifier	local_size		1030834	0					
ANR	1031007	AdditiveExpression	saved_regs_size + SLJIT_LOCALS_OFFSET		1030834	1		+			
ANR	1031008	Identifier	saved_regs_size		1030834	0					
ANR	1031009	Identifier	SLJIT_LOCALS_OFFSET		1030834	1					
ANR	1031010	IfStatement	if ( local_size > 0xfff )		1030834	4					
ANR	1031011	Condition	local_size > 0xfff	1189:6:37891:37908	1030834	0	True				
ANR	1031012	RelationalExpression	local_size > 0xfff		1030834	0		>			
ANR	1031013	Identifier	local_size		1030834	0					
ANR	1031014	PrimaryExpression	0xfff		1030834	1					
ANR	1031015	CompoundStatement		24:26:733:733	1030834	1					
ANR	1031016	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) ) )"	1190:3:37916:38017	1030834	0	True				
ANR	1031017	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) ) )"		1030834	0					
ANR	1031018	Callee	FAIL_IF		1030834	0					
ANR	1031019	Identifier	FAIL_IF		1030834	0					
ANR	1031020	ArgumentList	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) )"		1030834	1					
ANR	1031021	Argument	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) )"		1030834	0					
ANR	1031022	CallExpression	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 ) )"		1030834	0					
ANR	1031023	Callee	push_inst		1030834	0					
ANR	1031024	Identifier	push_inst		1030834	0					
ANR	1031025	ArgumentList	compiler		1030834	1					
ANR	1031026	Argument	compiler		1030834	0					
ANR	1031027	Identifier	compiler		1030834	0					
ANR	1031028	Argument	ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1030834	1					
ANR	1031029	InclusiveOrExpression	ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1030834	0		|			
ANR	1031030	Identifier	ADDI		1030834	0					
ANR	1031031	InclusiveOrExpression	RD ( TMP_SP ) | RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1030834	1		|			
ANR	1031032	CallExpression	RD ( TMP_SP )		1030834	0					
ANR	1031033	Callee	RD		1030834	0					
ANR	1031034	Identifier	RD		1030834	0					
ANR	1031035	ArgumentList	TMP_SP		1030834	1					
ANR	1031036	Argument	TMP_SP		1030834	0					
ANR	1031037	Identifier	TMP_SP		1030834	0					
ANR	1031038	InclusiveOrExpression	RN ( TMP_SP ) | ( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1030834	1		|			
ANR	1031039	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031040	Callee	RN		1030834	0					
ANR	1031041	Identifier	RN		1030834	0					
ANR	1031042	ArgumentList	TMP_SP		1030834	1					
ANR	1031043	Argument	TMP_SP		1030834	0					
ANR	1031044	Identifier	TMP_SP		1030834	0					
ANR	1031045	InclusiveOrExpression	( ( local_size >> 12 ) << 10 ) | ( 1 << 22 )		1030834	1		|			
ANR	1031046	ShiftExpression	( local_size >> 12 ) << 10		1030834	0		<<			
ANR	1031047	ShiftExpression	local_size >> 12		1030834	0		>>			
ANR	1031048	Identifier	local_size		1030834	0					
ANR	1031049	PrimaryExpression	12		1030834	1					
ANR	1031050	PrimaryExpression	10		1030834	1					
ANR	1031051	ShiftExpression	1 << 22		1030834	1		<<			
ANR	1031052	PrimaryExpression	1		1030834	0					
ANR	1031053	PrimaryExpression	22		1030834	1					
ANR	1031054	ExpressionStatement	local_size &= 0xfff	1191:3:38022:38041	1030834	1	True				
ANR	1031055	AssignmentExpression	local_size &= 0xfff		1030834	0		&=			
ANR	1031056	Identifier	local_size		1030834	0					
ANR	1031057	PrimaryExpression	0xfff		1030834	1					
ANR	1031058	IfStatement	if ( local_size )		1030834	5					
ANR	1031059	Condition	local_size	1193:6:38053:38062	1030834	0	True				
ANR	1031060	Identifier	local_size		1030834	0					
ANR	1031061	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) ) )"	1194:3:38068:38149	1030834	1	True				
ANR	1031062	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) ) )"		1030834	0					
ANR	1031063	Callee	FAIL_IF		1030834	0					
ANR	1031064	Identifier	FAIL_IF		1030834	0					
ANR	1031065	ArgumentList	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) )"		1030834	1					
ANR	1031066	Argument	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) )"		1030834	0					
ANR	1031067	CallExpression	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 ) )"		1030834	0					
ANR	1031068	Callee	push_inst		1030834	0					
ANR	1031069	Identifier	push_inst		1030834	0					
ANR	1031070	ArgumentList	compiler		1030834	1					
ANR	1031071	Argument	compiler		1030834	0					
ANR	1031072	Identifier	compiler		1030834	0					
ANR	1031073	Argument	ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 )		1030834	1					
ANR	1031074	InclusiveOrExpression	ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 )		1030834	0		|			
ANR	1031075	Identifier	ADDI		1030834	0					
ANR	1031076	InclusiveOrExpression	RD ( TMP_SP ) | RN ( TMP_SP ) | ( local_size << 10 )		1030834	1		|			
ANR	1031077	CallExpression	RD ( TMP_SP )		1030834	0					
ANR	1031078	Callee	RD		1030834	0					
ANR	1031079	Identifier	RD		1030834	0					
ANR	1031080	ArgumentList	TMP_SP		1030834	1					
ANR	1031081	Argument	TMP_SP		1030834	0					
ANR	1031082	Identifier	TMP_SP		1030834	0					
ANR	1031083	InclusiveOrExpression	RN ( TMP_SP ) | ( local_size << 10 )		1030834	1		|			
ANR	1031084	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031085	Callee	RN		1030834	0					
ANR	1031086	Identifier	RN		1030834	0					
ANR	1031087	ArgumentList	TMP_SP		1030834	1					
ANR	1031088	Argument	TMP_SP		1030834	0					
ANR	1031089	Identifier	TMP_SP		1030834	0					
ANR	1031090	ShiftExpression	local_size << 10		1030834	1		<<			
ANR	1031091	Identifier	local_size		1030834	0					
ANR	1031092	PrimaryExpression	10		1030834	1					
ANR	1031093	ExpressionStatement	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG	1197:1:38156:38272	1030834	8	True				
ANR	1031094	AssignmentExpression	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1030834	0		=			
ANR	1031095	Identifier	tmp		1030834	0					
ANR	1031096	ConditionalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1030834	1					
ANR	1031097	Condition	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1030834	0					
ANR	1031098	RelationalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1030834	0		<			
ANR	1031099	PtrMemberAccess	compiler -> saveds		1030834	0					
ANR	1031100	Identifier	compiler		1030834	0					
ANR	1031101	Identifier	saveds		1030834	1					
ANR	1031102	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1030834	1					
ANR	1031103	AdditiveExpression	SLJIT_S0 + 1 - compiler -> saveds		1030834	1		+			
ANR	1031104	Identifier	SLJIT_S0		1030834	0					
ANR	1031105	AdditiveExpression	1 - compiler -> saveds		1030834	1		-			
ANR	1031106	PrimaryExpression	1		1030834	0					
ANR	1031107	PtrMemberAccess	compiler -> saveds		1030834	1					
ANR	1031108	Identifier	compiler		1030834	0					
ANR	1031109	Identifier	saveds		1030834	1					
ANR	1031110	Identifier	SLJIT_FIRST_SAVED_REG		1030834	2					
ANR	1031111	ExpressionStatement	prev = - 1	1198:1:38275:38284	1030834	9	True				
ANR	1031112	AssignmentExpression	prev = - 1		1030834	0		=			
ANR	1031113	Identifier	prev		1030834	0					
ANR	1031114	UnaryOperationExpression	- 1		1030834	1					
ANR	1031115	UnaryOperator	-		1030834	0					
ANR	1031116	PrimaryExpression	1		1030834	1					
ANR	1031117	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1030834	10					
ANR	1031118	ForInit	i = SLJIT_S0 ;	1199:6:38292:38304	1030834	0	True				
ANR	1031119	AssignmentExpression	i = SLJIT_S0		1030834	0		=			
ANR	1031120	Identifier	i		1030834	0					
ANR	1031121	Identifier	SLJIT_S0		1030834	1					
ANR	1031122	Condition	i >= tmp	1199:20:38306:38313	1030834	1	True				
ANR	1031123	RelationalExpression	i >= tmp		1030834	0		>=			
ANR	1031124	Identifier	i		1030834	0					
ANR	1031125	Identifier	tmp		1030834	1					
ANR	1031126	PostIncDecOperationExpression	i --	1199:30:38316:38318	1030834	2	True				
ANR	1031127	Identifier	i		1030834	0					
ANR	1031128	IncDec	--		1030834	1					
ANR	1031129	CompoundStatement		34:35:1143:1143	1030834	3					
ANR	1031130	IfStatement	if ( prev == - 1 )		1030834	0					
ANR	1031131	Condition	prev == - 1	1200:6:38329:38338	1030834	0	True				
ANR	1031132	EqualityExpression	prev == - 1		1030834	0		==			
ANR	1031133	Identifier	prev		1030834	0					
ANR	1031134	UnaryOperationExpression	- 1		1030834	1					
ANR	1031135	UnaryOperator	-		1030834	0					
ANR	1031136	PrimaryExpression	1		1030834	1					
ANR	1031137	CompoundStatement		35:18:1163:1163	1030834	1					
ANR	1031138	IfStatement	if ( ! ( offs & ( 1 << 15 ) ) )		1030834	0					
ANR	1031139	Condition	! ( offs & ( 1 << 15 ) )	1201:7:38350:38368	1030834	0	True				
ANR	1031140	UnaryOperationExpression	! ( offs & ( 1 << 15 ) )		1030834	0					
ANR	1031141	UnaryOperator	!		1030834	0					
ANR	1031142	BitAndExpression	offs & ( 1 << 15 )		1030834	1		&			
ANR	1031143	Identifier	offs		1030834	0					
ANR	1031144	ShiftExpression	1 << 15		1030834	1		<<			
ANR	1031145	PrimaryExpression	1		1030834	0					
ANR	1031146	PrimaryExpression	15		1030834	1					
ANR	1031147	CompoundStatement		36:28:1193:1193	1030834	1					
ANR	1031148	ExpressionStatement	prev = i	1202:4:38377:38385	1030834	0	True				
ANR	1031149	AssignmentExpression	prev = i		1030834	0		=			
ANR	1031150	Identifier	prev		1030834	0					
ANR	1031151	Identifier	i		1030834	1					
ANR	1031152	ContinueStatement	continue ;	1203:4:38391:38399	1030834	1	True				
ANR	1031153	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"	1205:3:38409:38478	1030834	1	True				
ANR	1031154	CallExpression	"FAIL_IF ( push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"		1030834	0					
ANR	1031155	Callee	FAIL_IF		1030834	0					
ANR	1031156	Identifier	FAIL_IF		1030834	0					
ANR	1031157	ArgumentList	"push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1030834	1					
ANR	1031158	Argument	"push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1030834	0					
ANR	1031159	CallExpression	"push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1030834	0					
ANR	1031160	Callee	push_inst		1030834	0					
ANR	1031161	Identifier	push_inst		1030834	0					
ANR	1031162	ArgumentList	compiler		1030834	1					
ANR	1031163	Argument	compiler		1030834	0					
ANR	1031164	Identifier	compiler		1030834	0					
ANR	1031165	Argument	LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1030834	1					
ANR	1031166	InclusiveOrExpression	LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1030834	0		|			
ANR	1031167	Identifier	LDRI		1030834	0					
ANR	1031168	InclusiveOrExpression	RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1030834	1		|			
ANR	1031169	CallExpression	RT ( i )		1030834	0					
ANR	1031170	Callee	RT		1030834	0					
ANR	1031171	Identifier	RT		1030834	0					
ANR	1031172	ArgumentList	i		1030834	1					
ANR	1031173	Argument	i		1030834	0					
ANR	1031174	Identifier	i		1030834	0					
ANR	1031175	InclusiveOrExpression	RN ( TMP_SP ) | ( offs >> 5 )		1030834	1		|			
ANR	1031176	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031177	Callee	RN		1030834	0					
ANR	1031178	Identifier	RN		1030834	0					
ANR	1031179	ArgumentList	TMP_SP		1030834	1					
ANR	1031180	Argument	TMP_SP		1030834	0					
ANR	1031181	Identifier	TMP_SP		1030834	0					
ANR	1031182	ShiftExpression	offs >> 5		1030834	1		>>			
ANR	1031183	Identifier	offs		1030834	0					
ANR	1031184	PrimaryExpression	5		1030834	1					
ANR	1031185	ExpressionStatement	offs += 1 << 15	1206:3:38483:38498	1030834	2	True				
ANR	1031186	AssignmentExpression	offs += 1 << 15		1030834	0		+=			
ANR	1031187	Identifier	offs		1030834	0					
ANR	1031188	ShiftExpression	1 << 15		1030834	1		<<			
ANR	1031189	PrimaryExpression	1		1030834	0					
ANR	1031190	PrimaryExpression	15		1030834	1					
ANR	1031191	ContinueStatement	continue ;	1207:3:38503:38511	1030834	3	True				
ANR	1031192	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"	1209:2:38519:38592	1030834	1	True				
ANR	1031193	CallExpression	"FAIL_IF ( push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"		1030834	0					
ANR	1031194	Callee	FAIL_IF		1030834	0					
ANR	1031195	Identifier	FAIL_IF		1030834	0					
ANR	1031196	ArgumentList	"push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1030834	1					
ANR	1031197	Argument	"push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1030834	0					
ANR	1031198	CallExpression	"push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1030834	0					
ANR	1031199	Callee	push_inst		1030834	0					
ANR	1031200	Identifier	push_inst		1030834	0					
ANR	1031201	ArgumentList	compiler		1030834	1					
ANR	1031202	Argument	compiler		1030834	0					
ANR	1031203	Identifier	compiler		1030834	0					
ANR	1031204	Argument	LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	1					
ANR	1031205	InclusiveOrExpression	LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	0		|			
ANR	1031206	Identifier	LDP		1030834	0					
ANR	1031207	InclusiveOrExpression	RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	1		|			
ANR	1031208	CallExpression	RT ( prev )		1030834	0					
ANR	1031209	Callee	RT		1030834	0					
ANR	1031210	Identifier	RT		1030834	0					
ANR	1031211	ArgumentList	prev		1030834	1					
ANR	1031212	Argument	prev		1030834	0					
ANR	1031213	Identifier	prev		1030834	0					
ANR	1031214	InclusiveOrExpression	RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	1		|			
ANR	1031215	CallExpression	RT2 ( i )		1030834	0					
ANR	1031216	Callee	RT2		1030834	0					
ANR	1031217	Identifier	RT2		1030834	0					
ANR	1031218	ArgumentList	i		1030834	1					
ANR	1031219	Argument	i		1030834	0					
ANR	1031220	Identifier	i		1030834	0					
ANR	1031221	InclusiveOrExpression	RN ( TMP_SP ) | offs		1030834	1		|			
ANR	1031222	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031223	Callee	RN		1030834	0					
ANR	1031224	Identifier	RN		1030834	0					
ANR	1031225	ArgumentList	TMP_SP		1030834	1					
ANR	1031226	Argument	TMP_SP		1030834	0					
ANR	1031227	Identifier	TMP_SP		1030834	0					
ANR	1031228	Identifier	offs		1030834	1					
ANR	1031229	ExpressionStatement	offs += 2 << 15	1210:2:38596:38611	1030834	2	True				
ANR	1031230	AssignmentExpression	offs += 2 << 15		1030834	0		+=			
ANR	1031231	Identifier	offs		1030834	0					
ANR	1031232	ShiftExpression	2 << 15		1030834	1		<<			
ANR	1031233	PrimaryExpression	2		1030834	0					
ANR	1031234	PrimaryExpression	15		1030834	1					
ANR	1031235	ExpressionStatement	prev = - 1	1211:2:38615:38624	1030834	3	True				
ANR	1031236	AssignmentExpression	prev = - 1		1030834	0		=			
ANR	1031237	Identifier	prev		1030834	0					
ANR	1031238	UnaryOperationExpression	- 1		1030834	1					
ANR	1031239	UnaryOperator	-		1030834	0					
ANR	1031240	PrimaryExpression	1		1030834	1					
ANR	1031241	ForStatement	for ( i = compiler -> scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1030834	11					
ANR	1031242	ForInit	i = compiler -> scratches ;	1214:6:38636:38659	1030834	0	True				
ANR	1031243	AssignmentExpression	i = compiler -> scratches		1030834	0		=			
ANR	1031244	Identifier	i		1030834	0					
ANR	1031245	PtrMemberAccess	compiler -> scratches		1030834	1					
ANR	1031246	Identifier	compiler		1030834	0					
ANR	1031247	Identifier	scratches		1030834	1					
ANR	1031248	Condition	i >= SLJIT_FIRST_SAVED_REG	1214:31:38661:38686	1030834	1	True				
ANR	1031249	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1030834	0		>=			
ANR	1031250	Identifier	i		1030834	0					
ANR	1031251	Identifier	SLJIT_FIRST_SAVED_REG		1030834	1					
ANR	1031252	PostIncDecOperationExpression	i --	1214:59:38689:38691	1030834	2	True				
ANR	1031253	Identifier	i		1030834	0					
ANR	1031254	IncDec	--		1030834	1					
ANR	1031255	CompoundStatement		49:64:1516:1516	1030834	3					
ANR	1031256	IfStatement	if ( prev == - 1 )		1030834	0					
ANR	1031257	Condition	prev == - 1	1215:6:38702:38711	1030834	0	True				
ANR	1031258	EqualityExpression	prev == - 1		1030834	0		==			
ANR	1031259	Identifier	prev		1030834	0					
ANR	1031260	UnaryOperationExpression	- 1		1030834	1					
ANR	1031261	UnaryOperator	-		1030834	0					
ANR	1031262	PrimaryExpression	1		1030834	1					
ANR	1031263	CompoundStatement		50:18:1536:1536	1030834	1					
ANR	1031264	IfStatement	if ( ! ( offs & ( 1 << 15 ) ) )		1030834	0					
ANR	1031265	Condition	! ( offs & ( 1 << 15 ) )	1216:7:38723:38741	1030834	0	True				
ANR	1031266	UnaryOperationExpression	! ( offs & ( 1 << 15 ) )		1030834	0					
ANR	1031267	UnaryOperator	!		1030834	0					
ANR	1031268	BitAndExpression	offs & ( 1 << 15 )		1030834	1		&			
ANR	1031269	Identifier	offs		1030834	0					
ANR	1031270	ShiftExpression	1 << 15		1030834	1		<<			
ANR	1031271	PrimaryExpression	1		1030834	0					
ANR	1031272	PrimaryExpression	15		1030834	1					
ANR	1031273	CompoundStatement		51:28:1566:1566	1030834	1					
ANR	1031274	ExpressionStatement	prev = i	1217:4:38750:38758	1030834	0	True				
ANR	1031275	AssignmentExpression	prev = i		1030834	0		=			
ANR	1031276	Identifier	prev		1030834	0					
ANR	1031277	Identifier	i		1030834	1					
ANR	1031278	ContinueStatement	continue ;	1218:4:38764:38772	1030834	1	True				
ANR	1031279	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"	1220:3:38782:38851	1030834	1	True				
ANR	1031280	CallExpression	"FAIL_IF ( push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) ) )"		1030834	0					
ANR	1031281	Callee	FAIL_IF		1030834	0					
ANR	1031282	Identifier	FAIL_IF		1030834	0					
ANR	1031283	ArgumentList	"push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1030834	1					
ANR	1031284	Argument	"push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1030834	0					
ANR	1031285	CallExpression	"push_inst ( compiler , LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 ) )"		1030834	0					
ANR	1031286	Callee	push_inst		1030834	0					
ANR	1031287	Identifier	push_inst		1030834	0					
ANR	1031288	ArgumentList	compiler		1030834	1					
ANR	1031289	Argument	compiler		1030834	0					
ANR	1031290	Identifier	compiler		1030834	0					
ANR	1031291	Argument	LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1030834	1					
ANR	1031292	InclusiveOrExpression	LDRI | RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1030834	0		|			
ANR	1031293	Identifier	LDRI		1030834	0					
ANR	1031294	InclusiveOrExpression	RT ( i ) | RN ( TMP_SP ) | ( offs >> 5 )		1030834	1		|			
ANR	1031295	CallExpression	RT ( i )		1030834	0					
ANR	1031296	Callee	RT		1030834	0					
ANR	1031297	Identifier	RT		1030834	0					
ANR	1031298	ArgumentList	i		1030834	1					
ANR	1031299	Argument	i		1030834	0					
ANR	1031300	Identifier	i		1030834	0					
ANR	1031301	InclusiveOrExpression	RN ( TMP_SP ) | ( offs >> 5 )		1030834	1		|			
ANR	1031302	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031303	Callee	RN		1030834	0					
ANR	1031304	Identifier	RN		1030834	0					
ANR	1031305	ArgumentList	TMP_SP		1030834	1					
ANR	1031306	Argument	TMP_SP		1030834	0					
ANR	1031307	Identifier	TMP_SP		1030834	0					
ANR	1031308	ShiftExpression	offs >> 5		1030834	1		>>			
ANR	1031309	Identifier	offs		1030834	0					
ANR	1031310	PrimaryExpression	5		1030834	1					
ANR	1031311	ExpressionStatement	offs += 1 << 15	1221:3:38856:38871	1030834	2	True				
ANR	1031312	AssignmentExpression	offs += 1 << 15		1030834	0		+=			
ANR	1031313	Identifier	offs		1030834	0					
ANR	1031314	ShiftExpression	1 << 15		1030834	1		<<			
ANR	1031315	PrimaryExpression	1		1030834	0					
ANR	1031316	PrimaryExpression	15		1030834	1					
ANR	1031317	ContinueStatement	continue ;	1222:3:38876:38884	1030834	3	True				
ANR	1031318	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"	1224:2:38892:38965	1030834	1	True				
ANR	1031319	CallExpression	"FAIL_IF ( push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs ) )"		1030834	0					
ANR	1031320	Callee	FAIL_IF		1030834	0					
ANR	1031321	Identifier	FAIL_IF		1030834	0					
ANR	1031322	ArgumentList	"push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1030834	1					
ANR	1031323	Argument	"push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1030834	0					
ANR	1031324	CallExpression	"push_inst ( compiler , LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs )"		1030834	0					
ANR	1031325	Callee	push_inst		1030834	0					
ANR	1031326	Identifier	push_inst		1030834	0					
ANR	1031327	ArgumentList	compiler		1030834	1					
ANR	1031328	Argument	compiler		1030834	0					
ANR	1031329	Identifier	compiler		1030834	0					
ANR	1031330	Argument	LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	1					
ANR	1031331	InclusiveOrExpression	LDP | RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	0		|			
ANR	1031332	Identifier	LDP		1030834	0					
ANR	1031333	InclusiveOrExpression	RT ( prev ) | RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	1		|			
ANR	1031334	CallExpression	RT ( prev )		1030834	0					
ANR	1031335	Callee	RT		1030834	0					
ANR	1031336	Identifier	RT		1030834	0					
ANR	1031337	ArgumentList	prev		1030834	1					
ANR	1031338	Argument	prev		1030834	0					
ANR	1031339	Identifier	prev		1030834	0					
ANR	1031340	InclusiveOrExpression	RT2 ( i ) | RN ( TMP_SP ) | offs		1030834	1		|			
ANR	1031341	CallExpression	RT2 ( i )		1030834	0					
ANR	1031342	Callee	RT2		1030834	0					
ANR	1031343	Identifier	RT2		1030834	0					
ANR	1031344	ArgumentList	i		1030834	1					
ANR	1031345	Argument	i		1030834	0					
ANR	1031346	Identifier	i		1030834	0					
ANR	1031347	InclusiveOrExpression	RN ( TMP_SP ) | offs		1030834	1		|			
ANR	1031348	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031349	Callee	RN		1030834	0					
ANR	1031350	Identifier	RN		1030834	0					
ANR	1031351	ArgumentList	TMP_SP		1030834	1					
ANR	1031352	Argument	TMP_SP		1030834	0					
ANR	1031353	Identifier	TMP_SP		1030834	0					
ANR	1031354	Identifier	offs		1030834	1					
ANR	1031355	ExpressionStatement	offs += 2 << 15	1225:2:38969:38984	1030834	2	True				
ANR	1031356	AssignmentExpression	offs += 2 << 15		1030834	0		+=			
ANR	1031357	Identifier	offs		1030834	0					
ANR	1031358	ShiftExpression	2 << 15		1030834	1		<<			
ANR	1031359	PrimaryExpression	2		1030834	0					
ANR	1031360	PrimaryExpression	15		1030834	1					
ANR	1031361	ExpressionStatement	prev = - 1	1226:2:38988:38997	1030834	3	True				
ANR	1031362	AssignmentExpression	prev = - 1		1030834	0		=			
ANR	1031363	Identifier	prev		1030834	0					
ANR	1031364	UnaryOperationExpression	- 1		1030834	1					
ANR	1031365	UnaryOperator	-		1030834	0					
ANR	1031366	PrimaryExpression	1		1030834	1					
ANR	1031367	ExpressionStatement	SLJIT_ASSERT ( prev == - 1 )	1229:1:39004:39028	1030834	12	True				
ANR	1031368	CallExpression	SLJIT_ASSERT ( prev == - 1 )		1030834	0					
ANR	1031369	Callee	SLJIT_ASSERT		1030834	0					
ANR	1031370	Identifier	SLJIT_ASSERT		1030834	0					
ANR	1031371	ArgumentList	prev == - 1		1030834	1					
ANR	1031372	Argument	prev == - 1		1030834	0					
ANR	1031373	EqualityExpression	prev == - 1		1030834	0		==			
ANR	1031374	Identifier	prev		1030834	0					
ANR	1031375	UnaryOperationExpression	- 1		1030834	1					
ANR	1031376	UnaryOperator	-		1030834	0					
ANR	1031377	PrimaryExpression	1		1030834	1					
ANR	1031378	IfStatement	if ( compiler -> local_size <= ( 63 * sizeof ( sljit_sw ) ) )		1030834	13					
ANR	1031379	Condition	compiler -> local_size <= ( 63 * sizeof ( sljit_sw ) )	1231:5:39036:39082	1030834	0	True				
ANR	1031380	RelationalExpression	compiler -> local_size <= ( 63 * sizeof ( sljit_sw ) )		1030834	0		<=			
ANR	1031381	PtrMemberAccess	compiler -> local_size		1030834	0					
ANR	1031382	Identifier	compiler		1030834	0					
ANR	1031383	Identifier	local_size		1030834	1					
ANR	1031384	MultiplicativeExpression	63 * sizeof ( sljit_sw )		1030834	1		*			
ANR	1031385	PrimaryExpression	63		1030834	0					
ANR	1031386	SizeofExpression	sizeof ( sljit_sw )		1030834	1					
ANR	1031387	Sizeof	sizeof		1030834	0					
ANR	1031388	SizeofOperand	sljit_sw		1030834	1					
ANR	1031389	CompoundStatement		66:54:1907:1907	1030834	1					
ANR	1031390	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 ) ) )"	1232:2:39089:39198	1030834	0	True				
ANR	1031391	CallExpression	"FAIL_IF ( push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 ) ) )"		1030834	0					
ANR	1031392	Callee	FAIL_IF		1030834	0					
ANR	1031393	Identifier	FAIL_IF		1030834	0					
ANR	1031394	ArgumentList	"push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 ) )"		1030834	1					
ANR	1031395	Argument	"push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 ) )"		1030834	0					
ANR	1031396	CallExpression	"push_inst ( compiler , LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 ) )"		1030834	0					
ANR	1031397	Callee	push_inst		1030834	0					
ANR	1031398	Identifier	push_inst		1030834	0					
ANR	1031399	ArgumentList	compiler		1030834	1					
ANR	1031400	Argument	compiler		1030834	0					
ANR	1031401	Identifier	compiler		1030834	0					
ANR	1031402	Argument	LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 )		1030834	1					
ANR	1031403	InclusiveOrExpression	LDP_PST | 29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 )		1030834	0		|			
ANR	1031404	Identifier	LDP_PST		1030834	0					
ANR	1031405	InclusiveOrExpression	29 | RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 )		1030834	1		|			
ANR	1031406	PrimaryExpression	29		1030834	0					
ANR	1031407	InclusiveOrExpression	RT2 ( TMP_LR ) | RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 )		1030834	1		|			
ANR	1031408	CallExpression	RT2 ( TMP_LR )		1030834	0					
ANR	1031409	Callee	RT2		1030834	0					
ANR	1031410	Identifier	RT2		1030834	0					
ANR	1031411	ArgumentList	TMP_LR		1030834	1					
ANR	1031412	Argument	TMP_LR		1030834	0					
ANR	1031413	Identifier	TMP_LR		1030834	0					
ANR	1031414	InclusiveOrExpression	RN ( TMP_SP ) | ( ( ( local_size >> 3 ) & 0x7f ) << 15 )		1030834	1		|			
ANR	1031415	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031416	Callee	RN		1030834	0					
ANR	1031417	Identifier	RN		1030834	0					
ANR	1031418	ArgumentList	TMP_SP		1030834	1					
ANR	1031419	Argument	TMP_SP		1030834	0					
ANR	1031420	Identifier	TMP_SP		1030834	0					
ANR	1031421	ShiftExpression	( ( local_size >> 3 ) & 0x7f ) << 15		1030834	1		<<			
ANR	1031422	BitAndExpression	( local_size >> 3 ) & 0x7f		1030834	0		&			
ANR	1031423	ShiftExpression	local_size >> 3		1030834	0		>>			
ANR	1031424	Identifier	local_size		1030834	0					
ANR	1031425	PrimaryExpression	3		1030834	1					
ANR	1031426	PrimaryExpression	0x7f		1030834	1					
ANR	1031427	PrimaryExpression	15		1030834	1					
ANR	1031428	ElseStatement	else		1030834	0					
ANR	1031429	IfStatement	if ( saved_regs_size > 0 )		1030834	0					
ANR	1031430	Condition	saved_regs_size > 0	1234:12:39212:39230	1030834	0	True				
ANR	1031431	RelationalExpression	saved_regs_size > 0		1030834	0		>			
ANR	1031432	Identifier	saved_regs_size		1030834	0					
ANR	1031433	PrimaryExpression	0		1030834	1					
ANR	1031434	CompoundStatement		69:33:2055:2055	1030834	1					
ANR	1031435	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) ) )"	1235:2:39237:39323	1030834	0	True				
ANR	1031436	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) ) )"		1030834	0					
ANR	1031437	Callee	FAIL_IF		1030834	0					
ANR	1031438	Identifier	FAIL_IF		1030834	0					
ANR	1031439	ArgumentList	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) )"		1030834	1					
ANR	1031440	Argument	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) )"		1030834	0					
ANR	1031441	CallExpression	"push_inst ( compiler , ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 ) )"		1030834	0					
ANR	1031442	Callee	push_inst		1030834	0					
ANR	1031443	Identifier	push_inst		1030834	0					
ANR	1031444	ArgumentList	compiler		1030834	1					
ANR	1031445	Argument	compiler		1030834	0					
ANR	1031446	Identifier	compiler		1030834	0					
ANR	1031447	Argument	ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 )		1030834	1					
ANR	1031448	InclusiveOrExpression	ADDI | RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 )		1030834	0		|			
ANR	1031449	Identifier	ADDI		1030834	0					
ANR	1031450	InclusiveOrExpression	RD ( TMP_SP ) | RN ( TMP_SP ) | ( saved_regs_size << 10 )		1030834	1		|			
ANR	1031451	CallExpression	RD ( TMP_SP )		1030834	0					
ANR	1031452	Callee	RD		1030834	0					
ANR	1031453	Identifier	RD		1030834	0					
ANR	1031454	ArgumentList	TMP_SP		1030834	1					
ANR	1031455	Argument	TMP_SP		1030834	0					
ANR	1031456	Identifier	TMP_SP		1030834	0					
ANR	1031457	InclusiveOrExpression	RN ( TMP_SP ) | ( saved_regs_size << 10 )		1030834	1		|			
ANR	1031458	CallExpression	RN ( TMP_SP )		1030834	0					
ANR	1031459	Callee	RN		1030834	0					
ANR	1031460	Identifier	RN		1030834	0					
ANR	1031461	ArgumentList	TMP_SP		1030834	1					
ANR	1031462	Argument	TMP_SP		1030834	0					
ANR	1031463	Identifier	TMP_SP		1030834	0					
ANR	1031464	ShiftExpression	saved_regs_size << 10		1030834	1		<<			
ANR	1031465	Identifier	saved_regs_size		1030834	0					
ANR	1031466	PrimaryExpression	10		1030834	1					
ANR	1031467	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , RET | RN ( TMP_LR ) ) )"	1238:1:39330:39376	1030834	14	True				
ANR	1031468	CallExpression	"FAIL_IF ( push_inst ( compiler , RET | RN ( TMP_LR ) ) )"		1030834	0					
ANR	1031469	Callee	FAIL_IF		1030834	0					
ANR	1031470	Identifier	FAIL_IF		1030834	0					
ANR	1031471	ArgumentList	"push_inst ( compiler , RET | RN ( TMP_LR ) )"		1030834	1					
ANR	1031472	Argument	"push_inst ( compiler , RET | RN ( TMP_LR ) )"		1030834	0					
ANR	1031473	CallExpression	"push_inst ( compiler , RET | RN ( TMP_LR ) )"		1030834	0					
ANR	1031474	Callee	push_inst		1030834	0					
ANR	1031475	Identifier	push_inst		1030834	0					
ANR	1031476	ArgumentList	compiler		1030834	1					
ANR	1031477	Argument	compiler		1030834	0					
ANR	1031478	Identifier	compiler		1030834	0					
ANR	1031479	Argument	RET | RN ( TMP_LR )		1030834	1					
ANR	1031480	InclusiveOrExpression	RET | RN ( TMP_LR )		1030834	0		|			
ANR	1031481	Identifier	RET		1030834	0					
ANR	1031482	CallExpression	RN ( TMP_LR )		1030834	1					
ANR	1031483	Callee	RN		1030834	0					
ANR	1031484	Identifier	RN		1030834	0					
ANR	1031485	ArgumentList	TMP_LR		1030834	1					
ANR	1031486	Argument	TMP_LR		1030834	0					
ANR	1031487	Identifier	TMP_LR		1030834	0					
ANR	1031488	ReturnStatement	return SLJIT_SUCCESS ;	1239:1:39379:39399	1030834	15	True				
ANR	1031489	Identifier	SLJIT_SUCCESS		1030834	0					
ANR	1031490	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1030834	1					
ANR	1031491	Identifier	sljit_emit_return		1030834	2					
ANR	1031492	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1030834	3					
ANR	1031493	Parameter	struct sljit_compiler * compiler	1165:52:37102:37132	1030834	0	True				
ANR	1031494	ParameterType	struct sljit_compiler *		1030834	0					
ANR	1031495	Identifier	compiler		1030834	1					
ANR	1031496	Parameter	sljit_si op	1165:85:37135:37145	1030834	1	True				
ANR	1031497	ParameterType	sljit_si		1030834	0					
ANR	1031498	Identifier	op		1030834	1					
ANR	1031499	Parameter	sljit_si src	1165:98:37148:37159	1030834	2	True				
ANR	1031500	ParameterType	sljit_si		1030834	0					
ANR	1031501	Identifier	src		1030834	1					
ANR	1031502	Parameter	sljit_sw srcw	1165:112:37162:37174	1030834	3	True				
ANR	1031503	ParameterType	sljit_sw		1030834	0					
ANR	1031504	Identifier	srcw		1030834	1					
ANR	1031505	CFGEntryNode	ENTRY		1030834		True				
ANR	1031506	CFGExitNode	EXIT		1030834		True				
ANR	1031507	Symbol	RET		1030834						
ANR	1031508	Symbol	compiler -> scratches		1030834						
ANR	1031509	Symbol	RT		1030834						
ANR	1031510	Symbol	prev		1030834						
ANR	1031511	Symbol	* compiler		1030834						
ANR	1031512	Symbol	LDRI		1030834						
ANR	1031513	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1030834						
ANR	1031514	Symbol	offs		1030834						
ANR	1031515	Symbol	check_sljit_emit_return		1030834						
ANR	1031516	Symbol	tmp		1030834						
ANR	1031517	Symbol	SLJIT_LOCALS_OFFSET		1030834						
ANR	1031518	Symbol	LDP		1030834						
ANR	1031519	Symbol	compiler		1030834						
ANR	1031520	Symbol	TMP_SP		1030834						
ANR	1031521	Symbol	GET_SAVED_REGISTERS_SIZE		1030834						
ANR	1031522	Symbol	op		1030834						
ANR	1031523	Symbol	local_size		1030834						
ANR	1031524	Symbol	push_inst		1030834						
ANR	1031525	Symbol	src		1030834						
ANR	1031526	Symbol	saved_regs_size		1030834						
ANR	1031527	Symbol	srcw		1030834						
ANR	1031528	Symbol	i		1030834						
ANR	1031529	Symbol	SLJIT_SUCCESS		1030834						
ANR	1031530	Symbol	SLJIT_S0		1030834						
ANR	1031531	Symbol	RT2		1030834						
ANR	1031532	Symbol	RD		1030834						
ANR	1031533	Symbol	compiler -> local_size		1030834						
ANR	1031534	Symbol	compiler -> saveds		1030834						
ANR	1031535	Symbol	ADDI		1030834						
ANR	1031536	Symbol	TMP_LR		1030834						
ANR	1031537	Symbol	SLJIT_FIRST_SAVED_REG		1030834						
ANR	1031538	Symbol	emit_mov_before_return		1030834						
ANR	1031539	Symbol	RN		1030834						
ANR	1031540	Symbol	LDP_PST		1030834						
ANR	1031541	Function	sljit_emit_op0	1246:0:39633:40987							
ANR	1031542	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1031541	0					
ANR	1031543	CompoundStatement		1247:0:39728:40987	1031541	0					
ANR	1031544	IdentifierDeclStatement	sljit_ins inv_bits = ( op & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0 ;	1248:1:39731:39787	1031541	0	True				
ANR	1031545	IdentifierDecl	inv_bits = ( op & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0		1031541	0					
ANR	1031546	IdentifierDeclType	sljit_ins		1031541	0					
ANR	1031547	Identifier	inv_bits		1031541	1					
ANR	1031548	AssignmentExpression	inv_bits = ( op & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0		1031541	2		=			
ANR	1031549	Identifier	inv_bits		1031541	0					
ANR	1031550	ConditionalExpression	( op & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0		1031541	1					
ANR	1031551	Condition	op & SLJIT_INT_OP		1031541	0					
ANR	1031552	BitAndExpression	op & SLJIT_INT_OP		1031541	0		&			
ANR	1031553	Identifier	op		1031541	0					
ANR	1031554	Identifier	SLJIT_INT_OP		1031541	1					
ANR	1031555	ShiftExpression	1 << 31		1031541	1		<<			
ANR	1031556	PrimaryExpression	1		1031541	0					
ANR	1031557	PrimaryExpression	31		1031541	1					
ANR	1031558	PrimaryExpression	0		1031541	2					
ANR	1031559	ExpressionStatement	CHECK_ERROR ( )	1250:1:39791:39804	1031541	1	True				
ANR	1031560	CallExpression	CHECK_ERROR ( )		1031541	0					
ANR	1031561	Callee	CHECK_ERROR		1031541	0					
ANR	1031562	Identifier	CHECK_ERROR		1031541	0					
ANR	1031563	ArgumentList			1031541	1					
ANR	1031564	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	1251:1:39807:39848	1031541	2	True				
ANR	1031565	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1031541	0					
ANR	1031566	Callee	CHECK		1031541	0					
ANR	1031567	Identifier	CHECK		1031541	0					
ANR	1031568	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1031541	1					
ANR	1031569	Argument	"check_sljit_emit_op0 ( compiler , op )"		1031541	0					
ANR	1031570	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1031541	0					
ANR	1031571	Callee	check_sljit_emit_op0		1031541	0					
ANR	1031572	Identifier	check_sljit_emit_op0		1031541	0					
ANR	1031573	ArgumentList	compiler		1031541	1					
ANR	1031574	Argument	compiler		1031541	0					
ANR	1031575	Identifier	compiler		1031541	0					
ANR	1031576	Argument	op		1031541	1					
ANR	1031577	Identifier	op		1031541	0					
ANR	1031578	ExpressionStatement	op = GET_OPCODE ( op )	1253:1:39852:39871	1031541	3	True				
ANR	1031579	AssignmentExpression	op = GET_OPCODE ( op )		1031541	0		=			
ANR	1031580	Identifier	op		1031541	0					
ANR	1031581	CallExpression	GET_OPCODE ( op )		1031541	1					
ANR	1031582	Callee	GET_OPCODE		1031541	0					
ANR	1031583	Identifier	GET_OPCODE		1031541	0					
ANR	1031584	ArgumentList	op		1031541	1					
ANR	1031585	Argument	op		1031541	0					
ANR	1031586	Identifier	op		1031541	0					
ANR	1031587	SwitchStatement	switch ( op )		1031541	4					
ANR	1031588	Condition	op	1254:9:39882:39883	1031541	0	True				
ANR	1031589	Identifier	op		1031541	0					
ANR	1031590	CompoundStatement		8:13:157:157	1031541	1					
ANR	1031591	Label	case SLJIT_BREAKPOINT :	1255:1:39889:39910	1031541	0	True				
ANR	1031592	Identifier	SLJIT_BREAKPOINT		1031541	0					
ANR	1031593	ReturnStatement	"return push_inst ( compiler , BRK ) ;"	1256:2:39914:39945	1031541	1	True				
ANR	1031594	CallExpression	"push_inst ( compiler , BRK )"		1031541	0					
ANR	1031595	Callee	push_inst		1031541	0					
ANR	1031596	Identifier	push_inst		1031541	0					
ANR	1031597	ArgumentList	compiler		1031541	1					
ANR	1031598	Argument	compiler		1031541	0					
ANR	1031599	Identifier	compiler		1031541	0					
ANR	1031600	Argument	BRK		1031541	1					
ANR	1031601	Identifier	BRK		1031541	0					
ANR	1031602	Label	case SLJIT_NOP :	1257:1:39948:39962	1031541	2	True				
ANR	1031603	Identifier	SLJIT_NOP		1031541	0					
ANR	1031604	ReturnStatement	"return push_inst ( compiler , NOP ) ;"	1258:2:39966:39997	1031541	3	True				
ANR	1031605	CallExpression	"push_inst ( compiler , NOP )"		1031541	0					
ANR	1031606	Callee	push_inst		1031541	0					
ANR	1031607	Identifier	push_inst		1031541	0					
ANR	1031608	ArgumentList	compiler		1031541	1					
ANR	1031609	Argument	compiler		1031541	0					
ANR	1031610	Identifier	compiler		1031541	0					
ANR	1031611	Argument	NOP		1031541	1					
ANR	1031612	Identifier	NOP		1031541	0					
ANR	1031613	Label	case SLJIT_LUMUL :	1259:1:40000:40016	1031541	4	True				
ANR	1031614	Identifier	SLJIT_LUMUL		1031541	0					
ANR	1031615	Label	case SLJIT_LSMUL :	1260:1:40019:40035	1031541	5	True				
ANR	1031616	Identifier	SLJIT_LSMUL		1031541	0					
ANR	1031617	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ORR | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) ) )"	1261:2:40039:40117	1031541	6	True				
ANR	1031618	CallExpression	"FAIL_IF ( push_inst ( compiler , ORR | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) ) )"		1031541	0					
ANR	1031619	Callee	FAIL_IF		1031541	0					
ANR	1031620	Identifier	FAIL_IF		1031541	0					
ANR	1031621	ArgumentList	"push_inst ( compiler , ORR | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1031541	1					
ANR	1031622	Argument	"push_inst ( compiler , ORR | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1031541	0					
ANR	1031623	CallExpression	"push_inst ( compiler , ORR | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1031541	0					
ANR	1031624	Callee	push_inst		1031541	0					
ANR	1031625	Identifier	push_inst		1031541	0					
ANR	1031626	ArgumentList	compiler		1031541	1					
ANR	1031627	Argument	compiler		1031541	0					
ANR	1031628	Identifier	compiler		1031541	0					
ANR	1031629	Argument	ORR | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	1					
ANR	1031630	InclusiveOrExpression	ORR | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	0		|			
ANR	1031631	Identifier	ORR		1031541	0					
ANR	1031632	InclusiveOrExpression	RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	1		|			
ANR	1031633	CallExpression	RD ( TMP_REG1 )		1031541	0					
ANR	1031634	Callee	RD		1031541	0					
ANR	1031635	Identifier	RD		1031541	0					
ANR	1031636	ArgumentList	TMP_REG1		1031541	1					
ANR	1031637	Argument	TMP_REG1		1031541	0					
ANR	1031638	Identifier	TMP_REG1		1031541	0					
ANR	1031639	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	1		|			
ANR	1031640	CallExpression	RN ( TMP_ZERO )		1031541	0					
ANR	1031641	Callee	RN		1031541	0					
ANR	1031642	Identifier	RN		1031541	0					
ANR	1031643	ArgumentList	TMP_ZERO		1031541	1					
ANR	1031644	Argument	TMP_ZERO		1031541	0					
ANR	1031645	Identifier	TMP_ZERO		1031541	0					
ANR	1031646	CallExpression	RM ( SLJIT_R0 )		1031541	1					
ANR	1031647	Callee	RM		1031541	0					
ANR	1031648	Identifier	RM		1031541	0					
ANR	1031649	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031650	Argument	SLJIT_R0		1031541	0					
ANR	1031651	Identifier	SLJIT_R0		1031541	0					
ANR	1031652	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MADD | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) ) )"	1262:2:40121:40216	1031541	7	True				
ANR	1031653	CallExpression	"FAIL_IF ( push_inst ( compiler , MADD | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) ) )"		1031541	0					
ANR	1031654	Callee	FAIL_IF		1031541	0					
ANR	1031655	Identifier	FAIL_IF		1031541	0					
ANR	1031656	ArgumentList	"push_inst ( compiler , MADD | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) )"		1031541	1					
ANR	1031657	Argument	"push_inst ( compiler , MADD | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) )"		1031541	0					
ANR	1031658	CallExpression	"push_inst ( compiler , MADD | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) )"		1031541	0					
ANR	1031659	Callee	push_inst		1031541	0					
ANR	1031660	Identifier	push_inst		1031541	0					
ANR	1031661	ArgumentList	compiler		1031541	1					
ANR	1031662	Argument	compiler		1031541	0					
ANR	1031663	Identifier	compiler		1031541	0					
ANR	1031664	Argument	MADD | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1					
ANR	1031665	InclusiveOrExpression	MADD | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	0		|			
ANR	1031666	Identifier	MADD		1031541	0					
ANR	1031667	InclusiveOrExpression	RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1		|			
ANR	1031668	CallExpression	RD ( SLJIT_R0 )		1031541	0					
ANR	1031669	Callee	RD		1031541	0					
ANR	1031670	Identifier	RD		1031541	0					
ANR	1031671	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031672	Argument	SLJIT_R0		1031541	0					
ANR	1031673	Identifier	SLJIT_R0		1031541	0					
ANR	1031674	InclusiveOrExpression	RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1		|			
ANR	1031675	CallExpression	RN ( SLJIT_R0 )		1031541	0					
ANR	1031676	Callee	RN		1031541	0					
ANR	1031677	Identifier	RN		1031541	0					
ANR	1031678	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031679	Argument	SLJIT_R0		1031541	0					
ANR	1031680	Identifier	SLJIT_R0		1031541	0					
ANR	1031681	InclusiveOrExpression	RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1		|			
ANR	1031682	CallExpression	RM ( SLJIT_R1 )		1031541	0					
ANR	1031683	Callee	RM		1031541	0					
ANR	1031684	Identifier	RM		1031541	0					
ANR	1031685	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031686	Argument	SLJIT_R1		1031541	0					
ANR	1031687	Identifier	SLJIT_R1		1031541	0					
ANR	1031688	CallExpression	RT2 ( TMP_ZERO )		1031541	1					
ANR	1031689	Callee	RT2		1031541	0					
ANR	1031690	Identifier	RT2		1031541	0					
ANR	1031691	ArgumentList	TMP_ZERO		1031541	1					
ANR	1031692	Argument	TMP_ZERO		1031541	0					
ANR	1031693	Identifier	TMP_ZERO		1031541	0					
ANR	1031694	ReturnStatement	"return push_inst ( compiler , ( op == SLJIT_LUMUL ? UMULH : SMULH ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 ) ) ;"	1263:2:40220:40328	1031541	8	True				
ANR	1031695	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUMUL ? UMULH : SMULH ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 ) )"		1031541	0					
ANR	1031696	Callee	push_inst		1031541	0					
ANR	1031697	Identifier	push_inst		1031541	0					
ANR	1031698	ArgumentList	compiler		1031541	1					
ANR	1031699	Argument	compiler		1031541	0					
ANR	1031700	Identifier	compiler		1031541	0					
ANR	1031701	Argument	( op == SLJIT_LUMUL ? UMULH : SMULH ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	1					
ANR	1031702	InclusiveOrExpression	( op == SLJIT_LUMUL ? UMULH : SMULH ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	0		|			
ANR	1031703	ConditionalExpression	op == SLJIT_LUMUL ? UMULH : SMULH		1031541	0					
ANR	1031704	Condition	op == SLJIT_LUMUL		1031541	0					
ANR	1031705	EqualityExpression	op == SLJIT_LUMUL		1031541	0		==			
ANR	1031706	Identifier	op		1031541	0					
ANR	1031707	Identifier	SLJIT_LUMUL		1031541	1					
ANR	1031708	Identifier	UMULH		1031541	1					
ANR	1031709	Identifier	SMULH		1031541	2					
ANR	1031710	InclusiveOrExpression	RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031711	CallExpression	RD ( SLJIT_R1 )		1031541	0					
ANR	1031712	Callee	RD		1031541	0					
ANR	1031713	Identifier	RD		1031541	0					
ANR	1031714	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031715	Argument	SLJIT_R1		1031541	0					
ANR	1031716	Identifier	SLJIT_R1		1031541	0					
ANR	1031717	InclusiveOrExpression	RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031718	CallExpression	RN ( TMP_REG1 )		1031541	0					
ANR	1031719	Callee	RN		1031541	0					
ANR	1031720	Identifier	RN		1031541	0					
ANR	1031721	ArgumentList	TMP_REG1		1031541	1					
ANR	1031722	Argument	TMP_REG1		1031541	0					
ANR	1031723	Identifier	TMP_REG1		1031541	0					
ANR	1031724	CallExpression	RM ( SLJIT_R1 )		1031541	1					
ANR	1031725	Callee	RM		1031541	0					
ANR	1031726	Identifier	RM		1031541	0					
ANR	1031727	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031728	Argument	SLJIT_R1		1031541	0					
ANR	1031729	Identifier	SLJIT_R1		1031541	0					
ANR	1031730	Label	case SLJIT_UDIVMOD :	1264:1:40331:40349	1031541	9	True				
ANR	1031731	Identifier	SLJIT_UDIVMOD		1031541	0					
ANR	1031732	Label	case SLJIT_SDIVMOD :	1265:1:40352:40370	1031541	10	True				
ANR	1031733	Identifier	SLJIT_SDIVMOD		1031541	0					
ANR	1031734	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) ) )"	1266:2:40374:40465	1031541	11	True				
ANR	1031735	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) ) )"		1031541	0					
ANR	1031736	Callee	FAIL_IF		1031541	0					
ANR	1031737	Identifier	FAIL_IF		1031541	0					
ANR	1031738	ArgumentList	"push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1031541	1					
ANR	1031739	Argument	"push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1031541	0					
ANR	1031740	CallExpression	"push_inst ( compiler , ( ORR ^ inv_bits ) | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 ) )"		1031541	0					
ANR	1031741	Callee	push_inst		1031541	0					
ANR	1031742	Identifier	push_inst		1031541	0					
ANR	1031743	ArgumentList	compiler		1031541	1					
ANR	1031744	Argument	compiler		1031541	0					
ANR	1031745	Identifier	compiler		1031541	0					
ANR	1031746	Argument	( ORR ^ inv_bits ) | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	1					
ANR	1031747	InclusiveOrExpression	( ORR ^ inv_bits ) | RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	0		|			
ANR	1031748	ExclusiveOrExpression	ORR ^ inv_bits		1031541	0		^			
ANR	1031749	Identifier	ORR		1031541	0					
ANR	1031750	Identifier	inv_bits		1031541	1					
ANR	1031751	InclusiveOrExpression	RD ( TMP_REG1 ) | RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	1		|			
ANR	1031752	CallExpression	RD ( TMP_REG1 )		1031541	0					
ANR	1031753	Callee	RD		1031541	0					
ANR	1031754	Identifier	RD		1031541	0					
ANR	1031755	ArgumentList	TMP_REG1		1031541	1					
ANR	1031756	Argument	TMP_REG1		1031541	0					
ANR	1031757	Identifier	TMP_REG1		1031541	0					
ANR	1031758	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( SLJIT_R0 )		1031541	1		|			
ANR	1031759	CallExpression	RN ( TMP_ZERO )		1031541	0					
ANR	1031760	Callee	RN		1031541	0					
ANR	1031761	Identifier	RN		1031541	0					
ANR	1031762	ArgumentList	TMP_ZERO		1031541	1					
ANR	1031763	Argument	TMP_ZERO		1031541	0					
ANR	1031764	Identifier	TMP_ZERO		1031541	0					
ANR	1031765	CallExpression	RM ( SLJIT_R0 )		1031541	1					
ANR	1031766	Callee	RM		1031541	0					
ANR	1031767	Identifier	RM		1031541	0					
ANR	1031768	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031769	Argument	SLJIT_R0		1031541	0					
ANR	1031770	Identifier	SLJIT_R0		1031541	0					
ANR	1031771	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) ) )"	1267:2:40469:40592	1031541	12	True				
ANR	1031772	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) ) )"		1031541	0					
ANR	1031773	Callee	FAIL_IF		1031541	0					
ANR	1031774	Identifier	FAIL_IF		1031541	0					
ANR	1031775	ArgumentList	"push_inst ( compiler , ( ( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) )"		1031541	1					
ANR	1031776	Argument	"push_inst ( compiler , ( ( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) )"		1031541	0					
ANR	1031777	CallExpression	"push_inst ( compiler , ( ( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) )"		1031541	0					
ANR	1031778	Callee	push_inst		1031541	0					
ANR	1031779	Identifier	push_inst		1031541	0					
ANR	1031780	ArgumentList	compiler		1031541	1					
ANR	1031781	Argument	compiler		1031541	0					
ANR	1031782	Identifier	compiler		1031541	0					
ANR	1031783	Argument	( ( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	1					
ANR	1031784	InclusiveOrExpression	( ( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	0		|			
ANR	1031785	ExclusiveOrExpression	( op == SLJIT_UDIVMOD ? UDIV : SDIV ) ^ inv_bits		1031541	0		^			
ANR	1031786	ConditionalExpression	op == SLJIT_UDIVMOD ? UDIV : SDIV		1031541	0					
ANR	1031787	Condition	op == SLJIT_UDIVMOD		1031541	0					
ANR	1031788	EqualityExpression	op == SLJIT_UDIVMOD		1031541	0		==			
ANR	1031789	Identifier	op		1031541	0					
ANR	1031790	Identifier	SLJIT_UDIVMOD		1031541	1					
ANR	1031791	Identifier	UDIV		1031541	1					
ANR	1031792	Identifier	SDIV		1031541	2					
ANR	1031793	Identifier	inv_bits		1031541	1					
ANR	1031794	InclusiveOrExpression	RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031795	CallExpression	RD ( SLJIT_R0 )		1031541	0					
ANR	1031796	Callee	RD		1031541	0					
ANR	1031797	Identifier	RD		1031541	0					
ANR	1031798	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031799	Argument	SLJIT_R0		1031541	0					
ANR	1031800	Identifier	SLJIT_R0		1031541	0					
ANR	1031801	InclusiveOrExpression	RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031802	CallExpression	RN ( SLJIT_R0 )		1031541	0					
ANR	1031803	Callee	RN		1031541	0					
ANR	1031804	Identifier	RN		1031541	0					
ANR	1031805	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031806	Argument	SLJIT_R0		1031541	0					
ANR	1031807	Identifier	SLJIT_R0		1031541	0					
ANR	1031808	CallExpression	RM ( SLJIT_R1 )		1031541	1					
ANR	1031809	Callee	RM		1031541	0					
ANR	1031810	Identifier	RM		1031541	0					
ANR	1031811	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031812	Argument	SLJIT_R1		1031541	0					
ANR	1031813	Identifier	SLJIT_R1		1031541	0					
ANR	1031814	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( MADD ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) ) )"	1268:2:40596:40704	1031541	13	True				
ANR	1031815	CallExpression	"FAIL_IF ( push_inst ( compiler , ( MADD ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) ) )"		1031541	0					
ANR	1031816	Callee	FAIL_IF		1031541	0					
ANR	1031817	Identifier	FAIL_IF		1031541	0					
ANR	1031818	ArgumentList	"push_inst ( compiler , ( MADD ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) )"		1031541	1					
ANR	1031819	Argument	"push_inst ( compiler , ( MADD ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) )"		1031541	0					
ANR	1031820	CallExpression	"push_inst ( compiler , ( MADD ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO ) )"		1031541	0					
ANR	1031821	Callee	push_inst		1031541	0					
ANR	1031822	Identifier	push_inst		1031541	0					
ANR	1031823	ArgumentList	compiler		1031541	1					
ANR	1031824	Argument	compiler		1031541	0					
ANR	1031825	Identifier	compiler		1031541	0					
ANR	1031826	Argument	( MADD ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1					
ANR	1031827	InclusiveOrExpression	( MADD ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	0		|			
ANR	1031828	ExclusiveOrExpression	MADD ^ inv_bits		1031541	0		^			
ANR	1031829	Identifier	MADD		1031541	0					
ANR	1031830	Identifier	inv_bits		1031541	1					
ANR	1031831	InclusiveOrExpression	RD ( SLJIT_R1 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1		|			
ANR	1031832	CallExpression	RD ( SLJIT_R1 )		1031541	0					
ANR	1031833	Callee	RD		1031541	0					
ANR	1031834	Identifier	RD		1031541	0					
ANR	1031835	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031836	Argument	SLJIT_R1		1031541	0					
ANR	1031837	Identifier	SLJIT_R1		1031541	0					
ANR	1031838	InclusiveOrExpression	RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1		|			
ANR	1031839	CallExpression	RN ( SLJIT_R0 )		1031541	0					
ANR	1031840	Callee	RN		1031541	0					
ANR	1031841	Identifier	RN		1031541	0					
ANR	1031842	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031843	Argument	SLJIT_R0		1031541	0					
ANR	1031844	Identifier	SLJIT_R0		1031541	0					
ANR	1031845	InclusiveOrExpression	RM ( SLJIT_R1 ) | RT2 ( TMP_ZERO )		1031541	1		|			
ANR	1031846	CallExpression	RM ( SLJIT_R1 )		1031541	0					
ANR	1031847	Callee	RM		1031541	0					
ANR	1031848	Identifier	RM		1031541	0					
ANR	1031849	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031850	Argument	SLJIT_R1		1031541	0					
ANR	1031851	Identifier	SLJIT_R1		1031541	0					
ANR	1031852	CallExpression	RT2 ( TMP_ZERO )		1031541	1					
ANR	1031853	Callee	RT2		1031541	0					
ANR	1031854	Identifier	RT2		1031541	0					
ANR	1031855	ArgumentList	TMP_ZERO		1031541	1					
ANR	1031856	Argument	TMP_ZERO		1031541	0					
ANR	1031857	Identifier	TMP_ZERO		1031541	0					
ANR	1031858	ReturnStatement	"return push_inst ( compiler , ( SUB ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 ) ) ;"	1269:2:40708:40797	1031541	14	True				
ANR	1031859	CallExpression	"push_inst ( compiler , ( SUB ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 ) )"		1031541	0					
ANR	1031860	Callee	push_inst		1031541	0					
ANR	1031861	Identifier	push_inst		1031541	0					
ANR	1031862	ArgumentList	compiler		1031541	1					
ANR	1031863	Argument	compiler		1031541	0					
ANR	1031864	Identifier	compiler		1031541	0					
ANR	1031865	Argument	( SUB ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	1					
ANR	1031866	InclusiveOrExpression	( SUB ^ inv_bits ) | RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	0		|			
ANR	1031867	ExclusiveOrExpression	SUB ^ inv_bits		1031541	0		^			
ANR	1031868	Identifier	SUB		1031541	0					
ANR	1031869	Identifier	inv_bits		1031541	1					
ANR	1031870	InclusiveOrExpression	RD ( SLJIT_R1 ) | RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031871	CallExpression	RD ( SLJIT_R1 )		1031541	0					
ANR	1031872	Callee	RD		1031541	0					
ANR	1031873	Identifier	RD		1031541	0					
ANR	1031874	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031875	Argument	SLJIT_R1		1031541	0					
ANR	1031876	Identifier	SLJIT_R1		1031541	0					
ANR	1031877	InclusiveOrExpression	RN ( TMP_REG1 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031878	CallExpression	RN ( TMP_REG1 )		1031541	0					
ANR	1031879	Callee	RN		1031541	0					
ANR	1031880	Identifier	RN		1031541	0					
ANR	1031881	ArgumentList	TMP_REG1		1031541	1					
ANR	1031882	Argument	TMP_REG1		1031541	0					
ANR	1031883	Identifier	TMP_REG1		1031541	0					
ANR	1031884	CallExpression	RM ( SLJIT_R1 )		1031541	1					
ANR	1031885	Callee	RM		1031541	0					
ANR	1031886	Identifier	RM		1031541	0					
ANR	1031887	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031888	Argument	SLJIT_R1		1031541	0					
ANR	1031889	Identifier	SLJIT_R1		1031541	0					
ANR	1031890	Label	case SLJIT_UDIVI :	1270:1:40800:40816	1031541	15	True				
ANR	1031891	Identifier	SLJIT_UDIVI		1031541	0					
ANR	1031892	Label	case SLJIT_SDIVI :	1271:1:40819:40835	1031541	16	True				
ANR	1031893	Identifier	SLJIT_SDIVI		1031541	0					
ANR	1031894	ReturnStatement	"return push_inst ( compiler , ( ( op == SLJIT_UDIVI ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) ) ;"	1272:2:40839:40958	1031541	17	True				
ANR	1031895	CallExpression	"push_inst ( compiler , ( ( op == SLJIT_UDIVI ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 ) )"		1031541	0					
ANR	1031896	Callee	push_inst		1031541	0					
ANR	1031897	Identifier	push_inst		1031541	0					
ANR	1031898	ArgumentList	compiler		1031541	1					
ANR	1031899	Argument	compiler		1031541	0					
ANR	1031900	Identifier	compiler		1031541	0					
ANR	1031901	Argument	( ( op == SLJIT_UDIVI ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	1					
ANR	1031902	InclusiveOrExpression	( ( op == SLJIT_UDIVI ? UDIV : SDIV ) ^ inv_bits ) | RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	0		|			
ANR	1031903	ExclusiveOrExpression	( op == SLJIT_UDIVI ? UDIV : SDIV ) ^ inv_bits		1031541	0		^			
ANR	1031904	ConditionalExpression	op == SLJIT_UDIVI ? UDIV : SDIV		1031541	0					
ANR	1031905	Condition	op == SLJIT_UDIVI		1031541	0					
ANR	1031906	EqualityExpression	op == SLJIT_UDIVI		1031541	0		==			
ANR	1031907	Identifier	op		1031541	0					
ANR	1031908	Identifier	SLJIT_UDIVI		1031541	1					
ANR	1031909	Identifier	UDIV		1031541	1					
ANR	1031910	Identifier	SDIV		1031541	2					
ANR	1031911	Identifier	inv_bits		1031541	1					
ANR	1031912	InclusiveOrExpression	RD ( SLJIT_R0 ) | RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031913	CallExpression	RD ( SLJIT_R0 )		1031541	0					
ANR	1031914	Callee	RD		1031541	0					
ANR	1031915	Identifier	RD		1031541	0					
ANR	1031916	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031917	Argument	SLJIT_R0		1031541	0					
ANR	1031918	Identifier	SLJIT_R0		1031541	0					
ANR	1031919	InclusiveOrExpression	RN ( SLJIT_R0 ) | RM ( SLJIT_R1 )		1031541	1		|			
ANR	1031920	CallExpression	RN ( SLJIT_R0 )		1031541	0					
ANR	1031921	Callee	RN		1031541	0					
ANR	1031922	Identifier	RN		1031541	0					
ANR	1031923	ArgumentList	SLJIT_R0		1031541	1					
ANR	1031924	Argument	SLJIT_R0		1031541	0					
ANR	1031925	Identifier	SLJIT_R0		1031541	0					
ANR	1031926	CallExpression	RM ( SLJIT_R1 )		1031541	1					
ANR	1031927	Callee	RM		1031541	0					
ANR	1031928	Identifier	RM		1031541	0					
ANR	1031929	ArgumentList	SLJIT_R1		1031541	1					
ANR	1031930	Argument	SLJIT_R1		1031541	0					
ANR	1031931	Identifier	SLJIT_R1		1031541	0					
ANR	1031932	ReturnStatement	return SLJIT_SUCCESS ;	1275:1:40965:40985	1031541	5	True				
ANR	1031933	Identifier	SLJIT_SUCCESS		1031541	0					
ANR	1031934	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1031541	1					
ANR	1031935	Identifier	sljit_emit_op0		1031541	2					
ANR	1031936	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1031541	3					
ANR	1031937	Parameter	struct sljit_compiler * compiler	1246:49:39682:39712	1031541	0	True				
ANR	1031938	ParameterType	struct sljit_compiler *		1031541	0					
ANR	1031939	Identifier	compiler		1031541	1					
ANR	1031940	Parameter	sljit_si op	1246:82:39715:39725	1031541	1	True				
ANR	1031941	ParameterType	sljit_si		1031541	0					
ANR	1031942	Identifier	op		1031541	1					
ANR	1031943	CFGEntryNode	ENTRY		1031541		True				
ANR	1031944	CFGExitNode	EXIT		1031541		True				
ANR	1031945	Symbol	TMP_REG1		1031541						
ANR	1031946	Symbol	SMULH		1031541						
ANR	1031947	Symbol	SLJIT_LUMUL		1031541						
ANR	1031948	Symbol	SLJIT_R1		1031541						
ANR	1031949	Symbol	ORR		1031541						
ANR	1031950	Symbol	GET_OPCODE		1031541						
ANR	1031951	Symbol	SLJIT_R0		1031541						
ANR	1031952	Symbol	SLJIT_UDIVMOD		1031541						
ANR	1031953	Symbol	SDIV		1031541						
ANR	1031954	Symbol	inv_bits		1031541						
ANR	1031955	Symbol	UDIV		1031541						
ANR	1031956	Symbol	compiler		1031541						
ANR	1031957	Symbol	op		1031541						
ANR	1031958	Symbol	push_inst		1031541						
ANR	1031959	Symbol	SUB		1031541						
ANR	1031960	Symbol	check_sljit_emit_op0		1031541						
ANR	1031961	Symbol	SLJIT_INT_OP		1031541						
ANR	1031962	Symbol	SLJIT_SUCCESS		1031541						
ANR	1031963	Symbol	UMULH		1031541						
ANR	1031964	Symbol	SLJIT_UDIVI		1031541						
ANR	1031965	Symbol	NOP		1031541						
ANR	1031966	Symbol	RT2		1031541						
ANR	1031967	Symbol	RD		1031541						
ANR	1031968	Symbol	MADD		1031541						
ANR	1031969	Symbol	BRK		1031541						
ANR	1031970	Symbol	TMP_ZERO		1031541						
ANR	1031971	Symbol	RM		1031541						
ANR	1031972	Symbol	RN		1031541						
ANR	1031973	Function	sljit_emit_op1	1278:0:40990:44662							
ANR	1031974	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1031973	0					
ANR	1031975	CompoundStatement		1281:0:41145:44662	1031973	0					
ANR	1031976	IdentifierDeclStatement	"sljit_si dst_r , flags , mem_flags ;"	1282:1:41148:41180	1031973	0	True				
ANR	1031977	IdentifierDecl	dst_r		1031973	0					
ANR	1031978	IdentifierDeclType	sljit_si		1031973	0					
ANR	1031979	Identifier	dst_r		1031973	1					
ANR	1031980	IdentifierDecl	flags		1031973	1					
ANR	1031981	IdentifierDeclType	sljit_si		1031973	0					
ANR	1031982	Identifier	flags		1031973	1					
ANR	1031983	IdentifierDecl	mem_flags		1031973	2					
ANR	1031984	IdentifierDeclType	sljit_si		1031973	0					
ANR	1031985	Identifier	mem_flags		1031973	1					
ANR	1031986	IdentifierDeclStatement	sljit_si op_flags = GET_ALL_FLAGS ( op ) ;	1283:1:41183:41220	1031973	1	True				
ANR	1031987	IdentifierDecl	op_flags = GET_ALL_FLAGS ( op )		1031973	0					
ANR	1031988	IdentifierDeclType	sljit_si		1031973	0					
ANR	1031989	Identifier	op_flags		1031973	1					
ANR	1031990	AssignmentExpression	op_flags = GET_ALL_FLAGS ( op )		1031973	2		=			
ANR	1031991	Identifier	op_flags		1031973	0					
ANR	1031992	CallExpression	GET_ALL_FLAGS ( op )		1031973	1					
ANR	1031993	Callee	GET_ALL_FLAGS		1031973	0					
ANR	1031994	Identifier	GET_ALL_FLAGS		1031973	0					
ANR	1031995	ArgumentList	op		1031973	1					
ANR	1031996	Argument	op		1031973	0					
ANR	1031997	Identifier	op		1031973	0					
ANR	1031998	ExpressionStatement	CHECK_ERROR ( )	1285:1:41224:41237	1031973	2	True				
ANR	1031999	CallExpression	CHECK_ERROR ( )		1031973	0					
ANR	1032000	Callee	CHECK_ERROR		1031973	0					
ANR	1032001	Identifier	CHECK_ERROR		1031973	0					
ANR	1032002	ArgumentList			1031973	1					
ANR	1032003	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1286:1:41240:41303	1031973	3	True				
ANR	1032004	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1031973	0					
ANR	1032005	Callee	CHECK		1031973	0					
ANR	1032006	Identifier	CHECK		1031973	0					
ANR	1032007	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1031973	1					
ANR	1032008	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1031973	0					
ANR	1032009	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1031973	0					
ANR	1032010	Callee	check_sljit_emit_op1		1031973	0					
ANR	1032011	Identifier	check_sljit_emit_op1		1031973	0					
ANR	1032012	ArgumentList	compiler		1031973	1					
ANR	1032013	Argument	compiler		1031973	0					
ANR	1032014	Identifier	compiler		1031973	0					
ANR	1032015	Argument	op		1031973	1					
ANR	1032016	Identifier	op		1031973	0					
ANR	1032017	Argument	dst		1031973	2					
ANR	1032018	Identifier	dst		1031973	0					
ANR	1032019	Argument	dstw		1031973	3					
ANR	1032020	Identifier	dstw		1031973	0					
ANR	1032021	Argument	src		1031973	4					
ANR	1032022	Identifier	src		1031973	0					
ANR	1032023	Argument	srcw		1031973	5					
ANR	1032024	Identifier	srcw		1031973	0					
ANR	1032025	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1287:1:41306:41336	1031973	4	True				
ANR	1032026	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1031973	0					
ANR	1032027	Callee	ADJUST_LOCAL_OFFSET		1031973	0					
ANR	1032028	Identifier	ADJUST_LOCAL_OFFSET		1031973	0					
ANR	1032029	ArgumentList	dst		1031973	1					
ANR	1032030	Argument	dst		1031973	0					
ANR	1032031	Identifier	dst		1031973	0					
ANR	1032032	Argument	dstw		1031973	1					
ANR	1032033	Identifier	dstw		1031973	0					
ANR	1032034	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1288:1:41339:41369	1031973	5	True				
ANR	1032035	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1031973	0					
ANR	1032036	Callee	ADJUST_LOCAL_OFFSET		1031973	0					
ANR	1032037	Identifier	ADJUST_LOCAL_OFFSET		1031973	0					
ANR	1032038	ArgumentList	src		1031973	1					
ANR	1032039	Argument	src		1031973	0					
ANR	1032040	Identifier	src		1031973	0					
ANR	1032041	Argument	srcw		1031973	1					
ANR	1032042	Identifier	srcw		1031973	0					
ANR	1032043	ExpressionStatement	compiler -> cache_arg = 0	1290:1:41373:41396	1031973	6	True				
ANR	1032044	AssignmentExpression	compiler -> cache_arg = 0		1031973	0		=			
ANR	1032045	PtrMemberAccess	compiler -> cache_arg		1031973	0					
ANR	1032046	Identifier	compiler		1031973	0					
ANR	1032047	Identifier	cache_arg		1031973	1					
ANR	1032048	PrimaryExpression	0		1031973	1					
ANR	1032049	ExpressionStatement	compiler -> cache_argw = 0	1291:1:41399:41423	1031973	7	True				
ANR	1032050	AssignmentExpression	compiler -> cache_argw = 0		1031973	0		=			
ANR	1032051	PtrMemberAccess	compiler -> cache_argw		1031973	0					
ANR	1032052	Identifier	compiler		1031973	0					
ANR	1032053	Identifier	cache_argw		1031973	1					
ANR	1032054	PrimaryExpression	0		1031973	1					
ANR	1032055	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	1293:1:41427:41468	1031973	8	True				
ANR	1032056	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1031973	0		=			
ANR	1032057	Identifier	dst_r		1031973	0					
ANR	1032058	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1031973	1					
ANR	1032059	Condition	SLOW_IS_REG ( dst )		1031973	0					
ANR	1032060	CallExpression	SLOW_IS_REG ( dst )		1031973	0					
ANR	1032061	Callee	SLOW_IS_REG		1031973	0					
ANR	1032062	Identifier	SLOW_IS_REG		1031973	0					
ANR	1032063	ArgumentList	dst		1031973	1					
ANR	1032064	Argument	dst		1031973	0					
ANR	1032065	Identifier	dst		1031973	0					
ANR	1032066	Identifier	dst		1031973	1					
ANR	1032067	Identifier	TMP_REG1		1031973	2					
ANR	1032068	ExpressionStatement	op = GET_OPCODE ( op )	1295:1:41472:41491	1031973	9	True				
ANR	1032069	AssignmentExpression	op = GET_OPCODE ( op )		1031973	0		=			
ANR	1032070	Identifier	op		1031973	0					
ANR	1032071	CallExpression	GET_OPCODE ( op )		1031973	1					
ANR	1032072	Callee	GET_OPCODE		1031973	0					
ANR	1032073	Identifier	GET_OPCODE		1031973	0					
ANR	1032074	ArgumentList	op		1031973	1					
ANR	1032075	Argument	op		1031973	0					
ANR	1032076	Identifier	op		1031973	0					
ANR	1032077	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_P )		1031973	10					
ANR	1032078	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_P	1296:5:41498:41534	1031973	0	True				
ANR	1032079	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_P		1031973	0		&&			
ANR	1032080	RelationalExpression	op >= SLJIT_MOV		1031973	0		>=			
ANR	1032081	Identifier	op		1031973	0					
ANR	1032082	Identifier	SLJIT_MOV		1031973	1					
ANR	1032083	RelationalExpression	op <= SLJIT_MOVU_P		1031973	1		<=			
ANR	1032084	Identifier	op		1031973	0					
ANR	1032085	Identifier	SLJIT_MOVU_P		1031973	1					
ANR	1032086	CompoundStatement		16:44:391:391	1031973	1					
ANR	1032087	SwitchStatement	switch ( op )		1031973	0					
ANR	1032088	Condition	op	1297:10:41549:41550	1031973	0	True				
ANR	1032089	Identifier	op		1031973	0					
ANR	1032090	CompoundStatement		17:14:407:407	1031973	1					
ANR	1032091	Label	case SLJIT_MOV :	1298:2:41557:41571	1031973	0	True				
ANR	1032092	Identifier	SLJIT_MOV		1031973	0					
ANR	1032093	Label	case SLJIT_MOV_P :	1299:2:41575:41591	1031973	1	True				
ANR	1032094	Identifier	SLJIT_MOV_P		1031973	0					
ANR	1032095	ExpressionStatement	flags = WORD_SIZE	1300:3:41596:41613	1031973	2	True				
ANR	1032096	AssignmentExpression	flags = WORD_SIZE		1031973	0		=			
ANR	1032097	Identifier	flags		1031973	0					
ANR	1032098	Identifier	WORD_SIZE		1031973	1					
ANR	1032099	BreakStatement	break ;	1301:3:41618:41623	1031973	3	True				
ANR	1032100	Label	case SLJIT_MOV_UB :	1302:2:41627:41644	1031973	4	True				
ANR	1032101	Identifier	SLJIT_MOV_UB		1031973	0					
ANR	1032102	ExpressionStatement	flags = BYTE_SIZE	1303:3:41649:41666	1031973	5	True				
ANR	1032103	AssignmentExpression	flags = BYTE_SIZE		1031973	0		=			
ANR	1032104	Identifier	flags		1031973	0					
ANR	1032105	Identifier	BYTE_SIZE		1031973	1					
ANR	1032106	IfStatement	if ( src & SLJIT_IMM )		1031973	6					
ANR	1032107	Condition	src & SLJIT_IMM	1304:7:41675:41689	1031973	0	True				
ANR	1032108	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032109	Identifier	src		1031973	0					
ANR	1032110	Identifier	SLJIT_IMM		1031973	1					
ANR	1032111	ExpressionStatement	srcw = ( sljit_ub ) srcw	1305:4:41696:41717	1031973	1	True				
ANR	1032112	AssignmentExpression	srcw = ( sljit_ub ) srcw		1031973	0		=			
ANR	1032113	Identifier	srcw		1031973	0					
ANR	1032114	CastExpression	( sljit_ub ) srcw		1031973	1					
ANR	1032115	CastTarget	sljit_ub		1031973	0					
ANR	1032116	Identifier	srcw		1031973	1					
ANR	1032117	BreakStatement	break ;	1306:3:41722:41727	1031973	7	True				
ANR	1032118	Label	case SLJIT_MOV_SB :	1307:2:41731:41748	1031973	8	True				
ANR	1032119	Identifier	SLJIT_MOV_SB		1031973	0					
ANR	1032120	ExpressionStatement	flags = BYTE_SIZE | SIGNED	1308:3:41753:41779	1031973	9	True				
ANR	1032121	AssignmentExpression	flags = BYTE_SIZE | SIGNED		1031973	0		=			
ANR	1032122	Identifier	flags		1031973	0					
ANR	1032123	InclusiveOrExpression	BYTE_SIZE | SIGNED		1031973	1		|			
ANR	1032124	Identifier	BYTE_SIZE		1031973	0					
ANR	1032125	Identifier	SIGNED		1031973	1					
ANR	1032126	IfStatement	if ( src & SLJIT_IMM )		1031973	10					
ANR	1032127	Condition	src & SLJIT_IMM	1309:7:41788:41802	1031973	0	True				
ANR	1032128	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032129	Identifier	src		1031973	0					
ANR	1032130	Identifier	SLJIT_IMM		1031973	1					
ANR	1032131	ExpressionStatement	srcw = ( sljit_sb ) srcw	1310:4:41809:41830	1031973	1	True				
ANR	1032132	AssignmentExpression	srcw = ( sljit_sb ) srcw		1031973	0		=			
ANR	1032133	Identifier	srcw		1031973	0					
ANR	1032134	CastExpression	( sljit_sb ) srcw		1031973	1					
ANR	1032135	CastTarget	sljit_sb		1031973	0					
ANR	1032136	Identifier	srcw		1031973	1					
ANR	1032137	BreakStatement	break ;	1311:3:41835:41840	1031973	11	True				
ANR	1032138	Label	case SLJIT_MOV_UH :	1312:2:41844:41861	1031973	12	True				
ANR	1032139	Identifier	SLJIT_MOV_UH		1031973	0					
ANR	1032140	ExpressionStatement	flags = HALF_SIZE	1313:3:41866:41883	1031973	13	True				
ANR	1032141	AssignmentExpression	flags = HALF_SIZE		1031973	0		=			
ANR	1032142	Identifier	flags		1031973	0					
ANR	1032143	Identifier	HALF_SIZE		1031973	1					
ANR	1032144	IfStatement	if ( src & SLJIT_IMM )		1031973	14					
ANR	1032145	Condition	src & SLJIT_IMM	1314:7:41892:41906	1031973	0	True				
ANR	1032146	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032147	Identifier	src		1031973	0					
ANR	1032148	Identifier	SLJIT_IMM		1031973	1					
ANR	1032149	ExpressionStatement	srcw = ( sljit_uh ) srcw	1315:4:41913:41934	1031973	1	True				
ANR	1032150	AssignmentExpression	srcw = ( sljit_uh ) srcw		1031973	0		=			
ANR	1032151	Identifier	srcw		1031973	0					
ANR	1032152	CastExpression	( sljit_uh ) srcw		1031973	1					
ANR	1032153	CastTarget	sljit_uh		1031973	0					
ANR	1032154	Identifier	srcw		1031973	1					
ANR	1032155	BreakStatement	break ;	1316:3:41939:41944	1031973	15	True				
ANR	1032156	Label	case SLJIT_MOV_SH :	1317:2:41948:41965	1031973	16	True				
ANR	1032157	Identifier	SLJIT_MOV_SH		1031973	0					
ANR	1032158	ExpressionStatement	flags = HALF_SIZE | SIGNED	1318:3:41970:41996	1031973	17	True				
ANR	1032159	AssignmentExpression	flags = HALF_SIZE | SIGNED		1031973	0		=			
ANR	1032160	Identifier	flags		1031973	0					
ANR	1032161	InclusiveOrExpression	HALF_SIZE | SIGNED		1031973	1		|			
ANR	1032162	Identifier	HALF_SIZE		1031973	0					
ANR	1032163	Identifier	SIGNED		1031973	1					
ANR	1032164	IfStatement	if ( src & SLJIT_IMM )		1031973	18					
ANR	1032165	Condition	src & SLJIT_IMM	1319:7:42005:42019	1031973	0	True				
ANR	1032166	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032167	Identifier	src		1031973	0					
ANR	1032168	Identifier	SLJIT_IMM		1031973	1					
ANR	1032169	ExpressionStatement	srcw = ( sljit_sh ) srcw	1320:4:42026:42047	1031973	1	True				
ANR	1032170	AssignmentExpression	srcw = ( sljit_sh ) srcw		1031973	0		=			
ANR	1032171	Identifier	srcw		1031973	0					
ANR	1032172	CastExpression	( sljit_sh ) srcw		1031973	1					
ANR	1032173	CastTarget	sljit_sh		1031973	0					
ANR	1032174	Identifier	srcw		1031973	1					
ANR	1032175	BreakStatement	break ;	1321:3:42052:42057	1031973	19	True				
ANR	1032176	Label	case SLJIT_MOV_UI :	1322:2:42061:42078	1031973	20	True				
ANR	1032177	Identifier	SLJIT_MOV_UI		1031973	0					
ANR	1032178	ExpressionStatement	flags = INT_SIZE	1323:3:42083:42099	1031973	21	True				
ANR	1032179	AssignmentExpression	flags = INT_SIZE		1031973	0		=			
ANR	1032180	Identifier	flags		1031973	0					
ANR	1032181	Identifier	INT_SIZE		1031973	1					
ANR	1032182	IfStatement	if ( src & SLJIT_IMM )		1031973	22					
ANR	1032183	Condition	src & SLJIT_IMM	1324:7:42108:42122	1031973	0	True				
ANR	1032184	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032185	Identifier	src		1031973	0					
ANR	1032186	Identifier	SLJIT_IMM		1031973	1					
ANR	1032187	ExpressionStatement	srcw = ( sljit_ui ) srcw	1325:4:42129:42150	1031973	1	True				
ANR	1032188	AssignmentExpression	srcw = ( sljit_ui ) srcw		1031973	0		=			
ANR	1032189	Identifier	srcw		1031973	0					
ANR	1032190	CastExpression	( sljit_ui ) srcw		1031973	1					
ANR	1032191	CastTarget	sljit_ui		1031973	0					
ANR	1032192	Identifier	srcw		1031973	1					
ANR	1032193	BreakStatement	break ;	1326:3:42155:42160	1031973	23	True				
ANR	1032194	Label	case SLJIT_MOV_SI :	1327:2:42164:42181	1031973	24	True				
ANR	1032195	Identifier	SLJIT_MOV_SI		1031973	0					
ANR	1032196	ExpressionStatement	flags = INT_SIZE | SIGNED	1328:3:42186:42211	1031973	25	True				
ANR	1032197	AssignmentExpression	flags = INT_SIZE | SIGNED		1031973	0		=			
ANR	1032198	Identifier	flags		1031973	0					
ANR	1032199	InclusiveOrExpression	INT_SIZE | SIGNED		1031973	1		|			
ANR	1032200	Identifier	INT_SIZE		1031973	0					
ANR	1032201	Identifier	SIGNED		1031973	1					
ANR	1032202	IfStatement	if ( src & SLJIT_IMM )		1031973	26					
ANR	1032203	Condition	src & SLJIT_IMM	1329:7:42220:42234	1031973	0	True				
ANR	1032204	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032205	Identifier	src		1031973	0					
ANR	1032206	Identifier	SLJIT_IMM		1031973	1					
ANR	1032207	ExpressionStatement	srcw = ( sljit_si ) srcw	1330:4:42241:42262	1031973	1	True				
ANR	1032208	AssignmentExpression	srcw = ( sljit_si ) srcw		1031973	0		=			
ANR	1032209	Identifier	srcw		1031973	0					
ANR	1032210	CastExpression	( sljit_si ) srcw		1031973	1					
ANR	1032211	CastTarget	sljit_si		1031973	0					
ANR	1032212	Identifier	srcw		1031973	1					
ANR	1032213	BreakStatement	break ;	1331:3:42267:42272	1031973	27	True				
ANR	1032214	Label	case SLJIT_MOVU :	1332:2:42276:42291	1031973	28	True				
ANR	1032215	Identifier	SLJIT_MOVU		1031973	0					
ANR	1032216	Label	case SLJIT_MOVU_P :	1333:2:42295:42312	1031973	29	True				
ANR	1032217	Identifier	SLJIT_MOVU_P		1031973	0					
ANR	1032218	ExpressionStatement	flags = WORD_SIZE | UPDATE	1334:3:42317:42343	1031973	30	True				
ANR	1032219	AssignmentExpression	flags = WORD_SIZE | UPDATE		1031973	0		=			
ANR	1032220	Identifier	flags		1031973	0					
ANR	1032221	InclusiveOrExpression	WORD_SIZE | UPDATE		1031973	1		|			
ANR	1032222	Identifier	WORD_SIZE		1031973	0					
ANR	1032223	Identifier	UPDATE		1031973	1					
ANR	1032224	BreakStatement	break ;	1335:3:42348:42353	1031973	31	True				
ANR	1032225	Label	case SLJIT_MOVU_UB :	1336:2:42357:42375	1031973	32	True				
ANR	1032226	Identifier	SLJIT_MOVU_UB		1031973	0					
ANR	1032227	ExpressionStatement	flags = BYTE_SIZE | UPDATE	1337:3:42380:42406	1031973	33	True				
ANR	1032228	AssignmentExpression	flags = BYTE_SIZE | UPDATE		1031973	0		=			
ANR	1032229	Identifier	flags		1031973	0					
ANR	1032230	InclusiveOrExpression	BYTE_SIZE | UPDATE		1031973	1		|			
ANR	1032231	Identifier	BYTE_SIZE		1031973	0					
ANR	1032232	Identifier	UPDATE		1031973	1					
ANR	1032233	IfStatement	if ( src & SLJIT_IMM )		1031973	34					
ANR	1032234	Condition	src & SLJIT_IMM	1338:7:42415:42429	1031973	0	True				
ANR	1032235	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032236	Identifier	src		1031973	0					
ANR	1032237	Identifier	SLJIT_IMM		1031973	1					
ANR	1032238	ExpressionStatement	srcw = ( sljit_ub ) srcw	1339:4:42436:42457	1031973	1	True				
ANR	1032239	AssignmentExpression	srcw = ( sljit_ub ) srcw		1031973	0		=			
ANR	1032240	Identifier	srcw		1031973	0					
ANR	1032241	CastExpression	( sljit_ub ) srcw		1031973	1					
ANR	1032242	CastTarget	sljit_ub		1031973	0					
ANR	1032243	Identifier	srcw		1031973	1					
ANR	1032244	BreakStatement	break ;	1340:3:42462:42467	1031973	35	True				
ANR	1032245	Label	case SLJIT_MOVU_SB :	1341:2:42471:42489	1031973	36	True				
ANR	1032246	Identifier	SLJIT_MOVU_SB		1031973	0					
ANR	1032247	ExpressionStatement	flags = BYTE_SIZE | SIGNED | UPDATE	1342:3:42494:42529	1031973	37	True				
ANR	1032248	AssignmentExpression	flags = BYTE_SIZE | SIGNED | UPDATE		1031973	0		=			
ANR	1032249	Identifier	flags		1031973	0					
ANR	1032250	InclusiveOrExpression	BYTE_SIZE | SIGNED | UPDATE		1031973	1		|			
ANR	1032251	Identifier	BYTE_SIZE		1031973	0					
ANR	1032252	InclusiveOrExpression	SIGNED | UPDATE		1031973	1		|			
ANR	1032253	Identifier	SIGNED		1031973	0					
ANR	1032254	Identifier	UPDATE		1031973	1					
ANR	1032255	IfStatement	if ( src & SLJIT_IMM )		1031973	38					
ANR	1032256	Condition	src & SLJIT_IMM	1343:7:42538:42552	1031973	0	True				
ANR	1032257	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032258	Identifier	src		1031973	0					
ANR	1032259	Identifier	SLJIT_IMM		1031973	1					
ANR	1032260	ExpressionStatement	srcw = ( sljit_sb ) srcw	1344:4:42559:42580	1031973	1	True				
ANR	1032261	AssignmentExpression	srcw = ( sljit_sb ) srcw		1031973	0		=			
ANR	1032262	Identifier	srcw		1031973	0					
ANR	1032263	CastExpression	( sljit_sb ) srcw		1031973	1					
ANR	1032264	CastTarget	sljit_sb		1031973	0					
ANR	1032265	Identifier	srcw		1031973	1					
ANR	1032266	BreakStatement	break ;	1345:3:42585:42590	1031973	39	True				
ANR	1032267	Label	case SLJIT_MOVU_UH :	1346:2:42594:42612	1031973	40	True				
ANR	1032268	Identifier	SLJIT_MOVU_UH		1031973	0					
ANR	1032269	ExpressionStatement	flags = HALF_SIZE | UPDATE	1347:3:42617:42643	1031973	41	True				
ANR	1032270	AssignmentExpression	flags = HALF_SIZE | UPDATE		1031973	0		=			
ANR	1032271	Identifier	flags		1031973	0					
ANR	1032272	InclusiveOrExpression	HALF_SIZE | UPDATE		1031973	1		|			
ANR	1032273	Identifier	HALF_SIZE		1031973	0					
ANR	1032274	Identifier	UPDATE		1031973	1					
ANR	1032275	IfStatement	if ( src & SLJIT_IMM )		1031973	42					
ANR	1032276	Condition	src & SLJIT_IMM	1348:7:42652:42666	1031973	0	True				
ANR	1032277	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032278	Identifier	src		1031973	0					
ANR	1032279	Identifier	SLJIT_IMM		1031973	1					
ANR	1032280	ExpressionStatement	srcw = ( sljit_uh ) srcw	1349:4:42673:42694	1031973	1	True				
ANR	1032281	AssignmentExpression	srcw = ( sljit_uh ) srcw		1031973	0		=			
ANR	1032282	Identifier	srcw		1031973	0					
ANR	1032283	CastExpression	( sljit_uh ) srcw		1031973	1					
ANR	1032284	CastTarget	sljit_uh		1031973	0					
ANR	1032285	Identifier	srcw		1031973	1					
ANR	1032286	BreakStatement	break ;	1350:3:42699:42704	1031973	43	True				
ANR	1032287	Label	case SLJIT_MOVU_SH :	1351:2:42708:42726	1031973	44	True				
ANR	1032288	Identifier	SLJIT_MOVU_SH		1031973	0					
ANR	1032289	ExpressionStatement	flags = HALF_SIZE | SIGNED | UPDATE	1352:3:42731:42766	1031973	45	True				
ANR	1032290	AssignmentExpression	flags = HALF_SIZE | SIGNED | UPDATE		1031973	0		=			
ANR	1032291	Identifier	flags		1031973	0					
ANR	1032292	InclusiveOrExpression	HALF_SIZE | SIGNED | UPDATE		1031973	1		|			
ANR	1032293	Identifier	HALF_SIZE		1031973	0					
ANR	1032294	InclusiveOrExpression	SIGNED | UPDATE		1031973	1		|			
ANR	1032295	Identifier	SIGNED		1031973	0					
ANR	1032296	Identifier	UPDATE		1031973	1					
ANR	1032297	IfStatement	if ( src & SLJIT_IMM )		1031973	46					
ANR	1032298	Condition	src & SLJIT_IMM	1353:7:42775:42789	1031973	0	True				
ANR	1032299	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032300	Identifier	src		1031973	0					
ANR	1032301	Identifier	SLJIT_IMM		1031973	1					
ANR	1032302	ExpressionStatement	srcw = ( sljit_sh ) srcw	1354:4:42796:42817	1031973	1	True				
ANR	1032303	AssignmentExpression	srcw = ( sljit_sh ) srcw		1031973	0		=			
ANR	1032304	Identifier	srcw		1031973	0					
ANR	1032305	CastExpression	( sljit_sh ) srcw		1031973	1					
ANR	1032306	CastTarget	sljit_sh		1031973	0					
ANR	1032307	Identifier	srcw		1031973	1					
ANR	1032308	BreakStatement	break ;	1355:3:42822:42827	1031973	47	True				
ANR	1032309	Label	case SLJIT_MOVU_UI :	1356:2:42831:42849	1031973	48	True				
ANR	1032310	Identifier	SLJIT_MOVU_UI		1031973	0					
ANR	1032311	ExpressionStatement	flags = INT_SIZE | UPDATE	1357:3:42854:42879	1031973	49	True				
ANR	1032312	AssignmentExpression	flags = INT_SIZE | UPDATE		1031973	0		=			
ANR	1032313	Identifier	flags		1031973	0					
ANR	1032314	InclusiveOrExpression	INT_SIZE | UPDATE		1031973	1		|			
ANR	1032315	Identifier	INT_SIZE		1031973	0					
ANR	1032316	Identifier	UPDATE		1031973	1					
ANR	1032317	IfStatement	if ( src & SLJIT_IMM )		1031973	50					
ANR	1032318	Condition	src & SLJIT_IMM	1358:7:42888:42902	1031973	0	True				
ANR	1032319	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032320	Identifier	src		1031973	0					
ANR	1032321	Identifier	SLJIT_IMM		1031973	1					
ANR	1032322	ExpressionStatement	srcw = ( sljit_ui ) srcw	1359:4:42909:42930	1031973	1	True				
ANR	1032323	AssignmentExpression	srcw = ( sljit_ui ) srcw		1031973	0		=			
ANR	1032324	Identifier	srcw		1031973	0					
ANR	1032325	CastExpression	( sljit_ui ) srcw		1031973	1					
ANR	1032326	CastTarget	sljit_ui		1031973	0					
ANR	1032327	Identifier	srcw		1031973	1					
ANR	1032328	BreakStatement	break ;	1360:3:42935:42940	1031973	51	True				
ANR	1032329	Label	case SLJIT_MOVU_SI :	1361:2:42944:42962	1031973	52	True				
ANR	1032330	Identifier	SLJIT_MOVU_SI		1031973	0					
ANR	1032331	ExpressionStatement	flags = INT_SIZE | SIGNED | UPDATE	1362:3:42967:43001	1031973	53	True				
ANR	1032332	AssignmentExpression	flags = INT_SIZE | SIGNED | UPDATE		1031973	0		=			
ANR	1032333	Identifier	flags		1031973	0					
ANR	1032334	InclusiveOrExpression	INT_SIZE | SIGNED | UPDATE		1031973	1		|			
ANR	1032335	Identifier	INT_SIZE		1031973	0					
ANR	1032336	InclusiveOrExpression	SIGNED | UPDATE		1031973	1		|			
ANR	1032337	Identifier	SIGNED		1031973	0					
ANR	1032338	Identifier	UPDATE		1031973	1					
ANR	1032339	IfStatement	if ( src & SLJIT_IMM )		1031973	54					
ANR	1032340	Condition	src & SLJIT_IMM	1363:7:43010:43024	1031973	0	True				
ANR	1032341	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032342	Identifier	src		1031973	0					
ANR	1032343	Identifier	SLJIT_IMM		1031973	1					
ANR	1032344	ExpressionStatement	srcw = ( sljit_si ) srcw	1364:4:43031:43052	1031973	1	True				
ANR	1032345	AssignmentExpression	srcw = ( sljit_si ) srcw		1031973	0		=			
ANR	1032346	Identifier	srcw		1031973	0					
ANR	1032347	CastExpression	( sljit_si ) srcw		1031973	1					
ANR	1032348	CastTarget	sljit_si		1031973	0					
ANR	1032349	Identifier	srcw		1031973	1					
ANR	1032350	BreakStatement	break ;	1365:3:43057:43062	1031973	55	True				
ANR	1032351	Label	default :	1366:2:43066:43073	1031973	56	True				
ANR	1032352	Identifier	default		1031973	0					
ANR	1032353	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1367:3:43078:43097	1031973	57	True				
ANR	1032354	CallExpression	SLJIT_ASSERT_STOP ( )		1031973	0					
ANR	1032355	Callee	SLJIT_ASSERT_STOP		1031973	0					
ANR	1032356	Identifier	SLJIT_ASSERT_STOP		1031973	0					
ANR	1032357	ArgumentList			1031973	1					
ANR	1032358	ExpressionStatement	flags = 0	1368:3:43102:43111	1031973	58	True				
ANR	1032359	AssignmentExpression	flags = 0		1031973	0		=			
ANR	1032360	Identifier	flags		1031973	0					
ANR	1032361	PrimaryExpression	0		1031973	1					
ANR	1032362	BreakStatement	break ;	1369:3:43116:43121	1031973	59	True				
ANR	1032363	IfStatement	if ( src & SLJIT_IMM )		1031973	1					
ANR	1032364	Condition	src & SLJIT_IMM	1372:6:43134:43148	1031973	0	True				
ANR	1032365	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032366	Identifier	src		1031973	0					
ANR	1032367	Identifier	SLJIT_IMM		1031973	1					
ANR	1032368	ExpressionStatement	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw ) )"	1373:3:43154:43229	1031973	1	True				
ANR	1032369	CallExpression	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw ) )"		1031973	0					
ANR	1032370	Callee	FAIL_IF		1031973	0					
ANR	1032371	Identifier	FAIL_IF		1031973	0					
ANR	1032372	ArgumentList	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1031973	1					
ANR	1032373	Argument	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1031973	0					
ANR	1032374	CallExpression	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1031973	0					
ANR	1032375	Callee	emit_op_imm		1031973	0					
ANR	1032376	Identifier	emit_op_imm		1031973	0					
ANR	1032377	ArgumentList	compiler		1031973	1					
ANR	1032378	Argument	compiler		1031973	0					
ANR	1032379	Identifier	compiler		1031973	0					
ANR	1032380	Argument	SLJIT_MOV | ARG2_IMM		1031973	1					
ANR	1032381	InclusiveOrExpression	SLJIT_MOV | ARG2_IMM		1031973	0		|			
ANR	1032382	Identifier	SLJIT_MOV		1031973	0					
ANR	1032383	Identifier	ARG2_IMM		1031973	1					
ANR	1032384	Argument	dst_r		1031973	2					
ANR	1032385	Identifier	dst_r		1031973	0					
ANR	1032386	Argument	TMP_REG1		1031973	3					
ANR	1032387	Identifier	TMP_REG1		1031973	0					
ANR	1032388	Argument	srcw		1031973	4					
ANR	1032389	Identifier	srcw		1031973	0					
ANR	1032390	ElseStatement	else		1031973	0					
ANR	1032391	IfStatement	if ( src & SLJIT_MEM )		1031973	0					
ANR	1032392	Condition	src & SLJIT_MEM	1374:11:43242:43256	1031973	0	True				
ANR	1032393	BitAndExpression	src & SLJIT_MEM		1031973	0		&			
ANR	1032394	Identifier	src		1031973	0					
ANR	1032395	Identifier	SLJIT_MEM		1031973	1					
ANR	1032396	CompoundStatement		94:28:2113:2113	1031973	1					
ANR	1032397	IfStatement	"if ( getput_arg_fast ( compiler , flags , dst_r , src , srcw ) )"		1031973	0					
ANR	1032398	Condition	"getput_arg_fast ( compiler , flags , dst_r , src , srcw )"	1375:7:43268:43317	1031973	0	True				
ANR	1032399	CallExpression	"getput_arg_fast ( compiler , flags , dst_r , src , srcw )"		1031973	0					
ANR	1032400	Callee	getput_arg_fast		1031973	0					
ANR	1032401	Identifier	getput_arg_fast		1031973	0					
ANR	1032402	ArgumentList	compiler		1031973	1					
ANR	1032403	Argument	compiler		1031973	0					
ANR	1032404	Identifier	compiler		1031973	0					
ANR	1032405	Argument	flags		1031973	1					
ANR	1032406	Identifier	flags		1031973	0					
ANR	1032407	Argument	dst_r		1031973	2					
ANR	1032408	Identifier	dst_r		1031973	0					
ANR	1032409	Argument	src		1031973	3					
ANR	1032410	Identifier	src		1031973	0					
ANR	1032411	Argument	srcw		1031973	4					
ANR	1032412	Identifier	srcw		1031973	0					
ANR	1032413	ExpressionStatement	FAIL_IF ( compiler -> error )	1376:4:43324:43348	1031973	1	True				
ANR	1032414	CallExpression	FAIL_IF ( compiler -> error )		1031973	0					
ANR	1032415	Callee	FAIL_IF		1031973	0					
ANR	1032416	Identifier	FAIL_IF		1031973	0					
ANR	1032417	ArgumentList	compiler -> error		1031973	1					
ANR	1032418	Argument	compiler -> error		1031973	0					
ANR	1032419	PtrMemberAccess	compiler -> error		1031973	0					
ANR	1032420	Identifier	compiler		1031973	0					
ANR	1032421	Identifier	error		1031973	1					
ANR	1032422	ElseStatement	else		1031973	0					
ANR	1032423	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw ) )"	1378:4:43362:43427	1031973	0	True				
ANR	1032424	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw ) )"		1031973	0					
ANR	1032425	Callee	FAIL_IF		1031973	0					
ANR	1032426	Identifier	FAIL_IF		1031973	0					
ANR	1032427	ArgumentList	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1031973	1					
ANR	1032428	Argument	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1031973	0					
ANR	1032429	CallExpression	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1031973	0					
ANR	1032430	Callee	getput_arg		1031973	0					
ANR	1032431	Identifier	getput_arg		1031973	0					
ANR	1032432	ArgumentList	compiler		1031973	1					
ANR	1032433	Argument	compiler		1031973	0					
ANR	1032434	Identifier	compiler		1031973	0					
ANR	1032435	Argument	flags		1031973	1					
ANR	1032436	Identifier	flags		1031973	0					
ANR	1032437	Argument	dst_r		1031973	2					
ANR	1032438	Identifier	dst_r		1031973	0					
ANR	1032439	Argument	src		1031973	3					
ANR	1032440	Identifier	src		1031973	0					
ANR	1032441	Argument	srcw		1031973	4					
ANR	1032442	Identifier	srcw		1031973	0					
ANR	1032443	Argument	dst		1031973	5					
ANR	1032444	Identifier	dst		1031973	0					
ANR	1032445	Argument	dstw		1031973	6					
ANR	1032446	Identifier	dstw		1031973	0					
ANR	1032447	ElseStatement	else		1031973	0					
ANR	1032448	CompoundStatement		99:9:2292:2292	1031973	0					
ANR	1032449	IfStatement	if ( dst_r != TMP_REG1 )		1031973	0					
ANR	1032450	Condition	dst_r != TMP_REG1	1380:7:43447:43463	1031973	0	True				
ANR	1032451	EqualityExpression	dst_r != TMP_REG1		1031973	0		!=			
ANR	1032452	Identifier	dst_r		1031973	0					
ANR	1032453	Identifier	TMP_REG1		1031973	1					
ANR	1032454	ReturnStatement	"return emit_op_imm ( compiler , op | ( ( op_flags & SLJIT_INT_OP ) ? INT_OP : 0 ) , dst_r , TMP_REG1 , src ) ;"	1381:4:43470:43567	1031973	1	True				
ANR	1032455	CallExpression	"emit_op_imm ( compiler , op | ( ( op_flags & SLJIT_INT_OP ) ? INT_OP : 0 ) , dst_r , TMP_REG1 , src )"		1031973	0					
ANR	1032456	Callee	emit_op_imm		1031973	0					
ANR	1032457	Identifier	emit_op_imm		1031973	0					
ANR	1032458	ArgumentList	compiler		1031973	1					
ANR	1032459	Argument	compiler		1031973	0					
ANR	1032460	Identifier	compiler		1031973	0					
ANR	1032461	Argument	op | ( ( op_flags & SLJIT_INT_OP ) ? INT_OP : 0 )		1031973	1					
ANR	1032462	InclusiveOrExpression	op | ( ( op_flags & SLJIT_INT_OP ) ? INT_OP : 0 )		1031973	0		|			
ANR	1032463	Identifier	op		1031973	0					
ANR	1032464	ConditionalExpression	( op_flags & SLJIT_INT_OP ) ? INT_OP : 0		1031973	1					
ANR	1032465	Condition	op_flags & SLJIT_INT_OP		1031973	0					
ANR	1032466	BitAndExpression	op_flags & SLJIT_INT_OP		1031973	0		&			
ANR	1032467	Identifier	op_flags		1031973	0					
ANR	1032468	Identifier	SLJIT_INT_OP		1031973	1					
ANR	1032469	Identifier	INT_OP		1031973	1					
ANR	1032470	PrimaryExpression	0		1031973	2					
ANR	1032471	Argument	dst_r		1031973	2					
ANR	1032472	Identifier	dst_r		1031973	0					
ANR	1032473	Argument	TMP_REG1		1031973	3					
ANR	1032474	Identifier	TMP_REG1		1031973	0					
ANR	1032475	Argument	src		1031973	4					
ANR	1032476	Identifier	src		1031973	0					
ANR	1032477	ExpressionStatement	dst_r = src	1382:3:43572:43583	1031973	1	True				
ANR	1032478	AssignmentExpression	dst_r = src		1031973	0		=			
ANR	1032479	Identifier	dst_r		1031973	0					
ANR	1032480	Identifier	src		1031973	1					
ANR	1032481	IfStatement	if ( dst & SLJIT_MEM )		1031973	2					
ANR	1032482	Condition	dst & SLJIT_MEM	1385:6:43596:43610	1031973	0	True				
ANR	1032483	BitAndExpression	dst & SLJIT_MEM		1031973	0		&			
ANR	1032484	Identifier	dst		1031973	0					
ANR	1032485	Identifier	SLJIT_MEM		1031973	1					
ANR	1032486	CompoundStatement		105:23:2467:2467	1031973	1					
ANR	1032487	IfStatement	"if ( getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw ) )"		1031973	0					
ANR	1032488	Condition	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"	1386:7:43622:43679	1031973	0	True				
ANR	1032489	CallExpression	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"		1031973	0					
ANR	1032490	Callee	getput_arg_fast		1031973	0					
ANR	1032491	Identifier	getput_arg_fast		1031973	0					
ANR	1032492	ArgumentList	compiler		1031973	1					
ANR	1032493	Argument	compiler		1031973	0					
ANR	1032494	Identifier	compiler		1031973	0					
ANR	1032495	Argument	flags | STORE		1031973	1					
ANR	1032496	InclusiveOrExpression	flags | STORE		1031973	0		|			
ANR	1032497	Identifier	flags		1031973	0					
ANR	1032498	Identifier	STORE		1031973	1					
ANR	1032499	Argument	dst_r		1031973	2					
ANR	1032500	Identifier	dst_r		1031973	0					
ANR	1032501	Argument	dst		1031973	3					
ANR	1032502	Identifier	dst		1031973	0					
ANR	1032503	Argument	dstw		1031973	4					
ANR	1032504	Identifier	dstw		1031973	0					
ANR	1032505	ReturnStatement	return compiler -> error ;	1387:4:43686:43708	1031973	1	True				
ANR	1032506	PtrMemberAccess	compiler -> error		1031973	0					
ANR	1032507	Identifier	compiler		1031973	0					
ANR	1032508	Identifier	error		1031973	1					
ANR	1032509	ElseStatement	else		1031973	0					
ANR	1032510	ReturnStatement	"return getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 ) ;"	1389:4:43722:43788	1031973	0	True				
ANR	1032511	CallExpression	"getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 )"		1031973	0					
ANR	1032512	Callee	getput_arg		1031973	0					
ANR	1032513	Identifier	getput_arg		1031973	0					
ANR	1032514	ArgumentList	compiler		1031973	1					
ANR	1032515	Argument	compiler		1031973	0					
ANR	1032516	Identifier	compiler		1031973	0					
ANR	1032517	Argument	flags | STORE		1031973	1					
ANR	1032518	InclusiveOrExpression	flags | STORE		1031973	0		|			
ANR	1032519	Identifier	flags		1031973	0					
ANR	1032520	Identifier	STORE		1031973	1					
ANR	1032521	Argument	dst_r		1031973	2					
ANR	1032522	Identifier	dst_r		1031973	0					
ANR	1032523	Argument	dst		1031973	3					
ANR	1032524	Identifier	dst		1031973	0					
ANR	1032525	Argument	dstw		1031973	4					
ANR	1032526	Identifier	dstw		1031973	0					
ANR	1032527	Argument	0		1031973	5					
ANR	1032528	PrimaryExpression	0		1031973	0					
ANR	1032529	Argument	0		1031973	6					
ANR	1032530	PrimaryExpression	0		1031973	0					
ANR	1032531	ReturnStatement	return SLJIT_SUCCESS ;	1391:2:43796:43816	1031973	3	True				
ANR	1032532	Identifier	SLJIT_SUCCESS		1031973	0					
ANR	1032533	ExpressionStatement	flags = GET_FLAGS ( op_flags ) ? SET_FLAGS : 0	1394:1:43823:43866	1031973	11	True				
ANR	1032534	AssignmentExpression	flags = GET_FLAGS ( op_flags ) ? SET_FLAGS : 0		1031973	0		=			
ANR	1032535	Identifier	flags		1031973	0					
ANR	1032536	ConditionalExpression	GET_FLAGS ( op_flags ) ? SET_FLAGS : 0		1031973	1					
ANR	1032537	Condition	GET_FLAGS ( op_flags )		1031973	0					
ANR	1032538	CallExpression	GET_FLAGS ( op_flags )		1031973	0					
ANR	1032539	Callee	GET_FLAGS		1031973	0					
ANR	1032540	Identifier	GET_FLAGS		1031973	0					
ANR	1032541	ArgumentList	op_flags		1031973	1					
ANR	1032542	Argument	op_flags		1031973	0					
ANR	1032543	Identifier	op_flags		1031973	0					
ANR	1032544	Identifier	SET_FLAGS		1031973	1					
ANR	1032545	PrimaryExpression	0		1031973	2					
ANR	1032546	ExpressionStatement	mem_flags = WORD_SIZE	1395:1:43869:43890	1031973	12	True				
ANR	1032547	AssignmentExpression	mem_flags = WORD_SIZE		1031973	0		=			
ANR	1032548	Identifier	mem_flags		1031973	0					
ANR	1032549	Identifier	WORD_SIZE		1031973	1					
ANR	1032550	IfStatement	if ( op_flags & SLJIT_INT_OP )		1031973	13					
ANR	1032551	Condition	op_flags & SLJIT_INT_OP	1396:5:43897:43919	1031973	0	True				
ANR	1032552	BitAndExpression	op_flags & SLJIT_INT_OP		1031973	0		&			
ANR	1032553	Identifier	op_flags		1031973	0					
ANR	1032554	Identifier	SLJIT_INT_OP		1031973	1					
ANR	1032555	CompoundStatement		116:30:2776:2776	1031973	1					
ANR	1032556	ExpressionStatement	flags |= INT_OP	1397:2:43926:43941	1031973	0	True				
ANR	1032557	AssignmentExpression	flags |= INT_OP		1031973	0		|=			
ANR	1032558	Identifier	flags		1031973	0					
ANR	1032559	Identifier	INT_OP		1031973	1					
ANR	1032560	ExpressionStatement	mem_flags = INT_SIZE	1398:2:43945:43965	1031973	1	True				
ANR	1032561	AssignmentExpression	mem_flags = INT_SIZE		1031973	0		=			
ANR	1032562	Identifier	mem_flags		1031973	0					
ANR	1032563	Identifier	INT_SIZE		1031973	1					
ANR	1032564	IfStatement	if ( dst == SLJIT_UNUSED )		1031973	14					
ANR	1032565	Condition	dst == SLJIT_UNUSED	1401:5:43976:43994	1031973	0	True				
ANR	1032566	EqualityExpression	dst == SLJIT_UNUSED		1031973	0		==			
ANR	1032567	Identifier	dst		1031973	0					
ANR	1032568	Identifier	SLJIT_UNUSED		1031973	1					
ANR	1032569	ExpressionStatement	flags |= UNUSED_RETURN	1402:2:43999:44021	1031973	1	True				
ANR	1032570	AssignmentExpression	flags |= UNUSED_RETURN		1031973	0		|=			
ANR	1032571	Identifier	flags		1031973	0					
ANR	1032572	Identifier	UNUSED_RETURN		1031973	1					
ANR	1032573	IfStatement	if ( src & SLJIT_MEM )		1031973	15					
ANR	1032574	Condition	src & SLJIT_MEM	1404:5:44029:44043	1031973	0	True				
ANR	1032575	BitAndExpression	src & SLJIT_MEM		1031973	0		&			
ANR	1032576	Identifier	src		1031973	0					
ANR	1032577	Identifier	SLJIT_MEM		1031973	1					
ANR	1032578	CompoundStatement		124:22:2900:2900	1031973	1					
ANR	1032579	IfStatement	"if ( getput_arg_fast ( compiler , mem_flags , TMP_REG2 , src , srcw ) )"		1031973	0					
ANR	1032580	Condition	"getput_arg_fast ( compiler , mem_flags , TMP_REG2 , src , srcw )"	1405:6:44054:44110	1031973	0	True				
ANR	1032581	CallExpression	"getput_arg_fast ( compiler , mem_flags , TMP_REG2 , src , srcw )"		1031973	0					
ANR	1032582	Callee	getput_arg_fast		1031973	0					
ANR	1032583	Identifier	getput_arg_fast		1031973	0					
ANR	1032584	ArgumentList	compiler		1031973	1					
ANR	1032585	Argument	compiler		1031973	0					
ANR	1032586	Identifier	compiler		1031973	0					
ANR	1032587	Argument	mem_flags		1031973	1					
ANR	1032588	Identifier	mem_flags		1031973	0					
ANR	1032589	Argument	TMP_REG2		1031973	2					
ANR	1032590	Identifier	TMP_REG2		1031973	0					
ANR	1032591	Argument	src		1031973	3					
ANR	1032592	Identifier	src		1031973	0					
ANR	1032593	Argument	srcw		1031973	4					
ANR	1032594	Identifier	srcw		1031973	0					
ANR	1032595	ExpressionStatement	FAIL_IF ( compiler -> error )	1406:3:44116:44140	1031973	1	True				
ANR	1032596	CallExpression	FAIL_IF ( compiler -> error )		1031973	0					
ANR	1032597	Callee	FAIL_IF		1031973	0					
ANR	1032598	Identifier	FAIL_IF		1031973	0					
ANR	1032599	ArgumentList	compiler -> error		1031973	1					
ANR	1032600	Argument	compiler -> error		1031973	0					
ANR	1032601	PtrMemberAccess	compiler -> error		1031973	0					
ANR	1032602	Identifier	compiler		1031973	0					
ANR	1032603	Identifier	error		1031973	1					
ANR	1032604	ElseStatement	else		1031973	0					
ANR	1032605	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src , srcw , dst , dstw ) )"	1408:3:44152:44224	1031973	0	True				
ANR	1032606	CallExpression	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src , srcw , dst , dstw ) )"		1031973	0					
ANR	1032607	Callee	FAIL_IF		1031973	0					
ANR	1032608	Identifier	FAIL_IF		1031973	0					
ANR	1032609	ArgumentList	"getput_arg ( compiler , mem_flags , TMP_REG2 , src , srcw , dst , dstw )"		1031973	1					
ANR	1032610	Argument	"getput_arg ( compiler , mem_flags , TMP_REG2 , src , srcw , dst , dstw )"		1031973	0					
ANR	1032611	CallExpression	"getput_arg ( compiler , mem_flags , TMP_REG2 , src , srcw , dst , dstw )"		1031973	0					
ANR	1032612	Callee	getput_arg		1031973	0					
ANR	1032613	Identifier	getput_arg		1031973	0					
ANR	1032614	ArgumentList	compiler		1031973	1					
ANR	1032615	Argument	compiler		1031973	0					
ANR	1032616	Identifier	compiler		1031973	0					
ANR	1032617	Argument	mem_flags		1031973	1					
ANR	1032618	Identifier	mem_flags		1031973	0					
ANR	1032619	Argument	TMP_REG2		1031973	2					
ANR	1032620	Identifier	TMP_REG2		1031973	0					
ANR	1032621	Argument	src		1031973	3					
ANR	1032622	Identifier	src		1031973	0					
ANR	1032623	Argument	srcw		1031973	4					
ANR	1032624	Identifier	srcw		1031973	0					
ANR	1032625	Argument	dst		1031973	5					
ANR	1032626	Identifier	dst		1031973	0					
ANR	1032627	Argument	dstw		1031973	6					
ANR	1032628	Identifier	dstw		1031973	0					
ANR	1032629	ExpressionStatement	src = TMP_REG2	1409:2:44228:44242	1031973	1	True				
ANR	1032630	AssignmentExpression	src = TMP_REG2		1031973	0		=			
ANR	1032631	Identifier	src		1031973	0					
ANR	1032632	Identifier	TMP_REG2		1031973	1					
ANR	1032633	IfStatement	if ( src & SLJIT_IMM )		1031973	16					
ANR	1032634	Condition	src & SLJIT_IMM	1412:5:44253:44267	1031973	0	True				
ANR	1032635	BitAndExpression	src & SLJIT_IMM		1031973	0		&			
ANR	1032636	Identifier	src		1031973	0					
ANR	1032637	Identifier	SLJIT_IMM		1031973	1					
ANR	1032638	CompoundStatement		132:22:3124:3124	1031973	1					
ANR	1032639	ExpressionStatement	flags |= ARG2_IMM	1413:2:44274:44291	1031973	0	True				
ANR	1032640	AssignmentExpression	flags |= ARG2_IMM		1031973	0		|=			
ANR	1032641	Identifier	flags		1031973	0					
ANR	1032642	Identifier	ARG2_IMM		1031973	1					
ANR	1032643	IfStatement	if ( op_flags & SLJIT_INT_OP )		1031973	1					
ANR	1032644	Condition	op_flags & SLJIT_INT_OP	1414:6:44299:44321	1031973	0	True				
ANR	1032645	BitAndExpression	op_flags & SLJIT_INT_OP		1031973	0		&			
ANR	1032646	Identifier	op_flags		1031973	0					
ANR	1032647	Identifier	SLJIT_INT_OP		1031973	1					
ANR	1032648	ExpressionStatement	srcw = ( sljit_si ) srcw	1415:3:44327:44348	1031973	1	True				
ANR	1032649	AssignmentExpression	srcw = ( sljit_si ) srcw		1031973	0		=			
ANR	1032650	Identifier	srcw		1031973	0					
ANR	1032651	CastExpression	( sljit_si ) srcw		1031973	1					
ANR	1032652	CastTarget	sljit_si		1031973	0					
ANR	1032653	Identifier	srcw		1031973	1					
ANR	1032654	ElseStatement	else		1031973	0					
ANR	1032655	ExpressionStatement	srcw = src	1417:2:44360:44370	1031973	0	True				
ANR	1032656	AssignmentExpression	srcw = src		1031973	0		=			
ANR	1032657	Identifier	srcw		1031973	0					
ANR	1032658	Identifier	src		1031973	1					
ANR	1032659	ExpressionStatement	"emit_op_imm ( compiler , flags | op , dst_r , TMP_REG1 , srcw )"	1419:1:44374:44430	1031973	17	True				
ANR	1032660	CallExpression	"emit_op_imm ( compiler , flags | op , dst_r , TMP_REG1 , srcw )"		1031973	0					
ANR	1032661	Callee	emit_op_imm		1031973	0					
ANR	1032662	Identifier	emit_op_imm		1031973	0					
ANR	1032663	ArgumentList	compiler		1031973	1					
ANR	1032664	Argument	compiler		1031973	0					
ANR	1032665	Identifier	compiler		1031973	0					
ANR	1032666	Argument	flags | op		1031973	1					
ANR	1032667	InclusiveOrExpression	flags | op		1031973	0		|			
ANR	1032668	Identifier	flags		1031973	0					
ANR	1032669	Identifier	op		1031973	1					
ANR	1032670	Argument	dst_r		1031973	2					
ANR	1032671	Identifier	dst_r		1031973	0					
ANR	1032672	Argument	TMP_REG1		1031973	3					
ANR	1032673	Identifier	TMP_REG1		1031973	0					
ANR	1032674	Argument	srcw		1031973	4					
ANR	1032675	Identifier	srcw		1031973	0					
ANR	1032676	IfStatement	if ( dst & SLJIT_MEM )		1031973	18					
ANR	1032677	Condition	dst & SLJIT_MEM	1421:5:44438:44452	1031973	0	True				
ANR	1032678	BitAndExpression	dst & SLJIT_MEM		1031973	0		&			
ANR	1032679	Identifier	dst		1031973	0					
ANR	1032680	Identifier	SLJIT_MEM		1031973	1					
ANR	1032681	CompoundStatement		141:22:3309:3309	1031973	1					
ANR	1032682	IfStatement	"if ( getput_arg_fast ( compiler , mem_flags | STORE , dst_r , dst , dstw ) )"		1031973	0					
ANR	1032683	Condition	"getput_arg_fast ( compiler , mem_flags | STORE , dst_r , dst , dstw )"	1422:6:44463:44524	1031973	0	True				
ANR	1032684	CallExpression	"getput_arg_fast ( compiler , mem_flags | STORE , dst_r , dst , dstw )"		1031973	0					
ANR	1032685	Callee	getput_arg_fast		1031973	0					
ANR	1032686	Identifier	getput_arg_fast		1031973	0					
ANR	1032687	ArgumentList	compiler		1031973	1					
ANR	1032688	Argument	compiler		1031973	0					
ANR	1032689	Identifier	compiler		1031973	0					
ANR	1032690	Argument	mem_flags | STORE		1031973	1					
ANR	1032691	InclusiveOrExpression	mem_flags | STORE		1031973	0		|			
ANR	1032692	Identifier	mem_flags		1031973	0					
ANR	1032693	Identifier	STORE		1031973	1					
ANR	1032694	Argument	dst_r		1031973	2					
ANR	1032695	Identifier	dst_r		1031973	0					
ANR	1032696	Argument	dst		1031973	3					
ANR	1032697	Identifier	dst		1031973	0					
ANR	1032698	Argument	dstw		1031973	4					
ANR	1032699	Identifier	dstw		1031973	0					
ANR	1032700	ReturnStatement	return compiler -> error ;	1423:3:44530:44552	1031973	1	True				
ANR	1032701	PtrMemberAccess	compiler -> error		1031973	0					
ANR	1032702	Identifier	compiler		1031973	0					
ANR	1032703	Identifier	error		1031973	1					
ANR	1032704	ElseStatement	else		1031973	0					
ANR	1032705	ReturnStatement	"return getput_arg ( compiler , mem_flags | STORE , dst_r , dst , dstw , 0 , 0 ) ;"	1425:3:44564:44634	1031973	0	True				
ANR	1032706	CallExpression	"getput_arg ( compiler , mem_flags | STORE , dst_r , dst , dstw , 0 , 0 )"		1031973	0					
ANR	1032707	Callee	getput_arg		1031973	0					
ANR	1032708	Identifier	getput_arg		1031973	0					
ANR	1032709	ArgumentList	compiler		1031973	1					
ANR	1032710	Argument	compiler		1031973	0					
ANR	1032711	Identifier	compiler		1031973	0					
ANR	1032712	Argument	mem_flags | STORE		1031973	1					
ANR	1032713	InclusiveOrExpression	mem_flags | STORE		1031973	0		|			
ANR	1032714	Identifier	mem_flags		1031973	0					
ANR	1032715	Identifier	STORE		1031973	1					
ANR	1032716	Argument	dst_r		1031973	2					
ANR	1032717	Identifier	dst_r		1031973	0					
ANR	1032718	Argument	dst		1031973	3					
ANR	1032719	Identifier	dst		1031973	0					
ANR	1032720	Argument	dstw		1031973	4					
ANR	1032721	Identifier	dstw		1031973	0					
ANR	1032722	Argument	0		1031973	5					
ANR	1032723	PrimaryExpression	0		1031973	0					
ANR	1032724	Argument	0		1031973	6					
ANR	1032725	PrimaryExpression	0		1031973	0					
ANR	1032726	ReturnStatement	return SLJIT_SUCCESS ;	1427:1:44640:44660	1031973	19	True				
ANR	1032727	Identifier	SLJIT_SUCCESS		1031973	0					
ANR	1032728	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1031973	1					
ANR	1032729	Identifier	sljit_emit_op1		1031973	2					
ANR	1032730	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1031973	3					
ANR	1032731	Parameter	struct sljit_compiler * compiler	1278:49:41039:41069	1031973	0	True				
ANR	1032732	ParameterType	struct sljit_compiler *		1031973	0					
ANR	1032733	Identifier	compiler		1031973	1					
ANR	1032734	Parameter	sljit_si op	1278:82:41072:41082	1031973	1	True				
ANR	1032735	ParameterType	sljit_si		1031973	0					
ANR	1032736	Identifier	op		1031973	1					
ANR	1032737	Parameter	sljit_si dst	1279:1:41086:41097	1031973	2	True				
ANR	1032738	ParameterType	sljit_si		1031973	0					
ANR	1032739	Identifier	dst		1031973	1					
ANR	1032740	Parameter	sljit_sw dstw	1279:15:41100:41112	1031973	3	True				
ANR	1032741	ParameterType	sljit_sw		1031973	0					
ANR	1032742	Identifier	dstw		1031973	1					
ANR	1032743	Parameter	sljit_si src	1280:1:41116:41127	1031973	4	True				
ANR	1032744	ParameterType	sljit_si		1031973	0					
ANR	1032745	Identifier	src		1031973	1					
ANR	1032746	Parameter	sljit_sw srcw	1280:15:41130:41142	1031973	5	True				
ANR	1032747	ParameterType	sljit_sw		1031973	0					
ANR	1032748	Identifier	srcw		1031973	1					
ANR	1032749	CFGEntryNode	ENTRY		1031973		True				
ANR	1032750	CFGExitNode	EXIT		1031973		True				
ANR	1032751	Symbol	BYTE_SIZE		1031973						
ANR	1032752	Symbol	TMP_REG2		1031973						
ANR	1032753	Symbol	compiler -> cache_argw		1031973						
ANR	1032754	Symbol	TMP_REG1		1031973						
ANR	1032755	Symbol	dst		1031973						
ANR	1032756	Symbol	SLJIT_MOV		1031973						
ANR	1032757	Symbol	SLJIT_MEM		1031973						
ANR	1032758	Symbol	flags		1031973						
ANR	1032759	Symbol	SLOW_IS_REG		1031973						
ANR	1032760	Symbol	UNUSED_RETURN		1031973						
ANR	1032761	Symbol	* compiler		1031973						
ANR	1032762	Symbol	dst_r		1031973						
ANR	1032763	Symbol	GET_OPCODE		1031973						
ANR	1032764	Symbol	GET_FLAGS		1031973						
ANR	1032765	Symbol	GET_ALL_FLAGS		1031973						
ANR	1032766	Symbol	SLJIT_IMM		1031973						
ANR	1032767	Symbol	SIGNED		1031973						
ANR	1032768	Symbol	getput_arg		1031973						
ANR	1032769	Symbol	INT_OP		1031973						
ANR	1032770	Symbol	HALF_SIZE		1031973						
ANR	1032771	Symbol	UPDATE		1031973						
ANR	1032772	Symbol	compiler		1031973						
ANR	1032773	Symbol	emit_op_imm		1031973						
ANR	1032774	Symbol	SLJIT_MOVU_P		1031973						
ANR	1032775	Symbol	op		1031973						
ANR	1032776	Symbol	op_flags		1031973						
ANR	1032777	Symbol	src		1031973						
ANR	1032778	Symbol	check_sljit_emit_op1		1031973						
ANR	1032779	Symbol	INT_SIZE		1031973						
ANR	1032780	Symbol	srcw		1031973						
ANR	1032781	Symbol	compiler -> cache_arg		1031973						
ANR	1032782	Symbol	ARG2_IMM		1031973						
ANR	1032783	Symbol	SLJIT_INT_OP		1031973						
ANR	1032784	Symbol	SLJIT_SUCCESS		1031973						
ANR	1032785	Symbol	SET_FLAGS		1031973						
ANR	1032786	Symbol	mem_flags		1031973						
ANR	1032787	Symbol	SLJIT_UNUSED		1031973						
ANR	1032788	Symbol	STORE		1031973						
ANR	1032789	Symbol	getput_arg_fast		1031973						
ANR	1032790	Symbol	dstw		1031973						
ANR	1032791	Symbol	compiler -> error		1031973						
ANR	1032792	Symbol	WORD_SIZE		1031973						
ANR	1032793	Function	sljit_emit_op2	1430:0:44665:47069							
ANR	1032794	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1032793	0					
ANR	1032795	CompoundStatement		1434:0:44854:47069	1032793	0					
ANR	1032796	IdentifierDeclStatement	"sljit_si dst_r , flags , mem_flags ;"	1435:1:44857:44889	1032793	0	True				
ANR	1032797	IdentifierDecl	dst_r		1032793	0					
ANR	1032798	IdentifierDeclType	sljit_si		1032793	0					
ANR	1032799	Identifier	dst_r		1032793	1					
ANR	1032800	IdentifierDecl	flags		1032793	1					
ANR	1032801	IdentifierDeclType	sljit_si		1032793	0					
ANR	1032802	Identifier	flags		1032793	1					
ANR	1032803	IdentifierDecl	mem_flags		1032793	2					
ANR	1032804	IdentifierDeclType	sljit_si		1032793	0					
ANR	1032805	Identifier	mem_flags		1032793	1					
ANR	1032806	ExpressionStatement	CHECK_ERROR ( )	1437:1:44893:44906	1032793	1	True				
ANR	1032807	CallExpression	CHECK_ERROR ( )		1032793	0					
ANR	1032808	Callee	CHECK_ERROR		1032793	0					
ANR	1032809	Identifier	CHECK_ERROR		1032793	0					
ANR	1032810	ArgumentList			1032793	1					
ANR	1032811	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1438:1:44909:44987	1032793	2	True				
ANR	1032812	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1032793	0					
ANR	1032813	Callee	CHECK		1032793	0					
ANR	1032814	Identifier	CHECK		1032793	0					
ANR	1032815	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1032793	1					
ANR	1032816	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1032793	0					
ANR	1032817	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1032793	0					
ANR	1032818	Callee	check_sljit_emit_op2		1032793	0					
ANR	1032819	Identifier	check_sljit_emit_op2		1032793	0					
ANR	1032820	ArgumentList	compiler		1032793	1					
ANR	1032821	Argument	compiler		1032793	0					
ANR	1032822	Identifier	compiler		1032793	0					
ANR	1032823	Argument	op		1032793	1					
ANR	1032824	Identifier	op		1032793	0					
ANR	1032825	Argument	dst		1032793	2					
ANR	1032826	Identifier	dst		1032793	0					
ANR	1032827	Argument	dstw		1032793	3					
ANR	1032828	Identifier	dstw		1032793	0					
ANR	1032829	Argument	src1		1032793	4					
ANR	1032830	Identifier	src1		1032793	0					
ANR	1032831	Argument	src1w		1032793	5					
ANR	1032832	Identifier	src1w		1032793	0					
ANR	1032833	Argument	src2		1032793	6					
ANR	1032834	Identifier	src2		1032793	0					
ANR	1032835	Argument	src2w		1032793	7					
ANR	1032836	Identifier	src2w		1032793	0					
ANR	1032837	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1439:1:44990:45020	1032793	3	True				
ANR	1032838	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1032793	0					
ANR	1032839	Callee	ADJUST_LOCAL_OFFSET		1032793	0					
ANR	1032840	Identifier	ADJUST_LOCAL_OFFSET		1032793	0					
ANR	1032841	ArgumentList	dst		1032793	1					
ANR	1032842	Argument	dst		1032793	0					
ANR	1032843	Identifier	dst		1032793	0					
ANR	1032844	Argument	dstw		1032793	1					
ANR	1032845	Identifier	dstw		1032793	0					
ANR	1032846	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1440:1:45023:45055	1032793	4	True				
ANR	1032847	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1032793	0					
ANR	1032848	Callee	ADJUST_LOCAL_OFFSET		1032793	0					
ANR	1032849	Identifier	ADJUST_LOCAL_OFFSET		1032793	0					
ANR	1032850	ArgumentList	src1		1032793	1					
ANR	1032851	Argument	src1		1032793	0					
ANR	1032852	Identifier	src1		1032793	0					
ANR	1032853	Argument	src1w		1032793	1					
ANR	1032854	Identifier	src1w		1032793	0					
ANR	1032855	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1441:1:45058:45090	1032793	5	True				
ANR	1032856	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1032793	0					
ANR	1032857	Callee	ADJUST_LOCAL_OFFSET		1032793	0					
ANR	1032858	Identifier	ADJUST_LOCAL_OFFSET		1032793	0					
ANR	1032859	ArgumentList	src2		1032793	1					
ANR	1032860	Argument	src2		1032793	0					
ANR	1032861	Identifier	src2		1032793	0					
ANR	1032862	Argument	src2w		1032793	1					
ANR	1032863	Identifier	src2w		1032793	0					
ANR	1032864	ExpressionStatement	compiler -> cache_arg = 0	1443:1:45094:45117	1032793	6	True				
ANR	1032865	AssignmentExpression	compiler -> cache_arg = 0		1032793	0		=			
ANR	1032866	PtrMemberAccess	compiler -> cache_arg		1032793	0					
ANR	1032867	Identifier	compiler		1032793	0					
ANR	1032868	Identifier	cache_arg		1032793	1					
ANR	1032869	PrimaryExpression	0		1032793	1					
ANR	1032870	ExpressionStatement	compiler -> cache_argw = 0	1444:1:45120:45144	1032793	7	True				
ANR	1032871	AssignmentExpression	compiler -> cache_argw = 0		1032793	0		=			
ANR	1032872	PtrMemberAccess	compiler -> cache_argw		1032793	0					
ANR	1032873	Identifier	compiler		1032793	0					
ANR	1032874	Identifier	cache_argw		1032793	1					
ANR	1032875	PrimaryExpression	0		1032793	1					
ANR	1032876	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	1446:1:45148:45189	1032793	8	True				
ANR	1032877	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1032793	0		=			
ANR	1032878	Identifier	dst_r		1032793	0					
ANR	1032879	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1032793	1					
ANR	1032880	Condition	SLOW_IS_REG ( dst )		1032793	0					
ANR	1032881	CallExpression	SLOW_IS_REG ( dst )		1032793	0					
ANR	1032882	Callee	SLOW_IS_REG		1032793	0					
ANR	1032883	Identifier	SLOW_IS_REG		1032793	0					
ANR	1032884	ArgumentList	dst		1032793	1					
ANR	1032885	Argument	dst		1032793	0					
ANR	1032886	Identifier	dst		1032793	0					
ANR	1032887	Identifier	dst		1032793	1					
ANR	1032888	Identifier	TMP_REG1		1032793	2					
ANR	1032889	ExpressionStatement	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0	1447:1:45192:45229	1032793	9	True				
ANR	1032890	AssignmentExpression	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1032793	0		=			
ANR	1032891	Identifier	flags		1032793	0					
ANR	1032892	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1032793	1					
ANR	1032893	Condition	GET_FLAGS ( op )		1032793	0					
ANR	1032894	CallExpression	GET_FLAGS ( op )		1032793	0					
ANR	1032895	Callee	GET_FLAGS		1032793	0					
ANR	1032896	Identifier	GET_FLAGS		1032793	0					
ANR	1032897	ArgumentList	op		1032793	1					
ANR	1032898	Argument	op		1032793	0					
ANR	1032899	Identifier	op		1032793	0					
ANR	1032900	Identifier	SET_FLAGS		1032793	1					
ANR	1032901	PrimaryExpression	0		1032793	2					
ANR	1032902	ExpressionStatement	mem_flags = WORD_SIZE	1448:1:45232:45253	1032793	10	True				
ANR	1032903	AssignmentExpression	mem_flags = WORD_SIZE		1032793	0		=			
ANR	1032904	Identifier	mem_flags		1032793	0					
ANR	1032905	Identifier	WORD_SIZE		1032793	1					
ANR	1032906	IfStatement	if ( op & SLJIT_INT_OP )		1032793	11					
ANR	1032907	Condition	op & SLJIT_INT_OP	1449:5:45260:45276	1032793	0	True				
ANR	1032908	BitAndExpression	op & SLJIT_INT_OP		1032793	0		&			
ANR	1032909	Identifier	op		1032793	0					
ANR	1032910	Identifier	SLJIT_INT_OP		1032793	1					
ANR	1032911	CompoundStatement		16:24:424:424	1032793	1					
ANR	1032912	ExpressionStatement	flags |= INT_OP	1450:2:45283:45298	1032793	0	True				
ANR	1032913	AssignmentExpression	flags |= INT_OP		1032793	0		|=			
ANR	1032914	Identifier	flags		1032793	0					
ANR	1032915	Identifier	INT_OP		1032793	1					
ANR	1032916	ExpressionStatement	mem_flags = INT_SIZE	1451:2:45302:45322	1032793	1	True				
ANR	1032917	AssignmentExpression	mem_flags = INT_SIZE		1032793	0		=			
ANR	1032918	Identifier	mem_flags		1032793	0					
ANR	1032919	Identifier	INT_SIZE		1032793	1					
ANR	1032920	IfStatement	if ( dst == SLJIT_UNUSED )		1032793	12					
ANR	1032921	Condition	dst == SLJIT_UNUSED	1454:5:45333:45351	1032793	0	True				
ANR	1032922	EqualityExpression	dst == SLJIT_UNUSED		1032793	0		==			
ANR	1032923	Identifier	dst		1032793	0					
ANR	1032924	Identifier	SLJIT_UNUSED		1032793	1					
ANR	1032925	ExpressionStatement	flags |= UNUSED_RETURN	1455:2:45356:45378	1032793	1	True				
ANR	1032926	AssignmentExpression	flags |= UNUSED_RETURN		1032793	0		|=			
ANR	1032927	Identifier	flags		1032793	0					
ANR	1032928	Identifier	UNUSED_RETURN		1032793	1					
ANR	1032929	IfStatement	"if ( ( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , mem_flags | STORE | ARG_TEST , TMP_REG1 , dst , dstw ) )"		1032793	13					
ANR	1032930	Condition	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , mem_flags | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"	1457:5:45386:45483	1032793	0	True				
ANR	1032931	AndExpression	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , mem_flags | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1032793	0		&&			
ANR	1032932	BitAndExpression	dst & SLJIT_MEM		1032793	0		&			
ANR	1032933	Identifier	dst		1032793	0					
ANR	1032934	Identifier	SLJIT_MEM		1032793	1					
ANR	1032935	UnaryOperationExpression	"! getput_arg_fast ( compiler , mem_flags | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1032793	1					
ANR	1032936	UnaryOperator	!		1032793	0					
ANR	1032937	CallExpression	"getput_arg_fast ( compiler , mem_flags | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1032793	1					
ANR	1032938	Callee	getput_arg_fast		1032793	0					
ANR	1032939	Identifier	getput_arg_fast		1032793	0					
ANR	1032940	ArgumentList	compiler		1032793	1					
ANR	1032941	Argument	compiler		1032793	0					
ANR	1032942	Identifier	compiler		1032793	0					
ANR	1032943	Argument	mem_flags | STORE | ARG_TEST		1032793	1					
ANR	1032944	InclusiveOrExpression	mem_flags | STORE | ARG_TEST		1032793	0		|			
ANR	1032945	Identifier	mem_flags		1032793	0					
ANR	1032946	InclusiveOrExpression	STORE | ARG_TEST		1032793	1		|			
ANR	1032947	Identifier	STORE		1032793	0					
ANR	1032948	Identifier	ARG_TEST		1032793	1					
ANR	1032949	Argument	TMP_REG1		1032793	2					
ANR	1032950	Identifier	TMP_REG1		1032793	0					
ANR	1032951	Argument	dst		1032793	3					
ANR	1032952	Identifier	dst		1032793	0					
ANR	1032953	Argument	dstw		1032793	4					
ANR	1032954	Identifier	dstw		1032793	0					
ANR	1032955	ExpressionStatement	flags |= SLOW_DEST	1458:2:45488:45506	1032793	1	True				
ANR	1032956	AssignmentExpression	flags |= SLOW_DEST		1032793	0		|=			
ANR	1032957	Identifier	flags		1032793	0					
ANR	1032958	Identifier	SLOW_DEST		1032793	1					
ANR	1032959	IfStatement	if ( src1 & SLJIT_MEM )		1032793	14					
ANR	1032960	Condition	src1 & SLJIT_MEM	1460:5:45514:45529	1032793	0	True				
ANR	1032961	BitAndExpression	src1 & SLJIT_MEM		1032793	0		&			
ANR	1032962	Identifier	src1		1032793	0					
ANR	1032963	Identifier	SLJIT_MEM		1032793	1					
ANR	1032964	CompoundStatement		27:23:677:677	1032793	1					
ANR	1032965	IfStatement	"if ( getput_arg_fast ( compiler , mem_flags , TMP_REG1 , src1 , src1w ) )"		1032793	0					
ANR	1032966	Condition	"getput_arg_fast ( compiler , mem_flags , TMP_REG1 , src1 , src1w )"	1461:6:45540:45598	1032793	0	True				
ANR	1032967	CallExpression	"getput_arg_fast ( compiler , mem_flags , TMP_REG1 , src1 , src1w )"		1032793	0					
ANR	1032968	Callee	getput_arg_fast		1032793	0					
ANR	1032969	Identifier	getput_arg_fast		1032793	0					
ANR	1032970	ArgumentList	compiler		1032793	1					
ANR	1032971	Argument	compiler		1032793	0					
ANR	1032972	Identifier	compiler		1032793	0					
ANR	1032973	Argument	mem_flags		1032793	1					
ANR	1032974	Identifier	mem_flags		1032793	0					
ANR	1032975	Argument	TMP_REG1		1032793	2					
ANR	1032976	Identifier	TMP_REG1		1032793	0					
ANR	1032977	Argument	src1		1032793	3					
ANR	1032978	Identifier	src1		1032793	0					
ANR	1032979	Argument	src1w		1032793	4					
ANR	1032980	Identifier	src1w		1032793	0					
ANR	1032981	ExpressionStatement	FAIL_IF ( compiler -> error )	1462:3:45604:45628	1032793	1	True				
ANR	1032982	CallExpression	FAIL_IF ( compiler -> error )		1032793	0					
ANR	1032983	Callee	FAIL_IF		1032793	0					
ANR	1032984	Identifier	FAIL_IF		1032793	0					
ANR	1032985	ArgumentList	compiler -> error		1032793	1					
ANR	1032986	Argument	compiler -> error		1032793	0					
ANR	1032987	PtrMemberAccess	compiler -> error		1032793	0					
ANR	1032988	Identifier	compiler		1032793	0					
ANR	1032989	Identifier	error		1032793	1					
ANR	1032990	ElseStatement	else		1032793	0					
ANR	1032991	ExpressionStatement	flags |= SLOW_SRC1	1464:3:45640:45658	1032793	0	True				
ANR	1032992	AssignmentExpression	flags |= SLOW_SRC1		1032793	0		|=			
ANR	1032993	Identifier	flags		1032793	0					
ANR	1032994	Identifier	SLOW_SRC1		1032793	1					
ANR	1032995	IfStatement	if ( src2 & SLJIT_MEM )		1032793	15					
ANR	1032996	Condition	src2 & SLJIT_MEM	1466:5:45668:45683	1032793	0	True				
ANR	1032997	BitAndExpression	src2 & SLJIT_MEM		1032793	0		&			
ANR	1032998	Identifier	src2		1032793	0					
ANR	1032999	Identifier	SLJIT_MEM		1032793	1					
ANR	1033000	CompoundStatement		33:23:831:831	1032793	1					
ANR	1033001	IfStatement	"if ( getput_arg_fast ( compiler , mem_flags , TMP_REG2 , src2 , src2w ) )"		1032793	0					
ANR	1033002	Condition	"getput_arg_fast ( compiler , mem_flags , TMP_REG2 , src2 , src2w )"	1467:6:45694:45752	1032793	0	True				
ANR	1033003	CallExpression	"getput_arg_fast ( compiler , mem_flags , TMP_REG2 , src2 , src2w )"		1032793	0					
ANR	1033004	Callee	getput_arg_fast		1032793	0					
ANR	1033005	Identifier	getput_arg_fast		1032793	0					
ANR	1033006	ArgumentList	compiler		1032793	1					
ANR	1033007	Argument	compiler		1032793	0					
ANR	1033008	Identifier	compiler		1032793	0					
ANR	1033009	Argument	mem_flags		1032793	1					
ANR	1033010	Identifier	mem_flags		1032793	0					
ANR	1033011	Argument	TMP_REG2		1032793	2					
ANR	1033012	Identifier	TMP_REG2		1032793	0					
ANR	1033013	Argument	src2		1032793	3					
ANR	1033014	Identifier	src2		1032793	0					
ANR	1033015	Argument	src2w		1032793	4					
ANR	1033016	Identifier	src2w		1032793	0					
ANR	1033017	ExpressionStatement	FAIL_IF ( compiler -> error )	1468:3:45758:45782	1032793	1	True				
ANR	1033018	CallExpression	FAIL_IF ( compiler -> error )		1032793	0					
ANR	1033019	Callee	FAIL_IF		1032793	0					
ANR	1033020	Identifier	FAIL_IF		1032793	0					
ANR	1033021	ArgumentList	compiler -> error		1032793	1					
ANR	1033022	Argument	compiler -> error		1032793	0					
ANR	1033023	PtrMemberAccess	compiler -> error		1032793	0					
ANR	1033024	Identifier	compiler		1032793	0					
ANR	1033025	Identifier	error		1032793	1					
ANR	1033026	ElseStatement	else		1032793	0					
ANR	1033027	ExpressionStatement	flags |= SLOW_SRC2	1470:3:45794:45812	1032793	0	True				
ANR	1033028	AssignmentExpression	flags |= SLOW_SRC2		1032793	0		|=			
ANR	1033029	Identifier	flags		1032793	0					
ANR	1033030	Identifier	SLOW_SRC2		1032793	1					
ANR	1033031	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1032793	16					
ANR	1033032	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	1473:5:45823:45882	1032793	0	True				
ANR	1033033	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1032793	0		==			
ANR	1033034	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1032793	0		&			
ANR	1033035	Identifier	flags		1032793	0					
ANR	1033036	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1032793	1		|			
ANR	1033037	Identifier	SLOW_SRC1		1032793	0					
ANR	1033038	Identifier	SLOW_SRC2		1032793	1					
ANR	1033039	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1032793	1		|			
ANR	1033040	Identifier	SLOW_SRC1		1032793	0					
ANR	1033041	Identifier	SLOW_SRC2		1032793	1					
ANR	1033042	CompoundStatement		40:67:1030:1030	1032793	1					
ANR	1033043	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1032793	0					
ANR	1033044	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1474:6:45893:45965	1032793	0	True				
ANR	1033045	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1032793	0		&&			
ANR	1033046	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1032793	0					
ANR	1033047	UnaryOperator	!		1032793	0					
ANR	1033048	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1032793	1					
ANR	1033049	Callee	can_cache		1032793	0					
ANR	1033050	Identifier	can_cache		1032793	0					
ANR	1033051	ArgumentList	src1		1032793	1					
ANR	1033052	Argument	src1		1032793	0					
ANR	1033053	Identifier	src1		1032793	0					
ANR	1033054	Argument	src1w		1032793	1					
ANR	1033055	Identifier	src1w		1032793	0					
ANR	1033056	Argument	src2		1032793	2					
ANR	1033057	Identifier	src2		1032793	0					
ANR	1033058	Argument	src2w		1032793	3					
ANR	1033059	Identifier	src2w		1032793	0					
ANR	1033060	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1032793	1					
ANR	1033061	Callee	can_cache		1032793	0					
ANR	1033062	Identifier	can_cache		1032793	0					
ANR	1033063	ArgumentList	src1		1032793	1					
ANR	1033064	Argument	src1		1032793	0					
ANR	1033065	Identifier	src1		1032793	0					
ANR	1033066	Argument	src1w		1032793	1					
ANR	1033067	Identifier	src1w		1032793	0					
ANR	1033068	Argument	dst		1032793	2					
ANR	1033069	Identifier	dst		1032793	0					
ANR	1033070	Argument	dstw		1032793	3					
ANR	1033071	Identifier	dstw		1032793	0					
ANR	1033072	CompoundStatement		41:81:1113:1113	1032793	1					
ANR	1033073	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , src1 , src1w ) )"	1475:3:45973:46049	1032793	0	True				
ANR	1033074	CallExpression	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , src1 , src1w ) )"		1032793	0					
ANR	1033075	Callee	FAIL_IF		1032793	0					
ANR	1033076	Identifier	FAIL_IF		1032793	0					
ANR	1033077	ArgumentList	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , src1 , src1w )"		1032793	1					
ANR	1033078	Argument	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , src1 , src1w )"		1032793	0					
ANR	1033079	CallExpression	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , src1 , src1w )"		1032793	0					
ANR	1033080	Callee	getput_arg		1032793	0					
ANR	1033081	Identifier	getput_arg		1032793	0					
ANR	1033082	ArgumentList	compiler		1032793	1					
ANR	1033083	Argument	compiler		1032793	0					
ANR	1033084	Identifier	compiler		1032793	0					
ANR	1033085	Argument	mem_flags		1032793	1					
ANR	1033086	Identifier	mem_flags		1032793	0					
ANR	1033087	Argument	TMP_REG2		1032793	2					
ANR	1033088	Identifier	TMP_REG2		1032793	0					
ANR	1033089	Argument	src2		1032793	3					
ANR	1033090	Identifier	src2		1032793	0					
ANR	1033091	Argument	src2w		1032793	4					
ANR	1033092	Identifier	src2w		1032793	0					
ANR	1033093	Argument	src1		1032793	5					
ANR	1033094	Identifier	src1		1032793	0					
ANR	1033095	Argument	src1w		1032793	6					
ANR	1033096	Identifier	src1w		1032793	0					
ANR	1033097	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1476:3:46054:46128	1032793	1	True				
ANR	1033098	CallExpression	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1032793	0					
ANR	1033099	Callee	FAIL_IF		1032793	0					
ANR	1033100	Identifier	FAIL_IF		1032793	0					
ANR	1033101	ArgumentList	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw )"		1032793	1					
ANR	1033102	Argument	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw )"		1032793	0					
ANR	1033103	CallExpression	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw )"		1032793	0					
ANR	1033104	Callee	getput_arg		1032793	0					
ANR	1033105	Identifier	getput_arg		1032793	0					
ANR	1033106	ArgumentList	compiler		1032793	1					
ANR	1033107	Argument	compiler		1032793	0					
ANR	1033108	Identifier	compiler		1032793	0					
ANR	1033109	Argument	mem_flags		1032793	1					
ANR	1033110	Identifier	mem_flags		1032793	0					
ANR	1033111	Argument	TMP_REG1		1032793	2					
ANR	1033112	Identifier	TMP_REG1		1032793	0					
ANR	1033113	Argument	src1		1032793	3					
ANR	1033114	Identifier	src1		1032793	0					
ANR	1033115	Argument	src1w		1032793	4					
ANR	1033116	Identifier	src1w		1032793	0					
ANR	1033117	Argument	dst		1032793	5					
ANR	1033118	Identifier	dst		1032793	0					
ANR	1033119	Argument	dstw		1032793	6					
ANR	1033120	Identifier	dstw		1032793	0					
ANR	1033121	ElseStatement	else		1032793	0					
ANR	1033122	CompoundStatement		45:7:1286:1286	1032793	0					
ANR	1033123	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	1479:3:46146:46222	1032793	0	True				
ANR	1033124	CallExpression	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1032793	0					
ANR	1033125	Callee	FAIL_IF		1032793	0					
ANR	1033126	Identifier	FAIL_IF		1032793	0					
ANR	1033127	ArgumentList	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , src2 , src2w )"		1032793	1					
ANR	1033128	Argument	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , src2 , src2w )"		1032793	0					
ANR	1033129	CallExpression	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , src2 , src2w )"		1032793	0					
ANR	1033130	Callee	getput_arg		1032793	0					
ANR	1033131	Identifier	getput_arg		1032793	0					
ANR	1033132	ArgumentList	compiler		1032793	1					
ANR	1033133	Argument	compiler		1032793	0					
ANR	1033134	Identifier	compiler		1032793	0					
ANR	1033135	Argument	mem_flags		1032793	1					
ANR	1033136	Identifier	mem_flags		1032793	0					
ANR	1033137	Argument	TMP_REG1		1032793	2					
ANR	1033138	Identifier	TMP_REG1		1032793	0					
ANR	1033139	Argument	src1		1032793	3					
ANR	1033140	Identifier	src1		1032793	0					
ANR	1033141	Argument	src1w		1032793	4					
ANR	1033142	Identifier	src1w		1032793	0					
ANR	1033143	Argument	src2		1032793	5					
ANR	1033144	Identifier	src2		1032793	0					
ANR	1033145	Argument	src2w		1032793	6					
ANR	1033146	Identifier	src2w		1032793	0					
ANR	1033147	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1480:3:46227:46301	1032793	1	True				
ANR	1033148	CallExpression	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1032793	0					
ANR	1033149	Callee	FAIL_IF		1032793	0					
ANR	1033150	Identifier	FAIL_IF		1032793	0					
ANR	1033151	ArgumentList	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw )"		1032793	1					
ANR	1033152	Argument	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw )"		1032793	0					
ANR	1033153	CallExpression	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw )"		1032793	0					
ANR	1033154	Callee	getput_arg		1032793	0					
ANR	1033155	Identifier	getput_arg		1032793	0					
ANR	1033156	ArgumentList	compiler		1032793	1					
ANR	1033157	Argument	compiler		1032793	0					
ANR	1033158	Identifier	compiler		1032793	0					
ANR	1033159	Argument	mem_flags		1032793	1					
ANR	1033160	Identifier	mem_flags		1032793	0					
ANR	1033161	Argument	TMP_REG2		1032793	2					
ANR	1033162	Identifier	TMP_REG2		1032793	0					
ANR	1033163	Argument	src2		1032793	3					
ANR	1033164	Identifier	src2		1032793	0					
ANR	1033165	Argument	src2w		1032793	4					
ANR	1033166	Identifier	src2w		1032793	0					
ANR	1033167	Argument	dst		1032793	5					
ANR	1033168	Identifier	dst		1032793	0					
ANR	1033169	Argument	dstw		1032793	6					
ANR	1033170	Identifier	dstw		1032793	0					
ANR	1033171	ElseStatement	else		1032793	0					
ANR	1033172	IfStatement	if ( flags & SLOW_SRC1 )		1032793	0					
ANR	1033173	Condition	flags & SLOW_SRC1	1483:10:46320:46336	1032793	0	True				
ANR	1033174	BitAndExpression	flags & SLOW_SRC1		1032793	0		&			
ANR	1033175	Identifier	flags		1032793	0					
ANR	1033176	Identifier	SLOW_SRC1		1032793	1					
ANR	1033177	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1484:2:46341:46415	1032793	1	True				
ANR	1033178	CallExpression	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1032793	0					
ANR	1033179	Callee	FAIL_IF		1032793	0					
ANR	1033180	Identifier	FAIL_IF		1032793	0					
ANR	1033181	ArgumentList	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw )"		1032793	1					
ANR	1033182	Argument	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw )"		1032793	0					
ANR	1033183	CallExpression	"getput_arg ( compiler , mem_flags , TMP_REG1 , src1 , src1w , dst , dstw )"		1032793	0					
ANR	1033184	Callee	getput_arg		1032793	0					
ANR	1033185	Identifier	getput_arg		1032793	0					
ANR	1033186	ArgumentList	compiler		1032793	1					
ANR	1033187	Argument	compiler		1032793	0					
ANR	1033188	Identifier	compiler		1032793	0					
ANR	1033189	Argument	mem_flags		1032793	1					
ANR	1033190	Identifier	mem_flags		1032793	0					
ANR	1033191	Argument	TMP_REG1		1032793	2					
ANR	1033192	Identifier	TMP_REG1		1032793	0					
ANR	1033193	Argument	src1		1032793	3					
ANR	1033194	Identifier	src1		1032793	0					
ANR	1033195	Argument	src1w		1032793	4					
ANR	1033196	Identifier	src1w		1032793	0					
ANR	1033197	Argument	dst		1032793	5					
ANR	1033198	Identifier	dst		1032793	0					
ANR	1033199	Argument	dstw		1032793	6					
ANR	1033200	Identifier	dstw		1032793	0					
ANR	1033201	ElseStatement	else		1032793	0					
ANR	1033202	IfStatement	if ( flags & SLOW_SRC2 )		1032793	0					
ANR	1033203	Condition	flags & SLOW_SRC2	1485:10:46427:46443	1032793	0	True				
ANR	1033204	BitAndExpression	flags & SLOW_SRC2		1032793	0		&			
ANR	1033205	Identifier	flags		1032793	0					
ANR	1033206	Identifier	SLOW_SRC2		1032793	1					
ANR	1033207	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1486:2:46448:46522	1032793	1	True				
ANR	1033208	CallExpression	"FAIL_IF ( getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1032793	0					
ANR	1033209	Callee	FAIL_IF		1032793	0					
ANR	1033210	Identifier	FAIL_IF		1032793	0					
ANR	1033211	ArgumentList	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw )"		1032793	1					
ANR	1033212	Argument	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw )"		1032793	0					
ANR	1033213	CallExpression	"getput_arg ( compiler , mem_flags , TMP_REG2 , src2 , src2w , dst , dstw )"		1032793	0					
ANR	1033214	Callee	getput_arg		1032793	0					
ANR	1033215	Identifier	getput_arg		1032793	0					
ANR	1033216	ArgumentList	compiler		1032793	1					
ANR	1033217	Argument	compiler		1032793	0					
ANR	1033218	Identifier	compiler		1032793	0					
ANR	1033219	Argument	mem_flags		1032793	1					
ANR	1033220	Identifier	mem_flags		1032793	0					
ANR	1033221	Argument	TMP_REG2		1032793	2					
ANR	1033222	Identifier	TMP_REG2		1032793	0					
ANR	1033223	Argument	src2		1032793	3					
ANR	1033224	Identifier	src2		1032793	0					
ANR	1033225	Argument	src2w		1032793	4					
ANR	1033226	Identifier	src2w		1032793	0					
ANR	1033227	Argument	dst		1032793	5					
ANR	1033228	Identifier	dst		1032793	0					
ANR	1033229	Argument	dstw		1032793	6					
ANR	1033230	Identifier	dstw		1032793	0					
ANR	1033231	IfStatement	if ( src1 & SLJIT_MEM )		1032793	17					
ANR	1033232	Condition	src1 & SLJIT_MEM	1488:5:46530:46545	1032793	0	True				
ANR	1033233	BitAndExpression	src1 & SLJIT_MEM		1032793	0		&			
ANR	1033234	Identifier	src1		1032793	0					
ANR	1033235	Identifier	SLJIT_MEM		1032793	1					
ANR	1033236	ExpressionStatement	src1 = TMP_REG1	1489:2:46550:46565	1032793	1	True				
ANR	1033237	AssignmentExpression	src1 = TMP_REG1		1032793	0		=			
ANR	1033238	Identifier	src1		1032793	0					
ANR	1033239	Identifier	TMP_REG1		1032793	1					
ANR	1033240	IfStatement	if ( src2 & SLJIT_MEM )		1032793	18					
ANR	1033241	Condition	src2 & SLJIT_MEM	1490:5:46572:46587	1032793	0	True				
ANR	1033242	BitAndExpression	src2 & SLJIT_MEM		1032793	0		&			
ANR	1033243	Identifier	src2		1032793	0					
ANR	1033244	Identifier	SLJIT_MEM		1032793	1					
ANR	1033245	ExpressionStatement	src2 = TMP_REG2	1491:2:46592:46607	1032793	1	True				
ANR	1033246	AssignmentExpression	src2 = TMP_REG2		1032793	0		=			
ANR	1033247	Identifier	src2		1032793	0					
ANR	1033248	Identifier	TMP_REG2		1032793	1					
ANR	1033249	IfStatement	if ( src1 & SLJIT_IMM )		1032793	19					
ANR	1033250	Condition	src1 & SLJIT_IMM	1493:5:46615:46630	1032793	0	True				
ANR	1033251	BitAndExpression	src1 & SLJIT_IMM		1032793	0		&			
ANR	1033252	Identifier	src1		1032793	0					
ANR	1033253	Identifier	SLJIT_IMM		1032793	1					
ANR	1033254	ExpressionStatement	flags |= ARG1_IMM	1494:2:46635:46652	1032793	1	True				
ANR	1033255	AssignmentExpression	flags |= ARG1_IMM		1032793	0		|=			
ANR	1033256	Identifier	flags		1032793	0					
ANR	1033257	Identifier	ARG1_IMM		1032793	1					
ANR	1033258	ElseStatement	else		1032793	0					
ANR	1033259	ExpressionStatement	src1w = src1	1496:2:46662:46674	1032793	0	True				
ANR	1033260	AssignmentExpression	src1w = src1		1032793	0		=			
ANR	1033261	Identifier	src1w		1032793	0					
ANR	1033262	Identifier	src1		1032793	1					
ANR	1033263	IfStatement	if ( src2 & SLJIT_IMM )		1032793	20					
ANR	1033264	Condition	src2 & SLJIT_IMM	1497:5:46681:46696	1032793	0	True				
ANR	1033265	BitAndExpression	src2 & SLJIT_IMM		1032793	0		&			
ANR	1033266	Identifier	src2		1032793	0					
ANR	1033267	Identifier	SLJIT_IMM		1032793	1					
ANR	1033268	ExpressionStatement	flags |= ARG2_IMM	1498:2:46701:46718	1032793	1	True				
ANR	1033269	AssignmentExpression	flags |= ARG2_IMM		1032793	0		|=			
ANR	1033270	Identifier	flags		1032793	0					
ANR	1033271	Identifier	ARG2_IMM		1032793	1					
ANR	1033272	ElseStatement	else		1032793	0					
ANR	1033273	ExpressionStatement	src2w = src2	1500:2:46728:46740	1032793	0	True				
ANR	1033274	AssignmentExpression	src2w = src2		1032793	0		=			
ANR	1033275	Identifier	src2w		1032793	0					
ANR	1033276	Identifier	src2		1032793	1					
ANR	1033277	ExpressionStatement	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src1w , src2w )"	1502:1:46744:46810	1032793	21	True				
ANR	1033278	CallExpression	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src1w , src2w )"		1032793	0					
ANR	1033279	Callee	emit_op_imm		1032793	0					
ANR	1033280	Identifier	emit_op_imm		1032793	0					
ANR	1033281	ArgumentList	compiler		1032793	1					
ANR	1033282	Argument	compiler		1032793	0					
ANR	1033283	Identifier	compiler		1032793	0					
ANR	1033284	Argument	flags | GET_OPCODE ( op )		1032793	1					
ANR	1033285	InclusiveOrExpression	flags | GET_OPCODE ( op )		1032793	0		|			
ANR	1033286	Identifier	flags		1032793	0					
ANR	1033287	CallExpression	GET_OPCODE ( op )		1032793	1					
ANR	1033288	Callee	GET_OPCODE		1032793	0					
ANR	1033289	Identifier	GET_OPCODE		1032793	0					
ANR	1033290	ArgumentList	op		1032793	1					
ANR	1033291	Argument	op		1032793	0					
ANR	1033292	Identifier	op		1032793	0					
ANR	1033293	Argument	dst_r		1032793	2					
ANR	1033294	Identifier	dst_r		1032793	0					
ANR	1033295	Argument	src1w		1032793	3					
ANR	1033296	Identifier	src1w		1032793	0					
ANR	1033297	Argument	src2w		1032793	4					
ANR	1033298	Identifier	src2w		1032793	0					
ANR	1033299	IfStatement	if ( dst & SLJIT_MEM )		1032793	22					
ANR	1033300	Condition	dst & SLJIT_MEM	1504:5:46818:46832	1032793	0	True				
ANR	1033301	BitAndExpression	dst & SLJIT_MEM		1032793	0		&			
ANR	1033302	Identifier	dst		1032793	0					
ANR	1033303	Identifier	SLJIT_MEM		1032793	1					
ANR	1033304	CompoundStatement		71:22:1980:1980	1032793	1					
ANR	1033305	IfStatement	if ( ! ( flags & SLOW_DEST ) )		1032793	0					
ANR	1033306	Condition	! ( flags & SLOW_DEST )	1505:6:46843:46862	1032793	0	True				
ANR	1033307	UnaryOperationExpression	! ( flags & SLOW_DEST )		1032793	0					
ANR	1033308	UnaryOperator	!		1032793	0					
ANR	1033309	BitAndExpression	flags & SLOW_DEST		1032793	1		&			
ANR	1033310	Identifier	flags		1032793	0					
ANR	1033311	Identifier	SLOW_DEST		1032793	1					
ANR	1033312	CompoundStatement		72:28:2010:2010	1032793	1					
ANR	1033313	ExpressionStatement	"getput_arg_fast ( compiler , mem_flags | STORE , dst_r , dst , dstw )"	1506:3:46870:46932	1032793	0	True				
ANR	1033314	CallExpression	"getput_arg_fast ( compiler , mem_flags | STORE , dst_r , dst , dstw )"		1032793	0					
ANR	1033315	Callee	getput_arg_fast		1032793	0					
ANR	1033316	Identifier	getput_arg_fast		1032793	0					
ANR	1033317	ArgumentList	compiler		1032793	1					
ANR	1033318	Argument	compiler		1032793	0					
ANR	1033319	Identifier	compiler		1032793	0					
ANR	1033320	Argument	mem_flags | STORE		1032793	1					
ANR	1033321	InclusiveOrExpression	mem_flags | STORE		1032793	0		|			
ANR	1033322	Identifier	mem_flags		1032793	0					
ANR	1033323	Identifier	STORE		1032793	1					
ANR	1033324	Argument	dst_r		1032793	2					
ANR	1033325	Identifier	dst_r		1032793	0					
ANR	1033326	Argument	dst		1032793	3					
ANR	1033327	Identifier	dst		1032793	0					
ANR	1033328	Argument	dstw		1032793	4					
ANR	1033329	Identifier	dstw		1032793	0					
ANR	1033330	ReturnStatement	return compiler -> error ;	1507:3:46937:46959	1032793	1	True				
ANR	1033331	PtrMemberAccess	compiler -> error		1032793	0					
ANR	1033332	Identifier	compiler		1032793	0					
ANR	1033333	Identifier	error		1032793	1					
ANR	1033334	ReturnStatement	"return getput_arg ( compiler , mem_flags | STORE , TMP_REG1 , dst , dstw , 0 , 0 ) ;"	1509:2:46967:47040	1032793	1	True				
ANR	1033335	CallExpression	"getput_arg ( compiler , mem_flags | STORE , TMP_REG1 , dst , dstw , 0 , 0 )"		1032793	0					
ANR	1033336	Callee	getput_arg		1032793	0					
ANR	1033337	Identifier	getput_arg		1032793	0					
ANR	1033338	ArgumentList	compiler		1032793	1					
ANR	1033339	Argument	compiler		1032793	0					
ANR	1033340	Identifier	compiler		1032793	0					
ANR	1033341	Argument	mem_flags | STORE		1032793	1					
ANR	1033342	InclusiveOrExpression	mem_flags | STORE		1032793	0		|			
ANR	1033343	Identifier	mem_flags		1032793	0					
ANR	1033344	Identifier	STORE		1032793	1					
ANR	1033345	Argument	TMP_REG1		1032793	2					
ANR	1033346	Identifier	TMP_REG1		1032793	0					
ANR	1033347	Argument	dst		1032793	3					
ANR	1033348	Identifier	dst		1032793	0					
ANR	1033349	Argument	dstw		1032793	4					
ANR	1033350	Identifier	dstw		1032793	0					
ANR	1033351	Argument	0		1032793	5					
ANR	1033352	PrimaryExpression	0		1032793	0					
ANR	1033353	Argument	0		1032793	6					
ANR	1033354	PrimaryExpression	0		1032793	0					
ANR	1033355	ReturnStatement	return SLJIT_SUCCESS ;	1512:1:47047:47067	1032793	23	True				
ANR	1033356	Identifier	SLJIT_SUCCESS		1032793	0					
ANR	1033357	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1032793	1					
ANR	1033358	Identifier	sljit_emit_op2		1032793	2					
ANR	1033359	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1032793	3					
ANR	1033360	Parameter	struct sljit_compiler * compiler	1430:49:44714:44744	1032793	0	True				
ANR	1033361	ParameterType	struct sljit_compiler *		1032793	0					
ANR	1033362	Identifier	compiler		1032793	1					
ANR	1033363	Parameter	sljit_si op	1430:82:44747:44757	1032793	1	True				
ANR	1033364	ParameterType	sljit_si		1032793	0					
ANR	1033365	Identifier	op		1032793	1					
ANR	1033366	Parameter	sljit_si dst	1431:1:44761:44772	1032793	2	True				
ANR	1033367	ParameterType	sljit_si		1032793	0					
ANR	1033368	Identifier	dst		1032793	1					
ANR	1033369	Parameter	sljit_sw dstw	1431:15:44775:44787	1032793	3	True				
ANR	1033370	ParameterType	sljit_sw		1032793	0					
ANR	1033371	Identifier	dstw		1032793	1					
ANR	1033372	Parameter	sljit_si src1	1432:1:44791:44803	1032793	4	True				
ANR	1033373	ParameterType	sljit_si		1032793	0					
ANR	1033374	Identifier	src1		1032793	1					
ANR	1033375	Parameter	sljit_sw src1w	1432:16:44806:44819	1032793	5	True				
ANR	1033376	ParameterType	sljit_sw		1032793	0					
ANR	1033377	Identifier	src1w		1032793	1					
ANR	1033378	Parameter	sljit_si src2	1433:1:44823:44835	1032793	6	True				
ANR	1033379	ParameterType	sljit_si		1032793	0					
ANR	1033380	Identifier	src2		1032793	1					
ANR	1033381	Parameter	sljit_sw src2w	1433:16:44838:44851	1032793	7	True				
ANR	1033382	ParameterType	sljit_sw		1032793	0					
ANR	1033383	Identifier	src2w		1032793	1					
ANR	1033384	CFGEntryNode	ENTRY		1032793		True				
ANR	1033385	CFGExitNode	EXIT		1032793		True				
ANR	1033386	Symbol	SLOW_SRC2		1032793						
ANR	1033387	Symbol	TMP_REG2		1032793						
ANR	1033388	Symbol	compiler -> cache_argw		1032793						
ANR	1033389	Symbol	TMP_REG1		1032793						
ANR	1033390	Symbol	src1w		1032793						
ANR	1033391	Symbol	dst		1032793						
ANR	1033392	Symbol	SLOW_DEST		1032793						
ANR	1033393	Symbol	SLJIT_MEM		1032793						
ANR	1033394	Symbol	SLOW_SRC1		1032793						
ANR	1033395	Symbol	flags		1032793						
ANR	1033396	Symbol	SLOW_IS_REG		1032793						
ANR	1033397	Symbol	UNUSED_RETURN		1032793						
ANR	1033398	Symbol	* compiler		1032793						
ANR	1033399	Symbol	ARG_TEST		1032793						
ANR	1033400	Symbol	dst_r		1032793						
ANR	1033401	Symbol	GET_FLAGS		1032793						
ANR	1033402	Symbol	GET_OPCODE		1032793						
ANR	1033403	Symbol	SLJIT_IMM		1032793						
ANR	1033404	Symbol	getput_arg		1032793						
ANR	1033405	Symbol	INT_OP		1032793						
ANR	1033406	Symbol	ARG1_IMM		1032793						
ANR	1033407	Symbol	compiler		1032793						
ANR	1033408	Symbol	src2w		1032793						
ANR	1033409	Symbol	can_cache		1032793						
ANR	1033410	Symbol	op		1032793						
ANR	1033411	Symbol	check_sljit_emit_op2		1032793						
ANR	1033412	Symbol	INT_SIZE		1032793						
ANR	1033413	Symbol	compiler -> cache_arg		1032793						
ANR	1033414	Symbol	ARG2_IMM		1032793						
ANR	1033415	Symbol	SLJIT_INT_OP		1032793						
ANR	1033416	Symbol	SLJIT_SUCCESS		1032793						
ANR	1033417	Symbol	SET_FLAGS		1032793						
ANR	1033418	Symbol	mem_flags		1032793						
ANR	1033419	Symbol	SLJIT_UNUSED		1032793						
ANR	1033420	Symbol	src1		1032793						
ANR	1033421	Symbol	STORE		1032793						
ANR	1033422	Symbol	src2		1032793						
ANR	1033423	Symbol	getput_arg_fast		1032793						
ANR	1033424	Symbol	dstw		1032793						
ANR	1033425	Symbol	compiler -> error		1032793						
ANR	1033426	Symbol	WORD_SIZE		1032793						
ANR	1033427	Function	sljit_get_register_index	1515:0:47072:47224							
ANR	1033428	FunctionDef	sljit_get_register_index (sljit_si reg)		1033427	0					
ANR	1033429	CompoundStatement		1516:0:47145:47224	1033427	0					
ANR	1033430	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	1517:1:47148:47200	1033427	0	True				
ANR	1033431	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1033427	0					
ANR	1033432	Callee	CHECK_REG_INDEX		1033427	0					
ANR	1033433	Identifier	CHECK_REG_INDEX		1033427	0					
ANR	1033434	ArgumentList	check_sljit_get_register_index ( reg )		1033427	1					
ANR	1033435	Argument	check_sljit_get_register_index ( reg )		1033427	0					
ANR	1033436	CallExpression	check_sljit_get_register_index ( reg )		1033427	0					
ANR	1033437	Callee	check_sljit_get_register_index		1033427	0					
ANR	1033438	Identifier	check_sljit_get_register_index		1033427	0					
ANR	1033439	ArgumentList	reg		1033427	1					
ANR	1033440	Argument	reg		1033427	0					
ANR	1033441	Identifier	reg		1033427	0					
ANR	1033442	ReturnStatement	return reg_map [ reg ] ;	1518:1:47203:47222	1033427	1	True				
ANR	1033443	ArrayIndexing	reg_map [ reg ]		1033427	0					
ANR	1033444	Identifier	reg_map		1033427	0					
ANR	1033445	Identifier	reg		1033427	1					
ANR	1033446	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1033427	1					
ANR	1033447	Identifier	sljit_get_register_index		1033427	2					
ANR	1033448	ParameterList	sljit_si reg		1033427	3					
ANR	1033449	Parameter	sljit_si reg	1515:59:47131:47142	1033427	0	True				
ANR	1033450	ParameterType	sljit_si		1033427	0					
ANR	1033451	Identifier	reg		1033427	1					
ANR	1033452	CFGEntryNode	ENTRY		1033427		True				
ANR	1033453	CFGExitNode	EXIT		1033427		True				
ANR	1033454	Symbol	reg		1033427						
ANR	1033455	Symbol	reg_map		1033427						
ANR	1033456	Symbol	* reg_map		1033427						
ANR	1033457	Symbol	* reg		1033427						
ANR	1033458	Symbol	check_sljit_get_register_index		1033427						
ANR	1033459	Function	sljit_get_float_register_index	1521:0:47227:47382							
ANR	1033460	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1033459	0					
ANR	1033461	CompoundStatement		1522:0:47306:47382	1033459	0					
ANR	1033462	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	1523:1:47309:47367	1033459	0	True				
ANR	1033463	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1033459	0					
ANR	1033464	Callee	CHECK_REG_INDEX		1033459	0					
ANR	1033465	Identifier	CHECK_REG_INDEX		1033459	0					
ANR	1033466	ArgumentList	check_sljit_get_float_register_index ( reg )		1033459	1					
ANR	1033467	Argument	check_sljit_get_float_register_index ( reg )		1033459	0					
ANR	1033468	CallExpression	check_sljit_get_float_register_index ( reg )		1033459	0					
ANR	1033469	Callee	check_sljit_get_float_register_index		1033459	0					
ANR	1033470	Identifier	check_sljit_get_float_register_index		1033459	0					
ANR	1033471	ArgumentList	reg		1033459	1					
ANR	1033472	Argument	reg		1033459	0					
ANR	1033473	Identifier	reg		1033459	0					
ANR	1033474	ReturnStatement	return reg ;	1524:1:47370:47380	1033459	1	True				
ANR	1033475	Identifier	reg		1033459	0					
ANR	1033476	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1033459	1					
ANR	1033477	Identifier	sljit_get_float_register_index		1033459	2					
ANR	1033478	ParameterList	sljit_si reg		1033459	3					
ANR	1033479	Parameter	sljit_si reg	1521:65:47292:47303	1033459	0	True				
ANR	1033480	ParameterType	sljit_si		1033459	0					
ANR	1033481	Identifier	reg		1033459	1					
ANR	1033482	CFGEntryNode	ENTRY		1033459		True				
ANR	1033483	CFGExitNode	EXIT		1033459		True				
ANR	1033484	Symbol	reg		1033459						
ANR	1033485	Symbol	check_sljit_get_float_register_index		1033459						
ANR	1033486	Function	sljit_emit_op_custom	1527:0:47385:47647							
ANR	1033487	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1033486	0					
ANR	1033488	CompoundStatement		1529:0:47508:47647	1033486	0					
ANR	1033489	ExpressionStatement	CHECK_ERROR ( )	1530:1:47511:47524	1033486	0	True				
ANR	1033490	CallExpression	CHECK_ERROR ( )		1033486	0					
ANR	1033491	Callee	CHECK_ERROR		1033486	0					
ANR	1033492	Identifier	CHECK_ERROR		1033486	0					
ANR	1033493	ArgumentList			1033486	1					
ANR	1033494	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	1531:1:47527:47589	1033486	1	True				
ANR	1033495	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1033486	0					
ANR	1033496	Callee	CHECK		1033486	0					
ANR	1033497	Identifier	CHECK		1033486	0					
ANR	1033498	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1033486	1					
ANR	1033499	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1033486	0					
ANR	1033500	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1033486	0					
ANR	1033501	Callee	check_sljit_emit_op_custom		1033486	0					
ANR	1033502	Identifier	check_sljit_emit_op_custom		1033486	0					
ANR	1033503	ArgumentList	compiler		1033486	1					
ANR	1033504	Argument	compiler		1033486	0					
ANR	1033505	Identifier	compiler		1033486	0					
ANR	1033506	Argument	instruction		1033486	1					
ANR	1033507	Identifier	instruction		1033486	0					
ANR	1033508	Argument	size		1033486	2					
ANR	1033509	Identifier	size		1033486	0					
ANR	1033510	ReturnStatement	"return push_inst ( compiler , * ( sljit_ins * ) instruction ) ;"	1533:1:47593:47645	1033486	2	True				
ANR	1033511	CallExpression	"push_inst ( compiler , * ( sljit_ins * ) instruction )"		1033486	0					
ANR	1033512	Callee	push_inst		1033486	0					
ANR	1033513	Identifier	push_inst		1033486	0					
ANR	1033514	ArgumentList	compiler		1033486	1					
ANR	1033515	Argument	compiler		1033486	0					
ANR	1033516	Identifier	compiler		1033486	0					
ANR	1033517	Argument	* ( sljit_ins * ) instruction		1033486	1					
ANR	1033518	UnaryOperationExpression	* ( sljit_ins * ) instruction		1033486	0					
ANR	1033519	UnaryOperator	*		1033486	0					
ANR	1033520	CastExpression	( sljit_ins * ) instruction		1033486	1					
ANR	1033521	CastTarget	sljit_ins *		1033486	0					
ANR	1033522	Identifier	instruction		1033486	1					
ANR	1033523	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1033486	1					
ANR	1033524	Identifier	sljit_emit_op_custom		1033486	2					
ANR	1033525	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1033486	3					
ANR	1033526	Parameter	struct sljit_compiler * compiler	1527:55:47440:47470	1033486	0	True				
ANR	1033527	ParameterType	struct sljit_compiler *		1033486	0					
ANR	1033528	Identifier	compiler		1033486	1					
ANR	1033529	Parameter	void * instruction	1528:1:47474:47490	1033486	1	True				
ANR	1033530	ParameterType	void *		1033486	0					
ANR	1033531	Identifier	instruction		1033486	1					
ANR	1033532	Parameter	sljit_si size	1528:20:47493:47505	1033486	2	True				
ANR	1033533	ParameterType	sljit_si		1033486	0					
ANR	1033534	Identifier	size		1033486	1					
ANR	1033535	CFGEntryNode	ENTRY		1033486		True				
ANR	1033536	CFGExitNode	EXIT		1033486		True				
ANR	1033537	Symbol	push_inst		1033486						
ANR	1033538	Symbol	size		1033486						
ANR	1033539	Symbol	* instruction		1033486						
ANR	1033540	Symbol	* ( sljit_ins * ) instruction		1033486						
ANR	1033541	Symbol	instruction		1033486						
ANR	1033542	Symbol	check_sljit_emit_op_custom		1033486						
ANR	1033543	Symbol	compiler		1033486						
ANR	1033544	Function	sljit_is_fpu_available	1540:0:47879:48059							
ANR	1033545	FunctionDef	sljit_is_fpu_available ()		1033544	0					
ANR	1033546	CompoundStatement		1541:0:47942:48059	1033544	0					
ANR	1033547	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	1543:1:47975:48004	1033544	0	True				
ANR	1033548	Identifier	SLJIT_IS_FPU_AVAILABLE		1033544	0					
ANR	1033549	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1033544	1					
ANR	1033550	Identifier	sljit_is_fpu_available		1033544	2					
ANR	1033551	ParameterList			1033544	3					
ANR	1033552	CFGEntryNode	ENTRY		1033544		True				
ANR	1033553	CFGExitNode	EXIT		1033544		True				
ANR	1033554	Symbol	SLJIT_IS_FPU_AVAILABLE		1033544						
ANR	1033555	Function	emit_fop_mem	1550:0:48062:49914							
ANR	1033556	FunctionDef	"emit_fop_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1033555	0					
ANR	1033557	CompoundStatement		1551:0:48183:49914	1033555	0					
ANR	1033558	IdentifierDeclStatement	sljit_ui shift = MEM_SIZE_SHIFT ( flags ) ;	1552:1:48186:48224	1033555	0	True				
ANR	1033559	IdentifierDecl	shift = MEM_SIZE_SHIFT ( flags )		1033555	0					
ANR	1033560	IdentifierDeclType	sljit_ui		1033555	0					
ANR	1033561	Identifier	shift		1033555	1					
ANR	1033562	AssignmentExpression	shift = MEM_SIZE_SHIFT ( flags )		1033555	2		=			
ANR	1033563	Identifier	shift		1033555	0					
ANR	1033564	CallExpression	MEM_SIZE_SHIFT ( flags )		1033555	1					
ANR	1033565	Callee	MEM_SIZE_SHIFT		1033555	0					
ANR	1033566	Identifier	MEM_SIZE_SHIFT		1033555	0					
ANR	1033567	ArgumentList	flags		1033555	1					
ANR	1033568	Argument	flags		1033555	0					
ANR	1033569	Identifier	flags		1033555	0					
ANR	1033570	IdentifierDeclStatement	sljit_ins ins_bits = ( shift << 30 ) ;	1553:1:48227:48261	1033555	1	True				
ANR	1033571	IdentifierDecl	ins_bits = ( shift << 30 )		1033555	0					
ANR	1033572	IdentifierDeclType	sljit_ins		1033555	0					
ANR	1033573	Identifier	ins_bits		1033555	1					
ANR	1033574	AssignmentExpression	ins_bits = ( shift << 30 )		1033555	2		=			
ANR	1033575	Identifier	ins_bits		1033555	0					
ANR	1033576	ShiftExpression	shift << 30		1033555	1		<<			
ANR	1033577	Identifier	shift		1033555	0					
ANR	1033578	PrimaryExpression	30		1033555	1					
ANR	1033579	IdentifierDeclStatement	sljit_si other_r ;	1554:1:48264:48280	1033555	2	True				
ANR	1033580	IdentifierDecl	other_r		1033555	0					
ANR	1033581	IdentifierDeclType	sljit_si		1033555	0					
ANR	1033582	Identifier	other_r		1033555	1					
ANR	1033583	IdentifierDeclStatement	sljit_sw diff ;	1555:1:48283:48296	1033555	3	True				
ANR	1033584	IdentifierDecl	diff		1033555	0					
ANR	1033585	IdentifierDeclType	sljit_sw		1033555	0					
ANR	1033586	Identifier	diff		1033555	1					
ANR	1033587	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1557:1:48300:48329	1033555	4	True				
ANR	1033588	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1033555	0					
ANR	1033589	Callee	SLJIT_ASSERT		1033555	0					
ANR	1033590	Identifier	SLJIT_ASSERT		1033555	0					
ANR	1033591	ArgumentList	arg & SLJIT_MEM		1033555	1					
ANR	1033592	Argument	arg & SLJIT_MEM		1033555	0					
ANR	1033593	BitAndExpression	arg & SLJIT_MEM		1033555	0		&			
ANR	1033594	Identifier	arg		1033555	0					
ANR	1033595	Identifier	SLJIT_MEM		1033555	1					
ANR	1033596	IfStatement	if ( ! ( flags & STORE ) )		1033555	5					
ANR	1033597	Condition	! ( flags & STORE )	1559:5:48337:48352	1033555	0	True				
ANR	1033598	UnaryOperationExpression	! ( flags & STORE )		1033555	0					
ANR	1033599	UnaryOperator	!		1033555	0					
ANR	1033600	BitAndExpression	flags & STORE		1033555	1		&			
ANR	1033601	Identifier	flags		1033555	0					
ANR	1033602	Identifier	STORE		1033555	1					
ANR	1033603	ExpressionStatement	ins_bits |= 1 << 22	1560:2:48357:48376	1033555	1	True				
ANR	1033604	AssignmentExpression	ins_bits |= 1 << 22		1033555	0		|=			
ANR	1033605	Identifier	ins_bits		1033555	0					
ANR	1033606	ShiftExpression	1 << 22		1033555	1		<<			
ANR	1033607	PrimaryExpression	1		1033555	0					
ANR	1033608	PrimaryExpression	22		1033555	1					
ANR	1033609	IfStatement	if ( arg & OFFS_REG_MASK )		1033555	6					
ANR	1033610	Condition	arg & OFFS_REG_MASK	1562:5:48384:48402	1033555	0	True				
ANR	1033611	BitAndExpression	arg & OFFS_REG_MASK		1033555	0		&			
ANR	1033612	Identifier	arg		1033555	0					
ANR	1033613	Identifier	OFFS_REG_MASK		1033555	1					
ANR	1033614	CompoundStatement		12:26:221:221	1033555	1					
ANR	1033615	ExpressionStatement	argw &= 3	1563:2:48409:48418	1033555	0	True				
ANR	1033616	AssignmentExpression	argw &= 3		1033555	0		&=			
ANR	1033617	Identifier	argw		1033555	0					
ANR	1033618	PrimaryExpression	3		1033555	1					
ANR	1033619	IfStatement	if ( ! argw || argw == shift )		1033555	1					
ANR	1033620	Condition	! argw || argw == shift	1564:6:48426:48447	1033555	0	True				
ANR	1033621	OrExpression	! argw || argw == shift		1033555	0		||			
ANR	1033622	UnaryOperationExpression	! argw		1033555	0					
ANR	1033623	UnaryOperator	!		1033555	0					
ANR	1033624	Identifier	argw		1033555	1					
ANR	1033625	EqualityExpression	argw == shift		1033555	1		==			
ANR	1033626	Identifier	argw		1033555	0					
ANR	1033627	Identifier	shift		1033555	1					
ANR	1033628	ReturnStatement	"return push_inst ( compiler , STR_FR | ins_bits | VT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 ) ) ;"	1565:3:48453:48578	1033555	1	True				
ANR	1033629	CallExpression	"push_inst ( compiler , STR_FR | ins_bits | VT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 ) )"		1033555	0					
ANR	1033630	Callee	push_inst		1033555	0					
ANR	1033631	Identifier	push_inst		1033555	0					
ANR	1033632	ArgumentList	compiler		1033555	1					
ANR	1033633	Argument	compiler		1033555	0					
ANR	1033634	Identifier	compiler		1033555	0					
ANR	1033635	Argument	STR_FR | ins_bits | VT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1033555	1					
ANR	1033636	InclusiveOrExpression	STR_FR | ins_bits | VT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1033555	0		|			
ANR	1033637	Identifier	STR_FR		1033555	0					
ANR	1033638	InclusiveOrExpression	ins_bits | VT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1033555	1		|			
ANR	1033639	Identifier	ins_bits		1033555	0					
ANR	1033640	InclusiveOrExpression	VT ( reg ) | RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1033555	1		|			
ANR	1033641	CallExpression	VT ( reg )		1033555	0					
ANR	1033642	Callee	VT		1033555	0					
ANR	1033643	Identifier	VT		1033555	0					
ANR	1033644	ArgumentList	reg		1033555	1					
ANR	1033645	Argument	reg		1033555	0					
ANR	1033646	Identifier	reg		1033555	0					
ANR	1033647	InclusiveOrExpression	RN ( arg & REG_MASK ) | RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1033555	1		|			
ANR	1033648	CallExpression	RN ( arg & REG_MASK )		1033555	0					
ANR	1033649	Callee	RN		1033555	0					
ANR	1033650	Identifier	RN		1033555	0					
ANR	1033651	ArgumentList	arg & REG_MASK		1033555	1					
ANR	1033652	Argument	arg & REG_MASK		1033555	0					
ANR	1033653	BitAndExpression	arg & REG_MASK		1033555	0		&			
ANR	1033654	Identifier	arg		1033555	0					
ANR	1033655	Identifier	REG_MASK		1033555	1					
ANR	1033656	InclusiveOrExpression	RM ( OFFS_REG ( arg ) ) | ( argw ? ( 1 << 12 ) : 0 )		1033555	1		|			
ANR	1033657	CallExpression	RM ( OFFS_REG ( arg ) )		1033555	0					
ANR	1033658	Callee	RM		1033555	0					
ANR	1033659	Identifier	RM		1033555	0					
ANR	1033660	ArgumentList	OFFS_REG ( arg )		1033555	1					
ANR	1033661	Argument	OFFS_REG ( arg )		1033555	0					
ANR	1033662	CallExpression	OFFS_REG ( arg )		1033555	0					
ANR	1033663	Callee	OFFS_REG		1033555	0					
ANR	1033664	Identifier	OFFS_REG		1033555	0					
ANR	1033665	ArgumentList	arg		1033555	1					
ANR	1033666	Argument	arg		1033555	0					
ANR	1033667	Identifier	arg		1033555	0					
ANR	1033668	ConditionalExpression	argw ? ( 1 << 12 ) : 0		1033555	1					
ANR	1033669	Condition	argw		1033555	0					
ANR	1033670	Identifier	argw		1033555	0					
ANR	1033671	ShiftExpression	1 << 12		1033555	1		<<			
ANR	1033672	PrimaryExpression	1		1033555	0					
ANR	1033673	PrimaryExpression	12		1033555	1					
ANR	1033674	PrimaryExpression	0		1033555	2					
ANR	1033675	ExpressionStatement	other_r = OFFS_REG ( arg )	1567:2:48582:48605	1033555	2	True				
ANR	1033676	AssignmentExpression	other_r = OFFS_REG ( arg )		1033555	0		=			
ANR	1033677	Identifier	other_r		1033555	0					
ANR	1033678	CallExpression	OFFS_REG ( arg )		1033555	1					
ANR	1033679	Callee	OFFS_REG		1033555	0					
ANR	1033680	Identifier	OFFS_REG		1033555	0					
ANR	1033681	ArgumentList	arg		1033555	1					
ANR	1033682	Argument	arg		1033555	0					
ANR	1033683	Identifier	arg		1033555	0					
ANR	1033684	ExpressionStatement	arg &= REG_MASK	1568:2:48609:48624	1033555	3	True				
ANR	1033685	AssignmentExpression	arg &= REG_MASK		1033555	0		&=			
ANR	1033686	Identifier	arg		1033555	0					
ANR	1033687	Identifier	REG_MASK		1033555	1					
ANR	1033688	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) ) )"	1569:2:48628:48715	1033555	4	True				
ANR	1033689	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) ) )"		1033555	0					
ANR	1033690	Callee	FAIL_IF		1033555	0					
ANR	1033691	Identifier	FAIL_IF		1033555	0					
ANR	1033692	ArgumentList	"push_inst ( compiler , ADD | RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1033555	1					
ANR	1033693	Argument	"push_inst ( compiler , ADD | RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1033555	0					
ANR	1033694	CallExpression	"push_inst ( compiler , ADD | RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 ) )"		1033555	0					
ANR	1033695	Callee	push_inst		1033555	0					
ANR	1033696	Identifier	push_inst		1033555	0					
ANR	1033697	ArgumentList	compiler		1033555	1					
ANR	1033698	Argument	compiler		1033555	0					
ANR	1033699	Identifier	compiler		1033555	0					
ANR	1033700	Argument	ADD | RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1033555	1					
ANR	1033701	InclusiveOrExpression	ADD | RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1033555	0		|			
ANR	1033702	Identifier	ADD		1033555	0					
ANR	1033703	InclusiveOrExpression	RD ( TMP_REG1 ) | RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1033555	1		|			
ANR	1033704	CallExpression	RD ( TMP_REG1 )		1033555	0					
ANR	1033705	Callee	RD		1033555	0					
ANR	1033706	Identifier	RD		1033555	0					
ANR	1033707	ArgumentList	TMP_REG1		1033555	1					
ANR	1033708	Argument	TMP_REG1		1033555	0					
ANR	1033709	Identifier	TMP_REG1		1033555	0					
ANR	1033710	InclusiveOrExpression	RN ( arg ) | RM ( other_r ) | ( argw << 10 )		1033555	1		|			
ANR	1033711	CallExpression	RN ( arg )		1033555	0					
ANR	1033712	Callee	RN		1033555	0					
ANR	1033713	Identifier	RN		1033555	0					
ANR	1033714	ArgumentList	arg		1033555	1					
ANR	1033715	Argument	arg		1033555	0					
ANR	1033716	Identifier	arg		1033555	0					
ANR	1033717	InclusiveOrExpression	RM ( other_r ) | ( argw << 10 )		1033555	1		|			
ANR	1033718	CallExpression	RM ( other_r )		1033555	0					
ANR	1033719	Callee	RM		1033555	0					
ANR	1033720	Identifier	RM		1033555	0					
ANR	1033721	ArgumentList	other_r		1033555	1					
ANR	1033722	Argument	other_r		1033555	0					
ANR	1033723	Identifier	other_r		1033555	0					
ANR	1033724	ShiftExpression	argw << 10		1033555	1		<<			
ANR	1033725	Identifier	argw		1033555	0					
ANR	1033726	PrimaryExpression	10		1033555	1					
ANR	1033727	ExpressionStatement	arg = TMP_REG1	1570:2:48719:48733	1033555	5	True				
ANR	1033728	AssignmentExpression	arg = TMP_REG1		1033555	0		=			
ANR	1033729	Identifier	arg		1033555	0					
ANR	1033730	Identifier	TMP_REG1		1033555	1					
ANR	1033731	ExpressionStatement	argw = 0	1571:2:48737:48745	1033555	6	True				
ANR	1033732	AssignmentExpression	argw = 0		1033555	0		=			
ANR	1033733	Identifier	argw		1033555	0					
ANR	1033734	PrimaryExpression	0		1033555	1					
ANR	1033735	ExpressionStatement	arg &= REG_MASK	1574:1:48752:48767	1033555	7	True				
ANR	1033736	AssignmentExpression	arg &= REG_MASK		1033555	0		&=			
ANR	1033737	Identifier	arg		1033555	0					
ANR	1033738	Identifier	REG_MASK		1033555	1					
ANR	1033739	IfStatement	if ( arg && argw >= 0 && ( ( argw >> shift ) <= 0xfff ) && ( argw & ( ( 1 << shift ) - 1 ) ) == 0 )		1033555	8					
ANR	1033740	Condition	arg && argw >= 0 && ( ( argw >> shift ) <= 0xfff ) && ( argw & ( ( 1 << shift ) - 1 ) ) == 0	1575:5:48774:48855	1033555	0	True				
ANR	1033741	AndExpression	arg && argw >= 0 && ( ( argw >> shift ) <= 0xfff ) && ( argw & ( ( 1 << shift ) - 1 ) ) == 0		1033555	0		&&			
ANR	1033742	Identifier	arg		1033555	0					
ANR	1033743	AndExpression	argw >= 0 && ( ( argw >> shift ) <= 0xfff ) && ( argw & ( ( 1 << shift ) - 1 ) ) == 0		1033555	1		&&			
ANR	1033744	RelationalExpression	argw >= 0		1033555	0		>=			
ANR	1033745	Identifier	argw		1033555	0					
ANR	1033746	PrimaryExpression	0		1033555	1					
ANR	1033747	AndExpression	( ( argw >> shift ) <= 0xfff ) && ( argw & ( ( 1 << shift ) - 1 ) ) == 0		1033555	1		&&			
ANR	1033748	RelationalExpression	( argw >> shift ) <= 0xfff		1033555	0		<=			
ANR	1033749	ShiftExpression	argw >> shift		1033555	0		>>			
ANR	1033750	Identifier	argw		1033555	0					
ANR	1033751	Identifier	shift		1033555	1					
ANR	1033752	PrimaryExpression	0xfff		1033555	1					
ANR	1033753	EqualityExpression	( argw & ( ( 1 << shift ) - 1 ) ) == 0		1033555	1		==			
ANR	1033754	BitAndExpression	argw & ( ( 1 << shift ) - 1 )		1033555	0		&			
ANR	1033755	Identifier	argw		1033555	0					
ANR	1033756	AdditiveExpression	( 1 << shift ) - 1		1033555	1		-			
ANR	1033757	ShiftExpression	1 << shift		1033555	0		<<			
ANR	1033758	PrimaryExpression	1		1033555	0					
ANR	1033759	Identifier	shift		1033555	1					
ANR	1033760	PrimaryExpression	1		1033555	1					
ANR	1033761	PrimaryExpression	0		1033555	1					
ANR	1033762	ReturnStatement	"return push_inst ( compiler , STR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) ) ) ;"	1576:2:48860:48950	1033555	1	True				
ANR	1033763	CallExpression	"push_inst ( compiler , STR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) ) )"		1033555	0					
ANR	1033764	Callee	push_inst		1033555	0					
ANR	1033765	Identifier	push_inst		1033555	0					
ANR	1033766	ArgumentList	compiler		1033555	1					
ANR	1033767	Argument	compiler		1033555	0					
ANR	1033768	Identifier	compiler		1033555	0					
ANR	1033769	Argument	STR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1033555	1					
ANR	1033770	InclusiveOrExpression	STR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1033555	0		|			
ANR	1033771	Identifier	STR_FI		1033555	0					
ANR	1033772	InclusiveOrExpression	ins_bits | VT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1033555	1		|			
ANR	1033773	Identifier	ins_bits		1033555	0					
ANR	1033774	InclusiveOrExpression	VT ( reg ) | RN ( arg ) | ( argw << ( 10 - shift ) )		1033555	1		|			
ANR	1033775	CallExpression	VT ( reg )		1033555	0					
ANR	1033776	Callee	VT		1033555	0					
ANR	1033777	Identifier	VT		1033555	0					
ANR	1033778	ArgumentList	reg		1033555	1					
ANR	1033779	Argument	reg		1033555	0					
ANR	1033780	Identifier	reg		1033555	0					
ANR	1033781	InclusiveOrExpression	RN ( arg ) | ( argw << ( 10 - shift ) )		1033555	1		|			
ANR	1033782	CallExpression	RN ( arg )		1033555	0					
ANR	1033783	Callee	RN		1033555	0					
ANR	1033784	Identifier	RN		1033555	0					
ANR	1033785	ArgumentList	arg		1033555	1					
ANR	1033786	Argument	arg		1033555	0					
ANR	1033787	Identifier	arg		1033555	0					
ANR	1033788	ShiftExpression	argw << ( 10 - shift )		1033555	1		<<			
ANR	1033789	Identifier	argw		1033555	0					
ANR	1033790	AdditiveExpression	10 - shift		1033555	1		-			
ANR	1033791	PrimaryExpression	10		1033555	0					
ANR	1033792	Identifier	shift		1033555	1					
ANR	1033793	IfStatement	if ( arg && argw <= 255 && argw >= - 256 )		1033555	9					
ANR	1033794	Condition	arg && argw <= 255 && argw >= - 256	1578:5:48958:48991	1033555	0	True				
ANR	1033795	AndExpression	arg && argw <= 255 && argw >= - 256		1033555	0		&&			
ANR	1033796	Identifier	arg		1033555	0					
ANR	1033797	AndExpression	argw <= 255 && argw >= - 256		1033555	1		&&			
ANR	1033798	RelationalExpression	argw <= 255		1033555	0		<=			
ANR	1033799	Identifier	argw		1033555	0					
ANR	1033800	PrimaryExpression	255		1033555	1					
ANR	1033801	RelationalExpression	argw >= - 256		1033555	1		>=			
ANR	1033802	Identifier	argw		1033555	0					
ANR	1033803	UnaryOperationExpression	- 256		1033555	1					
ANR	1033804	UnaryOperator	-		1033555	0					
ANR	1033805	PrimaryExpression	256		1033555	1					
ANR	1033806	ReturnStatement	"return push_inst ( compiler , STUR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 ) ) ;"	1579:2:48996:49087	1033555	1	True				
ANR	1033807	CallExpression	"push_inst ( compiler , STUR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 ) )"		1033555	0					
ANR	1033808	Callee	push_inst		1033555	0					
ANR	1033809	Identifier	push_inst		1033555	0					
ANR	1033810	ArgumentList	compiler		1033555	1					
ANR	1033811	Argument	compiler		1033555	0					
ANR	1033812	Identifier	compiler		1033555	0					
ANR	1033813	Argument	STUR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1033555	1					
ANR	1033814	InclusiveOrExpression	STUR_FI | ins_bits | VT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1033555	0		|			
ANR	1033815	Identifier	STUR_FI		1033555	0					
ANR	1033816	InclusiveOrExpression	ins_bits | VT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1033555	1		|			
ANR	1033817	Identifier	ins_bits		1033555	0					
ANR	1033818	InclusiveOrExpression	VT ( reg ) | RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1033555	1		|			
ANR	1033819	CallExpression	VT ( reg )		1033555	0					
ANR	1033820	Callee	VT		1033555	0					
ANR	1033821	Identifier	VT		1033555	0					
ANR	1033822	ArgumentList	reg		1033555	1					
ANR	1033823	Argument	reg		1033555	0					
ANR	1033824	Identifier	reg		1033555	0					
ANR	1033825	InclusiveOrExpression	RN ( arg ) | ( ( argw & 0x1ff ) << 12 )		1033555	1		|			
ANR	1033826	CallExpression	RN ( arg )		1033555	0					
ANR	1033827	Callee	RN		1033555	0					
ANR	1033828	Identifier	RN		1033555	0					
ANR	1033829	ArgumentList	arg		1033555	1					
ANR	1033830	Argument	arg		1033555	0					
ANR	1033831	Identifier	arg		1033555	0					
ANR	1033832	ShiftExpression	( argw & 0x1ff ) << 12		1033555	1		<<			
ANR	1033833	BitAndExpression	argw & 0x1ff		1033555	0		&			
ANR	1033834	Identifier	argw		1033555	0					
ANR	1033835	PrimaryExpression	0x1ff		1033555	1					
ANR	1033836	PrimaryExpression	12		1033555	1					
ANR	1033837	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM && argw != compiler -> cache_argw )		1033555	10					
ANR	1033838	Condition	compiler -> cache_arg == SLJIT_MEM && argw != compiler -> cache_argw	1582:5:49113:49176	1033555	0	True				
ANR	1033839	AndExpression	compiler -> cache_arg == SLJIT_MEM && argw != compiler -> cache_argw		1033555	0		&&			
ANR	1033840	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1033555	0		==			
ANR	1033841	PtrMemberAccess	compiler -> cache_arg		1033555	0					
ANR	1033842	Identifier	compiler		1033555	0					
ANR	1033843	Identifier	cache_arg		1033555	1					
ANR	1033844	Identifier	SLJIT_MEM		1033555	1					
ANR	1033845	EqualityExpression	argw != compiler -> cache_argw		1033555	1		!=			
ANR	1033846	Identifier	argw		1033555	0					
ANR	1033847	PtrMemberAccess	compiler -> cache_argw		1033555	1					
ANR	1033848	Identifier	compiler		1033555	0					
ANR	1033849	Identifier	cache_argw		1033555	1					
ANR	1033850	CompoundStatement		32:71:995:995	1033555	1					
ANR	1033851	ExpressionStatement	diff = argw - compiler -> cache_argw	1583:2:49183:49217	1033555	0	True				
ANR	1033852	AssignmentExpression	diff = argw - compiler -> cache_argw		1033555	0		=			
ANR	1033853	Identifier	diff		1033555	0					
ANR	1033854	AdditiveExpression	argw - compiler -> cache_argw		1033555	1		-			
ANR	1033855	Identifier	argw		1033555	0					
ANR	1033856	PtrMemberAccess	compiler -> cache_argw		1033555	1					
ANR	1033857	Identifier	compiler		1033555	0					
ANR	1033858	Identifier	cache_argw		1033555	1					
ANR	1033859	IfStatement	if ( ! arg && diff <= 255 && diff >= - 256 )		1033555	1					
ANR	1033860	Condition	! arg && diff <= 255 && diff >= - 256	1584:6:49225:49259	1033555	0	True				
ANR	1033861	AndExpression	! arg && diff <= 255 && diff >= - 256		1033555	0		&&			
ANR	1033862	UnaryOperationExpression	! arg		1033555	0					
ANR	1033863	UnaryOperator	!		1033555	0					
ANR	1033864	Identifier	arg		1033555	1					
ANR	1033865	AndExpression	diff <= 255 && diff >= - 256		1033555	1		&&			
ANR	1033866	RelationalExpression	diff <= 255		1033555	0		<=			
ANR	1033867	Identifier	diff		1033555	0					
ANR	1033868	PrimaryExpression	255		1033555	1					
ANR	1033869	RelationalExpression	diff >= - 256		1033555	1		>=			
ANR	1033870	Identifier	diff		1033555	0					
ANR	1033871	UnaryOperationExpression	- 256		1033555	1					
ANR	1033872	UnaryOperator	-		1033555	0					
ANR	1033873	PrimaryExpression	256		1033555	1					
ANR	1033874	ReturnStatement	"return push_inst ( compiler , STUR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 ) ) ;"	1585:3:49265:49361	1033555	1	True				
ANR	1033875	CallExpression	"push_inst ( compiler , STUR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 ) )"		1033555	0					
ANR	1033876	Callee	push_inst		1033555	0					
ANR	1033877	Identifier	push_inst		1033555	0					
ANR	1033878	ArgumentList	compiler		1033555	1					
ANR	1033879	Argument	compiler		1033555	0					
ANR	1033880	Identifier	compiler		1033555	0					
ANR	1033881	Argument	STUR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1033555	1					
ANR	1033882	InclusiveOrExpression	STUR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1033555	0		|			
ANR	1033883	Identifier	STUR_FI		1033555	0					
ANR	1033884	InclusiveOrExpression	ins_bits | VT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1033555	1		|			
ANR	1033885	Identifier	ins_bits		1033555	0					
ANR	1033886	InclusiveOrExpression	VT ( reg ) | RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1033555	1		|			
ANR	1033887	CallExpression	VT ( reg )		1033555	0					
ANR	1033888	Callee	VT		1033555	0					
ANR	1033889	Identifier	VT		1033555	0					
ANR	1033890	ArgumentList	reg		1033555	1					
ANR	1033891	Argument	reg		1033555	0					
ANR	1033892	Identifier	reg		1033555	0					
ANR	1033893	InclusiveOrExpression	RN ( TMP_REG3 ) | ( ( diff & 0x1ff ) << 12 )		1033555	1		|			
ANR	1033894	CallExpression	RN ( TMP_REG3 )		1033555	0					
ANR	1033895	Callee	RN		1033555	0					
ANR	1033896	Identifier	RN		1033555	0					
ANR	1033897	ArgumentList	TMP_REG3		1033555	1					
ANR	1033898	Argument	TMP_REG3		1033555	0					
ANR	1033899	Identifier	TMP_REG3		1033555	0					
ANR	1033900	ShiftExpression	( diff & 0x1ff ) << 12		1033555	1		<<			
ANR	1033901	BitAndExpression	diff & 0x1ff		1033555	0		&			
ANR	1033902	Identifier	diff		1033555	0					
ANR	1033903	PrimaryExpression	0x1ff		1033555	1					
ANR	1033904	PrimaryExpression	12		1033555	1					
ANR	1033905	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED )"		1033555	2					
ANR	1033906	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"	1586:6:49369:49466	1033555	0	True				
ANR	1033907	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"		1033555	0		!=			
ANR	1033908	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw )"		1033555	0					
ANR	1033909	Callee	emit_set_delta		1033555	0					
ANR	1033910	Identifier	emit_set_delta		1033555	0					
ANR	1033911	ArgumentList	compiler		1033555	1					
ANR	1033912	Argument	compiler		1033555	0					
ANR	1033913	Identifier	compiler		1033555	0					
ANR	1033914	Argument	TMP_REG3		1033555	1					
ANR	1033915	Identifier	TMP_REG3		1033555	0					
ANR	1033916	Argument	TMP_REG3		1033555	2					
ANR	1033917	Identifier	TMP_REG3		1033555	0					
ANR	1033918	Argument	argw - compiler -> cache_argw		1033555	3					
ANR	1033919	AdditiveExpression	argw - compiler -> cache_argw		1033555	0		-			
ANR	1033920	Identifier	argw		1033555	0					
ANR	1033921	PtrMemberAccess	compiler -> cache_argw		1033555	1					
ANR	1033922	Identifier	compiler		1033555	0					
ANR	1033923	Identifier	cache_argw		1033555	1					
ANR	1033924	Identifier	SLJIT_ERR_UNSUPPORTED		1033555	1					
ANR	1033925	CompoundStatement		36:106:1285:1285	1033555	1					
ANR	1033926	ExpressionStatement	FAIL_IF ( compiler -> error )	1587:3:49474:49498	1033555	0	True				
ANR	1033927	CallExpression	FAIL_IF ( compiler -> error )		1033555	0					
ANR	1033928	Callee	FAIL_IF		1033555	0					
ANR	1033929	Identifier	FAIL_IF		1033555	0					
ANR	1033930	ArgumentList	compiler -> error		1033555	1					
ANR	1033931	Argument	compiler -> error		1033555	0					
ANR	1033932	PtrMemberAccess	compiler -> error		1033555	0					
ANR	1033933	Identifier	compiler		1033555	0					
ANR	1033934	Identifier	error		1033555	1					
ANR	1033935	ExpressionStatement	compiler -> cache_argw = argw	1588:3:49503:49530	1033555	1	True				
ANR	1033936	AssignmentExpression	compiler -> cache_argw = argw		1033555	0		=			
ANR	1033937	PtrMemberAccess	compiler -> cache_argw		1033555	0					
ANR	1033938	Identifier	compiler		1033555	0					
ANR	1033939	Identifier	cache_argw		1033555	1					
ANR	1033940	Identifier	argw		1033555	1					
ANR	1033941	IfStatement	if ( compiler -> cache_arg != SLJIT_MEM || argw != compiler -> cache_argw )		1033555	11					
ANR	1033942	Condition	compiler -> cache_arg != SLJIT_MEM || argw != compiler -> cache_argw	1592:5:49545:49608	1033555	0	True				
ANR	1033943	OrExpression	compiler -> cache_arg != SLJIT_MEM || argw != compiler -> cache_argw		1033555	0		||			
ANR	1033944	EqualityExpression	compiler -> cache_arg != SLJIT_MEM		1033555	0		!=			
ANR	1033945	PtrMemberAccess	compiler -> cache_arg		1033555	0					
ANR	1033946	Identifier	compiler		1033555	0					
ANR	1033947	Identifier	cache_arg		1033555	1					
ANR	1033948	Identifier	SLJIT_MEM		1033555	1					
ANR	1033949	EqualityExpression	argw != compiler -> cache_argw		1033555	1		!=			
ANR	1033950	Identifier	argw		1033555	0					
ANR	1033951	PtrMemberAccess	compiler -> cache_argw		1033555	1					
ANR	1033952	Identifier	compiler		1033555	0					
ANR	1033953	Identifier	cache_argw		1033555	1					
ANR	1033954	CompoundStatement		42:71:1427:1427	1033555	1					
ANR	1033955	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1593:2:49615:49646	1033555	0	True				
ANR	1033956	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1033555	0		=			
ANR	1033957	PtrMemberAccess	compiler -> cache_arg		1033555	0					
ANR	1033958	Identifier	compiler		1033555	0					
ANR	1033959	Identifier	cache_arg		1033555	1					
ANR	1033960	Identifier	SLJIT_MEM		1033555	1					
ANR	1033961	ExpressionStatement	compiler -> cache_argw = argw	1594:2:49650:49677	1033555	1	True				
ANR	1033962	AssignmentExpression	compiler -> cache_argw = argw		1033555	0		=			
ANR	1033963	PtrMemberAccess	compiler -> cache_argw		1033555	0					
ANR	1033964	Identifier	compiler		1033555	0					
ANR	1033965	Identifier	cache_argw		1033555	1					
ANR	1033966	Identifier	argw		1033555	1					
ANR	1033967	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1595:2:49681:49730	1033555	2	True				
ANR	1033968	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1033555	0					
ANR	1033969	Callee	FAIL_IF		1033555	0					
ANR	1033970	Identifier	FAIL_IF		1033555	0					
ANR	1033971	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1033555	1					
ANR	1033972	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1033555	0					
ANR	1033973	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1033555	0					
ANR	1033974	Callee	load_immediate		1033555	0					
ANR	1033975	Identifier	load_immediate		1033555	0					
ANR	1033976	ArgumentList	compiler		1033555	1					
ANR	1033977	Argument	compiler		1033555	0					
ANR	1033978	Identifier	compiler		1033555	0					
ANR	1033979	Argument	TMP_REG3		1033555	1					
ANR	1033980	Identifier	TMP_REG3		1033555	0					
ANR	1033981	Argument	argw		1033555	2					
ANR	1033982	Identifier	argw		1033555	0					
ANR	1033983	IfStatement	if ( arg & REG_MASK )		1033555	12					
ANR	1033984	Condition	arg & REG_MASK	1598:5:49741:49754	1033555	0	True				
ANR	1033985	BitAndExpression	arg & REG_MASK		1033555	0		&			
ANR	1033986	Identifier	arg		1033555	0					
ANR	1033987	Identifier	REG_MASK		1033555	1					
ANR	1033988	ReturnStatement	"return push_inst ( compiler , STR_FR | ins_bits | VT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) ) ;"	1599:2:49759:49839	1033555	1	True				
ANR	1033989	CallExpression	"push_inst ( compiler , STR_FR | ins_bits | VT ( reg ) | RN ( arg ) | RM ( TMP_REG3 ) )"		1033555	0					
ANR	1033990	Callee	push_inst		1033555	0					
ANR	1033991	Identifier	push_inst		1033555	0					
ANR	1033992	ArgumentList	compiler		1033555	1					
ANR	1033993	Argument	compiler		1033555	0					
ANR	1033994	Identifier	compiler		1033555	0					
ANR	1033995	Argument	STR_FR | ins_bits | VT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1033555	1					
ANR	1033996	InclusiveOrExpression	STR_FR | ins_bits | VT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1033555	0		|			
ANR	1033997	Identifier	STR_FR		1033555	0					
ANR	1033998	InclusiveOrExpression	ins_bits | VT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1033555	1		|			
ANR	1033999	Identifier	ins_bits		1033555	0					
ANR	1034000	InclusiveOrExpression	VT ( reg ) | RN ( arg ) | RM ( TMP_REG3 )		1033555	1		|			
ANR	1034001	CallExpression	VT ( reg )		1033555	0					
ANR	1034002	Callee	VT		1033555	0					
ANR	1034003	Identifier	VT		1033555	0					
ANR	1034004	ArgumentList	reg		1033555	1					
ANR	1034005	Argument	reg		1033555	0					
ANR	1034006	Identifier	reg		1033555	0					
ANR	1034007	InclusiveOrExpression	RN ( arg ) | RM ( TMP_REG3 )		1033555	1		|			
ANR	1034008	CallExpression	RN ( arg )		1033555	0					
ANR	1034009	Callee	RN		1033555	0					
ANR	1034010	Identifier	RN		1033555	0					
ANR	1034011	ArgumentList	arg		1033555	1					
ANR	1034012	Argument	arg		1033555	0					
ANR	1034013	Identifier	arg		1033555	0					
ANR	1034014	CallExpression	RM ( TMP_REG3 )		1033555	1					
ANR	1034015	Callee	RM		1033555	0					
ANR	1034016	Identifier	RM		1033555	0					
ANR	1034017	ArgumentList	TMP_REG3		1033555	1					
ANR	1034018	Argument	TMP_REG3		1033555	0					
ANR	1034019	Identifier	TMP_REG3		1033555	0					
ANR	1034020	ReturnStatement	"return push_inst ( compiler , STR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 ) ) ;"	1600:1:49842:49912	1033555	13	True				
ANR	1034021	CallExpression	"push_inst ( compiler , STR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 ) )"		1033555	0					
ANR	1034022	Callee	push_inst		1033555	0					
ANR	1034023	Identifier	push_inst		1033555	0					
ANR	1034024	ArgumentList	compiler		1033555	1					
ANR	1034025	Argument	compiler		1033555	0					
ANR	1034026	Identifier	compiler		1033555	0					
ANR	1034027	Argument	STR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 )		1033555	1					
ANR	1034028	InclusiveOrExpression	STR_FI | ins_bits | VT ( reg ) | RN ( TMP_REG3 )		1033555	0		|			
ANR	1034029	Identifier	STR_FI		1033555	0					
ANR	1034030	InclusiveOrExpression	ins_bits | VT ( reg ) | RN ( TMP_REG3 )		1033555	1		|			
ANR	1034031	Identifier	ins_bits		1033555	0					
ANR	1034032	InclusiveOrExpression	VT ( reg ) | RN ( TMP_REG3 )		1033555	1		|			
ANR	1034033	CallExpression	VT ( reg )		1033555	0					
ANR	1034034	Callee	VT		1033555	0					
ANR	1034035	Identifier	VT		1033555	0					
ANR	1034036	ArgumentList	reg		1033555	1					
ANR	1034037	Argument	reg		1033555	0					
ANR	1034038	Identifier	reg		1033555	0					
ANR	1034039	CallExpression	RN ( TMP_REG3 )		1033555	1					
ANR	1034040	Callee	RN		1033555	0					
ANR	1034041	Identifier	RN		1033555	0					
ANR	1034042	ArgumentList	TMP_REG3		1033555	1					
ANR	1034043	Argument	TMP_REG3		1033555	0					
ANR	1034044	Identifier	TMP_REG3		1033555	0					
ANR	1034045	ReturnType	static sljit_si		1033555	1					
ANR	1034046	Identifier	emit_fop_mem		1033555	2					
ANR	1034047	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1033555	3					
ANR	1034048	Parameter	struct sljit_compiler * compiler	1550:29:48091:48121	1033555	0	True				
ANR	1034049	ParameterType	struct sljit_compiler *		1033555	0					
ANR	1034050	Identifier	compiler		1033555	1					
ANR	1034051	Parameter	sljit_si flags	1550:62:48124:48137	1033555	1	True				
ANR	1034052	ParameterType	sljit_si		1033555	0					
ANR	1034053	Identifier	flags		1033555	1					
ANR	1034054	Parameter	sljit_si reg	1550:78:48140:48151	1033555	2	True				
ANR	1034055	ParameterType	sljit_si		1033555	0					
ANR	1034056	Identifier	reg		1033555	1					
ANR	1034057	Parameter	sljit_si arg	1550:92:48154:48165	1033555	3	True				
ANR	1034058	ParameterType	sljit_si		1033555	0					
ANR	1034059	Identifier	arg		1033555	1					
ANR	1034060	Parameter	sljit_sw argw	1550:106:48168:48180	1033555	4	True				
ANR	1034061	ParameterType	sljit_sw		1033555	0					
ANR	1034062	Identifier	argw		1033555	1					
ANR	1034063	CFGEntryNode	ENTRY		1033555		True				
ANR	1034064	CFGExitNode	EXIT		1033555		True				
ANR	1034065	Symbol	MEM_SIZE_SHIFT		1033555						
ANR	1034066	Symbol	TMP_REG3		1033555						
ANR	1034067	Symbol	ADD		1033555						
ANR	1034068	Symbol	TMP_REG1		1033555						
ANR	1034069	Symbol	compiler -> cache_argw		1033555						
ANR	1034070	Symbol	SLJIT_MEM		1033555						
ANR	1034071	Symbol	shift		1033555						
ANR	1034072	Symbol	flags		1033555						
ANR	1034073	Symbol	* compiler		1033555						
ANR	1034074	Symbol	argw		1033555						
ANR	1034075	Symbol	STR_FR		1033555						
ANR	1034076	Symbol	emit_set_delta		1033555						
ANR	1034077	Symbol	load_immediate		1033555						
ANR	1034078	Symbol	reg		1033555						
ANR	1034079	Symbol	arg		1033555						
ANR	1034080	Symbol	ins_bits		1033555						
ANR	1034081	Symbol	STR_FI		1033555						
ANR	1034082	Symbol	compiler		1033555						
ANR	1034083	Symbol	push_inst		1033555						
ANR	1034084	Symbol	REG_MASK		1033555						
ANR	1034085	Symbol	compiler -> cache_arg		1033555						
ANR	1034086	Symbol	OFFS_REG_MASK		1033555						
ANR	1034087	Symbol	diff		1033555						
ANR	1034088	Symbol	other_r		1033555						
ANR	1034089	Symbol	RD		1033555						
ANR	1034090	Symbol	STUR_FI		1033555						
ANR	1034091	Symbol	STORE		1033555						
ANR	1034092	Symbol	OFFS_REG		1033555						
ANR	1034093	Symbol	RM		1033555						
ANR	1034094	Symbol	RN		1033555						
ANR	1034095	Symbol	compiler -> error		1033555						
ANR	1034096	Symbol	VT		1033555						
ANR	1034097	Symbol	SLJIT_ERR_UNSUPPORTED		1033555						
ANR	1034098	Function	sljit_emit_fop1_convw_fromd	1603:0:49917:50678							
ANR	1034099	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1034098	0					
ANR	1034100	CompoundStatement		1606:0:50080:50678	1034098	0					
ANR	1034101	IdentifierDeclStatement	sljit_si dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1 ;	1607:1:50083:50133	1034098	0	True				
ANR	1034102	IdentifierDecl	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1034098	0					
ANR	1034103	IdentifierDeclType	sljit_si		1034098	0					
ANR	1034104	Identifier	dst_r		1034098	1					
ANR	1034105	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1034098	2		=			
ANR	1034106	Identifier	dst_r		1034098	0					
ANR	1034107	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1034098	1					
ANR	1034108	Condition	SLOW_IS_REG ( dst )		1034098	0					
ANR	1034109	CallExpression	SLOW_IS_REG ( dst )		1034098	0					
ANR	1034110	Callee	SLOW_IS_REG		1034098	0					
ANR	1034111	Identifier	SLOW_IS_REG		1034098	0					
ANR	1034112	ArgumentList	dst		1034098	1					
ANR	1034113	Argument	dst		1034098	0					
ANR	1034114	Identifier	dst		1034098	0					
ANR	1034115	Identifier	dst		1034098	1					
ANR	1034116	Identifier	TMP_REG1		1034098	2					
ANR	1034117	IdentifierDeclStatement	sljit_ins inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0 ;	1608:1:50136:50195	1034098	1	True				
ANR	1034118	IdentifierDecl	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034098	0					
ANR	1034119	IdentifierDeclType	sljit_ins		1034098	0					
ANR	1034120	Identifier	inv_bits		1034098	1					
ANR	1034121	AssignmentExpression	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034098	2		=			
ANR	1034122	Identifier	inv_bits		1034098	0					
ANR	1034123	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034098	1					
ANR	1034124	Condition	op & SLJIT_SINGLE_OP		1034098	0					
ANR	1034125	BitAndExpression	op & SLJIT_SINGLE_OP		1034098	0		&			
ANR	1034126	Identifier	op		1034098	0					
ANR	1034127	Identifier	SLJIT_SINGLE_OP		1034098	1					
ANR	1034128	ShiftExpression	1 << 22		1034098	1		<<			
ANR	1034129	PrimaryExpression	1		1034098	0					
ANR	1034130	PrimaryExpression	22		1034098	1					
ANR	1034131	PrimaryExpression	0		1034098	2					
ANR	1034132	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD )		1034098	2					
ANR	1034133	Condition	GET_OPCODE ( op ) == SLJIT_CONVI_FROMD	1610:5:50203:50237	1034098	0	True				
ANR	1034134	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVI_FROMD		1034098	0		==			
ANR	1034135	CallExpression	GET_OPCODE ( op )		1034098	0					
ANR	1034136	Callee	GET_OPCODE		1034098	0					
ANR	1034137	Identifier	GET_OPCODE		1034098	0					
ANR	1034138	ArgumentList	op		1034098	1					
ANR	1034139	Argument	op		1034098	0					
ANR	1034140	Identifier	op		1034098	0					
ANR	1034141	Identifier	SLJIT_CONVI_FROMD		1034098	1					
ANR	1034142	ExpressionStatement	inv_bits |= ( 1 << 31 )	1611:2:50242:50263	1034098	1	True				
ANR	1034143	AssignmentExpression	inv_bits |= ( 1 << 31 )		1034098	0		|=			
ANR	1034144	Identifier	inv_bits		1034098	0					
ANR	1034145	ShiftExpression	1 << 31		1034098	1		<<			
ANR	1034146	PrimaryExpression	1		1034098	0					
ANR	1034147	PrimaryExpression	31		1034098	1					
ANR	1034148	IfStatement	if ( src & SLJIT_MEM )		1034098	3					
ANR	1034149	Condition	src & SLJIT_MEM	1613:5:50271:50285	1034098	0	True				
ANR	1034150	BitAndExpression	src & SLJIT_MEM		1034098	0		&			
ANR	1034151	Identifier	src		1034098	0					
ANR	1034152	Identifier	SLJIT_MEM		1034098	1					
ANR	1034153	CompoundStatement		8:22:207:207	1034098	1					
ANR	1034154	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE , TMP_FREG1 , src , srcw )"	1614:2:50292:50383	1034098	0	True				
ANR	1034155	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE , TMP_FREG1 , src , srcw )"		1034098	0					
ANR	1034156	Callee	emit_fop_mem		1034098	0					
ANR	1034157	Identifier	emit_fop_mem		1034098	0					
ANR	1034158	ArgumentList	compiler		1034098	1					
ANR	1034159	Argument	compiler		1034098	0					
ANR	1034160	Identifier	compiler		1034098	0					
ANR	1034161	Argument	( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034098	1					
ANR	1034162	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034098	0					
ANR	1034163	Condition	op & SLJIT_SINGLE_OP		1034098	0					
ANR	1034164	BitAndExpression	op & SLJIT_SINGLE_OP		1034098	0		&			
ANR	1034165	Identifier	op		1034098	0					
ANR	1034166	Identifier	SLJIT_SINGLE_OP		1034098	1					
ANR	1034167	Identifier	INT_SIZE		1034098	1					
ANR	1034168	Identifier	WORD_SIZE		1034098	2					
ANR	1034169	Argument	TMP_FREG1		1034098	2					
ANR	1034170	Identifier	TMP_FREG1		1034098	0					
ANR	1034171	Argument	src		1034098	3					
ANR	1034172	Identifier	src		1034098	0					
ANR	1034173	Argument	srcw		1034098	4					
ANR	1034174	Identifier	srcw		1034098	0					
ANR	1034175	ExpressionStatement	src = TMP_FREG1	1615:2:50387:50402	1034098	1	True				
ANR	1034176	AssignmentExpression	src = TMP_FREG1		1034098	0		=			
ANR	1034177	Identifier	src		1034098	0					
ANR	1034178	Identifier	TMP_FREG1		1034098	1					
ANR	1034179	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FCVTZS ^ inv_bits ) | RD ( dst_r ) | VN ( src ) ) )"	1618:1:50409:50480	1034098	4	True				
ANR	1034180	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FCVTZS ^ inv_bits ) | RD ( dst_r ) | VN ( src ) ) )"		1034098	0					
ANR	1034181	Callee	FAIL_IF		1034098	0					
ANR	1034182	Identifier	FAIL_IF		1034098	0					
ANR	1034183	ArgumentList	"push_inst ( compiler , ( FCVTZS ^ inv_bits ) | RD ( dst_r ) | VN ( src ) )"		1034098	1					
ANR	1034184	Argument	"push_inst ( compiler , ( FCVTZS ^ inv_bits ) | RD ( dst_r ) | VN ( src ) )"		1034098	0					
ANR	1034185	CallExpression	"push_inst ( compiler , ( FCVTZS ^ inv_bits ) | RD ( dst_r ) | VN ( src ) )"		1034098	0					
ANR	1034186	Callee	push_inst		1034098	0					
ANR	1034187	Identifier	push_inst		1034098	0					
ANR	1034188	ArgumentList	compiler		1034098	1					
ANR	1034189	Argument	compiler		1034098	0					
ANR	1034190	Identifier	compiler		1034098	0					
ANR	1034191	Argument	( FCVTZS ^ inv_bits ) | RD ( dst_r ) | VN ( src )		1034098	1					
ANR	1034192	InclusiveOrExpression	( FCVTZS ^ inv_bits ) | RD ( dst_r ) | VN ( src )		1034098	0		|			
ANR	1034193	ExclusiveOrExpression	FCVTZS ^ inv_bits		1034098	0		^			
ANR	1034194	Identifier	FCVTZS		1034098	0					
ANR	1034195	Identifier	inv_bits		1034098	1					
ANR	1034196	InclusiveOrExpression	RD ( dst_r ) | VN ( src )		1034098	1		|			
ANR	1034197	CallExpression	RD ( dst_r )		1034098	0					
ANR	1034198	Callee	RD		1034098	0					
ANR	1034199	Identifier	RD		1034098	0					
ANR	1034200	ArgumentList	dst_r		1034098	1					
ANR	1034201	Argument	dst_r		1034098	0					
ANR	1034202	Identifier	dst_r		1034098	0					
ANR	1034203	CallExpression	VN ( src )		1034098	1					
ANR	1034204	Callee	VN		1034098	0					
ANR	1034205	Identifier	VN		1034098	0					
ANR	1034206	ArgumentList	src		1034098	1					
ANR	1034207	Argument	src		1034098	0					
ANR	1034208	Identifier	src		1034098	0					
ANR	1034209	IfStatement	if ( dst_r == TMP_REG1 && dst != SLJIT_UNUSED )		1034098	5					
ANR	1034210	Condition	dst_r == TMP_REG1 && dst != SLJIT_UNUSED	1620:5:50488:50527	1034098	0	True				
ANR	1034211	AndExpression	dst_r == TMP_REG1 && dst != SLJIT_UNUSED		1034098	0		&&			
ANR	1034212	EqualityExpression	dst_r == TMP_REG1		1034098	0		==			
ANR	1034213	Identifier	dst_r		1034098	0					
ANR	1034214	Identifier	TMP_REG1		1034098	1					
ANR	1034215	EqualityExpression	dst != SLJIT_UNUSED		1034098	1		!=			
ANR	1034216	Identifier	dst		1034098	0					
ANR	1034217	Identifier	SLJIT_UNUSED		1034098	1					
ANR	1034218	ReturnStatement	"return emit_op_mem ( compiler , ( ( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? INT_SIZE : WORD_SIZE ) | STORE , TMP_REG1 , dst , dstw ) ;"	1621:2:50532:50653	1034098	1	True				
ANR	1034219	CallExpression	"emit_op_mem ( compiler , ( ( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? INT_SIZE : WORD_SIZE ) | STORE , TMP_REG1 , dst , dstw )"		1034098	0					
ANR	1034220	Callee	emit_op_mem		1034098	0					
ANR	1034221	Identifier	emit_op_mem		1034098	0					
ANR	1034222	ArgumentList	compiler		1034098	1					
ANR	1034223	Argument	compiler		1034098	0					
ANR	1034224	Identifier	compiler		1034098	0					
ANR	1034225	Argument	( ( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? INT_SIZE : WORD_SIZE ) | STORE		1034098	1					
ANR	1034226	InclusiveOrExpression	( ( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? INT_SIZE : WORD_SIZE ) | STORE		1034098	0		|			
ANR	1034227	ConditionalExpression	( GET_OPCODE ( op ) == SLJIT_CONVI_FROMD ) ? INT_SIZE : WORD_SIZE		1034098	0					
ANR	1034228	Condition	GET_OPCODE ( op ) == SLJIT_CONVI_FROMD		1034098	0					
ANR	1034229	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVI_FROMD		1034098	0		==			
ANR	1034230	CallExpression	GET_OPCODE ( op )		1034098	0					
ANR	1034231	Callee	GET_OPCODE		1034098	0					
ANR	1034232	Identifier	GET_OPCODE		1034098	0					
ANR	1034233	ArgumentList	op		1034098	1					
ANR	1034234	Argument	op		1034098	0					
ANR	1034235	Identifier	op		1034098	0					
ANR	1034236	Identifier	SLJIT_CONVI_FROMD		1034098	1					
ANR	1034237	Identifier	INT_SIZE		1034098	1					
ANR	1034238	Identifier	WORD_SIZE		1034098	2					
ANR	1034239	Identifier	STORE		1034098	1					
ANR	1034240	Argument	TMP_REG1		1034098	2					
ANR	1034241	Identifier	TMP_REG1		1034098	0					
ANR	1034242	Argument	dst		1034098	3					
ANR	1034243	Identifier	dst		1034098	0					
ANR	1034244	Argument	dstw		1034098	4					
ANR	1034245	Identifier	dstw		1034098	0					
ANR	1034246	ReturnStatement	return SLJIT_SUCCESS ;	1622:1:50656:50676	1034098	6	True				
ANR	1034247	Identifier	SLJIT_SUCCESS		1034098	0					
ANR	1034248	ReturnType	static SLJIT_INLINE sljit_si		1034098	1					
ANR	1034249	Identifier	sljit_emit_fop1_convw_fromd		1034098	2					
ANR	1034250	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1034098	3					
ANR	1034251	Parameter	struct sljit_compiler * compiler	1603:57:49974:50004	1034098	0	True				
ANR	1034252	ParameterType	struct sljit_compiler *		1034098	0					
ANR	1034253	Identifier	compiler		1034098	1					
ANR	1034254	Parameter	sljit_si op	1603:90:50007:50017	1034098	1	True				
ANR	1034255	ParameterType	sljit_si		1034098	0					
ANR	1034256	Identifier	op		1034098	1					
ANR	1034257	Parameter	sljit_si dst	1604:1:50021:50032	1034098	2	True				
ANR	1034258	ParameterType	sljit_si		1034098	0					
ANR	1034259	Identifier	dst		1034098	1					
ANR	1034260	Parameter	sljit_sw dstw	1604:15:50035:50047	1034098	3	True				
ANR	1034261	ParameterType	sljit_sw		1034098	0					
ANR	1034262	Identifier	dstw		1034098	1					
ANR	1034263	Parameter	sljit_si src	1605:1:50051:50062	1034098	4	True				
ANR	1034264	ParameterType	sljit_si		1034098	0					
ANR	1034265	Identifier	src		1034098	1					
ANR	1034266	Parameter	sljit_sw srcw	1605:15:50065:50077	1034098	5	True				
ANR	1034267	ParameterType	sljit_sw		1034098	0					
ANR	1034268	Identifier	srcw		1034098	1					
ANR	1034269	CFGEntryNode	ENTRY		1034098		True				
ANR	1034270	CFGExitNode	EXIT		1034098		True				
ANR	1034271	Symbol	TMP_REG1		1034098						
ANR	1034272	Symbol	dst		1034098						
ANR	1034273	Symbol	TMP_FREG1		1034098						
ANR	1034274	Symbol	SLJIT_MEM		1034098						
ANR	1034275	Symbol	SLOW_IS_REG		1034098						
ANR	1034276	Symbol	dst_r		1034098						
ANR	1034277	Symbol	GET_OPCODE		1034098						
ANR	1034278	Symbol	SLJIT_CONVI_FROMD		1034098						
ANR	1034279	Symbol	inv_bits		1034098						
ANR	1034280	Symbol	compiler		1034098						
ANR	1034281	Symbol	op		1034098						
ANR	1034282	Symbol	push_inst		1034098						
ANR	1034283	Symbol	src		1034098						
ANR	1034284	Symbol	INT_SIZE		1034098						
ANR	1034285	Symbol	srcw		1034098						
ANR	1034286	Symbol	SLJIT_SINGLE_OP		1034098						
ANR	1034287	Symbol	emit_op_mem		1034098						
ANR	1034288	Symbol	SLJIT_SUCCESS		1034098						
ANR	1034289	Symbol	RD		1034098						
ANR	1034290	Symbol	SLJIT_UNUSED		1034098						
ANR	1034291	Symbol	VN		1034098						
ANR	1034292	Symbol	STORE		1034098						
ANR	1034293	Symbol	dstw		1034098						
ANR	1034294	Symbol	WORD_SIZE		1034098						
ANR	1034295	Symbol	FCVTZS		1034098						
ANR	1034296	Function	sljit_emit_fop1_convd_fromw	1625:0:50681:51653							
ANR	1034297	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1034296	0					
ANR	1034298	CompoundStatement		1628:0:50844:51653	1034296	0					
ANR	1034299	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1 ;	1629:1:50847:50898	1034296	0	True				
ANR	1034300	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1034296	0					
ANR	1034301	IdentifierDeclType	sljit_si		1034296	0					
ANR	1034302	Identifier	dst_r		1034296	1					
ANR	1034303	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1034296	2		=			
ANR	1034304	Identifier	dst_r		1034296	0					
ANR	1034305	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1034296	1					
ANR	1034306	Condition	FAST_IS_REG ( dst )		1034296	0					
ANR	1034307	CallExpression	FAST_IS_REG ( dst )		1034296	0					
ANR	1034308	Callee	FAST_IS_REG		1034296	0					
ANR	1034309	Identifier	FAST_IS_REG		1034296	0					
ANR	1034310	ArgumentList	dst		1034296	1					
ANR	1034311	Argument	dst		1034296	0					
ANR	1034312	Identifier	dst		1034296	0					
ANR	1034313	Identifier	dst		1034296	1					
ANR	1034314	Identifier	TMP_FREG1		1034296	2					
ANR	1034315	IdentifierDeclStatement	sljit_ins inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0 ;	1630:1:50901:50960	1034296	1	True				
ANR	1034316	IdentifierDecl	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034296	0					
ANR	1034317	IdentifierDeclType	sljit_ins		1034296	0					
ANR	1034318	Identifier	inv_bits		1034296	1					
ANR	1034319	AssignmentExpression	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034296	2		=			
ANR	1034320	Identifier	inv_bits		1034296	0					
ANR	1034321	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034296	1					
ANR	1034322	Condition	op & SLJIT_SINGLE_OP		1034296	0					
ANR	1034323	BitAndExpression	op & SLJIT_SINGLE_OP		1034296	0		&			
ANR	1034324	Identifier	op		1034296	0					
ANR	1034325	Identifier	SLJIT_SINGLE_OP		1034296	1					
ANR	1034326	ShiftExpression	1 << 22		1034296	1		<<			
ANR	1034327	PrimaryExpression	1		1034296	0					
ANR	1034328	PrimaryExpression	22		1034296	1					
ANR	1034329	PrimaryExpression	0		1034296	2					
ANR	1034330	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1034296	2					
ANR	1034331	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	1632:5:50968:51002	1034296	0	True				
ANR	1034332	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1034296	0		==			
ANR	1034333	CallExpression	GET_OPCODE ( op )		1034296	0					
ANR	1034334	Callee	GET_OPCODE		1034296	0					
ANR	1034335	Identifier	GET_OPCODE		1034296	0					
ANR	1034336	ArgumentList	op		1034296	1					
ANR	1034337	Argument	op		1034296	0					
ANR	1034338	Identifier	op		1034296	0					
ANR	1034339	Identifier	SLJIT_CONVD_FROMI		1034296	1					
ANR	1034340	ExpressionStatement	inv_bits |= ( 1 << 31 )	1633:2:51007:51028	1034296	1	True				
ANR	1034341	AssignmentExpression	inv_bits |= ( 1 << 31 )		1034296	0		|=			
ANR	1034342	Identifier	inv_bits		1034296	0					
ANR	1034343	ShiftExpression	1 << 31		1034296	1		<<			
ANR	1034344	PrimaryExpression	1		1034296	0					
ANR	1034345	PrimaryExpression	31		1034296	1					
ANR	1034346	IfStatement	if ( src & SLJIT_MEM )		1034296	3					
ANR	1034347	Condition	src & SLJIT_MEM	1635:5:51036:51050	1034296	0	True				
ANR	1034348	BitAndExpression	src & SLJIT_MEM		1034296	0		&			
ANR	1034349	Identifier	src		1034296	0					
ANR	1034350	Identifier	SLJIT_MEM		1034296	1					
ANR	1034351	CompoundStatement		8:22:208:208	1034296	1					
ANR	1034352	ExpressionStatement	"emit_op_mem ( compiler , ( ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? INT_SIZE : WORD_SIZE ) , TMP_REG1 , src , srcw )"	1636:2:51057:51163	1034296	0	True				
ANR	1034353	CallExpression	"emit_op_mem ( compiler , ( ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? INT_SIZE : WORD_SIZE ) , TMP_REG1 , src , srcw )"		1034296	0					
ANR	1034354	Callee	emit_op_mem		1034296	0					
ANR	1034355	Identifier	emit_op_mem		1034296	0					
ANR	1034356	ArgumentList	compiler		1034296	1					
ANR	1034357	Argument	compiler		1034296	0					
ANR	1034358	Identifier	compiler		1034296	0					
ANR	1034359	Argument	( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? INT_SIZE : WORD_SIZE		1034296	1					
ANR	1034360	ConditionalExpression	( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI ) ? INT_SIZE : WORD_SIZE		1034296	0					
ANR	1034361	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1034296	0					
ANR	1034362	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1034296	0		==			
ANR	1034363	CallExpression	GET_OPCODE ( op )		1034296	0					
ANR	1034364	Callee	GET_OPCODE		1034296	0					
ANR	1034365	Identifier	GET_OPCODE		1034296	0					
ANR	1034366	ArgumentList	op		1034296	1					
ANR	1034367	Argument	op		1034296	0					
ANR	1034368	Identifier	op		1034296	0					
ANR	1034369	Identifier	SLJIT_CONVD_FROMI		1034296	1					
ANR	1034370	Identifier	INT_SIZE		1034296	1					
ANR	1034371	Identifier	WORD_SIZE		1034296	2					
ANR	1034372	Argument	TMP_REG1		1034296	2					
ANR	1034373	Identifier	TMP_REG1		1034296	0					
ANR	1034374	Argument	src		1034296	3					
ANR	1034375	Identifier	src		1034296	0					
ANR	1034376	Argument	srcw		1034296	4					
ANR	1034377	Identifier	srcw		1034296	0					
ANR	1034378	ExpressionStatement	src = TMP_REG1	1637:2:51167:51181	1034296	1	True				
ANR	1034379	AssignmentExpression	src = TMP_REG1		1034296	0		=			
ANR	1034380	Identifier	src		1034296	0					
ANR	1034381	Identifier	TMP_REG1		1034296	1					
ANR	1034382	ElseStatement	else		1034296	0					
ANR	1034383	IfStatement	if ( src & SLJIT_IMM )		1034296	0					
ANR	1034384	Condition	src & SLJIT_IMM	1638:12:51195:51209	1034296	0	True				
ANR	1034385	BitAndExpression	src & SLJIT_IMM		1034296	0		&			
ANR	1034386	Identifier	src		1034296	0					
ANR	1034387	Identifier	SLJIT_IMM		1034296	1					
ANR	1034388	CompoundStatement		11:29:367:367	1034296	1					
ANR	1034389	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1034296	0					
ANR	1034390	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	1640:6:51277:51311	1034296	0	True				
ANR	1034391	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1034296	0		==			
ANR	1034392	CallExpression	GET_OPCODE ( op )		1034296	0					
ANR	1034393	Callee	GET_OPCODE		1034296	0					
ANR	1034394	Identifier	GET_OPCODE		1034296	0					
ANR	1034395	ArgumentList	op		1034296	1					
ANR	1034396	Argument	op		1034296	0					
ANR	1034397	Identifier	op		1034296	0					
ANR	1034398	Identifier	SLJIT_CONVD_FROMI		1034296	1					
ANR	1034399	ExpressionStatement	srcw = ( sljit_si ) srcw	1641:3:51317:51338	1034296	1	True				
ANR	1034400	AssignmentExpression	srcw = ( sljit_si ) srcw		1034296	0		=			
ANR	1034401	Identifier	srcw		1034296	0					
ANR	1034402	CastExpression	( sljit_si ) srcw		1034296	1					
ANR	1034403	CastTarget	sljit_si		1034296	0					
ANR	1034404	Identifier	srcw		1034296	1					
ANR	1034405	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	1643:2:51349:51398	1034296	1	True				
ANR	1034406	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1034296	0					
ANR	1034407	Callee	FAIL_IF		1034296	0					
ANR	1034408	Identifier	FAIL_IF		1034296	0					
ANR	1034409	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1034296	1					
ANR	1034410	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1034296	0					
ANR	1034411	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1034296	0					
ANR	1034412	Callee	load_immediate		1034296	0					
ANR	1034413	Identifier	load_immediate		1034296	0					
ANR	1034414	ArgumentList	compiler		1034296	1					
ANR	1034415	Argument	compiler		1034296	0					
ANR	1034416	Identifier	compiler		1034296	0					
ANR	1034417	Argument	TMP_REG1		1034296	1					
ANR	1034418	Identifier	TMP_REG1		1034296	0					
ANR	1034419	Argument	srcw		1034296	2					
ANR	1034420	Identifier	srcw		1034296	0					
ANR	1034421	ExpressionStatement	src = TMP_REG1	1644:2:51402:51416	1034296	2	True				
ANR	1034422	AssignmentExpression	src = TMP_REG1		1034296	0		=			
ANR	1034423	Identifier	src		1034296	0					
ANR	1034424	Identifier	TMP_REG1		1034296	1					
ANR	1034425	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( SCVTF ^ inv_bits ) | VD ( dst_r ) | RN ( src ) ) )"	1647:1:51423:51493	1034296	4	True				
ANR	1034426	CallExpression	"FAIL_IF ( push_inst ( compiler , ( SCVTF ^ inv_bits ) | VD ( dst_r ) | RN ( src ) ) )"		1034296	0					
ANR	1034427	Callee	FAIL_IF		1034296	0					
ANR	1034428	Identifier	FAIL_IF		1034296	0					
ANR	1034429	ArgumentList	"push_inst ( compiler , ( SCVTF ^ inv_bits ) | VD ( dst_r ) | RN ( src ) )"		1034296	1					
ANR	1034430	Argument	"push_inst ( compiler , ( SCVTF ^ inv_bits ) | VD ( dst_r ) | RN ( src ) )"		1034296	0					
ANR	1034431	CallExpression	"push_inst ( compiler , ( SCVTF ^ inv_bits ) | VD ( dst_r ) | RN ( src ) )"		1034296	0					
ANR	1034432	Callee	push_inst		1034296	0					
ANR	1034433	Identifier	push_inst		1034296	0					
ANR	1034434	ArgumentList	compiler		1034296	1					
ANR	1034435	Argument	compiler		1034296	0					
ANR	1034436	Identifier	compiler		1034296	0					
ANR	1034437	Argument	( SCVTF ^ inv_bits ) | VD ( dst_r ) | RN ( src )		1034296	1					
ANR	1034438	InclusiveOrExpression	( SCVTF ^ inv_bits ) | VD ( dst_r ) | RN ( src )		1034296	0		|			
ANR	1034439	ExclusiveOrExpression	SCVTF ^ inv_bits		1034296	0		^			
ANR	1034440	Identifier	SCVTF		1034296	0					
ANR	1034441	Identifier	inv_bits		1034296	1					
ANR	1034442	InclusiveOrExpression	VD ( dst_r ) | RN ( src )		1034296	1		|			
ANR	1034443	CallExpression	VD ( dst_r )		1034296	0					
ANR	1034444	Callee	VD		1034296	0					
ANR	1034445	Identifier	VD		1034296	0					
ANR	1034446	ArgumentList	dst_r		1034296	1					
ANR	1034447	Argument	dst_r		1034296	0					
ANR	1034448	Identifier	dst_r		1034296	0					
ANR	1034449	CallExpression	RN ( src )		1034296	1					
ANR	1034450	Callee	RN		1034296	0					
ANR	1034451	Identifier	RN		1034296	0					
ANR	1034452	ArgumentList	src		1034296	1					
ANR	1034453	Argument	src		1034296	0					
ANR	1034454	Identifier	src		1034296	0					
ANR	1034455	IfStatement	if ( dst & SLJIT_MEM )		1034296	5					
ANR	1034456	Condition	dst & SLJIT_MEM	1649:5:51501:51515	1034296	0	True				
ANR	1034457	BitAndExpression	dst & SLJIT_MEM		1034296	0		&			
ANR	1034458	Identifier	dst		1034296	0					
ANR	1034459	Identifier	SLJIT_MEM		1034296	1					
ANR	1034460	ReturnStatement	"return emit_fop_mem ( compiler , ( ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE ) | STORE , TMP_FREG1 , dst , dstw ) ;"	1650:2:51520:51628	1034296	1	True				
ANR	1034461	CallExpression	"emit_fop_mem ( compiler , ( ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE ) | STORE , TMP_FREG1 , dst , dstw )"		1034296	0					
ANR	1034462	Callee	emit_fop_mem		1034296	0					
ANR	1034463	Identifier	emit_fop_mem		1034296	0					
ANR	1034464	ArgumentList	compiler		1034296	1					
ANR	1034465	Argument	compiler		1034296	0					
ANR	1034466	Identifier	compiler		1034296	0					
ANR	1034467	Argument	( ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE ) | STORE		1034296	1					
ANR	1034468	InclusiveOrExpression	( ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE ) | STORE		1034296	0		|			
ANR	1034469	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034296	0					
ANR	1034470	Condition	op & SLJIT_SINGLE_OP		1034296	0					
ANR	1034471	BitAndExpression	op & SLJIT_SINGLE_OP		1034296	0		&			
ANR	1034472	Identifier	op		1034296	0					
ANR	1034473	Identifier	SLJIT_SINGLE_OP		1034296	1					
ANR	1034474	Identifier	INT_SIZE		1034296	1					
ANR	1034475	Identifier	WORD_SIZE		1034296	2					
ANR	1034476	Identifier	STORE		1034296	1					
ANR	1034477	Argument	TMP_FREG1		1034296	2					
ANR	1034478	Identifier	TMP_FREG1		1034296	0					
ANR	1034479	Argument	dst		1034296	3					
ANR	1034480	Identifier	dst		1034296	0					
ANR	1034481	Argument	dstw		1034296	4					
ANR	1034482	Identifier	dstw		1034296	0					
ANR	1034483	ReturnStatement	return SLJIT_SUCCESS ;	1651:1:51631:51651	1034296	6	True				
ANR	1034484	Identifier	SLJIT_SUCCESS		1034296	0					
ANR	1034485	ReturnType	static SLJIT_INLINE sljit_si		1034296	1					
ANR	1034486	Identifier	sljit_emit_fop1_convd_fromw		1034296	2					
ANR	1034487	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1034296	3					
ANR	1034488	Parameter	struct sljit_compiler * compiler	1625:57:50738:50768	1034296	0	True				
ANR	1034489	ParameterType	struct sljit_compiler *		1034296	0					
ANR	1034490	Identifier	compiler		1034296	1					
ANR	1034491	Parameter	sljit_si op	1625:90:50771:50781	1034296	1	True				
ANR	1034492	ParameterType	sljit_si		1034296	0					
ANR	1034493	Identifier	op		1034296	1					
ANR	1034494	Parameter	sljit_si dst	1626:1:50785:50796	1034296	2	True				
ANR	1034495	ParameterType	sljit_si		1034296	0					
ANR	1034496	Identifier	dst		1034296	1					
ANR	1034497	Parameter	sljit_sw dstw	1626:15:50799:50811	1034296	3	True				
ANR	1034498	ParameterType	sljit_sw		1034296	0					
ANR	1034499	Identifier	dstw		1034296	1					
ANR	1034500	Parameter	sljit_si src	1627:1:50815:50826	1034296	4	True				
ANR	1034501	ParameterType	sljit_si		1034296	0					
ANR	1034502	Identifier	src		1034296	1					
ANR	1034503	Parameter	sljit_sw srcw	1627:15:50829:50841	1034296	5	True				
ANR	1034504	ParameterType	sljit_sw		1034296	0					
ANR	1034505	Identifier	srcw		1034296	1					
ANR	1034506	CFGEntryNode	ENTRY		1034296		True				
ANR	1034507	CFGExitNode	EXIT		1034296		True				
ANR	1034508	Symbol	TMP_REG1		1034296						
ANR	1034509	Symbol	dst		1034296						
ANR	1034510	Symbol	TMP_FREG1		1034296						
ANR	1034511	Symbol	SLJIT_MEM		1034296						
ANR	1034512	Symbol	SCVTF		1034296						
ANR	1034513	Symbol	dst_r		1034296						
ANR	1034514	Symbol	GET_OPCODE		1034296						
ANR	1034515	Symbol	SLJIT_CONVD_FROMI		1034296						
ANR	1034516	Symbol	SLJIT_IMM		1034296						
ANR	1034517	Symbol	load_immediate		1034296						
ANR	1034518	Symbol	emit_fop_mem		1034296						
ANR	1034519	Symbol	inv_bits		1034296						
ANR	1034520	Symbol	compiler		1034296						
ANR	1034521	Symbol	op		1034296						
ANR	1034522	Symbol	push_inst		1034296						
ANR	1034523	Symbol	FAST_IS_REG		1034296						
ANR	1034524	Symbol	src		1034296						
ANR	1034525	Symbol	INT_SIZE		1034296						
ANR	1034526	Symbol	srcw		1034296						
ANR	1034527	Symbol	SLJIT_SINGLE_OP		1034296						
ANR	1034528	Symbol	SLJIT_SUCCESS		1034296						
ANR	1034529	Symbol	VD		1034296						
ANR	1034530	Symbol	STORE		1034296						
ANR	1034531	Symbol	RN		1034296						
ANR	1034532	Symbol	dstw		1034296						
ANR	1034533	Symbol	WORD_SIZE		1034296						
ANR	1034534	Function	sljit_emit_fop1_cmp	1654:0:51656:52239							
ANR	1034535	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1034534	0					
ANR	1034536	CompoundStatement		1657:0:51815:52239	1034534	0					
ANR	1034537	IdentifierDeclStatement	sljit_si mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE ;	1658:1:51818:51884	1034534	0	True				
ANR	1034538	IdentifierDecl	mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034534	0					
ANR	1034539	IdentifierDeclType	sljit_si		1034534	0					
ANR	1034540	Identifier	mem_flags		1034534	1					
ANR	1034541	AssignmentExpression	mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034534	2		=			
ANR	1034542	Identifier	mem_flags		1034534	0					
ANR	1034543	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034534	1					
ANR	1034544	Condition	op & SLJIT_SINGLE_OP		1034534	0					
ANR	1034545	BitAndExpression	op & SLJIT_SINGLE_OP		1034534	0		&			
ANR	1034546	Identifier	op		1034534	0					
ANR	1034547	Identifier	SLJIT_SINGLE_OP		1034534	1					
ANR	1034548	Identifier	INT_SIZE		1034534	1					
ANR	1034549	Identifier	WORD_SIZE		1034534	2					
ANR	1034550	IdentifierDeclStatement	sljit_ins inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0 ;	1659:1:51887:51946	1034534	1	True				
ANR	1034551	IdentifierDecl	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034534	0					
ANR	1034552	IdentifierDeclType	sljit_ins		1034534	0					
ANR	1034553	Identifier	inv_bits		1034534	1					
ANR	1034554	AssignmentExpression	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034534	2		=			
ANR	1034555	Identifier	inv_bits		1034534	0					
ANR	1034556	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034534	1					
ANR	1034557	Condition	op & SLJIT_SINGLE_OP		1034534	0					
ANR	1034558	BitAndExpression	op & SLJIT_SINGLE_OP		1034534	0		&			
ANR	1034559	Identifier	op		1034534	0					
ANR	1034560	Identifier	SLJIT_SINGLE_OP		1034534	1					
ANR	1034561	ShiftExpression	1 << 22		1034534	1		<<			
ANR	1034562	PrimaryExpression	1		1034534	0					
ANR	1034563	PrimaryExpression	22		1034534	1					
ANR	1034564	PrimaryExpression	0		1034534	2					
ANR	1034565	IfStatement	if ( src1 & SLJIT_MEM )		1034534	2					
ANR	1034566	Condition	src1 & SLJIT_MEM	1661:5:51954:51969	1034534	0	True				
ANR	1034567	BitAndExpression	src1 & SLJIT_MEM		1034534	0		&			
ANR	1034568	Identifier	src1		1034534	0					
ANR	1034569	Identifier	SLJIT_MEM		1034534	1					
ANR	1034570	CompoundStatement		5:23:156:156	1034534	1					
ANR	1034571	ExpressionStatement	"emit_fop_mem ( compiler , mem_flags , TMP_FREG1 , src1 , src1w )"	1662:2:51976:52033	1034534	0	True				
ANR	1034572	CallExpression	"emit_fop_mem ( compiler , mem_flags , TMP_FREG1 , src1 , src1w )"		1034534	0					
ANR	1034573	Callee	emit_fop_mem		1034534	0					
ANR	1034574	Identifier	emit_fop_mem		1034534	0					
ANR	1034575	ArgumentList	compiler		1034534	1					
ANR	1034576	Argument	compiler		1034534	0					
ANR	1034577	Identifier	compiler		1034534	0					
ANR	1034578	Argument	mem_flags		1034534	1					
ANR	1034579	Identifier	mem_flags		1034534	0					
ANR	1034580	Argument	TMP_FREG1		1034534	2					
ANR	1034581	Identifier	TMP_FREG1		1034534	0					
ANR	1034582	Argument	src1		1034534	3					
ANR	1034583	Identifier	src1		1034534	0					
ANR	1034584	Argument	src1w		1034534	4					
ANR	1034585	Identifier	src1w		1034534	0					
ANR	1034586	ExpressionStatement	src1 = TMP_FREG1	1663:2:52037:52053	1034534	1	True				
ANR	1034587	AssignmentExpression	src1 = TMP_FREG1		1034534	0		=			
ANR	1034588	Identifier	src1		1034534	0					
ANR	1034589	Identifier	TMP_FREG1		1034534	1					
ANR	1034590	IfStatement	if ( src2 & SLJIT_MEM )		1034534	3					
ANR	1034591	Condition	src2 & SLJIT_MEM	1666:5:52064:52079	1034534	0	True				
ANR	1034592	BitAndExpression	src2 & SLJIT_MEM		1034534	0		&			
ANR	1034593	Identifier	src2		1034534	0					
ANR	1034594	Identifier	SLJIT_MEM		1034534	1					
ANR	1034595	CompoundStatement		10:23:266:266	1034534	1					
ANR	1034596	ExpressionStatement	"emit_fop_mem ( compiler , mem_flags , TMP_FREG2 , src2 , src2w )"	1667:2:52086:52143	1034534	0	True				
ANR	1034597	CallExpression	"emit_fop_mem ( compiler , mem_flags , TMP_FREG2 , src2 , src2w )"		1034534	0					
ANR	1034598	Callee	emit_fop_mem		1034534	0					
ANR	1034599	Identifier	emit_fop_mem		1034534	0					
ANR	1034600	ArgumentList	compiler		1034534	1					
ANR	1034601	Argument	compiler		1034534	0					
ANR	1034602	Identifier	compiler		1034534	0					
ANR	1034603	Argument	mem_flags		1034534	1					
ANR	1034604	Identifier	mem_flags		1034534	0					
ANR	1034605	Argument	TMP_FREG2		1034534	2					
ANR	1034606	Identifier	TMP_FREG2		1034534	0					
ANR	1034607	Argument	src2		1034534	3					
ANR	1034608	Identifier	src2		1034534	0					
ANR	1034609	Argument	src2w		1034534	4					
ANR	1034610	Identifier	src2w		1034534	0					
ANR	1034611	ExpressionStatement	src2 = TMP_FREG2	1668:2:52147:52163	1034534	1	True				
ANR	1034612	AssignmentExpression	src2 = TMP_FREG2		1034534	0		=			
ANR	1034613	Identifier	src2		1034534	0					
ANR	1034614	Identifier	TMP_FREG2		1034534	1					
ANR	1034615	ReturnStatement	"return push_inst ( compiler , ( FCMP ^ inv_bits ) | VN ( src1 ) | VM ( src2 ) ) ;"	1671:1:52170:52237	1034534	4	True				
ANR	1034616	CallExpression	"push_inst ( compiler , ( FCMP ^ inv_bits ) | VN ( src1 ) | VM ( src2 ) )"		1034534	0					
ANR	1034617	Callee	push_inst		1034534	0					
ANR	1034618	Identifier	push_inst		1034534	0					
ANR	1034619	ArgumentList	compiler		1034534	1					
ANR	1034620	Argument	compiler		1034534	0					
ANR	1034621	Identifier	compiler		1034534	0					
ANR	1034622	Argument	( FCMP ^ inv_bits ) | VN ( src1 ) | VM ( src2 )		1034534	1					
ANR	1034623	InclusiveOrExpression	( FCMP ^ inv_bits ) | VN ( src1 ) | VM ( src2 )		1034534	0		|			
ANR	1034624	ExclusiveOrExpression	FCMP ^ inv_bits		1034534	0		^			
ANR	1034625	Identifier	FCMP		1034534	0					
ANR	1034626	Identifier	inv_bits		1034534	1					
ANR	1034627	InclusiveOrExpression	VN ( src1 ) | VM ( src2 )		1034534	1		|			
ANR	1034628	CallExpression	VN ( src1 )		1034534	0					
ANR	1034629	Callee	VN		1034534	0					
ANR	1034630	Identifier	VN		1034534	0					
ANR	1034631	ArgumentList	src1		1034534	1					
ANR	1034632	Argument	src1		1034534	0					
ANR	1034633	Identifier	src1		1034534	0					
ANR	1034634	CallExpression	VM ( src2 )		1034534	1					
ANR	1034635	Callee	VM		1034534	0					
ANR	1034636	Identifier	VM		1034534	0					
ANR	1034637	ArgumentList	src2		1034534	1					
ANR	1034638	Argument	src2		1034534	0					
ANR	1034639	Identifier	src2		1034534	0					
ANR	1034640	ReturnType	static SLJIT_INLINE sljit_si		1034534	1					
ANR	1034641	Identifier	sljit_emit_fop1_cmp		1034534	2					
ANR	1034642	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1034534	3					
ANR	1034643	Parameter	struct sljit_compiler * compiler	1654:49:51705:51735	1034534	0	True				
ANR	1034644	ParameterType	struct sljit_compiler *		1034534	0					
ANR	1034645	Identifier	compiler		1034534	1					
ANR	1034646	Parameter	sljit_si op	1654:82:51738:51748	1034534	1	True				
ANR	1034647	ParameterType	sljit_si		1034534	0					
ANR	1034648	Identifier	op		1034534	1					
ANR	1034649	Parameter	sljit_si src1	1655:1:51752:51764	1034534	2	True				
ANR	1034650	ParameterType	sljit_si		1034534	0					
ANR	1034651	Identifier	src1		1034534	1					
ANR	1034652	Parameter	sljit_sw src1w	1655:16:51767:51780	1034534	3	True				
ANR	1034653	ParameterType	sljit_sw		1034534	0					
ANR	1034654	Identifier	src1w		1034534	1					
ANR	1034655	Parameter	sljit_si src2	1656:1:51784:51796	1034534	4	True				
ANR	1034656	ParameterType	sljit_si		1034534	0					
ANR	1034657	Identifier	src2		1034534	1					
ANR	1034658	Parameter	sljit_sw src2w	1656:16:51799:51812	1034534	5	True				
ANR	1034659	ParameterType	sljit_sw		1034534	0					
ANR	1034660	Identifier	src2w		1034534	1					
ANR	1034661	CFGEntryNode	ENTRY		1034534		True				
ANR	1034662	CFGExitNode	EXIT		1034534		True				
ANR	1034663	Symbol	src2w		1034534						
ANR	1034664	Symbol	FCMP		1034534						
ANR	1034665	Symbol	op		1034534						
ANR	1034666	Symbol	push_inst		1034534						
ANR	1034667	Symbol	TMP_FREG2		1034534						
ANR	1034668	Symbol	src1w		1034534						
ANR	1034669	Symbol	INT_SIZE		1034534						
ANR	1034670	Symbol	TMP_FREG1		1034534						
ANR	1034671	Symbol	SLJIT_MEM		1034534						
ANR	1034672	Symbol	SLJIT_SINGLE_OP		1034534						
ANR	1034673	Symbol	mem_flags		1034534						
ANR	1034674	Symbol	VM		1034534						
ANR	1034675	Symbol	src1		1034534						
ANR	1034676	Symbol	VN		1034534						
ANR	1034677	Symbol	inv_bits		1034534						
ANR	1034678	Symbol	src2		1034534						
ANR	1034679	Symbol	compiler		1034534						
ANR	1034680	Symbol	WORD_SIZE		1034534						
ANR	1034681	Function	sljit_emit_fop1	1674:0:52242:53654							
ANR	1034682	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1034681	0					
ANR	1034683	CompoundStatement		1677:0:52398:53654	1034681	0					
ANR	1034684	IdentifierDeclStatement	"sljit_si dst_r , mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE ;"	1678:1:52401:52474	1034681	0	True				
ANR	1034685	IdentifierDecl	dst_r		1034681	0					
ANR	1034686	IdentifierDeclType	sljit_si		1034681	0					
ANR	1034687	Identifier	dst_r		1034681	1					
ANR	1034688	IdentifierDecl	mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034681	1					
ANR	1034689	IdentifierDeclType	sljit_si		1034681	0					
ANR	1034690	Identifier	mem_flags		1034681	1					
ANR	1034691	AssignmentExpression	mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034681	2		=			
ANR	1034692	Identifier	mem_flags		1034681	0					
ANR	1034693	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1034681	1					
ANR	1034694	Condition	op & SLJIT_SINGLE_OP		1034681	0					
ANR	1034695	BitAndExpression	op & SLJIT_SINGLE_OP		1034681	0		&			
ANR	1034696	Identifier	op		1034681	0					
ANR	1034697	Identifier	SLJIT_SINGLE_OP		1034681	1					
ANR	1034698	Identifier	INT_SIZE		1034681	1					
ANR	1034699	Identifier	WORD_SIZE		1034681	2					
ANR	1034700	IdentifierDeclStatement	sljit_ins inv_bits ;	1679:1:52477:52495	1034681	1	True				
ANR	1034701	IdentifierDecl	inv_bits		1034681	0					
ANR	1034702	IdentifierDeclType	sljit_ins		1034681	0					
ANR	1034703	Identifier	inv_bits		1034681	1					
ANR	1034704	ExpressionStatement	CHECK_ERROR ( )	1681:1:52499:52512	1034681	2	True				
ANR	1034705	CallExpression	CHECK_ERROR ( )		1034681	0					
ANR	1034706	Callee	CHECK_ERROR		1034681	0					
ANR	1034707	Identifier	CHECK_ERROR		1034681	0					
ANR	1034708	ArgumentList			1034681	1					
ANR	1034709	ExpressionStatement	compiler -> cache_arg = 0	1682:1:52515:52538	1034681	3	True				
ANR	1034710	AssignmentExpression	compiler -> cache_arg = 0		1034681	0		=			
ANR	1034711	PtrMemberAccess	compiler -> cache_arg		1034681	0					
ANR	1034712	Identifier	compiler		1034681	0					
ANR	1034713	Identifier	cache_arg		1034681	1					
ANR	1034714	PrimaryExpression	0		1034681	1					
ANR	1034715	ExpressionStatement	compiler -> cache_argw = 0	1683:1:52541:52565	1034681	4	True				
ANR	1034716	AssignmentExpression	compiler -> cache_argw = 0		1034681	0		=			
ANR	1034717	PtrMemberAccess	compiler -> cache_argw		1034681	0					
ANR	1034718	Identifier	compiler		1034681	0					
ANR	1034719	Identifier	cache_argw		1034681	1					
ANR	1034720	PrimaryExpression	0		1034681	1					
ANR	1034721	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( INT_SIZE ^ 0x100 ) == WORD_SIZE , must_be_one_bit_difference )"	1685:1:52569:52650	1034681	5	True				
ANR	1034722	CallExpression	"SLJIT_COMPILE_ASSERT ( ( INT_SIZE ^ 0x100 ) == WORD_SIZE , must_be_one_bit_difference )"		1034681	0					
ANR	1034723	Callee	SLJIT_COMPILE_ASSERT		1034681	0					
ANR	1034724	Identifier	SLJIT_COMPILE_ASSERT		1034681	0					
ANR	1034725	ArgumentList	( INT_SIZE ^ 0x100 ) == WORD_SIZE		1034681	1					
ANR	1034726	Argument	( INT_SIZE ^ 0x100 ) == WORD_SIZE		1034681	0					
ANR	1034727	EqualityExpression	( INT_SIZE ^ 0x100 ) == WORD_SIZE		1034681	0		==			
ANR	1034728	ExclusiveOrExpression	INT_SIZE ^ 0x100		1034681	0		^			
ANR	1034729	Identifier	INT_SIZE		1034681	0					
ANR	1034730	PrimaryExpression	0x100		1034681	1					
ANR	1034731	Identifier	WORD_SIZE		1034681	1					
ANR	1034732	Argument	must_be_one_bit_difference		1034681	1					
ANR	1034733	Identifier	must_be_one_bit_difference		1034681	0					
ANR	1034734	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	1686:1:52653:52722	1034681	6	True				
ANR	1034735	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1034681	0					
ANR	1034736	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1034681	0					
ANR	1034737	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1034681	0					
ANR	1034738	ArgumentList	compiler		1034681	1					
ANR	1034739	Argument	compiler		1034681	0					
ANR	1034740	Identifier	compiler		1034681	0					
ANR	1034741	Argument	op		1034681	1					
ANR	1034742	Identifier	op		1034681	0					
ANR	1034743	Argument	dst		1034681	2					
ANR	1034744	Identifier	dst		1034681	0					
ANR	1034745	Argument	dstw		1034681	3					
ANR	1034746	Identifier	dstw		1034681	0					
ANR	1034747	Argument	src		1034681	4					
ANR	1034748	Identifier	src		1034681	0					
ANR	1034749	Argument	srcw		1034681	5					
ANR	1034750	Identifier	srcw		1034681	0					
ANR	1034751	ExpressionStatement	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0	1688:1:52726:52775	1034681	7	True				
ANR	1034752	AssignmentExpression	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034681	0		=			
ANR	1034753	Identifier	inv_bits		1034681	0					
ANR	1034754	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1034681	1					
ANR	1034755	Condition	op & SLJIT_SINGLE_OP		1034681	0					
ANR	1034756	BitAndExpression	op & SLJIT_SINGLE_OP		1034681	0		&			
ANR	1034757	Identifier	op		1034681	0					
ANR	1034758	Identifier	SLJIT_SINGLE_OP		1034681	1					
ANR	1034759	ShiftExpression	1 << 22		1034681	1		<<			
ANR	1034760	PrimaryExpression	1		1034681	0					
ANR	1034761	PrimaryExpression	22		1034681	1					
ANR	1034762	PrimaryExpression	0		1034681	2					
ANR	1034763	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1689:1:52778:52820	1034681	8	True				
ANR	1034764	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1034681	0		=			
ANR	1034765	Identifier	dst_r		1034681	0					
ANR	1034766	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1034681	1					
ANR	1034767	Condition	FAST_IS_REG ( dst )		1034681	0					
ANR	1034768	CallExpression	FAST_IS_REG ( dst )		1034681	0					
ANR	1034769	Callee	FAST_IS_REG		1034681	0					
ANR	1034770	Identifier	FAST_IS_REG		1034681	0					
ANR	1034771	ArgumentList	dst		1034681	1					
ANR	1034772	Argument	dst		1034681	0					
ANR	1034773	Identifier	dst		1034681	0					
ANR	1034774	Identifier	dst		1034681	1					
ANR	1034775	Identifier	TMP_FREG1		1034681	2					
ANR	1034776	IfStatement	if ( src & SLJIT_MEM )		1034681	9					
ANR	1034777	Condition	src & SLJIT_MEM	1691:5:52828:52842	1034681	0	True				
ANR	1034778	BitAndExpression	src & SLJIT_MEM		1034681	0		&			
ANR	1034779	Identifier	src		1034681	0					
ANR	1034780	Identifier	SLJIT_MEM		1034681	1					
ANR	1034781	CompoundStatement		15:22:446:446	1034681	1					
ANR	1034782	ExpressionStatement	"emit_fop_mem ( compiler , ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS ) ? ( mem_flags ^ 0x100 ) : mem_flags , dst_r , src , srcw )"	1692:2:52849:52962	1034681	0	True				
ANR	1034783	CallExpression	"emit_fop_mem ( compiler , ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS ) ? ( mem_flags ^ 0x100 ) : mem_flags , dst_r , src , srcw )"		1034681	0					
ANR	1034784	Callee	emit_fop_mem		1034681	0					
ANR	1034785	Identifier	emit_fop_mem		1034681	0					
ANR	1034786	ArgumentList	compiler		1034681	1					
ANR	1034787	Argument	compiler		1034681	0					
ANR	1034788	Identifier	compiler		1034681	0					
ANR	1034789	Argument	( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS ) ? ( mem_flags ^ 0x100 ) : mem_flags		1034681	1					
ANR	1034790	ConditionalExpression	( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS ) ? ( mem_flags ^ 0x100 ) : mem_flags		1034681	0					
ANR	1034791	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1034681	0					
ANR	1034792	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1034681	0		==			
ANR	1034793	CallExpression	GET_OPCODE ( op )		1034681	0					
ANR	1034794	Callee	GET_OPCODE		1034681	0					
ANR	1034795	Identifier	GET_OPCODE		1034681	0					
ANR	1034796	ArgumentList	op		1034681	1					
ANR	1034797	Argument	op		1034681	0					
ANR	1034798	Identifier	op		1034681	0					
ANR	1034799	Identifier	SLJIT_CONVD_FROMS		1034681	1					
ANR	1034800	ExclusiveOrExpression	mem_flags ^ 0x100		1034681	1		^			
ANR	1034801	Identifier	mem_flags		1034681	0					
ANR	1034802	PrimaryExpression	0x100		1034681	1					
ANR	1034803	Identifier	mem_flags		1034681	2					
ANR	1034804	Argument	dst_r		1034681	2					
ANR	1034805	Identifier	dst_r		1034681	0					
ANR	1034806	Argument	src		1034681	3					
ANR	1034807	Identifier	src		1034681	0					
ANR	1034808	Argument	srcw		1034681	4					
ANR	1034809	Identifier	srcw		1034681	0					
ANR	1034810	ExpressionStatement	src = dst_r	1693:2:52966:52977	1034681	1	True				
ANR	1034811	AssignmentExpression	src = dst_r		1034681	0		=			
ANR	1034812	Identifier	src		1034681	0					
ANR	1034813	Identifier	dst_r		1034681	1					
ANR	1034814	SwitchStatement	switch ( GET_OPCODE ( op ) )		1034681	10					
ANR	1034815	Condition	GET_OPCODE ( op )	1696:9:52992:53005	1034681	0	True				
ANR	1034816	CallExpression	GET_OPCODE ( op )		1034681	0					
ANR	1034817	Callee	GET_OPCODE		1034681	0					
ANR	1034818	Identifier	GET_OPCODE		1034681	0					
ANR	1034819	ArgumentList	op		1034681	1					
ANR	1034820	Argument	op		1034681	0					
ANR	1034821	Identifier	op		1034681	0					
ANR	1034822	CompoundStatement		20:25:609:609	1034681	1					
ANR	1034823	Label	case SLJIT_DMOV :	1697:1:53011:53026	1034681	0	True				
ANR	1034824	Identifier	SLJIT_DMOV		1034681	0					
ANR	1034825	IfStatement	if ( src != dst_r )		1034681	1					
ANR	1034826	Condition	src != dst_r	1698:6:53034:53045	1034681	0	True				
ANR	1034827	EqualityExpression	src != dst_r		1034681	0		!=			
ANR	1034828	Identifier	src		1034681	0					
ANR	1034829	Identifier	dst_r		1034681	1					
ANR	1034830	CompoundStatement		22:20:649:649	1034681	1					
ANR	1034831	IfStatement	if ( dst_r != TMP_FREG1 )		1034681	0					
ANR	1034832	Condition	dst_r != TMP_FREG1	1699:7:53057:53074	1034681	0	True				
ANR	1034833	EqualityExpression	dst_r != TMP_FREG1		1034681	0		!=			
ANR	1034834	Identifier	dst_r		1034681	0					
ANR	1034835	Identifier	TMP_FREG1		1034681	1					
ANR	1034836	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FMOV ^ inv_bits ) | VD ( dst_r ) | VN ( src ) ) )"	1700:4:53081:53150	1034681	1	True				
ANR	1034837	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FMOV ^ inv_bits ) | VD ( dst_r ) | VN ( src ) ) )"		1034681	0					
ANR	1034838	Callee	FAIL_IF		1034681	0					
ANR	1034839	Identifier	FAIL_IF		1034681	0					
ANR	1034840	ArgumentList	"push_inst ( compiler , ( FMOV ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	1					
ANR	1034841	Argument	"push_inst ( compiler , ( FMOV ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034842	CallExpression	"push_inst ( compiler , ( FMOV ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034843	Callee	push_inst		1034681	0					
ANR	1034844	Identifier	push_inst		1034681	0					
ANR	1034845	ArgumentList	compiler		1034681	1					
ANR	1034846	Argument	compiler		1034681	0					
ANR	1034847	Identifier	compiler		1034681	0					
ANR	1034848	Argument	( FMOV ^ inv_bits ) | VD ( dst_r ) | VN ( src )		1034681	1					
ANR	1034849	InclusiveOrExpression	( FMOV ^ inv_bits ) | VD ( dst_r ) | VN ( src )		1034681	0		|			
ANR	1034850	ExclusiveOrExpression	FMOV ^ inv_bits		1034681	0		^			
ANR	1034851	Identifier	FMOV		1034681	0					
ANR	1034852	Identifier	inv_bits		1034681	1					
ANR	1034853	InclusiveOrExpression	VD ( dst_r ) | VN ( src )		1034681	1		|			
ANR	1034854	CallExpression	VD ( dst_r )		1034681	0					
ANR	1034855	Callee	VD		1034681	0					
ANR	1034856	Identifier	VD		1034681	0					
ANR	1034857	ArgumentList	dst_r		1034681	1					
ANR	1034858	Argument	dst_r		1034681	0					
ANR	1034859	Identifier	dst_r		1034681	0					
ANR	1034860	CallExpression	VN ( src )		1034681	1					
ANR	1034861	Callee	VN		1034681	0					
ANR	1034862	Identifier	VN		1034681	0					
ANR	1034863	ArgumentList	src		1034681	1					
ANR	1034864	Argument	src		1034681	0					
ANR	1034865	Identifier	src		1034681	0					
ANR	1034866	ElseStatement	else		1034681	0					
ANR	1034867	ExpressionStatement	dst_r = src	1702:4:53164:53175	1034681	0	True				
ANR	1034868	AssignmentExpression	dst_r = src		1034681	0		=			
ANR	1034869	Identifier	dst_r		1034681	0					
ANR	1034870	Identifier	src		1034681	1					
ANR	1034871	BreakStatement	break ;	1704:2:53183:53188	1034681	2	True				
ANR	1034872	Label	case SLJIT_DNEG :	1705:1:53191:53206	1034681	3	True				
ANR	1034873	Identifier	SLJIT_DNEG		1034681	0					
ANR	1034874	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FNEG ^ inv_bits ) | VD ( dst_r ) | VN ( src ) ) )"	1706:2:53210:53279	1034681	4	True				
ANR	1034875	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FNEG ^ inv_bits ) | VD ( dst_r ) | VN ( src ) ) )"		1034681	0					
ANR	1034876	Callee	FAIL_IF		1034681	0					
ANR	1034877	Identifier	FAIL_IF		1034681	0					
ANR	1034878	ArgumentList	"push_inst ( compiler , ( FNEG ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	1					
ANR	1034879	Argument	"push_inst ( compiler , ( FNEG ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034880	CallExpression	"push_inst ( compiler , ( FNEG ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034881	Callee	push_inst		1034681	0					
ANR	1034882	Identifier	push_inst		1034681	0					
ANR	1034883	ArgumentList	compiler		1034681	1					
ANR	1034884	Argument	compiler		1034681	0					
ANR	1034885	Identifier	compiler		1034681	0					
ANR	1034886	Argument	( FNEG ^ inv_bits ) | VD ( dst_r ) | VN ( src )		1034681	1					
ANR	1034887	InclusiveOrExpression	( FNEG ^ inv_bits ) | VD ( dst_r ) | VN ( src )		1034681	0		|			
ANR	1034888	ExclusiveOrExpression	FNEG ^ inv_bits		1034681	0		^			
ANR	1034889	Identifier	FNEG		1034681	0					
ANR	1034890	Identifier	inv_bits		1034681	1					
ANR	1034891	InclusiveOrExpression	VD ( dst_r ) | VN ( src )		1034681	1		|			
ANR	1034892	CallExpression	VD ( dst_r )		1034681	0					
ANR	1034893	Callee	VD		1034681	0					
ANR	1034894	Identifier	VD		1034681	0					
ANR	1034895	ArgumentList	dst_r		1034681	1					
ANR	1034896	Argument	dst_r		1034681	0					
ANR	1034897	Identifier	dst_r		1034681	0					
ANR	1034898	CallExpression	VN ( src )		1034681	1					
ANR	1034899	Callee	VN		1034681	0					
ANR	1034900	Identifier	VN		1034681	0					
ANR	1034901	ArgumentList	src		1034681	1					
ANR	1034902	Argument	src		1034681	0					
ANR	1034903	Identifier	src		1034681	0					
ANR	1034904	BreakStatement	break ;	1707:2:53283:53288	1034681	5	True				
ANR	1034905	Label	case SLJIT_DABS :	1708:1:53291:53306	1034681	6	True				
ANR	1034906	Identifier	SLJIT_DABS		1034681	0					
ANR	1034907	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FABS ^ inv_bits ) | VD ( dst_r ) | VN ( src ) ) )"	1709:2:53310:53379	1034681	7	True				
ANR	1034908	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FABS ^ inv_bits ) | VD ( dst_r ) | VN ( src ) ) )"		1034681	0					
ANR	1034909	Callee	FAIL_IF		1034681	0					
ANR	1034910	Identifier	FAIL_IF		1034681	0					
ANR	1034911	ArgumentList	"push_inst ( compiler , ( FABS ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	1					
ANR	1034912	Argument	"push_inst ( compiler , ( FABS ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034913	CallExpression	"push_inst ( compiler , ( FABS ^ inv_bits ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034914	Callee	push_inst		1034681	0					
ANR	1034915	Identifier	push_inst		1034681	0					
ANR	1034916	ArgumentList	compiler		1034681	1					
ANR	1034917	Argument	compiler		1034681	0					
ANR	1034918	Identifier	compiler		1034681	0					
ANR	1034919	Argument	( FABS ^ inv_bits ) | VD ( dst_r ) | VN ( src )		1034681	1					
ANR	1034920	InclusiveOrExpression	( FABS ^ inv_bits ) | VD ( dst_r ) | VN ( src )		1034681	0		|			
ANR	1034921	ExclusiveOrExpression	FABS ^ inv_bits		1034681	0		^			
ANR	1034922	Identifier	FABS		1034681	0					
ANR	1034923	Identifier	inv_bits		1034681	1					
ANR	1034924	InclusiveOrExpression	VD ( dst_r ) | VN ( src )		1034681	1		|			
ANR	1034925	CallExpression	VD ( dst_r )		1034681	0					
ANR	1034926	Callee	VD		1034681	0					
ANR	1034927	Identifier	VD		1034681	0					
ANR	1034928	ArgumentList	dst_r		1034681	1					
ANR	1034929	Argument	dst_r		1034681	0					
ANR	1034930	Identifier	dst_r		1034681	0					
ANR	1034931	CallExpression	VN ( src )		1034681	1					
ANR	1034932	Callee	VN		1034681	0					
ANR	1034933	Identifier	VN		1034681	0					
ANR	1034934	ArgumentList	src		1034681	1					
ANR	1034935	Argument	src		1034681	0					
ANR	1034936	Identifier	src		1034681	0					
ANR	1034937	BreakStatement	break ;	1710:2:53383:53388	1034681	8	True				
ANR	1034938	Label	case SLJIT_CONVD_FROMS :	1711:1:53391:53413	1034681	9	True				
ANR	1034939	Identifier	SLJIT_CONVD_FROMS		1034681	0					
ANR	1034940	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FCVT | ( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src ) ) )"	1712:2:53417:53524	1034681	10	True				
ANR	1034941	CallExpression	"FAIL_IF ( push_inst ( compiler , FCVT | ( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src ) ) )"		1034681	0					
ANR	1034942	Callee	FAIL_IF		1034681	0					
ANR	1034943	Identifier	FAIL_IF		1034681	0					
ANR	1034944	ArgumentList	"push_inst ( compiler , FCVT | ( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src ) )"		1034681	1					
ANR	1034945	Argument	"push_inst ( compiler , FCVT | ( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034946	CallExpression	"push_inst ( compiler , FCVT | ( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src ) )"		1034681	0					
ANR	1034947	Callee	push_inst		1034681	0					
ANR	1034948	Identifier	push_inst		1034681	0					
ANR	1034949	ArgumentList	compiler		1034681	1					
ANR	1034950	Argument	compiler		1034681	0					
ANR	1034951	Identifier	compiler		1034681	0					
ANR	1034952	Argument	FCVT | ( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src )		1034681	1					
ANR	1034953	InclusiveOrExpression	FCVT | ( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src )		1034681	0		|			
ANR	1034954	Identifier	FCVT		1034681	0					
ANR	1034955	InclusiveOrExpression	( ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 ) ) | VD ( dst_r ) | VN ( src )		1034681	1		|			
ANR	1034956	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : ( 1 << 15 )		1034681	0					
ANR	1034957	Condition	op & SLJIT_SINGLE_OP		1034681	0					
ANR	1034958	BitAndExpression	op & SLJIT_SINGLE_OP		1034681	0		&			
ANR	1034959	Identifier	op		1034681	0					
ANR	1034960	Identifier	SLJIT_SINGLE_OP		1034681	1					
ANR	1034961	ShiftExpression	1 << 22		1034681	1		<<			
ANR	1034962	PrimaryExpression	1		1034681	0					
ANR	1034963	PrimaryExpression	22		1034681	1					
ANR	1034964	ShiftExpression	1 << 15		1034681	2		<<			
ANR	1034965	PrimaryExpression	1		1034681	0					
ANR	1034966	PrimaryExpression	15		1034681	1					
ANR	1034967	InclusiveOrExpression	VD ( dst_r ) | VN ( src )		1034681	1		|			
ANR	1034968	CallExpression	VD ( dst_r )		1034681	0					
ANR	1034969	Callee	VD		1034681	0					
ANR	1034970	Identifier	VD		1034681	0					
ANR	1034971	ArgumentList	dst_r		1034681	1					
ANR	1034972	Argument	dst_r		1034681	0					
ANR	1034973	Identifier	dst_r		1034681	0					
ANR	1034974	CallExpression	VN ( src )		1034681	1					
ANR	1034975	Callee	VN		1034681	0					
ANR	1034976	Identifier	VN		1034681	0					
ANR	1034977	ArgumentList	src		1034681	1					
ANR	1034978	Argument	src		1034681	0					
ANR	1034979	Identifier	src		1034681	0					
ANR	1034980	BreakStatement	break ;	1713:2:53528:53533	1034681	11	True				
ANR	1034981	IfStatement	if ( dst & SLJIT_MEM )		1034681	11					
ANR	1034982	Condition	dst & SLJIT_MEM	1716:5:53544:53558	1034681	0	True				
ANR	1034983	BitAndExpression	dst & SLJIT_MEM		1034681	0		&			
ANR	1034984	Identifier	dst		1034681	0					
ANR	1034985	Identifier	SLJIT_MEM		1034681	1					
ANR	1034986	ReturnStatement	"return emit_fop_mem ( compiler , mem_flags | STORE , dst_r , dst , dstw ) ;"	1717:2:53563:53629	1034681	1	True				
ANR	1034987	CallExpression	"emit_fop_mem ( compiler , mem_flags | STORE , dst_r , dst , dstw )"		1034681	0					
ANR	1034988	Callee	emit_fop_mem		1034681	0					
ANR	1034989	Identifier	emit_fop_mem		1034681	0					
ANR	1034990	ArgumentList	compiler		1034681	1					
ANR	1034991	Argument	compiler		1034681	0					
ANR	1034992	Identifier	compiler		1034681	0					
ANR	1034993	Argument	mem_flags | STORE		1034681	1					
ANR	1034994	InclusiveOrExpression	mem_flags | STORE		1034681	0		|			
ANR	1034995	Identifier	mem_flags		1034681	0					
ANR	1034996	Identifier	STORE		1034681	1					
ANR	1034997	Argument	dst_r		1034681	2					
ANR	1034998	Identifier	dst_r		1034681	0					
ANR	1034999	Argument	dst		1034681	3					
ANR	1035000	Identifier	dst		1034681	0					
ANR	1035001	Argument	dstw		1034681	4					
ANR	1035002	Identifier	dstw		1034681	0					
ANR	1035003	ReturnStatement	return SLJIT_SUCCESS ;	1718:1:53632:53652	1034681	12	True				
ANR	1035004	Identifier	SLJIT_SUCCESS		1034681	0					
ANR	1035005	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1034681	1					
ANR	1035006	Identifier	sljit_emit_fop1		1034681	2					
ANR	1035007	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1034681	3					
ANR	1035008	Parameter	struct sljit_compiler * compiler	1674:50:52292:52322	1034681	0	True				
ANR	1035009	ParameterType	struct sljit_compiler *		1034681	0					
ANR	1035010	Identifier	compiler		1034681	1					
ANR	1035011	Parameter	sljit_si op	1674:83:52325:52335	1034681	1	True				
ANR	1035012	ParameterType	sljit_si		1034681	0					
ANR	1035013	Identifier	op		1034681	1					
ANR	1035014	Parameter	sljit_si dst	1675:1:52339:52350	1034681	2	True				
ANR	1035015	ParameterType	sljit_si		1034681	0					
ANR	1035016	Identifier	dst		1034681	1					
ANR	1035017	Parameter	sljit_sw dstw	1675:15:52353:52365	1034681	3	True				
ANR	1035018	ParameterType	sljit_sw		1034681	0					
ANR	1035019	Identifier	dstw		1034681	1					
ANR	1035020	Parameter	sljit_si src	1676:1:52369:52380	1034681	4	True				
ANR	1035021	ParameterType	sljit_si		1034681	0					
ANR	1035022	Identifier	src		1034681	1					
ANR	1035023	Parameter	sljit_sw srcw	1676:15:52383:52395	1034681	5	True				
ANR	1035024	ParameterType	sljit_sw		1034681	0					
ANR	1035025	Identifier	srcw		1034681	1					
ANR	1035026	CFGEntryNode	ENTRY		1034681		True				
ANR	1035027	CFGExitNode	EXIT		1034681		True				
ANR	1035028	Symbol	compiler -> cache_argw		1034681						
ANR	1035029	Symbol	dst		1034681						
ANR	1035030	Symbol	TMP_FREG1		1034681						
ANR	1035031	Symbol	SLJIT_MEM		1034681						
ANR	1035032	Symbol	SLJIT_CONVD_FROMS		1034681						
ANR	1035033	Symbol	FNEG		1034681						
ANR	1035034	Symbol	* compiler		1034681						
ANR	1035035	Symbol	FMOV		1034681						
ANR	1035036	Symbol	dst_r		1034681						
ANR	1035037	Symbol	GET_OPCODE		1034681						
ANR	1035038	Symbol	emit_fop_mem		1034681						
ANR	1035039	Symbol	inv_bits		1034681						
ANR	1035040	Symbol	FCVT		1034681						
ANR	1035041	Symbol	compiler		1034681						
ANR	1035042	Symbol	op		1034681						
ANR	1035043	Symbol	push_inst		1034681						
ANR	1035044	Symbol	FAST_IS_REG		1034681						
ANR	1035045	Symbol	src		1034681						
ANR	1035046	Symbol	INT_SIZE		1034681						
ANR	1035047	Symbol	srcw		1034681						
ANR	1035048	Symbol	compiler -> cache_arg		1034681						
ANR	1035049	Symbol	must_be_one_bit_difference		1034681						
ANR	1035050	Symbol	SLJIT_SINGLE_OP		1034681						
ANR	1035051	Symbol	SLJIT_SUCCESS		1034681						
ANR	1035052	Symbol	FABS		1034681						
ANR	1035053	Symbol	VD		1034681						
ANR	1035054	Symbol	mem_flags		1034681						
ANR	1035055	Symbol	VN		1034681						
ANR	1035056	Symbol	STORE		1034681						
ANR	1035057	Symbol	dstw		1034681						
ANR	1035058	Symbol	WORD_SIZE		1034681						
ANR	1035059	Function	sljit_emit_fop2	1721:0:53657:55109							
ANR	1035060	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1035059	0					
ANR	1035061	CompoundStatement		1725:0:53847:55109	1035059	0					
ANR	1035062	IdentifierDeclStatement	"sljit_si dst_r , mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE ;"	1726:1:53850:53923	1035059	0	True				
ANR	1035063	IdentifierDecl	dst_r		1035059	0					
ANR	1035064	IdentifierDeclType	sljit_si		1035059	0					
ANR	1035065	Identifier	dst_r		1035059	1					
ANR	1035066	IdentifierDecl	mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1035059	1					
ANR	1035067	IdentifierDeclType	sljit_si		1035059	0					
ANR	1035068	Identifier	mem_flags		1035059	1					
ANR	1035069	AssignmentExpression	mem_flags = ( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1035059	2		=			
ANR	1035070	Identifier	mem_flags		1035059	0					
ANR	1035071	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? INT_SIZE : WORD_SIZE		1035059	1					
ANR	1035072	Condition	op & SLJIT_SINGLE_OP		1035059	0					
ANR	1035073	BitAndExpression	op & SLJIT_SINGLE_OP		1035059	0		&			
ANR	1035074	Identifier	op		1035059	0					
ANR	1035075	Identifier	SLJIT_SINGLE_OP		1035059	1					
ANR	1035076	Identifier	INT_SIZE		1035059	1					
ANR	1035077	Identifier	WORD_SIZE		1035059	2					
ANR	1035078	IdentifierDeclStatement	sljit_ins inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0 ;	1727:1:53926:53985	1035059	1	True				
ANR	1035079	IdentifierDecl	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1035059	0					
ANR	1035080	IdentifierDeclType	sljit_ins		1035059	0					
ANR	1035081	Identifier	inv_bits		1035059	1					
ANR	1035082	AssignmentExpression	inv_bits = ( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1035059	2		=			
ANR	1035083	Identifier	inv_bits		1035059	0					
ANR	1035084	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? ( 1 << 22 ) : 0		1035059	1					
ANR	1035085	Condition	op & SLJIT_SINGLE_OP		1035059	0					
ANR	1035086	BitAndExpression	op & SLJIT_SINGLE_OP		1035059	0		&			
ANR	1035087	Identifier	op		1035059	0					
ANR	1035088	Identifier	SLJIT_SINGLE_OP		1035059	1					
ANR	1035089	ShiftExpression	1 << 22		1035059	1		<<			
ANR	1035090	PrimaryExpression	1		1035059	0					
ANR	1035091	PrimaryExpression	22		1035059	1					
ANR	1035092	PrimaryExpression	0		1035059	2					
ANR	1035093	ExpressionStatement	CHECK_ERROR ( )	1729:1:53989:54002	1035059	2	True				
ANR	1035094	CallExpression	CHECK_ERROR ( )		1035059	0					
ANR	1035095	Callee	CHECK_ERROR		1035059	0					
ANR	1035096	Identifier	CHECK_ERROR		1035059	0					
ANR	1035097	ArgumentList			1035059	1					
ANR	1035098	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1730:1:54005:54084	1035059	3	True				
ANR	1035099	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1035059	0					
ANR	1035100	Callee	CHECK		1035059	0					
ANR	1035101	Identifier	CHECK		1035059	0					
ANR	1035102	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1035059	1					
ANR	1035103	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1035059	0					
ANR	1035104	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1035059	0					
ANR	1035105	Callee	check_sljit_emit_fop2		1035059	0					
ANR	1035106	Identifier	check_sljit_emit_fop2		1035059	0					
ANR	1035107	ArgumentList	compiler		1035059	1					
ANR	1035108	Argument	compiler		1035059	0					
ANR	1035109	Identifier	compiler		1035059	0					
ANR	1035110	Argument	op		1035059	1					
ANR	1035111	Identifier	op		1035059	0					
ANR	1035112	Argument	dst		1035059	2					
ANR	1035113	Identifier	dst		1035059	0					
ANR	1035114	Argument	dstw		1035059	3					
ANR	1035115	Identifier	dstw		1035059	0					
ANR	1035116	Argument	src1		1035059	4					
ANR	1035117	Identifier	src1		1035059	0					
ANR	1035118	Argument	src1w		1035059	5					
ANR	1035119	Identifier	src1w		1035059	0					
ANR	1035120	Argument	src2		1035059	6					
ANR	1035121	Identifier	src2		1035059	0					
ANR	1035122	Argument	src2w		1035059	7					
ANR	1035123	Identifier	src2w		1035059	0					
ANR	1035124	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1731:1:54087:54117	1035059	4	True				
ANR	1035125	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1035059	0					
ANR	1035126	Callee	ADJUST_LOCAL_OFFSET		1035059	0					
ANR	1035127	Identifier	ADJUST_LOCAL_OFFSET		1035059	0					
ANR	1035128	ArgumentList	dst		1035059	1					
ANR	1035129	Argument	dst		1035059	0					
ANR	1035130	Identifier	dst		1035059	0					
ANR	1035131	Argument	dstw		1035059	1					
ANR	1035132	Identifier	dstw		1035059	0					
ANR	1035133	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1732:1:54120:54152	1035059	5	True				
ANR	1035134	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1035059	0					
ANR	1035135	Callee	ADJUST_LOCAL_OFFSET		1035059	0					
ANR	1035136	Identifier	ADJUST_LOCAL_OFFSET		1035059	0					
ANR	1035137	ArgumentList	src1		1035059	1					
ANR	1035138	Argument	src1		1035059	0					
ANR	1035139	Identifier	src1		1035059	0					
ANR	1035140	Argument	src1w		1035059	1					
ANR	1035141	Identifier	src1w		1035059	0					
ANR	1035142	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1733:1:54155:54187	1035059	6	True				
ANR	1035143	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1035059	0					
ANR	1035144	Callee	ADJUST_LOCAL_OFFSET		1035059	0					
ANR	1035145	Identifier	ADJUST_LOCAL_OFFSET		1035059	0					
ANR	1035146	ArgumentList	src2		1035059	1					
ANR	1035147	Argument	src2		1035059	0					
ANR	1035148	Identifier	src2		1035059	0					
ANR	1035149	Argument	src2w		1035059	1					
ANR	1035150	Identifier	src2w		1035059	0					
ANR	1035151	ExpressionStatement	compiler -> cache_arg = 0	1735:1:54191:54214	1035059	7	True				
ANR	1035152	AssignmentExpression	compiler -> cache_arg = 0		1035059	0		=			
ANR	1035153	PtrMemberAccess	compiler -> cache_arg		1035059	0					
ANR	1035154	Identifier	compiler		1035059	0					
ANR	1035155	Identifier	cache_arg		1035059	1					
ANR	1035156	PrimaryExpression	0		1035059	1					
ANR	1035157	ExpressionStatement	compiler -> cache_argw = 0	1736:1:54217:54241	1035059	8	True				
ANR	1035158	AssignmentExpression	compiler -> cache_argw = 0		1035059	0		=			
ANR	1035159	PtrMemberAccess	compiler -> cache_argw		1035059	0					
ANR	1035160	Identifier	compiler		1035059	0					
ANR	1035161	Identifier	cache_argw		1035059	1					
ANR	1035162	PrimaryExpression	0		1035059	1					
ANR	1035163	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1738:1:54245:54287	1035059	9	True				
ANR	1035164	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1035059	0		=			
ANR	1035165	Identifier	dst_r		1035059	0					
ANR	1035166	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1035059	1					
ANR	1035167	Condition	FAST_IS_REG ( dst )		1035059	0					
ANR	1035168	CallExpression	FAST_IS_REG ( dst )		1035059	0					
ANR	1035169	Callee	FAST_IS_REG		1035059	0					
ANR	1035170	Identifier	FAST_IS_REG		1035059	0					
ANR	1035171	ArgumentList	dst		1035059	1					
ANR	1035172	Argument	dst		1035059	0					
ANR	1035173	Identifier	dst		1035059	0					
ANR	1035174	Identifier	dst		1035059	1					
ANR	1035175	Identifier	TMP_FREG1		1035059	2					
ANR	1035176	IfStatement	if ( src1 & SLJIT_MEM )		1035059	10					
ANR	1035177	Condition	src1 & SLJIT_MEM	1739:5:54294:54309	1035059	0	True				
ANR	1035178	BitAndExpression	src1 & SLJIT_MEM		1035059	0		&			
ANR	1035179	Identifier	src1		1035059	0					
ANR	1035180	Identifier	SLJIT_MEM		1035059	1					
ANR	1035181	CompoundStatement		15:23:464:464	1035059	1					
ANR	1035182	ExpressionStatement	"emit_fop_mem ( compiler , mem_flags , TMP_FREG1 , src1 , src1w )"	1740:2:54316:54373	1035059	0	True				
ANR	1035183	CallExpression	"emit_fop_mem ( compiler , mem_flags , TMP_FREG1 , src1 , src1w )"		1035059	0					
ANR	1035184	Callee	emit_fop_mem		1035059	0					
ANR	1035185	Identifier	emit_fop_mem		1035059	0					
ANR	1035186	ArgumentList	compiler		1035059	1					
ANR	1035187	Argument	compiler		1035059	0					
ANR	1035188	Identifier	compiler		1035059	0					
ANR	1035189	Argument	mem_flags		1035059	1					
ANR	1035190	Identifier	mem_flags		1035059	0					
ANR	1035191	Argument	TMP_FREG1		1035059	2					
ANR	1035192	Identifier	TMP_FREG1		1035059	0					
ANR	1035193	Argument	src1		1035059	3					
ANR	1035194	Identifier	src1		1035059	0					
ANR	1035195	Argument	src1w		1035059	4					
ANR	1035196	Identifier	src1w		1035059	0					
ANR	1035197	ExpressionStatement	src1 = TMP_FREG1	1741:2:54377:54393	1035059	1	True				
ANR	1035198	AssignmentExpression	src1 = TMP_FREG1		1035059	0		=			
ANR	1035199	Identifier	src1		1035059	0					
ANR	1035200	Identifier	TMP_FREG1		1035059	1					
ANR	1035201	IfStatement	if ( src2 & SLJIT_MEM )		1035059	11					
ANR	1035202	Condition	src2 & SLJIT_MEM	1743:5:54403:54418	1035059	0	True				
ANR	1035203	BitAndExpression	src2 & SLJIT_MEM		1035059	0		&			
ANR	1035204	Identifier	src2		1035059	0					
ANR	1035205	Identifier	SLJIT_MEM		1035059	1					
ANR	1035206	CompoundStatement		19:23:573:573	1035059	1					
ANR	1035207	ExpressionStatement	"emit_fop_mem ( compiler , mem_flags , TMP_FREG2 , src2 , src2w )"	1744:2:54425:54482	1035059	0	True				
ANR	1035208	CallExpression	"emit_fop_mem ( compiler , mem_flags , TMP_FREG2 , src2 , src2w )"		1035059	0					
ANR	1035209	Callee	emit_fop_mem		1035059	0					
ANR	1035210	Identifier	emit_fop_mem		1035059	0					
ANR	1035211	ArgumentList	compiler		1035059	1					
ANR	1035212	Argument	compiler		1035059	0					
ANR	1035213	Identifier	compiler		1035059	0					
ANR	1035214	Argument	mem_flags		1035059	1					
ANR	1035215	Identifier	mem_flags		1035059	0					
ANR	1035216	Argument	TMP_FREG2		1035059	2					
ANR	1035217	Identifier	TMP_FREG2		1035059	0					
ANR	1035218	Argument	src2		1035059	3					
ANR	1035219	Identifier	src2		1035059	0					
ANR	1035220	Argument	src2w		1035059	4					
ANR	1035221	Identifier	src2w		1035059	0					
ANR	1035222	ExpressionStatement	src2 = TMP_FREG2	1745:2:54486:54502	1035059	1	True				
ANR	1035223	AssignmentExpression	src2 = TMP_FREG2		1035059	0		=			
ANR	1035224	Identifier	src2		1035059	0					
ANR	1035225	Identifier	TMP_FREG2		1035059	1					
ANR	1035226	SwitchStatement	switch ( GET_OPCODE ( op ) )		1035059	12					
ANR	1035227	Condition	GET_OPCODE ( op )	1748:9:54517:54530	1035059	0	True				
ANR	1035228	CallExpression	GET_OPCODE ( op )		1035059	0					
ANR	1035229	Callee	GET_OPCODE		1035059	0					
ANR	1035230	Identifier	GET_OPCODE		1035059	0					
ANR	1035231	ArgumentList	op		1035059	1					
ANR	1035232	Argument	op		1035059	0					
ANR	1035233	Identifier	op		1035059	0					
ANR	1035234	CompoundStatement		24:25:685:685	1035059	1					
ANR	1035235	Label	case SLJIT_DADD :	1749:1:54536:54551	1035059	0	True				
ANR	1035236	Identifier	SLJIT_DADD		1035059	0					
ANR	1035237	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FADD ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"	1750:2:54555:54636	1035059	1	True				
ANR	1035238	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FADD ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"		1035059	0					
ANR	1035239	Callee	FAIL_IF		1035059	0					
ANR	1035240	Identifier	FAIL_IF		1035059	0					
ANR	1035241	ArgumentList	"push_inst ( compiler , ( FADD ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	1					
ANR	1035242	Argument	"push_inst ( compiler , ( FADD ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035243	CallExpression	"push_inst ( compiler , ( FADD ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035244	Callee	push_inst		1035059	0					
ANR	1035245	Identifier	push_inst		1035059	0					
ANR	1035246	ArgumentList	compiler		1035059	1					
ANR	1035247	Argument	compiler		1035059	0					
ANR	1035248	Identifier	compiler		1035059	0					
ANR	1035249	Argument	( FADD ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1					
ANR	1035250	InclusiveOrExpression	( FADD ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	0		|			
ANR	1035251	ExclusiveOrExpression	FADD ^ inv_bits		1035059	0		^			
ANR	1035252	Identifier	FADD		1035059	0					
ANR	1035253	Identifier	inv_bits		1035059	1					
ANR	1035254	InclusiveOrExpression	VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035255	CallExpression	VD ( dst_r )		1035059	0					
ANR	1035256	Callee	VD		1035059	0					
ANR	1035257	Identifier	VD		1035059	0					
ANR	1035258	ArgumentList	dst_r		1035059	1					
ANR	1035259	Argument	dst_r		1035059	0					
ANR	1035260	Identifier	dst_r		1035059	0					
ANR	1035261	InclusiveOrExpression	VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035262	CallExpression	VN ( src1 )		1035059	0					
ANR	1035263	Callee	VN		1035059	0					
ANR	1035264	Identifier	VN		1035059	0					
ANR	1035265	ArgumentList	src1		1035059	1					
ANR	1035266	Argument	src1		1035059	0					
ANR	1035267	Identifier	src1		1035059	0					
ANR	1035268	CallExpression	VM ( src2 )		1035059	1					
ANR	1035269	Callee	VM		1035059	0					
ANR	1035270	Identifier	VM		1035059	0					
ANR	1035271	ArgumentList	src2		1035059	1					
ANR	1035272	Argument	src2		1035059	0					
ANR	1035273	Identifier	src2		1035059	0					
ANR	1035274	BreakStatement	break ;	1751:2:54640:54645	1035059	2	True				
ANR	1035275	Label	case SLJIT_DSUB :	1752:1:54648:54663	1035059	3	True				
ANR	1035276	Identifier	SLJIT_DSUB		1035059	0					
ANR	1035277	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FSUB ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"	1753:2:54667:54748	1035059	4	True				
ANR	1035278	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FSUB ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"		1035059	0					
ANR	1035279	Callee	FAIL_IF		1035059	0					
ANR	1035280	Identifier	FAIL_IF		1035059	0					
ANR	1035281	ArgumentList	"push_inst ( compiler , ( FSUB ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	1					
ANR	1035282	Argument	"push_inst ( compiler , ( FSUB ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035283	CallExpression	"push_inst ( compiler , ( FSUB ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035284	Callee	push_inst		1035059	0					
ANR	1035285	Identifier	push_inst		1035059	0					
ANR	1035286	ArgumentList	compiler		1035059	1					
ANR	1035287	Argument	compiler		1035059	0					
ANR	1035288	Identifier	compiler		1035059	0					
ANR	1035289	Argument	( FSUB ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1					
ANR	1035290	InclusiveOrExpression	( FSUB ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	0		|			
ANR	1035291	ExclusiveOrExpression	FSUB ^ inv_bits		1035059	0		^			
ANR	1035292	Identifier	FSUB		1035059	0					
ANR	1035293	Identifier	inv_bits		1035059	1					
ANR	1035294	InclusiveOrExpression	VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035295	CallExpression	VD ( dst_r )		1035059	0					
ANR	1035296	Callee	VD		1035059	0					
ANR	1035297	Identifier	VD		1035059	0					
ANR	1035298	ArgumentList	dst_r		1035059	1					
ANR	1035299	Argument	dst_r		1035059	0					
ANR	1035300	Identifier	dst_r		1035059	0					
ANR	1035301	InclusiveOrExpression	VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035302	CallExpression	VN ( src1 )		1035059	0					
ANR	1035303	Callee	VN		1035059	0					
ANR	1035304	Identifier	VN		1035059	0					
ANR	1035305	ArgumentList	src1		1035059	1					
ANR	1035306	Argument	src1		1035059	0					
ANR	1035307	Identifier	src1		1035059	0					
ANR	1035308	CallExpression	VM ( src2 )		1035059	1					
ANR	1035309	Callee	VM		1035059	0					
ANR	1035310	Identifier	VM		1035059	0					
ANR	1035311	ArgumentList	src2		1035059	1					
ANR	1035312	Argument	src2		1035059	0					
ANR	1035313	Identifier	src2		1035059	0					
ANR	1035314	BreakStatement	break ;	1754:2:54752:54757	1035059	5	True				
ANR	1035315	Label	case SLJIT_DMUL :	1755:1:54760:54775	1035059	6	True				
ANR	1035316	Identifier	SLJIT_DMUL		1035059	0					
ANR	1035317	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FMUL ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"	1756:2:54779:54860	1035059	7	True				
ANR	1035318	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FMUL ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"		1035059	0					
ANR	1035319	Callee	FAIL_IF		1035059	0					
ANR	1035320	Identifier	FAIL_IF		1035059	0					
ANR	1035321	ArgumentList	"push_inst ( compiler , ( FMUL ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	1					
ANR	1035322	Argument	"push_inst ( compiler , ( FMUL ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035323	CallExpression	"push_inst ( compiler , ( FMUL ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035324	Callee	push_inst		1035059	0					
ANR	1035325	Identifier	push_inst		1035059	0					
ANR	1035326	ArgumentList	compiler		1035059	1					
ANR	1035327	Argument	compiler		1035059	0					
ANR	1035328	Identifier	compiler		1035059	0					
ANR	1035329	Argument	( FMUL ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1					
ANR	1035330	InclusiveOrExpression	( FMUL ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	0		|			
ANR	1035331	ExclusiveOrExpression	FMUL ^ inv_bits		1035059	0		^			
ANR	1035332	Identifier	FMUL		1035059	0					
ANR	1035333	Identifier	inv_bits		1035059	1					
ANR	1035334	InclusiveOrExpression	VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035335	CallExpression	VD ( dst_r )		1035059	0					
ANR	1035336	Callee	VD		1035059	0					
ANR	1035337	Identifier	VD		1035059	0					
ANR	1035338	ArgumentList	dst_r		1035059	1					
ANR	1035339	Argument	dst_r		1035059	0					
ANR	1035340	Identifier	dst_r		1035059	0					
ANR	1035341	InclusiveOrExpression	VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035342	CallExpression	VN ( src1 )		1035059	0					
ANR	1035343	Callee	VN		1035059	0					
ANR	1035344	Identifier	VN		1035059	0					
ANR	1035345	ArgumentList	src1		1035059	1					
ANR	1035346	Argument	src1		1035059	0					
ANR	1035347	Identifier	src1		1035059	0					
ANR	1035348	CallExpression	VM ( src2 )		1035059	1					
ANR	1035349	Callee	VM		1035059	0					
ANR	1035350	Identifier	VM		1035059	0					
ANR	1035351	ArgumentList	src2		1035059	1					
ANR	1035352	Argument	src2		1035059	0					
ANR	1035353	Identifier	src2		1035059	0					
ANR	1035354	BreakStatement	break ;	1757:2:54864:54869	1035059	8	True				
ANR	1035355	Label	case SLJIT_DDIV :	1758:1:54872:54887	1035059	9	True				
ANR	1035356	Identifier	SLJIT_DDIV		1035059	0					
ANR	1035357	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( FDIV ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"	1759:2:54891:54972	1035059	10	True				
ANR	1035358	CallExpression	"FAIL_IF ( push_inst ( compiler , ( FDIV ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) ) )"		1035059	0					
ANR	1035359	Callee	FAIL_IF		1035059	0					
ANR	1035360	Identifier	FAIL_IF		1035059	0					
ANR	1035361	ArgumentList	"push_inst ( compiler , ( FDIV ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	1					
ANR	1035362	Argument	"push_inst ( compiler , ( FDIV ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035363	CallExpression	"push_inst ( compiler , ( FDIV ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 ) )"		1035059	0					
ANR	1035364	Callee	push_inst		1035059	0					
ANR	1035365	Identifier	push_inst		1035059	0					
ANR	1035366	ArgumentList	compiler		1035059	1					
ANR	1035367	Argument	compiler		1035059	0					
ANR	1035368	Identifier	compiler		1035059	0					
ANR	1035369	Argument	( FDIV ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1					
ANR	1035370	InclusiveOrExpression	( FDIV ^ inv_bits ) | VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	0		|			
ANR	1035371	ExclusiveOrExpression	FDIV ^ inv_bits		1035059	0		^			
ANR	1035372	Identifier	FDIV		1035059	0					
ANR	1035373	Identifier	inv_bits		1035059	1					
ANR	1035374	InclusiveOrExpression	VD ( dst_r ) | VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035375	CallExpression	VD ( dst_r )		1035059	0					
ANR	1035376	Callee	VD		1035059	0					
ANR	1035377	Identifier	VD		1035059	0					
ANR	1035378	ArgumentList	dst_r		1035059	1					
ANR	1035379	Argument	dst_r		1035059	0					
ANR	1035380	Identifier	dst_r		1035059	0					
ANR	1035381	InclusiveOrExpression	VN ( src1 ) | VM ( src2 )		1035059	1		|			
ANR	1035382	CallExpression	VN ( src1 )		1035059	0					
ANR	1035383	Callee	VN		1035059	0					
ANR	1035384	Identifier	VN		1035059	0					
ANR	1035385	ArgumentList	src1		1035059	1					
ANR	1035386	Argument	src1		1035059	0					
ANR	1035387	Identifier	src1		1035059	0					
ANR	1035388	CallExpression	VM ( src2 )		1035059	1					
ANR	1035389	Callee	VM		1035059	0					
ANR	1035390	Identifier	VM		1035059	0					
ANR	1035391	ArgumentList	src2		1035059	1					
ANR	1035392	Argument	src2		1035059	0					
ANR	1035393	Identifier	src2		1035059	0					
ANR	1035394	BreakStatement	break ;	1760:2:54976:54981	1035059	11	True				
ANR	1035395	IfStatement	if ( ! ( dst & SLJIT_MEM ) )		1035059	13					
ANR	1035396	Condition	! ( dst & SLJIT_MEM )	1763:5:54992:55009	1035059	0	True				
ANR	1035397	UnaryOperationExpression	! ( dst & SLJIT_MEM )		1035059	0					
ANR	1035398	UnaryOperator	!		1035059	0					
ANR	1035399	BitAndExpression	dst & SLJIT_MEM		1035059	1		&			
ANR	1035400	Identifier	dst		1035059	0					
ANR	1035401	Identifier	SLJIT_MEM		1035059	1					
ANR	1035402	ReturnStatement	return SLJIT_SUCCESS ;	1764:2:55014:55034	1035059	1	True				
ANR	1035403	Identifier	SLJIT_SUCCESS		1035059	0					
ANR	1035404	ReturnStatement	"return emit_fop_mem ( compiler , mem_flags | STORE , TMP_FREG1 , dst , dstw ) ;"	1765:1:55037:55107	1035059	14	True				
ANR	1035405	CallExpression	"emit_fop_mem ( compiler , mem_flags | STORE , TMP_FREG1 , dst , dstw )"		1035059	0					
ANR	1035406	Callee	emit_fop_mem		1035059	0					
ANR	1035407	Identifier	emit_fop_mem		1035059	0					
ANR	1035408	ArgumentList	compiler		1035059	1					
ANR	1035409	Argument	compiler		1035059	0					
ANR	1035410	Identifier	compiler		1035059	0					
ANR	1035411	Argument	mem_flags | STORE		1035059	1					
ANR	1035412	InclusiveOrExpression	mem_flags | STORE		1035059	0		|			
ANR	1035413	Identifier	mem_flags		1035059	0					
ANR	1035414	Identifier	STORE		1035059	1					
ANR	1035415	Argument	TMP_FREG1		1035059	2					
ANR	1035416	Identifier	TMP_FREG1		1035059	0					
ANR	1035417	Argument	dst		1035059	3					
ANR	1035418	Identifier	dst		1035059	0					
ANR	1035419	Argument	dstw		1035059	4					
ANR	1035420	Identifier	dstw		1035059	0					
ANR	1035421	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1035059	1					
ANR	1035422	Identifier	sljit_emit_fop2		1035059	2					
ANR	1035423	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1035059	3					
ANR	1035424	Parameter	struct sljit_compiler * compiler	1721:50:53707:53737	1035059	0	True				
ANR	1035425	ParameterType	struct sljit_compiler *		1035059	0					
ANR	1035426	Identifier	compiler		1035059	1					
ANR	1035427	Parameter	sljit_si op	1721:83:53740:53750	1035059	1	True				
ANR	1035428	ParameterType	sljit_si		1035059	0					
ANR	1035429	Identifier	op		1035059	1					
ANR	1035430	Parameter	sljit_si dst	1722:1:53754:53765	1035059	2	True				
ANR	1035431	ParameterType	sljit_si		1035059	0					
ANR	1035432	Identifier	dst		1035059	1					
ANR	1035433	Parameter	sljit_sw dstw	1722:15:53768:53780	1035059	3	True				
ANR	1035434	ParameterType	sljit_sw		1035059	0					
ANR	1035435	Identifier	dstw		1035059	1					
ANR	1035436	Parameter	sljit_si src1	1723:1:53784:53796	1035059	4	True				
ANR	1035437	ParameterType	sljit_si		1035059	0					
ANR	1035438	Identifier	src1		1035059	1					
ANR	1035439	Parameter	sljit_sw src1w	1723:16:53799:53812	1035059	5	True				
ANR	1035440	ParameterType	sljit_sw		1035059	0					
ANR	1035441	Identifier	src1w		1035059	1					
ANR	1035442	Parameter	sljit_si src2	1724:1:53816:53828	1035059	6	True				
ANR	1035443	ParameterType	sljit_si		1035059	0					
ANR	1035444	Identifier	src2		1035059	1					
ANR	1035445	Parameter	sljit_sw src2w	1724:16:53831:53844	1035059	7	True				
ANR	1035446	ParameterType	sljit_sw		1035059	0					
ANR	1035447	Identifier	src2w		1035059	1					
ANR	1035448	CFGEntryNode	ENTRY		1035059		True				
ANR	1035449	CFGExitNode	EXIT		1035059		True				
ANR	1035450	Symbol	compiler -> cache_argw		1035059						
ANR	1035451	Symbol	TMP_FREG2		1035059						
ANR	1035452	Symbol	src1w		1035059						
ANR	1035453	Symbol	dst		1035059						
ANR	1035454	Symbol	TMP_FREG1		1035059						
ANR	1035455	Symbol	SLJIT_MEM		1035059						
ANR	1035456	Symbol	* compiler		1035059						
ANR	1035457	Symbol	FDIV		1035059						
ANR	1035458	Symbol	dst_r		1035059						
ANR	1035459	Symbol	GET_OPCODE		1035059						
ANR	1035460	Symbol	emit_fop_mem		1035059						
ANR	1035461	Symbol	inv_bits		1035059						
ANR	1035462	Symbol	FADD		1035059						
ANR	1035463	Symbol	compiler		1035059						
ANR	1035464	Symbol	src2w		1035059						
ANR	1035465	Symbol	op		1035059						
ANR	1035466	Symbol	push_inst		1035059						
ANR	1035467	Symbol	FAST_IS_REG		1035059						
ANR	1035468	Symbol	INT_SIZE		1035059						
ANR	1035469	Symbol	compiler -> cache_arg		1035059						
ANR	1035470	Symbol	SLJIT_SINGLE_OP		1035059						
ANR	1035471	Symbol	SLJIT_SUCCESS		1035059						
ANR	1035472	Symbol	check_sljit_emit_fop2		1035059						
ANR	1035473	Symbol	VD		1035059						
ANR	1035474	Symbol	mem_flags		1035059						
ANR	1035475	Symbol	VM		1035059						
ANR	1035476	Symbol	src1		1035059						
ANR	1035477	Symbol	VN		1035059						
ANR	1035478	Symbol	STORE		1035059						
ANR	1035479	Symbol	src2		1035059						
ANR	1035480	Symbol	FSUB		1035059						
ANR	1035481	Symbol	dstw		1035059						
ANR	1035482	Symbol	WORD_SIZE		1035059						
ANR	1035483	Symbol	FMUL		1035059						
ANR	1035484	Function	sljit_emit_fast_enter	1772:0:55341:55848							
ANR	1035485	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1035484	0					
ANR	1035486	CompoundStatement		1773:0:55459:55848	1035484	0					
ANR	1035487	ExpressionStatement	CHECK_ERROR ( )	1774:1:55462:55475	1035484	0	True				
ANR	1035488	CallExpression	CHECK_ERROR ( )		1035484	0					
ANR	1035489	Callee	CHECK_ERROR		1035484	0					
ANR	1035490	Identifier	CHECK_ERROR		1035484	0					
ANR	1035491	ArgumentList			1035484	1					
ANR	1035492	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	1775:1:55478:55533	1035484	1	True				
ANR	1035493	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1035484	0					
ANR	1035494	Callee	CHECK		1035484	0					
ANR	1035495	Identifier	CHECK		1035484	0					
ANR	1035496	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1035484	1					
ANR	1035497	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1035484	0					
ANR	1035498	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1035484	0					
ANR	1035499	Callee	check_sljit_emit_fast_enter		1035484	0					
ANR	1035500	Identifier	check_sljit_emit_fast_enter		1035484	0					
ANR	1035501	ArgumentList	compiler		1035484	1					
ANR	1035502	Argument	compiler		1035484	0					
ANR	1035503	Identifier	compiler		1035484	0					
ANR	1035504	Argument	dst		1035484	1					
ANR	1035505	Identifier	dst		1035484	0					
ANR	1035506	Argument	dstw		1035484	2					
ANR	1035507	Identifier	dstw		1035484	0					
ANR	1035508	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1776:1:55536:55566	1035484	2	True				
ANR	1035509	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1035484	0					
ANR	1035510	Callee	ADJUST_LOCAL_OFFSET		1035484	0					
ANR	1035511	Identifier	ADJUST_LOCAL_OFFSET		1035484	0					
ANR	1035512	ArgumentList	dst		1035484	1					
ANR	1035513	Argument	dst		1035484	0					
ANR	1035514	Identifier	dst		1035484	0					
ANR	1035515	Argument	dstw		1035484	1					
ANR	1035516	Identifier	dstw		1035484	0					
ANR	1035517	IfStatement	if ( dst == SLJIT_UNUSED )		1035484	3					
ANR	1035518	Condition	dst == SLJIT_UNUSED	1779:5:55621:55639	1035484	0	True				
ANR	1035519	EqualityExpression	dst == SLJIT_UNUSED		1035484	0		==			
ANR	1035520	Identifier	dst		1035484	0					
ANR	1035521	Identifier	SLJIT_UNUSED		1035484	1					
ANR	1035522	ReturnStatement	return SLJIT_SUCCESS ;	1780:2:55644:55664	1035484	1	True				
ANR	1035523	Identifier	SLJIT_SUCCESS		1035484	0					
ANR	1035524	IfStatement	if ( FAST_IS_REG ( dst ) )		1035484	4					
ANR	1035525	Condition	FAST_IS_REG ( dst )	1782:5:55672:55687	1035484	0	True				
ANR	1035526	CallExpression	FAST_IS_REG ( dst )		1035484	0					
ANR	1035527	Callee	FAST_IS_REG		1035484	0					
ANR	1035528	Identifier	FAST_IS_REG		1035484	0					
ANR	1035529	ArgumentList	dst		1035484	1					
ANR	1035530	Argument	dst		1035484	0					
ANR	1035531	Identifier	dst		1035484	0					
ANR	1035532	ReturnStatement	"return push_inst ( compiler , ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( TMP_LR ) ) ;"	1783:2:55692:55761	1035484	1	True				
ANR	1035533	CallExpression	"push_inst ( compiler , ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( TMP_LR ) )"		1035484	0					
ANR	1035534	Callee	push_inst		1035484	0					
ANR	1035535	Identifier	push_inst		1035484	0					
ANR	1035536	ArgumentList	compiler		1035484	1					
ANR	1035537	Argument	compiler		1035484	0					
ANR	1035538	Identifier	compiler		1035484	0					
ANR	1035539	Argument	ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( TMP_LR )		1035484	1					
ANR	1035540	InclusiveOrExpression	ORR | RD ( dst ) | RN ( TMP_ZERO ) | RM ( TMP_LR )		1035484	0		|			
ANR	1035541	Identifier	ORR		1035484	0					
ANR	1035542	InclusiveOrExpression	RD ( dst ) | RN ( TMP_ZERO ) | RM ( TMP_LR )		1035484	1		|			
ANR	1035543	CallExpression	RD ( dst )		1035484	0					
ANR	1035544	Callee	RD		1035484	0					
ANR	1035545	Identifier	RD		1035484	0					
ANR	1035546	ArgumentList	dst		1035484	1					
ANR	1035547	Argument	dst		1035484	0					
ANR	1035548	Identifier	dst		1035484	0					
ANR	1035549	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( TMP_LR )		1035484	1		|			
ANR	1035550	CallExpression	RN ( TMP_ZERO )		1035484	0					
ANR	1035551	Callee	RN		1035484	0					
ANR	1035552	Identifier	RN		1035484	0					
ANR	1035553	ArgumentList	TMP_ZERO		1035484	1					
ANR	1035554	Argument	TMP_ZERO		1035484	0					
ANR	1035555	Identifier	TMP_ZERO		1035484	0					
ANR	1035556	CallExpression	RM ( TMP_LR )		1035484	1					
ANR	1035557	Callee	RM		1035484	0					
ANR	1035558	Identifier	RM		1035484	0					
ANR	1035559	ArgumentList	TMP_LR		1035484	1					
ANR	1035560	Argument	TMP_LR		1035484	0					
ANR	1035561	Identifier	TMP_LR		1035484	0					
ANR	1035562	ReturnStatement	"return emit_op_mem ( compiler , WORD_SIZE | STORE , TMP_LR , dst , dstw ) ;"	1786:1:55780:55846	1035484	5	True				
ANR	1035563	CallExpression	"emit_op_mem ( compiler , WORD_SIZE | STORE , TMP_LR , dst , dstw )"		1035484	0					
ANR	1035564	Callee	emit_op_mem		1035484	0					
ANR	1035565	Identifier	emit_op_mem		1035484	0					
ANR	1035566	ArgumentList	compiler		1035484	1					
ANR	1035567	Argument	compiler		1035484	0					
ANR	1035568	Identifier	compiler		1035484	0					
ANR	1035569	Argument	WORD_SIZE | STORE		1035484	1					
ANR	1035570	InclusiveOrExpression	WORD_SIZE | STORE		1035484	0		|			
ANR	1035571	Identifier	WORD_SIZE		1035484	0					
ANR	1035572	Identifier	STORE		1035484	1					
ANR	1035573	Argument	TMP_LR		1035484	2					
ANR	1035574	Identifier	TMP_LR		1035484	0					
ANR	1035575	Argument	dst		1035484	3					
ANR	1035576	Identifier	dst		1035484	0					
ANR	1035577	Argument	dstw		1035484	4					
ANR	1035578	Identifier	dstw		1035484	0					
ANR	1035579	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1035484	1					
ANR	1035580	Identifier	sljit_emit_fast_enter		1035484	2					
ANR	1035581	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1035484	3					
ANR	1035582	Parameter	struct sljit_compiler * compiler	1772:56:55397:55427	1035484	0	True				
ANR	1035583	ParameterType	struct sljit_compiler *		1035484	0					
ANR	1035584	Identifier	compiler		1035484	1					
ANR	1035585	Parameter	sljit_si dst	1772:89:55430:55441	1035484	1	True				
ANR	1035586	ParameterType	sljit_si		1035484	0					
ANR	1035587	Identifier	dst		1035484	1					
ANR	1035588	Parameter	sljit_sw dstw	1772:103:55444:55456	1035484	2	True				
ANR	1035589	ParameterType	sljit_sw		1035484	0					
ANR	1035590	Identifier	dstw		1035484	1					
ANR	1035591	CFGEntryNode	ENTRY		1035484		True				
ANR	1035592	CFGExitNode	EXIT		1035484		True				
ANR	1035593	Symbol	push_inst		1035484						
ANR	1035594	Symbol	check_sljit_emit_fast_enter		1035484						
ANR	1035595	Symbol	FAST_IS_REG		1035484						
ANR	1035596	Symbol	dst		1035484						
ANR	1035597	Symbol	emit_op_mem		1035484						
ANR	1035598	Symbol	SLJIT_SUCCESS		1035484						
ANR	1035599	Symbol	ORR		1035484						
ANR	1035600	Symbol	RD		1035484						
ANR	1035601	Symbol	SLJIT_UNUSED		1035484						
ANR	1035602	Symbol	TMP_LR		1035484						
ANR	1035603	Symbol	STORE		1035484						
ANR	1035604	Symbol	TMP_ZERO		1035484						
ANR	1035605	Symbol	RM		1035484						
ANR	1035606	Symbol	compiler		1035484						
ANR	1035607	Symbol	RN		1035484						
ANR	1035608	Symbol	dstw		1035484						
ANR	1035609	Symbol	WORD_SIZE		1035484						
ANR	1035610	Function	sljit_emit_fast_return	1789:0:55851:56396							
ANR	1035611	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1035610	0					
ANR	1035612	CompoundStatement		1790:0:55970:56396	1035610	0					
ANR	1035613	ExpressionStatement	CHECK_ERROR ( )	1791:1:55973:55986	1035610	0	True				
ANR	1035614	CallExpression	CHECK_ERROR ( )		1035610	0					
ANR	1035615	Callee	CHECK_ERROR		1035610	0					
ANR	1035616	Identifier	CHECK_ERROR		1035610	0					
ANR	1035617	ArgumentList			1035610	1					
ANR	1035618	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	1792:1:55989:56045	1035610	1	True				
ANR	1035619	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1035610	0					
ANR	1035620	Callee	CHECK		1035610	0					
ANR	1035621	Identifier	CHECK		1035610	0					
ANR	1035622	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1035610	1					
ANR	1035623	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1035610	0					
ANR	1035624	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1035610	0					
ANR	1035625	Callee	check_sljit_emit_fast_return		1035610	0					
ANR	1035626	Identifier	check_sljit_emit_fast_return		1035610	0					
ANR	1035627	ArgumentList	compiler		1035610	1					
ANR	1035628	Argument	compiler		1035610	0					
ANR	1035629	Identifier	compiler		1035610	0					
ANR	1035630	Argument	src		1035610	1					
ANR	1035631	Identifier	src		1035610	0					
ANR	1035632	Argument	srcw		1035610	2					
ANR	1035633	Identifier	srcw		1035610	0					
ANR	1035634	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1793:1:56048:56078	1035610	2	True				
ANR	1035635	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1035610	0					
ANR	1035636	Callee	ADJUST_LOCAL_OFFSET		1035610	0					
ANR	1035637	Identifier	ADJUST_LOCAL_OFFSET		1035610	0					
ANR	1035638	ArgumentList	src		1035610	1					
ANR	1035639	Argument	src		1035610	0					
ANR	1035640	Identifier	src		1035610	0					
ANR	1035641	Argument	srcw		1035610	1					
ANR	1035642	Identifier	srcw		1035610	0					
ANR	1035643	IfStatement	if ( FAST_IS_REG ( src ) )		1035610	3					
ANR	1035644	Condition	FAST_IS_REG ( src )	1795:5:56086:56101	1035610	0	True				
ANR	1035645	CallExpression	FAST_IS_REG ( src )		1035610	0					
ANR	1035646	Callee	FAST_IS_REG		1035610	0					
ANR	1035647	Identifier	FAST_IS_REG		1035610	0					
ANR	1035648	ArgumentList	src		1035610	1					
ANR	1035649	Argument	src		1035610	0					
ANR	1035650	Identifier	src		1035610	0					
ANR	1035651	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ORR | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src ) ) )"	1796:2:56106:56177	1035610	1	True				
ANR	1035652	CallExpression	"FAIL_IF ( push_inst ( compiler , ORR | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src ) ) )"		1035610	0					
ANR	1035653	Callee	FAIL_IF		1035610	0					
ANR	1035654	Identifier	FAIL_IF		1035610	0					
ANR	1035655	ArgumentList	"push_inst ( compiler , ORR | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src ) )"		1035610	1					
ANR	1035656	Argument	"push_inst ( compiler , ORR | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src ) )"		1035610	0					
ANR	1035657	CallExpression	"push_inst ( compiler , ORR | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src ) )"		1035610	0					
ANR	1035658	Callee	push_inst		1035610	0					
ANR	1035659	Identifier	push_inst		1035610	0					
ANR	1035660	ArgumentList	compiler		1035610	1					
ANR	1035661	Argument	compiler		1035610	0					
ANR	1035662	Identifier	compiler		1035610	0					
ANR	1035663	Argument	ORR | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src )		1035610	1					
ANR	1035664	InclusiveOrExpression	ORR | RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src )		1035610	0		|			
ANR	1035665	Identifier	ORR		1035610	0					
ANR	1035666	InclusiveOrExpression	RD ( TMP_LR ) | RN ( TMP_ZERO ) | RM ( src )		1035610	1		|			
ANR	1035667	CallExpression	RD ( TMP_LR )		1035610	0					
ANR	1035668	Callee	RD		1035610	0					
ANR	1035669	Identifier	RD		1035610	0					
ANR	1035670	ArgumentList	TMP_LR		1035610	1					
ANR	1035671	Argument	TMP_LR		1035610	0					
ANR	1035672	Identifier	TMP_LR		1035610	0					
ANR	1035673	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( src )		1035610	1		|			
ANR	1035674	CallExpression	RN ( TMP_ZERO )		1035610	0					
ANR	1035675	Callee	RN		1035610	0					
ANR	1035676	Identifier	RN		1035610	0					
ANR	1035677	ArgumentList	TMP_ZERO		1035610	1					
ANR	1035678	Argument	TMP_ZERO		1035610	0					
ANR	1035679	Identifier	TMP_ZERO		1035610	0					
ANR	1035680	CallExpression	RM ( src )		1035610	1					
ANR	1035681	Callee	RM		1035610	0					
ANR	1035682	Identifier	RM		1035610	0					
ANR	1035683	ArgumentList	src		1035610	1					
ANR	1035684	Argument	src		1035610	0					
ANR	1035685	Identifier	src		1035610	0					
ANR	1035686	ElseStatement	else		1035610	0					
ANR	1035687	IfStatement	if ( src & SLJIT_MEM )		1035610	0					
ANR	1035688	Condition	src & SLJIT_MEM	1797:10:56189:56203	1035610	0	True				
ANR	1035689	BitAndExpression	src & SLJIT_MEM		1035610	0		&			
ANR	1035690	Identifier	src		1035610	0					
ANR	1035691	Identifier	SLJIT_MEM		1035610	1					
ANR	1035692	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , TMP_LR , src , srcw ) )"	1798:2:56208:56268	1035610	1	True				
ANR	1035693	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , TMP_LR , src , srcw ) )"		1035610	0					
ANR	1035694	Callee	FAIL_IF		1035610	0					
ANR	1035695	Identifier	FAIL_IF		1035610	0					
ANR	1035696	ArgumentList	"emit_op_mem ( compiler , WORD_SIZE , TMP_LR , src , srcw )"		1035610	1					
ANR	1035697	Argument	"emit_op_mem ( compiler , WORD_SIZE , TMP_LR , src , srcw )"		1035610	0					
ANR	1035698	CallExpression	"emit_op_mem ( compiler , WORD_SIZE , TMP_LR , src , srcw )"		1035610	0					
ANR	1035699	Callee	emit_op_mem		1035610	0					
ANR	1035700	Identifier	emit_op_mem		1035610	0					
ANR	1035701	ArgumentList	compiler		1035610	1					
ANR	1035702	Argument	compiler		1035610	0					
ANR	1035703	Identifier	compiler		1035610	0					
ANR	1035704	Argument	WORD_SIZE		1035610	1					
ANR	1035705	Identifier	WORD_SIZE		1035610	0					
ANR	1035706	Argument	TMP_LR		1035610	2					
ANR	1035707	Identifier	TMP_LR		1035610	0					
ANR	1035708	Argument	src		1035610	3					
ANR	1035709	Identifier	src		1035610	0					
ANR	1035710	Argument	srcw		1035610	4					
ANR	1035711	Identifier	srcw		1035610	0					
ANR	1035712	ElseStatement	else		1035610	0					
ANR	1035713	IfStatement	if ( src & SLJIT_IMM )		1035610	0					
ANR	1035714	Condition	src & SLJIT_IMM	1799:10:56280:56294	1035610	0	True				
ANR	1035715	BitAndExpression	src & SLJIT_IMM		1035610	0		&			
ANR	1035716	Identifier	src		1035610	0					
ANR	1035717	Identifier	SLJIT_IMM		1035610	1					
ANR	1035718	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_LR , srcw ) )"	1800:2:56299:56346	1035610	1	True				
ANR	1035719	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_LR , srcw ) )"		1035610	0					
ANR	1035720	Callee	FAIL_IF		1035610	0					
ANR	1035721	Identifier	FAIL_IF		1035610	0					
ANR	1035722	ArgumentList	"load_immediate ( compiler , TMP_LR , srcw )"		1035610	1					
ANR	1035723	Argument	"load_immediate ( compiler , TMP_LR , srcw )"		1035610	0					
ANR	1035724	CallExpression	"load_immediate ( compiler , TMP_LR , srcw )"		1035610	0					
ANR	1035725	Callee	load_immediate		1035610	0					
ANR	1035726	Identifier	load_immediate		1035610	0					
ANR	1035727	ArgumentList	compiler		1035610	1					
ANR	1035728	Argument	compiler		1035610	0					
ANR	1035729	Identifier	compiler		1035610	0					
ANR	1035730	Argument	TMP_LR		1035610	1					
ANR	1035731	Identifier	TMP_LR		1035610	0					
ANR	1035732	Argument	srcw		1035610	2					
ANR	1035733	Identifier	srcw		1035610	0					
ANR	1035734	ReturnStatement	"return push_inst ( compiler , RET | RN ( TMP_LR ) ) ;"	1802:1:56350:56394	1035610	4	True				
ANR	1035735	CallExpression	"push_inst ( compiler , RET | RN ( TMP_LR ) )"		1035610	0					
ANR	1035736	Callee	push_inst		1035610	0					
ANR	1035737	Identifier	push_inst		1035610	0					
ANR	1035738	ArgumentList	compiler		1035610	1					
ANR	1035739	Argument	compiler		1035610	0					
ANR	1035740	Identifier	compiler		1035610	0					
ANR	1035741	Argument	RET | RN ( TMP_LR )		1035610	1					
ANR	1035742	InclusiveOrExpression	RET | RN ( TMP_LR )		1035610	0		|			
ANR	1035743	Identifier	RET		1035610	0					
ANR	1035744	CallExpression	RN ( TMP_LR )		1035610	1					
ANR	1035745	Callee	RN		1035610	0					
ANR	1035746	Identifier	RN		1035610	0					
ANR	1035747	ArgumentList	TMP_LR		1035610	1					
ANR	1035748	Argument	TMP_LR		1035610	0					
ANR	1035749	Identifier	TMP_LR		1035610	0					
ANR	1035750	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1035610	1					
ANR	1035751	Identifier	sljit_emit_fast_return		1035610	2					
ANR	1035752	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1035610	3					
ANR	1035753	Parameter	struct sljit_compiler * compiler	1789:57:55908:55938	1035610	0	True				
ANR	1035754	ParameterType	struct sljit_compiler *		1035610	0					
ANR	1035755	Identifier	compiler		1035610	1					
ANR	1035756	Parameter	sljit_si src	1789:90:55941:55952	1035610	1	True				
ANR	1035757	ParameterType	sljit_si		1035610	0					
ANR	1035758	Identifier	src		1035610	1					
ANR	1035759	Parameter	sljit_sw srcw	1789:104:55955:55967	1035610	2	True				
ANR	1035760	ParameterType	sljit_sw		1035610	0					
ANR	1035761	Identifier	srcw		1035610	1					
ANR	1035762	CFGEntryNode	ENTRY		1035610		True				
ANR	1035763	CFGExitNode	EXIT		1035610		True				
ANR	1035764	Symbol	RET		1035610						
ANR	1035765	Symbol	push_inst		1035610						
ANR	1035766	Symbol	FAST_IS_REG		1035610						
ANR	1035767	Symbol	src		1035610						
ANR	1035768	Symbol	srcw		1035610						
ANR	1035769	Symbol	SLJIT_MEM		1035610						
ANR	1035770	Symbol	emit_op_mem		1035610						
ANR	1035771	Symbol	ORR		1035610						
ANR	1035772	Symbol	RD		1035610						
ANR	1035773	Symbol	SLJIT_IMM		1035610						
ANR	1035774	Symbol	check_sljit_emit_fast_return		1035610						
ANR	1035775	Symbol	load_immediate		1035610						
ANR	1035776	Symbol	TMP_LR		1035610						
ANR	1035777	Symbol	TMP_ZERO		1035610						
ANR	1035778	Symbol	RM		1035610						
ANR	1035779	Symbol	compiler		1035610						
ANR	1035780	Symbol	RN		1035610						
ANR	1035781	Symbol	WORD_SIZE		1035610						
ANR	1035782	Function	get_cc	1809:0:56628:57449							
ANR	1035783	FunctionDef	get_cc (sljit_si type)		1035782	0					
ANR	1035784	CompoundStatement		1810:0:56666:57449	1035782	0					
ANR	1035785	SwitchStatement	switch ( type )		1035782	0					
ANR	1035786	Condition	type	1811:9:56677:56680	1035782	0	True				
ANR	1035787	Identifier	type		1035782	0					
ANR	1035788	CompoundStatement		2:15:16:16	1035782	1					
ANR	1035789	Label	case SLJIT_EQUAL :	1812:1:56686:56702	1035782	0	True				
ANR	1035790	Identifier	SLJIT_EQUAL		1035782	0					
ANR	1035791	Label	case SLJIT_MUL_NOT_OVERFLOW :	1813:1:56705:56732	1035782	1	True				
ANR	1035792	Identifier	SLJIT_MUL_NOT_OVERFLOW		1035782	0					
ANR	1035793	Label	case SLJIT_D_EQUAL :	1814:1:56735:56753	1035782	2	True				
ANR	1035794	Identifier	SLJIT_D_EQUAL		1035782	0					
ANR	1035795	ReturnStatement	return 0x1 ;	1815:2:56757:56767	1035782	3	True				
ANR	1035796	PrimaryExpression	0x1		1035782	0					
ANR	1035797	Label	case SLJIT_NOT_EQUAL :	1817:1:56771:56791	1035782	4	True				
ANR	1035798	Identifier	SLJIT_NOT_EQUAL		1035782	0					
ANR	1035799	Label	case SLJIT_MUL_OVERFLOW :	1818:1:56794:56817	1035782	5	True				
ANR	1035800	Identifier	SLJIT_MUL_OVERFLOW		1035782	0					
ANR	1035801	Label	case SLJIT_D_NOT_EQUAL :	1819:1:56820:56842	1035782	6	True				
ANR	1035802	Identifier	SLJIT_D_NOT_EQUAL		1035782	0					
ANR	1035803	ReturnStatement	return 0x0 ;	1820:2:56846:56856	1035782	7	True				
ANR	1035804	PrimaryExpression	0x0		1035782	0					
ANR	1035805	Label	case SLJIT_LESS :	1822:1:56860:56875	1035782	8	True				
ANR	1035806	Identifier	SLJIT_LESS		1035782	0					
ANR	1035807	Label	case SLJIT_D_LESS :	1823:1:56878:56895	1035782	9	True				
ANR	1035808	Identifier	SLJIT_D_LESS		1035782	0					
ANR	1035809	ReturnStatement	return 0x2 ;	1824:2:56899:56909	1035782	10	True				
ANR	1035810	PrimaryExpression	0x2		1035782	0					
ANR	1035811	Label	case SLJIT_GREATER_EQUAL :	1826:1:56913:56937	1035782	11	True				
ANR	1035812	Identifier	SLJIT_GREATER_EQUAL		1035782	0					
ANR	1035813	Label	case SLJIT_D_GREATER_EQUAL :	1827:1:56940:56966	1035782	12	True				
ANR	1035814	Identifier	SLJIT_D_GREATER_EQUAL		1035782	0					
ANR	1035815	ReturnStatement	return 0x3 ;	1828:2:56970:56980	1035782	13	True				
ANR	1035816	PrimaryExpression	0x3		1035782	0					
ANR	1035817	Label	case SLJIT_GREATER :	1830:1:56984:57002	1035782	14	True				
ANR	1035818	Identifier	SLJIT_GREATER		1035782	0					
ANR	1035819	Label	case SLJIT_D_GREATER :	1831:1:57005:57025	1035782	15	True				
ANR	1035820	Identifier	SLJIT_D_GREATER		1035782	0					
ANR	1035821	ReturnStatement	return 0x9 ;	1832:2:57029:57039	1035782	16	True				
ANR	1035822	PrimaryExpression	0x9		1035782	0					
ANR	1035823	Label	case SLJIT_LESS_EQUAL :	1834:1:57043:57064	1035782	17	True				
ANR	1035824	Identifier	SLJIT_LESS_EQUAL		1035782	0					
ANR	1035825	Label	case SLJIT_D_LESS_EQUAL :	1835:1:57067:57090	1035782	18	True				
ANR	1035826	Identifier	SLJIT_D_LESS_EQUAL		1035782	0					
ANR	1035827	ReturnStatement	return 0x8 ;	1836:2:57094:57104	1035782	19	True				
ANR	1035828	PrimaryExpression	0x8		1035782	0					
ANR	1035829	Label	case SLJIT_SIG_LESS :	1838:1:57108:57127	1035782	20	True				
ANR	1035830	Identifier	SLJIT_SIG_LESS		1035782	0					
ANR	1035831	ReturnStatement	return 0xa ;	1839:2:57131:57141	1035782	21	True				
ANR	1035832	PrimaryExpression	0xa		1035782	0					
ANR	1035833	Label	case SLJIT_SIG_GREATER_EQUAL :	1841:1:57145:57173	1035782	22	True				
ANR	1035834	Identifier	SLJIT_SIG_GREATER_EQUAL		1035782	0					
ANR	1035835	ReturnStatement	return 0xb ;	1842:2:57177:57187	1035782	23	True				
ANR	1035836	PrimaryExpression	0xb		1035782	0					
ANR	1035837	Label	case SLJIT_SIG_GREATER :	1844:1:57191:57213	1035782	24	True				
ANR	1035838	Identifier	SLJIT_SIG_GREATER		1035782	0					
ANR	1035839	ReturnStatement	return 0xd ;	1845:2:57217:57227	1035782	25	True				
ANR	1035840	PrimaryExpression	0xd		1035782	0					
ANR	1035841	Label	case SLJIT_SIG_LESS_EQUAL :	1847:1:57231:57256	1035782	26	True				
ANR	1035842	Identifier	SLJIT_SIG_LESS_EQUAL		1035782	0					
ANR	1035843	ReturnStatement	return 0xc ;	1848:2:57260:57270	1035782	27	True				
ANR	1035844	PrimaryExpression	0xc		1035782	0					
ANR	1035845	Label	case SLJIT_OVERFLOW :	1850:1:57274:57293	1035782	28	True				
ANR	1035846	Identifier	SLJIT_OVERFLOW		1035782	0					
ANR	1035847	Label	case SLJIT_D_UNORDERED :	1851:1:57296:57318	1035782	29	True				
ANR	1035848	Identifier	SLJIT_D_UNORDERED		1035782	0					
ANR	1035849	ReturnStatement	return 0x7 ;	1852:2:57322:57332	1035782	30	True				
ANR	1035850	PrimaryExpression	0x7		1035782	0					
ANR	1035851	Label	case SLJIT_NOT_OVERFLOW :	1854:1:57336:57359	1035782	31	True				
ANR	1035852	Identifier	SLJIT_NOT_OVERFLOW		1035782	0					
ANR	1035853	Label	case SLJIT_D_ORDERED :	1855:1:57362:57382	1035782	32	True				
ANR	1035854	Identifier	SLJIT_D_ORDERED		1035782	0					
ANR	1035855	ReturnStatement	return 0x6 ;	1856:2:57386:57396	1035782	33	True				
ANR	1035856	PrimaryExpression	0x6		1035782	0					
ANR	1035857	Label	default :	1858:1:57400:57407	1035782	34	True				
ANR	1035858	Identifier	default		1035782	0					
ANR	1035859	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1859:2:57411:57430	1035782	35	True				
ANR	1035860	CallExpression	SLJIT_ASSERT_STOP ( )		1035782	0					
ANR	1035861	Callee	SLJIT_ASSERT_STOP		1035782	0					
ANR	1035862	Identifier	SLJIT_ASSERT_STOP		1035782	0					
ANR	1035863	ArgumentList			1035782	1					
ANR	1035864	ReturnStatement	return 0xe ;	1860:2:57434:57444	1035782	36	True				
ANR	1035865	PrimaryExpression	0xe		1035782	0					
ANR	1035866	ReturnType	static sljit_uw		1035782	1					
ANR	1035867	Identifier	get_cc		1035782	2					
ANR	1035868	ParameterList	sljit_si type		1035782	3					
ANR	1035869	Parameter	sljit_si type	1809:23:56651:56663	1035782	0	True				
ANR	1035870	ParameterType	sljit_si		1035782	0					
ANR	1035871	Identifier	type		1035782	1					
ANR	1035872	CFGEntryNode	ENTRY		1035782		True				
ANR	1035873	CFGExitNode	EXIT		1035782		True				
ANR	1035874	Symbol	type		1035782						
ANR	1035875	Function	sljit_emit_label	1864:25:57477:57899							
ANR	1035876	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1035875	0					
ANR	1035877	CompoundStatement		1865:0:57547:57899	1035875	0					
ANR	1035878	IdentifierDeclStatement	struct sljit_label * label ;	1866:1:57550:57575	1035875	0	True				
ANR	1035879	IdentifierDecl	* label		1035875	0					
ANR	1035880	IdentifierDeclType	struct sljit_label *		1035875	0					
ANR	1035881	Identifier	label		1035875	1					
ANR	1035882	ExpressionStatement	CHECK_ERROR_PTR ( )	1868:1:57579:57596	1035875	1	True				
ANR	1035883	CallExpression	CHECK_ERROR_PTR ( )		1035875	0					
ANR	1035884	Callee	CHECK_ERROR_PTR		1035875	0					
ANR	1035885	Identifier	CHECK_ERROR_PTR		1035875	0					
ANR	1035886	ArgumentList			1035875	1					
ANR	1035887	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	1869:1:57599:57642	1035875	2	True				
ANR	1035888	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1035875	0					
ANR	1035889	Callee	CHECK_PTR		1035875	0					
ANR	1035890	Identifier	CHECK_PTR		1035875	0					
ANR	1035891	ArgumentList	check_sljit_emit_label ( compiler )		1035875	1					
ANR	1035892	Argument	check_sljit_emit_label ( compiler )		1035875	0					
ANR	1035893	CallExpression	check_sljit_emit_label ( compiler )		1035875	0					
ANR	1035894	Callee	check_sljit_emit_label		1035875	0					
ANR	1035895	Identifier	check_sljit_emit_label		1035875	0					
ANR	1035896	ArgumentList	compiler		1035875	1					
ANR	1035897	Argument	compiler		1035875	0					
ANR	1035898	Identifier	compiler		1035875	0					
ANR	1035899	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1035875	3					
ANR	1035900	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	1871:5:57650:57717	1035875	0	True				
ANR	1035901	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1035875	0		&&			
ANR	1035902	PtrMemberAccess	compiler -> last_label		1035875	0					
ANR	1035903	Identifier	compiler		1035875	0					
ANR	1035904	Identifier	last_label		1035875	1					
ANR	1035905	EqualityExpression	compiler -> last_label -> size == compiler -> size		1035875	1		==			
ANR	1035906	PtrMemberAccess	compiler -> last_label -> size		1035875	0					
ANR	1035907	PtrMemberAccess	compiler -> last_label		1035875	0					
ANR	1035908	Identifier	compiler		1035875	0					
ANR	1035909	Identifier	last_label		1035875	1					
ANR	1035910	Identifier	size		1035875	1					
ANR	1035911	PtrMemberAccess	compiler -> size		1035875	1					
ANR	1035912	Identifier	compiler		1035875	0					
ANR	1035913	Identifier	size		1035875	1					
ANR	1035914	ReturnStatement	return compiler -> last_label ;	1872:2:57722:57749	1035875	1	True				
ANR	1035915	PtrMemberAccess	compiler -> last_label		1035875	0					
ANR	1035916	Identifier	compiler		1035875	0					
ANR	1035917	Identifier	last_label		1035875	1					
ANR	1035918	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	1874:1:57753:57831	1035875	4	True				
ANR	1035919	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1035875	0		=			
ANR	1035920	Identifier	label		1035875	0					
ANR	1035921	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1035875	1					
ANR	1035922	CastTarget	struct sljit_label *		1035875	0					
ANR	1035923	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1035875	1					
ANR	1035924	Callee	ensure_abuf		1035875	0					
ANR	1035925	Identifier	ensure_abuf		1035875	0					
ANR	1035926	ArgumentList	compiler		1035875	1					
ANR	1035927	Argument	compiler		1035875	0					
ANR	1035928	Identifier	compiler		1035875	0					
ANR	1035929	Argument	sizeof ( struct sljit_label )		1035875	1					
ANR	1035930	SizeofExpression	sizeof ( struct sljit_label )		1035875	0					
ANR	1035931	Sizeof	sizeof		1035875	0					
ANR	1035932	SizeofOperand	struct sljit_label		1035875	1					
ANR	1035933	ExpressionStatement	PTR_FAIL_IF ( ! label )	1875:1:57834:57853	1035875	5	True				
ANR	1035934	CallExpression	PTR_FAIL_IF ( ! label )		1035875	0					
ANR	1035935	Callee	PTR_FAIL_IF		1035875	0					
ANR	1035936	Identifier	PTR_FAIL_IF		1035875	0					
ANR	1035937	ArgumentList	! label		1035875	1					
ANR	1035938	Argument	! label		1035875	0					
ANR	1035939	UnaryOperationExpression	! label		1035875	0					
ANR	1035940	UnaryOperator	!		1035875	0					
ANR	1035941	Identifier	label		1035875	1					
ANR	1035942	ExpressionStatement	"set_label ( label , compiler )"	1876:1:57856:57882	1035875	6	True				
ANR	1035943	CallExpression	"set_label ( label , compiler )"		1035875	0					
ANR	1035944	Callee	set_label		1035875	0					
ANR	1035945	Identifier	set_label		1035875	0					
ANR	1035946	ArgumentList	label		1035875	1					
ANR	1035947	Argument	label		1035875	0					
ANR	1035948	Identifier	label		1035875	0					
ANR	1035949	Argument	compiler		1035875	1					
ANR	1035950	Identifier	compiler		1035875	0					
ANR	1035951	ReturnStatement	return label ;	1877:1:57885:57897	1035875	7	True				
ANR	1035952	Identifier	label		1035875	0					
ANR	1035953	ReturnType	struct sljit_label *		1035875	1					
ANR	1035954	Identifier	sljit_emit_label		1035875	2					
ANR	1035955	ParameterList	struct sljit_compiler * compiler		1035875	3					
ANR	1035956	Parameter	struct sljit_compiler * compiler	1864:62:57514:57544	1035875	0	True				
ANR	1035957	ParameterType	struct sljit_compiler *		1035875	0					
ANR	1035958	Identifier	compiler		1035875	1					
ANR	1035959	CFGEntryNode	ENTRY		1035875		True				
ANR	1035960	CFGExitNode	EXIT		1035875		True				
ANR	1035961	Symbol	* compiler -> last_label		1035875						
ANR	1035962	Symbol	compiler -> last_label -> size		1035875						
ANR	1035963	Symbol	compiler -> last_label		1035875						
ANR	1035964	Symbol	* * compiler		1035875						
ANR	1035965	Symbol	compiler -> size		1035875						
ANR	1035966	Symbol	check_sljit_emit_label		1035875						
ANR	1035967	Symbol	label		1035875						
ANR	1035968	Symbol	* compiler		1035875						
ANR	1035969	Symbol	ensure_abuf		1035875						
ANR	1035970	Symbol	compiler		1035875						
ANR	1035971	Function	sljit_emit_jump	1880:25:57927:58656							
ANR	1035972	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1035971	0					
ANR	1035973	CompoundStatement		1881:0:58010:58656	1035971	0					
ANR	1035974	IdentifierDeclStatement	struct sljit_jump * jump ;	1882:1:58013:58036	1035971	0	True				
ANR	1035975	IdentifierDecl	* jump		1035971	0					
ANR	1035976	IdentifierDeclType	struct sljit_jump *		1035971	0					
ANR	1035977	Identifier	jump		1035971	1					
ANR	1035978	ExpressionStatement	CHECK_ERROR_PTR ( )	1884:1:58040:58057	1035971	1	True				
ANR	1035979	CallExpression	CHECK_ERROR_PTR ( )		1035971	0					
ANR	1035980	Callee	CHECK_ERROR_PTR		1035971	0					
ANR	1035981	Identifier	CHECK_ERROR_PTR		1035971	0					
ANR	1035982	ArgumentList			1035971	1					
ANR	1035983	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	1885:1:58060:58108	1035971	2	True				
ANR	1035984	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1035971	0					
ANR	1035985	Callee	CHECK_PTR		1035971	0					
ANR	1035986	Identifier	CHECK_PTR		1035971	0					
ANR	1035987	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1035971	1					
ANR	1035988	Argument	"check_sljit_emit_jump ( compiler , type )"		1035971	0					
ANR	1035989	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1035971	0					
ANR	1035990	Callee	check_sljit_emit_jump		1035971	0					
ANR	1035991	Identifier	check_sljit_emit_jump		1035971	0					
ANR	1035992	ArgumentList	compiler		1035971	1					
ANR	1035993	Argument	compiler		1035971	0					
ANR	1035994	Identifier	compiler		1035971	0					
ANR	1035995	Argument	type		1035971	1					
ANR	1035996	Identifier	type		1035971	0					
ANR	1035997	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1887:1:58112:58187	1035971	3	True				
ANR	1035998	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1035971	0		=			
ANR	1035999	Identifier	jump		1035971	0					
ANR	1036000	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1035971	1					
ANR	1036001	CastTarget	struct sljit_jump *		1035971	0					
ANR	1036002	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1035971	1					
ANR	1036003	Callee	ensure_abuf		1035971	0					
ANR	1036004	Identifier	ensure_abuf		1035971	0					
ANR	1036005	ArgumentList	compiler		1035971	1					
ANR	1036006	Argument	compiler		1035971	0					
ANR	1036007	Identifier	compiler		1035971	0					
ANR	1036008	Argument	sizeof ( struct sljit_jump )		1035971	1					
ANR	1036009	SizeofExpression	sizeof ( struct sljit_jump )		1035971	0					
ANR	1036010	Sizeof	sizeof		1035971	0					
ANR	1036011	SizeofOperand	struct sljit_jump		1035971	1					
ANR	1036012	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1888:1:58190:58208	1035971	4	True				
ANR	1036013	CallExpression	PTR_FAIL_IF ( ! jump )		1035971	0					
ANR	1036014	Callee	PTR_FAIL_IF		1035971	0					
ANR	1036015	Identifier	PTR_FAIL_IF		1035971	0					
ANR	1036016	ArgumentList	! jump		1035971	1					
ANR	1036017	Argument	! jump		1035971	0					
ANR	1036018	UnaryOperationExpression	! jump		1035971	0					
ANR	1036019	UnaryOperator	!		1035971	0					
ANR	1036020	Identifier	jump		1035971	1					
ANR	1036021	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1889:1:58211:58265	1035971	5	True				
ANR	1036022	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1035971	0					
ANR	1036023	Callee	set_jump		1035971	0					
ANR	1036024	Identifier	set_jump		1035971	0					
ANR	1036025	ArgumentList	jump		1035971	1					
ANR	1036026	Argument	jump		1035971	0					
ANR	1036027	Identifier	jump		1035971	0					
ANR	1036028	Argument	compiler		1035971	1					
ANR	1036029	Identifier	compiler		1035971	0					
ANR	1036030	Argument	type & SLJIT_REWRITABLE_JUMP		1035971	2					
ANR	1036031	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1035971	0		&			
ANR	1036032	Identifier	type		1035971	0					
ANR	1036033	Identifier	SLJIT_REWRITABLE_JUMP		1035971	1					
ANR	1036034	ExpressionStatement	type &= 0xff	1890:1:58268:58280	1035971	6	True				
ANR	1036035	AssignmentExpression	type &= 0xff		1035971	0		&=			
ANR	1036036	Identifier	type		1035971	0					
ANR	1036037	PrimaryExpression	0xff		1035971	1					
ANR	1036038	IfStatement	if ( type < SLJIT_JUMP )		1035971	7					
ANR	1036039	Condition	type < SLJIT_JUMP	1892:5:58288:58304	1035971	0	True				
ANR	1036040	RelationalExpression	type < SLJIT_JUMP		1035971	0		<			
ANR	1036041	Identifier	type		1035971	0					
ANR	1036042	Identifier	SLJIT_JUMP		1035971	1					
ANR	1036043	CompoundStatement		12:24:296:296	1035971	1					
ANR	1036044	ExpressionStatement	jump -> flags |= IS_COND	1893:2:58311:58333	1035971	0	True				
ANR	1036045	AssignmentExpression	jump -> flags |= IS_COND		1035971	0		|=			
ANR	1036046	PtrMemberAccess	jump -> flags		1035971	0					
ANR	1036047	Identifier	jump		1035971	0					
ANR	1036048	Identifier	flags		1035971	1					
ANR	1036049	Identifier	IS_COND		1035971	1					
ANR	1036050	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , B_CC | ( 6 << 5 ) | get_cc ( type ) ) )"	1894:2:58337:58401	1035971	1	True				
ANR	1036051	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , B_CC | ( 6 << 5 ) | get_cc ( type ) ) )"		1035971	0					
ANR	1036052	Callee	PTR_FAIL_IF		1035971	0					
ANR	1036053	Identifier	PTR_FAIL_IF		1035971	0					
ANR	1036054	ArgumentList	"push_inst ( compiler , B_CC | ( 6 << 5 ) | get_cc ( type ) )"		1035971	1					
ANR	1036055	Argument	"push_inst ( compiler , B_CC | ( 6 << 5 ) | get_cc ( type ) )"		1035971	0					
ANR	1036056	CallExpression	"push_inst ( compiler , B_CC | ( 6 << 5 ) | get_cc ( type ) )"		1035971	0					
ANR	1036057	Callee	push_inst		1035971	0					
ANR	1036058	Identifier	push_inst		1035971	0					
ANR	1036059	ArgumentList	compiler		1035971	1					
ANR	1036060	Argument	compiler		1035971	0					
ANR	1036061	Identifier	compiler		1035971	0					
ANR	1036062	Argument	B_CC | ( 6 << 5 ) | get_cc ( type )		1035971	1					
ANR	1036063	InclusiveOrExpression	B_CC | ( 6 << 5 ) | get_cc ( type )		1035971	0		|			
ANR	1036064	Identifier	B_CC		1035971	0					
ANR	1036065	InclusiveOrExpression	( 6 << 5 ) | get_cc ( type )		1035971	1		|			
ANR	1036066	ShiftExpression	6 << 5		1035971	0		<<			
ANR	1036067	PrimaryExpression	6		1035971	0					
ANR	1036068	PrimaryExpression	5		1035971	1					
ANR	1036069	CallExpression	get_cc ( type )		1035971	1					
ANR	1036070	Callee	get_cc		1035971	0					
ANR	1036071	Identifier	get_cc		1035971	0					
ANR	1036072	ArgumentList	type		1035971	1					
ANR	1036073	Argument	type		1035971	0					
ANR	1036074	Identifier	type		1035971	0					
ANR	1036075	ElseStatement	else		1035971	0					
ANR	1036076	IfStatement	if ( type >= SLJIT_FAST_CALL )		1035971	0					
ANR	1036077	Condition	type >= SLJIT_FAST_CALL	1896:10:58416:58438	1035971	0	True				
ANR	1036078	RelationalExpression	type >= SLJIT_FAST_CALL		1035971	0		>=			
ANR	1036079	Identifier	type		1035971	0					
ANR	1036080	Identifier	SLJIT_FAST_CALL		1035971	1					
ANR	1036081	ExpressionStatement	jump -> flags |= IS_BL	1897:2:58443:58463	1035971	1	True				
ANR	1036082	AssignmentExpression	jump -> flags |= IS_BL		1035971	0		|=			
ANR	1036083	PtrMemberAccess	jump -> flags		1035971	0					
ANR	1036084	Identifier	jump		1035971	0					
ANR	1036085	Identifier	flags		1035971	1					
ANR	1036086	Identifier	IS_BL		1035971	1					
ANR	1036087	ExpressionStatement	"PTR_FAIL_IF ( emit_imm64_const ( compiler , TMP_REG1 , 0 ) )"	1899:1:58467:58519	1035971	8	True				
ANR	1036088	CallExpression	"PTR_FAIL_IF ( emit_imm64_const ( compiler , TMP_REG1 , 0 ) )"		1035971	0					
ANR	1036089	Callee	PTR_FAIL_IF		1035971	0					
ANR	1036090	Identifier	PTR_FAIL_IF		1035971	0					
ANR	1036091	ArgumentList	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1035971	1					
ANR	1036092	Argument	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1035971	0					
ANR	1036093	CallExpression	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1035971	0					
ANR	1036094	Callee	emit_imm64_const		1035971	0					
ANR	1036095	Identifier	emit_imm64_const		1035971	0					
ANR	1036096	ArgumentList	compiler		1035971	1					
ANR	1036097	Argument	compiler		1035971	0					
ANR	1036098	Identifier	compiler		1035971	0					
ANR	1036099	Argument	TMP_REG1		1035971	1					
ANR	1036100	Identifier	TMP_REG1		1035971	0					
ANR	1036101	Argument	0		1035971	2					
ANR	1036102	PrimaryExpression	0		1035971	0					
ANR	1036103	ExpressionStatement	jump -> addr = compiler -> size	1900:1:58522:58549	1035971	9	True				
ANR	1036104	AssignmentExpression	jump -> addr = compiler -> size		1035971	0		=			
ANR	1036105	PtrMemberAccess	jump -> addr		1035971	0					
ANR	1036106	Identifier	jump		1035971	0					
ANR	1036107	Identifier	addr		1035971	1					
ANR	1036108	PtrMemberAccess	compiler -> size		1035971	1					
ANR	1036109	Identifier	compiler		1035971	0					
ANR	1036110	Identifier	size		1035971	1					
ANR	1036111	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 ) ) )"	1901:1:58552:58639	1035971	10	True				
ANR	1036112	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 ) ) )"		1035971	0					
ANR	1036113	Callee	PTR_FAIL_IF		1035971	0					
ANR	1036114	Identifier	PTR_FAIL_IF		1035971	0					
ANR	1036115	ArgumentList	"push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 ) )"		1035971	1					
ANR	1036116	Argument	"push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 ) )"		1035971	0					
ANR	1036117	CallExpression	"push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 ) )"		1035971	0					
ANR	1036118	Callee	push_inst		1035971	0					
ANR	1036119	Identifier	push_inst		1035971	0					
ANR	1036120	ArgumentList	compiler		1035971	1					
ANR	1036121	Argument	compiler		1035971	0					
ANR	1036122	Identifier	compiler		1035971	0					
ANR	1036123	Argument	( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 )		1035971	1					
ANR	1036124	InclusiveOrExpression	( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 )		1035971	0		|			
ANR	1036125	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? BLR : BR		1035971	0					
ANR	1036126	Condition	type >= SLJIT_FAST_CALL		1035971	0					
ANR	1036127	RelationalExpression	type >= SLJIT_FAST_CALL		1035971	0		>=			
ANR	1036128	Identifier	type		1035971	0					
ANR	1036129	Identifier	SLJIT_FAST_CALL		1035971	1					
ANR	1036130	Identifier	BLR		1035971	1					
ANR	1036131	Identifier	BR		1035971	2					
ANR	1036132	CallExpression	RN ( TMP_REG1 )		1035971	1					
ANR	1036133	Callee	RN		1035971	0					
ANR	1036134	Identifier	RN		1035971	0					
ANR	1036135	ArgumentList	TMP_REG1		1035971	1					
ANR	1036136	Argument	TMP_REG1		1035971	0					
ANR	1036137	Identifier	TMP_REG1		1035971	0					
ANR	1036138	ReturnStatement	return jump ;	1903:1:58643:58654	1035971	11	True				
ANR	1036139	Identifier	jump		1035971	0					
ANR	1036140	ReturnType	struct sljit_jump *		1035971	1					
ANR	1036141	Identifier	sljit_emit_jump		1035971	2					
ANR	1036142	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1035971	3					
ANR	1036143	Parameter	struct sljit_compiler * compiler	1880:60:57962:57992	1035971	0	True				
ANR	1036144	ParameterType	struct sljit_compiler *		1035971	0					
ANR	1036145	Identifier	compiler		1035971	1					
ANR	1036146	Parameter	sljit_si type	1880:93:57995:58007	1035971	1	True				
ANR	1036147	ParameterType	sljit_si		1035971	0					
ANR	1036148	Identifier	type		1035971	1					
ANR	1036149	CFGEntryNode	ENTRY		1035971		True				
ANR	1036150	CFGExitNode	EXIT		1035971		True				
ANR	1036151	Symbol	get_cc		1035971						
ANR	1036152	Symbol	push_inst		1035971						
ANR	1036153	Symbol	SLJIT_JUMP		1035971						
ANR	1036154	Symbol	B_CC		1035971						
ANR	1036155	Symbol	TMP_REG1		1035971						
ANR	1036156	Symbol	* jump		1035971						
ANR	1036157	Symbol	emit_imm64_const		1035971						
ANR	1036158	Symbol	jump -> flags		1035971						
ANR	1036159	Symbol	BLR		1035971						
ANR	1036160	Symbol	jump -> addr		1035971						
ANR	1036161	Symbol	ensure_abuf		1035971						
ANR	1036162	Symbol	* compiler		1035971						
ANR	1036163	Symbol	type		1035971						
ANR	1036164	Symbol	BR		1035971						
ANR	1036165	Symbol	compiler -> size		1035971						
ANR	1036166	Symbol	IS_COND		1035971						
ANR	1036167	Symbol	IS_BL		1035971						
ANR	1036168	Symbol	SLJIT_FAST_CALL		1035971						
ANR	1036169	Symbol	check_sljit_emit_jump		1035971						
ANR	1036170	Symbol	SLJIT_REWRITABLE_JUMP		1035971						
ANR	1036171	Symbol	compiler		1035971						
ANR	1036172	Symbol	RN		1035971						
ANR	1036173	Symbol	jump		1035971						
ANR	1036174	Function	emit_cmp_to0	1906:20:58679:59749							
ANR	1036175	FunctionDef	"emit_cmp_to0 (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1036174	0					
ANR	1036176	CompoundStatement		1908:0:58789:59749	1036174	0					
ANR	1036177	IdentifierDeclStatement	struct sljit_jump * jump ;	1909:1:58792:58815	1036174	0	True				
ANR	1036178	IdentifierDecl	* jump		1036174	0					
ANR	1036179	IdentifierDeclType	struct sljit_jump *		1036174	0					
ANR	1036180	Identifier	jump		1036174	1					
ANR	1036181	IdentifierDeclStatement	sljit_ins inv_bits = ( type & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0 ;	1910:1:58818:58876	1036174	1	True				
ANR	1036182	IdentifierDecl	inv_bits = ( type & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0		1036174	0					
ANR	1036183	IdentifierDeclType	sljit_ins		1036174	0					
ANR	1036184	Identifier	inv_bits		1036174	1					
ANR	1036185	AssignmentExpression	inv_bits = ( type & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0		1036174	2		=			
ANR	1036186	Identifier	inv_bits		1036174	0					
ANR	1036187	ConditionalExpression	( type & SLJIT_INT_OP ) ? ( 1 << 31 ) : 0		1036174	1					
ANR	1036188	Condition	type & SLJIT_INT_OP		1036174	0					
ANR	1036189	BitAndExpression	type & SLJIT_INT_OP		1036174	0		&			
ANR	1036190	Identifier	type		1036174	0					
ANR	1036191	Identifier	SLJIT_INT_OP		1036174	1					
ANR	1036192	ShiftExpression	1 << 31		1036174	1		<<			
ANR	1036193	PrimaryExpression	1		1036174	0					
ANR	1036194	PrimaryExpression	31		1036174	1					
ANR	1036195	PrimaryExpression	0		1036174	2					
ANR	1036196	ExpressionStatement	SLJIT_ASSERT ( ( type & 0xff ) == SLJIT_EQUAL || ( type & 0xff ) == SLJIT_NOT_EQUAL )	1912:1:58880:58958	1036174	2	True				
ANR	1036197	CallExpression	SLJIT_ASSERT ( ( type & 0xff ) == SLJIT_EQUAL || ( type & 0xff ) == SLJIT_NOT_EQUAL )		1036174	0					
ANR	1036198	Callee	SLJIT_ASSERT		1036174	0					
ANR	1036199	Identifier	SLJIT_ASSERT		1036174	0					
ANR	1036200	ArgumentList	( type & 0xff ) == SLJIT_EQUAL || ( type & 0xff ) == SLJIT_NOT_EQUAL		1036174	1					
ANR	1036201	Argument	( type & 0xff ) == SLJIT_EQUAL || ( type & 0xff ) == SLJIT_NOT_EQUAL		1036174	0					
ANR	1036202	OrExpression	( type & 0xff ) == SLJIT_EQUAL || ( type & 0xff ) == SLJIT_NOT_EQUAL		1036174	0		||			
ANR	1036203	EqualityExpression	( type & 0xff ) == SLJIT_EQUAL		1036174	0		==			
ANR	1036204	BitAndExpression	type & 0xff		1036174	0		&			
ANR	1036205	Identifier	type		1036174	0					
ANR	1036206	PrimaryExpression	0xff		1036174	1					
ANR	1036207	Identifier	SLJIT_EQUAL		1036174	1					
ANR	1036208	EqualityExpression	( type & 0xff ) == SLJIT_NOT_EQUAL		1036174	1		==			
ANR	1036209	BitAndExpression	type & 0xff		1036174	0		&			
ANR	1036210	Identifier	type		1036174	0					
ANR	1036211	PrimaryExpression	0xff		1036174	1					
ANR	1036212	Identifier	SLJIT_NOT_EQUAL		1036174	1					
ANR	1036213	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1913:1:58961:58991	1036174	3	True				
ANR	1036214	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1036174	0					
ANR	1036215	Callee	ADJUST_LOCAL_OFFSET		1036174	0					
ANR	1036216	Identifier	ADJUST_LOCAL_OFFSET		1036174	0					
ANR	1036217	ArgumentList	src		1036174	1					
ANR	1036218	Argument	src		1036174	0					
ANR	1036219	Identifier	src		1036174	0					
ANR	1036220	Argument	srcw		1036174	1					
ANR	1036221	Identifier	srcw		1036174	0					
ANR	1036222	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1915:1:58995:59070	1036174	4	True				
ANR	1036223	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1036174	0		=			
ANR	1036224	Identifier	jump		1036174	0					
ANR	1036225	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1036174	1					
ANR	1036226	CastTarget	struct sljit_jump *		1036174	0					
ANR	1036227	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1036174	1					
ANR	1036228	Callee	ensure_abuf		1036174	0					
ANR	1036229	Identifier	ensure_abuf		1036174	0					
ANR	1036230	ArgumentList	compiler		1036174	1					
ANR	1036231	Argument	compiler		1036174	0					
ANR	1036232	Identifier	compiler		1036174	0					
ANR	1036233	Argument	sizeof ( struct sljit_jump )		1036174	1					
ANR	1036234	SizeofExpression	sizeof ( struct sljit_jump )		1036174	0					
ANR	1036235	Sizeof	sizeof		1036174	0					
ANR	1036236	SizeofOperand	struct sljit_jump		1036174	1					
ANR	1036237	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1916:1:59073:59091	1036174	5	True				
ANR	1036238	CallExpression	PTR_FAIL_IF ( ! jump )		1036174	0					
ANR	1036239	Callee	PTR_FAIL_IF		1036174	0					
ANR	1036240	Identifier	PTR_FAIL_IF		1036174	0					
ANR	1036241	ArgumentList	! jump		1036174	1					
ANR	1036242	Argument	! jump		1036174	0					
ANR	1036243	UnaryOperationExpression	! jump		1036174	0					
ANR	1036244	UnaryOperator	!		1036174	0					
ANR	1036245	Identifier	jump		1036174	1					
ANR	1036246	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1917:1:59094:59148	1036174	6	True				
ANR	1036247	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1036174	0					
ANR	1036248	Callee	set_jump		1036174	0					
ANR	1036249	Identifier	set_jump		1036174	0					
ANR	1036250	ArgumentList	jump		1036174	1					
ANR	1036251	Argument	jump		1036174	0					
ANR	1036252	Identifier	jump		1036174	0					
ANR	1036253	Argument	compiler		1036174	1					
ANR	1036254	Identifier	compiler		1036174	0					
ANR	1036255	Argument	type & SLJIT_REWRITABLE_JUMP		1036174	2					
ANR	1036256	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1036174	0		&			
ANR	1036257	Identifier	type		1036174	0					
ANR	1036258	Identifier	SLJIT_REWRITABLE_JUMP		1036174	1					
ANR	1036259	ExpressionStatement	jump -> flags |= IS_CBZ | IS_COND	1918:1:59151:59182	1036174	7	True				
ANR	1036260	AssignmentExpression	jump -> flags |= IS_CBZ | IS_COND		1036174	0		|=			
ANR	1036261	PtrMemberAccess	jump -> flags		1036174	0					
ANR	1036262	Identifier	jump		1036174	0					
ANR	1036263	Identifier	flags		1036174	1					
ANR	1036264	InclusiveOrExpression	IS_CBZ | IS_COND		1036174	1		|			
ANR	1036265	Identifier	IS_CBZ		1036174	0					
ANR	1036266	Identifier	IS_COND		1036174	1					
ANR	1036267	IfStatement	if ( src & SLJIT_MEM )		1036174	8					
ANR	1036268	Condition	src & SLJIT_MEM	1920:5:59190:59204	1036174	0	True				
ANR	1036269	BitAndExpression	src & SLJIT_MEM		1036174	0		&			
ANR	1036270	Identifier	src		1036174	0					
ANR	1036271	Identifier	SLJIT_MEM		1036174	1					
ANR	1036272	CompoundStatement		13:22:417:417	1036174	1					
ANR	1036273	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem ( compiler , inv_bits ? INT_SIZE : WORD_SIZE , TMP_REG1 , src , srcw ) )"	1921:2:59211:59299	1036174	0	True				
ANR	1036274	CallExpression	"PTR_FAIL_IF ( emit_op_mem ( compiler , inv_bits ? INT_SIZE : WORD_SIZE , TMP_REG1 , src , srcw ) )"		1036174	0					
ANR	1036275	Callee	PTR_FAIL_IF		1036174	0					
ANR	1036276	Identifier	PTR_FAIL_IF		1036174	0					
ANR	1036277	ArgumentList	"emit_op_mem ( compiler , inv_bits ? INT_SIZE : WORD_SIZE , TMP_REG1 , src , srcw )"		1036174	1					
ANR	1036278	Argument	"emit_op_mem ( compiler , inv_bits ? INT_SIZE : WORD_SIZE , TMP_REG1 , src , srcw )"		1036174	0					
ANR	1036279	CallExpression	"emit_op_mem ( compiler , inv_bits ? INT_SIZE : WORD_SIZE , TMP_REG1 , src , srcw )"		1036174	0					
ANR	1036280	Callee	emit_op_mem		1036174	0					
ANR	1036281	Identifier	emit_op_mem		1036174	0					
ANR	1036282	ArgumentList	compiler		1036174	1					
ANR	1036283	Argument	compiler		1036174	0					
ANR	1036284	Identifier	compiler		1036174	0					
ANR	1036285	Argument	inv_bits ? INT_SIZE : WORD_SIZE		1036174	1					
ANR	1036286	ConditionalExpression	inv_bits ? INT_SIZE : WORD_SIZE		1036174	0					
ANR	1036287	Condition	inv_bits		1036174	0					
ANR	1036288	Identifier	inv_bits		1036174	0					
ANR	1036289	Identifier	INT_SIZE		1036174	1					
ANR	1036290	Identifier	WORD_SIZE		1036174	2					
ANR	1036291	Argument	TMP_REG1		1036174	2					
ANR	1036292	Identifier	TMP_REG1		1036174	0					
ANR	1036293	Argument	src		1036174	3					
ANR	1036294	Identifier	src		1036174	0					
ANR	1036295	Argument	srcw		1036174	4					
ANR	1036296	Identifier	srcw		1036174	0					
ANR	1036297	ExpressionStatement	src = TMP_REG1	1922:2:59303:59317	1036174	1	True				
ANR	1036298	AssignmentExpression	src = TMP_REG1		1036174	0		=			
ANR	1036299	Identifier	src		1036174	0					
ANR	1036300	Identifier	TMP_REG1		1036174	1					
ANR	1036301	ElseStatement	else		1036174	0					
ANR	1036302	IfStatement	if ( src & SLJIT_IMM )		1036174	0					
ANR	1036303	Condition	src & SLJIT_IMM	1924:10:59332:59346	1036174	0	True				
ANR	1036304	BitAndExpression	src & SLJIT_IMM		1036174	0		&			
ANR	1036305	Identifier	src		1036174	0					
ANR	1036306	Identifier	SLJIT_IMM		1036174	1					
ANR	1036307	CompoundStatement		17:27:559:559	1036174	1					
ANR	1036308	ExpressionStatement	"PTR_FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	1925:2:59353:59406	1036174	0	True				
ANR	1036309	CallExpression	"PTR_FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1036174	0					
ANR	1036310	Callee	PTR_FAIL_IF		1036174	0					
ANR	1036311	Identifier	PTR_FAIL_IF		1036174	0					
ANR	1036312	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1036174	1					
ANR	1036313	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1036174	0					
ANR	1036314	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1036174	0					
ANR	1036315	Callee	load_immediate		1036174	0					
ANR	1036316	Identifier	load_immediate		1036174	0					
ANR	1036317	ArgumentList	compiler		1036174	1					
ANR	1036318	Argument	compiler		1036174	0					
ANR	1036319	Identifier	compiler		1036174	0					
ANR	1036320	Argument	TMP_REG1		1036174	1					
ANR	1036321	Identifier	TMP_REG1		1036174	0					
ANR	1036322	Argument	srcw		1036174	2					
ANR	1036323	Identifier	srcw		1036174	0					
ANR	1036324	ExpressionStatement	src = TMP_REG1	1926:2:59410:59424	1036174	1	True				
ANR	1036325	AssignmentExpression	src = TMP_REG1		1036174	0		=			
ANR	1036326	Identifier	src		1036174	0					
ANR	1036327	Identifier	TMP_REG1		1036174	1					
ANR	1036328	ExpressionStatement	SLJIT_ASSERT ( FAST_IS_REG ( src ) )	1928:1:59430:59460	1036174	9	True				
ANR	1036329	CallExpression	SLJIT_ASSERT ( FAST_IS_REG ( src ) )		1036174	0					
ANR	1036330	Callee	SLJIT_ASSERT		1036174	0					
ANR	1036331	Identifier	SLJIT_ASSERT		1036174	0					
ANR	1036332	ArgumentList	FAST_IS_REG ( src )		1036174	1					
ANR	1036333	Argument	FAST_IS_REG ( src )		1036174	0					
ANR	1036334	CallExpression	FAST_IS_REG ( src )		1036174	0					
ANR	1036335	Callee	FAST_IS_REG		1036174	0					
ANR	1036336	Identifier	FAST_IS_REG		1036174	0					
ANR	1036337	ArgumentList	src		1036174	1					
ANR	1036338	Argument	src		1036174	0					
ANR	1036339	Identifier	src		1036174	0					
ANR	1036340	IfStatement	if ( ( type & 0xff ) == SLJIT_EQUAL )		1036174	10					
ANR	1036341	Condition	( type & 0xff ) == SLJIT_EQUAL	1930:5:59468:59495	1036174	0	True				
ANR	1036342	EqualityExpression	( type & 0xff ) == SLJIT_EQUAL		1036174	0		==			
ANR	1036343	BitAndExpression	type & 0xff		1036174	0		&			
ANR	1036344	Identifier	type		1036174	0					
ANR	1036345	PrimaryExpression	0xff		1036174	1					
ANR	1036346	Identifier	SLJIT_EQUAL		1036174	1					
ANR	1036347	ExpressionStatement	inv_bits |= 1 << 24	1931:2:59500:59519	1036174	1	True				
ANR	1036348	AssignmentExpression	inv_bits |= 1 << 24		1036174	0		|=			
ANR	1036349	Identifier	inv_bits		1036174	0					
ANR	1036350	ShiftExpression	1 << 24		1036174	1		<<			
ANR	1036351	PrimaryExpression	1		1036174	0					
ANR	1036352	PrimaryExpression	24		1036174	1					
ANR	1036353	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( CBZ ^ inv_bits ) | ( 6 << 5 ) | RT ( src ) ) )"	1933:1:59523:59594	1036174	11	True				
ANR	1036354	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( CBZ ^ inv_bits ) | ( 6 << 5 ) | RT ( src ) ) )"		1036174	0					
ANR	1036355	Callee	PTR_FAIL_IF		1036174	0					
ANR	1036356	Identifier	PTR_FAIL_IF		1036174	0					
ANR	1036357	ArgumentList	"push_inst ( compiler , ( CBZ ^ inv_bits ) | ( 6 << 5 ) | RT ( src ) )"		1036174	1					
ANR	1036358	Argument	"push_inst ( compiler , ( CBZ ^ inv_bits ) | ( 6 << 5 ) | RT ( src ) )"		1036174	0					
ANR	1036359	CallExpression	"push_inst ( compiler , ( CBZ ^ inv_bits ) | ( 6 << 5 ) | RT ( src ) )"		1036174	0					
ANR	1036360	Callee	push_inst		1036174	0					
ANR	1036361	Identifier	push_inst		1036174	0					
ANR	1036362	ArgumentList	compiler		1036174	1					
ANR	1036363	Argument	compiler		1036174	0					
ANR	1036364	Identifier	compiler		1036174	0					
ANR	1036365	Argument	( CBZ ^ inv_bits ) | ( 6 << 5 ) | RT ( src )		1036174	1					
ANR	1036366	InclusiveOrExpression	( CBZ ^ inv_bits ) | ( 6 << 5 ) | RT ( src )		1036174	0		|			
ANR	1036367	ExclusiveOrExpression	CBZ ^ inv_bits		1036174	0		^			
ANR	1036368	Identifier	CBZ		1036174	0					
ANR	1036369	Identifier	inv_bits		1036174	1					
ANR	1036370	InclusiveOrExpression	( 6 << 5 ) | RT ( src )		1036174	1		|			
ANR	1036371	ShiftExpression	6 << 5		1036174	0		<<			
ANR	1036372	PrimaryExpression	6		1036174	0					
ANR	1036373	PrimaryExpression	5		1036174	1					
ANR	1036374	CallExpression	RT ( src )		1036174	1					
ANR	1036375	Callee	RT		1036174	0					
ANR	1036376	Identifier	RT		1036174	0					
ANR	1036377	ArgumentList	src		1036174	1					
ANR	1036378	Argument	src		1036174	0					
ANR	1036379	Identifier	src		1036174	0					
ANR	1036380	ExpressionStatement	"PTR_FAIL_IF ( emit_imm64_const ( compiler , TMP_REG1 , 0 ) )"	1934:1:59597:59649	1036174	12	True				
ANR	1036381	CallExpression	"PTR_FAIL_IF ( emit_imm64_const ( compiler , TMP_REG1 , 0 ) )"		1036174	0					
ANR	1036382	Callee	PTR_FAIL_IF		1036174	0					
ANR	1036383	Identifier	PTR_FAIL_IF		1036174	0					
ANR	1036384	ArgumentList	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1036174	1					
ANR	1036385	Argument	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1036174	0					
ANR	1036386	CallExpression	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1036174	0					
ANR	1036387	Callee	emit_imm64_const		1036174	0					
ANR	1036388	Identifier	emit_imm64_const		1036174	0					
ANR	1036389	ArgumentList	compiler		1036174	1					
ANR	1036390	Argument	compiler		1036174	0					
ANR	1036391	Identifier	compiler		1036174	0					
ANR	1036392	Argument	TMP_REG1		1036174	1					
ANR	1036393	Identifier	TMP_REG1		1036174	0					
ANR	1036394	Argument	0		1036174	2					
ANR	1036395	PrimaryExpression	0		1036174	0					
ANR	1036396	ExpressionStatement	jump -> addr = compiler -> size	1935:1:59652:59679	1036174	13	True				
ANR	1036397	AssignmentExpression	jump -> addr = compiler -> size		1036174	0		=			
ANR	1036398	PtrMemberAccess	jump -> addr		1036174	0					
ANR	1036399	Identifier	jump		1036174	0					
ANR	1036400	Identifier	addr		1036174	1					
ANR	1036401	PtrMemberAccess	compiler -> size		1036174	1					
ANR	1036402	Identifier	compiler		1036174	0					
ANR	1036403	Identifier	size		1036174	1					
ANR	1036404	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , BR | RN ( TMP_REG1 ) ) )"	1936:1:59682:59733	1036174	14	True				
ANR	1036405	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , BR | RN ( TMP_REG1 ) ) )"		1036174	0					
ANR	1036406	Callee	PTR_FAIL_IF		1036174	0					
ANR	1036407	Identifier	PTR_FAIL_IF		1036174	0					
ANR	1036408	ArgumentList	"push_inst ( compiler , BR | RN ( TMP_REG1 ) )"		1036174	1					
ANR	1036409	Argument	"push_inst ( compiler , BR | RN ( TMP_REG1 ) )"		1036174	0					
ANR	1036410	CallExpression	"push_inst ( compiler , BR | RN ( TMP_REG1 ) )"		1036174	0					
ANR	1036411	Callee	push_inst		1036174	0					
ANR	1036412	Identifier	push_inst		1036174	0					
ANR	1036413	ArgumentList	compiler		1036174	1					
ANR	1036414	Argument	compiler		1036174	0					
ANR	1036415	Identifier	compiler		1036174	0					
ANR	1036416	Argument	BR | RN ( TMP_REG1 )		1036174	1					
ANR	1036417	InclusiveOrExpression	BR | RN ( TMP_REG1 )		1036174	0		|			
ANR	1036418	Identifier	BR		1036174	0					
ANR	1036419	CallExpression	RN ( TMP_REG1 )		1036174	1					
ANR	1036420	Callee	RN		1036174	0					
ANR	1036421	Identifier	RN		1036174	0					
ANR	1036422	ArgumentList	TMP_REG1		1036174	1					
ANR	1036423	Argument	TMP_REG1		1036174	0					
ANR	1036424	Identifier	TMP_REG1		1036174	0					
ANR	1036425	ReturnStatement	return jump ;	1937:1:59736:59747	1036174	15	True				
ANR	1036426	Identifier	jump		1036174	0					
ANR	1036427	ReturnType	struct sljit_jump *		1036174	1					
ANR	1036428	Identifier	emit_cmp_to0		1036174	2					
ANR	1036429	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1036174	3					
ANR	1036430	Parameter	struct sljit_compiler * compiler	1906:52:58711:58741	1036174	0	True				
ANR	1036431	ParameterType	struct sljit_compiler *		1036174	0					
ANR	1036432	Identifier	compiler		1036174	1					
ANR	1036433	Parameter	sljit_si type	1906:85:58744:58756	1036174	1	True				
ANR	1036434	ParameterType	sljit_si		1036174	0					
ANR	1036435	Identifier	type		1036174	1					
ANR	1036436	Parameter	sljit_si src	1907:1:58760:58771	1036174	2	True				
ANR	1036437	ParameterType	sljit_si		1036174	0					
ANR	1036438	Identifier	src		1036174	1					
ANR	1036439	Parameter	sljit_sw srcw	1907:15:58774:58786	1036174	3	True				
ANR	1036440	ParameterType	sljit_sw		1036174	0					
ANR	1036441	Identifier	srcw		1036174	1					
ANR	1036442	CFGEntryNode	ENTRY		1036174		True				
ANR	1036443	CFGExitNode	EXIT		1036174		True				
ANR	1036444	Symbol	TMP_REG1		1036174						
ANR	1036445	Symbol	RT		1036174						
ANR	1036446	Symbol	* jump		1036174						
ANR	1036447	Symbol	SLJIT_MEM		1036174						
ANR	1036448	Symbol	emit_imm64_const		1036174						
ANR	1036449	Symbol	jump -> flags		1036174						
ANR	1036450	Symbol	IS_CBZ		1036174						
ANR	1036451	Symbol	* compiler		1036174						
ANR	1036452	Symbol	type		1036174						
ANR	1036453	Symbol	BR		1036174						
ANR	1036454	Symbol	SLJIT_IMM		1036174						
ANR	1036455	Symbol	load_immediate		1036174						
ANR	1036456	Symbol	inv_bits		1036174						
ANR	1036457	Symbol	SLJIT_EQUAL		1036174						
ANR	1036458	Symbol	CBZ		1036174						
ANR	1036459	Symbol	SLJIT_REWRITABLE_JUMP		1036174						
ANR	1036460	Symbol	compiler		1036174						
ANR	1036461	Symbol	jump		1036174						
ANR	1036462	Symbol	push_inst		1036174						
ANR	1036463	Symbol	FAST_IS_REG		1036174						
ANR	1036464	Symbol	src		1036174						
ANR	1036465	Symbol	INT_SIZE		1036174						
ANR	1036466	Symbol	srcw		1036174						
ANR	1036467	Symbol	SLJIT_INT_OP		1036174						
ANR	1036468	Symbol	emit_op_mem		1036174						
ANR	1036469	Symbol	jump -> addr		1036174						
ANR	1036470	Symbol	ensure_abuf		1036174						
ANR	1036471	Symbol	compiler -> size		1036174						
ANR	1036472	Symbol	IS_COND		1036174						
ANR	1036473	Symbol	SLJIT_NOT_EQUAL		1036174						
ANR	1036474	Symbol	RN		1036174						
ANR	1036475	Symbol	WORD_SIZE		1036174						
ANR	1036476	Function	sljit_emit_ijump	1940:0:59752:60662							
ANR	1036477	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1036476	0					
ANR	1036478	CompoundStatement		1941:0:59880:60662	1036476	0					
ANR	1036479	IdentifierDeclStatement	struct sljit_jump * jump ;	1942:1:59883:59906	1036476	0	True				
ANR	1036480	IdentifierDecl	* jump		1036476	0					
ANR	1036481	IdentifierDeclType	struct sljit_jump *		1036476	0					
ANR	1036482	Identifier	jump		1036476	1					
ANR	1036483	ExpressionStatement	CHECK_ERROR ( )	1944:1:59910:59923	1036476	1	True				
ANR	1036484	CallExpression	CHECK_ERROR ( )		1036476	0					
ANR	1036485	Callee	CHECK_ERROR		1036476	0					
ANR	1036486	Identifier	CHECK_ERROR		1036476	0					
ANR	1036487	ArgumentList			1036476	1					
ANR	1036488	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	1945:1:59926:59982	1036476	2	True				
ANR	1036489	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1036476	0					
ANR	1036490	Callee	CHECK		1036476	0					
ANR	1036491	Identifier	CHECK		1036476	0					
ANR	1036492	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1036476	1					
ANR	1036493	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1036476	0					
ANR	1036494	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1036476	0					
ANR	1036495	Callee	check_sljit_emit_ijump		1036476	0					
ANR	1036496	Identifier	check_sljit_emit_ijump		1036476	0					
ANR	1036497	ArgumentList	compiler		1036476	1					
ANR	1036498	Argument	compiler		1036476	0					
ANR	1036499	Identifier	compiler		1036476	0					
ANR	1036500	Argument	type		1036476	1					
ANR	1036501	Identifier	type		1036476	0					
ANR	1036502	Argument	src		1036476	2					
ANR	1036503	Identifier	src		1036476	0					
ANR	1036504	Argument	srcw		1036476	3					
ANR	1036505	Identifier	srcw		1036476	0					
ANR	1036506	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1946:1:59985:60015	1036476	3	True				
ANR	1036507	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1036476	0					
ANR	1036508	Callee	ADJUST_LOCAL_OFFSET		1036476	0					
ANR	1036509	Identifier	ADJUST_LOCAL_OFFSET		1036476	0					
ANR	1036510	ArgumentList	src		1036476	1					
ANR	1036511	Argument	src		1036476	0					
ANR	1036512	Identifier	src		1036476	0					
ANR	1036513	Argument	srcw		1036476	1					
ANR	1036514	Identifier	srcw		1036476	0					
ANR	1036515	IfStatement	if ( ! ( src & SLJIT_IMM ) )		1036476	4					
ANR	1036516	Condition	! ( src & SLJIT_IMM )	1949:5:60076:60093	1036476	0	True				
ANR	1036517	UnaryOperationExpression	! ( src & SLJIT_IMM )		1036476	0					
ANR	1036518	UnaryOperator	!		1036476	0					
ANR	1036519	BitAndExpression	src & SLJIT_IMM		1036476	1		&			
ANR	1036520	Identifier	src		1036476	0					
ANR	1036521	Identifier	SLJIT_IMM		1036476	1					
ANR	1036522	CompoundStatement		9:25:215:215	1036476	1					
ANR	1036523	IfStatement	if ( src & SLJIT_MEM )		1036476	0					
ANR	1036524	Condition	src & SLJIT_MEM	1950:6:60104:60118	1036476	0	True				
ANR	1036525	BitAndExpression	src & SLJIT_MEM		1036476	0		&			
ANR	1036526	Identifier	src		1036476	0					
ANR	1036527	Identifier	SLJIT_MEM		1036476	1					
ANR	1036528	CompoundStatement		10:23:240:240	1036476	1					
ANR	1036529	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , TMP_REG1 , src , srcw ) )"	1951:3:60126:60188	1036476	0	True				
ANR	1036530	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , TMP_REG1 , src , srcw ) )"		1036476	0					
ANR	1036531	Callee	FAIL_IF		1036476	0					
ANR	1036532	Identifier	FAIL_IF		1036476	0					
ANR	1036533	ArgumentList	"emit_op_mem ( compiler , WORD_SIZE , TMP_REG1 , src , srcw )"		1036476	1					
ANR	1036534	Argument	"emit_op_mem ( compiler , WORD_SIZE , TMP_REG1 , src , srcw )"		1036476	0					
ANR	1036535	CallExpression	"emit_op_mem ( compiler , WORD_SIZE , TMP_REG1 , src , srcw )"		1036476	0					
ANR	1036536	Callee	emit_op_mem		1036476	0					
ANR	1036537	Identifier	emit_op_mem		1036476	0					
ANR	1036538	ArgumentList	compiler		1036476	1					
ANR	1036539	Argument	compiler		1036476	0					
ANR	1036540	Identifier	compiler		1036476	0					
ANR	1036541	Argument	WORD_SIZE		1036476	1					
ANR	1036542	Identifier	WORD_SIZE		1036476	0					
ANR	1036543	Argument	TMP_REG1		1036476	2					
ANR	1036544	Identifier	TMP_REG1		1036476	0					
ANR	1036545	Argument	src		1036476	3					
ANR	1036546	Identifier	src		1036476	0					
ANR	1036547	Argument	srcw		1036476	4					
ANR	1036548	Identifier	srcw		1036476	0					
ANR	1036549	ExpressionStatement	src = TMP_REG1	1952:3:60193:60207	1036476	1	True				
ANR	1036550	AssignmentExpression	src = TMP_REG1		1036476	0		=			
ANR	1036551	Identifier	src		1036476	0					
ANR	1036552	Identifier	TMP_REG1		1036476	1					
ANR	1036553	ReturnStatement	"return push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( src ) ) ;"	1954:2:60215:60291	1036476	1	True				
ANR	1036554	CallExpression	"push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( src ) )"		1036476	0					
ANR	1036555	Callee	push_inst		1036476	0					
ANR	1036556	Identifier	push_inst		1036476	0					
ANR	1036557	ArgumentList	compiler		1036476	1					
ANR	1036558	Argument	compiler		1036476	0					
ANR	1036559	Identifier	compiler		1036476	0					
ANR	1036560	Argument	( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( src )		1036476	1					
ANR	1036561	InclusiveOrExpression	( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( src )		1036476	0		|			
ANR	1036562	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? BLR : BR		1036476	0					
ANR	1036563	Condition	type >= SLJIT_FAST_CALL		1036476	0					
ANR	1036564	RelationalExpression	type >= SLJIT_FAST_CALL		1036476	0		>=			
ANR	1036565	Identifier	type		1036476	0					
ANR	1036566	Identifier	SLJIT_FAST_CALL		1036476	1					
ANR	1036567	Identifier	BLR		1036476	1					
ANR	1036568	Identifier	BR		1036476	2					
ANR	1036569	CallExpression	RN ( src )		1036476	1					
ANR	1036570	Callee	RN		1036476	0					
ANR	1036571	Identifier	RN		1036476	0					
ANR	1036572	ArgumentList	src		1036476	1					
ANR	1036573	Argument	src		1036476	0					
ANR	1036574	Identifier	src		1036476	0					
ANR	1036575	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1957:1:60298:60373	1036476	5	True				
ANR	1036576	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1036476	0		=			
ANR	1036577	Identifier	jump		1036476	0					
ANR	1036578	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1036476	1					
ANR	1036579	CastTarget	struct sljit_jump *		1036476	0					
ANR	1036580	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1036476	1					
ANR	1036581	Callee	ensure_abuf		1036476	0					
ANR	1036582	Identifier	ensure_abuf		1036476	0					
ANR	1036583	ArgumentList	compiler		1036476	1					
ANR	1036584	Argument	compiler		1036476	0					
ANR	1036585	Identifier	compiler		1036476	0					
ANR	1036586	Argument	sizeof ( struct sljit_jump )		1036476	1					
ANR	1036587	SizeofExpression	sizeof ( struct sljit_jump )		1036476	0					
ANR	1036588	Sizeof	sizeof		1036476	0					
ANR	1036589	SizeofOperand	struct sljit_jump		1036476	1					
ANR	1036590	ExpressionStatement	FAIL_IF ( ! jump )	1958:1:60376:60390	1036476	6	True				
ANR	1036591	CallExpression	FAIL_IF ( ! jump )		1036476	0					
ANR	1036592	Callee	FAIL_IF		1036476	0					
ANR	1036593	Identifier	FAIL_IF		1036476	0					
ANR	1036594	ArgumentList	! jump		1036476	1					
ANR	1036595	Argument	! jump		1036476	0					
ANR	1036596	UnaryOperationExpression	! jump		1036476	0					
ANR	1036597	UnaryOperator	!		1036476	0					
ANR	1036598	Identifier	jump		1036476	1					
ANR	1036599	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"	1959:1:60393:60470	1036476	7	True				
ANR	1036600	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"		1036476	0					
ANR	1036601	Callee	set_jump		1036476	0					
ANR	1036602	Identifier	set_jump		1036476	0					
ANR	1036603	ArgumentList	jump		1036476	1					
ANR	1036604	Argument	jump		1036476	0					
ANR	1036605	Identifier	jump		1036476	0					
ANR	1036606	Argument	compiler		1036476	1					
ANR	1036607	Identifier	compiler		1036476	0					
ANR	1036608	Argument	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1036476	2					
ANR	1036609	InclusiveOrExpression	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1036476	0		|			
ANR	1036610	Identifier	JUMP_ADDR		1036476	0					
ANR	1036611	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? IS_BL : 0		1036476	1					
ANR	1036612	Condition	type >= SLJIT_FAST_CALL		1036476	0					
ANR	1036613	RelationalExpression	type >= SLJIT_FAST_CALL		1036476	0		>=			
ANR	1036614	Identifier	type		1036476	0					
ANR	1036615	Identifier	SLJIT_FAST_CALL		1036476	1					
ANR	1036616	Identifier	IS_BL		1036476	1					
ANR	1036617	PrimaryExpression	0		1036476	2					
ANR	1036618	ExpressionStatement	jump -> u . target = srcw	1960:1:60473:60494	1036476	8	True				
ANR	1036619	AssignmentExpression	jump -> u . target = srcw		1036476	0		=			
ANR	1036620	MemberAccess	jump -> u . target		1036476	0					
ANR	1036621	PtrMemberAccess	jump -> u		1036476	0					
ANR	1036622	Identifier	jump		1036476	0					
ANR	1036623	Identifier	u		1036476	1					
ANR	1036624	Identifier	target		1036476	1					
ANR	1036625	Identifier	srcw		1036476	1					
ANR	1036626	ExpressionStatement	"FAIL_IF ( emit_imm64_const ( compiler , TMP_REG1 , 0 ) )"	1962:1:60498:60546	1036476	9	True				
ANR	1036627	CallExpression	"FAIL_IF ( emit_imm64_const ( compiler , TMP_REG1 , 0 ) )"		1036476	0					
ANR	1036628	Callee	FAIL_IF		1036476	0					
ANR	1036629	Identifier	FAIL_IF		1036476	0					
ANR	1036630	ArgumentList	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1036476	1					
ANR	1036631	Argument	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1036476	0					
ANR	1036632	CallExpression	"emit_imm64_const ( compiler , TMP_REG1 , 0 )"		1036476	0					
ANR	1036633	Callee	emit_imm64_const		1036476	0					
ANR	1036634	Identifier	emit_imm64_const		1036476	0					
ANR	1036635	ArgumentList	compiler		1036476	1					
ANR	1036636	Argument	compiler		1036476	0					
ANR	1036637	Identifier	compiler		1036476	0					
ANR	1036638	Argument	TMP_REG1		1036476	1					
ANR	1036639	Identifier	TMP_REG1		1036476	0					
ANR	1036640	Argument	0		1036476	2					
ANR	1036641	PrimaryExpression	0		1036476	0					
ANR	1036642	ExpressionStatement	jump -> addr = compiler -> size	1963:1:60549:60576	1036476	10	True				
ANR	1036643	AssignmentExpression	jump -> addr = compiler -> size		1036476	0		=			
ANR	1036644	PtrMemberAccess	jump -> addr		1036476	0					
ANR	1036645	Identifier	jump		1036476	0					
ANR	1036646	Identifier	addr		1036476	1					
ANR	1036647	PtrMemberAccess	compiler -> size		1036476	1					
ANR	1036648	Identifier	compiler		1036476	0					
ANR	1036649	Identifier	size		1036476	1					
ANR	1036650	ReturnStatement	"return push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 ) ) ;"	1964:1:60579:60660	1036476	11	True				
ANR	1036651	CallExpression	"push_inst ( compiler , ( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 ) )"		1036476	0					
ANR	1036652	Callee	push_inst		1036476	0					
ANR	1036653	Identifier	push_inst		1036476	0					
ANR	1036654	ArgumentList	compiler		1036476	1					
ANR	1036655	Argument	compiler		1036476	0					
ANR	1036656	Identifier	compiler		1036476	0					
ANR	1036657	Argument	( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 )		1036476	1					
ANR	1036658	InclusiveOrExpression	( ( type >= SLJIT_FAST_CALL ) ? BLR : BR ) | RN ( TMP_REG1 )		1036476	0		|			
ANR	1036659	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? BLR : BR		1036476	0					
ANR	1036660	Condition	type >= SLJIT_FAST_CALL		1036476	0					
ANR	1036661	RelationalExpression	type >= SLJIT_FAST_CALL		1036476	0		>=			
ANR	1036662	Identifier	type		1036476	0					
ANR	1036663	Identifier	SLJIT_FAST_CALL		1036476	1					
ANR	1036664	Identifier	BLR		1036476	1					
ANR	1036665	Identifier	BR		1036476	2					
ANR	1036666	CallExpression	RN ( TMP_REG1 )		1036476	1					
ANR	1036667	Callee	RN		1036476	0					
ANR	1036668	Identifier	RN		1036476	0					
ANR	1036669	ArgumentList	TMP_REG1		1036476	1					
ANR	1036670	Argument	TMP_REG1		1036476	0					
ANR	1036671	Identifier	TMP_REG1		1036476	0					
ANR	1036672	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1036476	1					
ANR	1036673	Identifier	sljit_emit_ijump		1036476	2					
ANR	1036674	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1036476	3					
ANR	1036675	Parameter	struct sljit_compiler * compiler	1940:51:59803:59833	1036476	0	True				
ANR	1036676	ParameterType	struct sljit_compiler *		1036476	0					
ANR	1036677	Identifier	compiler		1036476	1					
ANR	1036678	Parameter	sljit_si type	1940:84:59836:59848	1036476	1	True				
ANR	1036679	ParameterType	sljit_si		1036476	0					
ANR	1036680	Identifier	type		1036476	1					
ANR	1036681	Parameter	sljit_si src	1940:99:59851:59862	1036476	2	True				
ANR	1036682	ParameterType	sljit_si		1036476	0					
ANR	1036683	Identifier	src		1036476	1					
ANR	1036684	Parameter	sljit_sw srcw	1940:113:59865:59877	1036476	3	True				
ANR	1036685	ParameterType	sljit_sw		1036476	0					
ANR	1036686	Identifier	srcw		1036476	1					
ANR	1036687	CFGEntryNode	ENTRY		1036476		True				
ANR	1036688	CFGExitNode	EXIT		1036476		True				
ANR	1036689	Symbol	check_sljit_emit_ijump		1036476						
ANR	1036690	Symbol	TMP_REG1		1036476						
ANR	1036691	Symbol	* jump		1036476						
ANR	1036692	Symbol	jump -> u		1036476						
ANR	1036693	Symbol	SLJIT_MEM		1036476						
ANR	1036694	Symbol	emit_imm64_const		1036476						
ANR	1036695	Symbol	BLR		1036476						
ANR	1036696	Symbol	JUMP_ADDR		1036476						
ANR	1036697	Symbol	* compiler		1036476						
ANR	1036698	Symbol	type		1036476						
ANR	1036699	Symbol	BR		1036476						
ANR	1036700	Symbol	SLJIT_IMM		1036476						
ANR	1036701	Symbol	IS_BL		1036476						
ANR	1036702	Symbol	SLJIT_FAST_CALL		1036476						
ANR	1036703	Symbol	compiler		1036476						
ANR	1036704	Symbol	jump		1036476						
ANR	1036705	Symbol	push_inst		1036476						
ANR	1036706	Symbol	src		1036476						
ANR	1036707	Symbol	srcw		1036476						
ANR	1036708	Symbol	emit_op_mem		1036476						
ANR	1036709	Symbol	jump -> addr		1036476						
ANR	1036710	Symbol	ensure_abuf		1036476						
ANR	1036711	Symbol	compiler -> size		1036476						
ANR	1036712	Symbol	jump -> u . target		1036476						
ANR	1036713	Symbol	RN		1036476						
ANR	1036714	Symbol	WORD_SIZE		1036476						
ANR	1036715	Function	sljit_emit_op_flags	1967:0:60665:62141							
ANR	1036716	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1036715	0					
ANR	1036717	CompoundStatement		1971:0:60841:62141	1036715	0					
ANR	1036718	IdentifierDeclStatement	"sljit_si dst_r , flags , mem_flags ;"	1972:1:60844:60876	1036715	0	True				
ANR	1036719	IdentifierDecl	dst_r		1036715	0					
ANR	1036720	IdentifierDeclType	sljit_si		1036715	0					
ANR	1036721	Identifier	dst_r		1036715	1					
ANR	1036722	IdentifierDecl	flags		1036715	1					
ANR	1036723	IdentifierDeclType	sljit_si		1036715	0					
ANR	1036724	Identifier	flags		1036715	1					
ANR	1036725	IdentifierDecl	mem_flags		1036715	2					
ANR	1036726	IdentifierDeclType	sljit_si		1036715	0					
ANR	1036727	Identifier	mem_flags		1036715	1					
ANR	1036728	IdentifierDeclStatement	sljit_ins cc ;	1973:1:60879:60891	1036715	1	True				
ANR	1036729	IdentifierDecl	cc		1036715	0					
ANR	1036730	IdentifierDeclType	sljit_ins		1036715	0					
ANR	1036731	Identifier	cc		1036715	1					
ANR	1036732	ExpressionStatement	CHECK_ERROR ( )	1975:1:60895:60908	1036715	2	True				
ANR	1036733	CallExpression	CHECK_ERROR ( )		1036715	0					
ANR	1036734	Callee	CHECK_ERROR		1036715	0					
ANR	1036735	Identifier	CHECK_ERROR		1036715	0					
ANR	1036736	ArgumentList			1036715	1					
ANR	1036737	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	1976:1:60911:60985	1036715	3	True				
ANR	1036738	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1036715	0					
ANR	1036739	Callee	CHECK		1036715	0					
ANR	1036740	Identifier	CHECK		1036715	0					
ANR	1036741	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1036715	1					
ANR	1036742	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1036715	0					
ANR	1036743	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1036715	0					
ANR	1036744	Callee	check_sljit_emit_op_flags		1036715	0					
ANR	1036745	Identifier	check_sljit_emit_op_flags		1036715	0					
ANR	1036746	ArgumentList	compiler		1036715	1					
ANR	1036747	Argument	compiler		1036715	0					
ANR	1036748	Identifier	compiler		1036715	0					
ANR	1036749	Argument	op		1036715	1					
ANR	1036750	Identifier	op		1036715	0					
ANR	1036751	Argument	dst		1036715	2					
ANR	1036752	Identifier	dst		1036715	0					
ANR	1036753	Argument	dstw		1036715	3					
ANR	1036754	Identifier	dstw		1036715	0					
ANR	1036755	Argument	src		1036715	4					
ANR	1036756	Identifier	src		1036715	0					
ANR	1036757	Argument	srcw		1036715	5					
ANR	1036758	Identifier	srcw		1036715	0					
ANR	1036759	Argument	type		1036715	6					
ANR	1036760	Identifier	type		1036715	0					
ANR	1036761	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1977:1:60988:61018	1036715	4	True				
ANR	1036762	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1036715	0					
ANR	1036763	Callee	ADJUST_LOCAL_OFFSET		1036715	0					
ANR	1036764	Identifier	ADJUST_LOCAL_OFFSET		1036715	0					
ANR	1036765	ArgumentList	dst		1036715	1					
ANR	1036766	Argument	dst		1036715	0					
ANR	1036767	Identifier	dst		1036715	0					
ANR	1036768	Argument	dstw		1036715	1					
ANR	1036769	Identifier	dstw		1036715	0					
ANR	1036770	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1978:1:61021:61051	1036715	5	True				
ANR	1036771	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1036715	0					
ANR	1036772	Callee	ADJUST_LOCAL_OFFSET		1036715	0					
ANR	1036773	Identifier	ADJUST_LOCAL_OFFSET		1036715	0					
ANR	1036774	ArgumentList	src		1036715	1					
ANR	1036775	Argument	src		1036715	0					
ANR	1036776	Identifier	src		1036715	0					
ANR	1036777	Argument	srcw		1036715	1					
ANR	1036778	Identifier	srcw		1036715	0					
ANR	1036779	IfStatement	if ( dst == SLJIT_UNUSED )		1036715	6					
ANR	1036780	Condition	dst == SLJIT_UNUSED	1980:5:61059:61077	1036715	0	True				
ANR	1036781	EqualityExpression	dst == SLJIT_UNUSED		1036715	0		==			
ANR	1036782	Identifier	dst		1036715	0					
ANR	1036783	Identifier	SLJIT_UNUSED		1036715	1					
ANR	1036784	ReturnStatement	return SLJIT_SUCCESS ;	1981:2:61082:61102	1036715	1	True				
ANR	1036785	Identifier	SLJIT_SUCCESS		1036715	0					
ANR	1036786	ExpressionStatement	cc = get_cc ( type & 0xff )	1983:1:61106:61130	1036715	7	True				
ANR	1036787	AssignmentExpression	cc = get_cc ( type & 0xff )		1036715	0		=			
ANR	1036788	Identifier	cc		1036715	0					
ANR	1036789	CallExpression	get_cc ( type & 0xff )		1036715	1					
ANR	1036790	Callee	get_cc		1036715	0					
ANR	1036791	Identifier	get_cc		1036715	0					
ANR	1036792	ArgumentList	type & 0xff		1036715	1					
ANR	1036793	Argument	type & 0xff		1036715	0					
ANR	1036794	BitAndExpression	type & 0xff		1036715	0		&			
ANR	1036795	Identifier	type		1036715	0					
ANR	1036796	PrimaryExpression	0xff		1036715	1					
ANR	1036797	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	1984:1:61133:61174	1036715	8	True				
ANR	1036798	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1036715	0		=			
ANR	1036799	Identifier	dst_r		1036715	0					
ANR	1036800	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1036715	1					
ANR	1036801	Condition	FAST_IS_REG ( dst )		1036715	0					
ANR	1036802	CallExpression	FAST_IS_REG ( dst )		1036715	0					
ANR	1036803	Callee	FAST_IS_REG		1036715	0					
ANR	1036804	Identifier	FAST_IS_REG		1036715	0					
ANR	1036805	ArgumentList	dst		1036715	1					
ANR	1036806	Argument	dst		1036715	0					
ANR	1036807	Identifier	dst		1036715	0					
ANR	1036808	Identifier	dst		1036715	1					
ANR	1036809	Identifier	TMP_REG1		1036715	2					
ANR	1036810	IfStatement	if ( GET_OPCODE ( op ) < SLJIT_ADD )		1036715	9					
ANR	1036811	Condition	GET_OPCODE ( op ) < SLJIT_ADD	1986:5:61182:61207	1036715	0	True				
ANR	1036812	RelationalExpression	GET_OPCODE ( op ) < SLJIT_ADD		1036715	0		<			
ANR	1036813	CallExpression	GET_OPCODE ( op )		1036715	0					
ANR	1036814	Callee	GET_OPCODE		1036715	0					
ANR	1036815	Identifier	GET_OPCODE		1036715	0					
ANR	1036816	ArgumentList	op		1036715	1					
ANR	1036817	Argument	op		1036715	0					
ANR	1036818	Identifier	op		1036715	0					
ANR	1036819	Identifier	SLJIT_ADD		1036715	1					
ANR	1036820	CompoundStatement		16:33:368:368	1036715	1					
ANR	1036821	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) ) )"	1987:2:61214:61304	1036715	0	True				
ANR	1036822	CallExpression	"FAIL_IF ( push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) ) )"		1036715	0					
ANR	1036823	Callee	FAIL_IF		1036715	0					
ANR	1036824	Identifier	FAIL_IF		1036715	0					
ANR	1036825	ArgumentList	"push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) )"		1036715	1					
ANR	1036826	Argument	"push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) )"		1036715	0					
ANR	1036827	CallExpression	"push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) )"		1036715	0					
ANR	1036828	Callee	push_inst		1036715	0					
ANR	1036829	Identifier	push_inst		1036715	0					
ANR	1036830	ArgumentList	compiler		1036715	1					
ANR	1036831	Argument	compiler		1036715	0					
ANR	1036832	Identifier	compiler		1036715	0					
ANR	1036833	Argument	CSINC | ( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1					
ANR	1036834	InclusiveOrExpression	CSINC | ( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	0		|			
ANR	1036835	Identifier	CSINC		1036715	0					
ANR	1036836	InclusiveOrExpression	( cc << 12 ) | RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1		|			
ANR	1036837	ShiftExpression	cc << 12		1036715	0		<<			
ANR	1036838	Identifier	cc		1036715	0					
ANR	1036839	PrimaryExpression	12		1036715	1					
ANR	1036840	InclusiveOrExpression	RD ( dst_r ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1		|			
ANR	1036841	CallExpression	RD ( dst_r )		1036715	0					
ANR	1036842	Callee	RD		1036715	0					
ANR	1036843	Identifier	RD		1036715	0					
ANR	1036844	ArgumentList	dst_r		1036715	1					
ANR	1036845	Argument	dst_r		1036715	0					
ANR	1036846	Identifier	dst_r		1036715	0					
ANR	1036847	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1		|			
ANR	1036848	CallExpression	RN ( TMP_ZERO )		1036715	0					
ANR	1036849	Callee	RN		1036715	0					
ANR	1036850	Identifier	RN		1036715	0					
ANR	1036851	ArgumentList	TMP_ZERO		1036715	1					
ANR	1036852	Argument	TMP_ZERO		1036715	0					
ANR	1036853	Identifier	TMP_ZERO		1036715	0					
ANR	1036854	CallExpression	RM ( TMP_ZERO )		1036715	1					
ANR	1036855	Callee	RM		1036715	0					
ANR	1036856	Identifier	RM		1036715	0					
ANR	1036857	ArgumentList	TMP_ZERO		1036715	1					
ANR	1036858	Argument	TMP_ZERO		1036715	0					
ANR	1036859	Identifier	TMP_ZERO		1036715	0					
ANR	1036860	IfStatement	if ( dst_r != TMP_REG1 )		1036715	1					
ANR	1036861	Condition	dst_r != TMP_REG1	1988:6:61312:61328	1036715	0	True				
ANR	1036862	EqualityExpression	dst_r != TMP_REG1		1036715	0		!=			
ANR	1036863	Identifier	dst_r		1036715	0					
ANR	1036864	Identifier	TMP_REG1		1036715	1					
ANR	1036865	ReturnStatement	return SLJIT_SUCCESS ;	1989:3:61334:61354	1036715	1	True				
ANR	1036866	Identifier	SLJIT_SUCCESS		1036715	0					
ANR	1036867	ReturnStatement	"return emit_op_mem ( compiler , ( GET_OPCODE ( op ) == SLJIT_MOV ? WORD_SIZE : INT_SIZE ) | STORE , TMP_REG1 , dst , dstw ) ;"	1990:2:61358:61469	1036715	2	True				
ANR	1036868	CallExpression	"emit_op_mem ( compiler , ( GET_OPCODE ( op ) == SLJIT_MOV ? WORD_SIZE : INT_SIZE ) | STORE , TMP_REG1 , dst , dstw )"		1036715	0					
ANR	1036869	Callee	emit_op_mem		1036715	0					
ANR	1036870	Identifier	emit_op_mem		1036715	0					
ANR	1036871	ArgumentList	compiler		1036715	1					
ANR	1036872	Argument	compiler		1036715	0					
ANR	1036873	Identifier	compiler		1036715	0					
ANR	1036874	Argument	( GET_OPCODE ( op ) == SLJIT_MOV ? WORD_SIZE : INT_SIZE ) | STORE		1036715	1					
ANR	1036875	InclusiveOrExpression	( GET_OPCODE ( op ) == SLJIT_MOV ? WORD_SIZE : INT_SIZE ) | STORE		1036715	0		|			
ANR	1036876	ConditionalExpression	GET_OPCODE ( op ) == SLJIT_MOV ? WORD_SIZE : INT_SIZE		1036715	0					
ANR	1036877	Condition	GET_OPCODE ( op ) == SLJIT_MOV		1036715	0					
ANR	1036878	EqualityExpression	GET_OPCODE ( op ) == SLJIT_MOV		1036715	0		==			
ANR	1036879	CallExpression	GET_OPCODE ( op )		1036715	0					
ANR	1036880	Callee	GET_OPCODE		1036715	0					
ANR	1036881	Identifier	GET_OPCODE		1036715	0					
ANR	1036882	ArgumentList	op		1036715	1					
ANR	1036883	Argument	op		1036715	0					
ANR	1036884	Identifier	op		1036715	0					
ANR	1036885	Identifier	SLJIT_MOV		1036715	1					
ANR	1036886	Identifier	WORD_SIZE		1036715	1					
ANR	1036887	Identifier	INT_SIZE		1036715	2					
ANR	1036888	Identifier	STORE		1036715	1					
ANR	1036889	Argument	TMP_REG1		1036715	2					
ANR	1036890	Identifier	TMP_REG1		1036715	0					
ANR	1036891	Argument	dst		1036715	3					
ANR	1036892	Identifier	dst		1036715	0					
ANR	1036893	Argument	dstw		1036715	4					
ANR	1036894	Identifier	dstw		1036715	0					
ANR	1036895	ExpressionStatement	compiler -> cache_arg = 0	1993:1:61476:61499	1036715	10	True				
ANR	1036896	AssignmentExpression	compiler -> cache_arg = 0		1036715	0		=			
ANR	1036897	PtrMemberAccess	compiler -> cache_arg		1036715	0					
ANR	1036898	Identifier	compiler		1036715	0					
ANR	1036899	Identifier	cache_arg		1036715	1					
ANR	1036900	PrimaryExpression	0		1036715	1					
ANR	1036901	ExpressionStatement	compiler -> cache_argw = 0	1994:1:61502:61526	1036715	11	True				
ANR	1036902	AssignmentExpression	compiler -> cache_argw = 0		1036715	0		=			
ANR	1036903	PtrMemberAccess	compiler -> cache_argw		1036715	0					
ANR	1036904	Identifier	compiler		1036715	0					
ANR	1036905	Identifier	cache_argw		1036715	1					
ANR	1036906	PrimaryExpression	0		1036715	1					
ANR	1036907	ExpressionStatement	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0	1995:1:61529:61566	1036715	12	True				
ANR	1036908	AssignmentExpression	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1036715	0		=			
ANR	1036909	Identifier	flags		1036715	0					
ANR	1036910	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1036715	1					
ANR	1036911	Condition	GET_FLAGS ( op )		1036715	0					
ANR	1036912	CallExpression	GET_FLAGS ( op )		1036715	0					
ANR	1036913	Callee	GET_FLAGS		1036715	0					
ANR	1036914	Identifier	GET_FLAGS		1036715	0					
ANR	1036915	ArgumentList	op		1036715	1					
ANR	1036916	Argument	op		1036715	0					
ANR	1036917	Identifier	op		1036715	0					
ANR	1036918	Identifier	SET_FLAGS		1036715	1					
ANR	1036919	PrimaryExpression	0		1036715	2					
ANR	1036920	ExpressionStatement	mem_flags = WORD_SIZE	1996:1:61569:61590	1036715	13	True				
ANR	1036921	AssignmentExpression	mem_flags = WORD_SIZE		1036715	0		=			
ANR	1036922	Identifier	mem_flags		1036715	0					
ANR	1036923	Identifier	WORD_SIZE		1036715	1					
ANR	1036924	IfStatement	if ( op & SLJIT_INT_OP )		1036715	14					
ANR	1036925	Condition	op & SLJIT_INT_OP	1997:5:61597:61613	1036715	0	True				
ANR	1036926	BitAndExpression	op & SLJIT_INT_OP		1036715	0		&			
ANR	1036927	Identifier	op		1036715	0					
ANR	1036928	Identifier	SLJIT_INT_OP		1036715	1					
ANR	1036929	CompoundStatement		27:24:774:774	1036715	1					
ANR	1036930	ExpressionStatement	flags |= INT_OP	1998:2:61620:61635	1036715	0	True				
ANR	1036931	AssignmentExpression	flags |= INT_OP		1036715	0		|=			
ANR	1036932	Identifier	flags		1036715	0					
ANR	1036933	Identifier	INT_OP		1036715	1					
ANR	1036934	ExpressionStatement	mem_flags = INT_SIZE	1999:2:61639:61659	1036715	1	True				
ANR	1036935	AssignmentExpression	mem_flags = INT_SIZE		1036715	0		=			
ANR	1036936	Identifier	mem_flags		1036715	0					
ANR	1036937	Identifier	INT_SIZE		1036715	1					
ANR	1036938	IfStatement	if ( src & SLJIT_MEM )		1036715	15					
ANR	1036939	Condition	src & SLJIT_MEM	2002:5:61670:61684	1036715	0	True				
ANR	1036940	BitAndExpression	src & SLJIT_MEM		1036715	0		&			
ANR	1036941	Identifier	src		1036715	0					
ANR	1036942	Identifier	SLJIT_MEM		1036715	1					
ANR	1036943	CompoundStatement		32:22:845:845	1036715	1					
ANR	1036944	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , mem_flags , TMP_REG1 , src , srcw , dst , dstw ) )"	2003:2:61691:61765	1036715	0	True				
ANR	1036945	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , mem_flags , TMP_REG1 , src , srcw , dst , dstw ) )"		1036715	0					
ANR	1036946	Callee	FAIL_IF		1036715	0					
ANR	1036947	Identifier	FAIL_IF		1036715	0					
ANR	1036948	ArgumentList	"emit_op_mem2 ( compiler , mem_flags , TMP_REG1 , src , srcw , dst , dstw )"		1036715	1					
ANR	1036949	Argument	"emit_op_mem2 ( compiler , mem_flags , TMP_REG1 , src , srcw , dst , dstw )"		1036715	0					
ANR	1036950	CallExpression	"emit_op_mem2 ( compiler , mem_flags , TMP_REG1 , src , srcw , dst , dstw )"		1036715	0					
ANR	1036951	Callee	emit_op_mem2		1036715	0					
ANR	1036952	Identifier	emit_op_mem2		1036715	0					
ANR	1036953	ArgumentList	compiler		1036715	1					
ANR	1036954	Argument	compiler		1036715	0					
ANR	1036955	Identifier	compiler		1036715	0					
ANR	1036956	Argument	mem_flags		1036715	1					
ANR	1036957	Identifier	mem_flags		1036715	0					
ANR	1036958	Argument	TMP_REG1		1036715	2					
ANR	1036959	Identifier	TMP_REG1		1036715	0					
ANR	1036960	Argument	src		1036715	3					
ANR	1036961	Identifier	src		1036715	0					
ANR	1036962	Argument	srcw		1036715	4					
ANR	1036963	Identifier	srcw		1036715	0					
ANR	1036964	Argument	dst		1036715	5					
ANR	1036965	Identifier	dst		1036715	0					
ANR	1036966	Argument	dstw		1036715	6					
ANR	1036967	Identifier	dstw		1036715	0					
ANR	1036968	ExpressionStatement	src = TMP_REG1	2004:2:61769:61783	1036715	1	True				
ANR	1036969	AssignmentExpression	src = TMP_REG1		1036715	0		=			
ANR	1036970	Identifier	src		1036715	0					
ANR	1036971	Identifier	TMP_REG1		1036715	1					
ANR	1036972	ExpressionStatement	srcw = 0	2005:2:61787:61795	1036715	2	True				
ANR	1036973	AssignmentExpression	srcw = 0		1036715	0		=			
ANR	1036974	Identifier	srcw		1036715	0					
ANR	1036975	PrimaryExpression	0		1036715	1					
ANR	1036976	ElseStatement	else		1036715	0					
ANR	1036977	IfStatement	if ( src & SLJIT_IMM )		1036715	0					
ANR	1036978	Condition	src & SLJIT_IMM	2006:12:61809:61823	1036715	0	True				
ANR	1036979	BitAndExpression	src & SLJIT_IMM		1036715	0		&			
ANR	1036980	Identifier	src		1036715	0					
ANR	1036981	Identifier	SLJIT_IMM		1036715	1					
ANR	1036982	ExpressionStatement	flags |= ARG1_IMM	2007:2:61828:61845	1036715	1	True				
ANR	1036983	AssignmentExpression	flags |= ARG1_IMM		1036715	0		|=			
ANR	1036984	Identifier	flags		1036715	0					
ANR	1036985	Identifier	ARG1_IMM		1036715	1					
ANR	1036986	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) ) )"	2009:1:61849:61942	1036715	16	True				
ANR	1036987	CallExpression	"FAIL_IF ( push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) ) )"		1036715	0					
ANR	1036988	Callee	FAIL_IF		1036715	0					
ANR	1036989	Identifier	FAIL_IF		1036715	0					
ANR	1036990	ArgumentList	"push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) )"		1036715	1					
ANR	1036991	Argument	"push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) )"		1036715	0					
ANR	1036992	CallExpression	"push_inst ( compiler , CSINC | ( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO ) )"		1036715	0					
ANR	1036993	Callee	push_inst		1036715	0					
ANR	1036994	Identifier	push_inst		1036715	0					
ANR	1036995	ArgumentList	compiler		1036715	1					
ANR	1036996	Argument	compiler		1036715	0					
ANR	1036997	Identifier	compiler		1036715	0					
ANR	1036998	Argument	CSINC | ( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1					
ANR	1036999	InclusiveOrExpression	CSINC | ( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	0		|			
ANR	1037000	Identifier	CSINC		1036715	0					
ANR	1037001	InclusiveOrExpression	( cc << 12 ) | RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1		|			
ANR	1037002	ShiftExpression	cc << 12		1036715	0		<<			
ANR	1037003	Identifier	cc		1036715	0					
ANR	1037004	PrimaryExpression	12		1036715	1					
ANR	1037005	InclusiveOrExpression	RD ( TMP_REG2 ) | RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1		|			
ANR	1037006	CallExpression	RD ( TMP_REG2 )		1036715	0					
ANR	1037007	Callee	RD		1036715	0					
ANR	1037008	Identifier	RD		1036715	0					
ANR	1037009	ArgumentList	TMP_REG2		1036715	1					
ANR	1037010	Argument	TMP_REG2		1036715	0					
ANR	1037011	Identifier	TMP_REG2		1036715	0					
ANR	1037012	InclusiveOrExpression	RN ( TMP_ZERO ) | RM ( TMP_ZERO )		1036715	1		|			
ANR	1037013	CallExpression	RN ( TMP_ZERO )		1036715	0					
ANR	1037014	Callee	RN		1036715	0					
ANR	1037015	Identifier	RN		1036715	0					
ANR	1037016	ArgumentList	TMP_ZERO		1036715	1					
ANR	1037017	Argument	TMP_ZERO		1036715	0					
ANR	1037018	Identifier	TMP_ZERO		1036715	0					
ANR	1037019	CallExpression	RM ( TMP_ZERO )		1036715	1					
ANR	1037020	Callee	RM		1036715	0					
ANR	1037021	Identifier	RM		1036715	0					
ANR	1037022	ArgumentList	TMP_ZERO		1036715	1					
ANR	1037023	Argument	TMP_ZERO		1036715	0					
ANR	1037024	Identifier	TMP_ZERO		1036715	0					
ANR	1037025	ExpressionStatement	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src , TMP_REG2 )"	2010:1:61945:62012	1036715	17	True				
ANR	1037026	CallExpression	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src , TMP_REG2 )"		1036715	0					
ANR	1037027	Callee	emit_op_imm		1036715	0					
ANR	1037028	Identifier	emit_op_imm		1036715	0					
ANR	1037029	ArgumentList	compiler		1036715	1					
ANR	1037030	Argument	compiler		1036715	0					
ANR	1037031	Identifier	compiler		1036715	0					
ANR	1037032	Argument	flags | GET_OPCODE ( op )		1036715	1					
ANR	1037033	InclusiveOrExpression	flags | GET_OPCODE ( op )		1036715	0		|			
ANR	1037034	Identifier	flags		1036715	0					
ANR	1037035	CallExpression	GET_OPCODE ( op )		1036715	1					
ANR	1037036	Callee	GET_OPCODE		1036715	0					
ANR	1037037	Identifier	GET_OPCODE		1036715	0					
ANR	1037038	ArgumentList	op		1036715	1					
ANR	1037039	Argument	op		1036715	0					
ANR	1037040	Identifier	op		1036715	0					
ANR	1037041	Argument	dst_r		1036715	2					
ANR	1037042	Identifier	dst_r		1036715	0					
ANR	1037043	Argument	src		1036715	3					
ANR	1037044	Identifier	src		1036715	0					
ANR	1037045	Argument	TMP_REG2		1036715	4					
ANR	1037046	Identifier	TMP_REG2		1036715	0					
ANR	1037047	IfStatement	if ( dst_r != TMP_REG1 )		1036715	18					
ANR	1037048	Condition	dst_r != TMP_REG1	2012:5:62020:62036	1036715	0	True				
ANR	1037049	EqualityExpression	dst_r != TMP_REG1		1036715	0		!=			
ANR	1037050	Identifier	dst_r		1036715	0					
ANR	1037051	Identifier	TMP_REG1		1036715	1					
ANR	1037052	ReturnStatement	return SLJIT_SUCCESS ;	2013:2:62041:62061	1036715	1	True				
ANR	1037053	Identifier	SLJIT_SUCCESS		1036715	0					
ANR	1037054	ReturnStatement	"return emit_op_mem2 ( compiler , mem_flags | STORE , TMP_REG1 , dst , dstw , 0 , 0 ) ;"	2014:1:62064:62139	1036715	19	True				
ANR	1037055	CallExpression	"emit_op_mem2 ( compiler , mem_flags | STORE , TMP_REG1 , dst , dstw , 0 , 0 )"		1036715	0					
ANR	1037056	Callee	emit_op_mem2		1036715	0					
ANR	1037057	Identifier	emit_op_mem2		1036715	0					
ANR	1037058	ArgumentList	compiler		1036715	1					
ANR	1037059	Argument	compiler		1036715	0					
ANR	1037060	Identifier	compiler		1036715	0					
ANR	1037061	Argument	mem_flags | STORE		1036715	1					
ANR	1037062	InclusiveOrExpression	mem_flags | STORE		1036715	0		|			
ANR	1037063	Identifier	mem_flags		1036715	0					
ANR	1037064	Identifier	STORE		1036715	1					
ANR	1037065	Argument	TMP_REG1		1036715	2					
ANR	1037066	Identifier	TMP_REG1		1036715	0					
ANR	1037067	Argument	dst		1036715	3					
ANR	1037068	Identifier	dst		1036715	0					
ANR	1037069	Argument	dstw		1036715	4					
ANR	1037070	Identifier	dstw		1036715	0					
ANR	1037071	Argument	0		1036715	5					
ANR	1037072	PrimaryExpression	0		1036715	0					
ANR	1037073	Argument	0		1036715	6					
ANR	1037074	PrimaryExpression	0		1036715	0					
ANR	1037075	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1036715	1					
ANR	1037076	Identifier	sljit_emit_op_flags		1036715	2					
ANR	1037077	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1036715	3					
ANR	1037078	Parameter	struct sljit_compiler * compiler	1967:54:60719:60749	1036715	0	True				
ANR	1037079	ParameterType	struct sljit_compiler *		1036715	0					
ANR	1037080	Identifier	compiler		1036715	1					
ANR	1037081	Parameter	sljit_si op	1967:87:60752:60762	1036715	1	True				
ANR	1037082	ParameterType	sljit_si		1036715	0					
ANR	1037083	Identifier	op		1036715	1					
ANR	1037084	Parameter	sljit_si dst	1968:1:60766:60777	1036715	2	True				
ANR	1037085	ParameterType	sljit_si		1036715	0					
ANR	1037086	Identifier	dst		1036715	1					
ANR	1037087	Parameter	sljit_sw dstw	1968:15:60780:60792	1036715	3	True				
ANR	1037088	ParameterType	sljit_sw		1036715	0					
ANR	1037089	Identifier	dstw		1036715	1					
ANR	1037090	Parameter	sljit_si src	1969:1:60796:60807	1036715	4	True				
ANR	1037091	ParameterType	sljit_si		1036715	0					
ANR	1037092	Identifier	src		1036715	1					
ANR	1037093	Parameter	sljit_sw srcw	1969:15:60810:60822	1036715	5	True				
ANR	1037094	ParameterType	sljit_sw		1036715	0					
ANR	1037095	Identifier	srcw		1036715	1					
ANR	1037096	Parameter	sljit_si type	1970:1:60826:60838	1036715	6	True				
ANR	1037097	ParameterType	sljit_si		1036715	0					
ANR	1037098	Identifier	type		1036715	1					
ANR	1037099	CFGEntryNode	ENTRY		1036715		True				
ANR	1037100	CFGExitNode	EXIT		1036715		True				
ANR	1037101	Symbol	TMP_REG2		1036715						
ANR	1037102	Symbol	TMP_REG1		1036715						
ANR	1037103	Symbol	compiler -> cache_argw		1036715						
ANR	1037104	Symbol	dst		1036715						
ANR	1037105	Symbol	SLJIT_MOV		1036715						
ANR	1037106	Symbol	SLJIT_MEM		1036715						
ANR	1037107	Symbol	flags		1036715						
ANR	1037108	Symbol	SLJIT_ADD		1036715						
ANR	1037109	Symbol	* compiler		1036715						
ANR	1037110	Symbol	type		1036715						
ANR	1037111	Symbol	dst_r		1036715						
ANR	1037112	Symbol	GET_OPCODE		1036715						
ANR	1037113	Symbol	GET_FLAGS		1036715						
ANR	1037114	Symbol	SLJIT_IMM		1036715						
ANR	1037115	Symbol	INT_OP		1036715						
ANR	1037116	Symbol	ARG1_IMM		1036715						
ANR	1037117	Symbol	CSINC		1036715						
ANR	1037118	Symbol	compiler		1036715						
ANR	1037119	Symbol	check_sljit_emit_op_flags		1036715						
ANR	1037120	Symbol	cc		1036715						
ANR	1037121	Symbol	op		1036715						
ANR	1037122	Symbol	get_cc		1036715						
ANR	1037123	Symbol	push_inst		1036715						
ANR	1037124	Symbol	FAST_IS_REG		1036715						
ANR	1037125	Symbol	src		1036715						
ANR	1037126	Symbol	INT_SIZE		1036715						
ANR	1037127	Symbol	srcw		1036715						
ANR	1037128	Symbol	compiler -> cache_arg		1036715						
ANR	1037129	Symbol	SLJIT_INT_OP		1036715						
ANR	1037130	Symbol	emit_op_mem2		1036715						
ANR	1037131	Symbol	emit_op_mem		1036715						
ANR	1037132	Symbol	SLJIT_SUCCESS		1036715						
ANR	1037133	Symbol	SET_FLAGS		1036715						
ANR	1037134	Symbol	mem_flags		1036715						
ANR	1037135	Symbol	RD		1036715						
ANR	1037136	Symbol	SLJIT_UNUSED		1036715						
ANR	1037137	Symbol	STORE		1036715						
ANR	1037138	Symbol	TMP_ZERO		1036715						
ANR	1037139	Symbol	RM		1036715						
ANR	1037140	Symbol	RN		1036715						
ANR	1037141	Symbol	dstw		1036715						
ANR	1037142	Symbol	WORD_SIZE		1036715						
ANR	1037143	Function	sljit_emit_const	2017:25:62169:62816							
ANR	1037144	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1037143	0					
ANR	1037145	CompoundStatement		2018:0:62289:62816	1037143	0					
ANR	1037146	IdentifierDeclStatement	struct sljit_const * const_ ;	2019:1:62292:62318	1037143	0	True				
ANR	1037147	IdentifierDecl	* const_		1037143	0					
ANR	1037148	IdentifierDeclType	struct sljit_const *		1037143	0					
ANR	1037149	Identifier	const_		1037143	1					
ANR	1037150	IdentifierDeclStatement	sljit_si dst_r ;	2020:1:62321:62335	1037143	1	True				
ANR	1037151	IdentifierDecl	dst_r		1037143	0					
ANR	1037152	IdentifierDeclType	sljit_si		1037143	0					
ANR	1037153	Identifier	dst_r		1037143	1					
ANR	1037154	ExpressionStatement	CHECK_ERROR_PTR ( )	2022:1:62339:62356	1037143	2	True				
ANR	1037155	CallExpression	CHECK_ERROR_PTR ( )		1037143	0					
ANR	1037156	Callee	CHECK_ERROR_PTR		1037143	0					
ANR	1037157	Identifier	CHECK_ERROR_PTR		1037143	0					
ANR	1037158	ArgumentList			1037143	1					
ANR	1037159	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2023:1:62359:62425	1037143	3	True				
ANR	1037160	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1037143	0					
ANR	1037161	Callee	CHECK_PTR		1037143	0					
ANR	1037162	Identifier	CHECK_PTR		1037143	0					
ANR	1037163	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1037143	1					
ANR	1037164	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1037143	0					
ANR	1037165	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1037143	0					
ANR	1037166	Callee	check_sljit_emit_const		1037143	0					
ANR	1037167	Identifier	check_sljit_emit_const		1037143	0					
ANR	1037168	ArgumentList	compiler		1037143	1					
ANR	1037169	Argument	compiler		1037143	0					
ANR	1037170	Identifier	compiler		1037143	0					
ANR	1037171	Argument	dst		1037143	1					
ANR	1037172	Identifier	dst		1037143	0					
ANR	1037173	Argument	dstw		1037143	2					
ANR	1037174	Identifier	dstw		1037143	0					
ANR	1037175	Argument	init_value		1037143	3					
ANR	1037176	Identifier	init_value		1037143	0					
ANR	1037177	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2024:1:62428:62458	1037143	4	True				
ANR	1037178	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1037143	0					
ANR	1037179	Callee	ADJUST_LOCAL_OFFSET		1037143	0					
ANR	1037180	Identifier	ADJUST_LOCAL_OFFSET		1037143	0					
ANR	1037181	ArgumentList	dst		1037143	1					
ANR	1037182	Argument	dst		1037143	0					
ANR	1037183	Identifier	dst		1037143	0					
ANR	1037184	Argument	dstw		1037143	1					
ANR	1037185	Identifier	dstw		1037143	0					
ANR	1037186	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2026:1:62462:62541	1037143	5	True				
ANR	1037187	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1037143	0		=			
ANR	1037188	Identifier	const_		1037143	0					
ANR	1037189	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1037143	1					
ANR	1037190	CastTarget	struct sljit_const *		1037143	0					
ANR	1037191	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1037143	1					
ANR	1037192	Callee	ensure_abuf		1037143	0					
ANR	1037193	Identifier	ensure_abuf		1037143	0					
ANR	1037194	ArgumentList	compiler		1037143	1					
ANR	1037195	Argument	compiler		1037143	0					
ANR	1037196	Identifier	compiler		1037143	0					
ANR	1037197	Argument	sizeof ( struct sljit_const )		1037143	1					
ANR	1037198	SizeofExpression	sizeof ( struct sljit_const )		1037143	0					
ANR	1037199	Sizeof	sizeof		1037143	0					
ANR	1037200	SizeofOperand	struct sljit_const		1037143	1					
ANR	1037201	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2027:1:62544:62564	1037143	6	True				
ANR	1037202	CallExpression	PTR_FAIL_IF ( ! const_ )		1037143	0					
ANR	1037203	Callee	PTR_FAIL_IF		1037143	0					
ANR	1037204	Identifier	PTR_FAIL_IF		1037143	0					
ANR	1037205	ArgumentList	! const_		1037143	1					
ANR	1037206	Argument	! const_		1037143	0					
ANR	1037207	UnaryOperationExpression	! const_		1037143	0					
ANR	1037208	UnaryOperator	!		1037143	0					
ANR	1037209	Identifier	const_		1037143	1					
ANR	1037210	ExpressionStatement	"set_const ( const_ , compiler )"	2028:1:62567:62594	1037143	7	True				
ANR	1037211	CallExpression	"set_const ( const_ , compiler )"		1037143	0					
ANR	1037212	Callee	set_const		1037143	0					
ANR	1037213	Identifier	set_const		1037143	0					
ANR	1037214	ArgumentList	const_		1037143	1					
ANR	1037215	Argument	const_		1037143	0					
ANR	1037216	Identifier	const_		1037143	0					
ANR	1037217	Argument	compiler		1037143	1					
ANR	1037218	Identifier	compiler		1037143	0					
ANR	1037219	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	2030:1:62598:62639	1037143	8	True				
ANR	1037220	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1037143	0		=			
ANR	1037221	Identifier	dst_r		1037143	0					
ANR	1037222	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1037143	1					
ANR	1037223	Condition	SLOW_IS_REG ( dst )		1037143	0					
ANR	1037224	CallExpression	SLOW_IS_REG ( dst )		1037143	0					
ANR	1037225	Callee	SLOW_IS_REG		1037143	0					
ANR	1037226	Identifier	SLOW_IS_REG		1037143	0					
ANR	1037227	ArgumentList	dst		1037143	1					
ANR	1037228	Argument	dst		1037143	0					
ANR	1037229	Identifier	dst		1037143	0					
ANR	1037230	Identifier	dst		1037143	1					
ANR	1037231	Identifier	TMP_REG1		1037143	2					
ANR	1037232	ExpressionStatement	"PTR_FAIL_IF ( emit_imm64_const ( compiler , dst_r , init_value ) )"	2031:1:62642:62700	1037143	9	True				
ANR	1037233	CallExpression	"PTR_FAIL_IF ( emit_imm64_const ( compiler , dst_r , init_value ) )"		1037143	0					
ANR	1037234	Callee	PTR_FAIL_IF		1037143	0					
ANR	1037235	Identifier	PTR_FAIL_IF		1037143	0					
ANR	1037236	ArgumentList	"emit_imm64_const ( compiler , dst_r , init_value )"		1037143	1					
ANR	1037237	Argument	"emit_imm64_const ( compiler , dst_r , init_value )"		1037143	0					
ANR	1037238	CallExpression	"emit_imm64_const ( compiler , dst_r , init_value )"		1037143	0					
ANR	1037239	Callee	emit_imm64_const		1037143	0					
ANR	1037240	Identifier	emit_imm64_const		1037143	0					
ANR	1037241	ArgumentList	compiler		1037143	1					
ANR	1037242	Argument	compiler		1037143	0					
ANR	1037243	Identifier	compiler		1037143	0					
ANR	1037244	Argument	dst_r		1037143	1					
ANR	1037245	Identifier	dst_r		1037143	0					
ANR	1037246	Argument	init_value		1037143	2					
ANR	1037247	Identifier	init_value		1037143	0					
ANR	1037248	IfStatement	if ( dst & SLJIT_MEM )		1037143	10					
ANR	1037249	Condition	dst & SLJIT_MEM	2033:5:62708:62722	1037143	0	True				
ANR	1037250	BitAndExpression	dst & SLJIT_MEM		1037143	0		&			
ANR	1037251	Identifier	dst		1037143	0					
ANR	1037252	Identifier	SLJIT_MEM		1037143	1					
ANR	1037253	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw ) )"	2034:2:62727:62798	1037143	1	True				
ANR	1037254	CallExpression	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw ) )"		1037143	0					
ANR	1037255	Callee	PTR_FAIL_IF		1037143	0					
ANR	1037256	Identifier	PTR_FAIL_IF		1037143	0					
ANR	1037257	ArgumentList	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1037143	1					
ANR	1037258	Argument	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1037143	0					
ANR	1037259	CallExpression	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1037143	0					
ANR	1037260	Callee	emit_op_mem		1037143	0					
ANR	1037261	Identifier	emit_op_mem		1037143	0					
ANR	1037262	ArgumentList	compiler		1037143	1					
ANR	1037263	Argument	compiler		1037143	0					
ANR	1037264	Identifier	compiler		1037143	0					
ANR	1037265	Argument	WORD_SIZE | STORE		1037143	1					
ANR	1037266	InclusiveOrExpression	WORD_SIZE | STORE		1037143	0		|			
ANR	1037267	Identifier	WORD_SIZE		1037143	0					
ANR	1037268	Identifier	STORE		1037143	1					
ANR	1037269	Argument	dst_r		1037143	2					
ANR	1037270	Identifier	dst_r		1037143	0					
ANR	1037271	Argument	dst		1037143	3					
ANR	1037272	Identifier	dst		1037143	0					
ANR	1037273	Argument	dstw		1037143	4					
ANR	1037274	Identifier	dstw		1037143	0					
ANR	1037275	ReturnStatement	return const_ ;	2035:1:62801:62814	1037143	11	True				
ANR	1037276	Identifier	const_		1037143	0					
ANR	1037277	ReturnType	struct sljit_const *		1037143	1					
ANR	1037278	Identifier	sljit_emit_const		1037143	2					
ANR	1037279	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1037143	3					
ANR	1037280	Parameter	struct sljit_compiler * compiler	2017:62:62206:62236	1037143	0	True				
ANR	1037281	ParameterType	struct sljit_compiler *		1037143	0					
ANR	1037282	Identifier	compiler		1037143	1					
ANR	1037283	Parameter	sljit_si dst	2017:95:62239:62250	1037143	1	True				
ANR	1037284	ParameterType	sljit_si		1037143	0					
ANR	1037285	Identifier	dst		1037143	1					
ANR	1037286	Parameter	sljit_sw dstw	2017:109:62253:62265	1037143	2	True				
ANR	1037287	ParameterType	sljit_sw		1037143	0					
ANR	1037288	Identifier	dstw		1037143	1					
ANR	1037289	Parameter	sljit_sw init_value	2017:124:62268:62286	1037143	3	True				
ANR	1037290	ParameterType	sljit_sw		1037143	0					
ANR	1037291	Identifier	init_value		1037143	1					
ANR	1037292	CFGEntryNode	ENTRY		1037143		True				
ANR	1037293	CFGExitNode	EXIT		1037143		True				
ANR	1037294	Symbol	check_sljit_emit_const		1037143						
ANR	1037295	Symbol	TMP_REG1		1037143						
ANR	1037296	Symbol	const_		1037143						
ANR	1037297	Symbol	dst		1037143						
ANR	1037298	Symbol	SLJIT_MEM		1037143						
ANR	1037299	Symbol	emit_imm64_const		1037143						
ANR	1037300	Symbol	emit_op_mem		1037143						
ANR	1037301	Symbol	SLOW_IS_REG		1037143						
ANR	1037302	Symbol	ensure_abuf		1037143						
ANR	1037303	Symbol	dst_r		1037143						
ANR	1037304	Symbol	STORE		1037143						
ANR	1037305	Symbol	compiler		1037143						
ANR	1037306	Symbol	init_value		1037143						
ANR	1037307	Symbol	dstw		1037143						
ANR	1037308	Symbol	WORD_SIZE		1037143						
ANR	1037309	Function	sljit_set_jump_addr	2038:0:62819:63015							
ANR	1037310	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1037309	0					
ANR	1037311	CompoundStatement		2039:0:62903:63015	1037309	0					
ANR	1037312	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	2040:1:62906:62940	1037309	0	True				
ANR	1037313	IdentifierDecl	* inst = ( sljit_ins * ) addr		1037309	0					
ANR	1037314	IdentifierDeclType	sljit_ins *		1037309	0					
ANR	1037315	Identifier	inst		1037309	1					
ANR	1037316	AssignmentExpression	* inst = ( sljit_ins * ) addr		1037309	2		=			
ANR	1037317	Identifier	inst		1037309	0					
ANR	1037318	CastExpression	( sljit_ins * ) addr		1037309	1					
ANR	1037319	CastTarget	sljit_ins *		1037309	0					
ANR	1037320	Identifier	addr		1037309	1					
ANR	1037321	ExpressionStatement	"modify_imm64_const ( inst , new_addr )"	2041:1:62943:62977	1037309	1	True				
ANR	1037322	CallExpression	"modify_imm64_const ( inst , new_addr )"		1037309	0					
ANR	1037323	Callee	modify_imm64_const		1037309	0					
ANR	1037324	Identifier	modify_imm64_const		1037309	0					
ANR	1037325	ArgumentList	inst		1037309	1					
ANR	1037326	Argument	inst		1037309	0					
ANR	1037327	Identifier	inst		1037309	0					
ANR	1037328	Argument	new_addr		1037309	1					
ANR	1037329	Identifier	new_addr		1037309	0					
ANR	1037330	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2042:1:62980:63013	1037309	2	True				
ANR	1037331	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1037309	0					
ANR	1037332	Callee	SLJIT_CACHE_FLUSH		1037309	0					
ANR	1037333	Identifier	SLJIT_CACHE_FLUSH		1037309	0					
ANR	1037334	ArgumentList	inst		1037309	1					
ANR	1037335	Argument	inst		1037309	0					
ANR	1037336	Identifier	inst		1037309	0					
ANR	1037337	Argument	inst + 4		1037309	1					
ANR	1037338	AdditiveExpression	inst + 4		1037309	0		+			
ANR	1037339	Identifier	inst		1037309	0					
ANR	1037340	PrimaryExpression	4		1037309	1					
ANR	1037341	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1037309	1					
ANR	1037342	Identifier	sljit_set_jump_addr		1037309	2					
ANR	1037343	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1037309	3					
ANR	1037344	Parameter	sljit_uw addr	2038:50:62869:62881	1037309	0	True				
ANR	1037345	ParameterType	sljit_uw		1037309	0					
ANR	1037346	Identifier	addr		1037309	1					
ANR	1037347	Parameter	sljit_uw new_addr	2038:65:62884:62900	1037309	1	True				
ANR	1037348	ParameterType	sljit_uw		1037309	0					
ANR	1037349	Identifier	new_addr		1037309	1					
ANR	1037350	CFGEntryNode	ENTRY		1037309		True				
ANR	1037351	CFGExitNode	EXIT		1037309		True				
ANR	1037352	Symbol	inst		1037309						
ANR	1037353	Symbol	addr		1037309						
ANR	1037354	Symbol	new_addr		1037309						
ANR	1037355	Function	sljit_set_const	2045:0:63018:63218							
ANR	1037356	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1037355	0					
ANR	1037357	CompoundStatement		2046:0:63102:63218	1037355	0					
ANR	1037358	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	2047:1:63105:63139	1037355	0	True				
ANR	1037359	IdentifierDecl	* inst = ( sljit_ins * ) addr		1037355	0					
ANR	1037360	IdentifierDeclType	sljit_ins *		1037355	0					
ANR	1037361	Identifier	inst		1037355	1					
ANR	1037362	AssignmentExpression	* inst = ( sljit_ins * ) addr		1037355	2		=			
ANR	1037363	Identifier	inst		1037355	0					
ANR	1037364	CastExpression	( sljit_ins * ) addr		1037355	1					
ANR	1037365	CastTarget	sljit_ins *		1037355	0					
ANR	1037366	Identifier	addr		1037355	1					
ANR	1037367	ExpressionStatement	"modify_imm64_const ( inst , new_constant )"	2048:1:63142:63180	1037355	1	True				
ANR	1037368	CallExpression	"modify_imm64_const ( inst , new_constant )"		1037355	0					
ANR	1037369	Callee	modify_imm64_const		1037355	0					
ANR	1037370	Identifier	modify_imm64_const		1037355	0					
ANR	1037371	ArgumentList	inst		1037355	1					
ANR	1037372	Argument	inst		1037355	0					
ANR	1037373	Identifier	inst		1037355	0					
ANR	1037374	Argument	new_constant		1037355	1					
ANR	1037375	Identifier	new_constant		1037355	0					
ANR	1037376	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2049:1:63183:63216	1037355	2	True				
ANR	1037377	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1037355	0					
ANR	1037378	Callee	SLJIT_CACHE_FLUSH		1037355	0					
ANR	1037379	Identifier	SLJIT_CACHE_FLUSH		1037355	0					
ANR	1037380	ArgumentList	inst		1037355	1					
ANR	1037381	Argument	inst		1037355	0					
ANR	1037382	Identifier	inst		1037355	0					
ANR	1037383	Argument	inst + 4		1037355	1					
ANR	1037384	AdditiveExpression	inst + 4		1037355	0		+			
ANR	1037385	Identifier	inst		1037355	0					
ANR	1037386	PrimaryExpression	4		1037355	1					
ANR	1037387	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1037355	1					
ANR	1037388	Identifier	sljit_set_const		1037355	2					
ANR	1037389	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1037355	3					
ANR	1037390	Parameter	sljit_uw addr	2045:46:63064:63076	1037355	0	True				
ANR	1037391	ParameterType	sljit_uw		1037355	0					
ANR	1037392	Identifier	addr		1037355	1					
ANR	1037393	Parameter	sljit_sw new_constant	2045:61:63079:63099	1037355	1	True				
ANR	1037394	ParameterType	sljit_sw		1037355	0					
ANR	1037395	Identifier	new_constant		1037355	1					
ANR	1037396	CFGEntryNode	ENTRY		1037355		True				
ANR	1037397	CFGExitNode	EXIT		1037355		True				
ANR	1037398	Symbol	new_constant		1037355						
ANR	1037399	Symbol	inst		1037355						
ANR	1037400	Symbol	addr		1037355						
