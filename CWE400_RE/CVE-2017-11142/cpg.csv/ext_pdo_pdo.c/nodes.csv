command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1164485	File	data/converged/CVE-2017-11142_php-src/ext_pdo_pdo.c								
ANR	1164486	DeclStmt									
ANR	1164487	Decl							zend_class_entry	zend_class_entry *	spl_ce_RuntimeException
ANR	1164488	DeclStmt									
ANR	1164489	Decl							HashTable	HashTable	pdo_driver_hash
ANR	1164490	DeclStmt									
ANR	1164491	Decl							int	int	le_ppdo
ANR	1164492	Function	php_pdo_list_entry	49:0:1863:1911							
ANR	1164493	FunctionDef	php_pdo_list_entry ()		1164492	0					
ANR	1164494	CompoundStatement		50:0:1892:1911	1164492	0					
ANR	1164495	ReturnStatement	return le_ppdo ;	51:1:1895:1909	1164492	0	True				
ANR	1164496	Identifier	le_ppdo		1164492	0					
ANR	1164497	ReturnType	int		1164492	1					
ANR	1164498	Identifier	php_pdo_list_entry		1164492	2					
ANR	1164499	ParameterList			1164492	3					
ANR	1164500	CFGEntryNode	ENTRY		1164492		True				
ANR	1164501	CFGExitNode	EXIT		1164492		True				
ANR	1164502	Symbol	le_ppdo		1164492						
ANR	1164503	DeclStmt									
ANR	1164504	Decl							zend_class_entry	zend_class_entry *	pdo_exception_ce
ANR	1164505	Function	php_pdo_get_dbh_ce	57:0:1987:2060							
ANR	1164506	FunctionDef	php_pdo_get_dbh_ce ()		1164505	0					
ANR	1164507	CompoundStatement		58:0:2038:2060	1164505	0					
ANR	1164508	ReturnStatement	return pdo_dbh_ce ;	59:1:2041:2058	1164505	0	True				
ANR	1164509	Identifier	pdo_dbh_ce		1164505	0					
ANR	1164510	ReturnType	PDO_API zend_class_entry *		1164505	1					
ANR	1164511	Identifier	php_pdo_get_dbh_ce		1164505	2					
ANR	1164512	ParameterList			1164505	3					
ANR	1164513	CFGEntryNode	ENTRY		1164505		True				
ANR	1164514	CFGExitNode	EXIT		1164505		True				
ANR	1164515	Symbol	pdo_dbh_ce		1164505						
ANR	1164516	Function	php_pdo_get_exception	62:0:2063:2145							
ANR	1164517	FunctionDef	php_pdo_get_exception ()		1164516	0					
ANR	1164518	CompoundStatement		63:0:2117:2145	1164516	0					
ANR	1164519	ReturnStatement	return pdo_exception_ce ;	64:1:2120:2143	1164516	0	True				
ANR	1164520	Identifier	pdo_exception_ce		1164516	0					
ANR	1164521	ReturnType	PDO_API zend_class_entry *		1164516	1					
ANR	1164522	Identifier	php_pdo_get_exception		1164516	2					
ANR	1164523	ParameterList			1164516	3					
ANR	1164524	CFGEntryNode	ENTRY		1164516		True				
ANR	1164525	CFGExitNode	EXIT		1164516		True				
ANR	1164526	Symbol	pdo_exception_ce		1164516						
ANR	1164527	Function	php_pdo_str_tolower_dup	67:0:2148:2300							
ANR	1164528	FunctionDef	"php_pdo_str_tolower_dup (const char * src , int len)"		1164527	0					
ANR	1164529	CompoundStatement		68:0:2212:2300	1164527	0					
ANR	1164530	IdentifierDeclStatement	char * dest = emalloc ( len + 1 ) ;	69:1:2215:2244	1164527	0	True				
ANR	1164531	IdentifierDecl	* dest = emalloc ( len + 1 )		1164527	0					
ANR	1164532	IdentifierDeclType	char *		1164527	0					
ANR	1164533	Identifier	dest		1164527	1					
ANR	1164534	AssignmentExpression	* dest = emalloc ( len + 1 )		1164527	2		=			
ANR	1164535	Identifier	dest		1164527	0					
ANR	1164536	CallExpression	emalloc ( len + 1 )		1164527	1					
ANR	1164537	Callee	emalloc		1164527	0					
ANR	1164538	Identifier	emalloc		1164527	0					
ANR	1164539	ArgumentList	len + 1		1164527	1					
ANR	1164540	Argument	len + 1		1164527	0					
ANR	1164541	AdditiveExpression	len + 1		1164527	0		+			
ANR	1164542	Identifier	len		1164527	0					
ANR	1164543	PrimaryExpression	1		1164527	1					
ANR	1164544	ExpressionStatement	"zend_str_tolower_copy ( dest , src , len )"	70:1:2247:2284	1164527	1	True				
ANR	1164545	CallExpression	"zend_str_tolower_copy ( dest , src , len )"		1164527	0					
ANR	1164546	Callee	zend_str_tolower_copy		1164527	0					
ANR	1164547	Identifier	zend_str_tolower_copy		1164527	0					
ANR	1164548	ArgumentList	dest		1164527	1					
ANR	1164549	Argument	dest		1164527	0					
ANR	1164550	Identifier	dest		1164527	0					
ANR	1164551	Argument	src		1164527	1					
ANR	1164552	Identifier	src		1164527	0					
ANR	1164553	Argument	len		1164527	2					
ANR	1164554	Identifier	len		1164527	0					
ANR	1164555	ReturnStatement	return dest ;	71:1:2287:2298	1164527	2	True				
ANR	1164556	Identifier	dest		1164527	0					
ANR	1164557	ReturnType	PDO_API char *		1164527	1					
ANR	1164558	Identifier	php_pdo_str_tolower_dup		1164527	2					
ANR	1164559	ParameterList	"const char * src , int len"		1164527	3					
ANR	1164560	Parameter	const char * src	67:38:2186:2200	1164527	0	True				
ANR	1164561	ParameterType	const char *		1164527	0					
ANR	1164562	Identifier	src		1164527	1					
ANR	1164563	Parameter	int len	67:55:2203:2209	1164527	1	True				
ANR	1164564	ParameterType	int		1164527	0					
ANR	1164565	Identifier	len		1164527	1					
ANR	1164566	CFGEntryNode	ENTRY		1164527		True				
ANR	1164567	CFGExitNode	EXIT		1164527		True				
ANR	1164568	Symbol	emalloc		1164527						
ANR	1164569	Symbol	len		1164527						
ANR	1164570	Symbol	src		1164527						
ANR	1164571	Symbol	dest		1164527						
ANR	1164572	Function	php_pdo_get_exception_base	74:0:2303:2984							
ANR	1164573	FunctionDef	php_pdo_get_exception_base (int root TSRMLS_DC)		1164572	0					
ANR	1164574	CompoundStatement		75:0:2376:2984	1164572	0					
ANR	1164575	IfStatement	if ( ! root )		1164572	0					
ANR	1164576	Condition	! root	77:5:2525:2529	1164572	0	True				
ANR	1164577	UnaryOperationExpression	! root		1164572	0					
ANR	1164578	UnaryOperator	!		1164572	0					
ANR	1164579	Identifier	root		1164572	1					
ANR	1164580	CompoundStatement		3:12:155:155	1164572	1					
ANR	1164581	IfStatement	if ( ! spl_ce_RuntimeException )		1164572	0					
ANR	1164582	Condition	! spl_ce_RuntimeException	78:6:2540:2563	1164572	0	True				
ANR	1164583	UnaryOperationExpression	! spl_ce_RuntimeException		1164572	0					
ANR	1164584	UnaryOperator	!		1164572	0					
ANR	1164585	Identifier	spl_ce_RuntimeException		1164572	1					
ANR	1164586	CompoundStatement		5:3:194:216	1164572	1					
ANR	1164587	IdentifierDeclStatement	zend_class_entry * * pce ;	79:3:2571:2593	1164572	0	True				
ANR	1164588	IdentifierDecl	* * pce		1164572	0					
ANR	1164589	IdentifierDeclType	zend_class_entry * *		1164572	0					
ANR	1164590	Identifier	pce		1164572	1					
ANR	1164591	IfStatement	"if ( zend_hash_find ( CG ( class_table ) , ""runtimeexception"" , sizeof ( ""RuntimeException"" ) , ( void * * ) & pce ) == SUCCESS )"		1164572	1					
ANR	1164592	Condition	"zend_hash_find ( CG ( class_table ) , ""runtimeexception"" , sizeof ( ""RuntimeException"" ) , ( void * * ) & pce ) == SUCCESS"	81:7:2603:2708	1164572	0	True				
ANR	1164593	EqualityExpression	"zend_hash_find ( CG ( class_table ) , ""runtimeexception"" , sizeof ( ""RuntimeException"" ) , ( void * * ) & pce ) == SUCCESS"		1164572	0		==			
ANR	1164594	CallExpression	"zend_hash_find ( CG ( class_table ) , ""runtimeexception"" , sizeof ( ""RuntimeException"" ) , ( void * * ) & pce )"		1164572	0					
ANR	1164595	Callee	zend_hash_find		1164572	0					
ANR	1164596	Identifier	zend_hash_find		1164572	0					
ANR	1164597	ArgumentList	CG ( class_table )		1164572	1					
ANR	1164598	Argument	CG ( class_table )		1164572	0					
ANR	1164599	CallExpression	CG ( class_table )		1164572	0					
ANR	1164600	Callee	CG		1164572	0					
ANR	1164601	Identifier	CG		1164572	0					
ANR	1164602	ArgumentList	class_table		1164572	1					
ANR	1164603	Argument	class_table		1164572	0					
ANR	1164604	Identifier	class_table		1164572	0					
ANR	1164605	Argument	"""runtimeexception"""		1164572	1					
ANR	1164606	PrimaryExpression	"""runtimeexception"""		1164572	0					
ANR	1164607	Argument	"sizeof ( ""RuntimeException"" )"		1164572	2					
ANR	1164608	SizeofExpression	"sizeof ( ""RuntimeException"" )"		1164572	0					
ANR	1164609	Sizeof	sizeof		1164572	0					
ANR	1164610	PrimaryExpression	"""RuntimeException"""		1164572	1					
ANR	1164611	Argument	( void * * ) & pce		1164572	3					
ANR	1164612	CastExpression	( void * * ) & pce		1164572	0					
ANR	1164613	CastTarget	void * *		1164572	0					
ANR	1164614	UnaryOperationExpression	& pce		1164572	1					
ANR	1164615	UnaryOperator	&		1164572	0					
ANR	1164616	Identifier	pce		1164572	1					
ANR	1164617	Identifier	SUCCESS		1164572	1					
ANR	1164618	CompoundStatement		7:115:334:334	1164572	1					
ANR	1164619	ExpressionStatement	spl_ce_RuntimeException = * pce	82:4:2717:2747	1164572	0	True				
ANR	1164620	AssignmentExpression	spl_ce_RuntimeException = * pce		1164572	0		=			
ANR	1164621	Identifier	spl_ce_RuntimeException		1164572	0					
ANR	1164622	UnaryOperationExpression	* pce		1164572	1					
ANR	1164623	UnaryOperator	*		1164572	0					
ANR	1164624	Identifier	pce		1164572	1					
ANR	1164625	ReturnStatement	return * pce ;	83:4:2753:2764	1164572	1	True				
ANR	1164626	UnaryOperationExpression	* pce		1164572	0					
ANR	1164627	UnaryOperator	*		1164572	0					
ANR	1164628	Identifier	pce		1164572	1					
ANR	1164629	ElseStatement	else		1164572	0					
ANR	1164630	CompoundStatement		11:9:403:403	1164572	0					
ANR	1164631	ReturnStatement	return spl_ce_RuntimeException ;	86:3:2785:2815	1164572	0	True				
ANR	1164632	Identifier	spl_ce_RuntimeException		1164572	0					
ANR	1164633	ReturnStatement	return zend_exception_get_default ( ) ;	91:1:2888:2923	1164572	1	True				
ANR	1164634	CallExpression	zend_exception_get_default ( )		1164572	0					
ANR	1164635	Callee	zend_exception_get_default		1164572	0					
ANR	1164636	Identifier	zend_exception_get_default		1164572	0					
ANR	1164637	ArgumentList			1164572	1					
ANR	1164638	ReturnType	PDO_API zend_class_entry *		1164572	1					
ANR	1164639	Identifier	php_pdo_get_exception_base		1164572	2					
ANR	1164640	ParameterList	int root TSRMLS_DC		1164572	3					
ANR	1164641	Parameter	int root TSRMLS_DC	74:53:2356:2373	1164572	0	True				
ANR	1164642	ParameterType	int root		1164572	0					
ANR	1164643	Identifier	TSRMLS_DC		1164572	1					
ANR	1164644	CFGEntryNode	ENTRY		1164572		True				
ANR	1164645	CFGExitNode	EXIT		1164572		True				
ANR	1164646	Symbol	zend_hash_find		1164572						
ANR	1164647	Symbol	pce		1164572						
ANR	1164648	Symbol	SUCCESS		1164572						
ANR	1164649	Symbol	CG		1164572						
ANR	1164650	Symbol	root		1164572						
ANR	1164651	Symbol	zend_exception_get_default		1164572						
ANR	1164652	Symbol	spl_ce_RuntimeException		1164572						
ANR	1164653	Symbol	class_table		1164572						
ANR	1164654	Symbol	* pce		1164572						
ANR	1164655	Symbol	TSRMLS_DC		1164572						
ANR	1164656	Symbol	& pce		1164572						
ANR	1164657	DeclStmt									
ANR	1164658	Decl							zend_class_entry	zend_class_entry *	pdo_dbh_ce
ANR	1164659	Decl							zend_class_entry	zend_class_entry *	pdo_dbstmt_ce
ANR	1164660	Decl							zend_class_entry	zend_class_entry *	pdo_row_ce
ANR	1164661	DeclStmt									
ANR	1164662	Decl							HashPosition	HashPosition	pos
ANR	1164663	DeclStmt									
ANR	1164664	Decl							pdo_driver_t	pdo_driver_t * *	pdriver
ANR	1164665	DeclStmt									
ANR	1164666	Decl							const zend_function_entry	const zend_function_entry [ ]	pdo_functions
ANR	1164667	DeclStmt									
ANR	1164668	Decl							const zend_module_dep	const zend_module_dep [ ]	pdo_deps
ANR	1164669	DeclStmt									
ANR	1164670	Decl							zend_module_entry	zend_module_entry	pdo_module_entry
ANR	1164671	Function	php_pdo_register_driver	181:0:4715:5321							
ANR	1164672	FunctionDef	php_pdo_register_driver (pdo_driver_t * driver)		1164671	0					
ANR	1164673	CompoundStatement		182:0:4773:5321	1164671	0					
ANR	1164674	IfStatement	if ( driver -> api_version != PDO_DRIVER_API )		1164671	0					
ANR	1164675	Condition	driver -> api_version != PDO_DRIVER_API	183:5:4780:4816	1164671	0	True				
ANR	1164676	EqualityExpression	driver -> api_version != PDO_DRIVER_API		1164671	0		!=			
ANR	1164677	PtrMemberAccess	driver -> api_version		1164671	0					
ANR	1164678	Identifier	driver		1164671	0					
ANR	1164679	Identifier	api_version		1164671	1					
ANR	1164680	Identifier	PDO_DRIVER_API		1164671	1					
ANR	1164681	CompoundStatement		2:44:45:45	1164671	1					
ANR	1164682	ExpressionStatement	"zend_error ( E_ERROR , ""PDO: driver %s requires PDO API version %ld; this is PDO version %d"" , driver -> driver_name , driver -> api_version , PDO_DRIVER_API )"	184:2:4823:4974	1164671	0	True				
ANR	1164683	CallExpression	"zend_error ( E_ERROR , ""PDO: driver %s requires PDO API version %ld; this is PDO version %d"" , driver -> driver_name , driver -> api_version , PDO_DRIVER_API )"		1164671	0					
ANR	1164684	Callee	zend_error		1164671	0					
ANR	1164685	Identifier	zend_error		1164671	0					
ANR	1164686	ArgumentList	E_ERROR		1164671	1					
ANR	1164687	Argument	E_ERROR		1164671	0					
ANR	1164688	Identifier	E_ERROR		1164671	0					
ANR	1164689	Argument	"""PDO: driver %s requires PDO API version %ld; this is PDO version %d"""		1164671	1					
ANR	1164690	PrimaryExpression	"""PDO: driver %s requires PDO API version %ld; this is PDO version %d"""		1164671	0					
ANR	1164691	Argument	driver -> driver_name		1164671	2					
ANR	1164692	PtrMemberAccess	driver -> driver_name		1164671	0					
ANR	1164693	Identifier	driver		1164671	0					
ANR	1164694	Identifier	driver_name		1164671	1					
ANR	1164695	Argument	driver -> api_version		1164671	3					
ANR	1164696	PtrMemberAccess	driver -> api_version		1164671	0					
ANR	1164697	Identifier	driver		1164671	0					
ANR	1164698	Identifier	api_version		1164671	1					
ANR	1164699	Argument	PDO_DRIVER_API		1164671	4					
ANR	1164700	Identifier	PDO_DRIVER_API		1164671	0					
ANR	1164701	ReturnStatement	return FAILURE ;	186:2:4978:4992	1164671	1	True				
ANR	1164702	Identifier	FAILURE		1164671	0					
ANR	1164703	IfStatement	"if ( ! zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) ) )"		1164671	1					
ANR	1164704	Condition	"! zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) )"	188:5:5002:5058	1164671	0	True				
ANR	1164705	UnaryOperationExpression	"! zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) )"		1164671	0					
ANR	1164706	UnaryOperator	!		1164671	0					
ANR	1164707	CallExpression	"zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) )"		1164671	1					
ANR	1164708	Callee	zend_hash_exists		1164671	0					
ANR	1164709	Identifier	zend_hash_exists		1164671	0					
ANR	1164710	ArgumentList	& module_registry		1164671	1					
ANR	1164711	Argument	& module_registry		1164671	0					
ANR	1164712	UnaryOperationExpression	& module_registry		1164671	0					
ANR	1164713	UnaryOperator	&		1164671	0					
ANR	1164714	Identifier	module_registry		1164671	1					
ANR	1164715	Argument	"""pdo"""		1164671	1					
ANR	1164716	PrimaryExpression	"""pdo"""		1164671	0					
ANR	1164717	Argument	"sizeof ( ""pdo"" )"		1164671	2					
ANR	1164718	SizeofExpression	"sizeof ( ""pdo"" )"		1164671	0					
ANR	1164719	Sizeof	sizeof		1164671	0					
ANR	1164720	PrimaryExpression	"""pdo"""		1164671	1					
ANR	1164721	CompoundStatement		7:64:287:287	1164671	1					
ANR	1164722	ExpressionStatement	"zend_error ( E_ERROR , ""You MUST load PDO before loading any PDO drivers"" )"	189:2:5065:5136	1164671	0	True				
ANR	1164723	CallExpression	"zend_error ( E_ERROR , ""You MUST load PDO before loading any PDO drivers"" )"		1164671	0					
ANR	1164724	Callee	zend_error		1164671	0					
ANR	1164725	Identifier	zend_error		1164671	0					
ANR	1164726	ArgumentList	E_ERROR		1164671	1					
ANR	1164727	Argument	E_ERROR		1164671	0					
ANR	1164728	Identifier	E_ERROR		1164671	0					
ANR	1164729	Argument	"""You MUST load PDO before loading any PDO drivers"""		1164671	1					
ANR	1164730	PrimaryExpression	"""You MUST load PDO before loading any PDO drivers"""		1164671	0					
ANR	1164731	ReturnStatement	return FAILURE ;	190:2:5140:5154	1164671	1	True				
ANR	1164732	Identifier	FAILURE		1164671	0					
ANR	1164733	ReturnStatement	"return zend_hash_add ( & pdo_driver_hash , ( char * ) driver -> driver_name , driver -> driver_name_len , ( void * * ) & driver , sizeof ( pdo_driver_t * ) , NULL ) ;"	193:1:5178:5319	1164671	2	True				
ANR	1164734	CallExpression	"zend_hash_add ( & pdo_driver_hash , ( char * ) driver -> driver_name , driver -> driver_name_len , ( void * * ) & driver , sizeof ( pdo_driver_t * ) , NULL )"		1164671	0					
ANR	1164735	Callee	zend_hash_add		1164671	0					
ANR	1164736	Identifier	zend_hash_add		1164671	0					
ANR	1164737	ArgumentList	& pdo_driver_hash		1164671	1					
ANR	1164738	Argument	& pdo_driver_hash		1164671	0					
ANR	1164739	UnaryOperationExpression	& pdo_driver_hash		1164671	0					
ANR	1164740	UnaryOperator	&		1164671	0					
ANR	1164741	Identifier	pdo_driver_hash		1164671	1					
ANR	1164742	Argument	( char * ) driver -> driver_name		1164671	1					
ANR	1164743	CastExpression	( char * ) driver -> driver_name		1164671	0					
ANR	1164744	CastTarget	char *		1164671	0					
ANR	1164745	PtrMemberAccess	driver -> driver_name		1164671	1					
ANR	1164746	Identifier	driver		1164671	0					
ANR	1164747	Identifier	driver_name		1164671	1					
ANR	1164748	Argument	driver -> driver_name_len		1164671	2					
ANR	1164749	PtrMemberAccess	driver -> driver_name_len		1164671	0					
ANR	1164750	Identifier	driver		1164671	0					
ANR	1164751	Identifier	driver_name_len		1164671	1					
ANR	1164752	Argument	( void * * ) & driver		1164671	3					
ANR	1164753	CastExpression	( void * * ) & driver		1164671	0					
ANR	1164754	CastTarget	void * *		1164671	0					
ANR	1164755	UnaryOperationExpression	& driver		1164671	1					
ANR	1164756	UnaryOperator	&		1164671	0					
ANR	1164757	Identifier	driver		1164671	1					
ANR	1164758	Argument	sizeof ( pdo_driver_t * )		1164671	4					
ANR	1164759	SizeofExpression	sizeof ( pdo_driver_t * )		1164671	0					
ANR	1164760	Sizeof	sizeof		1164671	0					
ANR	1164761	SizeofOperand	pdo_driver_t *		1164671	1					
ANR	1164762	Argument	NULL		1164671	5					
ANR	1164763	Identifier	NULL		1164671	0					
ANR	1164764	ReturnType	PDO_API int		1164671	1					
ANR	1164765	Identifier	php_pdo_register_driver		1164671	2					
ANR	1164766	ParameterList	pdo_driver_t * driver		1164671	3					
ANR	1164767	Parameter	pdo_driver_t * driver	181:36:4751:4770	1164671	0	True				
ANR	1164768	ParameterType	pdo_driver_t *		1164671	0					
ANR	1164769	Identifier	driver		1164671	1					
ANR	1164770	CFGEntryNode	ENTRY		1164671		True				
ANR	1164771	CFGExitNode	EXIT		1164671		True				
ANR	1164772	Symbol	NULL		1164671						
ANR	1164773	Symbol	& module_registry		1164671						
ANR	1164774	Symbol	zend_hash_exists		1164671						
ANR	1164775	Symbol	* driver		1164671						
ANR	1164776	Symbol	driver -> driver_name_len		1164671						
ANR	1164777	Symbol	FAILURE		1164671						
ANR	1164778	Symbol	PDO_DRIVER_API		1164671						
ANR	1164779	Symbol	& driver		1164671						
ANR	1164780	Symbol	E_ERROR		1164671						
ANR	1164781	Symbol	driver		1164671						
ANR	1164782	Symbol	zend_hash_add		1164671						
ANR	1164783	Symbol	driver -> api_version		1164671						
ANR	1164784	Symbol	& pdo_driver_hash		1164671						
ANR	1164785	Symbol	driver -> driver_name		1164671						
ANR	1164786	Function	php_pdo_unregister_driver	197:0:5324:5554							
ANR	1164787	FunctionDef	php_pdo_unregister_driver (pdo_driver_t * driver)		1164786	0					
ANR	1164788	CompoundStatement		198:0:5385:5554	1164786	0					
ANR	1164789	IfStatement	"if ( ! zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) ) )"		1164786	0					
ANR	1164790	Condition	"! zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) )"	199:5:5392:5448	1164786	0	True				
ANR	1164791	UnaryOperationExpression	"! zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) )"		1164786	0					
ANR	1164792	UnaryOperator	!		1164786	0					
ANR	1164793	CallExpression	"zend_hash_exists ( & module_registry , ""pdo"" , sizeof ( ""pdo"" ) )"		1164786	1					
ANR	1164794	Callee	zend_hash_exists		1164786	0					
ANR	1164795	Identifier	zend_hash_exists		1164786	0					
ANR	1164796	ArgumentList	& module_registry		1164786	1					
ANR	1164797	Argument	& module_registry		1164786	0					
ANR	1164798	UnaryOperationExpression	& module_registry		1164786	0					
ANR	1164799	UnaryOperator	&		1164786	0					
ANR	1164800	Identifier	module_registry		1164786	1					
ANR	1164801	Argument	"""pdo"""		1164786	1					
ANR	1164802	PrimaryExpression	"""pdo"""		1164786	0					
ANR	1164803	Argument	"sizeof ( ""pdo"" )"		1164786	2					
ANR	1164804	SizeofExpression	"sizeof ( ""pdo"" )"		1164786	0					
ANR	1164805	Sizeof	sizeof		1164786	0					
ANR	1164806	PrimaryExpression	"""pdo"""		1164786	1					
ANR	1164807	CompoundStatement		2:64:65:65	1164786	1					
ANR	1164808	ReturnStatement	return ;	200:2:5455:5461	1164786	0	True				
ANR	1164809	ExpressionStatement	"zend_hash_del ( & pdo_driver_hash , ( char * ) driver -> driver_name , driver -> driver_name_len )"	203:1:5468:5552	1164786	1	True				
ANR	1164810	CallExpression	"zend_hash_del ( & pdo_driver_hash , ( char * ) driver -> driver_name , driver -> driver_name_len )"		1164786	0					
ANR	1164811	Callee	zend_hash_del		1164786	0					
ANR	1164812	Identifier	zend_hash_del		1164786	0					
ANR	1164813	ArgumentList	& pdo_driver_hash		1164786	1					
ANR	1164814	Argument	& pdo_driver_hash		1164786	0					
ANR	1164815	UnaryOperationExpression	& pdo_driver_hash		1164786	0					
ANR	1164816	UnaryOperator	&		1164786	0					
ANR	1164817	Identifier	pdo_driver_hash		1164786	1					
ANR	1164818	Argument	( char * ) driver -> driver_name		1164786	1					
ANR	1164819	CastExpression	( char * ) driver -> driver_name		1164786	0					
ANR	1164820	CastTarget	char *		1164786	0					
ANR	1164821	PtrMemberAccess	driver -> driver_name		1164786	1					
ANR	1164822	Identifier	driver		1164786	0					
ANR	1164823	Identifier	driver_name		1164786	1					
ANR	1164824	Argument	driver -> driver_name_len		1164786	2					
ANR	1164825	PtrMemberAccess	driver -> driver_name_len		1164786	0					
ANR	1164826	Identifier	driver		1164786	0					
ANR	1164827	Identifier	driver_name_len		1164786	1					
ANR	1164828	ReturnType	PDO_API void		1164786	1					
ANR	1164829	Identifier	php_pdo_unregister_driver		1164786	2					
ANR	1164830	ParameterList	pdo_driver_t * driver		1164786	3					
ANR	1164831	Parameter	pdo_driver_t * driver	197:39:5363:5382	1164786	0	True				
ANR	1164832	ParameterType	pdo_driver_t *		1164786	0					
ANR	1164833	Identifier	driver		1164786	1					
ANR	1164834	CFGEntryNode	ENTRY		1164786		True				
ANR	1164835	CFGExitNode	EXIT		1164786		True				
ANR	1164836	Symbol	driver		1164786						
ANR	1164837	Symbol	& module_registry		1164786						
ANR	1164838	Symbol	& pdo_driver_hash		1164786						
ANR	1164839	Symbol	zend_hash_exists		1164786						
ANR	1164840	Symbol	* driver		1164786						
ANR	1164841	Symbol	driver -> driver_name		1164786						
ANR	1164842	Symbol	driver -> driver_name_len		1164786						
ANR	1164843	Function	pdo_find_driver	206:0:5557:5761							
ANR	1164844	FunctionDef	"pdo_find_driver (const char * name , int namelen)"		1164843	0					
ANR	1164845	CompoundStatement		207:0:5618:5761	1164843	0					
ANR	1164846	IdentifierDeclStatement	pdo_driver_t * * driver = NULL ;	208:1:5621:5649	1164843	0	True				
ANR	1164847	IdentifierDecl	* * driver = NULL		1164843	0					
ANR	1164848	IdentifierDeclType	pdo_driver_t * *		1164843	0					
ANR	1164849	Identifier	driver		1164843	1					
ANR	1164850	AssignmentExpression	* * driver = NULL		1164843	2		=			
ANR	1164851	Identifier	NULL		1164843	0					
ANR	1164852	Identifier	NULL		1164843	1					
ANR	1164853	ExpressionStatement	"zend_hash_find ( & pdo_driver_hash , ( char * ) name , namelen , ( void * * ) & driver )"	210:1:5654:5725	1164843	1	True				
ANR	1164854	CallExpression	"zend_hash_find ( & pdo_driver_hash , ( char * ) name , namelen , ( void * * ) & driver )"		1164843	0					
ANR	1164855	Callee	zend_hash_find		1164843	0					
ANR	1164856	Identifier	zend_hash_find		1164843	0					
ANR	1164857	ArgumentList	& pdo_driver_hash		1164843	1					
ANR	1164858	Argument	& pdo_driver_hash		1164843	0					
ANR	1164859	UnaryOperationExpression	& pdo_driver_hash		1164843	0					
ANR	1164860	UnaryOperator	&		1164843	0					
ANR	1164861	Identifier	pdo_driver_hash		1164843	1					
ANR	1164862	Argument	( char * ) name		1164843	1					
ANR	1164863	CastExpression	( char * ) name		1164843	0					
ANR	1164864	CastTarget	char *		1164843	0					
ANR	1164865	Identifier	name		1164843	1					
ANR	1164866	Argument	namelen		1164843	2					
ANR	1164867	Identifier	namelen		1164843	0					
ANR	1164868	Argument	( void * * ) & driver		1164843	3					
ANR	1164869	CastExpression	( void * * ) & driver		1164843	0					
ANR	1164870	CastTarget	void * *		1164843	0					
ANR	1164871	UnaryOperationExpression	& driver		1164843	1					
ANR	1164872	UnaryOperator	&		1164843	0					
ANR	1164873	Identifier	driver		1164843	1					
ANR	1164874	ReturnStatement	return driver ? * driver : NULL ;	212:1:5729:5759	1164843	2	True				
ANR	1164875	ConditionalExpression	driver ? * driver : NULL		1164843	0					
ANR	1164876	Condition	driver		1164843	0					
ANR	1164877	Identifier	driver		1164843	0					
ANR	1164878	UnaryOperationExpression	* driver		1164843	1					
ANR	1164879	UnaryOperator	*		1164843	0					
ANR	1164880	Identifier	driver		1164843	1					
ANR	1164881	Identifier	NULL		1164843	2					
ANR	1164882	ReturnType	pdo_driver_t *		1164843	1					
ANR	1164883	Identifier	pdo_find_driver		1164843	2					
ANR	1164884	ParameterList	"const char * name , int namelen"		1164843	3					
ANR	1164885	Parameter	const char * name	206:30:5587:5602	1164843	0	True				
ANR	1164886	ParameterType	const char *		1164843	0					
ANR	1164887	Identifier	name		1164843	1					
ANR	1164888	Parameter	int namelen	206:48:5605:5615	1164843	1	True				
ANR	1164889	ParameterType	int		1164843	0					
ANR	1164890	Identifier	namelen		1164843	1					
ANR	1164891	CFGEntryNode	ENTRY		1164843		True				
ANR	1164892	CFGExitNode	EXIT		1164843		True				
ANR	1164893	Symbol	& driver		1164843						
ANR	1164894	Symbol	NULL		1164843						
ANR	1164895	Symbol	driver		1164843						
ANR	1164896	Symbol	name		1164843						
ANR	1164897	Symbol	& pdo_driver_hash		1164843						
ANR	1164898	Symbol	namelen		1164843						
ANR	1164899	Symbol	* driver		1164843						
ANR	1164900	Function	php_pdo_parse_data_source	215:0:5764:7699							
ANR	1164901	FunctionDef	"php_pdo_parse_data_source (const char * data_source , unsigned long data_source_len , struct pdo_data_src_parser * parsed , int nparams)"		1164900	0					
ANR	1164902	CompoundStatement		218:0:5911:7699	1164900	0					
ANR	1164903	IdentifierDeclStatement	"int i , j ;"	219:1:5914:5922	1164900	0	True				
ANR	1164904	IdentifierDecl	i		1164900	0					
ANR	1164905	IdentifierDeclType	int		1164900	0					
ANR	1164906	Identifier	i		1164900	1					
ANR	1164907	IdentifierDecl	j		1164900	1					
ANR	1164908	IdentifierDeclType	int		1164900	0					
ANR	1164909	Identifier	j		1164900	1					
ANR	1164910	IdentifierDeclStatement	int valstart = - 1 ;	220:1:5925:5942	1164900	1	True				
ANR	1164911	IdentifierDecl	valstart = - 1		1164900	0					
ANR	1164912	IdentifierDeclType	int		1164900	0					
ANR	1164913	Identifier	valstart		1164900	1					
ANR	1164914	AssignmentExpression	valstart = - 1		1164900	2		=			
ANR	1164915	Identifier	valstart		1164900	0					
ANR	1164916	UnaryOperationExpression	- 1		1164900	1					
ANR	1164917	UnaryOperator	-		1164900	0					
ANR	1164918	PrimaryExpression	1		1164900	1					
ANR	1164919	IdentifierDeclStatement	int semi = - 1 ;	221:1:5945:5958	1164900	2	True				
ANR	1164920	IdentifierDecl	semi = - 1		1164900	0					
ANR	1164921	IdentifierDeclType	int		1164900	0					
ANR	1164922	Identifier	semi		1164900	1					
ANR	1164923	AssignmentExpression	semi = - 1		1164900	2		=			
ANR	1164924	Identifier	semi		1164900	0					
ANR	1164925	UnaryOperationExpression	- 1		1164900	1					
ANR	1164926	UnaryOperator	-		1164900	0					
ANR	1164927	PrimaryExpression	1		1164900	1					
ANR	1164928	IdentifierDeclStatement	int optstart = 0 ;	222:1:5961:5977	1164900	3	True				
ANR	1164929	IdentifierDecl	optstart = 0		1164900	0					
ANR	1164930	IdentifierDeclType	int		1164900	0					
ANR	1164931	Identifier	optstart		1164900	1					
ANR	1164932	AssignmentExpression	optstart = 0		1164900	2		=			
ANR	1164933	Identifier	optstart		1164900	0					
ANR	1164934	PrimaryExpression	0		1164900	1					
ANR	1164935	IdentifierDeclStatement	int nlen ;	223:1:5980:5988	1164900	4	True				
ANR	1164936	IdentifierDecl	nlen		1164900	0					
ANR	1164937	IdentifierDeclType	int		1164900	0					
ANR	1164938	Identifier	nlen		1164900	1					
ANR	1164939	IdentifierDeclStatement	int n_matches = 0 ;	224:1:5991:6008	1164900	5	True				
ANR	1164940	IdentifierDecl	n_matches = 0		1164900	0					
ANR	1164941	IdentifierDeclType	int		1164900	0					
ANR	1164942	Identifier	n_matches		1164900	1					
ANR	1164943	AssignmentExpression	n_matches = 0		1164900	2		=			
ANR	1164944	Identifier	n_matches		1164900	0					
ANR	1164945	PrimaryExpression	0		1164900	1					
ANR	1164946	IdentifierDeclStatement	int n_semicolumns = 0 ;	225:1:6011:6032	1164900	6	True				
ANR	1164947	IdentifierDecl	n_semicolumns = 0		1164900	0					
ANR	1164948	IdentifierDeclType	int		1164900	0					
ANR	1164949	Identifier	n_semicolumns		1164900	1					
ANR	1164950	AssignmentExpression	n_semicolumns = 0		1164900	2		=			
ANR	1164951	Identifier	n_semicolumns		1164900	0					
ANR	1164952	PrimaryExpression	0		1164900	1					
ANR	1164953	ExpressionStatement	i = 0	227:1:6036:6041	1164900	7	True				
ANR	1164954	AssignmentExpression	i = 0		1164900	0		=			
ANR	1164955	Identifier	i		1164900	0					
ANR	1164956	PrimaryExpression	0		1164900	1					
ANR	1164957	WhileStatement	while ( i < data_source_len )		1164900	8					
ANR	1164958	Condition	i < data_source_len	228:8:6051:6069	1164900	0	True				
ANR	1164959	RelationalExpression	i < data_source_len		1164900	0		<			
ANR	1164960	Identifier	i		1164900	0					
ANR	1164961	Identifier	data_source_len		1164900	1					
ANR	1164962	CompoundStatement		11:29:160:160	1164900	1					
ANR	1164963	IfStatement	if ( data_source [ i ] == '\\0' )		1164900	0					
ANR	1164964	Condition	data_source [ i ] == '\\0'	231:6:6107:6128	1164900	0	True				
ANR	1164965	EqualityExpression	data_source [ i ] == '\\0'		1164900	0		==			
ANR	1164966	ArrayIndexing	data_source [ i ]		1164900	0					
ANR	1164967	Identifier	data_source		1164900	0					
ANR	1164968	Identifier	i		1164900	1					
ANR	1164969	PrimaryExpression	'\\0'		1164900	1					
ANR	1164970	CompoundStatement		14:30:219:219	1164900	1					
ANR	1164971	BreakStatement	break ;	232:3:6136:6141	1164900	0	True				
ANR	1164972	IfStatement	if ( data_source [ i ] != '=' )		1164900	1					
ANR	1164973	Condition	data_source [ i ] != '='	235:6:6154:6174	1164900	0	True				
ANR	1164974	EqualityExpression	data_source [ i ] != '='		1164900	0		!=			
ANR	1164975	ArrayIndexing	data_source [ i ]		1164900	0					
ANR	1164976	Identifier	data_source		1164900	0					
ANR	1164977	Identifier	i		1164900	1					
ANR	1164978	PrimaryExpression	'='		1164900	1					
ANR	1164979	CompoundStatement		18:29:265:265	1164900	1					
ANR	1164980	ExpressionStatement	++ i	236:3:6182:6185	1164900	0	True				
ANR	1164981	UnaryExpression	++ i		1164900	0					
ANR	1164982	IncDec	++		1164900	0					
ANR	1164983	Identifier	i		1164900	1					
ANR	1164984	ContinueStatement	continue ;	237:3:6190:6198	1164900	1	True				
ANR	1164985	ExpressionStatement	valstart = ++ i	240:2:6207:6221	1164900	2	True				
ANR	1164986	AssignmentExpression	valstart = ++ i		1164900	0		=			
ANR	1164987	Identifier	valstart		1164900	0					
ANR	1164988	UnaryExpression	++ i		1164900	1					
ANR	1164989	IncDec	++		1164900	0					
ANR	1164990	Identifier	i		1164900	1					
ANR	1164991	ExpressionStatement	semi = - 1	243:2:6282:6291	1164900	3	True				
ANR	1164992	AssignmentExpression	semi = - 1		1164900	0		=			
ANR	1164993	Identifier	semi		1164900	0					
ANR	1164994	UnaryOperationExpression	- 1		1164900	1					
ANR	1164995	UnaryOperator	-		1164900	0					
ANR	1164996	PrimaryExpression	1		1164900	1					
ANR	1164997	ExpressionStatement	n_semicolumns = 0	244:2:6295:6312	1164900	4	True				
ANR	1164998	AssignmentExpression	n_semicolumns = 0		1164900	0		=			
ANR	1164999	Identifier	n_semicolumns		1164900	0					
ANR	1165000	PrimaryExpression	0		1164900	1					
ANR	1165001	WhileStatement	while ( i < data_source_len )		1164900	5					
ANR	1165002	Condition	i < data_source_len	245:9:6323:6341	1164900	0	True				
ANR	1165003	RelationalExpression	i < data_source_len		1164900	0		<			
ANR	1165004	Identifier	i		1164900	0					
ANR	1165005	Identifier	data_source_len		1164900	1					
ANR	1165006	CompoundStatement		28:30:432:432	1164900	1					
ANR	1165007	IfStatement	if ( data_source [ i ] == '\\0' )		1164900	0					
ANR	1165008	Condition	data_source [ i ] == '\\0'	246:7:6353:6374	1164900	0	True				
ANR	1165009	EqualityExpression	data_source [ i ] == '\\0'		1164900	0		==			
ANR	1165010	ArrayIndexing	data_source [ i ]		1164900	0					
ANR	1165011	Identifier	data_source		1164900	0					
ANR	1165012	Identifier	i		1164900	1					
ANR	1165013	PrimaryExpression	'\\0'		1164900	1					
ANR	1165014	CompoundStatement		29:31:465:465	1164900	1					
ANR	1165015	ExpressionStatement	semi = i ++	247:4:6383:6393	1164900	0	True				
ANR	1165016	AssignmentExpression	semi = i ++		1164900	0		=			
ANR	1165017	Identifier	semi		1164900	0					
ANR	1165018	PostIncDecOperationExpression	i ++		1164900	1					
ANR	1165019	Identifier	i		1164900	0					
ANR	1165020	IncDec	++		1164900	1					
ANR	1165021	BreakStatement	break ;	248:4:6399:6404	1164900	1	True				
ANR	1165022	IfStatement	if ( data_source [ i ] == ';' )		1164900	1					
ANR	1165023	Condition	data_source [ i ] == ';'	250:7:6418:6438	1164900	0	True				
ANR	1165024	EqualityExpression	data_source [ i ] == ';'		1164900	0		==			
ANR	1165025	ArrayIndexing	data_source [ i ]		1164900	0					
ANR	1165026	Identifier	data_source		1164900	0					
ANR	1165027	Identifier	i		1164900	1					
ANR	1165028	PrimaryExpression	';'		1164900	1					
ANR	1165029	CompoundStatement		33:30:529:529	1164900	1					
ANR	1165030	IfStatement	if ( ( i + 1 >= data_source_len ) || data_source [ i + 1 ] != ';' )		1164900	0					
ANR	1165031	Condition	( i + 1 >= data_source_len ) || data_source [ i + 1 ] != ';'	251:8:6451:6503	1164900	0	True				
ANR	1165032	OrExpression	( i + 1 >= data_source_len ) || data_source [ i + 1 ] != ';'		1164900	0		||			
ANR	1165033	RelationalExpression	i + 1 >= data_source_len		1164900	0		>=			
ANR	1165034	AdditiveExpression	i + 1		1164900	0		+			
ANR	1165035	Identifier	i		1164900	0					
ANR	1165036	PrimaryExpression	1		1164900	1					
ANR	1165037	Identifier	data_source_len		1164900	1					
ANR	1165038	EqualityExpression	data_source [ i + 1 ] != ';'		1164900	1		!=			
ANR	1165039	ArrayIndexing	data_source [ i + 1 ]		1164900	0					
ANR	1165040	Identifier	data_source		1164900	0					
ANR	1165041	AdditiveExpression	i + 1		1164900	1		+			
ANR	1165042	Identifier	i		1164900	0					
ANR	1165043	PrimaryExpression	1		1164900	1					
ANR	1165044	PrimaryExpression	';'		1164900	1					
ANR	1165045	CompoundStatement		34:63:594:594	1164900	1					
ANR	1165046	ExpressionStatement	semi = i ++	252:5:6513:6523	1164900	0	True				
ANR	1165047	AssignmentExpression	semi = i ++		1164900	0		=			
ANR	1165048	Identifier	semi		1164900	0					
ANR	1165049	PostIncDecOperationExpression	i ++		1164900	1					
ANR	1165050	Identifier	i		1164900	0					
ANR	1165051	IncDec	++		1164900	1					
ANR	1165052	BreakStatement	break ;	253:5:6530:6535	1164900	1	True				
ANR	1165053	ElseStatement	else		1164900	0					
ANR	1165054	CompoundStatement		37:11:636:636	1164900	0					
ANR	1165055	ExpressionStatement	n_semicolumns ++	255:5:6555:6570	1164900	0	True				
ANR	1165056	PostIncDecOperationExpression	n_semicolumns ++		1164900	0					
ANR	1165057	Identifier	n_semicolumns		1164900	0					
ANR	1165058	IncDec	++		1164900	1					
ANR	1165059	ExpressionStatement	i += 2	256:5:6578:6584	1164900	1	True				
ANR	1165060	AssignmentExpression	i += 2		1164900	0		+=			
ANR	1165061	Identifier	i		1164900	0					
ANR	1165062	PrimaryExpression	2		1164900	1					
ANR	1165063	ContinueStatement	continue ;	257:5:6591:6599	1164900	2	True				
ANR	1165064	ExpressionStatement	++ i	260:3:6615:6618	1164900	2	True				
ANR	1165065	UnaryExpression	++ i		1164900	0					
ANR	1165066	IncDec	++		1164900	0					
ANR	1165067	Identifier	i		1164900	1					
ANR	1165068	IfStatement	if ( semi == - 1 )		1164900	6					
ANR	1165069	Condition	semi == - 1	263:6:6631:6640	1164900	0	True				
ANR	1165070	EqualityExpression	semi == - 1		1164900	0		==			
ANR	1165071	Identifier	semi		1164900	0					
ANR	1165072	UnaryOperationExpression	- 1		1164900	1					
ANR	1165073	UnaryOperator	-		1164900	0					
ANR	1165074	PrimaryExpression	1		1164900	1					
ANR	1165075	CompoundStatement		46:18:731:731	1164900	1					
ANR	1165076	ExpressionStatement	semi = i	264:3:6648:6656	1164900	0	True				
ANR	1165077	AssignmentExpression	semi = i		1164900	0		=			
ANR	1165078	Identifier	semi		1164900	0					
ANR	1165079	Identifier	i		1164900	1					
ANR	1165080	ExpressionStatement	nlen = valstart - optstart - 1	268:2:6701:6731	1164900	7	True				
ANR	1165081	AssignmentExpression	nlen = valstart - optstart - 1		1164900	0		=			
ANR	1165082	Identifier	nlen		1164900	0					
ANR	1165083	AdditiveExpression	valstart - optstart - 1		1164900	1		-			
ANR	1165084	Identifier	valstart		1164900	0					
ANR	1165085	AdditiveExpression	optstart - 1		1164900	1		-			
ANR	1165086	Identifier	optstart		1164900	0					
ANR	1165087	PrimaryExpression	1		1164900	1					
ANR	1165088	ForStatement	for ( j = 0 ; j < nparams ; j ++ )		1164900	8					
ANR	1165089	ForInit	j = 0 ;	269:7:6740:6745	1164900	0	True				
ANR	1165090	AssignmentExpression	j = 0		1164900	0		=			
ANR	1165091	Identifier	j		1164900	0					
ANR	1165092	PrimaryExpression	0		1164900	1					
ANR	1165093	Condition	j < nparams	269:14:6747:6757	1164900	1	True				
ANR	1165094	RelationalExpression	j < nparams		1164900	0		<			
ANR	1165095	Identifier	j		1164900	0					
ANR	1165096	Identifier	nparams		1164900	1					
ANR	1165097	PostIncDecOperationExpression	j ++	269:27:6760:6762	1164900	2	True				
ANR	1165098	Identifier	j		1164900	0					
ANR	1165099	IncDec	++		1164900	1					
ANR	1165100	CompoundStatement		52:32:853:853	1164900	3					
ANR	1165101	IfStatement	"if ( 0 == strncmp ( data_source + optstart , parsed [ j ] . optname , nlen ) && parsed [ j ] . optname [ nlen ] == '\\0' )"		1164900	0					
ANR	1165102	Condition	"0 == strncmp ( data_source + optstart , parsed [ j ] . optname , nlen ) && parsed [ j ] . optname [ nlen ] == '\\0'"	270:7:6774:6869	1164900	0	True				
ANR	1165103	AndExpression	"0 == strncmp ( data_source + optstart , parsed [ j ] . optname , nlen ) && parsed [ j ] . optname [ nlen ] == '\\0'"		1164900	0		&&			
ANR	1165104	EqualityExpression	"0 == strncmp ( data_source + optstart , parsed [ j ] . optname , nlen )"		1164900	0		==			
ANR	1165105	PrimaryExpression	0		1164900	0					
ANR	1165106	CallExpression	"strncmp ( data_source + optstart , parsed [ j ] . optname , nlen )"		1164900	1					
ANR	1165107	Callee	strncmp		1164900	0					
ANR	1165108	Identifier	strncmp		1164900	0					
ANR	1165109	ArgumentList	data_source + optstart		1164900	1					
ANR	1165110	Argument	data_source + optstart		1164900	0					
ANR	1165111	AdditiveExpression	data_source + optstart		1164900	0		+			
ANR	1165112	Identifier	data_source		1164900	0					
ANR	1165113	Identifier	optstart		1164900	1					
ANR	1165114	Argument	parsed [ j ] . optname		1164900	1					
ANR	1165115	MemberAccess	parsed [ j ] . optname		1164900	0					
ANR	1165116	ArrayIndexing	parsed [ j ]		1164900	0					
ANR	1165117	Identifier	parsed		1164900	0					
ANR	1165118	Identifier	j		1164900	1					
ANR	1165119	Identifier	optname		1164900	1					
ANR	1165120	Argument	nlen		1164900	2					
ANR	1165121	Identifier	nlen		1164900	0					
ANR	1165122	EqualityExpression	parsed [ j ] . optname [ nlen ] == '\\0'		1164900	1		==			
ANR	1165123	ArrayIndexing	parsed [ j ] . optname [ nlen ]		1164900	0					
ANR	1165124	MemberAccess	parsed [ j ] . optname		1164900	0					
ANR	1165125	ArrayIndexing	parsed [ j ]		1164900	0					
ANR	1165126	Identifier	parsed		1164900	0					
ANR	1165127	Identifier	j		1164900	1					
ANR	1165128	Identifier	optname		1164900	1					
ANR	1165129	Identifier	nlen		1164900	1					
ANR	1165130	PrimaryExpression	'\\0'		1164900	1					
ANR	1165131	CompoundStatement		53:105:960:960	1164900	1					
ANR	1165132	IfStatement	if ( parsed [ j ] . freeme )		1164900	0					
ANR	1165133	Condition	parsed [ j ] . freeme	272:8:6904:6919	1164900	0	True				
ANR	1165134	MemberAccess	parsed [ j ] . freeme		1164900	0					
ANR	1165135	ArrayIndexing	parsed [ j ]		1164900	0					
ANR	1165136	Identifier	parsed		1164900	0					
ANR	1165137	Identifier	j		1164900	1					
ANR	1165138	Identifier	freeme		1164900	1					
ANR	1165139	CompoundStatement		55:26:1010:1010	1164900	1					
ANR	1165140	ExpressionStatement	efree ( parsed [ j ] . optval )	273:5:6929:6952	1164900	0	True				
ANR	1165141	CallExpression	efree ( parsed [ j ] . optval )		1164900	0					
ANR	1165142	Callee	efree		1164900	0					
ANR	1165143	Identifier	efree		1164900	0					
ANR	1165144	ArgumentList	parsed [ j ] . optval		1164900	1					
ANR	1165145	Argument	parsed [ j ] . optval		1164900	0					
ANR	1165146	MemberAccess	parsed [ j ] . optval		1164900	0					
ANR	1165147	ArrayIndexing	parsed [ j ]		1164900	0					
ANR	1165148	Identifier	parsed		1164900	0					
ANR	1165149	Identifier	j		1164900	1					
ANR	1165150	Identifier	optval		1164900	1					
ANR	1165151	IfStatement	if ( n_semicolumns == 0 )		1164900	1					
ANR	1165152	Condition	n_semicolumns == 0	276:8:6969:6986	1164900	0	True				
ANR	1165153	EqualityExpression	n_semicolumns == 0		1164900	0		==			
ANR	1165154	Identifier	n_semicolumns		1164900	0					
ANR	1165155	PrimaryExpression	0		1164900	1					
ANR	1165156	CompoundStatement		59:28:1077:1077	1164900	1					
ANR	1165157	ExpressionStatement	"parsed [ j ] . optval = estrndup ( data_source + valstart , semi - valstart - n_semicolumns )"	277:5:6996:7080	1164900	0	True				
ANR	1165158	AssignmentExpression	"parsed [ j ] . optval = estrndup ( data_source + valstart , semi - valstart - n_semicolumns )"		1164900	0		=			
ANR	1165159	MemberAccess	parsed [ j ] . optval		1164900	0					
ANR	1165160	ArrayIndexing	parsed [ j ]		1164900	0					
ANR	1165161	Identifier	parsed		1164900	0					
ANR	1165162	Identifier	j		1164900	1					
ANR	1165163	Identifier	optval		1164900	1					
ANR	1165164	CallExpression	"estrndup ( data_source + valstart , semi - valstart - n_semicolumns )"		1164900	1					
ANR	1165165	Callee	estrndup		1164900	0					
ANR	1165166	Identifier	estrndup		1164900	0					
ANR	1165167	ArgumentList	data_source + valstart		1164900	1					
ANR	1165168	Argument	data_source + valstart		1164900	0					
ANR	1165169	AdditiveExpression	data_source + valstart		1164900	0		+			
ANR	1165170	Identifier	data_source		1164900	0					
ANR	1165171	Identifier	valstart		1164900	1					
ANR	1165172	Argument	semi - valstart - n_semicolumns		1164900	1					
ANR	1165173	AdditiveExpression	semi - valstart - n_semicolumns		1164900	0		-			
ANR	1165174	Identifier	semi		1164900	0					
ANR	1165175	AdditiveExpression	valstart - n_semicolumns		1164900	1		-			
ANR	1165176	Identifier	valstart		1164900	0					
ANR	1165177	Identifier	n_semicolumns		1164900	1					
ANR	1165178	ElseStatement	else		1164900	0					
ANR	1165179	CompoundStatement		64:5:1273:1332	1164900	0					
ANR	1165180	IdentifierDeclStatement	int vlen = semi - valstart ;	279:5:7100:7126	1164900	0	True				
ANR	1165181	IdentifierDecl	vlen = semi - valstart		1164900	0					
ANR	1165182	IdentifierDeclType	int		1164900	0					
ANR	1165183	Identifier	vlen		1164900	1					
ANR	1165184	AssignmentExpression	vlen = semi - valstart		1164900	2		=			
ANR	1165185	Identifier	vlen		1164900	0					
ANR	1165186	AdditiveExpression	semi - valstart		1164900	1		-			
ANR	1165187	Identifier	semi		1164900	0					
ANR	1165188	Identifier	valstart		1164900	1					
ANR	1165189	IdentifierDeclStatement	const char * orig_val = data_source + valstart ;	280:5:7133:7178	1164900	1	True				
ANR	1165190	IdentifierDecl	* orig_val = data_source + valstart		1164900	0					
ANR	1165191	IdentifierDeclType	const char *		1164900	0					
ANR	1165192	Identifier	orig_val		1164900	1					
ANR	1165193	AssignmentExpression	* orig_val = data_source + valstart		1164900	2		=			
ANR	1165194	Identifier	orig_val		1164900	0					
ANR	1165195	AdditiveExpression	data_source + valstart		1164900	1		+			
ANR	1165196	Identifier	data_source		1164900	0					
ANR	1165197	Identifier	valstart		1164900	1					
ANR	1165198	IdentifierDeclStatement	char * new_val = ( char * ) emalloc ( vlen - n_semicolumns + 1 ) ;	281:5:7185:7244	1164900	2	True				
ANR	1165199	IdentifierDecl	* new_val = ( char * ) emalloc ( vlen - n_semicolumns + 1 )		1164900	0					
ANR	1165200	IdentifierDeclType	char *		1164900	0					
ANR	1165201	Identifier	new_val		1164900	1					
ANR	1165202	AssignmentExpression	* new_val = ( char * ) emalloc ( vlen - n_semicolumns + 1 )		1164900	2		=			
ANR	1165203	Identifier	new_val		1164900	0					
ANR	1165204	CastExpression	( char * ) emalloc ( vlen - n_semicolumns + 1 )		1164900	1					
ANR	1165205	CastTarget	char *		1164900	0					
ANR	1165206	CallExpression	emalloc ( vlen - n_semicolumns + 1 )		1164900	1					
ANR	1165207	Callee	emalloc		1164900	0					
ANR	1165208	Identifier	emalloc		1164900	0					
ANR	1165209	ArgumentList	vlen - n_semicolumns + 1		1164900	1					
ANR	1165210	Argument	vlen - n_semicolumns + 1		1164900	0					
ANR	1165211	AdditiveExpression	vlen - n_semicolumns + 1		1164900	0		-			
ANR	1165212	Identifier	vlen		1164900	0					
ANR	1165213	AdditiveExpression	n_semicolumns + 1		1164900	1		+			
ANR	1165214	Identifier	n_semicolumns		1164900	0					
ANR	1165215	PrimaryExpression	1		1164900	1					
ANR	1165216	ExpressionStatement	parsed [ j ] . optval = new_val	283:5:7256:7282	1164900	3	True				
ANR	1165217	AssignmentExpression	parsed [ j ] . optval = new_val		1164900	0		=			
ANR	1165218	MemberAccess	parsed [ j ] . optval		1164900	0					
ANR	1165219	ArrayIndexing	parsed [ j ]		1164900	0					
ANR	1165220	Identifier	parsed		1164900	0					
ANR	1165221	Identifier	j		1164900	1					
ANR	1165222	Identifier	optval		1164900	1					
ANR	1165223	Identifier	new_val		1164900	1					
ANR	1165224	WhileStatement	while ( vlen && * orig_val )		1164900	4					
ANR	1165225	Condition	vlen && * orig_val	285:12:7297:7313	1164900	0	True				
ANR	1165226	AndExpression	vlen && * orig_val		1164900	0		&&			
ANR	1165227	Identifier	vlen		1164900	0					
ANR	1165228	UnaryOperationExpression	* orig_val		1164900	1					
ANR	1165229	UnaryOperator	*		1164900	0					
ANR	1165230	Identifier	orig_val		1164900	1					
ANR	1165231	CompoundStatement		68:31:1404:1404	1164900	1					
ANR	1165232	ExpressionStatement	* new_val = * orig_val	286:6:7324:7344	1164900	0	True				
ANR	1165233	AssignmentExpression	* new_val = * orig_val		1164900	0		=			
ANR	1165234	UnaryOperationExpression	* new_val		1164900	0					
ANR	1165235	UnaryOperator	*		1164900	0					
ANR	1165236	Identifier	new_val		1164900	1					
ANR	1165237	UnaryOperationExpression	* orig_val		1164900	1					
ANR	1165238	UnaryOperator	*		1164900	0					
ANR	1165239	Identifier	orig_val		1164900	1					
ANR	1165240	ExpressionStatement	new_val ++	287:6:7352:7361	1164900	1	True				
ANR	1165241	PostIncDecOperationExpression	new_val ++		1164900	0					
ANR	1165242	Identifier	new_val		1164900	0					
ANR	1165243	IncDec	++		1164900	1					
ANR	1165244	IfStatement	if ( * orig_val == ';' )		1164900	2					
ANR	1165245	Condition	* orig_val == ';'	289:10:7374:7389	1164900	0	True				
ANR	1165246	EqualityExpression	* orig_val == ';'		1164900	0		==			
ANR	1165247	UnaryOperationExpression	* orig_val		1164900	0					
ANR	1165248	UnaryOperator	*		1164900	0					
ANR	1165249	Identifier	orig_val		1164900	1					
ANR	1165250	PrimaryExpression	';'		1164900	1					
ANR	1165251	CompoundStatement		72:28:1480:1480	1164900	1					
ANR	1165252	ExpressionStatement	orig_val += 2	290:7:7401:7412	1164900	0	True				
ANR	1165253	AssignmentExpression	orig_val += 2		1164900	0		+=			
ANR	1165254	Identifier	orig_val		1164900	0					
ANR	1165255	PrimaryExpression	2		1164900	1					
ANR	1165256	ExpressionStatement	vlen -= 2	291:7:7422:7429	1164900	1	True				
ANR	1165257	AssignmentExpression	vlen -= 2		1164900	0		-=			
ANR	1165258	Identifier	vlen		1164900	0					
ANR	1165259	PrimaryExpression	2		1164900	1					
ANR	1165260	ElseStatement	else		1164900	0					
ANR	1165261	CompoundStatement		75:13:1532:1532	1164900	0					
ANR	1165262	ExpressionStatement	orig_val ++	293:7:7453:7463	1164900	0	True				
ANR	1165263	PostIncDecOperationExpression	orig_val ++		1164900	0					
ANR	1165264	Identifier	orig_val		1164900	0					
ANR	1165265	IncDec	++		1164900	1					
ANR	1165266	ExpressionStatement	vlen --	294:7:7472:7478	1164900	1	True				
ANR	1165267	PostIncDecOperationExpression	vlen --		1164900	0					
ANR	1165268	Identifier	vlen		1164900	0					
ANR	1165269	IncDec	--		1164900	1					
ANR	1165270	ExpressionStatement	* new_val = '\\0'	297:5:7500:7515	1164900	5	True				
ANR	1165271	AssignmentExpression	* new_val = '\\0'		1164900	0		=			
ANR	1165272	UnaryOperationExpression	* new_val		1164900	0					
ANR	1165273	UnaryOperator	*		1164900	0					
ANR	1165274	Identifier	new_val		1164900	1					
ANR	1165275	PrimaryExpression	'\\0'		1164900	1					
ANR	1165276	ExpressionStatement	parsed [ j ] . freeme = 1	300:4:7528:7548	1164900	2	True				
ANR	1165277	AssignmentExpression	parsed [ j ] . freeme = 1		1164900	0		=			
ANR	1165278	MemberAccess	parsed [ j ] . freeme		1164900	0					
ANR	1165279	ArrayIndexing	parsed [ j ]		1164900	0					
ANR	1165280	Identifier	parsed		1164900	0					
ANR	1165281	Identifier	j		1164900	1					
ANR	1165282	Identifier	freeme		1164900	1					
ANR	1165283	PrimaryExpression	1		1164900	1					
ANR	1165284	ExpressionStatement	++ n_matches	301:4:7554:7565	1164900	3	True				
ANR	1165285	UnaryExpression	++ n_matches		1164900	0					
ANR	1165286	IncDec	++		1164900	0					
ANR	1165287	Identifier	n_matches		1164900	1					
ANR	1165288	BreakStatement	break ;	302:4:7571:7576	1164900	4	True				
ANR	1165289	WhileStatement	while ( i < data_source_len && isspace ( data_source [ i ] ) )		1164900	9					
ANR	1165290	Condition	i < data_source_len && isspace ( data_source [ i ] )	306:9:7597:7642	1164900	0	True				
ANR	1165291	AndExpression	i < data_source_len && isspace ( data_source [ i ] )		1164900	0		&&			
ANR	1165292	RelationalExpression	i < data_source_len		1164900	0		<			
ANR	1165293	Identifier	i		1164900	0					
ANR	1165294	Identifier	data_source_len		1164900	1					
ANR	1165295	CallExpression	isspace ( data_source [ i ] )		1164900	1					
ANR	1165296	Callee	isspace		1164900	0					
ANR	1165297	Identifier	isspace		1164900	0					
ANR	1165298	ArgumentList	data_source [ i ]		1164900	1					
ANR	1165299	Argument	data_source [ i ]		1164900	0					
ANR	1165300	ArrayIndexing	data_source [ i ]		1164900	0					
ANR	1165301	Identifier	data_source		1164900	0					
ANR	1165302	Identifier	i		1164900	1					
ANR	1165303	CompoundStatement		89:57:1733:1733	1164900	1					
ANR	1165304	ExpressionStatement	i ++	307:3:7650:7653	1164900	0	True				
ANR	1165305	PostIncDecOperationExpression	i ++		1164900	0					
ANR	1165306	Identifier	i		1164900	0					
ANR	1165307	IncDec	++		1164900	1					
ANR	1165308	ExpressionStatement	optstart = i	310:2:7662:7674	1164900	10	True				
ANR	1165309	AssignmentExpression	optstart = i		1164900	0		=			
ANR	1165310	Identifier	optstart		1164900	0					
ANR	1165311	Identifier	i		1164900	1					
ANR	1165312	ReturnStatement	return n_matches ;	313:1:7681:7697	1164900	9	True				
ANR	1165313	Identifier	n_matches		1164900	0					
ANR	1165314	ReturnType	PDO_API int		1164900	1					
ANR	1165315	Identifier	php_pdo_parse_data_source		1164900	2					
ANR	1165316	ParameterList	"const char * data_source , unsigned long data_source_len , struct pdo_data_src_parser * parsed , int nparams"		1164900	3					
ANR	1165317	Parameter	const char * data_source	215:38:5802:5824	1164900	0	True				
ANR	1165318	ParameterType	const char *		1164900	0					
ANR	1165319	Identifier	data_source		1164900	1					
ANR	1165320	Parameter	unsigned long data_source_len	216:2:5829:5857	1164900	1	True				
ANR	1165321	ParameterType	unsigned long		1164900	0					
ANR	1165322	Identifier	data_source_len		1164900	1					
ANR	1165323	Parameter	struct pdo_data_src_parser * parsed	216:33:5860:5893	1164900	2	True				
ANR	1165324	ParameterType	struct pdo_data_src_parser *		1164900	0					
ANR	1165325	Identifier	parsed		1164900	1					
ANR	1165326	Parameter	int nparams	217:2:5898:5908	1164900	3	True				
ANR	1165327	ParameterType	int		1164900	0					
ANR	1165328	Identifier	nparams		1164900	1					
ANR	1165329	CFGEntryNode	ENTRY		1164900		True				
ANR	1165330	CFGExitNode	EXIT		1164900		True				
ANR	1165331	Symbol	new_val		1164900						
ANR	1165332	Symbol	* * parsed		1164900						
ANR	1165333	Symbol	orig_val		1164900						
ANR	1165334	Symbol	parsed [ j ] . freeme		1164900						
ANR	1165335	Symbol	strncmp		1164900						
ANR	1165336	Symbol	* orig_val		1164900						
ANR	1165337	Symbol	estrndup		1164900						
ANR	1165338	Symbol	emalloc		1164900						
ANR	1165339	Symbol	nlen		1164900						
ANR	1165340	Symbol	optstart		1164900						
ANR	1165341	Symbol	n_semicolumns		1164900						
ANR	1165342	Symbol	semi		1164900						
ANR	1165343	Symbol	parsed [ j ] . optname		1164900						
ANR	1165344	Symbol	parsed [ j ] . optval		1164900						
ANR	1165345	Symbol	* parsed [ j ] . optname		1164900						
ANR	1165346	Symbol	* * j		1164900						
ANR	1165347	Symbol	* parsed		1164900						
ANR	1165348	Symbol	* data_source		1164900						
ANR	1165349	Symbol	vlen		1164900						
ANR	1165350	Symbol	isspace		1164900						
ANR	1165351	Symbol	i		1164900						
ANR	1165352	Symbol	j		1164900						
ANR	1165353	Symbol	nparams		1164900						
ANR	1165354	Symbol	* new_val		1164900						
ANR	1165355	Symbol	data_source		1164900						
ANR	1165356	Symbol	* i		1164900						
ANR	1165357	Symbol	* j		1164900						
ANR	1165358	Symbol	data_source_len		1164900						
ANR	1165359	Symbol	n_matches		1164900						
ANR	1165360	Symbol	parsed		1164900						
ANR	1165361	Symbol	valstart		1164900						
ANR	1165362	Symbol	* nlen		1164900						
ANR	1165363	DeclStmt									
ANR	1165364	Decl							const char	const char [ ]	digit_vec
ANR	1165365	Function	php_pdo_int64_to_str	317:0:7748:8531							
ANR	1165366	FunctionDef	php_pdo_int64_to_str (pdo_int64_t i64 TSRMLS_DC)		1165365	0					
ANR	1165367	CompoundStatement		318:0:7810:8531	1165365	0					
ANR	1165368	IdentifierDeclStatement	char buffer [ 65 ] ;	319:1:7813:7828	1165365	0	True				
ANR	1165369	IdentifierDecl	buffer [ 65 ]		1165365	0					
ANR	1165370	IdentifierDeclType	char [ 65 ]		1165365	0					
ANR	1165371	Identifier	buffer		1165365	1					
ANR	1165372	PrimaryExpression	65		1165365	2					
ANR	1165373	IdentifierDeclStatement	"char outbuf [ 65 ] = """" ;"	320:1:7831:7851	1165365	1	True				
ANR	1165374	IdentifierDecl	"outbuf [ 65 ] = """""		1165365	0					
ANR	1165375	IdentifierDeclType	char [ 65 ]		1165365	0					
ANR	1165376	Identifier	outbuf		1165365	1					
ANR	1165377	PrimaryExpression	65		1165365	2					
ANR	1165378	AssignmentExpression	"outbuf [ 65 ] = """""		1165365	3		=			
ANR	1165379	Identifier	outbuf		1165365	0					
ANR	1165380	PrimaryExpression	""""""		1165365	1					
ANR	1165381	Statement	register	321:1:7854:7861	1165365	2	True				
ANR	1165382	IdentifierDeclStatement	char * p ;	321:10:7863:7870	1165365	3	True				
ANR	1165383	IdentifierDecl	* p		1165365	0					
ANR	1165384	IdentifierDeclType	char *		1165365	0					
ANR	1165385	Identifier	p		1165365	1					
ANR	1165386	IdentifierDeclStatement	long long_val ;	322:1:7873:7886	1165365	4	True				
ANR	1165387	IdentifierDecl	long_val		1165365	0					
ANR	1165388	IdentifierDeclType	long		1165365	0					
ANR	1165389	Identifier	long_val		1165365	1					
ANR	1165390	IdentifierDeclStatement	char * dst = outbuf ;	323:1:7889:7907	1165365	5	True				
ANR	1165391	IdentifierDecl	* dst = outbuf		1165365	0					
ANR	1165392	IdentifierDeclType	char *		1165365	0					
ANR	1165393	Identifier	dst		1165365	1					
ANR	1165394	AssignmentExpression	* dst = outbuf		1165365	2		=			
ANR	1165395	Identifier	outbuf		1165365	0					
ANR	1165396	Identifier	outbuf		1165365	1					
ANR	1165397	IfStatement	if ( i64 < 0 )		1165365	6					
ANR	1165398	Condition	i64 < 0	325:5:7915:7921	1165365	0	True				
ANR	1165399	RelationalExpression	i64 < 0		1165365	0		<			
ANR	1165400	Identifier	i64		1165365	0					
ANR	1165401	PrimaryExpression	0		1165365	1					
ANR	1165402	CompoundStatement		8:14:113:113	1165365	1					
ANR	1165403	ExpressionStatement	i64 = - i64	326:2:7928:7938	1165365	0	True				
ANR	1165404	AssignmentExpression	i64 = - i64		1165365	0		=			
ANR	1165405	Identifier	i64		1165365	0					
ANR	1165406	UnaryOperationExpression	- i64		1165365	1					
ANR	1165407	UnaryOperator	-		1165365	0					
ANR	1165408	Identifier	i64		1165365	1					
ANR	1165409	ExpressionStatement	* dst ++ = '-'	327:2:7942:7954	1165365	1	True				
ANR	1165410	AssignmentExpression	* dst ++ = '-'		1165365	0		=			
ANR	1165411	UnaryOperationExpression	* dst ++		1165365	0					
ANR	1165412	UnaryOperator	*		1165365	0					
ANR	1165413	PostIncDecOperationExpression	dst ++		1165365	1					
ANR	1165414	Identifier	dst		1165365	0					
ANR	1165415	IncDec	++		1165365	1					
ANR	1165416	PrimaryExpression	'-'		1165365	1					
ANR	1165417	IfStatement	if ( i64 == 0 )		1165365	7					
ANR	1165418	Condition	i64 == 0	330:5:7965:7972	1165365	0	True				
ANR	1165419	EqualityExpression	i64 == 0		1165365	0		==			
ANR	1165420	Identifier	i64		1165365	0					
ANR	1165421	PrimaryExpression	0		1165365	1					
ANR	1165422	CompoundStatement		13:15:164:164	1165365	1					
ANR	1165423	ExpressionStatement	* dst ++ = '0'	331:2:7979:7991	1165365	0	True				
ANR	1165424	AssignmentExpression	* dst ++ = '0'		1165365	0		=			
ANR	1165425	UnaryOperationExpression	* dst ++		1165365	0					
ANR	1165426	UnaryOperator	*		1165365	0					
ANR	1165427	PostIncDecOperationExpression	dst ++		1165365	1					
ANR	1165428	Identifier	dst		1165365	0					
ANR	1165429	IncDec	++		1165365	1					
ANR	1165430	PrimaryExpression	'0'		1165365	1					
ANR	1165431	ExpressionStatement	* dst ++ = '\\0'	332:2:7995:8008	1165365	1	True				
ANR	1165432	AssignmentExpression	* dst ++ = '\\0'		1165365	0		=			
ANR	1165433	UnaryOperationExpression	* dst ++		1165365	0					
ANR	1165434	UnaryOperator	*		1165365	0					
ANR	1165435	PostIncDecOperationExpression	dst ++		1165365	1					
ANR	1165436	Identifier	dst		1165365	0					
ANR	1165437	IncDec	++		1165365	1					
ANR	1165438	PrimaryExpression	'\\0'		1165365	1					
ANR	1165439	ReturnStatement	return estrdup ( outbuf ) ;	333:2:8012:8034	1165365	2	True				
ANR	1165440	CallExpression	estrdup ( outbuf )		1165365	0					
ANR	1165441	Callee	estrdup		1165365	0					
ANR	1165442	Identifier	estrdup		1165365	0					
ANR	1165443	ArgumentList	outbuf		1165365	1					
ANR	1165444	Argument	outbuf		1165365	0					
ANR	1165445	Identifier	outbuf		1165365	0					
ANR	1165446	ExpressionStatement	p = & buffer [ sizeof ( buffer ) - 1 ]	336:1:8041:8070	1165365	8	True				
ANR	1165447	AssignmentExpression	p = & buffer [ sizeof ( buffer ) - 1 ]		1165365	0		=			
ANR	1165448	Identifier	p		1165365	0					
ANR	1165449	UnaryOperationExpression	& buffer [ sizeof ( buffer ) - 1 ]		1165365	1					
ANR	1165450	UnaryOperator	&		1165365	0					
ANR	1165451	ArrayIndexing	buffer [ sizeof ( buffer ) - 1 ]		1165365	1					
ANR	1165452	Identifier	buffer		1165365	0					
ANR	1165453	AdditiveExpression	sizeof ( buffer ) - 1		1165365	1		-			
ANR	1165454	SizeofExpression	sizeof ( buffer )		1165365	0					
ANR	1165455	Sizeof	sizeof		1165365	0					
ANR	1165456	SizeofOperand	buffer		1165365	1					
ANR	1165457	PrimaryExpression	1		1165365	1					
ANR	1165458	ExpressionStatement	* p = '\\0'	337:1:8073:8082	1165365	9	True				
ANR	1165459	AssignmentExpression	* p = '\\0'		1165365	0		=			
ANR	1165460	UnaryOperationExpression	* p		1165365	0					
ANR	1165461	UnaryOperator	*		1165365	0					
ANR	1165462	Identifier	p		1165365	1					
ANR	1165463	PrimaryExpression	'\\0'		1165365	1					
ANR	1165464	WhileStatement	while ( ( pdo_uint64_t ) i64 > ( pdo_uint64_t ) LONG_MAX )		1165365	10					
ANR	1165465	Condition	( pdo_uint64_t ) i64 > ( pdo_uint64_t ) LONG_MAX	339:8:8093:8134	1165365	0	True				
ANR	1165466	RelationalExpression	( pdo_uint64_t ) i64 > ( pdo_uint64_t ) LONG_MAX		1165365	0		>			
ANR	1165467	CastExpression	( pdo_uint64_t ) i64		1165365	0					
ANR	1165468	CastTarget	pdo_uint64_t		1165365	0					
ANR	1165469	Identifier	i64		1165365	1					
ANR	1165470	CastExpression	( pdo_uint64_t ) LONG_MAX		1165365	1					
ANR	1165471	CastTarget	pdo_uint64_t		1165365	0					
ANR	1165472	Identifier	LONG_MAX		1165365	1					
ANR	1165473	CompoundStatement		24:2:389:437	1165365	1					
ANR	1165474	IdentifierDeclStatement	pdo_uint64_t quo = ( pdo_uint64_t ) i64 / ( unsigned int ) 10 ;	340:2:8141:8196	1165365	0	True				
ANR	1165475	IdentifierDecl	quo = ( pdo_uint64_t ) i64 / ( unsigned int ) 10		1165365	0					
ANR	1165476	IdentifierDeclType	pdo_uint64_t		1165365	0					
ANR	1165477	Identifier	quo		1165365	1					
ANR	1165478	AssignmentExpression	quo = ( pdo_uint64_t ) i64 / ( unsigned int ) 10		1165365	2		=			
ANR	1165479	Identifier	quo		1165365	0					
ANR	1165480	MultiplicativeExpression	( pdo_uint64_t ) i64 / ( unsigned int ) 10		1165365	1		/			
ANR	1165481	CastExpression	( pdo_uint64_t ) i64		1165365	0					
ANR	1165482	CastTarget	pdo_uint64_t		1165365	0					
ANR	1165483	Identifier	i64		1165365	1					
ANR	1165484	CastExpression	( unsigned int ) 10		1165365	1					
ANR	1165485	CastTarget	unsigned int		1165365	0					
ANR	1165486	PrimaryExpression	10		1165365	1					
ANR	1165487	IdentifierDeclStatement	unsigned int rem = ( unsigned int ) ( i64 - quo * 10U ) ;	341:2:8200:8248	1165365	1	True				
ANR	1165488	IdentifierDecl	rem = ( unsigned int ) ( i64 - quo * 10U )		1165365	0					
ANR	1165489	IdentifierDeclType	unsigned int		1165365	0					
ANR	1165490	Identifier	rem		1165365	1					
ANR	1165491	AssignmentExpression	rem = ( unsigned int ) ( i64 - quo * 10U )		1165365	2		=			
ANR	1165492	Identifier	rem		1165365	0					
ANR	1165493	CastExpression	( unsigned int ) ( i64 - quo * 10U )		1165365	1					
ANR	1165494	CastTarget	unsigned int		1165365	0					
ANR	1165495	AdditiveExpression	i64 - quo * 10U		1165365	1		-			
ANR	1165496	Identifier	i64		1165365	0					
ANR	1165497	MultiplicativeExpression	quo * 10U		1165365	1		*			
ANR	1165498	Identifier	quo		1165365	0					
ANR	1165499	PrimaryExpression	10U		1165365	1					
ANR	1165500	ExpressionStatement	* -- p = digit_vec [ rem ]	342:2:8252:8273	1165365	2	True				
ANR	1165501	AssignmentExpression	* -- p = digit_vec [ rem ]		1165365	0		=			
ANR	1165502	UnaryOperationExpression	* -- p		1165365	0					
ANR	1165503	UnaryOperator	*		1165365	0					
ANR	1165504	UnaryExpression	-- p		1165365	1					
ANR	1165505	IncDec	--		1165365	0					
ANR	1165506	Identifier	p		1165365	1					
ANR	1165507	ArrayIndexing	digit_vec [ rem ]		1165365	1					
ANR	1165508	Identifier	digit_vec		1165365	0					
ANR	1165509	Identifier	rem		1165365	1					
ANR	1165510	ExpressionStatement	i64 = ( pdo_int64_t ) quo	343:2:8277:8299	1165365	3	True				
ANR	1165511	AssignmentExpression	i64 = ( pdo_int64_t ) quo		1165365	0		=			
ANR	1165512	Identifier	i64		1165365	0					
ANR	1165513	CastExpression	( pdo_int64_t ) quo		1165365	1					
ANR	1165514	CastTarget	pdo_int64_t		1165365	0					
ANR	1165515	Identifier	quo		1165365	1					
ANR	1165516	ExpressionStatement	long_val = ( long ) i64	345:1:8305:8325	1165365	11	True				
ANR	1165517	AssignmentExpression	long_val = ( long ) i64		1165365	0		=			
ANR	1165518	Identifier	long_val		1165365	0					
ANR	1165519	CastExpression	( long ) i64		1165365	1					
ANR	1165520	CastTarget	long		1165365	0					
ANR	1165521	Identifier	i64		1165365	1					
ANR	1165522	WhileStatement	while ( long_val != 0 )		1165365	12					
ANR	1165523	Condition	long_val != 0	346:8:8335:8347	1165365	0	True				
ANR	1165524	EqualityExpression	long_val != 0		1165365	0		!=			
ANR	1165525	Identifier	long_val		1165365	0					
ANR	1165526	PrimaryExpression	0		1165365	1					
ANR	1165527	CompoundStatement		30:2:543:567	1165365	1					
ANR	1165528	IdentifierDeclStatement	long quo = long_val / 10 ;	347:2:8354:8378	1165365	0	True				
ANR	1165529	IdentifierDecl	quo = long_val / 10		1165365	0					
ANR	1165530	IdentifierDeclType	long		1165365	0					
ANR	1165531	Identifier	quo		1165365	1					
ANR	1165532	AssignmentExpression	quo = long_val / 10		1165365	2		=			
ANR	1165533	Identifier	quo		1165365	0					
ANR	1165534	MultiplicativeExpression	long_val / 10		1165365	1		/			
ANR	1165535	Identifier	long_val		1165365	0					
ANR	1165536	PrimaryExpression	10		1165365	1					
ANR	1165537	ExpressionStatement	* -- p = digit_vec [ ( unsigned int ) ( long_val - quo * 10 ) ]	348:2:8382:8435	1165365	1	True				
ANR	1165538	AssignmentExpression	* -- p = digit_vec [ ( unsigned int ) ( long_val - quo * 10 ) ]		1165365	0		=			
ANR	1165539	UnaryOperationExpression	* -- p		1165365	0					
ANR	1165540	UnaryOperator	*		1165365	0					
ANR	1165541	UnaryExpression	-- p		1165365	1					
ANR	1165542	IncDec	--		1165365	0					
ANR	1165543	Identifier	p		1165365	1					
ANR	1165544	ArrayIndexing	digit_vec [ ( unsigned int ) ( long_val - quo * 10 ) ]		1165365	1					
ANR	1165545	Identifier	digit_vec		1165365	0					
ANR	1165546	CastExpression	( unsigned int ) ( long_val - quo * 10 )		1165365	1					
ANR	1165547	CastTarget	unsigned int		1165365	0					
ANR	1165548	AdditiveExpression	long_val - quo * 10		1165365	1		-			
ANR	1165549	Identifier	long_val		1165365	0					
ANR	1165550	MultiplicativeExpression	quo * 10		1165365	1		*			
ANR	1165551	Identifier	quo		1165365	0					
ANR	1165552	PrimaryExpression	10		1165365	1					
ANR	1165553	ExpressionStatement	long_val = quo	349:2:8439:8453	1165365	2	True				
ANR	1165554	AssignmentExpression	long_val = quo		1165365	0		=			
ANR	1165555	Identifier	long_val		1165365	0					
ANR	1165556	Identifier	quo		1165365	1					
ANR	1165557	WhileStatement	while ( ( * dst ++ = * p ++ ) != 0 )		1165365	13					
ANR	1165558	Condition	( * dst ++ = * p ++ ) != 0	351:8:8466:8485	1165365	0	True				
ANR	1165559	EqualityExpression	( * dst ++ = * p ++ ) != 0		1165365	0		!=			
ANR	1165560	AssignmentExpression	* dst ++ = * p ++		1165365	0		=			
ANR	1165561	UnaryOperationExpression	* dst ++		1165365	0					
ANR	1165562	UnaryOperator	*		1165365	0					
ANR	1165563	PostIncDecOperationExpression	dst ++		1165365	1					
ANR	1165564	Identifier	dst		1165365	0					
ANR	1165565	IncDec	++		1165365	1					
ANR	1165566	UnaryOperationExpression	* p ++		1165365	1					
ANR	1165567	UnaryOperator	*		1165365	0					
ANR	1165568	PostIncDecOperationExpression	p ++		1165365	1					
ANR	1165569	Identifier	p		1165365	0					
ANR	1165570	IncDec	++		1165365	1					
ANR	1165571	PrimaryExpression	0		1165365	1					
ANR	1165572	ExpressionStatement		352:2:8490:8490	1165365	1	True				
ANR	1165573	ExpressionStatement	* dst = '\\0'	353:1:8493:8504	1165365	14	True				
ANR	1165574	AssignmentExpression	* dst = '\\0'		1165365	0		=			
ANR	1165575	UnaryOperationExpression	* dst		1165365	0					
ANR	1165576	UnaryOperator	*		1165365	0					
ANR	1165577	Identifier	dst		1165365	1					
ANR	1165578	PrimaryExpression	'\\0'		1165365	1					
ANR	1165579	ReturnStatement	return estrdup ( outbuf ) ;	354:1:8507:8529	1165365	15	True				
ANR	1165580	CallExpression	estrdup ( outbuf )		1165365	0					
ANR	1165581	Callee	estrdup		1165365	0					
ANR	1165582	Identifier	estrdup		1165365	0					
ANR	1165583	ArgumentList	outbuf		1165365	1					
ANR	1165584	Argument	outbuf		1165365	0					
ANR	1165585	Identifier	outbuf		1165365	0					
ANR	1165586	ReturnType	PDO_API char *		1165365	1					
ANR	1165587	Identifier	php_pdo_int64_to_str		1165365	2					
ANR	1165588	ParameterList	pdo_int64_t i64 TSRMLS_DC		1165365	3					
ANR	1165589	Parameter	pdo_int64_t i64 TSRMLS_DC	317:35:7783:7807	1165365	0	True				
ANR	1165590	ParameterType	pdo_int64_t i64		1165365	0					
ANR	1165591	Identifier	TSRMLS_DC		1165365	1					
ANR	1165592	CFGEntryNode	ENTRY		1165365		True				
ANR	1165593	CFGExitNode	EXIT		1165365		True				
ANR	1165594	Symbol	dst		1165365						
ANR	1165595	Symbol	* digit_vec		1165365						
ANR	1165596	Symbol	* rem		1165365						
ANR	1165597	Symbol	* -- p		1165365						
ANR	1165598	Symbol	i64		1165365						
ANR	1165599	Symbol	* p ++		1165365						
ANR	1165600	Symbol	quo		1165365						
ANR	1165601	Symbol	TSRMLS_DC		1165365						
ANR	1165602	Symbol	* long_val		1165365						
ANR	1165603	Symbol	p		1165365						
ANR	1165604	Symbol	* dst		1165365						
ANR	1165605	Symbol	outbuf		1165365						
ANR	1165606	Symbol	LONG_MAX		1165365						
ANR	1165607	Symbol	* quo		1165365						
ANR	1165608	Symbol	* dst ++		1165365						
ANR	1165609	Symbol	digit_vec		1165365						
ANR	1165610	Symbol	estrdup		1165365						
ANR	1165611	Symbol	* p		1165365						
ANR	1165612	Symbol	buffer		1165365						
ANR	1165613	Symbol	rem		1165365						
ANR	1165614	Symbol	long_val		1165365						
ANR	1165615	DeclStmt									
ANR	1165616	Decl							zend_class_entry	zend_class_entry	ce
ANR	1165617	DeclStmt									
ANR	1165618	Decl							HashPosition	HashPosition	pos
ANR	1165619	DeclStmt									
ANR	1165620	Decl							char	char *	drivers
ANR	1165621	Decl							char	char *	ldrivers
ANR	1165622	DeclStmt									
ANR	1165623	Decl							pdo_driver_t	pdo_driver_t * *	pdriver
