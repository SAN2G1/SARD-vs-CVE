command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	98648	File	data/converged/CVE-2017-11142_php-src/Zend_zend_operators.c								
ANR	98649	DeclStmt									
ANR	98650	Decl							_locale_t	_locale_t	current_locale
ANR	98651	DeclStmt									
ANR	98652	Decl							const unsigned char	const unsigned char [ 256 ]	tolower_map
ANR	98653	Function	zend_atoi	82:0:3594:4044							
ANR	98654	FunctionDef	"zend_atoi (const char * str , int str_len)"		98653	0					
ANR	98655	CompoundStatement		83:0:3657:4044	98653	0					
ANR	98656	IdentifierDeclStatement	int retval ;	84:1:3660:3670	98653	0	True				
ANR	98657	IdentifierDecl	retval		98653	0					
ANR	98658	IdentifierDeclType	int		98653	0					
ANR	98659	Identifier	retval		98653	1					
ANR	98660	IfStatement	if ( ! str_len )		98653	1					
ANR	98661	Condition	! str_len	86:5:3678:3685	98653	0	True				
ANR	98662	UnaryOperationExpression	! str_len		98653	0					
ANR	98663	UnaryOperator	!		98653	0					
ANR	98664	Identifier	str_len		98653	1					
ANR	98665	CompoundStatement		4:15:30:30	98653	1					
ANR	98666	ExpressionStatement	str_len = strlen ( str )	87:2:3692:3713	98653	0	True				
ANR	98667	AssignmentExpression	str_len = strlen ( str )		98653	0		=			
ANR	98668	Identifier	str_len		98653	0					
ANR	98669	CallExpression	strlen ( str )		98653	1					
ANR	98670	Callee	strlen		98653	0					
ANR	98671	Identifier	strlen		98653	0					
ANR	98672	ArgumentList	str		98653	1					
ANR	98673	Argument	str		98653	0					
ANR	98674	Identifier	str		98653	0					
ANR	98675	ExpressionStatement	"retval = strtol ( str , NULL , 0 )"	89:1:3719:3748	98653	2	True				
ANR	98676	AssignmentExpression	"retval = strtol ( str , NULL , 0 )"		98653	0		=			
ANR	98677	Identifier	retval		98653	0					
ANR	98678	CallExpression	"strtol ( str , NULL , 0 )"		98653	1					
ANR	98679	Callee	strtol		98653	0					
ANR	98680	Identifier	strtol		98653	0					
ANR	98681	ArgumentList	str		98653	1					
ANR	98682	Argument	str		98653	0					
ANR	98683	Identifier	str		98653	0					
ANR	98684	Argument	NULL		98653	1					
ANR	98685	Identifier	NULL		98653	0					
ANR	98686	Argument	0		98653	2					
ANR	98687	PrimaryExpression	0		98653	0					
ANR	98688	IfStatement	if ( str_len > 0 )		98653	3					
ANR	98689	Condition	str_len > 0	90:5:3755:3763	98653	0	True				
ANR	98690	RelationalExpression	str_len > 0		98653	0		>			
ANR	98691	Identifier	str_len		98653	0					
ANR	98692	PrimaryExpression	0		98653	1					
ANR	98693	CompoundStatement		8:16:108:108	98653	1					
ANR	98694	SwitchStatement	switch ( str [ str_len - 1 ] )		98653	0					
ANR	98695	Condition	str [ str_len - 1 ]	91:10:3778:3791	98653	0	True				
ANR	98696	ArrayIndexing	str [ str_len - 1 ]		98653	0					
ANR	98697	Identifier	str		98653	0					
ANR	98698	AdditiveExpression	str_len - 1		98653	1		-			
ANR	98699	Identifier	str_len		98653	0					
ANR	98700	PrimaryExpression	1		98653	1					
ANR	98701	CompoundStatement		9:26:136:136	98653	1					
ANR	98702	Label	case 'g' :	92:3:3799:3807	98653	0	True				
ANR	98703	Label	case 'G' :	93:3:3812:3820	98653	1	True				
ANR	98704	ExpressionStatement	retval *= 1024	94:4:3826:3840	98653	2	True				
ANR	98705	AssignmentExpression	retval *= 1024		98653	0		*=			
ANR	98706	Identifier	retval		98653	0					
ANR	98707	PrimaryExpression	1024		98653	1					
ANR	98708	Label	case 'm' :	96:3:3883:3891	98653	3	True				
ANR	98709	Label	case 'M' :	97:3:3896:3904	98653	4	True				
ANR	98710	ExpressionStatement	retval *= 1024	98:4:3910:3924	98653	5	True				
ANR	98711	AssignmentExpression	retval *= 1024		98653	0		*=			
ANR	98712	Identifier	retval		98653	0					
ANR	98713	PrimaryExpression	1024		98653	1					
ANR	98714	Label	case 'k' :	100:3:3967:3975	98653	6	True				
ANR	98715	Label	case 'K' :	101:3:3980:3988	98653	7	True				
ANR	98716	ExpressionStatement	retval *= 1024	102:4:3994:4008	98653	8	True				
ANR	98717	AssignmentExpression	retval *= 1024		98653	0		*=			
ANR	98718	Identifier	retval		98653	0					
ANR	98719	PrimaryExpression	1024		98653	1					
ANR	98720	BreakStatement	break ;	103:4:4014:4019	98653	9	True				
ANR	98721	ReturnStatement	return retval ;	106:1:4029:4042	98653	4	True				
ANR	98722	Identifier	retval		98653	0					
ANR	98723	ReturnType	ZEND_API int		98653	1					
ANR	98724	Identifier	zend_atoi		98653	2					
ANR	98725	ParameterList	"const char * str , int str_len"		98653	3					
ANR	98726	Parameter	const char * str	82:23:3617:3631	98653	0	True				
ANR	98727	ParameterType	const char *		98653	0					
ANR	98728	Identifier	str		98653	1					
ANR	98729	Parameter	int str_len	82:40:3634:3644	98653	1	True				
ANR	98730	ParameterType	int		98653	0					
ANR	98731	Identifier	str_len		98653	1					
ANR	98732	CFGEntryNode	ENTRY		98653		True				
ANR	98733	CFGExitNode	EXIT		98653		True				
ANR	98734	Symbol	str		98653						
ANR	98735	Symbol	* str_len		98653						
ANR	98736	Symbol	strlen		98653						
ANR	98737	Symbol	NULL		98653						
ANR	98738	Symbol	str_len		98653						
ANR	98739	Symbol	strtol		98653						
ANR	98740	Symbol	* str		98653						
ANR	98741	Symbol	retval		98653						
ANR	98742	Function	zend_atol	110:0:4057:4509							
ANR	98743	FunctionDef	"zend_atol (const char * str , int str_len)"		98742	0					
ANR	98744	CompoundStatement		111:0:4121:4509	98742	0					
ANR	98745	IdentifierDeclStatement	long retval ;	112:1:4124:4135	98742	0	True				
ANR	98746	IdentifierDecl	retval		98742	0					
ANR	98747	IdentifierDeclType	long		98742	0					
ANR	98748	Identifier	retval		98742	1					
ANR	98749	IfStatement	if ( ! str_len )		98742	1					
ANR	98750	Condition	! str_len	114:5:4143:4150	98742	0	True				
ANR	98751	UnaryOperationExpression	! str_len		98742	0					
ANR	98752	UnaryOperator	!		98742	0					
ANR	98753	Identifier	str_len		98742	1					
ANR	98754	CompoundStatement		4:15:31:31	98742	1					
ANR	98755	ExpressionStatement	str_len = strlen ( str )	115:2:4157:4178	98742	0	True				
ANR	98756	AssignmentExpression	str_len = strlen ( str )		98742	0		=			
ANR	98757	Identifier	str_len		98742	0					
ANR	98758	CallExpression	strlen ( str )		98742	1					
ANR	98759	Callee	strlen		98742	0					
ANR	98760	Identifier	strlen		98742	0					
ANR	98761	ArgumentList	str		98742	1					
ANR	98762	Argument	str		98742	0					
ANR	98763	Identifier	str		98742	0					
ANR	98764	ExpressionStatement	"retval = strtol ( str , NULL , 0 )"	117:1:4184:4213	98742	2	True				
ANR	98765	AssignmentExpression	"retval = strtol ( str , NULL , 0 )"		98742	0		=			
ANR	98766	Identifier	retval		98742	0					
ANR	98767	CallExpression	"strtol ( str , NULL , 0 )"		98742	1					
ANR	98768	Callee	strtol		98742	0					
ANR	98769	Identifier	strtol		98742	0					
ANR	98770	ArgumentList	str		98742	1					
ANR	98771	Argument	str		98742	0					
ANR	98772	Identifier	str		98742	0					
ANR	98773	Argument	NULL		98742	1					
ANR	98774	Identifier	NULL		98742	0					
ANR	98775	Argument	0		98742	2					
ANR	98776	PrimaryExpression	0		98742	0					
ANR	98777	IfStatement	if ( str_len > 0 )		98742	3					
ANR	98778	Condition	str_len > 0	118:5:4220:4228	98742	0	True				
ANR	98779	RelationalExpression	str_len > 0		98742	0		>			
ANR	98780	Identifier	str_len		98742	0					
ANR	98781	PrimaryExpression	0		98742	1					
ANR	98782	CompoundStatement		8:16:109:109	98742	1					
ANR	98783	SwitchStatement	switch ( str [ str_len - 1 ] )		98742	0					
ANR	98784	Condition	str [ str_len - 1 ]	119:10:4243:4256	98742	0	True				
ANR	98785	ArrayIndexing	str [ str_len - 1 ]		98742	0					
ANR	98786	Identifier	str		98742	0					
ANR	98787	AdditiveExpression	str_len - 1		98742	1		-			
ANR	98788	Identifier	str_len		98742	0					
ANR	98789	PrimaryExpression	1		98742	1					
ANR	98790	CompoundStatement		9:26:137:137	98742	1					
ANR	98791	Label	case 'g' :	120:3:4264:4272	98742	0	True				
ANR	98792	Label	case 'G' :	121:3:4277:4285	98742	1	True				
ANR	98793	ExpressionStatement	retval *= 1024	122:4:4291:4305	98742	2	True				
ANR	98794	AssignmentExpression	retval *= 1024		98742	0		*=			
ANR	98795	Identifier	retval		98742	0					
ANR	98796	PrimaryExpression	1024		98742	1					
ANR	98797	Label	case 'm' :	124:3:4348:4356	98742	3	True				
ANR	98798	Label	case 'M' :	125:3:4361:4369	98742	4	True				
ANR	98799	ExpressionStatement	retval *= 1024	126:4:4375:4389	98742	5	True				
ANR	98800	AssignmentExpression	retval *= 1024		98742	0		*=			
ANR	98801	Identifier	retval		98742	0					
ANR	98802	PrimaryExpression	1024		98742	1					
ANR	98803	Label	case 'k' :	128:3:4432:4440	98742	6	True				
ANR	98804	Label	case 'K' :	129:3:4445:4453	98742	7	True				
ANR	98805	ExpressionStatement	retval *= 1024	130:4:4459:4473	98742	8	True				
ANR	98806	AssignmentExpression	retval *= 1024		98742	0		*=			
ANR	98807	Identifier	retval		98742	0					
ANR	98808	PrimaryExpression	1024		98742	1					
ANR	98809	BreakStatement	break ;	131:4:4479:4484	98742	9	True				
ANR	98810	ReturnStatement	return retval ;	134:1:4494:4507	98742	4	True				
ANR	98811	Identifier	retval		98742	0					
ANR	98812	ReturnType	ZEND_API long		98742	1					
ANR	98813	Identifier	zend_atol		98742	2					
ANR	98814	ParameterList	"const char * str , int str_len"		98742	3					
ANR	98815	Parameter	const char * str	110:24:4081:4095	98742	0	True				
ANR	98816	ParameterType	const char *		98742	0					
ANR	98817	Identifier	str		98742	1					
ANR	98818	Parameter	int str_len	110:41:4098:4108	98742	1	True				
ANR	98819	ParameterType	int		98742	0					
ANR	98820	Identifier	str_len		98742	1					
ANR	98821	CFGEntryNode	ENTRY		98742		True				
ANR	98822	CFGExitNode	EXIT		98742		True				
ANR	98823	Symbol	str		98742						
ANR	98824	Symbol	* str_len		98742						
ANR	98825	Symbol	strlen		98742						
ANR	98826	Symbol	NULL		98742						
ANR	98827	Symbol	str_len		98742						
ANR	98828	Symbol	strtol		98742						
ANR	98829	Symbol	* str		98742						
ANR	98830	Symbol	retval		98742						
ANR	98831	Function	zend_string_to_double	138:0:4522:5427							
ANR	98832	FunctionDef	"zend_string_to_double (const char * number , zend_uint length)"		98831	0					
ANR	98833	CompoundStatement		139:0:4608:5427	98831	0					
ANR	98834	IdentifierDeclStatement	double divisor = 10.0 ;	140:1:4611:4632	98831	0	True				
ANR	98835	IdentifierDecl	divisor = 10.0		98831	0					
ANR	98836	IdentifierDeclType	double		98831	0					
ANR	98837	Identifier	divisor		98831	1					
ANR	98838	AssignmentExpression	divisor = 10.0		98831	2		=			
ANR	98839	Identifier	divisor		98831	0					
ANR	98840	PrimaryExpression	10.0		98831	1					
ANR	98841	IdentifierDeclStatement	double result = 0.0 ;	141:1:4635:4654	98831	1	True				
ANR	98842	IdentifierDecl	result = 0.0		98831	0					
ANR	98843	IdentifierDeclType	double		98831	0					
ANR	98844	Identifier	result		98831	1					
ANR	98845	AssignmentExpression	result = 0.0		98831	2		=			
ANR	98846	Identifier	result		98831	0					
ANR	98847	PrimaryExpression	0.0		98831	1					
ANR	98848	IdentifierDeclStatement	double exponent ;	142:1:4657:4672	98831	2	True				
ANR	98849	IdentifierDecl	exponent		98831	0					
ANR	98850	IdentifierDeclType	double		98831	0					
ANR	98851	Identifier	exponent		98831	1					
ANR	98852	IdentifierDeclStatement	const char * end = number + length ;	143:1:4675:4706	98831	3	True				
ANR	98853	IdentifierDecl	* end = number + length		98831	0					
ANR	98854	IdentifierDeclType	const char *		98831	0					
ANR	98855	Identifier	end		98831	1					
ANR	98856	AssignmentExpression	* end = number + length		98831	2		=			
ANR	98857	Identifier	end		98831	0					
ANR	98858	AdditiveExpression	number + length		98831	1		+			
ANR	98859	Identifier	number		98831	0					
ANR	98860	Identifier	length		98831	1					
ANR	98861	IdentifierDeclStatement	const char * digit = number ;	144:1:4709:4735	98831	4	True				
ANR	98862	IdentifierDecl	* digit = number		98831	0					
ANR	98863	IdentifierDeclType	const char *		98831	0					
ANR	98864	Identifier	digit		98831	1					
ANR	98865	AssignmentExpression	* digit = number		98831	2		=			
ANR	98866	Identifier	number		98831	0					
ANR	98867	Identifier	number		98831	1					
ANR	98868	IfStatement	if ( ! length )		98831	5					
ANR	98869	Condition	! length	146:5:4743:4749	98831	0	True				
ANR	98870	UnaryOperationExpression	! length		98831	0					
ANR	98871	UnaryOperator	!		98831	0					
ANR	98872	Identifier	length		98831	1					
ANR	98873	CompoundStatement		8:14:143:143	98831	1					
ANR	98874	ReturnStatement	return result ;	147:2:4756:4769	98831	0	True				
ANR	98875	Identifier	result		98831	0					
ANR	98876	WhileStatement	while ( digit < end )		98831	6					
ANR	98877	Condition	digit < end	150:8:4783:4793	98831	0	True				
ANR	98878	RelationalExpression	digit < end		98831	0		<			
ANR	98879	Identifier	digit		98831	0					
ANR	98880	Identifier	end		98831	1					
ANR	98881	CompoundStatement		12:21:187:187	98831	1					
ANR	98882	IfStatement	if ( ( * digit <= '9' && * digit >= '0' ) )		98831	0					
ANR	98883	Condition	* digit <= '9' && * digit >= '0'	151:6:4804:4835	98831	0	True				
ANR	98884	AndExpression	* digit <= '9' && * digit >= '0'		98831	0		&&			
ANR	98885	RelationalExpression	* digit <= '9'		98831	0		<=			
ANR	98886	UnaryOperationExpression	* digit		98831	0					
ANR	98887	UnaryOperator	*		98831	0					
ANR	98888	Identifier	digit		98831	1					
ANR	98889	PrimaryExpression	'9'		98831	1					
ANR	98890	RelationalExpression	* digit >= '0'		98831	1		>=			
ANR	98891	UnaryOperationExpression	* digit		98831	0					
ANR	98892	UnaryOperator	*		98831	0					
ANR	98893	Identifier	digit		98831	1					
ANR	98894	PrimaryExpression	'0'		98831	1					
ANR	98895	CompoundStatement		13:40:229:229	98831	1					
ANR	98896	ExpressionStatement	result *= 10	152:3:4843:4855	98831	0	True				
ANR	98897	AssignmentExpression	result *= 10		98831	0		*=			
ANR	98898	Identifier	result		98831	0					
ANR	98899	PrimaryExpression	10		98831	1					
ANR	98900	ExpressionStatement	result += * digit - '0'	153:3:4860:4882	98831	1	True				
ANR	98901	AssignmentExpression	result += * digit - '0'		98831	0		+=			
ANR	98902	Identifier	result		98831	0					
ANR	98903	AdditiveExpression	* digit - '0'		98831	1		-			
ANR	98904	UnaryOperationExpression	* digit		98831	0					
ANR	98905	UnaryOperator	*		98831	0					
ANR	98906	Identifier	digit		98831	1					
ANR	98907	PrimaryExpression	'0'		98831	1					
ANR	98908	ElseStatement	else		98831	0					
ANR	98909	IfStatement	if ( * digit == '.' )		98831	0					
ANR	98910	Condition	* digit == '.'	154:13:4897:4909	98831	0	True				
ANR	98911	EqualityExpression	* digit == '.'		98831	0		==			
ANR	98912	UnaryOperationExpression	* digit		98831	0					
ANR	98913	UnaryOperator	*		98831	0					
ANR	98914	Identifier	digit		98831	1					
ANR	98915	PrimaryExpression	'.'		98831	1					
ANR	98916	CompoundStatement		16:28:303:303	98831	1					
ANR	98917	ExpressionStatement	digit ++	155:3:4917:4924	98831	0	True				
ANR	98918	PostIncDecOperationExpression	digit ++		98831	0					
ANR	98919	Identifier	digit		98831	0					
ANR	98920	IncDec	++		98831	1					
ANR	98921	BreakStatement	break ;	156:3:4929:4934	98831	1	True				
ANR	98922	ElseStatement	else		98831	0					
ANR	98923	IfStatement	if ( toupper ( * digit ) == 'E' )		98831	0					
ANR	98924	Condition	toupper ( * digit ) == 'E'	157:13:4949:4970	98831	0	True				
ANR	98925	EqualityExpression	toupper ( * digit ) == 'E'		98831	0		==			
ANR	98926	CallExpression	toupper ( * digit )		98831	0					
ANR	98927	Callee	toupper		98831	0					
ANR	98928	Identifier	toupper		98831	0					
ANR	98929	ArgumentList	* digit		98831	1					
ANR	98930	Argument	* digit		98831	0					
ANR	98931	UnaryOperationExpression	* digit		98831	0					
ANR	98932	UnaryOperator	*		98831	0					
ANR	98933	Identifier	digit		98831	1					
ANR	98934	PrimaryExpression	'E'		98831	1					
ANR	98935	CompoundStatement		19:37:364:364	98831	1					
ANR	98936	ExpressionStatement	exponent = ( double ) atoi ( digit + 1 )	158:3:4978:5011	98831	0	True				
ANR	98937	AssignmentExpression	exponent = ( double ) atoi ( digit + 1 )		98831	0		=			
ANR	98938	Identifier	exponent		98831	0					
ANR	98939	CastExpression	( double ) atoi ( digit + 1 )		98831	1					
ANR	98940	CastTarget	double		98831	0					
ANR	98941	CallExpression	atoi ( digit + 1 )		98831	1					
ANR	98942	Callee	atoi		98831	0					
ANR	98943	Identifier	atoi		98831	0					
ANR	98944	ArgumentList	digit + 1		98831	1					
ANR	98945	Argument	digit + 1		98831	0					
ANR	98946	AdditiveExpression	digit + 1		98831	0		+			
ANR	98947	Identifier	digit		98831	0					
ANR	98948	PrimaryExpression	1		98831	1					
ANR	98949	ExpressionStatement	"result *= pow ( 10.0 , exponent )"	159:3:5016:5045	98831	1	True				
ANR	98950	AssignmentExpression	"result *= pow ( 10.0 , exponent )"		98831	0		*=			
ANR	98951	Identifier	result		98831	0					
ANR	98952	CallExpression	"pow ( 10.0 , exponent )"		98831	1					
ANR	98953	Callee	pow		98831	0					
ANR	98954	Identifier	pow		98831	0					
ANR	98955	ArgumentList	10.0		98831	1					
ANR	98956	Argument	10.0		98831	0					
ANR	98957	PrimaryExpression	10.0		98831	0					
ANR	98958	Argument	exponent		98831	1					
ANR	98959	Identifier	exponent		98831	0					
ANR	98960	ReturnStatement	return result ;	160:3:5050:5063	98831	2	True				
ANR	98961	Identifier	result		98831	0					
ANR	98962	ElseStatement	else		98831	0					
ANR	98963	CompoundStatement		23:9:465:465	98831	0					
ANR	98964	ReturnStatement	return result ;	162:3:5079:5092	98831	0	True				
ANR	98965	Identifier	result		98831	0					
ANR	98966	ExpressionStatement	digit ++	164:2:5100:5107	98831	1	True				
ANR	98967	PostIncDecOperationExpression	digit ++		98831	0					
ANR	98968	Identifier	digit		98831	0					
ANR	98969	IncDec	++		98831	1					
ANR	98970	WhileStatement	while ( digit < end )		98831	7					
ANR	98971	Condition	digit < end	167:8:5121:5131	98831	0	True				
ANR	98972	RelationalExpression	digit < end		98831	0		<			
ANR	98973	Identifier	digit		98831	0					
ANR	98974	Identifier	end		98831	1					
ANR	98975	CompoundStatement		29:21:525:525	98831	1					
ANR	98976	IfStatement	if ( ( * digit <= '9' && * digit >= '0' ) )		98831	0					
ANR	98977	Condition	* digit <= '9' && * digit >= '0'	168:6:5142:5173	98831	0	True				
ANR	98978	AndExpression	* digit <= '9' && * digit >= '0'		98831	0		&&			
ANR	98979	RelationalExpression	* digit <= '9'		98831	0		<=			
ANR	98980	UnaryOperationExpression	* digit		98831	0					
ANR	98981	UnaryOperator	*		98831	0					
ANR	98982	Identifier	digit		98831	1					
ANR	98983	PrimaryExpression	'9'		98831	1					
ANR	98984	RelationalExpression	* digit >= '0'		98831	1		>=			
ANR	98985	UnaryOperationExpression	* digit		98831	0					
ANR	98986	UnaryOperator	*		98831	0					
ANR	98987	Identifier	digit		98831	1					
ANR	98988	PrimaryExpression	'0'		98831	1					
ANR	98989	CompoundStatement		30:40:567:567	98831	1					
ANR	98990	ExpressionStatement	result += ( * digit - '0' ) / divisor	169:3:5181:5215	98831	0	True				
ANR	98991	AssignmentExpression	result += ( * digit - '0' ) / divisor		98831	0		+=			
ANR	98992	Identifier	result		98831	0					
ANR	98993	MultiplicativeExpression	( * digit - '0' ) / divisor		98831	1		/			
ANR	98994	AdditiveExpression	* digit - '0'		98831	0		-			
ANR	98995	UnaryOperationExpression	* digit		98831	0					
ANR	98996	UnaryOperator	*		98831	0					
ANR	98997	Identifier	digit		98831	1					
ANR	98998	PrimaryExpression	'0'		98831	1					
ANR	98999	Identifier	divisor		98831	1					
ANR	99000	ExpressionStatement	divisor *= 10	170:3:5220:5233	98831	1	True				
ANR	99001	AssignmentExpression	divisor *= 10		98831	0		*=			
ANR	99002	Identifier	divisor		98831	0					
ANR	99003	PrimaryExpression	10		98831	1					
ANR	99004	ElseStatement	else		98831	0					
ANR	99005	IfStatement	if ( toupper ( * digit ) == 'E' )		98831	0					
ANR	99006	Condition	toupper ( * digit ) == 'E'	171:13:5248:5269	98831	0	True				
ANR	99007	EqualityExpression	toupper ( * digit ) == 'E'		98831	0		==			
ANR	99008	CallExpression	toupper ( * digit )		98831	0					
ANR	99009	Callee	toupper		98831	0					
ANR	99010	Identifier	toupper		98831	0					
ANR	99011	ArgumentList	* digit		98831	1					
ANR	99012	Argument	* digit		98831	0					
ANR	99013	UnaryOperationExpression	* digit		98831	0					
ANR	99014	UnaryOperator	*		98831	0					
ANR	99015	Identifier	digit		98831	1					
ANR	99016	PrimaryExpression	'E'		98831	1					
ANR	99017	CompoundStatement		33:37:663:663	98831	1					
ANR	99018	ExpressionStatement	exponent = ( double ) atoi ( digit + 1 )	172:3:5277:5310	98831	0	True				
ANR	99019	AssignmentExpression	exponent = ( double ) atoi ( digit + 1 )		98831	0		=			
ANR	99020	Identifier	exponent		98831	0					
ANR	99021	CastExpression	( double ) atoi ( digit + 1 )		98831	1					
ANR	99022	CastTarget	double		98831	0					
ANR	99023	CallExpression	atoi ( digit + 1 )		98831	1					
ANR	99024	Callee	atoi		98831	0					
ANR	99025	Identifier	atoi		98831	0					
ANR	99026	ArgumentList	digit + 1		98831	1					
ANR	99027	Argument	digit + 1		98831	0					
ANR	99028	AdditiveExpression	digit + 1		98831	0		+			
ANR	99029	Identifier	digit		98831	0					
ANR	99030	PrimaryExpression	1		98831	1					
ANR	99031	ExpressionStatement	"result *= pow ( 10.0 , exponent )"	173:3:5315:5344	98831	1	True				
ANR	99032	AssignmentExpression	"result *= pow ( 10.0 , exponent )"		98831	0		*=			
ANR	99033	Identifier	result		98831	0					
ANR	99034	CallExpression	"pow ( 10.0 , exponent )"		98831	1					
ANR	99035	Callee	pow		98831	0					
ANR	99036	Identifier	pow		98831	0					
ANR	99037	ArgumentList	10.0		98831	1					
ANR	99038	Argument	10.0		98831	0					
ANR	99039	PrimaryExpression	10.0		98831	0					
ANR	99040	Argument	exponent		98831	1					
ANR	99041	Identifier	exponent		98831	0					
ANR	99042	ReturnStatement	return result ;	174:3:5349:5362	98831	2	True				
ANR	99043	Identifier	result		98831	0					
ANR	99044	ElseStatement	else		98831	0					
ANR	99045	CompoundStatement		37:9:764:764	98831	0					
ANR	99046	ReturnStatement	return result ;	176:3:5378:5391	98831	0	True				
ANR	99047	Identifier	result		98831	0					
ANR	99048	ExpressionStatement	digit ++	178:2:5399:5406	98831	1	True				
ANR	99049	PostIncDecOperationExpression	digit ++		98831	0					
ANR	99050	Identifier	digit		98831	0					
ANR	99051	IncDec	++		98831	1					
ANR	99052	ReturnStatement	return result ;	180:1:5412:5425	98831	8	True				
ANR	99053	Identifier	result		98831	0					
ANR	99054	ReturnType	ZEND_API double		98831	1					
ANR	99055	Identifier	zend_string_to_double		98831	2					
ANR	99056	ParameterList	"const char * number , zend_uint length"		98831	3					
ANR	99057	Parameter	const char * number	138:38:4560:4577	98831	0	True				
ANR	99058	ParameterType	const char *		98831	0					
ANR	99059	Identifier	number		98831	1					
ANR	99060	Parameter	zend_uint length	138:58:4580:4595	98831	1	True				
ANR	99061	ParameterType	zend_uint		98831	0					
ANR	99062	Identifier	length		98831	1					
ANR	99063	CFGEntryNode	ENTRY		98831		True				
ANR	99064	CFGExitNode	EXIT		98831		True				
ANR	99065	Symbol	result		98831						
ANR	99066	Symbol	atoi		98831						
ANR	99067	Symbol	number		98831						
ANR	99068	Symbol	divisor		98831						
ANR	99069	Symbol	* digit		98831						
ANR	99070	Symbol	toupper		98831						
ANR	99071	Symbol	length		98831						
ANR	99072	Symbol	pow		98831						
ANR	99073	Symbol	end		98831						
ANR	99074	Symbol	exponent		98831						
ANR	99075	Symbol	digit		98831						
ANR	99076	DeclStmt									
ANR	99077	Decl							char	char *	strval
ANR	99078	DeclStmt									
ANR	99079	Decl							zval	zval	dst
ANR	99080	DeclStmt									
ANR	99081	Decl							zval	zval *	newop
ANR	99082	Function	convert_to_long	361:0:10903:11022							
ANR	99083	FunctionDef	convert_to_long (zval * op)		99082	0					
ANR	99084	CompoundStatement		362:0:10953:11022	99082	0					
ANR	99085	IfStatement	if ( Z_TYPE_P ( op ) != IS_LONG )		99082	0					
ANR	99086	Condition	Z_TYPE_P ( op ) != IS_LONG	363:5:10960:10982	99082	0	True				
ANR	99087	EqualityExpression	Z_TYPE_P ( op ) != IS_LONG		99082	0		!=			
ANR	99088	CallExpression	Z_TYPE_P ( op )		99082	0					
ANR	99089	Callee	Z_TYPE_P		99082	0					
ANR	99090	Identifier	Z_TYPE_P		99082	0					
ANR	99091	ArgumentList	op		99082	1					
ANR	99092	Argument	op		99082	0					
ANR	99093	Identifier	op		99082	0					
ANR	99094	Identifier	IS_LONG		99082	1					
ANR	99095	CompoundStatement		2:30:31:31	99082	1					
ANR	99096	ExpressionStatement	"convert_to_long_base ( op , 10 )"	364:2:10989:11017	99082	0	True				
ANR	99097	CallExpression	"convert_to_long_base ( op , 10 )"		99082	0					
ANR	99098	Callee	convert_to_long_base		99082	0					
ANR	99099	Identifier	convert_to_long_base		99082	0					
ANR	99100	ArgumentList	op		99082	1					
ANR	99101	Argument	op		99082	0					
ANR	99102	Identifier	op		99082	0					
ANR	99103	Argument	10		99082	1					
ANR	99104	PrimaryExpression	10		99082	0					
ANR	99105	ReturnType	ZEND_API void		99082	1					
ANR	99106	Identifier	convert_to_long		99082	2					
ANR	99107	ParameterList	zval * op		99082	3					
ANR	99108	Parameter	zval * op	361:30:10933:10940	99082	0	True				
ANR	99109	ParameterType	zval *		99082	0					
ANR	99110	Identifier	op		99082	1					
ANR	99111	CFGEntryNode	ENTRY		99082		True				
ANR	99112	CFGExitNode	EXIT		99082		True				
ANR	99113	Symbol	op		99082						
ANR	99114	Symbol	IS_LONG		99082						
ANR	99115	Symbol	Z_TYPE_P		99082						
ANR	99116	Function	convert_to_long_base	369:0:11035:12185							
ANR	99117	FunctionDef	"convert_to_long_base (zval * op , int base)"		99116	0					
ANR	99118	CompoundStatement		370:0:11100:12185	99116	0					
ANR	99119	IdentifierDeclStatement	long tmp ;	371:1:11103:11111	99116	0	True				
ANR	99120	IdentifierDecl	tmp		99116	0					
ANR	99121	IdentifierDeclType	long		99116	0					
ANR	99122	Identifier	tmp		99116	1					
ANR	99123	SwitchStatement	switch ( Z_TYPE_P ( op ) )		99116	1					
ANR	99124	Condition	Z_TYPE_P ( op )	373:9:11123:11134	99116	0	True				
ANR	99125	CallExpression	Z_TYPE_P ( op )		99116	0					
ANR	99126	Callee	Z_TYPE_P		99116	0					
ANR	99127	Identifier	Z_TYPE_P		99116	0					
ANR	99128	ArgumentList	op		99116	1					
ANR	99129	Argument	op		99116	0					
ANR	99130	Identifier	op		99116	0					
ANR	99131	CompoundStatement		4:23:36:36	99116	1					
ANR	99132	Label	case IS_NULL :	374:2:11141:11153	99116	0	True				
ANR	99133	Identifier	IS_NULL		99116	0					
ANR	99134	ExpressionStatement	Z_LVAL_P ( op ) = 0	375:3:11158:11174	99116	1	True				
ANR	99135	AssignmentExpression	Z_LVAL_P ( op ) = 0		99116	0		=			
ANR	99136	CallExpression	Z_LVAL_P ( op )		99116	0					
ANR	99137	Callee	Z_LVAL_P		99116	0					
ANR	99138	Identifier	Z_LVAL_P		99116	0					
ANR	99139	ArgumentList	op		99116	1					
ANR	99140	Argument	op		99116	0					
ANR	99141	Identifier	op		99116	0					
ANR	99142	PrimaryExpression	0		99116	1					
ANR	99143	BreakStatement	break ;	376:3:11179:11184	99116	2	True				
ANR	99144	Label	case IS_RESOURCE :	377:2:11188:11204	99116	3	True				
ANR	99145	Identifier	IS_RESOURCE		99116	0					
ANR	99146	CompoundStatement		8:20:105:105	99116	4					
ANR	99147	ExpressionStatement	TSRMLS_FETCH ( )	378:4:11212:11226	99116	0	True				
ANR	99148	CallExpression	TSRMLS_FETCH ( )		99116	0					
ANR	99149	Callee	TSRMLS_FETCH		99116	0					
ANR	99150	Identifier	TSRMLS_FETCH		99116	0					
ANR	99151	ArgumentList			99116	1					
ANR	99152	ExpressionStatement	zend_list_delete ( Z_LVAL_P ( op ) )	380:4:11233:11263	99116	1	True				
ANR	99153	CallExpression	zend_list_delete ( Z_LVAL_P ( op ) )		99116	0					
ANR	99154	Callee	zend_list_delete		99116	0					
ANR	99155	Identifier	zend_list_delete		99116	0					
ANR	99156	ArgumentList	Z_LVAL_P ( op )		99116	1					
ANR	99157	Argument	Z_LVAL_P ( op )		99116	0					
ANR	99158	CallExpression	Z_LVAL_P ( op )		99116	0					
ANR	99159	Callee	Z_LVAL_P		99116	0					
ANR	99160	Identifier	Z_LVAL_P		99116	0					
ANR	99161	ArgumentList	op		99116	1					
ANR	99162	Argument	op		99116	0					
ANR	99163	Identifier	op		99116	0					
ANR	99164	Label	case IS_BOOL :	383:2:11309:11321	99116	5	True				
ANR	99165	Identifier	IS_BOOL		99116	0					
ANR	99166	Label	case IS_LONG :	384:2:11325:11337	99116	6	True				
ANR	99167	Identifier	IS_LONG		99116	0					
ANR	99168	BreakStatement	break ;	385:3:11342:11347	99116	7	True				
ANR	99169	Label	case IS_DOUBLE :	386:2:11351:11365	99116	8	True				
ANR	99170	Identifier	IS_DOUBLE		99116	0					
ANR	99171	ExpressionStatement	Z_LVAL_P ( op ) = zend_dval_to_lval ( Z_DVAL_P ( op ) )	387:3:11370:11416	99116	9	True				
ANR	99172	AssignmentExpression	Z_LVAL_P ( op ) = zend_dval_to_lval ( Z_DVAL_P ( op ) )		99116	0		=			
ANR	99173	CallExpression	Z_LVAL_P ( op )		99116	0					
ANR	99174	Callee	Z_LVAL_P		99116	0					
ANR	99175	Identifier	Z_LVAL_P		99116	0					
ANR	99176	ArgumentList	op		99116	1					
ANR	99177	Argument	op		99116	0					
ANR	99178	Identifier	op		99116	0					
ANR	99179	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( op ) )		99116	1					
ANR	99180	Callee	zend_dval_to_lval		99116	0					
ANR	99181	Identifier	zend_dval_to_lval		99116	0					
ANR	99182	ArgumentList	Z_DVAL_P ( op )		99116	1					
ANR	99183	Argument	Z_DVAL_P ( op )		99116	0					
ANR	99184	CallExpression	Z_DVAL_P ( op )		99116	0					
ANR	99185	Callee	Z_DVAL_P		99116	0					
ANR	99186	Identifier	Z_DVAL_P		99116	0					
ANR	99187	ArgumentList	op		99116	1					
ANR	99188	Argument	op		99116	0					
ANR	99189	Identifier	op		99116	0					
ANR	99190	BreakStatement	break ;	388:3:11421:11426	99116	10	True				
ANR	99191	Label	case IS_STRING :	389:2:11430:11444	99116	11	True				
ANR	99192	Identifier	IS_STRING		99116	0					
ANR	99193	CompoundStatement		22:4:354:383	99116	12					
ANR	99194	IdentifierDeclStatement	char * strval = Z_STRVAL_P ( op ) ;	391:4:11455:11484	99116	0	True				
ANR	99195	IdentifierDecl	* strval = Z_STRVAL_P ( op )		99116	0					
ANR	99196	IdentifierDeclType	char *		99116	0					
ANR	99197	Identifier	strval		99116	1					
ANR	99198	AssignmentExpression	* strval = Z_STRVAL_P ( op )		99116	2		=			
ANR	99199	Identifier	strval		99116	0					
ANR	99200	CallExpression	Z_STRVAL_P ( op )		99116	1					
ANR	99201	Callee	Z_STRVAL_P		99116	0					
ANR	99202	Identifier	Z_STRVAL_P		99116	0					
ANR	99203	ArgumentList	op		99116	1					
ANR	99204	Argument	op		99116	0					
ANR	99205	Identifier	op		99116	0					
ANR	99206	ExpressionStatement	"Z_LVAL_P ( op ) = strtol ( strval , NULL , base )"	393:4:11491:11532	99116	1	True				
ANR	99207	AssignmentExpression	"Z_LVAL_P ( op ) = strtol ( strval , NULL , base )"		99116	0		=			
ANR	99208	CallExpression	Z_LVAL_P ( op )		99116	0					
ANR	99209	Callee	Z_LVAL_P		99116	0					
ANR	99210	Identifier	Z_LVAL_P		99116	0					
ANR	99211	ArgumentList	op		99116	1					
ANR	99212	Argument	op		99116	0					
ANR	99213	Identifier	op		99116	0					
ANR	99214	CallExpression	"strtol ( strval , NULL , base )"		99116	1					
ANR	99215	Callee	strtol		99116	0					
ANR	99216	Identifier	strtol		99116	0					
ANR	99217	ArgumentList	strval		99116	1					
ANR	99218	Argument	strval		99116	0					
ANR	99219	Identifier	strval		99116	0					
ANR	99220	Argument	NULL		99116	1					
ANR	99221	Identifier	NULL		99116	0					
ANR	99222	Argument	base		99116	2					
ANR	99223	Identifier	base		99116	0					
ANR	99224	ExpressionStatement	str_efree ( strval )	394:4:11538:11555	99116	2	True				
ANR	99225	CallExpression	str_efree ( strval )		99116	0					
ANR	99226	Callee	str_efree		99116	0					
ANR	99227	Identifier	str_efree		99116	0					
ANR	99228	ArgumentList	strval		99116	1					
ANR	99229	Argument	strval		99116	0					
ANR	99230	Identifier	strval		99116	0					
ANR	99231	BreakStatement	break ;	396:3:11565:11570	99116	13	True				
ANR	99232	Label	case IS_ARRAY :	397:2:11574:11587	99116	14	True				
ANR	99233	Identifier	IS_ARRAY		99116	0					
ANR	99234	ExpressionStatement	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )	398:3:11592:11642	99116	15	True				
ANR	99235	AssignmentExpression	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )		99116	0		=			
ANR	99236	Identifier	tmp		99116	0					
ANR	99237	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0		99116	1					
ANR	99238	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		99116	0					
ANR	99239	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		99116	0					
ANR	99240	Callee	zend_hash_num_elements		99116	0					
ANR	99241	Identifier	zend_hash_num_elements		99116	0					
ANR	99242	ArgumentList	Z_ARRVAL_P ( op )		99116	1					
ANR	99243	Argument	Z_ARRVAL_P ( op )		99116	0					
ANR	99244	CallExpression	Z_ARRVAL_P ( op )		99116	0					
ANR	99245	Callee	Z_ARRVAL_P		99116	0					
ANR	99246	Identifier	Z_ARRVAL_P		99116	0					
ANR	99247	ArgumentList	op		99116	1					
ANR	99248	Argument	op		99116	0					
ANR	99249	Identifier	op		99116	0					
ANR	99250	PrimaryExpression	1		99116	1					
ANR	99251	PrimaryExpression	0		99116	2					
ANR	99252	ExpressionStatement	zval_dtor ( op )	399:3:11647:11660	99116	16	True				
ANR	99253	CallExpression	zval_dtor ( op )		99116	0					
ANR	99254	Callee	zval_dtor		99116	0					
ANR	99255	Identifier	zval_dtor		99116	0					
ANR	99256	ArgumentList	op		99116	1					
ANR	99257	Argument	op		99116	0					
ANR	99258	Identifier	op		99116	0					
ANR	99259	ExpressionStatement	Z_LVAL_P ( op ) = tmp	400:3:11665:11683	99116	17	True				
ANR	99260	AssignmentExpression	Z_LVAL_P ( op ) = tmp		99116	0		=			
ANR	99261	CallExpression	Z_LVAL_P ( op )		99116	0					
ANR	99262	Callee	Z_LVAL_P		99116	0					
ANR	99263	Identifier	Z_LVAL_P		99116	0					
ANR	99264	ArgumentList	op		99116	1					
ANR	99265	Argument	op		99116	0					
ANR	99266	Identifier	op		99116	0					
ANR	99267	Identifier	tmp		99116	1					
ANR	99268	BreakStatement	break ;	401:3:11688:11693	99116	18	True				
ANR	99269	Label	case IS_OBJECT :	402:2:11697:11711	99116	19	True				
ANR	99270	Identifier	IS_OBJECT		99116	0					
ANR	99271	CompoundStatement		35:4:621:635	99116	20					
ANR	99272	IdentifierDeclStatement	int retval = 1 ;	404:4:11722:11736	99116	0	True				
ANR	99273	IdentifierDecl	retval = 1		99116	0					
ANR	99274	IdentifierDeclType	int		99116	0					
ANR	99275	Identifier	retval		99116	1					
ANR	99276	AssignmentExpression	retval = 1		99116	2		=			
ANR	99277	Identifier	retval		99116	0					
ANR	99278	PrimaryExpression	1		99116	1					
ANR	99279	ExpressionStatement	TSRMLS_FETCH ( )	405:4:11742:11756	99116	1	True				
ANR	99280	CallExpression	TSRMLS_FETCH ( )		99116	0					
ANR	99281	Callee	TSRMLS_FETCH		99116	0					
ANR	99282	Identifier	TSRMLS_FETCH		99116	0					
ANR	99283	ArgumentList			99116	1					
ANR	99284	ExpressionStatement	"convert_object_to_type ( op , IS_LONG , convert_to_long )"	407:4:11763:11815	99116	2	True				
ANR	99285	CallExpression	"convert_object_to_type ( op , IS_LONG , convert_to_long )"		99116	0					
ANR	99286	Callee	convert_object_to_type		99116	0					
ANR	99287	Identifier	convert_object_to_type		99116	0					
ANR	99288	ArgumentList	op		99116	1					
ANR	99289	Argument	op		99116	0					
ANR	99290	Identifier	op		99116	0					
ANR	99291	Argument	IS_LONG		99116	1					
ANR	99292	Identifier	IS_LONG		99116	0					
ANR	99293	Argument	convert_to_long		99116	2					
ANR	99294	Identifier	convert_to_long		99116	0					
ANR	99295	IfStatement	if ( Z_TYPE_P ( op ) == IS_LONG )		99116	3					
ANR	99296	Condition	Z_TYPE_P ( op ) == IS_LONG	409:8:11826:11848	99116	0	True				
ANR	99297	EqualityExpression	Z_TYPE_P ( op ) == IS_LONG		99116	0		==			
ANR	99298	CallExpression	Z_TYPE_P ( op )		99116	0					
ANR	99299	Callee	Z_TYPE_P		99116	0					
ANR	99300	Identifier	Z_TYPE_P		99116	0					
ANR	99301	ArgumentList	op		99116	1					
ANR	99302	Argument	op		99116	0					
ANR	99303	Identifier	op		99116	0					
ANR	99304	Identifier	IS_LONG		99116	1					
ANR	99305	CompoundStatement		40:33:750:750	99116	1					
ANR	99306	ReturnStatement	return ;	410:5:11858:11864	99116	0	True				
ANR	99307	ExpressionStatement	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to int"" , Z_OBJCE_P ( op ) -> name )"	412:4:11876:11969	99116	4	True				
ANR	99308	CallExpression	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to int"" , Z_OBJCE_P ( op ) -> name )"		99116	0					
ANR	99309	Callee	zend_error		99116	0					
ANR	99310	Identifier	zend_error		99116	0					
ANR	99311	ArgumentList	E_NOTICE		99116	1					
ANR	99312	Argument	E_NOTICE		99116	0					
ANR	99313	Identifier	E_NOTICE		99116	0					
ANR	99314	Argument	"""Object of class %s could not be converted to int"""		99116	1					
ANR	99315	PrimaryExpression	"""Object of class %s could not be converted to int"""		99116	0					
ANR	99316	Argument	Z_OBJCE_P ( op ) -> name		99116	2					
ANR	99317	PtrMemberAccess	Z_OBJCE_P ( op ) -> name		99116	0					
ANR	99318	CallExpression	Z_OBJCE_P ( op )		99116	0					
ANR	99319	Callee	Z_OBJCE_P		99116	0					
ANR	99320	Identifier	Z_OBJCE_P		99116	0					
ANR	99321	ArgumentList	op		99116	1					
ANR	99322	Argument	op		99116	0					
ANR	99323	Identifier	op		99116	0					
ANR	99324	Identifier	name		99116	1					
ANR	99325	ExpressionStatement	zval_dtor ( op )	414:4:11976:11989	99116	5	True				
ANR	99326	CallExpression	zval_dtor ( op )		99116	0					
ANR	99327	Callee	zval_dtor		99116	0					
ANR	99328	Identifier	zval_dtor		99116	0					
ANR	99329	ArgumentList	op		99116	1					
ANR	99330	Argument	op		99116	0					
ANR	99331	Identifier	op		99116	0					
ANR	99332	ExpressionStatement	"ZVAL_LONG ( op , retval )"	415:4:11995:12016	99116	6	True				
ANR	99333	CallExpression	"ZVAL_LONG ( op , retval )"		99116	0					
ANR	99334	Callee	ZVAL_LONG		99116	0					
ANR	99335	Identifier	ZVAL_LONG		99116	0					
ANR	99336	ArgumentList	op		99116	1					
ANR	99337	Argument	op		99116	0					
ANR	99338	Identifier	op		99116	0					
ANR	99339	Argument	retval		99116	1					
ANR	99340	Identifier	retval		99116	0					
ANR	99341	ReturnStatement	return ;	416:4:12022:12028	99116	7	True				
ANR	99342	Label	default :	418:2:12037:12044	99116	21	True				
ANR	99343	Identifier	default		99116	0					
ANR	99344	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot convert to ordinal value"" )"	419:3:12049:12105	99116	22	True				
ANR	99345	CallExpression	"zend_error ( E_WARNING , ""Cannot convert to ordinal value"" )"		99116	0					
ANR	99346	Callee	zend_error		99116	0					
ANR	99347	Identifier	zend_error		99116	0					
ANR	99348	ArgumentList	E_WARNING		99116	1					
ANR	99349	Argument	E_WARNING		99116	0					
ANR	99350	Identifier	E_WARNING		99116	0					
ANR	99351	Argument	"""Cannot convert to ordinal value"""		99116	1					
ANR	99352	PrimaryExpression	"""Cannot convert to ordinal value"""		99116	0					
ANR	99353	ExpressionStatement	zval_dtor ( op )	420:3:12110:12123	99116	23	True				
ANR	99354	CallExpression	zval_dtor ( op )		99116	0					
ANR	99355	Callee	zval_dtor		99116	0					
ANR	99356	Identifier	zval_dtor		99116	0					
ANR	99357	ArgumentList	op		99116	1					
ANR	99358	Argument	op		99116	0					
ANR	99359	Identifier	op		99116	0					
ANR	99360	ExpressionStatement	Z_LVAL_P ( op ) = 0	421:3:12128:12144	99116	24	True				
ANR	99361	AssignmentExpression	Z_LVAL_P ( op ) = 0		99116	0		=			
ANR	99362	CallExpression	Z_LVAL_P ( op )		99116	0					
ANR	99363	Callee	Z_LVAL_P		99116	0					
ANR	99364	Identifier	Z_LVAL_P		99116	0					
ANR	99365	ArgumentList	op		99116	1					
ANR	99366	Argument	op		99116	0					
ANR	99367	Identifier	op		99116	0					
ANR	99368	PrimaryExpression	0		99116	1					
ANR	99369	BreakStatement	break ;	422:3:12149:12154	99116	25	True				
ANR	99370	ExpressionStatement	Z_TYPE_P ( op ) = IS_LONG	425:1:12161:12183	99116	2	True				
ANR	99371	AssignmentExpression	Z_TYPE_P ( op ) = IS_LONG		99116	0		=			
ANR	99372	CallExpression	Z_TYPE_P ( op )		99116	0					
ANR	99373	Callee	Z_TYPE_P		99116	0					
ANR	99374	Identifier	Z_TYPE_P		99116	0					
ANR	99375	ArgumentList	op		99116	1					
ANR	99376	Argument	op		99116	0					
ANR	99377	Identifier	op		99116	0					
ANR	99378	Identifier	IS_LONG		99116	1					
ANR	99379	ReturnType	ZEND_API void		99116	1					
ANR	99380	Identifier	convert_to_long_base		99116	2					
ANR	99381	ParameterList	"zval * op , int base"		99116	3					
ANR	99382	Parameter	zval * op	369:35:11070:11077	99116	0	True				
ANR	99383	ParameterType	zval *		99116	0					
ANR	99384	Identifier	op		99116	1					
ANR	99385	Parameter	int base	369:45:11080:11087	99116	1	True				
ANR	99386	ParameterType	int		99116	0					
ANR	99387	Identifier	base		99116	1					
ANR	99388	CFGEntryNode	ENTRY		99116		True				
ANR	99389	CFGExitNode	EXIT		99116		True				
ANR	99390	Symbol	op		99116						
ANR	99391	Symbol	NULL		99116						
ANR	99392	Symbol	strval		99116						
ANR	99393	Symbol	zend_hash_num_elements		99116						
ANR	99394	Symbol	E_NOTICE		99116						
ANR	99395	Symbol	convert_to_long		99116						
ANR	99396	Symbol	Z_TYPE_P		99116						
ANR	99397	Symbol	Z_STRVAL_P		99116						
ANR	99398	Symbol	Z_DVAL_P		99116						
ANR	99399	Symbol	retval		99116						
ANR	99400	Symbol	Z_LVAL_P		99116						
ANR	99401	Symbol	zend_dval_to_lval		99116						
ANR	99402	Symbol	Z_OBJCE_P ( op ) -> name		99116						
ANR	99403	Symbol	E_WARNING		99116						
ANR	99404	Symbol	strtol		99116						
ANR	99405	Symbol	tmp		99116						
ANR	99406	Symbol	IS_LONG		99116						
ANR	99407	Symbol	Z_OBJCE_P		99116						
ANR	99408	Symbol	Z_ARRVAL_P		99116						
ANR	99409	Symbol	base		99116						
ANR	99410	Symbol	* Z_OBJCE_P		99116						
ANR	99411	Function	convert_to_double	429:0:12198:13365							
ANR	99412	FunctionDef	convert_to_double (zval * op)		99411	0					
ANR	99413	CompoundStatement		430:0:12250:13365	99411	0					
ANR	99414	IdentifierDeclStatement	double tmp ;	431:1:12253:12263	99411	0	True				
ANR	99415	IdentifierDecl	tmp		99411	0					
ANR	99416	IdentifierDeclType	double		99411	0					
ANR	99417	Identifier	tmp		99411	1					
ANR	99418	SwitchStatement	switch ( Z_TYPE_P ( op ) )		99411	1					
ANR	99419	Condition	Z_TYPE_P ( op )	433:9:12275:12286	99411	0	True				
ANR	99420	CallExpression	Z_TYPE_P ( op )		99411	0					
ANR	99421	Callee	Z_TYPE_P		99411	0					
ANR	99422	Identifier	Z_TYPE_P		99411	0					
ANR	99423	ArgumentList	op		99411	1					
ANR	99424	Argument	op		99411	0					
ANR	99425	Identifier	op		99411	0					
ANR	99426	CompoundStatement		4:23:38:38	99411	1					
ANR	99427	Label	case IS_NULL :	434:2:12293:12305	99411	0	True				
ANR	99428	Identifier	IS_NULL		99411	0					
ANR	99429	ExpressionStatement	Z_DVAL_P ( op ) = 0.0	435:3:12310:12328	99411	1	True				
ANR	99430	AssignmentExpression	Z_DVAL_P ( op ) = 0.0		99411	0		=			
ANR	99431	CallExpression	Z_DVAL_P ( op )		99411	0					
ANR	99432	Callee	Z_DVAL_P		99411	0					
ANR	99433	Identifier	Z_DVAL_P		99411	0					
ANR	99434	ArgumentList	op		99411	1					
ANR	99435	Argument	op		99411	0					
ANR	99436	Identifier	op		99411	0					
ANR	99437	PrimaryExpression	0.0		99411	1					
ANR	99438	BreakStatement	break ;	436:3:12333:12338	99411	2	True				
ANR	99439	Label	case IS_RESOURCE :	437:2:12342:12358	99411	3	True				
ANR	99440	Identifier	IS_RESOURCE		99411	0					
ANR	99441	CompoundStatement		8:20:109:109	99411	4					
ANR	99442	ExpressionStatement	TSRMLS_FETCH ( )	438:4:12366:12380	99411	0	True				
ANR	99443	CallExpression	TSRMLS_FETCH ( )		99411	0					
ANR	99444	Callee	TSRMLS_FETCH		99411	0					
ANR	99445	Identifier	TSRMLS_FETCH		99411	0					
ANR	99446	ArgumentList			99411	1					
ANR	99447	ExpressionStatement	zend_list_delete ( Z_LVAL_P ( op ) )	440:4:12387:12417	99411	1	True				
ANR	99448	CallExpression	zend_list_delete ( Z_LVAL_P ( op ) )		99411	0					
ANR	99449	Callee	zend_list_delete		99411	0					
ANR	99450	Identifier	zend_list_delete		99411	0					
ANR	99451	ArgumentList	Z_LVAL_P ( op )		99411	1					
ANR	99452	Argument	Z_LVAL_P ( op )		99411	0					
ANR	99453	CallExpression	Z_LVAL_P ( op )		99411	0					
ANR	99454	Callee	Z_LVAL_P		99411	0					
ANR	99455	Identifier	Z_LVAL_P		99411	0					
ANR	99456	ArgumentList	op		99411	1					
ANR	99457	Argument	op		99411	0					
ANR	99458	Identifier	op		99411	0					
ANR	99459	Label	case IS_BOOL :	443:2:12463:12475	99411	5	True				
ANR	99460	Identifier	IS_BOOL		99411	0					
ANR	99461	Label	case IS_LONG :	444:2:12479:12491	99411	6	True				
ANR	99462	Identifier	IS_LONG		99411	0					
ANR	99463	ExpressionStatement	Z_DVAL_P ( op ) = ( double ) Z_LVAL_P ( op )	445:3:12496:12532	99411	7	True				
ANR	99464	AssignmentExpression	Z_DVAL_P ( op ) = ( double ) Z_LVAL_P ( op )		99411	0		=			
ANR	99465	CallExpression	Z_DVAL_P ( op )		99411	0					
ANR	99466	Callee	Z_DVAL_P		99411	0					
ANR	99467	Identifier	Z_DVAL_P		99411	0					
ANR	99468	ArgumentList	op		99411	1					
ANR	99469	Argument	op		99411	0					
ANR	99470	Identifier	op		99411	0					
ANR	99471	CastExpression	( double ) Z_LVAL_P ( op )		99411	1					
ANR	99472	CastTarget	double		99411	0					
ANR	99473	CallExpression	Z_LVAL_P ( op )		99411	1					
ANR	99474	Callee	Z_LVAL_P		99411	0					
ANR	99475	Identifier	Z_LVAL_P		99411	0					
ANR	99476	ArgumentList	op		99411	1					
ANR	99477	Argument	op		99411	0					
ANR	99478	Identifier	op		99411	0					
ANR	99479	BreakStatement	break ;	446:3:12537:12542	99411	8	True				
ANR	99480	Label	case IS_DOUBLE :	447:2:12546:12560	99411	9	True				
ANR	99481	Identifier	IS_DOUBLE		99411	0					
ANR	99482	BreakStatement	break ;	448:3:12565:12570	99411	10	True				
ANR	99483	Label	case IS_STRING :	449:2:12574:12588	99411	11	True				
ANR	99484	Identifier	IS_STRING		99411	0					
ANR	99485	CompoundStatement		22:4:348:377	99411	12					
ANR	99486	IdentifierDeclStatement	char * strval = Z_STRVAL_P ( op ) ;	451:4:12599:12628	99411	0	True				
ANR	99487	IdentifierDecl	* strval = Z_STRVAL_P ( op )		99411	0					
ANR	99488	IdentifierDeclType	char *		99411	0					
ANR	99489	Identifier	strval		99411	1					
ANR	99490	AssignmentExpression	* strval = Z_STRVAL_P ( op )		99411	2		=			
ANR	99491	Identifier	strval		99411	0					
ANR	99492	CallExpression	Z_STRVAL_P ( op )		99411	1					
ANR	99493	Callee	Z_STRVAL_P		99411	0					
ANR	99494	Identifier	Z_STRVAL_P		99411	0					
ANR	99495	ArgumentList	op		99411	1					
ANR	99496	Argument	op		99411	0					
ANR	99497	Identifier	op		99411	0					
ANR	99498	ExpressionStatement	"Z_DVAL_P ( op ) = zend_strtod ( strval , NULL )"	453:4:12635:12675	99411	1	True				
ANR	99499	AssignmentExpression	"Z_DVAL_P ( op ) = zend_strtod ( strval , NULL )"		99411	0		=			
ANR	99500	CallExpression	Z_DVAL_P ( op )		99411	0					
ANR	99501	Callee	Z_DVAL_P		99411	0					
ANR	99502	Identifier	Z_DVAL_P		99411	0					
ANR	99503	ArgumentList	op		99411	1					
ANR	99504	Argument	op		99411	0					
ANR	99505	Identifier	op		99411	0					
ANR	99506	CallExpression	"zend_strtod ( strval , NULL )"		99411	1					
ANR	99507	Callee	zend_strtod		99411	0					
ANR	99508	Identifier	zend_strtod		99411	0					
ANR	99509	ArgumentList	strval		99411	1					
ANR	99510	Argument	strval		99411	0					
ANR	99511	Identifier	strval		99411	0					
ANR	99512	Argument	NULL		99411	1					
ANR	99513	Identifier	NULL		99411	0					
ANR	99514	ExpressionStatement	str_efree ( strval )	454:4:12681:12698	99411	2	True				
ANR	99515	CallExpression	str_efree ( strval )		99411	0					
ANR	99516	Callee	str_efree		99411	0					
ANR	99517	Identifier	str_efree		99411	0					
ANR	99518	ArgumentList	strval		99411	1					
ANR	99519	Argument	strval		99411	0					
ANR	99520	Identifier	strval		99411	0					
ANR	99521	BreakStatement	break ;	456:3:12708:12713	99411	13	True				
ANR	99522	Label	case IS_ARRAY :	457:2:12717:12730	99411	14	True				
ANR	99523	Identifier	IS_ARRAY		99411	0					
ANR	99524	ExpressionStatement	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )	458:3:12735:12785	99411	15	True				
ANR	99525	AssignmentExpression	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )		99411	0		=			
ANR	99526	Identifier	tmp		99411	0					
ANR	99527	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0		99411	1					
ANR	99528	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		99411	0					
ANR	99529	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		99411	0					
ANR	99530	Callee	zend_hash_num_elements		99411	0					
ANR	99531	Identifier	zend_hash_num_elements		99411	0					
ANR	99532	ArgumentList	Z_ARRVAL_P ( op )		99411	1					
ANR	99533	Argument	Z_ARRVAL_P ( op )		99411	0					
ANR	99534	CallExpression	Z_ARRVAL_P ( op )		99411	0					
ANR	99535	Callee	Z_ARRVAL_P		99411	0					
ANR	99536	Identifier	Z_ARRVAL_P		99411	0					
ANR	99537	ArgumentList	op		99411	1					
ANR	99538	Argument	op		99411	0					
ANR	99539	Identifier	op		99411	0					
ANR	99540	PrimaryExpression	1		99411	1					
ANR	99541	PrimaryExpression	0		99411	2					
ANR	99542	ExpressionStatement	zval_dtor ( op )	459:3:12790:12803	99411	16	True				
ANR	99543	CallExpression	zval_dtor ( op )		99411	0					
ANR	99544	Callee	zval_dtor		99411	0					
ANR	99545	Identifier	zval_dtor		99411	0					
ANR	99546	ArgumentList	op		99411	1					
ANR	99547	Argument	op		99411	0					
ANR	99548	Identifier	op		99411	0					
ANR	99549	ExpressionStatement	Z_DVAL_P ( op ) = tmp	460:3:12808:12826	99411	17	True				
ANR	99550	AssignmentExpression	Z_DVAL_P ( op ) = tmp		99411	0		=			
ANR	99551	CallExpression	Z_DVAL_P ( op )		99411	0					
ANR	99552	Callee	Z_DVAL_P		99411	0					
ANR	99553	Identifier	Z_DVAL_P		99411	0					
ANR	99554	ArgumentList	op		99411	1					
ANR	99555	Argument	op		99411	0					
ANR	99556	Identifier	op		99411	0					
ANR	99557	Identifier	tmp		99411	1					
ANR	99558	BreakStatement	break ;	461:3:12831:12836	99411	18	True				
ANR	99559	Label	case IS_OBJECT :	462:2:12840:12854	99411	19	True				
ANR	99560	Identifier	IS_OBJECT		99411	0					
ANR	99561	CompoundStatement		35:4:614:633	99411	20					
ANR	99562	IdentifierDeclStatement	double retval = 1.0 ;	464:4:12865:12884	99411	0	True				
ANR	99563	IdentifierDecl	retval = 1.0		99411	0					
ANR	99564	IdentifierDeclType	double		99411	0					
ANR	99565	Identifier	retval		99411	1					
ANR	99566	AssignmentExpression	retval = 1.0		99411	2		=			
ANR	99567	Identifier	retval		99411	0					
ANR	99568	PrimaryExpression	1.0		99411	1					
ANR	99569	ExpressionStatement	TSRMLS_FETCH ( )	465:4:12890:12904	99411	1	True				
ANR	99570	CallExpression	TSRMLS_FETCH ( )		99411	0					
ANR	99571	Callee	TSRMLS_FETCH		99411	0					
ANR	99572	Identifier	TSRMLS_FETCH		99411	0					
ANR	99573	ArgumentList			99411	1					
ANR	99574	ExpressionStatement	"convert_object_to_type ( op , IS_DOUBLE , convert_to_double )"	467:4:12911:12967	99411	2	True				
ANR	99575	CallExpression	"convert_object_to_type ( op , IS_DOUBLE , convert_to_double )"		99411	0					
ANR	99576	Callee	convert_object_to_type		99411	0					
ANR	99577	Identifier	convert_object_to_type		99411	0					
ANR	99578	ArgumentList	op		99411	1					
ANR	99579	Argument	op		99411	0					
ANR	99580	Identifier	op		99411	0					
ANR	99581	Argument	IS_DOUBLE		99411	1					
ANR	99582	Identifier	IS_DOUBLE		99411	0					
ANR	99583	Argument	convert_to_double		99411	2					
ANR	99584	Identifier	convert_to_double		99411	0					
ANR	99585	IfStatement	if ( Z_TYPE_P ( op ) == IS_DOUBLE )		99411	3					
ANR	99586	Condition	Z_TYPE_P ( op ) == IS_DOUBLE	469:8:12978:13002	99411	0	True				
ANR	99587	EqualityExpression	Z_TYPE_P ( op ) == IS_DOUBLE		99411	0		==			
ANR	99588	CallExpression	Z_TYPE_P ( op )		99411	0					
ANR	99589	Callee	Z_TYPE_P		99411	0					
ANR	99590	Identifier	Z_TYPE_P		99411	0					
ANR	99591	ArgumentList	op		99411	1					
ANR	99592	Argument	op		99411	0					
ANR	99593	Identifier	op		99411	0					
ANR	99594	Identifier	IS_DOUBLE		99411	1					
ANR	99595	CompoundStatement		40:35:754:754	99411	1					
ANR	99596	ReturnStatement	return ;	470:5:13012:13018	99411	0	True				
ANR	99597	ExpressionStatement	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to double"" , Z_OBJCE_P ( op ) -> name )"	472:4:13030:13126	99411	4	True				
ANR	99598	CallExpression	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to double"" , Z_OBJCE_P ( op ) -> name )"		99411	0					
ANR	99599	Callee	zend_error		99411	0					
ANR	99600	Identifier	zend_error		99411	0					
ANR	99601	ArgumentList	E_NOTICE		99411	1					
ANR	99602	Argument	E_NOTICE		99411	0					
ANR	99603	Identifier	E_NOTICE		99411	0					
ANR	99604	Argument	"""Object of class %s could not be converted to double"""		99411	1					
ANR	99605	PrimaryExpression	"""Object of class %s could not be converted to double"""		99411	0					
ANR	99606	Argument	Z_OBJCE_P ( op ) -> name		99411	2					
ANR	99607	PtrMemberAccess	Z_OBJCE_P ( op ) -> name		99411	0					
ANR	99608	CallExpression	Z_OBJCE_P ( op )		99411	0					
ANR	99609	Callee	Z_OBJCE_P		99411	0					
ANR	99610	Identifier	Z_OBJCE_P		99411	0					
ANR	99611	ArgumentList	op		99411	1					
ANR	99612	Argument	op		99411	0					
ANR	99613	Identifier	op		99411	0					
ANR	99614	Identifier	name		99411	1					
ANR	99615	ExpressionStatement	zval_dtor ( op )	474:4:13133:13146	99411	5	True				
ANR	99616	CallExpression	zval_dtor ( op )		99411	0					
ANR	99617	Callee	zval_dtor		99411	0					
ANR	99618	Identifier	zval_dtor		99411	0					
ANR	99619	ArgumentList	op		99411	1					
ANR	99620	Argument	op		99411	0					
ANR	99621	Identifier	op		99411	0					
ANR	99622	ExpressionStatement	"ZVAL_DOUBLE ( op , retval )"	475:4:13152:13175	99411	6	True				
ANR	99623	CallExpression	"ZVAL_DOUBLE ( op , retval )"		99411	0					
ANR	99624	Callee	ZVAL_DOUBLE		99411	0					
ANR	99625	Identifier	ZVAL_DOUBLE		99411	0					
ANR	99626	ArgumentList	op		99411	1					
ANR	99627	Argument	op		99411	0					
ANR	99628	Identifier	op		99411	0					
ANR	99629	Argument	retval		99411	1					
ANR	99630	Identifier	retval		99411	0					
ANR	99631	BreakStatement	break ;	476:4:13181:13186	99411	7	True				
ANR	99632	Label	default :	478:2:13195:13202	99411	21	True				
ANR	99633	Identifier	default		99411	0					
ANR	99634	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot convert to real value (type=%d)"" , Z_TYPE_P ( op ) )"	479:3:13207:13284	99411	22	True				
ANR	99635	CallExpression	"zend_error ( E_WARNING , ""Cannot convert to real value (type=%d)"" , Z_TYPE_P ( op ) )"		99411	0					
ANR	99636	Callee	zend_error		99411	0					
ANR	99637	Identifier	zend_error		99411	0					
ANR	99638	ArgumentList	E_WARNING		99411	1					
ANR	99639	Argument	E_WARNING		99411	0					
ANR	99640	Identifier	E_WARNING		99411	0					
ANR	99641	Argument	"""Cannot convert to real value (type=%d)"""		99411	1					
ANR	99642	PrimaryExpression	"""Cannot convert to real value (type=%d)"""		99411	0					
ANR	99643	Argument	Z_TYPE_P ( op )		99411	2					
ANR	99644	CallExpression	Z_TYPE_P ( op )		99411	0					
ANR	99645	Callee	Z_TYPE_P		99411	0					
ANR	99646	Identifier	Z_TYPE_P		99411	0					
ANR	99647	ArgumentList	op		99411	1					
ANR	99648	Argument	op		99411	0					
ANR	99649	Identifier	op		99411	0					
ANR	99650	ExpressionStatement	zval_dtor ( op )	480:3:13289:13302	99411	23	True				
ANR	99651	CallExpression	zval_dtor ( op )		99411	0					
ANR	99652	Callee	zval_dtor		99411	0					
ANR	99653	Identifier	zval_dtor		99411	0					
ANR	99654	ArgumentList	op		99411	1					
ANR	99655	Argument	op		99411	0					
ANR	99656	Identifier	op		99411	0					
ANR	99657	ExpressionStatement	Z_DVAL_P ( op ) = 0	481:3:13307:13323	99411	24	True				
ANR	99658	AssignmentExpression	Z_DVAL_P ( op ) = 0		99411	0		=			
ANR	99659	CallExpression	Z_DVAL_P ( op )		99411	0					
ANR	99660	Callee	Z_DVAL_P		99411	0					
ANR	99661	Identifier	Z_DVAL_P		99411	0					
ANR	99662	ArgumentList	op		99411	1					
ANR	99663	Argument	op		99411	0					
ANR	99664	Identifier	op		99411	0					
ANR	99665	PrimaryExpression	0		99411	1					
ANR	99666	BreakStatement	break ;	482:3:13328:13333	99411	25	True				
ANR	99667	ExpressionStatement	Z_TYPE_P ( op ) = IS_DOUBLE	484:1:13339:13363	99411	2	True				
ANR	99668	AssignmentExpression	Z_TYPE_P ( op ) = IS_DOUBLE		99411	0		=			
ANR	99669	CallExpression	Z_TYPE_P ( op )		99411	0					
ANR	99670	Callee	Z_TYPE_P		99411	0					
ANR	99671	Identifier	Z_TYPE_P		99411	0					
ANR	99672	ArgumentList	op		99411	1					
ANR	99673	Argument	op		99411	0					
ANR	99674	Identifier	op		99411	0					
ANR	99675	Identifier	IS_DOUBLE		99411	1					
ANR	99676	ReturnType	ZEND_API void		99411	1					
ANR	99677	Identifier	convert_to_double		99411	2					
ANR	99678	ParameterList	zval * op		99411	3					
ANR	99679	Parameter	zval * op	429:32:12230:12237	99411	0	True				
ANR	99680	ParameterType	zval *		99411	0					
ANR	99681	Identifier	op		99411	1					
ANR	99682	CFGEntryNode	ENTRY		99411		True				
ANR	99683	CFGExitNode	EXIT		99411		True				
ANR	99684	Symbol	op		99411						
ANR	99685	Symbol	NULL		99411						
ANR	99686	Symbol	strval		99411						
ANR	99687	Symbol	zend_hash_num_elements		99411						
ANR	99688	Symbol	convert_to_double		99411						
ANR	99689	Symbol	E_NOTICE		99411						
ANR	99690	Symbol	Z_TYPE_P		99411						
ANR	99691	Symbol	Z_STRVAL_P		99411						
ANR	99692	Symbol	Z_DVAL_P		99411						
ANR	99693	Symbol	retval		99411						
ANR	99694	Symbol	Z_LVAL_P		99411						
ANR	99695	Symbol	zend_strtod		99411						
ANR	99696	Symbol	Z_OBJCE_P ( op ) -> name		99411						
ANR	99697	Symbol	E_WARNING		99411						
ANR	99698	Symbol	tmp		99411						
ANR	99699	Symbol	Z_OBJCE_P		99411						
ANR	99700	Symbol	IS_DOUBLE		99411						
ANR	99701	Symbol	Z_ARRVAL_P		99411						
ANR	99702	Symbol	* Z_OBJCE_P		99411						
ANR	99703	Function	convert_to_null	488:0:13378:13767							
ANR	99704	FunctionDef	convert_to_null (zval * op)		99703	0					
ANR	99705	CompoundStatement		489:0:13428:13767	99703	0					
ANR	99706	IfStatement	if ( Z_TYPE_P ( op ) == IS_OBJECT )		99703	0					
ANR	99707	Condition	Z_TYPE_P ( op ) == IS_OBJECT	490:5:13435:13459	99703	0	True				
ANR	99708	EqualityExpression	Z_TYPE_P ( op ) == IS_OBJECT		99703	0		==			
ANR	99709	CallExpression	Z_TYPE_P ( op )		99703	0					
ANR	99710	Callee	Z_TYPE_P		99703	0					
ANR	99711	Identifier	Z_TYPE_P		99703	0					
ANR	99712	ArgumentList	op		99703	1					
ANR	99713	Argument	op		99703	0					
ANR	99714	Identifier	op		99703	0					
ANR	99715	Identifier	IS_OBJECT		99703	1					
ANR	99716	CompoundStatement		2:32:33:33	99703	1					
ANR	99717	IfStatement	if ( Z_OBJ_HT_P ( op ) -> cast_object )		99703	0					
ANR	99718	Condition	Z_OBJ_HT_P ( op ) -> cast_object	491:6:13470:13496	99703	0	True				
ANR	99719	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> cast_object		99703	0					
ANR	99720	CallExpression	Z_OBJ_HT_P ( op )		99703	0					
ANR	99721	Callee	Z_OBJ_HT_P		99703	0					
ANR	99722	Identifier	Z_OBJ_HT_P		99703	0					
ANR	99723	ArgumentList	op		99703	1					
ANR	99724	Argument	op		99703	0					
ANR	99725	Identifier	op		99703	0					
ANR	99726	Identifier	cast_object		99703	1					
ANR	99727	CompoundStatement		4:3:75:84	99703	1					
ANR	99728	IdentifierDeclStatement	zval * org ;	492:3:13504:13513	99703	0	True				
ANR	99729	IdentifierDecl	* org		99703	0					
ANR	99730	IdentifierDeclType	zval *		99703	0					
ANR	99731	Identifier	org		99703	1					
ANR	99732	ExpressionStatement	TSRMLS_FETCH ( )	493:3:13518:13532	99703	1	True				
ANR	99733	CallExpression	TSRMLS_FETCH ( )		99703	0					
ANR	99734	Callee	TSRMLS_FETCH		99703	0					
ANR	99735	Identifier	TSRMLS_FETCH		99703	0					
ANR	99736	ArgumentList			99703	1					
ANR	99737	ExpressionStatement	ALLOC_ZVAL ( org )	495:3:13538:13553	99703	2	True				
ANR	99738	CallExpression	ALLOC_ZVAL ( org )		99703	0					
ANR	99739	Callee	ALLOC_ZVAL		99703	0					
ANR	99740	Identifier	ALLOC_ZVAL		99703	0					
ANR	99741	ArgumentList	org		99703	1					
ANR	99742	Argument	org		99703	0					
ANR	99743	Identifier	org		99703	0					
ANR	99744	ExpressionStatement	* org = * op	496:3:13558:13568	99703	3	True				
ANR	99745	AssignmentExpression	* org = * op		99703	0		=			
ANR	99746	UnaryOperationExpression	* org		99703	0					
ANR	99747	UnaryOperator	*		99703	0					
ANR	99748	Identifier	org		99703	1					
ANR	99749	UnaryOperationExpression	* op		99703	1					
ANR	99750	UnaryOperator	*		99703	0					
ANR	99751	Identifier	op		99703	1					
ANR	99752	Statement	if	497:3:13573:13574	99703	4	True				
ANR	99753	Statement	(	497:6:13576:13576	99703	5	True				
ANR	99754	Statement	Z_OBJ_HT_P	497:7:13577:13586	99703	6	True				
ANR	99755	Statement	(	497:17:13587:13587	99703	7	True				
ANR	99756	Statement	op	497:18:13588:13589	99703	8	True				
ANR	99757	Statement	)	497:20:13590:13590	99703	9	True				
ANR	99758	Statement	->	497:21:13591:13592	99703	10	True				
ANR	99759	Statement	cast_object	497:23:13593:13603	99703	11	True				
ANR	99760	Statement	(	497:34:13604:13604	99703	12	True				
ANR	99761	Statement	org	497:35:13605:13607	99703	13	True				
ANR	99762	Statement	","	497:38:13608:13608	99703	14	True				
ANR	99763	Statement	op	497:40:13610:13611	99703	15	True				
ANR	99764	Statement	","	497:42:13612:13612	99703	16	True				
ANR	99765	Statement	IS_NULL	497:44:13614:13620	99703	17	True				
ANR	99766	Statement	TSRMLS_CC	497:52:13622:13630	99703	18	True				
ANR	99767	Statement	)	497:61:13631:13631	99703	19	True				
ANR	99768	Statement	==	497:63:13633:13634	99703	20	True				
ANR	99769	Statement	SUCCESS	497:66:13636:13642	99703	21	True				
ANR	99770	Statement	)	497:73:13643:13643	99703	22	True				
ANR	99771	CompoundStatement		9:75:216:216	99703	23					
ANR	99772	ExpressionStatement	zval_dtor ( org )	498:4:13651:13665	99703	0	True				
ANR	99773	CallExpression	zval_dtor ( org )		99703	0					
ANR	99774	Callee	zval_dtor		99703	0					
ANR	99775	Identifier	zval_dtor		99703	0					
ANR	99776	ArgumentList	org		99703	1					
ANR	99777	Argument	org		99703	0					
ANR	99778	Identifier	org		99703	0					
ANR	99779	ReturnStatement	return ;	499:4:13671:13677	99703	1	True				
ANR	99780	ExpressionStatement	* op = * org	501:3:13687:13697	99703	24	True				
ANR	99781	AssignmentExpression	* op = * org		99703	0		=			
ANR	99782	UnaryOperationExpression	* op		99703	0					
ANR	99783	UnaryOperator	*		99703	0					
ANR	99784	Identifier	op		99703	1					
ANR	99785	UnaryOperationExpression	* org		99703	1					
ANR	99786	UnaryOperator	*		99703	0					
ANR	99787	Identifier	org		99703	1					
ANR	99788	ExpressionStatement	FREE_ZVAL ( org )	502:3:13702:13716	99703	25	True				
ANR	99789	CallExpression	FREE_ZVAL ( org )		99703	0					
ANR	99790	Callee	FREE_ZVAL		99703	0					
ANR	99791	Identifier	FREE_ZVAL		99703	0					
ANR	99792	ArgumentList	org		99703	1					
ANR	99793	Argument	org		99703	0					
ANR	99794	Identifier	org		99703	0					
ANR	99795	ExpressionStatement	zval_dtor ( op )	506:1:13727:13740	99703	1	True				
ANR	99796	CallExpression	zval_dtor ( op )		99703	0					
ANR	99797	Callee	zval_dtor		99703	0					
ANR	99798	Identifier	zval_dtor		99703	0					
ANR	99799	ArgumentList	op		99703	1					
ANR	99800	Argument	op		99703	0					
ANR	99801	Identifier	op		99703	0					
ANR	99802	ExpressionStatement	Z_TYPE_P ( op ) = IS_NULL	507:1:13743:13765	99703	2	True				
ANR	99803	AssignmentExpression	Z_TYPE_P ( op ) = IS_NULL		99703	0		=			
ANR	99804	CallExpression	Z_TYPE_P ( op )		99703	0					
ANR	99805	Callee	Z_TYPE_P		99703	0					
ANR	99806	Identifier	Z_TYPE_P		99703	0					
ANR	99807	ArgumentList	op		99703	1					
ANR	99808	Argument	op		99703	0					
ANR	99809	Identifier	op		99703	0					
ANR	99810	Identifier	IS_NULL		99703	1					
ANR	99811	ReturnType	ZEND_API void		99703	1					
ANR	99812	Identifier	convert_to_null		99703	2					
ANR	99813	ParameterList	zval * op		99703	3					
ANR	99814	Parameter	zval * op	488:30:13408:13415	99703	0	True				
ANR	99815	ParameterType	zval *		99703	0					
ANR	99816	Identifier	op		99703	1					
ANR	99817	CFGEntryNode	ENTRY		99703		True				
ANR	99818	CFGExitNode	EXIT		99703		True				
ANR	99819	Symbol	op		99703						
ANR	99820	Symbol	* op		99703						
ANR	99821	Symbol	IS_NULL		99703						
ANR	99822	Symbol	org		99703						
ANR	99823	Symbol	Z_OBJ_HT_P		99703						
ANR	99824	Symbol	Z_OBJ_HT_P ( op ) -> cast_object		99703						
ANR	99825	Symbol	Z_TYPE_P		99703						
ANR	99826	Symbol	IS_OBJECT		99703						
ANR	99827	Symbol	* Z_OBJ_HT_P		99703						
ANR	99828	Symbol	* org		99703						
ANR	99829	Function	convert_to_boolean	511:0:13780:14910							
ANR	99830	FunctionDef	convert_to_boolean (zval * op)		99829	0					
ANR	99831	CompoundStatement		512:0:13833:14910	99829	0					
ANR	99832	IdentifierDeclStatement	int tmp ;	513:1:13836:13843	99829	0	True				
ANR	99833	IdentifierDecl	tmp		99829	0					
ANR	99834	IdentifierDeclType	int		99829	0					
ANR	99835	Identifier	tmp		99829	1					
ANR	99836	SwitchStatement	switch ( Z_TYPE_P ( op ) )		99829	1					
ANR	99837	Condition	Z_TYPE_P ( op )	515:9:13855:13866	99829	0	True				
ANR	99838	CallExpression	Z_TYPE_P ( op )		99829	0					
ANR	99839	Callee	Z_TYPE_P		99829	0					
ANR	99840	Identifier	Z_TYPE_P		99829	0					
ANR	99841	ArgumentList	op		99829	1					
ANR	99842	Argument	op		99829	0					
ANR	99843	Identifier	op		99829	0					
ANR	99844	CompoundStatement		4:23:35:35	99829	1					
ANR	99845	Label	case IS_BOOL :	516:2:13873:13885	99829	0	True				
ANR	99846	Identifier	IS_BOOL		99829	0					
ANR	99847	BreakStatement	break ;	517:3:13890:13895	99829	1	True				
ANR	99848	Label	case IS_NULL :	518:2:13899:13911	99829	2	True				
ANR	99849	Identifier	IS_NULL		99829	0					
ANR	99850	ExpressionStatement	Z_LVAL_P ( op ) = 0	519:3:13916:13932	99829	3	True				
ANR	99851	AssignmentExpression	Z_LVAL_P ( op ) = 0		99829	0		=			
ANR	99852	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	99853	Callee	Z_LVAL_P		99829	0					
ANR	99854	Identifier	Z_LVAL_P		99829	0					
ANR	99855	ArgumentList	op		99829	1					
ANR	99856	Argument	op		99829	0					
ANR	99857	Identifier	op		99829	0					
ANR	99858	PrimaryExpression	0		99829	1					
ANR	99859	BreakStatement	break ;	520:3:13937:13942	99829	4	True				
ANR	99860	Label	case IS_RESOURCE :	521:2:13946:13962	99829	5	True				
ANR	99861	Identifier	IS_RESOURCE		99829	0					
ANR	99862	CompoundStatement		10:20:130:130	99829	6					
ANR	99863	ExpressionStatement	TSRMLS_FETCH ( )	522:4:13970:13984	99829	0	True				
ANR	99864	CallExpression	TSRMLS_FETCH ( )		99829	0					
ANR	99865	Callee	TSRMLS_FETCH		99829	0					
ANR	99866	Identifier	TSRMLS_FETCH		99829	0					
ANR	99867	ArgumentList			99829	1					
ANR	99868	ExpressionStatement	zend_list_delete ( Z_LVAL_P ( op ) )	524:4:13991:14021	99829	1	True				
ANR	99869	CallExpression	zend_list_delete ( Z_LVAL_P ( op ) )		99829	0					
ANR	99870	Callee	zend_list_delete		99829	0					
ANR	99871	Identifier	zend_list_delete		99829	0					
ANR	99872	ArgumentList	Z_LVAL_P ( op )		99829	1					
ANR	99873	Argument	Z_LVAL_P ( op )		99829	0					
ANR	99874	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	99875	Callee	Z_LVAL_P		99829	0					
ANR	99876	Identifier	Z_LVAL_P		99829	0					
ANR	99877	ArgumentList	op		99829	1					
ANR	99878	Argument	op		99829	0					
ANR	99879	Identifier	op		99829	0					
ANR	99880	Label	case IS_LONG :	527:2:14067:14079	99829	7	True				
ANR	99881	Identifier	IS_LONG		99829	0					
ANR	99882	ExpressionStatement	Z_LVAL_P ( op ) = ( Z_LVAL_P ( op ) ? 1 : 0 )	528:3:14084:14121	99829	8	True				
ANR	99883	AssignmentExpression	Z_LVAL_P ( op ) = ( Z_LVAL_P ( op ) ? 1 : 0 )		99829	0		=			
ANR	99884	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	99885	Callee	Z_LVAL_P		99829	0					
ANR	99886	Identifier	Z_LVAL_P		99829	0					
ANR	99887	ArgumentList	op		99829	1					
ANR	99888	Argument	op		99829	0					
ANR	99889	Identifier	op		99829	0					
ANR	99890	ConditionalExpression	Z_LVAL_P ( op ) ? 1 : 0		99829	1					
ANR	99891	Condition	Z_LVAL_P ( op )		99829	0					
ANR	99892	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	99893	Callee	Z_LVAL_P		99829	0					
ANR	99894	Identifier	Z_LVAL_P		99829	0					
ANR	99895	ArgumentList	op		99829	1					
ANR	99896	Argument	op		99829	0					
ANR	99897	Identifier	op		99829	0					
ANR	99898	PrimaryExpression	1		99829	1					
ANR	99899	PrimaryExpression	0		99829	2					
ANR	99900	BreakStatement	break ;	529:3:14126:14131	99829	9	True				
ANR	99901	Label	case IS_DOUBLE :	530:2:14135:14149	99829	10	True				
ANR	99902	Identifier	IS_DOUBLE		99829	0					
ANR	99903	ExpressionStatement	Z_LVAL_P ( op ) = ( Z_DVAL_P ( op ) ? 1 : 0 )	531:3:14154:14191	99829	11	True				
ANR	99904	AssignmentExpression	Z_LVAL_P ( op ) = ( Z_DVAL_P ( op ) ? 1 : 0 )		99829	0		=			
ANR	99905	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	99906	Callee	Z_LVAL_P		99829	0					
ANR	99907	Identifier	Z_LVAL_P		99829	0					
ANR	99908	ArgumentList	op		99829	1					
ANR	99909	Argument	op		99829	0					
ANR	99910	Identifier	op		99829	0					
ANR	99911	ConditionalExpression	Z_DVAL_P ( op ) ? 1 : 0		99829	1					
ANR	99912	Condition	Z_DVAL_P ( op )		99829	0					
ANR	99913	CallExpression	Z_DVAL_P ( op )		99829	0					
ANR	99914	Callee	Z_DVAL_P		99829	0					
ANR	99915	Identifier	Z_DVAL_P		99829	0					
ANR	99916	ArgumentList	op		99829	1					
ANR	99917	Argument	op		99829	0					
ANR	99918	Identifier	op		99829	0					
ANR	99919	PrimaryExpression	1		99829	1					
ANR	99920	PrimaryExpression	0		99829	2					
ANR	99921	BreakStatement	break ;	532:3:14196:14201	99829	12	True				
ANR	99922	Label	case IS_STRING :	533:2:14205:14219	99829	13	True				
ANR	99923	Identifier	IS_STRING		99829	0					
ANR	99924	CompoundStatement		24:4:396:425	99829	14					
ANR	99925	IdentifierDeclStatement	char * strval = Z_STRVAL_P ( op ) ;	535:4:14230:14259	99829	0	True				
ANR	99926	IdentifierDecl	* strval = Z_STRVAL_P ( op )		99829	0					
ANR	99927	IdentifierDeclType	char *		99829	0					
ANR	99928	Identifier	strval		99829	1					
ANR	99929	AssignmentExpression	* strval = Z_STRVAL_P ( op )		99829	2		=			
ANR	99930	Identifier	strval		99829	0					
ANR	99931	CallExpression	Z_STRVAL_P ( op )		99829	1					
ANR	99932	Callee	Z_STRVAL_P		99829	0					
ANR	99933	Identifier	Z_STRVAL_P		99829	0					
ANR	99934	ArgumentList	op		99829	1					
ANR	99935	Argument	op		99829	0					
ANR	99936	Identifier	op		99829	0					
ANR	99937	IfStatement	if ( Z_STRLEN_P ( op ) == 0 || ( Z_STRLEN_P ( op ) == 1 && Z_STRVAL_P ( op ) [ 0 ] == '0' ) )		99829	1					
ANR	99938	Condition	Z_STRLEN_P ( op ) == 0 || ( Z_STRLEN_P ( op ) == 1 && Z_STRVAL_P ( op ) [ 0 ] == '0' )	537:8:14270:14342	99829	0	True				
ANR	99939	OrExpression	Z_STRLEN_P ( op ) == 0 || ( Z_STRLEN_P ( op ) == 1 && Z_STRVAL_P ( op ) [ 0 ] == '0' )		99829	0		||			
ANR	99940	EqualityExpression	Z_STRLEN_P ( op ) == 0		99829	0		==			
ANR	99941	CallExpression	Z_STRLEN_P ( op )		99829	0					
ANR	99942	Callee	Z_STRLEN_P		99829	0					
ANR	99943	Identifier	Z_STRLEN_P		99829	0					
ANR	99944	ArgumentList	op		99829	1					
ANR	99945	Argument	op		99829	0					
ANR	99946	Identifier	op		99829	0					
ANR	99947	PrimaryExpression	0		99829	1					
ANR	99948	AndExpression	Z_STRLEN_P ( op ) == 1 && Z_STRVAL_P ( op ) [ 0 ] == '0'		99829	1		&&			
ANR	99949	EqualityExpression	Z_STRLEN_P ( op ) == 1		99829	0		==			
ANR	99950	CallExpression	Z_STRLEN_P ( op )		99829	0					
ANR	99951	Callee	Z_STRLEN_P		99829	0					
ANR	99952	Identifier	Z_STRLEN_P		99829	0					
ANR	99953	ArgumentList	op		99829	1					
ANR	99954	Argument	op		99829	0					
ANR	99955	Identifier	op		99829	0					
ANR	99956	PrimaryExpression	1		99829	1					
ANR	99957	EqualityExpression	Z_STRVAL_P ( op ) [ 0 ] == '0'		99829	1		==			
ANR	99958	ArrayIndexing	Z_STRVAL_P ( op ) [ 0 ]		99829	0					
ANR	99959	CallExpression	Z_STRVAL_P ( op )		99829	0					
ANR	99960	Callee	Z_STRVAL_P		99829	0					
ANR	99961	Identifier	Z_STRVAL_P		99829	0					
ANR	99962	ArgumentList	op		99829	1					
ANR	99963	Argument	op		99829	0					
ANR	99964	Identifier	op		99829	0					
ANR	99965	PrimaryExpression	0		99829	1					
ANR	99966	PrimaryExpression	'0'		99829	1					
ANR	99967	CompoundStatement		27:55:511:511	99829	1					
ANR	99968	ExpressionStatement	Z_LVAL_P ( op ) = 0	539:5:14352:14368	99829	0	True				
ANR	99969	AssignmentExpression	Z_LVAL_P ( op ) = 0		99829	0		=			
ANR	99970	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	99971	Callee	Z_LVAL_P		99829	0					
ANR	99972	Identifier	Z_LVAL_P		99829	0					
ANR	99973	ArgumentList	op		99829	1					
ANR	99974	Argument	op		99829	0					
ANR	99975	Identifier	op		99829	0					
ANR	99976	PrimaryExpression	0		99829	1					
ANR	99977	ElseStatement	else		99829	0					
ANR	99978	CompoundStatement		29:11:547:547	99829	0					
ANR	99979	ExpressionStatement	Z_LVAL_P ( op ) = 1	541:5:14388:14404	99829	0	True				
ANR	99980	AssignmentExpression	Z_LVAL_P ( op ) = 1		99829	0		=			
ANR	99981	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	99982	Callee	Z_LVAL_P		99829	0					
ANR	99983	Identifier	Z_LVAL_P		99829	0					
ANR	99984	ArgumentList	op		99829	1					
ANR	99985	Argument	op		99829	0					
ANR	99986	Identifier	op		99829	0					
ANR	99987	PrimaryExpression	1		99829	1					
ANR	99988	ExpressionStatement	str_efree ( strval )	543:4:14416:14433	99829	2	True				
ANR	99989	CallExpression	str_efree ( strval )		99829	0					
ANR	99990	Callee	str_efree		99829	0					
ANR	99991	Identifier	str_efree		99829	0					
ANR	99992	ArgumentList	strval		99829	1					
ANR	99993	Argument	strval		99829	0					
ANR	99994	Identifier	strval		99829	0					
ANR	99995	BreakStatement	break ;	545:3:14443:14448	99829	15	True				
ANR	99996	Label	case IS_ARRAY :	546:2:14452:14465	99829	16	True				
ANR	99997	Identifier	IS_ARRAY		99829	0					
ANR	99998	ExpressionStatement	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )	547:3:14470:14520	99829	17	True				
ANR	99999	AssignmentExpression	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )		99829	0		=			
ANR	100000	Identifier	tmp		99829	0					
ANR	100001	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0		99829	1					
ANR	100002	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		99829	0					
ANR	100003	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		99829	0					
ANR	100004	Callee	zend_hash_num_elements		99829	0					
ANR	100005	Identifier	zend_hash_num_elements		99829	0					
ANR	100006	ArgumentList	Z_ARRVAL_P ( op )		99829	1					
ANR	100007	Argument	Z_ARRVAL_P ( op )		99829	0					
ANR	100008	CallExpression	Z_ARRVAL_P ( op )		99829	0					
ANR	100009	Callee	Z_ARRVAL_P		99829	0					
ANR	100010	Identifier	Z_ARRVAL_P		99829	0					
ANR	100011	ArgumentList	op		99829	1					
ANR	100012	Argument	op		99829	0					
ANR	100013	Identifier	op		99829	0					
ANR	100014	PrimaryExpression	1		99829	1					
ANR	100015	PrimaryExpression	0		99829	2					
ANR	100016	ExpressionStatement	zval_dtor ( op )	548:3:14525:14538	99829	18	True				
ANR	100017	CallExpression	zval_dtor ( op )		99829	0					
ANR	100018	Callee	zval_dtor		99829	0					
ANR	100019	Identifier	zval_dtor		99829	0					
ANR	100020	ArgumentList	op		99829	1					
ANR	100021	Argument	op		99829	0					
ANR	100022	Identifier	op		99829	0					
ANR	100023	ExpressionStatement	Z_LVAL_P ( op ) = tmp	549:3:14543:14561	99829	19	True				
ANR	100024	AssignmentExpression	Z_LVAL_P ( op ) = tmp		99829	0		=			
ANR	100025	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	100026	Callee	Z_LVAL_P		99829	0					
ANR	100027	Identifier	Z_LVAL_P		99829	0					
ANR	100028	ArgumentList	op		99829	1					
ANR	100029	Argument	op		99829	0					
ANR	100030	Identifier	op		99829	0					
ANR	100031	Identifier	tmp		99829	1					
ANR	100032	BreakStatement	break ;	550:3:14566:14571	99829	20	True				
ANR	100033	Label	case IS_OBJECT :	551:2:14575:14589	99829	21	True				
ANR	100034	Identifier	IS_OBJECT		99829	0					
ANR	100035	CompoundStatement		42:4:766:786	99829	22					
ANR	100036	IdentifierDeclStatement	zend_bool retval = 1 ;	553:4:14600:14620	99829	0	True				
ANR	100037	IdentifierDecl	retval = 1		99829	0					
ANR	100038	IdentifierDeclType	zend_bool		99829	0					
ANR	100039	Identifier	retval		99829	1					
ANR	100040	AssignmentExpression	retval = 1		99829	2		=			
ANR	100041	Identifier	retval		99829	0					
ANR	100042	PrimaryExpression	1		99829	1					
ANR	100043	ExpressionStatement	TSRMLS_FETCH ( )	554:4:14626:14640	99829	1	True				
ANR	100044	CallExpression	TSRMLS_FETCH ( )		99829	0					
ANR	100045	Callee	TSRMLS_FETCH		99829	0					
ANR	100046	Identifier	TSRMLS_FETCH		99829	0					
ANR	100047	ArgumentList			99829	1					
ANR	100048	ExpressionStatement	"convert_object_to_type ( op , IS_BOOL , convert_to_boolean )"	556:4:14647:14702	99829	2	True				
ANR	100049	CallExpression	"convert_object_to_type ( op , IS_BOOL , convert_to_boolean )"		99829	0					
ANR	100050	Callee	convert_object_to_type		99829	0					
ANR	100051	Identifier	convert_object_to_type		99829	0					
ANR	100052	ArgumentList	op		99829	1					
ANR	100053	Argument	op		99829	0					
ANR	100054	Identifier	op		99829	0					
ANR	100055	Argument	IS_BOOL		99829	1					
ANR	100056	Identifier	IS_BOOL		99829	0					
ANR	100057	Argument	convert_to_boolean		99829	2					
ANR	100058	Identifier	convert_to_boolean		99829	0					
ANR	100059	IfStatement	if ( Z_TYPE_P ( op ) == IS_BOOL )		99829	3					
ANR	100060	Condition	Z_TYPE_P ( op ) == IS_BOOL	558:8:14713:14735	99829	0	True				
ANR	100061	EqualityExpression	Z_TYPE_P ( op ) == IS_BOOL		99829	0		==			
ANR	100062	CallExpression	Z_TYPE_P ( op )		99829	0					
ANR	100063	Callee	Z_TYPE_P		99829	0					
ANR	100064	Identifier	Z_TYPE_P		99829	0					
ANR	100065	ArgumentList	op		99829	1					
ANR	100066	Argument	op		99829	0					
ANR	100067	Identifier	op		99829	0					
ANR	100068	Identifier	IS_BOOL		99829	1					
ANR	100069	CompoundStatement		47:33:904:904	99829	1					
ANR	100070	ReturnStatement	return ;	559:5:14745:14751	99829	0	True				
ANR	100071	ExpressionStatement	zval_dtor ( op )	562:4:14764:14777	99829	4	True				
ANR	100072	CallExpression	zval_dtor ( op )		99829	0					
ANR	100073	Callee	zval_dtor		99829	0					
ANR	100074	Identifier	zval_dtor		99829	0					
ANR	100075	ArgumentList	op		99829	1					
ANR	100076	Argument	op		99829	0					
ANR	100077	Identifier	op		99829	0					
ANR	100078	ExpressionStatement	"ZVAL_BOOL ( op , retval )"	563:4:14783:14804	99829	5	True				
ANR	100079	CallExpression	"ZVAL_BOOL ( op , retval )"		99829	0					
ANR	100080	Callee	ZVAL_BOOL		99829	0					
ANR	100081	Identifier	ZVAL_BOOL		99829	0					
ANR	100082	ArgumentList	op		99829	1					
ANR	100083	Argument	op		99829	0					
ANR	100084	Identifier	op		99829	0					
ANR	100085	Argument	retval		99829	1					
ANR	100086	Identifier	retval		99829	0					
ANR	100087	BreakStatement	break ;	564:4:14810:14815	99829	6	True				
ANR	100088	Label	default :	566:2:14824:14831	99829	23	True				
ANR	100089	Identifier	default		99829	0					
ANR	100090	ExpressionStatement	zval_dtor ( op )	567:3:14836:14849	99829	24	True				
ANR	100091	CallExpression	zval_dtor ( op )		99829	0					
ANR	100092	Callee	zval_dtor		99829	0					
ANR	100093	Identifier	zval_dtor		99829	0					
ANR	100094	ArgumentList	op		99829	1					
ANR	100095	Argument	op		99829	0					
ANR	100096	Identifier	op		99829	0					
ANR	100097	ExpressionStatement	Z_LVAL_P ( op ) = 0	568:3:14854:14870	99829	25	True				
ANR	100098	AssignmentExpression	Z_LVAL_P ( op ) = 0		99829	0		=			
ANR	100099	CallExpression	Z_LVAL_P ( op )		99829	0					
ANR	100100	Callee	Z_LVAL_P		99829	0					
ANR	100101	Identifier	Z_LVAL_P		99829	0					
ANR	100102	ArgumentList	op		99829	1					
ANR	100103	Argument	op		99829	0					
ANR	100104	Identifier	op		99829	0					
ANR	100105	PrimaryExpression	0		99829	1					
ANR	100106	BreakStatement	break ;	569:3:14875:14880	99829	26	True				
ANR	100107	ExpressionStatement	Z_TYPE_P ( op ) = IS_BOOL	571:1:14886:14908	99829	2	True				
ANR	100108	AssignmentExpression	Z_TYPE_P ( op ) = IS_BOOL		99829	0		=			
ANR	100109	CallExpression	Z_TYPE_P ( op )		99829	0					
ANR	100110	Callee	Z_TYPE_P		99829	0					
ANR	100111	Identifier	Z_TYPE_P		99829	0					
ANR	100112	ArgumentList	op		99829	1					
ANR	100113	Argument	op		99829	0					
ANR	100114	Identifier	op		99829	0					
ANR	100115	Identifier	IS_BOOL		99829	1					
ANR	100116	ReturnType	ZEND_API void		99829	1					
ANR	100117	Identifier	convert_to_boolean		99829	2					
ANR	100118	ParameterList	zval * op		99829	3					
ANR	100119	Parameter	zval * op	511:33:13813:13820	99829	0	True				
ANR	100120	ParameterType	zval *		99829	0					
ANR	100121	Identifier	op		99829	1					
ANR	100122	CFGEntryNode	ENTRY		99829		True				
ANR	100123	CFGExitNode	EXIT		99829		True				
ANR	100124	Symbol	op		99829						
ANR	100125	Symbol	strval		99829						
ANR	100126	Symbol	zend_hash_num_elements		99829						
ANR	100127	Symbol	convert_to_boolean		99829						
ANR	100128	Symbol	Z_TYPE_P		99829						
ANR	100129	Symbol	Z_STRVAL_P		99829						
ANR	100130	Symbol	Z_DVAL_P		99829						
ANR	100131	Symbol	retval		99829						
ANR	100132	Symbol	Z_LVAL_P		99829						
ANR	100133	Symbol	tmp		99829						
ANR	100134	Symbol	Z_STRLEN_P		99829						
ANR	100135	Symbol	* Z_STRVAL_P		99829						
ANR	100136	Symbol	Z_ARRVAL_P		99829						
ANR	100137	Symbol	IS_BOOL		99829						
ANR	100138	DeclStmt									
ANR	100139	Decl							double	double	dval
ANR	100140	DeclStmt									
ANR	100141	Decl							long	long	lval
ANR	100142	DeclStmt									
ANR	100143	Decl							double	double	dval
ANR	100144	DeclStmt									
ANR	100145	Decl							long	long	tmp
ANR	100146	Function	convert_scalar_to_array	664:0:17074:17634							
ANR	100147	FunctionDef	"convert_scalar_to_array (zval * op , int type TSRMLS_DC)"		100146	0					
ANR	100148	CompoundStatement		665:0:17150:17634	100146	0					
ANR	100149	IdentifierDeclStatement	zval * entry ;	666:1:17153:17164	100146	0	True				
ANR	100150	IdentifierDecl	* entry		100146	0					
ANR	100151	IdentifierDeclType	zval *		100146	0					
ANR	100152	Identifier	entry		100146	1					
ANR	100153	ExpressionStatement	ALLOC_ZVAL ( entry )	668:1:17168:17185	100146	1	True				
ANR	100154	CallExpression	ALLOC_ZVAL ( entry )		100146	0					
ANR	100155	Callee	ALLOC_ZVAL		100146	0					
ANR	100156	Identifier	ALLOC_ZVAL		100146	0					
ANR	100157	ArgumentList	entry		100146	1					
ANR	100158	Argument	entry		100146	0					
ANR	100159	Identifier	entry		100146	0					
ANR	100160	ExpressionStatement	* entry = * op	669:1:17188:17200	100146	2	True				
ANR	100161	AssignmentExpression	* entry = * op		100146	0		=			
ANR	100162	UnaryOperationExpression	* entry		100146	0					
ANR	100163	UnaryOperator	*		100146	0					
ANR	100164	Identifier	entry		100146	1					
ANR	100165	UnaryOperationExpression	* op		100146	1					
ANR	100166	UnaryOperator	*		100146	0					
ANR	100167	Identifier	op		100146	1					
ANR	100168	ExpressionStatement	INIT_PZVAL ( entry )	670:1:17203:17220	100146	3	True				
ANR	100169	CallExpression	INIT_PZVAL ( entry )		100146	0					
ANR	100170	Callee	INIT_PZVAL		100146	0					
ANR	100171	Identifier	INIT_PZVAL		100146	0					
ANR	100172	ArgumentList	entry		100146	1					
ANR	100173	Argument	entry		100146	0					
ANR	100174	Identifier	entry		100146	0					
ANR	100175	SwitchStatement	switch ( type )		100146	4					
ANR	100176	Condition	type	672:9:17232:17235	100146	0	True				
ANR	100177	Identifier	type		100146	0					
ANR	100178	CompoundStatement		8:15:87:87	100146	1					
ANR	100179	Label	case IS_ARRAY :	673:2:17242:17255	100146	0	True				
ANR	100180	Identifier	IS_ARRAY		100146	0					
ANR	100181	ExpressionStatement	ALLOC_HASHTABLE ( Z_ARRVAL_P ( op ) )	674:3:17260:17291	100146	1	True				
ANR	100182	CallExpression	ALLOC_HASHTABLE ( Z_ARRVAL_P ( op ) )		100146	0					
ANR	100183	Callee	ALLOC_HASHTABLE		100146	0					
ANR	100184	Identifier	ALLOC_HASHTABLE		100146	0					
ANR	100185	ArgumentList	Z_ARRVAL_P ( op )		100146	1					
ANR	100186	Argument	Z_ARRVAL_P ( op )		100146	0					
ANR	100187	CallExpression	Z_ARRVAL_P ( op )		100146	0					
ANR	100188	Callee	Z_ARRVAL_P		100146	0					
ANR	100189	Identifier	Z_ARRVAL_P		100146	0					
ANR	100190	ArgumentList	op		100146	1					
ANR	100191	Argument	op		100146	0					
ANR	100192	Identifier	op		100146	0					
ANR	100193	ExpressionStatement	"zend_hash_init ( Z_ARRVAL_P ( op ) , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	675:3:17296:17353	100146	2	True				
ANR	100194	CallExpression	"zend_hash_init ( Z_ARRVAL_P ( op ) , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		100146	0					
ANR	100195	Callee	zend_hash_init		100146	0					
ANR	100196	Identifier	zend_hash_init		100146	0					
ANR	100197	ArgumentList	Z_ARRVAL_P ( op )		100146	1					
ANR	100198	Argument	Z_ARRVAL_P ( op )		100146	0					
ANR	100199	CallExpression	Z_ARRVAL_P ( op )		100146	0					
ANR	100200	Callee	Z_ARRVAL_P		100146	0					
ANR	100201	Identifier	Z_ARRVAL_P		100146	0					
ANR	100202	ArgumentList	op		100146	1					
ANR	100203	Argument	op		100146	0					
ANR	100204	Identifier	op		100146	0					
ANR	100205	Argument	0		100146	1					
ANR	100206	PrimaryExpression	0		100146	0					
ANR	100207	Argument	NULL		100146	2					
ANR	100208	Identifier	NULL		100146	0					
ANR	100209	Argument	ZVAL_PTR_DTOR		100146	3					
ANR	100210	Identifier	ZVAL_PTR_DTOR		100146	0					
ANR	100211	Argument	0		100146	4					
ANR	100212	PrimaryExpression	0		100146	0					
ANR	100213	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( op ) , 0 , ( void * ) & entry , sizeof ( zval * ) , NULL )"	676:3:17358:17438	100146	3	True				
ANR	100214	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( op ) , 0 , ( void * ) & entry , sizeof ( zval * ) , NULL )"		100146	0					
ANR	100215	Callee	zend_hash_index_update		100146	0					
ANR	100216	Identifier	zend_hash_index_update		100146	0					
ANR	100217	ArgumentList	Z_ARRVAL_P ( op )		100146	1					
ANR	100218	Argument	Z_ARRVAL_P ( op )		100146	0					
ANR	100219	CallExpression	Z_ARRVAL_P ( op )		100146	0					
ANR	100220	Callee	Z_ARRVAL_P		100146	0					
ANR	100221	Identifier	Z_ARRVAL_P		100146	0					
ANR	100222	ArgumentList	op		100146	1					
ANR	100223	Argument	op		100146	0					
ANR	100224	Identifier	op		100146	0					
ANR	100225	Argument	0		100146	1					
ANR	100226	PrimaryExpression	0		100146	0					
ANR	100227	Argument	( void * ) & entry		100146	2					
ANR	100228	CastExpression	( void * ) & entry		100146	0					
ANR	100229	CastTarget	void *		100146	0					
ANR	100230	UnaryOperationExpression	& entry		100146	1					
ANR	100231	UnaryOperator	&		100146	0					
ANR	100232	Identifier	entry		100146	1					
ANR	100233	Argument	sizeof ( zval * )		100146	3					
ANR	100234	SizeofExpression	sizeof ( zval * )		100146	0					
ANR	100235	Sizeof	sizeof		100146	0					
ANR	100236	SizeofOperand	zval *		100146	1					
ANR	100237	Argument	NULL		100146	4					
ANR	100238	Identifier	NULL		100146	0					
ANR	100239	ExpressionStatement	Z_TYPE_P ( op ) = IS_ARRAY	677:3:17443:17466	100146	4	True				
ANR	100240	AssignmentExpression	Z_TYPE_P ( op ) = IS_ARRAY		100146	0		=			
ANR	100241	CallExpression	Z_TYPE_P ( op )		100146	0					
ANR	100242	Callee	Z_TYPE_P		100146	0					
ANR	100243	Identifier	Z_TYPE_P		100146	0					
ANR	100244	ArgumentList	op		100146	1					
ANR	100245	Argument	op		100146	0					
ANR	100246	Identifier	op		100146	0					
ANR	100247	Identifier	IS_ARRAY		100146	1					
ANR	100248	BreakStatement	break ;	678:3:17471:17476	100146	5	True				
ANR	100249	Label	case IS_OBJECT :	679:2:17480:17494	100146	6	True				
ANR	100250	Identifier	IS_OBJECT		100146	0					
ANR	100251	ExpressionStatement	object_init ( op )	680:3:17499:17514	100146	7	True				
ANR	100252	CallExpression	object_init ( op )		100146	0					
ANR	100253	Callee	object_init		100146	0					
ANR	100254	Identifier	object_init		100146	0					
ANR	100255	ArgumentList	op		100146	1					
ANR	100256	Argument	op		100146	0					
ANR	100257	Identifier	op		100146	0					
ANR	100258	ExpressionStatement	"zend_hash_update ( Z_OBJPROP_P ( op ) , ""scalar"" , sizeof ( ""scalar"" ) , ( void * ) & entry , sizeof ( zval * ) , NULL )"	681:3:17519:17619	100146	8	True				
ANR	100259	CallExpression	"zend_hash_update ( Z_OBJPROP_P ( op ) , ""scalar"" , sizeof ( ""scalar"" ) , ( void * ) & entry , sizeof ( zval * ) , NULL )"		100146	0					
ANR	100260	Callee	zend_hash_update		100146	0					
ANR	100261	Identifier	zend_hash_update		100146	0					
ANR	100262	ArgumentList	Z_OBJPROP_P ( op )		100146	1					
ANR	100263	Argument	Z_OBJPROP_P ( op )		100146	0					
ANR	100264	CallExpression	Z_OBJPROP_P ( op )		100146	0					
ANR	100265	Callee	Z_OBJPROP_P		100146	0					
ANR	100266	Identifier	Z_OBJPROP_P		100146	0					
ANR	100267	ArgumentList	op		100146	1					
ANR	100268	Argument	op		100146	0					
ANR	100269	Identifier	op		100146	0					
ANR	100270	Argument	"""scalar"""		100146	1					
ANR	100271	PrimaryExpression	"""scalar"""		100146	0					
ANR	100272	Argument	"sizeof ( ""scalar"" )"		100146	2					
ANR	100273	SizeofExpression	"sizeof ( ""scalar"" )"		100146	0					
ANR	100274	Sizeof	sizeof		100146	0					
ANR	100275	PrimaryExpression	"""scalar"""		100146	1					
ANR	100276	Argument	( void * ) & entry		100146	3					
ANR	100277	CastExpression	( void * ) & entry		100146	0					
ANR	100278	CastTarget	void *		100146	0					
ANR	100279	UnaryOperationExpression	& entry		100146	1					
ANR	100280	UnaryOperator	&		100146	0					
ANR	100281	Identifier	entry		100146	1					
ANR	100282	Argument	sizeof ( zval * )		100146	4					
ANR	100283	SizeofExpression	sizeof ( zval * )		100146	0					
ANR	100284	Sizeof	sizeof		100146	0					
ANR	100285	SizeofOperand	zval *		100146	1					
ANR	100286	Argument	NULL		100146	5					
ANR	100287	Identifier	NULL		100146	0					
ANR	100288	BreakStatement	break ;	682:3:17624:17629	100146	9	True				
ANR	100289	ReturnType	static void		100146	1					
ANR	100290	Identifier	convert_scalar_to_array		100146	2					
ANR	100291	ParameterList	"zval * op , int type TSRMLS_DC"		100146	3					
ANR	100292	Parameter	zval * op	664:36:17110:17117	100146	0	True				
ANR	100293	ParameterType	zval *		100146	0					
ANR	100294	Identifier	op		100146	1					
ANR	100295	Parameter	int type TSRMLS_DC	664:46:17120:17137	100146	1	True				
ANR	100296	ParameterType	int type		100146	0					
ANR	100297	Identifier	TSRMLS_DC		100146	1					
ANR	100298	CFGEntryNode	ENTRY		100146		True				
ANR	100299	CFGExitNode	EXIT		100146		True				
ANR	100300	Symbol	op		100146						
ANR	100301	Symbol	NULL		100146						
ANR	100302	Symbol	* op		100146						
ANR	100303	Symbol	Z_OBJPROP_P		100146						
ANR	100304	Symbol	type		100146						
ANR	100305	Symbol	Z_TYPE_P		100146						
ANR	100306	Symbol	TSRMLS_DC		100146						
ANR	100307	Symbol	ZVAL_PTR_DTOR		100146						
ANR	100308	Symbol	entry		100146						
ANR	100309	Symbol	& entry		100146						
ANR	100310	Symbol	IS_ARRAY		100146						
ANR	100311	Symbol	Z_ARRVAL_P		100146						
ANR	100312	Symbol	* entry		100146						
ANR	100313	Function	convert_to_array	687:0:17647:18892							
ANR	100314	FunctionDef	convert_to_array (zval * op)		100313	0					
ANR	100315	CompoundStatement		688:0:17698:18892	100313	0					
ANR	100316	ExpressionStatement	TSRMLS_FETCH ( )	689:1:17701:17715	100313	0	True				
ANR	100317	CallExpression	TSRMLS_FETCH ( )		100313	0					
ANR	100318	Callee	TSRMLS_FETCH		100313	0					
ANR	100319	Identifier	TSRMLS_FETCH		100313	0					
ANR	100320	ArgumentList			100313	1					
ANR	100321	SwitchStatement	switch ( Z_TYPE_P ( op ) )		100313	1					
ANR	100322	Condition	Z_TYPE_P ( op )	691:9:17727:17738	100313	0	True				
ANR	100323	CallExpression	Z_TYPE_P ( op )		100313	0					
ANR	100324	Callee	Z_TYPE_P		100313	0					
ANR	100325	Identifier	Z_TYPE_P		100313	0					
ANR	100326	ArgumentList	op		100313	1					
ANR	100327	Argument	op		100313	0					
ANR	100328	Identifier	op		100313	0					
ANR	100329	CompoundStatement		4:23:42:42	100313	1					
ANR	100330	Label	case IS_ARRAY :	692:2:17745:17758	100313	0	True				
ANR	100331	Identifier	IS_ARRAY		100313	0					
ANR	100332	BreakStatement	break ;	693:3:17763:17768	100313	1	True				
ANR	100333	Label	case IS_OBJECT :	695:2:17795:17809	100313	2	True				
ANR	100334	Identifier	IS_OBJECT		100313	0					
ANR	100335	CompoundStatement		11:4:136:149	100313	3					
ANR	100336	IdentifierDeclStatement	zval * tmp ;	697:4:17820:17829	100313	0	True				
ANR	100337	IdentifierDecl	* tmp		100313	0					
ANR	100338	IdentifierDeclType	zval *		100313	0					
ANR	100339	Identifier	tmp		100313	1					
ANR	100340	IdentifierDeclStatement	HashTable * ht ;	698:4:17835:17848	100313	1	True				
ANR	100341	IdentifierDecl	* ht		100313	0					
ANR	100342	IdentifierDeclType	HashTable *		100313	0					
ANR	100343	Identifier	ht		100313	1					
ANR	100344	ExpressionStatement	ALLOC_HASHTABLE ( ht )	700:4:17855:17874	100313	2	True				
ANR	100345	CallExpression	ALLOC_HASHTABLE ( ht )		100313	0					
ANR	100346	Callee	ALLOC_HASHTABLE		100313	0					
ANR	100347	Identifier	ALLOC_HASHTABLE		100313	0					
ANR	100348	ArgumentList	ht		100313	1					
ANR	100349	Argument	ht		100313	0					
ANR	100350	Identifier	ht		100313	0					
ANR	100351	ExpressionStatement	"zend_hash_init ( ht , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	701:4:17880:17925	100313	3	True				
ANR	100352	CallExpression	"zend_hash_init ( ht , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		100313	0					
ANR	100353	Callee	zend_hash_init		100313	0					
ANR	100354	Identifier	zend_hash_init		100313	0					
ANR	100355	ArgumentList	ht		100313	1					
ANR	100356	Argument	ht		100313	0					
ANR	100357	Identifier	ht		100313	0					
ANR	100358	Argument	0		100313	1					
ANR	100359	PrimaryExpression	0		100313	0					
ANR	100360	Argument	NULL		100313	2					
ANR	100361	Identifier	NULL		100313	0					
ANR	100362	Argument	ZVAL_PTR_DTOR		100313	3					
ANR	100363	Identifier	ZVAL_PTR_DTOR		100313	0					
ANR	100364	Argument	0		100313	4					
ANR	100365	PrimaryExpression	0		100313	0					
ANR	100366	IfStatement	if ( Z_OBJCE_P ( op ) == zend_ce_closure )		100313	4					
ANR	100367	Condition	Z_OBJCE_P ( op ) == zend_ce_closure	702:8:17935:17966	100313	0	True				
ANR	100368	EqualityExpression	Z_OBJCE_P ( op ) == zend_ce_closure		100313	0		==			
ANR	100369	CallExpression	Z_OBJCE_P ( op )		100313	0					
ANR	100370	Callee	Z_OBJCE_P		100313	0					
ANR	100371	Identifier	Z_OBJCE_P		100313	0					
ANR	100372	ArgumentList	op		100313	1					
ANR	100373	Argument	op		100313	0					
ANR	100374	Identifier	op		100313	0					
ANR	100375	Identifier	zend_ce_closure		100313	1					
ANR	100376	CompoundStatement		15:42:270:270	100313	1					
ANR	100377	Statement	convert_scalar_to_array	703:5:17976:17998	100313	0	True				
ANR	100378	Statement	(	703:28:17999:17999	100313	1	True				
ANR	100379	Statement	op	703:29:18000:18001	100313	2	True				
ANR	100380	Statement	","	703:31:18002:18002	100313	3	True				
ANR	100381	Statement	IS_ARRAY	703:33:18004:18011	100313	4	True				
ANR	100382	Statement	TSRMLS_CC	703:42:18013:18021	100313	5	True				
ANR	100383	Statement	)	703:51:18022:18022	100313	6	True				
ANR	100384	ExpressionStatement		703:52:18023:18023	100313	7	True				
ANR	100385	IfStatement	if ( Z_TYPE_P ( op ) == IS_ARRAY )		100313	8					
ANR	100386	Condition	Z_TYPE_P ( op ) == IS_ARRAY	704:9:18034:18057	100313	0	True				
ANR	100387	EqualityExpression	Z_TYPE_P ( op ) == IS_ARRAY		100313	0		==			
ANR	100388	CallExpression	Z_TYPE_P ( op )		100313	0					
ANR	100389	Callee	Z_TYPE_P		100313	0					
ANR	100390	Identifier	Z_TYPE_P		100313	0					
ANR	100391	ArgumentList	op		100313	1					
ANR	100392	Argument	op		100313	0					
ANR	100393	Identifier	op		100313	0					
ANR	100394	Identifier	IS_ARRAY		100313	1					
ANR	100395	CompoundStatement		17:35:361:361	100313	1					
ANR	100396	ExpressionStatement	zend_hash_destroy ( ht )	705:6:18068:18089	100313	0	True				
ANR	100397	CallExpression	zend_hash_destroy ( ht )		100313	0					
ANR	100398	Callee	zend_hash_destroy		100313	0					
ANR	100399	Identifier	zend_hash_destroy		100313	0					
ANR	100400	ArgumentList	ht		100313	1					
ANR	100401	Argument	ht		100313	0					
ANR	100402	Identifier	ht		100313	0					
ANR	100403	ExpressionStatement	FREE_HASHTABLE ( ht )	706:6:18097:18115	100313	1	True				
ANR	100404	CallExpression	FREE_HASHTABLE ( ht )		100313	0					
ANR	100405	Callee	FREE_HASHTABLE		100313	0					
ANR	100406	Identifier	FREE_HASHTABLE		100313	0					
ANR	100407	ArgumentList	ht		100313	1					
ANR	100408	Argument	ht		100313	0					
ANR	100409	Identifier	ht		100313	0					
ANR	100410	ReturnStatement	return ;	707:6:18123:18129	100313	2	True				
ANR	100411	ElseStatement	else		100313	0					
ANR	100412	IfStatement	if ( Z_OBJ_HT_P ( op ) -> get_properties )		100313	0					
ANR	100413	Condition	Z_OBJ_HT_P ( op ) -> get_properties	709:15:18153:18182	100313	0	True				
ANR	100414	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> get_properties		100313	0					
ANR	100415	CallExpression	Z_OBJ_HT_P ( op )		100313	0					
ANR	100416	Callee	Z_OBJ_HT_P		100313	0					
ANR	100417	Identifier	Z_OBJ_HT_P		100313	0					
ANR	100418	ArgumentList	op		100313	1					
ANR	100419	Argument	op		100313	0					
ANR	100420	Identifier	op		100313	0					
ANR	100421	Identifier	get_properties		100313	1					
ANR	100422	CompoundStatement		22:47:486:486	100313	1					
ANR	100423	Statement	HashTable	710:5:18192:18200	100313	0	True				
ANR	100424	Statement	*	710:15:18202:18202	100313	1	True				
ANR	100425	Statement	obj_ht	710:16:18203:18208	100313	2	True				
ANR	100426	Statement	=	710:23:18210:18210	100313	3	True				
ANR	100427	Statement	Z_OBJ_HT_P	710:25:18212:18221	100313	4	True				
ANR	100428	Statement	(	710:35:18222:18222	100313	5	True				
ANR	100429	Statement	op	710:36:18223:18224	100313	6	True				
ANR	100430	Statement	)	710:38:18225:18225	100313	7	True				
ANR	100431	Statement	->	710:39:18226:18227	100313	8	True				
ANR	100432	Statement	get_properties	710:41:18228:18241	100313	9	True				
ANR	100433	Statement	(	710:55:18242:18242	100313	10	True				
ANR	100434	Statement	op	710:56:18243:18244	100313	11	True				
ANR	100435	Statement	TSRMLS_CC	710:59:18246:18254	100313	12	True				
ANR	100436	Statement	)	710:68:18255:18255	100313	13	True				
ANR	100437	ExpressionStatement		710:69:18256:18256	100313	14	True				
ANR	100438	IfStatement	if ( obj_ht )		100313	15					
ANR	100439	Condition	obj_ht	711:9:18267:18272	100313	0	True				
ANR	100440	Identifier	obj_ht		100313	0					
ANR	100441	CompoundStatement		24:17:576:576	100313	1					
ANR	100442	ExpressionStatement	"zend_hash_copy ( ht , obj_ht , ( copy_ctor_func_t ) zval_add_ref , ( void * ) & tmp , sizeof ( zval * ) )"	712:6:18283:18373	100313	0	True				
ANR	100443	CallExpression	"zend_hash_copy ( ht , obj_ht , ( copy_ctor_func_t ) zval_add_ref , ( void * ) & tmp , sizeof ( zval * ) )"		100313	0					
ANR	100444	Callee	zend_hash_copy		100313	0					
ANR	100445	Identifier	zend_hash_copy		100313	0					
ANR	100446	ArgumentList	ht		100313	1					
ANR	100447	Argument	ht		100313	0					
ANR	100448	Identifier	ht		100313	0					
ANR	100449	Argument	obj_ht		100313	1					
ANR	100450	Identifier	obj_ht		100313	0					
ANR	100451	Argument	( copy_ctor_func_t ) zval_add_ref		100313	2					
ANR	100452	CastExpression	( copy_ctor_func_t ) zval_add_ref		100313	0					
ANR	100453	CastTarget	copy_ctor_func_t		100313	0					
ANR	100454	Identifier	zval_add_ref		100313	1					
ANR	100455	Argument	( void * ) & tmp		100313	3					
ANR	100456	CastExpression	( void * ) & tmp		100313	0					
ANR	100457	CastTarget	void *		100313	0					
ANR	100458	UnaryOperationExpression	& tmp		100313	1					
ANR	100459	UnaryOperator	&		100313	0					
ANR	100460	Identifier	tmp		100313	1					
ANR	100461	Argument	sizeof ( zval * )		100313	4					
ANR	100462	SizeofExpression	sizeof ( zval * )		100313	0					
ANR	100463	Sizeof	sizeof		100313	0					
ANR	100464	SizeofOperand	zval *		100313	1					
ANR	100465	ElseStatement	else		100313	0					
ANR	100466	CompoundStatement		27:11:694:694	100313	0					
ANR	100467	ExpressionStatement	"convert_object_to_type ( op , IS_ARRAY , convert_to_array )"	715:5:18400:18454	100313	0	True				
ANR	100468	CallExpression	"convert_object_to_type ( op , IS_ARRAY , convert_to_array )"		100313	0					
ANR	100469	Callee	convert_object_to_type		100313	0					
ANR	100470	Identifier	convert_object_to_type		100313	0					
ANR	100471	ArgumentList	op		100313	1					
ANR	100472	Argument	op		100313	0					
ANR	100473	Identifier	op		100313	0					
ANR	100474	Argument	IS_ARRAY		100313	1					
ANR	100475	Identifier	IS_ARRAY		100313	0					
ANR	100476	Argument	convert_to_array		100313	2					
ANR	100477	Identifier	convert_to_array		100313	0					
ANR	100478	IfStatement	if ( Z_TYPE_P ( op ) == IS_ARRAY )		100313	1					
ANR	100479	Condition	Z_TYPE_P ( op ) == IS_ARRAY	717:9:18466:18489	100313	0	True				
ANR	100480	EqualityExpression	Z_TYPE_P ( op ) == IS_ARRAY		100313	0		==			
ANR	100481	CallExpression	Z_TYPE_P ( op )		100313	0					
ANR	100482	Callee	Z_TYPE_P		100313	0					
ANR	100483	Identifier	Z_TYPE_P		100313	0					
ANR	100484	ArgumentList	op		100313	1					
ANR	100485	Argument	op		100313	0					
ANR	100486	Identifier	op		100313	0					
ANR	100487	Identifier	IS_ARRAY		100313	1					
ANR	100488	CompoundStatement		30:35:793:793	100313	1					
ANR	100489	ExpressionStatement	zend_hash_destroy ( ht )	718:6:18500:18521	100313	0	True				
ANR	100490	CallExpression	zend_hash_destroy ( ht )		100313	0					
ANR	100491	Callee	zend_hash_destroy		100313	0					
ANR	100492	Identifier	zend_hash_destroy		100313	0					
ANR	100493	ArgumentList	ht		100313	1					
ANR	100494	Argument	ht		100313	0					
ANR	100495	Identifier	ht		100313	0					
ANR	100496	ExpressionStatement	FREE_HASHTABLE ( ht )	719:6:18529:18547	100313	1	True				
ANR	100497	CallExpression	FREE_HASHTABLE ( ht )		100313	0					
ANR	100498	Callee	FREE_HASHTABLE		100313	0					
ANR	100499	Identifier	FREE_HASHTABLE		100313	0					
ANR	100500	ArgumentList	ht		100313	1					
ANR	100501	Argument	ht		100313	0					
ANR	100502	Identifier	ht		100313	0					
ANR	100503	ReturnStatement	return ;	720:6:18555:18561	100313	2	True				
ANR	100504	ExpressionStatement	zval_dtor ( op )	723:4:18580:18593	100313	5	True				
ANR	100505	CallExpression	zval_dtor ( op )		100313	0					
ANR	100506	Callee	zval_dtor		100313	0					
ANR	100507	Identifier	zval_dtor		100313	0					
ANR	100508	ArgumentList	op		100313	1					
ANR	100509	Argument	op		100313	0					
ANR	100510	Identifier	op		100313	0					
ANR	100511	ExpressionStatement	Z_TYPE_P ( op ) = IS_ARRAY	724:4:18599:18622	100313	6	True				
ANR	100512	AssignmentExpression	Z_TYPE_P ( op ) = IS_ARRAY		100313	0		=			
ANR	100513	CallExpression	Z_TYPE_P ( op )		100313	0					
ANR	100514	Callee	Z_TYPE_P		100313	0					
ANR	100515	Identifier	Z_TYPE_P		100313	0					
ANR	100516	ArgumentList	op		100313	1					
ANR	100517	Argument	op		100313	0					
ANR	100518	Identifier	op		100313	0					
ANR	100519	Identifier	IS_ARRAY		100313	1					
ANR	100520	ExpressionStatement	Z_ARRVAL_P ( op ) = ht	725:4:18628:18647	100313	7	True				
ANR	100521	AssignmentExpression	Z_ARRVAL_P ( op ) = ht		100313	0		=			
ANR	100522	CallExpression	Z_ARRVAL_P ( op )		100313	0					
ANR	100523	Callee	Z_ARRVAL_P		100313	0					
ANR	100524	Identifier	Z_ARRVAL_P		100313	0					
ANR	100525	ArgumentList	op		100313	1					
ANR	100526	Argument	op		100313	0					
ANR	100527	Identifier	op		100313	0					
ANR	100528	Identifier	ht		100313	1					
ANR	100529	BreakStatement	break ;	727:3:18657:18662	100313	4	True				
ANR	100530	Label	case IS_NULL :	728:2:18666:18678	100313	5	True				
ANR	100531	Identifier	IS_NULL		100313	0					
ANR	100532	ExpressionStatement	ALLOC_HASHTABLE ( Z_ARRVAL_P ( op ) )	729:3:18683:18714	100313	6	True				
ANR	100533	CallExpression	ALLOC_HASHTABLE ( Z_ARRVAL_P ( op ) )		100313	0					
ANR	100534	Callee	ALLOC_HASHTABLE		100313	0					
ANR	100535	Identifier	ALLOC_HASHTABLE		100313	0					
ANR	100536	ArgumentList	Z_ARRVAL_P ( op )		100313	1					
ANR	100537	Argument	Z_ARRVAL_P ( op )		100313	0					
ANR	100538	CallExpression	Z_ARRVAL_P ( op )		100313	0					
ANR	100539	Callee	Z_ARRVAL_P		100313	0					
ANR	100540	Identifier	Z_ARRVAL_P		100313	0					
ANR	100541	ArgumentList	op		100313	1					
ANR	100542	Argument	op		100313	0					
ANR	100543	Identifier	op		100313	0					
ANR	100544	ExpressionStatement	"zend_hash_init ( Z_ARRVAL_P ( op ) , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	730:3:18719:18776	100313	7	True				
ANR	100545	CallExpression	"zend_hash_init ( Z_ARRVAL_P ( op ) , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		100313	0					
ANR	100546	Callee	zend_hash_init		100313	0					
ANR	100547	Identifier	zend_hash_init		100313	0					
ANR	100548	ArgumentList	Z_ARRVAL_P ( op )		100313	1					
ANR	100549	Argument	Z_ARRVAL_P ( op )		100313	0					
ANR	100550	CallExpression	Z_ARRVAL_P ( op )		100313	0					
ANR	100551	Callee	Z_ARRVAL_P		100313	0					
ANR	100552	Identifier	Z_ARRVAL_P		100313	0					
ANR	100553	ArgumentList	op		100313	1					
ANR	100554	Argument	op		100313	0					
ANR	100555	Identifier	op		100313	0					
ANR	100556	Argument	0		100313	1					
ANR	100557	PrimaryExpression	0		100313	0					
ANR	100558	Argument	NULL		100313	2					
ANR	100559	Identifier	NULL		100313	0					
ANR	100560	Argument	ZVAL_PTR_DTOR		100313	3					
ANR	100561	Identifier	ZVAL_PTR_DTOR		100313	0					
ANR	100562	Argument	0		100313	4					
ANR	100563	PrimaryExpression	0		100313	0					
ANR	100564	ExpressionStatement	Z_TYPE_P ( op ) = IS_ARRAY	731:3:18781:18804	100313	8	True				
ANR	100565	AssignmentExpression	Z_TYPE_P ( op ) = IS_ARRAY		100313	0		=			
ANR	100566	CallExpression	Z_TYPE_P ( op )		100313	0					
ANR	100567	Callee	Z_TYPE_P		100313	0					
ANR	100568	Identifier	Z_TYPE_P		100313	0					
ANR	100569	ArgumentList	op		100313	1					
ANR	100570	Argument	op		100313	0					
ANR	100571	Identifier	op		100313	0					
ANR	100572	Identifier	IS_ARRAY		100313	1					
ANR	100573	BreakStatement	break ;	732:3:18809:18814	100313	9	True				
ANR	100574	Label	default :	733:2:18818:18825	100313	10	True				
ANR	100575	Identifier	default		100313	0					
ANR	100576	Statement	convert_scalar_to_array	734:3:18830:18852	100313	11	True				
ANR	100577	Statement	(	734:26:18853:18853	100313	12	True				
ANR	100578	Statement	op	734:27:18854:18855	100313	13	True				
ANR	100579	Statement	","	734:29:18856:18856	100313	14	True				
ANR	100580	Statement	IS_ARRAY	734:31:18858:18865	100313	15	True				
ANR	100581	Statement	TSRMLS_CC	734:40:18867:18875	100313	16	True				
ANR	100582	Statement	)	734:49:18876:18876	100313	17	True				
ANR	100583	ExpressionStatement		734:50:18877:18877	100313	18	True				
ANR	100584	BreakStatement	break ;	735:3:18882:18887	100313	19	True				
ANR	100585	ReturnType	ZEND_API void		100313	1					
ANR	100586	Identifier	convert_to_array		100313	2					
ANR	100587	ParameterList	zval * op		100313	3					
ANR	100588	Parameter	zval * op	687:31:17678:17685	100313	0	True				
ANR	100589	ParameterType	zval *		100313	0					
ANR	100590	Identifier	op		100313	1					
ANR	100591	CFGEntryNode	ENTRY		100313		True				
ANR	100592	CFGExitNode	EXIT		100313		True				
ANR	100593	Symbol	op		100313						
ANR	100594	Symbol	zend_ce_closure		100313						
ANR	100595	Symbol	NULL		100313						
ANR	100596	Symbol	Z_OBJ_HT_P ( op ) -> get_properties		100313						
ANR	100597	Symbol	Z_TYPE_P		100313						
ANR	100598	Symbol	ht		100313						
ANR	100599	Symbol	* Z_OBJ_HT_P		100313						
ANR	100600	Symbol	ZVAL_PTR_DTOR		100313						
ANR	100601	Symbol	obj_ht		100313						
ANR	100602	Symbol	IS_ARRAY		100313						
ANR	100603	Symbol	tmp		100313						
ANR	100604	Symbol	Z_OBJCE_P		100313						
ANR	100605	Symbol	Z_OBJ_HT_P		100313						
ANR	100606	Symbol	zval_add_ref		100313						
ANR	100607	Symbol	& tmp		100313						
ANR	100608	Symbol	Z_ARRVAL_P		100313						
ANR	100609	Symbol	convert_to_array		100313						
ANR	100610	Function	convert_to_object	740:0:18905:19268							
ANR	100611	FunctionDef	convert_to_object (zval * op)		100610	0					
ANR	100612	CompoundStatement		741:0:18957:19268	100610	0					
ANR	100613	ExpressionStatement	TSRMLS_FETCH ( )	742:1:18960:18974	100610	0	True				
ANR	100614	CallExpression	TSRMLS_FETCH ( )		100610	0					
ANR	100615	Callee	TSRMLS_FETCH		100610	0					
ANR	100616	Identifier	TSRMLS_FETCH		100610	0					
ANR	100617	ArgumentList			100610	1					
ANR	100618	SwitchStatement	switch ( Z_TYPE_P ( op ) )		100610	1					
ANR	100619	Condition	Z_TYPE_P ( op )	744:9:18986:18997	100610	0	True				
ANR	100620	CallExpression	Z_TYPE_P ( op )		100610	0					
ANR	100621	Callee	Z_TYPE_P		100610	0					
ANR	100622	Identifier	Z_TYPE_P		100610	0					
ANR	100623	ArgumentList	op		100610	1					
ANR	100624	Argument	op		100610	0					
ANR	100625	Identifier	op		100610	0					
ANR	100626	CompoundStatement		4:23:42:42	100610	1					
ANR	100627	Label	case IS_ARRAY :	745:2:19004:19017	100610	0	True				
ANR	100628	Identifier	IS_ARRAY		100610	0					
ANR	100629	CompoundStatement		6:3:64:64	100610	1					
ANR	100630	ExpressionStatement	"object_and_properties_init ( op , zend_standard_class_def , Z_ARRVAL_P ( op ) )"	747:4:19028:19099	100610	0	True				
ANR	100631	CallExpression	"object_and_properties_init ( op , zend_standard_class_def , Z_ARRVAL_P ( op ) )"		100610	0					
ANR	100632	Callee	object_and_properties_init		100610	0					
ANR	100633	Identifier	object_and_properties_init		100610	0					
ANR	100634	ArgumentList	op		100610	1					
ANR	100635	Argument	op		100610	0					
ANR	100636	Identifier	op		100610	0					
ANR	100637	Argument	zend_standard_class_def		100610	1					
ANR	100638	Identifier	zend_standard_class_def		100610	0					
ANR	100639	Argument	Z_ARRVAL_P ( op )		100610	2					
ANR	100640	CallExpression	Z_ARRVAL_P ( op )		100610	0					
ANR	100641	Callee	Z_ARRVAL_P		100610	0					
ANR	100642	Identifier	Z_ARRVAL_P		100610	0					
ANR	100643	ArgumentList	op		100610	1					
ANR	100644	Argument	op		100610	0					
ANR	100645	Identifier	op		100610	0					
ANR	100646	BreakStatement	break ;	748:4:19105:19110	100610	1	True				
ANR	100647	Label	case IS_OBJECT :	750:2:19119:19133	100610	2	True				
ANR	100648	Identifier	IS_OBJECT		100610	0					
ANR	100649	BreakStatement	break ;	751:3:19138:19143	100610	3	True				
ANR	100650	Label	case IS_NULL :	752:2:19147:19159	100610	4	True				
ANR	100651	Identifier	IS_NULL		100610	0					
ANR	100652	ExpressionStatement	object_init ( op )	753:3:19164:19179	100610	5	True				
ANR	100653	CallExpression	object_init ( op )		100610	0					
ANR	100654	Callee	object_init		100610	0					
ANR	100655	Identifier	object_init		100610	0					
ANR	100656	ArgumentList	op		100610	1					
ANR	100657	Argument	op		100610	0					
ANR	100658	Identifier	op		100610	0					
ANR	100659	BreakStatement	break ;	754:3:19184:19189	100610	6	True				
ANR	100660	Label	default :	755:2:19193:19200	100610	7	True				
ANR	100661	Identifier	default		100610	0					
ANR	100662	Statement	convert_scalar_to_array	756:3:19205:19227	100610	8	True				
ANR	100663	Statement	(	756:26:19228:19228	100610	9	True				
ANR	100664	Statement	op	756:27:19229:19230	100610	10	True				
ANR	100665	Statement	","	756:29:19231:19231	100610	11	True				
ANR	100666	Statement	IS_OBJECT	756:31:19233:19241	100610	12	True				
ANR	100667	Statement	TSRMLS_CC	756:41:19243:19251	100610	13	True				
ANR	100668	Statement	)	756:50:19252:19252	100610	14	True				
ANR	100669	ExpressionStatement		756:51:19253:19253	100610	15	True				
ANR	100670	BreakStatement	break ;	757:3:19258:19263	100610	16	True				
ANR	100671	ReturnType	ZEND_API void		100610	1					
ANR	100672	Identifier	convert_to_object		100610	2					
ANR	100673	ParameterList	zval * op		100610	3					
ANR	100674	Parameter	zval * op	740:32:18937:18944	100610	0	True				
ANR	100675	ParameterType	zval *		100610	0					
ANR	100676	Identifier	op		100610	1					
ANR	100677	CFGEntryNode	ENTRY		100610		True				
ANR	100678	CFGExitNode	EXIT		100610		True				
ANR	100679	Symbol	zend_standard_class_def		100610						
ANR	100680	Symbol	op		100610						
ANR	100681	Symbol	Z_TYPE_P		100610						
ANR	100682	Symbol	Z_ARRVAL_P		100610						
ANR	100683	Function	multi_convert_to_long_ex	762:0:19281:19487							
ANR	100684	FunctionDef	multi_convert_to_long_ex (int argc)		100683	0					
ANR	100685	CompoundStatement		763:0:19345:19487	100683	0					
ANR	100686	IdentifierDeclStatement	zval * * arg ;	764:1:19348:19358	100683	0	True				
ANR	100687	IdentifierDecl	* * arg		100683	0					
ANR	100688	IdentifierDeclType	zval * *		100683	0					
ANR	100689	Identifier	arg		100683	1					
ANR	100690	IdentifierDeclStatement	va_list ap ;	765:1:19361:19371	100683	1	True				
ANR	100691	IdentifierDecl	ap		100683	0					
ANR	100692	IdentifierDeclType	va_list		100683	0					
ANR	100693	Identifier	ap		100683	1					
ANR	100694	ExpressionStatement	"va_start ( ap , argc )"	767:1:19375:19393	100683	2	True				
ANR	100695	CallExpression	"va_start ( ap , argc )"		100683	0					
ANR	100696	Callee	va_start		100683	0					
ANR	100697	Identifier	va_start		100683	0					
ANR	100698	ArgumentList	ap		100683	1					
ANR	100699	Argument	ap		100683	0					
ANR	100700	Identifier	ap		100683	0					
ANR	100701	Argument	argc		100683	1					
ANR	100702	Identifier	argc		100683	0					
ANR	100703	WhileStatement	while ( argc -- )		100683	3					
ANR	100704	Condition	argc --	769:8:19404:19409	100683	0	True				
ANR	100705	PostIncDecOperationExpression	argc --		100683	0					
ANR	100706	Identifier	argc		100683	0					
ANR	100707	IncDec	--		100683	1					
ANR	100708	CompoundStatement		7:16:66:66	100683	1					
ANR	100709	Statement	arg	770:2:19416:19418	100683	0	True				
ANR	100710	Statement	=	770:6:19420:19420	100683	1	True				
ANR	100711	Statement	va_arg	770:8:19422:19427	100683	2	True				
ANR	100712	Statement	(	770:14:19428:19428	100683	3	True				
ANR	100713	Statement	ap	770:15:19429:19430	100683	4	True				
ANR	100714	Statement	","	770:17:19431:19431	100683	5	True				
ANR	100715	Statement	zval	770:19:19433:19436	100683	6	True				
ANR	100716	Statement	*	770:24:19438:19438	100683	7	True				
ANR	100717	Statement	*	770:25:19439:19439	100683	8	True				
ANR	100718	Statement	)	770:26:19440:19440	100683	9	True				
ANR	100719	ExpressionStatement		770:27:19441:19441	100683	10	True				
ANR	100720	ExpressionStatement	convert_to_long_ex ( arg )	771:2:19445:19468	100683	11	True				
ANR	100721	CallExpression	convert_to_long_ex ( arg )		100683	0					
ANR	100722	Callee	convert_to_long_ex		100683	0					
ANR	100723	Identifier	convert_to_long_ex		100683	0					
ANR	100724	ArgumentList	arg		100683	1					
ANR	100725	Argument	arg		100683	0					
ANR	100726	Identifier	arg		100683	0					
ANR	100727	ExpressionStatement	va_end ( ap )	774:1:19475:19485	100683	4	True				
ANR	100728	CallExpression	va_end ( ap )		100683	0					
ANR	100729	Callee	va_end		100683	0					
ANR	100730	Identifier	va_end		100683	0					
ANR	100731	ArgumentList	ap		100683	1					
ANR	100732	Argument	ap		100683	0					
ANR	100733	Identifier	ap		100683	0					
ANR	100734	ReturnType	ZEND_API void		100683	1					
ANR	100735	Identifier	multi_convert_to_long_ex		100683	2					
ANR	100736	ParameterList	int argc		100683	3					
ANR	100737	Parameter	int argc	762:39:19320:19327	100683	0	True				
ANR	100738	ParameterType	int		100683	0					
ANR	100739	Identifier	argc		100683	1					
ANR	100740	CFGEntryNode	ENTRY		100683		True				
ANR	100741	CFGExitNode	EXIT		100683		True				
ANR	100742	Symbol	argc		100683						
ANR	100743	Symbol	arg		100683						
ANR	100744	Symbol	ap		100683						
ANR	100745	Function	multi_convert_to_double_ex	778:0:19500:19710							
ANR	100746	FunctionDef	multi_convert_to_double_ex (int argc)		100745	0					
ANR	100747	CompoundStatement		779:0:19566:19710	100745	0					
ANR	100748	IdentifierDeclStatement	zval * * arg ;	780:1:19569:19579	100745	0	True				
ANR	100749	IdentifierDecl	* * arg		100745	0					
ANR	100750	IdentifierDeclType	zval * *		100745	0					
ANR	100751	Identifier	arg		100745	1					
ANR	100752	IdentifierDeclStatement	va_list ap ;	781:1:19582:19592	100745	1	True				
ANR	100753	IdentifierDecl	ap		100745	0					
ANR	100754	IdentifierDeclType	va_list		100745	0					
ANR	100755	Identifier	ap		100745	1					
ANR	100756	ExpressionStatement	"va_start ( ap , argc )"	783:1:19596:19614	100745	2	True				
ANR	100757	CallExpression	"va_start ( ap , argc )"		100745	0					
ANR	100758	Callee	va_start		100745	0					
ANR	100759	Identifier	va_start		100745	0					
ANR	100760	ArgumentList	ap		100745	1					
ANR	100761	Argument	ap		100745	0					
ANR	100762	Identifier	ap		100745	0					
ANR	100763	Argument	argc		100745	1					
ANR	100764	Identifier	argc		100745	0					
ANR	100765	WhileStatement	while ( argc -- )		100745	3					
ANR	100766	Condition	argc --	785:8:19625:19630	100745	0	True				
ANR	100767	PostIncDecOperationExpression	argc --		100745	0					
ANR	100768	Identifier	argc		100745	0					
ANR	100769	IncDec	--		100745	1					
ANR	100770	CompoundStatement		7:16:66:66	100745	1					
ANR	100771	Statement	arg	786:2:19637:19639	100745	0	True				
ANR	100772	Statement	=	786:6:19641:19641	100745	1	True				
ANR	100773	Statement	va_arg	786:8:19643:19648	100745	2	True				
ANR	100774	Statement	(	786:14:19649:19649	100745	3	True				
ANR	100775	Statement	ap	786:15:19650:19651	100745	4	True				
ANR	100776	Statement	","	786:17:19652:19652	100745	5	True				
ANR	100777	Statement	zval	786:19:19654:19657	100745	6	True				
ANR	100778	Statement	*	786:24:19659:19659	100745	7	True				
ANR	100779	Statement	*	786:25:19660:19660	100745	8	True				
ANR	100780	Statement	)	786:26:19661:19661	100745	9	True				
ANR	100781	ExpressionStatement		786:27:19662:19662	100745	10	True				
ANR	100782	ExpressionStatement	convert_to_double_ex ( arg )	787:2:19666:19691	100745	11	True				
ANR	100783	CallExpression	convert_to_double_ex ( arg )		100745	0					
ANR	100784	Callee	convert_to_double_ex		100745	0					
ANR	100785	Identifier	convert_to_double_ex		100745	0					
ANR	100786	ArgumentList	arg		100745	1					
ANR	100787	Argument	arg		100745	0					
ANR	100788	Identifier	arg		100745	0					
ANR	100789	ExpressionStatement	va_end ( ap )	790:1:19698:19708	100745	4	True				
ANR	100790	CallExpression	va_end ( ap )		100745	0					
ANR	100791	Callee	va_end		100745	0					
ANR	100792	Identifier	va_end		100745	0					
ANR	100793	ArgumentList	ap		100745	1					
ANR	100794	Argument	ap		100745	0					
ANR	100795	Identifier	ap		100745	0					
ANR	100796	ReturnType	ZEND_API void		100745	1					
ANR	100797	Identifier	multi_convert_to_double_ex		100745	2					
ANR	100798	ParameterList	int argc		100745	3					
ANR	100799	Parameter	int argc	778:41:19541:19548	100745	0	True				
ANR	100800	ParameterType	int		100745	0					
ANR	100801	Identifier	argc		100745	1					
ANR	100802	CFGEntryNode	ENTRY		100745		True				
ANR	100803	CFGExitNode	EXIT		100745		True				
ANR	100804	Symbol	argc		100745						
ANR	100805	Symbol	arg		100745						
ANR	100806	Symbol	ap		100745						
ANR	100807	Function	multi_convert_to_string_ex	794:0:19723:19933							
ANR	100808	FunctionDef	multi_convert_to_string_ex (int argc)		100807	0					
ANR	100809	CompoundStatement		795:0:19789:19933	100807	0					
ANR	100810	IdentifierDeclStatement	zval * * arg ;	796:1:19792:19802	100807	0	True				
ANR	100811	IdentifierDecl	* * arg		100807	0					
ANR	100812	IdentifierDeclType	zval * *		100807	0					
ANR	100813	Identifier	arg		100807	1					
ANR	100814	IdentifierDeclStatement	va_list ap ;	797:1:19805:19815	100807	1	True				
ANR	100815	IdentifierDecl	ap		100807	0					
ANR	100816	IdentifierDeclType	va_list		100807	0					
ANR	100817	Identifier	ap		100807	1					
ANR	100818	ExpressionStatement	"va_start ( ap , argc )"	799:1:19819:19837	100807	2	True				
ANR	100819	CallExpression	"va_start ( ap , argc )"		100807	0					
ANR	100820	Callee	va_start		100807	0					
ANR	100821	Identifier	va_start		100807	0					
ANR	100822	ArgumentList	ap		100807	1					
ANR	100823	Argument	ap		100807	0					
ANR	100824	Identifier	ap		100807	0					
ANR	100825	Argument	argc		100807	1					
ANR	100826	Identifier	argc		100807	0					
ANR	100827	WhileStatement	while ( argc -- )		100807	3					
ANR	100828	Condition	argc --	801:8:19848:19853	100807	0	True				
ANR	100829	PostIncDecOperationExpression	argc --		100807	0					
ANR	100830	Identifier	argc		100807	0					
ANR	100831	IncDec	--		100807	1					
ANR	100832	CompoundStatement		7:16:66:66	100807	1					
ANR	100833	Statement	arg	802:2:19860:19862	100807	0	True				
ANR	100834	Statement	=	802:6:19864:19864	100807	1	True				
ANR	100835	Statement	va_arg	802:8:19866:19871	100807	2	True				
ANR	100836	Statement	(	802:14:19872:19872	100807	3	True				
ANR	100837	Statement	ap	802:15:19873:19874	100807	4	True				
ANR	100838	Statement	","	802:17:19875:19875	100807	5	True				
ANR	100839	Statement	zval	802:19:19877:19880	100807	6	True				
ANR	100840	Statement	*	802:24:19882:19882	100807	7	True				
ANR	100841	Statement	*	802:25:19883:19883	100807	8	True				
ANR	100842	Statement	)	802:26:19884:19884	100807	9	True				
ANR	100843	ExpressionStatement		802:27:19885:19885	100807	10	True				
ANR	100844	ExpressionStatement	convert_to_string_ex ( arg )	803:2:19889:19914	100807	11	True				
ANR	100845	CallExpression	convert_to_string_ex ( arg )		100807	0					
ANR	100846	Callee	convert_to_string_ex		100807	0					
ANR	100847	Identifier	convert_to_string_ex		100807	0					
ANR	100848	ArgumentList	arg		100807	1					
ANR	100849	Argument	arg		100807	0					
ANR	100850	Identifier	arg		100807	0					
ANR	100851	ExpressionStatement	va_end ( ap )	806:1:19921:19931	100807	4	True				
ANR	100852	CallExpression	va_end ( ap )		100807	0					
ANR	100853	Callee	va_end		100807	0					
ANR	100854	Identifier	va_end		100807	0					
ANR	100855	ArgumentList	ap		100807	1					
ANR	100856	Argument	ap		100807	0					
ANR	100857	Identifier	ap		100807	0					
ANR	100858	ReturnType	ZEND_API void		100807	1					
ANR	100859	Identifier	multi_convert_to_string_ex		100807	2					
ANR	100860	ParameterList	int argc		100807	3					
ANR	100861	Parameter	int argc	794:41:19764:19771	100807	0	True				
ANR	100862	ParameterType	int		100807	0					
ANR	100863	Identifier	argc		100807	1					
ANR	100864	CFGEntryNode	ENTRY		100807		True				
ANR	100865	CFGExitNode	EXIT		100807		True				
ANR	100866	Symbol	argc		100807						
ANR	100867	Symbol	arg		100807						
ANR	100868	Symbol	ap		100807						
ANR	100869	DeclStmt									
ANR	100870	Decl							zval	zval	op1_copy
ANR	100871	Decl							zval	zval	op2_copy
ANR	100872	DeclStmt									
ANR	100873	Decl							int	int	converted
ANR	100874	DeclStmt									
ANR	100875	Decl							long	long	lval
ANR	100876	DeclStmt									
ANR	100877	Decl							zval	zval *	tmp
ANR	100878	DeclStmt									
ANR	100879	Decl							zval	zval	op1_copy
ANR	100880	Decl							zval	zval	op2_copy
ANR	100881	DeclStmt									
ANR	100882	Decl							int	int	converted
ANR	100883	DeclStmt									
ANR	100884	Decl							long	long	lval
ANR	100885	DeclStmt									
ANR	100886	Decl							zval	zval	op1_copy
ANR	100887	Decl							zval	zval	op2_copy
ANR	100888	DeclStmt									
ANR	100889	Decl							int	int	converted
ANR	100890	DeclStmt									
ANR	100891	Decl							long	long	overflow
ANR	100892	DeclStmt									
ANR	100893	Decl							zval	zval	op1_copy
ANR	100894	Decl							zval	zval	op2_copy
ANR	100895	DeclStmt									
ANR	100896	Decl							int	int	converted
ANR	100897	DeclStmt									
ANR	100898	Decl							long	long	l1
ANR	100899	Decl							long	long	l2
ANR	100900	Decl							long	long	i
ANR	100901	DeclStmt									
ANR	100902	Decl							long	long	overflow
ANR	100903	DeclStmt									
ANR	100904	Decl							double	double	dval
ANR	100905	DeclStmt									
ANR	100906	Decl							zval	zval	op1_copy
ANR	100907	Decl							zval	zval	op2_copy
ANR	100908	DeclStmt									
ANR	100909	Decl							int	int	converted
ANR	100910	DeclStmt									
ANR	100911	Decl							zval	zval	op1_copy
ANR	100912	Decl							zval	zval	op2_copy
ANR	100913	DeclStmt									
ANR	100914	Decl							long	long	op1_lval
ANR	100915	DeclStmt									
ANR	100916	Decl							zval	zval	op1_copy
ANR	100917	Decl							zval	zval	op2_copy
ANR	100918	DeclStmt									
ANR	100919	Decl							long	long	op1_lval
ANR	100920	DeclStmt									
ANR	100921	Decl							zval	zval	op1_copy
ANR	100922	DeclStmt									
ANR	100923	Decl							int	int	i
ANR	100924	DeclStmt									
ANR	100925	Decl							zval	zval	op1_copy
ANR	100926	DeclStmt									
ANR	100927	Decl							zval	zval	op1_copy
ANR	100928	Decl							zval	zval	op2_copy
ANR	100929	DeclStmt									
ANR	100930	Decl							long	long	op1_lval
ANR	100931	DeclStmt									
ANR	100932	Decl							zval	zval *	longer
ANR	100933	Decl							zval	zval *	shorter
ANR	100934	DeclStmt									
ANR	100935	Decl							char	char *	result_str
ANR	100936	DeclStmt									
ANR	100937	Decl							int	int	i
ANR	100938	Decl							int	int	result_len
ANR	100939	DeclStmt									
ANR	100940	Decl							zval	zval	op1_copy
ANR	100941	Decl							zval	zval	op2_copy
ANR	100942	DeclStmt									
ANR	100943	Decl							long	long	op1_lval
ANR	100944	DeclStmt									
ANR	100945	Decl							zval	zval *	longer
ANR	100946	Decl							zval	zval *	shorter
ANR	100947	DeclStmt									
ANR	100948	Decl							char	char *	result_str
ANR	100949	DeclStmt									
ANR	100950	Decl							int	int	i
ANR	100951	Decl							int	int	result_len
ANR	100952	DeclStmt									
ANR	100953	Decl							zval	zval	op1_copy
ANR	100954	Decl							zval	zval	op2_copy
ANR	100955	DeclStmt									
ANR	100956	Decl							long	long	op1_lval
ANR	100957	DeclStmt									
ANR	100958	Decl							zval	zval *	longer
ANR	100959	Decl							zval	zval *	shorter
ANR	100960	DeclStmt									
ANR	100961	Decl							char	char *	result_str
ANR	100962	DeclStmt									
ANR	100963	Decl							int	int	i
ANR	100964	Decl							int	int	result_len
ANR	100965	DeclStmt									
ANR	100966	Decl							zval	zval	op1_copy
ANR	100967	Decl							zval	zval	op2_copy
ANR	100968	DeclStmt									
ANR	100969	Decl							long	long	op1_lval
ANR	100970	DeclStmt									
ANR	100971	Decl							zval	zval	op1_copy
ANR	100972	Decl							zval	zval	op2_copy
ANR	100973	DeclStmt									
ANR	100974	Decl							long	long	op1_lval
ANR	100975	Function	add_char_to_string	1397:0:34983:35371							
ANR	100976	FunctionDef	"add_char_to_string (zval * result , const zval * op1 , const zval * op2)"		100975	0					
ANR	100977	CompoundStatement		1398:0:35073:35371	100975	0					
ANR	100978	IdentifierDeclStatement	int length = Z_STRLEN_P ( op1 ) + 1 ;	1399:1:35076:35108	100975	0	True				
ANR	100979	IdentifierDecl	length = Z_STRLEN_P ( op1 ) + 1		100975	0					
ANR	100980	IdentifierDeclType	int		100975	0					
ANR	100981	Identifier	length		100975	1					
ANR	100982	AssignmentExpression	length = Z_STRLEN_P ( op1 ) + 1		100975	2		=			
ANR	100983	Identifier	length		100975	0					
ANR	100984	AdditiveExpression	Z_STRLEN_P ( op1 ) + 1		100975	1		+			
ANR	100985	CallExpression	Z_STRLEN_P ( op1 )		100975	0					
ANR	100986	Callee	Z_STRLEN_P		100975	0					
ANR	100987	Identifier	Z_STRLEN_P		100975	0					
ANR	100988	ArgumentList	op1		100975	1					
ANR	100989	Argument	op1		100975	0					
ANR	100990	Identifier	op1		100975	0					
ANR	100991	PrimaryExpression	1		100975	1					
ANR	100992	IdentifierDeclStatement	char * buf ;	1400:1:35111:35120	100975	1	True				
ANR	100993	IdentifierDecl	* buf		100975	0					
ANR	100994	IdentifierDeclType	char *		100975	0					
ANR	100995	Identifier	buf		100975	1					
ANR	100996	IfStatement	if ( UNEXPECTED ( length < 0 ) )		100975	2					
ANR	100997	Condition	UNEXPECTED ( length < 0 )	1402:5:35128:35149	100975	0	True				
ANR	100998	CallExpression	UNEXPECTED ( length < 0 )		100975	0					
ANR	100999	Callee	UNEXPECTED		100975	0					
ANR	101000	Identifier	UNEXPECTED		100975	0					
ANR	101001	ArgumentList	length < 0		100975	1					
ANR	101002	Argument	length < 0		100975	0					
ANR	101003	RelationalExpression	length < 0		100975	0		<			
ANR	101004	Identifier	length		100975	0					
ANR	101005	PrimaryExpression	0		100975	1					
ANR	101006	CompoundStatement		5:29:78:78	100975	1					
ANR	101007	ExpressionStatement	"zend_error ( E_ERROR , ""String size overflow"" )"	1403:2:35156:35199	100975	0	True				
ANR	101008	CallExpression	"zend_error ( E_ERROR , ""String size overflow"" )"		100975	0					
ANR	101009	Callee	zend_error		100975	0					
ANR	101010	Identifier	zend_error		100975	0					
ANR	101011	ArgumentList	E_ERROR		100975	1					
ANR	101012	Argument	E_ERROR		100975	0					
ANR	101013	Identifier	E_ERROR		100975	0					
ANR	101014	Argument	"""String size overflow"""		100975	1					
ANR	101015	PrimaryExpression	"""String size overflow"""		100975	0					
ANR	101016	ExpressionStatement	"buf = str_erealloc ( Z_STRVAL_P ( op1 ) , length + 1 )"	1406:1:35206:35253	100975	3	True				
ANR	101017	AssignmentExpression	"buf = str_erealloc ( Z_STRVAL_P ( op1 ) , length + 1 )"		100975	0		=			
ANR	101018	Identifier	buf		100975	0					
ANR	101019	CallExpression	"str_erealloc ( Z_STRVAL_P ( op1 ) , length + 1 )"		100975	1					
ANR	101020	Callee	str_erealloc		100975	0					
ANR	101021	Identifier	str_erealloc		100975	0					
ANR	101022	ArgumentList	Z_STRVAL_P ( op1 )		100975	1					
ANR	101023	Argument	Z_STRVAL_P ( op1 )		100975	0					
ANR	101024	CallExpression	Z_STRVAL_P ( op1 )		100975	0					
ANR	101025	Callee	Z_STRVAL_P		100975	0					
ANR	101026	Identifier	Z_STRVAL_P		100975	0					
ANR	101027	ArgumentList	op1		100975	1					
ANR	101028	Argument	op1		100975	0					
ANR	101029	Identifier	op1		100975	0					
ANR	101030	Argument	length + 1		100975	1					
ANR	101031	AdditiveExpression	length + 1		100975	0		+			
ANR	101032	Identifier	length		100975	0					
ANR	101033	PrimaryExpression	1		100975	1					
ANR	101034	ExpressionStatement	buf [ length - 1 ] = ( char ) Z_LVAL_P ( op2 )	1408:1:35257:35295	100975	4	True				
ANR	101035	AssignmentExpression	buf [ length - 1 ] = ( char ) Z_LVAL_P ( op2 )		100975	0		=			
ANR	101036	ArrayIndexing	buf [ length - 1 ]		100975	0					
ANR	101037	Identifier	buf		100975	0					
ANR	101038	AdditiveExpression	length - 1		100975	1		-			
ANR	101039	Identifier	length		100975	0					
ANR	101040	PrimaryExpression	1		100975	1					
ANR	101041	CastExpression	( char ) Z_LVAL_P ( op2 )		100975	1					
ANR	101042	CastTarget	char		100975	0					
ANR	101043	CallExpression	Z_LVAL_P ( op2 )		100975	1					
ANR	101044	Callee	Z_LVAL_P		100975	0					
ANR	101045	Identifier	Z_LVAL_P		100975	0					
ANR	101046	ArgumentList	op2		100975	1					
ANR	101047	Argument	op2		100975	0					
ANR	101048	Identifier	op2		100975	0					
ANR	101049	ExpressionStatement	buf [ length ] = 0	1409:1:35298:35313	100975	5	True				
ANR	101050	AssignmentExpression	buf [ length ] = 0		100975	0		=			
ANR	101051	ArrayIndexing	buf [ length ]		100975	0					
ANR	101052	Identifier	buf		100975	0					
ANR	101053	Identifier	length		100975	1					
ANR	101054	PrimaryExpression	0		100975	1					
ANR	101055	ExpressionStatement	"ZVAL_STRINGL ( result , buf , length , 0 )"	1410:1:35316:35352	100975	6	True				
ANR	101056	CallExpression	"ZVAL_STRINGL ( result , buf , length , 0 )"		100975	0					
ANR	101057	Callee	ZVAL_STRINGL		100975	0					
ANR	101058	Identifier	ZVAL_STRINGL		100975	0					
ANR	101059	ArgumentList	result		100975	1					
ANR	101060	Argument	result		100975	0					
ANR	101061	Identifier	result		100975	0					
ANR	101062	Argument	buf		100975	1					
ANR	101063	Identifier	buf		100975	0					
ANR	101064	Argument	length		100975	2					
ANR	101065	Identifier	length		100975	0					
ANR	101066	Argument	0		100975	3					
ANR	101067	PrimaryExpression	0		100975	0					
ANR	101068	ReturnStatement	return SUCCESS ;	1411:1:35355:35369	100975	7	True				
ANR	101069	Identifier	SUCCESS		100975	0					
ANR	101070	ReturnType	ZEND_API int		100975	1					
ANR	101071	Identifier	add_char_to_string		100975	2					
ANR	101072	ParameterList	"zval * result , const zval * op1 , const zval * op2"		100975	3					
ANR	101073	Parameter	zval * result	1397:32:35015:35026	100975	0	True				
ANR	101074	ParameterType	zval *		100975	0					
ANR	101075	Identifier	result		100975	1					
ANR	101076	Parameter	const zval * op1	1397:46:35029:35043	100975	1	True				
ANR	101077	ParameterType	const zval *		100975	0					
ANR	101078	Identifier	op1		100975	1					
ANR	101079	Parameter	const zval * op2	1397:63:35046:35060	100975	2	True				
ANR	101080	ParameterType	const zval *		100975	0					
ANR	101081	Identifier	op2		100975	1					
ANR	101082	CFGEntryNode	ENTRY		100975		True				
ANR	101083	CFGExitNode	EXIT		100975		True				
ANR	101084	Symbol	* buf		100975						
ANR	101085	Symbol	str_erealloc		100975						
ANR	101086	Symbol	SUCCESS		100975						
ANR	101087	Symbol	length		100975						
ANR	101088	Symbol	Z_STRVAL_P		100975						
ANR	101089	Symbol	Z_LVAL_P		100975						
ANR	101090	Symbol	result		100975						
ANR	101091	Symbol	op2		100975						
ANR	101092	Symbol	UNEXPECTED		100975						
ANR	101093	Symbol	op1		100975						
ANR	101094	Symbol	buf		100975						
ANR	101095	Symbol	E_ERROR		100975						
ANR	101096	Symbol	Z_STRLEN_P		100975						
ANR	101097	Symbol	* length		100975						
ANR	101098	Function	add_string_to_string	1416:0:35415:35844							
ANR	101099	FunctionDef	"add_string_to_string (zval * result , const zval * op1 , const zval * op2)"		101098	0					
ANR	101100	CompoundStatement		1417:0:35507:35844	101098	0					
ANR	101101	IdentifierDeclStatement	int length = Z_STRLEN_P ( op1 ) + Z_STRLEN_P ( op2 ) ;	1418:1:35510:35556	101098	0	True				
ANR	101102	IdentifierDecl	length = Z_STRLEN_P ( op1 ) + Z_STRLEN_P ( op2 )		101098	0					
ANR	101103	IdentifierDeclType	int		101098	0					
ANR	101104	Identifier	length		101098	1					
ANR	101105	AssignmentExpression	length = Z_STRLEN_P ( op1 ) + Z_STRLEN_P ( op2 )		101098	2		=			
ANR	101106	Identifier	length		101098	0					
ANR	101107	AdditiveExpression	Z_STRLEN_P ( op1 ) + Z_STRLEN_P ( op2 )		101098	1		+			
ANR	101108	CallExpression	Z_STRLEN_P ( op1 )		101098	0					
ANR	101109	Callee	Z_STRLEN_P		101098	0					
ANR	101110	Identifier	Z_STRLEN_P		101098	0					
ANR	101111	ArgumentList	op1		101098	1					
ANR	101112	Argument	op1		101098	0					
ANR	101113	Identifier	op1		101098	0					
ANR	101114	CallExpression	Z_STRLEN_P ( op2 )		101098	1					
ANR	101115	Callee	Z_STRLEN_P		101098	0					
ANR	101116	Identifier	Z_STRLEN_P		101098	0					
ANR	101117	ArgumentList	op2		101098	1					
ANR	101118	Argument	op2		101098	0					
ANR	101119	Identifier	op2		101098	0					
ANR	101120	IdentifierDeclStatement	char * buf ;	1419:1:35559:35568	101098	1	True				
ANR	101121	IdentifierDecl	* buf		101098	0					
ANR	101122	IdentifierDeclType	char *		101098	0					
ANR	101123	Identifier	buf		101098	1					
ANR	101124	IfStatement	if ( UNEXPECTED ( length < 0 ) )		101098	2					
ANR	101125	Condition	UNEXPECTED ( length < 0 )	1421:5:35576:35597	101098	0	True				
ANR	101126	CallExpression	UNEXPECTED ( length < 0 )		101098	0					
ANR	101127	Callee	UNEXPECTED		101098	0					
ANR	101128	Identifier	UNEXPECTED		101098	0					
ANR	101129	ArgumentList	length < 0		101098	1					
ANR	101130	Argument	length < 0		101098	0					
ANR	101131	RelationalExpression	length < 0		101098	0		<			
ANR	101132	Identifier	length		101098	0					
ANR	101133	PrimaryExpression	0		101098	1					
ANR	101134	CompoundStatement		5:29:92:92	101098	1					
ANR	101135	ExpressionStatement	"zend_error ( E_ERROR , ""String size overflow"" )"	1422:2:35604:35647	101098	0	True				
ANR	101136	CallExpression	"zend_error ( E_ERROR , ""String size overflow"" )"		101098	0					
ANR	101137	Callee	zend_error		101098	0					
ANR	101138	Identifier	zend_error		101098	0					
ANR	101139	ArgumentList	E_ERROR		101098	1					
ANR	101140	Argument	E_ERROR		101098	0					
ANR	101141	Identifier	E_ERROR		101098	0					
ANR	101142	Argument	"""String size overflow"""		101098	1					
ANR	101143	PrimaryExpression	"""String size overflow"""		101098	0					
ANR	101144	ExpressionStatement	"buf = str_erealloc ( Z_STRVAL_P ( op1 ) , length + 1 )"	1425:1:35654:35701	101098	3	True				
ANR	101145	AssignmentExpression	"buf = str_erealloc ( Z_STRVAL_P ( op1 ) , length + 1 )"		101098	0		=			
ANR	101146	Identifier	buf		101098	0					
ANR	101147	CallExpression	"str_erealloc ( Z_STRVAL_P ( op1 ) , length + 1 )"		101098	1					
ANR	101148	Callee	str_erealloc		101098	0					
ANR	101149	Identifier	str_erealloc		101098	0					
ANR	101150	ArgumentList	Z_STRVAL_P ( op1 )		101098	1					
ANR	101151	Argument	Z_STRVAL_P ( op1 )		101098	0					
ANR	101152	CallExpression	Z_STRVAL_P ( op1 )		101098	0					
ANR	101153	Callee	Z_STRVAL_P		101098	0					
ANR	101154	Identifier	Z_STRVAL_P		101098	0					
ANR	101155	ArgumentList	op1		101098	1					
ANR	101156	Argument	op1		101098	0					
ANR	101157	Identifier	op1		101098	0					
ANR	101158	Argument	length + 1		101098	1					
ANR	101159	AdditiveExpression	length + 1		101098	0		+			
ANR	101160	Identifier	length		101098	0					
ANR	101161	PrimaryExpression	1		101098	1					
ANR	101162	ExpressionStatement	"memcpy ( buf + Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) )"	1427:1:35705:35768	101098	4	True				
ANR	101163	CallExpression	"memcpy ( buf + Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) )"		101098	0					
ANR	101164	Callee	memcpy		101098	0					
ANR	101165	Identifier	memcpy		101098	0					
ANR	101166	ArgumentList	buf + Z_STRLEN_P ( op1 )		101098	1					
ANR	101167	Argument	buf + Z_STRLEN_P ( op1 )		101098	0					
ANR	101168	AdditiveExpression	buf + Z_STRLEN_P ( op1 )		101098	0		+			
ANR	101169	Identifier	buf		101098	0					
ANR	101170	CallExpression	Z_STRLEN_P ( op1 )		101098	1					
ANR	101171	Callee	Z_STRLEN_P		101098	0					
ANR	101172	Identifier	Z_STRLEN_P		101098	0					
ANR	101173	ArgumentList	op1		101098	1					
ANR	101174	Argument	op1		101098	0					
ANR	101175	Identifier	op1		101098	0					
ANR	101176	Argument	Z_STRVAL_P ( op2 )		101098	1					
ANR	101177	CallExpression	Z_STRVAL_P ( op2 )		101098	0					
ANR	101178	Callee	Z_STRVAL_P		101098	0					
ANR	101179	Identifier	Z_STRVAL_P		101098	0					
ANR	101180	ArgumentList	op2		101098	1					
ANR	101181	Argument	op2		101098	0					
ANR	101182	Identifier	op2		101098	0					
ANR	101183	Argument	Z_STRLEN_P ( op2 )		101098	2					
ANR	101184	CallExpression	Z_STRLEN_P ( op2 )		101098	0					
ANR	101185	Callee	Z_STRLEN_P		101098	0					
ANR	101186	Identifier	Z_STRLEN_P		101098	0					
ANR	101187	ArgumentList	op2		101098	1					
ANR	101188	Argument	op2		101098	0					
ANR	101189	Identifier	op2		101098	0					
ANR	101190	ExpressionStatement	buf [ length ] = 0	1428:1:35771:35786	101098	5	True				
ANR	101191	AssignmentExpression	buf [ length ] = 0		101098	0		=			
ANR	101192	ArrayIndexing	buf [ length ]		101098	0					
ANR	101193	Identifier	buf		101098	0					
ANR	101194	Identifier	length		101098	1					
ANR	101195	PrimaryExpression	0		101098	1					
ANR	101196	ExpressionStatement	"ZVAL_STRINGL ( result , buf , length , 0 )"	1429:1:35789:35825	101098	6	True				
ANR	101197	CallExpression	"ZVAL_STRINGL ( result , buf , length , 0 )"		101098	0					
ANR	101198	Callee	ZVAL_STRINGL		101098	0					
ANR	101199	Identifier	ZVAL_STRINGL		101098	0					
ANR	101200	ArgumentList	result		101098	1					
ANR	101201	Argument	result		101098	0					
ANR	101202	Identifier	result		101098	0					
ANR	101203	Argument	buf		101098	1					
ANR	101204	Identifier	buf		101098	0					
ANR	101205	Argument	length		101098	2					
ANR	101206	Identifier	length		101098	0					
ANR	101207	Argument	0		101098	3					
ANR	101208	PrimaryExpression	0		101098	0					
ANR	101209	ReturnStatement	return SUCCESS ;	1430:1:35828:35842	101098	7	True				
ANR	101210	Identifier	SUCCESS		101098	0					
ANR	101211	ReturnType	ZEND_API int		101098	1					
ANR	101212	Identifier	add_string_to_string		101098	2					
ANR	101213	ParameterList	"zval * result , const zval * op1 , const zval * op2"		101098	3					
ANR	101214	Parameter	zval * result	1416:34:35449:35460	101098	0	True				
ANR	101215	ParameterType	zval *		101098	0					
ANR	101216	Identifier	result		101098	1					
ANR	101217	Parameter	const zval * op1	1416:48:35463:35477	101098	1	True				
ANR	101218	ParameterType	const zval *		101098	0					
ANR	101219	Identifier	op1		101098	1					
ANR	101220	Parameter	const zval * op2	1416:65:35480:35494	101098	2	True				
ANR	101221	ParameterType	const zval *		101098	0					
ANR	101222	Identifier	op2		101098	1					
ANR	101223	CFGEntryNode	ENTRY		101098		True				
ANR	101224	CFGExitNode	EXIT		101098		True				
ANR	101225	Symbol	* buf		101098						
ANR	101226	Symbol	str_erealloc		101098						
ANR	101227	Symbol	SUCCESS		101098						
ANR	101228	Symbol	length		101098						
ANR	101229	Symbol	Z_STRVAL_P		101098						
ANR	101230	Symbol	result		101098						
ANR	101231	Symbol	op2		101098						
ANR	101232	Symbol	UNEXPECTED		101098						
ANR	101233	Symbol	op1		101098						
ANR	101234	Symbol	buf		101098						
ANR	101235	Symbol	E_ERROR		101098						
ANR	101236	Symbol	Z_STRLEN_P		101098						
ANR	101237	Symbol	* length		101098						
ANR	101238	DeclStmt									
ANR	101239	Decl							zval	zval	op1_copy
ANR	101240	Decl							zval	zval	op2_copy
ANR	101241	DeclStmt									
ANR	101242	Decl							int	int	use_copy1
ANR	101243	Decl							int	int	use_copy2
ANR	101244	DeclStmt									
ANR	101245	Decl							uint	uint	res_len
ANR	101246	DeclStmt									
ANR	101247	Decl							int	int	length
ANR	101248	DeclStmt									
ANR	101249	Decl							char	char *	buf
ANR	101250	Function	string_compare_function_ex	1500:0:37694:38402							
ANR	101251	FunctionDef	"string_compare_function_ex (zval * result , zval * op1 , zval * op2 , zend_bool case_insensitive TSRMLS_DC)"		101250	0					
ANR	101252	CompoundStatement		1501:0:37818:38402	101250	0					
ANR	101253	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	1502:1:37821:37844	101250	0	True				
ANR	101254	IdentifierDecl	op1_copy		101250	0					
ANR	101255	IdentifierDeclType	zval		101250	0					
ANR	101256	Identifier	op1_copy		101250	1					
ANR	101257	IdentifierDecl	op2_copy		101250	1					
ANR	101258	IdentifierDeclType	zval		101250	0					
ANR	101259	Identifier	op2_copy		101250	1					
ANR	101260	IdentifierDeclStatement	"int use_copy1 = 0 , use_copy2 = 0 ;"	1503:1:37847:37879	101250	1	True				
ANR	101261	IdentifierDecl	use_copy1 = 0		101250	0					
ANR	101262	IdentifierDeclType	int		101250	0					
ANR	101263	Identifier	use_copy1		101250	1					
ANR	101264	AssignmentExpression	use_copy1 = 0		101250	2		=			
ANR	101265	Identifier	use_copy1		101250	0					
ANR	101266	PrimaryExpression	0		101250	1					
ANR	101267	IdentifierDecl	use_copy2 = 0		101250	1					
ANR	101268	IdentifierDeclType	int		101250	0					
ANR	101269	Identifier	use_copy2		101250	1					
ANR	101270	AssignmentExpression	use_copy2 = 0		101250	2		=			
ANR	101271	Identifier	use_copy2		101250	0					
ANR	101272	PrimaryExpression	0		101250	1					
ANR	101273	IfStatement	if ( Z_TYPE_P ( op1 ) != IS_STRING )		101250	2					
ANR	101274	Condition	Z_TYPE_P ( op1 ) != IS_STRING	1505:5:37887:37912	101250	0	True				
ANR	101275	EqualityExpression	Z_TYPE_P ( op1 ) != IS_STRING		101250	0		!=			
ANR	101276	CallExpression	Z_TYPE_P ( op1 )		101250	0					
ANR	101277	Callee	Z_TYPE_P		101250	0					
ANR	101278	Identifier	Z_TYPE_P		101250	0					
ANR	101279	ArgumentList	op1		101250	1					
ANR	101280	Argument	op1		101250	0					
ANR	101281	Identifier	op1		101250	0					
ANR	101282	Identifier	IS_STRING		101250	1					
ANR	101283	CompoundStatement		5:33:96:96	101250	1					
ANR	101284	ExpressionStatement	"zend_make_printable_zval ( op1 , & op1_copy , & use_copy1 )"	1506:2:37919:37971	101250	0	True				
ANR	101285	CallExpression	"zend_make_printable_zval ( op1 , & op1_copy , & use_copy1 )"		101250	0					
ANR	101286	Callee	zend_make_printable_zval		101250	0					
ANR	101287	Identifier	zend_make_printable_zval		101250	0					
ANR	101288	ArgumentList	op1		101250	1					
ANR	101289	Argument	op1		101250	0					
ANR	101290	Identifier	op1		101250	0					
ANR	101291	Argument	& op1_copy		101250	1					
ANR	101292	UnaryOperationExpression	& op1_copy		101250	0					
ANR	101293	UnaryOperator	&		101250	0					
ANR	101294	Identifier	op1_copy		101250	1					
ANR	101295	Argument	& use_copy1		101250	2					
ANR	101296	UnaryOperationExpression	& use_copy1		101250	0					
ANR	101297	UnaryOperator	&		101250	0					
ANR	101298	Identifier	use_copy1		101250	1					
ANR	101299	IfStatement	if ( Z_TYPE_P ( op2 ) != IS_STRING )		101250	3					
ANR	101300	Condition	Z_TYPE_P ( op2 ) != IS_STRING	1508:5:37981:38006	101250	0	True				
ANR	101301	EqualityExpression	Z_TYPE_P ( op2 ) != IS_STRING		101250	0		!=			
ANR	101302	CallExpression	Z_TYPE_P ( op2 )		101250	0					
ANR	101303	Callee	Z_TYPE_P		101250	0					
ANR	101304	Identifier	Z_TYPE_P		101250	0					
ANR	101305	ArgumentList	op2		101250	1					
ANR	101306	Argument	op2		101250	0					
ANR	101307	Identifier	op2		101250	0					
ANR	101308	Identifier	IS_STRING		101250	1					
ANR	101309	CompoundStatement		8:33:190:190	101250	1					
ANR	101310	ExpressionStatement	"zend_make_printable_zval ( op2 , & op2_copy , & use_copy2 )"	1509:2:38013:38065	101250	0	True				
ANR	101311	CallExpression	"zend_make_printable_zval ( op2 , & op2_copy , & use_copy2 )"		101250	0					
ANR	101312	Callee	zend_make_printable_zval		101250	0					
ANR	101313	Identifier	zend_make_printable_zval		101250	0					
ANR	101314	ArgumentList	op2		101250	1					
ANR	101315	Argument	op2		101250	0					
ANR	101316	Identifier	op2		101250	0					
ANR	101317	Argument	& op2_copy		101250	1					
ANR	101318	UnaryOperationExpression	& op2_copy		101250	0					
ANR	101319	UnaryOperator	&		101250	0					
ANR	101320	Identifier	op2_copy		101250	1					
ANR	101321	Argument	& use_copy2		101250	2					
ANR	101322	UnaryOperationExpression	& use_copy2		101250	0					
ANR	101323	UnaryOperator	&		101250	0					
ANR	101324	Identifier	use_copy2		101250	1					
ANR	101325	IfStatement	if ( use_copy1 )		101250	4					
ANR	101326	Condition	use_copy1	1512:5:38076:38084	101250	0	True				
ANR	101327	Identifier	use_copy1		101250	0					
ANR	101328	CompoundStatement		12:16:268:268	101250	1					
ANR	101329	ExpressionStatement	op1 = & op1_copy	1513:2:38091:38106	101250	0	True				
ANR	101330	AssignmentExpression	op1 = & op1_copy		101250	0		=			
ANR	101331	Identifier	op1		101250	0					
ANR	101332	UnaryOperationExpression	& op1_copy		101250	1					
ANR	101333	UnaryOperator	&		101250	0					
ANR	101334	Identifier	op1_copy		101250	1					
ANR	101335	IfStatement	if ( use_copy2 )		101250	5					
ANR	101336	Condition	use_copy2	1515:5:38116:38124	101250	0	True				
ANR	101337	Identifier	use_copy2		101250	0					
ANR	101338	CompoundStatement		15:16:308:308	101250	1					
ANR	101339	ExpressionStatement	op2 = & op2_copy	1516:2:38131:38146	101250	0	True				
ANR	101340	AssignmentExpression	op2 = & op2_copy		101250	0		=			
ANR	101341	Identifier	op2		101250	0					
ANR	101342	UnaryOperationExpression	& op2_copy		101250	1					
ANR	101343	UnaryOperator	&		101250	0					
ANR	101344	Identifier	op2_copy		101250	1					
ANR	101345	IfStatement	if ( case_insensitive )		101250	6					
ANR	101346	Condition	case_insensitive	1519:5:38157:38172	101250	0	True				
ANR	101347	Identifier	case_insensitive		101250	0					
ANR	101348	CompoundStatement		19:23:356:356	101250	1					
ANR	101349	ExpressionStatement	"ZVAL_LONG ( result , zend_binary_zval_strcasecmp ( op1 , op2 ) )"	1520:2:38179:38235	101250	0	True				
ANR	101350	CallExpression	"ZVAL_LONG ( result , zend_binary_zval_strcasecmp ( op1 , op2 ) )"		101250	0					
ANR	101351	Callee	ZVAL_LONG		101250	0					
ANR	101352	Identifier	ZVAL_LONG		101250	0					
ANR	101353	ArgumentList	result		101250	1					
ANR	101354	Argument	result		101250	0					
ANR	101355	Identifier	result		101250	0					
ANR	101356	Argument	"zend_binary_zval_strcasecmp ( op1 , op2 )"		101250	1					
ANR	101357	CallExpression	"zend_binary_zval_strcasecmp ( op1 , op2 )"		101250	0					
ANR	101358	Callee	zend_binary_zval_strcasecmp		101250	0					
ANR	101359	Identifier	zend_binary_zval_strcasecmp		101250	0					
ANR	101360	ArgumentList	op1		101250	1					
ANR	101361	Argument	op1		101250	0					
ANR	101362	Identifier	op1		101250	0					
ANR	101363	Argument	op2		101250	1					
ANR	101364	Identifier	op2		101250	0					
ANR	101365	ElseStatement	else		101250	0					
ANR	101366	CompoundStatement		21:8:426:426	101250	0					
ANR	101367	ExpressionStatement	"ZVAL_LONG ( result , zend_binary_zval_strcmp ( op1 , op2 ) )"	1522:2:38249:38301	101250	0	True				
ANR	101368	CallExpression	"ZVAL_LONG ( result , zend_binary_zval_strcmp ( op1 , op2 ) )"		101250	0					
ANR	101369	Callee	ZVAL_LONG		101250	0					
ANR	101370	Identifier	ZVAL_LONG		101250	0					
ANR	101371	ArgumentList	result		101250	1					
ANR	101372	Argument	result		101250	0					
ANR	101373	Identifier	result		101250	0					
ANR	101374	Argument	"zend_binary_zval_strcmp ( op1 , op2 )"		101250	1					
ANR	101375	CallExpression	"zend_binary_zval_strcmp ( op1 , op2 )"		101250	0					
ANR	101376	Callee	zend_binary_zval_strcmp		101250	0					
ANR	101377	Identifier	zend_binary_zval_strcmp		101250	0					
ANR	101378	ArgumentList	op1		101250	1					
ANR	101379	Argument	op1		101250	0					
ANR	101380	Identifier	op1		101250	0					
ANR	101381	Argument	op2		101250	1					
ANR	101382	Identifier	op2		101250	0					
ANR	101383	IfStatement	if ( use_copy1 )		101250	7					
ANR	101384	Condition	use_copy1	1525:5:38312:38320	101250	0	True				
ANR	101385	Identifier	use_copy1		101250	0					
ANR	101386	CompoundStatement		25:16:504:504	101250	1					
ANR	101387	ExpressionStatement	zval_dtor ( op1 )	1526:2:38327:38341	101250	0	True				
ANR	101388	CallExpression	zval_dtor ( op1 )		101250	0					
ANR	101389	Callee	zval_dtor		101250	0					
ANR	101390	Identifier	zval_dtor		101250	0					
ANR	101391	ArgumentList	op1		101250	1					
ANR	101392	Argument	op1		101250	0					
ANR	101393	Identifier	op1		101250	0					
ANR	101394	IfStatement	if ( use_copy2 )		101250	8					
ANR	101395	Condition	use_copy2	1528:5:38351:38359	101250	0	True				
ANR	101396	Identifier	use_copy2		101250	0					
ANR	101397	CompoundStatement		28:16:543:543	101250	1					
ANR	101398	ExpressionStatement	zval_dtor ( op2 )	1529:2:38366:38380	101250	0	True				
ANR	101399	CallExpression	zval_dtor ( op2 )		101250	0					
ANR	101400	Callee	zval_dtor		101250	0					
ANR	101401	Identifier	zval_dtor		101250	0					
ANR	101402	ArgumentList	op2		101250	1					
ANR	101403	Argument	op2		101250	0					
ANR	101404	Identifier	op2		101250	0					
ANR	101405	ReturnStatement	return SUCCESS ;	1531:1:38386:38400	101250	9	True				
ANR	101406	Identifier	SUCCESS		101250	0					
ANR	101407	ReturnType	ZEND_API int		101250	1					
ANR	101408	Identifier	string_compare_function_ex		101250	2					
ANR	101409	ParameterList	"zval * result , zval * op1 , zval * op2 , zend_bool case_insensitive TSRMLS_DC"		101250	3					
ANR	101410	Parameter	zval * result	1500:40:37734:37745	101250	0	True				
ANR	101411	ParameterType	zval *		101250	0					
ANR	101412	Identifier	result		101250	1					
ANR	101413	Parameter	zval * op1	1500:54:37748:37756	101250	1	True				
ANR	101414	ParameterType	zval *		101250	0					
ANR	101415	Identifier	op1		101250	1					
ANR	101416	Parameter	zval * op2	1500:65:37759:37767	101250	2	True				
ANR	101417	ParameterType	zval *		101250	0					
ANR	101418	Identifier	op2		101250	1					
ANR	101419	Parameter	zend_bool case_insensitive TSRMLS_DC	1500:76:37770:37805	101250	3	True				
ANR	101420	ParameterType	zend_bool case_insensitive		101250	0					
ANR	101421	Identifier	TSRMLS_DC		101250	1					
ANR	101422	CFGEntryNode	ENTRY		101250		True				
ANR	101423	CFGExitNode	EXIT		101250		True				
ANR	101424	Symbol	use_copy1		101250						
ANR	101425	Symbol	use_copy2		101250						
ANR	101426	Symbol	zend_binary_zval_strcmp		101250						
ANR	101427	Symbol	SUCCESS		101250						
ANR	101428	Symbol	case_insensitive		101250						
ANR	101429	Symbol	op1_copy		101250						
ANR	101430	Symbol	& op1_copy		101250						
ANR	101431	Symbol	Z_TYPE_P		101250						
ANR	101432	Symbol	& use_copy2		101250						
ANR	101433	Symbol	TSRMLS_DC		101250						
ANR	101434	Symbol	& use_copy1		101250						
ANR	101435	Symbol	result		101250						
ANR	101436	Symbol	op2		101250						
ANR	101437	Symbol	op1		101250						
ANR	101438	Symbol	& op2_copy		101250						
ANR	101439	Symbol	zend_binary_zval_strcasecmp		101250						
ANR	101440	Symbol	op2_copy		101250						
ANR	101441	Symbol	IS_STRING		101250						
ANR	101442	DeclStmt									
ANR	101443	Decl							zval	zval	op1_copy
ANR	101444	Decl							zval	zval	op2_copy
ANR	101445	DeclStmt									
ANR	101446	Decl							int	int	use_copy1
ANR	101447	Decl							int	int	use_copy2
ANR	101448	DeclStmt									
ANR	101449	Decl							zval	zval	op1_copy
ANR	101450	Decl							zval	zval	op2_copy
ANR	101451	DeclStmt									
ANR	101452	Decl							int	int	ret
ANR	101453	DeclStmt									
ANR	101454	Decl							int	int	converted
ANR	101455	DeclStmt									
ANR	101456	Decl							zval	zval	op1_copy
ANR	101457	Decl							zval	zval	op2_copy
ANR	101458	DeclStmt									
ANR	101459	Decl							zval	zval *	op_free
ANR	101460	Function	hash_zval_identical_function	1783:0:45788:46232							
ANR	101461	FunctionDef	"hash_zval_identical_function (const zval * * z1 , const zval * * z2)"		101460	0					
ANR	101462	CompoundStatement		1784:0:45872:46232	101460	0					
ANR	101463	IdentifierDeclStatement	zval result ;	1785:1:45875:45886	101460	0	True				
ANR	101464	IdentifierDecl	result		101460	0					
ANR	101465	IdentifierDeclType	zval		101460	0					
ANR	101466	Identifier	result		101460	1					
ANR	101467	ExpressionStatement	TSRMLS_FETCH ( )	1786:1:45889:45903	101460	1	True				
ANR	101468	CallExpression	TSRMLS_FETCH ( )		101460	0					
ANR	101469	Callee	TSRMLS_FETCH		101460	0					
ANR	101470	Identifier	TSRMLS_FETCH		101460	0					
ANR	101471	ArgumentList			101460	1					
ANR	101472	Statement	if	1793:1:46107:46108	101460	2	True				
ANR	101473	Statement	(	1793:4:46110:46110	101460	3	True				
ANR	101474	Statement	is_identical_function	1793:5:46111:46131	101460	4	True				
ANR	101475	Statement	(	1793:26:46132:46132	101460	5	True				
ANR	101476	Statement	&	1793:27:46133:46133	101460	6	True				
ANR	101477	Statement	result	1793:28:46134:46139	101460	7	True				
ANR	101478	Statement	","	1793:34:46140:46140	101460	8	True				
ANR	101479	Statement	(	1793:36:46142:46142	101460	9	True				
ANR	101480	Statement	zval	1793:37:46143:46146	101460	10	True				
ANR	101481	Statement	*	1793:42:46148:46148	101460	11	True				
ANR	101482	Statement	)	1793:43:46149:46149	101460	12	True				
ANR	101483	Statement	*	1793:45:46151:46151	101460	13	True				
ANR	101484	Statement	z1	1793:46:46152:46153	101460	14	True				
ANR	101485	Statement	","	1793:48:46154:46154	101460	15	True				
ANR	101486	Statement	(	1793:50:46156:46156	101460	16	True				
ANR	101487	Statement	zval	1793:51:46157:46160	101460	17	True				
ANR	101488	Statement	*	1793:56:46162:46162	101460	18	True				
ANR	101489	Statement	)	1793:57:46163:46163	101460	19	True				
ANR	101490	Statement	*	1793:59:46165:46165	101460	20	True				
ANR	101491	Statement	z2	1793:60:46166:46167	101460	21	True				
ANR	101492	Statement	TSRMLS_CC	1793:63:46169:46177	101460	22	True				
ANR	101493	Statement	)	1793:72:46178:46178	101460	23	True				
ANR	101494	Statement	==	1793:73:46179:46180	101460	24	True				
ANR	101495	Statement	FAILURE	1793:75:46181:46187	101460	25	True				
ANR	101496	Statement	)	1793:82:46188:46188	101460	26	True				
ANR	101497	CompoundStatement		10:84:317:317	101460	27					
ANR	101498	ReturnStatement	return 1 ;	1794:2:46194:46202	101460	0	True				
ANR	101499	PrimaryExpression	1		101460	0					
ANR	101500	ReturnStatement	return ! Z_LVAL ( result ) ;	1796:1:46208:46230	101460	28	True				
ANR	101501	UnaryOperationExpression	! Z_LVAL ( result )		101460	0					
ANR	101502	UnaryOperator	!		101460	0					
ANR	101503	CallExpression	Z_LVAL ( result )		101460	1					
ANR	101504	Callee	Z_LVAL		101460	0					
ANR	101505	Identifier	Z_LVAL		101460	0					
ANR	101506	ArgumentList	result		101460	1					
ANR	101507	Argument	result		101460	0					
ANR	101508	Identifier	result		101460	0					
ANR	101509	ReturnType	static int		101460	1					
ANR	101510	Identifier	hash_zval_identical_function		101460	2					
ANR	101511	ParameterList	"const zval * * z1 , const zval * * z2"		101460	3					
ANR	101512	Parameter	const zval * * z1	1783:40:45828:45842	101460	0	True				
ANR	101513	ParameterType	const zval * *		101460	0					
ANR	101514	Identifier	z1		101460	1					
ANR	101515	Parameter	const zval * * z2	1783:57:45845:45859	101460	1	True				
ANR	101516	ParameterType	const zval * *		101460	0					
ANR	101517	Identifier	z2		101460	1					
ANR	101518	CFGEntryNode	ENTRY		101460		True				
ANR	101519	CFGExitNode	EXIT		101460		True				
ANR	101520	Symbol	result		101460						
ANR	101521	Symbol	z1		101460						
ANR	101522	Symbol	z2		101460						
ANR	101523	Symbol	Z_LVAL		101460						
ANR	101524	Function	instanceof_function_ex	1892:0:48638:49102							
ANR	101525	FunctionDef	"instanceof_function_ex (const zend_class_entry * instance_ce , const zend_class_entry * ce , zend_bool interfaces_only TSRMLS_DC)"		101524	0					
ANR	101526	CompoundStatement		1893:0:48792:49102	101524	0					
ANR	101527	IdentifierDeclStatement	zend_uint i ;	1894:1:48795:48806	101524	0	True				
ANR	101528	IdentifierDecl	i		101524	0					
ANR	101529	IdentifierDeclType	zend_uint		101524	0					
ANR	101530	Identifier	i		101524	1					
ANR	101531	ForStatement	for ( i = 0 ; i < instance_ce -> num_interfaces ; i ++ )		101524	1					
ANR	101532	ForInit	i = 0 ;	1896:6:48815:48818	101524	0	True				
ANR	101533	AssignmentExpression	i = 0		101524	0		=			
ANR	101534	Identifier	i		101524	0					
ANR	101535	PrimaryExpression	0		101524	1					
ANR	101536	Condition	i < instance_ce -> num_interfaces	1896:11:48820:48848	101524	1	True				
ANR	101537	RelationalExpression	i < instance_ce -> num_interfaces		101524	0		<			
ANR	101538	Identifier	i		101524	0					
ANR	101539	PtrMemberAccess	instance_ce -> num_interfaces		101524	1					
ANR	101540	Identifier	instance_ce		101524	0					
ANR	101541	Identifier	num_interfaces		101524	1					
ANR	101542	PostIncDecOperationExpression	i ++	1896:42:48851:48853	101524	2	True				
ANR	101543	Identifier	i		101524	0					
ANR	101544	IncDec	++		101524	1					
ANR	101545	CompoundStatement		4:47:63:63	101524	3					
ANR	101546	Statement	if	1897:2:48860:48861	101524	0	True				
ANR	101547	Statement	(	1897:5:48863:48863	101524	1	True				
ANR	101548	Statement	instanceof_function	1897:6:48864:48882	101524	2	True				
ANR	101549	Statement	(	1897:25:48883:48883	101524	3	True				
ANR	101550	Statement	instance_ce	1897:26:48884:48894	101524	4	True				
ANR	101551	Statement	->	1897:37:48895:48896	101524	5	True				
ANR	101552	Statement	interfaces	1897:39:48897:48906	101524	6	True				
ANR	101553	Statement	[	1897:49:48907:48907	101524	7	True				
ANR	101554	Statement	i	1897:50:48908:48908	101524	8	True				
ANR	101555	Statement	]	1897:51:48909:48909	101524	9	True				
ANR	101556	Statement	","	1897:52:48910:48910	101524	10	True				
ANR	101557	Statement	ce	1897:54:48912:48913	101524	11	True				
ANR	101558	Statement	TSRMLS_CC	1897:57:48915:48923	101524	12	True				
ANR	101559	Statement	)	1897:66:48924:48924	101524	13	True				
ANR	101560	Statement	)	1897:67:48925:48925	101524	14	True				
ANR	101561	CompoundStatement		5:69:134:134	101524	15					
ANR	101562	ReturnStatement	return 1 ;	1898:3:48932:48940	101524	0	True				
ANR	101563	PrimaryExpression	1		101524	0					
ANR	101564	IfStatement	if ( ! interfaces_only )		101524	2					
ANR	101565	Condition	! interfaces_only	1901:5:48954:48969	101524	0	True				
ANR	101566	UnaryOperationExpression	! interfaces_only		101524	0					
ANR	101567	UnaryOperator	!		101524	0					
ANR	101568	Identifier	interfaces_only		101524	1					
ANR	101569	CompoundStatement		9:23:179:179	101524	1					
ANR	101570	WhileStatement	while ( instance_ce )		101524	0					
ANR	101571	Condition	instance_ce	1902:9:48983:48993	101524	0	True				
ANR	101572	Identifier	instance_ce		101524	0					
ANR	101573	CompoundStatement		10:22:203:203	101524	1					
ANR	101574	IfStatement	if ( instance_ce == ce )		101524	0					
ANR	101575	Condition	instance_ce == ce	1903:7:49005:49021	101524	0	True				
ANR	101576	EqualityExpression	instance_ce == ce		101524	0		==			
ANR	101577	Identifier	instance_ce		101524	0					
ANR	101578	Identifier	ce		101524	1					
ANR	101579	CompoundStatement		11:26:231:231	101524	1					
ANR	101580	ReturnStatement	return 1 ;	1904:4:49030:49038	101524	0	True				
ANR	101581	PrimaryExpression	1		101524	0					
ANR	101582	ExpressionStatement	instance_ce = instance_ce -> parent	1906:3:49048:49081	101524	1	True				
ANR	101583	AssignmentExpression	instance_ce = instance_ce -> parent		101524	0		=			
ANR	101584	Identifier	instance_ce		101524	0					
ANR	101585	PtrMemberAccess	instance_ce -> parent		101524	1					
ANR	101586	Identifier	instance_ce		101524	0					
ANR	101587	Identifier	parent		101524	1					
ANR	101588	ReturnStatement	return 0 ;	1910:1:49092:49100	101524	3	True				
ANR	101589	PrimaryExpression	0		101524	0					
ANR	101590	ReturnType	ZEND_API zend_bool		101524	1					
ANR	101591	Identifier	instanceof_function_ex		101524	2					
ANR	101592	ParameterList	"const zend_class_entry * instance_ce , const zend_class_entry * ce , zend_bool interfaces_only TSRMLS_DC"		101524	3					
ANR	101593	Parameter	const zend_class_entry * instance_ce	1892:42:48680:48714	101524	0	True				
ANR	101594	ParameterType	const zend_class_entry *		101524	0					
ANR	101595	Identifier	instance_ce		101524	1					
ANR	101596	Parameter	const zend_class_entry * ce	1892:79:48717:48742	101524	1	True				
ANR	101597	ParameterType	const zend_class_entry *		101524	0					
ANR	101598	Identifier	ce		101524	1					
ANR	101599	Parameter	zend_bool interfaces_only TSRMLS_DC	1892:107:48745:48779	101524	2	True				
ANR	101600	ParameterType	zend_bool interfaces_only		101524	0					
ANR	101601	Identifier	TSRMLS_DC		101524	1					
ANR	101602	CFGEntryNode	ENTRY		101524		True				
ANR	101603	CFGExitNode	EXIT		101524		True				
ANR	101604	Symbol	ce		101524						
ANR	101605	Symbol	i		101524						
ANR	101606	Symbol	instance_ce -> num_interfaces		101524						
ANR	101607	Symbol	instance_ce		101524						
ANR	101608	Symbol	instance_ce -> parent		101524						
ANR	101609	Symbol	TSRMLS_DC		101524						
ANR	101610	Symbol	interfaces_only		101524						
ANR	101611	Symbol	* instance_ce		101524						
ANR	101612	Function	increment_string	1924:0:49377:50739							
ANR	101613	FunctionDef	increment_string (zval * str)		101612	0					
ANR	101614	CompoundStatement		1925:0:49427:50739	101612	0					
ANR	101615	IdentifierDeclStatement	int carry = 0 ;	1926:1:49430:49441	101612	0	True				
ANR	101616	IdentifierDecl	carry = 0		101612	0					
ANR	101617	IdentifierDeclType	int		101612	0					
ANR	101618	Identifier	carry		101612	1					
ANR	101619	AssignmentExpression	carry = 0		101612	2		=			
ANR	101620	Identifier	carry		101612	0					
ANR	101621	PrimaryExpression	0		101612	1					
ANR	101622	IdentifierDeclStatement	int pos = Z_STRLEN_P ( str ) - 1 ;	1927:1:49444:49469	101612	1	True				
ANR	101623	IdentifierDecl	pos = Z_STRLEN_P ( str ) - 1		101612	0					
ANR	101624	IdentifierDeclType	int		101612	0					
ANR	101625	Identifier	pos		101612	1					
ANR	101626	AssignmentExpression	pos = Z_STRLEN_P ( str ) - 1		101612	2		=			
ANR	101627	Identifier	pos		101612	0					
ANR	101628	AdditiveExpression	Z_STRLEN_P ( str ) - 1		101612	1		-			
ANR	101629	CallExpression	Z_STRLEN_P ( str )		101612	0					
ANR	101630	Callee	Z_STRLEN_P		101612	0					
ANR	101631	Identifier	Z_STRLEN_P		101612	0					
ANR	101632	ArgumentList	str		101612	1					
ANR	101633	Argument	str		101612	0					
ANR	101634	Identifier	str		101612	0					
ANR	101635	PrimaryExpression	1		101612	1					
ANR	101636	IdentifierDeclStatement	char * s = Z_STRVAL_P ( str ) ;	1928:1:49472:49495	101612	2	True				
ANR	101637	IdentifierDecl	* s = Z_STRVAL_P ( str )		101612	0					
ANR	101638	IdentifierDeclType	char *		101612	0					
ANR	101639	Identifier	s		101612	1					
ANR	101640	AssignmentExpression	* s = Z_STRVAL_P ( str )		101612	2		=			
ANR	101641	Identifier	s		101612	0					
ANR	101642	CallExpression	Z_STRVAL_P ( str )		101612	1					
ANR	101643	Callee	Z_STRVAL_P		101612	0					
ANR	101644	Identifier	Z_STRVAL_P		101612	0					
ANR	101645	ArgumentList	str		101612	1					
ANR	101646	Argument	str		101612	0					
ANR	101647	Identifier	str		101612	0					
ANR	101648	IdentifierDeclStatement	char * t ;	1929:1:49498:49505	101612	3	True				
ANR	101649	IdentifierDecl	* t		101612	0					
ANR	101650	IdentifierDeclType	char *		101612	0					
ANR	101651	Identifier	t		101612	1					
ANR	101652	IdentifierDeclStatement	int last = 0 ;	1930:1:49508:49518	101612	4	True				
ANR	101653	IdentifierDecl	last = 0		101612	0					
ANR	101654	IdentifierDeclType	int		101612	0					
ANR	101655	Identifier	last		101612	1					
ANR	101656	AssignmentExpression	last = 0		101612	2		=			
ANR	101657	Identifier	last		101612	0					
ANR	101658	PrimaryExpression	0		101612	1					
ANR	101659	IdentifierDeclStatement	int ch ;	1931:1:49556:49562	101612	5	True				
ANR	101660	IdentifierDecl	ch		101612	0					
ANR	101661	IdentifierDeclType	int		101612	0					
ANR	101662	Identifier	ch		101612	1					
ANR	101663	IfStatement	if ( Z_STRLEN_P ( str ) == 0 )		101612	6					
ANR	101664	Condition	Z_STRLEN_P ( str ) == 0	1933:5:49570:49589	101612	0	True				
ANR	101665	EqualityExpression	Z_STRLEN_P ( str ) == 0		101612	0		==			
ANR	101666	CallExpression	Z_STRLEN_P ( str )		101612	0					
ANR	101667	Callee	Z_STRLEN_P		101612	0					
ANR	101668	Identifier	Z_STRLEN_P		101612	0					
ANR	101669	ArgumentList	str		101612	1					
ANR	101670	Argument	str		101612	0					
ANR	101671	Identifier	str		101612	0					
ANR	101672	PrimaryExpression	0		101612	1					
ANR	101673	CompoundStatement		9:27:164:164	101612	1					
ANR	101674	ExpressionStatement	str_efree ( Z_STRVAL_P ( str ) )	1934:2:49596:49622	101612	0	True				
ANR	101675	CallExpression	str_efree ( Z_STRVAL_P ( str ) )		101612	0					
ANR	101676	Callee	str_efree		101612	0					
ANR	101677	Identifier	str_efree		101612	0					
ANR	101678	ArgumentList	Z_STRVAL_P ( str )		101612	1					
ANR	101679	Argument	Z_STRVAL_P ( str )		101612	0					
ANR	101680	CallExpression	Z_STRVAL_P ( str )		101612	0					
ANR	101681	Callee	Z_STRVAL_P		101612	0					
ANR	101682	Identifier	Z_STRVAL_P		101612	0					
ANR	101683	ArgumentList	str		101612	1					
ANR	101684	Argument	str		101612	0					
ANR	101685	Identifier	str		101612	0					
ANR	101686	ExpressionStatement	"Z_STRVAL_P ( str ) = estrndup ( ""1"" , sizeof ( ""1"" ) - 1 )"	1935:2:49626:49672	101612	1	True				
ANR	101687	AssignmentExpression	"Z_STRVAL_P ( str ) = estrndup ( ""1"" , sizeof ( ""1"" ) - 1 )"		101612	0		=			
ANR	101688	CallExpression	Z_STRVAL_P ( str )		101612	0					
ANR	101689	Callee	Z_STRVAL_P		101612	0					
ANR	101690	Identifier	Z_STRVAL_P		101612	0					
ANR	101691	ArgumentList	str		101612	1					
ANR	101692	Argument	str		101612	0					
ANR	101693	Identifier	str		101612	0					
ANR	101694	CallExpression	"estrndup ( ""1"" , sizeof ( ""1"" ) - 1 )"		101612	1					
ANR	101695	Callee	estrndup		101612	0					
ANR	101696	Identifier	estrndup		101612	0					
ANR	101697	ArgumentList	"""1"""		101612	1					
ANR	101698	Argument	"""1"""		101612	0					
ANR	101699	PrimaryExpression	"""1"""		101612	0					
ANR	101700	Argument	"sizeof ( ""1"" ) - 1"		101612	1					
ANR	101701	AdditiveExpression	"sizeof ( ""1"" ) - 1"		101612	0		-			
ANR	101702	SizeofExpression	"sizeof ( ""1"" )"		101612	0					
ANR	101703	Sizeof	sizeof		101612	0					
ANR	101704	PrimaryExpression	"""1"""		101612	1					
ANR	101705	PrimaryExpression	1		101612	1					
ANR	101706	ExpressionStatement	Z_STRLEN_P ( str ) = 1	1936:2:49676:49695	101612	2	True				
ANR	101707	AssignmentExpression	Z_STRLEN_P ( str ) = 1		101612	0		=			
ANR	101708	CallExpression	Z_STRLEN_P ( str )		101612	0					
ANR	101709	Callee	Z_STRLEN_P		101612	0					
ANR	101710	Identifier	Z_STRLEN_P		101612	0					
ANR	101711	ArgumentList	str		101612	1					
ANR	101712	Argument	str		101612	0					
ANR	101713	Identifier	str		101612	0					
ANR	101714	PrimaryExpression	1		101612	1					
ANR	101715	ReturnStatement	return ;	1937:2:49699:49705	101612	3	True				
ANR	101716	IfStatement	if ( IS_INTERNED ( s ) )		101612	7					
ANR	101717	Condition	IS_INTERNED ( s )	1940:5:49716:49729	101612	0	True				
ANR	101718	CallExpression	IS_INTERNED ( s )		101612	0					
ANR	101719	Callee	IS_INTERNED		101612	0					
ANR	101720	Identifier	IS_INTERNED		101612	0					
ANR	101721	ArgumentList	s		101612	1					
ANR	101722	Argument	s		101612	0					
ANR	101723	Identifier	s		101612	0					
ANR	101724	CompoundStatement		16:21:304:304	101612	1					
ANR	101725	ExpressionStatement	"Z_STRVAL_P ( str ) = s = estrndup ( s , Z_STRLEN_P ( str ) )"	1941:2:49736:49786	101612	0	True				
ANR	101726	AssignmentExpression	"Z_STRVAL_P ( str ) = s = estrndup ( s , Z_STRLEN_P ( str ) )"		101612	0		=			
ANR	101727	CallExpression	Z_STRVAL_P ( str )		101612	0					
ANR	101728	Callee	Z_STRVAL_P		101612	0					
ANR	101729	Identifier	Z_STRVAL_P		101612	0					
ANR	101730	ArgumentList	str		101612	1					
ANR	101731	Argument	str		101612	0					
ANR	101732	Identifier	str		101612	0					
ANR	101733	AssignmentExpression	"s = estrndup ( s , Z_STRLEN_P ( str ) )"		101612	1		=			
ANR	101734	Identifier	s		101612	0					
ANR	101735	CallExpression	"estrndup ( s , Z_STRLEN_P ( str ) )"		101612	1					
ANR	101736	Callee	estrndup		101612	0					
ANR	101737	Identifier	estrndup		101612	0					
ANR	101738	ArgumentList	s		101612	1					
ANR	101739	Argument	s		101612	0					
ANR	101740	Identifier	s		101612	0					
ANR	101741	Argument	Z_STRLEN_P ( str )		101612	1					
ANR	101742	CallExpression	Z_STRLEN_P ( str )		101612	0					
ANR	101743	Callee	Z_STRLEN_P		101612	0					
ANR	101744	Identifier	Z_STRLEN_P		101612	0					
ANR	101745	ArgumentList	str		101612	1					
ANR	101746	Argument	str		101612	0					
ANR	101747	Identifier	str		101612	0					
ANR	101748	WhileStatement	while ( pos >= 0 )		101612	8					
ANR	101749	Condition	pos >= 0	1944:8:49800:49807	101612	0	True				
ANR	101750	RelationalExpression	pos >= 0		101612	0		>=			
ANR	101751	Identifier	pos		101612	0					
ANR	101752	PrimaryExpression	0		101612	1					
ANR	101753	CompoundStatement		20:18:382:382	101612	1					
ANR	101754	ExpressionStatement	ch = s [ pos ]	1945:2:49814:49825	101612	0	True				
ANR	101755	AssignmentExpression	ch = s [ pos ]		101612	0		=			
ANR	101756	Identifier	ch		101612	0					
ANR	101757	ArrayIndexing	s [ pos ]		101612	1					
ANR	101758	Identifier	s		101612	0					
ANR	101759	Identifier	pos		101612	1					
ANR	101760	IfStatement	if ( ch >= 'a' && ch <= 'z' )		101612	1					
ANR	101761	Condition	ch >= 'a' && ch <= 'z'	1946:6:49833:49854	101612	0	True				
ANR	101762	AndExpression	ch >= 'a' && ch <= 'z'		101612	0		&&			
ANR	101763	RelationalExpression	ch >= 'a'		101612	0		>=			
ANR	101764	Identifier	ch		101612	0					
ANR	101765	PrimaryExpression	'a'		101612	1					
ANR	101766	RelationalExpression	ch <= 'z'		101612	1		<=			
ANR	101767	Identifier	ch		101612	0					
ANR	101768	PrimaryExpression	'z'		101612	1					
ANR	101769	CompoundStatement		22:30:429:429	101612	1					
ANR	101770	IfStatement	if ( ch == 'z' )		101612	0					
ANR	101771	Condition	ch == 'z'	1947:7:49866:49874	101612	0	True				
ANR	101772	EqualityExpression	ch == 'z'		101612	0		==			
ANR	101773	Identifier	ch		101612	0					
ANR	101774	PrimaryExpression	'z'		101612	1					
ANR	101775	CompoundStatement		23:18:449:449	101612	1					
ANR	101776	ExpressionStatement	s [ pos ] = 'a'	1948:4:49883:49895	101612	0	True				
ANR	101777	AssignmentExpression	s [ pos ] = 'a'		101612	0		=			
ANR	101778	ArrayIndexing	s [ pos ]		101612	0					
ANR	101779	Identifier	s		101612	0					
ANR	101780	Identifier	pos		101612	1					
ANR	101781	PrimaryExpression	'a'		101612	1					
ANR	101782	ExpressionStatement	carry = 1	1949:4:49901:49908	101612	1	True				
ANR	101783	AssignmentExpression	carry = 1		101612	0		=			
ANR	101784	Identifier	carry		101612	0					
ANR	101785	PrimaryExpression	1		101612	1					
ANR	101786	ElseStatement	else		101612	0					
ANR	101787	CompoundStatement		26:10:492:492	101612	0					
ANR	101788	ExpressionStatement	s [ pos ] ++	1951:4:49926:49934	101612	0	True				
ANR	101789	PostIncDecOperationExpression	s [ pos ] ++		101612	0					
ANR	101790	ArrayIndexing	s [ pos ]		101612	0					
ANR	101791	Identifier	s		101612	0					
ANR	101792	Identifier	pos		101612	1					
ANR	101793	IncDec	++		101612	1					
ANR	101794	ExpressionStatement	carry = 0	1952:4:49940:49947	101612	1	True				
ANR	101795	AssignmentExpression	carry = 0		101612	0		=			
ANR	101796	Identifier	carry		101612	0					
ANR	101797	PrimaryExpression	0		101612	1					
ANR	101798	ExpressionStatement	last = LOWER_CASE	1954:3:49957:49972	101612	1	True				
ANR	101799	AssignmentExpression	last = LOWER_CASE		101612	0		=			
ANR	101800	Identifier	last		101612	0					
ANR	101801	Identifier	LOWER_CASE		101612	1					
ANR	101802	ElseStatement	else		101612	0					
ANR	101803	IfStatement	if ( ch >= 'A' && ch <= 'Z' )		101612	0					
ANR	101804	Condition	ch >= 'A' && ch <= 'Z'	1955:13:49987:50008	101612	0	True				
ANR	101805	AndExpression	ch >= 'A' && ch <= 'Z'		101612	0		&&			
ANR	101806	RelationalExpression	ch >= 'A'		101612	0		>=			
ANR	101807	Identifier	ch		101612	0					
ANR	101808	PrimaryExpression	'A'		101612	1					
ANR	101809	RelationalExpression	ch <= 'Z'		101612	1		<=			
ANR	101810	Identifier	ch		101612	0					
ANR	101811	PrimaryExpression	'Z'		101612	1					
ANR	101812	CompoundStatement		31:37:583:583	101612	1					
ANR	101813	IfStatement	if ( ch == 'Z' )		101612	0					
ANR	101814	Condition	ch == 'Z'	1956:7:50020:50028	101612	0	True				
ANR	101815	EqualityExpression	ch == 'Z'		101612	0		==			
ANR	101816	Identifier	ch		101612	0					
ANR	101817	PrimaryExpression	'Z'		101612	1					
ANR	101818	CompoundStatement		32:18:603:603	101612	1					
ANR	101819	ExpressionStatement	s [ pos ] = 'A'	1957:4:50037:50049	101612	0	True				
ANR	101820	AssignmentExpression	s [ pos ] = 'A'		101612	0		=			
ANR	101821	ArrayIndexing	s [ pos ]		101612	0					
ANR	101822	Identifier	s		101612	0					
ANR	101823	Identifier	pos		101612	1					
ANR	101824	PrimaryExpression	'A'		101612	1					
ANR	101825	ExpressionStatement	carry = 1	1958:4:50055:50062	101612	1	True				
ANR	101826	AssignmentExpression	carry = 1		101612	0		=			
ANR	101827	Identifier	carry		101612	0					
ANR	101828	PrimaryExpression	1		101612	1					
ANR	101829	ElseStatement	else		101612	0					
ANR	101830	CompoundStatement		35:10:646:646	101612	0					
ANR	101831	ExpressionStatement	s [ pos ] ++	1960:4:50080:50088	101612	0	True				
ANR	101832	PostIncDecOperationExpression	s [ pos ] ++		101612	0					
ANR	101833	ArrayIndexing	s [ pos ]		101612	0					
ANR	101834	Identifier	s		101612	0					
ANR	101835	Identifier	pos		101612	1					
ANR	101836	IncDec	++		101612	1					
ANR	101837	ExpressionStatement	carry = 0	1961:4:50094:50101	101612	1	True				
ANR	101838	AssignmentExpression	carry = 0		101612	0		=			
ANR	101839	Identifier	carry		101612	0					
ANR	101840	PrimaryExpression	0		101612	1					
ANR	101841	ExpressionStatement	last = UPPER_CASE	1963:3:50111:50126	101612	1	True				
ANR	101842	AssignmentExpression	last = UPPER_CASE		101612	0		=			
ANR	101843	Identifier	last		101612	0					
ANR	101844	Identifier	UPPER_CASE		101612	1					
ANR	101845	ElseStatement	else		101612	0					
ANR	101846	IfStatement	if ( ch >= '0' && ch <= '9' )		101612	0					
ANR	101847	Condition	ch >= '0' && ch <= '9'	1964:13:50141:50162	101612	0	True				
ANR	101848	AndExpression	ch >= '0' && ch <= '9'		101612	0		&&			
ANR	101849	RelationalExpression	ch >= '0'		101612	0		>=			
ANR	101850	Identifier	ch		101612	0					
ANR	101851	PrimaryExpression	'0'		101612	1					
ANR	101852	RelationalExpression	ch <= '9'		101612	1		<=			
ANR	101853	Identifier	ch		101612	0					
ANR	101854	PrimaryExpression	'9'		101612	1					
ANR	101855	CompoundStatement		40:37:737:737	101612	1					
ANR	101856	IfStatement	if ( ch == '9' )		101612	0					
ANR	101857	Condition	ch == '9'	1965:7:50174:50182	101612	0	True				
ANR	101858	EqualityExpression	ch == '9'		101612	0		==			
ANR	101859	Identifier	ch		101612	0					
ANR	101860	PrimaryExpression	'9'		101612	1					
ANR	101861	CompoundStatement		41:18:757:757	101612	1					
ANR	101862	ExpressionStatement	s [ pos ] = '0'	1966:4:50191:50203	101612	0	True				
ANR	101863	AssignmentExpression	s [ pos ] = '0'		101612	0		=			
ANR	101864	ArrayIndexing	s [ pos ]		101612	0					
ANR	101865	Identifier	s		101612	0					
ANR	101866	Identifier	pos		101612	1					
ANR	101867	PrimaryExpression	'0'		101612	1					
ANR	101868	ExpressionStatement	carry = 1	1967:4:50209:50216	101612	1	True				
ANR	101869	AssignmentExpression	carry = 1		101612	0		=			
ANR	101870	Identifier	carry		101612	0					
ANR	101871	PrimaryExpression	1		101612	1					
ANR	101872	ElseStatement	else		101612	0					
ANR	101873	CompoundStatement		44:10:800:800	101612	0					
ANR	101874	ExpressionStatement	s [ pos ] ++	1969:4:50234:50242	101612	0	True				
ANR	101875	PostIncDecOperationExpression	s [ pos ] ++		101612	0					
ANR	101876	ArrayIndexing	s [ pos ]		101612	0					
ANR	101877	Identifier	s		101612	0					
ANR	101878	Identifier	pos		101612	1					
ANR	101879	IncDec	++		101612	1					
ANR	101880	ExpressionStatement	carry = 0	1970:4:50248:50255	101612	1	True				
ANR	101881	AssignmentExpression	carry = 0		101612	0		=			
ANR	101882	Identifier	carry		101612	0					
ANR	101883	PrimaryExpression	0		101612	1					
ANR	101884	ExpressionStatement	last = NUMERIC	1972:3:50265:50279	101612	1	True				
ANR	101885	AssignmentExpression	last = NUMERIC		101612	0		=			
ANR	101886	Identifier	last		101612	0					
ANR	101887	Identifier	NUMERIC		101612	1					
ANR	101888	ElseStatement	else		101612	0					
ANR	101889	CompoundStatement		49:9:862:862	101612	0					
ANR	101890	ExpressionStatement	carry = 0	1974:3:50295:50302	101612	0	True				
ANR	101891	AssignmentExpression	carry = 0		101612	0		=			
ANR	101892	Identifier	carry		101612	0					
ANR	101893	PrimaryExpression	0		101612	1					
ANR	101894	BreakStatement	break ;	1975:3:50307:50312	101612	1	True				
ANR	101895	IfStatement	if ( carry == 0 )		101612	2					
ANR	101896	Condition	carry == 0	1977:6:50324:50333	101612	0	True				
ANR	101897	EqualityExpression	carry == 0		101612	0		==			
ANR	101898	Identifier	carry		101612	0					
ANR	101899	PrimaryExpression	0		101612	1					
ANR	101900	CompoundStatement		53:18:908:908	101612	1					
ANR	101901	BreakStatement	break ;	1978:3:50341:50346	101612	0	True				
ANR	101902	ExpressionStatement	pos --	1980:2:50354:50359	101612	3	True				
ANR	101903	PostIncDecOperationExpression	pos --		101612	0					
ANR	101904	Identifier	pos		101612	0					
ANR	101905	IncDec	--		101612	1					
ANR	101906	IfStatement	if ( carry )		101612	9					
ANR	101907	Condition	carry	1983:5:50370:50374	101612	0	True				
ANR	101908	Identifier	carry		101612	0					
ANR	101909	CompoundStatement		59:12:949:949	101612	1					
ANR	101910	ExpressionStatement	t = ( char * ) emalloc ( Z_STRLEN_P ( str ) + 1 + 1 )	1984:2:50381:50422	101612	0	True				
ANR	101911	AssignmentExpression	t = ( char * ) emalloc ( Z_STRLEN_P ( str ) + 1 + 1 )		101612	0		=			
ANR	101912	Identifier	t		101612	0					
ANR	101913	CastExpression	( char * ) emalloc ( Z_STRLEN_P ( str ) + 1 + 1 )		101612	1					
ANR	101914	CastTarget	char *		101612	0					
ANR	101915	CallExpression	emalloc ( Z_STRLEN_P ( str ) + 1 + 1 )		101612	1					
ANR	101916	Callee	emalloc		101612	0					
ANR	101917	Identifier	emalloc		101612	0					
ANR	101918	ArgumentList	Z_STRLEN_P ( str ) + 1 + 1		101612	1					
ANR	101919	Argument	Z_STRLEN_P ( str ) + 1 + 1		101612	0					
ANR	101920	AdditiveExpression	Z_STRLEN_P ( str ) + 1 + 1		101612	0		+			
ANR	101921	CallExpression	Z_STRLEN_P ( str )		101612	0					
ANR	101922	Callee	Z_STRLEN_P		101612	0					
ANR	101923	Identifier	Z_STRLEN_P		101612	0					
ANR	101924	ArgumentList	str		101612	1					
ANR	101925	Argument	str		101612	0					
ANR	101926	Identifier	str		101612	0					
ANR	101927	AdditiveExpression	1 + 1		101612	1		+			
ANR	101928	PrimaryExpression	1		101612	0					
ANR	101929	PrimaryExpression	1		101612	1					
ANR	101930	ExpressionStatement	"memcpy ( t + 1 , Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) )"	1985:2:50426:50471	101612	1	True				
ANR	101931	CallExpression	"memcpy ( t + 1 , Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) )"		101612	0					
ANR	101932	Callee	memcpy		101612	0					
ANR	101933	Identifier	memcpy		101612	0					
ANR	101934	ArgumentList	t + 1		101612	1					
ANR	101935	Argument	t + 1		101612	0					
ANR	101936	AdditiveExpression	t + 1		101612	0		+			
ANR	101937	Identifier	t		101612	0					
ANR	101938	PrimaryExpression	1		101612	1					
ANR	101939	Argument	Z_STRVAL_P ( str )		101612	1					
ANR	101940	CallExpression	Z_STRVAL_P ( str )		101612	0					
ANR	101941	Callee	Z_STRVAL_P		101612	0					
ANR	101942	Identifier	Z_STRVAL_P		101612	0					
ANR	101943	ArgumentList	str		101612	1					
ANR	101944	Argument	str		101612	0					
ANR	101945	Identifier	str		101612	0					
ANR	101946	Argument	Z_STRLEN_P ( str )		101612	2					
ANR	101947	CallExpression	Z_STRLEN_P ( str )		101612	0					
ANR	101948	Callee	Z_STRLEN_P		101612	0					
ANR	101949	Identifier	Z_STRLEN_P		101612	0					
ANR	101950	ArgumentList	str		101612	1					
ANR	101951	Argument	str		101612	0					
ANR	101952	Identifier	str		101612	0					
ANR	101953	ExpressionStatement	Z_STRLEN_P ( str ) ++	1986:2:50475:50492	101612	2	True				
ANR	101954	PostIncDecOperationExpression	Z_STRLEN_P ( str ) ++		101612	0					
ANR	101955	CallExpression	Z_STRLEN_P ( str )		101612	0					
ANR	101956	Callee	Z_STRLEN_P		101612	0					
ANR	101957	Identifier	Z_STRLEN_P		101612	0					
ANR	101958	ArgumentList	str		101612	1					
ANR	101959	Argument	str		101612	0					
ANR	101960	Identifier	str		101612	0					
ANR	101961	IncDec	++		101612	1					
ANR	101962	ExpressionStatement	t [ Z_STRLEN_P ( str ) ] = '\\0'	1987:2:50496:50521	101612	3	True				
ANR	101963	AssignmentExpression	t [ Z_STRLEN_P ( str ) ] = '\\0'		101612	0		=			
ANR	101964	ArrayIndexing	t [ Z_STRLEN_P ( str ) ]		101612	0					
ANR	101965	Identifier	t		101612	0					
ANR	101966	CallExpression	Z_STRLEN_P ( str )		101612	1					
ANR	101967	Callee	Z_STRLEN_P		101612	0					
ANR	101968	Identifier	Z_STRLEN_P		101612	0					
ANR	101969	ArgumentList	str		101612	1					
ANR	101970	Argument	str		101612	0					
ANR	101971	Identifier	str		101612	0					
ANR	101972	PrimaryExpression	'\\0'		101612	1					
ANR	101973	SwitchStatement	switch ( last )		101612	4					
ANR	101974	Condition	last	1988:10:50533:50536	101612	0	True				
ANR	101975	Identifier	last		101612	0					
ANR	101976	CompoundStatement		64:16:1111:1111	101612	1					
ANR	101977	Label	case NUMERIC :	1989:3:50544:50556	101612	0	True				
ANR	101978	Identifier	NUMERIC		101612	0					
ANR	101979	ExpressionStatement	t [ 0 ] = '1'	1990:4:50562:50572	101612	1	True				
ANR	101980	AssignmentExpression	t [ 0 ] = '1'		101612	0		=			
ANR	101981	ArrayIndexing	t [ 0 ]		101612	0					
ANR	101982	Identifier	t		101612	0					
ANR	101983	PrimaryExpression	0		101612	1					
ANR	101984	PrimaryExpression	'1'		101612	1					
ANR	101985	BreakStatement	break ;	1991:4:50578:50583	101612	2	True				
ANR	101986	Label	case UPPER_CASE :	1992:3:50588:50603	101612	3	True				
ANR	101987	Identifier	UPPER_CASE		101612	0					
ANR	101988	ExpressionStatement	t [ 0 ] = 'A'	1993:4:50609:50619	101612	4	True				
ANR	101989	AssignmentExpression	t [ 0 ] = 'A'		101612	0		=			
ANR	101990	ArrayIndexing	t [ 0 ]		101612	0					
ANR	101991	Identifier	t		101612	0					
ANR	101992	PrimaryExpression	0		101612	1					
ANR	101993	PrimaryExpression	'A'		101612	1					
ANR	101994	BreakStatement	break ;	1994:4:50625:50630	101612	5	True				
ANR	101995	Label	case LOWER_CASE :	1995:3:50635:50650	101612	6	True				
ANR	101996	Identifier	LOWER_CASE		101612	0					
ANR	101997	ExpressionStatement	t [ 0 ] = 'a'	1996:4:50656:50666	101612	7	True				
ANR	101998	AssignmentExpression	t [ 0 ] = 'a'		101612	0		=			
ANR	101999	ArrayIndexing	t [ 0 ]		101612	0					
ANR	102000	Identifier	t		101612	0					
ANR	102001	PrimaryExpression	0		101612	1					
ANR	102002	PrimaryExpression	'a'		101612	1					
ANR	102003	BreakStatement	break ;	1997:4:50672:50677	101612	8	True				
ANR	102004	ExpressionStatement	str_efree ( Z_STRVAL_P ( str ) )	1999:2:50685:50711	101612	5	True				
ANR	102005	CallExpression	str_efree ( Z_STRVAL_P ( str ) )		101612	0					
ANR	102006	Callee	str_efree		101612	0					
ANR	102007	Identifier	str_efree		101612	0					
ANR	102008	ArgumentList	Z_STRVAL_P ( str )		101612	1					
ANR	102009	Argument	Z_STRVAL_P ( str )		101612	0					
ANR	102010	CallExpression	Z_STRVAL_P ( str )		101612	0					
ANR	102011	Callee	Z_STRVAL_P		101612	0					
ANR	102012	Identifier	Z_STRVAL_P		101612	0					
ANR	102013	ArgumentList	str		101612	1					
ANR	102014	Argument	str		101612	0					
ANR	102015	Identifier	str		101612	0					
ANR	102016	ExpressionStatement	Z_STRVAL_P ( str ) = t	2000:2:50715:50734	101612	6	True				
ANR	102017	AssignmentExpression	Z_STRVAL_P ( str ) = t		101612	0		=			
ANR	102018	CallExpression	Z_STRVAL_P ( str )		101612	0					
ANR	102019	Callee	Z_STRVAL_P		101612	0					
ANR	102020	Identifier	Z_STRVAL_P		101612	0					
ANR	102021	ArgumentList	str		101612	1					
ANR	102022	Argument	str		101612	0					
ANR	102023	Identifier	str		101612	0					
ANR	102024	Identifier	t		101612	1					
ANR	102025	ReturnType	static void		101612	1					
ANR	102026	Identifier	increment_string		101612	2					
ANR	102027	ParameterList	zval * str		101612	3					
ANR	102028	Parameter	zval * str	1924:29:49406:49414	101612	0	True				
ANR	102029	ParameterType	zval *		101612	0					
ANR	102030	Identifier	str		101612	1					
ANR	102031	CFGEntryNode	ENTRY		101612		True				
ANR	102032	CFGExitNode	EXIT		101612		True				
ANR	102033	Symbol	NUMERIC		101612						
ANR	102034	Symbol	last		101612						
ANR	102035	Symbol	ch		101612						
ANR	102036	Symbol	LOWER_CASE		101612						
ANR	102037	Symbol	* Z_STRLEN_P		101612						
ANR	102038	Symbol	Z_STRVAL_P		101612						
ANR	102039	Symbol	str		101612						
ANR	102040	Symbol	estrndup		101612						
ANR	102041	Symbol	emalloc		101612						
ANR	102042	Symbol	s		101612						
ANR	102043	Symbol	t		101612						
ANR	102044	Symbol	pos		101612						
ANR	102045	Symbol	UPPER_CASE		101612						
ANR	102046	Symbol	IS_INTERNED		101612						
ANR	102047	Symbol	Z_STRLEN_P		101612						
ANR	102048	Symbol	carry		101612						
ANR	102049	Symbol	* s		101612						
ANR	102050	Symbol	* pos		101612						
ANR	102051	Symbol	* t		101612						
ANR	102052	Function	increment_function	2005:0:50752:52090							
ANR	102053	FunctionDef	increment_function (zval * op1)		102052	0					
ANR	102054	CompoundStatement		2006:0:50805:52090	102052	0					
ANR	102055	SwitchStatement	switch ( Z_TYPE_P ( op1 ) )		102052	0					
ANR	102056	Condition	Z_TYPE_P ( op1 )	2007:9:50816:50828	102052	0	True				
ANR	102057	CallExpression	Z_TYPE_P ( op1 )		102052	0					
ANR	102058	Callee	Z_TYPE_P		102052	0					
ANR	102059	Identifier	Z_TYPE_P		102052	0					
ANR	102060	ArgumentList	op1		102052	1					
ANR	102061	Argument	op1		102052	0					
ANR	102062	Identifier	op1		102052	0					
ANR	102063	CompoundStatement		2:24:25:25	102052	1					
ANR	102064	Label	case IS_LONG :	2008:2:50835:50847	102052	0	True				
ANR	102065	Identifier	IS_LONG		102052	0					
ANR	102066	IfStatement	if ( Z_LVAL_P ( op1 ) == LONG_MAX )		102052	1					
ANR	102067	Condition	Z_LVAL_P ( op1 ) == LONG_MAX	2009:7:50856:50880	102052	0	True				
ANR	102068	EqualityExpression	Z_LVAL_P ( op1 ) == LONG_MAX		102052	0		==			
ANR	102069	CallExpression	Z_LVAL_P ( op1 )		102052	0					
ANR	102070	Callee	Z_LVAL_P		102052	0					
ANR	102071	Identifier	Z_LVAL_P		102052	0					
ANR	102072	ArgumentList	op1		102052	1					
ANR	102073	Argument	op1		102052	0					
ANR	102074	Identifier	op1		102052	0					
ANR	102075	Identifier	LONG_MAX		102052	1					
ANR	102076	CompoundStatement		6:4:110:142	102052	1					
ANR	102077	IdentifierDeclStatement	double d = ( double ) Z_LVAL_P ( op1 ) ;	2011:4:50916:50948	102052	0	True				
ANR	102078	IdentifierDecl	d = ( double ) Z_LVAL_P ( op1 )		102052	0					
ANR	102079	IdentifierDeclType	double		102052	0					
ANR	102080	Identifier	d		102052	1					
ANR	102081	AssignmentExpression	d = ( double ) Z_LVAL_P ( op1 )		102052	2		=			
ANR	102082	Identifier	d		102052	0					
ANR	102083	CastExpression	( double ) Z_LVAL_P ( op1 )		102052	1					
ANR	102084	CastTarget	double		102052	0					
ANR	102085	CallExpression	Z_LVAL_P ( op1 )		102052	1					
ANR	102086	Callee	Z_LVAL_P		102052	0					
ANR	102087	Identifier	Z_LVAL_P		102052	0					
ANR	102088	ArgumentList	op1		102052	1					
ANR	102089	Argument	op1		102052	0					
ANR	102090	Identifier	op1		102052	0					
ANR	102091	ExpressionStatement	"ZVAL_DOUBLE ( op1 , d + 1 )"	2012:4:50954:50975	102052	1	True				
ANR	102092	CallExpression	"ZVAL_DOUBLE ( op1 , d + 1 )"		102052	0					
ANR	102093	Callee	ZVAL_DOUBLE		102052	0					
ANR	102094	Identifier	ZVAL_DOUBLE		102052	0					
ANR	102095	ArgumentList	op1		102052	1					
ANR	102096	Argument	op1		102052	0					
ANR	102097	Identifier	op1		102052	0					
ANR	102098	Argument	d + 1		102052	1					
ANR	102099	AdditiveExpression	d + 1		102052	0		+			
ANR	102100	Identifier	d		102052	0					
ANR	102101	PrimaryExpression	1		102052	1					
ANR	102102	ElseStatement	else		102052	0					
ANR	102103	CompoundStatement		8:10:181:181	102052	0					
ANR	102104	ExpressionStatement	Z_LVAL_P ( op1 ) ++	2014:3:50992:51007	102052	0	True				
ANR	102105	PostIncDecOperationExpression	Z_LVAL_P ( op1 ) ++		102052	0					
ANR	102106	CallExpression	Z_LVAL_P ( op1 )		102052	0					
ANR	102107	Callee	Z_LVAL_P		102052	0					
ANR	102108	Identifier	Z_LVAL_P		102052	0					
ANR	102109	ArgumentList	op1		102052	1					
ANR	102110	Argument	op1		102052	0					
ANR	102111	Identifier	op1		102052	0					
ANR	102112	IncDec	++		102052	1					
ANR	102113	BreakStatement	break ;	2016:3:51017:51022	102052	2	True				
ANR	102114	Label	case IS_DOUBLE :	2017:2:51026:51040	102052	3	True				
ANR	102115	Identifier	IS_DOUBLE		102052	0					
ANR	102116	ExpressionStatement	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) + 1	2018:3:51045:51078	102052	4	True				
ANR	102117	AssignmentExpression	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) + 1		102052	0		=			
ANR	102118	CallExpression	Z_DVAL_P ( op1 )		102052	0					
ANR	102119	Callee	Z_DVAL_P		102052	0					
ANR	102120	Identifier	Z_DVAL_P		102052	0					
ANR	102121	ArgumentList	op1		102052	1					
ANR	102122	Argument	op1		102052	0					
ANR	102123	Identifier	op1		102052	0					
ANR	102124	AdditiveExpression	Z_DVAL_P ( op1 ) + 1		102052	1		+			
ANR	102125	CallExpression	Z_DVAL_P ( op1 )		102052	0					
ANR	102126	Callee	Z_DVAL_P		102052	0					
ANR	102127	Identifier	Z_DVAL_P		102052	0					
ANR	102128	ArgumentList	op1		102052	1					
ANR	102129	Argument	op1		102052	0					
ANR	102130	Identifier	op1		102052	0					
ANR	102131	PrimaryExpression	1		102052	1					
ANR	102132	BreakStatement	break ;	2019:3:51083:51088	102052	5	True				
ANR	102133	Label	case IS_NULL :	2020:2:51092:51104	102052	6	True				
ANR	102134	Identifier	IS_NULL		102052	0					
ANR	102135	ExpressionStatement	"ZVAL_LONG ( op1 , 1 )"	2021:3:51109:51126	102052	7	True				
ANR	102136	CallExpression	"ZVAL_LONG ( op1 , 1 )"		102052	0					
ANR	102137	Callee	ZVAL_LONG		102052	0					
ANR	102138	Identifier	ZVAL_LONG		102052	0					
ANR	102139	ArgumentList	op1		102052	1					
ANR	102140	Argument	op1		102052	0					
ANR	102141	Identifier	op1		102052	0					
ANR	102142	Argument	1		102052	1					
ANR	102143	PrimaryExpression	1		102052	0					
ANR	102144	BreakStatement	break ;	2022:3:51131:51136	102052	8	True				
ANR	102145	Label	case IS_STRING :	2023:2:51140:51154	102052	9	True				
ANR	102146	Identifier	IS_STRING		102052	0					
ANR	102147	CompoundStatement		20:4:371:382	102052	10					
ANR	102148	IdentifierDeclStatement	long lval ;	2024:4:51162:51171	102052	0	True				
ANR	102149	IdentifierDecl	lval		102052	0					
ANR	102150	IdentifierDeclType	long		102052	0					
ANR	102151	Identifier	lval		102052	1					
ANR	102152	IdentifierDeclStatement	double dval ;	2025:4:51177:51188	102052	1	True				
ANR	102153	IdentifierDecl	dval		102052	0					
ANR	102154	IdentifierDeclType	double		102052	0					
ANR	102155	Identifier	dval		102052	1					
ANR	102156	SwitchStatement	"switch ( is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 ) )"		102052	2					
ANR	102157	Condition	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"	2027:12:51203:51270	102052	0	True				
ANR	102158	CallExpression	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"		102052	0					
ANR	102159	Callee	is_numeric_string		102052	0					
ANR	102160	Identifier	is_numeric_string		102052	0					
ANR	102161	ArgumentList	Z_STRVAL_P ( op1 )		102052	1					
ANR	102162	Argument	Z_STRVAL_P ( op1 )		102052	0					
ANR	102163	CallExpression	Z_STRVAL_P ( op1 )		102052	0					
ANR	102164	Callee	Z_STRVAL_P		102052	0					
ANR	102165	Identifier	Z_STRVAL_P		102052	0					
ANR	102166	ArgumentList	op1		102052	1					
ANR	102167	Argument	op1		102052	0					
ANR	102168	Identifier	op1		102052	0					
ANR	102169	Argument	Z_STRLEN_P ( op1 )		102052	1					
ANR	102170	CallExpression	Z_STRLEN_P ( op1 )		102052	0					
ANR	102171	Callee	Z_STRLEN_P		102052	0					
ANR	102172	Identifier	Z_STRLEN_P		102052	0					
ANR	102173	ArgumentList	op1		102052	1					
ANR	102174	Argument	op1		102052	0					
ANR	102175	Identifier	op1		102052	0					
ANR	102176	Argument	& lval		102052	2					
ANR	102177	UnaryOperationExpression	& lval		102052	0					
ANR	102178	UnaryOperator	&		102052	0					
ANR	102179	Identifier	lval		102052	1					
ANR	102180	Argument	& dval		102052	3					
ANR	102181	UnaryOperationExpression	& dval		102052	0					
ANR	102182	UnaryOperator	&		102052	0					
ANR	102183	Identifier	dval		102052	1					
ANR	102184	Argument	0		102052	4					
ANR	102185	PrimaryExpression	0		102052	0					
ANR	102186	CompoundStatement		22:82:467:467	102052	1					
ANR	102187	Label	case IS_LONG :	2028:5:51280:51292	102052	0	True				
ANR	102188	Identifier	IS_LONG		102052	0					
ANR	102189	ExpressionStatement	str_efree ( Z_STRVAL_P ( op1 ) )	2029:6:51300:51326	102052	1	True				
ANR	102190	CallExpression	str_efree ( Z_STRVAL_P ( op1 ) )		102052	0					
ANR	102191	Callee	str_efree		102052	0					
ANR	102192	Identifier	str_efree		102052	0					
ANR	102193	ArgumentList	Z_STRVAL_P ( op1 )		102052	1					
ANR	102194	Argument	Z_STRVAL_P ( op1 )		102052	0					
ANR	102195	CallExpression	Z_STRVAL_P ( op1 )		102052	0					
ANR	102196	Callee	Z_STRVAL_P		102052	0					
ANR	102197	Identifier	Z_STRVAL_P		102052	0					
ANR	102198	ArgumentList	op1		102052	1					
ANR	102199	Argument	op1		102052	0					
ANR	102200	Identifier	op1		102052	0					
ANR	102201	IfStatement	if ( lval == LONG_MAX )		102052	2					
ANR	102202	Condition	lval == LONG_MAX	2030:10:51338:51353	102052	0	True				
ANR	102203	EqualityExpression	lval == LONG_MAX		102052	0		==			
ANR	102204	Identifier	lval		102052	0					
ANR	102205	Identifier	LONG_MAX		102052	1					
ANR	102206	CompoundStatement		27:7:589:612	102052	1					
ANR	102207	IdentifierDeclStatement	double d = ( double ) lval ;	2032:7:51395:51418	102052	0	True				
ANR	102208	IdentifierDecl	d = ( double ) lval		102052	0					
ANR	102209	IdentifierDeclType	double		102052	0					
ANR	102210	Identifier	d		102052	1					
ANR	102211	AssignmentExpression	d = ( double ) lval		102052	2		=			
ANR	102212	Identifier	d		102052	0					
ANR	102213	CastExpression	( double ) lval		102052	1					
ANR	102214	CastTarget	double		102052	0					
ANR	102215	Identifier	lval		102052	1					
ANR	102216	ExpressionStatement	"ZVAL_DOUBLE ( op1 , d + 1 )"	2033:7:51427:51448	102052	1	True				
ANR	102217	CallExpression	"ZVAL_DOUBLE ( op1 , d + 1 )"		102052	0					
ANR	102218	Callee	ZVAL_DOUBLE		102052	0					
ANR	102219	Identifier	ZVAL_DOUBLE		102052	0					
ANR	102220	ArgumentList	op1		102052	1					
ANR	102221	Argument	op1		102052	0					
ANR	102222	Identifier	op1		102052	0					
ANR	102223	Argument	d + 1		102052	1					
ANR	102224	AdditiveExpression	d + 1		102052	0		+			
ANR	102225	Identifier	d		102052	0					
ANR	102226	PrimaryExpression	1		102052	1					
ANR	102227	ElseStatement	else		102052	0					
ANR	102228	CompoundStatement		29:13:657:657	102052	0					
ANR	102229	ExpressionStatement	"ZVAL_LONG ( op1 , lval + 1 )"	2035:7:51472:51494	102052	0	True				
ANR	102230	CallExpression	"ZVAL_LONG ( op1 , lval + 1 )"		102052	0					
ANR	102231	Callee	ZVAL_LONG		102052	0					
ANR	102232	Identifier	ZVAL_LONG		102052	0					
ANR	102233	ArgumentList	op1		102052	1					
ANR	102234	Argument	op1		102052	0					
ANR	102235	Identifier	op1		102052	0					
ANR	102236	Argument	lval + 1		102052	1					
ANR	102237	AdditiveExpression	lval + 1		102052	0		+			
ANR	102238	Identifier	lval		102052	0					
ANR	102239	PrimaryExpression	1		102052	1					
ANR	102240	BreakStatement	break ;	2037:6:51510:51515	102052	3	True				
ANR	102241	Label	case IS_DOUBLE :	2038:5:51522:51536	102052	4	True				
ANR	102242	Identifier	IS_DOUBLE		102052	0					
ANR	102243	ExpressionStatement	str_efree ( Z_STRVAL_P ( op1 ) )	2039:6:51544:51570	102052	5	True				
ANR	102244	CallExpression	str_efree ( Z_STRVAL_P ( op1 ) )		102052	0					
ANR	102245	Callee	str_efree		102052	0					
ANR	102246	Identifier	str_efree		102052	0					
ANR	102247	ArgumentList	Z_STRVAL_P ( op1 )		102052	1					
ANR	102248	Argument	Z_STRVAL_P ( op1 )		102052	0					
ANR	102249	CallExpression	Z_STRVAL_P ( op1 )		102052	0					
ANR	102250	Callee	Z_STRVAL_P		102052	0					
ANR	102251	Identifier	Z_STRVAL_P		102052	0					
ANR	102252	ArgumentList	op1		102052	1					
ANR	102253	Argument	op1		102052	0					
ANR	102254	Identifier	op1		102052	0					
ANR	102255	ExpressionStatement	"ZVAL_DOUBLE ( op1 , dval + 1 )"	2040:6:51578:51602	102052	6	True				
ANR	102256	CallExpression	"ZVAL_DOUBLE ( op1 , dval + 1 )"		102052	0					
ANR	102257	Callee	ZVAL_DOUBLE		102052	0					
ANR	102258	Identifier	ZVAL_DOUBLE		102052	0					
ANR	102259	ArgumentList	op1		102052	1					
ANR	102260	Argument	op1		102052	0					
ANR	102261	Identifier	op1		102052	0					
ANR	102262	Argument	dval + 1		102052	1					
ANR	102263	AdditiveExpression	dval + 1		102052	0		+			
ANR	102264	Identifier	dval		102052	0					
ANR	102265	PrimaryExpression	1		102052	1					
ANR	102266	BreakStatement	break ;	2041:6:51610:51615	102052	7	True				
ANR	102267	Label	default :	2042:5:51622:51629	102052	8	True				
ANR	102268	Identifier	default		102052	0					
ANR	102269	ExpressionStatement	increment_string ( op1 )	2044:6:51677:51698	102052	9	True				
ANR	102270	CallExpression	increment_string ( op1 )		102052	0					
ANR	102271	Callee	increment_string		102052	0					
ANR	102272	Identifier	increment_string		102052	0					
ANR	102273	ArgumentList	op1		102052	1					
ANR	102274	Argument	op1		102052	0					
ANR	102275	Identifier	op1		102052	0					
ANR	102276	BreakStatement	break ;	2045:6:51706:51711	102052	10	True				
ANR	102277	BreakStatement	break ;	2048:3:51727:51732	102052	11	True				
ANR	102278	Label	case IS_OBJECT :	2049:2:51736:51750	102052	12	True				
ANR	102279	Identifier	IS_OBJECT		102052	0					
ANR	102280	IfStatement	"if ( Z_OBJ_HANDLER_P ( op1 , do_operation ) )"		102052	13					
ANR	102281	Condition	"Z_OBJ_HANDLER_P ( op1 , do_operation )"	2050:7:51759:51792	102052	0	True				
ANR	102282	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		102052	0					
ANR	102283	Callee	Z_OBJ_HANDLER_P		102052	0					
ANR	102284	Identifier	Z_OBJ_HANDLER_P		102052	0					
ANR	102285	ArgumentList	op1		102052	1					
ANR	102286	Argument	op1		102052	0					
ANR	102287	Identifier	op1		102052	0					
ANR	102288	Argument	do_operation		102052	1					
ANR	102289	Identifier	do_operation		102052	0					
ANR	102290	CompoundStatement		47:4:1010:1017	102052	1					
ANR	102291	IdentifierDeclStatement	zval * op2 ;	2051:4:51801:51810	102052	0	True				
ANR	102292	IdentifierDecl	* op2		102052	0					
ANR	102293	IdentifierDeclType	zval *		102052	0					
ANR	102294	Identifier	op2		102052	1					
ANR	102295	IdentifierDeclStatement	int res ;	2052:4:51816:51823	102052	1	True				
ANR	102296	IdentifierDecl	res		102052	0					
ANR	102297	IdentifierDeclType	int		102052	0					
ANR	102298	Identifier	res		102052	1					
ANR	102299	ExpressionStatement	TSRMLS_FETCH ( )	2053:4:51829:51843	102052	2	True				
ANR	102300	CallExpression	TSRMLS_FETCH ( )		102052	0					
ANR	102301	Callee	TSRMLS_FETCH		102052	0					
ANR	102302	Identifier	TSRMLS_FETCH		102052	0					
ANR	102303	ArgumentList			102052	1					
ANR	102304	ExpressionStatement	MAKE_STD_ZVAL ( op2 )	2055:4:51850:51868	102052	3	True				
ANR	102305	CallExpression	MAKE_STD_ZVAL ( op2 )		102052	0					
ANR	102306	Callee	MAKE_STD_ZVAL		102052	0					
ANR	102307	Identifier	MAKE_STD_ZVAL		102052	0					
ANR	102308	ArgumentList	op2		102052	1					
ANR	102309	Argument	op2		102052	0					
ANR	102310	Identifier	op2		102052	0					
ANR	102311	ExpressionStatement	"ZVAL_LONG ( op2 , 1 )"	2056:4:51874:51891	102052	4	True				
ANR	102312	CallExpression	"ZVAL_LONG ( op2 , 1 )"		102052	0					
ANR	102313	Callee	ZVAL_LONG		102052	0					
ANR	102314	Identifier	ZVAL_LONG		102052	0					
ANR	102315	ArgumentList	op2		102052	1					
ANR	102316	Argument	op2		102052	0					
ANR	102317	Identifier	op2		102052	0					
ANR	102318	Argument	1		102052	1					
ANR	102319	PrimaryExpression	1		102052	0					
ANR	102320	Statement	res	2057:4:51897:51899	102052	5	True				
ANR	102321	Statement	=	2057:8:51901:51901	102052	6	True				
ANR	102322	Statement	Z_OBJ_HANDLER_P	2057:10:51903:51917	102052	7	True				
ANR	102323	Statement	(	2057:25:51918:51918	102052	8	True				
ANR	102324	Statement	op1	2057:26:51919:51921	102052	9	True				
ANR	102325	Statement	","	2057:29:51922:51922	102052	10	True				
ANR	102326	Statement	do_operation	2057:31:51924:51935	102052	11	True				
ANR	102327	Statement	)	2057:43:51936:51936	102052	12	True				
ANR	102328	Statement	(	2057:44:51937:51937	102052	13	True				
ANR	102329	Statement	ZEND_ADD	2057:45:51938:51945	102052	14	True				
ANR	102330	Statement	","	2057:53:51946:51946	102052	15	True				
ANR	102331	Statement	op1	2057:55:51948:51950	102052	16	True				
ANR	102332	Statement	","	2057:58:51951:51951	102052	17	True				
ANR	102333	Statement	op1	2057:60:51953:51955	102052	18	True				
ANR	102334	Statement	","	2057:63:51956:51956	102052	19	True				
ANR	102335	Statement	op2	2057:65:51958:51960	102052	20	True				
ANR	102336	Statement	TSRMLS_CC	2057:69:51962:51970	102052	21	True				
ANR	102337	Statement	)	2057:78:51971:51971	102052	22	True				
ANR	102338	ExpressionStatement		2057:79:51972:51972	102052	23	True				
ANR	102339	ExpressionStatement	zval_ptr_dtor ( & op2 )	2058:4:51978:51997	102052	24	True				
ANR	102340	CallExpression	zval_ptr_dtor ( & op2 )		102052	0					
ANR	102341	Callee	zval_ptr_dtor		102052	0					
ANR	102342	Identifier	zval_ptr_dtor		102052	0					
ANR	102343	ArgumentList	& op2		102052	1					
ANR	102344	Argument	& op2		102052	0					
ANR	102345	UnaryOperationExpression	& op2		102052	0					
ANR	102346	UnaryOperator	&		102052	0					
ANR	102347	Identifier	op2		102052	1					
ANR	102348	ReturnStatement	return res ;	2060:4:52004:52014	102052	25	True				
ANR	102349	Identifier	res		102052	0					
ANR	102350	ReturnStatement	return FAILURE ;	2062:3:52024:52038	102052	14	True				
ANR	102351	Identifier	FAILURE		102052	0					
ANR	102352	Label	default :	2063:2:52042:52049	102052	15	True				
ANR	102353	Identifier	default		102052	0					
ANR	102354	ReturnStatement	return FAILURE ;	2064:3:52054:52068	102052	16	True				
ANR	102355	Identifier	FAILURE		102052	0					
ANR	102356	ReturnStatement	return SUCCESS ;	2066:1:52074:52088	102052	1	True				
ANR	102357	Identifier	SUCCESS		102052	0					
ANR	102358	ReturnType	ZEND_API int		102052	1					
ANR	102359	Identifier	increment_function		102052	2					
ANR	102360	ParameterList	zval * op1		102052	3					
ANR	102361	Parameter	zval * op1	2005:32:50784:50792	102052	0	True				
ANR	102362	ParameterType	zval *		102052	0					
ANR	102363	Identifier	op1		102052	1					
ANR	102364	CFGEntryNode	ENTRY		102052		True				
ANR	102365	CFGExitNode	EXIT		102052		True				
ANR	102366	Symbol	res		102052						
ANR	102367	Symbol	& lval		102052						
ANR	102368	Symbol	SUCCESS		102052						
ANR	102369	Symbol	d		102052						
ANR	102370	Symbol	lval		102052						
ANR	102371	Symbol	Z_TYPE_P		102052						
ANR	102372	Symbol	Z_STRVAL_P		102052						
ANR	102373	Symbol	FAILURE		102052						
ANR	102374	Symbol	Z_DVAL_P		102052						
ANR	102375	Symbol	Z_LVAL_P		102052						
ANR	102376	Symbol	op2		102052						
ANR	102377	Symbol	& op2		102052						
ANR	102378	Symbol	op1		102052						
ANR	102379	Symbol	dval		102052						
ANR	102380	Symbol	is_numeric_string		102052						
ANR	102381	Symbol	LONG_MAX		102052						
ANR	102382	Symbol	Z_STRLEN_P		102052						
ANR	102383	Symbol	Z_OBJ_HANDLER_P		102052						
ANR	102384	Symbol	do_operation		102052						
ANR	102385	Symbol	& dval		102052						
ANR	102386	Function	decrement_function	2070:0:52103:53388							
ANR	102387	FunctionDef	decrement_function (zval * op1)		102386	0					
ANR	102388	CompoundStatement		2071:0:52156:53388	102386	0					
ANR	102389	IdentifierDeclStatement	long lval ;	2072:1:52159:52168	102386	0	True				
ANR	102390	IdentifierDecl	lval		102386	0					
ANR	102391	IdentifierDeclType	long		102386	0					
ANR	102392	Identifier	lval		102386	1					
ANR	102393	IdentifierDeclStatement	double dval ;	2073:1:52171:52182	102386	1	True				
ANR	102394	IdentifierDecl	dval		102386	0					
ANR	102395	IdentifierDeclType	double		102386	0					
ANR	102396	Identifier	dval		102386	1					
ANR	102397	SwitchStatement	switch ( Z_TYPE_P ( op1 ) )		102386	2					
ANR	102398	Condition	Z_TYPE_P ( op1 )	2075:9:52194:52206	102386	0	True				
ANR	102399	CallExpression	Z_TYPE_P ( op1 )		102386	0					
ANR	102400	Callee	Z_TYPE_P		102386	0					
ANR	102401	Identifier	Z_TYPE_P		102386	0					
ANR	102402	ArgumentList	op1		102386	1					
ANR	102403	Argument	op1		102386	0					
ANR	102404	Identifier	op1		102386	0					
ANR	102405	CompoundStatement		5:24:52:52	102386	1					
ANR	102406	Label	case IS_LONG :	2076:2:52213:52225	102386	0	True				
ANR	102407	Identifier	IS_LONG		102386	0					
ANR	102408	IfStatement	if ( Z_LVAL_P ( op1 ) == LONG_MIN )		102386	1					
ANR	102409	Condition	Z_LVAL_P ( op1 ) == LONG_MIN	2077:7:52234:52258	102386	0	True				
ANR	102410	EqualityExpression	Z_LVAL_P ( op1 ) == LONG_MIN		102386	0		==			
ANR	102411	CallExpression	Z_LVAL_P ( op1 )		102386	0					
ANR	102412	Callee	Z_LVAL_P		102386	0					
ANR	102413	Identifier	Z_LVAL_P		102386	0					
ANR	102414	ArgumentList	op1		102386	1					
ANR	102415	Argument	op1		102386	0					
ANR	102416	Identifier	op1		102386	0					
ANR	102417	Identifier	LONG_MIN		102386	1					
ANR	102418	CompoundStatement		8:4:110:142	102386	1					
ANR	102419	IdentifierDeclStatement	double d = ( double ) Z_LVAL_P ( op1 ) ;	2078:4:52267:52299	102386	0	True				
ANR	102420	IdentifierDecl	d = ( double ) Z_LVAL_P ( op1 )		102386	0					
ANR	102421	IdentifierDeclType	double		102386	0					
ANR	102422	Identifier	d		102386	1					
ANR	102423	AssignmentExpression	d = ( double ) Z_LVAL_P ( op1 )		102386	2		=			
ANR	102424	Identifier	d		102386	0					
ANR	102425	CastExpression	( double ) Z_LVAL_P ( op1 )		102386	1					
ANR	102426	CastTarget	double		102386	0					
ANR	102427	CallExpression	Z_LVAL_P ( op1 )		102386	1					
ANR	102428	Callee	Z_LVAL_P		102386	0					
ANR	102429	Identifier	Z_LVAL_P		102386	0					
ANR	102430	ArgumentList	op1		102386	1					
ANR	102431	Argument	op1		102386	0					
ANR	102432	Identifier	op1		102386	0					
ANR	102433	ExpressionStatement	"ZVAL_DOUBLE ( op1 , d - 1 )"	2079:4:52305:52326	102386	1	True				
ANR	102434	CallExpression	"ZVAL_DOUBLE ( op1 , d - 1 )"		102386	0					
ANR	102435	Callee	ZVAL_DOUBLE		102386	0					
ANR	102436	Identifier	ZVAL_DOUBLE		102386	0					
ANR	102437	ArgumentList	op1		102386	1					
ANR	102438	Argument	op1		102386	0					
ANR	102439	Identifier	op1		102386	0					
ANR	102440	Argument	d - 1		102386	1					
ANR	102441	AdditiveExpression	d - 1		102386	0		-			
ANR	102442	Identifier	d		102386	0					
ANR	102443	PrimaryExpression	1		102386	1					
ANR	102444	ElseStatement	else		102386	0					
ANR	102445	CompoundStatement		10:10:181:181	102386	0					
ANR	102446	ExpressionStatement	Z_LVAL_P ( op1 ) --	2081:3:52343:52358	102386	0	True				
ANR	102447	PostIncDecOperationExpression	Z_LVAL_P ( op1 ) --		102386	0					
ANR	102448	CallExpression	Z_LVAL_P ( op1 )		102386	0					
ANR	102449	Callee	Z_LVAL_P		102386	0					
ANR	102450	Identifier	Z_LVAL_P		102386	0					
ANR	102451	ArgumentList	op1		102386	1					
ANR	102452	Argument	op1		102386	0					
ANR	102453	Identifier	op1		102386	0					
ANR	102454	IncDec	--		102386	1					
ANR	102455	BreakStatement	break ;	2083:3:52368:52373	102386	2	True				
ANR	102456	Label	case IS_DOUBLE :	2084:2:52377:52391	102386	3	True				
ANR	102457	Identifier	IS_DOUBLE		102386	0					
ANR	102458	ExpressionStatement	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) - 1	2085:3:52396:52429	102386	4	True				
ANR	102459	AssignmentExpression	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) - 1		102386	0		=			
ANR	102460	CallExpression	Z_DVAL_P ( op1 )		102386	0					
ANR	102461	Callee	Z_DVAL_P		102386	0					
ANR	102462	Identifier	Z_DVAL_P		102386	0					
ANR	102463	ArgumentList	op1		102386	1					
ANR	102464	Argument	op1		102386	0					
ANR	102465	Identifier	op1		102386	0					
ANR	102466	AdditiveExpression	Z_DVAL_P ( op1 ) - 1		102386	1		-			
ANR	102467	CallExpression	Z_DVAL_P ( op1 )		102386	0					
ANR	102468	Callee	Z_DVAL_P		102386	0					
ANR	102469	Identifier	Z_DVAL_P		102386	0					
ANR	102470	ArgumentList	op1		102386	1					
ANR	102471	Argument	op1		102386	0					
ANR	102472	Identifier	op1		102386	0					
ANR	102473	PrimaryExpression	1		102386	1					
ANR	102474	BreakStatement	break ;	2086:3:52434:52439	102386	5	True				
ANR	102475	Label	case IS_STRING :	2087:2:52443:52457	102386	6	True				
ANR	102476	Identifier	IS_STRING		102386	0					
ANR	102477	IfStatement	if ( Z_STRLEN_P ( op1 ) == 0 )		102386	7					
ANR	102478	Condition	Z_STRLEN_P ( op1 ) == 0	2088:7:52516:52535	102386	0	True				
ANR	102479	EqualityExpression	Z_STRLEN_P ( op1 ) == 0		102386	0		==			
ANR	102480	CallExpression	Z_STRLEN_P ( op1 )		102386	0					
ANR	102481	Callee	Z_STRLEN_P		102386	0					
ANR	102482	Identifier	Z_STRLEN_P		102386	0					
ANR	102483	ArgumentList	op1		102386	1					
ANR	102484	Argument	op1		102386	0					
ANR	102485	Identifier	op1		102386	0					
ANR	102486	PrimaryExpression	0		102386	1					
ANR	102487	CompoundStatement		18:29:381:381	102386	1					
ANR	102488	ExpressionStatement	str_efree ( Z_STRVAL_P ( op1 ) )	2089:4:52564:52590	102386	0	True				
ANR	102489	CallExpression	str_efree ( Z_STRVAL_P ( op1 ) )		102386	0					
ANR	102490	Callee	str_efree		102386	0					
ANR	102491	Identifier	str_efree		102386	0					
ANR	102492	ArgumentList	Z_STRVAL_P ( op1 )		102386	1					
ANR	102493	Argument	Z_STRVAL_P ( op1 )		102386	0					
ANR	102494	CallExpression	Z_STRVAL_P ( op1 )		102386	0					
ANR	102495	Callee	Z_STRVAL_P		102386	0					
ANR	102496	Identifier	Z_STRVAL_P		102386	0					
ANR	102497	ArgumentList	op1		102386	1					
ANR	102498	Argument	op1		102386	0					
ANR	102499	Identifier	op1		102386	0					
ANR	102500	ExpressionStatement	"ZVAL_LONG ( op1 , - 1 )"	2090:4:52596:52614	102386	1	True				
ANR	102501	CallExpression	"ZVAL_LONG ( op1 , - 1 )"		102386	0					
ANR	102502	Callee	ZVAL_LONG		102386	0					
ANR	102503	Identifier	ZVAL_LONG		102386	0					
ANR	102504	ArgumentList	op1		102386	1					
ANR	102505	Argument	op1		102386	0					
ANR	102506	Identifier	op1		102386	0					
ANR	102507	Argument	- 1		102386	1					
ANR	102508	UnaryOperationExpression	- 1		102386	0					
ANR	102509	UnaryOperator	-		102386	0					
ANR	102510	PrimaryExpression	1		102386	1					
ANR	102511	BreakStatement	break ;	2091:4:52620:52625	102386	2	True				
ANR	102512	SwitchStatement	"switch ( is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 ) )"		102386	8					
ANR	102513	Condition	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"	2093:11:52643:52710	102386	0	True				
ANR	102514	CallExpression	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"		102386	0					
ANR	102515	Callee	is_numeric_string		102386	0					
ANR	102516	Identifier	is_numeric_string		102386	0					
ANR	102517	ArgumentList	Z_STRVAL_P ( op1 )		102386	1					
ANR	102518	Argument	Z_STRVAL_P ( op1 )		102386	0					
ANR	102519	CallExpression	Z_STRVAL_P ( op1 )		102386	0					
ANR	102520	Callee	Z_STRVAL_P		102386	0					
ANR	102521	Identifier	Z_STRVAL_P		102386	0					
ANR	102522	ArgumentList	op1		102386	1					
ANR	102523	Argument	op1		102386	0					
ANR	102524	Identifier	op1		102386	0					
ANR	102525	Argument	Z_STRLEN_P ( op1 )		102386	1					
ANR	102526	CallExpression	Z_STRLEN_P ( op1 )		102386	0					
ANR	102527	Callee	Z_STRLEN_P		102386	0					
ANR	102528	Identifier	Z_STRLEN_P		102386	0					
ANR	102529	ArgumentList	op1		102386	1					
ANR	102530	Argument	op1		102386	0					
ANR	102531	Identifier	op1		102386	0					
ANR	102532	Argument	& lval		102386	2					
ANR	102533	UnaryOperationExpression	& lval		102386	0					
ANR	102534	UnaryOperator	&		102386	0					
ANR	102535	Identifier	lval		102386	1					
ANR	102536	Argument	& dval		102386	3					
ANR	102537	UnaryOperationExpression	& dval		102386	0					
ANR	102538	UnaryOperator	&		102386	0					
ANR	102539	Identifier	dval		102386	1					
ANR	102540	Argument	0		102386	4					
ANR	102541	PrimaryExpression	0		102386	0					
ANR	102542	CompoundStatement		23:81:556:556	102386	1					
ANR	102543	Label	case IS_LONG :	2094:4:52719:52731	102386	0	True				
ANR	102544	Identifier	IS_LONG		102386	0					
ANR	102545	ExpressionStatement	str_efree ( Z_STRVAL_P ( op1 ) )	2095:5:52738:52764	102386	1	True				
ANR	102546	CallExpression	str_efree ( Z_STRVAL_P ( op1 ) )		102386	0					
ANR	102547	Callee	str_efree		102386	0					
ANR	102548	Identifier	str_efree		102386	0					
ANR	102549	ArgumentList	Z_STRVAL_P ( op1 )		102386	1					
ANR	102550	Argument	Z_STRVAL_P ( op1 )		102386	0					
ANR	102551	CallExpression	Z_STRVAL_P ( op1 )		102386	0					
ANR	102552	Callee	Z_STRVAL_P		102386	0					
ANR	102553	Identifier	Z_STRVAL_P		102386	0					
ANR	102554	ArgumentList	op1		102386	1					
ANR	102555	Argument	op1		102386	0					
ANR	102556	Identifier	op1		102386	0					
ANR	102557	IfStatement	if ( lval == LONG_MIN )		102386	2					
ANR	102558	Condition	lval == LONG_MIN	2096:9:52775:52790	102386	0	True				
ANR	102559	EqualityExpression	lval == LONG_MIN		102386	0		==			
ANR	102560	Identifier	lval		102386	0					
ANR	102561	Identifier	LONG_MIN		102386	1					
ANR	102562	CompoundStatement		27:6:644:667	102386	1					
ANR	102563	IdentifierDeclStatement	double d = ( double ) lval ;	2097:6:52801:52824	102386	0	True				
ANR	102564	IdentifierDecl	d = ( double ) lval		102386	0					
ANR	102565	IdentifierDeclType	double		102386	0					
ANR	102566	Identifier	d		102386	1					
ANR	102567	AssignmentExpression	d = ( double ) lval		102386	2		=			
ANR	102568	Identifier	d		102386	0					
ANR	102569	CastExpression	( double ) lval		102386	1					
ANR	102570	CastTarget	double		102386	0					
ANR	102571	Identifier	lval		102386	1					
ANR	102572	ExpressionStatement	"ZVAL_DOUBLE ( op1 , d - 1 )"	2098:6:52832:52853	102386	1	True				
ANR	102573	CallExpression	"ZVAL_DOUBLE ( op1 , d - 1 )"		102386	0					
ANR	102574	Callee	ZVAL_DOUBLE		102386	0					
ANR	102575	Identifier	ZVAL_DOUBLE		102386	0					
ANR	102576	ArgumentList	op1		102386	1					
ANR	102577	Argument	op1		102386	0					
ANR	102578	Identifier	op1		102386	0					
ANR	102579	Argument	d - 1		102386	1					
ANR	102580	AdditiveExpression	d - 1		102386	0		-			
ANR	102581	Identifier	d		102386	0					
ANR	102582	PrimaryExpression	1		102386	1					
ANR	102583	ElseStatement	else		102386	0					
ANR	102584	CompoundStatement		29:12:710:710	102386	0					
ANR	102585	ExpressionStatement	"ZVAL_LONG ( op1 , lval - 1 )"	2100:6:52875:52897	102386	0	True				
ANR	102586	CallExpression	"ZVAL_LONG ( op1 , lval - 1 )"		102386	0					
ANR	102587	Callee	ZVAL_LONG		102386	0					
ANR	102588	Identifier	ZVAL_LONG		102386	0					
ANR	102589	ArgumentList	op1		102386	1					
ANR	102590	Argument	op1		102386	0					
ANR	102591	Identifier	op1		102386	0					
ANR	102592	Argument	lval - 1		102386	1					
ANR	102593	AdditiveExpression	lval - 1		102386	0		-			
ANR	102594	Identifier	lval		102386	0					
ANR	102595	PrimaryExpression	1		102386	1					
ANR	102596	BreakStatement	break ;	2102:5:52911:52916	102386	3	True				
ANR	102597	Label	case IS_DOUBLE :	2103:4:52922:52936	102386	4	True				
ANR	102598	Identifier	IS_DOUBLE		102386	0					
ANR	102599	ExpressionStatement	str_efree ( Z_STRVAL_P ( op1 ) )	2104:5:52943:52969	102386	5	True				
ANR	102600	CallExpression	str_efree ( Z_STRVAL_P ( op1 ) )		102386	0					
ANR	102601	Callee	str_efree		102386	0					
ANR	102602	Identifier	str_efree		102386	0					
ANR	102603	ArgumentList	Z_STRVAL_P ( op1 )		102386	1					
ANR	102604	Argument	Z_STRVAL_P ( op1 )		102386	0					
ANR	102605	CallExpression	Z_STRVAL_P ( op1 )		102386	0					
ANR	102606	Callee	Z_STRVAL_P		102386	0					
ANR	102607	Identifier	Z_STRVAL_P		102386	0					
ANR	102608	ArgumentList	op1		102386	1					
ANR	102609	Argument	op1		102386	0					
ANR	102610	Identifier	op1		102386	0					
ANR	102611	ExpressionStatement	"ZVAL_DOUBLE ( op1 , dval - 1 )"	2105:5:52976:53002	102386	6	True				
ANR	102612	CallExpression	"ZVAL_DOUBLE ( op1 , dval - 1 )"		102386	0					
ANR	102613	Callee	ZVAL_DOUBLE		102386	0					
ANR	102614	Identifier	ZVAL_DOUBLE		102386	0					
ANR	102615	ArgumentList	op1		102386	1					
ANR	102616	Argument	op1		102386	0					
ANR	102617	Identifier	op1		102386	0					
ANR	102618	Argument	dval - 1		102386	1					
ANR	102619	AdditiveExpression	dval - 1		102386	0		-			
ANR	102620	Identifier	dval		102386	0					
ANR	102621	PrimaryExpression	1		102386	1					
ANR	102622	BreakStatement	break ;	2106:5:53009:53014	102386	7	True				
ANR	102623	BreakStatement	break ;	2108:3:53024:53029	102386	9	True				
ANR	102624	Label	case IS_OBJECT :	2109:2:53033:53047	102386	10	True				
ANR	102625	Identifier	IS_OBJECT		102386	0					
ANR	102626	IfStatement	"if ( Z_OBJ_HANDLER_P ( op1 , do_operation ) )"		102386	11					
ANR	102627	Condition	"Z_OBJ_HANDLER_P ( op1 , do_operation )"	2110:7:53056:53089	102386	0	True				
ANR	102628	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		102386	0					
ANR	102629	Callee	Z_OBJ_HANDLER_P		102386	0					
ANR	102630	Identifier	Z_OBJ_HANDLER_P		102386	0					
ANR	102631	ArgumentList	op1		102386	1					
ANR	102632	Argument	op1		102386	0					
ANR	102633	Identifier	op1		102386	0					
ANR	102634	Argument	do_operation		102386	1					
ANR	102635	Identifier	do_operation		102386	0					
ANR	102636	CompoundStatement		42:4:956:963	102386	1					
ANR	102637	IdentifierDeclStatement	zval * op2 ;	2111:4:53098:53107	102386	0	True				
ANR	102638	IdentifierDecl	* op2		102386	0					
ANR	102639	IdentifierDeclType	zval *		102386	0					
ANR	102640	Identifier	op2		102386	1					
ANR	102641	IdentifierDeclStatement	int res ;	2112:4:53113:53120	102386	1	True				
ANR	102642	IdentifierDecl	res		102386	0					
ANR	102643	IdentifierDeclType	int		102386	0					
ANR	102644	Identifier	res		102386	1					
ANR	102645	ExpressionStatement	TSRMLS_FETCH ( )	2113:4:53126:53140	102386	2	True				
ANR	102646	CallExpression	TSRMLS_FETCH ( )		102386	0					
ANR	102647	Callee	TSRMLS_FETCH		102386	0					
ANR	102648	Identifier	TSRMLS_FETCH		102386	0					
ANR	102649	ArgumentList			102386	1					
ANR	102650	ExpressionStatement	MAKE_STD_ZVAL ( op2 )	2115:4:53147:53165	102386	3	True				
ANR	102651	CallExpression	MAKE_STD_ZVAL ( op2 )		102386	0					
ANR	102652	Callee	MAKE_STD_ZVAL		102386	0					
ANR	102653	Identifier	MAKE_STD_ZVAL		102386	0					
ANR	102654	ArgumentList	op2		102386	1					
ANR	102655	Argument	op2		102386	0					
ANR	102656	Identifier	op2		102386	0					
ANR	102657	ExpressionStatement	"ZVAL_LONG ( op2 , 1 )"	2116:4:53171:53188	102386	4	True				
ANR	102658	CallExpression	"ZVAL_LONG ( op2 , 1 )"		102386	0					
ANR	102659	Callee	ZVAL_LONG		102386	0					
ANR	102660	Identifier	ZVAL_LONG		102386	0					
ANR	102661	ArgumentList	op2		102386	1					
ANR	102662	Argument	op2		102386	0					
ANR	102663	Identifier	op2		102386	0					
ANR	102664	Argument	1		102386	1					
ANR	102665	PrimaryExpression	1		102386	0					
ANR	102666	Statement	res	2117:4:53194:53196	102386	5	True				
ANR	102667	Statement	=	2117:8:53198:53198	102386	6	True				
ANR	102668	Statement	Z_OBJ_HANDLER_P	2117:10:53200:53214	102386	7	True				
ANR	102669	Statement	(	2117:25:53215:53215	102386	8	True				
ANR	102670	Statement	op1	2117:26:53216:53218	102386	9	True				
ANR	102671	Statement	","	2117:29:53219:53219	102386	10	True				
ANR	102672	Statement	do_operation	2117:31:53221:53232	102386	11	True				
ANR	102673	Statement	)	2117:43:53233:53233	102386	12	True				
ANR	102674	Statement	(	2117:44:53234:53234	102386	13	True				
ANR	102675	Statement	ZEND_SUB	2117:45:53235:53242	102386	14	True				
ANR	102676	Statement	","	2117:53:53243:53243	102386	15	True				
ANR	102677	Statement	op1	2117:55:53245:53247	102386	16	True				
ANR	102678	Statement	","	2117:58:53248:53248	102386	17	True				
ANR	102679	Statement	op1	2117:60:53250:53252	102386	18	True				
ANR	102680	Statement	","	2117:63:53253:53253	102386	19	True				
ANR	102681	Statement	op2	2117:65:53255:53257	102386	20	True				
ANR	102682	Statement	TSRMLS_CC	2117:69:53259:53267	102386	21	True				
ANR	102683	Statement	)	2117:78:53268:53268	102386	22	True				
ANR	102684	ExpressionStatement		2117:79:53269:53269	102386	23	True				
ANR	102685	ExpressionStatement	zval_ptr_dtor ( & op2 )	2118:4:53275:53294	102386	24	True				
ANR	102686	CallExpression	zval_ptr_dtor ( & op2 )		102386	0					
ANR	102687	Callee	zval_ptr_dtor		102386	0					
ANR	102688	Identifier	zval_ptr_dtor		102386	0					
ANR	102689	ArgumentList	& op2		102386	1					
ANR	102690	Argument	& op2		102386	0					
ANR	102691	UnaryOperationExpression	& op2		102386	0					
ANR	102692	UnaryOperator	&		102386	0					
ANR	102693	Identifier	op2		102386	1					
ANR	102694	ReturnStatement	return res ;	2120:4:53301:53311	102386	25	True				
ANR	102695	Identifier	res		102386	0					
ANR	102696	ReturnStatement	return FAILURE ;	2122:3:53321:53335	102386	12	True				
ANR	102697	Identifier	FAILURE		102386	0					
ANR	102698	Label	default :	2123:2:53339:53346	102386	13	True				
ANR	102699	Identifier	default		102386	0					
ANR	102700	ReturnStatement	return FAILURE ;	2124:3:53351:53365	102386	14	True				
ANR	102701	Identifier	FAILURE		102386	0					
ANR	102702	ReturnStatement	return SUCCESS ;	2127:1:53372:53386	102386	3	True				
ANR	102703	Identifier	SUCCESS		102386	0					
ANR	102704	ReturnType	ZEND_API int		102386	1					
ANR	102705	Identifier	decrement_function		102386	2					
ANR	102706	ParameterList	zval * op1		102386	3					
ANR	102707	Parameter	zval * op1	2070:32:52135:52143	102386	0	True				
ANR	102708	ParameterType	zval *		102386	0					
ANR	102709	Identifier	op1		102386	1					
ANR	102710	CFGEntryNode	ENTRY		102386		True				
ANR	102711	CFGExitNode	EXIT		102386		True				
ANR	102712	Symbol	res		102386						
ANR	102713	Symbol	& lval		102386						
ANR	102714	Symbol	SUCCESS		102386						
ANR	102715	Symbol	d		102386						
ANR	102716	Symbol	lval		102386						
ANR	102717	Symbol	Z_TYPE_P		102386						
ANR	102718	Symbol	Z_STRVAL_P		102386						
ANR	102719	Symbol	FAILURE		102386						
ANR	102720	Symbol	Z_DVAL_P		102386						
ANR	102721	Symbol	Z_LVAL_P		102386						
ANR	102722	Symbol	op2		102386						
ANR	102723	Symbol	& op2		102386						
ANR	102724	Symbol	op1		102386						
ANR	102725	Symbol	dval		102386						
ANR	102726	Symbol	is_numeric_string		102386						
ANR	102727	Symbol	Z_STRLEN_P		102386						
ANR	102728	Symbol	Z_OBJ_HANDLER_P		102386						
ANR	102729	Symbol	do_operation		102386						
ANR	102730	Symbol	LONG_MIN		102386						
ANR	102731	Symbol	& dval		102386						
ANR	102732	Function	zval_is_true	2131:0:53401:53506							
ANR	102733	FunctionDef	zval_is_true (zval * op)		102732	0					
ANR	102734	CompoundStatement		2132:0:53447:53506	102732	0					
ANR	102735	ExpressionStatement	convert_to_boolean ( op )	2133:1:53450:53472	102732	0	True				
ANR	102736	CallExpression	convert_to_boolean ( op )		102732	0					
ANR	102737	Callee	convert_to_boolean		102732	0					
ANR	102738	Identifier	convert_to_boolean		102732	0					
ANR	102739	ArgumentList	op		102732	1					
ANR	102740	Argument	op		102732	0					
ANR	102741	Identifier	op		102732	0					
ANR	102742	ReturnStatement	return ( Z_LVAL_P ( op ) ? 1 : 0 ) ;	2134:1:53475:53504	102732	1	True				
ANR	102743	ConditionalExpression	Z_LVAL_P ( op ) ? 1 : 0		102732	0					
ANR	102744	Condition	Z_LVAL_P ( op )		102732	0					
ANR	102745	CallExpression	Z_LVAL_P ( op )		102732	0					
ANR	102746	Callee	Z_LVAL_P		102732	0					
ANR	102747	Identifier	Z_LVAL_P		102732	0					
ANR	102748	ArgumentList	op		102732	1					
ANR	102749	Argument	op		102732	0					
ANR	102750	Identifier	op		102732	0					
ANR	102751	PrimaryExpression	1		102732	1					
ANR	102752	PrimaryExpression	0		102732	2					
ANR	102753	ReturnType	ZEND_API int		102732	1					
ANR	102754	Identifier	zval_is_true		102732	2					
ANR	102755	ParameterList	zval * op		102732	3					
ANR	102756	Parameter	zval * op	2131:26:53427:53434	102732	0	True				
ANR	102757	ParameterType	zval *		102732	0					
ANR	102758	Identifier	op		102732	1					
ANR	102759	CFGEntryNode	ENTRY		102732		True				
ANR	102760	CFGExitNode	EXIT		102732		True				
ANR	102761	Symbol	op		102732						
ANR	102762	Symbol	Z_LVAL_P		102732						
ANR	102763	Function	zend_update_current_locale	2139:0:53545:53645							
ANR	102764	FunctionDef	zend_update_current_locale ()		102763	0					
ANR	102765	CompoundStatement		2140:0:53602:53645	102763	0					
ANR	102766	ExpressionStatement	current_locale = _get_current_locale ( )	2141:1:53605:53643	102763	0	True				
ANR	102767	AssignmentExpression	current_locale = _get_current_locale ( )		102763	0		=			
ANR	102768	Identifier	current_locale		102763	0					
ANR	102769	CallExpression	_get_current_locale ( )		102763	1					
ANR	102770	Callee	_get_current_locale		102763	0					
ANR	102771	Identifier	_get_current_locale		102763	0					
ANR	102772	ArgumentList			102763	1					
ANR	102773	ReturnType	ZEND_API void		102763	1					
ANR	102774	Identifier	zend_update_current_locale		102763	2					
ANR	102775	ParameterList			102763	3					
ANR	102776	CFGEntryNode	ENTRY		102763		True				
ANR	102777	CFGExitNode	EXIT		102763		True				
ANR	102778	Symbol	_get_current_locale		102763						
ANR	102779	Symbol	current_locale		102763						
ANR	102780	Function	zend_str_tolower_copy	2146:0:53665:54022							
ANR	102781	FunctionDef	"zend_str_tolower_copy (char * dest , const char * source , unsigned int length)"		102780	0					
ANR	102782	CompoundStatement		2147:0:53765:54022	102780	0					
ANR	102783	Statement	register	2148:1:53768:53775	102780	0	True				
ANR	102784	IdentifierDeclStatement	unsigned char * str = ( unsigned char * ) source ;	2148:10:53777:53820	102780	1	True				
ANR	102785	IdentifierDecl	* str = ( unsigned char * ) source		102780	0					
ANR	102786	IdentifierDeclType	unsigned char *		102780	0					
ANR	102787	Identifier	str		102780	1					
ANR	102788	AssignmentExpression	* str = ( unsigned char * ) source		102780	2		=			
ANR	102789	Identifier	str		102780	0					
ANR	102790	CastExpression	( unsigned char * ) source		102780	1					
ANR	102791	CastTarget	unsigned char *		102780	0					
ANR	102792	Identifier	source		102780	1					
ANR	102793	Statement	register	2149:1:53823:53830	102780	2	True				
ANR	102794	IdentifierDeclStatement	unsigned char * result = ( unsigned char * ) dest ;	2149:10:53832:53876	102780	3	True				
ANR	102795	IdentifierDecl	* result = ( unsigned char * ) dest		102780	0					
ANR	102796	IdentifierDeclType	unsigned char *		102780	0					
ANR	102797	Identifier	result		102780	1					
ANR	102798	AssignmentExpression	* result = ( unsigned char * ) dest		102780	2		=			
ANR	102799	Identifier	result		102780	0					
ANR	102800	CastExpression	( unsigned char * ) dest		102780	1					
ANR	102801	CastTarget	unsigned char *		102780	0					
ANR	102802	Identifier	dest		102780	1					
ANR	102803	Statement	register	2150:1:53879:53886	102780	4	True				
ANR	102804	IdentifierDeclStatement	unsigned char * end = str + length ;	2150:10:53888:53921	102780	5	True				
ANR	102805	IdentifierDecl	* end = str + length		102780	0					
ANR	102806	IdentifierDeclType	unsigned char *		102780	0					
ANR	102807	Identifier	end		102780	1					
ANR	102808	AssignmentExpression	* end = str + length		102780	2		=			
ANR	102809	Identifier	end		102780	0					
ANR	102810	AdditiveExpression	str + length		102780	1		+			
ANR	102811	Identifier	str		102780	0					
ANR	102812	Identifier	length		102780	1					
ANR	102813	WhileStatement	while ( str < end )		102780	6					
ANR	102814	Condition	str < end	2152:8:53932:53940	102780	0	True				
ANR	102815	RelationalExpression	str < end		102780	0		<			
ANR	102816	Identifier	str		102780	0					
ANR	102817	Identifier	end		102780	1					
ANR	102818	CompoundStatement		6:19:177:177	102780	1					
ANR	102819	ExpressionStatement	* result ++ = zend_tolower_ascii ( * str ++ )	2153:2:53947:53985	102780	0	True				
ANR	102820	AssignmentExpression	* result ++ = zend_tolower_ascii ( * str ++ )		102780	0		=			
ANR	102821	UnaryOperationExpression	* result ++		102780	0					
ANR	102822	UnaryOperator	*		102780	0					
ANR	102823	PostIncDecOperationExpression	result ++		102780	1					
ANR	102824	Identifier	result		102780	0					
ANR	102825	IncDec	++		102780	1					
ANR	102826	CallExpression	zend_tolower_ascii ( * str ++ )		102780	1					
ANR	102827	Callee	zend_tolower_ascii		102780	0					
ANR	102828	Identifier	zend_tolower_ascii		102780	0					
ANR	102829	ArgumentList	* str ++		102780	1					
ANR	102830	Argument	* str ++		102780	0					
ANR	102831	UnaryOperationExpression	* str ++		102780	0					
ANR	102832	UnaryOperator	*		102780	0					
ANR	102833	PostIncDecOperationExpression	str ++		102780	1					
ANR	102834	Identifier	str		102780	0					
ANR	102835	IncDec	++		102780	1					
ANR	102836	ExpressionStatement	* result = '\\0'	2155:1:53991:54005	102780	7	True				
ANR	102837	AssignmentExpression	* result = '\\0'		102780	0		=			
ANR	102838	UnaryOperationExpression	* result		102780	0					
ANR	102839	UnaryOperator	*		102780	0					
ANR	102840	Identifier	result		102780	1					
ANR	102841	PrimaryExpression	'\\0'		102780	1					
ANR	102842	ReturnStatement	return dest ;	2157:1:54009:54020	102780	8	True				
ANR	102843	Identifier	dest		102780	0					
ANR	102844	ReturnType	ZEND_API char *		102780	1					
ANR	102845	Identifier	zend_str_tolower_copy		102780	2					
ANR	102846	ParameterList	"char * dest , const char * source , unsigned int length"		102780	3					
ANR	102847	Parameter	char * dest	2146:37:53702:53711	102780	0	True				
ANR	102848	ParameterType	char *		102780	0					
ANR	102849	Identifier	dest		102780	1					
ANR	102850	Parameter	const char * source	2146:49:53714:53731	102780	1	True				
ANR	102851	ParameterType	const char *		102780	0					
ANR	102852	Identifier	source		102780	1					
ANR	102853	Parameter	unsigned int length	2146:69:53734:53752	102780	2	True				
ANR	102854	ParameterType	unsigned int		102780	0					
ANR	102855	Identifier	length		102780	1					
ANR	102856	CFGEntryNode	ENTRY		102780		True				
ANR	102857	CFGExitNode	EXIT		102780		True				
ANR	102858	Symbol	str		102780						
ANR	102859	Symbol	result		102780						
ANR	102860	Symbol	* result ++		102780						
ANR	102861	Symbol	zend_tolower_ascii		102780						
ANR	102862	Symbol	* result		102780						
ANR	102863	Symbol	length		102780						
ANR	102864	Symbol	* str ++		102780						
ANR	102865	Symbol	end		102780						
ANR	102866	Symbol	source		102780						
ANR	102867	Symbol	dest		102780						
ANR	102868	Function	zend_str_tolower_dup	2161:0:54035:54198							
ANR	102869	FunctionDef	"zend_str_tolower_dup (const char * source , unsigned int length)"		102868	0					
ANR	102870	CompoundStatement		2162:0:54122:54198	102868	0					
ANR	102871	ReturnStatement	"return zend_str_tolower_copy ( ( char * ) emalloc ( length + 1 ) , source , length ) ;"	2163:1:54125:54196	102868	0	True				
ANR	102872	CallExpression	"zend_str_tolower_copy ( ( char * ) emalloc ( length + 1 ) , source , length )"		102868	0					
ANR	102873	Callee	zend_str_tolower_copy		102868	0					
ANR	102874	Identifier	zend_str_tolower_copy		102868	0					
ANR	102875	ArgumentList	( char * ) emalloc ( length + 1 )		102868	1					
ANR	102876	Argument	( char * ) emalloc ( length + 1 )		102868	0					
ANR	102877	CastExpression	( char * ) emalloc ( length + 1 )		102868	0					
ANR	102878	CastTarget	char *		102868	0					
ANR	102879	CallExpression	emalloc ( length + 1 )		102868	1					
ANR	102880	Callee	emalloc		102868	0					
ANR	102881	Identifier	emalloc		102868	0					
ANR	102882	ArgumentList	length + 1		102868	1					
ANR	102883	Argument	length + 1		102868	0					
ANR	102884	AdditiveExpression	length + 1		102868	0		+			
ANR	102885	Identifier	length		102868	0					
ANR	102886	PrimaryExpression	1		102868	1					
ANR	102887	Argument	source		102868	1					
ANR	102888	Identifier	source		102868	0					
ANR	102889	Argument	length		102868	2					
ANR	102890	Identifier	length		102868	0					
ANR	102891	ReturnType	ZEND_API char *		102868	1					
ANR	102892	Identifier	zend_str_tolower_dup		102868	2					
ANR	102893	ParameterList	"const char * source , unsigned int length"		102868	3					
ANR	102894	Parameter	const char * source	2161:36:54071:54088	102868	0	True				
ANR	102895	ParameterType	const char *		102868	0					
ANR	102896	Identifier	source		102868	1					
ANR	102897	Parameter	unsigned int length	2161:56:54091:54109	102868	1	True				
ANR	102898	ParameterType	unsigned int		102868	0					
ANR	102899	Identifier	length		102868	1					
ANR	102900	CFGEntryNode	ENTRY		102868		True				
ANR	102901	CFGExitNode	EXIT		102868		True				
ANR	102902	Symbol	emalloc		102868						
ANR	102903	Symbol	length		102868						
ANR	102904	Symbol	zend_str_tolower_copy		102868						
ANR	102905	Symbol	source		102868						
ANR	102906	Function	zend_str_tolower	2167:0:54211:54440							
ANR	102907	FunctionDef	"zend_str_tolower (char * str , unsigned int length)"		102906	0					
ANR	102908	CompoundStatement		2168:0:54284:54440	102906	0					
ANR	102909	Statement	register	2169:1:54287:54294	102906	0	True				
ANR	102910	IdentifierDeclStatement	unsigned char * p = ( unsigned char * ) str ;	2169:10:54296:54334	102906	1	True				
ANR	102911	IdentifierDecl	* p = ( unsigned char * ) str		102906	0					
ANR	102912	IdentifierDeclType	unsigned char *		102906	0					
ANR	102913	Identifier	p		102906	1					
ANR	102914	AssignmentExpression	* p = ( unsigned char * ) str		102906	2		=			
ANR	102915	Identifier	p		102906	0					
ANR	102916	CastExpression	( unsigned char * ) str		102906	1					
ANR	102917	CastTarget	unsigned char *		102906	0					
ANR	102918	Identifier	str		102906	1					
ANR	102919	Statement	register	2170:1:54337:54344	102906	2	True				
ANR	102920	IdentifierDeclStatement	unsigned char * end = p + length ;	2170:10:54346:54377	102906	3	True				
ANR	102921	IdentifierDecl	* end = p + length		102906	0					
ANR	102922	IdentifierDeclType	unsigned char *		102906	0					
ANR	102923	Identifier	end		102906	1					
ANR	102924	AssignmentExpression	* end = p + length		102906	2		=			
ANR	102925	Identifier	end		102906	0					
ANR	102926	AdditiveExpression	p + length		102906	1		+			
ANR	102927	Identifier	p		102906	0					
ANR	102928	Identifier	length		102906	1					
ANR	102929	WhileStatement	while ( p < end )		102906	4					
ANR	102930	Condition	p < end	2172:8:54388:54394	102906	0	True				
ANR	102931	RelationalExpression	p < end		102906	0		<			
ANR	102932	Identifier	p		102906	0					
ANR	102933	Identifier	end		102906	1					
ANR	102934	CompoundStatement		5:17:112:112	102906	1					
ANR	102935	ExpressionStatement	* p = zend_tolower_ascii ( * p )	2173:2:54401:54428	102906	0	True				
ANR	102936	AssignmentExpression	* p = zend_tolower_ascii ( * p )		102906	0		=			
ANR	102937	UnaryOperationExpression	* p		102906	0					
ANR	102938	UnaryOperator	*		102906	0					
ANR	102939	Identifier	p		102906	1					
ANR	102940	CallExpression	zend_tolower_ascii ( * p )		102906	1					
ANR	102941	Callee	zend_tolower_ascii		102906	0					
ANR	102942	Identifier	zend_tolower_ascii		102906	0					
ANR	102943	ArgumentList	* p		102906	1					
ANR	102944	Argument	* p		102906	0					
ANR	102945	UnaryOperationExpression	* p		102906	0					
ANR	102946	UnaryOperator	*		102906	0					
ANR	102947	Identifier	p		102906	1					
ANR	102948	ExpressionStatement	p ++	2174:2:54432:54435	102906	1	True				
ANR	102949	PostIncDecOperationExpression	p ++		102906	0					
ANR	102950	Identifier	p		102906	0					
ANR	102951	IncDec	++		102906	1					
ANR	102952	ReturnType	ZEND_API void		102906	1					
ANR	102953	Identifier	zend_str_tolower		102906	2					
ANR	102954	ParameterList	"char * str , unsigned int length"		102906	3					
ANR	102955	Parameter	char * str	2167:31:54242:54250	102906	0	True				
ANR	102956	ParameterType	char *		102906	0					
ANR	102957	Identifier	str		102906	1					
ANR	102958	Parameter	unsigned int length	2167:42:54253:54271	102906	1	True				
ANR	102959	ParameterType	unsigned int		102906	0					
ANR	102960	Identifier	length		102906	1					
ANR	102961	CFGEntryNode	ENTRY		102906		True				
ANR	102962	CFGExitNode	EXIT		102906		True				
ANR	102963	Symbol	str		102906						
ANR	102964	Symbol	p		102906						
ANR	102965	Symbol	zend_tolower_ascii		102906						
ANR	102966	Symbol	length		102906						
ANR	102967	Symbol	end		102906						
ANR	102968	Symbol	* p		102906						
ANR	102969	Function	zend_binary_strcmp	2179:0:54453:54710							
ANR	102970	FunctionDef	"zend_binary_strcmp (const char * s1 , uint len1 , const char * s2 , uint len2)"		102969	0					
ANR	102971	CompoundStatement		2180:0:54549:54710	102969	0					
ANR	102972	IdentifierDeclStatement	int retval ;	2181:1:54552:54562	102969	0	True				
ANR	102973	IdentifierDecl	retval		102969	0					
ANR	102974	IdentifierDeclType	int		102969	0					
ANR	102975	Identifier	retval		102969	1					
ANR	102976	IfStatement	if ( s1 == s2 )		102969	1					
ANR	102977	Condition	s1 == s2	2183:5:54570:54577	102969	0	True				
ANR	102978	EqualityExpression	s1 == s2		102969	0		==			
ANR	102979	Identifier	s1		102969	0					
ANR	102980	Identifier	s2		102969	1					
ANR	102981	CompoundStatement		4:15:30:30	102969	1					
ANR	102982	ReturnStatement	return 0 ;	2184:2:54584:54592	102969	0	True				
ANR	102983	PrimaryExpression	0		102969	0					
ANR	102984	ExpressionStatement	"retval = memcmp ( s1 , s2 , MIN ( len1 , len2 ) )"	2186:1:54598:54638	102969	2	True				
ANR	102985	AssignmentExpression	"retval = memcmp ( s1 , s2 , MIN ( len1 , len2 ) )"		102969	0		=			
ANR	102986	Identifier	retval		102969	0					
ANR	102987	CallExpression	"memcmp ( s1 , s2 , MIN ( len1 , len2 ) )"		102969	1					
ANR	102988	Callee	memcmp		102969	0					
ANR	102989	Identifier	memcmp		102969	0					
ANR	102990	ArgumentList	s1		102969	1					
ANR	102991	Argument	s1		102969	0					
ANR	102992	Identifier	s1		102969	0					
ANR	102993	Argument	s2		102969	1					
ANR	102994	Identifier	s2		102969	0					
ANR	102995	Argument	"MIN ( len1 , len2 )"		102969	2					
ANR	102996	CallExpression	"MIN ( len1 , len2 )"		102969	0					
ANR	102997	Callee	MIN		102969	0					
ANR	102998	Identifier	MIN		102969	0					
ANR	102999	ArgumentList	len1		102969	1					
ANR	103000	Argument	len1		102969	0					
ANR	103001	Identifier	len1		102969	0					
ANR	103002	Argument	len2		102969	1					
ANR	103003	Identifier	len2		102969	0					
ANR	103004	IfStatement	if ( ! retval )		102969	3					
ANR	103005	Condition	! retval	2187:5:54645:54651	102969	0	True				
ANR	103006	UnaryOperationExpression	! retval		102969	0					
ANR	103007	UnaryOperator	!		102969	0					
ANR	103008	Identifier	retval		102969	1					
ANR	103009	CompoundStatement		8:14:104:104	102969	1					
ANR	103010	ReturnStatement	return ( len1 - len2 ) ;	2188:2:54658:54678	102969	0	True				
ANR	103011	AdditiveExpression	len1 - len2		102969	0		-			
ANR	103012	Identifier	len1		102969	0					
ANR	103013	Identifier	len2		102969	1					
ANR	103014	ElseStatement	else		102969	0					
ANR	103015	CompoundStatement		10:8:138:138	102969	0					
ANR	103016	ReturnStatement	return retval ;	2190:2:54692:54705	102969	0	True				
ANR	103017	Identifier	retval		102969	0					
ANR	103018	ReturnType	ZEND_API int		102969	1					
ANR	103019	Identifier	zend_binary_strcmp		102969	2					
ANR	103020	ParameterList	"const char * s1 , uint len1 , const char * s2 , uint len2"		102969	3					
ANR	103021	Parameter	const char * s1	2179:32:54485:54498	102969	0	True				
ANR	103022	ParameterType	const char *		102969	0					
ANR	103023	Identifier	s1		102969	1					
ANR	103024	Parameter	uint len1	2179:48:54501:54509	102969	1	True				
ANR	103025	ParameterType	uint		102969	0					
ANR	103026	Identifier	len1		102969	1					
ANR	103027	Parameter	const char * s2	2179:59:54512:54525	102969	2	True				
ANR	103028	ParameterType	const char *		102969	0					
ANR	103029	Identifier	s2		102969	1					
ANR	103030	Parameter	uint len2	2179:75:54528:54536	102969	3	True				
ANR	103031	ParameterType	uint		102969	0					
ANR	103032	Identifier	len2		102969	1					
ANR	103033	CFGEntryNode	ENTRY		102969		True				
ANR	103034	CFGExitNode	EXIT		102969		True				
ANR	103035	Symbol	MIN		102969						
ANR	103036	Symbol	memcmp		102969						
ANR	103037	Symbol	s1		102969						
ANR	103038	Symbol	len1		102969						
ANR	103039	Symbol	retval		102969						
ANR	103040	Symbol	s2		102969						
ANR	103041	Symbol	len2		102969						
ANR	103042	Function	zend_binary_strncmp	2195:0:54723:55033							
ANR	103043	FunctionDef	"zend_binary_strncmp (const char * s1 , uint len1 , const char * s2 , uint len2 , uint length)"		103042	0					
ANR	103044	CompoundStatement		2196:0:54833:55033	103042	0					
ANR	103045	IdentifierDeclStatement	int retval ;	2197:1:54836:54846	103042	0	True				
ANR	103046	IdentifierDecl	retval		103042	0					
ANR	103047	IdentifierDeclType	int		103042	0					
ANR	103048	Identifier	retval		103042	1					
ANR	103049	IfStatement	if ( s1 == s2 )		103042	1					
ANR	103050	Condition	s1 == s2	2199:5:54854:54861	103042	0	True				
ANR	103051	EqualityExpression	s1 == s2		103042	0		==			
ANR	103052	Identifier	s1		103042	0					
ANR	103053	Identifier	s2		103042	1					
ANR	103054	CompoundStatement		4:15:30:30	103042	1					
ANR	103055	ReturnStatement	return 0 ;	2200:2:54868:54876	103042	0	True				
ANR	103056	PrimaryExpression	0		103042	0					
ANR	103057	ExpressionStatement	"retval = memcmp ( s1 , s2 , MIN ( length , MIN ( len1 , len2 ) ) )"	2202:1:54882:54935	103042	2	True				
ANR	103058	AssignmentExpression	"retval = memcmp ( s1 , s2 , MIN ( length , MIN ( len1 , len2 ) ) )"		103042	0		=			
ANR	103059	Identifier	retval		103042	0					
ANR	103060	CallExpression	"memcmp ( s1 , s2 , MIN ( length , MIN ( len1 , len2 ) ) )"		103042	1					
ANR	103061	Callee	memcmp		103042	0					
ANR	103062	Identifier	memcmp		103042	0					
ANR	103063	ArgumentList	s1		103042	1					
ANR	103064	Argument	s1		103042	0					
ANR	103065	Identifier	s1		103042	0					
ANR	103066	Argument	s2		103042	1					
ANR	103067	Identifier	s2		103042	0					
ANR	103068	Argument	"MIN ( length , MIN ( len1 , len2 ) )"		103042	2					
ANR	103069	CallExpression	"MIN ( length , MIN ( len1 , len2 ) )"		103042	0					
ANR	103070	Callee	MIN		103042	0					
ANR	103071	Identifier	MIN		103042	0					
ANR	103072	ArgumentList	length		103042	1					
ANR	103073	Argument	length		103042	0					
ANR	103074	Identifier	length		103042	0					
ANR	103075	Argument	"MIN ( len1 , len2 )"		103042	1					
ANR	103076	CallExpression	"MIN ( len1 , len2 )"		103042	0					
ANR	103077	Callee	MIN		103042	0					
ANR	103078	Identifier	MIN		103042	0					
ANR	103079	ArgumentList	len1		103042	1					
ANR	103080	Argument	len1		103042	0					
ANR	103081	Identifier	len1		103042	0					
ANR	103082	Argument	len2		103042	1					
ANR	103083	Identifier	len2		103042	0					
ANR	103084	IfStatement	if ( ! retval )		103042	3					
ANR	103085	Condition	! retval	2203:5:54942:54948	103042	0	True				
ANR	103086	UnaryOperationExpression	! retval		103042	0					
ANR	103087	UnaryOperator	!		103042	0					
ANR	103088	Identifier	retval		103042	1					
ANR	103089	CompoundStatement		8:14:117:117	103042	1					
ANR	103090	ReturnStatement	"return ( MIN ( length , len1 ) - MIN ( length , len2 ) ) ;"	2204:2:54955:55001	103042	0	True				
ANR	103091	AdditiveExpression	"MIN ( length , len1 ) - MIN ( length , len2 )"		103042	0		-			
ANR	103092	CallExpression	"MIN ( length , len1 )"		103042	0					
ANR	103093	Callee	MIN		103042	0					
ANR	103094	Identifier	MIN		103042	0					
ANR	103095	ArgumentList	length		103042	1					
ANR	103096	Argument	length		103042	0					
ANR	103097	Identifier	length		103042	0					
ANR	103098	Argument	len1		103042	1					
ANR	103099	Identifier	len1		103042	0					
ANR	103100	CallExpression	"MIN ( length , len2 )"		103042	1					
ANR	103101	Callee	MIN		103042	0					
ANR	103102	Identifier	MIN		103042	0					
ANR	103103	ArgumentList	length		103042	1					
ANR	103104	Argument	length		103042	0					
ANR	103105	Identifier	length		103042	0					
ANR	103106	Argument	len2		103042	1					
ANR	103107	Identifier	len2		103042	0					
ANR	103108	ElseStatement	else		103042	0					
ANR	103109	CompoundStatement		10:8:177:177	103042	0					
ANR	103110	ReturnStatement	return retval ;	2206:2:55015:55028	103042	0	True				
ANR	103111	Identifier	retval		103042	0					
ANR	103112	ReturnType	ZEND_API int		103042	1					
ANR	103113	Identifier	zend_binary_strncmp		103042	2					
ANR	103114	ParameterList	"const char * s1 , uint len1 , const char * s2 , uint len2 , uint length"		103042	3					
ANR	103115	Parameter	const char * s1	2195:33:54756:54769	103042	0	True				
ANR	103116	ParameterType	const char *		103042	0					
ANR	103117	Identifier	s1		103042	1					
ANR	103118	Parameter	uint len1	2195:49:54772:54780	103042	1	True				
ANR	103119	ParameterType	uint		103042	0					
ANR	103120	Identifier	len1		103042	1					
ANR	103121	Parameter	const char * s2	2195:60:54783:54796	103042	2	True				
ANR	103122	ParameterType	const char *		103042	0					
ANR	103123	Identifier	s2		103042	1					
ANR	103124	Parameter	uint len2	2195:76:54799:54807	103042	3	True				
ANR	103125	ParameterType	uint		103042	0					
ANR	103126	Identifier	len2		103042	1					
ANR	103127	Parameter	uint length	2195:87:54810:54820	103042	4	True				
ANR	103128	ParameterType	uint		103042	0					
ANR	103129	Identifier	length		103042	1					
ANR	103130	CFGEntryNode	ENTRY		103042		True				
ANR	103131	CFGExitNode	EXIT		103042		True				
ANR	103132	Symbol	memcmp		103042						
ANR	103133	Symbol	MIN		103042						
ANR	103134	Symbol	length		103042						
ANR	103135	Symbol	s1		103042						
ANR	103136	Symbol	len1		103042						
ANR	103137	Symbol	retval		103042						
ANR	103138	Symbol	s2		103042						
ANR	103139	Symbol	len2		103042						
ANR	103140	Function	zend_binary_strcasecmp	2211:0:55046:55414							
ANR	103141	FunctionDef	"zend_binary_strcasecmp (const char * s1 , uint len1 , const char * s2 , uint len2)"		103140	0					
ANR	103142	CompoundStatement		2212:0:55146:55414	103140	0					
ANR	103143	IdentifierDeclStatement	int len ;	2213:1:55149:55156	103140	0	True				
ANR	103144	IdentifierDecl	len		103140	0					
ANR	103145	IdentifierDeclType	int		103140	0					
ANR	103146	Identifier	len		103140	1					
ANR	103147	IdentifierDeclStatement	"int c1 , c2 ;"	2214:1:55159:55169	103140	1	True				
ANR	103148	IdentifierDecl	c1		103140	0					
ANR	103149	IdentifierDeclType	int		103140	0					
ANR	103150	Identifier	c1		103140	1					
ANR	103151	IdentifierDecl	c2		103140	1					
ANR	103152	IdentifierDeclType	int		103140	0					
ANR	103153	Identifier	c2		103140	1					
ANR	103154	IfStatement	if ( s1 == s2 )		103140	2					
ANR	103155	Condition	s1 == s2	2216:5:55177:55184	103140	0	True				
ANR	103156	EqualityExpression	s1 == s2		103140	0		==			
ANR	103157	Identifier	s1		103140	0					
ANR	103158	Identifier	s2		103140	1					
ANR	103159	CompoundStatement		5:15:40:40	103140	1					
ANR	103160	ReturnStatement	return 0 ;	2217:2:55191:55199	103140	0	True				
ANR	103161	PrimaryExpression	0		103140	0					
ANR	103162	ExpressionStatement	"len = MIN ( len1 , len2 )"	2220:1:55206:55227	103140	3	True				
ANR	103163	AssignmentExpression	"len = MIN ( len1 , len2 )"		103140	0		=			
ANR	103164	Identifier	len		103140	0					
ANR	103165	CallExpression	"MIN ( len1 , len2 )"		103140	1					
ANR	103166	Callee	MIN		103140	0					
ANR	103167	Identifier	MIN		103140	0					
ANR	103168	ArgumentList	len1		103140	1					
ANR	103169	Argument	len1		103140	0					
ANR	103170	Identifier	len1		103140	0					
ANR	103171	Argument	len2		103140	1					
ANR	103172	Identifier	len2		103140	0					
ANR	103173	WhileStatement	while ( len -- )		103140	4					
ANR	103174	Condition	len --	2221:8:55237:55241	103140	0	True				
ANR	103175	PostIncDecOperationExpression	len --		103140	0					
ANR	103176	Identifier	len		103140	0					
ANR	103177	IncDec	--		103140	1					
ANR	103178	CompoundStatement		10:15:97:97	103140	1					
ANR	103179	ExpressionStatement	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )	2222:2:55248:55295	103140	0	True				
ANR	103180	AssignmentExpression	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		103140	0		=			
ANR	103181	Identifier	c1		103140	0					
ANR	103182	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		103140	1					
ANR	103183	Callee	zend_tolower_ascii		103140	0					
ANR	103184	Identifier	zend_tolower_ascii		103140	0					
ANR	103185	ArgumentList	* ( unsigned char * ) s1 ++		103140	1					
ANR	103186	Argument	* ( unsigned char * ) s1 ++		103140	0					
ANR	103187	UnaryOperationExpression	* ( unsigned char * ) s1 ++		103140	0					
ANR	103188	UnaryOperator	*		103140	0					
ANR	103189	CastExpression	( unsigned char * ) s1 ++		103140	1					
ANR	103190	CastTarget	unsigned char *		103140	0					
ANR	103191	PostIncDecOperationExpression	s1 ++		103140	1					
ANR	103192	Identifier	s1		103140	0					
ANR	103193	IncDec	++		103140	1					
ANR	103194	ExpressionStatement	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )	2223:2:55299:55346	103140	1	True				
ANR	103195	AssignmentExpression	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		103140	0		=			
ANR	103196	Identifier	c2		103140	0					
ANR	103197	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		103140	1					
ANR	103198	Callee	zend_tolower_ascii		103140	0					
ANR	103199	Identifier	zend_tolower_ascii		103140	0					
ANR	103200	ArgumentList	* ( unsigned char * ) s2 ++		103140	1					
ANR	103201	Argument	* ( unsigned char * ) s2 ++		103140	0					
ANR	103202	UnaryOperationExpression	* ( unsigned char * ) s2 ++		103140	0					
ANR	103203	UnaryOperator	*		103140	0					
ANR	103204	CastExpression	( unsigned char * ) s2 ++		103140	1					
ANR	103205	CastTarget	unsigned char *		103140	0					
ANR	103206	PostIncDecOperationExpression	s2 ++		103140	1					
ANR	103207	Identifier	s2		103140	0					
ANR	103208	IncDec	++		103140	1					
ANR	103209	IfStatement	if ( c1 != c2 )		103140	2					
ANR	103210	Condition	c1 != c2	2224:6:55354:55361	103140	0	True				
ANR	103211	EqualityExpression	c1 != c2		103140	0		!=			
ANR	103212	Identifier	c1		103140	0					
ANR	103213	Identifier	c2		103140	1					
ANR	103214	CompoundStatement		13:16:217:217	103140	1					
ANR	103215	ReturnStatement	return c1 - c2 ;	2225:3:55369:55383	103140	0	True				
ANR	103216	AdditiveExpression	c1 - c2		103140	0		-			
ANR	103217	Identifier	c1		103140	0					
ANR	103218	Identifier	c2		103140	1					
ANR	103219	ReturnStatement	return len1 - len2 ;	2229:1:55394:55412	103140	5	True				
ANR	103220	AdditiveExpression	len1 - len2		103140	0		-			
ANR	103221	Identifier	len1		103140	0					
ANR	103222	Identifier	len2		103140	1					
ANR	103223	ReturnType	ZEND_API int		103140	1					
ANR	103224	Identifier	zend_binary_strcasecmp		103140	2					
ANR	103225	ParameterList	"const char * s1 , uint len1 , const char * s2 , uint len2"		103140	3					
ANR	103226	Parameter	const char * s1	2211:36:55082:55095	103140	0	True				
ANR	103227	ParameterType	const char *		103140	0					
ANR	103228	Identifier	s1		103140	1					
ANR	103229	Parameter	uint len1	2211:52:55098:55106	103140	1	True				
ANR	103230	ParameterType	uint		103140	0					
ANR	103231	Identifier	len1		103140	1					
ANR	103232	Parameter	const char * s2	2211:63:55109:55122	103140	2	True				
ANR	103233	ParameterType	const char *		103140	0					
ANR	103234	Identifier	s2		103140	1					
ANR	103235	Parameter	uint len2	2211:79:55125:55133	103140	3	True				
ANR	103236	ParameterType	uint		103140	0					
ANR	103237	Identifier	len2		103140	1					
ANR	103238	CFGEntryNode	ENTRY		103140		True				
ANR	103239	CFGExitNode	EXIT		103140		True				
ANR	103240	Symbol	MIN		103140						
ANR	103241	Symbol	zend_tolower_ascii		103140						
ANR	103242	Symbol	len		103140						
ANR	103243	Symbol	* ( unsigned char * ) s2 ++		103140						
ANR	103244	Symbol	* ( unsigned char * ) s1 ++		103140						
ANR	103245	Symbol	s1		103140						
ANR	103246	Symbol	len1		103140						
ANR	103247	Symbol	c1		103140						
ANR	103248	Symbol	s2		103140						
ANR	103249	Symbol	len2		103140						
ANR	103250	Symbol	c2		103140						
ANR	103251	Function	zend_binary_strncasecmp	2233:0:55427:55847							
ANR	103252	FunctionDef	"zend_binary_strncasecmp (const char * s1 , uint len1 , const char * s2 , uint len2 , uint length)"		103251	0					
ANR	103253	CompoundStatement		2234:0:55541:55847	103251	0					
ANR	103254	IdentifierDeclStatement	int len ;	2235:1:55544:55551	103251	0	True				
ANR	103255	IdentifierDecl	len		103251	0					
ANR	103256	IdentifierDeclType	int		103251	0					
ANR	103257	Identifier	len		103251	1					
ANR	103258	IdentifierDeclStatement	"int c1 , c2 ;"	2236:1:55554:55564	103251	1	True				
ANR	103259	IdentifierDecl	c1		103251	0					
ANR	103260	IdentifierDeclType	int		103251	0					
ANR	103261	Identifier	c1		103251	1					
ANR	103262	IdentifierDecl	c2		103251	1					
ANR	103263	IdentifierDeclType	int		103251	0					
ANR	103264	Identifier	c2		103251	1					
ANR	103265	IfStatement	if ( s1 == s2 )		103251	2					
ANR	103266	Condition	s1 == s2	2238:5:55572:55579	103251	0	True				
ANR	103267	EqualityExpression	s1 == s2		103251	0		==			
ANR	103268	Identifier	s1		103251	0					
ANR	103269	Identifier	s2		103251	1					
ANR	103270	CompoundStatement		5:15:40:40	103251	1					
ANR	103271	ReturnStatement	return 0 ;	2239:2:55586:55594	103251	0	True				
ANR	103272	PrimaryExpression	0		103251	0					
ANR	103273	ExpressionStatement	"len = MIN ( length , MIN ( len1 , len2 ) )"	2241:1:55600:55634	103251	3	True				
ANR	103274	AssignmentExpression	"len = MIN ( length , MIN ( len1 , len2 ) )"		103251	0		=			
ANR	103275	Identifier	len		103251	0					
ANR	103276	CallExpression	"MIN ( length , MIN ( len1 , len2 ) )"		103251	1					
ANR	103277	Callee	MIN		103251	0					
ANR	103278	Identifier	MIN		103251	0					
ANR	103279	ArgumentList	length		103251	1					
ANR	103280	Argument	length		103251	0					
ANR	103281	Identifier	length		103251	0					
ANR	103282	Argument	"MIN ( len1 , len2 )"		103251	1					
ANR	103283	CallExpression	"MIN ( len1 , len2 )"		103251	0					
ANR	103284	Callee	MIN		103251	0					
ANR	103285	Identifier	MIN		103251	0					
ANR	103286	ArgumentList	len1		103251	1					
ANR	103287	Argument	len1		103251	0					
ANR	103288	Identifier	len1		103251	0					
ANR	103289	Argument	len2		103251	1					
ANR	103290	Identifier	len2		103251	0					
ANR	103291	WhileStatement	while ( len -- )		103251	4					
ANR	103292	Condition	len --	2242:8:55644:55648	103251	0	True				
ANR	103293	PostIncDecOperationExpression	len --		103251	0					
ANR	103294	Identifier	len		103251	0					
ANR	103295	IncDec	--		103251	1					
ANR	103296	CompoundStatement		9:15:109:109	103251	1					
ANR	103297	ExpressionStatement	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )	2243:2:55655:55702	103251	0	True				
ANR	103298	AssignmentExpression	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		103251	0		=			
ANR	103299	Identifier	c1		103251	0					
ANR	103300	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		103251	1					
ANR	103301	Callee	zend_tolower_ascii		103251	0					
ANR	103302	Identifier	zend_tolower_ascii		103251	0					
ANR	103303	ArgumentList	* ( unsigned char * ) s1 ++		103251	1					
ANR	103304	Argument	* ( unsigned char * ) s1 ++		103251	0					
ANR	103305	UnaryOperationExpression	* ( unsigned char * ) s1 ++		103251	0					
ANR	103306	UnaryOperator	*		103251	0					
ANR	103307	CastExpression	( unsigned char * ) s1 ++		103251	1					
ANR	103308	CastTarget	unsigned char *		103251	0					
ANR	103309	PostIncDecOperationExpression	s1 ++		103251	1					
ANR	103310	Identifier	s1		103251	0					
ANR	103311	IncDec	++		103251	1					
ANR	103312	ExpressionStatement	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )	2244:2:55706:55753	103251	1	True				
ANR	103313	AssignmentExpression	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		103251	0		=			
ANR	103314	Identifier	c2		103251	0					
ANR	103315	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		103251	1					
ANR	103316	Callee	zend_tolower_ascii		103251	0					
ANR	103317	Identifier	zend_tolower_ascii		103251	0					
ANR	103318	ArgumentList	* ( unsigned char * ) s2 ++		103251	1					
ANR	103319	Argument	* ( unsigned char * ) s2 ++		103251	0					
ANR	103320	UnaryOperationExpression	* ( unsigned char * ) s2 ++		103251	0					
ANR	103321	UnaryOperator	*		103251	0					
ANR	103322	CastExpression	( unsigned char * ) s2 ++		103251	1					
ANR	103323	CastTarget	unsigned char *		103251	0					
ANR	103324	PostIncDecOperationExpression	s2 ++		103251	1					
ANR	103325	Identifier	s2		103251	0					
ANR	103326	IncDec	++		103251	1					
ANR	103327	IfStatement	if ( c1 != c2 )		103251	2					
ANR	103328	Condition	c1 != c2	2245:6:55761:55768	103251	0	True				
ANR	103329	EqualityExpression	c1 != c2		103251	0		!=			
ANR	103330	Identifier	c1		103251	0					
ANR	103331	Identifier	c2		103251	1					
ANR	103332	CompoundStatement		12:16:229:229	103251	1					
ANR	103333	ReturnStatement	return c1 - c2 ;	2246:3:55776:55790	103251	0	True				
ANR	103334	AdditiveExpression	c1 - c2		103251	0		-			
ANR	103335	Identifier	c1		103251	0					
ANR	103336	Identifier	c2		103251	1					
ANR	103337	ReturnStatement	"return MIN ( length , len1 ) - MIN ( length , len2 ) ;"	2250:1:55801:55845	103251	5	True				
ANR	103338	AdditiveExpression	"MIN ( length , len1 ) - MIN ( length , len2 )"		103251	0		-			
ANR	103339	CallExpression	"MIN ( length , len1 )"		103251	0					
ANR	103340	Callee	MIN		103251	0					
ANR	103341	Identifier	MIN		103251	0					
ANR	103342	ArgumentList	length		103251	1					
ANR	103343	Argument	length		103251	0					
ANR	103344	Identifier	length		103251	0					
ANR	103345	Argument	len1		103251	1					
ANR	103346	Identifier	len1		103251	0					
ANR	103347	CallExpression	"MIN ( length , len2 )"		103251	1					
ANR	103348	Callee	MIN		103251	0					
ANR	103349	Identifier	MIN		103251	0					
ANR	103350	ArgumentList	length		103251	1					
ANR	103351	Argument	length		103251	0					
ANR	103352	Identifier	length		103251	0					
ANR	103353	Argument	len2		103251	1					
ANR	103354	Identifier	len2		103251	0					
ANR	103355	ReturnType	ZEND_API int		103251	1					
ANR	103356	Identifier	zend_binary_strncasecmp		103251	2					
ANR	103357	ParameterList	"const char * s1 , uint len1 , const char * s2 , uint len2 , uint length"		103251	3					
ANR	103358	Parameter	const char * s1	2233:37:55464:55477	103251	0	True				
ANR	103359	ParameterType	const char *		103251	0					
ANR	103360	Identifier	s1		103251	1					
ANR	103361	Parameter	uint len1	2233:53:55480:55488	103251	1	True				
ANR	103362	ParameterType	uint		103251	0					
ANR	103363	Identifier	len1		103251	1					
ANR	103364	Parameter	const char * s2	2233:64:55491:55504	103251	2	True				
ANR	103365	ParameterType	const char *		103251	0					
ANR	103366	Identifier	s2		103251	1					
ANR	103367	Parameter	uint len2	2233:80:55507:55515	103251	3	True				
ANR	103368	ParameterType	uint		103251	0					
ANR	103369	Identifier	len2		103251	1					
ANR	103370	Parameter	uint length	2233:91:55518:55528	103251	4	True				
ANR	103371	ParameterType	uint		103251	0					
ANR	103372	Identifier	length		103251	1					
ANR	103373	CFGEntryNode	ENTRY		103251		True				
ANR	103374	CFGExitNode	EXIT		103251		True				
ANR	103375	Symbol	MIN		103251						
ANR	103376	Symbol	zend_tolower_ascii		103251						
ANR	103377	Symbol	len		103251						
ANR	103378	Symbol	* ( unsigned char * ) s2 ++		103251						
ANR	103379	Symbol	length		103251						
ANR	103380	Symbol	* ( unsigned char * ) s1 ++		103251						
ANR	103381	Symbol	s1		103251						
ANR	103382	Symbol	len1		103251						
ANR	103383	Symbol	c1		103251						
ANR	103384	Symbol	s2		103251						
ANR	103385	Symbol	len2		103251						
ANR	103386	Symbol	c2		103251						
ANR	103387	Function	zend_binary_strcasecmp_l	2254:0:55860:56228							
ANR	103388	FunctionDef	"zend_binary_strcasecmp_l (const char * s1 , uint len1 , const char * s2 , uint len2)"		103387	0					
ANR	103389	CompoundStatement		2255:0:55962:56228	103387	0					
ANR	103390	IdentifierDeclStatement	int len ;	2256:1:55965:55972	103387	0	True				
ANR	103391	IdentifierDecl	len		103387	0					
ANR	103392	IdentifierDeclType	int		103387	0					
ANR	103393	Identifier	len		103387	1					
ANR	103394	IdentifierDeclStatement	"int c1 , c2 ;"	2257:1:55975:55985	103387	1	True				
ANR	103395	IdentifierDecl	c1		103387	0					
ANR	103396	IdentifierDeclType	int		103387	0					
ANR	103397	Identifier	c1		103387	1					
ANR	103398	IdentifierDecl	c2		103387	1					
ANR	103399	IdentifierDeclType	int		103387	0					
ANR	103400	Identifier	c2		103387	1					
ANR	103401	IfStatement	if ( s1 == s2 )		103387	2					
ANR	103402	Condition	s1 == s2	2259:5:55993:56000	103387	0	True				
ANR	103403	EqualityExpression	s1 == s2		103387	0		==			
ANR	103404	Identifier	s1		103387	0					
ANR	103405	Identifier	s2		103387	1					
ANR	103406	CompoundStatement		5:15:40:40	103387	1					
ANR	103407	ReturnStatement	return 0 ;	2260:2:56007:56015	103387	0	True				
ANR	103408	PrimaryExpression	0		103387	0					
ANR	103409	ExpressionStatement	"len = MIN ( len1 , len2 )"	2263:1:56022:56043	103387	3	True				
ANR	103410	AssignmentExpression	"len = MIN ( len1 , len2 )"		103387	0		=			
ANR	103411	Identifier	len		103387	0					
ANR	103412	CallExpression	"MIN ( len1 , len2 )"		103387	1					
ANR	103413	Callee	MIN		103387	0					
ANR	103414	Identifier	MIN		103387	0					
ANR	103415	ArgumentList	len1		103387	1					
ANR	103416	Argument	len1		103387	0					
ANR	103417	Identifier	len1		103387	0					
ANR	103418	Argument	len2		103387	1					
ANR	103419	Identifier	len2		103387	0					
ANR	103420	WhileStatement	while ( len -- )		103387	4					
ANR	103421	Condition	len --	2264:8:56053:56057	103387	0	True				
ANR	103422	PostIncDecOperationExpression	len --		103387	0					
ANR	103423	Identifier	len		103387	0					
ANR	103424	IncDec	--		103387	1					
ANR	103425	CompoundStatement		10:15:97:97	103387	1					
ANR	103426	ExpressionStatement	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )	2265:2:56064:56110	103387	0	True				
ANR	103427	AssignmentExpression	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		103387	0		=			
ANR	103428	Identifier	c1		103387	0					
ANR	103429	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		103387	1					
ANR	103430	Callee	zend_tolower		103387	0					
ANR	103431	Identifier	zend_tolower		103387	0					
ANR	103432	ArgumentList	( int ) * ( unsigned char * ) s1 ++		103387	1					
ANR	103433	Argument	( int ) * ( unsigned char * ) s1 ++		103387	0					
ANR	103434	CastExpression	( int ) * ( unsigned char * ) s1 ++		103387	0					
ANR	103435	CastTarget	int		103387	0					
ANR	103436	UnaryOperationExpression	* ( unsigned char * ) s1 ++		103387	1					
ANR	103437	UnaryOperator	*		103387	0					
ANR	103438	CastExpression	( unsigned char * ) s1 ++		103387	1					
ANR	103439	CastTarget	unsigned char *		103387	0					
ANR	103440	PostIncDecOperationExpression	s1 ++		103387	1					
ANR	103441	Identifier	s1		103387	0					
ANR	103442	IncDec	++		103387	1					
ANR	103443	ExpressionStatement	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )	2266:2:56114:56160	103387	1	True				
ANR	103444	AssignmentExpression	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		103387	0		=			
ANR	103445	Identifier	c2		103387	0					
ANR	103446	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		103387	1					
ANR	103447	Callee	zend_tolower		103387	0					
ANR	103448	Identifier	zend_tolower		103387	0					
ANR	103449	ArgumentList	( int ) * ( unsigned char * ) s2 ++		103387	1					
ANR	103450	Argument	( int ) * ( unsigned char * ) s2 ++		103387	0					
ANR	103451	CastExpression	( int ) * ( unsigned char * ) s2 ++		103387	0					
ANR	103452	CastTarget	int		103387	0					
ANR	103453	UnaryOperationExpression	* ( unsigned char * ) s2 ++		103387	1					
ANR	103454	UnaryOperator	*		103387	0					
ANR	103455	CastExpression	( unsigned char * ) s2 ++		103387	1					
ANR	103456	CastTarget	unsigned char *		103387	0					
ANR	103457	PostIncDecOperationExpression	s2 ++		103387	1					
ANR	103458	Identifier	s2		103387	0					
ANR	103459	IncDec	++		103387	1					
ANR	103460	IfStatement	if ( c1 != c2 )		103387	2					
ANR	103461	Condition	c1 != c2	2267:6:56168:56175	103387	0	True				
ANR	103462	EqualityExpression	c1 != c2		103387	0		!=			
ANR	103463	Identifier	c1		103387	0					
ANR	103464	Identifier	c2		103387	1					
ANR	103465	CompoundStatement		13:16:215:215	103387	1					
ANR	103466	ReturnStatement	return c1 - c2 ;	2268:3:56183:56197	103387	0	True				
ANR	103467	AdditiveExpression	c1 - c2		103387	0		-			
ANR	103468	Identifier	c1		103387	0					
ANR	103469	Identifier	c2		103387	1					
ANR	103470	ReturnStatement	return len1 - len2 ;	2272:1:56208:56226	103387	5	True				
ANR	103471	AdditiveExpression	len1 - len2		103387	0		-			
ANR	103472	Identifier	len1		103387	0					
ANR	103473	Identifier	len2		103387	1					
ANR	103474	ReturnType	ZEND_API int		103387	1					
ANR	103475	Identifier	zend_binary_strcasecmp_l		103387	2					
ANR	103476	ParameterList	"const char * s1 , uint len1 , const char * s2 , uint len2"		103387	3					
ANR	103477	Parameter	const char * s1	2254:38:55898:55911	103387	0	True				
ANR	103478	ParameterType	const char *		103387	0					
ANR	103479	Identifier	s1		103387	1					
ANR	103480	Parameter	uint len1	2254:54:55914:55922	103387	1	True				
ANR	103481	ParameterType	uint		103387	0					
ANR	103482	Identifier	len1		103387	1					
ANR	103483	Parameter	const char * s2	2254:65:55925:55938	103387	2	True				
ANR	103484	ParameterType	const char *		103387	0					
ANR	103485	Identifier	s2		103387	1					
ANR	103486	Parameter	uint len2	2254:81:55941:55949	103387	3	True				
ANR	103487	ParameterType	uint		103387	0					
ANR	103488	Identifier	len2		103387	1					
ANR	103489	CFGEntryNode	ENTRY		103387		True				
ANR	103490	CFGExitNode	EXIT		103387		True				
ANR	103491	Symbol	MIN		103387						
ANR	103492	Symbol	len		103387						
ANR	103493	Symbol	* ( unsigned char * ) s2 ++		103387						
ANR	103494	Symbol	zend_tolower		103387						
ANR	103495	Symbol	* ( unsigned char * ) s1 ++		103387						
ANR	103496	Symbol	s1		103387						
ANR	103497	Symbol	len1		103387						
ANR	103498	Symbol	c1		103387						
ANR	103499	Symbol	s2		103387						
ANR	103500	Symbol	len2		103387						
ANR	103501	Symbol	c2		103387						
ANR	103502	Function	zend_binary_strncasecmp_l	2276:0:56241:56661							
ANR	103503	FunctionDef	"zend_binary_strncasecmp_l (const char * s1 , uint len1 , const char * s2 , uint len2 , uint length)"		103502	0					
ANR	103504	CompoundStatement		2277:0:56357:56661	103502	0					
ANR	103505	IdentifierDeclStatement	int len ;	2278:1:56360:56367	103502	0	True				
ANR	103506	IdentifierDecl	len		103502	0					
ANR	103507	IdentifierDeclType	int		103502	0					
ANR	103508	Identifier	len		103502	1					
ANR	103509	IdentifierDeclStatement	"int c1 , c2 ;"	2279:1:56370:56380	103502	1	True				
ANR	103510	IdentifierDecl	c1		103502	0					
ANR	103511	IdentifierDeclType	int		103502	0					
ANR	103512	Identifier	c1		103502	1					
ANR	103513	IdentifierDecl	c2		103502	1					
ANR	103514	IdentifierDeclType	int		103502	0					
ANR	103515	Identifier	c2		103502	1					
ANR	103516	IfStatement	if ( s1 == s2 )		103502	2					
ANR	103517	Condition	s1 == s2	2281:5:56388:56395	103502	0	True				
ANR	103518	EqualityExpression	s1 == s2		103502	0		==			
ANR	103519	Identifier	s1		103502	0					
ANR	103520	Identifier	s2		103502	1					
ANR	103521	CompoundStatement		5:15:40:40	103502	1					
ANR	103522	ReturnStatement	return 0 ;	2282:2:56402:56410	103502	0	True				
ANR	103523	PrimaryExpression	0		103502	0					
ANR	103524	ExpressionStatement	"len = MIN ( length , MIN ( len1 , len2 ) )"	2284:1:56416:56450	103502	3	True				
ANR	103525	AssignmentExpression	"len = MIN ( length , MIN ( len1 , len2 ) )"		103502	0		=			
ANR	103526	Identifier	len		103502	0					
ANR	103527	CallExpression	"MIN ( length , MIN ( len1 , len2 ) )"		103502	1					
ANR	103528	Callee	MIN		103502	0					
ANR	103529	Identifier	MIN		103502	0					
ANR	103530	ArgumentList	length		103502	1					
ANR	103531	Argument	length		103502	0					
ANR	103532	Identifier	length		103502	0					
ANR	103533	Argument	"MIN ( len1 , len2 )"		103502	1					
ANR	103534	CallExpression	"MIN ( len1 , len2 )"		103502	0					
ANR	103535	Callee	MIN		103502	0					
ANR	103536	Identifier	MIN		103502	0					
ANR	103537	ArgumentList	len1		103502	1					
ANR	103538	Argument	len1		103502	0					
ANR	103539	Identifier	len1		103502	0					
ANR	103540	Argument	len2		103502	1					
ANR	103541	Identifier	len2		103502	0					
ANR	103542	WhileStatement	while ( len -- )		103502	4					
ANR	103543	Condition	len --	2285:8:56460:56464	103502	0	True				
ANR	103544	PostIncDecOperationExpression	len --		103502	0					
ANR	103545	Identifier	len		103502	0					
ANR	103546	IncDec	--		103502	1					
ANR	103547	CompoundStatement		9:15:109:109	103502	1					
ANR	103548	ExpressionStatement	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )	2286:2:56471:56517	103502	0	True				
ANR	103549	AssignmentExpression	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		103502	0		=			
ANR	103550	Identifier	c1		103502	0					
ANR	103551	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		103502	1					
ANR	103552	Callee	zend_tolower		103502	0					
ANR	103553	Identifier	zend_tolower		103502	0					
ANR	103554	ArgumentList	( int ) * ( unsigned char * ) s1 ++		103502	1					
ANR	103555	Argument	( int ) * ( unsigned char * ) s1 ++		103502	0					
ANR	103556	CastExpression	( int ) * ( unsigned char * ) s1 ++		103502	0					
ANR	103557	CastTarget	int		103502	0					
ANR	103558	UnaryOperationExpression	* ( unsigned char * ) s1 ++		103502	1					
ANR	103559	UnaryOperator	*		103502	0					
ANR	103560	CastExpression	( unsigned char * ) s1 ++		103502	1					
ANR	103561	CastTarget	unsigned char *		103502	0					
ANR	103562	PostIncDecOperationExpression	s1 ++		103502	1					
ANR	103563	Identifier	s1		103502	0					
ANR	103564	IncDec	++		103502	1					
ANR	103565	ExpressionStatement	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )	2287:2:56521:56567	103502	1	True				
ANR	103566	AssignmentExpression	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		103502	0		=			
ANR	103567	Identifier	c2		103502	0					
ANR	103568	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		103502	1					
ANR	103569	Callee	zend_tolower		103502	0					
ANR	103570	Identifier	zend_tolower		103502	0					
ANR	103571	ArgumentList	( int ) * ( unsigned char * ) s2 ++		103502	1					
ANR	103572	Argument	( int ) * ( unsigned char * ) s2 ++		103502	0					
ANR	103573	CastExpression	( int ) * ( unsigned char * ) s2 ++		103502	0					
ANR	103574	CastTarget	int		103502	0					
ANR	103575	UnaryOperationExpression	* ( unsigned char * ) s2 ++		103502	1					
ANR	103576	UnaryOperator	*		103502	0					
ANR	103577	CastExpression	( unsigned char * ) s2 ++		103502	1					
ANR	103578	CastTarget	unsigned char *		103502	0					
ANR	103579	PostIncDecOperationExpression	s2 ++		103502	1					
ANR	103580	Identifier	s2		103502	0					
ANR	103581	IncDec	++		103502	1					
ANR	103582	IfStatement	if ( c1 != c2 )		103502	2					
ANR	103583	Condition	c1 != c2	2288:6:56575:56582	103502	0	True				
ANR	103584	EqualityExpression	c1 != c2		103502	0		!=			
ANR	103585	Identifier	c1		103502	0					
ANR	103586	Identifier	c2		103502	1					
ANR	103587	CompoundStatement		12:16:227:227	103502	1					
ANR	103588	ReturnStatement	return c1 - c2 ;	2289:3:56590:56604	103502	0	True				
ANR	103589	AdditiveExpression	c1 - c2		103502	0		-			
ANR	103590	Identifier	c1		103502	0					
ANR	103591	Identifier	c2		103502	1					
ANR	103592	ReturnStatement	"return MIN ( length , len1 ) - MIN ( length , len2 ) ;"	2293:1:56615:56659	103502	5	True				
ANR	103593	AdditiveExpression	"MIN ( length , len1 ) - MIN ( length , len2 )"		103502	0		-			
ANR	103594	CallExpression	"MIN ( length , len1 )"		103502	0					
ANR	103595	Callee	MIN		103502	0					
ANR	103596	Identifier	MIN		103502	0					
ANR	103597	ArgumentList	length		103502	1					
ANR	103598	Argument	length		103502	0					
ANR	103599	Identifier	length		103502	0					
ANR	103600	Argument	len1		103502	1					
ANR	103601	Identifier	len1		103502	0					
ANR	103602	CallExpression	"MIN ( length , len2 )"		103502	1					
ANR	103603	Callee	MIN		103502	0					
ANR	103604	Identifier	MIN		103502	0					
ANR	103605	ArgumentList	length		103502	1					
ANR	103606	Argument	length		103502	0					
ANR	103607	Identifier	length		103502	0					
ANR	103608	Argument	len2		103502	1					
ANR	103609	Identifier	len2		103502	0					
ANR	103610	ReturnType	ZEND_API int		103502	1					
ANR	103611	Identifier	zend_binary_strncasecmp_l		103502	2					
ANR	103612	ParameterList	"const char * s1 , uint len1 , const char * s2 , uint len2 , uint length"		103502	3					
ANR	103613	Parameter	const char * s1	2276:39:56280:56293	103502	0	True				
ANR	103614	ParameterType	const char *		103502	0					
ANR	103615	Identifier	s1		103502	1					
ANR	103616	Parameter	uint len1	2276:55:56296:56304	103502	1	True				
ANR	103617	ParameterType	uint		103502	0					
ANR	103618	Identifier	len1		103502	1					
ANR	103619	Parameter	const char * s2	2276:66:56307:56320	103502	2	True				
ANR	103620	ParameterType	const char *		103502	0					
ANR	103621	Identifier	s2		103502	1					
ANR	103622	Parameter	uint len2	2276:82:56323:56331	103502	3	True				
ANR	103623	ParameterType	uint		103502	0					
ANR	103624	Identifier	len2		103502	1					
ANR	103625	Parameter	uint length	2276:93:56334:56344	103502	4	True				
ANR	103626	ParameterType	uint		103502	0					
ANR	103627	Identifier	length		103502	1					
ANR	103628	CFGEntryNode	ENTRY		103502		True				
ANR	103629	CFGExitNode	EXIT		103502		True				
ANR	103630	Symbol	MIN		103502						
ANR	103631	Symbol	len		103502						
ANR	103632	Symbol	* ( unsigned char * ) s2 ++		103502						
ANR	103633	Symbol	zend_tolower		103502						
ANR	103634	Symbol	length		103502						
ANR	103635	Symbol	* ( unsigned char * ) s1 ++		103502						
ANR	103636	Symbol	s1		103502						
ANR	103637	Symbol	len1		103502						
ANR	103638	Symbol	c1		103502						
ANR	103639	Symbol	s2		103502						
ANR	103640	Symbol	len2		103502						
ANR	103641	Symbol	c2		103502						
ANR	103642	Function	zend_binary_zval_strcmp	2297:0:56674:56835							
ANR	103643	FunctionDef	"zend_binary_zval_strcmp (zval * s1 , zval * s2)"		103642	0					
ANR	103644	CompoundStatement		2298:0:56741:56835	103642	0					
ANR	103645	ReturnStatement	"return zend_binary_strcmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) ) ;"	2299:1:56744:56833	103642	0	True				
ANR	103646	CallExpression	"zend_binary_strcmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) )"		103642	0					
ANR	103647	Callee	zend_binary_strcmp		103642	0					
ANR	103648	Identifier	zend_binary_strcmp		103642	0					
ANR	103649	ArgumentList	Z_STRVAL_P ( s1 )		103642	1					
ANR	103650	Argument	Z_STRVAL_P ( s1 )		103642	0					
ANR	103651	CallExpression	Z_STRVAL_P ( s1 )		103642	0					
ANR	103652	Callee	Z_STRVAL_P		103642	0					
ANR	103653	Identifier	Z_STRVAL_P		103642	0					
ANR	103654	ArgumentList	s1		103642	1					
ANR	103655	Argument	s1		103642	0					
ANR	103656	Identifier	s1		103642	0					
ANR	103657	Argument	Z_STRLEN_P ( s1 )		103642	1					
ANR	103658	CallExpression	Z_STRLEN_P ( s1 )		103642	0					
ANR	103659	Callee	Z_STRLEN_P		103642	0					
ANR	103660	Identifier	Z_STRLEN_P		103642	0					
ANR	103661	ArgumentList	s1		103642	1					
ANR	103662	Argument	s1		103642	0					
ANR	103663	Identifier	s1		103642	0					
ANR	103664	Argument	Z_STRVAL_P ( s2 )		103642	2					
ANR	103665	CallExpression	Z_STRVAL_P ( s2 )		103642	0					
ANR	103666	Callee	Z_STRVAL_P		103642	0					
ANR	103667	Identifier	Z_STRVAL_P		103642	0					
ANR	103668	ArgumentList	s2		103642	1					
ANR	103669	Argument	s2		103642	0					
ANR	103670	Identifier	s2		103642	0					
ANR	103671	Argument	Z_STRLEN_P ( s2 )		103642	3					
ANR	103672	CallExpression	Z_STRLEN_P ( s2 )		103642	0					
ANR	103673	Callee	Z_STRLEN_P		103642	0					
ANR	103674	Identifier	Z_STRLEN_P		103642	0					
ANR	103675	ArgumentList	s2		103642	1					
ANR	103676	Argument	s2		103642	0					
ANR	103677	Identifier	s2		103642	0					
ANR	103678	ReturnType	ZEND_API int		103642	1					
ANR	103679	Identifier	zend_binary_zval_strcmp		103642	2					
ANR	103680	ParameterList	"zval * s1 , zval * s2"		103642	3					
ANR	103681	Parameter	zval * s1	2297:37:56711:56718	103642	0	True				
ANR	103682	ParameterType	zval *		103642	0					
ANR	103683	Identifier	s1		103642	1					
ANR	103684	Parameter	zval * s2	2297:47:56721:56728	103642	1	True				
ANR	103685	ParameterType	zval *		103642	0					
ANR	103686	Identifier	s2		103642	1					
ANR	103687	CFGEntryNode	ENTRY		103642		True				
ANR	103688	CFGExitNode	EXIT		103642		True				
ANR	103689	Symbol	zend_binary_strcmp		103642						
ANR	103690	Symbol	Z_STRLEN_P		103642						
ANR	103691	Symbol	Z_STRVAL_P		103642						
ANR	103692	Symbol	s1		103642						
ANR	103693	Symbol	s2		103642						
ANR	103694	Function	zend_binary_zval_strncmp	2303:0:56848:57035							
ANR	103695	FunctionDef	"zend_binary_zval_strncmp (zval * s1 , zval * s2 , zval * s3)"		103694	0					
ANR	103696	CompoundStatement		2304:0:56926:57035	103694	0					
ANR	103697	ReturnStatement	"return zend_binary_strncmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) ) ;"	2305:1:56929:57033	103694	0	True				
ANR	103698	CallExpression	"zend_binary_strncmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) )"		103694	0					
ANR	103699	Callee	zend_binary_strncmp		103694	0					
ANR	103700	Identifier	zend_binary_strncmp		103694	0					
ANR	103701	ArgumentList	Z_STRVAL_P ( s1 )		103694	1					
ANR	103702	Argument	Z_STRVAL_P ( s1 )		103694	0					
ANR	103703	CallExpression	Z_STRVAL_P ( s1 )		103694	0					
ANR	103704	Callee	Z_STRVAL_P		103694	0					
ANR	103705	Identifier	Z_STRVAL_P		103694	0					
ANR	103706	ArgumentList	s1		103694	1					
ANR	103707	Argument	s1		103694	0					
ANR	103708	Identifier	s1		103694	0					
ANR	103709	Argument	Z_STRLEN_P ( s1 )		103694	1					
ANR	103710	CallExpression	Z_STRLEN_P ( s1 )		103694	0					
ANR	103711	Callee	Z_STRLEN_P		103694	0					
ANR	103712	Identifier	Z_STRLEN_P		103694	0					
ANR	103713	ArgumentList	s1		103694	1					
ANR	103714	Argument	s1		103694	0					
ANR	103715	Identifier	s1		103694	0					
ANR	103716	Argument	Z_STRVAL_P ( s2 )		103694	2					
ANR	103717	CallExpression	Z_STRVAL_P ( s2 )		103694	0					
ANR	103718	Callee	Z_STRVAL_P		103694	0					
ANR	103719	Identifier	Z_STRVAL_P		103694	0					
ANR	103720	ArgumentList	s2		103694	1					
ANR	103721	Argument	s2		103694	0					
ANR	103722	Identifier	s2		103694	0					
ANR	103723	Argument	Z_STRLEN_P ( s2 )		103694	3					
ANR	103724	CallExpression	Z_STRLEN_P ( s2 )		103694	0					
ANR	103725	Callee	Z_STRLEN_P		103694	0					
ANR	103726	Identifier	Z_STRLEN_P		103694	0					
ANR	103727	ArgumentList	s2		103694	1					
ANR	103728	Argument	s2		103694	0					
ANR	103729	Identifier	s2		103694	0					
ANR	103730	Argument	Z_LVAL_P ( s3 )		103694	4					
ANR	103731	CallExpression	Z_LVAL_P ( s3 )		103694	0					
ANR	103732	Callee	Z_LVAL_P		103694	0					
ANR	103733	Identifier	Z_LVAL_P		103694	0					
ANR	103734	ArgumentList	s3		103694	1					
ANR	103735	Argument	s3		103694	0					
ANR	103736	Identifier	s3		103694	0					
ANR	103737	ReturnType	ZEND_API int		103694	1					
ANR	103738	Identifier	zend_binary_zval_strncmp		103694	2					
ANR	103739	ParameterList	"zval * s1 , zval * s2 , zval * s3"		103694	3					
ANR	103740	Parameter	zval * s1	2303:38:56886:56893	103694	0	True				
ANR	103741	ParameterType	zval *		103694	0					
ANR	103742	Identifier	s1		103694	1					
ANR	103743	Parameter	zval * s2	2303:48:56896:56903	103694	1	True				
ANR	103744	ParameterType	zval *		103694	0					
ANR	103745	Identifier	s2		103694	1					
ANR	103746	Parameter	zval * s3	2303:58:56906:56913	103694	2	True				
ANR	103747	ParameterType	zval *		103694	0					
ANR	103748	Identifier	s3		103694	1					
ANR	103749	CFGEntryNode	ENTRY		103694		True				
ANR	103750	CFGExitNode	EXIT		103694		True				
ANR	103751	Symbol	s3		103694						
ANR	103752	Symbol	zend_binary_strncmp		103694						
ANR	103753	Symbol	Z_STRLEN_P		103694						
ANR	103754	Symbol	Z_STRVAL_P		103694						
ANR	103755	Symbol	s1		103694						
ANR	103756	Symbol	s2		103694						
ANR	103757	Symbol	Z_LVAL_P		103694						
ANR	103758	Function	zend_binary_zval_strcasecmp	2309:0:57048:57219							
ANR	103759	FunctionDef	"zend_binary_zval_strcasecmp (zval * s1 , zval * s2)"		103758	0					
ANR	103760	CompoundStatement		2310:0:57119:57219	103758	0					
ANR	103761	ReturnStatement	"return zend_binary_strcasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) ) ;"	2311:1:57122:57217	103758	0	True				
ANR	103762	CallExpression	"zend_binary_strcasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) )"		103758	0					
ANR	103763	Callee	zend_binary_strcasecmp_l		103758	0					
ANR	103764	Identifier	zend_binary_strcasecmp_l		103758	0					
ANR	103765	ArgumentList	Z_STRVAL_P ( s1 )		103758	1					
ANR	103766	Argument	Z_STRVAL_P ( s1 )		103758	0					
ANR	103767	CallExpression	Z_STRVAL_P ( s1 )		103758	0					
ANR	103768	Callee	Z_STRVAL_P		103758	0					
ANR	103769	Identifier	Z_STRVAL_P		103758	0					
ANR	103770	ArgumentList	s1		103758	1					
ANR	103771	Argument	s1		103758	0					
ANR	103772	Identifier	s1		103758	0					
ANR	103773	Argument	Z_STRLEN_P ( s1 )		103758	1					
ANR	103774	CallExpression	Z_STRLEN_P ( s1 )		103758	0					
ANR	103775	Callee	Z_STRLEN_P		103758	0					
ANR	103776	Identifier	Z_STRLEN_P		103758	0					
ANR	103777	ArgumentList	s1		103758	1					
ANR	103778	Argument	s1		103758	0					
ANR	103779	Identifier	s1		103758	0					
ANR	103780	Argument	Z_STRVAL_P ( s2 )		103758	2					
ANR	103781	CallExpression	Z_STRVAL_P ( s2 )		103758	0					
ANR	103782	Callee	Z_STRVAL_P		103758	0					
ANR	103783	Identifier	Z_STRVAL_P		103758	0					
ANR	103784	ArgumentList	s2		103758	1					
ANR	103785	Argument	s2		103758	0					
ANR	103786	Identifier	s2		103758	0					
ANR	103787	Argument	Z_STRLEN_P ( s2 )		103758	3					
ANR	103788	CallExpression	Z_STRLEN_P ( s2 )		103758	0					
ANR	103789	Callee	Z_STRLEN_P		103758	0					
ANR	103790	Identifier	Z_STRLEN_P		103758	0					
ANR	103791	ArgumentList	s2		103758	1					
ANR	103792	Argument	s2		103758	0					
ANR	103793	Identifier	s2		103758	0					
ANR	103794	ReturnType	ZEND_API int		103758	1					
ANR	103795	Identifier	zend_binary_zval_strcasecmp		103758	2					
ANR	103796	ParameterList	"zval * s1 , zval * s2"		103758	3					
ANR	103797	Parameter	zval * s1	2309:41:57089:57096	103758	0	True				
ANR	103798	ParameterType	zval *		103758	0					
ANR	103799	Identifier	s1		103758	1					
ANR	103800	Parameter	zval * s2	2309:51:57099:57106	103758	1	True				
ANR	103801	ParameterType	zval *		103758	0					
ANR	103802	Identifier	s2		103758	1					
ANR	103803	CFGEntryNode	ENTRY		103758		True				
ANR	103804	CFGExitNode	EXIT		103758		True				
ANR	103805	Symbol	zend_binary_strcasecmp_l		103758						
ANR	103806	Symbol	Z_STRLEN_P		103758						
ANR	103807	Symbol	Z_STRVAL_P		103758						
ANR	103808	Symbol	s1		103758						
ANR	103809	Symbol	s2		103758						
ANR	103810	Function	zend_binary_zval_strncasecmp	2315:0:57232:57429							
ANR	103811	FunctionDef	"zend_binary_zval_strncasecmp (zval * s1 , zval * s2 , zval * s3)"		103810	0					
ANR	103812	CompoundStatement		2316:0:57314:57429	103810	0					
ANR	103813	ReturnStatement	"return zend_binary_strncasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) ) ;"	2317:1:57317:57427	103810	0	True				
ANR	103814	CallExpression	"zend_binary_strncasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) )"		103810	0					
ANR	103815	Callee	zend_binary_strncasecmp_l		103810	0					
ANR	103816	Identifier	zend_binary_strncasecmp_l		103810	0					
ANR	103817	ArgumentList	Z_STRVAL_P ( s1 )		103810	1					
ANR	103818	Argument	Z_STRVAL_P ( s1 )		103810	0					
ANR	103819	CallExpression	Z_STRVAL_P ( s1 )		103810	0					
ANR	103820	Callee	Z_STRVAL_P		103810	0					
ANR	103821	Identifier	Z_STRVAL_P		103810	0					
ANR	103822	ArgumentList	s1		103810	1					
ANR	103823	Argument	s1		103810	0					
ANR	103824	Identifier	s1		103810	0					
ANR	103825	Argument	Z_STRLEN_P ( s1 )		103810	1					
ANR	103826	CallExpression	Z_STRLEN_P ( s1 )		103810	0					
ANR	103827	Callee	Z_STRLEN_P		103810	0					
ANR	103828	Identifier	Z_STRLEN_P		103810	0					
ANR	103829	ArgumentList	s1		103810	1					
ANR	103830	Argument	s1		103810	0					
ANR	103831	Identifier	s1		103810	0					
ANR	103832	Argument	Z_STRVAL_P ( s2 )		103810	2					
ANR	103833	CallExpression	Z_STRVAL_P ( s2 )		103810	0					
ANR	103834	Callee	Z_STRVAL_P		103810	0					
ANR	103835	Identifier	Z_STRVAL_P		103810	0					
ANR	103836	ArgumentList	s2		103810	1					
ANR	103837	Argument	s2		103810	0					
ANR	103838	Identifier	s2		103810	0					
ANR	103839	Argument	Z_STRLEN_P ( s2 )		103810	3					
ANR	103840	CallExpression	Z_STRLEN_P ( s2 )		103810	0					
ANR	103841	Callee	Z_STRLEN_P		103810	0					
ANR	103842	Identifier	Z_STRLEN_P		103810	0					
ANR	103843	ArgumentList	s2		103810	1					
ANR	103844	Argument	s2		103810	0					
ANR	103845	Identifier	s2		103810	0					
ANR	103846	Argument	Z_LVAL_P ( s3 )		103810	4					
ANR	103847	CallExpression	Z_LVAL_P ( s3 )		103810	0					
ANR	103848	Callee	Z_LVAL_P		103810	0					
ANR	103849	Identifier	Z_LVAL_P		103810	0					
ANR	103850	ArgumentList	s3		103810	1					
ANR	103851	Argument	s3		103810	0					
ANR	103852	Identifier	s3		103810	0					
ANR	103853	ReturnType	ZEND_API int		103810	1					
ANR	103854	Identifier	zend_binary_zval_strncasecmp		103810	2					
ANR	103855	ParameterList	"zval * s1 , zval * s2 , zval * s3"		103810	3					
ANR	103856	Parameter	zval * s1	2315:42:57274:57281	103810	0	True				
ANR	103857	ParameterType	zval *		103810	0					
ANR	103858	Identifier	s1		103810	1					
ANR	103859	Parameter	zval * s2	2315:52:57284:57291	103810	1	True				
ANR	103860	ParameterType	zval *		103810	0					
ANR	103861	Identifier	s2		103810	1					
ANR	103862	Parameter	zval * s3	2315:62:57294:57301	103810	2	True				
ANR	103863	ParameterType	zval *		103810	0					
ANR	103864	Identifier	s3		103810	1					
ANR	103865	CFGEntryNode	ENTRY		103810		True				
ANR	103866	CFGExitNode	EXIT		103810		True				
ANR	103867	Symbol	s3		103810						
ANR	103868	Symbol	zend_binary_strncasecmp_l		103810						
ANR	103869	Symbol	Z_STRLEN_P		103810						
ANR	103870	Symbol	Z_STRVAL_P		103810						
ANR	103871	Symbol	s1		103810						
ANR	103872	Symbol	s2		103810						
ANR	103873	Symbol	Z_LVAL_P		103810						
ANR	103874	Function	zendi_smart_strcmp	2321:0:57442:59189							
ANR	103875	FunctionDef	"zendi_smart_strcmp (zval * result , zval * s1 , zval * s2)"		103874	0					
ANR	103876	CompoundStatement		2322:0:57519:59189	103874	0					
ANR	103877	IdentifierDeclStatement	"int ret1 , ret2 ;"	2323:1:57522:57536	103874	0	True				
ANR	103878	IdentifierDecl	ret1		103874	0					
ANR	103879	IdentifierDeclType	int		103874	0					
ANR	103880	Identifier	ret1		103874	1					
ANR	103881	IdentifierDecl	ret2		103874	1					
ANR	103882	IdentifierDeclType	int		103874	0					
ANR	103883	Identifier	ret2		103874	1					
ANR	103884	IdentifierDeclStatement	"int oflow1 , oflow2 ;"	2324:1:57539:57557	103874	1	True				
ANR	103885	IdentifierDecl	oflow1		103874	0					
ANR	103886	IdentifierDeclType	int		103874	0					
ANR	103887	Identifier	oflow1		103874	1					
ANR	103888	IdentifierDecl	oflow2		103874	1					
ANR	103889	IdentifierDeclType	int		103874	0					
ANR	103890	Identifier	oflow2		103874	1					
ANR	103891	IdentifierDeclStatement	"long lval1 = 0 , lval2 = 0 ;"	2325:1:57560:57585	103874	2	True				
ANR	103892	IdentifierDecl	lval1 = 0		103874	0					
ANR	103893	IdentifierDeclType	long		103874	0					
ANR	103894	Identifier	lval1		103874	1					
ANR	103895	AssignmentExpression	lval1 = 0		103874	2		=			
ANR	103896	Identifier	lval1		103874	0					
ANR	103897	PrimaryExpression	0		103874	1					
ANR	103898	IdentifierDecl	lval2 = 0		103874	1					
ANR	103899	IdentifierDeclType	long		103874	0					
ANR	103900	Identifier	lval2		103874	1					
ANR	103901	AssignmentExpression	lval2 = 0		103874	2		=			
ANR	103902	Identifier	lval2		103874	0					
ANR	103903	PrimaryExpression	0		103874	1					
ANR	103904	IdentifierDeclStatement	"double dval1 = 0.0 , dval2 = 0.0 ;"	2326:1:57588:57619	103874	3	True				
ANR	103905	IdentifierDecl	dval1 = 0.0		103874	0					
ANR	103906	IdentifierDeclType	double		103874	0					
ANR	103907	Identifier	dval1		103874	1					
ANR	103908	AssignmentExpression	dval1 = 0.0		103874	2		=			
ANR	103909	Identifier	dval1		103874	0					
ANR	103910	PrimaryExpression	0.0		103874	1					
ANR	103911	IdentifierDecl	dval2 = 0.0		103874	1					
ANR	103912	IdentifierDeclType	double		103874	0					
ANR	103913	Identifier	dval2		103874	1					
ANR	103914	AssignmentExpression	dval2 = 0.0		103874	2		=			
ANR	103915	Identifier	dval2		103874	0					
ANR	103916	PrimaryExpression	0.0		103874	1					
ANR	103917	IfStatement	"if ( ( ret1 = is_numeric_string_ex ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , & lval1 , & dval1 , 0 , & oflow1 ) ) && ( ret2 = is_numeric_string_ex ( Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , & lval2 , & dval2 , 0 , & oflow2 ) ) )"		103874	4					
ANR	103918	Condition	"( ret1 = is_numeric_string_ex ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , & lval1 , & dval1 , 0 , & oflow1 ) ) && ( ret2 = is_numeric_string_ex ( Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , & lval2 , & dval2 , 0 , & oflow2 ) )"	2328:5:57627:57806	103874	0	True				
ANR	103919	AndExpression	"( ret1 = is_numeric_string_ex ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , & lval1 , & dval1 , 0 , & oflow1 ) ) && ( ret2 = is_numeric_string_ex ( Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , & lval2 , & dval2 , 0 , & oflow2 ) )"		103874	0		&&			
ANR	103920	AssignmentExpression	"ret1 = is_numeric_string_ex ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , & lval1 , & dval1 , 0 , & oflow1 )"		103874	0		=			
ANR	103921	Identifier	ret1		103874	0					
ANR	103922	CallExpression	"is_numeric_string_ex ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , & lval1 , & dval1 , 0 , & oflow1 )"		103874	1					
ANR	103923	Callee	is_numeric_string_ex		103874	0					
ANR	103924	Identifier	is_numeric_string_ex		103874	0					
ANR	103925	ArgumentList	Z_STRVAL_P ( s1 )		103874	1					
ANR	103926	Argument	Z_STRVAL_P ( s1 )		103874	0					
ANR	103927	CallExpression	Z_STRVAL_P ( s1 )		103874	0					
ANR	103928	Callee	Z_STRVAL_P		103874	0					
ANR	103929	Identifier	Z_STRVAL_P		103874	0					
ANR	103930	ArgumentList	s1		103874	1					
ANR	103931	Argument	s1		103874	0					
ANR	103932	Identifier	s1		103874	0					
ANR	103933	Argument	Z_STRLEN_P ( s1 )		103874	1					
ANR	103934	CallExpression	Z_STRLEN_P ( s1 )		103874	0					
ANR	103935	Callee	Z_STRLEN_P		103874	0					
ANR	103936	Identifier	Z_STRLEN_P		103874	0					
ANR	103937	ArgumentList	s1		103874	1					
ANR	103938	Argument	s1		103874	0					
ANR	103939	Identifier	s1		103874	0					
ANR	103940	Argument	& lval1		103874	2					
ANR	103941	UnaryOperationExpression	& lval1		103874	0					
ANR	103942	UnaryOperator	&		103874	0					
ANR	103943	Identifier	lval1		103874	1					
ANR	103944	Argument	& dval1		103874	3					
ANR	103945	UnaryOperationExpression	& dval1		103874	0					
ANR	103946	UnaryOperator	&		103874	0					
ANR	103947	Identifier	dval1		103874	1					
ANR	103948	Argument	0		103874	4					
ANR	103949	PrimaryExpression	0		103874	0					
ANR	103950	Argument	& oflow1		103874	5					
ANR	103951	UnaryOperationExpression	& oflow1		103874	0					
ANR	103952	UnaryOperator	&		103874	0					
ANR	103953	Identifier	oflow1		103874	1					
ANR	103954	AssignmentExpression	"ret2 = is_numeric_string_ex ( Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , & lval2 , & dval2 , 0 , & oflow2 )"		103874	1		=			
ANR	103955	Identifier	ret2		103874	0					
ANR	103956	CallExpression	"is_numeric_string_ex ( Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , & lval2 , & dval2 , 0 , & oflow2 )"		103874	1					
ANR	103957	Callee	is_numeric_string_ex		103874	0					
ANR	103958	Identifier	is_numeric_string_ex		103874	0					
ANR	103959	ArgumentList	Z_STRVAL_P ( s2 )		103874	1					
ANR	103960	Argument	Z_STRVAL_P ( s2 )		103874	0					
ANR	103961	CallExpression	Z_STRVAL_P ( s2 )		103874	0					
ANR	103962	Callee	Z_STRVAL_P		103874	0					
ANR	103963	Identifier	Z_STRVAL_P		103874	0					
ANR	103964	ArgumentList	s2		103874	1					
ANR	103965	Argument	s2		103874	0					
ANR	103966	Identifier	s2		103874	0					
ANR	103967	Argument	Z_STRLEN_P ( s2 )		103874	1					
ANR	103968	CallExpression	Z_STRLEN_P ( s2 )		103874	0					
ANR	103969	Callee	Z_STRLEN_P		103874	0					
ANR	103970	Identifier	Z_STRLEN_P		103874	0					
ANR	103971	ArgumentList	s2		103874	1					
ANR	103972	Argument	s2		103874	0					
ANR	103973	Identifier	s2		103874	0					
ANR	103974	Argument	& lval2		103874	2					
ANR	103975	UnaryOperationExpression	& lval2		103874	0					
ANR	103976	UnaryOperator	&		103874	0					
ANR	103977	Identifier	lval2		103874	1					
ANR	103978	Argument	& dval2		103874	3					
ANR	103979	UnaryOperationExpression	& dval2		103874	0					
ANR	103980	UnaryOperator	&		103874	0					
ANR	103981	Identifier	dval2		103874	1					
ANR	103982	Argument	0		103874	4					
ANR	103983	PrimaryExpression	0		103874	0					
ANR	103984	Argument	& oflow2		103874	5					
ANR	103985	UnaryOperationExpression	& oflow2		103874	0					
ANR	103986	UnaryOperator	&		103874	0					
ANR	103987	Identifier	oflow2		103874	1					
ANR	103988	CompoundStatement		8:91:289:289	103874	1					
ANR	103989	IfStatement	if ( oflow1 != 0 && oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) ) )		103874	0					
ANR	103990	Condition	oflow1 != 0 && oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )	2331:6:57845:58021	103874	0	True				
ANR	103991	AndExpression	oflow1 != 0 && oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )		103874	0		&&			
ANR	103992	EqualityExpression	oflow1 != 0		103874	0		!=			
ANR	103993	Identifier	oflow1		103874	0					
ANR	103994	PrimaryExpression	0		103874	1					
ANR	103995	AndExpression	oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )		103874	1		&&			
ANR	103996	EqualityExpression	oflow1 == oflow2		103874	0		==			
ANR	103997	Identifier	oflow1		103874	0					
ANR	103998	Identifier	oflow2		103874	1					
ANR	103999	AndExpression	dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )		103874	1		&&			
ANR	104000	EqualityExpression	dval1 - dval2 == 0.		103874	0		==			
ANR	104001	AdditiveExpression	dval1 - dval2		103874	0		-			
ANR	104002	Identifier	dval1		103874	0					
ANR	104003	Identifier	dval2		103874	1					
ANR	104004	PrimaryExpression	0.		103874	1					
ANR	104005	OrExpression	( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. )		103874	1		||			
ANR	104006	AndExpression	oflow1 == 1 && dval1 > 9007199254740991.		103874	0		&&			
ANR	104007	EqualityExpression	oflow1 == 1		103874	0		==			
ANR	104008	Identifier	oflow1		103874	0					
ANR	104009	PrimaryExpression	1		103874	1					
ANR	104010	RelationalExpression	dval1 > 9007199254740991.		103874	1		>			
ANR	104011	Identifier	dval1		103874	0					
ANR	104012	PrimaryExpression	9007199254740991.		103874	1					
ANR	104013	AndExpression	oflow1 == - 1 && dval1 < - 9007199254740991.		103874	1		&&			
ANR	104014	EqualityExpression	oflow1 == - 1		103874	0		==			
ANR	104015	Identifier	oflow1		103874	0					
ANR	104016	UnaryOperationExpression	- 1		103874	1					
ANR	104017	UnaryOperator	-		103874	0					
ANR	104018	PrimaryExpression	1		103874	1					
ANR	104019	RelationalExpression	dval1 < - 9007199254740991.		103874	1		<			
ANR	104020	Identifier	dval1		103874	0					
ANR	104021	UnaryOperationExpression	- 9007199254740991.		103874	1					
ANR	104022	UnaryOperator	-		103874	0					
ANR	104023	PrimaryExpression	9007199254740991.		103874	1					
ANR	104024	CompoundStatement		12:53:504:504	103874	1					
ANR	104025	GotoStatement	goto string_cmp ;	2339:3:58243:58258	103874	0	True				
ANR	104026	Identifier	string_cmp		103874	0					
ANR	104027	IfStatement	if ( ( ret1 == IS_DOUBLE ) || ( ret2 == IS_DOUBLE ) )		103874	1					
ANR	104028	Condition	( ret1 == IS_DOUBLE ) || ( ret2 == IS_DOUBLE )	2341:6:58270:58307	103874	0	True				
ANR	104029	OrExpression	( ret1 == IS_DOUBLE ) || ( ret2 == IS_DOUBLE )		103874	0		||			
ANR	104030	EqualityExpression	ret1 == IS_DOUBLE		103874	0		==			
ANR	104031	Identifier	ret1		103874	0					
ANR	104032	Identifier	IS_DOUBLE		103874	1					
ANR	104033	EqualityExpression	ret2 == IS_DOUBLE		103874	1		==			
ANR	104034	Identifier	ret2		103874	0					
ANR	104035	Identifier	IS_DOUBLE		103874	1					
ANR	104036	CompoundStatement		20:46:790:790	103874	1					
ANR	104037	IfStatement	if ( ret1 != IS_DOUBLE )		103874	0					
ANR	104038	Condition	ret1 != IS_DOUBLE	2342:7:58319:58333	103874	0	True				
ANR	104039	EqualityExpression	ret1 != IS_DOUBLE		103874	0		!=			
ANR	104040	Identifier	ret1		103874	0					
ANR	104041	Identifier	IS_DOUBLE		103874	1					
ANR	104042	CompoundStatement		21:24:816:816	103874	1					
ANR	104043	IfStatement	if ( oflow2 )		103874	0					
ANR	104044	Condition	oflow2	2343:8:58346:58351	103874	0	True				
ANR	104045	Identifier	oflow2		103874	0					
ANR	104046	CompoundStatement		22:16:834:834	103874	1					
ANR	104047	ExpressionStatement	"ZVAL_LONG ( result , - 1 * oflow2 )"	2345:5:58437:58467	103874	0	True				
ANR	104048	CallExpression	"ZVAL_LONG ( result , - 1 * oflow2 )"		103874	0					
ANR	104049	Callee	ZVAL_LONG		103874	0					
ANR	104050	Identifier	ZVAL_LONG		103874	0					
ANR	104051	ArgumentList	result		103874	1					
ANR	104052	Argument	result		103874	0					
ANR	104053	Identifier	result		103874	0					
ANR	104054	Argument	- 1 * oflow2		103874	1					
ANR	104055	MultiplicativeExpression	- 1 * oflow2		103874	0		*			
ANR	104056	UnaryOperationExpression	- 1		103874	0					
ANR	104057	UnaryOperator	-		103874	0					
ANR	104058	PrimaryExpression	1		103874	1					
ANR	104059	Identifier	oflow2		103874	1					
ANR	104060	ReturnStatement	return ;	2346:5:58474:58480	103874	1	True				
ANR	104061	ExpressionStatement	dval1 = ( double ) lval1	2348:4:58492:58514	103874	1	True				
ANR	104062	AssignmentExpression	dval1 = ( double ) lval1		103874	0		=			
ANR	104063	Identifier	dval1		103874	0					
ANR	104064	CastExpression	( double ) lval1		103874	1					
ANR	104065	CastTarget	double		103874	0					
ANR	104066	Identifier	lval1		103874	1					
ANR	104067	ElseStatement	else		103874	0					
ANR	104068	IfStatement	if ( ret2 != IS_DOUBLE )		103874	0					
ANR	104069	Condition	ret2 != IS_DOUBLE	2349:14:58530:58544	103874	0	True				
ANR	104070	EqualityExpression	ret2 != IS_DOUBLE		103874	0		!=			
ANR	104071	Identifier	ret2		103874	0					
ANR	104072	Identifier	IS_DOUBLE		103874	1					
ANR	104073	CompoundStatement		28:31:1027:1027	103874	1					
ANR	104074	IfStatement	if ( oflow1 )		103874	0					
ANR	104075	Condition	oflow1	2350:8:58557:58562	103874	0	True				
ANR	104076	Identifier	oflow1		103874	0					
ANR	104077	CompoundStatement		29:16:1045:1045	103874	1					
ANR	104078	ExpressionStatement	"ZVAL_LONG ( result , oflow1 )"	2351:5:58572:58597	103874	0	True				
ANR	104079	CallExpression	"ZVAL_LONG ( result , oflow1 )"		103874	0					
ANR	104080	Callee	ZVAL_LONG		103874	0					
ANR	104081	Identifier	ZVAL_LONG		103874	0					
ANR	104082	ArgumentList	result		103874	1					
ANR	104083	Argument	result		103874	0					
ANR	104084	Identifier	result		103874	0					
ANR	104085	Argument	oflow1		103874	1					
ANR	104086	Identifier	oflow1		103874	0					
ANR	104087	ReturnStatement	return ;	2352:5:58604:58610	103874	1	True				
ANR	104088	ExpressionStatement	dval2 = ( double ) lval2	2354:4:58622:58644	103874	1	True				
ANR	104089	AssignmentExpression	dval2 = ( double ) lval2		103874	0		=			
ANR	104090	Identifier	dval2		103874	0					
ANR	104091	CastExpression	( double ) lval2		103874	1					
ANR	104092	CastTarget	double		103874	0					
ANR	104093	Identifier	lval2		103874	1					
ANR	104094	ElseStatement	else		103874	0					
ANR	104095	IfStatement	if ( dval1 == dval2 && ! zend_finite ( dval1 ) )		103874	0					
ANR	104096	Condition	dval1 == dval2 && ! zend_finite ( dval1 )	2355:14:58660:58696	103874	0	True				
ANR	104097	AndExpression	dval1 == dval2 && ! zend_finite ( dval1 )		103874	0		&&			
ANR	104098	EqualityExpression	dval1 == dval2		103874	0		==			
ANR	104099	Identifier	dval1		103874	0					
ANR	104100	Identifier	dval2		103874	1					
ANR	104101	UnaryOperationExpression	! zend_finite ( dval1 )		103874	1					
ANR	104102	UnaryOperator	!		103874	0					
ANR	104103	CallExpression	zend_finite ( dval1 )		103874	1					
ANR	104104	Callee	zend_finite		103874	0					
ANR	104105	Identifier	zend_finite		103874	0					
ANR	104106	ArgumentList	dval1		103874	1					
ANR	104107	Argument	dval1		103874	0					
ANR	104108	Identifier	dval1		103874	0					
ANR	104109	CompoundStatement		34:53:1179:1179	103874	1					
ANR	104110	GotoStatement	goto string_cmp ;	2358:4:58813:58828	103874	0	True				
ANR	104111	Identifier	string_cmp		103874	0					
ANR	104112	ExpressionStatement	Z_DVAL_P ( result ) = dval1 - dval2	2360:3:58838:58870	103874	1	True				
ANR	104113	AssignmentExpression	Z_DVAL_P ( result ) = dval1 - dval2		103874	0		=			
ANR	104114	CallExpression	Z_DVAL_P ( result )		103874	0					
ANR	104115	Callee	Z_DVAL_P		103874	0					
ANR	104116	Identifier	Z_DVAL_P		103874	0					
ANR	104117	ArgumentList	result		103874	1					
ANR	104118	Argument	result		103874	0					
ANR	104119	Identifier	result		103874	0					
ANR	104120	AdditiveExpression	dval1 - dval2		103874	1		-			
ANR	104121	Identifier	dval1		103874	0					
ANR	104122	Identifier	dval2		103874	1					
ANR	104123	ExpressionStatement	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"	2361:3:58875:58931	103874	2	True				
ANR	104124	CallExpression	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"		103874	0					
ANR	104125	Callee	ZVAL_LONG		103874	0					
ANR	104126	Identifier	ZVAL_LONG		103874	0					
ANR	104127	ArgumentList	result		103874	1					
ANR	104128	Argument	result		103874	0					
ANR	104129	Identifier	result		103874	0					
ANR	104130	Argument	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		103874	1					
ANR	104131	CallExpression	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		103874	0					
ANR	104132	Callee	ZEND_NORMALIZE_BOOL		103874	0					
ANR	104133	Identifier	ZEND_NORMALIZE_BOOL		103874	0					
ANR	104134	ArgumentList	Z_DVAL_P ( result )		103874	1					
ANR	104135	Argument	Z_DVAL_P ( result )		103874	0					
ANR	104136	CallExpression	Z_DVAL_P ( result )		103874	0					
ANR	104137	Callee	Z_DVAL_P		103874	0					
ANR	104138	Identifier	Z_DVAL_P		103874	0					
ANR	104139	ArgumentList	result		103874	1					
ANR	104140	Argument	result		103874	0					
ANR	104141	Identifier	result		103874	0					
ANR	104142	ElseStatement	else		103874	0					
ANR	104143	CompoundStatement		41:9:1422:1422	103874	0					
ANR	104144	ExpressionStatement	"ZVAL_LONG ( result , lval1 > lval2 ? 1 : ( lval1 < lval2 ? - 1 : 0 ) )"	2363:3:58981:59044	103874	0	True				
ANR	104145	CallExpression	"ZVAL_LONG ( result , lval1 > lval2 ? 1 : ( lval1 < lval2 ? - 1 : 0 ) )"		103874	0					
ANR	104146	Callee	ZVAL_LONG		103874	0					
ANR	104147	Identifier	ZVAL_LONG		103874	0					
ANR	104148	ArgumentList	result		103874	1					
ANR	104149	Argument	result		103874	0					
ANR	104150	Identifier	result		103874	0					
ANR	104151	Argument	lval1 > lval2 ? 1 : ( lval1 < lval2 ? - 1 : 0 )		103874	1					
ANR	104152	ConditionalExpression	lval1 > lval2 ? 1 : ( lval1 < lval2 ? - 1 : 0 )		103874	0					
ANR	104153	Condition	lval1 > lval2		103874	0					
ANR	104154	RelationalExpression	lval1 > lval2		103874	0		>			
ANR	104155	Identifier	lval1		103874	0					
ANR	104156	Identifier	lval2		103874	1					
ANR	104157	PrimaryExpression	1		103874	1					
ANR	104158	ConditionalExpression	lval1 < lval2 ? - 1 : 0		103874	2					
ANR	104159	Condition	lval1 < lval2		103874	0					
ANR	104160	RelationalExpression	lval1 < lval2		103874	0		<			
ANR	104161	Identifier	lval1		103874	0					
ANR	104162	Identifier	lval2		103874	1					
ANR	104163	UnaryOperationExpression	- 1		103874	1					
ANR	104164	UnaryOperator	-		103874	0					
ANR	104165	PrimaryExpression	1		103874	1					
ANR	104166	PrimaryExpression	0		103874	2					
ANR	104167	ElseStatement	else		103874	0					
ANR	104168	CompoundStatement		44:8:1538:1538	103874	0					
ANR	104169	Label	string_cmp :	2366:0:59060:59070	103874	0	True				
ANR	104170	Identifier	string_cmp		103874	0					
ANR	104171	ExpressionStatement	"Z_LVAL_P ( result ) = zend_binary_zval_strcmp ( s1 , s2 )"	2367:2:59074:59124	103874	1	True				
ANR	104172	AssignmentExpression	"Z_LVAL_P ( result ) = zend_binary_zval_strcmp ( s1 , s2 )"		103874	0		=			
ANR	104173	CallExpression	Z_LVAL_P ( result )		103874	0					
ANR	104174	Callee	Z_LVAL_P		103874	0					
ANR	104175	Identifier	Z_LVAL_P		103874	0					
ANR	104176	ArgumentList	result		103874	1					
ANR	104177	Argument	result		103874	0					
ANR	104178	Identifier	result		103874	0					
ANR	104179	CallExpression	"zend_binary_zval_strcmp ( s1 , s2 )"		103874	1					
ANR	104180	Callee	zend_binary_zval_strcmp		103874	0					
ANR	104181	Identifier	zend_binary_zval_strcmp		103874	0					
ANR	104182	ArgumentList	s1		103874	1					
ANR	104183	Argument	s1		103874	0					
ANR	104184	Identifier	s1		103874	0					
ANR	104185	Argument	s2		103874	1					
ANR	104186	Identifier	s2		103874	0					
ANR	104187	ExpressionStatement	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_LVAL_P ( result ) ) )"	2368:2:59128:59184	103874	2	True				
ANR	104188	CallExpression	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_LVAL_P ( result ) ) )"		103874	0					
ANR	104189	Callee	ZVAL_LONG		103874	0					
ANR	104190	Identifier	ZVAL_LONG		103874	0					
ANR	104191	ArgumentList	result		103874	1					
ANR	104192	Argument	result		103874	0					
ANR	104193	Identifier	result		103874	0					
ANR	104194	Argument	ZEND_NORMALIZE_BOOL ( Z_LVAL_P ( result ) )		103874	1					
ANR	104195	CallExpression	ZEND_NORMALIZE_BOOL ( Z_LVAL_P ( result ) )		103874	0					
ANR	104196	Callee	ZEND_NORMALIZE_BOOL		103874	0					
ANR	104197	Identifier	ZEND_NORMALIZE_BOOL		103874	0					
ANR	104198	ArgumentList	Z_LVAL_P ( result )		103874	1					
ANR	104199	Argument	Z_LVAL_P ( result )		103874	0					
ANR	104200	CallExpression	Z_LVAL_P ( result )		103874	0					
ANR	104201	Callee	Z_LVAL_P		103874	0					
ANR	104202	Identifier	Z_LVAL_P		103874	0					
ANR	104203	ArgumentList	result		103874	1					
ANR	104204	Argument	result		103874	0					
ANR	104205	Identifier	result		103874	0					
ANR	104206	ReturnType	ZEND_API void		103874	1					
ANR	104207	Identifier	zendi_smart_strcmp		103874	2					
ANR	104208	ParameterList	"zval * result , zval * s1 , zval * s2"		103874	3					
ANR	104209	Parameter	zval * result	2321:33:57475:57486	103874	0	True				
ANR	104210	ParameterType	zval *		103874	0					
ANR	104211	Identifier	result		103874	1					
ANR	104212	Parameter	zval * s1	2321:47:57489:57496	103874	1	True				
ANR	104213	ParameterType	zval *		103874	0					
ANR	104214	Identifier	s1		103874	1					
ANR	104215	Parameter	zval * s2	2321:57:57499:57506	103874	2	True				
ANR	104216	ParameterType	zval *		103874	0					
ANR	104217	Identifier	s2		103874	1					
ANR	104218	CFGEntryNode	ENTRY		103874		True				
ANR	104219	CFGExitNode	EXIT		103874		True				
ANR	104220	Symbol	& oflow1		103874						
ANR	104221	Symbol	zend_finite		103874						
ANR	104222	Symbol	& oflow2		103874						
ANR	104223	Symbol	ret2		103874						
ANR	104224	Symbol	ret1		103874						
ANR	104225	Symbol	oflow1		103874						
ANR	104226	Symbol	oflow2		103874						
ANR	104227	Symbol	result		103874						
ANR	104228	Symbol	& lval1		103874						
ANR	104229	Symbol	& lval2		103874						
ANR	104230	Symbol	ZEND_NORMALIZE_BOOL		103874						
ANR	104231	Symbol	& dval1		103874						
ANR	104232	Symbol	Z_STRLEN_P		103874						
ANR	104233	Symbol	is_numeric_string_ex		103874						
ANR	104234	Symbol	& dval2		103874						
ANR	104235	Symbol	s1		103874						
ANR	104236	Symbol	s2		103874						
ANR	104237	Symbol	zend_binary_zval_strcmp		103874						
ANR	104238	Symbol	dval1		103874						
ANR	104239	Symbol	dval2		103874						
ANR	104240	Symbol	Z_STRVAL_P		103874						
ANR	104241	Symbol	Z_DVAL_P		103874						
ANR	104242	Symbol	Z_LVAL_P		103874						
ANR	104243	Symbol	lval2		103874						
ANR	104244	Symbol	lval1		103874						
ANR	104245	Symbol	IS_DOUBLE		103874						
ANR	104246	DeclStmt									
ANR	104247	Decl							zval	zval	result
