command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2159844	File	data/converged/CVE-2017-11142_php-src/main_snprintf.c								
ANR	2159845	Function	__cvt	71:0:2677:3851							
ANR	2159846	FunctionDef	"__cvt (double value , int ndigit , int * decpt , int * sign , int fmode , int pad)"		2159845	0					
ANR	2159847	CompoundStatement		72:0:2776:3851	2159845	0					
ANR	2159848	Statement	register	73:1:2779:2786	2159845	0	True				
ANR	2159849	IdentifierDeclStatement	char * s = NULL ;	73:10:2788:2802	2159845	1	True				
ANR	2159850	IdentifierDecl	* s = NULL		2159845	0					
ANR	2159851	IdentifierDeclType	char *		2159845	0					
ANR	2159852	Identifier	s		2159845	1					
ANR	2159853	AssignmentExpression	* s = NULL		2159845	2		=			
ANR	2159854	Identifier	NULL		2159845	0					
ANR	2159855	Identifier	NULL		2159845	1					
ANR	2159856	IdentifierDeclStatement	"char * p , * rve , c ;"	74:1:2805:2821	2159845	2	True				
ANR	2159857	IdentifierDecl	* p		2159845	0					
ANR	2159858	IdentifierDeclType	char *		2159845	0					
ANR	2159859	Identifier	p		2159845	1					
ANR	2159860	IdentifierDecl	* rve		2159845	1					
ANR	2159861	IdentifierDeclType	char *		2159845	0					
ANR	2159862	Identifier	rve		2159845	1					
ANR	2159863	IdentifierDecl	c		2159845	2					
ANR	2159864	IdentifierDeclType	char		2159845	0					
ANR	2159865	Identifier	c		2159845	1					
ANR	2159866	IdentifierDeclStatement	size_t siz ;	75:1:2824:2834	2159845	3	True				
ANR	2159867	IdentifierDecl	siz		2159845	0					
ANR	2159868	IdentifierDeclType	size_t		2159845	0					
ANR	2159869	Identifier	siz		2159845	1					
ANR	2159870	IfStatement	if ( ndigit < 0 )		2159845	4					
ANR	2159871	Condition	ndigit < 0	77:5:2842:2851	2159845	0	True				
ANR	2159872	RelationalExpression	ndigit < 0		2159845	0		<			
ANR	2159873	Identifier	ndigit		2159845	0					
ANR	2159874	PrimaryExpression	0		2159845	1					
ANR	2159875	CompoundStatement		6:17:77:77	2159845	1					
ANR	2159876	ExpressionStatement	siz = - ndigit + 1	78:2:2858:2875	2159845	0	True				
ANR	2159877	AssignmentExpression	siz = - ndigit + 1		2159845	0		=			
ANR	2159878	Identifier	siz		2159845	0					
ANR	2159879	AdditiveExpression	- ndigit + 1		2159845	1		+			
ANR	2159880	UnaryOperationExpression	- ndigit		2159845	0					
ANR	2159881	UnaryOperator	-		2159845	0					
ANR	2159882	Identifier	ndigit		2159845	1					
ANR	2159883	PrimaryExpression	1		2159845	1					
ANR	2159884	ElseStatement	else		2159845	0					
ANR	2159885	CompoundStatement		8:8:108:108	2159845	0					
ANR	2159886	ExpressionStatement	siz = ndigit + 1	80:2:2889:2905	2159845	0	True				
ANR	2159887	AssignmentExpression	siz = ndigit + 1		2159845	0		=			
ANR	2159888	Identifier	siz		2159845	0					
ANR	2159889	AdditiveExpression	ndigit + 1		2159845	1		+			
ANR	2159890	Identifier	ndigit		2159845	0					
ANR	2159891	PrimaryExpression	1		2159845	1					
ANR	2159892	IfStatement	if ( value == 0.0 )		2159845	5					
ANR	2159893	Condition	value == 0.0	84:5:2981:2992	2159845	0	True				
ANR	2159894	EqualityExpression	value == 0.0		2159845	0		==			
ANR	2159895	Identifier	value		2159845	0					
ANR	2159896	PrimaryExpression	0.0		2159845	1					
ANR	2159897	CompoundStatement		13:19:218:218	2159845	1					
ANR	2159898	ExpressionStatement	* decpt = 1 - fmode	85:2:2999:3017	2159845	0	True				
ANR	2159899	AssignmentExpression	* decpt = 1 - fmode		2159845	0		=			
ANR	2159900	UnaryOperationExpression	* decpt		2159845	0					
ANR	2159901	UnaryOperator	*		2159845	0					
ANR	2159902	Identifier	decpt		2159845	1					
ANR	2159903	AdditiveExpression	1 - fmode		2159845	1		-			
ANR	2159904	PrimaryExpression	1		2159845	0					
ANR	2159905	Identifier	fmode		2159845	1					
ANR	2159906	ExpressionStatement	* sign = 0	86:2:3048:3057	2159845	1	True				
ANR	2159907	AssignmentExpression	* sign = 0		2159845	0		=			
ANR	2159908	UnaryOperationExpression	* sign		2159845	0					
ANR	2159909	UnaryOperator	*		2159845	0					
ANR	2159910	Identifier	sign		2159845	1					
ANR	2159911	PrimaryExpression	0		2159845	1					
ANR	2159912	IfStatement	if ( ( rve = s = ( char * ) malloc ( ndigit ? siz : 2 ) ) == NULL )		2159845	2					
ANR	2159913	Condition	( rve = s = ( char * ) malloc ( ndigit ? siz : 2 ) ) == NULL	87:6:3065:3112	2159845	0	True				
ANR	2159914	EqualityExpression	( rve = s = ( char * ) malloc ( ndigit ? siz : 2 ) ) == NULL		2159845	0		==			
ANR	2159915	AssignmentExpression	rve = s = ( char * ) malloc ( ndigit ? siz : 2 )		2159845	0		=			
ANR	2159916	Identifier	rve		2159845	0					
ANR	2159917	AssignmentExpression	s = ( char * ) malloc ( ndigit ? siz : 2 )		2159845	1		=			
ANR	2159918	Identifier	s		2159845	0					
ANR	2159919	CastExpression	( char * ) malloc ( ndigit ? siz : 2 )		2159845	1					
ANR	2159920	CastTarget	char *		2159845	0					
ANR	2159921	CallExpression	malloc ( ndigit ? siz : 2 )		2159845	1					
ANR	2159922	Callee	malloc		2159845	0					
ANR	2159923	Identifier	malloc		2159845	0					
ANR	2159924	ArgumentList	ndigit ? siz : 2		2159845	1					
ANR	2159925	Argument	ndigit ? siz : 2		2159845	0					
ANR	2159926	ConditionalExpression	ndigit ? siz : 2		2159845	0					
ANR	2159927	Condition	ndigit		2159845	0					
ANR	2159928	Identifier	ndigit		2159845	0					
ANR	2159929	Identifier	siz		2159845	1					
ANR	2159930	PrimaryExpression	2		2159845	2					
ANR	2159931	Identifier	NULL		2159845	1					
ANR	2159932	CompoundStatement		16:56:338:338	2159845	1					
ANR	2159933	ReturnStatement	return ( NULL ) ;	88:3:3120:3132	2159845	0	True				
ANR	2159934	Identifier	NULL		2159845	0					
ANR	2159935	ExpressionStatement	* rve ++ = '0'	90:2:3140:3152	2159845	3	True				
ANR	2159936	AssignmentExpression	* rve ++ = '0'		2159845	0		=			
ANR	2159937	UnaryOperationExpression	* rve ++		2159845	0					
ANR	2159938	UnaryOperator	*		2159845	0					
ANR	2159939	PostIncDecOperationExpression	rve ++		2159845	1					
ANR	2159940	Identifier	rve		2159845	0					
ANR	2159941	IncDec	++		2159845	1					
ANR	2159942	PrimaryExpression	'0'		2159845	1					
ANR	2159943	ExpressionStatement	* rve = '\\0'	91:2:3156:3167	2159845	4	True				
ANR	2159944	AssignmentExpression	* rve = '\\0'		2159845	0		=			
ANR	2159945	UnaryOperationExpression	* rve		2159845	0					
ANR	2159946	UnaryOperator	*		2159845	0					
ANR	2159947	Identifier	rve		2159845	1					
ANR	2159948	PrimaryExpression	'\\0'		2159845	1					
ANR	2159949	IfStatement	if ( ! ndigit )		2159845	5					
ANR	2159950	Condition	! ndigit	92:6:3175:3181	2159845	0	True				
ANR	2159951	UnaryOperationExpression	! ndigit		2159845	0					
ANR	2159952	UnaryOperator	!		2159845	0					
ANR	2159953	Identifier	ndigit		2159845	1					
ANR	2159954	CompoundStatement		21:15:407:407	2159845	1					
ANR	2159955	ReturnStatement	return ( s ) ;	93:3:3189:3198	2159845	0	True				
ANR	2159956	Identifier	s		2159845	0					
ANR	2159957	ElseStatement	else		2159845	0					
ANR	2159958	CompoundStatement		24:8:435:435	2159845	0					
ANR	2159959	ExpressionStatement	"p = zend_dtoa ( value , fmode + 2 , ndigit , decpt , sign , & rve )"	96:2:3216:3274	2159845	0	True				
ANR	2159960	AssignmentExpression	"p = zend_dtoa ( value , fmode + 2 , ndigit , decpt , sign , & rve )"		2159845	0		=			
ANR	2159961	Identifier	p		2159845	0					
ANR	2159962	CallExpression	"zend_dtoa ( value , fmode + 2 , ndigit , decpt , sign , & rve )"		2159845	1					
ANR	2159963	Callee	zend_dtoa		2159845	0					
ANR	2159964	Identifier	zend_dtoa		2159845	0					
ANR	2159965	ArgumentList	value		2159845	1					
ANR	2159966	Argument	value		2159845	0					
ANR	2159967	Identifier	value		2159845	0					
ANR	2159968	Argument	fmode + 2		2159845	1					
ANR	2159969	AdditiveExpression	fmode + 2		2159845	0		+			
ANR	2159970	Identifier	fmode		2159845	0					
ANR	2159971	PrimaryExpression	2		2159845	1					
ANR	2159972	Argument	ndigit		2159845	2					
ANR	2159973	Identifier	ndigit		2159845	0					
ANR	2159974	Argument	decpt		2159845	3					
ANR	2159975	Identifier	decpt		2159845	0					
ANR	2159976	Argument	sign		2159845	4					
ANR	2159977	Identifier	sign		2159845	0					
ANR	2159978	Argument	& rve		2159845	5					
ANR	2159979	UnaryOperationExpression	& rve		2159845	0					
ANR	2159980	UnaryOperator	&		2159845	0					
ANR	2159981	Identifier	rve		2159845	1					
ANR	2159982	IfStatement	if ( * decpt == 9999 )		2159845	1					
ANR	2159983	Condition	* decpt == 9999	97:6:3282:3295	2159845	0	True				
ANR	2159984	EqualityExpression	* decpt == 9999		2159845	0		==			
ANR	2159985	UnaryOperationExpression	* decpt		2159845	0					
ANR	2159986	UnaryOperator	*		2159845	0					
ANR	2159987	Identifier	decpt		2159845	1					
ANR	2159988	PrimaryExpression	9999		2159845	1					
ANR	2159989	CompoundStatement		26:22:521:521	2159845	1					
ANR	2159990	ExpressionStatement	* decpt = 0	99:3:3363:3373	2159845	0	True				
ANR	2159991	AssignmentExpression	* decpt = 0		2159845	0		=			
ANR	2159992	UnaryOperationExpression	* decpt		2159845	0					
ANR	2159993	UnaryOperator	*		2159845	0					
ANR	2159994	Identifier	decpt		2159845	1					
ANR	2159995	PrimaryExpression	0		2159845	1					
ANR	2159996	ExpressionStatement	c = * p	100:3:3378:3384	2159845	1	True				
ANR	2159997	AssignmentExpression	c = * p		2159845	0		=			
ANR	2159998	Identifier	c		2159845	0					
ANR	2159999	UnaryOperationExpression	* p		2159845	1					
ANR	2160000	UnaryOperator	*		2159845	0					
ANR	2160001	Identifier	p		2159845	1					
ANR	2160002	ExpressionStatement	zend_freedtoa ( p )	101:3:3389:3405	2159845	2	True				
ANR	2160003	CallExpression	zend_freedtoa ( p )		2159845	0					
ANR	2160004	Callee	zend_freedtoa		2159845	0					
ANR	2160005	Identifier	zend_freedtoa		2159845	0					
ANR	2160006	ArgumentList	p		2159845	1					
ANR	2160007	Argument	p		2159845	0					
ANR	2160008	Identifier	p		2159845	0					
ANR	2160009	ReturnStatement	"return strdup ( ( c == 'I' ? ""INF"" : ""NAN"" ) ) ;"	102:3:3410:3451	2159845	3	True				
ANR	2160010	CallExpression	"strdup ( ( c == 'I' ? ""INF"" : ""NAN"" ) )"		2159845	0					
ANR	2160011	Callee	strdup		2159845	0					
ANR	2160012	Identifier	strdup		2159845	0					
ANR	2160013	ArgumentList	"c == 'I' ? ""INF"" : ""NAN"""		2159845	1					
ANR	2160014	Argument	"c == 'I' ? ""INF"" : ""NAN"""		2159845	0					
ANR	2160015	ConditionalExpression	"c == 'I' ? ""INF"" : ""NAN"""		2159845	0					
ANR	2160016	Condition	c == 'I'		2159845	0					
ANR	2160017	EqualityExpression	c == 'I'		2159845	0		==			
ANR	2160018	Identifier	c		2159845	0					
ANR	2160019	PrimaryExpression	'I'		2159845	1					
ANR	2160020	PrimaryExpression	"""INF"""		2159845	1					
ANR	2160021	PrimaryExpression	"""NAN"""		2159845	2					
ANR	2160022	IfStatement	if ( pad && fmode )		2159845	2					
ANR	2160023	Condition	pad && fmode	105:6:3524:3535	2159845	0	True				
ANR	2160024	AndExpression	pad && fmode		2159845	0		&&			
ANR	2160025	Identifier	pad		2159845	0					
ANR	2160026	Identifier	fmode		2159845	1					
ANR	2160027	CompoundStatement		34:20:761:761	2159845	1					
ANR	2160028	ExpressionStatement	siz += * decpt	106:3:3543:3556	2159845	0	True				
ANR	2160029	AssignmentExpression	siz += * decpt		2159845	0		+=			
ANR	2160030	Identifier	siz		2159845	0					
ANR	2160031	UnaryOperationExpression	* decpt		2159845	1					
ANR	2160032	UnaryOperator	*		2159845	0					
ANR	2160033	Identifier	decpt		2159845	1					
ANR	2160034	IfStatement	if ( ( s = ( char * ) malloc ( siz + 1 ) ) == NULL )		2159845	3					
ANR	2160035	Condition	( s = ( char * ) malloc ( siz + 1 ) ) == NULL	108:6:3568:3602	2159845	0	True				
ANR	2160036	EqualityExpression	( s = ( char * ) malloc ( siz + 1 ) ) == NULL		2159845	0		==			
ANR	2160037	AssignmentExpression	s = ( char * ) malloc ( siz + 1 )		2159845	0		=			
ANR	2160038	Identifier	s		2159845	0					
ANR	2160039	CastExpression	( char * ) malloc ( siz + 1 )		2159845	1					
ANR	2160040	CastTarget	char *		2159845	0					
ANR	2160041	CallExpression	malloc ( siz + 1 )		2159845	1					
ANR	2160042	Callee	malloc		2159845	0					
ANR	2160043	Identifier	malloc		2159845	0					
ANR	2160044	ArgumentList	siz + 1		2159845	1					
ANR	2160045	Argument	siz + 1		2159845	0					
ANR	2160046	AdditiveExpression	siz + 1		2159845	0		+			
ANR	2160047	Identifier	siz		2159845	0					
ANR	2160048	PrimaryExpression	1		2159845	1					
ANR	2160049	Identifier	NULL		2159845	1					
ANR	2160050	CompoundStatement		37:43:828:828	2159845	1					
ANR	2160051	ExpressionStatement	zend_freedtoa ( p )	109:3:3610:3626	2159845	0	True				
ANR	2160052	CallExpression	zend_freedtoa ( p )		2159845	0					
ANR	2160053	Callee	zend_freedtoa		2159845	0					
ANR	2160054	Identifier	zend_freedtoa		2159845	0					
ANR	2160055	ArgumentList	p		2159845	1					
ANR	2160056	Argument	p		2159845	0					
ANR	2160057	Identifier	p		2159845	0					
ANR	2160058	ReturnStatement	return ( NULL ) ;	110:3:3631:3643	2159845	1	True				
ANR	2160059	Identifier	NULL		2159845	0					
ANR	2160060	ExpressionStatement	"( void ) strlcpy ( s , p , siz )"	112:2:3651:3676	2159845	4	True				
ANR	2160061	CastExpression	"( void ) strlcpy ( s , p , siz )"		2159845	0					
ANR	2160062	CastTarget	void		2159845	0					
ANR	2160063	CallExpression	"strlcpy ( s , p , siz )"		2159845	1					
ANR	2160064	Callee	strlcpy		2159845	0					
ANR	2160065	Identifier	strlcpy		2159845	0					
ANR	2160066	ArgumentList	s		2159845	1					
ANR	2160067	Argument	s		2159845	0					
ANR	2160068	Identifier	s		2159845	0					
ANR	2160069	Argument	p		2159845	1					
ANR	2160070	Identifier	p		2159845	0					
ANR	2160071	Argument	siz		2159845	2					
ANR	2160072	Identifier	siz		2159845	0					
ANR	2160073	ExpressionStatement	rve = s + ( rve - p )	113:2:3680:3699	2159845	5	True				
ANR	2160074	AssignmentExpression	rve = s + ( rve - p )		2159845	0		=			
ANR	2160075	Identifier	rve		2159845	0					
ANR	2160076	AdditiveExpression	s + ( rve - p )		2159845	1		+			
ANR	2160077	Identifier	s		2159845	0					
ANR	2160078	AdditiveExpression	rve - p		2159845	1		-			
ANR	2160079	Identifier	rve		2159845	0					
ANR	2160080	Identifier	p		2159845	1					
ANR	2160081	ExpressionStatement	zend_freedtoa ( p )	114:2:3703:3719	2159845	6	True				
ANR	2160082	CallExpression	zend_freedtoa ( p )		2159845	0					
ANR	2160083	Callee	zend_freedtoa		2159845	0					
ANR	2160084	Identifier	zend_freedtoa		2159845	0					
ANR	2160085	ArgumentList	p		2159845	1					
ANR	2160086	Argument	p		2159845	0					
ANR	2160087	Identifier	p		2159845	0					
ANR	2160088	IfStatement	if ( pad )		2159845	6					
ANR	2160089	Condition	pad	118:5:3756:3758	2159845	0	True				
ANR	2160090	Identifier	pad		2159845	0					
ANR	2160091	CompoundStatement		47:10:984:984	2159845	1					
ANR	2160092	ExpressionStatement	siz -= rve - s	119:2:3765:3779	2159845	0	True				
ANR	2160093	AssignmentExpression	siz -= rve - s		2159845	0		-=			
ANR	2160094	Identifier	siz		2159845	0					
ANR	2160095	AdditiveExpression	rve - s		2159845	1		-			
ANR	2160096	Identifier	rve		2159845	0					
ANR	2160097	Identifier	s		2159845	1					
ANR	2160098	WhileStatement	while ( -- siz )		2159845	1					
ANR	2160099	Condition	-- siz	120:9:3790:3794	2159845	0	True				
ANR	2160100	UnaryExpression	-- siz		2159845	0					
ANR	2160101	IncDec	--		2159845	0					
ANR	2160102	Identifier	siz		2159845	1					
ANR	2160103	CompoundStatement		49:16:1020:1020	2159845	1					
ANR	2160104	ExpressionStatement	* rve ++ = '0'	121:3:3802:3814	2159845	0	True				
ANR	2160105	AssignmentExpression	* rve ++ = '0'		2159845	0		=			
ANR	2160106	UnaryOperationExpression	* rve ++		2159845	0					
ANR	2160107	UnaryOperator	*		2159845	0					
ANR	2160108	PostIncDecOperationExpression	rve ++		2159845	1					
ANR	2160109	Identifier	rve		2159845	0					
ANR	2160110	IncDec	++		2159845	1					
ANR	2160111	PrimaryExpression	'0'		2159845	1					
ANR	2160112	ExpressionStatement	* rve = '\\0'	123:2:3822:3833	2159845	2	True				
ANR	2160113	AssignmentExpression	* rve = '\\0'		2159845	0		=			
ANR	2160114	UnaryOperationExpression	* rve		2159845	0					
ANR	2160115	UnaryOperator	*		2159845	0					
ANR	2160116	Identifier	rve		2159845	1					
ANR	2160117	PrimaryExpression	'\\0'		2159845	1					
ANR	2160118	ReturnStatement	return ( s ) ;	126:1:3840:3849	2159845	7	True				
ANR	2160119	Identifier	s		2159845	0					
ANR	2160120	ReturnType	static char *		2159845	1					
ANR	2160121	Identifier	__cvt		2159845	2					
ANR	2160122	ParameterList	"double value , int ndigit , int * decpt , int * sign , int fmode , int pad"		2159845	3					
ANR	2160123	Parameter	double value	71:20:2697:2708	2159845	0	True				
ANR	2160124	ParameterType	double		2159845	0					
ANR	2160125	Identifier	value		2159845	1					
ANR	2160126	Parameter	int ndigit	71:34:2711:2720	2159845	1	True				
ANR	2160127	ParameterType	int		2159845	0					
ANR	2160128	Identifier	ndigit		2159845	1					
ANR	2160129	Parameter	int * decpt	71:46:2723:2732	2159845	2	True				
ANR	2160130	ParameterType	int *		2159845	0					
ANR	2160131	Identifier	decpt		2159845	1					
ANR	2160132	Parameter	int * sign	71:58:2735:2743	2159845	3	True				
ANR	2160133	ParameterType	int *		2159845	0					
ANR	2160134	Identifier	sign		2159845	1					
ANR	2160135	Parameter	int fmode	71:69:2746:2754	2159845	4	True				
ANR	2160136	ParameterType	int		2159845	0					
ANR	2160137	Identifier	fmode		2159845	1					
ANR	2160138	Parameter	int pad	71:80:2757:2763	2159845	5	True				
ANR	2160139	ParameterType	int		2159845	0					
ANR	2160140	Identifier	pad		2159845	1					
ANR	2160141	CFGEntryNode	ENTRY		2159845		True				
ANR	2160142	CFGExitNode	EXIT		2159845		True				
ANR	2160143	Symbol	rve		2159845						
ANR	2160144	Symbol	& rve		2159845						
ANR	2160145	Symbol	* decpt		2159845						
ANR	2160146	Symbol	malloc		2159845						
ANR	2160147	Symbol	NULL		2159845						
ANR	2160148	Symbol	c		2159845						
ANR	2160149	Symbol	siz		2159845						
ANR	2160150	Symbol	sign		2159845						
ANR	2160151	Symbol	* rve		2159845						
ANR	2160152	Symbol	zend_dtoa		2159845						
ANR	2160153	Symbol	p		2159845						
ANR	2160154	Symbol	pad		2159845						
ANR	2160155	Symbol	s		2159845						
ANR	2160156	Symbol	decpt		2159845						
ANR	2160157	Symbol	* sign		2159845						
ANR	2160158	Symbol	ndigit		2159845						
ANR	2160159	Symbol	fmode		2159845						
ANR	2160160	Symbol	* p		2159845						
ANR	2160161	Symbol	* rve ++		2159845						
ANR	2160162	Symbol	strdup		2159845						
ANR	2160163	Symbol	value		2159845						
ANR	2160164	Function	php_ecvt	130:0:3864:4004							
ANR	2160165	FunctionDef	"php_ecvt (double value , int ndigit , int * decpt , int * sign)"		2160164	0					
ANR	2160166	CompoundStatement		131:0:3952:4004	2160164	0					
ANR	2160167	ReturnStatement	"return ( __cvt ( value , ndigit , decpt , sign , 0 , 1 ) ) ;"	132:1:3955:4002	2160164	0	True				
ANR	2160168	CallExpression	"__cvt ( value , ndigit , decpt , sign , 0 , 1 )"		2160164	0					
ANR	2160169	Callee	__cvt		2160164	0					
ANR	2160170	Identifier	__cvt		2160164	0					
ANR	2160171	ArgumentList	value		2160164	1					
ANR	2160172	Argument	value		2160164	0					
ANR	2160173	Identifier	value		2160164	0					
ANR	2160174	Argument	ndigit		2160164	1					
ANR	2160175	Identifier	ndigit		2160164	0					
ANR	2160176	Argument	decpt		2160164	2					
ANR	2160177	Identifier	decpt		2160164	0					
ANR	2160178	Argument	sign		2160164	3					
ANR	2160179	Identifier	sign		2160164	0					
ANR	2160180	Argument	0		2160164	4					
ANR	2160181	PrimaryExpression	0		2160164	0					
ANR	2160182	Argument	1		2160164	5					
ANR	2160183	PrimaryExpression	1		2160164	0					
ANR	2160184	ReturnType	static inline char *		2160164	1					
ANR	2160185	Identifier	php_ecvt		2160164	2					
ANR	2160186	ParameterList	"double value , int ndigit , int * decpt , int * sign"		2160164	3					
ANR	2160187	Parameter	double value	130:29:3893:3904	2160164	0	True				
ANR	2160188	ParameterType	double		2160164	0					
ANR	2160189	Identifier	value		2160164	1					
ANR	2160190	Parameter	int ndigit	130:43:3907:3916	2160164	1	True				
ANR	2160191	ParameterType	int		2160164	0					
ANR	2160192	Identifier	ndigit		2160164	1					
ANR	2160193	Parameter	int * decpt	130:55:3919:3928	2160164	2	True				
ANR	2160194	ParameterType	int *		2160164	0					
ANR	2160195	Identifier	decpt		2160164	1					
ANR	2160196	Parameter	int * sign	130:67:3931:3939	2160164	3	True				
ANR	2160197	ParameterType	int *		2160164	0					
ANR	2160198	Identifier	sign		2160164	1					
ANR	2160199	CFGEntryNode	ENTRY		2160164		True				
ANR	2160200	CFGExitNode	EXIT		2160164		True				
ANR	2160201	Symbol	decpt		2160164						
ANR	2160202	Symbol	__cvt		2160164						
ANR	2160203	Symbol	ndigit		2160164						
ANR	2160204	Symbol	sign		2160164						
ANR	2160205	Symbol	value		2160164						
ANR	2160206	Function	php_fcvt	136:0:4017:4160							
ANR	2160207	FunctionDef	"php_fcvt (double value , int ndigit , int * decpt , int * sign)"		2160206	0					
ANR	2160208	CompoundStatement		137:0:4105:4160	2160206	0					
ANR	2160209	ReturnStatement	"return ( __cvt ( value , ndigit , decpt , sign , 1 , 1 ) ) ;"	138:4:4111:4158	2160206	0	True				
ANR	2160210	CallExpression	"__cvt ( value , ndigit , decpt , sign , 1 , 1 )"		2160206	0					
ANR	2160211	Callee	__cvt		2160206	0					
ANR	2160212	Identifier	__cvt		2160206	0					
ANR	2160213	ArgumentList	value		2160206	1					
ANR	2160214	Argument	value		2160206	0					
ANR	2160215	Identifier	value		2160206	0					
ANR	2160216	Argument	ndigit		2160206	1					
ANR	2160217	Identifier	ndigit		2160206	0					
ANR	2160218	Argument	decpt		2160206	2					
ANR	2160219	Identifier	decpt		2160206	0					
ANR	2160220	Argument	sign		2160206	3					
ANR	2160221	Identifier	sign		2160206	0					
ANR	2160222	Argument	1		2160206	4					
ANR	2160223	PrimaryExpression	1		2160206	0					
ANR	2160224	Argument	1		2160206	5					
ANR	2160225	PrimaryExpression	1		2160206	0					
ANR	2160226	ReturnType	static inline char *		2160206	1					
ANR	2160227	Identifier	php_fcvt		2160206	2					
ANR	2160228	ParameterList	"double value , int ndigit , int * decpt , int * sign"		2160206	3					
ANR	2160229	Parameter	double value	136:29:4046:4057	2160206	0	True				
ANR	2160230	ParameterType	double		2160206	0					
ANR	2160231	Identifier	value		2160206	1					
ANR	2160232	Parameter	int ndigit	136:43:4060:4069	2160206	1	True				
ANR	2160233	ParameterType	int		2160206	0					
ANR	2160234	Identifier	ndigit		2160206	1					
ANR	2160235	Parameter	int * decpt	136:55:4072:4081	2160206	2	True				
ANR	2160236	ParameterType	int *		2160206	0					
ANR	2160237	Identifier	decpt		2160206	1					
ANR	2160238	Parameter	int * sign	136:67:4084:4092	2160206	3	True				
ANR	2160239	ParameterType	int *		2160206	0					
ANR	2160240	Identifier	sign		2160206	1					
ANR	2160241	CFGEntryNode	ENTRY		2160206		True				
ANR	2160242	CFGExitNode	EXIT		2160206		True				
ANR	2160243	Symbol	decpt		2160206						
ANR	2160244	Symbol	__cvt		2160206						
ANR	2160245	Symbol	ndigit		2160206						
ANR	2160246	Symbol	sign		2160206						
ANR	2160247	Symbol	value		2160206						
ANR	2160248	Function	php_gcvt	142:0:4173:6154							
ANR	2160249	FunctionDef	"php_gcvt (double value , int ndigit , char dec_point , char exponent , char * buf)"		2160248	0					
ANR	2160250	CompoundStatement		143:0:4273:6154	2160248	0					
ANR	2160251	IdentifierDeclStatement	"char * digits , * dst , * src ;"	144:1:4276:4300	2160248	0	True				
ANR	2160252	IdentifierDecl	* digits		2160248	0					
ANR	2160253	IdentifierDeclType	char *		2160248	0					
ANR	2160254	Identifier	digits		2160248	1					
ANR	2160255	IdentifierDecl	* dst		2160248	1					
ANR	2160256	IdentifierDeclType	char *		2160248	0					
ANR	2160257	Identifier	dst		2160248	1					
ANR	2160258	IdentifierDecl	* src		2160248	2					
ANR	2160259	IdentifierDeclType	char *		2160248	0					
ANR	2160260	Identifier	src		2160248	1					
ANR	2160261	IdentifierDeclStatement	"int i , decpt , sign ;"	145:1:4303:4321	2160248	1	True				
ANR	2160262	IdentifierDecl	i		2160248	0					
ANR	2160263	IdentifierDeclType	int		2160248	0					
ANR	2160264	Identifier	i		2160248	1					
ANR	2160265	IdentifierDecl	decpt		2160248	1					
ANR	2160266	IdentifierDeclType	int		2160248	0					
ANR	2160267	Identifier	decpt		2160248	1					
ANR	2160268	IdentifierDecl	sign		2160248	2					
ANR	2160269	IdentifierDeclType	int		2160248	0					
ANR	2160270	Identifier	sign		2160248	1					
ANR	2160271	ExpressionStatement	"digits = zend_dtoa ( value , 2 , ndigit , & decpt , & sign , NULL )"	147:1:4325:4382	2160248	2	True				
ANR	2160272	AssignmentExpression	"digits = zend_dtoa ( value , 2 , ndigit , & decpt , & sign , NULL )"		2160248	0		=			
ANR	2160273	Identifier	digits		2160248	0					
ANR	2160274	CallExpression	"zend_dtoa ( value , 2 , ndigit , & decpt , & sign , NULL )"		2160248	1					
ANR	2160275	Callee	zend_dtoa		2160248	0					
ANR	2160276	Identifier	zend_dtoa		2160248	0					
ANR	2160277	ArgumentList	value		2160248	1					
ANR	2160278	Argument	value		2160248	0					
ANR	2160279	Identifier	value		2160248	0					
ANR	2160280	Argument	2		2160248	1					
ANR	2160281	PrimaryExpression	2		2160248	0					
ANR	2160282	Argument	ndigit		2160248	2					
ANR	2160283	Identifier	ndigit		2160248	0					
ANR	2160284	Argument	& decpt		2160248	3					
ANR	2160285	UnaryOperationExpression	& decpt		2160248	0					
ANR	2160286	UnaryOperator	&		2160248	0					
ANR	2160287	Identifier	decpt		2160248	1					
ANR	2160288	Argument	& sign		2160248	4					
ANR	2160289	UnaryOperationExpression	& sign		2160248	0					
ANR	2160290	UnaryOperator	&		2160248	0					
ANR	2160291	Identifier	sign		2160248	1					
ANR	2160292	Argument	NULL		2160248	5					
ANR	2160293	Identifier	NULL		2160248	0					
ANR	2160294	IfStatement	if ( decpt == 9999 )		2160248	3					
ANR	2160295	Condition	decpt == 9999	148:5:4389:4401	2160248	0	True				
ANR	2160296	EqualityExpression	decpt == 9999		2160248	0		==			
ANR	2160297	Identifier	decpt		2160248	0					
ANR	2160298	PrimaryExpression	9999		2160248	1					
ANR	2160299	CompoundStatement		6:20:130:130	2160248	1					
ANR	2160300	ExpressionStatement	"snprintf ( buf , ndigit + 1 , ""%s%s"" , ( sign && * digits == 'I' ) ? ""-"" : """" , * digits == 'I' ? ""INF"" : ""NAN"" )"	153:2:4525:4627	2160248	0	True				
ANR	2160301	CallExpression	"snprintf ( buf , ndigit + 1 , ""%s%s"" , ( sign && * digits == 'I' ) ? ""-"" : """" , * digits == 'I' ? ""INF"" : ""NAN"" )"		2160248	0					
ANR	2160302	Callee	snprintf		2160248	0					
ANR	2160303	Identifier	snprintf		2160248	0					
ANR	2160304	ArgumentList	buf		2160248	1					
ANR	2160305	Argument	buf		2160248	0					
ANR	2160306	Identifier	buf		2160248	0					
ANR	2160307	Argument	ndigit + 1		2160248	1					
ANR	2160308	AdditiveExpression	ndigit + 1		2160248	0		+			
ANR	2160309	Identifier	ndigit		2160248	0					
ANR	2160310	PrimaryExpression	1		2160248	1					
ANR	2160311	Argument	"""%s%s"""		2160248	2					
ANR	2160312	PrimaryExpression	"""%s%s"""		2160248	0					
ANR	2160313	Argument	"( sign && * digits == 'I' ) ? ""-"" : """""		2160248	3					
ANR	2160314	ConditionalExpression	"( sign && * digits == 'I' ) ? ""-"" : """""		2160248	0					
ANR	2160315	Condition	sign && * digits == 'I'		2160248	0					
ANR	2160316	AndExpression	sign && * digits == 'I'		2160248	0		&&			
ANR	2160317	Identifier	sign		2160248	0					
ANR	2160318	EqualityExpression	* digits == 'I'		2160248	1		==			
ANR	2160319	UnaryOperationExpression	* digits		2160248	0					
ANR	2160320	UnaryOperator	*		2160248	0					
ANR	2160321	Identifier	digits		2160248	1					
ANR	2160322	PrimaryExpression	'I'		2160248	1					
ANR	2160323	PrimaryExpression	"""-"""		2160248	1					
ANR	2160324	PrimaryExpression	""""""		2160248	2					
ANR	2160325	Argument	"* digits == 'I' ? ""INF"" : ""NAN"""		2160248	4					
ANR	2160326	ConditionalExpression	"* digits == 'I' ? ""INF"" : ""NAN"""		2160248	0					
ANR	2160327	Condition	* digits == 'I'		2160248	0					
ANR	2160328	EqualityExpression	* digits == 'I'		2160248	0		==			
ANR	2160329	UnaryOperationExpression	* digits		2160248	0					
ANR	2160330	UnaryOperator	*		2160248	0					
ANR	2160331	Identifier	digits		2160248	1					
ANR	2160332	PrimaryExpression	'I'		2160248	1					
ANR	2160333	PrimaryExpression	"""INF"""		2160248	1					
ANR	2160334	PrimaryExpression	"""NAN"""		2160248	2					
ANR	2160335	ExpressionStatement	zend_freedtoa ( digits )	154:2:4631:4652	2160248	1	True				
ANR	2160336	CallExpression	zend_freedtoa ( digits )		2160248	0					
ANR	2160337	Callee	zend_freedtoa		2160248	0					
ANR	2160338	Identifier	zend_freedtoa		2160248	0					
ANR	2160339	ArgumentList	digits		2160248	1					
ANR	2160340	Argument	digits		2160248	0					
ANR	2160341	Identifier	digits		2160248	0					
ANR	2160342	ReturnStatement	return ( buf ) ;	155:2:4656:4668	2160248	2	True				
ANR	2160343	Identifier	buf		2160248	0					
ANR	2160344	ExpressionStatement	dst = buf	158:1:4675:4684	2160248	4	True				
ANR	2160345	AssignmentExpression	dst = buf		2160248	0		=			
ANR	2160346	Identifier	dst		2160248	0					
ANR	2160347	Identifier	buf		2160248	1					
ANR	2160348	IfStatement	if ( sign )		2160248	5					
ANR	2160349	Condition	sign	159:5:4691:4694	2160248	0	True				
ANR	2160350	Identifier	sign		2160248	0					
ANR	2160351	CompoundStatement		17:11:423:423	2160248	1					
ANR	2160352	ExpressionStatement	* dst ++ = '-'	160:2:4701:4713	2160248	0	True				
ANR	2160353	AssignmentExpression	* dst ++ = '-'		2160248	0		=			
ANR	2160354	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160355	UnaryOperator	*		2160248	0					
ANR	2160356	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160357	Identifier	dst		2160248	0					
ANR	2160358	IncDec	++		2160248	1					
ANR	2160359	PrimaryExpression	'-'		2160248	1					
ANR	2160360	IfStatement	if ( ( decpt >= 0 && decpt > ndigit ) || decpt < - 3 )		2160248	6					
ANR	2160361	Condition	( decpt >= 0 && decpt > ndigit ) || decpt < - 3	163:5:4724:4767	2160248	0	True				
ANR	2160362	OrExpression	( decpt >= 0 && decpt > ndigit ) || decpt < - 3		2160248	0		||			
ANR	2160363	AndExpression	decpt >= 0 && decpt > ndigit		2160248	0		&&			
ANR	2160364	RelationalExpression	decpt >= 0		2160248	0		>=			
ANR	2160365	Identifier	decpt		2160248	0					
ANR	2160366	PrimaryExpression	0		2160248	1					
ANR	2160367	RelationalExpression	decpt > ndigit		2160248	1		>			
ANR	2160368	Identifier	decpt		2160248	0					
ANR	2160369	Identifier	ndigit		2160248	1					
ANR	2160370	RelationalExpression	decpt < - 3		2160248	1		<			
ANR	2160371	Identifier	decpt		2160248	0					
ANR	2160372	UnaryOperationExpression	- 3		2160248	1					
ANR	2160373	UnaryOperator	-		2160248	0					
ANR	2160374	PrimaryExpression	3		2160248	1					
ANR	2160375	CompoundStatement		21:51:496:496	2160248	1					
ANR	2160376	IfStatement	if ( -- decpt < 0 )		2160248	0					
ANR	2160377	Condition	-- decpt < 0	165:6:4841:4851	2160248	0	True				
ANR	2160378	RelationalExpression	-- decpt < 0		2160248	0		<			
ANR	2160379	UnaryExpression	-- decpt		2160248	0					
ANR	2160380	IncDec	--		2160248	0					
ANR	2160381	Identifier	decpt		2160248	1					
ANR	2160382	PrimaryExpression	0		2160248	1					
ANR	2160383	CompoundStatement		23:19:580:580	2160248	1					
ANR	2160384	ExpressionStatement	sign = 1	166:3:4859:4867	2160248	0	True				
ANR	2160385	AssignmentExpression	sign = 1		2160248	0		=			
ANR	2160386	Identifier	sign		2160248	0					
ANR	2160387	PrimaryExpression	1		2160248	1					
ANR	2160388	ExpressionStatement	decpt = - decpt	167:3:4872:4886	2160248	1	True				
ANR	2160389	AssignmentExpression	decpt = - decpt		2160248	0		=			
ANR	2160390	Identifier	decpt		2160248	0					
ANR	2160391	UnaryOperationExpression	- decpt		2160248	1					
ANR	2160392	UnaryOperator	-		2160248	0					
ANR	2160393	Identifier	decpt		2160248	1					
ANR	2160394	ElseStatement	else		2160248	0					
ANR	2160395	CompoundStatement		26:9:623:623	2160248	0					
ANR	2160396	ExpressionStatement	sign = 0	169:3:4902:4910	2160248	0	True				
ANR	2160397	AssignmentExpression	sign = 0		2160248	0		=			
ANR	2160398	Identifier	sign		2160248	0					
ANR	2160399	PrimaryExpression	0		2160248	1					
ANR	2160400	ExpressionStatement	src = digits	171:2:4918:4930	2160248	1	True				
ANR	2160401	AssignmentExpression	src = digits		2160248	0		=			
ANR	2160402	Identifier	src		2160248	0					
ANR	2160403	Identifier	digits		2160248	1					
ANR	2160404	ExpressionStatement	* dst ++ = * src ++	172:2:4934:4949	2160248	2	True				
ANR	2160405	AssignmentExpression	* dst ++ = * src ++		2160248	0		=			
ANR	2160406	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160407	UnaryOperator	*		2160248	0					
ANR	2160408	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160409	Identifier	dst		2160248	0					
ANR	2160410	IncDec	++		2160248	1					
ANR	2160411	UnaryOperationExpression	* src ++		2160248	1					
ANR	2160412	UnaryOperator	*		2160248	0					
ANR	2160413	PostIncDecOperationExpression	src ++		2160248	1					
ANR	2160414	Identifier	src		2160248	0					
ANR	2160415	IncDec	++		2160248	1					
ANR	2160416	ExpressionStatement	* dst ++ = dec_point	173:2:4953:4971	2160248	3	True				
ANR	2160417	AssignmentExpression	* dst ++ = dec_point		2160248	0		=			
ANR	2160418	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160419	UnaryOperator	*		2160248	0					
ANR	2160420	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160421	Identifier	dst		2160248	0					
ANR	2160422	IncDec	++		2160248	1					
ANR	2160423	Identifier	dec_point		2160248	1					
ANR	2160424	IfStatement	if ( * src == '\\0' )		2160248	4					
ANR	2160425	Condition	* src == '\\0'	174:6:4979:4990	2160248	0	True				
ANR	2160426	EqualityExpression	* src == '\\0'		2160248	0		==			
ANR	2160427	UnaryOperationExpression	* src		2160248	0					
ANR	2160428	UnaryOperator	*		2160248	0					
ANR	2160429	Identifier	src		2160248	1					
ANR	2160430	PrimaryExpression	'\\0'		2160248	1					
ANR	2160431	CompoundStatement		32:20:719:719	2160248	1					
ANR	2160432	ExpressionStatement	* dst ++ = '0'	175:3:4998:5010	2160248	0	True				
ANR	2160433	AssignmentExpression	* dst ++ = '0'		2160248	0		=			
ANR	2160434	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160435	UnaryOperator	*		2160248	0					
ANR	2160436	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160437	Identifier	dst		2160248	0					
ANR	2160438	IncDec	++		2160248	1					
ANR	2160439	PrimaryExpression	'0'		2160248	1					
ANR	2160440	ElseStatement	else		2160248	0					
ANR	2160441	CompoundStatement		34:9:747:747	2160248	0					
ANR	2160442	DoStatement	do		2160248	0					
ANR	2160443	CompoundStatement		35:6:755:755	2160248	0					
ANR	2160444	ExpressionStatement	* dst ++ = * src ++	178:4:5035:5050	2160248	0	True				
ANR	2160445	AssignmentExpression	* dst ++ = * src ++		2160248	0		=			
ANR	2160446	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160447	UnaryOperator	*		2160248	0					
ANR	2160448	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160449	Identifier	dst		2160248	0					
ANR	2160450	IncDec	++		2160248	1					
ANR	2160451	UnaryOperationExpression	* src ++		2160248	1					
ANR	2160452	UnaryOperator	*		2160248	0					
ANR	2160453	PostIncDecOperationExpression	src ++		2160248	1					
ANR	2160454	Identifier	src		2160248	0					
ANR	2160455	IncDec	++		2160248	1					
ANR	2160456	Condition	* src != '\\0'	179:12:5064:5075	2160248	1	True				
ANR	2160457	EqualityExpression	* src != '\\0'		2160248	0		!=			
ANR	2160458	UnaryOperationExpression	* src		2160248	0					
ANR	2160459	UnaryOperator	*		2160248	0					
ANR	2160460	Identifier	src		2160248	1					
ANR	2160461	PrimaryExpression	'\\0'		2160248	1					
ANR	2160462	ExpressionStatement	* dst ++ = exponent	181:2:5085:5102	2160248	5	True				
ANR	2160463	AssignmentExpression	* dst ++ = exponent		2160248	0		=			
ANR	2160464	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160465	UnaryOperator	*		2160248	0					
ANR	2160466	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160467	Identifier	dst		2160248	0					
ANR	2160468	IncDec	++		2160248	1					
ANR	2160469	Identifier	exponent		2160248	1					
ANR	2160470	IfStatement	if ( sign )		2160248	6					
ANR	2160471	Condition	sign	182:6:5110:5113	2160248	0	True				
ANR	2160472	Identifier	sign		2160248	0					
ANR	2160473	CompoundStatement		40:12:842:842	2160248	1					
ANR	2160474	ExpressionStatement	* dst ++ = '-'	183:3:5121:5133	2160248	0	True				
ANR	2160475	AssignmentExpression	* dst ++ = '-'		2160248	0		=			
ANR	2160476	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160477	UnaryOperator	*		2160248	0					
ANR	2160478	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160479	Identifier	dst		2160248	0					
ANR	2160480	IncDec	++		2160248	1					
ANR	2160481	PrimaryExpression	'-'		2160248	1					
ANR	2160482	ElseStatement	else		2160248	0					
ANR	2160483	CompoundStatement		42:9:870:870	2160248	0					
ANR	2160484	ExpressionStatement	* dst ++ = '+'	185:3:5149:5161	2160248	0	True				
ANR	2160485	AssignmentExpression	* dst ++ = '+'		2160248	0		=			
ANR	2160486	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160487	UnaryOperator	*		2160248	0					
ANR	2160488	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160489	Identifier	dst		2160248	0					
ANR	2160490	IncDec	++		2160248	1					
ANR	2160491	PrimaryExpression	'+'		2160248	1					
ANR	2160492	IfStatement	if ( decpt < 10 )		2160248	7					
ANR	2160493	Condition	decpt < 10	187:6:5173:5182	2160248	0	True				
ANR	2160494	RelationalExpression	decpt < 10		2160248	0		<			
ANR	2160495	Identifier	decpt		2160248	0					
ANR	2160496	PrimaryExpression	10		2160248	1					
ANR	2160497	CompoundStatement		45:18:911:911	2160248	1					
ANR	2160498	ExpressionStatement	* dst ++ = '0' + decpt	188:3:5190:5210	2160248	0	True				
ANR	2160499	AssignmentExpression	* dst ++ = '0' + decpt		2160248	0		=			
ANR	2160500	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160501	UnaryOperator	*		2160248	0					
ANR	2160502	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160503	Identifier	dst		2160248	0					
ANR	2160504	IncDec	++		2160248	1					
ANR	2160505	AdditiveExpression	'0' + decpt		2160248	1		+			
ANR	2160506	PrimaryExpression	'0'		2160248	0					
ANR	2160507	Identifier	decpt		2160248	1					
ANR	2160508	ExpressionStatement	* dst = '\\0'	189:3:5215:5226	2160248	1	True				
ANR	2160509	AssignmentExpression	* dst = '\\0'		2160248	0		=			
ANR	2160510	UnaryOperationExpression	* dst		2160248	0					
ANR	2160511	UnaryOperator	*		2160248	0					
ANR	2160512	Identifier	dst		2160248	1					
ANR	2160513	PrimaryExpression	'\\0'		2160248	1					
ANR	2160514	ElseStatement	else		2160248	0					
ANR	2160515	CompoundStatement		48:9:963:963	2160248	0					
ANR	2160516	ForStatement	"for ( sign = decpt , i = 0 ; ( sign /= 10 ) != 0 ; i ++ )"		2160248	0					
ANR	2160517	ForInit	"sign = decpt , i = 0 ;"	192:8:5271:5290	2160248	0	True				
ANR	2160518	Expression	"sign = decpt , i = 0"		2160248	0					
ANR	2160519	AssignmentExpression	sign = decpt		2160248	0		=			
ANR	2160520	Identifier	sign		2160248	0					
ANR	2160521	Identifier	decpt		2160248	1					
ANR	2160522	AssignmentExpression	i = 0		2160248	1		=			
ANR	2160523	Identifier	i		2160248	0					
ANR	2160524	PrimaryExpression	0		2160248	1					
ANR	2160525	Condition	( sign /= 10 ) != 0	192:29:5292:5308	2160248	1	True				
ANR	2160526	EqualityExpression	( sign /= 10 ) != 0		2160248	0		!=			
ANR	2160527	AssignmentExpression	sign /= 10		2160248	0		/=			
ANR	2160528	Identifier	sign		2160248	0					
ANR	2160529	PrimaryExpression	10		2160248	1					
ANR	2160530	PrimaryExpression	0		2160248	1					
ANR	2160531	PostIncDecOperationExpression	i ++	192:48:5311:5313	2160248	2	True				
ANR	2160532	Identifier	i		2160248	0					
ANR	2160533	IncDec	++		2160248	1					
ANR	2160534	ContinueStatement	continue ;	193:4:5320:5328	2160248	3	True				
ANR	2160535	ExpressionStatement	dst [ i + 1 ] = '\\0'	194:3:5333:5350	2160248	1	True				
ANR	2160536	AssignmentExpression	dst [ i + 1 ] = '\\0'		2160248	0		=			
ANR	2160537	ArrayIndexing	dst [ i + 1 ]		2160248	0					
ANR	2160538	Identifier	dst		2160248	0					
ANR	2160539	AdditiveExpression	i + 1		2160248	1		+			
ANR	2160540	Identifier	i		2160248	0					
ANR	2160541	PrimaryExpression	1		2160248	1					
ANR	2160542	PrimaryExpression	'\\0'		2160248	1					
ANR	2160543	WhileStatement	while ( decpt != 0 )		2160248	2					
ANR	2160544	Condition	decpt != 0	195:10:5362:5371	2160248	0	True				
ANR	2160545	EqualityExpression	decpt != 0		2160248	0		!=			
ANR	2160546	Identifier	decpt		2160248	0					
ANR	2160547	PrimaryExpression	0		2160248	1					
ANR	2160548	CompoundStatement		53:22:1100:1100	2160248	1					
ANR	2160549	ExpressionStatement	dst [ i -- ] = '0' + decpt % 10	196:4:5380:5407	2160248	0	True				
ANR	2160550	AssignmentExpression	dst [ i -- ] = '0' + decpt % 10		2160248	0		=			
ANR	2160551	ArrayIndexing	dst [ i -- ]		2160248	0					
ANR	2160552	Identifier	dst		2160248	0					
ANR	2160553	PostIncDecOperationExpression	i --		2160248	1					
ANR	2160554	Identifier	i		2160248	0					
ANR	2160555	IncDec	--		2160248	1					
ANR	2160556	AdditiveExpression	'0' + decpt % 10		2160248	1		+			
ANR	2160557	PrimaryExpression	'0'		2160248	0					
ANR	2160558	MultiplicativeExpression	decpt % 10		2160248	1		%			
ANR	2160559	Identifier	decpt		2160248	0					
ANR	2160560	PrimaryExpression	10		2160248	1					
ANR	2160561	ExpressionStatement	decpt /= 10	197:4:5413:5424	2160248	1	True				
ANR	2160562	AssignmentExpression	decpt /= 10		2160248	0		/=			
ANR	2160563	Identifier	decpt		2160248	0					
ANR	2160564	PrimaryExpression	10		2160248	1					
ANR	2160565	ElseStatement	else		2160248	0					
ANR	2160566	IfStatement	if ( decpt < 0 )		2160248	0					
ANR	2160567	Condition	decpt < 0	200:12:5447:5455	2160248	0	True				
ANR	2160568	RelationalExpression	decpt < 0		2160248	0		<			
ANR	2160569	Identifier	decpt		2160248	0					
ANR	2160570	PrimaryExpression	0		2160248	1					
ANR	2160571	CompoundStatement		58:23:1184:1184	2160248	1					
ANR	2160572	ExpressionStatement	* dst ++ = '0'	202:2:5489:5501	2160248	0	True				
ANR	2160573	AssignmentExpression	* dst ++ = '0'		2160248	0		=			
ANR	2160574	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160575	UnaryOperator	*		2160248	0					
ANR	2160576	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160577	Identifier	dst		2160248	0					
ANR	2160578	IncDec	++		2160248	1					
ANR	2160579	PrimaryExpression	'0'		2160248	1					
ANR	2160580	ExpressionStatement	* dst ++ = dec_point	203:2:5539:5557	2160248	1	True				
ANR	2160581	AssignmentExpression	* dst ++ = dec_point		2160248	0		=			
ANR	2160582	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160583	UnaryOperator	*		2160248	0					
ANR	2160584	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160585	Identifier	dst		2160248	0					
ANR	2160586	IncDec	++		2160248	1					
ANR	2160587	Identifier	dec_point		2160248	1					
ANR	2160588	DoStatement	do		2160248	2					
ANR	2160589	CompoundStatement		62:5:1290:1290	2160248	0					
ANR	2160590	ExpressionStatement	* dst ++ = '0'	205:3:5569:5581	2160248	0	True				
ANR	2160591	AssignmentExpression	* dst ++ = '0'		2160248	0		=			
ANR	2160592	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160593	UnaryOperator	*		2160248	0					
ANR	2160594	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160595	Identifier	dst		2160248	0					
ANR	2160596	IncDec	++		2160248	1					
ANR	2160597	PrimaryExpression	'0'		2160248	1					
ANR	2160598	Condition	++ decpt < 0	206:11:5594:5604	2160248	1	True				
ANR	2160599	RelationalExpression	++ decpt < 0		2160248	0		<			
ANR	2160600	UnaryExpression	++ decpt		2160248	0					
ANR	2160601	IncDec	++		2160248	0					
ANR	2160602	Identifier	decpt		2160248	1					
ANR	2160603	PrimaryExpression	0		2160248	1					
ANR	2160604	ExpressionStatement	src = digits	207:2:5610:5622	2160248	3	True				
ANR	2160605	AssignmentExpression	src = digits		2160248	0		=			
ANR	2160606	Identifier	src		2160248	0					
ANR	2160607	Identifier	digits		2160248	1					
ANR	2160608	WhileStatement	while ( * src != '\\0' )		2160248	4					
ANR	2160609	Condition	* src != '\\0'	208:9:5633:5644	2160248	0	True				
ANR	2160610	EqualityExpression	* src != '\\0'		2160248	0		!=			
ANR	2160611	UnaryOperationExpression	* src		2160248	0					
ANR	2160612	UnaryOperator	*		2160248	0					
ANR	2160613	Identifier	src		2160248	1					
ANR	2160614	PrimaryExpression	'\\0'		2160248	1					
ANR	2160615	CompoundStatement		66:23:1373:1373	2160248	1					
ANR	2160616	ExpressionStatement	* dst ++ = * src ++	209:3:5652:5667	2160248	0	True				
ANR	2160617	AssignmentExpression	* dst ++ = * src ++		2160248	0		=			
ANR	2160618	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160619	UnaryOperator	*		2160248	0					
ANR	2160620	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160621	Identifier	dst		2160248	0					
ANR	2160622	IncDec	++		2160248	1					
ANR	2160623	UnaryOperationExpression	* src ++		2160248	1					
ANR	2160624	UnaryOperator	*		2160248	0					
ANR	2160625	PostIncDecOperationExpression	src ++		2160248	1					
ANR	2160626	Identifier	src		2160248	0					
ANR	2160627	IncDec	++		2160248	1					
ANR	2160628	ExpressionStatement	* dst = '\\0'	211:2:5675:5686	2160248	5	True				
ANR	2160629	AssignmentExpression	* dst = '\\0'		2160248	0		=			
ANR	2160630	UnaryOperationExpression	* dst		2160248	0					
ANR	2160631	UnaryOperator	*		2160248	0					
ANR	2160632	Identifier	dst		2160248	1					
ANR	2160633	PrimaryExpression	'\\0'		2160248	1					
ANR	2160634	ElseStatement	else		2160248	0					
ANR	2160635	CompoundStatement		70:8:1422:1422	2160248	0					
ANR	2160636	ForStatement	"for ( i = 0 , src = digits ; i < decpt ; i ++ )"		2160248	0					
ANR	2160637	ForInit	"i = 0 , src = digits ;"	214:7:5729:5748	2160248	0	True				
ANR	2160638	Expression	"i = 0 , src = digits"		2160248	0					
ANR	2160639	AssignmentExpression	i = 0		2160248	0		=			
ANR	2160640	Identifier	i		2160248	0					
ANR	2160641	PrimaryExpression	0		2160248	1					
ANR	2160642	AssignmentExpression	src = digits		2160248	1		=			
ANR	2160643	Identifier	src		2160248	0					
ANR	2160644	Identifier	digits		2160248	1					
ANR	2160645	Condition	i < decpt	214:28:5750:5758	2160248	1	True				
ANR	2160646	RelationalExpression	i < decpt		2160248	0		<			
ANR	2160647	Identifier	i		2160248	0					
ANR	2160648	Identifier	decpt		2160248	1					
ANR	2160649	PostIncDecOperationExpression	i ++	214:39:5761:5763	2160248	2	True				
ANR	2160650	Identifier	i		2160248	0					
ANR	2160651	IncDec	++		2160248	1					
ANR	2160652	CompoundStatement		72:44:1492:1492	2160248	3					
ANR	2160653	IfStatement	if ( * src != '\\0' )		2160248	0					
ANR	2160654	Condition	* src != '\\0'	215:7:5775:5786	2160248	0	True				
ANR	2160655	EqualityExpression	* src != '\\0'		2160248	0		!=			
ANR	2160656	UnaryOperationExpression	* src		2160248	0					
ANR	2160657	UnaryOperator	*		2160248	0					
ANR	2160658	Identifier	src		2160248	1					
ANR	2160659	PrimaryExpression	'\\0'		2160248	1					
ANR	2160660	CompoundStatement		73:21:1515:1515	2160248	1					
ANR	2160661	ExpressionStatement	* dst ++ = * src ++	216:4:5795:5810	2160248	0	True				
ANR	2160662	AssignmentExpression	* dst ++ = * src ++		2160248	0		=			
ANR	2160663	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160664	UnaryOperator	*		2160248	0					
ANR	2160665	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160666	Identifier	dst		2160248	0					
ANR	2160667	IncDec	++		2160248	1					
ANR	2160668	UnaryOperationExpression	* src ++		2160248	1					
ANR	2160669	UnaryOperator	*		2160248	0					
ANR	2160670	PostIncDecOperationExpression	src ++		2160248	1					
ANR	2160671	Identifier	src		2160248	0					
ANR	2160672	IncDec	++		2160248	1					
ANR	2160673	ElseStatement	else		2160248	0					
ANR	2160674	CompoundStatement		75:10:1548:1548	2160248	0					
ANR	2160675	ExpressionStatement	* dst ++ = '0'	218:4:5828:5840	2160248	0	True				
ANR	2160676	AssignmentExpression	* dst ++ = '0'		2160248	0		=			
ANR	2160677	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160678	UnaryOperator	*		2160248	0					
ANR	2160679	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160680	Identifier	dst		2160248	0					
ANR	2160681	IncDec	++		2160248	1					
ANR	2160682	PrimaryExpression	'0'		2160248	1					
ANR	2160683	IfStatement	if ( * src != '\\0' )		2160248	1					
ANR	2160684	Condition	* src != '\\0'	221:6:5857:5868	2160248	0	True				
ANR	2160685	EqualityExpression	* src != '\\0'		2160248	0		!=			
ANR	2160686	UnaryOperationExpression	* src		2160248	0					
ANR	2160687	UnaryOperator	*		2160248	0					
ANR	2160688	Identifier	src		2160248	1					
ANR	2160689	PrimaryExpression	'\\0'		2160248	1					
ANR	2160690	CompoundStatement		79:20:1597:1597	2160248	1					
ANR	2160691	IfStatement	if ( src == digits )		2160248	0					
ANR	2160692	Condition	src == digits	222:7:5880:5892	2160248	0	True				
ANR	2160693	EqualityExpression	src == digits		2160248	0		==			
ANR	2160694	Identifier	src		2160248	0					
ANR	2160695	Identifier	digits		2160248	1					
ANR	2160696	CompoundStatement		80:22:1621:1621	2160248	1					
ANR	2160697	ExpressionStatement	* dst ++ = '0'	223:4:5901:5913	2160248	0	True				
ANR	2160698	AssignmentExpression	* dst ++ = '0'		2160248	0		=			
ANR	2160699	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160700	UnaryOperator	*		2160248	0					
ANR	2160701	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160702	Identifier	dst		2160248	0					
ANR	2160703	IncDec	++		2160248	1					
ANR	2160704	PrimaryExpression	'0'		2160248	1					
ANR	2160705	ExpressionStatement	* dst ++ = dec_point	225:3:5957:5975	2160248	1	True				
ANR	2160706	AssignmentExpression	* dst ++ = dec_point		2160248	0		=			
ANR	2160707	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160708	UnaryOperator	*		2160248	0					
ANR	2160709	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160710	Identifier	dst		2160248	0					
ANR	2160711	IncDec	++		2160248	1					
ANR	2160712	Identifier	dec_point		2160248	1					
ANR	2160713	ForStatement	for ( i = decpt ; digits [ i ] != '\\0' ; i ++ )		2160248	2					
ANR	2160714	ForInit	i = decpt ;	226:8:5985:5994	2160248	0	True				
ANR	2160715	AssignmentExpression	i = decpt		2160248	0		=			
ANR	2160716	Identifier	i		2160248	0					
ANR	2160717	Identifier	decpt		2160248	1					
ANR	2160718	Condition	digits [ i ] != '\\0'	226:19:5996:6012	2160248	1	True				
ANR	2160719	EqualityExpression	digits [ i ] != '\\0'		2160248	0		!=			
ANR	2160720	ArrayIndexing	digits [ i ]		2160248	0					
ANR	2160721	Identifier	digits		2160248	0					
ANR	2160722	Identifier	i		2160248	1					
ANR	2160723	PrimaryExpression	'\\0'		2160248	1					
ANR	2160724	PostIncDecOperationExpression	i ++	226:38:6015:6017	2160248	2	True				
ANR	2160725	Identifier	i		2160248	0					
ANR	2160726	IncDec	++		2160248	1					
ANR	2160727	CompoundStatement		84:43:1746:1746	2160248	3					
ANR	2160728	ExpressionStatement	* dst ++ = digits [ i ]	227:16:6038:6056	2160248	0	True				
ANR	2160729	AssignmentExpression	* dst ++ = digits [ i ]		2160248	0		=			
ANR	2160730	UnaryOperationExpression	* dst ++		2160248	0					
ANR	2160731	UnaryOperator	*		2160248	0					
ANR	2160732	PostIncDecOperationExpression	dst ++		2160248	1					
ANR	2160733	Identifier	dst		2160248	0					
ANR	2160734	IncDec	++		2160248	1					
ANR	2160735	ArrayIndexing	digits [ i ]		2160248	1					
ANR	2160736	Identifier	digits		2160248	0					
ANR	2160737	Identifier	i		2160248	1					
ANR	2160738	ExpressionStatement	* dst = '\\0'	230:8:6090:6101	2160248	2	True				
ANR	2160739	AssignmentExpression	* dst = '\\0'		2160248	0		=			
ANR	2160740	UnaryOperationExpression	* dst		2160248	0					
ANR	2160741	UnaryOperator	*		2160248	0					
ANR	2160742	Identifier	dst		2160248	1					
ANR	2160743	PrimaryExpression	'\\0'		2160248	1					
ANR	2160744	ExpressionStatement	zend_freedtoa ( digits )	232:4:6113:6134	2160248	7	True				
ANR	2160745	CallExpression	zend_freedtoa ( digits )		2160248	0					
ANR	2160746	Callee	zend_freedtoa		2160248	0					
ANR	2160747	Identifier	zend_freedtoa		2160248	0					
ANR	2160748	ArgumentList	digits		2160248	1					
ANR	2160749	Argument	digits		2160248	0					
ANR	2160750	Identifier	digits		2160248	0					
ANR	2160751	ReturnStatement	return ( buf ) ;	233:4:6140:6152	2160248	8	True				
ANR	2160752	Identifier	buf		2160248	0					
ANR	2160753	ReturnType	PHPAPI char *		2160248	1					
ANR	2160754	Identifier	php_gcvt		2160248	2					
ANR	2160755	ParameterList	"double value , int ndigit , char dec_point , char exponent , char * buf"		2160248	3					
ANR	2160756	Parameter	double value	142:22:4195:4206	2160248	0	True				
ANR	2160757	ParameterType	double		2160248	0					
ANR	2160758	Identifier	value		2160248	1					
ANR	2160759	Parameter	int ndigit	142:36:4209:4218	2160248	1	True				
ANR	2160760	ParameterType	int		2160248	0					
ANR	2160761	Identifier	ndigit		2160248	1					
ANR	2160762	Parameter	char dec_point	142:48:4221:4234	2160248	2	True				
ANR	2160763	ParameterType	char		2160248	0					
ANR	2160764	Identifier	dec_point		2160248	1					
ANR	2160765	Parameter	char exponent	142:64:4237:4249	2160248	3	True				
ANR	2160766	ParameterType	char		2160248	0					
ANR	2160767	Identifier	exponent		2160248	1					
ANR	2160768	Parameter	char * buf	142:79:4252:4260	2160248	4	True				
ANR	2160769	ParameterType	char *		2160248	0					
ANR	2160770	Identifier	buf		2160248	1					
ANR	2160771	CFGEntryNode	ENTRY		2160248		True				
ANR	2160772	CFGExitNode	EXIT		2160248		True				
ANR	2160773	Symbol	NULL		2160248						
ANR	2160774	Symbol	dst		2160248						
ANR	2160775	Symbol	src		2160248						
ANR	2160776	Symbol	dec_point		2160248						
ANR	2160777	Symbol	& sign		2160248						
ANR	2160778	Symbol	sign		2160248						
ANR	2160779	Symbol	i		2160248						
ANR	2160780	Symbol	* digits		2160248						
ANR	2160781	Symbol	* src		2160248						
ANR	2160782	Symbol	zend_dtoa		2160248						
ANR	2160783	Symbol	* dst		2160248						
ANR	2160784	Symbol	buf		2160248						
ANR	2160785	Symbol	* i		2160248						
ANR	2160786	Symbol	& decpt		2160248						
ANR	2160787	Symbol	decpt		2160248						
ANR	2160788	Symbol	* dst ++		2160248						
ANR	2160789	Symbol	ndigit		2160248						
ANR	2160790	Symbol	* src ++		2160248						
ANR	2160791	Symbol	digits		2160248						
ANR	2160792	Symbol	value		2160248						
ANR	2160793	Symbol	exponent		2160248						
ANR	2160794	Function	ap_php_conv_10	319:0:9709:10794							
ANR	2160795	FunctionDef	"ap_php_conv_10 (register wide_int num , register bool_int is_unsigned , register bool_int * is_negative , char * buf_end , register int * len)"		2160794	0					
ANR	2160796	CompoundStatement		321:0:9863:10794	2160794	0					
ANR	2160797	Statement	register	322:1:9866:9873	2160794	0	True				
ANR	2160798	IdentifierDeclStatement	char * p = buf_end ;	322:10:9875:9892	2160794	1	True				
ANR	2160799	IdentifierDecl	* p = buf_end		2160794	0					
ANR	2160800	IdentifierDeclType	char *		2160794	0					
ANR	2160801	Identifier	p		2160794	1					
ANR	2160802	AssignmentExpression	* p = buf_end		2160794	2		=			
ANR	2160803	Identifier	buf_end		2160794	0					
ANR	2160804	Identifier	buf_end		2160794	1					
ANR	2160805	Statement	register	323:1:9895:9902	2160794	2	True				
ANR	2160806	IdentifierDeclStatement	u_wide_int magnitude ;	323:10:9904:9924	2160794	3	True				
ANR	2160807	IdentifierDecl	magnitude		2160794	0					
ANR	2160808	IdentifierDeclType	u_wide_int		2160794	0					
ANR	2160809	Identifier	magnitude		2160794	1					
ANR	2160810	IfStatement	if ( is_unsigned )		2160794	4					
ANR	2160811	Condition	is_unsigned	325:5:9932:9942	2160794	0	True				
ANR	2160812	Identifier	is_unsigned		2160794	0					
ANR	2160813	CompoundStatement		5:18:81:81	2160794	1					
ANR	2160814	ExpressionStatement	magnitude = ( u_wide_int ) num	326:2:9949:9977	2160794	0	True				
ANR	2160815	AssignmentExpression	magnitude = ( u_wide_int ) num		2160794	0		=			
ANR	2160816	Identifier	magnitude		2160794	0					
ANR	2160817	CastExpression	( u_wide_int ) num		2160794	1					
ANR	2160818	CastTarget	u_wide_int		2160794	0					
ANR	2160819	Identifier	num		2160794	1					
ANR	2160820	ExpressionStatement	* is_negative = FALSE	327:2:9981:10001	2160794	1	True				
ANR	2160821	AssignmentExpression	* is_negative = FALSE		2160794	0		=			
ANR	2160822	UnaryOperationExpression	* is_negative		2160794	0					
ANR	2160823	UnaryOperator	*		2160794	0					
ANR	2160824	Identifier	is_negative		2160794	1					
ANR	2160825	Identifier	FALSE		2160794	1					
ANR	2160826	ElseStatement	else		2160794	0					
ANR	2160827	CompoundStatement		8:8:147:147	2160794	0					
ANR	2160828	ExpressionStatement	* is_negative = ( num < 0 )	329:2:10015:10039	2160794	0	True				
ANR	2160829	AssignmentExpression	* is_negative = ( num < 0 )		2160794	0		=			
ANR	2160830	UnaryOperationExpression	* is_negative		2160794	0					
ANR	2160831	UnaryOperator	*		2160794	0					
ANR	2160832	Identifier	is_negative		2160794	1					
ANR	2160833	RelationalExpression	num < 0		2160794	1		<			
ANR	2160834	Identifier	num		2160794	0					
ANR	2160835	PrimaryExpression	0		2160794	1					
ANR	2160836	IfStatement	if ( * is_negative )		2160794	1					
ANR	2160837	Condition	* is_negative	340:6:10389:10400	2160794	0	True				
ANR	2160838	UnaryOperationExpression	* is_negative		2160794	0					
ANR	2160839	UnaryOperator	*		2160794	0					
ANR	2160840	Identifier	is_negative		2160794	1					
ANR	2160841	CompoundStatement		21:3:544:564	2160794	1					
ANR	2160842	IdentifierDeclStatement	wide_int t = num + 1 ;	341:3:10408:10428	2160794	0	True				
ANR	2160843	IdentifierDecl	t = num + 1		2160794	0					
ANR	2160844	IdentifierDeclType	wide_int		2160794	0					
ANR	2160845	Identifier	t		2160794	1					
ANR	2160846	AssignmentExpression	t = num + 1		2160794	2		=			
ANR	2160847	Identifier	t		2160794	0					
ANR	2160848	AdditiveExpression	num + 1		2160794	1		+			
ANR	2160849	Identifier	num		2160794	0					
ANR	2160850	PrimaryExpression	1		2160794	1					
ANR	2160851	ExpressionStatement	magnitude = ( ( u_wide_int ) - t ) + 1	342:3:10433:10467	2160794	1	True				
ANR	2160852	AssignmentExpression	magnitude = ( ( u_wide_int ) - t ) + 1		2160794	0		=			
ANR	2160853	Identifier	magnitude		2160794	0					
ANR	2160854	AdditiveExpression	( ( u_wide_int ) - t ) + 1		2160794	1		+			
ANR	2160855	CastExpression	( u_wide_int ) - t		2160794	0					
ANR	2160856	CastTarget	u_wide_int		2160794	0					
ANR	2160857	UnaryOperationExpression	- t		2160794	1					
ANR	2160858	UnaryOperator	-		2160794	0					
ANR	2160859	Identifier	t		2160794	1					
ANR	2160860	PrimaryExpression	1		2160794	1					
ANR	2160861	ElseStatement	else		2160794	0					
ANR	2160862	CompoundStatement		23:9:614:614	2160794	0					
ANR	2160863	ExpressionStatement	magnitude = ( u_wide_int ) num	344:3:10483:10511	2160794	0	True				
ANR	2160864	AssignmentExpression	magnitude = ( u_wide_int ) num		2160794	0		=			
ANR	2160865	Identifier	magnitude		2160794	0					
ANR	2160866	CastExpression	( u_wide_int ) num		2160794	1					
ANR	2160867	CastTarget	u_wide_int		2160794	0					
ANR	2160868	Identifier	num		2160794	1					
ANR	2160869	DoStatement	do		2160794	5					
ANR	2160870	CompoundStatement		32:11:744:785	2160794	0					
ANR	2160871	Statement	register	352:2:10599:10606	2160794	0	True				
ANR	2160872	IdentifierDeclStatement	u_wide_int new_magnitude = magnitude / 10 ;	352:11:10608:10649	2160794	1	True				
ANR	2160873	IdentifierDecl	new_magnitude = magnitude / 10		2160794	0					
ANR	2160874	IdentifierDeclType	u_wide_int		2160794	0					
ANR	2160875	Identifier	new_magnitude		2160794	1					
ANR	2160876	AssignmentExpression	new_magnitude = magnitude / 10		2160794	2		=			
ANR	2160877	Identifier	new_magnitude		2160794	0					
ANR	2160878	MultiplicativeExpression	magnitude / 10		2160794	1		/			
ANR	2160879	Identifier	magnitude		2160794	0					
ANR	2160880	PrimaryExpression	10		2160794	1					
ANR	2160881	ExpressionStatement	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )	354:2:10654:10705	2160794	2	True				
ANR	2160882	AssignmentExpression	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )		2160794	0		=			
ANR	2160883	UnaryOperationExpression	* -- p		2160794	0					
ANR	2160884	UnaryOperator	*		2160794	0					
ANR	2160885	UnaryExpression	-- p		2160794	1					
ANR	2160886	IncDec	--		2160794	0					
ANR	2160887	Identifier	p		2160794	1					
ANR	2160888	CastExpression	( char ) ( magnitude - new_magnitude * 10 + '0' )		2160794	1					
ANR	2160889	CastTarget	char		2160794	0					
ANR	2160890	AdditiveExpression	magnitude - new_magnitude * 10 + '0'		2160794	1		-			
ANR	2160891	Identifier	magnitude		2160794	0					
ANR	2160892	AdditiveExpression	new_magnitude * 10 + '0'		2160794	1		+			
ANR	2160893	MultiplicativeExpression	new_magnitude * 10		2160794	0		*			
ANR	2160894	Identifier	new_magnitude		2160794	0					
ANR	2160895	PrimaryExpression	10		2160794	1					
ANR	2160896	PrimaryExpression	'0'		2160794	1					
ANR	2160897	ExpressionStatement	magnitude = new_magnitude	355:2:10709:10734	2160794	3	True				
ANR	2160898	AssignmentExpression	magnitude = new_magnitude		2160794	0		=			
ANR	2160899	Identifier	magnitude		2160794	0					
ANR	2160900	Identifier	new_magnitude		2160794	1					
ANR	2160901	Condition	magnitude	357:8:10747:10755	2160794	1	True				
ANR	2160902	Identifier	magnitude		2160794	0					
ANR	2160903	ExpressionStatement	* len = buf_end - p	359:1:10761:10779	2160794	6	True				
ANR	2160904	AssignmentExpression	* len = buf_end - p		2160794	0		=			
ANR	2160905	UnaryOperationExpression	* len		2160794	0					
ANR	2160906	UnaryOperator	*		2160794	0					
ANR	2160907	Identifier	len		2160794	1					
ANR	2160908	AdditiveExpression	buf_end - p		2160794	1		-			
ANR	2160909	Identifier	buf_end		2160794	0					
ANR	2160910	Identifier	p		2160794	1					
ANR	2160911	ReturnStatement	return ( p ) ;	360:1:10782:10792	2160794	7	True				
ANR	2160912	Identifier	p		2160794	0					
ANR	2160913	ReturnType	PHPAPI char *		2160794	1					
ANR	2160914	Identifier	ap_php_conv_10		2160794	2					
ANR	2160915	ParameterList	"register wide_int num , register bool_int is_unsigned , register bool_int * is_negative , char * buf_end , register int * len"		2160794	3					
ANR	2160916	Parameter	register wide_int num	319:29:9738:9758	2160794	0	True				
ANR	2160917	ParameterType	register wide_int		2160794	0					
ANR	2160918	Identifier	num		2160794	1					
ANR	2160919	Parameter	register bool_int is_unsigned	319:52:9761:9789	2160794	1	True				
ANR	2160920	ParameterType	register bool_int		2160794	0					
ANR	2160921	Identifier	is_unsigned		2160794	1					
ANR	2160922	Parameter	register bool_int * is_negative	320:4:9796:9826	2160794	2	True				
ANR	2160923	ParameterType	register bool_int *		2160794	0					
ANR	2160924	Identifier	is_negative		2160794	1					
ANR	2160925	Parameter	char * buf_end	320:37:9829:9841	2160794	3	True				
ANR	2160926	ParameterType	char *		2160794	0					
ANR	2160927	Identifier	buf_end		2160794	1					
ANR	2160928	Parameter	register int * len	320:52:9844:9860	2160794	4	True				
ANR	2160929	ParameterType	register int *		2160794	0					
ANR	2160930	Identifier	len		2160794	1					
ANR	2160931	CFGEntryNode	ENTRY		2160794		True				
ANR	2160932	CFGExitNode	EXIT		2160794		True				
ANR	2160933	Symbol	* -- p		2160794						
ANR	2160934	Symbol	num		2160794						
ANR	2160935	Symbol	new_magnitude		2160794						
ANR	2160936	Symbol	p		2160794						
ANR	2160937	Symbol	len		2160794						
ANR	2160938	Symbol	t		2160794						
ANR	2160939	Symbol	is_unsigned		2160794						
ANR	2160940	Symbol	magnitude		2160794						
ANR	2160941	Symbol	FALSE		2160794						
ANR	2160942	Symbol	* p		2160794						
ANR	2160943	Symbol	buf_end		2160794						
ANR	2160944	Symbol	is_negative		2160794						
ANR	2160945	Symbol	* is_negative		2160794						
ANR	2160946	Symbol	* len		2160794						
ANR	2160947	Function	php_conv_fp	377:0:11222:13188							
ANR	2160948	FunctionDef	"php_conv_fp (register char format , register double num , boolean_e add_dp , int precision , char dec_point , bool_int * is_negative , char * buf , int * len)"		2160947	0					
ANR	2160949	CompoundStatement		379:0:11388:13188	2160947	0					
ANR	2160950	Statement	register	380:1:11391:11398	2160947	0	True				
ANR	2160951	IdentifierDeclStatement	char * s = buf ;	380:10:11400:11413	2160947	1	True				
ANR	2160952	IdentifierDecl	* s = buf		2160947	0					
ANR	2160953	IdentifierDeclType	char *		2160947	0					
ANR	2160954	Identifier	s		2160947	1					
ANR	2160955	AssignmentExpression	* s = buf		2160947	2		=			
ANR	2160956	Identifier	buf		2160947	0					
ANR	2160957	Identifier	buf		2160947	1					
ANR	2160958	Statement	register	381:1:11416:11423	2160947	2	True				
ANR	2160959	IdentifierDeclStatement	"char * p , * p_orig ;"	381:10:11425:11441	2160947	3	True				
ANR	2160960	IdentifierDecl	* p		2160947	0					
ANR	2160961	IdentifierDeclType	char *		2160947	0					
ANR	2160962	Identifier	p		2160947	1					
ANR	2160963	IdentifierDecl	* p_orig		2160947	1					
ANR	2160964	IdentifierDeclType	char *		2160947	0					
ANR	2160965	Identifier	p_orig		2160947	1					
ANR	2160966	IdentifierDeclStatement	int decimal_point ;	382:1:11444:11461	2160947	4	True				
ANR	2160967	IdentifierDecl	decimal_point		2160947	0					
ANR	2160968	IdentifierDeclType	int		2160947	0					
ANR	2160969	Identifier	decimal_point		2160947	1					
ANR	2160970	IfStatement	if ( precision >= NDIG - 1 )		2160947	5					
ANR	2160971	Condition	precision >= NDIG - 1	384:5:11469:11489	2160947	0	True				
ANR	2160972	RelationalExpression	precision >= NDIG - 1		2160947	0		>=			
ANR	2160973	Identifier	precision		2160947	0					
ANR	2160974	AdditiveExpression	NDIG - 1		2160947	1		-			
ANR	2160975	Identifier	NDIG		2160947	0					
ANR	2160976	PrimaryExpression	1		2160947	1					
ANR	2160977	CompoundStatement		6:28:103:103	2160947	1					
ANR	2160978	ExpressionStatement	precision = NDIG - 2	385:2:11496:11516	2160947	0	True				
ANR	2160979	AssignmentExpression	precision = NDIG - 2		2160947	0		=			
ANR	2160980	Identifier	precision		2160947	0					
ANR	2160981	AdditiveExpression	NDIG - 2		2160947	1		-			
ANR	2160982	Identifier	NDIG		2160947	0					
ANR	2160983	PrimaryExpression	2		2160947	1					
ANR	2160984	IfStatement	if ( format == 'F' )		2160947	6					
ANR	2160985	Condition	format == 'F'	388:5:11527:11539	2160947	0	True				
ANR	2160986	EqualityExpression	format == 'F'		2160947	0		==			
ANR	2160987	Identifier	format		2160947	0					
ANR	2160988	PrimaryExpression	'F'		2160947	1					
ANR	2160989	CompoundStatement		10:20:153:153	2160947	1					
ANR	2160990	ExpressionStatement	"p_orig = p = php_fcvt ( num , precision , & decimal_point , is_negative )"	389:2:11546:11612	2160947	0	True				
ANR	2160991	AssignmentExpression	"p_orig = p = php_fcvt ( num , precision , & decimal_point , is_negative )"		2160947	0		=			
ANR	2160992	Identifier	p_orig		2160947	0					
ANR	2160993	AssignmentExpression	"p = php_fcvt ( num , precision , & decimal_point , is_negative )"		2160947	1		=			
ANR	2160994	Identifier	p		2160947	0					
ANR	2160995	CallExpression	"php_fcvt ( num , precision , & decimal_point , is_negative )"		2160947	1					
ANR	2160996	Callee	php_fcvt		2160947	0					
ANR	2160997	Identifier	php_fcvt		2160947	0					
ANR	2160998	ArgumentList	num		2160947	1					
ANR	2160999	Argument	num		2160947	0					
ANR	2161000	Identifier	num		2160947	0					
ANR	2161001	Argument	precision		2160947	1					
ANR	2161002	Identifier	precision		2160947	0					
ANR	2161003	Argument	& decimal_point		2160947	2					
ANR	2161004	UnaryOperationExpression	& decimal_point		2160947	0					
ANR	2161005	UnaryOperator	&		2160947	0					
ANR	2161006	Identifier	decimal_point		2160947	1					
ANR	2161007	Argument	is_negative		2160947	3					
ANR	2161008	Identifier	is_negative		2160947	0					
ANR	2161009	ElseStatement	else		2160947	0					
ANR	2161010	CompoundStatement		12:8:233:233	2160947	0					
ANR	2161011	ExpressionStatement	"p_orig = p = php_ecvt ( num , precision + 1 , & decimal_point , is_negative )"	391:2:11658:11728	2160947	0	True				
ANR	2161012	AssignmentExpression	"p_orig = p = php_ecvt ( num , precision + 1 , & decimal_point , is_negative )"		2160947	0		=			
ANR	2161013	Identifier	p_orig		2160947	0					
ANR	2161014	AssignmentExpression	"p = php_ecvt ( num , precision + 1 , & decimal_point , is_negative )"		2160947	1		=			
ANR	2161015	Identifier	p		2160947	0					
ANR	2161016	CallExpression	"php_ecvt ( num , precision + 1 , & decimal_point , is_negative )"		2160947	1					
ANR	2161017	Callee	php_ecvt		2160947	0					
ANR	2161018	Identifier	php_ecvt		2160947	0					
ANR	2161019	ArgumentList	num		2160947	1					
ANR	2161020	Argument	num		2160947	0					
ANR	2161021	Identifier	num		2160947	0					
ANR	2161022	Argument	precision + 1		2160947	1					
ANR	2161023	AdditiveExpression	precision + 1		2160947	0		+			
ANR	2161024	Identifier	precision		2160947	0					
ANR	2161025	PrimaryExpression	1		2160947	1					
ANR	2161026	Argument	& decimal_point		2160947	2					
ANR	2161027	UnaryOperationExpression	& decimal_point		2160947	0					
ANR	2161028	UnaryOperator	&		2160947	0					
ANR	2161029	Identifier	decimal_point		2160947	1					
ANR	2161030	Argument	is_negative		2160947	3					
ANR	2161031	Identifier	is_negative		2160947	0					
ANR	2161032	IfStatement	if ( isalpha ( ( int ) * p ) )		2160947	7					
ANR	2161033	Condition	isalpha ( ( int ) * p )	397:5:11779:11794	2160947	0	True				
ANR	2161034	CallExpression	isalpha ( ( int ) * p )		2160947	0					
ANR	2161035	Callee	isalpha		2160947	0					
ANR	2161036	Identifier	isalpha		2160947	0					
ANR	2161037	ArgumentList	( int ) * p		2160947	1					
ANR	2161038	Argument	( int ) * p		2160947	0					
ANR	2161039	CastExpression	( int ) * p		2160947	0					
ANR	2161040	CastTarget	int		2160947	0					
ANR	2161041	UnaryOperationExpression	* p		2160947	1					
ANR	2161042	UnaryOperator	*		2160947	0					
ANR	2161043	Identifier	p		2160947	1					
ANR	2161044	CompoundStatement		19:23:408:408	2160947	1					
ANR	2161045	ExpressionStatement	* len = strlen ( p )	398:2:11801:11817	2160947	0	True				
ANR	2161046	AssignmentExpression	* len = strlen ( p )		2160947	0		=			
ANR	2161047	UnaryOperationExpression	* len		2160947	0					
ANR	2161048	UnaryOperator	*		2160947	0					
ANR	2161049	Identifier	len		2160947	1					
ANR	2161050	CallExpression	strlen ( p )		2160947	1					
ANR	2161051	Callee	strlen		2160947	0					
ANR	2161052	Identifier	strlen		2160947	0					
ANR	2161053	ArgumentList	p		2160947	1					
ANR	2161054	Argument	p		2160947	0					
ANR	2161055	Identifier	p		2160947	0					
ANR	2161056	ExpressionStatement	"memcpy ( buf , p , * len + 1 )"	399:2:11821:11845	2160947	1	True				
ANR	2161057	CallExpression	"memcpy ( buf , p , * len + 1 )"		2160947	0					
ANR	2161058	Callee	memcpy		2160947	0					
ANR	2161059	Identifier	memcpy		2160947	0					
ANR	2161060	ArgumentList	buf		2160947	1					
ANR	2161061	Argument	buf		2160947	0					
ANR	2161062	Identifier	buf		2160947	0					
ANR	2161063	Argument	p		2160947	1					
ANR	2161064	Identifier	p		2160947	0					
ANR	2161065	Argument	* len + 1		2160947	2					
ANR	2161066	AdditiveExpression	* len + 1		2160947	0		+			
ANR	2161067	UnaryOperationExpression	* len		2160947	0					
ANR	2161068	UnaryOperator	*		2160947	0					
ANR	2161069	Identifier	len		2160947	1					
ANR	2161070	PrimaryExpression	1		2160947	1					
ANR	2161071	ExpressionStatement	* is_negative = FALSE	400:2:11849:11869	2160947	2	True				
ANR	2161072	AssignmentExpression	* is_negative = FALSE		2160947	0		=			
ANR	2161073	UnaryOperationExpression	* is_negative		2160947	0					
ANR	2161074	UnaryOperator	*		2160947	0					
ANR	2161075	Identifier	is_negative		2160947	1					
ANR	2161076	Identifier	FALSE		2160947	1					
ANR	2161077	ExpressionStatement	free ( p_orig )	401:2:11873:11885	2160947	3	True				
ANR	2161078	CallExpression	free ( p_orig )		2160947	0					
ANR	2161079	Callee	free		2160947	0					
ANR	2161080	Identifier	free		2160947	0					
ANR	2161081	ArgumentList	p_orig		2160947	1					
ANR	2161082	Argument	p_orig		2160947	0					
ANR	2161083	Identifier	p_orig		2160947	0					
ANR	2161084	ReturnStatement	return ( buf ) ;	402:2:11889:11901	2160947	4	True				
ANR	2161085	Identifier	buf		2160947	0					
ANR	2161086	IfStatement	if ( format == 'F' )		2160947	8					
ANR	2161087	Condition	format == 'F'	404:5:11911:11923	2160947	0	True				
ANR	2161088	EqualityExpression	format == 'F'		2160947	0		==			
ANR	2161089	Identifier	format		2160947	0					
ANR	2161090	PrimaryExpression	'F'		2160947	1					
ANR	2161091	CompoundStatement		26:20:537:537	2160947	1					
ANR	2161092	IfStatement	if ( decimal_point <= 0 )		2160947	0					
ANR	2161093	Condition	decimal_point <= 0	405:6:11934:11951	2160947	0	True				
ANR	2161094	RelationalExpression	decimal_point <= 0		2160947	0		<=			
ANR	2161095	Identifier	decimal_point		2160947	0					
ANR	2161096	PrimaryExpression	0		2160947	1					
ANR	2161097	CompoundStatement		27:26:565:565	2160947	1					
ANR	2161098	IfStatement	if ( num != 0 || precision > 0 )		2160947	0					
ANR	2161099	Condition	num != 0 || precision > 0	406:7:11963:11987	2160947	0	True				
ANR	2161100	OrExpression	num != 0 || precision > 0		2160947	0		||			
ANR	2161101	EqualityExpression	num != 0		2160947	0		!=			
ANR	2161102	Identifier	num		2160947	0					
ANR	2161103	PrimaryExpression	0		2160947	1					
ANR	2161104	RelationalExpression	precision > 0		2160947	1		>			
ANR	2161105	Identifier	precision		2160947	0					
ANR	2161106	PrimaryExpression	0		2160947	1					
ANR	2161107	CompoundStatement		28:34:601:601	2160947	1					
ANR	2161108	ExpressionStatement	* s ++ = '0'	407:4:11996:12006	2160947	0	True				
ANR	2161109	AssignmentExpression	* s ++ = '0'		2160947	0		=			
ANR	2161110	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161111	UnaryOperator	*		2160947	0					
ANR	2161112	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161113	Identifier	s		2160947	0					
ANR	2161114	IncDec	++		2160947	1					
ANR	2161115	PrimaryExpression	'0'		2160947	1					
ANR	2161116	IfStatement	if ( precision > 0 )		2160947	1					
ANR	2161117	Condition	precision > 0	408:8:12016:12028	2160947	0	True				
ANR	2161118	RelationalExpression	precision > 0		2160947	0		>			
ANR	2161119	Identifier	precision		2160947	0					
ANR	2161120	PrimaryExpression	0		2160947	1					
ANR	2161121	CompoundStatement		30:23:642:642	2160947	1					
ANR	2161122	ExpressionStatement	* s ++ = dec_point	409:5:12038:12054	2160947	0	True				
ANR	2161123	AssignmentExpression	* s ++ = dec_point		2160947	0		=			
ANR	2161124	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161125	UnaryOperator	*		2160947	0					
ANR	2161126	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161127	Identifier	s		2160947	0					
ANR	2161128	IncDec	++		2160947	1					
ANR	2161129	Identifier	dec_point		2160947	1					
ANR	2161130	WhileStatement	while ( decimal_point ++ < 0 )		2160947	1					
ANR	2161131	Condition	decimal_point ++ < 0	410:12:12068:12086	2160947	0	True				
ANR	2161132	RelationalExpression	decimal_point ++ < 0		2160947	0		<			
ANR	2161133	PostIncDecOperationExpression	decimal_point ++		2160947	0					
ANR	2161134	Identifier	decimal_point		2160947	0					
ANR	2161135	IncDec	++		2160947	1					
ANR	2161136	PrimaryExpression	0		2160947	1					
ANR	2161137	CompoundStatement		32:33:700:700	2160947	1					
ANR	2161138	ExpressionStatement	* s ++ = '0'	411:6:12097:12107	2160947	0	True				
ANR	2161139	AssignmentExpression	* s ++ = '0'		2160947	0		=			
ANR	2161140	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161141	UnaryOperator	*		2160947	0					
ANR	2161142	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161143	Identifier	s		2160947	0					
ANR	2161144	IncDec	++		2160947	1					
ANR	2161145	PrimaryExpression	'0'		2160947	1					
ANR	2161146	ElseStatement	else		2160947	0					
ANR	2161147	IfStatement	if ( add_dp )		2160947	0					
ANR	2161148	Condition	add_dp	413:15:12131:12136	2160947	0	True				
ANR	2161149	Identifier	add_dp		2160947	0					
ANR	2161150	CompoundStatement		35:23:750:750	2160947	1					
ANR	2161151	ExpressionStatement	* s ++ = dec_point	414:5:12146:12162	2160947	0	True				
ANR	2161152	AssignmentExpression	* s ++ = dec_point		2160947	0		=			
ANR	2161153	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161154	UnaryOperator	*		2160947	0					
ANR	2161155	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161156	Identifier	s		2160947	0					
ANR	2161157	IncDec	++		2160947	1					
ANR	2161158	Identifier	dec_point		2160947	1					
ANR	2161159	ElseStatement	else		2160947	0					
ANR	2161160	CompoundStatement		40:3:800:863	2160947	0					
ANR	2161161	IdentifierDeclStatement	int addz = decimal_point >= NDIG ? decimal_point - NDIG + 1 : 0 ;	418:3:12189:12252	2160947	0	True				
ANR	2161162	IdentifierDecl	addz = decimal_point >= NDIG ? decimal_point - NDIG + 1 : 0		2160947	0					
ANR	2161163	IdentifierDeclType	int		2160947	0					
ANR	2161164	Identifier	addz		2160947	1					
ANR	2161165	AssignmentExpression	addz = decimal_point >= NDIG ? decimal_point - NDIG + 1 : 0		2160947	2		=			
ANR	2161166	Identifier	addz		2160947	0					
ANR	2161167	ConditionalExpression	decimal_point >= NDIG ? decimal_point - NDIG + 1 : 0		2160947	1					
ANR	2161168	Condition	decimal_point >= NDIG		2160947	0					
ANR	2161169	RelationalExpression	decimal_point >= NDIG		2160947	0		>=			
ANR	2161170	Identifier	decimal_point		2160947	0					
ANR	2161171	Identifier	NDIG		2160947	1					
ANR	2161172	AdditiveExpression	decimal_point - NDIG + 1		2160947	1		-			
ANR	2161173	Identifier	decimal_point		2160947	0					
ANR	2161174	AdditiveExpression	NDIG + 1		2160947	1		+			
ANR	2161175	Identifier	NDIG		2160947	0					
ANR	2161176	PrimaryExpression	1		2160947	1					
ANR	2161177	PrimaryExpression	0		2160947	2					
ANR	2161178	ExpressionStatement	decimal_point -= addz	419:3:12257:12278	2160947	1	True				
ANR	2161179	AssignmentExpression	decimal_point -= addz		2160947	0		-=			
ANR	2161180	Identifier	decimal_point		2160947	0					
ANR	2161181	Identifier	addz		2160947	1					
ANR	2161182	WhileStatement	while ( decimal_point -- > 0 )		2160947	2					
ANR	2161183	Condition	decimal_point -- > 0	420:10:12290:12308	2160947	0	True				
ANR	2161184	RelationalExpression	decimal_point -- > 0		2160947	0		>			
ANR	2161185	PostIncDecOperationExpression	decimal_point --		2160947	0					
ANR	2161186	Identifier	decimal_point		2160947	0					
ANR	2161187	IncDec	--		2160947	1					
ANR	2161188	PrimaryExpression	0		2160947	1					
ANR	2161189	CompoundStatement		42:31:922:922	2160947	1					
ANR	2161190	ExpressionStatement	* s ++ = * p ++	421:4:12317:12328	2160947	0	True				
ANR	2161191	AssignmentExpression	* s ++ = * p ++		2160947	0		=			
ANR	2161192	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161193	UnaryOperator	*		2160947	0					
ANR	2161194	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161195	Identifier	s		2160947	0					
ANR	2161196	IncDec	++		2160947	1					
ANR	2161197	UnaryOperationExpression	* p ++		2160947	1					
ANR	2161198	UnaryOperator	*		2160947	0					
ANR	2161199	PostIncDecOperationExpression	p ++		2160947	1					
ANR	2161200	Identifier	p		2160947	0					
ANR	2161201	IncDec	++		2160947	1					
ANR	2161202	WhileStatement	while ( addz -- > 0 )		2160947	3					
ANR	2161203	Condition	addz -- > 0	423:10:12345:12354	2160947	0	True				
ANR	2161204	RelationalExpression	addz -- > 0		2160947	0		>			
ANR	2161205	PostIncDecOperationExpression	addz --		2160947	0					
ANR	2161206	Identifier	addz		2160947	0					
ANR	2161207	IncDec	--		2160947	1					
ANR	2161208	PrimaryExpression	0		2160947	1					
ANR	2161209	CompoundStatement		45:22:968:968	2160947	1					
ANR	2161210	ExpressionStatement	* s ++ = '0'	424:4:12363:12373	2160947	0	True				
ANR	2161211	AssignmentExpression	* s ++ = '0'		2160947	0		=			
ANR	2161212	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161213	UnaryOperator	*		2160947	0					
ANR	2161214	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161215	Identifier	s		2160947	0					
ANR	2161216	IncDec	++		2160947	1					
ANR	2161217	PrimaryExpression	'0'		2160947	1					
ANR	2161218	IfStatement	if ( precision > 0 || add_dp )		2160947	4					
ANR	2161219	Condition	precision > 0 || add_dp	426:7:12387:12409	2160947	0	True				
ANR	2161220	OrExpression	precision > 0 || add_dp		2160947	0		||			
ANR	2161221	RelationalExpression	precision > 0		2160947	0		>			
ANR	2161222	Identifier	precision		2160947	0					
ANR	2161223	PrimaryExpression	0		2160947	1					
ANR	2161224	Identifier	add_dp		2160947	1					
ANR	2161225	CompoundStatement		48:32:1023:1023	2160947	1					
ANR	2161226	ExpressionStatement	* s ++ = dec_point	427:4:12418:12434	2160947	0	True				
ANR	2161227	AssignmentExpression	* s ++ = dec_point		2160947	0		=			
ANR	2161228	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161229	UnaryOperator	*		2160947	0					
ANR	2161230	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161231	Identifier	s		2160947	0					
ANR	2161232	IncDec	++		2160947	1					
ANR	2161233	Identifier	dec_point		2160947	1					
ANR	2161234	ElseStatement	else		2160947	0					
ANR	2161235	CompoundStatement		52:8:1064:1064	2160947	0					
ANR	2161236	ExpressionStatement	* s ++ = * p ++	431:2:12457:12468	2160947	0	True				
ANR	2161237	AssignmentExpression	* s ++ = * p ++		2160947	0		=			
ANR	2161238	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161239	UnaryOperator	*		2160947	0					
ANR	2161240	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161241	Identifier	s		2160947	0					
ANR	2161242	IncDec	++		2160947	1					
ANR	2161243	UnaryOperationExpression	* p ++		2160947	1					
ANR	2161244	UnaryOperator	*		2160947	0					
ANR	2161245	PostIncDecOperationExpression	p ++		2160947	1					
ANR	2161246	Identifier	p		2160947	0					
ANR	2161247	IncDec	++		2160947	1					
ANR	2161248	IfStatement	if ( precision > 0 || add_dp )		2160947	1					
ANR	2161249	Condition	precision > 0 || add_dp	432:6:12476:12498	2160947	0	True				
ANR	2161250	OrExpression	precision > 0 || add_dp		2160947	0		||			
ANR	2161251	RelationalExpression	precision > 0		2160947	0		>			
ANR	2161252	Identifier	precision		2160947	0					
ANR	2161253	PrimaryExpression	0		2160947	1					
ANR	2161254	Identifier	add_dp		2160947	1					
ANR	2161255	CompoundStatement		54:31:1112:1112	2160947	1					
ANR	2161256	ExpressionStatement	* s ++ = '.'	433:3:12506:12516	2160947	0	True				
ANR	2161257	AssignmentExpression	* s ++ = '.'		2160947	0		=			
ANR	2161258	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161259	UnaryOperator	*		2160947	0					
ANR	2161260	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161261	Identifier	s		2160947	0					
ANR	2161262	IncDec	++		2160947	1					
ANR	2161263	PrimaryExpression	'.'		2160947	1					
ANR	2161264	WhileStatement	while ( * p )		2160947	9					
ANR	2161265	Condition	* p	440:8:12589:12590	2160947	0	True				
ANR	2161266	UnaryOperationExpression	* p		2160947	0					
ANR	2161267	UnaryOperator	*		2160947	0					
ANR	2161268	Identifier	p		2160947	1					
ANR	2161269	CompoundStatement		62:12:1204:1204	2160947	1					
ANR	2161270	ExpressionStatement	* s ++ = * p ++	441:2:12597:12608	2160947	0	True				
ANR	2161271	AssignmentExpression	* s ++ = * p ++		2160947	0		=			
ANR	2161272	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161273	UnaryOperator	*		2160947	0					
ANR	2161274	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161275	Identifier	s		2160947	0					
ANR	2161276	IncDec	++		2160947	1					
ANR	2161277	UnaryOperationExpression	* p ++		2160947	1					
ANR	2161278	UnaryOperator	*		2160947	0					
ANR	2161279	PostIncDecOperationExpression	p ++		2160947	1					
ANR	2161280	Identifier	p		2160947	0					
ANR	2161281	IncDec	++		2160947	1					
ANR	2161282	IfStatement	if ( format != 'F' )		2160947	10					
ANR	2161283	Condition	format != 'F'	444:5:12619:12631	2160947	0	True				
ANR	2161284	EqualityExpression	format != 'F'		2160947	0		!=			
ANR	2161285	Identifier	format		2160947	0					
ANR	2161286	PrimaryExpression	'F'		2160947	1					
ANR	2161287	CompoundStatement		69:2:1323:1352	2160947	1					
ANR	2161288	IdentifierDeclStatement	char temp [ EXPONENT_LENGTH ] ;	445:2:12638:12664	2160947	0	True				
ANR	2161289	IdentifierDecl	temp [ EXPONENT_LENGTH ]		2160947	0					
ANR	2161290	IdentifierDeclType	char [ EXPONENT_LENGTH ]		2160947	0					
ANR	2161291	Identifier	temp		2160947	1					
ANR	2161292	Identifier	EXPONENT_LENGTH		2160947	2					
ANR	2161293	IdentifierDeclStatement	int t_len ;	446:2:12699:12708	2160947	1	True				
ANR	2161294	IdentifierDecl	t_len		2160947	0					
ANR	2161295	IdentifierDeclType	int		2160947	0					
ANR	2161296	Identifier	t_len		2160947	1					
ANR	2161297	IdentifierDeclStatement	bool_int exponent_is_negative ;	447:2:12712:12741	2160947	2	True				
ANR	2161298	IdentifierDecl	exponent_is_negative		2160947	0					
ANR	2161299	IdentifierDeclType	bool_int		2160947	0					
ANR	2161300	Identifier	exponent_is_negative		2160947	1					
ANR	2161301	ExpressionStatement	* s ++ = format	449:2:12746:12759	2160947	3	True				
ANR	2161302	AssignmentExpression	* s ++ = format		2160947	0		=			
ANR	2161303	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161304	UnaryOperator	*		2160947	0					
ANR	2161305	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161306	Identifier	s		2160947	0					
ANR	2161307	IncDec	++		2160947	1					
ANR	2161308	Identifier	format		2160947	1					
ANR	2161309	ExpressionStatement	decimal_point --	450:2:12785:12800	2160947	4	True				
ANR	2161310	PostIncDecOperationExpression	decimal_point --		2160947	0					
ANR	2161311	Identifier	decimal_point		2160947	0					
ANR	2161312	IncDec	--		2160947	1					
ANR	2161313	IfStatement	if ( decimal_point != 0 )		2160947	5					
ANR	2161314	Condition	decimal_point != 0	451:6:12808:12825	2160947	0	True				
ANR	2161315	EqualityExpression	decimal_point != 0		2160947	0		!=			
ANR	2161316	Identifier	decimal_point		2160947	0					
ANR	2161317	PrimaryExpression	0		2160947	1					
ANR	2161318	CompoundStatement		73:26:1439:1439	2160947	1					
ANR	2161319	ExpressionStatement	"p = ap_php_conv_10 ( ( wide_int ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"	452:3:12833:12939	2160947	0	True				
ANR	2161320	AssignmentExpression	"p = ap_php_conv_10 ( ( wide_int ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"		2160947	0		=			
ANR	2161321	Identifier	p		2160947	0					
ANR	2161322	CallExpression	"ap_php_conv_10 ( ( wide_int ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"		2160947	1					
ANR	2161323	Callee	ap_php_conv_10		2160947	0					
ANR	2161324	Identifier	ap_php_conv_10		2160947	0					
ANR	2161325	ArgumentList	( wide_int ) decimal_point		2160947	1					
ANR	2161326	Argument	( wide_int ) decimal_point		2160947	0					
ANR	2161327	CastExpression	( wide_int ) decimal_point		2160947	0					
ANR	2161328	CastTarget	wide_int		2160947	0					
ANR	2161329	Identifier	decimal_point		2160947	1					
ANR	2161330	Argument	FALSE		2160947	1					
ANR	2161331	Identifier	FALSE		2160947	0					
ANR	2161332	Argument	& exponent_is_negative		2160947	2					
ANR	2161333	UnaryOperationExpression	& exponent_is_negative		2160947	0					
ANR	2161334	UnaryOperator	&		2160947	0					
ANR	2161335	Identifier	exponent_is_negative		2160947	1					
ANR	2161336	Argument	& temp [ EXPONENT_LENGTH ]		2160947	3					
ANR	2161337	UnaryOperationExpression	& temp [ EXPONENT_LENGTH ]		2160947	0					
ANR	2161338	UnaryOperator	&		2160947	0					
ANR	2161339	ArrayIndexing	temp [ EXPONENT_LENGTH ]		2160947	1					
ANR	2161340	Identifier	temp		2160947	0					
ANR	2161341	Identifier	EXPONENT_LENGTH		2160947	1					
ANR	2161342	Argument	& t_len		2160947	4					
ANR	2161343	UnaryOperationExpression	& t_len		2160947	0					
ANR	2161344	UnaryOperator	&		2160947	0					
ANR	2161345	Identifier	t_len		2160947	1					
ANR	2161346	ExpressionStatement	* s ++ = exponent_is_negative ? '-' : '+'	453:3:12944:12983	2160947	1	True				
ANR	2161347	AssignmentExpression	* s ++ = exponent_is_negative ? '-' : '+'		2160947	0		=			
ANR	2161348	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161349	UnaryOperator	*		2160947	0					
ANR	2161350	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161351	Identifier	s		2160947	0					
ANR	2161352	IncDec	++		2160947	1					
ANR	2161353	ConditionalExpression	exponent_is_negative ? '-' : '+'		2160947	1					
ANR	2161354	Condition	exponent_is_negative		2160947	0					
ANR	2161355	Identifier	exponent_is_negative		2160947	0					
ANR	2161356	PrimaryExpression	'-'		2160947	1					
ANR	2161357	PrimaryExpression	'+'		2160947	2					
ANR	2161358	WhileStatement	while ( t_len -- )		2160947	2					
ANR	2161359	Condition	t_len --	458:10:13060:13066	2160947	0	True				
ANR	2161360	PostIncDecOperationExpression	t_len --		2160947	0					
ANR	2161361	Identifier	t_len		2160947	0					
ANR	2161362	IncDec	--		2160947	1					
ANR	2161363	CompoundStatement		80:19:1680:1680	2160947	1					
ANR	2161364	ExpressionStatement	* s ++ = * p ++	459:4:13075:13086	2160947	0	True				
ANR	2161365	AssignmentExpression	* s ++ = * p ++		2160947	0		=			
ANR	2161366	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161367	UnaryOperator	*		2160947	0					
ANR	2161368	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161369	Identifier	s		2160947	0					
ANR	2161370	IncDec	++		2160947	1					
ANR	2161371	UnaryOperationExpression	* p ++		2160947	1					
ANR	2161372	UnaryOperator	*		2160947	0					
ANR	2161373	PostIncDecOperationExpression	p ++		2160947	1					
ANR	2161374	Identifier	p		2160947	0					
ANR	2161375	IncDec	++		2160947	1					
ANR	2161376	ElseStatement	else		2160947	0					
ANR	2161377	CompoundStatement		83:9:1713:1713	2160947	0					
ANR	2161378	ExpressionStatement	* s ++ = '+'	462:3:13107:13117	2160947	0	True				
ANR	2161379	AssignmentExpression	* s ++ = '+'		2160947	0		=			
ANR	2161380	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161381	UnaryOperator	*		2160947	0					
ANR	2161382	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161383	Identifier	s		2160947	0					
ANR	2161384	IncDec	++		2160947	1					
ANR	2161385	PrimaryExpression	'+'		2160947	1					
ANR	2161386	ExpressionStatement	* s ++ = '0'	463:3:13122:13132	2160947	1	True				
ANR	2161387	AssignmentExpression	* s ++ = '0'		2160947	0		=			
ANR	2161388	UnaryOperationExpression	* s ++		2160947	0					
ANR	2161389	UnaryOperator	*		2160947	0					
ANR	2161390	PostIncDecOperationExpression	s ++		2160947	1					
ANR	2161391	Identifier	s		2160947	0					
ANR	2161392	IncDec	++		2160947	1					
ANR	2161393	PrimaryExpression	'0'		2160947	1					
ANR	2161394	ExpressionStatement	* len = s - buf	466:1:13142:13156	2160947	11	True				
ANR	2161395	AssignmentExpression	* len = s - buf		2160947	0		=			
ANR	2161396	UnaryOperationExpression	* len		2160947	0					
ANR	2161397	UnaryOperator	*		2160947	0					
ANR	2161398	Identifier	len		2160947	1					
ANR	2161399	AdditiveExpression	s - buf		2160947	1		-			
ANR	2161400	Identifier	s		2160947	0					
ANR	2161401	Identifier	buf		2160947	1					
ANR	2161402	ExpressionStatement	free ( p_orig )	467:1:13159:13171	2160947	12	True				
ANR	2161403	CallExpression	free ( p_orig )		2160947	0					
ANR	2161404	Callee	free		2160947	0					
ANR	2161405	Identifier	free		2160947	0					
ANR	2161406	ArgumentList	p_orig		2160947	1					
ANR	2161407	Argument	p_orig		2160947	0					
ANR	2161408	Identifier	p_orig		2160947	0					
ANR	2161409	ReturnStatement	return ( buf ) ;	468:1:13174:13186	2160947	13	True				
ANR	2161410	Identifier	buf		2160947	0					
ANR	2161411	ReturnType	PHPAPI char *		2160947	1					
ANR	2161412	Identifier	php_conv_fp		2160947	2					
ANR	2161413	ParameterList	"register char format , register double num , boolean_e add_dp , int precision , char dec_point , bool_int * is_negative , char * buf , int * len"		2160947	3					
ANR	2161414	Parameter	register char format	377:26:11248:11267	2160947	0	True				
ANR	2161415	ParameterType	register char		2160947	0					
ANR	2161416	Identifier	format		2160947	1					
ANR	2161417	Parameter	register double num	377:48:11270:11288	2160947	1	True				
ANR	2161418	ParameterType	register double		2160947	0					
ANR	2161419	Identifier	num		2160947	1					
ANR	2161420	Parameter	boolean_e add_dp	378:3:11294:11309	2160947	2	True				
ANR	2161421	ParameterType	boolean_e		2160947	0					
ANR	2161422	Identifier	add_dp		2160947	1					
ANR	2161423	Parameter	int precision	378:21:11312:11324	2160947	3	True				
ANR	2161424	ParameterType	int		2160947	0					
ANR	2161425	Identifier	precision		2160947	1					
ANR	2161426	Parameter	char dec_point	378:36:11327:11340	2160947	4	True				
ANR	2161427	ParameterType	char		2160947	0					
ANR	2161428	Identifier	dec_point		2160947	1					
ANR	2161429	Parameter	bool_int * is_negative	378:52:11343:11364	2160947	5	True				
ANR	2161430	ParameterType	bool_int *		2160947	0					
ANR	2161431	Identifier	is_negative		2160947	1					
ANR	2161432	Parameter	char * buf	378:76:11367:11375	2160947	6	True				
ANR	2161433	ParameterType	char *		2160947	0					
ANR	2161434	Identifier	buf		2160947	1					
ANR	2161435	Parameter	int * len	378:87:11378:11385	2160947	7	True				
ANR	2161436	ParameterType	int *		2160947	0					
ANR	2161437	Identifier	len		2160947	1					
ANR	2161438	CFGEntryNode	ENTRY		2160947		True				
ANR	2161439	CFGExitNode	EXIT		2160947		True				
ANR	2161440	Symbol	* s ++		2160947						
ANR	2161441	Symbol	isalpha		2160947						
ANR	2161442	Symbol	& exponent_is_negative		2160947						
ANR	2161443	Symbol	decimal_point		2160947						
ANR	2161444	Symbol	t_len		2160947						
ANR	2161445	Symbol	exponent_is_negative		2160947						
ANR	2161446	Symbol	dec_point		2160947						
ANR	2161447	Symbol	num		2160947						
ANR	2161448	Symbol	precision		2160947						
ANR	2161449	Symbol	& t_len		2160947						
ANR	2161450	Symbol	strlen		2160947						
ANR	2161451	Symbol	len		2160947						
ANR	2161452	Symbol	addz		2160947						
ANR	2161453	Symbol	php_ecvt		2160947						
ANR	2161454	Symbol	ap_php_conv_10		2160947						
ANR	2161455	Symbol	& decimal_point		2160947						
ANR	2161456	Symbol	EXPONENT_LENGTH		2160947						
ANR	2161457	Symbol	add_dp		2160947						
ANR	2161458	Symbol	temp		2160947						
ANR	2161459	Symbol	* p ++		2160947						
ANR	2161460	Symbol	format		2160947						
ANR	2161461	Symbol	p		2160947						
ANR	2161462	Symbol	NDIG		2160947						
ANR	2161463	Symbol	buf		2160947						
ANR	2161464	Symbol	s		2160947						
ANR	2161465	Symbol	php_fcvt		2160947						
ANR	2161466	Symbol	* p		2160947						
ANR	2161467	Symbol	FALSE		2160947						
ANR	2161468	Symbol	is_negative		2160947						
ANR	2161469	Symbol	p_orig		2160947						
ANR	2161470	Symbol	* len		2160947						
ANR	2161471	Symbol	* is_negative		2160947						
ANR	2161472	Function	ap_php_conv_p2	482:0:13623:14097							
ANR	2161473	FunctionDef	"ap_php_conv_p2 (register u_wide_int num , register int nbits , char format , char * buf_end , register int * len)"		2161472	0					
ANR	2161474	CompoundStatement		483:0:13754:14097	2161472	0					
ANR	2161475	Statement	register	484:1:13757:13764	2161472	0	True				
ANR	2161476	IdentifierDeclStatement	int mask = ( 1 << nbits ) - 1 ;	484:10:13766:13793	2161472	1	True				
ANR	2161477	IdentifierDecl	mask = ( 1 << nbits ) - 1		2161472	0					
ANR	2161478	IdentifierDeclType	int		2161472	0					
ANR	2161479	Identifier	mask		2161472	1					
ANR	2161480	AssignmentExpression	mask = ( 1 << nbits ) - 1		2161472	2		=			
ANR	2161481	Identifier	mask		2161472	0					
ANR	2161482	AdditiveExpression	( 1 << nbits ) - 1		2161472	1		-			
ANR	2161483	ShiftExpression	1 << nbits		2161472	0		<<			
ANR	2161484	PrimaryExpression	1		2161472	0					
ANR	2161485	Identifier	nbits		2161472	1					
ANR	2161486	PrimaryExpression	1		2161472	1					
ANR	2161487	Statement	register	485:1:13796:13803	2161472	2	True				
ANR	2161488	IdentifierDeclStatement	char * p = buf_end ;	485:10:13805:13822	2161472	3	True				
ANR	2161489	IdentifierDecl	* p = buf_end		2161472	0					
ANR	2161490	IdentifierDeclType	char *		2161472	0					
ANR	2161491	Identifier	p		2161472	1					
ANR	2161492	AssignmentExpression	* p = buf_end		2161472	2		=			
ANR	2161493	Identifier	buf_end		2161472	0					
ANR	2161494	Identifier	buf_end		2161472	1					
ANR	2161495	Statement	static	486:1:13825:13830	2161472	4	True				
ANR	2161496	IdentifierDeclStatement	"char low_digits [ ] = ""0123456789abcdef"" ;"	486:8:13832:13870	2161472	5	True				
ANR	2161497	IdentifierDecl	"low_digits [ ] = ""0123456789abcdef"""		2161472	0					
ANR	2161498	IdentifierDeclType	char [ ]		2161472	0					
ANR	2161499	Identifier	low_digits		2161472	1					
ANR	2161500	AssignmentExpression	"low_digits [ ] = ""0123456789abcdef"""		2161472	2		=			
ANR	2161501	Identifier	low_digits		2161472	0					
ANR	2161502	PrimaryExpression	"""0123456789abcdef"""		2161472	1					
ANR	2161503	Statement	static	487:1:13873:13878	2161472	6	True				
ANR	2161504	IdentifierDeclStatement	"char upper_digits [ ] = ""0123456789ABCDEF"" ;"	487:8:13880:13920	2161472	7	True				
ANR	2161505	IdentifierDecl	"upper_digits [ ] = ""0123456789ABCDEF"""		2161472	0					
ANR	2161506	IdentifierDeclType	char [ ]		2161472	0					
ANR	2161507	Identifier	upper_digits		2161472	1					
ANR	2161508	AssignmentExpression	"upper_digits [ ] = ""0123456789ABCDEF"""		2161472	2		=			
ANR	2161509	Identifier	upper_digits		2161472	0					
ANR	2161510	PrimaryExpression	"""0123456789ABCDEF"""		2161472	1					
ANR	2161511	Statement	register	488:1:13923:13930	2161472	8	True				
ANR	2161512	IdentifierDeclStatement	char * digits = ( format == 'X' ) ? upper_digits : low_digits ;	488:10:13932:13990	2161472	9	True				
ANR	2161513	IdentifierDecl	* digits = ( format == 'X' ) ? upper_digits : low_digits		2161472	0					
ANR	2161514	IdentifierDeclType	char *		2161472	0					
ANR	2161515	Identifier	digits		2161472	1					
ANR	2161516	AssignmentExpression	* digits = ( format == 'X' ) ? upper_digits : low_digits		2161472	2		=			
ANR	2161517	Identifier	digits		2161472	0					
ANR	2161518	ConditionalExpression	( format == 'X' ) ? upper_digits : low_digits		2161472	1					
ANR	2161519	Condition	format == 'X'		2161472	0					
ANR	2161520	EqualityExpression	format == 'X'		2161472	0		==			
ANR	2161521	Identifier	format		2161472	0					
ANR	2161522	PrimaryExpression	'X'		2161472	1					
ANR	2161523	Identifier	upper_digits		2161472	1					
ANR	2161524	Identifier	low_digits		2161472	2					
ANR	2161525	DoStatement	do		2161472	10					
ANR	2161526	CompoundStatement		8:4:242:242	2161472	0					
ANR	2161527	ExpressionStatement	* -- p = digits [ num & mask ]	491:2:14001:14026	2161472	0	True				
ANR	2161528	AssignmentExpression	* -- p = digits [ num & mask ]		2161472	0		=			
ANR	2161529	UnaryOperationExpression	* -- p		2161472	0					
ANR	2161530	UnaryOperator	*		2161472	0					
ANR	2161531	UnaryExpression	-- p		2161472	1					
ANR	2161532	IncDec	--		2161472	0					
ANR	2161533	Identifier	p		2161472	1					
ANR	2161534	ArrayIndexing	digits [ num & mask ]		2161472	1					
ANR	2161535	Identifier	digits		2161472	0					
ANR	2161536	BitAndExpression	num & mask		2161472	1		&			
ANR	2161537	Identifier	num		2161472	0					
ANR	2161538	Identifier	mask		2161472	1					
ANR	2161539	ExpressionStatement	num >>= nbits	492:2:14030:14043	2161472	1	True				
ANR	2161540	AssignmentExpression	num >>= nbits		2161472	0		>>=			
ANR	2161541	Identifier	num		2161472	0					
ANR	2161542	Identifier	nbits		2161472	1					
ANR	2161543	Condition	num	494:8:14056:14058	2161472	1	True				
ANR	2161544	Identifier	num		2161472	0					
ANR	2161545	ExpressionStatement	* len = buf_end - p	496:1:14064:14082	2161472	11	True				
ANR	2161546	AssignmentExpression	* len = buf_end - p		2161472	0		=			
ANR	2161547	UnaryOperationExpression	* len		2161472	0					
ANR	2161548	UnaryOperator	*		2161472	0					
ANR	2161549	Identifier	len		2161472	1					
ANR	2161550	AdditiveExpression	buf_end - p		2161472	1		-			
ANR	2161551	Identifier	buf_end		2161472	0					
ANR	2161552	Identifier	p		2161472	1					
ANR	2161553	ReturnStatement	return ( p ) ;	497:1:14085:14095	2161472	12	True				
ANR	2161554	Identifier	p		2161472	0					
ANR	2161555	ReturnType	PHPAPI char *		2161472	1					
ANR	2161556	Identifier	ap_php_conv_p2		2161472	2					
ANR	2161557	ParameterList	"register u_wide_int num , register int nbits , char format , char * buf_end , register int * len"		2161472	3					
ANR	2161558	Parameter	register u_wide_int num	482:29:13652:13674	2161472	0	True				
ANR	2161559	ParameterType	register u_wide_int		2161472	0					
ANR	2161560	Identifier	num		2161472	1					
ANR	2161561	Parameter	register int nbits	482:54:13677:13694	2161472	1	True				
ANR	2161562	ParameterType	register int		2161472	0					
ANR	2161563	Identifier	nbits		2161472	1					
ANR	2161564	Parameter	char format	482:74:13697:13707	2161472	2	True				
ANR	2161565	ParameterType	char		2161472	0					
ANR	2161566	Identifier	format		2161472	1					
ANR	2161567	Parameter	char * buf_end	482:87:13710:13722	2161472	3	True				
ANR	2161568	ParameterType	char *		2161472	0					
ANR	2161569	Identifier	buf_end		2161472	1					
ANR	2161570	Parameter	register int * len	482:102:13725:13741	2161472	4	True				
ANR	2161571	ParameterType	register int *		2161472	0					
ANR	2161572	Identifier	len		2161472	1					
ANR	2161573	CFGEntryNode	ENTRY		2161472		True				
ANR	2161574	CFGExitNode	EXIT		2161472		True				
ANR	2161575	Symbol	* mask		2161472						
ANR	2161576	Symbol	* -- p		2161472						
ANR	2161577	Symbol	num		2161472						
ANR	2161578	Symbol	nbits		2161472						
ANR	2161579	Symbol	format		2161472						
ANR	2161580	Symbol	* digits		2161472						
ANR	2161581	Symbol	p		2161472						
ANR	2161582	Symbol	* num		2161472						
ANR	2161583	Symbol	low_digits		2161472						
ANR	2161584	Symbol	upper_digits		2161472						
ANR	2161585	Symbol	len		2161472						
ANR	2161586	Symbol	digits		2161472						
ANR	2161587	Symbol	* p		2161472						
ANR	2161588	Symbol	buf_end		2161472						
ANR	2161589	Symbol	mask		2161472						
ANR	2161590	Symbol	* len		2161472						
ANR	2161591	ClassDef	buf_area	515:0:14423:14517							
ANR	2161592	DeclStmt									
ANR	2161593	Decl							char	char *	buf_end
ANR	2161594	DeclStmt									
ANR	2161595	Decl							char	char *	nextb
ANR	2161596	DeclStmt									
ANR	2161597	Decl							struct buf_area	struct buf_area	buffy
ANR	2161598	Function	format_converter	587:0:16183:29673							
ANR	2161599	FunctionDef	"format_converter (register buffy * odp , const char * fmt , va_list ap)"		2161598	0					
ANR	2161600	CompoundStatement		588:0:16272:29673	2161598	0					
ANR	2161601	IdentifierDeclStatement	char * sp ;	589:1:16275:16283	2161598	0	True				
ANR	2161602	IdentifierDecl	* sp		2161598	0					
ANR	2161603	IdentifierDeclType	char *		2161598	0					
ANR	2161604	Identifier	sp		2161598	1					
ANR	2161605	IdentifierDeclStatement	char * bep ;	590:1:16286:16295	2161598	1	True				
ANR	2161606	IdentifierDecl	* bep		2161598	0					
ANR	2161607	IdentifierDeclType	char *		2161598	0					
ANR	2161608	Identifier	bep		2161598	1					
ANR	2161609	IdentifierDeclStatement	int cc = 0 ;	591:1:16298:16308	2161598	2	True				
ANR	2161610	IdentifierDecl	cc = 0		2161598	0					
ANR	2161611	IdentifierDeclType	int		2161598	0					
ANR	2161612	Identifier	cc		2161598	1					
ANR	2161613	AssignmentExpression	cc = 0		2161598	2		=			
ANR	2161614	Identifier	cc		2161598	0					
ANR	2161615	PrimaryExpression	0		2161598	1					
ANR	2161616	IdentifierDeclStatement	int i ;	592:1:16311:16316	2161598	3	True				
ANR	2161617	IdentifierDecl	i		2161598	0					
ANR	2161618	IdentifierDeclType	int		2161598	0					
ANR	2161619	Identifier	i		2161598	1					
ANR	2161620	IdentifierDeclStatement	char * s = NULL ;	594:1:16320:16334	2161598	4	True				
ANR	2161621	IdentifierDecl	* s = NULL		2161598	0					
ANR	2161622	IdentifierDeclType	char *		2161598	0					
ANR	2161623	Identifier	s		2161598	1					
ANR	2161624	AssignmentExpression	* s = NULL		2161598	2		=			
ANR	2161625	Identifier	NULL		2161598	0					
ANR	2161626	Identifier	NULL		2161598	1					
ANR	2161627	IdentifierDeclStatement	"int s_len , free_zcopy ;"	595:1:16337:16358	2161598	5	True				
ANR	2161628	IdentifierDecl	s_len		2161598	0					
ANR	2161629	IdentifierDeclType	int		2161598	0					
ANR	2161630	Identifier	s_len		2161598	1					
ANR	2161631	IdentifierDecl	free_zcopy		2161598	1					
ANR	2161632	IdentifierDeclType	int		2161598	0					
ANR	2161633	Identifier	free_zcopy		2161598	1					
ANR	2161634	IdentifierDeclStatement	"zval * zvp , zcopy ;"	596:1:16361:16377	2161598	6	True				
ANR	2161635	IdentifierDecl	* zvp		2161598	0					
ANR	2161636	IdentifierDeclType	zval *		2161598	0					
ANR	2161637	Identifier	zvp		2161598	1					
ANR	2161638	IdentifierDecl	zcopy		2161598	1					
ANR	2161639	IdentifierDeclType	zval		2161598	0					
ANR	2161640	Identifier	zcopy		2161598	1					
ANR	2161641	IdentifierDeclStatement	int min_width = 0 ;	598:1:16381:16398	2161598	7	True				
ANR	2161642	IdentifierDecl	min_width = 0		2161598	0					
ANR	2161643	IdentifierDeclType	int		2161598	0					
ANR	2161644	Identifier	min_width		2161598	1					
ANR	2161645	AssignmentExpression	min_width = 0		2161598	2		=			
ANR	2161646	Identifier	min_width		2161598	0					
ANR	2161647	PrimaryExpression	0		2161598	1					
ANR	2161648	IdentifierDeclStatement	int precision = 0 ;	599:1:16401:16418	2161598	8	True				
ANR	2161649	IdentifierDecl	precision = 0		2161598	0					
ANR	2161650	IdentifierDeclType	int		2161598	0					
ANR	2161651	Identifier	precision		2161598	1					
ANR	2161652	AssignmentExpression	precision = 0		2161598	2		=			
ANR	2161653	Identifier	precision		2161598	0					
ANR	2161654	PrimaryExpression	0		2161598	1					
ANR	2161655	ClassDefStatement	"enum { LEFT , RIGHT } adjust ;"	600:1:16421:16451	2161598	9	True				
ANR	2161656	IdentifierDecl	adjust		2161598	0					
ANR	2161657	IdentifierDeclType			2161598	0					
ANR	2161658	Identifier	adjust		2161598	1					
ANR	2161659	IdentifierDeclStatement	char pad_char ;	603:1:16454:16467	2161598	10	True				
ANR	2161660	IdentifierDecl	pad_char		2161598	0					
ANR	2161661	IdentifierDeclType	char		2161598	0					
ANR	2161662	Identifier	pad_char		2161598	1					
ANR	2161663	IdentifierDeclStatement	char prefix_char ;	604:1:16470:16486	2161598	11	True				
ANR	2161664	IdentifierDecl	prefix_char		2161598	0					
ANR	2161665	IdentifierDeclType	char		2161598	0					
ANR	2161666	Identifier	prefix_char		2161598	1					
ANR	2161667	IdentifierDeclStatement	double fp_num ;	606:1:16490:16503	2161598	12	True				
ANR	2161668	IdentifierDecl	fp_num		2161598	0					
ANR	2161669	IdentifierDeclType	double		2161598	0					
ANR	2161670	Identifier	fp_num		2161598	1					
ANR	2161671	IdentifierDeclStatement	wide_int i_num = ( wide_int ) 0 ;	607:1:16506:16535	2161598	13	True				
ANR	2161672	IdentifierDecl	i_num = ( wide_int ) 0		2161598	0					
ANR	2161673	IdentifierDeclType	wide_int		2161598	0					
ANR	2161674	Identifier	i_num		2161598	1					
ANR	2161675	AssignmentExpression	i_num = ( wide_int ) 0		2161598	2		=			
ANR	2161676	Identifier	i_num		2161598	0					
ANR	2161677	CastExpression	( wide_int ) 0		2161598	1					
ANR	2161678	CastTarget	wide_int		2161598	0					
ANR	2161679	PrimaryExpression	0		2161598	1					
ANR	2161680	IdentifierDeclStatement	u_wide_int ui_num ;	608:1:16538:16555	2161598	14	True				
ANR	2161681	IdentifierDecl	ui_num		2161598	0					
ANR	2161682	IdentifierDeclType	u_wide_int		2161598	0					
ANR	2161683	Identifier	ui_num		2161598	1					
ANR	2161684	IdentifierDeclStatement	char num_buf [ NUM_BUF_SIZE ] ;	610:1:16559:16585	2161598	15	True				
ANR	2161685	IdentifierDecl	num_buf [ NUM_BUF_SIZE ]		2161598	0					
ANR	2161686	IdentifierDeclType	char [ NUM_BUF_SIZE ]		2161598	0					
ANR	2161687	Identifier	num_buf		2161598	1					
ANR	2161688	Identifier	NUM_BUF_SIZE		2161598	2					
ANR	2161689	IdentifierDeclStatement	char char_buf [ 2 ] ;	611:1:16588:16604	2161598	16	True				
ANR	2161690	IdentifierDecl	char_buf [ 2 ]		2161598	0					
ANR	2161691	IdentifierDeclType	char [ 2 ]		2161598	0					
ANR	2161692	Identifier	char_buf		2161598	1					
ANR	2161693	PrimaryExpression	2		2161598	2					
ANR	2161694	IdentifierDeclStatement	struct lconv lconv ;	615:1:16679:16697	2161598	17	True				
ANR	2161695	IdentifierDecl	lconv		2161598	0					
ANR	2161696	IdentifierDeclType	struct lconv		2161598	0					
ANR	2161697	Identifier	lconv		2161598	1					
ANR	2161698	IdentifierDeclStatement	length_modifier_e modifier ;	624:1:16778:16804	2161598	18	True				
ANR	2161699	IdentifierDecl	modifier		2161598	0					
ANR	2161700	IdentifierDeclType	length_modifier_e		2161598	0					
ANR	2161701	Identifier	modifier		2161598	1					
ANR	2161702	IdentifierDeclStatement	boolean_e alternate_form ;	625:1:16807:16831	2161598	19	True				
ANR	2161703	IdentifierDecl	alternate_form		2161598	0					
ANR	2161704	IdentifierDeclType	boolean_e		2161598	0					
ANR	2161705	Identifier	alternate_form		2161598	1					
ANR	2161706	IdentifierDeclStatement	boolean_e print_sign ;	626:1:16834:16854	2161598	20	True				
ANR	2161707	IdentifierDecl	print_sign		2161598	0					
ANR	2161708	IdentifierDeclType	boolean_e		2161598	0					
ANR	2161709	Identifier	print_sign		2161598	1					
ANR	2161710	IdentifierDeclStatement	boolean_e print_blank ;	627:1:16857:16878	2161598	21	True				
ANR	2161711	IdentifierDecl	print_blank		2161598	0					
ANR	2161712	IdentifierDeclType	boolean_e		2161598	0					
ANR	2161713	Identifier	print_blank		2161598	1					
ANR	2161714	IdentifierDeclStatement	boolean_e adjust_precision ;	628:1:16881:16907	2161598	22	True				
ANR	2161715	IdentifierDecl	adjust_precision		2161598	0					
ANR	2161716	IdentifierDeclType	boolean_e		2161598	0					
ANR	2161717	Identifier	adjust_precision		2161598	1					
ANR	2161718	IdentifierDeclStatement	boolean_e adjust_width ;	629:1:16910:16932	2161598	23	True				
ANR	2161719	IdentifierDecl	adjust_width		2161598	0					
ANR	2161720	IdentifierDeclType	boolean_e		2161598	0					
ANR	2161721	Identifier	adjust_width		2161598	1					
ANR	2161722	IdentifierDeclStatement	bool_int is_negative ;	630:1:16935:16955	2161598	24	True				
ANR	2161723	IdentifierDecl	is_negative		2161598	0					
ANR	2161724	IdentifierDeclType	bool_int		2161598	0					
ANR	2161725	Identifier	is_negative		2161598	1					
ANR	2161726	ExpressionStatement	sp = odp -> nextb	632:1:16959:16974	2161598	25	True				
ANR	2161727	AssignmentExpression	sp = odp -> nextb		2161598	0		=			
ANR	2161728	Identifier	sp		2161598	0					
ANR	2161729	PtrMemberAccess	odp -> nextb		2161598	1					
ANR	2161730	Identifier	odp		2161598	0					
ANR	2161731	Identifier	nextb		2161598	1					
ANR	2161732	ExpressionStatement	bep = odp -> buf_end	633:1:16977:16995	2161598	26	True				
ANR	2161733	AssignmentExpression	bep = odp -> buf_end		2161598	0		=			
ANR	2161734	Identifier	bep		2161598	0					
ANR	2161735	PtrMemberAccess	odp -> buf_end		2161598	1					
ANR	2161736	Identifier	odp		2161598	0					
ANR	2161737	Identifier	buf_end		2161598	1					
ANR	2161738	WhileStatement	while ( * fmt )		2161598	27					
ANR	2161739	Condition	* fmt	635:8:17006:17009	2161598	0	True				
ANR	2161740	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161741	UnaryOperator	*		2161598	0					
ANR	2161742	Identifier	fmt		2161598	1					
ANR	2161743	CompoundStatement		48:14:739:739	2161598	1					
ANR	2161744	IfStatement	if ( * fmt != '%' )		2161598	0					
ANR	2161745	Condition	* fmt != '%'	636:6:17020:17030	2161598	0	True				
ANR	2161746	EqualityExpression	* fmt != '%'		2161598	0		!=			
ANR	2161747	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161748	UnaryOperator	*		2161598	0					
ANR	2161749	Identifier	fmt		2161598	1					
ANR	2161750	PrimaryExpression	'%'		2161598	1					
ANR	2161751	CompoundStatement		49:19:760:760	2161598	1					
ANR	2161752	ExpressionStatement	"INS_CHAR ( * fmt , sp , bep , cc )"	637:3:17038:17065	2161598	0	True				
ANR	2161753	CallExpression	"INS_CHAR ( * fmt , sp , bep , cc )"		2161598	0					
ANR	2161754	Callee	INS_CHAR		2161598	0					
ANR	2161755	Identifier	INS_CHAR		2161598	0					
ANR	2161756	ArgumentList	* fmt		2161598	1					
ANR	2161757	Argument	* fmt		2161598	0					
ANR	2161758	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161759	UnaryOperator	*		2161598	0					
ANR	2161760	Identifier	fmt		2161598	1					
ANR	2161761	Argument	sp		2161598	1					
ANR	2161762	Identifier	sp		2161598	0					
ANR	2161763	Argument	bep		2161598	2					
ANR	2161764	Identifier	bep		2161598	0					
ANR	2161765	Argument	cc		2161598	3					
ANR	2161766	Identifier	cc		2161598	0					
ANR	2161767	ElseStatement	else		2161598	0					
ANR	2161768	CompoundStatement		51:9:803:803	2161598	0					
ANR	2161769	ExpressionStatement	adjust = RIGHT	642:3:17126:17140	2161598	0	True				
ANR	2161770	AssignmentExpression	adjust = RIGHT		2161598	0		=			
ANR	2161771	Identifier	adjust		2161598	0					
ANR	2161772	Identifier	RIGHT		2161598	1					
ANR	2161773	ExpressionStatement	alternate_form = print_sign = print_blank = NO	643:3:17145:17191	2161598	1	True				
ANR	2161774	AssignmentExpression	alternate_form = print_sign = print_blank = NO		2161598	0		=			
ANR	2161775	Identifier	alternate_form		2161598	0					
ANR	2161776	AssignmentExpression	print_sign = print_blank = NO		2161598	1		=			
ANR	2161777	Identifier	print_sign		2161598	0					
ANR	2161778	AssignmentExpression	print_blank = NO		2161598	1		=			
ANR	2161779	Identifier	print_blank		2161598	0					
ANR	2161780	Identifier	NO		2161598	1					
ANR	2161781	ExpressionStatement	pad_char = ' '	644:3:17196:17210	2161598	2	True				
ANR	2161782	AssignmentExpression	pad_char = ' '		2161598	0		=			
ANR	2161783	Identifier	pad_char		2161598	0					
ANR	2161784	PrimaryExpression	' '		2161598	1					
ANR	2161785	ExpressionStatement	prefix_char = NUL	645:3:17215:17232	2161598	3	True				
ANR	2161786	AssignmentExpression	prefix_char = NUL		2161598	0		=			
ANR	2161787	Identifier	prefix_char		2161598	0					
ANR	2161788	Identifier	NUL		2161598	1					
ANR	2161789	ExpressionStatement	free_zcopy = 0	646:3:17237:17251	2161598	4	True				
ANR	2161790	AssignmentExpression	free_zcopy = 0		2161598	0		=			
ANR	2161791	Identifier	free_zcopy		2161598	0					
ANR	2161792	PrimaryExpression	0		2161598	1					
ANR	2161793	ExpressionStatement	fmt ++	648:3:17257:17262	2161598	5	True				
ANR	2161794	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2161795	Identifier	fmt		2161598	0					
ANR	2161796	IncDec	++		2161598	1					
ANR	2161797	IfStatement	if ( isascii ( ( int ) * fmt ) && ! islower ( ( int ) * fmt ) )		2161598	6					
ANR	2161798	Condition	isascii ( ( int ) * fmt ) && ! islower ( ( int ) * fmt )	653:7:17343:17383	2161598	0	True				
ANR	2161799	AndExpression	isascii ( ( int ) * fmt ) && ! islower ( ( int ) * fmt )		2161598	0		&&			
ANR	2161800	CallExpression	isascii ( ( int ) * fmt )		2161598	0					
ANR	2161801	Callee	isascii		2161598	0					
ANR	2161802	Identifier	isascii		2161598	0					
ANR	2161803	ArgumentList	( int ) * fmt		2161598	1					
ANR	2161804	Argument	( int ) * fmt		2161598	0					
ANR	2161805	CastExpression	( int ) * fmt		2161598	0					
ANR	2161806	CastTarget	int		2161598	0					
ANR	2161807	UnaryOperationExpression	* fmt		2161598	1					
ANR	2161808	UnaryOperator	*		2161598	0					
ANR	2161809	Identifier	fmt		2161598	1					
ANR	2161810	UnaryOperationExpression	! islower ( ( int ) * fmt )		2161598	1					
ANR	2161811	UnaryOperator	!		2161598	0					
ANR	2161812	CallExpression	islower ( ( int ) * fmt )		2161598	1					
ANR	2161813	Callee	islower		2161598	0					
ANR	2161814	Identifier	islower		2161598	0					
ANR	2161815	ArgumentList	( int ) * fmt		2161598	1					
ANR	2161816	Argument	( int ) * fmt		2161598	0					
ANR	2161817	CastExpression	( int ) * fmt		2161598	0					
ANR	2161818	CastTarget	int		2161598	0					
ANR	2161819	UnaryOperationExpression	* fmt		2161598	1					
ANR	2161820	UnaryOperator	*		2161598	0					
ANR	2161821	Identifier	fmt		2161598	1					
ANR	2161822	CompoundStatement		66:50:1113:1113	2161598	1					
ANR	2161823	ForStatement	for ( ; ; fmt ++ )		2161598	0					
ANR	2161824	PostIncDecOperationExpression	fmt ++	657:12:17454:17458	2161598	0	True				
ANR	2161825	Identifier	fmt		2161598	0					
ANR	2161826	IncDec	++		2161598	1					
ANR	2161827	CompoundStatement		70:19:1188:1188	2161598	1					
ANR	2161828	IfStatement	if ( * fmt == '-' )		2161598	0					
ANR	2161829	Condition	* fmt == '-'	658:9:17472:17482	2161598	0	True				
ANR	2161830	EqualityExpression	* fmt == '-'		2161598	0		==			
ANR	2161831	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161832	UnaryOperator	*		2161598	0					
ANR	2161833	Identifier	fmt		2161598	1					
ANR	2161834	PrimaryExpression	'-'		2161598	1					
ANR	2161835	ExpressionStatement	adjust = LEFT	659:6:17491:17504	2161598	1	True				
ANR	2161836	AssignmentExpression	adjust = LEFT		2161598	0		=			
ANR	2161837	Identifier	adjust		2161598	0					
ANR	2161838	Identifier	LEFT		2161598	1					
ANR	2161839	ElseStatement	else		2161598	0					
ANR	2161840	IfStatement	if ( * fmt == '+' )		2161598	0					
ANR	2161841	Condition	* fmt == '+'	660:14:17520:17530	2161598	0	True				
ANR	2161842	EqualityExpression	* fmt == '+'		2161598	0		==			
ANR	2161843	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161844	UnaryOperator	*		2161598	0					
ANR	2161845	Identifier	fmt		2161598	1					
ANR	2161846	PrimaryExpression	'+'		2161598	1					
ANR	2161847	ExpressionStatement	print_sign = YES	661:6:17539:17555	2161598	1	True				
ANR	2161848	AssignmentExpression	print_sign = YES		2161598	0		=			
ANR	2161849	Identifier	print_sign		2161598	0					
ANR	2161850	Identifier	YES		2161598	1					
ANR	2161851	ElseStatement	else		2161598	0					
ANR	2161852	IfStatement	if ( * fmt == '#' )		2161598	0					
ANR	2161853	Condition	* fmt == '#'	662:14:17571:17581	2161598	0	True				
ANR	2161854	EqualityExpression	* fmt == '#'		2161598	0		==			
ANR	2161855	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161856	UnaryOperator	*		2161598	0					
ANR	2161857	Identifier	fmt		2161598	1					
ANR	2161858	PrimaryExpression	'#'		2161598	1					
ANR	2161859	ExpressionStatement	alternate_form = YES	663:6:17590:17610	2161598	1	True				
ANR	2161860	AssignmentExpression	alternate_form = YES		2161598	0		=			
ANR	2161861	Identifier	alternate_form		2161598	0					
ANR	2161862	Identifier	YES		2161598	1					
ANR	2161863	ElseStatement	else		2161598	0					
ANR	2161864	IfStatement	if ( * fmt == ' ' )		2161598	0					
ANR	2161865	Condition	* fmt == ' '	664:14:17626:17636	2161598	0	True				
ANR	2161866	EqualityExpression	* fmt == ' '		2161598	0		==			
ANR	2161867	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161868	UnaryOperator	*		2161598	0					
ANR	2161869	Identifier	fmt		2161598	1					
ANR	2161870	PrimaryExpression	' '		2161598	1					
ANR	2161871	ExpressionStatement	print_blank = YES	665:6:17645:17662	2161598	1	True				
ANR	2161872	AssignmentExpression	print_blank = YES		2161598	0		=			
ANR	2161873	Identifier	print_blank		2161598	0					
ANR	2161874	Identifier	YES		2161598	1					
ANR	2161875	ElseStatement	else		2161598	0					
ANR	2161876	IfStatement	if ( * fmt == '0' )		2161598	0					
ANR	2161877	Condition	* fmt == '0'	666:14:17678:17688	2161598	0	True				
ANR	2161878	EqualityExpression	* fmt == '0'		2161598	0		==			
ANR	2161879	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161880	UnaryOperator	*		2161598	0					
ANR	2161881	Identifier	fmt		2161598	1					
ANR	2161882	PrimaryExpression	'0'		2161598	1					
ANR	2161883	ExpressionStatement	pad_char = '0'	667:6:17697:17711	2161598	1	True				
ANR	2161884	AssignmentExpression	pad_char = '0'		2161598	0		=			
ANR	2161885	Identifier	pad_char		2161598	0					
ANR	2161886	PrimaryExpression	'0'		2161598	1					
ANR	2161887	ElseStatement	else		2161598	0					
ANR	2161888	BreakStatement	break ;	669:6:17729:17734	2161598	0	True				
ANR	2161889	IfStatement	if ( isdigit ( ( int ) * fmt ) )		2161598	1					
ANR	2161890	Condition	isdigit ( ( int ) * fmt )	675:8:17804:17821	2161598	0	True				
ANR	2161891	CallExpression	isdigit ( ( int ) * fmt )		2161598	0					
ANR	2161892	Callee	isdigit		2161598	0					
ANR	2161893	Identifier	isdigit		2161598	0					
ANR	2161894	ArgumentList	( int ) * fmt		2161598	1					
ANR	2161895	Argument	( int ) * fmt		2161598	0					
ANR	2161896	CastExpression	( int ) * fmt		2161598	0					
ANR	2161897	CastTarget	int		2161598	0					
ANR	2161898	UnaryOperationExpression	* fmt		2161598	1					
ANR	2161899	UnaryOperator	*		2161598	0					
ANR	2161900	Identifier	fmt		2161598	1					
ANR	2161901	CompoundStatement		88:28:1551:1551	2161598	1					
ANR	2161902	ExpressionStatement	"STR_TO_DEC ( fmt , min_width )"	676:5:17831:17857	2161598	0	True				
ANR	2161903	CallExpression	"STR_TO_DEC ( fmt , min_width )"		2161598	0					
ANR	2161904	Callee	STR_TO_DEC		2161598	0					
ANR	2161905	Identifier	STR_TO_DEC		2161598	0					
ANR	2161906	ArgumentList	fmt		2161598	1					
ANR	2161907	Argument	fmt		2161598	0					
ANR	2161908	Identifier	fmt		2161598	0					
ANR	2161909	Argument	min_width		2161598	1					
ANR	2161910	Identifier	min_width		2161598	0					
ANR	2161911	ExpressionStatement	adjust_width = YES	677:5:17864:17882	2161598	1	True				
ANR	2161912	AssignmentExpression	adjust_width = YES		2161598	0		=			
ANR	2161913	Identifier	adjust_width		2161598	0					
ANR	2161914	Identifier	YES		2161598	1					
ANR	2161915	ElseStatement	else		2161598	0					
ANR	2161916	IfStatement	if ( * fmt == '*' )		2161598	0					
ANR	2161917	Condition	* fmt == '*'	678:15:17899:17909	2161598	0	True				
ANR	2161918	EqualityExpression	* fmt == '*'		2161598	0		==			
ANR	2161919	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161920	UnaryOperator	*		2161598	0					
ANR	2161921	Identifier	fmt		2161598	1					
ANR	2161922	PrimaryExpression	'*'		2161598	1					
ANR	2161923	CompoundStatement		91:28:1639:1639	2161598	1					
ANR	2161924	ExpressionStatement	"min_width = va_arg ( ap , int )"	679:5:17919:17946	2161598	0	True				
ANR	2161925	AssignmentExpression	"min_width = va_arg ( ap , int )"		2161598	0		=			
ANR	2161926	Identifier	min_width		2161598	0					
ANR	2161927	CallExpression	"va_arg ( ap , int )"		2161598	1					
ANR	2161928	Callee	va_arg		2161598	0					
ANR	2161929	Identifier	va_arg		2161598	0					
ANR	2161930	ArgumentList	ap		2161598	1					
ANR	2161931	Argument	ap		2161598	0					
ANR	2161932	Identifier	ap		2161598	0					
ANR	2161933	Argument	int		2161598	1					
ANR	2161934	Identifier	int		2161598	0					
ANR	2161935	ExpressionStatement	fmt ++	680:5:17953:17958	2161598	1	True				
ANR	2161936	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2161937	Identifier	fmt		2161598	0					
ANR	2161938	IncDec	++		2161598	1					
ANR	2161939	ExpressionStatement	adjust_width = YES	681:5:17965:17983	2161598	2	True				
ANR	2161940	AssignmentExpression	adjust_width = YES		2161598	0		=			
ANR	2161941	Identifier	adjust_width		2161598	0					
ANR	2161942	Identifier	YES		2161598	1					
ANR	2161943	IfStatement	if ( min_width < 0 )		2161598	3					
ANR	2161944	Condition	min_width < 0	682:9:17994:18006	2161598	0	True				
ANR	2161945	RelationalExpression	min_width < 0		2161598	0		<			
ANR	2161946	Identifier	min_width		2161598	0					
ANR	2161947	PrimaryExpression	0		2161598	1					
ANR	2161948	CompoundStatement		95:24:1736:1736	2161598	1					
ANR	2161949	ExpressionStatement	adjust = LEFT	683:6:18017:18030	2161598	0	True				
ANR	2161950	AssignmentExpression	adjust = LEFT		2161598	0		=			
ANR	2161951	Identifier	adjust		2161598	0					
ANR	2161952	Identifier	LEFT		2161598	1					
ANR	2161953	ExpressionStatement	min_width = - min_width	684:6:18038:18060	2161598	1	True				
ANR	2161954	AssignmentExpression	min_width = - min_width		2161598	0		=			
ANR	2161955	Identifier	min_width		2161598	0					
ANR	2161956	UnaryOperationExpression	- min_width		2161598	1					
ANR	2161957	UnaryOperator	-		2161598	0					
ANR	2161958	Identifier	min_width		2161598	1					
ANR	2161959	ElseStatement	else		2161598	0					
ANR	2161960	ExpressionStatement	adjust_width = NO	687:5:18085:18102	2161598	0	True				
ANR	2161961	AssignmentExpression	adjust_width = NO		2161598	0		=			
ANR	2161962	Identifier	adjust_width		2161598	0					
ANR	2161963	Identifier	NO		2161598	1					
ANR	2161964	IfStatement	if ( * fmt == '.' )		2161598	2					
ANR	2161965	Condition	* fmt == '.'	692:8:18170:18180	2161598	0	True				
ANR	2161966	EqualityExpression	* fmt == '.'		2161598	0		==			
ANR	2161967	UnaryOperationExpression	* fmt		2161598	0					
ANR	2161968	UnaryOperator	*		2161598	0					
ANR	2161969	Identifier	fmt		2161598	1					
ANR	2161970	PrimaryExpression	'.'		2161598	1					
ANR	2161971	CompoundStatement		105:21:1910:1910	2161598	1					
ANR	2161972	ExpressionStatement	adjust_precision = YES	693:5:18190:18212	2161598	0	True				
ANR	2161973	AssignmentExpression	adjust_precision = YES		2161598	0		=			
ANR	2161974	Identifier	adjust_precision		2161598	0					
ANR	2161975	Identifier	YES		2161598	1					
ANR	2161976	ExpressionStatement	fmt ++	694:5:18219:18224	2161598	1	True				
ANR	2161977	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2161978	Identifier	fmt		2161598	0					
ANR	2161979	IncDec	++		2161598	1					
ANR	2161980	IfStatement	if ( isdigit ( ( int ) * fmt ) )		2161598	2					
ANR	2161981	Condition	isdigit ( ( int ) * fmt )	695:9:18235:18252	2161598	0	True				
ANR	2161982	CallExpression	isdigit ( ( int ) * fmt )		2161598	0					
ANR	2161983	Callee	isdigit		2161598	0					
ANR	2161984	Identifier	isdigit		2161598	0					
ANR	2161985	ArgumentList	( int ) * fmt		2161598	1					
ANR	2161986	Argument	( int ) * fmt		2161598	0					
ANR	2161987	CastExpression	( int ) * fmt		2161598	0					
ANR	2161988	CastTarget	int		2161598	0					
ANR	2161989	UnaryOperationExpression	* fmt		2161598	1					
ANR	2161990	UnaryOperator	*		2161598	0					
ANR	2161991	Identifier	fmt		2161598	1					
ANR	2161992	CompoundStatement		108:29:1982:1982	2161598	1					
ANR	2161993	ExpressionStatement	"STR_TO_DEC ( fmt , precision )"	696:6:18263:18289	2161598	0	True				
ANR	2161994	CallExpression	"STR_TO_DEC ( fmt , precision )"		2161598	0					
ANR	2161995	Callee	STR_TO_DEC		2161598	0					
ANR	2161996	Identifier	STR_TO_DEC		2161598	0					
ANR	2161997	ArgumentList	fmt		2161598	1					
ANR	2161998	Argument	fmt		2161598	0					
ANR	2161999	Identifier	fmt		2161598	0					
ANR	2162000	Argument	precision		2161598	1					
ANR	2162001	Identifier	precision		2161598	0					
ANR	2162002	ElseStatement	else		2161598	0					
ANR	2162003	IfStatement	if ( * fmt == '*' )		2161598	0					
ANR	2162004	Condition	* fmt == '*'	697:16:18307:18317	2161598	0	True				
ANR	2162005	EqualityExpression	* fmt == '*'		2161598	0		==			
ANR	2162006	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162007	UnaryOperator	*		2161598	0					
ANR	2162008	Identifier	fmt		2161598	1					
ANR	2162009	PrimaryExpression	'*'		2161598	1					
ANR	2162010	CompoundStatement		110:29:2047:2047	2161598	1					
ANR	2162011	ExpressionStatement	"precision = va_arg ( ap , int )"	698:6:18328:18355	2161598	0	True				
ANR	2162012	AssignmentExpression	"precision = va_arg ( ap , int )"		2161598	0		=			
ANR	2162013	Identifier	precision		2161598	0					
ANR	2162014	CallExpression	"va_arg ( ap , int )"		2161598	1					
ANR	2162015	Callee	va_arg		2161598	0					
ANR	2162016	Identifier	va_arg		2161598	0					
ANR	2162017	ArgumentList	ap		2161598	1					
ANR	2162018	Argument	ap		2161598	0					
ANR	2162019	Identifier	ap		2161598	0					
ANR	2162020	Argument	int		2161598	1					
ANR	2162021	Identifier	int		2161598	0					
ANR	2162022	ExpressionStatement	fmt ++	699:6:18363:18368	2161598	1	True				
ANR	2162023	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162024	Identifier	fmt		2161598	0					
ANR	2162025	IncDec	++		2161598	1					
ANR	2162026	IfStatement	if ( precision < 0 )		2161598	2					
ANR	2162027	Condition	precision < 0	700:10:18380:18392	2161598	0	True				
ANR	2162028	RelationalExpression	precision < 0		2161598	0		<			
ANR	2162029	Identifier	precision		2161598	0					
ANR	2162030	PrimaryExpression	0		2161598	1					
ANR	2162031	ExpressionStatement	precision = 0	701:7:18402:18415	2161598	1	True				
ANR	2162032	AssignmentExpression	precision = 0		2161598	0		=			
ANR	2162033	Identifier	precision		2161598	0					
ANR	2162034	PrimaryExpression	0		2161598	1					
ANR	2162035	ElseStatement	else		2161598	0					
ANR	2162036	ExpressionStatement	precision = 0	703:6:18435:18448	2161598	0	True				
ANR	2162037	AssignmentExpression	precision = 0		2161598	0		=			
ANR	2162038	Identifier	precision		2161598	0					
ANR	2162039	PrimaryExpression	0		2161598	1					
ANR	2162040	IfStatement	if ( precision > FORMAT_CONV_MAX_PRECISION )		2161598	3					
ANR	2162041	Condition	precision > FORMAT_CONV_MAX_PRECISION	705:9:18465:18501	2161598	0	True				
ANR	2162042	RelationalExpression	precision > FORMAT_CONV_MAX_PRECISION		2161598	0		>			
ANR	2162043	Identifier	precision		2161598	0					
ANR	2162044	Identifier	FORMAT_CONV_MAX_PRECISION		2161598	1					
ANR	2162045	CompoundStatement		118:48:2231:2231	2161598	1					
ANR	2162046	ExpressionStatement	precision = FORMAT_CONV_MAX_PRECISION	706:6:18512:18549	2161598	0	True				
ANR	2162047	AssignmentExpression	precision = FORMAT_CONV_MAX_PRECISION		2161598	0		=			
ANR	2162048	Identifier	precision		2161598	0					
ANR	2162049	Identifier	FORMAT_CONV_MAX_PRECISION		2161598	1					
ANR	2162050	ElseStatement	else		2161598	0					
ANR	2162051	ExpressionStatement	adjust_precision = NO	709:5:18574:18595	2161598	0	True				
ANR	2162052	AssignmentExpression	adjust_precision = NO		2161598	0		=			
ANR	2162053	Identifier	adjust_precision		2161598	0					
ANR	2162054	Identifier	NO		2161598	1					
ANR	2162055	ElseStatement	else		2161598	0					
ANR	2162056	ExpressionStatement	adjust_precision = adjust_width = NO	711:4:18611:18647	2161598	0	True				
ANR	2162057	AssignmentExpression	adjust_precision = adjust_width = NO		2161598	0		=			
ANR	2162058	Identifier	adjust_precision		2161598	0					
ANR	2162059	AssignmentExpression	adjust_width = NO		2161598	1		=			
ANR	2162060	Identifier	adjust_width		2161598	0					
ANR	2162061	Identifier	NO		2161598	1					
ANR	2162062	SwitchStatement	switch ( * fmt )		2161598	7					
ANR	2162063	Condition	* fmt	716:11:18695:18698	2161598	0	True				
ANR	2162064	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162065	UnaryOperator	*		2161598	0					
ANR	2162066	Identifier	fmt		2161598	1					
ANR	2162067	CompoundStatement		129:17:2428:2428	2161598	1					
ANR	2162068	Label	case 'L' :	717:4:18707:18715	2161598	0	True				
ANR	2162069	ExpressionStatement	fmt ++	718:5:18722:18727	2161598	1	True				
ANR	2162070	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162071	Identifier	fmt		2161598	0					
ANR	2162072	IncDec	++		2161598	1					
ANR	2162073	ExpressionStatement	modifier = LM_LONG_DOUBLE	719:5:18734:18759	2161598	2	True				
ANR	2162074	AssignmentExpression	modifier = LM_LONG_DOUBLE		2161598	0		=			
ANR	2162075	Identifier	modifier		2161598	0					
ANR	2162076	Identifier	LM_LONG_DOUBLE		2161598	1					
ANR	2162077	BreakStatement	break ;	720:5:18766:18771	2161598	3	True				
ANR	2162078	Label	case 'I' :	721:4:18777:18785	2161598	4	True				
ANR	2162079	ExpressionStatement	fmt ++	722:5:18792:18797	2161598	5	True				
ANR	2162080	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162081	Identifier	fmt		2161598	0					
ANR	2162082	IncDec	++		2161598	1					
ANR	2162083	IfStatement	if ( * fmt == '6' && * ( fmt + 1 ) == '4' )		2161598	6					
ANR	2162084	Condition	* fmt == '6' && * ( fmt + 1 ) == '4'	724:9:18829:18858	2161598	0	True				
ANR	2162085	AndExpression	* fmt == '6' && * ( fmt + 1 ) == '4'		2161598	0		&&			
ANR	2162086	EqualityExpression	* fmt == '6'		2161598	0		==			
ANR	2162087	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162088	UnaryOperator	*		2161598	0					
ANR	2162089	Identifier	fmt		2161598	1					
ANR	2162090	PrimaryExpression	'6'		2161598	1					
ANR	2162091	EqualityExpression	* ( fmt + 1 ) == '4'		2161598	1		==			
ANR	2162092	UnaryOperationExpression	* ( fmt + 1 )		2161598	0					
ANR	2162093	UnaryOperator	*		2161598	0					
ANR	2162094	AdditiveExpression	fmt + 1		2161598	1		+			
ANR	2162095	Identifier	fmt		2161598	0					
ANR	2162096	PrimaryExpression	1		2161598	1					
ANR	2162097	PrimaryExpression	'4'		2161598	1					
ANR	2162098	CompoundStatement		137:41:2588:2588	2161598	1					
ANR	2162099	ExpressionStatement	fmt += 2	725:6:18869:18877	2161598	0	True				
ANR	2162100	AssignmentExpression	fmt += 2		2161598	0		+=			
ANR	2162101	Identifier	fmt		2161598	0					
ANR	2162102	PrimaryExpression	2		2161598	1					
ANR	2162103	ExpressionStatement	modifier = LM_LONG_LONG	726:6:18885:18908	2161598	1	True				
ANR	2162104	AssignmentExpression	modifier = LM_LONG_LONG		2161598	0		=			
ANR	2162105	Identifier	modifier		2161598	0					
ANR	2162106	Identifier	LM_LONG_LONG		2161598	1					
ANR	2162107	ElseStatement	else		2161598	0					
ANR	2162108	IfStatement	if ( * fmt == '3' && * ( fmt + 1 ) == '2' )		2161598	0					
ANR	2162109	Condition	* fmt == '3' && * ( fmt + 1 ) == '2'	729:10:18939:18968	2161598	0	True				
ANR	2162110	AndExpression	* fmt == '3' && * ( fmt + 1 ) == '2'		2161598	0		&&			
ANR	2162111	EqualityExpression	* fmt == '3'		2161598	0		==			
ANR	2162112	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162113	UnaryOperator	*		2161598	0					
ANR	2162114	Identifier	fmt		2161598	1					
ANR	2162115	PrimaryExpression	'3'		2161598	1					
ANR	2162116	EqualityExpression	* ( fmt + 1 ) == '2'		2161598	1		==			
ANR	2162117	UnaryOperationExpression	* ( fmt + 1 )		2161598	0					
ANR	2162118	UnaryOperator	*		2161598	0					
ANR	2162119	AdditiveExpression	fmt + 1		2161598	1		+			
ANR	2162120	Identifier	fmt		2161598	0					
ANR	2162121	PrimaryExpression	1		2161598	1					
ANR	2162122	PrimaryExpression	'2'		2161598	1					
ANR	2162123	CompoundStatement		142:42:2698:2698	2161598	1					
ANR	2162124	ExpressionStatement	fmt += 2	730:7:18980:18988	2161598	0	True				
ANR	2162125	AssignmentExpression	fmt += 2		2161598	0		+=			
ANR	2162126	Identifier	fmt		2161598	0					
ANR	2162127	PrimaryExpression	2		2161598	1					
ANR	2162128	ExpressionStatement	modifier = LM_LONG	731:7:18997:19015	2161598	1	True				
ANR	2162129	AssignmentExpression	modifier = LM_LONG		2161598	0		=			
ANR	2162130	Identifier	modifier		2161598	0					
ANR	2162131	Identifier	LM_LONG		2161598	1					
ANR	2162132	ElseStatement	else		2161598	0					
ANR	2162133	CompoundStatement		145:13:2757:2757	2161598	0					
ANR	2162134	ExpressionStatement	modifier = LM_LONG_LONG	734:7:19053:19076	2161598	0	True				
ANR	2162135	AssignmentExpression	modifier = LM_LONG_LONG		2161598	0		=			
ANR	2162136	Identifier	modifier		2161598	0					
ANR	2162137	Identifier	LM_LONG_LONG		2161598	1					
ANR	2162138	BreakStatement	break ;	739:5:19131:19136	2161598	7	True				
ANR	2162139	Label	case 'l' :	740:4:19142:19150	2161598	8	True				
ANR	2162140	ExpressionStatement	fmt ++	741:5:19157:19162	2161598	9	True				
ANR	2162141	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162142	Identifier	fmt		2161598	0					
ANR	2162143	IncDec	++		2161598	1					
ANR	2162144	IfStatement	if ( * fmt == 'l' )		2161598	10					
ANR	2162145	Condition	* fmt == 'l'	743:9:19194:19204	2161598	0	True				
ANR	2162146	EqualityExpression	* fmt == 'l'		2161598	0		==			
ANR	2162147	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162148	UnaryOperator	*		2161598	0					
ANR	2162149	Identifier	fmt		2161598	1					
ANR	2162150	PrimaryExpression	'l'		2161598	1					
ANR	2162151	CompoundStatement		156:22:2934:2934	2161598	1					
ANR	2162152	ExpressionStatement	fmt ++	744:6:19215:19220	2161598	0	True				
ANR	2162153	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162154	Identifier	fmt		2161598	0					
ANR	2162155	IncDec	++		2161598	1					
ANR	2162156	ExpressionStatement	modifier = LM_LONG_LONG	745:6:19228:19251	2161598	1	True				
ANR	2162157	AssignmentExpression	modifier = LM_LONG_LONG		2161598	0		=			
ANR	2162158	Identifier	modifier		2161598	0					
ANR	2162159	Identifier	LM_LONG_LONG		2161598	1					
ANR	2162160	ElseStatement	else		2161598	0					
ANR	2162161	ExpressionStatement	modifier = LM_LONG	748:6:19278:19296	2161598	0	True				
ANR	2162162	AssignmentExpression	modifier = LM_LONG		2161598	0		=			
ANR	2162163	Identifier	modifier		2161598	0					
ANR	2162164	Identifier	LM_LONG		2161598	1					
ANR	2162165	BreakStatement	break ;	749:5:19303:19308	2161598	11	True				
ANR	2162166	Label	case 'z' :	750:4:19314:19322	2161598	12	True				
ANR	2162167	ExpressionStatement	fmt ++	751:5:19329:19334	2161598	13	True				
ANR	2162168	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162169	Identifier	fmt		2161598	0					
ANR	2162170	IncDec	++		2161598	1					
ANR	2162171	ExpressionStatement	modifier = LM_SIZE_T	752:5:19341:19361	2161598	14	True				
ANR	2162172	AssignmentExpression	modifier = LM_SIZE_T		2161598	0		=			
ANR	2162173	Identifier	modifier		2161598	0					
ANR	2162174	Identifier	LM_SIZE_T		2161598	1					
ANR	2162175	BreakStatement	break ;	753:5:19368:19373	2161598	15	True				
ANR	2162176	Label	case 'j' :	754:4:19379:19387	2161598	16	True				
ANR	2162177	ExpressionStatement	fmt ++	755:5:19394:19399	2161598	17	True				
ANR	2162178	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162179	Identifier	fmt		2161598	0					
ANR	2162180	IncDec	++		2161598	1					
ANR	2162181	ExpressionStatement	modifier = LM_INTMAX_T	757:5:19426:19448	2161598	18	True				
ANR	2162182	AssignmentExpression	modifier = LM_INTMAX_T		2161598	0		=			
ANR	2162183	Identifier	modifier		2161598	0					
ANR	2162184	Identifier	LM_INTMAX_T		2161598	1					
ANR	2162185	BreakStatement	break ;	761:5:19495:19500	2161598	19	True				
ANR	2162186	Label	case 't' :	762:4:19506:19514	2161598	20	True				
ANR	2162187	ExpressionStatement	fmt ++	763:5:19521:19526	2161598	21	True				
ANR	2162188	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162189	Identifier	fmt		2161598	0					
ANR	2162190	IncDec	++		2161598	1					
ANR	2162191	ExpressionStatement	modifier = LM_PTRDIFF_T	765:5:19554:19577	2161598	22	True				
ANR	2162192	AssignmentExpression	modifier = LM_PTRDIFF_T		2161598	0		=			
ANR	2162193	Identifier	modifier		2161598	0					
ANR	2162194	Identifier	LM_PTRDIFF_T		2161598	1					
ANR	2162195	BreakStatement	break ;	769:5:19624:19629	2161598	23	True				
ANR	2162196	Label	case 'h' :	770:4:19635:19643	2161598	24	True				
ANR	2162197	ExpressionStatement	fmt ++	771:5:19650:19655	2161598	25	True				
ANR	2162198	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162199	Identifier	fmt		2161598	0					
ANR	2162200	IncDec	++		2161598	1					
ANR	2162201	IfStatement	if ( * fmt == 'h' )		2161598	26					
ANR	2162202	Condition	* fmt == 'h'	772:9:19666:19676	2161598	0	True				
ANR	2162203	EqualityExpression	* fmt == 'h'		2161598	0		==			
ANR	2162204	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162205	UnaryOperator	*		2161598	0					
ANR	2162206	Identifier	fmt		2161598	1					
ANR	2162207	PrimaryExpression	'h'		2161598	1					
ANR	2162208	CompoundStatement		185:22:3406:3406	2161598	1					
ANR	2162209	ExpressionStatement	fmt ++	773:6:19687:19692	2161598	0	True				
ANR	2162210	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2162211	Identifier	fmt		2161598	0					
ANR	2162212	IncDec	++		2161598	1					
ANR	2162213	Label	default :	776:4:19755:19762	2161598	27	True				
ANR	2162214	Identifier	default		2161598	0					
ANR	2162215	ExpressionStatement	modifier = LM_STD	777:5:19769:19786	2161598	28	True				
ANR	2162216	AssignmentExpression	modifier = LM_STD		2161598	0		=			
ANR	2162217	Identifier	modifier		2161598	0					
ANR	2162218	Identifier	LM_STD		2161598	1					
ANR	2162219	BreakStatement	break ;	778:5:19793:19798	2161598	29	True				
ANR	2162220	SwitchStatement	switch ( * fmt )		2161598	8					
ANR	2162221	Condition	* fmt	792:11:20264:20267	2161598	0	True				
ANR	2162222	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162223	UnaryOperator	*		2161598	0					
ANR	2162224	Identifier	fmt		2161598	1					
ANR	2162225	CompoundStatement		205:17:3997:3997	2161598	1					
ANR	2162226	Label	case 'Z' :	793:4:20276:20284	2161598	0	True				
ANR	2162227	Statement	zvp	794:5:20291:20293	2161598	1	True				
ANR	2162228	Statement	=	794:9:20295:20295	2161598	2	True				
ANR	2162229	Statement	(	794:11:20297:20297	2161598	3	True				
ANR	2162230	Statement	zval	794:12:20298:20301	2161598	4	True				
ANR	2162231	Statement	*	794:16:20302:20302	2161598	5	True				
ANR	2162232	Statement	)	794:17:20303:20303	2161598	6	True				
ANR	2162233	Statement	va_arg	794:19:20305:20310	2161598	7	True				
ANR	2162234	Statement	(	794:25:20311:20311	2161598	8	True				
ANR	2162235	Statement	ap	794:26:20312:20313	2161598	9	True				
ANR	2162236	Statement	","	794:28:20314:20314	2161598	10	True				
ANR	2162237	Statement	zval	794:30:20316:20319	2161598	11	True				
ANR	2162238	Statement	*	794:34:20320:20320	2161598	12	True				
ANR	2162239	Statement	)	794:35:20321:20321	2161598	13	True				
ANR	2162240	ExpressionStatement		794:36:20322:20322	2161598	14	True				
ANR	2162241	ExpressionStatement	"zend_make_printable_zval ( zvp , & zcopy , & free_zcopy )"	795:5:20329:20379	2161598	15	True				
ANR	2162242	CallExpression	"zend_make_printable_zval ( zvp , & zcopy , & free_zcopy )"		2161598	0					
ANR	2162243	Callee	zend_make_printable_zval		2161598	0					
ANR	2162244	Identifier	zend_make_printable_zval		2161598	0					
ANR	2162245	ArgumentList	zvp		2161598	1					
ANR	2162246	Argument	zvp		2161598	0					
ANR	2162247	Identifier	zvp		2161598	0					
ANR	2162248	Argument	& zcopy		2161598	1					
ANR	2162249	UnaryOperationExpression	& zcopy		2161598	0					
ANR	2162250	UnaryOperator	&		2161598	0					
ANR	2162251	Identifier	zcopy		2161598	1					
ANR	2162252	Argument	& free_zcopy		2161598	2					
ANR	2162253	UnaryOperationExpression	& free_zcopy		2161598	0					
ANR	2162254	UnaryOperator	&		2161598	0					
ANR	2162255	Identifier	free_zcopy		2161598	1					
ANR	2162256	IfStatement	if ( free_zcopy )		2161598	16					
ANR	2162257	Condition	free_zcopy	796:9:20390:20399	2161598	0	True				
ANR	2162258	Identifier	free_zcopy		2161598	0					
ANR	2162259	CompoundStatement		209:21:4129:4129	2161598	1					
ANR	2162260	ExpressionStatement	zvp = & zcopy	797:6:20410:20422	2161598	0	True				
ANR	2162261	AssignmentExpression	zvp = & zcopy		2161598	0		=			
ANR	2162262	Identifier	zvp		2161598	0					
ANR	2162263	UnaryOperationExpression	& zcopy		2161598	1					
ANR	2162264	UnaryOperator	&		2161598	0					
ANR	2162265	Identifier	zcopy		2161598	1					
ANR	2162266	ExpressionStatement	s_len = Z_STRLEN_P ( zvp )	799:5:20436:20459	2161598	17	True				
ANR	2162267	AssignmentExpression	s_len = Z_STRLEN_P ( zvp )		2161598	0		=			
ANR	2162268	Identifier	s_len		2161598	0					
ANR	2162269	CallExpression	Z_STRLEN_P ( zvp )		2161598	1					
ANR	2162270	Callee	Z_STRLEN_P		2161598	0					
ANR	2162271	Identifier	Z_STRLEN_P		2161598	0					
ANR	2162272	ArgumentList	zvp		2161598	1					
ANR	2162273	Argument	zvp		2161598	0					
ANR	2162274	Identifier	zvp		2161598	0					
ANR	2162275	ExpressionStatement	s = Z_STRVAL_P ( zvp )	800:5:20466:20485	2161598	18	True				
ANR	2162276	AssignmentExpression	s = Z_STRVAL_P ( zvp )		2161598	0		=			
ANR	2162277	Identifier	s		2161598	0					
ANR	2162278	CallExpression	Z_STRVAL_P ( zvp )		2161598	1					
ANR	2162279	Callee	Z_STRVAL_P		2161598	0					
ANR	2162280	Identifier	Z_STRVAL_P		2161598	0					
ANR	2162281	ArgumentList	zvp		2161598	1					
ANR	2162282	Argument	zvp		2161598	0					
ANR	2162283	Identifier	zvp		2161598	0					
ANR	2162284	IfStatement	if ( adjust_precision && precision < s_len )		2161598	19					
ANR	2162285	Condition	adjust_precision && precision < s_len	801:9:20496:20532	2161598	0	True				
ANR	2162286	AndExpression	adjust_precision && precision < s_len		2161598	0		&&			
ANR	2162287	Identifier	adjust_precision		2161598	0					
ANR	2162288	RelationalExpression	precision < s_len		2161598	1		<			
ANR	2162289	Identifier	precision		2161598	0					
ANR	2162290	Identifier	s_len		2161598	1					
ANR	2162291	CompoundStatement		214:48:4262:4262	2161598	1					
ANR	2162292	ExpressionStatement	s_len = precision	802:6:20543:20560	2161598	0	True				
ANR	2162293	AssignmentExpression	s_len = precision		2161598	0		=			
ANR	2162294	Identifier	s_len		2161598	0					
ANR	2162295	Identifier	precision		2161598	1					
ANR	2162296	BreakStatement	break ;	804:5:20574:20579	2161598	20	True				
ANR	2162297	Label	case 'u' :	805:4:20585:20593	2161598	21	True				
ANR	2162298	SwitchStatement	switch ( modifier )		2161598	22					
ANR	2162299	Condition	modifier	806:12:20607:20614	2161598	0	True				
ANR	2162300	Identifier	modifier		2161598	0					
ANR	2162301	CompoundStatement		219:22:4344:4344	2161598	1					
ANR	2162302	Label	default :	807:6:20625:20632	2161598	0	True				
ANR	2162303	Identifier	default		2161598	0					
ANR	2162304	Statement	i_num	808:7:20641:20645	2161598	1	True				
ANR	2162305	Statement	=	808:13:20647:20647	2161598	2	True				
ANR	2162306	Statement	(	808:15:20649:20649	2161598	3	True				
ANR	2162307	Statement	wide_int	808:16:20650:20657	2161598	4	True				
ANR	2162308	Statement	)	808:24:20658:20658	2161598	5	True				
ANR	2162309	Statement	va_arg	808:26:20660:20665	2161598	6	True				
ANR	2162310	Statement	(	808:32:20666:20666	2161598	7	True				
ANR	2162311	Statement	ap	808:33:20667:20668	2161598	8	True				
ANR	2162312	Statement	","	808:35:20669:20669	2161598	9	True				
ANR	2162313	Statement	unsigned	808:37:20671:20678	2161598	10	True				
ANR	2162314	Statement	int	808:46:20680:20682	2161598	11	True				
ANR	2162315	Statement	)	808:49:20683:20683	2161598	12	True				
ANR	2162316	ExpressionStatement		808:50:20684:20684	2161598	13	True				
ANR	2162317	BreakStatement	break ;	809:7:20693:20698	2161598	14	True				
ANR	2162318	Label	case LM_LONG_DOUBLE :	810:6:20706:20725	2161598	15	True				
ANR	2162319	Identifier	LM_LONG_DOUBLE		2161598	0					
ANR	2162320	GotoStatement	goto fmt_error ;	811:7:20734:20748	2161598	16	True				
ANR	2162321	Identifier	fmt_error		2161598	0					
ANR	2162322	Label	case LM_LONG :	812:6:20756:20768	2161598	17	True				
ANR	2162323	Identifier	LM_LONG		2161598	0					
ANR	2162324	Statement	i_num	813:7:20777:20781	2161598	18	True				
ANR	2162325	Statement	=	813:13:20783:20783	2161598	19	True				
ANR	2162326	Statement	(	813:15:20785:20785	2161598	20	True				
ANR	2162327	Statement	wide_int	813:16:20786:20793	2161598	21	True				
ANR	2162328	Statement	)	813:24:20794:20794	2161598	22	True				
ANR	2162329	Statement	va_arg	813:26:20796:20801	2161598	23	True				
ANR	2162330	Statement	(	813:32:20802:20802	2161598	24	True				
ANR	2162331	Statement	ap	813:33:20803:20804	2161598	25	True				
ANR	2162332	Statement	","	813:35:20805:20805	2161598	26	True				
ANR	2162333	Statement	unsigned	813:37:20807:20814	2161598	27	True				
ANR	2162334	Statement	long	813:46:20816:20819	2161598	28	True				
ANR	2162335	Statement	int	813:51:20821:20823	2161598	29	True				
ANR	2162336	Statement	)	813:54:20824:20824	2161598	30	True				
ANR	2162337	ExpressionStatement		813:55:20825:20825	2161598	31	True				
ANR	2162338	BreakStatement	break ;	814:7:20834:20839	2161598	32	True				
ANR	2162339	Label	case LM_SIZE_T :	815:6:20847:20861	2161598	33	True				
ANR	2162340	Identifier	LM_SIZE_T		2161598	0					
ANR	2162341	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , size_t )"	816:7:20870:20907	2161598	34	True				
ANR	2162342	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , size_t )"		2161598	0		=			
ANR	2162343	Identifier	i_num		2161598	0					
ANR	2162344	CastExpression	"( wide_int ) va_arg ( ap , size_t )"		2161598	1					
ANR	2162345	CastTarget	wide_int		2161598	0					
ANR	2162346	CallExpression	"va_arg ( ap , size_t )"		2161598	1					
ANR	2162347	Callee	va_arg		2161598	0					
ANR	2162348	Identifier	va_arg		2161598	0					
ANR	2162349	ArgumentList	ap		2161598	1					
ANR	2162350	Argument	ap		2161598	0					
ANR	2162351	Identifier	ap		2161598	0					
ANR	2162352	Argument	size_t		2161598	1					
ANR	2162353	Identifier	size_t		2161598	0					
ANR	2162354	BreakStatement	break ;	817:7:20916:20921	2161598	35	True				
ANR	2162355	Label	case LM_LONG_LONG :	819:6:20950:20967	2161598	36	True				
ANR	2162356	Identifier	LM_LONG_LONG		2161598	0					
ANR	2162357	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , u_wide_int )"	820:7:20976:21017	2161598	37	True				
ANR	2162358	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , u_wide_int )"		2161598	0		=			
ANR	2162359	Identifier	i_num		2161598	0					
ANR	2162360	CastExpression	"( wide_int ) va_arg ( ap , u_wide_int )"		2161598	1					
ANR	2162361	CastTarget	wide_int		2161598	0					
ANR	2162362	CallExpression	"va_arg ( ap , u_wide_int )"		2161598	1					
ANR	2162363	Callee	va_arg		2161598	0					
ANR	2162364	Identifier	va_arg		2161598	0					
ANR	2162365	ArgumentList	ap		2161598	1					
ANR	2162366	Argument	ap		2161598	0					
ANR	2162367	Identifier	ap		2161598	0					
ANR	2162368	Argument	u_wide_int		2161598	1					
ANR	2162369	Identifier	u_wide_int		2161598	0					
ANR	2162370	BreakStatement	break ;	821:7:21026:21031	2161598	38	True				
ANR	2162371	Label	case LM_INTMAX_T :	824:6:21066:21082	2161598	39	True				
ANR	2162372	Identifier	LM_INTMAX_T		2161598	0					
ANR	2162373	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , uintmax_t )"	825:7:21091:21131	2161598	40	True				
ANR	2162374	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , uintmax_t )"		2161598	0		=			
ANR	2162375	Identifier	i_num		2161598	0					
ANR	2162376	CastExpression	"( wide_int ) va_arg ( ap , uintmax_t )"		2161598	1					
ANR	2162377	CastTarget	wide_int		2161598	0					
ANR	2162378	CallExpression	"va_arg ( ap , uintmax_t )"		2161598	1					
ANR	2162379	Callee	va_arg		2161598	0					
ANR	2162380	Identifier	va_arg		2161598	0					
ANR	2162381	ArgumentList	ap		2161598	1					
ANR	2162382	Argument	ap		2161598	0					
ANR	2162383	Identifier	ap		2161598	0					
ANR	2162384	Argument	uintmax_t		2161598	1					
ANR	2162385	Identifier	uintmax_t		2161598	0					
ANR	2162386	BreakStatement	break ;	826:7:21140:21145	2161598	41	True				
ANR	2162387	Label	case LM_PTRDIFF_T :	829:6:21181:21198	2161598	42	True				
ANR	2162388	Identifier	LM_PTRDIFF_T		2161598	0					
ANR	2162389	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"	830:7:21207:21247	2161598	43	True				
ANR	2162390	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	0		=			
ANR	2162391	Identifier	i_num		2161598	0					
ANR	2162392	CastExpression	"( wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162393	CastTarget	wide_int		2161598	0					
ANR	2162394	CallExpression	"va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162395	Callee	va_arg		2161598	0					
ANR	2162396	Identifier	va_arg		2161598	0					
ANR	2162397	ArgumentList	ap		2161598	1					
ANR	2162398	Argument	ap		2161598	0					
ANR	2162399	Identifier	ap		2161598	0					
ANR	2162400	Argument	ptrdiff_t		2161598	1					
ANR	2162401	Identifier	ptrdiff_t		2161598	0					
ANR	2162402	BreakStatement	break ;	831:7:21256:21261	2161598	44	True				
ANR	2162403	Label	case 'd' :	838:4:21386:21394	2161598	23	True				
ANR	2162404	Label	case 'i' :	839:4:21400:21408	2161598	24	True				
ANR	2162405	IfStatement	if ( ( * fmt ) != 'u' )		2161598	25					
ANR	2162406	Condition	( * fmt ) != 'u'	843:9:21479:21491	2161598	0	True				
ANR	2162407	EqualityExpression	( * fmt ) != 'u'		2161598	0		!=			
ANR	2162408	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162409	UnaryOperator	*		2161598	0					
ANR	2162410	Identifier	fmt		2161598	1					
ANR	2162411	PrimaryExpression	'u'		2161598	1					
ANR	2162412	CompoundStatement		256:24:5221:5221	2161598	1					
ANR	2162413	SwitchStatement	switch ( modifier )		2161598	0					
ANR	2162414	Condition	modifier	844:13:21509:21516	2161598	0	True				
ANR	2162415	Identifier	modifier		2161598	0					
ANR	2162416	CompoundStatement		257:23:5246:5246	2161598	1					
ANR	2162417	Label	default :	845:7:21528:21535	2161598	0	True				
ANR	2162418	Identifier	default		2161598	0					
ANR	2162419	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , int )"	846:8:21545:21579	2161598	1	True				
ANR	2162420	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , int )"		2161598	0		=			
ANR	2162421	Identifier	i_num		2161598	0					
ANR	2162422	CastExpression	"( wide_int ) va_arg ( ap , int )"		2161598	1					
ANR	2162423	CastTarget	wide_int		2161598	0					
ANR	2162424	CallExpression	"va_arg ( ap , int )"		2161598	1					
ANR	2162425	Callee	va_arg		2161598	0					
ANR	2162426	Identifier	va_arg		2161598	0					
ANR	2162427	ArgumentList	ap		2161598	1					
ANR	2162428	Argument	ap		2161598	0					
ANR	2162429	Identifier	ap		2161598	0					
ANR	2162430	Argument	int		2161598	1					
ANR	2162431	Identifier	int		2161598	0					
ANR	2162432	BreakStatement	break ;	847:8:21589:21594	2161598	2	True				
ANR	2162433	Label	case LM_LONG_DOUBLE :	848:7:21603:21622	2161598	3	True				
ANR	2162434	Identifier	LM_LONG_DOUBLE		2161598	0					
ANR	2162435	GotoStatement	goto fmt_error ;	849:8:21632:21646	2161598	4	True				
ANR	2162436	Identifier	fmt_error		2161598	0					
ANR	2162437	Label	case LM_LONG :	850:7:21655:21667	2161598	5	True				
ANR	2162438	Identifier	LM_LONG		2161598	0					
ANR	2162439	Statement	i_num	851:8:21677:21681	2161598	6	True				
ANR	2162440	Statement	=	851:14:21683:21683	2161598	7	True				
ANR	2162441	Statement	(	851:16:21685:21685	2161598	8	True				
ANR	2162442	Statement	wide_int	851:17:21686:21693	2161598	9	True				
ANR	2162443	Statement	)	851:25:21694:21694	2161598	10	True				
ANR	2162444	Statement	va_arg	851:27:21696:21701	2161598	11	True				
ANR	2162445	Statement	(	851:33:21702:21702	2161598	12	True				
ANR	2162446	Statement	ap	851:34:21703:21704	2161598	13	True				
ANR	2162447	Statement	","	851:36:21705:21705	2161598	14	True				
ANR	2162448	Statement	long	851:38:21707:21710	2161598	15	True				
ANR	2162449	Statement	int	851:43:21712:21714	2161598	16	True				
ANR	2162450	Statement	)	851:46:21715:21715	2161598	17	True				
ANR	2162451	ExpressionStatement		851:47:21716:21716	2161598	18	True				
ANR	2162452	BreakStatement	break ;	852:8:21726:21731	2161598	19	True				
ANR	2162453	Label	case LM_SIZE_T :	853:7:21740:21754	2161598	20	True				
ANR	2162454	Identifier	LM_SIZE_T		2161598	0					
ANR	2162455	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , ssize_t )"	855:8:21783:21821	2161598	21	True				
ANR	2162456	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , ssize_t )"		2161598	0		=			
ANR	2162457	Identifier	i_num		2161598	0					
ANR	2162458	CastExpression	"( wide_int ) va_arg ( ap , ssize_t )"		2161598	1					
ANR	2162459	CastTarget	wide_int		2161598	0					
ANR	2162460	CallExpression	"va_arg ( ap , ssize_t )"		2161598	1					
ANR	2162461	Callee	va_arg		2161598	0					
ANR	2162462	Identifier	va_arg		2161598	0					
ANR	2162463	ArgumentList	ap		2161598	1					
ANR	2162464	Argument	ap		2161598	0					
ANR	2162465	Identifier	ap		2161598	0					
ANR	2162466	Argument	ssize_t		2161598	1					
ANR	2162467	Identifier	ssize_t		2161598	0					
ANR	2162468	BreakStatement	break ;	859:8:21891:21896	2161598	22	True				
ANR	2162469	Label	case LM_LONG_LONG :	861:7:21926:21943	2161598	23	True				
ANR	2162470	Identifier	LM_LONG_LONG		2161598	0					
ANR	2162471	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , wide_int )"	862:8:21953:21992	2161598	24	True				
ANR	2162472	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , wide_int )"		2161598	0		=			
ANR	2162473	Identifier	i_num		2161598	0					
ANR	2162474	CastExpression	"( wide_int ) va_arg ( ap , wide_int )"		2161598	1					
ANR	2162475	CastTarget	wide_int		2161598	0					
ANR	2162476	CallExpression	"va_arg ( ap , wide_int )"		2161598	1					
ANR	2162477	Callee	va_arg		2161598	0					
ANR	2162478	Identifier	va_arg		2161598	0					
ANR	2162479	ArgumentList	ap		2161598	1					
ANR	2162480	Argument	ap		2161598	0					
ANR	2162481	Identifier	ap		2161598	0					
ANR	2162482	Argument	wide_int		2161598	1					
ANR	2162483	Identifier	wide_int		2161598	0					
ANR	2162484	BreakStatement	break ;	863:8:22002:22007	2161598	25	True				
ANR	2162485	Label	case LM_INTMAX_T :	866:7:22043:22059	2161598	26	True				
ANR	2162486	Identifier	LM_INTMAX_T		2161598	0					
ANR	2162487	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , intmax_t )"	867:8:22069:22108	2161598	27	True				
ANR	2162488	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , intmax_t )"		2161598	0		=			
ANR	2162489	Identifier	i_num		2161598	0					
ANR	2162490	CastExpression	"( wide_int ) va_arg ( ap , intmax_t )"		2161598	1					
ANR	2162491	CastTarget	wide_int		2161598	0					
ANR	2162492	CallExpression	"va_arg ( ap , intmax_t )"		2161598	1					
ANR	2162493	Callee	va_arg		2161598	0					
ANR	2162494	Identifier	va_arg		2161598	0					
ANR	2162495	ArgumentList	ap		2161598	1					
ANR	2162496	Argument	ap		2161598	0					
ANR	2162497	Identifier	ap		2161598	0					
ANR	2162498	Argument	intmax_t		2161598	1					
ANR	2162499	Identifier	intmax_t		2161598	0					
ANR	2162500	BreakStatement	break ;	868:8:22118:22123	2161598	28	True				
ANR	2162501	Label	case LM_PTRDIFF_T :	871:7:22160:22177	2161598	29	True				
ANR	2162502	Identifier	LM_PTRDIFF_T		2161598	0					
ANR	2162503	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"	872:8:22187:22227	2161598	30	True				
ANR	2162504	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	0		=			
ANR	2162505	Identifier	i_num		2161598	0					
ANR	2162506	CastExpression	"( wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162507	CastTarget	wide_int		2161598	0					
ANR	2162508	CallExpression	"va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162509	Callee	va_arg		2161598	0					
ANR	2162510	Identifier	va_arg		2161598	0					
ANR	2162511	ArgumentList	ap		2161598	1					
ANR	2162512	Argument	ap		2161598	0					
ANR	2162513	Identifier	ap		2161598	0					
ANR	2162514	Argument	ptrdiff_t		2161598	1					
ANR	2162515	Identifier	ptrdiff_t		2161598	0					
ANR	2162516	BreakStatement	break ;	873:8:22237:22242	2161598	31	True				
ANR	2162517	ExpressionStatement	"s = ap_php_conv_10 ( i_num , ( * fmt ) == 'u' , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	877:5:22271:22365	2161598	26	True				
ANR	2162518	AssignmentExpression	"s = ap_php_conv_10 ( i_num , ( * fmt ) == 'u' , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	0		=			
ANR	2162519	Identifier	s		2161598	0					
ANR	2162520	CallExpression	"ap_php_conv_10 ( i_num , ( * fmt ) == 'u' , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	1					
ANR	2162521	Callee	ap_php_conv_10		2161598	0					
ANR	2162522	Identifier	ap_php_conv_10		2161598	0					
ANR	2162523	ArgumentList	i_num		2161598	1					
ANR	2162524	Argument	i_num		2161598	0					
ANR	2162525	Identifier	i_num		2161598	0					
ANR	2162526	Argument	( * fmt ) == 'u'		2161598	1					
ANR	2162527	EqualityExpression	( * fmt ) == 'u'		2161598	0		==			
ANR	2162528	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162529	UnaryOperator	*		2161598	0					
ANR	2162530	Identifier	fmt		2161598	1					
ANR	2162531	PrimaryExpression	'u'		2161598	1					
ANR	2162532	Argument	& is_negative		2161598	2					
ANR	2162533	UnaryOperationExpression	& is_negative		2161598	0					
ANR	2162534	UnaryOperator	&		2161598	0					
ANR	2162535	Identifier	is_negative		2161598	1					
ANR	2162536	Argument	& num_buf [ NUM_BUF_SIZE ]		2161598	3					
ANR	2162537	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2161598	0					
ANR	2162538	UnaryOperator	&		2161598	0					
ANR	2162539	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2161598	1					
ANR	2162540	Identifier	num_buf		2161598	0					
ANR	2162541	Identifier	NUM_BUF_SIZE		2161598	1					
ANR	2162542	Argument	& s_len		2161598	4					
ANR	2162543	UnaryOperationExpression	& s_len		2161598	0					
ANR	2162544	UnaryOperator	&		2161598	0					
ANR	2162545	Identifier	s_len		2161598	1					
ANR	2162546	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	879:5:22372:22424	2161598	27	True				
ANR	2162547	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		2161598	0					
ANR	2162548	Callee	FIX_PRECISION		2161598	0					
ANR	2162549	Identifier	FIX_PRECISION		2161598	0					
ANR	2162550	ArgumentList	adjust_precision		2161598	1					
ANR	2162551	Argument	adjust_precision		2161598	0					
ANR	2162552	Identifier	adjust_precision		2161598	0					
ANR	2162553	Argument	precision		2161598	1					
ANR	2162554	Identifier	precision		2161598	0					
ANR	2162555	Argument	s		2161598	2					
ANR	2162556	Identifier	s		2161598	0					
ANR	2162557	Argument	s_len		2161598	3					
ANR	2162558	Identifier	s_len		2161598	0					
ANR	2162559	IfStatement	if ( * fmt != 'u' )		2161598	28					
ANR	2162560	Condition	* fmt != 'u'	881:9:22436:22446	2161598	0	True				
ANR	2162561	EqualityExpression	* fmt != 'u'		2161598	0		!=			
ANR	2162562	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162563	UnaryOperator	*		2161598	0					
ANR	2162564	Identifier	fmt		2161598	1					
ANR	2162565	PrimaryExpression	'u'		2161598	1					
ANR	2162566	CompoundStatement		294:22:6176:6176	2161598	1					
ANR	2162567	IfStatement	if ( is_negative )		2161598	0					
ANR	2162568	Condition	is_negative	882:10:22461:22471	2161598	0	True				
ANR	2162569	Identifier	is_negative		2161598	0					
ANR	2162570	CompoundStatement		295:23:6201:6201	2161598	1					
ANR	2162571	ExpressionStatement	prefix_char = '-'	883:7:22483:22500	2161598	0	True				
ANR	2162572	AssignmentExpression	prefix_char = '-'		2161598	0		=			
ANR	2162573	Identifier	prefix_char		2161598	0					
ANR	2162574	PrimaryExpression	'-'		2161598	1					
ANR	2162575	ElseStatement	else		2161598	0					
ANR	2162576	IfStatement	if ( print_sign )		2161598	0					
ANR	2162577	Condition	print_sign	884:17:22519:22528	2161598	0	True				
ANR	2162578	Identifier	print_sign		2161598	0					
ANR	2162579	CompoundStatement		297:29:6258:6258	2161598	1					
ANR	2162580	ExpressionStatement	prefix_char = '+'	885:7:22540:22557	2161598	0	True				
ANR	2162581	AssignmentExpression	prefix_char = '+'		2161598	0		=			
ANR	2162582	Identifier	prefix_char		2161598	0					
ANR	2162583	PrimaryExpression	'+'		2161598	1					
ANR	2162584	ElseStatement	else		2161598	0					
ANR	2162585	IfStatement	if ( print_blank )		2161598	0					
ANR	2162586	Condition	print_blank	886:17:22576:22586	2161598	0	True				
ANR	2162587	Identifier	print_blank		2161598	0					
ANR	2162588	CompoundStatement		299:30:6316:6316	2161598	1					
ANR	2162589	ExpressionStatement	prefix_char = ' '	887:7:22598:22615	2161598	0	True				
ANR	2162590	AssignmentExpression	prefix_char = ' '		2161598	0		=			
ANR	2162591	Identifier	prefix_char		2161598	0					
ANR	2162592	PrimaryExpression	' '		2161598	1					
ANR	2162593	BreakStatement	break ;	890:5:22637:22642	2161598	29	True				
ANR	2162594	Label	case 'o' :	893:4:22650:22658	2161598	30	True				
ANR	2162595	SwitchStatement	switch ( modifier )		2161598	31					
ANR	2162596	Condition	modifier	894:12:22672:22679	2161598	0	True				
ANR	2162597	Identifier	modifier		2161598	0					
ANR	2162598	CompoundStatement		307:22:6409:6409	2161598	1					
ANR	2162599	Label	default :	895:6:22690:22697	2161598	0	True				
ANR	2162600	Identifier	default		2161598	0					
ANR	2162601	Statement	ui_num	896:7:22706:22711	2161598	1	True				
ANR	2162602	Statement	=	896:14:22713:22713	2161598	2	True				
ANR	2162603	Statement	(	896:16:22715:22715	2161598	3	True				
ANR	2162604	Statement	u_wide_int	896:17:22716:22725	2161598	4	True				
ANR	2162605	Statement	)	896:27:22726:22726	2161598	5	True				
ANR	2162606	Statement	va_arg	896:29:22728:22733	2161598	6	True				
ANR	2162607	Statement	(	896:35:22734:22734	2161598	7	True				
ANR	2162608	Statement	ap	896:36:22735:22736	2161598	8	True				
ANR	2162609	Statement	","	896:38:22737:22737	2161598	9	True				
ANR	2162610	Statement	unsigned	896:40:22739:22746	2161598	10	True				
ANR	2162611	Statement	int	896:49:22748:22750	2161598	11	True				
ANR	2162612	Statement	)	896:52:22751:22751	2161598	12	True				
ANR	2162613	ExpressionStatement		896:53:22752:22752	2161598	13	True				
ANR	2162614	BreakStatement	break ;	897:7:22761:22766	2161598	14	True				
ANR	2162615	Label	case LM_LONG_DOUBLE :	898:6:22774:22793	2161598	15	True				
ANR	2162616	Identifier	LM_LONG_DOUBLE		2161598	0					
ANR	2162617	GotoStatement	goto fmt_error ;	899:7:22802:22816	2161598	16	True				
ANR	2162618	Identifier	fmt_error		2161598	0					
ANR	2162619	Label	case LM_LONG :	900:6:22824:22836	2161598	17	True				
ANR	2162620	Identifier	LM_LONG		2161598	0					
ANR	2162621	Statement	ui_num	901:7:22845:22850	2161598	18	True				
ANR	2162622	Statement	=	901:14:22852:22852	2161598	19	True				
ANR	2162623	Statement	(	901:16:22854:22854	2161598	20	True				
ANR	2162624	Statement	u_wide_int	901:17:22855:22864	2161598	21	True				
ANR	2162625	Statement	)	901:27:22865:22865	2161598	22	True				
ANR	2162626	Statement	va_arg	901:29:22867:22872	2161598	23	True				
ANR	2162627	Statement	(	901:35:22873:22873	2161598	24	True				
ANR	2162628	Statement	ap	901:36:22874:22875	2161598	25	True				
ANR	2162629	Statement	","	901:38:22876:22876	2161598	26	True				
ANR	2162630	Statement	unsigned	901:40:22878:22885	2161598	27	True				
ANR	2162631	Statement	long	901:49:22887:22890	2161598	28	True				
ANR	2162632	Statement	int	901:54:22892:22894	2161598	29	True				
ANR	2162633	Statement	)	901:57:22895:22895	2161598	30	True				
ANR	2162634	ExpressionStatement		901:58:22896:22896	2161598	31	True				
ANR	2162635	BreakStatement	break ;	902:7:22905:22910	2161598	32	True				
ANR	2162636	Label	case LM_SIZE_T :	903:6:22918:22932	2161598	33	True				
ANR	2162637	Identifier	LM_SIZE_T		2161598	0					
ANR	2162638	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"	904:7:22941:22981	2161598	34	True				
ANR	2162639	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"		2161598	0		=			
ANR	2162640	Identifier	ui_num		2161598	0					
ANR	2162641	CastExpression	"( u_wide_int ) va_arg ( ap , size_t )"		2161598	1					
ANR	2162642	CastTarget	u_wide_int		2161598	0					
ANR	2162643	CallExpression	"va_arg ( ap , size_t )"		2161598	1					
ANR	2162644	Callee	va_arg		2161598	0					
ANR	2162645	Identifier	va_arg		2161598	0					
ANR	2162646	ArgumentList	ap		2161598	1					
ANR	2162647	Argument	ap		2161598	0					
ANR	2162648	Identifier	ap		2161598	0					
ANR	2162649	Argument	size_t		2161598	1					
ANR	2162650	Identifier	size_t		2161598	0					
ANR	2162651	BreakStatement	break ;	905:7:22990:22995	2161598	35	True				
ANR	2162652	Label	case LM_LONG_LONG :	907:6:23024:23041	2161598	36	True				
ANR	2162653	Identifier	LM_LONG_LONG		2161598	0					
ANR	2162654	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"	908:7:23050:23094	2161598	37	True				
ANR	2162655	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"		2161598	0		=			
ANR	2162656	Identifier	ui_num		2161598	0					
ANR	2162657	CastExpression	"( u_wide_int ) va_arg ( ap , u_wide_int )"		2161598	1					
ANR	2162658	CastTarget	u_wide_int		2161598	0					
ANR	2162659	CallExpression	"va_arg ( ap , u_wide_int )"		2161598	1					
ANR	2162660	Callee	va_arg		2161598	0					
ANR	2162661	Identifier	va_arg		2161598	0					
ANR	2162662	ArgumentList	ap		2161598	1					
ANR	2162663	Argument	ap		2161598	0					
ANR	2162664	Identifier	ap		2161598	0					
ANR	2162665	Argument	u_wide_int		2161598	1					
ANR	2162666	Identifier	u_wide_int		2161598	0					
ANR	2162667	BreakStatement	break ;	909:7:23103:23108	2161598	38	True				
ANR	2162668	Label	case LM_INTMAX_T :	912:6:23143:23159	2161598	39	True				
ANR	2162669	Identifier	LM_INTMAX_T		2161598	0					
ANR	2162670	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"	913:7:23168:23211	2161598	40	True				
ANR	2162671	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"		2161598	0		=			
ANR	2162672	Identifier	ui_num		2161598	0					
ANR	2162673	CastExpression	"( u_wide_int ) va_arg ( ap , uintmax_t )"		2161598	1					
ANR	2162674	CastTarget	u_wide_int		2161598	0					
ANR	2162675	CallExpression	"va_arg ( ap , uintmax_t )"		2161598	1					
ANR	2162676	Callee	va_arg		2161598	0					
ANR	2162677	Identifier	va_arg		2161598	0					
ANR	2162678	ArgumentList	ap		2161598	1					
ANR	2162679	Argument	ap		2161598	0					
ANR	2162680	Identifier	ap		2161598	0					
ANR	2162681	Argument	uintmax_t		2161598	1					
ANR	2162682	Identifier	uintmax_t		2161598	0					
ANR	2162683	BreakStatement	break ;	914:7:23220:23225	2161598	41	True				
ANR	2162684	Label	case LM_PTRDIFF_T :	917:6:23261:23278	2161598	42	True				
ANR	2162685	Identifier	LM_PTRDIFF_T		2161598	0					
ANR	2162686	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"	918:7:23287:23330	2161598	43	True				
ANR	2162687	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	0		=			
ANR	2162688	Identifier	ui_num		2161598	0					
ANR	2162689	CastExpression	"( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162690	CastTarget	u_wide_int		2161598	0					
ANR	2162691	CallExpression	"va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162692	Callee	va_arg		2161598	0					
ANR	2162693	Identifier	va_arg		2161598	0					
ANR	2162694	ArgumentList	ap		2161598	1					
ANR	2162695	Argument	ap		2161598	0					
ANR	2162696	Identifier	ap		2161598	0					
ANR	2162697	Argument	ptrdiff_t		2161598	1					
ANR	2162698	Identifier	ptrdiff_t		2161598	0					
ANR	2162699	BreakStatement	break ;	919:7:23339:23344	2161598	44	True				
ANR	2162700	ExpressionStatement	"s = ap_php_conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	922:5:23365:23432	2161598	32	True				
ANR	2162701	AssignmentExpression	"s = ap_php_conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	0		=			
ANR	2162702	Identifier	s		2161598	0					
ANR	2162703	CallExpression	"ap_php_conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	1					
ANR	2162704	Callee	ap_php_conv_p2		2161598	0					
ANR	2162705	Identifier	ap_php_conv_p2		2161598	0					
ANR	2162706	ArgumentList	ui_num		2161598	1					
ANR	2162707	Argument	ui_num		2161598	0					
ANR	2162708	Identifier	ui_num		2161598	0					
ANR	2162709	Argument	3		2161598	1					
ANR	2162710	PrimaryExpression	3		2161598	0					
ANR	2162711	Argument	* fmt		2161598	2					
ANR	2162712	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162713	UnaryOperator	*		2161598	0					
ANR	2162714	Identifier	fmt		2161598	1					
ANR	2162715	Argument	& num_buf [ NUM_BUF_SIZE ]		2161598	3					
ANR	2162716	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2161598	0					
ANR	2162717	UnaryOperator	&		2161598	0					
ANR	2162718	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2161598	1					
ANR	2162719	Identifier	num_buf		2161598	0					
ANR	2162720	Identifier	NUM_BUF_SIZE		2161598	1					
ANR	2162721	Argument	& s_len		2161598	4					
ANR	2162722	UnaryOperationExpression	& s_len		2161598	0					
ANR	2162723	UnaryOperator	&		2161598	0					
ANR	2162724	Identifier	s_len		2161598	1					
ANR	2162725	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	923:5:23439:23491	2161598	33	True				
ANR	2162726	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		2161598	0					
ANR	2162727	Callee	FIX_PRECISION		2161598	0					
ANR	2162728	Identifier	FIX_PRECISION		2161598	0					
ANR	2162729	ArgumentList	adjust_precision		2161598	1					
ANR	2162730	Argument	adjust_precision		2161598	0					
ANR	2162731	Identifier	adjust_precision		2161598	0					
ANR	2162732	Argument	precision		2161598	1					
ANR	2162733	Identifier	precision		2161598	0					
ANR	2162734	Argument	s		2161598	2					
ANR	2162735	Identifier	s		2161598	0					
ANR	2162736	Argument	s_len		2161598	3					
ANR	2162737	Identifier	s_len		2161598	0					
ANR	2162738	IfStatement	if ( alternate_form && * s != '0' )		2161598	34					
ANR	2162739	Condition	alternate_form && * s != '0'	924:9:23502:23528	2161598	0	True				
ANR	2162740	AndExpression	alternate_form && * s != '0'		2161598	0		&&			
ANR	2162741	Identifier	alternate_form		2161598	0					
ANR	2162742	EqualityExpression	* s != '0'		2161598	1		!=			
ANR	2162743	UnaryOperationExpression	* s		2161598	0					
ANR	2162744	UnaryOperator	*		2161598	0					
ANR	2162745	Identifier	s		2161598	1					
ANR	2162746	PrimaryExpression	'0'		2161598	1					
ANR	2162747	CompoundStatement		337:38:7258:7258	2161598	1					
ANR	2162748	ExpressionStatement	* -- s = '0'	925:6:23539:23549	2161598	0	True				
ANR	2162749	AssignmentExpression	* -- s = '0'		2161598	0		=			
ANR	2162750	UnaryOperationExpression	* -- s		2161598	0					
ANR	2162751	UnaryOperator	*		2161598	0					
ANR	2162752	UnaryExpression	-- s		2161598	1					
ANR	2162753	IncDec	--		2161598	0					
ANR	2162754	Identifier	s		2161598	1					
ANR	2162755	PrimaryExpression	'0'		2161598	1					
ANR	2162756	ExpressionStatement	s_len ++	926:6:23557:23564	2161598	1	True				
ANR	2162757	PostIncDecOperationExpression	s_len ++		2161598	0					
ANR	2162758	Identifier	s_len		2161598	0					
ANR	2162759	IncDec	++		2161598	1					
ANR	2162760	BreakStatement	break ;	928:5:23578:23583	2161598	35	True				
ANR	2162761	Label	case 'x' :	931:4:23591:23599	2161598	36	True				
ANR	2162762	Label	case 'X' :	932:4:23605:23613	2161598	37	True				
ANR	2162763	SwitchStatement	switch ( modifier )		2161598	38					
ANR	2162764	Condition	modifier	933:12:23627:23634	2161598	0	True				
ANR	2162765	Identifier	modifier		2161598	0					
ANR	2162766	CompoundStatement		346:22:7364:7364	2161598	1					
ANR	2162767	Label	default :	934:6:23645:23652	2161598	0	True				
ANR	2162768	Identifier	default		2161598	0					
ANR	2162769	Statement	ui_num	935:7:23661:23666	2161598	1	True				
ANR	2162770	Statement	=	935:14:23668:23668	2161598	2	True				
ANR	2162771	Statement	(	935:16:23670:23670	2161598	3	True				
ANR	2162772	Statement	u_wide_int	935:17:23671:23680	2161598	4	True				
ANR	2162773	Statement	)	935:27:23681:23681	2161598	5	True				
ANR	2162774	Statement	va_arg	935:29:23683:23688	2161598	6	True				
ANR	2162775	Statement	(	935:35:23689:23689	2161598	7	True				
ANR	2162776	Statement	ap	935:36:23690:23691	2161598	8	True				
ANR	2162777	Statement	","	935:38:23692:23692	2161598	9	True				
ANR	2162778	Statement	unsigned	935:40:23694:23701	2161598	10	True				
ANR	2162779	Statement	int	935:49:23703:23705	2161598	11	True				
ANR	2162780	Statement	)	935:52:23706:23706	2161598	12	True				
ANR	2162781	ExpressionStatement		935:53:23707:23707	2161598	13	True				
ANR	2162782	BreakStatement	break ;	936:7:23716:23721	2161598	14	True				
ANR	2162783	Label	case LM_LONG_DOUBLE :	937:6:23729:23748	2161598	15	True				
ANR	2162784	Identifier	LM_LONG_DOUBLE		2161598	0					
ANR	2162785	GotoStatement	goto fmt_error ;	938:7:23757:23771	2161598	16	True				
ANR	2162786	Identifier	fmt_error		2161598	0					
ANR	2162787	Label	case LM_LONG :	939:6:23779:23791	2161598	17	True				
ANR	2162788	Identifier	LM_LONG		2161598	0					
ANR	2162789	Statement	ui_num	940:7:23800:23805	2161598	18	True				
ANR	2162790	Statement	=	940:14:23807:23807	2161598	19	True				
ANR	2162791	Statement	(	940:16:23809:23809	2161598	20	True				
ANR	2162792	Statement	u_wide_int	940:17:23810:23819	2161598	21	True				
ANR	2162793	Statement	)	940:27:23820:23820	2161598	22	True				
ANR	2162794	Statement	va_arg	940:29:23822:23827	2161598	23	True				
ANR	2162795	Statement	(	940:35:23828:23828	2161598	24	True				
ANR	2162796	Statement	ap	940:36:23829:23830	2161598	25	True				
ANR	2162797	Statement	","	940:38:23831:23831	2161598	26	True				
ANR	2162798	Statement	unsigned	940:40:23833:23840	2161598	27	True				
ANR	2162799	Statement	long	940:49:23842:23845	2161598	28	True				
ANR	2162800	Statement	int	940:54:23847:23849	2161598	29	True				
ANR	2162801	Statement	)	940:57:23850:23850	2161598	30	True				
ANR	2162802	ExpressionStatement		940:58:23851:23851	2161598	31	True				
ANR	2162803	BreakStatement	break ;	941:7:23860:23865	2161598	32	True				
ANR	2162804	Label	case LM_SIZE_T :	942:6:23873:23887	2161598	33	True				
ANR	2162805	Identifier	LM_SIZE_T		2161598	0					
ANR	2162806	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"	943:7:23896:23936	2161598	34	True				
ANR	2162807	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"		2161598	0		=			
ANR	2162808	Identifier	ui_num		2161598	0					
ANR	2162809	CastExpression	"( u_wide_int ) va_arg ( ap , size_t )"		2161598	1					
ANR	2162810	CastTarget	u_wide_int		2161598	0					
ANR	2162811	CallExpression	"va_arg ( ap , size_t )"		2161598	1					
ANR	2162812	Callee	va_arg		2161598	0					
ANR	2162813	Identifier	va_arg		2161598	0					
ANR	2162814	ArgumentList	ap		2161598	1					
ANR	2162815	Argument	ap		2161598	0					
ANR	2162816	Identifier	ap		2161598	0					
ANR	2162817	Argument	size_t		2161598	1					
ANR	2162818	Identifier	size_t		2161598	0					
ANR	2162819	BreakStatement	break ;	944:7:23945:23950	2161598	35	True				
ANR	2162820	Label	case LM_LONG_LONG :	946:6:23979:23996	2161598	36	True				
ANR	2162821	Identifier	LM_LONG_LONG		2161598	0					
ANR	2162822	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"	947:7:24005:24049	2161598	37	True				
ANR	2162823	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"		2161598	0		=			
ANR	2162824	Identifier	ui_num		2161598	0					
ANR	2162825	CastExpression	"( u_wide_int ) va_arg ( ap , u_wide_int )"		2161598	1					
ANR	2162826	CastTarget	u_wide_int		2161598	0					
ANR	2162827	CallExpression	"va_arg ( ap , u_wide_int )"		2161598	1					
ANR	2162828	Callee	va_arg		2161598	0					
ANR	2162829	Identifier	va_arg		2161598	0					
ANR	2162830	ArgumentList	ap		2161598	1					
ANR	2162831	Argument	ap		2161598	0					
ANR	2162832	Identifier	ap		2161598	0					
ANR	2162833	Argument	u_wide_int		2161598	1					
ANR	2162834	Identifier	u_wide_int		2161598	0					
ANR	2162835	BreakStatement	break ;	948:7:24058:24063	2161598	38	True				
ANR	2162836	Label	case LM_INTMAX_T :	951:6:24098:24114	2161598	39	True				
ANR	2162837	Identifier	LM_INTMAX_T		2161598	0					
ANR	2162838	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"	952:7:24123:24166	2161598	40	True				
ANR	2162839	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"		2161598	0		=			
ANR	2162840	Identifier	ui_num		2161598	0					
ANR	2162841	CastExpression	"( u_wide_int ) va_arg ( ap , uintmax_t )"		2161598	1					
ANR	2162842	CastTarget	u_wide_int		2161598	0					
ANR	2162843	CallExpression	"va_arg ( ap , uintmax_t )"		2161598	1					
ANR	2162844	Callee	va_arg		2161598	0					
ANR	2162845	Identifier	va_arg		2161598	0					
ANR	2162846	ArgumentList	ap		2161598	1					
ANR	2162847	Argument	ap		2161598	0					
ANR	2162848	Identifier	ap		2161598	0					
ANR	2162849	Argument	uintmax_t		2161598	1					
ANR	2162850	Identifier	uintmax_t		2161598	0					
ANR	2162851	BreakStatement	break ;	953:7:24175:24180	2161598	41	True				
ANR	2162852	Label	case LM_PTRDIFF_T :	956:6:24216:24233	2161598	42	True				
ANR	2162853	Identifier	LM_PTRDIFF_T		2161598	0					
ANR	2162854	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"	957:7:24242:24285	2161598	43	True				
ANR	2162855	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	0		=			
ANR	2162856	Identifier	ui_num		2161598	0					
ANR	2162857	CastExpression	"( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162858	CastTarget	u_wide_int		2161598	0					
ANR	2162859	CallExpression	"va_arg ( ap , ptrdiff_t )"		2161598	1					
ANR	2162860	Callee	va_arg		2161598	0					
ANR	2162861	Identifier	va_arg		2161598	0					
ANR	2162862	ArgumentList	ap		2161598	1					
ANR	2162863	Argument	ap		2161598	0					
ANR	2162864	Identifier	ap		2161598	0					
ANR	2162865	Argument	ptrdiff_t		2161598	1					
ANR	2162866	Identifier	ptrdiff_t		2161598	0					
ANR	2162867	BreakStatement	break ;	958:7:24294:24299	2161598	44	True				
ANR	2162868	ExpressionStatement	"s = ap_php_conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	961:5:24320:24387	2161598	39	True				
ANR	2162869	AssignmentExpression	"s = ap_php_conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	0		=			
ANR	2162870	Identifier	s		2161598	0					
ANR	2162871	CallExpression	"ap_php_conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	1					
ANR	2162872	Callee	ap_php_conv_p2		2161598	0					
ANR	2162873	Identifier	ap_php_conv_p2		2161598	0					
ANR	2162874	ArgumentList	ui_num		2161598	1					
ANR	2162875	Argument	ui_num		2161598	0					
ANR	2162876	Identifier	ui_num		2161598	0					
ANR	2162877	Argument	4		2161598	1					
ANR	2162878	PrimaryExpression	4		2161598	0					
ANR	2162879	Argument	* fmt		2161598	2					
ANR	2162880	UnaryOperationExpression	* fmt		2161598	0					
ANR	2162881	UnaryOperator	*		2161598	0					
ANR	2162882	Identifier	fmt		2161598	1					
ANR	2162883	Argument	& num_buf [ NUM_BUF_SIZE ]		2161598	3					
ANR	2162884	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2161598	0					
ANR	2162885	UnaryOperator	&		2161598	0					
ANR	2162886	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2161598	1					
ANR	2162887	Identifier	num_buf		2161598	0					
ANR	2162888	Identifier	NUM_BUF_SIZE		2161598	1					
ANR	2162889	Argument	& s_len		2161598	4					
ANR	2162890	UnaryOperationExpression	& s_len		2161598	0					
ANR	2162891	UnaryOperator	&		2161598	0					
ANR	2162892	Identifier	s_len		2161598	1					
ANR	2162893	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	962:5:24394:24446	2161598	40	True				
ANR	2162894	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		2161598	0					
ANR	2162895	Callee	FIX_PRECISION		2161598	0					
ANR	2162896	Identifier	FIX_PRECISION		2161598	0					
ANR	2162897	ArgumentList	adjust_precision		2161598	1					
ANR	2162898	Argument	adjust_precision		2161598	0					
ANR	2162899	Identifier	adjust_precision		2161598	0					
ANR	2162900	Argument	precision		2161598	1					
ANR	2162901	Identifier	precision		2161598	0					
ANR	2162902	Argument	s		2161598	2					
ANR	2162903	Identifier	s		2161598	0					
ANR	2162904	Argument	s_len		2161598	3					
ANR	2162905	Identifier	s_len		2161598	0					
ANR	2162906	IfStatement	if ( alternate_form && i_num != 0 )		2161598	41					
ANR	2162907	Condition	alternate_form && i_num != 0	963:9:24457:24484	2161598	0	True				
ANR	2162908	AndExpression	alternate_form && i_num != 0		2161598	0		&&			
ANR	2162909	Identifier	alternate_form		2161598	0					
ANR	2162910	EqualityExpression	i_num != 0		2161598	1		!=			
ANR	2162911	Identifier	i_num		2161598	0					
ANR	2162912	PrimaryExpression	0		2161598	1					
ANR	2162913	CompoundStatement		376:39:8214:8214	2161598	1					
ANR	2162914	ExpressionStatement	* -- s = * fmt	964:6:24495:24506	2161598	0	True				
ANR	2162915	AssignmentExpression	* -- s = * fmt		2161598	0		=			
ANR	2162916	UnaryOperationExpression	* -- s		2161598	0					
ANR	2162917	UnaryOperator	*		2161598	0					
ANR	2162918	UnaryExpression	-- s		2161598	1					
ANR	2162919	IncDec	--		2161598	0					
ANR	2162920	Identifier	s		2161598	1					
ANR	2162921	UnaryOperationExpression	* fmt		2161598	1					
ANR	2162922	UnaryOperator	*		2161598	0					
ANR	2162923	Identifier	fmt		2161598	1					
ANR	2162924	ExpressionStatement	* -- s = '0'	965:6:24531:24541	2161598	1	True				
ANR	2162925	AssignmentExpression	* -- s = '0'		2161598	0		=			
ANR	2162926	UnaryOperationExpression	* -- s		2161598	0					
ANR	2162927	UnaryOperator	*		2161598	0					
ANR	2162928	UnaryExpression	-- s		2161598	1					
ANR	2162929	IncDec	--		2161598	0					
ANR	2162930	Identifier	s		2161598	1					
ANR	2162931	PrimaryExpression	'0'		2161598	1					
ANR	2162932	ExpressionStatement	s_len += 2	966:6:24549:24559	2161598	2	True				
ANR	2162933	AssignmentExpression	s_len += 2		2161598	0		+=			
ANR	2162934	Identifier	s_len		2161598	0					
ANR	2162935	PrimaryExpression	2		2161598	1					
ANR	2162936	BreakStatement	break ;	968:5:24573:24578	2161598	42	True				
ANR	2162937	Label	case 's' :	971:4:24586:24594	2161598	43	True				
ANR	2162938	Label	case 'v' :	972:4:24600:24608	2161598	44	True				
ANR	2162939	Statement	s	973:5:24615:24615	2161598	45	True				
ANR	2162940	Statement	=	973:7:24617:24617	2161598	46	True				
ANR	2162941	Statement	va_arg	973:9:24619:24624	2161598	47	True				
ANR	2162942	Statement	(	973:15:24625:24625	2161598	48	True				
ANR	2162943	Statement	ap	973:16:24626:24627	2161598	49	True				
ANR	2162944	Statement	","	973:18:24628:24628	2161598	50	True				
ANR	2162945	Statement	char	973:20:24630:24633	2161598	51	True				
ANR	2162946	Statement	*	973:25:24635:24635	2161598	52	True				
ANR	2162947	Statement	)	973:26:24636:24636	2161598	53	True				
ANR	2162948	ExpressionStatement		973:27:24637:24637	2161598	54	True				
ANR	2162949	IfStatement	if ( s != NULL )		2161598	55					
ANR	2162950	Condition	s != NULL	974:9:24648:24656	2161598	0	True				
ANR	2162951	EqualityExpression	s != NULL		2161598	0		!=			
ANR	2162952	Identifier	s		2161598	0					
ANR	2162953	Identifier	NULL		2161598	1					
ANR	2162954	CompoundStatement		387:20:8386:8386	2161598	1					
ANR	2162955	ExpressionStatement	s_len = strlen ( s )	975:6:24667:24684	2161598	0	True				
ANR	2162956	AssignmentExpression	s_len = strlen ( s )		2161598	0		=			
ANR	2162957	Identifier	s_len		2161598	0					
ANR	2162958	CallExpression	strlen ( s )		2161598	1					
ANR	2162959	Callee	strlen		2161598	0					
ANR	2162960	Identifier	strlen		2161598	0					
ANR	2162961	ArgumentList	s		2161598	1					
ANR	2162962	Argument	s		2161598	0					
ANR	2162963	Identifier	s		2161598	0					
ANR	2162964	IfStatement	if ( adjust_precision && precision < s_len )		2161598	1					
ANR	2162965	Condition	adjust_precision && precision < s_len	976:10:24696:24732	2161598	0	True				
ANR	2162966	AndExpression	adjust_precision && precision < s_len		2161598	0		&&			
ANR	2162967	Identifier	adjust_precision		2161598	0					
ANR	2162968	RelationalExpression	precision < s_len		2161598	1		<			
ANR	2162969	Identifier	precision		2161598	0					
ANR	2162970	Identifier	s_len		2161598	1					
ANR	2162971	CompoundStatement		389:49:8462:8462	2161598	1					
ANR	2162972	ExpressionStatement	s_len = precision	977:7:24744:24761	2161598	0	True				
ANR	2162973	AssignmentExpression	s_len = precision		2161598	0		=			
ANR	2162974	Identifier	s_len		2161598	0					
ANR	2162975	Identifier	precision		2161598	1					
ANR	2162976	ElseStatement	else		2161598	0					
ANR	2162977	CompoundStatement		392:12:8510:8510	2161598	0					
ANR	2162978	ExpressionStatement	s = S_NULL	980:6:24791:24801	2161598	0	True				
ANR	2162979	AssignmentExpression	s = S_NULL		2161598	0		=			
ANR	2162980	Identifier	s		2161598	0					
ANR	2162981	Identifier	S_NULL		2161598	1					
ANR	2162982	ExpressionStatement	s_len = S_NULL_LEN	981:6:24809:24827	2161598	1	True				
ANR	2162983	AssignmentExpression	s_len = S_NULL_LEN		2161598	0		=			
ANR	2162984	Identifier	s_len		2161598	0					
ANR	2162985	Identifier	S_NULL_LEN		2161598	1					
ANR	2162986	ExpressionStatement	pad_char = ' '	983:5:24841:24855	2161598	56	True				
ANR	2162987	AssignmentExpression	pad_char = ' '		2161598	0		=			
ANR	2162988	Identifier	pad_char		2161598	0					
ANR	2162989	PrimaryExpression	' '		2161598	1					
ANR	2162990	BreakStatement	break ;	984:5:24862:24867	2161598	57	True				
ANR	2162991	Label	case 'f' :	987:4:24875:24883	2161598	58	True				
ANR	2162992	Label	case 'F' :	988:4:24889:24897	2161598	59	True				
ANR	2162993	Label	case 'e' :	989:4:24903:24911	2161598	60	True				
ANR	2162994	Label	case 'E' :	990:4:24917:24925	2161598	61	True				
ANR	2162995	SwitchStatement	switch ( modifier )		2161598	62					
ANR	2162996	Condition	modifier	991:12:24939:24946	2161598	0	True				
ANR	2162997	Identifier	modifier		2161598	0					
ANR	2162998	CompoundStatement		404:22:8676:8676	2161598	1					
ANR	2162999	Label	case LM_LONG_DOUBLE :	992:6:24957:24976	2161598	0	True				
ANR	2163000	Identifier	LM_LONG_DOUBLE		2161598	0					
ANR	2163001	Statement	fp_num	993:7:24985:24990	2161598	1	True				
ANR	2163002	Statement	=	993:14:24992:24992	2161598	2	True				
ANR	2163003	Statement	(	993:16:24994:24994	2161598	3	True				
ANR	2163004	Statement	double	993:17:24995:25000	2161598	4	True				
ANR	2163005	Statement	)	993:23:25001:25001	2161598	5	True				
ANR	2163006	Statement	va_arg	993:25:25003:25008	2161598	6	True				
ANR	2163007	Statement	(	993:31:25009:25009	2161598	7	True				
ANR	2163008	Statement	ap	993:32:25010:25011	2161598	8	True				
ANR	2163009	Statement	","	993:34:25012:25012	2161598	9	True				
ANR	2163010	Statement	long	993:36:25014:25017	2161598	10	True				
ANR	2163011	Statement	double	993:41:25019:25024	2161598	11	True				
ANR	2163012	Statement	)	993:47:25025:25025	2161598	12	True				
ANR	2163013	ExpressionStatement		993:48:25026:25026	2161598	13	True				
ANR	2163014	BreakStatement	break ;	994:7:25035:25040	2161598	14	True				
ANR	2163015	Label	case LM_STD :	995:6:25048:25059	2161598	15	True				
ANR	2163016	Identifier	LM_STD		2161598	0					
ANR	2163017	ExpressionStatement	"fp_num = va_arg ( ap , double )"	996:7:25068:25095	2161598	16	True				
ANR	2163018	AssignmentExpression	"fp_num = va_arg ( ap , double )"		2161598	0		=			
ANR	2163019	Identifier	fp_num		2161598	0					
ANR	2163020	CallExpression	"va_arg ( ap , double )"		2161598	1					
ANR	2163021	Callee	va_arg		2161598	0					
ANR	2163022	Identifier	va_arg		2161598	0					
ANR	2163023	ArgumentList	ap		2161598	1					
ANR	2163024	Argument	ap		2161598	0					
ANR	2163025	Identifier	ap		2161598	0					
ANR	2163026	Argument	double		2161598	1					
ANR	2163027	Identifier	double		2161598	0					
ANR	2163028	BreakStatement	break ;	997:7:25104:25109	2161598	17	True				
ANR	2163029	Label	default :	998:6:25117:25124	2161598	18	True				
ANR	2163030	Identifier	default		2161598	0					
ANR	2163031	GotoStatement	goto fmt_error ;	999:7:25133:25147	2161598	19	True				
ANR	2163032	Identifier	fmt_error		2161598	0					
ANR	2163033	IfStatement	if ( zend_isnan ( fp_num ) )		2161598	63					
ANR	2163034	Condition	zend_isnan ( fp_num )	1002:9:25166:25183	2161598	0	True				
ANR	2163035	CallExpression	zend_isnan ( fp_num )		2161598	0					
ANR	2163036	Callee	zend_isnan		2161598	0					
ANR	2163037	Identifier	zend_isnan		2161598	0					
ANR	2163038	ArgumentList	fp_num		2161598	1					
ANR	2163039	Argument	fp_num		2161598	0					
ANR	2163040	Identifier	fp_num		2161598	0					
ANR	2163041	CompoundStatement		415:29:8913:8913	2161598	1					
ANR	2163042	ExpressionStatement	"s = ""NAN"""	1003:6:25194:25203	2161598	0	True				
ANR	2163043	AssignmentExpression	"s = ""NAN"""		2161598	0		=			
ANR	2163044	Identifier	s		2161598	0					
ANR	2163045	PrimaryExpression	"""NAN"""		2161598	1					
ANR	2163046	ExpressionStatement	s_len = 3	1004:6:25211:25220	2161598	1	True				
ANR	2163047	AssignmentExpression	s_len = 3		2161598	0		=			
ANR	2163048	Identifier	s_len		2161598	0					
ANR	2163049	PrimaryExpression	3		2161598	1					
ANR	2163050	ElseStatement	else		2161598	0					
ANR	2163051	IfStatement	if ( zend_isinf ( fp_num ) )		2161598	0					
ANR	2163052	Condition	zend_isinf ( fp_num )	1005:16:25238:25255	2161598	0	True				
ANR	2163053	CallExpression	zend_isinf ( fp_num )		2161598	0					
ANR	2163054	Callee	zend_isinf		2161598	0					
ANR	2163055	Identifier	zend_isinf		2161598	0					
ANR	2163056	ArgumentList	fp_num		2161598	1					
ANR	2163057	Argument	fp_num		2161598	0					
ANR	2163058	Identifier	fp_num		2161598	0					
ANR	2163059	CompoundStatement		418:36:8985:8985	2161598	1					
ANR	2163060	ExpressionStatement	"s = ""INF"""	1006:6:25266:25275	2161598	0	True				
ANR	2163061	AssignmentExpression	"s = ""INF"""		2161598	0		=			
ANR	2163062	Identifier	s		2161598	0					
ANR	2163063	PrimaryExpression	"""INF"""		2161598	1					
ANR	2163064	ExpressionStatement	s_len = 3	1007:6:25283:25292	2161598	1	True				
ANR	2163065	AssignmentExpression	s_len = 3		2161598	0		=			
ANR	2163066	Identifier	s_len		2161598	0					
ANR	2163067	PrimaryExpression	3		2161598	1					
ANR	2163068	ElseStatement	else		2161598	0					
ANR	2163069	CompoundStatement		421:12:9033:9033	2161598	0					
ANR	2163070	ExpressionStatement	localeconv_r ( & lconv )	1011:6:25346:25366	2161598	0	True				
ANR	2163071	CallExpression	localeconv_r ( & lconv )		2161598	0					
ANR	2163072	Callee	localeconv_r		2161598	0					
ANR	2163073	Identifier	localeconv_r		2161598	0					
ANR	2163074	ArgumentList	& lconv		2161598	1					
ANR	2163075	Argument	& lconv		2161598	0					
ANR	2163076	UnaryOperationExpression	& lconv		2161598	0					
ANR	2163077	UnaryOperator	&		2161598	0					
ANR	2163078	Identifier	lconv		2161598	1					
ANR	2163079	ExpressionStatement	"s = php_conv_fp ( ( * fmt == 'f' ) ? 'F' : * fmt , fp_num , alternate_form , ( adjust_precision == NO ) ? FLOAT_DIGITS : precision , ( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"	1018:6:25451:25664	2161598	1	True				
ANR	2163080	AssignmentExpression	"s = php_conv_fp ( ( * fmt == 'f' ) ? 'F' : * fmt , fp_num , alternate_form , ( adjust_precision == NO ) ? FLOAT_DIGITS : precision , ( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		2161598	0		=			
ANR	2163081	Identifier	s		2161598	0					
ANR	2163082	CallExpression	"php_conv_fp ( ( * fmt == 'f' ) ? 'F' : * fmt , fp_num , alternate_form , ( adjust_precision == NO ) ? FLOAT_DIGITS : precision , ( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		2161598	1					
ANR	2163083	Callee	php_conv_fp		2161598	0					
ANR	2163084	Identifier	php_conv_fp		2161598	0					
ANR	2163085	ArgumentList	( * fmt == 'f' ) ? 'F' : * fmt		2161598	1					
ANR	2163086	Argument	( * fmt == 'f' ) ? 'F' : * fmt		2161598	0					
ANR	2163087	ConditionalExpression	( * fmt == 'f' ) ? 'F' : * fmt		2161598	0					
ANR	2163088	Condition	* fmt == 'f'		2161598	0					
ANR	2163089	EqualityExpression	* fmt == 'f'		2161598	0		==			
ANR	2163090	UnaryOperationExpression	* fmt		2161598	0					
ANR	2163091	UnaryOperator	*		2161598	0					
ANR	2163092	Identifier	fmt		2161598	1					
ANR	2163093	PrimaryExpression	'f'		2161598	1					
ANR	2163094	PrimaryExpression	'F'		2161598	1					
ANR	2163095	UnaryOperationExpression	* fmt		2161598	2					
ANR	2163096	UnaryOperator	*		2161598	0					
ANR	2163097	Identifier	fmt		2161598	1					
ANR	2163098	Argument	fp_num		2161598	1					
ANR	2163099	Identifier	fp_num		2161598	0					
ANR	2163100	Argument	alternate_form		2161598	2					
ANR	2163101	Identifier	alternate_form		2161598	0					
ANR	2163102	Argument	( adjust_precision == NO ) ? FLOAT_DIGITS : precision		2161598	3					
ANR	2163103	ConditionalExpression	( adjust_precision == NO ) ? FLOAT_DIGITS : precision		2161598	0					
ANR	2163104	Condition	adjust_precision == NO		2161598	0					
ANR	2163105	EqualityExpression	adjust_precision == NO		2161598	0		==			
ANR	2163106	Identifier	adjust_precision		2161598	0					
ANR	2163107	Identifier	NO		2161598	1					
ANR	2163108	Identifier	FLOAT_DIGITS		2161598	1					
ANR	2163109	Identifier	precision		2161598	2					
ANR	2163110	Argument	( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		2161598	4					
ANR	2163111	ConditionalExpression	( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		2161598	0					
ANR	2163112	Condition	* fmt == 'f'		2161598	0					
ANR	2163113	EqualityExpression	* fmt == 'f'		2161598	0		==			
ANR	2163114	UnaryOperationExpression	* fmt		2161598	0					
ANR	2163115	UnaryOperator	*		2161598	0					
ANR	2163116	Identifier	fmt		2161598	1					
ANR	2163117	PrimaryExpression	'f'		2161598	1					
ANR	2163118	Identifier	LCONV_DECIMAL_POINT		2161598	1					
ANR	2163119	PrimaryExpression	'.'		2161598	2					
ANR	2163120	Argument	& is_negative		2161598	5					
ANR	2163121	UnaryOperationExpression	& is_negative		2161598	0					
ANR	2163122	UnaryOperator	&		2161598	0					
ANR	2163123	Identifier	is_negative		2161598	1					
ANR	2163124	Argument	& num_buf [ 1 ]		2161598	6					
ANR	2163125	UnaryOperationExpression	& num_buf [ 1 ]		2161598	0					
ANR	2163126	UnaryOperator	&		2161598	0					
ANR	2163127	ArrayIndexing	num_buf [ 1 ]		2161598	1					
ANR	2163128	Identifier	num_buf		2161598	0					
ANR	2163129	PrimaryExpression	1		2161598	1					
ANR	2163130	Argument	& s_len		2161598	7					
ANR	2163131	UnaryOperationExpression	& s_len		2161598	0					
ANR	2163132	UnaryOperator	&		2161598	0					
ANR	2163133	Identifier	s_len		2161598	1					
ANR	2163134	IfStatement	if ( is_negative )		2161598	2					
ANR	2163135	Condition	is_negative	1022:10:25676:25686	2161598	0	True				
ANR	2163136	Identifier	is_negative		2161598	0					
ANR	2163137	ExpressionStatement	prefix_char = '-'	1023:7:25696:25713	2161598	1	True				
ANR	2163138	AssignmentExpression	prefix_char = '-'		2161598	0		=			
ANR	2163139	Identifier	prefix_char		2161598	0					
ANR	2163140	PrimaryExpression	'-'		2161598	1					
ANR	2163141	ElseStatement	else		2161598	0					
ANR	2163142	IfStatement	if ( print_sign )		2161598	0					
ANR	2163143	Condition	print_sign	1024:15:25730:25739	2161598	0	True				
ANR	2163144	Identifier	print_sign		2161598	0					
ANR	2163145	ExpressionStatement	prefix_char = '+'	1025:7:25749:25766	2161598	1	True				
ANR	2163146	AssignmentExpression	prefix_char = '+'		2161598	0		=			
ANR	2163147	Identifier	prefix_char		2161598	0					
ANR	2163148	PrimaryExpression	'+'		2161598	1					
ANR	2163149	ElseStatement	else		2161598	0					
ANR	2163150	IfStatement	if ( print_blank )		2161598	0					
ANR	2163151	Condition	print_blank	1026:15:25783:25793	2161598	0	True				
ANR	2163152	Identifier	print_blank		2161598	0					
ANR	2163153	ExpressionStatement	prefix_char = ' '	1027:7:25803:25820	2161598	1	True				
ANR	2163154	AssignmentExpression	prefix_char = ' '		2161598	0		=			
ANR	2163155	Identifier	prefix_char		2161598	0					
ANR	2163156	PrimaryExpression	' '		2161598	1					
ANR	2163157	BreakStatement	break ;	1029:5:25834:25839	2161598	64	True				
ANR	2163158	Label	case 'g' :	1032:4:25847:25855	2161598	65	True				
ANR	2163159	Label	case 'k' :	1033:4:25861:25869	2161598	66	True				
ANR	2163160	Label	case 'G' :	1034:4:25875:25883	2161598	67	True				
ANR	2163161	Label	case 'H' :	1035:4:25889:25897	2161598	68	True				
ANR	2163162	SwitchStatement	switch ( modifier )		2161598	69					
ANR	2163163	Condition	modifier	1036:12:25911:25918	2161598	0	True				
ANR	2163164	Identifier	modifier		2161598	0					
ANR	2163165	CompoundStatement		449:22:9648:9648	2161598	1					
ANR	2163166	Label	case LM_LONG_DOUBLE :	1037:6:25929:25948	2161598	0	True				
ANR	2163167	Identifier	LM_LONG_DOUBLE		2161598	0					
ANR	2163168	Statement	fp_num	1038:7:25957:25962	2161598	1	True				
ANR	2163169	Statement	=	1038:14:25964:25964	2161598	2	True				
ANR	2163170	Statement	(	1038:16:25966:25966	2161598	3	True				
ANR	2163171	Statement	double	1038:17:25967:25972	2161598	4	True				
ANR	2163172	Statement	)	1038:23:25973:25973	2161598	5	True				
ANR	2163173	Statement	va_arg	1038:25:25975:25980	2161598	6	True				
ANR	2163174	Statement	(	1038:31:25981:25981	2161598	7	True				
ANR	2163175	Statement	ap	1038:32:25982:25983	2161598	8	True				
ANR	2163176	Statement	","	1038:34:25984:25984	2161598	9	True				
ANR	2163177	Statement	long	1038:36:25986:25989	2161598	10	True				
ANR	2163178	Statement	double	1038:41:25991:25996	2161598	11	True				
ANR	2163179	Statement	)	1038:47:25997:25997	2161598	12	True				
ANR	2163180	ExpressionStatement		1038:48:25998:25998	2161598	13	True				
ANR	2163181	BreakStatement	break ;	1039:7:26007:26012	2161598	14	True				
ANR	2163182	Label	case LM_STD :	1040:6:26020:26031	2161598	15	True				
ANR	2163183	Identifier	LM_STD		2161598	0					
ANR	2163184	ExpressionStatement	"fp_num = va_arg ( ap , double )"	1041:7:26040:26067	2161598	16	True				
ANR	2163185	AssignmentExpression	"fp_num = va_arg ( ap , double )"		2161598	0		=			
ANR	2163186	Identifier	fp_num		2161598	0					
ANR	2163187	CallExpression	"va_arg ( ap , double )"		2161598	1					
ANR	2163188	Callee	va_arg		2161598	0					
ANR	2163189	Identifier	va_arg		2161598	0					
ANR	2163190	ArgumentList	ap		2161598	1					
ANR	2163191	Argument	ap		2161598	0					
ANR	2163192	Identifier	ap		2161598	0					
ANR	2163193	Argument	double		2161598	1					
ANR	2163194	Identifier	double		2161598	0					
ANR	2163195	BreakStatement	break ;	1042:7:26076:26081	2161598	17	True				
ANR	2163196	Label	default :	1043:6:26089:26096	2161598	18	True				
ANR	2163197	Identifier	default		2161598	0					
ANR	2163198	GotoStatement	goto fmt_error ;	1044:7:26105:26119	2161598	19	True				
ANR	2163199	Identifier	fmt_error		2161598	0					
ANR	2163200	IfStatement	if ( zend_isnan ( fp_num ) )		2161598	70					
ANR	2163201	Condition	zend_isnan ( fp_num )	1047:9:26138:26155	2161598	0	True				
ANR	2163202	CallExpression	zend_isnan ( fp_num )		2161598	0					
ANR	2163203	Callee	zend_isnan		2161598	0					
ANR	2163204	Identifier	zend_isnan		2161598	0					
ANR	2163205	ArgumentList	fp_num		2161598	1					
ANR	2163206	Argument	fp_num		2161598	0					
ANR	2163207	Identifier	fp_num		2161598	0					
ANR	2163208	CompoundStatement		460:29:9885:9885	2161598	1					
ANR	2163209	ExpressionStatement	"s = ""NAN"""	1048:6:26166:26175	2161598	0	True				
ANR	2163210	AssignmentExpression	"s = ""NAN"""		2161598	0		=			
ANR	2163211	Identifier	s		2161598	0					
ANR	2163212	PrimaryExpression	"""NAN"""		2161598	1					
ANR	2163213	ExpressionStatement	s_len = 3	1049:6:26183:26192	2161598	1	True				
ANR	2163214	AssignmentExpression	s_len = 3		2161598	0		=			
ANR	2163215	Identifier	s_len		2161598	0					
ANR	2163216	PrimaryExpression	3		2161598	1					
ANR	2163217	BreakStatement	break ;	1050:6:26200:26205	2161598	2	True				
ANR	2163218	ElseStatement	else		2161598	0					
ANR	2163219	IfStatement	if ( zend_isinf ( fp_num ) )		2161598	0					
ANR	2163220	Condition	zend_isinf ( fp_num )	1051:16:26223:26240	2161598	0	True				
ANR	2163221	CallExpression	zend_isinf ( fp_num )		2161598	0					
ANR	2163222	Callee	zend_isinf		2161598	0					
ANR	2163223	Identifier	zend_isinf		2161598	0					
ANR	2163224	ArgumentList	fp_num		2161598	1					
ANR	2163225	Argument	fp_num		2161598	0					
ANR	2163226	Identifier	fp_num		2161598	0					
ANR	2163227	CompoundStatement		464:36:9970:9970	2161598	1					
ANR	2163228	IfStatement	if ( fp_num > 0 )		2161598	0					
ANR	2163229	Condition	fp_num > 0	1052:10:26255:26264	2161598	0	True				
ANR	2163230	RelationalExpression	fp_num > 0		2161598	0		>			
ANR	2163231	Identifier	fp_num		2161598	0					
ANR	2163232	PrimaryExpression	0		2161598	1					
ANR	2163233	CompoundStatement		465:22:9994:9994	2161598	1					
ANR	2163234	ExpressionStatement	"s = ""INF"""	1053:7:26276:26285	2161598	0	True				
ANR	2163235	AssignmentExpression	"s = ""INF"""		2161598	0		=			
ANR	2163236	Identifier	s		2161598	0					
ANR	2163237	PrimaryExpression	"""INF"""		2161598	1					
ANR	2163238	ExpressionStatement	s_len = 3	1054:7:26294:26303	2161598	1	True				
ANR	2163239	AssignmentExpression	s_len = 3		2161598	0		=			
ANR	2163240	Identifier	s_len		2161598	0					
ANR	2163241	PrimaryExpression	3		2161598	1					
ANR	2163242	ElseStatement	else		2161598	0					
ANR	2163243	CompoundStatement		468:13:10045:10045	2161598	0					
ANR	2163244	ExpressionStatement	"s = ""-INF"""	1056:7:26327:26337	2161598	0	True				
ANR	2163245	AssignmentExpression	"s = ""-INF"""		2161598	0		=			
ANR	2163246	Identifier	s		2161598	0					
ANR	2163247	PrimaryExpression	"""-INF"""		2161598	1					
ANR	2163248	ExpressionStatement	s_len = 4	1057:7:26346:26355	2161598	1	True				
ANR	2163249	AssignmentExpression	s_len = 4		2161598	0		=			
ANR	2163250	Identifier	s_len		2161598	0					
ANR	2163251	PrimaryExpression	4		2161598	1					
ANR	2163252	BreakStatement	break ;	1059:6:26371:26376	2161598	1	True				
ANR	2163253	IfStatement	if ( adjust_precision == NO )		2161598	71					
ANR	2163254	Condition	adjust_precision == NO	1062:9:26395:26416	2161598	0	True				
ANR	2163255	EqualityExpression	adjust_precision == NO		2161598	0		==			
ANR	2163256	Identifier	adjust_precision		2161598	0					
ANR	2163257	Identifier	NO		2161598	1					
ANR	2163258	CompoundStatement		475:33:10146:10146	2161598	1					
ANR	2163259	ExpressionStatement	precision = FLOAT_DIGITS	1063:6:26427:26451	2161598	0	True				
ANR	2163260	AssignmentExpression	precision = FLOAT_DIGITS		2161598	0		=			
ANR	2163261	Identifier	precision		2161598	0					
ANR	2163262	Identifier	FLOAT_DIGITS		2161598	1					
ANR	2163263	ElseStatement	else		2161598	0					
ANR	2163264	IfStatement	if ( precision == 0 )		2161598	0					
ANR	2163265	Condition	precision == 0	1064:16:26469:26482	2161598	0	True				
ANR	2163266	EqualityExpression	precision == 0		2161598	0		==			
ANR	2163267	Identifier	precision		2161598	0					
ANR	2163268	PrimaryExpression	0		2161598	1					
ANR	2163269	CompoundStatement		477:32:10212:10212	2161598	1					
ANR	2163270	ExpressionStatement	precision = 1	1065:6:26493:26506	2161598	0	True				
ANR	2163271	AssignmentExpression	precision = 1		2161598	0		=			
ANR	2163272	Identifier	precision		2161598	0					
ANR	2163273	PrimaryExpression	1		2161598	1					
ANR	2163274	ExpressionStatement	localeconv_r ( & lconv )	1072:5:26635:26655	2161598	72	True				
ANR	2163275	CallExpression	localeconv_r ( & lconv )		2161598	0					
ANR	2163276	Callee	localeconv_r		2161598	0					
ANR	2163277	Identifier	localeconv_r		2161598	0					
ANR	2163278	ArgumentList	& lconv		2161598	1					
ANR	2163279	Argument	& lconv		2161598	0					
ANR	2163280	UnaryOperationExpression	& lconv		2161598	0					
ANR	2163281	UnaryOperator	&		2161598	0					
ANR	2163282	Identifier	lconv		2161598	1					
ANR	2163283	ExpressionStatement	"s = php_gcvt ( fp_num , precision , ( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT , ( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e' , & num_buf [ 1 ] )"	1079:5:26736:26874	2161598	73	True				
ANR	2163284	AssignmentExpression	"s = php_gcvt ( fp_num , precision , ( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT , ( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		2161598	0		=			
ANR	2163285	Identifier	s		2161598	0					
ANR	2163286	CallExpression	"php_gcvt ( fp_num , precision , ( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT , ( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		2161598	1					
ANR	2163287	Callee	php_gcvt		2161598	0					
ANR	2163288	Identifier	php_gcvt		2161598	0					
ANR	2163289	ArgumentList	fp_num		2161598	1					
ANR	2163290	Argument	fp_num		2161598	0					
ANR	2163291	Identifier	fp_num		2161598	0					
ANR	2163292	Argument	precision		2161598	1					
ANR	2163293	Identifier	precision		2161598	0					
ANR	2163294	Argument	( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT		2161598	2					
ANR	2163295	ConditionalExpression	( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT		2161598	0					
ANR	2163296	Condition	* fmt == 'H' || * fmt == 'k'		2161598	0					
ANR	2163297	OrExpression	* fmt == 'H' || * fmt == 'k'		2161598	0		||			
ANR	2163298	EqualityExpression	* fmt == 'H'		2161598	0		==			
ANR	2163299	UnaryOperationExpression	* fmt		2161598	0					
ANR	2163300	UnaryOperator	*		2161598	0					
ANR	2163301	Identifier	fmt		2161598	1					
ANR	2163302	PrimaryExpression	'H'		2161598	1					
ANR	2163303	EqualityExpression	* fmt == 'k'		2161598	1		==			
ANR	2163304	UnaryOperationExpression	* fmt		2161598	0					
ANR	2163305	UnaryOperator	*		2161598	0					
ANR	2163306	Identifier	fmt		2161598	1					
ANR	2163307	PrimaryExpression	'k'		2161598	1					
ANR	2163308	PrimaryExpression	'.'		2161598	1					
ANR	2163309	Identifier	LCONV_DECIMAL_POINT		2161598	2					
ANR	2163310	Argument	( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e'		2161598	3					
ANR	2163311	ConditionalExpression	( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e'		2161598	0					
ANR	2163312	Condition	* fmt == 'G' || * fmt == 'H'		2161598	0					
ANR	2163313	OrExpression	* fmt == 'G' || * fmt == 'H'		2161598	0		||			
ANR	2163314	EqualityExpression	* fmt == 'G'		2161598	0		==			
ANR	2163315	UnaryOperationExpression	* fmt		2161598	0					
ANR	2163316	UnaryOperator	*		2161598	0					
ANR	2163317	Identifier	fmt		2161598	1					
ANR	2163318	PrimaryExpression	'G'		2161598	1					
ANR	2163319	EqualityExpression	* fmt == 'H'		2161598	1		==			
ANR	2163320	UnaryOperationExpression	* fmt		2161598	0					
ANR	2163321	UnaryOperator	*		2161598	0					
ANR	2163322	Identifier	fmt		2161598	1					
ANR	2163323	PrimaryExpression	'H'		2161598	1					
ANR	2163324	PrimaryExpression	'E'		2161598	1					
ANR	2163325	PrimaryExpression	'e'		2161598	2					
ANR	2163326	Argument	& num_buf [ 1 ]		2161598	4					
ANR	2163327	UnaryOperationExpression	& num_buf [ 1 ]		2161598	0					
ANR	2163328	UnaryOperator	&		2161598	0					
ANR	2163329	ArrayIndexing	num_buf [ 1 ]		2161598	1					
ANR	2163330	Identifier	num_buf		2161598	0					
ANR	2163331	PrimaryExpression	1		2161598	1					
ANR	2163332	IfStatement	if ( * s == '-' )		2161598	74					
ANR	2163333	Condition	* s == '-'	1080:9:26885:26893	2161598	0	True				
ANR	2163334	EqualityExpression	* s == '-'		2161598	0		==			
ANR	2163335	UnaryOperationExpression	* s		2161598	0					
ANR	2163336	UnaryOperator	*		2161598	0					
ANR	2163337	Identifier	s		2161598	1					
ANR	2163338	PrimaryExpression	'-'		2161598	1					
ANR	2163339	CompoundStatement		493:20:10623:10623	2161598	1					
ANR	2163340	ExpressionStatement	prefix_char = * s ++	1081:6:26904:26922	2161598	0	True				
ANR	2163341	AssignmentExpression	prefix_char = * s ++		2161598	0		=			
ANR	2163342	Identifier	prefix_char		2161598	0					
ANR	2163343	UnaryOperationExpression	* s ++		2161598	1					
ANR	2163344	UnaryOperator	*		2161598	0					
ANR	2163345	PostIncDecOperationExpression	s ++		2161598	1					
ANR	2163346	Identifier	s		2161598	0					
ANR	2163347	IncDec	++		2161598	1					
ANR	2163348	ElseStatement	else		2161598	0					
ANR	2163349	IfStatement	if ( print_sign )		2161598	0					
ANR	2163350	Condition	print_sign	1082:16:26940:26949	2161598	0	True				
ANR	2163351	Identifier	print_sign		2161598	0					
ANR	2163352	CompoundStatement		495:28:10679:10679	2161598	1					
ANR	2163353	ExpressionStatement	prefix_char = '+'	1083:6:26960:26977	2161598	0	True				
ANR	2163354	AssignmentExpression	prefix_char = '+'		2161598	0		=			
ANR	2163355	Identifier	prefix_char		2161598	0					
ANR	2163356	PrimaryExpression	'+'		2161598	1					
ANR	2163357	ElseStatement	else		2161598	0					
ANR	2163358	IfStatement	if ( print_blank )		2161598	0					
ANR	2163359	Condition	print_blank	1084:16:26995:27005	2161598	0	True				
ANR	2163360	Identifier	print_blank		2161598	0					
ANR	2163361	CompoundStatement		497:29:10735:10735	2161598	1					
ANR	2163362	ExpressionStatement	prefix_char = ' '	1085:6:27016:27033	2161598	0	True				
ANR	2163363	AssignmentExpression	prefix_char = ' '		2161598	0		=			
ANR	2163364	Identifier	prefix_char		2161598	0					
ANR	2163365	PrimaryExpression	' '		2161598	1					
ANR	2163366	ExpressionStatement	s_len = strlen ( s )	1088:5:27048:27065	2161598	75	True				
ANR	2163367	AssignmentExpression	s_len = strlen ( s )		2161598	0		=			
ANR	2163368	Identifier	s_len		2161598	0					
ANR	2163369	CallExpression	strlen ( s )		2161598	1					
ANR	2163370	Callee	strlen		2161598	0					
ANR	2163371	Identifier	strlen		2161598	0					
ANR	2163372	ArgumentList	s		2161598	1					
ANR	2163373	Argument	s		2161598	0					
ANR	2163374	Identifier	s		2161598	0					
ANR	2163375	IfStatement	"if ( alternate_form && ( strchr ( s , '.' ) ) == NULL )"		2161598	76					
ANR	2163376	Condition	"alternate_form && ( strchr ( s , '.' ) ) == NULL"	1090:9:27077:27118	2161598	0	True				
ANR	2163377	AndExpression	"alternate_form && ( strchr ( s , '.' ) ) == NULL"		2161598	0		&&			
ANR	2163378	Identifier	alternate_form		2161598	0					
ANR	2163379	EqualityExpression	"( strchr ( s , '.' ) ) == NULL"		2161598	1		==			
ANR	2163380	CallExpression	"strchr ( s , '.' )"		2161598	0					
ANR	2163381	Callee	strchr		2161598	0					
ANR	2163382	Identifier	strchr		2161598	0					
ANR	2163383	ArgumentList	s		2161598	1					
ANR	2163384	Argument	s		2161598	0					
ANR	2163385	Identifier	s		2161598	0					
ANR	2163386	Argument	'.'		2161598	1					
ANR	2163387	PrimaryExpression	'.'		2161598	0					
ANR	2163388	Identifier	NULL		2161598	1					
ANR	2163389	CompoundStatement		503:53:10848:10848	2161598	1					
ANR	2163390	ExpressionStatement	s [ s_len ++ ] = '.'	1091:6:27129:27145	2161598	0	True				
ANR	2163391	AssignmentExpression	s [ s_len ++ ] = '.'		2161598	0		=			
ANR	2163392	ArrayIndexing	s [ s_len ++ ]		2161598	0					
ANR	2163393	Identifier	s		2161598	0					
ANR	2163394	PostIncDecOperationExpression	s_len ++		2161598	1					
ANR	2163395	Identifier	s_len		2161598	0					
ANR	2163396	IncDec	++		2161598	1					
ANR	2163397	PrimaryExpression	'.'		2161598	1					
ANR	2163398	BreakStatement	break ;	1093:5:27159:27164	2161598	77	True				
ANR	2163399	Label	case 'c' :	1096:4:27172:27180	2161598	78	True				
ANR	2163400	ExpressionStatement	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"	1097:5:27187:27225	2161598	79	True				
ANR	2163401	AssignmentExpression	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"		2161598	0		=			
ANR	2163402	ArrayIndexing	char_buf [ 0 ]		2161598	0					
ANR	2163403	Identifier	char_buf		2161598	0					
ANR	2163404	PrimaryExpression	0		2161598	1					
ANR	2163405	CastExpression	"( char ) ( va_arg ( ap , int ) )"		2161598	1					
ANR	2163406	CastTarget	char		2161598	0					
ANR	2163407	CallExpression	"va_arg ( ap , int )"		2161598	1					
ANR	2163408	Callee	va_arg		2161598	0					
ANR	2163409	Identifier	va_arg		2161598	0					
ANR	2163410	ArgumentList	ap		2161598	1					
ANR	2163411	Argument	ap		2161598	0					
ANR	2163412	Identifier	ap		2161598	0					
ANR	2163413	Argument	int		2161598	1					
ANR	2163414	Identifier	int		2161598	0					
ANR	2163415	ExpressionStatement	s = & char_buf [ 0 ]	1098:5:27232:27248	2161598	80	True				
ANR	2163416	AssignmentExpression	s = & char_buf [ 0 ]		2161598	0		=			
ANR	2163417	Identifier	s		2161598	0					
ANR	2163418	UnaryOperationExpression	& char_buf [ 0 ]		2161598	1					
ANR	2163419	UnaryOperator	&		2161598	0					
ANR	2163420	ArrayIndexing	char_buf [ 0 ]		2161598	1					
ANR	2163421	Identifier	char_buf		2161598	0					
ANR	2163422	PrimaryExpression	0		2161598	1					
ANR	2163423	ExpressionStatement	s_len = 1	1099:5:27255:27264	2161598	81	True				
ANR	2163424	AssignmentExpression	s_len = 1		2161598	0		=			
ANR	2163425	Identifier	s_len		2161598	0					
ANR	2163426	PrimaryExpression	1		2161598	1					
ANR	2163427	ExpressionStatement	pad_char = ' '	1100:5:27271:27285	2161598	82	True				
ANR	2163428	AssignmentExpression	pad_char = ' '		2161598	0		=			
ANR	2163429	Identifier	pad_char		2161598	0					
ANR	2163430	PrimaryExpression	' '		2161598	1					
ANR	2163431	BreakStatement	break ;	1101:5:27292:27297	2161598	83	True				
ANR	2163432	Label	case '%' :	1104:4:27305:27313	2161598	84	True				
ANR	2163433	ExpressionStatement	char_buf [ 0 ] = '%'	1105:5:27320:27337	2161598	85	True				
ANR	2163434	AssignmentExpression	char_buf [ 0 ] = '%'		2161598	0		=			
ANR	2163435	ArrayIndexing	char_buf [ 0 ]		2161598	0					
ANR	2163436	Identifier	char_buf		2161598	0					
ANR	2163437	PrimaryExpression	0		2161598	1					
ANR	2163438	PrimaryExpression	'%'		2161598	1					
ANR	2163439	ExpressionStatement	s = & char_buf [ 0 ]	1106:5:27344:27360	2161598	86	True				
ANR	2163440	AssignmentExpression	s = & char_buf [ 0 ]		2161598	0		=			
ANR	2163441	Identifier	s		2161598	0					
ANR	2163442	UnaryOperationExpression	& char_buf [ 0 ]		2161598	1					
ANR	2163443	UnaryOperator	&		2161598	0					
ANR	2163444	ArrayIndexing	char_buf [ 0 ]		2161598	1					
ANR	2163445	Identifier	char_buf		2161598	0					
ANR	2163446	PrimaryExpression	0		2161598	1					
ANR	2163447	ExpressionStatement	s_len = 1	1107:5:27367:27376	2161598	87	True				
ANR	2163448	AssignmentExpression	s_len = 1		2161598	0		=			
ANR	2163449	Identifier	s_len		2161598	0					
ANR	2163450	PrimaryExpression	1		2161598	1					
ANR	2163451	ExpressionStatement	pad_char = ' '	1108:5:27383:27397	2161598	88	True				
ANR	2163452	AssignmentExpression	pad_char = ' '		2161598	0		=			
ANR	2163453	Identifier	pad_char		2161598	0					
ANR	2163454	PrimaryExpression	' '		2161598	1					
ANR	2163455	BreakStatement	break ;	1109:5:27404:27409	2161598	89	True				
ANR	2163456	Label	case 'n' :	1112:4:27417:27425	2161598	90	True				
ANR	2163457	Statement	*	1113:5:27432:27432	2161598	91	True				
ANR	2163458	Statement	(	1113:6:27433:27433	2161598	92	True				
ANR	2163459	Statement	va_arg	1113:7:27434:27439	2161598	93	True				
ANR	2163460	Statement	(	1113:13:27440:27440	2161598	94	True				
ANR	2163461	Statement	ap	1113:14:27441:27442	2161598	95	True				
ANR	2163462	Statement	","	1113:16:27443:27443	2161598	96	True				
ANR	2163463	Statement	int	1113:18:27445:27447	2161598	97	True				
ANR	2163464	Statement	*	1113:22:27449:27449	2161598	98	True				
ANR	2163465	Statement	)	1113:23:27450:27450	2161598	99	True				
ANR	2163466	Statement	)	1113:24:27451:27451	2161598	100	True				
ANR	2163467	Statement	=	1113:26:27453:27453	2161598	101	True				
ANR	2163468	ExpressionStatement	cc	1113:28:27455:27457	2161598	102	True				
ANR	2163469	Identifier	cc		2161598	0					
ANR	2163470	GotoStatement	goto skip_output ;	1114:5:27464:27480	2161598	103	True				
ANR	2163471	Identifier	skip_output		2161598	0					
ANR	2163472	Label	case 'p' :	1124:4:27853:27861	2161598	104	True				
ANR	2163473	IfStatement	if ( sizeof ( char * ) <= sizeof ( u_wide_int ) )		2161598	105					
ANR	2163474	Condition	sizeof ( char * ) <= sizeof ( u_wide_int )	1125:9:27872:27907	2161598	0	True				
ANR	2163475	RelationalExpression	sizeof ( char * ) <= sizeof ( u_wide_int )		2161598	0		<=			
ANR	2163476	SizeofExpression	sizeof ( char * )		2161598	0					
ANR	2163477	Sizeof	sizeof		2161598	0					
ANR	2163478	SizeofOperand	char *		2161598	1					
ANR	2163479	SizeofExpression	sizeof ( u_wide_int )		2161598	1					
ANR	2163480	Sizeof	sizeof		2161598	0					
ANR	2163481	SizeofOperand	u_wide_int		2161598	1					
ANR	2163482	CompoundStatement		538:47:11637:11637	2161598	1					
ANR	2163483	Statement	ui_num	1126:6:27918:27923	2161598	0	True				
ANR	2163484	Statement	=	1126:13:27925:27925	2161598	1	True				
ANR	2163485	Statement	(	1126:15:27927:27927	2161598	2	True				
ANR	2163486	Statement	u_wide_int	1126:16:27928:27937	2161598	3	True				
ANR	2163487	Statement	)	1126:26:27938:27938	2161598	4	True				
ANR	2163488	Statement	(	1126:27:27939:27939	2161598	5	True				
ANR	2163489	Statement	(	1126:28:27940:27940	2161598	6	True				
ANR	2163490	Statement	size_t	1126:29:27941:27946	2161598	7	True				
ANR	2163491	Statement	)	1126:35:27947:27947	2161598	8	True				
ANR	2163492	Statement	va_arg	1126:37:27949:27954	2161598	9	True				
ANR	2163493	Statement	(	1126:43:27955:27955	2161598	10	True				
ANR	2163494	Statement	ap	1126:44:27956:27957	2161598	11	True				
ANR	2163495	Statement	","	1126:46:27958:27958	2161598	12	True				
ANR	2163496	Statement	char	1126:48:27960:27963	2161598	13	True				
ANR	2163497	Statement	*	1126:53:27965:27965	2161598	14	True				
ANR	2163498	Statement	)	1126:54:27966:27966	2161598	15	True				
ANR	2163499	Statement	)	1126:55:27967:27967	2161598	16	True				
ANR	2163500	ExpressionStatement		1126:56:27968:27968	2161598	17	True				
ANR	2163501	ExpressionStatement	"s = ap_php_conv_p2 ( ui_num , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1127:6:27976:28050	2161598	18	True				
ANR	2163502	AssignmentExpression	"s = ap_php_conv_p2 ( ui_num , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	0		=			
ANR	2163503	Identifier	s		2161598	0					
ANR	2163504	CallExpression	"ap_php_conv_p2 ( ui_num , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2161598	1					
ANR	2163505	Callee	ap_php_conv_p2		2161598	0					
ANR	2163506	Identifier	ap_php_conv_p2		2161598	0					
ANR	2163507	ArgumentList	ui_num		2161598	1					
ANR	2163508	Argument	ui_num		2161598	0					
ANR	2163509	Identifier	ui_num		2161598	0					
ANR	2163510	Argument	4		2161598	1					
ANR	2163511	PrimaryExpression	4		2161598	0					
ANR	2163512	Argument	'x'		2161598	2					
ANR	2163513	PrimaryExpression	'x'		2161598	0					
ANR	2163514	Argument	& num_buf [ NUM_BUF_SIZE ]		2161598	3					
ANR	2163515	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2161598	0					
ANR	2163516	UnaryOperator	&		2161598	0					
ANR	2163517	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2161598	1					
ANR	2163518	Identifier	num_buf		2161598	0					
ANR	2163519	Identifier	NUM_BUF_SIZE		2161598	1					
ANR	2163520	Argument	& s_len		2161598	4					
ANR	2163521	UnaryOperationExpression	& s_len		2161598	0					
ANR	2163522	UnaryOperator	&		2161598	0					
ANR	2163523	Identifier	s_len		2161598	1					
ANR	2163524	IfStatement	if ( ui_num != 0 )		2161598	19					
ANR	2163525	Condition	ui_num != 0	1129:10:28062:28072	2161598	0	True				
ANR	2163526	EqualityExpression	ui_num != 0		2161598	0		!=			
ANR	2163527	Identifier	ui_num		2161598	0					
ANR	2163528	PrimaryExpression	0		2161598	1					
ANR	2163529	CompoundStatement		542:23:11802:11802	2161598	1					
ANR	2163530	ExpressionStatement	* -- s = 'x'	1130:7:28084:28094	2161598	0	True				
ANR	2163531	AssignmentExpression	* -- s = 'x'		2161598	0		=			
ANR	2163532	UnaryOperationExpression	* -- s		2161598	0					
ANR	2163533	UnaryOperator	*		2161598	0					
ANR	2163534	UnaryExpression	-- s		2161598	1					
ANR	2163535	IncDec	--		2161598	0					
ANR	2163536	Identifier	s		2161598	1					
ANR	2163537	PrimaryExpression	'x'		2161598	1					
ANR	2163538	ExpressionStatement	* -- s = '0'	1131:7:28103:28113	2161598	1	True				
ANR	2163539	AssignmentExpression	* -- s = '0'		2161598	0		=			
ANR	2163540	UnaryOperationExpression	* -- s		2161598	0					
ANR	2163541	UnaryOperator	*		2161598	0					
ANR	2163542	UnaryExpression	-- s		2161598	1					
ANR	2163543	IncDec	--		2161598	0					
ANR	2163544	Identifier	s		2161598	1					
ANR	2163545	PrimaryExpression	'0'		2161598	1					
ANR	2163546	ExpressionStatement	s_len += 2	1132:7:28122:28132	2161598	2	True				
ANR	2163547	AssignmentExpression	s_len += 2		2161598	0		+=			
ANR	2163548	Identifier	s_len		2161598	0					
ANR	2163549	PrimaryExpression	2		2161598	1					
ANR	2163550	ElseStatement	else		2161598	0					
ANR	2163551	CompoundStatement		547:12:11881:11881	2161598	0					
ANR	2163552	ExpressionStatement	"s = ""%p"""	1135:6:28162:28170	2161598	0	True				
ANR	2163553	AssignmentExpression	"s = ""%p"""		2161598	0		=			
ANR	2163554	Identifier	s		2161598	0					
ANR	2163555	PrimaryExpression	"""%p"""		2161598	1					
ANR	2163556	ExpressionStatement	s_len = 2	1136:6:28178:28187	2161598	1	True				
ANR	2163557	AssignmentExpression	s_len = 2		2161598	0		=			
ANR	2163558	Identifier	s_len		2161598	0					
ANR	2163559	PrimaryExpression	2		2161598	1					
ANR	2163560	ExpressionStatement	pad_char = ' '	1138:5:28201:28215	2161598	106	True				
ANR	2163561	AssignmentExpression	pad_char = ' '		2161598	0		=			
ANR	2163562	Identifier	pad_char		2161598	0					
ANR	2163563	PrimaryExpression	' '		2161598	1					
ANR	2163564	BreakStatement	break ;	1139:5:28222:28227	2161598	107	True				
ANR	2163565	Label	case NUL :	1142:4:28235:28243	2161598	108	True				
ANR	2163566	Identifier	NUL		2161598	0					
ANR	2163567	ContinueStatement	continue ;	1147:5:28344:28352	2161598	109	True				
ANR	2163568	Label	fmt_error :	1150:0:28356:28365	2161598	110	True				
ANR	2163569	Identifier	fmt_error		2161598	0					
ANR	2163570	ExpressionStatement	"php_error ( E_ERROR , ""Illegal length modifier specified '%c' in s[np]printf call"" , * fmt )"	1151:4:28371:28457	2161598	111	True				
ANR	2163571	CallExpression	"php_error ( E_ERROR , ""Illegal length modifier specified '%c' in s[np]printf call"" , * fmt )"		2161598	0					
ANR	2163572	Callee	php_error		2161598	0					
ANR	2163573	Identifier	php_error		2161598	0					
ANR	2163574	ArgumentList	E_ERROR		2161598	1					
ANR	2163575	Argument	E_ERROR		2161598	0					
ANR	2163576	Identifier	E_ERROR		2161598	0					
ANR	2163577	Argument	"""Illegal length modifier specified '%c' in s[np]printf call"""		2161598	1					
ANR	2163578	PrimaryExpression	"""Illegal length modifier specified '%c' in s[np]printf call"""		2161598	0					
ANR	2163579	Argument	* fmt		2161598	2					
ANR	2163580	UnaryOperationExpression	* fmt		2161598	0					
ANR	2163581	UnaryOperator	*		2161598	0					
ANR	2163582	Identifier	fmt		2161598	1					
ANR	2163583	Label	default :	1162:4:28910:28917	2161598	112	True				
ANR	2163584	Identifier	default		2161598	0					
ANR	2163585	ExpressionStatement	char_buf [ 0 ] = '%'	1163:5:28924:28941	2161598	113	True				
ANR	2163586	AssignmentExpression	char_buf [ 0 ] = '%'		2161598	0		=			
ANR	2163587	ArrayIndexing	char_buf [ 0 ]		2161598	0					
ANR	2163588	Identifier	char_buf		2161598	0					
ANR	2163589	PrimaryExpression	0		2161598	1					
ANR	2163590	PrimaryExpression	'%'		2161598	1					
ANR	2163591	ExpressionStatement	char_buf [ 1 ] = * fmt	1164:5:28948:28966	2161598	114	True				
ANR	2163592	AssignmentExpression	char_buf [ 1 ] = * fmt		2161598	0		=			
ANR	2163593	ArrayIndexing	char_buf [ 1 ]		2161598	0					
ANR	2163594	Identifier	char_buf		2161598	0					
ANR	2163595	PrimaryExpression	1		2161598	1					
ANR	2163596	UnaryOperationExpression	* fmt		2161598	1					
ANR	2163597	UnaryOperator	*		2161598	0					
ANR	2163598	Identifier	fmt		2161598	1					
ANR	2163599	ExpressionStatement	s = char_buf	1165:5:28973:28985	2161598	115	True				
ANR	2163600	AssignmentExpression	s = char_buf		2161598	0		=			
ANR	2163601	Identifier	s		2161598	0					
ANR	2163602	Identifier	char_buf		2161598	1					
ANR	2163603	ExpressionStatement	s_len = 2	1166:5:28992:29001	2161598	116	True				
ANR	2163604	AssignmentExpression	s_len = 2		2161598	0		=			
ANR	2163605	Identifier	s_len		2161598	0					
ANR	2163606	PrimaryExpression	2		2161598	1					
ANR	2163607	ExpressionStatement	pad_char = ' '	1167:5:29008:29022	2161598	117	True				
ANR	2163608	AssignmentExpression	pad_char = ' '		2161598	0		=			
ANR	2163609	Identifier	pad_char		2161598	0					
ANR	2163610	PrimaryExpression	' '		2161598	1					
ANR	2163611	BreakStatement	break ;	1168:5:29029:29034	2161598	118	True				
ANR	2163612	IfStatement	if ( prefix_char != NUL )		2161598	9					
ANR	2163613	Condition	prefix_char != NUL	1171:7:29049:29066	2161598	0	True				
ANR	2163614	EqualityExpression	prefix_char != NUL		2161598	0		!=			
ANR	2163615	Identifier	prefix_char		2161598	0					
ANR	2163616	Identifier	NUL		2161598	1					
ANR	2163617	CompoundStatement		584:27:12796:12796	2161598	1					
ANR	2163618	ExpressionStatement	* -- s = prefix_char	1172:4:29075:29093	2161598	0	True				
ANR	2163619	AssignmentExpression	* -- s = prefix_char		2161598	0		=			
ANR	2163620	UnaryOperationExpression	* -- s		2161598	0					
ANR	2163621	UnaryOperator	*		2161598	0					
ANR	2163622	UnaryExpression	-- s		2161598	1					
ANR	2163623	IncDec	--		2161598	0					
ANR	2163624	Identifier	s		2161598	1					
ANR	2163625	Identifier	prefix_char		2161598	1					
ANR	2163626	ExpressionStatement	s_len ++	1173:4:29099:29106	2161598	1	True				
ANR	2163627	PostIncDecOperationExpression	s_len ++		2161598	0					
ANR	2163628	Identifier	s_len		2161598	0					
ANR	2163629	IncDec	++		2161598	1					
ANR	2163630	IfStatement	if ( adjust_width && adjust == RIGHT && min_width > s_len )		2161598	10					
ANR	2163631	Condition	adjust_width && adjust == RIGHT && min_width > s_len	1175:7:29120:29171	2161598	0	True				
ANR	2163632	AndExpression	adjust_width && adjust == RIGHT && min_width > s_len		2161598	0		&&			
ANR	2163633	Identifier	adjust_width		2161598	0					
ANR	2163634	AndExpression	adjust == RIGHT && min_width > s_len		2161598	1		&&			
ANR	2163635	EqualityExpression	adjust == RIGHT		2161598	0		==			
ANR	2163636	Identifier	adjust		2161598	0					
ANR	2163637	Identifier	RIGHT		2161598	1					
ANR	2163638	RelationalExpression	min_width > s_len		2161598	1		>			
ANR	2163639	Identifier	min_width		2161598	0					
ANR	2163640	Identifier	s_len		2161598	1					
ANR	2163641	CompoundStatement		588:61:12901:12901	2161598	1					
ANR	2163642	IfStatement	if ( pad_char == '0' && prefix_char != NUL )		2161598	0					
ANR	2163643	Condition	pad_char == '0' && prefix_char != NUL	1176:8:29184:29220	2161598	0	True				
ANR	2163644	AndExpression	pad_char == '0' && prefix_char != NUL		2161598	0		&&			
ANR	2163645	EqualityExpression	pad_char == '0'		2161598	0		==			
ANR	2163646	Identifier	pad_char		2161598	0					
ANR	2163647	PrimaryExpression	'0'		2161598	1					
ANR	2163648	EqualityExpression	prefix_char != NUL		2161598	1		!=			
ANR	2163649	Identifier	prefix_char		2161598	0					
ANR	2163650	Identifier	NUL		2161598	1					
ANR	2163651	CompoundStatement		589:47:12950:12950	2161598	1					
ANR	2163652	Statement	INS_CHAR	1177:5:29230:29237	2161598	0	True				
ANR	2163653	Statement	(	1177:13:29238:29238	2161598	1	True				
ANR	2163654	Statement	*	1177:14:29239:29239	2161598	2	True				
ANR	2163655	Statement	s	1177:15:29240:29240	2161598	3	True				
ANR	2163656	Statement	","	1177:16:29241:29241	2161598	4	True				
ANR	2163657	Statement	sp	1177:18:29243:29244	2161598	5	True				
ANR	2163658	Statement	","	1177:20:29245:29245	2161598	6	True				
ANR	2163659	Statement	bep	1177:22:29247:29249	2161598	7	True				
ANR	2163660	Statement	","	1177:25:29250:29250	2161598	8	True				
ANR	2163661	Statement	cc	1177:27:29252:29253	2161598	9	True				
ANR	2163662	Statement	)	1177:29:29254:29254	2161598	10	True				
ANR	2163663	ExpressionStatement	s ++	1178:6:29262:29265	2161598	11	True				
ANR	2163664	PostIncDecOperationExpression	s ++		2161598	0					
ANR	2163665	Identifier	s		2161598	0					
ANR	2163666	IncDec	++		2161598	1					
ANR	2163667	ExpressionStatement	s_len --	1179:5:29272:29279	2161598	12	True				
ANR	2163668	PostIncDecOperationExpression	s_len --		2161598	0					
ANR	2163669	Identifier	s_len		2161598	0					
ANR	2163670	IncDec	--		2161598	1					
ANR	2163671	ExpressionStatement	min_width --	1180:5:29286:29297	2161598	13	True				
ANR	2163672	PostIncDecOperationExpression	min_width --		2161598	0					
ANR	2163673	Identifier	min_width		2161598	0					
ANR	2163674	IncDec	--		2161598	1					
ANR	2163675	ExpressionStatement	"PAD ( min_width , s_len , pad_char )"	1182:4:29309:29340	2161598	1	True				
ANR	2163676	CallExpression	"PAD ( min_width , s_len , pad_char )"		2161598	0					
ANR	2163677	Callee	PAD		2161598	0					
ANR	2163678	Identifier	PAD		2161598	0					
ANR	2163679	ArgumentList	min_width		2161598	1					
ANR	2163680	Argument	min_width		2161598	0					
ANR	2163681	Identifier	min_width		2161598	0					
ANR	2163682	Argument	s_len		2161598	1					
ANR	2163683	Identifier	s_len		2161598	0					
ANR	2163684	Argument	pad_char		2161598	2					
ANR	2163685	Identifier	pad_char		2161598	0					
ANR	2163686	ForStatement	for ( i = s_len ; i != 0 ; i -- )		2161598	11					
ANR	2163687	ForInit	i = s_len ;	1187:8:29394:29403	2161598	0	True				
ANR	2163688	AssignmentExpression	i = s_len		2161598	0		=			
ANR	2163689	Identifier	i		2161598	0					
ANR	2163690	Identifier	s_len		2161598	1					
ANR	2163691	Condition	i != 0	1187:19:29405:29410	2161598	1	True				
ANR	2163692	EqualityExpression	i != 0		2161598	0		!=			
ANR	2163693	Identifier	i		2161598	0					
ANR	2163694	PrimaryExpression	0		2161598	1					
ANR	2163695	PostIncDecOperationExpression	i --	1187:27:29413:29415	2161598	2	True				
ANR	2163696	Identifier	i		2161598	0					
ANR	2163697	IncDec	--		2161598	1					
ANR	2163698	CompoundStatement		600:32:13145:13145	2161598	3					
ANR	2163699	ExpressionStatement	"INS_CHAR ( * s , sp , bep , cc )"	1188:4:29424:29449	2161598	0	True				
ANR	2163700	CallExpression	"INS_CHAR ( * s , sp , bep , cc )"		2161598	0					
ANR	2163701	Callee	INS_CHAR		2161598	0					
ANR	2163702	Identifier	INS_CHAR		2161598	0					
ANR	2163703	ArgumentList	* s		2161598	1					
ANR	2163704	Argument	* s		2161598	0					
ANR	2163705	UnaryOperationExpression	* s		2161598	0					
ANR	2163706	UnaryOperator	*		2161598	0					
ANR	2163707	Identifier	s		2161598	1					
ANR	2163708	Argument	sp		2161598	1					
ANR	2163709	Identifier	sp		2161598	0					
ANR	2163710	Argument	bep		2161598	2					
ANR	2163711	Identifier	bep		2161598	0					
ANR	2163712	Argument	cc		2161598	3					
ANR	2163713	Identifier	cc		2161598	0					
ANR	2163714	ExpressionStatement	s ++	1189:4:29455:29458	2161598	1	True				
ANR	2163715	PostIncDecOperationExpression	s ++		2161598	0					
ANR	2163716	Identifier	s		2161598	0					
ANR	2163717	IncDec	++		2161598	1					
ANR	2163718	IfStatement	if ( adjust_width && adjust == LEFT && min_width > s_len )		2161598	12					
ANR	2163719	Condition	adjust_width && adjust == LEFT && min_width > s_len	1192:7:29473:29523	2161598	0	True				
ANR	2163720	AndExpression	adjust_width && adjust == LEFT && min_width > s_len		2161598	0		&&			
ANR	2163721	Identifier	adjust_width		2161598	0					
ANR	2163722	AndExpression	adjust == LEFT && min_width > s_len		2161598	1		&&			
ANR	2163723	EqualityExpression	adjust == LEFT		2161598	0		==			
ANR	2163724	Identifier	adjust		2161598	0					
ANR	2163725	Identifier	LEFT		2161598	1					
ANR	2163726	RelationalExpression	min_width > s_len		2161598	1		>			
ANR	2163727	Identifier	min_width		2161598	0					
ANR	2163728	Identifier	s_len		2161598	1					
ANR	2163729	ExpressionStatement	"PAD ( min_width , s_len , pad_char )"	1193:4:29530:29561	2161598	1	True				
ANR	2163730	CallExpression	"PAD ( min_width , s_len , pad_char )"		2161598	0					
ANR	2163731	Callee	PAD		2161598	0					
ANR	2163732	Identifier	PAD		2161598	0					
ANR	2163733	ArgumentList	min_width		2161598	1					
ANR	2163734	Argument	min_width		2161598	0					
ANR	2163735	Identifier	min_width		2161598	0					
ANR	2163736	Argument	s_len		2161598	1					
ANR	2163737	Identifier	s_len		2161598	0					
ANR	2163738	Argument	pad_char		2161598	2					
ANR	2163739	Identifier	pad_char		2161598	0					
ANR	2163740	IfStatement	if ( free_zcopy )		2161598	13					
ANR	2163741	Condition	free_zcopy	1194:7:29570:29579	2161598	0	True				
ANR	2163742	Identifier	free_zcopy		2161598	0					
ANR	2163743	CompoundStatement		607:19:13309:13309	2161598	1					
ANR	2163744	ExpressionStatement	zval_dtor ( & zcopy )	1195:4:29588:29605	2161598	0	True				
ANR	2163745	CallExpression	zval_dtor ( & zcopy )		2161598	0					
ANR	2163746	Callee	zval_dtor		2161598	0					
ANR	2163747	Identifier	zval_dtor		2161598	0					
ANR	2163748	ArgumentList	& zcopy		2161598	1					
ANR	2163749	Argument	& zcopy		2161598	0					
ANR	2163750	UnaryOperationExpression	& zcopy		2161598	0					
ANR	2163751	UnaryOperator	&		2161598	0					
ANR	2163752	Identifier	zcopy		2161598	1					
ANR	2163753	Label	skip_output :	1198:0:29616:29627	2161598	1	True				
ANR	2163754	Identifier	skip_output		2161598	0					
ANR	2163755	ExpressionStatement	fmt ++	1199:2:29631:29636	2161598	2	True				
ANR	2163756	PostIncDecOperationExpression	fmt ++		2161598	0					
ANR	2163757	Identifier	fmt		2161598	0					
ANR	2163758	IncDec	++		2161598	1					
ANR	2163759	ExpressionStatement	odp -> nextb = sp	1201:1:29642:29657	2161598	28	True				
ANR	2163760	AssignmentExpression	odp -> nextb = sp		2161598	0		=			
ANR	2163761	PtrMemberAccess	odp -> nextb		2161598	0					
ANR	2163762	Identifier	odp		2161598	0					
ANR	2163763	Identifier	nextb		2161598	1					
ANR	2163764	Identifier	sp		2161598	1					
ANR	2163765	ReturnStatement	return ( cc ) ;	1202:1:29660:29671	2161598	29	True				
ANR	2163766	Identifier	cc		2161598	0					
ANR	2163767	ReturnType	static int		2161598	1					
ANR	2163768	Identifier	format_converter		2161598	2					
ANR	2163769	ParameterList	"register buffy * odp , const char * fmt , va_list ap"		2161598	3					
ANR	2163770	Parameter	register buffy * odp	587:28:16211:16230	2161598	0	True				
ANR	2163771	ParameterType	register buffy *		2161598	0					
ANR	2163772	Identifier	odp		2161598	1					
ANR	2163773	Parameter	const char * fmt	587:50:16233:16247	2161598	1	True				
ANR	2163774	ParameterType	const char *		2161598	0					
ANR	2163775	Identifier	fmt		2161598	1					
ANR	2163776	Parameter	va_list ap	587:67:16250:16259	2161598	2	True				
ANR	2163777	ParameterType	va_list		2161598	0					
ANR	2163778	Identifier	ap		2161598	1					
ANR	2163779	CFGEntryNode	ENTRY		2161598		True				
ANR	2163780	CFGExitNode	EXIT		2161598		True				
ANR	2163781	InfiniteForNode	true		2161598		True				
ANR	2163782	Symbol	lconv		2161598						
ANR	2163783	Symbol	LCONV_DECIMAL_POINT		2161598						
ANR	2163784	Symbol	& s_len		2161598						
ANR	2163785	Symbol	precision		2161598						
ANR	2163786	Symbol	modifier		2161598						
ANR	2163787	Symbol	strchr		2161598						
ANR	2163788	Symbol	zcopy		2161598						
ANR	2163789	Symbol	size_t		2161598						
ANR	2163790	Symbol	fmt		2161598						
ANR	2163791	Symbol	bep		2161598						
ANR	2163792	Symbol	& is_negative		2161598						
ANR	2163793	Symbol	uintmax_t		2161598						
ANR	2163794	Symbol	strlen		2161598						
ANR	2163795	Symbol	zend_isinf		2161598						
ANR	2163796	Symbol	adjust_precision		2161598						
ANR	2163797	Symbol	php_gcvt		2161598						
ANR	2163798	Symbol	isdigit		2161598						
ANR	2163799	Symbol	va_arg		2161598						
ANR	2163800	Symbol	char_buf		2161598						
ANR	2163801	Symbol	intmax_t		2161598						
ANR	2163802	Symbol	NULL		2161598						
ANR	2163803	Symbol	LEFT		2161598						
ANR	2163804	Symbol	* odp		2161598						
ANR	2163805	Symbol	double		2161598						
ANR	2163806	Symbol	* -- s		2161598						
ANR	2163807	Symbol	ap		2161598						
ANR	2163808	Symbol	ptrdiff_t		2161598						
ANR	2163809	Symbol	ap_php_conv_p2		2161598						
ANR	2163810	Symbol	zvp		2161598						
ANR	2163811	Symbol	LM_LONG_DOUBLE		2161598						
ANR	2163812	Symbol	free_zcopy		2161598						
ANR	2163813	Symbol	adjust		2161598						
ANR	2163814	Symbol	odp		2161598						
ANR	2163815	Symbol	is_negative		2161598						
ANR	2163816	Symbol	adjust_width		2161598						
ANR	2163817	Symbol	ui_num		2161598						
ANR	2163818	Symbol	* s ++		2161598						
ANR	2163819	Symbol	NO		2161598						
ANR	2163820	Symbol	ssize_t		2161598						
ANR	2163821	Symbol	i_num		2161598						
ANR	2163822	Symbol	islower		2161598						
ANR	2163823	Symbol	YES		2161598						
ANR	2163824	Symbol	s_len		2161598						
ANR	2163825	Symbol	* fmt		2161598						
ANR	2163826	Symbol	print_sign		2161598						
ANR	2163827	Symbol	& free_zcopy		2161598						
ANR	2163828	Symbol	FLOAT_DIGITS		2161598						
ANR	2163829	Symbol	& lconv		2161598						
ANR	2163830	Symbol	pad_char		2161598						
ANR	2163831	Symbol	LM_PTRDIFF_T		2161598						
ANR	2163832	Symbol	ap_php_conv_10		2161598						
ANR	2163833	Symbol	LM_SIZE_T		2161598						
ANR	2163834	Symbol	LM_INTMAX_T		2161598						
ANR	2163835	Symbol	& zcopy		2161598						
ANR	2163836	Symbol	odp -> nextb		2161598						
ANR	2163837	Symbol	RIGHT		2161598						
ANR	2163838	Symbol	FORMAT_CONV_MAX_PRECISION		2161598						
ANR	2163839	Symbol	* ( fmt + 1 )		2161598						
ANR	2163840	Symbol	zend_isnan		2161598						
ANR	2163841	Symbol	Z_STRLEN_P		2161598						
ANR	2163842	Symbol	LM_STD		2161598						
ANR	2163843	Symbol	sp		2161598						
ANR	2163844	Symbol	print_blank		2161598						
ANR	2163845	Symbol	min_width		2161598						
ANR	2163846	Symbol	isascii		2161598						
ANR	2163847	Symbol	cc		2161598						
ANR	2163848	Symbol	LM_LONG_LONG		2161598						
ANR	2163849	Symbol	NUL		2161598						
ANR	2163850	Symbol	S_NULL_LEN		2161598						
ANR	2163851	Symbol	alternate_form		2161598						
ANR	2163852	Symbol	LM_LONG		2161598						
ANR	2163853	Symbol	i		2161598						
ANR	2163854	Symbol	Z_STRVAL_P		2161598						
ANR	2163855	Symbol	int		2161598						
ANR	2163856	Symbol	* char_buf		2161598						
ANR	2163857	Symbol	S_NULL		2161598						
ANR	2163858	Symbol	php_conv_fp		2161598						
ANR	2163859	Symbol	s		2161598						
ANR	2163860	Symbol	E_ERROR		2161598						
ANR	2163861	Symbol	prefix_char		2161598						
ANR	2163862	Symbol	fp_num		2161598						
ANR	2163863	Symbol	odp -> buf_end		2161598						
ANR	2163864	Symbol	wide_int		2161598						
ANR	2163865	Symbol	NUM_BUF_SIZE		2161598						
ANR	2163866	Symbol	num_buf		2161598						
ANR	2163867	Symbol	u_wide_int		2161598						
ANR	2163868	Symbol	* s		2161598						
ANR	2163869	Function	strx_printv	1209:0:29745:30313							
ANR	2163870	FunctionDef	"strx_printv (int * ccp , char * buf , size_t len , const char * format , va_list ap)"		2163869	0					
ANR	2163871	CompoundStatement		1210:0:29844:30313	2163869	0					
ANR	2163872	IdentifierDeclStatement	buffy od ;	1211:1:29847:29855	2163869	0	True				
ANR	2163873	IdentifierDecl	od		2163869	0					
ANR	2163874	IdentifierDeclType	buffy		2163869	0					
ANR	2163875	Identifier	od		2163869	1					
ANR	2163876	IdentifierDeclStatement	int cc ;	1212:1:29858:29864	2163869	1	True				
ANR	2163877	IdentifierDecl	cc		2163869	0					
ANR	2163878	IdentifierDeclType	int		2163869	0					
ANR	2163879	Identifier	cc		2163869	1					
ANR	2163880	IfStatement	if ( len == 0 )		2163869	2					
ANR	2163881	Condition	len == 0	1219:5:30015:30022	2163869	0	True				
ANR	2163882	EqualityExpression	len == 0		2163869	0		==			
ANR	2163883	Identifier	len		2163869	0					
ANR	2163884	PrimaryExpression	0		2163869	1					
ANR	2163885	CompoundStatement		10:15:180:180	2163869	1					
ANR	2163886	ExpressionStatement	od . buf_end = ( char * ) ~0	1220:2:30029:30053	2163869	0	True				
ANR	2163887	AssignmentExpression	od . buf_end = ( char * ) ~0		2163869	0		=			
ANR	2163888	MemberAccess	od . buf_end		2163869	0					
ANR	2163889	Identifier	od		2163869	0					
ANR	2163890	Identifier	buf_end		2163869	1					
ANR	2163891	CastExpression	( char * ) ~0		2163869	1					
ANR	2163892	CastTarget	char *		2163869	0					
ANR	2163893	Identifier	~0		2163869	1					
ANR	2163894	ExpressionStatement	od . nextb = ( char * ) ~0	1221:2:30057:30081	2163869	1	True				
ANR	2163895	AssignmentExpression	od . nextb = ( char * ) ~0		2163869	0		=			
ANR	2163896	MemberAccess	od . nextb		2163869	0					
ANR	2163897	Identifier	od		2163869	0					
ANR	2163898	Identifier	nextb		2163869	1					
ANR	2163899	CastExpression	( char * ) ~0		2163869	1					
ANR	2163900	CastTarget	char *		2163869	0					
ANR	2163901	Identifier	~0		2163869	1					
ANR	2163902	ElseStatement	else		2163869	0					
ANR	2163903	CompoundStatement		13:8:246:246	2163869	0					
ANR	2163904	ExpressionStatement	od . buf_end = & buf [ len - 1 ]	1223:2:30095:30119	2163869	0	True				
ANR	2163905	AssignmentExpression	od . buf_end = & buf [ len - 1 ]		2163869	0		=			
ANR	2163906	MemberAccess	od . buf_end		2163869	0					
ANR	2163907	Identifier	od		2163869	0					
ANR	2163908	Identifier	buf_end		2163869	1					
ANR	2163909	UnaryOperationExpression	& buf [ len - 1 ]		2163869	1					
ANR	2163910	UnaryOperator	&		2163869	0					
ANR	2163911	ArrayIndexing	buf [ len - 1 ]		2163869	1					
ANR	2163912	Identifier	buf		2163869	0					
ANR	2163913	AdditiveExpression	len - 1		2163869	1		-			
ANR	2163914	Identifier	len		2163869	0					
ANR	2163915	PrimaryExpression	1		2163869	1					
ANR	2163916	ExpressionStatement	od . nextb = buf	1224:2:30123:30139	2163869	1	True				
ANR	2163917	AssignmentExpression	od . nextb = buf		2163869	0		=			
ANR	2163918	MemberAccess	od . nextb		2163869	0					
ANR	2163919	Identifier	od		2163869	0					
ANR	2163920	Identifier	nextb		2163869	1					
ANR	2163921	Identifier	buf		2163869	1					
ANR	2163922	ExpressionStatement	"cc = format_converter ( & od , format , ap )"	1230:1:30177:30215	2163869	3	True				
ANR	2163923	AssignmentExpression	"cc = format_converter ( & od , format , ap )"		2163869	0		=			
ANR	2163924	Identifier	cc		2163869	0					
ANR	2163925	CallExpression	"format_converter ( & od , format , ap )"		2163869	1					
ANR	2163926	Callee	format_converter		2163869	0					
ANR	2163927	Identifier	format_converter		2163869	0					
ANR	2163928	ArgumentList	& od		2163869	1					
ANR	2163929	Argument	& od		2163869	0					
ANR	2163930	UnaryOperationExpression	& od		2163869	0					
ANR	2163931	UnaryOperator	&		2163869	0					
ANR	2163932	Identifier	od		2163869	1					
ANR	2163933	Argument	format		2163869	1					
ANR	2163934	Identifier	format		2163869	0					
ANR	2163935	Argument	ap		2163869	2					
ANR	2163936	Identifier	ap		2163869	0					
ANR	2163937	IfStatement	if ( len != 0 && od . nextb <= od . buf_end )		2163869	4					
ANR	2163938	Condition	len != 0 && od . nextb <= od . buf_end	1231:5:30222:30255	2163869	0	True				
ANR	2163939	AndExpression	len != 0 && od . nextb <= od . buf_end		2163869	0		&&			
ANR	2163940	EqualityExpression	len != 0		2163869	0		!=			
ANR	2163941	Identifier	len		2163869	0					
ANR	2163942	PrimaryExpression	0		2163869	1					
ANR	2163943	RelationalExpression	od . nextb <= od . buf_end		2163869	1		<=			
ANR	2163944	MemberAccess	od . nextb		2163869	0					
ANR	2163945	Identifier	od		2163869	0					
ANR	2163946	Identifier	nextb		2163869	1					
ANR	2163947	MemberAccess	od . buf_end		2163869	1					
ANR	2163948	Identifier	od		2163869	0					
ANR	2163949	Identifier	buf_end		2163869	1					
ANR	2163950	CompoundStatement		22:41:413:413	2163869	1					
ANR	2163951	ExpressionStatement	* ( od . nextb ) = '\\0'	1232:2:30262:30280	2163869	0	True				
ANR	2163952	AssignmentExpression	* ( od . nextb ) = '\\0'		2163869	0		=			
ANR	2163953	UnaryOperationExpression	* ( od . nextb )		2163869	0					
ANR	2163954	UnaryOperator	*		2163869	0					
ANR	2163955	MemberAccess	od . nextb		2163869	1					
ANR	2163956	Identifier	od		2163869	0					
ANR	2163957	Identifier	nextb		2163869	1					
ANR	2163958	PrimaryExpression	'\\0'		2163869	1					
ANR	2163959	IfStatement	if ( ccp )		2163869	5					
ANR	2163960	Condition	ccp	1234:5:30290:30292	2163869	0	True				
ANR	2163961	Identifier	ccp		2163869	0					
ANR	2163962	CompoundStatement		25:10:450:450	2163869	1					
ANR	2163963	ExpressionStatement	* ccp = cc	1235:2:30299:30308	2163869	0	True				
ANR	2163964	AssignmentExpression	* ccp = cc		2163869	0		=			
ANR	2163965	UnaryOperationExpression	* ccp		2163869	0					
ANR	2163966	UnaryOperator	*		2163869	0					
ANR	2163967	Identifier	ccp		2163869	1					
ANR	2163968	Identifier	cc		2163869	1					
ANR	2163969	ReturnType	static void		2163869	1					
ANR	2163970	Identifier	strx_printv		2163869	2					
ANR	2163971	ParameterList	"int * ccp , char * buf , size_t len , const char * format , va_list ap"		2163869	3					
ANR	2163972	Parameter	int * ccp	1209:24:29769:29776	2163869	0	True				
ANR	2163973	ParameterType	int *		2163869	0					
ANR	2163974	Identifier	ccp		2163869	1					
ANR	2163975	Parameter	char * buf	1209:34:29779:29787	2163869	1	True				
ANR	2163976	ParameterType	char *		2163869	0					
ANR	2163977	Identifier	buf		2163869	1					
ANR	2163978	Parameter	size_t len	1209:45:29790:29799	2163869	2	True				
ANR	2163979	ParameterType	size_t		2163869	0					
ANR	2163980	Identifier	len		2163869	1					
ANR	2163981	Parameter	const char * format	1209:57:29802:29819	2163869	3	True				
ANR	2163982	ParameterType	const char *		2163869	0					
ANR	2163983	Identifier	format		2163869	1					
ANR	2163984	Parameter	va_list ap	1209:77:29822:29831	2163869	4	True				
ANR	2163985	ParameterType	va_list		2163869	0					
ANR	2163986	Identifier	ap		2163869	1					
ANR	2163987	CFGEntryNode	ENTRY		2163869		True				
ANR	2163988	CFGExitNode	EXIT		2163869		True				
ANR	2163989	Symbol	cc		2163869						
ANR	2163990	Symbol	od . nextb		2163869						
ANR	2163991	Symbol	* od . nextb		2163869						
ANR	2163992	Symbol	* ccp		2163869						
ANR	2163993	Symbol	format		2163869						
ANR	2163994	Symbol	ap		2163869						
ANR	2163995	Symbol	format_converter		2163869						
ANR	2163996	Symbol	ccp		2163869						
ANR	2163997	Symbol	* ( od . nextb )		2163869						
ANR	2163998	Symbol	buf		2163869						
ANR	2163999	Symbol	~0		2163869						
ANR	2164000	Symbol	len		2163869						
ANR	2164001	Symbol	od		2163869						
ANR	2164002	Symbol	* od		2163869						
ANR	2164003	Symbol	od . buf_end		2163869						
ANR	2164004	Symbol	& od		2163869						
ANR	2164005	Function	ap_php_slprintf	1240:0:30326:30587							
ANR	2164006	FunctionDef	"ap_php_slprintf (char * buf , size_t len , const char * format)"		2164005	0					
ANR	2164007	CompoundStatement		1241:0:30410:30587	2164005	0					
ANR	2164008	IdentifierDeclStatement	unsigned int cc ;	1242:1:30413:30428	2164005	0	True				
ANR	2164009	IdentifierDecl	cc		2164005	0					
ANR	2164010	IdentifierDeclType	unsigned int		2164005	0					
ANR	2164011	Identifier	cc		2164005	1					
ANR	2164012	IdentifierDeclStatement	va_list ap ;	1243:1:30431:30441	2164005	1	True				
ANR	2164013	IdentifierDecl	ap		2164005	0					
ANR	2164014	IdentifierDeclType	va_list		2164005	0					
ANR	2164015	Identifier	ap		2164005	1					
ANR	2164016	ExpressionStatement	"va_start ( ap , format )"	1245:1:30445:30465	2164005	2	True				
ANR	2164017	CallExpression	"va_start ( ap , format )"		2164005	0					
ANR	2164018	Callee	va_start		2164005	0					
ANR	2164019	Identifier	va_start		2164005	0					
ANR	2164020	ArgumentList	ap		2164005	1					
ANR	2164021	Argument	ap		2164005	0					
ANR	2164022	Identifier	ap		2164005	0					
ANR	2164023	Argument	format		2164005	1					
ANR	2164024	Identifier	format		2164005	0					
ANR	2164025	ExpressionStatement	"strx_printv ( & cc , buf , len , format , ap )"	1246:1:30468:30506	2164005	3	True				
ANR	2164026	CallExpression	"strx_printv ( & cc , buf , len , format , ap )"		2164005	0					
ANR	2164027	Callee	strx_printv		2164005	0					
ANR	2164028	Identifier	strx_printv		2164005	0					
ANR	2164029	ArgumentList	& cc		2164005	1					
ANR	2164030	Argument	& cc		2164005	0					
ANR	2164031	UnaryOperationExpression	& cc		2164005	0					
ANR	2164032	UnaryOperator	&		2164005	0					
ANR	2164033	Identifier	cc		2164005	1					
ANR	2164034	Argument	buf		2164005	1					
ANR	2164035	Identifier	buf		2164005	0					
ANR	2164036	Argument	len		2164005	2					
ANR	2164037	Identifier	len		2164005	0					
ANR	2164038	Argument	format		2164005	3					
ANR	2164039	Identifier	format		2164005	0					
ANR	2164040	Argument	ap		2164005	4					
ANR	2164041	Identifier	ap		2164005	0					
ANR	2164042	ExpressionStatement	va_end ( ap )	1247:1:30509:30519	2164005	4	True				
ANR	2164043	CallExpression	va_end ( ap )		2164005	0					
ANR	2164044	Callee	va_end		2164005	0					
ANR	2164045	Identifier	va_end		2164005	0					
ANR	2164046	ArgumentList	ap		2164005	1					
ANR	2164047	Argument	ap		2164005	0					
ANR	2164048	Identifier	ap		2164005	0					
ANR	2164049	IfStatement	if ( cc >= len )		2164005	5					
ANR	2164050	Condition	cc >= len	1248:5:30526:30534	2164005	0	True				
ANR	2164051	RelationalExpression	cc >= len		2164005	0		>=			
ANR	2164052	Identifier	cc		2164005	0					
ANR	2164053	Identifier	len		2164005	1					
ANR	2164054	CompoundStatement		8:16:126:126	2164005	1					
ANR	2164055	ExpressionStatement	cc = len - 1	1249:2:30541:30552	2164005	0	True				
ANR	2164056	AssignmentExpression	cc = len - 1		2164005	0		=			
ANR	2164057	Identifier	cc		2164005	0					
ANR	2164058	AdditiveExpression	len - 1		2164005	1		-			
ANR	2164059	Identifier	len		2164005	0					
ANR	2164060	PrimaryExpression	1		2164005	1					
ANR	2164061	ExpressionStatement	buf [ cc ] = '\\0'	1250:2:30556:30570	2164005	1	True				
ANR	2164062	AssignmentExpression	buf [ cc ] = '\\0'		2164005	0		=			
ANR	2164063	ArrayIndexing	buf [ cc ]		2164005	0					
ANR	2164064	Identifier	buf		2164005	0					
ANR	2164065	Identifier	cc		2164005	1					
ANR	2164066	PrimaryExpression	'\\0'		2164005	1					
ANR	2164067	ReturnStatement	return cc ;	1252:1:30576:30585	2164005	6	True				
ANR	2164068	Identifier	cc		2164005	0					
ANR	2164069	ReturnType	PHPAPI int		2164005	1					
ANR	2164070	Identifier	ap_php_slprintf		2164005	2					
ANR	2164071	ParameterList	"char * buf , size_t len , const char * format"		2164005	3					
ANR	2164072	Parameter	char * buf	1240:27:30353:30361	2164005	0	True				
ANR	2164073	ParameterType	char *		2164005	0					
ANR	2164074	Identifier	buf		2164005	1					
ANR	2164075	Parameter	size_t len	1240:38:30364:30373	2164005	1	True				
ANR	2164076	ParameterType	size_t		2164005	0					
ANR	2164077	Identifier	len		2164005	1					
ANR	2164078	Parameter	const char * format	1240:50:30376:30393	2164005	2	True				
ANR	2164079	ParameterType	const char *		2164005	0					
ANR	2164080	Identifier	format		2164005	1					
ANR	2164081	CFGEntryNode	ENTRY		2164005		True				
ANR	2164082	CFGExitNode	EXIT		2164005		True				
ANR	2164083	Symbol	cc		2164005						
ANR	2164084	Symbol	buf		2164005						
ANR	2164085	Symbol	* buf		2164005						
ANR	2164086	Symbol	len		2164005						
ANR	2164087	Symbol	* cc		2164005						
ANR	2164088	Symbol	format		2164005						
ANR	2164089	Symbol	& cc		2164005						
ANR	2164090	Symbol	ap		2164005						
ANR	2164091	Function	ap_php_vslprintf	1256:0:30600:30821							
ANR	2164092	FunctionDef	"ap_php_vslprintf (char * buf , size_t len , const char * format , va_list ap)"		2164091	0					
ANR	2164093	CompoundStatement		1257:0:30693:30821	2164091	0					
ANR	2164094	IdentifierDeclStatement	unsigned int cc ;	1258:1:30696:30711	2164091	0	True				
ANR	2164095	IdentifierDecl	cc		2164091	0					
ANR	2164096	IdentifierDeclType	unsigned int		2164091	0					
ANR	2164097	Identifier	cc		2164091	1					
ANR	2164098	ExpressionStatement	"strx_printv ( & cc , buf , len , format , ap )"	1260:1:30715:30753	2164091	1	True				
ANR	2164099	CallExpression	"strx_printv ( & cc , buf , len , format , ap )"		2164091	0					
ANR	2164100	Callee	strx_printv		2164091	0					
ANR	2164101	Identifier	strx_printv		2164091	0					
ANR	2164102	ArgumentList	& cc		2164091	1					
ANR	2164103	Argument	& cc		2164091	0					
ANR	2164104	UnaryOperationExpression	& cc		2164091	0					
ANR	2164105	UnaryOperator	&		2164091	0					
ANR	2164106	Identifier	cc		2164091	1					
ANR	2164107	Argument	buf		2164091	1					
ANR	2164108	Identifier	buf		2164091	0					
ANR	2164109	Argument	len		2164091	2					
ANR	2164110	Identifier	len		2164091	0					
ANR	2164111	Argument	format		2164091	3					
ANR	2164112	Identifier	format		2164091	0					
ANR	2164113	Argument	ap		2164091	4					
ANR	2164114	Identifier	ap		2164091	0					
ANR	2164115	IfStatement	if ( cc >= len )		2164091	2					
ANR	2164116	Condition	cc >= len	1261:5:30760:30768	2164091	0	True				
ANR	2164117	RelationalExpression	cc >= len		2164091	0		>=			
ANR	2164118	Identifier	cc		2164091	0					
ANR	2164119	Identifier	len		2164091	1					
ANR	2164120	CompoundStatement		5:16:77:77	2164091	1					
ANR	2164121	ExpressionStatement	cc = len - 1	1262:2:30775:30786	2164091	0	True				
ANR	2164122	AssignmentExpression	cc = len - 1		2164091	0		=			
ANR	2164123	Identifier	cc		2164091	0					
ANR	2164124	AdditiveExpression	len - 1		2164091	1		-			
ANR	2164125	Identifier	len		2164091	0					
ANR	2164126	PrimaryExpression	1		2164091	1					
ANR	2164127	ExpressionStatement	buf [ cc ] = '\\0'	1263:2:30790:30804	2164091	1	True				
ANR	2164128	AssignmentExpression	buf [ cc ] = '\\0'		2164091	0		=			
ANR	2164129	ArrayIndexing	buf [ cc ]		2164091	0					
ANR	2164130	Identifier	buf		2164091	0					
ANR	2164131	Identifier	cc		2164091	1					
ANR	2164132	PrimaryExpression	'\\0'		2164091	1					
ANR	2164133	ReturnStatement	return cc ;	1265:1:30810:30819	2164091	3	True				
ANR	2164134	Identifier	cc		2164091	0					
ANR	2164135	ReturnType	PHPAPI int		2164091	1					
ANR	2164136	Identifier	ap_php_vslprintf		2164091	2					
ANR	2164137	ParameterList	"char * buf , size_t len , const char * format , va_list ap"		2164091	3					
ANR	2164138	Parameter	char * buf	1256:28:30628:30636	2164091	0	True				
ANR	2164139	ParameterType	char *		2164091	0					
ANR	2164140	Identifier	buf		2164091	1					
ANR	2164141	Parameter	size_t len	1256:39:30639:30648	2164091	1	True				
ANR	2164142	ParameterType	size_t		2164091	0					
ANR	2164143	Identifier	len		2164091	1					
ANR	2164144	Parameter	const char * format	1256:51:30651:30668	2164091	2	True				
ANR	2164145	ParameterType	const char *		2164091	0					
ANR	2164146	Identifier	format		2164091	1					
ANR	2164147	Parameter	va_list ap	1256:71:30671:30680	2164091	3	True				
ANR	2164148	ParameterType	va_list		2164091	0					
ANR	2164149	Identifier	ap		2164091	1					
ANR	2164150	CFGEntryNode	ENTRY		2164091		True				
ANR	2164151	CFGExitNode	EXIT		2164091		True				
ANR	2164152	Symbol	cc		2164091						
ANR	2164153	Symbol	buf		2164091						
ANR	2164154	Symbol	* buf		2164091						
ANR	2164155	Symbol	len		2164091						
ANR	2164156	Symbol	* cc		2164091						
ANR	2164157	Symbol	format		2164091						
ANR	2164158	Symbol	& cc		2164091						
ANR	2164159	Symbol	ap		2164091						
ANR	2164160	Function	ap_php_snprintf	1269:0:30834:31034							
ANR	2164161	FunctionDef	"ap_php_snprintf (char * buf , size_t len , const char * format)"		2164160	0					
ANR	2164162	CompoundStatement		1270:0:30918:31034	2164160	0					
ANR	2164163	IdentifierDeclStatement	int cc ;	1271:1:30921:30927	2164160	0	True				
ANR	2164164	IdentifierDecl	cc		2164160	0					
ANR	2164165	IdentifierDeclType	int		2164160	0					
ANR	2164166	Identifier	cc		2164160	1					
ANR	2164167	IdentifierDeclStatement	va_list ap ;	1272:1:30930:30940	2164160	1	True				
ANR	2164168	IdentifierDecl	ap		2164160	0					
ANR	2164169	IdentifierDeclType	va_list		2164160	0					
ANR	2164170	Identifier	ap		2164160	1					
ANR	2164171	ExpressionStatement	"va_start ( ap , format )"	1274:1:30944:30964	2164160	2	True				
ANR	2164172	CallExpression	"va_start ( ap , format )"		2164160	0					
ANR	2164173	Callee	va_start		2164160	0					
ANR	2164174	Identifier	va_start		2164160	0					
ANR	2164175	ArgumentList	ap		2164160	1					
ANR	2164176	Argument	ap		2164160	0					
ANR	2164177	Identifier	ap		2164160	0					
ANR	2164178	Argument	format		2164160	1					
ANR	2164179	Identifier	format		2164160	0					
ANR	2164180	ExpressionStatement	"strx_printv ( & cc , buf , len , format , ap )"	1275:1:30967:31005	2164160	3	True				
ANR	2164181	CallExpression	"strx_printv ( & cc , buf , len , format , ap )"		2164160	0					
ANR	2164182	Callee	strx_printv		2164160	0					
ANR	2164183	Identifier	strx_printv		2164160	0					
ANR	2164184	ArgumentList	& cc		2164160	1					
ANR	2164185	Argument	& cc		2164160	0					
ANR	2164186	UnaryOperationExpression	& cc		2164160	0					
ANR	2164187	UnaryOperator	&		2164160	0					
ANR	2164188	Identifier	cc		2164160	1					
ANR	2164189	Argument	buf		2164160	1					
ANR	2164190	Identifier	buf		2164160	0					
ANR	2164191	Argument	len		2164160	2					
ANR	2164192	Identifier	len		2164160	0					
ANR	2164193	Argument	format		2164160	3					
ANR	2164194	Identifier	format		2164160	0					
ANR	2164195	Argument	ap		2164160	4					
ANR	2164196	Identifier	ap		2164160	0					
ANR	2164197	ExpressionStatement	va_end ( ap )	1276:1:31008:31018	2164160	4	True				
ANR	2164198	CallExpression	va_end ( ap )		2164160	0					
ANR	2164199	Callee	va_end		2164160	0					
ANR	2164200	Identifier	va_end		2164160	0					
ANR	2164201	ArgumentList	ap		2164160	1					
ANR	2164202	Argument	ap		2164160	0					
ANR	2164203	Identifier	ap		2164160	0					
ANR	2164204	ReturnStatement	return ( cc ) ;	1277:1:31021:31032	2164160	5	True				
ANR	2164205	Identifier	cc		2164160	0					
ANR	2164206	ReturnType	PHPAPI int		2164160	1					
ANR	2164207	Identifier	ap_php_snprintf		2164160	2					
ANR	2164208	ParameterList	"char * buf , size_t len , const char * format"		2164160	3					
ANR	2164209	Parameter	char * buf	1269:27:30861:30869	2164160	0	True				
ANR	2164210	ParameterType	char *		2164160	0					
ANR	2164211	Identifier	buf		2164160	1					
ANR	2164212	Parameter	size_t len	1269:38:30872:30881	2164160	1	True				
ANR	2164213	ParameterType	size_t		2164160	0					
ANR	2164214	Identifier	len		2164160	1					
ANR	2164215	Parameter	const char * format	1269:50:30884:30901	2164160	2	True				
ANR	2164216	ParameterType	const char *		2164160	0					
ANR	2164217	Identifier	format		2164160	1					
ANR	2164218	CFGEntryNode	ENTRY		2164160		True				
ANR	2164219	CFGExitNode	EXIT		2164160		True				
ANR	2164220	Symbol	cc		2164160						
ANR	2164221	Symbol	buf		2164160						
ANR	2164222	Symbol	len		2164160						
ANR	2164223	Symbol	format		2164160						
ANR	2164224	Symbol	& cc		2164160						
ANR	2164225	Symbol	ap		2164160						
ANR	2164226	Function	ap_php_vsnprintf	1281:0:31047:31207							
ANR	2164227	FunctionDef	"ap_php_vsnprintf (char * buf , size_t len , const char * format , va_list ap)"		2164226	0					
ANR	2164228	CompoundStatement		1282:0:31140:31207	2164226	0					
ANR	2164229	IdentifierDeclStatement	int cc ;	1283:1:31143:31149	2164226	0	True				
ANR	2164230	IdentifierDecl	cc		2164226	0					
ANR	2164231	IdentifierDeclType	int		2164226	0					
ANR	2164232	Identifier	cc		2164226	1					
ANR	2164233	ExpressionStatement	"strx_printv ( & cc , buf , len , format , ap )"	1285:1:31153:31191	2164226	1	True				
ANR	2164234	CallExpression	"strx_printv ( & cc , buf , len , format , ap )"		2164226	0					
ANR	2164235	Callee	strx_printv		2164226	0					
ANR	2164236	Identifier	strx_printv		2164226	0					
ANR	2164237	ArgumentList	& cc		2164226	1					
ANR	2164238	Argument	& cc		2164226	0					
ANR	2164239	UnaryOperationExpression	& cc		2164226	0					
ANR	2164240	UnaryOperator	&		2164226	0					
ANR	2164241	Identifier	cc		2164226	1					
ANR	2164242	Argument	buf		2164226	1					
ANR	2164243	Identifier	buf		2164226	0					
ANR	2164244	Argument	len		2164226	2					
ANR	2164245	Identifier	len		2164226	0					
ANR	2164246	Argument	format		2164226	3					
ANR	2164247	Identifier	format		2164226	0					
ANR	2164248	Argument	ap		2164226	4					
ANR	2164249	Identifier	ap		2164226	0					
ANR	2164250	ReturnStatement	return ( cc ) ;	1286:1:31194:31205	2164226	2	True				
ANR	2164251	Identifier	cc		2164226	0					
ANR	2164252	ReturnType	PHPAPI int		2164226	1					
ANR	2164253	Identifier	ap_php_vsnprintf		2164226	2					
ANR	2164254	ParameterList	"char * buf , size_t len , const char * format , va_list ap"		2164226	3					
ANR	2164255	Parameter	char * buf	1281:28:31075:31083	2164226	0	True				
ANR	2164256	ParameterType	char *		2164226	0					
ANR	2164257	Identifier	buf		2164226	1					
ANR	2164258	Parameter	size_t len	1281:39:31086:31095	2164226	1	True				
ANR	2164259	ParameterType	size_t		2164226	0					
ANR	2164260	Identifier	len		2164226	1					
ANR	2164261	Parameter	const char * format	1281:51:31098:31115	2164226	2	True				
ANR	2164262	ParameterType	const char *		2164226	0					
ANR	2164263	Identifier	format		2164226	1					
ANR	2164264	Parameter	va_list ap	1281:71:31118:31127	2164226	3	True				
ANR	2164265	ParameterType	va_list		2164226	0					
ANR	2164266	Identifier	ap		2164226	1					
ANR	2164267	CFGEntryNode	ENTRY		2164226		True				
ANR	2164268	CFGExitNode	EXIT		2164226		True				
ANR	2164269	Symbol	cc		2164226						
ANR	2164270	Symbol	buf		2164226						
ANR	2164271	Symbol	len		2164226						
ANR	2164272	Symbol	format		2164226						
ANR	2164273	Symbol	& cc		2164226						
ANR	2164274	Symbol	ap		2164226						
ANR	2164275	Function	ap_php_vasprintf	1290:0:31220:31596							
ANR	2164276	FunctionDef	"ap_php_vasprintf (char * * buf , const char * format , va_list ap)"		2164275	0					
ANR	2164277	CompoundStatement		1291:0:31302:31596	2164275	0					
ANR	2164278	IdentifierDeclStatement	va_list ap2 ;	1292:1:31305:31316	2164275	0	True				
ANR	2164279	IdentifierDecl	ap2		2164275	0					
ANR	2164280	IdentifierDeclType	va_list		2164275	0					
ANR	2164281	Identifier	ap2		2164275	1					
ANR	2164282	IdentifierDeclStatement	int cc ;	1293:1:31319:31325	2164275	1	True				
ANR	2164283	IdentifierDecl	cc		2164275	0					
ANR	2164284	IdentifierDeclType	int		2164275	0					
ANR	2164285	Identifier	cc		2164275	1					
ANR	2164286	ExpressionStatement	"va_copy ( ap2 , ap )"	1295:1:31329:31345	2164275	2	True				
ANR	2164287	CallExpression	"va_copy ( ap2 , ap )"		2164275	0					
ANR	2164288	Callee	va_copy		2164275	0					
ANR	2164289	Identifier	va_copy		2164275	0					
ANR	2164290	ArgumentList	ap2		2164275	1					
ANR	2164291	Argument	ap2		2164275	0					
ANR	2164292	Identifier	ap2		2164275	0					
ANR	2164293	Argument	ap		2164275	1					
ANR	2164294	Identifier	ap		2164275	0					
ANR	2164295	ExpressionStatement	"cc = ap_php_vsnprintf ( NULL , 0 , format , ap2 )"	1296:1:31348:31391	2164275	3	True				
ANR	2164296	AssignmentExpression	"cc = ap_php_vsnprintf ( NULL , 0 , format , ap2 )"		2164275	0		=			
ANR	2164297	Identifier	cc		2164275	0					
ANR	2164298	CallExpression	"ap_php_vsnprintf ( NULL , 0 , format , ap2 )"		2164275	1					
ANR	2164299	Callee	ap_php_vsnprintf		2164275	0					
ANR	2164300	Identifier	ap_php_vsnprintf		2164275	0					
ANR	2164301	ArgumentList	NULL		2164275	1					
ANR	2164302	Argument	NULL		2164275	0					
ANR	2164303	Identifier	NULL		2164275	0					
ANR	2164304	Argument	0		2164275	1					
ANR	2164305	PrimaryExpression	0		2164275	0					
ANR	2164306	Argument	format		2164275	2					
ANR	2164307	Identifier	format		2164275	0					
ANR	2164308	Argument	ap2		2164275	3					
ANR	2164309	Identifier	ap2		2164275	0					
ANR	2164310	ExpressionStatement	va_end ( ap2 )	1297:1:31394:31405	2164275	4	True				
ANR	2164311	CallExpression	va_end ( ap2 )		2164275	0					
ANR	2164312	Callee	va_end		2164275	0					
ANR	2164313	Identifier	va_end		2164275	0					
ANR	2164314	ArgumentList	ap2		2164275	1					
ANR	2164315	Argument	ap2		2164275	0					
ANR	2164316	Identifier	ap2		2164275	0					
ANR	2164317	ExpressionStatement	* buf = NULL	1299:1:31409:31420	2164275	5	True				
ANR	2164318	AssignmentExpression	* buf = NULL		2164275	0		=			
ANR	2164319	UnaryOperationExpression	* buf		2164275	0					
ANR	2164320	UnaryOperator	*		2164275	0					
ANR	2164321	Identifier	buf		2164275	1					
ANR	2164322	Identifier	NULL		2164275	1					
ANR	2164323	IfStatement	if ( cc >= 0 )		2164275	6					
ANR	2164324	Condition	cc >= 0	1301:5:31428:31434	2164275	0	True				
ANR	2164325	RelationalExpression	cc >= 0		2164275	0		>=			
ANR	2164326	Identifier	cc		2164275	0					
ANR	2164327	PrimaryExpression	0		2164275	1					
ANR	2164328	CompoundStatement		11:14:134:134	2164275	1					
ANR	2164329	IfStatement	if ( ( * buf = malloc ( ++ cc ) ) != NULL )		2164275	0					
ANR	2164330	Condition	( * buf = malloc ( ++ cc ) ) != NULL	1302:6:31445:31473	2164275	0	True				
ANR	2164331	EqualityExpression	( * buf = malloc ( ++ cc ) ) != NULL		2164275	0		!=			
ANR	2164332	AssignmentExpression	* buf = malloc ( ++ cc )		2164275	0		=			
ANR	2164333	UnaryOperationExpression	* buf		2164275	0					
ANR	2164334	UnaryOperator	*		2164275	0					
ANR	2164335	Identifier	buf		2164275	1					
ANR	2164336	CallExpression	malloc ( ++ cc )		2164275	1					
ANR	2164337	Callee	malloc		2164275	0					
ANR	2164338	Identifier	malloc		2164275	0					
ANR	2164339	ArgumentList	++ cc		2164275	1					
ANR	2164340	Argument	++ cc		2164275	0					
ANR	2164341	UnaryExpression	++ cc		2164275	0					
ANR	2164342	IncDec	++		2164275	0					
ANR	2164343	Identifier	cc		2164275	1					
ANR	2164344	Identifier	NULL		2164275	1					
ANR	2164345	CompoundStatement		12:37:173:173	2164275	1					
ANR	2164346	IfStatement	"if ( ( cc = ap_php_vsnprintf ( * buf , cc , format , ap ) ) < 0 )"		2164275	0					
ANR	2164347	Condition	"( cc = ap_php_vsnprintf ( * buf , cc , format , ap ) ) < 0"	1303:7:31485:31533	2164275	0	True				
ANR	2164348	RelationalExpression	"( cc = ap_php_vsnprintf ( * buf , cc , format , ap ) ) < 0"		2164275	0		<			
ANR	2164349	AssignmentExpression	"cc = ap_php_vsnprintf ( * buf , cc , format , ap )"		2164275	0		=			
ANR	2164350	Identifier	cc		2164275	0					
ANR	2164351	CallExpression	"ap_php_vsnprintf ( * buf , cc , format , ap )"		2164275	1					
ANR	2164352	Callee	ap_php_vsnprintf		2164275	0					
ANR	2164353	Identifier	ap_php_vsnprintf		2164275	0					
ANR	2164354	ArgumentList	* buf		2164275	1					
ANR	2164355	Argument	* buf		2164275	0					
ANR	2164356	UnaryOperationExpression	* buf		2164275	0					
ANR	2164357	UnaryOperator	*		2164275	0					
ANR	2164358	Identifier	buf		2164275	1					
ANR	2164359	Argument	cc		2164275	1					
ANR	2164360	Identifier	cc		2164275	0					
ANR	2164361	Argument	format		2164275	2					
ANR	2164362	Identifier	format		2164275	0					
ANR	2164363	Argument	ap		2164275	3					
ANR	2164364	Identifier	ap		2164275	0					
ANR	2164365	PrimaryExpression	0		2164275	1					
ANR	2164366	CompoundStatement		13:58:233:233	2164275	1					
ANR	2164367	ExpressionStatement	free ( * buf )	1304:4:31542:31552	2164275	0	True				
ANR	2164368	CallExpression	free ( * buf )		2164275	0					
ANR	2164369	Callee	free		2164275	0					
ANR	2164370	Identifier	free		2164275	0					
ANR	2164371	ArgumentList	* buf		2164275	1					
ANR	2164372	Argument	* buf		2164275	0					
ANR	2164373	UnaryOperationExpression	* buf		2164275	0					
ANR	2164374	UnaryOperator	*		2164275	0					
ANR	2164375	Identifier	buf		2164275	1					
ANR	2164376	ExpressionStatement	* buf = NULL	1305:4:31558:31569	2164275	1	True				
ANR	2164377	AssignmentExpression	* buf = NULL		2164275	0		=			
ANR	2164378	UnaryOperationExpression	* buf		2164275	0					
ANR	2164379	UnaryOperator	*		2164275	0					
ANR	2164380	Identifier	buf		2164275	1					
ANR	2164381	Identifier	NULL		2164275	1					
ANR	2164382	ReturnStatement	return cc ;	1310:1:31585:31594	2164275	7	True				
ANR	2164383	Identifier	cc		2164275	0					
ANR	2164384	ReturnType	PHPAPI int		2164275	1					
ANR	2164385	Identifier	ap_php_vasprintf		2164275	2					
ANR	2164386	ParameterList	"char * * buf , const char * format , va_list ap"		2164275	3					
ANR	2164387	Parameter	char * * buf	1290:28:31248:31257	2164275	0	True				
ANR	2164388	ParameterType	char * *		2164275	0					
ANR	2164389	Identifier	buf		2164275	1					
ANR	2164390	Parameter	const char * format	1290:40:31260:31277	2164275	1	True				
ANR	2164391	ParameterType	const char *		2164275	0					
ANR	2164392	Identifier	format		2164275	1					
ANR	2164393	Parameter	va_list ap	1290:60:31280:31289	2164275	2	True				
ANR	2164394	ParameterType	va_list		2164275	0					
ANR	2164395	Identifier	ap		2164275	1					
ANR	2164396	CFGEntryNode	ENTRY		2164275		True				
ANR	2164397	CFGExitNode	EXIT		2164275		True				
ANR	2164398	Symbol	cc		2164275						
ANR	2164399	Symbol	malloc		2164275						
ANR	2164400	Symbol	buf		2164275						
ANR	2164401	Symbol	ap2		2164275						
ANR	2164402	Symbol	* buf		2164275						
ANR	2164403	Symbol	NULL		2164275						
ANR	2164404	Symbol	ap_php_vsnprintf		2164275						
ANR	2164405	Symbol	format		2164275						
ANR	2164406	Symbol	ap		2164275						
ANR	2164407	Function	ap_php_asprintf	1314:0:31609:31790							
ANR	2164408	FunctionDef	"ap_php_asprintf (char * * buf , const char * format)"		2164407	0					
ANR	2164409	CompoundStatement		1315:0:31683:31790	2164407	0					
ANR	2164410	IdentifierDeclStatement	int cc ;	1316:1:31686:31692	2164407	0	True				
ANR	2164411	IdentifierDecl	cc		2164407	0					
ANR	2164412	IdentifierDeclType	int		2164407	0					
ANR	2164413	Identifier	cc		2164407	1					
ANR	2164414	IdentifierDeclStatement	va_list ap ;	1317:1:31695:31705	2164407	1	True				
ANR	2164415	IdentifierDecl	ap		2164407	0					
ANR	2164416	IdentifierDeclType	va_list		2164407	0					
ANR	2164417	Identifier	ap		2164407	1					
ANR	2164418	ExpressionStatement	"va_start ( ap , format )"	1319:1:31709:31729	2164407	2	True				
ANR	2164419	CallExpression	"va_start ( ap , format )"		2164407	0					
ANR	2164420	Callee	va_start		2164407	0					
ANR	2164421	Identifier	va_start		2164407	0					
ANR	2164422	ArgumentList	ap		2164407	1					
ANR	2164423	Argument	ap		2164407	0					
ANR	2164424	Identifier	ap		2164407	0					
ANR	2164425	Argument	format		2164407	1					
ANR	2164426	Identifier	format		2164407	0					
ANR	2164427	ExpressionStatement	"cc = vasprintf ( buf , format , ap )"	1320:1:31732:31763	2164407	3	True				
ANR	2164428	AssignmentExpression	"cc = vasprintf ( buf , format , ap )"		2164407	0		=			
ANR	2164429	Identifier	cc		2164407	0					
ANR	2164430	CallExpression	"vasprintf ( buf , format , ap )"		2164407	1					
ANR	2164431	Callee	vasprintf		2164407	0					
ANR	2164432	Identifier	vasprintf		2164407	0					
ANR	2164433	ArgumentList	buf		2164407	1					
ANR	2164434	Argument	buf		2164407	0					
ANR	2164435	Identifier	buf		2164407	0					
ANR	2164436	Argument	format		2164407	1					
ANR	2164437	Identifier	format		2164407	0					
ANR	2164438	Argument	ap		2164407	2					
ANR	2164439	Identifier	ap		2164407	0					
ANR	2164440	ExpressionStatement	va_end ( ap )	1321:1:31766:31776	2164407	4	True				
ANR	2164441	CallExpression	va_end ( ap )		2164407	0					
ANR	2164442	Callee	va_end		2164407	0					
ANR	2164443	Identifier	va_end		2164407	0					
ANR	2164444	ArgumentList	ap		2164407	1					
ANR	2164445	Argument	ap		2164407	0					
ANR	2164446	Identifier	ap		2164407	0					
ANR	2164447	ReturnStatement	return cc ;	1322:1:31779:31788	2164407	5	True				
ANR	2164448	Identifier	cc		2164407	0					
ANR	2164449	ReturnType	PHPAPI int		2164407	1					
ANR	2164450	Identifier	ap_php_asprintf		2164407	2					
ANR	2164451	ParameterList	"char * * buf , const char * format"		2164407	3					
ANR	2164452	Parameter	char * * buf	1314:27:31636:31645	2164407	0	True				
ANR	2164453	ParameterType	char * *		2164407	0					
ANR	2164454	Identifier	buf		2164407	1					
ANR	2164455	Parameter	const char * format	1314:39:31648:31665	2164407	1	True				
ANR	2164456	ParameterType	const char *		2164407	0					
ANR	2164457	Identifier	format		2164407	1					
ANR	2164458	CFGEntryNode	ENTRY		2164407		True				
ANR	2164459	CFGExitNode	EXIT		2164407		True				
ANR	2164460	Symbol	cc		2164407						
ANR	2164461	Symbol	vasprintf		2164407						
ANR	2164462	Symbol	buf		2164407						
ANR	2164463	Symbol	format		2164407						
ANR	2164464	Symbol	ap		2164407						
