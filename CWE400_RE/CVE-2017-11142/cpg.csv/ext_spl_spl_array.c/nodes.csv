command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1306067	File	data/converged/CVE-2017-11142_php-src/ext_spl_spl_array.c								
ANR	1306068	DeclStmt									
ANR	1306069	Decl							zend_object_handlers	zend_object_handlers	spl_handler_ArrayObject
ANR	1306070	DeclStmt									
ANR	1306071	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_ArrayObject
ANR	1306072	DeclStmt									
ANR	1306073	Decl							zend_object_handlers	zend_object_handlers	spl_handler_ArrayIterator
ANR	1306074	DeclStmt									
ANR	1306075	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_ArrayIterator
ANR	1306076	DeclStmt									
ANR	1306077	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_RecursiveArrayIterator
ANR	1306078	ClassDef	_spl_array_object	65:8:2563:3079							
ANR	1306079	DeclStmt									
ANR	1306080	Decl							zend_object	zend_object	std
ANR	1306081	DeclStmt									
ANR	1306082	Decl							zval	zval *	array
ANR	1306083	DeclStmt									
ANR	1306084	Decl							zval	zval *	retval
ANR	1306085	DeclStmt									
ANR	1306086	Decl							HashPosition	HashPosition	pos
ANR	1306087	DeclStmt									
ANR	1306088	Decl							ulong	ulong	pos_h
ANR	1306089	DeclStmt									
ANR	1306090	Decl							int	int	ar_flags
ANR	1306091	DeclStmt									
ANR	1306092	Decl							int	int	is_self
ANR	1306093	DeclStmt									
ANR	1306094	Decl							zend_function	zend_function *	fptr_offset_get
ANR	1306095	DeclStmt									
ANR	1306096	Decl							zend_function	zend_function *	fptr_offset_set
ANR	1306097	DeclStmt									
ANR	1306098	Decl							zend_function	zend_function *	fptr_offset_has
ANR	1306099	DeclStmt									
ANR	1306100	Decl							zend_function	zend_function *	fptr_offset_del
ANR	1306101	DeclStmt									
ANR	1306102	Decl							zend_function	zend_function *	fptr_count
ANR	1306103	DeclStmt									
ANR	1306104	Decl							zend_class_entry	zend_class_entry *	ce_get_iterator
ANR	1306105	DeclStmt									
ANR	1306106	Decl							HashTable	HashTable *	debug_info
ANR	1306107	DeclStmt									
ANR	1306108	Decl							unsigned char	unsigned char	nApplyCount
ANR	1306109	DeclStmt									
ANR	1306110	Decl							_spl_array_object	_spl_array_object	spl_array_object
ANR	1306111	Function	spl_array_get_hash_table	83:0:3082:3985							
ANR	1306112	FunctionDef	"spl_array_get_hash_table (spl_array_object * intern , int check_std_props TSRMLS_DC)"		1306111	0					
ANR	1306113	CompoundStatement		83:107:3189:3985	1306111	0					
ANR	1306114	IfStatement	if ( ( intern -> ar_flags & SPL_ARRAY_IS_SELF ) != 0 )		1306111	0					
ANR	1306115	Condition	( intern -> ar_flags & SPL_ARRAY_IS_SELF ) != 0	84:5:3206:3248	1306111	0	True				
ANR	1306116	EqualityExpression	( intern -> ar_flags & SPL_ARRAY_IS_SELF ) != 0		1306111	0		!=			
ANR	1306117	BitAndExpression	intern -> ar_flags & SPL_ARRAY_IS_SELF		1306111	0		&			
ANR	1306118	PtrMemberAccess	intern -> ar_flags		1306111	0					
ANR	1306119	Identifier	intern		1306111	0					
ANR	1306120	Identifier	ar_flags		1306111	1					
ANR	1306121	Identifier	SPL_ARRAY_IS_SELF		1306111	1					
ANR	1306122	PrimaryExpression	0		1306111	1					
ANR	1306123	CompoundStatement		2:50:61:61	1306111	1					
ANR	1306124	IfStatement	if ( ! intern -> std . properties )		1306111	0					
ANR	1306125	Condition	! intern -> std . properties	85:6:3259:3281	1306111	0	True				
ANR	1306126	UnaryOperationExpression	! intern -> std . properties		1306111	0					
ANR	1306127	UnaryOperator	!		1306111	0					
ANR	1306128	MemberAccess	intern -> std . properties		1306111	1					
ANR	1306129	PtrMemberAccess	intern -> std		1306111	0					
ANR	1306130	Identifier	intern		1306111	0					
ANR	1306131	Identifier	std		1306111	1					
ANR	1306132	Identifier	properties		1306111	1					
ANR	1306133	CompoundStatement		3:31:94:94	1306111	1					
ANR	1306134	ExpressionStatement	rebuild_object_properties ( & intern -> std )	86:3:3289:3328	1306111	0	True				
ANR	1306135	CallExpression	rebuild_object_properties ( & intern -> std )		1306111	0					
ANR	1306136	Callee	rebuild_object_properties		1306111	0					
ANR	1306137	Identifier	rebuild_object_properties		1306111	0					
ANR	1306138	ArgumentList	& intern -> std		1306111	1					
ANR	1306139	Argument	& intern -> std		1306111	0					
ANR	1306140	UnaryOperationExpression	& intern -> std		1306111	0					
ANR	1306141	UnaryOperator	&		1306111	0					
ANR	1306142	PtrMemberAccess	intern -> std		1306111	1					
ANR	1306143	Identifier	intern		1306111	0					
ANR	1306144	Identifier	std		1306111	1					
ANR	1306145	ReturnStatement	return intern -> std . properties ;	88:2:3336:3365	1306111	1	True				
ANR	1306146	MemberAccess	intern -> std . properties		1306111	0					
ANR	1306147	PtrMemberAccess	intern -> std		1306111	0					
ANR	1306148	Identifier	intern		1306111	0					
ANR	1306149	Identifier	std		1306111	1					
ANR	1306150	Identifier	properties		1306111	1					
ANR	1306151	ElseStatement	else		1306111	0					
ANR	1306152	IfStatement	if ( ( intern -> ar_flags & SPL_ARRAY_USE_OTHER ) && ( check_std_props == 0 || ( intern -> ar_flags & SPL_ARRAY_STD_PROP_LIST ) == 0 ) && Z_TYPE_P ( intern -> array ) == IS_OBJECT )		1306111	0					
ANR	1306153	Condition	( intern -> ar_flags & SPL_ARRAY_USE_OTHER ) && ( check_std_props == 0 || ( intern -> ar_flags & SPL_ARRAY_STD_PROP_LIST ) == 0 ) && Z_TYPE_P ( intern -> array ) == IS_OBJECT	89:12:3379:3537	1306111	0	True				
ANR	1306154	AndExpression	( intern -> ar_flags & SPL_ARRAY_USE_OTHER ) && ( check_std_props == 0 || ( intern -> ar_flags & SPL_ARRAY_STD_PROP_LIST ) == 0 ) && Z_TYPE_P ( intern -> array ) == IS_OBJECT		1306111	0		&&			
ANR	1306155	BitAndExpression	intern -> ar_flags & SPL_ARRAY_USE_OTHER		1306111	0		&			
ANR	1306156	PtrMemberAccess	intern -> ar_flags		1306111	0					
ANR	1306157	Identifier	intern		1306111	0					
ANR	1306158	Identifier	ar_flags		1306111	1					
ANR	1306159	Identifier	SPL_ARRAY_USE_OTHER		1306111	1					
ANR	1306160	AndExpression	( check_std_props == 0 || ( intern -> ar_flags & SPL_ARRAY_STD_PROP_LIST ) == 0 ) && Z_TYPE_P ( intern -> array ) == IS_OBJECT		1306111	1		&&			
ANR	1306161	OrExpression	check_std_props == 0 || ( intern -> ar_flags & SPL_ARRAY_STD_PROP_LIST ) == 0		1306111	0		||			
ANR	1306162	EqualityExpression	check_std_props == 0		1306111	0		==			
ANR	1306163	Identifier	check_std_props		1306111	0					
ANR	1306164	PrimaryExpression	0		1306111	1					
ANR	1306165	EqualityExpression	( intern -> ar_flags & SPL_ARRAY_STD_PROP_LIST ) == 0		1306111	1		==			
ANR	1306166	BitAndExpression	intern -> ar_flags & SPL_ARRAY_STD_PROP_LIST		1306111	0		&			
ANR	1306167	PtrMemberAccess	intern -> ar_flags		1306111	0					
ANR	1306168	Identifier	intern		1306111	0					
ANR	1306169	Identifier	ar_flags		1306111	1					
ANR	1306170	Identifier	SPL_ARRAY_STD_PROP_LIST		1306111	1					
ANR	1306171	PrimaryExpression	0		1306111	1					
ANR	1306172	EqualityExpression	Z_TYPE_P ( intern -> array ) == IS_OBJECT		1306111	1		==			
ANR	1306173	CallExpression	Z_TYPE_P ( intern -> array )		1306111	0					
ANR	1306174	Callee	Z_TYPE_P		1306111	0					
ANR	1306175	Identifier	Z_TYPE_P		1306111	0					
ANR	1306176	ArgumentList	intern -> array		1306111	1					
ANR	1306177	Argument	intern -> array		1306111	0					
ANR	1306178	PtrMemberAccess	intern -> array		1306111	0					
ANR	1306179	Identifier	intern		1306111	0					
ANR	1306180	Identifier	array		1306111	1					
ANR	1306181	Identifier	IS_OBJECT		1306111	1					
ANR	1306182	CompoundStatement		7:173:350:350	1306111	1					
ANR	1306183	Statement	spl_array_object	90:2:3544:3559	1306111	0	True				
ANR	1306184	Statement	*	90:19:3561:3561	1306111	1	True				
ANR	1306185	Statement	other	90:20:3562:3566	1306111	2	True				
ANR	1306186	Statement	=	90:27:3569:3569	1306111	3	True				
ANR	1306187	Statement	(	90:29:3571:3571	1306111	4	True				
ANR	1306188	Statement	spl_array_object	90:30:3572:3587	1306111	5	True				
ANR	1306189	Statement	*	90:46:3588:3588	1306111	6	True				
ANR	1306190	Statement	)	90:47:3589:3589	1306111	7	True				
ANR	1306191	Statement	zend_object_store_get_object	90:48:3590:3617	1306111	8	True				
ANR	1306192	Statement	(	90:76:3618:3618	1306111	9	True				
ANR	1306193	Statement	intern	90:77:3619:3624	1306111	10	True				
ANR	1306194	Statement	->	90:83:3625:3626	1306111	11	True				
ANR	1306195	Statement	array	90:85:3627:3631	1306111	12	True				
ANR	1306196	Statement	TSRMLS_CC	90:91:3633:3641	1306111	13	True				
ANR	1306197	Statement	)	90:100:3642:3642	1306111	14	True				
ANR	1306198	ExpressionStatement		90:101:3643:3643	1306111	15	True				
ANR	1306199	Statement	return	91:2:3647:3652	1306111	16	True				
ANR	1306200	Statement	spl_array_get_hash_table	91:9:3654:3677	1306111	17	True				
ANR	1306201	Statement	(	91:33:3678:3678	1306111	18	True				
ANR	1306202	Statement	other	91:34:3679:3683	1306111	19	True				
ANR	1306203	Statement	","	91:39:3684:3684	1306111	20	True				
ANR	1306204	Statement	check_std_props	91:41:3686:3700	1306111	21	True				
ANR	1306205	Statement	TSRMLS_CC	91:57:3702:3710	1306111	22	True				
ANR	1306206	Statement	)	91:66:3711:3711	1306111	23	True				
ANR	1306207	ExpressionStatement		91:67:3712:3712	1306111	24	True				
ANR	1306208	ElseStatement	else		1306111	0					
ANR	1306209	IfStatement	if ( ( intern -> ar_flags & ( ( check_std_props ? SPL_ARRAY_STD_PROP_LIST : 0 ) | SPL_ARRAY_IS_SELF ) ) != 0 )		1306111	0					
ANR	1306210	Condition	( intern -> ar_flags & ( ( check_std_props ? SPL_ARRAY_STD_PROP_LIST : 0 ) | SPL_ARRAY_IS_SELF ) ) != 0	92:12:3726:3820	1306111	0	True				
ANR	1306211	EqualityExpression	( intern -> ar_flags & ( ( check_std_props ? SPL_ARRAY_STD_PROP_LIST : 0 ) | SPL_ARRAY_IS_SELF ) ) != 0		1306111	0		!=			
ANR	1306212	BitAndExpression	intern -> ar_flags & ( ( check_std_props ? SPL_ARRAY_STD_PROP_LIST : 0 ) | SPL_ARRAY_IS_SELF )		1306111	0		&			
ANR	1306213	PtrMemberAccess	intern -> ar_flags		1306111	0					
ANR	1306214	Identifier	intern		1306111	0					
ANR	1306215	Identifier	ar_flags		1306111	1					
ANR	1306216	InclusiveOrExpression	( check_std_props ? SPL_ARRAY_STD_PROP_LIST : 0 ) | SPL_ARRAY_IS_SELF		1306111	1		|			
ANR	1306217	ConditionalExpression	check_std_props ? SPL_ARRAY_STD_PROP_LIST : 0		1306111	0					
ANR	1306218	Condition	check_std_props		1306111	0					
ANR	1306219	Identifier	check_std_props		1306111	0					
ANR	1306220	Identifier	SPL_ARRAY_STD_PROP_LIST		1306111	1					
ANR	1306221	PrimaryExpression	0		1306111	2					
ANR	1306222	Identifier	SPL_ARRAY_IS_SELF		1306111	1					
ANR	1306223	PrimaryExpression	0		1306111	1					
ANR	1306224	CompoundStatement		10:109:633:633	1306111	1					
ANR	1306225	IfStatement	if ( ! intern -> std . properties )		1306111	0					
ANR	1306226	Condition	! intern -> std . properties	93:6:3831:3853	1306111	0	True				
ANR	1306227	UnaryOperationExpression	! intern -> std . properties		1306111	0					
ANR	1306228	UnaryOperator	!		1306111	0					
ANR	1306229	MemberAccess	intern -> std . properties		1306111	1					
ANR	1306230	PtrMemberAccess	intern -> std		1306111	0					
ANR	1306231	Identifier	intern		1306111	0					
ANR	1306232	Identifier	std		1306111	1					
ANR	1306233	Identifier	properties		1306111	1					
ANR	1306234	CompoundStatement		11:31:666:666	1306111	1					
ANR	1306235	ExpressionStatement	rebuild_object_properties ( & intern -> std )	94:3:3861:3900	1306111	0	True				
ANR	1306236	CallExpression	rebuild_object_properties ( & intern -> std )		1306111	0					
ANR	1306237	Callee	rebuild_object_properties		1306111	0					
ANR	1306238	Identifier	rebuild_object_properties		1306111	0					
ANR	1306239	ArgumentList	& intern -> std		1306111	1					
ANR	1306240	Argument	& intern -> std		1306111	0					
ANR	1306241	UnaryOperationExpression	& intern -> std		1306111	0					
ANR	1306242	UnaryOperator	&		1306111	0					
ANR	1306243	PtrMemberAccess	intern -> std		1306111	1					
ANR	1306244	Identifier	intern		1306111	0					
ANR	1306245	Identifier	std		1306111	1					
ANR	1306246	ReturnStatement	return intern -> std . properties ;	96:2:3908:3937	1306111	1	True				
ANR	1306247	MemberAccess	intern -> std . properties		1306111	0					
ANR	1306248	PtrMemberAccess	intern -> std		1306111	0					
ANR	1306249	Identifier	intern		1306111	0					
ANR	1306250	Identifier	std		1306111	1					
ANR	1306251	Identifier	properties		1306111	1					
ANR	1306252	ElseStatement	else		1306111	0					
ANR	1306253	CompoundStatement		15:8:757:757	1306111	0					
ANR	1306254	ReturnStatement	return HASH_OF ( intern -> array ) ;	98:2:3951:3980	1306111	0	True				
ANR	1306255	CallExpression	HASH_OF ( intern -> array )		1306111	0					
ANR	1306256	Callee	HASH_OF		1306111	0					
ANR	1306257	Identifier	HASH_OF		1306111	0					
ANR	1306258	ArgumentList	intern -> array		1306111	1					
ANR	1306259	Argument	intern -> array		1306111	0					
ANR	1306260	PtrMemberAccess	intern -> array		1306111	0					
ANR	1306261	Identifier	intern		1306111	0					
ANR	1306262	Identifier	array		1306111	1					
ANR	1306263	ReturnType	static inline HashTable *		1306111	1					
ANR	1306264	Identifier	spl_array_get_hash_table		1306111	2					
ANR	1306265	ParameterList	"spl_array_object * intern , int check_std_props TSRMLS_DC"		1306111	3					
ANR	1306266	Parameter	spl_array_object * intern	83:50:3132:3155	1306111	0	True				
ANR	1306267	ParameterType	spl_array_object *		1306111	0					
ANR	1306268	Identifier	intern		1306111	1					
ANR	1306269	Parameter	int check_std_props TSRMLS_DC	83:76:3158:3186	1306111	1	True				
ANR	1306270	ParameterType	int check_std_props		1306111	0					
ANR	1306271	Identifier	TSRMLS_DC		1306111	1					
ANR	1306272	CFGEntryNode	ENTRY		1306111		True				
ANR	1306273	CFGExitNode	EXIT		1306111		True				
ANR	1306274	Symbol	* intern		1306111						
ANR	1306275	Symbol	intern		1306111						
ANR	1306276	Symbol	intern -> ar_flags		1306111						
ANR	1306277	Symbol	intern -> array		1306111						
ANR	1306278	Symbol	Z_TYPE_P		1306111						
ANR	1306279	Symbol	TSRMLS_DC		1306111						
ANR	1306280	Symbol	intern -> std		1306111						
ANR	1306281	Symbol	intern -> std . properties		1306111						
ANR	1306282	Symbol	& intern -> std		1306111						
ANR	1306283	Symbol	HASH_OF		1306111						
ANR	1306284	Symbol	SPL_ARRAY_IS_SELF		1306111						
ANR	1306285	Symbol	SPL_ARRAY_STD_PROP_LIST		1306111						
ANR	1306286	Symbol	IS_OBJECT		1306111						
ANR	1306287	Symbol	check_std_props		1306111						
ANR	1306288	Symbol	SPL_ARRAY_USE_OTHER		1306111						
ANR	1306289	Function	spl_array_update_pos	104:0:4065:4213							
ANR	1306290	FunctionDef	spl_array_update_pos (spl_array_object * intern)		1306289	0					
ANR	1306291	CompoundStatement		105:0:4134:4213	1306289	0					
ANR	1306292	IdentifierDeclStatement	Bucket * pos = intern -> pos ;	106:1:4137:4162	1306289	0	True				
ANR	1306293	IdentifierDecl	* pos = intern -> pos		1306289	0					
ANR	1306294	IdentifierDeclType	Bucket *		1306289	0					
ANR	1306295	Identifier	pos		1306289	1					
ANR	1306296	AssignmentExpression	* pos = intern -> pos		1306289	2		=			
ANR	1306297	Identifier	pos		1306289	0					
ANR	1306298	PtrMemberAccess	intern -> pos		1306289	1					
ANR	1306299	Identifier	intern		1306289	0					
ANR	1306300	Identifier	pos		1306289	1					
ANR	1306301	IfStatement	if ( pos != NULL )		1306289	1					
ANR	1306302	Condition	pos != NULL	107:5:4169:4179	1306289	0	True				
ANR	1306303	EqualityExpression	pos != NULL		1306289	0		!=			
ANR	1306304	Identifier	pos		1306289	0					
ANR	1306305	Identifier	NULL		1306289	1					
ANR	1306306	CompoundStatement		3:18:47:47	1306289	1					
ANR	1306307	ExpressionStatement	intern -> pos_h = pos -> h	108:2:4186:4208	1306289	0	True				
ANR	1306308	AssignmentExpression	intern -> pos_h = pos -> h		1306289	0		=			
ANR	1306309	PtrMemberAccess	intern -> pos_h		1306289	0					
ANR	1306310	Identifier	intern		1306289	0					
ANR	1306311	Identifier	pos_h		1306289	1					
ANR	1306312	PtrMemberAccess	pos -> h		1306289	1					
ANR	1306313	Identifier	pos		1306289	0					
ANR	1306314	Identifier	h		1306289	1					
ANR	1306315	ReturnType	static void		1306289	1					
ANR	1306316	Identifier	spl_array_update_pos		1306289	2					
ANR	1306317	ParameterList	spl_array_object * intern		1306289	3					
ANR	1306318	Parameter	spl_array_object * intern	104:33:4098:4121	1306289	0	True				
ANR	1306319	ParameterType	spl_array_object *		1306289	0					
ANR	1306320	Identifier	intern		1306289	1					
ANR	1306321	CFGEntryNode	ENTRY		1306289		True				
ANR	1306322	CFGExitNode	EXIT		1306289		True				
ANR	1306323	Symbol	intern -> pos		1306289						
ANR	1306324	Symbol	* intern		1306289						
ANR	1306325	Symbol	intern		1306289						
ANR	1306326	Symbol	NULL		1306289						
ANR	1306327	Symbol	pos		1306289						
ANR	1306328	Symbol	intern -> pos_h		1306289						
ANR	1306329	Symbol	pos -> h		1306289						
ANR	1306330	Symbol	* pos		1306289						
ANR	1306331	Function	spl_array_set_pos	112:0:4226:4363							
ANR	1306332	FunctionDef	"spl_array_set_pos (spl_array_object * intern , HashPosition pos)"		1306331	0					
ANR	1306333	CompoundStatement		113:0:4310:4363	1306331	0					
ANR	1306334	ExpressionStatement	intern -> pos = pos	114:1:4313:4330	1306331	0	True				
ANR	1306335	AssignmentExpression	intern -> pos = pos		1306331	0		=			
ANR	1306336	PtrMemberAccess	intern -> pos		1306331	0					
ANR	1306337	Identifier	intern		1306331	0					
ANR	1306338	Identifier	pos		1306331	1					
ANR	1306339	Identifier	pos		1306331	1					
ANR	1306340	ExpressionStatement	spl_array_update_pos ( intern )	115:1:4333:4361	1306331	1	True				
ANR	1306341	CallExpression	spl_array_update_pos ( intern )		1306331	0					
ANR	1306342	Callee	spl_array_update_pos		1306331	0					
ANR	1306343	Identifier	spl_array_update_pos		1306331	0					
ANR	1306344	ArgumentList	intern		1306331	1					
ANR	1306345	Argument	intern		1306331	0					
ANR	1306346	Identifier	intern		1306331	0					
ANR	1306347	ReturnType	static void		1306331	1					
ANR	1306348	Identifier	spl_array_set_pos		1306331	2					
ANR	1306349	ParameterList	"spl_array_object * intern , HashPosition pos"		1306331	3					
ANR	1306350	Parameter	spl_array_object * intern	112:30:4256:4279	1306331	0	True				
ANR	1306351	ParameterType	spl_array_object *		1306331	0					
ANR	1306352	Identifier	intern		1306331	1					
ANR	1306353	Parameter	HashPosition pos	112:56:4282:4297	1306331	1	True				
ANR	1306354	ParameterType	HashPosition		1306331	0					
ANR	1306355	Identifier	pos		1306331	1					
ANR	1306356	CFGEntryNode	ENTRY		1306331		True				
ANR	1306357	CFGExitNode	EXIT		1306331		True				
ANR	1306358	Symbol	intern -> pos		1306331						
ANR	1306359	Symbol	* intern		1306331						
ANR	1306360	Symbol	intern		1306331						
ANR	1306361	Symbol	pos		1306331						
ANR	1306362	DeclStmt									
ANR	1306363	Decl							Bucket	Bucket *	p
ANR	1306364	DeclStmt									
ANR	1306365	Decl							HashTable	HashTable *	ht
ANR	1306366	DeclStmt									
ANR	1306367	Decl							spl_array_object	spl_array_object *	intern
ANR	1306368	DeclStmt									
ANR	1306369	Decl							zend_object_iterator	"zend_object_iterator * ( zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC )"	spl_array_get_iterator
ANR	1306370	Function	spl_array_object_new_ex	167:0:5560:10476							
ANR	1306371	FunctionDef	"spl_array_object_new_ex (zend_class_entry * class_type , spl_array_object * * obj , zval * orig , int clone_orig TSRMLS_DC)"		1306370	0					
ANR	1306372	CompoundStatement		168:0:5701:10476	1306370	0					
ANR	1306373	IdentifierDeclStatement	zend_object_value retval = { 0 } ;	169:1:5704:5734	1306370	0	True				
ANR	1306374	IdentifierDecl	retval = { 0 }		1306370	0					
ANR	1306375	IdentifierDeclType	zend_object_value		1306370	0					
ANR	1306376	Identifier	retval		1306370	1					
ANR	1306377	AssignmentExpression	retval = { 0 }		1306370	2		=			
ANR	1306378	Identifier	retval		1306370	0					
ANR	1306379	InitializerList	0		1306370	1					
ANR	1306380	PrimaryExpression	0		1306370	0					
ANR	1306381	IdentifierDeclStatement	spl_array_object * intern ;	170:1:5737:5761	1306370	1	True				
ANR	1306382	IdentifierDecl	* intern		1306370	0					
ANR	1306383	IdentifierDeclType	spl_array_object *		1306370	0					
ANR	1306384	Identifier	intern		1306370	1					
ANR	1306385	IdentifierDeclStatement	zval * tmp ;	171:1:5764:5773	1306370	2	True				
ANR	1306386	IdentifierDecl	* tmp		1306370	0					
ANR	1306387	IdentifierDeclType	zval *		1306370	0					
ANR	1306388	Identifier	tmp		1306370	1					
ANR	1306389	IdentifierDeclStatement	zend_class_entry * parent = class_type ;	172:1:5776:5814	1306370	3	True				
ANR	1306390	IdentifierDecl	* parent = class_type		1306370	0					
ANR	1306391	IdentifierDeclType	zend_class_entry *		1306370	0					
ANR	1306392	Identifier	parent		1306370	1					
ANR	1306393	AssignmentExpression	* parent = class_type		1306370	2		=			
ANR	1306394	Identifier	class_type		1306370	0					
ANR	1306395	Identifier	class_type		1306370	1					
ANR	1306396	IdentifierDeclStatement	int inherited = 0 ;	173:1:5817:5834	1306370	4	True				
ANR	1306397	IdentifierDecl	inherited = 0		1306370	0					
ANR	1306398	IdentifierDeclType	int		1306370	0					
ANR	1306399	Identifier	inherited		1306370	1					
ANR	1306400	AssignmentExpression	inherited = 0		1306370	2		=			
ANR	1306401	Identifier	inherited		1306370	0					
ANR	1306402	PrimaryExpression	0		1306370	1					
ANR	1306403	ExpressionStatement	intern = emalloc ( sizeof ( spl_array_object ) )	175:1:5838:5880	1306370	5	True				
ANR	1306404	AssignmentExpression	intern = emalloc ( sizeof ( spl_array_object ) )		1306370	0		=			
ANR	1306405	Identifier	intern		1306370	0					
ANR	1306406	CallExpression	emalloc ( sizeof ( spl_array_object ) )		1306370	1					
ANR	1306407	Callee	emalloc		1306370	0					
ANR	1306408	Identifier	emalloc		1306370	0					
ANR	1306409	ArgumentList	sizeof ( spl_array_object )		1306370	1					
ANR	1306410	Argument	sizeof ( spl_array_object )		1306370	0					
ANR	1306411	SizeofExpression	sizeof ( spl_array_object )		1306370	0					
ANR	1306412	Sizeof	sizeof		1306370	0					
ANR	1306413	SizeofOperand	spl_array_object		1306370	1					
ANR	1306414	ExpressionStatement	"memset ( intern , 0 , sizeof ( spl_array_object ) )"	176:1:5883:5926	1306370	6	True				
ANR	1306415	CallExpression	"memset ( intern , 0 , sizeof ( spl_array_object ) )"		1306370	0					
ANR	1306416	Callee	memset		1306370	0					
ANR	1306417	Identifier	memset		1306370	0					
ANR	1306418	ArgumentList	intern		1306370	1					
ANR	1306419	Argument	intern		1306370	0					
ANR	1306420	Identifier	intern		1306370	0					
ANR	1306421	Argument	0		1306370	1					
ANR	1306422	PrimaryExpression	0		1306370	0					
ANR	1306423	Argument	sizeof ( spl_array_object )		1306370	2					
ANR	1306424	SizeofExpression	sizeof ( spl_array_object )		1306370	0					
ANR	1306425	Sizeof	sizeof		1306370	0					
ANR	1306426	SizeofOperand	spl_array_object		1306370	1					
ANR	1306427	ExpressionStatement	* obj = intern	177:1:5929:5942	1306370	7	True				
ANR	1306428	AssignmentExpression	* obj = intern		1306370	0		=			
ANR	1306429	UnaryOperationExpression	* obj		1306370	0					
ANR	1306430	UnaryOperator	*		1306370	0					
ANR	1306431	Identifier	obj		1306370	1					
ANR	1306432	Identifier	intern		1306370	1					
ANR	1306433	ExpressionStatement	ALLOC_INIT_ZVAL ( intern -> retval )	178:1:5945:5976	1306370	8	True				
ANR	1306434	CallExpression	ALLOC_INIT_ZVAL ( intern -> retval )		1306370	0					
ANR	1306435	Callee	ALLOC_INIT_ZVAL		1306370	0					
ANR	1306436	Identifier	ALLOC_INIT_ZVAL		1306370	0					
ANR	1306437	ArgumentList	intern -> retval		1306370	1					
ANR	1306438	Argument	intern -> retval		1306370	0					
ANR	1306439	PtrMemberAccess	intern -> retval		1306370	0					
ANR	1306440	Identifier	intern		1306370	0					
ANR	1306441	Identifier	retval		1306370	1					
ANR	1306442	Statement	zend_object_std_init	180:1:5980:5999	1306370	9	True				
ANR	1306443	Statement	(	180:21:6000:6000	1306370	10	True				
ANR	1306444	Statement	&	180:22:6001:6001	1306370	11	True				
ANR	1306445	Statement	intern	180:23:6002:6007	1306370	12	True				
ANR	1306446	Statement	->	180:29:6008:6009	1306370	13	True				
ANR	1306447	Statement	std	180:31:6010:6012	1306370	14	True				
ANR	1306448	Statement	","	180:34:6013:6013	1306370	15	True				
ANR	1306449	Statement	class_type	180:36:6015:6024	1306370	16	True				
ANR	1306450	Statement	TSRMLS_CC	180:47:6026:6034	1306370	17	True				
ANR	1306451	Statement	)	180:56:6035:6035	1306370	18	True				
ANR	1306452	ExpressionStatement		180:57:6036:6036	1306370	19	True				
ANR	1306453	ExpressionStatement	"object_properties_init ( & intern -> std , class_type )"	181:1:6039:6087	1306370	20	True				
ANR	1306454	CallExpression	"object_properties_init ( & intern -> std , class_type )"		1306370	0					
ANR	1306455	Callee	object_properties_init		1306370	0					
ANR	1306456	Identifier	object_properties_init		1306370	0					
ANR	1306457	ArgumentList	& intern -> std		1306370	1					
ANR	1306458	Argument	& intern -> std		1306370	0					
ANR	1306459	UnaryOperationExpression	& intern -> std		1306370	0					
ANR	1306460	UnaryOperator	&		1306370	0					
ANR	1306461	PtrMemberAccess	intern -> std		1306370	1					
ANR	1306462	Identifier	intern		1306370	0					
ANR	1306463	Identifier	std		1306370	1					
ANR	1306464	Argument	class_type		1306370	1					
ANR	1306465	Identifier	class_type		1306370	0					
ANR	1306466	ExpressionStatement	intern -> ar_flags = 0	183:1:6091:6111	1306370	21	True				
ANR	1306467	AssignmentExpression	intern -> ar_flags = 0		1306370	0		=			
ANR	1306468	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1306469	Identifier	intern		1306370	0					
ANR	1306470	Identifier	ar_flags		1306370	1					
ANR	1306471	PrimaryExpression	0		1306370	1					
ANR	1306472	ExpressionStatement	intern -> debug_info = NULL	184:1:6114:6145	1306370	22	True				
ANR	1306473	AssignmentExpression	intern -> debug_info = NULL		1306370	0		=			
ANR	1306474	PtrMemberAccess	intern -> debug_info		1306370	0					
ANR	1306475	Identifier	intern		1306370	0					
ANR	1306476	Identifier	debug_info		1306370	1					
ANR	1306477	Identifier	NULL		1306370	1					
ANR	1306478	ExpressionStatement	intern -> ce_get_iterator = spl_ce_ArrayIterator	185:1:6148:6194	1306370	23	True				
ANR	1306479	AssignmentExpression	intern -> ce_get_iterator = spl_ce_ArrayIterator		1306370	0		=			
ANR	1306480	PtrMemberAccess	intern -> ce_get_iterator		1306370	0					
ANR	1306481	Identifier	intern		1306370	0					
ANR	1306482	Identifier	ce_get_iterator		1306370	1					
ANR	1306483	Identifier	spl_ce_ArrayIterator		1306370	1					
ANR	1306484	IfStatement	if ( orig )		1306370	24					
ANR	1306485	Condition	orig	186:5:6201:6204	1306370	0	True				
ANR	1306486	Identifier	orig		1306370	0					
ANR	1306487	CompoundStatement		19:11:505:505	1306370	1					
ANR	1306488	Statement	spl_array_object	187:2:6211:6226	1306370	0	True				
ANR	1306489	Statement	*	187:19:6228:6228	1306370	1	True				
ANR	1306490	Statement	other	187:20:6229:6233	1306370	2	True				
ANR	1306491	Statement	=	187:26:6235:6235	1306370	3	True				
ANR	1306492	Statement	(	187:28:6237:6237	1306370	4	True				
ANR	1306493	Statement	spl_array_object	187:29:6238:6253	1306370	5	True				
ANR	1306494	Statement	*	187:45:6254:6254	1306370	6	True				
ANR	1306495	Statement	)	187:46:6255:6255	1306370	7	True				
ANR	1306496	Statement	zend_object_store_get_object	187:47:6256:6283	1306370	8	True				
ANR	1306497	Statement	(	187:75:6284:6284	1306370	9	True				
ANR	1306498	Statement	orig	187:76:6285:6288	1306370	10	True				
ANR	1306499	Statement	TSRMLS_CC	187:81:6290:6298	1306370	11	True				
ANR	1306500	Statement	)	187:90:6299:6299	1306370	12	True				
ANR	1306501	ExpressionStatement		187:91:6300:6300	1306370	13	True				
ANR	1306502	ExpressionStatement	intern -> ar_flags &= ~ SPL_ARRAY_CLONE_MASK	189:2:6305:6347	1306370	14	True				
ANR	1306503	AssignmentExpression	intern -> ar_flags &= ~ SPL_ARRAY_CLONE_MASK		1306370	0		&=			
ANR	1306504	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1306505	Identifier	intern		1306370	0					
ANR	1306506	Identifier	ar_flags		1306370	1					
ANR	1306507	UnaryOperationExpression	~ SPL_ARRAY_CLONE_MASK		1306370	1					
ANR	1306508	UnaryOperator	~		1306370	0					
ANR	1306509	Identifier	SPL_ARRAY_CLONE_MASK		1306370	1					
ANR	1306510	ExpressionStatement	intern -> ar_flags |= ( other -> ar_flags & SPL_ARRAY_CLONE_MASK )	190:2:6351:6411	1306370	15	True				
ANR	1306511	AssignmentExpression	intern -> ar_flags |= ( other -> ar_flags & SPL_ARRAY_CLONE_MASK )		1306370	0		|=			
ANR	1306512	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1306513	Identifier	intern		1306370	0					
ANR	1306514	Identifier	ar_flags		1306370	1					
ANR	1306515	BitAndExpression	other -> ar_flags & SPL_ARRAY_CLONE_MASK		1306370	1		&			
ANR	1306516	PtrMemberAccess	other -> ar_flags		1306370	0					
ANR	1306517	Identifier	other		1306370	0					
ANR	1306518	Identifier	ar_flags		1306370	1					
ANR	1306519	Identifier	SPL_ARRAY_CLONE_MASK		1306370	1					
ANR	1306520	ExpressionStatement	intern -> ce_get_iterator = other -> ce_get_iterator	191:2:6415:6463	1306370	16	True				
ANR	1306521	AssignmentExpression	intern -> ce_get_iterator = other -> ce_get_iterator		1306370	0		=			
ANR	1306522	PtrMemberAccess	intern -> ce_get_iterator		1306370	0					
ANR	1306523	Identifier	intern		1306370	0					
ANR	1306524	Identifier	ce_get_iterator		1306370	1					
ANR	1306525	PtrMemberAccess	other -> ce_get_iterator		1306370	1					
ANR	1306526	Identifier	other		1306370	0					
ANR	1306527	Identifier	ce_get_iterator		1306370	1					
ANR	1306528	IfStatement	if ( clone_orig )		1306370	17					
ANR	1306529	Condition	clone_orig	192:6:6471:6480	1306370	0	True				
ANR	1306530	Identifier	clone_orig		1306370	0					
ANR	1306531	CompoundStatement		25:18:781:781	1306370	1					
ANR	1306532	ExpressionStatement	intern -> array = other -> array	193:3:6488:6516	1306370	0	True				
ANR	1306533	AssignmentExpression	intern -> array = other -> array		1306370	0		=			
ANR	1306534	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306535	Identifier	intern		1306370	0					
ANR	1306536	Identifier	array		1306370	1					
ANR	1306537	PtrMemberAccess	other -> array		1306370	1					
ANR	1306538	Identifier	other		1306370	0					
ANR	1306539	Identifier	array		1306370	1					
ANR	1306540	IfStatement	if ( Z_OBJ_HT_P ( orig ) == & spl_handler_ArrayObject )		1306370	1					
ANR	1306541	Condition	Z_OBJ_HT_P ( orig ) == & spl_handler_ArrayObject	194:7:6525:6568	1306370	0	True				
ANR	1306542	EqualityExpression	Z_OBJ_HT_P ( orig ) == & spl_handler_ArrayObject		1306370	0		==			
ANR	1306543	CallExpression	Z_OBJ_HT_P ( orig )		1306370	0					
ANR	1306544	Callee	Z_OBJ_HT_P		1306370	0					
ANR	1306545	Identifier	Z_OBJ_HT_P		1306370	0					
ANR	1306546	ArgumentList	orig		1306370	1					
ANR	1306547	Argument	orig		1306370	0					
ANR	1306548	Identifier	orig		1306370	0					
ANR	1306549	UnaryOperationExpression	& spl_handler_ArrayObject		1306370	1					
ANR	1306550	UnaryOperator	&		1306370	0					
ANR	1306551	Identifier	spl_handler_ArrayObject		1306370	1					
ANR	1306552	CompoundStatement		27:53:869:869	1306370	1					
ANR	1306553	ExpressionStatement	MAKE_STD_ZVAL ( intern -> array )	195:4:6577:6605	1306370	0	True				
ANR	1306554	CallExpression	MAKE_STD_ZVAL ( intern -> array )		1306370	0					
ANR	1306555	Callee	MAKE_STD_ZVAL		1306370	0					
ANR	1306556	Identifier	MAKE_STD_ZVAL		1306370	0					
ANR	1306557	ArgumentList	intern -> array		1306370	1					
ANR	1306558	Argument	intern -> array		1306370	0					
ANR	1306559	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306560	Identifier	intern		1306370	0					
ANR	1306561	Identifier	array		1306370	1					
ANR	1306562	ExpressionStatement	array_init ( intern -> array )	196:4:6611:6636	1306370	1	True				
ANR	1306563	CallExpression	array_init ( intern -> array )		1306370	0					
ANR	1306564	Callee	array_init		1306370	0					
ANR	1306565	Identifier	array_init		1306370	0					
ANR	1306566	ArgumentList	intern -> array		1306370	1					
ANR	1306567	Argument	intern -> array		1306370	0					
ANR	1306568	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306569	Identifier	intern		1306370	0					
ANR	1306570	Identifier	array		1306370	1					
ANR	1306571	ExpressionStatement	"zend_hash_copy ( HASH_OF ( intern -> array ) , HASH_OF ( other -> array ) , ( copy_ctor_func_t ) zval_add_ref , & tmp , sizeof ( zval * ) )"	197:4:6642:6757	1306370	2	True				
ANR	1306572	CallExpression	"zend_hash_copy ( HASH_OF ( intern -> array ) , HASH_OF ( other -> array ) , ( copy_ctor_func_t ) zval_add_ref , & tmp , sizeof ( zval * ) )"		1306370	0					
ANR	1306573	Callee	zend_hash_copy		1306370	0					
ANR	1306574	Identifier	zend_hash_copy		1306370	0					
ANR	1306575	ArgumentList	HASH_OF ( intern -> array )		1306370	1					
ANR	1306576	Argument	HASH_OF ( intern -> array )		1306370	0					
ANR	1306577	CallExpression	HASH_OF ( intern -> array )		1306370	0					
ANR	1306578	Callee	HASH_OF		1306370	0					
ANR	1306579	Identifier	HASH_OF		1306370	0					
ANR	1306580	ArgumentList	intern -> array		1306370	1					
ANR	1306581	Argument	intern -> array		1306370	0					
ANR	1306582	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306583	Identifier	intern		1306370	0					
ANR	1306584	Identifier	array		1306370	1					
ANR	1306585	Argument	HASH_OF ( other -> array )		1306370	1					
ANR	1306586	CallExpression	HASH_OF ( other -> array )		1306370	0					
ANR	1306587	Callee	HASH_OF		1306370	0					
ANR	1306588	Identifier	HASH_OF		1306370	0					
ANR	1306589	ArgumentList	other -> array		1306370	1					
ANR	1306590	Argument	other -> array		1306370	0					
ANR	1306591	PtrMemberAccess	other -> array		1306370	0					
ANR	1306592	Identifier	other		1306370	0					
ANR	1306593	Identifier	array		1306370	1					
ANR	1306594	Argument	( copy_ctor_func_t ) zval_add_ref		1306370	2					
ANR	1306595	CastExpression	( copy_ctor_func_t ) zval_add_ref		1306370	0					
ANR	1306596	CastTarget	copy_ctor_func_t		1306370	0					
ANR	1306597	Identifier	zval_add_ref		1306370	1					
ANR	1306598	Argument	& tmp		1306370	3					
ANR	1306599	UnaryOperationExpression	& tmp		1306370	0					
ANR	1306600	UnaryOperator	&		1306370	0					
ANR	1306601	Identifier	tmp		1306370	1					
ANR	1306602	Argument	sizeof ( zval * )		1306370	4					
ANR	1306603	SizeofExpression	sizeof ( zval * )		1306370	0					
ANR	1306604	Sizeof	sizeof		1306370	0					
ANR	1306605	SizeofOperand	zval *		1306370	1					
ANR	1306606	IfStatement	if ( Z_OBJ_HT_P ( orig ) == & spl_handler_ArrayIterator )		1306370	2					
ANR	1306607	Condition	Z_OBJ_HT_P ( orig ) == & spl_handler_ArrayIterator	199:7:6771:6816	1306370	0	True				
ANR	1306608	EqualityExpression	Z_OBJ_HT_P ( orig ) == & spl_handler_ArrayIterator		1306370	0		==			
ANR	1306609	CallExpression	Z_OBJ_HT_P ( orig )		1306370	0					
ANR	1306610	Callee	Z_OBJ_HT_P		1306370	0					
ANR	1306611	Identifier	Z_OBJ_HT_P		1306370	0					
ANR	1306612	ArgumentList	orig		1306370	1					
ANR	1306613	Argument	orig		1306370	0					
ANR	1306614	Identifier	orig		1306370	0					
ANR	1306615	UnaryOperationExpression	& spl_handler_ArrayIterator		1306370	1					
ANR	1306616	UnaryOperator	&		1306370	0					
ANR	1306617	Identifier	spl_handler_ArrayIterator		1306370	1					
ANR	1306618	CompoundStatement		32:55:1117:1117	1306370	1					
ANR	1306619	ExpressionStatement	Z_ADDREF_P ( other -> array )	200:4:6825:6849	1306370	0	True				
ANR	1306620	CallExpression	Z_ADDREF_P ( other -> array )		1306370	0					
ANR	1306621	Callee	Z_ADDREF_P		1306370	0					
ANR	1306622	Identifier	Z_ADDREF_P		1306370	0					
ANR	1306623	ArgumentList	other -> array		1306370	1					
ANR	1306624	Argument	other -> array		1306370	0					
ANR	1306625	PtrMemberAccess	other -> array		1306370	0					
ANR	1306626	Identifier	other		1306370	0					
ANR	1306627	Identifier	array		1306370	1					
ANR	1306628	ElseStatement	else		1306370	0					
ANR	1306629	CompoundStatement		35:9:1163:1163	1306370	0					
ANR	1306630	ExpressionStatement	intern -> array = orig	203:3:6870:6890	1306370	0	True				
ANR	1306631	AssignmentExpression	intern -> array = orig		1306370	0		=			
ANR	1306632	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306633	Identifier	intern		1306370	0					
ANR	1306634	Identifier	array		1306370	1					
ANR	1306635	Identifier	orig		1306370	1					
ANR	1306636	ExpressionStatement	Z_ADDREF_P ( intern -> array )	204:3:6895:6920	1306370	1	True				
ANR	1306637	CallExpression	Z_ADDREF_P ( intern -> array )		1306370	0					
ANR	1306638	Callee	Z_ADDREF_P		1306370	0					
ANR	1306639	Identifier	Z_ADDREF_P		1306370	0					
ANR	1306640	ArgumentList	intern -> array		1306370	1					
ANR	1306641	Argument	intern -> array		1306370	0					
ANR	1306642	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306643	Identifier	intern		1306370	0					
ANR	1306644	Identifier	array		1306370	1					
ANR	1306645	ExpressionStatement	intern -> ar_flags |= SPL_ARRAY_IS_REF | SPL_ARRAY_USE_OTHER	205:3:6925:6983	1306370	2	True				
ANR	1306646	AssignmentExpression	intern -> ar_flags |= SPL_ARRAY_IS_REF | SPL_ARRAY_USE_OTHER		1306370	0		|=			
ANR	1306647	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1306648	Identifier	intern		1306370	0					
ANR	1306649	Identifier	ar_flags		1306370	1					
ANR	1306650	InclusiveOrExpression	SPL_ARRAY_IS_REF | SPL_ARRAY_USE_OTHER		1306370	1		|			
ANR	1306651	Identifier	SPL_ARRAY_IS_REF		1306370	0					
ANR	1306652	Identifier	SPL_ARRAY_USE_OTHER		1306370	1					
ANR	1306653	ElseStatement	else		1306370	0					
ANR	1306654	CompoundStatement		40:8:1295:1295	1306370	0					
ANR	1306655	ExpressionStatement	MAKE_STD_ZVAL ( intern -> array )	208:2:7001:7029	1306370	0	True				
ANR	1306656	CallExpression	MAKE_STD_ZVAL ( intern -> array )		1306370	0					
ANR	1306657	Callee	MAKE_STD_ZVAL		1306370	0					
ANR	1306658	Identifier	MAKE_STD_ZVAL		1306370	0					
ANR	1306659	ArgumentList	intern -> array		1306370	1					
ANR	1306660	Argument	intern -> array		1306370	0					
ANR	1306661	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306662	Identifier	intern		1306370	0					
ANR	1306663	Identifier	array		1306370	1					
ANR	1306664	ExpressionStatement	array_init ( intern -> array )	209:2:7033:7058	1306370	1	True				
ANR	1306665	CallExpression	array_init ( intern -> array )		1306370	0					
ANR	1306666	Callee	array_init		1306370	0					
ANR	1306667	Identifier	array_init		1306370	0					
ANR	1306668	ArgumentList	intern -> array		1306370	1					
ANR	1306669	Argument	intern -> array		1306370	0					
ANR	1306670	PtrMemberAccess	intern -> array		1306370	0					
ANR	1306671	Identifier	intern		1306370	0					
ANR	1306672	Identifier	array		1306370	1					
ANR	1306673	ExpressionStatement	intern -> ar_flags &= ~SPL_ARRAY_IS_REF	210:2:7062:7099	1306370	2	True				
ANR	1306674	AssignmentExpression	intern -> ar_flags &= ~SPL_ARRAY_IS_REF		1306370	0		&=			
ANR	1306675	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1306676	Identifier	intern		1306370	0					
ANR	1306677	Identifier	ar_flags		1306370	1					
ANR	1306678	Identifier	~SPL_ARRAY_IS_REF		1306370	1					
ANR	1306679	Statement	retval	213:1:7106:7111	1306370	25	True				
ANR	1306680	Statement	.	213:7:7112:7112	1306370	26	True				
ANR	1306681	Statement	handle	213:8:7113:7118	1306370	27	True				
ANR	1306682	Statement	=	213:15:7120:7120	1306370	28	True				
ANR	1306683	Statement	zend_objects_store_put	213:17:7122:7143	1306370	29	True				
ANR	1306684	Statement	(	213:39:7144:7144	1306370	30	True				
ANR	1306685	Statement	intern	213:40:7145:7150	1306370	31	True				
ANR	1306686	Statement	","	213:46:7151:7151	1306370	32	True				
ANR	1306687	Statement	(	213:48:7153:7153	1306370	33	True				
ANR	1306688	Statement	zend_objects_store_dtor_t	213:49:7154:7178	1306370	34	True				
ANR	1306689	Statement	)	213:74:7179:7179	1306370	35	True				
ANR	1306690	Statement	zend_objects_destroy_object	213:75:7180:7206	1306370	36	True				
ANR	1306691	Statement	","	213:102:7207:7207	1306370	37	True				
ANR	1306692	Statement	(	213:104:7209:7209	1306370	38	True				
ANR	1306693	Statement	zend_objects_free_object_storage_t	213:105:7210:7243	1306370	39	True				
ANR	1306694	Statement	)	213:139:7244:7244	1306370	40	True				
ANR	1306695	Statement	spl_array_object_free_storage	213:141:7246:7274	1306370	41	True				
ANR	1306696	Statement	","	213:170:7275:7275	1306370	42	True				
ANR	1306697	Statement	NULL	213:172:7277:7280	1306370	43	True				
ANR	1306698	Statement	TSRMLS_CC	213:177:7282:7290	1306370	44	True				
ANR	1306699	Statement	)	213:186:7291:7291	1306370	45	True				
ANR	1306700	ExpressionStatement		213:187:7292:7292	1306370	46	True				
ANR	1306701	WhileStatement	while ( parent )		1306370	47					
ANR	1306702	Condition	parent	214:8:7302:7307	1306370	0	True				
ANR	1306703	Identifier	parent		1306370	0					
ANR	1306704	CompoundStatement		47:16:1608:1608	1306370	1					
ANR	1306705	IfStatement	if ( parent == spl_ce_ArrayIterator || parent == spl_ce_RecursiveArrayIterator )		1306370	0					
ANR	1306706	Condition	parent == spl_ce_ArrayIterator || parent == spl_ce_RecursiveArrayIterator	215:6:7318:7390	1306370	0	True				
ANR	1306707	OrExpression	parent == spl_ce_ArrayIterator || parent == spl_ce_RecursiveArrayIterator		1306370	0		||			
ANR	1306708	EqualityExpression	parent == spl_ce_ArrayIterator		1306370	0		==			
ANR	1306709	Identifier	parent		1306370	0					
ANR	1306710	Identifier	spl_ce_ArrayIterator		1306370	1					
ANR	1306711	EqualityExpression	parent == spl_ce_RecursiveArrayIterator		1306370	1		==			
ANR	1306712	Identifier	parent		1306370	0					
ANR	1306713	Identifier	spl_ce_RecursiveArrayIterator		1306370	1					
ANR	1306714	CompoundStatement		48:81:1691:1691	1306370	1					
ANR	1306715	ExpressionStatement	retval . handlers = & spl_handler_ArrayIterator	216:3:7398:7442	1306370	0	True				
ANR	1306716	AssignmentExpression	retval . handlers = & spl_handler_ArrayIterator		1306370	0		=			
ANR	1306717	MemberAccess	retval . handlers		1306370	0					
ANR	1306718	Identifier	retval		1306370	0					
ANR	1306719	Identifier	handlers		1306370	1					
ANR	1306720	UnaryOperationExpression	& spl_handler_ArrayIterator		1306370	1					
ANR	1306721	UnaryOperator	&		1306370	0					
ANR	1306722	Identifier	spl_handler_ArrayIterator		1306370	1					
ANR	1306723	ExpressionStatement	class_type -> get_iterator = spl_array_get_iterator	217:3:7447:7496	1306370	1	True				
ANR	1306724	AssignmentExpression	class_type -> get_iterator = spl_array_get_iterator		1306370	0		=			
ANR	1306725	PtrMemberAccess	class_type -> get_iterator		1306370	0					
ANR	1306726	Identifier	class_type		1306370	0					
ANR	1306727	Identifier	get_iterator		1306370	1					
ANR	1306728	Identifier	spl_array_get_iterator		1306370	1					
ANR	1306729	BreakStatement	break ;	218:3:7501:7506	1306370	2	True				
ANR	1306730	ElseStatement	else		1306370	0					
ANR	1306731	IfStatement	if ( parent == spl_ce_ArrayObject )		1306370	0					
ANR	1306732	Condition	parent == spl_ce_ArrayObject	219:13:7521:7548	1306370	0	True				
ANR	1306733	EqualityExpression	parent == spl_ce_ArrayObject		1306370	0		==			
ANR	1306734	Identifier	parent		1306370	0					
ANR	1306735	Identifier	spl_ce_ArrayObject		1306370	1					
ANR	1306736	CompoundStatement		52:43:1849:1849	1306370	1					
ANR	1306737	ExpressionStatement	retval . handlers = & spl_handler_ArrayObject	220:3:7556:7598	1306370	0	True				
ANR	1306738	AssignmentExpression	retval . handlers = & spl_handler_ArrayObject		1306370	0		=			
ANR	1306739	MemberAccess	retval . handlers		1306370	0					
ANR	1306740	Identifier	retval		1306370	0					
ANR	1306741	Identifier	handlers		1306370	1					
ANR	1306742	UnaryOperationExpression	& spl_handler_ArrayObject		1306370	1					
ANR	1306743	UnaryOperator	&		1306370	0					
ANR	1306744	Identifier	spl_handler_ArrayObject		1306370	1					
ANR	1306745	BreakStatement	break ;	221:3:7603:7608	1306370	1	True				
ANR	1306746	ExpressionStatement	parent = parent -> parent	223:2:7616:7639	1306370	1	True				
ANR	1306747	AssignmentExpression	parent = parent -> parent		1306370	0		=			
ANR	1306748	Identifier	parent		1306370	0					
ANR	1306749	PtrMemberAccess	parent -> parent		1306370	1					
ANR	1306750	Identifier	parent		1306370	0					
ANR	1306751	Identifier	parent		1306370	1					
ANR	1306752	ExpressionStatement	inherited = 1	224:2:7643:7656	1306370	2	True				
ANR	1306753	AssignmentExpression	inherited = 1		1306370	0		=			
ANR	1306754	Identifier	inherited		1306370	0					
ANR	1306755	PrimaryExpression	1		1306370	1					
ANR	1306756	IfStatement	if ( ! parent )		1306370	48					
ANR	1306757	Condition	! parent	226:5:7666:7672	1306370	0	True				
ANR	1306758	UnaryOperationExpression	! parent		1306370	0					
ANR	1306759	UnaryOperator	!		1306370	0					
ANR	1306760	Identifier	parent		1306370	1					
ANR	1306761	CompoundStatement		59:14:1973:1973	1306370	1					
ANR	1306762	Statement	php_error_docref	227:2:7708:7723	1306370	0	True				
ANR	1306763	Statement	(	227:18:7724:7724	1306370	1	True				
ANR	1306764	Statement	NULL	227:19:7725:7728	1306370	2	True				
ANR	1306765	Statement	TSRMLS_CC	227:24:7730:7738	1306370	3	True				
ANR	1306766	Statement	","	227:33:7739:7739	1306370	4	True				
ANR	1306767	Statement	E_COMPILE_ERROR	227:35:7741:7755	1306370	5	True				
ANR	1306768	Statement	","	227:50:7756:7756	1306370	6	True				
ANR	1306769	Statement	"""Internal compiler error, Class is not child of ArrayObject or ArrayIterator"""	227:52:7758:7834	1306370	7	True				
ANR	1306770	Statement	)	227:129:7835:7835	1306370	8	True				
ANR	1306771	ExpressionStatement		227:130:7836:7836	1306370	9	True				
ANR	1306772	IfStatement	if ( inherited )		1306370	49					
ANR	1306773	Condition	inherited	229:5:7846:7854	1306370	0	True				
ANR	1306774	Identifier	inherited		1306370	0					
ANR	1306775	CompoundStatement		62:16:2155:2155	1306370	1					
ANR	1306776	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetget"" , sizeof ( ""offsetget"" ) , ( void * * ) & intern -> fptr_offset_get )"	230:2:7861:7980	1306370	0	True				
ANR	1306777	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetget"" , sizeof ( ""offsetget"" ) , ( void * * ) & intern -> fptr_offset_get )"		1306370	0					
ANR	1306778	Callee	zend_hash_find		1306370	0					
ANR	1306779	Identifier	zend_hash_find		1306370	0					
ANR	1306780	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1306781	Argument	& class_type -> function_table		1306370	0					
ANR	1306782	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1306783	UnaryOperator	&		1306370	0					
ANR	1306784	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1306785	Identifier	class_type		1306370	0					
ANR	1306786	Identifier	function_table		1306370	1					
ANR	1306787	Argument	"""offsetget"""		1306370	1					
ANR	1306788	PrimaryExpression	"""offsetget"""		1306370	0					
ANR	1306789	Argument	"sizeof ( ""offsetget"" )"		1306370	2					
ANR	1306790	SizeofExpression	"sizeof ( ""offsetget"" )"		1306370	0					
ANR	1306791	Sizeof	sizeof		1306370	0					
ANR	1306792	PrimaryExpression	"""offsetget"""		1306370	1					
ANR	1306793	Argument	( void * * ) & intern -> fptr_offset_get		1306370	3					
ANR	1306794	CastExpression	( void * * ) & intern -> fptr_offset_get		1306370	0					
ANR	1306795	CastTarget	void * *		1306370	0					
ANR	1306796	UnaryOperationExpression	& intern -> fptr_offset_get		1306370	1					
ANR	1306797	UnaryOperator	&		1306370	0					
ANR	1306798	PtrMemberAccess	intern -> fptr_offset_get		1306370	1					
ANR	1306799	Identifier	intern		1306370	0					
ANR	1306800	Identifier	fptr_offset_get		1306370	1					
ANR	1306801	IfStatement	if ( intern -> fptr_offset_get -> common . scope == parent )		1306370	1					
ANR	1306802	Condition	intern -> fptr_offset_get -> common . scope == parent	231:6:7988:8034	1306370	0	True				
ANR	1306803	EqualityExpression	intern -> fptr_offset_get -> common . scope == parent		1306370	0		==			
ANR	1306804	MemberAccess	intern -> fptr_offset_get -> common . scope		1306370	0					
ANR	1306805	PtrMemberAccess	intern -> fptr_offset_get -> common		1306370	0					
ANR	1306806	PtrMemberAccess	intern -> fptr_offset_get		1306370	0					
ANR	1306807	Identifier	intern		1306370	0					
ANR	1306808	Identifier	fptr_offset_get		1306370	1					
ANR	1306809	Identifier	common		1306370	1					
ANR	1306810	Identifier	scope		1306370	1					
ANR	1306811	Identifier	parent		1306370	1					
ANR	1306812	CompoundStatement		64:55:2335:2335	1306370	1					
ANR	1306813	ExpressionStatement	intern -> fptr_offset_get = NULL	232:3:8042:8072	1306370	0	True				
ANR	1306814	AssignmentExpression	intern -> fptr_offset_get = NULL		1306370	0		=			
ANR	1306815	PtrMemberAccess	intern -> fptr_offset_get		1306370	0					
ANR	1306816	Identifier	intern		1306370	0					
ANR	1306817	Identifier	fptr_offset_get		1306370	1					
ANR	1306818	Identifier	NULL		1306370	1					
ANR	1306819	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetset"" , sizeof ( ""offsetset"" ) , ( void * * ) & intern -> fptr_offset_set )"	234:2:8080:8199	1306370	2	True				
ANR	1306820	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetset"" , sizeof ( ""offsetset"" ) , ( void * * ) & intern -> fptr_offset_set )"		1306370	0					
ANR	1306821	Callee	zend_hash_find		1306370	0					
ANR	1306822	Identifier	zend_hash_find		1306370	0					
ANR	1306823	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1306824	Argument	& class_type -> function_table		1306370	0					
ANR	1306825	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1306826	UnaryOperator	&		1306370	0					
ANR	1306827	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1306828	Identifier	class_type		1306370	0					
ANR	1306829	Identifier	function_table		1306370	1					
ANR	1306830	Argument	"""offsetset"""		1306370	1					
ANR	1306831	PrimaryExpression	"""offsetset"""		1306370	0					
ANR	1306832	Argument	"sizeof ( ""offsetset"" )"		1306370	2					
ANR	1306833	SizeofExpression	"sizeof ( ""offsetset"" )"		1306370	0					
ANR	1306834	Sizeof	sizeof		1306370	0					
ANR	1306835	PrimaryExpression	"""offsetset"""		1306370	1					
ANR	1306836	Argument	( void * * ) & intern -> fptr_offset_set		1306370	3					
ANR	1306837	CastExpression	( void * * ) & intern -> fptr_offset_set		1306370	0					
ANR	1306838	CastTarget	void * *		1306370	0					
ANR	1306839	UnaryOperationExpression	& intern -> fptr_offset_set		1306370	1					
ANR	1306840	UnaryOperator	&		1306370	0					
ANR	1306841	PtrMemberAccess	intern -> fptr_offset_set		1306370	1					
ANR	1306842	Identifier	intern		1306370	0					
ANR	1306843	Identifier	fptr_offset_set		1306370	1					
ANR	1306844	IfStatement	if ( intern -> fptr_offset_set -> common . scope == parent )		1306370	3					
ANR	1306845	Condition	intern -> fptr_offset_set -> common . scope == parent	235:6:8207:8253	1306370	0	True				
ANR	1306846	EqualityExpression	intern -> fptr_offset_set -> common . scope == parent		1306370	0		==			
ANR	1306847	MemberAccess	intern -> fptr_offset_set -> common . scope		1306370	0					
ANR	1306848	PtrMemberAccess	intern -> fptr_offset_set -> common		1306370	0					
ANR	1306849	PtrMemberAccess	intern -> fptr_offset_set		1306370	0					
ANR	1306850	Identifier	intern		1306370	0					
ANR	1306851	Identifier	fptr_offset_set		1306370	1					
ANR	1306852	Identifier	common		1306370	1					
ANR	1306853	Identifier	scope		1306370	1					
ANR	1306854	Identifier	parent		1306370	1					
ANR	1306855	CompoundStatement		68:55:2554:2554	1306370	1					
ANR	1306856	ExpressionStatement	intern -> fptr_offset_set = NULL	236:3:8261:8291	1306370	0	True				
ANR	1306857	AssignmentExpression	intern -> fptr_offset_set = NULL		1306370	0		=			
ANR	1306858	PtrMemberAccess	intern -> fptr_offset_set		1306370	0					
ANR	1306859	Identifier	intern		1306370	0					
ANR	1306860	Identifier	fptr_offset_set		1306370	1					
ANR	1306861	Identifier	NULL		1306370	1					
ANR	1306862	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetexists"" , sizeof ( ""offsetexists"" ) , ( void * * ) & intern -> fptr_offset_has )"	238:2:8299:8418	1306370	4	True				
ANR	1306863	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetexists"" , sizeof ( ""offsetexists"" ) , ( void * * ) & intern -> fptr_offset_has )"		1306370	0					
ANR	1306864	Callee	zend_hash_find		1306370	0					
ANR	1306865	Identifier	zend_hash_find		1306370	0					
ANR	1306866	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1306867	Argument	& class_type -> function_table		1306370	0					
ANR	1306868	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1306869	UnaryOperator	&		1306370	0					
ANR	1306870	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1306871	Identifier	class_type		1306370	0					
ANR	1306872	Identifier	function_table		1306370	1					
ANR	1306873	Argument	"""offsetexists"""		1306370	1					
ANR	1306874	PrimaryExpression	"""offsetexists"""		1306370	0					
ANR	1306875	Argument	"sizeof ( ""offsetexists"" )"		1306370	2					
ANR	1306876	SizeofExpression	"sizeof ( ""offsetexists"" )"		1306370	0					
ANR	1306877	Sizeof	sizeof		1306370	0					
ANR	1306878	PrimaryExpression	"""offsetexists"""		1306370	1					
ANR	1306879	Argument	( void * * ) & intern -> fptr_offset_has		1306370	3					
ANR	1306880	CastExpression	( void * * ) & intern -> fptr_offset_has		1306370	0					
ANR	1306881	CastTarget	void * *		1306370	0					
ANR	1306882	UnaryOperationExpression	& intern -> fptr_offset_has		1306370	1					
ANR	1306883	UnaryOperator	&		1306370	0					
ANR	1306884	PtrMemberAccess	intern -> fptr_offset_has		1306370	1					
ANR	1306885	Identifier	intern		1306370	0					
ANR	1306886	Identifier	fptr_offset_has		1306370	1					
ANR	1306887	IfStatement	if ( intern -> fptr_offset_has -> common . scope == parent )		1306370	5					
ANR	1306888	Condition	intern -> fptr_offset_has -> common . scope == parent	239:6:8426:8472	1306370	0	True				
ANR	1306889	EqualityExpression	intern -> fptr_offset_has -> common . scope == parent		1306370	0		==			
ANR	1306890	MemberAccess	intern -> fptr_offset_has -> common . scope		1306370	0					
ANR	1306891	PtrMemberAccess	intern -> fptr_offset_has -> common		1306370	0					
ANR	1306892	PtrMemberAccess	intern -> fptr_offset_has		1306370	0					
ANR	1306893	Identifier	intern		1306370	0					
ANR	1306894	Identifier	fptr_offset_has		1306370	1					
ANR	1306895	Identifier	common		1306370	1					
ANR	1306896	Identifier	scope		1306370	1					
ANR	1306897	Identifier	parent		1306370	1					
ANR	1306898	CompoundStatement		72:55:2773:2773	1306370	1					
ANR	1306899	ExpressionStatement	intern -> fptr_offset_has = NULL	240:3:8480:8510	1306370	0	True				
ANR	1306900	AssignmentExpression	intern -> fptr_offset_has = NULL		1306370	0		=			
ANR	1306901	PtrMemberAccess	intern -> fptr_offset_has		1306370	0					
ANR	1306902	Identifier	intern		1306370	0					
ANR	1306903	Identifier	fptr_offset_has		1306370	1					
ANR	1306904	Identifier	NULL		1306370	1					
ANR	1306905	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetunset"" , sizeof ( ""offsetunset"" ) , ( void * * ) & intern -> fptr_offset_del )"	242:2:8518:8637	1306370	6	True				
ANR	1306906	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetunset"" , sizeof ( ""offsetunset"" ) , ( void * * ) & intern -> fptr_offset_del )"		1306370	0					
ANR	1306907	Callee	zend_hash_find		1306370	0					
ANR	1306908	Identifier	zend_hash_find		1306370	0					
ANR	1306909	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1306910	Argument	& class_type -> function_table		1306370	0					
ANR	1306911	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1306912	UnaryOperator	&		1306370	0					
ANR	1306913	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1306914	Identifier	class_type		1306370	0					
ANR	1306915	Identifier	function_table		1306370	1					
ANR	1306916	Argument	"""offsetunset"""		1306370	1					
ANR	1306917	PrimaryExpression	"""offsetunset"""		1306370	0					
ANR	1306918	Argument	"sizeof ( ""offsetunset"" )"		1306370	2					
ANR	1306919	SizeofExpression	"sizeof ( ""offsetunset"" )"		1306370	0					
ANR	1306920	Sizeof	sizeof		1306370	0					
ANR	1306921	PrimaryExpression	"""offsetunset"""		1306370	1					
ANR	1306922	Argument	( void * * ) & intern -> fptr_offset_del		1306370	3					
ANR	1306923	CastExpression	( void * * ) & intern -> fptr_offset_del		1306370	0					
ANR	1306924	CastTarget	void * *		1306370	0					
ANR	1306925	UnaryOperationExpression	& intern -> fptr_offset_del		1306370	1					
ANR	1306926	UnaryOperator	&		1306370	0					
ANR	1306927	PtrMemberAccess	intern -> fptr_offset_del		1306370	1					
ANR	1306928	Identifier	intern		1306370	0					
ANR	1306929	Identifier	fptr_offset_del		1306370	1					
ANR	1306930	IfStatement	if ( intern -> fptr_offset_del -> common . scope == parent )		1306370	7					
ANR	1306931	Condition	intern -> fptr_offset_del -> common . scope == parent	243:6:8645:8691	1306370	0	True				
ANR	1306932	EqualityExpression	intern -> fptr_offset_del -> common . scope == parent		1306370	0		==			
ANR	1306933	MemberAccess	intern -> fptr_offset_del -> common . scope		1306370	0					
ANR	1306934	PtrMemberAccess	intern -> fptr_offset_del -> common		1306370	0					
ANR	1306935	PtrMemberAccess	intern -> fptr_offset_del		1306370	0					
ANR	1306936	Identifier	intern		1306370	0					
ANR	1306937	Identifier	fptr_offset_del		1306370	1					
ANR	1306938	Identifier	common		1306370	1					
ANR	1306939	Identifier	scope		1306370	1					
ANR	1306940	Identifier	parent		1306370	1					
ANR	1306941	CompoundStatement		76:55:2992:2992	1306370	1					
ANR	1306942	ExpressionStatement	intern -> fptr_offset_del = NULL	244:3:8699:8729	1306370	0	True				
ANR	1306943	AssignmentExpression	intern -> fptr_offset_del = NULL		1306370	0		=			
ANR	1306944	PtrMemberAccess	intern -> fptr_offset_del		1306370	0					
ANR	1306945	Identifier	intern		1306370	0					
ANR	1306946	Identifier	fptr_offset_del		1306370	1					
ANR	1306947	Identifier	NULL		1306370	1					
ANR	1306948	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) , ( void * * ) & intern -> fptr_count )"	246:2:8737:8851	1306370	8	True				
ANR	1306949	CallExpression	"zend_hash_find ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) , ( void * * ) & intern -> fptr_count )"		1306370	0					
ANR	1306950	Callee	zend_hash_find		1306370	0					
ANR	1306951	Identifier	zend_hash_find		1306370	0					
ANR	1306952	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1306953	Argument	& class_type -> function_table		1306370	0					
ANR	1306954	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1306955	UnaryOperator	&		1306370	0					
ANR	1306956	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1306957	Identifier	class_type		1306370	0					
ANR	1306958	Identifier	function_table		1306370	1					
ANR	1306959	Argument	"""count"""		1306370	1					
ANR	1306960	PrimaryExpression	"""count"""		1306370	0					
ANR	1306961	Argument	"sizeof ( ""count"" )"		1306370	2					
ANR	1306962	SizeofExpression	"sizeof ( ""count"" )"		1306370	0					
ANR	1306963	Sizeof	sizeof		1306370	0					
ANR	1306964	PrimaryExpression	"""count"""		1306370	1					
ANR	1306965	Argument	( void * * ) & intern -> fptr_count		1306370	3					
ANR	1306966	CastExpression	( void * * ) & intern -> fptr_count		1306370	0					
ANR	1306967	CastTarget	void * *		1306370	0					
ANR	1306968	UnaryOperationExpression	& intern -> fptr_count		1306370	1					
ANR	1306969	UnaryOperator	&		1306370	0					
ANR	1306970	PtrMemberAccess	intern -> fptr_count		1306370	1					
ANR	1306971	Identifier	intern		1306370	0					
ANR	1306972	Identifier	fptr_count		1306370	1					
ANR	1306973	IfStatement	if ( intern -> fptr_count -> common . scope == parent )		1306370	9					
ANR	1306974	Condition	intern -> fptr_count -> common . scope == parent	247:6:8859:8900	1306370	0	True				
ANR	1306975	EqualityExpression	intern -> fptr_count -> common . scope == parent		1306370	0		==			
ANR	1306976	MemberAccess	intern -> fptr_count -> common . scope		1306370	0					
ANR	1306977	PtrMemberAccess	intern -> fptr_count -> common		1306370	0					
ANR	1306978	PtrMemberAccess	intern -> fptr_count		1306370	0					
ANR	1306979	Identifier	intern		1306370	0					
ANR	1306980	Identifier	fptr_count		1306370	1					
ANR	1306981	Identifier	common		1306370	1					
ANR	1306982	Identifier	scope		1306370	1					
ANR	1306983	Identifier	parent		1306370	1					
ANR	1306984	CompoundStatement		80:50:3201:3201	1306370	1					
ANR	1306985	ExpressionStatement	intern -> fptr_count = NULL	248:3:8908:8933	1306370	0	True				
ANR	1306986	AssignmentExpression	intern -> fptr_count = NULL		1306370	0		=			
ANR	1306987	PtrMemberAccess	intern -> fptr_count		1306370	0					
ANR	1306988	Identifier	intern		1306370	0					
ANR	1306989	Identifier	fptr_count		1306370	1					
ANR	1306990	Identifier	NULL		1306370	1					
ANR	1306991	IfStatement	if ( retval . handlers == & spl_handler_ArrayIterator )		1306370	50					
ANR	1306992	Condition	retval . handlers == & spl_handler_ArrayIterator	253:5:9075:9119	1306370	0	True				
ANR	1306993	EqualityExpression	retval . handlers == & spl_handler_ArrayIterator		1306370	0		==			
ANR	1306994	MemberAccess	retval . handlers		1306370	0					
ANR	1306995	Identifier	retval		1306370	0					
ANR	1306996	Identifier	handlers		1306370	1					
ANR	1306997	UnaryOperationExpression	& spl_handler_ArrayIterator		1306370	1					
ANR	1306998	UnaryOperator	&		1306370	0					
ANR	1306999	Identifier	spl_handler_ArrayIterator		1306370	1					
ANR	1307000	CompoundStatement		86:52:3420:3420	1306370	1					
ANR	1307001	IfStatement	if ( ! class_type -> iterator_funcs . zf_current )		1306370	0					
ANR	1307002	Condition	! class_type -> iterator_funcs . zf_current	254:6:9130:9167	1306370	0	True				
ANR	1307003	UnaryOperationExpression	! class_type -> iterator_funcs . zf_current		1306370	0					
ANR	1307004	UnaryOperator	!		1306370	0					
ANR	1307005	MemberAccess	class_type -> iterator_funcs . zf_current		1306370	1					
ANR	1307006	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307007	Identifier	class_type		1306370	0					
ANR	1307008	Identifier	iterator_funcs		1306370	1					
ANR	1307009	Identifier	zf_current		1306370	1					
ANR	1307010	CompoundStatement		87:46:3468:3468	1306370	1					
ANR	1307011	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""rewind"" , sizeof ( ""rewind"" ) , ( void * * ) & class_type -> iterator_funcs . zf_rewind )"	255:3:9175:9297	1306370	0	True				
ANR	1307012	CallExpression	"zend_hash_find ( & class_type -> function_table , ""rewind"" , sizeof ( ""rewind"" ) , ( void * * ) & class_type -> iterator_funcs . zf_rewind )"		1306370	0					
ANR	1307013	Callee	zend_hash_find		1306370	0					
ANR	1307014	Identifier	zend_hash_find		1306370	0					
ANR	1307015	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1307016	Argument	& class_type -> function_table		1306370	0					
ANR	1307017	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1307018	UnaryOperator	&		1306370	0					
ANR	1307019	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1307020	Identifier	class_type		1306370	0					
ANR	1307021	Identifier	function_table		1306370	1					
ANR	1307022	Argument	"""rewind"""		1306370	1					
ANR	1307023	PrimaryExpression	"""rewind"""		1306370	0					
ANR	1307024	Argument	"sizeof ( ""rewind"" )"		1306370	2					
ANR	1307025	SizeofExpression	"sizeof ( ""rewind"" )"		1306370	0					
ANR	1307026	Sizeof	sizeof		1306370	0					
ANR	1307027	PrimaryExpression	"""rewind"""		1306370	1					
ANR	1307028	Argument	( void * * ) & class_type -> iterator_funcs . zf_rewind		1306370	3					
ANR	1307029	CastExpression	( void * * ) & class_type -> iterator_funcs . zf_rewind		1306370	0					
ANR	1307030	CastTarget	void * *		1306370	0					
ANR	1307031	UnaryOperationExpression	& class_type -> iterator_funcs . zf_rewind		1306370	1					
ANR	1307032	UnaryOperator	&		1306370	0					
ANR	1307033	MemberAccess	class_type -> iterator_funcs . zf_rewind		1306370	1					
ANR	1307034	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307035	Identifier	class_type		1306370	0					
ANR	1307036	Identifier	iterator_funcs		1306370	1					
ANR	1307037	Identifier	zf_rewind		1306370	1					
ANR	1307038	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""valid"" , sizeof ( ""valid"" ) , ( void * * ) & class_type -> iterator_funcs . zf_valid )"	256:3:9302:9423	1306370	1	True				
ANR	1307039	CallExpression	"zend_hash_find ( & class_type -> function_table , ""valid"" , sizeof ( ""valid"" ) , ( void * * ) & class_type -> iterator_funcs . zf_valid )"		1306370	0					
ANR	1307040	Callee	zend_hash_find		1306370	0					
ANR	1307041	Identifier	zend_hash_find		1306370	0					
ANR	1307042	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1307043	Argument	& class_type -> function_table		1306370	0					
ANR	1307044	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1307045	UnaryOperator	&		1306370	0					
ANR	1307046	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1307047	Identifier	class_type		1306370	0					
ANR	1307048	Identifier	function_table		1306370	1					
ANR	1307049	Argument	"""valid"""		1306370	1					
ANR	1307050	PrimaryExpression	"""valid"""		1306370	0					
ANR	1307051	Argument	"sizeof ( ""valid"" )"		1306370	2					
ANR	1307052	SizeofExpression	"sizeof ( ""valid"" )"		1306370	0					
ANR	1307053	Sizeof	sizeof		1306370	0					
ANR	1307054	PrimaryExpression	"""valid"""		1306370	1					
ANR	1307055	Argument	( void * * ) & class_type -> iterator_funcs . zf_valid		1306370	3					
ANR	1307056	CastExpression	( void * * ) & class_type -> iterator_funcs . zf_valid		1306370	0					
ANR	1307057	CastTarget	void * *		1306370	0					
ANR	1307058	UnaryOperationExpression	& class_type -> iterator_funcs . zf_valid		1306370	1					
ANR	1307059	UnaryOperator	&		1306370	0					
ANR	1307060	MemberAccess	class_type -> iterator_funcs . zf_valid		1306370	1					
ANR	1307061	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307062	Identifier	class_type		1306370	0					
ANR	1307063	Identifier	iterator_funcs		1306370	1					
ANR	1307064	Identifier	zf_valid		1306370	1					
ANR	1307065	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""key"" , sizeof ( ""key"" ) , ( void * * ) & class_type -> iterator_funcs . zf_key )"	257:3:9428:9547	1306370	2	True				
ANR	1307066	CallExpression	"zend_hash_find ( & class_type -> function_table , ""key"" , sizeof ( ""key"" ) , ( void * * ) & class_type -> iterator_funcs . zf_key )"		1306370	0					
ANR	1307067	Callee	zend_hash_find		1306370	0					
ANR	1307068	Identifier	zend_hash_find		1306370	0					
ANR	1307069	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1307070	Argument	& class_type -> function_table		1306370	0					
ANR	1307071	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1307072	UnaryOperator	&		1306370	0					
ANR	1307073	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1307074	Identifier	class_type		1306370	0					
ANR	1307075	Identifier	function_table		1306370	1					
ANR	1307076	Argument	"""key"""		1306370	1					
ANR	1307077	PrimaryExpression	"""key"""		1306370	0					
ANR	1307078	Argument	"sizeof ( ""key"" )"		1306370	2					
ANR	1307079	SizeofExpression	"sizeof ( ""key"" )"		1306370	0					
ANR	1307080	Sizeof	sizeof		1306370	0					
ANR	1307081	PrimaryExpression	"""key"""		1306370	1					
ANR	1307082	Argument	( void * * ) & class_type -> iterator_funcs . zf_key		1306370	3					
ANR	1307083	CastExpression	( void * * ) & class_type -> iterator_funcs . zf_key		1306370	0					
ANR	1307084	CastTarget	void * *		1306370	0					
ANR	1307085	UnaryOperationExpression	& class_type -> iterator_funcs . zf_key		1306370	1					
ANR	1307086	UnaryOperator	&		1306370	0					
ANR	1307087	MemberAccess	class_type -> iterator_funcs . zf_key		1306370	1					
ANR	1307088	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307089	Identifier	class_type		1306370	0					
ANR	1307090	Identifier	iterator_funcs		1306370	1					
ANR	1307091	Identifier	zf_key		1306370	1					
ANR	1307092	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""current"" , sizeof ( ""current"" ) , ( void * * ) & class_type -> iterator_funcs . zf_current )"	258:3:9552:9675	1306370	3	True				
ANR	1307093	CallExpression	"zend_hash_find ( & class_type -> function_table , ""current"" , sizeof ( ""current"" ) , ( void * * ) & class_type -> iterator_funcs . zf_current )"		1306370	0					
ANR	1307094	Callee	zend_hash_find		1306370	0					
ANR	1307095	Identifier	zend_hash_find		1306370	0					
ANR	1307096	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1307097	Argument	& class_type -> function_table		1306370	0					
ANR	1307098	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1307099	UnaryOperator	&		1306370	0					
ANR	1307100	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1307101	Identifier	class_type		1306370	0					
ANR	1307102	Identifier	function_table		1306370	1					
ANR	1307103	Argument	"""current"""		1306370	1					
ANR	1307104	PrimaryExpression	"""current"""		1306370	0					
ANR	1307105	Argument	"sizeof ( ""current"" )"		1306370	2					
ANR	1307106	SizeofExpression	"sizeof ( ""current"" )"		1306370	0					
ANR	1307107	Sizeof	sizeof		1306370	0					
ANR	1307108	PrimaryExpression	"""current"""		1306370	1					
ANR	1307109	Argument	( void * * ) & class_type -> iterator_funcs . zf_current		1306370	3					
ANR	1307110	CastExpression	( void * * ) & class_type -> iterator_funcs . zf_current		1306370	0					
ANR	1307111	CastTarget	void * *		1306370	0					
ANR	1307112	UnaryOperationExpression	& class_type -> iterator_funcs . zf_current		1306370	1					
ANR	1307113	UnaryOperator	&		1306370	0					
ANR	1307114	MemberAccess	class_type -> iterator_funcs . zf_current		1306370	1					
ANR	1307115	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307116	Identifier	class_type		1306370	0					
ANR	1307117	Identifier	iterator_funcs		1306370	1					
ANR	1307118	Identifier	zf_current		1306370	1					
ANR	1307119	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""next"" , sizeof ( ""next"" ) , ( void * * ) & class_type -> iterator_funcs . zf_next )"	259:3:9680:9800	1306370	4	True				
ANR	1307120	CallExpression	"zend_hash_find ( & class_type -> function_table , ""next"" , sizeof ( ""next"" ) , ( void * * ) & class_type -> iterator_funcs . zf_next )"		1306370	0					
ANR	1307121	Callee	zend_hash_find		1306370	0					
ANR	1307122	Identifier	zend_hash_find		1306370	0					
ANR	1307123	ArgumentList	& class_type -> function_table		1306370	1					
ANR	1307124	Argument	& class_type -> function_table		1306370	0					
ANR	1307125	UnaryOperationExpression	& class_type -> function_table		1306370	0					
ANR	1307126	UnaryOperator	&		1306370	0					
ANR	1307127	PtrMemberAccess	class_type -> function_table		1306370	1					
ANR	1307128	Identifier	class_type		1306370	0					
ANR	1307129	Identifier	function_table		1306370	1					
ANR	1307130	Argument	"""next"""		1306370	1					
ANR	1307131	PrimaryExpression	"""next"""		1306370	0					
ANR	1307132	Argument	"sizeof ( ""next"" )"		1306370	2					
ANR	1307133	SizeofExpression	"sizeof ( ""next"" )"		1306370	0					
ANR	1307134	Sizeof	sizeof		1306370	0					
ANR	1307135	PrimaryExpression	"""next"""		1306370	1					
ANR	1307136	Argument	( void * * ) & class_type -> iterator_funcs . zf_next		1306370	3					
ANR	1307137	CastExpression	( void * * ) & class_type -> iterator_funcs . zf_next		1306370	0					
ANR	1307138	CastTarget	void * *		1306370	0					
ANR	1307139	UnaryOperationExpression	& class_type -> iterator_funcs . zf_next		1306370	1					
ANR	1307140	UnaryOperator	&		1306370	0					
ANR	1307141	MemberAccess	class_type -> iterator_funcs . zf_next		1306370	1					
ANR	1307142	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307143	Identifier	class_type		1306370	0					
ANR	1307144	Identifier	iterator_funcs		1306370	1					
ANR	1307145	Identifier	zf_next		1306370	1					
ANR	1307146	IfStatement	if ( inherited )		1306370	1					
ANR	1307147	Condition	inherited	261:6:9812:9820	1306370	0	True				
ANR	1307148	Identifier	inherited		1306370	0					
ANR	1307149	CompoundStatement		94:17:4121:4121	1306370	1					
ANR	1307150	IfStatement	if ( class_type -> iterator_funcs . zf_rewind -> common . scope != parent )		1306370	0					
ANR	1307151	Condition	class_type -> iterator_funcs . zf_rewind -> common . scope != parent	262:7:9832:9892	1306370	0	True				
ANR	1307152	EqualityExpression	class_type -> iterator_funcs . zf_rewind -> common . scope != parent		1306370	0		!=			
ANR	1307153	MemberAccess	class_type -> iterator_funcs . zf_rewind -> common . scope		1306370	0					
ANR	1307154	PtrMemberAccess	class_type -> iterator_funcs . zf_rewind -> common		1306370	0					
ANR	1307155	MemberAccess	class_type -> iterator_funcs . zf_rewind		1306370	0					
ANR	1307156	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307157	Identifier	class_type		1306370	0					
ANR	1307158	Identifier	iterator_funcs		1306370	1					
ANR	1307159	Identifier	zf_rewind		1306370	1					
ANR	1307160	Identifier	common		1306370	1					
ANR	1307161	Identifier	scope		1306370	1					
ANR	1307162	Identifier	parent		1306370	1					
ANR	1307163	ExpressionStatement	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_REWIND	262:70:9895:9942	1306370	1	True				
ANR	1307164	AssignmentExpression	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_REWIND		1306370	0		|=			
ANR	1307165	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1307166	Identifier	intern		1306370	0					
ANR	1307167	Identifier	ar_flags		1306370	1					
ANR	1307168	Identifier	SPL_ARRAY_OVERLOADED_REWIND		1306370	1					
ANR	1307169	IfStatement	if ( class_type -> iterator_funcs . zf_valid -> common . scope != parent )		1306370	1					
ANR	1307170	Condition	class_type -> iterator_funcs . zf_valid -> common . scope != parent	263:7:9951:10011	1306370	0	True				
ANR	1307171	EqualityExpression	class_type -> iterator_funcs . zf_valid -> common . scope != parent		1306370	0		!=			
ANR	1307172	MemberAccess	class_type -> iterator_funcs . zf_valid -> common . scope		1306370	0					
ANR	1307173	PtrMemberAccess	class_type -> iterator_funcs . zf_valid -> common		1306370	0					
ANR	1307174	MemberAccess	class_type -> iterator_funcs . zf_valid		1306370	0					
ANR	1307175	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307176	Identifier	class_type		1306370	0					
ANR	1307177	Identifier	iterator_funcs		1306370	1					
ANR	1307178	Identifier	zf_valid		1306370	1					
ANR	1307179	Identifier	common		1306370	1					
ANR	1307180	Identifier	scope		1306370	1					
ANR	1307181	Identifier	parent		1306370	1					
ANR	1307182	ExpressionStatement	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_VALID	263:70:10014:10060	1306370	1	True				
ANR	1307183	AssignmentExpression	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_VALID		1306370	0		|=			
ANR	1307184	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1307185	Identifier	intern		1306370	0					
ANR	1307186	Identifier	ar_flags		1306370	1					
ANR	1307187	Identifier	SPL_ARRAY_OVERLOADED_VALID		1306370	1					
ANR	1307188	IfStatement	if ( class_type -> iterator_funcs . zf_key -> common . scope != parent )		1306370	2					
ANR	1307189	Condition	class_type -> iterator_funcs . zf_key -> common . scope != parent	264:7:10069:10129	1306370	0	True				
ANR	1307190	EqualityExpression	class_type -> iterator_funcs . zf_key -> common . scope != parent		1306370	0		!=			
ANR	1307191	MemberAccess	class_type -> iterator_funcs . zf_key -> common . scope		1306370	0					
ANR	1307192	PtrMemberAccess	class_type -> iterator_funcs . zf_key -> common		1306370	0					
ANR	1307193	MemberAccess	class_type -> iterator_funcs . zf_key		1306370	0					
ANR	1307194	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307195	Identifier	class_type		1306370	0					
ANR	1307196	Identifier	iterator_funcs		1306370	1					
ANR	1307197	Identifier	zf_key		1306370	1					
ANR	1307198	Identifier	common		1306370	1					
ANR	1307199	Identifier	scope		1306370	1					
ANR	1307200	Identifier	parent		1306370	1					
ANR	1307201	ExpressionStatement	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_KEY	264:70:10132:10176	1306370	1	True				
ANR	1307202	AssignmentExpression	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_KEY		1306370	0		|=			
ANR	1307203	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1307204	Identifier	intern		1306370	0					
ANR	1307205	Identifier	ar_flags		1306370	1					
ANR	1307206	Identifier	SPL_ARRAY_OVERLOADED_KEY		1306370	1					
ANR	1307207	IfStatement	if ( class_type -> iterator_funcs . zf_current -> common . scope != parent )		1306370	3					
ANR	1307208	Condition	class_type -> iterator_funcs . zf_current -> common . scope != parent	265:7:10185:10245	1306370	0	True				
ANR	1307209	EqualityExpression	class_type -> iterator_funcs . zf_current -> common . scope != parent		1306370	0		!=			
ANR	1307210	MemberAccess	class_type -> iterator_funcs . zf_current -> common . scope		1306370	0					
ANR	1307211	PtrMemberAccess	class_type -> iterator_funcs . zf_current -> common		1306370	0					
ANR	1307212	MemberAccess	class_type -> iterator_funcs . zf_current		1306370	0					
ANR	1307213	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307214	Identifier	class_type		1306370	0					
ANR	1307215	Identifier	iterator_funcs		1306370	1					
ANR	1307216	Identifier	zf_current		1306370	1					
ANR	1307217	Identifier	common		1306370	1					
ANR	1307218	Identifier	scope		1306370	1					
ANR	1307219	Identifier	parent		1306370	1					
ANR	1307220	ExpressionStatement	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_CURRENT	265:70:10248:10296	1306370	1	True				
ANR	1307221	AssignmentExpression	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_CURRENT		1306370	0		|=			
ANR	1307222	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1307223	Identifier	intern		1306370	0					
ANR	1307224	Identifier	ar_flags		1306370	1					
ANR	1307225	Identifier	SPL_ARRAY_OVERLOADED_CURRENT		1306370	1					
ANR	1307226	IfStatement	if ( class_type -> iterator_funcs . zf_next -> common . scope != parent )		1306370	4					
ANR	1307227	Condition	class_type -> iterator_funcs . zf_next -> common . scope != parent	266:7:10305:10365	1306370	0	True				
ANR	1307228	EqualityExpression	class_type -> iterator_funcs . zf_next -> common . scope != parent		1306370	0		!=			
ANR	1307229	MemberAccess	class_type -> iterator_funcs . zf_next -> common . scope		1306370	0					
ANR	1307230	PtrMemberAccess	class_type -> iterator_funcs . zf_next -> common		1306370	0					
ANR	1307231	MemberAccess	class_type -> iterator_funcs . zf_next		1306370	0					
ANR	1307232	PtrMemberAccess	class_type -> iterator_funcs		1306370	0					
ANR	1307233	Identifier	class_type		1306370	0					
ANR	1307234	Identifier	iterator_funcs		1306370	1					
ANR	1307235	Identifier	zf_next		1306370	1					
ANR	1307236	Identifier	common		1306370	1					
ANR	1307237	Identifier	scope		1306370	1					
ANR	1307238	Identifier	parent		1306370	1					
ANR	1307239	ExpressionStatement	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_NEXT	266:70:10368:10413	1306370	1	True				
ANR	1307240	AssignmentExpression	intern -> ar_flags |= SPL_ARRAY_OVERLOADED_NEXT		1306370	0		|=			
ANR	1307241	PtrMemberAccess	intern -> ar_flags		1306370	0					
ANR	1307242	Identifier	intern		1306370	0					
ANR	1307243	Identifier	ar_flags		1306370	1					
ANR	1307244	Identifier	SPL_ARRAY_OVERLOADED_NEXT		1306370	1					
ANR	1307245	Statement	spl_array_rewind	270:1:10424:10439	1306370	51	True				
ANR	1307246	Statement	(	270:17:10440:10440	1306370	52	True				
ANR	1307247	Statement	intern	270:18:10441:10446	1306370	53	True				
ANR	1307248	Statement	TSRMLS_CC	270:25:10448:10456	1306370	54	True				
ANR	1307249	Statement	)	270:34:10457:10457	1306370	55	True				
ANR	1307250	ExpressionStatement		270:35:10458:10458	1306370	56	True				
ANR	1307251	ReturnStatement	return retval ;	271:1:10461:10474	1306370	57	True				
ANR	1307252	Identifier	retval		1306370	0					
ANR	1307253	ReturnType	static zend_object_value		1306370	1					
ANR	1307254	Identifier	spl_array_object_new_ex		1306370	2					
ANR	1307255	ParameterList	"zend_class_entry * class_type , spl_array_object * * obj , zval * orig , int clone_orig TSRMLS_DC"		1306370	3					
ANR	1307256	Parameter	zend_class_entry * class_type	167:49:5609:5636	1306370	0	True				
ANR	1307257	ParameterType	zend_class_entry *		1306370	0					
ANR	1307258	Identifier	class_type		1306370	1					
ANR	1307259	Parameter	spl_array_object * * obj	167:79:5639:5660	1306370	1	True				
ANR	1307260	ParameterType	spl_array_object * *		1306370	0					
ANR	1307261	Identifier	obj		1306370	1					
ANR	1307262	Parameter	zval * orig	167:103:5663:5672	1306370	2	True				
ANR	1307263	ParameterType	zval *		1306370	0					
ANR	1307264	Identifier	orig		1306370	1					
ANR	1307265	Parameter	int clone_orig TSRMLS_DC	167:115:5675:5698	1306370	3	True				
ANR	1307266	ParameterType	int clone_orig		1306370	0					
ANR	1307267	Identifier	TSRMLS_DC		1306370	1					
ANR	1307268	CFGEntryNode	ENTRY		1306370		True				
ANR	1307269	CFGExitNode	EXIT		1306370		True				
ANR	1307270	Symbol	parent		1306370						
ANR	1307271	Symbol	* intern -> fptr_offset_del		1306370						
ANR	1307272	Symbol	* class_type -> iterator_funcs . zf_valid		1306370						
ANR	1307273	Symbol	* parent		1306370						
ANR	1307274	Symbol	class_type -> iterator_funcs . zf_current		1306370						
ANR	1307275	Symbol	* class_type -> iterator_funcs . zf_rewind		1306370						
ANR	1307276	Symbol	class_type -> iterator_funcs . zf_key -> common		1306370						
ANR	1307277	Symbol	class_type -> iterator_funcs . zf_next		1306370						
ANR	1307278	Symbol	class_type		1306370						
ANR	1307279	Symbol	tmp		1306370						
ANR	1307280	Symbol	& intern -> fptr_count		1306370						
ANR	1307281	Symbol	class_type -> iterator_funcs . zf_valid		1306370						
ANR	1307282	Symbol	spl_ce_RecursiveArrayIterator		1306370						
ANR	1307283	Symbol	intern -> retval		1306370						
ANR	1307284	Symbol	SPL_ARRAY_OVERLOADED_CURRENT		1306370						
ANR	1307285	Symbol	* other		1306370						
ANR	1307286	Symbol	intern -> fptr_offset_del		1306370						
ANR	1307287	Symbol	& spl_handler_ArrayIterator		1306370						
ANR	1307288	Symbol	intern -> fptr_offset_del -> common . scope		1306370						
ANR	1307289	Symbol	other -> ar_flags		1306370						
ANR	1307290	Symbol	Z_OBJ_HT_P		1306370						
ANR	1307291	Symbol	* class_type		1306370						
ANR	1307292	Symbol	& tmp		1306370						
ANR	1307293	Symbol	* * intern		1306370						
ANR	1307294	Symbol	spl_array_get_iterator		1306370						
ANR	1307295	Symbol	other		1306370						
ANR	1307296	Symbol	intern -> fptr_offset_get		1306370						
ANR	1307297	Symbol	class_type -> iterator_funcs . zf_valid -> common		1306370						
ANR	1307298	Symbol	SPL_ARRAY_OVERLOADED_VALID		1306370						
ANR	1307299	Symbol	intern -> fptr_offset_set		1306370						
ANR	1307300	Symbol	intern -> array		1306370						
ANR	1307301	Symbol	class_type -> iterator_funcs . zf_next -> common		1306370						
ANR	1307302	Symbol	class_type -> get_iterator		1306370						
ANR	1307303	Symbol	* obj		1306370						
ANR	1307304	Symbol	intern		1306370						
ANR	1307305	Symbol	& class_type -> iterator_funcs . zf_key		1306370						
ANR	1307306	Symbol	* class_type -> iterator_funcs . zf_key		1306370						
ANR	1307307	Symbol	intern -> ar_flags		1306370						
ANR	1307308	Symbol	* intern -> fptr_offset_set		1306370						
ANR	1307309	Symbol	class_type -> iterator_funcs . zf_key		1306370						
ANR	1307310	Symbol	& class_type -> iterator_funcs . zf_current		1306370						
ANR	1307311	Symbol	* class_type -> iterator_funcs . zf_current		1306370						
ANR	1307312	Symbol	& intern -> fptr_offset_has		1306370						
ANR	1307313	Symbol	orig		1306370						
ANR	1307314	Symbol	* intern -> fptr_offset_get		1306370						
ANR	1307315	Symbol	class_type -> iterator_funcs . zf_next -> common . scope		1306370						
ANR	1307316	Symbol	SPL_ARRAY_OVERLOADED_NEXT		1306370						
ANR	1307317	Symbol	clone_orig		1306370						
ANR	1307318	Symbol	intern -> fptr_offset_has -> common		1306370						
ANR	1307319	Symbol	intern -> fptr_offset_has		1306370						
ANR	1307320	Symbol	intern -> fptr_count -> common . scope		1306370						
ANR	1307321	Symbol	class_type -> iterator_funcs . zf_key -> common . scope		1306370						
ANR	1307322	Symbol	& class_type -> iterator_funcs . zf_valid		1306370						
ANR	1307323	Symbol	class_type -> iterator_funcs		1306370						
ANR	1307324	Symbol	other -> array		1306370						
ANR	1307325	Symbol	intern -> fptr_offset_set -> common		1306370						
ANR	1307326	Symbol	& spl_handler_ArrayObject		1306370						
ANR	1307327	Symbol	intern -> fptr_offset_has -> common . scope		1306370						
ANR	1307328	Symbol	TSRMLS_DC		1306370						
ANR	1307329	Symbol	class_type -> iterator_funcs . zf_rewind -> common		1306370						
ANR	1307330	Symbol	intern -> fptr_offset_get -> common		1306370						
ANR	1307331	Symbol	parent -> parent		1306370						
ANR	1307332	Symbol	intern -> fptr_offset_get -> common . scope		1306370						
ANR	1307333	Symbol	intern -> fptr_offset_set -> common . scope		1306370						
ANR	1307334	Symbol	class_type -> iterator_funcs . zf_valid -> common . scope		1306370						
ANR	1307335	Symbol	* class_type -> iterator_funcs		1306370						
ANR	1307336	Symbol	other -> ce_get_iterator		1306370						
ANR	1307337	Symbol	& class_type -> iterator_funcs . zf_next		1306370						
ANR	1307338	Symbol	class_type -> iterator_funcs . zf_rewind		1306370						
ANR	1307339	Symbol	NULL		1306370						
ANR	1307340	Symbol	intern -> fptr_count -> common		1306370						
ANR	1307341	Symbol	* intern -> fptr_count		1306370						
ANR	1307342	Symbol	& intern -> fptr_offset_set		1306370						
ANR	1307343	Symbol	* class_type -> iterator_funcs . zf_next		1306370						
ANR	1307344	Symbol	& class_type -> iterator_funcs		1306370						
ANR	1307345	Symbol	retval		1306370						
ANR	1307346	Symbol	* intern -> fptr_offset_has		1306370						
ANR	1307347	Symbol	& intern -> std		1306370						
ANR	1307348	Symbol	class_type -> iterator_funcs . zf_current -> common		1306370						
ANR	1307349	Symbol	SPL_ARRAY_USE_OTHER		1306370						
ANR	1307350	Symbol	SPL_ARRAY_CLONE_MASK		1306370						
ANR	1307351	Symbol	retval . handlers		1306370						
ANR	1307352	Symbol	& intern -> fptr_offset_get		1306370						
ANR	1307353	Symbol	* * class_type		1306370						
ANR	1307354	Symbol	intern -> debug_info		1306370						
ANR	1307355	Symbol	& intern -> fptr_offset_del		1306370						
ANR	1307356	Symbol	SPL_ARRAY_IS_REF		1306370						
ANR	1307357	Symbol	intern -> fptr_count		1306370						
ANR	1307358	Symbol	emalloc		1306370						
ANR	1307359	Symbol	SPL_ARRAY_OVERLOADED_REWIND		1306370						
ANR	1307360	Symbol	intern -> ce_get_iterator		1306370						
ANR	1307361	Symbol	intern -> fptr_offset_del -> common		1306370						
ANR	1307362	Symbol	& class_type -> function_table		1306370						
ANR	1307363	Symbol	class_type -> iterator_funcs . zf_rewind -> common . scope		1306370						
ANR	1307364	Symbol	* intern		1306370						
ANR	1307365	Symbol	~SPL_ARRAY_IS_REF		1306370						
ANR	1307366	Symbol	SPL_ARRAY_OVERLOADED_KEY		1306370						
ANR	1307367	Symbol	spl_ce_ArrayIterator		1306370						
ANR	1307368	Symbol	spl_ce_ArrayObject		1306370						
ANR	1307369	Symbol	& class_type -> iterator_funcs . zf_rewind		1306370						
ANR	1307370	Symbol	class_type -> iterator_funcs . zf_current -> common . scope		1306370						
ANR	1307371	Symbol	obj		1306370						
ANR	1307372	Symbol	inherited		1306370						
ANR	1307373	Symbol	HASH_OF		1306370						
ANR	1307374	Symbol	zval_add_ref		1306370						
ANR	1307375	DeclStmt									
ANR	1307376	Decl							spl_array_object	spl_array_object *	tmp
ANR	1307377	DeclStmt									
ANR	1307378	Decl							zend_object_value	zend_object_value	new_obj_val
ANR	1307379	DeclStmt									
ANR	1307380	Decl							zend_object	zend_object *	old_object
ANR	1307381	DeclStmt									
ANR	1307382	Decl							zend_object	zend_object *	new_object
ANR	1307383	DeclStmt									
ANR	1307384	Decl							zend_object_handle	zend_object_handle	handle
ANR	1307385	DeclStmt									
ANR	1307386	Decl							spl_array_object	spl_array_object *	intern
ANR	1307387	Function	spl_array_get_dimension_ptr_ptr	302:0:11283:13605							
ANR	1307388	FunctionDef	"spl_array_get_dimension_ptr_ptr (int check_inherited , zval * object , zval * offset , int type TSRMLS_DC)"		1307387	0					
ANR	1307389	CompoundStatement		303:0:11408:13605	1307387	0					
ANR	1307390	Statement	spl_array_object	304:1:11411:11426	1307387	0	True				
ANR	1307391	Statement	*	304:18:11428:11428	1307387	1	True				
ANR	1307392	Statement	intern	304:19:11429:11434	1307387	2	True				
ANR	1307393	Statement	=	304:26:11436:11436	1307387	3	True				
ANR	1307394	Statement	(	304:28:11438:11438	1307387	4	True				
ANR	1307395	Statement	spl_array_object	304:29:11439:11454	1307387	5	True				
ANR	1307396	Statement	*	304:45:11455:11455	1307387	6	True				
ANR	1307397	Statement	)	304:46:11456:11456	1307387	7	True				
ANR	1307398	Statement	zend_object_store_get_object	304:47:11457:11484	1307387	8	True				
ANR	1307399	Statement	(	304:75:11485:11485	1307387	9	True				
ANR	1307400	Statement	object	304:76:11486:11491	1307387	10	True				
ANR	1307401	Statement	TSRMLS_CC	304:83:11493:11501	1307387	11	True				
ANR	1307402	Statement	)	304:92:11502:11502	1307387	12	True				
ANR	1307403	ExpressionStatement		304:93:11503:11503	1307387	13	True				
ANR	1307404	IdentifierDeclStatement	zval * * retval ;	305:1:11506:11519	1307387	14	True				
ANR	1307405	IdentifierDecl	* * retval		1307387	0					
ANR	1307406	IdentifierDeclType	zval * *		1307387	0					
ANR	1307407	Identifier	retval		1307387	1					
ANR	1307408	IdentifierDeclStatement	char * key ;	306:1:11522:11531	1307387	15	True				
ANR	1307409	IdentifierDecl	* key		1307387	0					
ANR	1307410	IdentifierDeclType	char *		1307387	0					
ANR	1307411	Identifier	key		1307387	1					
ANR	1307412	IdentifierDeclStatement	uint len ;	307:1:11534:11542	1307387	16	True				
ANR	1307413	IdentifierDecl	len		1307387	0					
ANR	1307414	IdentifierDeclType	uint		1307387	0					
ANR	1307415	Identifier	len		1307387	1					
ANR	1307416	IdentifierDeclStatement	long index ;	308:1:11545:11555	1307387	17	True				
ANR	1307417	IdentifierDecl	index		1307387	0					
ANR	1307418	IdentifierDeclType	long		1307387	0					
ANR	1307419	Identifier	index		1307387	1					
ANR	1307420	Statement	HashTable	309:1:11558:11566	1307387	18	True				
ANR	1307421	Statement	*	309:11:11568:11568	1307387	19	True				
ANR	1307422	Statement	ht	309:12:11569:11570	1307387	20	True				
ANR	1307423	Statement	=	309:15:11572:11572	1307387	21	True				
ANR	1307424	Statement	spl_array_get_hash_table	309:17:11574:11597	1307387	22	True				
ANR	1307425	Statement	(	309:41:11598:11598	1307387	23	True				
ANR	1307426	Statement	intern	309:42:11599:11604	1307387	24	True				
ANR	1307427	Statement	","	309:48:11605:11605	1307387	25	True				
ANR	1307428	Statement	0	309:50:11607:11607	1307387	26	True				
ANR	1307429	Statement	TSRMLS_CC	309:52:11609:11617	1307387	27	True				
ANR	1307430	Statement	)	309:61:11618:11618	1307387	28	True				
ANR	1307431	ExpressionStatement		309:62:11619:11619	1307387	29	True				
ANR	1307432	IfStatement	if ( ! offset || ! ht )		1307387	30					
ANR	1307433	Condition	! offset || ! ht	311:5:11627:11640	1307387	0	True				
ANR	1307434	OrExpression	! offset || ! ht		1307387	0		||			
ANR	1307435	UnaryOperationExpression	! offset		1307387	0					
ANR	1307436	UnaryOperator	!		1307387	0					
ANR	1307437	Identifier	offset		1307387	1					
ANR	1307438	UnaryOperationExpression	! ht		1307387	1					
ANR	1307439	UnaryOperator	!		1307387	0					
ANR	1307440	Identifier	ht		1307387	1					
ANR	1307441	CompoundStatement		9:21:234:234	1307387	1					
ANR	1307442	ReturnStatement	return & EG ( uninitialized_zval_ptr ) ;	312:2:11647:11681	1307387	0	True				
ANR	1307443	UnaryOperationExpression	& EG ( uninitialized_zval_ptr )		1307387	0					
ANR	1307444	UnaryOperator	&		1307387	0					
ANR	1307445	CallExpression	EG ( uninitialized_zval_ptr )		1307387	1					
ANR	1307446	Callee	EG		1307387	0					
ANR	1307447	Identifier	EG		1307387	0					
ANR	1307448	ArgumentList	uninitialized_zval_ptr		1307387	1					
ANR	1307449	Argument	uninitialized_zval_ptr		1307387	0					
ANR	1307450	Identifier	uninitialized_zval_ptr		1307387	0					
ANR	1307451	IfStatement	if ( ( type == BP_VAR_W || type == BP_VAR_RW ) && ( ht -> nApplyCount > 0 ) )		1307387	31					
ANR	1307452	Condition	( type == BP_VAR_W || type == BP_VAR_RW ) && ( ht -> nApplyCount > 0 )	315:5:11692:11755	1307387	0	True				
ANR	1307453	AndExpression	( type == BP_VAR_W || type == BP_VAR_RW ) && ( ht -> nApplyCount > 0 )		1307387	0		&&			
ANR	1307454	OrExpression	type == BP_VAR_W || type == BP_VAR_RW		1307387	0		||			
ANR	1307455	EqualityExpression	type == BP_VAR_W		1307387	0		==			
ANR	1307456	Identifier	type		1307387	0					
ANR	1307457	Identifier	BP_VAR_W		1307387	1					
ANR	1307458	EqualityExpression	type == BP_VAR_RW		1307387	1		==			
ANR	1307459	Identifier	type		1307387	0					
ANR	1307460	Identifier	BP_VAR_RW		1307387	1					
ANR	1307461	RelationalExpression	ht -> nApplyCount > 0		1307387	1		>			
ANR	1307462	PtrMemberAccess	ht -> nApplyCount		1307387	0					
ANR	1307463	Identifier	ht		1307387	0					
ANR	1307464	Identifier	nApplyCount		1307387	1					
ANR	1307465	PrimaryExpression	0		1307387	1					
ANR	1307466	CompoundStatement		13:71:349:349	1307387	1					
ANR	1307467	ExpressionStatement	"zend_error ( E_WARNING , ""Modification of ArrayObject during sorting is prohibited"" )"	316:2:11762:11843	1307387	0	True				
ANR	1307468	CallExpression	"zend_error ( E_WARNING , ""Modification of ArrayObject during sorting is prohibited"" )"		1307387	0					
ANR	1307469	Callee	zend_error		1307387	0					
ANR	1307470	Identifier	zend_error		1307387	0					
ANR	1307471	ArgumentList	E_WARNING		1307387	1					
ANR	1307472	Argument	E_WARNING		1307387	0					
ANR	1307473	Identifier	E_WARNING		1307387	0					
ANR	1307474	Argument	"""Modification of ArrayObject during sorting is prohibited"""		1307387	1					
ANR	1307475	PrimaryExpression	"""Modification of ArrayObject during sorting is prohibited"""		1307387	0					
ANR	1307476	ReturnStatement	return & EG ( error_zval_ptr ) ;	317:2:11847:11873	1307387	1	True				
ANR	1307477	UnaryOperationExpression	& EG ( error_zval_ptr )		1307387	0					
ANR	1307478	UnaryOperator	&		1307387	0					
ANR	1307479	CallExpression	EG ( error_zval_ptr )		1307387	1					
ANR	1307480	Callee	EG		1307387	0					
ANR	1307481	Identifier	EG		1307387	0					
ANR	1307482	ArgumentList	error_zval_ptr		1307387	1					
ANR	1307483	Argument	error_zval_ptr		1307387	0					
ANR	1307484	Identifier	error_zval_ptr		1307387	0					
ANR	1307485	ExpressionStatement		317:29:11874:11874	1307387	2	True				
ANR	1307486	SwitchStatement	switch ( Z_TYPE_P ( offset ) )		1307387	32					
ANR	1307487	Condition	Z_TYPE_P ( offset )	320:9:11889:11904	1307387	0	True				
ANR	1307488	CallExpression	Z_TYPE_P ( offset )		1307387	0					
ANR	1307489	Callee	Z_TYPE_P		1307387	0					
ANR	1307490	Identifier	Z_TYPE_P		1307387	0					
ANR	1307491	ArgumentList	offset		1307387	1					
ANR	1307492	Argument	offset		1307387	0					
ANR	1307493	Identifier	offset		1307387	0					
ANR	1307494	CompoundStatement		18:27:498:498	1307387	1					
ANR	1307495	Label	case IS_STRING :	321:1:11910:11924	1307387	0	True				
ANR	1307496	Identifier	IS_STRING		1307387	0					
ANR	1307497	ExpressionStatement	key = Z_STRVAL_P ( offset )	322:2:11928:11952	1307387	1	True				
ANR	1307498	AssignmentExpression	key = Z_STRVAL_P ( offset )		1307387	0		=			
ANR	1307499	Identifier	key		1307387	0					
ANR	1307500	CallExpression	Z_STRVAL_P ( offset )		1307387	1					
ANR	1307501	Callee	Z_STRVAL_P		1307387	0					
ANR	1307502	Identifier	Z_STRVAL_P		1307387	0					
ANR	1307503	ArgumentList	offset		1307387	1					
ANR	1307504	Argument	offset		1307387	0					
ANR	1307505	Identifier	offset		1307387	0					
ANR	1307506	ExpressionStatement	len = Z_STRLEN_P ( offset ) + 1	323:2:11956:11984	1307387	2	True				
ANR	1307507	AssignmentExpression	len = Z_STRLEN_P ( offset ) + 1		1307387	0		=			
ANR	1307508	Identifier	len		1307387	0					
ANR	1307509	AdditiveExpression	Z_STRLEN_P ( offset ) + 1		1307387	1		+			
ANR	1307510	CallExpression	Z_STRLEN_P ( offset )		1307387	0					
ANR	1307511	Callee	Z_STRLEN_P		1307387	0					
ANR	1307512	Identifier	Z_STRLEN_P		1307387	0					
ANR	1307513	ArgumentList	offset		1307387	1					
ANR	1307514	Argument	offset		1307387	0					
ANR	1307515	Identifier	offset		1307387	0					
ANR	1307516	PrimaryExpression	1		1307387	1					
ANR	1307517	Label	string_offest :	324:0:11986:11999	1307387	3	True				
ANR	1307518	Identifier	string_offest		1307387	0					
ANR	1307519	IfStatement	"if ( zend_symtable_find ( ht , key , len , ( void * * ) & retval ) == FAILURE )"		1307387	4					
ANR	1307520	Condition	"zend_symtable_find ( ht , key , len , ( void * * ) & retval ) == FAILURE"	325:6:12007:12068	1307387	0	True				
ANR	1307521	EqualityExpression	"zend_symtable_find ( ht , key , len , ( void * * ) & retval ) == FAILURE"		1307387	0		==			
ANR	1307522	CallExpression	"zend_symtable_find ( ht , key , len , ( void * * ) & retval )"		1307387	0					
ANR	1307523	Callee	zend_symtable_find		1307387	0					
ANR	1307524	Identifier	zend_symtable_find		1307387	0					
ANR	1307525	ArgumentList	ht		1307387	1					
ANR	1307526	Argument	ht		1307387	0					
ANR	1307527	Identifier	ht		1307387	0					
ANR	1307528	Argument	key		1307387	1					
ANR	1307529	Identifier	key		1307387	0					
ANR	1307530	Argument	len		1307387	2					
ANR	1307531	Identifier	len		1307387	0					
ANR	1307532	Argument	( void * * ) & retval		1307387	3					
ANR	1307533	CastExpression	( void * * ) & retval		1307387	0					
ANR	1307534	CastTarget	void * *		1307387	0					
ANR	1307535	UnaryOperationExpression	& retval		1307387	1					
ANR	1307536	UnaryOperator	&		1307387	0					
ANR	1307537	Identifier	retval		1307387	1					
ANR	1307538	Identifier	FAILURE		1307387	1					
ANR	1307539	CompoundStatement		23:70:662:662	1307387	1					
ANR	1307540	SwitchStatement	switch ( type )		1307387	0					
ANR	1307541	Condition	type	326:11:12084:12087	1307387	0	True				
ANR	1307542	Identifier	type		1307387	0					
ANR	1307543	CompoundStatement		24:17:681:681	1307387	1					
ANR	1307544	Label	case BP_VAR_R :	327:4:12096:12109	1307387	0	True				
ANR	1307545	Identifier	BP_VAR_R		1307387	0					
ANR	1307546	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined index: %s"" , key )"	328:5:12116:12164	1307387	1	True				
ANR	1307547	CallExpression	"zend_error ( E_NOTICE , ""Undefined index: %s"" , key )"		1307387	0					
ANR	1307548	Callee	zend_error		1307387	0					
ANR	1307549	Identifier	zend_error		1307387	0					
ANR	1307550	ArgumentList	E_NOTICE		1307387	1					
ANR	1307551	Argument	E_NOTICE		1307387	0					
ANR	1307552	Identifier	E_NOTICE		1307387	0					
ANR	1307553	Argument	"""Undefined index: %s"""		1307387	1					
ANR	1307554	PrimaryExpression	"""Undefined index: %s"""		1307387	0					
ANR	1307555	Argument	key		1307387	2					
ANR	1307556	Identifier	key		1307387	0					
ANR	1307557	Label	case BP_VAR_UNSET :	329:4:12170:12187	1307387	2	True				
ANR	1307558	Identifier	BP_VAR_UNSET		1307387	0					
ANR	1307559	Label	case BP_VAR_IS :	330:4:12193:12207	1307387	3	True				
ANR	1307560	Identifier	BP_VAR_IS		1307387	0					
ANR	1307561	ExpressionStatement	retval = & EG ( uninitialized_zval_ptr )	331:5:12214:12250	1307387	4	True				
ANR	1307562	AssignmentExpression	retval = & EG ( uninitialized_zval_ptr )		1307387	0		=			
ANR	1307563	Identifier	retval		1307387	0					
ANR	1307564	UnaryOperationExpression	& EG ( uninitialized_zval_ptr )		1307387	1					
ANR	1307565	UnaryOperator	&		1307387	0					
ANR	1307566	CallExpression	EG ( uninitialized_zval_ptr )		1307387	1					
ANR	1307567	Callee	EG		1307387	0					
ANR	1307568	Identifier	EG		1307387	0					
ANR	1307569	ArgumentList	uninitialized_zval_ptr		1307387	1					
ANR	1307570	Argument	uninitialized_zval_ptr		1307387	0					
ANR	1307571	Identifier	uninitialized_zval_ptr		1307387	0					
ANR	1307572	BreakStatement	break ;	332:5:12257:12262	1307387	5	True				
ANR	1307573	Label	case BP_VAR_RW :	333:4:12268:12282	1307387	6	True				
ANR	1307574	Identifier	BP_VAR_RW		1307387	0					
ANR	1307575	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined index: %s"" , key )"	334:5:12289:12336	1307387	7	True				
ANR	1307576	CallExpression	"zend_error ( E_NOTICE , ""Undefined index: %s"" , key )"		1307387	0					
ANR	1307577	Callee	zend_error		1307387	0					
ANR	1307578	Identifier	zend_error		1307387	0					
ANR	1307579	ArgumentList	E_NOTICE		1307387	1					
ANR	1307580	Argument	E_NOTICE		1307387	0					
ANR	1307581	Identifier	E_NOTICE		1307387	0					
ANR	1307582	Argument	"""Undefined index: %s"""		1307387	1					
ANR	1307583	PrimaryExpression	"""Undefined index: %s"""		1307387	0					
ANR	1307584	Argument	key		1307387	2					
ANR	1307585	Identifier	key		1307387	0					
ANR	1307586	Label	case BP_VAR_W :	335:4:12342:12355	1307387	8	True				
ANR	1307587	Identifier	BP_VAR_W		1307387	0					
ANR	1307588	CompoundStatement		34:8:958:969	1307387	9					
ANR	1307589	IdentifierDeclStatement	zval * value ;	336:8:12367:12378	1307387	0	True				
ANR	1307590	IdentifierDecl	* value		1307387	0					
ANR	1307591	IdentifierDeclType	zval *		1307387	0					
ANR	1307592	Identifier	value		1307387	1					
ANR	1307593	ExpressionStatement	ALLOC_INIT_ZVAL ( value )	337:8:12388:12410	1307387	1	True				
ANR	1307594	CallExpression	ALLOC_INIT_ZVAL ( value )		1307387	0					
ANR	1307595	Callee	ALLOC_INIT_ZVAL		1307387	0					
ANR	1307596	Identifier	ALLOC_INIT_ZVAL		1307387	0					
ANR	1307597	ArgumentList	value		1307387	1					
ANR	1307598	Argument	value		1307387	0					
ANR	1307599	Identifier	value		1307387	0					
ANR	1307600	ExpressionStatement	"zend_symtable_update ( ht , key , len , ( void * * ) & value , sizeof ( void * ) , ( void * * ) & retval )"	338:8:12420:12503	1307387	2	True				
ANR	1307601	CallExpression	"zend_symtable_update ( ht , key , len , ( void * * ) & value , sizeof ( void * ) , ( void * * ) & retval )"		1307387	0					
ANR	1307602	Callee	zend_symtable_update		1307387	0					
ANR	1307603	Identifier	zend_symtable_update		1307387	0					
ANR	1307604	ArgumentList	ht		1307387	1					
ANR	1307605	Argument	ht		1307387	0					
ANR	1307606	Identifier	ht		1307387	0					
ANR	1307607	Argument	key		1307387	1					
ANR	1307608	Identifier	key		1307387	0					
ANR	1307609	Argument	len		1307387	2					
ANR	1307610	Identifier	len		1307387	0					
ANR	1307611	Argument	( void * * ) & value		1307387	3					
ANR	1307612	CastExpression	( void * * ) & value		1307387	0					
ANR	1307613	CastTarget	void * *		1307387	0					
ANR	1307614	UnaryOperationExpression	& value		1307387	1					
ANR	1307615	UnaryOperator	&		1307387	0					
ANR	1307616	Identifier	value		1307387	1					
ANR	1307617	Argument	sizeof ( void * )		1307387	4					
ANR	1307618	SizeofExpression	sizeof ( void * )		1307387	0					
ANR	1307619	Sizeof	sizeof		1307387	0					
ANR	1307620	SizeofOperand	void *		1307387	1					
ANR	1307621	Argument	( void * * ) & retval		1307387	5					
ANR	1307622	CastExpression	( void * * ) & retval		1307387	0					
ANR	1307623	CastTarget	void * *		1307387	0					
ANR	1307624	UnaryOperationExpression	& retval		1307387	1					
ANR	1307625	UnaryOperator	&		1307387	0					
ANR	1307626	Identifier	retval		1307387	1					
ANR	1307627	ReturnStatement	return retval ;	342:2:12522:12535	1307387	5	True				
ANR	1307628	Identifier	retval		1307387	0					
ANR	1307629	Label	case IS_NULL :	343:1:12538:12550	1307387	6	True				
ANR	1307630	Identifier	IS_NULL		1307387	0					
ANR	1307631	ExpressionStatement	"key = """""	344:2:12554:12562	1307387	7	True				
ANR	1307632	AssignmentExpression	"key = """""		1307387	0		=			
ANR	1307633	Identifier	key		1307387	0					
ANR	1307634	PrimaryExpression	""""""		1307387	1					
ANR	1307635	ExpressionStatement	len = 1	345:2:12566:12573	1307387	8	True				
ANR	1307636	AssignmentExpression	len = 1		1307387	0		=			
ANR	1307637	Identifier	len		1307387	0					
ANR	1307638	PrimaryExpression	1		1307387	1					
ANR	1307639	GotoStatement	goto string_offest ;	346:2:12577:12595	1307387	9	True				
ANR	1307640	Identifier	string_offest		1307387	0					
ANR	1307641	Label	case IS_RESOURCE :	347:1:12598:12614	1307387	10	True				
ANR	1307642	Identifier	IS_RESOURCE		1307387	0					
ANR	1307643	ExpressionStatement	"zend_error ( E_STRICT , ""Resource ID#%ld used as offset, casting to integer (%ld)"" , Z_LVAL_P ( offset ) , Z_LVAL_P ( offset ) )"	348:2:12618:12734	1307387	11	True				
ANR	1307644	CallExpression	"zend_error ( E_STRICT , ""Resource ID#%ld used as offset, casting to integer (%ld)"" , Z_LVAL_P ( offset ) , Z_LVAL_P ( offset ) )"		1307387	0					
ANR	1307645	Callee	zend_error		1307387	0					
ANR	1307646	Identifier	zend_error		1307387	0					
ANR	1307647	ArgumentList	E_STRICT		1307387	1					
ANR	1307648	Argument	E_STRICT		1307387	0					
ANR	1307649	Identifier	E_STRICT		1307387	0					
ANR	1307650	Argument	"""Resource ID#%ld used as offset, casting to integer (%ld)"""		1307387	1					
ANR	1307651	PrimaryExpression	"""Resource ID#%ld used as offset, casting to integer (%ld)"""		1307387	0					
ANR	1307652	Argument	Z_LVAL_P ( offset )		1307387	2					
ANR	1307653	CallExpression	Z_LVAL_P ( offset )		1307387	0					
ANR	1307654	Callee	Z_LVAL_P		1307387	0					
ANR	1307655	Identifier	Z_LVAL_P		1307387	0					
ANR	1307656	ArgumentList	offset		1307387	1					
ANR	1307657	Argument	offset		1307387	0					
ANR	1307658	Identifier	offset		1307387	0					
ANR	1307659	Argument	Z_LVAL_P ( offset )		1307387	3					
ANR	1307660	CallExpression	Z_LVAL_P ( offset )		1307387	0					
ANR	1307661	Callee	Z_LVAL_P		1307387	0					
ANR	1307662	Identifier	Z_LVAL_P		1307387	0					
ANR	1307663	ArgumentList	offset		1307387	1					
ANR	1307664	Argument	offset		1307387	0					
ANR	1307665	Identifier	offset		1307387	0					
ANR	1307666	Label	case IS_DOUBLE :	349:1:12737:12751	1307387	12	True				
ANR	1307667	Identifier	IS_DOUBLE		1307387	0					
ANR	1307668	Label	case IS_BOOL :	350:1:12754:12766	1307387	13	True				
ANR	1307669	Identifier	IS_BOOL		1307387	0					
ANR	1307670	Label	case IS_LONG :	351:1:12769:12781	1307387	14	True				
ANR	1307671	Identifier	IS_LONG		1307387	0					
ANR	1307672	IfStatement	if ( offset -> type == IS_DOUBLE )		1307387	15					
ANR	1307673	Condition	offset -> type == IS_DOUBLE	352:6:12789:12813	1307387	0	True				
ANR	1307674	EqualityExpression	offset -> type == IS_DOUBLE		1307387	0		==			
ANR	1307675	PtrMemberAccess	offset -> type		1307387	0					
ANR	1307676	Identifier	offset		1307387	0					
ANR	1307677	Identifier	type		1307387	1					
ANR	1307678	Identifier	IS_DOUBLE		1307387	1					
ANR	1307679	CompoundStatement		50:33:1407:1407	1307387	1					
ANR	1307680	ExpressionStatement	index = ( long ) Z_DVAL_P ( offset )	353:3:12821:12851	1307387	0	True				
ANR	1307681	AssignmentExpression	index = ( long ) Z_DVAL_P ( offset )		1307387	0		=			
ANR	1307682	Identifier	index		1307387	0					
ANR	1307683	CastExpression	( long ) Z_DVAL_P ( offset )		1307387	1					
ANR	1307684	CastTarget	long		1307387	0					
ANR	1307685	CallExpression	Z_DVAL_P ( offset )		1307387	1					
ANR	1307686	Callee	Z_DVAL_P		1307387	0					
ANR	1307687	Identifier	Z_DVAL_P		1307387	0					
ANR	1307688	ArgumentList	offset		1307387	1					
ANR	1307689	Argument	offset		1307387	0					
ANR	1307690	Identifier	offset		1307387	0					
ANR	1307691	ElseStatement	else		1307387	0					
ANR	1307692	CompoundStatement		52:9:1453:1453	1307387	0					
ANR	1307693	ExpressionStatement	index = Z_LVAL_P ( offset )	355:3:12867:12891	1307387	0	True				
ANR	1307694	AssignmentExpression	index = Z_LVAL_P ( offset )		1307387	0		=			
ANR	1307695	Identifier	index		1307387	0					
ANR	1307696	CallExpression	Z_LVAL_P ( offset )		1307387	1					
ANR	1307697	Callee	Z_LVAL_P		1307387	0					
ANR	1307698	Identifier	Z_LVAL_P		1307387	0					
ANR	1307699	ArgumentList	offset		1307387	1					
ANR	1307700	Argument	offset		1307387	0					
ANR	1307701	Identifier	offset		1307387	0					
ANR	1307702	IfStatement	"if ( zend_hash_index_find ( ht , index , ( void * * ) & retval ) == FAILURE )"		1307387	16					
ANR	1307703	Condition	"zend_hash_index_find ( ht , index , ( void * * ) & retval ) == FAILURE"	357:6:12903:12963	1307387	0	True				
ANR	1307704	EqualityExpression	"zend_hash_index_find ( ht , index , ( void * * ) & retval ) == FAILURE"		1307387	0		==			
ANR	1307705	CallExpression	"zend_hash_index_find ( ht , index , ( void * * ) & retval )"		1307387	0					
ANR	1307706	Callee	zend_hash_index_find		1307387	0					
ANR	1307707	Identifier	zend_hash_index_find		1307387	0					
ANR	1307708	ArgumentList	ht		1307387	1					
ANR	1307709	Argument	ht		1307387	0					
ANR	1307710	Identifier	ht		1307387	0					
ANR	1307711	Argument	index		1307387	1					
ANR	1307712	Identifier	index		1307387	0					
ANR	1307713	Argument	( void * * ) & retval		1307387	2					
ANR	1307714	CastExpression	( void * * ) & retval		1307387	0					
ANR	1307715	CastTarget	void * *		1307387	0					
ANR	1307716	UnaryOperationExpression	& retval		1307387	1					
ANR	1307717	UnaryOperator	&		1307387	0					
ANR	1307718	Identifier	retval		1307387	1					
ANR	1307719	Identifier	FAILURE		1307387	1					
ANR	1307720	CompoundStatement		55:69:1557:1557	1307387	1					
ANR	1307721	SwitchStatement	switch ( type )		1307387	0					
ANR	1307722	Condition	type	358:11:12979:12982	1307387	0	True				
ANR	1307723	Identifier	type		1307387	0					
ANR	1307724	CompoundStatement		56:17:1576:1576	1307387	1					
ANR	1307725	Label	case BP_VAR_R :	359:4:12991:13004	1307387	0	True				
ANR	1307726	Identifier	BP_VAR_R		1307387	0					
ANR	1307727	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined offset: %ld"" , index )"	360:5:13011:13063	1307387	1	True				
ANR	1307728	CallExpression	"zend_error ( E_NOTICE , ""Undefined offset: %ld"" , index )"		1307387	0					
ANR	1307729	Callee	zend_error		1307387	0					
ANR	1307730	Identifier	zend_error		1307387	0					
ANR	1307731	ArgumentList	E_NOTICE		1307387	1					
ANR	1307732	Argument	E_NOTICE		1307387	0					
ANR	1307733	Identifier	E_NOTICE		1307387	0					
ANR	1307734	Argument	"""Undefined offset: %ld"""		1307387	1					
ANR	1307735	PrimaryExpression	"""Undefined offset: %ld"""		1307387	0					
ANR	1307736	Argument	index		1307387	2					
ANR	1307737	Identifier	index		1307387	0					
ANR	1307738	Label	case BP_VAR_UNSET :	361:4:13069:13086	1307387	2	True				
ANR	1307739	Identifier	BP_VAR_UNSET		1307387	0					
ANR	1307740	Label	case BP_VAR_IS :	362:4:13092:13106	1307387	3	True				
ANR	1307741	Identifier	BP_VAR_IS		1307387	0					
ANR	1307742	ExpressionStatement	retval = & EG ( uninitialized_zval_ptr )	363:5:13113:13149	1307387	4	True				
ANR	1307743	AssignmentExpression	retval = & EG ( uninitialized_zval_ptr )		1307387	0		=			
ANR	1307744	Identifier	retval		1307387	0					
ANR	1307745	UnaryOperationExpression	& EG ( uninitialized_zval_ptr )		1307387	1					
ANR	1307746	UnaryOperator	&		1307387	0					
ANR	1307747	CallExpression	EG ( uninitialized_zval_ptr )		1307387	1					
ANR	1307748	Callee	EG		1307387	0					
ANR	1307749	Identifier	EG		1307387	0					
ANR	1307750	ArgumentList	uninitialized_zval_ptr		1307387	1					
ANR	1307751	Argument	uninitialized_zval_ptr		1307387	0					
ANR	1307752	Identifier	uninitialized_zval_ptr		1307387	0					
ANR	1307753	BreakStatement	break ;	364:5:13156:13161	1307387	5	True				
ANR	1307754	Label	case BP_VAR_RW :	365:4:13167:13181	1307387	6	True				
ANR	1307755	Identifier	BP_VAR_RW		1307387	0					
ANR	1307756	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined offset: %ld"" , index )"	366:5:13188:13240	1307387	7	True				
ANR	1307757	CallExpression	"zend_error ( E_NOTICE , ""Undefined offset: %ld"" , index )"		1307387	0					
ANR	1307758	Callee	zend_error		1307387	0					
ANR	1307759	Identifier	zend_error		1307387	0					
ANR	1307760	ArgumentList	E_NOTICE		1307387	1					
ANR	1307761	Argument	E_NOTICE		1307387	0					
ANR	1307762	Identifier	E_NOTICE		1307387	0					
ANR	1307763	Argument	"""Undefined offset: %ld"""		1307387	1					
ANR	1307764	PrimaryExpression	"""Undefined offset: %ld"""		1307387	0					
ANR	1307765	Argument	index		1307387	2					
ANR	1307766	Identifier	index		1307387	0					
ANR	1307767	Label	case BP_VAR_W :	367:4:13246:13259	1307387	8	True				
ANR	1307768	Identifier	BP_VAR_W		1307387	0					
ANR	1307769	CompoundStatement		66:8:1862:1873	1307387	9					
ANR	1307770	IdentifierDeclStatement	zval * value ;	368:8:13271:13282	1307387	0	True				
ANR	1307771	IdentifierDecl	* value		1307387	0					
ANR	1307772	IdentifierDeclType	zval *		1307387	0					
ANR	1307773	Identifier	value		1307387	1					
ANR	1307774	ExpressionStatement	ALLOC_INIT_ZVAL ( value )	369:8:13292:13314	1307387	1	True				
ANR	1307775	CallExpression	ALLOC_INIT_ZVAL ( value )		1307387	0					
ANR	1307776	Callee	ALLOC_INIT_ZVAL		1307387	0					
ANR	1307777	Identifier	ALLOC_INIT_ZVAL		1307387	0					
ANR	1307778	ArgumentList	value		1307387	1					
ANR	1307779	Argument	value		1307387	0					
ANR	1307780	Identifier	value		1307387	0					
ANR	1307781	ExpressionStatement	"zend_hash_index_update ( ht , index , ( void * * ) & value , sizeof ( void * ) , ( void * * ) & retval )"	370:5:13321:13403	1307387	2	True				
ANR	1307782	CallExpression	"zend_hash_index_update ( ht , index , ( void * * ) & value , sizeof ( void * ) , ( void * * ) & retval )"		1307387	0					
ANR	1307783	Callee	zend_hash_index_update		1307387	0					
ANR	1307784	Identifier	zend_hash_index_update		1307387	0					
ANR	1307785	ArgumentList	ht		1307387	1					
ANR	1307786	Argument	ht		1307387	0					
ANR	1307787	Identifier	ht		1307387	0					
ANR	1307788	Argument	index		1307387	1					
ANR	1307789	Identifier	index		1307387	0					
ANR	1307790	Argument	( void * * ) & value		1307387	2					
ANR	1307791	CastExpression	( void * * ) & value		1307387	0					
ANR	1307792	CastTarget	void * *		1307387	0					
ANR	1307793	UnaryOperationExpression	& value		1307387	1					
ANR	1307794	UnaryOperator	&		1307387	0					
ANR	1307795	Identifier	value		1307387	1					
ANR	1307796	Argument	sizeof ( void * )		1307387	3					
ANR	1307797	SizeofExpression	sizeof ( void * )		1307387	0					
ANR	1307798	Sizeof	sizeof		1307387	0					
ANR	1307799	SizeofOperand	void *		1307387	1					
ANR	1307800	Argument	( void * * ) & retval		1307387	4					
ANR	1307801	CastExpression	( void * * ) & retval		1307387	0					
ANR	1307802	CastTarget	void * *		1307387	0					
ANR	1307803	UnaryOperationExpression	& retval		1307387	1					
ANR	1307804	UnaryOperator	&		1307387	0					
ANR	1307805	Identifier	retval		1307387	1					
ANR	1307806	ReturnStatement	return retval ;	374:2:13424:13437	1307387	17	True				
ANR	1307807	Identifier	retval		1307387	0					
ANR	1307808	Label	default :	375:1:13440:13447	1307387	18	True				
ANR	1307809	Identifier	default		1307387	0					
ANR	1307810	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal offset type"" )"	376:2:13451:13495	1307387	19	True				
ANR	1307811	CallExpression	"zend_error ( E_WARNING , ""Illegal offset type"" )"		1307387	0					
ANR	1307812	Callee	zend_error		1307387	0					
ANR	1307813	Identifier	zend_error		1307387	0					
ANR	1307814	ArgumentList	E_WARNING		1307387	1					
ANR	1307815	Argument	E_WARNING		1307387	0					
ANR	1307816	Identifier	E_WARNING		1307387	0					
ANR	1307817	Argument	"""Illegal offset type"""		1307387	1					
ANR	1307818	PrimaryExpression	"""Illegal offset type"""		1307387	0					
ANR	1307819	ReturnStatement	return ( type == BP_VAR_W || type == BP_VAR_RW ) ? & EG ( error_zval_ptr ) : & EG ( uninitialized_zval_ptr ) ;	377:2:13499:13600	1307387	20	True				
ANR	1307820	ConditionalExpression	( type == BP_VAR_W || type == BP_VAR_RW ) ? & EG ( error_zval_ptr ) : & EG ( uninitialized_zval_ptr )		1307387	0					
ANR	1307821	Condition	type == BP_VAR_W || type == BP_VAR_RW		1307387	0					
ANR	1307822	OrExpression	type == BP_VAR_W || type == BP_VAR_RW		1307387	0		||			
ANR	1307823	EqualityExpression	type == BP_VAR_W		1307387	0		==			
ANR	1307824	Identifier	type		1307387	0					
ANR	1307825	Identifier	BP_VAR_W		1307387	1					
ANR	1307826	EqualityExpression	type == BP_VAR_RW		1307387	1		==			
ANR	1307827	Identifier	type		1307387	0					
ANR	1307828	Identifier	BP_VAR_RW		1307387	1					
ANR	1307829	UnaryOperationExpression	& EG ( error_zval_ptr )		1307387	1					
ANR	1307830	UnaryOperator	&		1307387	0					
ANR	1307831	CallExpression	EG ( error_zval_ptr )		1307387	1					
ANR	1307832	Callee	EG		1307387	0					
ANR	1307833	Identifier	EG		1307387	0					
ANR	1307834	ArgumentList	error_zval_ptr		1307387	1					
ANR	1307835	Argument	error_zval_ptr		1307387	0					
ANR	1307836	Identifier	error_zval_ptr		1307387	0					
ANR	1307837	UnaryOperationExpression	& EG ( uninitialized_zval_ptr )		1307387	2					
ANR	1307838	UnaryOperator	&		1307387	0					
ANR	1307839	CallExpression	EG ( uninitialized_zval_ptr )		1307387	1					
ANR	1307840	Callee	EG		1307387	0					
ANR	1307841	Identifier	EG		1307387	0					
ANR	1307842	ArgumentList	uninitialized_zval_ptr		1307387	1					
ANR	1307843	Argument	uninitialized_zval_ptr		1307387	0					
ANR	1307844	Identifier	uninitialized_zval_ptr		1307387	0					
ANR	1307845	ReturnType	static zval * *		1307387	1					
ANR	1307846	Identifier	spl_array_get_dimension_ptr_ptr		1307387	2					
ANR	1307847	ParameterList	"int check_inherited , zval * object , zval * offset , int type TSRMLS_DC"		1307387	3					
ANR	1307848	Parameter	int check_inherited	302:46:11329:11347	1307387	0	True				
ANR	1307849	ParameterType	int		1307387	0					
ANR	1307850	Identifier	check_inherited		1307387	1					
ANR	1307851	Parameter	zval * object	302:67:11350:11361	1307387	1	True				
ANR	1307852	ParameterType	zval *		1307387	0					
ANR	1307853	Identifier	object		1307387	1					
ANR	1307854	Parameter	zval * offset	302:81:11364:11375	1307387	2	True				
ANR	1307855	ParameterType	zval *		1307387	0					
ANR	1307856	Identifier	offset		1307387	1					
ANR	1307857	Parameter	int type TSRMLS_DC	302:95:11378:11395	1307387	3	True				
ANR	1307858	ParameterType	int type		1307387	0					
ANR	1307859	Identifier	TSRMLS_DC		1307387	1					
ANR	1307860	CFGEntryNode	ENTRY		1307387		True				
ANR	1307861	CFGExitNode	EXIT		1307387		True				
ANR	1307862	Symbol	& value		1307387						
ANR	1307863	Symbol	zend_symtable_find		1307387						
ANR	1307864	Symbol	E_STRICT		1307387						
ANR	1307865	Symbol	ht		1307387						
ANR	1307866	Symbol	type		1307387						
ANR	1307867	Symbol	TSRMLS_DC		1307387						
ANR	1307868	Symbol	& EG		1307387						
ANR	1307869	Symbol	E_WARNING		1307387						
ANR	1307870	Symbol	* ht		1307387						
ANR	1307871	Symbol	len		1307387						
ANR	1307872	Symbol	& retval		1307387						
ANR	1307873	Symbol	BP_VAR_W		1307387						
ANR	1307874	Symbol	Z_STRLEN_P		1307387						
ANR	1307875	Symbol	value		1307387						
ANR	1307876	Symbol	key		1307387						
ANR	1307877	Symbol	BP_VAR_RW		1307387						
ANR	1307878	Symbol	zend_hash_index_find		1307387						
ANR	1307879	Symbol	offset		1307387						
ANR	1307880	Symbol	error_zval_ptr		1307387						
ANR	1307881	Symbol	ht -> nApplyCount		1307387						
ANR	1307882	Symbol	index		1307387						
ANR	1307883	Symbol	E_NOTICE		1307387						
ANR	1307884	Symbol	Z_TYPE_P		1307387						
ANR	1307885	Symbol	Z_STRVAL_P		1307387						
ANR	1307886	Symbol	FAILURE		1307387						
ANR	1307887	Symbol	retval		1307387						
ANR	1307888	Symbol	Z_DVAL_P		1307387						
ANR	1307889	Symbol	Z_LVAL_P		1307387						
ANR	1307890	Symbol	uninitialized_zval_ptr		1307387						
ANR	1307891	Symbol	IS_DOUBLE		1307387						
ANR	1307892	Symbol	* offset		1307387						
ANR	1307893	Symbol	check_inherited		1307387						
ANR	1307894	Symbol	object		1307387						
ANR	1307895	Symbol	offset -> type		1307387						
ANR	1307896	Function	spl_array_read_dimension_ex	382:0:13618:15045							
ANR	1307897	FunctionDef	"spl_array_read_dimension_ex (int check_inherited , zval * object , zval * offset , int type TSRMLS_DC)"		1307896	0					
ANR	1307898	CompoundStatement		383:0:13738:15045	1307896	0					
ANR	1307899	IdentifierDeclStatement	zval * * ret ;	384:1:13741:13751	1307896	0	True				
ANR	1307900	IdentifierDecl	* * ret		1307896	0					
ANR	1307901	IdentifierDeclType	zval * *		1307896	0					
ANR	1307902	Identifier	ret		1307896	1					
ANR	1307903	IfStatement	if ( check_inherited )		1307896	1					
ANR	1307904	Condition	check_inherited	386:5:13759:13773	1307896	0	True				
ANR	1307905	Identifier	check_inherited		1307896	0					
ANR	1307906	CompoundStatement		4:22:37:37	1307896	1					
ANR	1307907	Statement	spl_array_object	387:2:13780:13795	1307896	0	True				
ANR	1307908	Statement	*	387:19:13797:13797	1307896	1	True				
ANR	1307909	Statement	intern	387:20:13798:13803	1307896	2	True				
ANR	1307910	Statement	=	387:27:13805:13805	1307896	3	True				
ANR	1307911	Statement	(	387:29:13807:13807	1307896	4	True				
ANR	1307912	Statement	spl_array_object	387:30:13808:13823	1307896	5	True				
ANR	1307913	Statement	*	387:46:13824:13824	1307896	6	True				
ANR	1307914	Statement	)	387:47:13825:13825	1307896	7	True				
ANR	1307915	Statement	zend_object_store_get_object	387:48:13826:13853	1307896	8	True				
ANR	1307916	Statement	(	387:76:13854:13854	1307896	9	True				
ANR	1307917	Statement	object	387:77:13855:13860	1307896	10	True				
ANR	1307918	Statement	TSRMLS_CC	387:84:13862:13870	1307896	11	True				
ANR	1307919	Statement	)	387:93:13871:13871	1307896	12	True				
ANR	1307920	ExpressionStatement		387:94:13872:13872	1307896	13	True				
ANR	1307921	IfStatement	if ( intern -> fptr_offset_get )		1307896	14					
ANR	1307922	Condition	intern -> fptr_offset_get	388:6:13880:13902	1307896	0	True				
ANR	1307923	PtrMemberAccess	intern -> fptr_offset_get		1307896	0					
ANR	1307924	Identifier	intern		1307896	0					
ANR	1307925	Identifier	fptr_offset_get		1307896	1					
ANR	1307926	CompoundStatement		7:3:171:179	1307896	1					
ANR	1307927	IdentifierDeclStatement	zval * rv ;	389:3:13910:13918	1307896	0	True				
ANR	1307928	IdentifierDecl	* rv		1307896	0					
ANR	1307929	IdentifierDeclType	zval *		1307896	0					
ANR	1307930	Identifier	rv		1307896	1					
ANR	1307931	IfStatement	if ( ! offset )		1307896	1					
ANR	1307932	Condition	! offset	390:7:13927:13933	1307896	0	True				
ANR	1307933	UnaryOperationExpression	! offset		1307896	0					
ANR	1307934	UnaryOperator	!		1307896	0					
ANR	1307935	Identifier	offset		1307896	1					
ANR	1307936	CompoundStatement		8:16:197:197	1307896	1					
ANR	1307937	ExpressionStatement	ALLOC_INIT_ZVAL ( offset )	391:4:13942:13965	1307896	0	True				
ANR	1307938	CallExpression	ALLOC_INIT_ZVAL ( offset )		1307896	0					
ANR	1307939	Callee	ALLOC_INIT_ZVAL		1307896	0					
ANR	1307940	Identifier	ALLOC_INIT_ZVAL		1307896	0					
ANR	1307941	ArgumentList	offset		1307896	1					
ANR	1307942	Argument	offset		1307896	0					
ANR	1307943	Identifier	offset		1307896	0					
ANR	1307944	ElseStatement	else		1307896	0					
ANR	1307945	CompoundStatement		10:10:238:238	1307896	0					
ANR	1307946	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	393:4:13983:14010	1307896	0	True				
ANR	1307947	CallExpression	SEPARATE_ARG_IF_REF ( offset )		1307896	0					
ANR	1307948	Callee	SEPARATE_ARG_IF_REF		1307896	0					
ANR	1307949	Identifier	SEPARATE_ARG_IF_REF		1307896	0					
ANR	1307950	ArgumentList	offset		1307896	1					
ANR	1307951	Argument	offset		1307896	0					
ANR	1307952	Identifier	offset		1307896	0					
ANR	1307953	ExpressionStatement	"zend_call_method_with_1_params ( & object , Z_OBJCE_P ( object ) , & intern -> fptr_offset_get , ""offsetGet"" , & rv , offset )"	395:3:14020:14130	1307896	2	True				
ANR	1307954	CallExpression	"zend_call_method_with_1_params ( & object , Z_OBJCE_P ( object ) , & intern -> fptr_offset_get , ""offsetGet"" , & rv , offset )"		1307896	0					
ANR	1307955	Callee	zend_call_method_with_1_params		1307896	0					
ANR	1307956	Identifier	zend_call_method_with_1_params		1307896	0					
ANR	1307957	ArgumentList	& object		1307896	1					
ANR	1307958	Argument	& object		1307896	0					
ANR	1307959	UnaryOperationExpression	& object		1307896	0					
ANR	1307960	UnaryOperator	&		1307896	0					
ANR	1307961	Identifier	object		1307896	1					
ANR	1307962	Argument	Z_OBJCE_P ( object )		1307896	1					
ANR	1307963	CallExpression	Z_OBJCE_P ( object )		1307896	0					
ANR	1307964	Callee	Z_OBJCE_P		1307896	0					
ANR	1307965	Identifier	Z_OBJCE_P		1307896	0					
ANR	1307966	ArgumentList	object		1307896	1					
ANR	1307967	Argument	object		1307896	0					
ANR	1307968	Identifier	object		1307896	0					
ANR	1307969	Argument	& intern -> fptr_offset_get		1307896	2					
ANR	1307970	UnaryOperationExpression	& intern -> fptr_offset_get		1307896	0					
ANR	1307971	UnaryOperator	&		1307896	0					
ANR	1307972	PtrMemberAccess	intern -> fptr_offset_get		1307896	1					
ANR	1307973	Identifier	intern		1307896	0					
ANR	1307974	Identifier	fptr_offset_get		1307896	1					
ANR	1307975	Argument	"""offsetGet"""		1307896	3					
ANR	1307976	PrimaryExpression	"""offsetGet"""		1307896	0					
ANR	1307977	Argument	& rv		1307896	4					
ANR	1307978	UnaryOperationExpression	& rv		1307896	0					
ANR	1307979	UnaryOperator	&		1307896	0					
ANR	1307980	Identifier	rv		1307896	1					
ANR	1307981	Argument	offset		1307896	5					
ANR	1307982	Identifier	offset		1307896	0					
ANR	1307983	ExpressionStatement	zval_ptr_dtor ( & offset )	396:3:14135:14157	1307896	3	True				
ANR	1307984	CallExpression	zval_ptr_dtor ( & offset )		1307896	0					
ANR	1307985	Callee	zval_ptr_dtor		1307896	0					
ANR	1307986	Identifier	zval_ptr_dtor		1307896	0					
ANR	1307987	ArgumentList	& offset		1307896	1					
ANR	1307988	Argument	& offset		1307896	0					
ANR	1307989	UnaryOperationExpression	& offset		1307896	0					
ANR	1307990	UnaryOperator	&		1307896	0					
ANR	1307991	Identifier	offset		1307896	1					
ANR	1307992	IfStatement	if ( rv )		1307896	4					
ANR	1307993	Condition	rv	397:7:14166:14167	1307896	0	True				
ANR	1307994	Identifier	rv		1307896	0					
ANR	1307995	CompoundStatement		15:11:431:431	1307896	1					
ANR	1307996	ExpressionStatement	zval_ptr_dtor ( & intern -> retval )	398:4:14176:14206	1307896	0	True				
ANR	1307997	CallExpression	zval_ptr_dtor ( & intern -> retval )		1307896	0					
ANR	1307998	Callee	zval_ptr_dtor		1307896	0					
ANR	1307999	Identifier	zval_ptr_dtor		1307896	0					
ANR	1308000	ArgumentList	& intern -> retval		1307896	1					
ANR	1308001	Argument	& intern -> retval		1307896	0					
ANR	1308002	UnaryOperationExpression	& intern -> retval		1307896	0					
ANR	1308003	UnaryOperator	&		1307896	0					
ANR	1308004	PtrMemberAccess	intern -> retval		1307896	1					
ANR	1308005	Identifier	intern		1307896	0					
ANR	1308006	Identifier	retval		1307896	1					
ANR	1308007	ExpressionStatement	MAKE_STD_ZVAL ( intern -> retval )	399:4:14212:14241	1307896	1	True				
ANR	1308008	CallExpression	MAKE_STD_ZVAL ( intern -> retval )		1307896	0					
ANR	1308009	Callee	MAKE_STD_ZVAL		1307896	0					
ANR	1308010	Identifier	MAKE_STD_ZVAL		1307896	0					
ANR	1308011	ArgumentList	intern -> retval		1307896	1					
ANR	1308012	Argument	intern -> retval		1307896	0					
ANR	1308013	PtrMemberAccess	intern -> retval		1307896	0					
ANR	1308014	Identifier	intern		1307896	0					
ANR	1308015	Identifier	retval		1307896	1					
ANR	1308016	ExpressionStatement	"ZVAL_ZVAL ( intern -> retval , rv , 1 , 1 )"	400:4:14247:14282	1307896	2	True				
ANR	1308017	CallExpression	"ZVAL_ZVAL ( intern -> retval , rv , 1 , 1 )"		1307896	0					
ANR	1308018	Callee	ZVAL_ZVAL		1307896	0					
ANR	1308019	Identifier	ZVAL_ZVAL		1307896	0					
ANR	1308020	ArgumentList	intern -> retval		1307896	1					
ANR	1308021	Argument	intern -> retval		1307896	0					
ANR	1308022	PtrMemberAccess	intern -> retval		1307896	0					
ANR	1308023	Identifier	intern		1307896	0					
ANR	1308024	Identifier	retval		1307896	1					
ANR	1308025	Argument	rv		1307896	1					
ANR	1308026	Identifier	rv		1307896	0					
ANR	1308027	Argument	1		1307896	2					
ANR	1308028	PrimaryExpression	1		1307896	0					
ANR	1308029	Argument	1		1307896	3					
ANR	1308030	PrimaryExpression	1		1307896	0					
ANR	1308031	ReturnStatement	return intern -> retval ;	401:4:14288:14309	1307896	3	True				
ANR	1308032	PtrMemberAccess	intern -> retval		1307896	0					
ANR	1308033	Identifier	intern		1307896	0					
ANR	1308034	Identifier	retval		1307896	1					
ANR	1308035	ReturnStatement	return EG ( uninitialized_zval_ptr ) ;	403:3:14319:14352	1307896	5	True				
ANR	1308036	CallExpression	EG ( uninitialized_zval_ptr )		1307896	0					
ANR	1308037	Callee	EG		1307896	0					
ANR	1308038	Identifier	EG		1307896	0					
ANR	1308039	ArgumentList	uninitialized_zval_ptr		1307896	1					
ANR	1308040	Argument	uninitialized_zval_ptr		1307896	0					
ANR	1308041	Identifier	uninitialized_zval_ptr		1307896	0					
ANR	1308042	Statement	ret	406:1:14362:14364	1307896	2	True				
ANR	1308043	Statement	=	406:5:14366:14366	1307896	3	True				
ANR	1308044	Statement	spl_array_get_dimension_ptr_ptr	406:7:14368:14398	1307896	4	True				
ANR	1308045	Statement	(	406:38:14399:14399	1307896	5	True				
ANR	1308046	Statement	check_inherited	406:39:14400:14414	1307896	6	True				
ANR	1308047	Statement	","	406:54:14415:14415	1307896	7	True				
ANR	1308048	Statement	object	406:56:14417:14422	1307896	8	True				
ANR	1308049	Statement	","	406:62:14423:14423	1307896	9	True				
ANR	1308050	Statement	offset	406:64:14425:14430	1307896	10	True				
ANR	1308051	Statement	","	406:70:14431:14431	1307896	11	True				
ANR	1308052	Statement	type	406:72:14433:14436	1307896	12	True				
ANR	1308053	Statement	TSRMLS_CC	406:77:14438:14446	1307896	13	True				
ANR	1308054	Statement	)	406:86:14447:14447	1307896	14	True				
ANR	1308055	ExpressionStatement		406:87:14448:14448	1307896	15	True				
ANR	1308056	IfStatement	if ( ( type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET ) && ! Z_ISREF_PP ( ret ) && ret != & EG ( uninitialized_zval_ptr ) )		1307896	16					
ANR	1308057	Condition	( type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET ) && ! Z_ISREF_PP ( ret ) && ret != & EG ( uninitialized_zval_ptr )	411:5:14644:14764	1307896	0	True				
ANR	1308058	AndExpression	( type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET ) && ! Z_ISREF_PP ( ret ) && ret != & EG ( uninitialized_zval_ptr )		1307896	0		&&			
ANR	1308059	OrExpression	type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET		1307896	0		||			
ANR	1308060	EqualityExpression	type == BP_VAR_W		1307896	0		==			
ANR	1308061	Identifier	type		1307896	0					
ANR	1308062	Identifier	BP_VAR_W		1307896	1					
ANR	1308063	OrExpression	type == BP_VAR_RW || type == BP_VAR_UNSET		1307896	1		||			
ANR	1308064	EqualityExpression	type == BP_VAR_RW		1307896	0		==			
ANR	1308065	Identifier	type		1307896	0					
ANR	1308066	Identifier	BP_VAR_RW		1307896	1					
ANR	1308067	EqualityExpression	type == BP_VAR_UNSET		1307896	1		==			
ANR	1308068	Identifier	type		1307896	0					
ANR	1308069	Identifier	BP_VAR_UNSET		1307896	1					
ANR	1308070	AndExpression	! Z_ISREF_PP ( ret ) && ret != & EG ( uninitialized_zval_ptr )		1307896	1		&&			
ANR	1308071	UnaryOperationExpression	! Z_ISREF_PP ( ret )		1307896	0					
ANR	1308072	UnaryOperator	!		1307896	0					
ANR	1308073	CallExpression	Z_ISREF_PP ( ret )		1307896	1					
ANR	1308074	Callee	Z_ISREF_PP		1307896	0					
ANR	1308075	Identifier	Z_ISREF_PP		1307896	0					
ANR	1308076	ArgumentList	ret		1307896	1					
ANR	1308077	Argument	ret		1307896	0					
ANR	1308078	Identifier	ret		1307896	0					
ANR	1308079	EqualityExpression	ret != & EG ( uninitialized_zval_ptr )		1307896	1		!=			
ANR	1308080	Identifier	ret		1307896	0					
ANR	1308081	UnaryOperationExpression	& EG ( uninitialized_zval_ptr )		1307896	1					
ANR	1308082	UnaryOperator	&		1307896	0					
ANR	1308083	CallExpression	EG ( uninitialized_zval_ptr )		1307896	1					
ANR	1308084	Callee	EG		1307896	0					
ANR	1308085	Identifier	EG		1307896	0					
ANR	1308086	ArgumentList	uninitialized_zval_ptr		1307896	1					
ANR	1308087	Argument	uninitialized_zval_ptr		1307896	0					
ANR	1308088	Identifier	uninitialized_zval_ptr		1307896	0					
ANR	1308089	CompoundStatement		29:128:1028:1028	1307896	1					
ANR	1308090	IfStatement	if ( Z_REFCOUNT_PP ( ret ) > 1 )		1307896	0					
ANR	1308091	Condition	Z_REFCOUNT_PP ( ret ) > 1	412:6:14775:14796	1307896	0	True				
ANR	1308092	RelationalExpression	Z_REFCOUNT_PP ( ret ) > 1		1307896	0		>			
ANR	1308093	CallExpression	Z_REFCOUNT_PP ( ret )		1307896	0					
ANR	1308094	Callee	Z_REFCOUNT_PP		1307896	0					
ANR	1308095	Identifier	Z_REFCOUNT_PP		1307896	0					
ANR	1308096	ArgumentList	ret		1307896	1					
ANR	1308097	Argument	ret		1307896	0					
ANR	1308098	Identifier	ret		1307896	0					
ANR	1308099	PrimaryExpression	1		1307896	1					
ANR	1308100	CompoundStatement		31:3:1065:1077	1307896	1					
ANR	1308101	IdentifierDeclStatement	zval * newval ;	413:3:14804:14816	1307896	0	True				
ANR	1308102	IdentifierDecl	* newval		1307896	0					
ANR	1308103	IdentifierDeclType	zval *		1307896	0					
ANR	1308104	Identifier	newval		1307896	1					
ANR	1308105	ExpressionStatement	MAKE_STD_ZVAL ( newval )	416:3:14840:14861	1307896	1	True				
ANR	1308106	CallExpression	MAKE_STD_ZVAL ( newval )		1307896	0					
ANR	1308107	Callee	MAKE_STD_ZVAL		1307896	0					
ANR	1308108	Identifier	MAKE_STD_ZVAL		1307896	0					
ANR	1308109	ArgumentList	newval		1307896	1					
ANR	1308110	Argument	newval		1307896	0					
ANR	1308111	Identifier	newval		1307896	0					
ANR	1308112	ExpressionStatement	* newval = * * ret	417:3:14866:14881	1307896	2	True				
ANR	1308113	AssignmentExpression	* newval = * * ret		1307896	0		=			
ANR	1308114	UnaryOperationExpression	* newval		1307896	0					
ANR	1308115	UnaryOperator	*		1307896	0					
ANR	1308116	Identifier	newval		1307896	1					
ANR	1308117	UnaryOperationExpression	* * ret		1307896	1					
ANR	1308118	UnaryOperator	*		1307896	0					
ANR	1308119	UnaryOperationExpression	* ret		1307896	1					
ANR	1308120	UnaryOperator	*		1307896	0					
ANR	1308121	Identifier	ret		1307896	1					
ANR	1308122	ExpressionStatement	zval_copy_ctor ( newval )	418:3:14886:14908	1307896	3	True				
ANR	1308123	CallExpression	zval_copy_ctor ( newval )		1307896	0					
ANR	1308124	Callee	zval_copy_ctor		1307896	0					
ANR	1308125	Identifier	zval_copy_ctor		1307896	0					
ANR	1308126	ArgumentList	newval		1307896	1					
ANR	1308127	Argument	newval		1307896	0					
ANR	1308128	Identifier	newval		1307896	0					
ANR	1308129	ExpressionStatement	"Z_SET_REFCOUNT_P ( newval , 1 )"	419:3:14913:14940	1307896	4	True				
ANR	1308130	CallExpression	"Z_SET_REFCOUNT_P ( newval , 1 )"		1307896	0					
ANR	1308131	Callee	Z_SET_REFCOUNT_P		1307896	0					
ANR	1308132	Identifier	Z_SET_REFCOUNT_P		1307896	0					
ANR	1308133	ArgumentList	newval		1307896	1					
ANR	1308134	Argument	newval		1307896	0					
ANR	1308135	Identifier	newval		1307896	0					
ANR	1308136	Argument	1		1307896	1					
ANR	1308137	PrimaryExpression	1		1307896	0					
ANR	1308138	ExpressionStatement	Z_DELREF_PP ( ret )	422:3:14963:14979	1307896	5	True				
ANR	1308139	CallExpression	Z_DELREF_PP ( ret )		1307896	0					
ANR	1308140	Callee	Z_DELREF_PP		1307896	0					
ANR	1308141	Identifier	Z_DELREF_PP		1307896	0					
ANR	1308142	ArgumentList	ret		1307896	1					
ANR	1308143	Argument	ret		1307896	0					
ANR	1308144	Identifier	ret		1307896	0					
ANR	1308145	ExpressionStatement	* ret = newval	423:3:14984:14997	1307896	6	True				
ANR	1308146	AssignmentExpression	* ret = newval		1307896	0		=			
ANR	1308147	UnaryOperationExpression	* ret		1307896	0					
ANR	1308148	UnaryOperator	*		1307896	0					
ANR	1308149	Identifier	ret		1307896	1					
ANR	1308150	Identifier	newval		1307896	1					
ANR	1308151	ExpressionStatement	Z_SET_ISREF_PP ( ret )	426:2:15006:15025	1307896	1	True				
ANR	1308152	CallExpression	Z_SET_ISREF_PP ( ret )		1307896	0					
ANR	1308153	Callee	Z_SET_ISREF_PP		1307896	0					
ANR	1308154	Identifier	Z_SET_ISREF_PP		1307896	0					
ANR	1308155	ArgumentList	ret		1307896	1					
ANR	1308156	Argument	ret		1307896	0					
ANR	1308157	Identifier	ret		1307896	0					
ANR	1308158	ReturnStatement	return * ret ;	429:1:15032:15043	1307896	17	True				
ANR	1308159	UnaryOperationExpression	* ret		1307896	0					
ANR	1308160	UnaryOperator	*		1307896	0					
ANR	1308161	Identifier	ret		1307896	1					
ANR	1308162	ReturnType	static zval *		1307896	1					
ANR	1308163	Identifier	spl_array_read_dimension_ex		1307896	2					
ANR	1308164	ParameterList	"int check_inherited , zval * object , zval * offset , int type TSRMLS_DC"		1307896	3					
ANR	1308165	Parameter	int check_inherited	382:41:13659:13677	1307896	0	True				
ANR	1308166	ParameterType	int		1307896	0					
ANR	1308167	Identifier	check_inherited		1307896	1					
ANR	1308168	Parameter	zval * object	382:62:13680:13691	1307896	1	True				
ANR	1308169	ParameterType	zval *		1307896	0					
ANR	1308170	Identifier	object		1307896	1					
ANR	1308171	Parameter	zval * offset	382:76:13694:13705	1307896	2	True				
ANR	1308172	ParameterType	zval *		1307896	0					
ANR	1308173	Identifier	offset		1307896	1					
ANR	1308174	Parameter	int type TSRMLS_DC	382:90:13708:13725	1307896	3	True				
ANR	1308175	ParameterType	int type		1307896	0					
ANR	1308176	Identifier	TSRMLS_DC		1307896	1					
ANR	1308177	CFGEntryNode	ENTRY		1307896		True				
ANR	1308178	CFGExitNode	EXIT		1307896		True				
ANR	1308179	Symbol	* newval		1307896						
ANR	1308180	Symbol	rv		1307896						
ANR	1308181	Symbol	intern -> fptr_offset_get		1307896						
ANR	1308182	Symbol	* ret		1307896						
ANR	1308183	Symbol	type		1307896						
ANR	1308184	Symbol	TSRMLS_DC		1307896						
ANR	1308185	Symbol	& object		1307896						
ANR	1308186	Symbol	& EG		1307896						
ANR	1308187	Symbol	Z_ISREF_PP		1307896						
ANR	1308188	Symbol	Z_OBJCE_P		1307896						
ANR	1308189	Symbol	BP_VAR_W		1307896						
ANR	1308190	Symbol	ret		1307896						
ANR	1308191	Symbol	intern -> retval		1307896						
ANR	1308192	Symbol	BP_VAR_RW		1307896						
ANR	1308193	Symbol	* intern		1307896						
ANR	1308194	Symbol	EG		1307896						
ANR	1308195	Symbol	intern		1307896						
ANR	1308196	Symbol	offset		1307896						
ANR	1308197	Symbol	& offset		1307896						
ANR	1308198	Symbol	Z_REFCOUNT_PP		1307896						
ANR	1308199	Symbol	& rv		1307896						
ANR	1308200	Symbol	uninitialized_zval_ptr		1307896						
ANR	1308201	Symbol	* * ret		1307896						
ANR	1308202	Symbol	BP_VAR_UNSET		1307896						
ANR	1308203	Symbol	newval		1307896						
ANR	1308204	Symbol	& intern -> fptr_offset_get		1307896						
ANR	1308205	Symbol	check_inherited		1307896						
ANR	1308206	Symbol	object		1307896						
ANR	1308207	Symbol	& intern -> retval		1307896						
ANR	1308208	Function	spl_array_read_dimension	432:0:15058:15228							
ANR	1308209	FunctionDef	"spl_array_read_dimension (zval * object , zval * offset , int type TSRMLS_DC)"		1308208	0					
ANR	1308210	CompoundStatement		433:0:15154:15228	1308208	0					
ANR	1308211	Statement	return	434:1:15157:15162	1308208	0	True				
ANR	1308212	Statement	spl_array_read_dimension_ex	434:8:15164:15190	1308208	1	True				
ANR	1308213	Statement	(	434:35:15191:15191	1308208	2	True				
ANR	1308214	Statement	1	434:36:15192:15192	1308208	3	True				
ANR	1308215	Statement	","	434:37:15193:15193	1308208	4	True				
ANR	1308216	Statement	object	434:39:15195:15200	1308208	5	True				
ANR	1308217	Statement	","	434:45:15201:15201	1308208	6	True				
ANR	1308218	Statement	offset	434:47:15203:15208	1308208	7	True				
ANR	1308219	Statement	","	434:53:15209:15209	1308208	8	True				
ANR	1308220	Statement	type	434:55:15211:15214	1308208	9	True				
ANR	1308221	Statement	TSRMLS_CC	434:60:15216:15224	1308208	10	True				
ANR	1308222	Statement	)	434:69:15225:15225	1308208	11	True				
ANR	1308223	ExpressionStatement		434:70:15226:15226	1308208	12	True				
ANR	1308224	ReturnType	static zval *		1308208	1					
ANR	1308225	Identifier	spl_array_read_dimension		1308208	2					
ANR	1308226	ParameterList	"zval * object , zval * offset , int type TSRMLS_DC"		1308208	3					
ANR	1308227	Parameter	zval * object	432:38:15096:15107	1308208	0	True				
ANR	1308228	ParameterType	zval *		1308208	0					
ANR	1308229	Identifier	object		1308208	1					
ANR	1308230	Parameter	zval * offset	432:52:15110:15121	1308208	1	True				
ANR	1308231	ParameterType	zval *		1308208	0					
ANR	1308232	Identifier	offset		1308208	1					
ANR	1308233	Parameter	int type TSRMLS_DC	432:66:15124:15141	1308208	2	True				
ANR	1308234	ParameterType	int type		1308208	0					
ANR	1308235	Identifier	TSRMLS_DC		1308208	1					
ANR	1308236	CFGEntryNode	ENTRY		1308208		True				
ANR	1308237	CFGExitNode	EXIT		1308208		True				
ANR	1308238	Symbol	offset		1308208						
ANR	1308239	Symbol	TSRMLS_DC		1308208						
ANR	1308240	Symbol	object		1308208						
ANR	1308241	DeclStmt									
ANR	1308242	Decl							spl_array_object	spl_array_object *	intern
ANR	1308243	DeclStmt									
ANR	1308244	Decl							long	long	index
ANR	1308245	DeclStmt									
ANR	1308246	Decl							HashTable	HashTable *	ht
ANR	1308247	DeclStmt									
ANR	1308248	Decl							spl_array_object	spl_array_object *	intern
ANR	1308249	DeclStmt									
ANR	1308250	Decl							long	long	index
ANR	1308251	DeclStmt									
ANR	1308252	Decl							HashTable	HashTable *	ht
ANR	1308253	DeclStmt									
ANR	1308254	Decl							spl_array_object	spl_array_object *	obj
ANR	1308255	DeclStmt									
ANR	1308256	Decl							zend_property_info	zend_property_info *	property_info
ANR	1308257	Function	spl_array_has_dimension_ex	598:0:20224:22085							
ANR	1308258	FunctionDef	"spl_array_has_dimension_ex (int check_inherited , zval * object , zval * offset , int check_empty TSRMLS_DC)"		1308257	0					
ANR	1308259	CompoundStatement		599:0:20348:22085	1308257	0					
ANR	1308260	Statement	spl_array_object	600:1:20351:20366	1308257	0	True				
ANR	1308261	Statement	*	600:18:20368:20368	1308257	1	True				
ANR	1308262	Statement	intern	600:19:20369:20374	1308257	2	True				
ANR	1308263	Statement	=	600:26:20376:20376	1308257	3	True				
ANR	1308264	Statement	(	600:28:20378:20378	1308257	4	True				
ANR	1308265	Statement	spl_array_object	600:29:20379:20394	1308257	5	True				
ANR	1308266	Statement	*	600:45:20395:20395	1308257	6	True				
ANR	1308267	Statement	)	600:46:20396:20396	1308257	7	True				
ANR	1308268	Statement	zend_object_store_get_object	600:47:20397:20424	1308257	8	True				
ANR	1308269	Statement	(	600:75:20425:20425	1308257	9	True				
ANR	1308270	Statement	object	600:76:20426:20431	1308257	10	True				
ANR	1308271	Statement	TSRMLS_CC	600:83:20433:20441	1308257	11	True				
ANR	1308272	Statement	)	600:92:20442:20442	1308257	12	True				
ANR	1308273	ExpressionStatement		600:93:20443:20443	1308257	13	True				
ANR	1308274	IdentifierDeclStatement	long index ;	601:1:20446:20456	1308257	14	True				
ANR	1308275	IdentifierDecl	index		1308257	0					
ANR	1308276	IdentifierDeclType	long		1308257	0					
ANR	1308277	Identifier	index		1308257	1					
ANR	1308278	IdentifierDeclStatement	"zval * rv , * value = NULL , * * tmp ;"	602:1:20459:20489	1308257	15	True				
ANR	1308279	IdentifierDecl	* rv		1308257	0					
ANR	1308280	IdentifierDeclType	zval *		1308257	0					
ANR	1308281	Identifier	rv		1308257	1					
ANR	1308282	IdentifierDecl	* value = NULL		1308257	1					
ANR	1308283	IdentifierDeclType	zval *		1308257	0					
ANR	1308284	Identifier	value		1308257	1					
ANR	1308285	AssignmentExpression	* value = NULL		1308257	2		=			
ANR	1308286	Identifier	NULL		1308257	0					
ANR	1308287	Identifier	NULL		1308257	1					
ANR	1308288	IdentifierDecl	* * tmp		1308257	2					
ANR	1308289	IdentifierDeclType	zval * *		1308257	0					
ANR	1308290	Identifier	tmp		1308257	1					
ANR	1308291	IfStatement	if ( check_inherited && intern -> fptr_offset_has )		1308257	16					
ANR	1308292	Condition	check_inherited && intern -> fptr_offset_has	604:5:20497:20538	1308257	0	True				
ANR	1308293	AndExpression	check_inherited && intern -> fptr_offset_has		1308257	0		&&			
ANR	1308294	Identifier	check_inherited		1308257	0					
ANR	1308295	PtrMemberAccess	intern -> fptr_offset_has		1308257	1					
ANR	1308296	Identifier	intern		1308257	0					
ANR	1308297	Identifier	fptr_offset_has		1308257	1					
ANR	1308298	CompoundStatement		7:2:196:221	1308257	1					
ANR	1308299	IdentifierDeclStatement	zval * offset_tmp = offset ;	605:2:20545:20570	1308257	0	True				
ANR	1308300	IdentifierDecl	* offset_tmp = offset		1308257	0					
ANR	1308301	IdentifierDeclType	zval *		1308257	0					
ANR	1308302	Identifier	offset_tmp		1308257	1					
ANR	1308303	AssignmentExpression	* offset_tmp = offset		1308257	2		=			
ANR	1308304	Identifier	offset		1308257	0					
ANR	1308305	Identifier	offset		1308257	1					
ANR	1308306	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset_tmp )	606:2:20574:20605	1308257	1	True				
ANR	1308307	CallExpression	SEPARATE_ARG_IF_REF ( offset_tmp )		1308257	0					
ANR	1308308	Callee	SEPARATE_ARG_IF_REF		1308257	0					
ANR	1308309	Identifier	SEPARATE_ARG_IF_REF		1308257	0					
ANR	1308310	ArgumentList	offset_tmp		1308257	1					
ANR	1308311	Argument	offset_tmp		1308257	0					
ANR	1308312	Identifier	offset_tmp		1308257	0					
ANR	1308313	ExpressionStatement	"zend_call_method_with_1_params ( & object , Z_OBJCE_P ( object ) , & intern -> fptr_offset_has , ""offsetExists"" , & rv , offset_tmp )"	607:2:20609:20726	1308257	2	True				
ANR	1308314	CallExpression	"zend_call_method_with_1_params ( & object , Z_OBJCE_P ( object ) , & intern -> fptr_offset_has , ""offsetExists"" , & rv , offset_tmp )"		1308257	0					
ANR	1308315	Callee	zend_call_method_with_1_params		1308257	0					
ANR	1308316	Identifier	zend_call_method_with_1_params		1308257	0					
ANR	1308317	ArgumentList	& object		1308257	1					
ANR	1308318	Argument	& object		1308257	0					
ANR	1308319	UnaryOperationExpression	& object		1308257	0					
ANR	1308320	UnaryOperator	&		1308257	0					
ANR	1308321	Identifier	object		1308257	1					
ANR	1308322	Argument	Z_OBJCE_P ( object )		1308257	1					
ANR	1308323	CallExpression	Z_OBJCE_P ( object )		1308257	0					
ANR	1308324	Callee	Z_OBJCE_P		1308257	0					
ANR	1308325	Identifier	Z_OBJCE_P		1308257	0					
ANR	1308326	ArgumentList	object		1308257	1					
ANR	1308327	Argument	object		1308257	0					
ANR	1308328	Identifier	object		1308257	0					
ANR	1308329	Argument	& intern -> fptr_offset_has		1308257	2					
ANR	1308330	UnaryOperationExpression	& intern -> fptr_offset_has		1308257	0					
ANR	1308331	UnaryOperator	&		1308257	0					
ANR	1308332	PtrMemberAccess	intern -> fptr_offset_has		1308257	1					
ANR	1308333	Identifier	intern		1308257	0					
ANR	1308334	Identifier	fptr_offset_has		1308257	1					
ANR	1308335	Argument	"""offsetExists"""		1308257	3					
ANR	1308336	PrimaryExpression	"""offsetExists"""		1308257	0					
ANR	1308337	Argument	& rv		1308257	4					
ANR	1308338	UnaryOperationExpression	& rv		1308257	0					
ANR	1308339	UnaryOperator	&		1308257	0					
ANR	1308340	Identifier	rv		1308257	1					
ANR	1308341	Argument	offset_tmp		1308257	5					
ANR	1308342	Identifier	offset_tmp		1308257	0					
ANR	1308343	ExpressionStatement	zval_ptr_dtor ( & offset_tmp )	608:2:20730:20756	1308257	3	True				
ANR	1308344	CallExpression	zval_ptr_dtor ( & offset_tmp )		1308257	0					
ANR	1308345	Callee	zval_ptr_dtor		1308257	0					
ANR	1308346	Identifier	zval_ptr_dtor		1308257	0					
ANR	1308347	ArgumentList	& offset_tmp		1308257	1					
ANR	1308348	Argument	& offset_tmp		1308257	0					
ANR	1308349	UnaryOperationExpression	& offset_tmp		1308257	0					
ANR	1308350	UnaryOperator	&		1308257	0					
ANR	1308351	Identifier	offset_tmp		1308257	1					
ANR	1308352	IfStatement	if ( rv && zend_is_true ( rv ) )		1308257	4					
ANR	1308353	Condition	rv && zend_is_true ( rv )	610:6:20765:20786	1308257	0	True				
ANR	1308354	AndExpression	rv && zend_is_true ( rv )		1308257	0		&&			
ANR	1308355	Identifier	rv		1308257	0					
ANR	1308356	CallExpression	zend_is_true ( rv )		1308257	1					
ANR	1308357	Callee	zend_is_true		1308257	0					
ANR	1308358	Identifier	zend_is_true		1308257	0					
ANR	1308359	ArgumentList	rv		1308257	1					
ANR	1308360	Argument	rv		1308257	0					
ANR	1308361	Identifier	rv		1308257	0					
ANR	1308362	CompoundStatement		12:30:440:440	1308257	1					
ANR	1308363	ExpressionStatement	zval_ptr_dtor ( & rv )	611:3:20794:20812	1308257	0	True				
ANR	1308364	CallExpression	zval_ptr_dtor ( & rv )		1308257	0					
ANR	1308365	Callee	zval_ptr_dtor		1308257	0					
ANR	1308366	Identifier	zval_ptr_dtor		1308257	0					
ANR	1308367	ArgumentList	& rv		1308257	1					
ANR	1308368	Argument	& rv		1308257	0					
ANR	1308369	UnaryOperationExpression	& rv		1308257	0					
ANR	1308370	UnaryOperator	&		1308257	0					
ANR	1308371	Identifier	rv		1308257	1					
ANR	1308372	IfStatement	if ( check_empty != 1 )		1308257	1					
ANR	1308373	Condition	check_empty != 1	612:7:20821:20836	1308257	0	True				
ANR	1308374	EqualityExpression	check_empty != 1		1308257	0		!=			
ANR	1308375	Identifier	check_empty		1308257	0					
ANR	1308376	PrimaryExpression	1		1308257	1					
ANR	1308377	CompoundStatement		14:25:490:490	1308257	1					
ANR	1308378	ReturnStatement	return 1 ;	613:4:20845:20853	1308257	0	True				
ANR	1308379	PrimaryExpression	1		1308257	0					
ANR	1308380	ElseStatement	else		1308257	0					
ANR	1308381	IfStatement	if ( intern -> fptr_offset_get )		1308257	0					
ANR	1308382	Condition	intern -> fptr_offset_get	614:14:20869:20891	1308257	0	True				
ANR	1308383	PtrMemberAccess	intern -> fptr_offset_get		1308257	0					
ANR	1308384	Identifier	intern		1308257	0					
ANR	1308385	Identifier	fptr_offset_get		1308257	1					
ANR	1308386	CompoundStatement		16:39:545:545	1308257	1					
ANR	1308387	Statement	value	615:4:20900:20904	1308257	0	True				
ANR	1308388	Statement	=	615:10:20906:20906	1308257	1	True				
ANR	1308389	Statement	spl_array_read_dimension_ex	615:12:20908:20934	1308257	2	True				
ANR	1308390	Statement	(	615:39:20935:20935	1308257	3	True				
ANR	1308391	Statement	1	615:40:20936:20936	1308257	4	True				
ANR	1308392	Statement	","	615:41:20937:20937	1308257	5	True				
ANR	1308393	Statement	object	615:43:20939:20944	1308257	6	True				
ANR	1308394	Statement	","	615:49:20945:20945	1308257	7	True				
ANR	1308395	Statement	offset	615:51:20947:20952	1308257	8	True				
ANR	1308396	Statement	","	615:57:20953:20953	1308257	9	True				
ANR	1308397	Statement	BP_VAR_R	615:59:20955:20962	1308257	10	True				
ANR	1308398	Statement	TSRMLS_CC	615:68:20964:20972	1308257	11	True				
ANR	1308399	Statement	)	615:77:20973:20973	1308257	12	True				
ANR	1308400	ExpressionStatement		615:78:20974:20974	1308257	13	True				
ANR	1308401	ElseStatement	else		1308257	0					
ANR	1308402	CompoundStatement		19:9:641:641	1308257	0					
ANR	1308403	IfStatement	if ( rv )		1308257	0					
ANR	1308404	Condition	rv	618:7:20999:21000	1308257	0	True				
ANR	1308405	Identifier	rv		1308257	0					
ANR	1308406	CompoundStatement		20:11:654:654	1308257	1					
ANR	1308407	ExpressionStatement	zval_ptr_dtor ( & rv )	619:4:21009:21027	1308257	0	True				
ANR	1308408	CallExpression	zval_ptr_dtor ( & rv )		1308257	0					
ANR	1308409	Callee	zval_ptr_dtor		1308257	0					
ANR	1308410	Identifier	zval_ptr_dtor		1308257	0					
ANR	1308411	ArgumentList	& rv		1308257	1					
ANR	1308412	Argument	& rv		1308257	0					
ANR	1308413	UnaryOperationExpression	& rv		1308257	0					
ANR	1308414	UnaryOperator	&		1308257	0					
ANR	1308415	Identifier	rv		1308257	1					
ANR	1308416	ReturnStatement	return 0 ;	621:3:21037:21045	1308257	1	True				
ANR	1308417	PrimaryExpression	0		1308257	0					
ANR	1308418	IfStatement	if ( ! value )		1308257	17					
ANR	1308419	Condition	! value	625:5:21060:21065	1308257	0	True				
ANR	1308420	UnaryOperationExpression	! value		1308257	0					
ANR	1308421	UnaryOperator	!		1308257	0					
ANR	1308422	Identifier	value		1308257	1					
ANR	1308423	CompoundStatement		27:13:719:719	1308257	1					
ANR	1308424	Statement	HashTable	626:2:21072:21080	1308257	0	True				
ANR	1308425	Statement	*	626:12:21082:21082	1308257	1	True				
ANR	1308426	Statement	ht	626:13:21083:21084	1308257	2	True				
ANR	1308427	Statement	=	626:16:21086:21086	1308257	3	True				
ANR	1308428	Statement	spl_array_get_hash_table	626:18:21088:21111	1308257	4	True				
ANR	1308429	Statement	(	626:42:21112:21112	1308257	5	True				
ANR	1308430	Statement	intern	626:43:21113:21118	1308257	6	True				
ANR	1308431	Statement	","	626:49:21119:21119	1308257	7	True				
ANR	1308432	Statement	0	626:51:21121:21121	1308257	8	True				
ANR	1308433	Statement	TSRMLS_CC	626:53:21123:21131	1308257	9	True				
ANR	1308434	Statement	)	626:62:21132:21132	1308257	10	True				
ANR	1308435	ExpressionStatement		626:63:21133:21133	1308257	11	True				
ANR	1308436	SwitchStatement	switch ( Z_TYPE_P ( offset ) )		1308257	12					
ANR	1308437	Condition	Z_TYPE_P ( offset )	628:9:21145:21160	1308257	0	True				
ANR	1308438	CallExpression	Z_TYPE_P ( offset )		1308257	0					
ANR	1308439	Callee	Z_TYPE_P		1308257	0					
ANR	1308440	Identifier	Z_TYPE_P		1308257	0					
ANR	1308441	ArgumentList	offset		1308257	1					
ANR	1308442	Argument	offset		1308257	0					
ANR	1308443	Identifier	offset		1308257	0					
ANR	1308444	CompoundStatement		30:27:814:814	1308257	1					
ANR	1308445	Label	case IS_STRING :	629:3:21168:21182	1308257	0	True				
ANR	1308446	Identifier	IS_STRING		1308257	0					
ANR	1308447	IfStatement	"if ( zend_symtable_find ( ht , Z_STRVAL_P ( offset ) , Z_STRLEN_P ( offset ) + 1 , ( void * * ) & tmp ) != FAILURE )"		1308257	1					
ANR	1308448	Condition	"zend_symtable_find ( ht , Z_STRVAL_P ( offset ) , Z_STRLEN_P ( offset ) + 1 , ( void * * ) & tmp ) != FAILURE"	630:8:21192:21282	1308257	0	True				
ANR	1308449	EqualityExpression	"zend_symtable_find ( ht , Z_STRVAL_P ( offset ) , Z_STRLEN_P ( offset ) + 1 , ( void * * ) & tmp ) != FAILURE"		1308257	0		!=			
ANR	1308450	CallExpression	"zend_symtable_find ( ht , Z_STRVAL_P ( offset ) , Z_STRLEN_P ( offset ) + 1 , ( void * * ) & tmp )"		1308257	0					
ANR	1308451	Callee	zend_symtable_find		1308257	0					
ANR	1308452	Identifier	zend_symtable_find		1308257	0					
ANR	1308453	ArgumentList	ht		1308257	1					
ANR	1308454	Argument	ht		1308257	0					
ANR	1308455	Identifier	ht		1308257	0					
ANR	1308456	Argument	Z_STRVAL_P ( offset )		1308257	1					
ANR	1308457	CallExpression	Z_STRVAL_P ( offset )		1308257	0					
ANR	1308458	Callee	Z_STRVAL_P		1308257	0					
ANR	1308459	Identifier	Z_STRVAL_P		1308257	0					
ANR	1308460	ArgumentList	offset		1308257	1					
ANR	1308461	Argument	offset		1308257	0					
ANR	1308462	Identifier	offset		1308257	0					
ANR	1308463	Argument	Z_STRLEN_P ( offset ) + 1		1308257	2					
ANR	1308464	AdditiveExpression	Z_STRLEN_P ( offset ) + 1		1308257	0		+			
ANR	1308465	CallExpression	Z_STRLEN_P ( offset )		1308257	0					
ANR	1308466	Callee	Z_STRLEN_P		1308257	0					
ANR	1308467	Identifier	Z_STRLEN_P		1308257	0					
ANR	1308468	ArgumentList	offset		1308257	1					
ANR	1308469	Argument	offset		1308257	0					
ANR	1308470	Identifier	offset		1308257	0					
ANR	1308471	PrimaryExpression	1		1308257	1					
ANR	1308472	Argument	( void * * ) & tmp		1308257	3					
ANR	1308473	CastExpression	( void * * ) & tmp		1308257	0					
ANR	1308474	CastTarget	void * *		1308257	0					
ANR	1308475	UnaryOperationExpression	& tmp		1308257	1					
ANR	1308476	UnaryOperator	&		1308257	0					
ANR	1308477	Identifier	tmp		1308257	1					
ANR	1308478	Identifier	FAILURE		1308257	1					
ANR	1308479	CompoundStatement		32:101:936:936	1308257	1					
ANR	1308480	IfStatement	if ( check_empty == 2 )		1308257	0					
ANR	1308481	Condition	check_empty == 2	631:9:21296:21311	1308257	0	True				
ANR	1308482	EqualityExpression	check_empty == 2		1308257	0		==			
ANR	1308483	Identifier	check_empty		1308257	0					
ANR	1308484	PrimaryExpression	2		1308257	1					
ANR	1308485	CompoundStatement		33:27:965:965	1308257	1					
ANR	1308486	ReturnStatement	return 1 ;	632:6:21322:21330	1308257	0	True				
ANR	1308487	PrimaryExpression	1		1308257	0					
ANR	1308488	ElseStatement	else		1308257	0					
ANR	1308489	CompoundStatement		36:11:1001:1001	1308257	0					
ANR	1308490	ReturnStatement	return 0 ;	635:5:21357:21365	1308257	0	True				
ANR	1308491	PrimaryExpression	0		1308257	0					
ANR	1308492	BreakStatement	break ;	637:4:21377:21382	1308257	2	True				
ANR	1308493	Label	case IS_DOUBLE :	639:3:21388:21402	1308257	3	True				
ANR	1308494	Identifier	IS_DOUBLE		1308257	0					
ANR	1308495	Label	case IS_RESOURCE :	640:3:21407:21423	1308257	4	True				
ANR	1308496	Identifier	IS_RESOURCE		1308257	0					
ANR	1308497	Label	case IS_BOOL :	641:3:21428:21440	1308257	5	True				
ANR	1308498	Identifier	IS_BOOL		1308257	0					
ANR	1308499	Label	case IS_LONG :	642:3:21445:21457	1308257	6	True				
ANR	1308500	Identifier	IS_LONG		1308257	0					
ANR	1308501	IfStatement	if ( offset -> type == IS_DOUBLE )		1308257	7					
ANR	1308502	Condition	offset -> type == IS_DOUBLE	643:8:21467:21491	1308257	0	True				
ANR	1308503	EqualityExpression	offset -> type == IS_DOUBLE		1308257	0		==			
ANR	1308504	PtrMemberAccess	offset -> type		1308257	0					
ANR	1308505	Identifier	offset		1308257	0					
ANR	1308506	Identifier	type		1308257	1					
ANR	1308507	Identifier	IS_DOUBLE		1308257	1					
ANR	1308508	CompoundStatement		45:35:1145:1145	1308257	1					
ANR	1308509	ExpressionStatement	index = ( long ) Z_DVAL_P ( offset )	644:5:21501:21531	1308257	0	True				
ANR	1308510	AssignmentExpression	index = ( long ) Z_DVAL_P ( offset )		1308257	0		=			
ANR	1308511	Identifier	index		1308257	0					
ANR	1308512	CastExpression	( long ) Z_DVAL_P ( offset )		1308257	1					
ANR	1308513	CastTarget	long		1308257	0					
ANR	1308514	CallExpression	Z_DVAL_P ( offset )		1308257	1					
ANR	1308515	Callee	Z_DVAL_P		1308257	0					
ANR	1308516	Identifier	Z_DVAL_P		1308257	0					
ANR	1308517	ArgumentList	offset		1308257	1					
ANR	1308518	Argument	offset		1308257	0					
ANR	1308519	Identifier	offset		1308257	0					
ANR	1308520	ElseStatement	else		1308257	0					
ANR	1308521	CompoundStatement		47:11:1195:1195	1308257	0					
ANR	1308522	ExpressionStatement	index = Z_LVAL_P ( offset )	646:5:21551:21575	1308257	0	True				
ANR	1308523	AssignmentExpression	index = Z_LVAL_P ( offset )		1308257	0		=			
ANR	1308524	Identifier	index		1308257	0					
ANR	1308525	CallExpression	Z_LVAL_P ( offset )		1308257	1					
ANR	1308526	Callee	Z_LVAL_P		1308257	0					
ANR	1308527	Identifier	Z_LVAL_P		1308257	0					
ANR	1308528	ArgumentList	offset		1308257	1					
ANR	1308529	Argument	offset		1308257	0					
ANR	1308530	Identifier	offset		1308257	0					
ANR	1308531	IfStatement	"if ( zend_hash_index_find ( ht , index , ( void * * ) & tmp ) != FAILURE )"		1308257	8					
ANR	1308532	Condition	"zend_hash_index_find ( ht , index , ( void * * ) & tmp ) != FAILURE"	648:8:21591:21647	1308257	0	True				
ANR	1308533	EqualityExpression	"zend_hash_index_find ( ht , index , ( void * * ) & tmp ) != FAILURE"		1308257	0		!=			
ANR	1308534	CallExpression	"zend_hash_index_find ( ht , index , ( void * * ) & tmp )"		1308257	0					
ANR	1308535	Callee	zend_hash_index_find		1308257	0					
ANR	1308536	Identifier	zend_hash_index_find		1308257	0					
ANR	1308537	ArgumentList	ht		1308257	1					
ANR	1308538	Argument	ht		1308257	0					
ANR	1308539	Identifier	ht		1308257	0					
ANR	1308540	Argument	index		1308257	1					
ANR	1308541	Identifier	index		1308257	0					
ANR	1308542	Argument	( void * * ) & tmp		1308257	2					
ANR	1308543	CastExpression	( void * * ) & tmp		1308257	0					
ANR	1308544	CastTarget	void * *		1308257	0					
ANR	1308545	UnaryOperationExpression	& tmp		1308257	1					
ANR	1308546	UnaryOperator	&		1308257	0					
ANR	1308547	Identifier	tmp		1308257	1					
ANR	1308548	Identifier	FAILURE		1308257	1					
ANR	1308549	CompoundStatement		50:67:1301:1301	1308257	1					
ANR	1308550	IfStatement	if ( check_empty == 2 )		1308257	0					
ANR	1308551	Condition	check_empty == 2	649:9:21661:21676	1308257	0	True				
ANR	1308552	EqualityExpression	check_empty == 2		1308257	0		==			
ANR	1308553	Identifier	check_empty		1308257	0					
ANR	1308554	PrimaryExpression	2		1308257	1					
ANR	1308555	CompoundStatement		51:27:1330:1330	1308257	1					
ANR	1308556	ReturnStatement	return 1 ;	650:6:21687:21695	1308257	0	True				
ANR	1308557	PrimaryExpression	1		1308257	0					
ANR	1308558	ElseStatement	else		1308257	0					
ANR	1308559	CompoundStatement		54:11:1366:1366	1308257	0					
ANR	1308560	ReturnStatement	return 0 ;	653:5:21722:21730	1308257	0	True				
ANR	1308561	PrimaryExpression	0		1308257	0					
ANR	1308562	BreakStatement	break ;	655:4:21742:21747	1308257	9	True				
ANR	1308563	Label	default :	657:3:21753:21760	1308257	10	True				
ANR	1308564	Identifier	default		1308257	0					
ANR	1308565	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal offset type"" )"	658:4:21766:21810	1308257	11	True				
ANR	1308566	CallExpression	"zend_error ( E_WARNING , ""Illegal offset type"" )"		1308257	0					
ANR	1308567	Callee	zend_error		1308257	0					
ANR	1308568	Identifier	zend_error		1308257	0					
ANR	1308569	ArgumentList	E_WARNING		1308257	1					
ANR	1308570	Argument	E_WARNING		1308257	0					
ANR	1308571	Identifier	E_WARNING		1308257	0					
ANR	1308572	Argument	"""Illegal offset type"""		1308257	1					
ANR	1308573	PrimaryExpression	"""Illegal offset type"""		1308257	0					
ANR	1308574	ReturnStatement	return 0 ;	659:4:21816:21824	1308257	12	True				
ANR	1308575	PrimaryExpression	0		1308257	0					
ANR	1308576	IfStatement	if ( check_empty && check_inherited && intern -> fptr_offset_get )		1308257	13					
ANR	1308577	Condition	check_empty && check_inherited && intern -> fptr_offset_get	662:6:21837:21893	1308257	0	True				
ANR	1308578	AndExpression	check_empty && check_inherited && intern -> fptr_offset_get		1308257	0		&&			
ANR	1308579	Identifier	check_empty		1308257	0					
ANR	1308580	AndExpression	check_inherited && intern -> fptr_offset_get		1308257	1		&&			
ANR	1308581	Identifier	check_inherited		1308257	0					
ANR	1308582	PtrMemberAccess	intern -> fptr_offset_get		1308257	1					
ANR	1308583	Identifier	intern		1308257	0					
ANR	1308584	Identifier	fptr_offset_get		1308257	1					
ANR	1308585	CompoundStatement		64:65:1547:1547	1308257	1					
ANR	1308586	Statement	value	663:3:21901:21905	1308257	0	True				
ANR	1308587	Statement	=	663:9:21907:21907	1308257	1	True				
ANR	1308588	Statement	spl_array_read_dimension_ex	663:11:21909:21935	1308257	2	True				
ANR	1308589	Statement	(	663:38:21936:21936	1308257	3	True				
ANR	1308590	Statement	1	663:39:21937:21937	1308257	4	True				
ANR	1308591	Statement	","	663:40:21938:21938	1308257	5	True				
ANR	1308592	Statement	object	663:42:21940:21945	1308257	6	True				
ANR	1308593	Statement	","	663:48:21946:21946	1308257	7	True				
ANR	1308594	Statement	offset	663:50:21948:21953	1308257	8	True				
ANR	1308595	Statement	","	663:56:21954:21954	1308257	9	True				
ANR	1308596	Statement	BP_VAR_R	663:58:21956:21963	1308257	10	True				
ANR	1308597	Statement	TSRMLS_CC	663:67:21965:21973	1308257	11	True				
ANR	1308598	Statement	)	663:76:21974:21974	1308257	12	True				
ANR	1308599	ExpressionStatement		663:77:21975:21975	1308257	13	True				
ANR	1308600	ElseStatement	else		1308257	0					
ANR	1308601	CompoundStatement		66:9:1637:1637	1308257	0					
ANR	1308602	ExpressionStatement	value = * tmp	665:3:21991:22003	1308257	0	True				
ANR	1308603	AssignmentExpression	value = * tmp		1308257	0		=			
ANR	1308604	Identifier	value		1308257	0					
ANR	1308605	UnaryOperationExpression	* tmp		1308257	1					
ANR	1308606	UnaryOperator	*		1308257	0					
ANR	1308607	Identifier	tmp		1308257	1					
ANR	1308608	ReturnStatement	return check_empty ? zend_is_true ( value ) : Z_TYPE_P ( value ) != IS_NULL ;	669:1:22014:22083	1308257	18	True				
ANR	1308609	ConditionalExpression	check_empty ? zend_is_true ( value ) : Z_TYPE_P ( value ) != IS_NULL		1308257	0					
ANR	1308610	Condition	check_empty		1308257	0					
ANR	1308611	Identifier	check_empty		1308257	0					
ANR	1308612	CallExpression	zend_is_true ( value )		1308257	1					
ANR	1308613	Callee	zend_is_true		1308257	0					
ANR	1308614	Identifier	zend_is_true		1308257	0					
ANR	1308615	ArgumentList	value		1308257	1					
ANR	1308616	Argument	value		1308257	0					
ANR	1308617	Identifier	value		1308257	0					
ANR	1308618	EqualityExpression	Z_TYPE_P ( value ) != IS_NULL		1308257	2		!=			
ANR	1308619	CallExpression	Z_TYPE_P ( value )		1308257	0					
ANR	1308620	Callee	Z_TYPE_P		1308257	0					
ANR	1308621	Identifier	Z_TYPE_P		1308257	0					
ANR	1308622	ArgumentList	value		1308257	1					
ANR	1308623	Argument	value		1308257	0					
ANR	1308624	Identifier	value		1308257	0					
ANR	1308625	Identifier	IS_NULL		1308257	1					
ANR	1308626	ReturnType	static int		1308257	1					
ANR	1308627	Identifier	spl_array_has_dimension_ex		1308257	2					
ANR	1308628	ParameterList	"int check_inherited , zval * object , zval * offset , int check_empty TSRMLS_DC"		1308257	3					
ANR	1308629	Parameter	int check_inherited	598:38:20262:20280	1308257	0	True				
ANR	1308630	ParameterType	int		1308257	0					
ANR	1308631	Identifier	check_inherited		1308257	1					
ANR	1308632	Parameter	zval * object	598:59:20283:20294	1308257	1	True				
ANR	1308633	ParameterType	zval *		1308257	0					
ANR	1308634	Identifier	object		1308257	1					
ANR	1308635	Parameter	zval * offset	598:73:20297:20308	1308257	2	True				
ANR	1308636	ParameterType	zval *		1308257	0					
ANR	1308637	Identifier	offset		1308257	1					
ANR	1308638	Parameter	int check_empty TSRMLS_DC	598:87:20311:20335	1308257	3	True				
ANR	1308639	ParameterType	int check_empty		1308257	0					
ANR	1308640	Identifier	TSRMLS_DC		1308257	1					
ANR	1308641	CFGEntryNode	ENTRY		1308257		True				
ANR	1308642	CFGExitNode	EXIT		1308257		True				
ANR	1308643	Symbol	* tmp		1308257						
ANR	1308644	Symbol	intern -> fptr_offset_has		1308257						
ANR	1308645	Symbol	offset_tmp		1308257						
ANR	1308646	Symbol	rv		1308257						
ANR	1308647	Symbol	intern -> fptr_offset_get		1308257						
ANR	1308648	Symbol	zend_symtable_find		1308257						
ANR	1308649	Symbol	ht		1308257						
ANR	1308650	Symbol	TSRMLS_DC		1308257						
ANR	1308651	Symbol	& object		1308257						
ANR	1308652	Symbol	E_WARNING		1308257						
ANR	1308653	Symbol	IS_NULL		1308257						
ANR	1308654	Symbol	tmp		1308257						
ANR	1308655	Symbol	Z_OBJCE_P		1308257						
ANR	1308656	Symbol	Z_STRLEN_P		1308257						
ANR	1308657	Symbol	value		1308257						
ANR	1308658	Symbol	* intern		1308257						
ANR	1308659	Symbol	zend_hash_index_find		1308257						
ANR	1308660	Symbol	check_empty		1308257						
ANR	1308661	Symbol	NULL		1308257						
ANR	1308662	Symbol	intern		1308257						
ANR	1308663	Symbol	offset		1308257						
ANR	1308664	Symbol	index		1308257						
ANR	1308665	Symbol	Z_TYPE_P		1308257						
ANR	1308666	Symbol	Z_STRVAL_P		1308257						
ANR	1308667	Symbol	FAILURE		1308257						
ANR	1308668	Symbol	Z_DVAL_P		1308257						
ANR	1308669	Symbol	& rv		1308257						
ANR	1308670	Symbol	Z_LVAL_P		1308257						
ANR	1308671	Symbol	& intern -> fptr_offset_has		1308257						
ANR	1308672	Symbol	* offset		1308257						
ANR	1308673	Symbol	IS_DOUBLE		1308257						
ANR	1308674	Symbol	& tmp		1308257						
ANR	1308675	Symbol	& offset_tmp		1308257						
ANR	1308676	Symbol	zend_is_true		1308257						
ANR	1308677	Symbol	check_inherited		1308257						
ANR	1308678	Symbol	object		1308257						
ANR	1308679	Symbol	offset -> type		1308257						
ANR	1308680	Function	spl_array_has_dimension	672:0:22098:22278							
ANR	1308681	FunctionDef	"spl_array_has_dimension (zval * object , zval * offset , int check_empty TSRMLS_DC)"		1308680	0					
ANR	1308682	CompoundStatement		673:0:22198:22278	1308680	0					
ANR	1308683	Statement	return	674:1:22201:22206	1308680	0	True				
ANR	1308684	Statement	spl_array_has_dimension_ex	674:8:22208:22233	1308680	1	True				
ANR	1308685	Statement	(	674:34:22234:22234	1308680	2	True				
ANR	1308686	Statement	1	674:35:22235:22235	1308680	3	True				
ANR	1308687	Statement	","	674:36:22236:22236	1308680	4	True				
ANR	1308688	Statement	object	674:38:22238:22243	1308680	5	True				
ANR	1308689	Statement	","	674:44:22244:22244	1308680	6	True				
ANR	1308690	Statement	offset	674:46:22246:22251	1308680	7	True				
ANR	1308691	Statement	","	674:52:22252:22252	1308680	8	True				
ANR	1308692	Statement	check_empty	674:54:22254:22264	1308680	9	True				
ANR	1308693	Statement	TSRMLS_CC	674:66:22266:22274	1308680	10	True				
ANR	1308694	Statement	)	674:75:22275:22275	1308680	11	True				
ANR	1308695	ExpressionStatement		674:76:22276:22276	1308680	12	True				
ANR	1308696	ReturnType	static int		1308680	1					
ANR	1308697	Identifier	spl_array_has_dimension		1308680	2					
ANR	1308698	ParameterList	"zval * object , zval * offset , int check_empty TSRMLS_DC"		1308680	3					
ANR	1308699	Parameter	zval * object	672:35:22133:22144	1308680	0	True				
ANR	1308700	ParameterType	zval *		1308680	0					
ANR	1308701	Identifier	object		1308680	1					
ANR	1308702	Parameter	zval * offset	672:49:22147:22158	1308680	1	True				
ANR	1308703	ParameterType	zval *		1308680	0					
ANR	1308704	Identifier	offset		1308680	1					
ANR	1308705	Parameter	int check_empty TSRMLS_DC	672:63:22161:22185	1308680	2	True				
ANR	1308706	ParameterType	int check_empty		1308680	0					
ANR	1308707	Identifier	TSRMLS_DC		1308680	1					
ANR	1308708	CFGEntryNode	ENTRY		1308680		True				
ANR	1308709	CFGExitNode	EXIT		1308680		True				
ANR	1308710	Symbol	offset		1308680						
ANR	1308711	Symbol	TSRMLS_DC		1308680						
ANR	1308712	Symbol	object		1308680						
ANR	1308713	DeclStmt									
ANR	1308714	Decl							zval	zval *	index
ANR	1308715	DeclStmt									
ANR	1308716	Decl							zval	zval *	index
ANR	1308717	Decl							zval	zval *	value
ANR	1308718	DeclStmt									
ANR	1308719	Decl							zval	zval *	index
ANR	1308720	Decl							zval	zval *	value
ANR	1308721	DeclStmt									
ANR	1308722	Decl							spl_array_object	spl_array_object *	intern
ANR	1308723	DeclStmt									
ANR	1308724	Decl							HashTable	HashTable *	aht
ANR	1308725	DeclStmt									
ANR	1308726	Decl							zval	zval *	value
ANR	1308727	DeclStmt									
ANR	1308728	Decl							zval	zval *	index
ANR	1308729	DeclStmt									
ANR	1308730	Decl							zval	zval *	object
ANR	1308731	Decl							zval	zval *	tmp
ANR	1308732	DeclStmt									
ANR	1308733	Decl							spl_array_object	spl_array_object *	intern
ANR	1308734	DeclStmt									
ANR	1308735	Decl							spl_array_object	spl_array_object *	intern
ANR	1308736	DeclStmt									
ANR	1308737	Decl							HashTable	HashTable *	result
ANR	1308738	DeclStmt									
ANR	1308739	Decl							spl_array_object	spl_array_object *	intern
ANR	1308740	DeclStmt									
ANR	1308741	Decl							zval	zval *	tmp
ANR	1308742	Decl							zval	zval *	storage
ANR	1308743	DeclStmt									
ANR	1308744	Decl							int	int	name_len
ANR	1308745	DeclStmt									
ANR	1308746	Decl							char	char *	zname
ANR	1308747	DeclStmt									
ANR	1308748	Decl							zend_class_entry	zend_class_entry *	base
ANR	1308749	DeclStmt									
ANR	1308750	Decl							spl_array_object	spl_array_object *	intern
ANR	1308751	DeclStmt									
ANR	1308752	Decl							spl_array_object	spl_array_object *	intern
ANR	1308753	DeclStmt									
ANR	1308754	Decl							spl_array_object	spl_array_object *	intern
ANR	1308755	DeclStmt									
ANR	1308756	Decl							spl_array_object	spl_array_object *	intern
ANR	1308757	DeclStmt									
ANR	1308758	Decl							spl_array_object	spl_array_object *	intern
ANR	1308759	DeclStmt									
ANR	1308760	Decl							spl_array_object	spl_array_object *	intern
ANR	1308761	DeclStmt									
ANR	1308762	Decl							HashTable	HashTable *	ht1
ANR	1308763	Decl							HashTable	HashTable *	ht2
ANR	1308764	DeclStmt									
ANR	1308765	Decl							spl_array_object	spl_array_object *	intern1
ANR	1308766	Decl							spl_array_object	spl_array_object *	intern2
ANR	1308767	DeclStmt									
ANR	1308768	Decl							int	int	result
ANR	1308769	DeclStmt									
ANR	1308770	Decl							zval	zval	temp_zv
ANR	1308771	DeclStmt									
ANR	1308772	Decl							char	char *	string_key
ANR	1308773	DeclStmt									
ANR	1308774	Decl							uint	uint	string_length
ANR	1308775	DeclStmt									
ANR	1308776	Decl							ulong	ulong	num_key
ANR	1308777	DeclStmt									
ANR	1308778	Decl							HashTable	HashTable *	aht
ANR	1308779	ClassDef	<unnamed>	1003:8:34053:34139							
ANR	1308780	DeclStmt									
ANR	1308781	Decl							zend_user_iterator	zend_user_iterator	intern
ANR	1308782	DeclStmt									
ANR	1308783	Decl							spl_array_object	spl_array_object *	object
ANR	1308784	DeclStmt									
ANR	1308785	Decl									spl_array_it
ANR	1308786	DeclStmt									
ANR	1308787	Decl							spl_array_it	spl_array_it *	iterator
ANR	1308788	DeclStmt									
ANR	1308789	Decl							spl_array_it	spl_array_it *	iterator
ANR	1308790	DeclStmt									
ANR	1308791	Decl							spl_array_object	spl_array_object *	object
ANR	1308792	DeclStmt									
ANR	1308793	Decl							HashTable	HashTable *	aht
ANR	1308794	DeclStmt									
ANR	1308795	Decl							spl_array_it	spl_array_it *	iterator
ANR	1308796	DeclStmt									
ANR	1308797	Decl							spl_array_object	spl_array_object *	object
ANR	1308798	DeclStmt									
ANR	1308799	Decl							HashTable	HashTable *	aht
ANR	1308800	DeclStmt									
ANR	1308801	Decl							spl_array_it	spl_array_it *	iterator
ANR	1308802	DeclStmt									
ANR	1308803	Decl							spl_array_object	spl_array_object *	object
ANR	1308804	DeclStmt									
ANR	1308805	Decl							HashTable	HashTable *	aht
ANR	1308806	DeclStmt									
ANR	1308807	Decl							spl_array_it	spl_array_it *	iterator
ANR	1308808	DeclStmt									
ANR	1308809	Decl							spl_array_object	spl_array_object *	object
ANR	1308810	DeclStmt									
ANR	1308811	Decl							HashTable	HashTable *	aht
ANR	1308812	DeclStmt									
ANR	1308813	Decl							HashTable	HashTable *	aht
ANR	1308814	DeclStmt									
ANR	1308815	Decl							spl_array_it	spl_array_it *	iterator
ANR	1308816	DeclStmt									
ANR	1308817	Decl							spl_array_object	spl_array_object *	object
ANR	1308818	Function	spl_array_set_array	1132:0:38113:39745							
ANR	1308819	FunctionDef	"spl_array_set_array (zval * object , spl_array_object * intern , zval * * array , long ar_flags , int just_array TSRMLS_DC)"		1308818	0					
ANR	1308820	CompoundStatement		1132:127:38240:39745	1308818	0					
ANR	1308821	IfStatement	if ( Z_TYPE_PP ( array ) == IS_ARRAY )		1308818	0					
ANR	1308822	Condition	Z_TYPE_PP ( array ) == IS_ARRAY	1134:5:38248:38275	1308818	0	True				
ANR	1308823	EqualityExpression	Z_TYPE_PP ( array ) == IS_ARRAY		1308818	0		==			
ANR	1308824	CallExpression	Z_TYPE_PP ( array )		1308818	0					
ANR	1308825	Callee	Z_TYPE_PP		1308818	0					
ANR	1308826	Identifier	Z_TYPE_PP		1308818	0					
ANR	1308827	ArgumentList	array		1308818	1					
ANR	1308828	Argument	array		1308818	0					
ANR	1308829	Identifier	array		1308818	0					
ANR	1308830	Identifier	IS_ARRAY		1308818	1					
ANR	1308831	CompoundStatement		3:35:37:37	1308818	1					
ANR	1308832	ExpressionStatement	SEPARATE_ZVAL_IF_NOT_REF ( array )	1135:2:38282:38313	1308818	0	True				
ANR	1308833	CallExpression	SEPARATE_ZVAL_IF_NOT_REF ( array )		1308818	0					
ANR	1308834	Callee	SEPARATE_ZVAL_IF_NOT_REF		1308818	0					
ANR	1308835	Identifier	SEPARATE_ZVAL_IF_NOT_REF		1308818	0					
ANR	1308836	ArgumentList	array		1308818	1					
ANR	1308837	Argument	array		1308818	0					
ANR	1308838	Identifier	array		1308818	0					
ANR	1308839	IfStatement	if ( Z_TYPE_PP ( array ) == IS_OBJECT && ( Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayObject || Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayIterator ) )		1308818	1					
ANR	1308840	Condition	Z_TYPE_PP ( array ) == IS_OBJECT && ( Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayObject || Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayIterator )	1138:5:38324:38456	1308818	0	True				
ANR	1308841	AndExpression	Z_TYPE_PP ( array ) == IS_OBJECT && ( Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayObject || Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayIterator )		1308818	0		&&			
ANR	1308842	EqualityExpression	Z_TYPE_PP ( array ) == IS_OBJECT		1308818	0		==			
ANR	1308843	CallExpression	Z_TYPE_PP ( array )		1308818	0					
ANR	1308844	Callee	Z_TYPE_PP		1308818	0					
ANR	1308845	Identifier	Z_TYPE_PP		1308818	0					
ANR	1308846	ArgumentList	array		1308818	1					
ANR	1308847	Argument	array		1308818	0					
ANR	1308848	Identifier	array		1308818	0					
ANR	1308849	Identifier	IS_OBJECT		1308818	1					
ANR	1308850	OrExpression	Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayObject || Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayIterator		1308818	1		||			
ANR	1308851	EqualityExpression	Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayObject		1308818	0		==			
ANR	1308852	CallExpression	Z_OBJ_HT_PP ( array )		1308818	0					
ANR	1308853	Callee	Z_OBJ_HT_PP		1308818	0					
ANR	1308854	Identifier	Z_OBJ_HT_PP		1308818	0					
ANR	1308855	ArgumentList	array		1308818	1					
ANR	1308856	Argument	array		1308818	0					
ANR	1308857	Identifier	array		1308818	0					
ANR	1308858	UnaryOperationExpression	& spl_handler_ArrayObject		1308818	1					
ANR	1308859	UnaryOperator	&		1308818	0					
ANR	1308860	Identifier	spl_handler_ArrayObject		1308818	1					
ANR	1308861	EqualityExpression	Z_OBJ_HT_PP ( array ) == & spl_handler_ArrayIterator		1308818	1		==			
ANR	1308862	CallExpression	Z_OBJ_HT_PP ( array )		1308818	0					
ANR	1308863	Callee	Z_OBJ_HT_PP		1308818	0					
ANR	1308864	Identifier	Z_OBJ_HT_PP		1308818	0					
ANR	1308865	ArgumentList	array		1308818	1					
ANR	1308866	Argument	array		1308818	0					
ANR	1308867	Identifier	array		1308818	0					
ANR	1308868	UnaryOperationExpression	& spl_handler_ArrayIterator		1308818	1					
ANR	1308869	UnaryOperator	&		1308818	0					
ANR	1308870	Identifier	spl_handler_ArrayIterator		1308818	1					
ANR	1308871	CompoundStatement		7:140:218:218	1308818	1					
ANR	1308872	ExpressionStatement	zval_ptr_dtor ( & intern -> array )	1139:2:38463:38492	1308818	0	True				
ANR	1308873	CallExpression	zval_ptr_dtor ( & intern -> array )		1308818	0					
ANR	1308874	Callee	zval_ptr_dtor		1308818	0					
ANR	1308875	Identifier	zval_ptr_dtor		1308818	0					
ANR	1308876	ArgumentList	& intern -> array		1308818	1					
ANR	1308877	Argument	& intern -> array		1308818	0					
ANR	1308878	UnaryOperationExpression	& intern -> array		1308818	0					
ANR	1308879	UnaryOperator	&		1308818	0					
ANR	1308880	PtrMemberAccess	intern -> array		1308818	1					
ANR	1308881	Identifier	intern		1308818	0					
ANR	1308882	Identifier	array		1308818	1					
ANR	1308883	IfStatement	if ( just_array )		1308818	1					
ANR	1308884	Condition	just_array	1140:6:38500:38509	1308818	0	True				
ANR	1308885	Identifier	just_array		1308818	0					
ANR	1308886	CompoundStatement		9:18:271:271	1308818	1					
ANR	1308887	Statement	spl_array_object	1141:3:38517:38532	1308818	0	True				
ANR	1308888	Statement	*	1141:20:38534:38534	1308818	1	True				
ANR	1308889	Statement	other	1141:21:38535:38539	1308818	2	True				
ANR	1308890	Statement	=	1141:27:38541:38541	1308818	3	True				
ANR	1308891	Statement	(	1141:29:38543:38543	1308818	4	True				
ANR	1308892	Statement	spl_array_object	1141:30:38544:38559	1308818	5	True				
ANR	1308893	Statement	*	1141:46:38560:38560	1308818	6	True				
ANR	1308894	Statement	)	1141:47:38561:38561	1308818	7	True				
ANR	1308895	Statement	zend_object_store_get_object	1141:48:38562:38589	1308818	8	True				
ANR	1308896	Statement	(	1141:76:38590:38590	1308818	9	True				
ANR	1308897	Statement	*	1141:77:38591:38591	1308818	10	True				
ANR	1308898	Statement	array	1141:78:38592:38596	1308818	11	True				
ANR	1308899	Statement	TSRMLS_CC	1141:84:38598:38606	1308818	12	True				
ANR	1308900	Statement	)	1141:93:38607:38607	1308818	13	True				
ANR	1308901	ExpressionStatement		1141:94:38608:38608	1308818	14	True				
ANR	1308902	ExpressionStatement	ar_flags = other -> ar_flags & ~SPL_ARRAY_INT_MASK	1142:3:38613:38661	1308818	15	True				
ANR	1308903	AssignmentExpression	ar_flags = other -> ar_flags & ~SPL_ARRAY_INT_MASK		1308818	0		=			
ANR	1308904	Identifier	ar_flags		1308818	0					
ANR	1308905	BitAndExpression	other -> ar_flags & ~SPL_ARRAY_INT_MASK		1308818	1		&			
ANR	1308906	PtrMemberAccess	other -> ar_flags		1308818	0					
ANR	1308907	Identifier	other		1308818	0					
ANR	1308908	Identifier	ar_flags		1308818	1					
ANR	1308909	Identifier	~SPL_ARRAY_INT_MASK		1308818	1					
ANR	1308910	ExpressionStatement	ar_flags |= SPL_ARRAY_USE_OTHER	1144:2:38669:38700	1308818	2	True				
ANR	1308911	AssignmentExpression	ar_flags |= SPL_ARRAY_USE_OTHER		1308818	0		|=			
ANR	1308912	Identifier	ar_flags		1308818	0					
ANR	1308913	Identifier	SPL_ARRAY_USE_OTHER		1308818	1					
ANR	1308914	ExpressionStatement	intern -> array = * array	1145:2:38704:38726	1308818	3	True				
ANR	1308915	AssignmentExpression	intern -> array = * array		1308818	0		=			
ANR	1308916	PtrMemberAccess	intern -> array		1308818	0					
ANR	1308917	Identifier	intern		1308818	0					
ANR	1308918	Identifier	array		1308818	1					
ANR	1308919	UnaryOperationExpression	* array		1308818	1					
ANR	1308920	UnaryOperator	*		1308818	0					
ANR	1308921	Identifier	array		1308818	1					
ANR	1308922	ElseStatement	else		1308818	0					
ANR	1308923	CompoundStatement		15:8:495:495	1308818	0					
ANR	1308924	IfStatement	if ( Z_TYPE_PP ( array ) != IS_OBJECT && Z_TYPE_PP ( array ) != IS_ARRAY )		1308818	0					
ANR	1308925	Condition	Z_TYPE_PP ( array ) != IS_OBJECT && Z_TYPE_PP ( array ) != IS_ARRAY	1147:6:38744:38804	1308818	0	True				
ANR	1308926	AndExpression	Z_TYPE_PP ( array ) != IS_OBJECT && Z_TYPE_PP ( array ) != IS_ARRAY		1308818	0		&&			
ANR	1308927	EqualityExpression	Z_TYPE_PP ( array ) != IS_OBJECT		1308818	0		!=			
ANR	1308928	CallExpression	Z_TYPE_PP ( array )		1308818	0					
ANR	1308929	Callee	Z_TYPE_PP		1308818	0					
ANR	1308930	Identifier	Z_TYPE_PP		1308818	0					
ANR	1308931	ArgumentList	array		1308818	1					
ANR	1308932	Argument	array		1308818	0					
ANR	1308933	Identifier	array		1308818	0					
ANR	1308934	Identifier	IS_OBJECT		1308818	1					
ANR	1308935	EqualityExpression	Z_TYPE_PP ( array ) != IS_ARRAY		1308818	1		!=			
ANR	1308936	CallExpression	Z_TYPE_PP ( array )		1308818	0					
ANR	1308937	Callee	Z_TYPE_PP		1308818	0					
ANR	1308938	Identifier	Z_TYPE_PP		1308818	0					
ANR	1308939	ArgumentList	array		1308818	1					
ANR	1308940	Argument	array		1308818	0					
ANR	1308941	Identifier	array		1308818	0					
ANR	1308942	Identifier	IS_ARRAY		1308818	1					
ANR	1308943	CompoundStatement		16:69:566:566	1308818	1					
ANR	1308944	Statement	zend_throw_exception	1148:3:38812:38831	1308818	0	True				
ANR	1308945	Statement	(	1148:23:38832:38832	1308818	1	True				
ANR	1308946	Statement	spl_ce_InvalidArgumentException	1148:24:38833:38863	1308818	2	True				
ANR	1308947	Statement	","	1148:55:38864:38864	1308818	3	True				
ANR	1308948	Statement	"""Passed variable is not an array or object, using empty array instead"""	1148:57:38866:38935	1308818	4	True				
ANR	1308949	Statement	","	1148:127:38936:38936	1308818	5	True				
ANR	1308950	Statement	0	1148:129:38938:38938	1308818	6	True				
ANR	1308951	Statement	TSRMLS_CC	1148:131:38940:38948	1308818	7	True				
ANR	1308952	Statement	)	1148:140:38949:38949	1308818	8	True				
ANR	1308953	ExpressionStatement		1148:141:38950:38950	1308818	9	True				
ANR	1308954	ReturnStatement	return ;	1149:3:38955:38961	1308818	10	True				
ANR	1308955	ExpressionStatement	zval_ptr_dtor ( & intern -> array )	1151:2:38969:38998	1308818	1	True				
ANR	1308956	CallExpression	zval_ptr_dtor ( & intern -> array )		1308818	0					
ANR	1308957	Callee	zval_ptr_dtor		1308818	0					
ANR	1308958	Identifier	zval_ptr_dtor		1308818	0					
ANR	1308959	ArgumentList	& intern -> array		1308818	1					
ANR	1308960	Argument	& intern -> array		1308818	0					
ANR	1308961	UnaryOperationExpression	& intern -> array		1308818	0					
ANR	1308962	UnaryOperator	&		1308818	0					
ANR	1308963	PtrMemberAccess	intern -> array		1308818	1					
ANR	1308964	Identifier	intern		1308818	0					
ANR	1308965	Identifier	array		1308818	1					
ANR	1308966	ExpressionStatement	intern -> array = * array	1152:2:39002:39024	1308818	2	True				
ANR	1308967	AssignmentExpression	intern -> array = * array		1308818	0		=			
ANR	1308968	PtrMemberAccess	intern -> array		1308818	0					
ANR	1308969	Identifier	intern		1308818	0					
ANR	1308970	Identifier	array		1308818	1					
ANR	1308971	UnaryOperationExpression	* array		1308818	1					
ANR	1308972	UnaryOperator	*		1308818	0					
ANR	1308973	Identifier	array		1308818	1					
ANR	1308974	IfStatement	if ( object == * array )		1308818	2					
ANR	1308975	Condition	object == * array	1154:5:39034:39049	1308818	0	True				
ANR	1308976	EqualityExpression	object == * array		1308818	0		==			
ANR	1308977	Identifier	object		1308818	0					
ANR	1308978	UnaryOperationExpression	* array		1308818	1					
ANR	1308979	UnaryOperator	*		1308818	0					
ANR	1308980	Identifier	array		1308818	1					
ANR	1308981	CompoundStatement		23:23:811:811	1308818	1					
ANR	1308982	ExpressionStatement	intern -> ar_flags |= SPL_ARRAY_IS_SELF	1155:2:39056:39093	1308818	0	True				
ANR	1308983	AssignmentExpression	intern -> ar_flags |= SPL_ARRAY_IS_SELF		1308818	0		|=			
ANR	1308984	PtrMemberAccess	intern -> ar_flags		1308818	0					
ANR	1308985	Identifier	intern		1308818	0					
ANR	1308986	Identifier	ar_flags		1308818	1					
ANR	1308987	Identifier	SPL_ARRAY_IS_SELF		1308818	1					
ANR	1308988	ExpressionStatement	intern -> ar_flags &= ~SPL_ARRAY_USE_OTHER	1156:2:39097:39137	1308818	1	True				
ANR	1308989	AssignmentExpression	intern -> ar_flags &= ~SPL_ARRAY_USE_OTHER		1308818	0		&=			
ANR	1308990	PtrMemberAccess	intern -> ar_flags		1308818	0					
ANR	1308991	Identifier	intern		1308818	0					
ANR	1308992	Identifier	ar_flags		1308818	1					
ANR	1308993	Identifier	~SPL_ARRAY_USE_OTHER		1308818	1					
ANR	1308994	ElseStatement	else		1308818	0					
ANR	1308995	CompoundStatement		26:8:906:906	1308818	0					
ANR	1308996	ExpressionStatement	intern -> ar_flags &= ~SPL_ARRAY_IS_SELF	1158:2:39151:39189	1308818	0	True				
ANR	1308997	AssignmentExpression	intern -> ar_flags &= ~SPL_ARRAY_IS_SELF		1308818	0		&=			
ANR	1308998	PtrMemberAccess	intern -> ar_flags		1308818	0					
ANR	1308999	Identifier	intern		1308818	0					
ANR	1309000	Identifier	ar_flags		1308818	1					
ANR	1309001	Identifier	~SPL_ARRAY_IS_SELF		1308818	1					
ANR	1309002	ExpressionStatement	intern -> ar_flags |= ar_flags	1160:1:39195:39223	1308818	3	True				
ANR	1309003	AssignmentExpression	intern -> ar_flags |= ar_flags		1308818	0		|=			
ANR	1309004	PtrMemberAccess	intern -> ar_flags		1308818	0					
ANR	1309005	Identifier	intern		1308818	0					
ANR	1309006	Identifier	ar_flags		1308818	1					
ANR	1309007	Identifier	ar_flags		1308818	1					
ANR	1309008	ExpressionStatement	Z_ADDREF_P ( intern -> array )	1161:1:39226:39251	1308818	4	True				
ANR	1309009	CallExpression	Z_ADDREF_P ( intern -> array )		1308818	0					
ANR	1309010	Callee	Z_ADDREF_P		1308818	0					
ANR	1309011	Identifier	Z_ADDREF_P		1308818	0					
ANR	1309012	ArgumentList	intern -> array		1308818	1					
ANR	1309013	Argument	intern -> array		1308818	0					
ANR	1309014	PtrMemberAccess	intern -> array		1308818	0					
ANR	1309015	Identifier	intern		1308818	0					
ANR	1309016	Identifier	array		1308818	1					
ANR	1309017	IfStatement	if ( Z_TYPE_PP ( array ) == IS_OBJECT )		1308818	5					
ANR	1309018	Condition	Z_TYPE_PP ( array ) == IS_OBJECT	1162:5:39258:39286	1308818	0	True				
ANR	1309019	EqualityExpression	Z_TYPE_PP ( array ) == IS_OBJECT		1308818	0		==			
ANR	1309020	CallExpression	Z_TYPE_PP ( array )		1308818	0					
ANR	1309021	Callee	Z_TYPE_PP		1308818	0					
ANR	1309022	Identifier	Z_TYPE_PP		1308818	0					
ANR	1309023	ArgumentList	array		1308818	1					
ANR	1309024	Argument	array		1308818	0					
ANR	1309025	Identifier	array		1308818	0					
ANR	1309026	Identifier	IS_OBJECT		1308818	1					
ANR	1309027	CompoundStatement		32:2:1052:1130	1308818	1					
ANR	1309028	IdentifierDeclStatement	"zend_object_get_properties_t handler = Z_OBJ_HANDLER_PP ( array , get_properties ) ;"	1163:2:39293:39371	1308818	0	True				
ANR	1309029	IdentifierDecl	"handler = Z_OBJ_HANDLER_PP ( array , get_properties )"		1308818	0					
ANR	1309030	IdentifierDeclType	zend_object_get_properties_t		1308818	0					
ANR	1309031	Identifier	handler		1308818	1					
ANR	1309032	AssignmentExpression	"handler = Z_OBJ_HANDLER_PP ( array , get_properties )"		1308818	2		=			
ANR	1309033	Identifier	handler		1308818	0					
ANR	1309034	CallExpression	"Z_OBJ_HANDLER_PP ( array , get_properties )"		1308818	1					
ANR	1309035	Callee	Z_OBJ_HANDLER_PP		1308818	0					
ANR	1309036	Identifier	Z_OBJ_HANDLER_PP		1308818	0					
ANR	1309037	ArgumentList	array		1308818	1					
ANR	1309038	Argument	array		1308818	0					
ANR	1309039	Identifier	array		1308818	0					
ANR	1309040	Argument	get_properties		1308818	1					
ANR	1309041	Identifier	get_properties		1308818	0					
ANR	1309042	Statement	if	1164:2:39375:39376	1308818	1	True				
ANR	1309043	Statement	(	1164:5:39378:39378	1308818	2	True				
ANR	1309044	Statement	(	1164:6:39379:39379	1308818	3	True				
ANR	1309045	Statement	handler	1164:7:39380:39386	1308818	4	True				
ANR	1309046	Statement	!=	1164:15:39388:39389	1308818	5	True				
ANR	1309047	Statement	std_object_handlers	1164:18:39391:39409	1308818	6	True				
ANR	1309048	Statement	.	1164:37:39410:39410	1308818	7	True				
ANR	1309049	Statement	get_properties	1164:38:39411:39424	1308818	8	True				
ANR	1309050	Statement	&&	1164:53:39426:39427	1308818	9	True				
ANR	1309051	Statement	handler	1164:56:39429:39435	1308818	10	True				
ANR	1309052	Statement	!=	1164:64:39437:39438	1308818	11	True				
ANR	1309053	Statement	spl_array_get_properties	1164:67:39440:39463	1308818	12	True				
ANR	1309054	Statement	)	1164:91:39464:39464	1308818	13	True				
ANR	1309055	Statement	||	1165:2:39468:39469	1308818	14	True				
ANR	1309056	Statement	!	1165:5:39471:39471	1308818	15	True				
ANR	1309057	Statement	spl_array_get_hash_table	1165:6:39472:39495	1308818	16	True				
ANR	1309058	Statement	(	1165:30:39496:39496	1308818	17	True				
ANR	1309059	Statement	intern	1165:31:39497:39502	1308818	18	True				
ANR	1309060	Statement	","	1165:37:39503:39503	1308818	19	True				
ANR	1309061	Statement	0	1165:39:39505:39505	1308818	20	True				
ANR	1309062	Statement	TSRMLS_CC	1165:41:39507:39515	1308818	21	True				
ANR	1309063	Statement	)	1165:50:39516:39516	1308818	22	True				
ANR	1309064	Statement	)	1165:51:39517:39517	1308818	23	True				
ANR	1309065	CompoundStatement		34:53:1278:1278	1308818	24					
ANR	1309066	Statement	zend_throw_exception_ex	1166:3:39524:39546	1308818	0	True				
ANR	1309067	Statement	(	1166:26:39547:39547	1308818	1	True				
ANR	1309068	Statement	spl_ce_InvalidArgumentException	1166:27:39548:39578	1308818	2	True				
ANR	1309069	Statement	","	1166:58:39579:39579	1308818	3	True				
ANR	1309070	Statement	0	1166:60:39581:39581	1308818	4	True				
ANR	1309071	Statement	TSRMLS_CC	1166:62:39583:39591	1308818	5	True				
ANR	1309072	Statement	","	1166:71:39592:39592	1308818	6	True				
ANR	1309073	Statement	"""Overloaded object of type %s is not compatible with %s"""	1166:73:39594:39649	1308818	7	True				
ANR	1309074	Statement	","	1166:129:39650:39650	1308818	8	True				
ANR	1309075	Statement	Z_OBJCE_PP	1166:131:39652:39661	1308818	9	True				
ANR	1309076	Statement	(	1166:141:39662:39662	1308818	10	True				
ANR	1309077	Statement	array	1166:142:39663:39667	1308818	11	True				
ANR	1309078	Statement	)	1166:147:39668:39668	1308818	12	True				
ANR	1309079	Statement	->	1166:148:39669:39670	1308818	13	True				
ANR	1309080	Statement	name	1166:150:39671:39674	1308818	14	True				
ANR	1309081	Statement	","	1166:154:39675:39675	1308818	15	True				
ANR	1309082	Statement	intern	1166:156:39677:39682	1308818	16	True				
ANR	1309083	Statement	->	1166:162:39683:39684	1308818	17	True				
ANR	1309084	Statement	std	1166:164:39685:39687	1308818	18	True				
ANR	1309085	Statement	.	1166:167:39688:39688	1308818	19	True				
ANR	1309086	Statement	ce	1166:168:39689:39690	1308818	20	True				
ANR	1309087	Statement	->	1166:170:39691:39692	1308818	21	True				
ANR	1309088	Statement	name	1166:172:39693:39696	1308818	22	True				
ANR	1309089	Statement	)	1166:176:39697:39697	1308818	23	True				
ANR	1309090	ExpressionStatement		1166:177:39698:39698	1308818	24	True				
ANR	1309091	Statement	spl_array_rewind	1170:1:39709:39724	1308818	6	True				
ANR	1309092	Statement	(	1170:17:39725:39725	1308818	7	True				
ANR	1309093	Statement	intern	1170:18:39726:39731	1308818	8	True				
ANR	1309094	Statement	TSRMLS_CC	1170:25:39733:39741	1308818	9	True				
ANR	1309095	Statement	)	1170:34:39742:39742	1308818	10	True				
ANR	1309096	ExpressionStatement		1170:35:39743:39743	1308818	11	True				
ANR	1309097	ReturnType	static void		1308818	1					
ANR	1309098	Identifier	spl_array_set_array		1308818	2					
ANR	1309099	ParameterList	"zval * object , spl_array_object * intern , zval * * array , long ar_flags , int just_array TSRMLS_DC"		1308818	3					
ANR	1309100	Parameter	zval * object	1132:32:38145:38156	1308818	0	True				
ANR	1309101	ParameterType	zval *		1308818	0					
ANR	1309102	Identifier	object		1308818	1					
ANR	1309103	Parameter	spl_array_object * intern	1132:46:38159:38182	1308818	1	True				
ANR	1309104	ParameterType	spl_array_object *		1308818	0					
ANR	1309105	Identifier	intern		1308818	1					
ANR	1309106	Parameter	zval * * array	1132:72:38185:38196	1308818	2	True				
ANR	1309107	ParameterType	zval * *		1308818	0					
ANR	1309108	Identifier	array		1308818	1					
ANR	1309109	Parameter	long ar_flags	1132:86:38199:38211	1308818	3	True				
ANR	1309110	ParameterType	long		1308818	0					
ANR	1309111	Identifier	ar_flags		1308818	1					
ANR	1309112	Parameter	int just_array TSRMLS_DC	1132:101:38214:38237	1308818	4	True				
ANR	1309113	ParameterType	int just_array		1308818	0					
ANR	1309114	Identifier	TSRMLS_DC		1308818	1					
ANR	1309115	CFGEntryNode	ENTRY		1308818		True				
ANR	1309116	CFGExitNode	EXIT		1308818		True				
ANR	1309117	Symbol	handler		1308818						
ANR	1309118	Symbol	other		1308818						
ANR	1309119	Symbol	& spl_handler_ArrayObject		1308818						
ANR	1309120	Symbol	intern -> array		1308818						
ANR	1309121	Symbol	TSRMLS_DC		1308818						
ANR	1309122	Symbol	* array		1308818						
ANR	1309123	Symbol	Z_TYPE_PP		1308818						
ANR	1309124	Symbol	just_array		1308818						
ANR	1309125	Symbol	array		1308818						
ANR	1309126	Symbol	IS_ARRAY		1308818						
ANR	1309127	Symbol	& intern -> array		1308818						
ANR	1309128	Symbol	Z_OBJ_HT_PP		1308818						
ANR	1309129	Symbol	* intern		1308818						
ANR	1309130	Symbol	intern		1308818						
ANR	1309131	Symbol	~SPL_ARRAY_USE_OTHER		1308818						
ANR	1309132	Symbol	get_properties		1308818						
ANR	1309133	Symbol	~SPL_ARRAY_INT_MASK		1308818						
ANR	1309134	Symbol	* other		1308818						
ANR	1309135	Symbol	intern -> ar_flags		1308818						
ANR	1309136	Symbol	~SPL_ARRAY_IS_SELF		1308818						
ANR	1309137	Symbol	& spl_handler_ArrayIterator		1308818						
ANR	1309138	Symbol	Z_OBJ_HANDLER_PP		1308818						
ANR	1309139	Symbol	other -> ar_flags		1308818						
ANR	1309140	Symbol	SPL_ARRAY_IS_SELF		1308818						
ANR	1309141	Symbol	IS_OBJECT		1308818						
ANR	1309142	Symbol	ar_flags		1308818						
ANR	1309143	Symbol	SPL_ARRAY_USE_OTHER		1308818						
ANR	1309144	Symbol	object		1308818						
ANR	1309145	DeclStmt									
ANR	1309146	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	spl_array_it_funcs
ANR	1309147	Function	spl_array_get_iterator	1184:0:39994:40698							
ANR	1309148	FunctionDef	"spl_array_get_iterator (zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC)"		1309147	0					
ANR	1309149	CompoundStatement		1185:0:40107:40698	1309147	0					
ANR	1309150	IdentifierDeclStatement	spl_array_it * iterator ;	1186:1:40110:40138	1309147	0	True				
ANR	1309151	IdentifierDecl	* iterator		1309147	0					
ANR	1309152	IdentifierDeclType	spl_array_it *		1309147	0					
ANR	1309153	Identifier	iterator		1309147	1					
ANR	1309154	Statement	spl_array_object	1187:1:40141:40156	1309147	1	True				
ANR	1309155	Statement	*	1187:20:40160:40160	1309147	2	True				
ANR	1309156	Statement	array_object	1187:21:40161:40172	1309147	3	True				
ANR	1309157	Statement	=	1187:34:40174:40174	1309147	4	True				
ANR	1309158	Statement	(	1187:36:40176:40176	1309147	5	True				
ANR	1309159	Statement	spl_array_object	1187:37:40177:40192	1309147	6	True				
ANR	1309160	Statement	*	1187:53:40193:40193	1309147	7	True				
ANR	1309161	Statement	)	1187:54:40194:40194	1309147	8	True				
ANR	1309162	Statement	zend_object_store_get_object	1187:55:40195:40222	1309147	9	True				
ANR	1309163	Statement	(	1187:83:40223:40223	1309147	10	True				
ANR	1309164	Statement	object	1187:84:40224:40229	1309147	11	True				
ANR	1309165	Statement	TSRMLS_CC	1187:91:40231:40239	1309147	12	True				
ANR	1309166	Statement	)	1187:100:40240:40240	1309147	13	True				
ANR	1309167	ExpressionStatement		1187:101:40241:40241	1309147	14	True				
ANR	1309168	IfStatement	if ( by_ref && ( array_object -> ar_flags & SPL_ARRAY_OVERLOADED_CURRENT ) )		1309147	15					
ANR	1309169	Condition	by_ref && ( array_object -> ar_flags & SPL_ARRAY_OVERLOADED_CURRENT )	1189:5:40249:40313	1309147	0	True				
ANR	1309170	AndExpression	by_ref && ( array_object -> ar_flags & SPL_ARRAY_OVERLOADED_CURRENT )		1309147	0		&&			
ANR	1309171	Identifier	by_ref		1309147	0					
ANR	1309172	BitAndExpression	array_object -> ar_flags & SPL_ARRAY_OVERLOADED_CURRENT		1309147	1		&			
ANR	1309173	PtrMemberAccess	array_object -> ar_flags		1309147	0					
ANR	1309174	Identifier	array_object		1309147	0					
ANR	1309175	Identifier	ar_flags		1309147	1					
ANR	1309176	Identifier	SPL_ARRAY_OVERLOADED_CURRENT		1309147	1					
ANR	1309177	CompoundStatement		5:72:208:208	1309147	1					
ANR	1309178	ExpressionStatement	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"	1190:2:40320:40395	1309147	0	True				
ANR	1309179	CallExpression	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"		1309147	0					
ANR	1309180	Callee	zend_error		1309147	0					
ANR	1309181	Identifier	zend_error		1309147	0					
ANR	1309182	ArgumentList	E_ERROR		1309147	1					
ANR	1309183	Argument	E_ERROR		1309147	0					
ANR	1309184	Identifier	E_ERROR		1309147	0					
ANR	1309185	Argument	"""An iterator cannot be used with foreach by reference"""		1309147	1					
ANR	1309186	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		1309147	0					
ANR	1309187	ExpressionStatement	iterator = emalloc ( sizeof ( spl_array_it ) )	1193:1:40402:40446	1309147	16	True				
ANR	1309188	AssignmentExpression	iterator = emalloc ( sizeof ( spl_array_it ) )		1309147	0		=			
ANR	1309189	Identifier	iterator		1309147	0					
ANR	1309190	CallExpression	emalloc ( sizeof ( spl_array_it ) )		1309147	1					
ANR	1309191	Callee	emalloc		1309147	0					
ANR	1309192	Identifier	emalloc		1309147	0					
ANR	1309193	ArgumentList	sizeof ( spl_array_it )		1309147	1					
ANR	1309194	Argument	sizeof ( spl_array_it )		1309147	0					
ANR	1309195	SizeofExpression	sizeof ( spl_array_it )		1309147	0					
ANR	1309196	Sizeof	sizeof		1309147	0					
ANR	1309197	SizeofOperand	spl_array_it		1309147	1					
ANR	1309198	ExpressionStatement	Z_ADDREF_P ( object )	1195:1:40450:40468	1309147	17	True				
ANR	1309199	CallExpression	Z_ADDREF_P ( object )		1309147	0					
ANR	1309200	Callee	Z_ADDREF_P		1309147	0					
ANR	1309201	Identifier	Z_ADDREF_P		1309147	0					
ANR	1309202	ArgumentList	object		1309147	1					
ANR	1309203	Argument	object		1309147	0					
ANR	1309204	Identifier	object		1309147	0					
ANR	1309205	ExpressionStatement	iterator -> intern . it . data = ( void * ) object	1196:1:40471:40511	1309147	18	True				
ANR	1309206	AssignmentExpression	iterator -> intern . it . data = ( void * ) object		1309147	0		=			
ANR	1309207	MemberAccess	iterator -> intern . it . data		1309147	0					
ANR	1309208	MemberAccess	iterator -> intern . it		1309147	0					
ANR	1309209	PtrMemberAccess	iterator -> intern		1309147	0					
ANR	1309210	Identifier	iterator		1309147	0					
ANR	1309211	Identifier	intern		1309147	1					
ANR	1309212	Identifier	it		1309147	1					
ANR	1309213	Identifier	data		1309147	1					
ANR	1309214	CastExpression	( void * ) object		1309147	1					
ANR	1309215	CastTarget	void *		1309147	0					
ANR	1309216	Identifier	object		1309147	1					
ANR	1309217	ExpressionStatement	iterator -> intern . it . funcs = & spl_array_it_funcs	1197:1:40514:40561	1309147	19	True				
ANR	1309218	AssignmentExpression	iterator -> intern . it . funcs = & spl_array_it_funcs		1309147	0		=			
ANR	1309219	MemberAccess	iterator -> intern . it . funcs		1309147	0					
ANR	1309220	MemberAccess	iterator -> intern . it		1309147	0					
ANR	1309221	PtrMemberAccess	iterator -> intern		1309147	0					
ANR	1309222	Identifier	iterator		1309147	0					
ANR	1309223	Identifier	intern		1309147	1					
ANR	1309224	Identifier	it		1309147	1					
ANR	1309225	Identifier	funcs		1309147	1					
ANR	1309226	UnaryOperationExpression	& spl_array_it_funcs		1309147	1					
ANR	1309227	UnaryOperator	&		1309147	0					
ANR	1309228	Identifier	spl_array_it_funcs		1309147	1					
ANR	1309229	ExpressionStatement	iterator -> intern . ce = ce	1198:1:40564:40588	1309147	20	True				
ANR	1309230	AssignmentExpression	iterator -> intern . ce = ce		1309147	0		=			
ANR	1309231	MemberAccess	iterator -> intern . ce		1309147	0					
ANR	1309232	PtrMemberAccess	iterator -> intern		1309147	0					
ANR	1309233	Identifier	iterator		1309147	0					
ANR	1309234	Identifier	intern		1309147	1					
ANR	1309235	Identifier	ce		1309147	1					
ANR	1309236	Identifier	ce		1309147	1					
ANR	1309237	ExpressionStatement	iterator -> intern . value = NULL	1199:1:40591:40620	1309147	21	True				
ANR	1309238	AssignmentExpression	iterator -> intern . value = NULL		1309147	0		=			
ANR	1309239	MemberAccess	iterator -> intern . value		1309147	0					
ANR	1309240	PtrMemberAccess	iterator -> intern		1309147	0					
ANR	1309241	Identifier	iterator		1309147	0					
ANR	1309242	Identifier	intern		1309147	1					
ANR	1309243	Identifier	value		1309147	1					
ANR	1309244	Identifier	NULL		1309147	1					
ANR	1309245	ExpressionStatement	iterator -> object = array_object	1200:1:40623:40654	1309147	22	True				
ANR	1309246	AssignmentExpression	iterator -> object = array_object		1309147	0		=			
ANR	1309247	PtrMemberAccess	iterator -> object		1309147	0					
ANR	1309248	Identifier	iterator		1309147	0					
ANR	1309249	Identifier	object		1309147	1					
ANR	1309250	Identifier	array_object		1309147	1					
ANR	1309251	ReturnStatement	return ( zend_object_iterator * ) iterator ;	1202:1:40658:40696	1309147	23	True				
ANR	1309252	CastExpression	( zend_object_iterator * ) iterator		1309147	0					
ANR	1309253	CastTarget	zend_object_iterator *		1309147	0					
ANR	1309254	Identifier	iterator		1309147	1					
ANR	1309255	ReturnType	zend_object_iterator *		1309147	1					
ANR	1309256	Identifier	spl_array_get_iterator		1309147	2					
ANR	1309257	ParameterList	"zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC"		1309147	3					
ANR	1309258	Parameter	zend_class_entry * ce	1184:45:40039:40058	1309147	0	True				
ANR	1309259	ParameterType	zend_class_entry *		1309147	0					
ANR	1309260	Identifier	ce		1309147	1					
ANR	1309261	Parameter	zval * object	1184:67:40061:40072	1309147	1	True				
ANR	1309262	ParameterType	zval *		1309147	0					
ANR	1309263	Identifier	object		1309147	1					
ANR	1309264	Parameter	int by_ref TSRMLS_DC	1184:81:40075:40094	1309147	2	True				
ANR	1309265	ParameterType	int by_ref		1309147	0					
ANR	1309266	Identifier	TSRMLS_DC		1309147	1					
ANR	1309267	CFGEntryNode	ENTRY		1309147		True				
ANR	1309268	CFGExitNode	EXIT		1309147		True				
ANR	1309269	Symbol	iterator -> object		1309147						
ANR	1309270	Symbol	ce		1309147						
ANR	1309271	Symbol	iterator -> intern		1309147						
ANR	1309272	Symbol	array_object -> ar_flags		1309147						
ANR	1309273	Symbol	NULL		1309147						
ANR	1309274	Symbol	SPL_ARRAY_OVERLOADED_CURRENT		1309147						
ANR	1309275	Symbol	iterator -> intern . it . data		1309147						
ANR	1309276	Symbol	iterator -> intern . ce		1309147						
ANR	1309277	Symbol	& spl_array_it_funcs		1309147						
ANR	1309278	Symbol	TSRMLS_DC		1309147						
ANR	1309279	Symbol	array_object		1309147						
ANR	1309280	Symbol	iterator -> intern . it		1309147						
ANR	1309281	Symbol	iterator -> intern . value		1309147						
ANR	1309282	Symbol	iterator		1309147						
ANR	1309283	Symbol	emalloc		1309147						
ANR	1309284	Symbol	* iterator		1309147						
ANR	1309285	Symbol	E_ERROR		1309147						
ANR	1309286	Symbol	* array_object		1309147						
ANR	1309287	Symbol	iterator -> intern . it . funcs		1309147						
ANR	1309288	Symbol	by_ref		1309147						
ANR	1309289	Symbol	object		1309147						
ANR	1309290	DeclStmt									
ANR	1309291	Decl							zval	zval *	object
ANR	1309292	DeclStmt									
ANR	1309293	Decl							spl_array_object	spl_array_object *	intern
ANR	1309294	DeclStmt									
ANR	1309295	Decl							zval	zval * *	array
ANR	1309296	DeclStmt									
ANR	1309297	Decl							long	long	ar_flags
ANR	1309298	DeclStmt									
ANR	1309299	Decl							zend_class_entry	zend_class_entry *	ce_get_iterator
ANR	1309300	DeclStmt									
ANR	1309301	Decl							zend_error_handling	zend_error_handling	error_handling
ANR	1309302	DeclStmt									
ANR	1309303	Decl							zval	zval *	object
ANR	1309304	DeclStmt									
ANR	1309305	Decl							spl_array_object	spl_array_object *	intern
ANR	1309306	DeclStmt									
ANR	1309307	Decl							zend_class_entry	zend_class_entry *	ce_get_iterator
ANR	1309308	DeclStmt									
ANR	1309309	Decl							zval	zval *	object
ANR	1309310	DeclStmt									
ANR	1309311	Decl							spl_array_object	spl_array_object *	intern
ANR	1309312	DeclStmt									
ANR	1309313	Decl							zval	zval *	object
ANR	1309314	DeclStmt									
ANR	1309315	Decl							spl_array_object	spl_array_object *	intern
ANR	1309316	DeclStmt									
ANR	1309317	Decl							zval	zval *	object
ANR	1309318	DeclStmt									
ANR	1309319	Decl							spl_array_object	spl_array_object *	intern
ANR	1309320	DeclStmt									
ANR	1309321	Decl							long	long	ar_flags
ANR	1309322	DeclStmt									
ANR	1309323	Decl							zval	zval *	object
ANR	1309324	Decl							zval	zval *	tmp
ANR	1309325	Decl							zval	zval * *	array
ANR	1309326	DeclStmt									
ANR	1309327	Decl							spl_array_object	spl_array_object *	intern
ANR	1309328	DeclStmt									
ANR	1309329	Decl							zval	zval *	object
ANR	1309330	DeclStmt									
ANR	1309331	Decl							spl_array_object	spl_array_object *	intern
ANR	1309332	DeclStmt									
ANR	1309333	Decl							spl_array_object	spl_array_object *	iterator
ANR	1309334	DeclStmt									
ANR	1309335	Decl							HashTable	HashTable *	aht
ANR	1309336	DeclStmt									
ANR	1309337	Decl							zval	zval *	object
ANR	1309338	DeclStmt									
ANR	1309339	Decl							spl_array_object	spl_array_object *	intern
ANR	1309340	DeclStmt									
ANR	1309341	Decl							long	long	opos
ANR	1309342	Decl							long	long	position
ANR	1309343	DeclStmt									
ANR	1309344	Decl							zval	zval *	object
ANR	1309345	DeclStmt									
ANR	1309346	Decl							spl_array_object	spl_array_object *	intern
ANR	1309347	DeclStmt									
ANR	1309348	Decl							HashTable	HashTable *	aht
ANR	1309349	DeclStmt									
ANR	1309350	Decl							int	int	result
ANR	1309351	DeclStmt									
ANR	1309352	Decl							HashTable	HashTable *	aht
ANR	1309353	DeclStmt									
ANR	1309354	Decl							HashPosition	HashPosition	pos
ANR	1309355	DeclStmt									
ANR	1309356	Decl							spl_array_object	spl_array_object *	intern
ANR	1309357	DeclStmt									
ANR	1309358	Decl							zval	zval *	rv
ANR	1309359	DeclStmt									
ANR	1309360	Decl							long	long	count
ANR	1309361	DeclStmt									
ANR	1309362	Decl							spl_array_object	spl_array_object *	intern
ANR	1309363	DeclStmt									
ANR	1309364	Decl							spl_array_object	spl_array_object *	intern
ANR	1309365	DeclStmt									
ANR	1309366	Decl							HashTable	HashTable *	aht
ANR	1309367	DeclStmt									
ANR	1309368	Decl							zval	zval *	tmp
ANR	1309369	Decl							zval	zval *	arg
ANR	1309370	DeclStmt									
ANR	1309371	Decl							zval	zval *	retval_ptr
ANR	1309372	DeclStmt									
ANR	1309373	Decl							zval	zval *	object
ANR	1309374	DeclStmt									
ANR	1309375	Decl							spl_array_object	spl_array_object *	intern
ANR	1309376	DeclStmt									
ANR	1309377	Decl							zval	zval * *	entry
ANR	1309378	DeclStmt									
ANR	1309379	Decl							HashTable	HashTable *	aht
ANR	1309380	DeclStmt									
ANR	1309381	Decl							spl_array_object	spl_array_object *	intern
ANR	1309382	DeclStmt									
ANR	1309383	Decl							HashTable	HashTable *	aht
ANR	1309384	DeclStmt									
ANR	1309385	Decl							zval	zval *	object
ANR	1309386	DeclStmt									
ANR	1309387	Decl							spl_array_object	spl_array_object *	intern
ANR	1309388	DeclStmt									
ANR	1309389	Decl							HashTable	HashTable *	aht
ANR	1309390	DeclStmt									
ANR	1309391	Decl							zval	zval *	object
ANR	1309392	DeclStmt									
ANR	1309393	Decl							spl_array_object	spl_array_object *	intern
ANR	1309394	DeclStmt									
ANR	1309395	Decl							HashTable	HashTable *	aht
ANR	1309396	DeclStmt									
ANR	1309397	Decl							zval	zval *	object
ANR	1309398	Decl							zval	zval * *	entry
ANR	1309399	DeclStmt									
ANR	1309400	Decl							spl_array_object	spl_array_object *	intern
ANR	1309401	DeclStmt									
ANR	1309402	Decl							HashTable	HashTable *	aht
ANR	1309403	DeclStmt									
ANR	1309404	Decl							zval	zval *	object
ANR	1309405	Decl							zval	zval * *	entry
ANR	1309406	Decl							zval	zval *	flags
ANR	1309407	DeclStmt									
ANR	1309408	Decl							spl_array_object	spl_array_object *	intern
ANR	1309409	DeclStmt									
ANR	1309410	Decl							HashTable	HashTable *	aht
ANR	1309411	DeclStmt									
ANR	1309412	Decl							zval	zval *	object
ANR	1309413	DeclStmt									
ANR	1309414	Decl							spl_array_object	spl_array_object *	intern
ANR	1309415	DeclStmt									
ANR	1309416	Decl							HashTable	HashTable *	aht
ANR	1309417	DeclStmt									
ANR	1309418	Decl							zval	zval	members
ANR	1309419	Decl							zval	zval *	pmembers
ANR	1309420	DeclStmt									
ANR	1309421	Decl							php_serialize_data_t	php_serialize_data_t	var_hash
ANR	1309422	DeclStmt									
ANR	1309423	Decl							smart_str	smart_str	buf
ANR	1309424	DeclStmt									
ANR	1309425	Decl							zval	zval *	flags
ANR	1309426	DeclStmt									
ANR	1309427	Decl							spl_array_object	spl_array_object *	intern
ANR	1309428	DeclStmt									
ANR	1309429	Decl							char	char *	buf
ANR	1309430	DeclStmt									
ANR	1309431	Decl							int	int	buf_len
ANR	1309432	DeclStmt									
ANR	1309433	Decl							const unsigned char	const unsigned char *	p
ANR	1309434	Decl							const unsigned char	const unsigned char *	s
ANR	1309435	DeclStmt									
ANR	1309436	Decl							php_unserialize_data_t	php_unserialize_data_t	var_hash
ANR	1309437	DeclStmt									
ANR	1309438	Decl							zval	zval *	pmembers
ANR	1309439	Decl							zval	zval *	pflags
ANR	1309440	DeclStmt									
ANR	1309441	Decl							HashTable	HashTable *	aht
ANR	1309442	DeclStmt									
ANR	1309443	Decl							long	long	flags
ANR	1309444	DeclStmt									
ANR	1309445	Decl							flags	flags &	SPL_ARRAY_CLONE_MASK
ANR	1309446	DeclStmt									
ANR	1309447	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_ArrayObject
ANR	1309448	DeclStmt									
ANR	1309449	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_ArrayIterator
ANR	1309450	DeclStmt									
ANR	1309451	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_RecursiveArrayIterator
