command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	826411	File	data/converged/CVE-2017-11142_php-src/ext_mysqlnd_mysqlnd_charset.c								
ANR	826412	Function	check_mb_utf8mb3_sequence	28:0:1452:2181							
ANR	826413	FunctionDef	"check_mb_utf8mb3_sequence (const char * start , const char * end)"		826412	0					
ANR	826414	CompoundStatement		29:0:1534:2181	826412	0					
ANR	826415	IdentifierDeclStatement	zend_uchar c ;	30:1:1537:1549	826412	0	True				
ANR	826416	IdentifierDecl	c		826412	0					
ANR	826417	IdentifierDeclType	zend_uchar		826412	0					
ANR	826418	Identifier	c		826412	1					
ANR	826419	IfStatement	if ( start >= end )		826412	1					
ANR	826420	Condition	start >= end	32:5:1557:1568	826412	0	True				
ANR	826421	RelationalExpression	start >= end		826412	0		>=			
ANR	826422	Identifier	start		826412	0					
ANR	826423	Identifier	end		826412	1					
ANR	826424	CompoundStatement		4:19:36:36	826412	1					
ANR	826425	ReturnStatement	return 0 ;	33:2:1575:1583	826412	0	True				
ANR	826426	PrimaryExpression	0		826412	0					
ANR	826427	ExpressionStatement	c = ( zend_uchar ) start [ 0 ]	36:1:1590:1615	826412	2	True				
ANR	826428	AssignmentExpression	c = ( zend_uchar ) start [ 0 ]		826412	0		=			
ANR	826429	Identifier	c		826412	0					
ANR	826430	CastExpression	( zend_uchar ) start [ 0 ]		826412	1					
ANR	826431	CastTarget	zend_uchar		826412	0					
ANR	826432	ArrayIndexing	start [ 0 ]		826412	1					
ANR	826433	Identifier	start		826412	0					
ANR	826434	PrimaryExpression	0		826412	1					
ANR	826435	IfStatement	if ( c < 0x80 )		826412	3					
ANR	826436	Condition	c < 0x80	38:5:1623:1630	826412	0	True				
ANR	826437	RelationalExpression	c < 0x80		826412	0		<			
ANR	826438	Identifier	c		826412	0					
ANR	826439	PrimaryExpression	0x80		826412	1					
ANR	826440	CompoundStatement		10:15:98:98	826412	1					
ANR	826441	ReturnStatement	return 1 ;	39:2:1637:1645	826412	0	True				
ANR	826442	PrimaryExpression	1		826412	0					
ANR	826443	IfStatement	if ( c < 0xC2 )		826412	4					
ANR	826444	Condition	c < 0xC2	41:5:1684:1691	826412	0	True				
ANR	826445	RelationalExpression	c < 0xC2		826412	0		<			
ANR	826446	Identifier	c		826412	0					
ANR	826447	PrimaryExpression	0xC2		826412	1					
ANR	826448	CompoundStatement		13:15:159:159	826412	1					
ANR	826449	ReturnStatement	return 0 ;	42:2:1698:1706	826412	0	True				
ANR	826450	PrimaryExpression	0		826412	0					
ANR	826451	IfStatement	if ( c < 0xE0 )		826412	5					
ANR	826452	Condition	c < 0xE0	44:5:1744:1751	826412	0	True				
ANR	826453	RelationalExpression	c < 0xE0		826412	0		<			
ANR	826454	Identifier	c		826412	0					
ANR	826455	PrimaryExpression	0xE0		826412	1					
ANR	826456	CompoundStatement		16:15:219:219	826412	1					
ANR	826457	IfStatement	if ( start + 2 > end )		826412	0					
ANR	826458	Condition	start + 2 > end	45:6:1762:1776	826412	0	True				
ANR	826459	RelationalExpression	start + 2 > end		826412	0		>			
ANR	826460	AdditiveExpression	start + 2		826412	0		+			
ANR	826461	Identifier	start		826412	0					
ANR	826462	PrimaryExpression	2		826412	1					
ANR	826463	Identifier	end		826412	1					
ANR	826464	CompoundStatement		17:23:244:244	826412	1					
ANR	826465	ReturnStatement	return 0 ;	46:3:1784:1792	826412	0	True				
ANR	826466	PrimaryExpression	0		826412	0					
ANR	826467	IfStatement	if ( ! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 ) )		826412	1					
ANR	826468	Condition	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 )	48:6:1820:1858	826412	0	True				
ANR	826469	UnaryOperationExpression	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 )		826412	0					
ANR	826470	UnaryOperator	!		826412	0					
ANR	826471	RelationalExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40		826412	1		<			
ANR	826472	ExclusiveOrExpression	( zend_uchar ) start [ 1 ] ^ 0x80		826412	0		^			
ANR	826473	CastExpression	( zend_uchar ) start [ 1 ]		826412	0					
ANR	826474	CastTarget	zend_uchar		826412	0					
ANR	826475	ArrayIndexing	start [ 1 ]		826412	1					
ANR	826476	Identifier	start		826412	0					
ANR	826477	PrimaryExpression	1		826412	1					
ANR	826478	PrimaryExpression	0x80		826412	1					
ANR	826479	PrimaryExpression	0x40		826412	1					
ANR	826480	CompoundStatement		20:47:326:326	826412	1					
ANR	826481	ReturnStatement	return 0 ;	49:3:1866:1874	826412	0	True				
ANR	826482	PrimaryExpression	0		826412	0					
ANR	826483	ReturnStatement	return 2 ;	51:2:1882:1890	826412	2	True				
ANR	826484	PrimaryExpression	2		826412	0					
ANR	826485	IfStatement	if ( c < 0xF0 )		826412	6					
ANR	826486	Condition	c < 0xF0	53:5:1900:1907	826412	0	True				
ANR	826487	RelationalExpression	c < 0xF0		826412	0		<			
ANR	826488	Identifier	c		826412	0					
ANR	826489	PrimaryExpression	0xF0		826412	1					
ANR	826490	CompoundStatement		25:15:375:375	826412	1					
ANR	826491	IfStatement	if ( start + 3 > end )		826412	0					
ANR	826492	Condition	start + 3 > end	54:6:1918:1932	826412	0	True				
ANR	826493	RelationalExpression	start + 3 > end		826412	0		>			
ANR	826494	AdditiveExpression	start + 3		826412	0		+			
ANR	826495	Identifier	start		826412	0					
ANR	826496	PrimaryExpression	3		826412	1					
ANR	826497	Identifier	end		826412	1					
ANR	826498	CompoundStatement		26:23:400:400	826412	1					
ANR	826499	ReturnStatement	return 0 ;	55:3:1940:1948	826412	0	True				
ANR	826500	PrimaryExpression	0		826412	0					
ANR	826501	IfStatement	if ( ! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 ) ) )		826412	1					
ANR	826502	Condition	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 ) )	57:6:1976:2104	826412	0	True				
ANR	826503	UnaryOperationExpression	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 ) )		826412	0					
ANR	826504	UnaryOperator	!		826412	0					
ANR	826505	AndExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 )		826412	1		&&			
ANR	826506	RelationalExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40		826412	0		<			
ANR	826507	ExclusiveOrExpression	( zend_uchar ) start [ 1 ] ^ 0x80		826412	0		^			
ANR	826508	CastExpression	( zend_uchar ) start [ 1 ]		826412	0					
ANR	826509	CastTarget	zend_uchar		826412	0					
ANR	826510	ArrayIndexing	start [ 1 ]		826412	1					
ANR	826511	Identifier	start		826412	0					
ANR	826512	PrimaryExpression	1		826412	1					
ANR	826513	PrimaryExpression	0x80		826412	1					
ANR	826514	PrimaryExpression	0x40		826412	1					
ANR	826515	AndExpression	( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 )		826412	1		&&			
ANR	826516	RelationalExpression	( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40		826412	0		<			
ANR	826517	ExclusiveOrExpression	( zend_uchar ) start [ 2 ] ^ 0x80		826412	0		^			
ANR	826518	CastExpression	( zend_uchar ) start [ 2 ]		826412	0					
ANR	826519	CastTarget	zend_uchar		826412	0					
ANR	826520	ArrayIndexing	start [ 2 ]		826412	1					
ANR	826521	Identifier	start		826412	0					
ANR	826522	PrimaryExpression	2		826412	1					
ANR	826523	PrimaryExpression	0x80		826412	1					
ANR	826524	PrimaryExpression	0x40		826412	1					
ANR	826525	OrExpression	c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0		826412	1		||			
ANR	826526	RelationalExpression	c >= 0xE1		826412	0		>=			
ANR	826527	Identifier	c		826412	0					
ANR	826528	PrimaryExpression	0xE1		826412	1					
ANR	826529	RelationalExpression	( zend_uchar ) start [ 1 ] >= 0xA0		826412	1		>=			
ANR	826530	CastExpression	( zend_uchar ) start [ 1 ]		826412	0					
ANR	826531	CastTarget	zend_uchar		826412	0					
ANR	826532	ArrayIndexing	start [ 1 ]		826412	1					
ANR	826533	Identifier	start		826412	0					
ANR	826534	PrimaryExpression	1		826412	1					
ANR	826535	PrimaryExpression	0xA0		826412	1					
ANR	826536	CompoundStatement		30:49:572:572	826412	1					
ANR	826537	ReturnStatement	return 0 ;	59:3:2112:2120	826412	0	True				
ANR	826538	PrimaryExpression	0		826412	0					
ANR	826539	ReturnStatement	return 3 ;	61:2:2157:2165	826412	2	True				
ANR	826540	PrimaryExpression	3		826412	0					
ANR	826541	ReturnStatement	return 0 ;	63:1:2171:2179	826412	7	True				
ANR	826542	PrimaryExpression	0		826412	0					
ANR	826543	ReturnType	static unsigned int		826412	1					
ANR	826544	Identifier	check_mb_utf8mb3_sequence		826412	2					
ANR	826545	ParameterList	"const char * start , const char * end"		826412	3					
ANR	826546	Parameter	const char * start	28:46:1498:1514	826412	0	True				
ANR	826547	ParameterType	const char *		826412	0					
ANR	826548	Identifier	start		826412	1					
ANR	826549	Parameter	const char * end	28:65:1517:1531	826412	1	True				
ANR	826550	ParameterType	const char *		826412	0					
ANR	826551	Identifier	end		826412	1					
ANR	826552	CFGEntryNode	ENTRY		826412		True				
ANR	826553	CFGExitNode	EXIT		826412		True				
ANR	826554	Symbol	c		826412						
ANR	826555	Symbol	* start		826412						
ANR	826556	Symbol	start		826412						
ANR	826557	Symbol	end		826412						
ANR	826558	Function	check_mb_utf8_sequence	67:0:2185:3917							
ANR	826559	FunctionDef	"check_mb_utf8_sequence (const char * start , const char * end)"		826558	0					
ANR	826560	CompoundStatement		68:0:2264:3917	826558	0					
ANR	826561	IdentifierDeclStatement	zend_uchar c ;	69:1:2267:2279	826558	0	True				
ANR	826562	IdentifierDecl	c		826558	0					
ANR	826563	IdentifierDeclType	zend_uchar		826558	0					
ANR	826564	Identifier	c		826558	1					
ANR	826565	IfStatement	if ( start >= end )		826558	1					
ANR	826566	Condition	start >= end	71:5:2287:2298	826558	0	True				
ANR	826567	RelationalExpression	start >= end		826558	0		>=			
ANR	826568	Identifier	start		826558	0					
ANR	826569	Identifier	end		826558	1					
ANR	826570	CompoundStatement		4:19:36:36	826558	1					
ANR	826571	ReturnStatement	return 0 ;	72:2:2305:2313	826558	0	True				
ANR	826572	PrimaryExpression	0		826558	0					
ANR	826573	ExpressionStatement	c = ( zend_uchar ) start [ 0 ]	75:1:2320:2345	826558	2	True				
ANR	826574	AssignmentExpression	c = ( zend_uchar ) start [ 0 ]		826558	0		=			
ANR	826575	Identifier	c		826558	0					
ANR	826576	CastExpression	( zend_uchar ) start [ 0 ]		826558	1					
ANR	826577	CastTarget	zend_uchar		826558	0					
ANR	826578	ArrayIndexing	start [ 0 ]		826558	1					
ANR	826579	Identifier	start		826558	0					
ANR	826580	PrimaryExpression	0		826558	1					
ANR	826581	IfStatement	if ( c < 0x80 )		826558	3					
ANR	826582	Condition	c < 0x80	77:5:2353:2360	826558	0	True				
ANR	826583	RelationalExpression	c < 0x80		826558	0		<			
ANR	826584	Identifier	c		826558	0					
ANR	826585	PrimaryExpression	0x80		826558	1					
ANR	826586	CompoundStatement		10:15:98:98	826558	1					
ANR	826587	ReturnStatement	return 1 ;	78:2:2367:2375	826558	0	True				
ANR	826588	PrimaryExpression	1		826558	0					
ANR	826589	IfStatement	if ( c < 0xC2 )		826558	4					
ANR	826590	Condition	c < 0xC2	80:5:2414:2421	826558	0	True				
ANR	826591	RelationalExpression	c < 0xC2		826558	0		<			
ANR	826592	Identifier	c		826558	0					
ANR	826593	PrimaryExpression	0xC2		826558	1					
ANR	826594	CompoundStatement		13:15:159:159	826558	1					
ANR	826595	ReturnStatement	return 0 ;	81:2:2428:2436	826558	0	True				
ANR	826596	PrimaryExpression	0		826558	0					
ANR	826597	IfStatement	if ( c < 0xE0 )		826558	5					
ANR	826598	Condition	c < 0xE0	83:5:2474:2481	826558	0	True				
ANR	826599	RelationalExpression	c < 0xE0		826558	0		<			
ANR	826600	Identifier	c		826558	0					
ANR	826601	PrimaryExpression	0xE0		826558	1					
ANR	826602	CompoundStatement		16:15:219:219	826558	1					
ANR	826603	IfStatement	if ( start + 2 > end )		826558	0					
ANR	826604	Condition	start + 2 > end	84:6:2492:2506	826558	0	True				
ANR	826605	RelationalExpression	start + 2 > end		826558	0		>			
ANR	826606	AdditiveExpression	start + 2		826558	0		+			
ANR	826607	Identifier	start		826558	0					
ANR	826608	PrimaryExpression	2		826558	1					
ANR	826609	Identifier	end		826558	1					
ANR	826610	CompoundStatement		17:23:244:244	826558	1					
ANR	826611	ReturnStatement	return 0 ;	85:3:2514:2522	826558	0	True				
ANR	826612	PrimaryExpression	0		826558	0					
ANR	826613	IfStatement	if ( ! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 ) )		826558	1					
ANR	826614	Condition	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 )	87:6:2550:2588	826558	0	True				
ANR	826615	UnaryOperationExpression	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 )		826558	0					
ANR	826616	UnaryOperator	!		826558	0					
ANR	826617	RelationalExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40		826558	1		<			
ANR	826618	ExclusiveOrExpression	( zend_uchar ) start [ 1 ] ^ 0x80		826558	0		^			
ANR	826619	CastExpression	( zend_uchar ) start [ 1 ]		826558	0					
ANR	826620	CastTarget	zend_uchar		826558	0					
ANR	826621	ArrayIndexing	start [ 1 ]		826558	1					
ANR	826622	Identifier	start		826558	0					
ANR	826623	PrimaryExpression	1		826558	1					
ANR	826624	PrimaryExpression	0x80		826558	1					
ANR	826625	PrimaryExpression	0x40		826558	1					
ANR	826626	CompoundStatement		20:47:326:326	826558	1					
ANR	826627	ReturnStatement	return 0 ;	88:3:2596:2604	826558	0	True				
ANR	826628	PrimaryExpression	0		826558	0					
ANR	826629	ReturnStatement	return 2 ;	90:2:2612:2620	826558	2	True				
ANR	826630	PrimaryExpression	2		826558	0					
ANR	826631	IfStatement	if ( c < 0xF0 )		826558	6					
ANR	826632	Condition	c < 0xF0	92:5:2630:2637	826558	0	True				
ANR	826633	RelationalExpression	c < 0xF0		826558	0		<			
ANR	826634	Identifier	c		826558	0					
ANR	826635	PrimaryExpression	0xF0		826558	1					
ANR	826636	CompoundStatement		25:15:375:375	826558	1					
ANR	826637	IfStatement	if ( start + 3 > end )		826558	0					
ANR	826638	Condition	start + 3 > end	93:6:2648:2662	826558	0	True				
ANR	826639	RelationalExpression	start + 3 > end		826558	0		>			
ANR	826640	AdditiveExpression	start + 3		826558	0		+			
ANR	826641	Identifier	start		826558	0					
ANR	826642	PrimaryExpression	3		826558	1					
ANR	826643	Identifier	end		826558	1					
ANR	826644	CompoundStatement		26:23:400:400	826558	1					
ANR	826645	ReturnStatement	return 0 ;	94:3:2670:2678	826558	0	True				
ANR	826646	PrimaryExpression	0		826558	0					
ANR	826647	IfStatement	if ( ! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 ) ) )		826558	1					
ANR	826648	Condition	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 ) )	96:6:2706:2834	826558	0	True				
ANR	826649	UnaryOperationExpression	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 ) )		826558	0					
ANR	826650	UnaryOperator	!		826558	0					
ANR	826651	AndExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 )		826558	1		&&			
ANR	826652	RelationalExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40		826558	0		<			
ANR	826653	ExclusiveOrExpression	( zend_uchar ) start [ 1 ] ^ 0x80		826558	0		^			
ANR	826654	CastExpression	( zend_uchar ) start [ 1 ]		826558	0					
ANR	826655	CastTarget	zend_uchar		826558	0					
ANR	826656	ArrayIndexing	start [ 1 ]		826558	1					
ANR	826657	Identifier	start		826558	0					
ANR	826658	PrimaryExpression	1		826558	1					
ANR	826659	PrimaryExpression	0x80		826558	1					
ANR	826660	PrimaryExpression	0x40		826558	1					
ANR	826661	AndExpression	( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0 )		826558	1		&&			
ANR	826662	RelationalExpression	( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40		826558	0		<			
ANR	826663	ExclusiveOrExpression	( zend_uchar ) start [ 2 ] ^ 0x80		826558	0		^			
ANR	826664	CastExpression	( zend_uchar ) start [ 2 ]		826558	0					
ANR	826665	CastTarget	zend_uchar		826558	0					
ANR	826666	ArrayIndexing	start [ 2 ]		826558	1					
ANR	826667	Identifier	start		826558	0					
ANR	826668	PrimaryExpression	2		826558	1					
ANR	826669	PrimaryExpression	0x80		826558	1					
ANR	826670	PrimaryExpression	0x40		826558	1					
ANR	826671	OrExpression	c >= 0xE1 || ( zend_uchar ) start [ 1 ] >= 0xA0		826558	1		||			
ANR	826672	RelationalExpression	c >= 0xE1		826558	0		>=			
ANR	826673	Identifier	c		826558	0					
ANR	826674	PrimaryExpression	0xE1		826558	1					
ANR	826675	RelationalExpression	( zend_uchar ) start [ 1 ] >= 0xA0		826558	1		>=			
ANR	826676	CastExpression	( zend_uchar ) start [ 1 ]		826558	0					
ANR	826677	CastTarget	zend_uchar		826558	0					
ANR	826678	ArrayIndexing	start [ 1 ]		826558	1					
ANR	826679	Identifier	start		826558	0					
ANR	826680	PrimaryExpression	1		826558	1					
ANR	826681	PrimaryExpression	0xA0		826558	1					
ANR	826682	CompoundStatement		30:49:572:572	826558	1					
ANR	826683	ReturnStatement	return 0 ;	98:3:2842:2850	826558	0	True				
ANR	826684	PrimaryExpression	0		826558	0					
ANR	826685	ReturnStatement	return 3 ;	100:2:2887:2895	826558	2	True				
ANR	826686	PrimaryExpression	3		826558	0					
ANR	826687	IfStatement	if ( c < 0xF5 )		826558	7					
ANR	826688	Condition	c < 0xF5	102:5:2905:2912	826558	0	True				
ANR	826689	RelationalExpression	c < 0xF5		826558	0		<			
ANR	826690	Identifier	c		826558	0					
ANR	826691	PrimaryExpression	0xF5		826558	1					
ANR	826692	CompoundStatement		35:15:650:650	826558	1					
ANR	826693	IfStatement	if ( start + 4 > end )		826558	0					
ANR	826694	Condition	start + 4 > end	103:6:2923:2937	826558	0	True				
ANR	826695	RelationalExpression	start + 4 > end		826558	0		>			
ANR	826696	AdditiveExpression	start + 4		826558	0		+			
ANR	826697	Identifier	start		826558	0					
ANR	826698	PrimaryExpression	4		826558	1					
ANR	826699	Identifier	end		826558	1					
ANR	826700	CompoundStatement		36:23:675:675	826558	1					
ANR	826701	ReturnStatement	return 0 ;	104:3:2972:2980	826558	0	True				
ANR	826702	PrimaryExpression	0		826558	0					
ANR	826703	IfStatement	if ( ! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 3 ] ^ 0x80 ) < 0x40 && ( c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90 ) && ( c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F ) ) )		826558	1					
ANR	826704	Condition	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 3 ] ^ 0x80 ) < 0x40 && ( c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90 ) && ( c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F ) )	126:6:3612:3838	826558	0	True				
ANR	826705	UnaryOperationExpression	! ( ( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 3 ] ^ 0x80 ) < 0x40 && ( c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90 ) && ( c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F ) )		826558	0					
ANR	826706	UnaryOperator	!		826558	0					
ANR	826707	AndExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 3 ] ^ 0x80 ) < 0x40 && ( c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90 ) && ( c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F )		826558	1		&&			
ANR	826708	RelationalExpression	( ( zend_uchar ) start [ 1 ] ^ 0x80 ) < 0x40		826558	0		<			
ANR	826709	ExclusiveOrExpression	( zend_uchar ) start [ 1 ] ^ 0x80		826558	0		^			
ANR	826710	CastExpression	( zend_uchar ) start [ 1 ]		826558	0					
ANR	826711	CastTarget	zend_uchar		826558	0					
ANR	826712	ArrayIndexing	start [ 1 ]		826558	1					
ANR	826713	Identifier	start		826558	0					
ANR	826714	PrimaryExpression	1		826558	1					
ANR	826715	PrimaryExpression	0x80		826558	1					
ANR	826716	PrimaryExpression	0x40		826558	1					
ANR	826717	AndExpression	( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40 && ( ( zend_uchar ) start [ 3 ] ^ 0x80 ) < 0x40 && ( c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90 ) && ( c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F )		826558	1		&&			
ANR	826718	RelationalExpression	( ( zend_uchar ) start [ 2 ] ^ 0x80 ) < 0x40		826558	0		<			
ANR	826719	ExclusiveOrExpression	( zend_uchar ) start [ 2 ] ^ 0x80		826558	0		^			
ANR	826720	CastExpression	( zend_uchar ) start [ 2 ]		826558	0					
ANR	826721	CastTarget	zend_uchar		826558	0					
ANR	826722	ArrayIndexing	start [ 2 ]		826558	1					
ANR	826723	Identifier	start		826558	0					
ANR	826724	PrimaryExpression	2		826558	1					
ANR	826725	PrimaryExpression	0x80		826558	1					
ANR	826726	PrimaryExpression	0x40		826558	1					
ANR	826727	AndExpression	( ( zend_uchar ) start [ 3 ] ^ 0x80 ) < 0x40 && ( c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90 ) && ( c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F )		826558	1		&&			
ANR	826728	RelationalExpression	( ( zend_uchar ) start [ 3 ] ^ 0x80 ) < 0x40		826558	0		<			
ANR	826729	ExclusiveOrExpression	( zend_uchar ) start [ 3 ] ^ 0x80		826558	0		^			
ANR	826730	CastExpression	( zend_uchar ) start [ 3 ]		826558	0					
ANR	826731	CastTarget	zend_uchar		826558	0					
ANR	826732	ArrayIndexing	start [ 3 ]		826558	1					
ANR	826733	Identifier	start		826558	0					
ANR	826734	PrimaryExpression	3		826558	1					
ANR	826735	PrimaryExpression	0x80		826558	1					
ANR	826736	PrimaryExpression	0x40		826558	1					
ANR	826737	AndExpression	( c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90 ) && ( c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F )		826558	1		&&			
ANR	826738	OrExpression	c >= 0xf1 || ( zend_uchar ) start [ 1 ] >= 0x90		826558	0		||			
ANR	826739	RelationalExpression	c >= 0xf1		826558	0		>=			
ANR	826740	Identifier	c		826558	0					
ANR	826741	PrimaryExpression	0xf1		826558	1					
ANR	826742	RelationalExpression	( zend_uchar ) start [ 1 ] >= 0x90		826558	1		>=			
ANR	826743	CastExpression	( zend_uchar ) start [ 1 ]		826558	0					
ANR	826744	CastTarget	zend_uchar		826558	0					
ANR	826745	ArrayIndexing	start [ 1 ]		826558	1					
ANR	826746	Identifier	start		826558	0					
ANR	826747	PrimaryExpression	1		826558	1					
ANR	826748	PrimaryExpression	0x90		826558	1					
ANR	826749	OrExpression	c <= 0xf3 || ( zend_uchar ) start [ 1 ] <= 0x8F		826558	1		||			
ANR	826750	RelationalExpression	c <= 0xf3		826558	0		<=			
ANR	826751	Identifier	c		826558	0					
ANR	826752	PrimaryExpression	0xf3		826558	1					
ANR	826753	RelationalExpression	( zend_uchar ) start [ 1 ] <= 0x8F		826558	1		<=			
ANR	826754	CastExpression	( zend_uchar ) start [ 1 ]		826558	0					
ANR	826755	CastTarget	zend_uchar		826558	0					
ANR	826756	ArrayIndexing	start [ 1 ]		826558	1					
ANR	826757	Identifier	start		826558	0					
ANR	826758	PrimaryExpression	1		826558	1					
ANR	826759	PrimaryExpression	0x8F		826558	1					
ANR	826760	CompoundStatement		64:2:1578:1578	826558	1					
ANR	826761	ReturnStatement	return 0 ;	132:3:3848:3856	826558	0	True				
ANR	826762	PrimaryExpression	0		826558	0					
ANR	826763	ReturnStatement	return 4 ;	134:2:3893:3901	826558	2	True				
ANR	826764	PrimaryExpression	4		826558	0					
ANR	826765	ReturnStatement	return 0 ;	136:1:3907:3915	826558	8	True				
ANR	826766	PrimaryExpression	0		826558	0					
ANR	826767	ReturnType	static unsigned int		826558	1					
ANR	826768	Identifier	check_mb_utf8_sequence		826558	2					
ANR	826769	ParameterList	"const char * start , const char * end"		826558	3					
ANR	826770	Parameter	const char * start	67:43:2228:2244	826558	0	True				
ANR	826771	ParameterType	const char *		826558	0					
ANR	826772	Identifier	start		826558	1					
ANR	826773	Parameter	const char * end	67:62:2247:2261	826558	1	True				
ANR	826774	ParameterType	const char *		826558	0					
ANR	826775	Identifier	end		826558	1					
ANR	826776	CFGEntryNode	ENTRY		826558		True				
ANR	826777	CFGExitNode	EXIT		826558		True				
ANR	826778	Symbol	c		826558						
ANR	826779	Symbol	* start		826558						
ANR	826780	Symbol	start		826558						
ANR	826781	Symbol	end		826558						
ANR	826782	Function	check_mb_utf8mb3_valid	139:0:3920:4086							
ANR	826783	FunctionDef	"check_mb_utf8mb3_valid (const char * start , const char * end)"		826782	0					
ANR	826784	CompoundStatement		140:0:3999:4086	826782	0					
ANR	826785	IdentifierDeclStatement	"unsigned int len = check_mb_utf8mb3_sequence ( start , end ) ;"	141:1:4002:4058	826782	0	True				
ANR	826786	IdentifierDecl	"len = check_mb_utf8mb3_sequence ( start , end )"		826782	0					
ANR	826787	IdentifierDeclType	unsigned int		826782	0					
ANR	826788	Identifier	len		826782	1					
ANR	826789	AssignmentExpression	"len = check_mb_utf8mb3_sequence ( start , end )"		826782	2		=			
ANR	826790	Identifier	len		826782	0					
ANR	826791	CallExpression	"check_mb_utf8mb3_sequence ( start , end )"		826782	1					
ANR	826792	Callee	check_mb_utf8mb3_sequence		826782	0					
ANR	826793	Identifier	check_mb_utf8mb3_sequence		826782	0					
ANR	826794	ArgumentList	start		826782	1					
ANR	826795	Argument	start		826782	0					
ANR	826796	Identifier	start		826782	0					
ANR	826797	Argument	end		826782	1					
ANR	826798	Identifier	end		826782	0					
ANR	826799	ReturnStatement	return ( len > 1 ) ? len : 0 ;	142:1:4061:4084	826782	1	True				
ANR	826800	ConditionalExpression	( len > 1 ) ? len : 0		826782	0					
ANR	826801	Condition	len > 1		826782	0					
ANR	826802	RelationalExpression	len > 1		826782	0		>			
ANR	826803	Identifier	len		826782	0					
ANR	826804	PrimaryExpression	1		826782	1					
ANR	826805	Identifier	len		826782	1					
ANR	826806	PrimaryExpression	0		826782	2					
ANR	826807	ReturnType	static unsigned int		826782	1					
ANR	826808	Identifier	check_mb_utf8mb3_valid		826782	2					
ANR	826809	ParameterList	"const char * start , const char * end"		826782	3					
ANR	826810	Parameter	const char * start	139:43:3963:3979	826782	0	True				
ANR	826811	ParameterType	const char *		826782	0					
ANR	826812	Identifier	start		826782	1					
ANR	826813	Parameter	const char * end	139:62:3982:3996	826782	1	True				
ANR	826814	ParameterType	const char *		826782	0					
ANR	826815	Identifier	end		826782	1					
ANR	826816	CFGEntryNode	ENTRY		826782		True				
ANR	826817	CFGExitNode	EXIT		826782		True				
ANR	826818	Symbol	len		826782						
ANR	826819	Symbol	start		826782						
ANR	826820	Symbol	end		826782						
ANR	826821	Symbol	check_mb_utf8mb3_sequence		826782						
ANR	826822	Function	check_mb_utf8_valid	145:0:4089:4249							
ANR	826823	FunctionDef	"check_mb_utf8_valid (const char * start , const char * end)"		826822	0					
ANR	826824	CompoundStatement		146:0:4165:4249	826822	0					
ANR	826825	IdentifierDeclStatement	"unsigned int len = check_mb_utf8_sequence ( start , end ) ;"	147:1:4168:4221	826822	0	True				
ANR	826826	IdentifierDecl	"len = check_mb_utf8_sequence ( start , end )"		826822	0					
ANR	826827	IdentifierDeclType	unsigned int		826822	0					
ANR	826828	Identifier	len		826822	1					
ANR	826829	AssignmentExpression	"len = check_mb_utf8_sequence ( start , end )"		826822	2		=			
ANR	826830	Identifier	len		826822	0					
ANR	826831	CallExpression	"check_mb_utf8_sequence ( start , end )"		826822	1					
ANR	826832	Callee	check_mb_utf8_sequence		826822	0					
ANR	826833	Identifier	check_mb_utf8_sequence		826822	0					
ANR	826834	ArgumentList	start		826822	1					
ANR	826835	Argument	start		826822	0					
ANR	826836	Identifier	start		826822	0					
ANR	826837	Argument	end		826822	1					
ANR	826838	Identifier	end		826822	0					
ANR	826839	ReturnStatement	return ( len > 1 ) ? len : 0 ;	148:1:4224:4247	826822	1	True				
ANR	826840	ConditionalExpression	( len > 1 ) ? len : 0		826822	0					
ANR	826841	Condition	len > 1		826822	0					
ANR	826842	RelationalExpression	len > 1		826822	0		>			
ANR	826843	Identifier	len		826822	0					
ANR	826844	PrimaryExpression	1		826822	1					
ANR	826845	Identifier	len		826822	1					
ANR	826846	PrimaryExpression	0		826822	2					
ANR	826847	ReturnType	static unsigned int		826822	1					
ANR	826848	Identifier	check_mb_utf8_valid		826822	2					
ANR	826849	ParameterList	"const char * start , const char * end"		826822	3					
ANR	826850	Parameter	const char * start	145:40:4129:4145	826822	0	True				
ANR	826851	ParameterType	const char *		826822	0					
ANR	826852	Identifier	start		826822	1					
ANR	826853	Parameter	const char * end	145:59:4148:4162	826822	1	True				
ANR	826854	ParameterType	const char *		826822	0					
ANR	826855	Identifier	end		826822	1					
ANR	826856	CFGEntryNode	ENTRY		826822		True				
ANR	826857	CFGExitNode	EXIT		826822		True				
ANR	826858	Symbol	len		826822						
ANR	826859	Symbol	check_mb_utf8_sequence		826822						
ANR	826860	Symbol	start		826822						
ANR	826861	Symbol	end		826822						
ANR	826862	Function	mysqlnd_mbcharlen_utf8mb3	152:0:4253:4590							
ANR	826863	FunctionDef	mysqlnd_mbcharlen_utf8mb3 (unsigned int utf8)		826862	0					
ANR	826864	CompoundStatement		153:0:4318:4590	826862	0					
ANR	826865	IfStatement	if ( utf8 < 0x80 )		826862	0					
ANR	826866	Condition	utf8 < 0x80	154:5:4325:4335	826862	0	True				
ANR	826867	RelationalExpression	utf8 < 0x80		826862	0		<			
ANR	826868	Identifier	utf8		826862	0					
ANR	826869	PrimaryExpression	0x80		826862	1					
ANR	826870	CompoundStatement		2:18:19:19	826862	1					
ANR	826871	ReturnStatement	return 1 ;	155:2:4342:4350	826862	0	True				
ANR	826872	PrimaryExpression	1		826862	0					
ANR	826873	IfStatement	if ( utf8 < 0xC2 )		826862	1					
ANR	826874	Condition	utf8 < 0xC2	157:5:4389:4399	826862	0	True				
ANR	826875	RelationalExpression	utf8 < 0xC2		826862	0		<			
ANR	826876	Identifier	utf8		826862	0					
ANR	826877	PrimaryExpression	0xC2		826862	1					
ANR	826878	CompoundStatement		5:18:83:83	826862	1					
ANR	826879	ReturnStatement	return 0 ;	158:2:4406:4414	826862	0	True				
ANR	826880	PrimaryExpression	0		826862	0					
ANR	826881	IfStatement	if ( utf8 < 0xE0 )		826862	2					
ANR	826882	Condition	utf8 < 0xE0	160:5:4456:4466	826862	0	True				
ANR	826883	RelationalExpression	utf8 < 0xE0		826862	0		<			
ANR	826884	Identifier	utf8		826862	0					
ANR	826885	PrimaryExpression	0xE0		826862	1					
ANR	826886	CompoundStatement		8:18:150:150	826862	1					
ANR	826887	ReturnStatement	return 2 ;	161:2:4473:4481	826862	0	True				
ANR	826888	PrimaryExpression	2		826862	0					
ANR	826889	IfStatement	if ( utf8 < 0xF0 )		826862	3					
ANR	826890	Condition	utf8 < 0xF0	163:5:4520:4530	826862	0	True				
ANR	826891	RelationalExpression	utf8 < 0xF0		826862	0		<			
ANR	826892	Identifier	utf8		826862	0					
ANR	826893	PrimaryExpression	0xF0		826862	1					
ANR	826894	CompoundStatement		11:18:214:214	826862	1					
ANR	826895	ReturnStatement	return 3 ;	164:2:4537:4545	826862	0	True				
ANR	826896	PrimaryExpression	3		826862	0					
ANR	826897	ReturnStatement	return 0 ;	166:1:4580:4588	826862	4	True				
ANR	826898	PrimaryExpression	0		826862	0					
ANR	826899	ReturnType	static unsigned int		826862	1					
ANR	826900	Identifier	mysqlnd_mbcharlen_utf8mb3		826862	2					
ANR	826901	ParameterList	unsigned int utf8		826862	3					
ANR	826902	Parameter	unsigned int utf8	152:46:4299:4315	826862	0	True				
ANR	826903	ParameterType	unsigned int		826862	0					
ANR	826904	Identifier	utf8		826862	1					
ANR	826905	CFGEntryNode	ENTRY		826862		True				
ANR	826906	CFGExitNode	EXIT		826862		True				
ANR	826907	Symbol	utf8		826862						
ANR	826908	Function	mysqlnd_mbcharlen_utf8	170:0:4594:4990							
ANR	826909	FunctionDef	mysqlnd_mbcharlen_utf8 (unsigned int utf8)		826908	0					
ANR	826910	CompoundStatement		171:0:4656:4990	826908	0					
ANR	826911	IfStatement	if ( utf8 < 0x80 )		826908	0					
ANR	826912	Condition	utf8 < 0x80	172:5:4663:4673	826908	0	True				
ANR	826913	RelationalExpression	utf8 < 0x80		826908	0		<			
ANR	826914	Identifier	utf8		826908	0					
ANR	826915	PrimaryExpression	0x80		826908	1					
ANR	826916	CompoundStatement		2:18:19:19	826908	1					
ANR	826917	ReturnStatement	return 1 ;	173:2:4680:4688	826908	0	True				
ANR	826918	PrimaryExpression	1		826908	0					
ANR	826919	IfStatement	if ( utf8 < 0xC2 )		826908	1					
ANR	826920	Condition	utf8 < 0xC2	175:5:4727:4737	826908	0	True				
ANR	826921	RelationalExpression	utf8 < 0xC2		826908	0		<			
ANR	826922	Identifier	utf8		826908	0					
ANR	826923	PrimaryExpression	0xC2		826908	1					
ANR	826924	CompoundStatement		5:18:83:83	826908	1					
ANR	826925	ReturnStatement	return 0 ;	176:2:4744:4752	826908	0	True				
ANR	826926	PrimaryExpression	0		826908	0					
ANR	826927	IfStatement	if ( utf8 < 0xE0 )		826908	2					
ANR	826928	Condition	utf8 < 0xE0	178:5:4794:4804	826908	0	True				
ANR	826929	RelationalExpression	utf8 < 0xE0		826908	0		<			
ANR	826930	Identifier	utf8		826908	0					
ANR	826931	PrimaryExpression	0xE0		826908	1					
ANR	826932	CompoundStatement		8:18:150:150	826908	1					
ANR	826933	ReturnStatement	return 2 ;	179:2:4811:4819	826908	0	True				
ANR	826934	PrimaryExpression	2		826908	0					
ANR	826935	IfStatement	if ( utf8 < 0xF0 )		826908	3					
ANR	826936	Condition	utf8 < 0xF0	181:5:4858:4868	826908	0	True				
ANR	826937	RelationalExpression	utf8 < 0xF0		826908	0		<			
ANR	826938	Identifier	utf8		826908	0					
ANR	826939	PrimaryExpression	0xF0		826908	1					
ANR	826940	CompoundStatement		11:18:214:214	826908	1					
ANR	826941	ReturnStatement	return 3 ;	182:2:4875:4883	826908	0	True				
ANR	826942	PrimaryExpression	3		826908	0					
ANR	826943	IfStatement	if ( utf8 < 0xF8 )		826908	4					
ANR	826944	Condition	utf8 < 0xF8	184:5:4922:4932	826908	0	True				
ANR	826945	RelationalExpression	utf8 < 0xF8		826908	0		<			
ANR	826946	Identifier	utf8		826908	0					
ANR	826947	PrimaryExpression	0xF8		826908	1					
ANR	826948	CompoundStatement		14:18:278:278	826908	1					
ANR	826949	ReturnStatement	return 4 ;	185:2:4939:4947	826908	0	True				
ANR	826950	PrimaryExpression	4		826908	0					
ANR	826951	ReturnStatement	return 0 ;	187:1:4980:4988	826908	5	True				
ANR	826952	PrimaryExpression	0		826908	0					
ANR	826953	ReturnType	static unsigned int		826908	1					
ANR	826954	Identifier	mysqlnd_mbcharlen_utf8		826908	2					
ANR	826955	ParameterList	unsigned int utf8		826908	3					
ANR	826956	Parameter	unsigned int utf8	170:43:4637:4653	826908	0	True				
ANR	826957	ParameterType	unsigned int		826908	0					
ANR	826958	Identifier	utf8		826908	1					
ANR	826959	CFGEntryNode	ENTRY		826908		True				
ANR	826960	CFGExitNode	EXIT		826908		True				
ANR	826961	Symbol	utf8		826908						
ANR	826962	Function	check_mb_big5	199:0:5325:5494							
ANR	826963	FunctionDef	"check_mb_big5 (const char * start , const char * end)"		826962	0					
ANR	826964	CompoundStatement		200:0:5395:5494	826962	0					
ANR	826965	ReturnStatement	return ( valid_big5head ( * ( start ) ) && ( end - start ) > 1 && valid_big5tail ( * ( start + 1 ) ) ? 2 : 0 ) ;	201:1:5398:5492	826962	0	True				
ANR	826966	ConditionalExpression	valid_big5head ( * ( start ) ) && ( end - start ) > 1 && valid_big5tail ( * ( start + 1 ) ) ? 2 : 0		826962	0					
ANR	826967	Condition	valid_big5head ( * ( start ) ) && ( end - start ) > 1 && valid_big5tail ( * ( start + 1 ) )		826962	0					
ANR	826968	AndExpression	valid_big5head ( * ( start ) ) && ( end - start ) > 1 && valid_big5tail ( * ( start + 1 ) )		826962	0		&&			
ANR	826969	CallExpression	valid_big5head ( * ( start ) )		826962	0					
ANR	826970	Callee	valid_big5head		826962	0					
ANR	826971	Identifier	valid_big5head		826962	0					
ANR	826972	ArgumentList	* ( start )		826962	1					
ANR	826973	Argument	* ( start )		826962	0					
ANR	826974	UnaryOperationExpression	* ( start )		826962	0					
ANR	826975	UnaryOperator	*		826962	0					
ANR	826976	Identifier	start		826962	1					
ANR	826977	AndExpression	( end - start ) > 1 && valid_big5tail ( * ( start + 1 ) )		826962	1		&&			
ANR	826978	RelationalExpression	( end - start ) > 1		826962	0		>			
ANR	826979	AdditiveExpression	end - start		826962	0		-			
ANR	826980	Identifier	end		826962	0					
ANR	826981	Identifier	start		826962	1					
ANR	826982	PrimaryExpression	1		826962	1					
ANR	826983	CallExpression	valid_big5tail ( * ( start + 1 ) )		826962	1					
ANR	826984	Callee	valid_big5tail		826962	0					
ANR	826985	Identifier	valid_big5tail		826962	0					
ANR	826986	ArgumentList	* ( start + 1 )		826962	1					
ANR	826987	Argument	* ( start + 1 )		826962	0					
ANR	826988	UnaryOperationExpression	* ( start + 1 )		826962	0					
ANR	826989	UnaryOperator	*		826962	0					
ANR	826990	AdditiveExpression	start + 1		826962	1		+			
ANR	826991	Identifier	start		826962	0					
ANR	826992	PrimaryExpression	1		826962	1					
ANR	826993	PrimaryExpression	2		826962	1					
ANR	826994	PrimaryExpression	0		826962	2					
ANR	826995	ReturnType	static unsigned int		826962	1					
ANR	826996	Identifier	check_mb_big5		826962	2					
ANR	826997	ParameterList	"const char * start , const char * end"		826962	3					
ANR	826998	Parameter	const char * start	199:34:5359:5375	826962	0	True				
ANR	826999	ParameterType	const char *		826962	0					
ANR	827000	Identifier	start		826962	1					
ANR	827001	Parameter	const char * end	199:53:5378:5392	826962	1	True				
ANR	827002	ParameterType	const char *		826962	0					
ANR	827003	Identifier	end		826962	1					
ANR	827004	CFGEntryNode	ENTRY		826962		True				
ANR	827005	CFGExitNode	EXIT		826962		True				
ANR	827006	Symbol	* ( start + 1 )		826962						
ANR	827007	Symbol	valid_big5tail		826962						
ANR	827008	Symbol	* start		826962						
ANR	827009	Symbol	start		826962						
ANR	827010	Symbol	* ( start )		826962						
ANR	827011	Symbol	end		826962						
ANR	827012	Symbol	valid_big5head		826962						
ANR	827013	Function	mysqlnd_mbcharlen_big5	205:0:5498:5602							
ANR	827014	FunctionDef	mysqlnd_mbcharlen_big5 (unsigned int big5)		827013	0					
ANR	827015	CompoundStatement		206:0:5560:5602	827013	0					
ANR	827016	ReturnStatement	return ( valid_big5head ( big5 ) ) ? 2 : 1 ;	207:1:5563:5600	827013	0	True				
ANR	827017	ConditionalExpression	( valid_big5head ( big5 ) ) ? 2 : 1		827013	0					
ANR	827018	Condition	valid_big5head ( big5 )		827013	0					
ANR	827019	CallExpression	valid_big5head ( big5 )		827013	0					
ANR	827020	Callee	valid_big5head		827013	0					
ANR	827021	Identifier	valid_big5head		827013	0					
ANR	827022	ArgumentList	big5		827013	1					
ANR	827023	Argument	big5		827013	0					
ANR	827024	Identifier	big5		827013	0					
ANR	827025	PrimaryExpression	2		827013	1					
ANR	827026	PrimaryExpression	1		827013	2					
ANR	827027	ReturnType	static unsigned int		827013	1					
ANR	827028	Identifier	mysqlnd_mbcharlen_big5		827013	2					
ANR	827029	ParameterList	unsigned int big5		827013	3					
ANR	827030	Parameter	unsigned int big5	205:43:5541:5557	827013	0	True				
ANR	827031	ParameterType	unsigned int		827013	0					
ANR	827032	Identifier	big5		827013	1					
ANR	827033	CFGEntryNode	ENTRY		827013		True				
ANR	827034	CFGExitNode	EXIT		827013		True				
ANR	827035	Symbol	big5		827013						
ANR	827036	Symbol	valid_big5head		827013						
ANR	827037	Function	check_mb_cp932	217:0:5820:6016							
ANR	827038	FunctionDef	"check_mb_cp932 (const char * start , const char * end)"		827037	0					
ANR	827039	CompoundStatement		218:0:5891:6016	827037	0					
ANR	827040	ReturnStatement	return ( valid_cp932head ( ( zend_uchar ) start [ 0 ] ) && ( end - start > 1 ) && valid_cp932tail ( ( zend_uchar ) start [ 1 ] ) ) ? 2 : 0 ;	219:1:5894:6014	827037	0	True				
ANR	827041	ConditionalExpression	( valid_cp932head ( ( zend_uchar ) start [ 0 ] ) && ( end - start > 1 ) && valid_cp932tail ( ( zend_uchar ) start [ 1 ] ) ) ? 2 : 0		827037	0					
ANR	827042	Condition	valid_cp932head ( ( zend_uchar ) start [ 0 ] ) && ( end - start > 1 ) && valid_cp932tail ( ( zend_uchar ) start [ 1 ] )		827037	0					
ANR	827043	AndExpression	valid_cp932head ( ( zend_uchar ) start [ 0 ] ) && ( end - start > 1 ) && valid_cp932tail ( ( zend_uchar ) start [ 1 ] )		827037	0		&&			
ANR	827044	CallExpression	valid_cp932head ( ( zend_uchar ) start [ 0 ] )		827037	0					
ANR	827045	Callee	valid_cp932head		827037	0					
ANR	827046	Identifier	valid_cp932head		827037	0					
ANR	827047	ArgumentList	( zend_uchar ) start [ 0 ]		827037	1					
ANR	827048	Argument	( zend_uchar ) start [ 0 ]		827037	0					
ANR	827049	CastExpression	( zend_uchar ) start [ 0 ]		827037	0					
ANR	827050	CastTarget	zend_uchar		827037	0					
ANR	827051	ArrayIndexing	start [ 0 ]		827037	1					
ANR	827052	Identifier	start		827037	0					
ANR	827053	PrimaryExpression	0		827037	1					
ANR	827054	AndExpression	( end - start > 1 ) && valid_cp932tail ( ( zend_uchar ) start [ 1 ] )		827037	1		&&			
ANR	827055	RelationalExpression	end - start > 1		827037	0		>			
ANR	827056	AdditiveExpression	end - start		827037	0		-			
ANR	827057	Identifier	end		827037	0					
ANR	827058	Identifier	start		827037	1					
ANR	827059	PrimaryExpression	1		827037	1					
ANR	827060	CallExpression	valid_cp932tail ( ( zend_uchar ) start [ 1 ] )		827037	1					
ANR	827061	Callee	valid_cp932tail		827037	0					
ANR	827062	Identifier	valid_cp932tail		827037	0					
ANR	827063	ArgumentList	( zend_uchar ) start [ 1 ]		827037	1					
ANR	827064	Argument	( zend_uchar ) start [ 1 ]		827037	0					
ANR	827065	CastExpression	( zend_uchar ) start [ 1 ]		827037	0					
ANR	827066	CastTarget	zend_uchar		827037	0					
ANR	827067	ArrayIndexing	start [ 1 ]		827037	1					
ANR	827068	Identifier	start		827037	0					
ANR	827069	PrimaryExpression	1		827037	1					
ANR	827070	PrimaryExpression	2		827037	1					
ANR	827071	PrimaryExpression	0		827037	2					
ANR	827072	ReturnType	static unsigned int		827037	1					
ANR	827073	Identifier	check_mb_cp932		827037	2					
ANR	827074	ParameterList	"const char * start , const char * end"		827037	3					
ANR	827075	Parameter	const char * start	217:35:5855:5871	827037	0	True				
ANR	827076	ParameterType	const char *		827037	0					
ANR	827077	Identifier	start		827037	1					
ANR	827078	Parameter	const char * end	217:54:5874:5888	827037	1	True				
ANR	827079	ParameterType	const char *		827037	0					
ANR	827080	Identifier	end		827037	1					
ANR	827081	CFGEntryNode	ENTRY		827037		True				
ANR	827082	CFGExitNode	EXIT		827037		True				
ANR	827083	Symbol	valid_cp932head		827037						
ANR	827084	Symbol	* start		827037						
ANR	827085	Symbol	start		827037						
ANR	827086	Symbol	end		827037						
ANR	827087	Symbol	valid_cp932tail		827037						
ANR	827088	Function	mysqlnd_mbcharlen_cp932	224:0:6020:6140							
ANR	827089	FunctionDef	mysqlnd_mbcharlen_cp932 (unsigned int cp932)		827088	0					
ANR	827090	CompoundStatement		225:0:6084:6140	827088	0					
ANR	827091	ReturnStatement	return ( valid_cp932head ( ( zend_uchar ) cp932 ) ) ? 2 : 1 ;	226:1:6087:6138	827088	0	True				
ANR	827092	ConditionalExpression	( valid_cp932head ( ( zend_uchar ) cp932 ) ) ? 2 : 1		827088	0					
ANR	827093	Condition	valid_cp932head ( ( zend_uchar ) cp932 )		827088	0					
ANR	827094	CallExpression	valid_cp932head ( ( zend_uchar ) cp932 )		827088	0					
ANR	827095	Callee	valid_cp932head		827088	0					
ANR	827096	Identifier	valid_cp932head		827088	0					
ANR	827097	ArgumentList	( zend_uchar ) cp932		827088	1					
ANR	827098	Argument	( zend_uchar ) cp932		827088	0					
ANR	827099	CastExpression	( zend_uchar ) cp932		827088	0					
ANR	827100	CastTarget	zend_uchar		827088	0					
ANR	827101	Identifier	cp932		827088	1					
ANR	827102	PrimaryExpression	2		827088	1					
ANR	827103	PrimaryExpression	1		827088	2					
ANR	827104	ReturnType	static unsigned int		827088	1					
ANR	827105	Identifier	mysqlnd_mbcharlen_cp932		827088	2					
ANR	827106	ParameterList	unsigned int cp932		827088	3					
ANR	827107	Parameter	unsigned int cp932	224:44:6064:6081	827088	0	True				
ANR	827108	ParameterType	unsigned int		827088	0					
ANR	827109	Identifier	cp932		827088	1					
ANR	827110	CFGEntryNode	ENTRY		827088		True				
ANR	827111	CFGExitNode	EXIT		827088		True				
ANR	827112	Symbol	valid_cp932head		827088						
ANR	827113	Symbol	cp932		827088						
ANR	827114	Function	check_mb_euckr	234:0:6259:6530							
ANR	827115	FunctionDef	"check_mb_euckr (const char * start , const char * end)"		827114	0					
ANR	827116	CompoundStatement		235:0:6330:6530	827114	0					
ANR	827117	IfStatement	if ( end - start <= 1 )		827114	0					
ANR	827118	Condition	end - start <= 1	236:5:6337:6352	827114	0	True				
ANR	827119	RelationalExpression	end - start <= 1		827114	0		<=			
ANR	827120	AdditiveExpression	end - start		827114	0		-			
ANR	827121	Identifier	end		827114	0					
ANR	827122	Identifier	start		827114	1					
ANR	827123	PrimaryExpression	1		827114	1					
ANR	827124	CompoundStatement		2:23:24:24	827114	1					
ANR	827125	ReturnStatement	return 0 ;	237:2:6359:6367	827114	0	True				
ANR	827126	PrimaryExpression	0		827114	0					
ANR	827127	IfStatement	if ( * ( zend_uchar * ) start < 0x80 )		827114	1					
ANR	827128	Condition	* ( zend_uchar * ) start < 0x80	239:5:6398:6424	827114	0	True				
ANR	827129	RelationalExpression	* ( zend_uchar * ) start < 0x80		827114	0		<			
ANR	827130	UnaryOperationExpression	* ( zend_uchar * ) start		827114	0					
ANR	827131	UnaryOperator	*		827114	0					
ANR	827132	CastExpression	( zend_uchar * ) start		827114	1					
ANR	827133	CastTarget	zend_uchar *		827114	0					
ANR	827134	Identifier	start		827114	1					
ANR	827135	PrimaryExpression	0x80		827114	1					
ANR	827136	CompoundStatement		5:34:96:96	827114	1					
ANR	827137	ReturnStatement	return 0 ;	240:2:6431:6439	827114	0	True				
ANR	827138	PrimaryExpression	0		827114	0					
ANR	827139	IfStatement	if ( valid_euckr ( start [ 1 ] ) )		827114	2					
ANR	827140	Condition	valid_euckr ( start [ 1 ] )	242:5:6479:6499	827114	0	True				
ANR	827141	CallExpression	valid_euckr ( start [ 1 ] )		827114	0					
ANR	827142	Callee	valid_euckr		827114	0					
ANR	827143	Identifier	valid_euckr		827114	0					
ANR	827144	ArgumentList	start [ 1 ]		827114	1					
ANR	827145	Argument	start [ 1 ]		827114	0					
ANR	827146	ArrayIndexing	start [ 1 ]		827114	0					
ANR	827147	Identifier	start		827114	0					
ANR	827148	PrimaryExpression	1		827114	1					
ANR	827149	CompoundStatement		8:28:171:171	827114	1					
ANR	827150	ReturnStatement	return 2 ;	243:2:6506:6514	827114	0	True				
ANR	827151	PrimaryExpression	2		827114	0					
ANR	827152	ReturnStatement	return 0 ;	245:1:6520:6528	827114	3	True				
ANR	827153	PrimaryExpression	0		827114	0					
ANR	827154	ReturnType	static unsigned int		827114	1					
ANR	827155	Identifier	check_mb_euckr		827114	2					
ANR	827156	ParameterList	"const char * start , const char * end"		827114	3					
ANR	827157	Parameter	const char * start	234:35:6294:6310	827114	0	True				
ANR	827158	ParameterType	const char *		827114	0					
ANR	827159	Identifier	start		827114	1					
ANR	827160	Parameter	const char * end	234:54:6313:6327	827114	1	True				
ANR	827161	ParameterType	const char *		827114	0					
ANR	827162	Identifier	end		827114	1					
ANR	827163	CFGEntryNode	ENTRY		827114		True				
ANR	827164	CFGExitNode	EXIT		827114		True				
ANR	827165	Symbol	* start		827114						
ANR	827166	Symbol	start		827114						
ANR	827167	Symbol	end		827114						
ANR	827168	Symbol	* ( zend_uchar * ) start		827114						
ANR	827169	Symbol	valid_euckr		827114						
ANR	827170	Function	mysqlnd_mbcharlen_euckr	249:0:6534:6632							
ANR	827171	FunctionDef	mysqlnd_mbcharlen_euckr (unsigned int kr)		827170	0					
ANR	827172	CompoundStatement		250:0:6595:6632	827170	0					
ANR	827173	ReturnStatement	return ( valid_euckr ( kr ) ) ? 2 : 1 ;	251:1:6598:6630	827170	0	True				
ANR	827174	ConditionalExpression	( valid_euckr ( kr ) ) ? 2 : 1		827170	0					
ANR	827175	Condition	valid_euckr ( kr )		827170	0					
ANR	827176	CallExpression	valid_euckr ( kr )		827170	0					
ANR	827177	Callee	valid_euckr		827170	0					
ANR	827178	Identifier	valid_euckr		827170	0					
ANR	827179	ArgumentList	kr		827170	1					
ANR	827180	Argument	kr		827170	0					
ANR	827181	Identifier	kr		827170	0					
ANR	827182	PrimaryExpression	2		827170	1					
ANR	827183	PrimaryExpression	1		827170	2					
ANR	827184	ReturnType	static unsigned int		827170	1					
ANR	827185	Identifier	mysqlnd_mbcharlen_euckr		827170	2					
ANR	827186	ParameterList	unsigned int kr		827170	3					
ANR	827187	Parameter	unsigned int kr	249:44:6578:6592	827170	0	True				
ANR	827188	ParameterType	unsigned int		827170	0					
ANR	827189	Identifier	kr		827170	1					
ANR	827190	CFGEntryNode	ENTRY		827170		True				
ANR	827191	CFGExitNode	EXIT		827170		True				
ANR	827192	Symbol	kr		827170						
ANR	827193	Symbol	valid_euckr		827170						
ANR	827194	Function	check_mb_eucjpms	262:0:6930:7428							
ANR	827195	FunctionDef	"check_mb_eucjpms (const char * start , const char * end)"		827194	0					
ANR	827196	CompoundStatement		263:0:7003:7428	827194	0					
ANR	827197	IfStatement	if ( * ( ( zend_uchar * ) start ) < 0x80 )		827194	0					
ANR	827198	Condition	* ( ( zend_uchar * ) start ) < 0x80	264:5:7010:7038	827194	0	True				
ANR	827199	RelationalExpression	* ( ( zend_uchar * ) start ) < 0x80		827194	0		<			
ANR	827200	UnaryOperationExpression	* ( ( zend_uchar * ) start )		827194	0					
ANR	827201	UnaryOperator	*		827194	0					
ANR	827202	CastExpression	( zend_uchar * ) start		827194	1					
ANR	827203	CastTarget	zend_uchar *		827194	0					
ANR	827204	Identifier	start		827194	1					
ANR	827205	PrimaryExpression	0x80		827194	1					
ANR	827206	CompoundStatement		2:36:37:37	827194	1					
ANR	827207	ReturnStatement	return 0 ;	265:2:7045:7053	827194	0	True				
ANR	827208	PrimaryExpression	0		827194	0					
ANR	827209	IfStatement	if ( valid_eucjpms ( start [ 0 ] ) && ( end - start ) > 1 && valid_eucjpms ( start [ 1 ] ) )		827194	1					
ANR	827210	Condition	valid_eucjpms ( start [ 0 ] ) && ( end - start ) > 1 && valid_eucjpms ( start [ 1 ] )	267:5:7095:7165	827194	0	True				
ANR	827211	AndExpression	valid_eucjpms ( start [ 0 ] ) && ( end - start ) > 1 && valid_eucjpms ( start [ 1 ] )		827194	0		&&			
ANR	827212	CallExpression	valid_eucjpms ( start [ 0 ] )		827194	0					
ANR	827213	Callee	valid_eucjpms		827194	0					
ANR	827214	Identifier	valid_eucjpms		827194	0					
ANR	827215	ArgumentList	start [ 0 ]		827194	1					
ANR	827216	Argument	start [ 0 ]		827194	0					
ANR	827217	ArrayIndexing	start [ 0 ]		827194	0					
ANR	827218	Identifier	start		827194	0					
ANR	827219	PrimaryExpression	0		827194	1					
ANR	827220	AndExpression	( end - start ) > 1 && valid_eucjpms ( start [ 1 ] )		827194	1		&&			
ANR	827221	RelationalExpression	( end - start ) > 1		827194	0		>			
ANR	827222	AdditiveExpression	end - start		827194	0		-			
ANR	827223	Identifier	end		827194	0					
ANR	827224	Identifier	start		827194	1					
ANR	827225	PrimaryExpression	1		827194	1					
ANR	827226	CallExpression	valid_eucjpms ( start [ 1 ] )		827194	1					
ANR	827227	Callee	valid_eucjpms		827194	0					
ANR	827228	Identifier	valid_eucjpms		827194	0					
ANR	827229	ArgumentList	start [ 1 ]		827194	1					
ANR	827230	Argument	start [ 1 ]		827194	0					
ANR	827231	ArrayIndexing	start [ 1 ]		827194	0					
ANR	827232	Identifier	start		827194	0					
ANR	827233	PrimaryExpression	1		827194	1					
ANR	827234	CompoundStatement		5:78:164:164	827194	1					
ANR	827235	ReturnStatement	return 2 ;	268:2:7172:7180	827194	0	True				
ANR	827236	PrimaryExpression	2		827194	0					
ANR	827237	IfStatement	if ( valid_eucjpms_ss2 ( start [ 0 ] ) && ( end - start ) > 1 && valid_eucjpms_kata ( start [ 1 ] ) )		827194	2					
ANR	827238	Condition	valid_eucjpms_ss2 ( start [ 0 ] ) && ( end - start ) > 1 && valid_eucjpms_kata ( start [ 1 ] )	270:5:7190:7269	827194	0	True				
ANR	827239	AndExpression	valid_eucjpms_ss2 ( start [ 0 ] ) && ( end - start ) > 1 && valid_eucjpms_kata ( start [ 1 ] )		827194	0		&&			
ANR	827240	CallExpression	valid_eucjpms_ss2 ( start [ 0 ] )		827194	0					
ANR	827241	Callee	valid_eucjpms_ss2		827194	0					
ANR	827242	Identifier	valid_eucjpms_ss2		827194	0					
ANR	827243	ArgumentList	start [ 0 ]		827194	1					
ANR	827244	Argument	start [ 0 ]		827194	0					
ANR	827245	ArrayIndexing	start [ 0 ]		827194	0					
ANR	827246	Identifier	start		827194	0					
ANR	827247	PrimaryExpression	0		827194	1					
ANR	827248	AndExpression	( end - start ) > 1 && valid_eucjpms_kata ( start [ 1 ] )		827194	1		&&			
ANR	827249	RelationalExpression	( end - start ) > 1		827194	0		>			
ANR	827250	AdditiveExpression	end - start		827194	0		-			
ANR	827251	Identifier	end		827194	0					
ANR	827252	Identifier	start		827194	1					
ANR	827253	PrimaryExpression	1		827194	1					
ANR	827254	CallExpression	valid_eucjpms_kata ( start [ 1 ] )		827194	1					
ANR	827255	Callee	valid_eucjpms_kata		827194	0					
ANR	827256	Identifier	valid_eucjpms_kata		827194	0					
ANR	827257	ArgumentList	start [ 1 ]		827194	1					
ANR	827258	Argument	start [ 1 ]		827194	0					
ANR	827259	ArrayIndexing	start [ 1 ]		827194	0					
ANR	827260	Identifier	start		827194	0					
ANR	827261	PrimaryExpression	1		827194	1					
ANR	827262	CompoundStatement		8:87:268:268	827194	1					
ANR	827263	ReturnStatement	return 2 ;	271:2:7276:7284	827194	0	True				
ANR	827264	PrimaryExpression	2		827194	0					
ANR	827265	IfStatement	if ( valid_eucjpms_ss3 ( start [ 0 ] ) && ( end - start ) > 2 && valid_eucjpms ( start [ 1 ] ) && valid_eucjpms ( start [ 2 ] ) )		827194	3					
ANR	827266	Condition	valid_eucjpms_ss3 ( start [ 0 ] ) && ( end - start ) > 2 && valid_eucjpms ( start [ 1 ] ) && valid_eucjpms ( start [ 2 ] )	273:5:7294:7397	827194	0	True				
ANR	827267	AndExpression	valid_eucjpms_ss3 ( start [ 0 ] ) && ( end - start ) > 2 && valid_eucjpms ( start [ 1 ] ) && valid_eucjpms ( start [ 2 ] )		827194	0		&&			
ANR	827268	CallExpression	valid_eucjpms_ss3 ( start [ 0 ] )		827194	0					
ANR	827269	Callee	valid_eucjpms_ss3		827194	0					
ANR	827270	Identifier	valid_eucjpms_ss3		827194	0					
ANR	827271	ArgumentList	start [ 0 ]		827194	1					
ANR	827272	Argument	start [ 0 ]		827194	0					
ANR	827273	ArrayIndexing	start [ 0 ]		827194	0					
ANR	827274	Identifier	start		827194	0					
ANR	827275	PrimaryExpression	0		827194	1					
ANR	827276	AndExpression	( end - start ) > 2 && valid_eucjpms ( start [ 1 ] ) && valid_eucjpms ( start [ 2 ] )		827194	1		&&			
ANR	827277	RelationalExpression	( end - start ) > 2		827194	0		>			
ANR	827278	AdditiveExpression	end - start		827194	0		-			
ANR	827279	Identifier	end		827194	0					
ANR	827280	Identifier	start		827194	1					
ANR	827281	PrimaryExpression	2		827194	1					
ANR	827282	AndExpression	valid_eucjpms ( start [ 1 ] ) && valid_eucjpms ( start [ 2 ] )		827194	1		&&			
ANR	827283	CallExpression	valid_eucjpms ( start [ 1 ] )		827194	0					
ANR	827284	Callee	valid_eucjpms		827194	0					
ANR	827285	Identifier	valid_eucjpms		827194	0					
ANR	827286	ArgumentList	start [ 1 ]		827194	1					
ANR	827287	Argument	start [ 1 ]		827194	0					
ANR	827288	ArrayIndexing	start [ 1 ]		827194	0					
ANR	827289	Identifier	start		827194	0					
ANR	827290	PrimaryExpression	1		827194	1					
ANR	827291	CallExpression	valid_eucjpms ( start [ 2 ] )		827194	1					
ANR	827292	Callee	valid_eucjpms		827194	0					
ANR	827293	Identifier	valid_eucjpms		827194	0					
ANR	827294	ArgumentList	start [ 2 ]		827194	1					
ANR	827295	Argument	start [ 2 ]		827194	0					
ANR	827296	ArrayIndexing	start [ 2 ]		827194	0					
ANR	827297	Identifier	start		827194	0					
ANR	827298	PrimaryExpression	2		827194	1					
ANR	827299	CompoundStatement		12:27:396:396	827194	1					
ANR	827300	ReturnStatement	return 2 ;	275:2:7404:7412	827194	0	True				
ANR	827301	PrimaryExpression	2		827194	0					
ANR	827302	ReturnStatement	return 0 ;	277:1:7418:7426	827194	4	True				
ANR	827303	PrimaryExpression	0		827194	0					
ANR	827304	ReturnType	static unsigned int		827194	1					
ANR	827305	Identifier	check_mb_eucjpms		827194	2					
ANR	827306	ParameterList	"const char * start , const char * end"		827194	3					
ANR	827307	Parameter	const char * start	262:37:6967:6983	827194	0	True				
ANR	827308	ParameterType	const char *		827194	0					
ANR	827309	Identifier	start		827194	1					
ANR	827310	Parameter	const char * end	262:56:6986:7000	827194	1	True				
ANR	827311	ParameterType	const char *		827194	0					
ANR	827312	Identifier	end		827194	1					
ANR	827313	CFGEntryNode	ENTRY		827194		True				
ANR	827314	CFGExitNode	EXIT		827194		True				
ANR	827315	Symbol	valid_eucjpms_ss2		827194						
ANR	827316	Symbol	valid_eucjpms_kata		827194						
ANR	827317	Symbol	* start		827194						
ANR	827318	Symbol	valid_eucjpms		827194						
ANR	827319	Symbol	start		827194						
ANR	827320	Symbol	end		827194						
ANR	827321	Symbol	* ( ( zend_uchar * ) start )		827194						
ANR	827322	Symbol	valid_eucjpms_ss3		827194						
ANR	827323	Function	mysqlnd_mbcharlen_eucjpms	281:0:7432:7627							
ANR	827324	FunctionDef	mysqlnd_mbcharlen_eucjpms (unsigned int jpms)		827323	0					
ANR	827325	CompoundStatement		282:0:7497:7627	827323	0					
ANR	827326	IfStatement	if ( valid_eucjpms ( jpms ) || valid_eucjpms_ss2 ( jpms ) )		827323	0					
ANR	827327	Condition	valid_eucjpms ( jpms ) || valid_eucjpms_ss2 ( jpms )	283:5:7504:7549	827323	0	True				
ANR	827328	OrExpression	valid_eucjpms ( jpms ) || valid_eucjpms_ss2 ( jpms )		827323	0		||			
ANR	827329	CallExpression	valid_eucjpms ( jpms )		827323	0					
ANR	827330	Callee	valid_eucjpms		827323	0					
ANR	827331	Identifier	valid_eucjpms		827323	0					
ANR	827332	ArgumentList	jpms		827323	1					
ANR	827333	Argument	jpms		827323	0					
ANR	827334	Identifier	jpms		827323	0					
ANR	827335	CallExpression	valid_eucjpms_ss2 ( jpms )		827323	1					
ANR	827336	Callee	valid_eucjpms_ss2		827323	0					
ANR	827337	Identifier	valid_eucjpms_ss2		827323	0					
ANR	827338	ArgumentList	jpms		827323	1					
ANR	827339	Argument	jpms		827323	0					
ANR	827340	Identifier	jpms		827323	0					
ANR	827341	CompoundStatement		2:53:54:54	827323	1					
ANR	827342	ReturnStatement	return 2 ;	284:2:7556:7564	827323	0	True				
ANR	827343	PrimaryExpression	2		827323	0					
ANR	827344	IfStatement	if ( valid_eucjpms_ss3 ( jpms ) )		827323	1					
ANR	827345	Condition	valid_eucjpms_ss3 ( jpms )	286:5:7574:7596	827323	0	True				
ANR	827346	CallExpression	valid_eucjpms_ss3 ( jpms )		827323	0					
ANR	827347	Callee	valid_eucjpms_ss3		827323	0					
ANR	827348	Identifier	valid_eucjpms_ss3		827323	0					
ANR	827349	ArgumentList	jpms		827323	1					
ANR	827350	Argument	jpms		827323	0					
ANR	827351	Identifier	jpms		827323	0					
ANR	827352	CompoundStatement		5:30:101:101	827323	1					
ANR	827353	ReturnStatement	return 3 ;	287:2:7603:7611	827323	0	True				
ANR	827354	PrimaryExpression	3		827323	0					
ANR	827355	ReturnStatement	return 1 ;	289:1:7617:7625	827323	2	True				
ANR	827356	PrimaryExpression	1		827323	0					
ANR	827357	ReturnType	static unsigned int		827323	1					
ANR	827358	Identifier	mysqlnd_mbcharlen_eucjpms		827323	2					
ANR	827359	ParameterList	unsigned int jpms		827323	3					
ANR	827360	Parameter	unsigned int jpms	281:46:7478:7494	827323	0	True				
ANR	827361	ParameterType	unsigned int		827323	0					
ANR	827362	Identifier	jpms		827323	1					
ANR	827363	CFGEntryNode	ENTRY		827323		True				
ANR	827364	CFGExitNode	EXIT		827323		True				
ANR	827365	Symbol	valid_eucjpms_ss2		827323						
ANR	827366	Symbol	valid_eucjpms		827323						
ANR	827367	Symbol	jpms		827323						
ANR	827368	Symbol	valid_eucjpms_ss3		827323						
ANR	827369	Function	check_mb_gb2312	299:0:7834:8036							
ANR	827370	FunctionDef	"check_mb_gb2312 (const char * start , const char * end)"		827369	0					
ANR	827371	CompoundStatement		300:0:7906:8036	827369	0					
ANR	827372	ReturnStatement	return ( valid_gb2312_head ( ( unsigned int ) start [ 0 ] ) && end - start > 1 && valid_gb2312_tail ( ( unsigned int ) start [ 1 ] ) ) ? 2 : 0 ;	301:1:7909:8034	827369	0	True				
ANR	827373	ConditionalExpression	( valid_gb2312_head ( ( unsigned int ) start [ 0 ] ) && end - start > 1 && valid_gb2312_tail ( ( unsigned int ) start [ 1 ] ) ) ? 2 : 0		827369	0					
ANR	827374	Condition	valid_gb2312_head ( ( unsigned int ) start [ 0 ] ) && end - start > 1 && valid_gb2312_tail ( ( unsigned int ) start [ 1 ] )		827369	0					
ANR	827375	AndExpression	valid_gb2312_head ( ( unsigned int ) start [ 0 ] ) && end - start > 1 && valid_gb2312_tail ( ( unsigned int ) start [ 1 ] )		827369	0		&&			
ANR	827376	CallExpression	valid_gb2312_head ( ( unsigned int ) start [ 0 ] )		827369	0					
ANR	827377	Callee	valid_gb2312_head		827369	0					
ANR	827378	Identifier	valid_gb2312_head		827369	0					
ANR	827379	ArgumentList	( unsigned int ) start [ 0 ]		827369	1					
ANR	827380	Argument	( unsigned int ) start [ 0 ]		827369	0					
ANR	827381	CastExpression	( unsigned int ) start [ 0 ]		827369	0					
ANR	827382	CastTarget	unsigned int		827369	0					
ANR	827383	ArrayIndexing	start [ 0 ]		827369	1					
ANR	827384	Identifier	start		827369	0					
ANR	827385	PrimaryExpression	0		827369	1					
ANR	827386	AndExpression	end - start > 1 && valid_gb2312_tail ( ( unsigned int ) start [ 1 ] )		827369	1		&&			
ANR	827387	RelationalExpression	end - start > 1		827369	0		>			
ANR	827388	AdditiveExpression	end - start		827369	0		-			
ANR	827389	Identifier	end		827369	0					
ANR	827390	Identifier	start		827369	1					
ANR	827391	PrimaryExpression	1		827369	1					
ANR	827392	CallExpression	valid_gb2312_tail ( ( unsigned int ) start [ 1 ] )		827369	1					
ANR	827393	Callee	valid_gb2312_tail		827369	0					
ANR	827394	Identifier	valid_gb2312_tail		827369	0					
ANR	827395	ArgumentList	( unsigned int ) start [ 1 ]		827369	1					
ANR	827396	Argument	( unsigned int ) start [ 1 ]		827369	0					
ANR	827397	CastExpression	( unsigned int ) start [ 1 ]		827369	0					
ANR	827398	CastTarget	unsigned int		827369	0					
ANR	827399	ArrayIndexing	start [ 1 ]		827369	1					
ANR	827400	Identifier	start		827369	0					
ANR	827401	PrimaryExpression	1		827369	1					
ANR	827402	PrimaryExpression	2		827369	1					
ANR	827403	PrimaryExpression	0		827369	2					
ANR	827404	ReturnType	static unsigned int		827369	1					
ANR	827405	Identifier	check_mb_gb2312		827369	2					
ANR	827406	ParameterList	"const char * start , const char * end"		827369	3					
ANR	827407	Parameter	const char * start	299:36:7870:7886	827369	0	True				
ANR	827408	ParameterType	const char *		827369	0					
ANR	827409	Identifier	start		827369	1					
ANR	827410	Parameter	const char * end	299:55:7889:7903	827369	1	True				
ANR	827411	ParameterType	const char *		827369	0					
ANR	827412	Identifier	end		827369	1					
ANR	827413	CFGEntryNode	ENTRY		827369		True				
ANR	827414	CFGExitNode	EXIT		827369		True				
ANR	827415	Symbol	valid_gb2312_head		827369						
ANR	827416	Symbol	* start		827369						
ANR	827417	Symbol	start		827369						
ANR	827418	Symbol	end		827369						
ANR	827419	Symbol	valid_gb2312_tail		827369						
ANR	827420	Function	mysqlnd_mbcharlen_gb2312	306:0:8040:8145							
ANR	827421	FunctionDef	mysqlnd_mbcharlen_gb2312 (unsigned int gb)		827420	0					
ANR	827422	CompoundStatement		307:0:8102:8145	827420	0					
ANR	827423	ReturnStatement	return ( valid_gb2312_head ( gb ) ) ? 2 : 1 ;	308:1:8105:8143	827420	0	True				
ANR	827424	ConditionalExpression	( valid_gb2312_head ( gb ) ) ? 2 : 1		827420	0					
ANR	827425	Condition	valid_gb2312_head ( gb )		827420	0					
ANR	827426	CallExpression	valid_gb2312_head ( gb )		827420	0					
ANR	827427	Callee	valid_gb2312_head		827420	0					
ANR	827428	Identifier	valid_gb2312_head		827420	0					
ANR	827429	ArgumentList	gb		827420	1					
ANR	827430	Argument	gb		827420	0					
ANR	827431	Identifier	gb		827420	0					
ANR	827432	PrimaryExpression	2		827420	1					
ANR	827433	PrimaryExpression	1		827420	2					
ANR	827434	ReturnType	static unsigned int		827420	1					
ANR	827435	Identifier	mysqlnd_mbcharlen_gb2312		827420	2					
ANR	827436	ParameterList	unsigned int gb		827420	3					
ANR	827437	Parameter	unsigned int gb	306:45:8085:8099	827420	0	True				
ANR	827438	ParameterType	unsigned int		827420	0					
ANR	827439	Identifier	gb		827420	1					
ANR	827440	CFGEntryNode	ENTRY		827420		True				
ANR	827441	CFGExitNode	EXIT		827420		True				
ANR	827442	Symbol	valid_gb2312_head		827420						
ANR	827443	Symbol	gb		827420						
ANR	827444	Function	check_mb_gbk	317:0:8388:8554							
ANR	827445	FunctionDef	"check_mb_gbk (const char * start , const char * end)"		827444	0					
ANR	827446	CompoundStatement		318:0:8457:8554	827444	0					
ANR	827447	ReturnStatement	return ( valid_gbk_head ( start [ 0 ] ) && ( end ) - ( start ) > 1 && valid_gbk_tail ( start [ 1 ] ) ) ? 2 : 0 ;	319:1:8460:8552	827444	0	True				
ANR	827448	ConditionalExpression	( valid_gbk_head ( start [ 0 ] ) && ( end ) - ( start ) > 1 && valid_gbk_tail ( start [ 1 ] ) ) ? 2 : 0		827444	0					
ANR	827449	Condition	valid_gbk_head ( start [ 0 ] ) && ( end ) - ( start ) > 1 && valid_gbk_tail ( start [ 1 ] )		827444	0					
ANR	827450	AndExpression	valid_gbk_head ( start [ 0 ] ) && ( end ) - ( start ) > 1 && valid_gbk_tail ( start [ 1 ] )		827444	0		&&			
ANR	827451	CallExpression	valid_gbk_head ( start [ 0 ] )		827444	0					
ANR	827452	Callee	valid_gbk_head		827444	0					
ANR	827453	Identifier	valid_gbk_head		827444	0					
ANR	827454	ArgumentList	start [ 0 ]		827444	1					
ANR	827455	Argument	start [ 0 ]		827444	0					
ANR	827456	ArrayIndexing	start [ 0 ]		827444	0					
ANR	827457	Identifier	start		827444	0					
ANR	827458	PrimaryExpression	0		827444	1					
ANR	827459	AndExpression	( end ) - ( start ) > 1 && valid_gbk_tail ( start [ 1 ] )		827444	1		&&			
ANR	827460	RelationalExpression	( end ) - ( start ) > 1		827444	0		>			
ANR	827461	CastExpression	( end ) - ( start )		827444	0					
ANR	827462	CastTarget	end		827444	0					
ANR	827463	UnaryOperationExpression	- ( start )		827444	1					
ANR	827464	UnaryOperator	-		827444	0					
ANR	827465	Identifier	start		827444	1					
ANR	827466	PrimaryExpression	1		827444	1					
ANR	827467	CallExpression	valid_gbk_tail ( start [ 1 ] )		827444	1					
ANR	827468	Callee	valid_gbk_tail		827444	0					
ANR	827469	Identifier	valid_gbk_tail		827444	0					
ANR	827470	ArgumentList	start [ 1 ]		827444	1					
ANR	827471	Argument	start [ 1 ]		827444	0					
ANR	827472	ArrayIndexing	start [ 1 ]		827444	0					
ANR	827473	Identifier	start		827444	0					
ANR	827474	PrimaryExpression	1		827444	1					
ANR	827475	PrimaryExpression	2		827444	1					
ANR	827476	PrimaryExpression	0		827444	2					
ANR	827477	ReturnType	static unsigned int		827444	1					
ANR	827478	Identifier	check_mb_gbk		827444	2					
ANR	827479	ParameterList	"const char * start , const char * end"		827444	3					
ANR	827480	Parameter	const char * start	317:33:8421:8437	827444	0	True				
ANR	827481	ParameterType	const char *		827444	0					
ANR	827482	Identifier	start		827444	1					
ANR	827483	Parameter	const char * end	317:52:8440:8454	827444	1	True				
ANR	827484	ParameterType	const char *		827444	0					
ANR	827485	Identifier	end		827444	1					
ANR	827486	CFGEntryNode	ENTRY		827444		True				
ANR	827487	CFGExitNode	EXIT		827444		True				
ANR	827488	Symbol	valid_gbk_head		827444						
ANR	827489	Symbol	* start		827444						
ANR	827490	Symbol	start		827444						
ANR	827491	Symbol	end		827444						
ANR	827492	Symbol	valid_gbk_tail		827444						
ANR	827493	Function	mysqlnd_mbcharlen_gbk	322:0:8557:8658							
ANR	827494	FunctionDef	mysqlnd_mbcharlen_gbk (unsigned int gbk)		827493	0					
ANR	827495	CompoundStatement		323:0:8617:8658	827493	0					
ANR	827496	ReturnStatement	return ( valid_gbk_head ( gbk ) ? 2 : 1 ) ;	324:1:8620:8656	827493	0	True				
ANR	827497	ConditionalExpression	valid_gbk_head ( gbk ) ? 2 : 1		827493	0					
ANR	827498	Condition	valid_gbk_head ( gbk )		827493	0					
ANR	827499	CallExpression	valid_gbk_head ( gbk )		827493	0					
ANR	827500	Callee	valid_gbk_head		827493	0					
ANR	827501	Identifier	valid_gbk_head		827493	0					
ANR	827502	ArgumentList	gbk		827493	1					
ANR	827503	Argument	gbk		827493	0					
ANR	827504	Identifier	gbk		827493	0					
ANR	827505	PrimaryExpression	2		827493	1					
ANR	827506	PrimaryExpression	1		827493	2					
ANR	827507	ReturnType	static unsigned int		827493	1					
ANR	827508	Identifier	mysqlnd_mbcharlen_gbk		827493	2					
ANR	827509	ParameterList	unsigned int gbk		827493	3					
ANR	827510	Parameter	unsigned int gbk	322:42:8599:8614	827493	0	True				
ANR	827511	ParameterType	unsigned int		827493	0					
ANR	827512	Identifier	gbk		827493	1					
ANR	827513	CFGEntryNode	ENTRY		827493		True				
ANR	827514	CFGExitNode	EXIT		827493		True				
ANR	827515	Symbol	valid_gbk_head		827493						
ANR	827516	Symbol	gbk		827493						
ANR	827517	Function	check_mb_sjis	334:0:8879:9070							
ANR	827518	FunctionDef	"check_mb_sjis (const char * start , const char * end)"		827517	0					
ANR	827519	CompoundStatement		335:0:8949:9070	827517	0					
ANR	827520	ReturnStatement	return ( valid_sjis_head ( ( zend_uchar ) start [ 0 ] ) && ( end - start ) > 1 && valid_sjis_tail ( ( zend_uchar ) start [ 1 ] ) ) ? 2 : 0 ;	336:1:8952:9068	827517	0	True				
ANR	827521	ConditionalExpression	( valid_sjis_head ( ( zend_uchar ) start [ 0 ] ) && ( end - start ) > 1 && valid_sjis_tail ( ( zend_uchar ) start [ 1 ] ) ) ? 2 : 0		827517	0					
ANR	827522	Condition	valid_sjis_head ( ( zend_uchar ) start [ 0 ] ) && ( end - start ) > 1 && valid_sjis_tail ( ( zend_uchar ) start [ 1 ] )		827517	0					
ANR	827523	AndExpression	valid_sjis_head ( ( zend_uchar ) start [ 0 ] ) && ( end - start ) > 1 && valid_sjis_tail ( ( zend_uchar ) start [ 1 ] )		827517	0		&&			
ANR	827524	CallExpression	valid_sjis_head ( ( zend_uchar ) start [ 0 ] )		827517	0					
ANR	827525	Callee	valid_sjis_head		827517	0					
ANR	827526	Identifier	valid_sjis_head		827517	0					
ANR	827527	ArgumentList	( zend_uchar ) start [ 0 ]		827517	1					
ANR	827528	Argument	( zend_uchar ) start [ 0 ]		827517	0					
ANR	827529	CastExpression	( zend_uchar ) start [ 0 ]		827517	0					
ANR	827530	CastTarget	zend_uchar		827517	0					
ANR	827531	ArrayIndexing	start [ 0 ]		827517	1					
ANR	827532	Identifier	start		827517	0					
ANR	827533	PrimaryExpression	0		827517	1					
ANR	827534	AndExpression	( end - start ) > 1 && valid_sjis_tail ( ( zend_uchar ) start [ 1 ] )		827517	1		&&			
ANR	827535	RelationalExpression	( end - start ) > 1		827517	0		>			
ANR	827536	AdditiveExpression	end - start		827517	0		-			
ANR	827537	Identifier	end		827517	0					
ANR	827538	Identifier	start		827517	1					
ANR	827539	PrimaryExpression	1		827517	1					
ANR	827540	CallExpression	valid_sjis_tail ( ( zend_uchar ) start [ 1 ] )		827517	1					
ANR	827541	Callee	valid_sjis_tail		827517	0					
ANR	827542	Identifier	valid_sjis_tail		827517	0					
ANR	827543	ArgumentList	( zend_uchar ) start [ 1 ]		827517	1					
ANR	827544	Argument	( zend_uchar ) start [ 1 ]		827517	0					
ANR	827545	CastExpression	( zend_uchar ) start [ 1 ]		827517	0					
ANR	827546	CastTarget	zend_uchar		827517	0					
ANR	827547	ArrayIndexing	start [ 1 ]		827517	1					
ANR	827548	Identifier	start		827517	0					
ANR	827549	PrimaryExpression	1		827517	1					
ANR	827550	PrimaryExpression	2		827517	1					
ANR	827551	PrimaryExpression	0		827517	2					
ANR	827552	ReturnType	static unsigned int		827517	1					
ANR	827553	Identifier	check_mb_sjis		827517	2					
ANR	827554	ParameterList	"const char * start , const char * end"		827517	3					
ANR	827555	Parameter	const char * start	334:34:8913:8929	827517	0	True				
ANR	827556	ParameterType	const char *		827517	0					
ANR	827557	Identifier	start		827517	1					
ANR	827558	Parameter	const char * end	334:53:8932:8946	827517	1	True				
ANR	827559	ParameterType	const char *		827517	0					
ANR	827560	Identifier	end		827517	1					
ANR	827561	CFGEntryNode	ENTRY		827517		True				
ANR	827562	CFGExitNode	EXIT		827517		True				
ANR	827563	Symbol	valid_sjis_head		827517						
ANR	827564	Symbol	valid_sjis_tail		827517						
ANR	827565	Symbol	* start		827517						
ANR	827566	Symbol	start		827517						
ANR	827567	Symbol	end		827517						
ANR	827568	Function	mysqlnd_mbcharlen_sjis	340:0:9074:9191							
ANR	827569	FunctionDef	mysqlnd_mbcharlen_sjis (unsigned int sjis)		827568	0					
ANR	827570	CompoundStatement		341:0:9136:9191	827568	0					
ANR	827571	ReturnStatement	return ( valid_sjis_head ( ( zend_uchar ) sjis ) ) ? 2 : 1 ;	342:1:9139:9189	827568	0	True				
ANR	827572	ConditionalExpression	( valid_sjis_head ( ( zend_uchar ) sjis ) ) ? 2 : 1		827568	0					
ANR	827573	Condition	valid_sjis_head ( ( zend_uchar ) sjis )		827568	0					
ANR	827574	CallExpression	valid_sjis_head ( ( zend_uchar ) sjis )		827568	0					
ANR	827575	Callee	valid_sjis_head		827568	0					
ANR	827576	Identifier	valid_sjis_head		827568	0					
ANR	827577	ArgumentList	( zend_uchar ) sjis		827568	1					
ANR	827578	Argument	( zend_uchar ) sjis		827568	0					
ANR	827579	CastExpression	( zend_uchar ) sjis		827568	0					
ANR	827580	CastTarget	zend_uchar		827568	0					
ANR	827581	Identifier	sjis		827568	1					
ANR	827582	PrimaryExpression	2		827568	1					
ANR	827583	PrimaryExpression	1		827568	2					
ANR	827584	ReturnType	static unsigned int		827568	1					
ANR	827585	Identifier	mysqlnd_mbcharlen_sjis		827568	2					
ANR	827586	ParameterList	unsigned int sjis		827568	3					
ANR	827587	Parameter	unsigned int sjis	340:43:9117:9133	827568	0	True				
ANR	827588	ParameterType	unsigned int		827568	0					
ANR	827589	Identifier	sjis		827568	1					
ANR	827590	CFGEntryNode	ENTRY		827568		True				
ANR	827591	CFGExitNode	EXIT		827568		True				
ANR	827592	Symbol	valid_sjis_head		827568						
ANR	827593	Symbol	sjis		827568						
ANR	827594	Function	mysqlnd_mbcharlen_ucs2	353:0:9375:9487							
ANR	827595	FunctionDef	mysqlnd_mbcharlen_ucs2 (unsigned int ucs2 __attribute ( ( unused ) ))		827594	0					
ANR	827596	CompoundStatement		354:0:9459:9487	827594	0					
ANR	827597	ReturnStatement	return 2 ;	355:1:9462:9470	827594	0	True				
ANR	827598	PrimaryExpression	2		827594	0					
ANR	827599	ReturnType	static unsigned int		827594	1					
ANR	827600	Identifier	mysqlnd_mbcharlen_ucs2		827594	2					
ANR	827601	ParameterList	unsigned int ucs2 __attribute ( ( unused ) )		827594	3					
ANR	827602	Parameter	unsigned int ucs2 __attribute ( ( unused ) )	353:43:9418:9456	827594	0	True				
ANR	827603	ParameterType	((unsigned int ucs2 __attribute))		827594	0					
ANR	827604	Identifier	unused		827594	1					
ANR	827605	CFGEntryNode	ENTRY		827594		True				
ANR	827606	CFGExitNode	EXIT		827594		True				
ANR	827607	Symbol	unused		827594						
ANR	827608	Function	check_mb_ujis	366:0:9768:10206							
ANR	827609	FunctionDef	"check_mb_ujis (const char * start , const char * end)"		827608	0					
ANR	827610	CompoundStatement		367:0:9838:10206	827608	0					
ANR	827611	IfStatement	if ( * ( zend_uchar * ) start < 0x80 )		827608	0					
ANR	827612	Condition	* ( zend_uchar * ) start < 0x80	368:5:9845:9870	827608	0	True				
ANR	827613	RelationalExpression	* ( zend_uchar * ) start < 0x80		827608	0		<			
ANR	827614	UnaryOperationExpression	* ( zend_uchar * ) start		827608	0					
ANR	827615	UnaryOperator	*		827608	0					
ANR	827616	CastExpression	( zend_uchar * ) start		827608	1					
ANR	827617	CastTarget	zend_uchar *		827608	0					
ANR	827618	Identifier	start		827608	1					
ANR	827619	PrimaryExpression	0x80		827608	1					
ANR	827620	CompoundStatement		2:33:34:34	827608	1					
ANR	827621	ReturnStatement	return 0 ;	369:2:9877:9885	827608	0	True				
ANR	827622	PrimaryExpression	0		827608	0					
ANR	827623	IfStatement	if ( valid_ujis ( * ( start ) ) && valid_ujis ( * ( ( start ) + 1 ) ) )		827608	1					
ANR	827624	Condition	valid_ujis ( * ( start ) ) && valid_ujis ( * ( ( start ) + 1 ) )	371:5:9924:9971	827608	0	True				
ANR	827625	AndExpression	valid_ujis ( * ( start ) ) && valid_ujis ( * ( ( start ) + 1 ) )		827608	0		&&			
ANR	827626	CallExpression	valid_ujis ( * ( start ) )		827608	0					
ANR	827627	Callee	valid_ujis		827608	0					
ANR	827628	Identifier	valid_ujis		827608	0					
ANR	827629	ArgumentList	* ( start )		827608	1					
ANR	827630	Argument	* ( start )		827608	0					
ANR	827631	UnaryOperationExpression	* ( start )		827608	0					
ANR	827632	UnaryOperator	*		827608	0					
ANR	827633	Identifier	start		827608	1					
ANR	827634	CallExpression	valid_ujis ( * ( ( start ) + 1 ) )		827608	1					
ANR	827635	Callee	valid_ujis		827608	0					
ANR	827636	Identifier	valid_ujis		827608	0					
ANR	827637	ArgumentList	* ( ( start ) + 1 )		827608	1					
ANR	827638	Argument	* ( ( start ) + 1 )		827608	0					
ANR	827639	UnaryOperationExpression	* ( ( start ) + 1 )		827608	0					
ANR	827640	UnaryOperator	*		827608	0					
ANR	827641	CastExpression	( start ) + 1		827608	1					
ANR	827642	CastTarget	start		827608	0					
ANR	827643	UnaryOperationExpression	+ 1		827608	1					
ANR	827644	UnaryOperator	+		827608	0					
ANR	827645	PrimaryExpression	1		827608	1					
ANR	827646	CompoundStatement		5:55:135:135	827608	1					
ANR	827647	ReturnStatement	return 2 ;	372:2:9978:9986	827608	0	True				
ANR	827648	PrimaryExpression	2		827608	0					
ANR	827649	IfStatement	if ( valid_ujis_ss2 ( * ( start ) ) && valid_ujis_kata ( * ( ( start ) + 1 ) ) )		827608	2					
ANR	827650	Condition	valid_ujis_ss2 ( * ( start ) ) && valid_ujis_kata ( * ( ( start ) + 1 ) )	374:5:9996:10052	827608	0	True				
ANR	827651	AndExpression	valid_ujis_ss2 ( * ( start ) ) && valid_ujis_kata ( * ( ( start ) + 1 ) )		827608	0		&&			
ANR	827652	CallExpression	valid_ujis_ss2 ( * ( start ) )		827608	0					
ANR	827653	Callee	valid_ujis_ss2		827608	0					
ANR	827654	Identifier	valid_ujis_ss2		827608	0					
ANR	827655	ArgumentList	* ( start )		827608	1					
ANR	827656	Argument	* ( start )		827608	0					
ANR	827657	UnaryOperationExpression	* ( start )		827608	0					
ANR	827658	UnaryOperator	*		827608	0					
ANR	827659	Identifier	start		827608	1					
ANR	827660	CallExpression	valid_ujis_kata ( * ( ( start ) + 1 ) )		827608	1					
ANR	827661	Callee	valid_ujis_kata		827608	0					
ANR	827662	Identifier	valid_ujis_kata		827608	0					
ANR	827663	ArgumentList	* ( ( start ) + 1 )		827608	1					
ANR	827664	Argument	* ( ( start ) + 1 )		827608	0					
ANR	827665	UnaryOperationExpression	* ( ( start ) + 1 )		827608	0					
ANR	827666	UnaryOperator	*		827608	0					
ANR	827667	CastExpression	( start ) + 1		827608	1					
ANR	827668	CastTarget	start		827608	0					
ANR	827669	UnaryOperationExpression	+ 1		827608	1					
ANR	827670	UnaryOperator	+		827608	0					
ANR	827671	PrimaryExpression	1		827608	1					
ANR	827672	CompoundStatement		8:64:216:216	827608	1					
ANR	827673	ReturnStatement	return 2 ;	375:2:10059:10067	827608	0	True				
ANR	827674	PrimaryExpression	2		827608	0					
ANR	827675	IfStatement	if ( valid_ujis_ss3 ( * ( start ) ) && ( end - start ) > 2 && valid_ujis ( * ( ( start ) + 1 ) ) && valid_ujis ( * ( ( start ) + 2 ) ) )		827608	3					
ANR	827676	Condition	valid_ujis_ss3 ( * ( start ) ) && ( end - start ) > 2 && valid_ujis ( * ( ( start ) + 1 ) ) && valid_ujis ( * ( ( start ) + 2 ) )	377:5:10077:10175	827608	0	True				
ANR	827677	AndExpression	valid_ujis_ss3 ( * ( start ) ) && ( end - start ) > 2 && valid_ujis ( * ( ( start ) + 1 ) ) && valid_ujis ( * ( ( start ) + 2 ) )		827608	0		&&			
ANR	827678	CallExpression	valid_ujis_ss3 ( * ( start ) )		827608	0					
ANR	827679	Callee	valid_ujis_ss3		827608	0					
ANR	827680	Identifier	valid_ujis_ss3		827608	0					
ANR	827681	ArgumentList	* ( start )		827608	1					
ANR	827682	Argument	* ( start )		827608	0					
ANR	827683	UnaryOperationExpression	* ( start )		827608	0					
ANR	827684	UnaryOperator	*		827608	0					
ANR	827685	Identifier	start		827608	1					
ANR	827686	AndExpression	( end - start ) > 2 && valid_ujis ( * ( ( start ) + 1 ) ) && valid_ujis ( * ( ( start ) + 2 ) )		827608	1		&&			
ANR	827687	RelationalExpression	( end - start ) > 2		827608	0		>			
ANR	827688	AdditiveExpression	end - start		827608	0		-			
ANR	827689	Identifier	end		827608	0					
ANR	827690	Identifier	start		827608	1					
ANR	827691	PrimaryExpression	2		827608	1					
ANR	827692	AndExpression	valid_ujis ( * ( ( start ) + 1 ) ) && valid_ujis ( * ( ( start ) + 2 ) )		827608	1		&&			
ANR	827693	CallExpression	valid_ujis ( * ( ( start ) + 1 ) )		827608	0					
ANR	827694	Callee	valid_ujis		827608	0					
ANR	827695	Identifier	valid_ujis		827608	0					
ANR	827696	ArgumentList	* ( ( start ) + 1 )		827608	1					
ANR	827697	Argument	* ( ( start ) + 1 )		827608	0					
ANR	827698	UnaryOperationExpression	* ( ( start ) + 1 )		827608	0					
ANR	827699	UnaryOperator	*		827608	0					
ANR	827700	CastExpression	( start ) + 1		827608	1					
ANR	827701	CastTarget	start		827608	0					
ANR	827702	UnaryOperationExpression	+ 1		827608	1					
ANR	827703	UnaryOperator	+		827608	0					
ANR	827704	PrimaryExpression	1		827608	1					
ANR	827705	CallExpression	valid_ujis ( * ( ( start ) + 2 ) )		827608	1					
ANR	827706	Callee	valid_ujis		827608	0					
ANR	827707	Identifier	valid_ujis		827608	0					
ANR	827708	ArgumentList	* ( ( start ) + 2 )		827608	1					
ANR	827709	Argument	* ( ( start ) + 2 )		827608	0					
ANR	827710	UnaryOperationExpression	* ( ( start ) + 2 )		827608	0					
ANR	827711	UnaryOperator	*		827608	0					
ANR	827712	CastExpression	( start ) + 2		827608	1					
ANR	827713	CastTarget	start		827608	0					
ANR	827714	UnaryOperationExpression	+ 2		827608	1					
ANR	827715	UnaryOperator	+		827608	0					
ANR	827716	PrimaryExpression	2		827608	1					
ANR	827717	CompoundStatement		11:106:339:339	827608	1					
ANR	827718	ReturnStatement	return 3 ;	378:2:10182:10190	827608	0	True				
ANR	827719	PrimaryExpression	3		827608	0					
ANR	827720	ReturnStatement	return 0 ;	380:1:10196:10204	827608	4	True				
ANR	827721	PrimaryExpression	0		827608	0					
ANR	827722	ReturnType	static unsigned int		827608	1					
ANR	827723	Identifier	check_mb_ujis		827608	2					
ANR	827724	ParameterList	"const char * start , const char * end"		827608	3					
ANR	827725	Parameter	const char * start	366:34:9802:9818	827608	0	True				
ANR	827726	ParameterType	const char *		827608	0					
ANR	827727	Identifier	start		827608	1					
ANR	827728	Parameter	const char * end	366:53:9821:9835	827608	1	True				
ANR	827729	ParameterType	const char *		827608	0					
ANR	827730	Identifier	end		827608	1					
ANR	827731	CFGEntryNode	ENTRY		827608		True				
ANR	827732	CFGExitNode	EXIT		827608		True				
ANR	827733	Symbol	valid_ujis_kata		827608						
ANR	827734	Symbol	valid_ujis_ss2		827608						
ANR	827735	Symbol	* ( ( start ) + 2 )		827608						
ANR	827736	Symbol	* ( ( start ) + 1 )		827608						
ANR	827737	Symbol	* start		827608						
ANR	827738	Symbol	valid_ujis_ss3		827608						
ANR	827739	Symbol	start		827608						
ANR	827740	Symbol	* ( start )		827608						
ANR	827741	Symbol	valid_ujis		827608						
ANR	827742	Symbol	end		827608						
ANR	827743	Symbol	* ( zend_uchar * ) start		827608						
ANR	827744	Function	mysqlnd_mbcharlen_ujis	384:0:10210:10358							
ANR	827745	FunctionDef	mysqlnd_mbcharlen_ujis (unsigned int ujis)		827744	0					
ANR	827746	CompoundStatement		385:0:10272:10358	827744	0					
ANR	827747	ReturnStatement	return ( valid_ujis ( ujis ) ? 2 : valid_ujis_ss2 ( ujis ) ? 2 : valid_ujis_ss3 ( ujis ) ? 3 : 1 ) ;	386:1:10275:10356	827744	0	True				
ANR	827748	ConditionalExpression	valid_ujis ( ujis ) ? 2 : valid_ujis_ss2 ( ujis ) ? 2 : valid_ujis_ss3 ( ujis ) ? 3 : 1		827744	0					
ANR	827749	Condition	valid_ujis ( ujis )		827744	0					
ANR	827750	CallExpression	valid_ujis ( ujis )		827744	0					
ANR	827751	Callee	valid_ujis		827744	0					
ANR	827752	Identifier	valid_ujis		827744	0					
ANR	827753	ArgumentList	ujis		827744	1					
ANR	827754	Argument	ujis		827744	0					
ANR	827755	Identifier	ujis		827744	0					
ANR	827756	PrimaryExpression	2		827744	1					
ANR	827757	ConditionalExpression	valid_ujis_ss2 ( ujis ) ? 2 : valid_ujis_ss3 ( ujis ) ? 3 : 1		827744	2					
ANR	827758	Condition	valid_ujis_ss2 ( ujis )		827744	0					
ANR	827759	CallExpression	valid_ujis_ss2 ( ujis )		827744	0					
ANR	827760	Callee	valid_ujis_ss2		827744	0					
ANR	827761	Identifier	valid_ujis_ss2		827744	0					
ANR	827762	ArgumentList	ujis		827744	1					
ANR	827763	Argument	ujis		827744	0					
ANR	827764	Identifier	ujis		827744	0					
ANR	827765	PrimaryExpression	2		827744	1					
ANR	827766	ConditionalExpression	valid_ujis_ss3 ( ujis ) ? 3 : 1		827744	2					
ANR	827767	Condition	valid_ujis_ss3 ( ujis )		827744	0					
ANR	827768	CallExpression	valid_ujis_ss3 ( ujis )		827744	0					
ANR	827769	Callee	valid_ujis_ss3		827744	0					
ANR	827770	Identifier	valid_ujis_ss3		827744	0					
ANR	827771	ArgumentList	ujis		827744	1					
ANR	827772	Argument	ujis		827744	0					
ANR	827773	Identifier	ujis		827744	0					
ANR	827774	PrimaryExpression	3		827744	1					
ANR	827775	PrimaryExpression	1		827744	2					
ANR	827776	ReturnType	static unsigned int		827744	1					
ANR	827777	Identifier	mysqlnd_mbcharlen_ujis		827744	2					
ANR	827778	ParameterList	unsigned int ujis		827744	3					
ANR	827779	Parameter	unsigned int ujis	384:43:10253:10269	827744	0	True				
ANR	827780	ParameterType	unsigned int		827744	0					
ANR	827781	Identifier	ujis		827744	1					
ANR	827782	CFGEntryNode	ENTRY		827744		True				
ANR	827783	CFGExitNode	EXIT		827744		True				
ANR	827784	Symbol	valid_ujis_ss2		827744						
ANR	827785	Symbol	valid_ujis_ss3		827744						
ANR	827786	Symbol	ujis		827744						
ANR	827787	Symbol	valid_ujis		827744						
ANR	827788	Function	check_mb_utf16	396:0:10532:10803							
ANR	827789	FunctionDef	"check_mb_utf16 (const char * start , const char * end)"		827788	0					
ANR	827790	CompoundStatement		397:0:10603:10803	827788	0					
ANR	827791	IfStatement	if ( start + 2 > end )		827788	0					
ANR	827792	Condition	start + 2 > end	398:5:10610:10624	827788	0	True				
ANR	827793	RelationalExpression	start + 2 > end		827788	0		>			
ANR	827794	AdditiveExpression	start + 2		827788	0		+			
ANR	827795	Identifier	start		827788	0					
ANR	827796	PrimaryExpression	2		827788	1					
ANR	827797	Identifier	end		827788	1					
ANR	827798	CompoundStatement		2:22:23:23	827788	1					
ANR	827799	ReturnStatement	return 0 ;	399:2:10631:10639	827788	0	True				
ANR	827800	PrimaryExpression	0		827788	0					
ANR	827801	IfStatement	if ( UTF16_HIGH_HEAD ( * start ) )		827788	1					
ANR	827802	Condition	UTF16_HIGH_HEAD ( * start )	402:5:10650:10672	827788	0	True				
ANR	827803	CallExpression	UTF16_HIGH_HEAD ( * start )		827788	0					
ANR	827804	Callee	UTF16_HIGH_HEAD		827788	0					
ANR	827805	Identifier	UTF16_HIGH_HEAD		827788	0					
ANR	827806	ArgumentList	* start		827788	1					
ANR	827807	Argument	* start		827788	0					
ANR	827808	UnaryOperationExpression	* start		827788	0					
ANR	827809	UnaryOperator	*		827788	0					
ANR	827810	Identifier	start		827788	1					
ANR	827811	CompoundStatement		6:30:71:71	827788	1					
ANR	827812	ReturnStatement	return ( start + 4 <= end ) && UTF16_LOW_HEAD ( start [ 2 ] ) ? 4 : 0 ;	403:2:10679:10740	827788	0	True				
ANR	827813	ConditionalExpression	( start + 4 <= end ) && UTF16_LOW_HEAD ( start [ 2 ] ) ? 4 : 0		827788	0					
ANR	827814	Condition	( start + 4 <= end ) && UTF16_LOW_HEAD ( start [ 2 ] )		827788	0					
ANR	827815	AndExpression	( start + 4 <= end ) && UTF16_LOW_HEAD ( start [ 2 ] )		827788	0		&&			
ANR	827816	RelationalExpression	start + 4 <= end		827788	0		<=			
ANR	827817	AdditiveExpression	start + 4		827788	0		+			
ANR	827818	Identifier	start		827788	0					
ANR	827819	PrimaryExpression	4		827788	1					
ANR	827820	Identifier	end		827788	1					
ANR	827821	CallExpression	UTF16_LOW_HEAD ( start [ 2 ] )		827788	1					
ANR	827822	Callee	UTF16_LOW_HEAD		827788	0					
ANR	827823	Identifier	UTF16_LOW_HEAD		827788	0					
ANR	827824	ArgumentList	start [ 2 ]		827788	1					
ANR	827825	Argument	start [ 2 ]		827788	0					
ANR	827826	ArrayIndexing	start [ 2 ]		827788	0					
ANR	827827	Identifier	start		827788	0					
ANR	827828	PrimaryExpression	2		827788	1					
ANR	827829	PrimaryExpression	4		827788	1					
ANR	827830	PrimaryExpression	0		827788	2					
ANR	827831	IfStatement	if ( UTF16_LOW_HEAD ( * start ) )		827788	2					
ANR	827832	Condition	UTF16_LOW_HEAD ( * start )	406:5:10751:10772	827788	0	True				
ANR	827833	CallExpression	UTF16_LOW_HEAD ( * start )		827788	0					
ANR	827834	Callee	UTF16_LOW_HEAD		827788	0					
ANR	827835	Identifier	UTF16_LOW_HEAD		827788	0					
ANR	827836	ArgumentList	* start		827788	1					
ANR	827837	Argument	* start		827788	0					
ANR	827838	UnaryOperationExpression	* start		827788	0					
ANR	827839	UnaryOperator	*		827788	0					
ANR	827840	Identifier	start		827788	1					
ANR	827841	CompoundStatement		10:29:171:171	827788	1					
ANR	827842	ReturnStatement	return 0 ;	407:2:10779:10787	827788	0	True				
ANR	827843	PrimaryExpression	0		827788	0					
ANR	827844	ReturnStatement	return 2 ;	409:1:10793:10801	827788	3	True				
ANR	827845	PrimaryExpression	2		827788	0					
ANR	827846	ReturnType	static unsigned int		827788	1					
ANR	827847	Identifier	check_mb_utf16		827788	2					
ANR	827848	ParameterList	"const char * start , const char * end"		827788	3					
ANR	827849	Parameter	const char * start	396:35:10567:10583	827788	0	True				
ANR	827850	ParameterType	const char *		827788	0					
ANR	827851	Identifier	start		827788	1					
ANR	827852	Parameter	const char * end	396:54:10586:10600	827788	1	True				
ANR	827853	ParameterType	const char *		827788	0					
ANR	827854	Identifier	end		827788	1					
ANR	827855	CFGEntryNode	ENTRY		827788		True				
ANR	827856	CFGExitNode	EXIT		827788		True				
ANR	827857	Symbol	UTF16_HIGH_HEAD		827788						
ANR	827858	Symbol	* start		827788						
ANR	827859	Symbol	start		827788						
ANR	827860	Symbol	UTF16_LOW_HEAD		827788						
ANR	827861	Symbol	end		827788						
ANR	827862	Function	mysqlnd_mbcharlen_utf16	413:0:10807:10906							
ANR	827863	FunctionDef	mysqlnd_mbcharlen_utf16 (unsigned int utf16)		827862	0					
ANR	827864	CompoundStatement		414:0:10863:10906	827862	0					
ANR	827865	ReturnStatement	return UTF16_HIGH_HEAD ( utf16 ) ? 4 : 2 ;	415:2:10867:10904	827862	0	True				
ANR	827866	ConditionalExpression	UTF16_HIGH_HEAD ( utf16 ) ? 4 : 2		827862	0					
ANR	827867	Condition	UTF16_HIGH_HEAD ( utf16 )		827862	0					
ANR	827868	CallExpression	UTF16_HIGH_HEAD ( utf16 )		827862	0					
ANR	827869	Callee	UTF16_HIGH_HEAD		827862	0					
ANR	827870	Identifier	UTF16_HIGH_HEAD		827862	0					
ANR	827871	ArgumentList	utf16		827862	1					
ANR	827872	Argument	utf16		827862	0					
ANR	827873	Identifier	utf16		827862	0					
ANR	827874	PrimaryExpression	4		827862	1					
ANR	827875	PrimaryExpression	2		827862	2					
ANR	827876	ReturnType	static uint		827862	1					
ANR	827877	Identifier	mysqlnd_mbcharlen_utf16		827862	2					
ANR	827878	ParameterList	unsigned int utf16		827862	3					
ANR	827879	Parameter	unsigned int utf16	413:36:10843:10860	827862	0	True				
ANR	827880	ParameterType	unsigned int		827862	0					
ANR	827881	Identifier	utf16		827862	1					
ANR	827882	CFGEntryNode	ENTRY		827862		True				
ANR	827883	CFGExitNode	EXIT		827862		True				
ANR	827884	Symbol	UTF16_HIGH_HEAD		827862						
ANR	827885	Symbol	utf16		827862						
ANR	827886	Function	mysqlnd_mbcharlen_utf32	427:0:11078:11177							
ANR	827887	FunctionDef	mysqlnd_mbcharlen_utf32 (unsigned int utf32 __attribute ( ( unused ) ))		827886	0					
ANR	827888	CompoundStatement		428:0:11164:11177	827886	0					
ANR	827889	ReturnStatement	return 4 ;	429:1:11167:11175	827886	0	True				
ANR	827890	PrimaryExpression	4		827886	0					
ANR	827891	ReturnType	static unsigned int		827886	1					
ANR	827892	Identifier	mysqlnd_mbcharlen_utf32		827886	2					
ANR	827893	ParameterList	unsigned int utf32 __attribute ( ( unused ) )		827886	3					
ANR	827894	Parameter	unsigned int utf32 __attribute ( ( unused ) )	427:44:11122:11161	827886	0	True				
ANR	827895	ParameterType	((unsigned int utf32 __attribute))		827886	0					
ANR	827896	Identifier	unused		827886	1					
ANR	827897	CFGEntryNode	ENTRY		827886		True				
ANR	827898	CFGExitNode	EXIT		827886		True				
ANR	827899	Symbol	unused		827886						
ANR	827900	Function	mysqlnd_mbcharlen_gb18030	440:0:11551:11856							
ANR	827901	FunctionDef	mysqlnd_mbcharlen_gb18030 (unsigned int c)		827900	0					
ANR	827902	CompoundStatement		441:0:11613:11856	827900	0					
ANR	827903	IfStatement	if ( c <= 0xFF )		827900	0					
ANR	827904	Condition	c <= 0xFF	442:5:11620:11628	827900	0	True				
ANR	827905	RelationalExpression	c <= 0xFF		827900	0		<=			
ANR	827906	Identifier	c		827900	0					
ANR	827907	PrimaryExpression	0xFF		827900	1					
ANR	827908	CompoundStatement		2:16:17:17	827900	1					
ANR	827909	ReturnStatement	return ! is_gb18030_odd ( c ) ;	443:2:11635:11660	827900	0	True				
ANR	827910	UnaryOperationExpression	! is_gb18030_odd ( c )		827900	0					
ANR	827911	UnaryOperator	!		827900	0					
ANR	827912	CallExpression	is_gb18030_odd ( c )		827900	1					
ANR	827913	Callee	is_gb18030_odd		827900	0					
ANR	827914	Identifier	is_gb18030_odd		827900	0					
ANR	827915	ArgumentList	c		827900	1					
ANR	827916	Argument	c		827900	0					
ANR	827917	Identifier	c		827900	0					
ANR	827918	IfStatement	if ( c > 0xFFFF || ! is_gb18030_odd ( ( c >> 8 ) & 0xFF ) )		827900	1					
ANR	827919	Condition	c > 0xFFFF || ! is_gb18030_odd ( ( c >> 8 ) & 0xFF )	445:5:11670:11715	827900	0	True				
ANR	827920	OrExpression	c > 0xFFFF || ! is_gb18030_odd ( ( c >> 8 ) & 0xFF )		827900	0		||			
ANR	827921	RelationalExpression	c > 0xFFFF		827900	0		>			
ANR	827922	Identifier	c		827900	0					
ANR	827923	PrimaryExpression	0xFFFF		827900	1					
ANR	827924	UnaryOperationExpression	! is_gb18030_odd ( ( c >> 8 ) & 0xFF )		827900	1					
ANR	827925	UnaryOperator	!		827900	0					
ANR	827926	CallExpression	is_gb18030_odd ( ( c >> 8 ) & 0xFF )		827900	1					
ANR	827927	Callee	is_gb18030_odd		827900	0					
ANR	827928	Identifier	is_gb18030_odd		827900	0					
ANR	827929	ArgumentList	( c >> 8 ) & 0xFF		827900	1					
ANR	827930	Argument	( c >> 8 ) & 0xFF		827900	0					
ANR	827931	BitAndExpression	( c >> 8 ) & 0xFF		827900	0		&			
ANR	827932	ShiftExpression	c >> 8		827900	0		>>			
ANR	827933	Identifier	c		827900	0					
ANR	827934	PrimaryExpression	8		827900	1					
ANR	827935	PrimaryExpression	0xFF		827900	1					
ANR	827936	CompoundStatement		5:53:104:104	827900	1					
ANR	827937	ReturnStatement	return 0 ;	446:2:11722:11730	827900	0	True				
ANR	827938	PrimaryExpression	0		827900	0					
ANR	827939	IfStatement	if ( is_gb18030_even_2 ( ( c & 0xFF ) ) )		827900	2					
ANR	827940	Condition	is_gb18030_even_2 ( ( c & 0xFF ) )	448:5:11740:11768	827900	0	True				
ANR	827941	CallExpression	is_gb18030_even_2 ( ( c & 0xFF ) )		827900	0					
ANR	827942	Callee	is_gb18030_even_2		827900	0					
ANR	827943	Identifier	is_gb18030_even_2		827900	0					
ANR	827944	ArgumentList	c & 0xFF		827900	1					
ANR	827945	Argument	c & 0xFF		827900	0					
ANR	827946	BitAndExpression	c & 0xFF		827900	0		&			
ANR	827947	Identifier	c		827900	0					
ANR	827948	PrimaryExpression	0xFF		827900	1					
ANR	827949	CompoundStatement		8:36:157:157	827900	1					
ANR	827950	ReturnStatement	return 2 ;	449:5:11778:11786	827900	0	True				
ANR	827951	PrimaryExpression	2		827900	0					
ANR	827952	IfStatement	if ( is_gb18030_even_4 ( ( c & 0xFF ) ) )		827900	3					
ANR	827953	Condition	is_gb18030_even_4 ( ( c & 0xFF ) )	451:5:11796:11824	827900	0	True				
ANR	827954	CallExpression	is_gb18030_even_4 ( ( c & 0xFF ) )		827900	0					
ANR	827955	Callee	is_gb18030_even_4		827900	0					
ANR	827956	Identifier	is_gb18030_even_4		827900	0					
ANR	827957	ArgumentList	c & 0xFF		827900	1					
ANR	827958	Argument	c & 0xFF		827900	0					
ANR	827959	BitAndExpression	c & 0xFF		827900	0		&			
ANR	827960	Identifier	c		827900	0					
ANR	827961	PrimaryExpression	0xFF		827900	1					
ANR	827962	CompoundStatement		11:36:213:213	827900	1					
ANR	827963	ReturnStatement	return 4 ;	452:2:11831:11839	827900	0	True				
ANR	827964	PrimaryExpression	4		827900	0					
ANR	827965	ReturnStatement	return 0 ;	455:1:11846:11854	827900	4	True				
ANR	827966	PrimaryExpression	0		827900	0					
ANR	827967	ReturnType	static unsigned int		827900	1					
ANR	827968	Identifier	mysqlnd_mbcharlen_gb18030		827900	2					
ANR	827969	ParameterList	unsigned int c		827900	3					
ANR	827970	Parameter	unsigned int c	440:46:11597:11610	827900	0	True				
ANR	827971	ParameterType	unsigned int		827900	0					
ANR	827972	Identifier	c		827900	1					
ANR	827973	CFGEntryNode	ENTRY		827900		True				
ANR	827974	CFGExitNode	EXIT		827900		True				
ANR	827975	Symbol	c		827900						
ANR	827976	Symbol	is_gb18030_even_2		827900						
ANR	827977	Symbol	is_gb18030_odd		827900						
ANR	827978	Symbol	is_gb18030_even_4		827900						
ANR	827979	Function	my_ismbchar_gb18030	459:0:11860:12206							
ANR	827980	FunctionDef	"my_ismbchar_gb18030 (const char * start , const char * end)"		827979	0					
ANR	827981	CompoundStatement		460:0:11938:12206	827979	0					
ANR	827982	IfStatement	if ( end - start <= 1 || ! is_gb18030_odd ( start [ 0 ] ) )		827979	0					
ANR	827983	Condition	end - start <= 1 || ! is_gb18030_odd ( start [ 0 ] )	461:5:11945:11989	827979	0	True				
ANR	827984	OrExpression	end - start <= 1 || ! is_gb18030_odd ( start [ 0 ] )		827979	0		||			
ANR	827985	RelationalExpression	end - start <= 1		827979	0		<=			
ANR	827986	AdditiveExpression	end - start		827979	0		-			
ANR	827987	Identifier	end		827979	0					
ANR	827988	Identifier	start		827979	1					
ANR	827989	PrimaryExpression	1		827979	1					
ANR	827990	UnaryOperationExpression	! is_gb18030_odd ( start [ 0 ] )		827979	1					
ANR	827991	UnaryOperator	!		827979	0					
ANR	827992	CallExpression	is_gb18030_odd ( start [ 0 ] )		827979	1					
ANR	827993	Callee	is_gb18030_odd		827979	0					
ANR	827994	Identifier	is_gb18030_odd		827979	0					
ANR	827995	ArgumentList	start [ 0 ]		827979	1					
ANR	827996	Argument	start [ 0 ]		827979	0					
ANR	827997	ArrayIndexing	start [ 0 ]		827979	0					
ANR	827998	Identifier	start		827979	0					
ANR	827999	PrimaryExpression	0		827979	1					
ANR	828000	CompoundStatement		2:52:53:53	827979	1					
ANR	828001	ReturnStatement	return 0 ;	462:2:11996:12004	827979	0	True				
ANR	828002	PrimaryExpression	0		827979	0					
ANR	828003	IfStatement	if ( is_gb18030_even_2 ( start [ 1 ] ) )		827979	1					
ANR	828004	Condition	is_gb18030_even_2 ( start [ 1 ] )	465:5:12015:12041	827979	0	True				
ANR	828005	CallExpression	is_gb18030_even_2 ( start [ 1 ] )		827979	0					
ANR	828006	Callee	is_gb18030_even_2		827979	0					
ANR	828007	Identifier	is_gb18030_even_2		827979	0					
ANR	828008	ArgumentList	start [ 1 ]		827979	1					
ANR	828009	Argument	start [ 1 ]		827979	0					
ANR	828010	ArrayIndexing	start [ 1 ]		827979	0					
ANR	828011	Identifier	start		827979	0					
ANR	828012	PrimaryExpression	1		827979	1					
ANR	828013	CompoundStatement		6:34:105:105	827979	1					
ANR	828014	ReturnStatement	return 2 ;	466:2:12048:12056	827979	0	True				
ANR	828015	PrimaryExpression	2		827979	0					
ANR	828016	ElseStatement	else		827979	0					
ANR	828017	IfStatement	if ( end - start > 3 && is_gb18030_even_4 ( start [ 1 ] ) && is_gb18030_odd ( start [ 2 ] ) && is_gb18030_even_4 ( start [ 3 ] ) )		827979	0					
ANR	828018	Condition	end - start > 3 && is_gb18030_even_4 ( start [ 1 ] ) && is_gb18030_odd ( start [ 2 ] ) && is_gb18030_even_4 ( start [ 3 ] )	467:12:12070:12174	827979	0	True				
ANR	828019	AndExpression	end - start > 3 && is_gb18030_even_4 ( start [ 1 ] ) && is_gb18030_odd ( start [ 2 ] ) && is_gb18030_even_4 ( start [ 3 ] )		827979	0		&&			
ANR	828020	RelationalExpression	end - start > 3		827979	0		>			
ANR	828021	AdditiveExpression	end - start		827979	0		-			
ANR	828022	Identifier	end		827979	0					
ANR	828023	Identifier	start		827979	1					
ANR	828024	PrimaryExpression	3		827979	1					
ANR	828025	AndExpression	is_gb18030_even_4 ( start [ 1 ] ) && is_gb18030_odd ( start [ 2 ] ) && is_gb18030_even_4 ( start [ 3 ] )		827979	1		&&			
ANR	828026	CallExpression	is_gb18030_even_4 ( start [ 1 ] )		827979	0					
ANR	828027	Callee	is_gb18030_even_4		827979	0					
ANR	828028	Identifier	is_gb18030_even_4		827979	0					
ANR	828029	ArgumentList	start [ 1 ]		827979	1					
ANR	828030	Argument	start [ 1 ]		827979	0					
ANR	828031	ArrayIndexing	start [ 1 ]		827979	0					
ANR	828032	Identifier	start		827979	0					
ANR	828033	PrimaryExpression	1		827979	1					
ANR	828034	AndExpression	is_gb18030_odd ( start [ 2 ] ) && is_gb18030_even_4 ( start [ 3 ] )		827979	1		&&			
ANR	828035	CallExpression	is_gb18030_odd ( start [ 2 ] )		827979	0					
ANR	828036	Callee	is_gb18030_odd		827979	0					
ANR	828037	Identifier	is_gb18030_odd		827979	0					
ANR	828038	ArgumentList	start [ 2 ]		827979	1					
ANR	828039	Argument	start [ 2 ]		827979	0					
ANR	828040	ArrayIndexing	start [ 2 ]		827979	0					
ANR	828041	Identifier	start		827979	0					
ANR	828042	PrimaryExpression	2		827979	1					
ANR	828043	CallExpression	is_gb18030_even_4 ( start [ 3 ] )		827979	1					
ANR	828044	Callee	is_gb18030_even_4		827979	0					
ANR	828045	Identifier	is_gb18030_even_4		827979	0					
ANR	828046	ArgumentList	start [ 3 ]		827979	1					
ANR	828047	Argument	start [ 3 ]		827979	0					
ANR	828048	ArrayIndexing	start [ 3 ]		827979	0					
ANR	828049	Identifier	start		827979	0					
ANR	828050	PrimaryExpression	3		827979	1					
ANR	828051	CompoundStatement		8:119:238:238	827979	1					
ANR	828052	ReturnStatement	return 4 ;	468:2:12181:12189	827979	0	True				
ANR	828053	PrimaryExpression	4		827979	0					
ANR	828054	ReturnStatement	return 0 ;	471:1:12196:12204	827979	2	True				
ANR	828055	PrimaryExpression	0		827979	0					
ANR	828056	ReturnType	static unsigned int		827979	1					
ANR	828057	Identifier	my_ismbchar_gb18030		827979	2					
ANR	828058	ParameterList	"const char * start , const char * end"		827979	3					
ANR	828059	Parameter	const char * start	459:40:11900:11917	827979	0	True				
ANR	828060	ParameterType	const char *		827979	0					
ANR	828061	Identifier	start		827979	1					
ANR	828062	Parameter	const char * end	459:60:11920:11935	827979	1	True				
ANR	828063	ParameterType	const char *		827979	0					
ANR	828064	Identifier	end		827979	1					
ANR	828065	CFGEntryNode	ENTRY		827979		True				
ANR	828066	CFGExitNode	EXIT		827979		True				
ANR	828067	Symbol	is_gb18030_even_2		827979						
ANR	828068	Symbol	* start		827979						
ANR	828069	Symbol	start		827979						
ANR	828070	Symbol	is_gb18030_odd		827979						
ANR	828071	Symbol	end		827979						
ANR	828072	Symbol	is_gb18030_even_4		827979						
ANR	828073	DeclStmt									
ANR	828074	Decl							const MYSQLND_CHARSET	const MYSQLND_CHARSET [ ]	mysqlnd_charsets
ANR	828075	Function	mysqlnd_find_charset_nr	696:7:29480:29699							
ANR	828076	FunctionDef	mysqlnd_find_charset_nr (unsigned int charsetnr)		828075	0					
ANR	828077	CompoundStatement		697:0:29552:29699	828075	0					
ANR	828078	IdentifierDeclStatement	const MYSQLND_CHARSET * c = mysqlnd_charsets ;	698:1:29555:29599	828075	0	True				
ANR	828079	IdentifierDecl	* c = mysqlnd_charsets		828075	0					
ANR	828080	IdentifierDeclType	const MYSQLND_CHARSET *		828075	0					
ANR	828081	Identifier	c		828075	1					
ANR	828082	AssignmentExpression	* c = mysqlnd_charsets		828075	2		=			
ANR	828083	Identifier	mysqlnd_charsets		828075	0					
ANR	828084	Identifier	mysqlnd_charsets		828075	1					
ANR	828085	DoStatement	do		828075	1					
ANR	828086	CompoundStatement		4:4:53:53	828075	0					
ANR	828087	IfStatement	if ( c -> nr == charsetnr )		828075	0					
ANR	828088	Condition	c -> nr == charsetnr	701:6:29614:29631	828075	0	True				
ANR	828089	EqualityExpression	c -> nr == charsetnr		828075	0		==			
ANR	828090	PtrMemberAccess	c -> nr		828075	0					
ANR	828091	Identifier	c		828075	0					
ANR	828092	Identifier	nr		828075	1					
ANR	828093	Identifier	charsetnr		828075	1					
ANR	828094	CompoundStatement		5:26:81:81	828075	1					
ANR	828095	ReturnStatement	return c ;	702:3:29639:29647	828075	0	True				
ANR	828096	Identifier	c		828075	0					
ANR	828097	ExpressionStatement	++ c	704:2:29655:29658	828075	1	True				
ANR	828098	UnaryExpression	++ c		828075	0					
ANR	828099	IncDec	++		828075	0					
ANR	828100	Identifier	c		828075	1					
ANR	828101	Condition	c [ 0 ] . nr != 0	705:10:29670:29681	828075	1	True				
ANR	828102	EqualityExpression	c [ 0 ] . nr != 0		828075	0		!=			
ANR	828103	MemberAccess	c [ 0 ] . nr		828075	0					
ANR	828104	ArrayIndexing	c [ 0 ]		828075	0					
ANR	828105	Identifier	c		828075	0					
ANR	828106	PrimaryExpression	0		828075	1					
ANR	828107	Identifier	nr		828075	1					
ANR	828108	PrimaryExpression	0		828075	1					
ANR	828109	ReturnStatement	return NULL ;	706:1:29686:29697	828075	2	True				
ANR	828110	Identifier	NULL		828075	0					
ANR	828111	ReturnType	const MYSQLND_CHARSET *		828075	1					
ANR	828112	Identifier	mysqlnd_find_charset_nr		828075	2					
ANR	828113	ParameterList	unsigned int charsetnr		828075	3					
ANR	828114	Parameter	unsigned int charsetnr	696:55:29528:29549	828075	0	True				
ANR	828115	ParameterType	unsigned int		828075	0					
ANR	828116	Identifier	charsetnr		828075	1					
ANR	828117	CFGEntryNode	ENTRY		828075		True				
ANR	828118	CFGExitNode	EXIT		828075		True				
ANR	828119	Symbol	c		828075						
ANR	828120	Symbol	NULL		828075						
ANR	828121	Symbol	c [ 0 ] . nr		828075						
ANR	828122	Symbol	charsetnr		828075						
ANR	828123	Symbol	mysqlnd_charsets		828075						
ANR	828124	Symbol	c -> nr		828075						
ANR	828125	Symbol	* c		828075						
ANR	828126	DeclStmt									
ANR	828127	Decl							const MYSQLND_CHARSET	const MYSQLND_CHARSET *	c
ANR	828128	DeclStmt									
ANR	828129	Decl							const char	const char *	newstr_s
ANR	828130	DeclStmt									
ANR	828131	Decl							const char	const char *	newstr_e
ANR	828132	DeclStmt									
ANR	828133	Decl							const char	const char *	end
ANR	828134	DeclStmt									
ANR	828135	Decl							zend_bool	zend_bool	escape_overflow
ANR	828136	DeclStmt									
ANR	828137	Decl							unsigned int	unsigned int	len
ANR	828138	DeclStmt									
ANR	828139	Decl							const char	const char *	newstr_s
ANR	828140	DeclStmt									
ANR	828141	Decl							const char	const char *	newstr_e
ANR	828142	DeclStmt									
ANR	828143	Decl							const char	const char *	end
ANR	828144	DeclStmt									
ANR	828145	Decl							zend_bool	zend_bool	escape_overflow
ANR	828146	DeclStmt									
ANR	828147	Decl							char	char	esc
ANR	828148	DeclStmt									
ANR	828149	Decl							unsigned int	unsigned int	len
ANR	828150	DeclStmt									
ANR	828151	Decl							struct st_mysqlnd_plugin_charsets	struct st_mysqlnd_plugin_charsets	mysqlnd_plugin_charsets_plugin
