command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	695491	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_utf8.c								
ANR	695492	DeclStmt									
ANR	695493	Decl							const int	const int [ ]	EncLen_UTF8
ANR	695494	Function	mbc_enc_len	62:0:2757:2824							
ANR	695495	FunctionDef	mbc_enc_len (const UChar * p)		695494	0					
ANR	695496	CompoundStatement		64:0:2796:2824	695494	0					
ANR	695497	ReturnStatement	return EncLen_UTF8 [ * p ] ;	65:2:2800:2822	695494	0	True				
ANR	695498	ArrayIndexing	EncLen_UTF8 [ * p ]		695494	0					
ANR	695499	Identifier	EncLen_UTF8		695494	0					
ANR	695500	UnaryOperationExpression	* p		695494	1					
ANR	695501	UnaryOperator	*		695494	0					
ANR	695502	Identifier	p		695494	1					
ANR	695503	ReturnType	static int		695494	1					
ANR	695504	Identifier	mbc_enc_len		695494	2					
ANR	695505	ParameterList	const UChar * p		695494	3					
ANR	695506	Parameter	const UChar * p	63:12:2780:2793	695494	0	True				
ANR	695507	ParameterType	const UChar *		695494	0					
ANR	695508	Identifier	p		695494	1					
ANR	695509	CFGEntryNode	ENTRY		695494		True				
ANR	695510	CFGExitNode	EXIT		695494		True				
ANR	695511	Symbol	p		695494						
ANR	695512	Symbol	EncLen_UTF8		695494						
ANR	695513	Symbol	* p		695494						
ANR	695514	Symbol	* * p		695494						
ANR	695515	Symbol	* EncLen_UTF8		695494						
ANR	695516	Function	is_mbc_newline	68:0:2827:3313							
ANR	695517	FunctionDef	"is_mbc_newline (const UChar * p , const UChar * end)"		695516	0					
ANR	695518	CompoundStatement		70:0:2887:3313	695516	0					
ANR	695519	IfStatement	if ( p < end )		695516	0					
ANR	695520	Condition	p < end	71:6:2895:2901	695516	0	True				
ANR	695521	RelationalExpression	p < end		695516	0		<			
ANR	695522	Identifier	p		695516	0					
ANR	695523	Identifier	end		695516	1					
ANR	695524	CompoundStatement		2:15:16:16	695516	1					
ANR	695525	IfStatement	if ( * p == 0x0a )		695516	0					
ANR	695526	Condition	* p == 0x0a	72:8:2914:2923	695516	0	True				
ANR	695527	EqualityExpression	* p == 0x0a		695516	0		==			
ANR	695528	UnaryOperationExpression	* p		695516	0					
ANR	695529	UnaryOperator	*		695516	0					
ANR	695530	Identifier	p		695516	1					
ANR	695531	PrimaryExpression	0x0a		695516	1					
ANR	695532	ReturnStatement	return 1 ;	72:20:2926:2934	695516	1	True				
ANR	695533	PrimaryExpression	1		695516	0					
ANR	695534	IfStatement	if ( * p == 0x0d )		695516	1					
ANR	695535	Condition	* p == 0x0d	76:8:3021:3030	695516	0	True				
ANR	695536	EqualityExpression	* p == 0x0d		695516	0		==			
ANR	695537	UnaryOperationExpression	* p		695516	0					
ANR	695538	UnaryOperator	*		695516	0					
ANR	695539	Identifier	p		695516	1					
ANR	695540	PrimaryExpression	0x0d		695516	1					
ANR	695541	ReturnStatement	return 1 ;	76:20:3033:3041	695516	1	True				
ANR	695542	PrimaryExpression	1		695516	0					
ANR	695543	IfStatement	if ( p + 1 < end )		695516	2					
ANR	695544	Condition	p + 1 < end	78:8:3058:3068	695516	0	True				
ANR	695545	RelationalExpression	p + 1 < end		695516	0		<			
ANR	695546	AdditiveExpression	p + 1		695516	0		+			
ANR	695547	Identifier	p		695516	0					
ANR	695548	PrimaryExpression	1		695516	1					
ANR	695549	Identifier	end		695516	1					
ANR	695550	CompoundStatement		9:21:183:183	695516	1					
ANR	695551	IfStatement	if ( * ( p + 1 ) == 0x85 && * p == 0xc2 )		695516	0					
ANR	695552	Condition	* ( p + 1 ) == 0x85 && * p == 0xc2	79:10:3083:3110	695516	0	True				
ANR	695553	AndExpression	* ( p + 1 ) == 0x85 && * p == 0xc2		695516	0		&&			
ANR	695554	EqualityExpression	* ( p + 1 ) == 0x85		695516	0		==			
ANR	695555	UnaryOperationExpression	* ( p + 1 )		695516	0					
ANR	695556	UnaryOperator	*		695516	0					
ANR	695557	AdditiveExpression	p + 1		695516	1		+			
ANR	695558	Identifier	p		695516	0					
ANR	695559	PrimaryExpression	1		695516	1					
ANR	695560	PrimaryExpression	0x85		695516	1					
ANR	695561	EqualityExpression	* p == 0xc2		695516	1		==			
ANR	695562	UnaryOperationExpression	* p		695516	0					
ANR	695563	UnaryOperator	*		695516	0					
ANR	695564	Identifier	p		695516	1					
ANR	695565	PrimaryExpression	0xc2		695516	1					
ANR	695566	ReturnStatement	return 1 ;	80:1:3127:3135	695516	1	True				
ANR	695567	PrimaryExpression	1		695516	0					
ANR	695568	IfStatement	if ( p + 2 < end )		695516	1					
ANR	695569	Condition	p + 2 < end	81:10:3147:3157	695516	0	True				
ANR	695570	RelationalExpression	p + 2 < end		695516	0		<			
ANR	695571	AdditiveExpression	p + 2		695516	0		+			
ANR	695572	Identifier	p		695516	0					
ANR	695573	PrimaryExpression	2		695516	1					
ANR	695574	Identifier	end		695516	1					
ANR	695575	CompoundStatement		12:23:272:272	695516	1					
ANR	695576	IfStatement	if ( ( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2 )		695516	0					
ANR	695577	Condition	( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2	82:5:3167:3237	695516	0	True				
ANR	695578	AndExpression	( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2		695516	0		&&			
ANR	695579	OrExpression	* ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9		695516	0		||			
ANR	695580	EqualityExpression	* ( p + 2 ) == 0xa8		695516	0		==			
ANR	695581	UnaryOperationExpression	* ( p + 2 )		695516	0					
ANR	695582	UnaryOperator	*		695516	0					
ANR	695583	AdditiveExpression	p + 2		695516	1		+			
ANR	695584	Identifier	p		695516	0					
ANR	695585	PrimaryExpression	2		695516	1					
ANR	695586	PrimaryExpression	0xa8		695516	1					
ANR	695587	EqualityExpression	* ( p + 2 ) == 0xa9		695516	1		==			
ANR	695588	UnaryOperationExpression	* ( p + 2 )		695516	0					
ANR	695589	UnaryOperator	*		695516	0					
ANR	695590	AdditiveExpression	p + 2		695516	1		+			
ANR	695591	Identifier	p		695516	0					
ANR	695592	PrimaryExpression	2		695516	1					
ANR	695593	PrimaryExpression	0xa9		695516	1					
ANR	695594	AndExpression	* ( p + 1 ) == 0x80 && * p == 0xe2		695516	1		&&			
ANR	695595	EqualityExpression	* ( p + 1 ) == 0x80		695516	0		==			
ANR	695596	UnaryOperationExpression	* ( p + 1 )		695516	0					
ANR	695597	UnaryOperator	*		695516	0					
ANR	695598	AdditiveExpression	p + 1		695516	1		+			
ANR	695599	Identifier	p		695516	0					
ANR	695600	PrimaryExpression	1		695516	1					
ANR	695601	PrimaryExpression	0x80		695516	1					
ANR	695602	EqualityExpression	* p == 0xe2		695516	1		==			
ANR	695603	UnaryOperationExpression	* p		695516	0					
ANR	695604	UnaryOperator	*		695516	0					
ANR	695605	Identifier	p		695516	1					
ANR	695606	PrimaryExpression	0xe2		695516	1					
ANR	695607	ReturnStatement	return 1 ;	84:3:3265:3273	695516	1	True				
ANR	695608	PrimaryExpression	1		695516	0					
ANR	695609	ReturnStatement	return 0 ;	90:2:3303:3311	695516	1	True				
ANR	695610	PrimaryExpression	0		695516	0					
ANR	695611	ReturnType	static int		695516	1					
ANR	695612	Identifier	is_mbc_newline		695516	2					
ANR	695613	ParameterList	"const UChar * p , const UChar * end"		695516	3					
ANR	695614	Parameter	const UChar * p	69:15:2853:2866	695516	0	True				
ANR	695615	ParameterType	const UChar *		695516	0					
ANR	695616	Identifier	p		695516	1					
ANR	695617	Parameter	const UChar * end	69:31:2869:2884	695516	1	True				
ANR	695618	ParameterType	const UChar *		695516	0					
ANR	695619	Identifier	end		695516	1					
ANR	695620	CFGEntryNode	ENTRY		695516		True				
ANR	695621	CFGExitNode	EXIT		695516		True				
ANR	695622	Symbol	p		695516						
ANR	695623	Symbol	* ( p + 2 )		695516						
ANR	695624	Symbol	end		695516						
ANR	695625	Symbol	* p		695516						
ANR	695626	Symbol	* ( p + 1 )		695516						
ANR	695627	Function	mbc_to_code	93:0:3316:3830							
ANR	695628	FunctionDef	"mbc_to_code (const UChar * p , const UChar * end)"		695627	0					
ANR	695629	CompoundStatement		95:0:3383:3830	695627	0					
ANR	695630	IdentifierDeclStatement	"int c , len ;"	96:2:3387:3397	695627	0	True				
ANR	695631	IdentifierDecl	c		695627	0					
ANR	695632	IdentifierDeclType	int		695627	0					
ANR	695633	Identifier	c		695627	1					
ANR	695634	IdentifierDecl	len		695627	1					
ANR	695635	IdentifierDeclType	int		695627	0					
ANR	695636	Identifier	len		695627	1					
ANR	695637	IdentifierDeclStatement	OnigCodePoint n ;	97:2:3401:3416	695627	1	True				
ANR	695638	IdentifierDecl	n		695627	0					
ANR	695639	IdentifierDeclType	OnigCodePoint		695627	0					
ANR	695640	Identifier	n		695627	1					
ANR	695641	ExpressionStatement	len = mbc_enc_len ( p )	99:2:3421:3441	695627	2	True				
ANR	695642	AssignmentExpression	len = mbc_enc_len ( p )		695627	0		=			
ANR	695643	Identifier	len		695627	0					
ANR	695644	CallExpression	mbc_enc_len ( p )		695627	1					
ANR	695645	Callee	mbc_enc_len		695627	0					
ANR	695646	Identifier	mbc_enc_len		695627	0					
ANR	695647	ArgumentList	p		695627	1					
ANR	695648	Argument	p		695627	0					
ANR	695649	Identifier	p		695627	0					
ANR	695650	IfStatement	if ( len > end - p )		695627	3					
ANR	695651	Condition	len > end - p	100:6:3449:3461	695627	0	True				
ANR	695652	RelationalExpression	len > end - p		695627	0		>			
ANR	695653	Identifier	len		695627	0					
ANR	695654	AdditiveExpression	end - p		695627	1		-			
ANR	695655	Identifier	end		695627	0					
ANR	695656	Identifier	p		695627	1					
ANR	695657	ExpressionStatement	len = end - p	100:21:3464:3477	695627	1	True				
ANR	695658	AssignmentExpression	len = end - p		695627	0		=			
ANR	695659	Identifier	len		695627	0					
ANR	695660	AdditiveExpression	end - p		695627	1		-			
ANR	695661	Identifier	end		695627	0					
ANR	695662	Identifier	p		695627	1					
ANR	695663	ExpressionStatement	c = * p ++	102:2:3482:3490	695627	4	True				
ANR	695664	AssignmentExpression	c = * p ++		695627	0		=			
ANR	695665	Identifier	c		695627	0					
ANR	695666	UnaryOperationExpression	* p ++		695627	1					
ANR	695667	UnaryOperator	*		695627	0					
ANR	695668	PostIncDecOperationExpression	p ++		695627	1					
ANR	695669	Identifier	p		695627	0					
ANR	695670	IncDec	++		695627	1					
ANR	695671	IfStatement	if ( len > 1 )		695627	5					
ANR	695672	Condition	len > 1	103:6:3498:3504	695627	0	True				
ANR	695673	RelationalExpression	len > 1		695627	0		>			
ANR	695674	Identifier	len		695627	0					
ANR	695675	PrimaryExpression	1		695627	1					
ANR	695676	CompoundStatement		9:15:123:123	695627	1					
ANR	695677	ExpressionStatement	len --	104:4:3513:3518	695627	0	True				
ANR	695678	PostIncDecOperationExpression	len --		695627	0					
ANR	695679	Identifier	len		695627	0					
ANR	695680	IncDec	--		695627	1					
ANR	695681	ExpressionStatement	n = c & ( ( 1 << ( 6 - len ) ) - 1 )	105:4:3524:3554	695627	1	True				
ANR	695682	AssignmentExpression	n = c & ( ( 1 << ( 6 - len ) ) - 1 )		695627	0		=			
ANR	695683	Identifier	n		695627	0					
ANR	695684	BitAndExpression	c & ( ( 1 << ( 6 - len ) ) - 1 )		695627	1		&			
ANR	695685	Identifier	c		695627	0					
ANR	695686	AdditiveExpression	( 1 << ( 6 - len ) ) - 1		695627	1		-			
ANR	695687	ShiftExpression	1 << ( 6 - len )		695627	0		<<			
ANR	695688	PrimaryExpression	1		695627	0					
ANR	695689	AdditiveExpression	6 - len		695627	1		-			
ANR	695690	PrimaryExpression	6		695627	0					
ANR	695691	Identifier	len		695627	1					
ANR	695692	PrimaryExpression	1		695627	1					
ANR	695693	WhileStatement	while ( len -- )		695627	2					
ANR	695694	Condition	len --	106:11:3567:3571	695627	0	True				
ANR	695695	PostIncDecOperationExpression	len --		695627	0					
ANR	695696	Identifier	len		695627	0					
ANR	695697	IncDec	--		695627	1					
ANR	695698	CompoundStatement		12:18:190:190	695627	1					
ANR	695699	ExpressionStatement	c = * p ++	107:6:3582:3590	695627	0	True				
ANR	695700	AssignmentExpression	c = * p ++		695627	0		=			
ANR	695701	Identifier	c		695627	0					
ANR	695702	UnaryOperationExpression	* p ++		695627	1					
ANR	695703	UnaryOperator	*		695627	0					
ANR	695704	PostIncDecOperationExpression	p ++		695627	1					
ANR	695705	Identifier	p		695627	0					
ANR	695706	IncDec	++		695627	1					
ANR	695707	ExpressionStatement	n = ( n << 6 ) | ( c & ( ( 1 << 6 ) - 1 ) )	108:6:3598:3633	695627	1	True				
ANR	695708	AssignmentExpression	n = ( n << 6 ) | ( c & ( ( 1 << 6 ) - 1 ) )		695627	0		=			
ANR	695709	Identifier	n		695627	0					
ANR	695710	InclusiveOrExpression	( n << 6 ) | ( c & ( ( 1 << 6 ) - 1 ) )		695627	1		|			
ANR	695711	ShiftExpression	n << 6		695627	0		<<			
ANR	695712	Identifier	n		695627	0					
ANR	695713	PrimaryExpression	6		695627	1					
ANR	695714	BitAndExpression	c & ( ( 1 << 6 ) - 1 )		695627	1		&			
ANR	695715	Identifier	c		695627	0					
ANR	695716	AdditiveExpression	( 1 << 6 ) - 1		695627	1		-			
ANR	695717	ShiftExpression	1 << 6		695627	0		<<			
ANR	695718	PrimaryExpression	1		695627	0					
ANR	695719	PrimaryExpression	6		695627	1					
ANR	695720	PrimaryExpression	1		695627	1					
ANR	695721	ReturnStatement	return n ;	110:4:3645:3653	695627	3	True				
ANR	695722	Identifier	n		695627	0					
ANR	695723	ElseStatement	else		695627	0					
ANR	695724	CompoundStatement		18:7:282:282	695627	0					
ANR	695725	IfStatement	if ( c > 0xfd )		695627	0					
ANR	695726	Condition	c > 0xfd	114:8:3707:3714	695627	0	True				
ANR	695727	RelationalExpression	c > 0xfd		695627	0		>			
ANR	695728	Identifier	c		695627	0					
ANR	695729	PrimaryExpression	0xfd		695627	1					
ANR	695730	CompoundStatement		20:18:333:333	695627	1					
ANR	695731	ReturnStatement	return ( ( c == 0xfe ) ? INVALID_CODE_FE : INVALID_CODE_FF ) ;	115:6:3725:3781	695627	0	True				
ANR	695732	ConditionalExpression	( c == 0xfe ) ? INVALID_CODE_FE : INVALID_CODE_FF		695627	0					
ANR	695733	Condition	c == 0xfe		695627	0					
ANR	695734	EqualityExpression	c == 0xfe		695627	0		==			
ANR	695735	Identifier	c		695627	0					
ANR	695736	PrimaryExpression	0xfe		695627	1					
ANR	695737	Identifier	INVALID_CODE_FE		695627	1					
ANR	695738	Identifier	INVALID_CODE_FF		695627	2					
ANR	695739	ReturnStatement	return ( OnigCodePoint ) c ;	118:4:3800:3824	695627	1	True				
ANR	695740	CastExpression	( OnigCodePoint ) c		695627	0					
ANR	695741	CastTarget	OnigCodePoint		695627	0					
ANR	695742	Identifier	c		695627	1					
ANR	695743	ReturnType	static OnigCodePoint		695627	1					
ANR	695744	Identifier	mbc_to_code		695627	2					
ANR	695745	ParameterList	"const UChar * p , const UChar * end"		695627	3					
ANR	695746	Parameter	const UChar * p	94:12:3349:3362	695627	0	True				
ANR	695747	ParameterType	const UChar *		695627	0					
ANR	695748	Identifier	p		695627	1					
ANR	695749	Parameter	const UChar * end	94:28:3365:3380	695627	1	True				
ANR	695750	ParameterType	const UChar *		695627	0					
ANR	695751	Identifier	end		695627	1					
ANR	695752	CFGEntryNode	ENTRY		695627		True				
ANR	695753	CFGExitNode	EXIT		695627		True				
ANR	695754	Symbol	p		695627						
ANR	695755	Symbol	mbc_enc_len		695627						
ANR	695756	Symbol	c		695627						
ANR	695757	Symbol	len		695627						
ANR	695758	Symbol	* p ++		695627						
ANR	695759	Symbol	end		695627						
ANR	695760	Symbol	INVALID_CODE_FF		695627						
ANR	695761	Symbol	n		695627						
ANR	695762	Symbol	INVALID_CODE_FE		695627						
ANR	695763	Function	code_to_mbclen	122:0:3833:4345							
ANR	695764	FunctionDef	code_to_mbclen (OnigCodePoint code)		695763	0					
ANR	695765	CompoundStatement		124:0:3879:4345	695763	0					
ANR	695766	IfStatement	if ( ( code & 0xffffff80 ) == 0 )		695763	0					
ANR	695767	Condition	( code & 0xffffff80 ) == 0	125:11:3892:3915	695763	0	True				
ANR	695768	EqualityExpression	( code & 0xffffff80 ) == 0		695763	0		==			
ANR	695769	BitAndExpression	code & 0xffffff80		695763	0		&			
ANR	695770	Identifier	code		695763	0					
ANR	695771	PrimaryExpression	0xffffff80		695763	1					
ANR	695772	PrimaryExpression	0		695763	1					
ANR	695773	ReturnStatement	return 1 ;	125:37:3918:3926	695763	1	True				
ANR	695774	PrimaryExpression	1		695763	0					
ANR	695775	ElseStatement	else		695763	0					
ANR	695776	IfStatement	if ( ( code & 0xfffff800 ) == 0 )		695763	0					
ANR	695777	Condition	( code & 0xfffff800 ) == 0	126:11:3939:3962	695763	0	True				
ANR	695778	EqualityExpression	( code & 0xfffff800 ) == 0		695763	0		==			
ANR	695779	BitAndExpression	code & 0xfffff800		695763	0		&			
ANR	695780	Identifier	code		695763	0					
ANR	695781	PrimaryExpression	0xfffff800		695763	1					
ANR	695782	PrimaryExpression	0		695763	1					
ANR	695783	ReturnStatement	return 2 ;	126:37:3965:3973	695763	1	True				
ANR	695784	PrimaryExpression	2		695763	0					
ANR	695785	ElseStatement	else		695763	0					
ANR	695786	IfStatement	if ( ( code & 0xffff0000 ) == 0 )		695763	0					
ANR	695787	Condition	( code & 0xffff0000 ) == 0	127:11:3986:4009	695763	0	True				
ANR	695788	EqualityExpression	( code & 0xffff0000 ) == 0		695763	0		==			
ANR	695789	BitAndExpression	code & 0xffff0000		695763	0		&			
ANR	695790	Identifier	code		695763	0					
ANR	695791	PrimaryExpression	0xffff0000		695763	1					
ANR	695792	PrimaryExpression	0		695763	1					
ANR	695793	ReturnStatement	return 3 ;	127:37:4012:4020	695763	1	True				
ANR	695794	PrimaryExpression	3		695763	0					
ANR	695795	ElseStatement	else		695763	0					
ANR	695796	IfStatement	if ( ( code & 0xffe00000 ) == 0 )		695763	0					
ANR	695797	Condition	( code & 0xffe00000 ) == 0	128:11:4033:4056	695763	0	True				
ANR	695798	EqualityExpression	( code & 0xffe00000 ) == 0		695763	0		==			
ANR	695799	BitAndExpression	code & 0xffe00000		695763	0		&			
ANR	695800	Identifier	code		695763	0					
ANR	695801	PrimaryExpression	0xffe00000		695763	1					
ANR	695802	PrimaryExpression	0		695763	1					
ANR	695803	ReturnStatement	return 4 ;	128:37:4059:4067	695763	1	True				
ANR	695804	PrimaryExpression	4		695763	0					
ANR	695805	ElseStatement	else		695763	0					
ANR	695806	IfStatement	if ( ( code & 0xfc000000 ) == 0 )		695763	0					
ANR	695807	Condition	( code & 0xfc000000 ) == 0	129:11:4080:4103	695763	0	True				
ANR	695808	EqualityExpression	( code & 0xfc000000 ) == 0		695763	0		==			
ANR	695809	BitAndExpression	code & 0xfc000000		695763	0		&			
ANR	695810	Identifier	code		695763	0					
ANR	695811	PrimaryExpression	0xfc000000		695763	1					
ANR	695812	PrimaryExpression	0		695763	1					
ANR	695813	ReturnStatement	return 5 ;	129:37:4106:4114	695763	1	True				
ANR	695814	PrimaryExpression	5		695763	0					
ANR	695815	ElseStatement	else		695763	0					
ANR	695816	IfStatement	if ( ( code & 0x80000000 ) == 0 )		695763	0					
ANR	695817	Condition	( code & 0x80000000 ) == 0	130:11:4127:4150	695763	0	True				
ANR	695818	EqualityExpression	( code & 0x80000000 ) == 0		695763	0		==			
ANR	695819	BitAndExpression	code & 0x80000000		695763	0		&			
ANR	695820	Identifier	code		695763	0					
ANR	695821	PrimaryExpression	0x80000000		695763	1					
ANR	695822	PrimaryExpression	0		695763	1					
ANR	695823	ReturnStatement	return 6 ;	130:37:4153:4161	695763	1	True				
ANR	695824	PrimaryExpression	6		695763	0					
ANR	695825	ElseStatement	else		695763	0					
ANR	695826	IfStatement	if ( code == INVALID_CODE_FE )		695763	0					
ANR	695827	Condition	code == INVALID_CODE_FE	132:11:4205:4227	695763	0	True				
ANR	695828	EqualityExpression	code == INVALID_CODE_FE		695763	0		==			
ANR	695829	Identifier	code		695763	0					
ANR	695830	Identifier	INVALID_CODE_FE		695763	1					
ANR	695831	ReturnStatement	return 1 ;	132:36:4230:4238	695763	1	True				
ANR	695832	PrimaryExpression	1		695763	0					
ANR	695833	ElseStatement	else		695763	0					
ANR	695834	IfStatement	if ( code == INVALID_CODE_FF )		695763	0					
ANR	695835	Condition	code == INVALID_CODE_FF	133:11:4251:4273	695763	0	True				
ANR	695836	EqualityExpression	code == INVALID_CODE_FF		695763	0		==			
ANR	695837	Identifier	code		695763	0					
ANR	695838	Identifier	INVALID_CODE_FF		695763	1					
ANR	695839	ReturnStatement	return 1 ;	133:36:4276:4284	695763	1	True				
ANR	695840	PrimaryExpression	1		695763	0					
ANR	695841	ElseStatement	else		695763	0					
ANR	695842	ReturnStatement	return ONIGERR_INVALID_CODE_POINT_VALUE ;	136:4:4304:4343	695763	0	True				
ANR	695843	Identifier	ONIGERR_INVALID_CODE_POINT_VALUE		695763	0					
ANR	695844	ReturnType	static int		695763	1					
ANR	695845	Identifier	code_to_mbclen		695763	2					
ANR	695846	ParameterList	OnigCodePoint code		695763	3					
ANR	695847	Parameter	OnigCodePoint code	123:15:3859:3876	695763	0	True				
ANR	695848	ParameterType	OnigCodePoint		695763	0					
ANR	695849	Identifier	code		695763	1					
ANR	695850	CFGEntryNode	ENTRY		695763		True				
ANR	695851	CFGExitNode	EXIT		695763		True				
ANR	695852	Symbol	code		695763						
ANR	695853	Symbol	ONIGERR_INVALID_CODE_POINT_VALUE		695763						
ANR	695854	Symbol	INVALID_CODE_FF		695763						
ANR	695855	Symbol	INVALID_CODE_FE		695763						
ANR	695856	Function	code_to_mbc	139:0:4348:5814							
ANR	695857	FunctionDef	"code_to_mbc (OnigCodePoint code , UChar * buf)"		695856	0					
ANR	695858	CompoundStatement		141:0:4403:5814	695856	0					
ANR	695859	Statement	define	142:1:4406:4411	695856	0	True				
ANR	695860	Statement	UTF8_TRAILS	142:8:4413:4423	695856	1	True				
ANR	695861	Statement	(	142:19:4424:4424	695856	2	True				
ANR	695862	Statement	code	142:20:4425:4428	695856	3	True				
ANR	695863	Statement	","	142:24:4429:4429	695856	4	True				
ANR	695864	Statement	shift	142:26:4431:4435	695856	5	True				
ANR	695865	Statement	)	142:31:4436:4436	695856	6	True				
ANR	695866	Statement	(	142:33:4438:4438	695856	7	True				
ANR	695867	Statement	UChar	142:34:4439:4443	695856	8	True				
ANR	695868	Statement	)	142:40:4445:4445	695856	9	True				
ANR	695869	Statement	(	142:41:4446:4446	695856	10	True				
ANR	695870	Statement	(	142:42:4447:4447	695856	11	True				
ANR	695871	Statement	(	142:43:4448:4448	695856	12	True				
ANR	695872	Statement	(	142:44:4449:4449	695856	13	True				
ANR	695873	Statement	code	142:45:4450:4453	695856	14	True				
ANR	695874	Statement	)	142:49:4454:4454	695856	15	True				
ANR	695875	Statement	>>	142:51:4456:4457	695856	16	True				
ANR	695876	Statement	(	142:54:4459:4459	695856	17	True				
ANR	695877	Statement	shift	142:55:4460:4464	695856	18	True				
ANR	695878	Statement	)	142:60:4465:4465	695856	19	True				
ANR	695879	Statement	)	142:61:4466:4466	695856	20	True				
ANR	695880	Statement	&	142:63:4468:4468	695856	21	True				
ANR	695881	Statement	0x3f	142:65:4470:4473	695856	22	True				
ANR	695882	Statement	)	142:69:4474:4474	695856	23	True				
ANR	695883	Statement	|	142:71:4476:4476	695856	24	True				
ANR	695884	Statement	0x80	142:73:4478:4481	695856	25	True				
ANR	695885	Statement	)	142:77:4482:4482	695856	26	True				
ANR	695886	Statement	define	143:1:4485:4490	695856	27	True				
ANR	695887	Statement	UTF8_TRAIL0	143:8:4492:4502	695856	28	True				
ANR	695888	Statement	(	143:19:4503:4503	695856	29	True				
ANR	695889	Statement	code	143:20:4504:4507	695856	30	True				
ANR	695890	Statement	)	143:24:4508:4508	695856	31	True				
ANR	695891	Statement	(	143:33:4517:4517	695856	32	True				
ANR	695892	Statement	UChar	143:34:4518:4522	695856	33	True				
ANR	695893	Statement	)	143:40:4524:4524	695856	34	True				
ANR	695894	Statement	(	143:41:4525:4525	695856	35	True				
ANR	695895	Statement	(	143:42:4526:4526	695856	36	True				
ANR	695896	Statement	(	143:43:4527:4527	695856	37	True				
ANR	695897	Statement	code	143:44:4528:4531	695856	38	True				
ANR	695898	Statement	)	143:48:4532:4532	695856	39	True				
ANR	695899	Statement	&	143:50:4534:4534	695856	40	True				
ANR	695900	Statement	0x3f	143:52:4536:4539	695856	41	True				
ANR	695901	Statement	)	143:56:4540:4540	695856	42	True				
ANR	695902	Statement	|	143:58:4542:4542	695856	43	True				
ANR	695903	Statement	0x80	143:60:4544:4547	695856	44	True				
ANR	695904	Statement	)	143:64:4548:4548	695856	45	True				
ANR	695905	IfStatement	if ( ( code & 0xffffff80 ) == 0 )		695856	46					
ANR	695906	Condition	( code & 0xffffff80 ) == 0	145:6:4557:4580	695856	0	True				
ANR	695907	EqualityExpression	( code & 0xffffff80 ) == 0		695856	0		==			
ANR	695908	BitAndExpression	code & 0xffffff80		695856	0		&			
ANR	695909	Identifier	code		695856	0					
ANR	695910	PrimaryExpression	0xffffff80		695856	1					
ANR	695911	PrimaryExpression	0		695856	1					
ANR	695912	CompoundStatement		5:32:179:179	695856	1					
ANR	695913	ExpressionStatement	* buf = ( UChar ) code	146:4:4589:4608	695856	0	True				
ANR	695914	AssignmentExpression	* buf = ( UChar ) code		695856	0		=			
ANR	695915	UnaryOperationExpression	* buf		695856	0					
ANR	695916	UnaryOperator	*		695856	0					
ANR	695917	Identifier	buf		695856	1					
ANR	695918	CastExpression	( UChar ) code		695856	1					
ANR	695919	CastTarget	UChar		695856	0					
ANR	695920	Identifier	code		695856	1					
ANR	695921	ReturnStatement	return 1 ;	147:4:4614:4622	695856	1	True				
ANR	695922	PrimaryExpression	1		695856	0					
ANR	695923	ElseStatement	else		695856	0					
ANR	695924	CompoundStatement		10:4:237:251	695856	0					
ANR	695925	IdentifierDeclStatement	UChar * p = buf ;	150:4:4641:4655	695856	0	True				
ANR	695926	IdentifierDecl	* p = buf		695856	0					
ANR	695927	IdentifierDeclType	UChar *		695856	0					
ANR	695928	Identifier	p		695856	1					
ANR	695929	AssignmentExpression	* p = buf		695856	2		=			
ANR	695930	Identifier	buf		695856	0					
ANR	695931	Identifier	buf		695856	1					
ANR	695932	IfStatement	if ( ( code & 0xfffff800 ) == 0 )		695856	1					
ANR	695933	Condition	( code & 0xfffff800 ) == 0	152:8:4666:4689	695856	0	True				
ANR	695934	EqualityExpression	( code & 0xfffff800 ) == 0		695856	0		==			
ANR	695935	BitAndExpression	code & 0xfffff800		695856	0		&			
ANR	695936	Identifier	code		695856	0					
ANR	695937	PrimaryExpression	0xfffff800		695856	1					
ANR	695938	PrimaryExpression	0		695856	1					
ANR	695939	CompoundStatement		12:34:288:288	695856	1					
ANR	695940	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )	153:6:4700:4741	695856	0	True				
ANR	695941	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )		695856	0		=			
ANR	695942	UnaryOperationExpression	* p ++		695856	0					
ANR	695943	UnaryOperator	*		695856	0					
ANR	695944	PostIncDecOperationExpression	p ++		695856	1					
ANR	695945	Identifier	p		695856	0					
ANR	695946	IncDec	++		695856	1					
ANR	695947	CastExpression	( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )		695856	1					
ANR	695948	CastTarget	UChar		695856	0					
ANR	695949	InclusiveOrExpression	( ( code >> 6 ) & 0x1f ) | 0xc0		695856	1		|			
ANR	695950	BitAndExpression	( code >> 6 ) & 0x1f		695856	0		&			
ANR	695951	ShiftExpression	code >> 6		695856	0		>>			
ANR	695952	Identifier	code		695856	0					
ANR	695953	PrimaryExpression	6		695856	1					
ANR	695954	PrimaryExpression	0x1f		695856	1					
ANR	695955	PrimaryExpression	0xc0		695856	1					
ANR	695956	ElseStatement	else		695856	0					
ANR	695957	IfStatement	if ( ( code & 0xffff0000 ) == 0 )		695856	0					
ANR	695958	Condition	( code & 0xffff0000 ) == 0	155:13:4762:4785	695856	0	True				
ANR	695959	EqualityExpression	( code & 0xffff0000 ) == 0		695856	0		==			
ANR	695960	BitAndExpression	code & 0xffff0000		695856	0		&			
ANR	695961	Identifier	code		695856	0					
ANR	695962	PrimaryExpression	0xffff0000		695856	1					
ANR	695963	PrimaryExpression	0		695856	1					
ANR	695964	CompoundStatement		15:39:384:384	695856	1					
ANR	695965	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )	156:6:4796:4839	695856	0	True				
ANR	695966	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )		695856	0		=			
ANR	695967	UnaryOperationExpression	* p ++		695856	0					
ANR	695968	UnaryOperator	*		695856	0					
ANR	695969	PostIncDecOperationExpression	p ++		695856	1					
ANR	695970	Identifier	p		695856	0					
ANR	695971	IncDec	++		695856	1					
ANR	695972	CastExpression	( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )		695856	1					
ANR	695973	CastTarget	UChar		695856	0					
ANR	695974	InclusiveOrExpression	( ( code >> 12 ) & 0x0f ) | 0xe0		695856	1		|			
ANR	695975	BitAndExpression	( code >> 12 ) & 0x0f		695856	0		&			
ANR	695976	ShiftExpression	code >> 12		695856	0		>>			
ANR	695977	Identifier	code		695856	0					
ANR	695978	PrimaryExpression	12		695856	1					
ANR	695979	PrimaryExpression	0x0f		695856	1					
ANR	695980	PrimaryExpression	0xe0		695856	1					
ANR	695981	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	157:6:4847:4874	695856	1	True				
ANR	695982	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		695856	0		=			
ANR	695983	UnaryOperationExpression	* p ++		695856	0					
ANR	695984	UnaryOperator	*		695856	0					
ANR	695985	PostIncDecOperationExpression	p ++		695856	1					
ANR	695986	Identifier	p		695856	0					
ANR	695987	IncDec	++		695856	1					
ANR	695988	CallExpression	"UTF8_TRAILS ( code , 6 )"		695856	1					
ANR	695989	Callee	UTF8_TRAILS		695856	0					
ANR	695990	Identifier	UTF8_TRAILS		695856	0					
ANR	695991	ArgumentList	code		695856	1					
ANR	695992	Argument	code		695856	0					
ANR	695993	Identifier	code		695856	0					
ANR	695994	Argument	6		695856	1					
ANR	695995	PrimaryExpression	6		695856	0					
ANR	695996	ElseStatement	else		695856	0					
ANR	695997	IfStatement	if ( ( code & 0xffe00000 ) == 0 )		695856	0					
ANR	695998	Condition	( code & 0xffe00000 ) == 0	159:13:4895:4918	695856	0	True				
ANR	695999	EqualityExpression	( code & 0xffe00000 ) == 0		695856	0		==			
ANR	696000	BitAndExpression	code & 0xffe00000		695856	0		&			
ANR	696001	Identifier	code		695856	0					
ANR	696002	PrimaryExpression	0xffe00000		695856	1					
ANR	696003	PrimaryExpression	0		695856	1					
ANR	696004	CompoundStatement		19:39:517:517	695856	1					
ANR	696005	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )	160:6:4929:4972	695856	0	True				
ANR	696006	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )		695856	0		=			
ANR	696007	UnaryOperationExpression	* p ++		695856	0					
ANR	696008	UnaryOperator	*		695856	0					
ANR	696009	PostIncDecOperationExpression	p ++		695856	1					
ANR	696010	Identifier	p		695856	0					
ANR	696011	IncDec	++		695856	1					
ANR	696012	CastExpression	( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )		695856	1					
ANR	696013	CastTarget	UChar		695856	0					
ANR	696014	InclusiveOrExpression	( ( code >> 18 ) & 0x07 ) | 0xf0		695856	1		|			
ANR	696015	BitAndExpression	( code >> 18 ) & 0x07		695856	0		&			
ANR	696016	ShiftExpression	code >> 18		695856	0		>>			
ANR	696017	Identifier	code		695856	0					
ANR	696018	PrimaryExpression	18		695856	1					
ANR	696019	PrimaryExpression	0x07		695856	1					
ANR	696020	PrimaryExpression	0xf0		695856	1					
ANR	696021	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	161:6:4980:5008	695856	1	True				
ANR	696022	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		695856	0		=			
ANR	696023	UnaryOperationExpression	* p ++		695856	0					
ANR	696024	UnaryOperator	*		695856	0					
ANR	696025	PostIncDecOperationExpression	p ++		695856	1					
ANR	696026	Identifier	p		695856	0					
ANR	696027	IncDec	++		695856	1					
ANR	696028	CallExpression	"UTF8_TRAILS ( code , 12 )"		695856	1					
ANR	696029	Callee	UTF8_TRAILS		695856	0					
ANR	696030	Identifier	UTF8_TRAILS		695856	0					
ANR	696031	ArgumentList	code		695856	1					
ANR	696032	Argument	code		695856	0					
ANR	696033	Identifier	code		695856	0					
ANR	696034	Argument	12		695856	1					
ANR	696035	PrimaryExpression	12		695856	0					
ANR	696036	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	162:6:5016:5044	695856	2	True				
ANR	696037	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		695856	0		=			
ANR	696038	UnaryOperationExpression	* p ++		695856	0					
ANR	696039	UnaryOperator	*		695856	0					
ANR	696040	PostIncDecOperationExpression	p ++		695856	1					
ANR	696041	Identifier	p		695856	0					
ANR	696042	IncDec	++		695856	1					
ANR	696043	CallExpression	"UTF8_TRAILS ( code , 6 )"		695856	1					
ANR	696044	Callee	UTF8_TRAILS		695856	0					
ANR	696045	Identifier	UTF8_TRAILS		695856	0					
ANR	696046	ArgumentList	code		695856	1					
ANR	696047	Argument	code		695856	0					
ANR	696048	Identifier	code		695856	0					
ANR	696049	Argument	6		695856	1					
ANR	696050	PrimaryExpression	6		695856	0					
ANR	696051	ElseStatement	else		695856	0					
ANR	696052	IfStatement	if ( ( code & 0xfc000000 ) == 0 )		695856	0					
ANR	696053	Condition	( code & 0xfc000000 ) == 0	164:13:5065:5088	695856	0	True				
ANR	696054	EqualityExpression	( code & 0xfc000000 ) == 0		695856	0		==			
ANR	696055	BitAndExpression	code & 0xfc000000		695856	0		&			
ANR	696056	Identifier	code		695856	0					
ANR	696057	PrimaryExpression	0xfc000000		695856	1					
ANR	696058	PrimaryExpression	0		695856	1					
ANR	696059	CompoundStatement		24:39:687:687	695856	1					
ANR	696060	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )	165:6:5099:5142	695856	0	True				
ANR	696061	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )		695856	0		=			
ANR	696062	UnaryOperationExpression	* p ++		695856	0					
ANR	696063	UnaryOperator	*		695856	0					
ANR	696064	PostIncDecOperationExpression	p ++		695856	1					
ANR	696065	Identifier	p		695856	0					
ANR	696066	IncDec	++		695856	1					
ANR	696067	CastExpression	( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )		695856	1					
ANR	696068	CastTarget	UChar		695856	0					
ANR	696069	InclusiveOrExpression	( ( code >> 24 ) & 0x03 ) | 0xf8		695856	1		|			
ANR	696070	BitAndExpression	( code >> 24 ) & 0x03		695856	0		&			
ANR	696071	ShiftExpression	code >> 24		695856	0		>>			
ANR	696072	Identifier	code		695856	0					
ANR	696073	PrimaryExpression	24		695856	1					
ANR	696074	PrimaryExpression	0x03		695856	1					
ANR	696075	PrimaryExpression	0xf8		695856	1					
ANR	696076	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 18 )"	166:6:5150:5178	695856	1	True				
ANR	696077	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 18 )"		695856	0		=			
ANR	696078	UnaryOperationExpression	* p ++		695856	0					
ANR	696079	UnaryOperator	*		695856	0					
ANR	696080	PostIncDecOperationExpression	p ++		695856	1					
ANR	696081	Identifier	p		695856	0					
ANR	696082	IncDec	++		695856	1					
ANR	696083	CallExpression	"UTF8_TRAILS ( code , 18 )"		695856	1					
ANR	696084	Callee	UTF8_TRAILS		695856	0					
ANR	696085	Identifier	UTF8_TRAILS		695856	0					
ANR	696086	ArgumentList	code		695856	1					
ANR	696087	Argument	code		695856	0					
ANR	696088	Identifier	code		695856	0					
ANR	696089	Argument	18		695856	1					
ANR	696090	PrimaryExpression	18		695856	0					
ANR	696091	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	167:6:5186:5214	695856	2	True				
ANR	696092	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		695856	0		=			
ANR	696093	UnaryOperationExpression	* p ++		695856	0					
ANR	696094	UnaryOperator	*		695856	0					
ANR	696095	PostIncDecOperationExpression	p ++		695856	1					
ANR	696096	Identifier	p		695856	0					
ANR	696097	IncDec	++		695856	1					
ANR	696098	CallExpression	"UTF8_TRAILS ( code , 12 )"		695856	1					
ANR	696099	Callee	UTF8_TRAILS		695856	0					
ANR	696100	Identifier	UTF8_TRAILS		695856	0					
ANR	696101	ArgumentList	code		695856	1					
ANR	696102	Argument	code		695856	0					
ANR	696103	Identifier	code		695856	0					
ANR	696104	Argument	12		695856	1					
ANR	696105	PrimaryExpression	12		695856	0					
ANR	696106	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	168:6:5222:5250	695856	3	True				
ANR	696107	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		695856	0		=			
ANR	696108	UnaryOperationExpression	* p ++		695856	0					
ANR	696109	UnaryOperator	*		695856	0					
ANR	696110	PostIncDecOperationExpression	p ++		695856	1					
ANR	696111	Identifier	p		695856	0					
ANR	696112	IncDec	++		695856	1					
ANR	696113	CallExpression	"UTF8_TRAILS ( code , 6 )"		695856	1					
ANR	696114	Callee	UTF8_TRAILS		695856	0					
ANR	696115	Identifier	UTF8_TRAILS		695856	0					
ANR	696116	ArgumentList	code		695856	1					
ANR	696117	Argument	code		695856	0					
ANR	696118	Identifier	code		695856	0					
ANR	696119	Argument	6		695856	1					
ANR	696120	PrimaryExpression	6		695856	0					
ANR	696121	ElseStatement	else		695856	0					
ANR	696122	IfStatement	if ( ( code & 0x80000000 ) == 0 )		695856	0					
ANR	696123	Condition	( code & 0x80000000 ) == 0	170:13:5271:5294	695856	0	True				
ANR	696124	EqualityExpression	( code & 0x80000000 ) == 0		695856	0		==			
ANR	696125	BitAndExpression	code & 0x80000000		695856	0		&			
ANR	696126	Identifier	code		695856	0					
ANR	696127	PrimaryExpression	0x80000000		695856	1					
ANR	696128	PrimaryExpression	0		695856	1					
ANR	696129	CompoundStatement		30:39:893:893	695856	1					
ANR	696130	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )	171:6:5305:5348	695856	0	True				
ANR	696131	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )		695856	0		=			
ANR	696132	UnaryOperationExpression	* p ++		695856	0					
ANR	696133	UnaryOperator	*		695856	0					
ANR	696134	PostIncDecOperationExpression	p ++		695856	1					
ANR	696135	Identifier	p		695856	0					
ANR	696136	IncDec	++		695856	1					
ANR	696137	CastExpression	( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )		695856	1					
ANR	696138	CastTarget	UChar		695856	0					
ANR	696139	InclusiveOrExpression	( ( code >> 30 ) & 0x01 ) | 0xfc		695856	1		|			
ANR	696140	BitAndExpression	( code >> 30 ) & 0x01		695856	0		&			
ANR	696141	ShiftExpression	code >> 30		695856	0		>>			
ANR	696142	Identifier	code		695856	0					
ANR	696143	PrimaryExpression	30		695856	1					
ANR	696144	PrimaryExpression	0x01		695856	1					
ANR	696145	PrimaryExpression	0xfc		695856	1					
ANR	696146	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 24 )"	172:6:5356:5384	695856	1	True				
ANR	696147	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 24 )"		695856	0		=			
ANR	696148	UnaryOperationExpression	* p ++		695856	0					
ANR	696149	UnaryOperator	*		695856	0					
ANR	696150	PostIncDecOperationExpression	p ++		695856	1					
ANR	696151	Identifier	p		695856	0					
ANR	696152	IncDec	++		695856	1					
ANR	696153	CallExpression	"UTF8_TRAILS ( code , 24 )"		695856	1					
ANR	696154	Callee	UTF8_TRAILS		695856	0					
ANR	696155	Identifier	UTF8_TRAILS		695856	0					
ANR	696156	ArgumentList	code		695856	1					
ANR	696157	Argument	code		695856	0					
ANR	696158	Identifier	code		695856	0					
ANR	696159	Argument	24		695856	1					
ANR	696160	PrimaryExpression	24		695856	0					
ANR	696161	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 18 )"	173:6:5392:5420	695856	2	True				
ANR	696162	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 18 )"		695856	0		=			
ANR	696163	UnaryOperationExpression	* p ++		695856	0					
ANR	696164	UnaryOperator	*		695856	0					
ANR	696165	PostIncDecOperationExpression	p ++		695856	1					
ANR	696166	Identifier	p		695856	0					
ANR	696167	IncDec	++		695856	1					
ANR	696168	CallExpression	"UTF8_TRAILS ( code , 18 )"		695856	1					
ANR	696169	Callee	UTF8_TRAILS		695856	0					
ANR	696170	Identifier	UTF8_TRAILS		695856	0					
ANR	696171	ArgumentList	code		695856	1					
ANR	696172	Argument	code		695856	0					
ANR	696173	Identifier	code		695856	0					
ANR	696174	Argument	18		695856	1					
ANR	696175	PrimaryExpression	18		695856	0					
ANR	696176	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	174:6:5428:5456	695856	3	True				
ANR	696177	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		695856	0		=			
ANR	696178	UnaryOperationExpression	* p ++		695856	0					
ANR	696179	UnaryOperator	*		695856	0					
ANR	696180	PostIncDecOperationExpression	p ++		695856	1					
ANR	696181	Identifier	p		695856	0					
ANR	696182	IncDec	++		695856	1					
ANR	696183	CallExpression	"UTF8_TRAILS ( code , 12 )"		695856	1					
ANR	696184	Callee	UTF8_TRAILS		695856	0					
ANR	696185	Identifier	UTF8_TRAILS		695856	0					
ANR	696186	ArgumentList	code		695856	1					
ANR	696187	Argument	code		695856	0					
ANR	696188	Identifier	code		695856	0					
ANR	696189	Argument	12		695856	1					
ANR	696190	PrimaryExpression	12		695856	0					
ANR	696191	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	175:6:5464:5492	695856	4	True				
ANR	696192	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		695856	0		=			
ANR	696193	UnaryOperationExpression	* p ++		695856	0					
ANR	696194	UnaryOperator	*		695856	0					
ANR	696195	PostIncDecOperationExpression	p ++		695856	1					
ANR	696196	Identifier	p		695856	0					
ANR	696197	IncDec	++		695856	1					
ANR	696198	CallExpression	"UTF8_TRAILS ( code , 6 )"		695856	1					
ANR	696199	Callee	UTF8_TRAILS		695856	0					
ANR	696200	Identifier	UTF8_TRAILS		695856	0					
ANR	696201	ArgumentList	code		695856	1					
ANR	696202	Argument	code		695856	0					
ANR	696203	Identifier	code		695856	0					
ANR	696204	Argument	6		695856	1					
ANR	696205	PrimaryExpression	6		695856	0					
ANR	696206	ElseStatement	else		695856	0					
ANR	696207	IfStatement	if ( code == INVALID_CODE_FE )		695856	0					
ANR	696208	Condition	code == INVALID_CODE_FE	178:13:5544:5566	695856	0	True				
ANR	696209	EqualityExpression	code == INVALID_CODE_FE		695856	0		==			
ANR	696210	Identifier	code		695856	0					
ANR	696211	Identifier	INVALID_CODE_FE		695856	1					
ANR	696212	CompoundStatement		38:38:1165:1165	695856	1					
ANR	696213	ExpressionStatement	* p = 0xfe	179:6:5577:5586	695856	0	True				
ANR	696214	AssignmentExpression	* p = 0xfe		695856	0		=			
ANR	696215	UnaryOperationExpression	* p		695856	0					
ANR	696216	UnaryOperator	*		695856	0					
ANR	696217	Identifier	p		695856	1					
ANR	696218	PrimaryExpression	0xfe		695856	1					
ANR	696219	ReturnStatement	return 1 ;	180:6:5594:5602	695856	1	True				
ANR	696220	PrimaryExpression	1		695856	0					
ANR	696221	ElseStatement	else		695856	0					
ANR	696222	IfStatement	if ( code == INVALID_CODE_FF )		695856	0					
ANR	696223	Condition	code == INVALID_CODE_FF	182:13:5623:5645	695856	0	True				
ANR	696224	EqualityExpression	code == INVALID_CODE_FF		695856	0		==			
ANR	696225	Identifier	code		695856	0					
ANR	696226	Identifier	INVALID_CODE_FF		695856	1					
ANR	696227	CompoundStatement		42:38:1244:1244	695856	1					
ANR	696228	ExpressionStatement	* p = 0xff	183:6:5656:5665	695856	0	True				
ANR	696229	AssignmentExpression	* p = 0xff		695856	0		=			
ANR	696230	UnaryOperationExpression	* p		695856	0					
ANR	696231	UnaryOperator	*		695856	0					
ANR	696232	Identifier	p		695856	1					
ANR	696233	PrimaryExpression	0xff		695856	1					
ANR	696234	ReturnStatement	return 1 ;	184:6:5673:5681	695856	1	True				
ANR	696235	PrimaryExpression	1		695856	0					
ANR	696236	ElseStatement	else		695856	0					
ANR	696237	CompoundStatement		47:9:1301:1301	695856	0					
ANR	696238	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	188:6:5713:5751	695856	0	True				
ANR	696239	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		695856	0					
ANR	696240	ExpressionStatement	* p ++ = UTF8_TRAIL0 ( code )	191:4:5764:5788	695856	2	True				
ANR	696241	AssignmentExpression	* p ++ = UTF8_TRAIL0 ( code )		695856	0		=			
ANR	696242	UnaryOperationExpression	* p ++		695856	0					
ANR	696243	UnaryOperator	*		695856	0					
ANR	696244	PostIncDecOperationExpression	p ++		695856	1					
ANR	696245	Identifier	p		695856	0					
ANR	696246	IncDec	++		695856	1					
ANR	696247	CallExpression	UTF8_TRAIL0 ( code )		695856	1					
ANR	696248	Callee	UTF8_TRAIL0		695856	0					
ANR	696249	Identifier	UTF8_TRAIL0		695856	0					
ANR	696250	ArgumentList	code		695856	1					
ANR	696251	Argument	code		695856	0					
ANR	696252	Identifier	code		695856	0					
ANR	696253	ReturnStatement	return p - buf ;	192:4:5794:5808	695856	3	True				
ANR	696254	AdditiveExpression	p - buf		695856	0		-			
ANR	696255	Identifier	p		695856	0					
ANR	696256	Identifier	buf		695856	1					
ANR	696257	ReturnType	static int		695856	1					
ANR	696258	Identifier	code_to_mbc		695856	2					
ANR	696259	ParameterList	"OnigCodePoint code , UChar * buf"		695856	3					
ANR	696260	Parameter	OnigCodePoint code	140:12:4371:4388	695856	0	True				
ANR	696261	ParameterType	OnigCodePoint		695856	0					
ANR	696262	Identifier	code		695856	1					
ANR	696263	Parameter	UChar * buf	140:32:4391:4400	695856	1	True				
ANR	696264	ParameterType	UChar *		695856	0					
ANR	696265	Identifier	buf		695856	1					
ANR	696266	CFGEntryNode	ENTRY		695856		True				
ANR	696267	CFGExitNode	EXIT		695856		True				
ANR	696268	Symbol	p		695856						
ANR	696269	Symbol	UTF8_TRAIL0		695856						
ANR	696270	Symbol	buf		695856						
ANR	696271	Symbol	* buf		695856						
ANR	696272	Symbol	UTF8_TRAILS		695856						
ANR	696273	Symbol	code		695856						
ANR	696274	Symbol	* p ++		695856						
ANR	696275	Symbol	* p		695856						
ANR	696276	Symbol	INVALID_CODE_FF		695856						
ANR	696277	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		695856						
ANR	696278	Symbol	INVALID_CODE_FE		695856						
ANR	696279	Function	mbc_case_fold	196:0:5817:6417							
ANR	696280	FunctionDef	"mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		696279	0					
ANR	696281	CompoundStatement		199:0:5921:6417	696279	0					
ANR	696282	IdentifierDeclStatement	const UChar * p = * pp ;	200:2:5925:5945	696279	0	True				
ANR	696283	IdentifierDecl	* p = * pp		696279	0					
ANR	696284	IdentifierDeclType	const UChar *		696279	0					
ANR	696285	Identifier	p		696279	1					
ANR	696286	AssignmentExpression	* p = * pp		696279	2		=			
ANR	696287	Identifier	p		696279	0					
ANR	696288	UnaryOperationExpression	* pp		696279	1					
ANR	696289	UnaryOperator	*		696279	0					
ANR	696290	Identifier	pp		696279	1					
ANR	696291	IfStatement	if ( ONIGENC_IS_MBC_ASCII ( p ) )		696279	1					
ANR	696292	Condition	ONIGENC_IS_MBC_ASCII ( p )	202:6:5954:5976	696279	0	True				
ANR	696293	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		696279	0					
ANR	696294	Callee	ONIGENC_IS_MBC_ASCII		696279	0					
ANR	696295	Identifier	ONIGENC_IS_MBC_ASCII		696279	0					
ANR	696296	ArgumentList	p		696279	1					
ANR	696297	Argument	p		696279	0					
ANR	696298	Identifier	p		696279	0					
ANR	696299	CompoundStatement		4:31:57:57	696279	1					
ANR	696300	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		696279	0					
ANR	696301	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	204:8:6032:6076	696279	0	True				
ANR	696302	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		696279	0		!=			
ANR	696303	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		696279	0		&			
ANR	696304	Identifier	flag		696279	0					
ANR	696305	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		696279	1					
ANR	696306	PrimaryExpression	0		696279	1					
ANR	696307	CompoundStatement		6:55:157:157	696279	1					
ANR	696308	IfStatement	if ( * p == 0x49 )		696279	0					
ANR	696309	Condition	* p == 0x49	205:10:6091:6100	696279	0	True				
ANR	696310	EqualityExpression	* p == 0x49		696279	0		==			
ANR	696311	UnaryOperationExpression	* p		696279	0					
ANR	696312	UnaryOperator	*		696279	0					
ANR	696313	Identifier	p		696279	1					
ANR	696314	PrimaryExpression	0x49		696279	1					
ANR	696315	CompoundStatement		7:22:181:181	696279	1					
ANR	696316	ExpressionStatement	* fold ++ = 0xc4	206:1:6106:6120	696279	0	True				
ANR	696317	AssignmentExpression	* fold ++ = 0xc4		696279	0		=			
ANR	696318	UnaryOperationExpression	* fold ++		696279	0					
ANR	696319	UnaryOperator	*		696279	0					
ANR	696320	PostIncDecOperationExpression	fold ++		696279	1					
ANR	696321	Identifier	fold		696279	0					
ANR	696322	IncDec	++		696279	1					
ANR	696323	PrimaryExpression	0xc4		696279	1					
ANR	696324	ExpressionStatement	* fold = 0xb1	207:1:6123:6137	696279	1	True				
ANR	696325	AssignmentExpression	* fold = 0xb1		696279	0		=			
ANR	696326	UnaryOperationExpression	* fold		696279	0					
ANR	696327	UnaryOperator	*		696279	0					
ANR	696328	Identifier	fold		696279	1					
ANR	696329	PrimaryExpression	0xb1		696279	1					
ANR	696330	ExpressionStatement	( * pp ) ++	208:1:6140:6147	696279	2	True				
ANR	696331	PostIncDecOperationExpression	( * pp ) ++		696279	0					
ANR	696332	UnaryOperationExpression	* pp		696279	0					
ANR	696333	UnaryOperator	*		696279	0					
ANR	696334	Identifier	pp		696279	1					
ANR	696335	IncDec	++		696279	1					
ANR	696336	ReturnStatement	return 2 ;	209:1:6150:6158	696279	3	True				
ANR	696337	PrimaryExpression	2		696279	0					
ANR	696338	ExpressionStatement	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )	214:4:6186:6230	696279	1	True				
ANR	696339	AssignmentExpression	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		696279	0		=			
ANR	696340	UnaryOperationExpression	* fold		696279	0					
ANR	696341	UnaryOperator	*		696279	0					
ANR	696342	Identifier	fold		696279	1					
ANR	696343	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		696279	1					
ANR	696344	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		696279	0					
ANR	696345	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		696279	0					
ANR	696346	ArgumentList	* p		696279	1					
ANR	696347	Argument	* p		696279	0					
ANR	696348	UnaryOperationExpression	* p		696279	0					
ANR	696349	UnaryOperator	*		696279	0					
ANR	696350	Identifier	p		696279	1					
ANR	696351	ExpressionStatement	( * pp ) ++	215:4:6236:6243	696279	2	True				
ANR	696352	PostIncDecOperationExpression	( * pp ) ++		696279	0					
ANR	696353	UnaryOperationExpression	* pp		696279	0					
ANR	696354	UnaryOperator	*		696279	0					
ANR	696355	Identifier	pp		696279	1					
ANR	696356	IncDec	++		696279	1					
ANR	696357	ReturnStatement	return 1 ;	216:4:6249:6257	696279	3	True				
ANR	696358	PrimaryExpression	1		696279	0					
ANR	696359	ElseStatement	else		696279	0					
ANR	696360	CompoundStatement		20:7:400:400	696279	0					
ANR	696361	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF8 , flag , pp , end , fold ) ;"	219:4:6328:6411	696279	0	True				
ANR	696362	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF8 , flag , pp , end , fold )"		696279	0					
ANR	696363	Callee	onigenc_unicode_mbc_case_fold		696279	0					
ANR	696364	Identifier	onigenc_unicode_mbc_case_fold		696279	0					
ANR	696365	ArgumentList	ONIG_ENCODING_UTF8		696279	1					
ANR	696366	Argument	ONIG_ENCODING_UTF8		696279	0					
ANR	696367	Identifier	ONIG_ENCODING_UTF8		696279	0					
ANR	696368	Argument	flag		696279	1					
ANR	696369	Identifier	flag		696279	0					
ANR	696370	Argument	pp		696279	2					
ANR	696371	Identifier	pp		696279	0					
ANR	696372	Argument	end		696279	3					
ANR	696373	Identifier	end		696279	0					
ANR	696374	Argument	fold		696279	4					
ANR	696375	Identifier	fold		696279	0					
ANR	696376	ReturnType	static int		696279	1					
ANR	696377	Identifier	mbc_case_fold		696279	2					
ANR	696378	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		696279	3					
ANR	696379	Parameter	OnigCaseFoldType flag	197:14:5842:5862	696279	0	True				
ANR	696380	ParameterType	OnigCaseFoldType		696279	0					
ANR	696381	Identifier	flag		696279	1					
ANR	696382	Parameter	const UChar * * pp	197:37:5865:5880	696279	1	True				
ANR	696383	ParameterType	const UChar * *		696279	0					
ANR	696384	Identifier	pp		696279	1					
ANR	696385	Parameter	const UChar * end	198:7:5890:5905	696279	2	True				
ANR	696386	ParameterType	const UChar *		696279	0					
ANR	696387	Identifier	end		696279	1					
ANR	696388	Parameter	UChar * fold	198:25:5908:5918	696279	3	True				
ANR	696389	ParameterType	UChar *		696279	0					
ANR	696390	Identifier	fold		696279	1					
ANR	696391	CFGEntryNode	ENTRY		696279		True				
ANR	696392	CFGExitNode	EXIT		696279		True				
ANR	696393	Symbol	pp		696279						
ANR	696394	Symbol	flag		696279						
ANR	696395	Symbol	* pp		696279						
ANR	696396	Symbol	* fold		696279						
ANR	696397	Symbol	ONIG_ENCODING_UTF8		696279						
ANR	696398	Symbol	* fold ++		696279						
ANR	696399	Symbol	p		696279						
ANR	696400	Symbol	fold		696279						
ANR	696401	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		696279						
ANR	696402	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		696279						
ANR	696403	Symbol	end		696279						
ANR	696404	Symbol	* p		696279						
ANR	696405	Symbol	ONIGENC_IS_MBC_ASCII		696279						
ANR	696406	Symbol	onigenc_unicode_mbc_case_fold		696279						
ANR	696407	Function	is_mbc_ambiguous	225:0:6426:7155							
ANR	696408	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		696407	0					
ANR	696409	CompoundStatement		227:0:6513:7155	696407	0					
ANR	696410	IdentifierDeclStatement	const UChar * p = * pp ;	228:2:6517:6537	696407	0	True				
ANR	696411	IdentifierDecl	* p = * pp		696407	0					
ANR	696412	IdentifierDeclType	const UChar *		696407	0					
ANR	696413	Identifier	p		696407	1					
ANR	696414	AssignmentExpression	* p = * pp		696407	2		=			
ANR	696415	Identifier	p		696407	0					
ANR	696416	UnaryOperationExpression	* pp		696407	1					
ANR	696417	UnaryOperator	*		696407	0					
ANR	696418	Identifier	pp		696407	1					
ANR	696419	IfStatement	if ( ONIGENC_IS_MBC_ASCII ( p ) )		696407	1					
ANR	696420	Condition	ONIGENC_IS_MBC_ASCII ( p )	230:6:6546:6568	696407	0	True				
ANR	696421	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		696407	0					
ANR	696422	Callee	ONIGENC_IS_MBC_ASCII		696407	0					
ANR	696423	Identifier	ONIGENC_IS_MBC_ASCII		696407	0					
ANR	696424	ArgumentList	p		696407	1					
ANR	696425	Argument	p		696407	0					
ANR	696426	Identifier	p		696407	0					
ANR	696427	CompoundStatement		4:31:57:57	696407	1					
ANR	696428	ExpressionStatement	( * pp ) ++	231:4:6577:6584	696407	0	True				
ANR	696429	PostIncDecOperationExpression	( * pp ) ++		696407	0					
ANR	696430	UnaryOperationExpression	* pp		696407	0					
ANR	696431	UnaryOperator	*		696407	0					
ANR	696432	Identifier	pp		696407	1					
ANR	696433	IncDec	++		696407	1					
ANR	696434	ReturnStatement	return ONIGENC_IS_ASCII_CODE_CASE_AMBIG ( * p ) ;	232:4:6590:6633	696407	1	True				
ANR	696435	CallExpression	ONIGENC_IS_ASCII_CODE_CASE_AMBIG ( * p )		696407	0					
ANR	696436	Callee	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		696407	0					
ANR	696437	Identifier	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		696407	0					
ANR	696438	ArgumentList	* p		696407	1					
ANR	696439	Argument	* p		696407	0					
ANR	696440	UnaryOperationExpression	* p		696407	0					
ANR	696441	UnaryOperator	*		696407	0					
ANR	696442	Identifier	p		696407	1					
ANR	696443	ElseStatement	else		696407	0					
ANR	696444	CompoundStatement		8:7:132:132	696407	0					
ANR	696445	ExpressionStatement	"( * pp ) += enclen ( ONIG_ENCODING_UTF8 , p )"	235:4:6652:6690	696407	0	True				
ANR	696446	AssignmentExpression	"( * pp ) += enclen ( ONIG_ENCODING_UTF8 , p )"		696407	0		+=			
ANR	696447	UnaryOperationExpression	* pp		696407	0					
ANR	696448	UnaryOperator	*		696407	0					
ANR	696449	Identifier	pp		696407	1					
ANR	696450	CallExpression	"enclen ( ONIG_ENCODING_UTF8 , p )"		696407	1					
ANR	696451	Callee	enclen		696407	0					
ANR	696452	Identifier	enclen		696407	0					
ANR	696453	ArgumentList	ONIG_ENCODING_UTF8		696407	1					
ANR	696454	Argument	ONIG_ENCODING_UTF8		696407	0					
ANR	696455	Identifier	ONIG_ENCODING_UTF8		696407	0					
ANR	696456	Argument	p		696407	1					
ANR	696457	Identifier	p		696407	0					
ANR	696458	IfStatement	if ( * p == 0xc3 )		696407	1					
ANR	696459	Condition	* p == 0xc3	237:8:6701:6710	696407	0	True				
ANR	696460	EqualityExpression	* p == 0xc3		696407	0		==			
ANR	696461	UnaryOperationExpression	* p		696407	0					
ANR	696462	UnaryOperator	*		696407	0					
ANR	696463	Identifier	p		696407	1					
ANR	696464	PrimaryExpression	0xc3		696407	1					
ANR	696465	CompoundStatement		12:6:207:223	696407	1					
ANR	696466	IdentifierDeclStatement	int c = * ( p + 1 ) ;	238:6:6721:6737	696407	0	True				
ANR	696467	IdentifierDecl	c = * ( p + 1 )		696407	0					
ANR	696468	IdentifierDeclType	int		696407	0					
ANR	696469	Identifier	c		696407	1					
ANR	696470	AssignmentExpression	c = * ( p + 1 )		696407	2		=			
ANR	696471	Identifier	c		696407	0					
ANR	696472	UnaryOperationExpression	* ( p + 1 )		696407	1					
ANR	696473	UnaryOperator	*		696407	0					
ANR	696474	AdditiveExpression	p + 1		696407	1		+			
ANR	696475	Identifier	p		696407	0					
ANR	696476	PrimaryExpression	1		696407	1					
ANR	696477	IfStatement	if ( c >= 0x80 )		696407	1					
ANR	696478	Condition	c >= 0x80	239:10:6749:6757	696407	0	True				
ANR	696479	RelationalExpression	c >= 0x80		696407	0		>=			
ANR	696480	Identifier	c		696407	0					
ANR	696481	PrimaryExpression	0x80		696407	1					
ANR	696482	CompoundStatement		13:21:246:246	696407	1					
ANR	696483	IfStatement	if ( c <= ( UChar ) 0x9e )		696407	0					
ANR	696484	Condition	c <= ( UChar ) 0x9e	240:5:6767:6783	696407	0	True				
ANR	696485	RelationalExpression	c <= ( UChar ) 0x9e		696407	0		<=			
ANR	696486	Identifier	c		696407	0					
ANR	696487	CastExpression	( UChar ) 0x9e		696407	1					
ANR	696488	CastTarget	UChar		696407	0					
ANR	696489	PrimaryExpression	0x9e		696407	1					
ANR	696490	CompoundStatement		14:24:272:272	696407	1					
ANR	696491	IfStatement	if ( c == ( UChar ) 0x97 )		696407	0					
ANR	696492	Condition	c == ( UChar ) 0x97	241:7:6807:6823	696407	0	True				
ANR	696493	EqualityExpression	c == ( UChar ) 0x97		696407	0		==			
ANR	696494	Identifier	c		696407	0					
ANR	696495	CastExpression	( UChar ) 0x97		696407	1					
ANR	696496	CastTarget	UChar		696407	0					
ANR	696497	PrimaryExpression	0x97		696407	1					
ANR	696498	ReturnStatement	return FALSE ;	241:26:6826:6838	696407	1	True				
ANR	696499	Identifier	FALSE		696407	0					
ANR	696500	ReturnStatement	return TRUE ;	242:3:6843:6854	696407	1	True				
ANR	696501	Identifier	TRUE		696407	0					
ANR	696502	ElseStatement	else		696407	0					
ANR	696503	IfStatement	if ( c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe )		696407	0					
ANR	696504	Condition	c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe	244:10:6869:6906	696407	0	True				
ANR	696505	AndExpression	c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe		696407	0		&&			
ANR	696506	RelationalExpression	c >= ( UChar ) 0xa0		696407	0		>=			
ANR	696507	Identifier	c		696407	0					
ANR	696508	CastExpression	( UChar ) 0xa0		696407	1					
ANR	696509	CastTarget	UChar		696407	0					
ANR	696510	PrimaryExpression	0xa0		696407	1					
ANR	696511	RelationalExpression	c <= ( UChar ) 0xbe		696407	1		<=			
ANR	696512	Identifier	c		696407	0					
ANR	696513	CastExpression	( UChar ) 0xbe		696407	1					
ANR	696514	CastTarget	UChar		696407	0					
ANR	696515	PrimaryExpression	0xbe		696407	1					
ANR	696516	CompoundStatement		18:50:395:395	696407	1					
ANR	696517	IfStatement	if ( c == ( UChar ) '\\267' )		696407	0					
ANR	696518	Condition	c == ( UChar ) '\\267'	245:7:6930:6948	696407	0	True				
ANR	696519	EqualityExpression	c == ( UChar ) '\\267'		696407	0		==			
ANR	696520	Identifier	c		696407	0					
ANR	696521	CastExpression	( UChar ) '\\267'		696407	1					
ANR	696522	CastTarget	UChar		696407	0					
ANR	696523	PrimaryExpression	'\\267'		696407	1					
ANR	696524	ReturnStatement	return FALSE ;	245:28:6951:6963	696407	1	True				
ANR	696525	Identifier	FALSE		696407	0					
ANR	696526	ReturnStatement	return TRUE ;	246:3:6968:6979	696407	1	True				
ANR	696527	Identifier	TRUE		696407	0					
ANR	696528	ElseStatement	else		696407	0					
ANR	696529	IfStatement	if ( c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		696407	0					
ANR	696530	Condition	c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	248:17:7001:7089	696407	0	True				
ANR	696531	AndExpression	c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		696407	0		&&			
ANR	696532	EqualityExpression	c == ( UChar ) 0x9f		696407	0		==			
ANR	696533	Identifier	c		696407	0					
ANR	696534	CastExpression	( UChar ) 0x9f		696407	1					
ANR	696535	CastTarget	UChar		696407	0					
ANR	696536	PrimaryExpression	0x9f		696407	1					
ANR	696537	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		696407	1		!=			
ANR	696538	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		696407	0		&			
ANR	696539	Identifier	flag		696407	0					
ANR	696540	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		696407	1					
ANR	696541	PrimaryExpression	0		696407	1					
ANR	696542	CompoundStatement		23:70:578:578	696407	1					
ANR	696543	ReturnStatement	return TRUE ;	250:3:7097:7108	696407	0	True				
ANR	696544	Identifier	TRUE		696407	0					
ANR	696545	ReturnStatement	return FALSE ;	256:2:7141:7153	696407	2	True				
ANR	696546	Identifier	FALSE		696407	0					
ANR	696547	ReturnType	static int		696407	1					
ANR	696548	Identifier	is_mbc_ambiguous		696407	2					
ANR	696549	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		696407	3					
ANR	696550	Parameter	OnigCaseFoldType flag	226:17:6454:6474	696407	0	True				
ANR	696551	ParameterType	OnigCaseFoldType		696407	0					
ANR	696552	Identifier	flag		696407	1					
ANR	696553	Parameter	const UChar * * pp	226:40:6477:6492	696407	1	True				
ANR	696554	ParameterType	const UChar * *		696407	0					
ANR	696555	Identifier	pp		696407	1					
ANR	696556	Parameter	const UChar * end	226:58:6495:6510	696407	2	True				
ANR	696557	ParameterType	const UChar *		696407	0					
ANR	696558	Identifier	end		696407	1					
ANR	696559	CFGEntryNode	ENTRY		696407		True				
ANR	696560	CFGExitNode	EXIT		696407		True				
ANR	696561	Symbol	pp		696407						
ANR	696562	Symbol	flag		696407						
ANR	696563	Symbol	c		696407						
ANR	696564	Symbol	* pp		696407						
ANR	696565	Symbol	TRUE		696407						
ANR	696566	Symbol	ONIG_ENCODING_UTF8		696407						
ANR	696567	Symbol	* ( p + 1 )		696407						
ANR	696568	Symbol	enclen		696407						
ANR	696569	Symbol	p		696407						
ANR	696570	Symbol	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		696407						
ANR	696571	Symbol	end		696407						
ANR	696572	Symbol	* p		696407						
ANR	696573	Symbol	FALSE		696407						
ANR	696574	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		696407						
ANR	696575	Symbol	ONIGENC_IS_MBC_ASCII		696407						
ANR	696576	Function	get_ctype_code_range	261:0:7166:7354							
ANR	696577	FunctionDef	"get_ctype_code_range (OnigCtype ctype , OnigCodePoint * sb_out , const OnigCodePoint * ranges [ ])"		696576	0					
ANR	696578	CompoundStatement		264:0:7276:7354	696576	0					
ANR	696579	ExpressionStatement	* sb_out = 0x80	265:2:7280:7294	696576	0	True				
ANR	696580	AssignmentExpression	* sb_out = 0x80		696576	0		=			
ANR	696581	UnaryOperationExpression	* sb_out		696576	0					
ANR	696582	UnaryOperator	*		696576	0					
ANR	696583	Identifier	sb_out		696576	1					
ANR	696584	PrimaryExpression	0x80		696576	1					
ANR	696585	ReturnStatement	"return onigenc_unicode_ctype_code_range ( ctype , ranges ) ;"	266:2:7298:7352	696576	1	True				
ANR	696586	CallExpression	"onigenc_unicode_ctype_code_range ( ctype , ranges )"		696576	0					
ANR	696587	Callee	onigenc_unicode_ctype_code_range		696576	0					
ANR	696588	Identifier	onigenc_unicode_ctype_code_range		696576	0					
ANR	696589	ArgumentList	ctype		696576	1					
ANR	696590	Argument	ctype		696576	0					
ANR	696591	Identifier	ctype		696576	0					
ANR	696592	Argument	ranges		696576	1					
ANR	696593	Identifier	ranges		696576	0					
ANR	696594	ReturnType	static int		696576	1					
ANR	696595	Identifier	get_ctype_code_range		696576	2					
ANR	696596	ParameterList	"OnigCtype ctype , OnigCodePoint * sb_out , const OnigCodePoint * ranges [ ]"		696576	3					
ANR	696597	Parameter	OnigCtype ctype	262:21:7198:7212	696576	0	True				
ANR	696598	ParameterType	OnigCtype		696576	0					
ANR	696599	Identifier	ctype		696576	1					
ANR	696600	Parameter	OnigCodePoint * sb_out	262:38:7215:7235	696576	1	True				
ANR	696601	ParameterType	OnigCodePoint *		696576	0					
ANR	696602	Identifier	sb_out		696576	1					
ANR	696603	Parameter	const OnigCodePoint * ranges [ ]	263:7:7245:7273	696576	2	True				
ANR	696604	ParameterType	const OnigCodePoint * [ ]		696576	0					
ANR	696605	Identifier	ranges		696576	1					
ANR	696606	CFGEntryNode	ENTRY		696576		True				
ANR	696607	CFGExitNode	EXIT		696576		True				
ANR	696608	Symbol	sb_out		696576						
ANR	696609	Symbol	* sb_out		696576						
ANR	696610	Symbol	ctype		696576						
ANR	696611	Symbol	ranges		696576						
ANR	696612	Symbol	onigenc_unicode_ctype_code_range		696576						
ANR	696613	Function	left_adjust_char_head	270:0:7358:7564							
ANR	696614	FunctionDef	"left_adjust_char_head (const UChar * start , const UChar * s)"		696613	0					
ANR	696615	CompoundStatement		272:0:7430:7564	696613	0					
ANR	696616	IdentifierDeclStatement	const UChar * p ;	273:2:7434:7448	696613	0	True				
ANR	696617	IdentifierDecl	* p		696613	0					
ANR	696618	IdentifierDeclType	const UChar *		696613	0					
ANR	696619	Identifier	p		696613	1					
ANR	696620	IfStatement	if ( s <= start )		696613	1					
ANR	696621	Condition	s <= start	275:6:7457:7466	696613	0	True				
ANR	696622	RelationalExpression	s <= start		696613	0		<=			
ANR	696623	Identifier	s		696613	0					
ANR	696624	Identifier	start		696613	1					
ANR	696625	ReturnStatement	return ( UChar * ) s ;	275:18:7469:7486	696613	1	True				
ANR	696626	CastExpression	( UChar * ) s		696613	0					
ANR	696627	CastTarget	UChar *		696613	0					
ANR	696628	Identifier	s		696613	1					
ANR	696629	ExpressionStatement	p = s	276:2:7490:7495	696613	2	True				
ANR	696630	AssignmentExpression	p = s		696613	0		=			
ANR	696631	Identifier	p		696613	0					
ANR	696632	Identifier	s		696613	1					
ANR	696633	WhileStatement	while ( ! utf8_islead ( * p ) && p > start )		696613	3					
ANR	696634	Condition	! utf8_islead ( * p ) && p > start	278:9:7507:7535	696613	0	True				
ANR	696635	AndExpression	! utf8_islead ( * p ) && p > start		696613	0		&&			
ANR	696636	UnaryOperationExpression	! utf8_islead ( * p )		696613	0					
ANR	696637	UnaryOperator	!		696613	0					
ANR	696638	CallExpression	utf8_islead ( * p )		696613	1					
ANR	696639	Callee	utf8_islead		696613	0					
ANR	696640	Identifier	utf8_islead		696613	0					
ANR	696641	ArgumentList	* p		696613	1					
ANR	696642	Argument	* p		696613	0					
ANR	696643	UnaryOperationExpression	* p		696613	0					
ANR	696644	UnaryOperator	*		696613	0					
ANR	696645	Identifier	p		696613	1					
ANR	696646	RelationalExpression	p > start		696613	1		>			
ANR	696647	Identifier	p		696613	0					
ANR	696648	Identifier	start		696613	1					
ANR	696649	ExpressionStatement	p --	278:40:7538:7541	696613	1	True				
ANR	696650	PostIncDecOperationExpression	p --		696613	0					
ANR	696651	Identifier	p		696613	0					
ANR	696652	IncDec	--		696613	1					
ANR	696653	ReturnStatement	return ( UChar * ) p ;	279:2:7545:7562	696613	4	True				
ANR	696654	CastExpression	( UChar * ) p		696613	0					
ANR	696655	CastTarget	UChar *		696613	0					
ANR	696656	Identifier	p		696613	1					
ANR	696657	ReturnType	static UChar *		696613	1					
ANR	696658	Identifier	left_adjust_char_head		696613	2					
ANR	696659	ParameterList	"const UChar * start , const UChar * s"		696613	3					
ANR	696660	Parameter	const UChar * start	271:22:7394:7411	696613	0	True				
ANR	696661	ParameterType	const UChar *		696613	0					
ANR	696662	Identifier	start		696613	1					
ANR	696663	Parameter	const UChar * s	271:42:7414:7427	696613	1	True				
ANR	696664	ParameterType	const UChar *		696613	0					
ANR	696665	Identifier	s		696613	1					
ANR	696666	CFGEntryNode	ENTRY		696613		True				
ANR	696667	CFGExitNode	EXIT		696613		True				
ANR	696668	Symbol	p		696613						
ANR	696669	Symbol	s		696613						
ANR	696670	Symbol	utf8_islead		696613						
ANR	696671	Symbol	start		696613						
ANR	696672	Symbol	* p		696613						
ANR	696673	Function	get_case_fold_codes_by_str	282:0:7567:7810							
ANR	696674	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		696673	0					
ANR	696675	CompoundStatement		285:0:7704:7810	696673	0					
ANR	696676	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF8 , flag , p , end , items ) ;"	286:2:7708:7808	696673	0	True				
ANR	696677	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF8 , flag , p , end , items )"		696673	0					
ANR	696678	Callee	onigenc_unicode_get_case_fold_codes_by_str		696673	0					
ANR	696679	Identifier	onigenc_unicode_get_case_fold_codes_by_str		696673	0					
ANR	696680	ArgumentList	ONIG_ENCODING_UTF8		696673	1					
ANR	696681	Argument	ONIG_ENCODING_UTF8		696673	0					
ANR	696682	Identifier	ONIG_ENCODING_UTF8		696673	0					
ANR	696683	Argument	flag		696673	1					
ANR	696684	Identifier	flag		696673	0					
ANR	696685	Argument	p		696673	2					
ANR	696686	Identifier	p		696673	0					
ANR	696687	Argument	end		696673	3					
ANR	696688	Identifier	end		696673	0					
ANR	696689	Argument	items		696673	4					
ANR	696690	Identifier	items		696673	0					
ANR	696691	ReturnType	static int		696673	1					
ANR	696692	Identifier	get_case_fold_codes_by_str		696673	2					
ANR	696693	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		696673	3					
ANR	696694	Parameter	OnigCaseFoldType flag	283:27:7605:7625	696673	0	True				
ANR	696695	ParameterType	OnigCaseFoldType		696673	0					
ANR	696696	Identifier	flag		696673	1					
ANR	696697	Parameter	const OnigUChar * p	284:4:7632:7649	696673	1	True				
ANR	696698	ParameterType	const OnigUChar *		696673	0					
ANR	696699	Identifier	p		696673	1					
ANR	696700	Parameter	const OnigUChar * end	284:24:7652:7671	696673	2	True				
ANR	696701	ParameterType	const OnigUChar *		696673	0					
ANR	696702	Identifier	end		696673	1					
ANR	696703	Parameter	OnigCaseFoldCodeItem items [ ]	284:46:7674:7701	696673	3	True				
ANR	696704	ParameterType	OnigCaseFoldCodeItem [ ]		696673	0					
ANR	696705	Identifier	items		696673	1					
ANR	696706	CFGEntryNode	ENTRY		696673		True				
ANR	696707	CFGExitNode	EXIT		696673		True				
ANR	696708	Symbol	p		696673						
ANR	696709	Symbol	flag		696673						
ANR	696710	Symbol	onigenc_unicode_get_case_fold_codes_by_str		696673						
ANR	696711	Symbol	end		696673						
ANR	696712	Symbol	ONIG_ENCODING_UTF8		696673						
ANR	696713	Symbol	items		696673						
ANR	696714	DeclStmt									
ANR	696715	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF8
