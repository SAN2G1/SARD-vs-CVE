command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1108794	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativeTILEGX_64.c								
ANR	1108795	DeclStmt									
ANR	1108796	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 6 ]	reg_map
ANR	1108797	Function	sljit_get_platform_name	109:0:3659:3766							
ANR	1108798	FunctionDef	sljit_get_platform_name ()		1108797	0					
ANR	1108799	CompoundStatement		110:0:3732:3766	1108797	0					
ANR	1108800	Statement	return	111:1:3735:3740	1108797	0	True				
ANR	1108801	Statement	"""TileGX"""	111:8:3742:3749	1108797	1	True				
ANR	1108802	ExpressionStatement	SLJIT_CPUINFO	111:17:3751:3764	1108797	2	True				
ANR	1108803	Identifier	SLJIT_CPUINFO		1108797	0					
ANR	1108804	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1108797	1					
ANR	1108805	Identifier	sljit_get_platform_name		1108797	2					
ANR	1108806	ParameterList			1108797	3					
ANR	1108807	CFGEntryNode	ENTRY		1108797		True				
ANR	1108808	CFGExitNode	EXIT		1108797		True				
ANR	1108809	DeclStmt									
ANR	1108810	Decl							sljit_uw	sljit_uw	sljit_ins
ANR	1108811	ClassDef	jit_instr	117:0:3834:4013							
ANR	1108812	DeclStmt									
ANR	1108813	Decl							const struct tilegx_opcode	const struct tilegx_opcode *	opcode
ANR	1108814	DeclStmt									
ANR	1108815	Decl							tilegx_pipeline	tilegx_pipeline	pipe
ANR	1108816	DeclStmt									
ANR	1108817	Decl							unsigned long	unsigned long	input_registers
ANR	1108818	DeclStmt									
ANR	1108819	Decl							unsigned long	unsigned long	output_registers
ANR	1108820	DeclStmt									
ANR	1108821	Decl							int	int [ 4 ]	operand_value
ANR	1108822	DeclStmt									
ANR	1108823	Decl							int	int	line
ANR	1108824	DeclStmt									
ANR	1108825	Decl							SLJIT_CONST tilegx_mnemonic	SLJIT_CONST tilegx_mnemonic [ 16 ]	data_transfer_insts
ANR	1108826	Function	push_inst_debug	330:0:11508:11801							
ANR	1108827	FunctionDef	"push_inst_debug (struct sljit_compiler * compiler , sljit_ins ins , int line)"		1108826	0					
ANR	1108828	CompoundStatement		331:0:11598:11801	1108826	0					
ANR	1108829	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	332:1:11601:11670	1108826	0	True				
ANR	1108830	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108826	0					
ANR	1108831	IdentifierDeclType	sljit_ins *		1108826	0					
ANR	1108832	Identifier	ptr		1108826	1					
ANR	1108833	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108826	2		=			
ANR	1108834	Identifier	ptr		1108826	0					
ANR	1108835	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108826	1					
ANR	1108836	CastTarget	sljit_ins *		1108826	0					
ANR	1108837	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108826	1					
ANR	1108838	Callee	ensure_buf		1108826	0					
ANR	1108839	Identifier	ensure_buf		1108826	0					
ANR	1108840	ArgumentList	compiler		1108826	1					
ANR	1108841	Argument	compiler		1108826	0					
ANR	1108842	Identifier	compiler		1108826	0					
ANR	1108843	Argument	sizeof ( sljit_ins )		1108826	1					
ANR	1108844	SizeofExpression	sizeof ( sljit_ins )		1108826	0					
ANR	1108845	Sizeof	sizeof		1108826	0					
ANR	1108846	SizeofOperand	sljit_ins		1108826	1					
ANR	1108847	ExpressionStatement	FAIL_IF ( ! ptr )	333:1:11673:11686	1108826	1	True				
ANR	1108848	CallExpression	FAIL_IF ( ! ptr )		1108826	0					
ANR	1108849	Callee	FAIL_IF		1108826	0					
ANR	1108850	Identifier	FAIL_IF		1108826	0					
ANR	1108851	ArgumentList	! ptr		1108826	1					
ANR	1108852	Argument	! ptr		1108826	0					
ANR	1108853	UnaryOperationExpression	! ptr		1108826	0					
ANR	1108854	UnaryOperator	!		1108826	0					
ANR	1108855	Identifier	ptr		1108826	1					
ANR	1108856	ExpressionStatement	* ptr = ins	334:1:11689:11699	1108826	2	True				
ANR	1108857	AssignmentExpression	* ptr = ins		1108826	0		=			
ANR	1108858	UnaryOperationExpression	* ptr		1108826	0					
ANR	1108859	UnaryOperator	*		1108826	0					
ANR	1108860	Identifier	ptr		1108826	1					
ANR	1108861	Identifier	ins		1108826	1					
ANR	1108862	ExpressionStatement	compiler -> size ++	335:1:11702:11718	1108826	3	True				
ANR	1108863	PostIncDecOperationExpression	compiler -> size ++		1108826	0					
ANR	1108864	PtrMemberAccess	compiler -> size		1108826	0					
ANR	1108865	Identifier	compiler		1108826	0					
ANR	1108866	Identifier	size		1108826	1					
ANR	1108867	IncDec	++		1108826	1					
ANR	1108868	ExpressionStatement	"printf ( ""|%04d|S0|:\\t\\t"" , line )"	336:1:11721:11751	1108826	4	True				
ANR	1108869	CallExpression	"printf ( ""|%04d|S0|:\\t\\t"" , line )"		1108826	0					
ANR	1108870	Callee	printf		1108826	0					
ANR	1108871	Identifier	printf		1108826	0					
ANR	1108872	ArgumentList	"""|%04d|S0|:\\t\\t"""		1108826	1					
ANR	1108873	Argument	"""|%04d|S0|:\\t\\t"""		1108826	0					
ANR	1108874	PrimaryExpression	"""|%04d|S0|:\\t\\t"""		1108826	0					
ANR	1108875	Argument	line		1108826	1					
ANR	1108876	Identifier	line		1108826	0					
ANR	1108877	ExpressionStatement	print_insn_tilegx ( ptr )	337:1:11754:11776	1108826	5	True				
ANR	1108878	CallExpression	print_insn_tilegx ( ptr )		1108826	0					
ANR	1108879	Callee	print_insn_tilegx		1108826	0					
ANR	1108880	Identifier	print_insn_tilegx		1108826	0					
ANR	1108881	ArgumentList	ptr		1108826	1					
ANR	1108882	Argument	ptr		1108826	0					
ANR	1108883	Identifier	ptr		1108826	0					
ANR	1108884	ReturnStatement	return SLJIT_SUCCESS ;	338:1:11779:11799	1108826	6	True				
ANR	1108885	Identifier	SLJIT_SUCCESS		1108826	0					
ANR	1108886	ReturnType	static sljit_si		1108826	1					
ANR	1108887	Identifier	push_inst_debug		1108826	2					
ANR	1108888	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins , int line"		1108826	3					
ANR	1108889	Parameter	struct sljit_compiler * compiler	330:32:11540:11570	1108826	0	True				
ANR	1108890	ParameterType	struct sljit_compiler *		1108826	0					
ANR	1108891	Identifier	compiler		1108826	1					
ANR	1108892	Parameter	sljit_ins ins	330:65:11573:11585	1108826	1	True				
ANR	1108893	ParameterType	sljit_ins		1108826	0					
ANR	1108894	Identifier	ins		1108826	1					
ANR	1108895	Parameter	int line	330:80:11588:11595	1108826	2	True				
ANR	1108896	ParameterType	int		1108826	0					
ANR	1108897	Identifier	line		1108826	1					
ANR	1108898	CFGEntryNode	ENTRY		1108826		True				
ANR	1108899	CFGExitNode	EXIT		1108826		True				
ANR	1108900	Symbol	compiler -> size		1108826						
ANR	1108901	Symbol	line		1108826						
ANR	1108902	Symbol	ensure_buf		1108826						
ANR	1108903	Symbol	* ptr		1108826						
ANR	1108904	Symbol	SLJIT_SUCCESS		1108826						
ANR	1108905	Symbol	* compiler		1108826						
ANR	1108906	Symbol	compiler		1108826						
ANR	1108907	Symbol	ins		1108826						
ANR	1108908	Symbol	ptr		1108826						
ANR	1108909	Function	push_inst_nodebug	341:0:11804:12031							
ANR	1108910	FunctionDef	"push_inst_nodebug (struct sljit_compiler * compiler , sljit_ins ins)"		1108909	0					
ANR	1108911	CompoundStatement		342:0:11886:12031	1108909	0					
ANR	1108912	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	343:1:11889:11958	1108909	0	True				
ANR	1108913	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108909	0					
ANR	1108914	IdentifierDeclType	sljit_ins *		1108909	0					
ANR	1108915	Identifier	ptr		1108909	1					
ANR	1108916	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108909	2		=			
ANR	1108917	Identifier	ptr		1108909	0					
ANR	1108918	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108909	1					
ANR	1108919	CastTarget	sljit_ins *		1108909	0					
ANR	1108920	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108909	1					
ANR	1108921	Callee	ensure_buf		1108909	0					
ANR	1108922	Identifier	ensure_buf		1108909	0					
ANR	1108923	ArgumentList	compiler		1108909	1					
ANR	1108924	Argument	compiler		1108909	0					
ANR	1108925	Identifier	compiler		1108909	0					
ANR	1108926	Argument	sizeof ( sljit_ins )		1108909	1					
ANR	1108927	SizeofExpression	sizeof ( sljit_ins )		1108909	0					
ANR	1108928	Sizeof	sizeof		1108909	0					
ANR	1108929	SizeofOperand	sljit_ins		1108909	1					
ANR	1108930	ExpressionStatement	FAIL_IF ( ! ptr )	344:1:11961:11974	1108909	1	True				
ANR	1108931	CallExpression	FAIL_IF ( ! ptr )		1108909	0					
ANR	1108932	Callee	FAIL_IF		1108909	0					
ANR	1108933	Identifier	FAIL_IF		1108909	0					
ANR	1108934	ArgumentList	! ptr		1108909	1					
ANR	1108935	Argument	! ptr		1108909	0					
ANR	1108936	UnaryOperationExpression	! ptr		1108909	0					
ANR	1108937	UnaryOperator	!		1108909	0					
ANR	1108938	Identifier	ptr		1108909	1					
ANR	1108939	ExpressionStatement	* ptr = ins	345:1:11977:11987	1108909	2	True				
ANR	1108940	AssignmentExpression	* ptr = ins		1108909	0		=			
ANR	1108941	UnaryOperationExpression	* ptr		1108909	0					
ANR	1108942	UnaryOperator	*		1108909	0					
ANR	1108943	Identifier	ptr		1108909	1					
ANR	1108944	Identifier	ins		1108909	1					
ANR	1108945	ExpressionStatement	compiler -> size ++	346:1:11990:12006	1108909	3	True				
ANR	1108946	PostIncDecOperationExpression	compiler -> size ++		1108909	0					
ANR	1108947	PtrMemberAccess	compiler -> size		1108909	0					
ANR	1108948	Identifier	compiler		1108909	0					
ANR	1108949	Identifier	size		1108909	1					
ANR	1108950	IncDec	++		1108909	1					
ANR	1108951	ReturnStatement	return SLJIT_SUCCESS ;	347:1:12009:12029	1108909	4	True				
ANR	1108952	Identifier	SLJIT_SUCCESS		1108909	0					
ANR	1108953	ReturnType	static sljit_si		1108909	1					
ANR	1108954	Identifier	push_inst_nodebug		1108909	2					
ANR	1108955	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins"		1108909	3					
ANR	1108956	Parameter	struct sljit_compiler * compiler	341:34:11838:11868	1108909	0	True				
ANR	1108957	ParameterType	struct sljit_compiler *		1108909	0					
ANR	1108958	Identifier	compiler		1108909	1					
ANR	1108959	Parameter	sljit_ins ins	341:67:11871:11883	1108909	1	True				
ANR	1108960	ParameterType	sljit_ins		1108909	0					
ANR	1108961	Identifier	ins		1108909	1					
ANR	1108962	CFGEntryNode	ENTRY		1108909		True				
ANR	1108963	CFGExitNode	EXIT		1108909		True				
ANR	1108964	Symbol	compiler -> size		1108909						
ANR	1108965	Symbol	ensure_buf		1108909						
ANR	1108966	Symbol	* ptr		1108909						
ANR	1108967	Symbol	SLJIT_SUCCESS		1108909						
ANR	1108968	Symbol	* compiler		1108909						
ANR	1108969	Symbol	compiler		1108909						
ANR	1108970	Symbol	ins		1108909						
ANR	1108971	Symbol	ptr		1108909						
ANR	1108972	Function	push_inst	352:0:12096:12315							
ANR	1108973	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_ins ins)"		1108972	0					
ANR	1108974	CompoundStatement		353:0:12170:12315	1108972	0					
ANR	1108975	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	354:1:12173:12242	1108972	0	True				
ANR	1108976	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108972	0					
ANR	1108977	IdentifierDeclType	sljit_ins *		1108972	0					
ANR	1108978	Identifier	ptr		1108972	1					
ANR	1108979	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108972	2		=			
ANR	1108980	Identifier	ptr		1108972	0					
ANR	1108981	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108972	1					
ANR	1108982	CastTarget	sljit_ins *		1108972	0					
ANR	1108983	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1108972	1					
ANR	1108984	Callee	ensure_buf		1108972	0					
ANR	1108985	Identifier	ensure_buf		1108972	0					
ANR	1108986	ArgumentList	compiler		1108972	1					
ANR	1108987	Argument	compiler		1108972	0					
ANR	1108988	Identifier	compiler		1108972	0					
ANR	1108989	Argument	sizeof ( sljit_ins )		1108972	1					
ANR	1108990	SizeofExpression	sizeof ( sljit_ins )		1108972	0					
ANR	1108991	Sizeof	sizeof		1108972	0					
ANR	1108992	SizeofOperand	sljit_ins		1108972	1					
ANR	1108993	ExpressionStatement	FAIL_IF ( ! ptr )	355:1:12245:12258	1108972	1	True				
ANR	1108994	CallExpression	FAIL_IF ( ! ptr )		1108972	0					
ANR	1108995	Callee	FAIL_IF		1108972	0					
ANR	1108996	Identifier	FAIL_IF		1108972	0					
ANR	1108997	ArgumentList	! ptr		1108972	1					
ANR	1108998	Argument	! ptr		1108972	0					
ANR	1108999	UnaryOperationExpression	! ptr		1108972	0					
ANR	1109000	UnaryOperator	!		1108972	0					
ANR	1109001	Identifier	ptr		1108972	1					
ANR	1109002	ExpressionStatement	* ptr = ins	356:1:12261:12271	1108972	2	True				
ANR	1109003	AssignmentExpression	* ptr = ins		1108972	0		=			
ANR	1109004	UnaryOperationExpression	* ptr		1108972	0					
ANR	1109005	UnaryOperator	*		1108972	0					
ANR	1109006	Identifier	ptr		1108972	1					
ANR	1109007	Identifier	ins		1108972	1					
ANR	1109008	ExpressionStatement	compiler -> size ++	357:1:12274:12290	1108972	3	True				
ANR	1109009	PostIncDecOperationExpression	compiler -> size ++		1108972	0					
ANR	1109010	PtrMemberAccess	compiler -> size		1108972	0					
ANR	1109011	Identifier	compiler		1108972	0					
ANR	1109012	Identifier	size		1108972	1					
ANR	1109013	IncDec	++		1108972	1					
ANR	1109014	ReturnStatement	return SLJIT_SUCCESS ;	358:1:12293:12313	1108972	4	True				
ANR	1109015	Identifier	SLJIT_SUCCESS		1108972	0					
ANR	1109016	ReturnType	static sljit_si		1108972	1					
ANR	1109017	Identifier	push_inst		1108972	2					
ANR	1109018	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins"		1108972	3					
ANR	1109019	Parameter	struct sljit_compiler * compiler	352:26:12122:12152	1108972	0	True				
ANR	1109020	ParameterType	struct sljit_compiler *		1108972	0					
ANR	1109021	Identifier	compiler		1108972	1					
ANR	1109022	Parameter	sljit_ins ins	352:59:12155:12167	1108972	1	True				
ANR	1109023	ParameterType	sljit_ins		1108972	0					
ANR	1109024	Identifier	ins		1108972	1					
ANR	1109025	CFGEntryNode	ENTRY		1108972		True				
ANR	1109026	CFGExitNode	EXIT		1108972		True				
ANR	1109027	Symbol	compiler -> size		1108972						
ANR	1109028	Symbol	ensure_buf		1108972						
ANR	1109029	Symbol	* ptr		1108972						
ANR	1109030	Symbol	SLJIT_SUCCESS		1108972						
ANR	1109031	Symbol	* compiler		1108972						
ANR	1109032	Symbol	compiler		1108972						
ANR	1109033	Symbol	ins		1108972						
ANR	1109034	Symbol	ptr		1108972						
ANR	1109035	ClassDef	Format	481:0:16132:16329							
ANR	1109036	DeclStmt									
ANR	1109037	Decl							tilegx_pipeline	tilegx_pipeline [ TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE ]	pipe
ANR	1109038	DeclStmt									
ANR	1109039	Decl							unsigned int	unsigned int	pipe_mask
ANR	1109040	DeclStmt									
ANR	1109041	Decl							const struct Format	const struct Format [ ]	formats
ANR	1109042	DeclStmt									
ANR	1109043	Decl							struct jit_instr	struct jit_instr [ TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE ]	inst_buf
ANR	1109044	DeclStmt									
ANR	1109045	Decl							unsigned long	unsigned long	inst_buf_index
ANR	1109046	Function	get_any_valid_pipe	515:0:17546:17816							
ANR	1109047	FunctionDef	get_any_valid_pipe (const struct tilegx_opcode * opcode)		1109046	0					
ANR	1109048	CompoundStatement		516:0:17617:17816	1109046	0					
ANR	1109049	IdentifierDeclStatement	int pipe ;	518:1:17667:17675	1109046	0	True				
ANR	1109050	IdentifierDecl	pipe		1109046	0					
ANR	1109051	IdentifierDeclType	int		1109046	0					
ANR	1109052	Identifier	pipe		1109046	1					
ANR	1109053	ForStatement	for ( pipe = 0 ; ( ( opcode -> pipes & ( 1 << pipe ) ) == 0 && pipe < TILEGX_NUM_PIPELINE_ENCODINGS ) ; pipe ++ )		1109046	1					
ANR	1109054	ForInit	pipe = 0 ;	519:6:17683:17691	1109046	0	True				
ANR	1109055	AssignmentExpression	pipe = 0		1109046	0		=			
ANR	1109056	Identifier	pipe		1109046	0					
ANR	1109057	PrimaryExpression	0		1109046	1					
ANR	1109058	Condition	( opcode -> pipes & ( 1 << pipe ) ) == 0 && pipe < TILEGX_NUM_PIPELINE_ENCODINGS	519:16:17693:17768	1109046	1	True				
ANR	1109059	AndExpression	( opcode -> pipes & ( 1 << pipe ) ) == 0 && pipe < TILEGX_NUM_PIPELINE_ENCODINGS		1109046	0		&&			
ANR	1109060	EqualityExpression	( opcode -> pipes & ( 1 << pipe ) ) == 0		1109046	0		==			
ANR	1109061	BitAndExpression	opcode -> pipes & ( 1 << pipe )		1109046	0		&			
ANR	1109062	PtrMemberAccess	opcode -> pipes		1109046	0					
ANR	1109063	Identifier	opcode		1109046	0					
ANR	1109064	Identifier	pipes		1109046	1					
ANR	1109065	ShiftExpression	1 << pipe		1109046	1		<<			
ANR	1109066	PrimaryExpression	1		1109046	0					
ANR	1109067	Identifier	pipe		1109046	1					
ANR	1109068	PrimaryExpression	0		1109046	1					
ANR	1109069	RelationalExpression	pipe < TILEGX_NUM_PIPELINE_ENCODINGS		1109046	1		<			
ANR	1109070	Identifier	pipe		1109046	0					
ANR	1109071	Identifier	TILEGX_NUM_PIPELINE_ENCODINGS		1109046	1					
ANR	1109072	PostIncDecOperationExpression	pipe ++	519:94:17771:17776	1109046	2	True				
ANR	1109073	Identifier	pipe		1109046	0					
ANR	1109074	IncDec	++		1109046	1					
ANR	1109075	ExpressionStatement		520:2:17781:17781	1109046	3	True				
ANR	1109076	ReturnStatement	return ( tilegx_pipeline ) ( pipe ) ;	521:1:17784:17814	1109046	2	True				
ANR	1109077	CastExpression	( tilegx_pipeline ) ( pipe )		1109046	0					
ANR	1109078	CastTarget	tilegx_pipeline		1109046	0					
ANR	1109079	Identifier	pipe		1109046	1					
ANR	1109080	ReturnType	tilegx_pipeline		1109046	1					
ANR	1109081	Identifier	get_any_valid_pipe		1109046	2					
ANR	1109082	ParameterList	const struct tilegx_opcode * opcode		1109046	3					
ANR	1109083	Parameter	const struct tilegx_opcode * opcode	515:35:17581:17614	1109046	0	True				
ANR	1109084	ParameterType	const struct tilegx_opcode *		1109046	0					
ANR	1109085	Identifier	opcode		1109046	1					
ANR	1109086	CFGEntryNode	ENTRY		1109046		True				
ANR	1109087	CFGExitNode	EXIT		1109046		True				
ANR	1109088	Symbol	opcode -> pipes		1109046						
ANR	1109089	Symbol	TILEGX_NUM_PIPELINE_ENCODINGS		1109046						
ANR	1109090	Symbol	pipe		1109046						
ANR	1109091	Symbol	opcode		1109046						
ANR	1109092	Symbol	* opcode		1109046						
ANR	1109093	Function	insert_nop	524:0:17819:18213							
ANR	1109094	FunctionDef	"insert_nop (tilegx_mnemonic opc , int line)"		1109093	0					
ANR	1109095	CompoundStatement		525:0:17866:18213	1109093	0					
ANR	1109096	IdentifierDeclStatement	const struct tilegx_opcode * opcode = NULL ;	526:1:17869:17910	1109093	0	True				
ANR	1109097	IdentifierDecl	* opcode = NULL		1109093	0					
ANR	1109098	IdentifierDeclType	const struct tilegx_opcode *		1109093	0					
ANR	1109099	Identifier	opcode		1109093	1					
ANR	1109100	AssignmentExpression	* opcode = NULL		1109093	2		=			
ANR	1109101	Identifier	NULL		1109093	0					
ANR	1109102	Identifier	NULL		1109093	1					
ANR	1109103	ExpressionStatement	"memmove ( & inst_buf [ 1 ] , & inst_buf [ 0 ] , inst_buf_index * sizeof inst_buf [ 0 ] )"	528:1:17914:17986	1109093	1	True				
ANR	1109104	CallExpression	"memmove ( & inst_buf [ 1 ] , & inst_buf [ 0 ] , inst_buf_index * sizeof inst_buf [ 0 ] )"		1109093	0					
ANR	1109105	Callee	memmove		1109093	0					
ANR	1109106	Identifier	memmove		1109093	0					
ANR	1109107	ArgumentList	& inst_buf [ 1 ]		1109093	1					
ANR	1109108	Argument	& inst_buf [ 1 ]		1109093	0					
ANR	1109109	UnaryOperationExpression	& inst_buf [ 1 ]		1109093	0					
ANR	1109110	UnaryOperator	&		1109093	0					
ANR	1109111	ArrayIndexing	inst_buf [ 1 ]		1109093	1					
ANR	1109112	Identifier	inst_buf		1109093	0					
ANR	1109113	PrimaryExpression	1		1109093	1					
ANR	1109114	Argument	& inst_buf [ 0 ]		1109093	1					
ANR	1109115	UnaryOperationExpression	& inst_buf [ 0 ]		1109093	0					
ANR	1109116	UnaryOperator	&		1109093	0					
ANR	1109117	ArrayIndexing	inst_buf [ 0 ]		1109093	1					
ANR	1109118	Identifier	inst_buf		1109093	0					
ANR	1109119	PrimaryExpression	0		1109093	1					
ANR	1109120	Argument	inst_buf_index * sizeof inst_buf [ 0 ]		1109093	2					
ANR	1109121	MultiplicativeExpression	inst_buf_index * sizeof inst_buf [ 0 ]		1109093	0		*			
ANR	1109122	Identifier	inst_buf_index		1109093	0					
ANR	1109123	SizeofExpression	sizeof inst_buf [ 0 ]		1109093	1					
ANR	1109124	Sizeof	sizeof		1109093	0					
ANR	1109125	ArrayIndexing	inst_buf [ 0 ]		1109093	1					
ANR	1109126	Identifier	inst_buf		1109093	0					
ANR	1109127	PrimaryExpression	0		1109093	1					
ANR	1109128	ExpressionStatement	opcode = & tilegx_opcodes [ opc ]	530:1:17990:18019	1109093	2	True				
ANR	1109129	AssignmentExpression	opcode = & tilegx_opcodes [ opc ]		1109093	0		=			
ANR	1109130	Identifier	opcode		1109093	0					
ANR	1109131	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1109093	1					
ANR	1109132	UnaryOperator	&		1109093	0					
ANR	1109133	ArrayIndexing	tilegx_opcodes [ opc ]		1109093	1					
ANR	1109134	Identifier	tilegx_opcodes		1109093	0					
ANR	1109135	Identifier	opc		1109093	1					
ANR	1109136	ExpressionStatement	inst_buf [ 0 ] . opcode = opcode	531:1:18022:18049	1109093	3	True				
ANR	1109137	AssignmentExpression	inst_buf [ 0 ] . opcode = opcode		1109093	0		=			
ANR	1109138	MemberAccess	inst_buf [ 0 ] . opcode		1109093	0					
ANR	1109139	ArrayIndexing	inst_buf [ 0 ]		1109093	0					
ANR	1109140	Identifier	inst_buf		1109093	0					
ANR	1109141	PrimaryExpression	0		1109093	1					
ANR	1109142	Identifier	opcode		1109093	1					
ANR	1109143	Identifier	opcode		1109093	1					
ANR	1109144	ExpressionStatement	inst_buf [ 0 ] . pipe = get_any_valid_pipe ( opcode )	532:1:18052:18097	1109093	4	True				
ANR	1109145	AssignmentExpression	inst_buf [ 0 ] . pipe = get_any_valid_pipe ( opcode )		1109093	0		=			
ANR	1109146	MemberAccess	inst_buf [ 0 ] . pipe		1109093	0					
ANR	1109147	ArrayIndexing	inst_buf [ 0 ]		1109093	0					
ANR	1109148	Identifier	inst_buf		1109093	0					
ANR	1109149	PrimaryExpression	0		1109093	1					
ANR	1109150	Identifier	pipe		1109093	1					
ANR	1109151	CallExpression	get_any_valid_pipe ( opcode )		1109093	1					
ANR	1109152	Callee	get_any_valid_pipe		1109093	0					
ANR	1109153	Identifier	get_any_valid_pipe		1109093	0					
ANR	1109154	ArgumentList	opcode		1109093	1					
ANR	1109155	Argument	opcode		1109093	0					
ANR	1109156	Identifier	opcode		1109093	0					
ANR	1109157	ExpressionStatement	inst_buf [ 0 ] . input_registers = 0	533:1:18100:18131	1109093	5	True				
ANR	1109158	AssignmentExpression	inst_buf [ 0 ] . input_registers = 0		1109093	0		=			
ANR	1109159	MemberAccess	inst_buf [ 0 ] . input_registers		1109093	0					
ANR	1109160	ArrayIndexing	inst_buf [ 0 ]		1109093	0					
ANR	1109161	Identifier	inst_buf		1109093	0					
ANR	1109162	PrimaryExpression	0		1109093	1					
ANR	1109163	Identifier	input_registers		1109093	1					
ANR	1109164	PrimaryExpression	0		1109093	1					
ANR	1109165	ExpressionStatement	inst_buf [ 0 ] . output_registers = 0	534:1:18134:18166	1109093	6	True				
ANR	1109166	AssignmentExpression	inst_buf [ 0 ] . output_registers = 0		1109093	0		=			
ANR	1109167	MemberAccess	inst_buf [ 0 ] . output_registers		1109093	0					
ANR	1109168	ArrayIndexing	inst_buf [ 0 ]		1109093	0					
ANR	1109169	Identifier	inst_buf		1109093	0					
ANR	1109170	PrimaryExpression	0		1109093	1					
ANR	1109171	Identifier	output_registers		1109093	1					
ANR	1109172	PrimaryExpression	0		1109093	1					
ANR	1109173	ExpressionStatement	inst_buf [ 0 ] . line = line	535:1:18169:18192	1109093	7	True				
ANR	1109174	AssignmentExpression	inst_buf [ 0 ] . line = line		1109093	0		=			
ANR	1109175	MemberAccess	inst_buf [ 0 ] . line		1109093	0					
ANR	1109176	ArrayIndexing	inst_buf [ 0 ]		1109093	0					
ANR	1109177	Identifier	inst_buf		1109093	0					
ANR	1109178	PrimaryExpression	0		1109093	1					
ANR	1109179	Identifier	line		1109093	1					
ANR	1109180	Identifier	line		1109093	1					
ANR	1109181	ExpressionStatement	++ inst_buf_index	536:1:18195:18211	1109093	8	True				
ANR	1109182	UnaryExpression	++ inst_buf_index		1109093	0					
ANR	1109183	IncDec	++		1109093	0					
ANR	1109184	Identifier	inst_buf_index		1109093	1					
ANR	1109185	ReturnType	void		1109093	1					
ANR	1109186	Identifier	insert_nop		1109093	2					
ANR	1109187	ParameterList	"tilegx_mnemonic opc , int line"		1109093	3					
ANR	1109188	Parameter	tilegx_mnemonic opc	524:16:17835:17853	1109093	0	True				
ANR	1109189	ParameterType	tilegx_mnemonic		1109093	0					
ANR	1109190	Identifier	opc		1109093	1					
ANR	1109191	Parameter	int line	524:37:17856:17863	1109093	1	True				
ANR	1109192	ParameterType	int		1109093	0					
ANR	1109193	Identifier	line		1109093	1					
ANR	1109194	CFGEntryNode	ENTRY		1109093		True				
ANR	1109195	CFGExitNode	EXIT		1109093		True				
ANR	1109196	Symbol	opc		1109093						
ANR	1109197	Symbol	NULL		1109093						
ANR	1109198	Symbol	line		1109093						
ANR	1109199	Symbol	opcode		1109093						
ANR	1109200	Symbol	inst_buf [ 0 ] . opcode		1109093						
ANR	1109201	Symbol	inst_buf [ 0 ] . line		1109093						
ANR	1109202	Symbol	inst_buf		1109093						
ANR	1109203	Symbol	inst_buf_index		1109093						
ANR	1109204	Symbol	inst_buf [ 0 ] . pipe		1109093						
ANR	1109205	Symbol	inst_buf [ 0 ] . output_registers		1109093						
ANR	1109206	Symbol	tilegx_opcodes		1109093						
ANR	1109207	Symbol	inst_buf [ 0 ] . input_registers		1109093						
ANR	1109208	Symbol	get_any_valid_pipe		1109093						
ANR	1109209	Symbol	* inst_buf		1109093						
ANR	1109210	Function	compute_format	539:0:18216:18713							
ANR	1109211	FunctionDef	compute_format ()		1109210	0					
ANR	1109212	CompoundStatement		540:0:18254:18713	1109210	0					
ANR	1109213	IdentifierDeclStatement	"unsigned int compatible_pipes = BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) ) ;"	541:1:18257:18440	1109210	0	True				
ANR	1109214	IdentifierDecl	"compatible_pipes = BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) )"		1109210	0					
ANR	1109215	IdentifierDeclType	unsigned int		1109210	0					
ANR	1109216	Identifier	compatible_pipes		1109210	1					
ANR	1109217	AssignmentExpression	"compatible_pipes = BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) )"		1109210	2		=			
ANR	1109218	Identifier	compatible_pipes		1109210	0					
ANR	1109219	CallExpression	"BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) )"		1109210	1					
ANR	1109220	Callee	BUNDLE_FORMAT_MASK		1109210	0					
ANR	1109221	Identifier	BUNDLE_FORMAT_MASK		1109210	0					
ANR	1109222	ArgumentList	inst_buf [ 0 ] . opcode -> pipes		1109210	1					
ANR	1109223	Argument	inst_buf [ 0 ] . opcode -> pipes		1109210	0					
ANR	1109224	PtrMemberAccess	inst_buf [ 0 ] . opcode -> pipes		1109210	0					
ANR	1109225	MemberAccess	inst_buf [ 0 ] . opcode		1109210	0					
ANR	1109226	ArrayIndexing	inst_buf [ 0 ]		1109210	0					
ANR	1109227	Identifier	inst_buf		1109210	0					
ANR	1109228	PrimaryExpression	0		1109210	1					
ANR	1109229	Identifier	opcode		1109210	1					
ANR	1109230	Identifier	pipes		1109210	1					
ANR	1109231	Argument	inst_buf [ 1 ] . opcode -> pipes		1109210	1					
ANR	1109232	PtrMemberAccess	inst_buf [ 1 ] . opcode -> pipes		1109210	0					
ANR	1109233	MemberAccess	inst_buf [ 1 ] . opcode		1109210	0					
ANR	1109234	ArrayIndexing	inst_buf [ 1 ]		1109210	0					
ANR	1109235	Identifier	inst_buf		1109210	0					
ANR	1109236	PrimaryExpression	1		1109210	1					
ANR	1109237	Identifier	opcode		1109210	1					
ANR	1109238	Identifier	pipes		1109210	1					
ANR	1109239	Argument	inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE )		1109210	2					
ANR	1109240	ConditionalExpression	inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE )		1109210	0					
ANR	1109241	Condition	inst_buf_index == 3		1109210	0					
ANR	1109242	EqualityExpression	inst_buf_index == 3		1109210	0		==			
ANR	1109243	Identifier	inst_buf_index		1109210	0					
ANR	1109244	PrimaryExpression	3		1109210	1					
ANR	1109245	PtrMemberAccess	inst_buf [ 2 ] . opcode -> pipes		1109210	1					
ANR	1109246	MemberAccess	inst_buf [ 2 ] . opcode		1109210	0					
ANR	1109247	ArrayIndexing	inst_buf [ 2 ]		1109210	0					
ANR	1109248	Identifier	inst_buf		1109210	0					
ANR	1109249	PrimaryExpression	2		1109210	1					
ANR	1109250	Identifier	opcode		1109210	1					
ANR	1109251	Identifier	pipes		1109210	1					
ANR	1109252	ShiftExpression	1 << NO_PIPELINE		1109210	2		<<			
ANR	1109253	PrimaryExpression	1		1109210	0					
ANR	1109254	Identifier	NO_PIPELINE		1109210	1					
ANR	1109255	IdentifierDeclStatement	const struct Format * match = NULL ;	546:1:18444:18477	1109210	1	True				
ANR	1109256	IdentifierDecl	* match = NULL		1109210	0					
ANR	1109257	IdentifierDeclType	const struct Format *		1109210	0					
ANR	1109258	Identifier	match		1109210	1					
ANR	1109259	AssignmentExpression	* match = NULL		1109210	2		=			
ANR	1109260	Identifier	NULL		1109210	0					
ANR	1109261	Identifier	NULL		1109210	1					
ANR	1109262	IdentifierDeclStatement	const struct Format * b = NULL ;	547:1:18480:18509	1109210	2	True				
ANR	1109263	IdentifierDecl	* b = NULL		1109210	0					
ANR	1109264	IdentifierDeclType	const struct Format *		1109210	0					
ANR	1109265	Identifier	b		1109210	1					
ANR	1109266	AssignmentExpression	* b = NULL		1109210	2		=			
ANR	1109267	Identifier	NULL		1109210	0					
ANR	1109268	Identifier	NULL		1109210	1					
ANR	1109269	IdentifierDeclStatement	unsigned int i ;	548:1:18512:18526	1109210	3	True				
ANR	1109270	IdentifierDecl	i		1109210	0					
ANR	1109271	IdentifierDeclType	unsigned int		1109210	0					
ANR	1109272	Identifier	i		1109210	1					
ANR	1109273	ForStatement	for ( i = 0 ; i < sizeof formats / sizeof formats [ 0 ] ; i ++ )		1109210	4					
ANR	1109274	ForInit	i = 0 ;	549:6:18534:18539	1109210	0	True				
ANR	1109275	AssignmentExpression	i = 0		1109210	0		=			
ANR	1109276	Identifier	i		1109210	0					
ANR	1109277	PrimaryExpression	0		1109210	1					
ANR	1109278	Condition	i < sizeof formats / sizeof formats [ 0 ]	549:13:18541:18578	1109210	1	True				
ANR	1109279	RelationalExpression	i < sizeof formats / sizeof formats [ 0 ]		1109210	0		<			
ANR	1109280	Identifier	i		1109210	0					
ANR	1109281	MultiplicativeExpression	sizeof formats / sizeof formats [ 0 ]		1109210	1		/			
ANR	1109282	SizeofExpression	sizeof formats		1109210	0					
ANR	1109283	Sizeof	sizeof		1109210	0					
ANR	1109284	Identifier	formats		1109210	1					
ANR	1109285	SizeofExpression	sizeof formats [ 0 ]		1109210	1					
ANR	1109286	Sizeof	sizeof		1109210	0					
ANR	1109287	ArrayIndexing	formats [ 0 ]		1109210	1					
ANR	1109288	Identifier	formats		1109210	0					
ANR	1109289	PrimaryExpression	0		1109210	1					
ANR	1109290	PostIncDecOperationExpression	i ++	549:53:18581:18583	1109210	2	True				
ANR	1109291	Identifier	i		1109210	0					
ANR	1109292	IncDec	++		1109210	1					
ANR	1109293	CompoundStatement		10:58:331:331	1109210	3					
ANR	1109294	ExpressionStatement	b = & formats [ i ]	550:2:18590:18605	1109210	0	True				
ANR	1109295	AssignmentExpression	b = & formats [ i ]		1109210	0		=			
ANR	1109296	Identifier	b		1109210	0					
ANR	1109297	UnaryOperationExpression	& formats [ i ]		1109210	1					
ANR	1109298	UnaryOperator	&		1109210	0					
ANR	1109299	ArrayIndexing	formats [ i ]		1109210	1					
ANR	1109300	Identifier	formats		1109210	0					
ANR	1109301	Identifier	i		1109210	1					
ANR	1109302	IfStatement	if ( ( b -> pipe_mask & compatible_pipes ) == b -> pipe_mask )		1109210	1					
ANR	1109303	Condition	( b -> pipe_mask & compatible_pipes ) == b -> pipe_mask	551:6:18613:18661	1109210	0	True				
ANR	1109304	EqualityExpression	( b -> pipe_mask & compatible_pipes ) == b -> pipe_mask		1109210	0		==			
ANR	1109305	BitAndExpression	b -> pipe_mask & compatible_pipes		1109210	0		&			
ANR	1109306	PtrMemberAccess	b -> pipe_mask		1109210	0					
ANR	1109307	Identifier	b		1109210	0					
ANR	1109308	Identifier	pipe_mask		1109210	1					
ANR	1109309	Identifier	compatible_pipes		1109210	1					
ANR	1109310	PtrMemberAccess	b -> pipe_mask		1109210	1					
ANR	1109311	Identifier	b		1109210	0					
ANR	1109312	Identifier	pipe_mask		1109210	1					
ANR	1109313	CompoundStatement		12:57:409:409	1109210	1					
ANR	1109314	ExpressionStatement	match = b	552:3:18669:18678	1109210	0	True				
ANR	1109315	AssignmentExpression	match = b		1109210	0		=			
ANR	1109316	Identifier	match		1109210	0					
ANR	1109317	Identifier	b		1109210	1					
ANR	1109318	BreakStatement	break ;	553:3:18683:18688	1109210	1	True				
ANR	1109319	ReturnStatement	return match ;	557:1:18699:18711	1109210	5	True				
ANR	1109320	Identifier	match		1109210	0					
ANR	1109321	ReturnType	const struct Format *		1109210	1					
ANR	1109322	Identifier	compute_format		1109210	2					
ANR	1109323	ParameterList			1109210	3					
ANR	1109324	CFGEntryNode	ENTRY		1109210		True				
ANR	1109325	CFGExitNode	EXIT		1109210		True				
ANR	1109326	Symbol	inst_buf [ 1 ] . opcode -> pipes		1109210						
ANR	1109327	Symbol	BUNDLE_FORMAT_MASK		1109210						
ANR	1109328	Symbol	b		1109210						
ANR	1109329	Symbol	NULL		1109210						
ANR	1109330	Symbol	formats		1109210						
ANR	1109331	Symbol	* inst_buf [ 1 ] . opcode		1109210						
ANR	1109332	Symbol	compatible_pipes		1109210						
ANR	1109333	Symbol	inst_buf [ 2 ] . opcode -> pipes		1109210						
ANR	1109334	Symbol	match		1109210						
ANR	1109335	Symbol	i		1109210						
ANR	1109336	Symbol	inst_buf [ 2 ] . opcode		1109210						
ANR	1109337	Symbol	* b		1109210						
ANR	1109338	Symbol	b -> pipe_mask		1109210						
ANR	1109339	Symbol	* * inst_buf		1109210						
ANR	1109340	Symbol	inst_buf [ 0 ] . opcode		1109210						
ANR	1109341	Symbol	inst_buf_index		1109210						
ANR	1109342	Symbol	inst_buf		1109210						
ANR	1109343	Symbol	* inst_buf [ 2 ] . opcode		1109210						
ANR	1109344	Symbol	NO_PIPELINE		1109210						
ANR	1109345	Symbol	inst_buf [ 1 ] . opcode		1109210						
ANR	1109346	Symbol	inst_buf [ 0 ] . opcode -> pipes		1109210						
ANR	1109347	Symbol	* formats		1109210						
ANR	1109348	Symbol	* inst_buf [ 0 ] . opcode		1109210						
ANR	1109349	Symbol	* inst_buf		1109210						
ANR	1109350	Function	assign_pipes	560:0:18716:19888							
ANR	1109351	FunctionDef	assign_pipes ()		1109350	0					
ANR	1109352	CompoundStatement		561:0:18740:19888	1109350	0					
ANR	1109353	IdentifierDeclStatement	unsigned long output_registers = 0 ;	562:1:18743:18777	1109350	0	True				
ANR	1109354	IdentifierDecl	output_registers = 0		1109350	0					
ANR	1109355	IdentifierDeclType	unsigned long		1109350	0					
ANR	1109356	Identifier	output_registers		1109350	1					
ANR	1109357	AssignmentExpression	output_registers = 0		1109350	2		=			
ANR	1109358	Identifier	output_registers		1109350	0					
ANR	1109359	PrimaryExpression	0		1109350	1					
ANR	1109360	IdentifierDeclStatement	unsigned int i = 0 ;	563:1:18780:18798	1109350	1	True				
ANR	1109361	IdentifierDecl	i = 0		1109350	0					
ANR	1109362	IdentifierDeclType	unsigned int		1109350	0					
ANR	1109363	Identifier	i		1109350	1					
ANR	1109364	AssignmentExpression	i = 0		1109350	2		=			
ANR	1109365	Identifier	i		1109350	0					
ANR	1109366	PrimaryExpression	0		1109350	1					
ANR	1109367	IfStatement	if ( inst_buf_index == 1 )		1109350	2					
ANR	1109368	Condition	inst_buf_index == 1	565:5:18806:18824	1109350	0	True				
ANR	1109369	EqualityExpression	inst_buf_index == 1		1109350	0		==			
ANR	1109370	Identifier	inst_buf_index		1109350	0					
ANR	1109371	PrimaryExpression	1		1109350	1					
ANR	1109372	CompoundStatement		6:2:90:182	1109350	1					
ANR	1109373	IdentifierDeclStatement	tilegx_mnemonic opc = inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP ;	566:2:18831:18923	1109350	0	True				
ANR	1109374	IdentifierDecl	opc = inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP		1109350	0					
ANR	1109375	IdentifierDeclType	tilegx_mnemonic		1109350	0					
ANR	1109376	Identifier	opc		1109350	1					
ANR	1109377	AssignmentExpression	opc = inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP		1109350	2		=			
ANR	1109378	Identifier	opc		1109350	0					
ANR	1109379	ConditionalExpression	inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP		1109350	1					
ANR	1109380	Condition	inst_buf [ 0 ] . opcode -> can_bundle		1109350	0					
ANR	1109381	PtrMemberAccess	inst_buf [ 0 ] . opcode -> can_bundle		1109350	0					
ANR	1109382	MemberAccess	inst_buf [ 0 ] . opcode		1109350	0					
ANR	1109383	ArrayIndexing	inst_buf [ 0 ]		1109350	0					
ANR	1109384	Identifier	inst_buf		1109350	0					
ANR	1109385	PrimaryExpression	0		1109350	1					
ANR	1109386	Identifier	opcode		1109350	1					
ANR	1109387	Identifier	can_bundle		1109350	1					
ANR	1109388	Identifier	TILEGX_OPC_FNOP		1109350	1					
ANR	1109389	Identifier	TILEGX_OPC_NOP		1109350	2					
ANR	1109390	ExpressionStatement	"insert_nop ( opc , __LINE__ )"	568:2:18927:18952	1109350	1	True				
ANR	1109391	CallExpression	"insert_nop ( opc , __LINE__ )"		1109350	0					
ANR	1109392	Callee	insert_nop		1109350	0					
ANR	1109393	Identifier	insert_nop		1109350	0					
ANR	1109394	ArgumentList	opc		1109350	1					
ANR	1109395	Argument	opc		1109350	0					
ANR	1109396	Identifier	opc		1109350	0					
ANR	1109397	Argument	__LINE__		1109350	1					
ANR	1109398	Identifier	__LINE__		1109350	0					
ANR	1109399	IdentifierDeclStatement	const struct Format * match = compute_format ( ) ;	571:1:18959:19004	1109350	3	True				
ANR	1109400	IdentifierDecl	* match = compute_format ( )		1109350	0					
ANR	1109401	IdentifierDeclType	const struct Format *		1109350	0					
ANR	1109402	Identifier	match		1109350	1					
ANR	1109403	AssignmentExpression	* match = compute_format ( )		1109350	2		=			
ANR	1109404	Identifier	match		1109350	0					
ANR	1109405	CallExpression	compute_format ( )		1109350	1					
ANR	1109406	Callee	compute_format		1109350	0					
ANR	1109407	Identifier	compute_format		1109350	0					
ANR	1109408	ArgumentList			1109350	1					
ANR	1109409	IfStatement	if ( match == NULL )		1109350	4					
ANR	1109410	Condition	match == NULL	573:5:19012:19024	1109350	0	True				
ANR	1109411	EqualityExpression	match == NULL		1109350	0		==			
ANR	1109412	Identifier	match		1109350	0					
ANR	1109413	Identifier	NULL		1109350	1					
ANR	1109414	ReturnStatement	return - 1 ;	574:2:19029:19038	1109350	1	True				
ANR	1109415	UnaryOperationExpression	- 1		1109350	0					
ANR	1109416	UnaryOperator	-		1109350	0					
ANR	1109417	PrimaryExpression	1		1109350	1					
ANR	1109418	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1109350	5					
ANR	1109419	ForInit	i = 0 ;	576:6:19047:19052	1109350	0	True				
ANR	1109420	AssignmentExpression	i = 0		1109350	0		=			
ANR	1109421	Identifier	i		1109350	0					
ANR	1109422	PrimaryExpression	0		1109350	1					
ANR	1109423	Condition	i < inst_buf_index	576:13:19054:19071	1109350	1	True				
ANR	1109424	RelationalExpression	i < inst_buf_index		1109350	0		<			
ANR	1109425	Identifier	i		1109350	0					
ANR	1109426	Identifier	inst_buf_index		1109350	1					
ANR	1109427	PostIncDecOperationExpression	i ++	576:33:19074:19076	1109350	2	True				
ANR	1109428	Identifier	i		1109350	0					
ANR	1109429	IncDec	++		1109350	1					
ANR	1109430	CompoundStatement		16:38:338:338	1109350	3					
ANR	1109431	IfStatement	if ( ( i > 0 ) && ( ( inst_buf [ i ] . input_registers & output_registers ) != 0 ) )		1109350	0					
ANR	1109432	Condition	( i > 0 ) && ( ( inst_buf [ i ] . input_registers & output_registers ) != 0 )	578:6:19088:19153	1109350	0	True				
ANR	1109433	AndExpression	( i > 0 ) && ( ( inst_buf [ i ] . input_registers & output_registers ) != 0 )		1109350	0		&&			
ANR	1109434	RelationalExpression	i > 0		1109350	0		>			
ANR	1109435	Identifier	i		1109350	0					
ANR	1109436	PrimaryExpression	0		1109350	1					
ANR	1109437	EqualityExpression	( inst_buf [ i ] . input_registers & output_registers ) != 0		1109350	1		!=			
ANR	1109438	BitAndExpression	inst_buf [ i ] . input_registers & output_registers		1109350	0		&			
ANR	1109439	MemberAccess	inst_buf [ i ] . input_registers		1109350	0					
ANR	1109440	ArrayIndexing	inst_buf [ i ]		1109350	0					
ANR	1109441	Identifier	inst_buf		1109350	0					
ANR	1109442	Identifier	i		1109350	1					
ANR	1109443	Identifier	input_registers		1109350	1					
ANR	1109444	Identifier	output_registers		1109350	1					
ANR	1109445	PrimaryExpression	0		1109350	1					
ANR	1109446	ReturnStatement	return - 1 ;	579:3:19159:19168	1109350	1	True				
ANR	1109447	UnaryOperationExpression	- 1		1109350	0					
ANR	1109448	UnaryOperator	-		1109350	0					
ANR	1109449	PrimaryExpression	1		1109350	1					
ANR	1109450	IfStatement	if ( ( i > 0 ) && ( ( inst_buf [ i ] . output_registers & output_registers ) != 0 ) )		1109350	1					
ANR	1109451	Condition	( i > 0 ) && ( ( inst_buf [ i ] . output_registers & output_registers ) != 0 )	581:6:19177:19243	1109350	0	True				
ANR	1109452	AndExpression	( i > 0 ) && ( ( inst_buf [ i ] . output_registers & output_registers ) != 0 )		1109350	0		&&			
ANR	1109453	RelationalExpression	i > 0		1109350	0		>			
ANR	1109454	Identifier	i		1109350	0					
ANR	1109455	PrimaryExpression	0		1109350	1					
ANR	1109456	EqualityExpression	( inst_buf [ i ] . output_registers & output_registers ) != 0		1109350	1		!=			
ANR	1109457	BitAndExpression	inst_buf [ i ] . output_registers & output_registers		1109350	0		&			
ANR	1109458	MemberAccess	inst_buf [ i ] . output_registers		1109350	0					
ANR	1109459	ArrayIndexing	inst_buf [ i ]		1109350	0					
ANR	1109460	Identifier	inst_buf		1109350	0					
ANR	1109461	Identifier	i		1109350	1					
ANR	1109462	Identifier	output_registers		1109350	1					
ANR	1109463	Identifier	output_registers		1109350	1					
ANR	1109464	PrimaryExpression	0		1109350	1					
ANR	1109465	ReturnStatement	return - 1 ;	582:3:19249:19258	1109350	1	True				
ANR	1109466	UnaryOperationExpression	- 1		1109350	0					
ANR	1109467	UnaryOperator	-		1109350	0					
ANR	1109468	PrimaryExpression	1		1109350	1					
ANR	1109469	ExpressionStatement	output_registers |= inst_buf [ i ] . output_registers & 0xFFFFFFFFFFFFFFL	587:2:19368:19436	1109350	2	True				
ANR	1109470	AssignmentExpression	output_registers |= inst_buf [ i ] . output_registers & 0xFFFFFFFFFFFFFFL		1109350	0		|=			
ANR	1109471	Identifier	output_registers		1109350	0					
ANR	1109472	BitAndExpression	inst_buf [ i ] . output_registers & 0xFFFFFFFFFFFFFFL		1109350	1		&			
ANR	1109473	MemberAccess	inst_buf [ i ] . output_registers		1109350	0					
ANR	1109474	ArrayIndexing	inst_buf [ i ]		1109350	0					
ANR	1109475	Identifier	inst_buf		1109350	0					
ANR	1109476	Identifier	i		1109350	1					
ANR	1109477	Identifier	output_registers		1109350	1					
ANR	1109478	PrimaryExpression	0xFFFFFFFFFFFFFFL		1109350	1					
ANR	1109479	ExpressionStatement	inst_buf [ i ] . pipe = match -> pipe [ i ]	589:2:19441:19474	1109350	3	True				
ANR	1109480	AssignmentExpression	inst_buf [ i ] . pipe = match -> pipe [ i ]		1109350	0		=			
ANR	1109481	MemberAccess	inst_buf [ i ] . pipe		1109350	0					
ANR	1109482	ArrayIndexing	inst_buf [ i ]		1109350	0					
ANR	1109483	Identifier	inst_buf		1109350	0					
ANR	1109484	Identifier	i		1109350	1					
ANR	1109485	Identifier	pipe		1109350	1					
ANR	1109486	ArrayIndexing	match -> pipe [ i ]		1109350	1					
ANR	1109487	PtrMemberAccess	match -> pipe		1109350	0					
ANR	1109488	Identifier	match		1109350	0					
ANR	1109489	Identifier	pipe		1109350	1					
ANR	1109490	Identifier	i		1109350	1					
ANR	1109491	IfStatement	if ( inst_buf_index == 2 && ! tilegx_is_x_pipeline ( match -> pipe [ 0 ] ) )		1109350	6					
ANR	1109492	Condition	inst_buf_index == 2 && ! tilegx_is_x_pipeline ( match -> pipe [ 0 ] )	593:5:19539:19598	1109350	0	True				
ANR	1109493	AndExpression	inst_buf_index == 2 && ! tilegx_is_x_pipeline ( match -> pipe [ 0 ] )		1109350	0		&&			
ANR	1109494	EqualityExpression	inst_buf_index == 2		1109350	0		==			
ANR	1109495	Identifier	inst_buf_index		1109350	0					
ANR	1109496	PrimaryExpression	2		1109350	1					
ANR	1109497	UnaryOperationExpression	! tilegx_is_x_pipeline ( match -> pipe [ 0 ] )		1109350	1					
ANR	1109498	UnaryOperator	!		1109350	0					
ANR	1109499	CallExpression	tilegx_is_x_pipeline ( match -> pipe [ 0 ] )		1109350	1					
ANR	1109500	Callee	tilegx_is_x_pipeline		1109350	0					
ANR	1109501	Identifier	tilegx_is_x_pipeline		1109350	0					
ANR	1109502	ArgumentList	match -> pipe [ 0 ]		1109350	1					
ANR	1109503	Argument	match -> pipe [ 0 ]		1109350	0					
ANR	1109504	ArrayIndexing	match -> pipe [ 0 ]		1109350	0					
ANR	1109505	PtrMemberAccess	match -> pipe		1109350	0					
ANR	1109506	Identifier	match		1109350	0					
ANR	1109507	Identifier	pipe		1109350	1					
ANR	1109508	PrimaryExpression	0		1109350	1					
ANR	1109509	CompoundStatement		37:2:946:1102	1109350	1					
ANR	1109510	ExpressionStatement	"insert_nop ( TILEGX_OPC_FNOP , __LINE__ )"	594:2:19605:19642	1109350	0	True				
ANR	1109511	CallExpression	"insert_nop ( TILEGX_OPC_FNOP , __LINE__ )"		1109350	0					
ANR	1109512	Callee	insert_nop		1109350	0					
ANR	1109513	Identifier	insert_nop		1109350	0					
ANR	1109514	ArgumentList	TILEGX_OPC_FNOP		1109350	1					
ANR	1109515	Argument	TILEGX_OPC_FNOP		1109350	0					
ANR	1109516	Identifier	TILEGX_OPC_FNOP		1109350	0					
ANR	1109517	Argument	__LINE__		1109350	1					
ANR	1109518	Identifier	__LINE__		1109350	0					
ANR	1109519	IdentifierDeclStatement	tilegx_pipeline pipe = ( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) ) ;	597:2:19687:19843	1109350	1	True				
ANR	1109520	IdentifierDecl	pipe = ( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) )		1109350	0					
ANR	1109521	IdentifierDeclType	tilegx_pipeline		1109350	0					
ANR	1109522	Identifier	pipe		1109350	1					
ANR	1109523	AssignmentExpression	pipe = ( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) )		1109350	2		=			
ANR	1109524	Identifier	pipe		1109350	0					
ANR	1109525	CastExpression	( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) )		1109350	1					
ANR	1109526	CastTarget	tilegx_pipeline		1109350	0					
ANR	1109527	AdditiveExpression	( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe )		1109350	1		-			
ANR	1109528	AdditiveExpression	TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2		1109350	0		+			
ANR	1109529	Identifier	TILEGX_PIPELINE_Y0		1109350	0					
ANR	1109530	AdditiveExpression	TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2		1109350	1		+			
ANR	1109531	Identifier	TILEGX_PIPELINE_Y1		1109350	0					
ANR	1109532	Identifier	TILEGX_PIPELINE_Y2		1109350	1					
ANR	1109533	AdditiveExpression	inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe		1109350	1		+			
ANR	1109534	MemberAccess	inst_buf [ 1 ] . pipe		1109350	0					
ANR	1109535	ArrayIndexing	inst_buf [ 1 ]		1109350	0					
ANR	1109536	Identifier	inst_buf		1109350	0					
ANR	1109537	PrimaryExpression	1		1109350	1					
ANR	1109538	Identifier	pipe		1109350	1					
ANR	1109539	MemberAccess	inst_buf [ 2 ] . pipe		1109350	1					
ANR	1109540	ArrayIndexing	inst_buf [ 2 ]		1109350	0					
ANR	1109541	Identifier	inst_buf		1109350	0					
ANR	1109542	PrimaryExpression	2		1109350	1					
ANR	1109543	Identifier	pipe		1109350	1					
ANR	1109544	ExpressionStatement	inst_buf [ 0 ] . pipe = pipe	601:2:19848:19871	1109350	2	True				
ANR	1109545	AssignmentExpression	inst_buf [ 0 ] . pipe = pipe		1109350	0		=			
ANR	1109546	MemberAccess	inst_buf [ 0 ] . pipe		1109350	0					
ANR	1109547	ArrayIndexing	inst_buf [ 0 ]		1109350	0					
ANR	1109548	Identifier	inst_buf		1109350	0					
ANR	1109549	PrimaryExpression	0		1109350	1					
ANR	1109550	Identifier	pipe		1109350	1					
ANR	1109551	Identifier	pipe		1109350	1					
ANR	1109552	ReturnStatement	return 0 ;	604:1:19878:19886	1109350	7	True				
ANR	1109553	PrimaryExpression	0		1109350	0					
ANR	1109554	ReturnType	sljit_si		1109350	1					
ANR	1109555	Identifier	assign_pipes		1109350	2					
ANR	1109556	ParameterList			1109350	3					
ANR	1109557	CFGEntryNode	ENTRY		1109350		True				
ANR	1109558	CFGExitNode	EXIT		1109350		True				
ANR	1109559	Symbol	* match		1109350						
ANR	1109560	Symbol	inst_buf [ 2 ] . pipe		1109350						
ANR	1109561	Symbol	* * inst_buf		1109350						
ANR	1109562	Symbol	TILEGX_OPC_FNOP		1109350						
ANR	1109563	Symbol	inst_buf [ 0 ] . pipe		1109350						
ANR	1109564	Symbol	TILEGX_PIPELINE_Y1		1109350						
ANR	1109565	Symbol	TILEGX_PIPELINE_Y0		1109350						
ANR	1109566	Symbol	pipe		1109350						
ANR	1109567	Symbol	TILEGX_PIPELINE_Y2		1109350						
ANR	1109568	Symbol	inst_buf [ i ] . output_registers		1109350						
ANR	1109569	Symbol	* inst_buf		1109350						
ANR	1109570	Symbol	opc		1109350						
ANR	1109571	Symbol	NULL		1109350						
ANR	1109572	Symbol	inst_buf [ i ] . pipe		1109350						
ANR	1109573	Symbol	inst_buf [ i ] . input_registers		1109350						
ANR	1109574	Symbol	* match -> pipe		1109350						
ANR	1109575	Symbol	output_registers		1109350						
ANR	1109576	Symbol	match		1109350						
ANR	1109577	Symbol	inst_buf [ 1 ] . pipe		1109350						
ANR	1109578	Symbol	i		1109350						
ANR	1109579	Symbol	inst_buf [ 0 ] . opcode		1109350						
ANR	1109580	Symbol	__LINE__		1109350						
ANR	1109581	Symbol	inst_buf [ 0 ] . opcode -> can_bundle		1109350						
ANR	1109582	Symbol	inst_buf_index		1109350						
ANR	1109583	Symbol	inst_buf		1109350						
ANR	1109584	Symbol	match -> pipe		1109350						
ANR	1109585	Symbol	* i		1109350						
ANR	1109586	Symbol	tilegx_is_x_pipeline		1109350						
ANR	1109587	Symbol	TILEGX_OPC_NOP		1109350						
ANR	1109588	Symbol	* * match		1109350						
ANR	1109589	Symbol	* inst_buf [ 0 ] . opcode		1109350						
ANR	1109590	Symbol	compute_format		1109350						
ANR	1109591	Function	get_bundle_bit	607:0:19891:20320							
ANR	1109592	FunctionDef	get_bundle_bit (struct jit_instr * inst)		1109591	0					
ANR	1109593	CompoundStatement		608:0:19949:20320	1109591	0					
ANR	1109594	IdentifierDeclStatement	"int i , val ;"	609:1:19952:19962	1109591	0	True				
ANR	1109595	IdentifierDecl	i		1109591	0					
ANR	1109596	IdentifierDeclType	int		1109591	0					
ANR	1109597	Identifier	i		1109591	1					
ANR	1109598	IdentifierDecl	val		1109591	1					
ANR	1109599	IdentifierDeclType	int		1109591	0					
ANR	1109600	Identifier	val		1109591	1					
ANR	1109601	IdentifierDeclStatement	const struct tilegx_opcode * opcode = inst -> opcode ;	610:1:19965:20014	1109591	1	True				
ANR	1109602	IdentifierDecl	* opcode = inst -> opcode		1109591	0					
ANR	1109603	IdentifierDeclType	const struct tilegx_opcode *		1109591	0					
ANR	1109604	Identifier	opcode		1109591	1					
ANR	1109605	AssignmentExpression	* opcode = inst -> opcode		1109591	2		=			
ANR	1109606	Identifier	opcode		1109591	0					
ANR	1109607	PtrMemberAccess	inst -> opcode		1109591	1					
ANR	1109608	Identifier	inst		1109591	0					
ANR	1109609	Identifier	opcode		1109591	1					
ANR	1109610	IdentifierDeclStatement	tilegx_bundle_bits bits = opcode -> fixed_bit_values [ inst -> pipe ] ;	611:1:20017:20079	1109591	2	True				
ANR	1109611	IdentifierDecl	bits = opcode -> fixed_bit_values [ inst -> pipe ]		1109591	0					
ANR	1109612	IdentifierDeclType	tilegx_bundle_bits		1109591	0					
ANR	1109613	Identifier	bits		1109591	1					
ANR	1109614	AssignmentExpression	bits = opcode -> fixed_bit_values [ inst -> pipe ]		1109591	2		=			
ANR	1109615	Identifier	bits		1109591	0					
ANR	1109616	ArrayIndexing	opcode -> fixed_bit_values [ inst -> pipe ]		1109591	1					
ANR	1109617	PtrMemberAccess	opcode -> fixed_bit_values		1109591	0					
ANR	1109618	Identifier	opcode		1109591	0					
ANR	1109619	Identifier	fixed_bit_values		1109591	1					
ANR	1109620	PtrMemberAccess	inst -> pipe		1109591	1					
ANR	1109621	Identifier	inst		1109591	0					
ANR	1109622	Identifier	pipe		1109591	1					
ANR	1109623	IdentifierDeclStatement	const struct tilegx_operand * operand = NULL ;	613:1:20083:20126	1109591	3	True				
ANR	1109624	IdentifierDecl	* operand = NULL		1109591	0					
ANR	1109625	IdentifierDeclType	const struct tilegx_operand *		1109591	0					
ANR	1109626	Identifier	operand		1109591	1					
ANR	1109627	AssignmentExpression	* operand = NULL		1109591	2		=			
ANR	1109628	Identifier	NULL		1109591	0					
ANR	1109629	Identifier	NULL		1109591	1					
ANR	1109630	ForStatement	for ( i = 0 ; i < opcode -> num_operands ; i ++ )		1109591	4					
ANR	1109631	ForInit	i = 0 ;	614:6:20134:20139	1109591	0	True				
ANR	1109632	AssignmentExpression	i = 0		1109591	0		=			
ANR	1109633	Identifier	i		1109591	0					
ANR	1109634	PrimaryExpression	0		1109591	1					
ANR	1109635	Condition	i < opcode -> num_operands	614:13:20141:20164	1109591	1	True				
ANR	1109636	RelationalExpression	i < opcode -> num_operands		1109591	0		<			
ANR	1109637	Identifier	i		1109591	0					
ANR	1109638	PtrMemberAccess	opcode -> num_operands		1109591	1					
ANR	1109639	Identifier	opcode		1109591	0					
ANR	1109640	Identifier	num_operands		1109591	1					
ANR	1109641	PostIncDecOperationExpression	i ++	614:39:20167:20169	1109591	2	True				
ANR	1109642	Identifier	i		1109591	0					
ANR	1109643	IncDec	++		1109591	1					
ANR	1109644	CompoundStatement		7:44:222:222	1109591	3					
ANR	1109645	ExpressionStatement	operand = & tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]	615:2:20176:20235	1109591	0	True				
ANR	1109646	AssignmentExpression	operand = & tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]		1109591	0		=			
ANR	1109647	Identifier	operand		1109591	0					
ANR	1109648	UnaryOperationExpression	& tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]		1109591	1					
ANR	1109649	UnaryOperator	&		1109591	0					
ANR	1109650	ArrayIndexing	tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]		1109591	1					
ANR	1109651	Identifier	tilegx_operands		1109591	0					
ANR	1109652	ArrayIndexing	opcode -> operands [ inst -> pipe ] [ i ]		1109591	1					
ANR	1109653	ArrayIndexing	opcode -> operands [ inst -> pipe ]		1109591	0					
ANR	1109654	PtrMemberAccess	opcode -> operands		1109591	0					
ANR	1109655	Identifier	opcode		1109591	0					
ANR	1109656	Identifier	operands		1109591	1					
ANR	1109657	PtrMemberAccess	inst -> pipe		1109591	1					
ANR	1109658	Identifier	inst		1109591	0					
ANR	1109659	Identifier	pipe		1109591	1					
ANR	1109660	Identifier	i		1109591	1					
ANR	1109661	ExpressionStatement	val = inst -> operand_value [ i ]	616:2:20239:20267	1109591	1	True				
ANR	1109662	AssignmentExpression	val = inst -> operand_value [ i ]		1109591	0		=			
ANR	1109663	Identifier	val		1109591	0					
ANR	1109664	ArrayIndexing	inst -> operand_value [ i ]		1109591	1					
ANR	1109665	PtrMemberAccess	inst -> operand_value		1109591	0					
ANR	1109666	Identifier	inst		1109591	0					
ANR	1109667	Identifier	operand_value		1109591	1					
ANR	1109668	Identifier	i		1109591	1					
ANR	1109669	ExpressionStatement	bits |= operand -> insert ( val )	618:2:20272:20300	1109591	2	True				
ANR	1109670	AssignmentExpression	bits |= operand -> insert ( val )		1109591	0		|=			
ANR	1109671	Identifier	bits		1109591	0					
ANR	1109672	CallExpression	operand -> insert ( val )		1109591	1					
ANR	1109673	Callee	operand -> insert		1109591	0					
ANR	1109674	PtrMemberAccess	operand -> insert		1109591	0					
ANR	1109675	Identifier	operand		1109591	0					
ANR	1109676	Identifier	insert		1109591	1					
ANR	1109677	ArgumentList	val		1109591	1					
ANR	1109678	Argument	val		1109591	0					
ANR	1109679	Identifier	val		1109591	0					
ANR	1109680	ReturnStatement	return bits ;	621:1:20307:20318	1109591	5	True				
ANR	1109681	Identifier	bits		1109591	0					
ANR	1109682	ReturnType	tilegx_bundle_bits		1109591	1					
ANR	1109683	Identifier	get_bundle_bit		1109591	2					
ANR	1109684	ParameterList	struct jit_instr * inst		1109591	3					
ANR	1109685	Parameter	struct jit_instr * inst	607:34:19925:19946	1109591	0	True				
ANR	1109686	ParameterType	struct jit_instr *		1109591	0					
ANR	1109687	Identifier	inst		1109591	1					
ANR	1109688	CFGEntryNode	ENTRY		1109591		True				
ANR	1109689	CFGExitNode	EXIT		1109591		True				
ANR	1109690	Symbol	* operand		1109591						
ANR	1109691	Symbol	* opcode -> operands		1109591						
ANR	1109692	Symbol	opcode		1109591						
ANR	1109693	Symbol	* inst -> operand_value		1109591						
ANR	1109694	Symbol	opcode -> num_operands		1109591						
ANR	1109695	Symbol	* * * inst		1109591						
ANR	1109696	Symbol	opcode -> operands		1109591						
ANR	1109697	Symbol	opcode -> fixed_bit_values		1109591						
ANR	1109698	Symbol	* inst -> pipe		1109591						
ANR	1109699	Symbol	val		1109591						
ANR	1109700	Symbol	inst -> pipe		1109591						
ANR	1109701	Symbol	inst -> operand_value		1109591						
ANR	1109702	Symbol	* * * opcode		1109591						
ANR	1109703	Symbol	* inst		1109591						
ANR	1109704	Symbol	NULL		1109591						
ANR	1109705	Symbol	operand -> insert		1109591						
ANR	1109706	Symbol	bits		1109591						
ANR	1109707	Symbol	i		1109591						
ANR	1109708	Symbol	* * inst		1109591						
ANR	1109709	Symbol	tilegx_operands		1109591						
ANR	1109710	Symbol	* * opcode		1109591						
ANR	1109711	Symbol	* * inst -> pipe		1109591						
ANR	1109712	Symbol	* i		1109591						
ANR	1109713	Symbol	inst		1109591						
ANR	1109714	Symbol	* * opcode -> operands		1109591						
ANR	1109715	Symbol	inst -> opcode		1109591						
ANR	1109716	Symbol	* opcode -> fixed_bit_values		1109591						
ANR	1109717	Symbol	operand		1109591						
ANR	1109718	Symbol	* opcode		1109591						
ANR	1109719	Function	update_buffer	624:0:20323:23031							
ANR	1109720	FunctionDef	update_buffer (struct sljit_compiler * compiler)		1109719	0					
ANR	1109721	CompoundStatement		625:0:20386:23031	1109719	0					
ANR	1109722	IdentifierDeclStatement	int i ;	626:1:20389:20394	1109719	0	True				
ANR	1109723	IdentifierDecl	i		1109719	0					
ANR	1109724	IdentifierDeclType	int		1109719	0					
ANR	1109725	Identifier	i		1109719	1					
ANR	1109726	IdentifierDeclStatement	int orig_index = inst_buf_index ;	627:1:20397:20428	1109719	1	True				
ANR	1109727	IdentifierDecl	orig_index = inst_buf_index		1109719	0					
ANR	1109728	IdentifierDeclType	int		1109719	0					
ANR	1109729	Identifier	orig_index		1109719	1					
ANR	1109730	AssignmentExpression	orig_index = inst_buf_index		1109719	2		=			
ANR	1109731	Identifier	inst_buf_index		1109719	0					
ANR	1109732	Identifier	inst_buf_index		1109719	1					
ANR	1109733	IdentifierDeclStatement	struct jit_instr inst0 = inst_buf [ 0 ] ;	628:1:20431:20467	1109719	2	True				
ANR	1109734	IdentifierDecl	inst0 = inst_buf [ 0 ]		1109719	0					
ANR	1109735	IdentifierDeclType	struct jit_instr		1109719	0					
ANR	1109736	Identifier	inst0		1109719	1					
ANR	1109737	AssignmentExpression	inst0 = inst_buf [ 0 ]		1109719	2		=			
ANR	1109738	Identifier	inst0		1109719	0					
ANR	1109739	ArrayIndexing	inst_buf [ 0 ]		1109719	1					
ANR	1109740	Identifier	inst_buf		1109719	0					
ANR	1109741	PrimaryExpression	0		1109719	1					
ANR	1109742	IdentifierDeclStatement	struct jit_instr inst1 = inst_buf [ 1 ] ;	629:1:20470:20506	1109719	3	True				
ANR	1109743	IdentifierDecl	inst1 = inst_buf [ 1 ]		1109719	0					
ANR	1109744	IdentifierDeclType	struct jit_instr		1109719	0					
ANR	1109745	Identifier	inst1		1109719	1					
ANR	1109746	AssignmentExpression	inst1 = inst_buf [ 1 ]		1109719	2		=			
ANR	1109747	Identifier	inst1		1109719	0					
ANR	1109748	ArrayIndexing	inst_buf [ 1 ]		1109719	1					
ANR	1109749	Identifier	inst_buf		1109719	0					
ANR	1109750	PrimaryExpression	1		1109719	1					
ANR	1109751	IdentifierDeclStatement	struct jit_instr inst2 = inst_buf [ 2 ] ;	630:1:20509:20545	1109719	4	True				
ANR	1109752	IdentifierDecl	inst2 = inst_buf [ 2 ]		1109719	0					
ANR	1109753	IdentifierDeclType	struct jit_instr		1109719	0					
ANR	1109754	Identifier	inst2		1109719	1					
ANR	1109755	AssignmentExpression	inst2 = inst_buf [ 2 ]		1109719	2		=			
ANR	1109756	Identifier	inst2		1109719	0					
ANR	1109757	ArrayIndexing	inst_buf [ 2 ]		1109719	1					
ANR	1109758	Identifier	inst_buf		1109719	0					
ANR	1109759	PrimaryExpression	2		1109719	1					
ANR	1109760	IdentifierDeclStatement	tilegx_bundle_bits bits = 0 ;	631:1:20548:20575	1109719	5	True				
ANR	1109761	IdentifierDecl	bits = 0		1109719	0					
ANR	1109762	IdentifierDeclType	tilegx_bundle_bits		1109719	0					
ANR	1109763	Identifier	bits		1109719	1					
ANR	1109764	AssignmentExpression	bits = 0		1109719	2		=			
ANR	1109765	Identifier	bits		1109719	0					
ANR	1109766	PrimaryExpression	0		1109719	1					
ANR	1109767	IfStatement	if ( assign_pipes ( ) == 0 )		1109719	6					
ANR	1109768	Condition	assign_pipes ( ) == 0	634:5:20655:20673	1109719	0	True				
ANR	1109769	EqualityExpression	assign_pipes ( ) == 0		1109719	0		==			
ANR	1109770	CallExpression	assign_pipes ( )		1109719	0					
ANR	1109771	Callee	assign_pipes		1109719	0					
ANR	1109772	Identifier	assign_pipes		1109719	0					
ANR	1109773	ArgumentList			1109719	1					
ANR	1109774	PrimaryExpression	0		1109719	1					
ANR	1109775	CompoundStatement		10:26:289:289	1109719	1					
ANR	1109776	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1109719	0					
ANR	1109777	ForInit	i = 0 ;	635:7:20685:20690	1109719	0	True				
ANR	1109778	AssignmentExpression	i = 0		1109719	0		=			
ANR	1109779	Identifier	i		1109719	0					
ANR	1109780	PrimaryExpression	0		1109719	1					
ANR	1109781	Condition	i < inst_buf_index	635:14:20692:20709	1109719	1	True				
ANR	1109782	RelationalExpression	i < inst_buf_index		1109719	0		<			
ANR	1109783	Identifier	i		1109719	0					
ANR	1109784	Identifier	inst_buf_index		1109719	1					
ANR	1109785	PostIncDecOperationExpression	i ++	635:34:20712:20714	1109719	2	True				
ANR	1109786	Identifier	i		1109719	0					
ANR	1109787	IncDec	++		1109719	1					
ANR	1109788	CompoundStatement		11:39:330:330	1109719	3					
ANR	1109789	ExpressionStatement	bits |= get_bundle_bit ( inst_buf + i )	636:3:20722:20758	1109719	0	True				
ANR	1109790	AssignmentExpression	bits |= get_bundle_bit ( inst_buf + i )		1109719	0		|=			
ANR	1109791	Identifier	bits		1109719	0					
ANR	1109792	CallExpression	get_bundle_bit ( inst_buf + i )		1109719	1					
ANR	1109793	Callee	get_bundle_bit		1109719	0					
ANR	1109794	Identifier	get_bundle_bit		1109719	0					
ANR	1109795	ArgumentList	inst_buf + i		1109719	1					
ANR	1109796	Argument	inst_buf + i		1109719	0					
ANR	1109797	AdditiveExpression	inst_buf + i		1109719	0		+			
ANR	1109798	Identifier	inst_buf		1109719	0					
ANR	1109799	Identifier	i		1109719	1					
ANR	1109800	ExpressionStatement	"printf ( ""|%04d"" , inst_buf [ i ] . line )"	638:3:20787:20820	1109719	1	True				
ANR	1109801	CallExpression	"printf ( ""|%04d"" , inst_buf [ i ] . line )"		1109719	0					
ANR	1109802	Callee	printf		1109719	0					
ANR	1109803	Identifier	printf		1109719	0					
ANR	1109804	ArgumentList	"""|%04d"""		1109719	1					
ANR	1109805	Argument	"""|%04d"""		1109719	0					
ANR	1109806	PrimaryExpression	"""|%04d"""		1109719	0					
ANR	1109807	Argument	inst_buf [ i ] . line		1109719	1					
ANR	1109808	MemberAccess	inst_buf [ i ] . line		1109719	0					
ANR	1109809	ArrayIndexing	inst_buf [ i ]		1109719	0					
ANR	1109810	Identifier	inst_buf		1109719	0					
ANR	1109811	Identifier	i		1109719	1					
ANR	1109812	Identifier	line		1109719	1					
ANR	1109813	IfStatement	if ( inst_buf_index == 3 )		1109719	1					
ANR	1109814	Condition	inst_buf_index == 3	642:6:20863:20881	1109719	0	True				
ANR	1109815	EqualityExpression	inst_buf_index == 3		1109719	0		==			
ANR	1109816	Identifier	inst_buf_index		1109719	0					
ANR	1109817	PrimaryExpression	3		1109719	1					
ANR	1109818	ExpressionStatement	"printf ( ""|M0|:\\t"" )"	643:3:20887:20904	1109719	1	True				
ANR	1109819	CallExpression	"printf ( ""|M0|:\\t"" )"		1109719	0					
ANR	1109820	Callee	printf		1109719	0					
ANR	1109821	Identifier	printf		1109719	0					
ANR	1109822	ArgumentList	"""|M0|:\\t"""		1109719	1					
ANR	1109823	Argument	"""|M0|:\\t"""		1109719	0					
ANR	1109824	PrimaryExpression	"""|M0|:\\t"""		1109719	0					
ANR	1109825	ElseStatement	else		1109719	0					
ANR	1109826	ExpressionStatement	"printf ( ""|M0|:\\t\\t"" )"	645:3:20916:20935	1109719	0	True				
ANR	1109827	CallExpression	"printf ( ""|M0|:\\t\\t"" )"		1109719	0					
ANR	1109828	Callee	printf		1109719	0					
ANR	1109829	Identifier	printf		1109719	0					
ANR	1109830	ArgumentList	"""|M0|:\\t\\t"""		1109719	1					
ANR	1109831	Argument	"""|M0|:\\t\\t"""		1109719	0					
ANR	1109832	PrimaryExpression	"""|M0|:\\t\\t"""		1109719	0					
ANR	1109833	ExpressionStatement	print_insn_tilegx ( & bits )	646:2:20939:20963	1109719	2	True				
ANR	1109834	CallExpression	print_insn_tilegx ( & bits )		1109719	0					
ANR	1109835	Callee	print_insn_tilegx		1109719	0					
ANR	1109836	Identifier	print_insn_tilegx		1109719	0					
ANR	1109837	ArgumentList	& bits		1109719	1					
ANR	1109838	Argument	& bits		1109719	0					
ANR	1109839	UnaryOperationExpression	& bits		1109719	0					
ANR	1109840	UnaryOperator	&		1109719	0					
ANR	1109841	Identifier	bits		1109719	1					
ANR	1109842	ExpressionStatement	inst_buf_index = 0	649:2:20975:20993	1109719	3	True				
ANR	1109843	AssignmentExpression	inst_buf_index = 0		1109719	0		=			
ANR	1109844	Identifier	inst_buf_index		1109719	0					
ANR	1109845	PrimaryExpression	0		1109719	1					
ANR	1109846	ReturnStatement	"return push_inst_nodebug ( compiler , bits ) ;"	652:2:21022:21062	1109719	4	True				
ANR	1109847	CallExpression	"push_inst_nodebug ( compiler , bits )"		1109719	0					
ANR	1109848	Callee	push_inst_nodebug		1109719	0					
ANR	1109849	Identifier	push_inst_nodebug		1109719	0					
ANR	1109850	ArgumentList	compiler		1109719	1					
ANR	1109851	Argument	compiler		1109719	0					
ANR	1109852	Identifier	compiler		1109719	0					
ANR	1109853	Argument	bits		1109719	1					
ANR	1109854	Identifier	bits		1109719	0					
ANR	1109855	ExpressionStatement	inst_buf_index = orig_index - 1	663:1:21386:21417	1109719	7	True				
ANR	1109856	AssignmentExpression	inst_buf_index = orig_index - 1		1109719	0		=			
ANR	1109857	Identifier	inst_buf_index		1109719	0					
ANR	1109858	AdditiveExpression	orig_index - 1		1109719	1		-			
ANR	1109859	Identifier	orig_index		1109719	0					
ANR	1109860	PrimaryExpression	1		1109719	1					
ANR	1109861	ExpressionStatement	inst_buf [ 0 ] = inst0	664:1:21420:21439	1109719	8	True				
ANR	1109862	AssignmentExpression	inst_buf [ 0 ] = inst0		1109719	0		=			
ANR	1109863	ArrayIndexing	inst_buf [ 0 ]		1109719	0					
ANR	1109864	Identifier	inst_buf		1109719	0					
ANR	1109865	PrimaryExpression	0		1109719	1					
ANR	1109866	Identifier	inst0		1109719	1					
ANR	1109867	ExpressionStatement	inst_buf [ 1 ] = inst1	665:1:21442:21461	1109719	9	True				
ANR	1109868	AssignmentExpression	inst_buf [ 1 ] = inst1		1109719	0		=			
ANR	1109869	ArrayIndexing	inst_buf [ 1 ]		1109719	0					
ANR	1109870	Identifier	inst_buf		1109719	0					
ANR	1109871	PrimaryExpression	1		1109719	1					
ANR	1109872	Identifier	inst1		1109719	1					
ANR	1109873	ExpressionStatement	inst_buf [ 2 ] = inst2	666:1:21464:21483	1109719	10	True				
ANR	1109874	AssignmentExpression	inst_buf [ 2 ] = inst2		1109719	0		=			
ANR	1109875	ArrayIndexing	inst_buf [ 2 ]		1109719	0					
ANR	1109876	Identifier	inst_buf		1109719	0					
ANR	1109877	PrimaryExpression	2		1109719	1					
ANR	1109878	Identifier	inst2		1109719	1					
ANR	1109879	IfStatement	if ( assign_pipes ( ) == 0 )		1109719	11					
ANR	1109880	Condition	assign_pipes ( ) == 0	667:5:21490:21508	1109719	0	True				
ANR	1109881	EqualityExpression	assign_pipes ( ) == 0		1109719	0		==			
ANR	1109882	CallExpression	assign_pipes ( )		1109719	0					
ANR	1109883	Callee	assign_pipes		1109719	0					
ANR	1109884	Identifier	assign_pipes		1109719	0					
ANR	1109885	ArgumentList			1109719	1					
ANR	1109886	PrimaryExpression	0		1109719	1					
ANR	1109887	CompoundStatement		43:26:1124:1124	1109719	1					
ANR	1109888	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1109719	0					
ANR	1109889	ForInit	i = 0 ;	668:7:21520:21525	1109719	0	True				
ANR	1109890	AssignmentExpression	i = 0		1109719	0		=			
ANR	1109891	Identifier	i		1109719	0					
ANR	1109892	PrimaryExpression	0		1109719	1					
ANR	1109893	Condition	i < inst_buf_index	668:14:21527:21544	1109719	1	True				
ANR	1109894	RelationalExpression	i < inst_buf_index		1109719	0		<			
ANR	1109895	Identifier	i		1109719	0					
ANR	1109896	Identifier	inst_buf_index		1109719	1					
ANR	1109897	PostIncDecOperationExpression	i ++	668:34:21547:21549	1109719	2	True				
ANR	1109898	Identifier	i		1109719	0					
ANR	1109899	IncDec	++		1109719	1					
ANR	1109900	CompoundStatement		44:39:1165:1165	1109719	3					
ANR	1109901	ExpressionStatement	bits |= get_bundle_bit ( inst_buf + i )	669:3:21557:21593	1109719	0	True				
ANR	1109902	AssignmentExpression	bits |= get_bundle_bit ( inst_buf + i )		1109719	0		|=			
ANR	1109903	Identifier	bits		1109719	0					
ANR	1109904	CallExpression	get_bundle_bit ( inst_buf + i )		1109719	1					
ANR	1109905	Callee	get_bundle_bit		1109719	0					
ANR	1109906	Identifier	get_bundle_bit		1109719	0					
ANR	1109907	ArgumentList	inst_buf + i		1109719	1					
ANR	1109908	Argument	inst_buf + i		1109719	0					
ANR	1109909	AdditiveExpression	inst_buf + i		1109719	0		+			
ANR	1109910	Identifier	inst_buf		1109719	0					
ANR	1109911	Identifier	i		1109719	1					
ANR	1109912	ExpressionStatement	"printf ( ""|%04d"" , inst_buf [ i ] . line )"	671:3:21622:21655	1109719	1	True				
ANR	1109913	CallExpression	"printf ( ""|%04d"" , inst_buf [ i ] . line )"		1109719	0					
ANR	1109914	Callee	printf		1109719	0					
ANR	1109915	Identifier	printf		1109719	0					
ANR	1109916	ArgumentList	"""|%04d"""		1109719	1					
ANR	1109917	Argument	"""|%04d"""		1109719	0					
ANR	1109918	PrimaryExpression	"""|%04d"""		1109719	0					
ANR	1109919	Argument	inst_buf [ i ] . line		1109719	1					
ANR	1109920	MemberAccess	inst_buf [ i ] . line		1109719	0					
ANR	1109921	ArrayIndexing	inst_buf [ i ]		1109719	0					
ANR	1109922	Identifier	inst_buf		1109719	0					
ANR	1109923	Identifier	i		1109719	1					
ANR	1109924	Identifier	line		1109719	1					
ANR	1109925	IfStatement	if ( inst_buf_index == 3 )		1109719	1					
ANR	1109926	Condition	inst_buf_index == 3	676:6:21699:21717	1109719	0	True				
ANR	1109927	EqualityExpression	inst_buf_index == 3		1109719	0		==			
ANR	1109928	Identifier	inst_buf_index		1109719	0					
ANR	1109929	PrimaryExpression	3		1109719	1					
ANR	1109930	ExpressionStatement	"printf ( ""|M1|:\\t"" )"	677:3:21723:21740	1109719	1	True				
ANR	1109931	CallExpression	"printf ( ""|M1|:\\t"" )"		1109719	0					
ANR	1109932	Callee	printf		1109719	0					
ANR	1109933	Identifier	printf		1109719	0					
ANR	1109934	ArgumentList	"""|M1|:\\t"""		1109719	1					
ANR	1109935	Argument	"""|M1|:\\t"""		1109719	0					
ANR	1109936	PrimaryExpression	"""|M1|:\\t"""		1109719	0					
ANR	1109937	ElseStatement	else		1109719	0					
ANR	1109938	ExpressionStatement	"printf ( ""|M1|:\\t\\t"" )"	679:3:21752:21771	1109719	0	True				
ANR	1109939	CallExpression	"printf ( ""|M1|:\\t\\t"" )"		1109719	0					
ANR	1109940	Callee	printf		1109719	0					
ANR	1109941	Identifier	printf		1109719	0					
ANR	1109942	ArgumentList	"""|M1|:\\t\\t"""		1109719	1					
ANR	1109943	Argument	"""|M1|:\\t\\t"""		1109719	0					
ANR	1109944	PrimaryExpression	"""|M1|:\\t\\t"""		1109719	0					
ANR	1109945	ExpressionStatement	print_insn_tilegx ( & bits )	680:2:21775:21799	1109719	2	True				
ANR	1109946	CallExpression	print_insn_tilegx ( & bits )		1109719	0					
ANR	1109947	Callee	print_insn_tilegx		1109719	0					
ANR	1109948	Identifier	print_insn_tilegx		1109719	0					
ANR	1109949	ArgumentList	& bits		1109719	1					
ANR	1109950	Argument	& bits		1109719	0					
ANR	1109951	UnaryOperationExpression	& bits		1109719	0					
ANR	1109952	UnaryOperator	&		1109719	0					
ANR	1109953	Identifier	bits		1109719	1					
ANR	1109954	IfStatement	if ( ( orig_index - 1 ) == 2 )		1109719	3					
ANR	1109955	Condition	( orig_index - 1 ) == 2	683:6:21815:21835	1109719	0	True				
ANR	1109956	EqualityExpression	( orig_index - 1 ) == 2		1109719	0		==			
ANR	1109957	AdditiveExpression	orig_index - 1		1109719	0		-			
ANR	1109958	Identifier	orig_index		1109719	0					
ANR	1109959	PrimaryExpression	1		1109719	1					
ANR	1109960	PrimaryExpression	2		1109719	1					
ANR	1109961	CompoundStatement		59:29:1451:1451	1109719	1					
ANR	1109962	ExpressionStatement	inst_buf [ 0 ] = inst2	684:3:21843:21862	1109719	0	True				
ANR	1109963	AssignmentExpression	inst_buf [ 0 ] = inst2		1109719	0		=			
ANR	1109964	ArrayIndexing	inst_buf [ 0 ]		1109719	0					
ANR	1109965	Identifier	inst_buf		1109719	0					
ANR	1109966	PrimaryExpression	0		1109719	1					
ANR	1109967	Identifier	inst2		1109719	1					
ANR	1109968	ExpressionStatement	inst_buf_index = 1	685:3:21867:21885	1109719	1	True				
ANR	1109969	AssignmentExpression	inst_buf_index = 1		1109719	0		=			
ANR	1109970	Identifier	inst_buf_index		1109719	0					
ANR	1109971	PrimaryExpression	1		1109719	1					
ANR	1109972	ElseStatement	else		1109719	0					
ANR	1109973	IfStatement	if ( ( orig_index - 1 ) == 1 )		1109719	0					
ANR	1109974	Condition	( orig_index - 1 ) == 1	686:13:21900:21920	1109719	0	True				
ANR	1109975	EqualityExpression	( orig_index - 1 ) == 1		1109719	0		==			
ANR	1109976	AdditiveExpression	orig_index - 1		1109719	0		-			
ANR	1109977	Identifier	orig_index		1109719	0					
ANR	1109978	PrimaryExpression	1		1109719	1					
ANR	1109979	PrimaryExpression	1		1109719	1					
ANR	1109980	CompoundStatement		62:36:1536:1536	1109719	1					
ANR	1109981	ExpressionStatement	inst_buf [ 0 ] = inst1	687:3:21928:21947	1109719	0	True				
ANR	1109982	AssignmentExpression	inst_buf [ 0 ] = inst1		1109719	0		=			
ANR	1109983	ArrayIndexing	inst_buf [ 0 ]		1109719	0					
ANR	1109984	Identifier	inst_buf		1109719	0					
ANR	1109985	PrimaryExpression	0		1109719	1					
ANR	1109986	Identifier	inst1		1109719	1					
ANR	1109987	ExpressionStatement	inst_buf_index = 1	688:3:21952:21970	1109719	1	True				
ANR	1109988	AssignmentExpression	inst_buf_index = 1		1109719	0		=			
ANR	1109989	Identifier	inst_buf_index		1109719	0					
ANR	1109990	PrimaryExpression	1		1109719	1					
ANR	1109991	ElseStatement	else		1109719	0					
ANR	1109992	ExpressionStatement	SLJIT_ASSERT_STOP ( )	690:3:21984:22003	1109719	0	True				
ANR	1109993	CallExpression	SLJIT_ASSERT_STOP ( )		1109719	0					
ANR	1109994	Callee	SLJIT_ASSERT_STOP		1109719	0					
ANR	1109995	Identifier	SLJIT_ASSERT_STOP		1109719	0					
ANR	1109996	ArgumentList			1109719	1					
ANR	1109997	ReturnStatement	"return push_inst_nodebug ( compiler , bits ) ;"	693:2:22032:22072	1109719	4	True				
ANR	1109998	CallExpression	"push_inst_nodebug ( compiler , bits )"		1109719	0					
ANR	1109999	Callee	push_inst_nodebug		1109719	0					
ANR	1110000	Identifier	push_inst_nodebug		1109719	0					
ANR	1110001	ArgumentList	compiler		1109719	1					
ANR	1110002	Argument	compiler		1109719	0					
ANR	1110003	Identifier	compiler		1109719	0					
ANR	1110004	Argument	bits		1109719	1					
ANR	1110005	Identifier	bits		1109719	0					
ANR	1110006	ElseStatement	else		1109719	0					
ANR	1110007	CompoundStatement		73:8:1744:1744	1109719	0					
ANR	1110008	ExpressionStatement	inst_buf_index = 1	701:2:22346:22364	1109719	0	True				
ANR	1110009	AssignmentExpression	inst_buf_index = 1		1109719	0		=			
ANR	1110010	Identifier	inst_buf_index		1109719	0					
ANR	1110011	PrimaryExpression	1		1109719	1					
ANR	1110012	ExpressionStatement	inst_buf [ 0 ] = inst0	702:2:22368:22387	1109719	1	True				
ANR	1110013	AssignmentExpression	inst_buf [ 0 ] = inst0		1109719	0		=			
ANR	1110014	ArrayIndexing	inst_buf [ 0 ]		1109719	0					
ANR	1110015	Identifier	inst_buf		1109719	0					
ANR	1110016	PrimaryExpression	0		1109719	1					
ANR	1110017	Identifier	inst0		1109719	1					
ANR	1110018	ExpressionStatement	inst_buf [ 1 ] = inst1	703:2:22391:22410	1109719	2	True				
ANR	1110019	AssignmentExpression	inst_buf [ 1 ] = inst1		1109719	0		=			
ANR	1110020	ArrayIndexing	inst_buf [ 1 ]		1109719	0					
ANR	1110021	Identifier	inst_buf		1109719	0					
ANR	1110022	PrimaryExpression	1		1109719	1					
ANR	1110023	Identifier	inst1		1109719	1					
ANR	1110024	ExpressionStatement	inst_buf [ 2 ] = inst2	704:2:22414:22433	1109719	3	True				
ANR	1110025	AssignmentExpression	inst_buf [ 2 ] = inst2		1109719	0		=			
ANR	1110026	ArrayIndexing	inst_buf [ 2 ]		1109719	0					
ANR	1110027	Identifier	inst_buf		1109719	0					
ANR	1110028	PrimaryExpression	2		1109719	1					
ANR	1110029	Identifier	inst2		1109719	1					
ANR	1110030	IfStatement	if ( assign_pipes ( ) == 0 )		1109719	4					
ANR	1110031	Condition	assign_pipes ( ) == 0	705:6:22441:22459	1109719	0	True				
ANR	1110032	EqualityExpression	assign_pipes ( ) == 0		1109719	0		==			
ANR	1110033	CallExpression	assign_pipes ( )		1109719	0					
ANR	1110034	Callee	assign_pipes		1109719	0					
ANR	1110035	Identifier	assign_pipes		1109719	0					
ANR	1110036	ArgumentList			1109719	1					
ANR	1110037	PrimaryExpression	0		1109719	1					
ANR	1110038	CompoundStatement		81:27:2075:2075	1109719	1					
ANR	1110039	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1109719	0					
ANR	1110040	ForInit	i = 0 ;	706:8:22472:22477	1109719	0	True				
ANR	1110041	AssignmentExpression	i = 0		1109719	0		=			
ANR	1110042	Identifier	i		1109719	0					
ANR	1110043	PrimaryExpression	0		1109719	1					
ANR	1110044	Condition	i < inst_buf_index	706:15:22479:22496	1109719	1	True				
ANR	1110045	RelationalExpression	i < inst_buf_index		1109719	0		<			
ANR	1110046	Identifier	i		1109719	0					
ANR	1110047	Identifier	inst_buf_index		1109719	1					
ANR	1110048	PostIncDecOperationExpression	i ++	706:35:22499:22501	1109719	2	True				
ANR	1110049	Identifier	i		1109719	0					
ANR	1110050	IncDec	++		1109719	1					
ANR	1110051	CompoundStatement		82:40:2117:2117	1109719	3					
ANR	1110052	ExpressionStatement	bits |= get_bundle_bit ( inst_buf + i )	707:4:22510:22546	1109719	0	True				
ANR	1110053	AssignmentExpression	bits |= get_bundle_bit ( inst_buf + i )		1109719	0		|=			
ANR	1110054	Identifier	bits		1109719	0					
ANR	1110055	CallExpression	get_bundle_bit ( inst_buf + i )		1109719	1					
ANR	1110056	Callee	get_bundle_bit		1109719	0					
ANR	1110057	Identifier	get_bundle_bit		1109719	0					
ANR	1110058	ArgumentList	inst_buf + i		1109719	1					
ANR	1110059	Argument	inst_buf + i		1109719	0					
ANR	1110060	AdditiveExpression	inst_buf + i		1109719	0		+			
ANR	1110061	Identifier	inst_buf		1109719	0					
ANR	1110062	Identifier	i		1109719	1					
ANR	1110063	ExpressionStatement	"printf ( ""|%04d"" , inst_buf [ i ] . line )"	709:4:22576:22609	1109719	1	True				
ANR	1110064	CallExpression	"printf ( ""|%04d"" , inst_buf [ i ] . line )"		1109719	0					
ANR	1110065	Callee	printf		1109719	0					
ANR	1110066	Identifier	printf		1109719	0					
ANR	1110067	ArgumentList	"""|%04d"""		1109719	1					
ANR	1110068	Argument	"""|%04d"""		1109719	0					
ANR	1110069	PrimaryExpression	"""|%04d"""		1109719	0					
ANR	1110070	Argument	inst_buf [ i ] . line		1109719	1					
ANR	1110071	MemberAccess	inst_buf [ i ] . line		1109719	0					
ANR	1110072	ArrayIndexing	inst_buf [ i ]		1109719	0					
ANR	1110073	Identifier	inst_buf		1109719	0					
ANR	1110074	Identifier	i		1109719	1					
ANR	1110075	Identifier	line		1109719	1					
ANR	1110076	IfStatement	if ( inst_buf_index == 3 )		1109719	1					
ANR	1110077	Condition	inst_buf_index == 3	714:7:22655:22673	1109719	0	True				
ANR	1110078	EqualityExpression	inst_buf_index == 3		1109719	0		==			
ANR	1110079	Identifier	inst_buf_index		1109719	0					
ANR	1110080	PrimaryExpression	3		1109719	1					
ANR	1110081	ExpressionStatement	"printf ( ""|M2|:\\t"" )"	715:4:22680:22697	1109719	1	True				
ANR	1110082	CallExpression	"printf ( ""|M2|:\\t"" )"		1109719	0					
ANR	1110083	Callee	printf		1109719	0					
ANR	1110084	Identifier	printf		1109719	0					
ANR	1110085	ArgumentList	"""|M2|:\\t"""		1109719	1					
ANR	1110086	Argument	"""|M2|:\\t"""		1109719	0					
ANR	1110087	PrimaryExpression	"""|M2|:\\t"""		1109719	0					
ANR	1110088	ElseStatement	else		1109719	0					
ANR	1110089	ExpressionStatement	"printf ( ""|M2|:\\t\\t"" )"	717:4:22711:22730	1109719	0	True				
ANR	1110090	CallExpression	"printf ( ""|M2|:\\t\\t"" )"		1109719	0					
ANR	1110091	Callee	printf		1109719	0					
ANR	1110092	Identifier	printf		1109719	0					
ANR	1110093	ArgumentList	"""|M2|:\\t\\t"""		1109719	1					
ANR	1110094	Argument	"""|M2|:\\t\\t"""		1109719	0					
ANR	1110095	PrimaryExpression	"""|M2|:\\t\\t"""		1109719	0					
ANR	1110096	ExpressionStatement	print_insn_tilegx ( & bits )	718:3:22735:22759	1109719	2	True				
ANR	1110097	CallExpression	print_insn_tilegx ( & bits )		1109719	0					
ANR	1110098	Callee	print_insn_tilegx		1109719	0					
ANR	1110099	Identifier	print_insn_tilegx		1109719	0					
ANR	1110100	ArgumentList	& bits		1109719	1					
ANR	1110101	Argument	& bits		1109719	0					
ANR	1110102	UnaryOperationExpression	& bits		1109719	0					
ANR	1110103	UnaryOperator	&		1109719	0					
ANR	1110104	Identifier	bits		1109719	1					
ANR	1110105	ExpressionStatement	inst_buf [ 0 ] = inst1	721:3:22772:22791	1109719	3	True				
ANR	1110106	AssignmentExpression	inst_buf [ 0 ] = inst1		1109719	0		=			
ANR	1110107	ArrayIndexing	inst_buf [ 0 ]		1109719	0					
ANR	1110108	Identifier	inst_buf		1109719	0					
ANR	1110109	PrimaryExpression	0		1109719	1					
ANR	1110110	Identifier	inst1		1109719	1					
ANR	1110111	ExpressionStatement	inst_buf [ 1 ] = inst2	722:3:22796:22815	1109719	4	True				
ANR	1110112	AssignmentExpression	inst_buf [ 1 ] = inst2		1109719	0		=			
ANR	1110113	ArrayIndexing	inst_buf [ 1 ]		1109719	0					
ANR	1110114	Identifier	inst_buf		1109719	0					
ANR	1110115	PrimaryExpression	1		1109719	1					
ANR	1110116	Identifier	inst2		1109719	1					
ANR	1110117	ExpressionStatement	inst_buf_index = orig_index - 1	723:3:22820:22851	1109719	5	True				
ANR	1110118	AssignmentExpression	inst_buf_index = orig_index - 1		1109719	0		=			
ANR	1110119	Identifier	inst_buf_index		1109719	0					
ANR	1110120	AdditiveExpression	orig_index - 1		1109719	1		-			
ANR	1110121	Identifier	orig_index		1109719	0					
ANR	1110122	PrimaryExpression	1		1109719	1					
ANR	1110123	ReturnStatement	"return push_inst_nodebug ( compiler , bits ) ;"	725:3:22880:22920	1109719	6	True				
ANR	1110124	CallExpression	"push_inst_nodebug ( compiler , bits )"		1109719	0					
ANR	1110125	Callee	push_inst_nodebug		1109719	0					
ANR	1110126	Identifier	push_inst_nodebug		1109719	0					
ANR	1110127	ArgumentList	compiler		1109719	1					
ANR	1110128	Argument	compiler		1109719	0					
ANR	1110129	Identifier	compiler		1109719	0					
ANR	1110130	Argument	bits		1109719	1					
ANR	1110131	Identifier	bits		1109719	0					
ANR	1110132	ElseStatement	else		1109719	0					
ANR	1110133	ExpressionStatement	SLJIT_ASSERT_STOP ( )	730:3:22984:23003	1109719	0	True				
ANR	1110134	CallExpression	SLJIT_ASSERT_STOP ( )		1109719	0					
ANR	1110135	Callee	SLJIT_ASSERT_STOP		1109719	0					
ANR	1110136	Identifier	SLJIT_ASSERT_STOP		1109719	0					
ANR	1110137	ArgumentList			1109719	1					
ANR	1110138	ExpressionStatement	SLJIT_ASSERT_STOP ( )	733:1:23010:23029	1109719	12	True				
ANR	1110139	CallExpression	SLJIT_ASSERT_STOP ( )		1109719	0					
ANR	1110140	Callee	SLJIT_ASSERT_STOP		1109719	0					
ANR	1110141	Identifier	SLJIT_ASSERT_STOP		1109719	0					
ANR	1110142	ArgumentList			1109719	1					
ANR	1110143	ReturnType	static sljit_si		1109719	1					
ANR	1110144	Identifier	update_buffer		1109719	2					
ANR	1110145	ParameterList	struct sljit_compiler * compiler		1109719	3					
ANR	1110146	Parameter	struct sljit_compiler * compiler	624:30:20353:20383	1109719	0	True				
ANR	1110147	ParameterType	struct sljit_compiler *		1109719	0					
ANR	1110148	Identifier	compiler		1109719	1					
ANR	1110149	CFGEntryNode	ENTRY		1109719		True				
ANR	1110150	CFGExitNode	EXIT		1109719		True				
ANR	1110151	Symbol	push_inst_nodebug		1109719						
ANR	1110152	Symbol	bits		1109719						
ANR	1110153	Symbol	i		1109719						
ANR	1110154	Symbol	& bits		1109719						
ANR	1110155	Symbol	assign_pipes		1109719						
ANR	1110156	Symbol	inst_buf_index		1109719						
ANR	1110157	Symbol	inst_buf		1109719						
ANR	1110158	Symbol	inst_buf [ i ] . line		1109719						
ANR	1110159	Symbol	inst1		1109719						
ANR	1110160	Symbol	inst0		1109719						
ANR	1110161	Symbol	orig_index		1109719						
ANR	1110162	Symbol	* i		1109719						
ANR	1110163	Symbol	inst2		1109719						
ANR	1110164	Symbol	compiler		1109719						
ANR	1110165	Symbol	* inst_buf		1109719						
ANR	1110166	Symbol	get_bundle_bit		1109719						
ANR	1110167	Function	flush_buffer	736:0:23034:23191							
ANR	1110168	FunctionDef	flush_buffer (struct sljit_compiler * compiler)		1110167	0					
ANR	1110169	CompoundStatement		737:0:23096:23191	1110167	0					
ANR	1110170	WhileStatement	while ( inst_buf_index != 0 )		1110167	0					
ANR	1110171	Condition	inst_buf_index != 0	738:8:23106:23124	1110167	0	True				
ANR	1110172	EqualityExpression	inst_buf_index != 0		1110167	0		!=			
ANR	1110173	Identifier	inst_buf_index		1110167	0					
ANR	1110174	PrimaryExpression	0		1110167	1					
ANR	1110175	CompoundStatement		2:29:30:30	1110167	1					
ANR	1110176	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	739:2:23131:23163	1110167	0	True				
ANR	1110177	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1110167	0					
ANR	1110178	Callee	FAIL_IF		1110167	0					
ANR	1110179	Identifier	FAIL_IF		1110167	0					
ANR	1110180	ArgumentList	update_buffer ( compiler )		1110167	1					
ANR	1110181	Argument	update_buffer ( compiler )		1110167	0					
ANR	1110182	CallExpression	update_buffer ( compiler )		1110167	0					
ANR	1110183	Callee	update_buffer		1110167	0					
ANR	1110184	Identifier	update_buffer		1110167	0					
ANR	1110185	ArgumentList	compiler		1110167	1					
ANR	1110186	Argument	compiler		1110167	0					
ANR	1110187	Identifier	compiler		1110167	0					
ANR	1110188	ReturnStatement	return SLJIT_SUCCESS ;	741:1:23169:23189	1110167	1	True				
ANR	1110189	Identifier	SLJIT_SUCCESS		1110167	0					
ANR	1110190	ReturnType	static sljit_si		1110167	1					
ANR	1110191	Identifier	flush_buffer		1110167	2					
ANR	1110192	ParameterList	struct sljit_compiler * compiler		1110167	3					
ANR	1110193	Parameter	struct sljit_compiler * compiler	736:29:23063:23093	1110167	0	True				
ANR	1110194	ParameterType	struct sljit_compiler *		1110167	0					
ANR	1110195	Identifier	compiler		1110167	1					
ANR	1110196	CFGEntryNode	ENTRY		1110167		True				
ANR	1110197	CFGExitNode	EXIT		1110167		True				
ANR	1110198	Symbol	SLJIT_SUCCESS		1110167						
ANR	1110199	Symbol	compiler		1110167						
ANR	1110200	Symbol	update_buffer		1110167						
ANR	1110201	Symbol	inst_buf_index		1110167						
ANR	1110202	Function	push_4_buffer	744:0:23194:23979							
ANR	1110203	FunctionDef	"push_4_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int op3 , int line)"		1110202	0					
ANR	1110204	CompoundStatement		745:0:23324:23979	1110202	0					
ANR	1110205	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1110202	0					
ANR	1110206	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	746:5:23331:23382	1110202	0	True				
ANR	1110207	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110202	0		==			
ANR	1110208	Identifier	inst_buf_index		1110202	0					
ANR	1110209	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110202	1					
ANR	1110210	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	747:2:23387:23419	1110202	1	True				
ANR	1110211	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1110202	0					
ANR	1110212	Callee	FAIL_IF		1110202	0					
ANR	1110213	Identifier	FAIL_IF		1110202	0					
ANR	1110214	ArgumentList	update_buffer ( compiler )		1110202	1					
ANR	1110215	Argument	update_buffer ( compiler )		1110202	0					
ANR	1110216	CallExpression	update_buffer ( compiler )		1110202	0					
ANR	1110217	Callee	update_buffer		1110202	0					
ANR	1110218	Identifier	update_buffer		1110202	0					
ANR	1110219	ArgumentList	compiler		1110202	1					
ANR	1110220	Argument	compiler		1110202	0					
ANR	1110221	Identifier	compiler		1110202	0					
ANR	1110222	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	749:1:23423:23480	1110202	1	True				
ANR	1110223	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1110202	0					
ANR	1110224	IdentifierDeclType	const struct tilegx_opcode *		1110202	0					
ANR	1110225	Identifier	opcode		1110202	1					
ANR	1110226	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1110202	2		=			
ANR	1110227	Identifier	opcode		1110202	0					
ANR	1110228	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1110202	1					
ANR	1110229	UnaryOperator	&		1110202	0					
ANR	1110230	ArrayIndexing	tilegx_opcodes [ opc ]		1110202	1					
ANR	1110231	Identifier	tilegx_opcodes		1110202	0					
ANR	1110232	Identifier	opc		1110202	1					
ANR	1110233	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	750:1:23483:23523	1110202	2	True				
ANR	1110234	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1110202	0		=			
ANR	1110235	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1110202	0					
ANR	1110236	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110237	Identifier	inst_buf		1110202	0					
ANR	1110238	Identifier	inst_buf_index		1110202	1					
ANR	1110239	Identifier	opcode		1110202	1					
ANR	1110240	Identifier	opcode		1110202	1					
ANR	1110241	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	751:1:23526:23584	1110202	3	True				
ANR	1110242	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1110202	0		=			
ANR	1110243	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1110202	0					
ANR	1110244	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110245	Identifier	inst_buf		1110202	0					
ANR	1110246	Identifier	inst_buf_index		1110202	1					
ANR	1110247	Identifier	pipe		1110202	1					
ANR	1110248	CallExpression	get_any_valid_pipe ( opcode )		1110202	1					
ANR	1110249	Callee	get_any_valid_pipe		1110202	0					
ANR	1110250	Identifier	get_any_valid_pipe		1110202	0					
ANR	1110251	ArgumentList	opcode		1110202	1					
ANR	1110252	Argument	opcode		1110202	0					
ANR	1110253	Identifier	opcode		1110202	0					
ANR	1110254	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	752:1:23587:23634	1110202	4	True				
ANR	1110255	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1110202	0		=			
ANR	1110256	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1110202	0					
ANR	1110257	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110202	0					
ANR	1110258	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110259	Identifier	inst_buf		1110202	0					
ANR	1110260	Identifier	inst_buf_index		1110202	1					
ANR	1110261	Identifier	operand_value		1110202	1					
ANR	1110262	PrimaryExpression	0		1110202	1					
ANR	1110263	Identifier	op0		1110202	1					
ANR	1110264	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1	753:1:23637:23684	1110202	5	True				
ANR	1110265	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1		1110202	0		=			
ANR	1110266	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 1 ]		1110202	0					
ANR	1110267	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110202	0					
ANR	1110268	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110269	Identifier	inst_buf		1110202	0					
ANR	1110270	Identifier	inst_buf_index		1110202	1					
ANR	1110271	Identifier	operand_value		1110202	1					
ANR	1110272	PrimaryExpression	1		1110202	1					
ANR	1110273	Identifier	op1		1110202	1					
ANR	1110274	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2	754:1:23687:23734	1110202	6	True				
ANR	1110275	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2		1110202	0		=			
ANR	1110276	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 2 ]		1110202	0					
ANR	1110277	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110202	0					
ANR	1110278	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110279	Identifier	inst_buf		1110202	0					
ANR	1110280	Identifier	inst_buf_index		1110202	1					
ANR	1110281	Identifier	operand_value		1110202	1					
ANR	1110282	PrimaryExpression	2		1110202	1					
ANR	1110283	Identifier	op2		1110202	1					
ANR	1110284	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 3 ] = op3	755:1:23737:23784	1110202	7	True				
ANR	1110285	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 3 ] = op3		1110202	0		=			
ANR	1110286	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 3 ]		1110202	0					
ANR	1110287	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110202	0					
ANR	1110288	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110289	Identifier	inst_buf		1110202	0					
ANR	1110290	Identifier	inst_buf_index		1110202	1					
ANR	1110291	Identifier	operand_value		1110202	1					
ANR	1110292	PrimaryExpression	3		1110202	1					
ANR	1110293	Identifier	op3		1110202	1					
ANR	1110294	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	756:1:23787:23839	1110202	8	True				
ANR	1110295	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1110202	0		=			
ANR	1110296	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110202	0					
ANR	1110297	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110298	Identifier	inst_buf		1110202	0					
ANR	1110299	Identifier	inst_buf_index		1110202	1					
ANR	1110300	Identifier	input_registers		1110202	1					
ANR	1110301	ShiftExpression	1L << op1		1110202	1		<<			
ANR	1110302	PrimaryExpression	1L		1110202	0					
ANR	1110303	Identifier	op1		1110202	1					
ANR	1110304	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	757:1:23842:23895	1110202	9	True				
ANR	1110305	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1110202	0		=			
ANR	1110306	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110202	0					
ANR	1110307	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110308	Identifier	inst_buf		1110202	0					
ANR	1110309	Identifier	inst_buf_index		1110202	1					
ANR	1110310	Identifier	output_registers		1110202	1					
ANR	1110311	ShiftExpression	1L << op0		1110202	1		<<			
ANR	1110312	PrimaryExpression	1L		1110202	0					
ANR	1110313	Identifier	op0		1110202	1					
ANR	1110314	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	758:1:23898:23934	1110202	10	True				
ANR	1110315	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1110202	0		=			
ANR	1110316	MemberAccess	inst_buf [ inst_buf_index ] . line		1110202	0					
ANR	1110317	ArrayIndexing	inst_buf [ inst_buf_index ]		1110202	0					
ANR	1110318	Identifier	inst_buf		1110202	0					
ANR	1110319	Identifier	inst_buf_index		1110202	1					
ANR	1110320	Identifier	line		1110202	1					
ANR	1110321	Identifier	line		1110202	1					
ANR	1110322	ExpressionStatement	inst_buf_index ++	759:1:23937:23953	1110202	11	True				
ANR	1110323	PostIncDecOperationExpression	inst_buf_index ++		1110202	0					
ANR	1110324	Identifier	inst_buf_index		1110202	0					
ANR	1110325	IncDec	++		1110202	1					
ANR	1110326	ReturnStatement	return SLJIT_SUCCESS ;	761:1:23957:23977	1110202	12	True				
ANR	1110327	Identifier	SLJIT_SUCCESS		1110202	0					
ANR	1110328	ReturnType	static sljit_si		1110202	1					
ANR	1110329	Identifier	push_4_buffer		1110202	2					
ANR	1110330	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int op3 , int line"		1110202	3					
ANR	1110331	Parameter	struct sljit_compiler * compiler	744:30:23224:23254	1110202	0	True				
ANR	1110332	ParameterType	struct sljit_compiler *		1110202	0					
ANR	1110333	Identifier	compiler		1110202	1					
ANR	1110334	Parameter	tilegx_mnemonic opc	744:63:23257:23275	1110202	1	True				
ANR	1110335	ParameterType	tilegx_mnemonic		1110202	0					
ANR	1110336	Identifier	opc		1110202	1					
ANR	1110337	Parameter	int op0	744:84:23278:23284	1110202	2	True				
ANR	1110338	ParameterType	int		1110202	0					
ANR	1110339	Identifier	op0		1110202	1					
ANR	1110340	Parameter	int op1	744:93:23287:23293	1110202	3	True				
ANR	1110341	ParameterType	int		1110202	0					
ANR	1110342	Identifier	op1		1110202	1					
ANR	1110343	Parameter	int op2	744:102:23296:23302	1110202	4	True				
ANR	1110344	ParameterType	int		1110202	0					
ANR	1110345	Identifier	op2		1110202	1					
ANR	1110346	Parameter	int op3	744:111:23305:23311	1110202	5	True				
ANR	1110347	ParameterType	int		1110202	0					
ANR	1110348	Identifier	op3		1110202	1					
ANR	1110349	Parameter	int line	744:120:23314:23321	1110202	6	True				
ANR	1110350	ParameterType	int		1110202	0					
ANR	1110351	Identifier	line		1110202	1					
ANR	1110352	CFGEntryNode	ENTRY		1110202		True				
ANR	1110353	CFGExitNode	EXIT		1110202		True				
ANR	1110354	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1110202						
ANR	1110355	Symbol	line		1110202						
ANR	1110356	Symbol	opcode		1110202						
ANR	1110357	Symbol	* * inst_buf		1110202						
ANR	1110358	Symbol	* * inst_buf_index		1110202						
ANR	1110359	Symbol	compiler		1110202						
ANR	1110360	Symbol	update_buffer		1110202						
ANR	1110361	Symbol	* inst_buf		1110202						
ANR	1110362	Symbol	inst_buf [ inst_buf_index ] . input_registers		1110202						
ANR	1110363	Symbol	inst_buf [ inst_buf_index ] . operand_value		1110202						
ANR	1110364	Symbol	inst_buf [ inst_buf_index ] . pipe		1110202						
ANR	1110365	Symbol	opc		1110202						
ANR	1110366	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110202						
ANR	1110367	Symbol	SLJIT_SUCCESS		1110202						
ANR	1110368	Symbol	op0		1110202						
ANR	1110369	Symbol	inst_buf_index		1110202						
ANR	1110370	Symbol	inst_buf		1110202						
ANR	1110371	Symbol	op2		1110202						
ANR	1110372	Symbol	op1		1110202						
ANR	1110373	Symbol	inst_buf [ inst_buf_index ] . opcode		1110202						
ANR	1110374	Symbol	op3		1110202						
ANR	1110375	Symbol	tilegx_opcodes		1110202						
ANR	1110376	Symbol	inst_buf [ inst_buf_index ] . output_registers		1110202						
ANR	1110377	Symbol	inst_buf [ inst_buf_index ] . line		1110202						
ANR	1110378	Symbol	* inst_buf_index		1110202						
ANR	1110379	Symbol	get_any_valid_pipe		1110202						
ANR	1110380	Function	push_3_buffer	764:0:23982:25832							
ANR	1110381	FunctionDef	"push_3_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int line)"		1110380	0					
ANR	1110382	CompoundStatement		765:0:24103:25832	1110380	0					
ANR	1110383	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1110380	0					
ANR	1110384	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	766:5:24110:24161	1110380	0	True				
ANR	1110385	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110380	0		==			
ANR	1110386	Identifier	inst_buf_index		1110380	0					
ANR	1110387	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110380	1					
ANR	1110388	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	767:2:24166:24198	1110380	1	True				
ANR	1110389	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1110380	0					
ANR	1110390	Callee	FAIL_IF		1110380	0					
ANR	1110391	Identifier	FAIL_IF		1110380	0					
ANR	1110392	ArgumentList	update_buffer ( compiler )		1110380	1					
ANR	1110393	Argument	update_buffer ( compiler )		1110380	0					
ANR	1110394	CallExpression	update_buffer ( compiler )		1110380	0					
ANR	1110395	Callee	update_buffer		1110380	0					
ANR	1110396	Identifier	update_buffer		1110380	0					
ANR	1110397	ArgumentList	compiler		1110380	1					
ANR	1110398	Argument	compiler		1110380	0					
ANR	1110399	Identifier	compiler		1110380	0					
ANR	1110400	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	769:1:24202:24259	1110380	1	True				
ANR	1110401	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1110380	0					
ANR	1110402	IdentifierDeclType	const struct tilegx_opcode *		1110380	0					
ANR	1110403	Identifier	opcode		1110380	1					
ANR	1110404	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1110380	2		=			
ANR	1110405	Identifier	opcode		1110380	0					
ANR	1110406	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1110380	1					
ANR	1110407	UnaryOperator	&		1110380	0					
ANR	1110408	ArrayIndexing	tilegx_opcodes [ opc ]		1110380	1					
ANR	1110409	Identifier	tilegx_opcodes		1110380	0					
ANR	1110410	Identifier	opc		1110380	1					
ANR	1110411	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	770:1:24262:24302	1110380	2	True				
ANR	1110412	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1110380	0		=			
ANR	1110413	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1110380	0					
ANR	1110414	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110415	Identifier	inst_buf		1110380	0					
ANR	1110416	Identifier	inst_buf_index		1110380	1					
ANR	1110417	Identifier	opcode		1110380	1					
ANR	1110418	Identifier	opcode		1110380	1					
ANR	1110419	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	771:1:24305:24363	1110380	3	True				
ANR	1110420	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1110380	0		=			
ANR	1110421	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1110380	0					
ANR	1110422	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110423	Identifier	inst_buf		1110380	0					
ANR	1110424	Identifier	inst_buf_index		1110380	1					
ANR	1110425	Identifier	pipe		1110380	1					
ANR	1110426	CallExpression	get_any_valid_pipe ( opcode )		1110380	1					
ANR	1110427	Callee	get_any_valid_pipe		1110380	0					
ANR	1110428	Identifier	get_any_valid_pipe		1110380	0					
ANR	1110429	ArgumentList	opcode		1110380	1					
ANR	1110430	Argument	opcode		1110380	0					
ANR	1110431	Identifier	opcode		1110380	0					
ANR	1110432	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	772:1:24366:24413	1110380	4	True				
ANR	1110433	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1110380	0		=			
ANR	1110434	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1110380	0					
ANR	1110435	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110380	0					
ANR	1110436	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110437	Identifier	inst_buf		1110380	0					
ANR	1110438	Identifier	inst_buf_index		1110380	1					
ANR	1110439	Identifier	operand_value		1110380	1					
ANR	1110440	PrimaryExpression	0		1110380	1					
ANR	1110441	Identifier	op0		1110380	1					
ANR	1110442	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1	773:1:24416:24463	1110380	5	True				
ANR	1110443	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1		1110380	0		=			
ANR	1110444	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 1 ]		1110380	0					
ANR	1110445	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110380	0					
ANR	1110446	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110447	Identifier	inst_buf		1110380	0					
ANR	1110448	Identifier	inst_buf_index		1110380	1					
ANR	1110449	Identifier	operand_value		1110380	1					
ANR	1110450	PrimaryExpression	1		1110380	1					
ANR	1110451	Identifier	op1		1110380	1					
ANR	1110452	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2	774:1:24466:24513	1110380	6	True				
ANR	1110453	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2		1110380	0		=			
ANR	1110454	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 2 ]		1110380	0					
ANR	1110455	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110380	0					
ANR	1110456	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110457	Identifier	inst_buf		1110380	0					
ANR	1110458	Identifier	inst_buf_index		1110380	1					
ANR	1110459	Identifier	operand_value		1110380	1					
ANR	1110460	PrimaryExpression	2		1110380	1					
ANR	1110461	Identifier	op2		1110380	1					
ANR	1110462	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	775:1:24516:24552	1110380	7	True				
ANR	1110463	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1110380	0		=			
ANR	1110464	MemberAccess	inst_buf [ inst_buf_index ] . line		1110380	0					
ANR	1110465	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110466	Identifier	inst_buf		1110380	0					
ANR	1110467	Identifier	inst_buf_index		1110380	1					
ANR	1110468	Identifier	line		1110380	1					
ANR	1110469	Identifier	line		1110380	1					
ANR	1110470	SwitchStatement	switch ( opc )		1110380	8					
ANR	1110471	Condition	opc	777:9:24564:24566	1110380	0	True				
ANR	1110472	Identifier	opc		1110380	0					
ANR	1110473	CompoundStatement		13:14:465:465	1110380	1					
ANR	1110474	Label	case TILEGX_OPC_ST_ADD :	778:1:24572:24594	1110380	0	True				
ANR	1110475	Identifier	TILEGX_OPC_ST_ADD		1110380	0					
ANR	1110476	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )	779:2:24598:24666	1110380	1	True				
ANR	1110477	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )		1110380	0		=			
ANR	1110478	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110380	0					
ANR	1110479	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110480	Identifier	inst_buf		1110380	0					
ANR	1110481	Identifier	inst_buf_index		1110380	1					
ANR	1110482	Identifier	input_registers		1110380	1					
ANR	1110483	InclusiveOrExpression	( 1L << op0 ) | ( 1L << op1 )		1110380	1		|			
ANR	1110484	ShiftExpression	1L << op0		1110380	0		<<			
ANR	1110485	PrimaryExpression	1L		1110380	0					
ANR	1110486	Identifier	op0		1110380	1					
ANR	1110487	ShiftExpression	1L << op1		1110380	1		<<			
ANR	1110488	PrimaryExpression	1L		1110380	0					
ANR	1110489	Identifier	op1		1110380	1					
ANR	1110490	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	780:2:24670:24723	1110380	2	True				
ANR	1110491	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1110380	0		=			
ANR	1110492	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110380	0					
ANR	1110493	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110494	Identifier	inst_buf		1110380	0					
ANR	1110495	Identifier	inst_buf_index		1110380	1					
ANR	1110496	Identifier	output_registers		1110380	1					
ANR	1110497	ShiftExpression	1L << op0		1110380	1		<<			
ANR	1110498	PrimaryExpression	1L		1110380	0					
ANR	1110499	Identifier	op0		1110380	1					
ANR	1110500	BreakStatement	break ;	781:2:24727:24732	1110380	3	True				
ANR	1110501	Label	case TILEGX_OPC_LD_ADD :	782:1:24735:24757	1110380	4	True				
ANR	1110502	Identifier	TILEGX_OPC_LD_ADD		1110380	0					
ANR	1110503	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	783:2:24761:24813	1110380	5	True				
ANR	1110504	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1110380	0		=			
ANR	1110505	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110380	0					
ANR	1110506	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110507	Identifier	inst_buf		1110380	0					
ANR	1110508	Identifier	inst_buf_index		1110380	1					
ANR	1110509	Identifier	input_registers		1110380	1					
ANR	1110510	ShiftExpression	1L << op1		1110380	1		<<			
ANR	1110511	PrimaryExpression	1L		1110380	0					
ANR	1110512	Identifier	op1		1110380	1					
ANR	1110513	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = ( 1L << op0 ) | ( 1L << op1 )	784:2:24817:24886	1110380	6	True				
ANR	1110514	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = ( 1L << op0 ) | ( 1L << op1 )		1110380	0		=			
ANR	1110515	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110380	0					
ANR	1110516	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110517	Identifier	inst_buf		1110380	0					
ANR	1110518	Identifier	inst_buf_index		1110380	1					
ANR	1110519	Identifier	output_registers		1110380	1					
ANR	1110520	InclusiveOrExpression	( 1L << op0 ) | ( 1L << op1 )		1110380	1		|			
ANR	1110521	ShiftExpression	1L << op0		1110380	0		<<			
ANR	1110522	PrimaryExpression	1L		1110380	0					
ANR	1110523	Identifier	op0		1110380	1					
ANR	1110524	ShiftExpression	1L << op1		1110380	1		<<			
ANR	1110525	PrimaryExpression	1L		1110380	0					
ANR	1110526	Identifier	op1		1110380	1					
ANR	1110527	BreakStatement	break ;	785:2:24890:24895	1110380	7	True				
ANR	1110528	Label	case TILEGX_OPC_ADD :	786:1:24898:24917	1110380	8	True				
ANR	1110529	Identifier	TILEGX_OPC_ADD		1110380	0					
ANR	1110530	Label	case TILEGX_OPC_AND :	787:1:24920:24939	1110380	9	True				
ANR	1110531	Identifier	TILEGX_OPC_AND		1110380	0					
ANR	1110532	Label	case TILEGX_OPC_SUB :	788:1:24942:24961	1110380	10	True				
ANR	1110533	Identifier	TILEGX_OPC_SUB		1110380	0					
ANR	1110534	Label	case TILEGX_OPC_MULX :	789:1:24964:24984	1110380	11	True				
ANR	1110535	Identifier	TILEGX_OPC_MULX		1110380	0					
ANR	1110536	Label	case TILEGX_OPC_OR :	790:1:24987:25005	1110380	12	True				
ANR	1110537	Identifier	TILEGX_OPC_OR		1110380	0					
ANR	1110538	Label	case TILEGX_OPC_XOR :	791:1:25008:25027	1110380	13	True				
ANR	1110539	Identifier	TILEGX_OPC_XOR		1110380	0					
ANR	1110540	Label	case TILEGX_OPC_NOR :	792:1:25030:25049	1110380	14	True				
ANR	1110541	Identifier	TILEGX_OPC_NOR		1110380	0					
ANR	1110542	Label	case TILEGX_OPC_SHL :	793:1:25052:25071	1110380	15	True				
ANR	1110543	Identifier	TILEGX_OPC_SHL		1110380	0					
ANR	1110544	Label	case TILEGX_OPC_SHRU :	794:1:25074:25094	1110380	16	True				
ANR	1110545	Identifier	TILEGX_OPC_SHRU		1110380	0					
ANR	1110546	Label	case TILEGX_OPC_SHRS :	795:1:25097:25117	1110380	17	True				
ANR	1110547	Identifier	TILEGX_OPC_SHRS		1110380	0					
ANR	1110548	Label	case TILEGX_OPC_CMPLTU :	796:1:25120:25142	1110380	18	True				
ANR	1110549	Identifier	TILEGX_OPC_CMPLTU		1110380	0					
ANR	1110550	Label	case TILEGX_OPC_CMPLTS :	797:1:25145:25167	1110380	19	True				
ANR	1110551	Identifier	TILEGX_OPC_CMPLTS		1110380	0					
ANR	1110552	Label	case TILEGX_OPC_CMOVEQZ :	798:1:25170:25193	1110380	20	True				
ANR	1110553	Identifier	TILEGX_OPC_CMOVEQZ		1110380	0					
ANR	1110554	Label	case TILEGX_OPC_CMOVNEZ :	799:1:25196:25219	1110380	21	True				
ANR	1110555	Identifier	TILEGX_OPC_CMOVNEZ		1110380	0					
ANR	1110556	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op1 ) | ( 1L << op2 )	800:2:25223:25291	1110380	22	True				
ANR	1110557	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op1 ) | ( 1L << op2 )		1110380	0		=			
ANR	1110558	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110380	0					
ANR	1110559	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110560	Identifier	inst_buf		1110380	0					
ANR	1110561	Identifier	inst_buf_index		1110380	1					
ANR	1110562	Identifier	input_registers		1110380	1					
ANR	1110563	InclusiveOrExpression	( 1L << op1 ) | ( 1L << op2 )		1110380	1		|			
ANR	1110564	ShiftExpression	1L << op1		1110380	0		<<			
ANR	1110565	PrimaryExpression	1L		1110380	0					
ANR	1110566	Identifier	op1		1110380	1					
ANR	1110567	ShiftExpression	1L << op2		1110380	1		<<			
ANR	1110568	PrimaryExpression	1L		1110380	0					
ANR	1110569	Identifier	op2		1110380	1					
ANR	1110570	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	801:2:25295:25348	1110380	23	True				
ANR	1110571	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1110380	0		=			
ANR	1110572	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110380	0					
ANR	1110573	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110574	Identifier	inst_buf		1110380	0					
ANR	1110575	Identifier	inst_buf_index		1110380	1					
ANR	1110576	Identifier	output_registers		1110380	1					
ANR	1110577	ShiftExpression	1L << op0		1110380	1		<<			
ANR	1110578	PrimaryExpression	1L		1110380	0					
ANR	1110579	Identifier	op0		1110380	1					
ANR	1110580	BreakStatement	break ;	802:2:25352:25357	1110380	24	True				
ANR	1110581	Label	case TILEGX_OPC_ADDLI :	803:1:25360:25381	1110380	25	True				
ANR	1110582	Identifier	TILEGX_OPC_ADDLI		1110380	0					
ANR	1110583	Label	case TILEGX_OPC_XORI :	804:1:25384:25404	1110380	26	True				
ANR	1110584	Identifier	TILEGX_OPC_XORI		1110380	0					
ANR	1110585	Label	case TILEGX_OPC_ORI :	805:1:25407:25426	1110380	27	True				
ANR	1110586	Identifier	TILEGX_OPC_ORI		1110380	0					
ANR	1110587	Label	case TILEGX_OPC_SHLI :	806:1:25429:25449	1110380	28	True				
ANR	1110588	Identifier	TILEGX_OPC_SHLI		1110380	0					
ANR	1110589	Label	case TILEGX_OPC_SHRUI :	807:1:25452:25473	1110380	29	True				
ANR	1110590	Identifier	TILEGX_OPC_SHRUI		1110380	0					
ANR	1110591	Label	case TILEGX_OPC_SHRSI :	808:1:25476:25497	1110380	30	True				
ANR	1110592	Identifier	TILEGX_OPC_SHRSI		1110380	0					
ANR	1110593	Label	case TILEGX_OPC_SHL16INSLI :	809:1:25500:25526	1110380	31	True				
ANR	1110594	Identifier	TILEGX_OPC_SHL16INSLI		1110380	0					
ANR	1110595	Label	case TILEGX_OPC_CMPLTUI :	810:1:25529:25552	1110380	32	True				
ANR	1110596	Identifier	TILEGX_OPC_CMPLTUI		1110380	0					
ANR	1110597	Label	case TILEGX_OPC_CMPLTSI :	811:1:25555:25578	1110380	33	True				
ANR	1110598	Identifier	TILEGX_OPC_CMPLTSI		1110380	0					
ANR	1110599	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	812:2:25582:25634	1110380	34	True				
ANR	1110600	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1110380	0		=			
ANR	1110601	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110380	0					
ANR	1110602	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110603	Identifier	inst_buf		1110380	0					
ANR	1110604	Identifier	inst_buf_index		1110380	1					
ANR	1110605	Identifier	input_registers		1110380	1					
ANR	1110606	ShiftExpression	1L << op1		1110380	1		<<			
ANR	1110607	PrimaryExpression	1L		1110380	0					
ANR	1110608	Identifier	op1		1110380	1					
ANR	1110609	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	813:2:25638:25691	1110380	35	True				
ANR	1110610	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1110380	0		=			
ANR	1110611	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110380	0					
ANR	1110612	ArrayIndexing	inst_buf [ inst_buf_index ]		1110380	0					
ANR	1110613	Identifier	inst_buf		1110380	0					
ANR	1110614	Identifier	inst_buf_index		1110380	1					
ANR	1110615	Identifier	output_registers		1110380	1					
ANR	1110616	ShiftExpression	1L << op0		1110380	1		<<			
ANR	1110617	PrimaryExpression	1L		1110380	0					
ANR	1110618	Identifier	op0		1110380	1					
ANR	1110619	BreakStatement	break ;	814:2:25695:25700	1110380	36	True				
ANR	1110620	Label	default :	815:1:25703:25710	1110380	37	True				
ANR	1110621	Identifier	default		1110380	0					
ANR	1110622	ExpressionStatement	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"	816:2:25714:25760	1110380	38	True				
ANR	1110623	CallExpression	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"		1110380	0					
ANR	1110624	Callee	printf		1110380	0					
ANR	1110625	Identifier	printf		1110380	0					
ANR	1110626	ArgumentList	"""unrecoginzed opc: %s\\n"""		1110380	1					
ANR	1110627	Argument	"""unrecoginzed opc: %s\\n"""		1110380	0					
ANR	1110628	PrimaryExpression	"""unrecoginzed opc: %s\\n"""		1110380	0					
ANR	1110629	Argument	opcode -> name		1110380	1					
ANR	1110630	PtrMemberAccess	opcode -> name		1110380	0					
ANR	1110631	Identifier	opcode		1110380	0					
ANR	1110632	Identifier	name		1110380	1					
ANR	1110633	ExpressionStatement	SLJIT_ASSERT_STOP ( )	817:2:25764:25783	1110380	39	True				
ANR	1110634	CallExpression	SLJIT_ASSERT_STOP ( )		1110380	0					
ANR	1110635	Callee	SLJIT_ASSERT_STOP		1110380	0					
ANR	1110636	Identifier	SLJIT_ASSERT_STOP		1110380	0					
ANR	1110637	ArgumentList			1110380	1					
ANR	1110638	ExpressionStatement	inst_buf_index ++	820:1:25790:25806	1110380	9	True				
ANR	1110639	PostIncDecOperationExpression	inst_buf_index ++		1110380	0					
ANR	1110640	Identifier	inst_buf_index		1110380	0					
ANR	1110641	IncDec	++		1110380	1					
ANR	1110642	ReturnStatement	return SLJIT_SUCCESS ;	822:1:25810:25830	1110380	10	True				
ANR	1110643	Identifier	SLJIT_SUCCESS		1110380	0					
ANR	1110644	ReturnType	static sljit_si		1110380	1					
ANR	1110645	Identifier	push_3_buffer		1110380	2					
ANR	1110646	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int line"		1110380	3					
ANR	1110647	Parameter	struct sljit_compiler * compiler	764:30:24012:24042	1110380	0	True				
ANR	1110648	ParameterType	struct sljit_compiler *		1110380	0					
ANR	1110649	Identifier	compiler		1110380	1					
ANR	1110650	Parameter	tilegx_mnemonic opc	764:63:24045:24063	1110380	1	True				
ANR	1110651	ParameterType	tilegx_mnemonic		1110380	0					
ANR	1110652	Identifier	opc		1110380	1					
ANR	1110653	Parameter	int op0	764:84:24066:24072	1110380	2	True				
ANR	1110654	ParameterType	int		1110380	0					
ANR	1110655	Identifier	op0		1110380	1					
ANR	1110656	Parameter	int op1	764:93:24075:24081	1110380	3	True				
ANR	1110657	ParameterType	int		1110380	0					
ANR	1110658	Identifier	op1		1110380	1					
ANR	1110659	Parameter	int op2	764:102:24084:24090	1110380	4	True				
ANR	1110660	ParameterType	int		1110380	0					
ANR	1110661	Identifier	op2		1110380	1					
ANR	1110662	Parameter	int line	764:111:24093:24100	1110380	5	True				
ANR	1110663	ParameterType	int		1110380	0					
ANR	1110664	Identifier	line		1110380	1					
ANR	1110665	CFGEntryNode	ENTRY		1110380		True				
ANR	1110666	CFGExitNode	EXIT		1110380		True				
ANR	1110667	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1110380						
ANR	1110668	Symbol	line		1110380						
ANR	1110669	Symbol	opcode		1110380						
ANR	1110670	Symbol	* * inst_buf		1110380						
ANR	1110671	Symbol	* * inst_buf_index		1110380						
ANR	1110672	Symbol	compiler		1110380						
ANR	1110673	Symbol	update_buffer		1110380						
ANR	1110674	Symbol	* inst_buf		1110380						
ANR	1110675	Symbol	inst_buf [ inst_buf_index ] . input_registers		1110380						
ANR	1110676	Symbol	inst_buf [ inst_buf_index ] . operand_value		1110380						
ANR	1110677	Symbol	inst_buf [ inst_buf_index ] . pipe		1110380						
ANR	1110678	Symbol	opcode -> name		1110380						
ANR	1110679	Symbol	opc		1110380						
ANR	1110680	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110380						
ANR	1110681	Symbol	SLJIT_SUCCESS		1110380						
ANR	1110682	Symbol	op0		1110380						
ANR	1110683	Symbol	inst_buf_index		1110380						
ANR	1110684	Symbol	inst_buf		1110380						
ANR	1110685	Symbol	op2		1110380						
ANR	1110686	Symbol	op1		1110380						
ANR	1110687	Symbol	inst_buf [ inst_buf_index ] . opcode		1110380						
ANR	1110688	Symbol	tilegx_opcodes		1110380						
ANR	1110689	Symbol	inst_buf [ inst_buf_index ] . output_registers		1110380						
ANR	1110690	Symbol	inst_buf [ inst_buf_index ] . line		1110380						
ANR	1110691	Symbol	* inst_buf_index		1110380						
ANR	1110692	Symbol	get_any_valid_pipe		1110380						
ANR	1110693	Symbol	* opcode		1110380						
ANR	1110694	Function	push_2_buffer	825:0:25835:27126							
ANR	1110695	FunctionDef	"push_2_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int line)"		1110694	0					
ANR	1110696	CompoundStatement		826:0:25947:27126	1110694	0					
ANR	1110697	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1110694	0					
ANR	1110698	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	827:5:25954:26005	1110694	0	True				
ANR	1110699	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110694	0		==			
ANR	1110700	Identifier	inst_buf_index		1110694	0					
ANR	1110701	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110694	1					
ANR	1110702	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	828:2:26010:26042	1110694	1	True				
ANR	1110703	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1110694	0					
ANR	1110704	Callee	FAIL_IF		1110694	0					
ANR	1110705	Identifier	FAIL_IF		1110694	0					
ANR	1110706	ArgumentList	update_buffer ( compiler )		1110694	1					
ANR	1110707	Argument	update_buffer ( compiler )		1110694	0					
ANR	1110708	CallExpression	update_buffer ( compiler )		1110694	0					
ANR	1110709	Callee	update_buffer		1110694	0					
ANR	1110710	Identifier	update_buffer		1110694	0					
ANR	1110711	ArgumentList	compiler		1110694	1					
ANR	1110712	Argument	compiler		1110694	0					
ANR	1110713	Identifier	compiler		1110694	0					
ANR	1110714	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	830:1:26046:26103	1110694	1	True				
ANR	1110715	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1110694	0					
ANR	1110716	IdentifierDeclType	const struct tilegx_opcode *		1110694	0					
ANR	1110717	Identifier	opcode		1110694	1					
ANR	1110718	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1110694	2		=			
ANR	1110719	Identifier	opcode		1110694	0					
ANR	1110720	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1110694	1					
ANR	1110721	UnaryOperator	&		1110694	0					
ANR	1110722	ArrayIndexing	tilegx_opcodes [ opc ]		1110694	1					
ANR	1110723	Identifier	tilegx_opcodes		1110694	0					
ANR	1110724	Identifier	opc		1110694	1					
ANR	1110725	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	831:1:26106:26146	1110694	2	True				
ANR	1110726	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1110694	0		=			
ANR	1110727	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1110694	0					
ANR	1110728	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110729	Identifier	inst_buf		1110694	0					
ANR	1110730	Identifier	inst_buf_index		1110694	1					
ANR	1110731	Identifier	opcode		1110694	1					
ANR	1110732	Identifier	opcode		1110694	1					
ANR	1110733	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	832:1:26149:26207	1110694	3	True				
ANR	1110734	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1110694	0		=			
ANR	1110735	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1110694	0					
ANR	1110736	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110737	Identifier	inst_buf		1110694	0					
ANR	1110738	Identifier	inst_buf_index		1110694	1					
ANR	1110739	Identifier	pipe		1110694	1					
ANR	1110740	CallExpression	get_any_valid_pipe ( opcode )		1110694	1					
ANR	1110741	Callee	get_any_valid_pipe		1110694	0					
ANR	1110742	Identifier	get_any_valid_pipe		1110694	0					
ANR	1110743	ArgumentList	opcode		1110694	1					
ANR	1110744	Argument	opcode		1110694	0					
ANR	1110745	Identifier	opcode		1110694	0					
ANR	1110746	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	833:1:26210:26257	1110694	4	True				
ANR	1110747	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1110694	0		=			
ANR	1110748	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1110694	0					
ANR	1110749	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110694	0					
ANR	1110750	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110751	Identifier	inst_buf		1110694	0					
ANR	1110752	Identifier	inst_buf_index		1110694	1					
ANR	1110753	Identifier	operand_value		1110694	1					
ANR	1110754	PrimaryExpression	0		1110694	1					
ANR	1110755	Identifier	op0		1110694	1					
ANR	1110756	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1	834:1:26260:26307	1110694	5	True				
ANR	1110757	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1		1110694	0		=			
ANR	1110758	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 1 ]		1110694	0					
ANR	1110759	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1110694	0					
ANR	1110760	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110761	Identifier	inst_buf		1110694	0					
ANR	1110762	Identifier	inst_buf_index		1110694	1					
ANR	1110763	Identifier	operand_value		1110694	1					
ANR	1110764	PrimaryExpression	1		1110694	1					
ANR	1110765	Identifier	op1		1110694	1					
ANR	1110766	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	835:1:26310:26346	1110694	6	True				
ANR	1110767	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1110694	0		=			
ANR	1110768	MemberAccess	inst_buf [ inst_buf_index ] . line		1110694	0					
ANR	1110769	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110770	Identifier	inst_buf		1110694	0					
ANR	1110771	Identifier	inst_buf_index		1110694	1					
ANR	1110772	Identifier	line		1110694	1					
ANR	1110773	Identifier	line		1110694	1					
ANR	1110774	SwitchStatement	switch ( opc )		1110694	7					
ANR	1110775	Condition	opc	837:9:26358:26360	1110694	0	True				
ANR	1110776	Identifier	opc		1110694	0					
ANR	1110777	CompoundStatement		12:14:415:415	1110694	1					
ANR	1110778	Label	case TILEGX_OPC_BEQZ :	838:1:26366:26386	1110694	0	True				
ANR	1110779	Identifier	TILEGX_OPC_BEQZ		1110694	0					
ANR	1110780	Label	case TILEGX_OPC_BNEZ :	839:1:26389:26409	1110694	1	True				
ANR	1110781	Identifier	TILEGX_OPC_BNEZ		1110694	0					
ANR	1110782	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op0	840:2:26413:26465	1110694	2	True				
ANR	1110783	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op0		1110694	0		=			
ANR	1110784	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110694	0					
ANR	1110785	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110786	Identifier	inst_buf		1110694	0					
ANR	1110787	Identifier	inst_buf_index		1110694	1					
ANR	1110788	Identifier	input_registers		1110694	1					
ANR	1110789	ShiftExpression	1L << op0		1110694	1		<<			
ANR	1110790	PrimaryExpression	1L		1110694	0					
ANR	1110791	Identifier	op0		1110694	1					
ANR	1110792	BreakStatement	break ;	841:2:26469:26474	1110694	3	True				
ANR	1110793	Label	case TILEGX_OPC_ST :	842:1:26477:26495	1110694	4	True				
ANR	1110794	Identifier	TILEGX_OPC_ST		1110694	0					
ANR	1110795	Label	case TILEGX_OPC_ST1 :	843:1:26498:26517	1110694	5	True				
ANR	1110796	Identifier	TILEGX_OPC_ST1		1110694	0					
ANR	1110797	Label	case TILEGX_OPC_ST2 :	844:1:26520:26539	1110694	6	True				
ANR	1110798	Identifier	TILEGX_OPC_ST2		1110694	0					
ANR	1110799	Label	case TILEGX_OPC_ST4 :	845:1:26542:26561	1110694	7	True				
ANR	1110800	Identifier	TILEGX_OPC_ST4		1110694	0					
ANR	1110801	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )	846:2:26565:26633	1110694	8	True				
ANR	1110802	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )		1110694	0		=			
ANR	1110803	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110694	0					
ANR	1110804	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110805	Identifier	inst_buf		1110694	0					
ANR	1110806	Identifier	inst_buf_index		1110694	1					
ANR	1110807	Identifier	input_registers		1110694	1					
ANR	1110808	InclusiveOrExpression	( 1L << op0 ) | ( 1L << op1 )		1110694	1		|			
ANR	1110809	ShiftExpression	1L << op0		1110694	0		<<			
ANR	1110810	PrimaryExpression	1L		1110694	0					
ANR	1110811	Identifier	op0		1110694	1					
ANR	1110812	ShiftExpression	1L << op1		1110694	1		<<			
ANR	1110813	PrimaryExpression	1L		1110694	0					
ANR	1110814	Identifier	op1		1110694	1					
ANR	1110815	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 0	847:2:26637:26682	1110694	9	True				
ANR	1110816	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 0		1110694	0		=			
ANR	1110817	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110694	0					
ANR	1110818	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110819	Identifier	inst_buf		1110694	0					
ANR	1110820	Identifier	inst_buf_index		1110694	1					
ANR	1110821	Identifier	output_registers		1110694	1					
ANR	1110822	PrimaryExpression	0		1110694	1					
ANR	1110823	BreakStatement	break ;	848:2:26686:26691	1110694	10	True				
ANR	1110824	Label	case TILEGX_OPC_CLZ :	849:1:26694:26713	1110694	11	True				
ANR	1110825	Identifier	TILEGX_OPC_CLZ		1110694	0					
ANR	1110826	Label	case TILEGX_OPC_LD :	850:1:26716:26734	1110694	12	True				
ANR	1110827	Identifier	TILEGX_OPC_LD		1110694	0					
ANR	1110828	Label	case TILEGX_OPC_LD1U :	851:1:26737:26757	1110694	13	True				
ANR	1110829	Identifier	TILEGX_OPC_LD1U		1110694	0					
ANR	1110830	Label	case TILEGX_OPC_LD1S :	852:1:26760:26780	1110694	14	True				
ANR	1110831	Identifier	TILEGX_OPC_LD1S		1110694	0					
ANR	1110832	Label	case TILEGX_OPC_LD2U :	853:1:26783:26803	1110694	15	True				
ANR	1110833	Identifier	TILEGX_OPC_LD2U		1110694	0					
ANR	1110834	Label	case TILEGX_OPC_LD2S :	854:1:26806:26826	1110694	16	True				
ANR	1110835	Identifier	TILEGX_OPC_LD2S		1110694	0					
ANR	1110836	Label	case TILEGX_OPC_LD4U :	855:1:26829:26849	1110694	17	True				
ANR	1110837	Identifier	TILEGX_OPC_LD4U		1110694	0					
ANR	1110838	Label	case TILEGX_OPC_LD4S :	856:1:26852:26872	1110694	18	True				
ANR	1110839	Identifier	TILEGX_OPC_LD4S		1110694	0					
ANR	1110840	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	857:2:26876:26928	1110694	19	True				
ANR	1110841	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1110694	0		=			
ANR	1110842	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110694	0					
ANR	1110843	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110844	Identifier	inst_buf		1110694	0					
ANR	1110845	Identifier	inst_buf_index		1110694	1					
ANR	1110846	Identifier	input_registers		1110694	1					
ANR	1110847	ShiftExpression	1L << op1		1110694	1		<<			
ANR	1110848	PrimaryExpression	1L		1110694	0					
ANR	1110849	Identifier	op1		1110694	1					
ANR	1110850	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	858:2:26932:26985	1110694	20	True				
ANR	1110851	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1110694	0		=			
ANR	1110852	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110694	0					
ANR	1110853	ArrayIndexing	inst_buf [ inst_buf_index ]		1110694	0					
ANR	1110854	Identifier	inst_buf		1110694	0					
ANR	1110855	Identifier	inst_buf_index		1110694	1					
ANR	1110856	Identifier	output_registers		1110694	1					
ANR	1110857	ShiftExpression	1L << op0		1110694	1		<<			
ANR	1110858	PrimaryExpression	1L		1110694	0					
ANR	1110859	Identifier	op0		1110694	1					
ANR	1110860	BreakStatement	break ;	859:2:26989:26994	1110694	21	True				
ANR	1110861	Label	default :	860:1:26997:27004	1110694	22	True				
ANR	1110862	Identifier	default		1110694	0					
ANR	1110863	ExpressionStatement	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"	861:2:27008:27054	1110694	23	True				
ANR	1110864	CallExpression	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"		1110694	0					
ANR	1110865	Callee	printf		1110694	0					
ANR	1110866	Identifier	printf		1110694	0					
ANR	1110867	ArgumentList	"""unrecoginzed opc: %s\\n"""		1110694	1					
ANR	1110868	Argument	"""unrecoginzed opc: %s\\n"""		1110694	0					
ANR	1110869	PrimaryExpression	"""unrecoginzed opc: %s\\n"""		1110694	0					
ANR	1110870	Argument	opcode -> name		1110694	1					
ANR	1110871	PtrMemberAccess	opcode -> name		1110694	0					
ANR	1110872	Identifier	opcode		1110694	0					
ANR	1110873	Identifier	name		1110694	1					
ANR	1110874	ExpressionStatement	SLJIT_ASSERT_STOP ( )	862:2:27058:27077	1110694	24	True				
ANR	1110875	CallExpression	SLJIT_ASSERT_STOP ( )		1110694	0					
ANR	1110876	Callee	SLJIT_ASSERT_STOP		1110694	0					
ANR	1110877	Identifier	SLJIT_ASSERT_STOP		1110694	0					
ANR	1110878	ArgumentList			1110694	1					
ANR	1110879	ExpressionStatement	inst_buf_index ++	865:1:27084:27100	1110694	8	True				
ANR	1110880	PostIncDecOperationExpression	inst_buf_index ++		1110694	0					
ANR	1110881	Identifier	inst_buf_index		1110694	0					
ANR	1110882	IncDec	++		1110694	1					
ANR	1110883	ReturnStatement	return SLJIT_SUCCESS ;	867:1:27104:27124	1110694	9	True				
ANR	1110884	Identifier	SLJIT_SUCCESS		1110694	0					
ANR	1110885	ReturnType	static sljit_si		1110694	1					
ANR	1110886	Identifier	push_2_buffer		1110694	2					
ANR	1110887	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int line"		1110694	3					
ANR	1110888	Parameter	struct sljit_compiler * compiler	825:30:25865:25895	1110694	0	True				
ANR	1110889	ParameterType	struct sljit_compiler *		1110694	0					
ANR	1110890	Identifier	compiler		1110694	1					
ANR	1110891	Parameter	tilegx_mnemonic opc	825:63:25898:25916	1110694	1	True				
ANR	1110892	ParameterType	tilegx_mnemonic		1110694	0					
ANR	1110893	Identifier	opc		1110694	1					
ANR	1110894	Parameter	int op0	825:84:25919:25925	1110694	2	True				
ANR	1110895	ParameterType	int		1110694	0					
ANR	1110896	Identifier	op0		1110694	1					
ANR	1110897	Parameter	int op1	825:93:25928:25934	1110694	3	True				
ANR	1110898	ParameterType	int		1110694	0					
ANR	1110899	Identifier	op1		1110694	1					
ANR	1110900	Parameter	int line	825:102:25937:25944	1110694	4	True				
ANR	1110901	ParameterType	int		1110694	0					
ANR	1110902	Identifier	line		1110694	1					
ANR	1110903	CFGEntryNode	ENTRY		1110694		True				
ANR	1110904	CFGExitNode	EXIT		1110694		True				
ANR	1110905	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1110694						
ANR	1110906	Symbol	line		1110694						
ANR	1110907	Symbol	opcode		1110694						
ANR	1110908	Symbol	* * inst_buf		1110694						
ANR	1110909	Symbol	* * inst_buf_index		1110694						
ANR	1110910	Symbol	compiler		1110694						
ANR	1110911	Symbol	update_buffer		1110694						
ANR	1110912	Symbol	* inst_buf		1110694						
ANR	1110913	Symbol	inst_buf [ inst_buf_index ] . input_registers		1110694						
ANR	1110914	Symbol	inst_buf [ inst_buf_index ] . operand_value		1110694						
ANR	1110915	Symbol	inst_buf [ inst_buf_index ] . pipe		1110694						
ANR	1110916	Symbol	opcode -> name		1110694						
ANR	1110917	Symbol	opc		1110694						
ANR	1110918	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110694						
ANR	1110919	Symbol	SLJIT_SUCCESS		1110694						
ANR	1110920	Symbol	op0		1110694						
ANR	1110921	Symbol	inst_buf_index		1110694						
ANR	1110922	Symbol	inst_buf		1110694						
ANR	1110923	Symbol	op1		1110694						
ANR	1110924	Symbol	inst_buf [ inst_buf_index ] . opcode		1110694						
ANR	1110925	Symbol	tilegx_opcodes		1110694						
ANR	1110926	Symbol	inst_buf [ inst_buf_index ] . output_registers		1110694						
ANR	1110927	Symbol	inst_buf [ inst_buf_index ] . line		1110694						
ANR	1110928	Symbol	* inst_buf_index		1110694						
ANR	1110929	Symbol	get_any_valid_pipe		1110694						
ANR	1110930	Symbol	* opcode		1110694						
ANR	1110931	Function	push_0_buffer	870:0:27129:27662							
ANR	1110932	FunctionDef	"push_0_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int line)"		1110931	0					
ANR	1110933	CompoundStatement		871:0:27223:27662	1110931	0					
ANR	1110934	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1110931	0					
ANR	1110935	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	872:5:27230:27281	1110931	0	True				
ANR	1110936	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110931	0		==			
ANR	1110937	Identifier	inst_buf_index		1110931	0					
ANR	1110938	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110931	1					
ANR	1110939	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	873:2:27286:27318	1110931	1	True				
ANR	1110940	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1110931	0					
ANR	1110941	Callee	FAIL_IF		1110931	0					
ANR	1110942	Identifier	FAIL_IF		1110931	0					
ANR	1110943	ArgumentList	update_buffer ( compiler )		1110931	1					
ANR	1110944	Argument	update_buffer ( compiler )		1110931	0					
ANR	1110945	CallExpression	update_buffer ( compiler )		1110931	0					
ANR	1110946	Callee	update_buffer		1110931	0					
ANR	1110947	Identifier	update_buffer		1110931	0					
ANR	1110948	ArgumentList	compiler		1110931	1					
ANR	1110949	Argument	compiler		1110931	0					
ANR	1110950	Identifier	compiler		1110931	0					
ANR	1110951	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	875:1:27322:27379	1110931	1	True				
ANR	1110952	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1110931	0					
ANR	1110953	IdentifierDeclType	const struct tilegx_opcode *		1110931	0					
ANR	1110954	Identifier	opcode		1110931	1					
ANR	1110955	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1110931	2		=			
ANR	1110956	Identifier	opcode		1110931	0					
ANR	1110957	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1110931	1					
ANR	1110958	UnaryOperator	&		1110931	0					
ANR	1110959	ArrayIndexing	tilegx_opcodes [ opc ]		1110931	1					
ANR	1110960	Identifier	tilegx_opcodes		1110931	0					
ANR	1110961	Identifier	opc		1110931	1					
ANR	1110962	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	876:1:27382:27422	1110931	2	True				
ANR	1110963	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1110931	0		=			
ANR	1110964	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1110931	0					
ANR	1110965	ArrayIndexing	inst_buf [ inst_buf_index ]		1110931	0					
ANR	1110966	Identifier	inst_buf		1110931	0					
ANR	1110967	Identifier	inst_buf_index		1110931	1					
ANR	1110968	Identifier	opcode		1110931	1					
ANR	1110969	Identifier	opcode		1110931	1					
ANR	1110970	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	877:1:27425:27483	1110931	3	True				
ANR	1110971	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1110931	0		=			
ANR	1110972	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1110931	0					
ANR	1110973	ArrayIndexing	inst_buf [ inst_buf_index ]		1110931	0					
ANR	1110974	Identifier	inst_buf		1110931	0					
ANR	1110975	Identifier	inst_buf_index		1110931	1					
ANR	1110976	Identifier	pipe		1110931	1					
ANR	1110977	CallExpression	get_any_valid_pipe ( opcode )		1110931	1					
ANR	1110978	Callee	get_any_valid_pipe		1110931	0					
ANR	1110979	Identifier	get_any_valid_pipe		1110931	0					
ANR	1110980	ArgumentList	opcode		1110931	1					
ANR	1110981	Argument	opcode		1110931	0					
ANR	1110982	Identifier	opcode		1110931	0					
ANR	1110983	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 0	878:1:27486:27530	1110931	4	True				
ANR	1110984	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 0		1110931	0		=			
ANR	1110985	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1110931	0					
ANR	1110986	ArrayIndexing	inst_buf [ inst_buf_index ]		1110931	0					
ANR	1110987	Identifier	inst_buf		1110931	0					
ANR	1110988	Identifier	inst_buf_index		1110931	1					
ANR	1110989	Identifier	input_registers		1110931	1					
ANR	1110990	PrimaryExpression	0		1110931	1					
ANR	1110991	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 0	879:1:27533:27578	1110931	5	True				
ANR	1110992	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 0		1110931	0		=			
ANR	1110993	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1110931	0					
ANR	1110994	ArrayIndexing	inst_buf [ inst_buf_index ]		1110931	0					
ANR	1110995	Identifier	inst_buf		1110931	0					
ANR	1110996	Identifier	inst_buf_index		1110931	1					
ANR	1110997	Identifier	output_registers		1110931	1					
ANR	1110998	PrimaryExpression	0		1110931	1					
ANR	1110999	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	880:1:27581:27617	1110931	6	True				
ANR	1111000	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1110931	0		=			
ANR	1111001	MemberAccess	inst_buf [ inst_buf_index ] . line		1110931	0					
ANR	1111002	ArrayIndexing	inst_buf [ inst_buf_index ]		1110931	0					
ANR	1111003	Identifier	inst_buf		1110931	0					
ANR	1111004	Identifier	inst_buf_index		1110931	1					
ANR	1111005	Identifier	line		1110931	1					
ANR	1111006	Identifier	line		1110931	1					
ANR	1111007	ExpressionStatement	inst_buf_index ++	881:1:27620:27636	1110931	7	True				
ANR	1111008	PostIncDecOperationExpression	inst_buf_index ++		1110931	0					
ANR	1111009	Identifier	inst_buf_index		1110931	0					
ANR	1111010	IncDec	++		1110931	1					
ANR	1111011	ReturnStatement	return SLJIT_SUCCESS ;	883:1:27640:27660	1110931	8	True				
ANR	1111012	Identifier	SLJIT_SUCCESS		1110931	0					
ANR	1111013	ReturnType	static sljit_si		1110931	1					
ANR	1111014	Identifier	push_0_buffer		1110931	2					
ANR	1111015	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int line"		1110931	3					
ANR	1111016	Parameter	struct sljit_compiler * compiler	870:30:27159:27189	1110931	0	True				
ANR	1111017	ParameterType	struct sljit_compiler *		1110931	0					
ANR	1111018	Identifier	compiler		1110931	1					
ANR	1111019	Parameter	tilegx_mnemonic opc	870:63:27192:27210	1110931	1	True				
ANR	1111020	ParameterType	tilegx_mnemonic		1110931	0					
ANR	1111021	Identifier	opc		1110931	1					
ANR	1111022	Parameter	int line	870:84:27213:27220	1110931	2	True				
ANR	1111023	ParameterType	int		1110931	0					
ANR	1111024	Identifier	line		1110931	1					
ANR	1111025	CFGEntryNode	ENTRY		1110931		True				
ANR	1111026	CFGExitNode	EXIT		1110931		True				
ANR	1111027	Symbol	inst_buf [ inst_buf_index ] . pipe		1110931						
ANR	1111028	Symbol	opc		1110931						
ANR	1111029	Symbol	line		1110931						
ANR	1111030	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1110931						
ANR	1111031	Symbol	SLJIT_SUCCESS		1110931						
ANR	1111032	Symbol	opcode		1110931						
ANR	1111033	Symbol	inst_buf_index		1110931						
ANR	1111034	Symbol	inst_buf		1110931						
ANR	1111035	Symbol	inst_buf [ inst_buf_index ] . opcode		1110931						
ANR	1111036	Symbol	tilegx_opcodes		1110931						
ANR	1111037	Symbol	inst_buf [ inst_buf_index ] . output_registers		1110931						
ANR	1111038	Symbol	inst_buf [ inst_buf_index ] . line		1110931						
ANR	1111039	Symbol	compiler		1110931						
ANR	1111040	Symbol	* inst_buf_index		1110931						
ANR	1111041	Symbol	get_any_valid_pipe		1110931						
ANR	1111042	Symbol	update_buffer		1110931						
ANR	1111043	Symbol	* inst_buf		1110931						
ANR	1111044	Symbol	inst_buf [ inst_buf_index ] . input_registers		1110931						
ANR	1111045	Function	push_jr_buffer	886:0:27665:28276							
ANR	1111046	FunctionDef	"push_jr_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int line)"		1111045	0					
ANR	1111047	CompoundStatement		887:0:27769:28276	1111045	0					
ANR	1111048	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1111045	0					
ANR	1111049	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	888:5:27776:27827	1111045	0	True				
ANR	1111050	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1111045	0		==			
ANR	1111051	Identifier	inst_buf_index		1111045	0					
ANR	1111052	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1111045	1					
ANR	1111053	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	889:2:27832:27864	1111045	1	True				
ANR	1111054	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1111045	0					
ANR	1111055	Callee	FAIL_IF		1111045	0					
ANR	1111056	Identifier	FAIL_IF		1111045	0					
ANR	1111057	ArgumentList	update_buffer ( compiler )		1111045	1					
ANR	1111058	Argument	update_buffer ( compiler )		1111045	0					
ANR	1111059	CallExpression	update_buffer ( compiler )		1111045	0					
ANR	1111060	Callee	update_buffer		1111045	0					
ANR	1111061	Identifier	update_buffer		1111045	0					
ANR	1111062	ArgumentList	compiler		1111045	1					
ANR	1111063	Argument	compiler		1111045	0					
ANR	1111064	Identifier	compiler		1111045	0					
ANR	1111065	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	891:1:27868:27925	1111045	1	True				
ANR	1111066	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1111045	0					
ANR	1111067	IdentifierDeclType	const struct tilegx_opcode *		1111045	0					
ANR	1111068	Identifier	opcode		1111045	1					
ANR	1111069	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1111045	2		=			
ANR	1111070	Identifier	opcode		1111045	0					
ANR	1111071	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1111045	1					
ANR	1111072	UnaryOperator	&		1111045	0					
ANR	1111073	ArrayIndexing	tilegx_opcodes [ opc ]		1111045	1					
ANR	1111074	Identifier	tilegx_opcodes		1111045	0					
ANR	1111075	Identifier	opc		1111045	1					
ANR	1111076	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	892:1:27928:27968	1111045	2	True				
ANR	1111077	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1111045	0		=			
ANR	1111078	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1111045	0					
ANR	1111079	ArrayIndexing	inst_buf [ inst_buf_index ]		1111045	0					
ANR	1111080	Identifier	inst_buf		1111045	0					
ANR	1111081	Identifier	inst_buf_index		1111045	1					
ANR	1111082	Identifier	opcode		1111045	1					
ANR	1111083	Identifier	opcode		1111045	1					
ANR	1111084	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	893:1:27971:28029	1111045	3	True				
ANR	1111085	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1111045	0		=			
ANR	1111086	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1111045	0					
ANR	1111087	ArrayIndexing	inst_buf [ inst_buf_index ]		1111045	0					
ANR	1111088	Identifier	inst_buf		1111045	0					
ANR	1111089	Identifier	inst_buf_index		1111045	1					
ANR	1111090	Identifier	pipe		1111045	1					
ANR	1111091	CallExpression	get_any_valid_pipe ( opcode )		1111045	1					
ANR	1111092	Callee	get_any_valid_pipe		1111045	0					
ANR	1111093	Identifier	get_any_valid_pipe		1111045	0					
ANR	1111094	ArgumentList	opcode		1111045	1					
ANR	1111095	Argument	opcode		1111045	0					
ANR	1111096	Identifier	opcode		1111045	0					
ANR	1111097	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	894:1:28032:28079	1111045	4	True				
ANR	1111098	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1111045	0		=			
ANR	1111099	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1111045	0					
ANR	1111100	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1111045	0					
ANR	1111101	ArrayIndexing	inst_buf [ inst_buf_index ]		1111045	0					
ANR	1111102	Identifier	inst_buf		1111045	0					
ANR	1111103	Identifier	inst_buf_index		1111045	1					
ANR	1111104	Identifier	operand_value		1111045	1					
ANR	1111105	PrimaryExpression	0		1111045	1					
ANR	1111106	Identifier	op0		1111045	1					
ANR	1111107	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op0	895:1:28082:28134	1111045	5	True				
ANR	1111108	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op0		1111045	0		=			
ANR	1111109	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1111045	0					
ANR	1111110	ArrayIndexing	inst_buf [ inst_buf_index ]		1111045	0					
ANR	1111111	Identifier	inst_buf		1111045	0					
ANR	1111112	Identifier	inst_buf_index		1111045	1					
ANR	1111113	Identifier	input_registers		1111045	1					
ANR	1111114	ShiftExpression	1L << op0		1111045	1		<<			
ANR	1111115	PrimaryExpression	1L		1111045	0					
ANR	1111116	Identifier	op0		1111045	1					
ANR	1111117	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 0	896:1:28137:28182	1111045	6	True				
ANR	1111118	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 0		1111045	0		=			
ANR	1111119	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1111045	0					
ANR	1111120	ArrayIndexing	inst_buf [ inst_buf_index ]		1111045	0					
ANR	1111121	Identifier	inst_buf		1111045	0					
ANR	1111122	Identifier	inst_buf_index		1111045	1					
ANR	1111123	Identifier	output_registers		1111045	1					
ANR	1111124	PrimaryExpression	0		1111045	1					
ANR	1111125	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	897:1:28185:28221	1111045	7	True				
ANR	1111126	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1111045	0		=			
ANR	1111127	MemberAccess	inst_buf [ inst_buf_index ] . line		1111045	0					
ANR	1111128	ArrayIndexing	inst_buf [ inst_buf_index ]		1111045	0					
ANR	1111129	Identifier	inst_buf		1111045	0					
ANR	1111130	Identifier	inst_buf_index		1111045	1					
ANR	1111131	Identifier	line		1111045	1					
ANR	1111132	Identifier	line		1111045	1					
ANR	1111133	ExpressionStatement	inst_buf_index ++	898:1:28224:28240	1111045	8	True				
ANR	1111134	PostIncDecOperationExpression	inst_buf_index ++		1111045	0					
ANR	1111135	Identifier	inst_buf_index		1111045	0					
ANR	1111136	IncDec	++		1111045	1					
ANR	1111137	ReturnStatement	return flush_buffer ( compiler ) ;	900:1:28245:28274	1111045	9	True				
ANR	1111138	CallExpression	flush_buffer ( compiler )		1111045	0					
ANR	1111139	Callee	flush_buffer		1111045	0					
ANR	1111140	Identifier	flush_buffer		1111045	0					
ANR	1111141	ArgumentList	compiler		1111045	1					
ANR	1111142	Argument	compiler		1111045	0					
ANR	1111143	Identifier	compiler		1111045	0					
ANR	1111144	ReturnType	static sljit_si		1111045	1					
ANR	1111145	Identifier	push_jr_buffer		1111045	2					
ANR	1111146	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int line"		1111045	3					
ANR	1111147	Parameter	struct sljit_compiler * compiler	886:31:27696:27726	1111045	0	True				
ANR	1111148	ParameterType	struct sljit_compiler *		1111045	0					
ANR	1111149	Identifier	compiler		1111045	1					
ANR	1111150	Parameter	tilegx_mnemonic opc	886:64:27729:27747	1111045	1	True				
ANR	1111151	ParameterType	tilegx_mnemonic		1111045	0					
ANR	1111152	Identifier	opc		1111045	1					
ANR	1111153	Parameter	int op0	886:85:27750:27756	1111045	2	True				
ANR	1111154	ParameterType	int		1111045	0					
ANR	1111155	Identifier	op0		1111045	1					
ANR	1111156	Parameter	int line	886:94:27759:27766	1111045	3	True				
ANR	1111157	ParameterType	int		1111045	0					
ANR	1111158	Identifier	line		1111045	1					
ANR	1111159	CFGEntryNode	ENTRY		1111045		True				
ANR	1111160	CFGExitNode	EXIT		1111045		True				
ANR	1111161	Symbol	inst_buf [ inst_buf_index ] . operand_value		1111045						
ANR	1111162	Symbol	inst_buf [ inst_buf_index ] . pipe		1111045						
ANR	1111163	Symbol	opc		1111045						
ANR	1111164	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1111045						
ANR	1111165	Symbol	line		1111045						
ANR	1111166	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1111045						
ANR	1111167	Symbol	opcode		1111045						
ANR	1111168	Symbol	flush_buffer		1111045						
ANR	1111169	Symbol	* * inst_buf		1111045						
ANR	1111170	Symbol	op0		1111045						
ANR	1111171	Symbol	inst_buf_index		1111045						
ANR	1111172	Symbol	inst_buf		1111045						
ANR	1111173	Symbol	* * inst_buf_index		1111045						
ANR	1111174	Symbol	inst_buf [ inst_buf_index ] . opcode		1111045						
ANR	1111175	Symbol	tilegx_opcodes		1111045						
ANR	1111176	Symbol	inst_buf [ inst_buf_index ] . output_registers		1111045						
ANR	1111177	Symbol	inst_buf [ inst_buf_index ] . line		1111045						
ANR	1111178	Symbol	compiler		1111045						
ANR	1111179	Symbol	* inst_buf_index		1111045						
ANR	1111180	Symbol	get_any_valid_pipe		1111045						
ANR	1111181	Symbol	update_buffer		1111045						
ANR	1111182	Symbol	* inst_buf		1111045						
ANR	1111183	Symbol	inst_buf [ inst_buf_index ] . input_registers		1111045						
ANR	1111184	Function	detect_jump_type	903:0:28279:30274							
ANR	1111185	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code)"		1111184	0					
ANR	1111186	CompoundStatement		904:0:28391:30274	1111184	0					
ANR	1111187	IdentifierDeclStatement	sljit_sw diff ;	905:1:28394:28407	1111184	0	True				
ANR	1111188	IdentifierDecl	diff		1111184	0					
ANR	1111189	IdentifierDeclType	sljit_sw		1111184	0					
ANR	1111190	Identifier	diff		1111184	1					
ANR	1111191	IdentifierDeclStatement	sljit_uw target_addr ;	906:1:28410:28430	1111184	1	True				
ANR	1111192	IdentifierDecl	target_addr		1111184	0					
ANR	1111193	IdentifierDeclType	sljit_uw		1111184	0					
ANR	1111194	Identifier	target_addr		1111184	1					
ANR	1111195	IdentifierDeclStatement	sljit_ins * inst ;	907:1:28433:28448	1111184	2	True				
ANR	1111196	IdentifierDecl	* inst		1111184	0					
ANR	1111197	IdentifierDeclType	sljit_ins *		1111184	0					
ANR	1111198	Identifier	inst		1111184	1					
ANR	1111199	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1111184	3					
ANR	1111200	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	909:5:28456:28490	1111184	0	True				
ANR	1111201	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1111184	0		&			
ANR	1111202	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111203	Identifier	jump		1111184	0					
ANR	1111204	Identifier	flags		1111184	1					
ANR	1111205	Identifier	SLJIT_REWRITABLE_JUMP		1111184	1					
ANR	1111206	ReturnStatement	return code_ptr ;	910:2:28495:28510	1111184	1	True				
ANR	1111207	Identifier	code_ptr		1111184	0					
ANR	1111208	IfStatement	if ( jump -> flags & JUMP_ADDR )		1111184	4					
ANR	1111209	Condition	jump -> flags & JUMP_ADDR	912:5:28518:28540	1111184	0	True				
ANR	1111210	BitAndExpression	jump -> flags & JUMP_ADDR		1111184	0		&			
ANR	1111211	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111212	Identifier	jump		1111184	0					
ANR	1111213	Identifier	flags		1111184	1					
ANR	1111214	Identifier	JUMP_ADDR		1111184	1					
ANR	1111215	ExpressionStatement	target_addr = jump -> u . target	913:2:28545:28573	1111184	1	True				
ANR	1111216	AssignmentExpression	target_addr = jump -> u . target		1111184	0		=			
ANR	1111217	Identifier	target_addr		1111184	0					
ANR	1111218	MemberAccess	jump -> u . target		1111184	1					
ANR	1111219	PtrMemberAccess	jump -> u		1111184	0					
ANR	1111220	Identifier	jump		1111184	0					
ANR	1111221	Identifier	u		1111184	1					
ANR	1111222	Identifier	target		1111184	1					
ANR	1111223	ElseStatement	else		1111184	0					
ANR	1111224	CompoundStatement		11:6:189:189	1111184	0					
ANR	1111225	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	915:2:28585:28623	1111184	0	True				
ANR	1111226	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1111184	0					
ANR	1111227	Callee	SLJIT_ASSERT		1111184	0					
ANR	1111228	Identifier	SLJIT_ASSERT		1111184	0					
ANR	1111229	ArgumentList	jump -> flags & JUMP_LABEL		1111184	1					
ANR	1111230	Argument	jump -> flags & JUMP_LABEL		1111184	0					
ANR	1111231	BitAndExpression	jump -> flags & JUMP_LABEL		1111184	0		&			
ANR	1111232	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111233	Identifier	jump		1111184	0					
ANR	1111234	Identifier	flags		1111184	1					
ANR	1111235	Identifier	JUMP_LABEL		1111184	1					
ANR	1111236	ExpressionStatement	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	916:2:28627:28679	1111184	1	True				
ANR	1111237	AssignmentExpression	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1111184	0		=			
ANR	1111238	Identifier	target_addr		1111184	0					
ANR	1111239	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1111184	1					
ANR	1111240	CastTarget	sljit_uw		1111184	0					
ANR	1111241	AdditiveExpression	code + jump -> u . label -> size		1111184	1		+			
ANR	1111242	Identifier	code		1111184	0					
ANR	1111243	PtrMemberAccess	jump -> u . label -> size		1111184	1					
ANR	1111244	MemberAccess	jump -> u . label		1111184	0					
ANR	1111245	PtrMemberAccess	jump -> u		1111184	0					
ANR	1111246	Identifier	jump		1111184	0					
ANR	1111247	Identifier	u		1111184	1					
ANR	1111248	Identifier	label		1111184	1					
ANR	1111249	Identifier	size		1111184	1					
ANR	1111250	ExpressionStatement	inst = ( sljit_ins * ) jump -> addr	919:1:28686:28716	1111184	5	True				
ANR	1111251	AssignmentExpression	inst = ( sljit_ins * ) jump -> addr		1111184	0		=			
ANR	1111252	Identifier	inst		1111184	0					
ANR	1111253	CastExpression	( sljit_ins * ) jump -> addr		1111184	1					
ANR	1111254	CastTarget	sljit_ins *		1111184	0					
ANR	1111255	PtrMemberAccess	jump -> addr		1111184	1					
ANR	1111256	Identifier	jump		1111184	0					
ANR	1111257	Identifier	addr		1111184	1					
ANR	1111258	IfStatement	if ( jump -> flags & IS_COND )		1111184	6					
ANR	1111259	Condition	jump -> flags & IS_COND	920:5:28723:28743	1111184	0	True				
ANR	1111260	BitAndExpression	jump -> flags & IS_COND		1111184	0		&			
ANR	1111261	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111262	Identifier	jump		1111184	0					
ANR	1111263	Identifier	flags		1111184	1					
ANR	1111264	Identifier	IS_COND		1111184	1					
ANR	1111265	ExpressionStatement	inst --	921:2:28748:28754	1111184	1	True				
ANR	1111266	PostIncDecOperationExpression	inst --		1111184	0					
ANR	1111267	Identifier	inst		1111184	0					
ANR	1111268	IncDec	--		1111184	1					
ANR	1111269	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) inst ) >> 3	923:1:28758:28812	1111184	7	True				
ANR	1111270	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) inst ) >> 3		1111184	0		=			
ANR	1111271	Identifier	diff		1111184	0					
ANR	1111272	ShiftExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) inst ) >> 3		1111184	1		>>			
ANR	1111273	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) inst		1111184	0		-			
ANR	1111274	CastExpression	( sljit_sw ) target_addr		1111184	0					
ANR	1111275	CastTarget	sljit_sw		1111184	0					
ANR	1111276	Identifier	target_addr		1111184	1					
ANR	1111277	CastExpression	( sljit_sw ) inst		1111184	1					
ANR	1111278	CastTarget	sljit_sw		1111184	0					
ANR	1111279	Identifier	inst		1111184	1					
ANR	1111280	PrimaryExpression	3		1111184	1					
ANR	1111281	IfStatement	if ( diff <= SIMM_17BIT_MAX && diff >= SIMM_17BIT_MIN )		1111184	8					
ANR	1111282	Condition	diff <= SIMM_17BIT_MAX && diff >= SIMM_17BIT_MIN	924:5:28819:28866	1111184	0	True				
ANR	1111283	AndExpression	diff <= SIMM_17BIT_MAX && diff >= SIMM_17BIT_MIN		1111184	0		&&			
ANR	1111284	RelationalExpression	diff <= SIMM_17BIT_MAX		1111184	0		<=			
ANR	1111285	Identifier	diff		1111184	0					
ANR	1111286	Identifier	SIMM_17BIT_MAX		1111184	1					
ANR	1111287	RelationalExpression	diff >= SIMM_17BIT_MIN		1111184	1		>=			
ANR	1111288	Identifier	diff		1111184	0					
ANR	1111289	Identifier	SIMM_17BIT_MIN		1111184	1					
ANR	1111290	CompoundStatement		21:55:477:477	1111184	1					
ANR	1111291	ExpressionStatement	jump -> flags |= PATCH_B	925:2:28873:28895	1111184	0	True				
ANR	1111292	AssignmentExpression	jump -> flags |= PATCH_B		1111184	0		|=			
ANR	1111293	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111294	Identifier	jump		1111184	0					
ANR	1111295	Identifier	flags		1111184	1					
ANR	1111296	Identifier	PATCH_B		1111184	1					
ANR	1111297	IfStatement	if ( ! ( jump -> flags & IS_COND ) )		1111184	1					
ANR	1111298	Condition	! ( jump -> flags & IS_COND )	927:6:28904:28927	1111184	0	True				
ANR	1111299	UnaryOperationExpression	! ( jump -> flags & IS_COND )		1111184	0					
ANR	1111300	UnaryOperator	!		1111184	0					
ANR	1111301	BitAndExpression	jump -> flags & IS_COND		1111184	1		&			
ANR	1111302	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111303	Identifier	jump		1111184	0					
ANR	1111304	Identifier	flags		1111184	1					
ANR	1111305	Identifier	IS_COND		1111184	1					
ANR	1111306	CompoundStatement		24:32:538:538	1111184	1					
ANR	1111307	IfStatement	if ( jump -> flags & IS_JAL )		1111184	0					
ANR	1111308	Condition	jump -> flags & IS_JAL	928:7:28939:28958	1111184	0	True				
ANR	1111309	BitAndExpression	jump -> flags & IS_JAL		1111184	0		&			
ANR	1111310	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111311	Identifier	jump		1111184	0					
ANR	1111312	Identifier	flags		1111184	1					
ANR	1111313	Identifier	IS_JAL		1111184	1					
ANR	1111314	CompoundStatement		25:29:569:569	1111184	1					
ANR	1111315	ExpressionStatement	jump -> flags &= ~ ( PATCH_B )	929:4:28967:28992	1111184	0	True				
ANR	1111316	AssignmentExpression	jump -> flags &= ~ ( PATCH_B )		1111184	0		&=			
ANR	1111317	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111318	Identifier	jump		1111184	0					
ANR	1111319	Identifier	flags		1111184	1					
ANR	1111320	UnaryOperationExpression	~ ( PATCH_B )		1111184	1					
ANR	1111321	UnaryOperator	~		1111184	0					
ANR	1111322	Identifier	PATCH_B		1111184	1					
ANR	1111323	ExpressionStatement	jump -> flags |= PATCH_J	930:4:28998:29020	1111184	1	True				
ANR	1111324	AssignmentExpression	jump -> flags |= PATCH_J		1111184	0		|=			
ANR	1111325	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111326	Identifier	jump		1111184	0					
ANR	1111327	Identifier	flags		1111184	1					
ANR	1111328	Identifier	PATCH_J		1111184	1					
ANR	1111329	ExpressionStatement	inst [ 0 ] = JAL_X1	931:4:29026:29042	1111184	2	True				
ANR	1111330	AssignmentExpression	inst [ 0 ] = JAL_X1		1111184	0		=			
ANR	1111331	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111332	Identifier	inst		1111184	0					
ANR	1111333	PrimaryExpression	0		1111184	1					
ANR	1111334	Identifier	JAL_X1		1111184	1					
ANR	1111335	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	934:4:29073:29118	1111184	3	True				
ANR	1111336	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1111184	0					
ANR	1111337	Callee	printf		1111184	0					
ANR	1111338	Identifier	printf		1111184	0					
ANR	1111339	ArgumentList	"""[runtime relocate]%04d:\\t"""		1111184	1					
ANR	1111340	Argument	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111341	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111342	Argument	__LINE__		1111184	1					
ANR	1111343	Identifier	__LINE__		1111184	0					
ANR	1111344	ExpressionStatement	print_insn_tilegx ( inst )	935:4:29124:29147	1111184	4	True				
ANR	1111345	CallExpression	print_insn_tilegx ( inst )		1111184	0					
ANR	1111346	Callee	print_insn_tilegx		1111184	0					
ANR	1111347	Identifier	print_insn_tilegx		1111184	0					
ANR	1111348	ArgumentList	inst		1111184	1					
ANR	1111349	Argument	inst		1111184	0					
ANR	1111350	Identifier	inst		1111184	0					
ANR	1111351	ElseStatement	else		1111184	0					
ANR	1111352	CompoundStatement		34:10:774:774	1111184	0					
ANR	1111353	ExpressionStatement	inst [ 0 ] = BEQZ_X1 | SRCA_X1 ( ZERO )	938:4:29172:29205	1111184	0	True				
ANR	1111354	AssignmentExpression	inst [ 0 ] = BEQZ_X1 | SRCA_X1 ( ZERO )		1111184	0		=			
ANR	1111355	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111356	Identifier	inst		1111184	0					
ANR	1111357	PrimaryExpression	0		1111184	1					
ANR	1111358	InclusiveOrExpression	BEQZ_X1 | SRCA_X1 ( ZERO )		1111184	1		|			
ANR	1111359	Identifier	BEQZ_X1		1111184	0					
ANR	1111360	CallExpression	SRCA_X1 ( ZERO )		1111184	1					
ANR	1111361	Callee	SRCA_X1		1111184	0					
ANR	1111362	Identifier	SRCA_X1		1111184	0					
ANR	1111363	ArgumentList	ZERO		1111184	1					
ANR	1111364	Argument	ZERO		1111184	0					
ANR	1111365	Identifier	ZERO		1111184	0					
ANR	1111366	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	941:4:29236:29281	1111184	1	True				
ANR	1111367	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1111184	0					
ANR	1111368	Callee	printf		1111184	0					
ANR	1111369	Identifier	printf		1111184	0					
ANR	1111370	ArgumentList	"""[runtime relocate]%04d:\\t"""		1111184	1					
ANR	1111371	Argument	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111372	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111373	Argument	__LINE__		1111184	1					
ANR	1111374	Identifier	__LINE__		1111184	0					
ANR	1111375	ExpressionStatement	print_insn_tilegx ( inst )	942:4:29287:29310	1111184	2	True				
ANR	1111376	CallExpression	print_insn_tilegx ( inst )		1111184	0					
ANR	1111377	Callee	print_insn_tilegx		1111184	0					
ANR	1111378	Identifier	print_insn_tilegx		1111184	0					
ANR	1111379	ArgumentList	inst		1111184	1					
ANR	1111380	Argument	inst		1111184	0					
ANR	1111381	Identifier	inst		1111184	0					
ANR	1111382	ReturnStatement	return inst ;	946:3:29328:29339	1111184	1	True				
ANR	1111383	Identifier	inst		1111184	0					
ANR	1111384	ExpressionStatement	inst [ 0 ] = inst [ 0 ] ^ ( 0x7L << 55 )	949:2:29348:29380	1111184	2	True				
ANR	1111385	AssignmentExpression	inst [ 0 ] = inst [ 0 ] ^ ( 0x7L << 55 )		1111184	0		=			
ANR	1111386	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111387	Identifier	inst		1111184	0					
ANR	1111388	PrimaryExpression	0		1111184	1					
ANR	1111389	ExclusiveOrExpression	inst [ 0 ] ^ ( 0x7L << 55 )		1111184	1		^			
ANR	1111390	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111391	Identifier	inst		1111184	0					
ANR	1111392	PrimaryExpression	0		1111184	1					
ANR	1111393	ShiftExpression	0x7L << 55		1111184	1		<<			
ANR	1111394	PrimaryExpression	0x7L		1111184	0					
ANR	1111395	PrimaryExpression	55		1111184	1					
ANR	1111396	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	952:2:29409:29454	1111184	3	True				
ANR	1111397	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1111184	0					
ANR	1111398	Callee	printf		1111184	0					
ANR	1111399	Identifier	printf		1111184	0					
ANR	1111400	ArgumentList	"""[runtime relocate]%04d:\\t"""		1111184	1					
ANR	1111401	Argument	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111402	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111403	Argument	__LINE__		1111184	1					
ANR	1111404	Identifier	__LINE__		1111184	0					
ANR	1111405	ExpressionStatement	print_insn_tilegx ( inst )	953:2:29458:29481	1111184	4	True				
ANR	1111406	CallExpression	print_insn_tilegx ( inst )		1111184	0					
ANR	1111407	Callee	print_insn_tilegx		1111184	0					
ANR	1111408	Identifier	print_insn_tilegx		1111184	0					
ANR	1111409	ArgumentList	inst		1111184	1					
ANR	1111410	Argument	inst		1111184	0					
ANR	1111411	Identifier	inst		1111184	0					
ANR	1111412	ExpressionStatement	jump -> addr -= sizeof ( sljit_ins )	955:2:29492:29523	1111184	5	True				
ANR	1111413	AssignmentExpression	jump -> addr -= sizeof ( sljit_ins )		1111184	0		-=			
ANR	1111414	PtrMemberAccess	jump -> addr		1111184	0					
ANR	1111415	Identifier	jump		1111184	0					
ANR	1111416	Identifier	addr		1111184	1					
ANR	1111417	SizeofExpression	sizeof ( sljit_ins )		1111184	1					
ANR	1111418	Sizeof	sizeof		1111184	0					
ANR	1111419	SizeofOperand	sljit_ins		1111184	1					
ANR	1111420	ReturnStatement	return inst ;	956:2:29527:29538	1111184	6	True				
ANR	1111421	Identifier	inst		1111184	0					
ANR	1111422	IfStatement	if ( jump -> flags & IS_COND )		1111184	9					
ANR	1111423	Condition	jump -> flags & IS_COND	959:5:29549:29569	1111184	0	True				
ANR	1111424	BitAndExpression	jump -> flags & IS_COND		1111184	0		&			
ANR	1111425	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111426	Identifier	jump		1111184	0					
ANR	1111427	Identifier	flags		1111184	1					
ANR	1111428	Identifier	IS_COND		1111184	1					
ANR	1111429	CompoundStatement		56:28:1180:1180	1111184	1					
ANR	1111430	IfStatement	if ( ( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )		1111184	0					
ANR	1111431	Condition	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )	960:6:29580:29660	1111184	0	True				
ANR	1111432	EqualityExpression	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1111184	0		==			
ANR	1111433	BitAndExpression	target_addr & ~0x3FFFFFFFL		1111184	0		&			
ANR	1111434	Identifier	target_addr		1111184	0					
ANR	1111435	Identifier	~0x3FFFFFFFL		1111184	1					
ANR	1111436	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL		1111184	1		&			
ANR	1111437	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1111184	0		+			
ANR	1111438	PtrMemberAccess	jump -> addr		1111184	0					
ANR	1111439	Identifier	jump		1111184	0					
ANR	1111440	Identifier	addr		1111184	1					
ANR	1111441	SizeofExpression	sizeof ( sljit_ins )		1111184	1					
ANR	1111442	Sizeof	sizeof		1111184	0					
ANR	1111443	SizeofOperand	sljit_ins		1111184	1					
ANR	1111444	Identifier	~0x3FFFFFFFL		1111184	1					
ANR	1111445	CompoundStatement		57:89:1271:1271	1111184	1					
ANR	1111446	ExpressionStatement	jump -> flags |= PATCH_J	961:3:29668:29690	1111184	0	True				
ANR	1111447	AssignmentExpression	jump -> flags |= PATCH_J		1111184	0		|=			
ANR	1111448	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111449	Identifier	jump		1111184	0					
ANR	1111450	Identifier	flags		1111184	1					
ANR	1111451	Identifier	PATCH_J		1111184	1					
ANR	1111452	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( 2 )	962:3:29695:29744	1111184	1	True				
ANR	1111453	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( 2 )		1111184	0		=			
ANR	1111454	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111455	Identifier	inst		1111184	0					
ANR	1111456	PrimaryExpression	0		1111184	1					
ANR	1111457	InclusiveOrExpression	( inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( 2 )		1111184	1		|			
ANR	1111458	BitAndExpression	inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) )		1111184	0		&			
ANR	1111459	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111460	Identifier	inst		1111184	0					
ANR	1111461	PrimaryExpression	0		1111184	1					
ANR	1111462	UnaryOperationExpression	~ ( BOFF_X1 ( - 1 ) )		1111184	1					
ANR	1111463	UnaryOperator	~		1111184	0					
ANR	1111464	CallExpression	BOFF_X1 ( - 1 )		1111184	1					
ANR	1111465	Callee	BOFF_X1		1111184	0					
ANR	1111466	Identifier	BOFF_X1		1111184	0					
ANR	1111467	ArgumentList	- 1		1111184	1					
ANR	1111468	Argument	- 1		1111184	0					
ANR	1111469	UnaryOperationExpression	- 1		1111184	0					
ANR	1111470	UnaryOperator	-		1111184	0					
ANR	1111471	PrimaryExpression	1		1111184	1					
ANR	1111472	CallExpression	BOFF_X1 ( 2 )		1111184	1					
ANR	1111473	Callee	BOFF_X1		1111184	0					
ANR	1111474	Identifier	BOFF_X1		1111184	0					
ANR	1111475	ArgumentList	2		1111184	1					
ANR	1111476	Argument	2		1111184	0					
ANR	1111477	PrimaryExpression	2		1111184	0					
ANR	1111478	ExpressionStatement	inst [ 1 ] = J_X1	963:3:29749:29763	1111184	2	True				
ANR	1111479	AssignmentExpression	inst [ 1 ] = J_X1		1111184	0		=			
ANR	1111480	ArrayIndexing	inst [ 1 ]		1111184	0					
ANR	1111481	Identifier	inst		1111184	0					
ANR	1111482	PrimaryExpression	1		1111184	1					
ANR	1111483	Identifier	J_X1		1111184	1					
ANR	1111484	ReturnStatement	return inst + 1 ;	964:3:29768:29783	1111184	3	True				
ANR	1111485	AdditiveExpression	inst + 1		1111184	0		+			
ANR	1111486	Identifier	inst		1111184	0					
ANR	1111487	PrimaryExpression	1		1111184	1					
ANR	1111488	ReturnStatement	return code_ptr ;	967:2:29792:29807	1111184	1	True				
ANR	1111489	Identifier	code_ptr		1111184	0					
ANR	1111490	IfStatement	if ( ( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )		1111184	10					
ANR	1111491	Condition	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )	970:5:29818:29898	1111184	0	True				
ANR	1111492	EqualityExpression	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1111184	0		==			
ANR	1111493	BitAndExpression	target_addr & ~0x3FFFFFFFL		1111184	0		&			
ANR	1111494	Identifier	target_addr		1111184	0					
ANR	1111495	Identifier	~0x3FFFFFFFL		1111184	1					
ANR	1111496	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL		1111184	1		&			
ANR	1111497	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1111184	0		+			
ANR	1111498	PtrMemberAccess	jump -> addr		1111184	0					
ANR	1111499	Identifier	jump		1111184	0					
ANR	1111500	Identifier	addr		1111184	1					
ANR	1111501	SizeofExpression	sizeof ( sljit_ins )		1111184	1					
ANR	1111502	Sizeof	sizeof		1111184	0					
ANR	1111503	SizeofOperand	sljit_ins		1111184	1					
ANR	1111504	Identifier	~0x3FFFFFFFL		1111184	1					
ANR	1111505	CompoundStatement		67:88:1509:1509	1111184	1					
ANR	1111506	ExpressionStatement	jump -> flags |= PATCH_J	971:2:29905:29927	1111184	0	True				
ANR	1111507	AssignmentExpression	jump -> flags |= PATCH_J		1111184	0		|=			
ANR	1111508	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111509	Identifier	jump		1111184	0					
ANR	1111510	Identifier	flags		1111184	1					
ANR	1111511	Identifier	PATCH_J		1111184	1					
ANR	1111512	IfStatement	if ( jump -> flags & IS_JAL )		1111184	1					
ANR	1111513	Condition	jump -> flags & IS_JAL	973:6:29936:29955	1111184	0	True				
ANR	1111514	BitAndExpression	jump -> flags & IS_JAL		1111184	0		&			
ANR	1111515	PtrMemberAccess	jump -> flags		1111184	0					
ANR	1111516	Identifier	jump		1111184	0					
ANR	1111517	Identifier	flags		1111184	1					
ANR	1111518	Identifier	IS_JAL		1111184	1					
ANR	1111519	CompoundStatement		70:28:1566:1566	1111184	1					
ANR	1111520	ExpressionStatement	inst [ 0 ] = JAL_X1	974:3:29963:29979	1111184	0	True				
ANR	1111521	AssignmentExpression	inst [ 0 ] = JAL_X1		1111184	0		=			
ANR	1111522	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111523	Identifier	inst		1111184	0					
ANR	1111524	PrimaryExpression	0		1111184	1					
ANR	1111525	Identifier	JAL_X1		1111184	1					
ANR	1111526	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	977:3:30009:30054	1111184	1	True				
ANR	1111527	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1111184	0					
ANR	1111528	Callee	printf		1111184	0					
ANR	1111529	Identifier	printf		1111184	0					
ANR	1111530	ArgumentList	"""[runtime relocate]%04d:\\t"""		1111184	1					
ANR	1111531	Argument	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111532	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111533	Argument	__LINE__		1111184	1					
ANR	1111534	Identifier	__LINE__		1111184	0					
ANR	1111535	ExpressionStatement	print_insn_tilegx ( inst )	978:3:30059:30082	1111184	2	True				
ANR	1111536	CallExpression	print_insn_tilegx ( inst )		1111184	0					
ANR	1111537	Callee	print_insn_tilegx		1111184	0					
ANR	1111538	Identifier	print_insn_tilegx		1111184	0					
ANR	1111539	ArgumentList	inst		1111184	1					
ANR	1111540	Argument	inst		1111184	0					
ANR	1111541	Identifier	inst		1111184	0					
ANR	1111542	ElseStatement	else		1111184	0					
ANR	1111543	CompoundStatement		78:9:1709:1709	1111184	0					
ANR	1111544	ExpressionStatement	inst [ 0 ] = J_X1	982:3:30106:30120	1111184	0	True				
ANR	1111545	AssignmentExpression	inst [ 0 ] = J_X1		1111184	0		=			
ANR	1111546	ArrayIndexing	inst [ 0 ]		1111184	0					
ANR	1111547	Identifier	inst		1111184	0					
ANR	1111548	PrimaryExpression	0		1111184	1					
ANR	1111549	Identifier	J_X1		1111184	1					
ANR	1111550	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	985:3:30150:30195	1111184	1	True				
ANR	1111551	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1111184	0					
ANR	1111552	Callee	printf		1111184	0					
ANR	1111553	Identifier	printf		1111184	0					
ANR	1111554	ArgumentList	"""[runtime relocate]%04d:\\t"""		1111184	1					
ANR	1111555	Argument	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111556	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1111184	0					
ANR	1111557	Argument	__LINE__		1111184	1					
ANR	1111558	Identifier	__LINE__		1111184	0					
ANR	1111559	ExpressionStatement	print_insn_tilegx ( inst )	986:3:30200:30223	1111184	2	True				
ANR	1111560	CallExpression	print_insn_tilegx ( inst )		1111184	0					
ANR	1111561	Callee	print_insn_tilegx		1111184	0					
ANR	1111562	Identifier	print_insn_tilegx		1111184	0					
ANR	1111563	ArgumentList	inst		1111184	1					
ANR	1111564	Argument	inst		1111184	0					
ANR	1111565	Identifier	inst		1111184	0					
ANR	1111566	ReturnStatement	return inst ;	990:2:30239:30250	1111184	2	True				
ANR	1111567	Identifier	inst		1111184	0					
ANR	1111568	ReturnStatement	return code_ptr ;	993:1:30257:30272	1111184	11	True				
ANR	1111569	Identifier	code_ptr		1111184	0					
ANR	1111570	ReturnType	static SLJIT_INLINE sljit_ins *		1111184	1					
ANR	1111571	Identifier	detect_jump_type		1111184	2					
ANR	1111572	ParameterList	"struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code"		1111184	3					
ANR	1111573	Parameter	struct sljit_jump * jump	903:49:28328:28350	1111184	0	True				
ANR	1111574	ParameterType	struct sljit_jump *		1111184	0					
ANR	1111575	Identifier	jump		1111184	1					
ANR	1111576	Parameter	sljit_ins * code_ptr	903:74:28353:28371	1111184	1	True				
ANR	1111577	ParameterType	sljit_ins *		1111184	0					
ANR	1111578	Identifier	code_ptr		1111184	1					
ANR	1111579	Parameter	sljit_ins * code	903:95:28374:28388	1111184	2	True				
ANR	1111580	ParameterType	sljit_ins *		1111184	0					
ANR	1111581	Identifier	code		1111184	1					
ANR	1111582	CFGEntryNode	ENTRY		1111184		True				
ANR	1111583	CFGExitNode	EXIT		1111184		True				
ANR	1111584	Symbol	jump -> u . label -> size		1111184						
ANR	1111585	Symbol	SIMM_17BIT_MIN		1111184						
ANR	1111586	Symbol	ZERO		1111184						
ANR	1111587	Symbol	code		1111184						
ANR	1111588	Symbol	* * jump		1111184						
ANR	1111589	Symbol	* jump		1111184						
ANR	1111590	Symbol	jump -> u		1111184						
ANR	1111591	Symbol	jump -> flags		1111184						
ANR	1111592	Symbol	JUMP_LABEL		1111184						
ANR	1111593	Symbol	JUMP_ADDR		1111184						
ANR	1111594	Symbol	J_X1		1111184						
ANR	1111595	Symbol	code_ptr		1111184						
ANR	1111596	Symbol	SLJIT_REWRITABLE_JUMP		1111184						
ANR	1111597	Symbol	JAL_X1		1111184						
ANR	1111598	Symbol	jump		1111184						
ANR	1111599	Symbol	* inst		1111184						
ANR	1111600	Symbol	~0x3FFFFFFFL		1111184						
ANR	1111601	Symbol	target_addr		1111184						
ANR	1111602	Symbol	diff		1111184						
ANR	1111603	Symbol	jump -> addr		1111184						
ANR	1111604	Symbol	__LINE__		1111184						
ANR	1111605	Symbol	BOFF_X1		1111184						
ANR	1111606	Symbol	IS_JAL		1111184						
ANR	1111607	Symbol	PATCH_J		1111184						
ANR	1111608	Symbol	* jump -> u . label		1111184						
ANR	1111609	Symbol	SIMM_17BIT_MAX		1111184						
ANR	1111610	Symbol	* jump -> u		1111184						
ANR	1111611	Symbol	IS_COND		1111184						
ANR	1111612	Symbol	BEQZ_X1		1111184						
ANR	1111613	Symbol	inst		1111184						
ANR	1111614	Symbol	jump -> u . target		1111184						
ANR	1111615	Symbol	PATCH_B		1111184						
ANR	1111616	Symbol	SRCA_X1		1111184						
ANR	1111617	Symbol	jump -> u . label		1111184						
ANR	1111618	Function	sljit_generate_code	996:0:30277:33686							
ANR	1111619	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1111618	0					
ANR	1111620	CompoundStatement		997:0:30362:33686	1111618	0					
ANR	1111621	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	998:1:30365:30398	1111618	0	True				
ANR	1111622	IdentifierDecl	* buf		1111618	0					
ANR	1111623	IdentifierDeclType	struct sljit_memory_fragment *		1111618	0					
ANR	1111624	Identifier	buf		1111618	1					
ANR	1111625	IdentifierDeclStatement	sljit_ins * code ;	999:1:30401:30416	1111618	1	True				
ANR	1111626	IdentifierDecl	* code		1111618	0					
ANR	1111627	IdentifierDeclType	sljit_ins *		1111618	0					
ANR	1111628	Identifier	code		1111618	1					
ANR	1111629	IdentifierDeclStatement	sljit_ins * code_ptr ;	1000:1:30419:30438	1111618	2	True				
ANR	1111630	IdentifierDecl	* code_ptr		1111618	0					
ANR	1111631	IdentifierDeclType	sljit_ins *		1111618	0					
ANR	1111632	Identifier	code_ptr		1111618	1					
ANR	1111633	IdentifierDeclStatement	sljit_ins * buf_ptr ;	1001:1:30441:30459	1111618	3	True				
ANR	1111634	IdentifierDecl	* buf_ptr		1111618	0					
ANR	1111635	IdentifierDeclType	sljit_ins *		1111618	0					
ANR	1111636	Identifier	buf_ptr		1111618	1					
ANR	1111637	IdentifierDeclStatement	sljit_ins * buf_end ;	1002:1:30462:30480	1111618	4	True				
ANR	1111638	IdentifierDecl	* buf_end		1111618	0					
ANR	1111639	IdentifierDeclType	sljit_ins *		1111618	0					
ANR	1111640	Identifier	buf_end		1111618	1					
ANR	1111641	IdentifierDeclStatement	sljit_uw word_count ;	1003:1:30483:30502	1111618	5	True				
ANR	1111642	IdentifierDecl	word_count		1111618	0					
ANR	1111643	IdentifierDeclType	sljit_uw		1111618	0					
ANR	1111644	Identifier	word_count		1111618	1					
ANR	1111645	IdentifierDeclStatement	sljit_uw addr ;	1004:1:30505:30518	1111618	6	True				
ANR	1111646	IdentifierDecl	addr		1111618	0					
ANR	1111647	IdentifierDeclType	sljit_uw		1111618	0					
ANR	1111648	Identifier	addr		1111618	1					
ANR	1111649	IdentifierDeclStatement	struct sljit_label * label ;	1006:1:30522:30547	1111618	7	True				
ANR	1111650	IdentifierDecl	* label		1111618	0					
ANR	1111651	IdentifierDeclType	struct sljit_label *		1111618	0					
ANR	1111652	Identifier	label		1111618	1					
ANR	1111653	IdentifierDeclStatement	struct sljit_jump * jump ;	1007:1:30550:30573	1111618	8	True				
ANR	1111654	IdentifierDecl	* jump		1111618	0					
ANR	1111655	IdentifierDeclType	struct sljit_jump *		1111618	0					
ANR	1111656	Identifier	jump		1111618	1					
ANR	1111657	IdentifierDeclStatement	struct sljit_const * const_ ;	1008:1:30576:30602	1111618	9	True				
ANR	1111658	IdentifierDecl	* const_		1111618	0					
ANR	1111659	IdentifierDeclType	struct sljit_const *		1111618	0					
ANR	1111660	Identifier	const_		1111618	1					
ANR	1111661	ExpressionStatement	CHECK_ERROR_PTR ( )	1010:1:30606:30623	1111618	10	True				
ANR	1111662	CallExpression	CHECK_ERROR_PTR ( )		1111618	0					
ANR	1111663	Callee	CHECK_ERROR_PTR		1111618	0					
ANR	1111664	Identifier	CHECK_ERROR_PTR		1111618	0					
ANR	1111665	ArgumentList			1111618	1					
ANR	1111666	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	1011:1:30626:30672	1111618	11	True				
ANR	1111667	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1111618	0					
ANR	1111668	Callee	CHECK_PTR		1111618	0					
ANR	1111669	Identifier	CHECK_PTR		1111618	0					
ANR	1111670	ArgumentList	check_sljit_generate_code ( compiler )		1111618	1					
ANR	1111671	Argument	check_sljit_generate_code ( compiler )		1111618	0					
ANR	1111672	CallExpression	check_sljit_generate_code ( compiler )		1111618	0					
ANR	1111673	Callee	check_sljit_generate_code		1111618	0					
ANR	1111674	Identifier	check_sljit_generate_code		1111618	0					
ANR	1111675	ArgumentList	compiler		1111618	1					
ANR	1111676	Argument	compiler		1111618	0					
ANR	1111677	Identifier	compiler		1111618	0					
ANR	1111678	ExpressionStatement	reverse_buf ( compiler )	1012:1:30675:30696	1111618	12	True				
ANR	1111679	CallExpression	reverse_buf ( compiler )		1111618	0					
ANR	1111680	Callee	reverse_buf		1111618	0					
ANR	1111681	Identifier	reverse_buf		1111618	0					
ANR	1111682	ArgumentList	compiler		1111618	1					
ANR	1111683	Argument	compiler		1111618	0					
ANR	1111684	Identifier	compiler		1111618	0					
ANR	1111685	ExpressionStatement	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )	1014:1:30700:30773	1111618	13	True				
ANR	1111686	AssignmentExpression	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1111618	0		=			
ANR	1111687	Identifier	code		1111618	0					
ANR	1111688	CastExpression	( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1111618	1					
ANR	1111689	CastTarget	sljit_ins *		1111618	0					
ANR	1111690	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1111618	1					
ANR	1111691	Callee	SLJIT_MALLOC_EXEC		1111618	0					
ANR	1111692	Identifier	SLJIT_MALLOC_EXEC		1111618	0					
ANR	1111693	ArgumentList	compiler -> size * sizeof ( sljit_ins )		1111618	1					
ANR	1111694	Argument	compiler -> size * sizeof ( sljit_ins )		1111618	0					
ANR	1111695	MultiplicativeExpression	compiler -> size * sizeof ( sljit_ins )		1111618	0		*			
ANR	1111696	PtrMemberAccess	compiler -> size		1111618	0					
ANR	1111697	Identifier	compiler		1111618	0					
ANR	1111698	Identifier	size		1111618	1					
ANR	1111699	SizeofExpression	sizeof ( sljit_ins )		1111618	1					
ANR	1111700	Sizeof	sizeof		1111618	0					
ANR	1111701	SizeofOperand	sljit_ins		1111618	1					
ANR	1111702	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	1015:1:30776:30803	1111618	14	True				
ANR	1111703	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1111618	0					
ANR	1111704	Callee	PTR_FAIL_WITH_EXEC_IF		1111618	0					
ANR	1111705	Identifier	PTR_FAIL_WITH_EXEC_IF		1111618	0					
ANR	1111706	ArgumentList	code		1111618	1					
ANR	1111707	Argument	code		1111618	0					
ANR	1111708	Identifier	code		1111618	0					
ANR	1111709	ExpressionStatement	buf = compiler -> buf	1016:1:30806:30825	1111618	15	True				
ANR	1111710	AssignmentExpression	buf = compiler -> buf		1111618	0		=			
ANR	1111711	Identifier	buf		1111618	0					
ANR	1111712	PtrMemberAccess	compiler -> buf		1111618	1					
ANR	1111713	Identifier	compiler		1111618	0					
ANR	1111714	Identifier	buf		1111618	1					
ANR	1111715	ExpressionStatement	code_ptr = code	1018:1:30829:30844	1111618	16	True				
ANR	1111716	AssignmentExpression	code_ptr = code		1111618	0		=			
ANR	1111717	Identifier	code_ptr		1111618	0					
ANR	1111718	Identifier	code		1111618	1					
ANR	1111719	ExpressionStatement	word_count = 0	1019:1:30847:30861	1111618	17	True				
ANR	1111720	AssignmentExpression	word_count = 0		1111618	0		=			
ANR	1111721	Identifier	word_count		1111618	0					
ANR	1111722	PrimaryExpression	0		1111618	1					
ANR	1111723	ExpressionStatement	label = compiler -> labels	1020:1:30864:30888	1111618	18	True				
ANR	1111724	AssignmentExpression	label = compiler -> labels		1111618	0		=			
ANR	1111725	Identifier	label		1111618	0					
ANR	1111726	PtrMemberAccess	compiler -> labels		1111618	1					
ANR	1111727	Identifier	compiler		1111618	0					
ANR	1111728	Identifier	labels		1111618	1					
ANR	1111729	ExpressionStatement	jump = compiler -> jumps	1021:1:30891:30913	1111618	19	True				
ANR	1111730	AssignmentExpression	jump = compiler -> jumps		1111618	0		=			
ANR	1111731	Identifier	jump		1111618	0					
ANR	1111732	PtrMemberAccess	compiler -> jumps		1111618	1					
ANR	1111733	Identifier	compiler		1111618	0					
ANR	1111734	Identifier	jumps		1111618	1					
ANR	1111735	ExpressionStatement	const_ = compiler -> consts	1022:1:30916:30941	1111618	20	True				
ANR	1111736	AssignmentExpression	const_ = compiler -> consts		1111618	0		=			
ANR	1111737	Identifier	const_		1111618	0					
ANR	1111738	PtrMemberAccess	compiler -> consts		1111618	1					
ANR	1111739	Identifier	compiler		1111618	0					
ANR	1111740	Identifier	consts		1111618	1					
ANR	1111741	DoStatement	do		1111618	21					
ANR	1111742	CompoundStatement		27:4:584:584	1111618	0					
ANR	1111743	ExpressionStatement	buf_ptr = ( sljit_ins * ) buf -> memory	1024:2:30951:30985	1111618	0	True				
ANR	1111744	AssignmentExpression	buf_ptr = ( sljit_ins * ) buf -> memory		1111618	0		=			
ANR	1111745	Identifier	buf_ptr		1111618	0					
ANR	1111746	CastExpression	( sljit_ins * ) buf -> memory		1111618	1					
ANR	1111747	CastTarget	sljit_ins *		1111618	0					
ANR	1111748	PtrMemberAccess	buf -> memory		1111618	1					
ANR	1111749	Identifier	buf		1111618	0					
ANR	1111750	Identifier	memory		1111618	1					
ANR	1111751	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 3 )	1025:2:30989:31030	1111618	1	True				
ANR	1111752	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 3 )		1111618	0		=			
ANR	1111753	Identifier	buf_end		1111618	0					
ANR	1111754	AdditiveExpression	buf_ptr + ( buf -> used_size >> 3 )		1111618	1		+			
ANR	1111755	Identifier	buf_ptr		1111618	0					
ANR	1111756	ShiftExpression	buf -> used_size >> 3		1111618	1		>>			
ANR	1111757	PtrMemberAccess	buf -> used_size		1111618	0					
ANR	1111758	Identifier	buf		1111618	0					
ANR	1111759	Identifier	used_size		1111618	1					
ANR	1111760	PrimaryExpression	3		1111618	1					
ANR	1111761	DoStatement	do		1111618	2					
ANR	1111762	CompoundStatement		30:5:674:674	1111618	0					
ANR	1111763	ExpressionStatement	* code_ptr = * buf_ptr ++	1027:3:31042:31064	1111618	0	True				
ANR	1111764	AssignmentExpression	* code_ptr = * buf_ptr ++		1111618	0		=			
ANR	1111765	UnaryOperationExpression	* code_ptr		1111618	0					
ANR	1111766	UnaryOperator	*		1111618	0					
ANR	1111767	Identifier	code_ptr		1111618	1					
ANR	1111768	UnaryOperationExpression	* buf_ptr ++		1111618	1					
ANR	1111769	UnaryOperator	*		1111618	0					
ANR	1111770	PostIncDecOperationExpression	buf_ptr ++		1111618	1					
ANR	1111771	Identifier	buf_ptr		1111618	0					
ANR	1111772	IncDec	++		1111618	1					
ANR	1111773	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	1028:3:31069:31118	1111618	1	True				
ANR	1111774	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1111618	0					
ANR	1111775	Callee	SLJIT_ASSERT		1111618	0					
ANR	1111776	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1111777	ArgumentList	! label || label -> size >= word_count		1111618	1					
ANR	1111778	Argument	! label || label -> size >= word_count		1111618	0					
ANR	1111779	OrExpression	! label || label -> size >= word_count		1111618	0		||			
ANR	1111780	UnaryOperationExpression	! label		1111618	0					
ANR	1111781	UnaryOperator	!		1111618	0					
ANR	1111782	Identifier	label		1111618	1					
ANR	1111783	RelationalExpression	label -> size >= word_count		1111618	1		>=			
ANR	1111784	PtrMemberAccess	label -> size		1111618	0					
ANR	1111785	Identifier	label		1111618	0					
ANR	1111786	Identifier	size		1111618	1					
ANR	1111787	Identifier	word_count		1111618	1					
ANR	1111788	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	1029:3:31123:31170	1111618	2	True				
ANR	1111789	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1111618	0					
ANR	1111790	Callee	SLJIT_ASSERT		1111618	0					
ANR	1111791	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1111792	ArgumentList	! jump || jump -> addr >= word_count		1111618	1					
ANR	1111793	Argument	! jump || jump -> addr >= word_count		1111618	0					
ANR	1111794	OrExpression	! jump || jump -> addr >= word_count		1111618	0		||			
ANR	1111795	UnaryOperationExpression	! jump		1111618	0					
ANR	1111796	UnaryOperator	!		1111618	0					
ANR	1111797	Identifier	jump		1111618	1					
ANR	1111798	RelationalExpression	jump -> addr >= word_count		1111618	1		>=			
ANR	1111799	PtrMemberAccess	jump -> addr		1111618	0					
ANR	1111800	Identifier	jump		1111618	0					
ANR	1111801	Identifier	addr		1111618	1					
ANR	1111802	Identifier	word_count		1111618	1					
ANR	1111803	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	1030:3:31175:31226	1111618	3	True				
ANR	1111804	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1111618	0					
ANR	1111805	Callee	SLJIT_ASSERT		1111618	0					
ANR	1111806	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1111807	ArgumentList	! const_ || const_ -> addr >= word_count		1111618	1					
ANR	1111808	Argument	! const_ || const_ -> addr >= word_count		1111618	0					
ANR	1111809	OrExpression	! const_ || const_ -> addr >= word_count		1111618	0		||			
ANR	1111810	UnaryOperationExpression	! const_		1111618	0					
ANR	1111811	UnaryOperator	!		1111618	0					
ANR	1111812	Identifier	const_		1111618	1					
ANR	1111813	RelationalExpression	const_ -> addr >= word_count		1111618	1		>=			
ANR	1111814	PtrMemberAccess	const_ -> addr		1111618	0					
ANR	1111815	Identifier	const_		1111618	0					
ANR	1111816	Identifier	addr		1111618	1					
ANR	1111817	Identifier	word_count		1111618	1					
ANR	1111818	IfStatement	if ( label && label -> size == word_count )		1111618	4					
ANR	1111819	Condition	label && label -> size == word_count	1032:7:31291:31324	1111618	0	True				
ANR	1111820	AndExpression	label && label -> size == word_count		1111618	0		&&			
ANR	1111821	Identifier	label		1111618	0					
ANR	1111822	EqualityExpression	label -> size == word_count		1111618	1		==			
ANR	1111823	PtrMemberAccess	label -> size		1111618	0					
ANR	1111824	Identifier	label		1111618	0					
ANR	1111825	Identifier	size		1111618	1					
ANR	1111826	Identifier	word_count		1111618	1					
ANR	1111827	CompoundStatement		36:43:964:964	1111618	1					
ANR	1111828	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	1034:4:31371:31404	1111618	0	True				
ANR	1111829	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1111618	0		=			
ANR	1111830	PtrMemberAccess	label -> addr		1111618	0					
ANR	1111831	Identifier	label		1111618	0					
ANR	1111832	Identifier	addr		1111618	1					
ANR	1111833	CastExpression	( sljit_uw ) code_ptr		1111618	1					
ANR	1111834	CastTarget	sljit_uw		1111618	0					
ANR	1111835	Identifier	code_ptr		1111618	1					
ANR	1111836	ExpressionStatement	label -> size = code_ptr - code	1035:4:31410:31439	1111618	1	True				
ANR	1111837	AssignmentExpression	label -> size = code_ptr - code		1111618	0		=			
ANR	1111838	PtrMemberAccess	label -> size		1111618	0					
ANR	1111839	Identifier	label		1111618	0					
ANR	1111840	Identifier	size		1111618	1					
ANR	1111841	AdditiveExpression	code_ptr - code		1111618	1		-			
ANR	1111842	Identifier	code_ptr		1111618	0					
ANR	1111843	Identifier	code		1111618	1					
ANR	1111844	ExpressionStatement	label = label -> next	1036:4:31445:31464	1111618	2	True				
ANR	1111845	AssignmentExpression	label = label -> next		1111618	0		=			
ANR	1111846	Identifier	label		1111618	0					
ANR	1111847	PtrMemberAccess	label -> next		1111618	1					
ANR	1111848	Identifier	label		1111618	0					
ANR	1111849	Identifier	next		1111618	1					
ANR	1111850	IfStatement	if ( jump && jump -> addr == word_count )		1111618	5					
ANR	1111851	Condition	jump && jump -> addr == word_count	1039:7:31479:31510	1111618	0	True				
ANR	1111852	AndExpression	jump && jump -> addr == word_count		1111618	0		&&			
ANR	1111853	Identifier	jump		1111618	0					
ANR	1111854	EqualityExpression	jump -> addr == word_count		1111618	1		==			
ANR	1111855	PtrMemberAccess	jump -> addr		1111618	0					
ANR	1111856	Identifier	jump		1111618	0					
ANR	1111857	Identifier	addr		1111618	1					
ANR	1111858	Identifier	word_count		1111618	1					
ANR	1111859	CompoundStatement		43:41:1150:1150	1111618	1					
ANR	1111860	IfStatement	if ( jump -> flags & IS_JAL )		1111618	0					
ANR	1111861	Condition	jump -> flags & IS_JAL	1040:8:31523:31542	1111618	0	True				
ANR	1111862	BitAndExpression	jump -> flags & IS_JAL		1111618	0		&			
ANR	1111863	PtrMemberAccess	jump -> flags		1111618	0					
ANR	1111864	Identifier	jump		1111618	0					
ANR	1111865	Identifier	flags		1111618	1					
ANR	1111866	Identifier	IS_JAL		1111618	1					
ANR	1111867	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 4 )	1041:5:31550:31587	1111618	1	True				
ANR	1111868	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 4 )		1111618	0		=			
ANR	1111869	PtrMemberAccess	jump -> addr		1111618	0					
ANR	1111870	Identifier	jump		1111618	0					
ANR	1111871	Identifier	addr		1111618	1					
ANR	1111872	CastExpression	( sljit_uw ) ( code_ptr - 4 )		1111618	1					
ANR	1111873	CastTarget	sljit_uw		1111618	0					
ANR	1111874	AdditiveExpression	code_ptr - 4		1111618	1		-			
ANR	1111875	Identifier	code_ptr		1111618	0					
ANR	1111876	PrimaryExpression	4		1111618	1					
ANR	1111877	ElseStatement	else		1111618	0					
ANR	1111878	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )	1043:5:31603:31640	1111618	0	True				
ANR	1111879	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )		1111618	0		=			
ANR	1111880	PtrMemberAccess	jump -> addr		1111618	0					
ANR	1111881	Identifier	jump		1111618	0					
ANR	1111882	Identifier	addr		1111618	1					
ANR	1111883	CastExpression	( sljit_uw ) ( code_ptr - 3 )		1111618	1					
ANR	1111884	CastTarget	sljit_uw		1111618	0					
ANR	1111885	AdditiveExpression	code_ptr - 3		1111618	1		-			
ANR	1111886	Identifier	code_ptr		1111618	0					
ANR	1111887	PrimaryExpression	3		1111618	1					
ANR	1111888	ExpressionStatement	"code_ptr = detect_jump_type ( jump , code_ptr , code )"	1045:4:31647:31696	1111618	1	True				
ANR	1111889	AssignmentExpression	"code_ptr = detect_jump_type ( jump , code_ptr , code )"		1111618	0		=			
ANR	1111890	Identifier	code_ptr		1111618	0					
ANR	1111891	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1111618	1					
ANR	1111892	Callee	detect_jump_type		1111618	0					
ANR	1111893	Identifier	detect_jump_type		1111618	0					
ANR	1111894	ArgumentList	jump		1111618	1					
ANR	1111895	Argument	jump		1111618	0					
ANR	1111896	Identifier	jump		1111618	0					
ANR	1111897	Argument	code_ptr		1111618	1					
ANR	1111898	Identifier	code_ptr		1111618	0					
ANR	1111899	Argument	code		1111618	2					
ANR	1111900	Identifier	code		1111618	0					
ANR	1111901	ExpressionStatement	jump = jump -> next	1046:4:31702:31719	1111618	2	True				
ANR	1111902	AssignmentExpression	jump = jump -> next		1111618	0		=			
ANR	1111903	Identifier	jump		1111618	0					
ANR	1111904	PtrMemberAccess	jump -> next		1111618	1					
ANR	1111905	Identifier	jump		1111618	0					
ANR	1111906	Identifier	next		1111618	1					
ANR	1111907	IfStatement	if ( const_ && const_ -> addr == word_count )		1111618	6					
ANR	1111908	Condition	const_ && const_ -> addr == word_count	1049:7:31734:31769	1111618	0	True				
ANR	1111909	AndExpression	const_ && const_ -> addr == word_count		1111618	0		&&			
ANR	1111910	Identifier	const_		1111618	0					
ANR	1111911	EqualityExpression	const_ -> addr == word_count		1111618	1		==			
ANR	1111912	PtrMemberAccess	const_ -> addr		1111618	0					
ANR	1111913	Identifier	const_		1111618	0					
ANR	1111914	Identifier	addr		1111618	1					
ANR	1111915	Identifier	word_count		1111618	1					
ANR	1111916	CompoundStatement		53:45:1409:1409	1111618	1					
ANR	1111917	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	1051:4:31816:31850	1111618	0	True				
ANR	1111918	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1111618	0		=			
ANR	1111919	PtrMemberAccess	const_ -> addr		1111618	0					
ANR	1111920	Identifier	const_		1111618	0					
ANR	1111921	Identifier	addr		1111618	1					
ANR	1111922	CastExpression	( sljit_uw ) code_ptr		1111618	1					
ANR	1111923	CastTarget	sljit_uw		1111618	0					
ANR	1111924	Identifier	code_ptr		1111618	1					
ANR	1111925	ExpressionStatement	const_ = const_ -> next	1052:4:31856:31877	1111618	1	True				
ANR	1111926	AssignmentExpression	const_ = const_ -> next		1111618	0		=			
ANR	1111927	Identifier	const_		1111618	0					
ANR	1111928	PtrMemberAccess	const_ -> next		1111618	1					
ANR	1111929	Identifier	const_		1111618	0					
ANR	1111930	Identifier	next		1111618	1					
ANR	1111931	ExpressionStatement	code_ptr ++	1055:3:31888:31898	1111618	7	True				
ANR	1111932	PostIncDecOperationExpression	code_ptr ++		1111618	0					
ANR	1111933	Identifier	code_ptr		1111618	0					
ANR	1111934	IncDec	++		1111618	1					
ANR	1111935	ExpressionStatement	word_count ++	1056:3:31903:31915	1111618	8	True				
ANR	1111936	PostIncDecOperationExpression	word_count ++		1111618	0					
ANR	1111937	Identifier	word_count		1111618	0					
ANR	1111938	IncDec	++		1111618	1					
ANR	1111939	Condition	buf_ptr < buf_end	1057:11:31928:31944	1111618	1	True				
ANR	1111940	RelationalExpression	buf_ptr < buf_end		1111618	0		<			
ANR	1111941	Identifier	buf_ptr		1111618	0					
ANR	1111942	Identifier	buf_end		1111618	1					
ANR	1111943	ExpressionStatement	buf = buf -> next	1059:2:31951:31966	1111618	3	True				
ANR	1111944	AssignmentExpression	buf = buf -> next		1111618	0		=			
ANR	1111945	Identifier	buf		1111618	0					
ANR	1111946	PtrMemberAccess	buf -> next		1111618	1					
ANR	1111947	Identifier	buf		1111618	0					
ANR	1111948	Identifier	next		1111618	1					
ANR	1111949	Condition	buf	1060:10:31978:31980	1111618	1	True				
ANR	1111950	Identifier	buf		1111618	0					
ANR	1111951	IfStatement	if ( label && label -> size == word_count )		1111618	22					
ANR	1111952	Condition	label && label -> size == word_count	1062:5:31990:32023	1111618	0	True				
ANR	1111953	AndExpression	label && label -> size == word_count		1111618	0		&&			
ANR	1111954	Identifier	label		1111618	0					
ANR	1111955	EqualityExpression	label -> size == word_count		1111618	1		==			
ANR	1111956	PtrMemberAccess	label -> size		1111618	0					
ANR	1111957	Identifier	label		1111618	0					
ANR	1111958	Identifier	size		1111618	1					
ANR	1111959	Identifier	word_count		1111618	1					
ANR	1111960	CompoundStatement		66:41:1663:1663	1111618	1					
ANR	1111961	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	1063:2:32030:32063	1111618	0	True				
ANR	1111962	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1111618	0		=			
ANR	1111963	PtrMemberAccess	label -> addr		1111618	0					
ANR	1111964	Identifier	label		1111618	0					
ANR	1111965	Identifier	addr		1111618	1					
ANR	1111966	CastExpression	( sljit_uw ) code_ptr		1111618	1					
ANR	1111967	CastTarget	sljit_uw		1111618	0					
ANR	1111968	Identifier	code_ptr		1111618	1					
ANR	1111969	ExpressionStatement	label -> size = code_ptr - code	1064:2:32067:32096	1111618	1	True				
ANR	1111970	AssignmentExpression	label -> size = code_ptr - code		1111618	0		=			
ANR	1111971	PtrMemberAccess	label -> size		1111618	0					
ANR	1111972	Identifier	label		1111618	0					
ANR	1111973	Identifier	size		1111618	1					
ANR	1111974	AdditiveExpression	code_ptr - code		1111618	1		-			
ANR	1111975	Identifier	code_ptr		1111618	0					
ANR	1111976	Identifier	code		1111618	1					
ANR	1111977	ExpressionStatement	label = label -> next	1065:2:32100:32119	1111618	2	True				
ANR	1111978	AssignmentExpression	label = label -> next		1111618	0		=			
ANR	1111979	Identifier	label		1111618	0					
ANR	1111980	PtrMemberAccess	label -> next		1111618	1					
ANR	1111981	Identifier	label		1111618	0					
ANR	1111982	Identifier	next		1111618	1					
ANR	1111983	ExpressionStatement	SLJIT_ASSERT ( ! label )	1068:1:32126:32146	1111618	23	True				
ANR	1111984	CallExpression	SLJIT_ASSERT ( ! label )		1111618	0					
ANR	1111985	Callee	SLJIT_ASSERT		1111618	0					
ANR	1111986	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1111987	ArgumentList	! label		1111618	1					
ANR	1111988	Argument	! label		1111618	0					
ANR	1111989	UnaryOperationExpression	! label		1111618	0					
ANR	1111990	UnaryOperator	!		1111618	0					
ANR	1111991	Identifier	label		1111618	1					
ANR	1111992	ExpressionStatement	SLJIT_ASSERT ( ! jump )	1069:1:32149:32168	1111618	24	True				
ANR	1111993	CallExpression	SLJIT_ASSERT ( ! jump )		1111618	0					
ANR	1111994	Callee	SLJIT_ASSERT		1111618	0					
ANR	1111995	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1111996	ArgumentList	! jump		1111618	1					
ANR	1111997	Argument	! jump		1111618	0					
ANR	1111998	UnaryOperationExpression	! jump		1111618	0					
ANR	1111999	UnaryOperator	!		1111618	0					
ANR	1112000	Identifier	jump		1111618	1					
ANR	1112001	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	1070:1:32171:32192	1111618	25	True				
ANR	1112002	CallExpression	SLJIT_ASSERT ( ! const_ )		1111618	0					
ANR	1112003	Callee	SLJIT_ASSERT		1111618	0					
ANR	1112004	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1112005	ArgumentList	! const_		1111618	1					
ANR	1112006	Argument	! const_		1111618	0					
ANR	1112007	UnaryOperationExpression	! const_		1111618	0					
ANR	1112008	UnaryOperator	!		1111618	0					
ANR	1112009	Identifier	const_		1111618	1					
ANR	1112010	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )	1071:1:32195:32252	1111618	26	True				
ANR	1112011	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )		1111618	0					
ANR	1112012	Callee	SLJIT_ASSERT		1111618	0					
ANR	1112013	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1112014	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size		1111618	1					
ANR	1112015	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size		1111618	0					
ANR	1112016	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size		1111618	0		<=			
ANR	1112017	AdditiveExpression	code_ptr - code		1111618	0		-			
ANR	1112018	Identifier	code_ptr		1111618	0					
ANR	1112019	Identifier	code		1111618	1					
ANR	1112020	CastExpression	( sljit_sw ) compiler -> size		1111618	1					
ANR	1112021	CastTarget	sljit_sw		1111618	0					
ANR	1112022	PtrMemberAccess	compiler -> size		1111618	1					
ANR	1112023	Identifier	compiler		1111618	0					
ANR	1112024	Identifier	size		1111618	1					
ANR	1112025	ExpressionStatement	jump = compiler -> jumps	1073:1:32256:32278	1111618	27	True				
ANR	1112026	AssignmentExpression	jump = compiler -> jumps		1111618	0		=			
ANR	1112027	Identifier	jump		1111618	0					
ANR	1112028	PtrMemberAccess	compiler -> jumps		1111618	1					
ANR	1112029	Identifier	compiler		1111618	0					
ANR	1112030	Identifier	jumps		1111618	1					
ANR	1112031	WhileStatement	while ( jump )		1111618	28					
ANR	1112032	Condition	jump	1074:8:32288:32291	1111618	0	True				
ANR	1112033	Identifier	jump		1111618	0					
ANR	1112034	CompoundStatement		78:14:1931:1931	1111618	1					
ANR	1112035	DoStatement	do		1111618	0					
ANR	1112036	CompoundStatement		79:5:1938:1938	1111618	0					
ANR	1112037	ExpressionStatement	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	1076:3:32306:32378	1111618	0	True				
ANR	1112038	AssignmentExpression	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1111618	0		=			
ANR	1112039	Identifier	addr		1111618	0					
ANR	1112040	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1111618	1					
ANR	1112041	Condition	jump -> flags & JUMP_LABEL		1111618	0					
ANR	1112042	BitAndExpression	jump -> flags & JUMP_LABEL		1111618	0		&			
ANR	1112043	PtrMemberAccess	jump -> flags		1111618	0					
ANR	1112044	Identifier	jump		1111618	0					
ANR	1112045	Identifier	flags		1111618	1					
ANR	1112046	Identifier	JUMP_LABEL		1111618	1					
ANR	1112047	PtrMemberAccess	jump -> u . label -> addr		1111618	1					
ANR	1112048	MemberAccess	jump -> u . label		1111618	0					
ANR	1112049	PtrMemberAccess	jump -> u		1111618	0					
ANR	1112050	Identifier	jump		1111618	0					
ANR	1112051	Identifier	u		1111618	1					
ANR	1112052	Identifier	label		1111618	1					
ANR	1112053	Identifier	addr		1111618	1					
ANR	1112054	MemberAccess	jump -> u . target		1111618	2					
ANR	1112055	PtrMemberAccess	jump -> u		1111618	0					
ANR	1112056	Identifier	jump		1111618	0					
ANR	1112057	Identifier	u		1111618	1					
ANR	1112058	Identifier	target		1111618	1					
ANR	1112059	ExpressionStatement	buf_ptr = ( sljit_ins * ) jump -> addr	1077:3:32383:32416	1111618	1	True				
ANR	1112060	AssignmentExpression	buf_ptr = ( sljit_ins * ) jump -> addr		1111618	0		=			
ANR	1112061	Identifier	buf_ptr		1111618	0					
ANR	1112062	CastExpression	( sljit_ins * ) jump -> addr		1111618	1					
ANR	1112063	CastTarget	sljit_ins *		1111618	0					
ANR	1112064	PtrMemberAccess	jump -> addr		1111618	1					
ANR	1112065	Identifier	jump		1111618	0					
ANR	1112066	Identifier	addr		1111618	1					
ANR	1112067	IfStatement	if ( jump -> flags & PATCH_B )		1111618	2					
ANR	1112068	Condition	jump -> flags & PATCH_B	1079:7:32426:32446	1111618	0	True				
ANR	1112069	BitAndExpression	jump -> flags & PATCH_B		1111618	0		&			
ANR	1112070	PtrMemberAccess	jump -> flags		1111618	0					
ANR	1112071	Identifier	jump		1111618	0					
ANR	1112072	Identifier	flags		1111618	1					
ANR	1112073	Identifier	PATCH_B		1111618	1					
ANR	1112074	CompoundStatement		83:30:2086:2086	1111618	1					
ANR	1112075	ExpressionStatement	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3	1080:4:32455:32498	1111618	0	True				
ANR	1112076	AssignmentExpression	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1111618	0		=			
ANR	1112077	Identifier	addr		1111618	0					
ANR	1112078	ShiftExpression	( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1111618	1		>>			
ANR	1112079	CastExpression	( sljit_sw ) ( addr - ( jump -> addr ) )		1111618	0					
ANR	1112080	CastTarget	sljit_sw		1111618	0					
ANR	1112081	AdditiveExpression	addr - ( jump -> addr )		1111618	1		-			
ANR	1112082	Identifier	addr		1111618	0					
ANR	1112083	PtrMemberAccess	jump -> addr		1111618	1					
ANR	1112084	Identifier	jump		1111618	0					
ANR	1112085	Identifier	addr		1111618	1					
ANR	1112086	PrimaryExpression	3		1111618	1					
ANR	1112087	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN )	1081:4:32504:32588	1111618	1	True				
ANR	1112088	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN )		1111618	0					
ANR	1112089	Callee	SLJIT_ASSERT		1111618	0					
ANR	1112090	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1112091	ArgumentList	( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN		1111618	1					
ANR	1112092	Argument	( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN		1111618	0					
ANR	1112093	AndExpression	( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN		1111618	0		&&			
ANR	1112094	RelationalExpression	( sljit_sw ) addr <= SIMM_17BIT_MAX		1111618	0		<=			
ANR	1112095	CastExpression	( sljit_sw ) addr		1111618	0					
ANR	1112096	CastTarget	sljit_sw		1111618	0					
ANR	1112097	Identifier	addr		1111618	1					
ANR	1112098	Identifier	SIMM_17BIT_MAX		1111618	1					
ANR	1112099	RelationalExpression	( sljit_sw ) addr >= SIMM_17BIT_MIN		1111618	1		>=			
ANR	1112100	CastExpression	( sljit_sw ) addr		1111618	0					
ANR	1112101	CastTarget	sljit_sw		1111618	0					
ANR	1112102	Identifier	addr		1111618	1					
ANR	1112103	Identifier	SIMM_17BIT_MIN		1111618	1					
ANR	1112104	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( addr )	1082:4:32594:32652	1111618	2	True				
ANR	1112105	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( addr )		1111618	0		=			
ANR	1112106	ArrayIndexing	buf_ptr [ 0 ]		1111618	0					
ANR	1112107	Identifier	buf_ptr		1111618	0					
ANR	1112108	PrimaryExpression	0		1111618	1					
ANR	1112109	InclusiveOrExpression	( buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( addr )		1111618	1		|			
ANR	1112110	BitAndExpression	buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) )		1111618	0		&			
ANR	1112111	ArrayIndexing	buf_ptr [ 0 ]		1111618	0					
ANR	1112112	Identifier	buf_ptr		1111618	0					
ANR	1112113	PrimaryExpression	0		1111618	1					
ANR	1112114	UnaryOperationExpression	~ ( BOFF_X1 ( - 1 ) )		1111618	1					
ANR	1112115	UnaryOperator	~		1111618	0					
ANR	1112116	CallExpression	BOFF_X1 ( - 1 )		1111618	1					
ANR	1112117	Callee	BOFF_X1		1111618	0					
ANR	1112118	Identifier	BOFF_X1		1111618	0					
ANR	1112119	ArgumentList	- 1		1111618	1					
ANR	1112120	Argument	- 1		1111618	0					
ANR	1112121	UnaryOperationExpression	- 1		1111618	0					
ANR	1112122	UnaryOperator	-		1111618	0					
ANR	1112123	PrimaryExpression	1		1111618	1					
ANR	1112124	CallExpression	BOFF_X1 ( addr )		1111618	1					
ANR	1112125	Callee	BOFF_X1		1111618	0					
ANR	1112126	Identifier	BOFF_X1		1111618	0					
ANR	1112127	ArgumentList	addr		1111618	1					
ANR	1112128	Argument	addr		1111618	0					
ANR	1112129	Identifier	addr		1111618	0					
ANR	1112130	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	1085:4:32683:32728	1111618	3	True				
ANR	1112131	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1111618	0					
ANR	1112132	Callee	printf		1111618	0					
ANR	1112133	Identifier	printf		1111618	0					
ANR	1112134	ArgumentList	"""[runtime relocate]%04d:\\t"""		1111618	1					
ANR	1112135	Argument	"""[runtime relocate]%04d:\\t"""		1111618	0					
ANR	1112136	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1111618	0					
ANR	1112137	Argument	__LINE__		1111618	1					
ANR	1112138	Identifier	__LINE__		1111618	0					
ANR	1112139	ExpressionStatement	print_insn_tilegx ( buf_ptr )	1086:4:32734:32760	1111618	4	True				
ANR	1112140	CallExpression	print_insn_tilegx ( buf_ptr )		1111618	0					
ANR	1112141	Callee	print_insn_tilegx		1111618	0					
ANR	1112142	Identifier	print_insn_tilegx		1111618	0					
ANR	1112143	ArgumentList	buf_ptr		1111618	1					
ANR	1112144	Argument	buf_ptr		1111618	0					
ANR	1112145	Identifier	buf_ptr		1111618	0					
ANR	1112146	BreakStatement	break ;	1088:4:32773:32778	1111618	5	True				
ANR	1112147	IfStatement	if ( jump -> flags & PATCH_J )		1111618	3					
ANR	1112148	Condition	jump -> flags & PATCH_J	1091:7:32793:32813	1111618	0	True				
ANR	1112149	BitAndExpression	jump -> flags & PATCH_J		1111618	0		&			
ANR	1112150	PtrMemberAccess	jump -> flags		1111618	0					
ANR	1112151	Identifier	jump		1111618	0					
ANR	1112152	Identifier	flags		1111618	1					
ANR	1112153	Identifier	PATCH_J		1111618	1					
ANR	1112154	CompoundStatement		95:30:2453:2453	1111618	1					
ANR	1112155	ExpressionStatement	SLJIT_ASSERT ( ( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )	1092:4:32822:32910	1111618	0	True				
ANR	1112156	CallExpression	SLJIT_ASSERT ( ( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )		1111618	0					
ANR	1112157	Callee	SLJIT_ASSERT		1111618	0					
ANR	1112158	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1112159	ArgumentList	( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1111618	1					
ANR	1112160	Argument	( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1111618	0					
ANR	1112161	EqualityExpression	( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1111618	0		==			
ANR	1112162	BitAndExpression	addr & ~0x3FFFFFFFL		1111618	0		&			
ANR	1112163	Identifier	addr		1111618	0					
ANR	1112164	Identifier	~0x3FFFFFFFL		1111618	1					
ANR	1112165	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL		1111618	1		&			
ANR	1112166	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1111618	0		+			
ANR	1112167	PtrMemberAccess	jump -> addr		1111618	0					
ANR	1112168	Identifier	jump		1111618	0					
ANR	1112169	Identifier	addr		1111618	1					
ANR	1112170	SizeofExpression	sizeof ( sljit_ins )		1111618	1					
ANR	1112171	Sizeof	sizeof		1111618	0					
ANR	1112172	SizeofOperand	sljit_ins		1111618	1					
ANR	1112173	Identifier	~0x3FFFFFFFL		1111618	1					
ANR	1112174	ExpressionStatement	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3	1093:4:32916:32959	1111618	1	True				
ANR	1112175	AssignmentExpression	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1111618	0		=			
ANR	1112176	Identifier	addr		1111618	0					
ANR	1112177	ShiftExpression	( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1111618	1		>>			
ANR	1112178	CastExpression	( sljit_sw ) ( addr - ( jump -> addr ) )		1111618	0					
ANR	1112179	CastTarget	sljit_sw		1111618	0					
ANR	1112180	AdditiveExpression	addr - ( jump -> addr )		1111618	1		-			
ANR	1112181	Identifier	addr		1111618	0					
ANR	1112182	PtrMemberAccess	jump -> addr		1111618	1					
ANR	1112183	Identifier	jump		1111618	0					
ANR	1112184	Identifier	addr		1111618	1					
ANR	1112185	PrimaryExpression	3		1111618	1					
ANR	1112186	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) ) ) | JOFF_X1 ( addr )	1094:4:32965:33023	1111618	2	True				
ANR	1112187	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) ) ) | JOFF_X1 ( addr )		1111618	0		=			
ANR	1112188	ArrayIndexing	buf_ptr [ 0 ]		1111618	0					
ANR	1112189	Identifier	buf_ptr		1111618	0					
ANR	1112190	PrimaryExpression	0		1111618	1					
ANR	1112191	InclusiveOrExpression	( buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) ) ) | JOFF_X1 ( addr )		1111618	1		|			
ANR	1112192	BitAndExpression	buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) )		1111618	0		&			
ANR	1112193	ArrayIndexing	buf_ptr [ 0 ]		1111618	0					
ANR	1112194	Identifier	buf_ptr		1111618	0					
ANR	1112195	PrimaryExpression	0		1111618	1					
ANR	1112196	UnaryOperationExpression	~ ( JOFF_X1 ( - 1 ) )		1111618	1					
ANR	1112197	UnaryOperator	~		1111618	0					
ANR	1112198	CallExpression	JOFF_X1 ( - 1 )		1111618	1					
ANR	1112199	Callee	JOFF_X1		1111618	0					
ANR	1112200	Identifier	JOFF_X1		1111618	0					
ANR	1112201	ArgumentList	- 1		1111618	1					
ANR	1112202	Argument	- 1		1111618	0					
ANR	1112203	UnaryOperationExpression	- 1		1111618	0					
ANR	1112204	UnaryOperator	-		1111618	0					
ANR	1112205	PrimaryExpression	1		1111618	1					
ANR	1112206	CallExpression	JOFF_X1 ( addr )		1111618	1					
ANR	1112207	Callee	JOFF_X1		1111618	0					
ANR	1112208	Identifier	JOFF_X1		1111618	0					
ANR	1112209	ArgumentList	addr		1111618	1					
ANR	1112210	Argument	addr		1111618	0					
ANR	1112211	Identifier	addr		1111618	0					
ANR	1112212	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	1097:4:33054:33099	1111618	3	True				
ANR	1112213	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1111618	0					
ANR	1112214	Callee	printf		1111618	0					
ANR	1112215	Identifier	printf		1111618	0					
ANR	1112216	ArgumentList	"""[runtime relocate]%04d:\\t"""		1111618	1					
ANR	1112217	Argument	"""[runtime relocate]%04d:\\t"""		1111618	0					
ANR	1112218	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1111618	0					
ANR	1112219	Argument	__LINE__		1111618	1					
ANR	1112220	Identifier	__LINE__		1111618	0					
ANR	1112221	ExpressionStatement	print_insn_tilegx ( buf_ptr )	1098:4:33105:33131	1111618	4	True				
ANR	1112222	CallExpression	print_insn_tilegx ( buf_ptr )		1111618	0					
ANR	1112223	Callee	print_insn_tilegx		1111618	0					
ANR	1112224	Identifier	print_insn_tilegx		1111618	0					
ANR	1112225	ArgumentList	buf_ptr		1111618	1					
ANR	1112226	Argument	buf_ptr		1111618	0					
ANR	1112227	Identifier	buf_ptr		1111618	0					
ANR	1112228	BreakStatement	break ;	1100:4:33144:33149	1111618	5	True				
ANR	1112229	ExpressionStatement	SLJIT_ASSERT ( ! ( jump -> flags & IS_JAL ) )	1103:3:33160:33197	1111618	4	True				
ANR	1112230	CallExpression	SLJIT_ASSERT ( ! ( jump -> flags & IS_JAL ) )		1111618	0					
ANR	1112231	Callee	SLJIT_ASSERT		1111618	0					
ANR	1112232	Identifier	SLJIT_ASSERT		1111618	0					
ANR	1112233	ArgumentList	! ( jump -> flags & IS_JAL )		1111618	1					
ANR	1112234	Argument	! ( jump -> flags & IS_JAL )		1111618	0					
ANR	1112235	UnaryOperationExpression	! ( jump -> flags & IS_JAL )		1111618	0					
ANR	1112236	UnaryOperator	!		1111618	0					
ANR	1112237	BitAndExpression	jump -> flags & IS_JAL		1111618	1		&			
ANR	1112238	PtrMemberAccess	jump -> flags		1111618	0					
ANR	1112239	Identifier	jump		1111618	0					
ANR	1112240	Identifier	flags		1111618	1					
ANR	1112241	Identifier	IS_JAL		1111618	1					
ANR	1112242	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 32 ) & 0xFFFFL ) << 43 )	1106:3:33247:33326	1111618	5	True				
ANR	1112243	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 32 ) & 0xFFFFL ) << 43 )		1111618	0		=			
ANR	1112244	ArrayIndexing	buf_ptr [ 0 ]		1111618	0					
ANR	1112245	Identifier	buf_ptr		1111618	0					
ANR	1112246	PrimaryExpression	0		1111618	1					
ANR	1112247	InclusiveOrExpression	( buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 32 ) & 0xFFFFL ) << 43 )		1111618	1		|			
ANR	1112248	BitAndExpression	buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 )		1111618	0		&			
ANR	1112249	ArrayIndexing	buf_ptr [ 0 ]		1111618	0					
ANR	1112250	Identifier	buf_ptr		1111618	0					
ANR	1112251	PrimaryExpression	0		1111618	1					
ANR	1112252	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1111618	1					
ANR	1112253	UnaryOperator	~		1111618	0					
ANR	1112254	ShiftExpression	0xFFFFL << 43		1111618	1		<<			
ANR	1112255	PrimaryExpression	0xFFFFL		1111618	0					
ANR	1112256	PrimaryExpression	43		1111618	1					
ANR	1112257	ShiftExpression	( ( addr >> 32 ) & 0xFFFFL ) << 43		1111618	1		<<			
ANR	1112258	BitAndExpression	( addr >> 32 ) & 0xFFFFL		1111618	0		&			
ANR	1112259	ShiftExpression	addr >> 32		1111618	0		>>			
ANR	1112260	Identifier	addr		1111618	0					
ANR	1112261	PrimaryExpression	32		1111618	1					
ANR	1112262	PrimaryExpression	0xFFFFL		1111618	1					
ANR	1112263	PrimaryExpression	43		1111618	1					
ANR	1112264	ExpressionStatement	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 16 ) & 0xFFFFL ) << 43 )	1107:3:33331:33410	1111618	6	True				
ANR	1112265	AssignmentExpression	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 16 ) & 0xFFFFL ) << 43 )		1111618	0		=			
ANR	1112266	ArrayIndexing	buf_ptr [ 1 ]		1111618	0					
ANR	1112267	Identifier	buf_ptr		1111618	0					
ANR	1112268	PrimaryExpression	1		1111618	1					
ANR	1112269	InclusiveOrExpression	( buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 16 ) & 0xFFFFL ) << 43 )		1111618	1		|			
ANR	1112270	BitAndExpression	buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 )		1111618	0		&			
ANR	1112271	ArrayIndexing	buf_ptr [ 1 ]		1111618	0					
ANR	1112272	Identifier	buf_ptr		1111618	0					
ANR	1112273	PrimaryExpression	1		1111618	1					
ANR	1112274	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1111618	1					
ANR	1112275	UnaryOperator	~		1111618	0					
ANR	1112276	ShiftExpression	0xFFFFL << 43		1111618	1		<<			
ANR	1112277	PrimaryExpression	0xFFFFL		1111618	0					
ANR	1112278	PrimaryExpression	43		1111618	1					
ANR	1112279	ShiftExpression	( ( addr >> 16 ) & 0xFFFFL ) << 43		1111618	1		<<			
ANR	1112280	BitAndExpression	( addr >> 16 ) & 0xFFFFL		1111618	0		&			
ANR	1112281	ShiftExpression	addr >> 16		1111618	0		>>			
ANR	1112282	Identifier	addr		1111618	0					
ANR	1112283	PrimaryExpression	16		1111618	1					
ANR	1112284	PrimaryExpression	0xFFFFL		1111618	1					
ANR	1112285	PrimaryExpression	43		1111618	1					
ANR	1112286	ExpressionStatement	buf_ptr [ 2 ] = ( buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( addr & 0xFFFFL ) << 43 )	1108:3:33415:33486	1111618	7	True				
ANR	1112287	AssignmentExpression	buf_ptr [ 2 ] = ( buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( addr & 0xFFFFL ) << 43 )		1111618	0		=			
ANR	1112288	ArrayIndexing	buf_ptr [ 2 ]		1111618	0					
ANR	1112289	Identifier	buf_ptr		1111618	0					
ANR	1112290	PrimaryExpression	2		1111618	1					
ANR	1112291	InclusiveOrExpression	( buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( addr & 0xFFFFL ) << 43 )		1111618	1		|			
ANR	1112292	BitAndExpression	buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 )		1111618	0		&			
ANR	1112293	ArrayIndexing	buf_ptr [ 2 ]		1111618	0					
ANR	1112294	Identifier	buf_ptr		1111618	0					
ANR	1112295	PrimaryExpression	2		1111618	1					
ANR	1112296	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1111618	1					
ANR	1112297	UnaryOperator	~		1111618	0					
ANR	1112298	ShiftExpression	0xFFFFL << 43		1111618	1		<<			
ANR	1112299	PrimaryExpression	0xFFFFL		1111618	0					
ANR	1112300	PrimaryExpression	43		1111618	1					
ANR	1112301	ShiftExpression	( addr & 0xFFFFL ) << 43		1111618	1		<<			
ANR	1112302	BitAndExpression	addr & 0xFFFFL		1111618	0		&			
ANR	1112303	Identifier	addr		1111618	0					
ANR	1112304	PrimaryExpression	0xFFFFL		1111618	1					
ANR	1112305	PrimaryExpression	43		1111618	1					
ANR	1112306	Condition	0	1109:11:33499:33499	1111618	1	True				
ANR	1112307	PrimaryExpression	0		1111618	0					
ANR	1112308	ExpressionStatement	jump = jump -> next	1111:2:33506:33523	1111618	1	True				
ANR	1112309	AssignmentExpression	jump = jump -> next		1111618	0		=			
ANR	1112310	Identifier	jump		1111618	0					
ANR	1112311	PtrMemberAccess	jump -> next		1111618	1					
ANR	1112312	Identifier	jump		1111618	0					
ANR	1112313	Identifier	next		1111618	1					
ANR	1112314	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	1114:1:33530:33566	1111618	29	True				
ANR	1112315	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1111618	0		=			
ANR	1112316	PtrMemberAccess	compiler -> error		1111618	0					
ANR	1112317	Identifier	compiler		1111618	0					
ANR	1112318	Identifier	error		1111618	1					
ANR	1112319	Identifier	SLJIT_ERR_COMPILED		1111618	1					
ANR	1112320	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )	1115:1:33569:33634	1111618	30	True				
ANR	1112321	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )		1111618	0		=			
ANR	1112322	PtrMemberAccess	compiler -> executable_size		1111618	0					
ANR	1112323	Identifier	compiler		1111618	0					
ANR	1112324	Identifier	executable_size		1111618	1					
ANR	1112325	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_ins )		1111618	1		*			
ANR	1112326	AdditiveExpression	code_ptr - code		1111618	0		-			
ANR	1112327	Identifier	code_ptr		1111618	0					
ANR	1112328	Identifier	code		1111618	1					
ANR	1112329	SizeofExpression	sizeof ( sljit_ins )		1111618	1					
ANR	1112330	Sizeof	sizeof		1111618	0					
ANR	1112331	SizeofOperand	sljit_ins		1111618	1					
ANR	1112332	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	1116:1:33637:33670	1111618	31	True				
ANR	1112333	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1111618	0					
ANR	1112334	Callee	SLJIT_CACHE_FLUSH		1111618	0					
ANR	1112335	Identifier	SLJIT_CACHE_FLUSH		1111618	0					
ANR	1112336	ArgumentList	code		1111618	1					
ANR	1112337	Argument	code		1111618	0					
ANR	1112338	Identifier	code		1111618	0					
ANR	1112339	Argument	code_ptr		1111618	1					
ANR	1112340	Identifier	code_ptr		1111618	0					
ANR	1112341	ReturnStatement	return code ;	1117:1:33673:33684	1111618	32	True				
ANR	1112342	Identifier	code		1111618	0					
ANR	1112343	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1111618	1					
ANR	1112344	Identifier	sljit_generate_code		1111618	2					
ANR	1112345	ParameterList	struct sljit_compiler * compiler		1111618	3					
ANR	1112346	Parameter	struct sljit_compiler * compiler	996:52:30329:30359	1111618	0	True				
ANR	1112347	ParameterType	struct sljit_compiler *		1111618	0					
ANR	1112348	Identifier	compiler		1111618	1					
ANR	1112349	CFGEntryNode	ENTRY		1111618		True				
ANR	1112350	CFGExitNode	EXIT		1111618		True				
ANR	1112351	Symbol	SIMM_17BIT_MIN		1111618						
ANR	1112352	Symbol	label -> addr		1111618						
ANR	1112353	Symbol	compiler -> buf		1111618						
ANR	1112354	Symbol	SLJIT_MALLOC_EXEC		1111618						
ANR	1112355	Symbol	JUMP_LABEL		1111618						
ANR	1112356	Symbol	label -> next		1111618						
ANR	1112357	Symbol	* compiler		1111618						
ANR	1112358	Symbol	const_ -> next		1111618						
ANR	1112359	Symbol	const_ -> addr		1111618						
ANR	1112360	Symbol	buf -> next		1111618						
ANR	1112361	Symbol	buf_end		1111618						
ANR	1112362	Symbol	compiler -> executable_size		1111618						
ANR	1112363	Symbol	jump		1111618						
ANR	1112364	Symbol	buf -> used_size		1111618						
ANR	1112365	Symbol	check_sljit_generate_code		1111618						
ANR	1112366	Symbol	* buf		1111618						
ANR	1112367	Symbol	compiler -> labels		1111618						
ANR	1112368	Symbol	buf -> memory		1111618						
ANR	1112369	Symbol	detect_jump_type		1111618						
ANR	1112370	Symbol	* buf_ptr ++		1111618						
ANR	1112371	Symbol	jump -> addr		1111618						
ANR	1112372	Symbol	BOFF_X1		1111618						
ANR	1112373	Symbol	IS_JAL		1111618						
ANR	1112374	Symbol	buf_ptr		1111618						
ANR	1112375	Symbol	* code_ptr		1111618						
ANR	1112376	Symbol	* jump -> u . label		1111618						
ANR	1112377	Symbol	jump -> u . target		1111618						
ANR	1112378	Symbol	compiler -> jumps		1111618						
ANR	1112379	Symbol	label -> size		1111618						
ANR	1112380	Symbol	jump -> next		1111618						
ANR	1112381	Symbol	code		1111618						
ANR	1112382	Symbol	* * jump		1111618						
ANR	1112383	Symbol	* jump		1111618						
ANR	1112384	Symbol	JOFF_X1		1111618						
ANR	1112385	Symbol	jump -> u		1111618						
ANR	1112386	Symbol	jump -> flags		1111618						
ANR	1112387	Symbol	word_count		1111618						
ANR	1112388	Symbol	code_ptr		1111618						
ANR	1112389	Symbol	compiler		1111618						
ANR	1112390	Symbol	addr		1111618						
ANR	1112391	Symbol	* buf_ptr		1111618						
ANR	1112392	Symbol	const_		1111618						
ANR	1112393	Symbol	compiler -> consts		1111618						
ANR	1112394	Symbol	~0x3FFFFFFFL		1111618						
ANR	1112395	Symbol	* const_		1111618						
ANR	1112396	Symbol	label		1111618						
ANR	1112397	Symbol	__LINE__		1111618						
ANR	1112398	Symbol	PATCH_J		1111618						
ANR	1112399	Symbol	buf		1111618						
ANR	1112400	Symbol	SIMM_17BIT_MAX		1111618						
ANR	1112401	Symbol	compiler -> size		1111618						
ANR	1112402	Symbol	* jump -> u		1111618						
ANR	1112403	Symbol	PATCH_B		1111618						
ANR	1112404	Symbol	jump -> u . label -> addr		1111618						
ANR	1112405	Symbol	jump -> u . label		1111618						
ANR	1112406	Symbol	SLJIT_ERR_COMPILED		1111618						
ANR	1112407	Symbol	compiler -> error		1111618						
ANR	1112408	Symbol	* label		1111618						
ANR	1112409	Function	load_immediate	1120:0:33689:34395							
ANR	1112410	FunctionDef	"load_immediate (struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm)"		1112409	0					
ANR	1112411	CompoundStatement		1121:0:33784:34395	1112409	0					
ANR	1112412	IfStatement	if ( imm <= SIMM_16BIT_MAX && imm >= SIMM_16BIT_MIN )		1112409	0					
ANR	1112413	Condition	imm <= SIMM_16BIT_MAX && imm >= SIMM_16BIT_MIN	1123:5:33792:33837	1112409	0	True				
ANR	1112414	AndExpression	imm <= SIMM_16BIT_MAX && imm >= SIMM_16BIT_MIN		1112409	0		&&			
ANR	1112415	RelationalExpression	imm <= SIMM_16BIT_MAX		1112409	0		<=			
ANR	1112416	Identifier	imm		1112409	0					
ANR	1112417	Identifier	SIMM_16BIT_MAX		1112409	1					
ANR	1112418	RelationalExpression	imm >= SIMM_16BIT_MIN		1112409	1		>=			
ANR	1112419	Identifier	imm		1112409	0					
ANR	1112420	Identifier	SIMM_16BIT_MIN		1112409	1					
ANR	1112421	ReturnStatement	"return ADDLI ( dst_ar , ZERO , imm ) ;"	1124:2:33842:33873	1112409	1	True				
ANR	1112422	CallExpression	"ADDLI ( dst_ar , ZERO , imm )"		1112409	0					
ANR	1112423	Callee	ADDLI		1112409	0					
ANR	1112424	Identifier	ADDLI		1112409	0					
ANR	1112425	ArgumentList	dst_ar		1112409	1					
ANR	1112426	Argument	dst_ar		1112409	0					
ANR	1112427	Identifier	dst_ar		1112409	0					
ANR	1112428	Argument	ZERO		1112409	1					
ANR	1112429	Identifier	ZERO		1112409	0					
ANR	1112430	Argument	imm		1112409	2					
ANR	1112431	Identifier	imm		1112409	0					
ANR	1112432	IfStatement	if ( imm <= SIMM_32BIT_MAX && imm >= SIMM_32BIT_MIN )		1112409	1					
ANR	1112433	Condition	imm <= SIMM_32BIT_MAX && imm >= SIMM_32BIT_MIN	1126:5:33881:33926	1112409	0	True				
ANR	1112434	AndExpression	imm <= SIMM_32BIT_MAX && imm >= SIMM_32BIT_MIN		1112409	0		&&			
ANR	1112435	RelationalExpression	imm <= SIMM_32BIT_MAX		1112409	0		<=			
ANR	1112436	Identifier	imm		1112409	0					
ANR	1112437	Identifier	SIMM_32BIT_MAX		1112409	1					
ANR	1112438	RelationalExpression	imm >= SIMM_32BIT_MIN		1112409	1		>=			
ANR	1112439	Identifier	imm		1112409	0					
ANR	1112440	Identifier	SIMM_32BIT_MIN		1112409	1					
ANR	1112441	CompoundStatement		6:53:144:144	1112409	1					
ANR	1112442	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 16 ) )"	1127:2:33933:33972	1112409	0	True				
ANR	1112443	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 16 ) )"		1112409	0					
ANR	1112444	Callee	FAIL_IF		1112409	0					
ANR	1112445	Identifier	FAIL_IF		1112409	0					
ANR	1112446	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 16 )"		1112409	1					
ANR	1112447	Argument	"ADDLI ( dst_ar , ZERO , imm >> 16 )"		1112409	0					
ANR	1112448	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 16 )"		1112409	0					
ANR	1112449	Callee	ADDLI		1112409	0					
ANR	1112450	Identifier	ADDLI		1112409	0					
ANR	1112451	ArgumentList	dst_ar		1112409	1					
ANR	1112452	Argument	dst_ar		1112409	0					
ANR	1112453	Identifier	dst_ar		1112409	0					
ANR	1112454	Argument	ZERO		1112409	1					
ANR	1112455	Identifier	ZERO		1112409	0					
ANR	1112456	Argument	imm >> 16		1112409	2					
ANR	1112457	ShiftExpression	imm >> 16		1112409	0		>>			
ANR	1112458	Identifier	imm		1112409	0					
ANR	1112459	PrimaryExpression	16		1112409	1					
ANR	1112460	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1128:2:33976:34014	1112409	1	True				
ANR	1112461	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1112409	0					
ANR	1112462	Callee	SHL16INSLI		1112409	0					
ANR	1112463	Identifier	SHL16INSLI		1112409	0					
ANR	1112464	ArgumentList	dst_ar		1112409	1					
ANR	1112465	Argument	dst_ar		1112409	0					
ANR	1112466	Identifier	dst_ar		1112409	0					
ANR	1112467	Argument	dst_ar		1112409	1					
ANR	1112468	Identifier	dst_ar		1112409	0					
ANR	1112469	Argument	imm		1112409	2					
ANR	1112470	Identifier	imm		1112409	0					
ANR	1112471	IfStatement	if ( imm <= SIMM_48BIT_MAX && imm >= SIMM_48BIT_MIN )		1112409	2					
ANR	1112472	Condition	imm <= SIMM_48BIT_MAX && imm >= SIMM_48BIT_MIN	1131:5:34025:34070	1112409	0	True				
ANR	1112473	AndExpression	imm <= SIMM_48BIT_MAX && imm >= SIMM_48BIT_MIN		1112409	0		&&			
ANR	1112474	RelationalExpression	imm <= SIMM_48BIT_MAX		1112409	0		<=			
ANR	1112475	Identifier	imm		1112409	0					
ANR	1112476	Identifier	SIMM_48BIT_MAX		1112409	1					
ANR	1112477	RelationalExpression	imm >= SIMM_48BIT_MIN		1112409	1		>=			
ANR	1112478	Identifier	imm		1112409	0					
ANR	1112479	Identifier	SIMM_48BIT_MIN		1112409	1					
ANR	1112480	CompoundStatement		11:53:288:288	1112409	1					
ANR	1112481	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"	1132:2:34077:34116	1112409	0	True				
ANR	1112482	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"		1112409	0					
ANR	1112483	Callee	FAIL_IF		1112409	0					
ANR	1112484	Identifier	FAIL_IF		1112409	0					
ANR	1112485	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1112409	1					
ANR	1112486	Argument	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1112409	0					
ANR	1112487	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1112409	0					
ANR	1112488	Callee	ADDLI		1112409	0					
ANR	1112489	Identifier	ADDLI		1112409	0					
ANR	1112490	ArgumentList	dst_ar		1112409	1					
ANR	1112491	Argument	dst_ar		1112409	0					
ANR	1112492	Identifier	dst_ar		1112409	0					
ANR	1112493	Argument	ZERO		1112409	1					
ANR	1112494	Identifier	ZERO		1112409	0					
ANR	1112495	Argument	imm >> 32		1112409	2					
ANR	1112496	ShiftExpression	imm >> 32		1112409	0		>>			
ANR	1112497	Identifier	imm		1112409	0					
ANR	1112498	PrimaryExpression	32		1112409	1					
ANR	1112499	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"	1133:2:34120:34166	1112409	1	True				
ANR	1112500	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"		1112409	0					
ANR	1112501	Callee	FAIL_IF		1112409	0					
ANR	1112502	Identifier	FAIL_IF		1112409	0					
ANR	1112503	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112409	1					
ANR	1112504	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112409	0					
ANR	1112505	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112409	0					
ANR	1112506	Callee	SHL16INSLI		1112409	0					
ANR	1112507	Identifier	SHL16INSLI		1112409	0					
ANR	1112508	ArgumentList	dst_ar		1112409	1					
ANR	1112509	Argument	dst_ar		1112409	0					
ANR	1112510	Identifier	dst_ar		1112409	0					
ANR	1112511	Argument	dst_ar		1112409	1					
ANR	1112512	Identifier	dst_ar		1112409	0					
ANR	1112513	Argument	imm >> 16		1112409	2					
ANR	1112514	ShiftExpression	imm >> 16		1112409	0		>>			
ANR	1112515	Identifier	imm		1112409	0					
ANR	1112516	PrimaryExpression	16		1112409	1					
ANR	1112517	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1134:2:34170:34208	1112409	2	True				
ANR	1112518	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1112409	0					
ANR	1112519	Callee	SHL16INSLI		1112409	0					
ANR	1112520	Identifier	SHL16INSLI		1112409	0					
ANR	1112521	ArgumentList	dst_ar		1112409	1					
ANR	1112522	Argument	dst_ar		1112409	0					
ANR	1112523	Identifier	dst_ar		1112409	0					
ANR	1112524	Argument	dst_ar		1112409	1					
ANR	1112525	Identifier	dst_ar		1112409	0					
ANR	1112526	Argument	imm		1112409	2					
ANR	1112527	Identifier	imm		1112409	0					
ANR	1112528	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 48 ) )"	1137:1:34215:34254	1112409	3	True				
ANR	1112529	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 48 ) )"		1112409	0					
ANR	1112530	Callee	FAIL_IF		1112409	0					
ANR	1112531	Identifier	FAIL_IF		1112409	0					
ANR	1112532	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 48 )"		1112409	1					
ANR	1112533	Argument	"ADDLI ( dst_ar , ZERO , imm >> 48 )"		1112409	0					
ANR	1112534	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 48 )"		1112409	0					
ANR	1112535	Callee	ADDLI		1112409	0					
ANR	1112536	Identifier	ADDLI		1112409	0					
ANR	1112537	ArgumentList	dst_ar		1112409	1					
ANR	1112538	Argument	dst_ar		1112409	0					
ANR	1112539	Identifier	dst_ar		1112409	0					
ANR	1112540	Argument	ZERO		1112409	1					
ANR	1112541	Identifier	ZERO		1112409	0					
ANR	1112542	Argument	imm >> 48		1112409	2					
ANR	1112543	ShiftExpression	imm >> 48		1112409	0		>>			
ANR	1112544	Identifier	imm		1112409	0					
ANR	1112545	PrimaryExpression	48		1112409	1					
ANR	1112546	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 32 ) )"	1138:1:34257:34303	1112409	4	True				
ANR	1112547	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 32 ) )"		1112409	0					
ANR	1112548	Callee	FAIL_IF		1112409	0					
ANR	1112549	Identifier	FAIL_IF		1112409	0					
ANR	1112550	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 32 )"		1112409	1					
ANR	1112551	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 32 )"		1112409	0					
ANR	1112552	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 32 )"		1112409	0					
ANR	1112553	Callee	SHL16INSLI		1112409	0					
ANR	1112554	Identifier	SHL16INSLI		1112409	0					
ANR	1112555	ArgumentList	dst_ar		1112409	1					
ANR	1112556	Argument	dst_ar		1112409	0					
ANR	1112557	Identifier	dst_ar		1112409	0					
ANR	1112558	Argument	dst_ar		1112409	1					
ANR	1112559	Identifier	dst_ar		1112409	0					
ANR	1112560	Argument	imm >> 32		1112409	2					
ANR	1112561	ShiftExpression	imm >> 32		1112409	0		>>			
ANR	1112562	Identifier	imm		1112409	0					
ANR	1112563	PrimaryExpression	32		1112409	1					
ANR	1112564	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"	1139:1:34306:34352	1112409	5	True				
ANR	1112565	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"		1112409	0					
ANR	1112566	Callee	FAIL_IF		1112409	0					
ANR	1112567	Identifier	FAIL_IF		1112409	0					
ANR	1112568	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112409	1					
ANR	1112569	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112409	0					
ANR	1112570	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112409	0					
ANR	1112571	Callee	SHL16INSLI		1112409	0					
ANR	1112572	Identifier	SHL16INSLI		1112409	0					
ANR	1112573	ArgumentList	dst_ar		1112409	1					
ANR	1112574	Argument	dst_ar		1112409	0					
ANR	1112575	Identifier	dst_ar		1112409	0					
ANR	1112576	Argument	dst_ar		1112409	1					
ANR	1112577	Identifier	dst_ar		1112409	0					
ANR	1112578	Argument	imm >> 16		1112409	2					
ANR	1112579	ShiftExpression	imm >> 16		1112409	0		>>			
ANR	1112580	Identifier	imm		1112409	0					
ANR	1112581	PrimaryExpression	16		1112409	1					
ANR	1112582	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1140:1:34355:34393	1112409	6	True				
ANR	1112583	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1112409	0					
ANR	1112584	Callee	SHL16INSLI		1112409	0					
ANR	1112585	Identifier	SHL16INSLI		1112409	0					
ANR	1112586	ArgumentList	dst_ar		1112409	1					
ANR	1112587	Argument	dst_ar		1112409	0					
ANR	1112588	Identifier	dst_ar		1112409	0					
ANR	1112589	Argument	dst_ar		1112409	1					
ANR	1112590	Identifier	dst_ar		1112409	0					
ANR	1112591	Argument	imm		1112409	2					
ANR	1112592	Identifier	imm		1112409	0					
ANR	1112593	ReturnType	static sljit_si		1112409	1					
ANR	1112594	Identifier	load_immediate		1112409	2					
ANR	1112595	ParameterList	"struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm"		1112409	3					
ANR	1112596	Parameter	struct sljit_compiler * compiler	1120:31:33720:33750	1112409	0	True				
ANR	1112597	ParameterType	struct sljit_compiler *		1112409	0					
ANR	1112598	Identifier	compiler		1112409	1					
ANR	1112599	Parameter	sljit_si dst_ar	1120:64:33753:33767	1112409	1	True				
ANR	1112600	ParameterType	sljit_si		1112409	0					
ANR	1112601	Identifier	dst_ar		1112409	1					
ANR	1112602	Parameter	sljit_sw imm	1120:81:33770:33781	1112409	2	True				
ANR	1112603	ParameterType	sljit_sw		1112409	0					
ANR	1112604	Identifier	imm		1112409	1					
ANR	1112605	CFGEntryNode	ENTRY		1112409		True				
ANR	1112606	CFGExitNode	EXIT		1112409		True				
ANR	1112607	Symbol	ZERO		1112409						
ANR	1112608	Symbol	SIMM_16BIT_MIN		1112409						
ANR	1112609	Symbol	SIMM_48BIT_MIN		1112409						
ANR	1112610	Symbol	dst_ar		1112409						
ANR	1112611	Symbol	SIMM_16BIT_MAX		1112409						
ANR	1112612	Symbol	SIMM_48BIT_MAX		1112409						
ANR	1112613	Symbol	SHL16INSLI		1112409						
ANR	1112614	Symbol	imm		1112409						
ANR	1112615	Symbol	compiler		1112409						
ANR	1112616	Symbol	SIMM_32BIT_MIN		1112409						
ANR	1112617	Symbol	ADDLI		1112409						
ANR	1112618	Symbol	SIMM_32BIT_MAX		1112409						
ANR	1112619	Function	emit_const	1143:0:34398:34932							
ANR	1112620	FunctionDef	"emit_const (struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush)"		1112619	0					
ANR	1112621	CompoundStatement		1144:0:34500:34932	1112619	0					
ANR	1112622	IfStatement	if ( flush )		1112619	0					
ANR	1112623	Condition	flush	1147:5:34637:34641	1112619	0	True				
ANR	1112624	Identifier	flush		1112619	0					
ANR	1112625	CompoundStatement		4:12:143:143	1112619	1					
ANR	1112626	ExpressionStatement	"FAIL_IF ( ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 ) )"	1148:2:34648:34692	1112619	0	True				
ANR	1112627	CallExpression	"FAIL_IF ( ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 ) )"		1112619	0					
ANR	1112628	Callee	FAIL_IF		1112619	0					
ANR	1112629	Identifier	FAIL_IF		1112619	0					
ANR	1112630	ArgumentList	"ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 )"		1112619	1					
ANR	1112631	Argument	"ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 )"		1112619	0					
ANR	1112632	CallExpression	"ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 )"		1112619	0					
ANR	1112633	Callee	ADDLI_SOLO		1112619	0					
ANR	1112634	Identifier	ADDLI_SOLO		1112619	0					
ANR	1112635	ArgumentList	dst_ar		1112619	1					
ANR	1112636	Argument	dst_ar		1112619	0					
ANR	1112637	Identifier	dst_ar		1112619	0					
ANR	1112638	Argument	ZERO		1112619	1					
ANR	1112639	Identifier	ZERO		1112619	0					
ANR	1112640	Argument	imm >> 32		1112619	2					
ANR	1112641	ShiftExpression	imm >> 32		1112619	0		>>			
ANR	1112642	Identifier	imm		1112619	0					
ANR	1112643	PrimaryExpression	32		1112619	1					
ANR	1112644	ExpressionStatement	"FAIL_IF ( SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 ) )"	1149:2:34696:34747	1112619	1	True				
ANR	1112645	CallExpression	"FAIL_IF ( SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 ) )"		1112619	0					
ANR	1112646	Callee	FAIL_IF		1112619	0					
ANR	1112647	Identifier	FAIL_IF		1112619	0					
ANR	1112648	ArgumentList	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 )"		1112619	1					
ANR	1112649	Argument	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 )"		1112619	0					
ANR	1112650	CallExpression	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 )"		1112619	0					
ANR	1112651	Callee	SHL16INSLI_SOLO		1112619	0					
ANR	1112652	Identifier	SHL16INSLI_SOLO		1112619	0					
ANR	1112653	ArgumentList	dst_ar		1112619	1					
ANR	1112654	Argument	dst_ar		1112619	0					
ANR	1112655	Identifier	dst_ar		1112619	0					
ANR	1112656	Argument	dst_ar		1112619	1					
ANR	1112657	Identifier	dst_ar		1112619	0					
ANR	1112658	Argument	imm >> 16		1112619	2					
ANR	1112659	ShiftExpression	imm >> 16		1112619	0		>>			
ANR	1112660	Identifier	imm		1112619	0					
ANR	1112661	PrimaryExpression	16		1112619	1					
ANR	1112662	ReturnStatement	"return SHL16INSLI_SOLO ( dst_ar , dst_ar , imm ) ;"	1150:2:34751:34794	1112619	2	True				
ANR	1112663	CallExpression	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm )"		1112619	0					
ANR	1112664	Callee	SHL16INSLI_SOLO		1112619	0					
ANR	1112665	Identifier	SHL16INSLI_SOLO		1112619	0					
ANR	1112666	ArgumentList	dst_ar		1112619	1					
ANR	1112667	Argument	dst_ar		1112619	0					
ANR	1112668	Identifier	dst_ar		1112619	0					
ANR	1112669	Argument	dst_ar		1112619	1					
ANR	1112670	Identifier	dst_ar		1112619	0					
ANR	1112671	Argument	imm		1112619	2					
ANR	1112672	Identifier	imm		1112619	0					
ANR	1112673	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"	1153:1:34801:34840	1112619	1	True				
ANR	1112674	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"		1112619	0					
ANR	1112675	Callee	FAIL_IF		1112619	0					
ANR	1112676	Identifier	FAIL_IF		1112619	0					
ANR	1112677	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1112619	1					
ANR	1112678	Argument	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1112619	0					
ANR	1112679	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1112619	0					
ANR	1112680	Callee	ADDLI		1112619	0					
ANR	1112681	Identifier	ADDLI		1112619	0					
ANR	1112682	ArgumentList	dst_ar		1112619	1					
ANR	1112683	Argument	dst_ar		1112619	0					
ANR	1112684	Identifier	dst_ar		1112619	0					
ANR	1112685	Argument	ZERO		1112619	1					
ANR	1112686	Identifier	ZERO		1112619	0					
ANR	1112687	Argument	imm >> 32		1112619	2					
ANR	1112688	ShiftExpression	imm >> 32		1112619	0		>>			
ANR	1112689	Identifier	imm		1112619	0					
ANR	1112690	PrimaryExpression	32		1112619	1					
ANR	1112691	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"	1154:1:34843:34889	1112619	2	True				
ANR	1112692	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"		1112619	0					
ANR	1112693	Callee	FAIL_IF		1112619	0					
ANR	1112694	Identifier	FAIL_IF		1112619	0					
ANR	1112695	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112619	1					
ANR	1112696	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112619	0					
ANR	1112697	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1112619	0					
ANR	1112698	Callee	SHL16INSLI		1112619	0					
ANR	1112699	Identifier	SHL16INSLI		1112619	0					
ANR	1112700	ArgumentList	dst_ar		1112619	1					
ANR	1112701	Argument	dst_ar		1112619	0					
ANR	1112702	Identifier	dst_ar		1112619	0					
ANR	1112703	Argument	dst_ar		1112619	1					
ANR	1112704	Identifier	dst_ar		1112619	0					
ANR	1112705	Argument	imm >> 16		1112619	2					
ANR	1112706	ShiftExpression	imm >> 16		1112619	0		>>			
ANR	1112707	Identifier	imm		1112619	0					
ANR	1112708	PrimaryExpression	16		1112619	1					
ANR	1112709	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1155:1:34892:34930	1112619	3	True				
ANR	1112710	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1112619	0					
ANR	1112711	Callee	SHL16INSLI		1112619	0					
ANR	1112712	Identifier	SHL16INSLI		1112619	0					
ANR	1112713	ArgumentList	dst_ar		1112619	1					
ANR	1112714	Argument	dst_ar		1112619	0					
ANR	1112715	Identifier	dst_ar		1112619	0					
ANR	1112716	Argument	dst_ar		1112619	1					
ANR	1112717	Identifier	dst_ar		1112619	0					
ANR	1112718	Argument	imm		1112619	2					
ANR	1112719	Identifier	imm		1112619	0					
ANR	1112720	ReturnType	static sljit_si		1112619	1					
ANR	1112721	Identifier	emit_const		1112619	2					
ANR	1112722	ParameterList	"struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush"		1112619	3					
ANR	1112723	Parameter	struct sljit_compiler * compiler	1143:27:34425:34455	1112619	0	True				
ANR	1112724	ParameterType	struct sljit_compiler *		1112619	0					
ANR	1112725	Identifier	compiler		1112619	1					
ANR	1112726	Parameter	sljit_si dst_ar	1143:60:34458:34472	1112619	1	True				
ANR	1112727	ParameterType	sljit_si		1112619	0					
ANR	1112728	Identifier	dst_ar		1112619	1					
ANR	1112729	Parameter	sljit_sw imm	1143:77:34475:34486	1112619	2	True				
ANR	1112730	ParameterType	sljit_sw		1112619	0					
ANR	1112731	Identifier	imm		1112619	1					
ANR	1112732	Parameter	int flush	1143:91:34489:34497	1112619	3	True				
ANR	1112733	ParameterType	int		1112619	0					
ANR	1112734	Identifier	flush		1112619	1					
ANR	1112735	CFGEntryNode	ENTRY		1112619		True				
ANR	1112736	CFGExitNode	EXIT		1112619		True				
ANR	1112737	Symbol	ADDLI_SOLO		1112619						
ANR	1112738	Symbol	ZERO		1112619						
ANR	1112739	Symbol	dst_ar		1112619						
ANR	1112740	Symbol	flush		1112619						
ANR	1112741	Symbol	SHL16INSLI		1112619						
ANR	1112742	Symbol	imm		1112619						
ANR	1112743	Symbol	compiler		1112619						
ANR	1112744	Symbol	SHL16INSLI_SOLO		1112619						
ANR	1112745	Symbol	ADDLI		1112619						
ANR	1112746	Function	emit_const_64	1158:0:34935:35702							
ANR	1112747	FunctionDef	"emit_const_64 (struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush)"		1112746	0					
ANR	1112748	CompoundStatement		1159:0:35040:35702	1112746	0					
ANR	1112749	IfStatement	if ( flush )		1112746	0					
ANR	1112750	Condition	flush	1162:5:35177:35181	1112746	0	True				
ANR	1112751	Identifier	flush		1112746	0					
ANR	1112752	CompoundStatement		4:12:143:143	1112746	1					
ANR	1112753	ExpressionStatement	"FAIL_IF ( ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"	1163:2:35188:35241	1112746	0	True				
ANR	1112754	CallExpression	"FAIL_IF ( ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"		1112746	0					
ANR	1112755	Callee	FAIL_IF		1112746	0					
ANR	1112756	Identifier	FAIL_IF		1112746	0					
ANR	1112757	ArgumentList	"ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1112746	1					
ANR	1112758	Argument	"ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1112746	0					
ANR	1112759	CallExpression	"ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1112746	0					
ANR	1112760	Callee	ADDLI_SOLO		1112746	0					
ANR	1112761	Identifier	ADDLI_SOLO		1112746	0					
ANR	1112762	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112763	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112764	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112765	Identifier	reg_map		1112746	0					
ANR	1112766	Identifier	dst_ar		1112746	1					
ANR	1112767	Argument	ZERO		1112746	1					
ANR	1112768	Identifier	ZERO		1112746	0					
ANR	1112769	Argument	imm >> 48		1112746	2					
ANR	1112770	ShiftExpression	imm >> 48		1112746	0		>>			
ANR	1112771	Identifier	imm		1112746	0					
ANR	1112772	PrimaryExpression	48		1112746	1					
ANR	1112773	ExpressionStatement	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"	1164:2:35245:35314	1112746	1	True				
ANR	1112774	CallExpression	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"		1112746	0					
ANR	1112775	Callee	FAIL_IF		1112746	0					
ANR	1112776	Identifier	FAIL_IF		1112746	0					
ANR	1112777	ArgumentList	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1112746	1					
ANR	1112778	Argument	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1112746	0					
ANR	1112779	CallExpression	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1112746	0					
ANR	1112780	Callee	SHL16INSLI_SOLO		1112746	0					
ANR	1112781	Identifier	SHL16INSLI_SOLO		1112746	0					
ANR	1112782	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112783	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112784	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112785	Identifier	reg_map		1112746	0					
ANR	1112786	Identifier	dst_ar		1112746	1					
ANR	1112787	Argument	reg_map [ dst_ar ]		1112746	1					
ANR	1112788	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112789	Identifier	reg_map		1112746	0					
ANR	1112790	Identifier	dst_ar		1112746	1					
ANR	1112791	Argument	imm >> 32		1112746	2					
ANR	1112792	ShiftExpression	imm >> 32		1112746	0		>>			
ANR	1112793	Identifier	imm		1112746	0					
ANR	1112794	PrimaryExpression	32		1112746	1					
ANR	1112795	ExpressionStatement	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"	1165:2:35318:35387	1112746	2	True				
ANR	1112796	CallExpression	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"		1112746	0					
ANR	1112797	Callee	FAIL_IF		1112746	0					
ANR	1112798	Identifier	FAIL_IF		1112746	0					
ANR	1112799	ArgumentList	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1112746	1					
ANR	1112800	Argument	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1112746	0					
ANR	1112801	CallExpression	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1112746	0					
ANR	1112802	Callee	SHL16INSLI_SOLO		1112746	0					
ANR	1112803	Identifier	SHL16INSLI_SOLO		1112746	0					
ANR	1112804	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112805	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112806	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112807	Identifier	reg_map		1112746	0					
ANR	1112808	Identifier	dst_ar		1112746	1					
ANR	1112809	Argument	reg_map [ dst_ar ]		1112746	1					
ANR	1112810	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112811	Identifier	reg_map		1112746	0					
ANR	1112812	Identifier	dst_ar		1112746	1					
ANR	1112813	Argument	imm >> 16		1112746	2					
ANR	1112814	ShiftExpression	imm >> 16		1112746	0		>>			
ANR	1112815	Identifier	imm		1112746	0					
ANR	1112816	PrimaryExpression	16		1112746	1					
ANR	1112817	ReturnStatement	"return SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm ) ;"	1166:2:35391:35452	1112746	3	True				
ANR	1112818	CallExpression	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm )"		1112746	0					
ANR	1112819	Callee	SHL16INSLI_SOLO		1112746	0					
ANR	1112820	Identifier	SHL16INSLI_SOLO		1112746	0					
ANR	1112821	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112822	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112823	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112824	Identifier	reg_map		1112746	0					
ANR	1112825	Identifier	dst_ar		1112746	1					
ANR	1112826	Argument	reg_map [ dst_ar ]		1112746	1					
ANR	1112827	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112828	Identifier	reg_map		1112746	0					
ANR	1112829	Identifier	dst_ar		1112746	1					
ANR	1112830	Argument	imm		1112746	2					
ANR	1112831	Identifier	imm		1112746	0					
ANR	1112832	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"	1169:1:35459:35507	1112746	1	True				
ANR	1112833	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"		1112746	0					
ANR	1112834	Callee	FAIL_IF		1112746	0					
ANR	1112835	Identifier	FAIL_IF		1112746	0					
ANR	1112836	ArgumentList	"ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1112746	1					
ANR	1112837	Argument	"ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1112746	0					
ANR	1112838	CallExpression	"ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1112746	0					
ANR	1112839	Callee	ADDLI		1112746	0					
ANR	1112840	Identifier	ADDLI		1112746	0					
ANR	1112841	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112842	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112843	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112844	Identifier	reg_map		1112746	0					
ANR	1112845	Identifier	dst_ar		1112746	1					
ANR	1112846	Argument	ZERO		1112746	1					
ANR	1112847	Identifier	ZERO		1112746	0					
ANR	1112848	Argument	imm >> 48		1112746	2					
ANR	1112849	ShiftExpression	imm >> 48		1112746	0		>>			
ANR	1112850	Identifier	imm		1112746	0					
ANR	1112851	PrimaryExpression	48		1112746	1					
ANR	1112852	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"	1170:1:35510:35574	1112746	2	True				
ANR	1112853	CallExpression	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"		1112746	0					
ANR	1112854	Callee	FAIL_IF		1112746	0					
ANR	1112855	Identifier	FAIL_IF		1112746	0					
ANR	1112856	ArgumentList	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1112746	1					
ANR	1112857	Argument	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1112746	0					
ANR	1112858	CallExpression	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1112746	0					
ANR	1112859	Callee	SHL16INSLI		1112746	0					
ANR	1112860	Identifier	SHL16INSLI		1112746	0					
ANR	1112861	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112862	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112863	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112864	Identifier	reg_map		1112746	0					
ANR	1112865	Identifier	dst_ar		1112746	1					
ANR	1112866	Argument	reg_map [ dst_ar ]		1112746	1					
ANR	1112867	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112868	Identifier	reg_map		1112746	0					
ANR	1112869	Identifier	dst_ar		1112746	1					
ANR	1112870	Argument	imm >> 32		1112746	2					
ANR	1112871	ShiftExpression	imm >> 32		1112746	0		>>			
ANR	1112872	Identifier	imm		1112746	0					
ANR	1112873	PrimaryExpression	32		1112746	1					
ANR	1112874	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"	1171:1:35577:35641	1112746	3	True				
ANR	1112875	CallExpression	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"		1112746	0					
ANR	1112876	Callee	FAIL_IF		1112746	0					
ANR	1112877	Identifier	FAIL_IF		1112746	0					
ANR	1112878	ArgumentList	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1112746	1					
ANR	1112879	Argument	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1112746	0					
ANR	1112880	CallExpression	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1112746	0					
ANR	1112881	Callee	SHL16INSLI		1112746	0					
ANR	1112882	Identifier	SHL16INSLI		1112746	0					
ANR	1112883	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112884	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112885	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112886	Identifier	reg_map		1112746	0					
ANR	1112887	Identifier	dst_ar		1112746	1					
ANR	1112888	Argument	reg_map [ dst_ar ]		1112746	1					
ANR	1112889	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112890	Identifier	reg_map		1112746	0					
ANR	1112891	Identifier	dst_ar		1112746	1					
ANR	1112892	Argument	imm >> 16		1112746	2					
ANR	1112893	ShiftExpression	imm >> 16		1112746	0		>>			
ANR	1112894	Identifier	imm		1112746	0					
ANR	1112895	PrimaryExpression	16		1112746	1					
ANR	1112896	ReturnStatement	"return SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm ) ;"	1172:1:35644:35700	1112746	4	True				
ANR	1112897	CallExpression	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm )"		1112746	0					
ANR	1112898	Callee	SHL16INSLI		1112746	0					
ANR	1112899	Identifier	SHL16INSLI		1112746	0					
ANR	1112900	ArgumentList	reg_map [ dst_ar ]		1112746	1					
ANR	1112901	Argument	reg_map [ dst_ar ]		1112746	0					
ANR	1112902	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112903	Identifier	reg_map		1112746	0					
ANR	1112904	Identifier	dst_ar		1112746	1					
ANR	1112905	Argument	reg_map [ dst_ar ]		1112746	1					
ANR	1112906	ArrayIndexing	reg_map [ dst_ar ]		1112746	0					
ANR	1112907	Identifier	reg_map		1112746	0					
ANR	1112908	Identifier	dst_ar		1112746	1					
ANR	1112909	Argument	imm		1112746	2					
ANR	1112910	Identifier	imm		1112746	0					
ANR	1112911	ReturnType	static sljit_si		1112746	1					
ANR	1112912	Identifier	emit_const_64		1112746	2					
ANR	1112913	ParameterList	"struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush"		1112746	3					
ANR	1112914	Parameter	struct sljit_compiler * compiler	1158:30:34965:34995	1112746	0	True				
ANR	1112915	ParameterType	struct sljit_compiler *		1112746	0					
ANR	1112916	Identifier	compiler		1112746	1					
ANR	1112917	Parameter	sljit_si dst_ar	1158:63:34998:35012	1112746	1	True				
ANR	1112918	ParameterType	sljit_si		1112746	0					
ANR	1112919	Identifier	dst_ar		1112746	1					
ANR	1112920	Parameter	sljit_sw imm	1158:80:35015:35026	1112746	2	True				
ANR	1112921	ParameterType	sljit_sw		1112746	0					
ANR	1112922	Identifier	imm		1112746	1					
ANR	1112923	Parameter	int flush	1158:94:35029:35037	1112746	3	True				
ANR	1112924	ParameterType	int		1112746	0					
ANR	1112925	Identifier	flush		1112746	1					
ANR	1112926	CFGEntryNode	ENTRY		1112746		True				
ANR	1112927	CFGExitNode	EXIT		1112746		True				
ANR	1112928	Symbol	ADDLI_SOLO		1112746						
ANR	1112929	Symbol	ZERO		1112746						
ANR	1112930	Symbol	dst_ar		1112746						
ANR	1112931	Symbol	flush		1112746						
ANR	1112932	Symbol	SHL16INSLI		1112746						
ANR	1112933	Symbol	imm		1112746						
ANR	1112934	Symbol	reg_map		1112746						
ANR	1112935	Symbol	* dst_ar		1112746						
ANR	1112936	Symbol	compiler		1112746						
ANR	1112937	Symbol	* reg_map		1112746						
ANR	1112938	Symbol	SHL16INSLI_SOLO		1112746						
ANR	1112939	Symbol	ADDLI		1112746						
ANR	1112940	Function	sljit_emit_enter	1175:0:35705:37429							
ANR	1112941	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1112940	0					
ANR	1112942	CompoundStatement		1178:0:35921:37429	1112940	0					
ANR	1112943	IdentifierDeclStatement	sljit_ins base ;	1179:1:35924:35938	1112940	0	True				
ANR	1112944	IdentifierDecl	base		1112940	0					
ANR	1112945	IdentifierDeclType	sljit_ins		1112940	0					
ANR	1112946	Identifier	base		1112940	1					
ANR	1112947	IdentifierDeclStatement	"sljit_si i , tmp ;"	1180:1:35941:35956	1112940	1	True				
ANR	1112948	IdentifierDecl	i		1112940	0					
ANR	1112949	IdentifierDeclType	sljit_si		1112940	0					
ANR	1112950	Identifier	i		1112940	1					
ANR	1112951	IdentifierDecl	tmp		1112940	1					
ANR	1112952	IdentifierDeclType	sljit_si		1112940	0					
ANR	1112953	Identifier	tmp		1112940	1					
ANR	1112954	ExpressionStatement	CHECK_ERROR ( )	1182:1:35961:35974	1112940	2	True				
ANR	1112955	CallExpression	CHECK_ERROR ( )		1112940	0					
ANR	1112956	Callee	CHECK_ERROR		1112940	0					
ANR	1112957	Identifier	CHECK_ERROR		1112940	0					
ANR	1112958	ArgumentList			1112940	1					
ANR	1112959	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1183:1:35977:36083	1112940	3	True				
ANR	1112960	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1112940	0					
ANR	1112961	Callee	CHECK		1112940	0					
ANR	1112962	Identifier	CHECK		1112940	0					
ANR	1112963	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1112940	1					
ANR	1112964	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1112940	0					
ANR	1112965	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1112940	0					
ANR	1112966	Callee	check_sljit_emit_enter		1112940	0					
ANR	1112967	Identifier	check_sljit_emit_enter		1112940	0					
ANR	1112968	ArgumentList	compiler		1112940	1					
ANR	1112969	Argument	compiler		1112940	0					
ANR	1112970	Identifier	compiler		1112940	0					
ANR	1112971	Argument	options		1112940	1					
ANR	1112972	Identifier	options		1112940	0					
ANR	1112973	Argument	args		1112940	2					
ANR	1112974	Identifier	args		1112940	0					
ANR	1112975	Argument	scratches		1112940	3					
ANR	1112976	Identifier	scratches		1112940	0					
ANR	1112977	Argument	saveds		1112940	4					
ANR	1112978	Identifier	saveds		1112940	0					
ANR	1112979	Argument	fscratches		1112940	5					
ANR	1112980	Identifier	fscratches		1112940	0					
ANR	1112981	Argument	fsaveds		1112940	6					
ANR	1112982	Identifier	fsaveds		1112940	0					
ANR	1112983	Argument	local_size		1112940	7					
ANR	1112984	Identifier	local_size		1112940	0					
ANR	1112985	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1184:1:36086:36177	1112940	4	True				
ANR	1112986	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1112940	0					
ANR	1112987	Callee	set_emit_enter		1112940	0					
ANR	1112988	Identifier	set_emit_enter		1112940	0					
ANR	1112989	ArgumentList	compiler		1112940	1					
ANR	1112990	Argument	compiler		1112940	0					
ANR	1112991	Identifier	compiler		1112940	0					
ANR	1112992	Argument	options		1112940	1					
ANR	1112993	Identifier	options		1112940	0					
ANR	1112994	Argument	args		1112940	2					
ANR	1112995	Identifier	args		1112940	0					
ANR	1112996	Argument	scratches		1112940	3					
ANR	1112997	Identifier	scratches		1112940	0					
ANR	1112998	Argument	saveds		1112940	4					
ANR	1112999	Identifier	saveds		1112940	0					
ANR	1113000	Argument	fscratches		1112940	5					
ANR	1113001	Identifier	fscratches		1112940	0					
ANR	1113002	Argument	fsaveds		1112940	6					
ANR	1113003	Identifier	fsaveds		1112940	0					
ANR	1113004	Argument	local_size		1112940	7					
ANR	1113005	Identifier	local_size		1112940	0					
ANR	1113006	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"	1186:1:36181:36241	1112940	5	True				
ANR	1113007	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1112940	0		+=			
ANR	1113008	Identifier	local_size		1112940	0					
ANR	1113009	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1112940	1					
ANR	1113010	Callee	GET_SAVED_REGISTERS_SIZE		1112940	0					
ANR	1113011	Identifier	GET_SAVED_REGISTERS_SIZE		1112940	0					
ANR	1113012	ArgumentList	scratches		1112940	1					
ANR	1113013	Argument	scratches		1112940	0					
ANR	1113014	Identifier	scratches		1112940	0					
ANR	1113015	Argument	saveds		1112940	1					
ANR	1113016	Identifier	saveds		1112940	0					
ANR	1113017	Argument	1		1112940	2					
ANR	1113018	PrimaryExpression	1		1112940	0					
ANR	1113019	ExpressionStatement	local_size = ( local_size + 7 ) & ~7	1187:1:36244:36278	1112940	6	True				
ANR	1113020	AssignmentExpression	local_size = ( local_size + 7 ) & ~7		1112940	0		=			
ANR	1113021	Identifier	local_size		1112940	0					
ANR	1113022	BitAndExpression	( local_size + 7 ) & ~7		1112940	1		&			
ANR	1113023	AdditiveExpression	local_size + 7		1112940	0		+			
ANR	1113024	Identifier	local_size		1112940	0					
ANR	1113025	PrimaryExpression	7		1112940	1					
ANR	1113026	Identifier	~7		1112940	1					
ANR	1113027	ExpressionStatement	compiler -> local_size = local_size	1188:1:36281:36314	1112940	7	True				
ANR	1113028	AssignmentExpression	compiler -> local_size = local_size		1112940	0		=			
ANR	1113029	PtrMemberAccess	compiler -> local_size		1112940	0					
ANR	1113030	Identifier	compiler		1112940	0					
ANR	1113031	Identifier	local_size		1112940	1					
ANR	1113032	Identifier	local_size		1112940	1					
ANR	1113033	IfStatement	if ( local_size <= SIMM_16BIT_MAX )		1112940	8					
ANR	1113034	Condition	local_size <= SIMM_16BIT_MAX	1190:5:36322:36349	1112940	0	True				
ANR	1113035	RelationalExpression	local_size <= SIMM_16BIT_MAX		1112940	0		<=			
ANR	1113036	Identifier	local_size		1112940	0					
ANR	1113037	Identifier	SIMM_16BIT_MAX		1112940	1					
ANR	1113038	CompoundStatement		13:35:430:430	1112940	1					
ANR	1113039	ExpressionStatement	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size ) )"	1192:2:36379:36456	1112940	0	True				
ANR	1113040	CallExpression	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size ) )"		1112940	0					
ANR	1113041	Callee	FAIL_IF		1112940	0					
ANR	1113042	Identifier	FAIL_IF		1112940	0					
ANR	1113043	ArgumentList	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size )"		1112940	1					
ANR	1113044	Argument	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size )"		1112940	0					
ANR	1113045	CallExpression	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size )"		1112940	0					
ANR	1113046	Callee	ADDLI		1112940	0					
ANR	1113047	Identifier	ADDLI		1112940	0					
ANR	1113048	ArgumentList	SLJIT_LOCALS_REG_mapped		1112940	1					
ANR	1113049	Argument	SLJIT_LOCALS_REG_mapped		1112940	0					
ANR	1113050	Identifier	SLJIT_LOCALS_REG_mapped		1112940	0					
ANR	1113051	Argument	SLJIT_LOCALS_REG_mapped		1112940	1					
ANR	1113052	Identifier	SLJIT_LOCALS_REG_mapped		1112940	0					
ANR	1113053	Argument	- local_size		1112940	2					
ANR	1113054	UnaryOperationExpression	- local_size		1112940	0					
ANR	1113055	UnaryOperator	-		1112940	0					
ANR	1113056	Identifier	local_size		1112940	1					
ANR	1113057	ExpressionStatement	base = SLJIT_LOCALS_REG_mapped	1193:2:36460:36490	1112940	1	True				
ANR	1113058	AssignmentExpression	base = SLJIT_LOCALS_REG_mapped		1112940	0		=			
ANR	1113059	Identifier	base		1112940	0					
ANR	1113060	Identifier	SLJIT_LOCALS_REG_mapped		1112940	1					
ANR	1113061	ElseStatement	else		1112940	0					
ANR	1113062	CompoundStatement		17:8:578:578	1112940	0					
ANR	1113063	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"	1195:2:36504:36566	1112940	0	True				
ANR	1113064	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"		1112940	0					
ANR	1113065	Callee	FAIL_IF		1112940	0					
ANR	1113066	Identifier	FAIL_IF		1112940	0					
ANR	1113067	ArgumentList	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1112940	1					
ANR	1113068	Argument	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1112940	0					
ANR	1113069	CallExpression	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1112940	0					
ANR	1113070	Callee	load_immediate		1112940	0					
ANR	1113071	Identifier	load_immediate		1112940	0					
ANR	1113072	ArgumentList	compiler		1112940	1					
ANR	1113073	Argument	compiler		1112940	0					
ANR	1113074	Identifier	compiler		1112940	0					
ANR	1113075	Argument	TMP_REG1_mapped		1112940	1					
ANR	1113076	Identifier	TMP_REG1_mapped		1112940	0					
ANR	1113077	Argument	local_size		1112940	2					
ANR	1113078	Identifier	local_size		1112940	0					
ANR	1113079	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO ) )"	1196:2:36570:36630	1112940	1	True				
ANR	1113080	CallExpression	"FAIL_IF ( ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO ) )"		1112940	0					
ANR	1113081	Callee	FAIL_IF		1112940	0					
ANR	1113082	Identifier	FAIL_IF		1112940	0					
ANR	1113083	ArgumentList	"ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO )"		1112940	1					
ANR	1113084	Argument	"ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO )"		1112940	0					
ANR	1113085	CallExpression	"ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO )"		1112940	0					
ANR	1113086	Callee	ADD		1112940	0					
ANR	1113087	Identifier	ADD		1112940	0					
ANR	1113088	ArgumentList	TMP_REG2_mapped		1112940	1					
ANR	1113089	Argument	TMP_REG2_mapped		1112940	0					
ANR	1113090	Identifier	TMP_REG2_mapped		1112940	0					
ANR	1113091	Argument	SLJIT_LOCALS_REG_mapped		1112940	1					
ANR	1113092	Identifier	SLJIT_LOCALS_REG_mapped		1112940	0					
ANR	1113093	Argument	ZERO		1112940	2					
ANR	1113094	Identifier	ZERO		1112940	0					
ANR	1113095	ExpressionStatement	"FAIL_IF ( SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"	1197:2:36634:36713	1112940	2	True				
ANR	1113096	CallExpression	"FAIL_IF ( SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"		1112940	0					
ANR	1113097	Callee	FAIL_IF		1112940	0					
ANR	1113098	Identifier	FAIL_IF		1112940	0					
ANR	1113099	ArgumentList	"SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1112940	1					
ANR	1113100	Argument	"SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1112940	0					
ANR	1113101	CallExpression	"SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1112940	0					
ANR	1113102	Callee	SUB		1112940	0					
ANR	1113103	Identifier	SUB		1112940	0					
ANR	1113104	ArgumentList	SLJIT_LOCALS_REG_mapped		1112940	1					
ANR	1113105	Argument	SLJIT_LOCALS_REG_mapped		1112940	0					
ANR	1113106	Identifier	SLJIT_LOCALS_REG_mapped		1112940	0					
ANR	1113107	Argument	SLJIT_LOCALS_REG_mapped		1112940	1					
ANR	1113108	Identifier	SLJIT_LOCALS_REG_mapped		1112940	0					
ANR	1113109	Argument	TMP_REG1_mapped		1112940	2					
ANR	1113110	Identifier	TMP_REG1_mapped		1112940	0					
ANR	1113111	ExpressionStatement	base = TMP_REG2_mapped	1198:2:36717:36739	1112940	3	True				
ANR	1113112	AssignmentExpression	base = TMP_REG2_mapped		1112940	0		=			
ANR	1113113	Identifier	base		1112940	0					
ANR	1113114	Identifier	TMP_REG2_mapped		1112940	1					
ANR	1113115	ExpressionStatement	local_size = 0	1199:2:36743:36757	1112940	4	True				
ANR	1113116	AssignmentExpression	local_size = 0		1112940	0		=			
ANR	1113117	Identifier	local_size		1112940	0					
ANR	1113118	PrimaryExpression	0		1112940	1					
ANR	1113119	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"	1203:1:36796:36849	1112940	9	True				
ANR	1113120	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"		1112940	0					
ANR	1113121	Callee	FAIL_IF		1112940	0					
ANR	1113122	Identifier	FAIL_IF		1112940	0					
ANR	1113123	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1112940	1					
ANR	1113124	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1112940	0					
ANR	1113125	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1112940	0					
ANR	1113126	Callee	ADDLI		1112940	0					
ANR	1113127	Identifier	ADDLI		1112940	0					
ANR	1113128	ArgumentList	ADDR_TMP_mapped		1112940	1					
ANR	1113129	Argument	ADDR_TMP_mapped		1112940	0					
ANR	1113130	Identifier	ADDR_TMP_mapped		1112940	0					
ANR	1113131	Argument	base		1112940	1					
ANR	1113132	Identifier	base		1112940	0					
ANR	1113133	Argument	local_size - 8		1112940	2					
ANR	1113134	AdditiveExpression	local_size - 8		1112940	0		-			
ANR	1113135	Identifier	local_size		1112940	0					
ANR	1113136	PrimaryExpression	8		1112940	1					
ANR	1113137	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , RA , - 8 ) )"	1204:1:36852:36892	1112940	10	True				
ANR	1113138	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , RA , - 8 ) )"		1112940	0					
ANR	1113139	Callee	FAIL_IF		1112940	0					
ANR	1113140	Identifier	FAIL_IF		1112940	0					
ANR	1113141	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , RA , - 8 )"		1112940	1					
ANR	1113142	Argument	"ST_ADD ( ADDR_TMP_mapped , RA , - 8 )"		1112940	0					
ANR	1113143	CallExpression	"ST_ADD ( ADDR_TMP_mapped , RA , - 8 )"		1112940	0					
ANR	1113144	Callee	ST_ADD		1112940	0					
ANR	1113145	Identifier	ST_ADD		1112940	0					
ANR	1113146	ArgumentList	ADDR_TMP_mapped		1112940	1					
ANR	1113147	Argument	ADDR_TMP_mapped		1112940	0					
ANR	1113148	Identifier	ADDR_TMP_mapped		1112940	0					
ANR	1113149	Argument	RA		1112940	1					
ANR	1113150	Identifier	RA		1112940	0					
ANR	1113151	Argument	- 8		1112940	2					
ANR	1113152	UnaryOperationExpression	- 8		1112940	0					
ANR	1113153	UnaryOperator	-		1112940	0					
ANR	1113154	PrimaryExpression	8		1112940	1					
ANR	1113155	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	1207:1:36925:37021	1112940	11	True				
ANR	1113156	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1112940	0		=			
ANR	1113157	Identifier	tmp		1112940	0					
ANR	1113158	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1112940	1					
ANR	1113159	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1112940	0					
ANR	1113160	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1112940	0		<			
ANR	1113161	Identifier	saveds		1112940	0					
ANR	1113162	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1112940	1					
ANR	1113163	AdditiveExpression	SLJIT_S0 + 1 - saveds		1112940	1		+			
ANR	1113164	Identifier	SLJIT_S0		1112940	0					
ANR	1113165	AdditiveExpression	1 - saveds		1112940	1		-			
ANR	1113166	PrimaryExpression	1		1112940	0					
ANR	1113167	Identifier	saveds		1112940	1					
ANR	1113168	Identifier	SLJIT_FIRST_SAVED_REG		1112940	2					
ANR	1113169	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1112940	12					
ANR	1113170	ForInit	i = SLJIT_S0 ;	1208:6:37029:37041	1112940	0	True				
ANR	1113171	AssignmentExpression	i = SLJIT_S0		1112940	0		=			
ANR	1113172	Identifier	i		1112940	0					
ANR	1113173	Identifier	SLJIT_S0		1112940	1					
ANR	1113174	Condition	i >= tmp	1208:20:37043:37050	1112940	1	True				
ANR	1113175	RelationalExpression	i >= tmp		1112940	0		>=			
ANR	1113176	Identifier	i		1112940	0					
ANR	1113177	Identifier	tmp		1112940	1					
ANR	1113178	PostIncDecOperationExpression	i --	1208:30:37053:37055	1112940	2	True				
ANR	1113179	Identifier	i		1112940	0					
ANR	1113180	IncDec	--		1112940	1					
ANR	1113181	CompoundStatement		31:35:1136:1136	1112940	3					
ANR	1113182	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 ) )"	1209:2:37062:37110	1112940	0	True				
ANR	1113183	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 ) )"		1112940	0					
ANR	1113184	Callee	FAIL_IF		1112940	0					
ANR	1113185	Identifier	FAIL_IF		1112940	0					
ANR	1113186	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 )"		1112940	1					
ANR	1113187	Argument	"ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 )"		1112940	0					
ANR	1113188	CallExpression	"ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 )"		1112940	0					
ANR	1113189	Callee	ST_ADD		1112940	0					
ANR	1113190	Identifier	ST_ADD		1112940	0					
ANR	1113191	ArgumentList	ADDR_TMP_mapped		1112940	1					
ANR	1113192	Argument	ADDR_TMP_mapped		1112940	0					
ANR	1113193	Identifier	ADDR_TMP_mapped		1112940	0					
ANR	1113194	Argument	reg_map [ i ]		1112940	1					
ANR	1113195	ArrayIndexing	reg_map [ i ]		1112940	0					
ANR	1113196	Identifier	reg_map		1112940	0					
ANR	1113197	Identifier	i		1112940	1					
ANR	1113198	Argument	- 8		1112940	2					
ANR	1113199	UnaryOperationExpression	- 8		1112940	0					
ANR	1113200	UnaryOperator	-		1112940	0					
ANR	1113201	PrimaryExpression	8		1112940	1					
ANR	1113202	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1112940	13					
ANR	1113203	ForInit	i = scratches ;	1213:6:37176:37189	1112940	0	True				
ANR	1113204	AssignmentExpression	i = scratches		1112940	0		=			
ANR	1113205	Identifier	i		1112940	0					
ANR	1113206	Identifier	scratches		1112940	1					
ANR	1113207	Condition	i >= SLJIT_FIRST_SAVED_REG	1213:21:37191:37216	1112940	1	True				
ANR	1113208	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1112940	0		>=			
ANR	1113209	Identifier	i		1112940	0					
ANR	1113210	Identifier	SLJIT_FIRST_SAVED_REG		1112940	1					
ANR	1113211	PostIncDecOperationExpression	i --	1213:49:37219:37221	1112940	2	True				
ANR	1113212	Identifier	i		1112940	0					
ANR	1113213	IncDec	--		1112940	1					
ANR	1113214	CompoundStatement		36:54:1302:1302	1112940	3					
ANR	1113215	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 ) )"	1214:2:37228:37276	1112940	0	True				
ANR	1113216	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 ) )"		1112940	0					
ANR	1113217	Callee	FAIL_IF		1112940	0					
ANR	1113218	Identifier	FAIL_IF		1112940	0					
ANR	1113219	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 )"		1112940	1					
ANR	1113220	Argument	"ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 )"		1112940	0					
ANR	1113221	CallExpression	"ST_ADD ( ADDR_TMP_mapped , reg_map [ i ] , - 8 )"		1112940	0					
ANR	1113222	Callee	ST_ADD		1112940	0					
ANR	1113223	Identifier	ST_ADD		1112940	0					
ANR	1113224	ArgumentList	ADDR_TMP_mapped		1112940	1					
ANR	1113225	Argument	ADDR_TMP_mapped		1112940	0					
ANR	1113226	Identifier	ADDR_TMP_mapped		1112940	0					
ANR	1113227	Argument	reg_map [ i ]		1112940	1					
ANR	1113228	ArrayIndexing	reg_map [ i ]		1112940	0					
ANR	1113229	Identifier	reg_map		1112940	0					
ANR	1113230	Identifier	i		1112940	1					
ANR	1113231	Argument	- 8		1112940	2					
ANR	1113232	UnaryOperationExpression	- 8		1112940	0					
ANR	1113233	UnaryOperator	-		1112940	0					
ANR	1113234	PrimaryExpression	8		1112940	1					
ANR	1113235	ForStatement	for ( i = 0 ; i < args ; i ++ )		1112940	14					
ANR	1113236	ForInit	i = 0 ;	1218:6:37330:37335	1112940	0	True				
ANR	1113237	AssignmentExpression	i = 0		1112940	0		=			
ANR	1113238	Identifier	i		1112940	0					
ANR	1113239	PrimaryExpression	0		1112940	1					
ANR	1113240	Condition	i < args	1218:13:37337:37344	1112940	1	True				
ANR	1113241	RelationalExpression	i < args		1112940	0		<			
ANR	1113242	Identifier	i		1112940	0					
ANR	1113243	Identifier	args		1112940	1					
ANR	1113244	PostIncDecOperationExpression	i ++	1218:23:37347:37349	1112940	2	True				
ANR	1113245	Identifier	i		1112940	0					
ANR	1113246	IncDec	++		1112940	1					
ANR	1113247	CompoundStatement		41:28:1430:1430	1112940	3					
ANR	1113248	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ SLJIT_S0 - i ] , i , ZERO ) )"	1219:2:37356:37400	1112940	0	True				
ANR	1113249	CallExpression	"FAIL_IF ( ADD ( reg_map [ SLJIT_S0 - i ] , i , ZERO ) )"		1112940	0					
ANR	1113250	Callee	FAIL_IF		1112940	0					
ANR	1113251	Identifier	FAIL_IF		1112940	0					
ANR	1113252	ArgumentList	"ADD ( reg_map [ SLJIT_S0 - i ] , i , ZERO )"		1112940	1					
ANR	1113253	Argument	"ADD ( reg_map [ SLJIT_S0 - i ] , i , ZERO )"		1112940	0					
ANR	1113254	CallExpression	"ADD ( reg_map [ SLJIT_S0 - i ] , i , ZERO )"		1112940	0					
ANR	1113255	Callee	ADD		1112940	0					
ANR	1113256	Identifier	ADD		1112940	0					
ANR	1113257	ArgumentList	reg_map [ SLJIT_S0 - i ]		1112940	1					
ANR	1113258	Argument	reg_map [ SLJIT_S0 - i ]		1112940	0					
ANR	1113259	ArrayIndexing	reg_map [ SLJIT_S0 - i ]		1112940	0					
ANR	1113260	Identifier	reg_map		1112940	0					
ANR	1113261	AdditiveExpression	SLJIT_S0 - i		1112940	1		-			
ANR	1113262	Identifier	SLJIT_S0		1112940	0					
ANR	1113263	Identifier	i		1112940	1					
ANR	1113264	Argument	i		1112940	1					
ANR	1113265	Identifier	i		1112940	0					
ANR	1113266	Argument	ZERO		1112940	2					
ANR	1113267	Identifier	ZERO		1112940	0					
ANR	1113268	ReturnStatement	return SLJIT_SUCCESS ;	1222:1:37407:37427	1112940	15	True				
ANR	1113269	Identifier	SLJIT_SUCCESS		1112940	0					
ANR	1113270	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1112940	1					
ANR	1113271	Identifier	sljit_emit_enter		1112940	2					
ANR	1113272	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1112940	3					
ANR	1113273	Parameter	struct sljit_compiler * compiler	1175:51:35756:35786	1112940	0	True				
ANR	1113274	ParameterType	struct sljit_compiler *		1112940	0					
ANR	1113275	Identifier	compiler		1112940	1					
ANR	1113276	Parameter	sljit_si options	1176:1:35790:35805	1112940	1	True				
ANR	1113277	ParameterType	sljit_si		1112940	0					
ANR	1113278	Identifier	options		1112940	1					
ANR	1113279	Parameter	sljit_si args	1176:19:35808:35820	1112940	2	True				
ANR	1113280	ParameterType	sljit_si		1112940	0					
ANR	1113281	Identifier	args		1112940	1					
ANR	1113282	Parameter	sljit_si scratches	1176:34:35823:35840	1112940	3	True				
ANR	1113283	ParameterType	sljit_si		1112940	0					
ANR	1113284	Identifier	scratches		1112940	1					
ANR	1113285	Parameter	sljit_si saveds	1176:54:35843:35857	1112940	4	True				
ANR	1113286	ParameterType	sljit_si		1112940	0					
ANR	1113287	Identifier	saveds		1112940	1					
ANR	1113288	Parameter	sljit_si fscratches	1177:1:35861:35879	1112940	5	True				
ANR	1113289	ParameterType	sljit_si		1112940	0					
ANR	1113290	Identifier	fscratches		1112940	1					
ANR	1113291	Parameter	sljit_si fsaveds	1177:22:35882:35897	1112940	6	True				
ANR	1113292	ParameterType	sljit_si		1112940	0					
ANR	1113293	Identifier	fsaveds		1112940	1					
ANR	1113294	Parameter	sljit_si local_size	1177:40:35900:35918	1112940	7	True				
ANR	1113295	ParameterType	sljit_si		1112940	0					
ANR	1113296	Identifier	local_size		1112940	1					
ANR	1113297	CFGEntryNode	ENTRY		1112940		True				
ANR	1113298	CFGExitNode	EXIT		1112940		True				
ANR	1113299	Symbol	ADD		1112940						
ANR	1113300	Symbol	ZERO		1112940						
ANR	1113301	Symbol	TMP_REG1_mapped		1112940						
ANR	1113302	Symbol	scratches		1112940						
ANR	1113303	Symbol	saveds		1112940						
ANR	1113304	Symbol	reg_map		1112940						
ANR	1113305	Symbol	check_sljit_emit_enter		1112940						
ANR	1113306	Symbol	* compiler		1112940						
ANR	1113307	Symbol	ADDLI		1112940						
ANR	1113308	Symbol	ST_ADD		1112940						
ANR	1113309	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1112940						
ANR	1113310	Symbol	load_immediate		1112940						
ANR	1113311	Symbol	tmp		1112940						
ANR	1113312	Symbol	options		1112940						
ANR	1113313	Symbol	compiler		1112940						
ANR	1113314	Symbol	TMP_REG2_mapped		1112940						
ANR	1113315	Symbol	GET_SAVED_REGISTERS_SIZE		1112940						
ANR	1113316	Symbol	local_size		1112940						
ANR	1113317	Symbol	SUB		1112940						
ANR	1113318	Symbol	i		1112940						
ANR	1113319	Symbol	SLJIT_SUCCESS		1112940						
ANR	1113320	Symbol	* reg_map		1112940						
ANR	1113321	Symbol	SLJIT_S0		1112940						
ANR	1113322	Symbol	RA		1112940						
ANR	1113323	Symbol	args		1112940						
ANR	1113324	Symbol	fscratches		1112940						
ANR	1113325	Symbol	SLJIT_LOCALS_REG_mapped		1112940						
ANR	1113326	Symbol	compiler -> local_size		1112940						
ANR	1113327	Symbol	ADDR_TMP_mapped		1112940						
ANR	1113328	Symbol	* i		1112940						
ANR	1113329	Symbol	fsaveds		1112940						
ANR	1113330	Symbol	SIMM_16BIT_MAX		1112940						
ANR	1113331	Symbol	SLJIT_FIRST_SAVED_REG		1112940						
ANR	1113332	Symbol	~7		1112940						
ANR	1113333	Symbol	* SLJIT_S0		1112940						
ANR	1113334	Symbol	base		1112940						
ANR	1113335	Function	sljit_set_context	1225:0:37432:38007							
ANR	1113336	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1113335	0					
ANR	1113337	CompoundStatement		1228:0:37649:38007	1113335	0					
ANR	1113338	ExpressionStatement	CHECK_ERROR ( )	1229:1:37652:37665	1113335	0	True				
ANR	1113339	CallExpression	CHECK_ERROR ( )		1113335	0					
ANR	1113340	Callee	CHECK_ERROR		1113335	0					
ANR	1113341	Identifier	CHECK_ERROR		1113335	0					
ANR	1113342	ArgumentList			1113335	1					
ANR	1113343	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1230:1:37668:37775	1113335	1	True				
ANR	1113344	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1113335	0					
ANR	1113345	Callee	CHECK		1113335	0					
ANR	1113346	Identifier	CHECK		1113335	0					
ANR	1113347	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1113335	1					
ANR	1113348	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1113335	0					
ANR	1113349	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1113335	0					
ANR	1113350	Callee	check_sljit_set_context		1113335	0					
ANR	1113351	Identifier	check_sljit_set_context		1113335	0					
ANR	1113352	ArgumentList	compiler		1113335	1					
ANR	1113353	Argument	compiler		1113335	0					
ANR	1113354	Identifier	compiler		1113335	0					
ANR	1113355	Argument	options		1113335	1					
ANR	1113356	Identifier	options		1113335	0					
ANR	1113357	Argument	args		1113335	2					
ANR	1113358	Identifier	args		1113335	0					
ANR	1113359	Argument	scratches		1113335	3					
ANR	1113360	Identifier	scratches		1113335	0					
ANR	1113361	Argument	saveds		1113335	4					
ANR	1113362	Identifier	saveds		1113335	0					
ANR	1113363	Argument	fscratches		1113335	5					
ANR	1113364	Identifier	fscratches		1113335	0					
ANR	1113365	Argument	fsaveds		1113335	6					
ANR	1113366	Identifier	fsaveds		1113335	0					
ANR	1113367	Argument	local_size		1113335	7					
ANR	1113368	Identifier	local_size		1113335	0					
ANR	1113369	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1231:1:37778:37870	1113335	2	True				
ANR	1113370	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1113335	0					
ANR	1113371	Callee	set_set_context		1113335	0					
ANR	1113372	Identifier	set_set_context		1113335	0					
ANR	1113373	ArgumentList	compiler		1113335	1					
ANR	1113374	Argument	compiler		1113335	0					
ANR	1113375	Identifier	compiler		1113335	0					
ANR	1113376	Argument	options		1113335	1					
ANR	1113377	Identifier	options		1113335	0					
ANR	1113378	Argument	args		1113335	2					
ANR	1113379	Identifier	args		1113335	0					
ANR	1113380	Argument	scratches		1113335	3					
ANR	1113381	Identifier	scratches		1113335	0					
ANR	1113382	Argument	saveds		1113335	4					
ANR	1113383	Identifier	saveds		1113335	0					
ANR	1113384	Argument	fscratches		1113335	5					
ANR	1113385	Identifier	fscratches		1113335	0					
ANR	1113386	Argument	fsaveds		1113335	6					
ANR	1113387	Identifier	fsaveds		1113335	0					
ANR	1113388	Argument	local_size		1113335	7					
ANR	1113389	Identifier	local_size		1113335	0					
ANR	1113390	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"	1233:1:37874:37934	1113335	3	True				
ANR	1113391	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1113335	0		+=			
ANR	1113392	Identifier	local_size		1113335	0					
ANR	1113393	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1113335	1					
ANR	1113394	Callee	GET_SAVED_REGISTERS_SIZE		1113335	0					
ANR	1113395	Identifier	GET_SAVED_REGISTERS_SIZE		1113335	0					
ANR	1113396	ArgumentList	scratches		1113335	1					
ANR	1113397	Argument	scratches		1113335	0					
ANR	1113398	Identifier	scratches		1113335	0					
ANR	1113399	Argument	saveds		1113335	1					
ANR	1113400	Identifier	saveds		1113335	0					
ANR	1113401	Argument	1		1113335	2					
ANR	1113402	PrimaryExpression	1		1113335	0					
ANR	1113403	ExpressionStatement	compiler -> local_size = ( local_size + 7 ) & ~7	1234:1:37937:37981	1113335	4	True				
ANR	1113404	AssignmentExpression	compiler -> local_size = ( local_size + 7 ) & ~7		1113335	0		=			
ANR	1113405	PtrMemberAccess	compiler -> local_size		1113335	0					
ANR	1113406	Identifier	compiler		1113335	0					
ANR	1113407	Identifier	local_size		1113335	1					
ANR	1113408	BitAndExpression	( local_size + 7 ) & ~7		1113335	1		&			
ANR	1113409	AdditiveExpression	local_size + 7		1113335	0		+			
ANR	1113410	Identifier	local_size		1113335	0					
ANR	1113411	PrimaryExpression	7		1113335	1					
ANR	1113412	Identifier	~7		1113335	1					
ANR	1113413	ReturnStatement	return SLJIT_SUCCESS ;	1236:1:37985:38005	1113335	5	True				
ANR	1113414	Identifier	SLJIT_SUCCESS		1113335	0					
ANR	1113415	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1113335	1					
ANR	1113416	Identifier	sljit_set_context		1113335	2					
ANR	1113417	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1113335	3					
ANR	1113418	Parameter	struct sljit_compiler * compiler	1225:52:37484:37514	1113335	0	True				
ANR	1113419	ParameterType	struct sljit_compiler *		1113335	0					
ANR	1113420	Identifier	compiler		1113335	1					
ANR	1113421	Parameter	sljit_si options	1226:1:37518:37533	1113335	1	True				
ANR	1113422	ParameterType	sljit_si		1113335	0					
ANR	1113423	Identifier	options		1113335	1					
ANR	1113424	Parameter	sljit_si args	1226:19:37536:37548	1113335	2	True				
ANR	1113425	ParameterType	sljit_si		1113335	0					
ANR	1113426	Identifier	args		1113335	1					
ANR	1113427	Parameter	sljit_si scratches	1226:34:37551:37568	1113335	3	True				
ANR	1113428	ParameterType	sljit_si		1113335	0					
ANR	1113429	Identifier	scratches		1113335	1					
ANR	1113430	Parameter	sljit_si saveds	1226:54:37571:37585	1113335	4	True				
ANR	1113431	ParameterType	sljit_si		1113335	0					
ANR	1113432	Identifier	saveds		1113335	1					
ANR	1113433	Parameter	sljit_si fscratches	1227:1:37589:37607	1113335	5	True				
ANR	1113434	ParameterType	sljit_si		1113335	0					
ANR	1113435	Identifier	fscratches		1113335	1					
ANR	1113436	Parameter	sljit_si fsaveds	1227:22:37610:37625	1113335	6	True				
ANR	1113437	ParameterType	sljit_si		1113335	0					
ANR	1113438	Identifier	fsaveds		1113335	1					
ANR	1113439	Parameter	sljit_si local_size	1227:40:37628:37646	1113335	7	True				
ANR	1113440	ParameterType	sljit_si		1113335	0					
ANR	1113441	Identifier	local_size		1113335	1					
ANR	1113442	CFGEntryNode	ENTRY		1113335		True				
ANR	1113443	CFGExitNode	EXIT		1113335		True				
ANR	1113444	Symbol	GET_SAVED_REGISTERS_SIZE		1113335						
ANR	1113445	Symbol	local_size		1113335						
ANR	1113446	Symbol	scratches		1113335						
ANR	1113447	Symbol	saveds		1113335						
ANR	1113448	Symbol	check_sljit_set_context		1113335						
ANR	1113449	Symbol	SLJIT_SUCCESS		1113335						
ANR	1113450	Symbol	* compiler		1113335						
ANR	1113451	Symbol	args		1113335						
ANR	1113452	Symbol	fscratches		1113335						
ANR	1113453	Symbol	compiler -> local_size		1113335						
ANR	1113454	Symbol	fsaveds		1113335						
ANR	1113455	Symbol	options		1113335						
ANR	1113456	Symbol	~7		1113335						
ANR	1113457	Symbol	compiler		1113335						
ANR	1113458	Function	sljit_emit_return	1239:0:38010:39440							
ANR	1113459	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1113458	0					
ANR	1113460	CompoundStatement		1240:0:38137:39440	1113458	0					
ANR	1113461	IdentifierDeclStatement	sljit_si local_size ;	1241:1:38140:38159	1113458	0	True				
ANR	1113462	IdentifierDecl	local_size		1113458	0					
ANR	1113463	IdentifierDeclType	sljit_si		1113458	0					
ANR	1113464	Identifier	local_size		1113458	1					
ANR	1113465	IdentifierDeclStatement	sljit_ins base ;	1242:1:38162:38176	1113458	1	True				
ANR	1113466	IdentifierDecl	base		1113458	0					
ANR	1113467	IdentifierDeclType	sljit_ins		1113458	0					
ANR	1113468	Identifier	base		1113458	1					
ANR	1113469	IdentifierDeclStatement	"sljit_si i , tmp ;"	1243:1:38179:38194	1113458	2	True				
ANR	1113470	IdentifierDecl	i		1113458	0					
ANR	1113471	IdentifierDeclType	sljit_si		1113458	0					
ANR	1113472	Identifier	i		1113458	1					
ANR	1113473	IdentifierDecl	tmp		1113458	1					
ANR	1113474	IdentifierDeclType	sljit_si		1113458	0					
ANR	1113475	Identifier	tmp		1113458	1					
ANR	1113476	IdentifierDeclStatement	sljit_si saveds ;	1244:1:38197:38212	1113458	3	True				
ANR	1113477	IdentifierDecl	saveds		1113458	0					
ANR	1113478	IdentifierDeclType	sljit_si		1113458	0					
ANR	1113479	Identifier	saveds		1113458	1					
ANR	1113480	ExpressionStatement	CHECK_ERROR ( )	1246:1:38216:38229	1113458	4	True				
ANR	1113481	CallExpression	CHECK_ERROR ( )		1113458	0					
ANR	1113482	Callee	CHECK_ERROR		1113458	0					
ANR	1113483	Identifier	CHECK_ERROR		1113458	0					
ANR	1113484	ArgumentList			1113458	1					
ANR	1113485	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	1247:1:38232:38287	1113458	5	True				
ANR	1113486	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1113458	0					
ANR	1113487	Callee	CHECK		1113458	0					
ANR	1113488	Identifier	CHECK		1113458	0					
ANR	1113489	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1113458	1					
ANR	1113490	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1113458	0					
ANR	1113491	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1113458	0					
ANR	1113492	Callee	check_sljit_emit_return		1113458	0					
ANR	1113493	Identifier	check_sljit_emit_return		1113458	0					
ANR	1113494	ArgumentList	compiler		1113458	1					
ANR	1113495	Argument	compiler		1113458	0					
ANR	1113496	Identifier	compiler		1113458	0					
ANR	1113497	Argument	op		1113458	1					
ANR	1113498	Identifier	op		1113458	0					
ANR	1113499	Argument	src		1113458	2					
ANR	1113500	Identifier	src		1113458	0					
ANR	1113501	Argument	srcw		1113458	3					
ANR	1113502	Identifier	srcw		1113458	0					
ANR	1113503	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	1249:1:38291:38347	1113458	6	True				
ANR	1113504	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1113458	0					
ANR	1113505	Callee	FAIL_IF		1113458	0					
ANR	1113506	Identifier	FAIL_IF		1113458	0					
ANR	1113507	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1113458	1					
ANR	1113508	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1113458	0					
ANR	1113509	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1113458	0					
ANR	1113510	Callee	emit_mov_before_return		1113458	0					
ANR	1113511	Identifier	emit_mov_before_return		1113458	0					
ANR	1113512	ArgumentList	compiler		1113458	1					
ANR	1113513	Argument	compiler		1113458	0					
ANR	1113514	Identifier	compiler		1113458	0					
ANR	1113515	Argument	op		1113458	1					
ANR	1113516	Identifier	op		1113458	0					
ANR	1113517	Argument	src		1113458	2					
ANR	1113518	Identifier	src		1113458	0					
ANR	1113519	Argument	srcw		1113458	3					
ANR	1113520	Identifier	srcw		1113458	0					
ANR	1113521	ExpressionStatement	local_size = compiler -> local_size	1251:1:38351:38384	1113458	7	True				
ANR	1113522	AssignmentExpression	local_size = compiler -> local_size		1113458	0		=			
ANR	1113523	Identifier	local_size		1113458	0					
ANR	1113524	PtrMemberAccess	compiler -> local_size		1113458	1					
ANR	1113525	Identifier	compiler		1113458	0					
ANR	1113526	Identifier	local_size		1113458	1					
ANR	1113527	IfStatement	if ( local_size <= SIMM_16BIT_MAX )		1113458	8					
ANR	1113528	Condition	local_size <= SIMM_16BIT_MAX	1252:5:38391:38418	1113458	0	True				
ANR	1113529	RelationalExpression	local_size <= SIMM_16BIT_MAX		1113458	0		<=			
ANR	1113530	Identifier	local_size		1113458	0					
ANR	1113531	Identifier	SIMM_16BIT_MAX		1113458	1					
ANR	1113532	ExpressionStatement	base = SLJIT_LOCALS_REG_mapped	1253:2:38423:38453	1113458	1	True				
ANR	1113533	AssignmentExpression	base = SLJIT_LOCALS_REG_mapped		1113458	0		=			
ANR	1113534	Identifier	base		1113458	0					
ANR	1113535	Identifier	SLJIT_LOCALS_REG_mapped		1113458	1					
ANR	1113536	ElseStatement	else		1113458	0					
ANR	1113537	CompoundStatement		15:6:323:323	1113458	0					
ANR	1113538	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"	1255:2:38465:38527	1113458	0	True				
ANR	1113539	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"		1113458	0					
ANR	1113540	Callee	FAIL_IF		1113458	0					
ANR	1113541	Identifier	FAIL_IF		1113458	0					
ANR	1113542	ArgumentList	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1113458	1					
ANR	1113543	Argument	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1113458	0					
ANR	1113544	CallExpression	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1113458	0					
ANR	1113545	Callee	load_immediate		1113458	0					
ANR	1113546	Identifier	load_immediate		1113458	0					
ANR	1113547	ArgumentList	compiler		1113458	1					
ANR	1113548	Argument	compiler		1113458	0					
ANR	1113549	Identifier	compiler		1113458	0					
ANR	1113550	Argument	TMP_REG1_mapped		1113458	1					
ANR	1113551	Identifier	TMP_REG1_mapped		1113458	0					
ANR	1113552	Argument	local_size		1113458	2					
ANR	1113553	Identifier	local_size		1113458	0					
ANR	1113554	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"	1256:2:38531:38602	1113458	1	True				
ANR	1113555	CallExpression	"FAIL_IF ( ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"		1113458	0					
ANR	1113556	Callee	FAIL_IF		1113458	0					
ANR	1113557	Identifier	FAIL_IF		1113458	0					
ANR	1113558	ArgumentList	"ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1113458	1					
ANR	1113559	Argument	"ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1113458	0					
ANR	1113560	CallExpression	"ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1113458	0					
ANR	1113561	Callee	ADD		1113458	0					
ANR	1113562	Identifier	ADD		1113458	0					
ANR	1113563	ArgumentList	TMP_REG1_mapped		1113458	1					
ANR	1113564	Argument	TMP_REG1_mapped		1113458	0					
ANR	1113565	Identifier	TMP_REG1_mapped		1113458	0					
ANR	1113566	Argument	SLJIT_LOCALS_REG_mapped		1113458	1					
ANR	1113567	Identifier	SLJIT_LOCALS_REG_mapped		1113458	0					
ANR	1113568	Argument	TMP_REG1_mapped		1113458	2					
ANR	1113569	Identifier	TMP_REG1_mapped		1113458	0					
ANR	1113570	ExpressionStatement	base = TMP_REG1_mapped	1257:2:38606:38628	1113458	2	True				
ANR	1113571	AssignmentExpression	base = TMP_REG1_mapped		1113458	0		=			
ANR	1113572	Identifier	base		1113458	0					
ANR	1113573	Identifier	TMP_REG1_mapped		1113458	1					
ANR	1113574	ExpressionStatement	local_size = 0	1258:2:38632:38646	1113458	3	True				
ANR	1113575	AssignmentExpression	local_size = 0		1113458	0		=			
ANR	1113576	Identifier	local_size		1113458	0					
ANR	1113577	PrimaryExpression	0		1113458	1					
ANR	1113578	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"	1262:1:38688:38741	1113458	9	True				
ANR	1113579	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"		1113458	0					
ANR	1113580	Callee	FAIL_IF		1113458	0					
ANR	1113581	Identifier	FAIL_IF		1113458	0					
ANR	1113582	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1113458	1					
ANR	1113583	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1113458	0					
ANR	1113584	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1113458	0					
ANR	1113585	Callee	ADDLI		1113458	0					
ANR	1113586	Identifier	ADDLI		1113458	0					
ANR	1113587	ArgumentList	ADDR_TMP_mapped		1113458	1					
ANR	1113588	Argument	ADDR_TMP_mapped		1113458	0					
ANR	1113589	Identifier	ADDR_TMP_mapped		1113458	0					
ANR	1113590	Argument	base		1113458	1					
ANR	1113591	Identifier	base		1113458	0					
ANR	1113592	Argument	local_size - 8		1113458	2					
ANR	1113593	AdditiveExpression	local_size - 8		1113458	0		-			
ANR	1113594	Identifier	local_size		1113458	0					
ANR	1113595	PrimaryExpression	8		1113458	1					
ANR	1113596	ExpressionStatement	"FAIL_IF ( LD_ADD ( RA , ADDR_TMP_mapped , - 8 ) )"	1263:1:38744:38784	1113458	10	True				
ANR	1113597	CallExpression	"FAIL_IF ( LD_ADD ( RA , ADDR_TMP_mapped , - 8 ) )"		1113458	0					
ANR	1113598	Callee	FAIL_IF		1113458	0					
ANR	1113599	Identifier	FAIL_IF		1113458	0					
ANR	1113600	ArgumentList	"LD_ADD ( RA , ADDR_TMP_mapped , - 8 )"		1113458	1					
ANR	1113601	Argument	"LD_ADD ( RA , ADDR_TMP_mapped , - 8 )"		1113458	0					
ANR	1113602	CallExpression	"LD_ADD ( RA , ADDR_TMP_mapped , - 8 )"		1113458	0					
ANR	1113603	Callee	LD_ADD		1113458	0					
ANR	1113604	Identifier	LD_ADD		1113458	0					
ANR	1113605	ArgumentList	RA		1113458	1					
ANR	1113606	Argument	RA		1113458	0					
ANR	1113607	Identifier	RA		1113458	0					
ANR	1113608	Argument	ADDR_TMP_mapped		1113458	1					
ANR	1113609	Identifier	ADDR_TMP_mapped		1113458	0					
ANR	1113610	Argument	- 8		1113458	2					
ANR	1113611	UnaryOperationExpression	- 8		1113458	0					
ANR	1113612	UnaryOperator	-		1113458	0					
ANR	1113613	PrimaryExpression	8		1113458	1					
ANR	1113614	ExpressionStatement	saveds = compiler -> saveds	1266:1:38820:38845	1113458	11	True				
ANR	1113615	AssignmentExpression	saveds = compiler -> saveds		1113458	0		=			
ANR	1113616	Identifier	saveds		1113458	0					
ANR	1113617	PtrMemberAccess	compiler -> saveds		1113458	1					
ANR	1113618	Identifier	compiler		1113458	0					
ANR	1113619	Identifier	saveds		1113458	1					
ANR	1113620	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	1267:1:38848:38944	1113458	12	True				
ANR	1113621	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1113458	0		=			
ANR	1113622	Identifier	tmp		1113458	0					
ANR	1113623	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1113458	1					
ANR	1113624	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1113458	0					
ANR	1113625	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1113458	0		<			
ANR	1113626	Identifier	saveds		1113458	0					
ANR	1113627	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1113458	1					
ANR	1113628	AdditiveExpression	SLJIT_S0 + 1 - saveds		1113458	1		+			
ANR	1113629	Identifier	SLJIT_S0		1113458	0					
ANR	1113630	AdditiveExpression	1 - saveds		1113458	1		-			
ANR	1113631	PrimaryExpression	1		1113458	0					
ANR	1113632	Identifier	saveds		1113458	1					
ANR	1113633	Identifier	SLJIT_FIRST_SAVED_REG		1113458	2					
ANR	1113634	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1113458	13					
ANR	1113635	ForInit	i = SLJIT_S0 ;	1268:6:38952:38964	1113458	0	True				
ANR	1113636	AssignmentExpression	i = SLJIT_S0		1113458	0		=			
ANR	1113637	Identifier	i		1113458	0					
ANR	1113638	Identifier	SLJIT_S0		1113458	1					
ANR	1113639	Condition	i >= tmp	1268:20:38966:38973	1113458	1	True				
ANR	1113640	RelationalExpression	i >= tmp		1113458	0		>=			
ANR	1113641	Identifier	i		1113458	0					
ANR	1113642	Identifier	tmp		1113458	1					
ANR	1113643	PostIncDecOperationExpression	i --	1268:30:38976:38978	1113458	2	True				
ANR	1113644	Identifier	i		1113458	0					
ANR	1113645	IncDec	--		1113458	1					
ANR	1113646	CompoundStatement		29:35:843:843	1113458	3					
ANR	1113647	ExpressionStatement	"FAIL_IF ( LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 ) )"	1269:2:38985:39033	1113458	0	True				
ANR	1113648	CallExpression	"FAIL_IF ( LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 ) )"		1113458	0					
ANR	1113649	Callee	FAIL_IF		1113458	0					
ANR	1113650	Identifier	FAIL_IF		1113458	0					
ANR	1113651	ArgumentList	"LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 )"		1113458	1					
ANR	1113652	Argument	"LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 )"		1113458	0					
ANR	1113653	CallExpression	"LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 )"		1113458	0					
ANR	1113654	Callee	LD_ADD		1113458	0					
ANR	1113655	Identifier	LD_ADD		1113458	0					
ANR	1113656	ArgumentList	reg_map [ i ]		1113458	1					
ANR	1113657	Argument	reg_map [ i ]		1113458	0					
ANR	1113658	ArrayIndexing	reg_map [ i ]		1113458	0					
ANR	1113659	Identifier	reg_map		1113458	0					
ANR	1113660	Identifier	i		1113458	1					
ANR	1113661	Argument	ADDR_TMP_mapped		1113458	1					
ANR	1113662	Identifier	ADDR_TMP_mapped		1113458	0					
ANR	1113663	Argument	- 8		1113458	2					
ANR	1113664	UnaryOperationExpression	- 8		1113458	0					
ANR	1113665	UnaryOperator	-		1113458	0					
ANR	1113666	PrimaryExpression	8		1113458	1					
ANR	1113667	ForStatement	for ( i = compiler -> scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1113458	14					
ANR	1113668	ForInit	i = compiler -> scratches ;	1273:6:39102:39125	1113458	0	True				
ANR	1113669	AssignmentExpression	i = compiler -> scratches		1113458	0		=			
ANR	1113670	Identifier	i		1113458	0					
ANR	1113671	PtrMemberAccess	compiler -> scratches		1113458	1					
ANR	1113672	Identifier	compiler		1113458	0					
ANR	1113673	Identifier	scratches		1113458	1					
ANR	1113674	Condition	i >= SLJIT_FIRST_SAVED_REG	1273:31:39127:39152	1113458	1	True				
ANR	1113675	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1113458	0		>=			
ANR	1113676	Identifier	i		1113458	0					
ANR	1113677	Identifier	SLJIT_FIRST_SAVED_REG		1113458	1					
ANR	1113678	PostIncDecOperationExpression	i --	1273:59:39155:39157	1113458	2	True				
ANR	1113679	Identifier	i		1113458	0					
ANR	1113680	IncDec	--		1113458	1					
ANR	1113681	CompoundStatement		34:64:1022:1022	1113458	3					
ANR	1113682	ExpressionStatement	"FAIL_IF ( LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 ) )"	1274:2:39164:39212	1113458	0	True				
ANR	1113683	CallExpression	"FAIL_IF ( LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 ) )"		1113458	0					
ANR	1113684	Callee	FAIL_IF		1113458	0					
ANR	1113685	Identifier	FAIL_IF		1113458	0					
ANR	1113686	ArgumentList	"LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 )"		1113458	1					
ANR	1113687	Argument	"LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 )"		1113458	0					
ANR	1113688	CallExpression	"LD_ADD ( reg_map [ i ] , ADDR_TMP_mapped , - 8 )"		1113458	0					
ANR	1113689	Callee	LD_ADD		1113458	0					
ANR	1113690	Identifier	LD_ADD		1113458	0					
ANR	1113691	ArgumentList	reg_map [ i ]		1113458	1					
ANR	1113692	Argument	reg_map [ i ]		1113458	0					
ANR	1113693	ArrayIndexing	reg_map [ i ]		1113458	0					
ANR	1113694	Identifier	reg_map		1113458	0					
ANR	1113695	Identifier	i		1113458	1					
ANR	1113696	Argument	ADDR_TMP_mapped		1113458	1					
ANR	1113697	Identifier	ADDR_TMP_mapped		1113458	0					
ANR	1113698	Argument	- 8		1113458	2					
ANR	1113699	UnaryOperationExpression	- 8		1113458	0					
ANR	1113700	UnaryOperator	-		1113458	0					
ANR	1113701	PrimaryExpression	8		1113458	1					
ANR	1113702	IfStatement	if ( compiler -> local_size <= SIMM_16BIT_MAX )		1113458	15					
ANR	1113703	Condition	compiler -> local_size <= SIMM_16BIT_MAX	1277:5:39223:39260	1113458	0	True				
ANR	1113704	RelationalExpression	compiler -> local_size <= SIMM_16BIT_MAX		1113458	0		<=			
ANR	1113705	PtrMemberAccess	compiler -> local_size		1113458	0					
ANR	1113706	Identifier	compiler		1113458	0					
ANR	1113707	Identifier	local_size		1113458	1					
ANR	1113708	Identifier	SIMM_16BIT_MAX		1113458	1					
ANR	1113709	ExpressionStatement	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size ) )"	1278:2:39265:39351	1113458	1	True				
ANR	1113710	CallExpression	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size ) )"		1113458	0					
ANR	1113711	Callee	FAIL_IF		1113458	0					
ANR	1113712	Identifier	FAIL_IF		1113458	0					
ANR	1113713	ArgumentList	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size )"		1113458	1					
ANR	1113714	Argument	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size )"		1113458	0					
ANR	1113715	CallExpression	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size )"		1113458	0					
ANR	1113716	Callee	ADDLI		1113458	0					
ANR	1113717	Identifier	ADDLI		1113458	0					
ANR	1113718	ArgumentList	SLJIT_LOCALS_REG_mapped		1113458	1					
ANR	1113719	Argument	SLJIT_LOCALS_REG_mapped		1113458	0					
ANR	1113720	Identifier	SLJIT_LOCALS_REG_mapped		1113458	0					
ANR	1113721	Argument	SLJIT_LOCALS_REG_mapped		1113458	1					
ANR	1113722	Identifier	SLJIT_LOCALS_REG_mapped		1113458	0					
ANR	1113723	Argument	compiler -> local_size		1113458	2					
ANR	1113724	PtrMemberAccess	compiler -> local_size		1113458	0					
ANR	1113725	Identifier	compiler		1113458	0					
ANR	1113726	Identifier	local_size		1113458	1					
ANR	1113727	ElseStatement	else		1113458	0					
ANR	1113728	ExpressionStatement	"FAIL_IF ( ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO ) )"	1280:2:39361:39421	1113458	0	True				
ANR	1113729	CallExpression	"FAIL_IF ( ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO ) )"		1113458	0					
ANR	1113730	Callee	FAIL_IF		1113458	0					
ANR	1113731	Identifier	FAIL_IF		1113458	0					
ANR	1113732	ArgumentList	"ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO )"		1113458	1					
ANR	1113733	Argument	"ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO )"		1113458	0					
ANR	1113734	CallExpression	"ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO )"		1113458	0					
ANR	1113735	Callee	ADD		1113458	0					
ANR	1113736	Identifier	ADD		1113458	0					
ANR	1113737	ArgumentList	SLJIT_LOCALS_REG_mapped		1113458	1					
ANR	1113738	Argument	SLJIT_LOCALS_REG_mapped		1113458	0					
ANR	1113739	Identifier	SLJIT_LOCALS_REG_mapped		1113458	0					
ANR	1113740	Argument	TMP_REG1_mapped		1113458	1					
ANR	1113741	Identifier	TMP_REG1_mapped		1113458	0					
ANR	1113742	Argument	ZERO		1113458	2					
ANR	1113743	Identifier	ZERO		1113458	0					
ANR	1113744	ReturnStatement	return JR ( RA ) ;	1282:1:39425:39438	1113458	16	True				
ANR	1113745	CallExpression	JR ( RA )		1113458	0					
ANR	1113746	Callee	JR		1113458	0					
ANR	1113747	Identifier	JR		1113458	0					
ANR	1113748	ArgumentList	RA		1113458	1					
ANR	1113749	Argument	RA		1113458	0					
ANR	1113750	Identifier	RA		1113458	0					
ANR	1113751	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1113458	1					
ANR	1113752	Identifier	sljit_emit_return		1113458	2					
ANR	1113753	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1113458	3					
ANR	1113754	Parameter	struct sljit_compiler * compiler	1239:52:38062:38092	1113458	0	True				
ANR	1113755	ParameterType	struct sljit_compiler *		1113458	0					
ANR	1113756	Identifier	compiler		1113458	1					
ANR	1113757	Parameter	sljit_si op	1239:85:38095:38105	1113458	1	True				
ANR	1113758	ParameterType	sljit_si		1113458	0					
ANR	1113759	Identifier	op		1113458	1					
ANR	1113760	Parameter	sljit_si src	1239:98:38108:38119	1113458	2	True				
ANR	1113761	ParameterType	sljit_si		1113458	0					
ANR	1113762	Identifier	src		1113458	1					
ANR	1113763	Parameter	sljit_sw srcw	1239:112:38122:38134	1113458	3	True				
ANR	1113764	ParameterType	sljit_sw		1113458	0					
ANR	1113765	Identifier	srcw		1113458	1					
ANR	1113766	CFGEntryNode	ENTRY		1113458		True				
ANR	1113767	CFGExitNode	EXIT		1113458		True				
ANR	1113768	Symbol	ADD		1113458						
ANR	1113769	Symbol	ZERO		1113458						
ANR	1113770	Symbol	TMP_REG1_mapped		1113458						
ANR	1113771	Symbol	compiler -> scratches		1113458						
ANR	1113772	Symbol	saveds		1113458						
ANR	1113773	Symbol	JR		1113458						
ANR	1113774	Symbol	reg_map		1113458						
ANR	1113775	Symbol	* compiler		1113458						
ANR	1113776	Symbol	ADDLI		1113458						
ANR	1113777	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1113458						
ANR	1113778	Symbol	load_immediate		1113458						
ANR	1113779	Symbol	check_sljit_emit_return		1113458						
ANR	1113780	Symbol	tmp		1113458						
ANR	1113781	Symbol	compiler		1113458						
ANR	1113782	Symbol	LD_ADD		1113458						
ANR	1113783	Symbol	op		1113458						
ANR	1113784	Symbol	local_size		1113458						
ANR	1113785	Symbol	src		1113458						
ANR	1113786	Symbol	srcw		1113458						
ANR	1113787	Symbol	i		1113458						
ANR	1113788	Symbol	* reg_map		1113458						
ANR	1113789	Symbol	SLJIT_S0		1113458						
ANR	1113790	Symbol	RA		1113458						
ANR	1113791	Symbol	SLJIT_LOCALS_REG_mapped		1113458						
ANR	1113792	Symbol	compiler -> local_size		1113458						
ANR	1113793	Symbol	ADDR_TMP_mapped		1113458						
ANR	1113794	Symbol	compiler -> saveds		1113458						
ANR	1113795	Symbol	* i		1113458						
ANR	1113796	Symbol	SIMM_16BIT_MAX		1113458						
ANR	1113797	Symbol	SLJIT_FIRST_SAVED_REG		1113458						
ANR	1113798	Symbol	emit_mov_before_return		1113458						
ANR	1113799	Symbol	base		1113458						
ANR	1113800	Function	getput_arg_fast	1288:0:39543:40239							
ANR	1113801	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw)"		1113800	0					
ANR	1113802	CompoundStatement		1289:0:39670:40239	1113800	0					
ANR	1113803	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1290:1:39673:39702	1113800	0	True				
ANR	1113804	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1113800	0					
ANR	1113805	Callee	SLJIT_ASSERT		1113800	0					
ANR	1113806	Identifier	SLJIT_ASSERT		1113800	0					
ANR	1113807	ArgumentList	arg & SLJIT_MEM		1113800	1					
ANR	1113808	Argument	arg & SLJIT_MEM		1113800	0					
ANR	1113809	BitAndExpression	arg & SLJIT_MEM		1113800	0		&			
ANR	1113810	Identifier	arg		1113800	0					
ANR	1113811	Identifier	SLJIT_MEM		1113800	1					
ANR	1113812	IfStatement	if ( ( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN )		1113800	1					
ANR	1113813	Condition	( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN	1292:5:39710:39834	1113800	0	True				
ANR	1113814	AndExpression	( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1113800	0		&&			
ANR	1113815	OrExpression	! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK )		1113800	0		||			
ANR	1113816	UnaryOperationExpression	! ( flags & WRITE_BACK )		1113800	0					
ANR	1113817	UnaryOperator	!		1113800	0					
ANR	1113818	BitAndExpression	flags & WRITE_BACK		1113800	1		&			
ANR	1113819	Identifier	flags		1113800	0					
ANR	1113820	Identifier	WRITE_BACK		1113800	1					
ANR	1113821	UnaryOperationExpression	! ( arg & REG_MASK )		1113800	1					
ANR	1113822	UnaryOperator	!		1113800	0					
ANR	1113823	BitAndExpression	arg & REG_MASK		1113800	1		&			
ANR	1113824	Identifier	arg		1113800	0					
ANR	1113825	Identifier	REG_MASK		1113800	1					
ANR	1113826	AndExpression	! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1113800	1		&&			
ANR	1113827	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1113800	0					
ANR	1113828	UnaryOperator	!		1113800	0					
ANR	1113829	BitAndExpression	arg & OFFS_REG_MASK		1113800	1		&			
ANR	1113830	Identifier	arg		1113800	0					
ANR	1113831	Identifier	OFFS_REG_MASK		1113800	1					
ANR	1113832	AndExpression	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1113800	1		&&			
ANR	1113833	RelationalExpression	argw <= SIMM_16BIT_MAX		1113800	0		<=			
ANR	1113834	Identifier	argw		1113800	0					
ANR	1113835	Identifier	SIMM_16BIT_MAX		1113800	1					
ANR	1113836	RelationalExpression	argw >= SIMM_16BIT_MIN		1113800	1		>=			
ANR	1113837	Identifier	argw		1113800	0					
ANR	1113838	Identifier	SIMM_16BIT_MIN		1113800	1					
ANR	1113839	CompoundStatement		5:82:166:166	1113800	1					
ANR	1113840	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1113800	0					
ANR	1113841	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	1295:6:39901:39932	1113800	0	True				
ANR	1113842	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1113800	0					
ANR	1113843	Callee	SLJIT_UNLIKELY		1113800	0					
ANR	1113844	Identifier	SLJIT_UNLIKELY		1113800	0					
ANR	1113845	ArgumentList	flags & ARG_TEST		1113800	1					
ANR	1113846	Argument	flags & ARG_TEST		1113800	0					
ANR	1113847	BitAndExpression	flags & ARG_TEST		1113800	0		&			
ANR	1113848	Identifier	flags		1113800	0					
ANR	1113849	Identifier	ARG_TEST		1113800	1					
ANR	1113850	ReturnStatement	return 1 ;	1296:3:39938:39946	1113800	1	True				
ANR	1113851	PrimaryExpression	1		1113800	0					
ANR	1113852	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw ) )"	1298:2:39951:40013	1113800	1	True				
ANR	1113853	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw ) )"		1113800	0					
ANR	1113854	Callee	FAIL_IF		1113800	0					
ANR	1113855	Identifier	FAIL_IF		1113800	0					
ANR	1113856	ArgumentList	"ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw )"		1113800	1					
ANR	1113857	Argument	"ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw )"		1113800	0					
ANR	1113858	CallExpression	"ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw )"		1113800	0					
ANR	1113859	Callee	ADDLI		1113800	0					
ANR	1113860	Identifier	ADDLI		1113800	0					
ANR	1113861	ArgumentList	ADDR_TMP_mapped		1113800	1					
ANR	1113862	Argument	ADDR_TMP_mapped		1113800	0					
ANR	1113863	Identifier	ADDR_TMP_mapped		1113800	0					
ANR	1113864	Argument	reg_map [ arg & REG_MASK ]		1113800	1					
ANR	1113865	ArrayIndexing	reg_map [ arg & REG_MASK ]		1113800	0					
ANR	1113866	Identifier	reg_map		1113800	0					
ANR	1113867	BitAndExpression	arg & REG_MASK		1113800	1		&			
ANR	1113868	Identifier	arg		1113800	0					
ANR	1113869	Identifier	REG_MASK		1113800	1					
ANR	1113870	Argument	argw		1113800	2					
ANR	1113871	Identifier	argw		1113800	0					
ANR	1113872	IfStatement	if ( flags & LOAD_DATA )		1113800	2					
ANR	1113873	Condition	flags & LOAD_DATA	1300:6:40022:40038	1113800	0	True				
ANR	1113874	BitAndExpression	flags & LOAD_DATA		1113800	0		&			
ANR	1113875	Identifier	flags		1113800	0					
ANR	1113876	Identifier	LOAD_DATA		1113800	1					
ANR	1113877	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"	1301:3:40044:40120	1113800	1	True				
ANR	1113878	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"		1113800	0					
ANR	1113879	Callee	FAIL_IF		1113800	0					
ANR	1113880	Identifier	FAIL_IF		1113800	0					
ANR	1113881	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1113800	1					
ANR	1113882	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1113800	0					
ANR	1113883	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1113800	0					
ANR	1113884	Callee	PB2		1113800	0					
ANR	1113885	Identifier	PB2		1113800	0					
ANR	1113886	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1113800	1					
ANR	1113887	Argument	data_transfer_insts [ flags & MEM_MASK ]		1113800	0					
ANR	1113888	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1113800	0					
ANR	1113889	Identifier	data_transfer_insts		1113800	0					
ANR	1113890	BitAndExpression	flags & MEM_MASK		1113800	1		&			
ANR	1113891	Identifier	flags		1113800	0					
ANR	1113892	Identifier	MEM_MASK		1113800	1					
ANR	1113893	Argument	reg_ar		1113800	1					
ANR	1113894	Identifier	reg_ar		1113800	0					
ANR	1113895	Argument	ADDR_TMP_mapped		1113800	2					
ANR	1113896	Identifier	ADDR_TMP_mapped		1113800	0					
ANR	1113897	ElseStatement	else		1113800	0					
ANR	1113898	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"	1303:3:40132:40208	1113800	0	True				
ANR	1113899	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"		1113800	0					
ANR	1113900	Callee	FAIL_IF		1113800	0					
ANR	1113901	Identifier	FAIL_IF		1113800	0					
ANR	1113902	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1113800	1					
ANR	1113903	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1113800	0					
ANR	1113904	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1113800	0					
ANR	1113905	Callee	PB2		1113800	0					
ANR	1113906	Identifier	PB2		1113800	0					
ANR	1113907	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1113800	1					
ANR	1113908	Argument	data_transfer_insts [ flags & MEM_MASK ]		1113800	0					
ANR	1113909	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1113800	0					
ANR	1113910	Identifier	data_transfer_insts		1113800	0					
ANR	1113911	BitAndExpression	flags & MEM_MASK		1113800	1		&			
ANR	1113912	Identifier	flags		1113800	0					
ANR	1113913	Identifier	MEM_MASK		1113800	1					
ANR	1113914	Argument	ADDR_TMP_mapped		1113800	1					
ANR	1113915	Identifier	ADDR_TMP_mapped		1113800	0					
ANR	1113916	Argument	reg_ar		1113800	2					
ANR	1113917	Identifier	reg_ar		1113800	0					
ANR	1113918	ReturnStatement	return - 1 ;	1305:2:40213:40222	1113800	3	True				
ANR	1113919	UnaryOperationExpression	- 1		1113800	0					
ANR	1113920	UnaryOperator	-		1113800	0					
ANR	1113921	PrimaryExpression	1		1113800	1					
ANR	1113922	ReturnStatement	return 0 ;	1308:1:40229:40237	1113800	2	True				
ANR	1113923	PrimaryExpression	0		1113800	0					
ANR	1113924	ReturnType	static sljit_si		1113800	1					
ANR	1113925	Identifier	getput_arg_fast		1113800	2					
ANR	1113926	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw"		1113800	3					
ANR	1113927	Parameter	struct sljit_compiler * compiler	1288:32:39575:39605	1113800	0	True				
ANR	1113928	ParameterType	struct sljit_compiler *		1113800	0					
ANR	1113929	Identifier	compiler		1113800	1					
ANR	1113930	Parameter	sljit_si flags	1288:65:39608:39621	1113800	1	True				
ANR	1113931	ParameterType	sljit_si		1113800	0					
ANR	1113932	Identifier	flags		1113800	1					
ANR	1113933	Parameter	sljit_si reg_ar	1288:81:39624:39638	1113800	2	True				
ANR	1113934	ParameterType	sljit_si		1113800	0					
ANR	1113935	Identifier	reg_ar		1113800	1					
ANR	1113936	Parameter	sljit_si arg	1288:98:39641:39652	1113800	3	True				
ANR	1113937	ParameterType	sljit_si		1113800	0					
ANR	1113938	Identifier	arg		1113800	1					
ANR	1113939	Parameter	sljit_sw argw	1288:112:39655:39667	1113800	4	True				
ANR	1113940	ParameterType	sljit_sw		1113800	0					
ANR	1113941	Identifier	argw		1113800	1					
ANR	1113942	CFGEntryNode	ENTRY		1113800		True				
ANR	1113943	CFGExitNode	EXIT		1113800		True				
ANR	1113944	Symbol	PB2		1113800						
ANR	1113945	Symbol	SIMM_16BIT_MIN		1113800						
ANR	1113946	Symbol	* REG_MASK		1113800						
ANR	1113947	Symbol	LOAD_DATA		1113800						
ANR	1113948	Symbol	SLJIT_MEM		1113800						
ANR	1113949	Symbol	flags		1113800						
ANR	1113950	Symbol	reg_map		1113800						
ANR	1113951	Symbol	* MEM_MASK		1113800						
ANR	1113952	Symbol	argw		1113800						
ANR	1113953	Symbol	ADDLI		1113800						
ANR	1113954	Symbol	ARG_TEST		1113800						
ANR	1113955	Symbol	arg		1113800						
ANR	1113956	Symbol	compiler		1113800						
ANR	1113957	Symbol	WRITE_BACK		1113800						
ANR	1113958	Symbol	* flags		1113800						
ANR	1113959	Symbol	REG_MASK		1113800						
ANR	1113960	Symbol	OFFS_REG_MASK		1113800						
ANR	1113961	Symbol	* reg_map		1113800						
ANR	1113962	Symbol	data_transfer_insts		1113800						
ANR	1113963	Symbol	* data_transfer_insts		1113800						
ANR	1113964	Symbol	ADDR_TMP_mapped		1113800						
ANR	1113965	Symbol	SIMM_16BIT_MAX		1113800						
ANR	1113966	Symbol	MEM_MASK		1113800						
ANR	1113967	Symbol	reg_ar		1113800						
ANR	1113968	Symbol	SLJIT_UNLIKELY		1113800						
ANR	1113969	Symbol	* arg		1113800						
ANR	1113970	Function	can_cache	1314:0:40392:40953							
ANR	1113971	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1113970	0					
ANR	1113972	CompoundStatement		1315:0:40486:40953	1113970	0					
ANR	1113973	ExpressionStatement	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )	1316:1:40489:40546	1113970	0	True				
ANR	1113974	CallExpression	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )		1113970	0					
ANR	1113975	Callee	SLJIT_ASSERT		1113970	0					
ANR	1113976	Identifier	SLJIT_ASSERT		1113970	0					
ANR	1113977	ArgumentList	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1113970	1					
ANR	1113978	Argument	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1113970	0					
ANR	1113979	AndExpression	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1113970	0		&&			
ANR	1113980	BitAndExpression	arg & SLJIT_MEM		1113970	0		&			
ANR	1113981	Identifier	arg		1113970	0					
ANR	1113982	Identifier	SLJIT_MEM		1113970	1					
ANR	1113983	BitAndExpression	next_arg & SLJIT_MEM		1113970	1		&			
ANR	1113984	Identifier	next_arg		1113970	0					
ANR	1113985	Identifier	SLJIT_MEM		1113970	1					
ANR	1113986	IfStatement	if ( arg & OFFS_REG_MASK )		1113970	1					
ANR	1113987	Condition	arg & OFFS_REG_MASK	1319:5:40598:40616	1113970	0	True				
ANR	1113988	BitAndExpression	arg & OFFS_REG_MASK		1113970	0		&			
ANR	1113989	Identifier	arg		1113970	0					
ANR	1113990	Identifier	OFFS_REG_MASK		1113970	1					
ANR	1113991	CompoundStatement		5:26:132:132	1113970	1					
ANR	1113992	ExpressionStatement	argw &= 0x3	1320:2:40623:40634	1113970	0	True				
ANR	1113993	AssignmentExpression	argw &= 0x3		1113970	0		&=			
ANR	1113994	Identifier	argw		1113970	0					
ANR	1113995	PrimaryExpression	0x3		1113970	1					
ANR	1113996	ExpressionStatement	next_argw &= 0x3	1321:2:40638:40654	1113970	1	True				
ANR	1113997	AssignmentExpression	next_argw &= 0x3		1113970	0		&=			
ANR	1113998	Identifier	next_argw		1113970	0					
ANR	1113999	PrimaryExpression	0x3		1113970	1					
ANR	1114000	IfStatement	if ( argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) ) )		1113970	2					
ANR	1114001	Condition	argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )	1322:6:40662:40766	1113970	0	True				
ANR	1114002	AndExpression	argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )		1113970	0		&&			
ANR	1114003	Identifier	argw		1113970	0					
ANR	1114004	AndExpression	argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )		1113970	1		&&			
ANR	1114005	EqualityExpression	argw == next_argw		1113970	0		==			
ANR	1114006	Identifier	argw		1113970	0					
ANR	1114007	Identifier	next_argw		1113970	1					
ANR	1114008	OrExpression	arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1113970	1		||			
ANR	1114009	EqualityExpression	arg == next_arg		1113970	0		==			
ANR	1114010	Identifier	arg		1113970	0					
ANR	1114011	Identifier	next_arg		1113970	1					
ANR	1114012	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1113970	1		==			
ANR	1114013	BitAndExpression	arg & OFFS_REG_MASK		1113970	0		&			
ANR	1114014	Identifier	arg		1113970	0					
ANR	1114015	Identifier	OFFS_REG_MASK		1113970	1					
ANR	1114016	BitAndExpression	next_arg & OFFS_REG_MASK		1113970	1		&			
ANR	1114017	Identifier	next_arg		1113970	0					
ANR	1114018	Identifier	OFFS_REG_MASK		1113970	1					
ANR	1114019	ReturnStatement	return 1 ;	1324:3:40772:40780	1113970	1	True				
ANR	1114020	PrimaryExpression	1		1113970	0					
ANR	1114021	ReturnStatement	return 0 ;	1325:2:40784:40792	1113970	3	True				
ANR	1114022	PrimaryExpression	0		1113970	0					
ANR	1114023	IfStatement	if ( arg == next_arg )		1113970	2					
ANR	1114024	Condition	arg == next_arg	1328:5:40803:40817	1113970	0	True				
ANR	1114025	EqualityExpression	arg == next_arg		1113970	0		==			
ANR	1114026	Identifier	arg		1113970	0					
ANR	1114027	Identifier	next_arg		1113970	1					
ANR	1114028	CompoundStatement		14:22:333:333	1113970	1					
ANR	1114029	IfStatement	if ( ( ( next_argw - argw ) <= SIMM_16BIT_MAX && ( next_argw - argw ) >= SIMM_16BIT_MIN ) )		1113970	0					
ANR	1114030	Condition	( next_argw - argw ) <= SIMM_16BIT_MAX && ( next_argw - argw ) >= SIMM_16BIT_MIN	1329:6:40828:40909	1113970	0	True				
ANR	1114031	AndExpression	( next_argw - argw ) <= SIMM_16BIT_MAX && ( next_argw - argw ) >= SIMM_16BIT_MIN		1113970	0		&&			
ANR	1114032	RelationalExpression	( next_argw - argw ) <= SIMM_16BIT_MAX		1113970	0		<=			
ANR	1114033	AdditiveExpression	next_argw - argw		1113970	0		-			
ANR	1114034	Identifier	next_argw		1113970	0					
ANR	1114035	Identifier	argw		1113970	1					
ANR	1114036	Identifier	SIMM_16BIT_MAX		1113970	1					
ANR	1114037	RelationalExpression	( next_argw - argw ) >= SIMM_16BIT_MIN		1113970	1		>=			
ANR	1114038	AdditiveExpression	next_argw - argw		1113970	0		-			
ANR	1114039	Identifier	next_argw		1113970	0					
ANR	1114040	Identifier	argw		1113970	1					
ANR	1114041	Identifier	SIMM_16BIT_MIN		1113970	1					
ANR	1114042	ReturnStatement	return 1 ;	1331:3:40915:40923	1113970	1	True				
ANR	1114043	PrimaryExpression	1		1113970	0					
ANR	1114044	ReturnStatement	return 0 ;	1333:2:40928:40936	1113970	1	True				
ANR	1114045	PrimaryExpression	0		1113970	0					
ANR	1114046	ReturnStatement	return 0 ;	1336:1:40943:40951	1113970	3	True				
ANR	1114047	PrimaryExpression	0		1113970	0					
ANR	1114048	ReturnType	static sljit_si		1113970	1					
ANR	1114049	Identifier	can_cache		1113970	2					
ANR	1114050	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1113970	3					
ANR	1114051	Parameter	sljit_si arg	1314:26:40418:40429	1113970	0	True				
ANR	1114052	ParameterType	sljit_si		1113970	0					
ANR	1114053	Identifier	arg		1113970	1					
ANR	1114054	Parameter	sljit_sw argw	1314:40:40432:40444	1113970	1	True				
ANR	1114055	ParameterType	sljit_sw		1113970	0					
ANR	1114056	Identifier	argw		1113970	1					
ANR	1114057	Parameter	sljit_si next_arg	1314:55:40447:40463	1113970	2	True				
ANR	1114058	ParameterType	sljit_si		1113970	0					
ANR	1114059	Identifier	next_arg		1113970	1					
ANR	1114060	Parameter	sljit_sw next_argw	1314:74:40466:40483	1113970	3	True				
ANR	1114061	ParameterType	sljit_sw		1113970	0					
ANR	1114062	Identifier	next_argw		1113970	1					
ANR	1114063	CFGEntryNode	ENTRY		1113970		True				
ANR	1114064	CFGExitNode	EXIT		1113970		True				
ANR	1114065	Symbol	next_arg		1113970						
ANR	1114066	Symbol	SIMM_16BIT_MIN		1113970						
ANR	1114067	Symbol	SIMM_16BIT_MAX		1113970						
ANR	1114068	Symbol	SLJIT_MEM		1113970						
ANR	1114069	Symbol	arg		1113970						
ANR	1114070	Symbol	OFFS_REG_MASK		1113970						
ANR	1114071	Symbol	next_argw		1113970						
ANR	1114072	Symbol	argw		1113970						
ANR	1114073	Function	getput_arg	1340:0:41016:47520							
ANR	1114074	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1114073	0					
ANR	1114075	CompoundStatement		1341:0:41177:47520	1114073	0					
ANR	1114076	IdentifierDeclStatement	"sljit_si tmp_ar , base ;"	1342:1:41180:41201	1114073	0	True				
ANR	1114077	IdentifierDecl	tmp_ar		1114073	0					
ANR	1114078	IdentifierDeclType	sljit_si		1114073	0					
ANR	1114079	Identifier	tmp_ar		1114073	1					
ANR	1114080	IdentifierDecl	base		1114073	1					
ANR	1114081	IdentifierDeclType	sljit_si		1114073	0					
ANR	1114082	Identifier	base		1114073	1					
ANR	1114083	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1344:1:41205:41234	1114073	1	True				
ANR	1114084	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1114073	0					
ANR	1114085	Callee	SLJIT_ASSERT		1114073	0					
ANR	1114086	Identifier	SLJIT_ASSERT		1114073	0					
ANR	1114087	ArgumentList	arg & SLJIT_MEM		1114073	1					
ANR	1114088	Argument	arg & SLJIT_MEM		1114073	0					
ANR	1114089	BitAndExpression	arg & SLJIT_MEM		1114073	0		&			
ANR	1114090	Identifier	arg		1114073	0					
ANR	1114091	Identifier	SLJIT_MEM		1114073	1					
ANR	1114092	IfStatement	if ( ! ( next_arg & SLJIT_MEM ) )		1114073	2					
ANR	1114093	Condition	! ( next_arg & SLJIT_MEM )	1345:5:41241:41263	1114073	0	True				
ANR	1114094	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1114073	0					
ANR	1114095	UnaryOperator	!		1114073	0					
ANR	1114096	BitAndExpression	next_arg & SLJIT_MEM		1114073	1		&			
ANR	1114097	Identifier	next_arg		1114073	0					
ANR	1114098	Identifier	SLJIT_MEM		1114073	1					
ANR	1114099	CompoundStatement		5:30:88:88	1114073	1					
ANR	1114100	ExpressionStatement	next_arg = 0	1346:2:41270:41282	1114073	0	True				
ANR	1114101	AssignmentExpression	next_arg = 0		1114073	0		=			
ANR	1114102	Identifier	next_arg		1114073	0					
ANR	1114103	PrimaryExpression	0		1114073	1					
ANR	1114104	ExpressionStatement	next_argw = 0	1347:2:41286:41299	1114073	1	True				
ANR	1114105	AssignmentExpression	next_argw = 0		1114073	0		=			
ANR	1114106	Identifier	next_argw		1114073	0					
ANR	1114107	PrimaryExpression	0		1114073	1					
ANR	1114108	IfStatement	if ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) )		1114073	3					
ANR	1114109	Condition	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )	1350:5:41310:41361	1114073	0	True				
ANR	1114110	AndExpression	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1114073	0		&&			
ANR	1114111	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1114073	0		<=			
ANR	1114112	BitAndExpression	flags & MEM_MASK		1114073	0		&			
ANR	1114113	Identifier	flags		1114073	0					
ANR	1114114	Identifier	MEM_MASK		1114073	1					
ANR	1114115	Identifier	GPR_REG		1114073	1					
ANR	1114116	BitAndExpression	flags & LOAD_DATA		1114073	1		&			
ANR	1114117	Identifier	flags		1114073	0					
ANR	1114118	Identifier	LOAD_DATA		1114073	1					
ANR	1114119	ExpressionStatement	tmp_ar = reg_ar	1351:2:41366:41381	1114073	1	True				
ANR	1114120	AssignmentExpression	tmp_ar = reg_ar		1114073	0		=			
ANR	1114121	Identifier	tmp_ar		1114073	0					
ANR	1114122	Identifier	reg_ar		1114073	1					
ANR	1114123	ElseStatement	else		1114073	0					
ANR	1114124	ExpressionStatement	tmp_ar = TMP_REG1_mapped	1353:2:41391:41415	1114073	0	True				
ANR	1114125	AssignmentExpression	tmp_ar = TMP_REG1_mapped		1114073	0		=			
ANR	1114126	Identifier	tmp_ar		1114073	0					
ANR	1114127	Identifier	TMP_REG1_mapped		1114073	1					
ANR	1114128	ExpressionStatement	base = arg & REG_MASK	1355:1:41419:41440	1114073	4	True				
ANR	1114129	AssignmentExpression	base = arg & REG_MASK		1114073	0		=			
ANR	1114130	Identifier	base		1114073	0					
ANR	1114131	BitAndExpression	arg & REG_MASK		1114073	1		&			
ANR	1114132	Identifier	arg		1114073	0					
ANR	1114133	Identifier	REG_MASK		1114073	1					
ANR	1114134	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1114073	5					
ANR	1114135	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	1357:5:41448:41482	1114073	0	True				
ANR	1114136	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1114073	0					
ANR	1114137	Callee	SLJIT_UNLIKELY		1114073	0					
ANR	1114138	Identifier	SLJIT_UNLIKELY		1114073	0					
ANR	1114139	ArgumentList	arg & OFFS_REG_MASK		1114073	1					
ANR	1114140	Argument	arg & OFFS_REG_MASK		1114073	0					
ANR	1114141	BitAndExpression	arg & OFFS_REG_MASK		1114073	0		&			
ANR	1114142	Identifier	arg		1114073	0					
ANR	1114143	Identifier	OFFS_REG_MASK		1114073	1					
ANR	1114144	CompoundStatement		17:42:307:307	1114073	1					
ANR	1114145	ExpressionStatement	argw &= 0x3	1358:2:41489:41500	1114073	0	True				
ANR	1114146	AssignmentExpression	argw &= 0x3		1114073	0		&=			
ANR	1114147	Identifier	argw		1114073	0					
ANR	1114148	PrimaryExpression	0x3		1114073	1					
ANR	1114149	IfStatement	if ( ( flags & WRITE_BACK ) && reg_ar == reg_map [ base ] )		1114073	1					
ANR	1114150	Condition	( flags & WRITE_BACK ) && reg_ar == reg_map [ base ]	1360:6:41509:41555	1114073	0	True				
ANR	1114151	AndExpression	( flags & WRITE_BACK ) && reg_ar == reg_map [ base ]		1114073	0		&&			
ANR	1114152	BitAndExpression	flags & WRITE_BACK		1114073	0		&			
ANR	1114153	Identifier	flags		1114073	0					
ANR	1114154	Identifier	WRITE_BACK		1114073	1					
ANR	1114155	EqualityExpression	reg_ar == reg_map [ base ]		1114073	1		==			
ANR	1114156	Identifier	reg_ar		1114073	0					
ANR	1114157	ArrayIndexing	reg_map [ base ]		1114073	1					
ANR	1114158	Identifier	reg_map		1114073	0					
ANR	1114159	Identifier	base		1114073	1					
ANR	1114160	CompoundStatement		20:55:380:380	1114073	1					
ANR	1114161	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar )	1361:3:41563:41628	1114073	0	True				
ANR	1114162	CallExpression	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar )		1114073	0					
ANR	1114163	Callee	SLJIT_ASSERT		1114073	0					
ANR	1114164	Identifier	SLJIT_ASSERT		1114073	0					
ANR	1114165	ArgumentList	! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar		1114073	1					
ANR	1114166	Argument	! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar		1114073	0					
ANR	1114167	AndExpression	! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar		1114073	0		&&			
ANR	1114168	UnaryOperationExpression	! ( flags & LOAD_DATA )		1114073	0					
ANR	1114169	UnaryOperator	!		1114073	0					
ANR	1114170	BitAndExpression	flags & LOAD_DATA		1114073	1		&			
ANR	1114171	Identifier	flags		1114073	0					
ANR	1114172	Identifier	LOAD_DATA		1114073	1					
ANR	1114173	EqualityExpression	reg_map [ TMP_REG1 ] != reg_ar		1114073	1		!=			
ANR	1114174	ArrayIndexing	reg_map [ TMP_REG1 ]		1114073	0					
ANR	1114175	Identifier	reg_map		1114073	0					
ANR	1114176	Identifier	TMP_REG1		1114073	1					
ANR	1114177	Identifier	reg_ar		1114073	1					
ANR	1114178	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"	1362:3:41633:41676	1114073	1	True				
ANR	1114179	CallExpression	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"		1114073	0					
ANR	1114180	Callee	FAIL_IF		1114073	0					
ANR	1114181	Identifier	FAIL_IF		1114073	0					
ANR	1114182	ArgumentList	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1114073	1					
ANR	1114183	Argument	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1114073	0					
ANR	1114184	CallExpression	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1114073	0					
ANR	1114185	Callee	ADD		1114073	0					
ANR	1114186	Identifier	ADD		1114073	0					
ANR	1114187	ArgumentList	TMP_REG1_mapped		1114073	1					
ANR	1114188	Argument	TMP_REG1_mapped		1114073	0					
ANR	1114189	Identifier	TMP_REG1_mapped		1114073	0					
ANR	1114190	Argument	reg_ar		1114073	1					
ANR	1114191	Identifier	reg_ar		1114073	0					
ANR	1114192	Argument	ZERO		1114073	2					
ANR	1114193	Identifier	ZERO		1114073	0					
ANR	1114194	ExpressionStatement	reg_ar = TMP_REG1_mapped	1363:3:41681:41705	1114073	2	True				
ANR	1114195	AssignmentExpression	reg_ar = TMP_REG1_mapped		1114073	0		=			
ANR	1114196	Identifier	reg_ar		1114073	0					
ANR	1114197	Identifier	TMP_REG1_mapped		1114073	1					
ANR	1114198	IfStatement	if ( argw == compiler -> cache_argw )		1114073	2					
ANR	1114199	Condition	argw == compiler -> cache_argw	1367:6:41743:41770	1114073	0	True				
ANR	1114200	EqualityExpression	argw == compiler -> cache_argw		1114073	0		==			
ANR	1114201	Identifier	argw		1114073	0					
ANR	1114202	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1114203	Identifier	compiler		1114073	0					
ANR	1114204	Identifier	cache_argw		1114073	1					
ANR	1114205	CompoundStatement		27:36:595:595	1114073	1					
ANR	1114206	IfStatement	if ( ! ( flags & WRITE_BACK ) )		1114073	0					
ANR	1114207	Condition	! ( flags & WRITE_BACK )	1368:7:41782:41802	1114073	0	True				
ANR	1114208	UnaryOperationExpression	! ( flags & WRITE_BACK )		1114073	0					
ANR	1114209	UnaryOperator	!		1114073	0					
ANR	1114210	BitAndExpression	flags & WRITE_BACK		1114073	1		&			
ANR	1114211	Identifier	flags		1114073	0					
ANR	1114212	Identifier	WRITE_BACK		1114073	1					
ANR	1114213	CompoundStatement		28:30:627:627	1114073	1					
ANR	1114214	IfStatement	if ( arg == compiler -> cache_arg )		1114073	0					
ANR	1114215	Condition	arg == compiler -> cache_arg	1369:8:41815:41840	1114073	0	True				
ANR	1114216	EqualityExpression	arg == compiler -> cache_arg		1114073	0		==			
ANR	1114217	Identifier	arg		1114073	0					
ANR	1114218	PtrMemberAccess	compiler -> cache_arg		1114073	1					
ANR	1114219	Identifier	compiler		1114073	0					
ANR	1114220	Identifier	cache_arg		1114073	1					
ANR	1114221	CompoundStatement		29:36:665:665	1114073	1					
ANR	1114222	IfStatement	if ( flags & LOAD_DATA )		1114073	0					
ANR	1114223	Condition	flags & LOAD_DATA	1370:9:41854:41870	1114073	0	True				
ANR	1114224	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1114225	Identifier	flags		1114073	0					
ANR	1114226	Identifier	LOAD_DATA		1114073	1					
ANR	1114227	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1371:6:41879:41953	1114073	1	True				
ANR	1114228	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1114073	0					
ANR	1114229	Callee	PB2		1114073	0					
ANR	1114230	Identifier	PB2		1114073	0					
ANR	1114231	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114232	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114233	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114234	Identifier	data_transfer_insts		1114073	0					
ANR	1114235	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114236	Identifier	flags		1114073	0					
ANR	1114237	Identifier	MEM_MASK		1114073	1					
ANR	1114238	Argument	reg_ar		1114073	1					
ANR	1114239	Identifier	reg_ar		1114073	0					
ANR	1114240	Argument	TMP_REG3_mapped		1114073	2					
ANR	1114241	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114242	ElseStatement	else		1114073	0					
ANR	1114243	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1373:6:41971:42045	1114073	0	True				
ANR	1114244	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1114073	0					
ANR	1114245	Callee	PB2		1114073	0					
ANR	1114246	Identifier	PB2		1114073	0					
ANR	1114247	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114248	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114249	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114250	Identifier	data_transfer_insts		1114073	0					
ANR	1114251	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114252	Identifier	flags		1114073	0					
ANR	1114253	Identifier	MEM_MASK		1114073	1					
ANR	1114254	Argument	TMP_REG3_mapped		1114073	1					
ANR	1114255	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114256	Argument	reg_ar		1114073	2					
ANR	1114257	Identifier	reg_ar		1114073	0					
ANR	1114258	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg )		1114073	1					
ANR	1114259	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg	1376:8:42062:42119	1114073	0	True				
ANR	1114260	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1114073	0		==			
ANR	1114261	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1114073	0		|			
ANR	1114262	Identifier	SLJIT_MEM		1114073	0					
ANR	1114263	BitAndExpression	arg & OFFS_REG_MASK		1114073	1		&			
ANR	1114264	Identifier	arg		1114073	0					
ANR	1114265	Identifier	OFFS_REG_MASK		1114073	1					
ANR	1114266	PtrMemberAccess	compiler -> cache_arg		1114073	1					
ANR	1114267	Identifier	compiler		1114073	0					
ANR	1114268	Identifier	cache_arg		1114073	1					
ANR	1114269	CompoundStatement		36:68:944:944	1114073	1					
ANR	1114270	IfStatement	if ( arg == next_arg && argw == ( next_argw & 0x3 ) )		1114073	0					
ANR	1114271	Condition	arg == next_arg && argw == ( next_argw & 0x3 )	1377:9:42133:42176	1114073	0	True				
ANR	1114272	AndExpression	arg == next_arg && argw == ( next_argw & 0x3 )		1114073	0		&&			
ANR	1114273	EqualityExpression	arg == next_arg		1114073	0		==			
ANR	1114274	Identifier	arg		1114073	0					
ANR	1114275	Identifier	next_arg		1114073	1					
ANR	1114276	EqualityExpression	argw == ( next_argw & 0x3 )		1114073	1		==			
ANR	1114277	Identifier	argw		1114073	0					
ANR	1114278	BitAndExpression	next_argw & 0x3		1114073	1		&			
ANR	1114279	Identifier	next_argw		1114073	0					
ANR	1114280	PrimaryExpression	0x3		1114073	1					
ANR	1114281	CompoundStatement		37:55:1001:1001	1114073	1					
ANR	1114282	ExpressionStatement	compiler -> cache_arg = arg	1378:6:42187:42212	1114073	0	True				
ANR	1114283	AssignmentExpression	compiler -> cache_arg = arg		1114073	0		=			
ANR	1114284	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1114285	Identifier	compiler		1114073	0					
ANR	1114286	Identifier	cache_arg		1114073	1					
ANR	1114287	Identifier	arg		1114073	1					
ANR	1114288	ExpressionStatement	compiler -> cache_argw = argw	1379:6:42220:42247	1114073	1	True				
ANR	1114289	AssignmentExpression	compiler -> cache_argw = argw		1114073	0		=			
ANR	1114290	PtrMemberAccess	compiler -> cache_argw		1114073	0					
ANR	1114291	Identifier	compiler		1114073	0					
ANR	1114292	Identifier	cache_argw		1114073	1					
ANR	1114293	Identifier	argw		1114073	1					
ANR	1114294	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped ) )"	1380:6:42255:42316	1114073	2	True				
ANR	1114295	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped ) )"		1114073	0					
ANR	1114296	Callee	FAIL_IF		1114073	0					
ANR	1114297	Identifier	FAIL_IF		1114073	0					
ANR	1114298	ArgumentList	"ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped )"		1114073	1					
ANR	1114299	Argument	"ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114300	CallExpression	"ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114301	Callee	ADD		1114073	0					
ANR	1114302	Identifier	ADD		1114073	0					
ANR	1114303	ArgumentList	TMP_REG3_mapped		1114073	1					
ANR	1114304	Argument	TMP_REG3_mapped		1114073	0					
ANR	1114305	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114306	Argument	reg_map [ base ]		1114073	1					
ANR	1114307	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114308	Identifier	reg_map		1114073	0					
ANR	1114309	Identifier	base		1114073	1					
ANR	1114310	Argument	TMP_REG3_mapped		1114073	2					
ANR	1114311	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114312	IfStatement	if ( flags & LOAD_DATA )		1114073	3					
ANR	1114313	Condition	flags & LOAD_DATA	1381:10:42328:42344	1114073	0	True				
ANR	1114314	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1114315	Identifier	flags		1114073	0					
ANR	1114316	Identifier	LOAD_DATA		1114073	1					
ANR	1114317	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1382:7:42354:42428	1114073	1	True				
ANR	1114318	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1114073	0					
ANR	1114319	Callee	PB2		1114073	0					
ANR	1114320	Identifier	PB2		1114073	0					
ANR	1114321	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114322	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114323	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114324	Identifier	data_transfer_insts		1114073	0					
ANR	1114325	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114326	Identifier	flags		1114073	0					
ANR	1114327	Identifier	MEM_MASK		1114073	1					
ANR	1114328	Argument	reg_ar		1114073	1					
ANR	1114329	Identifier	reg_ar		1114073	0					
ANR	1114330	Argument	TMP_REG3_mapped		1114073	2					
ANR	1114331	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114332	ElseStatement	else		1114073	0					
ANR	1114333	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1384:7:42448:42522	1114073	0	True				
ANR	1114334	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1114073	0					
ANR	1114335	Callee	PB2		1114073	0					
ANR	1114336	Identifier	PB2		1114073	0					
ANR	1114337	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114338	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114339	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114340	Identifier	data_transfer_insts		1114073	0					
ANR	1114341	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114342	Identifier	flags		1114073	0					
ANR	1114343	Identifier	MEM_MASK		1114073	1					
ANR	1114344	Argument	TMP_REG3_mapped		1114073	1					
ANR	1114345	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114346	Argument	reg_ar		1114073	2					
ANR	1114347	Identifier	reg_ar		1114073	0					
ANR	1114348	ExpressionStatement	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped ) )"	1387:5:42537:42589	1114073	1	True				
ANR	1114349	CallExpression	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped ) )"		1114073	0					
ANR	1114350	Callee	FAIL_IF		1114073	0					
ANR	1114351	Identifier	FAIL_IF		1114073	0					
ANR	1114352	ArgumentList	"ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped )"		1114073	1					
ANR	1114353	Argument	"ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114354	CallExpression	"ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114355	Callee	ADD		1114073	0					
ANR	1114356	Identifier	ADD		1114073	0					
ANR	1114357	ArgumentList	tmp_ar		1114073	1					
ANR	1114358	Argument	tmp_ar		1114073	0					
ANR	1114359	Identifier	tmp_ar		1114073	0					
ANR	1114360	Argument	reg_map [ base ]		1114073	1					
ANR	1114361	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114362	Identifier	reg_map		1114073	0					
ANR	1114363	Identifier	base		1114073	1					
ANR	1114364	Argument	TMP_REG3_mapped		1114073	2					
ANR	1114365	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114366	IfStatement	if ( flags & LOAD_DATA )		1114073	2					
ANR	1114367	Condition	flags & LOAD_DATA	1388:9:42600:42616	1114073	0	True				
ANR	1114368	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1114369	Identifier	flags		1114073	0					
ANR	1114370	Identifier	LOAD_DATA		1114073	1					
ANR	1114371	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar ) ;"	1389:6:42625:42690	1114073	1	True				
ANR	1114372	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar )"		1114073	0					
ANR	1114373	Callee	PB2		1114073	0					
ANR	1114374	Identifier	PB2		1114073	0					
ANR	1114375	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114376	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114377	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114378	Identifier	data_transfer_insts		1114073	0					
ANR	1114379	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114380	Identifier	flags		1114073	0					
ANR	1114381	Identifier	MEM_MASK		1114073	1					
ANR	1114382	Argument	reg_ar		1114073	1					
ANR	1114383	Identifier	reg_ar		1114073	0					
ANR	1114384	Argument	tmp_ar		1114073	2					
ANR	1114385	Identifier	tmp_ar		1114073	0					
ANR	1114386	ElseStatement	else		1114073	0					
ANR	1114387	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar ) ;"	1391:6:42708:42773	1114073	0	True				
ANR	1114388	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar )"		1114073	0					
ANR	1114389	Callee	PB2		1114073	0					
ANR	1114390	Identifier	PB2		1114073	0					
ANR	1114391	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114392	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114393	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114394	Identifier	data_transfer_insts		1114073	0					
ANR	1114395	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114396	Identifier	flags		1114073	0					
ANR	1114397	Identifier	MEM_MASK		1114073	1					
ANR	1114398	Argument	tmp_ar		1114073	1					
ANR	1114399	Identifier	tmp_ar		1114073	0					
ANR	1114400	Argument	reg_ar		1114073	2					
ANR	1114401	Identifier	reg_ar		1114073	0					
ANR	1114402	ElseStatement	else		1114073	0					
ANR	1114403	CompoundStatement		53:10:1613:1613	1114073	0					
ANR	1114404	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg )		1114073	0					
ANR	1114405	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg	1394:8:42801:42858	1114073	0	True				
ANR	1114406	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1114073	0		==			
ANR	1114407	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1114073	0		|			
ANR	1114408	Identifier	SLJIT_MEM		1114073	0					
ANR	1114409	BitAndExpression	arg & OFFS_REG_MASK		1114073	1		&			
ANR	1114410	Identifier	arg		1114073	0					
ANR	1114411	Identifier	OFFS_REG_MASK		1114073	1					
ANR	1114412	PtrMemberAccess	compiler -> cache_arg		1114073	1					
ANR	1114413	Identifier	compiler		1114073	0					
ANR	1114414	Identifier	cache_arg		1114073	1					
ANR	1114415	CompoundStatement		54:68:1683:1683	1114073	1					
ANR	1114416	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"	1395:5:42868:42927	1114073	0	True				
ANR	1114417	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"		1114073	0					
ANR	1114418	Callee	FAIL_IF		1114073	0					
ANR	1114419	Identifier	FAIL_IF		1114073	0					
ANR	1114420	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	1					
ANR	1114421	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114422	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114423	Callee	ADD		1114073	0					
ANR	1114424	Identifier	ADD		1114073	0					
ANR	1114425	ArgumentList	reg_map [ base ]		1114073	1					
ANR	1114426	Argument	reg_map [ base ]		1114073	0					
ANR	1114427	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114428	Identifier	reg_map		1114073	0					
ANR	1114429	Identifier	base		1114073	1					
ANR	1114430	Argument	reg_map [ base ]		1114073	1					
ANR	1114431	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114432	Identifier	reg_map		1114073	0					
ANR	1114433	Identifier	base		1114073	1					
ANR	1114434	Argument	TMP_REG3_mapped		1114073	2					
ANR	1114435	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114436	IfStatement	if ( flags & LOAD_DATA )		1114073	1					
ANR	1114437	Condition	flags & LOAD_DATA	1396:9:42938:42954	1114073	0	True				
ANR	1114438	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1114439	Identifier	flags		1114073	0					
ANR	1114440	Identifier	LOAD_DATA		1114073	1					
ANR	1114441	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] ) ;"	1397:6:42963:43035	1114073	1	True				
ANR	1114442	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] )"		1114073	0					
ANR	1114443	Callee	PB2		1114073	0					
ANR	1114444	Identifier	PB2		1114073	0					
ANR	1114445	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114446	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114447	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114448	Identifier	data_transfer_insts		1114073	0					
ANR	1114449	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114450	Identifier	flags		1114073	0					
ANR	1114451	Identifier	MEM_MASK		1114073	1					
ANR	1114452	Argument	reg_ar		1114073	1					
ANR	1114453	Identifier	reg_ar		1114073	0					
ANR	1114454	Argument	reg_map [ base ]		1114073	2					
ANR	1114455	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114456	Identifier	reg_map		1114073	0					
ANR	1114457	Identifier	base		1114073	1					
ANR	1114458	ElseStatement	else		1114073	0					
ANR	1114459	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar ) ;"	1399:6:43053:43125	1114073	0	True				
ANR	1114460	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar )"		1114073	0					
ANR	1114461	Callee	PB2		1114073	0					
ANR	1114462	Identifier	PB2		1114073	0					
ANR	1114463	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114464	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114465	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114466	Identifier	data_transfer_insts		1114073	0					
ANR	1114467	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114468	Identifier	flags		1114073	0					
ANR	1114469	Identifier	MEM_MASK		1114073	1					
ANR	1114470	Argument	reg_map [ base ]		1114073	1					
ANR	1114471	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114472	Identifier	reg_map		1114073	0					
ANR	1114473	Identifier	base		1114073	1					
ANR	1114474	Argument	reg_ar		1114073	2					
ANR	1114475	Identifier	reg_ar		1114073	0					
ANR	1114476	IfStatement	if ( SLJIT_UNLIKELY ( argw ) )		1114073	3					
ANR	1114477	Condition	SLJIT_UNLIKELY ( argw )	1404:6:43149:43168	1114073	0	True				
ANR	1114478	CallExpression	SLJIT_UNLIKELY ( argw )		1114073	0					
ANR	1114479	Callee	SLJIT_UNLIKELY		1114073	0					
ANR	1114480	Identifier	SLJIT_UNLIKELY		1114073	0					
ANR	1114481	ArgumentList	argw		1114073	1					
ANR	1114482	Argument	argw		1114073	0					
ANR	1114483	Identifier	argw		1114073	0					
ANR	1114484	CompoundStatement		64:28:1993:1993	1114073	1					
ANR	1114485	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )	1405:3:43176:43231	1114073	0	True				
ANR	1114486	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )		1114073	0		=			
ANR	1114487	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1114488	Identifier	compiler		1114073	0					
ANR	1114489	Identifier	cache_arg		1114073	1					
ANR	1114490	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1114073	1		|			
ANR	1114491	Identifier	SLJIT_MEM		1114073	0					
ANR	1114492	BitAndExpression	arg & OFFS_REG_MASK		1114073	1		&			
ANR	1114493	Identifier	arg		1114073	0					
ANR	1114494	Identifier	OFFS_REG_MASK		1114073	1					
ANR	1114495	ExpressionStatement	compiler -> cache_argw = argw	1406:3:43236:43263	1114073	1	True				
ANR	1114496	AssignmentExpression	compiler -> cache_argw = argw		1114073	0		=			
ANR	1114497	PtrMemberAccess	compiler -> cache_argw		1114073	0					
ANR	1114498	Identifier	compiler		1114073	0					
ANR	1114499	Identifier	cache_argw		1114073	1					
ANR	1114500	Identifier	argw		1114073	1					
ANR	1114501	ExpressionStatement	"FAIL_IF ( SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw ) )"	1407:3:43268:43328	1114073	2	True				
ANR	1114502	CallExpression	"FAIL_IF ( SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw ) )"		1114073	0					
ANR	1114503	Callee	FAIL_IF		1114073	0					
ANR	1114504	Identifier	FAIL_IF		1114073	0					
ANR	1114505	ArgumentList	"SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw )"		1114073	1					
ANR	1114506	Argument	"SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw )"		1114073	0					
ANR	1114507	CallExpression	"SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw )"		1114073	0					
ANR	1114508	Callee	SHLI		1114073	0					
ANR	1114509	Identifier	SHLI		1114073	0					
ANR	1114510	ArgumentList	TMP_REG3_mapped		1114073	1					
ANR	1114511	Argument	TMP_REG3_mapped		1114073	0					
ANR	1114512	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114513	Argument	reg_map [ OFFS_REG ( arg ) ]		1114073	1					
ANR	1114514	ArrayIndexing	reg_map [ OFFS_REG ( arg ) ]		1114073	0					
ANR	1114515	Identifier	reg_map		1114073	0					
ANR	1114516	CallExpression	OFFS_REG ( arg )		1114073	1					
ANR	1114517	Callee	OFFS_REG		1114073	0					
ANR	1114518	Identifier	OFFS_REG		1114073	0					
ANR	1114519	ArgumentList	arg		1114073	1					
ANR	1114520	Argument	arg		1114073	0					
ANR	1114521	Identifier	arg		1114073	0					
ANR	1114522	Argument	argw		1114073	2					
ANR	1114523	Identifier	argw		1114073	0					
ANR	1114524	IfStatement	if ( ! ( flags & WRITE_BACK ) )		1114073	4					
ANR	1114525	Condition	! ( flags & WRITE_BACK )	1410:6:43341:43361	1114073	0	True				
ANR	1114526	UnaryOperationExpression	! ( flags & WRITE_BACK )		1114073	0					
ANR	1114527	UnaryOperator	!		1114073	0					
ANR	1114528	BitAndExpression	flags & WRITE_BACK		1114073	1		&			
ANR	1114529	Identifier	flags		1114073	0					
ANR	1114530	Identifier	WRITE_BACK		1114073	1					
ANR	1114531	CompoundStatement		70:29:2186:2186	1114073	1					
ANR	1114532	IfStatement	if ( arg == next_arg && argw == ( next_argw & 0x3 ) )		1114073	0					
ANR	1114533	Condition	arg == next_arg && argw == ( next_argw & 0x3 )	1411:7:43373:43416	1114073	0	True				
ANR	1114534	AndExpression	arg == next_arg && argw == ( next_argw & 0x3 )		1114073	0		&&			
ANR	1114535	EqualityExpression	arg == next_arg		1114073	0		==			
ANR	1114536	Identifier	arg		1114073	0					
ANR	1114537	Identifier	next_arg		1114073	1					
ANR	1114538	EqualityExpression	argw == ( next_argw & 0x3 )		1114073	1		==			
ANR	1114539	Identifier	argw		1114073	0					
ANR	1114540	BitAndExpression	next_argw & 0x3		1114073	1		&			
ANR	1114541	Identifier	next_argw		1114073	0					
ANR	1114542	PrimaryExpression	0x3		1114073	1					
ANR	1114543	CompoundStatement		71:53:2241:2241	1114073	1					
ANR	1114544	ExpressionStatement	compiler -> cache_arg = arg	1412:4:43425:43450	1114073	0	True				
ANR	1114545	AssignmentExpression	compiler -> cache_arg = arg		1114073	0		=			
ANR	1114546	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1114547	Identifier	compiler		1114073	0					
ANR	1114548	Identifier	cache_arg		1114073	1					
ANR	1114549	Identifier	arg		1114073	1					
ANR	1114550	ExpressionStatement	compiler -> cache_argw = argw	1413:4:43456:43483	1114073	1	True				
ANR	1114551	AssignmentExpression	compiler -> cache_argw = argw		1114073	0		=			
ANR	1114552	PtrMemberAccess	compiler -> cache_argw		1114073	0					
ANR	1114553	Identifier	compiler		1114073	0					
ANR	1114554	Identifier	cache_argw		1114073	1					
ANR	1114555	Identifier	argw		1114073	1					
ANR	1114556	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"	1414:4:43489:43576	1114073	2	True				
ANR	1114557	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"		1114073	0					
ANR	1114558	Callee	FAIL_IF		1114073	0					
ANR	1114559	Identifier	FAIL_IF		1114073	0					
ANR	1114560	ArgumentList	"ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	1					
ANR	1114561	Argument	"ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	0					
ANR	1114562	CallExpression	"ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	0					
ANR	1114563	Callee	ADD		1114073	0					
ANR	1114564	Identifier	ADD		1114073	0					
ANR	1114565	ArgumentList	TMP_REG3_mapped		1114073	1					
ANR	1114566	Argument	TMP_REG3_mapped		1114073	0					
ANR	1114567	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114568	Argument	reg_map [ base ]		1114073	1					
ANR	1114569	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114570	Identifier	reg_map		1114073	0					
ANR	1114571	Identifier	base		1114073	1					
ANR	1114572	Argument	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1114073	2					
ANR	1114573	ArrayIndexing	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1114073	0					
ANR	1114574	Identifier	reg_map		1114073	0					
ANR	1114575	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1114073	1					
ANR	1114576	Condition	! argw		1114073	0					
ANR	1114577	UnaryOperationExpression	! argw		1114073	0					
ANR	1114578	UnaryOperator	!		1114073	0					
ANR	1114579	Identifier	argw		1114073	1					
ANR	1114580	CallExpression	OFFS_REG ( arg )		1114073	1					
ANR	1114581	Callee	OFFS_REG		1114073	0					
ANR	1114582	Identifier	OFFS_REG		1114073	0					
ANR	1114583	ArgumentList	arg		1114073	1					
ANR	1114584	Argument	arg		1114073	0					
ANR	1114585	Identifier	arg		1114073	0					
ANR	1114586	Identifier	TMP_REG3		1114073	2					
ANR	1114587	ExpressionStatement	tmp_ar = TMP_REG3_mapped	1415:4:43582:43606	1114073	3	True				
ANR	1114588	AssignmentExpression	tmp_ar = TMP_REG3_mapped		1114073	0		=			
ANR	1114589	Identifier	tmp_ar		1114073	0					
ANR	1114590	Identifier	TMP_REG3_mapped		1114073	1					
ANR	1114591	ElseStatement	else		1114073	0					
ANR	1114592	ExpressionStatement	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"	1417:4:43622:43700	1114073	0	True				
ANR	1114593	CallExpression	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"		1114073	0					
ANR	1114594	Callee	FAIL_IF		1114073	0					
ANR	1114595	Identifier	FAIL_IF		1114073	0					
ANR	1114596	ArgumentList	"ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	1					
ANR	1114597	Argument	"ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	0					
ANR	1114598	CallExpression	"ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	0					
ANR	1114599	Callee	ADD		1114073	0					
ANR	1114600	Identifier	ADD		1114073	0					
ANR	1114601	ArgumentList	tmp_ar		1114073	1					
ANR	1114602	Argument	tmp_ar		1114073	0					
ANR	1114603	Identifier	tmp_ar		1114073	0					
ANR	1114604	Argument	reg_map [ base ]		1114073	1					
ANR	1114605	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114606	Identifier	reg_map		1114073	0					
ANR	1114607	Identifier	base		1114073	1					
ANR	1114608	Argument	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1114073	2					
ANR	1114609	ArrayIndexing	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1114073	0					
ANR	1114610	Identifier	reg_map		1114073	0					
ANR	1114611	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1114073	1					
ANR	1114612	Condition	! argw		1114073	0					
ANR	1114613	UnaryOperationExpression	! argw		1114073	0					
ANR	1114614	UnaryOperator	!		1114073	0					
ANR	1114615	Identifier	argw		1114073	1					
ANR	1114616	CallExpression	OFFS_REG ( arg )		1114073	1					
ANR	1114617	Callee	OFFS_REG		1114073	0					
ANR	1114618	Identifier	OFFS_REG		1114073	0					
ANR	1114619	ArgumentList	arg		1114073	1					
ANR	1114620	Argument	arg		1114073	0					
ANR	1114621	Identifier	arg		1114073	0					
ANR	1114622	Identifier	TMP_REG3		1114073	2					
ANR	1114623	IfStatement	if ( flags & LOAD_DATA )		1114073	1					
ANR	1114624	Condition	flags & LOAD_DATA	1419:7:43710:43726	1114073	0	True				
ANR	1114625	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1114626	Identifier	flags		1114073	0					
ANR	1114627	Identifier	LOAD_DATA		1114073	1					
ANR	1114628	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar ) ;"	1420:4:43733:43798	1114073	1	True				
ANR	1114629	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar )"		1114073	0					
ANR	1114630	Callee	PB2		1114073	0					
ANR	1114631	Identifier	PB2		1114073	0					
ANR	1114632	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114633	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114634	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114635	Identifier	data_transfer_insts		1114073	0					
ANR	1114636	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114637	Identifier	flags		1114073	0					
ANR	1114638	Identifier	MEM_MASK		1114073	1					
ANR	1114639	Argument	reg_ar		1114073	1					
ANR	1114640	Identifier	reg_ar		1114073	0					
ANR	1114641	Argument	tmp_ar		1114073	2					
ANR	1114642	Identifier	tmp_ar		1114073	0					
ANR	1114643	ElseStatement	else		1114073	0					
ANR	1114644	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar ) ;"	1422:4:43812:43877	1114073	0	True				
ANR	1114645	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar )"		1114073	0					
ANR	1114646	Callee	PB2		1114073	0					
ANR	1114647	Identifier	PB2		1114073	0					
ANR	1114648	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114649	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114650	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114651	Identifier	data_transfer_insts		1114073	0					
ANR	1114652	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114653	Identifier	flags		1114073	0					
ANR	1114654	Identifier	MEM_MASK		1114073	1					
ANR	1114655	Argument	tmp_ar		1114073	1					
ANR	1114656	Identifier	tmp_ar		1114073	0					
ANR	1114657	Argument	reg_ar		1114073	2					
ANR	1114658	Identifier	reg_ar		1114073	0					
ANR	1114659	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"	1425:2:43886:43971	1114073	5	True				
ANR	1114660	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"		1114073	0					
ANR	1114661	Callee	FAIL_IF		1114073	0					
ANR	1114662	Identifier	FAIL_IF		1114073	0					
ANR	1114663	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	1					
ANR	1114664	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	0					
ANR	1114665	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1114073	0					
ANR	1114666	Callee	ADD		1114073	0					
ANR	1114667	Identifier	ADD		1114073	0					
ANR	1114668	ArgumentList	reg_map [ base ]		1114073	1					
ANR	1114669	Argument	reg_map [ base ]		1114073	0					
ANR	1114670	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114671	Identifier	reg_map		1114073	0					
ANR	1114672	Identifier	base		1114073	1					
ANR	1114673	Argument	reg_map [ base ]		1114073	1					
ANR	1114674	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114675	Identifier	reg_map		1114073	0					
ANR	1114676	Identifier	base		1114073	1					
ANR	1114677	Argument	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1114073	2					
ANR	1114678	ArrayIndexing	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1114073	0					
ANR	1114679	Identifier	reg_map		1114073	0					
ANR	1114680	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1114073	1					
ANR	1114681	Condition	! argw		1114073	0					
ANR	1114682	UnaryOperationExpression	! argw		1114073	0					
ANR	1114683	UnaryOperator	!		1114073	0					
ANR	1114684	Identifier	argw		1114073	1					
ANR	1114685	CallExpression	OFFS_REG ( arg )		1114073	1					
ANR	1114686	Callee	OFFS_REG		1114073	0					
ANR	1114687	Identifier	OFFS_REG		1114073	0					
ANR	1114688	ArgumentList	arg		1114073	1					
ANR	1114689	Argument	arg		1114073	0					
ANR	1114690	Identifier	arg		1114073	0					
ANR	1114691	Identifier	TMP_REG3		1114073	2					
ANR	1114692	IfStatement	if ( flags & LOAD_DATA )		1114073	6					
ANR	1114693	Condition	flags & LOAD_DATA	1427:6:43980:43996	1114073	0	True				
ANR	1114694	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1114695	Identifier	flags		1114073	0					
ANR	1114696	Identifier	LOAD_DATA		1114073	1					
ANR	1114697	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] ) ;"	1428:3:44002:44074	1114073	1	True				
ANR	1114698	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] )"		1114073	0					
ANR	1114699	Callee	PB2		1114073	0					
ANR	1114700	Identifier	PB2		1114073	0					
ANR	1114701	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114702	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114703	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114704	Identifier	data_transfer_insts		1114073	0					
ANR	1114705	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114706	Identifier	flags		1114073	0					
ANR	1114707	Identifier	MEM_MASK		1114073	1					
ANR	1114708	Argument	reg_ar		1114073	1					
ANR	1114709	Identifier	reg_ar		1114073	0					
ANR	1114710	Argument	reg_map [ base ]		1114073	2					
ANR	1114711	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114712	Identifier	reg_map		1114073	0					
ANR	1114713	Identifier	base		1114073	1					
ANR	1114714	ElseStatement	else		1114073	0					
ANR	1114715	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar ) ;"	1430:3:44086:44158	1114073	0	True				
ANR	1114716	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar )"		1114073	0					
ANR	1114717	Callee	PB2		1114073	0					
ANR	1114718	Identifier	PB2		1114073	0					
ANR	1114719	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114720	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114721	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114722	Identifier	data_transfer_insts		1114073	0					
ANR	1114723	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114724	Identifier	flags		1114073	0					
ANR	1114725	Identifier	MEM_MASK		1114073	1					
ANR	1114726	Argument	reg_map [ base ]		1114073	1					
ANR	1114727	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114728	Identifier	reg_map		1114073	0					
ANR	1114729	Identifier	base		1114073	1					
ANR	1114730	Argument	reg_ar		1114073	2					
ANR	1114731	Identifier	reg_ar		1114073	0					
ANR	1114732	IfStatement	if ( SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base )		1114073	6					
ANR	1114733	Condition	SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base	1433:5:44169:44210	1114073	0	True				
ANR	1114734	AndExpression	SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base		1114073	0		&&			
ANR	1114735	CallExpression	SLJIT_UNLIKELY ( flags & WRITE_BACK )		1114073	0					
ANR	1114736	Callee	SLJIT_UNLIKELY		1114073	0					
ANR	1114737	Identifier	SLJIT_UNLIKELY		1114073	0					
ANR	1114738	ArgumentList	flags & WRITE_BACK		1114073	1					
ANR	1114739	Argument	flags & WRITE_BACK		1114073	0					
ANR	1114740	BitAndExpression	flags & WRITE_BACK		1114073	0		&			
ANR	1114741	Identifier	flags		1114073	0					
ANR	1114742	Identifier	WRITE_BACK		1114073	1					
ANR	1114743	Identifier	base		1114073	1					
ANR	1114744	CompoundStatement		93:49:3035:3035	1114073	1					
ANR	1114745	IfStatement	if ( reg_ar == reg_map [ base ] )		1114073	0					
ANR	1114746	Condition	reg_ar == reg_map [ base ]	1435:6:44276:44298	1114073	0	True				
ANR	1114747	EqualityExpression	reg_ar == reg_map [ base ]		1114073	0		==			
ANR	1114748	Identifier	reg_ar		1114073	0					
ANR	1114749	ArrayIndexing	reg_map [ base ]		1114073	1					
ANR	1114750	Identifier	reg_map		1114073	0					
ANR	1114751	Identifier	base		1114073	1					
ANR	1114752	CompoundStatement		95:31:3123:3123	1114073	1					
ANR	1114753	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar )	1436:3:44306:44369	1114073	0	True				
ANR	1114754	CallExpression	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar )		1114073	0					
ANR	1114755	Callee	SLJIT_ASSERT		1114073	0					
ANR	1114756	Identifier	SLJIT_ASSERT		1114073	0					
ANR	1114757	ArgumentList	! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar		1114073	1					
ANR	1114758	Argument	! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar		1114073	0					
ANR	1114759	AndExpression	! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar		1114073	0		&&			
ANR	1114760	UnaryOperationExpression	! ( flags & LOAD_DATA )		1114073	0					
ANR	1114761	UnaryOperator	!		1114073	0					
ANR	1114762	BitAndExpression	flags & LOAD_DATA		1114073	1		&			
ANR	1114763	Identifier	flags		1114073	0					
ANR	1114764	Identifier	LOAD_DATA		1114073	1					
ANR	1114765	EqualityExpression	TMP_REG1_mapped != reg_ar		1114073	1		!=			
ANR	1114766	Identifier	TMP_REG1_mapped		1114073	0					
ANR	1114767	Identifier	reg_ar		1114073	1					
ANR	1114768	IfStatement	if ( argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN )		1114073	1					
ANR	1114769	Condition	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN	1437:7:44378:44425	1114073	0	True				
ANR	1114770	AndExpression	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1114073	0		&&			
ANR	1114771	RelationalExpression	argw <= SIMM_16BIT_MAX		1114073	0		<=			
ANR	1114772	Identifier	argw		1114073	0					
ANR	1114773	Identifier	SIMM_16BIT_MAX		1114073	1					
ANR	1114774	RelationalExpression	argw >= SIMM_16BIT_MIN		1114073	1		>=			
ANR	1114775	Identifier	argw		1114073	0					
ANR	1114776	Identifier	SIMM_16BIT_MIN		1114073	1					
ANR	1114777	CompoundStatement		97:57:3250:3250	1114073	1					
ANR	1114778	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw ) )"	1438:4:44434:44486	1114073	0	True				
ANR	1114779	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw ) )"		1114073	0					
ANR	1114780	Callee	FAIL_IF		1114073	0					
ANR	1114781	Identifier	FAIL_IF		1114073	0					
ANR	1114782	ArgumentList	"ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw )"		1114073	1					
ANR	1114783	Argument	"ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw )"		1114073	0					
ANR	1114784	CallExpression	"ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw )"		1114073	0					
ANR	1114785	Callee	ADDLI		1114073	0					
ANR	1114786	Identifier	ADDLI		1114073	0					
ANR	1114787	ArgumentList	ADDR_TMP_mapped		1114073	1					
ANR	1114788	Argument	ADDR_TMP_mapped		1114073	0					
ANR	1114789	Identifier	ADDR_TMP_mapped		1114073	0					
ANR	1114790	Argument	reg_map [ base ]		1114073	1					
ANR	1114791	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114792	Identifier	reg_map		1114073	0					
ANR	1114793	Identifier	base		1114073	1					
ANR	1114794	Argument	argw		1114073	2					
ANR	1114795	Identifier	argw		1114073	0					
ANR	1114796	IfStatement	if ( flags & LOAD_DATA )		1114073	1					
ANR	1114797	Condition	flags & LOAD_DATA	1439:8:44496:44512	1114073	0	True				
ANR	1114798	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1114799	Identifier	flags		1114073	0					
ANR	1114800	Identifier	LOAD_DATA		1114073	1					
ANR	1114801	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"	1440:5:44520:44596	1114073	1	True				
ANR	1114802	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"		1114073	0					
ANR	1114803	Callee	FAIL_IF		1114073	0					
ANR	1114804	Identifier	FAIL_IF		1114073	0					
ANR	1114805	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1114073	1					
ANR	1114806	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1114073	0					
ANR	1114807	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1114073	0					
ANR	1114808	Callee	PB2		1114073	0					
ANR	1114809	Identifier	PB2		1114073	0					
ANR	1114810	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114811	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114812	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114813	Identifier	data_transfer_insts		1114073	0					
ANR	1114814	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114815	Identifier	flags		1114073	0					
ANR	1114816	Identifier	MEM_MASK		1114073	1					
ANR	1114817	Argument	reg_ar		1114073	1					
ANR	1114818	Identifier	reg_ar		1114073	0					
ANR	1114819	Argument	ADDR_TMP_mapped		1114073	2					
ANR	1114820	Identifier	ADDR_TMP_mapped		1114073	0					
ANR	1114821	ElseStatement	else		1114073	0					
ANR	1114822	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"	1442:5:44612:44688	1114073	0	True				
ANR	1114823	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"		1114073	0					
ANR	1114824	Callee	FAIL_IF		1114073	0					
ANR	1114825	Identifier	FAIL_IF		1114073	0					
ANR	1114826	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1114073	1					
ANR	1114827	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1114073	0					
ANR	1114828	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1114073	0					
ANR	1114829	Callee	PB2		1114073	0					
ANR	1114830	Identifier	PB2		1114073	0					
ANR	1114831	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1114832	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114833	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1114834	Identifier	data_transfer_insts		1114073	0					
ANR	1114835	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1114836	Identifier	flags		1114073	0					
ANR	1114837	Identifier	MEM_MASK		1114073	1					
ANR	1114838	Argument	ADDR_TMP_mapped		1114073	1					
ANR	1114839	Identifier	ADDR_TMP_mapped		1114073	0					
ANR	1114840	Argument	reg_ar		1114073	2					
ANR	1114841	Identifier	reg_ar		1114073	0					
ANR	1114842	IfStatement	if ( argw )		1114073	2					
ANR	1114843	Condition	argw	1444:8:44699:44702	1114073	0	True				
ANR	1114844	Identifier	argw		1114073	0					
ANR	1114845	ReturnStatement	"return ADDLI ( reg_map [ base ] , reg_map [ base ] , argw ) ;"	1445:5:44710:44758	1114073	1	True				
ANR	1114846	CallExpression	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1114073	0					
ANR	1114847	Callee	ADDLI		1114073	0					
ANR	1114848	Identifier	ADDLI		1114073	0					
ANR	1114849	ArgumentList	reg_map [ base ]		1114073	1					
ANR	1114850	Argument	reg_map [ base ]		1114073	0					
ANR	1114851	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114852	Identifier	reg_map		1114073	0					
ANR	1114853	Identifier	base		1114073	1					
ANR	1114854	Argument	reg_map [ base ]		1114073	1					
ANR	1114855	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114856	Identifier	reg_map		1114073	0					
ANR	1114857	Identifier	base		1114073	1					
ANR	1114858	Argument	argw		1114073	2					
ANR	1114859	Identifier	argw		1114073	0					
ANR	1114860	ReturnStatement	return SLJIT_SUCCESS ;	1447:4:44765:44785	1114073	3	True				
ANR	1114861	Identifier	SLJIT_SUCCESS		1114073	0					
ANR	1114862	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"	1450:3:44796:44839	1114073	2	True				
ANR	1114863	CallExpression	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"		1114073	0					
ANR	1114864	Callee	FAIL_IF		1114073	0					
ANR	1114865	Identifier	FAIL_IF		1114073	0					
ANR	1114866	ArgumentList	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1114073	1					
ANR	1114867	Argument	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1114073	0					
ANR	1114868	CallExpression	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1114073	0					
ANR	1114869	Callee	ADD		1114073	0					
ANR	1114870	Identifier	ADD		1114073	0					
ANR	1114871	ArgumentList	TMP_REG1_mapped		1114073	1					
ANR	1114872	Argument	TMP_REG1_mapped		1114073	0					
ANR	1114873	Identifier	TMP_REG1_mapped		1114073	0					
ANR	1114874	Argument	reg_ar		1114073	1					
ANR	1114875	Identifier	reg_ar		1114073	0					
ANR	1114876	Argument	ZERO		1114073	2					
ANR	1114877	Identifier	ZERO		1114073	0					
ANR	1114878	ExpressionStatement	reg_ar = TMP_REG1_mapped	1451:3:44844:44868	1114073	3	True				
ANR	1114879	AssignmentExpression	reg_ar = TMP_REG1_mapped		1114073	0		=			
ANR	1114880	Identifier	reg_ar		1114073	0					
ANR	1114881	Identifier	TMP_REG1_mapped		1114073	1					
ANR	1114882	IfStatement	if ( argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN )		1114073	1					
ANR	1114883	Condition	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN	1454:6:44881:44928	1114073	0	True				
ANR	1114884	AndExpression	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1114073	0		&&			
ANR	1114885	RelationalExpression	argw <= SIMM_16BIT_MAX		1114073	0		<=			
ANR	1114886	Identifier	argw		1114073	0					
ANR	1114887	Identifier	SIMM_16BIT_MAX		1114073	1					
ANR	1114888	RelationalExpression	argw >= SIMM_16BIT_MIN		1114073	1		>=			
ANR	1114889	Identifier	argw		1114073	0					
ANR	1114890	Identifier	SIMM_16BIT_MIN		1114073	1					
ANR	1114891	CompoundStatement		114:56:3753:3753	1114073	1					
ANR	1114892	IfStatement	if ( argw )		1114073	0					
ANR	1114893	Condition	argw	1455:7:44940:44943	1114073	0	True				
ANR	1114894	Identifier	argw		1114073	0					
ANR	1114895	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ base ] , reg_map [ base ] , argw ) )"	1456:4:44950:45000	1114073	1	True				
ANR	1114896	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ base ] , reg_map [ base ] , argw ) )"		1114073	0					
ANR	1114897	Callee	FAIL_IF		1114073	0					
ANR	1114898	Identifier	FAIL_IF		1114073	0					
ANR	1114899	ArgumentList	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1114073	1					
ANR	1114900	Argument	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1114073	0					
ANR	1114901	CallExpression	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1114073	0					
ANR	1114902	Callee	ADDLI		1114073	0					
ANR	1114903	Identifier	ADDLI		1114073	0					
ANR	1114904	ArgumentList	reg_map [ base ]		1114073	1					
ANR	1114905	Argument	reg_map [ base ]		1114073	0					
ANR	1114906	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114907	Identifier	reg_map		1114073	0					
ANR	1114908	Identifier	base		1114073	1					
ANR	1114909	Argument	reg_map [ base ]		1114073	1					
ANR	1114910	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114911	Identifier	reg_map		1114073	0					
ANR	1114912	Identifier	base		1114073	1					
ANR	1114913	Argument	argw		1114073	2					
ANR	1114914	Identifier	argw		1114073	0					
ANR	1114915	ElseStatement	else		1114073	0					
ANR	1114916	CompoundStatement		117:9:3833:3833	1114073	0					
ANR	1114917	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN )		1114073	0					
ANR	1114918	Condition	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN	1458:7:45020:45159	1114073	0	True				
ANR	1114919	AndExpression	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	0		&&			
ANR	1114920	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1114073	0		==			
ANR	1114921	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1114922	Identifier	compiler		1114073	0					
ANR	1114923	Identifier	cache_arg		1114073	1					
ANR	1114924	Identifier	SLJIT_MEM		1114073	1					
ANR	1114925	AndExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	1		&&			
ANR	1114926	RelationalExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX		1114073	0		<=			
ANR	1114927	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1114928	Identifier	argw		1114073	0					
ANR	1114929	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1114930	Identifier	compiler		1114073	0					
ANR	1114931	Identifier	cache_argw		1114073	1					
ANR	1114932	Identifier	SIMM_16BIT_MAX		1114073	1					
ANR	1114933	RelationalExpression	argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	1		>=			
ANR	1114934	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1114935	Identifier	argw		1114073	0					
ANR	1114936	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1114937	Identifier	compiler		1114073	0					
ANR	1114938	Identifier	cache_argw		1114073	1					
ANR	1114939	Identifier	SIMM_16BIT_MIN		1114073	1					
ANR	1114940	CompoundStatement		120:55:3984:3984	1114073	1					
ANR	1114941	IfStatement	if ( argw != compiler -> cache_argw )		1114073	0					
ANR	1114942	Condition	argw != compiler -> cache_argw	1461:8:45172:45199	1114073	0	True				
ANR	1114943	EqualityExpression	argw != compiler -> cache_argw		1114073	0		!=			
ANR	1114944	Identifier	argw		1114073	0					
ANR	1114945	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1114946	Identifier	compiler		1114073	0					
ANR	1114947	Identifier	cache_argw		1114073	1					
ANR	1114948	CompoundStatement		121:38:4024:4024	1114073	1					
ANR	1114949	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"	1462:5:45209:45284	1114073	0	True				
ANR	1114950	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"		1114073	0					
ANR	1114951	Callee	FAIL_IF		1114073	0					
ANR	1114952	Identifier	FAIL_IF		1114073	0					
ANR	1114953	ArgumentList	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	1					
ANR	1114954	Argument	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	0					
ANR	1114955	CallExpression	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	0					
ANR	1114956	Callee	ADD		1114073	0					
ANR	1114957	Identifier	ADD		1114073	0					
ANR	1114958	ArgumentList	TMP_REG3_mapped		1114073	1					
ANR	1114959	Argument	TMP_REG3_mapped		1114073	0					
ANR	1114960	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114961	Argument	TMP_REG3_mapped		1114073	1					
ANR	1114962	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114963	Argument	argw - compiler -> cache_argw		1114073	2					
ANR	1114964	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1114965	Identifier	argw		1114073	0					
ANR	1114966	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1114967	Identifier	compiler		1114073	0					
ANR	1114968	Identifier	cache_argw		1114073	1					
ANR	1114969	ExpressionStatement	compiler -> cache_argw = argw	1463:5:45291:45318	1114073	1	True				
ANR	1114970	AssignmentExpression	compiler -> cache_argw = argw		1114073	0		=			
ANR	1114971	PtrMemberAccess	compiler -> cache_argw		1114073	0					
ANR	1114972	Identifier	compiler		1114073	0					
ANR	1114973	Identifier	cache_argw		1114073	1					
ANR	1114974	Identifier	argw		1114073	1					
ANR	1114975	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"	1466:4:45331:45390	1114073	1	True				
ANR	1114976	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"		1114073	0					
ANR	1114977	Callee	FAIL_IF		1114073	0					
ANR	1114978	Identifier	FAIL_IF		1114073	0					
ANR	1114979	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	1					
ANR	1114980	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114981	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1114982	Callee	ADD		1114073	0					
ANR	1114983	Identifier	ADD		1114073	0					
ANR	1114984	ArgumentList	reg_map [ base ]		1114073	1					
ANR	1114985	Argument	reg_map [ base ]		1114073	0					
ANR	1114986	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114987	Identifier	reg_map		1114073	0					
ANR	1114988	Identifier	base		1114073	1					
ANR	1114989	Argument	reg_map [ base ]		1114073	1					
ANR	1114990	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1114991	Identifier	reg_map		1114073	0					
ANR	1114992	Identifier	base		1114073	1					
ANR	1114993	Argument	TMP_REG3_mapped		1114073	2					
ANR	1114994	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1114995	ElseStatement	else		1114073	0					
ANR	1114996	CompoundStatement		127:10:4224:4224	1114073	0					
ANR	1114997	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1468:4:45408:45439	1114073	0	True				
ANR	1114998	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1114073	0		=			
ANR	1114999	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1115000	Identifier	compiler		1114073	0					
ANR	1115001	Identifier	cache_arg		1114073	1					
ANR	1115002	Identifier	SLJIT_MEM		1114073	1					
ANR	1115003	ExpressionStatement	compiler -> cache_argw = argw	1469:4:45445:45472	1114073	1	True				
ANR	1115004	AssignmentExpression	compiler -> cache_argw = argw		1114073	0		=			
ANR	1115005	PtrMemberAccess	compiler -> cache_argw		1114073	0					
ANR	1115006	Identifier	compiler		1114073	0					
ANR	1115007	Identifier	cache_argw		1114073	1					
ANR	1115008	Identifier	argw		1114073	1					
ANR	1115009	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"	1470:4:45478:45534	1114073	2	True				
ANR	1115010	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"		1114073	0					
ANR	1115011	Callee	FAIL_IF		1114073	0					
ANR	1115012	Identifier	FAIL_IF		1114073	0					
ANR	1115013	ArgumentList	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1114073	1					
ANR	1115014	Argument	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1114073	0					
ANR	1115015	CallExpression	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1114073	0					
ANR	1115016	Callee	load_immediate		1114073	0					
ANR	1115017	Identifier	load_immediate		1114073	0					
ANR	1115018	ArgumentList	compiler		1114073	1					
ANR	1115019	Argument	compiler		1114073	0					
ANR	1115020	Identifier	compiler		1114073	0					
ANR	1115021	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115022	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115023	Argument	argw		1114073	2					
ANR	1115024	Identifier	argw		1114073	0					
ANR	1115025	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"	1471:4:45540:45599	1114073	3	True				
ANR	1115026	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"		1114073	0					
ANR	1115027	Callee	FAIL_IF		1114073	0					
ANR	1115028	Identifier	FAIL_IF		1114073	0					
ANR	1115029	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	1					
ANR	1115030	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1115031	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1114073	0					
ANR	1115032	Callee	ADD		1114073	0					
ANR	1115033	Identifier	ADD		1114073	0					
ANR	1115034	ArgumentList	reg_map [ base ]		1114073	1					
ANR	1115035	Argument	reg_map [ base ]		1114073	0					
ANR	1115036	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1115037	Identifier	reg_map		1114073	0					
ANR	1115038	Identifier	base		1114073	1					
ANR	1115039	Argument	reg_map [ base ]		1114073	1					
ANR	1115040	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1115041	Identifier	reg_map		1114073	0					
ANR	1115042	Identifier	base		1114073	1					
ANR	1115043	Argument	TMP_REG3_mapped		1114073	2					
ANR	1115044	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115045	IfStatement	if ( flags & LOAD_DATA )		1114073	2					
ANR	1115046	Condition	flags & LOAD_DATA	1475:6:45617:45633	1114073	0	True				
ANR	1115047	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1115048	Identifier	flags		1114073	0					
ANR	1115049	Identifier	LOAD_DATA		1114073	1					
ANR	1115050	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] ) ;"	1476:3:45639:45711	1114073	1	True				
ANR	1115051	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] )"		1114073	0					
ANR	1115052	Callee	PB2		1114073	0					
ANR	1115053	Identifier	PB2		1114073	0					
ANR	1115054	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115055	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115056	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115057	Identifier	data_transfer_insts		1114073	0					
ANR	1115058	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115059	Identifier	flags		1114073	0					
ANR	1115060	Identifier	MEM_MASK		1114073	1					
ANR	1115061	Argument	reg_ar		1114073	1					
ANR	1115062	Identifier	reg_ar		1114073	0					
ANR	1115063	Argument	reg_map [ base ]		1114073	2					
ANR	1115064	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1115065	Identifier	reg_map		1114073	0					
ANR	1115066	Identifier	base		1114073	1					
ANR	1115067	ElseStatement	else		1114073	0					
ANR	1115068	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar ) ;"	1478:3:45723:45795	1114073	0	True				
ANR	1115069	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar )"		1114073	0					
ANR	1115070	Callee	PB2		1114073	0					
ANR	1115071	Identifier	PB2		1114073	0					
ANR	1115072	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115073	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115074	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115075	Identifier	data_transfer_insts		1114073	0					
ANR	1115076	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115077	Identifier	flags		1114073	0					
ANR	1115078	Identifier	MEM_MASK		1114073	1					
ANR	1115079	Argument	reg_map [ base ]		1114073	1					
ANR	1115080	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1115081	Identifier	reg_map		1114073	0					
ANR	1115082	Identifier	base		1114073	1					
ANR	1115083	Argument	reg_ar		1114073	2					
ANR	1115084	Identifier	reg_ar		1114073	0					
ANR	1115085	IfStatement	if ( compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN )		1114073	7					
ANR	1115086	Condition	compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN	1481:5:45806:45935	1114073	0	True				
ANR	1115087	AndExpression	compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	0		&&			
ANR	1115088	EqualityExpression	compiler -> cache_arg == arg		1114073	0		==			
ANR	1115089	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1115090	Identifier	compiler		1114073	0					
ANR	1115091	Identifier	cache_arg		1114073	1					
ANR	1115092	Identifier	arg		1114073	1					
ANR	1115093	AndExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	1		&&			
ANR	1115094	RelationalExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX		1114073	0		<=			
ANR	1115095	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1115096	Identifier	argw		1114073	0					
ANR	1115097	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115098	Identifier	compiler		1114073	0					
ANR	1115099	Identifier	cache_argw		1114073	1					
ANR	1115100	Identifier	SIMM_16BIT_MAX		1114073	1					
ANR	1115101	RelationalExpression	argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	1		>=			
ANR	1115102	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1115103	Identifier	argw		1114073	0					
ANR	1115104	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115105	Identifier	compiler		1114073	0					
ANR	1115106	Identifier	cache_argw		1114073	1					
ANR	1115107	Identifier	SIMM_16BIT_MIN		1114073	1					
ANR	1115108	CompoundStatement		143:53:4760:4760	1114073	1					
ANR	1115109	IfStatement	if ( argw != compiler -> cache_argw )		1114073	0					
ANR	1115110	Condition	argw != compiler -> cache_argw	1484:6:45946:45973	1114073	0	True				
ANR	1115111	EqualityExpression	argw != compiler -> cache_argw		1114073	0		!=			
ANR	1115112	Identifier	argw		1114073	0					
ANR	1115113	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115114	Identifier	compiler		1114073	0					
ANR	1115115	Identifier	cache_argw		1114073	1					
ANR	1115116	CompoundStatement		144:36:4798:4798	1114073	1					
ANR	1115117	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"	1485:3:45981:46058	1114073	0	True				
ANR	1115118	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"		1114073	0					
ANR	1115119	Callee	FAIL_IF		1114073	0					
ANR	1115120	Identifier	FAIL_IF		1114073	0					
ANR	1115121	ArgumentList	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	1					
ANR	1115122	Argument	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	0					
ANR	1115123	CallExpression	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	0					
ANR	1115124	Callee	ADDLI		1114073	0					
ANR	1115125	Identifier	ADDLI		1114073	0					
ANR	1115126	ArgumentList	TMP_REG3_mapped		1114073	1					
ANR	1115127	Argument	TMP_REG3_mapped		1114073	0					
ANR	1115128	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115129	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115130	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115131	Argument	argw - compiler -> cache_argw		1114073	2					
ANR	1115132	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1115133	Identifier	argw		1114073	0					
ANR	1115134	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115135	Identifier	compiler		1114073	0					
ANR	1115136	Identifier	cache_argw		1114073	1					
ANR	1115137	ExpressionStatement	compiler -> cache_argw = argw	1486:3:46063:46090	1114073	1	True				
ANR	1115138	AssignmentExpression	compiler -> cache_argw = argw		1114073	0		=			
ANR	1115139	PtrMemberAccess	compiler -> cache_argw		1114073	0					
ANR	1115140	Identifier	compiler		1114073	0					
ANR	1115141	Identifier	cache_argw		1114073	1					
ANR	1115142	Identifier	argw		1114073	1					
ANR	1115143	IfStatement	if ( flags & LOAD_DATA )		1114073	1					
ANR	1115144	Condition	flags & LOAD_DATA	1489:6:46103:46119	1114073	0	True				
ANR	1115145	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1115146	Identifier	flags		1114073	0					
ANR	1115147	Identifier	LOAD_DATA		1114073	1					
ANR	1115148	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1490:3:46125:46199	1114073	1	True				
ANR	1115149	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1114073	0					
ANR	1115150	Callee	PB2		1114073	0					
ANR	1115151	Identifier	PB2		1114073	0					
ANR	1115152	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115153	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115154	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115155	Identifier	data_transfer_insts		1114073	0					
ANR	1115156	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115157	Identifier	flags		1114073	0					
ANR	1115158	Identifier	MEM_MASK		1114073	1					
ANR	1115159	Argument	reg_ar		1114073	1					
ANR	1115160	Identifier	reg_ar		1114073	0					
ANR	1115161	Argument	TMP_REG3_mapped		1114073	2					
ANR	1115162	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115163	ElseStatement	else		1114073	0					
ANR	1115164	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1492:3:46211:46285	1114073	0	True				
ANR	1115165	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1114073	0					
ANR	1115166	Callee	PB2		1114073	0					
ANR	1115167	Identifier	PB2		1114073	0					
ANR	1115168	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115169	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115170	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115171	Identifier	data_transfer_insts		1114073	0					
ANR	1115172	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115173	Identifier	flags		1114073	0					
ANR	1115174	Identifier	MEM_MASK		1114073	1					
ANR	1115175	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115176	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115177	Argument	reg_ar		1114073	2					
ANR	1115178	Identifier	reg_ar		1114073	0					
ANR	1115179	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN )		1114073	8					
ANR	1115180	Condition	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN	1495:5:46296:46431	1114073	0	True				
ANR	1115181	AndExpression	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	0		&&			
ANR	1115182	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1114073	0		==			
ANR	1115183	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1115184	Identifier	compiler		1114073	0					
ANR	1115185	Identifier	cache_arg		1114073	1					
ANR	1115186	Identifier	SLJIT_MEM		1114073	1					
ANR	1115187	AndExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	1		&&			
ANR	1115188	RelationalExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX		1114073	0		<=			
ANR	1115189	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1115190	Identifier	argw		1114073	0					
ANR	1115191	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115192	Identifier	compiler		1114073	0					
ANR	1115193	Identifier	cache_argw		1114073	1					
ANR	1115194	Identifier	SIMM_16BIT_MAX		1114073	1					
ANR	1115195	RelationalExpression	argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1114073	1		>=			
ANR	1115196	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1115197	Identifier	argw		1114073	0					
ANR	1115198	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115199	Identifier	compiler		1114073	0					
ANR	1115200	Identifier	cache_argw		1114073	1					
ANR	1115201	Identifier	SIMM_16BIT_MIN		1114073	1					
ANR	1115202	CompoundStatement		157:53:5256:5256	1114073	1					
ANR	1115203	IfStatement	if ( argw != compiler -> cache_argw )		1114073	0					
ANR	1115204	Condition	argw != compiler -> cache_argw	1498:6:46442:46469	1114073	0	True				
ANR	1115205	EqualityExpression	argw != compiler -> cache_argw		1114073	0		!=			
ANR	1115206	Identifier	argw		1114073	0					
ANR	1115207	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115208	Identifier	compiler		1114073	0					
ANR	1115209	Identifier	cache_argw		1114073	1					
ANR	1115210	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"	1499:3:46475:46552	1114073	1	True				
ANR	1115211	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"		1114073	0					
ANR	1115212	Callee	FAIL_IF		1114073	0					
ANR	1115213	Identifier	FAIL_IF		1114073	0					
ANR	1115214	ArgumentList	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	1					
ANR	1115215	Argument	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	0					
ANR	1115216	CallExpression	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1114073	0					
ANR	1115217	Callee	ADDLI		1114073	0					
ANR	1115218	Identifier	ADDLI		1114073	0					
ANR	1115219	ArgumentList	TMP_REG3_mapped		1114073	1					
ANR	1115220	Argument	TMP_REG3_mapped		1114073	0					
ANR	1115221	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115222	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115223	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115224	Argument	argw - compiler -> cache_argw		1114073	2					
ANR	1115225	AdditiveExpression	argw - compiler -> cache_argw		1114073	0		-			
ANR	1115226	Identifier	argw		1114073	0					
ANR	1115227	PtrMemberAccess	compiler -> cache_argw		1114073	1					
ANR	1115228	Identifier	compiler		1114073	0					
ANR	1115229	Identifier	cache_argw		1114073	1					
ANR	1115230	ElseStatement	else		1114073	0					
ANR	1115231	CompoundStatement		160:8:5384:5384	1114073	0					
ANR	1115232	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1501:2:46566:46597	1114073	0	True				
ANR	1115233	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1114073	0		=			
ANR	1115234	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1115235	Identifier	compiler		1114073	0					
ANR	1115236	Identifier	cache_arg		1114073	1					
ANR	1115237	Identifier	SLJIT_MEM		1114073	1					
ANR	1115238	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"	1502:2:46601:46657	1114073	1	True				
ANR	1115239	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"		1114073	0					
ANR	1115240	Callee	FAIL_IF		1114073	0					
ANR	1115241	Identifier	FAIL_IF		1114073	0					
ANR	1115242	ArgumentList	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1114073	1					
ANR	1115243	Argument	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1114073	0					
ANR	1115244	CallExpression	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1114073	0					
ANR	1115245	Callee	load_immediate		1114073	0					
ANR	1115246	Identifier	load_immediate		1114073	0					
ANR	1115247	ArgumentList	compiler		1114073	1					
ANR	1115248	Argument	compiler		1114073	0					
ANR	1115249	Identifier	compiler		1114073	0					
ANR	1115250	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115251	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115252	Argument	argw		1114073	2					
ANR	1115253	Identifier	argw		1114073	0					
ANR	1115254	ExpressionStatement	compiler -> cache_argw = argw	1505:1:46664:46691	1114073	9	True				
ANR	1115255	AssignmentExpression	compiler -> cache_argw = argw		1114073	0		=			
ANR	1115256	PtrMemberAccess	compiler -> cache_argw		1114073	0					
ANR	1115257	Identifier	compiler		1114073	0					
ANR	1115258	Identifier	cache_argw		1114073	1					
ANR	1115259	Identifier	argw		1114073	1					
ANR	1115260	IfStatement	if ( ! base )		1114073	10					
ANR	1115261	Condition	! base	1507:5:46699:46703	1114073	0	True				
ANR	1115262	UnaryOperationExpression	! base		1114073	0					
ANR	1115263	UnaryOperator	!		1114073	0					
ANR	1115264	Identifier	base		1114073	1					
ANR	1115265	CompoundStatement		167:12:5528:5528	1114073	1					
ANR	1115266	IfStatement	if ( flags & LOAD_DATA )		1114073	0					
ANR	1115267	Condition	flags & LOAD_DATA	1508:6:46714:46730	1114073	0	True				
ANR	1115268	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1115269	Identifier	flags		1114073	0					
ANR	1115270	Identifier	LOAD_DATA		1114073	1					
ANR	1115271	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1509:3:46736:46810	1114073	1	True				
ANR	1115272	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1114073	0					
ANR	1115273	Callee	PB2		1114073	0					
ANR	1115274	Identifier	PB2		1114073	0					
ANR	1115275	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115276	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115277	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115278	Identifier	data_transfer_insts		1114073	0					
ANR	1115279	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115280	Identifier	flags		1114073	0					
ANR	1115281	Identifier	MEM_MASK		1114073	1					
ANR	1115282	Argument	reg_ar		1114073	1					
ANR	1115283	Identifier	reg_ar		1114073	0					
ANR	1115284	Argument	TMP_REG3_mapped		1114073	2					
ANR	1115285	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115286	ElseStatement	else		1114073	0					
ANR	1115287	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1511:3:46822:46896	1114073	0	True				
ANR	1115288	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1114073	0					
ANR	1115289	Callee	PB2		1114073	0					
ANR	1115290	Identifier	PB2		1114073	0					
ANR	1115291	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115292	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115293	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115294	Identifier	data_transfer_insts		1114073	0					
ANR	1115295	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115296	Identifier	flags		1114073	0					
ANR	1115297	Identifier	MEM_MASK		1114073	1					
ANR	1115298	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115299	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115300	Argument	reg_ar		1114073	2					
ANR	1115301	Identifier	reg_ar		1114073	0					
ANR	1115302	IfStatement	if ( arg == next_arg && next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN )		1114073	11					
ANR	1115303	Condition	arg == next_arg && next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN	1514:5:46907:47003	1114073	0	True				
ANR	1115304	AndExpression	arg == next_arg && next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN		1114073	0		&&			
ANR	1115305	EqualityExpression	arg == next_arg		1114073	0		==			
ANR	1115306	Identifier	arg		1114073	0					
ANR	1115307	Identifier	next_arg		1114073	1					
ANR	1115308	AndExpression	next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN		1114073	1		&&			
ANR	1115309	RelationalExpression	next_argw - argw <= SIMM_16BIT_MAX		1114073	0		<=			
ANR	1115310	AdditiveExpression	next_argw - argw		1114073	0		-			
ANR	1115311	Identifier	next_argw		1114073	0					
ANR	1115312	Identifier	argw		1114073	1					
ANR	1115313	Identifier	SIMM_16BIT_MAX		1114073	1					
ANR	1115314	RelationalExpression	next_argw - argw >= SIMM_16BIT_MIN		1114073	1		>=			
ANR	1115315	AdditiveExpression	next_argw - argw		1114073	0		-			
ANR	1115316	Identifier	next_argw		1114073	0					
ANR	1115317	Identifier	argw		1114073	1					
ANR	1115318	Identifier	SIMM_16BIT_MIN		1114073	1					
ANR	1115319	CompoundStatement		176:42:5828:5828	1114073	1					
ANR	1115320	ExpressionStatement	compiler -> cache_arg = arg	1517:2:47010:47035	1114073	0	True				
ANR	1115321	AssignmentExpression	compiler -> cache_arg = arg		1114073	0		=			
ANR	1115322	PtrMemberAccess	compiler -> cache_arg		1114073	0					
ANR	1115323	Identifier	compiler		1114073	0					
ANR	1115324	Identifier	cache_arg		1114073	1					
ANR	1115325	Identifier	arg		1114073	1					
ANR	1115326	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] ) )"	1518:2:47039:47100	1114073	1	True				
ANR	1115327	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] ) )"		1114073	0					
ANR	1115328	Callee	FAIL_IF		1114073	0					
ANR	1115329	Identifier	FAIL_IF		1114073	0					
ANR	1115330	ArgumentList	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] )"		1114073	1					
ANR	1115331	Argument	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] )"		1114073	0					
ANR	1115332	CallExpression	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] )"		1114073	0					
ANR	1115333	Callee	ADD		1114073	0					
ANR	1115334	Identifier	ADD		1114073	0					
ANR	1115335	ArgumentList	TMP_REG3_mapped		1114073	1					
ANR	1115336	Argument	TMP_REG3_mapped		1114073	0					
ANR	1115337	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115338	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115339	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115340	Argument	reg_map [ base ]		1114073	2					
ANR	1115341	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1115342	Identifier	reg_map		1114073	0					
ANR	1115343	Identifier	base		1114073	1					
ANR	1115344	IfStatement	if ( flags & LOAD_DATA )		1114073	2					
ANR	1115345	Condition	flags & LOAD_DATA	1519:6:47108:47124	1114073	0	True				
ANR	1115346	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1115347	Identifier	flags		1114073	0					
ANR	1115348	Identifier	LOAD_DATA		1114073	1					
ANR	1115349	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1520:3:47130:47204	1114073	1	True				
ANR	1115350	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1114073	0					
ANR	1115351	Callee	PB2		1114073	0					
ANR	1115352	Identifier	PB2		1114073	0					
ANR	1115353	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115354	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115355	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115356	Identifier	data_transfer_insts		1114073	0					
ANR	1115357	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115358	Identifier	flags		1114073	0					
ANR	1115359	Identifier	MEM_MASK		1114073	1					
ANR	1115360	Argument	reg_ar		1114073	1					
ANR	1115361	Identifier	reg_ar		1114073	0					
ANR	1115362	Argument	TMP_REG3_mapped		1114073	2					
ANR	1115363	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115364	ElseStatement	else		1114073	0					
ANR	1115365	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1522:3:47216:47290	1114073	0	True				
ANR	1115366	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1114073	0					
ANR	1115367	Callee	PB2		1114073	0					
ANR	1115368	Identifier	PB2		1114073	0					
ANR	1115369	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115370	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115371	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115372	Identifier	data_transfer_insts		1114073	0					
ANR	1115373	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115374	Identifier	flags		1114073	0					
ANR	1115375	Identifier	MEM_MASK		1114073	1					
ANR	1115376	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115377	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115378	Argument	reg_ar		1114073	2					
ANR	1115379	Identifier	reg_ar		1114073	0					
ANR	1115380	ExpressionStatement	"FAIL_IF ( ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] ) )"	1525:1:47297:47349	1114073	12	True				
ANR	1115381	CallExpression	"FAIL_IF ( ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] ) )"		1114073	0					
ANR	1115382	Callee	FAIL_IF		1114073	0					
ANR	1115383	Identifier	FAIL_IF		1114073	0					
ANR	1115384	ArgumentList	"ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] )"		1114073	1					
ANR	1115385	Argument	"ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] )"		1114073	0					
ANR	1115386	CallExpression	"ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] )"		1114073	0					
ANR	1115387	Callee	ADD		1114073	0					
ANR	1115388	Identifier	ADD		1114073	0					
ANR	1115389	ArgumentList	tmp_ar		1114073	1					
ANR	1115390	Argument	tmp_ar		1114073	0					
ANR	1115391	Identifier	tmp_ar		1114073	0					
ANR	1115392	Argument	TMP_REG3_mapped		1114073	1					
ANR	1115393	Identifier	TMP_REG3_mapped		1114073	0					
ANR	1115394	Argument	reg_map [ base ]		1114073	2					
ANR	1115395	ArrayIndexing	reg_map [ base ]		1114073	0					
ANR	1115396	Identifier	reg_map		1114073	0					
ANR	1115397	Identifier	base		1114073	1					
ANR	1115398	IfStatement	if ( flags & LOAD_DATA )		1114073	13					
ANR	1115399	Condition	flags & LOAD_DATA	1527:5:47357:47373	1114073	0	True				
ANR	1115400	BitAndExpression	flags & LOAD_DATA		1114073	0		&			
ANR	1115401	Identifier	flags		1114073	0					
ANR	1115402	Identifier	LOAD_DATA		1114073	1					
ANR	1115403	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar ) ;"	1528:2:47378:47443	1114073	1	True				
ANR	1115404	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar )"		1114073	0					
ANR	1115405	Callee	PB2		1114073	0					
ANR	1115406	Identifier	PB2		1114073	0					
ANR	1115407	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115408	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115409	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115410	Identifier	data_transfer_insts		1114073	0					
ANR	1115411	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115412	Identifier	flags		1114073	0					
ANR	1115413	Identifier	MEM_MASK		1114073	1					
ANR	1115414	Argument	reg_ar		1114073	1					
ANR	1115415	Identifier	reg_ar		1114073	0					
ANR	1115416	Argument	tmp_ar		1114073	2					
ANR	1115417	Identifier	tmp_ar		1114073	0					
ANR	1115418	ElseStatement	else		1114073	0					
ANR	1115419	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar ) ;"	1530:2:47453:47518	1114073	0	True				
ANR	1115420	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar )"		1114073	0					
ANR	1115421	Callee	PB2		1114073	0					
ANR	1115422	Identifier	PB2		1114073	0					
ANR	1115423	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1114073	1					
ANR	1115424	Argument	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115425	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1114073	0					
ANR	1115426	Identifier	data_transfer_insts		1114073	0					
ANR	1115427	BitAndExpression	flags & MEM_MASK		1114073	1		&			
ANR	1115428	Identifier	flags		1114073	0					
ANR	1115429	Identifier	MEM_MASK		1114073	1					
ANR	1115430	Argument	tmp_ar		1114073	1					
ANR	1115431	Identifier	tmp_ar		1114073	0					
ANR	1115432	Argument	reg_ar		1114073	2					
ANR	1115433	Identifier	reg_ar		1114073	0					
ANR	1115434	ReturnType	static sljit_si		1114073	1					
ANR	1115435	Identifier	getput_arg		1114073	2					
ANR	1115436	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1114073	3					
ANR	1115437	Parameter	struct sljit_compiler * compiler	1340:27:41043:41073	1114073	0	True				
ANR	1115438	ParameterType	struct sljit_compiler *		1114073	0					
ANR	1115439	Identifier	compiler		1114073	1					
ANR	1115440	Parameter	sljit_si flags	1340:60:41076:41089	1114073	1	True				
ANR	1115441	ParameterType	sljit_si		1114073	0					
ANR	1115442	Identifier	flags		1114073	1					
ANR	1115443	Parameter	sljit_si reg_ar	1340:76:41092:41106	1114073	2	True				
ANR	1115444	ParameterType	sljit_si		1114073	0					
ANR	1115445	Identifier	reg_ar		1114073	1					
ANR	1115446	Parameter	sljit_si arg	1340:93:41109:41120	1114073	3	True				
ANR	1115447	ParameterType	sljit_si		1114073	0					
ANR	1115448	Identifier	arg		1114073	1					
ANR	1115449	Parameter	sljit_sw argw	1340:107:41123:41135	1114073	4	True				
ANR	1115450	ParameterType	sljit_sw		1114073	0					
ANR	1115451	Identifier	argw		1114073	1					
ANR	1115452	Parameter	sljit_si next_arg	1340:122:41138:41154	1114073	5	True				
ANR	1115453	ParameterType	sljit_si		1114073	0					
ANR	1115454	Identifier	next_arg		1114073	1					
ANR	1115455	Parameter	sljit_sw next_argw	1340:141:41157:41174	1114073	6	True				
ANR	1115456	ParameterType	sljit_sw		1114073	0					
ANR	1115457	Identifier	next_argw		1114073	1					
ANR	1115458	CFGEntryNode	ENTRY		1114073		True				
ANR	1115459	CFGExitNode	EXIT		1114073		True				
ANR	1115460	Symbol	TMP_REG3		1114073						
ANR	1115461	Symbol	ADD		1114073						
ANR	1115462	Symbol	ZERO		1114073						
ANR	1115463	Symbol	PB2		1114073						
ANR	1115464	Symbol	TMP_REG1_mapped		1114073						
ANR	1115465	Symbol	TMP_REG1		1114073						
ANR	1115466	Symbol	compiler -> cache_argw		1114073						
ANR	1115467	Symbol	SIMM_16BIT_MIN		1114073						
ANR	1115468	Symbol	LOAD_DATA		1114073						
ANR	1115469	Symbol	SLJIT_MEM		1114073						
ANR	1115470	Symbol	flags		1114073						
ANR	1115471	Symbol	reg_map		1114073						
ANR	1115472	Symbol	* MEM_MASK		1114073						
ANR	1115473	Symbol	* compiler		1114073						
ANR	1115474	Symbol	* argw		1114073						
ANR	1115475	Symbol	argw		1114073						
ANR	1115476	Symbol	ADDLI		1114073						
ANR	1115477	Symbol	load_immediate		1114073						
ANR	1115478	Symbol	arg		1114073						
ANR	1115479	Symbol	TMP_REG3_mapped		1114073						
ANR	1115480	Symbol	* TMP_REG1		1114073						
ANR	1115481	Symbol	* base		1114073						
ANR	1115482	Symbol	compiler		1114073						
ANR	1115483	Symbol	* TMP_REG3		1114073						
ANR	1115484	Symbol	WRITE_BACK		1114073						
ANR	1115485	Symbol	next_arg		1114073						
ANR	1115486	Symbol	* flags		1114073						
ANR	1115487	Symbol	REG_MASK		1114073						
ANR	1115488	Symbol	compiler -> cache_arg		1114073						
ANR	1115489	Symbol	OFFS_REG_MASK		1114073						
ANR	1115490	Symbol	next_argw		1114073						
ANR	1115491	Symbol	SLJIT_SUCCESS		1114073						
ANR	1115492	Symbol	* reg_map		1114073						
ANR	1115493	Symbol	data_transfer_insts		1114073						
ANR	1115494	Symbol	* data_transfer_insts		1114073						
ANR	1115495	Symbol	GPR_REG		1114073						
ANR	1115496	Symbol	* OFFS_REG		1114073						
ANR	1115497	Symbol	ADDR_TMP_mapped		1114073						
ANR	1115498	Symbol	SHLI		1114073						
ANR	1115499	Symbol	SIMM_16BIT_MAX		1114073						
ANR	1115500	Symbol	MEM_MASK		1114073						
ANR	1115501	Symbol	reg_ar		1114073						
ANR	1115502	Symbol	OFFS_REG		1114073						
ANR	1115503	Symbol	base		1114073						
ANR	1115504	Symbol	tmp_ar		1114073						
ANR	1115505	Symbol	SLJIT_UNLIKELY		1114073						
ANR	1115506	Function	emit_op_mem	1533:0:47523:47861							
ANR	1115507	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw)"		1115506	0					
ANR	1115508	CompoundStatement		1534:0:47659:47861	1115506	0					
ANR	1115509	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg_ar , arg , argw ) )"		1115506	0					
ANR	1115510	Condition	"getput_arg_fast ( compiler , flags , reg_ar , arg , argw )"	1535:5:47666:47716	1115506	0	True				
ANR	1115511	CallExpression	"getput_arg_fast ( compiler , flags , reg_ar , arg , argw )"		1115506	0					
ANR	1115512	Callee	getput_arg_fast		1115506	0					
ANR	1115513	Identifier	getput_arg_fast		1115506	0					
ANR	1115514	ArgumentList	compiler		1115506	1					
ANR	1115515	Argument	compiler		1115506	0					
ANR	1115516	Identifier	compiler		1115506	0					
ANR	1115517	Argument	flags		1115506	1					
ANR	1115518	Identifier	flags		1115506	0					
ANR	1115519	Argument	reg_ar		1115506	2					
ANR	1115520	Identifier	reg_ar		1115506	0					
ANR	1115521	Argument	arg		1115506	3					
ANR	1115522	Identifier	arg		1115506	0					
ANR	1115523	Argument	argw		1115506	4					
ANR	1115524	Identifier	argw		1115506	0					
ANR	1115525	ReturnStatement	return compiler -> error ;	1536:2:47721:47743	1115506	1	True				
ANR	1115526	PtrMemberAccess	compiler -> error		1115506	0					
ANR	1115527	Identifier	compiler		1115506	0					
ANR	1115528	Identifier	error		1115506	1					
ANR	1115529	ExpressionStatement	compiler -> cache_arg = 0	1538:1:47747:47770	1115506	1	True				
ANR	1115530	AssignmentExpression	compiler -> cache_arg = 0		1115506	0		=			
ANR	1115531	PtrMemberAccess	compiler -> cache_arg		1115506	0					
ANR	1115532	Identifier	compiler		1115506	0					
ANR	1115533	Identifier	cache_arg		1115506	1					
ANR	1115534	PrimaryExpression	0		1115506	1					
ANR	1115535	ExpressionStatement	compiler -> cache_argw = 0	1539:1:47773:47797	1115506	2	True				
ANR	1115536	AssignmentExpression	compiler -> cache_argw = 0		1115506	0		=			
ANR	1115537	PtrMemberAccess	compiler -> cache_argw		1115506	0					
ANR	1115538	Identifier	compiler		1115506	0					
ANR	1115539	Identifier	cache_argw		1115506	1					
ANR	1115540	PrimaryExpression	0		1115506	1					
ANR	1115541	ReturnStatement	"return getput_arg ( compiler , flags , reg_ar , arg , argw , 0 , 0 ) ;"	1540:1:47800:47859	1115506	3	True				
ANR	1115542	CallExpression	"getput_arg ( compiler , flags , reg_ar , arg , argw , 0 , 0 )"		1115506	0					
ANR	1115543	Callee	getput_arg		1115506	0					
ANR	1115544	Identifier	getput_arg		1115506	0					
ANR	1115545	ArgumentList	compiler		1115506	1					
ANR	1115546	Argument	compiler		1115506	0					
ANR	1115547	Identifier	compiler		1115506	0					
ANR	1115548	Argument	flags		1115506	1					
ANR	1115549	Identifier	flags		1115506	0					
ANR	1115550	Argument	reg_ar		1115506	2					
ANR	1115551	Identifier	reg_ar		1115506	0					
ANR	1115552	Argument	arg		1115506	3					
ANR	1115553	Identifier	arg		1115506	0					
ANR	1115554	Argument	argw		1115506	4					
ANR	1115555	Identifier	argw		1115506	0					
ANR	1115556	Argument	0		1115506	5					
ANR	1115557	PrimaryExpression	0		1115506	0					
ANR	1115558	Argument	0		1115506	6					
ANR	1115559	PrimaryExpression	0		1115506	0					
ANR	1115560	ReturnType	static SLJIT_INLINE sljit_si		1115506	1					
ANR	1115561	Identifier	emit_op_mem		1115506	2					
ANR	1115562	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw"		1115506	3					
ANR	1115563	Parameter	struct sljit_compiler * compiler	1533:41:47564:47594	1115506	0	True				
ANR	1115564	ParameterType	struct sljit_compiler *		1115506	0					
ANR	1115565	Identifier	compiler		1115506	1					
ANR	1115566	Parameter	sljit_si flags	1533:74:47597:47610	1115506	1	True				
ANR	1115567	ParameterType	sljit_si		1115506	0					
ANR	1115568	Identifier	flags		1115506	1					
ANR	1115569	Parameter	sljit_si reg_ar	1533:90:47613:47627	1115506	2	True				
ANR	1115570	ParameterType	sljit_si		1115506	0					
ANR	1115571	Identifier	reg_ar		1115506	1					
ANR	1115572	Parameter	sljit_si arg	1533:107:47630:47641	1115506	3	True				
ANR	1115573	ParameterType	sljit_si		1115506	0					
ANR	1115574	Identifier	arg		1115506	1					
ANR	1115575	Parameter	sljit_sw argw	1533:121:47644:47656	1115506	4	True				
ANR	1115576	ParameterType	sljit_sw		1115506	0					
ANR	1115577	Identifier	argw		1115506	1					
ANR	1115578	CFGEntryNode	ENTRY		1115506		True				
ANR	1115579	CFGExitNode	EXIT		1115506		True				
ANR	1115580	Symbol	compiler -> cache_argw		1115506						
ANR	1115581	Symbol	getput_arg		1115506						
ANR	1115582	Symbol	compiler -> cache_arg		1115506						
ANR	1115583	Symbol	arg		1115506						
ANR	1115584	Symbol	flags		1115506						
ANR	1115585	Symbol	reg_ar		1115506						
ANR	1115586	Symbol	* compiler		1115506						
ANR	1115587	Symbol	compiler		1115506						
ANR	1115588	Symbol	argw		1115506						
ANR	1115589	Symbol	getput_arg_fast		1115506						
ANR	1115590	Symbol	compiler -> error		1115506						
ANR	1115591	Function	emit_op_mem2	1543:0:47864:48184							
ANR	1115592	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1115591	0					
ANR	1115593	CompoundStatement		1544:0:48031:48184	1115591	0					
ANR	1115594	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1115591	0					
ANR	1115595	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1545:5:48038:48087	1115591	0	True				
ANR	1115596	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1115591	0					
ANR	1115597	Callee	getput_arg_fast		1115591	0					
ANR	1115598	Identifier	getput_arg_fast		1115591	0					
ANR	1115599	ArgumentList	compiler		1115591	1					
ANR	1115600	Argument	compiler		1115591	0					
ANR	1115601	Identifier	compiler		1115591	0					
ANR	1115602	Argument	flags		1115591	1					
ANR	1115603	Identifier	flags		1115591	0					
ANR	1115604	Argument	reg		1115591	2					
ANR	1115605	Identifier	reg		1115591	0					
ANR	1115606	Argument	arg1		1115591	3					
ANR	1115607	Identifier	arg1		1115591	0					
ANR	1115608	Argument	arg1w		1115591	4					
ANR	1115609	Identifier	arg1w		1115591	0					
ANR	1115610	ReturnStatement	return compiler -> error ;	1546:2:48092:48114	1115591	1	True				
ANR	1115611	PtrMemberAccess	compiler -> error		1115591	0					
ANR	1115612	Identifier	compiler		1115591	0					
ANR	1115613	Identifier	error		1115591	1					
ANR	1115614	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1547:1:48117:48182	1115591	1	True				
ANR	1115615	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1115591	0					
ANR	1115616	Callee	getput_arg		1115591	0					
ANR	1115617	Identifier	getput_arg		1115591	0					
ANR	1115618	ArgumentList	compiler		1115591	1					
ANR	1115619	Argument	compiler		1115591	0					
ANR	1115620	Identifier	compiler		1115591	0					
ANR	1115621	Argument	flags		1115591	1					
ANR	1115622	Identifier	flags		1115591	0					
ANR	1115623	Argument	reg		1115591	2					
ANR	1115624	Identifier	reg		1115591	0					
ANR	1115625	Argument	arg1		1115591	3					
ANR	1115626	Identifier	arg1		1115591	0					
ANR	1115627	Argument	arg1w		1115591	4					
ANR	1115628	Identifier	arg1w		1115591	0					
ANR	1115629	Argument	arg2		1115591	5					
ANR	1115630	Identifier	arg2		1115591	0					
ANR	1115631	Argument	arg2w		1115591	6					
ANR	1115632	Identifier	arg2w		1115591	0					
ANR	1115633	ReturnType	static SLJIT_INLINE sljit_si		1115591	1					
ANR	1115634	Identifier	emit_op_mem2		1115591	2					
ANR	1115635	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1115591	3					
ANR	1115636	Parameter	struct sljit_compiler * compiler	1543:42:47906:47936	1115591	0	True				
ANR	1115637	ParameterType	struct sljit_compiler *		1115591	0					
ANR	1115638	Identifier	compiler		1115591	1					
ANR	1115639	Parameter	sljit_si flags	1543:75:47939:47952	1115591	1	True				
ANR	1115640	ParameterType	sljit_si		1115591	0					
ANR	1115641	Identifier	flags		1115591	1					
ANR	1115642	Parameter	sljit_si reg	1543:91:47955:47966	1115591	2	True				
ANR	1115643	ParameterType	sljit_si		1115591	0					
ANR	1115644	Identifier	reg		1115591	1					
ANR	1115645	Parameter	sljit_si arg1	1543:105:47969:47981	1115591	3	True				
ANR	1115646	ParameterType	sljit_si		1115591	0					
ANR	1115647	Identifier	arg1		1115591	1					
ANR	1115648	Parameter	sljit_sw arg1w	1543:120:47984:47997	1115591	4	True				
ANR	1115649	ParameterType	sljit_sw		1115591	0					
ANR	1115650	Identifier	arg1w		1115591	1					
ANR	1115651	Parameter	sljit_si arg2	1543:136:48000:48012	1115591	5	True				
ANR	1115652	ParameterType	sljit_si		1115591	0					
ANR	1115653	Identifier	arg2		1115591	1					
ANR	1115654	Parameter	sljit_sw arg2w	1543:151:48015:48028	1115591	6	True				
ANR	1115655	ParameterType	sljit_sw		1115591	0					
ANR	1115656	Identifier	arg2w		1115591	1					
ANR	1115657	CFGEntryNode	ENTRY		1115591		True				
ANR	1115658	CFGExitNode	EXIT		1115591		True				
ANR	1115659	Symbol	arg1w		1115591						
ANR	1115660	Symbol	arg2		1115591						
ANR	1115661	Symbol	getput_arg		1115591						
ANR	1115662	Symbol	reg		1115591						
ANR	1115663	Symbol	arg1		1115591						
ANR	1115664	Symbol	arg2w		1115591						
ANR	1115665	Symbol	flags		1115591						
ANR	1115666	Symbol	* compiler		1115591						
ANR	1115667	Symbol	compiler		1115591						
ANR	1115668	Symbol	getput_arg_fast		1115591						
ANR	1115669	Symbol	compiler -> error		1115591						
ANR	1115670	Function	sljit_emit_fast_enter	1550:0:48187:48647							
ANR	1115671	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1115670	0					
ANR	1115672	CompoundStatement		1551:0:48305:48647	1115670	0					
ANR	1115673	ExpressionStatement	CHECK_ERROR ( )	1552:1:48308:48321	1115670	0	True				
ANR	1115674	CallExpression	CHECK_ERROR ( )		1115670	0					
ANR	1115675	Callee	CHECK_ERROR		1115670	0					
ANR	1115676	Identifier	CHECK_ERROR		1115670	0					
ANR	1115677	ArgumentList			1115670	1					
ANR	1115678	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	1553:1:48324:48379	1115670	1	True				
ANR	1115679	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1115670	0					
ANR	1115680	Callee	CHECK		1115670	0					
ANR	1115681	Identifier	CHECK		1115670	0					
ANR	1115682	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1115670	1					
ANR	1115683	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1115670	0					
ANR	1115684	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1115670	0					
ANR	1115685	Callee	check_sljit_emit_fast_enter		1115670	0					
ANR	1115686	Identifier	check_sljit_emit_fast_enter		1115670	0					
ANR	1115687	ArgumentList	compiler		1115670	1					
ANR	1115688	Argument	compiler		1115670	0					
ANR	1115689	Identifier	compiler		1115670	0					
ANR	1115690	Argument	dst		1115670	1					
ANR	1115691	Identifier	dst		1115670	0					
ANR	1115692	Argument	dstw		1115670	2					
ANR	1115693	Identifier	dstw		1115670	0					
ANR	1115694	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1554:1:48382:48412	1115670	2	True				
ANR	1115695	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1115670	0					
ANR	1115696	Callee	ADJUST_LOCAL_OFFSET		1115670	0					
ANR	1115697	Identifier	ADJUST_LOCAL_OFFSET		1115670	0					
ANR	1115698	ArgumentList	dst		1115670	1					
ANR	1115699	Argument	dst		1115670	0					
ANR	1115700	Identifier	dst		1115670	0					
ANR	1115701	Argument	dstw		1115670	1					
ANR	1115702	Identifier	dstw		1115670	0					
ANR	1115703	IfStatement	if ( dst == SLJIT_UNUSED )		1115670	3					
ANR	1115704	Condition	dst == SLJIT_UNUSED	1557:5:48467:48485	1115670	0	True				
ANR	1115705	EqualityExpression	dst == SLJIT_UNUSED		1115670	0		==			
ANR	1115706	Identifier	dst		1115670	0					
ANR	1115707	Identifier	SLJIT_UNUSED		1115670	1					
ANR	1115708	ReturnStatement	return SLJIT_SUCCESS ;	1558:2:48490:48510	1115670	1	True				
ANR	1115709	Identifier	SLJIT_SUCCESS		1115670	0					
ANR	1115710	IfStatement	if ( FAST_IS_REG ( dst ) )		1115670	4					
ANR	1115711	Condition	FAST_IS_REG ( dst )	1560:5:48518:48533	1115670	0	True				
ANR	1115712	CallExpression	FAST_IS_REG ( dst )		1115670	0					
ANR	1115713	Callee	FAST_IS_REG		1115670	0					
ANR	1115714	Identifier	FAST_IS_REG		1115670	0					
ANR	1115715	ArgumentList	dst		1115670	1					
ANR	1115716	Argument	dst		1115670	0					
ANR	1115717	Identifier	dst		1115670	0					
ANR	1115718	ReturnStatement	"return ADD ( reg_map [ dst ] , RA , ZERO ) ;"	1561:2:48538:48572	1115670	1	True				
ANR	1115719	CallExpression	"ADD ( reg_map [ dst ] , RA , ZERO )"		1115670	0					
ANR	1115720	Callee	ADD		1115670	0					
ANR	1115721	Identifier	ADD		1115670	0					
ANR	1115722	ArgumentList	reg_map [ dst ]		1115670	1					
ANR	1115723	Argument	reg_map [ dst ]		1115670	0					
ANR	1115724	ArrayIndexing	reg_map [ dst ]		1115670	0					
ANR	1115725	Identifier	reg_map		1115670	0					
ANR	1115726	Identifier	dst		1115670	1					
ANR	1115727	Argument	RA		1115670	1					
ANR	1115728	Identifier	RA		1115670	0					
ANR	1115729	Argument	ZERO		1115670	2					
ANR	1115730	Identifier	ZERO		1115670	0					
ANR	1115731	ReturnStatement	"return emit_op_mem ( compiler , WORD_DATA , RA , dst , dstw ) ;"	1564:1:48591:48645	1115670	5	True				
ANR	1115732	CallExpression	"emit_op_mem ( compiler , WORD_DATA , RA , dst , dstw )"		1115670	0					
ANR	1115733	Callee	emit_op_mem		1115670	0					
ANR	1115734	Identifier	emit_op_mem		1115670	0					
ANR	1115735	ArgumentList	compiler		1115670	1					
ANR	1115736	Argument	compiler		1115670	0					
ANR	1115737	Identifier	compiler		1115670	0					
ANR	1115738	Argument	WORD_DATA		1115670	1					
ANR	1115739	Identifier	WORD_DATA		1115670	0					
ANR	1115740	Argument	RA		1115670	2					
ANR	1115741	Identifier	RA		1115670	0					
ANR	1115742	Argument	dst		1115670	3					
ANR	1115743	Identifier	dst		1115670	0					
ANR	1115744	Argument	dstw		1115670	4					
ANR	1115745	Identifier	dstw		1115670	0					
ANR	1115746	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1115670	1					
ANR	1115747	Identifier	sljit_emit_fast_enter		1115670	2					
ANR	1115748	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1115670	3					
ANR	1115749	Parameter	struct sljit_compiler * compiler	1550:56:48243:48273	1115670	0	True				
ANR	1115750	ParameterType	struct sljit_compiler *		1115670	0					
ANR	1115751	Identifier	compiler		1115670	1					
ANR	1115752	Parameter	sljit_si dst	1550:89:48276:48287	1115670	1	True				
ANR	1115753	ParameterType	sljit_si		1115670	0					
ANR	1115754	Identifier	dst		1115670	1					
ANR	1115755	Parameter	sljit_sw dstw	1550:103:48290:48302	1115670	2	True				
ANR	1115756	ParameterType	sljit_sw		1115670	0					
ANR	1115757	Identifier	dstw		1115670	1					
ANR	1115758	CFGEntryNode	ENTRY		1115670		True				
ANR	1115759	CFGExitNode	EXIT		1115670		True				
ANR	1115760	Symbol	ZERO		1115670						
ANR	1115761	Symbol	ADD		1115670						
ANR	1115762	Symbol	check_sljit_emit_fast_enter		1115670						
ANR	1115763	Symbol	FAST_IS_REG		1115670						
ANR	1115764	Symbol	dst		1115670						
ANR	1115765	Symbol	reg_map		1115670						
ANR	1115766	Symbol	emit_op_mem		1115670						
ANR	1115767	Symbol	SLJIT_SUCCESS		1115670						
ANR	1115768	Symbol	* reg_map		1115670						
ANR	1115769	Symbol	RA		1115670						
ANR	1115770	Symbol	* dst		1115670						
ANR	1115771	Symbol	SLJIT_UNUSED		1115670						
ANR	1115772	Symbol	compiler		1115670						
ANR	1115773	Symbol	dstw		1115670						
ANR	1115774	Symbol	WORD_DATA		1115670						
ANR	1115775	Function	sljit_emit_fast_return	1567:0:48650:49135							
ANR	1115776	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1115775	0					
ANR	1115777	CompoundStatement		1568:0:48769:49135	1115775	0					
ANR	1115778	ExpressionStatement	CHECK_ERROR ( )	1569:1:48772:48785	1115775	0	True				
ANR	1115779	CallExpression	CHECK_ERROR ( )		1115775	0					
ANR	1115780	Callee	CHECK_ERROR		1115775	0					
ANR	1115781	Identifier	CHECK_ERROR		1115775	0					
ANR	1115782	ArgumentList			1115775	1					
ANR	1115783	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	1570:1:48788:48844	1115775	1	True				
ANR	1115784	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1115775	0					
ANR	1115785	Callee	CHECK		1115775	0					
ANR	1115786	Identifier	CHECK		1115775	0					
ANR	1115787	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1115775	1					
ANR	1115788	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1115775	0					
ANR	1115789	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1115775	0					
ANR	1115790	Callee	check_sljit_emit_fast_return		1115775	0					
ANR	1115791	Identifier	check_sljit_emit_fast_return		1115775	0					
ANR	1115792	ArgumentList	compiler		1115775	1					
ANR	1115793	Argument	compiler		1115775	0					
ANR	1115794	Identifier	compiler		1115775	0					
ANR	1115795	Argument	src		1115775	1					
ANR	1115796	Identifier	src		1115775	0					
ANR	1115797	Argument	srcw		1115775	2					
ANR	1115798	Identifier	srcw		1115775	0					
ANR	1115799	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1571:1:48847:48877	1115775	2	True				
ANR	1115800	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1115775	0					
ANR	1115801	Callee	ADJUST_LOCAL_OFFSET		1115775	0					
ANR	1115802	Identifier	ADJUST_LOCAL_OFFSET		1115775	0					
ANR	1115803	ArgumentList	src		1115775	1					
ANR	1115804	Argument	src		1115775	0					
ANR	1115805	Identifier	src		1115775	0					
ANR	1115806	Argument	srcw		1115775	1					
ANR	1115807	Identifier	srcw		1115775	0					
ANR	1115808	IfStatement	if ( FAST_IS_REG ( src ) )		1115775	3					
ANR	1115809	Condition	FAST_IS_REG ( src )	1573:5:48885:48900	1115775	0	True				
ANR	1115810	CallExpression	FAST_IS_REG ( src )		1115775	0					
ANR	1115811	Callee	FAST_IS_REG		1115775	0					
ANR	1115812	Identifier	FAST_IS_REG		1115775	0					
ANR	1115813	ArgumentList	src		1115775	1					
ANR	1115814	Argument	src		1115775	0					
ANR	1115815	Identifier	src		1115775	0					
ANR	1115816	ExpressionStatement	"FAIL_IF ( ADD ( RA , reg_map [ src ] , ZERO ) )"	1574:2:48905:48941	1115775	1	True				
ANR	1115817	CallExpression	"FAIL_IF ( ADD ( RA , reg_map [ src ] , ZERO ) )"		1115775	0					
ANR	1115818	Callee	FAIL_IF		1115775	0					
ANR	1115819	Identifier	FAIL_IF		1115775	0					
ANR	1115820	ArgumentList	"ADD ( RA , reg_map [ src ] , ZERO )"		1115775	1					
ANR	1115821	Argument	"ADD ( RA , reg_map [ src ] , ZERO )"		1115775	0					
ANR	1115822	CallExpression	"ADD ( RA , reg_map [ src ] , ZERO )"		1115775	0					
ANR	1115823	Callee	ADD		1115775	0					
ANR	1115824	Identifier	ADD		1115775	0					
ANR	1115825	ArgumentList	RA		1115775	1					
ANR	1115826	Argument	RA		1115775	0					
ANR	1115827	Identifier	RA		1115775	0					
ANR	1115828	Argument	reg_map [ src ]		1115775	1					
ANR	1115829	ArrayIndexing	reg_map [ src ]		1115775	0					
ANR	1115830	Identifier	reg_map		1115775	0					
ANR	1115831	Identifier	src		1115775	1					
ANR	1115832	Argument	ZERO		1115775	2					
ANR	1115833	Identifier	ZERO		1115775	0					
ANR	1115834	ElseStatement	else		1115775	0					
ANR	1115835	IfStatement	if ( src & SLJIT_MEM )		1115775	0					
ANR	1115836	Condition	src & SLJIT_MEM	1576:10:48954:48968	1115775	0	True				
ANR	1115837	BitAndExpression	src & SLJIT_MEM		1115775	0		&			
ANR	1115838	Identifier	src		1115775	0					
ANR	1115839	Identifier	SLJIT_MEM		1115775	1					
ANR	1115840	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw ) )"	1577:2:48973:49041	1115775	1	True				
ANR	1115841	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw ) )"		1115775	0					
ANR	1115842	Callee	FAIL_IF		1115775	0					
ANR	1115843	Identifier	FAIL_IF		1115775	0					
ANR	1115844	ArgumentList	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw )"		1115775	1					
ANR	1115845	Argument	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw )"		1115775	0					
ANR	1115846	CallExpression	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw )"		1115775	0					
ANR	1115847	Callee	emit_op_mem		1115775	0					
ANR	1115848	Identifier	emit_op_mem		1115775	0					
ANR	1115849	ArgumentList	compiler		1115775	1					
ANR	1115850	Argument	compiler		1115775	0					
ANR	1115851	Identifier	compiler		1115775	0					
ANR	1115852	Argument	WORD_DATA | LOAD_DATA		1115775	1					
ANR	1115853	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1115775	0		|			
ANR	1115854	Identifier	WORD_DATA		1115775	0					
ANR	1115855	Identifier	LOAD_DATA		1115775	1					
ANR	1115856	Argument	RA		1115775	2					
ANR	1115857	Identifier	RA		1115775	0					
ANR	1115858	Argument	src		1115775	3					
ANR	1115859	Identifier	src		1115775	0					
ANR	1115860	Argument	srcw		1115775	4					
ANR	1115861	Identifier	srcw		1115775	0					
ANR	1115862	ElseStatement	else		1115775	0					
ANR	1115863	IfStatement	if ( src & SLJIT_IMM )		1115775	0					
ANR	1115864	Condition	src & SLJIT_IMM	1579:10:49054:49068	1115775	0	True				
ANR	1115865	BitAndExpression	src & SLJIT_IMM		1115775	0		&			
ANR	1115866	Identifier	src		1115775	0					
ANR	1115867	Identifier	SLJIT_IMM		1115775	1					
ANR	1115868	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , RA , srcw ) )"	1580:2:49073:49116	1115775	1	True				
ANR	1115869	CallExpression	"FAIL_IF ( load_immediate ( compiler , RA , srcw ) )"		1115775	0					
ANR	1115870	Callee	FAIL_IF		1115775	0					
ANR	1115871	Identifier	FAIL_IF		1115775	0					
ANR	1115872	ArgumentList	"load_immediate ( compiler , RA , srcw )"		1115775	1					
ANR	1115873	Argument	"load_immediate ( compiler , RA , srcw )"		1115775	0					
ANR	1115874	CallExpression	"load_immediate ( compiler , RA , srcw )"		1115775	0					
ANR	1115875	Callee	load_immediate		1115775	0					
ANR	1115876	Identifier	load_immediate		1115775	0					
ANR	1115877	ArgumentList	compiler		1115775	1					
ANR	1115878	Argument	compiler		1115775	0					
ANR	1115879	Identifier	compiler		1115775	0					
ANR	1115880	Argument	RA		1115775	1					
ANR	1115881	Identifier	RA		1115775	0					
ANR	1115882	Argument	srcw		1115775	2					
ANR	1115883	Identifier	srcw		1115775	0					
ANR	1115884	ReturnStatement	return JR ( RA ) ;	1582:1:49120:49133	1115775	4	True				
ANR	1115885	CallExpression	JR ( RA )		1115775	0					
ANR	1115886	Callee	JR		1115775	0					
ANR	1115887	Identifier	JR		1115775	0					
ANR	1115888	ArgumentList	RA		1115775	1					
ANR	1115889	Argument	RA		1115775	0					
ANR	1115890	Identifier	RA		1115775	0					
ANR	1115891	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1115775	1					
ANR	1115892	Identifier	sljit_emit_fast_return		1115775	2					
ANR	1115893	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1115775	3					
ANR	1115894	Parameter	struct sljit_compiler * compiler	1567:57:48707:48737	1115775	0	True				
ANR	1115895	ParameterType	struct sljit_compiler *		1115775	0					
ANR	1115896	Identifier	compiler		1115775	1					
ANR	1115897	Parameter	sljit_si src	1567:90:48740:48751	1115775	1	True				
ANR	1115898	ParameterType	sljit_si		1115775	0					
ANR	1115899	Identifier	src		1115775	1					
ANR	1115900	Parameter	sljit_sw srcw	1567:104:48754:48766	1115775	2	True				
ANR	1115901	ParameterType	sljit_sw		1115775	0					
ANR	1115902	Identifier	srcw		1115775	1					
ANR	1115903	CFGEntryNode	ENTRY		1115775		True				
ANR	1115904	CFGExitNode	EXIT		1115775		True				
ANR	1115905	Symbol	ZERO		1115775						
ANR	1115906	Symbol	ADD		1115775						
ANR	1115907	Symbol	FAST_IS_REG		1115775						
ANR	1115908	Symbol	LOAD_DATA		1115775						
ANR	1115909	Symbol	src		1115775						
ANR	1115910	Symbol	srcw		1115775						
ANR	1115911	Symbol	SLJIT_MEM		1115775						
ANR	1115912	Symbol	JR		1115775						
ANR	1115913	Symbol	reg_map		1115775						
ANR	1115914	Symbol	emit_op_mem		1115775						
ANR	1115915	Symbol	* reg_map		1115775						
ANR	1115916	Symbol	* src		1115775						
ANR	1115917	Symbol	RA		1115775						
ANR	1115918	Symbol	SLJIT_IMM		1115775						
ANR	1115919	Symbol	check_sljit_emit_fast_return		1115775						
ANR	1115920	Symbol	load_immediate		1115775						
ANR	1115921	Symbol	compiler		1115775						
ANR	1115922	Symbol	WORD_DATA		1115775						
ANR	1115923	Function	emit_single_op	1585:0:49138:59420							
ANR	1115924	FunctionDef	"emit_single_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_sw src2)"		1115923	0					
ANR	1115925	CompoundStatement		1586:0:49288:59420	1115923	0					
ANR	1115926	IdentifierDeclStatement	sljit_si overflow_ra = 0 ;	1587:1:49291:49315	1115923	0	True				
ANR	1115927	IdentifierDecl	overflow_ra = 0		1115923	0					
ANR	1115928	IdentifierDeclType	sljit_si		1115923	0					
ANR	1115929	Identifier	overflow_ra		1115923	1					
ANR	1115930	AssignmentExpression	overflow_ra = 0		1115923	2		=			
ANR	1115931	Identifier	overflow_ra		1115923	0					
ANR	1115932	PrimaryExpression	0		1115923	1					
ANR	1115933	SwitchStatement	switch ( GET_OPCODE ( op ) )		1115923	1					
ANR	1115934	Condition	GET_OPCODE ( op )	1589:9:49327:49340	1115923	0	True				
ANR	1115935	CallExpression	GET_OPCODE ( op )		1115923	0					
ANR	1115936	Callee	GET_OPCODE		1115923	0					
ANR	1115937	Identifier	GET_OPCODE		1115923	0					
ANR	1115938	ArgumentList	op		1115923	1					
ANR	1115939	Argument	op		1115923	0					
ANR	1115940	Identifier	op		1115923	0					
ANR	1115941	CompoundStatement		4:25:54:54	1115923	1					
ANR	1115942	Label	case SLJIT_MOV :	1590:1:49346:49360	1115923	0	True				
ANR	1115943	Identifier	SLJIT_MOV		1115923	0					
ANR	1115944	Label	case SLJIT_MOV_P :	1591:1:49363:49379	1115923	1	True				
ANR	1115945	Identifier	SLJIT_MOV_P		1115923	0					
ANR	1115946	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1592:2:49383:49436	1115923	2	True				
ANR	1115947	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1115923	0					
ANR	1115948	Callee	SLJIT_ASSERT		1115923	0					
ANR	1115949	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1115950	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	1					
ANR	1115951	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0					
ANR	1115952	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0		&&			
ANR	1115953	EqualityExpression	src1 == TMP_REG1		1115923	0		==			
ANR	1115954	Identifier	src1		1115923	0					
ANR	1115955	Identifier	TMP_REG1		1115923	1					
ANR	1115956	UnaryOperationExpression	! ( flags & SRC2_IMM )		1115923	1					
ANR	1115957	UnaryOperator	!		1115923	0					
ANR	1115958	BitAndExpression	flags & SRC2_IMM		1115923	1		&			
ANR	1115959	Identifier	flags		1115923	0					
ANR	1115960	Identifier	SRC2_IMM		1115923	1					
ANR	1115961	IfStatement	if ( dst != src2 )		1115923	3					
ANR	1115962	Condition	dst != src2	1593:6:49444:49454	1115923	0	True				
ANR	1115963	EqualityExpression	dst != src2		1115923	0		!=			
ANR	1115964	Identifier	dst		1115923	0					
ANR	1115965	Identifier	src2		1115923	1					
ANR	1115966	ReturnStatement	"return ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO ) ;"	1594:3:49460:49505	1115923	1	True				
ANR	1115967	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO )"		1115923	0					
ANR	1115968	Callee	ADD		1115923	0					
ANR	1115969	Identifier	ADD		1115923	0					
ANR	1115970	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1115971	Argument	reg_map [ dst ]		1115923	0					
ANR	1115972	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1115973	Identifier	reg_map		1115923	0					
ANR	1115974	Identifier	dst		1115923	1					
ANR	1115975	Argument	reg_map [ src2 ]		1115923	1					
ANR	1115976	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1115977	Identifier	reg_map		1115923	0					
ANR	1115978	Identifier	src2		1115923	1					
ANR	1115979	Argument	ZERO		1115923	2					
ANR	1115980	Identifier	ZERO		1115923	0					
ANR	1115981	ReturnStatement	return SLJIT_SUCCESS ;	1595:2:49509:49529	1115923	4	True				
ANR	1115982	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1115983	Label	case SLJIT_MOV_UI :	1597:1:49533:49550	1115923	5	True				
ANR	1115984	Identifier	SLJIT_MOV_UI		1115923	0					
ANR	1115985	Label	case SLJIT_MOV_SI :	1598:1:49553:49570	1115923	6	True				
ANR	1115986	Identifier	SLJIT_MOV_SI		1115923	0					
ANR	1115987	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1599:2:49574:49627	1115923	7	True				
ANR	1115988	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1115923	0					
ANR	1115989	Callee	SLJIT_ASSERT		1115923	0					
ANR	1115990	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1115991	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	1					
ANR	1115992	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0					
ANR	1115993	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0		&&			
ANR	1115994	EqualityExpression	src1 == TMP_REG1		1115923	0		==			
ANR	1115995	Identifier	src1		1115923	0					
ANR	1115996	Identifier	TMP_REG1		1115923	1					
ANR	1115997	UnaryOperationExpression	! ( flags & SRC2_IMM )		1115923	1					
ANR	1115998	UnaryOperator	!		1115923	0					
ANR	1115999	BitAndExpression	flags & SRC2_IMM		1115923	1		&			
ANR	1116000	Identifier	flags		1115923	0					
ANR	1116001	Identifier	SRC2_IMM		1115923	1					
ANR	1116002	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1115923	8					
ANR	1116003	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	1600:6:49635:49696	1115923	0	True				
ANR	1116004	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1115923	0		==			
ANR	1116005	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1115923	0		&			
ANR	1116006	Identifier	flags		1115923	0					
ANR	1116007	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1115923	1		|			
ANR	1116008	Identifier	REG_DEST		1115923	0					
ANR	1116009	Identifier	REG2_SOURCE		1115923	1					
ANR	1116010	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1115923	1		|			
ANR	1116011	Identifier	REG_DEST		1115923	0					
ANR	1116012	Identifier	REG2_SOURCE		1115923	1					
ANR	1116013	CompoundStatement		15:70:410:410	1115923	1					
ANR	1116014	IfStatement	if ( op == SLJIT_MOV_SI )		1115923	0					
ANR	1116015	Condition	op == SLJIT_MOV_SI	1601:7:49708:49725	1115923	0	True				
ANR	1116016	EqualityExpression	op == SLJIT_MOV_SI		1115923	0		==			
ANR	1116017	Identifier	op		1115923	0					
ANR	1116018	Identifier	SLJIT_MOV_SI		1115923	1					
ANR	1116019	ReturnStatement	"return BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 ) ;"	1602:4:49732:49781	1115923	1	True				
ANR	1116020	CallExpression	"BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 )"		1115923	0					
ANR	1116021	Callee	BFEXTS		1115923	0					
ANR	1116022	Identifier	BFEXTS		1115923	0					
ANR	1116023	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116024	Argument	reg_map [ dst ]		1115923	0					
ANR	1116025	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116026	Identifier	reg_map		1115923	0					
ANR	1116027	Identifier	dst		1115923	1					
ANR	1116028	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116029	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116030	Identifier	reg_map		1115923	0					
ANR	1116031	Identifier	src2		1115923	1					
ANR	1116032	Argument	0		1115923	2					
ANR	1116033	PrimaryExpression	0		1115923	0					
ANR	1116034	Argument	31		1115923	3					
ANR	1116035	PrimaryExpression	31		1115923	0					
ANR	1116036	ReturnStatement	"return BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 ) ;"	1604:3:49787:49836	1115923	1	True				
ANR	1116037	CallExpression	"BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 )"		1115923	0					
ANR	1116038	Callee	BFEXTU		1115923	0					
ANR	1116039	Identifier	BFEXTU		1115923	0					
ANR	1116040	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116041	Argument	reg_map [ dst ]		1115923	0					
ANR	1116042	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116043	Identifier	reg_map		1115923	0					
ANR	1116044	Identifier	dst		1115923	1					
ANR	1116045	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116046	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116047	Identifier	reg_map		1115923	0					
ANR	1116048	Identifier	src2		1115923	1					
ANR	1116049	Argument	0		1115923	2					
ANR	1116050	PrimaryExpression	0		1115923	0					
ANR	1116051	Argument	31		1115923	3					
ANR	1116052	PrimaryExpression	31		1115923	0					
ANR	1116053	ElseStatement	else		1115923	0					
ANR	1116054	IfStatement	if ( dst != src2 )		1115923	0					
ANR	1116055	Condition	dst != src2	1605:13:49851:49861	1115923	0	True				
ANR	1116056	EqualityExpression	dst != src2		1115923	0		!=			
ANR	1116057	Identifier	dst		1115923	0					
ANR	1116058	Identifier	src2		1115923	1					
ANR	1116059	CompoundStatement		20:26:575:575	1115923	1					
ANR	1116060	ExpressionStatement	SLJIT_ASSERT ( src2 == 0 )	1606:3:49869:49892	1115923	0	True				
ANR	1116061	CallExpression	SLJIT_ASSERT ( src2 == 0 )		1115923	0					
ANR	1116062	Callee	SLJIT_ASSERT		1115923	0					
ANR	1116063	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1116064	ArgumentList	src2 == 0		1115923	1					
ANR	1116065	Argument	src2 == 0		1115923	0					
ANR	1116066	EqualityExpression	src2 == 0		1115923	0		==			
ANR	1116067	Identifier	src2		1115923	0					
ANR	1116068	PrimaryExpression	0		1115923	1					
ANR	1116069	ReturnStatement	"return ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO ) ;"	1607:3:49897:49942	1115923	1	True				
ANR	1116070	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO )"		1115923	0					
ANR	1116071	Callee	ADD		1115923	0					
ANR	1116072	Identifier	ADD		1115923	0					
ANR	1116073	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116074	Argument	reg_map [ dst ]		1115923	0					
ANR	1116075	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116076	Identifier	reg_map		1115923	0					
ANR	1116077	Identifier	dst		1115923	1					
ANR	1116078	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116079	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116080	Identifier	reg_map		1115923	0					
ANR	1116081	Identifier	src2		1115923	1					
ANR	1116082	Argument	ZERO		1115923	2					
ANR	1116083	Identifier	ZERO		1115923	0					
ANR	1116084	ReturnStatement	return SLJIT_SUCCESS ;	1610:2:49951:49971	1115923	9	True				
ANR	1116085	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1116086	Label	case SLJIT_MOV_UB :	1612:1:49975:49992	1115923	10	True				
ANR	1116087	Identifier	SLJIT_MOV_UB		1115923	0					
ANR	1116088	Label	case SLJIT_MOV_SB :	1613:1:49995:50012	1115923	11	True				
ANR	1116089	Identifier	SLJIT_MOV_SB		1115923	0					
ANR	1116090	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1614:2:50016:50069	1115923	12	True				
ANR	1116091	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1115923	0					
ANR	1116092	Callee	SLJIT_ASSERT		1115923	0					
ANR	1116093	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1116094	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	1					
ANR	1116095	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0					
ANR	1116096	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0		&&			
ANR	1116097	EqualityExpression	src1 == TMP_REG1		1115923	0		==			
ANR	1116098	Identifier	src1		1115923	0					
ANR	1116099	Identifier	TMP_REG1		1115923	1					
ANR	1116100	UnaryOperationExpression	! ( flags & SRC2_IMM )		1115923	1					
ANR	1116101	UnaryOperator	!		1115923	0					
ANR	1116102	BitAndExpression	flags & SRC2_IMM		1115923	1		&			
ANR	1116103	Identifier	flags		1115923	0					
ANR	1116104	Identifier	SRC2_IMM		1115923	1					
ANR	1116105	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1115923	13					
ANR	1116106	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	1615:6:50077:50138	1115923	0	True				
ANR	1116107	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1115923	0		==			
ANR	1116108	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1115923	0		&			
ANR	1116109	Identifier	flags		1115923	0					
ANR	1116110	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1115923	1		|			
ANR	1116111	Identifier	REG_DEST		1115923	0					
ANR	1116112	Identifier	REG2_SOURCE		1115923	1					
ANR	1116113	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1115923	1		|			
ANR	1116114	Identifier	REG_DEST		1115923	0					
ANR	1116115	Identifier	REG2_SOURCE		1115923	1					
ANR	1116116	CompoundStatement		30:70:852:852	1115923	1					
ANR	1116117	IfStatement	if ( op == SLJIT_MOV_SB )		1115923	0					
ANR	1116118	Condition	op == SLJIT_MOV_SB	1616:7:50150:50167	1115923	0	True				
ANR	1116119	EqualityExpression	op == SLJIT_MOV_SB		1115923	0		==			
ANR	1116120	Identifier	op		1115923	0					
ANR	1116121	Identifier	SLJIT_MOV_SB		1115923	1					
ANR	1116122	ReturnStatement	"return BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 ) ;"	1617:4:50174:50222	1115923	1	True				
ANR	1116123	CallExpression	"BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 )"		1115923	0					
ANR	1116124	Callee	BFEXTS		1115923	0					
ANR	1116125	Identifier	BFEXTS		1115923	0					
ANR	1116126	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116127	Argument	reg_map [ dst ]		1115923	0					
ANR	1116128	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116129	Identifier	reg_map		1115923	0					
ANR	1116130	Identifier	dst		1115923	1					
ANR	1116131	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116132	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116133	Identifier	reg_map		1115923	0					
ANR	1116134	Identifier	src2		1115923	1					
ANR	1116135	Argument	0		1115923	2					
ANR	1116136	PrimaryExpression	0		1115923	0					
ANR	1116137	Argument	7		1115923	3					
ANR	1116138	PrimaryExpression	7		1115923	0					
ANR	1116139	ReturnStatement	"return BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 ) ;"	1619:3:50228:50276	1115923	1	True				
ANR	1116140	CallExpression	"BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 )"		1115923	0					
ANR	1116141	Callee	BFEXTU		1115923	0					
ANR	1116142	Identifier	BFEXTU		1115923	0					
ANR	1116143	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116144	Argument	reg_map [ dst ]		1115923	0					
ANR	1116145	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116146	Identifier	reg_map		1115923	0					
ANR	1116147	Identifier	dst		1115923	1					
ANR	1116148	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116149	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116150	Identifier	reg_map		1115923	0					
ANR	1116151	Identifier	src2		1115923	1					
ANR	1116152	Argument	0		1115923	2					
ANR	1116153	PrimaryExpression	0		1115923	0					
ANR	1116154	Argument	7		1115923	3					
ANR	1116155	PrimaryExpression	7		1115923	0					
ANR	1116156	ElseStatement	else		1115923	0					
ANR	1116157	IfStatement	if ( dst != src2 )		1115923	0					
ANR	1116158	Condition	dst != src2	1620:13:50291:50301	1115923	0	True				
ANR	1116159	EqualityExpression	dst != src2		1115923	0		!=			
ANR	1116160	Identifier	dst		1115923	0					
ANR	1116161	Identifier	src2		1115923	1					
ANR	1116162	CompoundStatement		35:26:1015:1015	1115923	1					
ANR	1116163	ExpressionStatement	SLJIT_ASSERT ( src2 == 0 )	1621:3:50309:50332	1115923	0	True				
ANR	1116164	CallExpression	SLJIT_ASSERT ( src2 == 0 )		1115923	0					
ANR	1116165	Callee	SLJIT_ASSERT		1115923	0					
ANR	1116166	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1116167	ArgumentList	src2 == 0		1115923	1					
ANR	1116168	Argument	src2 == 0		1115923	0					
ANR	1116169	EqualityExpression	src2 == 0		1115923	0		==			
ANR	1116170	Identifier	src2		1115923	0					
ANR	1116171	PrimaryExpression	0		1115923	1					
ANR	1116172	ReturnStatement	"return ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO ) ;"	1622:3:50337:50382	1115923	1	True				
ANR	1116173	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO )"		1115923	0					
ANR	1116174	Callee	ADD		1115923	0					
ANR	1116175	Identifier	ADD		1115923	0					
ANR	1116176	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116177	Argument	reg_map [ dst ]		1115923	0					
ANR	1116178	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116179	Identifier	reg_map		1115923	0					
ANR	1116180	Identifier	dst		1115923	1					
ANR	1116181	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116182	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116183	Identifier	reg_map		1115923	0					
ANR	1116184	Identifier	src2		1115923	1					
ANR	1116185	Argument	ZERO		1115923	2					
ANR	1116186	Identifier	ZERO		1115923	0					
ANR	1116187	ReturnStatement	return SLJIT_SUCCESS ;	1625:2:50391:50411	1115923	14	True				
ANR	1116188	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1116189	Label	case SLJIT_MOV_UH :	1627:1:50415:50432	1115923	15	True				
ANR	1116190	Identifier	SLJIT_MOV_UH		1115923	0					
ANR	1116191	Label	case SLJIT_MOV_SH :	1628:1:50435:50452	1115923	16	True				
ANR	1116192	Identifier	SLJIT_MOV_SH		1115923	0					
ANR	1116193	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1629:2:50456:50509	1115923	17	True				
ANR	1116194	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1115923	0					
ANR	1116195	Callee	SLJIT_ASSERT		1115923	0					
ANR	1116196	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1116197	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	1					
ANR	1116198	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0					
ANR	1116199	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0		&&			
ANR	1116200	EqualityExpression	src1 == TMP_REG1		1115923	0		==			
ANR	1116201	Identifier	src1		1115923	0					
ANR	1116202	Identifier	TMP_REG1		1115923	1					
ANR	1116203	UnaryOperationExpression	! ( flags & SRC2_IMM )		1115923	1					
ANR	1116204	UnaryOperator	!		1115923	0					
ANR	1116205	BitAndExpression	flags & SRC2_IMM		1115923	1		&			
ANR	1116206	Identifier	flags		1115923	0					
ANR	1116207	Identifier	SRC2_IMM		1115923	1					
ANR	1116208	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1115923	18					
ANR	1116209	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	1630:6:50517:50578	1115923	0	True				
ANR	1116210	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1115923	0		==			
ANR	1116211	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1115923	0		&			
ANR	1116212	Identifier	flags		1115923	0					
ANR	1116213	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1115923	1		|			
ANR	1116214	Identifier	REG_DEST		1115923	0					
ANR	1116215	Identifier	REG2_SOURCE		1115923	1					
ANR	1116216	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1115923	1		|			
ANR	1116217	Identifier	REG_DEST		1115923	0					
ANR	1116218	Identifier	REG2_SOURCE		1115923	1					
ANR	1116219	CompoundStatement		45:70:1292:1292	1115923	1					
ANR	1116220	IfStatement	if ( op == SLJIT_MOV_SH )		1115923	0					
ANR	1116221	Condition	op == SLJIT_MOV_SH	1631:7:50590:50607	1115923	0	True				
ANR	1116222	EqualityExpression	op == SLJIT_MOV_SH		1115923	0		==			
ANR	1116223	Identifier	op		1115923	0					
ANR	1116224	Identifier	SLJIT_MOV_SH		1115923	1					
ANR	1116225	ReturnStatement	"return BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 ) ;"	1632:4:50614:50663	1115923	1	True				
ANR	1116226	CallExpression	"BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 )"		1115923	0					
ANR	1116227	Callee	BFEXTS		1115923	0					
ANR	1116228	Identifier	BFEXTS		1115923	0					
ANR	1116229	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116230	Argument	reg_map [ dst ]		1115923	0					
ANR	1116231	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116232	Identifier	reg_map		1115923	0					
ANR	1116233	Identifier	dst		1115923	1					
ANR	1116234	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116235	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116236	Identifier	reg_map		1115923	0					
ANR	1116237	Identifier	src2		1115923	1					
ANR	1116238	Argument	0		1115923	2					
ANR	1116239	PrimaryExpression	0		1115923	0					
ANR	1116240	Argument	15		1115923	3					
ANR	1116241	PrimaryExpression	15		1115923	0					
ANR	1116242	ReturnStatement	"return BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 ) ;"	1634:3:50669:50718	1115923	1	True				
ANR	1116243	CallExpression	"BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 )"		1115923	0					
ANR	1116244	Callee	BFEXTU		1115923	0					
ANR	1116245	Identifier	BFEXTU		1115923	0					
ANR	1116246	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116247	Argument	reg_map [ dst ]		1115923	0					
ANR	1116248	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116249	Identifier	reg_map		1115923	0					
ANR	1116250	Identifier	dst		1115923	1					
ANR	1116251	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116252	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116253	Identifier	reg_map		1115923	0					
ANR	1116254	Identifier	src2		1115923	1					
ANR	1116255	Argument	0		1115923	2					
ANR	1116256	PrimaryExpression	0		1115923	0					
ANR	1116257	Argument	15		1115923	3					
ANR	1116258	PrimaryExpression	15		1115923	0					
ANR	1116259	ElseStatement	else		1115923	0					
ANR	1116260	IfStatement	if ( dst != src2 )		1115923	0					
ANR	1116261	Condition	dst != src2	1635:13:50733:50743	1115923	0	True				
ANR	1116262	EqualityExpression	dst != src2		1115923	0		!=			
ANR	1116263	Identifier	dst		1115923	0					
ANR	1116264	Identifier	src2		1115923	1					
ANR	1116265	CompoundStatement		50:26:1457:1457	1115923	1					
ANR	1116266	ExpressionStatement	SLJIT_ASSERT ( src2 == 0 )	1636:3:50751:50774	1115923	0	True				
ANR	1116267	CallExpression	SLJIT_ASSERT ( src2 == 0 )		1115923	0					
ANR	1116268	Callee	SLJIT_ASSERT		1115923	0					
ANR	1116269	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1116270	ArgumentList	src2 == 0		1115923	1					
ANR	1116271	Argument	src2 == 0		1115923	0					
ANR	1116272	EqualityExpression	src2 == 0		1115923	0		==			
ANR	1116273	Identifier	src2		1115923	0					
ANR	1116274	PrimaryExpression	0		1115923	1					
ANR	1116275	ReturnStatement	"return ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO ) ;"	1637:3:50779:50824	1115923	1	True				
ANR	1116276	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO )"		1115923	0					
ANR	1116277	Callee	ADD		1115923	0					
ANR	1116278	Identifier	ADD		1115923	0					
ANR	1116279	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116280	Argument	reg_map [ dst ]		1115923	0					
ANR	1116281	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116282	Identifier	reg_map		1115923	0					
ANR	1116283	Identifier	dst		1115923	1					
ANR	1116284	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116285	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116286	Identifier	reg_map		1115923	0					
ANR	1116287	Identifier	src2		1115923	1					
ANR	1116288	Argument	ZERO		1115923	2					
ANR	1116289	Identifier	ZERO		1115923	0					
ANR	1116290	ReturnStatement	return SLJIT_SUCCESS ;	1640:2:50833:50853	1115923	19	True				
ANR	1116291	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1116292	Label	case SLJIT_NOT :	1642:1:50857:50871	1115923	20	True				
ANR	1116293	Identifier	SLJIT_NOT		1115923	0					
ANR	1116294	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1643:2:50875:50928	1115923	21	True				
ANR	1116295	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1115923	0					
ANR	1116296	Callee	SLJIT_ASSERT		1115923	0					
ANR	1116297	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1116298	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	1					
ANR	1116299	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0					
ANR	1116300	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0		&&			
ANR	1116301	EqualityExpression	src1 == TMP_REG1		1115923	0		==			
ANR	1116302	Identifier	src1		1115923	0					
ANR	1116303	Identifier	TMP_REG1		1115923	1					
ANR	1116304	UnaryOperationExpression	! ( flags & SRC2_IMM )		1115923	1					
ANR	1116305	UnaryOperator	!		1115923	0					
ANR	1116306	BitAndExpression	flags & SRC2_IMM		1115923	1		&			
ANR	1116307	Identifier	flags		1115923	0					
ANR	1116308	Identifier	SRC2_IMM		1115923	1					
ANR	1116309	IfStatement	if ( op & SLJIT_SET_E )		1115923	22					
ANR	1116310	Condition	op & SLJIT_SET_E	1644:6:50936:50951	1115923	0	True				
ANR	1116311	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1116312	Identifier	op		1115923	0					
ANR	1116313	Identifier	SLJIT_SET_E		1115923	1					
ANR	1116314	ExpressionStatement	"FAIL_IF ( NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] ) )"	1645:3:50957:51011	1115923	1	True				
ANR	1116315	CallExpression	"FAIL_IF ( NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116316	Callee	FAIL_IF		1115923	0					
ANR	1116317	Identifier	FAIL_IF		1115923	0					
ANR	1116318	ArgumentList	"NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1116319	Argument	"NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116320	CallExpression	"NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116321	Callee	NOR		1115923	0					
ANR	1116322	Identifier	NOR		1115923	0					
ANR	1116323	ArgumentList	EQUAL_FLAG		1115923	1					
ANR	1116324	Argument	EQUAL_FLAG		1115923	0					
ANR	1116325	Identifier	EQUAL_FLAG		1115923	0					
ANR	1116326	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116327	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116328	Identifier	reg_map		1115923	0					
ANR	1116329	Identifier	src2		1115923	1					
ANR	1116330	Argument	reg_map [ src2 ]		1115923	2					
ANR	1116331	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116332	Identifier	reg_map		1115923	0					
ANR	1116333	Identifier	src2		1115923	1					
ANR	1116334	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	23					
ANR	1116335	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1646:6:51019:51042	1115923	0	True				
ANR	1116336	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1116337	Callee	CHECK_FLAGS		1115923	0					
ANR	1116338	Identifier	CHECK_FLAGS		1115923	0					
ANR	1116339	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1116340	Argument	SLJIT_SET_E		1115923	0					
ANR	1116341	Identifier	SLJIT_SET_E		1115923	0					
ANR	1116342	ExpressionStatement	"FAIL_IF ( NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] ) )"	1647:3:51048:51104	1115923	1	True				
ANR	1116343	CallExpression	"FAIL_IF ( NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116344	Callee	FAIL_IF		1115923	0					
ANR	1116345	Identifier	FAIL_IF		1115923	0					
ANR	1116346	ArgumentList	"NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1116347	Argument	"NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116348	CallExpression	"NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116349	Callee	NOR		1115923	0					
ANR	1116350	Identifier	NOR		1115923	0					
ANR	1116351	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116352	Argument	reg_map [ dst ]		1115923	0					
ANR	1116353	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116354	Identifier	reg_map		1115923	0					
ANR	1116355	Identifier	dst		1115923	1					
ANR	1116356	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116357	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116358	Identifier	reg_map		1115923	0					
ANR	1116359	Identifier	src2		1115923	1					
ANR	1116360	Argument	reg_map [ src2 ]		1115923	2					
ANR	1116361	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116362	Identifier	reg_map		1115923	0					
ANR	1116363	Identifier	src2		1115923	1					
ANR	1116364	ReturnStatement	return SLJIT_SUCCESS ;	1649:2:51109:51129	1115923	24	True				
ANR	1116365	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1116366	Label	case SLJIT_CLZ :	1651:1:51133:51147	1115923	25	True				
ANR	1116367	Identifier	SLJIT_CLZ		1115923	0					
ANR	1116368	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1652:2:51151:51204	1115923	26	True				
ANR	1116369	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1115923	0					
ANR	1116370	Callee	SLJIT_ASSERT		1115923	0					
ANR	1116371	Identifier	SLJIT_ASSERT		1115923	0					
ANR	1116372	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	1					
ANR	1116373	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0					
ANR	1116374	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1115923	0		&&			
ANR	1116375	EqualityExpression	src1 == TMP_REG1		1115923	0		==			
ANR	1116376	Identifier	src1		1115923	0					
ANR	1116377	Identifier	TMP_REG1		1115923	1					
ANR	1116378	UnaryOperationExpression	! ( flags & SRC2_IMM )		1115923	1					
ANR	1116379	UnaryOperator	!		1115923	0					
ANR	1116380	BitAndExpression	flags & SRC2_IMM		1115923	1		&			
ANR	1116381	Identifier	flags		1115923	0					
ANR	1116382	Identifier	SRC2_IMM		1115923	1					
ANR	1116383	IfStatement	if ( op & SLJIT_SET_E )		1115923	27					
ANR	1116384	Condition	op & SLJIT_SET_E	1653:6:51212:51227	1115923	0	True				
ANR	1116385	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1116386	Identifier	op		1115923	0					
ANR	1116387	Identifier	SLJIT_SET_E		1115923	1					
ANR	1116388	ExpressionStatement	"FAIL_IF ( CLZ ( EQUAL_FLAG , reg_map [ src2 ] ) )"	1654:3:51233:51272	1115923	1	True				
ANR	1116389	CallExpression	"FAIL_IF ( CLZ ( EQUAL_FLAG , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116390	Callee	FAIL_IF		1115923	0					
ANR	1116391	Identifier	FAIL_IF		1115923	0					
ANR	1116392	ArgumentList	"CLZ ( EQUAL_FLAG , reg_map [ src2 ] )"		1115923	1					
ANR	1116393	Argument	"CLZ ( EQUAL_FLAG , reg_map [ src2 ] )"		1115923	0					
ANR	1116394	CallExpression	"CLZ ( EQUAL_FLAG , reg_map [ src2 ] )"		1115923	0					
ANR	1116395	Callee	CLZ		1115923	0					
ANR	1116396	Identifier	CLZ		1115923	0					
ANR	1116397	ArgumentList	EQUAL_FLAG		1115923	1					
ANR	1116398	Argument	EQUAL_FLAG		1115923	0					
ANR	1116399	Identifier	EQUAL_FLAG		1115923	0					
ANR	1116400	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116401	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116402	Identifier	reg_map		1115923	0					
ANR	1116403	Identifier	src2		1115923	1					
ANR	1116404	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	28					
ANR	1116405	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1655:6:51280:51303	1115923	0	True				
ANR	1116406	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1116407	Callee	CHECK_FLAGS		1115923	0					
ANR	1116408	Identifier	CHECK_FLAGS		1115923	0					
ANR	1116409	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1116410	Argument	SLJIT_SET_E		1115923	0					
ANR	1116411	Identifier	SLJIT_SET_E		1115923	0					
ANR	1116412	ExpressionStatement	"FAIL_IF ( CLZ ( reg_map [ dst ] , reg_map [ src2 ] ) )"	1656:3:51309:51350	1115923	1	True				
ANR	1116413	CallExpression	"FAIL_IF ( CLZ ( reg_map [ dst ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116414	Callee	FAIL_IF		1115923	0					
ANR	1116415	Identifier	FAIL_IF		1115923	0					
ANR	1116416	ArgumentList	"CLZ ( reg_map [ dst ] , reg_map [ src2 ] )"		1115923	1					
ANR	1116417	Argument	"CLZ ( reg_map [ dst ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116418	CallExpression	"CLZ ( reg_map [ dst ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116419	Callee	CLZ		1115923	0					
ANR	1116420	Identifier	CLZ		1115923	0					
ANR	1116421	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116422	Argument	reg_map [ dst ]		1115923	0					
ANR	1116423	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116424	Identifier	reg_map		1115923	0					
ANR	1116425	Identifier	dst		1115923	1					
ANR	1116426	Argument	reg_map [ src2 ]		1115923	1					
ANR	1116427	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116428	Identifier	reg_map		1115923	0					
ANR	1116429	Identifier	src2		1115923	1					
ANR	1116430	ReturnStatement	return SLJIT_SUCCESS ;	1658:2:51355:51375	1115923	29	True				
ANR	1116431	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1116432	Label	case SLJIT_ADD :	1660:1:51379:51393	1115923	30	True				
ANR	1116433	Identifier	SLJIT_ADD		1115923	0					
ANR	1116434	IfStatement	if ( flags & SRC2_IMM )		1115923	31					
ANR	1116435	Condition	flags & SRC2_IMM	1661:6:51401:51416	1115923	0	True				
ANR	1116436	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1116437	Identifier	flags		1115923	0					
ANR	1116438	Identifier	SRC2_IMM		1115923	1					
ANR	1116439	CompoundStatement		76:24:2130:2130	1115923	1					
ANR	1116440	IfStatement	if ( op & SLJIT_SET_O )		1115923	0					
ANR	1116441	Condition	op & SLJIT_SET_O	1662:7:51428:51443	1115923	0	True				
ANR	1116442	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1116443	Identifier	op		1115923	0					
ANR	1116444	Identifier	SLJIT_SET_O		1115923	1					
ANR	1116445	CompoundStatement		77:25:2157:2157	1115923	1					
ANR	1116446	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"	1663:4:51452:51496	1115923	0	True				
ANR	1116447	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"		1115923	0					
ANR	1116448	Callee	FAIL_IF		1115923	0					
ANR	1116449	Identifier	FAIL_IF		1115923	0					
ANR	1116450	ArgumentList	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1115923	1					
ANR	1116451	Argument	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1115923	0					
ANR	1116452	CallExpression	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1115923	0					
ANR	1116453	Callee	SHRUI		1115923	0					
ANR	1116454	Identifier	SHRUI		1115923	0					
ANR	1116455	ArgumentList	TMP_EREG1		1115923	1					
ANR	1116456	Argument	TMP_EREG1		1115923	0					
ANR	1116457	Identifier	TMP_EREG1		1115923	0					
ANR	1116458	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116459	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116460	Identifier	reg_map		1115923	0					
ANR	1116461	Identifier	src1		1115923	1					
ANR	1116462	Argument	63		1115923	2					
ANR	1116463	PrimaryExpression	63		1115923	0					
ANR	1116464	IfStatement	if ( src2 < 0 )		1115923	1					
ANR	1116465	Condition	src2 < 0	1664:8:51506:51513	1115923	0	True				
ANR	1116466	RelationalExpression	src2 < 0		1115923	0		<			
ANR	1116467	Identifier	src2		1115923	0					
ANR	1116468	PrimaryExpression	0		1115923	1					
ANR	1116469	ExpressionStatement	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"	1665:5:51521:51559	1115923	1	True				
ANR	1116470	CallExpression	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"		1115923	0					
ANR	1116471	Callee	FAIL_IF		1115923	0					
ANR	1116472	Identifier	FAIL_IF		1115923	0					
ANR	1116473	ArgumentList	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1115923	1					
ANR	1116474	Argument	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1115923	0					
ANR	1116475	CallExpression	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1115923	0					
ANR	1116476	Callee	XORI		1115923	0					
ANR	1116477	Identifier	XORI		1115923	0					
ANR	1116478	ArgumentList	TMP_EREG1		1115923	1					
ANR	1116479	Argument	TMP_EREG1		1115923	0					
ANR	1116480	Identifier	TMP_EREG1		1115923	0					
ANR	1116481	Argument	TMP_EREG1		1115923	1					
ANR	1116482	Identifier	TMP_EREG1		1115923	0					
ANR	1116483	Argument	1		1115923	2					
ANR	1116484	PrimaryExpression	1		1115923	0					
ANR	1116485	IfStatement	if ( op & SLJIT_SET_E )		1115923	1					
ANR	1116486	Condition	op & SLJIT_SET_E	1668:7:51574:51589	1115923	0	True				
ANR	1116487	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1116488	Identifier	op		1115923	0					
ANR	1116489	Identifier	SLJIT_SET_E		1115923	1					
ANR	1116490	ExpressionStatement	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 ) )"	1669:4:51596:51643	1115923	1	True				
ANR	1116491	CallExpression	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 ) )"		1115923	0					
ANR	1116492	Callee	FAIL_IF		1115923	0					
ANR	1116493	Identifier	FAIL_IF		1115923	0					
ANR	1116494	ArgumentList	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 )"		1115923	1					
ANR	1116495	Argument	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116496	CallExpression	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116497	Callee	ADDLI		1115923	0					
ANR	1116498	Identifier	ADDLI		1115923	0					
ANR	1116499	ArgumentList	EQUAL_FLAG		1115923	1					
ANR	1116500	Argument	EQUAL_FLAG		1115923	0					
ANR	1116501	Identifier	EQUAL_FLAG		1115923	0					
ANR	1116502	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116503	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116504	Identifier	reg_map		1115923	0					
ANR	1116505	Identifier	src1		1115923	1					
ANR	1116506	Argument	src2		1115923	2					
ANR	1116507	Identifier	src2		1115923	0					
ANR	1116508	IfStatement	if ( op & SLJIT_SET_C )		1115923	2					
ANR	1116509	Condition	op & SLJIT_SET_C	1671:7:51653:51668	1115923	0	True				
ANR	1116510	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1116511	Identifier	op		1115923	0					
ANR	1116512	Identifier	SLJIT_SET_C		1115923	1					
ANR	1116513	CompoundStatement		86:25:2382:2382	1115923	1					
ANR	1116514	IfStatement	if ( src2 >= 0 )		1115923	0					
ANR	1116515	Condition	src2 >= 0	1672:8:51681:51689	1115923	0	True				
ANR	1116516	RelationalExpression	src2 >= 0		1115923	0		>=			
ANR	1116517	Identifier	src2		1115923	0					
ANR	1116518	PrimaryExpression	0		1115923	1					
ANR	1116519	ExpressionStatement	"FAIL_IF ( ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 ) )"	1673:5:51697:51742	1115923	1	True				
ANR	1116520	CallExpression	"FAIL_IF ( ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 ) )"		1115923	0					
ANR	1116521	Callee	FAIL_IF		1115923	0					
ANR	1116522	Identifier	FAIL_IF		1115923	0					
ANR	1116523	ArgumentList	"ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 )"		1115923	1					
ANR	1116524	Argument	"ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116525	CallExpression	"ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116526	Callee	ORI		1115923	0					
ANR	1116527	Identifier	ORI		1115923	0					
ANR	1116528	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1116529	Argument	ULESS_FLAG		1115923	0					
ANR	1116530	Identifier	ULESS_FLAG		1115923	0					
ANR	1116531	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116532	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116533	Identifier	reg_map		1115923	0					
ANR	1116534	Identifier	src1		1115923	1					
ANR	1116535	Argument	src2		1115923	2					
ANR	1116536	Identifier	src2		1115923	0					
ANR	1116537	ElseStatement	else		1115923	0					
ANR	1116538	CompoundStatement		89:9:2464:2464	1115923	0					
ANR	1116539	ExpressionStatement	"FAIL_IF ( ADDLI ( ULESS_FLAG , ZERO , src2 ) )"	1675:5:51760:51798	1115923	0	True				
ANR	1116540	CallExpression	"FAIL_IF ( ADDLI ( ULESS_FLAG , ZERO , src2 ) )"		1115923	0					
ANR	1116541	Callee	FAIL_IF		1115923	0					
ANR	1116542	Identifier	FAIL_IF		1115923	0					
ANR	1116543	ArgumentList	"ADDLI ( ULESS_FLAG , ZERO , src2 )"		1115923	1					
ANR	1116544	Argument	"ADDLI ( ULESS_FLAG , ZERO , src2 )"		1115923	0					
ANR	1116545	CallExpression	"ADDLI ( ULESS_FLAG , ZERO , src2 )"		1115923	0					
ANR	1116546	Callee	ADDLI		1115923	0					
ANR	1116547	Identifier	ADDLI		1115923	0					
ANR	1116548	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1116549	Argument	ULESS_FLAG		1115923	0					
ANR	1116550	Identifier	ULESS_FLAG		1115923	0					
ANR	1116551	Argument	ZERO		1115923	1					
ANR	1116552	Identifier	ZERO		1115923	0					
ANR	1116553	Argument	src2		1115923	2					
ANR	1116554	Identifier	src2		1115923	0					
ANR	1116555	ExpressionStatement	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG ) )"	1676:5:51805:51853	1115923	1	True				
ANR	1116556	CallExpression	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG ) )"		1115923	0					
ANR	1116557	Callee	FAIL_IF		1115923	0					
ANR	1116558	Identifier	FAIL_IF		1115923	0					
ANR	1116559	ArgumentList	"OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG )"		1115923	1					
ANR	1116560	Argument	"OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG )"		1115923	0					
ANR	1116561	CallExpression	"OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG )"		1115923	0					
ANR	1116562	Callee	OR		1115923	0					
ANR	1116563	Identifier	OR		1115923	0					
ANR	1116564	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1116565	Argument	ULESS_FLAG		1115923	0					
ANR	1116566	Identifier	ULESS_FLAG		1115923	0					
ANR	1116567	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116568	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116569	Identifier	reg_map		1115923	0					
ANR	1116570	Identifier	src1		1115923	1					
ANR	1116571	Argument	ULESS_FLAG		1115923	2					
ANR	1116572	Identifier	ULESS_FLAG		1115923	0					
ANR	1116573	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	3					
ANR	1116574	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1681:7:51920:51943	1115923	0	True				
ANR	1116575	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1116576	Callee	CHECK_FLAGS		1115923	0					
ANR	1116577	Identifier	CHECK_FLAGS		1115923	0					
ANR	1116578	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1116579	Argument	SLJIT_SET_E		1115923	0					
ANR	1116580	Identifier	SLJIT_SET_E		1115923	0					
ANR	1116581	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"	1682:4:51950:51999	1115923	1	True				
ANR	1116582	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"		1115923	0					
ANR	1116583	Callee	FAIL_IF		1115923	0					
ANR	1116584	Identifier	FAIL_IF		1115923	0					
ANR	1116585	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1115923	1					
ANR	1116586	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116587	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116588	Callee	ADDLI		1115923	0					
ANR	1116589	Identifier	ADDLI		1115923	0					
ANR	1116590	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116591	Argument	reg_map [ dst ]		1115923	0					
ANR	1116592	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116593	Identifier	reg_map		1115923	0					
ANR	1116594	Identifier	dst		1115923	1					
ANR	1116595	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116596	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116597	Identifier	reg_map		1115923	0					
ANR	1116598	Identifier	src1		1115923	1					
ANR	1116599	Argument	src2		1115923	2					
ANR	1116600	Identifier	src2		1115923	0					
ANR	1116601	IfStatement	if ( op & SLJIT_SET_O )		1115923	4					
ANR	1116602	Condition	op & SLJIT_SET_O	1684:7:52009:52024	1115923	0	True				
ANR	1116603	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1116604	Identifier	op		1115923	0					
ANR	1116605	Identifier	SLJIT_SET_O		1115923	1					
ANR	1116606	CompoundStatement		99:25:2738:2738	1115923	1					
ANR	1116607	ExpressionStatement	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 ) )"	1685:4:52033:52080	1115923	0	True				
ANR	1116608	CallExpression	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 ) )"		1115923	0					
ANR	1116609	Callee	FAIL_IF		1115923	0					
ANR	1116610	Identifier	FAIL_IF		1115923	0					
ANR	1116611	ArgumentList	"SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 )"		1115923	1					
ANR	1116612	Argument	"SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 )"		1115923	0					
ANR	1116613	CallExpression	"SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 )"		1115923	0					
ANR	1116614	Callee	SHRUI		1115923	0					
ANR	1116615	Identifier	SHRUI		1115923	0					
ANR	1116616	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1116617	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1116618	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1116619	Argument	reg_map [ dst ]		1115923	1					
ANR	1116620	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116621	Identifier	reg_map		1115923	0					
ANR	1116622	Identifier	dst		1115923	1					
ANR	1116623	Argument	63		1115923	2					
ANR	1116624	PrimaryExpression	63		1115923	0					
ANR	1116625	IfStatement	if ( src2 < 0 )		1115923	1					
ANR	1116626	Condition	src2 < 0	1687:8:52091:52098	1115923	0	True				
ANR	1116627	RelationalExpression	src2 < 0		1115923	0		<			
ANR	1116628	Identifier	src2		1115923	0					
ANR	1116629	PrimaryExpression	0		1115923	1					
ANR	1116630	ExpressionStatement	"FAIL_IF ( XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 ) )"	1688:5:52106:52152	1115923	1	True				
ANR	1116631	CallExpression	"FAIL_IF ( XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 ) )"		1115923	0					
ANR	1116632	Callee	FAIL_IF		1115923	0					
ANR	1116633	Identifier	FAIL_IF		1115923	0					
ANR	1116634	ArgumentList	"XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 )"		1115923	1					
ANR	1116635	Argument	"XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 )"		1115923	0					
ANR	1116636	CallExpression	"XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 )"		1115923	0					
ANR	1116637	Callee	XORI		1115923	0					
ANR	1116638	Identifier	XORI		1115923	0					
ANR	1116639	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1116640	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1116641	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1116642	Argument	OVERFLOW_FLAG		1115923	1					
ANR	1116643	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1116644	Argument	1		1115923	2					
ANR	1116645	PrimaryExpression	1		1115923	0					
ANR	1116646	ElseStatement	else		1115923	0					
ANR	1116647	CompoundStatement		105:9:2879:2879	1115923	0					
ANR	1116648	IfStatement	if ( op & SLJIT_SET_O )		1115923	0					
ANR	1116649	Condition	op & SLJIT_SET_O	1691:7:52177:52192	1115923	0	True				
ANR	1116650	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1116651	Identifier	op		1115923	0					
ANR	1116652	Identifier	SLJIT_SET_O		1115923	1					
ANR	1116653	CompoundStatement		106:25:2906:2906	1115923	1					
ANR	1116654	ExpressionStatement	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1692:4:52201:52254	1115923	0	True				
ANR	1116655	CallExpression	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116656	Callee	FAIL_IF		1115923	0					
ANR	1116657	Identifier	FAIL_IF		1115923	0					
ANR	1116658	ArgumentList	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1116659	Argument	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116660	CallExpression	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116661	Callee	XOR		1115923	0					
ANR	1116662	Identifier	XOR		1115923	0					
ANR	1116663	ArgumentList	TMP_EREG1		1115923	1					
ANR	1116664	Argument	TMP_EREG1		1115923	0					
ANR	1116665	Identifier	TMP_EREG1		1115923	0					
ANR	1116666	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116667	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116668	Identifier	reg_map		1115923	0					
ANR	1116669	Identifier	src1		1115923	1					
ANR	1116670	Argument	reg_map [ src2 ]		1115923	2					
ANR	1116671	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116672	Identifier	reg_map		1115923	0					
ANR	1116673	Identifier	src2		1115923	1					
ANR	1116674	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"	1693:4:52260:52300	1115923	1	True				
ANR	1116675	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"		1115923	0					
ANR	1116676	Callee	FAIL_IF		1115923	0					
ANR	1116677	Identifier	FAIL_IF		1115923	0					
ANR	1116678	ArgumentList	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1115923	1					
ANR	1116679	Argument	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1115923	0					
ANR	1116680	CallExpression	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1115923	0					
ANR	1116681	Callee	SHRUI		1115923	0					
ANR	1116682	Identifier	SHRUI		1115923	0					
ANR	1116683	ArgumentList	TMP_EREG1		1115923	1					
ANR	1116684	Argument	TMP_EREG1		1115923	0					
ANR	1116685	Identifier	TMP_EREG1		1115923	0					
ANR	1116686	Argument	TMP_EREG1		1115923	1					
ANR	1116687	Identifier	TMP_EREG1		1115923	0					
ANR	1116688	Argument	63		1115923	2					
ANR	1116689	PrimaryExpression	63		1115923	0					
ANR	1116690	IfStatement	if ( src1 != dst )		1115923	2					
ANR	1116691	Condition	src1 != dst	1695:8:52311:52321	1115923	0	True				
ANR	1116692	EqualityExpression	src1 != dst		1115923	0		!=			
ANR	1116693	Identifier	src1		1115923	0					
ANR	1116694	Identifier	dst		1115923	1					
ANR	1116695	ExpressionStatement	overflow_ra = reg_map [ src1 ]	1696:5:52329:52356	1115923	1	True				
ANR	1116696	AssignmentExpression	overflow_ra = reg_map [ src1 ]		1115923	0		=			
ANR	1116697	Identifier	overflow_ra		1115923	0					
ANR	1116698	ArrayIndexing	reg_map [ src1 ]		1115923	1					
ANR	1116699	Identifier	reg_map		1115923	0					
ANR	1116700	Identifier	src1		1115923	1					
ANR	1116701	ElseStatement	else		1115923	0					
ANR	1116702	IfStatement	if ( src2 != dst )		1115923	0					
ANR	1116703	Condition	src2 != dst	1697:13:52371:52381	1115923	0	True				
ANR	1116704	EqualityExpression	src2 != dst		1115923	0		!=			
ANR	1116705	Identifier	src2		1115923	0					
ANR	1116706	Identifier	dst		1115923	1					
ANR	1116707	ExpressionStatement	overflow_ra = reg_map [ src2 ]	1698:5:52389:52416	1115923	1	True				
ANR	1116708	AssignmentExpression	overflow_ra = reg_map [ src2 ]		1115923	0		=			
ANR	1116709	Identifier	overflow_ra		1115923	0					
ANR	1116710	ArrayIndexing	reg_map [ src2 ]		1115923	1					
ANR	1116711	Identifier	reg_map		1115923	0					
ANR	1116712	Identifier	src2		1115923	1					
ANR	1116713	ElseStatement	else		1115923	0					
ANR	1116714	CompoundStatement		114:9:3138:3138	1115923	0					
ANR	1116715	ExpressionStatement	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"	1701:5:52459:52503	1115923	0	True				
ANR	1116716	CallExpression	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"		1115923	0					
ANR	1116717	Callee	FAIL_IF		1115923	0					
ANR	1116718	Identifier	FAIL_IF		1115923	0					
ANR	1116719	ArgumentList	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	1					
ANR	1116720	Argument	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	0					
ANR	1116721	CallExpression	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	0					
ANR	1116722	Callee	ADD		1115923	0					
ANR	1116723	Identifier	ADD		1115923	0					
ANR	1116724	ArgumentList	TMP_EREG2		1115923	1					
ANR	1116725	Argument	TMP_EREG2		1115923	0					
ANR	1116726	Identifier	TMP_EREG2		1115923	0					
ANR	1116727	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116728	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116729	Identifier	reg_map		1115923	0					
ANR	1116730	Identifier	src1		1115923	1					
ANR	1116731	Argument	ZERO		1115923	2					
ANR	1116732	Identifier	ZERO		1115923	0					
ANR	1116733	ExpressionStatement	overflow_ra = TMP_EREG2	1702:5:52510:52533	1115923	1	True				
ANR	1116734	AssignmentExpression	overflow_ra = TMP_EREG2		1115923	0		=			
ANR	1116735	Identifier	overflow_ra		1115923	0					
ANR	1116736	Identifier	TMP_EREG2		1115923	1					
ANR	1116737	IfStatement	if ( op & SLJIT_SET_E )		1115923	1					
ANR	1116738	Condition	op & SLJIT_SET_E	1706:7:52554:52569	1115923	0	True				
ANR	1116739	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1116740	Identifier	op		1115923	0					
ANR	1116741	Identifier	SLJIT_SET_E		1115923	1					
ANR	1116742	ExpressionStatement	"FAIL_IF ( ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1707:4:52576:52630	1115923	1	True				
ANR	1116743	CallExpression	"FAIL_IF ( ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116744	Callee	FAIL_IF		1115923	0					
ANR	1116745	Identifier	FAIL_IF		1115923	0					
ANR	1116746	ArgumentList	"ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1116747	Argument	"ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116748	CallExpression	"ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116749	Callee	ADD		1115923	0					
ANR	1116750	Identifier	ADD		1115923	0					
ANR	1116751	ArgumentList	EQUAL_FLAG		1115923	1					
ANR	1116752	Argument	EQUAL_FLAG		1115923	0					
ANR	1116753	Identifier	EQUAL_FLAG		1115923	0					
ANR	1116754	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116755	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116756	Identifier	reg_map		1115923	0					
ANR	1116757	Identifier	src1		1115923	1					
ANR	1116758	Argument	reg_map [ src2 ]		1115923	2					
ANR	1116759	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116760	Identifier	reg_map		1115923	0					
ANR	1116761	Identifier	src2		1115923	1					
ANR	1116762	IfStatement	if ( op & SLJIT_SET_C )		1115923	2					
ANR	1116763	Condition	op & SLJIT_SET_C	1709:7:52640:52655	1115923	0	True				
ANR	1116764	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1116765	Identifier	op		1115923	0					
ANR	1116766	Identifier	SLJIT_SET_C		1115923	1					
ANR	1116767	ExpressionStatement	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1710:4:52662:52714	1115923	1	True				
ANR	1116768	CallExpression	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116769	Callee	FAIL_IF		1115923	0					
ANR	1116770	Identifier	FAIL_IF		1115923	0					
ANR	1116771	ArgumentList	"OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1116772	Argument	"OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116773	CallExpression	"OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116774	Callee	OR		1115923	0					
ANR	1116775	Identifier	OR		1115923	0					
ANR	1116776	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1116777	Argument	ULESS_FLAG		1115923	0					
ANR	1116778	Identifier	ULESS_FLAG		1115923	0					
ANR	1116779	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116780	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116781	Identifier	reg_map		1115923	0					
ANR	1116782	Identifier	src1		1115923	1					
ANR	1116783	Argument	reg_map [ src2 ]		1115923	2					
ANR	1116784	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116785	Identifier	reg_map		1115923	0					
ANR	1116786	Identifier	src2		1115923	1					
ANR	1116787	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	3					
ANR	1116788	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1713:7:52770:52793	1115923	0	True				
ANR	1116789	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1116790	Callee	CHECK_FLAGS		1115923	0					
ANR	1116791	Identifier	CHECK_FLAGS		1115923	0					
ANR	1116792	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1116793	Argument	SLJIT_SET_E		1115923	0					
ANR	1116794	Identifier	SLJIT_SET_E		1115923	0					
ANR	1116795	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1714:4:52800:52855	1115923	1	True				
ANR	1116796	CallExpression	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1116797	Callee	FAIL_IF		1115923	0					
ANR	1116798	Identifier	FAIL_IF		1115923	0					
ANR	1116799	ArgumentList	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1116800	Argument	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116801	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1116802	Callee	ADD		1115923	0					
ANR	1116803	Identifier	ADD		1115923	0					
ANR	1116804	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116805	Argument	reg_map [ dst ]		1115923	0					
ANR	1116806	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116807	Identifier	reg_map		1115923	0					
ANR	1116808	Identifier	dst		1115923	1					
ANR	1116809	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116810	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116811	Identifier	reg_map		1115923	0					
ANR	1116812	Identifier	src1		1115923	1					
ANR	1116813	Argument	reg_map [ src2 ]		1115923	2					
ANR	1116814	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1116815	Identifier	reg_map		1115923	0					
ANR	1116816	Identifier	src2		1115923	1					
ANR	1116817	IfStatement	if ( op & SLJIT_SET_O )		1115923	4					
ANR	1116818	Condition	op & SLJIT_SET_O	1716:7:52865:52880	1115923	0	True				
ANR	1116819	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1116820	Identifier	op		1115923	0					
ANR	1116821	Identifier	SLJIT_SET_O		1115923	1					
ANR	1116822	CompoundStatement		131:25:3594:3594	1115923	1					
ANR	1116823	ExpressionStatement	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"	1717:4:52889:52942	1115923	0	True				
ANR	1116824	CallExpression	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"		1115923	0					
ANR	1116825	Callee	FAIL_IF		1115923	0					
ANR	1116826	Identifier	FAIL_IF		1115923	0					
ANR	1116827	ArgumentList	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1115923	1					
ANR	1116828	Argument	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1115923	0					
ANR	1116829	CallExpression	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1115923	0					
ANR	1116830	Callee	XOR		1115923	0					
ANR	1116831	Identifier	XOR		1115923	0					
ANR	1116832	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1116833	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1116834	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1116835	Argument	reg_map [ dst ]		1115923	1					
ANR	1116836	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116837	Identifier	reg_map		1115923	0					
ANR	1116838	Identifier	dst		1115923	1					
ANR	1116839	Argument	overflow_ra		1115923	2					
ANR	1116840	Identifier	overflow_ra		1115923	0					
ANR	1116841	ExpressionStatement	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"	1718:4:52948:52996	1115923	1	True				
ANR	1116842	CallExpression	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"		1115923	0					
ANR	1116843	Callee	FAIL_IF		1115923	0					
ANR	1116844	Identifier	FAIL_IF		1115923	0					
ANR	1116845	ArgumentList	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1115923	1					
ANR	1116846	Argument	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1115923	0					
ANR	1116847	CallExpression	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1115923	0					
ANR	1116848	Callee	SHRUI		1115923	0					
ANR	1116849	Identifier	SHRUI		1115923	0					
ANR	1116850	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1116851	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1116852	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1116853	Argument	OVERFLOW_FLAG		1115923	1					
ANR	1116854	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1116855	Argument	63		1115923	2					
ANR	1116856	PrimaryExpression	63		1115923	0					
ANR	1116857	IfStatement	if ( op & SLJIT_SET_C )		1115923	32					
ANR	1116858	Condition	op & SLJIT_SET_C	1723:6:53080:53095	1115923	0	True				
ANR	1116859	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1116860	Identifier	op		1115923	0					
ANR	1116861	Identifier	SLJIT_SET_C		1115923	1					
ANR	1116862	ExpressionStatement	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG ) )"	1724:3:53101:53154	1115923	1	True				
ANR	1116863	CallExpression	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG ) )"		1115923	0					
ANR	1116864	Callee	FAIL_IF		1115923	0					
ANR	1116865	Identifier	FAIL_IF		1115923	0					
ANR	1116866	ArgumentList	"CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG )"		1115923	1					
ANR	1116867	Argument	"CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1116868	CallExpression	"CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1116869	Callee	CMPLTU		1115923	0					
ANR	1116870	Identifier	CMPLTU		1115923	0					
ANR	1116871	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1116872	Argument	ULESS_FLAG		1115923	0					
ANR	1116873	Identifier	ULESS_FLAG		1115923	0					
ANR	1116874	Argument	reg_map [ dst ]		1115923	1					
ANR	1116875	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116876	Identifier	reg_map		1115923	0					
ANR	1116877	Identifier	dst		1115923	1					
ANR	1116878	Argument	ULESS_FLAG		1115923	2					
ANR	1116879	Identifier	ULESS_FLAG		1115923	0					
ANR	1116880	IfStatement	if ( op & SLJIT_SET_O )		1115923	33					
ANR	1116881	Condition	op & SLJIT_SET_O	1726:6:53163:53178	1115923	0	True				
ANR	1116882	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1116883	Identifier	op		1115923	0					
ANR	1116884	Identifier	SLJIT_SET_O		1115923	1					
ANR	1116885	ReturnStatement	"return CMOVNEZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO ) ;"	1727:3:53184:53230	1115923	1	True				
ANR	1116886	CallExpression	"CMOVNEZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO )"		1115923	0					
ANR	1116887	Callee	CMOVNEZ		1115923	0					
ANR	1116888	Identifier	CMOVNEZ		1115923	0					
ANR	1116889	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1116890	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1116891	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1116892	Argument	TMP_EREG1		1115923	1					
ANR	1116893	Identifier	TMP_EREG1		1115923	0					
ANR	1116894	Argument	ZERO		1115923	2					
ANR	1116895	Identifier	ZERO		1115923	0					
ANR	1116896	ReturnStatement	return SLJIT_SUCCESS ;	1729:2:53235:53255	1115923	34	True				
ANR	1116897	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1116898	Label	case SLJIT_ADDC :	1731:1:53259:53274	1115923	35	True				
ANR	1116899	Identifier	SLJIT_ADDC		1115923	0					
ANR	1116900	IfStatement	if ( flags & SRC2_IMM )		1115923	36					
ANR	1116901	Condition	flags & SRC2_IMM	1732:6:53282:53297	1115923	0	True				
ANR	1116902	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1116903	Identifier	flags		1115923	0					
ANR	1116904	Identifier	SRC2_IMM		1115923	1					
ANR	1116905	CompoundStatement		147:24:4011:4011	1115923	1					
ANR	1116906	IfStatement	if ( op & SLJIT_SET_C )		1115923	0					
ANR	1116907	Condition	op & SLJIT_SET_C	1733:7:53309:53324	1115923	0	True				
ANR	1116908	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1116909	Identifier	op		1115923	0					
ANR	1116910	Identifier	SLJIT_SET_C		1115923	1					
ANR	1116911	CompoundStatement		148:25:4038:4038	1115923	1					
ANR	1116912	IfStatement	if ( src2 >= 0 )		1115923	0					
ANR	1116913	Condition	src2 >= 0	1734:8:53337:53345	1115923	0	True				
ANR	1116914	RelationalExpression	src2 >= 0		1115923	0		>=			
ANR	1116915	Identifier	src2		1115923	0					
ANR	1116916	PrimaryExpression	0		1115923	1					
ANR	1116917	ExpressionStatement	"FAIL_IF ( ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 ) )"	1735:5:53353:53397	1115923	1	True				
ANR	1116918	CallExpression	"FAIL_IF ( ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 ) )"		1115923	0					
ANR	1116919	Callee	FAIL_IF		1115923	0					
ANR	1116920	Identifier	FAIL_IF		1115923	0					
ANR	1116921	ArgumentList	"ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 )"		1115923	1					
ANR	1116922	Argument	"ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116923	CallExpression	"ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116924	Callee	ORI		1115923	0					
ANR	1116925	Identifier	ORI		1115923	0					
ANR	1116926	ArgumentList	TMP_EREG1		1115923	1					
ANR	1116927	Argument	TMP_EREG1		1115923	0					
ANR	1116928	Identifier	TMP_EREG1		1115923	0					
ANR	1116929	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116930	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116931	Identifier	reg_map		1115923	0					
ANR	1116932	Identifier	src1		1115923	1					
ANR	1116933	Argument	src2		1115923	2					
ANR	1116934	Identifier	src2		1115923	0					
ANR	1116935	ElseStatement	else		1115923	0					
ANR	1116936	CompoundStatement		151:9:4119:4119	1115923	0					
ANR	1116937	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_EREG1 , ZERO , src2 ) )"	1737:5:53415:53452	1115923	0	True				
ANR	1116938	CallExpression	"FAIL_IF ( ADDLI ( TMP_EREG1 , ZERO , src2 ) )"		1115923	0					
ANR	1116939	Callee	FAIL_IF		1115923	0					
ANR	1116940	Identifier	FAIL_IF		1115923	0					
ANR	1116941	ArgumentList	"ADDLI ( TMP_EREG1 , ZERO , src2 )"		1115923	1					
ANR	1116942	Argument	"ADDLI ( TMP_EREG1 , ZERO , src2 )"		1115923	0					
ANR	1116943	CallExpression	"ADDLI ( TMP_EREG1 , ZERO , src2 )"		1115923	0					
ANR	1116944	Callee	ADDLI		1115923	0					
ANR	1116945	Identifier	ADDLI		1115923	0					
ANR	1116946	ArgumentList	TMP_EREG1		1115923	1					
ANR	1116947	Argument	TMP_EREG1		1115923	0					
ANR	1116948	Identifier	TMP_EREG1		1115923	0					
ANR	1116949	Argument	ZERO		1115923	1					
ANR	1116950	Identifier	ZERO		1115923	0					
ANR	1116951	Argument	src2		1115923	2					
ANR	1116952	Identifier	src2		1115923	0					
ANR	1116953	ExpressionStatement	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 ) )"	1738:5:53459:53507	1115923	1	True				
ANR	1116954	CallExpression	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 ) )"		1115923	0					
ANR	1116955	Callee	FAIL_IF		1115923	0					
ANR	1116956	Identifier	FAIL_IF		1115923	0					
ANR	1116957	ArgumentList	"OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 )"		1115923	1					
ANR	1116958	Argument	"OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 )"		1115923	0					
ANR	1116959	CallExpression	"OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 )"		1115923	0					
ANR	1116960	Callee	OR		1115923	0					
ANR	1116961	Identifier	OR		1115923	0					
ANR	1116962	ArgumentList	TMP_EREG1		1115923	1					
ANR	1116963	Argument	TMP_EREG1		1115923	0					
ANR	1116964	Identifier	TMP_EREG1		1115923	0					
ANR	1116965	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116966	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116967	Identifier	reg_map		1115923	0					
ANR	1116968	Identifier	src1		1115923	1					
ANR	1116969	Argument	TMP_EREG1		1115923	2					
ANR	1116970	Identifier	TMP_EREG1		1115923	0					
ANR	1116971	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"	1742:3:53524:53573	1115923	1	True				
ANR	1116972	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"		1115923	0					
ANR	1116973	Callee	FAIL_IF		1115923	0					
ANR	1116974	Identifier	FAIL_IF		1115923	0					
ANR	1116975	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1115923	1					
ANR	1116976	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116977	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1115923	0					
ANR	1116978	Callee	ADDLI		1115923	0					
ANR	1116979	Identifier	ADDLI		1115923	0					
ANR	1116980	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1116981	Argument	reg_map [ dst ]		1115923	0					
ANR	1116982	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1116983	Identifier	reg_map		1115923	0					
ANR	1116984	Identifier	dst		1115923	1					
ANR	1116985	Argument	reg_map [ src1 ]		1115923	1					
ANR	1116986	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1116987	Identifier	reg_map		1115923	0					
ANR	1116988	Identifier	src1		1115923	1					
ANR	1116989	Argument	src2		1115923	2					
ANR	1116990	Identifier	src2		1115923	0					
ANR	1116991	ElseStatement	else		1115923	0					
ANR	1116992	CompoundStatement		159:9:4296:4296	1115923	0					
ANR	1116993	IfStatement	if ( op & SLJIT_SET_C )		1115923	0					
ANR	1116994	Condition	op & SLJIT_SET_C	1745:7:53594:53609	1115923	0	True				
ANR	1116995	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1116996	Identifier	op		1115923	0					
ANR	1116997	Identifier	SLJIT_SET_C		1115923	1					
ANR	1116998	ExpressionStatement	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1746:4:53616:53668	1115923	1	True				
ANR	1116999	CallExpression	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117000	Callee	FAIL_IF		1115923	0					
ANR	1117001	Identifier	FAIL_IF		1115923	0					
ANR	1117002	ArgumentList	"OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117003	Argument	"OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117004	CallExpression	"OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117005	Callee	OR		1115923	0					
ANR	1117006	Identifier	OR		1115923	0					
ANR	1117007	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117008	Argument	TMP_EREG1		1115923	0					
ANR	1117009	Identifier	TMP_EREG1		1115923	0					
ANR	1117010	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117011	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117012	Identifier	reg_map		1115923	0					
ANR	1117013	Identifier	src1		1115923	1					
ANR	1117014	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117015	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117016	Identifier	reg_map		1115923	0					
ANR	1117017	Identifier	src2		1115923	1					
ANR	1117018	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1749:3:53720:53776	1115923	1	True				
ANR	1117019	CallExpression	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117020	Callee	FAIL_IF		1115923	0					
ANR	1117021	Identifier	FAIL_IF		1115923	0					
ANR	1117022	ArgumentList	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117023	Argument	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117024	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117025	Callee	ADD		1115923	0					
ANR	1117026	Identifier	ADD		1115923	0					
ANR	1117027	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117028	Argument	reg_map [ dst ]		1115923	0					
ANR	1117029	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117030	Identifier	reg_map		1115923	0					
ANR	1117031	Identifier	dst		1115923	1					
ANR	1117032	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117033	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117034	Identifier	reg_map		1115923	0					
ANR	1117035	Identifier	src1		1115923	1					
ANR	1117036	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117037	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117038	Identifier	reg_map		1115923	0					
ANR	1117039	Identifier	src2		1115923	1					
ANR	1117040	IfStatement	if ( op & SLJIT_SET_C )		1115923	37					
ANR	1117041	Condition	op & SLJIT_SET_C	1752:6:53789:53804	1115923	0	True				
ANR	1117042	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1117043	Identifier	op		1115923	0					
ANR	1117044	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117045	ExpressionStatement	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 ) )"	1753:3:53810:53861	1115923	1	True				
ANR	1117046	CallExpression	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 ) )"		1115923	0					
ANR	1117047	Callee	FAIL_IF		1115923	0					
ANR	1117048	Identifier	FAIL_IF		1115923	0					
ANR	1117049	ArgumentList	"CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 )"		1115923	1					
ANR	1117050	Argument	"CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 )"		1115923	0					
ANR	1117051	CallExpression	"CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 )"		1115923	0					
ANR	1117052	Callee	CMPLTU		1115923	0					
ANR	1117053	Identifier	CMPLTU		1115923	0					
ANR	1117054	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117055	Argument	TMP_EREG1		1115923	0					
ANR	1117056	Identifier	TMP_EREG1		1115923	0					
ANR	1117057	Argument	reg_map [ dst ]		1115923	1					
ANR	1117058	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117059	Identifier	reg_map		1115923	0					
ANR	1117060	Identifier	dst		1115923	1					
ANR	1117061	Argument	TMP_EREG1		1115923	2					
ANR	1117062	Identifier	TMP_EREG1		1115923	0					
ANR	1117063	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"	1755:2:53866:53918	1115923	38	True				
ANR	1117064	CallExpression	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"		1115923	0					
ANR	1117065	Callee	FAIL_IF		1115923	0					
ANR	1117066	Identifier	FAIL_IF		1115923	0					
ANR	1117067	ArgumentList	"ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1115923	1					
ANR	1117068	Argument	"ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1117069	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1117070	Callee	ADD		1115923	0					
ANR	1117071	Identifier	ADD		1115923	0					
ANR	1117072	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117073	Argument	reg_map [ dst ]		1115923	0					
ANR	1117074	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117075	Identifier	reg_map		1115923	0					
ANR	1117076	Identifier	dst		1115923	1					
ANR	1117077	Argument	reg_map [ dst ]		1115923	1					
ANR	1117078	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117079	Identifier	reg_map		1115923	0					
ANR	1117080	Identifier	dst		1115923	1					
ANR	1117081	Argument	ULESS_FLAG		1115923	2					
ANR	1117082	Identifier	ULESS_FLAG		1115923	0					
ANR	1117083	IfStatement	if ( ! ( op & SLJIT_SET_C ) )		1115923	39					
ANR	1117084	Condition	! ( op & SLJIT_SET_C )	1757:6:53927:53945	1115923	0	True				
ANR	1117085	UnaryOperationExpression	! ( op & SLJIT_SET_C )		1115923	0					
ANR	1117086	UnaryOperator	!		1115923	0					
ANR	1117087	BitAndExpression	op & SLJIT_SET_C		1115923	1		&			
ANR	1117088	Identifier	op		1115923	0					
ANR	1117089	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117090	ReturnStatement	return SLJIT_SUCCESS ;	1758:3:53951:53971	1115923	1	True				
ANR	1117091	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1117092	ExpressionStatement	"FAIL_IF ( CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 ) )"	1761:2:54031:54075	1115923	40	True				
ANR	1117093	CallExpression	"FAIL_IF ( CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 ) )"		1115923	0					
ANR	1117094	Callee	FAIL_IF		1115923	0					
ANR	1117095	Identifier	FAIL_IF		1115923	0					
ANR	1117096	ArgumentList	"CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 )"		1115923	1					
ANR	1117097	Argument	"CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 )"		1115923	0					
ANR	1117098	CallExpression	"CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 )"		1115923	0					
ANR	1117099	Callee	CMPLTUI		1115923	0					
ANR	1117100	Identifier	CMPLTUI		1115923	0					
ANR	1117101	ArgumentList	TMP_EREG2		1115923	1					
ANR	1117102	Argument	TMP_EREG2		1115923	0					
ANR	1117103	Identifier	TMP_EREG2		1115923	0					
ANR	1117104	Argument	reg_map [ dst ]		1115923	1					
ANR	1117105	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117106	Identifier	reg_map		1115923	0					
ANR	1117107	Identifier	dst		1115923	1					
ANR	1117108	Argument	1		1115923	2					
ANR	1117109	PrimaryExpression	1		1115923	0					
ANR	1117110	ExpressionStatement	"FAIL_IF ( AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG ) )"	1762:2:54079:54125	1115923	41	True				
ANR	1117111	CallExpression	"FAIL_IF ( AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG ) )"		1115923	0					
ANR	1117112	Callee	FAIL_IF		1115923	0					
ANR	1117113	Identifier	FAIL_IF		1115923	0					
ANR	1117114	ArgumentList	"AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG )"		1115923	1					
ANR	1117115	Argument	"AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG )"		1115923	0					
ANR	1117116	CallExpression	"AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG )"		1115923	0					
ANR	1117117	Callee	AND		1115923	0					
ANR	1117118	Identifier	AND		1115923	0					
ANR	1117119	ArgumentList	TMP_EREG2		1115923	1					
ANR	1117120	Argument	TMP_EREG2		1115923	0					
ANR	1117121	Identifier	TMP_EREG2		1115923	0					
ANR	1117122	Argument	TMP_EREG2		1115923	1					
ANR	1117123	Identifier	TMP_EREG2		1115923	0					
ANR	1117124	Argument	ULESS_FLAG		1115923	2					
ANR	1117125	Identifier	ULESS_FLAG		1115923	0					
ANR	1117126	ReturnStatement	"return OR ( ULESS_FLAG , TMP_EREG2 , TMP_EREG1 ) ;"	1764:2:54153:54196	1115923	42	True				
ANR	1117127	CallExpression	"OR ( ULESS_FLAG , TMP_EREG2 , TMP_EREG1 )"		1115923	0					
ANR	1117128	Callee	OR		1115923	0					
ANR	1117129	Identifier	OR		1115923	0					
ANR	1117130	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1117131	Argument	ULESS_FLAG		1115923	0					
ANR	1117132	Identifier	ULESS_FLAG		1115923	0					
ANR	1117133	Argument	TMP_EREG2		1115923	1					
ANR	1117134	Identifier	TMP_EREG2		1115923	0					
ANR	1117135	Argument	TMP_EREG1		1115923	2					
ANR	1117136	Identifier	TMP_EREG1		1115923	0					
ANR	1117137	Label	case SLJIT_SUB :	1766:1:54200:54214	1115923	43	True				
ANR	1117138	Identifier	SLJIT_SUB		1115923	0					
ANR	1117139	IfStatement	if ( ( flags & SRC2_IMM ) && ( ( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN ) )		1115923	44					
ANR	1117140	Condition	( flags & SRC2_IMM ) && ( ( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN )	1767:6:54222:54305	1115923	0	True				
ANR	1117141	AndExpression	( flags & SRC2_IMM ) && ( ( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN )		1115923	0		&&			
ANR	1117142	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1117143	Identifier	flags		1115923	0					
ANR	1117144	Identifier	SRC2_IMM		1115923	1					
ANR	1117145	OrExpression	( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN		1115923	1		||			
ANR	1117146	BitAndExpression	op & ( SLJIT_SET_U | SLJIT_SET_S )		1115923	0		&			
ANR	1117147	Identifier	op		1115923	0					
ANR	1117148	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S		1115923	1		|			
ANR	1117149	Identifier	SLJIT_SET_U		1115923	0					
ANR	1117150	Identifier	SLJIT_SET_S		1115923	1					
ANR	1117151	EqualityExpression	src2 == SIMM_16BIT_MIN		1115923	1		==			
ANR	1117152	Identifier	src2		1115923	0					
ANR	1117153	Identifier	SIMM_16BIT_MIN		1115923	1					
ANR	1117154	CompoundStatement		182:92:5019:5019	1115923	1					
ANR	1117155	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"	1768:3:54313:54356	1115923	0	True				
ANR	1117156	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"		1115923	0					
ANR	1117157	Callee	FAIL_IF		1115923	0					
ANR	1117158	Identifier	FAIL_IF		1115923	0					
ANR	1117159	ArgumentList	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1115923	1					
ANR	1117160	Argument	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1115923	0					
ANR	1117161	CallExpression	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1115923	0					
ANR	1117162	Callee	ADDLI		1115923	0					
ANR	1117163	Identifier	ADDLI		1115923	0					
ANR	1117164	ArgumentList	TMP_REG2_mapped		1115923	1					
ANR	1117165	Argument	TMP_REG2_mapped		1115923	0					
ANR	1117166	Identifier	TMP_REG2_mapped		1115923	0					
ANR	1117167	Argument	ZERO		1115923	1					
ANR	1117168	Identifier	ZERO		1115923	0					
ANR	1117169	Argument	src2		1115923	2					
ANR	1117170	Identifier	src2		1115923	0					
ANR	1117171	ExpressionStatement	src2 = TMP_REG2	1769:3:54361:54376	1115923	1	True				
ANR	1117172	AssignmentExpression	src2 = TMP_REG2		1115923	0		=			
ANR	1117173	Identifier	src2		1115923	0					
ANR	1117174	Identifier	TMP_REG2		1115923	1					
ANR	1117175	ExpressionStatement	flags &= ~SRC2_IMM	1770:3:54381:54399	1115923	2	True				
ANR	1117176	AssignmentExpression	flags &= ~SRC2_IMM		1115923	0		&=			
ANR	1117177	Identifier	flags		1115923	0					
ANR	1117178	Identifier	~SRC2_IMM		1115923	1					
ANR	1117179	IfStatement	if ( flags & SRC2_IMM )		1115923	45					
ANR	1117180	Condition	flags & SRC2_IMM	1773:6:54412:54427	1115923	0	True				
ANR	1117181	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1117182	Identifier	flags		1115923	0					
ANR	1117183	Identifier	SRC2_IMM		1115923	1					
ANR	1117184	CompoundStatement		188:24:5141:5141	1115923	1					
ANR	1117185	IfStatement	if ( op & SLJIT_SET_O )		1115923	0					
ANR	1117186	Condition	op & SLJIT_SET_O	1774:7:54439:54454	1115923	0	True				
ANR	1117187	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1117188	Identifier	op		1115923	0					
ANR	1117189	Identifier	SLJIT_SET_O		1115923	1					
ANR	1117190	CompoundStatement		189:25:5168:5168	1115923	1					
ANR	1117191	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"	1775:4:54463:54506	1115923	0	True				
ANR	1117192	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"		1115923	0					
ANR	1117193	Callee	FAIL_IF		1115923	0					
ANR	1117194	Identifier	FAIL_IF		1115923	0					
ANR	1117195	ArgumentList	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1115923	1					
ANR	1117196	Argument	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1115923	0					
ANR	1117197	CallExpression	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1115923	0					
ANR	1117198	Callee	SHRUI		1115923	0					
ANR	1117199	Identifier	SHRUI		1115923	0					
ANR	1117200	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117201	Argument	TMP_EREG1		1115923	0					
ANR	1117202	Identifier	TMP_EREG1		1115923	0					
ANR	1117203	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117204	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117205	Identifier	reg_map		1115923	0					
ANR	1117206	Identifier	src1		1115923	1					
ANR	1117207	Argument	63		1115923	2					
ANR	1117208	PrimaryExpression	63		1115923	0					
ANR	1117209	IfStatement	if ( src2 < 0 )		1115923	1					
ANR	1117210	Condition	src2 < 0	1777:8:54517:54524	1115923	0	True				
ANR	1117211	RelationalExpression	src2 < 0		1115923	0		<			
ANR	1117212	Identifier	src2		1115923	0					
ANR	1117213	PrimaryExpression	0		1115923	1					
ANR	1117214	ExpressionStatement	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"	1778:5:54532:54570	1115923	1	True				
ANR	1117215	CallExpression	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"		1115923	0					
ANR	1117216	Callee	FAIL_IF		1115923	0					
ANR	1117217	Identifier	FAIL_IF		1115923	0					
ANR	1117218	ArgumentList	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1115923	1					
ANR	1117219	Argument	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1115923	0					
ANR	1117220	CallExpression	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1115923	0					
ANR	1117221	Callee	XORI		1115923	0					
ANR	1117222	Identifier	XORI		1115923	0					
ANR	1117223	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117224	Argument	TMP_EREG1		1115923	0					
ANR	1117225	Identifier	TMP_EREG1		1115923	0					
ANR	1117226	Argument	TMP_EREG1		1115923	1					
ANR	1117227	Identifier	TMP_EREG1		1115923	0					
ANR	1117228	Argument	1		1115923	2					
ANR	1117229	PrimaryExpression	1		1115923	0					
ANR	1117230	IfStatement	if ( src1 != dst )		1115923	2					
ANR	1117231	Condition	src1 != dst	1780:8:54581:54591	1115923	0	True				
ANR	1117232	EqualityExpression	src1 != dst		1115923	0		!=			
ANR	1117233	Identifier	src1		1115923	0					
ANR	1117234	Identifier	dst		1115923	1					
ANR	1117235	ExpressionStatement	overflow_ra = reg_map [ src1 ]	1781:5:54599:54626	1115923	1	True				
ANR	1117236	AssignmentExpression	overflow_ra = reg_map [ src1 ]		1115923	0		=			
ANR	1117237	Identifier	overflow_ra		1115923	0					
ANR	1117238	ArrayIndexing	reg_map [ src1 ]		1115923	1					
ANR	1117239	Identifier	reg_map		1115923	0					
ANR	1117240	Identifier	src1		1115923	1					
ANR	1117241	ElseStatement	else		1115923	0					
ANR	1117242	CompoundStatement		197:9:5348:5348	1115923	0					
ANR	1117243	ExpressionStatement	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"	1784:5:54669:54713	1115923	0	True				
ANR	1117244	CallExpression	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"		1115923	0					
ANR	1117245	Callee	FAIL_IF		1115923	0					
ANR	1117246	Identifier	FAIL_IF		1115923	0					
ANR	1117247	ArgumentList	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	1					
ANR	1117248	Argument	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	0					
ANR	1117249	CallExpression	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	0					
ANR	1117250	Callee	ADD		1115923	0					
ANR	1117251	Identifier	ADD		1115923	0					
ANR	1117252	ArgumentList	TMP_EREG2		1115923	1					
ANR	1117253	Argument	TMP_EREG2		1115923	0					
ANR	1117254	Identifier	TMP_EREG2		1115923	0					
ANR	1117255	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117256	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117257	Identifier	reg_map		1115923	0					
ANR	1117258	Identifier	src1		1115923	1					
ANR	1117259	Argument	ZERO		1115923	2					
ANR	1117260	Identifier	ZERO		1115923	0					
ANR	1117261	ExpressionStatement	overflow_ra = TMP_EREG2	1785:5:54720:54743	1115923	1	True				
ANR	1117262	AssignmentExpression	overflow_ra = TMP_EREG2		1115923	0		=			
ANR	1117263	Identifier	overflow_ra		1115923	0					
ANR	1117264	Identifier	TMP_EREG2		1115923	1					
ANR	1117265	IfStatement	if ( op & SLJIT_SET_E )		1115923	1					
ANR	1117266	Condition	op & SLJIT_SET_E	1789:7:54764:54779	1115923	0	True				
ANR	1117267	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1117268	Identifier	op		1115923	0					
ANR	1117269	Identifier	SLJIT_SET_E		1115923	1					
ANR	1117270	ExpressionStatement	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 ) )"	1790:4:54786:54834	1115923	1	True				
ANR	1117271	CallExpression	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 ) )"		1115923	0					
ANR	1117272	Callee	FAIL_IF		1115923	0					
ANR	1117273	Identifier	FAIL_IF		1115923	0					
ANR	1117274	ArgumentList	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 )"		1115923	1					
ANR	1117275	Argument	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 )"		1115923	0					
ANR	1117276	CallExpression	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 )"		1115923	0					
ANR	1117277	Callee	ADDLI		1115923	0					
ANR	1117278	Identifier	ADDLI		1115923	0					
ANR	1117279	ArgumentList	EQUAL_FLAG		1115923	1					
ANR	1117280	Argument	EQUAL_FLAG		1115923	0					
ANR	1117281	Identifier	EQUAL_FLAG		1115923	0					
ANR	1117282	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117283	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117284	Identifier	reg_map		1115923	0					
ANR	1117285	Identifier	src1		1115923	1					
ANR	1117286	Argument	- src2		1115923	2					
ANR	1117287	UnaryOperationExpression	- src2		1115923	0					
ANR	1117288	UnaryOperator	-		1115923	0					
ANR	1117289	Identifier	src2		1115923	1					
ANR	1117290	IfStatement	if ( op & SLJIT_SET_C )		1115923	2					
ANR	1117291	Condition	op & SLJIT_SET_C	1792:7:54844:54859	1115923	0	True				
ANR	1117292	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1117293	Identifier	op		1115923	0					
ANR	1117294	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117295	CompoundStatement		207:25:5573:5573	1115923	1					
ANR	1117296	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"	1793:4:54868:54924	1115923	0	True				
ANR	1117297	CallExpression	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"		1115923	0					
ANR	1117298	Callee	FAIL_IF		1115923	0					
ANR	1117299	Identifier	FAIL_IF		1115923	0					
ANR	1117300	ArgumentList	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1115923	1					
ANR	1117301	Argument	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1115923	0					
ANR	1117302	CallExpression	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1115923	0					
ANR	1117303	Callee	load_immediate		1115923	0					
ANR	1117304	Identifier	load_immediate		1115923	0					
ANR	1117305	ArgumentList	compiler		1115923	1					
ANR	1117306	Argument	compiler		1115923	0					
ANR	1117307	Identifier	compiler		1115923	0					
ANR	1117308	Argument	ADDR_TMP_mapped		1115923	1					
ANR	1117309	Identifier	ADDR_TMP_mapped		1115923	0					
ANR	1117310	Argument	src2		1115923	2					
ANR	1117311	Identifier	src2		1115923	0					
ANR	1117312	ExpressionStatement	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped ) )"	1794:4:54930:54989	1115923	1	True				
ANR	1117313	CallExpression	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped ) )"		1115923	0					
ANR	1117314	Callee	FAIL_IF		1115923	0					
ANR	1117315	Identifier	FAIL_IF		1115923	0					
ANR	1117316	ArgumentList	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped )"		1115923	1					
ANR	1117317	Argument	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped )"		1115923	0					
ANR	1117318	CallExpression	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped )"		1115923	0					
ANR	1117319	Callee	CMPLTU		1115923	0					
ANR	1117320	Identifier	CMPLTU		1115923	0					
ANR	1117321	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1117322	Argument	ULESS_FLAG		1115923	0					
ANR	1117323	Identifier	ULESS_FLAG		1115923	0					
ANR	1117324	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117325	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117326	Identifier	reg_map		1115923	0					
ANR	1117327	Identifier	src1		1115923	1					
ANR	1117328	Argument	ADDR_TMP_mapped		1115923	2					
ANR	1117329	Identifier	ADDR_TMP_mapped		1115923	0					
ANR	1117330	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	3					
ANR	1117331	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1798:7:55050:55073	1115923	0	True				
ANR	1117332	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1117333	Callee	CHECK_FLAGS		1115923	0					
ANR	1117334	Identifier	CHECK_FLAGS		1115923	0					
ANR	1117335	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1117336	Argument	SLJIT_SET_E		1115923	0					
ANR	1117337	Identifier	SLJIT_SET_E		1115923	0					
ANR	1117338	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"	1799:4:55080:55130	1115923	1	True				
ANR	1117339	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"		1115923	0					
ANR	1117340	Callee	FAIL_IF		1115923	0					
ANR	1117341	Identifier	FAIL_IF		1115923	0					
ANR	1117342	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1115923	1					
ANR	1117343	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1115923	0					
ANR	1117344	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1115923	0					
ANR	1117345	Callee	ADDLI		1115923	0					
ANR	1117346	Identifier	ADDLI		1115923	0					
ANR	1117347	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117348	Argument	reg_map [ dst ]		1115923	0					
ANR	1117349	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117350	Identifier	reg_map		1115923	0					
ANR	1117351	Identifier	dst		1115923	1					
ANR	1117352	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117353	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117354	Identifier	reg_map		1115923	0					
ANR	1117355	Identifier	src1		1115923	1					
ANR	1117356	Argument	- src2		1115923	2					
ANR	1117357	UnaryOperationExpression	- src2		1115923	0					
ANR	1117358	UnaryOperator	-		1115923	0					
ANR	1117359	Identifier	src2		1115923	1					
ANR	1117360	ElseStatement	else		1115923	0					
ANR	1117361	CompoundStatement		216:9:5853:5853	1115923	0					
ANR	1117362	IfStatement	if ( op & SLJIT_SET_O )		1115923	0					
ANR	1117363	Condition	op & SLJIT_SET_O	1803:7:55152:55167	1115923	0	True				
ANR	1117364	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1117365	Identifier	op		1115923	0					
ANR	1117366	Identifier	SLJIT_SET_O		1115923	1					
ANR	1117367	CompoundStatement		218:25:5881:5881	1115923	1					
ANR	1117368	ExpressionStatement	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1804:4:55176:55229	1115923	0	True				
ANR	1117369	CallExpression	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117370	Callee	FAIL_IF		1115923	0					
ANR	1117371	Identifier	FAIL_IF		1115923	0					
ANR	1117372	ArgumentList	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117373	Argument	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117374	CallExpression	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117375	Callee	XOR		1115923	0					
ANR	1117376	Identifier	XOR		1115923	0					
ANR	1117377	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117378	Argument	TMP_EREG1		1115923	0					
ANR	1117379	Identifier	TMP_EREG1		1115923	0					
ANR	1117380	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117381	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117382	Identifier	reg_map		1115923	0					
ANR	1117383	Identifier	src1		1115923	1					
ANR	1117384	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117385	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117386	Identifier	reg_map		1115923	0					
ANR	1117387	Identifier	src2		1115923	1					
ANR	1117388	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"	1805:4:55235:55275	1115923	1	True				
ANR	1117389	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"		1115923	0					
ANR	1117390	Callee	FAIL_IF		1115923	0					
ANR	1117391	Identifier	FAIL_IF		1115923	0					
ANR	1117392	ArgumentList	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1115923	1					
ANR	1117393	Argument	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1115923	0					
ANR	1117394	CallExpression	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1115923	0					
ANR	1117395	Callee	SHRUI		1115923	0					
ANR	1117396	Identifier	SHRUI		1115923	0					
ANR	1117397	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117398	Argument	TMP_EREG1		1115923	0					
ANR	1117399	Identifier	TMP_EREG1		1115923	0					
ANR	1117400	Argument	TMP_EREG1		1115923	1					
ANR	1117401	Identifier	TMP_EREG1		1115923	0					
ANR	1117402	Argument	63		1115923	2					
ANR	1117403	PrimaryExpression	63		1115923	0					
ANR	1117404	IfStatement	if ( src1 != dst )		1115923	2					
ANR	1117405	Condition	src1 != dst	1807:8:55286:55296	1115923	0	True				
ANR	1117406	EqualityExpression	src1 != dst		1115923	0		!=			
ANR	1117407	Identifier	src1		1115923	0					
ANR	1117408	Identifier	dst		1115923	1					
ANR	1117409	ExpressionStatement	overflow_ra = reg_map [ src1 ]	1808:5:55304:55331	1115923	1	True				
ANR	1117410	AssignmentExpression	overflow_ra = reg_map [ src1 ]		1115923	0		=			
ANR	1117411	Identifier	overflow_ra		1115923	0					
ANR	1117412	ArrayIndexing	reg_map [ src1 ]		1115923	1					
ANR	1117413	Identifier	reg_map		1115923	0					
ANR	1117414	Identifier	src1		1115923	1					
ANR	1117415	ElseStatement	else		1115923	0					
ANR	1117416	CompoundStatement		224:9:6053:6053	1115923	0					
ANR	1117417	ExpressionStatement	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"	1811:5:55374:55418	1115923	0	True				
ANR	1117418	CallExpression	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"		1115923	0					
ANR	1117419	Callee	FAIL_IF		1115923	0					
ANR	1117420	Identifier	FAIL_IF		1115923	0					
ANR	1117421	ArgumentList	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	1					
ANR	1117422	Argument	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	0					
ANR	1117423	CallExpression	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1115923	0					
ANR	1117424	Callee	ADD		1115923	0					
ANR	1117425	Identifier	ADD		1115923	0					
ANR	1117426	ArgumentList	TMP_EREG2		1115923	1					
ANR	1117427	Argument	TMP_EREG2		1115923	0					
ANR	1117428	Identifier	TMP_EREG2		1115923	0					
ANR	1117429	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117430	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117431	Identifier	reg_map		1115923	0					
ANR	1117432	Identifier	src1		1115923	1					
ANR	1117433	Argument	ZERO		1115923	2					
ANR	1117434	Identifier	ZERO		1115923	0					
ANR	1117435	ExpressionStatement	overflow_ra = TMP_EREG2	1812:5:55425:55448	1115923	1	True				
ANR	1117436	AssignmentExpression	overflow_ra = TMP_EREG2		1115923	0		=			
ANR	1117437	Identifier	overflow_ra		1115923	0					
ANR	1117438	Identifier	TMP_EREG2		1115923	1					
ANR	1117439	IfStatement	if ( op & SLJIT_SET_E )		1115923	1					
ANR	1117440	Condition	op & SLJIT_SET_E	1816:7:55469:55484	1115923	0	True				
ANR	1117441	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1117442	Identifier	op		1115923	0					
ANR	1117443	Identifier	SLJIT_SET_E		1115923	1					
ANR	1117444	ExpressionStatement	"FAIL_IF ( SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1817:4:55491:55545	1115923	1	True				
ANR	1117445	CallExpression	"FAIL_IF ( SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117446	Callee	FAIL_IF		1115923	0					
ANR	1117447	Identifier	FAIL_IF		1115923	0					
ANR	1117448	ArgumentList	"SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117449	Argument	"SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117450	CallExpression	"SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117451	Callee	SUB		1115923	0					
ANR	1117452	Identifier	SUB		1115923	0					
ANR	1117453	ArgumentList	EQUAL_FLAG		1115923	1					
ANR	1117454	Argument	EQUAL_FLAG		1115923	0					
ANR	1117455	Identifier	EQUAL_FLAG		1115923	0					
ANR	1117456	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117457	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117458	Identifier	reg_map		1115923	0					
ANR	1117459	Identifier	src1		1115923	1					
ANR	1117460	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117461	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117462	Identifier	reg_map		1115923	0					
ANR	1117463	Identifier	src2		1115923	1					
ANR	1117464	IfStatement	if ( op & ( SLJIT_SET_U | SLJIT_SET_C ) )		1115923	2					
ANR	1117465	Condition	op & ( SLJIT_SET_U | SLJIT_SET_C )	1819:7:55555:55586	1115923	0	True				
ANR	1117466	BitAndExpression	op & ( SLJIT_SET_U | SLJIT_SET_C )		1115923	0		&			
ANR	1117467	Identifier	op		1115923	0					
ANR	1117468	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_C		1115923	1		|			
ANR	1117469	Identifier	SLJIT_SET_U		1115923	0					
ANR	1117470	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117471	ExpressionStatement	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1820:4:55593:55650	1115923	1	True				
ANR	1117472	CallExpression	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117473	Callee	FAIL_IF		1115923	0					
ANR	1117474	Identifier	FAIL_IF		1115923	0					
ANR	1117475	ArgumentList	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117476	Argument	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117477	CallExpression	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117478	Callee	CMPLTU		1115923	0					
ANR	1117479	Identifier	CMPLTU		1115923	0					
ANR	1117480	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1117481	Argument	ULESS_FLAG		1115923	0					
ANR	1117482	Identifier	ULESS_FLAG		1115923	0					
ANR	1117483	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117484	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117485	Identifier	reg_map		1115923	0					
ANR	1117486	Identifier	src1		1115923	1					
ANR	1117487	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117488	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117489	Identifier	reg_map		1115923	0					
ANR	1117490	Identifier	src2		1115923	1					
ANR	1117491	IfStatement	if ( op & SLJIT_SET_U )		1115923	3					
ANR	1117492	Condition	op & SLJIT_SET_U	1822:7:55660:55675	1115923	0	True				
ANR	1117493	BitAndExpression	op & SLJIT_SET_U		1115923	0		&			
ANR	1117494	Identifier	op		1115923	0					
ANR	1117495	Identifier	SLJIT_SET_U		1115923	1					
ANR	1117496	ExpressionStatement	"FAIL_IF ( CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"	1823:4:55682:55742	1115923	1	True				
ANR	1117497	CallExpression	"FAIL_IF ( CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"		1115923	0					
ANR	1117498	Callee	FAIL_IF		1115923	0					
ANR	1117499	Identifier	FAIL_IF		1115923	0					
ANR	1117500	ArgumentList	"CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1115923	1					
ANR	1117501	Argument	"CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1115923	0					
ANR	1117502	CallExpression	"CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1115923	0					
ANR	1117503	Callee	CMPLTU		1115923	0					
ANR	1117504	Identifier	CMPLTU		1115923	0					
ANR	1117505	ArgumentList	UGREATER_FLAG		1115923	1					
ANR	1117506	Argument	UGREATER_FLAG		1115923	0					
ANR	1117507	Identifier	UGREATER_FLAG		1115923	0					
ANR	1117508	Argument	reg_map [ src2 ]		1115923	1					
ANR	1117509	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117510	Identifier	reg_map		1115923	0					
ANR	1117511	Identifier	src2		1115923	1					
ANR	1117512	Argument	reg_map [ src1 ]		1115923	2					
ANR	1117513	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117514	Identifier	reg_map		1115923	0					
ANR	1117515	Identifier	src1		1115923	1					
ANR	1117516	IfStatement	if ( op & SLJIT_SET_S )		1115923	4					
ANR	1117517	Condition	op & SLJIT_SET_S	1825:7:55752:55767	1115923	0	True				
ANR	1117518	BitAndExpression	op & SLJIT_SET_S		1115923	0		&			
ANR	1117519	Identifier	op		1115923	0					
ANR	1117520	Identifier	SLJIT_SET_S		1115923	1					
ANR	1117521	CompoundStatement		240:25:6481:6481	1115923	1					
ANR	1117522	ExpressionStatement	"FAIL_IF ( CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1826:4:55776:55832	1115923	0	True				
ANR	1117523	CallExpression	"FAIL_IF ( CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117524	Callee	FAIL_IF		1115923	0					
ANR	1117525	Identifier	FAIL_IF		1115923	0					
ANR	1117526	ArgumentList	"CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117527	Argument	"CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117528	CallExpression	"CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117529	Callee	CMPLTS		1115923	0					
ANR	1117530	Identifier	CMPLTS		1115923	0					
ANR	1117531	ArgumentList	LESS_FLAG		1115923	1					
ANR	1117532	Argument	LESS_FLAG		1115923	0					
ANR	1117533	Identifier	LESS_FLAG		1115923	0					
ANR	1117534	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117535	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117536	Identifier	reg_map		1115923	0					
ANR	1117537	Identifier	src1		1115923	1					
ANR	1117538	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117539	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117540	Identifier	reg_map		1115923	0					
ANR	1117541	Identifier	src2		1115923	1					
ANR	1117542	ExpressionStatement	"FAIL_IF ( CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"	1827:4:55838:55897	1115923	1	True				
ANR	1117543	CallExpression	"FAIL_IF ( CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"		1115923	0					
ANR	1117544	Callee	FAIL_IF		1115923	0					
ANR	1117545	Identifier	FAIL_IF		1115923	0					
ANR	1117546	ArgumentList	"CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1115923	1					
ANR	1117547	Argument	"CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1115923	0					
ANR	1117548	CallExpression	"CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1115923	0					
ANR	1117549	Callee	CMPLTS		1115923	0					
ANR	1117550	Identifier	CMPLTS		1115923	0					
ANR	1117551	ArgumentList	GREATER_FLAG		1115923	1					
ANR	1117552	Argument	GREATER_FLAG		1115923	0					
ANR	1117553	Identifier	GREATER_FLAG		1115923	0					
ANR	1117554	Argument	reg_map [ src2 ]		1115923	1					
ANR	1117555	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117556	Identifier	reg_map		1115923	0					
ANR	1117557	Identifier	src2		1115923	1					
ANR	1117558	Argument	reg_map [ src1 ]		1115923	2					
ANR	1117559	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117560	Identifier	reg_map		1115923	0					
ANR	1117561	Identifier	src1		1115923	1					
ANR	1117562	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C ) )		1115923	5					
ANR	1117563	Condition	CHECK_FLAGS ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C )	1831:7:55958:56023	1115923	0	True				
ANR	1117564	CallExpression	CHECK_FLAGS ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C )		1115923	0					
ANR	1117565	Callee	CHECK_FLAGS		1115923	0					
ANR	1117566	Identifier	CHECK_FLAGS		1115923	0					
ANR	1117567	ArgumentList	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1115923	1					
ANR	1117568	Argument	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1115923	0					
ANR	1117569	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1115923	0		|			
ANR	1117570	Identifier	SLJIT_SET_E		1115923	0					
ANR	1117571	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1115923	1		|			
ANR	1117572	Identifier	SLJIT_SET_U		1115923	0					
ANR	1117573	InclusiveOrExpression	SLJIT_SET_S | SLJIT_SET_C		1115923	1		|			
ANR	1117574	Identifier	SLJIT_SET_S		1115923	0					
ANR	1117575	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117576	ExpressionStatement	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1832:4:56030:56086	1115923	1	True				
ANR	1117577	CallExpression	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117578	Callee	FAIL_IF		1115923	0					
ANR	1117579	Identifier	FAIL_IF		1115923	0					
ANR	1117580	ArgumentList	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117581	Argument	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117582	CallExpression	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117583	Callee	SUB		1115923	0					
ANR	1117584	Identifier	SUB		1115923	0					
ANR	1117585	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117586	Argument	reg_map [ dst ]		1115923	0					
ANR	1117587	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117588	Identifier	reg_map		1115923	0					
ANR	1117589	Identifier	dst		1115923	1					
ANR	1117590	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117591	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117592	Identifier	reg_map		1115923	0					
ANR	1117593	Identifier	src1		1115923	1					
ANR	1117594	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117595	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117596	Identifier	reg_map		1115923	0					
ANR	1117597	Identifier	src2		1115923	1					
ANR	1117598	IfStatement	if ( op & SLJIT_SET_O )		1115923	46					
ANR	1117599	Condition	op & SLJIT_SET_O	1835:6:56099:56114	1115923	0	True				
ANR	1117600	BitAndExpression	op & SLJIT_SET_O		1115923	0		&			
ANR	1117601	Identifier	op		1115923	0					
ANR	1117602	Identifier	SLJIT_SET_O		1115923	1					
ANR	1117603	CompoundStatement		250:24:6828:6828	1115923	1					
ANR	1117604	ExpressionStatement	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"	1836:3:56122:56176	1115923	0	True				
ANR	1117605	CallExpression	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"		1115923	0					
ANR	1117606	Callee	FAIL_IF		1115923	0					
ANR	1117607	Identifier	FAIL_IF		1115923	0					
ANR	1117608	ArgumentList	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1115923	1					
ANR	1117609	Argument	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1115923	0					
ANR	1117610	CallExpression	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1115923	0					
ANR	1117611	Callee	XOR		1115923	0					
ANR	1117612	Identifier	XOR		1115923	0					
ANR	1117613	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1117614	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1117615	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1117616	Argument	reg_map [ dst ]		1115923	1					
ANR	1117617	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117618	Identifier	reg_map		1115923	0					
ANR	1117619	Identifier	dst		1115923	1					
ANR	1117620	Argument	overflow_ra		1115923	2					
ANR	1117621	Identifier	overflow_ra		1115923	0					
ANR	1117622	ExpressionStatement	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"	1837:3:56181:56229	1115923	1	True				
ANR	1117623	CallExpression	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"		1115923	0					
ANR	1117624	Callee	FAIL_IF		1115923	0					
ANR	1117625	Identifier	FAIL_IF		1115923	0					
ANR	1117626	ArgumentList	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1115923	1					
ANR	1117627	Argument	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1115923	0					
ANR	1117628	CallExpression	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1115923	0					
ANR	1117629	Callee	SHRUI		1115923	0					
ANR	1117630	Identifier	SHRUI		1115923	0					
ANR	1117631	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1117632	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1117633	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1117634	Argument	OVERFLOW_FLAG		1115923	1					
ANR	1117635	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1117636	Argument	63		1115923	2					
ANR	1117637	PrimaryExpression	63		1115923	0					
ANR	1117638	ReturnStatement	"return CMOVEQZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO ) ;"	1838:3:56234:56280	1115923	2	True				
ANR	1117639	CallExpression	"CMOVEQZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO )"		1115923	0					
ANR	1117640	Callee	CMOVEQZ		1115923	0					
ANR	1117641	Identifier	CMOVEQZ		1115923	0					
ANR	1117642	ArgumentList	OVERFLOW_FLAG		1115923	1					
ANR	1117643	Argument	OVERFLOW_FLAG		1115923	0					
ANR	1117644	Identifier	OVERFLOW_FLAG		1115923	0					
ANR	1117645	Argument	TMP_EREG1		1115923	1					
ANR	1117646	Identifier	TMP_EREG1		1115923	0					
ANR	1117647	Argument	ZERO		1115923	2					
ANR	1117648	Identifier	ZERO		1115923	0					
ANR	1117649	ReturnStatement	return SLJIT_SUCCESS ;	1841:2:56289:56309	1115923	47	True				
ANR	1117650	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1117651	Label	case SLJIT_SUBC :	1843:1:56313:56328	1115923	48	True				
ANR	1117652	Identifier	SLJIT_SUBC		1115923	0					
ANR	1117653	IfStatement	if ( ( flags & SRC2_IMM ) && src2 == SIMM_16BIT_MIN )		1115923	49					
ANR	1117654	Condition	( flags & SRC2_IMM ) && src2 == SIMM_16BIT_MIN	1844:6:56336:56379	1115923	0	True				
ANR	1117655	AndExpression	( flags & SRC2_IMM ) && src2 == SIMM_16BIT_MIN		1115923	0		&&			
ANR	1117656	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1117657	Identifier	flags		1115923	0					
ANR	1117658	Identifier	SRC2_IMM		1115923	1					
ANR	1117659	EqualityExpression	src2 == SIMM_16BIT_MIN		1115923	1		==			
ANR	1117660	Identifier	src2		1115923	0					
ANR	1117661	Identifier	SIMM_16BIT_MIN		1115923	1					
ANR	1117662	CompoundStatement		259:52:7093:7093	1115923	1					
ANR	1117663	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"	1845:3:56387:56430	1115923	0	True				
ANR	1117664	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"		1115923	0					
ANR	1117665	Callee	FAIL_IF		1115923	0					
ANR	1117666	Identifier	FAIL_IF		1115923	0					
ANR	1117667	ArgumentList	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1115923	1					
ANR	1117668	Argument	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1115923	0					
ANR	1117669	CallExpression	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1115923	0					
ANR	1117670	Callee	ADDLI		1115923	0					
ANR	1117671	Identifier	ADDLI		1115923	0					
ANR	1117672	ArgumentList	TMP_REG2_mapped		1115923	1					
ANR	1117673	Argument	TMP_REG2_mapped		1115923	0					
ANR	1117674	Identifier	TMP_REG2_mapped		1115923	0					
ANR	1117675	Argument	ZERO		1115923	1					
ANR	1117676	Identifier	ZERO		1115923	0					
ANR	1117677	Argument	src2		1115923	2					
ANR	1117678	Identifier	src2		1115923	0					
ANR	1117679	ExpressionStatement	src2 = TMP_REG2	1846:3:56435:56450	1115923	1	True				
ANR	1117680	AssignmentExpression	src2 = TMP_REG2		1115923	0		=			
ANR	1117681	Identifier	src2		1115923	0					
ANR	1117682	Identifier	TMP_REG2		1115923	1					
ANR	1117683	ExpressionStatement	flags &= ~SRC2_IMM	1847:3:56455:56473	1115923	2	True				
ANR	1117684	AssignmentExpression	flags &= ~SRC2_IMM		1115923	0		&=			
ANR	1117685	Identifier	flags		1115923	0					
ANR	1117686	Identifier	~SRC2_IMM		1115923	1					
ANR	1117687	IfStatement	if ( flags & SRC2_IMM )		1115923	50					
ANR	1117688	Condition	flags & SRC2_IMM	1850:6:56486:56501	1115923	0	True				
ANR	1117689	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1117690	Identifier	flags		1115923	0					
ANR	1117691	Identifier	SRC2_IMM		1115923	1					
ANR	1117692	CompoundStatement		265:24:7215:7215	1115923	1					
ANR	1117693	IfStatement	if ( op & SLJIT_SET_C )		1115923	0					
ANR	1117694	Condition	op & SLJIT_SET_C	1851:7:56513:56528	1115923	0	True				
ANR	1117695	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1117696	Identifier	op		1115923	0					
ANR	1117697	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117698	CompoundStatement		266:25:7242:7242	1115923	1					
ANR	1117699	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , - src2 ) )"	1852:4:56537:56594	1115923	0	True				
ANR	1117700	CallExpression	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , - src2 ) )"		1115923	0					
ANR	1117701	Callee	FAIL_IF		1115923	0					
ANR	1117702	Identifier	FAIL_IF		1115923	0					
ANR	1117703	ArgumentList	"load_immediate ( compiler , ADDR_TMP_mapped , - src2 )"		1115923	1					
ANR	1117704	Argument	"load_immediate ( compiler , ADDR_TMP_mapped , - src2 )"		1115923	0					
ANR	1117705	CallExpression	"load_immediate ( compiler , ADDR_TMP_mapped , - src2 )"		1115923	0					
ANR	1117706	Callee	load_immediate		1115923	0					
ANR	1117707	Identifier	load_immediate		1115923	0					
ANR	1117708	ArgumentList	compiler		1115923	1					
ANR	1117709	Argument	compiler		1115923	0					
ANR	1117710	Identifier	compiler		1115923	0					
ANR	1117711	Argument	ADDR_TMP_mapped		1115923	1					
ANR	1117712	Identifier	ADDR_TMP_mapped		1115923	0					
ANR	1117713	Argument	- src2		1115923	2					
ANR	1117714	UnaryOperationExpression	- src2		1115923	0					
ANR	1117715	UnaryOperator	-		1115923	0					
ANR	1117716	Identifier	src2		1115923	1					
ANR	1117717	ExpressionStatement	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped ) )"	1853:4:56600:56658	1115923	1	True				
ANR	1117718	CallExpression	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped ) )"		1115923	0					
ANR	1117719	Callee	FAIL_IF		1115923	0					
ANR	1117720	Identifier	FAIL_IF		1115923	0					
ANR	1117721	ArgumentList	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped )"		1115923	1					
ANR	1117722	Argument	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped )"		1115923	0					
ANR	1117723	CallExpression	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped )"		1115923	0					
ANR	1117724	Callee	CMPLTU		1115923	0					
ANR	1117725	Identifier	CMPLTU		1115923	0					
ANR	1117726	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117727	Argument	TMP_EREG1		1115923	0					
ANR	1117728	Identifier	TMP_EREG1		1115923	0					
ANR	1117729	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117730	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117731	Identifier	reg_map		1115923	0					
ANR	1117732	Identifier	src1		1115923	1					
ANR	1117733	Argument	ADDR_TMP_mapped		1115923	2					
ANR	1117734	Identifier	ADDR_TMP_mapped		1115923	0					
ANR	1117735	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"	1857:3:56715:56765	1115923	1	True				
ANR	1117736	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"		1115923	0					
ANR	1117737	Callee	FAIL_IF		1115923	0					
ANR	1117738	Identifier	FAIL_IF		1115923	0					
ANR	1117739	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1115923	1					
ANR	1117740	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1115923	0					
ANR	1117741	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1115923	0					
ANR	1117742	Callee	ADDLI		1115923	0					
ANR	1117743	Identifier	ADDLI		1115923	0					
ANR	1117744	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117745	Argument	reg_map [ dst ]		1115923	0					
ANR	1117746	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117747	Identifier	reg_map		1115923	0					
ANR	1117748	Identifier	dst		1115923	1					
ANR	1117749	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117750	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117751	Identifier	reg_map		1115923	0					
ANR	1117752	Identifier	src1		1115923	1					
ANR	1117753	Argument	- src2		1115923	2					
ANR	1117754	UnaryOperationExpression	- src2		1115923	0					
ANR	1117755	UnaryOperator	-		1115923	0					
ANR	1117756	Identifier	src2		1115923	1					
ANR	1117757	ElseStatement	else		1115923	0					
ANR	1117758	CompoundStatement		274:9:7488:7488	1115923	0					
ANR	1117759	IfStatement	if ( op & SLJIT_SET_C )		1115923	0					
ANR	1117760	Condition	op & SLJIT_SET_C	1860:7:56786:56801	1115923	0	True				
ANR	1117761	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1117762	Identifier	op		1115923	0					
ANR	1117763	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117764	ExpressionStatement	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1861:4:56808:56864	1115923	1	True				
ANR	1117765	CallExpression	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117766	Callee	FAIL_IF		1115923	0					
ANR	1117767	Identifier	FAIL_IF		1115923	0					
ANR	1117768	ArgumentList	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117769	Argument	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117770	CallExpression	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117771	Callee	CMPLTU		1115923	0					
ANR	1117772	Identifier	CMPLTU		1115923	0					
ANR	1117773	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117774	Argument	TMP_EREG1		1115923	0					
ANR	1117775	Identifier	TMP_EREG1		1115923	0					
ANR	1117776	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117777	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117778	Identifier	reg_map		1115923	0					
ANR	1117779	Identifier	src1		1115923	1					
ANR	1117780	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117781	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117782	Identifier	reg_map		1115923	0					
ANR	1117783	Identifier	src2		1115923	1					
ANR	1117784	ExpressionStatement	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1863:3:56916:56972	1115923	1	True				
ANR	1117785	CallExpression	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117786	Callee	FAIL_IF		1115923	0					
ANR	1117787	Identifier	FAIL_IF		1115923	0					
ANR	1117788	ArgumentList	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117789	Argument	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117790	CallExpression	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117791	Callee	SUB		1115923	0					
ANR	1117792	Identifier	SUB		1115923	0					
ANR	1117793	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117794	Argument	reg_map [ dst ]		1115923	0					
ANR	1117795	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117796	Identifier	reg_map		1115923	0					
ANR	1117797	Identifier	dst		1115923	1					
ANR	1117798	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117799	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117800	Identifier	reg_map		1115923	0					
ANR	1117801	Identifier	src1		1115923	1					
ANR	1117802	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117803	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117804	Identifier	reg_map		1115923	0					
ANR	1117805	Identifier	src2		1115923	1					
ANR	1117806	IfStatement	if ( op & SLJIT_SET_C )		1115923	51					
ANR	1117807	Condition	op & SLJIT_SET_C	1866:6:56985:57000	1115923	0	True				
ANR	1117808	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1117809	Identifier	op		1115923	0					
ANR	1117810	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117811	ExpressionStatement	"FAIL_IF ( CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG ) )"	1867:3:57006:57059	1115923	1	True				
ANR	1117812	CallExpression	"FAIL_IF ( CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG ) )"		1115923	0					
ANR	1117813	Callee	FAIL_IF		1115923	0					
ANR	1117814	Identifier	FAIL_IF		1115923	0					
ANR	1117815	ArgumentList	"CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG )"		1115923	1					
ANR	1117816	Argument	"CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1117817	CallExpression	"CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1117818	Callee	CMOVEQZ		1115923	0					
ANR	1117819	Identifier	CMOVEQZ		1115923	0					
ANR	1117820	ArgumentList	TMP_EREG1		1115923	1					
ANR	1117821	Argument	TMP_EREG1		1115923	0					
ANR	1117822	Identifier	TMP_EREG1		1115923	0					
ANR	1117823	Argument	reg_map [ dst ]		1115923	1					
ANR	1117824	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117825	Identifier	reg_map		1115923	0					
ANR	1117826	Identifier	dst		1115923	1					
ANR	1117827	Argument	ULESS_FLAG		1115923	2					
ANR	1117828	Identifier	ULESS_FLAG		1115923	0					
ANR	1117829	ExpressionStatement	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"	1869:2:57064:57116	1115923	52	True				
ANR	1117830	CallExpression	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"		1115923	0					
ANR	1117831	Callee	FAIL_IF		1115923	0					
ANR	1117832	Identifier	FAIL_IF		1115923	0					
ANR	1117833	ArgumentList	"SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1115923	1					
ANR	1117834	Argument	"SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1117835	CallExpression	"SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1115923	0					
ANR	1117836	Callee	SUB		1115923	0					
ANR	1117837	Identifier	SUB		1115923	0					
ANR	1117838	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117839	Argument	reg_map [ dst ]		1115923	0					
ANR	1117840	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117841	Identifier	reg_map		1115923	0					
ANR	1117842	Identifier	dst		1115923	1					
ANR	1117843	Argument	reg_map [ dst ]		1115923	1					
ANR	1117844	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117845	Identifier	reg_map		1115923	0					
ANR	1117846	Identifier	dst		1115923	1					
ANR	1117847	Argument	ULESS_FLAG		1115923	2					
ANR	1117848	Identifier	ULESS_FLAG		1115923	0					
ANR	1117849	IfStatement	if ( op & SLJIT_SET_C )		1115923	53					
ANR	1117850	Condition	op & SLJIT_SET_C	1871:6:57125:57140	1115923	0	True				
ANR	1117851	BitAndExpression	op & SLJIT_SET_C		1115923	0		&			
ANR	1117852	Identifier	op		1115923	0					
ANR	1117853	Identifier	SLJIT_SET_C		1115923	1					
ANR	1117854	ExpressionStatement	"FAIL_IF ( ADD ( ULESS_FLAG , TMP_EREG1 , ZERO ) )"	1872:3:57146:57187	1115923	1	True				
ANR	1117855	CallExpression	"FAIL_IF ( ADD ( ULESS_FLAG , TMP_EREG1 , ZERO ) )"		1115923	0					
ANR	1117856	Callee	FAIL_IF		1115923	0					
ANR	1117857	Identifier	FAIL_IF		1115923	0					
ANR	1117858	ArgumentList	"ADD ( ULESS_FLAG , TMP_EREG1 , ZERO )"		1115923	1					
ANR	1117859	Argument	"ADD ( ULESS_FLAG , TMP_EREG1 , ZERO )"		1115923	0					
ANR	1117860	CallExpression	"ADD ( ULESS_FLAG , TMP_EREG1 , ZERO )"		1115923	0					
ANR	1117861	Callee	ADD		1115923	0					
ANR	1117862	Identifier	ADD		1115923	0					
ANR	1117863	ArgumentList	ULESS_FLAG		1115923	1					
ANR	1117864	Argument	ULESS_FLAG		1115923	0					
ANR	1117865	Identifier	ULESS_FLAG		1115923	0					
ANR	1117866	Argument	TMP_EREG1		1115923	1					
ANR	1117867	Identifier	TMP_EREG1		1115923	0					
ANR	1117868	Argument	ZERO		1115923	2					
ANR	1117869	Identifier	ZERO		1115923	0					
ANR	1117870	ReturnStatement	return SLJIT_SUCCESS ;	1874:2:57192:57212	1115923	54	True				
ANR	1117871	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1117872	Label	case SLJIT_MUL :	1876:1:57216:57230	1115923	55	True				
ANR	1117873	Identifier	SLJIT_MUL		1115923	0					
ANR	1117874	IfStatement	if ( flags & SRC2_IMM )		1115923	56					
ANR	1117875	Condition	flags & SRC2_IMM	1877:6:57238:57253	1115923	0	True				
ANR	1117876	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1117877	Identifier	flags		1115923	0					
ANR	1117878	Identifier	SRC2_IMM		1115923	1					
ANR	1117879	CompoundStatement		292:24:7967:7967	1115923	1					
ANR	1117880	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2_mapped , src2 ) )"	1878:3:57261:57317	1115923	0	True				
ANR	1117881	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2_mapped , src2 ) )"		1115923	0					
ANR	1117882	Callee	FAIL_IF		1115923	0					
ANR	1117883	Identifier	FAIL_IF		1115923	0					
ANR	1117884	ArgumentList	"load_immediate ( compiler , TMP_REG2_mapped , src2 )"		1115923	1					
ANR	1117885	Argument	"load_immediate ( compiler , TMP_REG2_mapped , src2 )"		1115923	0					
ANR	1117886	CallExpression	"load_immediate ( compiler , TMP_REG2_mapped , src2 )"		1115923	0					
ANR	1117887	Callee	load_immediate		1115923	0					
ANR	1117888	Identifier	load_immediate		1115923	0					
ANR	1117889	ArgumentList	compiler		1115923	1					
ANR	1117890	Argument	compiler		1115923	0					
ANR	1117891	Identifier	compiler		1115923	0					
ANR	1117892	Argument	TMP_REG2_mapped		1115923	1					
ANR	1117893	Identifier	TMP_REG2_mapped		1115923	0					
ANR	1117894	Argument	src2		1115923	2					
ANR	1117895	Identifier	src2		1115923	0					
ANR	1117896	ExpressionStatement	src2 = TMP_REG2	1879:3:57322:57337	1115923	1	True				
ANR	1117897	AssignmentExpression	src2 = TMP_REG2		1115923	0		=			
ANR	1117898	Identifier	src2		1115923	0					
ANR	1117899	Identifier	TMP_REG2		1115923	1					
ANR	1117900	ExpressionStatement	flags &= ~SRC2_IMM	1880:3:57342:57360	1115923	2	True				
ANR	1117901	AssignmentExpression	flags &= ~SRC2_IMM		1115923	0		&=			
ANR	1117902	Identifier	flags		1115923	0					
ANR	1117903	Identifier	~SRC2_IMM		1115923	1					
ANR	1117904	ExpressionStatement	"FAIL_IF ( MUL ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1883:2:57369:57425	1115923	57	True				
ANR	1117905	CallExpression	"FAIL_IF ( MUL ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1115923	0					
ANR	1117906	Callee	FAIL_IF		1115923	0					
ANR	1117907	Identifier	FAIL_IF		1115923	0					
ANR	1117908	ArgumentList	"MUL ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	1					
ANR	1117909	Argument	"MUL ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117910	CallExpression	"MUL ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1115923	0					
ANR	1117911	Callee	MUL		1115923	0					
ANR	1117912	Identifier	MUL		1115923	0					
ANR	1117913	ArgumentList	reg_map [ dst ]		1115923	1					
ANR	1117914	Argument	reg_map [ dst ]		1115923	0					
ANR	1117915	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1117916	Identifier	reg_map		1115923	0					
ANR	1117917	Identifier	dst		1115923	1					
ANR	1117918	Argument	reg_map [ src1 ]		1115923	1					
ANR	1117919	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117920	Identifier	reg_map		1115923	0					
ANR	1117921	Identifier	src1		1115923	1					
ANR	1117922	Argument	reg_map [ src2 ]		1115923	2					
ANR	1117923	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1117924	Identifier	reg_map		1115923	0					
ANR	1117925	Identifier	src2		1115923	1					
ANR	1117926	ReturnStatement	return SLJIT_SUCCESS ;	1885:2:57430:57450	1115923	58	True				
ANR	1117927	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1117928	Statement	define	1887:1:57454:57459	1115923	59	True				
ANR	1117929	Statement	EMIT_LOGICAL	1887:8:57461:57472	1115923	60	True				
ANR	1117930	Statement	(	1887:20:57473:57473	1115923	61	True				
ANR	1117931	Statement	op_imm	1887:21:57474:57479	1115923	62	True				
ANR	1117932	Statement	","	1887:27:57480:57480	1115923	63	True				
ANR	1117933	Statement	op_norm	1887:29:57482:57488	1115923	64	True				
ANR	1117934	Statement	)	1887:36:57489:57489	1115923	65	True				
ANR	1117935	IfStatement	if ( flags & SRC2_IMM )		1115923	66					
ANR	1117936	Condition	flags & SRC2_IMM	1888:5:57498:57513	1115923	0	True				
ANR	1117937	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1117938	Identifier	flags		1115923	0					
ANR	1117939	Identifier	SRC2_IMM		1115923	1					
ANR	1117940	CompoundStatement		303:23:8227:8227	1115923	1					
ANR	1117941	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"	1889:2:57522:57578	1115923	0	True				
ANR	1117942	CallExpression	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"		1115923	0					
ANR	1117943	Callee	FAIL_IF		1115923	0					
ANR	1117944	Identifier	FAIL_IF		1115923	0					
ANR	1117945	ArgumentList	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1115923	1					
ANR	1117946	Argument	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1115923	0					
ANR	1117947	CallExpression	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1115923	0					
ANR	1117948	Callee	load_immediate		1115923	0					
ANR	1117949	Identifier	load_immediate		1115923	0					
ANR	1117950	ArgumentList	compiler		1115923	1					
ANR	1117951	Argument	compiler		1115923	0					
ANR	1117952	Identifier	compiler		1115923	0					
ANR	1117953	Argument	ADDR_TMP_mapped		1115923	1					
ANR	1117954	Identifier	ADDR_TMP_mapped		1115923	0					
ANR	1117955	Argument	src2		1115923	2					
ANR	1117956	Identifier	src2		1115923	0					
ANR	1117957	IfStatement	if ( op & SLJIT_SET_E )		1115923	1					
ANR	1117958	Condition	op & SLJIT_SET_E	1890:6:57588:57603	1115923	0	True				
ANR	1117959	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1117960	Identifier	op		1115923	0					
ANR	1117961	Identifier	SLJIT_SET_E		1115923	1					
ANR	1117962	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"	1891:3:57611:57719	1115923	1	True				
ANR	1117963	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"		1115923	0					
ANR	1117964	Callee	FAIL_IF		1115923	0					
ANR	1117965	Identifier	FAIL_IF		1115923	0					
ANR	1117966	ArgumentList	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1115923	1					
ANR	1117967	Argument	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1115923	0					
ANR	1117968	CallExpression	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1115923	0					
ANR	1117969	Callee	push_3_buffer		1115923	0					
ANR	1117970	Identifier	push_3_buffer		1115923	0					
ANR	1117971	ArgumentList	compiler		1115923	1					
ANR	1117972	Argument	compiler		1115923	0					
ANR	1117973	Identifier	compiler		1115923	0					
ANR	1117974	Argument	op_norm		1115923	1					
ANR	1117975	Identifier	op_norm		1115923	0					
ANR	1117976	Argument	EQUAL_FLAG		1115923	2					
ANR	1117977	Identifier	EQUAL_FLAG		1115923	0					
ANR	1117978	Argument	reg_map [ src1 ]		1115923	3					
ANR	1117979	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1117980	Identifier	reg_map		1115923	0					
ANR	1117981	Identifier	src1		1115923	1					
ANR	1117982	Argument	ADDR_TMP_mapped		1115923	4					
ANR	1117983	Identifier	ADDR_TMP_mapped		1115923	0					
ANR	1117984	Argument	__LINE__		1115923	5					
ANR	1117985	Identifier	__LINE__		1115923	0					
ANR	1117986	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	2					
ANR	1117987	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1894:6:57729:57752	1115923	0	True				
ANR	1117988	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1117989	Callee	CHECK_FLAGS		1115923	0					
ANR	1117990	Identifier	CHECK_FLAGS		1115923	0					
ANR	1117991	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1117992	Argument	SLJIT_SET_E		1115923	0					
ANR	1117993	Identifier	SLJIT_SET_E		1115923	0					
ANR	1117994	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"	1895:3:57760:57870	1115923	1	True				
ANR	1117995	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"		1115923	0					
ANR	1117996	Callee	FAIL_IF		1115923	0					
ANR	1117997	Identifier	FAIL_IF		1115923	0					
ANR	1117998	ArgumentList	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1115923	1					
ANR	1117999	Argument	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1115923	0					
ANR	1118000	CallExpression	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1115923	0					
ANR	1118001	Callee	push_3_buffer		1115923	0					
ANR	1118002	Identifier	push_3_buffer		1115923	0					
ANR	1118003	ArgumentList	compiler		1115923	1					
ANR	1118004	Argument	compiler		1115923	0					
ANR	1118005	Identifier	compiler		1115923	0					
ANR	1118006	Argument	op_norm		1115923	1					
ANR	1118007	Identifier	op_norm		1115923	0					
ANR	1118008	Argument	reg_map [ dst ]		1115923	2					
ANR	1118009	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1118010	Identifier	reg_map		1115923	0					
ANR	1118011	Identifier	dst		1115923	1					
ANR	1118012	Argument	reg_map [ src1 ]		1115923	3					
ANR	1118013	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1118014	Identifier	reg_map		1115923	0					
ANR	1118015	Identifier	src1		1115923	1					
ANR	1118016	Argument	ADDR_TMP_mapped		1115923	4					
ANR	1118017	Identifier	ADDR_TMP_mapped		1115923	0					
ANR	1118018	Argument	__LINE__		1115923	5					
ANR	1118019	Identifier	__LINE__		1115923	0					
ANR	1118020	ElseStatement	else		1115923	0					
ANR	1118021	CompoundStatement		313:8:8593:8593	1115923	0					
ANR	1118022	IfStatement	if ( op & SLJIT_SET_E )		1115923	0					
ANR	1118023	Condition	op & SLJIT_SET_E	1899:6:57892:57907	1115923	0	True				
ANR	1118024	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1118025	Identifier	op		1115923	0					
ANR	1118026	Identifier	SLJIT_SET_E		1115923	1					
ANR	1118027	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"	1900:3:57915:58021	1115923	1	True				
ANR	1118028	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"		1115923	0					
ANR	1118029	Callee	FAIL_IF		1115923	0					
ANR	1118030	Identifier	FAIL_IF		1115923	0					
ANR	1118031	ArgumentList	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	1					
ANR	1118032	Argument	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118033	CallExpression	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118034	Callee	push_3_buffer		1115923	0					
ANR	1118035	Identifier	push_3_buffer		1115923	0					
ANR	1118036	ArgumentList	compiler		1115923	1					
ANR	1118037	Argument	compiler		1115923	0					
ANR	1118038	Identifier	compiler		1115923	0					
ANR	1118039	Argument	op_norm		1115923	1					
ANR	1118040	Identifier	op_norm		1115923	0					
ANR	1118041	Argument	EQUAL_FLAG		1115923	2					
ANR	1118042	Identifier	EQUAL_FLAG		1115923	0					
ANR	1118043	Argument	reg_map [ src1 ]		1115923	3					
ANR	1118044	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1118045	Identifier	reg_map		1115923	0					
ANR	1118046	Identifier	src1		1115923	1					
ANR	1118047	Argument	reg_map [ src2 ]		1115923	4					
ANR	1118048	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1118049	Identifier	reg_map		1115923	0					
ANR	1118050	Identifier	src2		1115923	1					
ANR	1118051	Argument	__LINE__		1115923	5					
ANR	1118052	Identifier	__LINE__		1115923	0					
ANR	1118053	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	1					
ANR	1118054	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1903:6:58031:58054	1115923	0	True				
ANR	1118055	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1118056	Callee	CHECK_FLAGS		1115923	0					
ANR	1118057	Identifier	CHECK_FLAGS		1115923	0					
ANR	1118058	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1118059	Argument	SLJIT_SET_E		1115923	0					
ANR	1118060	Identifier	SLJIT_SET_E		1115923	0					
ANR	1118061	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"	1904:3:58062:58170	1115923	1	True				
ANR	1118062	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"		1115923	0					
ANR	1118063	Callee	FAIL_IF		1115923	0					
ANR	1118064	Identifier	FAIL_IF		1115923	0					
ANR	1118065	ArgumentList	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	1					
ANR	1118066	Argument	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118067	CallExpression	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118068	Callee	push_3_buffer		1115923	0					
ANR	1118069	Identifier	push_3_buffer		1115923	0					
ANR	1118070	ArgumentList	compiler		1115923	1					
ANR	1118071	Argument	compiler		1115923	0					
ANR	1118072	Identifier	compiler		1115923	0					
ANR	1118073	Argument	op_norm		1115923	1					
ANR	1118074	Identifier	op_norm		1115923	0					
ANR	1118075	Argument	reg_map [ dst ]		1115923	2					
ANR	1118076	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1118077	Identifier	reg_map		1115923	0					
ANR	1118078	Identifier	dst		1115923	1					
ANR	1118079	Argument	reg_map [ src1 ]		1115923	3					
ANR	1118080	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1118081	Identifier	reg_map		1115923	0					
ANR	1118082	Identifier	src1		1115923	1					
ANR	1118083	Argument	reg_map [ src2 ]		1115923	4					
ANR	1118084	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1118085	Identifier	reg_map		1115923	0					
ANR	1118086	Identifier	src2		1115923	1					
ANR	1118087	Argument	__LINE__		1115923	5					
ANR	1118088	Identifier	__LINE__		1115923	0					
ANR	1118089	Label	case SLJIT_AND :	1909:1:58179:58193	1115923	67	True				
ANR	1118090	Identifier	SLJIT_AND		1115923	0					
ANR	1118091	ExpressionStatement	"EMIT_LOGICAL ( TILEGX_OPC_ANDI , TILEGX_OPC_AND )"	1910:2:58197:58242	1115923	68	True				
ANR	1118092	CallExpression	"EMIT_LOGICAL ( TILEGX_OPC_ANDI , TILEGX_OPC_AND )"		1115923	0					
ANR	1118093	Callee	EMIT_LOGICAL		1115923	0					
ANR	1118094	Identifier	EMIT_LOGICAL		1115923	0					
ANR	1118095	ArgumentList	TILEGX_OPC_ANDI		1115923	1					
ANR	1118096	Argument	TILEGX_OPC_ANDI		1115923	0					
ANR	1118097	Identifier	TILEGX_OPC_ANDI		1115923	0					
ANR	1118098	Argument	TILEGX_OPC_AND		1115923	1					
ANR	1118099	Identifier	TILEGX_OPC_AND		1115923	0					
ANR	1118100	ReturnStatement	return SLJIT_SUCCESS ;	1911:2:58246:58266	1115923	69	True				
ANR	1118101	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1118102	Label	case SLJIT_OR :	1913:1:58270:58283	1115923	70	True				
ANR	1118103	Identifier	SLJIT_OR		1115923	0					
ANR	1118104	ExpressionStatement	"EMIT_LOGICAL ( TILEGX_OPC_ORI , TILEGX_OPC_OR )"	1914:2:58287:58330	1115923	71	True				
ANR	1118105	CallExpression	"EMIT_LOGICAL ( TILEGX_OPC_ORI , TILEGX_OPC_OR )"		1115923	0					
ANR	1118106	Callee	EMIT_LOGICAL		1115923	0					
ANR	1118107	Identifier	EMIT_LOGICAL		1115923	0					
ANR	1118108	ArgumentList	TILEGX_OPC_ORI		1115923	1					
ANR	1118109	Argument	TILEGX_OPC_ORI		1115923	0					
ANR	1118110	Identifier	TILEGX_OPC_ORI		1115923	0					
ANR	1118111	Argument	TILEGX_OPC_OR		1115923	1					
ANR	1118112	Identifier	TILEGX_OPC_OR		1115923	0					
ANR	1118113	ReturnStatement	return SLJIT_SUCCESS ;	1915:2:58334:58354	1115923	72	True				
ANR	1118114	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1118115	Label	case SLJIT_XOR :	1917:1:58358:58372	1115923	73	True				
ANR	1118116	Identifier	SLJIT_XOR		1115923	0					
ANR	1118117	ExpressionStatement	"EMIT_LOGICAL ( TILEGX_OPC_XORI , TILEGX_OPC_XOR )"	1918:2:58376:58421	1115923	74	True				
ANR	1118118	CallExpression	"EMIT_LOGICAL ( TILEGX_OPC_XORI , TILEGX_OPC_XOR )"		1115923	0					
ANR	1118119	Callee	EMIT_LOGICAL		1115923	0					
ANR	1118120	Identifier	EMIT_LOGICAL		1115923	0					
ANR	1118121	ArgumentList	TILEGX_OPC_XORI		1115923	1					
ANR	1118122	Argument	TILEGX_OPC_XORI		1115923	0					
ANR	1118123	Identifier	TILEGX_OPC_XORI		1115923	0					
ANR	1118124	Argument	TILEGX_OPC_XOR		1115923	1					
ANR	1118125	Identifier	TILEGX_OPC_XOR		1115923	0					
ANR	1118126	ReturnStatement	return SLJIT_SUCCESS ;	1919:2:58425:58445	1115923	75	True				
ANR	1118127	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1118128	Statement	define	1921:1:58449:58454	1115923	76	True				
ANR	1118129	Statement	EMIT_SHIFT	1921:8:58456:58465	1115923	77	True				
ANR	1118130	Statement	(	1921:18:58466:58466	1115923	78	True				
ANR	1118131	Statement	op_imm	1921:19:58467:58472	1115923	79	True				
ANR	1118132	Statement	","	1921:25:58473:58473	1115923	80	True				
ANR	1118133	Statement	op_norm	1921:27:58475:58481	1115923	81	True				
ANR	1118134	Statement	)	1921:34:58482:58482	1115923	82	True				
ANR	1118135	IfStatement	if ( flags & SRC2_IMM )		1115923	83					
ANR	1118136	Condition	flags & SRC2_IMM	1922:5:58491:58506	1115923	0	True				
ANR	1118137	BitAndExpression	flags & SRC2_IMM		1115923	0		&			
ANR	1118138	Identifier	flags		1115923	0					
ANR	1118139	Identifier	SRC2_IMM		1115923	1					
ANR	1118140	CompoundStatement		337:23:9220:9220	1115923	1					
ANR	1118141	IfStatement	if ( op & SLJIT_SET_E )		1115923	0					
ANR	1118142	Condition	op & SLJIT_SET_E	1923:6:58519:58534	1115923	0	True				
ANR	1118143	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1118144	Identifier	op		1115923	0					
ANR	1118145	Identifier	SLJIT_SET_E		1115923	1					
ANR	1118146	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"	1924:3:58542:58645	1115923	1	True				
ANR	1118147	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"		1115923	0					
ANR	1118148	Callee	FAIL_IF		1115923	0					
ANR	1118149	Identifier	FAIL_IF		1115923	0					
ANR	1118150	ArgumentList	"push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1115923	1					
ANR	1118151	Argument	"push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1115923	0					
ANR	1118152	CallExpression	"push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1115923	0					
ANR	1118153	Callee	push_3_buffer		1115923	0					
ANR	1118154	Identifier	push_3_buffer		1115923	0					
ANR	1118155	ArgumentList	compiler		1115923	1					
ANR	1118156	Argument	compiler		1115923	0					
ANR	1118157	Identifier	compiler		1115923	0					
ANR	1118158	Argument	op_imm		1115923	1					
ANR	1118159	Identifier	op_imm		1115923	0					
ANR	1118160	Argument	EQUAL_FLAG		1115923	2					
ANR	1118161	Identifier	EQUAL_FLAG		1115923	0					
ANR	1118162	Argument	reg_map [ src1 ]		1115923	3					
ANR	1118163	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1118164	Identifier	reg_map		1115923	0					
ANR	1118165	Identifier	src1		1115923	1					
ANR	1118166	Argument	src2 & 0x3F		1115923	4					
ANR	1118167	BitAndExpression	src2 & 0x3F		1115923	0		&			
ANR	1118168	Identifier	src2		1115923	0					
ANR	1118169	PrimaryExpression	0x3F		1115923	1					
ANR	1118170	Argument	__LINE__		1115923	5					
ANR	1118171	Identifier	__LINE__		1115923	0					
ANR	1118172	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	1					
ANR	1118173	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1927:6:58655:58678	1115923	0	True				
ANR	1118174	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1118175	Callee	CHECK_FLAGS		1115923	0					
ANR	1118176	Identifier	CHECK_FLAGS		1115923	0					
ANR	1118177	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1118178	Argument	SLJIT_SET_E		1115923	0					
ANR	1118179	Identifier	SLJIT_SET_E		1115923	0					
ANR	1118180	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"	1928:3:58686:58791	1115923	1	True				
ANR	1118181	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"		1115923	0					
ANR	1118182	Callee	FAIL_IF		1115923	0					
ANR	1118183	Identifier	FAIL_IF		1115923	0					
ANR	1118184	ArgumentList	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1115923	1					
ANR	1118185	Argument	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1115923	0					
ANR	1118186	CallExpression	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1115923	0					
ANR	1118187	Callee	push_3_buffer		1115923	0					
ANR	1118188	Identifier	push_3_buffer		1115923	0					
ANR	1118189	ArgumentList	compiler		1115923	1					
ANR	1118190	Argument	compiler		1115923	0					
ANR	1118191	Identifier	compiler		1115923	0					
ANR	1118192	Argument	op_imm		1115923	1					
ANR	1118193	Identifier	op_imm		1115923	0					
ANR	1118194	Argument	reg_map [ dst ]		1115923	2					
ANR	1118195	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1118196	Identifier	reg_map		1115923	0					
ANR	1118197	Identifier	dst		1115923	1					
ANR	1118198	Argument	reg_map [ src1 ]		1115923	3					
ANR	1118199	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1118200	Identifier	reg_map		1115923	0					
ANR	1118201	Identifier	src1		1115923	1					
ANR	1118202	Argument	src2 & 0x3F		1115923	4					
ANR	1118203	BitAndExpression	src2 & 0x3F		1115923	0		&			
ANR	1118204	Identifier	src2		1115923	0					
ANR	1118205	PrimaryExpression	0x3F		1115923	1					
ANR	1118206	Argument	__LINE__		1115923	5					
ANR	1118207	Identifier	__LINE__		1115923	0					
ANR	1118208	ElseStatement	else		1115923	0					
ANR	1118209	CompoundStatement		346:8:9514:9514	1115923	0					
ANR	1118210	IfStatement	if ( op & SLJIT_SET_E )		1115923	0					
ANR	1118211	Condition	op & SLJIT_SET_E	1932:6:58813:58828	1115923	0	True				
ANR	1118212	BitAndExpression	op & SLJIT_SET_E		1115923	0		&			
ANR	1118213	Identifier	op		1115923	0					
ANR	1118214	Identifier	SLJIT_SET_E		1115923	1					
ANR	1118215	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"	1933:3:58836:58942	1115923	1	True				
ANR	1118216	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"		1115923	0					
ANR	1118217	Callee	FAIL_IF		1115923	0					
ANR	1118218	Identifier	FAIL_IF		1115923	0					
ANR	1118219	ArgumentList	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	1					
ANR	1118220	Argument	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118221	CallExpression	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118222	Callee	push_3_buffer		1115923	0					
ANR	1118223	Identifier	push_3_buffer		1115923	0					
ANR	1118224	ArgumentList	compiler		1115923	1					
ANR	1118225	Argument	compiler		1115923	0					
ANR	1118226	Identifier	compiler		1115923	0					
ANR	1118227	Argument	op_norm		1115923	1					
ANR	1118228	Identifier	op_norm		1115923	0					
ANR	1118229	Argument	EQUAL_FLAG		1115923	2					
ANR	1118230	Identifier	EQUAL_FLAG		1115923	0					
ANR	1118231	Argument	reg_map [ src1 ]		1115923	3					
ANR	1118232	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1118233	Identifier	reg_map		1115923	0					
ANR	1118234	Identifier	src1		1115923	1					
ANR	1118235	Argument	reg_map [ src2 ]		1115923	4					
ANR	1118236	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1118237	Identifier	reg_map		1115923	0					
ANR	1118238	Identifier	src2		1115923	1					
ANR	1118239	Argument	__LINE__		1115923	5					
ANR	1118240	Identifier	__LINE__		1115923	0					
ANR	1118241	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1115923	1					
ANR	1118242	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1936:6:58952:58975	1115923	0	True				
ANR	1118243	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1115923	0					
ANR	1118244	Callee	CHECK_FLAGS		1115923	0					
ANR	1118245	Identifier	CHECK_FLAGS		1115923	0					
ANR	1118246	ArgumentList	SLJIT_SET_E		1115923	1					
ANR	1118247	Argument	SLJIT_SET_E		1115923	0					
ANR	1118248	Identifier	SLJIT_SET_E		1115923	0					
ANR	1118249	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"	1937:3:58983:59091	1115923	1	True				
ANR	1118250	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"		1115923	0					
ANR	1118251	Callee	FAIL_IF		1115923	0					
ANR	1118252	Identifier	FAIL_IF		1115923	0					
ANR	1118253	ArgumentList	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	1					
ANR	1118254	Argument	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118255	CallExpression	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1115923	0					
ANR	1118256	Callee	push_3_buffer		1115923	0					
ANR	1118257	Identifier	push_3_buffer		1115923	0					
ANR	1118258	ArgumentList	compiler		1115923	1					
ANR	1118259	Argument	compiler		1115923	0					
ANR	1118260	Identifier	compiler		1115923	0					
ANR	1118261	Argument	op_norm		1115923	1					
ANR	1118262	Identifier	op_norm		1115923	0					
ANR	1118263	Argument	reg_map [ dst ]		1115923	2					
ANR	1118264	ArrayIndexing	reg_map [ dst ]		1115923	0					
ANR	1118265	Identifier	reg_map		1115923	0					
ANR	1118266	Identifier	dst		1115923	1					
ANR	1118267	Argument	reg_map [ src1 ]		1115923	3					
ANR	1118268	ArrayIndexing	reg_map [ src1 ]		1115923	0					
ANR	1118269	Identifier	reg_map		1115923	0					
ANR	1118270	Identifier	src1		1115923	1					
ANR	1118271	Argument	reg_map [ src2 ]		1115923	4					
ANR	1118272	ArrayIndexing	reg_map [ src2 ]		1115923	0					
ANR	1118273	Identifier	reg_map		1115923	0					
ANR	1118274	Identifier	src2		1115923	1					
ANR	1118275	Argument	__LINE__		1115923	5					
ANR	1118276	Identifier	__LINE__		1115923	0					
ANR	1118277	Label	case SLJIT_SHL :	1942:1:59100:59114	1115923	84	True				
ANR	1118278	Identifier	SLJIT_SHL		1115923	0					
ANR	1118279	ExpressionStatement	"EMIT_SHIFT ( TILEGX_OPC_SHLI , TILEGX_OPC_SHL )"	1943:2:59118:59161	1115923	85	True				
ANR	1118280	CallExpression	"EMIT_SHIFT ( TILEGX_OPC_SHLI , TILEGX_OPC_SHL )"		1115923	0					
ANR	1118281	Callee	EMIT_SHIFT		1115923	0					
ANR	1118282	Identifier	EMIT_SHIFT		1115923	0					
ANR	1118283	ArgumentList	TILEGX_OPC_SHLI		1115923	1					
ANR	1118284	Argument	TILEGX_OPC_SHLI		1115923	0					
ANR	1118285	Identifier	TILEGX_OPC_SHLI		1115923	0					
ANR	1118286	Argument	TILEGX_OPC_SHL		1115923	1					
ANR	1118287	Identifier	TILEGX_OPC_SHL		1115923	0					
ANR	1118288	ReturnStatement	return SLJIT_SUCCESS ;	1944:2:59165:59185	1115923	86	True				
ANR	1118289	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1118290	Label	case SLJIT_LSHR :	1946:1:59189:59204	1115923	87	True				
ANR	1118291	Identifier	SLJIT_LSHR		1115923	0					
ANR	1118292	ExpressionStatement	"EMIT_SHIFT ( TILEGX_OPC_SHRUI , TILEGX_OPC_SHRU )"	1947:2:59208:59253	1115923	88	True				
ANR	1118293	CallExpression	"EMIT_SHIFT ( TILEGX_OPC_SHRUI , TILEGX_OPC_SHRU )"		1115923	0					
ANR	1118294	Callee	EMIT_SHIFT		1115923	0					
ANR	1118295	Identifier	EMIT_SHIFT		1115923	0					
ANR	1118296	ArgumentList	TILEGX_OPC_SHRUI		1115923	1					
ANR	1118297	Argument	TILEGX_OPC_SHRUI		1115923	0					
ANR	1118298	Identifier	TILEGX_OPC_SHRUI		1115923	0					
ANR	1118299	Argument	TILEGX_OPC_SHRU		1115923	1					
ANR	1118300	Identifier	TILEGX_OPC_SHRU		1115923	0					
ANR	1118301	ReturnStatement	return SLJIT_SUCCESS ;	1948:2:59257:59277	1115923	89	True				
ANR	1118302	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1118303	Label	case SLJIT_ASHR :	1950:1:59281:59296	1115923	90	True				
ANR	1118304	Identifier	SLJIT_ASHR		1115923	0					
ANR	1118305	ExpressionStatement	"EMIT_SHIFT ( TILEGX_OPC_SHRSI , TILEGX_OPC_SHRS )"	1951:2:59300:59345	1115923	91	True				
ANR	1118306	CallExpression	"EMIT_SHIFT ( TILEGX_OPC_SHRSI , TILEGX_OPC_SHRS )"		1115923	0					
ANR	1118307	Callee	EMIT_SHIFT		1115923	0					
ANR	1118308	Identifier	EMIT_SHIFT		1115923	0					
ANR	1118309	ArgumentList	TILEGX_OPC_SHRSI		1115923	1					
ANR	1118310	Argument	TILEGX_OPC_SHRSI		1115923	0					
ANR	1118311	Identifier	TILEGX_OPC_SHRSI		1115923	0					
ANR	1118312	Argument	TILEGX_OPC_SHRS		1115923	1					
ANR	1118313	Identifier	TILEGX_OPC_SHRS		1115923	0					
ANR	1118314	ReturnStatement	return SLJIT_SUCCESS ;	1952:2:59349:59369	1115923	92	True				
ANR	1118315	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1118316	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1955:1:59376:59395	1115923	2	True				
ANR	1118317	CallExpression	SLJIT_ASSERT_STOP ( )		1115923	0					
ANR	1118318	Callee	SLJIT_ASSERT_STOP		1115923	0					
ANR	1118319	Identifier	SLJIT_ASSERT_STOP		1115923	0					
ANR	1118320	ArgumentList			1115923	1					
ANR	1118321	ReturnStatement	return SLJIT_SUCCESS ;	1956:1:59398:59418	1115923	3	True				
ANR	1118322	Identifier	SLJIT_SUCCESS		1115923	0					
ANR	1118323	ReturnType	static SLJIT_INLINE sljit_si		1115923	1					
ANR	1118324	Identifier	emit_single_op		1115923	2					
ANR	1118325	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_sw src2"		1115923	3					
ANR	1118326	Parameter	struct sljit_compiler * compiler	1585:44:49182:49212	1115923	0	True				
ANR	1118327	ParameterType	struct sljit_compiler *		1115923	0					
ANR	1118328	Identifier	compiler		1115923	1					
ANR	1118329	Parameter	sljit_si op	1585:77:49215:49225	1115923	1	True				
ANR	1118330	ParameterType	sljit_si		1115923	0					
ANR	1118331	Identifier	op		1115923	1					
ANR	1118332	Parameter	sljit_si flags	1585:90:49228:49241	1115923	2	True				
ANR	1118333	ParameterType	sljit_si		1115923	0					
ANR	1118334	Identifier	flags		1115923	1					
ANR	1118335	Parameter	sljit_si dst	1585:106:49244:49255	1115923	3	True				
ANR	1118336	ParameterType	sljit_si		1115923	0					
ANR	1118337	Identifier	dst		1115923	1					
ANR	1118338	Parameter	sljit_si src1	1585:120:49258:49270	1115923	4	True				
ANR	1118339	ParameterType	sljit_si		1115923	0					
ANR	1118340	Identifier	src1		1115923	1					
ANR	1118341	Parameter	sljit_sw src2	1585:135:49273:49285	1115923	5	True				
ANR	1118342	ParameterType	sljit_sw		1115923	0					
ANR	1118343	Identifier	src2		1115923	1					
ANR	1118344	CFGEntryNode	ENTRY		1115923		True				
ANR	1118345	CFGExitNode	EXIT		1115923		True				
ANR	1118346	Symbol	EQUAL_FLAG		1115923						
ANR	1118347	Symbol	ZERO		1115923						
ANR	1118348	Symbol	ADD		1115923						
ANR	1118349	Symbol	TMP_REG2		1115923						
ANR	1118350	Symbol	TMP_REG1		1115923						
ANR	1118351	Symbol	SIMM_16BIT_MIN		1115923						
ANR	1118352	Symbol	reg_map		1115923						
ANR	1118353	Symbol	TMP_EREG1		1115923						
ANR	1118354	Symbol	TMP_EREG2		1115923						
ANR	1118355	Symbol	ADDLI		1115923						
ANR	1118356	Symbol	TILEGX_OPC_ORI		1115923						
ANR	1118357	Symbol	GET_OPCODE		1115923						
ANR	1118358	Symbol	* dst		1115923						
ANR	1118359	Symbol	CLZ		1115923						
ANR	1118360	Symbol	TILEGX_OPC_SHRUI		1115923						
ANR	1118361	Symbol	CMOVEQZ		1115923						
ANR	1118362	Symbol	TILEGX_OPC_XORI		1115923						
ANR	1118363	Symbol	ULESS_FLAG		1115923						
ANR	1118364	Symbol	TILEGX_OPC_ANDI		1115923						
ANR	1118365	Symbol	TMP_REG2_mapped		1115923						
ANR	1118366	Symbol	TILEGX_OPC_OR		1115923						
ANR	1118367	Symbol	* src2		1115923						
ANR	1118368	Symbol	CHECK_FLAGS		1115923						
ANR	1118369	Symbol	SUB		1115923						
ANR	1118370	Symbol	BFEXTU		1115923						
ANR	1118371	Symbol	MUL		1115923						
ANR	1118372	Symbol	* src1		1115923						
ANR	1118373	Symbol	overflow_ra		1115923						
ANR	1118374	Symbol	REG2_SOURCE		1115923						
ANR	1118375	Symbol	TILEGX_OPC_SHRU		1115923						
ANR	1118376	Symbol	op_imm		1115923						
ANR	1118377	Symbol	* reg_map		1115923						
ANR	1118378	Symbol	BFEXTS		1115923						
ANR	1118379	Symbol	TILEGX_OPC_SHRS		1115923						
ANR	1118380	Symbol	NOR		1115923						
ANR	1118381	Symbol	ADDR_TMP_mapped		1115923						
ANR	1118382	Symbol	AND		1115923						
ANR	1118383	Symbol	XOR		1115923						
ANR	1118384	Symbol	CMOVNEZ		1115923						
ANR	1118385	Symbol	op_norm		1115923						
ANR	1118386	Symbol	TILEGX_OPC_XOR		1115923						
ANR	1118387	Symbol	REG_DEST		1115923						
ANR	1118388	Symbol	OVERFLOW_FLAG		1115923						
ANR	1118389	Symbol	TILEGX_OPC_AND		1115923						
ANR	1118390	Symbol	SHRUI		1115923						
ANR	1118391	Symbol	dst		1115923						
ANR	1118392	Symbol	SLJIT_SET_O		1115923						
ANR	1118393	Symbol	XORI		1115923						
ANR	1118394	Symbol	ORI		1115923						
ANR	1118395	Symbol	flags		1115923						
ANR	1118396	Symbol	SLJIT_SET_C		1115923						
ANR	1118397	Symbol	SLJIT_SET_E		1115923						
ANR	1118398	Symbol	CMPLTU		1115923						
ANR	1118399	Symbol	SLJIT_MOV_SI		1115923						
ANR	1118400	Symbol	TILEGX_OPC_SHRSI		1115923						
ANR	1118401	Symbol	CMPLTS		1115923						
ANR	1118402	Symbol	load_immediate		1115923						
ANR	1118403	Symbol	SLJIT_MOV_SH		1115923						
ANR	1118404	Symbol	SLJIT_SET_S		1115923						
ANR	1118405	Symbol	SRC2_IMM		1115923						
ANR	1118406	Symbol	GREATER_FLAG		1115923						
ANR	1118407	Symbol	compiler		1115923						
ANR	1118408	Symbol	SLJIT_SET_U		1115923						
ANR	1118409	Symbol	TILEGX_OPC_SHL		1115923						
ANR	1118410	Symbol	op		1115923						
ANR	1118411	Symbol	OR		1115923						
ANR	1118412	Symbol	~SRC2_IMM		1115923						
ANR	1118413	Symbol	SLJIT_MOV_SB		1115923						
ANR	1118414	Symbol	SLJIT_SUCCESS		1115923						
ANR	1118415	Symbol	UGREATER_FLAG		1115923						
ANR	1118416	Symbol	__LINE__		1115923						
ANR	1118417	Symbol	CMPLTUI		1115923						
ANR	1118418	Symbol	push_3_buffer		1115923						
ANR	1118419	Symbol	TILEGX_OPC_SHLI		1115923						
ANR	1118420	Symbol	LESS_FLAG		1115923						
ANR	1118421	Symbol	src1		1115923						
ANR	1118422	Symbol	src2		1115923						
ANR	1118423	Function	emit_op	1959:0:59423:63358							
ANR	1118424	FunctionDef	"emit_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1118423	0					
ANR	1118425	CompoundStatement		1960:0:59600:63358	1118423	0					
ANR	1118426	IdentifierDeclStatement	sljit_si dst_r = TMP_REG2 ;	1965:1:59799:59824	1118423	0	True				
ANR	1118427	IdentifierDecl	dst_r = TMP_REG2		1118423	0					
ANR	1118428	IdentifierDeclType	sljit_si		1118423	0					
ANR	1118429	Identifier	dst_r		1118423	1					
ANR	1118430	AssignmentExpression	dst_r = TMP_REG2		1118423	2		=			
ANR	1118431	Identifier	TMP_REG2		1118423	0					
ANR	1118432	Identifier	TMP_REG2		1118423	1					
ANR	1118433	IdentifierDeclStatement	sljit_si src1_r ;	1966:1:59827:59842	1118423	1	True				
ANR	1118434	IdentifierDecl	src1_r		1118423	0					
ANR	1118435	IdentifierDeclType	sljit_si		1118423	0					
ANR	1118436	Identifier	src1_r		1118423	1					
ANR	1118437	IdentifierDeclStatement	sljit_sw src2_r = 0 ;	1967:1:59845:59864	1118423	2	True				
ANR	1118438	IdentifierDecl	src2_r = 0		1118423	0					
ANR	1118439	IdentifierDeclType	sljit_sw		1118423	0					
ANR	1118440	Identifier	src2_r		1118423	1					
ANR	1118441	AssignmentExpression	src2_r = 0		1118423	2		=			
ANR	1118442	Identifier	src2_r		1118423	0					
ANR	1118443	PrimaryExpression	0		1118423	1					
ANR	1118444	IdentifierDeclStatement	sljit_si sugg_src2_r = TMP_REG2 ;	1968:1:59867:59898	1118423	3	True				
ANR	1118445	IdentifierDecl	sugg_src2_r = TMP_REG2		1118423	0					
ANR	1118446	IdentifierDeclType	sljit_si		1118423	0					
ANR	1118447	Identifier	sugg_src2_r		1118423	1					
ANR	1118448	AssignmentExpression	sugg_src2_r = TMP_REG2		1118423	2		=			
ANR	1118449	Identifier	TMP_REG2		1118423	0					
ANR	1118450	Identifier	TMP_REG2		1118423	1					
ANR	1118451	IfStatement	if ( ! ( flags & ALT_KEEP_CACHE ) )		1118423	4					
ANR	1118452	Condition	! ( flags & ALT_KEEP_CACHE )	1970:5:59906:59930	1118423	0	True				
ANR	1118453	UnaryOperationExpression	! ( flags & ALT_KEEP_CACHE )		1118423	0					
ANR	1118454	UnaryOperator	!		1118423	0					
ANR	1118455	BitAndExpression	flags & ALT_KEEP_CACHE		1118423	1		&			
ANR	1118456	Identifier	flags		1118423	0					
ANR	1118457	Identifier	ALT_KEEP_CACHE		1118423	1					
ANR	1118458	CompoundStatement		11:32:332:332	1118423	1					
ANR	1118459	ExpressionStatement	compiler -> cache_arg = 0	1971:2:59937:59960	1118423	0	True				
ANR	1118460	AssignmentExpression	compiler -> cache_arg = 0		1118423	0		=			
ANR	1118461	PtrMemberAccess	compiler -> cache_arg		1118423	0					
ANR	1118462	Identifier	compiler		1118423	0					
ANR	1118463	Identifier	cache_arg		1118423	1					
ANR	1118464	PrimaryExpression	0		1118423	1					
ANR	1118465	ExpressionStatement	compiler -> cache_argw = 0	1972:2:59964:59988	1118423	1	True				
ANR	1118466	AssignmentExpression	compiler -> cache_argw = 0		1118423	0		=			
ANR	1118467	PtrMemberAccess	compiler -> cache_argw		1118423	0					
ANR	1118468	Identifier	compiler		1118423	0					
ANR	1118469	Identifier	cache_argw		1118423	1					
ANR	1118470	PrimaryExpression	0		1118423	1					
ANR	1118471	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1118423	5					
ANR	1118472	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	1975:5:59999:60033	1118423	0	True				
ANR	1118473	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1118423	0					
ANR	1118474	Callee	SLJIT_UNLIKELY		1118423	0					
ANR	1118475	Identifier	SLJIT_UNLIKELY		1118423	0					
ANR	1118476	ArgumentList	dst == SLJIT_UNUSED		1118423	1					
ANR	1118477	Argument	dst == SLJIT_UNUSED		1118423	0					
ANR	1118478	EqualityExpression	dst == SLJIT_UNUSED		1118423	0		==			
ANR	1118479	Identifier	dst		1118423	0					
ANR	1118480	Identifier	SLJIT_UNUSED		1118423	1					
ANR	1118481	CompoundStatement		16:42:435:435	1118423	1					
ANR	1118482	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM ) )		1118423	0					
ANR	1118483	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )	1976:6:60044:60104	1118423	0	True				
ANR	1118484	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1118423	0		&&			
ANR	1118485	RelationalExpression	op >= SLJIT_MOV		1118423	0		>=			
ANR	1118486	Identifier	op		1118423	0					
ANR	1118487	Identifier	SLJIT_MOV		1118423	1					
ANR	1118488	AndExpression	op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1118423	1		&&			
ANR	1118489	RelationalExpression	op <= SLJIT_MOVU_SI		1118423	0		<=			
ANR	1118490	Identifier	op		1118423	0					
ANR	1118491	Identifier	SLJIT_MOVU_SI		1118423	1					
ANR	1118492	UnaryOperationExpression	! ( src2 & SLJIT_MEM )		1118423	1					
ANR	1118493	UnaryOperator	!		1118423	0					
ANR	1118494	BitAndExpression	src2 & SLJIT_MEM		1118423	1		&			
ANR	1118495	Identifier	src2		1118423	0					
ANR	1118496	Identifier	SLJIT_MEM		1118423	1					
ANR	1118497	ReturnStatement	return SLJIT_SUCCESS ;	1977:3:60110:60130	1118423	1	True				
ANR	1118498	Identifier	SLJIT_SUCCESS		1118423	0					
ANR	1118499	IfStatement	if ( GET_FLAGS ( op ) )		1118423	1					
ANR	1118500	Condition	GET_FLAGS ( op )	1978:6:60138:60150	1118423	0	True				
ANR	1118501	CallExpression	GET_FLAGS ( op )		1118423	0					
ANR	1118502	Callee	GET_FLAGS		1118423	0					
ANR	1118503	Identifier	GET_FLAGS		1118423	0					
ANR	1118504	ArgumentList	op		1118423	1					
ANR	1118505	Argument	op		1118423	0					
ANR	1118506	Identifier	op		1118423	0					
ANR	1118507	ExpressionStatement	flags |= UNUSED_DEST	1979:3:60156:60176	1118423	1	True				
ANR	1118508	AssignmentExpression	flags |= UNUSED_DEST		1118423	0		|=			
ANR	1118509	Identifier	flags		1118423	0					
ANR	1118510	Identifier	UNUSED_DEST		1118423	1					
ANR	1118511	ElseStatement	else		1118423	0					
ANR	1118512	IfStatement	if ( FAST_IS_REG ( dst ) )		1118423	0					
ANR	1118513	Condition	FAST_IS_REG ( dst )	1980:12:60190:60205	1118423	0	True				
ANR	1118514	CallExpression	FAST_IS_REG ( dst )		1118423	0					
ANR	1118515	Callee	FAST_IS_REG		1118423	0					
ANR	1118516	Identifier	FAST_IS_REG		1118423	0					
ANR	1118517	ArgumentList	dst		1118423	1					
ANR	1118518	Argument	dst		1118423	0					
ANR	1118519	Identifier	dst		1118423	0					
ANR	1118520	CompoundStatement		21:30:607:607	1118423	1					
ANR	1118521	ExpressionStatement	dst_r = dst	1981:2:60212:60223	1118423	0	True				
ANR	1118522	AssignmentExpression	dst_r = dst		1118423	0		=			
ANR	1118523	Identifier	dst_r		1118423	0					
ANR	1118524	Identifier	dst		1118423	1					
ANR	1118525	ExpressionStatement	flags |= REG_DEST	1982:2:60227:60244	1118423	1	True				
ANR	1118526	AssignmentExpression	flags |= REG_DEST		1118423	0		|=			
ANR	1118527	Identifier	flags		1118423	0					
ANR	1118528	Identifier	REG_DEST		1118423	1					
ANR	1118529	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1118423	2					
ANR	1118530	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	1983:6:60252:60289	1118423	0	True				
ANR	1118531	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1118423	0		&&			
ANR	1118532	RelationalExpression	op >= SLJIT_MOV		1118423	0		>=			
ANR	1118533	Identifier	op		1118423	0					
ANR	1118534	Identifier	SLJIT_MOV		1118423	1					
ANR	1118535	RelationalExpression	op <= SLJIT_MOVU_SI		1118423	1		<=			
ANR	1118536	Identifier	op		1118423	0					
ANR	1118537	Identifier	SLJIT_MOVU_SI		1118423	1					
ANR	1118538	ExpressionStatement	sugg_src2_r = dst_r	1984:3:60295:60314	1118423	1	True				
ANR	1118539	AssignmentExpression	sugg_src2_r = dst_r		1118423	0		=			
ANR	1118540	Identifier	sugg_src2_r		1118423	0					
ANR	1118541	Identifier	dst_r		1118423	1					
ANR	1118542	ElseStatement	else		1118423	0					
ANR	1118543	IfStatement	"if ( ( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw ) )"		1118423	0					
ANR	1118544	Condition	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"	1985:12:60328:60420	1118423	0	True				
ANR	1118545	AndExpression	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"		1118423	0		&&			
ANR	1118546	BitAndExpression	dst & SLJIT_MEM		1118423	0		&			
ANR	1118547	Identifier	dst		1118423	0					
ANR	1118548	Identifier	SLJIT_MEM		1118423	1					
ANR	1118549	UnaryOperationExpression	"! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"		1118423	1					
ANR	1118550	UnaryOperator	!		1118423	0					
ANR	1118551	CallExpression	"getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"		1118423	1					
ANR	1118552	Callee	getput_arg_fast		1118423	0					
ANR	1118553	Identifier	getput_arg_fast		1118423	0					
ANR	1118554	ArgumentList	compiler		1118423	1					
ANR	1118555	Argument	compiler		1118423	0					
ANR	1118556	Identifier	compiler		1118423	0					
ANR	1118557	Argument	flags | ARG_TEST		1118423	1					
ANR	1118558	InclusiveOrExpression	flags | ARG_TEST		1118423	0		|			
ANR	1118559	Identifier	flags		1118423	0					
ANR	1118560	Identifier	ARG_TEST		1118423	1					
ANR	1118561	Argument	TMP_REG1_mapped		1118423	2					
ANR	1118562	Identifier	TMP_REG1_mapped		1118423	0					
ANR	1118563	Argument	dst		1118423	3					
ANR	1118564	Identifier	dst		1118423	0					
ANR	1118565	Argument	dstw		1118423	4					
ANR	1118566	Identifier	dstw		1118423	0					
ANR	1118567	ExpressionStatement	flags |= SLOW_DEST	1986:2:60425:60443	1118423	1	True				
ANR	1118568	AssignmentExpression	flags |= SLOW_DEST		1118423	0		|=			
ANR	1118569	Identifier	flags		1118423	0					
ANR	1118570	Identifier	SLOW_DEST		1118423	1					
ANR	1118571	IfStatement	if ( flags & IMM_OP )		1118423	6					
ANR	1118572	Condition	flags & IMM_OP	1988:5:60451:60464	1118423	0	True				
ANR	1118573	BitAndExpression	flags & IMM_OP		1118423	0		&			
ANR	1118574	Identifier	flags		1118423	0					
ANR	1118575	Identifier	IMM_OP		1118423	1					
ANR	1118576	CompoundStatement		29:21:866:866	1118423	1					
ANR	1118577	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w )		1118423	0					
ANR	1118578	Condition	( src2 & SLJIT_IMM ) && src2w	1989:6:60475:60501	1118423	0	True				
ANR	1118579	AndExpression	( src2 & SLJIT_IMM ) && src2w		1118423	0		&&			
ANR	1118580	BitAndExpression	src2 & SLJIT_IMM		1118423	0		&			
ANR	1118581	Identifier	src2		1118423	0					
ANR	1118582	Identifier	SLJIT_IMM		1118423	1					
ANR	1118583	Identifier	src2w		1118423	1					
ANR	1118584	CompoundStatement		30:35:903:903	1118423	1					
ANR	1118585	IfStatement	if ( ( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX ) ) )		1118423	0					
ANR	1118586	Condition	( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX ) )	1990:7:60513:60657	1118423	0	True				
ANR	1118587	OrExpression	( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX ) )		1118423	0		||			
ANR	1118588	AndExpression	! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN )		1118423	0		&&			
ANR	1118589	UnaryOperationExpression	! ( flags & LOGICAL_OP )		1118423	0					
ANR	1118590	UnaryOperator	!		1118423	0					
ANR	1118591	BitAndExpression	flags & LOGICAL_OP		1118423	1		&			
ANR	1118592	Identifier	flags		1118423	0					
ANR	1118593	Identifier	LOGICAL_OP		1118423	1					
ANR	1118594	AndExpression	src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN		1118423	1		&&			
ANR	1118595	RelationalExpression	src2w <= SIMM_16BIT_MAX		1118423	0		<=			
ANR	1118596	Identifier	src2w		1118423	0					
ANR	1118597	Identifier	SIMM_16BIT_MAX		1118423	1					
ANR	1118598	RelationalExpression	src2w >= SIMM_16BIT_MIN		1118423	1		>=			
ANR	1118599	Identifier	src2w		1118423	0					
ANR	1118600	Identifier	SIMM_16BIT_MIN		1118423	1					
ANR	1118601	AndExpression	( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX )		1118423	1		&&			
ANR	1118602	BitAndExpression	flags & LOGICAL_OP		1118423	0		&			
ANR	1118603	Identifier	flags		1118423	0					
ANR	1118604	Identifier	LOGICAL_OP		1118423	1					
ANR	1118605	UnaryOperationExpression	! ( src2w & ~UIMM_16BIT_MAX )		1118423	1					
ANR	1118606	UnaryOperator	!		1118423	0					
ANR	1118607	BitAndExpression	src2w & ~UIMM_16BIT_MAX		1118423	1		&			
ANR	1118608	Identifier	src2w		1118423	0					
ANR	1118609	Identifier	~UIMM_16BIT_MAX		1118423	1					
ANR	1118610	CompoundStatement		33:62:1059:1059	1118423	1					
ANR	1118611	ExpressionStatement	flags |= SRC2_IMM	1993:4:60666:60683	1118423	0	True				
ANR	1118612	AssignmentExpression	flags |= SRC2_IMM		1118423	0		|=			
ANR	1118613	Identifier	flags		1118423	0					
ANR	1118614	Identifier	SRC2_IMM		1118423	1					
ANR	1118615	ExpressionStatement	src2_r = src2w	1994:4:60689:60703	1118423	1	True				
ANR	1118616	AssignmentExpression	src2_r = src2w		1118423	0		=			
ANR	1118617	Identifier	src2_r		1118423	0					
ANR	1118618	Identifier	src2w		1118423	1					
ANR	1118619	IfStatement	if ( ! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w )		1118423	1					
ANR	1118620	Condition	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w	1998:6:60721:60797	1118423	0	True				
ANR	1118621	AndExpression	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1118423	0		&&			
ANR	1118622	UnaryOperationExpression	! ( flags & SRC2_IMM )		1118423	0					
ANR	1118623	UnaryOperator	!		1118423	0					
ANR	1118624	BitAndExpression	flags & SRC2_IMM		1118423	1		&			
ANR	1118625	Identifier	flags		1118423	0					
ANR	1118626	Identifier	SRC2_IMM		1118423	1					
ANR	1118627	AndExpression	( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1118423	1		&&			
ANR	1118628	BitAndExpression	flags & CUMULATIVE_OP		1118423	0		&			
ANR	1118629	Identifier	flags		1118423	0					
ANR	1118630	Identifier	CUMULATIVE_OP		1118423	1					
ANR	1118631	AndExpression	( src1 & SLJIT_IMM ) && src1w		1118423	1		&&			
ANR	1118632	BitAndExpression	src1 & SLJIT_IMM		1118423	0		&			
ANR	1118633	Identifier	src1		1118423	0					
ANR	1118634	Identifier	SLJIT_IMM		1118423	1					
ANR	1118635	Identifier	src1w		1118423	1					
ANR	1118636	CompoundStatement		39:85:1199:1199	1118423	1					
ANR	1118637	IfStatement	if ( ( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX ) ) )		1118423	0					
ANR	1118638	Condition	( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX ) )	1999:7:60809:60953	1118423	0	True				
ANR	1118639	OrExpression	( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX ) )		1118423	0		||			
ANR	1118640	AndExpression	! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN )		1118423	0		&&			
ANR	1118641	UnaryOperationExpression	! ( flags & LOGICAL_OP )		1118423	0					
ANR	1118642	UnaryOperator	!		1118423	0					
ANR	1118643	BitAndExpression	flags & LOGICAL_OP		1118423	1		&			
ANR	1118644	Identifier	flags		1118423	0					
ANR	1118645	Identifier	LOGICAL_OP		1118423	1					
ANR	1118646	AndExpression	src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN		1118423	1		&&			
ANR	1118647	RelationalExpression	src1w <= SIMM_16BIT_MAX		1118423	0		<=			
ANR	1118648	Identifier	src1w		1118423	0					
ANR	1118649	Identifier	SIMM_16BIT_MAX		1118423	1					
ANR	1118650	RelationalExpression	src1w >= SIMM_16BIT_MIN		1118423	1		>=			
ANR	1118651	Identifier	src1w		1118423	0					
ANR	1118652	Identifier	SIMM_16BIT_MIN		1118423	1					
ANR	1118653	AndExpression	( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX )		1118423	1		&&			
ANR	1118654	BitAndExpression	flags & LOGICAL_OP		1118423	0		&			
ANR	1118655	Identifier	flags		1118423	0					
ANR	1118656	Identifier	LOGICAL_OP		1118423	1					
ANR	1118657	UnaryOperationExpression	! ( src1w & ~UIMM_16BIT_MAX )		1118423	1					
ANR	1118658	UnaryOperator	!		1118423	0					
ANR	1118659	BitAndExpression	src1w & ~UIMM_16BIT_MAX		1118423	1		&			
ANR	1118660	Identifier	src1w		1118423	0					
ANR	1118661	Identifier	~UIMM_16BIT_MAX		1118423	1					
ANR	1118662	CompoundStatement		42:62:1355:1355	1118423	1					
ANR	1118663	ExpressionStatement	flags |= SRC2_IMM	2002:4:60962:60979	1118423	0	True				
ANR	1118664	AssignmentExpression	flags |= SRC2_IMM		1118423	0		|=			
ANR	1118665	Identifier	flags		1118423	0					
ANR	1118666	Identifier	SRC2_IMM		1118423	1					
ANR	1118667	ExpressionStatement	src2_r = src1w	2003:4:60985:60999	1118423	1	True				
ANR	1118668	AssignmentExpression	src2_r = src1w		1118423	0		=			
ANR	1118669	Identifier	src2_r		1118423	0					
ANR	1118670	Identifier	src1w		1118423	1					
ANR	1118671	ExpressionStatement	src1 = src2	2006:4:61036:61047	1118423	2	True				
ANR	1118672	AssignmentExpression	src1 = src2		1118423	0		=			
ANR	1118673	Identifier	src1		1118423	0					
ANR	1118674	Identifier	src2		1118423	1					
ANR	1118675	ExpressionStatement	src1w = src2w	2007:4:61053:61066	1118423	3	True				
ANR	1118676	AssignmentExpression	src1w = src2w		1118423	0		=			
ANR	1118677	Identifier	src1w		1118423	0					
ANR	1118678	Identifier	src2w		1118423	1					
ANR	1118679	ExpressionStatement	src2 = SLJIT_IMM	2008:4:61072:61088	1118423	4	True				
ANR	1118680	AssignmentExpression	src2 = SLJIT_IMM		1118423	0		=			
ANR	1118681	Identifier	src2		1118423	0					
ANR	1118682	Identifier	SLJIT_IMM		1118423	1					
ANR	1118683	IfStatement	if ( FAST_IS_REG ( src1 ) )		1118423	7					
ANR	1118684	Condition	FAST_IS_REG ( src1 )	2015:5:61160:61176	1118423	0	True				
ANR	1118685	CallExpression	FAST_IS_REG ( src1 )		1118423	0					
ANR	1118686	Callee	FAST_IS_REG		1118423	0					
ANR	1118687	Identifier	FAST_IS_REG		1118423	0					
ANR	1118688	ArgumentList	src1		1118423	1					
ANR	1118689	Argument	src1		1118423	0					
ANR	1118690	Identifier	src1		1118423	0					
ANR	1118691	CompoundStatement		56:24:1578:1578	1118423	1					
ANR	1118692	ExpressionStatement	src1_r = src1	2016:2:61183:61196	1118423	0	True				
ANR	1118693	AssignmentExpression	src1_r = src1		1118423	0		=			
ANR	1118694	Identifier	src1_r		1118423	0					
ANR	1118695	Identifier	src1		1118423	1					
ANR	1118696	ExpressionStatement	flags |= REG1_SOURCE	2017:2:61200:61220	1118423	1	True				
ANR	1118697	AssignmentExpression	flags |= REG1_SOURCE		1118423	0		|=			
ANR	1118698	Identifier	flags		1118423	0					
ANR	1118699	Identifier	REG1_SOURCE		1118423	1					
ANR	1118700	ElseStatement	else		1118423	0					
ANR	1118701	IfStatement	if ( src1 & SLJIT_IMM )		1118423	0					
ANR	1118702	Condition	src1 & SLJIT_IMM	2018:12:61234:61249	1118423	0	True				
ANR	1118703	BitAndExpression	src1 & SLJIT_IMM		1118423	0		&			
ANR	1118704	Identifier	src1		1118423	0					
ANR	1118705	Identifier	SLJIT_IMM		1118423	1					
ANR	1118706	CompoundStatement		59:30:1651:1651	1118423	1					
ANR	1118707	IfStatement	if ( src1w )		1118423	0					
ANR	1118708	Condition	src1w	2019:6:61260:61264	1118423	0	True				
ANR	1118709	Identifier	src1w		1118423	0					
ANR	1118710	CompoundStatement		60:13:1666:1666	1118423	1					
ANR	1118711	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , src1w ) )"	2020:3:61272:61329	1118423	0	True				
ANR	1118712	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , src1w ) )"		1118423	0					
ANR	1118713	Callee	FAIL_IF		1118423	0					
ANR	1118714	Identifier	FAIL_IF		1118423	0					
ANR	1118715	ArgumentList	"load_immediate ( compiler , TMP_REG1_mapped , src1w )"		1118423	1					
ANR	1118716	Argument	"load_immediate ( compiler , TMP_REG1_mapped , src1w )"		1118423	0					
ANR	1118717	CallExpression	"load_immediate ( compiler , TMP_REG1_mapped , src1w )"		1118423	0					
ANR	1118718	Callee	load_immediate		1118423	0					
ANR	1118719	Identifier	load_immediate		1118423	0					
ANR	1118720	ArgumentList	compiler		1118423	1					
ANR	1118721	Argument	compiler		1118423	0					
ANR	1118722	Identifier	compiler		1118423	0					
ANR	1118723	Argument	TMP_REG1_mapped		1118423	1					
ANR	1118724	Identifier	TMP_REG1_mapped		1118423	0					
ANR	1118725	Argument	src1w		1118423	2					
ANR	1118726	Identifier	src1w		1118423	0					
ANR	1118727	ExpressionStatement	src1_r = TMP_REG1	2021:3:61334:61351	1118423	1	True				
ANR	1118728	AssignmentExpression	src1_r = TMP_REG1		1118423	0		=			
ANR	1118729	Identifier	src1_r		1118423	0					
ANR	1118730	Identifier	TMP_REG1		1118423	1					
ANR	1118731	ElseStatement	else		1118423	0					
ANR	1118732	ExpressionStatement	src1_r = 0	2023:3:61365:61375	1118423	0	True				
ANR	1118733	AssignmentExpression	src1_r = 0		1118423	0		=			
ANR	1118734	Identifier	src1_r		1118423	0					
ANR	1118735	PrimaryExpression	0		1118423	1					
ANR	1118736	ElseStatement	else		1118423	0					
ANR	1118737	CompoundStatement		65:8:1784:1784	1118423	0					
ANR	1118738	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w ) )"		1118423	0					
ANR	1118739	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w )"	2025:6:61393:61466	1118423	0	True				
ANR	1118740	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w )"		1118423	0					
ANR	1118741	Callee	getput_arg_fast		1118423	0					
ANR	1118742	Identifier	getput_arg_fast		1118423	0					
ANR	1118743	ArgumentList	compiler		1118423	1					
ANR	1118744	Argument	compiler		1118423	0					
ANR	1118745	Identifier	compiler		1118423	0					
ANR	1118746	Argument	flags | LOAD_DATA		1118423	1					
ANR	1118747	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1118748	Identifier	flags		1118423	0					
ANR	1118749	Identifier	LOAD_DATA		1118423	1					
ANR	1118750	Argument	TMP_REG1_mapped		1118423	2					
ANR	1118751	Identifier	TMP_REG1_mapped		1118423	0					
ANR	1118752	Argument	src1		1118423	3					
ANR	1118753	Identifier	src1		1118423	0					
ANR	1118754	Argument	src1w		1118423	4					
ANR	1118755	Identifier	src1w		1118423	0					
ANR	1118756	ExpressionStatement	FAIL_IF ( compiler -> error )	2026:3:61472:61496	1118423	1	True				
ANR	1118757	CallExpression	FAIL_IF ( compiler -> error )		1118423	0					
ANR	1118758	Callee	FAIL_IF		1118423	0					
ANR	1118759	Identifier	FAIL_IF		1118423	0					
ANR	1118760	ArgumentList	compiler -> error		1118423	1					
ANR	1118761	Argument	compiler -> error		1118423	0					
ANR	1118762	PtrMemberAccess	compiler -> error		1118423	0					
ANR	1118763	Identifier	compiler		1118423	0					
ANR	1118764	Identifier	error		1118423	1					
ANR	1118765	ElseStatement	else		1118423	0					
ANR	1118766	ExpressionStatement	flags |= SLOW_SRC1	2028:3:61508:61526	1118423	0	True				
ANR	1118767	AssignmentExpression	flags |= SLOW_SRC1		1118423	0		|=			
ANR	1118768	Identifier	flags		1118423	0					
ANR	1118769	Identifier	SLOW_SRC1		1118423	1					
ANR	1118770	ExpressionStatement	src1_r = TMP_REG1	2029:2:61530:61547	1118423	1	True				
ANR	1118771	AssignmentExpression	src1_r = TMP_REG1		1118423	0		=			
ANR	1118772	Identifier	src1_r		1118423	0					
ANR	1118773	Identifier	TMP_REG1		1118423	1					
ANR	1118774	IfStatement	if ( FAST_IS_REG ( src2 ) )		1118423	8					
ANR	1118775	Condition	FAST_IS_REG ( src2 )	2033:5:61575:61591	1118423	0	True				
ANR	1118776	CallExpression	FAST_IS_REG ( src2 )		1118423	0					
ANR	1118777	Callee	FAST_IS_REG		1118423	0					
ANR	1118778	Identifier	FAST_IS_REG		1118423	0					
ANR	1118779	ArgumentList	src2		1118423	1					
ANR	1118780	Argument	src2		1118423	0					
ANR	1118781	Identifier	src2		1118423	0					
ANR	1118782	CompoundStatement		74:24:1993:1993	1118423	1					
ANR	1118783	ExpressionStatement	src2_r = src2	2034:2:61598:61611	1118423	0	True				
ANR	1118784	AssignmentExpression	src2_r = src2		1118423	0		=			
ANR	1118785	Identifier	src2_r		1118423	0					
ANR	1118786	Identifier	src2		1118423	1					
ANR	1118787	ExpressionStatement	flags |= REG2_SOURCE	2035:2:61615:61635	1118423	1	True				
ANR	1118788	AssignmentExpression	flags |= REG2_SOURCE		1118423	0		|=			
ANR	1118789	Identifier	flags		1118423	0					
ANR	1118790	Identifier	REG2_SOURCE		1118423	1					
ANR	1118791	IfStatement	if ( ! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1118423	2					
ANR	1118792	Condition	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	2036:6:61643:61703	1118423	0	True				
ANR	1118793	AndExpression	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1118423	0		&&			
ANR	1118794	UnaryOperationExpression	! ( flags & REG_DEST )		1118423	0					
ANR	1118795	UnaryOperator	!		1118423	0					
ANR	1118796	BitAndExpression	flags & REG_DEST		1118423	1		&			
ANR	1118797	Identifier	flags		1118423	0					
ANR	1118798	Identifier	REG_DEST		1118423	1					
ANR	1118799	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1118423	1		&&			
ANR	1118800	RelationalExpression	op >= SLJIT_MOV		1118423	0		>=			
ANR	1118801	Identifier	op		1118423	0					
ANR	1118802	Identifier	SLJIT_MOV		1118423	1					
ANR	1118803	RelationalExpression	op <= SLJIT_MOVU_SI		1118423	1		<=			
ANR	1118804	Identifier	op		1118423	0					
ANR	1118805	Identifier	SLJIT_MOVU_SI		1118423	1					
ANR	1118806	ExpressionStatement	dst_r = src2_r	2037:3:61709:61723	1118423	1	True				
ANR	1118807	AssignmentExpression	dst_r = src2_r		1118423	0		=			
ANR	1118808	Identifier	dst_r		1118423	0					
ANR	1118809	Identifier	src2_r		1118423	1					
ANR	1118810	ElseStatement	else		1118423	0					
ANR	1118811	IfStatement	if ( src2 & SLJIT_IMM )		1118423	0					
ANR	1118812	Condition	src2 & SLJIT_IMM	2038:12:61737:61752	1118423	0	True				
ANR	1118813	BitAndExpression	src2 & SLJIT_IMM		1118423	0		&			
ANR	1118814	Identifier	src2		1118423	0					
ANR	1118815	Identifier	SLJIT_IMM		1118423	1					
ANR	1118816	CompoundStatement		79:30:2154:2154	1118423	1					
ANR	1118817	IfStatement	if ( ! ( flags & SRC2_IMM ) )		1118423	0					
ANR	1118818	Condition	! ( flags & SRC2_IMM )	2039:6:61763:61781	1118423	0	True				
ANR	1118819	UnaryOperationExpression	! ( flags & SRC2_IMM )		1118423	0					
ANR	1118820	UnaryOperator	!		1118423	0					
ANR	1118821	BitAndExpression	flags & SRC2_IMM		1118423	1		&			
ANR	1118822	Identifier	flags		1118423	0					
ANR	1118823	Identifier	SRC2_IMM		1118423	1					
ANR	1118824	CompoundStatement		80:27:2183:2183	1118423	1					
ANR	1118825	IfStatement	if ( src2w )		1118423	0					
ANR	1118826	Condition	src2w	2040:7:61793:61797	1118423	0	True				
ANR	1118827	Identifier	src2w		1118423	0					
ANR	1118828	CompoundStatement		81:14:2199:2199	1118423	1					
ANR	1118829	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w ) )"	2041:4:61806:61868	1118423	0	True				
ANR	1118830	CallExpression	"FAIL_IF ( load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w ) )"		1118423	0					
ANR	1118831	Callee	FAIL_IF		1118423	0					
ANR	1118832	Identifier	FAIL_IF		1118423	0					
ANR	1118833	ArgumentList	"load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w )"		1118423	1					
ANR	1118834	Argument	"load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w )"		1118423	0					
ANR	1118835	CallExpression	"load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w )"		1118423	0					
ANR	1118836	Callee	load_immediate		1118423	0					
ANR	1118837	Identifier	load_immediate		1118423	0					
ANR	1118838	ArgumentList	compiler		1118423	1					
ANR	1118839	Argument	compiler		1118423	0					
ANR	1118840	Identifier	compiler		1118423	0					
ANR	1118841	Argument	reg_map [ sugg_src2_r ]		1118423	1					
ANR	1118842	ArrayIndexing	reg_map [ sugg_src2_r ]		1118423	0					
ANR	1118843	Identifier	reg_map		1118423	0					
ANR	1118844	Identifier	sugg_src2_r		1118423	1					
ANR	1118845	Argument	src2w		1118423	2					
ANR	1118846	Identifier	src2w		1118423	0					
ANR	1118847	ExpressionStatement	src2_r = sugg_src2_r	2042:4:61874:61894	1118423	1	True				
ANR	1118848	AssignmentExpression	src2_r = sugg_src2_r		1118423	0		=			
ANR	1118849	Identifier	src2_r		1118423	0					
ANR	1118850	Identifier	sugg_src2_r		1118423	1					
ANR	1118851	ElseStatement	else		1118423	0					
ANR	1118852	CompoundStatement		84:10:2305:2305	1118423	0					
ANR	1118853	ExpressionStatement	src2_r = 0	2044:4:61912:61922	1118423	0	True				
ANR	1118854	AssignmentExpression	src2_r = 0		1118423	0		=			
ANR	1118855	Identifier	src2_r		1118423	0					
ANR	1118856	PrimaryExpression	0		1118423	1					
ANR	1118857	IfStatement	if ( ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM ) )		1118423	1					
ANR	1118858	Condition	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )	2045:8:61932:61992	1118423	0	True				
ANR	1118859	AndExpression	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )		1118423	0		&&			
ANR	1118860	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1118423	0		&&			
ANR	1118861	RelationalExpression	op >= SLJIT_MOV		1118423	0		>=			
ANR	1118862	Identifier	op		1118423	0					
ANR	1118863	Identifier	SLJIT_MOV		1118423	1					
ANR	1118864	RelationalExpression	op <= SLJIT_MOVU_SI		1118423	1		<=			
ANR	1118865	Identifier	op		1118423	0					
ANR	1118866	Identifier	SLJIT_MOVU_SI		1118423	1					
ANR	1118867	BitAndExpression	dst & SLJIT_MEM		1118423	1		&			
ANR	1118868	Identifier	dst		1118423	0					
ANR	1118869	Identifier	SLJIT_MEM		1118423	1					
ANR	1118870	ExpressionStatement	dst_r = 0	2046:5:62000:62009	1118423	1	True				
ANR	1118871	AssignmentExpression	dst_r = 0		1118423	0		=			
ANR	1118872	Identifier	dst_r		1118423	0					
ANR	1118873	PrimaryExpression	0		1118423	1					
ANR	1118874	ElseStatement	else		1118423	0					
ANR	1118875	CompoundStatement		90:8:2427:2427	1118423	0					
ANR	1118876	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w ) )"		1118423	0					
ANR	1118877	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w )"	2050:6:62036:62114	1118423	0	True				
ANR	1118878	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w )"		1118423	0					
ANR	1118879	Callee	getput_arg_fast		1118423	0					
ANR	1118880	Identifier	getput_arg_fast		1118423	0					
ANR	1118881	ArgumentList	compiler		1118423	1					
ANR	1118882	Argument	compiler		1118423	0					
ANR	1118883	Identifier	compiler		1118423	0					
ANR	1118884	Argument	flags | LOAD_DATA		1118423	1					
ANR	1118885	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1118886	Identifier	flags		1118423	0					
ANR	1118887	Identifier	LOAD_DATA		1118423	1					
ANR	1118888	Argument	reg_map [ sugg_src2_r ]		1118423	2					
ANR	1118889	ArrayIndexing	reg_map [ sugg_src2_r ]		1118423	0					
ANR	1118890	Identifier	reg_map		1118423	0					
ANR	1118891	Identifier	sugg_src2_r		1118423	1					
ANR	1118892	Argument	src2		1118423	3					
ANR	1118893	Identifier	src2		1118423	0					
ANR	1118894	Argument	src2w		1118423	4					
ANR	1118895	Identifier	src2w		1118423	0					
ANR	1118896	ExpressionStatement	FAIL_IF ( compiler -> error )	2051:3:62120:62144	1118423	1	True				
ANR	1118897	CallExpression	FAIL_IF ( compiler -> error )		1118423	0					
ANR	1118898	Callee	FAIL_IF		1118423	0					
ANR	1118899	Identifier	FAIL_IF		1118423	0					
ANR	1118900	ArgumentList	compiler -> error		1118423	1					
ANR	1118901	Argument	compiler -> error		1118423	0					
ANR	1118902	PtrMemberAccess	compiler -> error		1118423	0					
ANR	1118903	Identifier	compiler		1118423	0					
ANR	1118904	Identifier	error		1118423	1					
ANR	1118905	ElseStatement	else		1118423	0					
ANR	1118906	ExpressionStatement	flags |= SLOW_SRC2	2053:3:62156:62174	1118423	0	True				
ANR	1118907	AssignmentExpression	flags |= SLOW_SRC2		1118423	0		|=			
ANR	1118908	Identifier	flags		1118423	0					
ANR	1118909	Identifier	SLOW_SRC2		1118423	1					
ANR	1118910	ExpressionStatement	src2_r = sugg_src2_r	2054:2:62178:62198	1118423	1	True				
ANR	1118911	AssignmentExpression	src2_r = sugg_src2_r		1118423	0		=			
ANR	1118912	Identifier	src2_r		1118423	0					
ANR	1118913	Identifier	sugg_src2_r		1118423	1					
ANR	1118914	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1118423	9					
ANR	1118915	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	2057:5:62209:62268	1118423	0	True				
ANR	1118916	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1118423	0		==			
ANR	1118917	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1118423	0		&			
ANR	1118918	Identifier	flags		1118423	0					
ANR	1118919	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1118423	1		|			
ANR	1118920	Identifier	SLOW_SRC1		1118423	0					
ANR	1118921	Identifier	SLOW_SRC2		1118423	1					
ANR	1118922	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1118423	1		|			
ANR	1118923	Identifier	SLOW_SRC1		1118423	0					
ANR	1118924	Identifier	SLOW_SRC2		1118423	1					
ANR	1118925	CompoundStatement		98:67:2670:2670	1118423	1					
ANR	1118926	ExpressionStatement	SLJIT_ASSERT ( src2_r == TMP_REG2 )	2058:2:62275:62307	1118423	0	True				
ANR	1118927	CallExpression	SLJIT_ASSERT ( src2_r == TMP_REG2 )		1118423	0					
ANR	1118928	Callee	SLJIT_ASSERT		1118423	0					
ANR	1118929	Identifier	SLJIT_ASSERT		1118423	0					
ANR	1118930	ArgumentList	src2_r == TMP_REG2		1118423	1					
ANR	1118931	Argument	src2_r == TMP_REG2		1118423	0					
ANR	1118932	EqualityExpression	src2_r == TMP_REG2		1118423	0		==			
ANR	1118933	Identifier	src2_r		1118423	0					
ANR	1118934	Identifier	TMP_REG2		1118423	1					
ANR	1118935	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1118423	1					
ANR	1118936	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	2059:6:62315:62387	1118423	0	True				
ANR	1118937	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1118423	0		&&			
ANR	1118938	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1118423	0					
ANR	1118939	UnaryOperator	!		1118423	0					
ANR	1118940	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1118423	1					
ANR	1118941	Callee	can_cache		1118423	0					
ANR	1118942	Identifier	can_cache		1118423	0					
ANR	1118943	ArgumentList	src1		1118423	1					
ANR	1118944	Argument	src1		1118423	0					
ANR	1118945	Identifier	src1		1118423	0					
ANR	1118946	Argument	src1w		1118423	1					
ANR	1118947	Identifier	src1w		1118423	0					
ANR	1118948	Argument	src2		1118423	2					
ANR	1118949	Identifier	src2		1118423	0					
ANR	1118950	Argument	src2w		1118423	3					
ANR	1118951	Identifier	src2w		1118423	0					
ANR	1118952	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1118423	1					
ANR	1118953	Callee	can_cache		1118423	0					
ANR	1118954	Identifier	can_cache		1118423	0					
ANR	1118955	ArgumentList	src1		1118423	1					
ANR	1118956	Argument	src1		1118423	0					
ANR	1118957	Identifier	src1		1118423	0					
ANR	1118958	Argument	src1w		1118423	1					
ANR	1118959	Identifier	src1w		1118423	0					
ANR	1118960	Argument	dst		1118423	2					
ANR	1118961	Identifier	dst		1118423	0					
ANR	1118962	Argument	dstw		1118423	3					
ANR	1118963	Identifier	dstw		1118423	0					
ANR	1118964	CompoundStatement		100:81:2789:2789	1118423	1					
ANR	1118965	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w ) )"	2060:3:62395:62486	1118423	0	True				
ANR	1118966	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w ) )"		1118423	0					
ANR	1118967	Callee	FAIL_IF		1118423	0					
ANR	1118968	Identifier	FAIL_IF		1118423	0					
ANR	1118969	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w )"		1118423	1					
ANR	1118970	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w )"		1118423	0					
ANR	1118971	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w )"		1118423	0					
ANR	1118972	Callee	getput_arg		1118423	0					
ANR	1118973	Identifier	getput_arg		1118423	0					
ANR	1118974	ArgumentList	compiler		1118423	1					
ANR	1118975	Argument	compiler		1118423	0					
ANR	1118976	Identifier	compiler		1118423	0					
ANR	1118977	Argument	flags | LOAD_DATA		1118423	1					
ANR	1118978	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1118979	Identifier	flags		1118423	0					
ANR	1118980	Identifier	LOAD_DATA		1118423	1					
ANR	1118981	Argument	TMP_REG2_mapped		1118423	2					
ANR	1118982	Identifier	TMP_REG2_mapped		1118423	0					
ANR	1118983	Argument	src2		1118423	3					
ANR	1118984	Identifier	src2		1118423	0					
ANR	1118985	Argument	src2w		1118423	4					
ANR	1118986	Identifier	src2w		1118423	0					
ANR	1118987	Argument	src1		1118423	5					
ANR	1118988	Identifier	src1		1118423	0					
ANR	1118989	Argument	src1w		1118423	6					
ANR	1118990	Identifier	src1w		1118423	0					
ANR	1118991	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"	2061:3:62491:62580	1118423	1	True				
ANR	1118992	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"		1118423	0					
ANR	1118993	Callee	FAIL_IF		1118423	0					
ANR	1118994	Identifier	FAIL_IF		1118423	0					
ANR	1118995	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1118423	1					
ANR	1118996	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1118423	0					
ANR	1118997	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1118423	0					
ANR	1118998	Callee	getput_arg		1118423	0					
ANR	1118999	Identifier	getput_arg		1118423	0					
ANR	1119000	ArgumentList	compiler		1118423	1					
ANR	1119001	Argument	compiler		1118423	0					
ANR	1119002	Identifier	compiler		1118423	0					
ANR	1119003	Argument	flags | LOAD_DATA		1118423	1					
ANR	1119004	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1119005	Identifier	flags		1118423	0					
ANR	1119006	Identifier	LOAD_DATA		1118423	1					
ANR	1119007	Argument	TMP_REG1_mapped		1118423	2					
ANR	1119008	Identifier	TMP_REG1_mapped		1118423	0					
ANR	1119009	Argument	src1		1118423	3					
ANR	1119010	Identifier	src1		1118423	0					
ANR	1119011	Argument	src1w		1118423	4					
ANR	1119012	Identifier	src1w		1118423	0					
ANR	1119013	Argument	dst		1118423	5					
ANR	1119014	Identifier	dst		1118423	0					
ANR	1119015	Argument	dstw		1118423	6					
ANR	1119016	Identifier	dstw		1118423	0					
ANR	1119017	ElseStatement	else		1118423	0					
ANR	1119018	CompoundStatement		103:9:2990:2990	1118423	0					
ANR	1119019	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w ) )"	2063:3:62596:62687	1118423	0	True				
ANR	1119020	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w ) )"		1118423	0					
ANR	1119021	Callee	FAIL_IF		1118423	0					
ANR	1119022	Identifier	FAIL_IF		1118423	0					
ANR	1119023	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w )"		1118423	1					
ANR	1119024	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w )"		1118423	0					
ANR	1119025	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w )"		1118423	0					
ANR	1119026	Callee	getput_arg		1118423	0					
ANR	1119027	Identifier	getput_arg		1118423	0					
ANR	1119028	ArgumentList	compiler		1118423	1					
ANR	1119029	Argument	compiler		1118423	0					
ANR	1119030	Identifier	compiler		1118423	0					
ANR	1119031	Argument	flags | LOAD_DATA		1118423	1					
ANR	1119032	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1119033	Identifier	flags		1118423	0					
ANR	1119034	Identifier	LOAD_DATA		1118423	1					
ANR	1119035	Argument	TMP_REG1_mapped		1118423	2					
ANR	1119036	Identifier	TMP_REG1_mapped		1118423	0					
ANR	1119037	Argument	src1		1118423	3					
ANR	1119038	Identifier	src1		1118423	0					
ANR	1119039	Argument	src1w		1118423	4					
ANR	1119040	Identifier	src1w		1118423	0					
ANR	1119041	Argument	src2		1118423	5					
ANR	1119042	Identifier	src2		1118423	0					
ANR	1119043	Argument	src2w		1118423	6					
ANR	1119044	Identifier	src2w		1118423	0					
ANR	1119045	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw ) )"	2064:3:62692:62781	1118423	1	True				
ANR	1119046	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw ) )"		1118423	0					
ANR	1119047	Callee	FAIL_IF		1118423	0					
ANR	1119048	Identifier	FAIL_IF		1118423	0					
ANR	1119049	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw )"		1118423	1					
ANR	1119050	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw )"		1118423	0					
ANR	1119051	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw )"		1118423	0					
ANR	1119052	Callee	getput_arg		1118423	0					
ANR	1119053	Identifier	getput_arg		1118423	0					
ANR	1119054	ArgumentList	compiler		1118423	1					
ANR	1119055	Argument	compiler		1118423	0					
ANR	1119056	Identifier	compiler		1118423	0					
ANR	1119057	Argument	flags | LOAD_DATA		1118423	1					
ANR	1119058	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1119059	Identifier	flags		1118423	0					
ANR	1119060	Identifier	LOAD_DATA		1118423	1					
ANR	1119061	Argument	TMP_REG2_mapped		1118423	2					
ANR	1119062	Identifier	TMP_REG2_mapped		1118423	0					
ANR	1119063	Argument	src2		1118423	3					
ANR	1119064	Identifier	src2		1118423	0					
ANR	1119065	Argument	src2w		1118423	4					
ANR	1119066	Identifier	src2w		1118423	0					
ANR	1119067	Argument	dst		1118423	5					
ANR	1119068	Identifier	dst		1118423	0					
ANR	1119069	Argument	dstw		1118423	6					
ANR	1119070	Identifier	dstw		1118423	0					
ANR	1119071	ElseStatement	else		1118423	0					
ANR	1119072	IfStatement	if ( flags & SLOW_SRC1 )		1118423	0					
ANR	1119073	Condition	flags & SLOW_SRC1	2066:12:62799:62815	1118423	0	True				
ANR	1119074	BitAndExpression	flags & SLOW_SRC1		1118423	0		&			
ANR	1119075	Identifier	flags		1118423	0					
ANR	1119076	Identifier	SLOW_SRC1		1118423	1					
ANR	1119077	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"	2067:2:62820:62909	1118423	1	True				
ANR	1119078	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"		1118423	0					
ANR	1119079	Callee	FAIL_IF		1118423	0					
ANR	1119080	Identifier	FAIL_IF		1118423	0					
ANR	1119081	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1118423	1					
ANR	1119082	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1118423	0					
ANR	1119083	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1118423	0					
ANR	1119084	Callee	getput_arg		1118423	0					
ANR	1119085	Identifier	getput_arg		1118423	0					
ANR	1119086	ArgumentList	compiler		1118423	1					
ANR	1119087	Argument	compiler		1118423	0					
ANR	1119088	Identifier	compiler		1118423	0					
ANR	1119089	Argument	flags | LOAD_DATA		1118423	1					
ANR	1119090	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1119091	Identifier	flags		1118423	0					
ANR	1119092	Identifier	LOAD_DATA		1118423	1					
ANR	1119093	Argument	TMP_REG1_mapped		1118423	2					
ANR	1119094	Identifier	TMP_REG1_mapped		1118423	0					
ANR	1119095	Argument	src1		1118423	3					
ANR	1119096	Identifier	src1		1118423	0					
ANR	1119097	Argument	src1w		1118423	4					
ANR	1119098	Identifier	src1w		1118423	0					
ANR	1119099	Argument	dst		1118423	5					
ANR	1119100	Identifier	dst		1118423	0					
ANR	1119101	Argument	dstw		1118423	6					
ANR	1119102	Identifier	dstw		1118423	0					
ANR	1119103	ElseStatement	else		1118423	0					
ANR	1119104	IfStatement	if ( flags & SLOW_SRC2 )		1118423	0					
ANR	1119105	Condition	flags & SLOW_SRC2	2068:10:62921:62937	1118423	0	True				
ANR	1119106	BitAndExpression	flags & SLOW_SRC2		1118423	0		&			
ANR	1119107	Identifier	flags		1118423	0					
ANR	1119108	Identifier	SLOW_SRC2		1118423	1					
ANR	1119109	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw ) )"	2069:2:62942:63036	1118423	1	True				
ANR	1119110	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw ) )"		1118423	0					
ANR	1119111	Callee	FAIL_IF		1118423	0					
ANR	1119112	Identifier	FAIL_IF		1118423	0					
ANR	1119113	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw )"		1118423	1					
ANR	1119114	Argument	"getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw )"		1118423	0					
ANR	1119115	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw )"		1118423	0					
ANR	1119116	Callee	getput_arg		1118423	0					
ANR	1119117	Identifier	getput_arg		1118423	0					
ANR	1119118	ArgumentList	compiler		1118423	1					
ANR	1119119	Argument	compiler		1118423	0					
ANR	1119120	Identifier	compiler		1118423	0					
ANR	1119121	Argument	flags | LOAD_DATA		1118423	1					
ANR	1119122	InclusiveOrExpression	flags | LOAD_DATA		1118423	0		|			
ANR	1119123	Identifier	flags		1118423	0					
ANR	1119124	Identifier	LOAD_DATA		1118423	1					
ANR	1119125	Argument	reg_map [ sugg_src2_r ]		1118423	2					
ANR	1119126	ArrayIndexing	reg_map [ sugg_src2_r ]		1118423	0					
ANR	1119127	Identifier	reg_map		1118423	0					
ANR	1119128	Identifier	sugg_src2_r		1118423	1					
ANR	1119129	Argument	src2		1118423	3					
ANR	1119130	Identifier	src2		1118423	0					
ANR	1119131	Argument	src2w		1118423	4					
ANR	1119132	Identifier	src2w		1118423	0					
ANR	1119133	Argument	dst		1118423	5					
ANR	1119134	Identifier	dst		1118423	0					
ANR	1119135	Argument	dstw		1118423	6					
ANR	1119136	Identifier	dstw		1118423	0					
ANR	1119137	ExpressionStatement	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"	2071:1:63040:63107	1118423	10	True				
ANR	1119138	CallExpression	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"		1118423	0					
ANR	1119139	Callee	FAIL_IF		1118423	0					
ANR	1119140	Identifier	FAIL_IF		1118423	0					
ANR	1119141	ArgumentList	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1118423	1					
ANR	1119142	Argument	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1118423	0					
ANR	1119143	CallExpression	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1118423	0					
ANR	1119144	Callee	emit_single_op		1118423	0					
ANR	1119145	Identifier	emit_single_op		1118423	0					
ANR	1119146	ArgumentList	compiler		1118423	1					
ANR	1119147	Argument	compiler		1118423	0					
ANR	1119148	Identifier	compiler		1118423	0					
ANR	1119149	Argument	op		1118423	1					
ANR	1119150	Identifier	op		1118423	0					
ANR	1119151	Argument	flags		1118423	2					
ANR	1119152	Identifier	flags		1118423	0					
ANR	1119153	Argument	dst_r		1118423	3					
ANR	1119154	Identifier	dst_r		1118423	0					
ANR	1119155	Argument	src1_r		1118423	4					
ANR	1119156	Identifier	src1_r		1118423	0					
ANR	1119157	Argument	src2_r		1118423	5					
ANR	1119158	Identifier	src2_r		1118423	0					
ANR	1119159	IfStatement	if ( dst & SLJIT_MEM )		1118423	11					
ANR	1119160	Condition	dst & SLJIT_MEM	2073:5:63115:63129	1118423	0	True				
ANR	1119161	BitAndExpression	dst & SLJIT_MEM		1118423	0		&			
ANR	1119162	Identifier	dst		1118423	0					
ANR	1119163	Identifier	SLJIT_MEM		1118423	1					
ANR	1119164	CompoundStatement		114:22:3531:3531	1118423	1					
ANR	1119165	IfStatement	if ( ! ( flags & SLOW_DEST ) )		1118423	0					
ANR	1119166	Condition	! ( flags & SLOW_DEST )	2074:6:63140:63159	1118423	0	True				
ANR	1119167	UnaryOperationExpression	! ( flags & SLOW_DEST )		1118423	0					
ANR	1119168	UnaryOperator	!		1118423	0					
ANR	1119169	BitAndExpression	flags & SLOW_DEST		1118423	1		&			
ANR	1119170	Identifier	flags		1118423	0					
ANR	1119171	Identifier	SLOW_DEST		1118423	1					
ANR	1119172	CompoundStatement		115:28:3561:3561	1118423	1					
ANR	1119173	ExpressionStatement	"getput_arg_fast ( compiler , flags , reg_map [ dst_r ] , dst , dstw )"	2075:3:63167:63226	1118423	0	True				
ANR	1119174	CallExpression	"getput_arg_fast ( compiler , flags , reg_map [ dst_r ] , dst , dstw )"		1118423	0					
ANR	1119175	Callee	getput_arg_fast		1118423	0					
ANR	1119176	Identifier	getput_arg_fast		1118423	0					
ANR	1119177	ArgumentList	compiler		1118423	1					
ANR	1119178	Argument	compiler		1118423	0					
ANR	1119179	Identifier	compiler		1118423	0					
ANR	1119180	Argument	flags		1118423	1					
ANR	1119181	Identifier	flags		1118423	0					
ANR	1119182	Argument	reg_map [ dst_r ]		1118423	2					
ANR	1119183	ArrayIndexing	reg_map [ dst_r ]		1118423	0					
ANR	1119184	Identifier	reg_map		1118423	0					
ANR	1119185	Identifier	dst_r		1118423	1					
ANR	1119186	Argument	dst		1118423	3					
ANR	1119187	Identifier	dst		1118423	0					
ANR	1119188	Argument	dstw		1118423	4					
ANR	1119189	Identifier	dstw		1118423	0					
ANR	1119190	ReturnStatement	return compiler -> error ;	2076:3:63231:63253	1118423	1	True				
ANR	1119191	PtrMemberAccess	compiler -> error		1118423	0					
ANR	1119192	Identifier	compiler		1118423	0					
ANR	1119193	Identifier	error		1118423	1					
ANR	1119194	ReturnStatement	"return getput_arg ( compiler , flags , reg_map [ dst_r ] , dst , dstw , 0 , 0 ) ;"	2079:2:63262:63329	1118423	1	True				
ANR	1119195	CallExpression	"getput_arg ( compiler , flags , reg_map [ dst_r ] , dst , dstw , 0 , 0 )"		1118423	0					
ANR	1119196	Callee	getput_arg		1118423	0					
ANR	1119197	Identifier	getput_arg		1118423	0					
ANR	1119198	ArgumentList	compiler		1118423	1					
ANR	1119199	Argument	compiler		1118423	0					
ANR	1119200	Identifier	compiler		1118423	0					
ANR	1119201	Argument	flags		1118423	1					
ANR	1119202	Identifier	flags		1118423	0					
ANR	1119203	Argument	reg_map [ dst_r ]		1118423	2					
ANR	1119204	ArrayIndexing	reg_map [ dst_r ]		1118423	0					
ANR	1119205	Identifier	reg_map		1118423	0					
ANR	1119206	Identifier	dst_r		1118423	1					
ANR	1119207	Argument	dst		1118423	3					
ANR	1119208	Identifier	dst		1118423	0					
ANR	1119209	Argument	dstw		1118423	4					
ANR	1119210	Identifier	dstw		1118423	0					
ANR	1119211	Argument	0		1118423	5					
ANR	1119212	PrimaryExpression	0		1118423	0					
ANR	1119213	Argument	0		1118423	6					
ANR	1119214	PrimaryExpression	0		1118423	0					
ANR	1119215	ReturnStatement	return SLJIT_SUCCESS ;	2082:1:63336:63356	1118423	12	True				
ANR	1119216	Identifier	SLJIT_SUCCESS		1118423	0					
ANR	1119217	ReturnType	static sljit_si		1118423	1					
ANR	1119218	Identifier	emit_op		1118423	2					
ANR	1119219	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1118423	3					
ANR	1119220	Parameter	struct sljit_compiler * compiler	1959:24:59447:59477	1118423	0	True				
ANR	1119221	ParameterType	struct sljit_compiler *		1118423	0					
ANR	1119222	Identifier	compiler		1118423	1					
ANR	1119223	Parameter	sljit_si op	1959:57:59480:59490	1118423	1	True				
ANR	1119224	ParameterType	sljit_si		1118423	0					
ANR	1119225	Identifier	op		1118423	1					
ANR	1119226	Parameter	sljit_si flags	1959:70:59493:59506	1118423	2	True				
ANR	1119227	ParameterType	sljit_si		1118423	0					
ANR	1119228	Identifier	flags		1118423	1					
ANR	1119229	Parameter	sljit_si dst	1959:86:59509:59520	1118423	3	True				
ANR	1119230	ParameterType	sljit_si		1118423	0					
ANR	1119231	Identifier	dst		1118423	1					
ANR	1119232	Parameter	sljit_sw dstw	1959:100:59523:59535	1118423	4	True				
ANR	1119233	ParameterType	sljit_sw		1118423	0					
ANR	1119234	Identifier	dstw		1118423	1					
ANR	1119235	Parameter	sljit_si src1	1959:115:59538:59550	1118423	5	True				
ANR	1119236	ParameterType	sljit_si		1118423	0					
ANR	1119237	Identifier	src1		1118423	1					
ANR	1119238	Parameter	sljit_sw src1w	1959:130:59553:59566	1118423	6	True				
ANR	1119239	ParameterType	sljit_sw		1118423	0					
ANR	1119240	Identifier	src1w		1118423	1					
ANR	1119241	Parameter	sljit_si src2	1959:146:59569:59581	1118423	7	True				
ANR	1119242	ParameterType	sljit_si		1118423	0					
ANR	1119243	Identifier	src2		1118423	1					
ANR	1119244	Parameter	sljit_sw src2w	1959:161:59584:59597	1118423	8	True				
ANR	1119245	ParameterType	sljit_sw		1118423	0					
ANR	1119246	Identifier	src2w		1118423	1					
ANR	1119247	CFGEntryNode	ENTRY		1118423		True				
ANR	1119248	CFGExitNode	EXIT		1118423		True				
ANR	1119249	Symbol	SLOW_SRC2		1118423						
ANR	1119250	Symbol	TMP_REG2		1118423						
ANR	1119251	Symbol	TMP_REG1_mapped		1118423						
ANR	1119252	Symbol	SIMM_16BIT_MIN		1118423						
ANR	1119253	Symbol	TMP_REG1		1118423						
ANR	1119254	Symbol	SLJIT_MEM		1118423						
ANR	1119255	Symbol	SLOW_SRC1		1118423						
ANR	1119256	Symbol	reg_map		1118423						
ANR	1119257	Symbol	SLJIT_MOVU_SI		1118423						
ANR	1119258	Symbol	* compiler		1118423						
ANR	1119259	Symbol	ARG_TEST		1118423						
ANR	1119260	Symbol	SLJIT_IMM		1118423						
ANR	1119261	Symbol	getput_arg		1118423						
ANR	1119262	Symbol	UNUSED_DEST		1118423						
ANR	1119263	Symbol	* dst_r		1118423						
ANR	1119264	Symbol	TMP_REG2_mapped		1118423						
ANR	1119265	Symbol	can_cache		1118423						
ANR	1119266	Symbol	FAST_IS_REG		1118423						
ANR	1119267	Symbol	compiler -> cache_arg		1118423						
ANR	1119268	Symbol	REG2_SOURCE		1118423						
ANR	1119269	Symbol	~UIMM_16BIT_MAX		1118423						
ANR	1119270	Symbol	* reg_map		1118423						
ANR	1119271	Symbol	* sugg_src2_r		1118423						
ANR	1119272	Symbol	src1_r		1118423						
ANR	1119273	Symbol	SIMM_16BIT_MAX		1118423						
ANR	1119274	Symbol	emit_single_op		1118423						
ANR	1119275	Symbol	REG_DEST		1118423						
ANR	1119276	Symbol	getput_arg_fast		1118423						
ANR	1119277	Symbol	SLJIT_UNLIKELY		1118423						
ANR	1119278	Symbol	compiler -> cache_argw		1118423						
ANR	1119279	Symbol	src1w		1118423						
ANR	1119280	Symbol	dst		1118423						
ANR	1119281	Symbol	IMM_OP		1118423						
ANR	1119282	Symbol	LOAD_DATA		1118423						
ANR	1119283	Symbol	SLJIT_MOV		1118423						
ANR	1119284	Symbol	SLOW_DEST		1118423						
ANR	1119285	Symbol	CUMULATIVE_OP		1118423						
ANR	1119286	Symbol	flags		1118423						
ANR	1119287	Symbol	sugg_src2_r		1118423						
ANR	1119288	Symbol	dst_r		1118423						
ANR	1119289	Symbol	GET_FLAGS		1118423						
ANR	1119290	Symbol	load_immediate		1118423						
ANR	1119291	Symbol	SRC2_IMM		1118423						
ANR	1119292	Symbol	compiler		1118423						
ANR	1119293	Symbol	src2w		1118423						
ANR	1119294	Symbol	op		1118423						
ANR	1119295	Symbol	LOGICAL_OP		1118423						
ANR	1119296	Symbol	REG1_SOURCE		1118423						
ANR	1119297	Symbol	SLJIT_SUCCESS		1118423						
ANR	1119298	Symbol	src2_r		1118423						
ANR	1119299	Symbol	SLJIT_UNUSED		1118423						
ANR	1119300	Symbol	src1		1118423						
ANR	1119301	Symbol	src2		1118423						
ANR	1119302	Symbol	dstw		1118423						
ANR	1119303	Symbol	ALT_KEEP_CACHE		1118423						
ANR	1119304	Symbol	compiler -> error		1118423						
ANR	1119305	Function	sljit_emit_op_flags	2085:0:63361:65650							
ANR	1119306	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1119305	0					
ANR	1119307	CompoundStatement		2086:0:63534:65650	1119305	0					
ANR	1119308	IdentifierDeclStatement	"sljit_si sugg_dst_ar , dst_ar ;"	2087:1:63537:63565	1119305	0	True				
ANR	1119309	IdentifierDecl	sugg_dst_ar		1119305	0					
ANR	1119310	IdentifierDeclType	sljit_si		1119305	0					
ANR	1119311	Identifier	sugg_dst_ar		1119305	1					
ANR	1119312	IdentifierDecl	dst_ar		1119305	1					
ANR	1119313	IdentifierDeclType	sljit_si		1119305	0					
ANR	1119314	Identifier	dst_ar		1119305	1					
ANR	1119315	IdentifierDeclStatement	sljit_si flags = GET_ALL_FLAGS ( op ) ;	2088:1:63568:63602	1119305	1	True				
ANR	1119316	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1119305	0					
ANR	1119317	IdentifierDeclType	sljit_si		1119305	0					
ANR	1119318	Identifier	flags		1119305	1					
ANR	1119319	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1119305	2		=			
ANR	1119320	Identifier	flags		1119305	0					
ANR	1119321	CallExpression	GET_ALL_FLAGS ( op )		1119305	1					
ANR	1119322	Callee	GET_ALL_FLAGS		1119305	0					
ANR	1119323	Identifier	GET_ALL_FLAGS		1119305	0					
ANR	1119324	ArgumentList	op		1119305	1					
ANR	1119325	Argument	op		1119305	0					
ANR	1119326	Identifier	op		1119305	0					
ANR	1119327	IdentifierDeclStatement	sljit_si mem_type = ( op & SLJIT_INT_OP ) ? ( INT_DATA | SIGNED_DATA ) : WORD_DATA ;	2089:1:63605:63683	1119305	2	True				
ANR	1119328	IdentifierDecl	mem_type = ( op & SLJIT_INT_OP ) ? ( INT_DATA | SIGNED_DATA ) : WORD_DATA		1119305	0					
ANR	1119329	IdentifierDeclType	sljit_si		1119305	0					
ANR	1119330	Identifier	mem_type		1119305	1					
ANR	1119331	AssignmentExpression	mem_type = ( op & SLJIT_INT_OP ) ? ( INT_DATA | SIGNED_DATA ) : WORD_DATA		1119305	2		=			
ANR	1119332	Identifier	mem_type		1119305	0					
ANR	1119333	ConditionalExpression	( op & SLJIT_INT_OP ) ? ( INT_DATA | SIGNED_DATA ) : WORD_DATA		1119305	1					
ANR	1119334	Condition	op & SLJIT_INT_OP		1119305	0					
ANR	1119335	BitAndExpression	op & SLJIT_INT_OP		1119305	0		&			
ANR	1119336	Identifier	op		1119305	0					
ANR	1119337	Identifier	SLJIT_INT_OP		1119305	1					
ANR	1119338	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1119305	1		|			
ANR	1119339	Identifier	INT_DATA		1119305	0					
ANR	1119340	Identifier	SIGNED_DATA		1119305	1					
ANR	1119341	Identifier	WORD_DATA		1119305	2					
ANR	1119342	ExpressionStatement	CHECK_ERROR ( )	2091:1:63687:63700	1119305	3	True				
ANR	1119343	CallExpression	CHECK_ERROR ( )		1119305	0					
ANR	1119344	Callee	CHECK_ERROR		1119305	0					
ANR	1119345	Identifier	CHECK_ERROR		1119305	0					
ANR	1119346	ArgumentList			1119305	1					
ANR	1119347	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	2092:1:63703:63777	1119305	4	True				
ANR	1119348	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1119305	0					
ANR	1119349	Callee	CHECK		1119305	0					
ANR	1119350	Identifier	CHECK		1119305	0					
ANR	1119351	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1119305	1					
ANR	1119352	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1119305	0					
ANR	1119353	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1119305	0					
ANR	1119354	Callee	check_sljit_emit_op_flags		1119305	0					
ANR	1119355	Identifier	check_sljit_emit_op_flags		1119305	0					
ANR	1119356	ArgumentList	compiler		1119305	1					
ANR	1119357	Argument	compiler		1119305	0					
ANR	1119358	Identifier	compiler		1119305	0					
ANR	1119359	Argument	op		1119305	1					
ANR	1119360	Identifier	op		1119305	0					
ANR	1119361	Argument	dst		1119305	2					
ANR	1119362	Identifier	dst		1119305	0					
ANR	1119363	Argument	dstw		1119305	3					
ANR	1119364	Identifier	dstw		1119305	0					
ANR	1119365	Argument	src		1119305	4					
ANR	1119366	Identifier	src		1119305	0					
ANR	1119367	Argument	srcw		1119305	5					
ANR	1119368	Identifier	srcw		1119305	0					
ANR	1119369	Argument	type		1119305	6					
ANR	1119370	Identifier	type		1119305	0					
ANR	1119371	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2093:1:63780:63810	1119305	5	True				
ANR	1119372	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1119305	0					
ANR	1119373	Callee	ADJUST_LOCAL_OFFSET		1119305	0					
ANR	1119374	Identifier	ADJUST_LOCAL_OFFSET		1119305	0					
ANR	1119375	ArgumentList	dst		1119305	1					
ANR	1119376	Argument	dst		1119305	0					
ANR	1119377	Identifier	dst		1119305	0					
ANR	1119378	Argument	dstw		1119305	1					
ANR	1119379	Identifier	dstw		1119305	0					
ANR	1119380	IfStatement	if ( dst == SLJIT_UNUSED )		1119305	6					
ANR	1119381	Condition	dst == SLJIT_UNUSED	2095:5:63818:63836	1119305	0	True				
ANR	1119382	EqualityExpression	dst == SLJIT_UNUSED		1119305	0		==			
ANR	1119383	Identifier	dst		1119305	0					
ANR	1119384	Identifier	SLJIT_UNUSED		1119305	1					
ANR	1119385	ReturnStatement	return SLJIT_SUCCESS ;	2096:2:63841:63861	1119305	1	True				
ANR	1119386	Identifier	SLJIT_SUCCESS		1119305	0					
ANR	1119387	ExpressionStatement	op = GET_OPCODE ( op )	2098:1:63865:63884	1119305	7	True				
ANR	1119388	AssignmentExpression	op = GET_OPCODE ( op )		1119305	0		=			
ANR	1119389	Identifier	op		1119305	0					
ANR	1119390	CallExpression	GET_OPCODE ( op )		1119305	1					
ANR	1119391	Callee	GET_OPCODE		1119305	0					
ANR	1119392	Identifier	GET_OPCODE		1119305	0					
ANR	1119393	ArgumentList	op		1119305	1					
ANR	1119394	Argument	op		1119305	0					
ANR	1119395	Identifier	op		1119305	0					
ANR	1119396	IfStatement	if ( op == SLJIT_MOV_SI || op == SLJIT_MOV_UI )		1119305	8					
ANR	1119397	Condition	op == SLJIT_MOV_SI || op == SLJIT_MOV_UI	2099:5:63891:63930	1119305	0	True				
ANR	1119398	OrExpression	op == SLJIT_MOV_SI || op == SLJIT_MOV_UI		1119305	0		||			
ANR	1119399	EqualityExpression	op == SLJIT_MOV_SI		1119305	0		==			
ANR	1119400	Identifier	op		1119305	0					
ANR	1119401	Identifier	SLJIT_MOV_SI		1119305	1					
ANR	1119402	EqualityExpression	op == SLJIT_MOV_UI		1119305	1		==			
ANR	1119403	Identifier	op		1119305	0					
ANR	1119404	Identifier	SLJIT_MOV_UI		1119305	1					
ANR	1119405	ExpressionStatement	mem_type = INT_DATA | SIGNED_DATA	2100:2:63935:63968	1119305	1	True				
ANR	1119406	AssignmentExpression	mem_type = INT_DATA | SIGNED_DATA		1119305	0		=			
ANR	1119407	Identifier	mem_type		1119305	0					
ANR	1119408	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1119305	1		|			
ANR	1119409	Identifier	INT_DATA		1119305	0					
ANR	1119410	Identifier	SIGNED_DATA		1119305	1					
ANR	1119411	ExpressionStatement	sugg_dst_ar = reg_map [ ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 ]	2101:1:63971:64047	1119305	9	True				
ANR	1119412	AssignmentExpression	sugg_dst_ar = reg_map [ ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 ]		1119305	0		=			
ANR	1119413	Identifier	sugg_dst_ar		1119305	0					
ANR	1119414	ArrayIndexing	reg_map [ ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 ]		1119305	1					
ANR	1119415	Identifier	reg_map		1119305	0					
ANR	1119416	ConditionalExpression	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1119305	1					
ANR	1119417	Condition	op < SLJIT_ADD && FAST_IS_REG ( dst )		1119305	0					
ANR	1119418	AndExpression	op < SLJIT_ADD && FAST_IS_REG ( dst )		1119305	0		&&			
ANR	1119419	RelationalExpression	op < SLJIT_ADD		1119305	0		<			
ANR	1119420	Identifier	op		1119305	0					
ANR	1119421	Identifier	SLJIT_ADD		1119305	1					
ANR	1119422	CallExpression	FAST_IS_REG ( dst )		1119305	1					
ANR	1119423	Callee	FAST_IS_REG		1119305	0					
ANR	1119424	Identifier	FAST_IS_REG		1119305	0					
ANR	1119425	ArgumentList	dst		1119305	1					
ANR	1119426	Argument	dst		1119305	0					
ANR	1119427	Identifier	dst		1119305	0					
ANR	1119428	Identifier	dst		1119305	1					
ANR	1119429	Identifier	TMP_REG2		1119305	2					
ANR	1119430	ExpressionStatement	compiler -> cache_arg = 0	2103:1:64051:64074	1119305	10	True				
ANR	1119431	AssignmentExpression	compiler -> cache_arg = 0		1119305	0		=			
ANR	1119432	PtrMemberAccess	compiler -> cache_arg		1119305	0					
ANR	1119433	Identifier	compiler		1119305	0					
ANR	1119434	Identifier	cache_arg		1119305	1					
ANR	1119435	PrimaryExpression	0		1119305	1					
ANR	1119436	ExpressionStatement	compiler -> cache_argw = 0	2104:1:64077:64101	1119305	11	True				
ANR	1119437	AssignmentExpression	compiler -> cache_argw = 0		1119305	0		=			
ANR	1119438	PtrMemberAccess	compiler -> cache_argw		1119305	0					
ANR	1119439	Identifier	compiler		1119305	0					
ANR	1119440	Identifier	cache_argw		1119305	1					
ANR	1119441	PrimaryExpression	0		1119305	1					
ANR	1119442	IfStatement	if ( op >= SLJIT_ADD && ( src & SLJIT_MEM ) )		1119305	12					
ANR	1119443	Condition	op >= SLJIT_ADD && ( src & SLJIT_MEM )	2105:5:64108:64143	1119305	0	True				
ANR	1119444	AndExpression	op >= SLJIT_ADD && ( src & SLJIT_MEM )		1119305	0		&&			
ANR	1119445	RelationalExpression	op >= SLJIT_ADD		1119305	0		>=			
ANR	1119446	Identifier	op		1119305	0					
ANR	1119447	Identifier	SLJIT_ADD		1119305	1					
ANR	1119448	BitAndExpression	src & SLJIT_MEM		1119305	1		&			
ANR	1119449	Identifier	src		1119305	0					
ANR	1119450	Identifier	SLJIT_MEM		1119305	1					
ANR	1119451	CompoundStatement		20:43:611:611	1119305	1					
ANR	1119452	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2106:2:64150:64180	1119305	0	True				
ANR	1119453	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1119305	0					
ANR	1119454	Callee	ADJUST_LOCAL_OFFSET		1119305	0					
ANR	1119455	Identifier	ADJUST_LOCAL_OFFSET		1119305	0					
ANR	1119456	ArgumentList	src		1119305	1					
ANR	1119457	Argument	src		1119305	0					
ANR	1119458	Identifier	src		1119305	0					
ANR	1119459	Argument	srcw		1119305	1					
ANR	1119460	Identifier	srcw		1119305	0					
ANR	1119461	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , mem_type | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw ) )"	2107:2:64184:64276	1119305	1	True				
ANR	1119462	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , mem_type | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw ) )"		1119305	0					
ANR	1119463	Callee	FAIL_IF		1119305	0					
ANR	1119464	Identifier	FAIL_IF		1119305	0					
ANR	1119465	ArgumentList	"emit_op_mem2 ( compiler , mem_type | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw )"		1119305	1					
ANR	1119466	Argument	"emit_op_mem2 ( compiler , mem_type | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw )"		1119305	0					
ANR	1119467	CallExpression	"emit_op_mem2 ( compiler , mem_type | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw )"		1119305	0					
ANR	1119468	Callee	emit_op_mem2		1119305	0					
ANR	1119469	Identifier	emit_op_mem2		1119305	0					
ANR	1119470	ArgumentList	compiler		1119305	1					
ANR	1119471	Argument	compiler		1119305	0					
ANR	1119472	Identifier	compiler		1119305	0					
ANR	1119473	Argument	mem_type | LOAD_DATA		1119305	1					
ANR	1119474	InclusiveOrExpression	mem_type | LOAD_DATA		1119305	0		|			
ANR	1119475	Identifier	mem_type		1119305	0					
ANR	1119476	Identifier	LOAD_DATA		1119305	1					
ANR	1119477	Argument	TMP_REG1_mapped		1119305	2					
ANR	1119478	Identifier	TMP_REG1_mapped		1119305	0					
ANR	1119479	Argument	src		1119305	3					
ANR	1119480	Identifier	src		1119305	0					
ANR	1119481	Argument	srcw		1119305	4					
ANR	1119482	Identifier	srcw		1119305	0					
ANR	1119483	Argument	dst		1119305	5					
ANR	1119484	Identifier	dst		1119305	0					
ANR	1119485	Argument	dstw		1119305	6					
ANR	1119486	Identifier	dstw		1119305	0					
ANR	1119487	ExpressionStatement	src = TMP_REG1	2108:2:64280:64294	1119305	2	True				
ANR	1119488	AssignmentExpression	src = TMP_REG1		1119305	0		=			
ANR	1119489	Identifier	src		1119305	0					
ANR	1119490	Identifier	TMP_REG1		1119305	1					
ANR	1119491	ExpressionStatement	srcw = 0	2109:2:64298:64306	1119305	3	True				
ANR	1119492	AssignmentExpression	srcw = 0		1119305	0		=			
ANR	1119493	Identifier	srcw		1119305	0					
ANR	1119494	PrimaryExpression	0		1119305	1					
ANR	1119495	SwitchStatement	switch ( type & 0xff )		1119305	13					
ANR	1119496	Condition	type & 0xff	2112:9:64321:64331	1119305	0	True				
ANR	1119497	BitAndExpression	type & 0xff		1119305	0		&			
ANR	1119498	Identifier	type		1119305	0					
ANR	1119499	PrimaryExpression	0xff		1119305	1					
ANR	1119500	CompoundStatement		27:22:799:799	1119305	1					
ANR	1119501	Label	case SLJIT_EQUAL :	2113:1:64337:64353	1119305	0	True				
ANR	1119502	Identifier	SLJIT_EQUAL		1119305	0					
ANR	1119503	Label	case SLJIT_NOT_EQUAL :	2114:1:64356:64376	1119305	1	True				
ANR	1119504	Identifier	SLJIT_NOT_EQUAL		1119305	0					
ANR	1119505	ExpressionStatement	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 ) )"	2115:2:64380:64424	1119305	2	True				
ANR	1119506	CallExpression	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 ) )"		1119305	0					
ANR	1119507	Callee	FAIL_IF		1119305	0					
ANR	1119508	Identifier	FAIL_IF		1119305	0					
ANR	1119509	ArgumentList	"CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 )"		1119305	1					
ANR	1119510	Argument	"CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 )"		1119305	0					
ANR	1119511	CallExpression	"CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 )"		1119305	0					
ANR	1119512	Callee	CMPLTUI		1119305	0					
ANR	1119513	Identifier	CMPLTUI		1119305	0					
ANR	1119514	ArgumentList	sugg_dst_ar		1119305	1					
ANR	1119515	Argument	sugg_dst_ar		1119305	0					
ANR	1119516	Identifier	sugg_dst_ar		1119305	0					
ANR	1119517	Argument	EQUAL_FLAG		1119305	1					
ANR	1119518	Identifier	EQUAL_FLAG		1119305	0					
ANR	1119519	Argument	1		1119305	2					
ANR	1119520	PrimaryExpression	1		1119305	0					
ANR	1119521	ExpressionStatement	dst_ar = sugg_dst_ar	2116:2:64428:64448	1119305	3	True				
ANR	1119522	AssignmentExpression	dst_ar = sugg_dst_ar		1119305	0		=			
ANR	1119523	Identifier	dst_ar		1119305	0					
ANR	1119524	Identifier	sugg_dst_ar		1119305	1					
ANR	1119525	BreakStatement	break ;	2117:2:64452:64457	1119305	4	True				
ANR	1119526	Label	case SLJIT_LESS :	2118:1:64460:64475	1119305	5	True				
ANR	1119527	Identifier	SLJIT_LESS		1119305	0					
ANR	1119528	Label	case SLJIT_GREATER_EQUAL :	2119:1:64478:64502	1119305	6	True				
ANR	1119529	Identifier	SLJIT_GREATER_EQUAL		1119305	0					
ANR	1119530	ExpressionStatement	dst_ar = ULESS_FLAG	2120:2:64506:64525	1119305	7	True				
ANR	1119531	AssignmentExpression	dst_ar = ULESS_FLAG		1119305	0		=			
ANR	1119532	Identifier	dst_ar		1119305	0					
ANR	1119533	Identifier	ULESS_FLAG		1119305	1					
ANR	1119534	BreakStatement	break ;	2121:2:64529:64534	1119305	8	True				
ANR	1119535	Label	case SLJIT_GREATER :	2122:1:64537:64555	1119305	9	True				
ANR	1119536	Identifier	SLJIT_GREATER		1119305	0					
ANR	1119537	Label	case SLJIT_LESS_EQUAL :	2123:1:64558:64579	1119305	10	True				
ANR	1119538	Identifier	SLJIT_LESS_EQUAL		1119305	0					
ANR	1119539	ExpressionStatement	dst_ar = UGREATER_FLAG	2124:2:64583:64605	1119305	11	True				
ANR	1119540	AssignmentExpression	dst_ar = UGREATER_FLAG		1119305	0		=			
ANR	1119541	Identifier	dst_ar		1119305	0					
ANR	1119542	Identifier	UGREATER_FLAG		1119305	1					
ANR	1119543	BreakStatement	break ;	2125:2:64609:64614	1119305	12	True				
ANR	1119544	Label	case SLJIT_SIG_LESS :	2126:1:64617:64636	1119305	13	True				
ANR	1119545	Identifier	SLJIT_SIG_LESS		1119305	0					
ANR	1119546	Label	case SLJIT_SIG_GREATER_EQUAL :	2127:1:64639:64667	1119305	14	True				
ANR	1119547	Identifier	SLJIT_SIG_GREATER_EQUAL		1119305	0					
ANR	1119548	ExpressionStatement	dst_ar = LESS_FLAG	2128:2:64671:64689	1119305	15	True				
ANR	1119549	AssignmentExpression	dst_ar = LESS_FLAG		1119305	0		=			
ANR	1119550	Identifier	dst_ar		1119305	0					
ANR	1119551	Identifier	LESS_FLAG		1119305	1					
ANR	1119552	BreakStatement	break ;	2129:2:64693:64698	1119305	16	True				
ANR	1119553	Label	case SLJIT_SIG_GREATER :	2130:1:64701:64723	1119305	17	True				
ANR	1119554	Identifier	SLJIT_SIG_GREATER		1119305	0					
ANR	1119555	Label	case SLJIT_SIG_LESS_EQUAL :	2131:1:64726:64751	1119305	18	True				
ANR	1119556	Identifier	SLJIT_SIG_LESS_EQUAL		1119305	0					
ANR	1119557	ExpressionStatement	dst_ar = GREATER_FLAG	2132:2:64755:64776	1119305	19	True				
ANR	1119558	AssignmentExpression	dst_ar = GREATER_FLAG		1119305	0		=			
ANR	1119559	Identifier	dst_ar		1119305	0					
ANR	1119560	Identifier	GREATER_FLAG		1119305	1					
ANR	1119561	BreakStatement	break ;	2133:2:64780:64785	1119305	20	True				
ANR	1119562	Label	case SLJIT_OVERFLOW :	2134:1:64788:64807	1119305	21	True				
ANR	1119563	Identifier	SLJIT_OVERFLOW		1119305	0					
ANR	1119564	Label	case SLJIT_NOT_OVERFLOW :	2135:1:64810:64833	1119305	22	True				
ANR	1119565	Identifier	SLJIT_NOT_OVERFLOW		1119305	0					
ANR	1119566	ExpressionStatement	dst_ar = OVERFLOW_FLAG	2136:2:64837:64859	1119305	23	True				
ANR	1119567	AssignmentExpression	dst_ar = OVERFLOW_FLAG		1119305	0		=			
ANR	1119568	Identifier	dst_ar		1119305	0					
ANR	1119569	Identifier	OVERFLOW_FLAG		1119305	1					
ANR	1119570	BreakStatement	break ;	2137:2:64863:64868	1119305	24	True				
ANR	1119571	Label	case SLJIT_MUL_OVERFLOW :	2138:1:64871:64894	1119305	25	True				
ANR	1119572	Identifier	SLJIT_MUL_OVERFLOW		1119305	0					
ANR	1119573	Label	case SLJIT_MUL_NOT_OVERFLOW :	2139:1:64897:64924	1119305	26	True				
ANR	1119574	Identifier	SLJIT_MUL_NOT_OVERFLOW		1119305	0					
ANR	1119575	ExpressionStatement	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 ) )"	2140:2:64928:64975	1119305	27	True				
ANR	1119576	CallExpression	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 ) )"		1119305	0					
ANR	1119577	Callee	FAIL_IF		1119305	0					
ANR	1119578	Identifier	FAIL_IF		1119305	0					
ANR	1119579	ArgumentList	"CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 )"		1119305	1					
ANR	1119580	Argument	"CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 )"		1119305	0					
ANR	1119581	CallExpression	"CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 )"		1119305	0					
ANR	1119582	Callee	CMPLTUI		1119305	0					
ANR	1119583	Identifier	CMPLTUI		1119305	0					
ANR	1119584	ArgumentList	sugg_dst_ar		1119305	1					
ANR	1119585	Argument	sugg_dst_ar		1119305	0					
ANR	1119586	Identifier	sugg_dst_ar		1119305	0					
ANR	1119587	Argument	OVERFLOW_FLAG		1119305	1					
ANR	1119588	Identifier	OVERFLOW_FLAG		1119305	0					
ANR	1119589	Argument	1		1119305	2					
ANR	1119590	PrimaryExpression	1		1119305	0					
ANR	1119591	ExpressionStatement	dst_ar = sugg_dst_ar	2141:2:64979:64999	1119305	28	True				
ANR	1119592	AssignmentExpression	dst_ar = sugg_dst_ar		1119305	0		=			
ANR	1119593	Identifier	dst_ar		1119305	0					
ANR	1119594	Identifier	sugg_dst_ar		1119305	1					
ANR	1119595	ExpressionStatement	type ^= 0x1	2142:2:65003:65014	1119305	29	True				
ANR	1119596	AssignmentExpression	type ^= 0x1		1119305	0		^=			
ANR	1119597	Identifier	type		1119305	0					
ANR	1119598	PrimaryExpression	0x1		1119305	1					
ANR	1119599	BreakStatement	break ;	2143:2:65058:65063	1119305	30	True				
ANR	1119600	Label	default :	2145:1:65067:65074	1119305	31	True				
ANR	1119601	Identifier	default		1119305	0					
ANR	1119602	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2146:2:65078:65097	1119305	32	True				
ANR	1119603	CallExpression	SLJIT_ASSERT_STOP ( )		1119305	0					
ANR	1119604	Callee	SLJIT_ASSERT_STOP		1119305	0					
ANR	1119605	Identifier	SLJIT_ASSERT_STOP		1119305	0					
ANR	1119606	ArgumentList			1119305	1					
ANR	1119607	ExpressionStatement	dst_ar = sugg_dst_ar	2147:2:65101:65121	1119305	33	True				
ANR	1119608	AssignmentExpression	dst_ar = sugg_dst_ar		1119305	0		=			
ANR	1119609	Identifier	dst_ar		1119305	0					
ANR	1119610	Identifier	sugg_dst_ar		1119305	1					
ANR	1119611	BreakStatement	break ;	2148:2:65125:65130	1119305	34	True				
ANR	1119612	IfStatement	if ( type & 0x1 )		1119305	14					
ANR	1119613	Condition	type & 0x1	2151:5:65141:65150	1119305	0	True				
ANR	1119614	BitAndExpression	type & 0x1		1119305	0		&			
ANR	1119615	Identifier	type		1119305	0					
ANR	1119616	PrimaryExpression	0x1		1119305	1					
ANR	1119617	CompoundStatement		66:17:1618:1618	1119305	1					
ANR	1119618	ExpressionStatement	"FAIL_IF ( XORI ( sugg_dst_ar , dst_ar , 1 ) )"	2152:2:65157:65194	1119305	0	True				
ANR	1119619	CallExpression	"FAIL_IF ( XORI ( sugg_dst_ar , dst_ar , 1 ) )"		1119305	0					
ANR	1119620	Callee	FAIL_IF		1119305	0					
ANR	1119621	Identifier	FAIL_IF		1119305	0					
ANR	1119622	ArgumentList	"XORI ( sugg_dst_ar , dst_ar , 1 )"		1119305	1					
ANR	1119623	Argument	"XORI ( sugg_dst_ar , dst_ar , 1 )"		1119305	0					
ANR	1119624	CallExpression	"XORI ( sugg_dst_ar , dst_ar , 1 )"		1119305	0					
ANR	1119625	Callee	XORI		1119305	0					
ANR	1119626	Identifier	XORI		1119305	0					
ANR	1119627	ArgumentList	sugg_dst_ar		1119305	1					
ANR	1119628	Argument	sugg_dst_ar		1119305	0					
ANR	1119629	Identifier	sugg_dst_ar		1119305	0					
ANR	1119630	Argument	dst_ar		1119305	1					
ANR	1119631	Identifier	dst_ar		1119305	0					
ANR	1119632	Argument	1		1119305	2					
ANR	1119633	PrimaryExpression	1		1119305	0					
ANR	1119634	ExpressionStatement	dst_ar = sugg_dst_ar	2153:2:65198:65218	1119305	1	True				
ANR	1119635	AssignmentExpression	dst_ar = sugg_dst_ar		1119305	0		=			
ANR	1119636	Identifier	dst_ar		1119305	0					
ANR	1119637	Identifier	sugg_dst_ar		1119305	1					
ANR	1119638	IfStatement	if ( op >= SLJIT_ADD )		1119305	15					
ANR	1119639	Condition	op >= SLJIT_ADD	2156:5:65229:65243	1119305	0	True				
ANR	1119640	RelationalExpression	op >= SLJIT_ADD		1119305	0		>=			
ANR	1119641	Identifier	op		1119305	0					
ANR	1119642	Identifier	SLJIT_ADD		1119305	1					
ANR	1119643	CompoundStatement		71:22:1711:1711	1119305	1					
ANR	1119644	IfStatement	if ( TMP_REG2_mapped != dst_ar )		1119305	0					
ANR	1119645	Condition	TMP_REG2_mapped != dst_ar	2157:6:65254:65278	1119305	0	True				
ANR	1119646	EqualityExpression	TMP_REG2_mapped != dst_ar		1119305	0		!=			
ANR	1119647	Identifier	TMP_REG2_mapped		1119305	0					
ANR	1119648	Identifier	dst_ar		1119305	1					
ANR	1119649	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG2_mapped , dst_ar , ZERO ) )"	2158:3:65284:65327	1119305	1	True				
ANR	1119650	CallExpression	"FAIL_IF ( ADD ( TMP_REG2_mapped , dst_ar , ZERO ) )"		1119305	0					
ANR	1119651	Callee	FAIL_IF		1119305	0					
ANR	1119652	Identifier	FAIL_IF		1119305	0					
ANR	1119653	ArgumentList	"ADD ( TMP_REG2_mapped , dst_ar , ZERO )"		1119305	1					
ANR	1119654	Argument	"ADD ( TMP_REG2_mapped , dst_ar , ZERO )"		1119305	0					
ANR	1119655	CallExpression	"ADD ( TMP_REG2_mapped , dst_ar , ZERO )"		1119305	0					
ANR	1119656	Callee	ADD		1119305	0					
ANR	1119657	Identifier	ADD		1119305	0					
ANR	1119658	ArgumentList	TMP_REG2_mapped		1119305	1					
ANR	1119659	Argument	TMP_REG2_mapped		1119305	0					
ANR	1119660	Identifier	TMP_REG2_mapped		1119305	0					
ANR	1119661	Argument	dst_ar		1119305	1					
ANR	1119662	Identifier	dst_ar		1119305	0					
ANR	1119663	Argument	ZERO		1119305	2					
ANR	1119664	Identifier	ZERO		1119305	0					
ANR	1119665	ReturnStatement	"return emit_op ( compiler , op | flags , mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 ) ;"	2159:2:65331:65467	1119305	1	True				
ANR	1119666	CallExpression	"emit_op ( compiler , op | flags , mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 )"		1119305	0					
ANR	1119667	Callee	emit_op		1119305	0					
ANR	1119668	Identifier	emit_op		1119305	0					
ANR	1119669	ArgumentList	compiler		1119305	1					
ANR	1119670	Argument	compiler		1119305	0					
ANR	1119671	Identifier	compiler		1119305	0					
ANR	1119672	Argument	op | flags		1119305	1					
ANR	1119673	InclusiveOrExpression	op | flags		1119305	0		|			
ANR	1119674	Identifier	op		1119305	0					
ANR	1119675	Identifier	flags		1119305	1					
ANR	1119676	Argument	mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1119305	2					
ANR	1119677	InclusiveOrExpression	mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1119305	0		|			
ANR	1119678	Identifier	mem_type		1119305	0					
ANR	1119679	InclusiveOrExpression	CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1119305	1		|			
ANR	1119680	Identifier	CUMULATIVE_OP		1119305	0					
ANR	1119681	InclusiveOrExpression	LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1119305	1		|			
ANR	1119682	Identifier	LOGICAL_OP		1119305	0					
ANR	1119683	InclusiveOrExpression	IMM_OP | ALT_KEEP_CACHE		1119305	1		|			
ANR	1119684	Identifier	IMM_OP		1119305	0					
ANR	1119685	Identifier	ALT_KEEP_CACHE		1119305	1					
ANR	1119686	Argument	dst		1119305	3					
ANR	1119687	Identifier	dst		1119305	0					
ANR	1119688	Argument	dstw		1119305	4					
ANR	1119689	Identifier	dstw		1119305	0					
ANR	1119690	Argument	src		1119305	5					
ANR	1119691	Identifier	src		1119305	0					
ANR	1119692	Argument	srcw		1119305	6					
ANR	1119693	Identifier	srcw		1119305	0					
ANR	1119694	Argument	TMP_REG2		1119305	7					
ANR	1119695	Identifier	TMP_REG2		1119305	0					
ANR	1119696	Argument	0		1119305	8					
ANR	1119697	PrimaryExpression	0		1119305	0					
ANR	1119698	IfStatement	if ( dst & SLJIT_MEM )		1119305	16					
ANR	1119699	Condition	dst & SLJIT_MEM	2162:5:65478:65492	1119305	0	True				
ANR	1119700	BitAndExpression	dst & SLJIT_MEM		1119305	0		&			
ANR	1119701	Identifier	dst		1119305	0					
ANR	1119702	Identifier	SLJIT_MEM		1119305	1					
ANR	1119703	ReturnStatement	"return emit_op_mem ( compiler , mem_type , dst_ar , dst , dstw ) ;"	2163:2:65497:65554	1119305	1	True				
ANR	1119704	CallExpression	"emit_op_mem ( compiler , mem_type , dst_ar , dst , dstw )"		1119305	0					
ANR	1119705	Callee	emit_op_mem		1119305	0					
ANR	1119706	Identifier	emit_op_mem		1119305	0					
ANR	1119707	ArgumentList	compiler		1119305	1					
ANR	1119708	Argument	compiler		1119305	0					
ANR	1119709	Identifier	compiler		1119305	0					
ANR	1119710	Argument	mem_type		1119305	1					
ANR	1119711	Identifier	mem_type		1119305	0					
ANR	1119712	Argument	dst_ar		1119305	2					
ANR	1119713	Identifier	dst_ar		1119305	0					
ANR	1119714	Argument	dst		1119305	3					
ANR	1119715	Identifier	dst		1119305	0					
ANR	1119716	Argument	dstw		1119305	4					
ANR	1119717	Identifier	dstw		1119305	0					
ANR	1119718	IfStatement	if ( sugg_dst_ar != dst_ar )		1119305	17					
ANR	1119719	Condition	sugg_dst_ar != dst_ar	2165:5:65562:65582	1119305	0	True				
ANR	1119720	EqualityExpression	sugg_dst_ar != dst_ar		1119305	0		!=			
ANR	1119721	Identifier	sugg_dst_ar		1119305	0					
ANR	1119722	Identifier	dst_ar		1119305	1					
ANR	1119723	ReturnStatement	"return ADD ( sugg_dst_ar , dst_ar , ZERO ) ;"	2166:2:65587:65624	1119305	1	True				
ANR	1119724	CallExpression	"ADD ( sugg_dst_ar , dst_ar , ZERO )"		1119305	0					
ANR	1119725	Callee	ADD		1119305	0					
ANR	1119726	Identifier	ADD		1119305	0					
ANR	1119727	ArgumentList	sugg_dst_ar		1119305	1					
ANR	1119728	Argument	sugg_dst_ar		1119305	0					
ANR	1119729	Identifier	sugg_dst_ar		1119305	0					
ANR	1119730	Argument	dst_ar		1119305	1					
ANR	1119731	Identifier	dst_ar		1119305	0					
ANR	1119732	Argument	ZERO		1119305	2					
ANR	1119733	Identifier	ZERO		1119305	0					
ANR	1119734	ReturnStatement	return SLJIT_SUCCESS ;	2168:1:65628:65648	1119305	18	True				
ANR	1119735	Identifier	SLJIT_SUCCESS		1119305	0					
ANR	1119736	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1119305	1					
ANR	1119737	Identifier	sljit_emit_op_flags		1119305	2					
ANR	1119738	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1119305	3					
ANR	1119739	Parameter	struct sljit_compiler * compiler	2085:54:63415:63445	1119305	0	True				
ANR	1119740	ParameterType	struct sljit_compiler *		1119305	0					
ANR	1119741	Identifier	compiler		1119305	1					
ANR	1119742	Parameter	sljit_si op	2085:87:63448:63458	1119305	1	True				
ANR	1119743	ParameterType	sljit_si		1119305	0					
ANR	1119744	Identifier	op		1119305	1					
ANR	1119745	Parameter	sljit_si dst	2085:100:63461:63472	1119305	2	True				
ANR	1119746	ParameterType	sljit_si		1119305	0					
ANR	1119747	Identifier	dst		1119305	1					
ANR	1119748	Parameter	sljit_sw dstw	2085:114:63475:63487	1119305	3	True				
ANR	1119749	ParameterType	sljit_sw		1119305	0					
ANR	1119750	Identifier	dstw		1119305	1					
ANR	1119751	Parameter	sljit_si src	2085:129:63490:63501	1119305	4	True				
ANR	1119752	ParameterType	sljit_si		1119305	0					
ANR	1119753	Identifier	src		1119305	1					
ANR	1119754	Parameter	sljit_sw srcw	2085:143:63504:63516	1119305	5	True				
ANR	1119755	ParameterType	sljit_sw		1119305	0					
ANR	1119756	Identifier	srcw		1119305	1					
ANR	1119757	Parameter	sljit_si type	2085:158:63519:63531	1119305	6	True				
ANR	1119758	ParameterType	sljit_si		1119305	0					
ANR	1119759	Identifier	type		1119305	1					
ANR	1119760	CFGEntryNode	ENTRY		1119305		True				
ANR	1119761	CFGExitNode	EXIT		1119305		True				
ANR	1119762	Symbol	EQUAL_FLAG		1119305						
ANR	1119763	Symbol	TMP_REG2		1119305						
ANR	1119764	Symbol	ZERO		1119305						
ANR	1119765	Symbol	ADD		1119305						
ANR	1119766	Symbol	TMP_REG1_mapped		1119305						
ANR	1119767	Symbol	TMP_REG1		1119305						
ANR	1119768	Symbol	* op		1119305						
ANR	1119769	Symbol	sugg_dst_ar		1119305						
ANR	1119770	Symbol	SLJIT_MEM		1119305						
ANR	1119771	Symbol	reg_map		1119305						
ANR	1119772	Symbol	* compiler		1119305						
ANR	1119773	Symbol	type		1119305						
ANR	1119774	Symbol	GET_OPCODE		1119305						
ANR	1119775	Symbol	* dst		1119305						
ANR	1119776	Symbol	INT_DATA		1119305						
ANR	1119777	Symbol	SLJIT_MOV_UI		1119305						
ANR	1119778	Symbol	* FAST_IS_REG		1119305						
ANR	1119779	Symbol	ULESS_FLAG		1119305						
ANR	1119780	Symbol	TMP_REG2_mapped		1119305						
ANR	1119781	Symbol	* TMP_REG2		1119305						
ANR	1119782	Symbol	emit_op		1119305						
ANR	1119783	Symbol	FAST_IS_REG		1119305						
ANR	1119784	Symbol	srcw		1119305						
ANR	1119785	Symbol	compiler -> cache_arg		1119305						
ANR	1119786	Symbol	emit_op_mem2		1119305						
ANR	1119787	Symbol	emit_op_mem		1119305						
ANR	1119788	Symbol	* reg_map		1119305						
ANR	1119789	Symbol	OVERFLOW_FLAG		1119305						
ANR	1119790	Symbol	mem_type		1119305						
ANR	1119791	Symbol	compiler -> cache_argw		1119305						
ANR	1119792	Symbol	dst		1119305						
ANR	1119793	Symbol	dst_ar		1119305						
ANR	1119794	Symbol	LOAD_DATA		1119305						
ANR	1119795	Symbol	IMM_OP		1119305						
ANR	1119796	Symbol	XORI		1119305						
ANR	1119797	Symbol	CUMULATIVE_OP		1119305						
ANR	1119798	Symbol	flags		1119305						
ANR	1119799	Symbol	SLJIT_ADD		1119305						
ANR	1119800	Symbol	GET_ALL_FLAGS		1119305						
ANR	1119801	Symbol	SLJIT_MOV_SI		1119305						
ANR	1119802	Symbol	GREATER_FLAG		1119305						
ANR	1119803	Symbol	compiler		1119305						
ANR	1119804	Symbol	check_sljit_emit_op_flags		1119305						
ANR	1119805	Symbol	WORD_DATA		1119305						
ANR	1119806	Symbol	op		1119305						
ANR	1119807	Symbol	src		1119305						
ANR	1119808	Symbol	LOGICAL_OP		1119305						
ANR	1119809	Symbol	SLJIT_INT_OP		1119305						
ANR	1119810	Symbol	SLJIT_SUCCESS		1119305						
ANR	1119811	Symbol	UGREATER_FLAG		1119305						
ANR	1119812	Symbol	* SLJIT_ADD		1119305						
ANR	1119813	Symbol	SIGNED_DATA		1119305						
ANR	1119814	Symbol	CMPLTUI		1119305						
ANR	1119815	Symbol	SLJIT_UNUSED		1119305						
ANR	1119816	Symbol	LESS_FLAG		1119305						
ANR	1119817	Symbol	dstw		1119305						
ANR	1119818	Symbol	ALT_KEEP_CACHE		1119305						
ANR	1119819	Function	sljit_emit_op0	2171:0:65653:66096							
ANR	1119820	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1119819	0					
ANR	1119821	CompoundStatement		2171:95:65748:66096	1119819	0					
ANR	1119822	ExpressionStatement	CHECK_ERROR ( )	2172:1:65751:65764	1119819	0	True				
ANR	1119823	CallExpression	CHECK_ERROR ( )		1119819	0					
ANR	1119824	Callee	CHECK_ERROR		1119819	0					
ANR	1119825	Identifier	CHECK_ERROR		1119819	0					
ANR	1119826	ArgumentList			1119819	1					
ANR	1119827	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	2173:1:65767:65808	1119819	1	True				
ANR	1119828	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1119819	0					
ANR	1119829	Callee	CHECK		1119819	0					
ANR	1119830	Identifier	CHECK		1119819	0					
ANR	1119831	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1119819	1					
ANR	1119832	Argument	"check_sljit_emit_op0 ( compiler , op )"		1119819	0					
ANR	1119833	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1119819	0					
ANR	1119834	Callee	check_sljit_emit_op0		1119819	0					
ANR	1119835	Identifier	check_sljit_emit_op0		1119819	0					
ANR	1119836	ArgumentList	compiler		1119819	1					
ANR	1119837	Argument	compiler		1119819	0					
ANR	1119838	Identifier	compiler		1119819	0					
ANR	1119839	Argument	op		1119819	1					
ANR	1119840	Identifier	op		1119819	0					
ANR	1119841	ExpressionStatement	op = GET_OPCODE ( op )	2175:1:65812:65831	1119819	2	True				
ANR	1119842	AssignmentExpression	op = GET_OPCODE ( op )		1119819	0		=			
ANR	1119843	Identifier	op		1119819	0					
ANR	1119844	CallExpression	GET_OPCODE ( op )		1119819	1					
ANR	1119845	Callee	GET_OPCODE		1119819	0					
ANR	1119846	Identifier	GET_OPCODE		1119819	0					
ANR	1119847	ArgumentList	op		1119819	1					
ANR	1119848	Argument	op		1119819	0					
ANR	1119849	Identifier	op		1119819	0					
ANR	1119850	SwitchStatement	switch ( op )		1119819	3					
ANR	1119851	Condition	op	2176:9:65842:65843	1119819	0	True				
ANR	1119852	Identifier	op		1119819	0					
ANR	1119853	CompoundStatement		6:13:97:97	1119819	1					
ANR	1119854	Label	case SLJIT_NOP :	2177:1:65849:65863	1119819	0	True				
ANR	1119855	Identifier	SLJIT_NOP		1119819	0					
ANR	1119856	ReturnStatement	"return push_0_buffer ( compiler , TILEGX_OPC_FNOP , __LINE__ ) ;"	2178:2:65867:65924	1119819	1	True				
ANR	1119857	CallExpression	"push_0_buffer ( compiler , TILEGX_OPC_FNOP , __LINE__ )"		1119819	0					
ANR	1119858	Callee	push_0_buffer		1119819	0					
ANR	1119859	Identifier	push_0_buffer		1119819	0					
ANR	1119860	ArgumentList	compiler		1119819	1					
ANR	1119861	Argument	compiler		1119819	0					
ANR	1119862	Identifier	compiler		1119819	0					
ANR	1119863	Argument	TILEGX_OPC_FNOP		1119819	1					
ANR	1119864	Identifier	TILEGX_OPC_FNOP		1119819	0					
ANR	1119865	Argument	__LINE__		1119819	2					
ANR	1119866	Identifier	__LINE__		1119819	0					
ANR	1119867	Label	case SLJIT_BREAKPOINT :	2180:1:65928:65949	1119819	2	True				
ANR	1119868	Identifier	SLJIT_BREAKPOINT		1119819	0					
ANR	1119869	ReturnStatement	return PI ( BPT ) ;	2181:2:65953:65967	1119819	3	True				
ANR	1119870	CallExpression	PI ( BPT )		1119819	0					
ANR	1119871	Callee	PI		1119819	0					
ANR	1119872	Identifier	PI		1119819	0					
ANR	1119873	ArgumentList	BPT		1119819	1					
ANR	1119874	Argument	BPT		1119819	0					
ANR	1119875	Identifier	BPT		1119819	0					
ANR	1119876	Label	case SLJIT_LUMUL :	2183:1:65971:65987	1119819	4	True				
ANR	1119877	Identifier	SLJIT_LUMUL		1119819	0					
ANR	1119878	Label	case SLJIT_LSMUL :	2184:1:65990:66006	1119819	5	True				
ANR	1119879	Identifier	SLJIT_LSMUL		1119819	0					
ANR	1119880	Label	case SLJIT_UDIVI :	2185:1:66009:66025	1119819	6	True				
ANR	1119881	Identifier	SLJIT_UDIVI		1119819	0					
ANR	1119882	Label	case SLJIT_SDIVI :	2186:1:66028:66044	1119819	7	True				
ANR	1119883	Identifier	SLJIT_SDIVI		1119819	0					
ANR	1119884	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2187:2:66048:66067	1119819	8	True				
ANR	1119885	CallExpression	SLJIT_ASSERT_STOP ( )		1119819	0					
ANR	1119886	Callee	SLJIT_ASSERT_STOP		1119819	0					
ANR	1119887	Identifier	SLJIT_ASSERT_STOP		1119819	0					
ANR	1119888	ArgumentList			1119819	1					
ANR	1119889	ReturnStatement	return SLJIT_SUCCESS ;	2190:1:66074:66094	1119819	4	True				
ANR	1119890	Identifier	SLJIT_SUCCESS		1119819	0					
ANR	1119891	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1119819	1					
ANR	1119892	Identifier	sljit_emit_op0		1119819	2					
ANR	1119893	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1119819	3					
ANR	1119894	Parameter	struct sljit_compiler * compiler	2171:49:65702:65732	1119819	0	True				
ANR	1119895	ParameterType	struct sljit_compiler *		1119819	0					
ANR	1119896	Identifier	compiler		1119819	1					
ANR	1119897	Parameter	sljit_si op	2171:82:65735:65745	1119819	1	True				
ANR	1119898	ParameterType	sljit_si		1119819	0					
ANR	1119899	Identifier	op		1119819	1					
ANR	1119900	CFGEntryNode	ENTRY		1119819		True				
ANR	1119901	CFGExitNode	EXIT		1119819		True				
ANR	1119902	Symbol	TILEGX_OPC_FNOP		1119819						
ANR	1119903	Symbol	op		1119819						
ANR	1119904	Symbol	check_sljit_emit_op0		1119819						
ANR	1119905	Symbol	BPT		1119819						
ANR	1119906	Symbol	PI		1119819						
ANR	1119907	Symbol	push_0_buffer		1119819						
ANR	1119908	Symbol	SLJIT_SUCCESS		1119819						
ANR	1119909	Symbol	compiler		1119819						
ANR	1119910	Symbol	__LINE__		1119819						
ANR	1119911	Symbol	GET_OPCODE		1119819						
ANR	1119912	Function	sljit_emit_op1	2193:0:66099:68829							
ANR	1119913	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1119912	0					
ANR	1119914	CompoundStatement		2194:0:66252:68829	1119912	0					
ANR	1119915	ExpressionStatement	CHECK_ERROR ( )	2195:1:66255:66268	1119912	0	True				
ANR	1119916	CallExpression	CHECK_ERROR ( )		1119912	0					
ANR	1119917	Callee	CHECK_ERROR		1119912	0					
ANR	1119918	Identifier	CHECK_ERROR		1119912	0					
ANR	1119919	ArgumentList			1119912	1					
ANR	1119920	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	2196:1:66271:66334	1119912	1	True				
ANR	1119921	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1119912	0					
ANR	1119922	Callee	CHECK		1119912	0					
ANR	1119923	Identifier	CHECK		1119912	0					
ANR	1119924	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1119912	1					
ANR	1119925	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1119912	0					
ANR	1119926	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1119912	0					
ANR	1119927	Callee	check_sljit_emit_op1		1119912	0					
ANR	1119928	Identifier	check_sljit_emit_op1		1119912	0					
ANR	1119929	ArgumentList	compiler		1119912	1					
ANR	1119930	Argument	compiler		1119912	0					
ANR	1119931	Identifier	compiler		1119912	0					
ANR	1119932	Argument	op		1119912	1					
ANR	1119933	Identifier	op		1119912	0					
ANR	1119934	Argument	dst		1119912	2					
ANR	1119935	Identifier	dst		1119912	0					
ANR	1119936	Argument	dstw		1119912	3					
ANR	1119937	Identifier	dstw		1119912	0					
ANR	1119938	Argument	src		1119912	4					
ANR	1119939	Identifier	src		1119912	0					
ANR	1119940	Argument	srcw		1119912	5					
ANR	1119941	Identifier	srcw		1119912	0					
ANR	1119942	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2197:1:66337:66367	1119912	2	True				
ANR	1119943	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1119912	0					
ANR	1119944	Callee	ADJUST_LOCAL_OFFSET		1119912	0					
ANR	1119945	Identifier	ADJUST_LOCAL_OFFSET		1119912	0					
ANR	1119946	ArgumentList	dst		1119912	1					
ANR	1119947	Argument	dst		1119912	0					
ANR	1119948	Identifier	dst		1119912	0					
ANR	1119949	Argument	dstw		1119912	1					
ANR	1119950	Identifier	dstw		1119912	0					
ANR	1119951	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2198:1:66370:66400	1119912	3	True				
ANR	1119952	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1119912	0					
ANR	1119953	Callee	ADJUST_LOCAL_OFFSET		1119912	0					
ANR	1119954	Identifier	ADJUST_LOCAL_OFFSET		1119912	0					
ANR	1119955	ArgumentList	src		1119912	1					
ANR	1119956	Argument	src		1119912	0					
ANR	1119957	Identifier	src		1119912	0					
ANR	1119958	Argument	srcw		1119912	1					
ANR	1119959	Identifier	srcw		1119912	0					
ANR	1119960	SwitchStatement	switch ( GET_OPCODE ( op ) )		1119912	4					
ANR	1119961	Condition	GET_OPCODE ( op )	2200:9:66412:66425	1119912	0	True				
ANR	1119962	CallExpression	GET_OPCODE ( op )		1119912	0					
ANR	1119963	Callee	GET_OPCODE		1119912	0					
ANR	1119964	Identifier	GET_OPCODE		1119912	0					
ANR	1119965	ArgumentList	op		1119912	1					
ANR	1119966	Argument	op		1119912	0					
ANR	1119967	Identifier	op		1119912	0					
ANR	1119968	CompoundStatement		7:25:175:175	1119912	1					
ANR	1119969	Label	case SLJIT_MOV :	2201:1:66431:66445	1119912	0	True				
ANR	1119970	Identifier	SLJIT_MOV		1119912	0					
ANR	1119971	Label	case SLJIT_MOV_P :	2202:1:66448:66464	1119912	1	True				
ANR	1119972	Identifier	SLJIT_MOV_P		1119912	0					
ANR	1119973	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2203:2:66468:66549	1119912	2	True				
ANR	1119974	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1119975	Callee	emit_op		1119912	0					
ANR	1119976	Identifier	emit_op		1119912	0					
ANR	1119977	ArgumentList	compiler		1119912	1					
ANR	1119978	Argument	compiler		1119912	0					
ANR	1119979	Identifier	compiler		1119912	0					
ANR	1119980	Argument	SLJIT_MOV		1119912	1					
ANR	1119981	Identifier	SLJIT_MOV		1119912	0					
ANR	1119982	Argument	WORD_DATA		1119912	2					
ANR	1119983	Identifier	WORD_DATA		1119912	0					
ANR	1119984	Argument	dst		1119912	3					
ANR	1119985	Identifier	dst		1119912	0					
ANR	1119986	Argument	dstw		1119912	4					
ANR	1119987	Identifier	dstw		1119912	0					
ANR	1119988	Argument	TMP_REG1		1119912	5					
ANR	1119989	Identifier	TMP_REG1		1119912	0					
ANR	1119990	Argument	0		1119912	6					
ANR	1119991	PrimaryExpression	0		1119912	0					
ANR	1119992	Argument	src		1119912	7					
ANR	1119993	Identifier	src		1119912	0					
ANR	1119994	Argument	srcw		1119912	8					
ANR	1119995	Identifier	srcw		1119912	0					
ANR	1119996	Label	case SLJIT_MOV_UI :	2205:1:66553:66570	1119912	3	True				
ANR	1119997	Identifier	SLJIT_MOV_UI		1119912	0					
ANR	1119998	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2206:2:66574:66657	1119912	4	True				
ANR	1119999	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1120000	Callee	emit_op		1119912	0					
ANR	1120001	Identifier	emit_op		1119912	0					
ANR	1120002	ArgumentList	compiler		1119912	1					
ANR	1120003	Argument	compiler		1119912	0					
ANR	1120004	Identifier	compiler		1119912	0					
ANR	1120005	Argument	SLJIT_MOV_UI		1119912	1					
ANR	1120006	Identifier	SLJIT_MOV_UI		1119912	0					
ANR	1120007	Argument	INT_DATA		1119912	2					
ANR	1120008	Identifier	INT_DATA		1119912	0					
ANR	1120009	Argument	dst		1119912	3					
ANR	1120010	Identifier	dst		1119912	0					
ANR	1120011	Argument	dstw		1119912	4					
ANR	1120012	Identifier	dstw		1119912	0					
ANR	1120013	Argument	TMP_REG1		1119912	5					
ANR	1120014	Identifier	TMP_REG1		1119912	0					
ANR	1120015	Argument	0		1119912	6					
ANR	1120016	PrimaryExpression	0		1119912	0					
ANR	1120017	Argument	src		1119912	7					
ANR	1120018	Identifier	src		1119912	0					
ANR	1120019	Argument	srcw		1119912	8					
ANR	1120020	Identifier	srcw		1119912	0					
ANR	1120021	Label	case SLJIT_MOV_SI :	2208:1:66661:66678	1119912	5	True				
ANR	1120022	Identifier	SLJIT_MOV_SI		1119912	0					
ANR	1120023	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2209:2:66682:66779	1119912	6	True				
ANR	1120024	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1120025	Callee	emit_op		1119912	0					
ANR	1120026	Identifier	emit_op		1119912	0					
ANR	1120027	ArgumentList	compiler		1119912	1					
ANR	1120028	Argument	compiler		1119912	0					
ANR	1120029	Identifier	compiler		1119912	0					
ANR	1120030	Argument	SLJIT_MOV_SI		1119912	1					
ANR	1120031	Identifier	SLJIT_MOV_SI		1119912	0					
ANR	1120032	Argument	INT_DATA | SIGNED_DATA		1119912	2					
ANR	1120033	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1119912	0		|			
ANR	1120034	Identifier	INT_DATA		1119912	0					
ANR	1120035	Identifier	SIGNED_DATA		1119912	1					
ANR	1120036	Argument	dst		1119912	3					
ANR	1120037	Identifier	dst		1119912	0					
ANR	1120038	Argument	dstw		1119912	4					
ANR	1120039	Identifier	dstw		1119912	0					
ANR	1120040	Argument	TMP_REG1		1119912	5					
ANR	1120041	Identifier	TMP_REG1		1119912	0					
ANR	1120042	Argument	0		1119912	6					
ANR	1120043	PrimaryExpression	0		1119912	0					
ANR	1120044	Argument	src		1119912	7					
ANR	1120045	Identifier	src		1119912	0					
ANR	1120046	Argument	srcw		1119912	8					
ANR	1120047	Identifier	srcw		1119912	0					
ANR	1120048	Label	case SLJIT_MOV_UB :	2211:1:66783:66800	1119912	7	True				
ANR	1120049	Identifier	SLJIT_MOV_UB		1119912	0					
ANR	1120050	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	2212:2:66804:66926	1119912	8	True				
ANR	1120051	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1119912	0					
ANR	1120052	Callee	emit_op		1119912	0					
ANR	1120053	Identifier	emit_op		1119912	0					
ANR	1120054	ArgumentList	compiler		1119912	1					
ANR	1120055	Argument	compiler		1119912	0					
ANR	1120056	Identifier	compiler		1119912	0					
ANR	1120057	Argument	SLJIT_MOV_UB		1119912	1					
ANR	1120058	Identifier	SLJIT_MOV_UB		1119912	0					
ANR	1120059	Argument	BYTE_DATA		1119912	2					
ANR	1120060	Identifier	BYTE_DATA		1119912	0					
ANR	1120061	Argument	dst		1119912	3					
ANR	1120062	Identifier	dst		1119912	0					
ANR	1120063	Argument	dstw		1119912	4					
ANR	1120064	Identifier	dstw		1119912	0					
ANR	1120065	Argument	TMP_REG1		1119912	5					
ANR	1120066	Identifier	TMP_REG1		1119912	0					
ANR	1120067	Argument	0		1119912	6					
ANR	1120068	PrimaryExpression	0		1119912	0					
ANR	1120069	Argument	src		1119912	7					
ANR	1120070	Identifier	src		1119912	0					
ANR	1120071	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1119912	8					
ANR	1120072	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1119912	0					
ANR	1120073	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120074	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120075	Identifier	src		1119912	0					
ANR	1120076	Identifier	SLJIT_IMM		1119912	1					
ANR	1120077	CastExpression	( sljit_ub ) srcw		1119912	1					
ANR	1120078	CastTarget	sljit_ub		1119912	0					
ANR	1120079	Identifier	srcw		1119912	1					
ANR	1120080	Identifier	srcw		1119912	2					
ANR	1120081	Label	case SLJIT_MOV_SB :	2214:1:66930:66947	1119912	9	True				
ANR	1120082	Identifier	SLJIT_MOV_SB		1119912	0					
ANR	1120083	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	2215:2:66951:67087	1119912	10	True				
ANR	1120084	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1119912	0					
ANR	1120085	Callee	emit_op		1119912	0					
ANR	1120086	Identifier	emit_op		1119912	0					
ANR	1120087	ArgumentList	compiler		1119912	1					
ANR	1120088	Argument	compiler		1119912	0					
ANR	1120089	Identifier	compiler		1119912	0					
ANR	1120090	Argument	SLJIT_MOV_SB		1119912	1					
ANR	1120091	Identifier	SLJIT_MOV_SB		1119912	0					
ANR	1120092	Argument	BYTE_DATA | SIGNED_DATA		1119912	2					
ANR	1120093	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA		1119912	0		|			
ANR	1120094	Identifier	BYTE_DATA		1119912	0					
ANR	1120095	Identifier	SIGNED_DATA		1119912	1					
ANR	1120096	Argument	dst		1119912	3					
ANR	1120097	Identifier	dst		1119912	0					
ANR	1120098	Argument	dstw		1119912	4					
ANR	1120099	Identifier	dstw		1119912	0					
ANR	1120100	Argument	TMP_REG1		1119912	5					
ANR	1120101	Identifier	TMP_REG1		1119912	0					
ANR	1120102	Argument	0		1119912	6					
ANR	1120103	PrimaryExpression	0		1119912	0					
ANR	1120104	Argument	src		1119912	7					
ANR	1120105	Identifier	src		1119912	0					
ANR	1120106	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1119912	8					
ANR	1120107	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1119912	0					
ANR	1120108	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120109	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120110	Identifier	src		1119912	0					
ANR	1120111	Identifier	SLJIT_IMM		1119912	1					
ANR	1120112	CastExpression	( sljit_sb ) srcw		1119912	1					
ANR	1120113	CastTarget	sljit_sb		1119912	0					
ANR	1120114	Identifier	srcw		1119912	1					
ANR	1120115	Identifier	srcw		1119912	2					
ANR	1120116	Label	case SLJIT_MOV_UH :	2217:1:67091:67108	1119912	11	True				
ANR	1120117	Identifier	SLJIT_MOV_UH		1119912	0					
ANR	1120118	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	2218:2:67112:67234	1119912	12	True				
ANR	1120119	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1119912	0					
ANR	1120120	Callee	emit_op		1119912	0					
ANR	1120121	Identifier	emit_op		1119912	0					
ANR	1120122	ArgumentList	compiler		1119912	1					
ANR	1120123	Argument	compiler		1119912	0					
ANR	1120124	Identifier	compiler		1119912	0					
ANR	1120125	Argument	SLJIT_MOV_UH		1119912	1					
ANR	1120126	Identifier	SLJIT_MOV_UH		1119912	0					
ANR	1120127	Argument	HALF_DATA		1119912	2					
ANR	1120128	Identifier	HALF_DATA		1119912	0					
ANR	1120129	Argument	dst		1119912	3					
ANR	1120130	Identifier	dst		1119912	0					
ANR	1120131	Argument	dstw		1119912	4					
ANR	1120132	Identifier	dstw		1119912	0					
ANR	1120133	Argument	TMP_REG1		1119912	5					
ANR	1120134	Identifier	TMP_REG1		1119912	0					
ANR	1120135	Argument	0		1119912	6					
ANR	1120136	PrimaryExpression	0		1119912	0					
ANR	1120137	Argument	src		1119912	7					
ANR	1120138	Identifier	src		1119912	0					
ANR	1120139	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1119912	8					
ANR	1120140	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1119912	0					
ANR	1120141	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120142	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120143	Identifier	src		1119912	0					
ANR	1120144	Identifier	SLJIT_IMM		1119912	1					
ANR	1120145	CastExpression	( sljit_uh ) srcw		1119912	1					
ANR	1120146	CastTarget	sljit_uh		1119912	0					
ANR	1120147	Identifier	srcw		1119912	1					
ANR	1120148	Identifier	srcw		1119912	2					
ANR	1120149	Label	case SLJIT_MOV_SH :	2220:1:67238:67255	1119912	13	True				
ANR	1120150	Identifier	SLJIT_MOV_SH		1119912	0					
ANR	1120151	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	2221:2:67259:67395	1119912	14	True				
ANR	1120152	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1119912	0					
ANR	1120153	Callee	emit_op		1119912	0					
ANR	1120154	Identifier	emit_op		1119912	0					
ANR	1120155	ArgumentList	compiler		1119912	1					
ANR	1120156	Argument	compiler		1119912	0					
ANR	1120157	Identifier	compiler		1119912	0					
ANR	1120158	Argument	SLJIT_MOV_SH		1119912	1					
ANR	1120159	Identifier	SLJIT_MOV_SH		1119912	0					
ANR	1120160	Argument	HALF_DATA | SIGNED_DATA		1119912	2					
ANR	1120161	InclusiveOrExpression	HALF_DATA | SIGNED_DATA		1119912	0		|			
ANR	1120162	Identifier	HALF_DATA		1119912	0					
ANR	1120163	Identifier	SIGNED_DATA		1119912	1					
ANR	1120164	Argument	dst		1119912	3					
ANR	1120165	Identifier	dst		1119912	0					
ANR	1120166	Argument	dstw		1119912	4					
ANR	1120167	Identifier	dstw		1119912	0					
ANR	1120168	Argument	TMP_REG1		1119912	5					
ANR	1120169	Identifier	TMP_REG1		1119912	0					
ANR	1120170	Argument	0		1119912	6					
ANR	1120171	PrimaryExpression	0		1119912	0					
ANR	1120172	Argument	src		1119912	7					
ANR	1120173	Identifier	src		1119912	0					
ANR	1120174	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1119912	8					
ANR	1120175	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1119912	0					
ANR	1120176	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120177	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120178	Identifier	src		1119912	0					
ANR	1120179	Identifier	SLJIT_IMM		1119912	1					
ANR	1120180	CastExpression	( sljit_sh ) srcw		1119912	1					
ANR	1120181	CastTarget	sljit_sh		1119912	0					
ANR	1120182	Identifier	srcw		1119912	1					
ANR	1120183	Identifier	srcw		1119912	2					
ANR	1120184	Label	case SLJIT_MOVU :	2223:1:67399:67414	1119912	15	True				
ANR	1120185	Identifier	SLJIT_MOVU		1119912	0					
ANR	1120186	Label	case SLJIT_MOVU_P :	2224:1:67417:67434	1119912	16	True				
ANR	1120187	Identifier	SLJIT_MOVU_P		1119912	0					
ANR	1120188	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2225:2:67438:67532	1119912	17	True				
ANR	1120189	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1120190	Callee	emit_op		1119912	0					
ANR	1120191	Identifier	emit_op		1119912	0					
ANR	1120192	ArgumentList	compiler		1119912	1					
ANR	1120193	Argument	compiler		1119912	0					
ANR	1120194	Identifier	compiler		1119912	0					
ANR	1120195	Argument	SLJIT_MOV		1119912	1					
ANR	1120196	Identifier	SLJIT_MOV		1119912	0					
ANR	1120197	Argument	WORD_DATA | WRITE_BACK		1119912	2					
ANR	1120198	InclusiveOrExpression	WORD_DATA | WRITE_BACK		1119912	0		|			
ANR	1120199	Identifier	WORD_DATA		1119912	0					
ANR	1120200	Identifier	WRITE_BACK		1119912	1					
ANR	1120201	Argument	dst		1119912	3					
ANR	1120202	Identifier	dst		1119912	0					
ANR	1120203	Argument	dstw		1119912	4					
ANR	1120204	Identifier	dstw		1119912	0					
ANR	1120205	Argument	TMP_REG1		1119912	5					
ANR	1120206	Identifier	TMP_REG1		1119912	0					
ANR	1120207	Argument	0		1119912	6					
ANR	1120208	PrimaryExpression	0		1119912	0					
ANR	1120209	Argument	src		1119912	7					
ANR	1120210	Identifier	src		1119912	0					
ANR	1120211	Argument	srcw		1119912	8					
ANR	1120212	Identifier	srcw		1119912	0					
ANR	1120213	Label	case SLJIT_MOVU_UI :	2227:1:67536:67554	1119912	18	True				
ANR	1120214	Identifier	SLJIT_MOVU_UI		1119912	0					
ANR	1120215	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2228:2:67558:67654	1119912	19	True				
ANR	1120216	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1120217	Callee	emit_op		1119912	0					
ANR	1120218	Identifier	emit_op		1119912	0					
ANR	1120219	ArgumentList	compiler		1119912	1					
ANR	1120220	Argument	compiler		1119912	0					
ANR	1120221	Identifier	compiler		1119912	0					
ANR	1120222	Argument	SLJIT_MOV_UI		1119912	1					
ANR	1120223	Identifier	SLJIT_MOV_UI		1119912	0					
ANR	1120224	Argument	INT_DATA | WRITE_BACK		1119912	2					
ANR	1120225	InclusiveOrExpression	INT_DATA | WRITE_BACK		1119912	0		|			
ANR	1120226	Identifier	INT_DATA		1119912	0					
ANR	1120227	Identifier	WRITE_BACK		1119912	1					
ANR	1120228	Argument	dst		1119912	3					
ANR	1120229	Identifier	dst		1119912	0					
ANR	1120230	Argument	dstw		1119912	4					
ANR	1120231	Identifier	dstw		1119912	0					
ANR	1120232	Argument	TMP_REG1		1119912	5					
ANR	1120233	Identifier	TMP_REG1		1119912	0					
ANR	1120234	Argument	0		1119912	6					
ANR	1120235	PrimaryExpression	0		1119912	0					
ANR	1120236	Argument	src		1119912	7					
ANR	1120237	Identifier	src		1119912	0					
ANR	1120238	Argument	srcw		1119912	8					
ANR	1120239	Identifier	srcw		1119912	0					
ANR	1120240	Label	case SLJIT_MOVU_SI :	2230:1:67658:67676	1119912	20	True				
ANR	1120241	Identifier	SLJIT_MOVU_SI		1119912	0					
ANR	1120242	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2231:2:67680:67790	1119912	21	True				
ANR	1120243	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1120244	Callee	emit_op		1119912	0					
ANR	1120245	Identifier	emit_op		1119912	0					
ANR	1120246	ArgumentList	compiler		1119912	1					
ANR	1120247	Argument	compiler		1119912	0					
ANR	1120248	Identifier	compiler		1119912	0					
ANR	1120249	Argument	SLJIT_MOV_SI		1119912	1					
ANR	1120250	Identifier	SLJIT_MOV_SI		1119912	0					
ANR	1120251	Argument	INT_DATA | SIGNED_DATA | WRITE_BACK		1119912	2					
ANR	1120252	InclusiveOrExpression	INT_DATA | SIGNED_DATA | WRITE_BACK		1119912	0		|			
ANR	1120253	Identifier	INT_DATA		1119912	0					
ANR	1120254	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1119912	1		|			
ANR	1120255	Identifier	SIGNED_DATA		1119912	0					
ANR	1120256	Identifier	WRITE_BACK		1119912	1					
ANR	1120257	Argument	dst		1119912	3					
ANR	1120258	Identifier	dst		1119912	0					
ANR	1120259	Argument	dstw		1119912	4					
ANR	1120260	Identifier	dstw		1119912	0					
ANR	1120261	Argument	TMP_REG1		1119912	5					
ANR	1120262	Identifier	TMP_REG1		1119912	0					
ANR	1120263	Argument	0		1119912	6					
ANR	1120264	PrimaryExpression	0		1119912	0					
ANR	1120265	Argument	src		1119912	7					
ANR	1120266	Identifier	src		1119912	0					
ANR	1120267	Argument	srcw		1119912	8					
ANR	1120268	Identifier	srcw		1119912	0					
ANR	1120269	Label	case SLJIT_MOVU_UB :	2233:1:67794:67812	1119912	22	True				
ANR	1120270	Identifier	SLJIT_MOVU_UB		1119912	0					
ANR	1120271	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	2234:2:67816:67951	1119912	23	True				
ANR	1120272	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1119912	0					
ANR	1120273	Callee	emit_op		1119912	0					
ANR	1120274	Identifier	emit_op		1119912	0					
ANR	1120275	ArgumentList	compiler		1119912	1					
ANR	1120276	Argument	compiler		1119912	0					
ANR	1120277	Identifier	compiler		1119912	0					
ANR	1120278	Argument	SLJIT_MOV_UB		1119912	1					
ANR	1120279	Identifier	SLJIT_MOV_UB		1119912	0					
ANR	1120280	Argument	BYTE_DATA | WRITE_BACK		1119912	2					
ANR	1120281	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1119912	0		|			
ANR	1120282	Identifier	BYTE_DATA		1119912	0					
ANR	1120283	Identifier	WRITE_BACK		1119912	1					
ANR	1120284	Argument	dst		1119912	3					
ANR	1120285	Identifier	dst		1119912	0					
ANR	1120286	Argument	dstw		1119912	4					
ANR	1120287	Identifier	dstw		1119912	0					
ANR	1120288	Argument	TMP_REG1		1119912	5					
ANR	1120289	Identifier	TMP_REG1		1119912	0					
ANR	1120290	Argument	0		1119912	6					
ANR	1120291	PrimaryExpression	0		1119912	0					
ANR	1120292	Argument	src		1119912	7					
ANR	1120293	Identifier	src		1119912	0					
ANR	1120294	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1119912	8					
ANR	1120295	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1119912	0					
ANR	1120296	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120297	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120298	Identifier	src		1119912	0					
ANR	1120299	Identifier	SLJIT_IMM		1119912	1					
ANR	1120300	CastExpression	( sljit_ub ) srcw		1119912	1					
ANR	1120301	CastTarget	sljit_ub		1119912	0					
ANR	1120302	Identifier	srcw		1119912	1					
ANR	1120303	Identifier	srcw		1119912	2					
ANR	1120304	Label	case SLJIT_MOVU_SB :	2236:1:67955:67973	1119912	24	True				
ANR	1120305	Identifier	SLJIT_MOVU_SB		1119912	0					
ANR	1120306	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	2237:2:67977:68126	1119912	25	True				
ANR	1120307	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1119912	0					
ANR	1120308	Callee	emit_op		1119912	0					
ANR	1120309	Identifier	emit_op		1119912	0					
ANR	1120310	ArgumentList	compiler		1119912	1					
ANR	1120311	Argument	compiler		1119912	0					
ANR	1120312	Identifier	compiler		1119912	0					
ANR	1120313	Argument	SLJIT_MOV_SB		1119912	1					
ANR	1120314	Identifier	SLJIT_MOV_SB		1119912	0					
ANR	1120315	Argument	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1119912	2					
ANR	1120316	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1119912	0		|			
ANR	1120317	Identifier	BYTE_DATA		1119912	0					
ANR	1120318	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1119912	1		|			
ANR	1120319	Identifier	SIGNED_DATA		1119912	0					
ANR	1120320	Identifier	WRITE_BACK		1119912	1					
ANR	1120321	Argument	dst		1119912	3					
ANR	1120322	Identifier	dst		1119912	0					
ANR	1120323	Argument	dstw		1119912	4					
ANR	1120324	Identifier	dstw		1119912	0					
ANR	1120325	Argument	TMP_REG1		1119912	5					
ANR	1120326	Identifier	TMP_REG1		1119912	0					
ANR	1120327	Argument	0		1119912	6					
ANR	1120328	PrimaryExpression	0		1119912	0					
ANR	1120329	Argument	src		1119912	7					
ANR	1120330	Identifier	src		1119912	0					
ANR	1120331	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1119912	8					
ANR	1120332	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1119912	0					
ANR	1120333	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120334	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120335	Identifier	src		1119912	0					
ANR	1120336	Identifier	SLJIT_IMM		1119912	1					
ANR	1120337	CastExpression	( sljit_sb ) srcw		1119912	1					
ANR	1120338	CastTarget	sljit_sb		1119912	0					
ANR	1120339	Identifier	srcw		1119912	1					
ANR	1120340	Identifier	srcw		1119912	2					
ANR	1120341	Label	case SLJIT_MOVU_UH :	2239:1:68130:68148	1119912	26	True				
ANR	1120342	Identifier	SLJIT_MOVU_UH		1119912	0					
ANR	1120343	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	2240:2:68152:68287	1119912	27	True				
ANR	1120344	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1119912	0					
ANR	1120345	Callee	emit_op		1119912	0					
ANR	1120346	Identifier	emit_op		1119912	0					
ANR	1120347	ArgumentList	compiler		1119912	1					
ANR	1120348	Argument	compiler		1119912	0					
ANR	1120349	Identifier	compiler		1119912	0					
ANR	1120350	Argument	SLJIT_MOV_UH		1119912	1					
ANR	1120351	Identifier	SLJIT_MOV_UH		1119912	0					
ANR	1120352	Argument	HALF_DATA | WRITE_BACK		1119912	2					
ANR	1120353	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1119912	0		|			
ANR	1120354	Identifier	HALF_DATA		1119912	0					
ANR	1120355	Identifier	WRITE_BACK		1119912	1					
ANR	1120356	Argument	dst		1119912	3					
ANR	1120357	Identifier	dst		1119912	0					
ANR	1120358	Argument	dstw		1119912	4					
ANR	1120359	Identifier	dstw		1119912	0					
ANR	1120360	Argument	TMP_REG1		1119912	5					
ANR	1120361	Identifier	TMP_REG1		1119912	0					
ANR	1120362	Argument	0		1119912	6					
ANR	1120363	PrimaryExpression	0		1119912	0					
ANR	1120364	Argument	src		1119912	7					
ANR	1120365	Identifier	src		1119912	0					
ANR	1120366	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1119912	8					
ANR	1120367	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1119912	0					
ANR	1120368	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120369	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120370	Identifier	src		1119912	0					
ANR	1120371	Identifier	SLJIT_IMM		1119912	1					
ANR	1120372	CastExpression	( sljit_uh ) srcw		1119912	1					
ANR	1120373	CastTarget	sljit_uh		1119912	0					
ANR	1120374	Identifier	srcw		1119912	1					
ANR	1120375	Identifier	srcw		1119912	2					
ANR	1120376	Label	case SLJIT_MOVU_SH :	2242:1:68291:68309	1119912	28	True				
ANR	1120377	Identifier	SLJIT_MOVU_SH		1119912	0					
ANR	1120378	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	2243:2:68313:68462	1119912	29	True				
ANR	1120379	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1119912	0					
ANR	1120380	Callee	emit_op		1119912	0					
ANR	1120381	Identifier	emit_op		1119912	0					
ANR	1120382	ArgumentList	compiler		1119912	1					
ANR	1120383	Argument	compiler		1119912	0					
ANR	1120384	Identifier	compiler		1119912	0					
ANR	1120385	Argument	SLJIT_MOV_SH		1119912	1					
ANR	1120386	Identifier	SLJIT_MOV_SH		1119912	0					
ANR	1120387	Argument	HALF_DATA | SIGNED_DATA | WRITE_BACK		1119912	2					
ANR	1120388	InclusiveOrExpression	HALF_DATA | SIGNED_DATA | WRITE_BACK		1119912	0		|			
ANR	1120389	Identifier	HALF_DATA		1119912	0					
ANR	1120390	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1119912	1		|			
ANR	1120391	Identifier	SIGNED_DATA		1119912	0					
ANR	1120392	Identifier	WRITE_BACK		1119912	1					
ANR	1120393	Argument	dst		1119912	3					
ANR	1120394	Identifier	dst		1119912	0					
ANR	1120395	Argument	dstw		1119912	4					
ANR	1120396	Identifier	dstw		1119912	0					
ANR	1120397	Argument	TMP_REG1		1119912	5					
ANR	1120398	Identifier	TMP_REG1		1119912	0					
ANR	1120399	Argument	0		1119912	6					
ANR	1120400	PrimaryExpression	0		1119912	0					
ANR	1120401	Argument	src		1119912	7					
ANR	1120402	Identifier	src		1119912	0					
ANR	1120403	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1119912	8					
ANR	1120404	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1119912	0					
ANR	1120405	Condition	src & SLJIT_IMM		1119912	0					
ANR	1120406	BitAndExpression	src & SLJIT_IMM		1119912	0		&			
ANR	1120407	Identifier	src		1119912	0					
ANR	1120408	Identifier	SLJIT_IMM		1119912	1					
ANR	1120409	CastExpression	( sljit_sh ) srcw		1119912	1					
ANR	1120410	CastTarget	sljit_sh		1119912	0					
ANR	1120411	Identifier	srcw		1119912	1					
ANR	1120412	Identifier	srcw		1119912	2					
ANR	1120413	Label	case SLJIT_NOT :	2245:1:68466:68480	1119912	30	True				
ANR	1120414	Identifier	SLJIT_NOT		1119912	0					
ANR	1120415	ReturnStatement	"return emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2246:2:68484:68550	1119912	31	True				
ANR	1120416	CallExpression	"emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1120417	Callee	emit_op		1119912	0					
ANR	1120418	Identifier	emit_op		1119912	0					
ANR	1120419	ArgumentList	compiler		1119912	1					
ANR	1120420	Argument	compiler		1119912	0					
ANR	1120421	Identifier	compiler		1119912	0					
ANR	1120422	Argument	op		1119912	1					
ANR	1120423	Identifier	op		1119912	0					
ANR	1120424	Argument	0		1119912	2					
ANR	1120425	PrimaryExpression	0		1119912	0					
ANR	1120426	Argument	dst		1119912	3					
ANR	1120427	Identifier	dst		1119912	0					
ANR	1120428	Argument	dstw		1119912	4					
ANR	1120429	Identifier	dstw		1119912	0					
ANR	1120430	Argument	TMP_REG1		1119912	5					
ANR	1120431	Identifier	TMP_REG1		1119912	0					
ANR	1120432	Argument	0		1119912	6					
ANR	1120433	PrimaryExpression	0		1119912	0					
ANR	1120434	Argument	src		1119912	7					
ANR	1120435	Identifier	src		1119912	0					
ANR	1120436	Argument	srcw		1119912	8					
ANR	1120437	Identifier	srcw		1119912	0					
ANR	1120438	Label	case SLJIT_NEG :	2248:1:68554:68568	1119912	32	True				
ANR	1120439	Identifier	SLJIT_NEG		1119912	0					
ANR	1120440	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw ) ;"	2249:2:68572:68671	1119912	33	True				
ANR	1120441	CallExpression	"emit_op ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw )"		1119912	0					
ANR	1120442	Callee	emit_op		1119912	0					
ANR	1120443	Identifier	emit_op		1119912	0					
ANR	1120444	ArgumentList	compiler		1119912	1					
ANR	1120445	Argument	compiler		1119912	0					
ANR	1120446	Identifier	compiler		1119912	0					
ANR	1120447	Argument	SLJIT_SUB | GET_ALL_FLAGS ( op )		1119912	1					
ANR	1120448	InclusiveOrExpression	SLJIT_SUB | GET_ALL_FLAGS ( op )		1119912	0		|			
ANR	1120449	Identifier	SLJIT_SUB		1119912	0					
ANR	1120450	CallExpression	GET_ALL_FLAGS ( op )		1119912	1					
ANR	1120451	Callee	GET_ALL_FLAGS		1119912	0					
ANR	1120452	Identifier	GET_ALL_FLAGS		1119912	0					
ANR	1120453	ArgumentList	op		1119912	1					
ANR	1120454	Argument	op		1119912	0					
ANR	1120455	Identifier	op		1119912	0					
ANR	1120456	Argument	IMM_OP		1119912	2					
ANR	1120457	Identifier	IMM_OP		1119912	0					
ANR	1120458	Argument	dst		1119912	3					
ANR	1120459	Identifier	dst		1119912	0					
ANR	1120460	Argument	dstw		1119912	4					
ANR	1120461	Identifier	dstw		1119912	0					
ANR	1120462	Argument	SLJIT_IMM		1119912	5					
ANR	1120463	Identifier	SLJIT_IMM		1119912	0					
ANR	1120464	Argument	0		1119912	6					
ANR	1120465	PrimaryExpression	0		1119912	0					
ANR	1120466	Argument	src		1119912	7					
ANR	1120467	Identifier	src		1119912	0					
ANR	1120468	Argument	srcw		1119912	8					
ANR	1120469	Identifier	srcw		1119912	0					
ANR	1120470	Label	case SLJIT_CLZ :	2251:1:68675:68689	1119912	34	True				
ANR	1120471	Identifier	SLJIT_CLZ		1119912	0					
ANR	1120472	ReturnStatement	"return emit_op ( compiler , op , ( op & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2252:2:68693:68800	1119912	35	True				
ANR	1120473	CallExpression	"emit_op ( compiler , op , ( op & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1119912	0					
ANR	1120474	Callee	emit_op		1119912	0					
ANR	1120475	Identifier	emit_op		1119912	0					
ANR	1120476	ArgumentList	compiler		1119912	1					
ANR	1120477	Argument	compiler		1119912	0					
ANR	1120478	Identifier	compiler		1119912	0					
ANR	1120479	Argument	op		1119912	1					
ANR	1120480	Identifier	op		1119912	0					
ANR	1120481	Argument	( op & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA		1119912	2					
ANR	1120482	ConditionalExpression	( op & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA		1119912	0					
ANR	1120483	Condition	op & SLJIT_INT_OP		1119912	0					
ANR	1120484	BitAndExpression	op & SLJIT_INT_OP		1119912	0		&			
ANR	1120485	Identifier	op		1119912	0					
ANR	1120486	Identifier	SLJIT_INT_OP		1119912	1					
ANR	1120487	Identifier	INT_DATA		1119912	1					
ANR	1120488	Identifier	WORD_DATA		1119912	2					
ANR	1120489	Argument	dst		1119912	3					
ANR	1120490	Identifier	dst		1119912	0					
ANR	1120491	Argument	dstw		1119912	4					
ANR	1120492	Identifier	dstw		1119912	0					
ANR	1120493	Argument	TMP_REG1		1119912	5					
ANR	1120494	Identifier	TMP_REG1		1119912	0					
ANR	1120495	Argument	0		1119912	6					
ANR	1120496	PrimaryExpression	0		1119912	0					
ANR	1120497	Argument	src		1119912	7					
ANR	1120498	Identifier	src		1119912	0					
ANR	1120499	Argument	srcw		1119912	8					
ANR	1120500	Identifier	srcw		1119912	0					
ANR	1120501	ReturnStatement	return SLJIT_SUCCESS ;	2255:1:68807:68827	1119912	5	True				
ANR	1120502	Identifier	SLJIT_SUCCESS		1119912	0					
ANR	1120503	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1119912	1					
ANR	1120504	Identifier	sljit_emit_op1		1119912	2					
ANR	1120505	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1119912	3					
ANR	1120506	Parameter	struct sljit_compiler * compiler	2193:49:66148:66178	1119912	0	True				
ANR	1120507	ParameterType	struct sljit_compiler *		1119912	0					
ANR	1120508	Identifier	compiler		1119912	1					
ANR	1120509	Parameter	sljit_si op	2193:82:66181:66191	1119912	1	True				
ANR	1120510	ParameterType	sljit_si		1119912	0					
ANR	1120511	Identifier	op		1119912	1					
ANR	1120512	Parameter	sljit_si dst	2193:95:66194:66205	1119912	2	True				
ANR	1120513	ParameterType	sljit_si		1119912	0					
ANR	1120514	Identifier	dst		1119912	1					
ANR	1120515	Parameter	sljit_sw dstw	2193:109:66208:66220	1119912	3	True				
ANR	1120516	ParameterType	sljit_sw		1119912	0					
ANR	1120517	Identifier	dstw		1119912	1					
ANR	1120518	Parameter	sljit_si src	2193:124:66223:66234	1119912	4	True				
ANR	1120519	ParameterType	sljit_si		1119912	0					
ANR	1120520	Identifier	src		1119912	1					
ANR	1120521	Parameter	sljit_sw srcw	2193:138:66237:66249	1119912	5	True				
ANR	1120522	ParameterType	sljit_sw		1119912	0					
ANR	1120523	Identifier	srcw		1119912	1					
ANR	1120524	CFGEntryNode	ENTRY		1119912		True				
ANR	1120525	CFGExitNode	EXIT		1119912		True				
ANR	1120526	Symbol	TMP_REG1		1119912						
ANR	1120527	Symbol	dst		1119912						
ANR	1120528	Symbol	IMM_OP		1119912						
ANR	1120529	Symbol	SLJIT_MOV		1119912						
ANR	1120530	Symbol	GET_OPCODE		1119912						
ANR	1120531	Symbol	BYTE_DATA		1119912						
ANR	1120532	Symbol	SLJIT_MOV_SI		1119912						
ANR	1120533	Symbol	GET_ALL_FLAGS		1119912						
ANR	1120534	Symbol	SLJIT_IMM		1119912						
ANR	1120535	Symbol	SLJIT_MOV_UH		1119912						
ANR	1120536	Symbol	SLJIT_MOV_SH		1119912						
ANR	1120537	Symbol	INT_DATA		1119912						
ANR	1120538	Symbol	SLJIT_MOV_UI		1119912						
ANR	1120539	Symbol	compiler		1119912						
ANR	1120540	Symbol	WRITE_BACK		1119912						
ANR	1120541	Symbol	emit_op		1119912						
ANR	1120542	Symbol	WORD_DATA		1119912						
ANR	1120543	Symbol	op		1119912						
ANR	1120544	Symbol	src		1119912						
ANR	1120545	Symbol	check_sljit_emit_op1		1119912						
ANR	1120546	Symbol	HALF_DATA		1119912						
ANR	1120547	Symbol	srcw		1119912						
ANR	1120548	Symbol	SLJIT_INT_OP		1119912						
ANR	1120549	Symbol	SLJIT_MOV_SB		1119912						
ANR	1120550	Symbol	SLJIT_SUB		1119912						
ANR	1120551	Symbol	SLJIT_SUCCESS		1119912						
ANR	1120552	Symbol	SLJIT_MOV_UB		1119912						
ANR	1120553	Symbol	SIGNED_DATA		1119912						
ANR	1120554	Symbol	dstw		1119912						
ANR	1120555	Function	sljit_emit_op2	2258:0:68832:69992							
ANR	1120556	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1120555	0					
ANR	1120557	CompoundStatement		2259:0:69018:69992	1120555	0					
ANR	1120558	ExpressionStatement	CHECK_ERROR ( )	2260:1:69021:69034	1120555	0	True				
ANR	1120559	CallExpression	CHECK_ERROR ( )		1120555	0					
ANR	1120560	Callee	CHECK_ERROR		1120555	0					
ANR	1120561	Identifier	CHECK_ERROR		1120555	0					
ANR	1120562	ArgumentList			1120555	1					
ANR	1120563	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	2261:1:69037:69115	1120555	1	True				
ANR	1120564	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1120555	0					
ANR	1120565	Callee	CHECK		1120555	0					
ANR	1120566	Identifier	CHECK		1120555	0					
ANR	1120567	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	1					
ANR	1120568	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	0					
ANR	1120569	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	0					
ANR	1120570	Callee	check_sljit_emit_op2		1120555	0					
ANR	1120571	Identifier	check_sljit_emit_op2		1120555	0					
ANR	1120572	ArgumentList	compiler		1120555	1					
ANR	1120573	Argument	compiler		1120555	0					
ANR	1120574	Identifier	compiler		1120555	0					
ANR	1120575	Argument	op		1120555	1					
ANR	1120576	Identifier	op		1120555	0					
ANR	1120577	Argument	dst		1120555	2					
ANR	1120578	Identifier	dst		1120555	0					
ANR	1120579	Argument	dstw		1120555	3					
ANR	1120580	Identifier	dstw		1120555	0					
ANR	1120581	Argument	src1		1120555	4					
ANR	1120582	Identifier	src1		1120555	0					
ANR	1120583	Argument	src1w		1120555	5					
ANR	1120584	Identifier	src1w		1120555	0					
ANR	1120585	Argument	src2		1120555	6					
ANR	1120586	Identifier	src2		1120555	0					
ANR	1120587	Argument	src2w		1120555	7					
ANR	1120588	Identifier	src2w		1120555	0					
ANR	1120589	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2262:1:69118:69148	1120555	2	True				
ANR	1120590	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1120555	0					
ANR	1120591	Callee	ADJUST_LOCAL_OFFSET		1120555	0					
ANR	1120592	Identifier	ADJUST_LOCAL_OFFSET		1120555	0					
ANR	1120593	ArgumentList	dst		1120555	1					
ANR	1120594	Argument	dst		1120555	0					
ANR	1120595	Identifier	dst		1120555	0					
ANR	1120596	Argument	dstw		1120555	1					
ANR	1120597	Identifier	dstw		1120555	0					
ANR	1120598	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	2263:1:69151:69183	1120555	3	True				
ANR	1120599	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1120555	0					
ANR	1120600	Callee	ADJUST_LOCAL_OFFSET		1120555	0					
ANR	1120601	Identifier	ADJUST_LOCAL_OFFSET		1120555	0					
ANR	1120602	ArgumentList	src1		1120555	1					
ANR	1120603	Argument	src1		1120555	0					
ANR	1120604	Identifier	src1		1120555	0					
ANR	1120605	Argument	src1w		1120555	1					
ANR	1120606	Identifier	src1w		1120555	0					
ANR	1120607	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	2264:1:69186:69218	1120555	4	True				
ANR	1120608	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1120555	0					
ANR	1120609	Callee	ADJUST_LOCAL_OFFSET		1120555	0					
ANR	1120610	Identifier	ADJUST_LOCAL_OFFSET		1120555	0					
ANR	1120611	ArgumentList	src2		1120555	1					
ANR	1120612	Argument	src2		1120555	0					
ANR	1120613	Identifier	src2		1120555	0					
ANR	1120614	Argument	src2w		1120555	1					
ANR	1120615	Identifier	src2w		1120555	0					
ANR	1120616	SwitchStatement	switch ( GET_OPCODE ( op ) )		1120555	5					
ANR	1120617	Condition	GET_OPCODE ( op )	2266:9:69230:69243	1120555	0	True				
ANR	1120618	CallExpression	GET_OPCODE ( op )		1120555	0					
ANR	1120619	Callee	GET_OPCODE		1120555	0					
ANR	1120620	Identifier	GET_OPCODE		1120555	0					
ANR	1120621	ArgumentList	op		1120555	1					
ANR	1120622	Argument	op		1120555	0					
ANR	1120623	Identifier	op		1120555	0					
ANR	1120624	CompoundStatement		8:25:227:227	1120555	1					
ANR	1120625	Label	case SLJIT_ADD :	2267:1:69249:69263	1120555	0	True				
ANR	1120626	Identifier	SLJIT_ADD		1120555	0					
ANR	1120627	Label	case SLJIT_ADDC :	2268:1:69266:69281	1120555	1	True				
ANR	1120628	Identifier	SLJIT_ADDC		1120555	0					
ANR	1120629	ReturnStatement	"return emit_op ( compiler , op , CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2269:2:69285:69374	1120555	2	True				
ANR	1120630	CallExpression	"emit_op ( compiler , op , CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	0					
ANR	1120631	Callee	emit_op		1120555	0					
ANR	1120632	Identifier	emit_op		1120555	0					
ANR	1120633	ArgumentList	compiler		1120555	1					
ANR	1120634	Argument	compiler		1120555	0					
ANR	1120635	Identifier	compiler		1120555	0					
ANR	1120636	Argument	op		1120555	1					
ANR	1120637	Identifier	op		1120555	0					
ANR	1120638	Argument	CUMULATIVE_OP | IMM_OP		1120555	2					
ANR	1120639	InclusiveOrExpression	CUMULATIVE_OP | IMM_OP		1120555	0		|			
ANR	1120640	Identifier	CUMULATIVE_OP		1120555	0					
ANR	1120641	Identifier	IMM_OP		1120555	1					
ANR	1120642	Argument	dst		1120555	3					
ANR	1120643	Identifier	dst		1120555	0					
ANR	1120644	Argument	dstw		1120555	4					
ANR	1120645	Identifier	dstw		1120555	0					
ANR	1120646	Argument	src1		1120555	5					
ANR	1120647	Identifier	src1		1120555	0					
ANR	1120648	Argument	src1w		1120555	6					
ANR	1120649	Identifier	src1w		1120555	0					
ANR	1120650	Argument	src2		1120555	7					
ANR	1120651	Identifier	src2		1120555	0					
ANR	1120652	Argument	src2w		1120555	8					
ANR	1120653	Identifier	src2w		1120555	0					
ANR	1120654	Label	case SLJIT_SUB :	2271:1:69378:69392	1120555	3	True				
ANR	1120655	Identifier	SLJIT_SUB		1120555	0					
ANR	1120656	Label	case SLJIT_SUBC :	2272:1:69395:69410	1120555	4	True				
ANR	1120657	Identifier	SLJIT_SUBC		1120555	0					
ANR	1120658	ReturnStatement	"return emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2273:2:69414:69487	1120555	5	True				
ANR	1120659	CallExpression	"emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	0					
ANR	1120660	Callee	emit_op		1120555	0					
ANR	1120661	Identifier	emit_op		1120555	0					
ANR	1120662	ArgumentList	compiler		1120555	1					
ANR	1120663	Argument	compiler		1120555	0					
ANR	1120664	Identifier	compiler		1120555	0					
ANR	1120665	Argument	op		1120555	1					
ANR	1120666	Identifier	op		1120555	0					
ANR	1120667	Argument	IMM_OP		1120555	2					
ANR	1120668	Identifier	IMM_OP		1120555	0					
ANR	1120669	Argument	dst		1120555	3					
ANR	1120670	Identifier	dst		1120555	0					
ANR	1120671	Argument	dstw		1120555	4					
ANR	1120672	Identifier	dstw		1120555	0					
ANR	1120673	Argument	src1		1120555	5					
ANR	1120674	Identifier	src1		1120555	0					
ANR	1120675	Argument	src1w		1120555	6					
ANR	1120676	Identifier	src1w		1120555	0					
ANR	1120677	Argument	src2		1120555	7					
ANR	1120678	Identifier	src2		1120555	0					
ANR	1120679	Argument	src2w		1120555	8					
ANR	1120680	Identifier	src2w		1120555	0					
ANR	1120681	Label	case SLJIT_MUL :	2275:1:69491:69505	1120555	6	True				
ANR	1120682	Identifier	SLJIT_MUL		1120555	0					
ANR	1120683	ReturnStatement	"return emit_op ( compiler , op , CUMULATIVE_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2276:2:69509:69589	1120555	7	True				
ANR	1120684	CallExpression	"emit_op ( compiler , op , CUMULATIVE_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	0					
ANR	1120685	Callee	emit_op		1120555	0					
ANR	1120686	Identifier	emit_op		1120555	0					
ANR	1120687	ArgumentList	compiler		1120555	1					
ANR	1120688	Argument	compiler		1120555	0					
ANR	1120689	Identifier	compiler		1120555	0					
ANR	1120690	Argument	op		1120555	1					
ANR	1120691	Identifier	op		1120555	0					
ANR	1120692	Argument	CUMULATIVE_OP		1120555	2					
ANR	1120693	Identifier	CUMULATIVE_OP		1120555	0					
ANR	1120694	Argument	dst		1120555	3					
ANR	1120695	Identifier	dst		1120555	0					
ANR	1120696	Argument	dstw		1120555	4					
ANR	1120697	Identifier	dstw		1120555	0					
ANR	1120698	Argument	src1		1120555	5					
ANR	1120699	Identifier	src1		1120555	0					
ANR	1120700	Argument	src1w		1120555	6					
ANR	1120701	Identifier	src1w		1120555	0					
ANR	1120702	Argument	src2		1120555	7					
ANR	1120703	Identifier	src2		1120555	0					
ANR	1120704	Argument	src2w		1120555	8					
ANR	1120705	Identifier	src2w		1120555	0					
ANR	1120706	Label	case SLJIT_AND :	2278:1:69593:69607	1120555	8	True				
ANR	1120707	Identifier	SLJIT_AND		1120555	0					
ANR	1120708	Label	case SLJIT_OR :	2279:1:69610:69623	1120555	9	True				
ANR	1120709	Identifier	SLJIT_OR		1120555	0					
ANR	1120710	Label	case SLJIT_XOR :	2280:1:69626:69640	1120555	10	True				
ANR	1120711	Identifier	SLJIT_XOR		1120555	0					
ANR	1120712	ReturnStatement	"return emit_op ( compiler , op , CUMULATIVE_OP | LOGICAL_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2281:2:69644:69746	1120555	11	True				
ANR	1120713	CallExpression	"emit_op ( compiler , op , CUMULATIVE_OP | LOGICAL_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	0					
ANR	1120714	Callee	emit_op		1120555	0					
ANR	1120715	Identifier	emit_op		1120555	0					
ANR	1120716	ArgumentList	compiler		1120555	1					
ANR	1120717	Argument	compiler		1120555	0					
ANR	1120718	Identifier	compiler		1120555	0					
ANR	1120719	Argument	op		1120555	1					
ANR	1120720	Identifier	op		1120555	0					
ANR	1120721	Argument	CUMULATIVE_OP | LOGICAL_OP | IMM_OP		1120555	2					
ANR	1120722	InclusiveOrExpression	CUMULATIVE_OP | LOGICAL_OP | IMM_OP		1120555	0		|			
ANR	1120723	Identifier	CUMULATIVE_OP		1120555	0					
ANR	1120724	InclusiveOrExpression	LOGICAL_OP | IMM_OP		1120555	1		|			
ANR	1120725	Identifier	LOGICAL_OP		1120555	0					
ANR	1120726	Identifier	IMM_OP		1120555	1					
ANR	1120727	Argument	dst		1120555	3					
ANR	1120728	Identifier	dst		1120555	0					
ANR	1120729	Argument	dstw		1120555	4					
ANR	1120730	Identifier	dstw		1120555	0					
ANR	1120731	Argument	src1		1120555	5					
ANR	1120732	Identifier	src1		1120555	0					
ANR	1120733	Argument	src1w		1120555	6					
ANR	1120734	Identifier	src1w		1120555	0					
ANR	1120735	Argument	src2		1120555	7					
ANR	1120736	Identifier	src2		1120555	0					
ANR	1120737	Argument	src2w		1120555	8					
ANR	1120738	Identifier	src2w		1120555	0					
ANR	1120739	Label	case SLJIT_SHL :	2283:1:69750:69764	1120555	12	True				
ANR	1120740	Identifier	SLJIT_SHL		1120555	0					
ANR	1120741	Label	case SLJIT_LSHR :	2284:1:69767:69782	1120555	13	True				
ANR	1120742	Identifier	SLJIT_LSHR		1120555	0					
ANR	1120743	Label	case SLJIT_ASHR :	2285:1:69785:69800	1120555	14	True				
ANR	1120744	Identifier	SLJIT_ASHR		1120555	0					
ANR	1120745	IfStatement	if ( src2 & SLJIT_IMM )		1120555	15					
ANR	1120746	Condition	src2 & SLJIT_IMM	2286:6:69808:69823	1120555	0	True				
ANR	1120747	BitAndExpression	src2 & SLJIT_IMM		1120555	0		&			
ANR	1120748	Identifier	src2		1120555	0					
ANR	1120749	Identifier	SLJIT_IMM		1120555	1					
ANR	1120750	ExpressionStatement	src2w &= 0x3f	2287:3:69829:69842	1120555	1	True				
ANR	1120751	AssignmentExpression	src2w &= 0x3f		1120555	0		&=			
ANR	1120752	Identifier	src2w		1120555	0					
ANR	1120753	PrimaryExpression	0x3f		1120555	1					
ANR	1120754	IfStatement	if ( op & SLJIT_INT_OP )		1120555	16					
ANR	1120755	Condition	op & SLJIT_INT_OP	2288:6:69850:69866	1120555	0	True				
ANR	1120756	BitAndExpression	op & SLJIT_INT_OP		1120555	0		&			
ANR	1120757	Identifier	op		1120555	0					
ANR	1120758	Identifier	SLJIT_INT_OP		1120555	1					
ANR	1120759	ExpressionStatement	src2w &= 0x1f	2289:3:69872:69885	1120555	1	True				
ANR	1120760	AssignmentExpression	src2w &= 0x1f		1120555	0		&=			
ANR	1120761	Identifier	src2w		1120555	0					
ANR	1120762	PrimaryExpression	0x1f		1120555	1					
ANR	1120763	ReturnStatement	"return emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2291:2:69890:69963	1120555	17	True				
ANR	1120764	CallExpression	"emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1120555	0					
ANR	1120765	Callee	emit_op		1120555	0					
ANR	1120766	Identifier	emit_op		1120555	0					
ANR	1120767	ArgumentList	compiler		1120555	1					
ANR	1120768	Argument	compiler		1120555	0					
ANR	1120769	Identifier	compiler		1120555	0					
ANR	1120770	Argument	op		1120555	1					
ANR	1120771	Identifier	op		1120555	0					
ANR	1120772	Argument	IMM_OP		1120555	2					
ANR	1120773	Identifier	IMM_OP		1120555	0					
ANR	1120774	Argument	dst		1120555	3					
ANR	1120775	Identifier	dst		1120555	0					
ANR	1120776	Argument	dstw		1120555	4					
ANR	1120777	Identifier	dstw		1120555	0					
ANR	1120778	Argument	src1		1120555	5					
ANR	1120779	Identifier	src1		1120555	0					
ANR	1120780	Argument	src1w		1120555	6					
ANR	1120781	Identifier	src1w		1120555	0					
ANR	1120782	Argument	src2		1120555	7					
ANR	1120783	Identifier	src2		1120555	0					
ANR	1120784	Argument	src2w		1120555	8					
ANR	1120785	Identifier	src2w		1120555	0					
ANR	1120786	ReturnStatement	return SLJIT_SUCCESS ;	2294:1:69970:69990	1120555	6	True				
ANR	1120787	Identifier	SLJIT_SUCCESS		1120555	0					
ANR	1120788	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1120555	1					
ANR	1120789	Identifier	sljit_emit_op2		1120555	2					
ANR	1120790	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1120555	3					
ANR	1120791	Parameter	struct sljit_compiler * compiler	2258:49:68881:68911	1120555	0	True				
ANR	1120792	ParameterType	struct sljit_compiler *		1120555	0					
ANR	1120793	Identifier	compiler		1120555	1					
ANR	1120794	Parameter	sljit_si op	2258:82:68914:68924	1120555	1	True				
ANR	1120795	ParameterType	sljit_si		1120555	0					
ANR	1120796	Identifier	op		1120555	1					
ANR	1120797	Parameter	sljit_si dst	2258:95:68927:68938	1120555	2	True				
ANR	1120798	ParameterType	sljit_si		1120555	0					
ANR	1120799	Identifier	dst		1120555	1					
ANR	1120800	Parameter	sljit_sw dstw	2258:109:68941:68953	1120555	3	True				
ANR	1120801	ParameterType	sljit_sw		1120555	0					
ANR	1120802	Identifier	dstw		1120555	1					
ANR	1120803	Parameter	sljit_si src1	2258:124:68956:68968	1120555	4	True				
ANR	1120804	ParameterType	sljit_si		1120555	0					
ANR	1120805	Identifier	src1		1120555	1					
ANR	1120806	Parameter	sljit_sw src1w	2258:139:68971:68984	1120555	5	True				
ANR	1120807	ParameterType	sljit_sw		1120555	0					
ANR	1120808	Identifier	src1w		1120555	1					
ANR	1120809	Parameter	sljit_si src2	2258:155:68987:68999	1120555	6	True				
ANR	1120810	ParameterType	sljit_si		1120555	0					
ANR	1120811	Identifier	src2		1120555	1					
ANR	1120812	Parameter	sljit_sw src2w	2258:170:69002:69015	1120555	7	True				
ANR	1120813	ParameterType	sljit_sw		1120555	0					
ANR	1120814	Identifier	src2w		1120555	1					
ANR	1120815	CFGEntryNode	ENTRY		1120555		True				
ANR	1120816	CFGExitNode	EXIT		1120555		True				
ANR	1120817	Symbol	src2w		1120555						
ANR	1120818	Symbol	op		1120555						
ANR	1120819	Symbol	src1w		1120555						
ANR	1120820	Symbol	dst		1120555						
ANR	1120821	Symbol	check_sljit_emit_op2		1120555						
ANR	1120822	Symbol	IMM_OP		1120555						
ANR	1120823	Symbol	LOGICAL_OP		1120555						
ANR	1120824	Symbol	CUMULATIVE_OP		1120555						
ANR	1120825	Symbol	SLJIT_INT_OP		1120555						
ANR	1120826	Symbol	SLJIT_SUCCESS		1120555						
ANR	1120827	Symbol	GET_OPCODE		1120555						
ANR	1120828	Symbol	SLJIT_IMM		1120555						
ANR	1120829	Symbol	src1		1120555						
ANR	1120830	Symbol	src2		1120555						
ANR	1120831	Symbol	compiler		1120555						
ANR	1120832	Symbol	dstw		1120555						
ANR	1120833	Symbol	emit_op		1120555						
ANR	1120834	Function	sljit_emit_label	2297:25:70020:70470							
ANR	1120835	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1120834	0					
ANR	1120836	CompoundStatement		2298:0:70091:70470	1120834	0					
ANR	1120837	IdentifierDeclStatement	struct sljit_label * label ;	2299:1:70094:70119	1120834	0	True				
ANR	1120838	IdentifierDecl	* label		1120834	0					
ANR	1120839	IdentifierDeclType	struct sljit_label *		1120834	0					
ANR	1120840	Identifier	label		1120834	1					
ANR	1120841	ExpressionStatement	flush_buffer ( compiler )	2301:1:70123:70145	1120834	1	True				
ANR	1120842	CallExpression	flush_buffer ( compiler )		1120834	0					
ANR	1120843	Callee	flush_buffer		1120834	0					
ANR	1120844	Identifier	flush_buffer		1120834	0					
ANR	1120845	ArgumentList	compiler		1120834	1					
ANR	1120846	Argument	compiler		1120834	0					
ANR	1120847	Identifier	compiler		1120834	0					
ANR	1120848	ExpressionStatement	CHECK_ERROR_PTR ( )	2303:1:70149:70166	1120834	2	True				
ANR	1120849	CallExpression	CHECK_ERROR_PTR ( )		1120834	0					
ANR	1120850	Callee	CHECK_ERROR_PTR		1120834	0					
ANR	1120851	Identifier	CHECK_ERROR_PTR		1120834	0					
ANR	1120852	ArgumentList			1120834	1					
ANR	1120853	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	2304:1:70169:70212	1120834	3	True				
ANR	1120854	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1120834	0					
ANR	1120855	Callee	CHECK_PTR		1120834	0					
ANR	1120856	Identifier	CHECK_PTR		1120834	0					
ANR	1120857	ArgumentList	check_sljit_emit_label ( compiler )		1120834	1					
ANR	1120858	Argument	check_sljit_emit_label ( compiler )		1120834	0					
ANR	1120859	CallExpression	check_sljit_emit_label ( compiler )		1120834	0					
ANR	1120860	Callee	check_sljit_emit_label		1120834	0					
ANR	1120861	Identifier	check_sljit_emit_label		1120834	0					
ANR	1120862	ArgumentList	compiler		1120834	1					
ANR	1120863	Argument	compiler		1120834	0					
ANR	1120864	Identifier	compiler		1120834	0					
ANR	1120865	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1120834	4					
ANR	1120866	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	2306:5:70220:70287	1120834	0	True				
ANR	1120867	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1120834	0		&&			
ANR	1120868	PtrMemberAccess	compiler -> last_label		1120834	0					
ANR	1120869	Identifier	compiler		1120834	0					
ANR	1120870	Identifier	last_label		1120834	1					
ANR	1120871	EqualityExpression	compiler -> last_label -> size == compiler -> size		1120834	1		==			
ANR	1120872	PtrMemberAccess	compiler -> last_label -> size		1120834	0					
ANR	1120873	PtrMemberAccess	compiler -> last_label		1120834	0					
ANR	1120874	Identifier	compiler		1120834	0					
ANR	1120875	Identifier	last_label		1120834	1					
ANR	1120876	Identifier	size		1120834	1					
ANR	1120877	PtrMemberAccess	compiler -> size		1120834	1					
ANR	1120878	Identifier	compiler		1120834	0					
ANR	1120879	Identifier	size		1120834	1					
ANR	1120880	ReturnStatement	return compiler -> last_label ;	2307:2:70292:70319	1120834	1	True				
ANR	1120881	PtrMemberAccess	compiler -> last_label		1120834	0					
ANR	1120882	Identifier	compiler		1120834	0					
ANR	1120883	Identifier	last_label		1120834	1					
ANR	1120884	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	2309:1:70323:70402	1120834	5	True				
ANR	1120885	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1120834	0		=			
ANR	1120886	Identifier	label		1120834	0					
ANR	1120887	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1120834	1					
ANR	1120888	CastTarget	struct sljit_label *		1120834	0					
ANR	1120889	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1120834	1					
ANR	1120890	Callee	ensure_abuf		1120834	0					
ANR	1120891	Identifier	ensure_abuf		1120834	0					
ANR	1120892	ArgumentList	compiler		1120834	1					
ANR	1120893	Argument	compiler		1120834	0					
ANR	1120894	Identifier	compiler		1120834	0					
ANR	1120895	Argument	sizeof ( struct sljit_label )		1120834	1					
ANR	1120896	SizeofExpression	sizeof ( struct sljit_label )		1120834	0					
ANR	1120897	Sizeof	sizeof		1120834	0					
ANR	1120898	SizeofOperand	struct sljit_label		1120834	1					
ANR	1120899	ExpressionStatement	PTR_FAIL_IF ( ! label )	2310:1:70405:70424	1120834	6	True				
ANR	1120900	CallExpression	PTR_FAIL_IF ( ! label )		1120834	0					
ANR	1120901	Callee	PTR_FAIL_IF		1120834	0					
ANR	1120902	Identifier	PTR_FAIL_IF		1120834	0					
ANR	1120903	ArgumentList	! label		1120834	1					
ANR	1120904	Argument	! label		1120834	0					
ANR	1120905	UnaryOperationExpression	! label		1120834	0					
ANR	1120906	UnaryOperator	!		1120834	0					
ANR	1120907	Identifier	label		1120834	1					
ANR	1120908	ExpressionStatement	"set_label ( label , compiler )"	2311:1:70427:70453	1120834	7	True				
ANR	1120909	CallExpression	"set_label ( label , compiler )"		1120834	0					
ANR	1120910	Callee	set_label		1120834	0					
ANR	1120911	Identifier	set_label		1120834	0					
ANR	1120912	ArgumentList	label		1120834	1					
ANR	1120913	Argument	label		1120834	0					
ANR	1120914	Identifier	label		1120834	0					
ANR	1120915	Argument	compiler		1120834	1					
ANR	1120916	Identifier	compiler		1120834	0					
ANR	1120917	ReturnStatement	return label ;	2312:1:70456:70468	1120834	8	True				
ANR	1120918	Identifier	label		1120834	0					
ANR	1120919	ReturnType	struct sljit_label *		1120834	1					
ANR	1120920	Identifier	sljit_emit_label		1120834	2					
ANR	1120921	ParameterList	struct sljit_compiler * compiler		1120834	3					
ANR	1120922	Parameter	struct sljit_compiler * compiler	2297:63:70058:70088	1120834	0	True				
ANR	1120923	ParameterType	struct sljit_compiler *		1120834	0					
ANR	1120924	Identifier	compiler		1120834	1					
ANR	1120925	CFGEntryNode	ENTRY		1120834		True				
ANR	1120926	CFGExitNode	EXIT		1120834		True				
ANR	1120927	Symbol	compiler -> last_label -> size		1120834						
ANR	1120928	Symbol	* compiler -> last_label		1120834						
ANR	1120929	Symbol	compiler -> last_label		1120834						
ANR	1120930	Symbol	* * compiler		1120834						
ANR	1120931	Symbol	compiler -> size		1120834						
ANR	1120932	Symbol	check_sljit_emit_label		1120834						
ANR	1120933	Symbol	label		1120834						
ANR	1120934	Symbol	* compiler		1120834						
ANR	1120935	Symbol	ensure_abuf		1120834						
ANR	1120936	Symbol	compiler		1120834						
ANR	1120937	Function	sljit_emit_ijump	2315:0:70473:72575							
ANR	1120938	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1120937	0					
ANR	1120939	CompoundStatement		2316:0:70601:72575	1120937	0					
ANR	1120940	IdentifierDeclStatement	sljit_si src_r = TMP_REG2 ;	2317:1:70604:70629	1120937	0	True				
ANR	1120941	IdentifierDecl	src_r = TMP_REG2		1120937	0					
ANR	1120942	IdentifierDeclType	sljit_si		1120937	0					
ANR	1120943	Identifier	src_r		1120937	1					
ANR	1120944	AssignmentExpression	src_r = TMP_REG2		1120937	2		=			
ANR	1120945	Identifier	TMP_REG2		1120937	0					
ANR	1120946	Identifier	TMP_REG2		1120937	1					
ANR	1120947	IdentifierDeclStatement	struct sljit_jump * jump = NULL ;	2318:1:70632:70662	1120937	1	True				
ANR	1120948	IdentifierDecl	* jump = NULL		1120937	0					
ANR	1120949	IdentifierDeclType	struct sljit_jump *		1120937	0					
ANR	1120950	Identifier	jump		1120937	1					
ANR	1120951	AssignmentExpression	* jump = NULL		1120937	2		=			
ANR	1120952	Identifier	NULL		1120937	0					
ANR	1120953	Identifier	NULL		1120937	1					
ANR	1120954	ExpressionStatement	flush_buffer ( compiler )	2320:1:70666:70688	1120937	2	True				
ANR	1120955	CallExpression	flush_buffer ( compiler )		1120937	0					
ANR	1120956	Callee	flush_buffer		1120937	0					
ANR	1120957	Identifier	flush_buffer		1120937	0					
ANR	1120958	ArgumentList	compiler		1120937	1					
ANR	1120959	Argument	compiler		1120937	0					
ANR	1120960	Identifier	compiler		1120937	0					
ANR	1120961	ExpressionStatement	CHECK_ERROR ( )	2322:1:70692:70705	1120937	3	True				
ANR	1120962	CallExpression	CHECK_ERROR ( )		1120937	0					
ANR	1120963	Callee	CHECK_ERROR		1120937	0					
ANR	1120964	Identifier	CHECK_ERROR		1120937	0					
ANR	1120965	ArgumentList			1120937	1					
ANR	1120966	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	2323:1:70708:70764	1120937	4	True				
ANR	1120967	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1120937	0					
ANR	1120968	Callee	CHECK		1120937	0					
ANR	1120969	Identifier	CHECK		1120937	0					
ANR	1120970	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1120937	1					
ANR	1120971	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1120937	0					
ANR	1120972	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1120937	0					
ANR	1120973	Callee	check_sljit_emit_ijump		1120937	0					
ANR	1120974	Identifier	check_sljit_emit_ijump		1120937	0					
ANR	1120975	ArgumentList	compiler		1120937	1					
ANR	1120976	Argument	compiler		1120937	0					
ANR	1120977	Identifier	compiler		1120937	0					
ANR	1120978	Argument	type		1120937	1					
ANR	1120979	Identifier	type		1120937	0					
ANR	1120980	Argument	src		1120937	2					
ANR	1120981	Identifier	src		1120937	0					
ANR	1120982	Argument	srcw		1120937	3					
ANR	1120983	Identifier	srcw		1120937	0					
ANR	1120984	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2324:1:70767:70797	1120937	5	True				
ANR	1120985	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1120937	0					
ANR	1120986	Callee	ADJUST_LOCAL_OFFSET		1120937	0					
ANR	1120987	Identifier	ADJUST_LOCAL_OFFSET		1120937	0					
ANR	1120988	ArgumentList	src		1120937	1					
ANR	1120989	Argument	src		1120937	0					
ANR	1120990	Identifier	src		1120937	0					
ANR	1120991	Argument	srcw		1120937	1					
ANR	1120992	Identifier	srcw		1120937	0					
ANR	1120993	IfStatement	if ( FAST_IS_REG ( src ) )		1120937	6					
ANR	1120994	Condition	FAST_IS_REG ( src )	2326:5:70805:70820	1120937	0	True				
ANR	1120995	CallExpression	FAST_IS_REG ( src )		1120937	0					
ANR	1120996	Callee	FAST_IS_REG		1120937	0					
ANR	1120997	Identifier	FAST_IS_REG		1120937	0					
ANR	1120998	ArgumentList	src		1120937	1					
ANR	1120999	Argument	src		1120937	0					
ANR	1121000	Identifier	src		1120937	0					
ANR	1121001	CompoundStatement		11:23:221:221	1120937	1					
ANR	1121002	IfStatement	if ( reg_map [ src ] != 0 )		1120937	0					
ANR	1121003	Condition	reg_map [ src ] != 0	2327:6:70831:70847	1120937	0	True				
ANR	1121004	EqualityExpression	reg_map [ src ] != 0		1120937	0		!=			
ANR	1121005	ArrayIndexing	reg_map [ src ]		1120937	0					
ANR	1121006	Identifier	reg_map		1120937	0					
ANR	1121007	Identifier	src		1120937	1					
ANR	1121008	PrimaryExpression	0		1120937	1					
ANR	1121009	ExpressionStatement	src_r = src	2328:3:70853:70864	1120937	1	True				
ANR	1121010	AssignmentExpression	src_r = src		1120937	0		=			
ANR	1121011	Identifier	src_r		1120937	0					
ANR	1121012	Identifier	src		1120937	1					
ANR	1121013	ElseStatement	else		1120937	0					
ANR	1121014	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO ) )"	2330:3:70876:70930	1120937	0	True				
ANR	1121015	CallExpression	"FAIL_IF ( ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO ) )"		1120937	0					
ANR	1121016	Callee	FAIL_IF		1120937	0					
ANR	1121017	Identifier	FAIL_IF		1120937	0					
ANR	1121018	ArgumentList	"ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO )"		1120937	1					
ANR	1121019	Argument	"ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO )"		1120937	0					
ANR	1121020	CallExpression	"ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO )"		1120937	0					
ANR	1121021	Callee	ADD_SOLO		1120937	0					
ANR	1121022	Identifier	ADD_SOLO		1120937	0					
ANR	1121023	ArgumentList	TMP_REG2_mapped		1120937	1					
ANR	1121024	Argument	TMP_REG2_mapped		1120937	0					
ANR	1121025	Identifier	TMP_REG2_mapped		1120937	0					
ANR	1121026	Argument	reg_map [ src ]		1120937	1					
ANR	1121027	ArrayIndexing	reg_map [ src ]		1120937	0					
ANR	1121028	Identifier	reg_map		1120937	0					
ANR	1121029	Identifier	src		1120937	1					
ANR	1121030	Argument	ZERO		1120937	2					
ANR	1121031	Identifier	ZERO		1120937	0					
ANR	1121032	IfStatement	if ( type >= SLJIT_CALL0 )		1120937	7					
ANR	1121033	Condition	type >= SLJIT_CALL0	2333:5:70941:70959	1120937	0	True				
ANR	1121034	RelationalExpression	type >= SLJIT_CALL0		1120937	0		>=			
ANR	1121035	Identifier	type		1120937	0					
ANR	1121036	Identifier	SLJIT_CALL0		1120937	1					
ANR	1121037	CompoundStatement		18:26:360:360	1120937	1					
ANR	1121038	ExpressionStatement	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )	2334:2:70966:71035	1120937	0	True				
ANR	1121039	CallExpression	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )		1120937	0					
ANR	1121040	Callee	SLJIT_ASSERT		1120937	0					
ANR	1121041	Identifier	SLJIT_ASSERT		1120937	0					
ANR	1121042	ArgumentList	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1120937	1					
ANR	1121043	Argument	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1120937	0					
ANR	1121044	AndExpression	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1120937	0		&&			
ANR	1121045	EqualityExpression	reg_map [ PIC_ADDR_REG ] == 16		1120937	0		==			
ANR	1121046	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1120937	0					
ANR	1121047	Identifier	reg_map		1120937	0					
ANR	1121048	Identifier	PIC_ADDR_REG		1120937	1					
ANR	1121049	PrimaryExpression	16		1120937	1					
ANR	1121050	EqualityExpression	PIC_ADDR_REG == TMP_REG2		1120937	1		==			
ANR	1121051	Identifier	PIC_ADDR_REG		1120937	0					
ANR	1121052	Identifier	TMP_REG2		1120937	1					
ANR	1121053	IfStatement	if ( src & ( SLJIT_IMM | SLJIT_MEM ) )		1120937	1					
ANR	1121054	Condition	src & ( SLJIT_IMM | SLJIT_MEM )	2335:6:71043:71071	1120937	0	True				
ANR	1121055	BitAndExpression	src & ( SLJIT_IMM | SLJIT_MEM )		1120937	0		&			
ANR	1121056	Identifier	src		1120937	0					
ANR	1121057	InclusiveOrExpression	SLJIT_IMM | SLJIT_MEM		1120937	1		|			
ANR	1121058	Identifier	SLJIT_IMM		1120937	0					
ANR	1121059	Identifier	SLJIT_MEM		1120937	1					
ANR	1121060	CompoundStatement		20:37:472:472	1120937	1					
ANR	1121061	IfStatement	if ( src & SLJIT_IMM )		1120937	0					
ANR	1121062	Condition	src & SLJIT_IMM	2336:7:71083:71097	1120937	0	True				
ANR	1121063	BitAndExpression	src & SLJIT_IMM		1120937	0		&			
ANR	1121064	Identifier	src		1120937	0					
ANR	1121065	Identifier	SLJIT_IMM		1120937	1					
ANR	1121066	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 ) )"	2337:4:71104:71165	1120937	1	True				
ANR	1121067	CallExpression	"FAIL_IF ( emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 ) )"		1120937	0					
ANR	1121068	Callee	FAIL_IF		1120937	0					
ANR	1121069	Identifier	FAIL_IF		1120937	0					
ANR	1121070	ArgumentList	"emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 )"		1120937	1					
ANR	1121071	Argument	"emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 )"		1120937	0					
ANR	1121072	CallExpression	"emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 )"		1120937	0					
ANR	1121073	Callee	emit_const		1120937	0					
ANR	1121074	Identifier	emit_const		1120937	0					
ANR	1121075	ArgumentList	compiler		1120937	1					
ANR	1121076	Argument	compiler		1120937	0					
ANR	1121077	Identifier	compiler		1120937	0					
ANR	1121078	Argument	reg_map [ PIC_ADDR_REG ]		1120937	1					
ANR	1121079	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1120937	0					
ANR	1121080	Identifier	reg_map		1120937	0					
ANR	1121081	Identifier	PIC_ADDR_REG		1120937	1					
ANR	1121082	Argument	srcw		1120937	2					
ANR	1121083	Identifier	srcw		1120937	0					
ANR	1121084	Argument	1		1120937	3					
ANR	1121085	PrimaryExpression	1		1120937	0					
ANR	1121086	ElseStatement	else		1120937	0					
ANR	1121087	CompoundStatement		23:8:573:573	1120937	0					
ANR	1121088	ExpressionStatement	SLJIT_ASSERT ( src_r == TMP_REG2 && ( src & SLJIT_MEM ) )	2339:4:71181:71233	1120937	0	True				
ANR	1121089	CallExpression	SLJIT_ASSERT ( src_r == TMP_REG2 && ( src & SLJIT_MEM ) )		1120937	0					
ANR	1121090	Callee	SLJIT_ASSERT		1120937	0					
ANR	1121091	Identifier	SLJIT_ASSERT		1120937	0					
ANR	1121092	ArgumentList	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1120937	1					
ANR	1121093	Argument	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1120937	0					
ANR	1121094	AndExpression	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1120937	0		&&			
ANR	1121095	EqualityExpression	src_r == TMP_REG2		1120937	0		==			
ANR	1121096	Identifier	src_r		1120937	0					
ANR	1121097	Identifier	TMP_REG2		1120937	1					
ANR	1121098	BitAndExpression	src & SLJIT_MEM		1120937	1		&			
ANR	1121099	Identifier	src		1120937	0					
ANR	1121100	Identifier	SLJIT_MEM		1120937	1					
ANR	1121101	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	2340:4:71239:71324	1120937	1	True				
ANR	1121102	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1120937	0					
ANR	1121103	Callee	FAIL_IF		1120937	0					
ANR	1121104	Identifier	FAIL_IF		1120937	0					
ANR	1121105	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1120937	1					
ANR	1121106	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1120937	0					
ANR	1121107	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1120937	0					
ANR	1121108	Callee	emit_op		1120937	0					
ANR	1121109	Identifier	emit_op		1120937	0					
ANR	1121110	ArgumentList	compiler		1120937	1					
ANR	1121111	Argument	compiler		1120937	0					
ANR	1121112	Identifier	compiler		1120937	0					
ANR	1121113	Argument	SLJIT_MOV		1120937	1					
ANR	1121114	Identifier	SLJIT_MOV		1120937	0					
ANR	1121115	Argument	WORD_DATA		1120937	2					
ANR	1121116	Identifier	WORD_DATA		1120937	0					
ANR	1121117	Argument	TMP_REG2		1120937	3					
ANR	1121118	Identifier	TMP_REG2		1120937	0					
ANR	1121119	Argument	0		1120937	4					
ANR	1121120	PrimaryExpression	0		1120937	0					
ANR	1121121	Argument	TMP_REG1		1120937	5					
ANR	1121122	Identifier	TMP_REG1		1120937	0					
ANR	1121123	Argument	0		1120937	6					
ANR	1121124	PrimaryExpression	0		1120937	0					
ANR	1121125	Argument	src		1120937	7					
ANR	1121126	Identifier	src		1120937	0					
ANR	1121127	Argument	srcw		1120937	8					
ANR	1121128	Identifier	srcw		1120937	0					
ANR	1121129	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"	2343:3:71335:71380	1120937	1	True				
ANR	1121130	CallExpression	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"		1120937	0					
ANR	1121131	Callee	FAIL_IF		1120937	0					
ANR	1121132	Identifier	FAIL_IF		1120937	0					
ANR	1121133	ArgumentList	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1120937	1					
ANR	1121134	Argument	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1120937	0					
ANR	1121135	CallExpression	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1120937	0					
ANR	1121136	Callee	ADD_SOLO		1120937	0					
ANR	1121137	Identifier	ADD_SOLO		1120937	0					
ANR	1121138	ArgumentList	0		1120937	1					
ANR	1121139	Argument	0		1120937	0					
ANR	1121140	PrimaryExpression	0		1120937	0					
ANR	1121141	Argument	reg_map [ SLJIT_R0 ]		1120937	1					
ANR	1121142	ArrayIndexing	reg_map [ SLJIT_R0 ]		1120937	0					
ANR	1121143	Identifier	reg_map		1120937	0					
ANR	1121144	Identifier	SLJIT_R0		1120937	1					
ANR	1121145	Argument	ZERO		1120937	2					
ANR	1121146	Identifier	ZERO		1120937	0					
ANR	1121147	ExpressionStatement	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"	2345:3:71386:71417	1120937	2	True				
ANR	1121148	CallExpression	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"		1120937	0					
ANR	1121149	Callee	FAIL_IF		1120937	0					
ANR	1121150	Identifier	FAIL_IF		1120937	0					
ANR	1121151	ArgumentList	"ADDI_SOLO ( 54 , 54 , - 16 )"		1120937	1					
ANR	1121152	Argument	"ADDI_SOLO ( 54 , 54 , - 16 )"		1120937	0					
ANR	1121153	CallExpression	"ADDI_SOLO ( 54 , 54 , - 16 )"		1120937	0					
ANR	1121154	Callee	ADDI_SOLO		1120937	0					
ANR	1121155	Identifier	ADDI_SOLO		1120937	0					
ANR	1121156	ArgumentList	54		1120937	1					
ANR	1121157	Argument	54		1120937	0					
ANR	1121158	PrimaryExpression	54		1120937	0					
ANR	1121159	Argument	54		1120937	1					
ANR	1121160	PrimaryExpression	54		1120937	0					
ANR	1121161	Argument	- 16		1120937	2					
ANR	1121162	UnaryOperationExpression	- 16		1120937	0					
ANR	1121163	UnaryOperator	-		1120937	0					
ANR	1121164	PrimaryExpression	16		1120937	1					
ANR	1121165	ExpressionStatement	FAIL_IF ( JALR_SOLO ( reg_map [ PIC_ADDR_REG ] ) )	2347:3:71423:71464	1120937	3	True				
ANR	1121166	CallExpression	FAIL_IF ( JALR_SOLO ( reg_map [ PIC_ADDR_REG ] ) )		1120937	0					
ANR	1121167	Callee	FAIL_IF		1120937	0					
ANR	1121168	Identifier	FAIL_IF		1120937	0					
ANR	1121169	ArgumentList	JALR_SOLO ( reg_map [ PIC_ADDR_REG ] )		1120937	1					
ANR	1121170	Argument	JALR_SOLO ( reg_map [ PIC_ADDR_REG ] )		1120937	0					
ANR	1121171	CallExpression	JALR_SOLO ( reg_map [ PIC_ADDR_REG ] )		1120937	0					
ANR	1121172	Callee	JALR_SOLO		1120937	0					
ANR	1121173	Identifier	JALR_SOLO		1120937	0					
ANR	1121174	ArgumentList	reg_map [ PIC_ADDR_REG ]		1120937	1					
ANR	1121175	Argument	reg_map [ PIC_ADDR_REG ]		1120937	0					
ANR	1121176	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1120937	0					
ANR	1121177	Identifier	reg_map		1120937	0					
ANR	1121178	Identifier	PIC_ADDR_REG		1120937	1					
ANR	1121179	ReturnStatement	"return ADDI_SOLO ( 54 , 54 , 16 ) ;"	2349:3:71470:71498	1120937	4	True				
ANR	1121180	CallExpression	"ADDI_SOLO ( 54 , 54 , 16 )"		1120937	0					
ANR	1121181	Callee	ADDI_SOLO		1120937	0					
ANR	1121182	Identifier	ADDI_SOLO		1120937	0					
ANR	1121183	ArgumentList	54		1120937	1					
ANR	1121184	Argument	54		1120937	0					
ANR	1121185	PrimaryExpression	54		1120937	0					
ANR	1121186	Argument	54		1120937	1					
ANR	1121187	PrimaryExpression	54		1120937	0					
ANR	1121188	Argument	16		1120937	2					
ANR	1121189	PrimaryExpression	16		1120937	0					
ANR	1121190	IfStatement	if ( type >= SLJIT_CALL1 )		1120937	2					
ANR	1121191	Condition	type >= SLJIT_CALL1	2353:6:71535:71553	1120937	0	True				
ANR	1121192	RelationalExpression	type >= SLJIT_CALL1		1120937	0		>=			
ANR	1121193	Identifier	type		1120937	0					
ANR	1121194	Identifier	SLJIT_CALL1		1120937	1					
ANR	1121195	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"	2354:3:71559:71604	1120937	1	True				
ANR	1121196	CallExpression	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"		1120937	0					
ANR	1121197	Callee	FAIL_IF		1120937	0					
ANR	1121198	Identifier	FAIL_IF		1120937	0					
ANR	1121199	ArgumentList	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1120937	1					
ANR	1121200	Argument	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1120937	0					
ANR	1121201	CallExpression	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1120937	0					
ANR	1121202	Callee	ADD_SOLO		1120937	0					
ANR	1121203	Identifier	ADD_SOLO		1120937	0					
ANR	1121204	ArgumentList	0		1120937	1					
ANR	1121205	Argument	0		1120937	0					
ANR	1121206	PrimaryExpression	0		1120937	0					
ANR	1121207	Argument	reg_map [ SLJIT_R0 ]		1120937	1					
ANR	1121208	ArrayIndexing	reg_map [ SLJIT_R0 ]		1120937	0					
ANR	1121209	Identifier	reg_map		1120937	0					
ANR	1121210	Identifier	SLJIT_R0		1120937	1					
ANR	1121211	Argument	ZERO		1120937	2					
ANR	1121212	Identifier	ZERO		1120937	0					
ANR	1121213	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO ) )"	2356:2:71609:71671	1120937	3	True				
ANR	1121214	CallExpression	"FAIL_IF ( ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO ) )"		1120937	0					
ANR	1121215	Callee	FAIL_IF		1120937	0					
ANR	1121216	Identifier	FAIL_IF		1120937	0					
ANR	1121217	ArgumentList	"ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO )"		1120937	1					
ANR	1121218	Argument	"ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO )"		1120937	0					
ANR	1121219	CallExpression	"ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO )"		1120937	0					
ANR	1121220	Callee	ADD_SOLO		1120937	0					
ANR	1121221	Identifier	ADD_SOLO		1120937	0					
ANR	1121222	ArgumentList	reg_map [ PIC_ADDR_REG ]		1120937	1					
ANR	1121223	Argument	reg_map [ PIC_ADDR_REG ]		1120937	0					
ANR	1121224	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1120937	0					
ANR	1121225	Identifier	reg_map		1120937	0					
ANR	1121226	Identifier	PIC_ADDR_REG		1120937	1					
ANR	1121227	Argument	reg_map [ src_r ]		1120937	1					
ANR	1121228	ArrayIndexing	reg_map [ src_r ]		1120937	0					
ANR	1121229	Identifier	reg_map		1120937	0					
ANR	1121230	Identifier	src_r		1120937	1					
ANR	1121231	Argument	ZERO		1120937	2					
ANR	1121232	Identifier	ZERO		1120937	0					
ANR	1121233	ExpressionStatement	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"	2358:2:71676:71707	1120937	4	True				
ANR	1121234	CallExpression	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"		1120937	0					
ANR	1121235	Callee	FAIL_IF		1120937	0					
ANR	1121236	Identifier	FAIL_IF		1120937	0					
ANR	1121237	ArgumentList	"ADDI_SOLO ( 54 , 54 , - 16 )"		1120937	1					
ANR	1121238	Argument	"ADDI_SOLO ( 54 , 54 , - 16 )"		1120937	0					
ANR	1121239	CallExpression	"ADDI_SOLO ( 54 , 54 , - 16 )"		1120937	0					
ANR	1121240	Callee	ADDI_SOLO		1120937	0					
ANR	1121241	Identifier	ADDI_SOLO		1120937	0					
ANR	1121242	ArgumentList	54		1120937	1					
ANR	1121243	Argument	54		1120937	0					
ANR	1121244	PrimaryExpression	54		1120937	0					
ANR	1121245	Argument	54		1120937	1					
ANR	1121246	PrimaryExpression	54		1120937	0					
ANR	1121247	Argument	- 16		1120937	2					
ANR	1121248	UnaryOperationExpression	- 16		1120937	0					
ANR	1121249	UnaryOperator	-		1120937	0					
ANR	1121250	PrimaryExpression	16		1120937	1					
ANR	1121251	ExpressionStatement	FAIL_IF ( JALR_SOLO ( reg_map [ src_r ] ) )	2360:2:71712:71746	1120937	5	True				
ANR	1121252	CallExpression	FAIL_IF ( JALR_SOLO ( reg_map [ src_r ] ) )		1120937	0					
ANR	1121253	Callee	FAIL_IF		1120937	0					
ANR	1121254	Identifier	FAIL_IF		1120937	0					
ANR	1121255	ArgumentList	JALR_SOLO ( reg_map [ src_r ] )		1120937	1					
ANR	1121256	Argument	JALR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121257	CallExpression	JALR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121258	Callee	JALR_SOLO		1120937	0					
ANR	1121259	Identifier	JALR_SOLO		1120937	0					
ANR	1121260	ArgumentList	reg_map [ src_r ]		1120937	1					
ANR	1121261	Argument	reg_map [ src_r ]		1120937	0					
ANR	1121262	ArrayIndexing	reg_map [ src_r ]		1120937	0					
ANR	1121263	Identifier	reg_map		1120937	0					
ANR	1121264	Identifier	src_r		1120937	1					
ANR	1121265	ReturnStatement	"return ADDI_SOLO ( 54 , 54 , 16 ) ;"	2362:2:71751:71779	1120937	6	True				
ANR	1121266	CallExpression	"ADDI_SOLO ( 54 , 54 , 16 )"		1120937	0					
ANR	1121267	Callee	ADDI_SOLO		1120937	0					
ANR	1121268	Identifier	ADDI_SOLO		1120937	0					
ANR	1121269	ArgumentList	54		1120937	1					
ANR	1121270	Argument	54		1120937	0					
ANR	1121271	PrimaryExpression	54		1120937	0					
ANR	1121272	Argument	54		1120937	1					
ANR	1121273	PrimaryExpression	54		1120937	0					
ANR	1121274	Argument	16		1120937	2					
ANR	1121275	PrimaryExpression	16		1120937	0					
ANR	1121276	IfStatement	if ( src & SLJIT_IMM )		1120937	8					
ANR	1121277	Condition	src & SLJIT_IMM	2365:5:71790:71804	1120937	0	True				
ANR	1121278	BitAndExpression	src & SLJIT_IMM		1120937	0		&			
ANR	1121279	Identifier	src		1120937	0					
ANR	1121280	Identifier	SLJIT_IMM		1120937	1					
ANR	1121281	CompoundStatement		50:22:1205:1205	1120937	1					
ANR	1121282	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2366:2:71811:71887	1120937	0	True				
ANR	1121283	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1120937	0		=			
ANR	1121284	Identifier	jump		1120937	0					
ANR	1121285	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1120937	1					
ANR	1121286	CastTarget	struct sljit_jump *		1120937	0					
ANR	1121287	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1120937	1					
ANR	1121288	Callee	ensure_abuf		1120937	0					
ANR	1121289	Identifier	ensure_abuf		1120937	0					
ANR	1121290	ArgumentList	compiler		1120937	1					
ANR	1121291	Argument	compiler		1120937	0					
ANR	1121292	Identifier	compiler		1120937	0					
ANR	1121293	Argument	sizeof ( struct sljit_jump )		1120937	1					
ANR	1121294	SizeofExpression	sizeof ( struct sljit_jump )		1120937	0					
ANR	1121295	Sizeof	sizeof		1120937	0					
ANR	1121296	SizeofOperand	struct sljit_jump		1120937	1					
ANR	1121297	ExpressionStatement	FAIL_IF ( ! jump )	2367:2:71891:71905	1120937	1	True				
ANR	1121298	CallExpression	FAIL_IF ( ! jump )		1120937	0					
ANR	1121299	Callee	FAIL_IF		1120937	0					
ANR	1121300	Identifier	FAIL_IF		1120937	0					
ANR	1121301	ArgumentList	! jump		1120937	1					
ANR	1121302	Argument	! jump		1120937	0					
ANR	1121303	UnaryOperationExpression	! jump		1120937	0					
ANR	1121304	UnaryOperator	!		1120937	0					
ANR	1121305	Identifier	jump		1120937	1					
ANR	1121306	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 ) )"	2368:2:71909:71987	1120937	2	True				
ANR	1121307	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 ) )"		1120937	0					
ANR	1121308	Callee	set_jump		1120937	0					
ANR	1121309	Identifier	set_jump		1120937	0					
ANR	1121310	ArgumentList	jump		1120937	1					
ANR	1121311	Argument	jump		1120937	0					
ANR	1121312	Identifier	jump		1120937	0					
ANR	1121313	Argument	compiler		1120937	1					
ANR	1121314	Identifier	compiler		1120937	0					
ANR	1121315	Argument	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 )		1120937	2					
ANR	1121316	InclusiveOrExpression	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 )		1120937	0		|			
ANR	1121317	Identifier	JUMP_ADDR		1120937	0					
ANR	1121318	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0		1120937	1					
ANR	1121319	Condition	type >= SLJIT_FAST_CALL		1120937	0					
ANR	1121320	RelationalExpression	type >= SLJIT_FAST_CALL		1120937	0		>=			
ANR	1121321	Identifier	type		1120937	0					
ANR	1121322	Identifier	SLJIT_FAST_CALL		1120937	1					
ANR	1121323	Identifier	IS_JAL		1120937	1					
ANR	1121324	PrimaryExpression	0		1120937	2					
ANR	1121325	ExpressionStatement	jump -> u . target = srcw	2369:2:71991:72012	1120937	3	True				
ANR	1121326	AssignmentExpression	jump -> u . target = srcw		1120937	0		=			
ANR	1121327	MemberAccess	jump -> u . target		1120937	0					
ANR	1121328	PtrMemberAccess	jump -> u		1120937	0					
ANR	1121329	Identifier	jump		1120937	0					
ANR	1121330	Identifier	u		1120937	1					
ANR	1121331	Identifier	target		1120937	1					
ANR	1121332	Identifier	srcw		1120937	1					
ANR	1121333	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"	2370:2:72016:72068	1120937	4	True				
ANR	1121334	CallExpression	"FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"		1120937	0					
ANR	1121335	Callee	FAIL_IF		1120937	0					
ANR	1121336	Identifier	FAIL_IF		1120937	0					
ANR	1121337	ArgumentList	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1120937	1					
ANR	1121338	Argument	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1120937	0					
ANR	1121339	CallExpression	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1120937	0					
ANR	1121340	Callee	emit_const		1120937	0					
ANR	1121341	Identifier	emit_const		1120937	0					
ANR	1121342	ArgumentList	compiler		1120937	1					
ANR	1121343	Argument	compiler		1120937	0					
ANR	1121344	Identifier	compiler		1120937	0					
ANR	1121345	Argument	TMP_REG2_mapped		1120937	1					
ANR	1121346	Identifier	TMP_REG2_mapped		1120937	0					
ANR	1121347	Argument	0		1120937	2					
ANR	1121348	PrimaryExpression	0		1120937	0					
ANR	1121349	Argument	1		1120937	3					
ANR	1121350	PrimaryExpression	1		1120937	0					
ANR	1121351	IfStatement	if ( type >= SLJIT_FAST_CALL )		1120937	5					
ANR	1121352	Condition	type >= SLJIT_FAST_CALL	2372:6:72077:72099	1120937	0	True				
ANR	1121353	RelationalExpression	type >= SLJIT_FAST_CALL		1120937	0		>=			
ANR	1121354	Identifier	type		1120937	0					
ANR	1121355	Identifier	SLJIT_FAST_CALL		1120937	1					
ANR	1121356	CompoundStatement		57:31:1500:1500	1120937	1					
ANR	1121357	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( ZERO , ZERO , ZERO ) )"	2373:3:72107:72142	1120937	0	True				
ANR	1121358	CallExpression	"FAIL_IF ( ADD_SOLO ( ZERO , ZERO , ZERO ) )"		1120937	0					
ANR	1121359	Callee	FAIL_IF		1120937	0					
ANR	1121360	Identifier	FAIL_IF		1120937	0					
ANR	1121361	ArgumentList	"ADD_SOLO ( ZERO , ZERO , ZERO )"		1120937	1					
ANR	1121362	Argument	"ADD_SOLO ( ZERO , ZERO , ZERO )"		1120937	0					
ANR	1121363	CallExpression	"ADD_SOLO ( ZERO , ZERO , ZERO )"		1120937	0					
ANR	1121364	Callee	ADD_SOLO		1120937	0					
ANR	1121365	Identifier	ADD_SOLO		1120937	0					
ANR	1121366	ArgumentList	ZERO		1120937	1					
ANR	1121367	Argument	ZERO		1120937	0					
ANR	1121368	Identifier	ZERO		1120937	0					
ANR	1121369	Argument	ZERO		1120937	1					
ANR	1121370	Identifier	ZERO		1120937	0					
ANR	1121371	Argument	ZERO		1120937	2					
ANR	1121372	Identifier	ZERO		1120937	0					
ANR	1121373	ExpressionStatement	jump -> addr = compiler -> size	2374:3:72147:72174	1120937	1	True				
ANR	1121374	AssignmentExpression	jump -> addr = compiler -> size		1120937	0		=			
ANR	1121375	PtrMemberAccess	jump -> addr		1120937	0					
ANR	1121376	Identifier	jump		1120937	0					
ANR	1121377	Identifier	addr		1120937	1					
ANR	1121378	PtrMemberAccess	compiler -> size		1120937	1					
ANR	1121379	Identifier	compiler		1120937	0					
ANR	1121380	Identifier	size		1120937	1					
ANR	1121381	ExpressionStatement	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )	2375:3:72179:72211	1120937	2	True				
ANR	1121382	CallExpression	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )		1120937	0					
ANR	1121383	Callee	FAIL_IF		1120937	0					
ANR	1121384	Identifier	FAIL_IF		1120937	0					
ANR	1121385	ArgumentList	JR_SOLO ( reg_map [ src_r ] )		1120937	1					
ANR	1121386	Argument	JR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121387	CallExpression	JR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121388	Callee	JR_SOLO		1120937	0					
ANR	1121389	Identifier	JR_SOLO		1120937	0					
ANR	1121390	ArgumentList	reg_map [ src_r ]		1120937	1					
ANR	1121391	Argument	reg_map [ src_r ]		1120937	0					
ANR	1121392	ArrayIndexing	reg_map [ src_r ]		1120937	0					
ANR	1121393	Identifier	reg_map		1120937	0					
ANR	1121394	Identifier	src_r		1120937	1					
ANR	1121395	ElseStatement	else		1120937	0					
ANR	1121396	CompoundStatement		61:9:1620:1620	1120937	0					
ANR	1121397	ExpressionStatement	jump -> addr = compiler -> size	2377:3:72227:72254	1120937	0	True				
ANR	1121398	AssignmentExpression	jump -> addr = compiler -> size		1120937	0		=			
ANR	1121399	PtrMemberAccess	jump -> addr		1120937	0					
ANR	1121400	Identifier	jump		1120937	0					
ANR	1121401	Identifier	addr		1120937	1					
ANR	1121402	PtrMemberAccess	compiler -> size		1120937	1					
ANR	1121403	Identifier	compiler		1120937	0					
ANR	1121404	Identifier	size		1120937	1					
ANR	1121405	ExpressionStatement	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )	2378:3:72259:72291	1120937	1	True				
ANR	1121406	CallExpression	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )		1120937	0					
ANR	1121407	Callee	FAIL_IF		1120937	0					
ANR	1121408	Identifier	FAIL_IF		1120937	0					
ANR	1121409	ArgumentList	JR_SOLO ( reg_map [ src_r ] )		1120937	1					
ANR	1121410	Argument	JR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121411	CallExpression	JR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121412	Callee	JR_SOLO		1120937	0					
ANR	1121413	Identifier	JR_SOLO		1120937	0					
ANR	1121414	ArgumentList	reg_map [ src_r ]		1120937	1					
ANR	1121415	Argument	reg_map [ src_r ]		1120937	0					
ANR	1121416	ArrayIndexing	reg_map [ src_r ]		1120937	0					
ANR	1121417	Identifier	reg_map		1120937	0					
ANR	1121418	Identifier	src_r		1120937	1					
ANR	1121419	ReturnStatement	return SLJIT_SUCCESS ;	2381:2:72300:72320	1120937	6	True				
ANR	1121420	Identifier	SLJIT_SUCCESS		1120937	0					
ANR	1121421	ElseStatement	else		1120937	0					
ANR	1121422	IfStatement	if ( src & SLJIT_MEM )		1120937	0					
ANR	1121423	Condition	src & SLJIT_MEM	2383:12:72335:72349	1120937	0	True				
ANR	1121424	BitAndExpression	src & SLJIT_MEM		1120937	0		&			
ANR	1121425	Identifier	src		1120937	0					
ANR	1121426	Identifier	SLJIT_MEM		1120937	1					
ANR	1121427	CompoundStatement		68:29:1750:1750	1120937	1					
ANR	1121428	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	2384:2:72356:72441	1120937	0	True				
ANR	1121429	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1120937	0					
ANR	1121430	Callee	FAIL_IF		1120937	0					
ANR	1121431	Identifier	FAIL_IF		1120937	0					
ANR	1121432	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1120937	1					
ANR	1121433	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1120937	0					
ANR	1121434	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1120937	0					
ANR	1121435	Callee	emit_op		1120937	0					
ANR	1121436	Identifier	emit_op		1120937	0					
ANR	1121437	ArgumentList	compiler		1120937	1					
ANR	1121438	Argument	compiler		1120937	0					
ANR	1121439	Identifier	compiler		1120937	0					
ANR	1121440	Argument	SLJIT_MOV		1120937	1					
ANR	1121441	Identifier	SLJIT_MOV		1120937	0					
ANR	1121442	Argument	WORD_DATA		1120937	2					
ANR	1121443	Identifier	WORD_DATA		1120937	0					
ANR	1121444	Argument	TMP_REG2		1120937	3					
ANR	1121445	Identifier	TMP_REG2		1120937	0					
ANR	1121446	Argument	0		1120937	4					
ANR	1121447	PrimaryExpression	0		1120937	0					
ANR	1121448	Argument	TMP_REG1		1120937	5					
ANR	1121449	Identifier	TMP_REG1		1120937	0					
ANR	1121450	Argument	0		1120937	6					
ANR	1121451	PrimaryExpression	0		1120937	0					
ANR	1121452	Argument	src		1120937	7					
ANR	1121453	Identifier	src		1120937	0					
ANR	1121454	Argument	srcw		1120937	8					
ANR	1121455	Identifier	srcw		1120937	0					
ANR	1121456	ExpressionStatement	flush_buffer ( compiler )	2385:2:72445:72467	1120937	1	True				
ANR	1121457	CallExpression	flush_buffer ( compiler )		1120937	0					
ANR	1121458	Callee	flush_buffer		1120937	0					
ANR	1121459	Identifier	flush_buffer		1120937	0					
ANR	1121460	ArgumentList	compiler		1120937	1					
ANR	1121461	Argument	compiler		1120937	0					
ANR	1121462	Identifier	compiler		1120937	0					
ANR	1121463	ExpressionStatement	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )	2388:1:72474:72506	1120937	9	True				
ANR	1121464	CallExpression	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )		1120937	0					
ANR	1121465	Callee	FAIL_IF		1120937	0					
ANR	1121466	Identifier	FAIL_IF		1120937	0					
ANR	1121467	ArgumentList	JR_SOLO ( reg_map [ src_r ] )		1120937	1					
ANR	1121468	Argument	JR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121469	CallExpression	JR_SOLO ( reg_map [ src_r ] )		1120937	0					
ANR	1121470	Callee	JR_SOLO		1120937	0					
ANR	1121471	Identifier	JR_SOLO		1120937	0					
ANR	1121472	ArgumentList	reg_map [ src_r ]		1120937	1					
ANR	1121473	Argument	reg_map [ src_r ]		1120937	0					
ANR	1121474	ArrayIndexing	reg_map [ src_r ]		1120937	0					
ANR	1121475	Identifier	reg_map		1120937	0					
ANR	1121476	Identifier	src_r		1120937	1					
ANR	1121477	IfStatement	if ( jump )		1120937	10					
ANR	1121478	Condition	jump	2390:5:72514:72517	1120937	0	True				
ANR	1121479	Identifier	jump		1120937	0					
ANR	1121480	ExpressionStatement	jump -> addr = compiler -> size	2391:2:72522:72549	1120937	1	True				
ANR	1121481	AssignmentExpression	jump -> addr = compiler -> size		1120937	0		=			
ANR	1121482	PtrMemberAccess	jump -> addr		1120937	0					
ANR	1121483	Identifier	jump		1120937	0					
ANR	1121484	Identifier	addr		1120937	1					
ANR	1121485	PtrMemberAccess	compiler -> size		1120937	1					
ANR	1121486	Identifier	compiler		1120937	0					
ANR	1121487	Identifier	size		1120937	1					
ANR	1121488	ReturnStatement	return SLJIT_SUCCESS ;	2393:1:72553:72573	1120937	11	True				
ANR	1121489	Identifier	SLJIT_SUCCESS		1120937	0					
ANR	1121490	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1120937	1					
ANR	1121491	Identifier	sljit_emit_ijump		1120937	2					
ANR	1121492	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1120937	3					
ANR	1121493	Parameter	struct sljit_compiler * compiler	2315:51:70524:70554	1120937	0	True				
ANR	1121494	ParameterType	struct sljit_compiler *		1120937	0					
ANR	1121495	Identifier	compiler		1120937	1					
ANR	1121496	Parameter	sljit_si type	2315:84:70557:70569	1120937	1	True				
ANR	1121497	ParameterType	sljit_si		1120937	0					
ANR	1121498	Identifier	type		1120937	1					
ANR	1121499	Parameter	sljit_si src	2315:99:70572:70583	1120937	2	True				
ANR	1121500	ParameterType	sljit_si		1120937	0					
ANR	1121501	Identifier	src		1120937	1					
ANR	1121502	Parameter	sljit_sw srcw	2315:113:70586:70598	1120937	3	True				
ANR	1121503	ParameterType	sljit_sw		1120937	0					
ANR	1121504	Identifier	srcw		1120937	1					
ANR	1121505	CFGEntryNode	ENTRY		1120937		True				
ANR	1121506	CFGExitNode	EXIT		1120937		True				
ANR	1121507	Symbol	TMP_REG2		1120937						
ANR	1121508	Symbol	check_sljit_emit_ijump		1120937						
ANR	1121509	Symbol	ZERO		1120937						
ANR	1121510	Symbol	TMP_REG1		1120937						
ANR	1121511	Symbol	* jump		1120937						
ANR	1121512	Symbol	SLJIT_MOV		1120937						
ANR	1121513	Symbol	jump -> u		1120937						
ANR	1121514	Symbol	SLJIT_MEM		1120937						
ANR	1121515	Symbol	reg_map		1120937						
ANR	1121516	Symbol	JUMP_ADDR		1120937						
ANR	1121517	Symbol	* src_r		1120937						
ANR	1121518	Symbol	* compiler		1120937						
ANR	1121519	Symbol	type		1120937						
ANR	1121520	Symbol	* src		1120937						
ANR	1121521	Symbol	SLJIT_R0		1120937						
ANR	1121522	Symbol	SLJIT_IMM		1120937						
ANR	1121523	Symbol	SLJIT_FAST_CALL		1120937						
ANR	1121524	Symbol	compiler		1120937						
ANR	1121525	Symbol	TMP_REG2_mapped		1120937						
ANR	1121526	Symbol	ADDI_SOLO		1120937						
ANR	1121527	Symbol	src_r		1120937						
ANR	1121528	Symbol	emit_op		1120937						
ANR	1121529	Symbol	WORD_DATA		1120937						
ANR	1121530	Symbol	jump		1120937						
ANR	1121531	Symbol	* SLJIT_R0		1120937						
ANR	1121532	Symbol	ADD_SOLO		1120937						
ANR	1121533	Symbol	NULL		1120937						
ANR	1121534	Symbol	FAST_IS_REG		1120937						
ANR	1121535	Symbol	src		1120937						
ANR	1121536	Symbol	srcw		1120937						
ANR	1121537	Symbol	SLJIT_CALL0		1120937						
ANR	1121538	Symbol	jump -> addr		1120937						
ANR	1121539	Symbol	JR_SOLO		1120937						
ANR	1121540	Symbol	SLJIT_SUCCESS		1120937						
ANR	1121541	Symbol	ensure_abuf		1120937						
ANR	1121542	Symbol	* reg_map		1120937						
ANR	1121543	Symbol	IS_JAL		1120937						
ANR	1121544	Symbol	compiler -> size		1120937						
ANR	1121545	Symbol	jump -> u . target		1120937						
ANR	1121546	Symbol	* PIC_ADDR_REG		1120937						
ANR	1121547	Symbol	SLJIT_CALL1		1120937						
ANR	1121548	Symbol	emit_const		1120937						
ANR	1121549	Symbol	JALR_SOLO		1120937						
ANR	1121550	Symbol	PIC_ADDR_REG		1120937						
ANR	1121551	Function	sljit_emit_jump	2404:25:72750:74614							
ANR	1121552	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1121551	0					
ANR	1121553	CompoundStatement		2405:0:72834:74614	1121551	0					
ANR	1121554	IdentifierDeclStatement	struct sljit_jump * jump ;	2406:1:72837:72860	1121551	0	True				
ANR	1121555	IdentifierDecl	* jump		1121551	0					
ANR	1121556	IdentifierDeclType	struct sljit_jump *		1121551	0					
ANR	1121557	Identifier	jump		1121551	1					
ANR	1121558	IdentifierDeclStatement	sljit_ins inst ;	2407:1:72863:72877	1121551	1	True				
ANR	1121559	IdentifierDecl	inst		1121551	0					
ANR	1121560	IdentifierDeclType	sljit_ins		1121551	0					
ANR	1121561	Identifier	inst		1121551	1					
ANR	1121562	IdentifierDeclStatement	sljit_si flags = 0 ;	2408:1:72880:72898	1121551	2	True				
ANR	1121563	IdentifierDecl	flags = 0		1121551	0					
ANR	1121564	IdentifierDeclType	sljit_si		1121551	0					
ANR	1121565	Identifier	flags		1121551	1					
ANR	1121566	AssignmentExpression	flags = 0		1121551	2		=			
ANR	1121567	Identifier	flags		1121551	0					
ANR	1121568	PrimaryExpression	0		1121551	1					
ANR	1121569	ExpressionStatement	flush_buffer ( compiler )	2410:1:72902:72924	1121551	3	True				
ANR	1121570	CallExpression	flush_buffer ( compiler )		1121551	0					
ANR	1121571	Callee	flush_buffer		1121551	0					
ANR	1121572	Identifier	flush_buffer		1121551	0					
ANR	1121573	ArgumentList	compiler		1121551	1					
ANR	1121574	Argument	compiler		1121551	0					
ANR	1121575	Identifier	compiler		1121551	0					
ANR	1121576	ExpressionStatement	CHECK_ERROR_PTR ( )	2412:1:72928:72945	1121551	4	True				
ANR	1121577	CallExpression	CHECK_ERROR_PTR ( )		1121551	0					
ANR	1121578	Callee	CHECK_ERROR_PTR		1121551	0					
ANR	1121579	Identifier	CHECK_ERROR_PTR		1121551	0					
ANR	1121580	ArgumentList			1121551	1					
ANR	1121581	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	2413:1:72948:72996	1121551	5	True				
ANR	1121582	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1121551	0					
ANR	1121583	Callee	CHECK_PTR		1121551	0					
ANR	1121584	Identifier	CHECK_PTR		1121551	0					
ANR	1121585	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1121551	1					
ANR	1121586	Argument	"check_sljit_emit_jump ( compiler , type )"		1121551	0					
ANR	1121587	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1121551	0					
ANR	1121588	Callee	check_sljit_emit_jump		1121551	0					
ANR	1121589	Identifier	check_sljit_emit_jump		1121551	0					
ANR	1121590	ArgumentList	compiler		1121551	1					
ANR	1121591	Argument	compiler		1121551	0					
ANR	1121592	Identifier	compiler		1121551	0					
ANR	1121593	Argument	type		1121551	1					
ANR	1121594	Identifier	type		1121551	0					
ANR	1121595	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2415:1:73000:73076	1121551	6	True				
ANR	1121596	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1121551	0		=			
ANR	1121597	Identifier	jump		1121551	0					
ANR	1121598	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1121551	1					
ANR	1121599	CastTarget	struct sljit_jump *		1121551	0					
ANR	1121600	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1121551	1					
ANR	1121601	Callee	ensure_abuf		1121551	0					
ANR	1121602	Identifier	ensure_abuf		1121551	0					
ANR	1121603	ArgumentList	compiler		1121551	1					
ANR	1121604	Argument	compiler		1121551	0					
ANR	1121605	Identifier	compiler		1121551	0					
ANR	1121606	Argument	sizeof ( struct sljit_jump )		1121551	1					
ANR	1121607	SizeofExpression	sizeof ( struct sljit_jump )		1121551	0					
ANR	1121608	Sizeof	sizeof		1121551	0					
ANR	1121609	SizeofOperand	struct sljit_jump		1121551	1					
ANR	1121610	ExpressionStatement	PTR_FAIL_IF ( ! jump )	2416:1:73079:73097	1121551	7	True				
ANR	1121611	CallExpression	PTR_FAIL_IF ( ! jump )		1121551	0					
ANR	1121612	Callee	PTR_FAIL_IF		1121551	0					
ANR	1121613	Identifier	PTR_FAIL_IF		1121551	0					
ANR	1121614	ArgumentList	! jump		1121551	1					
ANR	1121615	Argument	! jump		1121551	0					
ANR	1121616	UnaryOperationExpression	! jump		1121551	0					
ANR	1121617	UnaryOperator	!		1121551	0					
ANR	1121618	Identifier	jump		1121551	1					
ANR	1121619	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	2417:1:73100:73154	1121551	8	True				
ANR	1121620	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1121551	0					
ANR	1121621	Callee	set_jump		1121551	0					
ANR	1121622	Identifier	set_jump		1121551	0					
ANR	1121623	ArgumentList	jump		1121551	1					
ANR	1121624	Argument	jump		1121551	0					
ANR	1121625	Identifier	jump		1121551	0					
ANR	1121626	Argument	compiler		1121551	1					
ANR	1121627	Identifier	compiler		1121551	0					
ANR	1121628	Argument	type & SLJIT_REWRITABLE_JUMP		1121551	2					
ANR	1121629	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1121551	0		&			
ANR	1121630	Identifier	type		1121551	0					
ANR	1121631	Identifier	SLJIT_REWRITABLE_JUMP		1121551	1					
ANR	1121632	ExpressionStatement	type &= 0xff	2418:1:73157:73169	1121551	9	True				
ANR	1121633	AssignmentExpression	type &= 0xff		1121551	0		&=			
ANR	1121634	Identifier	type		1121551	0					
ANR	1121635	PrimaryExpression	0xff		1121551	1					
ANR	1121636	SwitchStatement	switch ( type )		1121551	10					
ANR	1121637	Condition	type	2420:9:73181:73184	1121551	0	True				
ANR	1121638	Identifier	type		1121551	0					
ANR	1121639	CompoundStatement		16:15:352:352	1121551	1					
ANR	1121640	Label	case SLJIT_EQUAL :	2421:1:73190:73206	1121551	0	True				
ANR	1121641	Identifier	SLJIT_EQUAL		1121551	0					
ANR	1121642	ExpressionStatement	BR_NZ ( EQUAL_FLAG )	2422:2:73210:73227	1121551	1	True				
ANR	1121643	CallExpression	BR_NZ ( EQUAL_FLAG )		1121551	0					
ANR	1121644	Callee	BR_NZ		1121551	0					
ANR	1121645	Identifier	BR_NZ		1121551	0					
ANR	1121646	ArgumentList	EQUAL_FLAG		1121551	1					
ANR	1121647	Argument	EQUAL_FLAG		1121551	0					
ANR	1121648	Identifier	EQUAL_FLAG		1121551	0					
ANR	1121649	BreakStatement	break ;	2423:2:73231:73236	1121551	2	True				
ANR	1121650	Label	case SLJIT_NOT_EQUAL :	2424:1:73239:73259	1121551	3	True				
ANR	1121651	Identifier	SLJIT_NOT_EQUAL		1121551	0					
ANR	1121652	ExpressionStatement	BR_Z ( EQUAL_FLAG )	2425:2:73263:73279	1121551	4	True				
ANR	1121653	CallExpression	BR_Z ( EQUAL_FLAG )		1121551	0					
ANR	1121654	Callee	BR_Z		1121551	0					
ANR	1121655	Identifier	BR_Z		1121551	0					
ANR	1121656	ArgumentList	EQUAL_FLAG		1121551	1					
ANR	1121657	Argument	EQUAL_FLAG		1121551	0					
ANR	1121658	Identifier	EQUAL_FLAG		1121551	0					
ANR	1121659	BreakStatement	break ;	2426:2:73283:73288	1121551	5	True				
ANR	1121660	Label	case SLJIT_LESS :	2427:1:73291:73306	1121551	6	True				
ANR	1121661	Identifier	SLJIT_LESS		1121551	0					
ANR	1121662	ExpressionStatement	BR_Z ( ULESS_FLAG )	2428:2:73310:73326	1121551	7	True				
ANR	1121663	CallExpression	BR_Z ( ULESS_FLAG )		1121551	0					
ANR	1121664	Callee	BR_Z		1121551	0					
ANR	1121665	Identifier	BR_Z		1121551	0					
ANR	1121666	ArgumentList	ULESS_FLAG		1121551	1					
ANR	1121667	Argument	ULESS_FLAG		1121551	0					
ANR	1121668	Identifier	ULESS_FLAG		1121551	0					
ANR	1121669	BreakStatement	break ;	2429:2:73330:73335	1121551	8	True				
ANR	1121670	Label	case SLJIT_GREATER_EQUAL :	2430:1:73338:73362	1121551	9	True				
ANR	1121671	Identifier	SLJIT_GREATER_EQUAL		1121551	0					
ANR	1121672	ExpressionStatement	BR_NZ ( ULESS_FLAG )	2431:2:73366:73383	1121551	10	True				
ANR	1121673	CallExpression	BR_NZ ( ULESS_FLAG )		1121551	0					
ANR	1121674	Callee	BR_NZ		1121551	0					
ANR	1121675	Identifier	BR_NZ		1121551	0					
ANR	1121676	ArgumentList	ULESS_FLAG		1121551	1					
ANR	1121677	Argument	ULESS_FLAG		1121551	0					
ANR	1121678	Identifier	ULESS_FLAG		1121551	0					
ANR	1121679	BreakStatement	break ;	2432:2:73387:73392	1121551	11	True				
ANR	1121680	Label	case SLJIT_GREATER :	2433:1:73395:73413	1121551	12	True				
ANR	1121681	Identifier	SLJIT_GREATER		1121551	0					
ANR	1121682	ExpressionStatement	BR_Z ( UGREATER_FLAG )	2434:2:73417:73436	1121551	13	True				
ANR	1121683	CallExpression	BR_Z ( UGREATER_FLAG )		1121551	0					
ANR	1121684	Callee	BR_Z		1121551	0					
ANR	1121685	Identifier	BR_Z		1121551	0					
ANR	1121686	ArgumentList	UGREATER_FLAG		1121551	1					
ANR	1121687	Argument	UGREATER_FLAG		1121551	0					
ANR	1121688	Identifier	UGREATER_FLAG		1121551	0					
ANR	1121689	BreakStatement	break ;	2435:2:73440:73445	1121551	14	True				
ANR	1121690	Label	case SLJIT_LESS_EQUAL :	2436:1:73448:73469	1121551	15	True				
ANR	1121691	Identifier	SLJIT_LESS_EQUAL		1121551	0					
ANR	1121692	ExpressionStatement	BR_NZ ( UGREATER_FLAG )	2437:2:73473:73493	1121551	16	True				
ANR	1121693	CallExpression	BR_NZ ( UGREATER_FLAG )		1121551	0					
ANR	1121694	Callee	BR_NZ		1121551	0					
ANR	1121695	Identifier	BR_NZ		1121551	0					
ANR	1121696	ArgumentList	UGREATER_FLAG		1121551	1					
ANR	1121697	Argument	UGREATER_FLAG		1121551	0					
ANR	1121698	Identifier	UGREATER_FLAG		1121551	0					
ANR	1121699	BreakStatement	break ;	2438:2:73497:73502	1121551	17	True				
ANR	1121700	Label	case SLJIT_SIG_LESS :	2439:1:73505:73524	1121551	18	True				
ANR	1121701	Identifier	SLJIT_SIG_LESS		1121551	0					
ANR	1121702	ExpressionStatement	BR_Z ( LESS_FLAG )	2440:2:73528:73543	1121551	19	True				
ANR	1121703	CallExpression	BR_Z ( LESS_FLAG )		1121551	0					
ANR	1121704	Callee	BR_Z		1121551	0					
ANR	1121705	Identifier	BR_Z		1121551	0					
ANR	1121706	ArgumentList	LESS_FLAG		1121551	1					
ANR	1121707	Argument	LESS_FLAG		1121551	0					
ANR	1121708	Identifier	LESS_FLAG		1121551	0					
ANR	1121709	BreakStatement	break ;	2441:2:73547:73552	1121551	20	True				
ANR	1121710	Label	case SLJIT_SIG_GREATER_EQUAL :	2442:1:73555:73583	1121551	21	True				
ANR	1121711	Identifier	SLJIT_SIG_GREATER_EQUAL		1121551	0					
ANR	1121712	ExpressionStatement	BR_NZ ( LESS_FLAG )	2443:2:73587:73603	1121551	22	True				
ANR	1121713	CallExpression	BR_NZ ( LESS_FLAG )		1121551	0					
ANR	1121714	Callee	BR_NZ		1121551	0					
ANR	1121715	Identifier	BR_NZ		1121551	0					
ANR	1121716	ArgumentList	LESS_FLAG		1121551	1					
ANR	1121717	Argument	LESS_FLAG		1121551	0					
ANR	1121718	Identifier	LESS_FLAG		1121551	0					
ANR	1121719	BreakStatement	break ;	2444:2:73607:73612	1121551	23	True				
ANR	1121720	Label	case SLJIT_SIG_GREATER :	2445:1:73615:73637	1121551	24	True				
ANR	1121721	Identifier	SLJIT_SIG_GREATER		1121551	0					
ANR	1121722	ExpressionStatement	BR_Z ( GREATER_FLAG )	2446:2:73641:73659	1121551	25	True				
ANR	1121723	CallExpression	BR_Z ( GREATER_FLAG )		1121551	0					
ANR	1121724	Callee	BR_Z		1121551	0					
ANR	1121725	Identifier	BR_Z		1121551	0					
ANR	1121726	ArgumentList	GREATER_FLAG		1121551	1					
ANR	1121727	Argument	GREATER_FLAG		1121551	0					
ANR	1121728	Identifier	GREATER_FLAG		1121551	0					
ANR	1121729	BreakStatement	break ;	2447:2:73663:73668	1121551	26	True				
ANR	1121730	Label	case SLJIT_SIG_LESS_EQUAL :	2448:1:73671:73696	1121551	27	True				
ANR	1121731	Identifier	SLJIT_SIG_LESS_EQUAL		1121551	0					
ANR	1121732	ExpressionStatement	BR_NZ ( GREATER_FLAG )	2449:2:73700:73719	1121551	28	True				
ANR	1121733	CallExpression	BR_NZ ( GREATER_FLAG )		1121551	0					
ANR	1121734	Callee	BR_NZ		1121551	0					
ANR	1121735	Identifier	BR_NZ		1121551	0					
ANR	1121736	ArgumentList	GREATER_FLAG		1121551	1					
ANR	1121737	Argument	GREATER_FLAG		1121551	0					
ANR	1121738	Identifier	GREATER_FLAG		1121551	0					
ANR	1121739	BreakStatement	break ;	2450:2:73723:73728	1121551	29	True				
ANR	1121740	Label	case SLJIT_OVERFLOW :	2451:1:73731:73750	1121551	30	True				
ANR	1121741	Identifier	SLJIT_OVERFLOW		1121551	0					
ANR	1121742	Label	case SLJIT_MUL_OVERFLOW :	2452:1:73753:73776	1121551	31	True				
ANR	1121743	Identifier	SLJIT_MUL_OVERFLOW		1121551	0					
ANR	1121744	ExpressionStatement	BR_Z ( OVERFLOW_FLAG )	2453:2:73780:73799	1121551	32	True				
ANR	1121745	CallExpression	BR_Z ( OVERFLOW_FLAG )		1121551	0					
ANR	1121746	Callee	BR_Z		1121551	0					
ANR	1121747	Identifier	BR_Z		1121551	0					
ANR	1121748	ArgumentList	OVERFLOW_FLAG		1121551	1					
ANR	1121749	Argument	OVERFLOW_FLAG		1121551	0					
ANR	1121750	Identifier	OVERFLOW_FLAG		1121551	0					
ANR	1121751	BreakStatement	break ;	2454:2:73803:73808	1121551	33	True				
ANR	1121752	Label	case SLJIT_NOT_OVERFLOW :	2455:1:73811:73834	1121551	34	True				
ANR	1121753	Identifier	SLJIT_NOT_OVERFLOW		1121551	0					
ANR	1121754	Label	case SLJIT_MUL_NOT_OVERFLOW :	2456:1:73837:73864	1121551	35	True				
ANR	1121755	Identifier	SLJIT_MUL_NOT_OVERFLOW		1121551	0					
ANR	1121756	ExpressionStatement	BR_NZ ( OVERFLOW_FLAG )	2457:2:73868:73888	1121551	36	True				
ANR	1121757	CallExpression	BR_NZ ( OVERFLOW_FLAG )		1121551	0					
ANR	1121758	Callee	BR_NZ		1121551	0					
ANR	1121759	Identifier	BR_NZ		1121551	0					
ANR	1121760	ArgumentList	OVERFLOW_FLAG		1121551	1					
ANR	1121761	Argument	OVERFLOW_FLAG		1121551	0					
ANR	1121762	Identifier	OVERFLOW_FLAG		1121551	0					
ANR	1121763	BreakStatement	break ;	2458:2:73892:73897	1121551	37	True				
ANR	1121764	Label	default :	2459:1:73900:73907	1121551	38	True				
ANR	1121765	Identifier	default		1121551	0					
ANR	1121766	ExpressionStatement	inst = 0	2461:2:73943:73951	1121551	39	True				
ANR	1121767	AssignmentExpression	inst = 0		1121551	0		=			
ANR	1121768	Identifier	inst		1121551	0					
ANR	1121769	PrimaryExpression	0		1121551	1					
ANR	1121770	BreakStatement	break ;	2462:2:73955:73960	1121551	40	True				
ANR	1121771	ExpressionStatement	jump -> flags |= flags	2465:1:73967:73987	1121551	11	True				
ANR	1121772	AssignmentExpression	jump -> flags |= flags		1121551	0		|=			
ANR	1121773	PtrMemberAccess	jump -> flags		1121551	0					
ANR	1121774	Identifier	jump		1121551	0					
ANR	1121775	Identifier	flags		1121551	1					
ANR	1121776	Identifier	flags		1121551	1					
ANR	1121777	IfStatement	if ( inst )		1121551	12					
ANR	1121778	Condition	inst	2467:5:73995:73998	1121551	0	True				
ANR	1121779	Identifier	inst		1121551	0					
ANR	1121780	CompoundStatement		63:11:1166:1166	1121551	1					
ANR	1121781	ExpressionStatement	inst = inst | ( ( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 ) )	2468:2:74005:74067	1121551	0	True				
ANR	1121782	AssignmentExpression	inst = inst | ( ( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 ) )		1121551	0		=			
ANR	1121783	Identifier	inst		1121551	0					
ANR	1121784	InclusiveOrExpression	inst | ( ( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 ) )		1121551	1		|			
ANR	1121785	Identifier	inst		1121551	0					
ANR	1121786	ConditionalExpression	( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 )		1121551	1					
ANR	1121787	Condition	type <= SLJIT_JUMP		1121551	0					
ANR	1121788	RelationalExpression	type <= SLJIT_JUMP		1121551	0		<=			
ANR	1121789	Identifier	type		1121551	0					
ANR	1121790	Identifier	SLJIT_JUMP		1121551	1					
ANR	1121791	CallExpression	BOFF_X1 ( 5 )		1121551	1					
ANR	1121792	Callee	BOFF_X1		1121551	0					
ANR	1121793	Identifier	BOFF_X1		1121551	0					
ANR	1121794	ArgumentList	5		1121551	1					
ANR	1121795	Argument	5		1121551	0					
ANR	1121796	PrimaryExpression	5		1121551	0					
ANR	1121797	CallExpression	BOFF_X1 ( 6 )		1121551	2					
ANR	1121798	Callee	BOFF_X1		1121551	0					
ANR	1121799	Identifier	BOFF_X1		1121551	0					
ANR	1121800	ArgumentList	6		1121551	1					
ANR	1121801	Argument	6		1121551	0					
ANR	1121802	PrimaryExpression	6		1121551	0					
ANR	1121803	ExpressionStatement	PTR_FAIL_IF ( PI ( inst ) )	2469:2:74071:74092	1121551	1	True				
ANR	1121804	CallExpression	PTR_FAIL_IF ( PI ( inst ) )		1121551	0					
ANR	1121805	Callee	PTR_FAIL_IF		1121551	0					
ANR	1121806	Identifier	PTR_FAIL_IF		1121551	0					
ANR	1121807	ArgumentList	PI ( inst )		1121551	1					
ANR	1121808	Argument	PI ( inst )		1121551	0					
ANR	1121809	CallExpression	PI ( inst )		1121551	0					
ANR	1121810	Callee	PI		1121551	0					
ANR	1121811	Identifier	PI		1121551	0					
ANR	1121812	ArgumentList	inst		1121551	1					
ANR	1121813	Argument	inst		1121551	0					
ANR	1121814	Identifier	inst		1121551	0					
ANR	1121815	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"	2472:1:74099:74155	1121551	13	True				
ANR	1121816	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"		1121551	0					
ANR	1121817	Callee	PTR_FAIL_IF		1121551	0					
ANR	1121818	Identifier	PTR_FAIL_IF		1121551	0					
ANR	1121819	ArgumentList	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1121551	1					
ANR	1121820	Argument	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1121551	0					
ANR	1121821	CallExpression	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1121551	0					
ANR	1121822	Callee	emit_const		1121551	0					
ANR	1121823	Identifier	emit_const		1121551	0					
ANR	1121824	ArgumentList	compiler		1121551	1					
ANR	1121825	Argument	compiler		1121551	0					
ANR	1121826	Identifier	compiler		1121551	0					
ANR	1121827	Argument	TMP_REG2_mapped		1121551	1					
ANR	1121828	Identifier	TMP_REG2_mapped		1121551	0					
ANR	1121829	Argument	0		1121551	2					
ANR	1121830	PrimaryExpression	0		1121551	0					
ANR	1121831	Argument	1		1121551	3					
ANR	1121832	PrimaryExpression	1		1121551	0					
ANR	1121833	IfStatement	if ( type <= SLJIT_JUMP )		1121551	14					
ANR	1121834	Condition	type <= SLJIT_JUMP	2473:5:74162:74179	1121551	0	True				
ANR	1121835	RelationalExpression	type <= SLJIT_JUMP		1121551	0		<=			
ANR	1121836	Identifier	type		1121551	0					
ANR	1121837	Identifier	SLJIT_JUMP		1121551	1					
ANR	1121838	CompoundStatement		69:25:1347:1347	1121551	1					
ANR	1121839	ExpressionStatement	jump -> addr = compiler -> size	2474:2:74186:74213	1121551	0	True				
ANR	1121840	AssignmentExpression	jump -> addr = compiler -> size		1121551	0		=			
ANR	1121841	PtrMemberAccess	jump -> addr		1121551	0					
ANR	1121842	Identifier	jump		1121551	0					
ANR	1121843	Identifier	addr		1121551	1					
ANR	1121844	PtrMemberAccess	compiler -> size		1121551	1					
ANR	1121845	Identifier	compiler		1121551	0					
ANR	1121846	Identifier	size		1121551	1					
ANR	1121847	ExpressionStatement	PTR_FAIL_IF ( JR_SOLO ( TMP_REG2_mapped ) )	2475:2:74217:74254	1121551	1	True				
ANR	1121848	CallExpression	PTR_FAIL_IF ( JR_SOLO ( TMP_REG2_mapped ) )		1121551	0					
ANR	1121849	Callee	PTR_FAIL_IF		1121551	0					
ANR	1121850	Identifier	PTR_FAIL_IF		1121551	0					
ANR	1121851	ArgumentList	JR_SOLO ( TMP_REG2_mapped )		1121551	1					
ANR	1121852	Argument	JR_SOLO ( TMP_REG2_mapped )		1121551	0					
ANR	1121853	CallExpression	JR_SOLO ( TMP_REG2_mapped )		1121551	0					
ANR	1121854	Callee	JR_SOLO		1121551	0					
ANR	1121855	Identifier	JR_SOLO		1121551	0					
ANR	1121856	ArgumentList	TMP_REG2_mapped		1121551	1					
ANR	1121857	Argument	TMP_REG2_mapped		1121551	0					
ANR	1121858	Identifier	TMP_REG2_mapped		1121551	0					
ANR	1121859	ElseStatement	else		1121551	0					
ANR	1121860	CompoundStatement		72:8:1429:1429	1121551	0					
ANR	1121861	ExpressionStatement	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )	2477:2:74268:74337	1121551	0	True				
ANR	1121862	CallExpression	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )		1121551	0					
ANR	1121863	Callee	SLJIT_ASSERT		1121551	0					
ANR	1121864	Identifier	SLJIT_ASSERT		1121551	0					
ANR	1121865	ArgumentList	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1121551	1					
ANR	1121866	Argument	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1121551	0					
ANR	1121867	AndExpression	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1121551	0		&&			
ANR	1121868	EqualityExpression	reg_map [ PIC_ADDR_REG ] == 16		1121551	0		==			
ANR	1121869	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1121551	0					
ANR	1121870	Identifier	reg_map		1121551	0					
ANR	1121871	Identifier	PIC_ADDR_REG		1121551	1					
ANR	1121872	PrimaryExpression	16		1121551	1					
ANR	1121873	EqualityExpression	PIC_ADDR_REG == TMP_REG2		1121551	1		==			
ANR	1121874	Identifier	PIC_ADDR_REG		1121551	0					
ANR	1121875	Identifier	TMP_REG2		1121551	1					
ANR	1121876	ExpressionStatement	jump -> flags |= IS_JAL | ( type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0 )	2479:2:74394:74467	1121551	1	True				
ANR	1121877	AssignmentExpression	jump -> flags |= IS_JAL | ( type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0 )		1121551	0		|=			
ANR	1121878	PtrMemberAccess	jump -> flags		1121551	0					
ANR	1121879	Identifier	jump		1121551	0					
ANR	1121880	Identifier	flags		1121551	1					
ANR	1121881	InclusiveOrExpression	IS_JAL | ( type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0 )		1121551	1		|			
ANR	1121882	Identifier	IS_JAL		1121551	0					
ANR	1121883	ConditionalExpression	type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0		1121551	1					
ANR	1121884	Condition	type >= SLJIT_CALL0		1121551	0					
ANR	1121885	RelationalExpression	type >= SLJIT_CALL0		1121551	0		>=			
ANR	1121886	Identifier	type		1121551	0					
ANR	1121887	Identifier	SLJIT_CALL0		1121551	1					
ANR	1121888	Identifier	SLJIT_REWRITABLE_JUMP		1121551	1					
ANR	1121889	PrimaryExpression	0		1121551	2					
ANR	1121890	ExpressionStatement	"PTR_FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"	2480:2:74471:74520	1121551	2	True				
ANR	1121891	CallExpression	"PTR_FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"		1121551	0					
ANR	1121892	Callee	PTR_FAIL_IF		1121551	0					
ANR	1121893	Identifier	PTR_FAIL_IF		1121551	0					
ANR	1121894	ArgumentList	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1121551	1					
ANR	1121895	Argument	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1121551	0					
ANR	1121896	CallExpression	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1121551	0					
ANR	1121897	Callee	ADD_SOLO		1121551	0					
ANR	1121898	Identifier	ADD_SOLO		1121551	0					
ANR	1121899	ArgumentList	0		1121551	1					
ANR	1121900	Argument	0		1121551	0					
ANR	1121901	PrimaryExpression	0		1121551	0					
ANR	1121902	Argument	reg_map [ SLJIT_R0 ]		1121551	1					
ANR	1121903	ArrayIndexing	reg_map [ SLJIT_R0 ]		1121551	0					
ANR	1121904	Identifier	reg_map		1121551	0					
ANR	1121905	Identifier	SLJIT_R0		1121551	1					
ANR	1121906	Argument	ZERO		1121551	2					
ANR	1121907	Identifier	ZERO		1121551	0					
ANR	1121908	ExpressionStatement	jump -> addr = compiler -> size	2481:2:74524:74551	1121551	3	True				
ANR	1121909	AssignmentExpression	jump -> addr = compiler -> size		1121551	0		=			
ANR	1121910	PtrMemberAccess	jump -> addr		1121551	0					
ANR	1121911	Identifier	jump		1121551	0					
ANR	1121912	Identifier	addr		1121551	1					
ANR	1121913	PtrMemberAccess	compiler -> size		1121551	1					
ANR	1121914	Identifier	compiler		1121551	0					
ANR	1121915	Identifier	size		1121551	1					
ANR	1121916	ExpressionStatement	PTR_FAIL_IF ( JALR_SOLO ( TMP_REG2_mapped ) )	2482:2:74555:74594	1121551	4	True				
ANR	1121917	CallExpression	PTR_FAIL_IF ( JALR_SOLO ( TMP_REG2_mapped ) )		1121551	0					
ANR	1121918	Callee	PTR_FAIL_IF		1121551	0					
ANR	1121919	Identifier	PTR_FAIL_IF		1121551	0					
ANR	1121920	ArgumentList	JALR_SOLO ( TMP_REG2_mapped )		1121551	1					
ANR	1121921	Argument	JALR_SOLO ( TMP_REG2_mapped )		1121551	0					
ANR	1121922	CallExpression	JALR_SOLO ( TMP_REG2_mapped )		1121551	0					
ANR	1121923	Callee	JALR_SOLO		1121551	0					
ANR	1121924	Identifier	JALR_SOLO		1121551	0					
ANR	1121925	ArgumentList	TMP_REG2_mapped		1121551	1					
ANR	1121926	Argument	TMP_REG2_mapped		1121551	0					
ANR	1121927	Identifier	TMP_REG2_mapped		1121551	0					
ANR	1121928	ReturnStatement	return jump ;	2485:1:74601:74612	1121551	15	True				
ANR	1121929	Identifier	jump		1121551	0					
ANR	1121930	ReturnType	struct sljit_jump *		1121551	1					
ANR	1121931	Identifier	sljit_emit_jump		1121551	2					
ANR	1121932	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1121551	3					
ANR	1121933	Parameter	struct sljit_compiler * compiler	2404:61:72786:72816	1121551	0	True				
ANR	1121934	ParameterType	struct sljit_compiler *		1121551	0					
ANR	1121935	Identifier	compiler		1121551	1					
ANR	1121936	Parameter	sljit_si type	2404:94:72819:72831	1121551	1	True				
ANR	1121937	ParameterType	sljit_si		1121551	0					
ANR	1121938	Identifier	type		1121551	1					
ANR	1121939	CFGEntryNode	ENTRY		1121551		True				
ANR	1121940	CFGExitNode	EXIT		1121551		True				
ANR	1121941	Symbol	EQUAL_FLAG		1121551						
ANR	1121942	Symbol	TMP_REG2		1121551						
ANR	1121943	Symbol	ZERO		1121551						
ANR	1121944	Symbol	SLJIT_JUMP		1121551						
ANR	1121945	Symbol	* jump		1121551						
ANR	1121946	Symbol	flags		1121551						
ANR	1121947	Symbol	jump -> flags		1121551						
ANR	1121948	Symbol	reg_map		1121551						
ANR	1121949	Symbol	* compiler		1121551						
ANR	1121950	Symbol	type		1121551						
ANR	1121951	Symbol	SLJIT_R0		1121551						
ANR	1121952	Symbol	ULESS_FLAG		1121551						
ANR	1121953	Symbol	GREATER_FLAG		1121551						
ANR	1121954	Symbol	SLJIT_REWRITABLE_JUMP		1121551						
ANR	1121955	Symbol	compiler		1121551						
ANR	1121956	Symbol	TMP_REG2_mapped		1121551						
ANR	1121957	Symbol	jump		1121551						
ANR	1121958	Symbol	* SLJIT_R0		1121551						
ANR	1121959	Symbol	ADD_SOLO		1121551						
ANR	1121960	Symbol	SLJIT_CALL0		1121551						
ANR	1121961	Symbol	UGREATER_FLAG		1121551						
ANR	1121962	Symbol	jump -> addr		1121551						
ANR	1121963	Symbol	JR_SOLO		1121551						
ANR	1121964	Symbol	ensure_abuf		1121551						
ANR	1121965	Symbol	* reg_map		1121551						
ANR	1121966	Symbol	BOFF_X1		1121551						
ANR	1121967	Symbol	IS_JAL		1121551						
ANR	1121968	Symbol	compiler -> size		1121551						
ANR	1121969	Symbol	inst		1121551						
ANR	1121970	Symbol	LESS_FLAG		1121551						
ANR	1121971	Symbol	check_sljit_emit_jump		1121551						
ANR	1121972	Symbol	* PIC_ADDR_REG		1121551						
ANR	1121973	Symbol	PI		1121551						
ANR	1121974	Symbol	emit_const		1121551						
ANR	1121975	Symbol	JALR_SOLO		1121551						
ANR	1121976	Symbol	OVERFLOW_FLAG		1121551						
ANR	1121977	Symbol	PIC_ADDR_REG		1121551						
ANR	1121978	Function	sljit_is_fpu_available	2488:0:74617:74693							
ANR	1121979	FunctionDef	sljit_is_fpu_available ()		1121978	0					
ANR	1121980	CompoundStatement		2489:0:74680:74693	1121978	0					
ANR	1121981	ReturnStatement	return 0 ;	2490:1:74683:74691	1121978	0	True				
ANR	1121982	PrimaryExpression	0		1121978	0					
ANR	1121983	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1121978	1					
ANR	1121984	Identifier	sljit_is_fpu_available		1121978	2					
ANR	1121985	ParameterList			1121978	3					
ANR	1121986	CFGEntryNode	ENTRY		1121978		True				
ANR	1121987	CFGExitNode	EXIT		1121978		True				
ANR	1121988	Function	sljit_emit_fop1	2493:0:74696:74874							
ANR	1121989	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1121988	0					
ANR	1121990	CompoundStatement		2494:0:74850:74874	1121988	0					
ANR	1121991	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2495:1:74853:74872	1121988	0	True				
ANR	1121992	CallExpression	SLJIT_ASSERT_STOP ( )		1121988	0					
ANR	1121993	Callee	SLJIT_ASSERT_STOP		1121988	0					
ANR	1121994	Identifier	SLJIT_ASSERT_STOP		1121988	0					
ANR	1121995	ArgumentList			1121988	1					
ANR	1121996	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1121988	1					
ANR	1121997	Identifier	sljit_emit_fop1		1121988	2					
ANR	1121998	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1121988	3					
ANR	1121999	Parameter	struct sljit_compiler * compiler	2493:50:74746:74776	1121988	0	True				
ANR	1122000	ParameterType	struct sljit_compiler *		1121988	0					
ANR	1122001	Identifier	compiler		1121988	1					
ANR	1122002	Parameter	sljit_si op	2493:83:74779:74789	1121988	1	True				
ANR	1122003	ParameterType	sljit_si		1121988	0					
ANR	1122004	Identifier	op		1121988	1					
ANR	1122005	Parameter	sljit_si dst	2493:96:74792:74803	1121988	2	True				
ANR	1122006	ParameterType	sljit_si		1121988	0					
ANR	1122007	Identifier	dst		1121988	1					
ANR	1122008	Parameter	sljit_sw dstw	2493:110:74806:74818	1121988	3	True				
ANR	1122009	ParameterType	sljit_sw		1121988	0					
ANR	1122010	Identifier	dstw		1121988	1					
ANR	1122011	Parameter	sljit_si src	2493:125:74821:74832	1121988	4	True				
ANR	1122012	ParameterType	sljit_si		1121988	0					
ANR	1122013	Identifier	src		1121988	1					
ANR	1122014	Parameter	sljit_sw srcw	2493:139:74835:74847	1121988	5	True				
ANR	1122015	ParameterType	sljit_sw		1121988	0					
ANR	1122016	Identifier	srcw		1121988	1					
ANR	1122017	CFGEntryNode	ENTRY		1121988		True				
ANR	1122018	CFGExitNode	EXIT		1121988		True				
ANR	1122019	Symbol	op		1121988						
ANR	1122020	Symbol	dst		1121988						
ANR	1122021	Symbol	src		1121988						
ANR	1122022	Symbol	srcw		1121988						
ANR	1122023	Symbol	compiler		1121988						
ANR	1122024	Symbol	dstw		1121988						
ANR	1122025	Function	sljit_emit_fop2	2498:0:74877:75088							
ANR	1122026	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1122025	0					
ANR	1122027	CompoundStatement		2499:0:75064:75088	1122025	0					
ANR	1122028	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2500:1:75067:75086	1122025	0	True				
ANR	1122029	CallExpression	SLJIT_ASSERT_STOP ( )		1122025	0					
ANR	1122030	Callee	SLJIT_ASSERT_STOP		1122025	0					
ANR	1122031	Identifier	SLJIT_ASSERT_STOP		1122025	0					
ANR	1122032	ArgumentList			1122025	1					
ANR	1122033	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1122025	1					
ANR	1122034	Identifier	sljit_emit_fop2		1122025	2					
ANR	1122035	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1122025	3					
ANR	1122036	Parameter	struct sljit_compiler * compiler	2498:50:74927:74957	1122025	0	True				
ANR	1122037	ParameterType	struct sljit_compiler *		1122025	0					
ANR	1122038	Identifier	compiler		1122025	1					
ANR	1122039	Parameter	sljit_si op	2498:83:74960:74970	1122025	1	True				
ANR	1122040	ParameterType	sljit_si		1122025	0					
ANR	1122041	Identifier	op		1122025	1					
ANR	1122042	Parameter	sljit_si dst	2498:96:74973:74984	1122025	2	True				
ANR	1122043	ParameterType	sljit_si		1122025	0					
ANR	1122044	Identifier	dst		1122025	1					
ANR	1122045	Parameter	sljit_sw dstw	2498:110:74987:74999	1122025	3	True				
ANR	1122046	ParameterType	sljit_sw		1122025	0					
ANR	1122047	Identifier	dstw		1122025	1					
ANR	1122048	Parameter	sljit_si src1	2498:125:75002:75014	1122025	4	True				
ANR	1122049	ParameterType	sljit_si		1122025	0					
ANR	1122050	Identifier	src1		1122025	1					
ANR	1122051	Parameter	sljit_sw src1w	2498:140:75017:75030	1122025	5	True				
ANR	1122052	ParameterType	sljit_sw		1122025	0					
ANR	1122053	Identifier	src1w		1122025	1					
ANR	1122054	Parameter	sljit_si src2	2498:156:75033:75045	1122025	6	True				
ANR	1122055	ParameterType	sljit_si		1122025	0					
ANR	1122056	Identifier	src2		1122025	1					
ANR	1122057	Parameter	sljit_sw src2w	2498:171:75048:75061	1122025	7	True				
ANR	1122058	ParameterType	sljit_sw		1122025	0					
ANR	1122059	Identifier	src2w		1122025	1					
ANR	1122060	CFGEntryNode	ENTRY		1122025		True				
ANR	1122061	CFGExitNode	EXIT		1122025		True				
ANR	1122062	Symbol	src2w		1122025						
ANR	1122063	Symbol	op		1122025						
ANR	1122064	Symbol	src1w		1122025						
ANR	1122065	Symbol	dst		1122025						
ANR	1122066	Symbol	src1		1122025						
ANR	1122067	Symbol	src2		1122025						
ANR	1122068	Symbol	compiler		1122025						
ANR	1122069	Symbol	dstw		1122025						
ANR	1122070	Function	sljit_emit_const	2503:25:75116:75804							
ANR	1122071	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1122070	0					
ANR	1122072	CompoundStatement		2504:0:75237:75804	1122070	0					
ANR	1122073	IdentifierDeclStatement	struct sljit_const * const_ ;	2505:1:75240:75266	1122070	0	True				
ANR	1122074	IdentifierDecl	* const_		1122070	0					
ANR	1122075	IdentifierDeclType	struct sljit_const *		1122070	0					
ANR	1122076	Identifier	const_		1122070	1					
ANR	1122077	IdentifierDeclStatement	sljit_si reg ;	2506:1:75269:75281	1122070	1	True				
ANR	1122078	IdentifierDecl	reg		1122070	0					
ANR	1122079	IdentifierDeclType	sljit_si		1122070	0					
ANR	1122080	Identifier	reg		1122070	1					
ANR	1122081	ExpressionStatement	flush_buffer ( compiler )	2508:1:75285:75307	1122070	2	True				
ANR	1122082	CallExpression	flush_buffer ( compiler )		1122070	0					
ANR	1122083	Callee	flush_buffer		1122070	0					
ANR	1122084	Identifier	flush_buffer		1122070	0					
ANR	1122085	ArgumentList	compiler		1122070	1					
ANR	1122086	Argument	compiler		1122070	0					
ANR	1122087	Identifier	compiler		1122070	0					
ANR	1122088	ExpressionStatement	CHECK_ERROR_PTR ( )	2510:1:75311:75328	1122070	3	True				
ANR	1122089	CallExpression	CHECK_ERROR_PTR ( )		1122070	0					
ANR	1122090	Callee	CHECK_ERROR_PTR		1122070	0					
ANR	1122091	Identifier	CHECK_ERROR_PTR		1122070	0					
ANR	1122092	ArgumentList			1122070	1					
ANR	1122093	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2511:1:75331:75397	1122070	4	True				
ANR	1122094	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1122070	0					
ANR	1122095	Callee	CHECK_PTR		1122070	0					
ANR	1122096	Identifier	CHECK_PTR		1122070	0					
ANR	1122097	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1122070	1					
ANR	1122098	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1122070	0					
ANR	1122099	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1122070	0					
ANR	1122100	Callee	check_sljit_emit_const		1122070	0					
ANR	1122101	Identifier	check_sljit_emit_const		1122070	0					
ANR	1122102	ArgumentList	compiler		1122070	1					
ANR	1122103	Argument	compiler		1122070	0					
ANR	1122104	Identifier	compiler		1122070	0					
ANR	1122105	Argument	dst		1122070	1					
ANR	1122106	Identifier	dst		1122070	0					
ANR	1122107	Argument	dstw		1122070	2					
ANR	1122108	Identifier	dstw		1122070	0					
ANR	1122109	Argument	init_value		1122070	3					
ANR	1122110	Identifier	init_value		1122070	0					
ANR	1122111	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2512:1:75400:75430	1122070	5	True				
ANR	1122112	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1122070	0					
ANR	1122113	Callee	ADJUST_LOCAL_OFFSET		1122070	0					
ANR	1122114	Identifier	ADJUST_LOCAL_OFFSET		1122070	0					
ANR	1122115	ArgumentList	dst		1122070	1					
ANR	1122116	Argument	dst		1122070	0					
ANR	1122117	Identifier	dst		1122070	0					
ANR	1122118	Argument	dstw		1122070	1					
ANR	1122119	Identifier	dstw		1122070	0					
ANR	1122120	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2514:1:75434:75514	1122070	6	True				
ANR	1122121	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1122070	0		=			
ANR	1122122	Identifier	const_		1122070	0					
ANR	1122123	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1122070	1					
ANR	1122124	CastTarget	struct sljit_const *		1122070	0					
ANR	1122125	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1122070	1					
ANR	1122126	Callee	ensure_abuf		1122070	0					
ANR	1122127	Identifier	ensure_abuf		1122070	0					
ANR	1122128	ArgumentList	compiler		1122070	1					
ANR	1122129	Argument	compiler		1122070	0					
ANR	1122130	Identifier	compiler		1122070	0					
ANR	1122131	Argument	sizeof ( struct sljit_const )		1122070	1					
ANR	1122132	SizeofExpression	sizeof ( struct sljit_const )		1122070	0					
ANR	1122133	Sizeof	sizeof		1122070	0					
ANR	1122134	SizeofOperand	struct sljit_const		1122070	1					
ANR	1122135	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2515:1:75517:75537	1122070	7	True				
ANR	1122136	CallExpression	PTR_FAIL_IF ( ! const_ )		1122070	0					
ANR	1122137	Callee	PTR_FAIL_IF		1122070	0					
ANR	1122138	Identifier	PTR_FAIL_IF		1122070	0					
ANR	1122139	ArgumentList	! const_		1122070	1					
ANR	1122140	Argument	! const_		1122070	0					
ANR	1122141	UnaryOperationExpression	! const_		1122070	0					
ANR	1122142	UnaryOperator	!		1122070	0					
ANR	1122143	Identifier	const_		1122070	1					
ANR	1122144	ExpressionStatement	"set_const ( const_ , compiler )"	2516:1:75540:75567	1122070	8	True				
ANR	1122145	CallExpression	"set_const ( const_ , compiler )"		1122070	0					
ANR	1122146	Callee	set_const		1122070	0					
ANR	1122147	Identifier	set_const		1122070	0					
ANR	1122148	ArgumentList	const_		1122070	1					
ANR	1122149	Argument	const_		1122070	0					
ANR	1122150	Identifier	const_		1122070	0					
ANR	1122151	Argument	compiler		1122070	1					
ANR	1122152	Identifier	compiler		1122070	0					
ANR	1122153	ExpressionStatement	reg = FAST_IS_REG ( dst ) ? dst : TMP_REG2	2518:1:75571:75610	1122070	9	True				
ANR	1122154	AssignmentExpression	reg = FAST_IS_REG ( dst ) ? dst : TMP_REG2		1122070	0		=			
ANR	1122155	Identifier	reg		1122070	0					
ANR	1122156	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG2		1122070	1					
ANR	1122157	Condition	FAST_IS_REG ( dst )		1122070	0					
ANR	1122158	CallExpression	FAST_IS_REG ( dst )		1122070	0					
ANR	1122159	Callee	FAST_IS_REG		1122070	0					
ANR	1122160	Identifier	FAST_IS_REG		1122070	0					
ANR	1122161	ArgumentList	dst		1122070	1					
ANR	1122162	Argument	dst		1122070	0					
ANR	1122163	Identifier	dst		1122070	0					
ANR	1122164	Identifier	dst		1122070	1					
ANR	1122165	Identifier	TMP_REG2		1122070	2					
ANR	1122166	ExpressionStatement	"PTR_FAIL_IF ( emit_const_64 ( compiler , reg , init_value , 1 ) )"	2520:1:75614:75670	1122070	10	True				
ANR	1122167	CallExpression	"PTR_FAIL_IF ( emit_const_64 ( compiler , reg , init_value , 1 ) )"		1122070	0					
ANR	1122168	Callee	PTR_FAIL_IF		1122070	0					
ANR	1122169	Identifier	PTR_FAIL_IF		1122070	0					
ANR	1122170	ArgumentList	"emit_const_64 ( compiler , reg , init_value , 1 )"		1122070	1					
ANR	1122171	Argument	"emit_const_64 ( compiler , reg , init_value , 1 )"		1122070	0					
ANR	1122172	CallExpression	"emit_const_64 ( compiler , reg , init_value , 1 )"		1122070	0					
ANR	1122173	Callee	emit_const_64		1122070	0					
ANR	1122174	Identifier	emit_const_64		1122070	0					
ANR	1122175	ArgumentList	compiler		1122070	1					
ANR	1122176	Argument	compiler		1122070	0					
ANR	1122177	Identifier	compiler		1122070	0					
ANR	1122178	Argument	reg		1122070	1					
ANR	1122179	Identifier	reg		1122070	0					
ANR	1122180	Argument	init_value		1122070	2					
ANR	1122181	Identifier	init_value		1122070	0					
ANR	1122182	Argument	1		1122070	3					
ANR	1122183	PrimaryExpression	1		1122070	0					
ANR	1122184	IfStatement	if ( dst & SLJIT_MEM )		1122070	11					
ANR	1122185	Condition	dst & SLJIT_MEM	2522:5:75678:75692	1122070	0	True				
ANR	1122186	BitAndExpression	dst & SLJIT_MEM		1122070	0		&			
ANR	1122187	Identifier	dst		1122070	0					
ANR	1122188	Identifier	SLJIT_MEM		1122070	1					
ANR	1122189	ExpressionStatement	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"	2523:2:75697:75786	1122070	1	True				
ANR	1122190	CallExpression	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"		1122070	0					
ANR	1122191	Callee	PTR_FAIL_IF		1122070	0					
ANR	1122192	Identifier	PTR_FAIL_IF		1122070	0					
ANR	1122193	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1122070	1					
ANR	1122194	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1122070	0					
ANR	1122195	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1122070	0					
ANR	1122196	Callee	emit_op		1122070	0					
ANR	1122197	Identifier	emit_op		1122070	0					
ANR	1122198	ArgumentList	compiler		1122070	1					
ANR	1122199	Argument	compiler		1122070	0					
ANR	1122200	Identifier	compiler		1122070	0					
ANR	1122201	Argument	SLJIT_MOV		1122070	1					
ANR	1122202	Identifier	SLJIT_MOV		1122070	0					
ANR	1122203	Argument	WORD_DATA		1122070	2					
ANR	1122204	Identifier	WORD_DATA		1122070	0					
ANR	1122205	Argument	dst		1122070	3					
ANR	1122206	Identifier	dst		1122070	0					
ANR	1122207	Argument	dstw		1122070	4					
ANR	1122208	Identifier	dstw		1122070	0					
ANR	1122209	Argument	TMP_REG1		1122070	5					
ANR	1122210	Identifier	TMP_REG1		1122070	0					
ANR	1122211	Argument	0		1122070	6					
ANR	1122212	PrimaryExpression	0		1122070	0					
ANR	1122213	Argument	TMP_REG2		1122070	7					
ANR	1122214	Identifier	TMP_REG2		1122070	0					
ANR	1122215	Argument	0		1122070	8					
ANR	1122216	PrimaryExpression	0		1122070	0					
ANR	1122217	ReturnStatement	return const_ ;	2524:1:75789:75802	1122070	12	True				
ANR	1122218	Identifier	const_		1122070	0					
ANR	1122219	ReturnType	struct sljit_const *		1122070	1					
ANR	1122220	Identifier	sljit_emit_const		1122070	2					
ANR	1122221	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1122070	3					
ANR	1122222	Parameter	struct sljit_compiler * compiler	2503:63:75154:75184	1122070	0	True				
ANR	1122223	ParameterType	struct sljit_compiler *		1122070	0					
ANR	1122224	Identifier	compiler		1122070	1					
ANR	1122225	Parameter	sljit_si dst	2503:96:75187:75198	1122070	1	True				
ANR	1122226	ParameterType	sljit_si		1122070	0					
ANR	1122227	Identifier	dst		1122070	1					
ANR	1122228	Parameter	sljit_sw dstw	2503:110:75201:75213	1122070	2	True				
ANR	1122229	ParameterType	sljit_sw		1122070	0					
ANR	1122230	Identifier	dstw		1122070	1					
ANR	1122231	Parameter	sljit_sw init_value	2503:125:75216:75234	1122070	3	True				
ANR	1122232	ParameterType	sljit_sw		1122070	0					
ANR	1122233	Identifier	init_value		1122070	1					
ANR	1122234	CFGEntryNode	ENTRY		1122070		True				
ANR	1122235	CFGExitNode	EXIT		1122070		True				
ANR	1122236	Symbol	check_sljit_emit_const		1122070						
ANR	1122237	Symbol	TMP_REG2		1122070						
ANR	1122238	Symbol	TMP_REG1		1122070						
ANR	1122239	Symbol	const_		1122070						
ANR	1122240	Symbol	FAST_IS_REG		1122070						
ANR	1122241	Symbol	dst		1122070						
ANR	1122242	Symbol	SLJIT_MOV		1122070						
ANR	1122243	Symbol	SLJIT_MEM		1122070						
ANR	1122244	Symbol	ensure_abuf		1122070						
ANR	1122245	Symbol	emit_const_64		1122070						
ANR	1122246	Symbol	reg		1122070						
ANR	1122247	Symbol	compiler		1122070						
ANR	1122248	Symbol	init_value		1122070						
ANR	1122249	Symbol	dstw		1122070						
ANR	1122250	Symbol	WORD_DATA		1122070						
ANR	1122251	Symbol	emit_op		1122070						
ANR	1122252	Function	sljit_set_jump_addr	2527:0:75807:76197							
ANR	1122253	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1122252	0					
ANR	1122254	CompoundStatement		2528:0:75891:76197	1122252	0					
ANR	1122255	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	2529:1:75894:75929	1122252	0	True				
ANR	1122256	IdentifierDecl	* inst = ( sljit_ins * ) addr		1122252	0					
ANR	1122257	IdentifierDeclType	sljit_ins *		1122252	0					
ANR	1122258	Identifier	inst		1122252	1					
ANR	1122259	AssignmentExpression	* inst = ( sljit_ins * ) addr		1122252	2		=			
ANR	1122260	Identifier	inst		1122252	0					
ANR	1122261	CastExpression	( sljit_ins * ) addr		1122252	1					
ANR	1122262	CastTarget	sljit_ins *		1122252	0					
ANR	1122263	Identifier	addr		1122252	1					
ANR	1122264	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 32 ) & 0xffff ) << 43 )	2531:1:75933:76009	1122252	1	True				
ANR	1122265	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 32 ) & 0xffff ) << 43 )		1122252	0		=			
ANR	1122266	ArrayIndexing	inst [ 0 ]		1122252	0					
ANR	1122267	Identifier	inst		1122252	0					
ANR	1122268	PrimaryExpression	0		1122252	1					
ANR	1122269	InclusiveOrExpression	( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 32 ) & 0xffff ) << 43 )		1122252	1		|			
ANR	1122270	BitAndExpression	inst [ 0 ] & ~ ( 0xFFFFL << 43 )		1122252	0		&			
ANR	1122271	ArrayIndexing	inst [ 0 ]		1122252	0					
ANR	1122272	Identifier	inst		1122252	0					
ANR	1122273	PrimaryExpression	0		1122252	1					
ANR	1122274	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1122252	1					
ANR	1122275	UnaryOperator	~		1122252	0					
ANR	1122276	ShiftExpression	0xFFFFL << 43		1122252	1		<<			
ANR	1122277	PrimaryExpression	0xFFFFL		1122252	0					
ANR	1122278	PrimaryExpression	43		1122252	1					
ANR	1122279	ShiftExpression	( ( new_addr >> 32 ) & 0xffff ) << 43		1122252	1		<<			
ANR	1122280	BitAndExpression	( new_addr >> 32 ) & 0xffff		1122252	0		&			
ANR	1122281	ShiftExpression	new_addr >> 32		1122252	0		>>			
ANR	1122282	Identifier	new_addr		1122252	0					
ANR	1122283	PrimaryExpression	32		1122252	1					
ANR	1122284	PrimaryExpression	0xffff		1122252	1					
ANR	1122285	PrimaryExpression	43		1122252	1					
ANR	1122286	ExpressionStatement	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 16 ) & 0xffff ) << 43 )	2532:1:76012:76088	1122252	2	True				
ANR	1122287	AssignmentExpression	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 16 ) & 0xffff ) << 43 )		1122252	0		=			
ANR	1122288	ArrayIndexing	inst [ 1 ]		1122252	0					
ANR	1122289	Identifier	inst		1122252	0					
ANR	1122290	PrimaryExpression	1		1122252	1					
ANR	1122291	InclusiveOrExpression	( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 16 ) & 0xffff ) << 43 )		1122252	1		|			
ANR	1122292	BitAndExpression	inst [ 1 ] & ~ ( 0xFFFFL << 43 )		1122252	0		&			
ANR	1122293	ArrayIndexing	inst [ 1 ]		1122252	0					
ANR	1122294	Identifier	inst		1122252	0					
ANR	1122295	PrimaryExpression	1		1122252	1					
ANR	1122296	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1122252	1					
ANR	1122297	UnaryOperator	~		1122252	0					
ANR	1122298	ShiftExpression	0xFFFFL << 43		1122252	1		<<			
ANR	1122299	PrimaryExpression	0xFFFFL		1122252	0					
ANR	1122300	PrimaryExpression	43		1122252	1					
ANR	1122301	ShiftExpression	( ( new_addr >> 16 ) & 0xffff ) << 43		1122252	1		<<			
ANR	1122302	BitAndExpression	( new_addr >> 16 ) & 0xffff		1122252	0		&			
ANR	1122303	ShiftExpression	new_addr >> 16		1122252	0		>>			
ANR	1122304	Identifier	new_addr		1122252	0					
ANR	1122305	PrimaryExpression	16		1122252	1					
ANR	1122306	PrimaryExpression	0xffff		1122252	1					
ANR	1122307	PrimaryExpression	43		1122252	1					
ANR	1122308	ExpressionStatement	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_addr & 0xffff ) << 43 )	2533:1:76091:76159	1122252	3	True				
ANR	1122309	AssignmentExpression	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_addr & 0xffff ) << 43 )		1122252	0		=			
ANR	1122310	ArrayIndexing	inst [ 2 ]		1122252	0					
ANR	1122311	Identifier	inst		1122252	0					
ANR	1122312	PrimaryExpression	2		1122252	1					
ANR	1122313	InclusiveOrExpression	( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_addr & 0xffff ) << 43 )		1122252	1		|			
ANR	1122314	BitAndExpression	inst [ 2 ] & ~ ( 0xFFFFL << 43 )		1122252	0		&			
ANR	1122315	ArrayIndexing	inst [ 2 ]		1122252	0					
ANR	1122316	Identifier	inst		1122252	0					
ANR	1122317	PrimaryExpression	2		1122252	1					
ANR	1122318	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1122252	1					
ANR	1122319	UnaryOperator	~		1122252	0					
ANR	1122320	ShiftExpression	0xFFFFL << 43		1122252	1		<<			
ANR	1122321	PrimaryExpression	0xFFFFL		1122252	0					
ANR	1122322	PrimaryExpression	43		1122252	1					
ANR	1122323	ShiftExpression	( new_addr & 0xffff ) << 43		1122252	1		<<			
ANR	1122324	BitAndExpression	new_addr & 0xffff		1122252	0		&			
ANR	1122325	Identifier	new_addr		1122252	0					
ANR	1122326	PrimaryExpression	0xffff		1122252	1					
ANR	1122327	PrimaryExpression	43		1122252	1					
ANR	1122328	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 3 )"	2534:1:76162:76195	1122252	4	True				
ANR	1122329	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 3 )"		1122252	0					
ANR	1122330	Callee	SLJIT_CACHE_FLUSH		1122252	0					
ANR	1122331	Identifier	SLJIT_CACHE_FLUSH		1122252	0					
ANR	1122332	ArgumentList	inst		1122252	1					
ANR	1122333	Argument	inst		1122252	0					
ANR	1122334	Identifier	inst		1122252	0					
ANR	1122335	Argument	inst + 3		1122252	1					
ANR	1122336	AdditiveExpression	inst + 3		1122252	0		+			
ANR	1122337	Identifier	inst		1122252	0					
ANR	1122338	PrimaryExpression	3		1122252	1					
ANR	1122339	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1122252	1					
ANR	1122340	Identifier	sljit_set_jump_addr		1122252	2					
ANR	1122341	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1122252	3					
ANR	1122342	Parameter	sljit_uw addr	2527:50:75857:75869	1122252	0	True				
ANR	1122343	ParameterType	sljit_uw		1122252	0					
ANR	1122344	Identifier	addr		1122252	1					
ANR	1122345	Parameter	sljit_uw new_addr	2527:65:75872:75888	1122252	1	True				
ANR	1122346	ParameterType	sljit_uw		1122252	0					
ANR	1122347	Identifier	new_addr		1122252	1					
ANR	1122348	CFGEntryNode	ENTRY		1122252		True				
ANR	1122349	CFGExitNode	EXIT		1122252		True				
ANR	1122350	Symbol	* inst		1122252						
ANR	1122351	Symbol	inst		1122252						
ANR	1122352	Symbol	addr		1122252						
ANR	1122353	Symbol	new_addr		1122252						
ANR	1122354	Function	sljit_set_const	2537:0:76200:76689							
ANR	1122355	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1122354	0					
ANR	1122356	CompoundStatement		2538:0:76284:76689	1122354	0					
ANR	1122357	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	2539:1:76287:76322	1122354	0	True				
ANR	1122358	IdentifierDecl	* inst = ( sljit_ins * ) addr		1122354	0					
ANR	1122359	IdentifierDeclType	sljit_ins *		1122354	0					
ANR	1122360	Identifier	inst		1122354	1					
ANR	1122361	AssignmentExpression	* inst = ( sljit_ins * ) addr		1122354	2		=			
ANR	1122362	Identifier	inst		1122354	0					
ANR	1122363	CastExpression	( sljit_ins * ) addr		1122354	1					
ANR	1122364	CastTarget	sljit_ins *		1122354	0					
ANR	1122365	Identifier	addr		1122354	1					
ANR	1122366	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 48 ) & 0xFFFFL ) << 43 )	2541:1:76326:76407	1122354	1	True				
ANR	1122367	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 48 ) & 0xFFFFL ) << 43 )		1122354	0		=			
ANR	1122368	ArrayIndexing	inst [ 0 ]		1122354	0					
ANR	1122369	Identifier	inst		1122354	0					
ANR	1122370	PrimaryExpression	0		1122354	1					
ANR	1122371	InclusiveOrExpression	( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 48 ) & 0xFFFFL ) << 43 )		1122354	1		|			
ANR	1122372	BitAndExpression	inst [ 0 ] & ~ ( 0xFFFFL << 43 )		1122354	0		&			
ANR	1122373	ArrayIndexing	inst [ 0 ]		1122354	0					
ANR	1122374	Identifier	inst		1122354	0					
ANR	1122375	PrimaryExpression	0		1122354	1					
ANR	1122376	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1122354	1					
ANR	1122377	UnaryOperator	~		1122354	0					
ANR	1122378	ShiftExpression	0xFFFFL << 43		1122354	1		<<			
ANR	1122379	PrimaryExpression	0xFFFFL		1122354	0					
ANR	1122380	PrimaryExpression	43		1122354	1					
ANR	1122381	ShiftExpression	( ( new_constant >> 48 ) & 0xFFFFL ) << 43		1122354	1		<<			
ANR	1122382	BitAndExpression	( new_constant >> 48 ) & 0xFFFFL		1122354	0		&			
ANR	1122383	ShiftExpression	new_constant >> 48		1122354	0		>>			
ANR	1122384	Identifier	new_constant		1122354	0					
ANR	1122385	PrimaryExpression	48		1122354	1					
ANR	1122386	PrimaryExpression	0xFFFFL		1122354	1					
ANR	1122387	PrimaryExpression	43		1122354	1					
ANR	1122388	ExpressionStatement	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 32 ) & 0xFFFFL ) << 43 )	2542:1:76410:76491	1122354	2	True				
ANR	1122389	AssignmentExpression	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 32 ) & 0xFFFFL ) << 43 )		1122354	0		=			
ANR	1122390	ArrayIndexing	inst [ 1 ]		1122354	0					
ANR	1122391	Identifier	inst		1122354	0					
ANR	1122392	PrimaryExpression	1		1122354	1					
ANR	1122393	InclusiveOrExpression	( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 32 ) & 0xFFFFL ) << 43 )		1122354	1		|			
ANR	1122394	BitAndExpression	inst [ 1 ] & ~ ( 0xFFFFL << 43 )		1122354	0		&			
ANR	1122395	ArrayIndexing	inst [ 1 ]		1122354	0					
ANR	1122396	Identifier	inst		1122354	0					
ANR	1122397	PrimaryExpression	1		1122354	1					
ANR	1122398	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1122354	1					
ANR	1122399	UnaryOperator	~		1122354	0					
ANR	1122400	ShiftExpression	0xFFFFL << 43		1122354	1		<<			
ANR	1122401	PrimaryExpression	0xFFFFL		1122354	0					
ANR	1122402	PrimaryExpression	43		1122354	1					
ANR	1122403	ShiftExpression	( ( new_constant >> 32 ) & 0xFFFFL ) << 43		1122354	1		<<			
ANR	1122404	BitAndExpression	( new_constant >> 32 ) & 0xFFFFL		1122354	0		&			
ANR	1122405	ShiftExpression	new_constant >> 32		1122354	0		>>			
ANR	1122406	Identifier	new_constant		1122354	0					
ANR	1122407	PrimaryExpression	32		1122354	1					
ANR	1122408	PrimaryExpression	0xFFFFL		1122354	1					
ANR	1122409	PrimaryExpression	43		1122354	1					
ANR	1122410	ExpressionStatement	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 16 ) & 0xFFFFL ) << 43 )	2543:1:76494:76575	1122354	3	True				
ANR	1122411	AssignmentExpression	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 16 ) & 0xFFFFL ) << 43 )		1122354	0		=			
ANR	1122412	ArrayIndexing	inst [ 2 ]		1122354	0					
ANR	1122413	Identifier	inst		1122354	0					
ANR	1122414	PrimaryExpression	2		1122354	1					
ANR	1122415	InclusiveOrExpression	( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 16 ) & 0xFFFFL ) << 43 )		1122354	1		|			
ANR	1122416	BitAndExpression	inst [ 2 ] & ~ ( 0xFFFFL << 43 )		1122354	0		&			
ANR	1122417	ArrayIndexing	inst [ 2 ]		1122354	0					
ANR	1122418	Identifier	inst		1122354	0					
ANR	1122419	PrimaryExpression	2		1122354	1					
ANR	1122420	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1122354	1					
ANR	1122421	UnaryOperator	~		1122354	0					
ANR	1122422	ShiftExpression	0xFFFFL << 43		1122354	1		<<			
ANR	1122423	PrimaryExpression	0xFFFFL		1122354	0					
ANR	1122424	PrimaryExpression	43		1122354	1					
ANR	1122425	ShiftExpression	( ( new_constant >> 16 ) & 0xFFFFL ) << 43		1122354	1		<<			
ANR	1122426	BitAndExpression	( new_constant >> 16 ) & 0xFFFFL		1122354	0		&			
ANR	1122427	ShiftExpression	new_constant >> 16		1122354	0		>>			
ANR	1122428	Identifier	new_constant		1122354	0					
ANR	1122429	PrimaryExpression	16		1122354	1					
ANR	1122430	PrimaryExpression	0xFFFFL		1122354	1					
ANR	1122431	PrimaryExpression	43		1122354	1					
ANR	1122432	ExpressionStatement	inst [ 3 ] = ( inst [ 3 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_constant & 0xFFFFL ) << 43 )	2544:1:76578:76651	1122354	4	True				
ANR	1122433	AssignmentExpression	inst [ 3 ] = ( inst [ 3 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_constant & 0xFFFFL ) << 43 )		1122354	0		=			
ANR	1122434	ArrayIndexing	inst [ 3 ]		1122354	0					
ANR	1122435	Identifier	inst		1122354	0					
ANR	1122436	PrimaryExpression	3		1122354	1					
ANR	1122437	InclusiveOrExpression	( inst [ 3 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_constant & 0xFFFFL ) << 43 )		1122354	1		|			
ANR	1122438	BitAndExpression	inst [ 3 ] & ~ ( 0xFFFFL << 43 )		1122354	0		&			
ANR	1122439	ArrayIndexing	inst [ 3 ]		1122354	0					
ANR	1122440	Identifier	inst		1122354	0					
ANR	1122441	PrimaryExpression	3		1122354	1					
ANR	1122442	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1122354	1					
ANR	1122443	UnaryOperator	~		1122354	0					
ANR	1122444	ShiftExpression	0xFFFFL << 43		1122354	1		<<			
ANR	1122445	PrimaryExpression	0xFFFFL		1122354	0					
ANR	1122446	PrimaryExpression	43		1122354	1					
ANR	1122447	ShiftExpression	( new_constant & 0xFFFFL ) << 43		1122354	1		<<			
ANR	1122448	BitAndExpression	new_constant & 0xFFFFL		1122354	0		&			
ANR	1122449	Identifier	new_constant		1122354	0					
ANR	1122450	PrimaryExpression	0xFFFFL		1122354	1					
ANR	1122451	PrimaryExpression	43		1122354	1					
ANR	1122452	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2545:1:76654:76687	1122354	5	True				
ANR	1122453	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1122354	0					
ANR	1122454	Callee	SLJIT_CACHE_FLUSH		1122354	0					
ANR	1122455	Identifier	SLJIT_CACHE_FLUSH		1122354	0					
ANR	1122456	ArgumentList	inst		1122354	1					
ANR	1122457	Argument	inst		1122354	0					
ANR	1122458	Identifier	inst		1122354	0					
ANR	1122459	Argument	inst + 4		1122354	1					
ANR	1122460	AdditiveExpression	inst + 4		1122354	0		+			
ANR	1122461	Identifier	inst		1122354	0					
ANR	1122462	PrimaryExpression	4		1122354	1					
ANR	1122463	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1122354	1					
ANR	1122464	Identifier	sljit_set_const		1122354	2					
ANR	1122465	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1122354	3					
ANR	1122466	Parameter	sljit_uw addr	2537:46:76246:76258	1122354	0	True				
ANR	1122467	ParameterType	sljit_uw		1122354	0					
ANR	1122468	Identifier	addr		1122354	1					
ANR	1122469	Parameter	sljit_sw new_constant	2537:61:76261:76281	1122354	1	True				
ANR	1122470	ParameterType	sljit_sw		1122354	0					
ANR	1122471	Identifier	new_constant		1122354	1					
ANR	1122472	CFGEntryNode	ENTRY		1122354		True				
ANR	1122473	CFGExitNode	EXIT		1122354		True				
ANR	1122474	Symbol	new_constant		1122354						
ANR	1122475	Symbol	* inst		1122354						
ANR	1122476	Symbol	inst		1122354						
ANR	1122477	Symbol	addr		1122354						
ANR	1122478	Function	sljit_get_register_index	2548:0:76692:76844							
ANR	1122479	FunctionDef	sljit_get_register_index (sljit_si reg)		1122478	0					
ANR	1122480	CompoundStatement		2549:0:76765:76844	1122478	0					
ANR	1122481	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	2550:1:76768:76820	1122478	0	True				
ANR	1122482	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1122478	0					
ANR	1122483	Callee	CHECK_REG_INDEX		1122478	0					
ANR	1122484	Identifier	CHECK_REG_INDEX		1122478	0					
ANR	1122485	ArgumentList	check_sljit_get_register_index ( reg )		1122478	1					
ANR	1122486	Argument	check_sljit_get_register_index ( reg )		1122478	0					
ANR	1122487	CallExpression	check_sljit_get_register_index ( reg )		1122478	0					
ANR	1122488	Callee	check_sljit_get_register_index		1122478	0					
ANR	1122489	Identifier	check_sljit_get_register_index		1122478	0					
ANR	1122490	ArgumentList	reg		1122478	1					
ANR	1122491	Argument	reg		1122478	0					
ANR	1122492	Identifier	reg		1122478	0					
ANR	1122493	ReturnStatement	return reg_map [ reg ] ;	2551:1:76823:76842	1122478	1	True				
ANR	1122494	ArrayIndexing	reg_map [ reg ]		1122478	0					
ANR	1122495	Identifier	reg_map		1122478	0					
ANR	1122496	Identifier	reg		1122478	1					
ANR	1122497	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1122478	1					
ANR	1122498	Identifier	sljit_get_register_index		1122478	2					
ANR	1122499	ParameterList	sljit_si reg		1122478	3					
ANR	1122500	Parameter	sljit_si reg	2548:59:76751:76762	1122478	0	True				
ANR	1122501	ParameterType	sljit_si		1122478	0					
ANR	1122502	Identifier	reg		1122478	1					
ANR	1122503	CFGEntryNode	ENTRY		1122478		True				
ANR	1122504	CFGExitNode	EXIT		1122478		True				
ANR	1122505	Symbol	reg		1122478						
ANR	1122506	Symbol	reg_map		1122478						
ANR	1122507	Symbol	* reg_map		1122478						
ANR	1122508	Symbol	* reg		1122478						
ANR	1122509	Symbol	check_sljit_get_register_index		1122478						
ANR	1122510	Function	sljit_emit_op_custom	2554:0:76847:77084							
ANR	1122511	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1122510	0					
ANR	1122512	CompoundStatement		2556:0:76970:77084	1122510	0					
ANR	1122513	ExpressionStatement	CHECK_ERROR ( )	2557:1:76973:76986	1122510	0	True				
ANR	1122514	CallExpression	CHECK_ERROR ( )		1122510	0					
ANR	1122515	Callee	CHECK_ERROR		1122510	0					
ANR	1122516	Identifier	CHECK_ERROR		1122510	0					
ANR	1122517	ArgumentList			1122510	1					
ANR	1122518	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	2558:1:76989:77051	1122510	1	True				
ANR	1122519	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1122510	0					
ANR	1122520	Callee	CHECK		1122510	0					
ANR	1122521	Identifier	CHECK		1122510	0					
ANR	1122522	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1122510	1					
ANR	1122523	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1122510	0					
ANR	1122524	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1122510	0					
ANR	1122525	Callee	check_sljit_emit_op_custom		1122510	0					
ANR	1122526	Identifier	check_sljit_emit_op_custom		1122510	0					
ANR	1122527	ArgumentList	compiler		1122510	1					
ANR	1122528	Argument	compiler		1122510	0					
ANR	1122529	Identifier	compiler		1122510	0					
ANR	1122530	Argument	instruction		1122510	1					
ANR	1122531	Identifier	instruction		1122510	0					
ANR	1122532	Argument	size		1122510	2					
ANR	1122533	Identifier	size		1122510	0					
ANR	1122534	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	2559:1:77054:77082	1122510	2	True				
ANR	1122535	Identifier	SLJIT_ERR_UNSUPPORTED		1122510	0					
ANR	1122536	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1122510	1					
ANR	1122537	Identifier	sljit_emit_op_custom		1122510	2					
ANR	1122538	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1122510	3					
ANR	1122539	Parameter	struct sljit_compiler * compiler	2554:55:76902:76932	1122510	0	True				
ANR	1122540	ParameterType	struct sljit_compiler *		1122510	0					
ANR	1122541	Identifier	compiler		1122510	1					
ANR	1122542	Parameter	void * instruction	2555:1:76936:76952	1122510	1	True				
ANR	1122543	ParameterType	void *		1122510	0					
ANR	1122544	Identifier	instruction		1122510	1					
ANR	1122545	Parameter	sljit_si size	2555:20:76955:76967	1122510	2	True				
ANR	1122546	ParameterType	sljit_si		1122510	0					
ANR	1122547	Identifier	size		1122510	1					
ANR	1122548	CFGEntryNode	ENTRY		1122510		True				
ANR	1122549	CFGExitNode	EXIT		1122510		True				
ANR	1122550	Symbol	size		1122510						
ANR	1122551	Symbol	instruction		1122510						
ANR	1122552	Symbol	check_sljit_emit_op_custom		1122510						
ANR	1122553	Symbol	compiler		1122510						
ANR	1122554	Symbol	SLJIT_ERR_UNSUPPORTED		1122510						
