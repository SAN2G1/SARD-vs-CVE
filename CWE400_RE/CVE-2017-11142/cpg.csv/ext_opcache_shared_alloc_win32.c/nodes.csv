command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	875442	File	data/converged/CVE-2017-11142_php-src/ext_opcache_shared_alloc_win32.c								
ANR	875443	DeclStmt									
ANR	875444	Decl							HANDLE	HANDLE	memfile
ANR	875445	Decl							HANDLE	HANDLE	memory_mutex
ANR	875446	DeclStmt									
ANR	875447	Decl							void	void *	mapping_base
ANR	875448	Function	zend_win_error_message	43:0:1955:2956							
ANR	875449	FunctionDef	"zend_win_error_message (int type , char * msg , int err)"		875448	0					
ANR	875450	CompoundStatement		44:0:2020:2956	875448	0					
ANR	875451	IdentifierDeclStatement	LPVOID lpMsgBuf ;	45:1:2023:2038	875448	0	True				
ANR	875452	IdentifierDecl	lpMsgBuf		875448	0					
ANR	875453	IdentifierDeclType	LPVOID		875448	0					
ANR	875454	Identifier	lpMsgBuf		875448	1					
ANR	875455	IdentifierDeclStatement	HANDLE h ;	46:1:2041:2049	875448	1	True				
ANR	875456	IdentifierDecl	h		875448	0					
ANR	875457	IdentifierDeclType	HANDLE		875448	0					
ANR	875458	Identifier	h		875448	1					
ANR	875459	IdentifierDeclStatement	char * ev_msgs [ 2 ] ;	47:1:2052:2068	875448	2	True				
ANR	875460	IdentifierDecl	* ev_msgs [ 2 ]		875448	0					
ANR	875461	IdentifierDeclType	char * [ 2 ]		875448	0					
ANR	875462	Identifier	ev_msgs		875448	1					
ANR	875463	PrimaryExpression	2		875448	2					
ANR	875464	ExpressionStatement	"FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPTSTR ) & lpMsgBuf , 0 , NULL )"	49:1:2072:2302	875448	3	True				
ANR	875465	CallExpression	"FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPTSTR ) & lpMsgBuf , 0 , NULL )"		875448	0					
ANR	875466	Callee	FormatMessage		875448	0					
ANR	875467	Identifier	FormatMessage		875448	0					
ANR	875468	ArgumentList	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		875448	1					
ANR	875469	Argument	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		875448	0					
ANR	875470	InclusiveOrExpression	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		875448	0		|			
ANR	875471	Identifier	FORMAT_MESSAGE_ALLOCATE_BUFFER		875448	0					
ANR	875472	InclusiveOrExpression	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		875448	1		|			
ANR	875473	Identifier	FORMAT_MESSAGE_FROM_SYSTEM		875448	0					
ANR	875474	Identifier	FORMAT_MESSAGE_IGNORE_INSERTS		875448	1					
ANR	875475	Argument	NULL		875448	1					
ANR	875476	Identifier	NULL		875448	0					
ANR	875477	Argument	err		875448	2					
ANR	875478	Identifier	err		875448	0					
ANR	875479	Argument	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		875448	3					
ANR	875480	CallExpression	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		875448	0					
ANR	875481	Callee	MAKELANGID		875448	0					
ANR	875482	Identifier	MAKELANGID		875448	0					
ANR	875483	ArgumentList	LANG_NEUTRAL		875448	1					
ANR	875484	Argument	LANG_NEUTRAL		875448	0					
ANR	875485	Identifier	LANG_NEUTRAL		875448	0					
ANR	875486	Argument	SUBLANG_DEFAULT		875448	1					
ANR	875487	Identifier	SUBLANG_DEFAULT		875448	0					
ANR	875488	Argument	( LPTSTR ) & lpMsgBuf		875448	4					
ANR	875489	CastExpression	( LPTSTR ) & lpMsgBuf		875448	0					
ANR	875490	CastTarget	LPTSTR		875448	0					
ANR	875491	UnaryOperationExpression	& lpMsgBuf		875448	1					
ANR	875492	UnaryOperator	&		875448	0					
ANR	875493	Identifier	lpMsgBuf		875448	1					
ANR	875494	Argument	0		875448	5					
ANR	875495	PrimaryExpression	0		875448	0					
ANR	875496	Argument	NULL		875448	6					
ANR	875497	Identifier	NULL		875448	0					
ANR	875498	ExpressionStatement	"h = RegisterEventSource ( NULL , TEXT ( ACCEL_EVENT_SOURCE ) )"	61:1:2306:2361	875448	4	True				
ANR	875499	AssignmentExpression	"h = RegisterEventSource ( NULL , TEXT ( ACCEL_EVENT_SOURCE ) )"		875448	0		=			
ANR	875500	Identifier	h		875448	0					
ANR	875501	CallExpression	"RegisterEventSource ( NULL , TEXT ( ACCEL_EVENT_SOURCE ) )"		875448	1					
ANR	875502	Callee	RegisterEventSource		875448	0					
ANR	875503	Identifier	RegisterEventSource		875448	0					
ANR	875504	ArgumentList	NULL		875448	1					
ANR	875505	Argument	NULL		875448	0					
ANR	875506	Identifier	NULL		875448	0					
ANR	875507	Argument	TEXT ( ACCEL_EVENT_SOURCE )		875448	1					
ANR	875508	CallExpression	TEXT ( ACCEL_EVENT_SOURCE )		875448	0					
ANR	875509	Callee	TEXT		875448	0					
ANR	875510	Identifier	TEXT		875448	0					
ANR	875511	ArgumentList	ACCEL_EVENT_SOURCE		875448	1					
ANR	875512	Argument	ACCEL_EVENT_SOURCE		875448	0					
ANR	875513	Identifier	ACCEL_EVENT_SOURCE		875448	0					
ANR	875514	ExpressionStatement	ev_msgs [ 0 ] = msg	62:1:2364:2380	875448	5	True				
ANR	875515	AssignmentExpression	ev_msgs [ 0 ] = msg		875448	0		=			
ANR	875516	ArrayIndexing	ev_msgs [ 0 ]		875448	0					
ANR	875517	Identifier	ev_msgs		875448	0					
ANR	875518	PrimaryExpression	0		875448	1					
ANR	875519	Identifier	msg		875448	1					
ANR	875520	ExpressionStatement	ev_msgs [ 1 ] = lpMsgBuf	63:1:2383:2404	875448	6	True				
ANR	875521	AssignmentExpression	ev_msgs [ 1 ] = lpMsgBuf		875448	0		=			
ANR	875522	ArrayIndexing	ev_msgs [ 1 ]		875448	0					
ANR	875523	Identifier	ev_msgs		875448	0					
ANR	875524	PrimaryExpression	1		875448	1					
ANR	875525	Identifier	lpMsgBuf		875448	1					
ANR	875526	ExpressionStatement	"ReportEvent ( h , EVENTLOG_ERROR_TYPE , 0 , err , NULL , 2 , 0 , ev_msgs , NULL )"	64:1:2407:2837	875448	7	True				
ANR	875527	CallExpression	"ReportEvent ( h , EVENTLOG_ERROR_TYPE , 0 , err , NULL , 2 , 0 , ev_msgs , NULL )"		875448	0					
ANR	875528	Callee	ReportEvent		875448	0					
ANR	875529	Identifier	ReportEvent		875448	0					
ANR	875530	ArgumentList	h		875448	1					
ANR	875531	Argument	h		875448	0					
ANR	875532	Identifier	h		875448	0					
ANR	875533	Argument	EVENTLOG_ERROR_TYPE		875448	1					
ANR	875534	Identifier	EVENTLOG_ERROR_TYPE		875448	0					
ANR	875535	Argument	0		875448	2					
ANR	875536	PrimaryExpression	0		875448	0					
ANR	875537	Argument	err		875448	3					
ANR	875538	Identifier	err		875448	0					
ANR	875539	Argument	NULL		875448	4					
ANR	875540	Identifier	NULL		875448	0					
ANR	875541	Argument	2		875448	5					
ANR	875542	PrimaryExpression	2		875448	0					
ANR	875543	Argument	0		875448	6					
ANR	875544	PrimaryExpression	0		875448	0					
ANR	875545	Argument	ev_msgs		875448	7					
ANR	875546	Identifier	ev_msgs		875448	0					
ANR	875547	Argument	NULL		875448	8					
ANR	875548	Identifier	NULL		875448	0					
ANR	875549	ExpressionStatement	DeregisterEventSource ( h )	73:1:2874:2898	875448	8	True				
ANR	875550	CallExpression	DeregisterEventSource ( h )		875448	0					
ANR	875551	Callee	DeregisterEventSource		875448	0					
ANR	875552	Identifier	DeregisterEventSource		875448	0					
ANR	875553	ArgumentList	h		875448	1					
ANR	875554	Argument	h		875448	0					
ANR	875555	Identifier	h		875448	0					
ANR	875556	ExpressionStatement	LocalFree ( lpMsgBuf )	75:1:2902:2923	875448	9	True				
ANR	875557	CallExpression	LocalFree ( lpMsgBuf )		875448	0					
ANR	875558	Callee	LocalFree		875448	0					
ANR	875559	Identifier	LocalFree		875448	0					
ANR	875560	ArgumentList	lpMsgBuf		875448	1					
ANR	875561	Argument	lpMsgBuf		875448	0					
ANR	875562	Identifier	lpMsgBuf		875448	0					
ANR	875563	ExpressionStatement	"zend_accel_error ( type , msg )"	77:1:2927:2954	875448	10	True				
ANR	875564	CallExpression	"zend_accel_error ( type , msg )"		875448	0					
ANR	875565	Callee	zend_accel_error		875448	0					
ANR	875566	Identifier	zend_accel_error		875448	0					
ANR	875567	ArgumentList	type		875448	1					
ANR	875568	Argument	type		875448	0					
ANR	875569	Identifier	type		875448	0					
ANR	875570	Argument	msg		875448	1					
ANR	875571	Identifier	msg		875448	0					
ANR	875572	ReturnType	static void		875448	1					
ANR	875573	Identifier	zend_win_error_message		875448	2					
ANR	875574	ParameterList	"int type , char * msg , int err"		875448	3					
ANR	875575	Parameter	int type	43:35:1990:1997	875448	0	True				
ANR	875576	ParameterType	int		875448	0					
ANR	875577	Identifier	type		875448	1					
ANR	875578	Parameter	char * msg	43:45:2000:2008	875448	1	True				
ANR	875579	ParameterType	char *		875448	0					
ANR	875580	Identifier	msg		875448	1					
ANR	875581	Parameter	int err	43:56:2011:2017	875448	2	True				
ANR	875582	ParameterType	int		875448	0					
ANR	875583	Identifier	err		875448	1					
ANR	875584	CFGEntryNode	ENTRY		875448		True				
ANR	875585	CFGExitNode	EXIT		875448		True				
ANR	875586	Symbol	msg		875448						
ANR	875587	Symbol	RegisterEventSource		875448						
ANR	875588	Symbol	FORMAT_MESSAGE_ALLOCATE_BUFFER		875448						
ANR	875589	Symbol	NULL		875448						
ANR	875590	Symbol	FORMAT_MESSAGE_IGNORE_INSERTS		875448						
ANR	875591	Symbol	EVENTLOG_ERROR_TYPE		875448						
ANR	875592	Symbol	err		875448						
ANR	875593	Symbol	LANG_NEUTRAL		875448						
ANR	875594	Symbol	& lpMsgBuf		875448						
ANR	875595	Symbol	h		875448						
ANR	875596	Symbol	TEXT		875448						
ANR	875597	Symbol	type		875448						
ANR	875598	Symbol	ACCEL_EVENT_SOURCE		875448						
ANR	875599	Symbol	MAKELANGID		875448						
ANR	875600	Symbol	lpMsgBuf		875448						
ANR	875601	Symbol	* ev_msgs		875448						
ANR	875602	Symbol	SUBLANG_DEFAULT		875448						
ANR	875603	Symbol	FORMAT_MESSAGE_FROM_SYSTEM		875448						
ANR	875604	Symbol	ev_msgs		875448						
ANR	875605	Function	accel_gen_system_id	83:0:3257:4172							
ANR	875606	FunctionDef	accel_gen_system_id ()		875605	0					
ANR	875607	CompoundStatement		84:0:3296:4172	875605	0					
ANR	875608	IdentifierDeclStatement	PHP_MD5_CTX context ;	85:1:3299:3318	875605	0	True				
ANR	875609	IdentifierDecl	context		875605	0					
ANR	875610	IdentifierDeclType	PHP_MD5_CTX		875605	0					
ANR	875611	Identifier	context		875605	1					
ANR	875612	IdentifierDeclStatement	"unsigned char digest [ 16 ] , c ;"	86:1:3321:3348	875605	1	True				
ANR	875613	IdentifierDecl	digest [ 16 ]		875605	0					
ANR	875614	IdentifierDeclType	unsigned char [ 16 ]		875605	0					
ANR	875615	Identifier	digest		875605	1					
ANR	875616	PrimaryExpression	16		875605	2					
ANR	875617	IdentifierDecl	c		875605	1					
ANR	875618	IdentifierDeclType	unsigned char		875605	0					
ANR	875619	Identifier	c		875605	1					
ANR	875620	IdentifierDeclStatement	int i ;	87:1:3351:3356	875605	2	True				
ANR	875621	IdentifierDecl	i		875605	0					
ANR	875622	IdentifierDeclType	int		875605	0					
ANR	875623	Identifier	i		875605	1					
ANR	875624	Statement	static	88:1:3359:3364	875605	3	True				
ANR	875625	IdentifierDeclStatement	char md5str [ 32 ] ;	88:8:3366:3381	875605	4	True				
ANR	875626	IdentifierDecl	md5str [ 32 ]		875605	0					
ANR	875627	IdentifierDeclType	char [ 32 ]		875605	0					
ANR	875628	Identifier	md5str		875605	1					
ANR	875629	PrimaryExpression	32		875605	2					
ANR	875630	Statement	static	89:1:3384:3389	875605	5	True				
ANR	875631	IdentifierDeclStatement	zend_bool done = 0 ;	89:8:3391:3409	875605	6	True				
ANR	875632	IdentifierDecl	done = 0		875605	0					
ANR	875633	IdentifierDeclType	zend_bool		875605	0					
ANR	875634	Identifier	done		875605	1					
ANR	875635	AssignmentExpression	done = 0		875605	2		=			
ANR	875636	Identifier	done		875605	0					
ANR	875637	PrimaryExpression	0		875605	1					
ANR	875638	IfStatement	if ( done )		875605	7					
ANR	875639	Condition	done	91:5:3417:3420	875605	0	True				
ANR	875640	Identifier	done		875605	0					
ANR	875641	CompoundStatement		8:11:126:126	875605	1					
ANR	875642	ReturnStatement	return md5str ;	92:2:3427:3440	875605	0	True				
ANR	875643	Identifier	md5str		875605	0					
ANR	875644	ExpressionStatement	PHP_MD5Init ( & context )	95:1:3447:3468	875605	8	True				
ANR	875645	CallExpression	PHP_MD5Init ( & context )		875605	0					
ANR	875646	Callee	PHP_MD5Init		875605	0					
ANR	875647	Identifier	PHP_MD5Init		875605	0					
ANR	875648	ArgumentList	& context		875605	1					
ANR	875649	Argument	& context		875605	0					
ANR	875650	UnaryOperationExpression	& context		875605	0					
ANR	875651	UnaryOperator	&		875605	0					
ANR	875652	Identifier	context		875605	1					
ANR	875653	ExpressionStatement	"PHP_MD5Update ( & context , PHP_VERSION , sizeof ( PHP_VERSION ) - 1 )"	96:1:3471:3530	875605	9	True				
ANR	875654	CallExpression	"PHP_MD5Update ( & context , PHP_VERSION , sizeof ( PHP_VERSION ) - 1 )"		875605	0					
ANR	875655	Callee	PHP_MD5Update		875605	0					
ANR	875656	Identifier	PHP_MD5Update		875605	0					
ANR	875657	ArgumentList	& context		875605	1					
ANR	875658	Argument	& context		875605	0					
ANR	875659	UnaryOperationExpression	& context		875605	0					
ANR	875660	UnaryOperator	&		875605	0					
ANR	875661	Identifier	context		875605	1					
ANR	875662	Argument	PHP_VERSION		875605	1					
ANR	875663	Identifier	PHP_VERSION		875605	0					
ANR	875664	Argument	sizeof ( PHP_VERSION ) - 1		875605	2					
ANR	875665	AdditiveExpression	sizeof ( PHP_VERSION ) - 1		875605	0		-			
ANR	875666	SizeofExpression	sizeof ( PHP_VERSION )		875605	0					
ANR	875667	Sizeof	sizeof		875605	0					
ANR	875668	SizeofOperand	PHP_VERSION		875605	1					
ANR	875669	PrimaryExpression	1		875605	1					
ANR	875670	ExpressionStatement	"PHP_MD5Update ( & context , ZEND_EXTENSION_BUILD_ID , sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1 )"	97:1:3533:3616	875605	10	True				
ANR	875671	CallExpression	"PHP_MD5Update ( & context , ZEND_EXTENSION_BUILD_ID , sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1 )"		875605	0					
ANR	875672	Callee	PHP_MD5Update		875605	0					
ANR	875673	Identifier	PHP_MD5Update		875605	0					
ANR	875674	ArgumentList	& context		875605	1					
ANR	875675	Argument	& context		875605	0					
ANR	875676	UnaryOperationExpression	& context		875605	0					
ANR	875677	UnaryOperator	&		875605	0					
ANR	875678	Identifier	context		875605	1					
ANR	875679	Argument	ZEND_EXTENSION_BUILD_ID		875605	1					
ANR	875680	Identifier	ZEND_EXTENSION_BUILD_ID		875605	0					
ANR	875681	Argument	sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1		875605	2					
ANR	875682	AdditiveExpression	sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1		875605	0		-			
ANR	875683	SizeofExpression	sizeof ( ZEND_EXTENSION_BUILD_ID )		875605	0					
ANR	875684	Sizeof	sizeof		875605	0					
ANR	875685	SizeofOperand	ZEND_EXTENSION_BUILD_ID		875605	1					
ANR	875686	PrimaryExpression	1		875605	1					
ANR	875687	ExpressionStatement	"PHP_MD5Update ( & context , ZEND_BIN_ID , sizeof ( ZEND_BIN_ID ) - 1 )"	98:1:3619:3678	875605	11	True				
ANR	875688	CallExpression	"PHP_MD5Update ( & context , ZEND_BIN_ID , sizeof ( ZEND_BIN_ID ) - 1 )"		875605	0					
ANR	875689	Callee	PHP_MD5Update		875605	0					
ANR	875690	Identifier	PHP_MD5Update		875605	0					
ANR	875691	ArgumentList	& context		875605	1					
ANR	875692	Argument	& context		875605	0					
ANR	875693	UnaryOperationExpression	& context		875605	0					
ANR	875694	UnaryOperator	&		875605	0					
ANR	875695	Identifier	context		875605	1					
ANR	875696	Argument	ZEND_BIN_ID		875605	1					
ANR	875697	Identifier	ZEND_BIN_ID		875605	0					
ANR	875698	Argument	sizeof ( ZEND_BIN_ID ) - 1		875605	2					
ANR	875699	AdditiveExpression	sizeof ( ZEND_BIN_ID ) - 1		875605	0		-			
ANR	875700	SizeofExpression	sizeof ( ZEND_BIN_ID )		875605	0					
ANR	875701	Sizeof	sizeof		875605	0					
ANR	875702	SizeofOperand	ZEND_BIN_ID		875605	1					
ANR	875703	PrimaryExpression	1		875605	1					
ANR	875704	IfStatement	"if ( strstr ( PHP_VERSION , ""-dev"" ) != 0 )"		875605	12					
ANR	875705	Condition	"strstr ( PHP_VERSION , ""-dev"" ) != 0"	99:5:3685:3716	875605	0	True				
ANR	875706	EqualityExpression	"strstr ( PHP_VERSION , ""-dev"" ) != 0"		875605	0		!=			
ANR	875707	CallExpression	"strstr ( PHP_VERSION , ""-dev"" )"		875605	0					
ANR	875708	Callee	strstr		875605	0					
ANR	875709	Identifier	strstr		875605	0					
ANR	875710	ArgumentList	PHP_VERSION		875605	1					
ANR	875711	Argument	PHP_VERSION		875605	0					
ANR	875712	Identifier	PHP_VERSION		875605	0					
ANR	875713	Argument	"""-dev"""		875605	1					
ANR	875714	PrimaryExpression	"""-dev"""		875605	0					
ANR	875715	PrimaryExpression	0		875605	1					
ANR	875716	CompoundStatement		16:39:422:422	875605	1					
ANR	875717	ExpressionStatement	"PHP_MD5Update ( & context , __DATE__ , sizeof ( __DATE__ ) - 1 )"	101:2:3787:3840	875605	0	True				
ANR	875718	CallExpression	"PHP_MD5Update ( & context , __DATE__ , sizeof ( __DATE__ ) - 1 )"		875605	0					
ANR	875719	Callee	PHP_MD5Update		875605	0					
ANR	875720	Identifier	PHP_MD5Update		875605	0					
ANR	875721	ArgumentList	& context		875605	1					
ANR	875722	Argument	& context		875605	0					
ANR	875723	UnaryOperationExpression	& context		875605	0					
ANR	875724	UnaryOperator	&		875605	0					
ANR	875725	Identifier	context		875605	1					
ANR	875726	Argument	__DATE__		875605	1					
ANR	875727	Identifier	__DATE__		875605	0					
ANR	875728	Argument	sizeof ( __DATE__ ) - 1		875605	2					
ANR	875729	AdditiveExpression	sizeof ( __DATE__ ) - 1		875605	0		-			
ANR	875730	SizeofExpression	sizeof ( __DATE__ )		875605	0					
ANR	875731	Sizeof	sizeof		875605	0					
ANR	875732	SizeofOperand	__DATE__		875605	1					
ANR	875733	PrimaryExpression	1		875605	1					
ANR	875734	ExpressionStatement	"PHP_MD5Update ( & context , __TIME__ , sizeof ( __TIME__ ) - 1 )"	102:2:3844:3897	875605	1	True				
ANR	875735	CallExpression	"PHP_MD5Update ( & context , __TIME__ , sizeof ( __TIME__ ) - 1 )"		875605	0					
ANR	875736	Callee	PHP_MD5Update		875605	0					
ANR	875737	Identifier	PHP_MD5Update		875605	0					
ANR	875738	ArgumentList	& context		875605	1					
ANR	875739	Argument	& context		875605	0					
ANR	875740	UnaryOperationExpression	& context		875605	0					
ANR	875741	UnaryOperator	&		875605	0					
ANR	875742	Identifier	context		875605	1					
ANR	875743	Argument	__TIME__		875605	1					
ANR	875744	Identifier	__TIME__		875605	0					
ANR	875745	Argument	sizeof ( __TIME__ ) - 1		875605	2					
ANR	875746	AdditiveExpression	sizeof ( __TIME__ ) - 1		875605	0		-			
ANR	875747	SizeofExpression	sizeof ( __TIME__ )		875605	0					
ANR	875748	Sizeof	sizeof		875605	0					
ANR	875749	SizeofOperand	__TIME__		875605	1					
ANR	875750	PrimaryExpression	1		875605	1					
ANR	875751	ExpressionStatement	"PHP_MD5Final ( digest , & context )"	104:1:3903:3933	875605	13	True				
ANR	875752	CallExpression	"PHP_MD5Final ( digest , & context )"		875605	0					
ANR	875753	Callee	PHP_MD5Final		875605	0					
ANR	875754	Identifier	PHP_MD5Final		875605	0					
ANR	875755	ArgumentList	digest		875605	1					
ANR	875756	Argument	digest		875605	0					
ANR	875757	Identifier	digest		875605	0					
ANR	875758	Argument	& context		875605	1					
ANR	875759	UnaryOperationExpression	& context		875605	0					
ANR	875760	UnaryOperator	&		875605	0					
ANR	875761	Identifier	context		875605	1					
ANR	875762	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		875605	14					
ANR	875763	ForInit	i = 0 ;	105:6:3941:3946	875605	0	True				
ANR	875764	AssignmentExpression	i = 0		875605	0		=			
ANR	875765	Identifier	i		875605	0					
ANR	875766	PrimaryExpression	0		875605	1					
ANR	875767	Condition	i < 16	105:13:3948:3953	875605	1	True				
ANR	875768	RelationalExpression	i < 16		875605	0		<			
ANR	875769	Identifier	i		875605	0					
ANR	875770	PrimaryExpression	16		875605	1					
ANR	875771	PostIncDecOperationExpression	i ++	105:21:3956:3958	875605	2	True				
ANR	875772	Identifier	i		875605	0					
ANR	875773	IncDec	++		875605	1					
ANR	875774	CompoundStatement		22:26:664:664	875605	3					
ANR	875775	ExpressionStatement	c = digest [ i ] >> 4	106:2:3965:3983	875605	0	True				
ANR	875776	AssignmentExpression	c = digest [ i ] >> 4		875605	0		=			
ANR	875777	Identifier	c		875605	0					
ANR	875778	ShiftExpression	digest [ i ] >> 4		875605	1		>>			
ANR	875779	ArrayIndexing	digest [ i ]		875605	0					
ANR	875780	Identifier	digest		875605	0					
ANR	875781	Identifier	i		875605	1					
ANR	875782	PrimaryExpression	4		875605	1					
ANR	875783	ExpressionStatement	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'	107:2:3987:4024	875605	1	True				
ANR	875784	AssignmentExpression	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'		875605	0		=			
ANR	875785	Identifier	c		875605	0					
ANR	875786	ConditionalExpression	( c <= 9 ) ? c + '0' : c - 10 + 'a'		875605	1					
ANR	875787	Condition	c <= 9		875605	0					
ANR	875788	RelationalExpression	c <= 9		875605	0		<=			
ANR	875789	Identifier	c		875605	0					
ANR	875790	PrimaryExpression	9		875605	1					
ANR	875791	AdditiveExpression	c + '0'		875605	1		+			
ANR	875792	Identifier	c		875605	0					
ANR	875793	PrimaryExpression	'0'		875605	1					
ANR	875794	AdditiveExpression	c - 10 + 'a'		875605	2		-			
ANR	875795	Identifier	c		875605	0					
ANR	875796	AdditiveExpression	10 + 'a'		875605	1		+			
ANR	875797	PrimaryExpression	10		875605	0					
ANR	875798	PrimaryExpression	'a'		875605	1					
ANR	875799	ExpressionStatement	md5str [ i * 2 ] = c	108:2:4028:4045	875605	2	True				
ANR	875800	AssignmentExpression	md5str [ i * 2 ] = c		875605	0		=			
ANR	875801	ArrayIndexing	md5str [ i * 2 ]		875605	0					
ANR	875802	Identifier	md5str		875605	0					
ANR	875803	MultiplicativeExpression	i * 2		875605	1		*			
ANR	875804	Identifier	i		875605	0					
ANR	875805	PrimaryExpression	2		875605	1					
ANR	875806	Identifier	c		875605	1					
ANR	875807	ExpressionStatement	c = digest [ i ] & 0x0f	109:2:4049:4070	875605	3	True				
ANR	875808	AssignmentExpression	c = digest [ i ] & 0x0f		875605	0		=			
ANR	875809	Identifier	c		875605	0					
ANR	875810	BitAndExpression	digest [ i ] & 0x0f		875605	1		&			
ANR	875811	ArrayIndexing	digest [ i ]		875605	0					
ANR	875812	Identifier	digest		875605	0					
ANR	875813	Identifier	i		875605	1					
ANR	875814	PrimaryExpression	0x0f		875605	1					
ANR	875815	ExpressionStatement	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'	110:2:4074:4111	875605	4	True				
ANR	875816	AssignmentExpression	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'		875605	0		=			
ANR	875817	Identifier	c		875605	0					
ANR	875818	ConditionalExpression	( c <= 9 ) ? c + '0' : c - 10 + 'a'		875605	1					
ANR	875819	Condition	c <= 9		875605	0					
ANR	875820	RelationalExpression	c <= 9		875605	0		<=			
ANR	875821	Identifier	c		875605	0					
ANR	875822	PrimaryExpression	9		875605	1					
ANR	875823	AdditiveExpression	c + '0'		875605	1		+			
ANR	875824	Identifier	c		875605	0					
ANR	875825	PrimaryExpression	'0'		875605	1					
ANR	875826	AdditiveExpression	c - 10 + 'a'		875605	2		-			
ANR	875827	Identifier	c		875605	0					
ANR	875828	AdditiveExpression	10 + 'a'		875605	1		+			
ANR	875829	PrimaryExpression	10		875605	0					
ANR	875830	PrimaryExpression	'a'		875605	1					
ANR	875831	ExpressionStatement	md5str [ ( i * 2 ) + 1 ] = c	111:2:4115:4138	875605	5	True				
ANR	875832	AssignmentExpression	md5str [ ( i * 2 ) + 1 ] = c		875605	0		=			
ANR	875833	ArrayIndexing	md5str [ ( i * 2 ) + 1 ]		875605	0					
ANR	875834	Identifier	md5str		875605	0					
ANR	875835	AdditiveExpression	( i * 2 ) + 1		875605	1		+			
ANR	875836	MultiplicativeExpression	i * 2		875605	0		*			
ANR	875837	Identifier	i		875605	0					
ANR	875838	PrimaryExpression	2		875605	1					
ANR	875839	PrimaryExpression	1		875605	1					
ANR	875840	Identifier	c		875605	1					
ANR	875841	ExpressionStatement	done = 1	114:1:4145:4153	875605	15	True				
ANR	875842	AssignmentExpression	done = 1		875605	0		=			
ANR	875843	Identifier	done		875605	0					
ANR	875844	PrimaryExpression	1		875605	1					
ANR	875845	ReturnStatement	return md5str ;	116:1:4157:4170	875605	16	True				
ANR	875846	Identifier	md5str		875605	0					
ANR	875847	ReturnType	static char *		875605	1					
ANR	875848	Identifier	accel_gen_system_id		875605	2					
ANR	875849	ParameterList			875605	3					
ANR	875850	CFGEntryNode	ENTRY		875605		True				
ANR	875851	CFGExitNode	EXIT		875605		True				
ANR	875852	Symbol	c		875605						
ANR	875853	Symbol	PHP_VERSION		875605						
ANR	875854	Symbol	ZEND_BIN_ID		875605						
ANR	875855	Symbol	md5str		875605						
ANR	875856	Symbol	i		875605						
ANR	875857	Symbol	__DATE__		875605						
ANR	875858	Symbol	done		875605						
ANR	875859	Symbol	* digest		875605						
ANR	875860	Symbol	& context		875605						
ANR	875861	Symbol	__TIME__		875605						
ANR	875862	Symbol	* i		875605						
ANR	875863	Symbol	strstr		875605						
ANR	875864	Symbol	context		875605						
ANR	875865	Symbol	digest		875605						
ANR	875866	Symbol	ZEND_EXTENSION_BUILD_ID		875605						
ANR	875867	Symbol	* md5str		875605						
ANR	875868	Function	create_name_with_username	119:0:4175:4470							
ANR	875869	FunctionDef	create_name_with_username (char * name)		875868	0					
ANR	875870	CompoundStatement		120:0:4226:4470	875868	0					
ANR	875871	Statement	static	121:1:4229:4234	875868	0	True				
ANR	875872	IdentifierDeclStatement	char newname [ MAXPATHLEN + UNLEN + 4 + 1 + 32 ] ;	121:8:4236:4281	875868	1	True				
ANR	875873	IdentifierDecl	newname [ MAXPATHLEN + UNLEN + 4 + 1 + 32 ]		875868	0					
ANR	875874	IdentifierDeclType	char [ MAXPATHLEN + UNLEN + 4 + 1 + 32 ]		875868	0					
ANR	875875	Identifier	newname		875868	1					
ANR	875876	AdditiveExpression	MAXPATHLEN + UNLEN + 4 + 1 + 32		875868	2		+			
ANR	875877	Identifier	MAXPATHLEN		875868	0					
ANR	875878	AdditiveExpression	UNLEN + 4 + 1 + 32		875868	1		+			
ANR	875879	Identifier	UNLEN		875868	0					
ANR	875880	AdditiveExpression	4 + 1 + 32		875868	1		+			
ANR	875881	PrimaryExpression	4		875868	0					
ANR	875882	AdditiveExpression	1 + 32		875868	1		+			
ANR	875883	PrimaryExpression	1		875868	0					
ANR	875884	PrimaryExpression	32		875868	1					
ANR	875885	IdentifierDeclStatement	char uname [ UNLEN + 1 ] ;	122:1:4284:4305	875868	2	True				
ANR	875886	IdentifierDecl	uname [ UNLEN + 1 ]		875868	0					
ANR	875887	IdentifierDeclType	char [ UNLEN + 1 ]		875868	0					
ANR	875888	Identifier	uname		875868	1					
ANR	875889	AdditiveExpression	UNLEN + 1		875868	2		+			
ANR	875890	Identifier	UNLEN		875868	0					
ANR	875891	PrimaryExpression	1		875868	1					
ANR	875892	IdentifierDeclStatement	DWORD unsize = UNLEN ;	123:1:4308:4328	875868	3	True				
ANR	875893	IdentifierDecl	unsize = UNLEN		875868	0					
ANR	875894	IdentifierDeclType	DWORD		875868	0					
ANR	875895	Identifier	unsize		875868	1					
ANR	875896	AssignmentExpression	unsize = UNLEN		875868	2		=			
ANR	875897	Identifier	UNLEN		875868	0					
ANR	875898	Identifier	UNLEN		875868	1					
ANR	875899	ExpressionStatement	"GetUserName ( uname , & unsize )"	125:1:4332:4359	875868	4	True				
ANR	875900	CallExpression	"GetUserName ( uname , & unsize )"		875868	0					
ANR	875901	Callee	GetUserName		875868	0					
ANR	875902	Identifier	GetUserName		875868	0					
ANR	875903	ArgumentList	uname		875868	1					
ANR	875904	Argument	uname		875868	0					
ANR	875905	Identifier	uname		875868	0					
ANR	875906	Argument	& unsize		875868	1					
ANR	875907	UnaryOperationExpression	& unsize		875868	0					
ANR	875908	UnaryOperator	&		875868	0					
ANR	875909	Identifier	unsize		875868	1					
ANR	875910	ExpressionStatement	"snprintf ( newname , sizeof ( newname ) - 1 , ""%s@%s@%.32s"" , name , uname , accel_gen_system_id ( ) )"	126:1:4362:4451	875868	5	True				
ANR	875911	CallExpression	"snprintf ( newname , sizeof ( newname ) - 1 , ""%s@%s@%.32s"" , name , uname , accel_gen_system_id ( ) )"		875868	0					
ANR	875912	Callee	snprintf		875868	0					
ANR	875913	Identifier	snprintf		875868	0					
ANR	875914	ArgumentList	newname		875868	1					
ANR	875915	Argument	newname		875868	0					
ANR	875916	Identifier	newname		875868	0					
ANR	875917	Argument	sizeof ( newname ) - 1		875868	1					
ANR	875918	AdditiveExpression	sizeof ( newname ) - 1		875868	0		-			
ANR	875919	SizeofExpression	sizeof ( newname )		875868	0					
ANR	875920	Sizeof	sizeof		875868	0					
ANR	875921	SizeofOperand	newname		875868	1					
ANR	875922	PrimaryExpression	1		875868	1					
ANR	875923	Argument	"""%s@%s@%.32s"""		875868	2					
ANR	875924	PrimaryExpression	"""%s@%s@%.32s"""		875868	0					
ANR	875925	Argument	name		875868	3					
ANR	875926	Identifier	name		875868	0					
ANR	875927	Argument	uname		875868	4					
ANR	875928	Identifier	uname		875868	0					
ANR	875929	Argument	accel_gen_system_id ( )		875868	5					
ANR	875930	CallExpression	accel_gen_system_id ( )		875868	0					
ANR	875931	Callee	accel_gen_system_id		875868	0					
ANR	875932	Identifier	accel_gen_system_id		875868	0					
ANR	875933	ArgumentList			875868	1					
ANR	875934	ReturnStatement	return newname ;	127:1:4454:4468	875868	6	True				
ANR	875935	Identifier	newname		875868	0					
ANR	875936	ReturnType	static char *		875868	1					
ANR	875937	Identifier	create_name_with_username		875868	2					
ANR	875938	ParameterList	char * name		875868	3					
ANR	875939	Parameter	char * name	119:39:4214:4223	875868	0	True				
ANR	875940	ParameterType	char *		875868	0					
ANR	875941	Identifier	name		875868	1					
ANR	875942	CFGEntryNode	ENTRY		875868		True				
ANR	875943	CFGExitNode	EXIT		875868		True				
ANR	875944	Symbol	unsize		875868						
ANR	875945	Symbol	accel_gen_system_id		875868						
ANR	875946	Symbol	uname		875868						
ANR	875947	Symbol	name		875868						
ANR	875948	Symbol	& unsize		875868						
ANR	875949	Symbol	newname		875868						
ANR	875950	Symbol	UNLEN		875868						
ANR	875951	Function	get_mmap_base_file	130:0:4473:4854							
ANR	875952	FunctionDef	get_mmap_base_file ()		875951	0					
ANR	875953	CompoundStatement		131:0:4511:4854	875951	0					
ANR	875954	Statement	static	132:1:4514:4519	875951	0	True				
ANR	875955	IdentifierDeclStatement	"char windir [ MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32 ] ;"	132:8:4521:4581	875951	1	True				
ANR	875956	IdentifierDecl	"windir [ MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32 ]"		875951	0					
ANR	875957	IdentifierDeclType	"char [ MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32 ]"		875951	0					
ANR	875958	Identifier	windir		875951	1					
ANR	875959	AdditiveExpression	"MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		875951	2		+			
ANR	875960	Identifier	MAXPATHLEN		875951	0					
ANR	875961	AdditiveExpression	"UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		875951	1		+			
ANR	875962	Identifier	UNLEN		875951	0					
ANR	875963	AdditiveExpression	"3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		875951	1		+			
ANR	875964	PrimaryExpression	3		875951	0					
ANR	875965	AdditiveExpression	"sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		875951	1		+			
ANR	875966	SizeofExpression	"sizeof ( ""\\\\\\\\@"" )"		875951	0					
ANR	875967	Sizeof	sizeof		875951	0					
ANR	875968	PrimaryExpression	"""\\\\\\\\@"""		875951	1					
ANR	875969	AdditiveExpression	1 + 32		875951	1		+			
ANR	875970	PrimaryExpression	1		875951	0					
ANR	875971	PrimaryExpression	32		875951	1					
ANR	875972	IdentifierDeclStatement	char uname [ UNLEN + 1 ] ;	133:1:4584:4605	875951	2	True				
ANR	875973	IdentifierDecl	uname [ UNLEN + 1 ]		875951	0					
ANR	875974	IdentifierDeclType	char [ UNLEN + 1 ]		875951	0					
ANR	875975	Identifier	uname		875951	1					
ANR	875976	AdditiveExpression	UNLEN + 1		875951	2		+			
ANR	875977	Identifier	UNLEN		875951	0					
ANR	875978	PrimaryExpression	1		875951	1					
ANR	875979	IdentifierDeclStatement	DWORD unsize = UNLEN ;	134:1:4608:4628	875951	3	True				
ANR	875980	IdentifierDecl	unsize = UNLEN		875951	0					
ANR	875981	IdentifierDeclType	DWORD		875951	0					
ANR	875982	Identifier	unsize		875951	1					
ANR	875983	AssignmentExpression	unsize = UNLEN		875951	2		=			
ANR	875984	Identifier	UNLEN		875951	0					
ANR	875985	Identifier	UNLEN		875951	1					
ANR	875986	IdentifierDeclStatement	int l ;	135:1:4631:4636	875951	4	True				
ANR	875987	IdentifierDecl	l		875951	0					
ANR	875988	IdentifierDeclType	int		875951	0					
ANR	875989	Identifier	l		875951	1					
ANR	875990	ExpressionStatement	"GetTempPath ( MAXPATHLEN , windir )"	137:1:4640:4671	875951	5	True				
ANR	875991	CallExpression	"GetTempPath ( MAXPATHLEN , windir )"		875951	0					
ANR	875992	Callee	GetTempPath		875951	0					
ANR	875993	Identifier	GetTempPath		875951	0					
ANR	875994	ArgumentList	MAXPATHLEN		875951	1					
ANR	875995	Argument	MAXPATHLEN		875951	0					
ANR	875996	Identifier	MAXPATHLEN		875951	0					
ANR	875997	Argument	windir		875951	1					
ANR	875998	Identifier	windir		875951	0					
ANR	875999	ExpressionStatement	"GetUserName ( uname , & unsize )"	138:1:4674:4701	875951	6	True				
ANR	876000	CallExpression	"GetUserName ( uname , & unsize )"		875951	0					
ANR	876001	Callee	GetUserName		875951	0					
ANR	876002	Identifier	GetUserName		875951	0					
ANR	876003	ArgumentList	uname		875951	1					
ANR	876004	Argument	uname		875951	0					
ANR	876005	Identifier	uname		875951	0					
ANR	876006	Argument	& unsize		875951	1					
ANR	876007	UnaryOperationExpression	& unsize		875951	0					
ANR	876008	UnaryOperator	&		875951	0					
ANR	876009	Identifier	unsize		875951	1					
ANR	876010	ExpressionStatement	l = strlen ( windir )	139:1:4704:4722	875951	7	True				
ANR	876011	AssignmentExpression	l = strlen ( windir )		875951	0		=			
ANR	876012	Identifier	l		875951	0					
ANR	876013	CallExpression	strlen ( windir )		875951	1					
ANR	876014	Callee	strlen		875951	0					
ANR	876015	Identifier	strlen		875951	0					
ANR	876016	ArgumentList	windir		875951	1					
ANR	876017	Argument	windir		875951	0					
ANR	876018	Identifier	windir		875951	0					
ANR	876019	ExpressionStatement	"snprintf ( windir + l , sizeof ( windir ) - l - 1 , ""\\\\%s@%s@%.32s"" , ACCEL_FILEMAP_BASE , uname , accel_gen_system_id ( ) )"	140:1:4725:4836	875951	8	True				
ANR	876020	CallExpression	"snprintf ( windir + l , sizeof ( windir ) - l - 1 , ""\\\\%s@%s@%.32s"" , ACCEL_FILEMAP_BASE , uname , accel_gen_system_id ( ) )"		875951	0					
ANR	876021	Callee	snprintf		875951	0					
ANR	876022	Identifier	snprintf		875951	0					
ANR	876023	ArgumentList	windir + l		875951	1					
ANR	876024	Argument	windir + l		875951	0					
ANR	876025	AdditiveExpression	windir + l		875951	0		+			
ANR	876026	Identifier	windir		875951	0					
ANR	876027	Identifier	l		875951	1					
ANR	876028	Argument	sizeof ( windir ) - l - 1		875951	1					
ANR	876029	AdditiveExpression	sizeof ( windir ) - l - 1		875951	0		-			
ANR	876030	SizeofExpression	sizeof ( windir )		875951	0					
ANR	876031	Sizeof	sizeof		875951	0					
ANR	876032	SizeofOperand	windir		875951	1					
ANR	876033	AdditiveExpression	l - 1		875951	1		-			
ANR	876034	Identifier	l		875951	0					
ANR	876035	PrimaryExpression	1		875951	1					
ANR	876036	Argument	"""\\\\%s@%s@%.32s"""		875951	2					
ANR	876037	PrimaryExpression	"""\\\\%s@%s@%.32s"""		875951	0					
ANR	876038	Argument	ACCEL_FILEMAP_BASE		875951	3					
ANR	876039	Identifier	ACCEL_FILEMAP_BASE		875951	0					
ANR	876040	Argument	uname		875951	4					
ANR	876041	Identifier	uname		875951	0					
ANR	876042	Argument	accel_gen_system_id ( )		875951	5					
ANR	876043	CallExpression	accel_gen_system_id ( )		875951	0					
ANR	876044	Callee	accel_gen_system_id		875951	0					
ANR	876045	Identifier	accel_gen_system_id		875951	0					
ANR	876046	ArgumentList			875951	1					
ANR	876047	ReturnStatement	return windir ;	141:1:4839:4852	875951	9	True				
ANR	876048	Identifier	windir		875951	0					
ANR	876049	ReturnType	static char *		875951	1					
ANR	876050	Identifier	get_mmap_base_file		875951	2					
ANR	876051	ParameterList			875951	3					
ANR	876052	CFGEntryNode	ENTRY		875951		True				
ANR	876053	CFGExitNode	EXIT		875951		True				
ANR	876054	Symbol	unsize		875951						
ANR	876055	Symbol	MAXPATHLEN		875951						
ANR	876056	Symbol	strlen		875951						
ANR	876057	Symbol	accel_gen_system_id		875951						
ANR	876058	Symbol	uname		875951						
ANR	876059	Symbol	ACCEL_FILEMAP_BASE		875951						
ANR	876060	Symbol	windir		875951						
ANR	876061	Symbol	& unsize		875951						
ANR	876062	Symbol	l		875951						
ANR	876063	Symbol	UNLEN		875951						
ANR	876064	Function	zend_shared_alloc_create_lock	144:0:4857:5111							
ANR	876065	FunctionDef	zend_shared_alloc_create_lock ()		876064	0					
ANR	876066	CompoundStatement		145:0:4898:5111	876064	0					
ANR	876067	ExpressionStatement	"memory_mutex = CreateMutex ( NULL , FALSE , create_name_with_username ( ACCEL_MUTEX_NAME ) )"	146:1:4901:4985	876064	0	True				
ANR	876068	AssignmentExpression	"memory_mutex = CreateMutex ( NULL , FALSE , create_name_with_username ( ACCEL_MUTEX_NAME ) )"		876064	0		=			
ANR	876069	Identifier	memory_mutex		876064	0					
ANR	876070	CallExpression	"CreateMutex ( NULL , FALSE , create_name_with_username ( ACCEL_MUTEX_NAME ) )"		876064	1					
ANR	876071	Callee	CreateMutex		876064	0					
ANR	876072	Identifier	CreateMutex		876064	0					
ANR	876073	ArgumentList	NULL		876064	1					
ANR	876074	Argument	NULL		876064	0					
ANR	876075	Identifier	NULL		876064	0					
ANR	876076	Argument	FALSE		876064	1					
ANR	876077	Identifier	FALSE		876064	0					
ANR	876078	Argument	create_name_with_username ( ACCEL_MUTEX_NAME )		876064	2					
ANR	876079	CallExpression	create_name_with_username ( ACCEL_MUTEX_NAME )		876064	0					
ANR	876080	Callee	create_name_with_username		876064	0					
ANR	876081	Identifier	create_name_with_username		876064	0					
ANR	876082	ArgumentList	ACCEL_MUTEX_NAME		876064	1					
ANR	876083	Argument	ACCEL_MUTEX_NAME		876064	0					
ANR	876084	Identifier	ACCEL_MUTEX_NAME		876064	0					
ANR	876085	IfStatement	if ( ! memory_mutex )		876064	1					
ANR	876086	Condition	! memory_mutex	147:5:4992:5004	876064	0	True				
ANR	876087	UnaryOperationExpression	! memory_mutex		876064	0					
ANR	876088	UnaryOperator	!		876064	0					
ANR	876089	Identifier	memory_mutex		876064	1					
ANR	876090	CompoundStatement		3:20:108:108	876064	1					
ANR	876091	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Cannot create mutex"" )"	148:2:5011:5067	876064	0	True				
ANR	876092	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Cannot create mutex"" )"		876064	0					
ANR	876093	Callee	zend_accel_error		876064	0					
ANR	876094	Identifier	zend_accel_error		876064	0					
ANR	876095	ArgumentList	ACCEL_LOG_FATAL		876064	1					
ANR	876096	Argument	ACCEL_LOG_FATAL		876064	0					
ANR	876097	Identifier	ACCEL_LOG_FATAL		876064	0					
ANR	876098	Argument	"""Cannot create mutex"""		876064	1					
ANR	876099	PrimaryExpression	"""Cannot create mutex"""		876064	0					
ANR	876100	ReturnStatement	return ;	149:2:5071:5077	876064	1	True				
ANR	876101	ExpressionStatement	ReleaseMutex ( memory_mutex )	151:1:5083:5109	876064	2	True				
ANR	876102	CallExpression	ReleaseMutex ( memory_mutex )		876064	0					
ANR	876103	Callee	ReleaseMutex		876064	0					
ANR	876104	Identifier	ReleaseMutex		876064	0					
ANR	876105	ArgumentList	memory_mutex		876064	1					
ANR	876106	Argument	memory_mutex		876064	0					
ANR	876107	Identifier	memory_mutex		876064	0					
ANR	876108	ReturnType	void		876064	1					
ANR	876109	Identifier	zend_shared_alloc_create_lock		876064	2					
ANR	876110	ParameterList			876064	3					
ANR	876111	CFGEntryNode	ENTRY		876064		True				
ANR	876112	CFGExitNode	EXIT		876064		True				
ANR	876113	Symbol	CreateMutex		876064						
ANR	876114	Symbol	NULL		876064						
ANR	876115	Symbol	ACCEL_LOG_FATAL		876064						
ANR	876116	Symbol	ACCEL_MUTEX_NAME		876064						
ANR	876117	Symbol	FALSE		876064						
ANR	876118	Symbol	memory_mutex		876064						
ANR	876119	Symbol	create_name_with_username		876064						
ANR	876120	Function	zend_shared_alloc_lock_win32	154:0:5114:5311							
ANR	876121	FunctionDef	zend_shared_alloc_lock_win32 ()		876120	0					
ANR	876122	CompoundStatement		155:0:5154:5311	876120	0					
ANR	876123	IdentifierDeclStatement	"DWORD waitRes = WaitForSingleObject ( memory_mutex , INFINITE ) ;"	156:1:5157:5216	876120	0	True				
ANR	876124	IdentifierDecl	"waitRes = WaitForSingleObject ( memory_mutex , INFINITE )"		876120	0					
ANR	876125	IdentifierDeclType	DWORD		876120	0					
ANR	876126	Identifier	waitRes		876120	1					
ANR	876127	AssignmentExpression	"waitRes = WaitForSingleObject ( memory_mutex , INFINITE )"		876120	2		=			
ANR	876128	Identifier	waitRes		876120	0					
ANR	876129	CallExpression	"WaitForSingleObject ( memory_mutex , INFINITE )"		876120	1					
ANR	876130	Callee	WaitForSingleObject		876120	0					
ANR	876131	Identifier	WaitForSingleObject		876120	0					
ANR	876132	ArgumentList	memory_mutex		876120	1					
ANR	876133	Argument	memory_mutex		876120	0					
ANR	876134	Identifier	memory_mutex		876120	0					
ANR	876135	Argument	INFINITE		876120	1					
ANR	876136	Identifier	INFINITE		876120	0					
ANR	876137	IfStatement	if ( waitRes == WAIT_FAILED )		876120	1					
ANR	876138	Condition	waitRes == WAIT_FAILED	158:5:5224:5245	876120	0	True				
ANR	876139	EqualityExpression	waitRes == WAIT_FAILED		876120	0		==			
ANR	876140	Identifier	waitRes		876120	0					
ANR	876141	Identifier	WAIT_FAILED		876120	1					
ANR	876142	CompoundStatement		4:29:93:93	876120	1					
ANR	876143	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Cannot lock mutex"" )"	159:2:5252:5306	876120	0	True				
ANR	876144	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Cannot lock mutex"" )"		876120	0					
ANR	876145	Callee	zend_accel_error		876120	0					
ANR	876146	Identifier	zend_accel_error		876120	0					
ANR	876147	ArgumentList	ACCEL_LOG_ERROR		876120	1					
ANR	876148	Argument	ACCEL_LOG_ERROR		876120	0					
ANR	876149	Identifier	ACCEL_LOG_ERROR		876120	0					
ANR	876150	Argument	"""Cannot lock mutex"""		876120	1					
ANR	876151	PrimaryExpression	"""Cannot lock mutex"""		876120	0					
ANR	876152	ReturnType	void		876120	1					
ANR	876153	Identifier	zend_shared_alloc_lock_win32		876120	2					
ANR	876154	ParameterList			876120	3					
ANR	876155	CFGEntryNode	ENTRY		876120		True				
ANR	876156	CFGExitNode	EXIT		876120		True				
ANR	876157	Symbol	WaitForSingleObject		876120						
ANR	876158	Symbol	waitRes		876120						
ANR	876159	Symbol	WAIT_FAILED		876120						
ANR	876160	Symbol	memory_mutex		876120						
ANR	876161	Symbol	INFINITE		876120						
ANR	876162	Symbol	ACCEL_LOG_ERROR		876120						
ANR	876163	Function	zend_shared_alloc_unlock_win32	163:0:5314:5387							
ANR	876164	FunctionDef	zend_shared_alloc_unlock_win32 ()		876163	0					
ANR	876165	CompoundStatement		164:0:5356:5387	876163	0					
ANR	876166	ExpressionStatement	ReleaseMutex ( memory_mutex )	165:1:5359:5385	876163	0	True				
ANR	876167	CallExpression	ReleaseMutex ( memory_mutex )		876163	0					
ANR	876168	Callee	ReleaseMutex		876163	0					
ANR	876169	Identifier	ReleaseMutex		876163	0					
ANR	876170	ArgumentList	memory_mutex		876163	1					
ANR	876171	Argument	memory_mutex		876163	0					
ANR	876172	Identifier	memory_mutex		876163	0					
ANR	876173	ReturnType	void		876163	1					
ANR	876174	Identifier	zend_shared_alloc_unlock_win32		876163	2					
ANR	876175	ParameterList			876163	3					
ANR	876176	CFGEntryNode	ENTRY		876163		True				
ANR	876177	CFGExitNode	EXIT		876163		True				
ANR	876178	Symbol	memory_mutex		876163						
ANR	876179	Function	zend_shared_alloc_reattach	168:0:5390:6872							
ANR	876180	FunctionDef	"zend_shared_alloc_reattach (size_t requested_size , char * * error_in)"		876179	0					
ANR	876181	CompoundStatement		169:0:5468:6872	876179	0					
ANR	876182	IdentifierDeclStatement	int err ;	170:1:5471:5478	876179	0	True				
ANR	876183	IdentifierDecl	err		876179	0					
ANR	876184	IdentifierDeclType	int		876179	0					
ANR	876185	Identifier	err		876179	1					
ANR	876186	IdentifierDeclStatement	void * wanted_mapping_base ;	171:1:5481:5506	876179	1	True				
ANR	876187	IdentifierDecl	* wanted_mapping_base		876179	0					
ANR	876188	IdentifierDeclType	void *		876179	0					
ANR	876189	Identifier	wanted_mapping_base		876179	1					
ANR	876190	IdentifierDeclStatement	char * mmap_base_file = get_mmap_base_file ( ) ;	172:1:5509:5552	876179	2	True				
ANR	876191	IdentifierDecl	* mmap_base_file = get_mmap_base_file ( )		876179	0					
ANR	876192	IdentifierDeclType	char *		876179	0					
ANR	876193	Identifier	mmap_base_file		876179	1					
ANR	876194	AssignmentExpression	* mmap_base_file = get_mmap_base_file ( )		876179	2		=			
ANR	876195	Identifier	mmap_base_file		876179	0					
ANR	876196	CallExpression	get_mmap_base_file ( )		876179	1					
ANR	876197	Callee	get_mmap_base_file		876179	0					
ANR	876198	Identifier	get_mmap_base_file		876179	0					
ANR	876199	ArgumentList			876179	1					
ANR	876200	IdentifierDeclStatement	"FILE * fp = fopen ( mmap_base_file , ""r"" ) ;"	173:1:5555:5592	876179	3	True				
ANR	876201	IdentifierDecl	"* fp = fopen ( mmap_base_file , ""r"" )"		876179	0					
ANR	876202	IdentifierDeclType	FILE *		876179	0					
ANR	876203	Identifier	fp		876179	1					
ANR	876204	AssignmentExpression	"* fp = fopen ( mmap_base_file , ""r"" )"		876179	2		=			
ANR	876205	Identifier	fp		876179	0					
ANR	876206	CallExpression	"fopen ( mmap_base_file , ""r"" )"		876179	1					
ANR	876207	Callee	fopen		876179	0					
ANR	876208	Identifier	fopen		876179	0					
ANR	876209	ArgumentList	mmap_base_file		876179	1					
ANR	876210	Argument	mmap_base_file		876179	0					
ANR	876211	Identifier	mmap_base_file		876179	0					
ANR	876212	Argument	"""r"""		876179	1					
ANR	876213	PrimaryExpression	"""r"""		876179	0					
ANR	876214	IdentifierDeclStatement	MEMORY_BASIC_INFORMATION info ;	174:1:5595:5624	876179	4	True				
ANR	876215	IdentifierDecl	info		876179	0					
ANR	876216	IdentifierDeclType	MEMORY_BASIC_INFORMATION		876179	0					
ANR	876217	Identifier	info		876179	1					
ANR	876218	ExpressionStatement	err = GetLastError ( )	176:1:5628:5648	876179	5	True				
ANR	876219	AssignmentExpression	err = GetLastError ( )		876179	0		=			
ANR	876220	Identifier	err		876179	0					
ANR	876221	CallExpression	GetLastError ( )		876179	1					
ANR	876222	Callee	GetLastError		876179	0					
ANR	876223	Identifier	GetLastError		876179	0					
ANR	876224	ArgumentList			876179	1					
ANR	876225	IfStatement	if ( ! fp )		876179	6					
ANR	876226	Condition	! fp	177:5:5655:5657	876179	0	True				
ANR	876227	UnaryOperationExpression	! fp		876179	0					
ANR	876228	UnaryOperator	!		876179	0					
ANR	876229	Identifier	fp		876179	1					
ANR	876230	CompoundStatement		9:10:191:191	876179	1					
ANR	876231	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"	178:2:5664:5726	876179	0	True				
ANR	876232	CallExpression	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"		876179	0					
ANR	876233	Callee	zend_win_error_message		876179	0					
ANR	876234	Identifier	zend_win_error_message		876179	0					
ANR	876235	ArgumentList	ACCEL_LOG_WARNING		876179	1					
ANR	876236	Argument	ACCEL_LOG_WARNING		876179	0					
ANR	876237	Identifier	ACCEL_LOG_WARNING		876179	0					
ANR	876238	Argument	mmap_base_file		876179	1					
ANR	876239	Identifier	mmap_base_file		876179	0					
ANR	876240	Argument	err		876179	2					
ANR	876241	Identifier	err		876179	0					
ANR	876242	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open base address file"" , err )"	179:2:5730:5810	876179	1	True				
ANR	876243	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open base address file"" , err )"		876179	0					
ANR	876244	Callee	zend_win_error_message		876179	0					
ANR	876245	Identifier	zend_win_error_message		876179	0					
ANR	876246	ArgumentList	ACCEL_LOG_FATAL		876179	1					
ANR	876247	Argument	ACCEL_LOG_FATAL		876179	0					
ANR	876248	Identifier	ACCEL_LOG_FATAL		876179	0					
ANR	876249	Argument	"""Unable to open base address file"""		876179	1					
ANR	876250	PrimaryExpression	"""Unable to open base address file"""		876179	0					
ANR	876251	Argument	err		876179	2					
ANR	876252	Identifier	err		876179	0					
ANR	876253	ExpressionStatement	"* error_in = ""fopen"""	180:2:5814:5831	876179	2	True				
ANR	876254	AssignmentExpression	"* error_in = ""fopen"""		876179	0		=			
ANR	876255	UnaryOperationExpression	* error_in		876179	0					
ANR	876256	UnaryOperator	*		876179	0					
ANR	876257	Identifier	error_in		876179	1					
ANR	876258	PrimaryExpression	"""fopen"""		876179	1					
ANR	876259	ReturnStatement	return ALLOC_FAILURE ;	181:2:5835:5855	876179	3	True				
ANR	876260	Identifier	ALLOC_FAILURE		876179	0					
ANR	876261	IfStatement	"if ( ! fscanf ( fp , ""%p"" , & wanted_mapping_base ) )"		876179	7					
ANR	876262	Condition	"! fscanf ( fp , ""%p"" , & wanted_mapping_base )"	183:5:5865:5903	876179	0	True				
ANR	876263	UnaryOperationExpression	"! fscanf ( fp , ""%p"" , & wanted_mapping_base )"		876179	0					
ANR	876264	UnaryOperator	!		876179	0					
ANR	876265	CallExpression	"fscanf ( fp , ""%p"" , & wanted_mapping_base )"		876179	1					
ANR	876266	Callee	fscanf		876179	0					
ANR	876267	Identifier	fscanf		876179	0					
ANR	876268	ArgumentList	fp		876179	1					
ANR	876269	Argument	fp		876179	0					
ANR	876270	Identifier	fp		876179	0					
ANR	876271	Argument	"""%p"""		876179	1					
ANR	876272	PrimaryExpression	"""%p"""		876179	0					
ANR	876273	Argument	& wanted_mapping_base		876179	2					
ANR	876274	UnaryOperationExpression	& wanted_mapping_base		876179	0					
ANR	876275	UnaryOperator	&		876179	0					
ANR	876276	Identifier	wanted_mapping_base		876179	1					
ANR	876277	CompoundStatement		15:46:437:437	876179	1					
ANR	876278	ExpressionStatement	err = GetLastError ( )	184:2:5910:5930	876179	0	True				
ANR	876279	AssignmentExpression	err = GetLastError ( )		876179	0		=			
ANR	876280	Identifier	err		876179	0					
ANR	876281	CallExpression	GetLastError ( )		876179	1					
ANR	876282	Callee	GetLastError		876179	0					
ANR	876283	Identifier	GetLastError		876179	0					
ANR	876284	ArgumentList			876179	1					
ANR	876285	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to read base address"" , err )"	185:2:5934:6009	876179	1	True				
ANR	876286	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to read base address"" , err )"		876179	0					
ANR	876287	Callee	zend_win_error_message		876179	0					
ANR	876288	Identifier	zend_win_error_message		876179	0					
ANR	876289	ArgumentList	ACCEL_LOG_FATAL		876179	1					
ANR	876290	Argument	ACCEL_LOG_FATAL		876179	0					
ANR	876291	Identifier	ACCEL_LOG_FATAL		876179	0					
ANR	876292	Argument	"""Unable to read base address"""		876179	1					
ANR	876293	PrimaryExpression	"""Unable to read base address"""		876179	0					
ANR	876294	Argument	err		876179	2					
ANR	876295	Identifier	err		876179	0					
ANR	876296	ExpressionStatement	"* error_in = ""read mapping base"""	186:2:6013:6042	876179	2	True				
ANR	876297	AssignmentExpression	"* error_in = ""read mapping base"""		876179	0		=			
ANR	876298	UnaryOperationExpression	* error_in		876179	0					
ANR	876299	UnaryOperator	*		876179	0					
ANR	876300	Identifier	error_in		876179	1					
ANR	876301	PrimaryExpression	"""read mapping base"""		876179	1					
ANR	876302	ExpressionStatement	fclose ( fp )	187:2:6046:6056	876179	3	True				
ANR	876303	CallExpression	fclose ( fp )		876179	0					
ANR	876304	Callee	fclose		876179	0					
ANR	876305	Identifier	fclose		876179	0					
ANR	876306	ArgumentList	fp		876179	1					
ANR	876307	Argument	fp		876179	0					
ANR	876308	Identifier	fp		876179	0					
ANR	876309	ReturnStatement	return ALLOC_FAILURE ;	188:2:6060:6080	876179	4	True				
ANR	876310	Identifier	ALLOC_FAILURE		876179	0					
ANR	876311	ExpressionStatement	fclose ( fp )	190:1:6086:6096	876179	8	True				
ANR	876312	CallExpression	fclose ( fp )		876179	0					
ANR	876313	Callee	fclose		876179	0					
ANR	876314	Identifier	fclose		876179	0					
ANR	876315	ArgumentList	fp		876179	1					
ANR	876316	Argument	fp		876179	0					
ANR	876317	Identifier	fp		876179	0					
ANR	876318	IfStatement	"if ( VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0 || info . State != MEM_FREE || info . RegionSize < requested_size )"		876179	9					
ANR	876319	Condition	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0 || info . State != MEM_FREE || info . RegionSize < requested_size"	193:5:6156:6286	876179	0	True				
ANR	876320	OrExpression	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0 || info . State != MEM_FREE || info . RegionSize < requested_size"		876179	0		||			
ANR	876321	EqualityExpression	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0"		876179	0		==			
ANR	876322	CallExpression	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) )"		876179	0					
ANR	876323	Callee	VirtualQuery		876179	0					
ANR	876324	Identifier	VirtualQuery		876179	0					
ANR	876325	ArgumentList	wanted_mapping_base		876179	1					
ANR	876326	Argument	wanted_mapping_base		876179	0					
ANR	876327	Identifier	wanted_mapping_base		876179	0					
ANR	876328	Argument	& info		876179	1					
ANR	876329	UnaryOperationExpression	& info		876179	0					
ANR	876330	UnaryOperator	&		876179	0					
ANR	876331	Identifier	info		876179	1					
ANR	876332	Argument	sizeof ( info )		876179	2					
ANR	876333	SizeofExpression	sizeof ( info )		876179	0					
ANR	876334	Sizeof	sizeof		876179	0					
ANR	876335	SizeofOperand	info		876179	1					
ANR	876336	PrimaryExpression	0		876179	1					
ANR	876337	OrExpression	info . State != MEM_FREE || info . RegionSize < requested_size		876179	1		||			
ANR	876338	EqualityExpression	info . State != MEM_FREE		876179	0		!=			
ANR	876339	MemberAccess	info . State		876179	0					
ANR	876340	Identifier	info		876179	0					
ANR	876341	Identifier	State		876179	1					
ANR	876342	Identifier	MEM_FREE		876179	1					
ANR	876343	RelationalExpression	info . RegionSize < requested_size		876179	1		<			
ANR	876344	MemberAccess	info . RegionSize		876179	0					
ANR	876345	Identifier	info		876179	0					
ANR	876346	Identifier	RegionSize		876179	1					
ANR	876347	Identifier	requested_size		876179	1					
ANR	876348	CompoundStatement		27:39:820:820	876179	1					
ANR	876349	ExpressionStatement	err = ERROR_INVALID_ADDRESS	196:5:6296:6323	876179	0	True				
ANR	876350	AssignmentExpression	err = ERROR_INVALID_ADDRESS		876179	0		=			
ANR	876351	Identifier	err		876179	0					
ANR	876352	Identifier	ERROR_INVALID_ADDRESS		876179	1					
ANR	876353	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to base address"" , err )"	197:2:6327:6409	876179	1	True				
ANR	876354	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to base address"" , err )"		876179	0					
ANR	876355	Callee	zend_win_error_message		876179	0					
ANR	876356	Identifier	zend_win_error_message		876179	0					
ANR	876357	ArgumentList	ACCEL_LOG_FATAL		876179	1					
ANR	876358	Argument	ACCEL_LOG_FATAL		876179	0					
ANR	876359	Identifier	ACCEL_LOG_FATAL		876179	0					
ANR	876360	Argument	"""Unable to reattach to base address"""		876179	1					
ANR	876361	PrimaryExpression	"""Unable to reattach to base address"""		876179	0					
ANR	876362	Argument	err		876179	2					
ANR	876363	Identifier	err		876179	0					
ANR	876364	ReturnStatement	return ALLOC_FAILURE ;	198:2:6413:6433	876179	2	True				
ANR	876365	Identifier	ALLOC_FAILURE		876179	0					
ANR	876366	ExpressionStatement	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , wanted_mapping_base )"	201:1:6443:6533	876179	10	True				
ANR	876367	AssignmentExpression	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , wanted_mapping_base )"		876179	0		=			
ANR	876368	Identifier	mapping_base		876179	0					
ANR	876369	CallExpression	"MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , wanted_mapping_base )"		876179	1					
ANR	876370	Callee	MapViewOfFileEx		876179	0					
ANR	876371	Identifier	MapViewOfFileEx		876179	0					
ANR	876372	ArgumentList	memfile		876179	1					
ANR	876373	Argument	memfile		876179	0					
ANR	876374	Identifier	memfile		876179	0					
ANR	876375	Argument	FILE_MAP_ALL_ACCESS		876179	1					
ANR	876376	Identifier	FILE_MAP_ALL_ACCESS		876179	0					
ANR	876377	Argument	0		876179	2					
ANR	876378	PrimaryExpression	0		876179	0					
ANR	876379	Argument	0		876179	3					
ANR	876380	PrimaryExpression	0		876179	0					
ANR	876381	Argument	0		876179	4					
ANR	876382	PrimaryExpression	0		876179	0					
ANR	876383	Argument	wanted_mapping_base		876179	5					
ANR	876384	Identifier	wanted_mapping_base		876179	0					
ANR	876385	ExpressionStatement	err = GetLastError ( )	202:1:6536:6556	876179	11	True				
ANR	876386	AssignmentExpression	err = GetLastError ( )		876179	0		=			
ANR	876387	Identifier	err		876179	0					
ANR	876388	CallExpression	GetLastError ( )		876179	1					
ANR	876389	Callee	GetLastError		876179	0					
ANR	876390	Identifier	GetLastError		876179	0					
ANR	876391	ArgumentList			876179	1					
ANR	876392	IfStatement	if ( mapping_base == NULL )		876179	12					
ANR	876393	Condition	mapping_base == NULL	204:5:6564:6583	876179	0	True				
ANR	876394	EqualityExpression	mapping_base == NULL		876179	0		==			
ANR	876395	Identifier	mapping_base		876179	0					
ANR	876396	Identifier	NULL		876179	1					
ANR	876397	CompoundStatement		36:27:1117:1117	876179	1					
ANR	876398	IfStatement	if ( err == ERROR_INVALID_ADDRESS )		876179	0					
ANR	876399	Condition	err == ERROR_INVALID_ADDRESS	205:6:6594:6621	876179	0	True				
ANR	876400	EqualityExpression	err == ERROR_INVALID_ADDRESS		876179	0		==			
ANR	876401	Identifier	err		876179	0					
ANR	876402	Identifier	ERROR_INVALID_ADDRESS		876179	1					
ANR	876403	CompoundStatement		37:36:1155:1155	876179	1					
ANR	876404	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to base address"" , err )"	206:3:6629:6711	876179	0	True				
ANR	876405	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to base address"" , err )"		876179	0					
ANR	876406	Callee	zend_win_error_message		876179	0					
ANR	876407	Identifier	zend_win_error_message		876179	0					
ANR	876408	ArgumentList	ACCEL_LOG_FATAL		876179	1					
ANR	876409	Argument	ACCEL_LOG_FATAL		876179	0					
ANR	876410	Identifier	ACCEL_LOG_FATAL		876179	0					
ANR	876411	Argument	"""Unable to reattach to base address"""		876179	1					
ANR	876412	PrimaryExpression	"""Unable to reattach to base address"""		876179	0					
ANR	876413	Argument	err		876179	2					
ANR	876414	Identifier	err		876179	0					
ANR	876415	ReturnStatement	return ALLOC_FAILURE ;	207:3:6716:6736	876179	1	True				
ANR	876416	Identifier	ALLOC_FAILURE		876179	0					
ANR	876417	ReturnStatement	return ALLOC_FAIL_MAPPING ;	209:2:6744:6769	876179	1	True				
ANR	876418	Identifier	ALLOC_FAIL_MAPPING		876179	0					
ANR	876419	ExpressionStatement	smm_shared_globals = ( zend_smm_shared_globals * ) mapping_base	211:1:6775:6836	876179	13	True				
ANR	876420	AssignmentExpression	smm_shared_globals = ( zend_smm_shared_globals * ) mapping_base		876179	0		=			
ANR	876421	Identifier	smm_shared_globals		876179	0					
ANR	876422	CastExpression	( zend_smm_shared_globals * ) mapping_base		876179	1					
ANR	876423	CastTarget	zend_smm_shared_globals *		876179	0					
ANR	876424	Identifier	mapping_base		876179	1					
ANR	876425	ReturnStatement	return SUCCESSFULLY_REATTACHED ;	213:1:6840:6870	876179	14	True				
ANR	876426	Identifier	SUCCESSFULLY_REATTACHED		876179	0					
ANR	876427	ReturnType	static int		876179	1					
ANR	876428	Identifier	zend_shared_alloc_reattach		876179	2					
ANR	876429	ParameterList	"size_t requested_size , char * * error_in"		876179	3					
ANR	876430	Parameter	size_t requested_size	168:38:5428:5448	876179	0	True				
ANR	876431	ParameterType	size_t		876179	0					
ANR	876432	Identifier	requested_size		876179	1					
ANR	876433	Parameter	char * * error_in	168:61:5451:5465	876179	1	True				
ANR	876434	ParameterType	char * *		876179	0					
ANR	876435	Identifier	error_in		876179	1					
ANR	876436	CFGEntryNode	ENTRY		876179		True				
ANR	876437	CFGExitNode	EXIT		876179		True				
ANR	876438	Symbol	memfile		876179						
ANR	876439	Symbol	ACCEL_LOG_FATAL		876179						
ANR	876440	Symbol	wanted_mapping_base		876179						
ANR	876441	Symbol	fp		876179						
ANR	876442	Symbol	error_in		876179						
ANR	876443	Symbol	get_mmap_base_file		876179						
ANR	876444	Symbol	ALLOC_FAILURE		876179						
ANR	876445	Symbol	VirtualQuery		876179						
ANR	876446	Symbol	ACCEL_LOG_WARNING		876179						
ANR	876447	Symbol	FILE_MAP_ALL_ACCESS		876179						
ANR	876448	Symbol	& wanted_mapping_base		876179						
ANR	876449	Symbol	info		876179						
ANR	876450	Symbol	fopen		876179						
ANR	876451	Symbol	smm_shared_globals		876179						
ANR	876452	Symbol	MapViewOfFileEx		876179						
ANR	876453	Symbol	ALLOC_FAIL_MAPPING		876179						
ANR	876454	Symbol	* error_in		876179						
ANR	876455	Symbol	NULL		876179						
ANR	876456	Symbol	err		876179						
ANR	876457	Symbol	& info		876179						
ANR	876458	Symbol	info . RegionSize		876179						
ANR	876459	Symbol	SUCCESSFULLY_REATTACHED		876179						
ANR	876460	Symbol	fscanf		876179						
ANR	876461	Symbol	mapping_base		876179						
ANR	876462	Symbol	info . State		876179						
ANR	876463	Symbol	mmap_base_file		876179						
ANR	876464	Symbol	GetLastError		876179						
ANR	876465	Symbol	ERROR_INVALID_ADDRESS		876179						
ANR	876466	Symbol	requested_size		876179						
ANR	876467	Symbol	MEM_FREE		876179						
ANR	876468	Function	create_segments	216:0:6875:12321							
ANR	876469	FunctionDef	"create_segments (size_t requested_size , zend_shared_segment * * * shared_segments_p , int * shared_segments_count , char * * error_in)"		876468	0					
ANR	876470	CompoundStatement		217:0:7012:12321	876468	0					
ANR	876471	IdentifierDeclStatement	"int err , ret ;"	218:1:7015:7027	876468	0	True				
ANR	876472	IdentifierDecl	err		876468	0					
ANR	876473	IdentifierDeclType	int		876468	0					
ANR	876474	Identifier	err		876468	1					
ANR	876475	IdentifierDecl	ret		876468	1					
ANR	876476	IdentifierDeclType	int		876468	0					
ANR	876477	Identifier	ret		876468	1					
ANR	876478	IdentifierDeclStatement	zend_shared_segment * shared_segment ;	219:1:7030:7065	876468	1	True				
ANR	876479	IdentifierDecl	* shared_segment		876468	0					
ANR	876480	IdentifierDeclType	zend_shared_segment *		876468	0					
ANR	876481	Identifier	shared_segment		876468	1					
ANR	876482	IdentifierDeclStatement	int map_retries = 0 ;	220:1:7068:7087	876468	2	True				
ANR	876483	IdentifierDecl	map_retries = 0		876468	0					
ANR	876484	IdentifierDeclType	int		876468	0					
ANR	876485	Identifier	map_retries		876468	1					
ANR	876486	AssignmentExpression	map_retries = 0		876468	2		=			
ANR	876487	Identifier	map_retries		876468	0					
ANR	876488	PrimaryExpression	0		876468	1					
ANR	876489	IdentifierDeclStatement	"void * default_mapping_base_set [ ] = { 0 , 0 } ;"	221:1:7090:7133	876468	3	True				
ANR	876490	IdentifierDecl	"* default_mapping_base_set [ ] = { 0 , 0 }"		876468	0					
ANR	876491	IdentifierDeclType	void * [ ]		876468	0					
ANR	876492	Identifier	default_mapping_base_set		876468	1					
ANR	876493	AssignmentExpression	"* default_mapping_base_set [ ] = { 0 , 0 }"		876468	2		=			
ANR	876494	Identifier	default_mapping_base_set		876468	0					
ANR	876495	InitializerList	0		876468	1					
ANR	876496	PrimaryExpression	0		876468	0					
ANR	876497	PrimaryExpression	0		876468	1					
ANR	876498	IdentifierDeclStatement	"void * vista_mapping_base_set [ ] = { ( void * ) 0x0000100000000000 , ( void * ) 0x0000200000000000 , ( void * ) 0x0000300000000000 , ( void * ) 0x0000700000000000 , 0 } ;"	228:1:7585:7739	876468	4	True				
ANR	876499	IdentifierDecl	"* vista_mapping_base_set [ ] = { ( void * ) 0x0000100000000000 , ( void * ) 0x0000200000000000 , ( void * ) 0x0000300000000000 , ( void * ) 0x0000700000000000 , 0 }"		876468	0					
ANR	876500	IdentifierDeclType	void * [ ]		876468	0					
ANR	876501	Identifier	vista_mapping_base_set		876468	1					
ANR	876502	AssignmentExpression	"* vista_mapping_base_set [ ] = { ( void * ) 0x0000100000000000 , ( void * ) 0x0000200000000000 , ( void * ) 0x0000300000000000 , ( void * ) 0x0000700000000000 , 0 }"		876468	2		=			
ANR	876503	Identifier	vista_mapping_base_set		876468	0					
ANR	876504	InitializerList	( void * ) 0x0000100000000000		876468	1					
ANR	876505	CastExpression	( void * ) 0x0000100000000000		876468	0					
ANR	876506	CastTarget	void *		876468	0					
ANR	876507	PrimaryExpression	0x0000100000000000		876468	1					
ANR	876508	CastExpression	( void * ) 0x0000200000000000		876468	1					
ANR	876509	CastTarget	void *		876468	0					
ANR	876510	PrimaryExpression	0x0000200000000000		876468	1					
ANR	876511	CastExpression	( void * ) 0x0000300000000000		876468	2					
ANR	876512	CastTarget	void *		876468	0					
ANR	876513	PrimaryExpression	0x0000300000000000		876468	1					
ANR	876514	CastExpression	( void * ) 0x0000700000000000		876468	3					
ANR	876515	CastTarget	void *		876468	0					
ANR	876516	PrimaryExpression	0x0000700000000000		876468	1					
ANR	876517	PrimaryExpression	0		876468	4					
ANR	876518	IdentifierDeclStatement	void * * wanted_mapping_base = default_mapping_base_set ;	232:1:7901:7954	876468	5	True				
ANR	876519	IdentifierDecl	* * wanted_mapping_base = default_mapping_base_set		876468	0					
ANR	876520	IdentifierDeclType	void * *		876468	0					
ANR	876521	Identifier	wanted_mapping_base		876468	1					
ANR	876522	AssignmentExpression	* * wanted_mapping_base = default_mapping_base_set		876468	2		=			
ANR	876523	Identifier	default_mapping_base_set		876468	0					
ANR	876524	Identifier	default_mapping_base_set		876468	1					
ANR	876525	ExpressionStatement	TSRMLS_FETCH ( )	233:1:7957:7971	876468	6	True				
ANR	876526	CallExpression	TSRMLS_FETCH ( )		876468	0					
ANR	876527	Callee	TSRMLS_FETCH		876468	0					
ANR	876528	Identifier	TSRMLS_FETCH		876468	0					
ANR	876529	ArgumentList			876468	1					
ANR	876530	ExpressionStatement	zend_shared_alloc_lock_win32 ( )	235:1:7975:8005	876468	7	True				
ANR	876531	CallExpression	zend_shared_alloc_lock_win32 ( )		876468	0					
ANR	876532	Callee	zend_shared_alloc_lock_win32		876468	0					
ANR	876533	Identifier	zend_shared_alloc_lock_win32		876468	0					
ANR	876534	ArgumentList			876468	1					
ANR	876535	DoStatement	do		876468	8					
ANR	876536	CompoundStatement		23:4:1257:1257	876468	0					
ANR	876537	ExpressionStatement	"memfile = OpenFileMapping ( FILE_MAP_WRITE , 0 , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"	240:2:8274:8365	876468	0	True				
ANR	876538	AssignmentExpression	"memfile = OpenFileMapping ( FILE_MAP_WRITE , 0 , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		876468	0		=			
ANR	876539	Identifier	memfile		876468	0					
ANR	876540	CallExpression	"OpenFileMapping ( FILE_MAP_WRITE , 0 , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		876468	1					
ANR	876541	Callee	OpenFileMapping		876468	0					
ANR	876542	Identifier	OpenFileMapping		876468	0					
ANR	876543	ArgumentList	FILE_MAP_WRITE		876468	1					
ANR	876544	Argument	FILE_MAP_WRITE		876468	0					
ANR	876545	Identifier	FILE_MAP_WRITE		876468	0					
ANR	876546	Argument	0		876468	1					
ANR	876547	PrimaryExpression	0		876468	0					
ANR	876548	Argument	create_name_with_username ( ACCEL_FILEMAP_NAME )		876468	2					
ANR	876549	CallExpression	create_name_with_username ( ACCEL_FILEMAP_NAME )		876468	0					
ANR	876550	Callee	create_name_with_username		876468	0					
ANR	876551	Identifier	create_name_with_username		876468	0					
ANR	876552	ArgumentList	ACCEL_FILEMAP_NAME		876468	1					
ANR	876553	Argument	ACCEL_FILEMAP_NAME		876468	0					
ANR	876554	Identifier	ACCEL_FILEMAP_NAME		876468	0					
ANR	876555	ExpressionStatement	err = GetLastError ( )	241:2:8369:8389	876468	1	True				
ANR	876556	AssignmentExpression	err = GetLastError ( )		876468	0		=			
ANR	876557	Identifier	err		876468	0					
ANR	876558	CallExpression	GetLastError ( )		876468	1					
ANR	876559	Callee	GetLastError		876468	0					
ANR	876560	Identifier	GetLastError		876468	0					
ANR	876561	ArgumentList			876468	1					
ANR	876562	IfStatement	if ( memfile == NULL )		876468	2					
ANR	876563	Condition	memfile == NULL	242:6:8397:8411	876468	0	True				
ANR	876564	EqualityExpression	memfile == NULL		876468	0		==			
ANR	876565	Identifier	memfile		876468	0					
ANR	876566	Identifier	NULL		876468	1					
ANR	876567	CompoundStatement		26:23:1401:1401	876468	1					
ANR	876568	BreakStatement	break ;	243:3:8419:8424	876468	0	True				
ANR	876569	ExpressionStatement	"ret = zend_shared_alloc_reattach ( requested_size , error_in )"	246:2:8433:8492	876468	3	True				
ANR	876570	AssignmentExpression	"ret = zend_shared_alloc_reattach ( requested_size , error_in )"		876468	0		=			
ANR	876571	Identifier	ret		876468	0					
ANR	876572	CallExpression	"zend_shared_alloc_reattach ( requested_size , error_in )"		876468	1					
ANR	876573	Callee	zend_shared_alloc_reattach		876468	0					
ANR	876574	Identifier	zend_shared_alloc_reattach		876468	0					
ANR	876575	ArgumentList	requested_size		876468	1					
ANR	876576	Argument	requested_size		876468	0					
ANR	876577	Identifier	requested_size		876468	0					
ANR	876578	Argument	error_in		876468	1					
ANR	876579	Identifier	error_in		876468	0					
ANR	876580	ExpressionStatement	err = GetLastError ( )	247:2:8496:8516	876468	4	True				
ANR	876581	AssignmentExpression	err = GetLastError ( )		876468	0		=			
ANR	876582	Identifier	err		876468	0					
ANR	876583	CallExpression	GetLastError ( )		876468	1					
ANR	876584	Callee	GetLastError		876468	0					
ANR	876585	Identifier	GetLastError		876468	0					
ANR	876586	ArgumentList			876468	1					
ANR	876587	IfStatement	if ( ret == ALLOC_FAIL_MAPPING )		876468	5					
ANR	876588	Condition	ret == ALLOC_FAIL_MAPPING	248:6:8524:8548	876468	0	True				
ANR	876589	EqualityExpression	ret == ALLOC_FAIL_MAPPING		876468	0		==			
ANR	876590	Identifier	ret		876468	0					
ANR	876591	Identifier	ALLOC_FAIL_MAPPING		876468	1					
ANR	876592	CompoundStatement		32:33:1538:1538	876468	1					
ANR	876593	ExpressionStatement	CloseHandle ( memfile )	250:3:8628:8648	876468	0	True				
ANR	876594	CallExpression	CloseHandle ( memfile )		876468	0					
ANR	876595	Callee	CloseHandle		876468	0					
ANR	876596	Identifier	CloseHandle		876468	0					
ANR	876597	ArgumentList	memfile		876468	1					
ANR	876598	Argument	memfile		876468	0					
ANR	876599	Identifier	memfile		876468	0					
ANR	876600	ExpressionStatement	memfile = NULL	251:3:8653:8667	876468	1	True				
ANR	876601	AssignmentExpression	memfile = NULL		876468	0		=			
ANR	876602	Identifier	memfile		876468	0					
ANR	876603	Identifier	NULL		876468	1					
ANR	876604	IfStatement	if ( ++ map_retries >= MAX_MAP_RETRIES )		876468	2					
ANR	876605	Condition	++ map_retries >= MAX_MAP_RETRIES	252:7:8676:8707	876468	0	True				
ANR	876606	RelationalExpression	++ map_retries >= MAX_MAP_RETRIES		876468	0		>=			
ANR	876607	UnaryExpression	++ map_retries		876468	0					
ANR	876608	IncDec	++		876468	0					
ANR	876609	Identifier	map_retries		876468	1					
ANR	876610	Identifier	MAX_MAP_RETRIES		876468	1					
ANR	876611	CompoundStatement		36:41:1697:1697	876468	1					
ANR	876612	BreakStatement	break ;	253:4:8716:8721	876468	0	True				
ANR	876613	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	255:3:8731:8763	876468	3	True				
ANR	876614	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	876615	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	876616	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	876617	ArgumentList			876468	1					
ANR	876618	ExpressionStatement	Sleep ( 1000 * ( map_retries + 1 ) )	256:3:8768:8799	876468	4	True				
ANR	876619	CallExpression	Sleep ( 1000 * ( map_retries + 1 ) )		876468	0					
ANR	876620	Callee	Sleep		876468	0					
ANR	876621	Identifier	Sleep		876468	0					
ANR	876622	ArgumentList	1000 * ( map_retries + 1 )		876468	1					
ANR	876623	Argument	1000 * ( map_retries + 1 )		876468	0					
ANR	876624	MultiplicativeExpression	1000 * ( map_retries + 1 )		876468	0		*			
ANR	876625	PrimaryExpression	1000		876468	0					
ANR	876626	AdditiveExpression	map_retries + 1		876468	1		+			
ANR	876627	Identifier	map_retries		876468	0					
ANR	876628	PrimaryExpression	1		876468	1					
ANR	876629	ExpressionStatement	zend_shared_alloc_lock_win32 ( )	257:3:8804:8834	876468	5	True				
ANR	876630	CallExpression	zend_shared_alloc_lock_win32 ( )		876468	0					
ANR	876631	Callee	zend_shared_alloc_lock_win32		876468	0					
ANR	876632	Identifier	zend_shared_alloc_lock_win32		876468	0					
ANR	876633	ArgumentList			876468	1					
ANR	876634	ElseStatement	else		876468	0					
ANR	876635	CompoundStatement		42:9:1832:1832	876468	0					
ANR	876636	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	259:3:8850:8882	876468	0	True				
ANR	876637	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	876638	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	876639	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	876640	ArgumentList			876468	1					
ANR	876641	ReturnStatement	return ret ;	260:3:8887:8897	876468	1	True				
ANR	876642	Identifier	ret		876468	0					
ANR	876643	Condition	1	262:10:8913:8913	876468	1	True				
ANR	876644	PrimaryExpression	1		876468	0					
ANR	876645	IfStatement	if ( map_retries == MAX_MAP_RETRIES )		876468	9					
ANR	876646	Condition	map_retries == MAX_MAP_RETRIES	264:5:8923:8952	876468	0	True				
ANR	876647	EqualityExpression	map_retries == MAX_MAP_RETRIES		876468	0		==			
ANR	876648	Identifier	map_retries		876468	0					
ANR	876649	Identifier	MAX_MAP_RETRIES		876468	1					
ANR	876650	CompoundStatement		48:37:1942:1942	876468	1					
ANR	876651	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	265:2:8959:8991	876468	0	True				
ANR	876652	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	876653	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	876654	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	876655	ArgumentList			876468	1					
ANR	876656	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open file mapping"" , err )"	266:2:8995:9070	876468	1	True				
ANR	876657	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open file mapping"" , err )"		876468	0					
ANR	876658	Callee	zend_win_error_message		876468	0					
ANR	876659	Identifier	zend_win_error_message		876468	0					
ANR	876660	ArgumentList	ACCEL_LOG_FATAL		876468	1					
ANR	876661	Argument	ACCEL_LOG_FATAL		876468	0					
ANR	876662	Identifier	ACCEL_LOG_FATAL		876468	0					
ANR	876663	Argument	"""Unable to open file mapping"""		876468	1					
ANR	876664	PrimaryExpression	"""Unable to open file mapping"""		876468	0					
ANR	876665	Argument	err		876468	2					
ANR	876666	Identifier	err		876468	0					
ANR	876667	ExpressionStatement	"* error_in = ""OpenFileMapping"""	267:2:9074:9103	876468	2	True				
ANR	876668	AssignmentExpression	"* error_in = ""OpenFileMapping"""		876468	0		=			
ANR	876669	UnaryOperationExpression	* error_in		876468	0					
ANR	876670	UnaryOperator	*		876468	0					
ANR	876671	Identifier	error_in		876468	1					
ANR	876672	PrimaryExpression	"""OpenFileMapping"""		876468	1					
ANR	876673	ReturnStatement	return ALLOC_FAILURE ;	268:2:9107:9127	876468	3	True				
ANR	876674	Identifier	ALLOC_FAILURE		876468	0					
ANR	876675	ExpressionStatement	* shared_segments_count = 1	272:1:9163:9189	876468	10	True				
ANR	876676	AssignmentExpression	* shared_segments_count = 1		876468	0		=			
ANR	876677	UnaryOperationExpression	* shared_segments_count		876468	0					
ANR	876678	UnaryOperator	*		876468	0					
ANR	876679	Identifier	shared_segments_count		876468	1					
ANR	876680	PrimaryExpression	1		876468	1					
ANR	876681	ExpressionStatement	"* shared_segments_p = ( zend_shared_segment * * ) calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"	273:1:9192:9291	876468	11	True				
ANR	876682	AssignmentExpression	"* shared_segments_p = ( zend_shared_segment * * ) calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"		876468	0		=			
ANR	876683	UnaryOperationExpression	* shared_segments_p		876468	0					
ANR	876684	UnaryOperator	*		876468	0					
ANR	876685	Identifier	shared_segments_p		876468	1					
ANR	876686	CastExpression	"( zend_shared_segment * * ) calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"		876468	1					
ANR	876687	CastTarget	zend_shared_segment * *		876468	0					
ANR	876688	CallExpression	"calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"		876468	1					
ANR	876689	Callee	calloc		876468	0					
ANR	876690	Identifier	calloc		876468	0					
ANR	876691	ArgumentList	1		876468	1					
ANR	876692	Argument	1		876468	0					
ANR	876693	PrimaryExpression	1		876468	0					
ANR	876694	Argument	sizeof ( zend_shared_segment ) + sizeof ( void * )		876468	1					
ANR	876695	AdditiveExpression	sizeof ( zend_shared_segment ) + sizeof ( void * )		876468	0		+			
ANR	876696	SizeofExpression	sizeof ( zend_shared_segment )		876468	0					
ANR	876697	Sizeof	sizeof		876468	0					
ANR	876698	SizeofOperand	zend_shared_segment		876468	1					
ANR	876699	SizeofExpression	sizeof ( void * )		876468	1					
ANR	876700	Sizeof	sizeof		876468	0					
ANR	876701	SizeofOperand	void *		876468	1					
ANR	876702	IfStatement	if ( ! * shared_segments_p )		876468	12					
ANR	876703	Condition	! * shared_segments_p	274:5:9298:9316	876468	0	True				
ANR	876704	UnaryOperationExpression	! * shared_segments_p		876468	0					
ANR	876705	UnaryOperator	!		876468	0					
ANR	876706	UnaryOperationExpression	* shared_segments_p		876468	1					
ANR	876707	UnaryOperator	*		876468	0					
ANR	876708	Identifier	shared_segments_p		876468	1					
ANR	876709	CompoundStatement		58:26:2306:2306	876468	1					
ANR	876710	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	275:2:9323:9355	876468	0	True				
ANR	876711	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	876712	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	876713	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	876714	ArgumentList			876468	1					
ANR	876715	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""calloc() failed"" , GetLastError ( ) )"	276:2:9359:9433	876468	1	True				
ANR	876716	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""calloc() failed"" , GetLastError ( ) )"		876468	0					
ANR	876717	Callee	zend_win_error_message		876468	0					
ANR	876718	Identifier	zend_win_error_message		876468	0					
ANR	876719	ArgumentList	ACCEL_LOG_FATAL		876468	1					
ANR	876720	Argument	ACCEL_LOG_FATAL		876468	0					
ANR	876721	Identifier	ACCEL_LOG_FATAL		876468	0					
ANR	876722	Argument	"""calloc() failed"""		876468	1					
ANR	876723	PrimaryExpression	"""calloc() failed"""		876468	0					
ANR	876724	Argument	GetLastError ( )		876468	2					
ANR	876725	CallExpression	GetLastError ( )		876468	0					
ANR	876726	Callee	GetLastError		876468	0					
ANR	876727	Identifier	GetLastError		876468	0					
ANR	876728	ArgumentList			876468	1					
ANR	876729	ExpressionStatement	"* error_in = ""calloc"""	277:2:9437:9457	876468	2	True				
ANR	876730	AssignmentExpression	"* error_in = ""calloc"""		876468	0		=			
ANR	876731	UnaryOperationExpression	* error_in		876468	0					
ANR	876732	UnaryOperator	*		876468	0					
ANR	876733	Identifier	error_in		876468	1					
ANR	876734	PrimaryExpression	"""calloc"""		876468	1					
ANR	876735	ReturnStatement	return ALLOC_FAILURE ;	278:2:9461:9481	876468	3	True				
ANR	876736	Identifier	ALLOC_FAILURE		876468	0					
ANR	876737	ExpressionStatement	shared_segment = ( zend_shared_segment * ) ( ( char * ) ( * shared_segments_p ) + sizeof ( void * ) )	280:1:9487:9574	876468	13	True				
ANR	876738	AssignmentExpression	shared_segment = ( zend_shared_segment * ) ( ( char * ) ( * shared_segments_p ) + sizeof ( void * ) )		876468	0		=			
ANR	876739	Identifier	shared_segment		876468	0					
ANR	876740	CastExpression	( zend_shared_segment * ) ( ( char * ) ( * shared_segments_p ) + sizeof ( void * ) )		876468	1					
ANR	876741	CastTarget	zend_shared_segment *		876468	0					
ANR	876742	AdditiveExpression	( char * ) ( * shared_segments_p ) + sizeof ( void * )		876468	1		+			
ANR	876743	CastExpression	( char * ) ( * shared_segments_p )		876468	0					
ANR	876744	CastTarget	char *		876468	0					
ANR	876745	UnaryOperationExpression	* shared_segments_p		876468	1					
ANR	876746	UnaryOperator	*		876468	0					
ANR	876747	Identifier	shared_segments_p		876468	1					
ANR	876748	SizeofExpression	sizeof ( void * )		876468	1					
ANR	876749	Sizeof	sizeof		876468	0					
ANR	876750	SizeofOperand	void *		876468	1					
ANR	876751	ExpressionStatement	( * shared_segments_p ) [ 0 ] = shared_segment	281:1:9577:9617	876468	14	True				
ANR	876752	AssignmentExpression	( * shared_segments_p ) [ 0 ] = shared_segment		876468	0		=			
ANR	876753	ArrayIndexing	( * shared_segments_p ) [ 0 ]		876468	0					
ANR	876754	UnaryOperationExpression	* shared_segments_p		876468	0					
ANR	876755	UnaryOperator	*		876468	0					
ANR	876756	Identifier	shared_segments_p		876468	1					
ANR	876757	PrimaryExpression	0		876468	1					
ANR	876758	Identifier	shared_segment		876468	1					
ANR	876759	ExpressionStatement	"memfile = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , requested_size , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"	283:1:9621:9766	876468	15	True				
ANR	876760	AssignmentExpression	"memfile = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , requested_size , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		876468	0		=			
ANR	876761	Identifier	memfile		876468	0					
ANR	876762	CallExpression	"CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , requested_size , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		876468	1					
ANR	876763	Callee	CreateFileMapping		876468	0					
ANR	876764	Identifier	CreateFileMapping		876468	0					
ANR	876765	ArgumentList	INVALID_HANDLE_VALUE		876468	1					
ANR	876766	Argument	INVALID_HANDLE_VALUE		876468	0					
ANR	876767	Identifier	INVALID_HANDLE_VALUE		876468	0					
ANR	876768	Argument	NULL		876468	1					
ANR	876769	Identifier	NULL		876468	0					
ANR	876770	Argument	PAGE_READWRITE		876468	2					
ANR	876771	Identifier	PAGE_READWRITE		876468	0					
ANR	876772	Argument	0		876468	3					
ANR	876773	PrimaryExpression	0		876468	0					
ANR	876774	Argument	requested_size		876468	4					
ANR	876775	Identifier	requested_size		876468	0					
ANR	876776	Argument	create_name_with_username ( ACCEL_FILEMAP_NAME )		876468	5					
ANR	876777	CallExpression	create_name_with_username ( ACCEL_FILEMAP_NAME )		876468	0					
ANR	876778	Callee	create_name_with_username		876468	0					
ANR	876779	Identifier	create_name_with_username		876468	0					
ANR	876780	ArgumentList	ACCEL_FILEMAP_NAME		876468	1					
ANR	876781	Argument	ACCEL_FILEMAP_NAME		876468	0					
ANR	876782	Identifier	ACCEL_FILEMAP_NAME		876468	0					
ANR	876783	ExpressionStatement	err = GetLastError ( )	285:1:9769:9789	876468	16	True				
ANR	876784	AssignmentExpression	err = GetLastError ( )		876468	0		=			
ANR	876785	Identifier	err		876468	0					
ANR	876786	CallExpression	GetLastError ( )		876468	1					
ANR	876787	Callee	GetLastError		876468	0					
ANR	876788	Identifier	GetLastError		876468	0					
ANR	876789	ArgumentList			876468	1					
ANR	876790	IfStatement	if ( memfile == NULL )		876468	17					
ANR	876791	Condition	memfile == NULL	286:5:9796:9810	876468	0	True				
ANR	876792	EqualityExpression	memfile == NULL		876468	0		==			
ANR	876793	Identifier	memfile		876468	0					
ANR	876794	Identifier	NULL		876468	1					
ANR	876795	CompoundStatement		70:22:2800:2800	876468	1					
ANR	876796	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	287:2:9817:9849	876468	0	True				
ANR	876797	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	876798	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	876799	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	876800	ArgumentList			876468	1					
ANR	876801	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create file mapping"" , err )"	288:2:9853:9930	876468	1	True				
ANR	876802	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create file mapping"" , err )"		876468	0					
ANR	876803	Callee	zend_win_error_message		876468	0					
ANR	876804	Identifier	zend_win_error_message		876468	0					
ANR	876805	ArgumentList	ACCEL_LOG_FATAL		876468	1					
ANR	876806	Argument	ACCEL_LOG_FATAL		876468	0					
ANR	876807	Identifier	ACCEL_LOG_FATAL		876468	0					
ANR	876808	Argument	"""Unable to create file mapping"""		876468	1					
ANR	876809	PrimaryExpression	"""Unable to create file mapping"""		876468	0					
ANR	876810	Argument	err		876468	2					
ANR	876811	Identifier	err		876468	0					
ANR	876812	ExpressionStatement	"* error_in = ""CreateFileMapping"""	289:2:9934:9965	876468	2	True				
ANR	876813	AssignmentExpression	"* error_in = ""CreateFileMapping"""		876468	0		=			
ANR	876814	UnaryOperationExpression	* error_in		876468	0					
ANR	876815	UnaryOperator	*		876468	0					
ANR	876816	Identifier	error_in		876468	1					
ANR	876817	PrimaryExpression	"""CreateFileMapping"""		876468	1					
ANR	876818	ReturnStatement	return ALLOC_FAILURE ;	290:2:9969:9989	876468	3	True				
ANR	876819	Identifier	ALLOC_FAILURE		876468	0					
ANR	876820	IfStatement	if ( ! ZCG ( accel_directives ) . mmap_base || ! * ZCG ( accel_directives ) . mmap_base )		876468	18					
ANR	876821	Condition	! ZCG ( accel_directives ) . mmap_base || ! * ZCG ( accel_directives ) . mmap_base	296:5:10217:10285	876468	0	True				
ANR	876822	OrExpression	! ZCG ( accel_directives ) . mmap_base || ! * ZCG ( accel_directives ) . mmap_base		876468	0		||			
ANR	876823	UnaryOperationExpression	! ZCG ( accel_directives ) . mmap_base		876468	0					
ANR	876824	UnaryOperator	!		876468	0					
ANR	876825	MemberAccess	ZCG ( accel_directives ) . mmap_base		876468	1					
ANR	876826	CallExpression	ZCG ( accel_directives )		876468	0					
ANR	876827	Callee	ZCG		876468	0					
ANR	876828	Identifier	ZCG		876468	0					
ANR	876829	ArgumentList	accel_directives		876468	1					
ANR	876830	Argument	accel_directives		876468	0					
ANR	876831	Identifier	accel_directives		876468	0					
ANR	876832	Identifier	mmap_base		876468	1					
ANR	876833	UnaryOperationExpression	! * ZCG ( accel_directives ) . mmap_base		876468	1					
ANR	876834	UnaryOperator	!		876468	0					
ANR	876835	UnaryOperationExpression	* ZCG ( accel_directives ) . mmap_base		876468	1					
ANR	876836	UnaryOperator	*		876468	0					
ANR	876837	MemberAccess	ZCG ( accel_directives ) . mmap_base		876468	1					
ANR	876838	CallExpression	ZCG ( accel_directives )		876468	0					
ANR	876839	Callee	ZCG		876468	0					
ANR	876840	Identifier	ZCG		876468	0					
ANR	876841	ArgumentList	accel_directives		876468	1					
ANR	876842	Argument	accel_directives		876468	0					
ANR	876843	Identifier	accel_directives		876468	0					
ANR	876844	Identifier	mmap_base		876468	1					
ANR	876845	CompoundStatement		80:76:3275:3275	876468	1					
ANR	876846	DoStatement	do		876468	0					
ANR	876847	CompoundStatement		83:3:3312:3326	876468	0					
ANR	876848	IdentifierDeclStatement	OSVERSIONINFOEX osvi ;	298:3:10300:10320	876468	0	True				
ANR	876849	IdentifierDecl	osvi		876468	0					
ANR	876850	IdentifierDeclType	OSVERSIONINFOEX		876468	0					
ANR	876851	Identifier	osvi		876468	1					
ANR	876852	IdentifierDeclStatement	SYSTEM_INFO si ;	299:3:10325:10339	876468	1	True				
ANR	876853	IdentifierDecl	si		876468	0					
ANR	876854	IdentifierDeclType	SYSTEM_INFO		876468	0					
ANR	876855	Identifier	si		876468	1					
ANR	876856	ExpressionStatement	"ZeroMemory ( & si , sizeof ( SYSTEM_INFO ) )"	301:3:10345:10381	876468	2	True				
ANR	876857	CallExpression	"ZeroMemory ( & si , sizeof ( SYSTEM_INFO ) )"		876468	0					
ANR	876858	Callee	ZeroMemory		876468	0					
ANR	876859	Identifier	ZeroMemory		876468	0					
ANR	876860	ArgumentList	& si		876468	1					
ANR	876861	Argument	& si		876468	0					
ANR	876862	UnaryOperationExpression	& si		876468	0					
ANR	876863	UnaryOperator	&		876468	0					
ANR	876864	Identifier	si		876468	1					
ANR	876865	Argument	sizeof ( SYSTEM_INFO )		876468	1					
ANR	876866	SizeofExpression	sizeof ( SYSTEM_INFO )		876468	0					
ANR	876867	Sizeof	sizeof		876468	0					
ANR	876868	SizeofOperand	SYSTEM_INFO		876468	1					
ANR	876869	ExpressionStatement	"ZeroMemory ( & osvi , sizeof ( OSVERSIONINFOEX ) )"	302:3:10386:10428	876468	3	True				
ANR	876870	CallExpression	"ZeroMemory ( & osvi , sizeof ( OSVERSIONINFOEX ) )"		876468	0					
ANR	876871	Callee	ZeroMemory		876468	0					
ANR	876872	Identifier	ZeroMemory		876468	0					
ANR	876873	ArgumentList	& osvi		876468	1					
ANR	876874	Argument	& osvi		876468	0					
ANR	876875	UnaryOperationExpression	& osvi		876468	0					
ANR	876876	UnaryOperator	&		876468	0					
ANR	876877	Identifier	osvi		876468	1					
ANR	876878	Argument	sizeof ( OSVERSIONINFOEX )		876468	1					
ANR	876879	SizeofExpression	sizeof ( OSVERSIONINFOEX )		876468	0					
ANR	876880	Sizeof	sizeof		876468	0					
ANR	876881	SizeofOperand	OSVERSIONINFOEX		876468	1					
ANR	876882	ExpressionStatement	osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )	304:3:10434:10484	876468	4	True				
ANR	876883	AssignmentExpression	osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )		876468	0		=			
ANR	876884	MemberAccess	osvi . dwOSVersionInfoSize		876468	0					
ANR	876885	Identifier	osvi		876468	0					
ANR	876886	Identifier	dwOSVersionInfoSize		876468	1					
ANR	876887	SizeofExpression	sizeof ( OSVERSIONINFOEX )		876468	1					
ANR	876888	Sizeof	sizeof		876468	0					
ANR	876889	SizeofOperand	OSVERSIONINFOEX		876468	1					
ANR	876890	IfStatement	if ( ! GetVersionEx ( ( OSVERSIONINFO * ) & osvi ) )		876468	5					
ANR	876891	Condition	! GetVersionEx ( ( OSVERSIONINFO * ) & osvi )	306:7:10494:10533	876468	0	True				
ANR	876892	UnaryOperationExpression	! GetVersionEx ( ( OSVERSIONINFO * ) & osvi )		876468	0					
ANR	876893	UnaryOperator	!		876468	0					
ANR	876894	CallExpression	GetVersionEx ( ( OSVERSIONINFO * ) & osvi )		876468	1					
ANR	876895	Callee	GetVersionEx		876468	0					
ANR	876896	Identifier	GetVersionEx		876468	0					
ANR	876897	ArgumentList	( OSVERSIONINFO * ) & osvi		876468	1					
ANR	876898	Argument	( OSVERSIONINFO * ) & osvi		876468	0					
ANR	876899	CastExpression	( OSVERSIONINFO * ) & osvi		876468	0					
ANR	876900	CastTarget	OSVERSIONINFO *		876468	0					
ANR	876901	UnaryOperationExpression	& osvi		876468	1					
ANR	876902	UnaryOperator	&		876468	0					
ANR	876903	Identifier	osvi		876468	1					
ANR	876904	CompoundStatement		90:49:3523:3523	876468	1					
ANR	876905	ExpressionStatement	osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )	307:4:10542:10590	876468	0	True				
ANR	876906	AssignmentExpression	osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )		876468	0		=			
ANR	876907	MemberAccess	osvi . dwOSVersionInfoSize		876468	0					
ANR	876908	Identifier	osvi		876468	0					
ANR	876909	Identifier	dwOSVersionInfoSize		876468	1					
ANR	876910	SizeofExpression	sizeof ( OSVERSIONINFO )		876468	1					
ANR	876911	Sizeof	sizeof		876468	0					
ANR	876912	SizeofOperand	OSVERSIONINFO		876468	1					
ANR	876913	IfStatement	if ( ! GetVersionEx ( ( OSVERSIONINFO * ) & osvi ) )		876468	1					
ANR	876914	Condition	! GetVersionEx ( ( OSVERSIONINFO * ) & osvi )	308:8:10600:10636	876468	0	True				
ANR	876915	UnaryOperationExpression	! GetVersionEx ( ( OSVERSIONINFO * ) & osvi )		876468	0					
ANR	876916	UnaryOperator	!		876468	0					
ANR	876917	CallExpression	GetVersionEx ( ( OSVERSIONINFO * ) & osvi )		876468	1					
ANR	876918	Callee	GetVersionEx		876468	0					
ANR	876919	Identifier	GetVersionEx		876468	0					
ANR	876920	ArgumentList	( OSVERSIONINFO * ) & osvi		876468	1					
ANR	876921	Argument	( OSVERSIONINFO * ) & osvi		876468	0					
ANR	876922	CastExpression	( OSVERSIONINFO * ) & osvi		876468	0					
ANR	876923	CastTarget	OSVERSIONINFO *		876468	0					
ANR	876924	UnaryOperationExpression	& osvi		876468	1					
ANR	876925	UnaryOperator	&		876468	0					
ANR	876926	Identifier	osvi		876468	1					
ANR	876927	CompoundStatement		92:47:3626:3626	876468	1					
ANR	876928	BreakStatement	break ;	309:5:10646:10651	876468	0	True				
ANR	876929	ExpressionStatement	GetSystemInfo ( & si )	313:3:10668:10686	876468	6	True				
ANR	876930	CallExpression	GetSystemInfo ( & si )		876468	0					
ANR	876931	Callee	GetSystemInfo		876468	0					
ANR	876932	Identifier	GetSystemInfo		876468	0					
ANR	876933	ArgumentList	& si		876468	1					
ANR	876934	Argument	& si		876468	0					
ANR	876935	UnaryOperationExpression	& si		876468	0					
ANR	876936	UnaryOperator	&		876468	0					
ANR	876937	Identifier	si		876468	1					
ANR	876938	IfStatement	if ( osvi . dwPlatformId == VER_PLATFORM_WIN32_NT && osvi . dwMajorVersion >= 6 )		876468	7					
ANR	876939	Condition	osvi . dwPlatformId == VER_PLATFORM_WIN32_NT && osvi . dwMajorVersion >= 6	316:7:10728:10797	876468	0	True				
ANR	876940	AndExpression	osvi . dwPlatformId == VER_PLATFORM_WIN32_NT && osvi . dwMajorVersion >= 6		876468	0		&&			
ANR	876941	EqualityExpression	osvi . dwPlatformId == VER_PLATFORM_WIN32_NT		876468	0		==			
ANR	876942	MemberAccess	osvi . dwPlatformId		876468	0					
ANR	876943	Identifier	osvi		876468	0					
ANR	876944	Identifier	dwPlatformId		876468	1					
ANR	876945	Identifier	VER_PLATFORM_WIN32_NT		876468	1					
ANR	876946	RelationalExpression	osvi . dwMajorVersion >= 6		876468	1		>=			
ANR	876947	MemberAccess	osvi . dwMajorVersion		876468	0					
ANR	876948	Identifier	osvi		876468	0					
ANR	876949	Identifier	dwMajorVersion		876468	1					
ANR	876950	PrimaryExpression	6		876468	1					
ANR	876951	CompoundStatement		100:79:3787:3787	876468	1					
ANR	876952	ExpressionStatement	wanted_mapping_base = vista_mapping_base_set	317:4:10806:10850	876468	0	True				
ANR	876953	AssignmentExpression	wanted_mapping_base = vista_mapping_base_set		876468	0		=			
ANR	876954	Identifier	wanted_mapping_base		876468	0					
ANR	876955	Identifier	vista_mapping_base_set		876468	1					
ANR	876956	Condition	0	319:11:10868:10868	876468	1	True				
ANR	876957	PrimaryExpression	0		876468	0					
ANR	876958	ElseStatement	else		876468	0					
ANR	876959	CompoundStatement		105:2:3871:3912	876468	0					
ANR	876960	IdentifierDeclStatement	char * s = ZCG ( accel_directives ) . mmap_base ;	321:2:10884:10925	876468	0	True				
ANR	876961	IdentifierDecl	* s = ZCG ( accel_directives ) . mmap_base		876468	0					
ANR	876962	IdentifierDeclType	char *		876468	0					
ANR	876963	Identifier	s		876468	1					
ANR	876964	AssignmentExpression	* s = ZCG ( accel_directives ) . mmap_base		876468	2		=			
ANR	876965	Identifier	s		876468	0					
ANR	876966	MemberAccess	ZCG ( accel_directives ) . mmap_base		876468	1					
ANR	876967	CallExpression	ZCG ( accel_directives )		876468	0					
ANR	876968	Callee	ZCG		876468	0					
ANR	876969	Identifier	ZCG		876468	0					
ANR	876970	ArgumentList	accel_directives		876468	1					
ANR	876971	Argument	accel_directives		876468	0					
ANR	876972	Identifier	accel_directives		876468	0					
ANR	876973	Identifier	mmap_base		876468	1					
ANR	876974	IfStatement	if ( * s == '0' && * ( s + 1 ) == 'x' )		876468	1					
ANR	876975	Condition	* s == '0' && * ( s + 1 ) == 'x'	324:6:10995:11022	876468	0	True				
ANR	876976	AndExpression	* s == '0' && * ( s + 1 ) == 'x'		876468	0		&&			
ANR	876977	EqualityExpression	* s == '0'		876468	0		==			
ANR	876978	UnaryOperationExpression	* s		876468	0					
ANR	876979	UnaryOperator	*		876468	0					
ANR	876980	Identifier	s		876468	1					
ANR	876981	PrimaryExpression	'0'		876468	1					
ANR	876982	EqualityExpression	* ( s + 1 ) == 'x'		876468	1		==			
ANR	876983	UnaryOperationExpression	* ( s + 1 )		876468	0					
ANR	876984	UnaryOperator	*		876468	0					
ANR	876985	AdditiveExpression	s + 1		876468	1		+			
ANR	876986	Identifier	s		876468	0					
ANR	876987	PrimaryExpression	1		876468	1					
ANR	876988	PrimaryExpression	'x'		876468	1					
ANR	876989	CompoundStatement		108:36:4012:4012	876468	1					
ANR	876990	ExpressionStatement	s += 2	325:3:11030:11036	876468	0	True				
ANR	876991	AssignmentExpression	s += 2		876468	0		+=			
ANR	876992	Identifier	s		876468	0					
ANR	876993	PrimaryExpression	2		876468	1					
ANR	876994	IfStatement	"if ( sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] ) != 1 )"		876468	2					
ANR	876995	Condition	"sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] ) != 1"	327:6:11048:11097	876468	0	True				
ANR	876996	EqualityExpression	"sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] ) != 1"		876468	0		!=			
ANR	876997	CallExpression	"sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] )"		876468	0					
ANR	876998	Callee	sscanf		876468	0					
ANR	876999	Identifier	sscanf		876468	0					
ANR	877000	ArgumentList	s		876468	1					
ANR	877001	Argument	s		876468	0					
ANR	877002	Identifier	s		876468	0					
ANR	877003	Argument	"""%p"""		876468	1					
ANR	877004	PrimaryExpression	"""%p"""		876468	0					
ANR	877005	Argument	& default_mapping_base_set [ 0 ]		876468	2					
ANR	877006	UnaryOperationExpression	& default_mapping_base_set [ 0 ]		876468	0					
ANR	877007	UnaryOperator	&		876468	0					
ANR	877008	ArrayIndexing	default_mapping_base_set [ 0 ]		876468	1					
ANR	877009	Identifier	default_mapping_base_set		876468	0					
ANR	877010	PrimaryExpression	0		876468	1					
ANR	877011	PrimaryExpression	1		876468	1					
ANR	877012	CompoundStatement		111:58:4087:4087	876468	1					
ANR	877013	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	328:3:11105:11137	876468	0	True				
ANR	877014	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	877015	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	877016	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	877017	ArgumentList			876468	1					
ANR	877018	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Bad mapping address specified in opcache.mmap_base"" , err )"	329:3:11142:11240	876468	1	True				
ANR	877019	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Bad mapping address specified in opcache.mmap_base"" , err )"		876468	0					
ANR	877020	Callee	zend_win_error_message		876468	0					
ANR	877021	Identifier	zend_win_error_message		876468	0					
ANR	877022	ArgumentList	ACCEL_LOG_FATAL		876468	1					
ANR	877023	Argument	ACCEL_LOG_FATAL		876468	0					
ANR	877024	Identifier	ACCEL_LOG_FATAL		876468	0					
ANR	877025	Argument	"""Bad mapping address specified in opcache.mmap_base"""		876468	1					
ANR	877026	PrimaryExpression	"""Bad mapping address specified in opcache.mmap_base"""		876468	0					
ANR	877027	Argument	err		876468	2					
ANR	877028	Identifier	err		876468	0					
ANR	877029	ReturnStatement	return ALLOC_FAILURE ;	330:3:11245:11265	876468	2	True				
ANR	877030	Identifier	ALLOC_FAILURE		876468	0					
ANR	877031	DoStatement	do		876468	19					
ANR	877032	CompoundStatement		118:4:4266:4266	876468	0					
ANR	877033	ExpressionStatement	"shared_segment -> p = mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"	335:2:11283:11394	876468	0	True				
ANR	877034	AssignmentExpression	"shared_segment -> p = mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"		876468	0		=			
ANR	877035	PtrMemberAccess	shared_segment -> p		876468	0					
ANR	877036	Identifier	shared_segment		876468	0					
ANR	877037	Identifier	p		876468	1					
ANR	877038	AssignmentExpression	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"		876468	1		=			
ANR	877039	Identifier	mapping_base		876468	0					
ANR	877040	CallExpression	"MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"		876468	1					
ANR	877041	Callee	MapViewOfFileEx		876468	0					
ANR	877042	Identifier	MapViewOfFileEx		876468	0					
ANR	877043	ArgumentList	memfile		876468	1					
ANR	877044	Argument	memfile		876468	0					
ANR	877045	Identifier	memfile		876468	0					
ANR	877046	Argument	FILE_MAP_ALL_ACCESS		876468	1					
ANR	877047	Identifier	FILE_MAP_ALL_ACCESS		876468	0					
ANR	877048	Argument	0		876468	2					
ANR	877049	PrimaryExpression	0		876468	0					
ANR	877050	Argument	0		876468	3					
ANR	877051	PrimaryExpression	0		876468	0					
ANR	877052	Argument	0		876468	4					
ANR	877053	PrimaryExpression	0		876468	0					
ANR	877054	Argument	* wanted_mapping_base		876468	5					
ANR	877055	UnaryOperationExpression	* wanted_mapping_base		876468	0					
ANR	877056	UnaryOperator	*		876468	0					
ANR	877057	Identifier	wanted_mapping_base		876468	1					
ANR	877058	IfStatement	if ( * wanted_mapping_base == NULL )		876468	1					
ANR	877059	Condition	* wanted_mapping_base == NULL	336:6:11402:11429	876468	0	True				
ANR	877060	EqualityExpression	* wanted_mapping_base == NULL		876468	0		==			
ANR	877061	UnaryOperationExpression	* wanted_mapping_base		876468	0					
ANR	877062	UnaryOperator	*		876468	0					
ANR	877063	Identifier	wanted_mapping_base		876468	1					
ANR	877064	Identifier	NULL		876468	1					
ANR	877065	CompoundStatement		120:36:4419:4419	876468	1					
ANR	877066	BreakStatement	break ;	337:3:11495:11500	876468	0	True				
ANR	877067	ExpressionStatement	wanted_mapping_base ++	339:2:11508:11529	876468	2	True				
ANR	877068	PostIncDecOperationExpression	wanted_mapping_base ++		876468	0					
ANR	877069	Identifier	wanted_mapping_base		876468	0					
ANR	877070	IncDec	++		876468	1					
ANR	877071	Condition	! mapping_base	340:10:11541:11553	876468	1	True				
ANR	877072	UnaryOperationExpression	! mapping_base		876468	0					
ANR	877073	UnaryOperator	!		876468	0					
ANR	877074	Identifier	mapping_base		876468	1					
ANR	877075	ExpressionStatement	err = GetLastError ( )	342:1:11559:11579	876468	20	True				
ANR	877076	AssignmentExpression	err = GetLastError ( )		876468	0		=			
ANR	877077	Identifier	err		876468	0					
ANR	877078	CallExpression	GetLastError ( )		876468	1					
ANR	877079	Callee	GetLastError		876468	0					
ANR	877080	Identifier	GetLastError		876468	0					
ANR	877081	ArgumentList			876468	1					
ANR	877082	IfStatement	if ( mapping_base == NULL )		876468	21					
ANR	877083	Condition	mapping_base == NULL	343:5:11586:11605	876468	0	True				
ANR	877084	EqualityExpression	mapping_base == NULL		876468	0		==			
ANR	877085	Identifier	mapping_base		876468	0					
ANR	877086	Identifier	NULL		876468	1					
ANR	877087	CompoundStatement		127:27:4595:4595	876468	1					
ANR	877088	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	344:2:11612:11644	876468	0	True				
ANR	877089	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	877090	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	877091	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	877092	ArgumentList			876468	1					
ANR	877093	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create view for file mapping"" , err )"	345:2:11648:11734	876468	1	True				
ANR	877094	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create view for file mapping"" , err )"		876468	0					
ANR	877095	Callee	zend_win_error_message		876468	0					
ANR	877096	Identifier	zend_win_error_message		876468	0					
ANR	877097	ArgumentList	ACCEL_LOG_FATAL		876468	1					
ANR	877098	Argument	ACCEL_LOG_FATAL		876468	0					
ANR	877099	Identifier	ACCEL_LOG_FATAL		876468	0					
ANR	877100	Argument	"""Unable to create view for file mapping"""		876468	1					
ANR	877101	PrimaryExpression	"""Unable to create view for file mapping"""		876468	0					
ANR	877102	Argument	err		876468	2					
ANR	877103	Identifier	err		876468	0					
ANR	877104	ExpressionStatement	"* error_in = ""MapViewOfFile"""	346:2:11738:11765	876468	2	True				
ANR	877105	AssignmentExpression	"* error_in = ""MapViewOfFile"""		876468	0		=			
ANR	877106	UnaryOperationExpression	* error_in		876468	0					
ANR	877107	UnaryOperator	*		876468	0					
ANR	877108	Identifier	error_in		876468	1					
ANR	877109	PrimaryExpression	"""MapViewOfFile"""		876468	1					
ANR	877110	ReturnStatement	return ALLOC_FAILURE ;	347:2:11769:11789	876468	3	True				
ANR	877111	Identifier	ALLOC_FAILURE		876468	0					
ANR	877112	ElseStatement	else		876468	0					
ANR	877113	CompoundStatement		134:2:4837:4874	876468	0					
ANR	877114	IdentifierDeclStatement	char * mmap_base_file = get_mmap_base_file ( ) ;	349:2:11803:11846	876468	0	True				
ANR	877115	IdentifierDecl	* mmap_base_file = get_mmap_base_file ( )		876468	0					
ANR	877116	IdentifierDeclType	char *		876468	0					
ANR	877117	Identifier	mmap_base_file		876468	1					
ANR	877118	AssignmentExpression	* mmap_base_file = get_mmap_base_file ( )		876468	2		=			
ANR	877119	Identifier	mmap_base_file		876468	0					
ANR	877120	CallExpression	get_mmap_base_file ( )		876468	1					
ANR	877121	Callee	get_mmap_base_file		876468	0					
ANR	877122	Identifier	get_mmap_base_file		876468	0					
ANR	877123	ArgumentList			876468	1					
ANR	877124	IdentifierDeclStatement	"FILE * fp = fopen ( mmap_base_file , ""w"" ) ;"	350:2:11850:11887	876468	1	True				
ANR	877125	IdentifierDecl	"* fp = fopen ( mmap_base_file , ""w"" )"		876468	0					
ANR	877126	IdentifierDeclType	FILE *		876468	0					
ANR	877127	Identifier	fp		876468	1					
ANR	877128	AssignmentExpression	"* fp = fopen ( mmap_base_file , ""w"" )"		876468	2		=			
ANR	877129	Identifier	fp		876468	0					
ANR	877130	CallExpression	"fopen ( mmap_base_file , ""w"" )"		876468	1					
ANR	877131	Callee	fopen		876468	0					
ANR	877132	Identifier	fopen		876468	0					
ANR	877133	ArgumentList	mmap_base_file		876468	1					
ANR	877134	Argument	mmap_base_file		876468	0					
ANR	877135	Identifier	mmap_base_file		876468	0					
ANR	877136	Argument	"""w"""		876468	1					
ANR	877137	PrimaryExpression	"""w"""		876468	0					
ANR	877138	ExpressionStatement	err = GetLastError ( )	351:2:11891:11911	876468	2	True				
ANR	877139	AssignmentExpression	err = GetLastError ( )		876468	0		=			
ANR	877140	Identifier	err		876468	0					
ANR	877141	CallExpression	GetLastError ( )		876468	1					
ANR	877142	Callee	GetLastError		876468	0					
ANR	877143	Identifier	GetLastError		876468	0					
ANR	877144	ArgumentList			876468	1					
ANR	877145	IfStatement	if ( ! fp )		876468	3					
ANR	877146	Condition	! fp	352:6:11919:11921	876468	0	True				
ANR	877147	UnaryOperationExpression	! fp		876468	0					
ANR	877148	UnaryOperator	!		876468	0					
ANR	877149	Identifier	fp		876468	1					
ANR	877150	CompoundStatement		136:11:4911:4911	876468	1					
ANR	877151	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	353:3:11929:11961	876468	0	True				
ANR	877152	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	877153	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	877154	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	877155	ArgumentList			876468	1					
ANR	877156	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"	354:3:11966:12028	876468	1	True				
ANR	877157	CallExpression	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"		876468	0					
ANR	877158	Callee	zend_win_error_message		876468	0					
ANR	877159	Identifier	zend_win_error_message		876468	0					
ANR	877160	ArgumentList	ACCEL_LOG_WARNING		876468	1					
ANR	877161	Argument	ACCEL_LOG_WARNING		876468	0					
ANR	877162	Identifier	ACCEL_LOG_WARNING		876468	0					
ANR	877163	Argument	mmap_base_file		876468	1					
ANR	877164	Identifier	mmap_base_file		876468	0					
ANR	877165	Argument	err		876468	2					
ANR	877166	Identifier	err		876468	0					
ANR	877167	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to write base address"" , err )"	355:3:12033:12109	876468	2	True				
ANR	877168	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to write base address"" , err )"		876468	0					
ANR	877169	Callee	zend_win_error_message		876468	0					
ANR	877170	Identifier	zend_win_error_message		876468	0					
ANR	877171	ArgumentList	ACCEL_LOG_FATAL		876468	1					
ANR	877172	Argument	ACCEL_LOG_FATAL		876468	0					
ANR	877173	Identifier	ACCEL_LOG_FATAL		876468	0					
ANR	877174	Argument	"""Unable to write base address"""		876468	1					
ANR	877175	PrimaryExpression	"""Unable to write base address"""		876468	0					
ANR	877176	Argument	err		876468	2					
ANR	877177	Identifier	err		876468	0					
ANR	877178	ReturnStatement	return ALLOC_FAILURE ;	356:3:12114:12134	876468	3	True				
ANR	877179	Identifier	ALLOC_FAILURE		876468	0					
ANR	877180	ExpressionStatement	"fprintf ( fp , ""%p\\n"" , mapping_base )"	358:2:12142:12175	876468	4	True				
ANR	877181	CallExpression	"fprintf ( fp , ""%p\\n"" , mapping_base )"		876468	0					
ANR	877182	Callee	fprintf		876468	0					
ANR	877183	Identifier	fprintf		876468	0					
ANR	877184	ArgumentList	fp		876468	1					
ANR	877185	Argument	fp		876468	0					
ANR	877186	Identifier	fp		876468	0					
ANR	877187	Argument	"""%p\\n"""		876468	1					
ANR	877188	PrimaryExpression	"""%p\\n"""		876468	0					
ANR	877189	Argument	mapping_base		876468	2					
ANR	877190	Identifier	mapping_base		876468	0					
ANR	877191	ExpressionStatement	fclose ( fp )	359:2:12179:12189	876468	5	True				
ANR	877192	CallExpression	fclose ( fp )		876468	0					
ANR	877193	Callee	fclose		876468	0					
ANR	877194	Identifier	fclose		876468	0					
ANR	877195	ArgumentList	fp		876468	1					
ANR	877196	Argument	fp		876468	0					
ANR	877197	Identifier	fp		876468	0					
ANR	877198	ExpressionStatement	shared_segment -> pos = 0	362:1:12196:12219	876468	22	True				
ANR	877199	AssignmentExpression	shared_segment -> pos = 0		876468	0		=			
ANR	877200	PtrMemberAccess	shared_segment -> pos		876468	0					
ANR	877201	Identifier	shared_segment		876468	0					
ANR	877202	Identifier	pos		876468	1					
ANR	877203	PrimaryExpression	0		876468	1					
ANR	877204	ExpressionStatement	shared_segment -> size = requested_size	363:1:12222:12259	876468	23	True				
ANR	877205	AssignmentExpression	shared_segment -> size = requested_size		876468	0		=			
ANR	877206	PtrMemberAccess	shared_segment -> size		876468	0					
ANR	877207	Identifier	shared_segment		876468	0					
ANR	877208	Identifier	size		876468	1					
ANR	877209	Identifier	requested_size		876468	1					
ANR	877210	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	365:1:12263:12295	876468	24	True				
ANR	877211	CallExpression	zend_shared_alloc_unlock_win32 ( )		876468	0					
ANR	877212	Callee	zend_shared_alloc_unlock_win32		876468	0					
ANR	877213	Identifier	zend_shared_alloc_unlock_win32		876468	0					
ANR	877214	ArgumentList			876468	1					
ANR	877215	ReturnStatement	return ALLOC_SUCCESS ;	367:1:12299:12319	876468	25	True				
ANR	877216	Identifier	ALLOC_SUCCESS		876468	0					
ANR	877217	ReturnType	static int		876468	1					
ANR	877218	Identifier	create_segments		876468	2					
ANR	877219	ParameterList	"size_t requested_size , zend_shared_segment * * * shared_segments_p , int * shared_segments_count , char * * error_in"		876468	3					
ANR	877220	Parameter	size_t requested_size	216:27:6902:6922	876468	0	True				
ANR	877221	ParameterType	size_t		876468	0					
ANR	877222	Identifier	requested_size		876468	1					
ANR	877223	Parameter	zend_shared_segment * * * shared_segments_p	216:50:6925:6964	876468	1	True				
ANR	877224	ParameterType	zend_shared_segment * * *		876468	0					
ANR	877225	Identifier	shared_segments_p		876468	1					
ANR	877226	Parameter	int * shared_segments_count	216:92:6967:6992	876468	2	True				
ANR	877227	ParameterType	int *		876468	0					
ANR	877228	Identifier	shared_segments_count		876468	1					
ANR	877229	Parameter	char * * error_in	216:120:6995:7009	876468	3	True				
ANR	877230	ParameterType	char * *		876468	0					
ANR	877231	Identifier	error_in		876468	1					
ANR	877232	CFGEntryNode	ENTRY		876468		True				
ANR	877233	CFGExitNode	EXIT		876468		True				
ANR	877234	Symbol	osvi . dwPlatformId		876468						
ANR	877235	Symbol	& si		876468						
ANR	877236	Symbol	shared_segments_p		876468						
ANR	877237	Symbol	ACCEL_LOG_FATAL		876468						
ANR	877238	Symbol	* ZCG ( accel_directives ) . mmap_base		876468						
ANR	877239	Symbol	shared_segment -> pos		876468						
ANR	877240	Symbol	wanted_mapping_base		876468						
ANR	877241	Symbol	error_in		876468						
ANR	877242	Symbol	osvi . dwOSVersionInfoSize		876468						
ANR	877243	Symbol	get_mmap_base_file		876468						
ANR	877244	Symbol	CreateFileMapping		876468						
ANR	877245	Symbol	shared_segment -> p		876468						
ANR	877246	Symbol	* * shared_segments_p		876468						
ANR	877247	Symbol	* ZCG		876468						
ANR	877248	Symbol	vista_mapping_base_set		876468						
ANR	877249	Symbol	FILE_MAP_WRITE		876468						
ANR	877250	Symbol	& osvi		876468						
ANR	877251	Symbol	ret		876468						
ANR	877252	Symbol	ACCEL_FILEMAP_NAME		876468						
ANR	877253	Symbol	ALLOC_FAIL_MAPPING		876468						
ANR	877254	Symbol	NULL		876468						
ANR	877255	Symbol	* error_in		876468						
ANR	877256	Symbol	osvi		876468						
ANR	877257	Symbol	OpenFileMapping		876468						
ANR	877258	Symbol	ALLOC_SUCCESS		876468						
ANR	877259	Symbol	* wanted_mapping_base		876468						
ANR	877260	Symbol	shared_segment		876468						
ANR	877261	Symbol	ZCG ( accel_directives ) . mmap_base		876468						
ANR	877262	Symbol	GetLastError		876468						
ANR	877263	Symbol	sscanf		876468						
ANR	877264	Symbol	mmap_base_file		876468						
ANR	877265	Symbol	requested_size		876468						
ANR	877266	Symbol	ZCG		876468						
ANR	877267	Symbol	osvi . dwMajorVersion		876468						
ANR	877268	Symbol	memfile		876468						
ANR	877269	Symbol	MAX_MAP_RETRIES		876468						
ANR	877270	Symbol	shared_segment -> size		876468						
ANR	877271	Symbol	* shared_segment		876468						
ANR	877272	Symbol	fp		876468						
ANR	877273	Symbol	calloc		876468						
ANR	877274	Symbol	create_name_with_username		876468						
ANR	877275	Symbol	map_retries		876468						
ANR	877276	Symbol	GetVersionEx		876468						
ANR	877277	Symbol	ALLOC_FAILURE		876468						
ANR	877278	Symbol	VER_PLATFORM_WIN32_NT		876468						
ANR	877279	Symbol	* ( s + 1 )		876468						
ANR	877280	Symbol	ACCEL_LOG_WARNING		876468						
ANR	877281	Symbol	si		876468						
ANR	877282	Symbol	FILE_MAP_ALL_ACCESS		876468						
ANR	877283	Symbol	* shared_segments_count		876468						
ANR	877284	Symbol	zend_shared_alloc_reattach		876468						
ANR	877285	Symbol	fopen		876468						
ANR	877286	Symbol	MapViewOfFileEx		876468						
ANR	877287	Symbol	err		876468						
ANR	877288	Symbol	shared_segments_count		876468						
ANR	877289	Symbol	* shared_segments_p		876468						
ANR	877290	Symbol	INVALID_HANDLE_VALUE		876468						
ANR	877291	Symbol	PAGE_READWRITE		876468						
ANR	877292	Symbol	s		876468						
ANR	877293	Symbol	mapping_base		876468						
ANR	877294	Symbol	accel_directives		876468						
ANR	877295	Symbol	* s		876468						
ANR	877296	Symbol	default_mapping_base_set		876468						
ANR	877297	Function	detach_segment	370:0:12324:12576							
ANR	877298	FunctionDef	detach_segment (zend_shared_segment * shared_segment)		877297	0					
ANR	877299	CompoundStatement		371:0:12387:12576	877297	0					
ANR	877300	ExpressionStatement	zend_shared_alloc_lock_win32 ( )	372:1:12390:12420	877297	0	True				
ANR	877301	CallExpression	zend_shared_alloc_lock_win32 ( )		877297	0					
ANR	877302	Callee	zend_shared_alloc_lock_win32		877297	0					
ANR	877303	Identifier	zend_shared_alloc_lock_win32		877297	0					
ANR	877304	ArgumentList			877297	1					
ANR	877305	IfStatement	if ( mapping_base )		877297	1					
ANR	877306	Condition	mapping_base	373:5:12427:12438	877297	0	True				
ANR	877307	Identifier	mapping_base		877297	0					
ANR	877308	CompoundStatement		3:19:53:53	877297	1					
ANR	877309	ExpressionStatement	UnmapViewOfFile ( mapping_base )	374:2:12445:12474	877297	0	True				
ANR	877310	CallExpression	UnmapViewOfFile ( mapping_base )		877297	0					
ANR	877311	Callee	UnmapViewOfFile		877297	0					
ANR	877312	Identifier	UnmapViewOfFile		877297	0					
ANR	877313	ArgumentList	mapping_base		877297	1					
ANR	877314	Argument	mapping_base		877297	0					
ANR	877315	Identifier	mapping_base		877297	0					
ANR	877316	ExpressionStatement	CloseHandle ( memfile )	376:1:12480:12500	877297	2	True				
ANR	877317	CallExpression	CloseHandle ( memfile )		877297	0					
ANR	877318	Callee	CloseHandle		877297	0					
ANR	877319	Identifier	CloseHandle		877297	0					
ANR	877320	ArgumentList	memfile		877297	1					
ANR	877321	Argument	memfile		877297	0					
ANR	877322	Identifier	memfile		877297	0					
ANR	877323	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	377:1:12503:12535	877297	3	True				
ANR	877324	CallExpression	zend_shared_alloc_unlock_win32 ( )		877297	0					
ANR	877325	Callee	zend_shared_alloc_unlock_win32		877297	0					
ANR	877326	Identifier	zend_shared_alloc_unlock_win32		877297	0					
ANR	877327	ArgumentList			877297	1					
ANR	877328	ExpressionStatement	CloseHandle ( memory_mutex )	378:1:12538:12563	877297	4	True				
ANR	877329	CallExpression	CloseHandle ( memory_mutex )		877297	0					
ANR	877330	Callee	CloseHandle		877297	0					
ANR	877331	Identifier	CloseHandle		877297	0					
ANR	877332	ArgumentList	memory_mutex		877297	1					
ANR	877333	Argument	memory_mutex		877297	0					
ANR	877334	Identifier	memory_mutex		877297	0					
ANR	877335	ReturnStatement	return 0 ;	379:1:12566:12574	877297	5	True				
ANR	877336	PrimaryExpression	0		877297	0					
ANR	877337	ReturnType	static int		877297	1					
ANR	877338	Identifier	detach_segment		877297	2					
ANR	877339	ParameterList	zend_shared_segment * shared_segment		877297	3					
ANR	877340	Parameter	zend_shared_segment * shared_segment	370:26:12350:12384	877297	0	True				
ANR	877341	ParameterType	zend_shared_segment *		877297	0					
ANR	877342	Identifier	shared_segment		877297	1					
ANR	877343	CFGEntryNode	ENTRY		877297		True				
ANR	877344	CFGExitNode	EXIT		877297		True				
ANR	877345	Symbol	memfile		877297						
ANR	877346	Symbol	mapping_base		877297						
ANR	877347	Symbol	shared_segment		877297						
ANR	877348	Symbol	memory_mutex		877297						
ANR	877349	Function	segment_type_size	382:0:12579:12656							
ANR	877350	FunctionDef	segment_type_size ()		877349	0					
ANR	877351	CompoundStatement		383:0:12617:12656	877349	0					
ANR	877352	ReturnStatement	return sizeof ( zend_shared_segment ) ;	384:1:12620:12654	877349	0	True				
ANR	877353	SizeofExpression	sizeof ( zend_shared_segment )		877349	0					
ANR	877354	Sizeof	sizeof		877349	0					
ANR	877355	SizeofOperand	zend_shared_segment		877349	1					
ANR	877356	ReturnType	static size_t		877349	1					
ANR	877357	Identifier	segment_type_size		877349	2					
ANR	877358	ParameterList			877349	3					
ANR	877359	CFGEntryNode	ENTRY		877349		True				
ANR	877360	CFGExitNode	EXIT		877349		True				
ANR	877361	DeclStmt									
ANR	877362	Decl							zend_shared_memory_handlers	zend_shared_memory_handlers	zend_alloc_win32_handlers
