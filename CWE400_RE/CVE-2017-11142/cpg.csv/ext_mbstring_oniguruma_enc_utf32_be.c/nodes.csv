command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	694171	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_utf32_be.c								
ANR	694172	Function	utf32be_is_mbc_newline	38:0:1685:2178							
ANR	694173	FunctionDef	"utf32be_is_mbc_newline (const UChar * p , const UChar * end)"		694172	0					
ANR	694174	CompoundStatement		40:0:1753:2178	694172	0					
ANR	694175	IfStatement	if ( p + 3 < end )		694172	0					
ANR	694176	Condition	p + 3 < end	41:6:1761:1771	694172	0	True				
ANR	694177	RelationalExpression	p + 3 < end		694172	0		<			
ANR	694178	AdditiveExpression	p + 3		694172	0		+			
ANR	694179	Identifier	p		694172	0					
ANR	694180	PrimaryExpression	3		694172	1					
ANR	694181	Identifier	end		694172	1					
ANR	694182	CompoundStatement		2:19:20:20	694172	1					
ANR	694183	IfStatement	if ( * ( p + 3 ) == 0x0a && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0 )		694172	0					
ANR	694184	Condition	* ( p + 3 ) == 0x0a && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0	42:8:1784:1838	694172	0	True				
ANR	694185	AndExpression	* ( p + 3 ) == 0x0a && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		694172	0		&&			
ANR	694186	EqualityExpression	* ( p + 3 ) == 0x0a		694172	0		==			
ANR	694187	UnaryOperationExpression	* ( p + 3 )		694172	0					
ANR	694188	UnaryOperator	*		694172	0					
ANR	694189	AdditiveExpression	p + 3		694172	1		+			
ANR	694190	Identifier	p		694172	0					
ANR	694191	PrimaryExpression	3		694172	1					
ANR	694192	PrimaryExpression	0x0a		694172	1					
ANR	694193	AndExpression	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		694172	1		&&			
ANR	694194	EqualityExpression	* ( p + 2 ) == 0		694172	0		==			
ANR	694195	UnaryOperationExpression	* ( p + 2 )		694172	0					
ANR	694196	UnaryOperator	*		694172	0					
ANR	694197	AdditiveExpression	p + 2		694172	1		+			
ANR	694198	Identifier	p		694172	0					
ANR	694199	PrimaryExpression	2		694172	1					
ANR	694200	PrimaryExpression	0		694172	1					
ANR	694201	AndExpression	* ( p + 1 ) == 0 && * p == 0		694172	1		&&			
ANR	694202	EqualityExpression	* ( p + 1 ) == 0		694172	0		==			
ANR	694203	UnaryOperationExpression	* ( p + 1 )		694172	0					
ANR	694204	UnaryOperator	*		694172	0					
ANR	694205	AdditiveExpression	p + 1		694172	1		+			
ANR	694206	Identifier	p		694172	0					
ANR	694207	PrimaryExpression	1		694172	1					
ANR	694208	PrimaryExpression	0		694172	1					
ANR	694209	EqualityExpression	* p == 0		694172	1		==			
ANR	694210	UnaryOperationExpression	* p		694172	0					
ANR	694211	UnaryOperator	*		694172	0					
ANR	694212	Identifier	p		694172	1					
ANR	694213	PrimaryExpression	0		694172	1					
ANR	694214	ReturnStatement	return 1 ;	43:6:1847:1855	694172	1	True				
ANR	694215	PrimaryExpression	1		694172	0					
ANR	694216	Statement	if	45:4:1901:1902	694172	1	True				
ANR	694217	Statement	(	45:7:1904:1904	694172	2	True				
ANR	694218	Statement	(	45:8:1905:1905	694172	3	True				
ANR	694219	Statement	*	47:2:1945:1945	694172	4	True				
ANR	694220	Statement	(	47:3:1946:1946	694172	5	True				
ANR	694221	Statement	p	47:4:1947:1947	694172	6	True				
ANR	694222	Statement	+	47:5:1948:1948	694172	7	True				
ANR	694223	Statement	3	47:6:1949:1949	694172	8	True				
ANR	694224	Statement	)	47:7:1950:1950	694172	9	True				
ANR	694225	Statement	==	47:9:1952:1953	694172	10	True				
ANR	694226	Statement	0x0d	47:12:1955:1958	694172	11	True				
ANR	694227	Statement	||	47:17:1960:1961	694172	12	True				
ANR	694228	Statement	*	49:2:1972:1972	694172	13	True				
ANR	694229	Statement	(	49:3:1973:1973	694172	14	True				
ANR	694230	Statement	p	49:4:1974:1974	694172	15	True				
ANR	694231	Statement	+	49:5:1975:1975	694172	16	True				
ANR	694232	Statement	3	49:6:1976:1976	694172	17	True				
ANR	694233	Statement	)	49:7:1977:1977	694172	18	True				
ANR	694234	Statement	==	49:9:1979:1980	694172	19	True				
ANR	694235	Statement	0x85	49:12:1982:1985	694172	20	True				
ANR	694236	Statement	)	49:16:1986:1986	694172	21	True				
ANR	694237	Statement	&&	50:1:1989:1990	694172	22	True				
ANR	694238	Statement	*	50:4:1992:1992	694172	23	True				
ANR	694239	Statement	(	50:5:1993:1993	694172	24	True				
ANR	694240	Statement	p	50:6:1994:1994	694172	25	True				
ANR	694241	Statement	+	50:7:1995:1995	694172	26	True				
ANR	694242	Statement	2	50:8:1996:1996	694172	27	True				
ANR	694243	Statement	)	50:9:1997:1997	694172	28	True				
ANR	694244	Statement	==	50:11:1999:2000	694172	29	True				
ANR	694245	Statement	0	50:14:2002:2002	694172	30	True				
ANR	694246	Statement	&&	50:16:2004:2005	694172	31	True				
ANR	694247	Statement	*	50:19:2007:2007	694172	32	True				
ANR	694248	Statement	(	50:20:2008:2008	694172	33	True				
ANR	694249	Statement	p	50:21:2009:2009	694172	34	True				
ANR	694250	Statement	+	50:22:2010:2010	694172	35	True				
ANR	694251	Statement	1	50:23:2011:2011	694172	36	True				
ANR	694252	Statement	)	50:24:2012:2012	694172	37	True				
ANR	694253	Statement	==	50:26:2014:2015	694172	38	True				
ANR	694254	Statement	0	50:29:2017:2017	694172	39	True				
ANR	694255	Statement	&&	50:31:2019:2020	694172	40	True				
ANR	694256	Statement	*	50:34:2022:2022	694172	41	True				
ANR	694257	Statement	p	50:35:2023:2023	694172	42	True				
ANR	694258	Statement	==	50:37:2025:2026	694172	43	True				
ANR	694259	Statement	0x00	50:40:2028:2031	694172	44	True				
ANR	694260	Statement	)	50:44:2032:2032	694172	45	True				
ANR	694261	ReturnStatement	return 1 ;	51:6:2040:2048	694172	46	True				
ANR	694262	PrimaryExpression	1		694172	0					
ANR	694263	IfStatement	if ( * ( p + 2 ) == 0x20 && ( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0 )		694172	47					
ANR	694264	Condition	* ( p + 2 ) == 0x20 && ( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0	52:8:2058:2136	694172	0	True				
ANR	694265	AndExpression	* ( p + 2 ) == 0x20 && ( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0		694172	0		&&			
ANR	694266	EqualityExpression	* ( p + 2 ) == 0x20		694172	0		==			
ANR	694267	UnaryOperationExpression	* ( p + 2 )		694172	0					
ANR	694268	UnaryOperator	*		694172	0					
ANR	694269	AdditiveExpression	p + 2		694172	1		+			
ANR	694270	Identifier	p		694172	0					
ANR	694271	PrimaryExpression	2		694172	1					
ANR	694272	PrimaryExpression	0x20		694172	1					
ANR	694273	AndExpression	( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0		694172	1		&&			
ANR	694274	OrExpression	* ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28		694172	0		||			
ANR	694275	EqualityExpression	* ( p + 3 ) == 0x29		694172	0		==			
ANR	694276	UnaryOperationExpression	* ( p + 3 )		694172	0					
ANR	694277	UnaryOperator	*		694172	0					
ANR	694278	AdditiveExpression	p + 3		694172	1		+			
ANR	694279	Identifier	p		694172	0					
ANR	694280	PrimaryExpression	3		694172	1					
ANR	694281	PrimaryExpression	0x29		694172	1					
ANR	694282	EqualityExpression	* ( p + 3 ) == 0x28		694172	1		==			
ANR	694283	UnaryOperationExpression	* ( p + 3 )		694172	0					
ANR	694284	UnaryOperator	*		694172	0					
ANR	694285	AdditiveExpression	p + 3		694172	1		+			
ANR	694286	Identifier	p		694172	0					
ANR	694287	PrimaryExpression	3		694172	1					
ANR	694288	PrimaryExpression	0x28		694172	1					
ANR	694289	AndExpression	* ( p + 1 ) == 0 && * p == 0		694172	1		&&			
ANR	694290	EqualityExpression	* ( p + 1 ) == 0		694172	0		==			
ANR	694291	UnaryOperationExpression	* ( p + 1 )		694172	0					
ANR	694292	UnaryOperator	*		694172	0					
ANR	694293	AdditiveExpression	p + 1		694172	1		+			
ANR	694294	Identifier	p		694172	0					
ANR	694295	PrimaryExpression	1		694172	1					
ANR	694296	PrimaryExpression	0		694172	1					
ANR	694297	EqualityExpression	* p == 0		694172	1		==			
ANR	694298	UnaryOperationExpression	* p		694172	0					
ANR	694299	UnaryOperator	*		694172	0					
ANR	694300	Identifier	p		694172	1					
ANR	694301	PrimaryExpression	0		694172	1					
ANR	694302	ReturnStatement	return 1 ;	54:6:2145:2153	694172	1	True				
ANR	694303	PrimaryExpression	1		694172	0					
ANR	694304	ReturnStatement	return 0 ;	57:2:2168:2176	694172	1	True				
ANR	694305	PrimaryExpression	0		694172	0					
ANR	694306	ReturnType	static int		694172	1					
ANR	694307	Identifier	utf32be_is_mbc_newline		694172	2					
ANR	694308	ParameterList	"const UChar * p , const UChar * end"		694172	3					
ANR	694309	Parameter	const UChar * p	39:23:1719:1732	694172	0	True				
ANR	694310	ParameterType	const UChar *		694172	0					
ANR	694311	Identifier	p		694172	1					
ANR	694312	Parameter	const UChar * end	39:39:1735:1750	694172	1	True				
ANR	694313	ParameterType	const UChar *		694172	0					
ANR	694314	Identifier	end		694172	1					
ANR	694315	CFGEntryNode	ENTRY		694172		True				
ANR	694316	CFGExitNode	EXIT		694172		True				
ANR	694317	Symbol	p		694172						
ANR	694318	Symbol	* ( p + 2 )		694172						
ANR	694319	Symbol	* ( p + 3 )		694172						
ANR	694320	Symbol	end		694172						
ANR	694321	Symbol	* p		694172						
ANR	694322	Symbol	* ( p + 1 )		694172						
ANR	694323	Function	utf32be_code_to_mbclen	66:0:2348:2427							
ANR	694324	FunctionDef	utf32be_code_to_mbclen (OnigCodePoint code ARG_UNUSED)		694323	0					
ANR	694325	CompoundStatement		68:0:2413:2427	694323	0					
ANR	694326	ReturnStatement	return 4 ;	69:2:2417:2425	694323	0	True				
ANR	694327	PrimaryExpression	4		694323	0					
ANR	694328	ReturnType	static int		694323	1					
ANR	694329	Identifier	utf32be_code_to_mbclen		694323	2					
ANR	694330	ParameterList	OnigCodePoint code ARG_UNUSED		694323	3					
ANR	694331	Parameter	OnigCodePoint code ARG_UNUSED	67:23:2382:2410	694323	0	True				
ANR	694332	ParameterType	OnigCodePoint code		694323	0					
ANR	694333	Identifier	ARG_UNUSED		694323	1					
ANR	694334	CFGEntryNode	ENTRY		694323		True				
ANR	694335	CFGExitNode	EXIT		694323		True				
ANR	694336	Symbol	ARG_UNUSED		694323						
ANR	694337	Function	utf32be_code_to_mbc	72:0:2430:2694							
ANR	694338	FunctionDef	"utf32be_code_to_mbc (OnigCodePoint code , UChar * buf)"		694337	0					
ANR	694339	CompoundStatement		74:0:2493:2694	694337	0					
ANR	694340	IdentifierDeclStatement	UChar * p = buf ;	75:2:2497:2511	694337	0	True				
ANR	694341	IdentifierDecl	* p = buf		694337	0					
ANR	694342	IdentifierDeclType	UChar *		694337	0					
ANR	694343	Identifier	p		694337	1					
ANR	694344	AssignmentExpression	* p = buf		694337	2		=			
ANR	694345	Identifier	buf		694337	0					
ANR	694346	Identifier	buf		694337	1					
ANR	694347	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )	77:2:2516:2557	694337	1	True				
ANR	694348	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )		694337	0		=			
ANR	694349	UnaryOperationExpression	* p ++		694337	0					
ANR	694350	UnaryOperator	*		694337	0					
ANR	694351	PostIncDecOperationExpression	p ++		694337	1					
ANR	694352	Identifier	p		694337	0					
ANR	694353	IncDec	++		694337	1					
ANR	694354	CastExpression	( UChar ) ( ( code & 0xff000000 ) >> 24 )		694337	1					
ANR	694355	CastTarget	UChar		694337	0					
ANR	694356	ShiftExpression	( code & 0xff000000 ) >> 24		694337	1		>>			
ANR	694357	BitAndExpression	code & 0xff000000		694337	0		&			
ANR	694358	Identifier	code		694337	0					
ANR	694359	PrimaryExpression	0xff000000		694337	1					
ANR	694360	PrimaryExpression	24		694337	1					
ANR	694361	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )	78:2:2561:2602	694337	2	True				
ANR	694362	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )		694337	0		=			
ANR	694363	UnaryOperationExpression	* p ++		694337	0					
ANR	694364	UnaryOperator	*		694337	0					
ANR	694365	PostIncDecOperationExpression	p ++		694337	1					
ANR	694366	Identifier	p		694337	0					
ANR	694367	IncDec	++		694337	1					
ANR	694368	CastExpression	( UChar ) ( ( code & 0xff0000 ) >> 16 )		694337	1					
ANR	694369	CastTarget	UChar		694337	0					
ANR	694370	ShiftExpression	( code & 0xff0000 ) >> 16		694337	1		>>			
ANR	694371	BitAndExpression	code & 0xff0000		694337	0		&			
ANR	694372	Identifier	code		694337	0					
ANR	694373	PrimaryExpression	0xff0000		694337	1					
ANR	694374	PrimaryExpression	16		694337	1					
ANR	694375	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )	79:2:2606:2647	694337	3	True				
ANR	694376	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )		694337	0		=			
ANR	694377	UnaryOperationExpression	* p ++		694337	0					
ANR	694378	UnaryOperator	*		694337	0					
ANR	694379	PostIncDecOperationExpression	p ++		694337	1					
ANR	694380	Identifier	p		694337	0					
ANR	694381	IncDec	++		694337	1					
ANR	694382	CastExpression	( UChar ) ( ( code & 0xff00 ) >> 8 )		694337	1					
ANR	694383	CastTarget	UChar		694337	0					
ANR	694384	ShiftExpression	( code & 0xff00 ) >> 8		694337	1		>>			
ANR	694385	BitAndExpression	code & 0xff00		694337	0		&			
ANR	694386	Identifier	code		694337	0					
ANR	694387	PrimaryExpression	0xff00		694337	1					
ANR	694388	PrimaryExpression	8		694337	1					
ANR	694389	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	80:2:2651:2680	694337	4	True				
ANR	694390	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		694337	0		=			
ANR	694391	UnaryOperationExpression	* p ++		694337	0					
ANR	694392	UnaryOperator	*		694337	0					
ANR	694393	PostIncDecOperationExpression	p ++		694337	1					
ANR	694394	Identifier	p		694337	0					
ANR	694395	IncDec	++		694337	1					
ANR	694396	CastExpression	( UChar ) ( code & 0xff )		694337	1					
ANR	694397	CastTarget	UChar		694337	0					
ANR	694398	BitAndExpression	code & 0xff		694337	1		&			
ANR	694399	Identifier	code		694337	0					
ANR	694400	PrimaryExpression	0xff		694337	1					
ANR	694401	ReturnStatement	return 4 ;	81:2:2684:2692	694337	5	True				
ANR	694402	PrimaryExpression	4		694337	0					
ANR	694403	ReturnType	static int		694337	1					
ANR	694404	Identifier	utf32be_code_to_mbc		694337	2					
ANR	694405	ParameterList	"OnigCodePoint code , UChar * buf"		694337	3					
ANR	694406	Parameter	OnigCodePoint code	73:20:2461:2478	694337	0	True				
ANR	694407	ParameterType	OnigCodePoint		694337	0					
ANR	694408	Identifier	code		694337	1					
ANR	694409	Parameter	UChar * buf	73:40:2481:2490	694337	1	True				
ANR	694410	ParameterType	UChar *		694337	0					
ANR	694411	Identifier	buf		694337	1					
ANR	694412	CFGEntryNode	ENTRY		694337		True				
ANR	694413	CFGExitNode	EXIT		694337		True				
ANR	694414	Symbol	p		694337						
ANR	694415	Symbol	buf		694337						
ANR	694416	Symbol	code		694337						
ANR	694417	Symbol	* p ++		694337						
ANR	694418	Function	utf32be_mbc_case_fold	84:0:2697:3365							
ANR	694419	FunctionDef	"utf32be_mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		694418	0					
ANR	694420	CompoundStatement		87:0:2810:3365	694418	0					
ANR	694421	IdentifierDeclStatement	const UChar * p = * pp ;	88:2:2814:2834	694418	0	True				
ANR	694422	IdentifierDecl	* p = * pp		694418	0					
ANR	694423	IdentifierDeclType	const UChar *		694418	0					
ANR	694424	Identifier	p		694418	1					
ANR	694425	AssignmentExpression	* p = * pp		694418	2		=			
ANR	694426	Identifier	p		694418	0					
ANR	694427	UnaryOperationExpression	* pp		694418	1					
ANR	694428	UnaryOperator	*		694418	0					
ANR	694429	Identifier	pp		694418	1					
ANR	694430	IfStatement	if ( ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) ) && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0 )		694418	1					
ANR	694431	Condition	ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) ) && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0	90:6:2843:2912	694418	0	True				
ANR	694432	AndExpression	ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) ) && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		694418	0		&&			
ANR	694433	CallExpression	ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) )		694418	0					
ANR	694434	Callee	ONIGENC_IS_ASCII_CODE		694418	0					
ANR	694435	Identifier	ONIGENC_IS_ASCII_CODE		694418	0					
ANR	694436	ArgumentList	* ( p + 3 )		694418	1					
ANR	694437	Argument	* ( p + 3 )		694418	0					
ANR	694438	UnaryOperationExpression	* ( p + 3 )		694418	0					
ANR	694439	UnaryOperator	*		694418	0					
ANR	694440	AdditiveExpression	p + 3		694418	1		+			
ANR	694441	Identifier	p		694418	0					
ANR	694442	PrimaryExpression	3		694418	1					
ANR	694443	AndExpression	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		694418	1		&&			
ANR	694444	EqualityExpression	* ( p + 2 ) == 0		694418	0		==			
ANR	694445	UnaryOperationExpression	* ( p + 2 )		694418	0					
ANR	694446	UnaryOperator	*		694418	0					
ANR	694447	AdditiveExpression	p + 2		694418	1		+			
ANR	694448	Identifier	p		694418	0					
ANR	694449	PrimaryExpression	2		694418	1					
ANR	694450	PrimaryExpression	0		694418	1					
ANR	694451	AndExpression	* ( p + 1 ) == 0 && * p == 0		694418	1		&&			
ANR	694452	EqualityExpression	* ( p + 1 ) == 0		694418	0		==			
ANR	694453	UnaryOperationExpression	* ( p + 1 )		694418	0					
ANR	694454	UnaryOperator	*		694418	0					
ANR	694455	AdditiveExpression	p + 1		694418	1		+			
ANR	694456	Identifier	p		694418	0					
ANR	694457	PrimaryExpression	1		694418	1					
ANR	694458	PrimaryExpression	0		694418	1					
ANR	694459	EqualityExpression	* p == 0		694418	1		==			
ANR	694460	UnaryOperationExpression	* p		694418	0					
ANR	694461	UnaryOperator	*		694418	0					
ANR	694462	Identifier	p		694418	1					
ANR	694463	PrimaryExpression	0		694418	1					
ANR	694464	CompoundStatement		4:78:104:104	694418	1					
ANR	694465	ExpressionStatement	* fold ++ = 0	91:4:2921:2932	694418	0	True				
ANR	694466	AssignmentExpression	* fold ++ = 0		694418	0		=			
ANR	694467	UnaryOperationExpression	* fold ++		694418	0					
ANR	694468	UnaryOperator	*		694418	0					
ANR	694469	PostIncDecOperationExpression	fold ++		694418	1					
ANR	694470	Identifier	fold		694418	0					
ANR	694471	IncDec	++		694418	1					
ANR	694472	PrimaryExpression	0		694418	1					
ANR	694473	ExpressionStatement	* fold ++ = 0	92:4:2938:2949	694418	1	True				
ANR	694474	AssignmentExpression	* fold ++ = 0		694418	0		=			
ANR	694475	UnaryOperationExpression	* fold ++		694418	0					
ANR	694476	UnaryOperator	*		694418	0					
ANR	694477	PostIncDecOperationExpression	fold ++		694418	1					
ANR	694478	Identifier	fold		694418	0					
ANR	694479	IncDec	++		694418	1					
ANR	694480	PrimaryExpression	0		694418	1					
ANR	694481	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		694418	2					
ANR	694482	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	95:8:3003:3047	694418	0	True				
ANR	694483	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		694418	0		!=			
ANR	694484	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		694418	0		&			
ANR	694485	Identifier	flag		694418	0					
ANR	694486	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		694418	1					
ANR	694487	PrimaryExpression	0		694418	1					
ANR	694488	CompoundStatement		9:55:239:239	694418	1					
ANR	694489	IfStatement	if ( * ( p + 3 ) == 0x49 )		694418	0					
ANR	694490	Condition	* ( p + 3 ) == 0x49	96:10:3062:3075	694418	0	True				
ANR	694491	EqualityExpression	* ( p + 3 ) == 0x49		694418	0		==			
ANR	694492	UnaryOperationExpression	* ( p + 3 )		694418	0					
ANR	694493	UnaryOperator	*		694418	0					
ANR	694494	AdditiveExpression	p + 3		694418	1		+			
ANR	694495	Identifier	p		694418	0					
ANR	694496	PrimaryExpression	3		694418	1					
ANR	694497	PrimaryExpression	0x49		694418	1					
ANR	694498	CompoundStatement		10:26:267:267	694418	1					
ANR	694499	ExpressionStatement	* fold ++ = 0x01	97:1:3081:3095	694418	0	True				
ANR	694500	AssignmentExpression	* fold ++ = 0x01		694418	0		=			
ANR	694501	UnaryOperationExpression	* fold ++		694418	0					
ANR	694502	UnaryOperator	*		694418	0					
ANR	694503	PostIncDecOperationExpression	fold ++		694418	1					
ANR	694504	Identifier	fold		694418	0					
ANR	694505	IncDec	++		694418	1					
ANR	694506	PrimaryExpression	0x01		694418	1					
ANR	694507	ExpressionStatement	* fold = 0x31	98:1:3098:3112	694418	1	True				
ANR	694508	AssignmentExpression	* fold = 0x31		694418	0		=			
ANR	694509	UnaryOperationExpression	* fold		694418	0					
ANR	694510	UnaryOperator	*		694418	0					
ANR	694511	Identifier	fold		694418	1					
ANR	694512	PrimaryExpression	0x31		694418	1					
ANR	694513	ExpressionStatement	( * pp ) += 4	99:1:3115:3125	694418	2	True				
ANR	694514	AssignmentExpression	( * pp ) += 4		694418	0		+=			
ANR	694515	UnaryOperationExpression	* pp		694418	0					
ANR	694516	UnaryOperator	*		694418	0					
ANR	694517	Identifier	pp		694418	1					
ANR	694518	PrimaryExpression	4		694418	1					
ANR	694519	ReturnStatement	return 4 ;	100:1:3128:3136	694418	3	True				
ANR	694520	PrimaryExpression	4		694418	0					
ANR	694521	ExpressionStatement	* fold ++ = 0	105:4:3164:3175	694418	3	True				
ANR	694522	AssignmentExpression	* fold ++ = 0		694418	0		=			
ANR	694523	UnaryOperationExpression	* fold ++		694418	0					
ANR	694524	UnaryOperator	*		694418	0					
ANR	694525	PostIncDecOperationExpression	fold ++		694418	1					
ANR	694526	Identifier	fold		694418	0					
ANR	694527	IncDec	++		694418	1					
ANR	694528	PrimaryExpression	0		694418	1					
ANR	694529	ExpressionStatement	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * ( p + 3 ) )	106:4:3181:3231	694418	4	True				
ANR	694530	AssignmentExpression	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * ( p + 3 ) )		694418	0		=			
ANR	694531	UnaryOperationExpression	* fold		694418	0					
ANR	694532	UnaryOperator	*		694418	0					
ANR	694533	Identifier	fold		694418	1					
ANR	694534	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * ( p + 3 ) )		694418	1					
ANR	694535	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		694418	0					
ANR	694536	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		694418	0					
ANR	694537	ArgumentList	* ( p + 3 )		694418	1					
ANR	694538	Argument	* ( p + 3 )		694418	0					
ANR	694539	UnaryOperationExpression	* ( p + 3 )		694418	0					
ANR	694540	UnaryOperator	*		694418	0					
ANR	694541	AdditiveExpression	p + 3		694418	1		+			
ANR	694542	Identifier	p		694418	0					
ANR	694543	PrimaryExpression	3		694418	1					
ANR	694544	ExpressionStatement	* pp += 4	107:4:3237:3245	694418	5	True				
ANR	694545	AssignmentExpression	* pp += 4		694418	0		+=			
ANR	694546	UnaryOperationExpression	* pp		694418	0					
ANR	694547	UnaryOperator	*		694418	0					
ANR	694548	Identifier	pp		694418	1					
ANR	694549	PrimaryExpression	4		694418	1					
ANR	694550	ReturnStatement	return 4 ;	108:4:3251:3259	694418	6	True				
ANR	694551	PrimaryExpression	4		694418	0					
ANR	694552	ElseStatement	else		694418	0					
ANR	694553	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_BE , flag , pp , end , fold ) ;"	111:4:3276:3363	694418	0	True				
ANR	694554	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_BE , flag , pp , end , fold )"		694418	0					
ANR	694555	Callee	onigenc_unicode_mbc_case_fold		694418	0					
ANR	694556	Identifier	onigenc_unicode_mbc_case_fold		694418	0					
ANR	694557	ArgumentList	ONIG_ENCODING_UTF32_BE		694418	1					
ANR	694558	Argument	ONIG_ENCODING_UTF32_BE		694418	0					
ANR	694559	Identifier	ONIG_ENCODING_UTF32_BE		694418	0					
ANR	694560	Argument	flag		694418	1					
ANR	694561	Identifier	flag		694418	0					
ANR	694562	Argument	pp		694418	2					
ANR	694563	Identifier	pp		694418	0					
ANR	694564	Argument	end		694418	3					
ANR	694565	Identifier	end		694418	0					
ANR	694566	Argument	fold		694418	4					
ANR	694567	Identifier	fold		694418	0					
ANR	694568	ReturnType	static int		694418	1					
ANR	694569	Identifier	utf32be_mbc_case_fold		694418	2					
ANR	694570	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		694418	3					
ANR	694571	Parameter	OnigCaseFoldType flag	85:22:2730:2750	694418	0	True				
ANR	694572	ParameterType	OnigCaseFoldType		694418	0					
ANR	694573	Identifier	flag		694418	1					
ANR	694574	Parameter	const UChar * * pp	86:8:2761:2776	694418	1	True				
ANR	694575	ParameterType	const UChar * *		694418	0					
ANR	694576	Identifier	pp		694418	1					
ANR	694577	Parameter	const UChar * end	86:26:2779:2794	694418	2	True				
ANR	694578	ParameterType	const UChar *		694418	0					
ANR	694579	Identifier	end		694418	1					
ANR	694580	Parameter	UChar * fold	86:44:2797:2807	694418	3	True				
ANR	694581	ParameterType	UChar *		694418	0					
ANR	694582	Identifier	fold		694418	1					
ANR	694583	CFGEntryNode	ENTRY		694418		True				
ANR	694584	CFGExitNode	EXIT		694418		True				
ANR	694585	Symbol	pp		694418						
ANR	694586	Symbol	ONIGENC_IS_ASCII_CODE		694418						
ANR	694587	Symbol	flag		694418						
ANR	694588	Symbol	* ( p + 2 )		694418						
ANR	694589	Symbol	* pp		694418						
ANR	694590	Symbol	* ( p + 3 )		694418						
ANR	694591	Symbol	* fold		694418						
ANR	694592	Symbol	* ( p + 1 )		694418						
ANR	694593	Symbol	* fold ++		694418						
ANR	694594	Symbol	p		694418						
ANR	694595	Symbol	fold		694418						
ANR	694596	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		694418						
ANR	694597	Symbol	ONIG_ENCODING_UTF32_BE		694418						
ANR	694598	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		694418						
ANR	694599	Symbol	end		694418						
ANR	694600	Symbol	* p		694418						
ANR	694601	Symbol	onigenc_unicode_mbc_case_fold		694418						
ANR	694602	Function	utf32be_is_mbc_ambiguous	116:0:3374:4058							
ANR	694603	FunctionDef	"utf32be_is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		694602	0					
ANR	694604	CompoundStatement		118:0:3469:4058	694602	0					
ANR	694605	IdentifierDeclStatement	const UChar * p = * pp ;	119:2:3473:3493	694602	0	True				
ANR	694606	IdentifierDecl	* p = * pp		694602	0					
ANR	694607	IdentifierDeclType	const UChar *		694602	0					
ANR	694608	Identifier	p		694602	1					
ANR	694609	AssignmentExpression	* p = * pp		694602	2		=			
ANR	694610	Identifier	p		694602	0					
ANR	694611	UnaryOperationExpression	* pp		694602	1					
ANR	694612	UnaryOperator	*		694602	0					
ANR	694613	Identifier	pp		694602	1					
ANR	694614	ExpressionStatement	( * pp ) += 4	121:2:3498:3508	694602	1	True				
ANR	694615	AssignmentExpression	( * pp ) += 4		694602	0		+=			
ANR	694616	UnaryOperationExpression	* pp		694602	0					
ANR	694617	UnaryOperator	*		694602	0					
ANR	694618	Identifier	pp		694602	1					
ANR	694619	PrimaryExpression	4		694602	1					
ANR	694620	IfStatement	if ( * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0 )		694602	2					
ANR	694621	Condition	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0	123:6:3517:3553	694602	0	True				
ANR	694622	AndExpression	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		694602	0		&&			
ANR	694623	EqualityExpression	* ( p + 2 ) == 0		694602	0		==			
ANR	694624	UnaryOperationExpression	* ( p + 2 )		694602	0					
ANR	694625	UnaryOperator	*		694602	0					
ANR	694626	AdditiveExpression	p + 2		694602	1		+			
ANR	694627	Identifier	p		694602	0					
ANR	694628	PrimaryExpression	2		694602	1					
ANR	694629	PrimaryExpression	0		694602	1					
ANR	694630	AndExpression	* ( p + 1 ) == 0 && * p == 0		694602	1		&&			
ANR	694631	EqualityExpression	* ( p + 1 ) == 0		694602	0		==			
ANR	694632	UnaryOperationExpression	* ( p + 1 )		694602	0					
ANR	694633	UnaryOperator	*		694602	0					
ANR	694634	AdditiveExpression	p + 1		694602	1		+			
ANR	694635	Identifier	p		694602	0					
ANR	694636	PrimaryExpression	1		694602	1					
ANR	694637	PrimaryExpression	0		694602	1					
ANR	694638	EqualityExpression	* p == 0		694602	1		==			
ANR	694639	UnaryOperationExpression	* p		694602	0					
ANR	694640	UnaryOperator	*		694602	0					
ANR	694641	Identifier	p		694602	1					
ANR	694642	PrimaryExpression	0		694602	1					
ANR	694643	CompoundStatement		7:4:92:100	694602	1					
ANR	694644	IdentifierDeclStatement	"int c , v ;"	124:4:3562:3570	694602	0	True				
ANR	694645	IdentifierDecl	c		694602	0					
ANR	694646	IdentifierDeclType	int		694602	0					
ANR	694647	Identifier	c		694602	1					
ANR	694648	IdentifierDecl	v		694602	1					
ANR	694649	IdentifierDeclType	int		694602	0					
ANR	694650	Identifier	v		694602	1					
ANR	694651	ExpressionStatement	p += 3	126:4:3577:3583	694602	1	True				
ANR	694652	AssignmentExpression	p += 3		694602	0		+=			
ANR	694653	Identifier	p		694602	0					
ANR	694654	PrimaryExpression	3		694602	1					
ANR	694655	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		694602	2					
ANR	694656	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	127:8:3593:3657	694602	0	True				
ANR	694657	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		694602	0		&&			
ANR	694658	EqualityExpression	* p == 0xdf		694602	0		==			
ANR	694659	UnaryOperationExpression	* p		694602	0					
ANR	694660	UnaryOperator	*		694602	0					
ANR	694661	Identifier	p		694602	1					
ANR	694662	PrimaryExpression	0xdf		694602	1					
ANR	694663	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		694602	1		!=			
ANR	694664	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		694602	0		&			
ANR	694665	Identifier	flag		694602	0					
ANR	694666	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		694602	1					
ANR	694667	PrimaryExpression	0		694602	1					
ANR	694668	CompoundStatement		10:75:190:190	694602	1					
ANR	694669	ReturnStatement	return TRUE ;	128:6:3668:3679	694602	0	True				
ANR	694670	Identifier	TRUE		694602	0					
ANR	694671	ExpressionStatement	c = * p	131:4:3692:3698	694602	3	True				
ANR	694672	AssignmentExpression	c = * p		694602	0		=			
ANR	694673	Identifier	c		694602	0					
ANR	694674	UnaryOperationExpression	* p		694602	1					
ANR	694675	UnaryOperator	*		694602	0					
ANR	694676	Identifier	p		694602	1					
ANR	694677	ExpressionStatement	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"	132:4:3704:3810	694602	4	True				
ANR	694678	AssignmentExpression	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		694602	0		=			
ANR	694679	Identifier	v		694602	0					
ANR	694680	CallExpression	"ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		694602	1					
ANR	694681	Callee	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		694602	0					
ANR	694682	Identifier	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		694602	0					
ANR	694683	ArgumentList	c		694602	1					
ANR	694684	Argument	c		694602	0					
ANR	694685	Identifier	c		694602	0					
ANR	694686	Argument	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		694602	1					
ANR	694687	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		694602	0		|			
ANR	694688	Identifier	BIT_CTYPE_UPPER		694602	0					
ANR	694689	Identifier	BIT_CTYPE_LOWER		694602	1					
ANR	694690	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		694602	5					
ANR	694691	Condition	( v | BIT_CTYPE_LOWER ) != 0	134:8:3820:3845	694602	0	True				
ANR	694692	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		694602	0		!=			
ANR	694693	InclusiveOrExpression	v | BIT_CTYPE_LOWER		694602	0		|			
ANR	694694	Identifier	v		694602	0					
ANR	694695	Identifier	BIT_CTYPE_LOWER		694602	1					
ANR	694696	PrimaryExpression	0		694602	1					
ANR	694697	CompoundStatement		17:36:378:378	694602	1					
ANR	694698	IfStatement	if ( c >= 0xaa && c <= 0xba )		694602	0					
ANR	694699	Condition	c >= 0xaa && c <= 0xba	136:10:3931:3952	694602	0	True				
ANR	694700	AndExpression	c >= 0xaa && c <= 0xba		694602	0		&&			
ANR	694701	RelationalExpression	c >= 0xaa		694602	0		>=			
ANR	694702	Identifier	c		694602	0					
ANR	694703	PrimaryExpression	0xaa		694602	1					
ANR	694704	RelationalExpression	c <= 0xba		694602	1		<=			
ANR	694705	Identifier	c		694602	0					
ANR	694706	PrimaryExpression	0xba		694602	1					
ANR	694707	ReturnStatement	return FALSE ;	137:1:3956:3968	694602	1	True				
ANR	694708	Identifier	FALSE		694602	0					
ANR	694709	ElseStatement	else		694602	0					
ANR	694710	ReturnStatement	return TRUE ;	139:1:3982:3993	694602	0	True				
ANR	694711	Identifier	TRUE		694602	0					
ANR	694712	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	141:4:4005:4035	694602	6	True				
ANR	694713	ConditionalExpression	v != 0 ? TRUE : FALSE		694602	0					
ANR	694714	Condition	v != 0		694602	0					
ANR	694715	EqualityExpression	v != 0		694602	0		!=			
ANR	694716	Identifier	v		694602	0					
ANR	694717	PrimaryExpression	0		694602	1					
ANR	694718	Identifier	TRUE		694602	1					
ANR	694719	Identifier	FALSE		694602	2					
ANR	694720	ReturnStatement	return FALSE ;	144:2:4044:4056	694602	3	True				
ANR	694721	Identifier	FALSE		694602	0					
ANR	694722	ReturnType	static int		694602	1					
ANR	694723	Identifier	utf32be_is_mbc_ambiguous		694602	2					
ANR	694724	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		694602	3					
ANR	694725	Parameter	OnigCaseFoldType flag	117:25:3410:3430	694602	0	True				
ANR	694726	ParameterType	OnigCaseFoldType		694602	0					
ANR	694727	Identifier	flag		694602	1					
ANR	694728	Parameter	const UChar * * pp	117:48:3433:3448	694602	1	True				
ANR	694729	ParameterType	const UChar * *		694602	0					
ANR	694730	Identifier	pp		694602	1					
ANR	694731	Parameter	const UChar * end	117:66:3451:3466	694602	2	True				
ANR	694732	ParameterType	const UChar *		694602	0					
ANR	694733	Identifier	end		694602	1					
ANR	694734	CFGEntryNode	ENTRY		694602		True				
ANR	694735	CFGExitNode	EXIT		694602		True				
ANR	694736	Symbol	pp		694602						
ANR	694737	Symbol	flag		694602						
ANR	694738	Symbol	c		694602						
ANR	694739	Symbol	* ( p + 2 )		694602						
ANR	694740	Symbol	* pp		694602						
ANR	694741	Symbol	TRUE		694602						
ANR	694742	Symbol	* ( p + 1 )		694602						
ANR	694743	Symbol	p		694602						
ANR	694744	Symbol	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		694602						
ANR	694745	Symbol	v		694602						
ANR	694746	Symbol	BIT_CTYPE_LOWER		694602						
ANR	694747	Symbol	end		694602						
ANR	694748	Symbol	* p		694602						
ANR	694749	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		694602						
ANR	694750	Symbol	BIT_CTYPE_UPPER		694602						
ANR	694751	Symbol	FALSE		694602						
ANR	694752	Function	utf32be_left_adjust_char_head	148:0:4068:4254							
ANR	694753	FunctionDef	"utf32be_left_adjust_char_head (const UChar * start , const UChar * s)"		694752	0					
ANR	694754	CompoundStatement		150:0:4148:4254	694752	0					
ANR	694755	IdentifierDeclStatement	int rem ;	151:2:4152:4159	694752	0	True				
ANR	694756	IdentifierDecl	rem		694752	0					
ANR	694757	IdentifierDeclType	int		694752	0					
ANR	694758	Identifier	rem		694752	1					
ANR	694759	IfStatement	if ( s <= start )		694752	1					
ANR	694760	Condition	s <= start	153:6:4168:4177	694752	0	True				
ANR	694761	RelationalExpression	s <= start		694752	0		<=			
ANR	694762	Identifier	s		694752	0					
ANR	694763	Identifier	start		694752	1					
ANR	694764	ReturnStatement	return ( UChar * ) s ;	153:18:4180:4197	694752	1	True				
ANR	694765	CastExpression	( UChar * ) s		694752	0					
ANR	694766	CastTarget	UChar *		694752	0					
ANR	694767	Identifier	s		694752	1					
ANR	694768	ExpressionStatement	rem = ( s - start ) % 4	155:2:4202:4223	694752	2	True				
ANR	694769	AssignmentExpression	rem = ( s - start ) % 4		694752	0		=			
ANR	694770	Identifier	rem		694752	0					
ANR	694771	MultiplicativeExpression	( s - start ) % 4		694752	1		%			
ANR	694772	AdditiveExpression	s - start		694752	0		-			
ANR	694773	Identifier	s		694752	0					
ANR	694774	Identifier	start		694752	1					
ANR	694775	PrimaryExpression	4		694752	1					
ANR	694776	ReturnStatement	return ( UChar * ) ( s - rem ) ;	156:2:4227:4252	694752	3	True				
ANR	694777	CastExpression	( UChar * ) ( s - rem )		694752	0					
ANR	694778	CastTarget	UChar *		694752	0					
ANR	694779	AdditiveExpression	s - rem		694752	1		-			
ANR	694780	Identifier	s		694752	0					
ANR	694781	Identifier	rem		694752	1					
ANR	694782	ReturnType	static UChar *		694752	1					
ANR	694783	Identifier	utf32be_left_adjust_char_head		694752	2					
ANR	694784	ParameterList	"const UChar * start , const UChar * s"		694752	3					
ANR	694785	Parameter	const UChar * start	149:30:4112:4129	694752	0	True				
ANR	694786	ParameterType	const UChar *		694752	0					
ANR	694787	Identifier	start		694752	1					
ANR	694788	Parameter	const UChar * s	149:50:4132:4145	694752	1	True				
ANR	694789	ParameterType	const UChar *		694752	0					
ANR	694790	Identifier	s		694752	1					
ANR	694791	CFGEntryNode	ENTRY		694752		True				
ANR	694792	CFGExitNode	EXIT		694752		True				
ANR	694793	Symbol	s		694752						
ANR	694794	Symbol	start		694752						
ANR	694795	Symbol	rem		694752						
ANR	694796	Function	utf32be_get_case_fold_codes_by_str	159:0:4257:4512							
ANR	694797	FunctionDef	"utf32be_get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		694796	0					
ANR	694798	CompoundStatement		162:0:4402:4512	694796	0					
ANR	694799	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_BE , flag , p , end , items ) ;"	163:2:4406:4510	694796	0	True				
ANR	694800	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_BE , flag , p , end , items )"		694796	0					
ANR	694801	Callee	onigenc_unicode_get_case_fold_codes_by_str		694796	0					
ANR	694802	Identifier	onigenc_unicode_get_case_fold_codes_by_str		694796	0					
ANR	694803	ArgumentList	ONIG_ENCODING_UTF32_BE		694796	1					
ANR	694804	Argument	ONIG_ENCODING_UTF32_BE		694796	0					
ANR	694805	Identifier	ONIG_ENCODING_UTF32_BE		694796	0					
ANR	694806	Argument	flag		694796	1					
ANR	694807	Identifier	flag		694796	0					
ANR	694808	Argument	p		694796	2					
ANR	694809	Identifier	p		694796	0					
ANR	694810	Argument	end		694796	3					
ANR	694811	Identifier	end		694796	0					
ANR	694812	Argument	items		694796	4					
ANR	694813	Identifier	items		694796	0					
ANR	694814	ReturnType	static int		694796	1					
ANR	694815	Identifier	utf32be_get_case_fold_codes_by_str		694796	2					
ANR	694816	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		694796	3					
ANR	694817	Parameter	OnigCaseFoldType flag	160:35:4303:4323	694796	0	True				
ANR	694818	ParameterType	OnigCaseFoldType		694796	0					
ANR	694819	Identifier	flag		694796	1					
ANR	694820	Parameter	const OnigUChar * p	161:4:4330:4347	694796	1	True				
ANR	694821	ParameterType	const OnigUChar *		694796	0					
ANR	694822	Identifier	p		694796	1					
ANR	694823	Parameter	const OnigUChar * end	161:24:4350:4369	694796	2	True				
ANR	694824	ParameterType	const OnigUChar *		694796	0					
ANR	694825	Identifier	end		694796	1					
ANR	694826	Parameter	OnigCaseFoldCodeItem items [ ]	161:46:4372:4399	694796	3	True				
ANR	694827	ParameterType	OnigCaseFoldCodeItem [ ]		694796	0					
ANR	694828	Identifier	items		694796	1					
ANR	694829	CFGEntryNode	ENTRY		694796		True				
ANR	694830	CFGExitNode	EXIT		694796		True				
ANR	694831	Symbol	p		694796						
ANR	694832	Symbol	flag		694796						
ANR	694833	Symbol	ONIG_ENCODING_UTF32_BE		694796						
ANR	694834	Symbol	onigenc_unicode_get_case_fold_codes_by_str		694796						
ANR	694835	Symbol	end		694796						
ANR	694836	Symbol	items		694796						
ANR	694837	DeclStmt									
ANR	694838	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF32_BE
