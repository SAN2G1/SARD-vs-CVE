command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	678142	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_iso8859_13.c								
ANR	678143	DeclStmt									
ANR	678144	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_13_ToLowerCaseTable
ANR	678145	DeclStmt									
ANR	678146	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_13_CtypeTable
ANR	678147	DeclStmt									
ANR	678148	Decl							const UChar	const UChar *	p
ANR	678149	Function	is_mbc_ambiguous	125:0:6522:7049							
ANR	678150	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		678149	0					
ANR	678151	CompoundStatement		127:0:6609:7049	678149	0					
ANR	678152	IdentifierDeclStatement	int v ;	128:2:6613:6618	678149	0	True				
ANR	678153	IdentifierDecl	v		678149	0					
ANR	678154	IdentifierDeclType	int		678149	0					
ANR	678155	Identifier	v		678149	1					
ANR	678156	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6622:6642	678149	1	True				
ANR	678157	IdentifierDecl	* p = * pp		678149	0					
ANR	678158	IdentifierDeclType	const UChar *		678149	0					
ANR	678159	Identifier	p		678149	1					
ANR	678160	AssignmentExpression	* p = * pp		678149	2		=			
ANR	678161	Identifier	p		678149	0					
ANR	678162	UnaryOperationExpression	* pp		678149	1					
ANR	678163	UnaryOperator	*		678149	0					
ANR	678164	Identifier	pp		678149	1					
ANR	678165	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		678149	2					
ANR	678166	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6651:6715	678149	0	True				
ANR	678167	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		678149	0		&&			
ANR	678168	EqualityExpression	* p == 0xdf		678149	0		==			
ANR	678169	UnaryOperationExpression	* p		678149	0					
ANR	678170	UnaryOperator	*		678149	0					
ANR	678171	Identifier	p		678149	1					
ANR	678172	PrimaryExpression	0xdf		678149	1					
ANR	678173	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		678149	1		!=			
ANR	678174	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678149	0		&			
ANR	678175	Identifier	flag		678149	0					
ANR	678176	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678149	1					
ANR	678177	PrimaryExpression	0		678149	1					
ANR	678178	CompoundStatement		5:73:108:108	678149	1					
ANR	678179	ExpressionStatement	( * pp ) ++	132:4:6724:6731	678149	0	True				
ANR	678180	PostIncDecOperationExpression	( * pp ) ++		678149	0					
ANR	678181	UnaryOperationExpression	* pp		678149	0					
ANR	678182	UnaryOperator	*		678149	0					
ANR	678183	Identifier	pp		678149	1					
ANR	678184	IncDec	++		678149	1					
ANR	678185	ReturnStatement	return TRUE ;	133:4:6737:6748	678149	1	True				
ANR	678186	Identifier	TRUE		678149	0					
ANR	678187	ExpressionStatement	( * pp ) ++	136:2:6757:6764	678149	3	True				
ANR	678188	PostIncDecOperationExpression	( * pp ) ++		678149	0					
ANR	678189	UnaryOperationExpression	* pp		678149	0					
ANR	678190	UnaryOperator	*		678149	0					
ANR	678191	Identifier	pp		678149	1					
ANR	678192	IncDec	++		678149	1					
ANR	678193	ExpressionStatement	v = ( EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6768:6841	678149	4	True				
ANR	678194	AssignmentExpression	v = ( EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		678149	0		=			
ANR	678195	Identifier	v		678149	0					
ANR	678196	BitAndExpression	EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		678149	1		&			
ANR	678197	ArrayIndexing	EncISO_8859_13_CtypeTable [ * p ]		678149	0					
ANR	678198	Identifier	EncISO_8859_13_CtypeTable		678149	0					
ANR	678199	UnaryOperationExpression	* p		678149	1					
ANR	678200	UnaryOperator	*		678149	0					
ANR	678201	Identifier	p		678149	1					
ANR	678202	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		678149	1		|			
ANR	678203	Identifier	BIT_CTYPE_UPPER		678149	0					
ANR	678204	Identifier	BIT_CTYPE_LOWER		678149	1					
ANR	678205	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		678149	5					
ANR	678206	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6849:6874	678149	0	True				
ANR	678207	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		678149	0		!=			
ANR	678208	InclusiveOrExpression	v | BIT_CTYPE_LOWER		678149	0		|			
ANR	678209	Identifier	v		678149	0					
ANR	678210	Identifier	BIT_CTYPE_LOWER		678149	1					
ANR	678211	PrimaryExpression	0		678149	1					
ANR	678212	CompoundStatement		12:34:267:267	678149	1					
ANR	678213	IfStatement	if ( * p == 0xb5 )		678149	0					
ANR	678214	Condition	* p == 0xb5	140:8:6950:6959	678149	0	True				
ANR	678215	EqualityExpression	* p == 0xb5		678149	0		==			
ANR	678216	UnaryOperationExpression	* p		678149	0					
ANR	678217	UnaryOperator	*		678149	0					
ANR	678218	Identifier	p		678149	1					
ANR	678219	PrimaryExpression	0xb5		678149	1					
ANR	678220	ReturnStatement	return FALSE ;	141:6:6968:6980	678149	1	True				
ANR	678221	Identifier	FALSE		678149	0					
ANR	678222	ElseStatement	else		678149	0					
ANR	678223	ReturnStatement	return TRUE ;	143:6:6997:7008	678149	0	True				
ANR	678224	Identifier	TRUE		678149	0					
ANR	678225	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7017:7047	678149	6	True				
ANR	678226	ConditionalExpression	v != 0 ? TRUE : FALSE		678149	0					
ANR	678227	Condition	v != 0		678149	0					
ANR	678228	EqualityExpression	v != 0		678149	0		!=			
ANR	678229	Identifier	v		678149	0					
ANR	678230	PrimaryExpression	0		678149	1					
ANR	678231	Identifier	TRUE		678149	1					
ANR	678232	Identifier	FALSE		678149	2					
ANR	678233	ReturnType	static int		678149	1					
ANR	678234	Identifier	is_mbc_ambiguous		678149	2					
ANR	678235	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		678149	3					
ANR	678236	Parameter	OnigCaseFoldType flag	126:17:6550:6570	678149	0	True				
ANR	678237	ParameterType	OnigCaseFoldType		678149	0					
ANR	678238	Identifier	flag		678149	1					
ANR	678239	Parameter	const UChar * * pp	126:40:6573:6588	678149	1	True				
ANR	678240	ParameterType	const UChar * *		678149	0					
ANR	678241	Identifier	pp		678149	1					
ANR	678242	Parameter	const UChar * end	126:58:6591:6606	678149	2	True				
ANR	678243	ParameterType	const UChar *		678149	0					
ANR	678244	Identifier	end		678149	1					
ANR	678245	CFGEntryNode	ENTRY		678149		True				
ANR	678246	CFGExitNode	EXIT		678149		True				
ANR	678247	Symbol	pp		678149						
ANR	678248	Symbol	flag		678149						
ANR	678249	Symbol	* pp		678149						
ANR	678250	Symbol	TRUE		678149						
ANR	678251	Symbol	p		678149						
ANR	678252	Symbol	v		678149						
ANR	678253	Symbol	EncISO_8859_13_CtypeTable		678149						
ANR	678254	Symbol	BIT_CTYPE_LOWER		678149						
ANR	678255	Symbol	* EncISO_8859_13_CtypeTable		678149						
ANR	678256	Symbol	end		678149						
ANR	678257	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678149						
ANR	678258	Symbol	* p		678149						
ANR	678259	Symbol	BIT_CTYPE_UPPER		678149						
ANR	678260	Symbol	FALSE		678149						
ANR	678261	Symbol	* * p		678149						
ANR	678262	Function	is_code_ctype	150:0:7059:7219							
ANR	678263	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		678262	0					
ANR	678264	CompoundStatement		152:0:7124:7219	678262	0					
ANR	678265	IfStatement	if ( code < 256 )		678262	0					
ANR	678266	Condition	code < 256	153:6:7132:7141	678262	0	True				
ANR	678267	RelationalExpression	code < 256		678262	0		<			
ANR	678268	Identifier	code		678262	0					
ANR	678269	PrimaryExpression	256		678262	1					
ANR	678270	ReturnStatement	"return ENC_IS_ISO_8859_13_CTYPE ( code , ctype ) ;"	154:4:7148:7192	678262	1	True				
ANR	678271	CallExpression	"ENC_IS_ISO_8859_13_CTYPE ( code , ctype )"		678262	0					
ANR	678272	Callee	ENC_IS_ISO_8859_13_CTYPE		678262	0					
ANR	678273	Identifier	ENC_IS_ISO_8859_13_CTYPE		678262	0					
ANR	678274	ArgumentList	code		678262	1					
ANR	678275	Argument	code		678262	0					
ANR	678276	Identifier	code		678262	0					
ANR	678277	Argument	ctype		678262	1					
ANR	678278	Identifier	ctype		678262	0					
ANR	678279	ElseStatement	else		678262	0					
ANR	678280	ReturnStatement	return FALSE ;	156:4:7205:7217	678262	0	True				
ANR	678281	Identifier	FALSE		678262	0					
ANR	678282	ReturnType	static int		678262	1					
ANR	678283	Identifier	is_code_ctype		678262	2					
ANR	678284	ParameterList	"OnigCodePoint code , unsigned int ctype"		678262	3					
ANR	678285	Parameter	OnigCodePoint code	151:14:7084:7101	678262	0	True				
ANR	678286	ParameterType	OnigCodePoint		678262	0					
ANR	678287	Identifier	code		678262	1					
ANR	678288	Parameter	unsigned int ctype	151:34:7104:7121	678262	1	True				
ANR	678289	ParameterType	unsigned int		678262	0					
ANR	678290	Identifier	ctype		678262	1					
ANR	678291	CFGEntryNode	ENTRY		678262		True				
ANR	678292	CFGExitNode	EXIT		678262		True				
ANR	678293	Symbol	code		678262						
ANR	678294	Symbol	ctype		678262						
ANR	678295	Symbol	FALSE		678262						
ANR	678296	Symbol	ENC_IS_ISO_8859_13_CTYPE		678262						
ANR	678297	DeclStmt									
ANR	678298	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	678299	Function	apply_all_case_fold	193:0:7789:8045							
ANR	678300	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		678299	0					
ANR	678301	CompoundStatement		196:0:7888:8045	678299	0					
ANR	678302	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	197:2:7892:8043	678299	0	True				
ANR	678303	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		678299	0					
ANR	678304	Callee	onigenc_apply_all_case_fold_with_map		678299	0					
ANR	678305	Identifier	onigenc_apply_all_case_fold_with_map		678299	0					
ANR	678306	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678299	1					
ANR	678307	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678299	0					
ANR	678308	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678299	0		/			
ANR	678309	SizeofExpression	sizeof ( CaseFoldMap )		678299	0					
ANR	678310	Sizeof	sizeof		678299	0					
ANR	678311	SizeofOperand	CaseFoldMap		678299	1					
ANR	678312	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		678299	1					
ANR	678313	Sizeof	sizeof		678299	0					
ANR	678314	SizeofOperand	OnigPairCaseFoldCodes		678299	1					
ANR	678315	Argument	CaseFoldMap		678299	1					
ANR	678316	Identifier	CaseFoldMap		678299	0					
ANR	678317	Argument	1		678299	2					
ANR	678318	PrimaryExpression	1		678299	0					
ANR	678319	Argument	flag		678299	3					
ANR	678320	Identifier	flag		678299	0					
ANR	678321	Argument	f		678299	4					
ANR	678322	Identifier	f		678299	0					
ANR	678323	Argument	arg		678299	5					
ANR	678324	Identifier	arg		678299	0					
ANR	678325	ReturnType	static int		678299	1					
ANR	678326	Identifier	apply_all_case_fold		678299	2					
ANR	678327	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		678299	3					
ANR	678328	Parameter	OnigCaseFoldType flag	194:20:7820:7840	678299	0	True				
ANR	678329	ParameterType	OnigCaseFoldType		678299	0					
ANR	678330	Identifier	flag		678299	1					
ANR	678331	Parameter	OnigApplyAllCaseFoldFunc f	195:6:7849:7874	678299	1	True				
ANR	678332	ParameterType	OnigApplyAllCaseFoldFunc		678299	0					
ANR	678333	Identifier	f		678299	1					
ANR	678334	Parameter	void * arg	195:34:7877:7885	678299	2	True				
ANR	678335	ParameterType	void *		678299	0					
ANR	678336	Identifier	arg		678299	1					
ANR	678337	CFGEntryNode	ENTRY		678299		True				
ANR	678338	CFGExitNode	EXIT		678299		True				
ANR	678339	Symbol	flag		678299						
ANR	678340	Symbol	f		678299						
ANR	678341	Symbol	arg		678299						
ANR	678342	Symbol	CaseFoldMap		678299						
ANR	678343	Symbol	onigenc_apply_all_case_fold_with_map		678299						
ANR	678344	Function	get_case_fold_codes_by_str	202:0:8048:8341							
ANR	678345	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		678344	0					
ANR	678346	CompoundStatement		205:0:8184:8341	678344	0					
ANR	678347	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	206:2:8188:8339	678344	0	True				
ANR	678348	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		678344	0					
ANR	678349	Callee	onigenc_get_case_fold_codes_by_str_with_map		678344	0					
ANR	678350	Identifier	onigenc_get_case_fold_codes_by_str_with_map		678344	0					
ANR	678351	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678344	1					
ANR	678352	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678344	0					
ANR	678353	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678344	0		/			
ANR	678354	SizeofExpression	sizeof ( CaseFoldMap )		678344	0					
ANR	678355	Sizeof	sizeof		678344	0					
ANR	678356	SizeofOperand	CaseFoldMap		678344	1					
ANR	678357	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		678344	1					
ANR	678358	Sizeof	sizeof		678344	0					
ANR	678359	SizeofOperand	OnigPairCaseFoldCodes		678344	1					
ANR	678360	Argument	CaseFoldMap		678344	1					
ANR	678361	Identifier	CaseFoldMap		678344	0					
ANR	678362	Argument	1		678344	2					
ANR	678363	PrimaryExpression	1		678344	0					
ANR	678364	Argument	flag		678344	3					
ANR	678365	Identifier	flag		678344	0					
ANR	678366	Argument	p		678344	4					
ANR	678367	Identifier	p		678344	0					
ANR	678368	Argument	end		678344	5					
ANR	678369	Identifier	end		678344	0					
ANR	678370	Argument	items		678344	6					
ANR	678371	Identifier	items		678344	0					
ANR	678372	ReturnType	static int		678344	1					
ANR	678373	Identifier	get_case_fold_codes_by_str		678344	2					
ANR	678374	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		678344	3					
ANR	678375	Parameter	OnigCaseFoldType flag	203:27:8086:8106	678344	0	True				
ANR	678376	ParameterType	OnigCaseFoldType		678344	0					
ANR	678377	Identifier	flag		678344	1					
ANR	678378	Parameter	const OnigUChar * p	204:3:8112:8129	678344	1	True				
ANR	678379	ParameterType	const OnigUChar *		678344	0					
ANR	678380	Identifier	p		678344	1					
ANR	678381	Parameter	const OnigUChar * end	204:23:8132:8151	678344	2	True				
ANR	678382	ParameterType	const OnigUChar *		678344	0					
ANR	678383	Identifier	end		678344	1					
ANR	678384	Parameter	OnigCaseFoldCodeItem items [ ]	204:45:8154:8181	678344	3	True				
ANR	678385	ParameterType	OnigCaseFoldCodeItem [ ]		678344	0					
ANR	678386	Identifier	items		678344	1					
ANR	678387	CFGEntryNode	ENTRY		678344		True				
ANR	678388	CFGExitNode	EXIT		678344		True				
ANR	678389	Symbol	p		678344						
ANR	678390	Symbol	flag		678344						
ANR	678391	Symbol	end		678344						
ANR	678392	Symbol	CaseFoldMap		678344						
ANR	678393	Symbol	onigenc_get_case_fold_codes_by_str_with_map		678344						
ANR	678394	Symbol	items		678344						
ANR	678395	DeclStmt									
ANR	678396	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_13
