command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1130067	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativeX86_common.c								
ANR	1130068	Function	sljit_get_platform_name	27:0:1455:1559							
ANR	1130069	FunctionDef	sljit_get_platform_name ()		1130068	0					
ANR	1130070	CompoundStatement		28:0:1528:1559	1130068	0					
ANR	1130071	Statement	return	29:1:1531:1536	1130068	0	True				
ANR	1130072	Statement	"""x86"""	29:8:1538:1542	1130068	1	True				
ANR	1130073	ExpressionStatement	SLJIT_CPUINFO	29:14:1544:1557	1130068	2	True				
ANR	1130074	Identifier	SLJIT_CPUINFO		1130068	0					
ANR	1130075	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1130068	1					
ANR	1130076	Identifier	sljit_get_platform_name		1130068	2					
ANR	1130077	ParameterList			1130068	3					
ANR	1130078	CFGEntryNode	ENTRY		1130068		True				
ANR	1130079	CFGExitNode	EXIT		1130068		True				
ANR	1130080	DeclStmt									
ANR	1130081	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 3 ]	reg_map
ANR	1130082	DeclStmt									
ANR	1130083	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_map
ANR	1130084	DeclStmt									
ANR	1130085	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_lmap
ANR	1130086	DeclStmt									
ANR	1130087	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_map
ANR	1130088	DeclStmt									
ANR	1130089	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_lmap
ANR	1130090	DeclStmt									
ANR	1130091	Decl							sljit_si	sljit_si	cpu_has_sse2
ANR	1130092	DeclStmt									
ANR	1130093	Decl							sljit_si	sljit_si	cpu_has_cmov
ANR	1130094	Function	get_cpu_features	282:0:8363:9422							
ANR	1130095	FunctionDef	get_cpu_features ()		1130094	0					
ANR	1130096	CompoundStatement		283:0:8398:9422	1130094	0					
ANR	1130097	IdentifierDeclStatement	sljit_ui features ;	284:1:8401:8418	1130094	0	True				
ANR	1130098	IdentifierDecl	features		1130094	0					
ANR	1130099	IdentifierDeclType	sljit_ui		1130094	0					
ANR	1130100	Identifier	features		1130094	1					
ANR	1130101	IdentifierDeclStatement	int CPUInfo [ 4 ] ;	288:1:8465:8479	1130094	1	True				
ANR	1130102	IdentifierDecl	CPUInfo [ 4 ]		1130094	0					
ANR	1130103	IdentifierDeclType	int [ 4 ]		1130094	0					
ANR	1130104	Identifier	CPUInfo		1130094	1					
ANR	1130105	PrimaryExpression	4		1130094	2					
ANR	1130106	ExpressionStatement	"__cpuid ( CPUInfo , 1 )"	289:1:8482:8501	1130094	2	True				
ANR	1130107	CallExpression	"__cpuid ( CPUInfo , 1 )"		1130094	0					
ANR	1130108	Callee	__cpuid		1130094	0					
ANR	1130109	Identifier	__cpuid		1130094	0					
ANR	1130110	ArgumentList	CPUInfo		1130094	1					
ANR	1130111	Argument	CPUInfo		1130094	0					
ANR	1130112	Identifier	CPUInfo		1130094	0					
ANR	1130113	Argument	1		1130094	1					
ANR	1130114	PrimaryExpression	1		1130094	0					
ANR	1130115	ExpressionStatement	features = ( sljit_ui ) CPUInfo [ 3 ]	290:1:8504:8535	1130094	3	True				
ANR	1130116	AssignmentExpression	features = ( sljit_ui ) CPUInfo [ 3 ]		1130094	0		=			
ANR	1130117	Identifier	features		1130094	0					
ANR	1130118	CastExpression	( sljit_ui ) CPUInfo [ 3 ]		1130094	1					
ANR	1130119	CastTarget	sljit_ui		1130094	0					
ANR	1130120	ArrayIndexing	CPUInfo [ 3 ]		1130094	1					
ANR	1130121	Identifier	CPUInfo		1130094	0					
ANR	1130122	PrimaryExpression	3		1130094	1					
ANR	1130123	ExpressionStatement	cpu_has_sse2 = ( features >> 26 ) & 0x1	328:1:9336:9373	1130094	4	True				
ANR	1130124	AssignmentExpression	cpu_has_sse2 = ( features >> 26 ) & 0x1		1130094	0		=			
ANR	1130125	Identifier	cpu_has_sse2		1130094	0					
ANR	1130126	BitAndExpression	( features >> 26 ) & 0x1		1130094	1		&			
ANR	1130127	ShiftExpression	features >> 26		1130094	0		>>			
ANR	1130128	Identifier	features		1130094	0					
ANR	1130129	PrimaryExpression	26		1130094	1					
ANR	1130130	PrimaryExpression	0x1		1130094	1					
ANR	1130131	ExpressionStatement	cpu_has_cmov = ( features >> 15 ) & 0x1	330:1:9383:9420	1130094	5	True				
ANR	1130132	AssignmentExpression	cpu_has_cmov = ( features >> 15 ) & 0x1		1130094	0		=			
ANR	1130133	Identifier	cpu_has_cmov		1130094	0					
ANR	1130134	BitAndExpression	( features >> 15 ) & 0x1		1130094	1		&			
ANR	1130135	ShiftExpression	features >> 15		1130094	0		>>			
ANR	1130136	Identifier	features		1130094	0					
ANR	1130137	PrimaryExpression	15		1130094	1					
ANR	1130138	PrimaryExpression	0x1		1130094	1					
ANR	1130139	ReturnType	static void		1130094	1					
ANR	1130140	Identifier	get_cpu_features		1130094	2					
ANR	1130141	ParameterList			1130094	3					
ANR	1130142	CFGEntryNode	ENTRY		1130094		True				
ANR	1130143	CFGExitNode	EXIT		1130094		True				
ANR	1130144	Symbol	features		1130094						
ANR	1130145	Symbol	cpu_has_sse2		1130094						
ANR	1130146	Symbol	CPUInfo		1130094						
ANR	1130147	Symbol	* CPUInfo		1130094						
ANR	1130148	Symbol	cpu_has_cmov		1130094						
ANR	1130149	Function	get_jump_code	333:0:9425:10397							
ANR	1130150	FunctionDef	get_jump_code (sljit_si type)		1130149	0					
ANR	1130151	CompoundStatement		334:0:9470:10397	1130149	0					
ANR	1130152	SwitchStatement	switch ( type )		1130149	0					
ANR	1130153	Condition	type	335:9:9481:9484	1130149	0	True				
ANR	1130154	Identifier	type		1130149	0					
ANR	1130155	CompoundStatement		2:15:16:16	1130149	1					
ANR	1130156	Label	case SLJIT_EQUAL :	336:1:9490:9506	1130149	0	True				
ANR	1130157	Identifier	SLJIT_EQUAL		1130149	0					
ANR	1130158	Label	case SLJIT_D_EQUAL :	337:1:9509:9527	1130149	1	True				
ANR	1130159	Identifier	SLJIT_D_EQUAL		1130149	0					
ANR	1130160	ReturnStatement	return 0x84 ;	338:2:9531:9551	1130149	2	True				
ANR	1130161	PrimaryExpression	0x84		1130149	0					
ANR	1130162	Label	case SLJIT_NOT_EQUAL :	340:1:9555:9575	1130149	3	True				
ANR	1130163	Identifier	SLJIT_NOT_EQUAL		1130149	0					
ANR	1130164	Label	case SLJIT_D_NOT_EQUAL :	341:1:9578:9600	1130149	4	True				
ANR	1130165	Identifier	SLJIT_D_NOT_EQUAL		1130149	0					
ANR	1130166	ReturnStatement	return 0x85 ;	342:2:9604:9625	1130149	5	True				
ANR	1130167	PrimaryExpression	0x85		1130149	0					
ANR	1130168	Label	case SLJIT_LESS :	344:1:9629:9644	1130149	6	True				
ANR	1130169	Identifier	SLJIT_LESS		1130149	0					
ANR	1130170	Label	case SLJIT_D_LESS :	345:1:9647:9664	1130149	7	True				
ANR	1130171	Identifier	SLJIT_D_LESS		1130149	0					
ANR	1130172	ReturnStatement	return 0x82 ;	346:2:9668:9688	1130149	8	True				
ANR	1130173	PrimaryExpression	0x82		1130149	0					
ANR	1130174	Label	case SLJIT_GREATER_EQUAL :	348:1:9692:9716	1130149	9	True				
ANR	1130175	Identifier	SLJIT_GREATER_EQUAL		1130149	0					
ANR	1130176	Label	case SLJIT_D_GREATER_EQUAL :	349:1:9719:9745	1130149	10	True				
ANR	1130177	Identifier	SLJIT_D_GREATER_EQUAL		1130149	0					
ANR	1130178	ReturnStatement	return 0x83 ;	350:2:9749:9770	1130149	11	True				
ANR	1130179	PrimaryExpression	0x83		1130149	0					
ANR	1130180	Label	case SLJIT_GREATER :	352:1:9774:9792	1130149	12	True				
ANR	1130181	Identifier	SLJIT_GREATER		1130149	0					
ANR	1130182	Label	case SLJIT_D_GREATER :	353:1:9795:9815	1130149	13	True				
ANR	1130183	Identifier	SLJIT_D_GREATER		1130149	0					
ANR	1130184	ReturnStatement	return 0x87 ;	354:2:9819:9841	1130149	14	True				
ANR	1130185	PrimaryExpression	0x87		1130149	0					
ANR	1130186	Label	case SLJIT_LESS_EQUAL :	356:1:9845:9866	1130149	15	True				
ANR	1130187	Identifier	SLJIT_LESS_EQUAL		1130149	0					
ANR	1130188	Label	case SLJIT_D_LESS_EQUAL :	357:1:9869:9892	1130149	16	True				
ANR	1130189	Identifier	SLJIT_D_LESS_EQUAL		1130149	0					
ANR	1130190	ReturnStatement	return 0x86 ;	358:2:9896:9917	1130149	17	True				
ANR	1130191	PrimaryExpression	0x86		1130149	0					
ANR	1130192	Label	case SLJIT_SIG_LESS :	360:1:9921:9940	1130149	18	True				
ANR	1130193	Identifier	SLJIT_SIG_LESS		1130149	0					
ANR	1130194	ReturnStatement	return 0x8c ;	361:2:9944:9964	1130149	19	True				
ANR	1130195	PrimaryExpression	0x8c		1130149	0					
ANR	1130196	Label	case SLJIT_SIG_GREATER_EQUAL :	363:1:9968:9996	1130149	20	True				
ANR	1130197	Identifier	SLJIT_SIG_GREATER_EQUAL		1130149	0					
ANR	1130198	ReturnStatement	return 0x8d ;	364:2:10000:10021	1130149	21	True				
ANR	1130199	PrimaryExpression	0x8d		1130149	0					
ANR	1130200	Label	case SLJIT_SIG_GREATER :	366:1:10025:10047	1130149	22	True				
ANR	1130201	Identifier	SLJIT_SIG_GREATER		1130149	0					
ANR	1130202	ReturnStatement	return 0x8f ;	367:2:10051:10073	1130149	23	True				
ANR	1130203	PrimaryExpression	0x8f		1130149	0					
ANR	1130204	Label	case SLJIT_SIG_LESS_EQUAL :	369:1:10077:10102	1130149	24	True				
ANR	1130205	Identifier	SLJIT_SIG_LESS_EQUAL		1130149	0					
ANR	1130206	ReturnStatement	return 0x8e ;	370:2:10106:10127	1130149	25	True				
ANR	1130207	PrimaryExpression	0x8e		1130149	0					
ANR	1130208	Label	case SLJIT_OVERFLOW :	372:1:10131:10150	1130149	26	True				
ANR	1130209	Identifier	SLJIT_OVERFLOW		1130149	0					
ANR	1130210	Label	case SLJIT_MUL_OVERFLOW :	373:1:10153:10176	1130149	27	True				
ANR	1130211	Identifier	SLJIT_MUL_OVERFLOW		1130149	0					
ANR	1130212	ReturnStatement	return 0x80 ;	374:2:10180:10200	1130149	28	True				
ANR	1130213	PrimaryExpression	0x80		1130149	0					
ANR	1130214	Label	case SLJIT_NOT_OVERFLOW :	376:1:10204:10227	1130149	29	True				
ANR	1130215	Identifier	SLJIT_NOT_OVERFLOW		1130149	0					
ANR	1130216	Label	case SLJIT_MUL_NOT_OVERFLOW :	377:1:10230:10257	1130149	30	True				
ANR	1130217	Identifier	SLJIT_MUL_NOT_OVERFLOW		1130149	0					
ANR	1130218	ReturnStatement	return 0x81 ;	378:2:10261:10282	1130149	31	True				
ANR	1130219	PrimaryExpression	0x81		1130149	0					
ANR	1130220	Label	case SLJIT_D_UNORDERED :	380:1:10286:10308	1130149	32	True				
ANR	1130221	Identifier	SLJIT_D_UNORDERED		1130149	0					
ANR	1130222	ReturnStatement	return 0x8a ;	381:2:10312:10332	1130149	33	True				
ANR	1130223	PrimaryExpression	0x8a		1130149	0					
ANR	1130224	Label	case SLJIT_D_ORDERED :	383:1:10336:10356	1130149	34	True				
ANR	1130225	Identifier	SLJIT_D_ORDERED		1130149	0					
ANR	1130226	ReturnStatement	return 0x8b ;	384:2:10360:10381	1130149	35	True				
ANR	1130227	PrimaryExpression	0x8b		1130149	0					
ANR	1130228	ReturnStatement	return 0 ;	386:1:10387:10395	1130149	1	True				
ANR	1130229	PrimaryExpression	0		1130149	0					
ANR	1130230	ReturnType	static sljit_ub		1130149	1					
ANR	1130231	Identifier	get_jump_code		1130149	2					
ANR	1130232	ParameterList	sljit_si type		1130149	3					
ANR	1130233	Parameter	sljit_si type	333:30:9455:9467	1130149	0	True				
ANR	1130234	ParameterType	sljit_si		1130149	0					
ANR	1130235	Identifier	type		1130149	1					
ANR	1130236	CFGEntryNode	ENTRY		1130149		True				
ANR	1130237	CFGExitNode	EXIT		1130149		True				
ANR	1130238	Symbol	type		1130149						
ANR	1130239	DeclStmt									
ANR	1130240	Decl							sljit_ub	"sljit_ub * ( struct sljit_jump * jump , sljit_ub * code_ptr , sljit_si type )"	generate_far_jump_code
ANR	1130241	DeclStmt									
ANR	1130242	Decl							sljit_ub	"sljit_ub * ( sljit_ub * code_ptr , sljit_sw addr , sljit_si type )"	generate_fixed_jump
ANR	1130243	Function	generate_near_jump_code	395:0:10655:11977							
ANR	1130244	FunctionDef	"generate_near_jump_code (struct sljit_jump * jump , sljit_ub * code_ptr , sljit_ub * code , sljit_si type)"		1130243	0					
ANR	1130245	CompoundStatement		396:0:10772:11977	1130243	0					
ANR	1130246	IdentifierDeclStatement	sljit_si short_jump ;	397:1:10775:10794	1130243	0	True				
ANR	1130247	IdentifierDecl	short_jump		1130243	0					
ANR	1130248	IdentifierDeclType	sljit_si		1130243	0					
ANR	1130249	Identifier	short_jump		1130243	1					
ANR	1130250	IdentifierDeclStatement	sljit_uw label_addr ;	398:1:10797:10816	1130243	1	True				
ANR	1130251	IdentifierDecl	label_addr		1130243	0					
ANR	1130252	IdentifierDeclType	sljit_uw		1130243	0					
ANR	1130253	Identifier	label_addr		1130243	1					
ANR	1130254	IfStatement	if ( jump -> flags & JUMP_LABEL )		1130243	2					
ANR	1130255	Condition	jump -> flags & JUMP_LABEL	400:5:10824:10847	1130243	0	True				
ANR	1130256	BitAndExpression	jump -> flags & JUMP_LABEL		1130243	0		&			
ANR	1130257	PtrMemberAccess	jump -> flags		1130243	0					
ANR	1130258	Identifier	jump		1130243	0					
ANR	1130259	Identifier	flags		1130243	1					
ANR	1130260	Identifier	JUMP_LABEL		1130243	1					
ANR	1130261	ExpressionStatement	label_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	401:2:10852:10903	1130243	1	True				
ANR	1130262	AssignmentExpression	label_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1130243	0		=			
ANR	1130263	Identifier	label_addr		1130243	0					
ANR	1130264	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1130243	1					
ANR	1130265	CastTarget	sljit_uw		1130243	0					
ANR	1130266	AdditiveExpression	code + jump -> u . label -> size		1130243	1		+			
ANR	1130267	Identifier	code		1130243	0					
ANR	1130268	PtrMemberAccess	jump -> u . label -> size		1130243	1					
ANR	1130269	MemberAccess	jump -> u . label		1130243	0					
ANR	1130270	PtrMemberAccess	jump -> u		1130243	0					
ANR	1130271	Identifier	jump		1130243	0					
ANR	1130272	Identifier	u		1130243	1					
ANR	1130273	Identifier	label		1130243	1					
ANR	1130274	Identifier	size		1130243	1					
ANR	1130275	ElseStatement	else		1130243	0					
ANR	1130276	ExpressionStatement	label_addr = jump -> u . target	403:2:10913:10940	1130243	0	True				
ANR	1130277	AssignmentExpression	label_addr = jump -> u . target		1130243	0		=			
ANR	1130278	Identifier	label_addr		1130243	0					
ANR	1130279	MemberAccess	jump -> u . target		1130243	1					
ANR	1130280	PtrMemberAccess	jump -> u		1130243	0					
ANR	1130281	Identifier	jump		1130243	0					
ANR	1130282	Identifier	u		1130243	1					
ANR	1130283	Identifier	target		1130243	1					
ANR	1130284	ExpressionStatement	short_jump = ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128 && ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127	404:1:10943:11057	1130243	3	True				
ANR	1130285	AssignmentExpression	short_jump = ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128 && ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127		1130243	0		=			
ANR	1130286	Identifier	short_jump		1130243	0					
ANR	1130287	AndExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128 && ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127		1130243	1		&&			
ANR	1130288	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128		1130243	0		>=			
ANR	1130289	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) )		1130243	0					
ANR	1130290	CastTarget	sljit_sw		1130243	0					
ANR	1130291	AdditiveExpression	label_addr - ( jump -> addr + 2 )		1130243	1		-			
ANR	1130292	Identifier	label_addr		1130243	0					
ANR	1130293	AdditiveExpression	jump -> addr + 2		1130243	1		+			
ANR	1130294	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130295	Identifier	jump		1130243	0					
ANR	1130296	Identifier	addr		1130243	1					
ANR	1130297	PrimaryExpression	2		1130243	1					
ANR	1130298	UnaryOperationExpression	- 128		1130243	1					
ANR	1130299	UnaryOperator	-		1130243	0					
ANR	1130300	PrimaryExpression	128		1130243	1					
ANR	1130301	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127		1130243	1		<=			
ANR	1130302	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) )		1130243	0					
ANR	1130303	CastTarget	sljit_sw		1130243	0					
ANR	1130304	AdditiveExpression	label_addr - ( jump -> addr + 2 )		1130243	1		-			
ANR	1130305	Identifier	label_addr		1130243	0					
ANR	1130306	AdditiveExpression	jump -> addr + 2		1130243	1		+			
ANR	1130307	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130308	Identifier	jump		1130243	0					
ANR	1130309	Identifier	addr		1130243	1					
ANR	1130310	PrimaryExpression	2		1130243	1					
ANR	1130311	PrimaryExpression	127		1130243	1					
ANR	1130312	IfStatement	if ( ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX || ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN )		1130243	4					
ANR	1130313	Condition	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX || ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN	407:5:11122:11237	1130243	0	True				
ANR	1130314	OrExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX || ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN		1130243	0		||			
ANR	1130315	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX		1130243	0		>			
ANR	1130316	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) )		1130243	0					
ANR	1130317	CastTarget	sljit_sw		1130243	0					
ANR	1130318	AdditiveExpression	label_addr - ( jump -> addr + 1 )		1130243	1		-			
ANR	1130319	Identifier	label_addr		1130243	0					
ANR	1130320	AdditiveExpression	jump -> addr + 1		1130243	1		+			
ANR	1130321	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130322	Identifier	jump		1130243	0					
ANR	1130323	Identifier	addr		1130243	1					
ANR	1130324	PrimaryExpression	1		1130243	1					
ANR	1130325	Identifier	HALFWORD_MAX		1130243	1					
ANR	1130326	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN		1130243	1		<			
ANR	1130327	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) )		1130243	0					
ANR	1130328	CastTarget	sljit_sw		1130243	0					
ANR	1130329	AdditiveExpression	label_addr - ( jump -> addr + 1 )		1130243	1		-			
ANR	1130330	Identifier	label_addr		1130243	0					
ANR	1130331	AdditiveExpression	jump -> addr + 1		1130243	1		+			
ANR	1130332	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130333	Identifier	jump		1130243	0					
ANR	1130334	Identifier	addr		1130243	1					
ANR	1130335	PrimaryExpression	1		1130243	1					
ANR	1130336	Identifier	HALFWORD_MIN		1130243	1					
ANR	1130337	ReturnStatement	"return generate_far_jump_code ( jump , code_ptr , type ) ;"	408:2:11242:11293	1130243	1	True				
ANR	1130338	CallExpression	"generate_far_jump_code ( jump , code_ptr , type )"		1130243	0					
ANR	1130339	Callee	generate_far_jump_code		1130243	0					
ANR	1130340	Identifier	generate_far_jump_code		1130243	0					
ANR	1130341	ArgumentList	jump		1130243	1					
ANR	1130342	Argument	jump		1130243	0					
ANR	1130343	Identifier	jump		1130243	0					
ANR	1130344	Argument	code_ptr		1130243	1					
ANR	1130345	Identifier	code_ptr		1130243	0					
ANR	1130346	Argument	type		1130243	2					
ANR	1130347	Identifier	type		1130243	0					
ANR	1130348	IfStatement	if ( type == SLJIT_JUMP )		1130243	5					
ANR	1130349	Condition	type == SLJIT_JUMP	411:5:11308:11325	1130243	0	True				
ANR	1130350	EqualityExpression	type == SLJIT_JUMP		1130243	0		==			
ANR	1130351	Identifier	type		1130243	0					
ANR	1130352	Identifier	SLJIT_JUMP		1130243	1					
ANR	1130353	CompoundStatement		16:25:555:555	1130243	1					
ANR	1130354	IfStatement	if ( short_jump )		1130243	0					
ANR	1130355	Condition	short_jump	412:6:11336:11345	1130243	0	True				
ANR	1130356	Identifier	short_jump		1130243	0					
ANR	1130357	ExpressionStatement	* code_ptr ++ = JMP_i8	413:3:11351:11371	1130243	1	True				
ANR	1130358	AssignmentExpression	* code_ptr ++ = JMP_i8		1130243	0		=			
ANR	1130359	UnaryOperationExpression	* code_ptr ++		1130243	0					
ANR	1130360	UnaryOperator	*		1130243	0					
ANR	1130361	PostIncDecOperationExpression	code_ptr ++		1130243	1					
ANR	1130362	Identifier	code_ptr		1130243	0					
ANR	1130363	IncDec	++		1130243	1					
ANR	1130364	Identifier	JMP_i8		1130243	1					
ANR	1130365	ElseStatement	else		1130243	0					
ANR	1130366	ExpressionStatement	* code_ptr ++ = JMP_i32	415:3:11383:11404	1130243	0	True				
ANR	1130367	AssignmentExpression	* code_ptr ++ = JMP_i32		1130243	0		=			
ANR	1130368	UnaryOperationExpression	* code_ptr ++		1130243	0					
ANR	1130369	UnaryOperator	*		1130243	0					
ANR	1130370	PostIncDecOperationExpression	code_ptr ++		1130243	1					
ANR	1130371	Identifier	code_ptr		1130243	0					
ANR	1130372	IncDec	++		1130243	1					
ANR	1130373	Identifier	JMP_i32		1130243	1					
ANR	1130374	ExpressionStatement	jump -> addr ++	416:2:11408:11420	1130243	1	True				
ANR	1130375	PostIncDecOperationExpression	jump -> addr ++		1130243	0					
ANR	1130376	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130377	Identifier	jump		1130243	0					
ANR	1130378	Identifier	addr		1130243	1					
ANR	1130379	IncDec	++		1130243	1					
ANR	1130380	ElseStatement	else		1130243	0					
ANR	1130381	IfStatement	if ( type >= SLJIT_FAST_CALL )		1130243	0					
ANR	1130382	Condition	type >= SLJIT_FAST_CALL	418:10:11435:11457	1130243	0	True				
ANR	1130383	RelationalExpression	type >= SLJIT_FAST_CALL		1130243	0		>=			
ANR	1130384	Identifier	type		1130243	0					
ANR	1130385	Identifier	SLJIT_FAST_CALL		1130243	1					
ANR	1130386	CompoundStatement		23:35:687:687	1130243	1					
ANR	1130387	ExpressionStatement	short_jump = 0	419:2:11464:11478	1130243	0	True				
ANR	1130388	AssignmentExpression	short_jump = 0		1130243	0		=			
ANR	1130389	Identifier	short_jump		1130243	0					
ANR	1130390	PrimaryExpression	0		1130243	1					
ANR	1130391	ExpressionStatement	* code_ptr ++ = CALL_i32	420:2:11482:11504	1130243	1	True				
ANR	1130392	AssignmentExpression	* code_ptr ++ = CALL_i32		1130243	0		=			
ANR	1130393	UnaryOperationExpression	* code_ptr ++		1130243	0					
ANR	1130394	UnaryOperator	*		1130243	0					
ANR	1130395	PostIncDecOperationExpression	code_ptr ++		1130243	1					
ANR	1130396	Identifier	code_ptr		1130243	0					
ANR	1130397	IncDec	++		1130243	1					
ANR	1130398	Identifier	CALL_i32		1130243	1					
ANR	1130399	ExpressionStatement	jump -> addr ++	421:2:11508:11520	1130243	2	True				
ANR	1130400	PostIncDecOperationExpression	jump -> addr ++		1130243	0					
ANR	1130401	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130402	Identifier	jump		1130243	0					
ANR	1130403	Identifier	addr		1130243	1					
ANR	1130404	IncDec	++		1130243	1					
ANR	1130405	ElseStatement	else		1130243	0					
ANR	1130406	IfStatement	if ( short_jump )		1130243	0					
ANR	1130407	Condition	short_jump	423:10:11535:11544	1130243	0	True				
ANR	1130408	Identifier	short_jump		1130243	0					
ANR	1130409	CompoundStatement		28:22:774:774	1130243	1					
ANR	1130410	ExpressionStatement	* code_ptr ++ = get_jump_code ( type ) - 0x10	424:2:11551:11591	1130243	0	True				
ANR	1130411	AssignmentExpression	* code_ptr ++ = get_jump_code ( type ) - 0x10		1130243	0		=			
ANR	1130412	UnaryOperationExpression	* code_ptr ++		1130243	0					
ANR	1130413	UnaryOperator	*		1130243	0					
ANR	1130414	PostIncDecOperationExpression	code_ptr ++		1130243	1					
ANR	1130415	Identifier	code_ptr		1130243	0					
ANR	1130416	IncDec	++		1130243	1					
ANR	1130417	AdditiveExpression	get_jump_code ( type ) - 0x10		1130243	1		-			
ANR	1130418	CallExpression	get_jump_code ( type )		1130243	0					
ANR	1130419	Callee	get_jump_code		1130243	0					
ANR	1130420	Identifier	get_jump_code		1130243	0					
ANR	1130421	ArgumentList	type		1130243	1					
ANR	1130422	Argument	type		1130243	0					
ANR	1130423	Identifier	type		1130243	0					
ANR	1130424	PrimaryExpression	0x10		1130243	1					
ANR	1130425	ExpressionStatement	jump -> addr ++	425:2:11595:11607	1130243	1	True				
ANR	1130426	PostIncDecOperationExpression	jump -> addr ++		1130243	0					
ANR	1130427	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130428	Identifier	jump		1130243	0					
ANR	1130429	Identifier	addr		1130243	1					
ANR	1130430	IncDec	++		1130243	1					
ANR	1130431	ElseStatement	else		1130243	0					
ANR	1130432	CompoundStatement		32:6:845:845	1130243	0					
ANR	1130433	ExpressionStatement	* code_ptr ++ = GROUP_0F	428:2:11622:11644	1130243	0	True				
ANR	1130434	AssignmentExpression	* code_ptr ++ = GROUP_0F		1130243	0		=			
ANR	1130435	UnaryOperationExpression	* code_ptr ++		1130243	0					
ANR	1130436	UnaryOperator	*		1130243	0					
ANR	1130437	PostIncDecOperationExpression	code_ptr ++		1130243	1					
ANR	1130438	Identifier	code_ptr		1130243	0					
ANR	1130439	IncDec	++		1130243	1					
ANR	1130440	Identifier	GROUP_0F		1130243	1					
ANR	1130441	ExpressionStatement	* code_ptr ++ = get_jump_code ( type )	429:2:11648:11681	1130243	1	True				
ANR	1130442	AssignmentExpression	* code_ptr ++ = get_jump_code ( type )		1130243	0		=			
ANR	1130443	UnaryOperationExpression	* code_ptr ++		1130243	0					
ANR	1130444	UnaryOperator	*		1130243	0					
ANR	1130445	PostIncDecOperationExpression	code_ptr ++		1130243	1					
ANR	1130446	Identifier	code_ptr		1130243	0					
ANR	1130447	IncDec	++		1130243	1					
ANR	1130448	CallExpression	get_jump_code ( type )		1130243	1					
ANR	1130449	Callee	get_jump_code		1130243	0					
ANR	1130450	Identifier	get_jump_code		1130243	0					
ANR	1130451	ArgumentList	type		1130243	1					
ANR	1130452	Argument	type		1130243	0					
ANR	1130453	Identifier	type		1130243	0					
ANR	1130454	ExpressionStatement	jump -> addr += 2	430:2:11685:11700	1130243	2	True				
ANR	1130455	AssignmentExpression	jump -> addr += 2		1130243	0		+=			
ANR	1130456	PtrMemberAccess	jump -> addr		1130243	0					
ANR	1130457	Identifier	jump		1130243	0					
ANR	1130458	Identifier	addr		1130243	1					
ANR	1130459	PrimaryExpression	2		1130243	1					
ANR	1130460	IfStatement	if ( short_jump )		1130243	6					
ANR	1130461	Condition	short_jump	433:5:11711:11720	1130243	0	True				
ANR	1130462	Identifier	short_jump		1130243	0					
ANR	1130463	CompoundStatement		38:17:950:950	1130243	1					
ANR	1130464	ExpressionStatement	jump -> flags |= PATCH_MB	434:2:11727:11750	1130243	0	True				
ANR	1130465	AssignmentExpression	jump -> flags |= PATCH_MB		1130243	0		|=			
ANR	1130466	PtrMemberAccess	jump -> flags		1130243	0					
ANR	1130467	Identifier	jump		1130243	0					
ANR	1130468	Identifier	flags		1130243	1					
ANR	1130469	Identifier	PATCH_MB		1130243	1					
ANR	1130470	ExpressionStatement	code_ptr += sizeof ( sljit_sb )	435:2:11754:11782	1130243	1	True				
ANR	1130471	AssignmentExpression	code_ptr += sizeof ( sljit_sb )		1130243	0		+=			
ANR	1130472	Identifier	code_ptr		1130243	0					
ANR	1130473	SizeofExpression	sizeof ( sljit_sb )		1130243	1					
ANR	1130474	Sizeof	sizeof		1130243	0					
ANR	1130475	SizeofOperand	sljit_sb		1130243	1					
ANR	1130476	ElseStatement	else		1130243	0					
ANR	1130477	CompoundStatement		41:8:1019:1019	1130243	0					
ANR	1130478	ExpressionStatement	jump -> flags |= PATCH_MW	437:2:11796:11819	1130243	0	True				
ANR	1130479	AssignmentExpression	jump -> flags |= PATCH_MW		1130243	0		|=			
ANR	1130480	PtrMemberAccess	jump -> flags		1130243	0					
ANR	1130481	Identifier	jump		1130243	0					
ANR	1130482	Identifier	flags		1130243	1					
ANR	1130483	Identifier	PATCH_MW		1130243	1					
ANR	1130484	ExpressionStatement	code_ptr += sizeof ( sljit_sw )	439:2:11880:11908	1130243	1	True				
ANR	1130485	AssignmentExpression	code_ptr += sizeof ( sljit_sw )		1130243	0		+=			
ANR	1130486	Identifier	code_ptr		1130243	0					
ANR	1130487	SizeofExpression	sizeof ( sljit_sw )		1130243	1					
ANR	1130488	Sizeof	sizeof		1130243	0					
ANR	1130489	SizeofOperand	sljit_sw		1130243	1					
ANR	1130490	ReturnStatement	return code_ptr ;	445:1:11960:11975	1130243	7	True				
ANR	1130491	Identifier	code_ptr		1130243	0					
ANR	1130492	ReturnType	static sljit_ub *		1130243	1					
ANR	1130493	Identifier	generate_near_jump_code		1130243	2					
ANR	1130494	ParameterList	"struct sljit_jump * jump , sljit_ub * code_ptr , sljit_ub * code , sljit_si type"		1130243	3					
ANR	1130495	Parameter	struct sljit_jump * jump	395:41:10696:10718	1130243	0	True				
ANR	1130496	ParameterType	struct sljit_jump *		1130243	0					
ANR	1130497	Identifier	jump		1130243	1					
ANR	1130498	Parameter	sljit_ub * code_ptr	395:66:10721:10738	1130243	1	True				
ANR	1130499	ParameterType	sljit_ub *		1130243	0					
ANR	1130500	Identifier	code_ptr		1130243	1					
ANR	1130501	Parameter	sljit_ub * code	395:86:10741:10754	1130243	2	True				
ANR	1130502	ParameterType	sljit_ub *		1130243	0					
ANR	1130503	Identifier	code		1130243	1					
ANR	1130504	Parameter	sljit_si type	395:102:10757:10769	1130243	3	True				
ANR	1130505	ParameterType	sljit_si		1130243	0					
ANR	1130506	Identifier	type		1130243	1					
ANR	1130507	CFGEntryNode	ENTRY		1130243		True				
ANR	1130508	CFGExitNode	EXIT		1130243		True				
ANR	1130509	Symbol	jump -> u . label -> size		1130243						
ANR	1130510	Symbol	SLJIT_JUMP		1130243						
ANR	1130511	Symbol	code		1130243						
ANR	1130512	Symbol	short_jump		1130243						
ANR	1130513	Symbol	* * jump		1130243						
ANR	1130514	Symbol	* jump		1130243						
ANR	1130515	Symbol	jump -> u		1130243						
ANR	1130516	Symbol	HALFWORD_MIN		1130243						
ANR	1130517	Symbol	jump -> flags		1130243						
ANR	1130518	Symbol	CALL_i32		1130243						
ANR	1130519	Symbol	JUMP_LABEL		1130243						
ANR	1130520	Symbol	get_jump_code		1130243						
ANR	1130521	Symbol	type		1130243						
ANR	1130522	Symbol	generate_far_jump_code		1130243						
ANR	1130523	Symbol	code_ptr		1130243						
ANR	1130524	Symbol	SLJIT_FAST_CALL		1130243						
ANR	1130525	Symbol	* code_ptr ++		1130243						
ANR	1130526	Symbol	PATCH_MW		1130243						
ANR	1130527	Symbol	jump		1130243						
ANR	1130528	Symbol	GROUP_0F		1130243						
ANR	1130529	Symbol	JMP_i8		1130243						
ANR	1130530	Symbol	jump -> addr		1130243						
ANR	1130531	Symbol	JMP_i32		1130243						
ANR	1130532	Symbol	PATCH_MB		1130243						
ANR	1130533	Symbol	* jump -> u . label		1130243						
ANR	1130534	Symbol	* jump -> u		1130243						
ANR	1130535	Symbol	HALFWORD_MAX		1130243						
ANR	1130536	Symbol	jump -> u . target		1130243						
ANR	1130537	Symbol	label_addr		1130243						
ANR	1130538	Symbol	jump -> u . label		1130243						
ANR	1130539	Function	sljit_generate_code	448:0:11980:15765							
ANR	1130540	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1130539	0					
ANR	1130541	CompoundStatement		449:0:12064:15765	1130539	0					
ANR	1130542	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	450:1:12067:12100	1130539	0	True				
ANR	1130543	IdentifierDecl	* buf		1130539	0					
ANR	1130544	IdentifierDeclType	struct sljit_memory_fragment *		1130539	0					
ANR	1130545	Identifier	buf		1130539	1					
ANR	1130546	IdentifierDeclStatement	sljit_ub * code ;	451:1:12103:12117	1130539	1	True				
ANR	1130547	IdentifierDecl	* code		1130539	0					
ANR	1130548	IdentifierDeclType	sljit_ub *		1130539	0					
ANR	1130549	Identifier	code		1130539	1					
ANR	1130550	IdentifierDeclStatement	sljit_ub * code_ptr ;	452:1:12120:12138	1130539	2	True				
ANR	1130551	IdentifierDecl	* code_ptr		1130539	0					
ANR	1130552	IdentifierDeclType	sljit_ub *		1130539	0					
ANR	1130553	Identifier	code_ptr		1130539	1					
ANR	1130554	IdentifierDeclStatement	sljit_ub * buf_ptr ;	453:1:12141:12158	1130539	3	True				
ANR	1130555	IdentifierDecl	* buf_ptr		1130539	0					
ANR	1130556	IdentifierDeclType	sljit_ub *		1130539	0					
ANR	1130557	Identifier	buf_ptr		1130539	1					
ANR	1130558	IdentifierDeclStatement	sljit_ub * buf_end ;	454:1:12161:12178	1130539	4	True				
ANR	1130559	IdentifierDecl	* buf_end		1130539	0					
ANR	1130560	IdentifierDeclType	sljit_ub *		1130539	0					
ANR	1130561	Identifier	buf_end		1130539	1					
ANR	1130562	IdentifierDeclStatement	sljit_ub len ;	455:1:12181:12193	1130539	5	True				
ANR	1130563	IdentifierDecl	len		1130539	0					
ANR	1130564	IdentifierDeclType	sljit_ub		1130539	0					
ANR	1130565	Identifier	len		1130539	1					
ANR	1130566	IdentifierDeclStatement	struct sljit_label * label ;	457:1:12197:12222	1130539	6	True				
ANR	1130567	IdentifierDecl	* label		1130539	0					
ANR	1130568	IdentifierDeclType	struct sljit_label *		1130539	0					
ANR	1130569	Identifier	label		1130539	1					
ANR	1130570	IdentifierDeclStatement	struct sljit_jump * jump ;	458:1:12225:12248	1130539	7	True				
ANR	1130571	IdentifierDecl	* jump		1130539	0					
ANR	1130572	IdentifierDeclType	struct sljit_jump *		1130539	0					
ANR	1130573	Identifier	jump		1130539	1					
ANR	1130574	IdentifierDeclStatement	struct sljit_const * const_ ;	459:1:12251:12277	1130539	8	True				
ANR	1130575	IdentifierDecl	* const_		1130539	0					
ANR	1130576	IdentifierDeclType	struct sljit_const *		1130539	0					
ANR	1130577	Identifier	const_		1130539	1					
ANR	1130578	ExpressionStatement	CHECK_ERROR_PTR ( )	461:1:12281:12298	1130539	9	True				
ANR	1130579	CallExpression	CHECK_ERROR_PTR ( )		1130539	0					
ANR	1130580	Callee	CHECK_ERROR_PTR		1130539	0					
ANR	1130581	Identifier	CHECK_ERROR_PTR		1130539	0					
ANR	1130582	ArgumentList			1130539	1					
ANR	1130583	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	462:1:12301:12347	1130539	10	True				
ANR	1130584	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1130539	0					
ANR	1130585	Callee	CHECK_PTR		1130539	0					
ANR	1130586	Identifier	CHECK_PTR		1130539	0					
ANR	1130587	ArgumentList	check_sljit_generate_code ( compiler )		1130539	1					
ANR	1130588	Argument	check_sljit_generate_code ( compiler )		1130539	0					
ANR	1130589	CallExpression	check_sljit_generate_code ( compiler )		1130539	0					
ANR	1130590	Callee	check_sljit_generate_code		1130539	0					
ANR	1130591	Identifier	check_sljit_generate_code		1130539	0					
ANR	1130592	ArgumentList	compiler		1130539	1					
ANR	1130593	Argument	compiler		1130539	0					
ANR	1130594	Identifier	compiler		1130539	0					
ANR	1130595	ExpressionStatement	reverse_buf ( compiler )	463:1:12350:12371	1130539	11	True				
ANR	1130596	CallExpression	reverse_buf ( compiler )		1130539	0					
ANR	1130597	Callee	reverse_buf		1130539	0					
ANR	1130598	Identifier	reverse_buf		1130539	0					
ANR	1130599	ArgumentList	compiler		1130539	1					
ANR	1130600	Argument	compiler		1130539	0					
ANR	1130601	Identifier	compiler		1130539	0					
ANR	1130602	ExpressionStatement	code = ( sljit_ub * ) SLJIT_MALLOC_EXEC ( compiler -> size )	466:1:12411:12462	1130539	12	True				
ANR	1130603	AssignmentExpression	code = ( sljit_ub * ) SLJIT_MALLOC_EXEC ( compiler -> size )		1130539	0		=			
ANR	1130604	Identifier	code		1130539	0					
ANR	1130605	CastExpression	( sljit_ub * ) SLJIT_MALLOC_EXEC ( compiler -> size )		1130539	1					
ANR	1130606	CastTarget	sljit_ub *		1130539	0					
ANR	1130607	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size )		1130539	1					
ANR	1130608	Callee	SLJIT_MALLOC_EXEC		1130539	0					
ANR	1130609	Identifier	SLJIT_MALLOC_EXEC		1130539	0					
ANR	1130610	ArgumentList	compiler -> size		1130539	1					
ANR	1130611	Argument	compiler -> size		1130539	0					
ANR	1130612	PtrMemberAccess	compiler -> size		1130539	0					
ANR	1130613	Identifier	compiler		1130539	0					
ANR	1130614	Identifier	size		1130539	1					
ANR	1130615	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	467:1:12465:12492	1130539	13	True				
ANR	1130616	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1130539	0					
ANR	1130617	Callee	PTR_FAIL_WITH_EXEC_IF		1130539	0					
ANR	1130618	Identifier	PTR_FAIL_WITH_EXEC_IF		1130539	0					
ANR	1130619	ArgumentList	code		1130539	1					
ANR	1130620	Argument	code		1130539	0					
ANR	1130621	Identifier	code		1130539	0					
ANR	1130622	ExpressionStatement	buf = compiler -> buf	468:1:12495:12514	1130539	14	True				
ANR	1130623	AssignmentExpression	buf = compiler -> buf		1130539	0		=			
ANR	1130624	Identifier	buf		1130539	0					
ANR	1130625	PtrMemberAccess	compiler -> buf		1130539	1					
ANR	1130626	Identifier	compiler		1130539	0					
ANR	1130627	Identifier	buf		1130539	1					
ANR	1130628	ExpressionStatement	code_ptr = code	470:1:12518:12533	1130539	15	True				
ANR	1130629	AssignmentExpression	code_ptr = code		1130539	0		=			
ANR	1130630	Identifier	code_ptr		1130539	0					
ANR	1130631	Identifier	code		1130539	1					
ANR	1130632	ExpressionStatement	label = compiler -> labels	471:1:12536:12560	1130539	16	True				
ANR	1130633	AssignmentExpression	label = compiler -> labels		1130539	0		=			
ANR	1130634	Identifier	label		1130539	0					
ANR	1130635	PtrMemberAccess	compiler -> labels		1130539	1					
ANR	1130636	Identifier	compiler		1130539	0					
ANR	1130637	Identifier	labels		1130539	1					
ANR	1130638	ExpressionStatement	jump = compiler -> jumps	472:1:12563:12585	1130539	17	True				
ANR	1130639	AssignmentExpression	jump = compiler -> jumps		1130539	0		=			
ANR	1130640	Identifier	jump		1130539	0					
ANR	1130641	PtrMemberAccess	compiler -> jumps		1130539	1					
ANR	1130642	Identifier	compiler		1130539	0					
ANR	1130643	Identifier	jumps		1130539	1					
ANR	1130644	ExpressionStatement	const_ = compiler -> consts	473:1:12588:12613	1130539	18	True				
ANR	1130645	AssignmentExpression	const_ = compiler -> consts		1130539	0		=			
ANR	1130646	Identifier	const_		1130539	0					
ANR	1130647	PtrMemberAccess	compiler -> consts		1130539	1					
ANR	1130648	Identifier	compiler		1130539	0					
ANR	1130649	Identifier	consts		1130539	1					
ANR	1130650	DoStatement	do		1130539	19					
ANR	1130651	CompoundStatement		26:4:554:554	1130539	0					
ANR	1130652	ExpressionStatement	buf_ptr = buf -> memory	475:2:12623:12644	1130539	0	True				
ANR	1130653	AssignmentExpression	buf_ptr = buf -> memory		1130539	0		=			
ANR	1130654	Identifier	buf_ptr		1130539	0					
ANR	1130655	PtrMemberAccess	buf -> memory		1130539	1					
ANR	1130656	Identifier	buf		1130539	0					
ANR	1130657	Identifier	memory		1130539	1					
ANR	1130658	ExpressionStatement	buf_end = buf_ptr + buf -> used_size	476:2:12648:12682	1130539	1	True				
ANR	1130659	AssignmentExpression	buf_end = buf_ptr + buf -> used_size		1130539	0		=			
ANR	1130660	Identifier	buf_end		1130539	0					
ANR	1130661	AdditiveExpression	buf_ptr + buf -> used_size		1130539	1		+			
ANR	1130662	Identifier	buf_ptr		1130539	0					
ANR	1130663	PtrMemberAccess	buf -> used_size		1130539	1					
ANR	1130664	Identifier	buf		1130539	0					
ANR	1130665	Identifier	used_size		1130539	1					
ANR	1130666	DoStatement	do		1130539	2					
ANR	1130667	CompoundStatement		29:5:624:624	1130539	0					
ANR	1130668	ExpressionStatement	len = * buf_ptr ++	478:3:12694:12710	1130539	0	True				
ANR	1130669	AssignmentExpression	len = * buf_ptr ++		1130539	0		=			
ANR	1130670	Identifier	len		1130539	0					
ANR	1130671	UnaryOperationExpression	* buf_ptr ++		1130539	1					
ANR	1130672	UnaryOperator	*		1130539	0					
ANR	1130673	PostIncDecOperationExpression	buf_ptr ++		1130539	1					
ANR	1130674	Identifier	buf_ptr		1130539	0					
ANR	1130675	IncDec	++		1130539	1					
ANR	1130676	IfStatement	if ( len > 0 )		1130539	1					
ANR	1130677	Condition	len > 0	479:7:12719:12725	1130539	0	True				
ANR	1130678	RelationalExpression	len > 0		1130539	0		>			
ANR	1130679	Identifier	len		1130539	0					
ANR	1130680	PrimaryExpression	0		1130539	1					
ANR	1130681	CompoundStatement		31:16:663:663	1130539	1					
ANR	1130682	ExpressionStatement	"SLJIT_MEMMOVE ( code_ptr , buf_ptr , len )"	481:4:12775:12812	1130539	0	True				
ANR	1130683	CallExpression	"SLJIT_MEMMOVE ( code_ptr , buf_ptr , len )"		1130539	0					
ANR	1130684	Callee	SLJIT_MEMMOVE		1130539	0					
ANR	1130685	Identifier	SLJIT_MEMMOVE		1130539	0					
ANR	1130686	ArgumentList	code_ptr		1130539	1					
ANR	1130687	Argument	code_ptr		1130539	0					
ANR	1130688	Identifier	code_ptr		1130539	0					
ANR	1130689	Argument	buf_ptr		1130539	1					
ANR	1130690	Identifier	buf_ptr		1130539	0					
ANR	1130691	Argument	len		1130539	2					
ANR	1130692	Identifier	len		1130539	0					
ANR	1130693	ExpressionStatement	code_ptr += len	482:4:12818:12833	1130539	1	True				
ANR	1130694	AssignmentExpression	code_ptr += len		1130539	0		+=			
ANR	1130695	Identifier	code_ptr		1130539	0					
ANR	1130696	Identifier	len		1130539	1					
ANR	1130697	ExpressionStatement	buf_ptr += len	483:4:12839:12853	1130539	2	True				
ANR	1130698	AssignmentExpression	buf_ptr += len		1130539	0		+=			
ANR	1130699	Identifier	buf_ptr		1130539	0					
ANR	1130700	Identifier	len		1130539	1					
ANR	1130701	ElseStatement	else		1130539	0					
ANR	1130702	CompoundStatement		37:8:803:803	1130539	0					
ANR	1130703	IfStatement	if ( * buf_ptr >= 4 )		1130539	0					
ANR	1130704	Condition	* buf_ptr >= 4	486:8:12878:12890	1130539	0	True				
ANR	1130705	RelationalExpression	* buf_ptr >= 4		1130539	0		>=			
ANR	1130706	UnaryOperationExpression	* buf_ptr		1130539	0					
ANR	1130707	UnaryOperator	*		1130539	0					
ANR	1130708	Identifier	buf_ptr		1130539	1					
ANR	1130709	PrimaryExpression	4		1130539	1					
ANR	1130710	CompoundStatement		38:23:828:828	1130539	1					
ANR	1130711	ExpressionStatement	jump -> addr = ( sljit_uw ) code_ptr	487:5:12900:12931	1130539	0	True				
ANR	1130712	AssignmentExpression	jump -> addr = ( sljit_uw ) code_ptr		1130539	0		=			
ANR	1130713	PtrMemberAccess	jump -> addr		1130539	0					
ANR	1130714	Identifier	jump		1130539	0					
ANR	1130715	Identifier	addr		1130539	1					
ANR	1130716	CastExpression	( sljit_uw ) code_ptr		1130539	1					
ANR	1130717	CastTarget	sljit_uw		1130539	0					
ANR	1130718	Identifier	code_ptr		1130539	1					
ANR	1130719	IfStatement	if ( ! ( jump -> flags & SLJIT_REWRITABLE_JUMP ) )		1130539	1					
ANR	1130720	Condition	! ( jump -> flags & SLJIT_REWRITABLE_JUMP )	488:9:12942:12979	1130539	0	True				
ANR	1130721	UnaryOperationExpression	! ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1130539	0					
ANR	1130722	UnaryOperator	!		1130539	0					
ANR	1130723	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1130539	1		&			
ANR	1130724	PtrMemberAccess	jump -> flags		1130539	0					
ANR	1130725	Identifier	jump		1130539	0					
ANR	1130726	Identifier	flags		1130539	1					
ANR	1130727	Identifier	SLJIT_REWRITABLE_JUMP		1130539	1					
ANR	1130728	ExpressionStatement	"code_ptr = generate_near_jump_code ( jump , code_ptr , code , * buf_ptr - 4 )"	489:6:12988:13058	1130539	1	True				
ANR	1130729	AssignmentExpression	"code_ptr = generate_near_jump_code ( jump , code_ptr , code , * buf_ptr - 4 )"		1130539	0		=			
ANR	1130730	Identifier	code_ptr		1130539	0					
ANR	1130731	CallExpression	"generate_near_jump_code ( jump , code_ptr , code , * buf_ptr - 4 )"		1130539	1					
ANR	1130732	Callee	generate_near_jump_code		1130539	0					
ANR	1130733	Identifier	generate_near_jump_code		1130539	0					
ANR	1130734	ArgumentList	jump		1130539	1					
ANR	1130735	Argument	jump		1130539	0					
ANR	1130736	Identifier	jump		1130539	0					
ANR	1130737	Argument	code_ptr		1130539	1					
ANR	1130738	Identifier	code_ptr		1130539	0					
ANR	1130739	Argument	code		1130539	2					
ANR	1130740	Identifier	code		1130539	0					
ANR	1130741	Argument	* buf_ptr - 4		1130539	3					
ANR	1130742	AdditiveExpression	* buf_ptr - 4		1130539	0		-			
ANR	1130743	UnaryOperationExpression	* buf_ptr		1130539	0					
ANR	1130744	UnaryOperator	*		1130539	0					
ANR	1130745	Identifier	buf_ptr		1130539	1					
ANR	1130746	PrimaryExpression	4		1130539	1					
ANR	1130747	ElseStatement	else		1130539	0					
ANR	1130748	ExpressionStatement	"code_ptr = generate_far_jump_code ( jump , code_ptr , * buf_ptr - 4 )"	491:6:13076:13139	1130539	0	True				
ANR	1130749	AssignmentExpression	"code_ptr = generate_far_jump_code ( jump , code_ptr , * buf_ptr - 4 )"		1130539	0		=			
ANR	1130750	Identifier	code_ptr		1130539	0					
ANR	1130751	CallExpression	"generate_far_jump_code ( jump , code_ptr , * buf_ptr - 4 )"		1130539	1					
ANR	1130752	Callee	generate_far_jump_code		1130539	0					
ANR	1130753	Identifier	generate_far_jump_code		1130539	0					
ANR	1130754	ArgumentList	jump		1130539	1					
ANR	1130755	Argument	jump		1130539	0					
ANR	1130756	Identifier	jump		1130539	0					
ANR	1130757	Argument	code_ptr		1130539	1					
ANR	1130758	Identifier	code_ptr		1130539	0					
ANR	1130759	Argument	* buf_ptr - 4		1130539	2					
ANR	1130760	AdditiveExpression	* buf_ptr - 4		1130539	0		-			
ANR	1130761	UnaryOperationExpression	* buf_ptr		1130539	0					
ANR	1130762	UnaryOperator	*		1130539	0					
ANR	1130763	Identifier	buf_ptr		1130539	1					
ANR	1130764	PrimaryExpression	4		1130539	1					
ANR	1130765	ExpressionStatement	jump = jump -> next	492:5:13146:13163	1130539	2	True				
ANR	1130766	AssignmentExpression	jump = jump -> next		1130539	0		=			
ANR	1130767	Identifier	jump		1130539	0					
ANR	1130768	PtrMemberAccess	jump -> next		1130539	1					
ANR	1130769	Identifier	jump		1130539	0					
ANR	1130770	Identifier	next		1130539	1					
ANR	1130771	ElseStatement	else		1130539	0					
ANR	1130772	IfStatement	if ( * buf_ptr == 0 )		1130539	0					
ANR	1130773	Condition	* buf_ptr == 0	494:13:13184:13196	1130539	0	True				
ANR	1130774	EqualityExpression	* buf_ptr == 0		1130539	0		==			
ANR	1130775	UnaryOperationExpression	* buf_ptr		1130539	0					
ANR	1130776	UnaryOperator	*		1130539	0					
ANR	1130777	Identifier	buf_ptr		1130539	1					
ANR	1130778	PrimaryExpression	0		1130539	1					
ANR	1130779	CompoundStatement		46:28:1134:1134	1130539	1					
ANR	1130780	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	495:5:13206:13238	1130539	0	True				
ANR	1130781	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1130539	0		=			
ANR	1130782	PtrMemberAccess	label -> addr		1130539	0					
ANR	1130783	Identifier	label		1130539	0					
ANR	1130784	Identifier	addr		1130539	1					
ANR	1130785	CastExpression	( sljit_uw ) code_ptr		1130539	1					
ANR	1130786	CastTarget	sljit_uw		1130539	0					
ANR	1130787	Identifier	code_ptr		1130539	1					
ANR	1130788	ExpressionStatement	label -> size = code_ptr - code	496:5:13245:13274	1130539	1	True				
ANR	1130789	AssignmentExpression	label -> size = code_ptr - code		1130539	0		=			
ANR	1130790	PtrMemberAccess	label -> size		1130539	0					
ANR	1130791	Identifier	label		1130539	0					
ANR	1130792	Identifier	size		1130539	1					
ANR	1130793	AdditiveExpression	code_ptr - code		1130539	1		-			
ANR	1130794	Identifier	code_ptr		1130539	0					
ANR	1130795	Identifier	code		1130539	1					
ANR	1130796	ExpressionStatement	label = label -> next	497:5:13281:13300	1130539	2	True				
ANR	1130797	AssignmentExpression	label = label -> next		1130539	0		=			
ANR	1130798	Identifier	label		1130539	0					
ANR	1130799	PtrMemberAccess	label -> next		1130539	1					
ANR	1130800	Identifier	label		1130539	0					
ANR	1130801	Identifier	next		1130539	1					
ANR	1130802	ElseStatement	else		1130539	0					
ANR	1130803	IfStatement	if ( * buf_ptr == 1 )		1130539	0					
ANR	1130804	Condition	* buf_ptr == 1	499:13:13321:13333	1130539	0	True				
ANR	1130805	EqualityExpression	* buf_ptr == 1		1130539	0		==			
ANR	1130806	UnaryOperationExpression	* buf_ptr		1130539	0					
ANR	1130807	UnaryOperator	*		1130539	0					
ANR	1130808	Identifier	buf_ptr		1130539	1					
ANR	1130809	PrimaryExpression	1		1130539	1					
ANR	1130810	CompoundStatement		51:28:1271:1271	1130539	1					
ANR	1130811	ExpressionStatement	const_ -> addr = ( ( sljit_uw ) code_ptr ) - sizeof ( sljit_sw )	500:5:13343:13397	1130539	0	True				
ANR	1130812	AssignmentExpression	const_ -> addr = ( ( sljit_uw ) code_ptr ) - sizeof ( sljit_sw )		1130539	0		=			
ANR	1130813	PtrMemberAccess	const_ -> addr		1130539	0					
ANR	1130814	Identifier	const_		1130539	0					
ANR	1130815	Identifier	addr		1130539	1					
ANR	1130816	AdditiveExpression	( ( sljit_uw ) code_ptr ) - sizeof ( sljit_sw )		1130539	1		-			
ANR	1130817	CastExpression	( sljit_uw ) code_ptr		1130539	0					
ANR	1130818	CastTarget	sljit_uw		1130539	0					
ANR	1130819	Identifier	code_ptr		1130539	1					
ANR	1130820	SizeofExpression	sizeof ( sljit_sw )		1130539	1					
ANR	1130821	Sizeof	sizeof		1130539	0					
ANR	1130822	SizeofOperand	sljit_sw		1130539	1					
ANR	1130823	ExpressionStatement	const_ = const_ -> next	501:5:13404:13425	1130539	1	True				
ANR	1130824	AssignmentExpression	const_ = const_ -> next		1130539	0		=			
ANR	1130825	Identifier	const_		1130539	0					
ANR	1130826	PtrMemberAccess	const_ -> next		1130539	1					
ANR	1130827	Identifier	const_		1130539	0					
ANR	1130828	Identifier	next		1130539	1					
ANR	1130829	ElseStatement	else		1130539	0					
ANR	1130830	CompoundStatement		55:9:1377:1377	1130539	0					
ANR	1130831	ExpressionStatement	* code_ptr ++ = ( * buf_ptr == 2 ) ? CALL_i32 : JMP_i32	505:5:13506:13556	1130539	0	True				
ANR	1130832	AssignmentExpression	* code_ptr ++ = ( * buf_ptr == 2 ) ? CALL_i32 : JMP_i32		1130539	0		=			
ANR	1130833	UnaryOperationExpression	* code_ptr ++		1130539	0					
ANR	1130834	UnaryOperator	*		1130539	0					
ANR	1130835	PostIncDecOperationExpression	code_ptr ++		1130539	1					
ANR	1130836	Identifier	code_ptr		1130539	0					
ANR	1130837	IncDec	++		1130539	1					
ANR	1130838	ConditionalExpression	( * buf_ptr == 2 ) ? CALL_i32 : JMP_i32		1130539	1					
ANR	1130839	Condition	* buf_ptr == 2		1130539	0					
ANR	1130840	EqualityExpression	* buf_ptr == 2		1130539	0		==			
ANR	1130841	UnaryOperationExpression	* buf_ptr		1130539	0					
ANR	1130842	UnaryOperator	*		1130539	0					
ANR	1130843	Identifier	buf_ptr		1130539	1					
ANR	1130844	PrimaryExpression	2		1130539	1					
ANR	1130845	Identifier	CALL_i32		1130539	1					
ANR	1130846	Identifier	JMP_i32		1130539	2					
ANR	1130847	ExpressionStatement	buf_ptr ++	506:5:13563:13572	1130539	1	True				
ANR	1130848	PostIncDecOperationExpression	buf_ptr ++		1130539	0					
ANR	1130849	Identifier	buf_ptr		1130539	0					
ANR	1130850	IncDec	++		1130539	1					
ANR	1130851	ExpressionStatement	* ( sljit_sw * ) code_ptr = * ( sljit_sw * ) buf_ptr - ( ( sljit_sw ) code_ptr + sizeof ( sljit_sw ) )	507:5:13579:13663	1130539	2	True				
ANR	1130852	AssignmentExpression	* ( sljit_sw * ) code_ptr = * ( sljit_sw * ) buf_ptr - ( ( sljit_sw ) code_ptr + sizeof ( sljit_sw ) )		1130539	0		=			
ANR	1130853	UnaryOperationExpression	* ( sljit_sw * ) code_ptr		1130539	0					
ANR	1130854	UnaryOperator	*		1130539	0					
ANR	1130855	CastExpression	( sljit_sw * ) code_ptr		1130539	1					
ANR	1130856	CastTarget	sljit_sw *		1130539	0					
ANR	1130857	Identifier	code_ptr		1130539	1					
ANR	1130858	AdditiveExpression	* ( sljit_sw * ) buf_ptr - ( ( sljit_sw ) code_ptr + sizeof ( sljit_sw ) )		1130539	1		-			
ANR	1130859	UnaryOperationExpression	* ( sljit_sw * ) buf_ptr		1130539	0					
ANR	1130860	UnaryOperator	*		1130539	0					
ANR	1130861	CastExpression	( sljit_sw * ) buf_ptr		1130539	1					
ANR	1130862	CastTarget	sljit_sw *		1130539	0					
ANR	1130863	Identifier	buf_ptr		1130539	1					
ANR	1130864	AdditiveExpression	( sljit_sw ) code_ptr + sizeof ( sljit_sw )		1130539	1		+			
ANR	1130865	CastExpression	( sljit_sw ) code_ptr		1130539	0					
ANR	1130866	CastTarget	sljit_sw		1130539	0					
ANR	1130867	Identifier	code_ptr		1130539	1					
ANR	1130868	SizeofExpression	sizeof ( sljit_sw )		1130539	1					
ANR	1130869	Sizeof	sizeof		1130539	0					
ANR	1130870	SizeofOperand	sljit_sw		1130539	1					
ANR	1130871	ExpressionStatement	code_ptr += sizeof ( sljit_sw )	508:5:13670:13698	1130539	3	True				
ANR	1130872	AssignmentExpression	code_ptr += sizeof ( sljit_sw )		1130539	0		+=			
ANR	1130873	Identifier	code_ptr		1130539	0					
ANR	1130874	SizeofExpression	sizeof ( sljit_sw )		1130539	1					
ANR	1130875	Sizeof	sizeof		1130539	0					
ANR	1130876	SizeofOperand	sljit_sw		1130539	1					
ANR	1130877	ExpressionStatement	buf_ptr += sizeof ( sljit_sw ) - 1	509:5:13705:13736	1130539	4	True				
ANR	1130878	AssignmentExpression	buf_ptr += sizeof ( sljit_sw ) - 1		1130539	0		+=			
ANR	1130879	Identifier	buf_ptr		1130539	0					
ANR	1130880	AdditiveExpression	sizeof ( sljit_sw ) - 1		1130539	1		-			
ANR	1130881	SizeofExpression	sizeof ( sljit_sw )		1130539	0					
ANR	1130882	Sizeof	sizeof		1130539	0					
ANR	1130883	SizeofOperand	sljit_sw		1130539	1					
ANR	1130884	PrimaryExpression	1		1130539	1					
ANR	1130885	ExpressionStatement	buf_ptr ++	515:4:13879:13888	1130539	1	True				
ANR	1130886	PostIncDecOperationExpression	buf_ptr ++		1130539	0					
ANR	1130887	Identifier	buf_ptr		1130539	0					
ANR	1130888	IncDec	++		1130539	1					
ANR	1130889	Condition	buf_ptr < buf_end	517:11:13906:13922	1130539	1	True				
ANR	1130890	RelationalExpression	buf_ptr < buf_end		1130539	0		<			
ANR	1130891	Identifier	buf_ptr		1130539	0					
ANR	1130892	Identifier	buf_end		1130539	1					
ANR	1130893	ExpressionStatement	SLJIT_ASSERT ( buf_ptr == buf_end )	518:2:13928:13960	1130539	3	True				
ANR	1130894	CallExpression	SLJIT_ASSERT ( buf_ptr == buf_end )		1130539	0					
ANR	1130895	Callee	SLJIT_ASSERT		1130539	0					
ANR	1130896	Identifier	SLJIT_ASSERT		1130539	0					
ANR	1130897	ArgumentList	buf_ptr == buf_end		1130539	1					
ANR	1130898	Argument	buf_ptr == buf_end		1130539	0					
ANR	1130899	EqualityExpression	buf_ptr == buf_end		1130539	0		==			
ANR	1130900	Identifier	buf_ptr		1130539	0					
ANR	1130901	Identifier	buf_end		1130539	1					
ANR	1130902	ExpressionStatement	buf = buf -> next	519:2:13964:13979	1130539	4	True				
ANR	1130903	AssignmentExpression	buf = buf -> next		1130539	0		=			
ANR	1130904	Identifier	buf		1130539	0					
ANR	1130905	PtrMemberAccess	buf -> next		1130539	1					
ANR	1130906	Identifier	buf		1130539	0					
ANR	1130907	Identifier	next		1130539	1					
ANR	1130908	Condition	buf	520:10:13991:13993	1130539	1	True				
ANR	1130909	Identifier	buf		1130539	0					
ANR	1130910	ExpressionStatement	SLJIT_ASSERT ( ! label )	522:1:13999:14019	1130539	20	True				
ANR	1130911	CallExpression	SLJIT_ASSERT ( ! label )		1130539	0					
ANR	1130912	Callee	SLJIT_ASSERT		1130539	0					
ANR	1130913	Identifier	SLJIT_ASSERT		1130539	0					
ANR	1130914	ArgumentList	! label		1130539	1					
ANR	1130915	Argument	! label		1130539	0					
ANR	1130916	UnaryOperationExpression	! label		1130539	0					
ANR	1130917	UnaryOperator	!		1130539	0					
ANR	1130918	Identifier	label		1130539	1					
ANR	1130919	ExpressionStatement	SLJIT_ASSERT ( ! jump )	523:1:14022:14041	1130539	21	True				
ANR	1130920	CallExpression	SLJIT_ASSERT ( ! jump )		1130539	0					
ANR	1130921	Callee	SLJIT_ASSERT		1130539	0					
ANR	1130922	Identifier	SLJIT_ASSERT		1130539	0					
ANR	1130923	ArgumentList	! jump		1130539	1					
ANR	1130924	Argument	! jump		1130539	0					
ANR	1130925	UnaryOperationExpression	! jump		1130539	0					
ANR	1130926	UnaryOperator	!		1130539	0					
ANR	1130927	Identifier	jump		1130539	1					
ANR	1130928	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	524:1:14044:14065	1130539	22	True				
ANR	1130929	CallExpression	SLJIT_ASSERT ( ! const_ )		1130539	0					
ANR	1130930	Callee	SLJIT_ASSERT		1130539	0					
ANR	1130931	Identifier	SLJIT_ASSERT		1130539	0					
ANR	1130932	ArgumentList	! const_		1130539	1					
ANR	1130933	Argument	! const_		1130539	0					
ANR	1130934	UnaryOperationExpression	! const_		1130539	0					
ANR	1130935	UnaryOperator	!		1130539	0					
ANR	1130936	Identifier	const_		1130539	1					
ANR	1130937	ExpressionStatement	jump = compiler -> jumps	526:1:14069:14091	1130539	23	True				
ANR	1130938	AssignmentExpression	jump = compiler -> jumps		1130539	0		=			
ANR	1130939	Identifier	jump		1130539	0					
ANR	1130940	PtrMemberAccess	compiler -> jumps		1130539	1					
ANR	1130941	Identifier	compiler		1130539	0					
ANR	1130942	Identifier	jumps		1130539	1					
ANR	1130943	WhileStatement	while ( jump )		1130539	24					
ANR	1130944	Condition	jump	527:8:14101:14104	1130539	0	True				
ANR	1130945	Identifier	jump		1130539	0					
ANR	1130946	CompoundStatement		79:14:2042:2042	1130539	1					
ANR	1130947	IfStatement	if ( jump -> flags & PATCH_MB )		1130539	0					
ANR	1130948	Condition	jump -> flags & PATCH_MB	528:6:14115:14136	1130539	0	True				
ANR	1130949	BitAndExpression	jump -> flags & PATCH_MB		1130539	0		&			
ANR	1130950	PtrMemberAccess	jump -> flags		1130539	0					
ANR	1130951	Identifier	jump		1130539	0					
ANR	1130952	Identifier	flags		1130539	1					
ANR	1130953	Identifier	PATCH_MB		1130539	1					
ANR	1130954	CompoundStatement		80:30:2074:2074	1130539	1					
ANR	1130955	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127 )	529:3:14144:14307	1130539	0	True				
ANR	1130956	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127 )		1130539	0					
ANR	1130957	Callee	SLJIT_ASSERT		1130539	0					
ANR	1130958	Identifier	SLJIT_ASSERT		1130539	0					
ANR	1130959	ArgumentList	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1130539	1					
ANR	1130960	Argument	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1130539	0					
ANR	1130961	AndExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1130539	0		&&			
ANR	1130962	RelationalExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128		1130539	0		>=			
ANR	1130963	CastExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1130539	0					
ANR	1130964	CastTarget	sljit_sw		1130539	0					
ANR	1130965	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) )		1130539	1		-			
ANR	1130966	PtrMemberAccess	jump -> u . label -> addr		1130539	0					
ANR	1130967	MemberAccess	jump -> u . label		1130539	0					
ANR	1130968	PtrMemberAccess	jump -> u		1130539	0					
ANR	1130969	Identifier	jump		1130539	0					
ANR	1130970	Identifier	u		1130539	1					
ANR	1130971	Identifier	label		1130539	1					
ANR	1130972	Identifier	addr		1130539	1					
ANR	1130973	AdditiveExpression	jump -> addr + sizeof ( sljit_sb )		1130539	1		+			
ANR	1130974	PtrMemberAccess	jump -> addr		1130539	0					
ANR	1130975	Identifier	jump		1130539	0					
ANR	1130976	Identifier	addr		1130539	1					
ANR	1130977	SizeofExpression	sizeof ( sljit_sb )		1130539	1					
ANR	1130978	Sizeof	sizeof		1130539	0					
ANR	1130979	SizeofOperand	sljit_sb		1130539	1					
ANR	1130980	UnaryOperationExpression	- 128		1130539	1					
ANR	1130981	UnaryOperator	-		1130539	0					
ANR	1130982	PrimaryExpression	128		1130539	1					
ANR	1130983	RelationalExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1130539	1		<=			
ANR	1130984	CastExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1130539	0					
ANR	1130985	CastTarget	sljit_sw		1130539	0					
ANR	1130986	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) )		1130539	1		-			
ANR	1130987	PtrMemberAccess	jump -> u . label -> addr		1130539	0					
ANR	1130988	MemberAccess	jump -> u . label		1130539	0					
ANR	1130989	PtrMemberAccess	jump -> u		1130539	0					
ANR	1130990	Identifier	jump		1130539	0					
ANR	1130991	Identifier	u		1130539	1					
ANR	1130992	Identifier	label		1130539	1					
ANR	1130993	Identifier	addr		1130539	1					
ANR	1130994	AdditiveExpression	jump -> addr + sizeof ( sljit_sb )		1130539	1		+			
ANR	1130995	PtrMemberAccess	jump -> addr		1130539	0					
ANR	1130996	Identifier	jump		1130539	0					
ANR	1130997	Identifier	addr		1130539	1					
ANR	1130998	SizeofExpression	sizeof ( sljit_sb )		1130539	1					
ANR	1130999	Sizeof	sizeof		1130539	0					
ANR	1131000	SizeofOperand	sljit_sb		1130539	1					
ANR	1131001	PrimaryExpression	127		1130539	1					
ANR	1131002	ExpressionStatement	* ( sljit_ub * ) jump -> addr = ( sljit_ub ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )	530:3:14312:14402	1130539	1	True				
ANR	1131003	AssignmentExpression	* ( sljit_ub * ) jump -> addr = ( sljit_ub ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1130539	0		=			
ANR	1131004	UnaryOperationExpression	* ( sljit_ub * ) jump -> addr		1130539	0					
ANR	1131005	UnaryOperator	*		1130539	0					
ANR	1131006	CastExpression	( sljit_ub * ) jump -> addr		1130539	1					
ANR	1131007	CastTarget	sljit_ub *		1130539	0					
ANR	1131008	PtrMemberAccess	jump -> addr		1130539	1					
ANR	1131009	Identifier	jump		1130539	0					
ANR	1131010	Identifier	addr		1130539	1					
ANR	1131011	CastExpression	( sljit_ub ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1130539	1					
ANR	1131012	CastTarget	sljit_ub		1130539	0					
ANR	1131013	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) )		1130539	1		-			
ANR	1131014	PtrMemberAccess	jump -> u . label -> addr		1130539	0					
ANR	1131015	MemberAccess	jump -> u . label		1130539	0					
ANR	1131016	PtrMemberAccess	jump -> u		1130539	0					
ANR	1131017	Identifier	jump		1130539	0					
ANR	1131018	Identifier	u		1130539	1					
ANR	1131019	Identifier	label		1130539	1					
ANR	1131020	Identifier	addr		1130539	1					
ANR	1131021	AdditiveExpression	jump -> addr + sizeof ( sljit_sb )		1130539	1		+			
ANR	1131022	PtrMemberAccess	jump -> addr		1130539	0					
ANR	1131023	Identifier	jump		1130539	0					
ANR	1131024	Identifier	addr		1130539	1					
ANR	1131025	SizeofExpression	sizeof ( sljit_sb )		1130539	1					
ANR	1131026	Sizeof	sizeof		1130539	0					
ANR	1131027	SizeofOperand	sljit_sb		1130539	1					
ANR	1131028	ElseStatement	else		1130539	0					
ANR	1131029	IfStatement	if ( jump -> flags & PATCH_MW )		1130539	0					
ANR	1131030	Condition	jump -> flags & PATCH_MW	531:13:14417:14438	1130539	0	True				
ANR	1131031	BitAndExpression	jump -> flags & PATCH_MW		1130539	0		&			
ANR	1131032	PtrMemberAccess	jump -> flags		1130539	0					
ANR	1131033	Identifier	jump		1130539	0					
ANR	1131034	Identifier	flags		1130539	1					
ANR	1131035	Identifier	PATCH_MW		1130539	1					
ANR	1131036	CompoundStatement		83:37:2376:2376	1130539	1					
ANR	1131037	IfStatement	if ( jump -> flags & JUMP_LABEL )		1130539	0					
ANR	1131038	Condition	jump -> flags & JUMP_LABEL	532:7:14450:14473	1130539	0	True				
ANR	1131039	BitAndExpression	jump -> flags & JUMP_LABEL		1130539	0		&			
ANR	1131040	PtrMemberAccess	jump -> flags		1130539	0					
ANR	1131041	Identifier	jump		1130539	0					
ANR	1131042	Identifier	flags		1130539	1					
ANR	1131043	Identifier	JUMP_LABEL		1130539	1					
ANR	1131044	CompoundStatement		84:33:2411:2411	1130539	1					
ANR	1131045	ExpressionStatement	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) ) )	534:4:14539:14629	1130539	0	True				
ANR	1131046	AssignmentExpression	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) ) )		1130539	0		=			
ANR	1131047	UnaryOperationExpression	* ( sljit_sw * ) jump -> addr		1130539	0					
ANR	1131048	UnaryOperator	*		1130539	0					
ANR	1131049	CastExpression	( sljit_sw * ) jump -> addr		1130539	1					
ANR	1131050	CastTarget	sljit_sw *		1130539	0					
ANR	1131051	PtrMemberAccess	jump -> addr		1130539	1					
ANR	1131052	Identifier	jump		1130539	0					
ANR	1131053	Identifier	addr		1130539	1					
ANR	1131054	CastExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) ) )		1130539	1					
ANR	1131055	CastTarget	sljit_sw		1130539	0					
ANR	1131056	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) )		1130539	1		-			
ANR	1131057	PtrMemberAccess	jump -> u . label -> addr		1130539	0					
ANR	1131058	MemberAccess	jump -> u . label		1130539	0					
ANR	1131059	PtrMemberAccess	jump -> u		1130539	0					
ANR	1131060	Identifier	jump		1130539	0					
ANR	1131061	Identifier	u		1130539	1					
ANR	1131062	Identifier	label		1130539	1					
ANR	1131063	Identifier	addr		1130539	1					
ANR	1131064	AdditiveExpression	jump -> addr + sizeof ( sljit_sw )		1130539	1		+			
ANR	1131065	PtrMemberAccess	jump -> addr		1130539	0					
ANR	1131066	Identifier	jump		1130539	0					
ANR	1131067	Identifier	addr		1130539	1					
ANR	1131068	SizeofExpression	sizeof ( sljit_sw )		1130539	1					
ANR	1131069	Sizeof	sizeof		1130539	0					
ANR	1131070	SizeofOperand	sljit_sw		1130539	1					
ANR	1131071	ElseStatement	else		1130539	0					
ANR	1131072	CompoundStatement		92:8:2874:2874	1130539	0					
ANR	1131073	ExpressionStatement	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) ) )	542:4:15002:15087	1130539	0	True				
ANR	1131074	AssignmentExpression	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) ) )		1130539	0		=			
ANR	1131075	UnaryOperationExpression	* ( sljit_sw * ) jump -> addr		1130539	0					
ANR	1131076	UnaryOperator	*		1130539	0					
ANR	1131077	CastExpression	( sljit_sw * ) jump -> addr		1130539	1					
ANR	1131078	CastTarget	sljit_sw *		1130539	0					
ANR	1131079	PtrMemberAccess	jump -> addr		1130539	1					
ANR	1131080	Identifier	jump		1130539	0					
ANR	1131081	Identifier	addr		1130539	1					
ANR	1131082	CastExpression	( sljit_sw ) ( jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) ) )		1130539	1					
ANR	1131083	CastTarget	sljit_sw		1130539	0					
ANR	1131084	AdditiveExpression	jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) )		1130539	1		-			
ANR	1131085	MemberAccess	jump -> u . target		1130539	0					
ANR	1131086	PtrMemberAccess	jump -> u		1130539	0					
ANR	1131087	Identifier	jump		1130539	0					
ANR	1131088	Identifier	u		1130539	1					
ANR	1131089	Identifier	target		1130539	1					
ANR	1131090	AdditiveExpression	jump -> addr + sizeof ( sljit_sw )		1130539	1		+			
ANR	1131091	PtrMemberAccess	jump -> addr		1130539	0					
ANR	1131092	Identifier	jump		1130539	0					
ANR	1131093	Identifier	addr		1130539	1					
ANR	1131094	SizeofExpression	sizeof ( sljit_sw )		1130539	1					
ANR	1131095	Sizeof	sizeof		1130539	0					
ANR	1131096	SizeofOperand	sljit_sw		1130539	1					
ANR	1131097	ElseStatement	else		1130539	0					
ANR	1131098	IfStatement	if ( jump -> flags & PATCH_MD )		1130539	0					
ANR	1131099	Condition	jump -> flags & PATCH_MD	550:11:15446:15467	1130539	0	True				
ANR	1131100	BitAndExpression	jump -> flags & PATCH_MD		1130539	0		&			
ANR	1131101	PtrMemberAccess	jump -> flags		1130539	0					
ANR	1131102	Identifier	jump		1130539	0					
ANR	1131103	Identifier	flags		1130539	1					
ANR	1131104	Identifier	PATCH_MD		1130539	1					
ANR	1131105	ExpressionStatement	* ( sljit_sw * ) jump -> addr = jump -> u . label -> addr	551:3:15473:15517	1130539	1	True				
ANR	1131106	AssignmentExpression	* ( sljit_sw * ) jump -> addr = jump -> u . label -> addr		1130539	0		=			
ANR	1131107	UnaryOperationExpression	* ( sljit_sw * ) jump -> addr		1130539	0					
ANR	1131108	UnaryOperator	*		1130539	0					
ANR	1131109	CastExpression	( sljit_sw * ) jump -> addr		1130539	1					
ANR	1131110	CastTarget	sljit_sw *		1130539	0					
ANR	1131111	PtrMemberAccess	jump -> addr		1130539	1					
ANR	1131112	Identifier	jump		1130539	0					
ANR	1131113	Identifier	addr		1130539	1					
ANR	1131114	PtrMemberAccess	jump -> u . label -> addr		1130539	1					
ANR	1131115	MemberAccess	jump -> u . label		1130539	0					
ANR	1131116	PtrMemberAccess	jump -> u		1130539	0					
ANR	1131117	Identifier	jump		1130539	0					
ANR	1131118	Identifier	u		1130539	1					
ANR	1131119	Identifier	label		1130539	1					
ANR	1131120	Identifier	addr		1130539	1					
ANR	1131121	ExpressionStatement	jump = jump -> next	554:2:15529:15546	1130539	1	True				
ANR	1131122	AssignmentExpression	jump = jump -> next		1130539	0		=			
ANR	1131123	Identifier	jump		1130539	0					
ANR	1131124	PtrMemberAccess	jump -> next		1130539	1					
ANR	1131125	Identifier	jump		1130539	0					
ANR	1131126	Identifier	next		1130539	1					
ANR	1131127	ExpressionStatement	SLJIT_ASSERT ( code_ptr <= code + compiler -> size )	558:1:15610:15657	1130539	25	True				
ANR	1131128	CallExpression	SLJIT_ASSERT ( code_ptr <= code + compiler -> size )		1130539	0					
ANR	1131129	Callee	SLJIT_ASSERT		1130539	0					
ANR	1131130	Identifier	SLJIT_ASSERT		1130539	0					
ANR	1131131	ArgumentList	code_ptr <= code + compiler -> size		1130539	1					
ANR	1131132	Argument	code_ptr <= code + compiler -> size		1130539	0					
ANR	1131133	RelationalExpression	code_ptr <= code + compiler -> size		1130539	0		<=			
ANR	1131134	Identifier	code_ptr		1130539	0					
ANR	1131135	AdditiveExpression	code + compiler -> size		1130539	1		+			
ANR	1131136	Identifier	code		1130539	0					
ANR	1131137	PtrMemberAccess	compiler -> size		1130539	1					
ANR	1131138	Identifier	compiler		1130539	0					
ANR	1131139	Identifier	size		1130539	1					
ANR	1131140	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	559:1:15660:15696	1130539	26	True				
ANR	1131141	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1130539	0		=			
ANR	1131142	PtrMemberAccess	compiler -> error		1130539	0					
ANR	1131143	Identifier	compiler		1130539	0					
ANR	1131144	Identifier	error		1130539	1					
ANR	1131145	Identifier	SLJIT_ERR_COMPILED		1130539	1					
ANR	1131146	ExpressionStatement	compiler -> executable_size = code_ptr - code	560:1:15699:15742	1130539	27	True				
ANR	1131147	AssignmentExpression	compiler -> executable_size = code_ptr - code		1130539	0		=			
ANR	1131148	PtrMemberAccess	compiler -> executable_size		1130539	0					
ANR	1131149	Identifier	compiler		1130539	0					
ANR	1131150	Identifier	executable_size		1130539	1					
ANR	1131151	AdditiveExpression	code_ptr - code		1130539	1		-			
ANR	1131152	Identifier	code_ptr		1130539	0					
ANR	1131153	Identifier	code		1130539	1					
ANR	1131154	ReturnStatement	return ( void * ) code ;	561:1:15745:15763	1130539	28	True				
ANR	1131155	CastExpression	( void * ) code		1130539	0					
ANR	1131156	CastTarget	void *		1130539	0					
ANR	1131157	Identifier	code		1130539	1					
ANR	1131158	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1130539	1					
ANR	1131159	Identifier	sljit_generate_code		1130539	2					
ANR	1131160	ParameterList	struct sljit_compiler * compiler		1130539	3					
ANR	1131161	Parameter	struct sljit_compiler * compiler	448:51:12031:12061	1130539	0	True				
ANR	1131162	ParameterType	struct sljit_compiler *		1130539	0					
ANR	1131163	Identifier	compiler		1130539	1					
ANR	1131164	CFGEntryNode	ENTRY		1130539		True				
ANR	1131165	CFGExitNode	EXIT		1130539		True				
ANR	1131166	Symbol	label -> addr		1130539						
ANR	1131167	Symbol	compiler -> buf		1130539						
ANR	1131168	Symbol	generate_near_jump_code		1130539						
ANR	1131169	Symbol	SLJIT_MALLOC_EXEC		1130539						
ANR	1131170	Symbol	JUMP_LABEL		1130539						
ANR	1131171	Symbol	label -> next		1130539						
ANR	1131172	Symbol	* compiler		1130539						
ANR	1131173	Symbol	const_ -> next		1130539						
ANR	1131174	Symbol	const_ -> addr		1130539						
ANR	1131175	Symbol	len		1130539						
ANR	1131176	Symbol	buf -> next		1130539						
ANR	1131177	Symbol	buf_end		1130539						
ANR	1131178	Symbol	compiler -> executable_size		1130539						
ANR	1131179	Symbol	jump		1130539						
ANR	1131180	Symbol	buf -> used_size		1130539						
ANR	1131181	Symbol	check_sljit_generate_code		1130539						
ANR	1131182	Symbol	* buf		1130539						
ANR	1131183	Symbol	compiler -> labels		1130539						
ANR	1131184	Symbol	buf -> memory		1130539						
ANR	1131185	Symbol	* buf_ptr ++		1130539						
ANR	1131186	Symbol	jump -> addr		1130539						
ANR	1131187	Symbol	* jump -> addr		1130539						
ANR	1131188	Symbol	* ( sljit_sw * ) jump -> addr		1130539						
ANR	1131189	Symbol	JMP_i32		1130539						
ANR	1131190	Symbol	buf_ptr		1130539						
ANR	1131191	Symbol	* code_ptr		1130539						
ANR	1131192	Symbol	* jump -> u . label		1130539						
ANR	1131193	Symbol	jump -> u . target		1130539						
ANR	1131194	Symbol	compiler -> jumps		1130539						
ANR	1131195	Symbol	jump -> next		1130539						
ANR	1131196	Symbol	label -> size		1130539						
ANR	1131197	Symbol	code		1130539						
ANR	1131198	Symbol	* * jump		1130539						
ANR	1131199	Symbol	* jump		1130539						
ANR	1131200	Symbol	jump -> u		1130539						
ANR	1131201	Symbol	jump -> flags		1130539						
ANR	1131202	Symbol	CALL_i32		1130539						
ANR	1131203	Symbol	generate_far_jump_code		1130539						
ANR	1131204	Symbol	code_ptr		1130539						
ANR	1131205	Symbol	* code_ptr ++		1130539						
ANR	1131206	Symbol	SLJIT_REWRITABLE_JUMP		1130539						
ANR	1131207	Symbol	compiler		1130539						
ANR	1131208	Symbol	PATCH_MW		1130539						
ANR	1131209	Symbol	* buf_ptr		1130539						
ANR	1131210	Symbol	const_		1130539						
ANR	1131211	Symbol	compiler -> consts		1130539						
ANR	1131212	Symbol	* const_		1130539						
ANR	1131213	Symbol	label		1130539						
ANR	1131214	Symbol	* ( sljit_sw * ) buf_ptr		1130539						
ANR	1131215	Symbol	PATCH_MB		1130539						
ANR	1131216	Symbol	buf		1130539						
ANR	1131217	Symbol	PATCH_MD		1130539						
ANR	1131218	Symbol	compiler -> size		1130539						
ANR	1131219	Symbol	* jump -> u		1130539						
ANR	1131220	Symbol	jump -> u . label -> addr		1130539						
ANR	1131221	Symbol	* ( sljit_sw * ) code_ptr		1130539						
ANR	1131222	Symbol	* ( sljit_ub * ) jump -> addr		1130539						
ANR	1131223	Symbol	jump -> u . label		1130539						
ANR	1131224	Symbol	compiler -> error		1130539						
ANR	1131225	Symbol	SLJIT_ERR_COMPILED		1130539						
ANR	1131226	Symbol	* label		1130539						
ANR	1131227	DeclStmt									
ANR	1131228	Decl							sljit_si	"sljit_si ( struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w )"	emit_cum_binary
ANR	1131229	DeclStmt									
ANR	1131230	Decl							sljit_si	"sljit_si ( struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w )"	emit_non_cum_binary
ANR	1131231	DeclStmt									
ANR	1131232	Decl							sljit_si	"sljit_si ( struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw )"	emit_mov
ANR	1131233	Function	emit_save_flags	584:0:16585:17139							
ANR	1131234	FunctionDef	emit_save_flags (struct sljit_compiler * compiler)		1131233	0					
ANR	1131235	CompoundStatement		585:0:16663:17139	1131233	0					
ANR	1131236	IdentifierDeclStatement	sljit_ub * inst ;	586:1:16666:16680	1131233	0	True				
ANR	1131237	IdentifierDecl	* inst		1131233	0					
ANR	1131238	IdentifierDeclType	sljit_ub *		1131233	0					
ANR	1131239	Identifier	inst		1131233	1					
ANR	1131240	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"	589:1:16741:16786	1131233	1	True				
ANR	1131241	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1131233	0		=			
ANR	1131242	Identifier	inst		1131233	0					
ANR	1131243	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1131233	1					
ANR	1131244	CastTarget	sljit_ub *		1131233	0					
ANR	1131245	CallExpression	"ensure_buf ( compiler , 1 + 5 )"		1131233	1					
ANR	1131246	Callee	ensure_buf		1131233	0					
ANR	1131247	Identifier	ensure_buf		1131233	0					
ANR	1131248	ArgumentList	compiler		1131233	1					
ANR	1131249	Argument	compiler		1131233	0					
ANR	1131250	Identifier	compiler		1131233	0					
ANR	1131251	Argument	1 + 5		1131233	1					
ANR	1131252	AdditiveExpression	1 + 5		1131233	0		+			
ANR	1131253	PrimaryExpression	1		1131233	0					
ANR	1131254	PrimaryExpression	5		1131233	1					
ANR	1131255	ExpressionStatement	FAIL_IF ( ! inst )	590:1:16789:16803	1131233	2	True				
ANR	1131256	CallExpression	FAIL_IF ( ! inst )		1131233	0					
ANR	1131257	Callee	FAIL_IF		1131233	0					
ANR	1131258	Identifier	FAIL_IF		1131233	0					
ANR	1131259	ArgumentList	! inst		1131233	1					
ANR	1131260	Argument	! inst		1131233	0					
ANR	1131261	UnaryOperationExpression	! inst		1131233	0					
ANR	1131262	UnaryOperator	!		1131233	0					
ANR	1131263	Identifier	inst		1131233	1					
ANR	1131264	ExpressionStatement	INC_SIZE ( 5 )	591:1:16806:16817	1131233	3	True				
ANR	1131265	CallExpression	INC_SIZE ( 5 )		1131233	0					
ANR	1131266	Callee	INC_SIZE		1131233	0					
ANR	1131267	Identifier	INC_SIZE		1131233	0					
ANR	1131268	ArgumentList	5		1131233	1					
ANR	1131269	Argument	5		1131233	0					
ANR	1131270	PrimaryExpression	5		1131233	0					
ANR	1131271	ExpressionStatement	* inst ++ = LEA_r_m	598:1:16930:16947	1131233	4	True				
ANR	1131272	AssignmentExpression	* inst ++ = LEA_r_m		1131233	0		=			
ANR	1131273	UnaryOperationExpression	* inst ++		1131233	0					
ANR	1131274	UnaryOperator	*		1131233	0					
ANR	1131275	PostIncDecOperationExpression	inst ++		1131233	1					
ANR	1131276	Identifier	inst		1131233	0					
ANR	1131277	IncDec	++		1131233	1					
ANR	1131278	Identifier	LEA_r_m		1131233	1					
ANR	1131279	ExpressionStatement	* inst ++ = 0x64	599:1:16998:17012	1131233	5	True				
ANR	1131280	AssignmentExpression	* inst ++ = 0x64		1131233	0		=			
ANR	1131281	UnaryOperationExpression	* inst ++		1131233	0					
ANR	1131282	UnaryOperator	*		1131233	0					
ANR	1131283	PostIncDecOperationExpression	inst ++		1131233	1					
ANR	1131284	Identifier	inst		1131233	0					
ANR	1131285	IncDec	++		1131233	1					
ANR	1131286	PrimaryExpression	0x64		1131233	1					
ANR	1131287	ExpressionStatement	* inst ++ = 0x24	600:1:17015:17029	1131233	6	True				
ANR	1131288	AssignmentExpression	* inst ++ = 0x24		1131233	0		=			
ANR	1131289	UnaryOperationExpression	* inst ++		1131233	0					
ANR	1131290	UnaryOperator	*		1131233	0					
ANR	1131291	PostIncDecOperationExpression	inst ++		1131233	1					
ANR	1131292	Identifier	inst		1131233	0					
ANR	1131293	IncDec	++		1131233	1					
ANR	1131294	PrimaryExpression	0x24		1131233	1					
ANR	1131295	ExpressionStatement	* inst ++ = ( sljit_ub ) sizeof ( sljit_sw )	601:1:17032:17068	1131233	7	True				
ANR	1131296	AssignmentExpression	* inst ++ = ( sljit_ub ) sizeof ( sljit_sw )		1131233	0		=			
ANR	1131297	UnaryOperationExpression	* inst ++		1131233	0					
ANR	1131298	UnaryOperator	*		1131233	0					
ANR	1131299	PostIncDecOperationExpression	inst ++		1131233	1					
ANR	1131300	Identifier	inst		1131233	0					
ANR	1131301	IncDec	++		1131233	1					
ANR	1131302	CastExpression	( sljit_ub ) sizeof ( sljit_sw )		1131233	1					
ANR	1131303	CastTarget	sljit_ub		1131233	0					
ANR	1131304	SizeofExpression	sizeof ( sljit_sw )		1131233	1					
ANR	1131305	Sizeof	sizeof		1131233	0					
ANR	1131306	SizeofOperand	sljit_sw		1131233	1					
ANR	1131307	ExpressionStatement	* inst ++ = PUSHF	602:1:17071:17086	1131233	8	True				
ANR	1131308	AssignmentExpression	* inst ++ = PUSHF		1131233	0		=			
ANR	1131309	UnaryOperationExpression	* inst ++		1131233	0					
ANR	1131310	UnaryOperator	*		1131233	0					
ANR	1131311	PostIncDecOperationExpression	inst ++		1131233	1					
ANR	1131312	Identifier	inst		1131233	0					
ANR	1131313	IncDec	++		1131233	1					
ANR	1131314	Identifier	PUSHF		1131233	1					
ANR	1131315	ExpressionStatement	compiler -> flags_saved = 1	603:1:17089:17114	1131233	9	True				
ANR	1131316	AssignmentExpression	compiler -> flags_saved = 1		1131233	0		=			
ANR	1131317	PtrMemberAccess	compiler -> flags_saved		1131233	0					
ANR	1131318	Identifier	compiler		1131233	0					
ANR	1131319	Identifier	flags_saved		1131233	1					
ANR	1131320	PrimaryExpression	1		1131233	1					
ANR	1131321	ReturnStatement	return SLJIT_SUCCESS ;	604:1:17117:17137	1131233	10	True				
ANR	1131322	Identifier	SLJIT_SUCCESS		1131233	0					
ANR	1131323	ReturnType	static SLJIT_INLINE sljit_si		1131233	1					
ANR	1131324	Identifier	emit_save_flags		1131233	2					
ANR	1131325	ParameterList	struct sljit_compiler * compiler		1131233	3					
ANR	1131326	Parameter	struct sljit_compiler * compiler	584:45:16630:16660	1131233	0	True				
ANR	1131327	ParameterType	struct sljit_compiler *		1131233	0					
ANR	1131328	Identifier	compiler		1131233	1					
ANR	1131329	CFGEntryNode	ENTRY		1131233		True				
ANR	1131330	CFGExitNode	EXIT		1131233		True				
ANR	1131331	Symbol	LEA_r_m		1131233						
ANR	1131332	Symbol	PUSHF		1131233						
ANR	1131333	Symbol	inst		1131233						
ANR	1131334	Symbol	ensure_buf		1131233						
ANR	1131335	Symbol	compiler -> flags_saved		1131233						
ANR	1131336	Symbol	* inst ++		1131233						
ANR	1131337	Symbol	SLJIT_SUCCESS		1131233						
ANR	1131338	Symbol	* compiler		1131233						
ANR	1131339	Symbol	compiler		1131233						
ANR	1131340	Function	emit_restore_flags	607:0:17142:17756							
ANR	1131341	FunctionDef	"emit_restore_flags (struct sljit_compiler * compiler , sljit_si keep_flags)"		1131340	0					
ANR	1131342	CompoundStatement		608:0:17244:17756	1131340	0					
ANR	1131343	IdentifierDeclStatement	sljit_ub * inst ;	609:1:17247:17261	1131340	0	True				
ANR	1131344	IdentifierDecl	* inst		1131340	0					
ANR	1131345	IdentifierDeclType	sljit_ub *		1131340	0					
ANR	1131346	Identifier	inst		1131340	1					
ANR	1131347	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"	612:1:17322:17367	1131340	1	True				
ANR	1131348	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1131340	0		=			
ANR	1131349	Identifier	inst		1131340	0					
ANR	1131350	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1131340	1					
ANR	1131351	CastTarget	sljit_ub *		1131340	0					
ANR	1131352	CallExpression	"ensure_buf ( compiler , 1 + 5 )"		1131340	1					
ANR	1131353	Callee	ensure_buf		1131340	0					
ANR	1131354	Identifier	ensure_buf		1131340	0					
ANR	1131355	ArgumentList	compiler		1131340	1					
ANR	1131356	Argument	compiler		1131340	0					
ANR	1131357	Identifier	compiler		1131340	0					
ANR	1131358	Argument	1 + 5		1131340	1					
ANR	1131359	AdditiveExpression	1 + 5		1131340	0		+			
ANR	1131360	PrimaryExpression	1		1131340	0					
ANR	1131361	PrimaryExpression	5		1131340	1					
ANR	1131362	ExpressionStatement	FAIL_IF ( ! inst )	613:1:17370:17384	1131340	2	True				
ANR	1131363	CallExpression	FAIL_IF ( ! inst )		1131340	0					
ANR	1131364	Callee	FAIL_IF		1131340	0					
ANR	1131365	Identifier	FAIL_IF		1131340	0					
ANR	1131366	ArgumentList	! inst		1131340	1					
ANR	1131367	Argument	! inst		1131340	0					
ANR	1131368	UnaryOperationExpression	! inst		1131340	0					
ANR	1131369	UnaryOperator	!		1131340	0					
ANR	1131370	Identifier	inst		1131340	1					
ANR	1131371	ExpressionStatement	INC_SIZE ( 5 )	614:1:17387:17398	1131340	3	True				
ANR	1131372	CallExpression	INC_SIZE ( 5 )		1131340	0					
ANR	1131373	Callee	INC_SIZE		1131340	0					
ANR	1131374	Identifier	INC_SIZE		1131340	0					
ANR	1131375	ArgumentList	5		1131340	1					
ANR	1131376	Argument	5		1131340	0					
ANR	1131377	PrimaryExpression	5		1131340	0					
ANR	1131378	ExpressionStatement	* inst ++ = POPF	615:1:17401:17415	1131340	4	True				
ANR	1131379	AssignmentExpression	* inst ++ = POPF		1131340	0		=			
ANR	1131380	UnaryOperationExpression	* inst ++		1131340	0					
ANR	1131381	UnaryOperator	*		1131340	0					
ANR	1131382	PostIncDecOperationExpression	inst ++		1131340	1					
ANR	1131383	Identifier	inst		1131340	0					
ANR	1131384	IncDec	++		1131340	1					
ANR	1131385	Identifier	POPF		1131340	1					
ANR	1131386	ExpressionStatement	* inst ++ = LEA_r_m	623:1:17545:17562	1131340	5	True				
ANR	1131387	AssignmentExpression	* inst ++ = LEA_r_m		1131340	0		=			
ANR	1131388	UnaryOperationExpression	* inst ++		1131340	0					
ANR	1131389	UnaryOperator	*		1131340	0					
ANR	1131390	PostIncDecOperationExpression	inst ++		1131340	1					
ANR	1131391	Identifier	inst		1131340	0					
ANR	1131392	IncDec	++		1131340	1					
ANR	1131393	Identifier	LEA_r_m		1131340	1					
ANR	1131394	ExpressionStatement	* inst ++ = 0x64	624:1:17613:17627	1131340	6	True				
ANR	1131395	AssignmentExpression	* inst ++ = 0x64		1131340	0		=			
ANR	1131396	UnaryOperationExpression	* inst ++		1131340	0					
ANR	1131397	UnaryOperator	*		1131340	0					
ANR	1131398	PostIncDecOperationExpression	inst ++		1131340	1					
ANR	1131399	Identifier	inst		1131340	0					
ANR	1131400	IncDec	++		1131340	1					
ANR	1131401	PrimaryExpression	0x64		1131340	1					
ANR	1131402	ExpressionStatement	* inst ++ = 0x24	625:1:17630:17644	1131340	7	True				
ANR	1131403	AssignmentExpression	* inst ++ = 0x24		1131340	0		=			
ANR	1131404	UnaryOperationExpression	* inst ++		1131340	0					
ANR	1131405	UnaryOperator	*		1131340	0					
ANR	1131406	PostIncDecOperationExpression	inst ++		1131340	1					
ANR	1131407	Identifier	inst		1131340	0					
ANR	1131408	IncDec	++		1131340	1					
ANR	1131409	PrimaryExpression	0x24		1131340	1					
ANR	1131410	ExpressionStatement	* inst ++ = ( sljit_ub ) - ( sljit_sb ) sizeof ( sljit_sw )	626:1:17647:17694	1131340	8	True				
ANR	1131411	AssignmentExpression	* inst ++ = ( sljit_ub ) - ( sljit_sb ) sizeof ( sljit_sw )		1131340	0		=			
ANR	1131412	UnaryOperationExpression	* inst ++		1131340	0					
ANR	1131413	UnaryOperator	*		1131340	0					
ANR	1131414	PostIncDecOperationExpression	inst ++		1131340	1					
ANR	1131415	Identifier	inst		1131340	0					
ANR	1131416	IncDec	++		1131340	1					
ANR	1131417	CastExpression	( sljit_ub ) - ( sljit_sb ) sizeof ( sljit_sw )		1131340	1					
ANR	1131418	CastTarget	sljit_ub		1131340	0					
ANR	1131419	UnaryOperationExpression	- ( sljit_sb ) sizeof ( sljit_sw )		1131340	1					
ANR	1131420	UnaryOperator	-		1131340	0					
ANR	1131421	CastExpression	( sljit_sb ) sizeof ( sljit_sw )		1131340	1					
ANR	1131422	CastTarget	sljit_sb		1131340	0					
ANR	1131423	SizeofExpression	sizeof ( sljit_sw )		1131340	1					
ANR	1131424	Sizeof	sizeof		1131340	0					
ANR	1131425	SizeofOperand	sljit_sw		1131340	1					
ANR	1131426	ExpressionStatement	compiler -> flags_saved = keep_flags	627:1:17697:17731	1131340	9	True				
ANR	1131427	AssignmentExpression	compiler -> flags_saved = keep_flags		1131340	0		=			
ANR	1131428	PtrMemberAccess	compiler -> flags_saved		1131340	0					
ANR	1131429	Identifier	compiler		1131340	0					
ANR	1131430	Identifier	flags_saved		1131340	1					
ANR	1131431	Identifier	keep_flags		1131340	1					
ANR	1131432	ReturnStatement	return SLJIT_SUCCESS ;	628:1:17734:17754	1131340	10	True				
ANR	1131433	Identifier	SLJIT_SUCCESS		1131340	0					
ANR	1131434	ReturnType	static SLJIT_INLINE sljit_si		1131340	1					
ANR	1131435	Identifier	emit_restore_flags		1131340	2					
ANR	1131436	ParameterList	"struct sljit_compiler * compiler , sljit_si keep_flags"		1131340	3					
ANR	1131437	Parameter	struct sljit_compiler * compiler	607:48:17190:17220	1131340	0	True				
ANR	1131438	ParameterType	struct sljit_compiler *		1131340	0					
ANR	1131439	Identifier	compiler		1131340	1					
ANR	1131440	Parameter	sljit_si keep_flags	607:81:17223:17241	1131340	1	True				
ANR	1131441	ParameterType	sljit_si		1131340	0					
ANR	1131442	Identifier	keep_flags		1131340	1					
ANR	1131443	CFGEntryNode	ENTRY		1131340		True				
ANR	1131444	CFGExitNode	EXIT		1131340		True				
ANR	1131445	Symbol	POPF		1131340						
ANR	1131446	Symbol	LEA_r_m		1131340						
ANR	1131447	Symbol	keep_flags		1131340						
ANR	1131448	Symbol	inst		1131340						
ANR	1131449	Symbol	ensure_buf		1131340						
ANR	1131450	Symbol	compiler -> flags_saved		1131340						
ANR	1131451	Symbol	* inst ++		1131340						
ANR	1131452	Symbol	SLJIT_SUCCESS		1131340						
ANR	1131453	Symbol	* compiler		1131340						
ANR	1131454	Symbol	compiler		1131340						
ANR	1131455	Function	sljit_grow_stack	634:0:17794:18375							
ANR	1131456	FunctionDef	sljit_grow_stack (sljit_sw local_size)		1131455	0					
ANR	1131457	CompoundStatement		635:0:17855:18375	1131455	0					
ANR	1131458	ExpressionStatement	* ( volatile sljit_si * ) alloca ( local_size ) = 0	643:1:18330:18373	1131455	0	True				
ANR	1131459	AssignmentExpression	* ( volatile sljit_si * ) alloca ( local_size ) = 0		1131455	0		=			
ANR	1131460	UnaryOperationExpression	* ( volatile sljit_si * ) alloca ( local_size )		1131455	0					
ANR	1131461	UnaryOperator	*		1131455	0					
ANR	1131462	CastExpression	( volatile sljit_si * ) alloca ( local_size )		1131455	1					
ANR	1131463	CastTarget	volatile sljit_si *		1131455	0					
ANR	1131464	CallExpression	alloca ( local_size )		1131455	1					
ANR	1131465	Callee	alloca		1131455	0					
ANR	1131466	Identifier	alloca		1131455	0					
ANR	1131467	ArgumentList	local_size		1131455	1					
ANR	1131468	Argument	local_size		1131455	0					
ANR	1131469	Identifier	local_size		1131455	0					
ANR	1131470	PrimaryExpression	0		1131455	1					
ANR	1131471	ReturnType	static void SLJIT_CALL		1131455	1					
ANR	1131472	Identifier	sljit_grow_stack		1131455	2					
ANR	1131473	ParameterList	sljit_sw local_size		1131455	3					
ANR	1131474	Parameter	sljit_sw local_size	634:40:17834:17852	1131455	0	True				
ANR	1131475	ParameterType	sljit_sw		1131455	0					
ANR	1131476	Identifier	local_size		1131455	1					
ANR	1131477	CFGEntryNode	ENTRY		1131455		True				
ANR	1131478	CFGExitNode	EXIT		1131455		True				
ANR	1131479	Symbol	local_size		1131455						
ANR	1131480	Symbol	* alloca		1131455						
ANR	1131481	Symbol	alloca		1131455						
ANR	1131482	Symbol	* ( volatile sljit_si * ) alloca ( local_size )		1131455						
ANR	1131483	Function	emit_mov	654:0:18519:20350							
ANR	1131484	FunctionDef	"emit_mov (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1131483	0					
ANR	1131485	CompoundStatement		657:0:18637:20350	1131483	0					
ANR	1131486	IdentifierDeclStatement	sljit_ub * inst ;	658:1:18640:18654	1131483	0	True				
ANR	1131487	IdentifierDecl	* inst		1131483	0					
ANR	1131488	IdentifierDeclType	sljit_ub *		1131483	0					
ANR	1131489	Identifier	inst		1131483	1					
ANR	1131490	IfStatement	if ( dst == SLJIT_UNUSED )		1131483	1					
ANR	1131491	Condition	dst == SLJIT_UNUSED	660:5:18662:18680	1131483	0	True				
ANR	1131492	EqualityExpression	dst == SLJIT_UNUSED		1131483	0		==			
ANR	1131493	Identifier	dst		1131483	0					
ANR	1131494	Identifier	SLJIT_UNUSED		1131483	1					
ANR	1131495	CompoundStatement		4:26:45:45	1131483	1					
ANR	1131496	IfStatement	if ( src & SLJIT_MEM )		1131483	0					
ANR	1131497	Condition	src & SLJIT_MEM	662:6:18744:18758	1131483	0	True				
ANR	1131498	BitAndExpression	src & SLJIT_MEM		1131483	0		&			
ANR	1131499	Identifier	src		1131483	0					
ANR	1131500	Identifier	SLJIT_MEM		1131483	1					
ANR	1131501	CompoundStatement		6:23:123:123	1131483	1					
ANR	1131502	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"	663:3:18766:18830	1131483	0	True				
ANR	1131503	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1131483	0		=			
ANR	1131504	Identifier	inst		1131483	0					
ANR	1131505	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1131483	1					
ANR	1131506	Callee	emit_x86_instruction		1131483	0					
ANR	1131507	Identifier	emit_x86_instruction		1131483	0					
ANR	1131508	ArgumentList	compiler		1131483	1					
ANR	1131509	Argument	compiler		1131483	0					
ANR	1131510	Identifier	compiler		1131483	0					
ANR	1131511	Argument	1		1131483	1					
ANR	1131512	PrimaryExpression	1		1131483	0					
ANR	1131513	Argument	TMP_REG1		1131483	2					
ANR	1131514	Identifier	TMP_REG1		1131483	0					
ANR	1131515	Argument	0		1131483	3					
ANR	1131516	PrimaryExpression	0		1131483	0					
ANR	1131517	Argument	src		1131483	4					
ANR	1131518	Identifier	src		1131483	0					
ANR	1131519	Argument	srcw		1131483	5					
ANR	1131520	Identifier	srcw		1131483	0					
ANR	1131521	ExpressionStatement	FAIL_IF ( ! inst )	664:3:18835:18849	1131483	1	True				
ANR	1131522	CallExpression	FAIL_IF ( ! inst )		1131483	0					
ANR	1131523	Callee	FAIL_IF		1131483	0					
ANR	1131524	Identifier	FAIL_IF		1131483	0					
ANR	1131525	ArgumentList	! inst		1131483	1					
ANR	1131526	Argument	! inst		1131483	0					
ANR	1131527	UnaryOperationExpression	! inst		1131483	0					
ANR	1131528	UnaryOperator	!		1131483	0					
ANR	1131529	Identifier	inst		1131483	1					
ANR	1131530	ExpressionStatement	* inst = MOV_r_rm	665:3:18854:18870	1131483	2	True				
ANR	1131531	AssignmentExpression	* inst = MOV_r_rm		1131483	0		=			
ANR	1131532	UnaryOperationExpression	* inst		1131483	0					
ANR	1131533	UnaryOperator	*		1131483	0					
ANR	1131534	Identifier	inst		1131483	1					
ANR	1131535	Identifier	MOV_r_rm		1131483	1					
ANR	1131536	ReturnStatement	return SLJIT_SUCCESS ;	667:2:18878:18898	1131483	1	True				
ANR	1131537	Identifier	SLJIT_SUCCESS		1131483	0					
ANR	1131538	IfStatement	if ( FAST_IS_REG ( src ) )		1131483	2					
ANR	1131539	Condition	FAST_IS_REG ( src )	669:5:18908:18923	1131483	0	True				
ANR	1131540	CallExpression	FAST_IS_REG ( src )		1131483	0					
ANR	1131541	Callee	FAST_IS_REG		1131483	0					
ANR	1131542	Identifier	FAST_IS_REG		1131483	0					
ANR	1131543	ArgumentList	src		1131483	1					
ANR	1131544	Argument	src		1131483	0					
ANR	1131545	Identifier	src		1131483	0					
ANR	1131546	CompoundStatement		13:23:288:288	1131483	1					
ANR	1131547	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src , 0 , dst , dstw )"	670:2:18930:18989	1131483	0	True				
ANR	1131548	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src , 0 , dst , dstw )"		1131483	0		=			
ANR	1131549	Identifier	inst		1131483	0					
ANR	1131550	CallExpression	"emit_x86_instruction ( compiler , 1 , src , 0 , dst , dstw )"		1131483	1					
ANR	1131551	Callee	emit_x86_instruction		1131483	0					
ANR	1131552	Identifier	emit_x86_instruction		1131483	0					
ANR	1131553	ArgumentList	compiler		1131483	1					
ANR	1131554	Argument	compiler		1131483	0					
ANR	1131555	Identifier	compiler		1131483	0					
ANR	1131556	Argument	1		1131483	1					
ANR	1131557	PrimaryExpression	1		1131483	0					
ANR	1131558	Argument	src		1131483	2					
ANR	1131559	Identifier	src		1131483	0					
ANR	1131560	Argument	0		1131483	3					
ANR	1131561	PrimaryExpression	0		1131483	0					
ANR	1131562	Argument	dst		1131483	4					
ANR	1131563	Identifier	dst		1131483	0					
ANR	1131564	Argument	dstw		1131483	5					
ANR	1131565	Identifier	dstw		1131483	0					
ANR	1131566	ExpressionStatement	FAIL_IF ( ! inst )	671:2:18993:19007	1131483	1	True				
ANR	1131567	CallExpression	FAIL_IF ( ! inst )		1131483	0					
ANR	1131568	Callee	FAIL_IF		1131483	0					
ANR	1131569	Identifier	FAIL_IF		1131483	0					
ANR	1131570	ArgumentList	! inst		1131483	1					
ANR	1131571	Argument	! inst		1131483	0					
ANR	1131572	UnaryOperationExpression	! inst		1131483	0					
ANR	1131573	UnaryOperator	!		1131483	0					
ANR	1131574	Identifier	inst		1131483	1					
ANR	1131575	ExpressionStatement	* inst = MOV_rm_r	672:2:19011:19027	1131483	2	True				
ANR	1131576	AssignmentExpression	* inst = MOV_rm_r		1131483	0		=			
ANR	1131577	UnaryOperationExpression	* inst		1131483	0					
ANR	1131578	UnaryOperator	*		1131483	0					
ANR	1131579	Identifier	inst		1131483	1					
ANR	1131580	Identifier	MOV_rm_r		1131483	1					
ANR	1131581	ReturnStatement	return SLJIT_SUCCESS ;	673:2:19031:19051	1131483	3	True				
ANR	1131582	Identifier	SLJIT_SUCCESS		1131483	0					
ANR	1131583	IfStatement	if ( src & SLJIT_IMM )		1131483	3					
ANR	1131584	Condition	src & SLJIT_IMM	675:5:19061:19075	1131483	0	True				
ANR	1131585	BitAndExpression	src & SLJIT_IMM		1131483	0		&			
ANR	1131586	Identifier	src		1131483	0					
ANR	1131587	Identifier	SLJIT_IMM		1131483	1					
ANR	1131588	CompoundStatement		19:22:440:440	1131483	1					
ANR	1131589	IfStatement	if ( FAST_IS_REG ( dst ) )		1131483	0					
ANR	1131590	Condition	FAST_IS_REG ( dst )	676:6:19086:19101	1131483	0	True				
ANR	1131591	CallExpression	FAST_IS_REG ( dst )		1131483	0					
ANR	1131592	Callee	FAST_IS_REG		1131483	0					
ANR	1131593	Identifier	FAST_IS_REG		1131483	0					
ANR	1131594	ArgumentList	dst		1131483	1					
ANR	1131595	Argument	dst		1131483	0					
ANR	1131596	Identifier	dst		1131483	0					
ANR	1131597	CompoundStatement		20:24:466:466	1131483	1					
ANR	1131598	ReturnStatement	"return emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw ) ;"	678:3:19166:19226	1131483	0	True				
ANR	1131599	CallExpression	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw )"		1131483	0					
ANR	1131600	Callee	emit_do_imm		1131483	0					
ANR	1131601	Identifier	emit_do_imm		1131483	0					
ANR	1131602	ArgumentList	compiler		1131483	1					
ANR	1131603	Argument	compiler		1131483	0					
ANR	1131604	Identifier	compiler		1131483	0					
ANR	1131605	Argument	MOV_r_i32 + reg_map [ dst ]		1131483	1					
ANR	1131606	AdditiveExpression	MOV_r_i32 + reg_map [ dst ]		1131483	0		+			
ANR	1131607	Identifier	MOV_r_i32		1131483	0					
ANR	1131608	ArrayIndexing	reg_map [ dst ]		1131483	1					
ANR	1131609	Identifier	reg_map		1131483	0					
ANR	1131610	Identifier	dst		1131483	1					
ANR	1131611	Argument	srcw		1131483	2					
ANR	1131612	Identifier	srcw		1131483	0					
ANR	1131613	IfStatement	if ( ! compiler -> mode32 && NOT_HALFWORD ( srcw ) )		1131483	1					
ANR	1131614	Condition	! compiler -> mode32 && NOT_HALFWORD ( srcw )	689:6:19529:19567	1131483	0	True				
ANR	1131615	AndExpression	! compiler -> mode32 && NOT_HALFWORD ( srcw )		1131483	0		&&			
ANR	1131616	UnaryOperationExpression	! compiler -> mode32		1131483	0					
ANR	1131617	UnaryOperator	!		1131483	0					
ANR	1131618	PtrMemberAccess	compiler -> mode32		1131483	1					
ANR	1131619	Identifier	compiler		1131483	0					
ANR	1131620	Identifier	mode32		1131483	1					
ANR	1131621	CallExpression	NOT_HALFWORD ( srcw )		1131483	1					
ANR	1131622	Callee	NOT_HALFWORD		1131483	0					
ANR	1131623	Identifier	NOT_HALFWORD		1131483	0					
ANR	1131624	ArgumentList	srcw		1131483	1					
ANR	1131625	Argument	srcw		1131483	0					
ANR	1131626	Identifier	srcw		1131483	0					
ANR	1131627	CompoundStatement		33:47:932:932	1131483	1					
ANR	1131628	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , srcw ) )"	690:3:19575:19625	1131483	0	True				
ANR	1131629	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , srcw ) )"		1131483	0					
ANR	1131630	Callee	FAIL_IF		1131483	0					
ANR	1131631	Identifier	FAIL_IF		1131483	0					
ANR	1131632	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , srcw )"		1131483	1					
ANR	1131633	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , srcw )"		1131483	0					
ANR	1131634	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , srcw )"		1131483	0					
ANR	1131635	Callee	emit_load_imm64		1131483	0					
ANR	1131636	Identifier	emit_load_imm64		1131483	0					
ANR	1131637	ArgumentList	compiler		1131483	1					
ANR	1131638	Argument	compiler		1131483	0					
ANR	1131639	Identifier	compiler		1131483	0					
ANR	1131640	Argument	TMP_REG2		1131483	1					
ANR	1131641	Identifier	TMP_REG2		1131483	0					
ANR	1131642	Argument	srcw		1131483	2					
ANR	1131643	Identifier	srcw		1131483	0					
ANR	1131644	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , dst , dstw )"	691:3:19630:19694	1131483	1	True				
ANR	1131645	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , dst , dstw )"		1131483	0		=			
ANR	1131646	Identifier	inst		1131483	0					
ANR	1131647	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , dst , dstw )"		1131483	1					
ANR	1131648	Callee	emit_x86_instruction		1131483	0					
ANR	1131649	Identifier	emit_x86_instruction		1131483	0					
ANR	1131650	ArgumentList	compiler		1131483	1					
ANR	1131651	Argument	compiler		1131483	0					
ANR	1131652	Identifier	compiler		1131483	0					
ANR	1131653	Argument	1		1131483	1					
ANR	1131654	PrimaryExpression	1		1131483	0					
ANR	1131655	Argument	TMP_REG2		1131483	2					
ANR	1131656	Identifier	TMP_REG2		1131483	0					
ANR	1131657	Argument	0		1131483	3					
ANR	1131658	PrimaryExpression	0		1131483	0					
ANR	1131659	Argument	dst		1131483	4					
ANR	1131660	Identifier	dst		1131483	0					
ANR	1131661	Argument	dstw		1131483	5					
ANR	1131662	Identifier	dstw		1131483	0					
ANR	1131663	ExpressionStatement	FAIL_IF ( ! inst )	692:3:19699:19713	1131483	2	True				
ANR	1131664	CallExpression	FAIL_IF ( ! inst )		1131483	0					
ANR	1131665	Callee	FAIL_IF		1131483	0					
ANR	1131666	Identifier	FAIL_IF		1131483	0					
ANR	1131667	ArgumentList	! inst		1131483	1					
ANR	1131668	Argument	! inst		1131483	0					
ANR	1131669	UnaryOperationExpression	! inst		1131483	0					
ANR	1131670	UnaryOperator	!		1131483	0					
ANR	1131671	Identifier	inst		1131483	1					
ANR	1131672	ExpressionStatement	* inst = MOV_rm_r	693:3:19718:19734	1131483	3	True				
ANR	1131673	AssignmentExpression	* inst = MOV_rm_r		1131483	0		=			
ANR	1131674	UnaryOperationExpression	* inst		1131483	0					
ANR	1131675	UnaryOperator	*		1131483	0					
ANR	1131676	Identifier	inst		1131483	1					
ANR	1131677	Identifier	MOV_rm_r		1131483	1					
ANR	1131678	ReturnStatement	return SLJIT_SUCCESS ;	694:3:19739:19759	1131483	4	True				
ANR	1131679	Identifier	SLJIT_SUCCESS		1131483	0					
ANR	1131680	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , srcw , dst , dstw )"	697:2:19774:19842	1131483	2	True				
ANR	1131681	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , srcw , dst , dstw )"		1131483	0		=			
ANR	1131682	Identifier	inst		1131483	0					
ANR	1131683	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , srcw , dst , dstw )"		1131483	1					
ANR	1131684	Callee	emit_x86_instruction		1131483	0					
ANR	1131685	Identifier	emit_x86_instruction		1131483	0					
ANR	1131686	ArgumentList	compiler		1131483	1					
ANR	1131687	Argument	compiler		1131483	0					
ANR	1131688	Identifier	compiler		1131483	0					
ANR	1131689	Argument	1		1131483	1					
ANR	1131690	PrimaryExpression	1		1131483	0					
ANR	1131691	Argument	SLJIT_IMM		1131483	2					
ANR	1131692	Identifier	SLJIT_IMM		1131483	0					
ANR	1131693	Argument	srcw		1131483	3					
ANR	1131694	Identifier	srcw		1131483	0					
ANR	1131695	Argument	dst		1131483	4					
ANR	1131696	Identifier	dst		1131483	0					
ANR	1131697	Argument	dstw		1131483	5					
ANR	1131698	Identifier	dstw		1131483	0					
ANR	1131699	ExpressionStatement	FAIL_IF ( ! inst )	698:2:19846:19860	1131483	3	True				
ANR	1131700	CallExpression	FAIL_IF ( ! inst )		1131483	0					
ANR	1131701	Callee	FAIL_IF		1131483	0					
ANR	1131702	Identifier	FAIL_IF		1131483	0					
ANR	1131703	ArgumentList	! inst		1131483	1					
ANR	1131704	Argument	! inst		1131483	0					
ANR	1131705	UnaryOperationExpression	! inst		1131483	0					
ANR	1131706	UnaryOperator	!		1131483	0					
ANR	1131707	Identifier	inst		1131483	1					
ANR	1131708	ExpressionStatement	* inst = MOV_rm_i32	699:2:19864:19882	1131483	4	True				
ANR	1131709	AssignmentExpression	* inst = MOV_rm_i32		1131483	0		=			
ANR	1131710	UnaryOperationExpression	* inst		1131483	0					
ANR	1131711	UnaryOperator	*		1131483	0					
ANR	1131712	Identifier	inst		1131483	1					
ANR	1131713	Identifier	MOV_rm_i32		1131483	1					
ANR	1131714	ReturnStatement	return SLJIT_SUCCESS ;	700:2:19886:19906	1131483	5	True				
ANR	1131715	Identifier	SLJIT_SUCCESS		1131483	0					
ANR	1131716	IfStatement	if ( FAST_IS_REG ( dst ) )		1131483	4					
ANR	1131717	Condition	FAST_IS_REG ( dst )	702:5:19916:19931	1131483	0	True				
ANR	1131718	CallExpression	FAST_IS_REG ( dst )		1131483	0					
ANR	1131719	Callee	FAST_IS_REG		1131483	0					
ANR	1131720	Identifier	FAST_IS_REG		1131483	0					
ANR	1131721	ArgumentList	dst		1131483	1					
ANR	1131722	Argument	dst		1131483	0					
ANR	1131723	Identifier	dst		1131483	0					
ANR	1131724	CompoundStatement		46:23:1296:1296	1131483	1					
ANR	1131725	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src , srcw )"	703:2:19938:19997	1131483	0	True				
ANR	1131726	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src , srcw )"		1131483	0		=			
ANR	1131727	Identifier	inst		1131483	0					
ANR	1131728	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , src , srcw )"		1131483	1					
ANR	1131729	Callee	emit_x86_instruction		1131483	0					
ANR	1131730	Identifier	emit_x86_instruction		1131483	0					
ANR	1131731	ArgumentList	compiler		1131483	1					
ANR	1131732	Argument	compiler		1131483	0					
ANR	1131733	Identifier	compiler		1131483	0					
ANR	1131734	Argument	1		1131483	1					
ANR	1131735	PrimaryExpression	1		1131483	0					
ANR	1131736	Argument	dst		1131483	2					
ANR	1131737	Identifier	dst		1131483	0					
ANR	1131738	Argument	0		1131483	3					
ANR	1131739	PrimaryExpression	0		1131483	0					
ANR	1131740	Argument	src		1131483	4					
ANR	1131741	Identifier	src		1131483	0					
ANR	1131742	Argument	srcw		1131483	5					
ANR	1131743	Identifier	srcw		1131483	0					
ANR	1131744	ExpressionStatement	FAIL_IF ( ! inst )	704:2:20001:20015	1131483	1	True				
ANR	1131745	CallExpression	FAIL_IF ( ! inst )		1131483	0					
ANR	1131746	Callee	FAIL_IF		1131483	0					
ANR	1131747	Identifier	FAIL_IF		1131483	0					
ANR	1131748	ArgumentList	! inst		1131483	1					
ANR	1131749	Argument	! inst		1131483	0					
ANR	1131750	UnaryOperationExpression	! inst		1131483	0					
ANR	1131751	UnaryOperator	!		1131483	0					
ANR	1131752	Identifier	inst		1131483	1					
ANR	1131753	ExpressionStatement	* inst = MOV_r_rm	705:2:20019:20035	1131483	2	True				
ANR	1131754	AssignmentExpression	* inst = MOV_r_rm		1131483	0		=			
ANR	1131755	UnaryOperationExpression	* inst		1131483	0					
ANR	1131756	UnaryOperator	*		1131483	0					
ANR	1131757	Identifier	inst		1131483	1					
ANR	1131758	Identifier	MOV_r_rm		1131483	1					
ANR	1131759	ReturnStatement	return SLJIT_SUCCESS ;	706:2:20039:20059	1131483	3	True				
ANR	1131760	Identifier	SLJIT_SUCCESS		1131483	0					
ANR	1131761	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"	710:1:20122:20186	1131483	5	True				
ANR	1131762	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1131483	0		=			
ANR	1131763	Identifier	inst		1131483	0					
ANR	1131764	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1131483	1					
ANR	1131765	Callee	emit_x86_instruction		1131483	0					
ANR	1131766	Identifier	emit_x86_instruction		1131483	0					
ANR	1131767	ArgumentList	compiler		1131483	1					
ANR	1131768	Argument	compiler		1131483	0					
ANR	1131769	Identifier	compiler		1131483	0					
ANR	1131770	Argument	1		1131483	1					
ANR	1131771	PrimaryExpression	1		1131483	0					
ANR	1131772	Argument	TMP_REG1		1131483	2					
ANR	1131773	Identifier	TMP_REG1		1131483	0					
ANR	1131774	Argument	0		1131483	3					
ANR	1131775	PrimaryExpression	0		1131483	0					
ANR	1131776	Argument	src		1131483	4					
ANR	1131777	Identifier	src		1131483	0					
ANR	1131778	Argument	srcw		1131483	5					
ANR	1131779	Identifier	srcw		1131483	0					
ANR	1131780	ExpressionStatement	FAIL_IF ( ! inst )	711:1:20189:20203	1131483	6	True				
ANR	1131781	CallExpression	FAIL_IF ( ! inst )		1131483	0					
ANR	1131782	Callee	FAIL_IF		1131483	0					
ANR	1131783	Identifier	FAIL_IF		1131483	0					
ANR	1131784	ArgumentList	! inst		1131483	1					
ANR	1131785	Argument	! inst		1131483	0					
ANR	1131786	UnaryOperationExpression	! inst		1131483	0					
ANR	1131787	UnaryOperator	!		1131483	0					
ANR	1131788	Identifier	inst		1131483	1					
ANR	1131789	ExpressionStatement	* inst = MOV_r_rm	712:1:20206:20222	1131483	7	True				
ANR	1131790	AssignmentExpression	* inst = MOV_r_rm		1131483	0		=			
ANR	1131791	UnaryOperationExpression	* inst		1131483	0					
ANR	1131792	UnaryOperator	*		1131483	0					
ANR	1131793	Identifier	inst		1131483	1					
ANR	1131794	Identifier	MOV_r_rm		1131483	1					
ANR	1131795	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	713:1:20225:20289	1131483	8	True				
ANR	1131796	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1131483	0		=			
ANR	1131797	Identifier	inst		1131483	0					
ANR	1131798	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1131483	1					
ANR	1131799	Callee	emit_x86_instruction		1131483	0					
ANR	1131800	Identifier	emit_x86_instruction		1131483	0					
ANR	1131801	ArgumentList	compiler		1131483	1					
ANR	1131802	Argument	compiler		1131483	0					
ANR	1131803	Identifier	compiler		1131483	0					
ANR	1131804	Argument	1		1131483	1					
ANR	1131805	PrimaryExpression	1		1131483	0					
ANR	1131806	Argument	TMP_REG1		1131483	2					
ANR	1131807	Identifier	TMP_REG1		1131483	0					
ANR	1131808	Argument	0		1131483	3					
ANR	1131809	PrimaryExpression	0		1131483	0					
ANR	1131810	Argument	dst		1131483	4					
ANR	1131811	Identifier	dst		1131483	0					
ANR	1131812	Argument	dstw		1131483	5					
ANR	1131813	Identifier	dstw		1131483	0					
ANR	1131814	ExpressionStatement	FAIL_IF ( ! inst )	714:1:20292:20306	1131483	9	True				
ANR	1131815	CallExpression	FAIL_IF ( ! inst )		1131483	0					
ANR	1131816	Callee	FAIL_IF		1131483	0					
ANR	1131817	Identifier	FAIL_IF		1131483	0					
ANR	1131818	ArgumentList	! inst		1131483	1					
ANR	1131819	Argument	! inst		1131483	0					
ANR	1131820	UnaryOperationExpression	! inst		1131483	0					
ANR	1131821	UnaryOperator	!		1131483	0					
ANR	1131822	Identifier	inst		1131483	1					
ANR	1131823	ExpressionStatement	* inst = MOV_rm_r	715:1:20309:20325	1131483	10	True				
ANR	1131824	AssignmentExpression	* inst = MOV_rm_r		1131483	0		=			
ANR	1131825	UnaryOperationExpression	* inst		1131483	0					
ANR	1131826	UnaryOperator	*		1131483	0					
ANR	1131827	Identifier	inst		1131483	1					
ANR	1131828	Identifier	MOV_rm_r		1131483	1					
ANR	1131829	ReturnStatement	return SLJIT_SUCCESS ;	716:1:20328:20348	1131483	11	True				
ANR	1131830	Identifier	SLJIT_SUCCESS		1131483	0					
ANR	1131831	ReturnType	static sljit_si		1131483	1					
ANR	1131832	Identifier	emit_mov		1131483	2					
ANR	1131833	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1131483	3					
ANR	1131834	Parameter	struct sljit_compiler * compiler	654:25:18544:18574	1131483	0	True				
ANR	1131835	ParameterType	struct sljit_compiler *		1131483	0					
ANR	1131836	Identifier	compiler		1131483	1					
ANR	1131837	Parameter	sljit_si dst	655:1:18578:18589	1131483	1	True				
ANR	1131838	ParameterType	sljit_si		1131483	0					
ANR	1131839	Identifier	dst		1131483	1					
ANR	1131840	Parameter	sljit_sw dstw	655:15:18592:18604	1131483	2	True				
ANR	1131841	ParameterType	sljit_sw		1131483	0					
ANR	1131842	Identifier	dstw		1131483	1					
ANR	1131843	Parameter	sljit_si src	656:1:18608:18619	1131483	3	True				
ANR	1131844	ParameterType	sljit_si		1131483	0					
ANR	1131845	Identifier	src		1131483	1					
ANR	1131846	Parameter	sljit_sw srcw	656:15:18622:18634	1131483	4	True				
ANR	1131847	ParameterType	sljit_sw		1131483	0					
ANR	1131848	Identifier	srcw		1131483	1					
ANR	1131849	CFGEntryNode	ENTRY		1131483		True				
ANR	1131850	CFGExitNode	EXIT		1131483		True				
ANR	1131851	Symbol	emit_load_imm64		1131483						
ANR	1131852	Symbol	TMP_REG2		1131483						
ANR	1131853	Symbol	TMP_REG1		1131483						
ANR	1131854	Symbol	dst		1131483						
ANR	1131855	Symbol	SLJIT_MEM		1131483						
ANR	1131856	Symbol	MOV_r_i32		1131483						
ANR	1131857	Symbol	reg_map		1131483						
ANR	1131858	Symbol	* compiler		1131483						
ANR	1131859	Symbol	* dst		1131483						
ANR	1131860	Symbol	MOV_rm_i32		1131483						
ANR	1131861	Symbol	SLJIT_IMM		1131483						
ANR	1131862	Symbol	compiler		1131483						
ANR	1131863	Symbol	emit_x86_instruction		1131483						
ANR	1131864	Symbol	* inst		1131483						
ANR	1131865	Symbol	FAST_IS_REG		1131483						
ANR	1131866	Symbol	MOV_r_rm		1131483						
ANR	1131867	Symbol	src		1131483						
ANR	1131868	Symbol	srcw		1131483						
ANR	1131869	Symbol	NOT_HALFWORD		1131483						
ANR	1131870	Symbol	SLJIT_SUCCESS		1131483						
ANR	1131871	Symbol	* reg_map		1131483						
ANR	1131872	Symbol	MOV_rm_r		1131483						
ANR	1131873	Symbol	SLJIT_UNUSED		1131483						
ANR	1131874	Symbol	emit_do_imm		1131483						
ANR	1131875	Symbol	inst		1131483						
ANR	1131876	Symbol	compiler -> mode32		1131483						
ANR	1131877	Symbol	dstw		1131483						
ANR	1131878	Function	sljit_emit_op0	722:0:20457:24079							
ANR	1131879	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1131878	0					
ANR	1131880	CompoundStatement		723:0:20552:24079	1131878	0					
ANR	1131881	IdentifierDeclStatement	sljit_ub * inst ;	724:1:20555:20569	1131878	0	True				
ANR	1131882	IdentifierDecl	* inst		1131878	0					
ANR	1131883	IdentifierDeclType	sljit_ub *		1131878	0					
ANR	1131884	Identifier	inst		1131878	1					
ANR	1131885	IdentifierDeclStatement	sljit_si size ;	726:1:20629:20642	1131878	1	True				
ANR	1131886	IdentifierDecl	size		1131878	0					
ANR	1131887	IdentifierDeclType	sljit_si		1131878	0					
ANR	1131888	Identifier	size		1131878	1					
ANR	1131889	ExpressionStatement	CHECK_ERROR ( )	729:1:20653:20666	1131878	2	True				
ANR	1131890	CallExpression	CHECK_ERROR ( )		1131878	0					
ANR	1131891	Callee	CHECK_ERROR		1131878	0					
ANR	1131892	Identifier	CHECK_ERROR		1131878	0					
ANR	1131893	ArgumentList			1131878	1					
ANR	1131894	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	730:1:20669:20710	1131878	3	True				
ANR	1131895	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1131878	0					
ANR	1131896	Callee	CHECK		1131878	0					
ANR	1131897	Identifier	CHECK		1131878	0					
ANR	1131898	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1131878	1					
ANR	1131899	Argument	"check_sljit_emit_op0 ( compiler , op )"		1131878	0					
ANR	1131900	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1131878	0					
ANR	1131901	Callee	check_sljit_emit_op0		1131878	0					
ANR	1131902	Identifier	check_sljit_emit_op0		1131878	0					
ANR	1131903	ArgumentList	compiler		1131878	1					
ANR	1131904	Argument	compiler		1131878	0					
ANR	1131905	Identifier	compiler		1131878	0					
ANR	1131906	Argument	op		1131878	1					
ANR	1131907	Identifier	op		1131878	0					
ANR	1131908	SwitchStatement	switch ( GET_OPCODE ( op ) )		1131878	4					
ANR	1131909	Condition	GET_OPCODE ( op )	732:9:20722:20735	1131878	0	True				
ANR	1131910	CallExpression	GET_OPCODE ( op )		1131878	0					
ANR	1131911	Callee	GET_OPCODE		1131878	0					
ANR	1131912	Identifier	GET_OPCODE		1131878	0					
ANR	1131913	ArgumentList	op		1131878	1					
ANR	1131914	Argument	op		1131878	0					
ANR	1131915	Identifier	op		1131878	0					
ANR	1131916	CompoundStatement		10:25:185:185	1131878	1					
ANR	1131917	Label	case SLJIT_BREAKPOINT :	733:1:20741:20762	1131878	0	True				
ANR	1131918	Identifier	SLJIT_BREAKPOINT		1131878	0					
ANR	1131919	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	734:2:20766:20811	1131878	1	True				
ANR	1131920	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1131878	0		=			
ANR	1131921	Identifier	inst		1131878	0					
ANR	1131922	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1131878	1					
ANR	1131923	CastTarget	sljit_ub *		1131878	0					
ANR	1131924	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1131878	1					
ANR	1131925	Callee	ensure_buf		1131878	0					
ANR	1131926	Identifier	ensure_buf		1131878	0					
ANR	1131927	ArgumentList	compiler		1131878	1					
ANR	1131928	Argument	compiler		1131878	0					
ANR	1131929	Identifier	compiler		1131878	0					
ANR	1131930	Argument	1 + 1		1131878	1					
ANR	1131931	AdditiveExpression	1 + 1		1131878	0		+			
ANR	1131932	PrimaryExpression	1		1131878	0					
ANR	1131933	PrimaryExpression	1		1131878	1					
ANR	1131934	ExpressionStatement	FAIL_IF ( ! inst )	735:2:20815:20829	1131878	2	True				
ANR	1131935	CallExpression	FAIL_IF ( ! inst )		1131878	0					
ANR	1131936	Callee	FAIL_IF		1131878	0					
ANR	1131937	Identifier	FAIL_IF		1131878	0					
ANR	1131938	ArgumentList	! inst		1131878	1					
ANR	1131939	Argument	! inst		1131878	0					
ANR	1131940	UnaryOperationExpression	! inst		1131878	0					
ANR	1131941	UnaryOperator	!		1131878	0					
ANR	1131942	Identifier	inst		1131878	1					
ANR	1131943	ExpressionStatement	INC_SIZE ( 1 )	736:2:20833:20844	1131878	3	True				
ANR	1131944	CallExpression	INC_SIZE ( 1 )		1131878	0					
ANR	1131945	Callee	INC_SIZE		1131878	0					
ANR	1131946	Identifier	INC_SIZE		1131878	0					
ANR	1131947	ArgumentList	1		1131878	1					
ANR	1131948	Argument	1		1131878	0					
ANR	1131949	PrimaryExpression	1		1131878	0					
ANR	1131950	ExpressionStatement	* inst = INT3	737:2:20848:20860	1131878	4	True				
ANR	1131951	AssignmentExpression	* inst = INT3		1131878	0		=			
ANR	1131952	UnaryOperationExpression	* inst		1131878	0					
ANR	1131953	UnaryOperator	*		1131878	0					
ANR	1131954	Identifier	inst		1131878	1					
ANR	1131955	Identifier	INT3		1131878	1					
ANR	1131956	BreakStatement	break ;	738:2:20864:20869	1131878	5	True				
ANR	1131957	Label	case SLJIT_NOP :	739:1:20872:20886	1131878	6	True				
ANR	1131958	Identifier	SLJIT_NOP		1131878	0					
ANR	1131959	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	740:2:20890:20935	1131878	7	True				
ANR	1131960	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1131878	0		=			
ANR	1131961	Identifier	inst		1131878	0					
ANR	1131962	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1131878	1					
ANR	1131963	CastTarget	sljit_ub *		1131878	0					
ANR	1131964	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1131878	1					
ANR	1131965	Callee	ensure_buf		1131878	0					
ANR	1131966	Identifier	ensure_buf		1131878	0					
ANR	1131967	ArgumentList	compiler		1131878	1					
ANR	1131968	Argument	compiler		1131878	0					
ANR	1131969	Identifier	compiler		1131878	0					
ANR	1131970	Argument	1 + 1		1131878	1					
ANR	1131971	AdditiveExpression	1 + 1		1131878	0		+			
ANR	1131972	PrimaryExpression	1		1131878	0					
ANR	1131973	PrimaryExpression	1		1131878	1					
ANR	1131974	ExpressionStatement	FAIL_IF ( ! inst )	741:2:20939:20953	1131878	8	True				
ANR	1131975	CallExpression	FAIL_IF ( ! inst )		1131878	0					
ANR	1131976	Callee	FAIL_IF		1131878	0					
ANR	1131977	Identifier	FAIL_IF		1131878	0					
ANR	1131978	ArgumentList	! inst		1131878	1					
ANR	1131979	Argument	! inst		1131878	0					
ANR	1131980	UnaryOperationExpression	! inst		1131878	0					
ANR	1131981	UnaryOperator	!		1131878	0					
ANR	1131982	Identifier	inst		1131878	1					
ANR	1131983	ExpressionStatement	INC_SIZE ( 1 )	742:2:20957:20968	1131878	9	True				
ANR	1131984	CallExpression	INC_SIZE ( 1 )		1131878	0					
ANR	1131985	Callee	INC_SIZE		1131878	0					
ANR	1131986	Identifier	INC_SIZE		1131878	0					
ANR	1131987	ArgumentList	1		1131878	1					
ANR	1131988	Argument	1		1131878	0					
ANR	1131989	PrimaryExpression	1		1131878	0					
ANR	1131990	ExpressionStatement	* inst = NOP	743:2:20972:20983	1131878	10	True				
ANR	1131991	AssignmentExpression	* inst = NOP		1131878	0		=			
ANR	1131992	UnaryOperationExpression	* inst		1131878	0					
ANR	1131993	UnaryOperator	*		1131878	0					
ANR	1131994	Identifier	inst		1131878	1					
ANR	1131995	Identifier	NOP		1131878	1					
ANR	1131996	BreakStatement	break ;	744:2:20987:20992	1131878	11	True				
ANR	1131997	Label	case SLJIT_LUMUL :	745:1:20995:21011	1131878	12	True				
ANR	1131998	Identifier	SLJIT_LUMUL		1131878	0					
ANR	1131999	Label	case SLJIT_LSMUL :	746:1:21014:21030	1131878	13	True				
ANR	1132000	Identifier	SLJIT_LSMUL		1131878	0					
ANR	1132001	Label	case SLJIT_UDIVMOD :	747:1:21033:21051	1131878	14	True				
ANR	1132002	Identifier	SLJIT_UDIVMOD		1131878	0					
ANR	1132003	Label	case SLJIT_SDIVMOD :	748:1:21054:21072	1131878	15	True				
ANR	1132004	Identifier	SLJIT_SDIVMOD		1131878	0					
ANR	1132005	Label	case SLJIT_UDIVI :	749:1:21075:21091	1131878	16	True				
ANR	1132006	Identifier	SLJIT_UDIVI		1131878	0					
ANR	1132007	Label	case SLJIT_SDIVI :	750:1:21094:21110	1131878	17	True				
ANR	1132008	Identifier	SLJIT_SDIVI		1131878	0					
ANR	1132009	ExpressionStatement	compiler -> flags_saved = 0	751:2:21114:21139	1131878	18	True				
ANR	1132010	AssignmentExpression	compiler -> flags_saved = 0		1131878	0		=			
ANR	1132011	PtrMemberAccess	compiler -> flags_saved		1131878	0					
ANR	1132012	Identifier	compiler		1131878	0					
ANR	1132013	Identifier	flags_saved		1131878	1					
ANR	1132014	PrimaryExpression	0		1131878	1					
ANR	1132015	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7 , invalid_register_assignment_for_div_mul )"	754:2:21214:21363	1131878	19	True				
ANR	1132016	CallExpression	"SLJIT_COMPILE_ASSERT ( reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7 , invalid_register_assignment_for_div_mul )"		1131878	0					
ANR	1132017	Callee	SLJIT_COMPILE_ASSERT		1131878	0					
ANR	1132018	Identifier	SLJIT_COMPILE_ASSERT		1131878	0					
ANR	1132019	ArgumentList	reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1131878	1					
ANR	1132020	Argument	reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1131878	0					
ANR	1132021	AndExpression	reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1131878	0		&&			
ANR	1132022	EqualityExpression	reg_map [ SLJIT_R0 ] == 0		1131878	0		==			
ANR	1132023	ArrayIndexing	reg_map [ SLJIT_R0 ]		1131878	0					
ANR	1132024	Identifier	reg_map		1131878	0					
ANR	1132025	Identifier	SLJIT_R0		1131878	1					
ANR	1132026	PrimaryExpression	0		1131878	1					
ANR	1132027	AndExpression	reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1131878	1		&&			
ANR	1132028	EqualityExpression	reg_map [ SLJIT_R1 ] == 2		1131878	0		==			
ANR	1132029	ArrayIndexing	reg_map [ SLJIT_R1 ]		1131878	0					
ANR	1132030	Identifier	reg_map		1131878	0					
ANR	1132031	Identifier	SLJIT_R1		1131878	1					
ANR	1132032	PrimaryExpression	2		1131878	1					
ANR	1132033	RelationalExpression	reg_map [ TMP_REG1 ] > 7		1131878	1		>			
ANR	1132034	ArrayIndexing	reg_map [ TMP_REG1 ]		1131878	0					
ANR	1132035	Identifier	reg_map		1131878	0					
ANR	1132036	Identifier	TMP_REG1		1131878	1					
ANR	1132037	PrimaryExpression	7		1131878	1					
ANR	1132038	Argument	invalid_register_assignment_for_div_mul		1131878	1					
ANR	1132039	Identifier	invalid_register_assignment_for_div_mul		1131878	0					
ANR	1132040	ExpressionStatement	compiler -> mode32 = op & SLJIT_INT_OP	766:2:21533:21569	1131878	20	True				
ANR	1132041	AssignmentExpression	compiler -> mode32 = op & SLJIT_INT_OP		1131878	0		=			
ANR	1132042	PtrMemberAccess	compiler -> mode32		1131878	0					
ANR	1132043	Identifier	compiler		1131878	0					
ANR	1132044	Identifier	mode32		1131878	1					
ANR	1132045	BitAndExpression	op & SLJIT_INT_OP		1131878	1		&			
ANR	1132046	Identifier	op		1131878	0					
ANR	1132047	Identifier	SLJIT_INT_OP		1131878	1					
ANR	1132048	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"	768:2:21580:21694	1131878	21	True				
ANR	1132049	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"		1131878	0					
ANR	1132050	Callee	SLJIT_COMPILE_ASSERT		1131878	0					
ANR	1132051	Identifier	SLJIT_COMPILE_ASSERT		1131878	0					
ANR	1132052	ArgumentList	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1131878	1					
ANR	1132053	Argument	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1131878	0					
ANR	1132054	AndExpression	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1131878	0		&&			
ANR	1132055	EqualityExpression	( SLJIT_UDIVMOD & 0x2 ) == 0		1131878	0		==			
ANR	1132056	BitAndExpression	SLJIT_UDIVMOD & 0x2		1131878	0		&			
ANR	1132057	Identifier	SLJIT_UDIVMOD		1131878	0					
ANR	1132058	PrimaryExpression	0x2		1131878	1					
ANR	1132059	PrimaryExpression	0		1131878	1					
ANR	1132060	EqualityExpression	SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1131878	1		==			
ANR	1132061	AdditiveExpression	SLJIT_UDIVI - 0x2		1131878	0		-			
ANR	1132062	Identifier	SLJIT_UDIVI		1131878	0					
ANR	1132063	PrimaryExpression	0x2		1131878	1					
ANR	1132064	Identifier	SLJIT_UDIVMOD		1131878	1					
ANR	1132065	Argument	bad_div_opcode_assignments		1131878	1					
ANR	1132066	Identifier	bad_div_opcode_assignments		1131878	0					
ANR	1132067	ExpressionStatement	op = GET_OPCODE ( op )	770:2:21699:21718	1131878	22	True				
ANR	1132068	AssignmentExpression	op = GET_OPCODE ( op )		1131878	0		=			
ANR	1132069	Identifier	op		1131878	0					
ANR	1132070	CallExpression	GET_OPCODE ( op )		1131878	1					
ANR	1132071	Callee	GET_OPCODE		1131878	0					
ANR	1132072	Identifier	GET_OPCODE		1131878	0					
ANR	1132073	ArgumentList	op		1131878	1					
ANR	1132074	Argument	op		1131878	0					
ANR	1132075	Identifier	op		1131878	0					
ANR	1132076	IfStatement	if ( ( op | 0x2 ) == SLJIT_UDIVI )		1131878	23					
ANR	1132077	Condition	( op | 0x2 ) == SLJIT_UDIVI	771:6:21726:21750	1131878	0	True				
ANR	1132078	EqualityExpression	( op | 0x2 ) == SLJIT_UDIVI		1131878	0		==			
ANR	1132079	InclusiveOrExpression	op | 0x2		1131878	0		|			
ANR	1132080	Identifier	op		1131878	0					
ANR	1132081	PrimaryExpression	0x2		1131878	1					
ANR	1132082	Identifier	SLJIT_UDIVI		1131878	1					
ANR	1132083	CompoundStatement		49:33:1200:1200	1131878	1					
ANR	1132084	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"	773:3:21834:21878	1131878	0	True				
ANR	1132085	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"		1131878	0					
ANR	1132086	Callee	EMIT_MOV		1131878	0					
ANR	1132087	Identifier	EMIT_MOV		1131878	0					
ANR	1132088	ArgumentList	compiler		1131878	1					
ANR	1132089	Argument	compiler		1131878	0					
ANR	1132090	Identifier	compiler		1131878	0					
ANR	1132091	Argument	TMP_REG1		1131878	1					
ANR	1132092	Identifier	TMP_REG1		1131878	0					
ANR	1132093	Argument	0		1131878	2					
ANR	1132094	PrimaryExpression	0		1131878	0					
ANR	1132095	Argument	SLJIT_R1		1131878	3					
ANR	1132096	Identifier	SLJIT_R1		1131878	0					
ANR	1132097	Argument	0		1131878	4					
ANR	1132098	PrimaryExpression	0		1131878	0					
ANR	1132099	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_R1 , 0 , SLJIT_R1 , 0 )"	774:3:21883:21949	1131878	1	True				
ANR	1132100	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_R1 , 0 , SLJIT_R1 , 0 )"		1131878	0		=			
ANR	1132101	Identifier	inst		1131878	0					
ANR	1132102	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_R1 , 0 , SLJIT_R1 , 0 )"		1131878	1					
ANR	1132103	Callee	emit_x86_instruction		1131878	0					
ANR	1132104	Identifier	emit_x86_instruction		1131878	0					
ANR	1132105	ArgumentList	compiler		1131878	1					
ANR	1132106	Argument	compiler		1131878	0					
ANR	1132107	Identifier	compiler		1131878	0					
ANR	1132108	Argument	1		1131878	1					
ANR	1132109	PrimaryExpression	1		1131878	0					
ANR	1132110	Argument	SLJIT_R1		1131878	2					
ANR	1132111	Identifier	SLJIT_R1		1131878	0					
ANR	1132112	Argument	0		1131878	3					
ANR	1132113	PrimaryExpression	0		1131878	0					
ANR	1132114	Argument	SLJIT_R1		1131878	4					
ANR	1132115	Identifier	SLJIT_R1		1131878	0					
ANR	1132116	Argument	0		1131878	5					
ANR	1132117	PrimaryExpression	0		1131878	0					
ANR	1132118	ExpressionStatement	FAIL_IF ( ! inst )	778:3:22038:22052	1131878	2	True				
ANR	1132119	CallExpression	FAIL_IF ( ! inst )		1131878	0					
ANR	1132120	Callee	FAIL_IF		1131878	0					
ANR	1132121	Identifier	FAIL_IF		1131878	0					
ANR	1132122	ArgumentList	! inst		1131878	1					
ANR	1132123	Argument	! inst		1131878	0					
ANR	1132124	UnaryOperationExpression	! inst		1131878	0					
ANR	1132125	UnaryOperator	!		1131878	0					
ANR	1132126	Identifier	inst		1131878	1					
ANR	1132127	ExpressionStatement	* inst = XOR_r_rm	779:3:22057:22073	1131878	3	True				
ANR	1132128	AssignmentExpression	* inst = XOR_r_rm		1131878	0		=			
ANR	1132129	UnaryOperationExpression	* inst		1131878	0					
ANR	1132130	UnaryOperator	*		1131878	0					
ANR	1132131	Identifier	inst		1131878	1					
ANR	1132132	Identifier	XOR_r_rm		1131878	1					
ANR	1132133	IfStatement	if ( ( op | 0x2 ) == SLJIT_SDIVI )		1131878	24					
ANR	1132134	Condition	( op | 0x2 ) == SLJIT_SDIVI	782:6:22086:22110	1131878	0	True				
ANR	1132135	EqualityExpression	( op | 0x2 ) == SLJIT_SDIVI		1131878	0		==			
ANR	1132136	InclusiveOrExpression	op | 0x2		1131878	0		|			
ANR	1132137	Identifier	op		1131878	0					
ANR	1132138	PrimaryExpression	0x2		1131878	1					
ANR	1132139	Identifier	SLJIT_SDIVI		1131878	1					
ANR	1132140	CompoundStatement		60:33:1560:1560	1131878	1					
ANR	1132141	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"	784:3:22194:22238	1131878	0	True				
ANR	1132142	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"		1131878	0					
ANR	1132143	Callee	EMIT_MOV		1131878	0					
ANR	1132144	Identifier	EMIT_MOV		1131878	0					
ANR	1132145	ArgumentList	compiler		1131878	1					
ANR	1132146	Argument	compiler		1131878	0					
ANR	1132147	Identifier	compiler		1131878	0					
ANR	1132148	Argument	TMP_REG1		1131878	1					
ANR	1132149	Identifier	TMP_REG1		1131878	0					
ANR	1132150	Argument	0		1131878	2					
ANR	1132151	PrimaryExpression	0		1131878	0					
ANR	1132152	Argument	SLJIT_R1		1131878	3					
ANR	1132153	Identifier	SLJIT_R1		1131878	0					
ANR	1132154	Argument	0		1131878	4					
ANR	1132155	PrimaryExpression	0		1131878	0					
ANR	1132156	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	788:3:22308:22353	1131878	1	True				
ANR	1132157	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1131878	0		=			
ANR	1132158	Identifier	inst		1131878	0					
ANR	1132159	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1131878	1					
ANR	1132160	CastTarget	sljit_ub *		1131878	0					
ANR	1132161	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1131878	1					
ANR	1132162	Callee	ensure_buf		1131878	0					
ANR	1132163	Identifier	ensure_buf		1131878	0					
ANR	1132164	ArgumentList	compiler		1131878	1					
ANR	1132165	Argument	compiler		1131878	0					
ANR	1132166	Identifier	compiler		1131878	0					
ANR	1132167	Argument	1 + 1		1131878	1					
ANR	1132168	AdditiveExpression	1 + 1		1131878	0		+			
ANR	1132169	PrimaryExpression	1		1131878	0					
ANR	1132170	PrimaryExpression	1		1131878	1					
ANR	1132171	ExpressionStatement	FAIL_IF ( ! inst )	789:3:22358:22372	1131878	2	True				
ANR	1132172	CallExpression	FAIL_IF ( ! inst )		1131878	0					
ANR	1132173	Callee	FAIL_IF		1131878	0					
ANR	1132174	Identifier	FAIL_IF		1131878	0					
ANR	1132175	ArgumentList	! inst		1131878	1					
ANR	1132176	Argument	! inst		1131878	0					
ANR	1132177	UnaryOperationExpression	! inst		1131878	0					
ANR	1132178	UnaryOperator	!		1131878	0					
ANR	1132179	Identifier	inst		1131878	1					
ANR	1132180	ExpressionStatement	INC_SIZE ( 1 )	790:3:22377:22388	1131878	3	True				
ANR	1132181	CallExpression	INC_SIZE ( 1 )		1131878	0					
ANR	1132182	Callee	INC_SIZE		1131878	0					
ANR	1132183	Identifier	INC_SIZE		1131878	0					
ANR	1132184	ArgumentList	1		1131878	1					
ANR	1132185	Argument	1		1131878	0					
ANR	1132186	PrimaryExpression	1		1131878	0					
ANR	1132187	ExpressionStatement	* inst = CDQ	791:3:22393:22404	1131878	4	True				
ANR	1132188	AssignmentExpression	* inst = CDQ		1131878	0		=			
ANR	1132189	UnaryOperationExpression	* inst		1131878	0					
ANR	1132190	UnaryOperator	*		1131878	0					
ANR	1132191	Identifier	inst		1131878	1					
ANR	1132192	Identifier	CDQ		1131878	1					
ANR	1132193	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 2 )"	809:2:22758:22803	1131878	25	True				
ANR	1132194	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 2 )"		1131878	0		=			
ANR	1132195	Identifier	inst		1131878	0					
ANR	1132196	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 2 )"		1131878	1					
ANR	1132197	CastTarget	sljit_ub *		1131878	0					
ANR	1132198	CallExpression	"ensure_buf ( compiler , 1 + 2 )"		1131878	1					
ANR	1132199	Callee	ensure_buf		1131878	0					
ANR	1132200	Identifier	ensure_buf		1131878	0					
ANR	1132201	ArgumentList	compiler		1131878	1					
ANR	1132202	Argument	compiler		1131878	0					
ANR	1132203	Identifier	compiler		1131878	0					
ANR	1132204	Argument	1 + 2		1131878	1					
ANR	1132205	AdditiveExpression	1 + 2		1131878	0		+			
ANR	1132206	PrimaryExpression	1		1131878	0					
ANR	1132207	PrimaryExpression	2		1131878	1					
ANR	1132208	ExpressionStatement	FAIL_IF ( ! inst )	810:2:22807:22821	1131878	26	True				
ANR	1132209	CallExpression	FAIL_IF ( ! inst )		1131878	0					
ANR	1132210	Callee	FAIL_IF		1131878	0					
ANR	1132211	Identifier	FAIL_IF		1131878	0					
ANR	1132212	ArgumentList	! inst		1131878	1					
ANR	1132213	Argument	! inst		1131878	0					
ANR	1132214	UnaryOperationExpression	! inst		1131878	0					
ANR	1132215	UnaryOperator	!		1131878	0					
ANR	1132216	Identifier	inst		1131878	1					
ANR	1132217	ExpressionStatement	INC_SIZE ( 2 )	811:2:22825:22836	1131878	27	True				
ANR	1132218	CallExpression	INC_SIZE ( 2 )		1131878	0					
ANR	1132219	Callee	INC_SIZE		1131878	0					
ANR	1132220	Identifier	INC_SIZE		1131878	0					
ANR	1132221	ArgumentList	2		1131878	1					
ANR	1132222	Argument	2		1131878	0					
ANR	1132223	PrimaryExpression	2		1131878	0					
ANR	1132224	ExpressionStatement	* inst ++ = GROUP_F7	812:2:22840:22858	1131878	28	True				
ANR	1132225	AssignmentExpression	* inst ++ = GROUP_F7		1131878	0		=			
ANR	1132226	UnaryOperationExpression	* inst ++		1131878	0					
ANR	1132227	UnaryOperator	*		1131878	0					
ANR	1132228	PostIncDecOperationExpression	inst ++		1131878	1					
ANR	1132229	Identifier	inst		1131878	0					
ANR	1132230	IncDec	++		1131878	1					
ANR	1132231	Identifier	GROUP_F7		1131878	1					
ANR	1132232	ExpressionStatement	* inst = MOD_REG | ( ( op >= SLJIT_UDIVMOD ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ] )	813:2:22862:22943	1131878	29	True				
ANR	1132233	AssignmentExpression	* inst = MOD_REG | ( ( op >= SLJIT_UDIVMOD ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ] )		1131878	0		=			
ANR	1132234	UnaryOperationExpression	* inst		1131878	0					
ANR	1132235	UnaryOperator	*		1131878	0					
ANR	1132236	Identifier	inst		1131878	1					
ANR	1132237	InclusiveOrExpression	MOD_REG | ( ( op >= SLJIT_UDIVMOD ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ] )		1131878	1		|			
ANR	1132238	Identifier	MOD_REG		1131878	0					
ANR	1132239	ConditionalExpression	( op >= SLJIT_UDIVMOD ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ]		1131878	1					
ANR	1132240	Condition	op >= SLJIT_UDIVMOD		1131878	0					
ANR	1132241	RelationalExpression	op >= SLJIT_UDIVMOD		1131878	0		>=			
ANR	1132242	Identifier	op		1131878	0					
ANR	1132243	Identifier	SLJIT_UDIVMOD		1131878	1					
ANR	1132244	ArrayIndexing	reg_map [ TMP_REG1 ]		1131878	1					
ANR	1132245	Identifier	reg_map		1131878	0					
ANR	1132246	Identifier	TMP_REG1		1131878	1					
ANR	1132247	ArrayIndexing	reg_map [ SLJIT_R1 ]		1131878	2					
ANR	1132248	Identifier	reg_map		1131878	0					
ANR	1132249	Identifier	SLJIT_R1		1131878	1					
ANR	1132250	SwitchStatement	switch ( op )		1131878	30					
ANR	1132251	Condition	op	837:10:23559:23560	1131878	0	True				
ANR	1132252	Identifier	op		1131878	0					
ANR	1132253	CompoundStatement		115:14:3010:3010	1131878	1					
ANR	1132254	Label	case SLJIT_LUMUL :	838:2:23567:23583	1131878	0	True				
ANR	1132255	Identifier	SLJIT_LUMUL		1131878	0					
ANR	1132256	ExpressionStatement	* inst |= MUL	839:3:23588:23600	1131878	1	True				
ANR	1132257	AssignmentExpression	* inst |= MUL		1131878	0		|=			
ANR	1132258	UnaryOperationExpression	* inst		1131878	0					
ANR	1132259	UnaryOperator	*		1131878	0					
ANR	1132260	Identifier	inst		1131878	1					
ANR	1132261	Identifier	MUL		1131878	1					
ANR	1132262	BreakStatement	break ;	840:3:23605:23610	1131878	2	True				
ANR	1132263	Label	case SLJIT_LSMUL :	841:2:23614:23630	1131878	3	True				
ANR	1132264	Identifier	SLJIT_LSMUL		1131878	0					
ANR	1132265	ExpressionStatement	* inst |= IMUL	842:3:23635:23648	1131878	4	True				
ANR	1132266	AssignmentExpression	* inst |= IMUL		1131878	0		|=			
ANR	1132267	UnaryOperationExpression	* inst		1131878	0					
ANR	1132268	UnaryOperator	*		1131878	0					
ANR	1132269	Identifier	inst		1131878	1					
ANR	1132270	Identifier	IMUL		1131878	1					
ANR	1132271	BreakStatement	break ;	843:3:23653:23658	1131878	5	True				
ANR	1132272	Label	case SLJIT_UDIVMOD :	844:2:23662:23680	1131878	6	True				
ANR	1132273	Identifier	SLJIT_UDIVMOD		1131878	0					
ANR	1132274	Label	case SLJIT_UDIVI :	845:2:23684:23700	1131878	7	True				
ANR	1132275	Identifier	SLJIT_UDIVI		1131878	0					
ANR	1132276	ExpressionStatement	* inst |= DIV	846:3:23705:23717	1131878	8	True				
ANR	1132277	AssignmentExpression	* inst |= DIV		1131878	0		|=			
ANR	1132278	UnaryOperationExpression	* inst		1131878	0					
ANR	1132279	UnaryOperator	*		1131878	0					
ANR	1132280	Identifier	inst		1131878	1					
ANR	1132281	Identifier	DIV		1131878	1					
ANR	1132282	BreakStatement	break ;	847:3:23722:23727	1131878	9	True				
ANR	1132283	Label	case SLJIT_SDIVMOD :	848:2:23731:23749	1131878	10	True				
ANR	1132284	Identifier	SLJIT_SDIVMOD		1131878	0					
ANR	1132285	Label	case SLJIT_SDIVI :	849:2:23753:23769	1131878	11	True				
ANR	1132286	Identifier	SLJIT_SDIVI		1131878	0					
ANR	1132287	ExpressionStatement	* inst |= IDIV	850:3:23774:23787	1131878	12	True				
ANR	1132288	AssignmentExpression	* inst |= IDIV		1131878	0		|=			
ANR	1132289	UnaryOperationExpression	* inst		1131878	0					
ANR	1132290	UnaryOperator	*		1131878	0					
ANR	1132291	Identifier	inst		1131878	1					
ANR	1132292	Identifier	IDIV		1131878	1					
ANR	1132293	BreakStatement	break ;	851:3:23792:23797	1131878	13	True				
ANR	1132294	IfStatement	if ( op <= SLJIT_SDIVMOD )		1131878	31					
ANR	1132295	Condition	op <= SLJIT_SDIVMOD	854:6:23886:23904	1131878	0	True				
ANR	1132296	RelationalExpression	op <= SLJIT_SDIVMOD		1131878	0		<=			
ANR	1132297	Identifier	op		1131878	0					
ANR	1132298	Identifier	SLJIT_SDIVMOD		1131878	1					
ANR	1132299	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_R1 , 0 , TMP_REG1 , 0 )"	855:3:23910:23954	1131878	1	True				
ANR	1132300	CallExpression	"EMIT_MOV ( compiler , SLJIT_R1 , 0 , TMP_REG1 , 0 )"		1131878	0					
ANR	1132301	Callee	EMIT_MOV		1131878	0					
ANR	1132302	Identifier	EMIT_MOV		1131878	0					
ANR	1132303	ArgumentList	compiler		1131878	1					
ANR	1132304	Argument	compiler		1131878	0					
ANR	1132305	Identifier	compiler		1131878	0					
ANR	1132306	Argument	SLJIT_R1		1131878	1					
ANR	1132307	Identifier	SLJIT_R1		1131878	0					
ANR	1132308	Argument	0		1131878	2					
ANR	1132309	PrimaryExpression	0		1131878	0					
ANR	1132310	Argument	TMP_REG1		1131878	3					
ANR	1132311	Identifier	TMP_REG1		1131878	0					
ANR	1132312	Argument	0		1131878	4					
ANR	1132313	PrimaryExpression	0		1131878	0					
ANR	1132314	BreakStatement	break ;	860:2:24045:24050	1131878	32	True				
ANR	1132315	ReturnStatement	return SLJIT_SUCCESS ;	863:1:24057:24077	1131878	5	True				
ANR	1132316	Identifier	SLJIT_SUCCESS		1131878	0					
ANR	1132317	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1131878	1					
ANR	1132318	Identifier	sljit_emit_op0		1131878	2					
ANR	1132319	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1131878	3					
ANR	1132320	Parameter	struct sljit_compiler * compiler	722:49:20506:20536	1131878	0	True				
ANR	1132321	ParameterType	struct sljit_compiler *		1131878	0					
ANR	1132322	Identifier	compiler		1131878	1					
ANR	1132323	Parameter	sljit_si op	722:82:20539:20549	1131878	1	True				
ANR	1132324	ParameterType	sljit_si		1131878	0					
ANR	1132325	Identifier	op		1131878	1					
ANR	1132326	CFGEntryNode	ENTRY		1131878		True				
ANR	1132327	CFGExitNode	EXIT		1131878		True				
ANR	1132328	Symbol	invalid_register_assignment_for_div_mul		1131878						
ANR	1132329	Symbol	TMP_REG1		1131878						
ANR	1132330	Symbol	SLJIT_SDIVI		1131878						
ANR	1132331	Symbol	GROUP_F7		1131878						
ANR	1132332	Symbol	SLJIT_SDIVMOD		1131878						
ANR	1132333	Symbol	compiler -> flags_saved		1131878						
ANR	1132334	Symbol	* inst ++		1131878						
ANR	1132335	Symbol	reg_map		1131878						
ANR	1132336	Symbol	* compiler		1131878						
ANR	1132337	Symbol	SLJIT_R1		1131878						
ANR	1132338	Symbol	bad_div_opcode_assignments		1131878						
ANR	1132339	Symbol	GET_OPCODE		1131878						
ANR	1132340	Symbol	SLJIT_R0		1131878						
ANR	1132341	Symbol	* SLJIT_R1		1131878						
ANR	1132342	Symbol	CDQ		1131878						
ANR	1132343	Symbol	SLJIT_UDIVMOD		1131878						
ANR	1132344	Symbol	IMUL		1131878						
ANR	1132345	Symbol	* TMP_REG1		1131878						
ANR	1132346	Symbol	compiler		1131878						
ANR	1132347	Symbol	* SLJIT_R0		1131878						
ANR	1132348	Symbol	op		1131878						
ANR	1132349	Symbol	emit_x86_instruction		1131878						
ANR	1132350	Symbol	* inst		1131878						
ANR	1132351	Symbol	MUL		1131878						
ANR	1132352	Symbol	check_sljit_emit_op0		1131878						
ANR	1132353	Symbol	INT3		1131878						
ANR	1132354	Symbol	SLJIT_INT_OP		1131878						
ANR	1132355	Symbol	IDIV		1131878						
ANR	1132356	Symbol	SLJIT_SUCCESS		1131878						
ANR	1132357	Symbol	* reg_map		1131878						
ANR	1132358	Symbol	SLJIT_UDIVI		1131878						
ANR	1132359	Symbol	NOP		1131878						
ANR	1132360	Symbol	MOD_REG		1131878						
ANR	1132361	Symbol	DIV		1131878						
ANR	1132362	Symbol	size		1131878						
ANR	1132363	Symbol	inst		1131878						
ANR	1132364	Symbol	ensure_buf		1131878						
ANR	1132365	Symbol	compiler -> mode32		1131878						
ANR	1132366	Symbol	XOR_r_rm		1131878						
ANR	1132367	Function	emit_mov_byte	874:0:24246:28055							
ANR	1132368	FunctionDef	"emit_mov_byte (struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1132367	0					
ANR	1132369	CompoundStatement		877:0:24384:28055	1132367	0					
ANR	1132370	IdentifierDeclStatement	sljit_ub * inst ;	878:1:24387:24401	1132367	0	True				
ANR	1132371	IdentifierDecl	* inst		1132367	0					
ANR	1132372	IdentifierDeclType	sljit_ub *		1132367	0					
ANR	1132373	Identifier	inst		1132367	1					
ANR	1132374	IdentifierDeclStatement	sljit_si dst_r ;	879:1:24404:24418	1132367	1	True				
ANR	1132375	IdentifierDecl	dst_r		1132367	0					
ANR	1132376	IdentifierDeclType	sljit_si		1132367	0					
ANR	1132377	Identifier	dst_r		1132367	1					
ANR	1132378	IdentifierDeclStatement	sljit_si work_r ;	881:1:24478:24493	1132367	2	True				
ANR	1132379	IdentifierDecl	work_r		1132367	0					
ANR	1132380	IdentifierDeclType	sljit_si		1132367	0					
ANR	1132381	Identifier	work_r		1132367	1					
ANR	1132382	ExpressionStatement	compiler -> mode32 = 0	885:1:24561:24581	1132367	3	True				
ANR	1132383	AssignmentExpression	compiler -> mode32 = 0		1132367	0		=			
ANR	1132384	PtrMemberAccess	compiler -> mode32		1132367	0					
ANR	1132385	Identifier	compiler		1132367	0					
ANR	1132386	Identifier	mode32		1132367	1					
ANR	1132387	PrimaryExpression	0		1132367	1					
ANR	1132388	IfStatement	if ( dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM ) )		1132367	4					
ANR	1132389	Condition	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )	888:5:24596:24636	1132367	0	True				
ANR	1132390	AndExpression	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )		1132367	0		&&			
ANR	1132391	EqualityExpression	dst == SLJIT_UNUSED		1132367	0		==			
ANR	1132392	Identifier	dst		1132367	0					
ANR	1132393	Identifier	SLJIT_UNUSED		1132367	1					
ANR	1132394	UnaryOperationExpression	! ( src & SLJIT_MEM )		1132367	1					
ANR	1132395	UnaryOperator	!		1132367	0					
ANR	1132396	BitAndExpression	src & SLJIT_MEM		1132367	1		&			
ANR	1132397	Identifier	src		1132367	0					
ANR	1132398	Identifier	SLJIT_MEM		1132367	1					
ANR	1132399	ReturnStatement	return SLJIT_SUCCESS ;	889:2:24641:24661	1132367	1	True				
ANR	1132400	Identifier	SLJIT_SUCCESS		1132367	0					
ANR	1132401	IfStatement	if ( src & SLJIT_IMM )		1132367	5					
ANR	1132402	Condition	src & SLJIT_IMM	891:5:24694:24708	1132367	0	True				
ANR	1132403	BitAndExpression	src & SLJIT_IMM		1132367	0		&			
ANR	1132404	Identifier	src		1132367	0					
ANR	1132405	Identifier	SLJIT_IMM		1132367	1					
ANR	1132406	CompoundStatement		15:22:326:326	1132367	1					
ANR	1132407	IfStatement	if ( FAST_IS_REG ( dst ) )		1132367	0					
ANR	1132408	Condition	FAST_IS_REG ( dst )	892:6:24719:24734	1132367	0	True				
ANR	1132409	CallExpression	FAST_IS_REG ( dst )		1132367	0					
ANR	1132410	Callee	FAST_IS_REG		1132367	0					
ANR	1132411	Identifier	FAST_IS_REG		1132367	0					
ANR	1132412	ArgumentList	dst		1132367	1					
ANR	1132413	Argument	dst		1132367	0					
ANR	1132414	Identifier	dst		1132367	0					
ANR	1132415	CompoundStatement		16:24:352:352	1132367	1					
ANR	1132416	ReturnStatement	"return emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw ) ;"	894:3:24799:24859	1132367	0	True				
ANR	1132417	CallExpression	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw )"		1132367	0					
ANR	1132418	Callee	emit_do_imm		1132367	0					
ANR	1132419	Identifier	emit_do_imm		1132367	0					
ANR	1132420	ArgumentList	compiler		1132367	1					
ANR	1132421	Argument	compiler		1132367	0					
ANR	1132422	Identifier	compiler		1132367	0					
ANR	1132423	Argument	MOV_r_i32 + reg_map [ dst ]		1132367	1					
ANR	1132424	AdditiveExpression	MOV_r_i32 + reg_map [ dst ]		1132367	0		+			
ANR	1132425	Identifier	MOV_r_i32		1132367	0					
ANR	1132426	ArrayIndexing	reg_map [ dst ]		1132367	1					
ANR	1132427	Identifier	reg_map		1132367	0					
ANR	1132428	Identifier	dst		1132367	1					
ANR	1132429	Argument	srcw		1132367	2					
ANR	1132430	Identifier	srcw		1132367	0					
ANR	1132431	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_BYTE_ARG | EX86_NO_REXW , SLJIT_IMM , srcw , dst , dstw )"	902:2:25017:25116	1132367	1	True				
ANR	1132432	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_BYTE_ARG | EX86_NO_REXW , SLJIT_IMM , srcw , dst , dstw )"		1132367	0		=			
ANR	1132433	Identifier	inst		1132367	0					
ANR	1132434	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_BYTE_ARG | EX86_NO_REXW , SLJIT_IMM , srcw , dst , dstw )"		1132367	1					
ANR	1132435	Callee	emit_x86_instruction		1132367	0					
ANR	1132436	Identifier	emit_x86_instruction		1132367	0					
ANR	1132437	ArgumentList	compiler		1132367	1					
ANR	1132438	Argument	compiler		1132367	0					
ANR	1132439	Identifier	compiler		1132367	0					
ANR	1132440	Argument	1 | EX86_BYTE_ARG | EX86_NO_REXW		1132367	1					
ANR	1132441	InclusiveOrExpression	1 | EX86_BYTE_ARG | EX86_NO_REXW		1132367	0		|			
ANR	1132442	PrimaryExpression	1		1132367	0					
ANR	1132443	InclusiveOrExpression	EX86_BYTE_ARG | EX86_NO_REXW		1132367	1		|			
ANR	1132444	Identifier	EX86_BYTE_ARG		1132367	0					
ANR	1132445	Identifier	EX86_NO_REXW		1132367	1					
ANR	1132446	Argument	SLJIT_IMM		1132367	2					
ANR	1132447	Identifier	SLJIT_IMM		1132367	0					
ANR	1132448	Argument	srcw		1132367	3					
ANR	1132449	Identifier	srcw		1132367	0					
ANR	1132450	Argument	dst		1132367	4					
ANR	1132451	Identifier	dst		1132367	0					
ANR	1132452	Argument	dstw		1132367	5					
ANR	1132453	Identifier	dstw		1132367	0					
ANR	1132454	ExpressionStatement	FAIL_IF ( ! inst )	903:2:25120:25134	1132367	2	True				
ANR	1132455	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132456	Callee	FAIL_IF		1132367	0					
ANR	1132457	Identifier	FAIL_IF		1132367	0					
ANR	1132458	ArgumentList	! inst		1132367	1					
ANR	1132459	Argument	! inst		1132367	0					
ANR	1132460	UnaryOperationExpression	! inst		1132367	0					
ANR	1132461	UnaryOperator	!		1132367	0					
ANR	1132462	Identifier	inst		1132367	1					
ANR	1132463	ExpressionStatement	* inst = MOV_rm8_i8	904:2:25138:25156	1132367	3	True				
ANR	1132464	AssignmentExpression	* inst = MOV_rm8_i8		1132367	0		=			
ANR	1132465	UnaryOperationExpression	* inst		1132367	0					
ANR	1132466	UnaryOperator	*		1132367	0					
ANR	1132467	Identifier	inst		1132367	1					
ANR	1132468	Identifier	MOV_rm8_i8		1132367	1					
ANR	1132469	ReturnStatement	return SLJIT_SUCCESS ;	905:2:25160:25180	1132367	4	True				
ANR	1132470	Identifier	SLJIT_SUCCESS		1132367	0					
ANR	1132471	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	908:1:25187:25228	1132367	6	True				
ANR	1132472	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1132367	0		=			
ANR	1132473	Identifier	dst_r		1132367	0					
ANR	1132474	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1132367	1					
ANR	1132475	Condition	FAST_IS_REG ( dst )		1132367	0					
ANR	1132476	CallExpression	FAST_IS_REG ( dst )		1132367	0					
ANR	1132477	Callee	FAST_IS_REG		1132367	0					
ANR	1132478	Identifier	FAST_IS_REG		1132367	0					
ANR	1132479	ArgumentList	dst		1132367	1					
ANR	1132480	Argument	dst		1132367	0					
ANR	1132481	Identifier	dst		1132367	0					
ANR	1132482	Identifier	dst		1132367	1					
ANR	1132483	Identifier	TMP_REG1		1132367	2					
ANR	1132484	IfStatement	if ( ( dst & SLJIT_MEM ) && FAST_IS_REG ( src ) )		1132367	7					
ANR	1132485	Condition	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )	910:5:25236:25272	1132367	0	True				
ANR	1132486	AndExpression	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )		1132367	0		&&			
ANR	1132487	BitAndExpression	dst & SLJIT_MEM		1132367	0		&			
ANR	1132488	Identifier	dst		1132367	0					
ANR	1132489	Identifier	SLJIT_MEM		1132367	1					
ANR	1132490	CallExpression	FAST_IS_REG ( src )		1132367	1					
ANR	1132491	Callee	FAST_IS_REG		1132367	0					
ANR	1132492	Identifier	FAST_IS_REG		1132367	0					
ANR	1132493	ArgumentList	src		1132367	1					
ANR	1132494	Argument	src		1132367	0					
ANR	1132495	Identifier	src		1132367	0					
ANR	1132496	CompoundStatement		34:44:890:890	1132367	1					
ANR	1132497	IfStatement	if ( reg_map [ src ] >= 4 )		1132367	0					
ANR	1132498	Condition	reg_map [ src ] >= 4	912:6:25340:25356	1132367	0	True				
ANR	1132499	RelationalExpression	reg_map [ src ] >= 4		1132367	0		>=			
ANR	1132500	ArrayIndexing	reg_map [ src ]		1132367	0					
ANR	1132501	Identifier	reg_map		1132367	0					
ANR	1132502	Identifier	src		1132367	1					
ANR	1132503	PrimaryExpression	4		1132367	1					
ANR	1132504	CompoundStatement		36:25:974:974	1132367	1					
ANR	1132505	ExpressionStatement	SLJIT_ASSERT ( dst_r == TMP_REG1 )	913:3:25364:25395	1132367	0	True				
ANR	1132506	CallExpression	SLJIT_ASSERT ( dst_r == TMP_REG1 )		1132367	0					
ANR	1132507	Callee	SLJIT_ASSERT		1132367	0					
ANR	1132508	Identifier	SLJIT_ASSERT		1132367	0					
ANR	1132509	ArgumentList	dst_r == TMP_REG1		1132367	1					
ANR	1132510	Argument	dst_r == TMP_REG1		1132367	0					
ANR	1132511	EqualityExpression	dst_r == TMP_REG1		1132367	0		==			
ANR	1132512	Identifier	dst_r		1132367	0					
ANR	1132513	Identifier	TMP_REG1		1132367	1					
ANR	1132514	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"	914:3:25400:25439	1132367	1	True				
ANR	1132515	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"		1132367	0					
ANR	1132516	Callee	EMIT_MOV		1132367	0					
ANR	1132517	Identifier	EMIT_MOV		1132367	0					
ANR	1132518	ArgumentList	compiler		1132367	1					
ANR	1132519	Argument	compiler		1132367	0					
ANR	1132520	Identifier	compiler		1132367	0					
ANR	1132521	Argument	TMP_REG1		1132367	1					
ANR	1132522	Identifier	TMP_REG1		1132367	0					
ANR	1132523	Argument	0		1132367	2					
ANR	1132524	PrimaryExpression	0		1132367	0					
ANR	1132525	Argument	src		1132367	3					
ANR	1132526	Identifier	src		1132367	0					
ANR	1132527	Argument	0		1132367	4					
ANR	1132528	PrimaryExpression	0		1132367	0					
ANR	1132529	ElseStatement	else		1132367	0					
ANR	1132530	ExpressionStatement	dst_r = src	916:3:25453:25464	1132367	0	True				
ANR	1132531	AssignmentExpression	dst_r = src		1132367	0		=			
ANR	1132532	Identifier	dst_r		1132367	0					
ANR	1132533	Identifier	src		1132367	1					
ANR	1132534	ElseStatement	else		1132367	0					
ANR	1132535	IfStatement	if ( FAST_IS_REG ( src ) && reg_map [ src ] >= 4 )		1132367	0					
ANR	1132536	Condition	FAST_IS_REG ( src ) && reg_map [ src ] >= 4	922:10:25564:25600	1132367	0	True				
ANR	1132537	AndExpression	FAST_IS_REG ( src ) && reg_map [ src ] >= 4		1132367	0		&&			
ANR	1132538	CallExpression	FAST_IS_REG ( src )		1132367	0					
ANR	1132539	Callee	FAST_IS_REG		1132367	0					
ANR	1132540	Identifier	FAST_IS_REG		1132367	0					
ANR	1132541	ArgumentList	src		1132367	1					
ANR	1132542	Argument	src		1132367	0					
ANR	1132543	Identifier	src		1132367	0					
ANR	1132544	RelationalExpression	reg_map [ src ] >= 4		1132367	1		>=			
ANR	1132545	ArrayIndexing	reg_map [ src ]		1132367	0					
ANR	1132546	Identifier	reg_map		1132367	0					
ANR	1132547	Identifier	src		1132367	1					
ANR	1132548	PrimaryExpression	4		1132367	1					
ANR	1132549	CompoundStatement		46:49:1218:1218	1132367	1					
ANR	1132550	ExpressionStatement	SLJIT_ASSERT ( SLOW_IS_REG ( dst ) )	924:2:25639:25669	1132367	0	True				
ANR	1132551	CallExpression	SLJIT_ASSERT ( SLOW_IS_REG ( dst ) )		1132367	0					
ANR	1132552	Callee	SLJIT_ASSERT		1132367	0					
ANR	1132553	Identifier	SLJIT_ASSERT		1132367	0					
ANR	1132554	ArgumentList	SLOW_IS_REG ( dst )		1132367	1					
ANR	1132555	Argument	SLOW_IS_REG ( dst )		1132367	0					
ANR	1132556	CallExpression	SLOW_IS_REG ( dst )		1132367	0					
ANR	1132557	Callee	SLOW_IS_REG		1132367	0					
ANR	1132558	Identifier	SLOW_IS_REG		1132367	0					
ANR	1132559	ArgumentList	dst		1132367	1					
ANR	1132560	Argument	dst		1132367	0					
ANR	1132561	Identifier	dst		1132367	0					
ANR	1132562	IfStatement	if ( reg_map [ dst ] < 4 )		1132367	1					
ANR	1132563	Condition	reg_map [ dst ] < 4	925:6:25677:25692	1132367	0	True				
ANR	1132564	RelationalExpression	reg_map [ dst ] < 4		1132367	0		<			
ANR	1132565	ArrayIndexing	reg_map [ dst ]		1132367	0					
ANR	1132566	Identifier	reg_map		1132367	0					
ANR	1132567	Identifier	dst		1132367	1					
ANR	1132568	PrimaryExpression	4		1132367	1					
ANR	1132569	CompoundStatement		49:24:1310:1310	1132367	1					
ANR	1132570	IfStatement	if ( dst != src )		1132367	0					
ANR	1132571	Condition	dst != src	926:7:25704:25713	1132367	0	True				
ANR	1132572	EqualityExpression	dst != src		1132367	0		!=			
ANR	1132573	Identifier	dst		1132367	0					
ANR	1132574	Identifier	src		1132367	1					
ANR	1132575	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"	927:4:25720:25754	1132367	1	True				
ANR	1132576	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"		1132367	0					
ANR	1132577	Callee	EMIT_MOV		1132367	0					
ANR	1132578	Identifier	EMIT_MOV		1132367	0					
ANR	1132579	ArgumentList	compiler		1132367	1					
ANR	1132580	Argument	compiler		1132367	0					
ANR	1132581	Identifier	compiler		1132367	0					
ANR	1132582	Argument	dst		1132367	1					
ANR	1132583	Identifier	dst		1132367	0					
ANR	1132584	Argument	0		1132367	2					
ANR	1132585	PrimaryExpression	0		1132367	0					
ANR	1132586	Argument	src		1132367	3					
ANR	1132587	Identifier	src		1132367	0					
ANR	1132588	Argument	0		1132367	4					
ANR	1132589	PrimaryExpression	0		1132367	0					
ANR	1132590	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst , 0 , dst , 0 )"	928:3:25759:25815	1132367	1	True				
ANR	1132591	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst , 0 , dst , 0 )"		1132367	0		=			
ANR	1132592	Identifier	inst		1132367	0					
ANR	1132593	CallExpression	"emit_x86_instruction ( compiler , 2 , dst , 0 , dst , 0 )"		1132367	1					
ANR	1132594	Callee	emit_x86_instruction		1132367	0					
ANR	1132595	Identifier	emit_x86_instruction		1132367	0					
ANR	1132596	ArgumentList	compiler		1132367	1					
ANR	1132597	Argument	compiler		1132367	0					
ANR	1132598	Identifier	compiler		1132367	0					
ANR	1132599	Argument	2		1132367	1					
ANR	1132600	PrimaryExpression	2		1132367	0					
ANR	1132601	Argument	dst		1132367	2					
ANR	1132602	Identifier	dst		1132367	0					
ANR	1132603	Argument	0		1132367	3					
ANR	1132604	PrimaryExpression	0		1132367	0					
ANR	1132605	Argument	dst		1132367	4					
ANR	1132606	Identifier	dst		1132367	0					
ANR	1132607	Argument	0		1132367	5					
ANR	1132608	PrimaryExpression	0		1132367	0					
ANR	1132609	ExpressionStatement	FAIL_IF ( ! inst )	929:3:25820:25834	1132367	2	True				
ANR	1132610	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132611	Callee	FAIL_IF		1132367	0					
ANR	1132612	Identifier	FAIL_IF		1132367	0					
ANR	1132613	ArgumentList	! inst		1132367	1					
ANR	1132614	Argument	! inst		1132367	0					
ANR	1132615	UnaryOperationExpression	! inst		1132367	0					
ANR	1132616	UnaryOperator	!		1132367	0					
ANR	1132617	Identifier	inst		1132367	1					
ANR	1132618	ExpressionStatement	* inst ++ = GROUP_0F	930:3:25839:25857	1132367	3	True				
ANR	1132619	AssignmentExpression	* inst ++ = GROUP_0F		1132367	0		=			
ANR	1132620	UnaryOperationExpression	* inst ++		1132367	0					
ANR	1132621	UnaryOperator	*		1132367	0					
ANR	1132622	PostIncDecOperationExpression	inst ++		1132367	1					
ANR	1132623	Identifier	inst		1132367	0					
ANR	1132624	IncDec	++		1132367	1					
ANR	1132625	Identifier	GROUP_0F		1132367	1					
ANR	1132626	ExpressionStatement	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8	931:3:25862:25902	1132367	4	True				
ANR	1132627	AssignmentExpression	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1132367	0		=			
ANR	1132628	UnaryOperationExpression	* inst		1132367	0					
ANR	1132629	UnaryOperator	*		1132367	0					
ANR	1132630	Identifier	inst		1132367	1					
ANR	1132631	ConditionalExpression	sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1132367	1					
ANR	1132632	Condition	sign		1132367	0					
ANR	1132633	Identifier	sign		1132367	0					
ANR	1132634	Identifier	MOVSX_r_rm8		1132367	1					
ANR	1132635	Identifier	MOVZX_r_rm8		1132367	2					
ANR	1132636	ElseStatement	else		1132367	0					
ANR	1132637	CompoundStatement		57:7:1530:1530	1132367	0					
ANR	1132638	IfStatement	if ( dst != src )		1132367	0					
ANR	1132639	Condition	dst != src	934:7:25924:25933	1132367	0	True				
ANR	1132640	EqualityExpression	dst != src		1132367	0		!=			
ANR	1132641	Identifier	dst		1132367	0					
ANR	1132642	Identifier	src		1132367	1					
ANR	1132643	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"	935:4:25940:25974	1132367	1	True				
ANR	1132644	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"		1132367	0					
ANR	1132645	Callee	EMIT_MOV		1132367	0					
ANR	1132646	Identifier	EMIT_MOV		1132367	0					
ANR	1132647	ArgumentList	compiler		1132367	1					
ANR	1132648	Argument	compiler		1132367	0					
ANR	1132649	Identifier	compiler		1132367	0					
ANR	1132650	Argument	dst		1132367	1					
ANR	1132651	Identifier	dst		1132367	0					
ANR	1132652	Argument	0		1132367	2					
ANR	1132653	PrimaryExpression	0		1132367	0					
ANR	1132654	Argument	src		1132367	3					
ANR	1132655	Identifier	src		1132367	0					
ANR	1132656	Argument	0		1132367	4					
ANR	1132657	PrimaryExpression	0		1132367	0					
ANR	1132658	IfStatement	if ( sign )		1132367	1					
ANR	1132659	Condition	sign	936:7:25983:25986	1132367	0	True				
ANR	1132660	Identifier	sign		1132367	0					
ANR	1132661	CompoundStatement		60:13:1604:1604	1132367	1					
ANR	1132662	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"	938:4:26017:26097	1132367	0	True				
ANR	1132663	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1132367	0		=			
ANR	1132664	Identifier	inst		1132367	0					
ANR	1132665	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1132367	1					
ANR	1132666	Callee	emit_x86_instruction		1132367	0					
ANR	1132667	Identifier	emit_x86_instruction		1132367	0					
ANR	1132668	ArgumentList	compiler		1132367	1					
ANR	1132669	Argument	compiler		1132367	0					
ANR	1132670	Identifier	compiler		1132367	0					
ANR	1132671	Argument	1 | EX86_SHIFT_INS		1132367	1					
ANR	1132672	InclusiveOrExpression	1 | EX86_SHIFT_INS		1132367	0		|			
ANR	1132673	PrimaryExpression	1		1132367	0					
ANR	1132674	Identifier	EX86_SHIFT_INS		1132367	1					
ANR	1132675	Argument	SLJIT_IMM		1132367	2					
ANR	1132676	Identifier	SLJIT_IMM		1132367	0					
ANR	1132677	Argument	24		1132367	3					
ANR	1132678	PrimaryExpression	24		1132367	0					
ANR	1132679	Argument	dst		1132367	4					
ANR	1132680	Identifier	dst		1132367	0					
ANR	1132681	Argument	0		1132367	5					
ANR	1132682	PrimaryExpression	0		1132367	0					
ANR	1132683	ExpressionStatement	FAIL_IF ( ! inst )	939:4:26103:26117	1132367	1	True				
ANR	1132684	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132685	Callee	FAIL_IF		1132367	0					
ANR	1132686	Identifier	FAIL_IF		1132367	0					
ANR	1132687	ArgumentList	! inst		1132367	1					
ANR	1132688	Argument	! inst		1132367	0					
ANR	1132689	UnaryOperationExpression	! inst		1132367	0					
ANR	1132690	UnaryOperator	!		1132367	0					
ANR	1132691	Identifier	inst		1132367	1					
ANR	1132692	ExpressionStatement	* inst |= SHL	940:4:26123:26135	1132367	2	True				
ANR	1132693	AssignmentExpression	* inst |= SHL		1132367	0		|=			
ANR	1132694	UnaryOperationExpression	* inst		1132367	0					
ANR	1132695	UnaryOperator	*		1132367	0					
ANR	1132696	Identifier	inst		1132367	1					
ANR	1132697	Identifier	SHL		1132367	1					
ANR	1132698	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"	942:4:26163:26243	1132367	3	True				
ANR	1132699	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1132367	0		=			
ANR	1132700	Identifier	inst		1132367	0					
ANR	1132701	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1132367	1					
ANR	1132702	Callee	emit_x86_instruction		1132367	0					
ANR	1132703	Identifier	emit_x86_instruction		1132367	0					
ANR	1132704	ArgumentList	compiler		1132367	1					
ANR	1132705	Argument	compiler		1132367	0					
ANR	1132706	Identifier	compiler		1132367	0					
ANR	1132707	Argument	1 | EX86_SHIFT_INS		1132367	1					
ANR	1132708	InclusiveOrExpression	1 | EX86_SHIFT_INS		1132367	0		|			
ANR	1132709	PrimaryExpression	1		1132367	0					
ANR	1132710	Identifier	EX86_SHIFT_INS		1132367	1					
ANR	1132711	Argument	SLJIT_IMM		1132367	2					
ANR	1132712	Identifier	SLJIT_IMM		1132367	0					
ANR	1132713	Argument	24		1132367	3					
ANR	1132714	PrimaryExpression	24		1132367	0					
ANR	1132715	Argument	dst		1132367	4					
ANR	1132716	Identifier	dst		1132367	0					
ANR	1132717	Argument	0		1132367	5					
ANR	1132718	PrimaryExpression	0		1132367	0					
ANR	1132719	ExpressionStatement	FAIL_IF ( ! inst )	943:4:26249:26263	1132367	4	True				
ANR	1132720	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132721	Callee	FAIL_IF		1132367	0					
ANR	1132722	Identifier	FAIL_IF		1132367	0					
ANR	1132723	ArgumentList	! inst		1132367	1					
ANR	1132724	Argument	! inst		1132367	0					
ANR	1132725	UnaryOperationExpression	! inst		1132367	0					
ANR	1132726	UnaryOperator	!		1132367	0					
ANR	1132727	Identifier	inst		1132367	1					
ANR	1132728	ExpressionStatement	* inst |= SAR	944:4:26269:26281	1132367	5	True				
ANR	1132729	AssignmentExpression	* inst |= SAR		1132367	0		|=			
ANR	1132730	UnaryOperationExpression	* inst		1132367	0					
ANR	1132731	UnaryOperator	*		1132367	0					
ANR	1132732	Identifier	inst		1132367	1					
ANR	1132733	Identifier	SAR		1132367	1					
ANR	1132734	ElseStatement	else		1132367	0					
ANR	1132735	CompoundStatement		70:8:1911:1911	1132367	0					
ANR	1132736	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 0xff , dst , 0 )"	947:4:26302:26382	1132367	0	True				
ANR	1132737	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 0xff , dst , 0 )"		1132367	0		=			
ANR	1132738	Identifier	inst		1132367	0					
ANR	1132739	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 0xff , dst , 0 )"		1132367	1					
ANR	1132740	Callee	emit_x86_instruction		1132367	0					
ANR	1132741	Identifier	emit_x86_instruction		1132367	0					
ANR	1132742	ArgumentList	compiler		1132367	1					
ANR	1132743	Argument	compiler		1132367	0					
ANR	1132744	Identifier	compiler		1132367	0					
ANR	1132745	Argument	1 | EX86_BIN_INS		1132367	1					
ANR	1132746	InclusiveOrExpression	1 | EX86_BIN_INS		1132367	0		|			
ANR	1132747	PrimaryExpression	1		1132367	0					
ANR	1132748	Identifier	EX86_BIN_INS		1132367	1					
ANR	1132749	Argument	SLJIT_IMM		1132367	2					
ANR	1132750	Identifier	SLJIT_IMM		1132367	0					
ANR	1132751	Argument	0xff		1132367	3					
ANR	1132752	PrimaryExpression	0xff		1132367	0					
ANR	1132753	Argument	dst		1132367	4					
ANR	1132754	Identifier	dst		1132367	0					
ANR	1132755	Argument	0		1132367	5					
ANR	1132756	PrimaryExpression	0		1132367	0					
ANR	1132757	ExpressionStatement	FAIL_IF ( ! inst )	948:4:26388:26402	1132367	1	True				
ANR	1132758	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132759	Callee	FAIL_IF		1132367	0					
ANR	1132760	Identifier	FAIL_IF		1132367	0					
ANR	1132761	ArgumentList	! inst		1132367	1					
ANR	1132762	Argument	! inst		1132367	0					
ANR	1132763	UnaryOperationExpression	! inst		1132367	0					
ANR	1132764	UnaryOperator	!		1132367	0					
ANR	1132765	Identifier	inst		1132367	1					
ANR	1132766	ExpressionStatement	* ( inst + 1 ) |= AND	949:4:26408:26426	1132367	2	True				
ANR	1132767	AssignmentExpression	* ( inst + 1 ) |= AND		1132367	0		|=			
ANR	1132768	UnaryOperationExpression	* ( inst + 1 )		1132367	0					
ANR	1132769	UnaryOperator	*		1132367	0					
ANR	1132770	AdditiveExpression	inst + 1		1132367	1		+			
ANR	1132771	Identifier	inst		1132367	0					
ANR	1132772	PrimaryExpression	1		1132367	1					
ANR	1132773	Identifier	AND		1132367	1					
ANR	1132774	ReturnStatement	return SLJIT_SUCCESS ;	952:2:26439:26459	1132367	2	True				
ANR	1132775	Identifier	SLJIT_SUCCESS		1132367	0					
ANR	1132776	ElseStatement	else		1132367	0					
ANR	1132777	CompoundStatement		79:6:2092:2092	1132367	0					
ANR	1132778	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"	957:2:26557:26618	1132367	0	True				
ANR	1132779	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1132367	0		=			
ANR	1132780	Identifier	inst		1132367	0					
ANR	1132781	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1132367	1					
ANR	1132782	Callee	emit_x86_instruction		1132367	0					
ANR	1132783	Identifier	emit_x86_instruction		1132367	0					
ANR	1132784	ArgumentList	compiler		1132367	1					
ANR	1132785	Argument	compiler		1132367	0					
ANR	1132786	Identifier	compiler		1132367	0					
ANR	1132787	Argument	2		1132367	1					
ANR	1132788	PrimaryExpression	2		1132367	0					
ANR	1132789	Argument	dst_r		1132367	2					
ANR	1132790	Identifier	dst_r		1132367	0					
ANR	1132791	Argument	0		1132367	3					
ANR	1132792	PrimaryExpression	0		1132367	0					
ANR	1132793	Argument	src		1132367	4					
ANR	1132794	Identifier	src		1132367	0					
ANR	1132795	Argument	srcw		1132367	5					
ANR	1132796	Identifier	srcw		1132367	0					
ANR	1132797	ExpressionStatement	FAIL_IF ( ! inst )	958:2:26622:26636	1132367	1	True				
ANR	1132798	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132799	Callee	FAIL_IF		1132367	0					
ANR	1132800	Identifier	FAIL_IF		1132367	0					
ANR	1132801	ArgumentList	! inst		1132367	1					
ANR	1132802	Argument	! inst		1132367	0					
ANR	1132803	UnaryOperationExpression	! inst		1132367	0					
ANR	1132804	UnaryOperator	!		1132367	0					
ANR	1132805	Identifier	inst		1132367	1					
ANR	1132806	ExpressionStatement	* inst ++ = GROUP_0F	959:2:26640:26658	1132367	2	True				
ANR	1132807	AssignmentExpression	* inst ++ = GROUP_0F		1132367	0		=			
ANR	1132808	UnaryOperationExpression	* inst ++		1132367	0					
ANR	1132809	UnaryOperator	*		1132367	0					
ANR	1132810	PostIncDecOperationExpression	inst ++		1132367	1					
ANR	1132811	Identifier	inst		1132367	0					
ANR	1132812	IncDec	++		1132367	1					
ANR	1132813	Identifier	GROUP_0F		1132367	1					
ANR	1132814	ExpressionStatement	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8	960:2:26662:26702	1132367	3	True				
ANR	1132815	AssignmentExpression	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1132367	0		=			
ANR	1132816	UnaryOperationExpression	* inst		1132367	0					
ANR	1132817	UnaryOperator	*		1132367	0					
ANR	1132818	Identifier	inst		1132367	1					
ANR	1132819	ConditionalExpression	sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1132367	1					
ANR	1132820	Condition	sign		1132367	0					
ANR	1132821	Identifier	sign		1132367	0					
ANR	1132822	Identifier	MOVSX_r_rm8		1132367	1					
ANR	1132823	Identifier	MOVZX_r_rm8		1132367	2					
ANR	1132824	IfStatement	if ( dst & SLJIT_MEM )		1132367	8					
ANR	1132825	Condition	dst & SLJIT_MEM	963:5:26713:26727	1132367	0	True				
ANR	1132826	BitAndExpression	dst & SLJIT_MEM		1132367	0		&			
ANR	1132827	Identifier	dst		1132367	0					
ANR	1132828	Identifier	SLJIT_MEM		1132367	1					
ANR	1132829	CompoundStatement		87:22:2345:2345	1132367	1					
ANR	1132830	IfStatement	if ( dst_r == TMP_REG1 )		1132367	0					
ANR	1132831	Condition	dst_r == TMP_REG1	965:6:26795:26811	1132367	0	True				
ANR	1132832	EqualityExpression	dst_r == TMP_REG1		1132367	0		==			
ANR	1132833	Identifier	dst_r		1132367	0					
ANR	1132834	Identifier	TMP_REG1		1132367	1					
ANR	1132835	CompoundStatement		89:25:2429:2429	1132367	1					
ANR	1132836	IfStatement	if ( ( dst & REG_MASK ) == SLJIT_R0 )		1132367	0					
ANR	1132837	Condition	( dst & REG_MASK ) == SLJIT_R0	967:7:26882:26909	1132367	0	True				
ANR	1132838	EqualityExpression	( dst & REG_MASK ) == SLJIT_R0		1132367	0		==			
ANR	1132839	BitAndExpression	dst & REG_MASK		1132367	0		&			
ANR	1132840	Identifier	dst		1132367	0					
ANR	1132841	Identifier	REG_MASK		1132367	1					
ANR	1132842	Identifier	SLJIT_R0		1132367	1					
ANR	1132843	CompoundStatement		91:37:2527:2527	1132367	1					
ANR	1132844	IfStatement	if ( ( dst & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_R1 ) )		1132367	0					
ANR	1132845	Condition	( dst & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_R1 )	968:8:26922:26967	1132367	0	True				
ANR	1132846	EqualityExpression	( dst & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_R1 )		1132367	0		==			
ANR	1132847	BitAndExpression	dst & OFFS_REG_MASK		1132367	0		&			
ANR	1132848	Identifier	dst		1132367	0					
ANR	1132849	Identifier	OFFS_REG_MASK		1132367	1					
ANR	1132850	CallExpression	TO_OFFS_REG ( SLJIT_R1 )		1132367	1					
ANR	1132851	Callee	TO_OFFS_REG		1132367	0					
ANR	1132852	Identifier	TO_OFFS_REG		1132367	0					
ANR	1132853	ArgumentList	SLJIT_R1		1132367	1					
ANR	1132854	Argument	SLJIT_R1		1132367	0					
ANR	1132855	Identifier	SLJIT_R1		1132367	0					
ANR	1132856	ExpressionStatement	work_r = SLJIT_R2	969:5:26975:26992	1132367	1	True				
ANR	1132857	AssignmentExpression	work_r = SLJIT_R2		1132367	0		=			
ANR	1132858	Identifier	work_r		1132367	0					
ANR	1132859	Identifier	SLJIT_R2		1132367	1					
ANR	1132860	ElseStatement	else		1132367	0					
ANR	1132861	ExpressionStatement	work_r = SLJIT_R1	971:5:27008:27025	1132367	0	True				
ANR	1132862	AssignmentExpression	work_r = SLJIT_R1		1132367	0		=			
ANR	1132863	Identifier	work_r		1132367	0					
ANR	1132864	Identifier	SLJIT_R1		1132367	1					
ANR	1132865	ElseStatement	else		1132367	0					
ANR	1132866	CompoundStatement		97:8:2655:2655	1132367	0					
ANR	1132867	IfStatement	if ( ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 ) )		1132367	0					
ANR	1132868	Condition	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )	974:8:27050:27095	1132367	0	True				
ANR	1132869	EqualityExpression	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )		1132367	0		!=			
ANR	1132870	BitAndExpression	dst & OFFS_REG_MASK		1132367	0		&			
ANR	1132871	Identifier	dst		1132367	0					
ANR	1132872	Identifier	OFFS_REG_MASK		1132367	1					
ANR	1132873	CallExpression	TO_OFFS_REG ( SLJIT_R0 )		1132367	1					
ANR	1132874	Callee	TO_OFFS_REG		1132367	0					
ANR	1132875	Identifier	TO_OFFS_REG		1132367	0					
ANR	1132876	ArgumentList	SLJIT_R0		1132367	1					
ANR	1132877	Argument	SLJIT_R0		1132367	0					
ANR	1132878	Identifier	SLJIT_R0		1132367	0					
ANR	1132879	ExpressionStatement	work_r = SLJIT_R0	975:5:27103:27120	1132367	1	True				
ANR	1132880	AssignmentExpression	work_r = SLJIT_R0		1132367	0		=			
ANR	1132881	Identifier	work_r		1132367	0					
ANR	1132882	Identifier	SLJIT_R0		1132367	1					
ANR	1132883	ElseStatement	else		1132367	0					
ANR	1132884	IfStatement	if ( ( dst & REG_MASK ) == SLJIT_R1 )		1132367	0					
ANR	1132885	Condition	( dst & REG_MASK ) == SLJIT_R1	976:13:27135:27162	1132367	0	True				
ANR	1132886	EqualityExpression	( dst & REG_MASK ) == SLJIT_R1		1132367	0		==			
ANR	1132887	BitAndExpression	dst & REG_MASK		1132367	0		&			
ANR	1132888	Identifier	dst		1132367	0					
ANR	1132889	Identifier	REG_MASK		1132367	1					
ANR	1132890	Identifier	SLJIT_R1		1132367	1					
ANR	1132891	ExpressionStatement	work_r = SLJIT_R2	977:5:27170:27187	1132367	1	True				
ANR	1132892	AssignmentExpression	work_r = SLJIT_R2		1132367	0		=			
ANR	1132893	Identifier	work_r		1132367	0					
ANR	1132894	Identifier	SLJIT_R2		1132367	1					
ANR	1132895	ElseStatement	else		1132367	0					
ANR	1132896	ExpressionStatement	work_r = SLJIT_R1	979:5:27203:27220	1132367	0	True				
ANR	1132897	AssignmentExpression	work_r = SLJIT_R1		1132367	0		=			
ANR	1132898	Identifier	work_r		1132367	0					
ANR	1132899	Identifier	SLJIT_R1		1132367	1					
ANR	1132900	IfStatement	if ( work_r == SLJIT_R0 )		1132367	1					
ANR	1132901	Condition	work_r == SLJIT_R0	982:7:27235:27252	1132367	0	True				
ANR	1132902	EqualityExpression	work_r == SLJIT_R0		1132367	0		==			
ANR	1132903	Identifier	work_r		1132367	0					
ANR	1132904	Identifier	SLJIT_R0		1132367	1					
ANR	1132905	CompoundStatement		106:27:2870:2870	1132367	1					
ANR	1132906	ExpressionStatement	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )	983:4:27261:27306	1132367	0	True				
ANR	1132907	CallExpression	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )		1132367	0					
ANR	1132908	Callee	ENCODE_PREFIX		1132367	0					
ANR	1132909	Identifier	ENCODE_PREFIX		1132367	0					
ANR	1132910	ArgumentList	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1132367	1					
ANR	1132911	Argument	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1132367	0					
ANR	1132912	AdditiveExpression	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1132367	0		+			
ANR	1132913	Identifier	XCHG_EAX_r		1132367	0					
ANR	1132914	ArrayIndexing	reg_map [ TMP_REG1 ]		1132367	1					
ANR	1132915	Identifier	reg_map		1132367	0					
ANR	1132916	Identifier	TMP_REG1		1132367	1					
ANR	1132917	ElseStatement	else		1132367	0					
ANR	1132918	CompoundStatement		109:8:2936:2936	1132367	0					
ANR	1132919	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"	986:4:27327:27388	1132367	0	True				
ANR	1132920	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1132367	0		=			
ANR	1132921	Identifier	inst		1132367	0					
ANR	1132922	CallExpression	"emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1132367	1					
ANR	1132923	Callee	emit_x86_instruction		1132367	0					
ANR	1132924	Identifier	emit_x86_instruction		1132367	0					
ANR	1132925	ArgumentList	compiler		1132367	1					
ANR	1132926	Argument	compiler		1132367	0					
ANR	1132927	Identifier	compiler		1132367	0					
ANR	1132928	Argument	1		1132367	1					
ANR	1132929	PrimaryExpression	1		1132367	0					
ANR	1132930	Argument	work_r		1132367	2					
ANR	1132931	Identifier	work_r		1132367	0					
ANR	1132932	Argument	0		1132367	3					
ANR	1132933	PrimaryExpression	0		1132367	0					
ANR	1132934	Argument	dst_r		1132367	4					
ANR	1132935	Identifier	dst_r		1132367	0					
ANR	1132936	Argument	0		1132367	5					
ANR	1132937	PrimaryExpression	0		1132367	0					
ANR	1132938	ExpressionStatement	FAIL_IF ( ! inst )	987:4:27394:27408	1132367	1	True				
ANR	1132939	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132940	Callee	FAIL_IF		1132367	0					
ANR	1132941	Identifier	FAIL_IF		1132367	0					
ANR	1132942	ArgumentList	! inst		1132367	1					
ANR	1132943	Argument	! inst		1132367	0					
ANR	1132944	UnaryOperationExpression	! inst		1132367	0					
ANR	1132945	UnaryOperator	!		1132367	0					
ANR	1132946	Identifier	inst		1132367	1					
ANR	1132947	ExpressionStatement	* inst = XCHG_r_rm	988:4:27414:27431	1132367	2	True				
ANR	1132948	AssignmentExpression	* inst = XCHG_r_rm		1132367	0		=			
ANR	1132949	UnaryOperationExpression	* inst		1132367	0					
ANR	1132950	UnaryOperator	*		1132367	0					
ANR	1132951	Identifier	inst		1132367	1					
ANR	1132952	Identifier	XCHG_r_rm		1132367	1					
ANR	1132953	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst , dstw )"	991:3:27442:27504	1132367	2	True				
ANR	1132954	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst , dstw )"		1132367	0		=			
ANR	1132955	Identifier	inst		1132367	0					
ANR	1132956	CallExpression	"emit_x86_instruction ( compiler , 1 , work_r , 0 , dst , dstw )"		1132367	1					
ANR	1132957	Callee	emit_x86_instruction		1132367	0					
ANR	1132958	Identifier	emit_x86_instruction		1132367	0					
ANR	1132959	ArgumentList	compiler		1132367	1					
ANR	1132960	Argument	compiler		1132367	0					
ANR	1132961	Identifier	compiler		1132367	0					
ANR	1132962	Argument	1		1132367	1					
ANR	1132963	PrimaryExpression	1		1132367	0					
ANR	1132964	Argument	work_r		1132367	2					
ANR	1132965	Identifier	work_r		1132367	0					
ANR	1132966	Argument	0		1132367	3					
ANR	1132967	PrimaryExpression	0		1132367	0					
ANR	1132968	Argument	dst		1132367	4					
ANR	1132969	Identifier	dst		1132367	0					
ANR	1132970	Argument	dstw		1132367	5					
ANR	1132971	Identifier	dstw		1132367	0					
ANR	1132972	ExpressionStatement	FAIL_IF ( ! inst )	992:3:27509:27523	1132367	3	True				
ANR	1132973	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1132974	Callee	FAIL_IF		1132367	0					
ANR	1132975	Identifier	FAIL_IF		1132367	0					
ANR	1132976	ArgumentList	! inst		1132367	1					
ANR	1132977	Argument	! inst		1132367	0					
ANR	1132978	UnaryOperationExpression	! inst		1132367	0					
ANR	1132979	UnaryOperator	!		1132367	0					
ANR	1132980	Identifier	inst		1132367	1					
ANR	1132981	ExpressionStatement	* inst = MOV_rm8_r8	993:3:27528:27546	1132367	4	True				
ANR	1132982	AssignmentExpression	* inst = MOV_rm8_r8		1132367	0		=			
ANR	1132983	UnaryOperationExpression	* inst		1132367	0					
ANR	1132984	UnaryOperator	*		1132367	0					
ANR	1132985	Identifier	inst		1132367	1					
ANR	1132986	Identifier	MOV_rm8_r8		1132367	1					
ANR	1132987	IfStatement	if ( work_r == SLJIT_R0 )		1132367	5					
ANR	1132988	Condition	work_r == SLJIT_R0	995:7:27556:27573	1132367	0	True				
ANR	1132989	EqualityExpression	work_r == SLJIT_R0		1132367	0		==			
ANR	1132990	Identifier	work_r		1132367	0					
ANR	1132991	Identifier	SLJIT_R0		1132367	1					
ANR	1132992	CompoundStatement		119:27:3191:3191	1132367	1					
ANR	1132993	ExpressionStatement	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )	996:4:27582:27627	1132367	0	True				
ANR	1132994	CallExpression	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )		1132367	0					
ANR	1132995	Callee	ENCODE_PREFIX		1132367	0					
ANR	1132996	Identifier	ENCODE_PREFIX		1132367	0					
ANR	1132997	ArgumentList	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1132367	1					
ANR	1132998	Argument	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1132367	0					
ANR	1132999	AdditiveExpression	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1132367	0		+			
ANR	1133000	Identifier	XCHG_EAX_r		1132367	0					
ANR	1133001	ArrayIndexing	reg_map [ TMP_REG1 ]		1132367	1					
ANR	1133002	Identifier	reg_map		1132367	0					
ANR	1133003	Identifier	TMP_REG1		1132367	1					
ANR	1133004	ElseStatement	else		1132367	0					
ANR	1133005	CompoundStatement		122:8:3257:3257	1132367	0					
ANR	1133006	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"	999:4:27648:27709	1132367	0	True				
ANR	1133007	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1132367	0		=			
ANR	1133008	Identifier	inst		1132367	0					
ANR	1133009	CallExpression	"emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1132367	1					
ANR	1133010	Callee	emit_x86_instruction		1132367	0					
ANR	1133011	Identifier	emit_x86_instruction		1132367	0					
ANR	1133012	ArgumentList	compiler		1132367	1					
ANR	1133013	Argument	compiler		1132367	0					
ANR	1133014	Identifier	compiler		1132367	0					
ANR	1133015	Argument	1		1132367	1					
ANR	1133016	PrimaryExpression	1		1132367	0					
ANR	1133017	Argument	work_r		1132367	2					
ANR	1133018	Identifier	work_r		1132367	0					
ANR	1133019	Argument	0		1132367	3					
ANR	1133020	PrimaryExpression	0		1132367	0					
ANR	1133021	Argument	dst_r		1132367	4					
ANR	1133022	Identifier	dst_r		1132367	0					
ANR	1133023	Argument	0		1132367	5					
ANR	1133024	PrimaryExpression	0		1132367	0					
ANR	1133025	ExpressionStatement	FAIL_IF ( ! inst )	1000:4:27715:27729	1132367	1	True				
ANR	1133026	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1133027	Callee	FAIL_IF		1132367	0					
ANR	1133028	Identifier	FAIL_IF		1132367	0					
ANR	1133029	ArgumentList	! inst		1132367	1					
ANR	1133030	Argument	! inst		1132367	0					
ANR	1133031	UnaryOperationExpression	! inst		1132367	0					
ANR	1133032	UnaryOperator	!		1132367	0					
ANR	1133033	Identifier	inst		1132367	1					
ANR	1133034	ExpressionStatement	* inst = XCHG_r_rm	1001:4:27735:27752	1132367	2	True				
ANR	1133035	AssignmentExpression	* inst = XCHG_r_rm		1132367	0		=			
ANR	1133036	UnaryOperationExpression	* inst		1132367	0					
ANR	1133037	UnaryOperator	*		1132367	0					
ANR	1133038	Identifier	inst		1132367	1					
ANR	1133039	Identifier	XCHG_r_rm		1132367	1					
ANR	1133040	ElseStatement	else		1132367	0					
ANR	1133041	CompoundStatement		128:7:3385:3385	1132367	0					
ANR	1133042	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"	1005:3:27775:27836	1132367	0	True				
ANR	1133043	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1132367	0		=			
ANR	1133044	Identifier	inst		1132367	0					
ANR	1133045	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1132367	1					
ANR	1133046	Callee	emit_x86_instruction		1132367	0					
ANR	1133047	Identifier	emit_x86_instruction		1132367	0					
ANR	1133048	ArgumentList	compiler		1132367	1					
ANR	1133049	Argument	compiler		1132367	0					
ANR	1133050	Identifier	compiler		1132367	0					
ANR	1133051	Argument	1		1132367	1					
ANR	1133052	PrimaryExpression	1		1132367	0					
ANR	1133053	Argument	dst_r		1132367	2					
ANR	1133054	Identifier	dst_r		1132367	0					
ANR	1133055	Argument	0		1132367	3					
ANR	1133056	PrimaryExpression	0		1132367	0					
ANR	1133057	Argument	dst		1132367	4					
ANR	1133058	Identifier	dst		1132367	0					
ANR	1133059	Argument	dstw		1132367	5					
ANR	1133060	Identifier	dstw		1132367	0					
ANR	1133061	ExpressionStatement	FAIL_IF ( ! inst )	1006:3:27841:27855	1132367	1	True				
ANR	1133062	CallExpression	FAIL_IF ( ! inst )		1132367	0					
ANR	1133063	Callee	FAIL_IF		1132367	0					
ANR	1133064	Identifier	FAIL_IF		1132367	0					
ANR	1133065	ArgumentList	! inst		1132367	1					
ANR	1133066	Argument	! inst		1132367	0					
ANR	1133067	UnaryOperationExpression	! inst		1132367	0					
ANR	1133068	UnaryOperator	!		1132367	0					
ANR	1133069	Identifier	inst		1132367	1					
ANR	1133070	ExpressionStatement	* inst = MOV_rm8_r8	1007:3:27860:27878	1132367	2	True				
ANR	1133071	AssignmentExpression	* inst = MOV_rm8_r8		1132367	0		=			
ANR	1133072	UnaryOperationExpression	* inst		1132367	0					
ANR	1133073	UnaryOperator	*		1132367	0					
ANR	1133074	Identifier	inst		1132367	1					
ANR	1133075	Identifier	MOV_rm8_r8		1132367	1					
ANR	1133076	ReturnStatement	return SLJIT_SUCCESS ;	1016:1:28033:28053	1132367	9	True				
ANR	1133077	Identifier	SLJIT_SUCCESS		1132367	0					
ANR	1133078	ReturnType	static sljit_si		1132367	1					
ANR	1133079	Identifier	emit_mov_byte		1132367	2					
ANR	1133080	ParameterList	"struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1132367	3					
ANR	1133081	Parameter	struct sljit_compiler * compiler	874:30:24276:24306	1132367	0	True				
ANR	1133082	ParameterType	struct sljit_compiler *		1132367	0					
ANR	1133083	Identifier	compiler		1132367	1					
ANR	1133084	Parameter	sljit_si sign	874:63:24309:24321	1132367	1	True				
ANR	1133085	ParameterType	sljit_si		1132367	0					
ANR	1133086	Identifier	sign		1132367	1					
ANR	1133087	Parameter	sljit_si dst	875:1:24325:24336	1132367	2	True				
ANR	1133088	ParameterType	sljit_si		1132367	0					
ANR	1133089	Identifier	dst		1132367	1					
ANR	1133090	Parameter	sljit_sw dstw	875:15:24339:24351	1132367	3	True				
ANR	1133091	ParameterType	sljit_sw		1132367	0					
ANR	1133092	Identifier	dstw		1132367	1					
ANR	1133093	Parameter	sljit_si src	876:1:24355:24366	1132367	4	True				
ANR	1133094	ParameterType	sljit_si		1132367	0					
ANR	1133095	Identifier	src		1132367	1					
ANR	1133096	Parameter	sljit_sw srcw	876:15:24369:24381	1132367	5	True				
ANR	1133097	ParameterType	sljit_sw		1132367	0					
ANR	1133098	Identifier	srcw		1132367	1					
ANR	1133099	CFGEntryNode	ENTRY		1132367		True				
ANR	1133100	CFGExitNode	EXIT		1132367		True				
ANR	1133101	Symbol	TMP_REG1		1132367						
ANR	1133102	Symbol	XCHG_EAX_r		1132367						
ANR	1133103	Symbol	SLJIT_MEM		1132367						
ANR	1133104	Symbol	EX86_NO_REXW		1132367						
ANR	1133105	Symbol	sign		1132367						
ANR	1133106	Symbol	* inst ++		1132367						
ANR	1133107	Symbol	reg_map		1132367						
ANR	1133108	Symbol	SLOW_IS_REG		1132367						
ANR	1133109	Symbol	* compiler		1132367						
ANR	1133110	Symbol	MOVSX_r_rm8		1132367						
ANR	1133111	Symbol	SLJIT_R1		1132367						
ANR	1133112	Symbol	MOVZX_r_rm8		1132367						
ANR	1133113	Symbol	SLJIT_R2		1132367						
ANR	1133114	Symbol	* src		1132367						
ANR	1133115	Symbol	SLJIT_R0		1132367						
ANR	1133116	Symbol	* dst		1132367						
ANR	1133117	Symbol	SLJIT_IMM		1132367						
ANR	1133118	Symbol	SHL		1132367						
ANR	1133119	Symbol	* TMP_REG1		1132367						
ANR	1133120	Symbol	GROUP_0F		1132367						
ANR	1133121	Symbol	FAST_IS_REG		1132367						
ANR	1133122	Symbol	srcw		1132367						
ANR	1133123	Symbol	work_r		1132367						
ANR	1133124	Symbol	OFFS_REG_MASK		1132367						
ANR	1133125	Symbol	* reg_map		1132367						
ANR	1133126	Symbol	EX86_SHIFT_INS		1132367						
ANR	1133127	Symbol	AND		1132367						
ANR	1133128	Symbol	EX86_BYTE_ARG		1132367						
ANR	1133129	Symbol	MOV_rm8_r8		1132367						
ANR	1133130	Symbol	dst		1132367						
ANR	1133131	Symbol	SAR		1132367						
ANR	1133132	Symbol	MOV_r_i32		1132367						
ANR	1133133	Symbol	dst_r		1132367						
ANR	1133134	Symbol	XCHG_r_rm		1132367						
ANR	1133135	Symbol	MOV_rm8_i8		1132367						
ANR	1133136	Symbol	EX86_BIN_INS		1132367						
ANR	1133137	Symbol	compiler		1132367						
ANR	1133138	Symbol	TO_OFFS_REG		1132367						
ANR	1133139	Symbol	emit_x86_instruction		1132367						
ANR	1133140	Symbol	REG_MASK		1132367						
ANR	1133141	Symbol	* inst		1132367						
ANR	1133142	Symbol	src		1132367						
ANR	1133143	Symbol	SLJIT_SUCCESS		1132367						
ANR	1133144	Symbol	SLJIT_UNUSED		1132367						
ANR	1133145	Symbol	emit_do_imm		1132367						
ANR	1133146	Symbol	inst		1132367						
ANR	1133147	Symbol	compiler -> mode32		1132367						
ANR	1133148	Symbol	* ( inst + 1 )		1132367						
ANR	1133149	Symbol	dstw		1132367						
ANR	1133150	Function	emit_mov_half	1019:0:28058:29382							
ANR	1133151	FunctionDef	"emit_mov_half (struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1133150	0					
ANR	1133152	CompoundStatement		1022:0:28196:29382	1133150	0					
ANR	1133153	IdentifierDeclStatement	sljit_ub * inst ;	1023:1:28199:28213	1133150	0	True				
ANR	1133154	IdentifierDecl	* inst		1133150	0					
ANR	1133155	IdentifierDeclType	sljit_ub *		1133150	0					
ANR	1133156	Identifier	inst		1133150	1					
ANR	1133157	IdentifierDeclStatement	sljit_si dst_r ;	1024:1:28216:28230	1133150	1	True				
ANR	1133158	IdentifierDecl	dst_r		1133150	0					
ANR	1133159	IdentifierDeclType	sljit_si		1133150	0					
ANR	1133160	Identifier	dst_r		1133150	1					
ANR	1133161	ExpressionStatement	compiler -> mode32 = 0	1027:1:28291:28311	1133150	2	True				
ANR	1133162	AssignmentExpression	compiler -> mode32 = 0		1133150	0		=			
ANR	1133163	PtrMemberAccess	compiler -> mode32		1133150	0					
ANR	1133164	Identifier	compiler		1133150	0					
ANR	1133165	Identifier	mode32		1133150	1					
ANR	1133166	PrimaryExpression	0		1133150	1					
ANR	1133167	IfStatement	if ( dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM ) )		1133150	3					
ANR	1133168	Condition	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )	1030:5:28326:28366	1133150	0	True				
ANR	1133169	AndExpression	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )		1133150	0		&&			
ANR	1133170	EqualityExpression	dst == SLJIT_UNUSED		1133150	0		==			
ANR	1133171	Identifier	dst		1133150	0					
ANR	1133172	Identifier	SLJIT_UNUSED		1133150	1					
ANR	1133173	UnaryOperationExpression	! ( src & SLJIT_MEM )		1133150	1					
ANR	1133174	UnaryOperator	!		1133150	0					
ANR	1133175	BitAndExpression	src & SLJIT_MEM		1133150	1		&			
ANR	1133176	Identifier	src		1133150	0					
ANR	1133177	Identifier	SLJIT_MEM		1133150	1					
ANR	1133178	ReturnStatement	return SLJIT_SUCCESS ;	1031:2:28371:28391	1133150	1	True				
ANR	1133179	Identifier	SLJIT_SUCCESS		1133150	0					
ANR	1133180	IfStatement	if ( src & SLJIT_IMM )		1133150	4					
ANR	1133181	Condition	src & SLJIT_IMM	1033:5:28424:28438	1133150	0	True				
ANR	1133182	BitAndExpression	src & SLJIT_IMM		1133150	0		&			
ANR	1133183	Identifier	src		1133150	0					
ANR	1133184	Identifier	SLJIT_IMM		1133150	1					
ANR	1133185	CompoundStatement		12:22:244:244	1133150	1					
ANR	1133186	IfStatement	if ( FAST_IS_REG ( dst ) )		1133150	0					
ANR	1133187	Condition	FAST_IS_REG ( dst )	1034:6:28449:28464	1133150	0	True				
ANR	1133188	CallExpression	FAST_IS_REG ( dst )		1133150	0					
ANR	1133189	Callee	FAST_IS_REG		1133150	0					
ANR	1133190	Identifier	FAST_IS_REG		1133150	0					
ANR	1133191	ArgumentList	dst		1133150	1					
ANR	1133192	Argument	dst		1133150	0					
ANR	1133193	Identifier	dst		1133150	0					
ANR	1133194	CompoundStatement		13:24:270:270	1133150	1					
ANR	1133195	ReturnStatement	"return emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw ) ;"	1036:3:28529:28589	1133150	0	True				
ANR	1133196	CallExpression	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw )"		1133150	0					
ANR	1133197	Callee	emit_do_imm		1133150	0					
ANR	1133198	Identifier	emit_do_imm		1133150	0					
ANR	1133199	ArgumentList	compiler		1133150	1					
ANR	1133200	Argument	compiler		1133150	0					
ANR	1133201	Identifier	compiler		1133150	0					
ANR	1133202	Argument	MOV_r_i32 + reg_map [ dst ]		1133150	1					
ANR	1133203	AdditiveExpression	MOV_r_i32 + reg_map [ dst ]		1133150	0		+			
ANR	1133204	Identifier	MOV_r_i32		1133150	0					
ANR	1133205	ArrayIndexing	reg_map [ dst ]		1133150	1					
ANR	1133206	Identifier	reg_map		1133150	0					
ANR	1133207	Identifier	dst		1133150	1					
ANR	1133208	Argument	srcw		1133150	2					
ANR	1133209	Identifier	srcw		1133150	0					
ANR	1133210	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66 , SLJIT_IMM , srcw , dst , dstw )"	1044:2:28747:28861	1133150	1	True				
ANR	1133211	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66 , SLJIT_IMM , srcw , dst , dstw )"		1133150	0		=			
ANR	1133212	Identifier	inst		1133150	0					
ANR	1133213	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66 , SLJIT_IMM , srcw , dst , dstw )"		1133150	1					
ANR	1133214	Callee	emit_x86_instruction		1133150	0					
ANR	1133215	Identifier	emit_x86_instruction		1133150	0					
ANR	1133216	ArgumentList	compiler		1133150	1					
ANR	1133217	Argument	compiler		1133150	0					
ANR	1133218	Identifier	compiler		1133150	0					
ANR	1133219	Argument	1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66		1133150	1					
ANR	1133220	InclusiveOrExpression	1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66		1133150	0		|			
ANR	1133221	PrimaryExpression	1		1133150	0					
ANR	1133222	InclusiveOrExpression	EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66		1133150	1		|			
ANR	1133223	Identifier	EX86_HALF_ARG		1133150	0					
ANR	1133224	InclusiveOrExpression	EX86_NO_REXW | EX86_PREF_66		1133150	1		|			
ANR	1133225	Identifier	EX86_NO_REXW		1133150	0					
ANR	1133226	Identifier	EX86_PREF_66		1133150	1					
ANR	1133227	Argument	SLJIT_IMM		1133150	2					
ANR	1133228	Identifier	SLJIT_IMM		1133150	0					
ANR	1133229	Argument	srcw		1133150	3					
ANR	1133230	Identifier	srcw		1133150	0					
ANR	1133231	Argument	dst		1133150	4					
ANR	1133232	Identifier	dst		1133150	0					
ANR	1133233	Argument	dstw		1133150	5					
ANR	1133234	Identifier	dstw		1133150	0					
ANR	1133235	ExpressionStatement	FAIL_IF ( ! inst )	1045:2:28865:28879	1133150	2	True				
ANR	1133236	CallExpression	FAIL_IF ( ! inst )		1133150	0					
ANR	1133237	Callee	FAIL_IF		1133150	0					
ANR	1133238	Identifier	FAIL_IF		1133150	0					
ANR	1133239	ArgumentList	! inst		1133150	1					
ANR	1133240	Argument	! inst		1133150	0					
ANR	1133241	UnaryOperationExpression	! inst		1133150	0					
ANR	1133242	UnaryOperator	!		1133150	0					
ANR	1133243	Identifier	inst		1133150	1					
ANR	1133244	ExpressionStatement	* inst = MOV_rm_i32	1046:2:28883:28901	1133150	3	True				
ANR	1133245	AssignmentExpression	* inst = MOV_rm_i32		1133150	0		=			
ANR	1133246	UnaryOperationExpression	* inst		1133150	0					
ANR	1133247	UnaryOperator	*		1133150	0					
ANR	1133248	Identifier	inst		1133150	1					
ANR	1133249	Identifier	MOV_rm_i32		1133150	1					
ANR	1133250	ReturnStatement	return SLJIT_SUCCESS ;	1047:2:28905:28925	1133150	4	True				
ANR	1133251	Identifier	SLJIT_SUCCESS		1133150	0					
ANR	1133252	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	1050:1:28932:28973	1133150	5	True				
ANR	1133253	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1133150	0		=			
ANR	1133254	Identifier	dst_r		1133150	0					
ANR	1133255	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1133150	1					
ANR	1133256	Condition	FAST_IS_REG ( dst )		1133150	0					
ANR	1133257	CallExpression	FAST_IS_REG ( dst )		1133150	0					
ANR	1133258	Callee	FAST_IS_REG		1133150	0					
ANR	1133259	Identifier	FAST_IS_REG		1133150	0					
ANR	1133260	ArgumentList	dst		1133150	1					
ANR	1133261	Argument	dst		1133150	0					
ANR	1133262	Identifier	dst		1133150	0					
ANR	1133263	Identifier	dst		1133150	1					
ANR	1133264	Identifier	TMP_REG1		1133150	2					
ANR	1133265	IfStatement	if ( ( dst & SLJIT_MEM ) && FAST_IS_REG ( src ) )		1133150	6					
ANR	1133266	Condition	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )	1052:5:28981:29017	1133150	0	True				
ANR	1133267	AndExpression	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )		1133150	0		&&			
ANR	1133268	BitAndExpression	dst & SLJIT_MEM		1133150	0		&			
ANR	1133269	Identifier	dst		1133150	0					
ANR	1133270	Identifier	SLJIT_MEM		1133150	1					
ANR	1133271	CallExpression	FAST_IS_REG ( src )		1133150	1					
ANR	1133272	Callee	FAST_IS_REG		1133150	0					
ANR	1133273	Identifier	FAST_IS_REG		1133150	0					
ANR	1133274	ArgumentList	src		1133150	1					
ANR	1133275	Argument	src		1133150	0					
ANR	1133276	Identifier	src		1133150	0					
ANR	1133277	ExpressionStatement	dst_r = src	1053:2:29022:29033	1133150	1	True				
ANR	1133278	AssignmentExpression	dst_r = src		1133150	0		=			
ANR	1133279	Identifier	dst_r		1133150	0					
ANR	1133280	Identifier	src		1133150	1					
ANR	1133281	ElseStatement	else		1133150	0					
ANR	1133282	CompoundStatement		33:6:844:844	1133150	0					
ANR	1133283	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"	1055:2:29045:29106	1133150	0	True				
ANR	1133284	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1133150	0		=			
ANR	1133285	Identifier	inst		1133150	0					
ANR	1133286	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1133150	1					
ANR	1133287	Callee	emit_x86_instruction		1133150	0					
ANR	1133288	Identifier	emit_x86_instruction		1133150	0					
ANR	1133289	ArgumentList	compiler		1133150	1					
ANR	1133290	Argument	compiler		1133150	0					
ANR	1133291	Identifier	compiler		1133150	0					
ANR	1133292	Argument	2		1133150	1					
ANR	1133293	PrimaryExpression	2		1133150	0					
ANR	1133294	Argument	dst_r		1133150	2					
ANR	1133295	Identifier	dst_r		1133150	0					
ANR	1133296	Argument	0		1133150	3					
ANR	1133297	PrimaryExpression	0		1133150	0					
ANR	1133298	Argument	src		1133150	4					
ANR	1133299	Identifier	src		1133150	0					
ANR	1133300	Argument	srcw		1133150	5					
ANR	1133301	Identifier	srcw		1133150	0					
ANR	1133302	ExpressionStatement	FAIL_IF ( ! inst )	1056:2:29110:29124	1133150	1	True				
ANR	1133303	CallExpression	FAIL_IF ( ! inst )		1133150	0					
ANR	1133304	Callee	FAIL_IF		1133150	0					
ANR	1133305	Identifier	FAIL_IF		1133150	0					
ANR	1133306	ArgumentList	! inst		1133150	1					
ANR	1133307	Argument	! inst		1133150	0					
ANR	1133308	UnaryOperationExpression	! inst		1133150	0					
ANR	1133309	UnaryOperator	!		1133150	0					
ANR	1133310	Identifier	inst		1133150	1					
ANR	1133311	ExpressionStatement	* inst ++ = GROUP_0F	1057:2:29128:29146	1133150	2	True				
ANR	1133312	AssignmentExpression	* inst ++ = GROUP_0F		1133150	0		=			
ANR	1133313	UnaryOperationExpression	* inst ++		1133150	0					
ANR	1133314	UnaryOperator	*		1133150	0					
ANR	1133315	PostIncDecOperationExpression	inst ++		1133150	1					
ANR	1133316	Identifier	inst		1133150	0					
ANR	1133317	IncDec	++		1133150	1					
ANR	1133318	Identifier	GROUP_0F		1133150	1					
ANR	1133319	ExpressionStatement	* inst = sign ? MOVSX_r_rm16 : MOVZX_r_rm16	1058:2:29150:29192	1133150	3	True				
ANR	1133320	AssignmentExpression	* inst = sign ? MOVSX_r_rm16 : MOVZX_r_rm16		1133150	0		=			
ANR	1133321	UnaryOperationExpression	* inst		1133150	0					
ANR	1133322	UnaryOperator	*		1133150	0					
ANR	1133323	Identifier	inst		1133150	1					
ANR	1133324	ConditionalExpression	sign ? MOVSX_r_rm16 : MOVZX_r_rm16		1133150	1					
ANR	1133325	Condition	sign		1133150	0					
ANR	1133326	Identifier	sign		1133150	0					
ANR	1133327	Identifier	MOVSX_r_rm16		1133150	1					
ANR	1133328	Identifier	MOVZX_r_rm16		1133150	2					
ANR	1133329	IfStatement	if ( dst & SLJIT_MEM )		1133150	7					
ANR	1133330	Condition	dst & SLJIT_MEM	1061:5:29203:29217	1133150	0	True				
ANR	1133331	BitAndExpression	dst & SLJIT_MEM		1133150	0		&			
ANR	1133332	Identifier	dst		1133150	0					
ANR	1133333	Identifier	SLJIT_MEM		1133150	1					
ANR	1133334	CompoundStatement		40:22:1023:1023	1133150	1					
ANR	1133335	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_NO_REXW | EX86_PREF_66 , dst_r , 0 , dst , dstw )"	1062:2:29224:29315	1133150	0	True				
ANR	1133336	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_NO_REXW | EX86_PREF_66 , dst_r , 0 , dst , dstw )"		1133150	0		=			
ANR	1133337	Identifier	inst		1133150	0					
ANR	1133338	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_NO_REXW | EX86_PREF_66 , dst_r , 0 , dst , dstw )"		1133150	1					
ANR	1133339	Callee	emit_x86_instruction		1133150	0					
ANR	1133340	Identifier	emit_x86_instruction		1133150	0					
ANR	1133341	ArgumentList	compiler		1133150	1					
ANR	1133342	Argument	compiler		1133150	0					
ANR	1133343	Identifier	compiler		1133150	0					
ANR	1133344	Argument	1 | EX86_NO_REXW | EX86_PREF_66		1133150	1					
ANR	1133345	InclusiveOrExpression	1 | EX86_NO_REXW | EX86_PREF_66		1133150	0		|			
ANR	1133346	PrimaryExpression	1		1133150	0					
ANR	1133347	InclusiveOrExpression	EX86_NO_REXW | EX86_PREF_66		1133150	1		|			
ANR	1133348	Identifier	EX86_NO_REXW		1133150	0					
ANR	1133349	Identifier	EX86_PREF_66		1133150	1					
ANR	1133350	Argument	dst_r		1133150	2					
ANR	1133351	Identifier	dst_r		1133150	0					
ANR	1133352	Argument	0		1133150	3					
ANR	1133353	PrimaryExpression	0		1133150	0					
ANR	1133354	Argument	dst		1133150	4					
ANR	1133355	Identifier	dst		1133150	0					
ANR	1133356	Argument	dstw		1133150	5					
ANR	1133357	Identifier	dstw		1133150	0					
ANR	1133358	ExpressionStatement	FAIL_IF ( ! inst )	1063:2:29319:29333	1133150	1	True				
ANR	1133359	CallExpression	FAIL_IF ( ! inst )		1133150	0					
ANR	1133360	Callee	FAIL_IF		1133150	0					
ANR	1133361	Identifier	FAIL_IF		1133150	0					
ANR	1133362	ArgumentList	! inst		1133150	1					
ANR	1133363	Argument	! inst		1133150	0					
ANR	1133364	UnaryOperationExpression	! inst		1133150	0					
ANR	1133365	UnaryOperator	!		1133150	0					
ANR	1133366	Identifier	inst		1133150	1					
ANR	1133367	ExpressionStatement	* inst = MOV_rm_r	1064:2:29337:29353	1133150	2	True				
ANR	1133368	AssignmentExpression	* inst = MOV_rm_r		1133150	0		=			
ANR	1133369	UnaryOperationExpression	* inst		1133150	0					
ANR	1133370	UnaryOperator	*		1133150	0					
ANR	1133371	Identifier	inst		1133150	1					
ANR	1133372	Identifier	MOV_rm_r		1133150	1					
ANR	1133373	ReturnStatement	return SLJIT_SUCCESS ;	1067:1:29360:29380	1133150	8	True				
ANR	1133374	Identifier	SLJIT_SUCCESS		1133150	0					
ANR	1133375	ReturnType	static sljit_si		1133150	1					
ANR	1133376	Identifier	emit_mov_half		1133150	2					
ANR	1133377	ParameterList	"struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1133150	3					
ANR	1133378	Parameter	struct sljit_compiler * compiler	1019:30:28088:28118	1133150	0	True				
ANR	1133379	ParameterType	struct sljit_compiler *		1133150	0					
ANR	1133380	Identifier	compiler		1133150	1					
ANR	1133381	Parameter	sljit_si sign	1019:63:28121:28133	1133150	1	True				
ANR	1133382	ParameterType	sljit_si		1133150	0					
ANR	1133383	Identifier	sign		1133150	1					
ANR	1133384	Parameter	sljit_si dst	1020:1:28137:28148	1133150	2	True				
ANR	1133385	ParameterType	sljit_si		1133150	0					
ANR	1133386	Identifier	dst		1133150	1					
ANR	1133387	Parameter	sljit_sw dstw	1020:15:28151:28163	1133150	3	True				
ANR	1133388	ParameterType	sljit_sw		1133150	0					
ANR	1133389	Identifier	dstw		1133150	1					
ANR	1133390	Parameter	sljit_si src	1021:1:28167:28178	1133150	4	True				
ANR	1133391	ParameterType	sljit_si		1133150	0					
ANR	1133392	Identifier	src		1133150	1					
ANR	1133393	Parameter	sljit_sw srcw	1021:15:28181:28193	1133150	5	True				
ANR	1133394	ParameterType	sljit_sw		1133150	0					
ANR	1133395	Identifier	srcw		1133150	1					
ANR	1133396	CFGEntryNode	ENTRY		1133150		True				
ANR	1133397	CFGExitNode	EXIT		1133150		True				
ANR	1133398	Symbol	TMP_REG1		1133150						
ANR	1133399	Symbol	dst		1133150						
ANR	1133400	Symbol	SLJIT_MEM		1133150						
ANR	1133401	Symbol	EX86_NO_REXW		1133150						
ANR	1133402	Symbol	sign		1133150						
ANR	1133403	Symbol	* inst ++		1133150						
ANR	1133404	Symbol	reg_map		1133150						
ANR	1133405	Symbol	MOV_r_i32		1133150						
ANR	1133406	Symbol	* compiler		1133150						
ANR	1133407	Symbol	dst_r		1133150						
ANR	1133408	Symbol	* dst		1133150						
ANR	1133409	Symbol	MOV_rm_i32		1133150						
ANR	1133410	Symbol	SLJIT_IMM		1133150						
ANR	1133411	Symbol	EX86_PREF_66		1133150						
ANR	1133412	Symbol	compiler		1133150						
ANR	1133413	Symbol	MOVSX_r_rm16		1133150						
ANR	1133414	Symbol	emit_x86_instruction		1133150						
ANR	1133415	Symbol	GROUP_0F		1133150						
ANR	1133416	Symbol	FAST_IS_REG		1133150						
ANR	1133417	Symbol	* inst		1133150						
ANR	1133418	Symbol	src		1133150						
ANR	1133419	Symbol	srcw		1133150						
ANR	1133420	Symbol	SLJIT_SUCCESS		1133150						
ANR	1133421	Symbol	* reg_map		1133150						
ANR	1133422	Symbol	MOV_rm_r		1133150						
ANR	1133423	Symbol	SLJIT_UNUSED		1133150						
ANR	1133424	Symbol	EX86_HALF_ARG		1133150						
ANR	1133425	Symbol	emit_do_imm		1133150						
ANR	1133426	Symbol	MOVZX_r_rm16		1133150						
ANR	1133427	Symbol	inst		1133150						
ANR	1133428	Symbol	compiler -> mode32		1133150						
ANR	1133429	Symbol	dstw		1133150						
ANR	1133430	Function	emit_unary	1070:0:29385:30421							
ANR	1133431	FunctionDef	"emit_unary (struct sljit_compiler * compiler , sljit_ub opcode , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1133430	0					
ANR	1133432	CompoundStatement		1073:0:29522:30421	1133430	0					
ANR	1133433	IdentifierDeclStatement	sljit_ub * inst ;	1074:1:29525:29539	1133430	0	True				
ANR	1133434	IdentifierDecl	* inst		1133430	0					
ANR	1133435	IdentifierDeclType	sljit_ub *		1133430	0					
ANR	1133436	Identifier	inst		1133430	1					
ANR	1133437	IfStatement	if ( dst == SLJIT_UNUSED )		1133430	1					
ANR	1133438	Condition	dst == SLJIT_UNUSED	1076:5:29547:29565	1133430	0	True				
ANR	1133439	EqualityExpression	dst == SLJIT_UNUSED		1133430	0		==			
ANR	1133440	Identifier	dst		1133430	0					
ANR	1133441	Identifier	SLJIT_UNUSED		1133430	1					
ANR	1133442	CompoundStatement		4:26:45:45	1133430	1					
ANR	1133443	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1077:2:29572:29614	1133430	0	True				
ANR	1133444	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1133430	0					
ANR	1133445	Callee	EMIT_MOV		1133430	0					
ANR	1133446	Identifier	EMIT_MOV		1133430	0					
ANR	1133447	ArgumentList	compiler		1133430	1					
ANR	1133448	Argument	compiler		1133430	0					
ANR	1133449	Identifier	compiler		1133430	0					
ANR	1133450	Argument	TMP_REG1		1133430	1					
ANR	1133451	Identifier	TMP_REG1		1133430	0					
ANR	1133452	Argument	0		1133430	2					
ANR	1133453	PrimaryExpression	0		1133430	0					
ANR	1133454	Argument	src		1133430	3					
ANR	1133455	Identifier	src		1133430	0					
ANR	1133456	Argument	srcw		1133430	4					
ANR	1133457	Identifier	srcw		1133430	0					
ANR	1133458	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1078:2:29618:29677	1133430	1	True				
ANR	1133459	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133430	0		=			
ANR	1133460	Identifier	inst		1133430	0					
ANR	1133461	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133430	1					
ANR	1133462	Callee	emit_x86_instruction		1133430	0					
ANR	1133463	Identifier	emit_x86_instruction		1133430	0					
ANR	1133464	ArgumentList	compiler		1133430	1					
ANR	1133465	Argument	compiler		1133430	0					
ANR	1133466	Identifier	compiler		1133430	0					
ANR	1133467	Argument	1		1133430	1					
ANR	1133468	PrimaryExpression	1		1133430	0					
ANR	1133469	Argument	0		1133430	2					
ANR	1133470	PrimaryExpression	0		1133430	0					
ANR	1133471	Argument	0		1133430	3					
ANR	1133472	PrimaryExpression	0		1133430	0					
ANR	1133473	Argument	TMP_REG1		1133430	4					
ANR	1133474	Identifier	TMP_REG1		1133430	0					
ANR	1133475	Argument	0		1133430	5					
ANR	1133476	PrimaryExpression	0		1133430	0					
ANR	1133477	ExpressionStatement	FAIL_IF ( ! inst )	1079:2:29681:29695	1133430	2	True				
ANR	1133478	CallExpression	FAIL_IF ( ! inst )		1133430	0					
ANR	1133479	Callee	FAIL_IF		1133430	0					
ANR	1133480	Identifier	FAIL_IF		1133430	0					
ANR	1133481	ArgumentList	! inst		1133430	1					
ANR	1133482	Argument	! inst		1133430	0					
ANR	1133483	UnaryOperationExpression	! inst		1133430	0					
ANR	1133484	UnaryOperator	!		1133430	0					
ANR	1133485	Identifier	inst		1133430	1					
ANR	1133486	ExpressionStatement	* inst ++ = GROUP_F7	1080:2:29699:29717	1133430	3	True				
ANR	1133487	AssignmentExpression	* inst ++ = GROUP_F7		1133430	0		=			
ANR	1133488	UnaryOperationExpression	* inst ++		1133430	0					
ANR	1133489	UnaryOperator	*		1133430	0					
ANR	1133490	PostIncDecOperationExpression	inst ++		1133430	1					
ANR	1133491	Identifier	inst		1133430	0					
ANR	1133492	IncDec	++		1133430	1					
ANR	1133493	Identifier	GROUP_F7		1133430	1					
ANR	1133494	ExpressionStatement	* inst |= opcode	1081:2:29721:29736	1133430	4	True				
ANR	1133495	AssignmentExpression	* inst |= opcode		1133430	0		|=			
ANR	1133496	UnaryOperationExpression	* inst		1133430	0					
ANR	1133497	UnaryOperator	*		1133430	0					
ANR	1133498	Identifier	inst		1133430	1					
ANR	1133499	Identifier	opcode		1133430	1					
ANR	1133500	ReturnStatement	return SLJIT_SUCCESS ;	1082:2:29740:29760	1133430	5	True				
ANR	1133501	Identifier	SLJIT_SUCCESS		1133430	0					
ANR	1133502	IfStatement	if ( dst == src && dstw == srcw )		1133430	2					
ANR	1133503	Condition	dst == src && dstw == srcw	1084:5:29770:29795	1133430	0	True				
ANR	1133504	AndExpression	dst == src && dstw == srcw		1133430	0		&&			
ANR	1133505	EqualityExpression	dst == src		1133430	0		==			
ANR	1133506	Identifier	dst		1133430	0					
ANR	1133507	Identifier	src		1133430	1					
ANR	1133508	EqualityExpression	dstw == srcw		1133430	1		==			
ANR	1133509	Identifier	dstw		1133430	0					
ANR	1133510	Identifier	srcw		1133430	1					
ANR	1133511	CompoundStatement		12:33:275:275	1133430	1					
ANR	1133512	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"	1086:2:29832:29889	1133430	0	True				
ANR	1133513	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1133430	0		=			
ANR	1133514	Identifier	inst		1133430	0					
ANR	1133515	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1133430	1					
ANR	1133516	Callee	emit_x86_instruction		1133430	0					
ANR	1133517	Identifier	emit_x86_instruction		1133430	0					
ANR	1133518	ArgumentList	compiler		1133430	1					
ANR	1133519	Argument	compiler		1133430	0					
ANR	1133520	Identifier	compiler		1133430	0					
ANR	1133521	Argument	1		1133430	1					
ANR	1133522	PrimaryExpression	1		1133430	0					
ANR	1133523	Argument	0		1133430	2					
ANR	1133524	PrimaryExpression	0		1133430	0					
ANR	1133525	Argument	0		1133430	3					
ANR	1133526	PrimaryExpression	0		1133430	0					
ANR	1133527	Argument	dst		1133430	4					
ANR	1133528	Identifier	dst		1133430	0					
ANR	1133529	Argument	dstw		1133430	5					
ANR	1133530	Identifier	dstw		1133430	0					
ANR	1133531	ExpressionStatement	FAIL_IF ( ! inst )	1087:2:29893:29907	1133430	1	True				
ANR	1133532	CallExpression	FAIL_IF ( ! inst )		1133430	0					
ANR	1133533	Callee	FAIL_IF		1133430	0					
ANR	1133534	Identifier	FAIL_IF		1133430	0					
ANR	1133535	ArgumentList	! inst		1133430	1					
ANR	1133536	Argument	! inst		1133430	0					
ANR	1133537	UnaryOperationExpression	! inst		1133430	0					
ANR	1133538	UnaryOperator	!		1133430	0					
ANR	1133539	Identifier	inst		1133430	1					
ANR	1133540	ExpressionStatement	* inst ++ = GROUP_F7	1088:2:29911:29929	1133430	2	True				
ANR	1133541	AssignmentExpression	* inst ++ = GROUP_F7		1133430	0		=			
ANR	1133542	UnaryOperationExpression	* inst ++		1133430	0					
ANR	1133543	UnaryOperator	*		1133430	0					
ANR	1133544	PostIncDecOperationExpression	inst ++		1133430	1					
ANR	1133545	Identifier	inst		1133430	0					
ANR	1133546	IncDec	++		1133430	1					
ANR	1133547	Identifier	GROUP_F7		1133430	1					
ANR	1133548	ExpressionStatement	* inst |= opcode	1089:2:29933:29948	1133430	3	True				
ANR	1133549	AssignmentExpression	* inst |= opcode		1133430	0		|=			
ANR	1133550	UnaryOperationExpression	* inst		1133430	0					
ANR	1133551	UnaryOperator	*		1133430	0					
ANR	1133552	Identifier	inst		1133430	1					
ANR	1133553	Identifier	opcode		1133430	1					
ANR	1133554	ReturnStatement	return SLJIT_SUCCESS ;	1090:2:29952:29972	1133430	4	True				
ANR	1133555	Identifier	SLJIT_SUCCESS		1133430	0					
ANR	1133556	IfStatement	if ( FAST_IS_REG ( dst ) )		1133430	3					
ANR	1133557	Condition	FAST_IS_REG ( dst )	1092:5:29982:29997	1133430	0	True				
ANR	1133558	CallExpression	FAST_IS_REG ( dst )		1133430	0					
ANR	1133559	Callee	FAST_IS_REG		1133430	0					
ANR	1133560	Identifier	FAST_IS_REG		1133430	0					
ANR	1133561	ArgumentList	dst		1133430	1					
ANR	1133562	Argument	dst		1133430	0					
ANR	1133563	Identifier	dst		1133430	0					
ANR	1133564	CompoundStatement		20:23:477:477	1133430	1					
ANR	1133565	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"	1093:2:30004:30041	1133430	0	True				
ANR	1133566	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"		1133430	0					
ANR	1133567	Callee	EMIT_MOV		1133430	0					
ANR	1133568	Identifier	EMIT_MOV		1133430	0					
ANR	1133569	ArgumentList	compiler		1133430	1					
ANR	1133570	Argument	compiler		1133430	0					
ANR	1133571	Identifier	compiler		1133430	0					
ANR	1133572	Argument	dst		1133430	1					
ANR	1133573	Identifier	dst		1133430	0					
ANR	1133574	Argument	0		1133430	2					
ANR	1133575	PrimaryExpression	0		1133430	0					
ANR	1133576	Argument	src		1133430	3					
ANR	1133577	Identifier	src		1133430	0					
ANR	1133578	Argument	srcw		1133430	4					
ANR	1133579	Identifier	srcw		1133430	0					
ANR	1133580	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"	1094:2:30045:30102	1133430	1	True				
ANR	1133581	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1133430	0		=			
ANR	1133582	Identifier	inst		1133430	0					
ANR	1133583	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1133430	1					
ANR	1133584	Callee	emit_x86_instruction		1133430	0					
ANR	1133585	Identifier	emit_x86_instruction		1133430	0					
ANR	1133586	ArgumentList	compiler		1133430	1					
ANR	1133587	Argument	compiler		1133430	0					
ANR	1133588	Identifier	compiler		1133430	0					
ANR	1133589	Argument	1		1133430	1					
ANR	1133590	PrimaryExpression	1		1133430	0					
ANR	1133591	Argument	0		1133430	2					
ANR	1133592	PrimaryExpression	0		1133430	0					
ANR	1133593	Argument	0		1133430	3					
ANR	1133594	PrimaryExpression	0		1133430	0					
ANR	1133595	Argument	dst		1133430	4					
ANR	1133596	Identifier	dst		1133430	0					
ANR	1133597	Argument	dstw		1133430	5					
ANR	1133598	Identifier	dstw		1133430	0					
ANR	1133599	ExpressionStatement	FAIL_IF ( ! inst )	1095:2:30106:30120	1133430	2	True				
ANR	1133600	CallExpression	FAIL_IF ( ! inst )		1133430	0					
ANR	1133601	Callee	FAIL_IF		1133430	0					
ANR	1133602	Identifier	FAIL_IF		1133430	0					
ANR	1133603	ArgumentList	! inst		1133430	1					
ANR	1133604	Argument	! inst		1133430	0					
ANR	1133605	UnaryOperationExpression	! inst		1133430	0					
ANR	1133606	UnaryOperator	!		1133430	0					
ANR	1133607	Identifier	inst		1133430	1					
ANR	1133608	ExpressionStatement	* inst ++ = GROUP_F7	1096:2:30124:30142	1133430	3	True				
ANR	1133609	AssignmentExpression	* inst ++ = GROUP_F7		1133430	0		=			
ANR	1133610	UnaryOperationExpression	* inst ++		1133430	0					
ANR	1133611	UnaryOperator	*		1133430	0					
ANR	1133612	PostIncDecOperationExpression	inst ++		1133430	1					
ANR	1133613	Identifier	inst		1133430	0					
ANR	1133614	IncDec	++		1133430	1					
ANR	1133615	Identifier	GROUP_F7		1133430	1					
ANR	1133616	ExpressionStatement	* inst |= opcode	1097:2:30146:30161	1133430	4	True				
ANR	1133617	AssignmentExpression	* inst |= opcode		1133430	0		|=			
ANR	1133618	UnaryOperationExpression	* inst		1133430	0					
ANR	1133619	UnaryOperator	*		1133430	0					
ANR	1133620	Identifier	inst		1133430	1					
ANR	1133621	Identifier	opcode		1133430	1					
ANR	1133622	ReturnStatement	return SLJIT_SUCCESS ;	1098:2:30165:30185	1133430	5	True				
ANR	1133623	Identifier	SLJIT_SUCCESS		1133430	0					
ANR	1133624	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1100:1:30191:30233	1133430	4	True				
ANR	1133625	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1133430	0					
ANR	1133626	Callee	EMIT_MOV		1133430	0					
ANR	1133627	Identifier	EMIT_MOV		1133430	0					
ANR	1133628	ArgumentList	compiler		1133430	1					
ANR	1133629	Argument	compiler		1133430	0					
ANR	1133630	Identifier	compiler		1133430	0					
ANR	1133631	Argument	TMP_REG1		1133430	1					
ANR	1133632	Identifier	TMP_REG1		1133430	0					
ANR	1133633	Argument	0		1133430	2					
ANR	1133634	PrimaryExpression	0		1133430	0					
ANR	1133635	Argument	src		1133430	3					
ANR	1133636	Identifier	src		1133430	0					
ANR	1133637	Argument	srcw		1133430	4					
ANR	1133638	Identifier	srcw		1133430	0					
ANR	1133639	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1101:1:30236:30295	1133430	5	True				
ANR	1133640	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133430	0		=			
ANR	1133641	Identifier	inst		1133430	0					
ANR	1133642	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133430	1					
ANR	1133643	Callee	emit_x86_instruction		1133430	0					
ANR	1133644	Identifier	emit_x86_instruction		1133430	0					
ANR	1133645	ArgumentList	compiler		1133430	1					
ANR	1133646	Argument	compiler		1133430	0					
ANR	1133647	Identifier	compiler		1133430	0					
ANR	1133648	Argument	1		1133430	1					
ANR	1133649	PrimaryExpression	1		1133430	0					
ANR	1133650	Argument	0		1133430	2					
ANR	1133651	PrimaryExpression	0		1133430	0					
ANR	1133652	Argument	0		1133430	3					
ANR	1133653	PrimaryExpression	0		1133430	0					
ANR	1133654	Argument	TMP_REG1		1133430	4					
ANR	1133655	Identifier	TMP_REG1		1133430	0					
ANR	1133656	Argument	0		1133430	5					
ANR	1133657	PrimaryExpression	0		1133430	0					
ANR	1133658	ExpressionStatement	FAIL_IF ( ! inst )	1102:1:30298:30312	1133430	6	True				
ANR	1133659	CallExpression	FAIL_IF ( ! inst )		1133430	0					
ANR	1133660	Callee	FAIL_IF		1133430	0					
ANR	1133661	Identifier	FAIL_IF		1133430	0					
ANR	1133662	ArgumentList	! inst		1133430	1					
ANR	1133663	Argument	! inst		1133430	0					
ANR	1133664	UnaryOperationExpression	! inst		1133430	0					
ANR	1133665	UnaryOperator	!		1133430	0					
ANR	1133666	Identifier	inst		1133430	1					
ANR	1133667	ExpressionStatement	* inst ++ = GROUP_F7	1103:1:30315:30333	1133430	7	True				
ANR	1133668	AssignmentExpression	* inst ++ = GROUP_F7		1133430	0		=			
ANR	1133669	UnaryOperationExpression	* inst ++		1133430	0					
ANR	1133670	UnaryOperator	*		1133430	0					
ANR	1133671	PostIncDecOperationExpression	inst ++		1133430	1					
ANR	1133672	Identifier	inst		1133430	0					
ANR	1133673	IncDec	++		1133430	1					
ANR	1133674	Identifier	GROUP_F7		1133430	1					
ANR	1133675	ExpressionStatement	* inst |= opcode	1104:1:30336:30351	1133430	8	True				
ANR	1133676	AssignmentExpression	* inst |= opcode		1133430	0		|=			
ANR	1133677	UnaryOperationExpression	* inst		1133430	0					
ANR	1133678	UnaryOperator	*		1133430	0					
ANR	1133679	Identifier	inst		1133430	1					
ANR	1133680	Identifier	opcode		1133430	1					
ANR	1133681	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1105:1:30354:30396	1133430	9	True				
ANR	1133682	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1133430	0					
ANR	1133683	Callee	EMIT_MOV		1133430	0					
ANR	1133684	Identifier	EMIT_MOV		1133430	0					
ANR	1133685	ArgumentList	compiler		1133430	1					
ANR	1133686	Argument	compiler		1133430	0					
ANR	1133687	Identifier	compiler		1133430	0					
ANR	1133688	Argument	dst		1133430	1					
ANR	1133689	Identifier	dst		1133430	0					
ANR	1133690	Argument	dstw		1133430	2					
ANR	1133691	Identifier	dstw		1133430	0					
ANR	1133692	Argument	TMP_REG1		1133430	3					
ANR	1133693	Identifier	TMP_REG1		1133430	0					
ANR	1133694	Argument	0		1133430	4					
ANR	1133695	PrimaryExpression	0		1133430	0					
ANR	1133696	ReturnStatement	return SLJIT_SUCCESS ;	1106:1:30399:30419	1133430	10	True				
ANR	1133697	Identifier	SLJIT_SUCCESS		1133430	0					
ANR	1133698	ReturnType	static sljit_si		1133430	1					
ANR	1133699	Identifier	emit_unary		1133430	2					
ANR	1133700	ParameterList	"struct sljit_compiler * compiler , sljit_ub opcode , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1133430	3					
ANR	1133701	Parameter	struct sljit_compiler * compiler	1070:27:29412:29442	1133430	0	True				
ANR	1133702	ParameterType	struct sljit_compiler *		1133430	0					
ANR	1133703	Identifier	compiler		1133430	1					
ANR	1133704	Parameter	sljit_ub opcode	1070:60:29445:29459	1133430	1	True				
ANR	1133705	ParameterType	sljit_ub		1133430	0					
ANR	1133706	Identifier	opcode		1133430	1					
ANR	1133707	Parameter	sljit_si dst	1071:1:29463:29474	1133430	2	True				
ANR	1133708	ParameterType	sljit_si		1133430	0					
ANR	1133709	Identifier	dst		1133430	1					
ANR	1133710	Parameter	sljit_sw dstw	1071:15:29477:29489	1133430	3	True				
ANR	1133711	ParameterType	sljit_sw		1133430	0					
ANR	1133712	Identifier	dstw		1133430	1					
ANR	1133713	Parameter	sljit_si src	1072:1:29493:29504	1133430	4	True				
ANR	1133714	ParameterType	sljit_si		1133430	0					
ANR	1133715	Identifier	src		1133430	1					
ANR	1133716	Parameter	sljit_sw srcw	1072:15:29507:29519	1133430	5	True				
ANR	1133717	ParameterType	sljit_sw		1133430	0					
ANR	1133718	Identifier	srcw		1133430	1					
ANR	1133719	CFGEntryNode	ENTRY		1133430		True				
ANR	1133720	CFGExitNode	EXIT		1133430		True				
ANR	1133721	Symbol	TMP_REG1		1133430						
ANR	1133722	Symbol	emit_x86_instruction		1133430						
ANR	1133723	Symbol	* inst		1133430						
ANR	1133724	Symbol	FAST_IS_REG		1133430						
ANR	1133725	Symbol	dst		1133430						
ANR	1133726	Symbol	src		1133430						
ANR	1133727	Symbol	GROUP_F7		1133430						
ANR	1133728	Symbol	srcw		1133430						
ANR	1133729	Symbol	* inst ++		1133430						
ANR	1133730	Symbol	SLJIT_SUCCESS		1133430						
ANR	1133731	Symbol	opcode		1133430						
ANR	1133732	Symbol	SLJIT_UNUSED		1133430						
ANR	1133733	Symbol	inst		1133430						
ANR	1133734	Symbol	compiler		1133430						
ANR	1133735	Symbol	dstw		1133430						
ANR	1133736	Function	emit_not_with_flags	1109:0:30424:31548							
ANR	1133737	FunctionDef	"emit_not_with_flags (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1133736	0					
ANR	1133738	CompoundStatement		1112:0:30553:31548	1133736	0					
ANR	1133739	IdentifierDeclStatement	sljit_ub * inst ;	1113:1:30556:30570	1133736	0	True				
ANR	1133740	IdentifierDecl	* inst		1133736	0					
ANR	1133741	IdentifierDeclType	sljit_ub *		1133736	0					
ANR	1133742	Identifier	inst		1133736	1					
ANR	1133743	IfStatement	if ( dst == SLJIT_UNUSED )		1133736	1					
ANR	1133744	Condition	dst == SLJIT_UNUSED	1115:5:30578:30596	1133736	0	True				
ANR	1133745	EqualityExpression	dst == SLJIT_UNUSED		1133736	0		==			
ANR	1133746	Identifier	dst		1133736	0					
ANR	1133747	Identifier	SLJIT_UNUSED		1133736	1					
ANR	1133748	CompoundStatement		4:26:45:45	1133736	1					
ANR	1133749	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1116:2:30603:30645	1133736	0	True				
ANR	1133750	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1133736	0					
ANR	1133751	Callee	EMIT_MOV		1133736	0					
ANR	1133752	Identifier	EMIT_MOV		1133736	0					
ANR	1133753	ArgumentList	compiler		1133736	1					
ANR	1133754	Argument	compiler		1133736	0					
ANR	1133755	Identifier	compiler		1133736	0					
ANR	1133756	Argument	TMP_REG1		1133736	1					
ANR	1133757	Identifier	TMP_REG1		1133736	0					
ANR	1133758	Argument	0		1133736	2					
ANR	1133759	PrimaryExpression	0		1133736	0					
ANR	1133760	Argument	src		1133736	3					
ANR	1133761	Identifier	src		1133736	0					
ANR	1133762	Argument	srcw		1133736	4					
ANR	1133763	Identifier	srcw		1133736	0					
ANR	1133764	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1117:2:30649:30708	1133736	1	True				
ANR	1133765	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133736	0		=			
ANR	1133766	Identifier	inst		1133736	0					
ANR	1133767	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133736	1					
ANR	1133768	Callee	emit_x86_instruction		1133736	0					
ANR	1133769	Identifier	emit_x86_instruction		1133736	0					
ANR	1133770	ArgumentList	compiler		1133736	1					
ANR	1133771	Argument	compiler		1133736	0					
ANR	1133772	Identifier	compiler		1133736	0					
ANR	1133773	Argument	1		1133736	1					
ANR	1133774	PrimaryExpression	1		1133736	0					
ANR	1133775	Argument	0		1133736	2					
ANR	1133776	PrimaryExpression	0		1133736	0					
ANR	1133777	Argument	0		1133736	3					
ANR	1133778	PrimaryExpression	0		1133736	0					
ANR	1133779	Argument	TMP_REG1		1133736	4					
ANR	1133780	Identifier	TMP_REG1		1133736	0					
ANR	1133781	Argument	0		1133736	5					
ANR	1133782	PrimaryExpression	0		1133736	0					
ANR	1133783	ExpressionStatement	FAIL_IF ( ! inst )	1118:2:30712:30726	1133736	2	True				
ANR	1133784	CallExpression	FAIL_IF ( ! inst )		1133736	0					
ANR	1133785	Callee	FAIL_IF		1133736	0					
ANR	1133786	Identifier	FAIL_IF		1133736	0					
ANR	1133787	ArgumentList	! inst		1133736	1					
ANR	1133788	Argument	! inst		1133736	0					
ANR	1133789	UnaryOperationExpression	! inst		1133736	0					
ANR	1133790	UnaryOperator	!		1133736	0					
ANR	1133791	Identifier	inst		1133736	1					
ANR	1133792	ExpressionStatement	* inst ++ = GROUP_F7	1119:2:30730:30748	1133736	3	True				
ANR	1133793	AssignmentExpression	* inst ++ = GROUP_F7		1133736	0		=			
ANR	1133794	UnaryOperationExpression	* inst ++		1133736	0					
ANR	1133795	UnaryOperator	*		1133736	0					
ANR	1133796	PostIncDecOperationExpression	inst ++		1133736	1					
ANR	1133797	Identifier	inst		1133736	0					
ANR	1133798	IncDec	++		1133736	1					
ANR	1133799	Identifier	GROUP_F7		1133736	1					
ANR	1133800	ExpressionStatement	* inst |= NOT_rm	1120:2:30752:30767	1133736	4	True				
ANR	1133801	AssignmentExpression	* inst |= NOT_rm		1133736	0		|=			
ANR	1133802	UnaryOperationExpression	* inst		1133736	0					
ANR	1133803	UnaryOperator	*		1133736	0					
ANR	1133804	Identifier	inst		1133736	1					
ANR	1133805	Identifier	NOT_rm		1133736	1					
ANR	1133806	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"	1121:2:30771:30837	1133736	5	True				
ANR	1133807	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1133736	0		=			
ANR	1133808	Identifier	inst		1133736	0					
ANR	1133809	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1133736	1					
ANR	1133810	Callee	emit_x86_instruction		1133736	0					
ANR	1133811	Identifier	emit_x86_instruction		1133736	0					
ANR	1133812	ArgumentList	compiler		1133736	1					
ANR	1133813	Argument	compiler		1133736	0					
ANR	1133814	Identifier	compiler		1133736	0					
ANR	1133815	Argument	1		1133736	1					
ANR	1133816	PrimaryExpression	1		1133736	0					
ANR	1133817	Argument	TMP_REG1		1133736	2					
ANR	1133818	Identifier	TMP_REG1		1133736	0					
ANR	1133819	Argument	0		1133736	3					
ANR	1133820	PrimaryExpression	0		1133736	0					
ANR	1133821	Argument	TMP_REG1		1133736	4					
ANR	1133822	Identifier	TMP_REG1		1133736	0					
ANR	1133823	Argument	0		1133736	5					
ANR	1133824	PrimaryExpression	0		1133736	0					
ANR	1133825	ExpressionStatement	FAIL_IF ( ! inst )	1122:2:30841:30855	1133736	6	True				
ANR	1133826	CallExpression	FAIL_IF ( ! inst )		1133736	0					
ANR	1133827	Callee	FAIL_IF		1133736	0					
ANR	1133828	Identifier	FAIL_IF		1133736	0					
ANR	1133829	ArgumentList	! inst		1133736	1					
ANR	1133830	Argument	! inst		1133736	0					
ANR	1133831	UnaryOperationExpression	! inst		1133736	0					
ANR	1133832	UnaryOperator	!		1133736	0					
ANR	1133833	Identifier	inst		1133736	1					
ANR	1133834	ExpressionStatement	* inst = OR_r_rm	1123:2:30859:30874	1133736	7	True				
ANR	1133835	AssignmentExpression	* inst = OR_r_rm		1133736	0		=			
ANR	1133836	UnaryOperationExpression	* inst		1133736	0					
ANR	1133837	UnaryOperator	*		1133736	0					
ANR	1133838	Identifier	inst		1133736	1					
ANR	1133839	Identifier	OR_r_rm		1133736	1					
ANR	1133840	ReturnStatement	return SLJIT_SUCCESS ;	1124:2:30878:30898	1133736	8	True				
ANR	1133841	Identifier	SLJIT_SUCCESS		1133736	0					
ANR	1133842	IfStatement	if ( FAST_IS_REG ( dst ) )		1133736	2					
ANR	1133843	Condition	FAST_IS_REG ( dst )	1126:5:30908:30923	1133736	0	True				
ANR	1133844	CallExpression	FAST_IS_REG ( dst )		1133736	0					
ANR	1133845	Callee	FAST_IS_REG		1133736	0					
ANR	1133846	Identifier	FAST_IS_REG		1133736	0					
ANR	1133847	ArgumentList	dst		1133736	1					
ANR	1133848	Argument	dst		1133736	0					
ANR	1133849	Identifier	dst		1133736	0					
ANR	1133850	CompoundStatement		15:23:372:372	1133736	1					
ANR	1133851	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"	1127:2:30930:30967	1133736	0	True				
ANR	1133852	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"		1133736	0					
ANR	1133853	Callee	EMIT_MOV		1133736	0					
ANR	1133854	Identifier	EMIT_MOV		1133736	0					
ANR	1133855	ArgumentList	compiler		1133736	1					
ANR	1133856	Argument	compiler		1133736	0					
ANR	1133857	Identifier	compiler		1133736	0					
ANR	1133858	Argument	dst		1133736	1					
ANR	1133859	Identifier	dst		1133736	0					
ANR	1133860	Argument	0		1133736	2					
ANR	1133861	PrimaryExpression	0		1133736	0					
ANR	1133862	Argument	src		1133736	3					
ANR	1133863	Identifier	src		1133736	0					
ANR	1133864	Argument	srcw		1133736	4					
ANR	1133865	Identifier	srcw		1133736	0					
ANR	1133866	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"	1128:2:30971:31028	1133736	1	True				
ANR	1133867	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1133736	0		=			
ANR	1133868	Identifier	inst		1133736	0					
ANR	1133869	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1133736	1					
ANR	1133870	Callee	emit_x86_instruction		1133736	0					
ANR	1133871	Identifier	emit_x86_instruction		1133736	0					
ANR	1133872	ArgumentList	compiler		1133736	1					
ANR	1133873	Argument	compiler		1133736	0					
ANR	1133874	Identifier	compiler		1133736	0					
ANR	1133875	Argument	1		1133736	1					
ANR	1133876	PrimaryExpression	1		1133736	0					
ANR	1133877	Argument	0		1133736	2					
ANR	1133878	PrimaryExpression	0		1133736	0					
ANR	1133879	Argument	0		1133736	3					
ANR	1133880	PrimaryExpression	0		1133736	0					
ANR	1133881	Argument	dst		1133736	4					
ANR	1133882	Identifier	dst		1133736	0					
ANR	1133883	Argument	dstw		1133736	5					
ANR	1133884	Identifier	dstw		1133736	0					
ANR	1133885	ExpressionStatement	FAIL_IF ( ! inst )	1129:2:31032:31046	1133736	2	True				
ANR	1133886	CallExpression	FAIL_IF ( ! inst )		1133736	0					
ANR	1133887	Callee	FAIL_IF		1133736	0					
ANR	1133888	Identifier	FAIL_IF		1133736	0					
ANR	1133889	ArgumentList	! inst		1133736	1					
ANR	1133890	Argument	! inst		1133736	0					
ANR	1133891	UnaryOperationExpression	! inst		1133736	0					
ANR	1133892	UnaryOperator	!		1133736	0					
ANR	1133893	Identifier	inst		1133736	1					
ANR	1133894	ExpressionStatement	* inst ++ = GROUP_F7	1130:2:31050:31068	1133736	3	True				
ANR	1133895	AssignmentExpression	* inst ++ = GROUP_F7		1133736	0		=			
ANR	1133896	UnaryOperationExpression	* inst ++		1133736	0					
ANR	1133897	UnaryOperator	*		1133736	0					
ANR	1133898	PostIncDecOperationExpression	inst ++		1133736	1					
ANR	1133899	Identifier	inst		1133736	0					
ANR	1133900	IncDec	++		1133736	1					
ANR	1133901	Identifier	GROUP_F7		1133736	1					
ANR	1133902	ExpressionStatement	* inst |= NOT_rm	1131:2:31072:31087	1133736	4	True				
ANR	1133903	AssignmentExpression	* inst |= NOT_rm		1133736	0		|=			
ANR	1133904	UnaryOperationExpression	* inst		1133736	0					
ANR	1133905	UnaryOperator	*		1133736	0					
ANR	1133906	Identifier	inst		1133736	1					
ANR	1133907	Identifier	NOT_rm		1133736	1					
ANR	1133908	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , dst , 0 )"	1132:2:31091:31147	1133736	5	True				
ANR	1133909	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , dst , 0 )"		1133736	0		=			
ANR	1133910	Identifier	inst		1133736	0					
ANR	1133911	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , dst , 0 )"		1133736	1					
ANR	1133912	Callee	emit_x86_instruction		1133736	0					
ANR	1133913	Identifier	emit_x86_instruction		1133736	0					
ANR	1133914	ArgumentList	compiler		1133736	1					
ANR	1133915	Argument	compiler		1133736	0					
ANR	1133916	Identifier	compiler		1133736	0					
ANR	1133917	Argument	1		1133736	1					
ANR	1133918	PrimaryExpression	1		1133736	0					
ANR	1133919	Argument	dst		1133736	2					
ANR	1133920	Identifier	dst		1133736	0					
ANR	1133921	Argument	0		1133736	3					
ANR	1133922	PrimaryExpression	0		1133736	0					
ANR	1133923	Argument	dst		1133736	4					
ANR	1133924	Identifier	dst		1133736	0					
ANR	1133925	Argument	0		1133736	5					
ANR	1133926	PrimaryExpression	0		1133736	0					
ANR	1133927	ExpressionStatement	FAIL_IF ( ! inst )	1133:2:31151:31165	1133736	6	True				
ANR	1133928	CallExpression	FAIL_IF ( ! inst )		1133736	0					
ANR	1133929	Callee	FAIL_IF		1133736	0					
ANR	1133930	Identifier	FAIL_IF		1133736	0					
ANR	1133931	ArgumentList	! inst		1133736	1					
ANR	1133932	Argument	! inst		1133736	0					
ANR	1133933	UnaryOperationExpression	! inst		1133736	0					
ANR	1133934	UnaryOperator	!		1133736	0					
ANR	1133935	Identifier	inst		1133736	1					
ANR	1133936	ExpressionStatement	* inst = OR_r_rm	1134:2:31169:31184	1133736	7	True				
ANR	1133937	AssignmentExpression	* inst = OR_r_rm		1133736	0		=			
ANR	1133938	UnaryOperationExpression	* inst		1133736	0					
ANR	1133939	UnaryOperator	*		1133736	0					
ANR	1133940	Identifier	inst		1133736	1					
ANR	1133941	Identifier	OR_r_rm		1133736	1					
ANR	1133942	ReturnStatement	return SLJIT_SUCCESS ;	1135:2:31188:31208	1133736	8	True				
ANR	1133943	Identifier	SLJIT_SUCCESS		1133736	0					
ANR	1133944	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1137:1:31214:31256	1133736	3	True				
ANR	1133945	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1133736	0					
ANR	1133946	Callee	EMIT_MOV		1133736	0					
ANR	1133947	Identifier	EMIT_MOV		1133736	0					
ANR	1133948	ArgumentList	compiler		1133736	1					
ANR	1133949	Argument	compiler		1133736	0					
ANR	1133950	Identifier	compiler		1133736	0					
ANR	1133951	Argument	TMP_REG1		1133736	1					
ANR	1133952	Identifier	TMP_REG1		1133736	0					
ANR	1133953	Argument	0		1133736	2					
ANR	1133954	PrimaryExpression	0		1133736	0					
ANR	1133955	Argument	src		1133736	3					
ANR	1133956	Identifier	src		1133736	0					
ANR	1133957	Argument	srcw		1133736	4					
ANR	1133958	Identifier	srcw		1133736	0					
ANR	1133959	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1138:1:31259:31318	1133736	4	True				
ANR	1133960	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133736	0		=			
ANR	1133961	Identifier	inst		1133736	0					
ANR	1133962	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1133736	1					
ANR	1133963	Callee	emit_x86_instruction		1133736	0					
ANR	1133964	Identifier	emit_x86_instruction		1133736	0					
ANR	1133965	ArgumentList	compiler		1133736	1					
ANR	1133966	Argument	compiler		1133736	0					
ANR	1133967	Identifier	compiler		1133736	0					
ANR	1133968	Argument	1		1133736	1					
ANR	1133969	PrimaryExpression	1		1133736	0					
ANR	1133970	Argument	0		1133736	2					
ANR	1133971	PrimaryExpression	0		1133736	0					
ANR	1133972	Argument	0		1133736	3					
ANR	1133973	PrimaryExpression	0		1133736	0					
ANR	1133974	Argument	TMP_REG1		1133736	4					
ANR	1133975	Identifier	TMP_REG1		1133736	0					
ANR	1133976	Argument	0		1133736	5					
ANR	1133977	PrimaryExpression	0		1133736	0					
ANR	1133978	ExpressionStatement	FAIL_IF ( ! inst )	1139:1:31321:31335	1133736	5	True				
ANR	1133979	CallExpression	FAIL_IF ( ! inst )		1133736	0					
ANR	1133980	Callee	FAIL_IF		1133736	0					
ANR	1133981	Identifier	FAIL_IF		1133736	0					
ANR	1133982	ArgumentList	! inst		1133736	1					
ANR	1133983	Argument	! inst		1133736	0					
ANR	1133984	UnaryOperationExpression	! inst		1133736	0					
ANR	1133985	UnaryOperator	!		1133736	0					
ANR	1133986	Identifier	inst		1133736	1					
ANR	1133987	ExpressionStatement	* inst ++ = GROUP_F7	1140:1:31338:31356	1133736	6	True				
ANR	1133988	AssignmentExpression	* inst ++ = GROUP_F7		1133736	0		=			
ANR	1133989	UnaryOperationExpression	* inst ++		1133736	0					
ANR	1133990	UnaryOperator	*		1133736	0					
ANR	1133991	PostIncDecOperationExpression	inst ++		1133736	1					
ANR	1133992	Identifier	inst		1133736	0					
ANR	1133993	IncDec	++		1133736	1					
ANR	1133994	Identifier	GROUP_F7		1133736	1					
ANR	1133995	ExpressionStatement	* inst |= NOT_rm	1141:1:31359:31374	1133736	7	True				
ANR	1133996	AssignmentExpression	* inst |= NOT_rm		1133736	0		|=			
ANR	1133997	UnaryOperationExpression	* inst		1133736	0					
ANR	1133998	UnaryOperator	*		1133736	0					
ANR	1133999	Identifier	inst		1133736	1					
ANR	1134000	Identifier	NOT_rm		1133736	1					
ANR	1134001	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"	1142:1:31377:31443	1133736	8	True				
ANR	1134002	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1133736	0		=			
ANR	1134003	Identifier	inst		1133736	0					
ANR	1134004	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1133736	1					
ANR	1134005	Callee	emit_x86_instruction		1133736	0					
ANR	1134006	Identifier	emit_x86_instruction		1133736	0					
ANR	1134007	ArgumentList	compiler		1133736	1					
ANR	1134008	Argument	compiler		1133736	0					
ANR	1134009	Identifier	compiler		1133736	0					
ANR	1134010	Argument	1		1133736	1					
ANR	1134011	PrimaryExpression	1		1133736	0					
ANR	1134012	Argument	TMP_REG1		1133736	2					
ANR	1134013	Identifier	TMP_REG1		1133736	0					
ANR	1134014	Argument	0		1133736	3					
ANR	1134015	PrimaryExpression	0		1133736	0					
ANR	1134016	Argument	TMP_REG1		1133736	4					
ANR	1134017	Identifier	TMP_REG1		1133736	0					
ANR	1134018	Argument	0		1133736	5					
ANR	1134019	PrimaryExpression	0		1133736	0					
ANR	1134020	ExpressionStatement	FAIL_IF ( ! inst )	1143:1:31446:31460	1133736	9	True				
ANR	1134021	CallExpression	FAIL_IF ( ! inst )		1133736	0					
ANR	1134022	Callee	FAIL_IF		1133736	0					
ANR	1134023	Identifier	FAIL_IF		1133736	0					
ANR	1134024	ArgumentList	! inst		1133736	1					
ANR	1134025	Argument	! inst		1133736	0					
ANR	1134026	UnaryOperationExpression	! inst		1133736	0					
ANR	1134027	UnaryOperator	!		1133736	0					
ANR	1134028	Identifier	inst		1133736	1					
ANR	1134029	ExpressionStatement	* inst = OR_r_rm	1144:1:31463:31478	1133736	10	True				
ANR	1134030	AssignmentExpression	* inst = OR_r_rm		1133736	0		=			
ANR	1134031	UnaryOperationExpression	* inst		1133736	0					
ANR	1134032	UnaryOperator	*		1133736	0					
ANR	1134033	Identifier	inst		1133736	1					
ANR	1134034	Identifier	OR_r_rm		1133736	1					
ANR	1134035	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1145:1:31481:31523	1133736	11	True				
ANR	1134036	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1133736	0					
ANR	1134037	Callee	EMIT_MOV		1133736	0					
ANR	1134038	Identifier	EMIT_MOV		1133736	0					
ANR	1134039	ArgumentList	compiler		1133736	1					
ANR	1134040	Argument	compiler		1133736	0					
ANR	1134041	Identifier	compiler		1133736	0					
ANR	1134042	Argument	dst		1133736	1					
ANR	1134043	Identifier	dst		1133736	0					
ANR	1134044	Argument	dstw		1133736	2					
ANR	1134045	Identifier	dstw		1133736	0					
ANR	1134046	Argument	TMP_REG1		1133736	3					
ANR	1134047	Identifier	TMP_REG1		1133736	0					
ANR	1134048	Argument	0		1133736	4					
ANR	1134049	PrimaryExpression	0		1133736	0					
ANR	1134050	ReturnStatement	return SLJIT_SUCCESS ;	1146:1:31526:31546	1133736	12	True				
ANR	1134051	Identifier	SLJIT_SUCCESS		1133736	0					
ANR	1134052	ReturnType	static sljit_si		1133736	1					
ANR	1134053	Identifier	emit_not_with_flags		1133736	2					
ANR	1134054	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1133736	3					
ANR	1134055	Parameter	struct sljit_compiler * compiler	1109:36:30460:30490	1133736	0	True				
ANR	1134056	ParameterType	struct sljit_compiler *		1133736	0					
ANR	1134057	Identifier	compiler		1133736	1					
ANR	1134058	Parameter	sljit_si dst	1110:1:30494:30505	1133736	1	True				
ANR	1134059	ParameterType	sljit_si		1133736	0					
ANR	1134060	Identifier	dst		1133736	1					
ANR	1134061	Parameter	sljit_sw dstw	1110:15:30508:30520	1133736	2	True				
ANR	1134062	ParameterType	sljit_sw		1133736	0					
ANR	1134063	Identifier	dstw		1133736	1					
ANR	1134064	Parameter	sljit_si src	1111:1:30524:30535	1133736	3	True				
ANR	1134065	ParameterType	sljit_si		1133736	0					
ANR	1134066	Identifier	src		1133736	1					
ANR	1134067	Parameter	sljit_sw srcw	1111:15:30538:30550	1133736	4	True				
ANR	1134068	ParameterType	sljit_sw		1133736	0					
ANR	1134069	Identifier	srcw		1133736	1					
ANR	1134070	CFGEntryNode	ENTRY		1133736		True				
ANR	1134071	CFGExitNode	EXIT		1133736		True				
ANR	1134072	Symbol	TMP_REG1		1133736						
ANR	1134073	Symbol	emit_x86_instruction		1133736						
ANR	1134074	Symbol	* inst		1133736						
ANR	1134075	Symbol	FAST_IS_REG		1133736						
ANR	1134076	Symbol	dst		1133736						
ANR	1134077	Symbol	src		1133736						
ANR	1134078	Symbol	GROUP_F7		1133736						
ANR	1134079	Symbol	srcw		1133736						
ANR	1134080	Symbol	* inst ++		1133736						
ANR	1134081	Symbol	SLJIT_SUCCESS		1133736						
ANR	1134082	Symbol	OR_r_rm		1133736						
ANR	1134083	Symbol	SLJIT_UNUSED		1133736						
ANR	1134084	Symbol	inst		1133736						
ANR	1134085	Symbol	compiler		1133736						
ANR	1134086	Symbol	dstw		1133736						
ANR	1134087	Symbol	NOT_rm		1133736						
ANR	1134088	Function	emit_clz	1149:0:31551:34687							
ANR	1134089	FunctionDef	"emit_clz (struct sljit_compiler * compiler , sljit_si op_flags , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1134088	0					
ANR	1134090	CompoundStatement		1152:0:31688:34687	1134088	0					
ANR	1134091	IdentifierDeclStatement	sljit_ub * inst ;	1153:1:31691:31705	1134088	0	True				
ANR	1134092	IdentifierDecl	* inst		1134088	0					
ANR	1134093	IdentifierDeclType	sljit_ub *		1134088	0					
ANR	1134094	Identifier	inst		1134088	1					
ANR	1134095	IdentifierDeclStatement	sljit_si dst_r ;	1154:1:31708:31722	1134088	1	True				
ANR	1134096	IdentifierDecl	dst_r		1134088	0					
ANR	1134097	IdentifierDeclType	sljit_si		1134088	0					
ANR	1134098	Identifier	dst_r		1134088	1					
ANR	1134099	ExpressionStatement	SLJIT_UNUSED_ARG ( op_flags )	1156:1:31726:31752	1134088	2	True				
ANR	1134100	CallExpression	SLJIT_UNUSED_ARG ( op_flags )		1134088	0					
ANR	1134101	Callee	SLJIT_UNUSED_ARG		1134088	0					
ANR	1134102	Identifier	SLJIT_UNUSED_ARG		1134088	0					
ANR	1134103	ArgumentList	op_flags		1134088	1					
ANR	1134104	Argument	op_flags		1134088	0					
ANR	1134105	Identifier	op_flags		1134088	0					
ANR	1134106	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1134088	3					
ANR	1134107	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	1157:5:31759:31793	1134088	0	True				
ANR	1134108	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1134088	0					
ANR	1134109	Callee	SLJIT_UNLIKELY		1134088	0					
ANR	1134110	Identifier	SLJIT_UNLIKELY		1134088	0					
ANR	1134111	ArgumentList	dst == SLJIT_UNUSED		1134088	1					
ANR	1134112	Argument	dst == SLJIT_UNUSED		1134088	0					
ANR	1134113	EqualityExpression	dst == SLJIT_UNUSED		1134088	0		==			
ANR	1134114	Identifier	dst		1134088	0					
ANR	1134115	Identifier	SLJIT_UNUSED		1134088	1					
ANR	1134116	CompoundStatement		6:42:107:107	1134088	1					
ANR	1134117	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1159:2:31832:31874	1134088	0	True				
ANR	1134118	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1134088	0					
ANR	1134119	Callee	EMIT_MOV		1134088	0					
ANR	1134120	Identifier	EMIT_MOV		1134088	0					
ANR	1134121	ArgumentList	compiler		1134088	1					
ANR	1134122	Argument	compiler		1134088	0					
ANR	1134123	Identifier	compiler		1134088	0					
ANR	1134124	Argument	TMP_REG1		1134088	1					
ANR	1134125	Identifier	TMP_REG1		1134088	0					
ANR	1134126	Argument	0		1134088	2					
ANR	1134127	PrimaryExpression	0		1134088	0					
ANR	1134128	Argument	src		1134088	3					
ANR	1134129	Identifier	src		1134088	0					
ANR	1134130	Argument	srcw		1134088	4					
ANR	1134131	Identifier	srcw		1134088	0					
ANR	1134132	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1160:2:31878:31937	1134088	1	True				
ANR	1134133	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1134088	0		=			
ANR	1134134	Identifier	inst		1134088	0					
ANR	1134135	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1134088	1					
ANR	1134136	Callee	emit_x86_instruction		1134088	0					
ANR	1134137	Identifier	emit_x86_instruction		1134088	0					
ANR	1134138	ArgumentList	compiler		1134088	1					
ANR	1134139	Argument	compiler		1134088	0					
ANR	1134140	Identifier	compiler		1134088	0					
ANR	1134141	Argument	1		1134088	1					
ANR	1134142	PrimaryExpression	1		1134088	0					
ANR	1134143	Argument	0		1134088	2					
ANR	1134144	PrimaryExpression	0		1134088	0					
ANR	1134145	Argument	0		1134088	3					
ANR	1134146	PrimaryExpression	0		1134088	0					
ANR	1134147	Argument	TMP_REG1		1134088	4					
ANR	1134148	Identifier	TMP_REG1		1134088	0					
ANR	1134149	Argument	0		1134088	5					
ANR	1134150	PrimaryExpression	0		1134088	0					
ANR	1134151	ExpressionStatement	FAIL_IF ( ! inst )	1161:2:31941:31955	1134088	2	True				
ANR	1134152	CallExpression	FAIL_IF ( ! inst )		1134088	0					
ANR	1134153	Callee	FAIL_IF		1134088	0					
ANR	1134154	Identifier	FAIL_IF		1134088	0					
ANR	1134155	ArgumentList	! inst		1134088	1					
ANR	1134156	Argument	! inst		1134088	0					
ANR	1134157	UnaryOperationExpression	! inst		1134088	0					
ANR	1134158	UnaryOperator	!		1134088	0					
ANR	1134159	Identifier	inst		1134088	1					
ANR	1134160	ExpressionStatement	* inst ++ = GROUP_F7	1162:2:31959:31977	1134088	3	True				
ANR	1134161	AssignmentExpression	* inst ++ = GROUP_F7		1134088	0		=			
ANR	1134162	UnaryOperationExpression	* inst ++		1134088	0					
ANR	1134163	UnaryOperator	*		1134088	0					
ANR	1134164	PostIncDecOperationExpression	inst ++		1134088	1					
ANR	1134165	Identifier	inst		1134088	0					
ANR	1134166	IncDec	++		1134088	1					
ANR	1134167	Identifier	GROUP_F7		1134088	1					
ANR	1134168	ExpressionStatement	* inst |= NOT_rm	1163:2:31981:31996	1134088	4	True				
ANR	1134169	AssignmentExpression	* inst |= NOT_rm		1134088	0		|=			
ANR	1134170	UnaryOperationExpression	* inst		1134088	0					
ANR	1134171	UnaryOperator	*		1134088	0					
ANR	1134172	Identifier	inst		1134088	1					
ANR	1134173	Identifier	NOT_rm		1134088	1					
ANR	1134174	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 31 , TMP_REG1 , 0 )"	1165:2:32057:32142	1134088	5	True				
ANR	1134175	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 31 , TMP_REG1 , 0 )"		1134088	0		=			
ANR	1134176	Identifier	inst		1134088	0					
ANR	1134177	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 31 , TMP_REG1 , 0 )"		1134088	1					
ANR	1134178	Callee	emit_x86_instruction		1134088	0					
ANR	1134179	Identifier	emit_x86_instruction		1134088	0					
ANR	1134180	ArgumentList	compiler		1134088	1					
ANR	1134181	Argument	compiler		1134088	0					
ANR	1134182	Identifier	compiler		1134088	0					
ANR	1134183	Argument	1 | EX86_SHIFT_INS		1134088	1					
ANR	1134184	InclusiveOrExpression	1 | EX86_SHIFT_INS		1134088	0		|			
ANR	1134185	PrimaryExpression	1		1134088	0					
ANR	1134186	Identifier	EX86_SHIFT_INS		1134088	1					
ANR	1134187	Argument	SLJIT_IMM		1134088	2					
ANR	1134188	Identifier	SLJIT_IMM		1134088	0					
ANR	1134189	Argument	31		1134088	3					
ANR	1134190	PrimaryExpression	31		1134088	0					
ANR	1134191	Argument	TMP_REG1		1134088	4					
ANR	1134192	Identifier	TMP_REG1		1134088	0					
ANR	1134193	Argument	0		1134088	5					
ANR	1134194	PrimaryExpression	0		1134088	0					
ANR	1134195	ExpressionStatement	FAIL_IF ( ! inst )	1169:2:32282:32296	1134088	6	True				
ANR	1134196	CallExpression	FAIL_IF ( ! inst )		1134088	0					
ANR	1134197	Callee	FAIL_IF		1134088	0					
ANR	1134198	Identifier	FAIL_IF		1134088	0					
ANR	1134199	ArgumentList	! inst		1134088	1					
ANR	1134200	Argument	! inst		1134088	0					
ANR	1134201	UnaryOperationExpression	! inst		1134088	0					
ANR	1134202	UnaryOperator	!		1134088	0					
ANR	1134203	Identifier	inst		1134088	1					
ANR	1134204	ExpressionStatement	* inst |= SHR	1170:2:32300:32312	1134088	7	True				
ANR	1134205	AssignmentExpression	* inst |= SHR		1134088	0		|=			
ANR	1134206	UnaryOperationExpression	* inst		1134088	0					
ANR	1134207	UnaryOperator	*		1134088	0					
ANR	1134208	Identifier	inst		1134088	1					
ANR	1134209	Identifier	SHR		1134088	1					
ANR	1134210	ReturnStatement	return SLJIT_SUCCESS ;	1171:2:32316:32336	1134088	8	True				
ANR	1134211	Identifier	SLJIT_SUCCESS		1134088	0					
ANR	1134212	IfStatement	if ( SLJIT_UNLIKELY ( src & SLJIT_IMM ) )		1134088	4					
ANR	1134213	Condition	SLJIT_UNLIKELY ( src & SLJIT_IMM )	1174:5:32347:32377	1134088	0	True				
ANR	1134214	CallExpression	SLJIT_UNLIKELY ( src & SLJIT_IMM )		1134088	0					
ANR	1134215	Callee	SLJIT_UNLIKELY		1134088	0					
ANR	1134216	Identifier	SLJIT_UNLIKELY		1134088	0					
ANR	1134217	ArgumentList	src & SLJIT_IMM		1134088	1					
ANR	1134218	Argument	src & SLJIT_IMM		1134088	0					
ANR	1134219	BitAndExpression	src & SLJIT_IMM		1134088	0		&			
ANR	1134220	Identifier	src		1134088	0					
ANR	1134221	Identifier	SLJIT_IMM		1134088	1					
ANR	1134222	CompoundStatement		23:38:691:691	1134088	1					
ANR	1134223	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_IMM , srcw )"	1175:2:32384:32432	1134088	0	True				
ANR	1134224	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_IMM , srcw )"		1134088	0					
ANR	1134225	Callee	EMIT_MOV		1134088	0					
ANR	1134226	Identifier	EMIT_MOV		1134088	0					
ANR	1134227	ArgumentList	compiler		1134088	1					
ANR	1134228	Argument	compiler		1134088	0					
ANR	1134229	Identifier	compiler		1134088	0					
ANR	1134230	Argument	TMP_REG1		1134088	1					
ANR	1134231	Identifier	TMP_REG1		1134088	0					
ANR	1134232	Argument	0		1134088	2					
ANR	1134233	PrimaryExpression	0		1134088	0					
ANR	1134234	Argument	SLJIT_IMM		1134088	3					
ANR	1134235	Identifier	SLJIT_IMM		1134088	0					
ANR	1134236	Argument	srcw		1134088	4					
ANR	1134237	Identifier	srcw		1134088	0					
ANR	1134238	ExpressionStatement	src = TMP_REG1	1176:2:32436:32450	1134088	1	True				
ANR	1134239	AssignmentExpression	src = TMP_REG1		1134088	0		=			
ANR	1134240	Identifier	src		1134088	0					
ANR	1134241	Identifier	TMP_REG1		1134088	1					
ANR	1134242	ExpressionStatement	srcw = 0	1177:2:32454:32462	1134088	2	True				
ANR	1134243	AssignmentExpression	srcw = 0		1134088	0		=			
ANR	1134244	Identifier	srcw		1134088	0					
ANR	1134245	PrimaryExpression	0		1134088	1					
ANR	1134246	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , TMP_REG1 , 0 , src , srcw )"	1180:1:32469:32533	1134088	5	True				
ANR	1134247	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , TMP_REG1 , 0 , src , srcw )"		1134088	0		=			
ANR	1134248	Identifier	inst		1134088	0					
ANR	1134249	CallExpression	"emit_x86_instruction ( compiler , 2 , TMP_REG1 , 0 , src , srcw )"		1134088	1					
ANR	1134250	Callee	emit_x86_instruction		1134088	0					
ANR	1134251	Identifier	emit_x86_instruction		1134088	0					
ANR	1134252	ArgumentList	compiler		1134088	1					
ANR	1134253	Argument	compiler		1134088	0					
ANR	1134254	Identifier	compiler		1134088	0					
ANR	1134255	Argument	2		1134088	1					
ANR	1134256	PrimaryExpression	2		1134088	0					
ANR	1134257	Argument	TMP_REG1		1134088	2					
ANR	1134258	Identifier	TMP_REG1		1134088	0					
ANR	1134259	Argument	0		1134088	3					
ANR	1134260	PrimaryExpression	0		1134088	0					
ANR	1134261	Argument	src		1134088	4					
ANR	1134262	Identifier	src		1134088	0					
ANR	1134263	Argument	srcw		1134088	5					
ANR	1134264	Identifier	srcw		1134088	0					
ANR	1134265	ExpressionStatement	FAIL_IF ( ! inst )	1181:1:32536:32550	1134088	6	True				
ANR	1134266	CallExpression	FAIL_IF ( ! inst )		1134088	0					
ANR	1134267	Callee	FAIL_IF		1134088	0					
ANR	1134268	Identifier	FAIL_IF		1134088	0					
ANR	1134269	ArgumentList	! inst		1134088	1					
ANR	1134270	Argument	! inst		1134088	0					
ANR	1134271	UnaryOperationExpression	! inst		1134088	0					
ANR	1134272	UnaryOperator	!		1134088	0					
ANR	1134273	Identifier	inst		1134088	1					
ANR	1134274	ExpressionStatement	* inst ++ = GROUP_0F	1182:1:32553:32571	1134088	7	True				
ANR	1134275	AssignmentExpression	* inst ++ = GROUP_0F		1134088	0		=			
ANR	1134276	UnaryOperationExpression	* inst ++		1134088	0					
ANR	1134277	UnaryOperator	*		1134088	0					
ANR	1134278	PostIncDecOperationExpression	inst ++		1134088	1					
ANR	1134279	Identifier	inst		1134088	0					
ANR	1134280	IncDec	++		1134088	1					
ANR	1134281	Identifier	GROUP_0F		1134088	1					
ANR	1134282	ExpressionStatement	* inst = BSR_r_rm	1183:1:32574:32590	1134088	8	True				
ANR	1134283	AssignmentExpression	* inst = BSR_r_rm		1134088	0		=			
ANR	1134284	UnaryOperationExpression	* inst		1134088	0					
ANR	1134285	UnaryOperator	*		1134088	0					
ANR	1134286	Identifier	inst		1134088	1					
ANR	1134287	Identifier	BSR_r_rm		1134088	1					
ANR	1134288	IfStatement	if ( FAST_IS_REG ( dst ) )		1134088	9					
ANR	1134289	Condition	FAST_IS_REG ( dst )	1186:5:32655:32670	1134088	0	True				
ANR	1134290	CallExpression	FAST_IS_REG ( dst )		1134088	0					
ANR	1134291	Callee	FAST_IS_REG		1134088	0					
ANR	1134292	Identifier	FAST_IS_REG		1134088	0					
ANR	1134293	ArgumentList	dst		1134088	1					
ANR	1134294	Argument	dst		1134088	0					
ANR	1134295	Identifier	dst		1134088	0					
ANR	1134296	ExpressionStatement	dst_r = dst	1187:2:32675:32686	1134088	1	True				
ANR	1134297	AssignmentExpression	dst_r = dst		1134088	0		=			
ANR	1134298	Identifier	dst_r		1134088	0					
ANR	1134299	Identifier	dst		1134088	1					
ANR	1134300	ElseStatement	else		1134088	0					
ANR	1134301	CompoundStatement		37:6:1005:1005	1134088	0					
ANR	1134302	IfStatement	if ( ( dst & REG_MASK ) != SLJIT_R0 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 ) )		1134088	0					
ANR	1134303	Condition	( dst & REG_MASK ) != SLJIT_R0 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )	1190:6:32745:32822	1134088	0	True				
ANR	1134304	AndExpression	( dst & REG_MASK ) != SLJIT_R0 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )		1134088	0		&&			
ANR	1134305	EqualityExpression	( dst & REG_MASK ) != SLJIT_R0		1134088	0		!=			
ANR	1134306	BitAndExpression	dst & REG_MASK		1134088	0		&			
ANR	1134307	Identifier	dst		1134088	0					
ANR	1134308	Identifier	REG_MASK		1134088	1					
ANR	1134309	Identifier	SLJIT_R0		1134088	1					
ANR	1134310	EqualityExpression	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )		1134088	1		!=			
ANR	1134311	BitAndExpression	dst & OFFS_REG_MASK		1134088	0		&			
ANR	1134312	Identifier	dst		1134088	0					
ANR	1134313	Identifier	OFFS_REG_MASK		1134088	1					
ANR	1134314	CallExpression	TO_OFFS_REG ( SLJIT_R0 )		1134088	1					
ANR	1134315	Callee	TO_OFFS_REG		1134088	0					
ANR	1134316	Identifier	TO_OFFS_REG		1134088	0					
ANR	1134317	ArgumentList	SLJIT_R0		1134088	1					
ANR	1134318	Argument	SLJIT_R0		1134088	0					
ANR	1134319	Identifier	SLJIT_R0		1134088	0					
ANR	1134320	ExpressionStatement	dst_r = SLJIT_R0	1191:3:32828:32844	1134088	1	True				
ANR	1134321	AssignmentExpression	dst_r = SLJIT_R0		1134088	0		=			
ANR	1134322	Identifier	dst_r		1134088	0					
ANR	1134323	Identifier	SLJIT_R0		1134088	1					
ANR	1134324	ElseStatement	else		1134088	0					
ANR	1134325	IfStatement	if ( ( dst & REG_MASK ) != SLJIT_R1 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 ) )		1134088	0					
ANR	1134326	Condition	( dst & REG_MASK ) != SLJIT_R1 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 )	1192:11:32857:32934	1134088	0	True				
ANR	1134327	AndExpression	( dst & REG_MASK ) != SLJIT_R1 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 )		1134088	0		&&			
ANR	1134328	EqualityExpression	( dst & REG_MASK ) != SLJIT_R1		1134088	0		!=			
ANR	1134329	BitAndExpression	dst & REG_MASK		1134088	0		&			
ANR	1134330	Identifier	dst		1134088	0					
ANR	1134331	Identifier	REG_MASK		1134088	1					
ANR	1134332	Identifier	SLJIT_R1		1134088	1					
ANR	1134333	EqualityExpression	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 )		1134088	1		!=			
ANR	1134334	BitAndExpression	dst & OFFS_REG_MASK		1134088	0		&			
ANR	1134335	Identifier	dst		1134088	0					
ANR	1134336	Identifier	OFFS_REG_MASK		1134088	1					
ANR	1134337	CallExpression	TO_OFFS_REG ( SLJIT_R1 )		1134088	1					
ANR	1134338	Callee	TO_OFFS_REG		1134088	0					
ANR	1134339	Identifier	TO_OFFS_REG		1134088	0					
ANR	1134340	ArgumentList	SLJIT_R1		1134088	1					
ANR	1134341	Argument	SLJIT_R1		1134088	0					
ANR	1134342	Identifier	SLJIT_R1		1134088	0					
ANR	1134343	ExpressionStatement	dst_r = SLJIT_R1	1193:3:32940:32956	1134088	1	True				
ANR	1134344	AssignmentExpression	dst_r = SLJIT_R1		1134088	0		=			
ANR	1134345	Identifier	dst_r		1134088	0					
ANR	1134346	Identifier	SLJIT_R1		1134088	1					
ANR	1134347	ElseStatement	else		1134088	0					
ANR	1134348	ExpressionStatement	dst_r = SLJIT_R2	1195:3:32968:32984	1134088	0	True				
ANR	1134349	AssignmentExpression	dst_r = SLJIT_R2		1134088	0		=			
ANR	1134350	Identifier	dst_r		1134088	0					
ANR	1134351	Identifier	SLJIT_R2		1134088	1					
ANR	1134352	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , dst_r , 0 )"	1196:2:32988:33027	1134088	1	True				
ANR	1134353	CallExpression	"EMIT_MOV ( compiler , dst , dstw , dst_r , 0 )"		1134088	0					
ANR	1134354	Callee	EMIT_MOV		1134088	0					
ANR	1134355	Identifier	EMIT_MOV		1134088	0					
ANR	1134356	ArgumentList	compiler		1134088	1					
ANR	1134357	Argument	compiler		1134088	0					
ANR	1134358	Identifier	compiler		1134088	0					
ANR	1134359	Argument	dst		1134088	1					
ANR	1134360	Identifier	dst		1134088	0					
ANR	1134361	Argument	dstw		1134088	2					
ANR	1134362	Identifier	dstw		1134088	0					
ANR	1134363	Argument	dst_r		1134088	3					
ANR	1134364	Identifier	dst_r		1134088	0					
ANR	1134365	Argument	0		1134088	4					
ANR	1134366	PrimaryExpression	0		1134088	0					
ANR	1134367	ExpressionStatement	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , 32 + 31 )"	1198:1:33033:33081	1134088	10	True				
ANR	1134368	CallExpression	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , 32 + 31 )"		1134088	0					
ANR	1134369	Callee	EMIT_MOV		1134088	0					
ANR	1134370	Identifier	EMIT_MOV		1134088	0					
ANR	1134371	ArgumentList	compiler		1134088	1					
ANR	1134372	Argument	compiler		1134088	0					
ANR	1134373	Identifier	compiler		1134088	0					
ANR	1134374	Argument	dst_r		1134088	1					
ANR	1134375	Identifier	dst_r		1134088	0					
ANR	1134376	Argument	0		1134088	2					
ANR	1134377	PrimaryExpression	0		1134088	0					
ANR	1134378	Argument	SLJIT_IMM		1134088	3					
ANR	1134379	Identifier	SLJIT_IMM		1134088	0					
ANR	1134380	Argument	32 + 31		1134088	4					
ANR	1134381	AdditiveExpression	32 + 31		1134088	0		+			
ANR	1134382	PrimaryExpression	32		1134088	0					
ANR	1134383	PrimaryExpression	31		1134088	1					
ANR	1134384	IfStatement	if ( cpu_has_cmov == - 1 )		1134088	11					
ANR	1134385	Condition	cpu_has_cmov == - 1	1206:5:33304:33321	1134088	0	True				
ANR	1134386	EqualityExpression	cpu_has_cmov == - 1		1134088	0		==			
ANR	1134387	Identifier	cpu_has_cmov		1134088	0					
ANR	1134388	UnaryOperationExpression	- 1		1134088	1					
ANR	1134389	UnaryOperator	-		1134088	0					
ANR	1134390	PrimaryExpression	1		1134088	1					
ANR	1134391	ExpressionStatement	get_cpu_features ( )	1207:2:33326:33344	1134088	1	True				
ANR	1134392	CallExpression	get_cpu_features ( )		1134088	0					
ANR	1134393	Callee	get_cpu_features		1134088	0					
ANR	1134394	Identifier	get_cpu_features		1134088	0					
ANR	1134395	ArgumentList			1134088	1					
ANR	1134396	IfStatement	if ( cpu_has_cmov )		1134088	12					
ANR	1134397	Condition	cpu_has_cmov	1209:5:33352:33363	1134088	0	True				
ANR	1134398	Identifier	cpu_has_cmov		1134088	0					
ANR	1134399	CompoundStatement		58:19:1677:1677	1134088	1					
ANR	1134400	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , TMP_REG1 , 0 )"	1210:2:33370:33433	1134088	0	True				
ANR	1134401	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , TMP_REG1 , 0 )"		1134088	0		=			
ANR	1134402	Identifier	inst		1134088	0					
ANR	1134403	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , TMP_REG1 , 0 )"		1134088	1					
ANR	1134404	Callee	emit_x86_instruction		1134088	0					
ANR	1134405	Identifier	emit_x86_instruction		1134088	0					
ANR	1134406	ArgumentList	compiler		1134088	1					
ANR	1134407	Argument	compiler		1134088	0					
ANR	1134408	Identifier	compiler		1134088	0					
ANR	1134409	Argument	2		1134088	1					
ANR	1134410	PrimaryExpression	2		1134088	0					
ANR	1134411	Argument	dst_r		1134088	2					
ANR	1134412	Identifier	dst_r		1134088	0					
ANR	1134413	Argument	0		1134088	3					
ANR	1134414	PrimaryExpression	0		1134088	0					
ANR	1134415	Argument	TMP_REG1		1134088	4					
ANR	1134416	Identifier	TMP_REG1		1134088	0					
ANR	1134417	Argument	0		1134088	5					
ANR	1134418	PrimaryExpression	0		1134088	0					
ANR	1134419	ExpressionStatement	FAIL_IF ( ! inst )	1211:2:33437:33451	1134088	1	True				
ANR	1134420	CallExpression	FAIL_IF ( ! inst )		1134088	0					
ANR	1134421	Callee	FAIL_IF		1134088	0					
ANR	1134422	Identifier	FAIL_IF		1134088	0					
ANR	1134423	ArgumentList	! inst		1134088	1					
ANR	1134424	Argument	! inst		1134088	0					
ANR	1134425	UnaryOperationExpression	! inst		1134088	0					
ANR	1134426	UnaryOperator	!		1134088	0					
ANR	1134427	Identifier	inst		1134088	1					
ANR	1134428	ExpressionStatement	* inst ++ = GROUP_0F	1212:2:33455:33473	1134088	2	True				
ANR	1134429	AssignmentExpression	* inst ++ = GROUP_0F		1134088	0		=			
ANR	1134430	UnaryOperationExpression	* inst ++		1134088	0					
ANR	1134431	UnaryOperator	*		1134088	0					
ANR	1134432	PostIncDecOperationExpression	inst ++		1134088	1					
ANR	1134433	Identifier	inst		1134088	0					
ANR	1134434	IncDec	++		1134088	1					
ANR	1134435	Identifier	GROUP_0F		1134088	1					
ANR	1134436	ExpressionStatement	* inst = CMOVNE_r_rm	1213:2:33477:33496	1134088	3	True				
ANR	1134437	AssignmentExpression	* inst = CMOVNE_r_rm		1134088	0		=			
ANR	1134438	UnaryOperationExpression	* inst		1134088	0					
ANR	1134439	UnaryOperator	*		1134088	0					
ANR	1134440	Identifier	inst		1134088	1					
ANR	1134441	Identifier	CMOVNE_r_rm		1134088	1					
ANR	1134442	ElseStatement	else		1134088	0					
ANR	1134443	CompoundStatement		63:8:1817:1817	1134088	0					
ANR	1134444	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"	1216:2:33567:33612	1134088	0	True				
ANR	1134445	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1134088	0		=			
ANR	1134446	Identifier	inst		1134088	0					
ANR	1134447	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1134088	1					
ANR	1134448	CastTarget	sljit_ub *		1134088	0					
ANR	1134449	CallExpression	"ensure_buf ( compiler , 1 + 4 )"		1134088	1					
ANR	1134450	Callee	ensure_buf		1134088	0					
ANR	1134451	Identifier	ensure_buf		1134088	0					
ANR	1134452	ArgumentList	compiler		1134088	1					
ANR	1134453	Argument	compiler		1134088	0					
ANR	1134454	Identifier	compiler		1134088	0					
ANR	1134455	Argument	1 + 4		1134088	1					
ANR	1134456	AdditiveExpression	1 + 4		1134088	0		+			
ANR	1134457	PrimaryExpression	1		1134088	0					
ANR	1134458	PrimaryExpression	4		1134088	1					
ANR	1134459	ExpressionStatement	FAIL_IF ( ! inst )	1217:2:33616:33630	1134088	1	True				
ANR	1134460	CallExpression	FAIL_IF ( ! inst )		1134088	0					
ANR	1134461	Callee	FAIL_IF		1134088	0					
ANR	1134462	Identifier	FAIL_IF		1134088	0					
ANR	1134463	ArgumentList	! inst		1134088	1					
ANR	1134464	Argument	! inst		1134088	0					
ANR	1134465	UnaryOperationExpression	! inst		1134088	0					
ANR	1134466	UnaryOperator	!		1134088	0					
ANR	1134467	Identifier	inst		1134088	1					
ANR	1134468	ExpressionStatement	INC_SIZE ( 4 )	1218:2:33634:33645	1134088	2	True				
ANR	1134469	CallExpression	INC_SIZE ( 4 )		1134088	0					
ANR	1134470	Callee	INC_SIZE		1134088	0					
ANR	1134471	Identifier	INC_SIZE		1134088	0					
ANR	1134472	ArgumentList	4		1134088	1					
ANR	1134473	Argument	4		1134088	0					
ANR	1134474	PrimaryExpression	4		1134088	0					
ANR	1134475	ExpressionStatement	* inst ++ = JE_i8	1220:2:33650:33665	1134088	3	True				
ANR	1134476	AssignmentExpression	* inst ++ = JE_i8		1134088	0		=			
ANR	1134477	UnaryOperationExpression	* inst ++		1134088	0					
ANR	1134478	UnaryOperator	*		1134088	0					
ANR	1134479	PostIncDecOperationExpression	inst ++		1134088	1					
ANR	1134480	Identifier	inst		1134088	0					
ANR	1134481	IncDec	++		1134088	1					
ANR	1134482	Identifier	JE_i8		1134088	1					
ANR	1134483	ExpressionStatement	* inst ++ = 2	1221:2:33669:33680	1134088	4	True				
ANR	1134484	AssignmentExpression	* inst ++ = 2		1134088	0		=			
ANR	1134485	UnaryOperationExpression	* inst ++		1134088	0					
ANR	1134486	UnaryOperator	*		1134088	0					
ANR	1134487	PostIncDecOperationExpression	inst ++		1134088	1					
ANR	1134488	Identifier	inst		1134088	0					
ANR	1134489	IncDec	++		1134088	1					
ANR	1134490	PrimaryExpression	2		1134088	1					
ANR	1134491	ExpressionStatement	* inst ++ = MOV_r_rm	1222:2:33684:33702	1134088	5	True				
ANR	1134492	AssignmentExpression	* inst ++ = MOV_r_rm		1134088	0		=			
ANR	1134493	UnaryOperationExpression	* inst ++		1134088	0					
ANR	1134494	UnaryOperator	*		1134088	0					
ANR	1134495	PostIncDecOperationExpression	inst ++		1134088	1					
ANR	1134496	Identifier	inst		1134088	0					
ANR	1134497	IncDec	++		1134088	1					
ANR	1134498	Identifier	MOV_r_rm		1134088	1					
ANR	1134499	ExpressionStatement	* inst ++ = MOD_REG | ( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]	1223:2:33706:33767	1134088	6	True				
ANR	1134500	AssignmentExpression	* inst ++ = MOD_REG | ( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]		1134088	0		=			
ANR	1134501	UnaryOperationExpression	* inst ++		1134088	0					
ANR	1134502	UnaryOperator	*		1134088	0					
ANR	1134503	PostIncDecOperationExpression	inst ++		1134088	1					
ANR	1134504	Identifier	inst		1134088	0					
ANR	1134505	IncDec	++		1134088	1					
ANR	1134506	InclusiveOrExpression	MOD_REG | ( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]		1134088	1		|			
ANR	1134507	Identifier	MOD_REG		1134088	0					
ANR	1134508	InclusiveOrExpression	( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]		1134088	1		|			
ANR	1134509	ShiftExpression	reg_map [ dst_r ] << 3		1134088	0		<<			
ANR	1134510	ArrayIndexing	reg_map [ dst_r ]		1134088	0					
ANR	1134511	Identifier	reg_map		1134088	0					
ANR	1134512	Identifier	dst_r		1134088	1					
ANR	1134513	PrimaryExpression	3		1134088	1					
ANR	1134514	ArrayIndexing	reg_map [ TMP_REG1 ]		1134088	1					
ANR	1134515	Identifier	reg_map		1134088	0					
ANR	1134516	Identifier	TMP_REG1		1134088	1					
ANR	1134517	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 31 , dst_r , 0 )"	1238:1:34144:34224	1134088	13	True				
ANR	1134518	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 31 , dst_r , 0 )"		1134088	0		=			
ANR	1134519	Identifier	inst		1134088	0					
ANR	1134520	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 31 , dst_r , 0 )"		1134088	1					
ANR	1134521	Callee	emit_x86_instruction		1134088	0					
ANR	1134522	Identifier	emit_x86_instruction		1134088	0					
ANR	1134523	ArgumentList	compiler		1134088	1					
ANR	1134524	Argument	compiler		1134088	0					
ANR	1134525	Identifier	compiler		1134088	0					
ANR	1134526	Argument	1 | EX86_BIN_INS		1134088	1					
ANR	1134527	InclusiveOrExpression	1 | EX86_BIN_INS		1134088	0		|			
ANR	1134528	PrimaryExpression	1		1134088	0					
ANR	1134529	Identifier	EX86_BIN_INS		1134088	1					
ANR	1134530	Argument	SLJIT_IMM		1134088	2					
ANR	1134531	Identifier	SLJIT_IMM		1134088	0					
ANR	1134532	Argument	31		1134088	3					
ANR	1134533	PrimaryExpression	31		1134088	0					
ANR	1134534	Argument	dst_r		1134088	4					
ANR	1134535	Identifier	dst_r		1134088	0					
ANR	1134536	Argument	0		1134088	5					
ANR	1134537	PrimaryExpression	0		1134088	0					
ANR	1134538	ExpressionStatement	FAIL_IF ( ! inst )	1242:1:34357:34371	1134088	14	True				
ANR	1134539	CallExpression	FAIL_IF ( ! inst )		1134088	0					
ANR	1134540	Callee	FAIL_IF		1134088	0					
ANR	1134541	Identifier	FAIL_IF		1134088	0					
ANR	1134542	ArgumentList	! inst		1134088	1					
ANR	1134543	Argument	! inst		1134088	0					
ANR	1134544	UnaryOperationExpression	! inst		1134088	0					
ANR	1134545	UnaryOperator	!		1134088	0					
ANR	1134546	Identifier	inst		1134088	1					
ANR	1134547	ExpressionStatement	* ( inst + 1 ) |= XOR	1243:1:34374:34392	1134088	15	True				
ANR	1134548	AssignmentExpression	* ( inst + 1 ) |= XOR		1134088	0		|=			
ANR	1134549	UnaryOperationExpression	* ( inst + 1 )		1134088	0					
ANR	1134550	UnaryOperator	*		1134088	0					
ANR	1134551	AdditiveExpression	inst + 1		1134088	1		+			
ANR	1134552	Identifier	inst		1134088	0					
ANR	1134553	PrimaryExpression	1		1134088	1					
ANR	1134554	Identifier	XOR		1134088	1					
ANR	1134555	IfStatement	if ( dst & SLJIT_MEM )		1134088	16					
ANR	1134556	Condition	dst & SLJIT_MEM	1246:5:34457:34471	1134088	0	True				
ANR	1134557	BitAndExpression	dst & SLJIT_MEM		1134088	0		&			
ANR	1134558	Identifier	dst		1134088	0					
ANR	1134559	Identifier	SLJIT_MEM		1134088	1					
ANR	1134560	CompoundStatement		95:22:2785:2785	1134088	1					
ANR	1134561	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"	1247:2:34478:34539	1134088	0	True				
ANR	1134562	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1134088	0		=			
ANR	1134563	Identifier	inst		1134088	0					
ANR	1134564	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1134088	1					
ANR	1134565	Callee	emit_x86_instruction		1134088	0					
ANR	1134566	Identifier	emit_x86_instruction		1134088	0					
ANR	1134567	ArgumentList	compiler		1134088	1					
ANR	1134568	Argument	compiler		1134088	0					
ANR	1134569	Identifier	compiler		1134088	0					
ANR	1134570	Argument	1		1134088	1					
ANR	1134571	PrimaryExpression	1		1134088	0					
ANR	1134572	Argument	dst_r		1134088	2					
ANR	1134573	Identifier	dst_r		1134088	0					
ANR	1134574	Argument	0		1134088	3					
ANR	1134575	PrimaryExpression	0		1134088	0					
ANR	1134576	Argument	dst		1134088	4					
ANR	1134577	Identifier	dst		1134088	0					
ANR	1134578	Argument	dstw		1134088	5					
ANR	1134579	Identifier	dstw		1134088	0					
ANR	1134580	ExpressionStatement	FAIL_IF ( ! inst )	1248:2:34543:34557	1134088	1	True				
ANR	1134581	CallExpression	FAIL_IF ( ! inst )		1134088	0					
ANR	1134582	Callee	FAIL_IF		1134088	0					
ANR	1134583	Identifier	FAIL_IF		1134088	0					
ANR	1134584	ArgumentList	! inst		1134088	1					
ANR	1134585	Argument	! inst		1134088	0					
ANR	1134586	UnaryOperationExpression	! inst		1134088	0					
ANR	1134587	UnaryOperator	!		1134088	0					
ANR	1134588	Identifier	inst		1134088	1					
ANR	1134589	ExpressionStatement	* inst = XCHG_r_rm	1249:2:34561:34578	1134088	2	True				
ANR	1134590	AssignmentExpression	* inst = XCHG_r_rm		1134088	0		=			
ANR	1134591	UnaryOperationExpression	* inst		1134088	0					
ANR	1134592	UnaryOperator	*		1134088	0					
ANR	1134593	Identifier	inst		1134088	1					
ANR	1134594	Identifier	XCHG_r_rm		1134088	1					
ANR	1134595	ReturnStatement	return SLJIT_SUCCESS ;	1255:1:34665:34685	1134088	17	True				
ANR	1134596	Identifier	SLJIT_SUCCESS		1134088	0					
ANR	1134597	ReturnType	static sljit_si		1134088	1					
ANR	1134598	Identifier	emit_clz		1134088	2					
ANR	1134599	ParameterList	"struct sljit_compiler * compiler , sljit_si op_flags , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1134088	3					
ANR	1134600	Parameter	struct sljit_compiler * compiler	1149:25:31576:31606	1134088	0	True				
ANR	1134601	ParameterType	struct sljit_compiler *		1134088	0					
ANR	1134602	Identifier	compiler		1134088	1					
ANR	1134603	Parameter	sljit_si op_flags	1149:58:31609:31625	1134088	1	True				
ANR	1134604	ParameterType	sljit_si		1134088	0					
ANR	1134605	Identifier	op_flags		1134088	1					
ANR	1134606	Parameter	sljit_si dst	1150:1:31629:31640	1134088	2	True				
ANR	1134607	ParameterType	sljit_si		1134088	0					
ANR	1134608	Identifier	dst		1134088	1					
ANR	1134609	Parameter	sljit_sw dstw	1150:15:31643:31655	1134088	3	True				
ANR	1134610	ParameterType	sljit_sw		1134088	0					
ANR	1134611	Identifier	dstw		1134088	1					
ANR	1134612	Parameter	sljit_si src	1151:1:31659:31670	1134088	4	True				
ANR	1134613	ParameterType	sljit_si		1134088	0					
ANR	1134614	Identifier	src		1134088	1					
ANR	1134615	Parameter	sljit_sw srcw	1151:15:31673:31685	1134088	5	True				
ANR	1134616	ParameterType	sljit_sw		1134088	0					
ANR	1134617	Identifier	srcw		1134088	1					
ANR	1134618	CFGEntryNode	ENTRY		1134088		True				
ANR	1134619	CFGExitNode	EXIT		1134088		True				
ANR	1134620	Symbol	JE_i8		1134088						
ANR	1134621	Symbol	TMP_REG1		1134088						
ANR	1134622	Symbol	dst		1134088						
ANR	1134623	Symbol	GROUP_F7		1134088						
ANR	1134624	Symbol	SLJIT_MEM		1134088						
ANR	1134625	Symbol	* inst ++		1134088						
ANR	1134626	Symbol	reg_map		1134088						
ANR	1134627	Symbol	SLJIT_R1		1134088						
ANR	1134628	Symbol	SLJIT_R2		1134088						
ANR	1134629	Symbol	dst_r		1134088						
ANR	1134630	Symbol	SLJIT_R0		1134088						
ANR	1134631	Symbol	XCHG_r_rm		1134088						
ANR	1134632	Symbol	SLJIT_IMM		1134088						
ANR	1134633	Symbol	BSR_r_rm		1134088						
ANR	1134634	Symbol	cpu_has_cmov		1134088						
ANR	1134635	Symbol	* dst_r		1134088						
ANR	1134636	Symbol	* TMP_REG1		1134088						
ANR	1134637	Symbol	EX86_BIN_INS		1134088						
ANR	1134638	Symbol	compiler		1134088						
ANR	1134639	Symbol	SHR		1134088						
ANR	1134640	Symbol	NOT_rm		1134088						
ANR	1134641	Symbol	op_flags		1134088						
ANR	1134642	Symbol	TO_OFFS_REG		1134088						
ANR	1134643	Symbol	emit_x86_instruction		1134088						
ANR	1134644	Symbol	GROUP_0F		1134088						
ANR	1134645	Symbol	REG_MASK		1134088						
ANR	1134646	Symbol	* inst		1134088						
ANR	1134647	Symbol	FAST_IS_REG		1134088						
ANR	1134648	Symbol	MOV_r_rm		1134088						
ANR	1134649	Symbol	src		1134088						
ANR	1134650	Symbol	srcw		1134088						
ANR	1134651	Symbol	OFFS_REG_MASK		1134088						
ANR	1134652	Symbol	SLJIT_SUCCESS		1134088						
ANR	1134653	Symbol	* reg_map		1134088						
ANR	1134654	Symbol	MOD_REG		1134088						
ANR	1134655	Symbol	SLJIT_UNUSED		1134088						
ANR	1134656	Symbol	EX86_SHIFT_INS		1134088						
ANR	1134657	Symbol	CMOVNE_r_rm		1134088						
ANR	1134658	Symbol	inst		1134088						
ANR	1134659	Symbol	ensure_buf		1134088						
ANR	1134660	Symbol	XOR		1134088						
ANR	1134661	Symbol	* ( inst + 1 )		1134088						
ANR	1134662	Symbol	dstw		1134088						
ANR	1134663	Symbol	SLJIT_UNLIKELY		1134088						
ANR	1134664	Function	sljit_emit_op1	1258:0:34690:39484							
ANR	1134665	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1134664	0					
ANR	1134666	CompoundStatement		1261:0:34845:39484	1134664	0					
ANR	1134667	IdentifierDeclStatement	sljit_ub * inst ;	1262:1:34848:34862	1134664	0	True				
ANR	1134668	IdentifierDecl	* inst		1134664	0					
ANR	1134669	IdentifierDeclType	sljit_ub *		1134664	0					
ANR	1134670	Identifier	inst		1134664	1					
ANR	1134671	IdentifierDeclStatement	sljit_si update = 0 ;	1263:1:34865:34884	1134664	1	True				
ANR	1134672	IdentifierDecl	update = 0		1134664	0					
ANR	1134673	IdentifierDeclType	sljit_si		1134664	0					
ANR	1134674	Identifier	update		1134664	1					
ANR	1134675	AssignmentExpression	update = 0		1134664	2		=			
ANR	1134676	Identifier	update		1134664	0					
ANR	1134677	PrimaryExpression	0		1134664	1					
ANR	1134678	IdentifierDeclStatement	sljit_si op_flags = GET_ALL_FLAGS ( op ) ;	1264:1:34887:34924	1134664	2	True				
ANR	1134679	IdentifierDecl	op_flags = GET_ALL_FLAGS ( op )		1134664	0					
ANR	1134680	IdentifierDeclType	sljit_si		1134664	0					
ANR	1134681	Identifier	op_flags		1134664	1					
ANR	1134682	AssignmentExpression	op_flags = GET_ALL_FLAGS ( op )		1134664	2		=			
ANR	1134683	Identifier	op_flags		1134664	0					
ANR	1134684	CallExpression	GET_ALL_FLAGS ( op )		1134664	1					
ANR	1134685	Callee	GET_ALL_FLAGS		1134664	0					
ANR	1134686	Identifier	GET_ALL_FLAGS		1134664	0					
ANR	1134687	ArgumentList	op		1134664	1					
ANR	1134688	Argument	op		1134664	0					
ANR	1134689	Identifier	op		1134664	0					
ANR	1134690	IdentifierDeclStatement	sljit_si dst_is_ereg = 0 ;	1266:1:34984:35008	1134664	3	True				
ANR	1134691	IdentifierDecl	dst_is_ereg = 0		1134664	0					
ANR	1134692	IdentifierDeclType	sljit_si		1134664	0					
ANR	1134693	Identifier	dst_is_ereg		1134664	1					
ANR	1134694	AssignmentExpression	dst_is_ereg = 0		1134664	2		=			
ANR	1134695	Identifier	dst_is_ereg		1134664	0					
ANR	1134696	PrimaryExpression	0		1134664	1					
ANR	1134697	IdentifierDeclStatement	sljit_si src_is_ereg = 0 ;	1267:1:35011:35035	1134664	4	True				
ANR	1134698	IdentifierDecl	src_is_ereg = 0		1134664	0					
ANR	1134699	IdentifierDeclType	sljit_si		1134664	0					
ANR	1134700	Identifier	src_is_ereg		1134664	1					
ANR	1134701	AssignmentExpression	src_is_ereg = 0		1134664	2		=			
ANR	1134702	Identifier	src_is_ereg		1134664	0					
ANR	1134703	PrimaryExpression	0		1134664	1					
ANR	1134704	ExpressionStatement	CHECK_ERROR ( )	1272:1:35075:35088	1134664	5	True				
ANR	1134705	CallExpression	CHECK_ERROR ( )		1134664	0					
ANR	1134706	Callee	CHECK_ERROR		1134664	0					
ANR	1134707	Identifier	CHECK_ERROR		1134664	0					
ANR	1134708	ArgumentList			1134664	1					
ANR	1134709	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1273:1:35091:35154	1134664	6	True				
ANR	1134710	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1134711	Callee	CHECK		1134664	0					
ANR	1134712	Identifier	CHECK		1134664	0					
ANR	1134713	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1134664	1					
ANR	1134714	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1134664	0					
ANR	1134715	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1134664	0					
ANR	1134716	Callee	check_sljit_emit_op1		1134664	0					
ANR	1134717	Identifier	check_sljit_emit_op1		1134664	0					
ANR	1134718	ArgumentList	compiler		1134664	1					
ANR	1134719	Argument	compiler		1134664	0					
ANR	1134720	Identifier	compiler		1134664	0					
ANR	1134721	Argument	op		1134664	1					
ANR	1134722	Identifier	op		1134664	0					
ANR	1134723	Argument	dst		1134664	2					
ANR	1134724	Identifier	dst		1134664	0					
ANR	1134725	Argument	dstw		1134664	3					
ANR	1134726	Identifier	dstw		1134664	0					
ANR	1134727	Argument	src		1134664	4					
ANR	1134728	Identifier	src		1134664	0					
ANR	1134729	Argument	srcw		1134664	5					
ANR	1134730	Identifier	srcw		1134664	0					
ANR	1134731	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1274:1:35157:35187	1134664	7	True				
ANR	1134732	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1134664	0					
ANR	1134733	Callee	ADJUST_LOCAL_OFFSET		1134664	0					
ANR	1134734	Identifier	ADJUST_LOCAL_OFFSET		1134664	0					
ANR	1134735	ArgumentList	dst		1134664	1					
ANR	1134736	Argument	dst		1134664	0					
ANR	1134737	Identifier	dst		1134664	0					
ANR	1134738	Argument	dstw		1134664	1					
ANR	1134739	Identifier	dstw		1134664	0					
ANR	1134740	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1275:1:35190:35220	1134664	8	True				
ANR	1134741	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1134664	0					
ANR	1134742	Callee	ADJUST_LOCAL_OFFSET		1134664	0					
ANR	1134743	Identifier	ADJUST_LOCAL_OFFSET		1134664	0					
ANR	1134744	ArgumentList	src		1134664	1					
ANR	1134745	Argument	src		1134664	0					
ANR	1134746	Identifier	src		1134664	0					
ANR	1134747	Argument	srcw		1134664	1					
ANR	1134748	Identifier	srcw		1134664	0					
ANR	1134749	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , dst_is_ereg = 1 )"	1277:1:35224:35268	1134664	9	True				
ANR	1134750	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , dst_is_ereg = 1 )"		1134664	0					
ANR	1134751	Callee	CHECK_EXTRA_REGS		1134664	0					
ANR	1134752	Identifier	CHECK_EXTRA_REGS		1134664	0					
ANR	1134753	ArgumentList	dst		1134664	1					
ANR	1134754	Argument	dst		1134664	0					
ANR	1134755	Identifier	dst		1134664	0					
ANR	1134756	Argument	dstw		1134664	1					
ANR	1134757	Identifier	dstw		1134664	0					
ANR	1134758	Argument	dst_is_ereg = 1		1134664	2					
ANR	1134759	AssignmentExpression	dst_is_ereg = 1		1134664	0		=			
ANR	1134760	Identifier	dst_is_ereg		1134664	0					
ANR	1134761	PrimaryExpression	1		1134664	1					
ANR	1134762	ExpressionStatement	"CHECK_EXTRA_REGS ( src , srcw , src_is_ereg = 1 )"	1278:1:35271:35315	1134664	10	True				
ANR	1134763	CallExpression	"CHECK_EXTRA_REGS ( src , srcw , src_is_ereg = 1 )"		1134664	0					
ANR	1134764	Callee	CHECK_EXTRA_REGS		1134664	0					
ANR	1134765	Identifier	CHECK_EXTRA_REGS		1134664	0					
ANR	1134766	ArgumentList	src		1134664	1					
ANR	1134767	Argument	src		1134664	0					
ANR	1134768	Identifier	src		1134664	0					
ANR	1134769	Argument	srcw		1134664	1					
ANR	1134770	Identifier	srcw		1134664	0					
ANR	1134771	Argument	src_is_ereg = 1		1134664	2					
ANR	1134772	AssignmentExpression	src_is_ereg = 1		1134664	0		=			
ANR	1134773	Identifier	src_is_ereg		1134664	0					
ANR	1134774	PrimaryExpression	1		1134664	1					
ANR	1134775	ExpressionStatement	compiler -> mode32 = op_flags & SLJIT_INT_OP	1280:1:35375:35417	1134664	11	True				
ANR	1134776	AssignmentExpression	compiler -> mode32 = op_flags & SLJIT_INT_OP		1134664	0		=			
ANR	1134777	PtrMemberAccess	compiler -> mode32		1134664	0					
ANR	1134778	Identifier	compiler		1134664	0					
ANR	1134779	Identifier	mode32		1134664	1					
ANR	1134780	BitAndExpression	op_flags & SLJIT_INT_OP		1134664	1		&			
ANR	1134781	Identifier	op_flags		1134664	0					
ANR	1134782	Identifier	SLJIT_INT_OP		1134664	1					
ANR	1134783	ExpressionStatement	op = GET_OPCODE ( op )	1283:1:35428:35447	1134664	12	True				
ANR	1134784	AssignmentExpression	op = GET_OPCODE ( op )		1134664	0		=			
ANR	1134785	Identifier	op		1134664	0					
ANR	1134786	CallExpression	GET_OPCODE ( op )		1134664	1					
ANR	1134787	Callee	GET_OPCODE		1134664	0					
ANR	1134788	Identifier	GET_OPCODE		1134664	0					
ANR	1134789	ArgumentList	op		1134664	1					
ANR	1134790	Argument	op		1134664	0					
ANR	1134791	Identifier	op		1134664	0					
ANR	1134792	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_P )		1134664	13					
ANR	1134793	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_P	1284:5:35454:35490	1134664	0	True				
ANR	1134794	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_P		1134664	0		&&			
ANR	1134795	RelationalExpression	op >= SLJIT_MOV		1134664	0		>=			
ANR	1134796	Identifier	op		1134664	0					
ANR	1134797	Identifier	SLJIT_MOV		1134664	1					
ANR	1134798	RelationalExpression	op <= SLJIT_MOVU_P		1134664	1		<=			
ANR	1134799	Identifier	op		1134664	0					
ANR	1134800	Identifier	SLJIT_MOVU_P		1134664	1					
ANR	1134801	CompoundStatement		24:44:647:647	1134664	1					
ANR	1134802	ExpressionStatement	compiler -> mode32 = 0	1286:2:35554:35574	1134664	0	True				
ANR	1134803	AssignmentExpression	compiler -> mode32 = 0		1134664	0		=			
ANR	1134804	PtrMemberAccess	compiler -> mode32		1134664	0					
ANR	1134805	Identifier	compiler		1134664	0					
ANR	1134806	Identifier	mode32		1134664	1					
ANR	1134807	PrimaryExpression	0		1134664	1					
ANR	1134808	IfStatement	if ( op_flags & SLJIT_INT_OP )		1134664	1					
ANR	1134809	Condition	op_flags & SLJIT_INT_OP	1289:6:35590:35612	1134664	0	True				
ANR	1134810	BitAndExpression	op_flags & SLJIT_INT_OP		1134664	0		&			
ANR	1134811	Identifier	op_flags		1134664	0					
ANR	1134812	Identifier	SLJIT_INT_OP		1134664	1					
ANR	1134813	CompoundStatement		29:31:769:769	1134664	1					
ANR	1134814	IfStatement	if ( FAST_IS_REG ( src ) && src == dst )		1134664	0					
ANR	1134815	Condition	FAST_IS_REG ( src ) && src == dst	1290:7:35624:35653	1134664	0	True				
ANR	1134816	AndExpression	FAST_IS_REG ( src ) && src == dst		1134664	0		&&			
ANR	1134817	CallExpression	FAST_IS_REG ( src )		1134664	0					
ANR	1134818	Callee	FAST_IS_REG		1134664	0					
ANR	1134819	Identifier	FAST_IS_REG		1134664	0					
ANR	1134820	ArgumentList	src		1134664	1					
ANR	1134821	Argument	src		1134664	0					
ANR	1134822	Identifier	src		1134664	0					
ANR	1134823	EqualityExpression	src == dst		1134664	1		==			
ANR	1134824	Identifier	src		1134664	0					
ANR	1134825	Identifier	dst		1134664	1					
ANR	1134826	CompoundStatement		30:39:810:810	1134664	1					
ANR	1134827	IfStatement	if ( ! TYPE_CAST_NEEDED ( op ) )		1134664	0					
ANR	1134828	Condition	! TYPE_CAST_NEEDED ( op )	1291:8:35666:35686	1134664	0	True				
ANR	1134829	UnaryOperationExpression	! TYPE_CAST_NEEDED ( op )		1134664	0					
ANR	1134830	UnaryOperator	!		1134664	0					
ANR	1134831	CallExpression	TYPE_CAST_NEEDED ( op )		1134664	1					
ANR	1134832	Callee	TYPE_CAST_NEEDED		1134664	0					
ANR	1134833	Identifier	TYPE_CAST_NEEDED		1134664	0					
ANR	1134834	ArgumentList	op		1134664	1					
ANR	1134835	Argument	op		1134664	0					
ANR	1134836	Identifier	op		1134664	0					
ANR	1134837	ReturnStatement	return SLJIT_SUCCESS ;	1292:5:35694:35714	1134664	1	True				
ANR	1134838	Identifier	SLJIT_SUCCESS		1134664	0					
ANR	1134839	IfStatement	if ( op == SLJIT_MOV_SI && ( src & SLJIT_MEM ) )		1134664	1					
ANR	1134840	Condition	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )	1295:7:35785:35823	1134664	0	True				
ANR	1134841	AndExpression	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )		1134664	0		&&			
ANR	1134842	EqualityExpression	op == SLJIT_MOV_SI		1134664	0		==			
ANR	1134843	Identifier	op		1134664	0					
ANR	1134844	Identifier	SLJIT_MOV_SI		1134664	1					
ANR	1134845	BitAndExpression	src & SLJIT_MEM		1134664	1		&			
ANR	1134846	Identifier	src		1134664	0					
ANR	1134847	Identifier	SLJIT_MEM		1134664	1					
ANR	1134848	ExpressionStatement	op = SLJIT_MOV_UI	1296:4:35830:35847	1134664	1	True				
ANR	1134849	AssignmentExpression	op = SLJIT_MOV_UI		1134664	0		=			
ANR	1134850	Identifier	op		1134664	0					
ANR	1134851	Identifier	SLJIT_MOV_UI		1134664	1					
ANR	1134852	IfStatement	if ( op == SLJIT_MOVU_SI && ( src & SLJIT_MEM ) )		1134664	2					
ANR	1134853	Condition	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )	1297:7:35856:35895	1134664	0	True				
ANR	1134854	AndExpression	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )		1134664	0		&&			
ANR	1134855	EqualityExpression	op == SLJIT_MOVU_SI		1134664	0		==			
ANR	1134856	Identifier	op		1134664	0					
ANR	1134857	Identifier	SLJIT_MOVU_SI		1134664	1					
ANR	1134858	BitAndExpression	src & SLJIT_MEM		1134664	1		&			
ANR	1134859	Identifier	src		1134664	0					
ANR	1134860	Identifier	SLJIT_MEM		1134664	1					
ANR	1134861	ExpressionStatement	op = SLJIT_MOVU_UI	1298:4:35902:35920	1134664	1	True				
ANR	1134862	AssignmentExpression	op = SLJIT_MOVU_UI		1134664	0		=			
ANR	1134863	Identifier	op		1134664	0					
ANR	1134864	Identifier	SLJIT_MOVU_UI		1134664	1					
ANR	1134865	IfStatement	if ( op == SLJIT_MOV_UI && ( src & SLJIT_IMM ) )		1134664	3					
ANR	1134866	Condition	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )	1299:7:35929:35967	1134664	0	True				
ANR	1134867	AndExpression	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )		1134664	0		&&			
ANR	1134868	EqualityExpression	op == SLJIT_MOV_UI		1134664	0		==			
ANR	1134869	Identifier	op		1134664	0					
ANR	1134870	Identifier	SLJIT_MOV_UI		1134664	1					
ANR	1134871	BitAndExpression	src & SLJIT_IMM		1134664	1		&			
ANR	1134872	Identifier	src		1134664	0					
ANR	1134873	Identifier	SLJIT_IMM		1134664	1					
ANR	1134874	ExpressionStatement	op = SLJIT_MOV_SI	1300:4:35974:35991	1134664	1	True				
ANR	1134875	AssignmentExpression	op = SLJIT_MOV_SI		1134664	0		=			
ANR	1134876	Identifier	op		1134664	0					
ANR	1134877	Identifier	SLJIT_MOV_SI		1134664	1					
ANR	1134878	IfStatement	if ( op == SLJIT_MOVU_UI && ( src & SLJIT_IMM ) )		1134664	4					
ANR	1134879	Condition	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )	1301:7:36000:36039	1134664	0	True				
ANR	1134880	AndExpression	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )		1134664	0		&&			
ANR	1134881	EqualityExpression	op == SLJIT_MOVU_UI		1134664	0		==			
ANR	1134882	Identifier	op		1134664	0					
ANR	1134883	Identifier	SLJIT_MOVU_UI		1134664	1					
ANR	1134884	BitAndExpression	src & SLJIT_IMM		1134664	1		&			
ANR	1134885	Identifier	src		1134664	0					
ANR	1134886	Identifier	SLJIT_IMM		1134664	1					
ANR	1134887	ExpressionStatement	op = SLJIT_MOVU_SI	1302:4:36046:36064	1134664	1	True				
ANR	1134888	AssignmentExpression	op = SLJIT_MOVU_SI		1134664	0		=			
ANR	1134889	Identifier	op		1134664	0					
ANR	1134890	Identifier	SLJIT_MOVU_SI		1134664	1					
ANR	1134891	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( SLJIT_MOV + 8 == SLJIT_MOVU , movu_offset )"	1306:2:36080:36142	1134664	2	True				
ANR	1134892	CallExpression	"SLJIT_COMPILE_ASSERT ( SLJIT_MOV + 8 == SLJIT_MOVU , movu_offset )"		1134664	0					
ANR	1134893	Callee	SLJIT_COMPILE_ASSERT		1134664	0					
ANR	1134894	Identifier	SLJIT_COMPILE_ASSERT		1134664	0					
ANR	1134895	ArgumentList	SLJIT_MOV + 8 == SLJIT_MOVU		1134664	1					
ANR	1134896	Argument	SLJIT_MOV + 8 == SLJIT_MOVU		1134664	0					
ANR	1134897	EqualityExpression	SLJIT_MOV + 8 == SLJIT_MOVU		1134664	0		==			
ANR	1134898	AdditiveExpression	SLJIT_MOV + 8		1134664	0		+			
ANR	1134899	Identifier	SLJIT_MOV		1134664	0					
ANR	1134900	PrimaryExpression	8		1134664	1					
ANR	1134901	Identifier	SLJIT_MOVU		1134664	1					
ANR	1134902	Argument	movu_offset		1134664	1					
ANR	1134903	Identifier	movu_offset		1134664	0					
ANR	1134904	IfStatement	if ( op >= SLJIT_MOVU )		1134664	3					
ANR	1134905	Condition	op >= SLJIT_MOVU	1307:6:36150:36165	1134664	0	True				
ANR	1134906	RelationalExpression	op >= SLJIT_MOVU		1134664	0		>=			
ANR	1134907	Identifier	op		1134664	0					
ANR	1134908	Identifier	SLJIT_MOVU		1134664	1					
ANR	1134909	CompoundStatement		47:24:1322:1322	1134664	1					
ANR	1134910	ExpressionStatement	update = 1	1308:3:36173:36183	1134664	0	True				
ANR	1134911	AssignmentExpression	update = 1		1134664	0		=			
ANR	1134912	Identifier	update		1134664	0					
ANR	1134913	PrimaryExpression	1		1134664	1					
ANR	1134914	ExpressionStatement	op -= 8	1309:3:36188:36195	1134664	1	True				
ANR	1134915	AssignmentExpression	op -= 8		1134664	0		-=			
ANR	1134916	Identifier	op		1134664	0					
ANR	1134917	PrimaryExpression	8		1134664	1					
ANR	1134918	IfStatement	if ( src & SLJIT_IMM )		1134664	4					
ANR	1134919	Condition	src & SLJIT_IMM	1312:6:36208:36222	1134664	0	True				
ANR	1134920	BitAndExpression	src & SLJIT_IMM		1134664	0		&			
ANR	1134921	Identifier	src		1134664	0					
ANR	1134922	Identifier	SLJIT_IMM		1134664	1					
ANR	1134923	CompoundStatement		52:23:1379:1379	1134664	1					
ANR	1134924	SwitchStatement	switch ( op )		1134664	0					
ANR	1134925	Condition	op	1313:11:36238:36239	1134664	0	True				
ANR	1134926	Identifier	op		1134664	0					
ANR	1134927	CompoundStatement		53:15:1396:1396	1134664	1					
ANR	1134928	Label	case SLJIT_MOV_UB :	1314:3:36247:36264	1134664	0	True				
ANR	1134929	Identifier	SLJIT_MOV_UB		1134664	0					
ANR	1134930	ExpressionStatement	srcw = ( sljit_ub ) srcw	1315:4:36270:36291	1134664	1	True				
ANR	1134931	AssignmentExpression	srcw = ( sljit_ub ) srcw		1134664	0		=			
ANR	1134932	Identifier	srcw		1134664	0					
ANR	1134933	CastExpression	( sljit_ub ) srcw		1134664	1					
ANR	1134934	CastTarget	sljit_ub		1134664	0					
ANR	1134935	Identifier	srcw		1134664	1					
ANR	1134936	BreakStatement	break ;	1316:4:36297:36302	1134664	2	True				
ANR	1134937	Label	case SLJIT_MOV_SB :	1317:3:36307:36324	1134664	3	True				
ANR	1134938	Identifier	SLJIT_MOV_SB		1134664	0					
ANR	1134939	ExpressionStatement	srcw = ( sljit_sb ) srcw	1318:4:36330:36351	1134664	4	True				
ANR	1134940	AssignmentExpression	srcw = ( sljit_sb ) srcw		1134664	0		=			
ANR	1134941	Identifier	srcw		1134664	0					
ANR	1134942	CastExpression	( sljit_sb ) srcw		1134664	1					
ANR	1134943	CastTarget	sljit_sb		1134664	0					
ANR	1134944	Identifier	srcw		1134664	1					
ANR	1134945	BreakStatement	break ;	1319:4:36357:36362	1134664	5	True				
ANR	1134946	Label	case SLJIT_MOV_UH :	1320:3:36367:36384	1134664	6	True				
ANR	1134947	Identifier	SLJIT_MOV_UH		1134664	0					
ANR	1134948	ExpressionStatement	srcw = ( sljit_uh ) srcw	1321:4:36390:36411	1134664	7	True				
ANR	1134949	AssignmentExpression	srcw = ( sljit_uh ) srcw		1134664	0		=			
ANR	1134950	Identifier	srcw		1134664	0					
ANR	1134951	CastExpression	( sljit_uh ) srcw		1134664	1					
ANR	1134952	CastTarget	sljit_uh		1134664	0					
ANR	1134953	Identifier	srcw		1134664	1					
ANR	1134954	BreakStatement	break ;	1322:4:36417:36422	1134664	8	True				
ANR	1134955	Label	case SLJIT_MOV_SH :	1323:3:36427:36444	1134664	9	True				
ANR	1134956	Identifier	SLJIT_MOV_SH		1134664	0					
ANR	1134957	ExpressionStatement	srcw = ( sljit_sh ) srcw	1324:4:36450:36471	1134664	10	True				
ANR	1134958	AssignmentExpression	srcw = ( sljit_sh ) srcw		1134664	0		=			
ANR	1134959	Identifier	srcw		1134664	0					
ANR	1134960	CastExpression	( sljit_sh ) srcw		1134664	1					
ANR	1134961	CastTarget	sljit_sh		1134664	0					
ANR	1134962	Identifier	srcw		1134664	1					
ANR	1134963	BreakStatement	break ;	1325:4:36477:36482	1134664	11	True				
ANR	1134964	Label	case SLJIT_MOV_UI :	1327:3:36544:36561	1134664	12	True				
ANR	1134965	Identifier	SLJIT_MOV_UI		1134664	0					
ANR	1134966	ExpressionStatement	srcw = ( sljit_ui ) srcw	1328:4:36567:36588	1134664	13	True				
ANR	1134967	AssignmentExpression	srcw = ( sljit_ui ) srcw		1134664	0		=			
ANR	1134968	Identifier	srcw		1134664	0					
ANR	1134969	CastExpression	( sljit_ui ) srcw		1134664	1					
ANR	1134970	CastTarget	sljit_ui		1134664	0					
ANR	1134971	Identifier	srcw		1134664	1					
ANR	1134972	BreakStatement	break ;	1329:4:36594:36599	1134664	14	True				
ANR	1134973	Label	case SLJIT_MOV_SI :	1330:3:36604:36621	1134664	15	True				
ANR	1134974	Identifier	SLJIT_MOV_SI		1134664	0					
ANR	1134975	ExpressionStatement	srcw = ( sljit_si ) srcw	1331:4:36627:36648	1134664	16	True				
ANR	1134976	AssignmentExpression	srcw = ( sljit_si ) srcw		1134664	0		=			
ANR	1134977	Identifier	srcw		1134664	0					
ANR	1134978	CastExpression	( sljit_si ) srcw		1134664	1					
ANR	1134979	CastTarget	sljit_si		1134664	0					
ANR	1134980	Identifier	srcw		1134664	1					
ANR	1134981	BreakStatement	break ;	1332:4:36654:36659	1134664	17	True				
ANR	1134982	IfStatement	if ( SLJIT_UNLIKELY ( dst_is_ereg ) )		1134664	1					
ANR	1134983	Condition	SLJIT_UNLIKELY ( dst_is_ereg )	1336:7:36737:36763	1134664	0	True				
ANR	1134984	CallExpression	SLJIT_UNLIKELY ( dst_is_ereg )		1134664	0					
ANR	1134985	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1134986	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1134987	ArgumentList	dst_is_ereg		1134664	1					
ANR	1134988	Argument	dst_is_ereg		1134664	0					
ANR	1134989	Identifier	dst_is_ereg		1134664	0					
ANR	1134990	ReturnStatement	"return emit_mov ( compiler , dst , dstw , src , srcw ) ;"	1337:4:36770:36817	1134664	1	True				
ANR	1134991	CallExpression	"emit_mov ( compiler , dst , dstw , src , srcw )"		1134664	0					
ANR	1134992	Callee	emit_mov		1134664	0					
ANR	1134993	Identifier	emit_mov		1134664	0					
ANR	1134994	ArgumentList	compiler		1134664	1					
ANR	1134995	Argument	compiler		1134664	0					
ANR	1134996	Identifier	compiler		1134664	0					
ANR	1134997	Argument	dst		1134664	1					
ANR	1134998	Identifier	dst		1134664	0					
ANR	1134999	Argument	dstw		1134664	2					
ANR	1135000	Identifier	dstw		1134664	0					
ANR	1135001	Argument	src		1134664	3					
ANR	1135002	Identifier	src		1134664	0					
ANR	1135003	Argument	srcw		1134664	4					
ANR	1135004	Identifier	srcw		1134664	0					
ANR	1135005	IfStatement	if ( SLJIT_UNLIKELY ( update ) && ( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 ) )		1134664	5					
ANR	1135006	Condition	SLJIT_UNLIKELY ( update ) && ( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )	1341:6:36837:36960	1134664	0	True				
ANR	1135007	AndExpression	SLJIT_UNLIKELY ( update ) && ( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1134664	0		&&			
ANR	1135008	CallExpression	SLJIT_UNLIKELY ( update )		1134664	0					
ANR	1135009	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135010	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135011	ArgumentList	update		1134664	1					
ANR	1135012	Argument	update		1134664	0					
ANR	1135013	Identifier	update		1134664	0					
ANR	1135014	AndExpression	( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1134664	1		&&			
ANR	1135015	BitAndExpression	src & SLJIT_MEM		1134664	0		&			
ANR	1135016	Identifier	src		1134664	0					
ANR	1135017	Identifier	SLJIT_MEM		1134664	1					
ANR	1135018	AndExpression	! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1134664	1		&&			
ANR	1135019	UnaryOperationExpression	! src_is_ereg		1134664	0					
ANR	1135020	UnaryOperator	!		1134664	0					
ANR	1135021	Identifier	src_is_ereg		1134664	1					
ANR	1135022	AndExpression	( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1134664	1		&&			
ANR	1135023	BitAndExpression	src & REG_MASK		1134664	0		&			
ANR	1135024	Identifier	src		1134664	0					
ANR	1135025	Identifier	REG_MASK		1134664	1					
ANR	1135026	OrExpression	srcw != 0 || ( src & OFFS_REG_MASK ) != 0		1134664	1		||			
ANR	1135027	EqualityExpression	srcw != 0		1134664	0		!=			
ANR	1135028	Identifier	srcw		1134664	0					
ANR	1135029	PrimaryExpression	0		1134664	1					
ANR	1135030	EqualityExpression	( src & OFFS_REG_MASK ) != 0		1134664	1		!=			
ANR	1135031	BitAndExpression	src & OFFS_REG_MASK		1134664	0		&			
ANR	1135032	Identifier	src		1134664	0					
ANR	1135033	Identifier	OFFS_REG_MASK		1134664	1					
ANR	1135034	PrimaryExpression	0		1134664	1					
ANR	1135035	CompoundStatement		81:132:2117:2117	1134664	1					
ANR	1135036	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src & REG_MASK , 0 , src , srcw )"	1342:3:36968:37038	1134664	0	True				
ANR	1135037	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src & REG_MASK , 0 , src , srcw )"		1134664	0		=			
ANR	1135038	Identifier	inst		1134664	0					
ANR	1135039	CallExpression	"emit_x86_instruction ( compiler , 1 , src & REG_MASK , 0 , src , srcw )"		1134664	1					
ANR	1135040	Callee	emit_x86_instruction		1134664	0					
ANR	1135041	Identifier	emit_x86_instruction		1134664	0					
ANR	1135042	ArgumentList	compiler		1134664	1					
ANR	1135043	Argument	compiler		1134664	0					
ANR	1135044	Identifier	compiler		1134664	0					
ANR	1135045	Argument	1		1134664	1					
ANR	1135046	PrimaryExpression	1		1134664	0					
ANR	1135047	Argument	src & REG_MASK		1134664	2					
ANR	1135048	BitAndExpression	src & REG_MASK		1134664	0		&			
ANR	1135049	Identifier	src		1134664	0					
ANR	1135050	Identifier	REG_MASK		1134664	1					
ANR	1135051	Argument	0		1134664	3					
ANR	1135052	PrimaryExpression	0		1134664	0					
ANR	1135053	Argument	src		1134664	4					
ANR	1135054	Identifier	src		1134664	0					
ANR	1135055	Argument	srcw		1134664	5					
ANR	1135056	Identifier	srcw		1134664	0					
ANR	1135057	ExpressionStatement	FAIL_IF ( ! inst )	1343:3:37043:37057	1134664	1	True				
ANR	1135058	CallExpression	FAIL_IF ( ! inst )		1134664	0					
ANR	1135059	Callee	FAIL_IF		1134664	0					
ANR	1135060	Identifier	FAIL_IF		1134664	0					
ANR	1135061	ArgumentList	! inst		1134664	1					
ANR	1135062	Argument	! inst		1134664	0					
ANR	1135063	UnaryOperationExpression	! inst		1134664	0					
ANR	1135064	UnaryOperator	!		1134664	0					
ANR	1135065	Identifier	inst		1134664	1					
ANR	1135066	ExpressionStatement	* inst = LEA_r_m	1344:3:37062:37077	1134664	2	True				
ANR	1135067	AssignmentExpression	* inst = LEA_r_m		1134664	0		=			
ANR	1135068	UnaryOperationExpression	* inst		1134664	0					
ANR	1135069	UnaryOperator	*		1134664	0					
ANR	1135070	Identifier	inst		1134664	1					
ANR	1135071	Identifier	LEA_r_m		1134664	1					
ANR	1135072	ExpressionStatement	src &= SLJIT_MEM | 0xf	1345:3:37082:37104	1134664	3	True				
ANR	1135073	AssignmentExpression	src &= SLJIT_MEM | 0xf		1134664	0		&=			
ANR	1135074	Identifier	src		1134664	0					
ANR	1135075	InclusiveOrExpression	SLJIT_MEM | 0xf		1134664	1		|			
ANR	1135076	Identifier	SLJIT_MEM		1134664	0					
ANR	1135077	PrimaryExpression	0xf		1134664	1					
ANR	1135078	ExpressionStatement	srcw = 0	1346:3:37109:37117	1134664	4	True				
ANR	1135079	AssignmentExpression	srcw = 0		1134664	0		=			
ANR	1135080	Identifier	srcw		1134664	0					
ANR	1135081	PrimaryExpression	0		1134664	1					
ANR	1135082	IfStatement	if ( SLJIT_UNLIKELY ( dst_is_ereg ) && ( ! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM ) ) )		1134664	6					
ANR	1135083	Condition	SLJIT_UNLIKELY ( dst_is_ereg ) && ( ! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM ) )	1350:6:37187:37323	1134664	0	True				
ANR	1135084	AndExpression	SLJIT_UNLIKELY ( dst_is_ereg ) && ( ! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM ) )		1134664	0		&&			
ANR	1135085	CallExpression	SLJIT_UNLIKELY ( dst_is_ereg )		1134664	0					
ANR	1135086	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135087	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135088	ArgumentList	dst_is_ereg		1134664	1					
ANR	1135089	Argument	dst_is_ereg		1134664	0					
ANR	1135090	Identifier	dst_is_ereg		1134664	0					
ANR	1135091	OrExpression	! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM )		1134664	1		||			
ANR	1135092	UnaryOperationExpression	! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P )		1134664	0					
ANR	1135093	UnaryOperator	!		1134664	0					
ANR	1135094	OrExpression	op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P		1134664	1		||			
ANR	1135095	EqualityExpression	op == SLJIT_MOV		1134664	0		==			
ANR	1135096	Identifier	op		1134664	0					
ANR	1135097	Identifier	SLJIT_MOV		1134664	1					
ANR	1135098	OrExpression	op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P		1134664	1		||			
ANR	1135099	EqualityExpression	op == SLJIT_MOV_UI		1134664	0		==			
ANR	1135100	Identifier	op		1134664	0					
ANR	1135101	Identifier	SLJIT_MOV_UI		1134664	1					
ANR	1135102	OrExpression	op == SLJIT_MOV_SI || op == SLJIT_MOV_P		1134664	1		||			
ANR	1135103	EqualityExpression	op == SLJIT_MOV_SI		1134664	0		==			
ANR	1135104	Identifier	op		1134664	0					
ANR	1135105	Identifier	SLJIT_MOV_SI		1134664	1					
ANR	1135106	EqualityExpression	op == SLJIT_MOV_P		1134664	1		==			
ANR	1135107	Identifier	op		1134664	0					
ANR	1135108	Identifier	SLJIT_MOV_P		1134664	1					
ANR	1135109	BitAndExpression	src & SLJIT_MEM		1134664	1		&			
ANR	1135110	Identifier	src		1134664	0					
ANR	1135111	Identifier	SLJIT_MEM		1134664	1					
ANR	1135112	CompoundStatement		90:145:2480:2480	1134664	1					
ANR	1135113	ExpressionStatement	SLJIT_ASSERT ( dst == SLJIT_MEM1 ( SLJIT_SP ) )	1351:3:37331:37372	1134664	0	True				
ANR	1135114	CallExpression	SLJIT_ASSERT ( dst == SLJIT_MEM1 ( SLJIT_SP ) )		1134664	0					
ANR	1135115	Callee	SLJIT_ASSERT		1134664	0					
ANR	1135116	Identifier	SLJIT_ASSERT		1134664	0					
ANR	1135117	ArgumentList	dst == SLJIT_MEM1 ( SLJIT_SP )		1134664	1					
ANR	1135118	Argument	dst == SLJIT_MEM1 ( SLJIT_SP )		1134664	0					
ANR	1135119	EqualityExpression	dst == SLJIT_MEM1 ( SLJIT_SP )		1134664	0		==			
ANR	1135120	Identifier	dst		1134664	0					
ANR	1135121	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1134664	1					
ANR	1135122	Callee	SLJIT_MEM1		1134664	0					
ANR	1135123	Identifier	SLJIT_MEM1		1134664	0					
ANR	1135124	ArgumentList	SLJIT_SP		1134664	1					
ANR	1135125	Argument	SLJIT_SP		1134664	0					
ANR	1135126	Identifier	SLJIT_SP		1134664	0					
ANR	1135127	ExpressionStatement	dst = TMP_REG1	1352:3:37377:37391	1134664	1	True				
ANR	1135128	AssignmentExpression	dst = TMP_REG1		1134664	0		=			
ANR	1135129	Identifier	dst		1134664	0					
ANR	1135130	Identifier	TMP_REG1		1134664	1					
ANR	1135131	SwitchStatement	switch ( op )		1134664	7					
ANR	1135132	Condition	op	1356:10:37415:37416	1134664	0	True				
ANR	1135133	Identifier	op		1134664	0					
ANR	1135134	CompoundStatement		96:14:2573:2573	1134664	1					
ANR	1135135	Label	case SLJIT_MOV :	1357:2:37423:37437	1134664	0	True				
ANR	1135136	Identifier	SLJIT_MOV		1134664	0					
ANR	1135137	Label	case SLJIT_MOV_P :	1358:2:37441:37457	1134664	1	True				
ANR	1135138	Identifier	SLJIT_MOV_P		1134664	0					
ANR	1135139	Label	case SLJIT_MOV_UI :	1360:2:37518:37535	1134664	2	True				
ANR	1135140	Identifier	SLJIT_MOV_UI		1134664	0					
ANR	1135141	Label	case SLJIT_MOV_SI :	1361:2:37539:37556	1134664	3	True				
ANR	1135142	Identifier	SLJIT_MOV_SI		1134664	0					
ANR	1135143	ExpressionStatement	"FAIL_IF ( emit_mov ( compiler , dst , dstw , src , srcw ) )"	1363:3:37568:37617	1134664	4	True				
ANR	1135144	CallExpression	"FAIL_IF ( emit_mov ( compiler , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1135145	Callee	FAIL_IF		1134664	0					
ANR	1135146	Identifier	FAIL_IF		1134664	0					
ANR	1135147	ArgumentList	"emit_mov ( compiler , dst , dstw , src , srcw )"		1134664	1					
ANR	1135148	Argument	"emit_mov ( compiler , dst , dstw , src , srcw )"		1134664	0					
ANR	1135149	CallExpression	"emit_mov ( compiler , dst , dstw , src , srcw )"		1134664	0					
ANR	1135150	Callee	emit_mov		1134664	0					
ANR	1135151	Identifier	emit_mov		1134664	0					
ANR	1135152	ArgumentList	compiler		1134664	1					
ANR	1135153	Argument	compiler		1134664	0					
ANR	1135154	Identifier	compiler		1134664	0					
ANR	1135155	Argument	dst		1134664	1					
ANR	1135156	Identifier	dst		1134664	0					
ANR	1135157	Argument	dstw		1134664	2					
ANR	1135158	Identifier	dstw		1134664	0					
ANR	1135159	Argument	src		1134664	3					
ANR	1135160	Identifier	src		1134664	0					
ANR	1135161	Argument	srcw		1134664	4					
ANR	1135162	Identifier	srcw		1134664	0					
ANR	1135163	BreakStatement	break ;	1364:3:37622:37627	1134664	5	True				
ANR	1135164	Label	case SLJIT_MOV_UB :	1365:2:37631:37648	1134664	6	True				
ANR	1135165	Identifier	SLJIT_MOV_UB		1134664	0					
ANR	1135166	ExpressionStatement	"FAIL_IF ( emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw ) )"	1366:3:37653:37710	1134664	7	True				
ANR	1135167	CallExpression	"FAIL_IF ( emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1135168	Callee	FAIL_IF		1134664	0					
ANR	1135169	Identifier	FAIL_IF		1134664	0					
ANR	1135170	ArgumentList	"emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw )"		1134664	1					
ANR	1135171	Argument	"emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135172	CallExpression	"emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135173	Callee	emit_mov_byte		1134664	0					
ANR	1135174	Identifier	emit_mov_byte		1134664	0					
ANR	1135175	ArgumentList	compiler		1134664	1					
ANR	1135176	Argument	compiler		1134664	0					
ANR	1135177	Identifier	compiler		1134664	0					
ANR	1135178	Argument	0		1134664	1					
ANR	1135179	PrimaryExpression	0		1134664	0					
ANR	1135180	Argument	dst		1134664	2					
ANR	1135181	Identifier	dst		1134664	0					
ANR	1135182	Argument	dstw		1134664	3					
ANR	1135183	Identifier	dstw		1134664	0					
ANR	1135184	Argument	src		1134664	4					
ANR	1135185	Identifier	src		1134664	0					
ANR	1135186	Argument	srcw		1134664	5					
ANR	1135187	Identifier	srcw		1134664	0					
ANR	1135188	BreakStatement	break ;	1367:3:37715:37720	1134664	8	True				
ANR	1135189	Label	case SLJIT_MOV_SB :	1368:2:37724:37741	1134664	9	True				
ANR	1135190	Identifier	SLJIT_MOV_SB		1134664	0					
ANR	1135191	ExpressionStatement	"FAIL_IF ( emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw ) )"	1369:3:37746:37803	1134664	10	True				
ANR	1135192	CallExpression	"FAIL_IF ( emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1135193	Callee	FAIL_IF		1134664	0					
ANR	1135194	Identifier	FAIL_IF		1134664	0					
ANR	1135195	ArgumentList	"emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw )"		1134664	1					
ANR	1135196	Argument	"emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135197	CallExpression	"emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135198	Callee	emit_mov_byte		1134664	0					
ANR	1135199	Identifier	emit_mov_byte		1134664	0					
ANR	1135200	ArgumentList	compiler		1134664	1					
ANR	1135201	Argument	compiler		1134664	0					
ANR	1135202	Identifier	compiler		1134664	0					
ANR	1135203	Argument	1		1134664	1					
ANR	1135204	PrimaryExpression	1		1134664	0					
ANR	1135205	Argument	dst		1134664	2					
ANR	1135206	Identifier	dst		1134664	0					
ANR	1135207	Argument	dstw		1134664	3					
ANR	1135208	Identifier	dstw		1134664	0					
ANR	1135209	Argument	src		1134664	4					
ANR	1135210	Identifier	src		1134664	0					
ANR	1135211	Argument	srcw		1134664	5					
ANR	1135212	Identifier	srcw		1134664	0					
ANR	1135213	BreakStatement	break ;	1370:3:37808:37813	1134664	11	True				
ANR	1135214	Label	case SLJIT_MOV_UH :	1371:2:37817:37834	1134664	12	True				
ANR	1135215	Identifier	SLJIT_MOV_UH		1134664	0					
ANR	1135216	ExpressionStatement	"FAIL_IF ( emit_mov_half ( compiler , 0 , dst , dstw , src , srcw ) )"	1372:3:37839:37896	1134664	13	True				
ANR	1135217	CallExpression	"FAIL_IF ( emit_mov_half ( compiler , 0 , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1135218	Callee	FAIL_IF		1134664	0					
ANR	1135219	Identifier	FAIL_IF		1134664	0					
ANR	1135220	ArgumentList	"emit_mov_half ( compiler , 0 , dst , dstw , src , srcw )"		1134664	1					
ANR	1135221	Argument	"emit_mov_half ( compiler , 0 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135222	CallExpression	"emit_mov_half ( compiler , 0 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135223	Callee	emit_mov_half		1134664	0					
ANR	1135224	Identifier	emit_mov_half		1134664	0					
ANR	1135225	ArgumentList	compiler		1134664	1					
ANR	1135226	Argument	compiler		1134664	0					
ANR	1135227	Identifier	compiler		1134664	0					
ANR	1135228	Argument	0		1134664	1					
ANR	1135229	PrimaryExpression	0		1134664	0					
ANR	1135230	Argument	dst		1134664	2					
ANR	1135231	Identifier	dst		1134664	0					
ANR	1135232	Argument	dstw		1134664	3					
ANR	1135233	Identifier	dstw		1134664	0					
ANR	1135234	Argument	src		1134664	4					
ANR	1135235	Identifier	src		1134664	0					
ANR	1135236	Argument	srcw		1134664	5					
ANR	1135237	Identifier	srcw		1134664	0					
ANR	1135238	BreakStatement	break ;	1373:3:37901:37906	1134664	14	True				
ANR	1135239	Label	case SLJIT_MOV_SH :	1374:2:37910:37927	1134664	15	True				
ANR	1135240	Identifier	SLJIT_MOV_SH		1134664	0					
ANR	1135241	ExpressionStatement	"FAIL_IF ( emit_mov_half ( compiler , 1 , dst , dstw , src , srcw ) )"	1375:3:37932:37989	1134664	16	True				
ANR	1135242	CallExpression	"FAIL_IF ( emit_mov_half ( compiler , 1 , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1135243	Callee	FAIL_IF		1134664	0					
ANR	1135244	Identifier	FAIL_IF		1134664	0					
ANR	1135245	ArgumentList	"emit_mov_half ( compiler , 1 , dst , dstw , src , srcw )"		1134664	1					
ANR	1135246	Argument	"emit_mov_half ( compiler , 1 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135247	CallExpression	"emit_mov_half ( compiler , 1 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135248	Callee	emit_mov_half		1134664	0					
ANR	1135249	Identifier	emit_mov_half		1134664	0					
ANR	1135250	ArgumentList	compiler		1134664	1					
ANR	1135251	Argument	compiler		1134664	0					
ANR	1135252	Identifier	compiler		1134664	0					
ANR	1135253	Argument	1		1134664	1					
ANR	1135254	PrimaryExpression	1		1134664	0					
ANR	1135255	Argument	dst		1134664	2					
ANR	1135256	Identifier	dst		1134664	0					
ANR	1135257	Argument	dstw		1134664	3					
ANR	1135258	Identifier	dstw		1134664	0					
ANR	1135259	Argument	src		1134664	4					
ANR	1135260	Identifier	src		1134664	0					
ANR	1135261	Argument	srcw		1134664	5					
ANR	1135262	Identifier	srcw		1134664	0					
ANR	1135263	BreakStatement	break ;	1376:3:37994:37999	1134664	17	True				
ANR	1135264	Label	case SLJIT_MOV_UI :	1378:2:38060:38077	1134664	18	True				
ANR	1135265	Identifier	SLJIT_MOV_UI		1134664	0					
ANR	1135266	ExpressionStatement	"FAIL_IF ( emit_mov_int ( compiler , 0 , dst , dstw , src , srcw ) )"	1379:3:38082:38138	1134664	19	True				
ANR	1135267	CallExpression	"FAIL_IF ( emit_mov_int ( compiler , 0 , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1135268	Callee	FAIL_IF		1134664	0					
ANR	1135269	Identifier	FAIL_IF		1134664	0					
ANR	1135270	ArgumentList	"emit_mov_int ( compiler , 0 , dst , dstw , src , srcw )"		1134664	1					
ANR	1135271	Argument	"emit_mov_int ( compiler , 0 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135272	CallExpression	"emit_mov_int ( compiler , 0 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135273	Callee	emit_mov_int		1134664	0					
ANR	1135274	Identifier	emit_mov_int		1134664	0					
ANR	1135275	ArgumentList	compiler		1134664	1					
ANR	1135276	Argument	compiler		1134664	0					
ANR	1135277	Identifier	compiler		1134664	0					
ANR	1135278	Argument	0		1134664	1					
ANR	1135279	PrimaryExpression	0		1134664	0					
ANR	1135280	Argument	dst		1134664	2					
ANR	1135281	Identifier	dst		1134664	0					
ANR	1135282	Argument	dstw		1134664	3					
ANR	1135283	Identifier	dstw		1134664	0					
ANR	1135284	Argument	src		1134664	4					
ANR	1135285	Identifier	src		1134664	0					
ANR	1135286	Argument	srcw		1134664	5					
ANR	1135287	Identifier	srcw		1134664	0					
ANR	1135288	BreakStatement	break ;	1380:3:38143:38148	1134664	20	True				
ANR	1135289	Label	case SLJIT_MOV_SI :	1381:2:38152:38169	1134664	21	True				
ANR	1135290	Identifier	SLJIT_MOV_SI		1134664	0					
ANR	1135291	ExpressionStatement	"FAIL_IF ( emit_mov_int ( compiler , 1 , dst , dstw , src , srcw ) )"	1382:3:38174:38230	1134664	22	True				
ANR	1135292	CallExpression	"FAIL_IF ( emit_mov_int ( compiler , 1 , dst , dstw , src , srcw ) )"		1134664	0					
ANR	1135293	Callee	FAIL_IF		1134664	0					
ANR	1135294	Identifier	FAIL_IF		1134664	0					
ANR	1135295	ArgumentList	"emit_mov_int ( compiler , 1 , dst , dstw , src , srcw )"		1134664	1					
ANR	1135296	Argument	"emit_mov_int ( compiler , 1 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135297	CallExpression	"emit_mov_int ( compiler , 1 , dst , dstw , src , srcw )"		1134664	0					
ANR	1135298	Callee	emit_mov_int		1134664	0					
ANR	1135299	Identifier	emit_mov_int		1134664	0					
ANR	1135300	ArgumentList	compiler		1134664	1					
ANR	1135301	Argument	compiler		1134664	0					
ANR	1135302	Identifier	compiler		1134664	0					
ANR	1135303	Argument	1		1134664	1					
ANR	1135304	PrimaryExpression	1		1134664	0					
ANR	1135305	Argument	dst		1134664	2					
ANR	1135306	Identifier	dst		1134664	0					
ANR	1135307	Argument	dstw		1134664	3					
ANR	1135308	Identifier	dstw		1134664	0					
ANR	1135309	Argument	src		1134664	4					
ANR	1135310	Identifier	src		1134664	0					
ANR	1135311	Argument	srcw		1134664	5					
ANR	1135312	Identifier	srcw		1134664	0					
ANR	1135313	BreakStatement	break ;	1383:3:38235:38240	1134664	23	True				
ANR	1135314	IfStatement	if ( SLJIT_UNLIKELY ( dst_is_ereg ) && dst == TMP_REG1 )		1134664	8					
ANR	1135315	Condition	SLJIT_UNLIKELY ( dst_is_ereg ) && dst == TMP_REG1	1388:6:38317:38362	1134664	0	True				
ANR	1135316	AndExpression	SLJIT_UNLIKELY ( dst_is_ereg ) && dst == TMP_REG1		1134664	0		&&			
ANR	1135317	CallExpression	SLJIT_UNLIKELY ( dst_is_ereg )		1134664	0					
ANR	1135318	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135319	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135320	ArgumentList	dst_is_ereg		1134664	1					
ANR	1135321	Argument	dst_is_ereg		1134664	0					
ANR	1135322	Identifier	dst_is_ereg		1134664	0					
ANR	1135323	EqualityExpression	dst == TMP_REG1		1134664	1		==			
ANR	1135324	Identifier	dst		1134664	0					
ANR	1135325	Identifier	TMP_REG1		1134664	1					
ANR	1135326	ReturnStatement	"return emit_mov ( compiler , SLJIT_MEM1 ( SLJIT_SP ) , dstw , TMP_REG1 , 0 ) ;"	1389:3:38368:38434	1134664	1	True				
ANR	1135327	CallExpression	"emit_mov ( compiler , SLJIT_MEM1 ( SLJIT_SP ) , dstw , TMP_REG1 , 0 )"		1134664	0					
ANR	1135328	Callee	emit_mov		1134664	0					
ANR	1135329	Identifier	emit_mov		1134664	0					
ANR	1135330	ArgumentList	compiler		1134664	1					
ANR	1135331	Argument	compiler		1134664	0					
ANR	1135332	Identifier	compiler		1134664	0					
ANR	1135333	Argument	SLJIT_MEM1 ( SLJIT_SP )		1134664	1					
ANR	1135334	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1134664	0					
ANR	1135335	Callee	SLJIT_MEM1		1134664	0					
ANR	1135336	Identifier	SLJIT_MEM1		1134664	0					
ANR	1135337	ArgumentList	SLJIT_SP		1134664	1					
ANR	1135338	Argument	SLJIT_SP		1134664	0					
ANR	1135339	Identifier	SLJIT_SP		1134664	0					
ANR	1135340	Argument	dstw		1134664	2					
ANR	1135341	Identifier	dstw		1134664	0					
ANR	1135342	Argument	TMP_REG1		1134664	3					
ANR	1135343	Identifier	TMP_REG1		1134664	0					
ANR	1135344	Argument	0		1134664	4					
ANR	1135345	PrimaryExpression	0		1134664	0					
ANR	1135346	IfStatement	if ( SLJIT_UNLIKELY ( update ) && ( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 ) )		1134664	9					
ANR	1135347	Condition	SLJIT_UNLIKELY ( update ) && ( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )	1392:6:38450:38557	1134664	0	True				
ANR	1135348	AndExpression	SLJIT_UNLIKELY ( update ) && ( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )		1134664	0		&&			
ANR	1135349	CallExpression	SLJIT_UNLIKELY ( update )		1134664	0					
ANR	1135350	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135351	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135352	ArgumentList	update		1134664	1					
ANR	1135353	Argument	update		1134664	0					
ANR	1135354	Identifier	update		1134664	0					
ANR	1135355	AndExpression	( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )		1134664	1		&&			
ANR	1135356	BitAndExpression	dst & SLJIT_MEM		1134664	0		&			
ANR	1135357	Identifier	dst		1134664	0					
ANR	1135358	Identifier	SLJIT_MEM		1134664	1					
ANR	1135359	AndExpression	( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )		1134664	1		&&			
ANR	1135360	BitAndExpression	dst & REG_MASK		1134664	0		&			
ANR	1135361	Identifier	dst		1134664	0					
ANR	1135362	Identifier	REG_MASK		1134664	1					
ANR	1135363	OrExpression	dstw != 0 || ( dst & OFFS_REG_MASK ) != 0		1134664	1		||			
ANR	1135364	EqualityExpression	dstw != 0		1134664	0		!=			
ANR	1135365	Identifier	dstw		1134664	0					
ANR	1135366	PrimaryExpression	0		1134664	1					
ANR	1135367	EqualityExpression	( dst & OFFS_REG_MASK ) != 0		1134664	1		!=			
ANR	1135368	BitAndExpression	dst & OFFS_REG_MASK		1134664	0		&			
ANR	1135369	Identifier	dst		1134664	0					
ANR	1135370	Identifier	OFFS_REG_MASK		1134664	1					
ANR	1135371	PrimaryExpression	0		1134664	1					
ANR	1135372	CompoundStatement		132:116:3714:3714	1134664	1					
ANR	1135373	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst & REG_MASK , 0 , dst , dstw )"	1393:3:38565:38635	1134664	0	True				
ANR	1135374	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst & REG_MASK , 0 , dst , dstw )"		1134664	0		=			
ANR	1135375	Identifier	inst		1134664	0					
ANR	1135376	CallExpression	"emit_x86_instruction ( compiler , 1 , dst & REG_MASK , 0 , dst , dstw )"		1134664	1					
ANR	1135377	Callee	emit_x86_instruction		1134664	0					
ANR	1135378	Identifier	emit_x86_instruction		1134664	0					
ANR	1135379	ArgumentList	compiler		1134664	1					
ANR	1135380	Argument	compiler		1134664	0					
ANR	1135381	Identifier	compiler		1134664	0					
ANR	1135382	Argument	1		1134664	1					
ANR	1135383	PrimaryExpression	1		1134664	0					
ANR	1135384	Argument	dst & REG_MASK		1134664	2					
ANR	1135385	BitAndExpression	dst & REG_MASK		1134664	0		&			
ANR	1135386	Identifier	dst		1134664	0					
ANR	1135387	Identifier	REG_MASK		1134664	1					
ANR	1135388	Argument	0		1134664	3					
ANR	1135389	PrimaryExpression	0		1134664	0					
ANR	1135390	Argument	dst		1134664	4					
ANR	1135391	Identifier	dst		1134664	0					
ANR	1135392	Argument	dstw		1134664	5					
ANR	1135393	Identifier	dstw		1134664	0					
ANR	1135394	ExpressionStatement	FAIL_IF ( ! inst )	1394:3:38640:38654	1134664	1	True				
ANR	1135395	CallExpression	FAIL_IF ( ! inst )		1134664	0					
ANR	1135396	Callee	FAIL_IF		1134664	0					
ANR	1135397	Identifier	FAIL_IF		1134664	0					
ANR	1135398	ArgumentList	! inst		1134664	1					
ANR	1135399	Argument	! inst		1134664	0					
ANR	1135400	UnaryOperationExpression	! inst		1134664	0					
ANR	1135401	UnaryOperator	!		1134664	0					
ANR	1135402	Identifier	inst		1134664	1					
ANR	1135403	ExpressionStatement	* inst = LEA_r_m	1395:3:38659:38674	1134664	2	True				
ANR	1135404	AssignmentExpression	* inst = LEA_r_m		1134664	0		=			
ANR	1135405	UnaryOperationExpression	* inst		1134664	0					
ANR	1135406	UnaryOperator	*		1134664	0					
ANR	1135407	Identifier	inst		1134664	1					
ANR	1135408	Identifier	LEA_r_m		1134664	1					
ANR	1135409	ReturnStatement	return SLJIT_SUCCESS ;	1397:2:38682:38702	1134664	10	True				
ANR	1135410	Identifier	SLJIT_SUCCESS		1134664	0					
ANR	1135411	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op_flags ) ) )		1134664	14					
ANR	1135412	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op_flags ) )	1400:5:38713:38747	1134664	0	True				
ANR	1135413	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op_flags ) )		1134664	0					
ANR	1135414	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135415	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135416	ArgumentList	GET_FLAGS ( op_flags )		1134664	1					
ANR	1135417	Argument	GET_FLAGS ( op_flags )		1134664	0					
ANR	1135418	CallExpression	GET_FLAGS ( op_flags )		1134664	0					
ANR	1135419	Callee	GET_FLAGS		1134664	0					
ANR	1135420	Identifier	GET_FLAGS		1134664	0					
ANR	1135421	ArgumentList	op_flags		1134664	1					
ANR	1135422	Argument	op_flags		1134664	0					
ANR	1135423	Identifier	op_flags		1134664	0					
ANR	1135424	ExpressionStatement	compiler -> flags_saved = 0	1401:2:38752:38777	1134664	1	True				
ANR	1135425	AssignmentExpression	compiler -> flags_saved = 0		1134664	0		=			
ANR	1135426	PtrMemberAccess	compiler -> flags_saved		1134664	0					
ANR	1135427	Identifier	compiler		1134664	0					
ANR	1135428	Identifier	flags_saved		1134664	1					
ANR	1135429	PrimaryExpression	0		1134664	1					
ANR	1135430	SwitchStatement	switch ( op )		1134664	15					
ANR	1135431	Condition	op	1403:9:38789:38790	1134664	0	True				
ANR	1135432	Identifier	op		1134664	0					
ANR	1135433	CompoundStatement		143:13:3947:3947	1134664	1					
ANR	1135434	Label	case SLJIT_NOT :	1404:1:38796:38810	1134664	0	True				
ANR	1135435	Identifier	SLJIT_NOT		1134664	0					
ANR	1135436	IfStatement	if ( SLJIT_UNLIKELY ( op_flags & SLJIT_SET_E ) )		1134664	1					
ANR	1135437	Condition	SLJIT_UNLIKELY ( op_flags & SLJIT_SET_E )	1405:6:38818:38855	1134664	0	True				
ANR	1135438	CallExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_SET_E )		1134664	0					
ANR	1135439	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135440	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135441	ArgumentList	op_flags & SLJIT_SET_E		1134664	1					
ANR	1135442	Argument	op_flags & SLJIT_SET_E		1134664	0					
ANR	1135443	BitAndExpression	op_flags & SLJIT_SET_E		1134664	0		&			
ANR	1135444	Identifier	op_flags		1134664	0					
ANR	1135445	Identifier	SLJIT_SET_E		1134664	1					
ANR	1135446	ReturnStatement	"return emit_not_with_flags ( compiler , dst , dstw , src , srcw ) ;"	1406:3:38861:38919	1134664	1	True				
ANR	1135447	CallExpression	"emit_not_with_flags ( compiler , dst , dstw , src , srcw )"		1134664	0					
ANR	1135448	Callee	emit_not_with_flags		1134664	0					
ANR	1135449	Identifier	emit_not_with_flags		1134664	0					
ANR	1135450	ArgumentList	compiler		1134664	1					
ANR	1135451	Argument	compiler		1134664	0					
ANR	1135452	Identifier	compiler		1134664	0					
ANR	1135453	Argument	dst		1134664	1					
ANR	1135454	Identifier	dst		1134664	0					
ANR	1135455	Argument	dstw		1134664	2					
ANR	1135456	Identifier	dstw		1134664	0					
ANR	1135457	Argument	src		1134664	3					
ANR	1135458	Identifier	src		1134664	0					
ANR	1135459	Argument	srcw		1134664	4					
ANR	1135460	Identifier	srcw		1134664	0					
ANR	1135461	ReturnStatement	"return emit_unary ( compiler , NOT_rm , dst , dstw , src , srcw ) ;"	1407:2:38923:38980	1134664	2	True				
ANR	1135462	CallExpression	"emit_unary ( compiler , NOT_rm , dst , dstw , src , srcw )"		1134664	0					
ANR	1135463	Callee	emit_unary		1134664	0					
ANR	1135464	Identifier	emit_unary		1134664	0					
ANR	1135465	ArgumentList	compiler		1134664	1					
ANR	1135466	Argument	compiler		1134664	0					
ANR	1135467	Identifier	compiler		1134664	0					
ANR	1135468	Argument	NOT_rm		1134664	1					
ANR	1135469	Identifier	NOT_rm		1134664	0					
ANR	1135470	Argument	dst		1134664	2					
ANR	1135471	Identifier	dst		1134664	0					
ANR	1135472	Argument	dstw		1134664	3					
ANR	1135473	Identifier	dstw		1134664	0					
ANR	1135474	Argument	src		1134664	4					
ANR	1135475	Identifier	src		1134664	0					
ANR	1135476	Argument	srcw		1134664	5					
ANR	1135477	Identifier	srcw		1134664	0					
ANR	1135478	Label	case SLJIT_NEG :	1409:1:38984:38998	1134664	3	True				
ANR	1135479	Identifier	SLJIT_NEG		1134664	0					
ANR	1135480	IfStatement	if ( SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1134664	4					
ANR	1135481	Condition	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	1410:6:39006:39074	1134664	0	True				
ANR	1135482	AndExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1134664	0		&&			
ANR	1135483	CallExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS )		1134664	0					
ANR	1135484	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135485	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135486	ArgumentList	op_flags & SLJIT_KEEP_FLAGS		1134664	1					
ANR	1135487	Argument	op_flags & SLJIT_KEEP_FLAGS		1134664	0					
ANR	1135488	BitAndExpression	op_flags & SLJIT_KEEP_FLAGS		1134664	0		&			
ANR	1135489	Identifier	op_flags		1134664	0					
ANR	1135490	Identifier	SLJIT_KEEP_FLAGS		1134664	1					
ANR	1135491	UnaryOperationExpression	! compiler -> flags_saved		1134664	1					
ANR	1135492	UnaryOperator	!		1134664	0					
ANR	1135493	PtrMemberAccess	compiler -> flags_saved		1134664	1					
ANR	1135494	Identifier	compiler		1134664	0					
ANR	1135495	Identifier	flags_saved		1134664	1					
ANR	1135496	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	1411:3:39080:39114	1134664	1	True				
ANR	1135497	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1134664	0					
ANR	1135498	Callee	FAIL_IF		1134664	0					
ANR	1135499	Identifier	FAIL_IF		1134664	0					
ANR	1135500	ArgumentList	emit_save_flags ( compiler )		1134664	1					
ANR	1135501	Argument	emit_save_flags ( compiler )		1134664	0					
ANR	1135502	CallExpression	emit_save_flags ( compiler )		1134664	0					
ANR	1135503	Callee	emit_save_flags		1134664	0					
ANR	1135504	Identifier	emit_save_flags		1134664	0					
ANR	1135505	ArgumentList	compiler		1134664	1					
ANR	1135506	Argument	compiler		1134664	0					
ANR	1135507	Identifier	compiler		1134664	0					
ANR	1135508	ReturnStatement	"return emit_unary ( compiler , NEG_rm , dst , dstw , src , srcw ) ;"	1412:2:39118:39175	1134664	5	True				
ANR	1135509	CallExpression	"emit_unary ( compiler , NEG_rm , dst , dstw , src , srcw )"		1134664	0					
ANR	1135510	Callee	emit_unary		1134664	0					
ANR	1135511	Identifier	emit_unary		1134664	0					
ANR	1135512	ArgumentList	compiler		1134664	1					
ANR	1135513	Argument	compiler		1134664	0					
ANR	1135514	Identifier	compiler		1134664	0					
ANR	1135515	Argument	NEG_rm		1134664	1					
ANR	1135516	Identifier	NEG_rm		1134664	0					
ANR	1135517	Argument	dst		1134664	2					
ANR	1135518	Identifier	dst		1134664	0					
ANR	1135519	Argument	dstw		1134664	3					
ANR	1135520	Identifier	dstw		1134664	0					
ANR	1135521	Argument	src		1134664	4					
ANR	1135522	Identifier	src		1134664	0					
ANR	1135523	Argument	srcw		1134664	5					
ANR	1135524	Identifier	srcw		1134664	0					
ANR	1135525	Label	case SLJIT_CLZ :	1414:1:39179:39193	1134664	6	True				
ANR	1135526	Identifier	SLJIT_CLZ		1134664	0					
ANR	1135527	IfStatement	if ( SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1134664	7					
ANR	1135528	Condition	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	1415:6:39201:39269	1134664	0	True				
ANR	1135529	AndExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1134664	0		&&			
ANR	1135530	CallExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS )		1134664	0					
ANR	1135531	Callee	SLJIT_UNLIKELY		1134664	0					
ANR	1135532	Identifier	SLJIT_UNLIKELY		1134664	0					
ANR	1135533	ArgumentList	op_flags & SLJIT_KEEP_FLAGS		1134664	1					
ANR	1135534	Argument	op_flags & SLJIT_KEEP_FLAGS		1134664	0					
ANR	1135535	BitAndExpression	op_flags & SLJIT_KEEP_FLAGS		1134664	0		&			
ANR	1135536	Identifier	op_flags		1134664	0					
ANR	1135537	Identifier	SLJIT_KEEP_FLAGS		1134664	1					
ANR	1135538	UnaryOperationExpression	! compiler -> flags_saved		1134664	1					
ANR	1135539	UnaryOperator	!		1134664	0					
ANR	1135540	PtrMemberAccess	compiler -> flags_saved		1134664	1					
ANR	1135541	Identifier	compiler		1134664	0					
ANR	1135542	Identifier	flags_saved		1134664	1					
ANR	1135543	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	1416:3:39275:39309	1134664	1	True				
ANR	1135544	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1134664	0					
ANR	1135545	Callee	FAIL_IF		1134664	0					
ANR	1135546	Identifier	FAIL_IF		1134664	0					
ANR	1135547	ArgumentList	emit_save_flags ( compiler )		1134664	1					
ANR	1135548	Argument	emit_save_flags ( compiler )		1134664	0					
ANR	1135549	CallExpression	emit_save_flags ( compiler )		1134664	0					
ANR	1135550	Callee	emit_save_flags		1134664	0					
ANR	1135551	Identifier	emit_save_flags		1134664	0					
ANR	1135552	ArgumentList	compiler		1134664	1					
ANR	1135553	Argument	compiler		1134664	0					
ANR	1135554	Identifier	compiler		1134664	0					
ANR	1135555	ReturnStatement	"return emit_clz ( compiler , op_flags , dst , dstw , src , srcw ) ;"	1417:2:39313:39370	1134664	8	True				
ANR	1135556	CallExpression	"emit_clz ( compiler , op_flags , dst , dstw , src , srcw )"		1134664	0					
ANR	1135557	Callee	emit_clz		1134664	0					
ANR	1135558	Identifier	emit_clz		1134664	0					
ANR	1135559	ArgumentList	compiler		1134664	1					
ANR	1135560	Argument	compiler		1134664	0					
ANR	1135561	Identifier	compiler		1134664	0					
ANR	1135562	Argument	op_flags		1134664	1					
ANR	1135563	Identifier	op_flags		1134664	0					
ANR	1135564	Argument	dst		1134664	2					
ANR	1135565	Identifier	dst		1134664	0					
ANR	1135566	Argument	dstw		1134664	3					
ANR	1135567	Identifier	dstw		1134664	0					
ANR	1135568	Argument	src		1134664	4					
ANR	1135569	Identifier	src		1134664	0					
ANR	1135570	Argument	srcw		1134664	5					
ANR	1135571	Identifier	srcw		1134664	0					
ANR	1135572	ReturnStatement	return SLJIT_SUCCESS ;	1420:1:39377:39397	1134664	16	True				
ANR	1135573	Identifier	SLJIT_SUCCESS		1134664	0					
ANR	1135574	Statement	undef	1423:2:39459:39463	1134664	17	True				
ANR	1135575	Statement	src_is_ereg	1423:8:39465:39475	1134664	18	True				
ANR	1135576	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1134664	1					
ANR	1135577	Identifier	sljit_emit_op1		1134664	2					
ANR	1135578	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1134664	3					
ANR	1135579	Parameter	struct sljit_compiler * compiler	1258:49:34739:34769	1134664	0	True				
ANR	1135580	ParameterType	struct sljit_compiler *		1134664	0					
ANR	1135581	Identifier	compiler		1134664	1					
ANR	1135582	Parameter	sljit_si op	1258:82:34772:34782	1134664	1	True				
ANR	1135583	ParameterType	sljit_si		1134664	0					
ANR	1135584	Identifier	op		1134664	1					
ANR	1135585	Parameter	sljit_si dst	1259:1:34786:34797	1134664	2	True				
ANR	1135586	ParameterType	sljit_si		1134664	0					
ANR	1135587	Identifier	dst		1134664	1					
ANR	1135588	Parameter	sljit_sw dstw	1259:15:34800:34812	1134664	3	True				
ANR	1135589	ParameterType	sljit_sw		1134664	0					
ANR	1135590	Identifier	dstw		1134664	1					
ANR	1135591	Parameter	sljit_si src	1260:1:34816:34827	1134664	4	True				
ANR	1135592	ParameterType	sljit_si		1134664	0					
ANR	1135593	Identifier	src		1134664	1					
ANR	1135594	Parameter	sljit_sw srcw	1260:15:34830:34842	1134664	5	True				
ANR	1135595	ParameterType	sljit_sw		1134664	0					
ANR	1135596	Identifier	srcw		1134664	1					
ANR	1135597	CFGEntryNode	ENTRY		1134664		True				
ANR	1135598	CFGExitNode	EXIT		1134664		True				
ANR	1135599	Symbol	TMP_REG1		1134664						
ANR	1135600	Symbol	SLJIT_MEM		1134664						
ANR	1135601	Symbol	compiler -> flags_saved		1134664						
ANR	1135602	Symbol	TYPE_CAST_NEEDED		1134664						
ANR	1135603	Symbol	SLJIT_MOVU_SI		1134664						
ANR	1135604	Symbol	* compiler		1134664						
ANR	1135605	Symbol	GET_OPCODE		1134664						
ANR	1135606	Symbol	SLJIT_IMM		1134664						
ANR	1135607	Symbol	emit_not_with_flags		1134664						
ANR	1135608	Symbol	SLJIT_KEEP_FLAGS		1134664						
ANR	1135609	Symbol	SLJIT_MOV_UI		1134664						
ANR	1135610	Symbol	emit_mov_int		1134664						
ANR	1135611	Symbol	FAST_IS_REG		1134664						
ANR	1135612	Symbol	emit_mov_half		1134664						
ANR	1135613	Symbol	emit_save_flags		1134664						
ANR	1135614	Symbol	src_is_ereg		1134664						
ANR	1135615	Symbol	check_sljit_emit_op1		1134664						
ANR	1135616	Symbol	srcw		1134664						
ANR	1135617	Symbol	OFFS_REG_MASK		1134664						
ANR	1135618	Symbol	emit_mov		1134664						
ANR	1135619	Symbol	SLJIT_MOV_P		1134664						
ANR	1135620	Symbol	SLJIT_UNLIKELY		1134664						
ANR	1135621	Symbol	dst		1134664						
ANR	1135622	Symbol	SLJIT_MOV		1134664						
ANR	1135623	Symbol	emit_unary		1134664						
ANR	1135624	Symbol	update		1134664						
ANR	1135625	Symbol	SLJIT_SP		1134664						
ANR	1135626	Symbol	SLJIT_SET_E		1134664						
ANR	1135627	Symbol	GET_FLAGS		1134664						
ANR	1135628	Symbol	SLJIT_MOVU		1134664						
ANR	1135629	Symbol	GET_ALL_FLAGS		1134664						
ANR	1135630	Symbol	SLJIT_MOV_SI		1134664						
ANR	1135631	Symbol	LEA_r_m		1134664						
ANR	1135632	Symbol	SLJIT_MOVU_UI		1134664						
ANR	1135633	Symbol	compiler		1134664						
ANR	1135634	Symbol	NOT_rm		1134664						
ANR	1135635	Symbol	emit_clz		1134664						
ANR	1135636	Symbol	SLJIT_MOVU_P		1134664						
ANR	1135637	Symbol	op		1134664						
ANR	1135638	Symbol	op_flags		1134664						
ANR	1135639	Symbol	REG_MASK		1134664						
ANR	1135640	Symbol	emit_x86_instruction		1134664						
ANR	1135641	Symbol	NEG_rm		1134664						
ANR	1135642	Symbol	* inst		1134664						
ANR	1135643	Symbol	src		1134664						
ANR	1135644	Symbol	movu_offset		1134664						
ANR	1135645	Symbol	SLJIT_INT_OP		1134664						
ANR	1135646	Symbol	SLJIT_SUCCESS		1134664						
ANR	1135647	Symbol	SLJIT_MEM1		1134664						
ANR	1135648	Symbol	dst_is_ereg		1134664						
ANR	1135649	Symbol	inst		1134664						
ANR	1135650	Symbol	emit_mov_byte		1134664						
ANR	1135651	Symbol	compiler -> mode32		1134664						
ANR	1135652	Symbol	dstw		1134664						
ANR	1135653	Function	emit_cum_binary	1457:0:40399:43492							
ANR	1135654	FunctionDef	"emit_cum_binary (struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1135653	0					
ANR	1135655	CompoundStatement		1462:0:40629:43492	1135653	0					
ANR	1135656	IdentifierDeclStatement	sljit_ub * inst ;	1463:1:40632:40646	1135653	0	True				
ANR	1135657	IdentifierDecl	* inst		1135653	0					
ANR	1135658	IdentifierDeclType	sljit_ub *		1135653	0					
ANR	1135659	Identifier	inst		1135653	1					
ANR	1135660	IfStatement	if ( dst == SLJIT_UNUSED )		1135653	1					
ANR	1135661	Condition	dst == SLJIT_UNUSED	1465:5:40654:40672	1135653	0	True				
ANR	1135662	EqualityExpression	dst == SLJIT_UNUSED		1135653	0		==			
ANR	1135663	Identifier	dst		1135653	0					
ANR	1135664	Identifier	SLJIT_UNUSED		1135653	1					
ANR	1135665	CompoundStatement		4:26:45:45	1135653	1					
ANR	1135666	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1466:2:40679:40723	1135653	0	True				
ANR	1135667	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1135653	0					
ANR	1135668	Callee	EMIT_MOV		1135653	0					
ANR	1135669	Identifier	EMIT_MOV		1135653	0					
ANR	1135670	ArgumentList	compiler		1135653	1					
ANR	1135671	Argument	compiler		1135653	0					
ANR	1135672	Identifier	compiler		1135653	0					
ANR	1135673	Argument	TMP_REG1		1135653	1					
ANR	1135674	Identifier	TMP_REG1		1135653	0					
ANR	1135675	Argument	0		1135653	2					
ANR	1135676	PrimaryExpression	0		1135653	0					
ANR	1135677	Argument	src1		1135653	3					
ANR	1135678	Identifier	src1		1135653	0					
ANR	1135679	Argument	src1w		1135653	4					
ANR	1135680	Identifier	src1w		1135653	0					
ANR	1135681	IfStatement	if ( src2 & SLJIT_IMM )		1135653	1					
ANR	1135682	Condition	src2 & SLJIT_IMM	1467:6:40731:40746	1135653	0	True				
ANR	1135683	BitAndExpression	src2 & SLJIT_IMM		1135653	0		&			
ANR	1135684	Identifier	src2		1135653	0					
ANR	1135685	Identifier	SLJIT_IMM		1135653	1					
ANR	1135686	CompoundStatement		6:24:119:119	1135653	1					
ANR	1135687	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1468:3:40754:40799	1135653	0	True				
ANR	1135688	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1135653	0					
ANR	1135689	Callee	BINARY_IMM		1135653	0					
ANR	1135690	Identifier	BINARY_IMM		1135653	0					
ANR	1135691	ArgumentList	op_imm		1135653	1					
ANR	1135692	Argument	op_imm		1135653	0					
ANR	1135693	Identifier	op_imm		1135653	0					
ANR	1135694	Argument	op_mr		1135653	1					
ANR	1135695	Identifier	op_mr		1135653	0					
ANR	1135696	Argument	src2w		1135653	2					
ANR	1135697	Identifier	src2w		1135653	0					
ANR	1135698	Argument	TMP_REG1		1135653	3					
ANR	1135699	Identifier	TMP_REG1		1135653	0					
ANR	1135700	Argument	0		1135653	4					
ANR	1135701	PrimaryExpression	0		1135653	0					
ANR	1135702	ElseStatement	else		1135653	0					
ANR	1135703	CompoundStatement		9:7:182:182	1135653	0					
ANR	1135704	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1471:3:40817:40883	1135653	0	True				
ANR	1135705	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1135653	0		=			
ANR	1135706	Identifier	inst		1135653	0					
ANR	1135707	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1135653	1					
ANR	1135708	Callee	emit_x86_instruction		1135653	0					
ANR	1135709	Identifier	emit_x86_instruction		1135653	0					
ANR	1135710	ArgumentList	compiler		1135653	1					
ANR	1135711	Argument	compiler		1135653	0					
ANR	1135712	Identifier	compiler		1135653	0					
ANR	1135713	Argument	1		1135653	1					
ANR	1135714	PrimaryExpression	1		1135653	0					
ANR	1135715	Argument	TMP_REG1		1135653	2					
ANR	1135716	Identifier	TMP_REG1		1135653	0					
ANR	1135717	Argument	0		1135653	3					
ANR	1135718	PrimaryExpression	0		1135653	0					
ANR	1135719	Argument	src2		1135653	4					
ANR	1135720	Identifier	src2		1135653	0					
ANR	1135721	Argument	src2w		1135653	5					
ANR	1135722	Identifier	src2w		1135653	0					
ANR	1135723	ExpressionStatement	FAIL_IF ( ! inst )	1472:3:40888:40902	1135653	1	True				
ANR	1135724	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1135725	Callee	FAIL_IF		1135653	0					
ANR	1135726	Identifier	FAIL_IF		1135653	0					
ANR	1135727	ArgumentList	! inst		1135653	1					
ANR	1135728	Argument	! inst		1135653	0					
ANR	1135729	UnaryOperationExpression	! inst		1135653	0					
ANR	1135730	UnaryOperator	!		1135653	0					
ANR	1135731	Identifier	inst		1135653	1					
ANR	1135732	ExpressionStatement	* inst = op_rm	1473:3:40907:40920	1135653	2	True				
ANR	1135733	AssignmentExpression	* inst = op_rm		1135653	0		=			
ANR	1135734	UnaryOperationExpression	* inst		1135653	0					
ANR	1135735	UnaryOperator	*		1135653	0					
ANR	1135736	Identifier	inst		1135653	1					
ANR	1135737	Identifier	op_rm		1135653	1					
ANR	1135738	ReturnStatement	return SLJIT_SUCCESS ;	1475:2:40928:40948	1135653	2	True				
ANR	1135739	Identifier	SLJIT_SUCCESS		1135653	0					
ANR	1135740	IfStatement	if ( dst == src1 && dstw == src1w )		1135653	2					
ANR	1135741	Condition	dst == src1 && dstw == src1w	1478:5:40959:40986	1135653	0	True				
ANR	1135742	AndExpression	dst == src1 && dstw == src1w		1135653	0		&&			
ANR	1135743	EqualityExpression	dst == src1		1135653	0		==			
ANR	1135744	Identifier	dst		1135653	0					
ANR	1135745	Identifier	src1		1135653	1					
ANR	1135746	EqualityExpression	dstw == src1w		1135653	1		==			
ANR	1135747	Identifier	dstw		1135653	0					
ANR	1135748	Identifier	src1w		1135653	1					
ANR	1135749	CompoundStatement		17:35:359:359	1135653	1					
ANR	1135750	IfStatement	if ( src2 & SLJIT_IMM )		1135653	0					
ANR	1135751	Condition	src2 & SLJIT_IMM	1479:6:40997:41012	1135653	0	True				
ANR	1135752	BitAndExpression	src2 & SLJIT_IMM		1135653	0		&			
ANR	1135753	Identifier	src2		1135653	0					
ANR	1135754	Identifier	SLJIT_IMM		1135653	1					
ANR	1135755	CompoundStatement		18:24:385:385	1135653	1					
ANR	1135756	IfStatement	if ( ( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1135653	0					
ANR	1135757	Condition	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1481:7:41081:41174	1135653	0	True				
ANR	1135758	AndExpression	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1135653	0		&&			
ANR	1135759	EqualityExpression	dst == SLJIT_R0		1135653	0		==			
ANR	1135760	Identifier	dst		1135653	0					
ANR	1135761	Identifier	SLJIT_R0		1135653	1					
ANR	1135762	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1135653	1		&&			
ANR	1135763	OrExpression	src2w > 127 || src2w < - 128		1135653	0		||			
ANR	1135764	RelationalExpression	src2w > 127		1135653	0		>			
ANR	1135765	Identifier	src2w		1135653	0					
ANR	1135766	PrimaryExpression	127		1135653	1					
ANR	1135767	RelationalExpression	src2w < - 128		1135653	1		<			
ANR	1135768	Identifier	src2w		1135653	0					
ANR	1135769	UnaryOperationExpression	- 128		1135653	1					
ANR	1135770	UnaryOperator	-		1135653	0					
ANR	1135771	PrimaryExpression	128		1135653	1					
ANR	1135772	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1135653	1		||			
ANR	1135773	PtrMemberAccess	compiler -> mode32		1135653	0					
ANR	1135774	Identifier	compiler		1135653	0					
ANR	1135775	Identifier	mode32		1135653	1					
ANR	1135776	CallExpression	IS_HALFWORD ( src2w )		1135653	1					
ANR	1135777	Callee	IS_HALFWORD		1135653	0					
ANR	1135778	Identifier	IS_HALFWORD		1135653	0					
ANR	1135779	ArgumentList	src2w		1135653	1					
ANR	1135780	Argument	src2w		1135653	0					
ANR	1135781	Identifier	src2w		1135653	0					
ANR	1135782	CompoundStatement		20:103:547:547	1135653	1					
ANR	1135783	ExpressionStatement	"BINARY_EAX_IMM ( op_eax_imm , src2w )"	1485:4:41257:41290	1135653	0	True				
ANR	1135784	CallExpression	"BINARY_EAX_IMM ( op_eax_imm , src2w )"		1135653	0					
ANR	1135785	Callee	BINARY_EAX_IMM		1135653	0					
ANR	1135786	Identifier	BINARY_EAX_IMM		1135653	0					
ANR	1135787	ArgumentList	op_eax_imm		1135653	1					
ANR	1135788	Argument	op_eax_imm		1135653	0					
ANR	1135789	Identifier	op_eax_imm		1135653	0					
ANR	1135790	Argument	src2w		1135653	1					
ANR	1135791	Identifier	src2w		1135653	0					
ANR	1135792	ElseStatement	else		1135653	0					
ANR	1135793	CompoundStatement		26:8:675:675	1135653	0					
ANR	1135794	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"	1488:4:41311:41354	1135653	0	True				
ANR	1135795	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"		1135653	0					
ANR	1135796	Callee	BINARY_IMM		1135653	0					
ANR	1135797	Identifier	BINARY_IMM		1135653	0					
ANR	1135798	ArgumentList	op_imm		1135653	1					
ANR	1135799	Argument	op_imm		1135653	0					
ANR	1135800	Identifier	op_imm		1135653	0					
ANR	1135801	Argument	op_mr		1135653	1					
ANR	1135802	Identifier	op_mr		1135653	0					
ANR	1135803	Argument	src2w		1135653	2					
ANR	1135804	Identifier	src2w		1135653	0					
ANR	1135805	Argument	dst		1135653	3					
ANR	1135806	Identifier	dst		1135653	0					
ANR	1135807	Argument	dstw		1135653	4					
ANR	1135808	Identifier	dstw		1135653	0					
ANR	1135809	ElseStatement	else		1135653	0					
ANR	1135810	IfStatement	if ( FAST_IS_REG ( dst ) )		1135653	0					
ANR	1135811	Condition	FAST_IS_REG ( dst )	1491:11:41376:41391	1135653	0	True				
ANR	1135812	CallExpression	FAST_IS_REG ( dst )		1135653	0					
ANR	1135813	Callee	FAST_IS_REG		1135653	0					
ANR	1135814	Identifier	FAST_IS_REG		1135653	0					
ANR	1135815	ArgumentList	dst		1135653	1					
ANR	1135816	Argument	dst		1135653	0					
ANR	1135817	Identifier	dst		1135653	0					
ANR	1135818	CompoundStatement		30:29:764:764	1135653	1					
ANR	1135819	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"	1492:3:41399:41463	1135653	0	True				
ANR	1135820	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1135653	0		=			
ANR	1135821	Identifier	inst		1135653	0					
ANR	1135822	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1135653	1					
ANR	1135823	Callee	emit_x86_instruction		1135653	0					
ANR	1135824	Identifier	emit_x86_instruction		1135653	0					
ANR	1135825	ArgumentList	compiler		1135653	1					
ANR	1135826	Argument	compiler		1135653	0					
ANR	1135827	Identifier	compiler		1135653	0					
ANR	1135828	Argument	1		1135653	1					
ANR	1135829	PrimaryExpression	1		1135653	0					
ANR	1135830	Argument	dst		1135653	2					
ANR	1135831	Identifier	dst		1135653	0					
ANR	1135832	Argument	dstw		1135653	3					
ANR	1135833	Identifier	dstw		1135653	0					
ANR	1135834	Argument	src2		1135653	4					
ANR	1135835	Identifier	src2		1135653	0					
ANR	1135836	Argument	src2w		1135653	5					
ANR	1135837	Identifier	src2w		1135653	0					
ANR	1135838	ExpressionStatement	FAIL_IF ( ! inst )	1493:3:41468:41482	1135653	1	True				
ANR	1135839	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1135840	Callee	FAIL_IF		1135653	0					
ANR	1135841	Identifier	FAIL_IF		1135653	0					
ANR	1135842	ArgumentList	! inst		1135653	1					
ANR	1135843	Argument	! inst		1135653	0					
ANR	1135844	UnaryOperationExpression	! inst		1135653	0					
ANR	1135845	UnaryOperator	!		1135653	0					
ANR	1135846	Identifier	inst		1135653	1					
ANR	1135847	ExpressionStatement	* inst = op_rm	1494:3:41487:41500	1135653	2	True				
ANR	1135848	AssignmentExpression	* inst = op_rm		1135653	0		=			
ANR	1135849	UnaryOperationExpression	* inst		1135653	0					
ANR	1135850	UnaryOperator	*		1135653	0					
ANR	1135851	Identifier	inst		1135653	1					
ANR	1135852	Identifier	op_rm		1135653	1					
ANR	1135853	ElseStatement	else		1135653	0					
ANR	1135854	IfStatement	if ( FAST_IS_REG ( src2 ) )		1135653	0					
ANR	1135855	Condition	FAST_IS_REG ( src2 )	1496:11:41517:41533	1135653	0	True				
ANR	1135856	CallExpression	FAST_IS_REG ( src2 )		1135653	0					
ANR	1135857	Callee	FAST_IS_REG		1135653	0					
ANR	1135858	Identifier	FAST_IS_REG		1135653	0					
ANR	1135859	ArgumentList	src2		1135653	1					
ANR	1135860	Argument	src2		1135653	0					
ANR	1135861	Identifier	src2		1135653	0					
ANR	1135862	CompoundStatement		35:30:906:906	1135653	1					
ANR	1135863	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"	1498:3:41593:41657	1135653	0	True				
ANR	1135864	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1135653	0		=			
ANR	1135865	Identifier	inst		1135653	0					
ANR	1135866	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1135653	1					
ANR	1135867	Callee	emit_x86_instruction		1135653	0					
ANR	1135868	Identifier	emit_x86_instruction		1135653	0					
ANR	1135869	ArgumentList	compiler		1135653	1					
ANR	1135870	Argument	compiler		1135653	0					
ANR	1135871	Identifier	compiler		1135653	0					
ANR	1135872	Argument	1		1135653	1					
ANR	1135873	PrimaryExpression	1		1135653	0					
ANR	1135874	Argument	src2		1135653	2					
ANR	1135875	Identifier	src2		1135653	0					
ANR	1135876	Argument	src2w		1135653	3					
ANR	1135877	Identifier	src2w		1135653	0					
ANR	1135878	Argument	dst		1135653	4					
ANR	1135879	Identifier	dst		1135653	0					
ANR	1135880	Argument	dstw		1135653	5					
ANR	1135881	Identifier	dstw		1135653	0					
ANR	1135882	ExpressionStatement	FAIL_IF ( ! inst )	1499:3:41662:41676	1135653	1	True				
ANR	1135883	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1135884	Callee	FAIL_IF		1135653	0					
ANR	1135885	Identifier	FAIL_IF		1135653	0					
ANR	1135886	ArgumentList	! inst		1135653	1					
ANR	1135887	Argument	! inst		1135653	0					
ANR	1135888	UnaryOperationExpression	! inst		1135653	0					
ANR	1135889	UnaryOperator	!		1135653	0					
ANR	1135890	Identifier	inst		1135653	1					
ANR	1135891	ExpressionStatement	* inst = op_mr	1500:3:41681:41694	1135653	2	True				
ANR	1135892	AssignmentExpression	* inst = op_mr		1135653	0		=			
ANR	1135893	UnaryOperationExpression	* inst		1135653	0					
ANR	1135894	UnaryOperator	*		1135653	0					
ANR	1135895	Identifier	inst		1135653	1					
ANR	1135896	Identifier	op_mr		1135653	1					
ANR	1135897	ElseStatement	else		1135653	0					
ANR	1135898	CompoundStatement		41:7:1077:1077	1135653	0					
ANR	1135899	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"	1503:3:41712:41756	1135653	0	True				
ANR	1135900	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"		1135653	0					
ANR	1135901	Callee	EMIT_MOV		1135653	0					
ANR	1135902	Identifier	EMIT_MOV		1135653	0					
ANR	1135903	ArgumentList	compiler		1135653	1					
ANR	1135904	Argument	compiler		1135653	0					
ANR	1135905	Identifier	compiler		1135653	0					
ANR	1135906	Argument	TMP_REG1		1135653	1					
ANR	1135907	Identifier	TMP_REG1		1135653	0					
ANR	1135908	Argument	0		1135653	2					
ANR	1135909	PrimaryExpression	0		1135653	0					
ANR	1135910	Argument	src2		1135653	3					
ANR	1135911	Identifier	src2		1135653	0					
ANR	1135912	Argument	src2w		1135653	4					
ANR	1135913	Identifier	src2w		1135653	0					
ANR	1135914	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	1504:3:41761:41825	1135653	1	True				
ANR	1135915	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1135653	0		=			
ANR	1135916	Identifier	inst		1135653	0					
ANR	1135917	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1135653	1					
ANR	1135918	Callee	emit_x86_instruction		1135653	0					
ANR	1135919	Identifier	emit_x86_instruction		1135653	0					
ANR	1135920	ArgumentList	compiler		1135653	1					
ANR	1135921	Argument	compiler		1135653	0					
ANR	1135922	Identifier	compiler		1135653	0					
ANR	1135923	Argument	1		1135653	1					
ANR	1135924	PrimaryExpression	1		1135653	0					
ANR	1135925	Argument	TMP_REG1		1135653	2					
ANR	1135926	Identifier	TMP_REG1		1135653	0					
ANR	1135927	Argument	0		1135653	3					
ANR	1135928	PrimaryExpression	0		1135653	0					
ANR	1135929	Argument	dst		1135653	4					
ANR	1135930	Identifier	dst		1135653	0					
ANR	1135931	Argument	dstw		1135653	5					
ANR	1135932	Identifier	dstw		1135653	0					
ANR	1135933	ExpressionStatement	FAIL_IF ( ! inst )	1505:3:41830:41844	1135653	2	True				
ANR	1135934	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1135935	Callee	FAIL_IF		1135653	0					
ANR	1135936	Identifier	FAIL_IF		1135653	0					
ANR	1135937	ArgumentList	! inst		1135653	1					
ANR	1135938	Argument	! inst		1135653	0					
ANR	1135939	UnaryOperationExpression	! inst		1135653	0					
ANR	1135940	UnaryOperator	!		1135653	0					
ANR	1135941	Identifier	inst		1135653	1					
ANR	1135942	ExpressionStatement	* inst = op_mr	1506:3:41849:41862	1135653	3	True				
ANR	1135943	AssignmentExpression	* inst = op_mr		1135653	0		=			
ANR	1135944	UnaryOperationExpression	* inst		1135653	0					
ANR	1135945	UnaryOperator	*		1135653	0					
ANR	1135946	Identifier	inst		1135653	1					
ANR	1135947	Identifier	op_mr		1135653	1					
ANR	1135948	ReturnStatement	return SLJIT_SUCCESS ;	1508:2:41870:41890	1135653	1	True				
ANR	1135949	Identifier	SLJIT_SUCCESS		1135653	0					
ANR	1135950	IfStatement	if ( dst == src2 && dstw == src2w )		1135653	3					
ANR	1135951	Condition	dst == src2 && dstw == src2w	1512:5:41940:41967	1135653	0	True				
ANR	1135952	AndExpression	dst == src2 && dstw == src2w		1135653	0		&&			
ANR	1135953	EqualityExpression	dst == src2		1135653	0		==			
ANR	1135954	Identifier	dst		1135653	0					
ANR	1135955	Identifier	src2		1135653	1					
ANR	1135956	EqualityExpression	dstw == src2w		1135653	1		==			
ANR	1135957	Identifier	dstw		1135653	0					
ANR	1135958	Identifier	src2w		1135653	1					
ANR	1135959	CompoundStatement		51:35:1340:1340	1135653	1					
ANR	1135960	IfStatement	if ( src1 & SLJIT_IMM )		1135653	0					
ANR	1135961	Condition	src1 & SLJIT_IMM	1513:6:41978:41993	1135653	0	True				
ANR	1135962	BitAndExpression	src1 & SLJIT_IMM		1135653	0		&			
ANR	1135963	Identifier	src1		1135653	0					
ANR	1135964	Identifier	SLJIT_IMM		1135653	1					
ANR	1135965	CompoundStatement		52:24:1366:1366	1135653	1					
ANR	1135966	IfStatement	if ( ( dst == SLJIT_R0 ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) ) )		1135653	0					
ANR	1135967	Condition	( dst == SLJIT_R0 ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )	1515:7:42062:42155	1135653	0	True				
ANR	1135968	AndExpression	( dst == SLJIT_R0 ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1135653	0		&&			
ANR	1135969	EqualityExpression	dst == SLJIT_R0		1135653	0		==			
ANR	1135970	Identifier	dst		1135653	0					
ANR	1135971	Identifier	SLJIT_R0		1135653	1					
ANR	1135972	AndExpression	( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1135653	1		&&			
ANR	1135973	OrExpression	src1w > 127 || src1w < - 128		1135653	0		||			
ANR	1135974	RelationalExpression	src1w > 127		1135653	0		>			
ANR	1135975	Identifier	src1w		1135653	0					
ANR	1135976	PrimaryExpression	127		1135653	1					
ANR	1135977	RelationalExpression	src1w < - 128		1135653	1		<			
ANR	1135978	Identifier	src1w		1135653	0					
ANR	1135979	UnaryOperationExpression	- 128		1135653	1					
ANR	1135980	UnaryOperator	-		1135653	0					
ANR	1135981	PrimaryExpression	128		1135653	1					
ANR	1135982	OrExpression	compiler -> mode32 || IS_HALFWORD ( src1w )		1135653	1		||			
ANR	1135983	PtrMemberAccess	compiler -> mode32		1135653	0					
ANR	1135984	Identifier	compiler		1135653	0					
ANR	1135985	Identifier	mode32		1135653	1					
ANR	1135986	CallExpression	IS_HALFWORD ( src1w )		1135653	1					
ANR	1135987	Callee	IS_HALFWORD		1135653	0					
ANR	1135988	Identifier	IS_HALFWORD		1135653	0					
ANR	1135989	ArgumentList	src1w		1135653	1					
ANR	1135990	Argument	src1w		1135653	0					
ANR	1135991	Identifier	src1w		1135653	0					
ANR	1135992	CompoundStatement		54:103:1528:1528	1135653	1					
ANR	1135993	ExpressionStatement	"BINARY_EAX_IMM ( op_eax_imm , src1w )"	1519:4:42238:42271	1135653	0	True				
ANR	1135994	CallExpression	"BINARY_EAX_IMM ( op_eax_imm , src1w )"		1135653	0					
ANR	1135995	Callee	BINARY_EAX_IMM		1135653	0					
ANR	1135996	Identifier	BINARY_EAX_IMM		1135653	0					
ANR	1135997	ArgumentList	op_eax_imm		1135653	1					
ANR	1135998	Argument	op_eax_imm		1135653	0					
ANR	1135999	Identifier	op_eax_imm		1135653	0					
ANR	1136000	Argument	src1w		1135653	1					
ANR	1136001	Identifier	src1w		1135653	0					
ANR	1136002	ElseStatement	else		1135653	0					
ANR	1136003	CompoundStatement		60:8:1656:1656	1135653	0					
ANR	1136004	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src1w , dst , dstw )"	1522:4:42292:42335	1135653	0	True				
ANR	1136005	CallExpression	"BINARY_IMM ( op_imm , op_mr , src1w , dst , dstw )"		1135653	0					
ANR	1136006	Callee	BINARY_IMM		1135653	0					
ANR	1136007	Identifier	BINARY_IMM		1135653	0					
ANR	1136008	ArgumentList	op_imm		1135653	1					
ANR	1136009	Argument	op_imm		1135653	0					
ANR	1136010	Identifier	op_imm		1135653	0					
ANR	1136011	Argument	op_mr		1135653	1					
ANR	1136012	Identifier	op_mr		1135653	0					
ANR	1136013	Argument	src1w		1135653	2					
ANR	1136014	Identifier	src1w		1135653	0					
ANR	1136015	Argument	dst		1135653	3					
ANR	1136016	Identifier	dst		1135653	0					
ANR	1136017	Argument	dstw		1135653	4					
ANR	1136018	Identifier	dstw		1135653	0					
ANR	1136019	ElseStatement	else		1135653	0					
ANR	1136020	IfStatement	if ( FAST_IS_REG ( dst ) )		1135653	0					
ANR	1136021	Condition	FAST_IS_REG ( dst )	1525:11:42357:42372	1135653	0	True				
ANR	1136022	CallExpression	FAST_IS_REG ( dst )		1135653	0					
ANR	1136023	Callee	FAST_IS_REG		1135653	0					
ANR	1136024	Identifier	FAST_IS_REG		1135653	0					
ANR	1136025	ArgumentList	dst		1135653	1					
ANR	1136026	Argument	dst		1135653	0					
ANR	1136027	Identifier	dst		1135653	0					
ANR	1136028	CompoundStatement		64:29:1745:1745	1135653	1					
ANR	1136029	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src1 , src1w )"	1526:3:42380:42444	1135653	0	True				
ANR	1136030	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src1 , src1w )"		1135653	0		=			
ANR	1136031	Identifier	inst		1135653	0					
ANR	1136032	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , dstw , src1 , src1w )"		1135653	1					
ANR	1136033	Callee	emit_x86_instruction		1135653	0					
ANR	1136034	Identifier	emit_x86_instruction		1135653	0					
ANR	1136035	ArgumentList	compiler		1135653	1					
ANR	1136036	Argument	compiler		1135653	0					
ANR	1136037	Identifier	compiler		1135653	0					
ANR	1136038	Argument	1		1135653	1					
ANR	1136039	PrimaryExpression	1		1135653	0					
ANR	1136040	Argument	dst		1135653	2					
ANR	1136041	Identifier	dst		1135653	0					
ANR	1136042	Argument	dstw		1135653	3					
ANR	1136043	Identifier	dstw		1135653	0					
ANR	1136044	Argument	src1		1135653	4					
ANR	1136045	Identifier	src1		1135653	0					
ANR	1136046	Argument	src1w		1135653	5					
ANR	1136047	Identifier	src1w		1135653	0					
ANR	1136048	ExpressionStatement	FAIL_IF ( ! inst )	1527:3:42449:42463	1135653	1	True				
ANR	1136049	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1136050	Callee	FAIL_IF		1135653	0					
ANR	1136051	Identifier	FAIL_IF		1135653	0					
ANR	1136052	ArgumentList	! inst		1135653	1					
ANR	1136053	Argument	! inst		1135653	0					
ANR	1136054	UnaryOperationExpression	! inst		1135653	0					
ANR	1136055	UnaryOperator	!		1135653	0					
ANR	1136056	Identifier	inst		1135653	1					
ANR	1136057	ExpressionStatement	* inst = op_rm	1528:3:42468:42481	1135653	2	True				
ANR	1136058	AssignmentExpression	* inst = op_rm		1135653	0		=			
ANR	1136059	UnaryOperationExpression	* inst		1135653	0					
ANR	1136060	UnaryOperator	*		1135653	0					
ANR	1136061	Identifier	inst		1135653	1					
ANR	1136062	Identifier	op_rm		1135653	1					
ANR	1136063	ElseStatement	else		1135653	0					
ANR	1136064	IfStatement	if ( FAST_IS_REG ( src1 ) )		1135653	0					
ANR	1136065	Condition	FAST_IS_REG ( src1 )	1530:11:42498:42514	1135653	0	True				
ANR	1136066	CallExpression	FAST_IS_REG ( src1 )		1135653	0					
ANR	1136067	Callee	FAST_IS_REG		1135653	0					
ANR	1136068	Identifier	FAST_IS_REG		1135653	0					
ANR	1136069	ArgumentList	src1		1135653	1					
ANR	1136070	Argument	src1		1135653	0					
ANR	1136071	Identifier	src1		1135653	0					
ANR	1136072	CompoundStatement		69:30:1887:1887	1135653	1					
ANR	1136073	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src1 , src1w , dst , dstw )"	1531:3:42522:42586	1135653	0	True				
ANR	1136074	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src1 , src1w , dst , dstw )"		1135653	0		=			
ANR	1136075	Identifier	inst		1135653	0					
ANR	1136076	CallExpression	"emit_x86_instruction ( compiler , 1 , src1 , src1w , dst , dstw )"		1135653	1					
ANR	1136077	Callee	emit_x86_instruction		1135653	0					
ANR	1136078	Identifier	emit_x86_instruction		1135653	0					
ANR	1136079	ArgumentList	compiler		1135653	1					
ANR	1136080	Argument	compiler		1135653	0					
ANR	1136081	Identifier	compiler		1135653	0					
ANR	1136082	Argument	1		1135653	1					
ANR	1136083	PrimaryExpression	1		1135653	0					
ANR	1136084	Argument	src1		1135653	2					
ANR	1136085	Identifier	src1		1135653	0					
ANR	1136086	Argument	src1w		1135653	3					
ANR	1136087	Identifier	src1w		1135653	0					
ANR	1136088	Argument	dst		1135653	4					
ANR	1136089	Identifier	dst		1135653	0					
ANR	1136090	Argument	dstw		1135653	5					
ANR	1136091	Identifier	dstw		1135653	0					
ANR	1136092	ExpressionStatement	FAIL_IF ( ! inst )	1532:3:42591:42605	1135653	1	True				
ANR	1136093	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1136094	Callee	FAIL_IF		1135653	0					
ANR	1136095	Identifier	FAIL_IF		1135653	0					
ANR	1136096	ArgumentList	! inst		1135653	1					
ANR	1136097	Argument	! inst		1135653	0					
ANR	1136098	UnaryOperationExpression	! inst		1135653	0					
ANR	1136099	UnaryOperator	!		1135653	0					
ANR	1136100	Identifier	inst		1135653	1					
ANR	1136101	ExpressionStatement	* inst = op_mr	1533:3:42610:42623	1135653	2	True				
ANR	1136102	AssignmentExpression	* inst = op_mr		1135653	0		=			
ANR	1136103	UnaryOperationExpression	* inst		1135653	0					
ANR	1136104	UnaryOperator	*		1135653	0					
ANR	1136105	Identifier	inst		1135653	1					
ANR	1136106	Identifier	op_mr		1135653	1					
ANR	1136107	ElseStatement	else		1135653	0					
ANR	1136108	CompoundStatement		74:7:2006:2006	1135653	0					
ANR	1136109	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1536:3:42641:42685	1135653	0	True				
ANR	1136110	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1135653	0					
ANR	1136111	Callee	EMIT_MOV		1135653	0					
ANR	1136112	Identifier	EMIT_MOV		1135653	0					
ANR	1136113	ArgumentList	compiler		1135653	1					
ANR	1136114	Argument	compiler		1135653	0					
ANR	1136115	Identifier	compiler		1135653	0					
ANR	1136116	Argument	TMP_REG1		1135653	1					
ANR	1136117	Identifier	TMP_REG1		1135653	0					
ANR	1136118	Argument	0		1135653	2					
ANR	1136119	PrimaryExpression	0		1135653	0					
ANR	1136120	Argument	src1		1135653	3					
ANR	1136121	Identifier	src1		1135653	0					
ANR	1136122	Argument	src1w		1135653	4					
ANR	1136123	Identifier	src1w		1135653	0					
ANR	1136124	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	1537:3:42690:42754	1135653	1	True				
ANR	1136125	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1135653	0		=			
ANR	1136126	Identifier	inst		1135653	0					
ANR	1136127	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1135653	1					
ANR	1136128	Callee	emit_x86_instruction		1135653	0					
ANR	1136129	Identifier	emit_x86_instruction		1135653	0					
ANR	1136130	ArgumentList	compiler		1135653	1					
ANR	1136131	Argument	compiler		1135653	0					
ANR	1136132	Identifier	compiler		1135653	0					
ANR	1136133	Argument	1		1135653	1					
ANR	1136134	PrimaryExpression	1		1135653	0					
ANR	1136135	Argument	TMP_REG1		1135653	2					
ANR	1136136	Identifier	TMP_REG1		1135653	0					
ANR	1136137	Argument	0		1135653	3					
ANR	1136138	PrimaryExpression	0		1135653	0					
ANR	1136139	Argument	dst		1135653	4					
ANR	1136140	Identifier	dst		1135653	0					
ANR	1136141	Argument	dstw		1135653	5					
ANR	1136142	Identifier	dstw		1135653	0					
ANR	1136143	ExpressionStatement	FAIL_IF ( ! inst )	1538:3:42759:42773	1135653	2	True				
ANR	1136144	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1136145	Callee	FAIL_IF		1135653	0					
ANR	1136146	Identifier	FAIL_IF		1135653	0					
ANR	1136147	ArgumentList	! inst		1135653	1					
ANR	1136148	Argument	! inst		1135653	0					
ANR	1136149	UnaryOperationExpression	! inst		1135653	0					
ANR	1136150	UnaryOperator	!		1135653	0					
ANR	1136151	Identifier	inst		1135653	1					
ANR	1136152	ExpressionStatement	* inst = op_mr	1539:3:42778:42791	1135653	3	True				
ANR	1136153	AssignmentExpression	* inst = op_mr		1135653	0		=			
ANR	1136154	UnaryOperationExpression	* inst		1135653	0					
ANR	1136155	UnaryOperator	*		1135653	0					
ANR	1136156	Identifier	inst		1135653	1					
ANR	1136157	Identifier	op_mr		1135653	1					
ANR	1136158	ReturnStatement	return SLJIT_SUCCESS ;	1541:2:42799:42819	1135653	1	True				
ANR	1136159	Identifier	SLJIT_SUCCESS		1135653	0					
ANR	1136160	IfStatement	if ( FAST_IS_REG ( dst ) )		1135653	4					
ANR	1136161	Condition	FAST_IS_REG ( dst )	1545:5:42854:42869	1135653	0	True				
ANR	1136162	CallExpression	FAST_IS_REG ( dst )		1135653	0					
ANR	1136163	Callee	FAST_IS_REG		1135653	0					
ANR	1136164	Identifier	FAST_IS_REG		1135653	0					
ANR	1136165	ArgumentList	dst		1135653	1					
ANR	1136166	Argument	dst		1135653	0					
ANR	1136167	Identifier	dst		1135653	0					
ANR	1136168	CompoundStatement		84:23:2242:2242	1135653	1					
ANR	1136169	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	1546:2:42876:42915	1135653	0	True				
ANR	1136170	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1135653	0					
ANR	1136171	Callee	EMIT_MOV		1135653	0					
ANR	1136172	Identifier	EMIT_MOV		1135653	0					
ANR	1136173	ArgumentList	compiler		1135653	1					
ANR	1136174	Argument	compiler		1135653	0					
ANR	1136175	Identifier	compiler		1135653	0					
ANR	1136176	Argument	dst		1135653	1					
ANR	1136177	Identifier	dst		1135653	0					
ANR	1136178	Argument	0		1135653	2					
ANR	1136179	PrimaryExpression	0		1135653	0					
ANR	1136180	Argument	src1		1135653	3					
ANR	1136181	Identifier	src1		1135653	0					
ANR	1136182	Argument	src1w		1135653	4					
ANR	1136183	Identifier	src1w		1135653	0					
ANR	1136184	IfStatement	if ( src2 & SLJIT_IMM )		1135653	1					
ANR	1136185	Condition	src2 & SLJIT_IMM	1547:6:42923:42938	1135653	0	True				
ANR	1136186	BitAndExpression	src2 & SLJIT_IMM		1135653	0		&			
ANR	1136187	Identifier	src2		1135653	0					
ANR	1136188	Identifier	SLJIT_IMM		1135653	1					
ANR	1136189	CompoundStatement		86:24:2311:2311	1135653	1					
ANR	1136190	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"	1548:3:42946:42986	1135653	0	True				
ANR	1136191	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"		1135653	0					
ANR	1136192	Callee	BINARY_IMM		1135653	0					
ANR	1136193	Identifier	BINARY_IMM		1135653	0					
ANR	1136194	ArgumentList	op_imm		1135653	1					
ANR	1136195	Argument	op_imm		1135653	0					
ANR	1136196	Identifier	op_imm		1135653	0					
ANR	1136197	Argument	op_mr		1135653	1					
ANR	1136198	Identifier	op_mr		1135653	0					
ANR	1136199	Argument	src2w		1135653	2					
ANR	1136200	Identifier	src2w		1135653	0					
ANR	1136201	Argument	dst		1135653	3					
ANR	1136202	Identifier	dst		1135653	0					
ANR	1136203	Argument	0		1135653	4					
ANR	1136204	PrimaryExpression	0		1135653	0					
ANR	1136205	ElseStatement	else		1135653	0					
ANR	1136206	CompoundStatement		89:7:2369:2369	1135653	0					
ANR	1136207	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"	1551:3:43004:43065	1135653	0	True				
ANR	1136208	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1135653	0		=			
ANR	1136209	Identifier	inst		1135653	0					
ANR	1136210	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1135653	1					
ANR	1136211	Callee	emit_x86_instruction		1135653	0					
ANR	1136212	Identifier	emit_x86_instruction		1135653	0					
ANR	1136213	ArgumentList	compiler		1135653	1					
ANR	1136214	Argument	compiler		1135653	0					
ANR	1136215	Identifier	compiler		1135653	0					
ANR	1136216	Argument	1		1135653	1					
ANR	1136217	PrimaryExpression	1		1135653	0					
ANR	1136218	Argument	dst		1135653	2					
ANR	1136219	Identifier	dst		1135653	0					
ANR	1136220	Argument	0		1135653	3					
ANR	1136221	PrimaryExpression	0		1135653	0					
ANR	1136222	Argument	src2		1135653	4					
ANR	1136223	Identifier	src2		1135653	0					
ANR	1136224	Argument	src2w		1135653	5					
ANR	1136225	Identifier	src2w		1135653	0					
ANR	1136226	ExpressionStatement	FAIL_IF ( ! inst )	1552:3:43070:43084	1135653	1	True				
ANR	1136227	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1136228	Callee	FAIL_IF		1135653	0					
ANR	1136229	Identifier	FAIL_IF		1135653	0					
ANR	1136230	ArgumentList	! inst		1135653	1					
ANR	1136231	Argument	! inst		1135653	0					
ANR	1136232	UnaryOperationExpression	! inst		1135653	0					
ANR	1136233	UnaryOperator	!		1135653	0					
ANR	1136234	Identifier	inst		1135653	1					
ANR	1136235	ExpressionStatement	* inst = op_rm	1553:3:43089:43102	1135653	2	True				
ANR	1136236	AssignmentExpression	* inst = op_rm		1135653	0		=			
ANR	1136237	UnaryOperationExpression	* inst		1135653	0					
ANR	1136238	UnaryOperator	*		1135653	0					
ANR	1136239	Identifier	inst		1135653	1					
ANR	1136240	Identifier	op_rm		1135653	1					
ANR	1136241	ElseStatement	else		1135653	0					
ANR	1136242	CompoundStatement		95:6:2487:2487	1135653	0					
ANR	1136243	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1558:2:43172:43216	1135653	0	True				
ANR	1136244	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1135653	0					
ANR	1136245	Callee	EMIT_MOV		1135653	0					
ANR	1136246	Identifier	EMIT_MOV		1135653	0					
ANR	1136247	ArgumentList	compiler		1135653	1					
ANR	1136248	Argument	compiler		1135653	0					
ANR	1136249	Identifier	compiler		1135653	0					
ANR	1136250	Argument	TMP_REG1		1135653	1					
ANR	1136251	Identifier	TMP_REG1		1135653	0					
ANR	1136252	Argument	0		1135653	2					
ANR	1136253	PrimaryExpression	0		1135653	0					
ANR	1136254	Argument	src1		1135653	3					
ANR	1136255	Identifier	src1		1135653	0					
ANR	1136256	Argument	src1w		1135653	4					
ANR	1136257	Identifier	src1w		1135653	0					
ANR	1136258	IfStatement	if ( src2 & SLJIT_IMM )		1135653	1					
ANR	1136259	Condition	src2 & SLJIT_IMM	1559:6:43224:43239	1135653	0	True				
ANR	1136260	BitAndExpression	src2 & SLJIT_IMM		1135653	0		&			
ANR	1136261	Identifier	src2		1135653	0					
ANR	1136262	Identifier	SLJIT_IMM		1135653	1					
ANR	1136263	CompoundStatement		98:24:2612:2612	1135653	1					
ANR	1136264	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1560:3:43247:43292	1135653	0	True				
ANR	1136265	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1135653	0					
ANR	1136266	Callee	BINARY_IMM		1135653	0					
ANR	1136267	Identifier	BINARY_IMM		1135653	0					
ANR	1136268	ArgumentList	op_imm		1135653	1					
ANR	1136269	Argument	op_imm		1135653	0					
ANR	1136270	Identifier	op_imm		1135653	0					
ANR	1136271	Argument	op_mr		1135653	1					
ANR	1136272	Identifier	op_mr		1135653	0					
ANR	1136273	Argument	src2w		1135653	2					
ANR	1136274	Identifier	src2w		1135653	0					
ANR	1136275	Argument	TMP_REG1		1135653	3					
ANR	1136276	Identifier	TMP_REG1		1135653	0					
ANR	1136277	Argument	0		1135653	4					
ANR	1136278	PrimaryExpression	0		1135653	0					
ANR	1136279	ElseStatement	else		1135653	0					
ANR	1136280	CompoundStatement		101:7:2675:2675	1135653	0					
ANR	1136281	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1563:3:43310:43376	1135653	0	True				
ANR	1136282	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1135653	0		=			
ANR	1136283	Identifier	inst		1135653	0					
ANR	1136284	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1135653	1					
ANR	1136285	Callee	emit_x86_instruction		1135653	0					
ANR	1136286	Identifier	emit_x86_instruction		1135653	0					
ANR	1136287	ArgumentList	compiler		1135653	1					
ANR	1136288	Argument	compiler		1135653	0					
ANR	1136289	Identifier	compiler		1135653	0					
ANR	1136290	Argument	1		1135653	1					
ANR	1136291	PrimaryExpression	1		1135653	0					
ANR	1136292	Argument	TMP_REG1		1135653	2					
ANR	1136293	Identifier	TMP_REG1		1135653	0					
ANR	1136294	Argument	0		1135653	3					
ANR	1136295	PrimaryExpression	0		1135653	0					
ANR	1136296	Argument	src2		1135653	4					
ANR	1136297	Identifier	src2		1135653	0					
ANR	1136298	Argument	src2w		1135653	5					
ANR	1136299	Identifier	src2w		1135653	0					
ANR	1136300	ExpressionStatement	FAIL_IF ( ! inst )	1564:3:43381:43395	1135653	1	True				
ANR	1136301	CallExpression	FAIL_IF ( ! inst )		1135653	0					
ANR	1136302	Callee	FAIL_IF		1135653	0					
ANR	1136303	Identifier	FAIL_IF		1135653	0					
ANR	1136304	ArgumentList	! inst		1135653	1					
ANR	1136305	Argument	! inst		1135653	0					
ANR	1136306	UnaryOperationExpression	! inst		1135653	0					
ANR	1136307	UnaryOperator	!		1135653	0					
ANR	1136308	Identifier	inst		1135653	1					
ANR	1136309	ExpressionStatement	* inst = op_rm	1565:3:43400:43413	1135653	2	True				
ANR	1136310	AssignmentExpression	* inst = op_rm		1135653	0		=			
ANR	1136311	UnaryOperationExpression	* inst		1135653	0					
ANR	1136312	UnaryOperator	*		1135653	0					
ANR	1136313	Identifier	inst		1135653	1					
ANR	1136314	Identifier	op_rm		1135653	1					
ANR	1136315	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1567:2:43421:43463	1135653	2	True				
ANR	1136316	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1135653	0					
ANR	1136317	Callee	EMIT_MOV		1135653	0					
ANR	1136318	Identifier	EMIT_MOV		1135653	0					
ANR	1136319	ArgumentList	compiler		1135653	1					
ANR	1136320	Argument	compiler		1135653	0					
ANR	1136321	Identifier	compiler		1135653	0					
ANR	1136322	Argument	dst		1135653	1					
ANR	1136323	Identifier	dst		1135653	0					
ANR	1136324	Argument	dstw		1135653	2					
ANR	1136325	Identifier	dstw		1135653	0					
ANR	1136326	Argument	TMP_REG1		1135653	3					
ANR	1136327	Identifier	TMP_REG1		1135653	0					
ANR	1136328	Argument	0		1135653	4					
ANR	1136329	PrimaryExpression	0		1135653	0					
ANR	1136330	ReturnStatement	return SLJIT_SUCCESS ;	1570:1:43470:43490	1135653	5	True				
ANR	1136331	Identifier	SLJIT_SUCCESS		1135653	0					
ANR	1136332	ReturnType	static sljit_si		1135653	1					
ANR	1136333	Identifier	emit_cum_binary		1135653	2					
ANR	1136334	ParameterList	"struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1135653	3					
ANR	1136335	Parameter	struct sljit_compiler * compiler	1457:32:40431:40461	1135653	0	True				
ANR	1136336	ParameterType	struct sljit_compiler *		1135653	0					
ANR	1136337	Identifier	compiler		1135653	1					
ANR	1136338	Parameter	sljit_ub op_rm	1458:1:40465:40478	1135653	1	True				
ANR	1136339	ParameterType	sljit_ub		1135653	0					
ANR	1136340	Identifier	op_rm		1135653	1					
ANR	1136341	Parameter	sljit_ub op_mr	1458:17:40481:40494	1135653	2	True				
ANR	1136342	ParameterType	sljit_ub		1135653	0					
ANR	1136343	Identifier	op_mr		1135653	1					
ANR	1136344	Parameter	sljit_ub op_imm	1458:33:40497:40511	1135653	3	True				
ANR	1136345	ParameterType	sljit_ub		1135653	0					
ANR	1136346	Identifier	op_imm		1135653	1					
ANR	1136347	Parameter	sljit_ub op_eax_imm	1458:50:40514:40532	1135653	4	True				
ANR	1136348	ParameterType	sljit_ub		1135653	0					
ANR	1136349	Identifier	op_eax_imm		1135653	1					
ANR	1136350	Parameter	sljit_si dst	1459:1:40536:40547	1135653	5	True				
ANR	1136351	ParameterType	sljit_si		1135653	0					
ANR	1136352	Identifier	dst		1135653	1					
ANR	1136353	Parameter	sljit_sw dstw	1459:15:40550:40562	1135653	6	True				
ANR	1136354	ParameterType	sljit_sw		1135653	0					
ANR	1136355	Identifier	dstw		1135653	1					
ANR	1136356	Parameter	sljit_si src1	1460:1:40566:40578	1135653	7	True				
ANR	1136357	ParameterType	sljit_si		1135653	0					
ANR	1136358	Identifier	src1		1135653	1					
ANR	1136359	Parameter	sljit_sw src1w	1460:16:40581:40594	1135653	8	True				
ANR	1136360	ParameterType	sljit_sw		1135653	0					
ANR	1136361	Identifier	src1w		1135653	1					
ANR	1136362	Parameter	sljit_si src2	1461:1:40598:40610	1135653	9	True				
ANR	1136363	ParameterType	sljit_si		1135653	0					
ANR	1136364	Identifier	src2		1135653	1					
ANR	1136365	Parameter	sljit_sw src2w	1461:16:40613:40626	1135653	10	True				
ANR	1136366	ParameterType	sljit_sw		1135653	0					
ANR	1136367	Identifier	src2w		1135653	1					
ANR	1136368	CFGEntryNode	ENTRY		1135653		True				
ANR	1136369	CFGExitNode	EXIT		1135653		True				
ANR	1136370	Symbol	src2w		1135653						
ANR	1136371	Symbol	TMP_REG1		1135653						
ANR	1136372	Symbol	emit_x86_instruction		1135653						
ANR	1136373	Symbol	src1w		1135653						
ANR	1136374	Symbol	* inst		1135653						
ANR	1136375	Symbol	FAST_IS_REG		1135653						
ANR	1136376	Symbol	dst		1135653						
ANR	1136377	Symbol	op_rm		1135653						
ANR	1136378	Symbol	SLJIT_SUCCESS		1135653						
ANR	1136379	Symbol	op_imm		1135653						
ANR	1136380	Symbol	* compiler		1135653						
ANR	1136381	Symbol	SLJIT_R0		1135653						
ANR	1136382	Symbol	SLJIT_IMM		1135653						
ANR	1136383	Symbol	op_mr		1135653						
ANR	1136384	Symbol	op_eax_imm		1135653						
ANR	1136385	Symbol	SLJIT_UNUSED		1135653						
ANR	1136386	Symbol	inst		1135653						
ANR	1136387	Symbol	src1		1135653						
ANR	1136388	Symbol	compiler -> mode32		1135653						
ANR	1136389	Symbol	IS_HALFWORD		1135653						
ANR	1136390	Symbol	src2		1135653						
ANR	1136391	Symbol	compiler		1135653						
ANR	1136392	Symbol	dstw		1135653						
ANR	1136393	Function	emit_non_cum_binary	1573:0:43495:45626							
ANR	1136394	FunctionDef	"emit_non_cum_binary (struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1136393	0					
ANR	1136395	CompoundStatement		1578:0:43729:45626	1136393	0					
ANR	1136396	IdentifierDeclStatement	sljit_ub * inst ;	1579:1:43732:43746	1136393	0	True				
ANR	1136397	IdentifierDecl	* inst		1136393	0					
ANR	1136398	IdentifierDeclType	sljit_ub *		1136393	0					
ANR	1136399	Identifier	inst		1136393	1					
ANR	1136400	IfStatement	if ( dst == SLJIT_UNUSED )		1136393	1					
ANR	1136401	Condition	dst == SLJIT_UNUSED	1581:5:43754:43772	1136393	0	True				
ANR	1136402	EqualityExpression	dst == SLJIT_UNUSED		1136393	0		==			
ANR	1136403	Identifier	dst		1136393	0					
ANR	1136404	Identifier	SLJIT_UNUSED		1136393	1					
ANR	1136405	CompoundStatement		4:26:45:45	1136393	1					
ANR	1136406	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1582:2:43779:43823	1136393	0	True				
ANR	1136407	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1136393	0					
ANR	1136408	Callee	EMIT_MOV		1136393	0					
ANR	1136409	Identifier	EMIT_MOV		1136393	0					
ANR	1136410	ArgumentList	compiler		1136393	1					
ANR	1136411	Argument	compiler		1136393	0					
ANR	1136412	Identifier	compiler		1136393	0					
ANR	1136413	Argument	TMP_REG1		1136393	1					
ANR	1136414	Identifier	TMP_REG1		1136393	0					
ANR	1136415	Argument	0		1136393	2					
ANR	1136416	PrimaryExpression	0		1136393	0					
ANR	1136417	Argument	src1		1136393	3					
ANR	1136418	Identifier	src1		1136393	0					
ANR	1136419	Argument	src1w		1136393	4					
ANR	1136420	Identifier	src1w		1136393	0					
ANR	1136421	IfStatement	if ( src2 & SLJIT_IMM )		1136393	1					
ANR	1136422	Condition	src2 & SLJIT_IMM	1583:6:43831:43846	1136393	0	True				
ANR	1136423	BitAndExpression	src2 & SLJIT_IMM		1136393	0		&			
ANR	1136424	Identifier	src2		1136393	0					
ANR	1136425	Identifier	SLJIT_IMM		1136393	1					
ANR	1136426	CompoundStatement		6:24:119:119	1136393	1					
ANR	1136427	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1584:3:43854:43899	1136393	0	True				
ANR	1136428	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1136393	0					
ANR	1136429	Callee	BINARY_IMM		1136393	0					
ANR	1136430	Identifier	BINARY_IMM		1136393	0					
ANR	1136431	ArgumentList	op_imm		1136393	1					
ANR	1136432	Argument	op_imm		1136393	0					
ANR	1136433	Identifier	op_imm		1136393	0					
ANR	1136434	Argument	op_mr		1136393	1					
ANR	1136435	Identifier	op_mr		1136393	0					
ANR	1136436	Argument	src2w		1136393	2					
ANR	1136437	Identifier	src2w		1136393	0					
ANR	1136438	Argument	TMP_REG1		1136393	3					
ANR	1136439	Identifier	TMP_REG1		1136393	0					
ANR	1136440	Argument	0		1136393	4					
ANR	1136441	PrimaryExpression	0		1136393	0					
ANR	1136442	ElseStatement	else		1136393	0					
ANR	1136443	CompoundStatement		9:7:182:182	1136393	0					
ANR	1136444	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1587:3:43917:43983	1136393	0	True				
ANR	1136445	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1136393	0		=			
ANR	1136446	Identifier	inst		1136393	0					
ANR	1136447	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1136393	1					
ANR	1136448	Callee	emit_x86_instruction		1136393	0					
ANR	1136449	Identifier	emit_x86_instruction		1136393	0					
ANR	1136450	ArgumentList	compiler		1136393	1					
ANR	1136451	Argument	compiler		1136393	0					
ANR	1136452	Identifier	compiler		1136393	0					
ANR	1136453	Argument	1		1136393	1					
ANR	1136454	PrimaryExpression	1		1136393	0					
ANR	1136455	Argument	TMP_REG1		1136393	2					
ANR	1136456	Identifier	TMP_REG1		1136393	0					
ANR	1136457	Argument	0		1136393	3					
ANR	1136458	PrimaryExpression	0		1136393	0					
ANR	1136459	Argument	src2		1136393	4					
ANR	1136460	Identifier	src2		1136393	0					
ANR	1136461	Argument	src2w		1136393	5					
ANR	1136462	Identifier	src2w		1136393	0					
ANR	1136463	ExpressionStatement	FAIL_IF ( ! inst )	1588:3:43988:44002	1136393	1	True				
ANR	1136464	CallExpression	FAIL_IF ( ! inst )		1136393	0					
ANR	1136465	Callee	FAIL_IF		1136393	0					
ANR	1136466	Identifier	FAIL_IF		1136393	0					
ANR	1136467	ArgumentList	! inst		1136393	1					
ANR	1136468	Argument	! inst		1136393	0					
ANR	1136469	UnaryOperationExpression	! inst		1136393	0					
ANR	1136470	UnaryOperator	!		1136393	0					
ANR	1136471	Identifier	inst		1136393	1					
ANR	1136472	ExpressionStatement	* inst = op_rm	1589:3:44007:44020	1136393	2	True				
ANR	1136473	AssignmentExpression	* inst = op_rm		1136393	0		=			
ANR	1136474	UnaryOperationExpression	* inst		1136393	0					
ANR	1136475	UnaryOperator	*		1136393	0					
ANR	1136476	Identifier	inst		1136393	1					
ANR	1136477	Identifier	op_rm		1136393	1					
ANR	1136478	ReturnStatement	return SLJIT_SUCCESS ;	1591:2:44028:44048	1136393	2	True				
ANR	1136479	Identifier	SLJIT_SUCCESS		1136393	0					
ANR	1136480	IfStatement	if ( dst == src1 && dstw == src1w )		1136393	2					
ANR	1136481	Condition	dst == src1 && dstw == src1w	1594:5:44059:44086	1136393	0	True				
ANR	1136482	AndExpression	dst == src1 && dstw == src1w		1136393	0		&&			
ANR	1136483	EqualityExpression	dst == src1		1136393	0		==			
ANR	1136484	Identifier	dst		1136393	0					
ANR	1136485	Identifier	src1		1136393	1					
ANR	1136486	EqualityExpression	dstw == src1w		1136393	1		==			
ANR	1136487	Identifier	dstw		1136393	0					
ANR	1136488	Identifier	src1w		1136393	1					
ANR	1136489	CompoundStatement		17:35:359:359	1136393	1					
ANR	1136490	IfStatement	if ( src2 & SLJIT_IMM )		1136393	0					
ANR	1136491	Condition	src2 & SLJIT_IMM	1595:6:44097:44112	1136393	0	True				
ANR	1136492	BitAndExpression	src2 & SLJIT_IMM		1136393	0		&			
ANR	1136493	Identifier	src2		1136393	0					
ANR	1136494	Identifier	SLJIT_IMM		1136393	1					
ANR	1136495	CompoundStatement		18:24:385:385	1136393	1					
ANR	1136496	IfStatement	if ( ( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1136393	0					
ANR	1136497	Condition	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1597:7:44181:44274	1136393	0	True				
ANR	1136498	AndExpression	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1136393	0		&&			
ANR	1136499	EqualityExpression	dst == SLJIT_R0		1136393	0		==			
ANR	1136500	Identifier	dst		1136393	0					
ANR	1136501	Identifier	SLJIT_R0		1136393	1					
ANR	1136502	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1136393	1		&&			
ANR	1136503	OrExpression	src2w > 127 || src2w < - 128		1136393	0		||			
ANR	1136504	RelationalExpression	src2w > 127		1136393	0		>			
ANR	1136505	Identifier	src2w		1136393	0					
ANR	1136506	PrimaryExpression	127		1136393	1					
ANR	1136507	RelationalExpression	src2w < - 128		1136393	1		<			
ANR	1136508	Identifier	src2w		1136393	0					
ANR	1136509	UnaryOperationExpression	- 128		1136393	1					
ANR	1136510	UnaryOperator	-		1136393	0					
ANR	1136511	PrimaryExpression	128		1136393	1					
ANR	1136512	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1136393	1		||			
ANR	1136513	PtrMemberAccess	compiler -> mode32		1136393	0					
ANR	1136514	Identifier	compiler		1136393	0					
ANR	1136515	Identifier	mode32		1136393	1					
ANR	1136516	CallExpression	IS_HALFWORD ( src2w )		1136393	1					
ANR	1136517	Callee	IS_HALFWORD		1136393	0					
ANR	1136518	Identifier	IS_HALFWORD		1136393	0					
ANR	1136519	ArgumentList	src2w		1136393	1					
ANR	1136520	Argument	src2w		1136393	0					
ANR	1136521	Identifier	src2w		1136393	0					
ANR	1136522	CompoundStatement		20:103:547:547	1136393	1					
ANR	1136523	ExpressionStatement	"BINARY_EAX_IMM ( op_eax_imm , src2w )"	1601:4:44357:44390	1136393	0	True				
ANR	1136524	CallExpression	"BINARY_EAX_IMM ( op_eax_imm , src2w )"		1136393	0					
ANR	1136525	Callee	BINARY_EAX_IMM		1136393	0					
ANR	1136526	Identifier	BINARY_EAX_IMM		1136393	0					
ANR	1136527	ArgumentList	op_eax_imm		1136393	1					
ANR	1136528	Argument	op_eax_imm		1136393	0					
ANR	1136529	Identifier	op_eax_imm		1136393	0					
ANR	1136530	Argument	src2w		1136393	1					
ANR	1136531	Identifier	src2w		1136393	0					
ANR	1136532	ElseStatement	else		1136393	0					
ANR	1136533	CompoundStatement		26:8:675:675	1136393	0					
ANR	1136534	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"	1604:4:44411:44454	1136393	0	True				
ANR	1136535	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"		1136393	0					
ANR	1136536	Callee	BINARY_IMM		1136393	0					
ANR	1136537	Identifier	BINARY_IMM		1136393	0					
ANR	1136538	ArgumentList	op_imm		1136393	1					
ANR	1136539	Argument	op_imm		1136393	0					
ANR	1136540	Identifier	op_imm		1136393	0					
ANR	1136541	Argument	op_mr		1136393	1					
ANR	1136542	Identifier	op_mr		1136393	0					
ANR	1136543	Argument	src2w		1136393	2					
ANR	1136544	Identifier	src2w		1136393	0					
ANR	1136545	Argument	dst		1136393	3					
ANR	1136546	Identifier	dst		1136393	0					
ANR	1136547	Argument	dstw		1136393	4					
ANR	1136548	Identifier	dstw		1136393	0					
ANR	1136549	ElseStatement	else		1136393	0					
ANR	1136550	IfStatement	if ( FAST_IS_REG ( dst ) )		1136393	0					
ANR	1136551	Condition	FAST_IS_REG ( dst )	1607:11:44476:44491	1136393	0	True				
ANR	1136552	CallExpression	FAST_IS_REG ( dst )		1136393	0					
ANR	1136553	Callee	FAST_IS_REG		1136393	0					
ANR	1136554	Identifier	FAST_IS_REG		1136393	0					
ANR	1136555	ArgumentList	dst		1136393	1					
ANR	1136556	Argument	dst		1136393	0					
ANR	1136557	Identifier	dst		1136393	0					
ANR	1136558	CompoundStatement		30:29:764:764	1136393	1					
ANR	1136559	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"	1608:3:44499:44563	1136393	0	True				
ANR	1136560	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1136393	0		=			
ANR	1136561	Identifier	inst		1136393	0					
ANR	1136562	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1136393	1					
ANR	1136563	Callee	emit_x86_instruction		1136393	0					
ANR	1136564	Identifier	emit_x86_instruction		1136393	0					
ANR	1136565	ArgumentList	compiler		1136393	1					
ANR	1136566	Argument	compiler		1136393	0					
ANR	1136567	Identifier	compiler		1136393	0					
ANR	1136568	Argument	1		1136393	1					
ANR	1136569	PrimaryExpression	1		1136393	0					
ANR	1136570	Argument	dst		1136393	2					
ANR	1136571	Identifier	dst		1136393	0					
ANR	1136572	Argument	dstw		1136393	3					
ANR	1136573	Identifier	dstw		1136393	0					
ANR	1136574	Argument	src2		1136393	4					
ANR	1136575	Identifier	src2		1136393	0					
ANR	1136576	Argument	src2w		1136393	5					
ANR	1136577	Identifier	src2w		1136393	0					
ANR	1136578	ExpressionStatement	FAIL_IF ( ! inst )	1609:3:44568:44582	1136393	1	True				
ANR	1136579	CallExpression	FAIL_IF ( ! inst )		1136393	0					
ANR	1136580	Callee	FAIL_IF		1136393	0					
ANR	1136581	Identifier	FAIL_IF		1136393	0					
ANR	1136582	ArgumentList	! inst		1136393	1					
ANR	1136583	Argument	! inst		1136393	0					
ANR	1136584	UnaryOperationExpression	! inst		1136393	0					
ANR	1136585	UnaryOperator	!		1136393	0					
ANR	1136586	Identifier	inst		1136393	1					
ANR	1136587	ExpressionStatement	* inst = op_rm	1610:3:44587:44600	1136393	2	True				
ANR	1136588	AssignmentExpression	* inst = op_rm		1136393	0		=			
ANR	1136589	UnaryOperationExpression	* inst		1136393	0					
ANR	1136590	UnaryOperator	*		1136393	0					
ANR	1136591	Identifier	inst		1136393	1					
ANR	1136592	Identifier	op_rm		1136393	1					
ANR	1136593	ElseStatement	else		1136393	0					
ANR	1136594	IfStatement	if ( FAST_IS_REG ( src2 ) )		1136393	0					
ANR	1136595	Condition	FAST_IS_REG ( src2 )	1612:11:44617:44633	1136393	0	True				
ANR	1136596	CallExpression	FAST_IS_REG ( src2 )		1136393	0					
ANR	1136597	Callee	FAST_IS_REG		1136393	0					
ANR	1136598	Identifier	FAST_IS_REG		1136393	0					
ANR	1136599	ArgumentList	src2		1136393	1					
ANR	1136600	Argument	src2		1136393	0					
ANR	1136601	Identifier	src2		1136393	0					
ANR	1136602	CompoundStatement		35:30:906:906	1136393	1					
ANR	1136603	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"	1613:3:44641:44705	1136393	0	True				
ANR	1136604	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1136393	0		=			
ANR	1136605	Identifier	inst		1136393	0					
ANR	1136606	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1136393	1					
ANR	1136607	Callee	emit_x86_instruction		1136393	0					
ANR	1136608	Identifier	emit_x86_instruction		1136393	0					
ANR	1136609	ArgumentList	compiler		1136393	1					
ANR	1136610	Argument	compiler		1136393	0					
ANR	1136611	Identifier	compiler		1136393	0					
ANR	1136612	Argument	1		1136393	1					
ANR	1136613	PrimaryExpression	1		1136393	0					
ANR	1136614	Argument	src2		1136393	2					
ANR	1136615	Identifier	src2		1136393	0					
ANR	1136616	Argument	src2w		1136393	3					
ANR	1136617	Identifier	src2w		1136393	0					
ANR	1136618	Argument	dst		1136393	4					
ANR	1136619	Identifier	dst		1136393	0					
ANR	1136620	Argument	dstw		1136393	5					
ANR	1136621	Identifier	dstw		1136393	0					
ANR	1136622	ExpressionStatement	FAIL_IF ( ! inst )	1614:3:44710:44724	1136393	1	True				
ANR	1136623	CallExpression	FAIL_IF ( ! inst )		1136393	0					
ANR	1136624	Callee	FAIL_IF		1136393	0					
ANR	1136625	Identifier	FAIL_IF		1136393	0					
ANR	1136626	ArgumentList	! inst		1136393	1					
ANR	1136627	Argument	! inst		1136393	0					
ANR	1136628	UnaryOperationExpression	! inst		1136393	0					
ANR	1136629	UnaryOperator	!		1136393	0					
ANR	1136630	Identifier	inst		1136393	1					
ANR	1136631	ExpressionStatement	* inst = op_mr	1615:3:44729:44742	1136393	2	True				
ANR	1136632	AssignmentExpression	* inst = op_mr		1136393	0		=			
ANR	1136633	UnaryOperationExpression	* inst		1136393	0					
ANR	1136634	UnaryOperator	*		1136393	0					
ANR	1136635	Identifier	inst		1136393	1					
ANR	1136636	Identifier	op_mr		1136393	1					
ANR	1136637	ElseStatement	else		1136393	0					
ANR	1136638	CompoundStatement		40:7:1025:1025	1136393	0					
ANR	1136639	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"	1618:3:44760:44804	1136393	0	True				
ANR	1136640	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"		1136393	0					
ANR	1136641	Callee	EMIT_MOV		1136393	0					
ANR	1136642	Identifier	EMIT_MOV		1136393	0					
ANR	1136643	ArgumentList	compiler		1136393	1					
ANR	1136644	Argument	compiler		1136393	0					
ANR	1136645	Identifier	compiler		1136393	0					
ANR	1136646	Argument	TMP_REG1		1136393	1					
ANR	1136647	Identifier	TMP_REG1		1136393	0					
ANR	1136648	Argument	0		1136393	2					
ANR	1136649	PrimaryExpression	0		1136393	0					
ANR	1136650	Argument	src2		1136393	3					
ANR	1136651	Identifier	src2		1136393	0					
ANR	1136652	Argument	src2w		1136393	4					
ANR	1136653	Identifier	src2w		1136393	0					
ANR	1136654	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	1619:3:44809:44873	1136393	1	True				
ANR	1136655	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1136393	0		=			
ANR	1136656	Identifier	inst		1136393	0					
ANR	1136657	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1136393	1					
ANR	1136658	Callee	emit_x86_instruction		1136393	0					
ANR	1136659	Identifier	emit_x86_instruction		1136393	0					
ANR	1136660	ArgumentList	compiler		1136393	1					
ANR	1136661	Argument	compiler		1136393	0					
ANR	1136662	Identifier	compiler		1136393	0					
ANR	1136663	Argument	1		1136393	1					
ANR	1136664	PrimaryExpression	1		1136393	0					
ANR	1136665	Argument	TMP_REG1		1136393	2					
ANR	1136666	Identifier	TMP_REG1		1136393	0					
ANR	1136667	Argument	0		1136393	3					
ANR	1136668	PrimaryExpression	0		1136393	0					
ANR	1136669	Argument	dst		1136393	4					
ANR	1136670	Identifier	dst		1136393	0					
ANR	1136671	Argument	dstw		1136393	5					
ANR	1136672	Identifier	dstw		1136393	0					
ANR	1136673	ExpressionStatement	FAIL_IF ( ! inst )	1620:3:44878:44892	1136393	2	True				
ANR	1136674	CallExpression	FAIL_IF ( ! inst )		1136393	0					
ANR	1136675	Callee	FAIL_IF		1136393	0					
ANR	1136676	Identifier	FAIL_IF		1136393	0					
ANR	1136677	ArgumentList	! inst		1136393	1					
ANR	1136678	Argument	! inst		1136393	0					
ANR	1136679	UnaryOperationExpression	! inst		1136393	0					
ANR	1136680	UnaryOperator	!		1136393	0					
ANR	1136681	Identifier	inst		1136393	1					
ANR	1136682	ExpressionStatement	* inst = op_mr	1621:3:44897:44910	1136393	3	True				
ANR	1136683	AssignmentExpression	* inst = op_mr		1136393	0		=			
ANR	1136684	UnaryOperationExpression	* inst		1136393	0					
ANR	1136685	UnaryOperator	*		1136393	0					
ANR	1136686	Identifier	inst		1136393	1					
ANR	1136687	Identifier	op_mr		1136393	1					
ANR	1136688	ReturnStatement	return SLJIT_SUCCESS ;	1623:2:44918:44938	1136393	1	True				
ANR	1136689	Identifier	SLJIT_SUCCESS		1136393	0					
ANR	1136690	IfStatement	if ( FAST_IS_REG ( dst ) && dst != src2 )		1136393	3					
ANR	1136691	Condition	FAST_IS_REG ( dst ) && dst != src2	1627:5:44973:45003	1136393	0	True				
ANR	1136692	AndExpression	FAST_IS_REG ( dst ) && dst != src2		1136393	0		&&			
ANR	1136693	CallExpression	FAST_IS_REG ( dst )		1136393	0					
ANR	1136694	Callee	FAST_IS_REG		1136393	0					
ANR	1136695	Identifier	FAST_IS_REG		1136393	0					
ANR	1136696	ArgumentList	dst		1136393	1					
ANR	1136697	Argument	dst		1136393	0					
ANR	1136698	Identifier	dst		1136393	0					
ANR	1136699	EqualityExpression	dst != src2		1136393	1		!=			
ANR	1136700	Identifier	dst		1136393	0					
ANR	1136701	Identifier	src2		1136393	1					
ANR	1136702	CompoundStatement		50:38:1276:1276	1136393	1					
ANR	1136703	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	1628:2:45010:45049	1136393	0	True				
ANR	1136704	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1136393	0					
ANR	1136705	Callee	EMIT_MOV		1136393	0					
ANR	1136706	Identifier	EMIT_MOV		1136393	0					
ANR	1136707	ArgumentList	compiler		1136393	1					
ANR	1136708	Argument	compiler		1136393	0					
ANR	1136709	Identifier	compiler		1136393	0					
ANR	1136710	Argument	dst		1136393	1					
ANR	1136711	Identifier	dst		1136393	0					
ANR	1136712	Argument	0		1136393	2					
ANR	1136713	PrimaryExpression	0		1136393	0					
ANR	1136714	Argument	src1		1136393	3					
ANR	1136715	Identifier	src1		1136393	0					
ANR	1136716	Argument	src1w		1136393	4					
ANR	1136717	Identifier	src1w		1136393	0					
ANR	1136718	IfStatement	if ( src2 & SLJIT_IMM )		1136393	1					
ANR	1136719	Condition	src2 & SLJIT_IMM	1629:6:45057:45072	1136393	0	True				
ANR	1136720	BitAndExpression	src2 & SLJIT_IMM		1136393	0		&			
ANR	1136721	Identifier	src2		1136393	0					
ANR	1136722	Identifier	SLJIT_IMM		1136393	1					
ANR	1136723	CompoundStatement		52:24:1345:1345	1136393	1					
ANR	1136724	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"	1630:3:45080:45120	1136393	0	True				
ANR	1136725	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"		1136393	0					
ANR	1136726	Callee	BINARY_IMM		1136393	0					
ANR	1136727	Identifier	BINARY_IMM		1136393	0					
ANR	1136728	ArgumentList	op_imm		1136393	1					
ANR	1136729	Argument	op_imm		1136393	0					
ANR	1136730	Identifier	op_imm		1136393	0					
ANR	1136731	Argument	op_mr		1136393	1					
ANR	1136732	Identifier	op_mr		1136393	0					
ANR	1136733	Argument	src2w		1136393	2					
ANR	1136734	Identifier	src2w		1136393	0					
ANR	1136735	Argument	dst		1136393	3					
ANR	1136736	Identifier	dst		1136393	0					
ANR	1136737	Argument	0		1136393	4					
ANR	1136738	PrimaryExpression	0		1136393	0					
ANR	1136739	ElseStatement	else		1136393	0					
ANR	1136740	CompoundStatement		55:7:1403:1403	1136393	0					
ANR	1136741	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"	1633:3:45138:45199	1136393	0	True				
ANR	1136742	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1136393	0		=			
ANR	1136743	Identifier	inst		1136393	0					
ANR	1136744	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1136393	1					
ANR	1136745	Callee	emit_x86_instruction		1136393	0					
ANR	1136746	Identifier	emit_x86_instruction		1136393	0					
ANR	1136747	ArgumentList	compiler		1136393	1					
ANR	1136748	Argument	compiler		1136393	0					
ANR	1136749	Identifier	compiler		1136393	0					
ANR	1136750	Argument	1		1136393	1					
ANR	1136751	PrimaryExpression	1		1136393	0					
ANR	1136752	Argument	dst		1136393	2					
ANR	1136753	Identifier	dst		1136393	0					
ANR	1136754	Argument	0		1136393	3					
ANR	1136755	PrimaryExpression	0		1136393	0					
ANR	1136756	Argument	src2		1136393	4					
ANR	1136757	Identifier	src2		1136393	0					
ANR	1136758	Argument	src2w		1136393	5					
ANR	1136759	Identifier	src2w		1136393	0					
ANR	1136760	ExpressionStatement	FAIL_IF ( ! inst )	1634:3:45204:45218	1136393	1	True				
ANR	1136761	CallExpression	FAIL_IF ( ! inst )		1136393	0					
ANR	1136762	Callee	FAIL_IF		1136393	0					
ANR	1136763	Identifier	FAIL_IF		1136393	0					
ANR	1136764	ArgumentList	! inst		1136393	1					
ANR	1136765	Argument	! inst		1136393	0					
ANR	1136766	UnaryOperationExpression	! inst		1136393	0					
ANR	1136767	UnaryOperator	!		1136393	0					
ANR	1136768	Identifier	inst		1136393	1					
ANR	1136769	ExpressionStatement	* inst = op_rm	1635:3:45223:45236	1136393	2	True				
ANR	1136770	AssignmentExpression	* inst = op_rm		1136393	0		=			
ANR	1136771	UnaryOperationExpression	* inst		1136393	0					
ANR	1136772	UnaryOperator	*		1136393	0					
ANR	1136773	Identifier	inst		1136393	1					
ANR	1136774	Identifier	op_rm		1136393	1					
ANR	1136775	ElseStatement	else		1136393	0					
ANR	1136776	CompoundStatement		61:6:1521:1521	1136393	0					
ANR	1136777	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1640:2:45306:45350	1136393	0	True				
ANR	1136778	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1136393	0					
ANR	1136779	Callee	EMIT_MOV		1136393	0					
ANR	1136780	Identifier	EMIT_MOV		1136393	0					
ANR	1136781	ArgumentList	compiler		1136393	1					
ANR	1136782	Argument	compiler		1136393	0					
ANR	1136783	Identifier	compiler		1136393	0					
ANR	1136784	Argument	TMP_REG1		1136393	1					
ANR	1136785	Identifier	TMP_REG1		1136393	0					
ANR	1136786	Argument	0		1136393	2					
ANR	1136787	PrimaryExpression	0		1136393	0					
ANR	1136788	Argument	src1		1136393	3					
ANR	1136789	Identifier	src1		1136393	0					
ANR	1136790	Argument	src1w		1136393	4					
ANR	1136791	Identifier	src1w		1136393	0					
ANR	1136792	IfStatement	if ( src2 & SLJIT_IMM )		1136393	1					
ANR	1136793	Condition	src2 & SLJIT_IMM	1641:6:45358:45373	1136393	0	True				
ANR	1136794	BitAndExpression	src2 & SLJIT_IMM		1136393	0		&			
ANR	1136795	Identifier	src2		1136393	0					
ANR	1136796	Identifier	SLJIT_IMM		1136393	1					
ANR	1136797	CompoundStatement		64:24:1646:1646	1136393	1					
ANR	1136798	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1642:3:45381:45426	1136393	0	True				
ANR	1136799	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1136393	0					
ANR	1136800	Callee	BINARY_IMM		1136393	0					
ANR	1136801	Identifier	BINARY_IMM		1136393	0					
ANR	1136802	ArgumentList	op_imm		1136393	1					
ANR	1136803	Argument	op_imm		1136393	0					
ANR	1136804	Identifier	op_imm		1136393	0					
ANR	1136805	Argument	op_mr		1136393	1					
ANR	1136806	Identifier	op_mr		1136393	0					
ANR	1136807	Argument	src2w		1136393	2					
ANR	1136808	Identifier	src2w		1136393	0					
ANR	1136809	Argument	TMP_REG1		1136393	3					
ANR	1136810	Identifier	TMP_REG1		1136393	0					
ANR	1136811	Argument	0		1136393	4					
ANR	1136812	PrimaryExpression	0		1136393	0					
ANR	1136813	ElseStatement	else		1136393	0					
ANR	1136814	CompoundStatement		67:7:1709:1709	1136393	0					
ANR	1136815	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1645:3:45444:45510	1136393	0	True				
ANR	1136816	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1136393	0		=			
ANR	1136817	Identifier	inst		1136393	0					
ANR	1136818	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1136393	1					
ANR	1136819	Callee	emit_x86_instruction		1136393	0					
ANR	1136820	Identifier	emit_x86_instruction		1136393	0					
ANR	1136821	ArgumentList	compiler		1136393	1					
ANR	1136822	Argument	compiler		1136393	0					
ANR	1136823	Identifier	compiler		1136393	0					
ANR	1136824	Argument	1		1136393	1					
ANR	1136825	PrimaryExpression	1		1136393	0					
ANR	1136826	Argument	TMP_REG1		1136393	2					
ANR	1136827	Identifier	TMP_REG1		1136393	0					
ANR	1136828	Argument	0		1136393	3					
ANR	1136829	PrimaryExpression	0		1136393	0					
ANR	1136830	Argument	src2		1136393	4					
ANR	1136831	Identifier	src2		1136393	0					
ANR	1136832	Argument	src2w		1136393	5					
ANR	1136833	Identifier	src2w		1136393	0					
ANR	1136834	ExpressionStatement	FAIL_IF ( ! inst )	1646:3:45515:45529	1136393	1	True				
ANR	1136835	CallExpression	FAIL_IF ( ! inst )		1136393	0					
ANR	1136836	Callee	FAIL_IF		1136393	0					
ANR	1136837	Identifier	FAIL_IF		1136393	0					
ANR	1136838	ArgumentList	! inst		1136393	1					
ANR	1136839	Argument	! inst		1136393	0					
ANR	1136840	UnaryOperationExpression	! inst		1136393	0					
ANR	1136841	UnaryOperator	!		1136393	0					
ANR	1136842	Identifier	inst		1136393	1					
ANR	1136843	ExpressionStatement	* inst = op_rm	1647:3:45534:45547	1136393	2	True				
ANR	1136844	AssignmentExpression	* inst = op_rm		1136393	0		=			
ANR	1136845	UnaryOperationExpression	* inst		1136393	0					
ANR	1136846	UnaryOperator	*		1136393	0					
ANR	1136847	Identifier	inst		1136393	1					
ANR	1136848	Identifier	op_rm		1136393	1					
ANR	1136849	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1649:2:45555:45597	1136393	2	True				
ANR	1136850	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1136393	0					
ANR	1136851	Callee	EMIT_MOV		1136393	0					
ANR	1136852	Identifier	EMIT_MOV		1136393	0					
ANR	1136853	ArgumentList	compiler		1136393	1					
ANR	1136854	Argument	compiler		1136393	0					
ANR	1136855	Identifier	compiler		1136393	0					
ANR	1136856	Argument	dst		1136393	1					
ANR	1136857	Identifier	dst		1136393	0					
ANR	1136858	Argument	dstw		1136393	2					
ANR	1136859	Identifier	dstw		1136393	0					
ANR	1136860	Argument	TMP_REG1		1136393	3					
ANR	1136861	Identifier	TMP_REG1		1136393	0					
ANR	1136862	Argument	0		1136393	4					
ANR	1136863	PrimaryExpression	0		1136393	0					
ANR	1136864	ReturnStatement	return SLJIT_SUCCESS ;	1652:1:45604:45624	1136393	4	True				
ANR	1136865	Identifier	SLJIT_SUCCESS		1136393	0					
ANR	1136866	ReturnType	static sljit_si		1136393	1					
ANR	1136867	Identifier	emit_non_cum_binary		1136393	2					
ANR	1136868	ParameterList	"struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1136393	3					
ANR	1136869	Parameter	struct sljit_compiler * compiler	1573:36:43531:43561	1136393	0	True				
ANR	1136870	ParameterType	struct sljit_compiler *		1136393	0					
ANR	1136871	Identifier	compiler		1136393	1					
ANR	1136872	Parameter	sljit_ub op_rm	1574:1:43565:43578	1136393	1	True				
ANR	1136873	ParameterType	sljit_ub		1136393	0					
ANR	1136874	Identifier	op_rm		1136393	1					
ANR	1136875	Parameter	sljit_ub op_mr	1574:17:43581:43594	1136393	2	True				
ANR	1136876	ParameterType	sljit_ub		1136393	0					
ANR	1136877	Identifier	op_mr		1136393	1					
ANR	1136878	Parameter	sljit_ub op_imm	1574:33:43597:43611	1136393	3	True				
ANR	1136879	ParameterType	sljit_ub		1136393	0					
ANR	1136880	Identifier	op_imm		1136393	1					
ANR	1136881	Parameter	sljit_ub op_eax_imm	1574:50:43614:43632	1136393	4	True				
ANR	1136882	ParameterType	sljit_ub		1136393	0					
ANR	1136883	Identifier	op_eax_imm		1136393	1					
ANR	1136884	Parameter	sljit_si dst	1575:1:43636:43647	1136393	5	True				
ANR	1136885	ParameterType	sljit_si		1136393	0					
ANR	1136886	Identifier	dst		1136393	1					
ANR	1136887	Parameter	sljit_sw dstw	1575:15:43650:43662	1136393	6	True				
ANR	1136888	ParameterType	sljit_sw		1136393	0					
ANR	1136889	Identifier	dstw		1136393	1					
ANR	1136890	Parameter	sljit_si src1	1576:1:43666:43678	1136393	7	True				
ANR	1136891	ParameterType	sljit_si		1136393	0					
ANR	1136892	Identifier	src1		1136393	1					
ANR	1136893	Parameter	sljit_sw src1w	1576:16:43681:43694	1136393	8	True				
ANR	1136894	ParameterType	sljit_sw		1136393	0					
ANR	1136895	Identifier	src1w		1136393	1					
ANR	1136896	Parameter	sljit_si src2	1577:1:43698:43710	1136393	9	True				
ANR	1136897	ParameterType	sljit_si		1136393	0					
ANR	1136898	Identifier	src2		1136393	1					
ANR	1136899	Parameter	sljit_sw src2w	1577:16:43713:43726	1136393	10	True				
ANR	1136900	ParameterType	sljit_sw		1136393	0					
ANR	1136901	Identifier	src2w		1136393	1					
ANR	1136902	CFGEntryNode	ENTRY		1136393		True				
ANR	1136903	CFGExitNode	EXIT		1136393		True				
ANR	1136904	Symbol	src2w		1136393						
ANR	1136905	Symbol	TMP_REG1		1136393						
ANR	1136906	Symbol	emit_x86_instruction		1136393						
ANR	1136907	Symbol	src1w		1136393						
ANR	1136908	Symbol	* inst		1136393						
ANR	1136909	Symbol	FAST_IS_REG		1136393						
ANR	1136910	Symbol	dst		1136393						
ANR	1136911	Symbol	op_rm		1136393						
ANR	1136912	Symbol	SLJIT_SUCCESS		1136393						
ANR	1136913	Symbol	op_imm		1136393						
ANR	1136914	Symbol	* compiler		1136393						
ANR	1136915	Symbol	SLJIT_R0		1136393						
ANR	1136916	Symbol	SLJIT_IMM		1136393						
ANR	1136917	Symbol	op_mr		1136393						
ANR	1136918	Symbol	op_eax_imm		1136393						
ANR	1136919	Symbol	SLJIT_UNUSED		1136393						
ANR	1136920	Symbol	inst		1136393						
ANR	1136921	Symbol	src1		1136393						
ANR	1136922	Symbol	compiler -> mode32		1136393						
ANR	1136923	Symbol	IS_HALFWORD		1136393						
ANR	1136924	Symbol	src2		1136393						
ANR	1136925	Symbol	compiler		1136393						
ANR	1136926	Symbol	dstw		1136393						
ANR	1136927	Function	emit_mul	1655:0:45629:49087							
ANR	1136928	FunctionDef	"emit_mul (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1136927	0					
ANR	1136929	CompoundStatement		1659:0:45781:49087	1136927	0					
ANR	1136930	IdentifierDeclStatement	sljit_ub * inst ;	1660:1:45784:45798	1136927	0	True				
ANR	1136931	IdentifierDecl	* inst		1136927	0					
ANR	1136932	IdentifierDeclType	sljit_ub *		1136927	0					
ANR	1136933	Identifier	inst		1136927	1					
ANR	1136934	IdentifierDeclStatement	sljit_si dst_r ;	1661:1:45801:45815	1136927	1	True				
ANR	1136935	IdentifierDecl	dst_r		1136927	0					
ANR	1136936	IdentifierDeclType	sljit_si		1136927	0					
ANR	1136937	Identifier	dst_r		1136927	1					
ANR	1136938	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	1663:1:45819:45860	1136927	2	True				
ANR	1136939	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1136927	0		=			
ANR	1136940	Identifier	dst_r		1136927	0					
ANR	1136941	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1136927	1					
ANR	1136942	Condition	FAST_IS_REG ( dst )		1136927	0					
ANR	1136943	CallExpression	FAST_IS_REG ( dst )		1136927	0					
ANR	1136944	Callee	FAST_IS_REG		1136927	0					
ANR	1136945	Identifier	FAST_IS_REG		1136927	0					
ANR	1136946	ArgumentList	dst		1136927	1					
ANR	1136947	Argument	dst		1136927	0					
ANR	1136948	Identifier	dst		1136927	0					
ANR	1136949	Identifier	dst		1136927	1					
ANR	1136950	Identifier	TMP_REG1		1136927	2					
ANR	1136951	IfStatement	if ( dst_r == src1 && ! ( src2 & SLJIT_IMM ) )		1136927	3					
ANR	1136952	Condition	dst_r == src1 && ! ( src2 & SLJIT_IMM )	1666:5:45897:45932	1136927	0	True				
ANR	1136953	AndExpression	dst_r == src1 && ! ( src2 & SLJIT_IMM )		1136927	0		&&			
ANR	1136954	EqualityExpression	dst_r == src1		1136927	0		==			
ANR	1136955	Identifier	dst_r		1136927	0					
ANR	1136956	Identifier	src1		1136927	1					
ANR	1136957	UnaryOperationExpression	! ( src2 & SLJIT_IMM )		1136927	1					
ANR	1136958	UnaryOperator	!		1136927	0					
ANR	1136959	BitAndExpression	src2 & SLJIT_IMM		1136927	1		&			
ANR	1136960	Identifier	src2		1136927	0					
ANR	1136961	Identifier	SLJIT_IMM		1136927	1					
ANR	1136962	CompoundStatement		8:43:153:153	1136927	1					
ANR	1136963	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"	1667:2:45939:46002	1136927	0	True				
ANR	1136964	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1136927	0		=			
ANR	1136965	Identifier	inst		1136927	0					
ANR	1136966	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1136927	1					
ANR	1136967	Callee	emit_x86_instruction		1136927	0					
ANR	1136968	Identifier	emit_x86_instruction		1136927	0					
ANR	1136969	ArgumentList	compiler		1136927	1					
ANR	1136970	Argument	compiler		1136927	0					
ANR	1136971	Identifier	compiler		1136927	0					
ANR	1136972	Argument	2		1136927	1					
ANR	1136973	PrimaryExpression	2		1136927	0					
ANR	1136974	Argument	dst_r		1136927	2					
ANR	1136975	Identifier	dst_r		1136927	0					
ANR	1136976	Argument	0		1136927	3					
ANR	1136977	PrimaryExpression	0		1136927	0					
ANR	1136978	Argument	src2		1136927	4					
ANR	1136979	Identifier	src2		1136927	0					
ANR	1136980	Argument	src2w		1136927	5					
ANR	1136981	Identifier	src2w		1136927	0					
ANR	1136982	ExpressionStatement	FAIL_IF ( ! inst )	1668:2:46006:46020	1136927	1	True				
ANR	1136983	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1136984	Callee	FAIL_IF		1136927	0					
ANR	1136985	Identifier	FAIL_IF		1136927	0					
ANR	1136986	ArgumentList	! inst		1136927	1					
ANR	1136987	Argument	! inst		1136927	0					
ANR	1136988	UnaryOperationExpression	! inst		1136927	0					
ANR	1136989	UnaryOperator	!		1136927	0					
ANR	1136990	Identifier	inst		1136927	1					
ANR	1136991	ExpressionStatement	* inst ++ = GROUP_0F	1669:2:46024:46042	1136927	2	True				
ANR	1136992	AssignmentExpression	* inst ++ = GROUP_0F		1136927	0		=			
ANR	1136993	UnaryOperationExpression	* inst ++		1136927	0					
ANR	1136994	UnaryOperator	*		1136927	0					
ANR	1136995	PostIncDecOperationExpression	inst ++		1136927	1					
ANR	1136996	Identifier	inst		1136927	0					
ANR	1136997	IncDec	++		1136927	1					
ANR	1136998	Identifier	GROUP_0F		1136927	1					
ANR	1136999	ExpressionStatement	* inst = IMUL_r_rm	1670:2:46046:46063	1136927	3	True				
ANR	1137000	AssignmentExpression	* inst = IMUL_r_rm		1136927	0		=			
ANR	1137001	UnaryOperationExpression	* inst		1136927	0					
ANR	1137002	UnaryOperator	*		1136927	0					
ANR	1137003	Identifier	inst		1136927	1					
ANR	1137004	Identifier	IMUL_r_rm		1136927	1					
ANR	1137005	ElseStatement	else		1136927	0					
ANR	1137006	IfStatement	if ( dst_r == src2 && ! ( src1 & SLJIT_IMM ) )		1136927	0					
ANR	1137007	Condition	dst_r == src2 && ! ( src1 & SLJIT_IMM )	1672:10:46078:46113	1136927	0	True				
ANR	1137008	AndExpression	dst_r == src2 && ! ( src1 & SLJIT_IMM )		1136927	0		&&			
ANR	1137009	EqualityExpression	dst_r == src2		1136927	0		==			
ANR	1137010	Identifier	dst_r		1136927	0					
ANR	1137011	Identifier	src2		1136927	1					
ANR	1137012	UnaryOperationExpression	! ( src1 & SLJIT_IMM )		1136927	1					
ANR	1137013	UnaryOperator	!		1136927	0					
ANR	1137014	BitAndExpression	src1 & SLJIT_IMM		1136927	1		&			
ANR	1137015	Identifier	src1		1136927	0					
ANR	1137016	Identifier	SLJIT_IMM		1136927	1					
ANR	1137017	CompoundStatement		14:48:334:334	1136927	1					
ANR	1137018	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src1 , src1w )"	1673:2:46120:46183	1136927	0	True				
ANR	1137019	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src1 , src1w )"		1136927	0		=			
ANR	1137020	Identifier	inst		1136927	0					
ANR	1137021	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src1 , src1w )"		1136927	1					
ANR	1137022	Callee	emit_x86_instruction		1136927	0					
ANR	1137023	Identifier	emit_x86_instruction		1136927	0					
ANR	1137024	ArgumentList	compiler		1136927	1					
ANR	1137025	Argument	compiler		1136927	0					
ANR	1137026	Identifier	compiler		1136927	0					
ANR	1137027	Argument	2		1136927	1					
ANR	1137028	PrimaryExpression	2		1136927	0					
ANR	1137029	Argument	dst_r		1136927	2					
ANR	1137030	Identifier	dst_r		1136927	0					
ANR	1137031	Argument	0		1136927	3					
ANR	1137032	PrimaryExpression	0		1136927	0					
ANR	1137033	Argument	src1		1136927	4					
ANR	1137034	Identifier	src1		1136927	0					
ANR	1137035	Argument	src1w		1136927	5					
ANR	1137036	Identifier	src1w		1136927	0					
ANR	1137037	ExpressionStatement	FAIL_IF ( ! inst )	1674:2:46187:46201	1136927	1	True				
ANR	1137038	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137039	Callee	FAIL_IF		1136927	0					
ANR	1137040	Identifier	FAIL_IF		1136927	0					
ANR	1137041	ArgumentList	! inst		1136927	1					
ANR	1137042	Argument	! inst		1136927	0					
ANR	1137043	UnaryOperationExpression	! inst		1136927	0					
ANR	1137044	UnaryOperator	!		1136927	0					
ANR	1137045	Identifier	inst		1136927	1					
ANR	1137046	ExpressionStatement	* inst ++ = GROUP_0F	1675:2:46205:46223	1136927	2	True				
ANR	1137047	AssignmentExpression	* inst ++ = GROUP_0F		1136927	0		=			
ANR	1137048	UnaryOperationExpression	* inst ++		1136927	0					
ANR	1137049	UnaryOperator	*		1136927	0					
ANR	1137050	PostIncDecOperationExpression	inst ++		1136927	1					
ANR	1137051	Identifier	inst		1136927	0					
ANR	1137052	IncDec	++		1136927	1					
ANR	1137053	Identifier	GROUP_0F		1136927	1					
ANR	1137054	ExpressionStatement	* inst = IMUL_r_rm	1676:2:46227:46244	1136927	3	True				
ANR	1137055	AssignmentExpression	* inst = IMUL_r_rm		1136927	0		=			
ANR	1137056	UnaryOperationExpression	* inst		1136927	0					
ANR	1137057	UnaryOperator	*		1136927	0					
ANR	1137058	Identifier	inst		1136927	1					
ANR	1137059	Identifier	IMUL_r_rm		1136927	1					
ANR	1137060	ElseStatement	else		1136927	0					
ANR	1137061	IfStatement	if ( src1 & SLJIT_IMM )		1136927	0					
ANR	1137062	Condition	src1 & SLJIT_IMM	1678:10:46259:46274	1136927	0	True				
ANR	1137063	BitAndExpression	src1 & SLJIT_IMM		1136927	0		&			
ANR	1137064	Identifier	src1		1136927	0					
ANR	1137065	Identifier	SLJIT_IMM		1136927	1					
ANR	1137066	CompoundStatement		20:28:495:495	1136927	1					
ANR	1137067	IfStatement	if ( src2 & SLJIT_IMM )		1136927	0					
ANR	1137068	Condition	src2 & SLJIT_IMM	1679:6:46285:46300	1136927	0	True				
ANR	1137069	BitAndExpression	src2 & SLJIT_IMM		1136927	0		&			
ANR	1137070	Identifier	src2		1136927	0					
ANR	1137071	Identifier	SLJIT_IMM		1136927	1					
ANR	1137072	CompoundStatement		21:24:521:521	1136927	1					
ANR	1137073	ExpressionStatement	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , src2w )"	1680:3:46308:46354	1136927	0	True				
ANR	1137074	CallExpression	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , src2w )"		1136927	0					
ANR	1137075	Callee	EMIT_MOV		1136927	0					
ANR	1137076	Identifier	EMIT_MOV		1136927	0					
ANR	1137077	ArgumentList	compiler		1136927	1					
ANR	1137078	Argument	compiler		1136927	0					
ANR	1137079	Identifier	compiler		1136927	0					
ANR	1137080	Argument	dst_r		1136927	1					
ANR	1137081	Identifier	dst_r		1136927	0					
ANR	1137082	Argument	0		1136927	2					
ANR	1137083	PrimaryExpression	0		1136927	0					
ANR	1137084	Argument	SLJIT_IMM		1136927	3					
ANR	1137085	Identifier	SLJIT_IMM		1136927	0					
ANR	1137086	Argument	src2w		1136927	4					
ANR	1137087	Identifier	src2w		1136927	0					
ANR	1137088	ExpressionStatement	src2 = dst_r	1681:3:46359:46371	1136927	1	True				
ANR	1137089	AssignmentExpression	src2 = dst_r		1136927	0		=			
ANR	1137090	Identifier	src2		1136927	0					
ANR	1137091	Identifier	dst_r		1136927	1					
ANR	1137092	ExpressionStatement	src2w = 0	1682:3:46376:46385	1136927	2	True				
ANR	1137093	AssignmentExpression	src2w = 0		1136927	0		=			
ANR	1137094	Identifier	src2w		1136927	0					
ANR	1137095	PrimaryExpression	0		1136927	1					
ANR	1137096	IfStatement	if ( src1w <= 127 && src1w >= - 128 )		1136927	1					
ANR	1137097	Condition	src1w <= 127 && src1w >= - 128	1685:6:46398:46426	1136927	0	True				
ANR	1137098	AndExpression	src1w <= 127 && src1w >= - 128		1136927	0		&&			
ANR	1137099	RelationalExpression	src1w <= 127		1136927	0		<=			
ANR	1137100	Identifier	src1w		1136927	0					
ANR	1137101	PrimaryExpression	127		1136927	1					
ANR	1137102	RelationalExpression	src1w >= - 128		1136927	1		>=			
ANR	1137103	Identifier	src1w		1136927	0					
ANR	1137104	UnaryOperationExpression	- 128		1136927	1					
ANR	1137105	UnaryOperator	-		1136927	0					
ANR	1137106	PrimaryExpression	128		1136927	1					
ANR	1137107	CompoundStatement		27:37:647:647	1136927	1					
ANR	1137108	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"	1686:3:46434:46497	1136927	0	True				
ANR	1137109	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1136927	0		=			
ANR	1137110	Identifier	inst		1136927	0					
ANR	1137111	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1136927	1					
ANR	1137112	Callee	emit_x86_instruction		1136927	0					
ANR	1137113	Identifier	emit_x86_instruction		1136927	0					
ANR	1137114	ArgumentList	compiler		1136927	1					
ANR	1137115	Argument	compiler		1136927	0					
ANR	1137116	Identifier	compiler		1136927	0					
ANR	1137117	Argument	1		1136927	1					
ANR	1137118	PrimaryExpression	1		1136927	0					
ANR	1137119	Argument	dst_r		1136927	2					
ANR	1137120	Identifier	dst_r		1136927	0					
ANR	1137121	Argument	0		1136927	3					
ANR	1137122	PrimaryExpression	0		1136927	0					
ANR	1137123	Argument	src2		1136927	4					
ANR	1137124	Identifier	src2		1136927	0					
ANR	1137125	Argument	src2w		1136927	5					
ANR	1137126	Identifier	src2w		1136927	0					
ANR	1137127	ExpressionStatement	FAIL_IF ( ! inst )	1687:3:46502:46516	1136927	1	True				
ANR	1137128	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137129	Callee	FAIL_IF		1136927	0					
ANR	1137130	Identifier	FAIL_IF		1136927	0					
ANR	1137131	ArgumentList	! inst		1136927	1					
ANR	1137132	Argument	! inst		1136927	0					
ANR	1137133	UnaryOperationExpression	! inst		1136927	0					
ANR	1137134	UnaryOperator	!		1136927	0					
ANR	1137135	Identifier	inst		1136927	1					
ANR	1137136	ExpressionStatement	* inst = IMUL_r_rm_i8	1688:3:46521:46541	1136927	2	True				
ANR	1137137	AssignmentExpression	* inst = IMUL_r_rm_i8		1136927	0		=			
ANR	1137138	UnaryOperationExpression	* inst		1136927	0					
ANR	1137139	UnaryOperator	*		1136927	0					
ANR	1137140	Identifier	inst		1136927	1					
ANR	1137141	Identifier	IMUL_r_rm_i8		1136927	1					
ANR	1137142	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	1689:3:46546:46591	1136927	3	True				
ANR	1137143	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1136927	0		=			
ANR	1137144	Identifier	inst		1136927	0					
ANR	1137145	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1136927	1					
ANR	1137146	CastTarget	sljit_ub *		1136927	0					
ANR	1137147	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1136927	1					
ANR	1137148	Callee	ensure_buf		1136927	0					
ANR	1137149	Identifier	ensure_buf		1136927	0					
ANR	1137150	ArgumentList	compiler		1136927	1					
ANR	1137151	Argument	compiler		1136927	0					
ANR	1137152	Identifier	compiler		1136927	0					
ANR	1137153	Argument	1 + 1		1136927	1					
ANR	1137154	AdditiveExpression	1 + 1		1136927	0		+			
ANR	1137155	PrimaryExpression	1		1136927	0					
ANR	1137156	PrimaryExpression	1		1136927	1					
ANR	1137157	ExpressionStatement	FAIL_IF ( ! inst )	1690:3:46596:46610	1136927	4	True				
ANR	1137158	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137159	Callee	FAIL_IF		1136927	0					
ANR	1137160	Identifier	FAIL_IF		1136927	0					
ANR	1137161	ArgumentList	! inst		1136927	1					
ANR	1137162	Argument	! inst		1136927	0					
ANR	1137163	UnaryOperationExpression	! inst		1136927	0					
ANR	1137164	UnaryOperator	!		1136927	0					
ANR	1137165	Identifier	inst		1136927	1					
ANR	1137166	ExpressionStatement	INC_SIZE ( 1 )	1691:3:46615:46626	1136927	5	True				
ANR	1137167	CallExpression	INC_SIZE ( 1 )		1136927	0					
ANR	1137168	Callee	INC_SIZE		1136927	0					
ANR	1137169	Identifier	INC_SIZE		1136927	0					
ANR	1137170	ArgumentList	1		1136927	1					
ANR	1137171	Argument	1		1136927	0					
ANR	1137172	PrimaryExpression	1		1136927	0					
ANR	1137173	ExpressionStatement	* inst = ( sljit_sb ) src1w	1692:3:46631:46654	1136927	6	True				
ANR	1137174	AssignmentExpression	* inst = ( sljit_sb ) src1w		1136927	0		=			
ANR	1137175	UnaryOperationExpression	* inst		1136927	0					
ANR	1137176	UnaryOperator	*		1136927	0					
ANR	1137177	Identifier	inst		1136927	1					
ANR	1137178	CastExpression	( sljit_sb ) src1w		1136927	1					
ANR	1137179	CastTarget	sljit_sb		1136927	0					
ANR	1137180	Identifier	src1w		1136927	1					
ANR	1137181	ElseStatement	else		1136927	0					
ANR	1137182	CompoundStatement		37:7:942:942	1136927	0					
ANR	1137183	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"	1696:3:46729:46792	1136927	0	True				
ANR	1137184	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1136927	0		=			
ANR	1137185	Identifier	inst		1136927	0					
ANR	1137186	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1136927	1					
ANR	1137187	Callee	emit_x86_instruction		1136927	0					
ANR	1137188	Identifier	emit_x86_instruction		1136927	0					
ANR	1137189	ArgumentList	compiler		1136927	1					
ANR	1137190	Argument	compiler		1136927	0					
ANR	1137191	Identifier	compiler		1136927	0					
ANR	1137192	Argument	1		1136927	1					
ANR	1137193	PrimaryExpression	1		1136927	0					
ANR	1137194	Argument	dst_r		1136927	2					
ANR	1137195	Identifier	dst_r		1136927	0					
ANR	1137196	Argument	0		1136927	3					
ANR	1137197	PrimaryExpression	0		1136927	0					
ANR	1137198	Argument	src2		1136927	4					
ANR	1137199	Identifier	src2		1136927	0					
ANR	1137200	Argument	src2w		1136927	5					
ANR	1137201	Identifier	src2w		1136927	0					
ANR	1137202	ExpressionStatement	FAIL_IF ( ! inst )	1697:3:46797:46811	1136927	1	True				
ANR	1137203	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137204	Callee	FAIL_IF		1136927	0					
ANR	1137205	Identifier	FAIL_IF		1136927	0					
ANR	1137206	ArgumentList	! inst		1136927	1					
ANR	1137207	Argument	! inst		1136927	0					
ANR	1137208	UnaryOperationExpression	! inst		1136927	0					
ANR	1137209	UnaryOperator	!		1136927	0					
ANR	1137210	Identifier	inst		1136927	1					
ANR	1137211	ExpressionStatement	* inst = IMUL_r_rm_i32	1698:3:46816:46837	1136927	2	True				
ANR	1137212	AssignmentExpression	* inst = IMUL_r_rm_i32		1136927	0		=			
ANR	1137213	UnaryOperationExpression	* inst		1136927	0					
ANR	1137214	UnaryOperator	*		1136927	0					
ANR	1137215	Identifier	inst		1136927	1					
ANR	1137216	Identifier	IMUL_r_rm_i32		1136927	1					
ANR	1137217	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"	1699:3:46842:46887	1136927	3	True				
ANR	1137218	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1136927	0		=			
ANR	1137219	Identifier	inst		1136927	0					
ANR	1137220	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1136927	1					
ANR	1137221	CastTarget	sljit_ub *		1136927	0					
ANR	1137222	CallExpression	"ensure_buf ( compiler , 1 + 4 )"		1136927	1					
ANR	1137223	Callee	ensure_buf		1136927	0					
ANR	1137224	Identifier	ensure_buf		1136927	0					
ANR	1137225	ArgumentList	compiler		1136927	1					
ANR	1137226	Argument	compiler		1136927	0					
ANR	1137227	Identifier	compiler		1136927	0					
ANR	1137228	Argument	1 + 4		1136927	1					
ANR	1137229	AdditiveExpression	1 + 4		1136927	0		+			
ANR	1137230	PrimaryExpression	1		1136927	0					
ANR	1137231	PrimaryExpression	4		1136927	1					
ANR	1137232	ExpressionStatement	FAIL_IF ( ! inst )	1700:3:46892:46906	1136927	4	True				
ANR	1137233	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137234	Callee	FAIL_IF		1136927	0					
ANR	1137235	Identifier	FAIL_IF		1136927	0					
ANR	1137236	ArgumentList	! inst		1136927	1					
ANR	1137237	Argument	! inst		1136927	0					
ANR	1137238	UnaryOperationExpression	! inst		1136927	0					
ANR	1137239	UnaryOperator	!		1136927	0					
ANR	1137240	Identifier	inst		1136927	1					
ANR	1137241	ExpressionStatement	INC_SIZE ( 4 )	1701:3:46911:46922	1136927	5	True				
ANR	1137242	CallExpression	INC_SIZE ( 4 )		1136927	0					
ANR	1137243	Callee	INC_SIZE		1136927	0					
ANR	1137244	Identifier	INC_SIZE		1136927	0					
ANR	1137245	ArgumentList	4		1136927	1					
ANR	1137246	Argument	4		1136927	0					
ANR	1137247	PrimaryExpression	4		1136927	0					
ANR	1137248	ExpressionStatement	* ( sljit_sw * ) inst = src1w	1702:3:46927:46951	1136927	6	True				
ANR	1137249	AssignmentExpression	* ( sljit_sw * ) inst = src1w		1136927	0		=			
ANR	1137250	UnaryOperationExpression	* ( sljit_sw * ) inst		1136927	0					
ANR	1137251	UnaryOperator	*		1136927	0					
ANR	1137252	CastExpression	( sljit_sw * ) inst		1136927	1					
ANR	1137253	CastTarget	sljit_sw *		1136927	0					
ANR	1137254	Identifier	inst		1136927	1					
ANR	1137255	Identifier	src1w		1136927	1					
ANR	1137256	ElseStatement	else		1136927	0					
ANR	1137257	IfStatement	if ( src2 & SLJIT_IMM )		1136927	0					
ANR	1137258	Condition	src2 & SLJIT_IMM	1725:10:47525:47540	1136927	0	True				
ANR	1137259	BitAndExpression	src2 & SLJIT_IMM		1136927	0		&			
ANR	1137260	Identifier	src2		1136927	0					
ANR	1137261	Identifier	SLJIT_IMM		1136927	1					
ANR	1137262	CompoundStatement		67:28:1761:1761	1136927	1					
ANR	1137263	IfStatement	if ( src2w <= 127 && src2w >= - 128 )		1136927	0					
ANR	1137264	Condition	src2w <= 127 && src2w >= - 128	1728:6:47589:47617	1136927	0	True				
ANR	1137265	AndExpression	src2w <= 127 && src2w >= - 128		1136927	0		&&			
ANR	1137266	RelationalExpression	src2w <= 127		1136927	0		<=			
ANR	1137267	Identifier	src2w		1136927	0					
ANR	1137268	PrimaryExpression	127		1136927	1					
ANR	1137269	RelationalExpression	src2w >= - 128		1136927	1		>=			
ANR	1137270	Identifier	src2w		1136927	0					
ANR	1137271	UnaryOperationExpression	- 128		1136927	1					
ANR	1137272	UnaryOperator	-		1136927	0					
ANR	1137273	PrimaryExpression	128		1136927	1					
ANR	1137274	CompoundStatement		70:37:1838:1838	1136927	1					
ANR	1137275	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"	1729:3:47625:47688	1136927	0	True				
ANR	1137276	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1136927	0		=			
ANR	1137277	Identifier	inst		1136927	0					
ANR	1137278	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1136927	1					
ANR	1137279	Callee	emit_x86_instruction		1136927	0					
ANR	1137280	Identifier	emit_x86_instruction		1136927	0					
ANR	1137281	ArgumentList	compiler		1136927	1					
ANR	1137282	Argument	compiler		1136927	0					
ANR	1137283	Identifier	compiler		1136927	0					
ANR	1137284	Argument	1		1136927	1					
ANR	1137285	PrimaryExpression	1		1136927	0					
ANR	1137286	Argument	dst_r		1136927	2					
ANR	1137287	Identifier	dst_r		1136927	0					
ANR	1137288	Argument	0		1136927	3					
ANR	1137289	PrimaryExpression	0		1136927	0					
ANR	1137290	Argument	src1		1136927	4					
ANR	1137291	Identifier	src1		1136927	0					
ANR	1137292	Argument	src1w		1136927	5					
ANR	1137293	Identifier	src1w		1136927	0					
ANR	1137294	ExpressionStatement	FAIL_IF ( ! inst )	1730:3:47693:47707	1136927	1	True				
ANR	1137295	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137296	Callee	FAIL_IF		1136927	0					
ANR	1137297	Identifier	FAIL_IF		1136927	0					
ANR	1137298	ArgumentList	! inst		1136927	1					
ANR	1137299	Argument	! inst		1136927	0					
ANR	1137300	UnaryOperationExpression	! inst		1136927	0					
ANR	1137301	UnaryOperator	!		1136927	0					
ANR	1137302	Identifier	inst		1136927	1					
ANR	1137303	ExpressionStatement	* inst = IMUL_r_rm_i8	1731:3:47712:47732	1136927	2	True				
ANR	1137304	AssignmentExpression	* inst = IMUL_r_rm_i8		1136927	0		=			
ANR	1137305	UnaryOperationExpression	* inst		1136927	0					
ANR	1137306	UnaryOperator	*		1136927	0					
ANR	1137307	Identifier	inst		1136927	1					
ANR	1137308	Identifier	IMUL_r_rm_i8		1136927	1					
ANR	1137309	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	1732:3:47737:47782	1136927	3	True				
ANR	1137310	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1136927	0		=			
ANR	1137311	Identifier	inst		1136927	0					
ANR	1137312	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1136927	1					
ANR	1137313	CastTarget	sljit_ub *		1136927	0					
ANR	1137314	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1136927	1					
ANR	1137315	Callee	ensure_buf		1136927	0					
ANR	1137316	Identifier	ensure_buf		1136927	0					
ANR	1137317	ArgumentList	compiler		1136927	1					
ANR	1137318	Argument	compiler		1136927	0					
ANR	1137319	Identifier	compiler		1136927	0					
ANR	1137320	Argument	1 + 1		1136927	1					
ANR	1137321	AdditiveExpression	1 + 1		1136927	0		+			
ANR	1137322	PrimaryExpression	1		1136927	0					
ANR	1137323	PrimaryExpression	1		1136927	1					
ANR	1137324	ExpressionStatement	FAIL_IF ( ! inst )	1733:3:47787:47801	1136927	4	True				
ANR	1137325	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137326	Callee	FAIL_IF		1136927	0					
ANR	1137327	Identifier	FAIL_IF		1136927	0					
ANR	1137328	ArgumentList	! inst		1136927	1					
ANR	1137329	Argument	! inst		1136927	0					
ANR	1137330	UnaryOperationExpression	! inst		1136927	0					
ANR	1137331	UnaryOperator	!		1136927	0					
ANR	1137332	Identifier	inst		1136927	1					
ANR	1137333	ExpressionStatement	INC_SIZE ( 1 )	1734:3:47806:47817	1136927	5	True				
ANR	1137334	CallExpression	INC_SIZE ( 1 )		1136927	0					
ANR	1137335	Callee	INC_SIZE		1136927	0					
ANR	1137336	Identifier	INC_SIZE		1136927	0					
ANR	1137337	ArgumentList	1		1136927	1					
ANR	1137338	Argument	1		1136927	0					
ANR	1137339	PrimaryExpression	1		1136927	0					
ANR	1137340	ExpressionStatement	* inst = ( sljit_sb ) src2w	1735:3:47822:47845	1136927	6	True				
ANR	1137341	AssignmentExpression	* inst = ( sljit_sb ) src2w		1136927	0		=			
ANR	1137342	UnaryOperationExpression	* inst		1136927	0					
ANR	1137343	UnaryOperator	*		1136927	0					
ANR	1137344	Identifier	inst		1136927	1					
ANR	1137345	CastExpression	( sljit_sb ) src2w		1136927	1					
ANR	1137346	CastTarget	sljit_sb		1136927	0					
ANR	1137347	Identifier	src2w		1136927	1					
ANR	1137348	ElseStatement	else		1136927	0					
ANR	1137349	CompoundStatement		80:7:2133:2133	1136927	0					
ANR	1137350	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"	1739:3:47920:47983	1136927	0	True				
ANR	1137351	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1136927	0		=			
ANR	1137352	Identifier	inst		1136927	0					
ANR	1137353	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1136927	1					
ANR	1137354	Callee	emit_x86_instruction		1136927	0					
ANR	1137355	Identifier	emit_x86_instruction		1136927	0					
ANR	1137356	ArgumentList	compiler		1136927	1					
ANR	1137357	Argument	compiler		1136927	0					
ANR	1137358	Identifier	compiler		1136927	0					
ANR	1137359	Argument	1		1136927	1					
ANR	1137360	PrimaryExpression	1		1136927	0					
ANR	1137361	Argument	dst_r		1136927	2					
ANR	1137362	Identifier	dst_r		1136927	0					
ANR	1137363	Argument	0		1136927	3					
ANR	1137364	PrimaryExpression	0		1136927	0					
ANR	1137365	Argument	src1		1136927	4					
ANR	1137366	Identifier	src1		1136927	0					
ANR	1137367	Argument	src1w		1136927	5					
ANR	1137368	Identifier	src1w		1136927	0					
ANR	1137369	ExpressionStatement	FAIL_IF ( ! inst )	1740:3:47988:48002	1136927	1	True				
ANR	1137370	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137371	Callee	FAIL_IF		1136927	0					
ANR	1137372	Identifier	FAIL_IF		1136927	0					
ANR	1137373	ArgumentList	! inst		1136927	1					
ANR	1137374	Argument	! inst		1136927	0					
ANR	1137375	UnaryOperationExpression	! inst		1136927	0					
ANR	1137376	UnaryOperator	!		1136927	0					
ANR	1137377	Identifier	inst		1136927	1					
ANR	1137378	ExpressionStatement	* inst = IMUL_r_rm_i32	1741:3:48007:48028	1136927	2	True				
ANR	1137379	AssignmentExpression	* inst = IMUL_r_rm_i32		1136927	0		=			
ANR	1137380	UnaryOperationExpression	* inst		1136927	0					
ANR	1137381	UnaryOperator	*		1136927	0					
ANR	1137382	Identifier	inst		1136927	1					
ANR	1137383	Identifier	IMUL_r_rm_i32		1136927	1					
ANR	1137384	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"	1742:3:48033:48078	1136927	3	True				
ANR	1137385	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1136927	0		=			
ANR	1137386	Identifier	inst		1136927	0					
ANR	1137387	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1136927	1					
ANR	1137388	CastTarget	sljit_ub *		1136927	0					
ANR	1137389	CallExpression	"ensure_buf ( compiler , 1 + 4 )"		1136927	1					
ANR	1137390	Callee	ensure_buf		1136927	0					
ANR	1137391	Identifier	ensure_buf		1136927	0					
ANR	1137392	ArgumentList	compiler		1136927	1					
ANR	1137393	Argument	compiler		1136927	0					
ANR	1137394	Identifier	compiler		1136927	0					
ANR	1137395	Argument	1 + 4		1136927	1					
ANR	1137396	AdditiveExpression	1 + 4		1136927	0		+			
ANR	1137397	PrimaryExpression	1		1136927	0					
ANR	1137398	PrimaryExpression	4		1136927	1					
ANR	1137399	ExpressionStatement	FAIL_IF ( ! inst )	1743:3:48083:48097	1136927	4	True				
ANR	1137400	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137401	Callee	FAIL_IF		1136927	0					
ANR	1137402	Identifier	FAIL_IF		1136927	0					
ANR	1137403	ArgumentList	! inst		1136927	1					
ANR	1137404	Argument	! inst		1136927	0					
ANR	1137405	UnaryOperationExpression	! inst		1136927	0					
ANR	1137406	UnaryOperator	!		1136927	0					
ANR	1137407	Identifier	inst		1136927	1					
ANR	1137408	ExpressionStatement	INC_SIZE ( 4 )	1744:3:48102:48113	1136927	5	True				
ANR	1137409	CallExpression	INC_SIZE ( 4 )		1136927	0					
ANR	1137410	Callee	INC_SIZE		1136927	0					
ANR	1137411	Identifier	INC_SIZE		1136927	0					
ANR	1137412	ArgumentList	4		1136927	1					
ANR	1137413	Argument	4		1136927	0					
ANR	1137414	PrimaryExpression	4		1136927	0					
ANR	1137415	ExpressionStatement	* ( sljit_sw * ) inst = src2w	1745:3:48118:48142	1136927	6	True				
ANR	1137416	AssignmentExpression	* ( sljit_sw * ) inst = src2w		1136927	0		=			
ANR	1137417	UnaryOperationExpression	* ( sljit_sw * ) inst		1136927	0					
ANR	1137418	UnaryOperator	*		1136927	0					
ANR	1137419	CastExpression	( sljit_sw * ) inst		1136927	1					
ANR	1137420	CastTarget	sljit_sw *		1136927	0					
ANR	1137421	Identifier	inst		1136927	1					
ANR	1137422	Identifier	src2w		1136927	1					
ANR	1137423	ElseStatement	else		1136927	0					
ANR	1137424	CompoundStatement		110:6:2930:2930	1136927	0					
ANR	1137425	IfStatement	"if ( ADDRESSING_DEPENDS_ON ( src2 , dst_r ) )"		1136927	0					
ANR	1137426	Condition	"ADDRESSING_DEPENDS_ON ( src2 , dst_r )"	1770:6:48759:48792	1136927	0	True				
ANR	1137427	CallExpression	"ADDRESSING_DEPENDS_ON ( src2 , dst_r )"		1136927	0					
ANR	1137428	Callee	ADDRESSING_DEPENDS_ON		1136927	0					
ANR	1137429	Identifier	ADDRESSING_DEPENDS_ON		1136927	0					
ANR	1137430	ArgumentList	src2		1136927	1					
ANR	1137431	Argument	src2		1136927	0					
ANR	1137432	Identifier	src2		1136927	0					
ANR	1137433	Argument	dst_r		1136927	1					
ANR	1137434	Identifier	dst_r		1136927	0					
ANR	1137435	ExpressionStatement	dst_r = TMP_REG1	1771:3:48798:48814	1136927	1	True				
ANR	1137436	AssignmentExpression	dst_r = TMP_REG1		1136927	0		=			
ANR	1137437	Identifier	dst_r		1136927	0					
ANR	1137438	Identifier	TMP_REG1		1136927	1					
ANR	1137439	ExpressionStatement	"EMIT_MOV ( compiler , dst_r , 0 , src1 , src1w )"	1772:2:48818:48859	1136927	1	True				
ANR	1137440	CallExpression	"EMIT_MOV ( compiler , dst_r , 0 , src1 , src1w )"		1136927	0					
ANR	1137441	Callee	EMIT_MOV		1136927	0					
ANR	1137442	Identifier	EMIT_MOV		1136927	0					
ANR	1137443	ArgumentList	compiler		1136927	1					
ANR	1137444	Argument	compiler		1136927	0					
ANR	1137445	Identifier	compiler		1136927	0					
ANR	1137446	Argument	dst_r		1136927	1					
ANR	1137447	Identifier	dst_r		1136927	0					
ANR	1137448	Argument	0		1136927	2					
ANR	1137449	PrimaryExpression	0		1136927	0					
ANR	1137450	Argument	src1		1136927	3					
ANR	1137451	Identifier	src1		1136927	0					
ANR	1137452	Argument	src1w		1136927	4					
ANR	1137453	Identifier	src1w		1136927	0					
ANR	1137454	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"	1773:2:48863:48926	1136927	2	True				
ANR	1137455	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1136927	0		=			
ANR	1137456	Identifier	inst		1136927	0					
ANR	1137457	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1136927	1					
ANR	1137458	Callee	emit_x86_instruction		1136927	0					
ANR	1137459	Identifier	emit_x86_instruction		1136927	0					
ANR	1137460	ArgumentList	compiler		1136927	1					
ANR	1137461	Argument	compiler		1136927	0					
ANR	1137462	Identifier	compiler		1136927	0					
ANR	1137463	Argument	2		1136927	1					
ANR	1137464	PrimaryExpression	2		1136927	0					
ANR	1137465	Argument	dst_r		1136927	2					
ANR	1137466	Identifier	dst_r		1136927	0					
ANR	1137467	Argument	0		1136927	3					
ANR	1137468	PrimaryExpression	0		1136927	0					
ANR	1137469	Argument	src2		1136927	4					
ANR	1137470	Identifier	src2		1136927	0					
ANR	1137471	Argument	src2w		1136927	5					
ANR	1137472	Identifier	src2w		1136927	0					
ANR	1137473	ExpressionStatement	FAIL_IF ( ! inst )	1774:2:48930:48944	1136927	3	True				
ANR	1137474	CallExpression	FAIL_IF ( ! inst )		1136927	0					
ANR	1137475	Callee	FAIL_IF		1136927	0					
ANR	1137476	Identifier	FAIL_IF		1136927	0					
ANR	1137477	ArgumentList	! inst		1136927	1					
ANR	1137478	Argument	! inst		1136927	0					
ANR	1137479	UnaryOperationExpression	! inst		1136927	0					
ANR	1137480	UnaryOperator	!		1136927	0					
ANR	1137481	Identifier	inst		1136927	1					
ANR	1137482	ExpressionStatement	* inst ++ = GROUP_0F	1775:2:48948:48966	1136927	4	True				
ANR	1137483	AssignmentExpression	* inst ++ = GROUP_0F		1136927	0		=			
ANR	1137484	UnaryOperationExpression	* inst ++		1136927	0					
ANR	1137485	UnaryOperator	*		1136927	0					
ANR	1137486	PostIncDecOperationExpression	inst ++		1136927	1					
ANR	1137487	Identifier	inst		1136927	0					
ANR	1137488	IncDec	++		1136927	1					
ANR	1137489	Identifier	GROUP_0F		1136927	1					
ANR	1137490	ExpressionStatement	* inst = IMUL_r_rm	1776:2:48970:48987	1136927	5	True				
ANR	1137491	AssignmentExpression	* inst = IMUL_r_rm		1136927	0		=			
ANR	1137492	UnaryOperationExpression	* inst		1136927	0					
ANR	1137493	UnaryOperator	*		1136927	0					
ANR	1137494	Identifier	inst		1136927	1					
ANR	1137495	Identifier	IMUL_r_rm		1136927	1					
ANR	1137496	IfStatement	if ( dst_r == TMP_REG1 )		1136927	4					
ANR	1137497	Condition	dst_r == TMP_REG1	1779:5:48998:49014	1136927	0	True				
ANR	1137498	EqualityExpression	dst_r == TMP_REG1		1136927	0		==			
ANR	1137499	Identifier	dst_r		1136927	0					
ANR	1137500	Identifier	TMP_REG1		1136927	1					
ANR	1137501	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1780:2:49019:49061	1136927	1	True				
ANR	1137502	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1136927	0					
ANR	1137503	Callee	EMIT_MOV		1136927	0					
ANR	1137504	Identifier	EMIT_MOV		1136927	0					
ANR	1137505	ArgumentList	compiler		1136927	1					
ANR	1137506	Argument	compiler		1136927	0					
ANR	1137507	Identifier	compiler		1136927	0					
ANR	1137508	Argument	dst		1136927	1					
ANR	1137509	Identifier	dst		1136927	0					
ANR	1137510	Argument	dstw		1136927	2					
ANR	1137511	Identifier	dstw		1136927	0					
ANR	1137512	Argument	TMP_REG1		1136927	3					
ANR	1137513	Identifier	TMP_REG1		1136927	0					
ANR	1137514	Argument	0		1136927	4					
ANR	1137515	PrimaryExpression	0		1136927	0					
ANR	1137516	ReturnStatement	return SLJIT_SUCCESS ;	1782:1:49065:49085	1136927	5	True				
ANR	1137517	Identifier	SLJIT_SUCCESS		1136927	0					
ANR	1137518	ReturnType	static sljit_si		1136927	1					
ANR	1137519	Identifier	emit_mul		1136927	2					
ANR	1137520	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1136927	3					
ANR	1137521	Parameter	struct sljit_compiler * compiler	1655:25:45654:45684	1136927	0	True				
ANR	1137522	ParameterType	struct sljit_compiler *		1136927	0					
ANR	1137523	Identifier	compiler		1136927	1					
ANR	1137524	Parameter	sljit_si dst	1656:1:45688:45699	1136927	1	True				
ANR	1137525	ParameterType	sljit_si		1136927	0					
ANR	1137526	Identifier	dst		1136927	1					
ANR	1137527	Parameter	sljit_sw dstw	1656:15:45702:45714	1136927	2	True				
ANR	1137528	ParameterType	sljit_sw		1136927	0					
ANR	1137529	Identifier	dstw		1136927	1					
ANR	1137530	Parameter	sljit_si src1	1657:1:45718:45730	1136927	3	True				
ANR	1137531	ParameterType	sljit_si		1136927	0					
ANR	1137532	Identifier	src1		1136927	1					
ANR	1137533	Parameter	sljit_sw src1w	1657:16:45733:45746	1136927	4	True				
ANR	1137534	ParameterType	sljit_sw		1136927	0					
ANR	1137535	Identifier	src1w		1136927	1					
ANR	1137536	Parameter	sljit_si src2	1658:1:45750:45762	1136927	5	True				
ANR	1137537	ParameterType	sljit_si		1136927	0					
ANR	1137538	Identifier	src2		1136927	1					
ANR	1137539	Parameter	sljit_sw src2w	1658:16:45765:45778	1136927	6	True				
ANR	1137540	ParameterType	sljit_sw		1136927	0					
ANR	1137541	Identifier	src2w		1136927	1					
ANR	1137542	CFGEntryNode	ENTRY		1136927		True				
ANR	1137543	CFGExitNode	EXIT		1136927		True				
ANR	1137544	Symbol	src2w		1136927						
ANR	1137545	Symbol	TMP_REG1		1136927						
ANR	1137546	Symbol	emit_x86_instruction		1136927						
ANR	1137547	Symbol	GROUP_0F		1136927						
ANR	1137548	Symbol	src1w		1136927						
ANR	1137549	Symbol	FAST_IS_REG		1136927						
ANR	1137550	Symbol	* inst		1136927						
ANR	1137551	Symbol	dst		1136927						
ANR	1137552	Symbol	* inst ++		1136927						
ANR	1137553	Symbol	SLJIT_SUCCESS		1136927						
ANR	1137554	Symbol	* ( sljit_sw * ) inst		1136927						
ANR	1137555	Symbol	IMUL_r_rm_i32		1136927						
ANR	1137556	Symbol	dst_r		1136927						
ANR	1137557	Symbol	SLJIT_IMM		1136927						
ANR	1137558	Symbol	IMUL_r_rm_i8		1136927						
ANR	1137559	Symbol	inst		1136927						
ANR	1137560	Symbol	ensure_buf		1136927						
ANR	1137561	Symbol	src1		1136927						
ANR	1137562	Symbol	src2		1136927						
ANR	1137563	Symbol	ADDRESSING_DEPENDS_ON		1136927						
ANR	1137564	Symbol	compiler		1136927						
ANR	1137565	Symbol	IMUL_r_rm		1136927						
ANR	1137566	Symbol	dstw		1136927						
ANR	1137567	Function	emit_lea_binary	1785:0:49090:50751							
ANR	1137568	FunctionDef	"emit_lea_binary (struct sljit_compiler * compiler , sljit_si keep_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1137567	0					
ANR	1137569	CompoundStatement		1789:0:49270:50751	1137567	0					
ANR	1137570	IdentifierDeclStatement	sljit_ub * inst ;	1790:1:49273:49287	1137567	0	True				
ANR	1137571	IdentifierDecl	* inst		1137567	0					
ANR	1137572	IdentifierDeclType	sljit_ub *		1137567	0					
ANR	1137573	Identifier	inst		1137567	1					
ANR	1137574	IdentifierDeclStatement	"sljit_si dst_r , done = 0 ;"	1791:1:49290:49314	1137567	1	True				
ANR	1137575	IdentifierDecl	dst_r		1137567	0					
ANR	1137576	IdentifierDeclType	sljit_si		1137567	0					
ANR	1137577	Identifier	dst_r		1137567	1					
ANR	1137578	IdentifierDecl	done = 0		1137567	1					
ANR	1137579	IdentifierDeclType	sljit_si		1137567	0					
ANR	1137580	Identifier	done		1137567	1					
ANR	1137581	AssignmentExpression	done = 0		1137567	2		=			
ANR	1137582	Identifier	done		1137567	0					
ANR	1137583	PrimaryExpression	0		1137567	1					
ANR	1137584	IfStatement	if ( ! keep_flags )		1137567	2					
ANR	1137585	Condition	! keep_flags	1794:5:49382:49392	1137567	0	True				
ANR	1137586	UnaryOperationExpression	! keep_flags		1137567	0					
ANR	1137587	UnaryOperator	!		1137567	0					
ANR	1137588	Identifier	keep_flags		1137567	1					
ANR	1137589	CompoundStatement		6:18:124:124	1137567	1					
ANR	1137590	IfStatement	if ( dst == src1 && dstw == src1w )		1137567	0					
ANR	1137591	Condition	dst == src1 && dstw == src1w	1795:6:49403:49430	1137567	0	True				
ANR	1137592	AndExpression	dst == src1 && dstw == src1w		1137567	0		&&			
ANR	1137593	EqualityExpression	dst == src1		1137567	0		==			
ANR	1137594	Identifier	dst		1137567	0					
ANR	1137595	Identifier	src1		1137567	1					
ANR	1137596	EqualityExpression	dstw == src1w		1137567	1		==			
ANR	1137597	Identifier	dstw		1137567	0					
ANR	1137598	Identifier	src1w		1137567	1					
ANR	1137599	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1796:3:49436:49464	1137567	1	True				
ANR	1137600	Identifier	SLJIT_ERR_UNSUPPORTED		1137567	0					
ANR	1137601	IfStatement	if ( dst == src2 && dstw == src2w )		1137567	1					
ANR	1137602	Condition	dst == src2 && dstw == src2w	1797:6:49472:49499	1137567	0	True				
ANR	1137603	AndExpression	dst == src2 && dstw == src2w		1137567	0		&&			
ANR	1137604	EqualityExpression	dst == src2		1137567	0		==			
ANR	1137605	Identifier	dst		1137567	0					
ANR	1137606	Identifier	src2		1137567	1					
ANR	1137607	EqualityExpression	dstw == src2w		1137567	1		==			
ANR	1137608	Identifier	dstw		1137567	0					
ANR	1137609	Identifier	src2w		1137567	1					
ANR	1137610	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1798:3:49505:49533	1137567	1	True				
ANR	1137611	Identifier	SLJIT_ERR_UNSUPPORTED		1137567	0					
ANR	1137612	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	1801:1:49540:49581	1137567	3	True				
ANR	1137613	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1137567	0		=			
ANR	1137614	Identifier	dst_r		1137567	0					
ANR	1137615	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1137567	1					
ANR	1137616	Condition	FAST_IS_REG ( dst )		1137567	0					
ANR	1137617	CallExpression	FAST_IS_REG ( dst )		1137567	0					
ANR	1137618	Callee	FAST_IS_REG		1137567	0					
ANR	1137619	Identifier	FAST_IS_REG		1137567	0					
ANR	1137620	ArgumentList	dst		1137567	1					
ANR	1137621	Argument	dst		1137567	0					
ANR	1137622	Identifier	dst		1137567	0					
ANR	1137623	Identifier	dst		1137567	1					
ANR	1137624	Identifier	TMP_REG1		1137567	2					
ANR	1137625	IfStatement	if ( FAST_IS_REG ( src1 ) )		1137567	4					
ANR	1137626	Condition	FAST_IS_REG ( src1 )	1803:5:49589:49605	1137567	0	True				
ANR	1137627	CallExpression	FAST_IS_REG ( src1 )		1137567	0					
ANR	1137628	Callee	FAST_IS_REG		1137567	0					
ANR	1137629	Identifier	FAST_IS_REG		1137567	0					
ANR	1137630	ArgumentList	src1		1137567	1					
ANR	1137631	Argument	src1		1137567	0					
ANR	1137632	Identifier	src1		1137567	0					
ANR	1137633	CompoundStatement		15:24:337:337	1137567	1					
ANR	1137634	IfStatement	if ( FAST_IS_REG ( src2 ) )		1137567	0					
ANR	1137635	Condition	FAST_IS_REG ( src2 )	1804:6:49616:49632	1137567	0	True				
ANR	1137636	CallExpression	FAST_IS_REG ( src2 )		1137567	0					
ANR	1137637	Callee	FAST_IS_REG		1137567	0					
ANR	1137638	Identifier	FAST_IS_REG		1137567	0					
ANR	1137639	ArgumentList	src2		1137567	1					
ANR	1137640	Argument	src2		1137567	0					
ANR	1137641	Identifier	src2		1137567	0					
ANR	1137642	CompoundStatement		16:25:364:364	1137567	1					
ANR	1137643	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM2 ( src1 , src2 ) , 0 )"	1805:3:49640:49717	1137567	0	True				
ANR	1137644	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM2 ( src1 , src2 ) , 0 )"		1137567	0		=			
ANR	1137645	Identifier	inst		1137567	0					
ANR	1137646	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM2 ( src1 , src2 ) , 0 )"		1137567	1					
ANR	1137647	Callee	emit_x86_instruction		1137567	0					
ANR	1137648	Identifier	emit_x86_instruction		1137567	0					
ANR	1137649	ArgumentList	compiler		1137567	1					
ANR	1137650	Argument	compiler		1137567	0					
ANR	1137651	Identifier	compiler		1137567	0					
ANR	1137652	Argument	1		1137567	1					
ANR	1137653	PrimaryExpression	1		1137567	0					
ANR	1137654	Argument	dst_r		1137567	2					
ANR	1137655	Identifier	dst_r		1137567	0					
ANR	1137656	Argument	0		1137567	3					
ANR	1137657	PrimaryExpression	0		1137567	0					
ANR	1137658	Argument	"SLJIT_MEM2 ( src1 , src2 )"		1137567	4					
ANR	1137659	CallExpression	"SLJIT_MEM2 ( src1 , src2 )"		1137567	0					
ANR	1137660	Callee	SLJIT_MEM2		1137567	0					
ANR	1137661	Identifier	SLJIT_MEM2		1137567	0					
ANR	1137662	ArgumentList	src1		1137567	1					
ANR	1137663	Argument	src1		1137567	0					
ANR	1137664	Identifier	src1		1137567	0					
ANR	1137665	Argument	src2		1137567	1					
ANR	1137666	Identifier	src2		1137567	0					
ANR	1137667	Argument	0		1137567	5					
ANR	1137668	PrimaryExpression	0		1137567	0					
ANR	1137669	ExpressionStatement	FAIL_IF ( ! inst )	1806:3:49722:49736	1137567	1	True				
ANR	1137670	CallExpression	FAIL_IF ( ! inst )		1137567	0					
ANR	1137671	Callee	FAIL_IF		1137567	0					
ANR	1137672	Identifier	FAIL_IF		1137567	0					
ANR	1137673	ArgumentList	! inst		1137567	1					
ANR	1137674	Argument	! inst		1137567	0					
ANR	1137675	UnaryOperationExpression	! inst		1137567	0					
ANR	1137676	UnaryOperator	!		1137567	0					
ANR	1137677	Identifier	inst		1137567	1					
ANR	1137678	ExpressionStatement	* inst = LEA_r_m	1807:3:49741:49756	1137567	2	True				
ANR	1137679	AssignmentExpression	* inst = LEA_r_m		1137567	0		=			
ANR	1137680	UnaryOperationExpression	* inst		1137567	0					
ANR	1137681	UnaryOperator	*		1137567	0					
ANR	1137682	Identifier	inst		1137567	1					
ANR	1137683	Identifier	LEA_r_m		1137567	1					
ANR	1137684	ExpressionStatement	done = 1	1808:3:49761:49769	1137567	3	True				
ANR	1137685	AssignmentExpression	done = 1		1137567	0		=			
ANR	1137686	Identifier	done		1137567	0					
ANR	1137687	PrimaryExpression	1		1137567	1					
ANR	1137688	IfStatement	if ( ( src2 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1137567	1					
ANR	1137689	Condition	( src2 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1811:6:49838:49899	1137567	0	True				
ANR	1137690	AndExpression	( src2 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1137567	0		&&			
ANR	1137691	BitAndExpression	src2 & SLJIT_IMM		1137567	0		&			
ANR	1137692	Identifier	src2		1137567	0					
ANR	1137693	Identifier	SLJIT_IMM		1137567	1					
ANR	1137694	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1137567	1		||			
ANR	1137695	PtrMemberAccess	compiler -> mode32		1137567	0					
ANR	1137696	Identifier	compiler		1137567	0					
ANR	1137697	Identifier	mode32		1137567	1					
ANR	1137698	CallExpression	IS_HALFWORD ( src2w )		1137567	1					
ANR	1137699	Callee	IS_HALFWORD		1137567	0					
ANR	1137700	Identifier	IS_HALFWORD		1137567	0					
ANR	1137701	ArgumentList	src2w		1137567	1					
ANR	1137702	Argument	src2w		1137567	0					
ANR	1137703	Identifier	src2w		1137567	0					
ANR	1137704	CompoundStatement		23:70:631:631	1137567	1					
ANR	1137705	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src1 ) , ( sljit_si ) src2w )"	1812:3:49907:49992	1137567	0	True				
ANR	1137706	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src1 ) , ( sljit_si ) src2w )"		1137567	0		=			
ANR	1137707	Identifier	inst		1137567	0					
ANR	1137708	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src1 ) , ( sljit_si ) src2w )"		1137567	1					
ANR	1137709	Callee	emit_x86_instruction		1137567	0					
ANR	1137710	Identifier	emit_x86_instruction		1137567	0					
ANR	1137711	ArgumentList	compiler		1137567	1					
ANR	1137712	Argument	compiler		1137567	0					
ANR	1137713	Identifier	compiler		1137567	0					
ANR	1137714	Argument	1		1137567	1					
ANR	1137715	PrimaryExpression	1		1137567	0					
ANR	1137716	Argument	dst_r		1137567	2					
ANR	1137717	Identifier	dst_r		1137567	0					
ANR	1137718	Argument	0		1137567	3					
ANR	1137719	PrimaryExpression	0		1137567	0					
ANR	1137720	Argument	SLJIT_MEM1 ( src1 )		1137567	4					
ANR	1137721	CallExpression	SLJIT_MEM1 ( src1 )		1137567	0					
ANR	1137722	Callee	SLJIT_MEM1		1137567	0					
ANR	1137723	Identifier	SLJIT_MEM1		1137567	0					
ANR	1137724	ArgumentList	src1		1137567	1					
ANR	1137725	Argument	src1		1137567	0					
ANR	1137726	Identifier	src1		1137567	0					
ANR	1137727	Argument	( sljit_si ) src2w		1137567	5					
ANR	1137728	CastExpression	( sljit_si ) src2w		1137567	0					
ANR	1137729	CastTarget	sljit_si		1137567	0					
ANR	1137730	Identifier	src2w		1137567	1					
ANR	1137731	ExpressionStatement	FAIL_IF ( ! inst )	1817:3:50116:50130	1137567	1	True				
ANR	1137732	CallExpression	FAIL_IF ( ! inst )		1137567	0					
ANR	1137733	Callee	FAIL_IF		1137567	0					
ANR	1137734	Identifier	FAIL_IF		1137567	0					
ANR	1137735	ArgumentList	! inst		1137567	1					
ANR	1137736	Argument	! inst		1137567	0					
ANR	1137737	UnaryOperationExpression	! inst		1137567	0					
ANR	1137738	UnaryOperator	!		1137567	0					
ANR	1137739	Identifier	inst		1137567	1					
ANR	1137740	ExpressionStatement	* inst = LEA_r_m	1818:3:50135:50150	1137567	2	True				
ANR	1137741	AssignmentExpression	* inst = LEA_r_m		1137567	0		=			
ANR	1137742	UnaryOperationExpression	* inst		1137567	0					
ANR	1137743	UnaryOperator	*		1137567	0					
ANR	1137744	Identifier	inst		1137567	1					
ANR	1137745	Identifier	LEA_r_m		1137567	1					
ANR	1137746	ExpressionStatement	done = 1	1819:3:50155:50163	1137567	3	True				
ANR	1137747	AssignmentExpression	done = 1		1137567	0		=			
ANR	1137748	Identifier	done		1137567	0					
ANR	1137749	PrimaryExpression	1		1137567	1					
ANR	1137750	ElseStatement	else		1137567	0					
ANR	1137751	IfStatement	if ( FAST_IS_REG ( src2 ) )		1137567	0					
ANR	1137752	Condition	FAST_IS_REG ( src2 )	1822:10:50182:50198	1137567	0	True				
ANR	1137753	CallExpression	FAST_IS_REG ( src2 )		1137567	0					
ANR	1137754	Callee	FAST_IS_REG		1137567	0					
ANR	1137755	Identifier	FAST_IS_REG		1137567	0					
ANR	1137756	ArgumentList	src2		1137567	1					
ANR	1137757	Argument	src2		1137567	0					
ANR	1137758	Identifier	src2		1137567	0					
ANR	1137759	CompoundStatement		34:29:930:930	1137567	1					
ANR	1137760	IfStatement	if ( ( src1 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) ) )		1137567	0					
ANR	1137761	Condition	( src1 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )	1824:6:50266:50327	1137567	0	True				
ANR	1137762	AndExpression	( src1 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1137567	0		&&			
ANR	1137763	BitAndExpression	src1 & SLJIT_IMM		1137567	0		&			
ANR	1137764	Identifier	src1		1137567	0					
ANR	1137765	Identifier	SLJIT_IMM		1137567	1					
ANR	1137766	OrExpression	compiler -> mode32 || IS_HALFWORD ( src1w )		1137567	1		||			
ANR	1137767	PtrMemberAccess	compiler -> mode32		1137567	0					
ANR	1137768	Identifier	compiler		1137567	0					
ANR	1137769	Identifier	mode32		1137567	1					
ANR	1137770	CallExpression	IS_HALFWORD ( src1w )		1137567	1					
ANR	1137771	Callee	IS_HALFWORD		1137567	0					
ANR	1137772	Identifier	IS_HALFWORD		1137567	0					
ANR	1137773	ArgumentList	src1w		1137567	1					
ANR	1137774	Argument	src1w		1137567	0					
ANR	1137775	Identifier	src1w		1137567	0					
ANR	1137776	CompoundStatement		36:70:1059:1059	1137567	1					
ANR	1137777	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src2 ) , ( sljit_si ) src1w )"	1825:3:50335:50420	1137567	0	True				
ANR	1137778	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src2 ) , ( sljit_si ) src1w )"		1137567	0		=			
ANR	1137779	Identifier	inst		1137567	0					
ANR	1137780	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src2 ) , ( sljit_si ) src1w )"		1137567	1					
ANR	1137781	Callee	emit_x86_instruction		1137567	0					
ANR	1137782	Identifier	emit_x86_instruction		1137567	0					
ANR	1137783	ArgumentList	compiler		1137567	1					
ANR	1137784	Argument	compiler		1137567	0					
ANR	1137785	Identifier	compiler		1137567	0					
ANR	1137786	Argument	1		1137567	1					
ANR	1137787	PrimaryExpression	1		1137567	0					
ANR	1137788	Argument	dst_r		1137567	2					
ANR	1137789	Identifier	dst_r		1137567	0					
ANR	1137790	Argument	0		1137567	3					
ANR	1137791	PrimaryExpression	0		1137567	0					
ANR	1137792	Argument	SLJIT_MEM1 ( src2 )		1137567	4					
ANR	1137793	CallExpression	SLJIT_MEM1 ( src2 )		1137567	0					
ANR	1137794	Callee	SLJIT_MEM1		1137567	0					
ANR	1137795	Identifier	SLJIT_MEM1		1137567	0					
ANR	1137796	ArgumentList	src2		1137567	1					
ANR	1137797	Argument	src2		1137567	0					
ANR	1137798	Identifier	src2		1137567	0					
ANR	1137799	Argument	( sljit_si ) src1w		1137567	5					
ANR	1137800	CastExpression	( sljit_si ) src1w		1137567	0					
ANR	1137801	CastTarget	sljit_si		1137567	0					
ANR	1137802	Identifier	src1w		1137567	1					
ANR	1137803	ExpressionStatement	FAIL_IF ( ! inst )	1830:3:50544:50558	1137567	1	True				
ANR	1137804	CallExpression	FAIL_IF ( ! inst )		1137567	0					
ANR	1137805	Callee	FAIL_IF		1137567	0					
ANR	1137806	Identifier	FAIL_IF		1137567	0					
ANR	1137807	ArgumentList	! inst		1137567	1					
ANR	1137808	Argument	! inst		1137567	0					
ANR	1137809	UnaryOperationExpression	! inst		1137567	0					
ANR	1137810	UnaryOperator	!		1137567	0					
ANR	1137811	Identifier	inst		1137567	1					
ANR	1137812	ExpressionStatement	* inst = LEA_r_m	1831:3:50563:50578	1137567	2	True				
ANR	1137813	AssignmentExpression	* inst = LEA_r_m		1137567	0		=			
ANR	1137814	UnaryOperationExpression	* inst		1137567	0					
ANR	1137815	UnaryOperator	*		1137567	0					
ANR	1137816	Identifier	inst		1137567	1					
ANR	1137817	Identifier	LEA_r_m		1137567	1					
ANR	1137818	ExpressionStatement	done = 1	1832:3:50583:50591	1137567	3	True				
ANR	1137819	AssignmentExpression	done = 1		1137567	0		=			
ANR	1137820	Identifier	done		1137567	0					
ANR	1137821	PrimaryExpression	1		1137567	1					
ANR	1137822	IfStatement	if ( done )		1137567	5					
ANR	1137823	Condition	done	1836:5:50606:50609	1137567	0	True				
ANR	1137824	Identifier	done		1137567	0					
ANR	1137825	CompoundStatement		48:11:1341:1341	1137567	1					
ANR	1137826	IfStatement	if ( dst_r == TMP_REG1 )		1137567	0					
ANR	1137827	Condition	dst_r == TMP_REG1	1837:6:50620:50636	1137567	0	True				
ANR	1137828	EqualityExpression	dst_r == TMP_REG1		1137567	0		==			
ANR	1137829	Identifier	dst_r		1137567	0					
ANR	1137830	Identifier	TMP_REG1		1137567	1					
ANR	1137831	ReturnStatement	"return emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) ;"	1838:3:50642:50691	1137567	1	True				
ANR	1137832	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1137567	0					
ANR	1137833	Callee	emit_mov		1137567	0					
ANR	1137834	Identifier	emit_mov		1137567	0					
ANR	1137835	ArgumentList	compiler		1137567	1					
ANR	1137836	Argument	compiler		1137567	0					
ANR	1137837	Identifier	compiler		1137567	0					
ANR	1137838	Argument	dst		1137567	1					
ANR	1137839	Identifier	dst		1137567	0					
ANR	1137840	Argument	dstw		1137567	2					
ANR	1137841	Identifier	dstw		1137567	0					
ANR	1137842	Argument	TMP_REG1		1137567	3					
ANR	1137843	Identifier	TMP_REG1		1137567	0					
ANR	1137844	Argument	0		1137567	4					
ANR	1137845	PrimaryExpression	0		1137567	0					
ANR	1137846	ReturnStatement	return SLJIT_SUCCESS ;	1839:2:50695:50715	1137567	1	True				
ANR	1137847	Identifier	SLJIT_SUCCESS		1137567	0					
ANR	1137848	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1841:1:50721:50749	1137567	6	True				
ANR	1137849	Identifier	SLJIT_ERR_UNSUPPORTED		1137567	0					
ANR	1137850	ReturnType	static sljit_si		1137567	1					
ANR	1137851	Identifier	emit_lea_binary		1137567	2					
ANR	1137852	ParameterList	"struct sljit_compiler * compiler , sljit_si keep_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1137567	3					
ANR	1137853	Parameter	struct sljit_compiler * compiler	1785:32:49122:49152	1137567	0	True				
ANR	1137854	ParameterType	struct sljit_compiler *		1137567	0					
ANR	1137855	Identifier	compiler		1137567	1					
ANR	1137856	Parameter	sljit_si keep_flags	1785:65:49155:49173	1137567	1	True				
ANR	1137857	ParameterType	sljit_si		1137567	0					
ANR	1137858	Identifier	keep_flags		1137567	1					
ANR	1137859	Parameter	sljit_si dst	1786:1:49177:49188	1137567	2	True				
ANR	1137860	ParameterType	sljit_si		1137567	0					
ANR	1137861	Identifier	dst		1137567	1					
ANR	1137862	Parameter	sljit_sw dstw	1786:15:49191:49203	1137567	3	True				
ANR	1137863	ParameterType	sljit_sw		1137567	0					
ANR	1137864	Identifier	dstw		1137567	1					
ANR	1137865	Parameter	sljit_si src1	1787:1:49207:49219	1137567	4	True				
ANR	1137866	ParameterType	sljit_si		1137567	0					
ANR	1137867	Identifier	src1		1137567	1					
ANR	1137868	Parameter	sljit_sw src1w	1787:16:49222:49235	1137567	5	True				
ANR	1137869	ParameterType	sljit_sw		1137567	0					
ANR	1137870	Identifier	src1w		1137567	1					
ANR	1137871	Parameter	sljit_si src2	1788:1:49239:49251	1137567	6	True				
ANR	1137872	ParameterType	sljit_si		1137567	0					
ANR	1137873	Identifier	src2		1137567	1					
ANR	1137874	Parameter	sljit_sw src2w	1788:16:49254:49267	1137567	7	True				
ANR	1137875	ParameterType	sljit_sw		1137567	0					
ANR	1137876	Identifier	src2w		1137567	1					
ANR	1137877	CFGEntryNode	ENTRY		1137567		True				
ANR	1137878	CFGExitNode	EXIT		1137567		True				
ANR	1137879	Symbol	TMP_REG1		1137567						
ANR	1137880	Symbol	src1w		1137567						
ANR	1137881	Symbol	dst		1137567						
ANR	1137882	Symbol	* compiler		1137567						
ANR	1137883	Symbol	dst_r		1137567						
ANR	1137884	Symbol	LEA_r_m		1137567						
ANR	1137885	Symbol	SLJIT_IMM		1137567						
ANR	1137886	Symbol	SLJIT_MEM2		1137567						
ANR	1137887	Symbol	IS_HALFWORD		1137567						
ANR	1137888	Symbol	compiler		1137567						
ANR	1137889	Symbol	src2w		1137567						
ANR	1137890	Symbol	keep_flags		1137567						
ANR	1137891	Symbol	emit_x86_instruction		1137567						
ANR	1137892	Symbol	FAST_IS_REG		1137567						
ANR	1137893	Symbol	* inst		1137567						
ANR	1137894	Symbol	SLJIT_SUCCESS		1137567						
ANR	1137895	Symbol	SLJIT_MEM1		1137567						
ANR	1137896	Symbol	done		1137567						
ANR	1137897	Symbol	emit_mov		1137567						
ANR	1137898	Symbol	inst		1137567						
ANR	1137899	Symbol	src1		1137567						
ANR	1137900	Symbol	compiler -> mode32		1137567						
ANR	1137901	Symbol	src2		1137567						
ANR	1137902	Symbol	dstw		1137567						
ANR	1137903	Symbol	SLJIT_ERR_UNSUPPORTED		1137567						
ANR	1137904	Function	emit_cmp_binary	1844:0:50754:52054							
ANR	1137905	FunctionDef	"emit_cmp_binary (struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1137904	0					
ANR	1137906	CompoundStatement		1847:0:50883:52054	1137904	0					
ANR	1137907	IdentifierDeclStatement	sljit_ub * inst ;	1848:1:50886:50900	1137904	0	True				
ANR	1137908	IdentifierDecl	* inst		1137904	0					
ANR	1137909	IdentifierDeclType	sljit_ub *		1137904	0					
ANR	1137910	Identifier	inst		1137904	1					
ANR	1137911	IfStatement	if ( src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1137904	1					
ANR	1137912	Condition	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1851:5:50965:51079	1137904	0	True				
ANR	1137913	AndExpression	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1137904	0		&&			
ANR	1137914	EqualityExpression	src1 == SLJIT_R0		1137904	0		==			
ANR	1137915	Identifier	src1		1137904	0					
ANR	1137916	Identifier	SLJIT_R0		1137904	1					
ANR	1137917	AndExpression	( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1137904	1		&&			
ANR	1137918	BitAndExpression	src2 & SLJIT_IMM		1137904	0		&			
ANR	1137919	Identifier	src2		1137904	0					
ANR	1137920	Identifier	SLJIT_IMM		1137904	1					
ANR	1137921	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1137904	1		&&			
ANR	1137922	OrExpression	src2w > 127 || src2w < - 128		1137904	0		||			
ANR	1137923	RelationalExpression	src2w > 127		1137904	0		>			
ANR	1137924	Identifier	src2w		1137904	0					
ANR	1137925	PrimaryExpression	127		1137904	1					
ANR	1137926	RelationalExpression	src2w < - 128		1137904	1		<			
ANR	1137927	Identifier	src2w		1137904	0					
ANR	1137928	UnaryOperationExpression	- 128		1137904	1					
ANR	1137929	UnaryOperator	-		1137904	0					
ANR	1137930	PrimaryExpression	128		1137904	1					
ANR	1137931	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1137904	1		||			
ANR	1137932	PtrMemberAccess	compiler -> mode32		1137904	0					
ANR	1137933	Identifier	compiler		1137904	0					
ANR	1137934	Identifier	mode32		1137904	1					
ANR	1137935	CallExpression	IS_HALFWORD ( src2w )		1137904	1					
ANR	1137936	Callee	IS_HALFWORD		1137904	0					
ANR	1137937	Identifier	IS_HALFWORD		1137904	0					
ANR	1137938	ArgumentList	src2w		1137904	1					
ANR	1137939	Argument	src2w		1137904	0					
ANR	1137940	Identifier	src2w		1137904	0					
ANR	1137941	CompoundStatement		5:122:198:198	1137904	1					
ANR	1137942	ExpressionStatement	"BINARY_EAX_IMM ( CMP_EAX_i32 , src2w )"	1855:2:51179:51213	1137904	0	True				
ANR	1137943	CallExpression	"BINARY_EAX_IMM ( CMP_EAX_i32 , src2w )"		1137904	0					
ANR	1137944	Callee	BINARY_EAX_IMM		1137904	0					
ANR	1137945	Identifier	BINARY_EAX_IMM		1137904	0					
ANR	1137946	ArgumentList	CMP_EAX_i32		1137904	1					
ANR	1137947	Argument	CMP_EAX_i32		1137904	0					
ANR	1137948	Identifier	CMP_EAX_i32		1137904	0					
ANR	1137949	Argument	src2w		1137904	1					
ANR	1137950	Identifier	src2w		1137904	0					
ANR	1137951	ReturnStatement	return SLJIT_SUCCESS ;	1856:2:51217:51237	1137904	1	True				
ANR	1137952	Identifier	SLJIT_SUCCESS		1137904	0					
ANR	1137953	IfStatement	if ( FAST_IS_REG ( src1 ) )		1137904	2					
ANR	1137954	Condition	FAST_IS_REG ( src1 )	1859:5:51248:51264	1137904	0	True				
ANR	1137955	CallExpression	FAST_IS_REG ( src1 )		1137904	0					
ANR	1137956	Callee	FAST_IS_REG		1137904	0					
ANR	1137957	Identifier	FAST_IS_REG		1137904	0					
ANR	1137958	ArgumentList	src1		1137904	1					
ANR	1137959	Argument	src1		1137904	0					
ANR	1137960	Identifier	src1		1137904	0					
ANR	1137961	CompoundStatement		13:24:383:383	1137904	1					
ANR	1137962	IfStatement	if ( src2 & SLJIT_IMM )		1137904	0					
ANR	1137963	Condition	src2 & SLJIT_IMM	1860:6:51275:51290	1137904	0	True				
ANR	1137964	BitAndExpression	src2 & SLJIT_IMM		1137904	0		&			
ANR	1137965	Identifier	src2		1137904	0					
ANR	1137966	Identifier	SLJIT_IMM		1137904	1					
ANR	1137967	CompoundStatement		14:24:409:409	1137904	1					
ANR	1137968	ExpressionStatement	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , 0 )"	1861:3:51298:51339	1137904	0	True				
ANR	1137969	CallExpression	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , 0 )"		1137904	0					
ANR	1137970	Callee	BINARY_IMM		1137904	0					
ANR	1137971	Identifier	BINARY_IMM		1137904	0					
ANR	1137972	ArgumentList	CMP		1137904	1					
ANR	1137973	Argument	CMP		1137904	0					
ANR	1137974	Identifier	CMP		1137904	0					
ANR	1137975	Argument	CMP_rm_r		1137904	1					
ANR	1137976	Identifier	CMP_rm_r		1137904	0					
ANR	1137977	Argument	src2w		1137904	2					
ANR	1137978	Identifier	src2w		1137904	0					
ANR	1137979	Argument	src1		1137904	3					
ANR	1137980	Identifier	src1		1137904	0					
ANR	1137981	Argument	0		1137904	4					
ANR	1137982	PrimaryExpression	0		1137904	0					
ANR	1137983	ElseStatement	else		1137904	0					
ANR	1137984	CompoundStatement		17:7:468:468	1137904	0					
ANR	1137985	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"	1864:3:51357:51419	1137904	0	True				
ANR	1137986	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1137904	0		=			
ANR	1137987	Identifier	inst		1137904	0					
ANR	1137988	CallExpression	"emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1137904	1					
ANR	1137989	Callee	emit_x86_instruction		1137904	0					
ANR	1137990	Identifier	emit_x86_instruction		1137904	0					
ANR	1137991	ArgumentList	compiler		1137904	1					
ANR	1137992	Argument	compiler		1137904	0					
ANR	1137993	Identifier	compiler		1137904	0					
ANR	1137994	Argument	1		1137904	1					
ANR	1137995	PrimaryExpression	1		1137904	0					
ANR	1137996	Argument	src1		1137904	2					
ANR	1137997	Identifier	src1		1137904	0					
ANR	1137998	Argument	0		1137904	3					
ANR	1137999	PrimaryExpression	0		1137904	0					
ANR	1138000	Argument	src2		1137904	4					
ANR	1138001	Identifier	src2		1137904	0					
ANR	1138002	Argument	src2w		1137904	5					
ANR	1138003	Identifier	src2w		1137904	0					
ANR	1138004	ExpressionStatement	FAIL_IF ( ! inst )	1865:3:51424:51438	1137904	1	True				
ANR	1138005	CallExpression	FAIL_IF ( ! inst )		1137904	0					
ANR	1138006	Callee	FAIL_IF		1137904	0					
ANR	1138007	Identifier	FAIL_IF		1137904	0					
ANR	1138008	ArgumentList	! inst		1137904	1					
ANR	1138009	Argument	! inst		1137904	0					
ANR	1138010	UnaryOperationExpression	! inst		1137904	0					
ANR	1138011	UnaryOperator	!		1137904	0					
ANR	1138012	Identifier	inst		1137904	1					
ANR	1138013	ExpressionStatement	* inst = CMP_r_rm	1866:3:51443:51459	1137904	2	True				
ANR	1138014	AssignmentExpression	* inst = CMP_r_rm		1137904	0		=			
ANR	1138015	UnaryOperationExpression	* inst		1137904	0					
ANR	1138016	UnaryOperator	*		1137904	0					
ANR	1138017	Identifier	inst		1137904	1					
ANR	1138018	Identifier	CMP_r_rm		1137904	1					
ANR	1138019	ReturnStatement	return SLJIT_SUCCESS ;	1868:2:51467:51487	1137904	1	True				
ANR	1138020	Identifier	SLJIT_SUCCESS		1137904	0					
ANR	1138021	IfStatement	if ( FAST_IS_REG ( src2 ) && ! ( src1 & SLJIT_IMM ) )		1137904	3					
ANR	1138022	Condition	FAST_IS_REG ( src2 ) && ! ( src1 & SLJIT_IMM )	1871:5:51498:51537	1137904	0	True				
ANR	1138023	AndExpression	FAST_IS_REG ( src2 ) && ! ( src1 & SLJIT_IMM )		1137904	0		&&			
ANR	1138024	CallExpression	FAST_IS_REG ( src2 )		1137904	0					
ANR	1138025	Callee	FAST_IS_REG		1137904	0					
ANR	1138026	Identifier	FAST_IS_REG		1137904	0					
ANR	1138027	ArgumentList	src2		1137904	1					
ANR	1138028	Argument	src2		1137904	0					
ANR	1138029	Identifier	src2		1137904	0					
ANR	1138030	UnaryOperationExpression	! ( src1 & SLJIT_IMM )		1137904	1					
ANR	1138031	UnaryOperator	!		1137904	0					
ANR	1138032	BitAndExpression	src1 & SLJIT_IMM		1137904	1		&			
ANR	1138033	Identifier	src1		1137904	0					
ANR	1138034	Identifier	SLJIT_IMM		1137904	1					
ANR	1138035	CompoundStatement		25:47:656:656	1137904	1					
ANR	1138036	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"	1872:2:51544:51606	1137904	0	True				
ANR	1138037	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1137904	0		=			
ANR	1138038	Identifier	inst		1137904	0					
ANR	1138039	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1137904	1					
ANR	1138040	Callee	emit_x86_instruction		1137904	0					
ANR	1138041	Identifier	emit_x86_instruction		1137904	0					
ANR	1138042	ArgumentList	compiler		1137904	1					
ANR	1138043	Argument	compiler		1137904	0					
ANR	1138044	Identifier	compiler		1137904	0					
ANR	1138045	Argument	1		1137904	1					
ANR	1138046	PrimaryExpression	1		1137904	0					
ANR	1138047	Argument	src2		1137904	2					
ANR	1138048	Identifier	src2		1137904	0					
ANR	1138049	Argument	0		1137904	3					
ANR	1138050	PrimaryExpression	0		1137904	0					
ANR	1138051	Argument	src1		1137904	4					
ANR	1138052	Identifier	src1		1137904	0					
ANR	1138053	Argument	src1w		1137904	5					
ANR	1138054	Identifier	src1w		1137904	0					
ANR	1138055	ExpressionStatement	FAIL_IF ( ! inst )	1873:2:51610:51624	1137904	1	True				
ANR	1138056	CallExpression	FAIL_IF ( ! inst )		1137904	0					
ANR	1138057	Callee	FAIL_IF		1137904	0					
ANR	1138058	Identifier	FAIL_IF		1137904	0					
ANR	1138059	ArgumentList	! inst		1137904	1					
ANR	1138060	Argument	! inst		1137904	0					
ANR	1138061	UnaryOperationExpression	! inst		1137904	0					
ANR	1138062	UnaryOperator	!		1137904	0					
ANR	1138063	Identifier	inst		1137904	1					
ANR	1138064	ExpressionStatement	* inst = CMP_rm_r	1874:2:51628:51644	1137904	2	True				
ANR	1138065	AssignmentExpression	* inst = CMP_rm_r		1137904	0		=			
ANR	1138066	UnaryOperationExpression	* inst		1137904	0					
ANR	1138067	UnaryOperator	*		1137904	0					
ANR	1138068	Identifier	inst		1137904	1					
ANR	1138069	Identifier	CMP_rm_r		1137904	1					
ANR	1138070	ReturnStatement	return SLJIT_SUCCESS ;	1875:2:51648:51668	1137904	3	True				
ANR	1138071	Identifier	SLJIT_SUCCESS		1137904	0					
ANR	1138072	IfStatement	if ( src2 & SLJIT_IMM )		1137904	4					
ANR	1138073	Condition	src2 & SLJIT_IMM	1878:5:51679:51694	1137904	0	True				
ANR	1138074	BitAndExpression	src2 & SLJIT_IMM		1137904	0		&			
ANR	1138075	Identifier	src2		1137904	0					
ANR	1138076	Identifier	SLJIT_IMM		1137904	1					
ANR	1138077	CompoundStatement		32:23:813:813	1137904	1					
ANR	1138078	IfStatement	if ( src1 & SLJIT_IMM )		1137904	0					
ANR	1138079	Condition	src1 & SLJIT_IMM	1879:6:51705:51720	1137904	0	True				
ANR	1138080	BitAndExpression	src1 & SLJIT_IMM		1137904	0		&			
ANR	1138081	Identifier	src1		1137904	0					
ANR	1138082	Identifier	SLJIT_IMM		1137904	1					
ANR	1138083	CompoundStatement		33:24:839:839	1137904	1					
ANR	1138084	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1880:3:51728:51772	1137904	0	True				
ANR	1138085	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1137904	0					
ANR	1138086	Callee	EMIT_MOV		1137904	0					
ANR	1138087	Identifier	EMIT_MOV		1137904	0					
ANR	1138088	ArgumentList	compiler		1137904	1					
ANR	1138089	Argument	compiler		1137904	0					
ANR	1138090	Identifier	compiler		1137904	0					
ANR	1138091	Argument	TMP_REG1		1137904	1					
ANR	1138092	Identifier	TMP_REG1		1137904	0					
ANR	1138093	Argument	0		1137904	2					
ANR	1138094	PrimaryExpression	0		1137904	0					
ANR	1138095	Argument	src1		1137904	3					
ANR	1138096	Identifier	src1		1137904	0					
ANR	1138097	Argument	src1w		1137904	4					
ANR	1138098	Identifier	src1w		1137904	0					
ANR	1138099	ExpressionStatement	src1 = TMP_REG1	1881:3:51777:51792	1137904	1	True				
ANR	1138100	AssignmentExpression	src1 = TMP_REG1		1137904	0		=			
ANR	1138101	Identifier	src1		1137904	0					
ANR	1138102	Identifier	TMP_REG1		1137904	1					
ANR	1138103	ExpressionStatement	src1w = 0	1882:3:51797:51806	1137904	2	True				
ANR	1138104	AssignmentExpression	src1w = 0		1137904	0		=			
ANR	1138105	Identifier	src1w		1137904	0					
ANR	1138106	PrimaryExpression	0		1137904	1					
ANR	1138107	ExpressionStatement	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , src1w )"	1884:2:51814:51859	1137904	1	True				
ANR	1138108	CallExpression	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , src1w )"		1137904	0					
ANR	1138109	Callee	BINARY_IMM		1137904	0					
ANR	1138110	Identifier	BINARY_IMM		1137904	0					
ANR	1138111	ArgumentList	CMP		1137904	1					
ANR	1138112	Argument	CMP		1137904	0					
ANR	1138113	Identifier	CMP		1137904	0					
ANR	1138114	Argument	CMP_rm_r		1137904	1					
ANR	1138115	Identifier	CMP_rm_r		1137904	0					
ANR	1138116	Argument	src2w		1137904	2					
ANR	1138117	Identifier	src2w		1137904	0					
ANR	1138118	Argument	src1		1137904	3					
ANR	1138119	Identifier	src1		1137904	0					
ANR	1138120	Argument	src1w		1137904	4					
ANR	1138121	Identifier	src1w		1137904	0					
ANR	1138122	ElseStatement	else		1137904	0					
ANR	1138123	CompoundStatement		40:6:986:986	1137904	0					
ANR	1138124	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1887:2:51874:51918	1137904	0	True				
ANR	1138125	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1137904	0					
ANR	1138126	Callee	EMIT_MOV		1137904	0					
ANR	1138127	Identifier	EMIT_MOV		1137904	0					
ANR	1138128	ArgumentList	compiler		1137904	1					
ANR	1138129	Argument	compiler		1137904	0					
ANR	1138130	Identifier	compiler		1137904	0					
ANR	1138131	Argument	TMP_REG1		1137904	1					
ANR	1138132	Identifier	TMP_REG1		1137904	0					
ANR	1138133	Argument	0		1137904	2					
ANR	1138134	PrimaryExpression	0		1137904	0					
ANR	1138135	Argument	src1		1137904	3					
ANR	1138136	Identifier	src1		1137904	0					
ANR	1138137	Argument	src1w		1137904	4					
ANR	1138138	Identifier	src1w		1137904	0					
ANR	1138139	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1888:2:51922:51988	1137904	1	True				
ANR	1138140	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1137904	0		=			
ANR	1138141	Identifier	inst		1137904	0					
ANR	1138142	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1137904	1					
ANR	1138143	Callee	emit_x86_instruction		1137904	0					
ANR	1138144	Identifier	emit_x86_instruction		1137904	0					
ANR	1138145	ArgumentList	compiler		1137904	1					
ANR	1138146	Argument	compiler		1137904	0					
ANR	1138147	Identifier	compiler		1137904	0					
ANR	1138148	Argument	1		1137904	1					
ANR	1138149	PrimaryExpression	1		1137904	0					
ANR	1138150	Argument	TMP_REG1		1137904	2					
ANR	1138151	Identifier	TMP_REG1		1137904	0					
ANR	1138152	Argument	0		1137904	3					
ANR	1138153	PrimaryExpression	0		1137904	0					
ANR	1138154	Argument	src2		1137904	4					
ANR	1138155	Identifier	src2		1137904	0					
ANR	1138156	Argument	src2w		1137904	5					
ANR	1138157	Identifier	src2w		1137904	0					
ANR	1138158	ExpressionStatement	FAIL_IF ( ! inst )	1889:2:51992:52006	1137904	2	True				
ANR	1138159	CallExpression	FAIL_IF ( ! inst )		1137904	0					
ANR	1138160	Callee	FAIL_IF		1137904	0					
ANR	1138161	Identifier	FAIL_IF		1137904	0					
ANR	1138162	ArgumentList	! inst		1137904	1					
ANR	1138163	Argument	! inst		1137904	0					
ANR	1138164	UnaryOperationExpression	! inst		1137904	0					
ANR	1138165	UnaryOperator	!		1137904	0					
ANR	1138166	Identifier	inst		1137904	1					
ANR	1138167	ExpressionStatement	* inst = CMP_r_rm	1890:2:52010:52026	1137904	3	True				
ANR	1138168	AssignmentExpression	* inst = CMP_r_rm		1137904	0		=			
ANR	1138169	UnaryOperationExpression	* inst		1137904	0					
ANR	1138170	UnaryOperator	*		1137904	0					
ANR	1138171	Identifier	inst		1137904	1					
ANR	1138172	Identifier	CMP_r_rm		1137904	1					
ANR	1138173	ReturnStatement	return SLJIT_SUCCESS ;	1892:1:52032:52052	1137904	5	True				
ANR	1138174	Identifier	SLJIT_SUCCESS		1137904	0					
ANR	1138175	ReturnType	static sljit_si		1137904	1					
ANR	1138176	Identifier	emit_cmp_binary		1137904	2					
ANR	1138177	ParameterList	"struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1137904	3					
ANR	1138178	Parameter	struct sljit_compiler * compiler	1844:32:50786:50816	1137904	0	True				
ANR	1138179	ParameterType	struct sljit_compiler *		1137904	0					
ANR	1138180	Identifier	compiler		1137904	1					
ANR	1138181	Parameter	sljit_si src1	1845:1:50820:50832	1137904	1	True				
ANR	1138182	ParameterType	sljit_si		1137904	0					
ANR	1138183	Identifier	src1		1137904	1					
ANR	1138184	Parameter	sljit_sw src1w	1845:16:50835:50848	1137904	2	True				
ANR	1138185	ParameterType	sljit_sw		1137904	0					
ANR	1138186	Identifier	src1w		1137904	1					
ANR	1138187	Parameter	sljit_si src2	1846:1:50852:50864	1137904	3	True				
ANR	1138188	ParameterType	sljit_si		1137904	0					
ANR	1138189	Identifier	src2		1137904	1					
ANR	1138190	Parameter	sljit_sw src2w	1846:16:50867:50880	1137904	4	True				
ANR	1138191	ParameterType	sljit_sw		1137904	0					
ANR	1138192	Identifier	src2w		1137904	1					
ANR	1138193	CFGEntryNode	ENTRY		1137904		True				
ANR	1138194	CFGExitNode	EXIT		1137904		True				
ANR	1138195	Symbol	src2w		1137904						
ANR	1138196	Symbol	emit_x86_instruction		1137904						
ANR	1138197	Symbol	TMP_REG1		1137904						
ANR	1138198	Symbol	src1w		1137904						
ANR	1138199	Symbol	FAST_IS_REG		1137904						
ANR	1138200	Symbol	CMP_r_rm		1137904						
ANR	1138201	Symbol	* inst		1137904						
ANR	1138202	Symbol	CMP_rm_r		1137904						
ANR	1138203	Symbol	CMP		1137904						
ANR	1138204	Symbol	SLJIT_SUCCESS		1137904						
ANR	1138205	Symbol	* compiler		1137904						
ANR	1138206	Symbol	CMP_EAX_i32		1137904						
ANR	1138207	Symbol	SLJIT_R0		1137904						
ANR	1138208	Symbol	SLJIT_IMM		1137904						
ANR	1138209	Symbol	inst		1137904						
ANR	1138210	Symbol	src1		1137904						
ANR	1138211	Symbol	compiler -> mode32		1137904						
ANR	1138212	Symbol	IS_HALFWORD		1137904						
ANR	1138213	Symbol	src2		1137904						
ANR	1138214	Symbol	compiler		1137904						
ANR	1138215	Function	emit_test_binary	1895:0:52057:55238							
ANR	1138216	FunctionDef	"emit_test_binary (struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1138215	0					
ANR	1138217	CompoundStatement		1898:0:52187:55238	1138215	0					
ANR	1138218	IdentifierDeclStatement	sljit_ub * inst ;	1899:1:52190:52204	1138215	0	True				
ANR	1138219	IdentifierDecl	* inst		1138215	0					
ANR	1138220	IdentifierDeclType	sljit_ub *		1138215	0					
ANR	1138221	Identifier	inst		1138215	1					
ANR	1138222	IfStatement	if ( src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1138215	1					
ANR	1138223	Condition	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1902:5:52269:52383	1138215	0	True				
ANR	1138224	AndExpression	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1138215	0		&&			
ANR	1138225	EqualityExpression	src1 == SLJIT_R0		1138215	0		==			
ANR	1138226	Identifier	src1		1138215	0					
ANR	1138227	Identifier	SLJIT_R0		1138215	1					
ANR	1138228	AndExpression	( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1138215	1		&&			
ANR	1138229	BitAndExpression	src2 & SLJIT_IMM		1138215	0		&			
ANR	1138230	Identifier	src2		1138215	0					
ANR	1138231	Identifier	SLJIT_IMM		1138215	1					
ANR	1138232	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1138215	1		&&			
ANR	1138233	OrExpression	src2w > 127 || src2w < - 128		1138215	0		||			
ANR	1138234	RelationalExpression	src2w > 127		1138215	0		>			
ANR	1138235	Identifier	src2w		1138215	0					
ANR	1138236	PrimaryExpression	127		1138215	1					
ANR	1138237	RelationalExpression	src2w < - 128		1138215	1		<			
ANR	1138238	Identifier	src2w		1138215	0					
ANR	1138239	UnaryOperationExpression	- 128		1138215	1					
ANR	1138240	UnaryOperator	-		1138215	0					
ANR	1138241	PrimaryExpression	128		1138215	1					
ANR	1138242	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1138215	1		||			
ANR	1138243	PtrMemberAccess	compiler -> mode32		1138215	0					
ANR	1138244	Identifier	compiler		1138215	0					
ANR	1138245	Identifier	mode32		1138215	1					
ANR	1138246	CallExpression	IS_HALFWORD ( src2w )		1138215	1					
ANR	1138247	Callee	IS_HALFWORD		1138215	0					
ANR	1138248	Identifier	IS_HALFWORD		1138215	0					
ANR	1138249	ArgumentList	src2w		1138215	1					
ANR	1138250	Argument	src2w		1138215	0					
ANR	1138251	Identifier	src2w		1138215	0					
ANR	1138252	CompoundStatement		5:122:198:198	1138215	1					
ANR	1138253	ExpressionStatement	"BINARY_EAX_IMM ( TEST_EAX_i32 , src2w )"	1906:2:52483:52518	1138215	0	True				
ANR	1138254	CallExpression	"BINARY_EAX_IMM ( TEST_EAX_i32 , src2w )"		1138215	0					
ANR	1138255	Callee	BINARY_EAX_IMM		1138215	0					
ANR	1138256	Identifier	BINARY_EAX_IMM		1138215	0					
ANR	1138257	ArgumentList	TEST_EAX_i32		1138215	1					
ANR	1138258	Argument	TEST_EAX_i32		1138215	0					
ANR	1138259	Identifier	TEST_EAX_i32		1138215	0					
ANR	1138260	Argument	src2w		1138215	1					
ANR	1138261	Identifier	src2w		1138215	0					
ANR	1138262	ReturnStatement	return SLJIT_SUCCESS ;	1907:2:52522:52542	1138215	1	True				
ANR	1138263	Identifier	SLJIT_SUCCESS		1138215	0					
ANR	1138264	IfStatement	if ( src2 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) ) )		1138215	2					
ANR	1138265	Condition	src2 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )	1911:5:52610:52724	1138215	0	True				
ANR	1138266	AndExpression	src2 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1138215	0		&&			
ANR	1138267	EqualityExpression	src2 == SLJIT_R0		1138215	0		==			
ANR	1138268	Identifier	src2		1138215	0					
ANR	1138269	Identifier	SLJIT_R0		1138215	1					
ANR	1138270	AndExpression	( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1138215	1		&&			
ANR	1138271	BitAndExpression	src2 & SLJIT_IMM		1138215	0		&			
ANR	1138272	Identifier	src2		1138215	0					
ANR	1138273	Identifier	SLJIT_IMM		1138215	1					
ANR	1138274	AndExpression	( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1138215	1		&&			
ANR	1138275	OrExpression	src1w > 127 || src1w < - 128		1138215	0		||			
ANR	1138276	RelationalExpression	src1w > 127		1138215	0		>			
ANR	1138277	Identifier	src1w		1138215	0					
ANR	1138278	PrimaryExpression	127		1138215	1					
ANR	1138279	RelationalExpression	src1w < - 128		1138215	1		<			
ANR	1138280	Identifier	src1w		1138215	0					
ANR	1138281	UnaryOperationExpression	- 128		1138215	1					
ANR	1138282	UnaryOperator	-		1138215	0					
ANR	1138283	PrimaryExpression	128		1138215	1					
ANR	1138284	OrExpression	compiler -> mode32 || IS_HALFWORD ( src1w )		1138215	1		||			
ANR	1138285	PtrMemberAccess	compiler -> mode32		1138215	0					
ANR	1138286	Identifier	compiler		1138215	0					
ANR	1138287	Identifier	mode32		1138215	1					
ANR	1138288	CallExpression	IS_HALFWORD ( src1w )		1138215	1					
ANR	1138289	Callee	IS_HALFWORD		1138215	0					
ANR	1138290	Identifier	IS_HALFWORD		1138215	0					
ANR	1138291	ArgumentList	src1w		1138215	1					
ANR	1138292	Argument	src1w		1138215	0					
ANR	1138293	Identifier	src1w		1138215	0					
ANR	1138294	CompoundStatement		14:122:539:539	1138215	1					
ANR	1138295	ExpressionStatement	"BINARY_EAX_IMM ( TEST_EAX_i32 , src1w )"	1915:2:52824:52859	1138215	0	True				
ANR	1138296	CallExpression	"BINARY_EAX_IMM ( TEST_EAX_i32 , src1w )"		1138215	0					
ANR	1138297	Callee	BINARY_EAX_IMM		1138215	0					
ANR	1138298	Identifier	BINARY_EAX_IMM		1138215	0					
ANR	1138299	ArgumentList	TEST_EAX_i32		1138215	1					
ANR	1138300	Argument	TEST_EAX_i32		1138215	0					
ANR	1138301	Identifier	TEST_EAX_i32		1138215	0					
ANR	1138302	Argument	src1w		1138215	1					
ANR	1138303	Identifier	src1w		1138215	0					
ANR	1138304	ReturnStatement	return SLJIT_SUCCESS ;	1916:2:52863:52883	1138215	1	True				
ANR	1138305	Identifier	SLJIT_SUCCESS		1138215	0					
ANR	1138306	IfStatement	if ( ! ( src1 & SLJIT_IMM ) )		1138215	3					
ANR	1138307	Condition	! ( src1 & SLJIT_IMM )	1919:5:52894:52912	1138215	0	True				
ANR	1138308	UnaryOperationExpression	! ( src1 & SLJIT_IMM )		1138215	0					
ANR	1138309	UnaryOperator	!		1138215	0					
ANR	1138310	BitAndExpression	src1 & SLJIT_IMM		1138215	1		&			
ANR	1138311	Identifier	src1		1138215	0					
ANR	1138312	Identifier	SLJIT_IMM		1138215	1					
ANR	1138313	CompoundStatement		22:26:727:727	1138215	1					
ANR	1138314	IfStatement	if ( src2 & SLJIT_IMM )		1138215	0					
ANR	1138315	Condition	src2 & SLJIT_IMM	1920:6:52923:52938	1138215	0	True				
ANR	1138316	BitAndExpression	src2 & SLJIT_IMM		1138215	0		&			
ANR	1138317	Identifier	src2		1138215	0					
ANR	1138318	Identifier	SLJIT_IMM		1138215	1					
ANR	1138319	CompoundStatement		23:24:753:753	1138215	1					
ANR	1138320	IfStatement	if ( IS_HALFWORD ( src2w ) || compiler -> mode32 )		1138215	0					
ANR	1138321	Condition	IS_HALFWORD ( src2w ) || compiler -> mode32	1922:7:53007:53044	1138215	0	True				
ANR	1138322	OrExpression	IS_HALFWORD ( src2w ) || compiler -> mode32		1138215	0		||			
ANR	1138323	CallExpression	IS_HALFWORD ( src2w )		1138215	0					
ANR	1138324	Callee	IS_HALFWORD		1138215	0					
ANR	1138325	Identifier	IS_HALFWORD		1138215	0					
ANR	1138326	ArgumentList	src2w		1138215	1					
ANR	1138327	Argument	src2w		1138215	0					
ANR	1138328	Identifier	src2w		1138215	0					
ANR	1138329	PtrMemberAccess	compiler -> mode32		1138215	1					
ANR	1138330	Identifier	compiler		1138215	0					
ANR	1138331	Identifier	mode32		1138215	1					
ANR	1138332	CompoundStatement		25:47:859:859	1138215	1					
ANR	1138333	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , src1 , src1w )"	1923:4:53053:53124	1138215	0	True				
ANR	1138334	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , src1 , src1w )"		1138215	0		=			
ANR	1138335	Identifier	inst		1138215	0					
ANR	1138336	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , src1 , src1w )"		1138215	1					
ANR	1138337	Callee	emit_x86_instruction		1138215	0					
ANR	1138338	Identifier	emit_x86_instruction		1138215	0					
ANR	1138339	ArgumentList	compiler		1138215	1					
ANR	1138340	Argument	compiler		1138215	0					
ANR	1138341	Identifier	compiler		1138215	0					
ANR	1138342	Argument	1		1138215	1					
ANR	1138343	PrimaryExpression	1		1138215	0					
ANR	1138344	Argument	SLJIT_IMM		1138215	2					
ANR	1138345	Identifier	SLJIT_IMM		1138215	0					
ANR	1138346	Argument	src2w		1138215	3					
ANR	1138347	Identifier	src2w		1138215	0					
ANR	1138348	Argument	src1		1138215	4					
ANR	1138349	Identifier	src1		1138215	0					
ANR	1138350	Argument	src1w		1138215	5					
ANR	1138351	Identifier	src1w		1138215	0					
ANR	1138352	ExpressionStatement	FAIL_IF ( ! inst )	1924:4:53130:53144	1138215	1	True				
ANR	1138353	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138354	Callee	FAIL_IF		1138215	0					
ANR	1138355	Identifier	FAIL_IF		1138215	0					
ANR	1138356	ArgumentList	! inst		1138215	1					
ANR	1138357	Argument	! inst		1138215	0					
ANR	1138358	UnaryOperationExpression	! inst		1138215	0					
ANR	1138359	UnaryOperator	!		1138215	0					
ANR	1138360	Identifier	inst		1138215	1					
ANR	1138361	ExpressionStatement	* inst = GROUP_F7	1925:4:53150:53166	1138215	2	True				
ANR	1138362	AssignmentExpression	* inst = GROUP_F7		1138215	0		=			
ANR	1138363	UnaryOperationExpression	* inst		1138215	0					
ANR	1138364	UnaryOperator	*		1138215	0					
ANR	1138365	Identifier	inst		1138215	1					
ANR	1138366	Identifier	GROUP_F7		1138215	1					
ANR	1138367	ElseStatement	else		1138215	0					
ANR	1138368	CompoundStatement		30:8:993:993	1138215	0					
ANR	1138369	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"	1928:4:53187:53238	1138215	0	True				
ANR	1138370	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"		1138215	0					
ANR	1138371	Callee	FAIL_IF		1138215	0					
ANR	1138372	Identifier	FAIL_IF		1138215	0					
ANR	1138373	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1138215	1					
ANR	1138374	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1138215	0					
ANR	1138375	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1138215	0					
ANR	1138376	Callee	emit_load_imm64		1138215	0					
ANR	1138377	Identifier	emit_load_imm64		1138215	0					
ANR	1138378	ArgumentList	compiler		1138215	1					
ANR	1138379	Argument	compiler		1138215	0					
ANR	1138380	Identifier	compiler		1138215	0					
ANR	1138381	Argument	TMP_REG2		1138215	1					
ANR	1138382	Identifier	TMP_REG2		1138215	0					
ANR	1138383	Argument	src2w		1138215	2					
ANR	1138384	Identifier	src2w		1138215	0					
ANR	1138385	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src1 , src1w )"	1929:4:53244:53310	1138215	1	True				
ANR	1138386	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src1 , src1w )"		1138215	0		=			
ANR	1138387	Identifier	inst		1138215	0					
ANR	1138388	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src1 , src1w )"		1138215	1					
ANR	1138389	Callee	emit_x86_instruction		1138215	0					
ANR	1138390	Identifier	emit_x86_instruction		1138215	0					
ANR	1138391	ArgumentList	compiler		1138215	1					
ANR	1138392	Argument	compiler		1138215	0					
ANR	1138393	Identifier	compiler		1138215	0					
ANR	1138394	Argument	1		1138215	1					
ANR	1138395	PrimaryExpression	1		1138215	0					
ANR	1138396	Argument	TMP_REG2		1138215	2					
ANR	1138397	Identifier	TMP_REG2		1138215	0					
ANR	1138398	Argument	0		1138215	3					
ANR	1138399	PrimaryExpression	0		1138215	0					
ANR	1138400	Argument	src1		1138215	4					
ANR	1138401	Identifier	src1		1138215	0					
ANR	1138402	Argument	src1w		1138215	5					
ANR	1138403	Identifier	src1w		1138215	0					
ANR	1138404	ExpressionStatement	FAIL_IF ( ! inst )	1930:4:53316:53330	1138215	2	True				
ANR	1138405	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138406	Callee	FAIL_IF		1138215	0					
ANR	1138407	Identifier	FAIL_IF		1138215	0					
ANR	1138408	ArgumentList	! inst		1138215	1					
ANR	1138409	Argument	! inst		1138215	0					
ANR	1138410	UnaryOperationExpression	! inst		1138215	0					
ANR	1138411	UnaryOperator	!		1138215	0					
ANR	1138412	Identifier	inst		1138215	1					
ANR	1138413	ExpressionStatement	* inst = TEST_rm_r	1931:4:53336:53353	1138215	3	True				
ANR	1138414	AssignmentExpression	* inst = TEST_rm_r		1138215	0		=			
ANR	1138415	UnaryOperationExpression	* inst		1138215	0					
ANR	1138416	UnaryOperator	*		1138215	0					
ANR	1138417	Identifier	inst		1138215	1					
ANR	1138418	Identifier	TEST_rm_r		1138215	1					
ANR	1138419	ReturnStatement	return SLJIT_SUCCESS ;	1938:3:53492:53512	1138215	1	True				
ANR	1138420	Identifier	SLJIT_SUCCESS		1138215	0					
ANR	1138421	ElseStatement	else		1138215	0					
ANR	1138422	IfStatement	if ( FAST_IS_REG ( src1 ) )		1138215	0					
ANR	1138423	Condition	FAST_IS_REG ( src1 )	1940:11:53529:53545	1138215	0	True				
ANR	1138424	CallExpression	FAST_IS_REG ( src1 )		1138215	0					
ANR	1138425	Callee	FAST_IS_REG		1138215	0					
ANR	1138426	Identifier	FAST_IS_REG		1138215	0					
ANR	1138427	ArgumentList	src1		1138215	1					
ANR	1138428	Argument	src1		1138215	0					
ANR	1138429	Identifier	src1		1138215	0					
ANR	1138430	CompoundStatement		43:30:1360:1360	1138215	1					
ANR	1138431	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"	1941:3:53553:53615	1138215	0	True				
ANR	1138432	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1138215	0		=			
ANR	1138433	Identifier	inst		1138215	0					
ANR	1138434	CallExpression	"emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1138215	1					
ANR	1138435	Callee	emit_x86_instruction		1138215	0					
ANR	1138436	Identifier	emit_x86_instruction		1138215	0					
ANR	1138437	ArgumentList	compiler		1138215	1					
ANR	1138438	Argument	compiler		1138215	0					
ANR	1138439	Identifier	compiler		1138215	0					
ANR	1138440	Argument	1		1138215	1					
ANR	1138441	PrimaryExpression	1		1138215	0					
ANR	1138442	Argument	src1		1138215	2					
ANR	1138443	Identifier	src1		1138215	0					
ANR	1138444	Argument	0		1138215	3					
ANR	1138445	PrimaryExpression	0		1138215	0					
ANR	1138446	Argument	src2		1138215	4					
ANR	1138447	Identifier	src2		1138215	0					
ANR	1138448	Argument	src2w		1138215	5					
ANR	1138449	Identifier	src2w		1138215	0					
ANR	1138450	ExpressionStatement	FAIL_IF ( ! inst )	1942:3:53620:53634	1138215	1	True				
ANR	1138451	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138452	Callee	FAIL_IF		1138215	0					
ANR	1138453	Identifier	FAIL_IF		1138215	0					
ANR	1138454	ArgumentList	! inst		1138215	1					
ANR	1138455	Argument	! inst		1138215	0					
ANR	1138456	UnaryOperationExpression	! inst		1138215	0					
ANR	1138457	UnaryOperator	!		1138215	0					
ANR	1138458	Identifier	inst		1138215	1					
ANR	1138459	ExpressionStatement	* inst = TEST_rm_r	1943:3:53639:53656	1138215	2	True				
ANR	1138460	AssignmentExpression	* inst = TEST_rm_r		1138215	0		=			
ANR	1138461	UnaryOperationExpression	* inst		1138215	0					
ANR	1138462	UnaryOperator	*		1138215	0					
ANR	1138463	Identifier	inst		1138215	1					
ANR	1138464	Identifier	TEST_rm_r		1138215	1					
ANR	1138465	ReturnStatement	return SLJIT_SUCCESS ;	1944:3:53661:53681	1138215	3	True				
ANR	1138466	Identifier	SLJIT_SUCCESS		1138215	0					
ANR	1138467	IfStatement	if ( ! ( src2 & SLJIT_IMM ) )		1138215	4					
ANR	1138468	Condition	! ( src2 & SLJIT_IMM )	1948:5:53696:53714	1138215	0	True				
ANR	1138469	UnaryOperationExpression	! ( src2 & SLJIT_IMM )		1138215	0					
ANR	1138470	UnaryOperator	!		1138215	0					
ANR	1138471	BitAndExpression	src2 & SLJIT_IMM		1138215	1		&			
ANR	1138472	Identifier	src2		1138215	0					
ANR	1138473	Identifier	SLJIT_IMM		1138215	1					
ANR	1138474	CompoundStatement		51:26:1529:1529	1138215	1					
ANR	1138475	IfStatement	if ( src1 & SLJIT_IMM )		1138215	0					
ANR	1138476	Condition	src1 & SLJIT_IMM	1949:6:53725:53740	1138215	0	True				
ANR	1138477	BitAndExpression	src1 & SLJIT_IMM		1138215	0		&			
ANR	1138478	Identifier	src1		1138215	0					
ANR	1138479	Identifier	SLJIT_IMM		1138215	1					
ANR	1138480	CompoundStatement		52:24:1555:1555	1138215	1					
ANR	1138481	IfStatement	if ( IS_HALFWORD ( src1w ) || compiler -> mode32 )		1138215	0					
ANR	1138482	Condition	IS_HALFWORD ( src1w ) || compiler -> mode32	1951:7:53809:53846	1138215	0	True				
ANR	1138483	OrExpression	IS_HALFWORD ( src1w ) || compiler -> mode32		1138215	0		||			
ANR	1138484	CallExpression	IS_HALFWORD ( src1w )		1138215	0					
ANR	1138485	Callee	IS_HALFWORD		1138215	0					
ANR	1138486	Identifier	IS_HALFWORD		1138215	0					
ANR	1138487	ArgumentList	src1w		1138215	1					
ANR	1138488	Argument	src1w		1138215	0					
ANR	1138489	Identifier	src1w		1138215	0					
ANR	1138490	PtrMemberAccess	compiler -> mode32		1138215	1					
ANR	1138491	Identifier	compiler		1138215	0					
ANR	1138492	Identifier	mode32		1138215	1					
ANR	1138493	CompoundStatement		54:47:1661:1661	1138215	1					
ANR	1138494	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src1w , src2 , src2w )"	1952:4:53855:53926	1138215	0	True				
ANR	1138495	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src1w , src2 , src2w )"		1138215	0		=			
ANR	1138496	Identifier	inst		1138215	0					
ANR	1138497	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src1w , src2 , src2w )"		1138215	1					
ANR	1138498	Callee	emit_x86_instruction		1138215	0					
ANR	1138499	Identifier	emit_x86_instruction		1138215	0					
ANR	1138500	ArgumentList	compiler		1138215	1					
ANR	1138501	Argument	compiler		1138215	0					
ANR	1138502	Identifier	compiler		1138215	0					
ANR	1138503	Argument	1		1138215	1					
ANR	1138504	PrimaryExpression	1		1138215	0					
ANR	1138505	Argument	SLJIT_IMM		1138215	2					
ANR	1138506	Identifier	SLJIT_IMM		1138215	0					
ANR	1138507	Argument	src1w		1138215	3					
ANR	1138508	Identifier	src1w		1138215	0					
ANR	1138509	Argument	src2		1138215	4					
ANR	1138510	Identifier	src2		1138215	0					
ANR	1138511	Argument	src2w		1138215	5					
ANR	1138512	Identifier	src2w		1138215	0					
ANR	1138513	ExpressionStatement	FAIL_IF ( ! inst )	1953:4:53932:53946	1138215	1	True				
ANR	1138514	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138515	Callee	FAIL_IF		1138215	0					
ANR	1138516	Identifier	FAIL_IF		1138215	0					
ANR	1138517	ArgumentList	! inst		1138215	1					
ANR	1138518	Argument	! inst		1138215	0					
ANR	1138519	UnaryOperationExpression	! inst		1138215	0					
ANR	1138520	UnaryOperator	!		1138215	0					
ANR	1138521	Identifier	inst		1138215	1					
ANR	1138522	ExpressionStatement	* inst = GROUP_F7	1954:4:53952:53968	1138215	2	True				
ANR	1138523	AssignmentExpression	* inst = GROUP_F7		1138215	0		=			
ANR	1138524	UnaryOperationExpression	* inst		1138215	0					
ANR	1138525	UnaryOperator	*		1138215	0					
ANR	1138526	Identifier	inst		1138215	1					
ANR	1138527	Identifier	GROUP_F7		1138215	1					
ANR	1138528	ElseStatement	else		1138215	0					
ANR	1138529	CompoundStatement		59:8:1795:1795	1138215	0					
ANR	1138530	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src1w ) )"	1957:4:53989:54040	1138215	0	True				
ANR	1138531	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src1w ) )"		1138215	0					
ANR	1138532	Callee	FAIL_IF		1138215	0					
ANR	1138533	Identifier	FAIL_IF		1138215	0					
ANR	1138534	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , src1w )"		1138215	1					
ANR	1138535	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , src1w )"		1138215	0					
ANR	1138536	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , src1w )"		1138215	0					
ANR	1138537	Callee	emit_load_imm64		1138215	0					
ANR	1138538	Identifier	emit_load_imm64		1138215	0					
ANR	1138539	ArgumentList	compiler		1138215	1					
ANR	1138540	Argument	compiler		1138215	0					
ANR	1138541	Identifier	compiler		1138215	0					
ANR	1138542	Argument	TMP_REG2		1138215	1					
ANR	1138543	Identifier	TMP_REG2		1138215	0					
ANR	1138544	Argument	src1w		1138215	2					
ANR	1138545	Identifier	src1w		1138215	0					
ANR	1138546	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src2 , src2w )"	1958:4:54046:54112	1138215	1	True				
ANR	1138547	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src2 , src2w )"		1138215	0		=			
ANR	1138548	Identifier	inst		1138215	0					
ANR	1138549	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src2 , src2w )"		1138215	1					
ANR	1138550	Callee	emit_x86_instruction		1138215	0					
ANR	1138551	Identifier	emit_x86_instruction		1138215	0					
ANR	1138552	ArgumentList	compiler		1138215	1					
ANR	1138553	Argument	compiler		1138215	0					
ANR	1138554	Identifier	compiler		1138215	0					
ANR	1138555	Argument	1		1138215	1					
ANR	1138556	PrimaryExpression	1		1138215	0					
ANR	1138557	Argument	TMP_REG2		1138215	2					
ANR	1138558	Identifier	TMP_REG2		1138215	0					
ANR	1138559	Argument	0		1138215	3					
ANR	1138560	PrimaryExpression	0		1138215	0					
ANR	1138561	Argument	src2		1138215	4					
ANR	1138562	Identifier	src2		1138215	0					
ANR	1138563	Argument	src2w		1138215	5					
ANR	1138564	Identifier	src2w		1138215	0					
ANR	1138565	ExpressionStatement	FAIL_IF ( ! inst )	1959:4:54118:54132	1138215	2	True				
ANR	1138566	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138567	Callee	FAIL_IF		1138215	0					
ANR	1138568	Identifier	FAIL_IF		1138215	0					
ANR	1138569	ArgumentList	! inst		1138215	1					
ANR	1138570	Argument	! inst		1138215	0					
ANR	1138571	UnaryOperationExpression	! inst		1138215	0					
ANR	1138572	UnaryOperator	!		1138215	0					
ANR	1138573	Identifier	inst		1138215	1					
ANR	1138574	ExpressionStatement	* inst = TEST_rm_r	1960:4:54138:54155	1138215	3	True				
ANR	1138575	AssignmentExpression	* inst = TEST_rm_r		1138215	0		=			
ANR	1138576	UnaryOperationExpression	* inst		1138215	0					
ANR	1138577	UnaryOperator	*		1138215	0					
ANR	1138578	Identifier	inst		1138215	1					
ANR	1138579	Identifier	TEST_rm_r		1138215	1					
ANR	1138580	ReturnStatement	return SLJIT_SUCCESS ;	1967:3:54289:54309	1138215	1	True				
ANR	1138581	Identifier	SLJIT_SUCCESS		1138215	0					
ANR	1138582	ElseStatement	else		1138215	0					
ANR	1138583	IfStatement	if ( FAST_IS_REG ( src2 ) )		1138215	0					
ANR	1138584	Condition	FAST_IS_REG ( src2 )	1969:11:54326:54342	1138215	0	True				
ANR	1138585	CallExpression	FAST_IS_REG ( src2 )		1138215	0					
ANR	1138586	Callee	FAST_IS_REG		1138215	0					
ANR	1138587	Identifier	FAST_IS_REG		1138215	0					
ANR	1138588	ArgumentList	src2		1138215	1					
ANR	1138589	Argument	src2		1138215	0					
ANR	1138590	Identifier	src2		1138215	0					
ANR	1138591	CompoundStatement		72:30:2157:2157	1138215	1					
ANR	1138592	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"	1970:3:54350:54412	1138215	0	True				
ANR	1138593	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1138215	0		=			
ANR	1138594	Identifier	inst		1138215	0					
ANR	1138595	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1138215	1					
ANR	1138596	Callee	emit_x86_instruction		1138215	0					
ANR	1138597	Identifier	emit_x86_instruction		1138215	0					
ANR	1138598	ArgumentList	compiler		1138215	1					
ANR	1138599	Argument	compiler		1138215	0					
ANR	1138600	Identifier	compiler		1138215	0					
ANR	1138601	Argument	1		1138215	1					
ANR	1138602	PrimaryExpression	1		1138215	0					
ANR	1138603	Argument	src2		1138215	2					
ANR	1138604	Identifier	src2		1138215	0					
ANR	1138605	Argument	0		1138215	3					
ANR	1138606	PrimaryExpression	0		1138215	0					
ANR	1138607	Argument	src1		1138215	4					
ANR	1138608	Identifier	src1		1138215	0					
ANR	1138609	Argument	src1w		1138215	5					
ANR	1138610	Identifier	src1w		1138215	0					
ANR	1138611	ExpressionStatement	FAIL_IF ( ! inst )	1971:3:54417:54431	1138215	1	True				
ANR	1138612	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138613	Callee	FAIL_IF		1138215	0					
ANR	1138614	Identifier	FAIL_IF		1138215	0					
ANR	1138615	ArgumentList	! inst		1138215	1					
ANR	1138616	Argument	! inst		1138215	0					
ANR	1138617	UnaryOperationExpression	! inst		1138215	0					
ANR	1138618	UnaryOperator	!		1138215	0					
ANR	1138619	Identifier	inst		1138215	1					
ANR	1138620	ExpressionStatement	* inst = TEST_rm_r	1972:3:54436:54453	1138215	2	True				
ANR	1138621	AssignmentExpression	* inst = TEST_rm_r		1138215	0		=			
ANR	1138622	UnaryOperationExpression	* inst		1138215	0					
ANR	1138623	UnaryOperator	*		1138215	0					
ANR	1138624	Identifier	inst		1138215	1					
ANR	1138625	Identifier	TEST_rm_r		1138215	1					
ANR	1138626	ReturnStatement	return SLJIT_SUCCESS ;	1973:3:54458:54478	1138215	3	True				
ANR	1138627	Identifier	SLJIT_SUCCESS		1138215	0					
ANR	1138628	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1977:1:54489:54533	1138215	5	True				
ANR	1138629	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1138215	0					
ANR	1138630	Callee	EMIT_MOV		1138215	0					
ANR	1138631	Identifier	EMIT_MOV		1138215	0					
ANR	1138632	ArgumentList	compiler		1138215	1					
ANR	1138633	Argument	compiler		1138215	0					
ANR	1138634	Identifier	compiler		1138215	0					
ANR	1138635	Argument	TMP_REG1		1138215	1					
ANR	1138636	Identifier	TMP_REG1		1138215	0					
ANR	1138637	Argument	0		1138215	2					
ANR	1138638	PrimaryExpression	0		1138215	0					
ANR	1138639	Argument	src1		1138215	3					
ANR	1138640	Identifier	src1		1138215	0					
ANR	1138641	Argument	src1w		1138215	4					
ANR	1138642	Identifier	src1w		1138215	0					
ANR	1138643	IfStatement	if ( src2 & SLJIT_IMM )		1138215	6					
ANR	1138644	Condition	src2 & SLJIT_IMM	1978:5:54540:54555	1138215	0	True				
ANR	1138645	BitAndExpression	src2 & SLJIT_IMM		1138215	0		&			
ANR	1138646	Identifier	src2		1138215	0					
ANR	1138647	Identifier	SLJIT_IMM		1138215	1					
ANR	1138648	CompoundStatement		81:23:2370:2370	1138215	1					
ANR	1138649	IfStatement	if ( IS_HALFWORD ( src2w ) || compiler -> mode32 )		1138215	0					
ANR	1138650	Condition	IS_HALFWORD ( src2w ) || compiler -> mode32	1980:6:54623:54660	1138215	0	True				
ANR	1138651	OrExpression	IS_HALFWORD ( src2w ) || compiler -> mode32		1138215	0		||			
ANR	1138652	CallExpression	IS_HALFWORD ( src2w )		1138215	0					
ANR	1138653	Callee	IS_HALFWORD		1138215	0					
ANR	1138654	Identifier	IS_HALFWORD		1138215	0					
ANR	1138655	ArgumentList	src2w		1138215	1					
ANR	1138656	Argument	src2w		1138215	0					
ANR	1138657	Identifier	src2w		1138215	0					
ANR	1138658	PtrMemberAccess	compiler -> mode32		1138215	1					
ANR	1138659	Identifier	compiler		1138215	0					
ANR	1138660	Identifier	mode32		1138215	1					
ANR	1138661	CompoundStatement		83:46:2475:2475	1138215	1					
ANR	1138662	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , TMP_REG1 , 0 )"	1981:3:54668:54739	1138215	0	True				
ANR	1138663	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , TMP_REG1 , 0 )"		1138215	0		=			
ANR	1138664	Identifier	inst		1138215	0					
ANR	1138665	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , TMP_REG1 , 0 )"		1138215	1					
ANR	1138666	Callee	emit_x86_instruction		1138215	0					
ANR	1138667	Identifier	emit_x86_instruction		1138215	0					
ANR	1138668	ArgumentList	compiler		1138215	1					
ANR	1138669	Argument	compiler		1138215	0					
ANR	1138670	Identifier	compiler		1138215	0					
ANR	1138671	Argument	1		1138215	1					
ANR	1138672	PrimaryExpression	1		1138215	0					
ANR	1138673	Argument	SLJIT_IMM		1138215	2					
ANR	1138674	Identifier	SLJIT_IMM		1138215	0					
ANR	1138675	Argument	src2w		1138215	3					
ANR	1138676	Identifier	src2w		1138215	0					
ANR	1138677	Argument	TMP_REG1		1138215	4					
ANR	1138678	Identifier	TMP_REG1		1138215	0					
ANR	1138679	Argument	0		1138215	5					
ANR	1138680	PrimaryExpression	0		1138215	0					
ANR	1138681	ExpressionStatement	FAIL_IF ( ! inst )	1982:3:54744:54758	1138215	1	True				
ANR	1138682	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138683	Callee	FAIL_IF		1138215	0					
ANR	1138684	Identifier	FAIL_IF		1138215	0					
ANR	1138685	ArgumentList	! inst		1138215	1					
ANR	1138686	Argument	! inst		1138215	0					
ANR	1138687	UnaryOperationExpression	! inst		1138215	0					
ANR	1138688	UnaryOperator	!		1138215	0					
ANR	1138689	Identifier	inst		1138215	1					
ANR	1138690	ExpressionStatement	* inst = GROUP_F7	1983:3:54763:54779	1138215	2	True				
ANR	1138691	AssignmentExpression	* inst = GROUP_F7		1138215	0		=			
ANR	1138692	UnaryOperationExpression	* inst		1138215	0					
ANR	1138693	UnaryOperator	*		1138215	0					
ANR	1138694	Identifier	inst		1138215	1					
ANR	1138695	Identifier	GROUP_F7		1138215	1					
ANR	1138696	ElseStatement	else		1138215	0					
ANR	1138697	CompoundStatement		88:7:2604:2604	1138215	0					
ANR	1138698	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"	1986:3:54797:54848	1138215	0	True				
ANR	1138699	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"		1138215	0					
ANR	1138700	Callee	FAIL_IF		1138215	0					
ANR	1138701	Identifier	FAIL_IF		1138215	0					
ANR	1138702	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1138215	1					
ANR	1138703	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1138215	0					
ANR	1138704	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1138215	0					
ANR	1138705	Callee	emit_load_imm64		1138215	0					
ANR	1138706	Identifier	emit_load_imm64		1138215	0					
ANR	1138707	ArgumentList	compiler		1138215	1					
ANR	1138708	Argument	compiler		1138215	0					
ANR	1138709	Identifier	compiler		1138215	0					
ANR	1138710	Argument	TMP_REG2		1138215	1					
ANR	1138711	Identifier	TMP_REG2		1138215	0					
ANR	1138712	Argument	src2w		1138215	2					
ANR	1138713	Identifier	src2w		1138215	0					
ANR	1138714	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , TMP_REG1 , 0 )"	1987:3:54853:54919	1138215	1	True				
ANR	1138715	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , TMP_REG1 , 0 )"		1138215	0		=			
ANR	1138716	Identifier	inst		1138215	0					
ANR	1138717	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , TMP_REG1 , 0 )"		1138215	1					
ANR	1138718	Callee	emit_x86_instruction		1138215	0					
ANR	1138719	Identifier	emit_x86_instruction		1138215	0					
ANR	1138720	ArgumentList	compiler		1138215	1					
ANR	1138721	Argument	compiler		1138215	0					
ANR	1138722	Identifier	compiler		1138215	0					
ANR	1138723	Argument	1		1138215	1					
ANR	1138724	PrimaryExpression	1		1138215	0					
ANR	1138725	Argument	TMP_REG2		1138215	2					
ANR	1138726	Identifier	TMP_REG2		1138215	0					
ANR	1138727	Argument	0		1138215	3					
ANR	1138728	PrimaryExpression	0		1138215	0					
ANR	1138729	Argument	TMP_REG1		1138215	4					
ANR	1138730	Identifier	TMP_REG1		1138215	0					
ANR	1138731	Argument	0		1138215	5					
ANR	1138732	PrimaryExpression	0		1138215	0					
ANR	1138733	ExpressionStatement	FAIL_IF ( ! inst )	1988:3:54924:54938	1138215	2	True				
ANR	1138734	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138735	Callee	FAIL_IF		1138215	0					
ANR	1138736	Identifier	FAIL_IF		1138215	0					
ANR	1138737	ArgumentList	! inst		1138215	1					
ANR	1138738	Argument	! inst		1138215	0					
ANR	1138739	UnaryOperationExpression	! inst		1138215	0					
ANR	1138740	UnaryOperator	!		1138215	0					
ANR	1138741	Identifier	inst		1138215	1					
ANR	1138742	ExpressionStatement	* inst = TEST_rm_r	1989:3:54943:54960	1138215	3	True				
ANR	1138743	AssignmentExpression	* inst = TEST_rm_r		1138215	0		=			
ANR	1138744	UnaryOperationExpression	* inst		1138215	0					
ANR	1138745	UnaryOperator	*		1138215	0					
ANR	1138746	Identifier	inst		1138215	1					
ANR	1138747	Identifier	TEST_rm_r		1138215	1					
ANR	1138748	ElseStatement	else		1138215	0					
ANR	1138749	CompoundStatement		100:6:2913:2913	1138215	0					
ANR	1138750	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1998:2:55105:55171	1138215	0	True				
ANR	1138751	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1138215	0		=			
ANR	1138752	Identifier	inst		1138215	0					
ANR	1138753	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1138215	1					
ANR	1138754	Callee	emit_x86_instruction		1138215	0					
ANR	1138755	Identifier	emit_x86_instruction		1138215	0					
ANR	1138756	ArgumentList	compiler		1138215	1					
ANR	1138757	Argument	compiler		1138215	0					
ANR	1138758	Identifier	compiler		1138215	0					
ANR	1138759	Argument	1		1138215	1					
ANR	1138760	PrimaryExpression	1		1138215	0					
ANR	1138761	Argument	TMP_REG1		1138215	2					
ANR	1138762	Identifier	TMP_REG1		1138215	0					
ANR	1138763	Argument	0		1138215	3					
ANR	1138764	PrimaryExpression	0		1138215	0					
ANR	1138765	Argument	src2		1138215	4					
ANR	1138766	Identifier	src2		1138215	0					
ANR	1138767	Argument	src2w		1138215	5					
ANR	1138768	Identifier	src2w		1138215	0					
ANR	1138769	ExpressionStatement	FAIL_IF ( ! inst )	1999:2:55175:55189	1138215	1	True				
ANR	1138770	CallExpression	FAIL_IF ( ! inst )		1138215	0					
ANR	1138771	Callee	FAIL_IF		1138215	0					
ANR	1138772	Identifier	FAIL_IF		1138215	0					
ANR	1138773	ArgumentList	! inst		1138215	1					
ANR	1138774	Argument	! inst		1138215	0					
ANR	1138775	UnaryOperationExpression	! inst		1138215	0					
ANR	1138776	UnaryOperator	!		1138215	0					
ANR	1138777	Identifier	inst		1138215	1					
ANR	1138778	ExpressionStatement	* inst = TEST_rm_r	2000:2:55193:55210	1138215	2	True				
ANR	1138779	AssignmentExpression	* inst = TEST_rm_r		1138215	0		=			
ANR	1138780	UnaryOperationExpression	* inst		1138215	0					
ANR	1138781	UnaryOperator	*		1138215	0					
ANR	1138782	Identifier	inst		1138215	1					
ANR	1138783	Identifier	TEST_rm_r		1138215	1					
ANR	1138784	ReturnStatement	return SLJIT_SUCCESS ;	2002:1:55216:55236	1138215	7	True				
ANR	1138785	Identifier	SLJIT_SUCCESS		1138215	0					
ANR	1138786	ReturnType	static sljit_si		1138215	1					
ANR	1138787	Identifier	emit_test_binary		1138215	2					
ANR	1138788	ParameterList	"struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1138215	3					
ANR	1138789	Parameter	struct sljit_compiler * compiler	1895:33:52090:52120	1138215	0	True				
ANR	1138790	ParameterType	struct sljit_compiler *		1138215	0					
ANR	1138791	Identifier	compiler		1138215	1					
ANR	1138792	Parameter	sljit_si src1	1896:1:52124:52136	1138215	1	True				
ANR	1138793	ParameterType	sljit_si		1138215	0					
ANR	1138794	Identifier	src1		1138215	1					
ANR	1138795	Parameter	sljit_sw src1w	1896:16:52139:52152	1138215	2	True				
ANR	1138796	ParameterType	sljit_sw		1138215	0					
ANR	1138797	Identifier	src1w		1138215	1					
ANR	1138798	Parameter	sljit_si src2	1897:1:52156:52168	1138215	3	True				
ANR	1138799	ParameterType	sljit_si		1138215	0					
ANR	1138800	Identifier	src2		1138215	1					
ANR	1138801	Parameter	sljit_sw src2w	1897:16:52171:52184	1138215	4	True				
ANR	1138802	ParameterType	sljit_sw		1138215	0					
ANR	1138803	Identifier	src2w		1138215	1					
ANR	1138804	CFGEntryNode	ENTRY		1138215		True				
ANR	1138805	CFGExitNode	EXIT		1138215		True				
ANR	1138806	Symbol	src2w		1138215						
ANR	1138807	Symbol	emit_load_imm64		1138215						
ANR	1138808	Symbol	TMP_REG2		1138215						
ANR	1138809	Symbol	emit_x86_instruction		1138215						
ANR	1138810	Symbol	TMP_REG1		1138215						
ANR	1138811	Symbol	src1w		1138215						
ANR	1138812	Symbol	* inst		1138215						
ANR	1138813	Symbol	FAST_IS_REG		1138215						
ANR	1138814	Symbol	GROUP_F7		1138215						
ANR	1138815	Symbol	TEST_EAX_i32		1138215						
ANR	1138816	Symbol	SLJIT_SUCCESS		1138215						
ANR	1138817	Symbol	TEST_rm_r		1138215						
ANR	1138818	Symbol	* compiler		1138215						
ANR	1138819	Symbol	SLJIT_R0		1138215						
ANR	1138820	Symbol	SLJIT_IMM		1138215						
ANR	1138821	Symbol	inst		1138215						
ANR	1138822	Symbol	src1		1138215						
ANR	1138823	Symbol	compiler -> mode32		1138215						
ANR	1138824	Symbol	IS_HALFWORD		1138215						
ANR	1138825	Symbol	src2		1138215						
ANR	1138826	Symbol	compiler		1138215						
ANR	1138827	Function	emit_shift	2005:0:55241:58446							
ANR	1138828	FunctionDef	"emit_shift (struct sljit_compiler * compiler , sljit_ub mode , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1138827	0					
ANR	1138829	CompoundStatement		2010:0:55411:58446	1138827	0					
ANR	1138830	IdentifierDeclStatement	sljit_ub * inst ;	2011:1:55414:55428	1138827	0	True				
ANR	1138831	IdentifierDecl	* inst		1138827	0					
ANR	1138832	IdentifierDeclType	sljit_ub *		1138827	0					
ANR	1138833	Identifier	inst		1138827	1					
ANR	1138834	IfStatement	if ( ( src2 & SLJIT_IMM ) || ( src2 == SLJIT_PREF_SHIFT_REG ) )		1138827	1					
ANR	1138835	Condition	( src2 & SLJIT_IMM ) || ( src2 == SLJIT_PREF_SHIFT_REG )	2013:5:55436:55487	1138827	0	True				
ANR	1138836	OrExpression	( src2 & SLJIT_IMM ) || ( src2 == SLJIT_PREF_SHIFT_REG )		1138827	0		||			
ANR	1138837	BitAndExpression	src2 & SLJIT_IMM		1138827	0		&			
ANR	1138838	Identifier	src2		1138827	0					
ANR	1138839	Identifier	SLJIT_IMM		1138827	1					
ANR	1138840	EqualityExpression	src2 == SLJIT_PREF_SHIFT_REG		1138827	1		==			
ANR	1138841	Identifier	src2		1138827	0					
ANR	1138842	Identifier	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1138843	CompoundStatement		4:59:78:78	1138827	1					
ANR	1138844	IfStatement	if ( dst == src1 && dstw == src1w )		1138827	0					
ANR	1138845	Condition	dst == src1 && dstw == src1w	2014:6:55498:55525	1138827	0	True				
ANR	1138846	AndExpression	dst == src1 && dstw == src1w		1138827	0		&&			
ANR	1138847	EqualityExpression	dst == src1		1138827	0		==			
ANR	1138848	Identifier	dst		1138827	0					
ANR	1138849	Identifier	src1		1138827	1					
ANR	1138850	EqualityExpression	dstw == src1w		1138827	1		==			
ANR	1138851	Identifier	dstw		1138827	0					
ANR	1138852	Identifier	src1w		1138827	1					
ANR	1138853	CompoundStatement		5:36:116:116	1138827	1					
ANR	1138854	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , dstw )"	2015:3:55533:55614	1138827	0	True				
ANR	1138855	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , dstw )"		1138827	0		=			
ANR	1138856	Identifier	inst		1138827	0					
ANR	1138857	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , dstw )"		1138827	1					
ANR	1138858	Callee	emit_x86_instruction		1138827	0					
ANR	1138859	Identifier	emit_x86_instruction		1138827	0					
ANR	1138860	ArgumentList	compiler		1138827	1					
ANR	1138861	Argument	compiler		1138827	0					
ANR	1138862	Identifier	compiler		1138827	0					
ANR	1138863	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1138864	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1138865	PrimaryExpression	1		1138827	0					
ANR	1138866	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1138867	Argument	src2		1138827	2					
ANR	1138868	Identifier	src2		1138827	0					
ANR	1138869	Argument	src2w		1138827	3					
ANR	1138870	Identifier	src2w		1138827	0					
ANR	1138871	Argument	dst		1138827	4					
ANR	1138872	Identifier	dst		1138827	0					
ANR	1138873	Argument	dstw		1138827	5					
ANR	1138874	Identifier	dstw		1138827	0					
ANR	1138875	ExpressionStatement	FAIL_IF ( ! inst )	2016:3:55619:55633	1138827	1	True				
ANR	1138876	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1138877	Callee	FAIL_IF		1138827	0					
ANR	1138878	Identifier	FAIL_IF		1138827	0					
ANR	1138879	ArgumentList	! inst		1138827	1					
ANR	1138880	Argument	! inst		1138827	0					
ANR	1138881	UnaryOperationExpression	! inst		1138827	0					
ANR	1138882	UnaryOperator	!		1138827	0					
ANR	1138883	Identifier	inst		1138827	1					
ANR	1138884	ExpressionStatement	* inst |= mode	2017:3:55638:55651	1138827	2	True				
ANR	1138885	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1138886	UnaryOperationExpression	* inst		1138827	0					
ANR	1138887	UnaryOperator	*		1138827	0					
ANR	1138888	Identifier	inst		1138827	1					
ANR	1138889	Identifier	mode		1138827	1					
ANR	1138890	ReturnStatement	return SLJIT_SUCCESS ;	2018:3:55656:55676	1138827	3	True				
ANR	1138891	Identifier	SLJIT_SUCCESS		1138827	0					
ANR	1138892	IfStatement	if ( dst == SLJIT_UNUSED )		1138827	1					
ANR	1138893	Condition	dst == SLJIT_UNUSED	2020:6:55688:55706	1138827	0	True				
ANR	1138894	EqualityExpression	dst == SLJIT_UNUSED		1138827	0		==			
ANR	1138895	Identifier	dst		1138827	0					
ANR	1138896	Identifier	SLJIT_UNUSED		1138827	1					
ANR	1138897	CompoundStatement		11:27:297:297	1138827	1					
ANR	1138898	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2021:3:55714:55758	1138827	0	True				
ANR	1138899	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1138827	0					
ANR	1138900	Callee	EMIT_MOV		1138827	0					
ANR	1138901	Identifier	EMIT_MOV		1138827	0					
ANR	1138902	ArgumentList	compiler		1138827	1					
ANR	1138903	Argument	compiler		1138827	0					
ANR	1138904	Identifier	compiler		1138827	0					
ANR	1138905	Argument	TMP_REG1		1138827	1					
ANR	1138906	Identifier	TMP_REG1		1138827	0					
ANR	1138907	Argument	0		1138827	2					
ANR	1138908	PrimaryExpression	0		1138827	0					
ANR	1138909	Argument	src1		1138827	3					
ANR	1138910	Identifier	src1		1138827	0					
ANR	1138911	Argument	src1w		1138827	4					
ANR	1138912	Identifier	src1w		1138827	0					
ANR	1138913	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"	2022:3:55763:55846	1138827	1	True				
ANR	1138914	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1138827	0		=			
ANR	1138915	Identifier	inst		1138827	0					
ANR	1138916	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1138827	1					
ANR	1138917	Callee	emit_x86_instruction		1138827	0					
ANR	1138918	Identifier	emit_x86_instruction		1138827	0					
ANR	1138919	ArgumentList	compiler		1138827	1					
ANR	1138920	Argument	compiler		1138827	0					
ANR	1138921	Identifier	compiler		1138827	0					
ANR	1138922	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1138923	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1138924	PrimaryExpression	1		1138827	0					
ANR	1138925	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1138926	Argument	src2		1138827	2					
ANR	1138927	Identifier	src2		1138827	0					
ANR	1138928	Argument	src2w		1138827	3					
ANR	1138929	Identifier	src2w		1138827	0					
ANR	1138930	Argument	TMP_REG1		1138827	4					
ANR	1138931	Identifier	TMP_REG1		1138827	0					
ANR	1138932	Argument	0		1138827	5					
ANR	1138933	PrimaryExpression	0		1138827	0					
ANR	1138934	ExpressionStatement	FAIL_IF ( ! inst )	2023:3:55851:55865	1138827	2	True				
ANR	1138935	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1138936	Callee	FAIL_IF		1138827	0					
ANR	1138937	Identifier	FAIL_IF		1138827	0					
ANR	1138938	ArgumentList	! inst		1138827	1					
ANR	1138939	Argument	! inst		1138827	0					
ANR	1138940	UnaryOperationExpression	! inst		1138827	0					
ANR	1138941	UnaryOperator	!		1138827	0					
ANR	1138942	Identifier	inst		1138827	1					
ANR	1138943	ExpressionStatement	* inst |= mode	2024:3:55870:55883	1138827	3	True				
ANR	1138944	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1138945	UnaryOperationExpression	* inst		1138827	0					
ANR	1138946	UnaryOperator	*		1138827	0					
ANR	1138947	Identifier	inst		1138827	1					
ANR	1138948	Identifier	mode		1138827	1					
ANR	1138949	ReturnStatement	return SLJIT_SUCCESS ;	2025:3:55888:55908	1138827	4	True				
ANR	1138950	Identifier	SLJIT_SUCCESS		1138827	0					
ANR	1138951	IfStatement	if ( dst == SLJIT_PREF_SHIFT_REG && src2 == SLJIT_PREF_SHIFT_REG )		1138827	2					
ANR	1138952	Condition	dst == SLJIT_PREF_SHIFT_REG && src2 == SLJIT_PREF_SHIFT_REG	2027:6:55920:55978	1138827	0	True				
ANR	1138953	AndExpression	dst == SLJIT_PREF_SHIFT_REG && src2 == SLJIT_PREF_SHIFT_REG		1138827	0		&&			
ANR	1138954	EqualityExpression	dst == SLJIT_PREF_SHIFT_REG		1138827	0		==			
ANR	1138955	Identifier	dst		1138827	0					
ANR	1138956	Identifier	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1138957	EqualityExpression	src2 == SLJIT_PREF_SHIFT_REG		1138827	1		==			
ANR	1138958	Identifier	src2		1138827	0					
ANR	1138959	Identifier	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1138960	CompoundStatement		18:67:569:569	1138827	1					
ANR	1138961	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2028:3:55986:56030	1138827	0	True				
ANR	1138962	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1138827	0					
ANR	1138963	Callee	EMIT_MOV		1138827	0					
ANR	1138964	Identifier	EMIT_MOV		1138827	0					
ANR	1138965	ArgumentList	compiler		1138827	1					
ANR	1138966	Argument	compiler		1138827	0					
ANR	1138967	Identifier	compiler		1138827	0					
ANR	1138968	Argument	TMP_REG1		1138827	1					
ANR	1138969	Identifier	TMP_REG1		1138827	0					
ANR	1138970	Argument	0		1138827	2					
ANR	1138971	PrimaryExpression	0		1138827	0					
ANR	1138972	Argument	src1		1138827	3					
ANR	1138973	Identifier	src1		1138827	0					
ANR	1138974	Argument	src1w		1138827	4					
ANR	1138975	Identifier	src1w		1138827	0					
ANR	1138976	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2029:3:56035:56130	1138827	1	True				
ANR	1138977	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	0		=			
ANR	1138978	Identifier	inst		1138827	0					
ANR	1138979	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	1					
ANR	1138980	Callee	emit_x86_instruction		1138827	0					
ANR	1138981	Identifier	emit_x86_instruction		1138827	0					
ANR	1138982	ArgumentList	compiler		1138827	1					
ANR	1138983	Argument	compiler		1138827	0					
ANR	1138984	Identifier	compiler		1138827	0					
ANR	1138985	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1138986	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1138987	PrimaryExpression	1		1138827	0					
ANR	1138988	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1138989	Argument	SLJIT_PREF_SHIFT_REG		1138827	2					
ANR	1138990	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1138991	Argument	0		1138827	3					
ANR	1138992	PrimaryExpression	0		1138827	0					
ANR	1138993	Argument	TMP_REG1		1138827	4					
ANR	1138994	Identifier	TMP_REG1		1138827	0					
ANR	1138995	Argument	0		1138827	5					
ANR	1138996	PrimaryExpression	0		1138827	0					
ANR	1138997	ExpressionStatement	FAIL_IF ( ! inst )	2030:3:56135:56149	1138827	2	True				
ANR	1138998	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1138999	Callee	FAIL_IF		1138827	0					
ANR	1139000	Identifier	FAIL_IF		1138827	0					
ANR	1139001	ArgumentList	! inst		1138827	1					
ANR	1139002	Argument	! inst		1138827	0					
ANR	1139003	UnaryOperationExpression	! inst		1138827	0					
ANR	1139004	UnaryOperator	!		1138827	0					
ANR	1139005	Identifier	inst		1138827	1					
ANR	1139006	ExpressionStatement	* inst |= mode	2031:3:56154:56167	1138827	3	True				
ANR	1139007	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1139008	UnaryOperationExpression	* inst		1138827	0					
ANR	1139009	UnaryOperator	*		1138827	0					
ANR	1139010	Identifier	inst		1138827	1					
ANR	1139011	Identifier	mode		1138827	1					
ANR	1139012	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2032:3:56172:56228	1138827	4	True				
ANR	1139013	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	0					
ANR	1139014	Callee	EMIT_MOV		1138827	0					
ANR	1139015	Identifier	EMIT_MOV		1138827	0					
ANR	1139016	ArgumentList	compiler		1138827	1					
ANR	1139017	Argument	compiler		1138827	0					
ANR	1139018	Identifier	compiler		1138827	0					
ANR	1139019	Argument	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139020	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139021	Argument	0		1138827	2					
ANR	1139022	PrimaryExpression	0		1138827	0					
ANR	1139023	Argument	TMP_REG1		1138827	3					
ANR	1139024	Identifier	TMP_REG1		1138827	0					
ANR	1139025	Argument	0		1138827	4					
ANR	1139026	PrimaryExpression	0		1138827	0					
ANR	1139027	ReturnStatement	return SLJIT_SUCCESS ;	2033:3:56233:56253	1138827	5	True				
ANR	1139028	Identifier	SLJIT_SUCCESS		1138827	0					
ANR	1139029	IfStatement	if ( FAST_IS_REG ( dst ) )		1138827	3					
ANR	1139030	Condition	FAST_IS_REG ( dst )	2035:6:56265:56280	1138827	0	True				
ANR	1139031	CallExpression	FAST_IS_REG ( dst )		1138827	0					
ANR	1139032	Callee	FAST_IS_REG		1138827	0					
ANR	1139033	Identifier	FAST_IS_REG		1138827	0					
ANR	1139034	ArgumentList	dst		1138827	1					
ANR	1139035	Argument	dst		1138827	0					
ANR	1139036	Identifier	dst		1138827	0					
ANR	1139037	CompoundStatement		26:24:871:871	1138827	1					
ANR	1139038	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	2036:3:56288:56327	1138827	0	True				
ANR	1139039	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1138827	0					
ANR	1139040	Callee	EMIT_MOV		1138827	0					
ANR	1139041	Identifier	EMIT_MOV		1138827	0					
ANR	1139042	ArgumentList	compiler		1138827	1					
ANR	1139043	Argument	compiler		1138827	0					
ANR	1139044	Identifier	compiler		1138827	0					
ANR	1139045	Argument	dst		1138827	1					
ANR	1139046	Identifier	dst		1138827	0					
ANR	1139047	Argument	0		1138827	2					
ANR	1139048	PrimaryExpression	0		1138827	0					
ANR	1139049	Argument	src1		1138827	3					
ANR	1139050	Identifier	src1		1138827	0					
ANR	1139051	Argument	src1w		1138827	4					
ANR	1139052	Identifier	src1w		1138827	0					
ANR	1139053	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , 0 )"	2037:3:56332:56410	1138827	1	True				
ANR	1139054	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , 0 )"		1138827	0		=			
ANR	1139055	Identifier	inst		1138827	0					
ANR	1139056	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , 0 )"		1138827	1					
ANR	1139057	Callee	emit_x86_instruction		1138827	0					
ANR	1139058	Identifier	emit_x86_instruction		1138827	0					
ANR	1139059	ArgumentList	compiler		1138827	1					
ANR	1139060	Argument	compiler		1138827	0					
ANR	1139061	Identifier	compiler		1138827	0					
ANR	1139062	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1139063	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1139064	PrimaryExpression	1		1138827	0					
ANR	1139065	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1139066	Argument	src2		1138827	2					
ANR	1139067	Identifier	src2		1138827	0					
ANR	1139068	Argument	src2w		1138827	3					
ANR	1139069	Identifier	src2w		1138827	0					
ANR	1139070	Argument	dst		1138827	4					
ANR	1139071	Identifier	dst		1138827	0					
ANR	1139072	Argument	0		1138827	5					
ANR	1139073	PrimaryExpression	0		1138827	0					
ANR	1139074	ExpressionStatement	FAIL_IF ( ! inst )	2038:3:56415:56429	1138827	2	True				
ANR	1139075	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1139076	Callee	FAIL_IF		1138827	0					
ANR	1139077	Identifier	FAIL_IF		1138827	0					
ANR	1139078	ArgumentList	! inst		1138827	1					
ANR	1139079	Argument	! inst		1138827	0					
ANR	1139080	UnaryOperationExpression	! inst		1138827	0					
ANR	1139081	UnaryOperator	!		1138827	0					
ANR	1139082	Identifier	inst		1138827	1					
ANR	1139083	ExpressionStatement	* inst |= mode	2039:3:56434:56447	1138827	3	True				
ANR	1139084	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1139085	UnaryOperationExpression	* inst		1138827	0					
ANR	1139086	UnaryOperator	*		1138827	0					
ANR	1139087	Identifier	inst		1138827	1					
ANR	1139088	Identifier	mode		1138827	1					
ANR	1139089	ReturnStatement	return SLJIT_SUCCESS ;	2040:3:56452:56472	1138827	4	True				
ANR	1139090	Identifier	SLJIT_SUCCESS		1138827	0					
ANR	1139091	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2043:2:56481:56525	1138827	4	True				
ANR	1139092	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1138827	0					
ANR	1139093	Callee	EMIT_MOV		1138827	0					
ANR	1139094	Identifier	EMIT_MOV		1138827	0					
ANR	1139095	ArgumentList	compiler		1138827	1					
ANR	1139096	Argument	compiler		1138827	0					
ANR	1139097	Identifier	compiler		1138827	0					
ANR	1139098	Argument	TMP_REG1		1138827	1					
ANR	1139099	Identifier	TMP_REG1		1138827	0					
ANR	1139100	Argument	0		1138827	2					
ANR	1139101	PrimaryExpression	0		1138827	0					
ANR	1139102	Argument	src1		1138827	3					
ANR	1139103	Identifier	src1		1138827	0					
ANR	1139104	Argument	src1w		1138827	4					
ANR	1139105	Identifier	src1w		1138827	0					
ANR	1139106	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"	2044:2:56529:56612	1138827	5	True				
ANR	1139107	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1138827	0		=			
ANR	1139108	Identifier	inst		1138827	0					
ANR	1139109	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1138827	1					
ANR	1139110	Callee	emit_x86_instruction		1138827	0					
ANR	1139111	Identifier	emit_x86_instruction		1138827	0					
ANR	1139112	ArgumentList	compiler		1138827	1					
ANR	1139113	Argument	compiler		1138827	0					
ANR	1139114	Identifier	compiler		1138827	0					
ANR	1139115	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1139116	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1139117	PrimaryExpression	1		1138827	0					
ANR	1139118	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1139119	Argument	src2		1138827	2					
ANR	1139120	Identifier	src2		1138827	0					
ANR	1139121	Argument	src2w		1138827	3					
ANR	1139122	Identifier	src2w		1138827	0					
ANR	1139123	Argument	TMP_REG1		1138827	4					
ANR	1139124	Identifier	TMP_REG1		1138827	0					
ANR	1139125	Argument	0		1138827	5					
ANR	1139126	PrimaryExpression	0		1138827	0					
ANR	1139127	ExpressionStatement	FAIL_IF ( ! inst )	2045:2:56616:56630	1138827	6	True				
ANR	1139128	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1139129	Callee	FAIL_IF		1138827	0					
ANR	1139130	Identifier	FAIL_IF		1138827	0					
ANR	1139131	ArgumentList	! inst		1138827	1					
ANR	1139132	Argument	! inst		1138827	0					
ANR	1139133	UnaryOperationExpression	! inst		1138827	0					
ANR	1139134	UnaryOperator	!		1138827	0					
ANR	1139135	Identifier	inst		1138827	1					
ANR	1139136	ExpressionStatement	* inst |= mode	2046:2:56634:56647	1138827	7	True				
ANR	1139137	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1139138	UnaryOperationExpression	* inst		1138827	0					
ANR	1139139	UnaryOperator	*		1138827	0					
ANR	1139140	Identifier	inst		1138827	1					
ANR	1139141	Identifier	mode		1138827	1					
ANR	1139142	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	2047:2:56651:56693	1138827	8	True				
ANR	1139143	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1138827	0					
ANR	1139144	Callee	EMIT_MOV		1138827	0					
ANR	1139145	Identifier	EMIT_MOV		1138827	0					
ANR	1139146	ArgumentList	compiler		1138827	1					
ANR	1139147	Argument	compiler		1138827	0					
ANR	1139148	Identifier	compiler		1138827	0					
ANR	1139149	Argument	dst		1138827	1					
ANR	1139150	Identifier	dst		1138827	0					
ANR	1139151	Argument	dstw		1138827	2					
ANR	1139152	Identifier	dstw		1138827	0					
ANR	1139153	Argument	TMP_REG1		1138827	3					
ANR	1139154	Identifier	TMP_REG1		1138827	0					
ANR	1139155	Argument	0		1138827	4					
ANR	1139156	PrimaryExpression	0		1138827	0					
ANR	1139157	ReturnStatement	return SLJIT_SUCCESS ;	2048:2:56697:56717	1138827	9	True				
ANR	1139158	Identifier	SLJIT_SUCCESS		1138827	0					
ANR	1139159	IfStatement	if ( dst == SLJIT_PREF_SHIFT_REG )		1138827	2					
ANR	1139160	Condition	dst == SLJIT_PREF_SHIFT_REG	2051:5:56728:56754	1138827	0	True				
ANR	1139161	EqualityExpression	dst == SLJIT_PREF_SHIFT_REG		1138827	0		==			
ANR	1139162	Identifier	dst		1138827	0					
ANR	1139163	Identifier	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139164	CompoundStatement		42:34:1345:1345	1138827	1					
ANR	1139165	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2052:2:56761:56805	1138827	0	True				
ANR	1139166	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1138827	0					
ANR	1139167	Callee	EMIT_MOV		1138827	0					
ANR	1139168	Identifier	EMIT_MOV		1138827	0					
ANR	1139169	ArgumentList	compiler		1138827	1					
ANR	1139170	Argument	compiler		1138827	0					
ANR	1139171	Identifier	compiler		1138827	0					
ANR	1139172	Argument	TMP_REG1		1138827	1					
ANR	1139173	Identifier	TMP_REG1		1138827	0					
ANR	1139174	Argument	0		1138827	2					
ANR	1139175	PrimaryExpression	0		1138827	0					
ANR	1139176	Argument	src1		1138827	3					
ANR	1139177	Identifier	src1		1138827	0					
ANR	1139178	Argument	src1w		1138827	4					
ANR	1139179	Identifier	src1w		1138827	0					
ANR	1139180	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"	2053:2:56809:56865	1138827	1	True				
ANR	1139181	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"		1138827	0					
ANR	1139182	Callee	EMIT_MOV		1138827	0					
ANR	1139183	Identifier	EMIT_MOV		1138827	0					
ANR	1139184	ArgumentList	compiler		1138827	1					
ANR	1139185	Argument	compiler		1138827	0					
ANR	1139186	Identifier	compiler		1138827	0					
ANR	1139187	Argument	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139188	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139189	Argument	0		1138827	2					
ANR	1139190	PrimaryExpression	0		1138827	0					
ANR	1139191	Argument	src2		1138827	3					
ANR	1139192	Identifier	src2		1138827	0					
ANR	1139193	Argument	src2w		1138827	4					
ANR	1139194	Identifier	src2w		1138827	0					
ANR	1139195	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2054:2:56869:56964	1138827	2	True				
ANR	1139196	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	0		=			
ANR	1139197	Identifier	inst		1138827	0					
ANR	1139198	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	1					
ANR	1139199	Callee	emit_x86_instruction		1138827	0					
ANR	1139200	Identifier	emit_x86_instruction		1138827	0					
ANR	1139201	ArgumentList	compiler		1138827	1					
ANR	1139202	Argument	compiler		1138827	0					
ANR	1139203	Identifier	compiler		1138827	0					
ANR	1139204	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1139205	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1139206	PrimaryExpression	1		1138827	0					
ANR	1139207	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1139208	Argument	SLJIT_PREF_SHIFT_REG		1138827	2					
ANR	1139209	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139210	Argument	0		1138827	3					
ANR	1139211	PrimaryExpression	0		1138827	0					
ANR	1139212	Argument	TMP_REG1		1138827	4					
ANR	1139213	Identifier	TMP_REG1		1138827	0					
ANR	1139214	Argument	0		1138827	5					
ANR	1139215	PrimaryExpression	0		1138827	0					
ANR	1139216	ExpressionStatement	FAIL_IF ( ! inst )	2055:2:56968:56982	1138827	3	True				
ANR	1139217	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1139218	Callee	FAIL_IF		1138827	0					
ANR	1139219	Identifier	FAIL_IF		1138827	0					
ANR	1139220	ArgumentList	! inst		1138827	1					
ANR	1139221	Argument	! inst		1138827	0					
ANR	1139222	UnaryOperationExpression	! inst		1138827	0					
ANR	1139223	UnaryOperator	!		1138827	0					
ANR	1139224	Identifier	inst		1138827	1					
ANR	1139225	ExpressionStatement	* inst |= mode	2056:2:56986:56999	1138827	4	True				
ANR	1139226	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1139227	UnaryOperationExpression	* inst		1138827	0					
ANR	1139228	UnaryOperator	*		1138827	0					
ANR	1139229	Identifier	inst		1138827	1					
ANR	1139230	Identifier	mode		1138827	1					
ANR	1139231	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2057:2:57003:57059	1138827	5	True				
ANR	1139232	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	0					
ANR	1139233	Callee	EMIT_MOV		1138827	0					
ANR	1139234	Identifier	EMIT_MOV		1138827	0					
ANR	1139235	ArgumentList	compiler		1138827	1					
ANR	1139236	Argument	compiler		1138827	0					
ANR	1139237	Identifier	compiler		1138827	0					
ANR	1139238	Argument	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139239	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139240	Argument	0		1138827	2					
ANR	1139241	PrimaryExpression	0		1138827	0					
ANR	1139242	Argument	TMP_REG1		1138827	3					
ANR	1139243	Identifier	TMP_REG1		1138827	0					
ANR	1139244	Argument	0		1138827	4					
ANR	1139245	PrimaryExpression	0		1138827	0					
ANR	1139246	ElseStatement	else		1138827	0					
ANR	1139247	IfStatement	"if ( FAST_IS_REG ( dst ) && dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst ) )"		1138827	0					
ANR	1139248	Condition	"FAST_IS_REG ( dst ) && dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst )"	2059:10:57074:57141	1138827	0	True				
ANR	1139249	AndExpression	"FAST_IS_REG ( dst ) && dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst )"		1138827	0		&&			
ANR	1139250	CallExpression	FAST_IS_REG ( dst )		1138827	0					
ANR	1139251	Callee	FAST_IS_REG		1138827	0					
ANR	1139252	Identifier	FAST_IS_REG		1138827	0					
ANR	1139253	ArgumentList	dst		1138827	1					
ANR	1139254	Argument	dst		1138827	0					
ANR	1139255	Identifier	dst		1138827	0					
ANR	1139256	AndExpression	"dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst )"		1138827	1		&&			
ANR	1139257	EqualityExpression	dst != src2		1138827	0		!=			
ANR	1139258	Identifier	dst		1138827	0					
ANR	1139259	Identifier	src2		1138827	1					
ANR	1139260	UnaryOperationExpression	"! ADDRESSING_DEPENDS_ON ( src2 , dst )"		1138827	1					
ANR	1139261	UnaryOperator	!		1138827	0					
ANR	1139262	CallExpression	"ADDRESSING_DEPENDS_ON ( src2 , dst )"		1138827	1					
ANR	1139263	Callee	ADDRESSING_DEPENDS_ON		1138827	0					
ANR	1139264	Identifier	ADDRESSING_DEPENDS_ON		1138827	0					
ANR	1139265	ArgumentList	src2		1138827	1					
ANR	1139266	Argument	src2		1138827	0					
ANR	1139267	Identifier	src2		1138827	0					
ANR	1139268	Argument	dst		1138827	1					
ANR	1139269	Identifier	dst		1138827	0					
ANR	1139270	CompoundStatement		50:80:1732:1732	1138827	1					
ANR	1139271	IfStatement	if ( src1 != dst )		1138827	0					
ANR	1139272	Condition	src1 != dst	2060:6:57152:57162	1138827	0	True				
ANR	1139273	EqualityExpression	src1 != dst		1138827	0		!=			
ANR	1139274	Identifier	src1		1138827	0					
ANR	1139275	Identifier	dst		1138827	1					
ANR	1139276	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	2061:3:57168:57207	1138827	1	True				
ANR	1139277	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1138827	0					
ANR	1139278	Callee	EMIT_MOV		1138827	0					
ANR	1139279	Identifier	EMIT_MOV		1138827	0					
ANR	1139280	ArgumentList	compiler		1138827	1					
ANR	1139281	Argument	compiler		1138827	0					
ANR	1139282	Identifier	compiler		1138827	0					
ANR	1139283	Argument	dst		1138827	1					
ANR	1139284	Identifier	dst		1138827	0					
ANR	1139285	Argument	0		1138827	2					
ANR	1139286	PrimaryExpression	0		1138827	0					
ANR	1139287	Argument	src1		1138827	3					
ANR	1139288	Identifier	src1		1138827	0					
ANR	1139289	Argument	src1w		1138827	4					
ANR	1139290	Identifier	src1w		1138827	0					
ANR	1139291	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"	2062:2:57211:57267	1138827	1	True				
ANR	1139292	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"		1138827	0					
ANR	1139293	Callee	EMIT_MOV		1138827	0					
ANR	1139294	Identifier	EMIT_MOV		1138827	0					
ANR	1139295	ArgumentList	compiler		1138827	1					
ANR	1139296	Argument	compiler		1138827	0					
ANR	1139297	Identifier	compiler		1138827	0					
ANR	1139298	Argument	TMP_REG1		1138827	1					
ANR	1139299	Identifier	TMP_REG1		1138827	0					
ANR	1139300	Argument	0		1138827	2					
ANR	1139301	PrimaryExpression	0		1138827	0					
ANR	1139302	Argument	SLJIT_PREF_SHIFT_REG		1138827	3					
ANR	1139303	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139304	Argument	0		1138827	4					
ANR	1139305	PrimaryExpression	0		1138827	0					
ANR	1139306	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"	2063:2:57271:57327	1138827	2	True				
ANR	1139307	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"		1138827	0					
ANR	1139308	Callee	EMIT_MOV		1138827	0					
ANR	1139309	Identifier	EMIT_MOV		1138827	0					
ANR	1139310	ArgumentList	compiler		1138827	1					
ANR	1139311	Argument	compiler		1138827	0					
ANR	1139312	Identifier	compiler		1138827	0					
ANR	1139313	Argument	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139314	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139315	Argument	0		1138827	2					
ANR	1139316	PrimaryExpression	0		1138827	0					
ANR	1139317	Argument	src2		1138827	3					
ANR	1139318	Identifier	src2		1138827	0					
ANR	1139319	Argument	src2w		1138827	4					
ANR	1139320	Identifier	src2w		1138827	0					
ANR	1139321	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , dst , 0 )"	2064:2:57331:57421	1138827	3	True				
ANR	1139322	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , dst , 0 )"		1138827	0		=			
ANR	1139323	Identifier	inst		1138827	0					
ANR	1139324	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , dst , 0 )"		1138827	1					
ANR	1139325	Callee	emit_x86_instruction		1138827	0					
ANR	1139326	Identifier	emit_x86_instruction		1138827	0					
ANR	1139327	ArgumentList	compiler		1138827	1					
ANR	1139328	Argument	compiler		1138827	0					
ANR	1139329	Identifier	compiler		1138827	0					
ANR	1139330	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1139331	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1139332	PrimaryExpression	1		1138827	0					
ANR	1139333	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1139334	Argument	SLJIT_PREF_SHIFT_REG		1138827	2					
ANR	1139335	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139336	Argument	0		1138827	3					
ANR	1139337	PrimaryExpression	0		1138827	0					
ANR	1139338	Argument	dst		1138827	4					
ANR	1139339	Identifier	dst		1138827	0					
ANR	1139340	Argument	0		1138827	5					
ANR	1139341	PrimaryExpression	0		1138827	0					
ANR	1139342	ExpressionStatement	FAIL_IF ( ! inst )	2065:2:57425:57439	1138827	4	True				
ANR	1139343	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1139344	Callee	FAIL_IF		1138827	0					
ANR	1139345	Identifier	FAIL_IF		1138827	0					
ANR	1139346	ArgumentList	! inst		1138827	1					
ANR	1139347	Argument	! inst		1138827	0					
ANR	1139348	UnaryOperationExpression	! inst		1138827	0					
ANR	1139349	UnaryOperator	!		1138827	0					
ANR	1139350	Identifier	inst		1138827	1					
ANR	1139351	ExpressionStatement	* inst |= mode	2066:2:57443:57456	1138827	5	True				
ANR	1139352	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1139353	UnaryOperationExpression	* inst		1138827	0					
ANR	1139354	UnaryOperator	*		1138827	0					
ANR	1139355	Identifier	inst		1138827	1					
ANR	1139356	Identifier	mode		1138827	1					
ANR	1139357	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2067:2:57460:57516	1138827	6	True				
ANR	1139358	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	0					
ANR	1139359	Callee	EMIT_MOV		1138827	0					
ANR	1139360	Identifier	EMIT_MOV		1138827	0					
ANR	1139361	ArgumentList	compiler		1138827	1					
ANR	1139362	Argument	compiler		1138827	0					
ANR	1139363	Identifier	compiler		1138827	0					
ANR	1139364	Argument	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139365	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139366	Argument	0		1138827	2					
ANR	1139367	PrimaryExpression	0		1138827	0					
ANR	1139368	Argument	TMP_REG1		1138827	3					
ANR	1139369	Identifier	TMP_REG1		1138827	0					
ANR	1139370	Argument	0		1138827	4					
ANR	1139371	PrimaryExpression	0		1138827	0					
ANR	1139372	ElseStatement	else		1138827	0					
ANR	1139373	CompoundStatement		60:6:2115:2115	1138827	0					
ANR	1139374	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2072:2:57663:57707	1138827	0	True				
ANR	1139375	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1138827	0					
ANR	1139376	Callee	EMIT_MOV		1138827	0					
ANR	1139377	Identifier	EMIT_MOV		1138827	0					
ANR	1139378	ArgumentList	compiler		1138827	1					
ANR	1139379	Argument	compiler		1138827	0					
ANR	1139380	Identifier	compiler		1138827	0					
ANR	1139381	Argument	TMP_REG1		1138827	1					
ANR	1139382	Identifier	TMP_REG1		1138827	0					
ANR	1139383	Argument	0		1138827	2					
ANR	1139384	PrimaryExpression	0		1138827	0					
ANR	1139385	Argument	src1		1138827	3					
ANR	1139386	Identifier	src1		1138827	0					
ANR	1139387	Argument	src1w		1138827	4					
ANR	1139388	Identifier	src1w		1138827	0					
ANR	1139389	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG2 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"	2074:2:57768:57824	1138827	1	True				
ANR	1139390	CallExpression	"EMIT_MOV ( compiler , TMP_REG2 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"		1138827	0					
ANR	1139391	Callee	EMIT_MOV		1138827	0					
ANR	1139392	Identifier	EMIT_MOV		1138827	0					
ANR	1139393	ArgumentList	compiler		1138827	1					
ANR	1139394	Argument	compiler		1138827	0					
ANR	1139395	Identifier	compiler		1138827	0					
ANR	1139396	Argument	TMP_REG2		1138827	1					
ANR	1139397	Identifier	TMP_REG2		1138827	0					
ANR	1139398	Argument	0		1138827	2					
ANR	1139399	PrimaryExpression	0		1138827	0					
ANR	1139400	Argument	SLJIT_PREF_SHIFT_REG		1138827	3					
ANR	1139401	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139402	Argument	0		1138827	4					
ANR	1139403	PrimaryExpression	0		1138827	0					
ANR	1139404	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"	2079:2:57964:58020	1138827	2	True				
ANR	1139405	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"		1138827	0					
ANR	1139406	Callee	EMIT_MOV		1138827	0					
ANR	1139407	Identifier	EMIT_MOV		1138827	0					
ANR	1139408	ArgumentList	compiler		1138827	1					
ANR	1139409	Argument	compiler		1138827	0					
ANR	1139410	Identifier	compiler		1138827	0					
ANR	1139411	Argument	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139412	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139413	Argument	0		1138827	2					
ANR	1139414	PrimaryExpression	0		1138827	0					
ANR	1139415	Argument	src2		1138827	3					
ANR	1139416	Identifier	src2		1138827	0					
ANR	1139417	Argument	src2w		1138827	4					
ANR	1139418	Identifier	src2w		1138827	0					
ANR	1139419	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2080:2:58024:58119	1138827	3	True				
ANR	1139420	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	0		=			
ANR	1139421	Identifier	inst		1138827	0					
ANR	1139422	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1138827	1					
ANR	1139423	Callee	emit_x86_instruction		1138827	0					
ANR	1139424	Identifier	emit_x86_instruction		1138827	0					
ANR	1139425	ArgumentList	compiler		1138827	1					
ANR	1139426	Argument	compiler		1138827	0					
ANR	1139427	Identifier	compiler		1138827	0					
ANR	1139428	Argument	1 | EX86_SHIFT_INS		1138827	1					
ANR	1139429	InclusiveOrExpression	1 | EX86_SHIFT_INS		1138827	0		|			
ANR	1139430	PrimaryExpression	1		1138827	0					
ANR	1139431	Identifier	EX86_SHIFT_INS		1138827	1					
ANR	1139432	Argument	SLJIT_PREF_SHIFT_REG		1138827	2					
ANR	1139433	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139434	Argument	0		1138827	3					
ANR	1139435	PrimaryExpression	0		1138827	0					
ANR	1139436	Argument	TMP_REG1		1138827	4					
ANR	1139437	Identifier	TMP_REG1		1138827	0					
ANR	1139438	Argument	0		1138827	5					
ANR	1139439	PrimaryExpression	0		1138827	0					
ANR	1139440	ExpressionStatement	FAIL_IF ( ! inst )	2081:2:58123:58137	1138827	4	True				
ANR	1139441	CallExpression	FAIL_IF ( ! inst )		1138827	0					
ANR	1139442	Callee	FAIL_IF		1138827	0					
ANR	1139443	Identifier	FAIL_IF		1138827	0					
ANR	1139444	ArgumentList	! inst		1138827	1					
ANR	1139445	Argument	! inst		1138827	0					
ANR	1139446	UnaryOperationExpression	! inst		1138827	0					
ANR	1139447	UnaryOperator	!		1138827	0					
ANR	1139448	Identifier	inst		1138827	1					
ANR	1139449	ExpressionStatement	* inst |= mode	2082:2:58141:58154	1138827	5	True				
ANR	1139450	AssignmentExpression	* inst |= mode		1138827	0		|=			
ANR	1139451	UnaryOperationExpression	* inst		1138827	0					
ANR	1139452	UnaryOperator	*		1138827	0					
ANR	1139453	Identifier	inst		1138827	1					
ANR	1139454	Identifier	mode		1138827	1					
ANR	1139455	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG2 , 0 )"	2084:2:58215:58271	1138827	6	True				
ANR	1139456	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG2 , 0 )"		1138827	0					
ANR	1139457	Callee	EMIT_MOV		1138827	0					
ANR	1139458	Identifier	EMIT_MOV		1138827	0					
ANR	1139459	ArgumentList	compiler		1138827	1					
ANR	1139460	Argument	compiler		1138827	0					
ANR	1139461	Identifier	compiler		1138827	0					
ANR	1139462	Argument	SLJIT_PREF_SHIFT_REG		1138827	1					
ANR	1139463	Identifier	SLJIT_PREF_SHIFT_REG		1138827	0					
ANR	1139464	Argument	0		1138827	2					
ANR	1139465	PrimaryExpression	0		1138827	0					
ANR	1139466	Argument	TMP_REG2		1138827	3					
ANR	1139467	Identifier	TMP_REG2		1138827	0					
ANR	1139468	Argument	0		1138827	4					
ANR	1139469	PrimaryExpression	0		1138827	0					
ANR	1139470	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	2088:2:58375:58417	1138827	7	True				
ANR	1139471	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1138827	0					
ANR	1139472	Callee	EMIT_MOV		1138827	0					
ANR	1139473	Identifier	EMIT_MOV		1138827	0					
ANR	1139474	ArgumentList	compiler		1138827	1					
ANR	1139475	Argument	compiler		1138827	0					
ANR	1139476	Identifier	compiler		1138827	0					
ANR	1139477	Argument	dst		1138827	1					
ANR	1139478	Identifier	dst		1138827	0					
ANR	1139479	Argument	dstw		1138827	2					
ANR	1139480	Identifier	dstw		1138827	0					
ANR	1139481	Argument	TMP_REG1		1138827	3					
ANR	1139482	Identifier	TMP_REG1		1138827	0					
ANR	1139483	Argument	0		1138827	4					
ANR	1139484	PrimaryExpression	0		1138827	0					
ANR	1139485	ReturnStatement	return SLJIT_SUCCESS ;	2091:1:58424:58444	1138827	3	True				
ANR	1139486	Identifier	SLJIT_SUCCESS		1138827	0					
ANR	1139487	ReturnType	static sljit_si		1138827	1					
ANR	1139488	Identifier	emit_shift		1138827	2					
ANR	1139489	ParameterList	"struct sljit_compiler * compiler , sljit_ub mode , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1138827	3					
ANR	1139490	Parameter	struct sljit_compiler * compiler	2005:27:55268:55298	1138827	0	True				
ANR	1139491	ParameterType	struct sljit_compiler *		1138827	0					
ANR	1139492	Identifier	compiler		1138827	1					
ANR	1139493	Parameter	sljit_ub mode	2006:1:55302:55314	1138827	1	True				
ANR	1139494	ParameterType	sljit_ub		1138827	0					
ANR	1139495	Identifier	mode		1138827	1					
ANR	1139496	Parameter	sljit_si dst	2007:1:55318:55329	1138827	2	True				
ANR	1139497	ParameterType	sljit_si		1138827	0					
ANR	1139498	Identifier	dst		1138827	1					
ANR	1139499	Parameter	sljit_sw dstw	2007:15:55332:55344	1138827	3	True				
ANR	1139500	ParameterType	sljit_sw		1138827	0					
ANR	1139501	Identifier	dstw		1138827	1					
ANR	1139502	Parameter	sljit_si src1	2008:1:55348:55360	1138827	4	True				
ANR	1139503	ParameterType	sljit_si		1138827	0					
ANR	1139504	Identifier	src1		1138827	1					
ANR	1139505	Parameter	sljit_sw src1w	2008:16:55363:55376	1138827	5	True				
ANR	1139506	ParameterType	sljit_sw		1138827	0					
ANR	1139507	Identifier	src1w		1138827	1					
ANR	1139508	Parameter	sljit_si src2	2009:1:55380:55392	1138827	6	True				
ANR	1139509	ParameterType	sljit_si		1138827	0					
ANR	1139510	Identifier	src2		1138827	1					
ANR	1139511	Parameter	sljit_sw src2w	2009:16:55395:55408	1138827	7	True				
ANR	1139512	ParameterType	sljit_sw		1138827	0					
ANR	1139513	Identifier	src2w		1138827	1					
ANR	1139514	CFGEntryNode	ENTRY		1138827		True				
ANR	1139515	CFGExitNode	EXIT		1138827		True				
ANR	1139516	Symbol	src2w		1138827						
ANR	1139517	Symbol	TMP_REG2		1138827						
ANR	1139518	Symbol	emit_x86_instruction		1138827						
ANR	1139519	Symbol	TMP_REG1		1138827						
ANR	1139520	Symbol	src1w		1138827						
ANR	1139521	Symbol	* inst		1138827						
ANR	1139522	Symbol	FAST_IS_REG		1138827						
ANR	1139523	Symbol	dst		1138827						
ANR	1139524	Symbol	SLJIT_SUCCESS		1138827						
ANR	1139525	Symbol	mode		1138827						
ANR	1139526	Symbol	SLJIT_PREF_SHIFT_REG		1138827						
ANR	1139527	Symbol	SLJIT_IMM		1138827						
ANR	1139528	Symbol	EX86_SHIFT_INS		1138827						
ANR	1139529	Symbol	SLJIT_UNUSED		1138827						
ANR	1139530	Symbol	inst		1138827						
ANR	1139531	Symbol	src1		1138827						
ANR	1139532	Symbol	src2		1138827						
ANR	1139533	Symbol	ADDRESSING_DEPENDS_ON		1138827						
ANR	1139534	Symbol	compiler		1138827						
ANR	1139535	Symbol	dstw		1138827						
ANR	1139536	Function	emit_shift_with_flags	2094:0:58449:59629							
ANR	1139537	FunctionDef	"emit_shift_with_flags (struct sljit_compiler * compiler , sljit_ub mode , sljit_si set_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1139536	0					
ANR	1139538	CompoundStatement		2099:0:58650:59629	1139536	0					
ANR	1139539	IfStatement	if ( src2 & SLJIT_IMM )		1139536	0					
ANR	1139540	Condition	src2 & SLJIT_IMM	2101:5:58716:58731	1139536	0	True				
ANR	1139541	BitAndExpression	src2 & SLJIT_IMM		1139536	0		&			
ANR	1139542	Identifier	src2		1139536	0					
ANR	1139543	Identifier	SLJIT_IMM		1139536	1					
ANR	1139544	CompoundStatement		3:23:83:83	1139536	1					
ANR	1139545	IfStatement	if ( ( src2w & 0x3f ) != 0 || ( compiler -> mode32 && ( src2w & 0x1f ) != 0 ) )		1139536	0					
ANR	1139546	Condition	( src2w & 0x3f ) != 0 || ( compiler -> mode32 && ( src2w & 0x1f ) != 0 )	2103:6:58799:58862	1139536	0	True				
ANR	1139547	OrExpression	( src2w & 0x3f ) != 0 || ( compiler -> mode32 && ( src2w & 0x1f ) != 0 )		1139536	0		||			
ANR	1139548	EqualityExpression	( src2w & 0x3f ) != 0		1139536	0		!=			
ANR	1139549	BitAndExpression	src2w & 0x3f		1139536	0		&			
ANR	1139550	Identifier	src2w		1139536	0					
ANR	1139551	PrimaryExpression	0x3f		1139536	1					
ANR	1139552	PrimaryExpression	0		1139536	1					
ANR	1139553	AndExpression	compiler -> mode32 && ( src2w & 0x1f ) != 0		1139536	1		&&			
ANR	1139554	PtrMemberAccess	compiler -> mode32		1139536	0					
ANR	1139555	Identifier	compiler		1139536	0					
ANR	1139556	Identifier	mode32		1139536	1					
ANR	1139557	EqualityExpression	( src2w & 0x1f ) != 0		1139536	1		!=			
ANR	1139558	BitAndExpression	src2w & 0x1f		1139536	0		&			
ANR	1139559	Identifier	src2w		1139536	0					
ANR	1139560	PrimaryExpression	0x1f		1139536	1					
ANR	1139561	PrimaryExpression	0		1139536	1					
ANR	1139562	ReturnStatement	"return emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2104:3:58868:58938	1139536	1	True				
ANR	1139563	CallExpression	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1139536	0					
ANR	1139564	Callee	emit_shift		1139536	0					
ANR	1139565	Identifier	emit_shift		1139536	0					
ANR	1139566	ArgumentList	compiler		1139536	1					
ANR	1139567	Argument	compiler		1139536	0					
ANR	1139568	Identifier	compiler		1139536	0					
ANR	1139569	Argument	mode		1139536	1					
ANR	1139570	Identifier	mode		1139536	0					
ANR	1139571	Argument	dst		1139536	2					
ANR	1139572	Identifier	dst		1139536	0					
ANR	1139573	Argument	dstw		1139536	3					
ANR	1139574	Identifier	dstw		1139536	0					
ANR	1139575	Argument	src1		1139536	4					
ANR	1139576	Identifier	src1		1139536	0					
ANR	1139577	Argument	src1w		1139536	5					
ANR	1139578	Identifier	src1w		1139536	0					
ANR	1139579	Argument	src2		1139536	6					
ANR	1139580	Identifier	src2		1139536	0					
ANR	1139581	Argument	src2w		1139536	7					
ANR	1139582	Identifier	src2w		1139536	0					
ANR	1139583	IfStatement	if ( ! set_flags )		1139536	1					
ANR	1139584	Condition	! set_flags	2109:6:59061:59070	1139536	0	True				
ANR	1139585	UnaryOperationExpression	! set_flags		1139536	0					
ANR	1139586	UnaryOperator	!		1139536	0					
ANR	1139587	Identifier	set_flags		1139536	1					
ANR	1139588	ReturnStatement	"return emit_mov ( compiler , dst , dstw , src1 , src1w ) ;"	2110:3:59076:59125	1139536	1	True				
ANR	1139589	CallExpression	"emit_mov ( compiler , dst , dstw , src1 , src1w )"		1139536	0					
ANR	1139590	Callee	emit_mov		1139536	0					
ANR	1139591	Identifier	emit_mov		1139536	0					
ANR	1139592	ArgumentList	compiler		1139536	1					
ANR	1139593	Argument	compiler		1139536	0					
ANR	1139594	Identifier	compiler		1139536	0					
ANR	1139595	Argument	dst		1139536	1					
ANR	1139596	Identifier	dst		1139536	0					
ANR	1139597	Argument	dstw		1139536	2					
ANR	1139598	Identifier	dstw		1139536	0					
ANR	1139599	Argument	src1		1139536	3					
ANR	1139600	Identifier	src1		1139536	0					
ANR	1139601	Argument	src1w		1139536	4					
ANR	1139602	Identifier	src1w		1139536	0					
ANR	1139603	ReturnStatement	"return emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , SLJIT_IMM , 0 ) ;"	2112:2:59152:59259	1139536	2	True				
ANR	1139604	CallExpression	"emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , SLJIT_IMM , 0 )"		1139536	0					
ANR	1139605	Callee	emit_cum_binary		1139536	0					
ANR	1139606	Identifier	emit_cum_binary		1139536	0					
ANR	1139607	ArgumentList	compiler		1139536	1					
ANR	1139608	Argument	compiler		1139536	0					
ANR	1139609	Identifier	compiler		1139536	0					
ANR	1139610	Argument	OR_r_rm		1139536	1					
ANR	1139611	Identifier	OR_r_rm		1139536	0					
ANR	1139612	Argument	OR_rm_r		1139536	2					
ANR	1139613	Identifier	OR_rm_r		1139536	0					
ANR	1139614	Argument	OR		1139536	3					
ANR	1139615	Identifier	OR		1139536	0					
ANR	1139616	Argument	OR_EAX_i32		1139536	4					
ANR	1139617	Identifier	OR_EAX_i32		1139536	0					
ANR	1139618	Argument	dst		1139536	5					
ANR	1139619	Identifier	dst		1139536	0					
ANR	1139620	Argument	dstw		1139536	6					
ANR	1139621	Identifier	dstw		1139536	0					
ANR	1139622	Argument	src1		1139536	7					
ANR	1139623	Identifier	src1		1139536	0					
ANR	1139624	Argument	src1w		1139536	8					
ANR	1139625	Identifier	src1w		1139536	0					
ANR	1139626	Argument	SLJIT_IMM		1139536	9					
ANR	1139627	Identifier	SLJIT_IMM		1139536	0					
ANR	1139628	Argument	0		1139536	10					
ANR	1139629	PrimaryExpression	0		1139536	0					
ANR	1139630	IfStatement	if ( ! set_flags )		1139536	1					
ANR	1139631	Condition	! set_flags	2116:5:59270:59279	1139536	0	True				
ANR	1139632	UnaryOperationExpression	! set_flags		1139536	0					
ANR	1139633	UnaryOperator	!		1139536	0					
ANR	1139634	Identifier	set_flags		1139536	1					
ANR	1139635	ReturnStatement	"return emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2117:2:59284:59354	1139536	1	True				
ANR	1139636	CallExpression	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1139536	0					
ANR	1139637	Callee	emit_shift		1139536	0					
ANR	1139638	Identifier	emit_shift		1139536	0					
ANR	1139639	ArgumentList	compiler		1139536	1					
ANR	1139640	Argument	compiler		1139536	0					
ANR	1139641	Identifier	compiler		1139536	0					
ANR	1139642	Argument	mode		1139536	1					
ANR	1139643	Identifier	mode		1139536	0					
ANR	1139644	Argument	dst		1139536	2					
ANR	1139645	Identifier	dst		1139536	0					
ANR	1139646	Argument	dstw		1139536	3					
ANR	1139647	Identifier	dstw		1139536	0					
ANR	1139648	Argument	src1		1139536	4					
ANR	1139649	Identifier	src1		1139536	0					
ANR	1139650	Argument	src1w		1139536	5					
ANR	1139651	Identifier	src1w		1139536	0					
ANR	1139652	Argument	src2		1139536	6					
ANR	1139653	Identifier	src2		1139536	0					
ANR	1139654	Argument	src2w		1139536	7					
ANR	1139655	Identifier	src2w		1139536	0					
ANR	1139656	IfStatement	if ( ! FAST_IS_REG ( dst ) )		1139536	2					
ANR	1139657	Condition	! FAST_IS_REG ( dst )	2119:5:59362:59378	1139536	0	True				
ANR	1139658	UnaryOperationExpression	! FAST_IS_REG ( dst )		1139536	0					
ANR	1139659	UnaryOperator	!		1139536	0					
ANR	1139660	CallExpression	FAST_IS_REG ( dst )		1139536	1					
ANR	1139661	Callee	FAST_IS_REG		1139536	0					
ANR	1139662	Identifier	FAST_IS_REG		1139536	0					
ANR	1139663	ArgumentList	dst		1139536	1					
ANR	1139664	Argument	dst		1139536	0					
ANR	1139665	Identifier	dst		1139536	0					
ANR	1139666	ExpressionStatement	"FAIL_IF ( emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 ) )"	2120:2:59383:59444	1139536	1	True				
ANR	1139667	CallExpression	"FAIL_IF ( emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 ) )"		1139536	0					
ANR	1139668	Callee	FAIL_IF		1139536	0					
ANR	1139669	Identifier	FAIL_IF		1139536	0					
ANR	1139670	ArgumentList	"emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 )"		1139536	1					
ANR	1139671	Argument	"emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 )"		1139536	0					
ANR	1139672	CallExpression	"emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 )"		1139536	0					
ANR	1139673	Callee	emit_cmp_binary		1139536	0					
ANR	1139674	Identifier	emit_cmp_binary		1139536	0					
ANR	1139675	ArgumentList	compiler		1139536	1					
ANR	1139676	Argument	compiler		1139536	0					
ANR	1139677	Identifier	compiler		1139536	0					
ANR	1139678	Argument	src1		1139536	1					
ANR	1139679	Identifier	src1		1139536	0					
ANR	1139680	Argument	src1w		1139536	2					
ANR	1139681	Identifier	src1w		1139536	0					
ANR	1139682	Argument	SLJIT_IMM		1139536	3					
ANR	1139683	Identifier	SLJIT_IMM		1139536	0					
ANR	1139684	Argument	0		1139536	4					
ANR	1139685	PrimaryExpression	0		1139536	0					
ANR	1139686	ExpressionStatement	"FAIL_IF ( emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) )"	2122:1:59448:59519	1139536	3	True				
ANR	1139687	CallExpression	"FAIL_IF ( emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) )"		1139536	0					
ANR	1139688	Callee	FAIL_IF		1139536	0					
ANR	1139689	Identifier	FAIL_IF		1139536	0					
ANR	1139690	ArgumentList	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1139536	1					
ANR	1139691	Argument	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1139536	0					
ANR	1139692	CallExpression	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1139536	0					
ANR	1139693	Callee	emit_shift		1139536	0					
ANR	1139694	Identifier	emit_shift		1139536	0					
ANR	1139695	ArgumentList	compiler		1139536	1					
ANR	1139696	Argument	compiler		1139536	0					
ANR	1139697	Identifier	compiler		1139536	0					
ANR	1139698	Argument	mode		1139536	1					
ANR	1139699	Identifier	mode		1139536	0					
ANR	1139700	Argument	dst		1139536	2					
ANR	1139701	Identifier	dst		1139536	0					
ANR	1139702	Argument	dstw		1139536	3					
ANR	1139703	Identifier	dstw		1139536	0					
ANR	1139704	Argument	src1		1139536	4					
ANR	1139705	Identifier	src1		1139536	0					
ANR	1139706	Argument	src1w		1139536	5					
ANR	1139707	Identifier	src1w		1139536	0					
ANR	1139708	Argument	src2		1139536	6					
ANR	1139709	Identifier	src2		1139536	0					
ANR	1139710	Argument	src2w		1139536	7					
ANR	1139711	Identifier	src2w		1139536	0					
ANR	1139712	IfStatement	if ( FAST_IS_REG ( dst ) )		1139536	4					
ANR	1139713	Condition	FAST_IS_REG ( dst )	2124:5:59527:59542	1139536	0	True				
ANR	1139714	CallExpression	FAST_IS_REG ( dst )		1139536	0					
ANR	1139715	Callee	FAST_IS_REG		1139536	0					
ANR	1139716	Identifier	FAST_IS_REG		1139536	0					
ANR	1139717	ArgumentList	dst		1139536	1					
ANR	1139718	Argument	dst		1139536	0					
ANR	1139719	Identifier	dst		1139536	0					
ANR	1139720	ReturnStatement	"return emit_cmp_binary ( compiler , dst , dstw , SLJIT_IMM , 0 ) ;"	2125:2:59547:59604	1139536	1	True				
ANR	1139721	CallExpression	"emit_cmp_binary ( compiler , dst , dstw , SLJIT_IMM , 0 )"		1139536	0					
ANR	1139722	Callee	emit_cmp_binary		1139536	0					
ANR	1139723	Identifier	emit_cmp_binary		1139536	0					
ANR	1139724	ArgumentList	compiler		1139536	1					
ANR	1139725	Argument	compiler		1139536	0					
ANR	1139726	Identifier	compiler		1139536	0					
ANR	1139727	Argument	dst		1139536	1					
ANR	1139728	Identifier	dst		1139536	0					
ANR	1139729	Argument	dstw		1139536	2					
ANR	1139730	Identifier	dstw		1139536	0					
ANR	1139731	Argument	SLJIT_IMM		1139536	3					
ANR	1139732	Identifier	SLJIT_IMM		1139536	0					
ANR	1139733	Argument	0		1139536	4					
ANR	1139734	PrimaryExpression	0		1139536	0					
ANR	1139735	ReturnStatement	return SLJIT_SUCCESS ;	2126:1:59607:59627	1139536	5	True				
ANR	1139736	Identifier	SLJIT_SUCCESS		1139536	0					
ANR	1139737	ReturnType	static sljit_si		1139536	1					
ANR	1139738	Identifier	emit_shift_with_flags		1139536	2					
ANR	1139739	ParameterList	"struct sljit_compiler * compiler , sljit_ub mode , sljit_si set_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1139536	3					
ANR	1139740	Parameter	struct sljit_compiler * compiler	2094:38:58487:58517	1139536	0	True				
ANR	1139741	ParameterType	struct sljit_compiler *		1139536	0					
ANR	1139742	Identifier	compiler		1139536	1					
ANR	1139743	Parameter	sljit_ub mode	2095:1:58521:58533	1139536	1	True				
ANR	1139744	ParameterType	sljit_ub		1139536	0					
ANR	1139745	Identifier	mode		1139536	1					
ANR	1139746	Parameter	sljit_si set_flags	2095:16:58536:58553	1139536	2	True				
ANR	1139747	ParameterType	sljit_si		1139536	0					
ANR	1139748	Identifier	set_flags		1139536	1					
ANR	1139749	Parameter	sljit_si dst	2096:1:58557:58568	1139536	3	True				
ANR	1139750	ParameterType	sljit_si		1139536	0					
ANR	1139751	Identifier	dst		1139536	1					
ANR	1139752	Parameter	sljit_sw dstw	2096:15:58571:58583	1139536	4	True				
ANR	1139753	ParameterType	sljit_sw		1139536	0					
ANR	1139754	Identifier	dstw		1139536	1					
ANR	1139755	Parameter	sljit_si src1	2097:1:58587:58599	1139536	5	True				
ANR	1139756	ParameterType	sljit_si		1139536	0					
ANR	1139757	Identifier	src1		1139536	1					
ANR	1139758	Parameter	sljit_sw src1w	2097:16:58602:58615	1139536	6	True				
ANR	1139759	ParameterType	sljit_sw		1139536	0					
ANR	1139760	Identifier	src1w		1139536	1					
ANR	1139761	Parameter	sljit_si src2	2098:1:58619:58631	1139536	7	True				
ANR	1139762	ParameterType	sljit_si		1139536	0					
ANR	1139763	Identifier	src2		1139536	1					
ANR	1139764	Parameter	sljit_sw src2w	2098:16:58634:58647	1139536	8	True				
ANR	1139765	ParameterType	sljit_sw		1139536	0					
ANR	1139766	Identifier	src2w		1139536	1					
ANR	1139767	CFGEntryNode	ENTRY		1139536		True				
ANR	1139768	CFGExitNode	EXIT		1139536		True				
ANR	1139769	Symbol	src2w		1139536						
ANR	1139770	Symbol	src1w		1139536						
ANR	1139771	Symbol	OR_rm_r		1139536						
ANR	1139772	Symbol	OR		1139536						
ANR	1139773	Symbol	FAST_IS_REG		1139536						
ANR	1139774	Symbol	dst		1139536						
ANR	1139775	Symbol	emit_cmp_binary		1139536						
ANR	1139776	Symbol	SLJIT_SUCCESS		1139536						
ANR	1139777	Symbol	* compiler		1139536						
ANR	1139778	Symbol	OR_EAX_i32		1139536						
ANR	1139779	Symbol	OR_r_rm		1139536						
ANR	1139780	Symbol	mode		1139536						
ANR	1139781	Symbol	SLJIT_IMM		1139536						
ANR	1139782	Symbol	emit_mov		1139536						
ANR	1139783	Symbol	src1		1139536						
ANR	1139784	Symbol	set_flags		1139536						
ANR	1139785	Symbol	compiler -> mode32		1139536						
ANR	1139786	Symbol	emit_shift		1139536						
ANR	1139787	Symbol	src2		1139536						
ANR	1139788	Symbol	compiler		1139536						
ANR	1139789	Symbol	dstw		1139536						
ANR	1139790	Symbol	emit_cum_binary		1139536						
ANR	1139791	Function	sljit_emit_op2	2129:0:59632:63296							
ANR	1139792	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1139791	0					
ANR	1139793	CompoundStatement		2133:0:59821:63296	1139791	0					
ANR	1139794	ExpressionStatement	CHECK_ERROR ( )	2134:1:59824:59837	1139791	0	True				
ANR	1139795	CallExpression	CHECK_ERROR ( )		1139791	0					
ANR	1139796	Callee	CHECK_ERROR		1139791	0					
ANR	1139797	Identifier	CHECK_ERROR		1139791	0					
ANR	1139798	ArgumentList			1139791	1					
ANR	1139799	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	2135:1:59840:59918	1139791	1	True				
ANR	1139800	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1139791	0					
ANR	1139801	Callee	CHECK		1139791	0					
ANR	1139802	Identifier	CHECK		1139791	0					
ANR	1139803	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	1					
ANR	1139804	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1139805	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1139806	Callee	check_sljit_emit_op2		1139791	0					
ANR	1139807	Identifier	check_sljit_emit_op2		1139791	0					
ANR	1139808	ArgumentList	compiler		1139791	1					
ANR	1139809	Argument	compiler		1139791	0					
ANR	1139810	Identifier	compiler		1139791	0					
ANR	1139811	Argument	op		1139791	1					
ANR	1139812	Identifier	op		1139791	0					
ANR	1139813	Argument	dst		1139791	2					
ANR	1139814	Identifier	dst		1139791	0					
ANR	1139815	Argument	dstw		1139791	3					
ANR	1139816	Identifier	dstw		1139791	0					
ANR	1139817	Argument	src1		1139791	4					
ANR	1139818	Identifier	src1		1139791	0					
ANR	1139819	Argument	src1w		1139791	5					
ANR	1139820	Identifier	src1w		1139791	0					
ANR	1139821	Argument	src2		1139791	6					
ANR	1139822	Identifier	src2		1139791	0					
ANR	1139823	Argument	src2w		1139791	7					
ANR	1139824	Identifier	src2w		1139791	0					
ANR	1139825	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2136:1:59921:59951	1139791	2	True				
ANR	1139826	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1139791	0					
ANR	1139827	Callee	ADJUST_LOCAL_OFFSET		1139791	0					
ANR	1139828	Identifier	ADJUST_LOCAL_OFFSET		1139791	0					
ANR	1139829	ArgumentList	dst		1139791	1					
ANR	1139830	Argument	dst		1139791	0					
ANR	1139831	Identifier	dst		1139791	0					
ANR	1139832	Argument	dstw		1139791	1					
ANR	1139833	Identifier	dstw		1139791	0					
ANR	1139834	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	2137:1:59954:59986	1139791	3	True				
ANR	1139835	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1139791	0					
ANR	1139836	Callee	ADJUST_LOCAL_OFFSET		1139791	0					
ANR	1139837	Identifier	ADJUST_LOCAL_OFFSET		1139791	0					
ANR	1139838	ArgumentList	src1		1139791	1					
ANR	1139839	Argument	src1		1139791	0					
ANR	1139840	Identifier	src1		1139791	0					
ANR	1139841	Argument	src1w		1139791	1					
ANR	1139842	Identifier	src1w		1139791	0					
ANR	1139843	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	2138:1:59989:60021	1139791	4	True				
ANR	1139844	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1139791	0					
ANR	1139845	Callee	ADJUST_LOCAL_OFFSET		1139791	0					
ANR	1139846	Identifier	ADJUST_LOCAL_OFFSET		1139791	0					
ANR	1139847	ArgumentList	src2		1139791	1					
ANR	1139848	Argument	src2		1139791	0					
ANR	1139849	Identifier	src2		1139791	0					
ANR	1139850	Argument	src2w		1139791	1					
ANR	1139851	Identifier	src2w		1139791	0					
ANR	1139852	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2140:1:60025:60061	1139791	5	True				
ANR	1139853	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1139791	0					
ANR	1139854	Callee	CHECK_EXTRA_REGS		1139791	0					
ANR	1139855	Identifier	CHECK_EXTRA_REGS		1139791	0					
ANR	1139856	ArgumentList	dst		1139791	1					
ANR	1139857	Argument	dst		1139791	0					
ANR	1139858	Identifier	dst		1139791	0					
ANR	1139859	Argument	dstw		1139791	1					
ANR	1139860	Identifier	dstw		1139791	0					
ANR	1139861	Argument	( void ) 0		1139791	2					
ANR	1139862	CastExpression	( void ) 0		1139791	0					
ANR	1139863	CastTarget	void		1139791	0					
ANR	1139864	PrimaryExpression	0		1139791	1					
ANR	1139865	ExpressionStatement	"CHECK_EXTRA_REGS ( src1 , src1w , ( void ) 0 )"	2141:1:60064:60102	1139791	6	True				
ANR	1139866	CallExpression	"CHECK_EXTRA_REGS ( src1 , src1w , ( void ) 0 )"		1139791	0					
ANR	1139867	Callee	CHECK_EXTRA_REGS		1139791	0					
ANR	1139868	Identifier	CHECK_EXTRA_REGS		1139791	0					
ANR	1139869	ArgumentList	src1		1139791	1					
ANR	1139870	Argument	src1		1139791	0					
ANR	1139871	Identifier	src1		1139791	0					
ANR	1139872	Argument	src1w		1139791	1					
ANR	1139873	Identifier	src1w		1139791	0					
ANR	1139874	Argument	( void ) 0		1139791	2					
ANR	1139875	CastExpression	( void ) 0		1139791	0					
ANR	1139876	CastTarget	void		1139791	0					
ANR	1139877	PrimaryExpression	0		1139791	1					
ANR	1139878	ExpressionStatement	"CHECK_EXTRA_REGS ( src2 , src2w , ( void ) 0 )"	2142:1:60105:60143	1139791	7	True				
ANR	1139879	CallExpression	"CHECK_EXTRA_REGS ( src2 , src2w , ( void ) 0 )"		1139791	0					
ANR	1139880	Callee	CHECK_EXTRA_REGS		1139791	0					
ANR	1139881	Identifier	CHECK_EXTRA_REGS		1139791	0					
ANR	1139882	ArgumentList	src2		1139791	1					
ANR	1139883	Argument	src2		1139791	0					
ANR	1139884	Identifier	src2		1139791	0					
ANR	1139885	Argument	src2w		1139791	1					
ANR	1139886	Identifier	src2w		1139791	0					
ANR	1139887	Argument	( void ) 0		1139791	2					
ANR	1139888	CastExpression	( void ) 0		1139791	0					
ANR	1139889	CastTarget	void		1139791	0					
ANR	1139890	PrimaryExpression	0		1139791	1					
ANR	1139891	ExpressionStatement	compiler -> mode32 = op & SLJIT_INT_OP	2144:1:60203:60239	1139791	8	True				
ANR	1139892	AssignmentExpression	compiler -> mode32 = op & SLJIT_INT_OP		1139791	0		=			
ANR	1139893	PtrMemberAccess	compiler -> mode32		1139791	0					
ANR	1139894	Identifier	compiler		1139791	0					
ANR	1139895	Identifier	mode32		1139791	1					
ANR	1139896	BitAndExpression	op & SLJIT_INT_OP		1139791	1		&			
ANR	1139897	Identifier	op		1139791	0					
ANR	1139898	Identifier	SLJIT_INT_OP		1139791	1					
ANR	1139899	IfStatement	if ( GET_OPCODE ( op ) >= SLJIT_MUL )		1139791	9					
ANR	1139900	Condition	GET_OPCODE ( op ) >= SLJIT_MUL	2147:5:60254:60280	1139791	0	True				
ANR	1139901	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_MUL		1139791	0		>=			
ANR	1139902	CallExpression	GET_OPCODE ( op )		1139791	0					
ANR	1139903	Callee	GET_OPCODE		1139791	0					
ANR	1139904	Identifier	GET_OPCODE		1139791	0					
ANR	1139905	ArgumentList	op		1139791	1					
ANR	1139906	Argument	op		1139791	0					
ANR	1139907	Identifier	op		1139791	0					
ANR	1139908	Identifier	SLJIT_MUL		1139791	1					
ANR	1139909	CompoundStatement		15:34:461:461	1139791	1					
ANR	1139910	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op ) ) )		1139791	0					
ANR	1139911	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )	2148:6:60291:60319	1139791	0	True				
ANR	1139912	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )		1139791	0					
ANR	1139913	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1139914	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1139915	ArgumentList	GET_FLAGS ( op )		1139791	1					
ANR	1139916	Argument	GET_FLAGS ( op )		1139791	0					
ANR	1139917	CallExpression	GET_FLAGS ( op )		1139791	0					
ANR	1139918	Callee	GET_FLAGS		1139791	0					
ANR	1139919	Identifier	GET_FLAGS		1139791	0					
ANR	1139920	ArgumentList	op		1139791	1					
ANR	1139921	Argument	op		1139791	0					
ANR	1139922	Identifier	op		1139791	0					
ANR	1139923	ExpressionStatement	compiler -> flags_saved = 0	2149:3:60325:60350	1139791	1	True				
ANR	1139924	AssignmentExpression	compiler -> flags_saved = 0		1139791	0		=			
ANR	1139925	PtrMemberAccess	compiler -> flags_saved		1139791	0					
ANR	1139926	Identifier	compiler		1139791	0					
ANR	1139927	Identifier	flags_saved		1139791	1					
ANR	1139928	PrimaryExpression	0		1139791	1					
ANR	1139929	ElseStatement	else		1139791	0					
ANR	1139930	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1139791	0					
ANR	1139931	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	2150:11:60363:60425	1139791	0	True				
ANR	1139932	AndExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1139791	0		&&			
ANR	1139933	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1139791	0					
ANR	1139934	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1139935	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1139936	ArgumentList	op & SLJIT_KEEP_FLAGS		1139791	1					
ANR	1139937	Argument	op & SLJIT_KEEP_FLAGS		1139791	0					
ANR	1139938	BitAndExpression	op & SLJIT_KEEP_FLAGS		1139791	0		&			
ANR	1139939	Identifier	op		1139791	0					
ANR	1139940	Identifier	SLJIT_KEEP_FLAGS		1139791	1					
ANR	1139941	UnaryOperationExpression	! compiler -> flags_saved		1139791	1					
ANR	1139942	UnaryOperator	!		1139791	0					
ANR	1139943	PtrMemberAccess	compiler -> flags_saved		1139791	1					
ANR	1139944	Identifier	compiler		1139791	0					
ANR	1139945	Identifier	flags_saved		1139791	1					
ANR	1139946	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2151:3:60431:60465	1139791	1	True				
ANR	1139947	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1139791	0					
ANR	1139948	Callee	FAIL_IF		1139791	0					
ANR	1139949	Identifier	FAIL_IF		1139791	0					
ANR	1139950	ArgumentList	emit_save_flags ( compiler )		1139791	1					
ANR	1139951	Argument	emit_save_flags ( compiler )		1139791	0					
ANR	1139952	CallExpression	emit_save_flags ( compiler )		1139791	0					
ANR	1139953	Callee	emit_save_flags		1139791	0					
ANR	1139954	Identifier	emit_save_flags		1139791	0					
ANR	1139955	ArgumentList	compiler		1139791	1					
ANR	1139956	Argument	compiler		1139791	0					
ANR	1139957	Identifier	compiler		1139791	0					
ANR	1139958	SwitchStatement	switch ( GET_OPCODE ( op ) )		1139791	10					
ANR	1139959	Condition	GET_OPCODE ( op )	2154:9:60480:60493	1139791	0	True				
ANR	1139960	CallExpression	GET_OPCODE ( op )		1139791	0					
ANR	1139961	Callee	GET_OPCODE		1139791	0					
ANR	1139962	Identifier	GET_OPCODE		1139791	0					
ANR	1139963	ArgumentList	op		1139791	1					
ANR	1139964	Argument	op		1139791	0					
ANR	1139965	Identifier	op		1139791	0					
ANR	1139966	CompoundStatement		22:25:674:674	1139791	1					
ANR	1139967	Label	case SLJIT_ADD :	2155:1:60499:60513	1139791	0	True				
ANR	1139968	Identifier	SLJIT_ADD		1139791	0					
ANR	1139969	IfStatement	if ( ! GET_FLAGS ( op ) )		1139791	1					
ANR	1139970	Condition	! GET_FLAGS ( op )	2156:6:60521:60534	1139791	0	True				
ANR	1139971	UnaryOperationExpression	! GET_FLAGS ( op )		1139791	0					
ANR	1139972	UnaryOperator	!		1139791	0					
ANR	1139973	CallExpression	GET_FLAGS ( op )		1139791	1					
ANR	1139974	Callee	GET_FLAGS		1139791	0					
ANR	1139975	Identifier	GET_FLAGS		1139791	0					
ANR	1139976	ArgumentList	op		1139791	1					
ANR	1139977	Argument	op		1139791	0					
ANR	1139978	Identifier	op		1139791	0					
ANR	1139979	CompoundStatement		24:22:715:715	1139791	1					
ANR	1139980	IfStatement	"if ( emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w ) != SLJIT_ERR_UNSUPPORTED )"		1139791	0					
ANR	1139981	Condition	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w ) != SLJIT_ERR_UNSUPPORTED"	2157:7:60546:60655	1139791	0	True				
ANR	1139982	EqualityExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w ) != SLJIT_ERR_UNSUPPORTED"		1139791	0		!=			
ANR	1139983	CallExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1139984	Callee	emit_lea_binary		1139791	0					
ANR	1139985	Identifier	emit_lea_binary		1139791	0					
ANR	1139986	ArgumentList	compiler		1139791	1					
ANR	1139987	Argument	compiler		1139791	0					
ANR	1139988	Identifier	compiler		1139791	0					
ANR	1139989	Argument	op & SLJIT_KEEP_FLAGS		1139791	1					
ANR	1139990	BitAndExpression	op & SLJIT_KEEP_FLAGS		1139791	0		&			
ANR	1139991	Identifier	op		1139791	0					
ANR	1139992	Identifier	SLJIT_KEEP_FLAGS		1139791	1					
ANR	1139993	Argument	dst		1139791	2					
ANR	1139994	Identifier	dst		1139791	0					
ANR	1139995	Argument	dstw		1139791	3					
ANR	1139996	Identifier	dstw		1139791	0					
ANR	1139997	Argument	src1		1139791	4					
ANR	1139998	Identifier	src1		1139791	0					
ANR	1139999	Argument	src1w		1139791	5					
ANR	1140000	Identifier	src1w		1139791	0					
ANR	1140001	Argument	src2		1139791	6					
ANR	1140002	Identifier	src2		1139791	0					
ANR	1140003	Argument	src2w		1139791	7					
ANR	1140004	Identifier	src2w		1139791	0					
ANR	1140005	Identifier	SLJIT_ERR_UNSUPPORTED		1139791	1					
ANR	1140006	ReturnStatement	return compiler -> error ;	2158:4:60662:60684	1139791	1	True				
ANR	1140007	PtrMemberAccess	compiler -> error		1139791	0					
ANR	1140008	Identifier	compiler		1139791	0					
ANR	1140009	Identifier	error		1139791	1					
ANR	1140010	ElseStatement	else		1139791	0					
ANR	1140011	ExpressionStatement	compiler -> flags_saved = 0	2161:3:60700:60725	1139791	0	True				
ANR	1140012	AssignmentExpression	compiler -> flags_saved = 0		1139791	0		=			
ANR	1140013	PtrMemberAccess	compiler -> flags_saved		1139791	0					
ANR	1140014	Identifier	compiler		1139791	0					
ANR	1140015	Identifier	flags_saved		1139791	1					
ANR	1140016	PrimaryExpression	0		1139791	1					
ANR	1140017	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1139791	2					
ANR	1140018	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	2162:6:60733:60795	1139791	0	True				
ANR	1140019	AndExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1139791	0		&&			
ANR	1140020	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1139791	0					
ANR	1140021	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140022	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140023	ArgumentList	op & SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140024	Argument	op & SLJIT_KEEP_FLAGS		1139791	0					
ANR	1140025	BitAndExpression	op & SLJIT_KEEP_FLAGS		1139791	0		&			
ANR	1140026	Identifier	op		1139791	0					
ANR	1140027	Identifier	SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140028	UnaryOperationExpression	! compiler -> flags_saved		1139791	1					
ANR	1140029	UnaryOperator	!		1139791	0					
ANR	1140030	PtrMemberAccess	compiler -> flags_saved		1139791	1					
ANR	1140031	Identifier	compiler		1139791	0					
ANR	1140032	Identifier	flags_saved		1139791	1					
ANR	1140033	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2163:3:60801:60835	1139791	1	True				
ANR	1140034	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1139791	0					
ANR	1140035	Callee	FAIL_IF		1139791	0					
ANR	1140036	Identifier	FAIL_IF		1139791	0					
ANR	1140037	ArgumentList	emit_save_flags ( compiler )		1139791	1					
ANR	1140038	Argument	emit_save_flags ( compiler )		1139791	0					
ANR	1140039	CallExpression	emit_save_flags ( compiler )		1139791	0					
ANR	1140040	Callee	emit_save_flags		1139791	0					
ANR	1140041	Identifier	emit_save_flags		1139791	0					
ANR	1140042	ArgumentList	compiler		1139791	1					
ANR	1140043	Argument	compiler		1139791	0					
ANR	1140044	Identifier	compiler		1139791	0					
ANR	1140045	ReturnStatement	"return emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2164:2:60839:60949	1139791	3	True				
ANR	1140046	CallExpression	"emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140047	Callee	emit_cum_binary		1139791	0					
ANR	1140048	Identifier	emit_cum_binary		1139791	0					
ANR	1140049	ArgumentList	compiler		1139791	1					
ANR	1140050	Argument	compiler		1139791	0					
ANR	1140051	Identifier	compiler		1139791	0					
ANR	1140052	Argument	ADD_r_rm		1139791	1					
ANR	1140053	Identifier	ADD_r_rm		1139791	0					
ANR	1140054	Argument	ADD_rm_r		1139791	2					
ANR	1140055	Identifier	ADD_rm_r		1139791	0					
ANR	1140056	Argument	ADD		1139791	3					
ANR	1140057	Identifier	ADD		1139791	0					
ANR	1140058	Argument	ADD_EAX_i32		1139791	4					
ANR	1140059	Identifier	ADD_EAX_i32		1139791	0					
ANR	1140060	Argument	dst		1139791	5					
ANR	1140061	Identifier	dst		1139791	0					
ANR	1140062	Argument	dstw		1139791	6					
ANR	1140063	Identifier	dstw		1139791	0					
ANR	1140064	Argument	src1		1139791	7					
ANR	1140065	Identifier	src1		1139791	0					
ANR	1140066	Argument	src1w		1139791	8					
ANR	1140067	Identifier	src1w		1139791	0					
ANR	1140068	Argument	src2		1139791	9					
ANR	1140069	Identifier	src2		1139791	0					
ANR	1140070	Argument	src2w		1139791	10					
ANR	1140071	Identifier	src2w		1139791	0					
ANR	1140072	Label	case SLJIT_ADDC :	2166:1:60952:60967	1139791	4	True				
ANR	1140073	Identifier	SLJIT_ADDC		1139791	0					
ANR	1140074	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1139791	5					
ANR	1140075	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2167:6:60975:61011	1139791	0	True				
ANR	1140076	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1139791	0					
ANR	1140077	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140078	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140079	ArgumentList	compiler -> flags_saved		1139791	1					
ANR	1140080	Argument	compiler -> flags_saved		1139791	0					
ANR	1140081	PtrMemberAccess	compiler -> flags_saved		1139791	0					
ANR	1140082	Identifier	compiler		1139791	0					
ANR	1140083	Identifier	flags_saved		1139791	1					
ANR	1140084	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"	2168:3:61048:61088	1139791	1	True				
ANR	1140085	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"		1139791	0					
ANR	1140086	Callee	FAIL_IF		1139791	0					
ANR	1140087	Identifier	FAIL_IF		1139791	0					
ANR	1140088	ArgumentList	"emit_restore_flags ( compiler , 1 )"		1139791	1					
ANR	1140089	Argument	"emit_restore_flags ( compiler , 1 )"		1139791	0					
ANR	1140090	CallExpression	"emit_restore_flags ( compiler , 1 )"		1139791	0					
ANR	1140091	Callee	emit_restore_flags		1139791	0					
ANR	1140092	Identifier	emit_restore_flags		1139791	0					
ANR	1140093	ArgumentList	compiler		1139791	1					
ANR	1140094	Argument	compiler		1139791	0					
ANR	1140095	Identifier	compiler		1139791	0					
ANR	1140096	Argument	1		1139791	1					
ANR	1140097	PrimaryExpression	1		1139791	0					
ANR	1140098	ElseStatement	else		1139791	0					
ANR	1140099	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) )		1139791	0					
ANR	1140100	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )	2169:11:61101:61137	1139791	0	True				
ANR	1140101	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1139791	0					
ANR	1140102	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140103	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140104	ArgumentList	op & SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140105	Argument	op & SLJIT_KEEP_FLAGS		1139791	0					
ANR	1140106	BitAndExpression	op & SLJIT_KEEP_FLAGS		1139791	0		&			
ANR	1140107	Identifier	op		1139791	0					
ANR	1140108	Identifier	SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140109	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2170:3:61143:61177	1139791	1	True				
ANR	1140110	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1139791	0					
ANR	1140111	Callee	FAIL_IF		1139791	0					
ANR	1140112	Identifier	FAIL_IF		1139791	0					
ANR	1140113	ArgumentList	emit_save_flags ( compiler )		1139791	1					
ANR	1140114	Argument	emit_save_flags ( compiler )		1139791	0					
ANR	1140115	CallExpression	emit_save_flags ( compiler )		1139791	0					
ANR	1140116	Callee	emit_save_flags		1139791	0					
ANR	1140117	Identifier	emit_save_flags		1139791	0					
ANR	1140118	ArgumentList	compiler		1139791	1					
ANR	1140119	Argument	compiler		1139791	0					
ANR	1140120	Identifier	compiler		1139791	0					
ANR	1140121	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op ) ) )		1139791	6					
ANR	1140122	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )	2171:6:61185:61213	1139791	0	True				
ANR	1140123	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )		1139791	0					
ANR	1140124	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140125	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140126	ArgumentList	GET_FLAGS ( op )		1139791	1					
ANR	1140127	Argument	GET_FLAGS ( op )		1139791	0					
ANR	1140128	CallExpression	GET_FLAGS ( op )		1139791	0					
ANR	1140129	Callee	GET_FLAGS		1139791	0					
ANR	1140130	Identifier	GET_FLAGS		1139791	0					
ANR	1140131	ArgumentList	op		1139791	1					
ANR	1140132	Argument	op		1139791	0					
ANR	1140133	Identifier	op		1139791	0					
ANR	1140134	ExpressionStatement	compiler -> flags_saved = 0	2172:3:61219:61244	1139791	1	True				
ANR	1140135	AssignmentExpression	compiler -> flags_saved = 0		1139791	0		=			
ANR	1140136	PtrMemberAccess	compiler -> flags_saved		1139791	0					
ANR	1140137	Identifier	compiler		1139791	0					
ANR	1140138	Identifier	flags_saved		1139791	1					
ANR	1140139	PrimaryExpression	0		1139791	1					
ANR	1140140	ReturnStatement	"return emit_cum_binary ( compiler , ADC_r_rm , ADC_rm_r , ADC , ADC_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2173:2:61248:61358	1139791	7	True				
ANR	1140141	CallExpression	"emit_cum_binary ( compiler , ADC_r_rm , ADC_rm_r , ADC , ADC_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140142	Callee	emit_cum_binary		1139791	0					
ANR	1140143	Identifier	emit_cum_binary		1139791	0					
ANR	1140144	ArgumentList	compiler		1139791	1					
ANR	1140145	Argument	compiler		1139791	0					
ANR	1140146	Identifier	compiler		1139791	0					
ANR	1140147	Argument	ADC_r_rm		1139791	1					
ANR	1140148	Identifier	ADC_r_rm		1139791	0					
ANR	1140149	Argument	ADC_rm_r		1139791	2					
ANR	1140150	Identifier	ADC_rm_r		1139791	0					
ANR	1140151	Argument	ADC		1139791	3					
ANR	1140152	Identifier	ADC		1139791	0					
ANR	1140153	Argument	ADC_EAX_i32		1139791	4					
ANR	1140154	Identifier	ADC_EAX_i32		1139791	0					
ANR	1140155	Argument	dst		1139791	5					
ANR	1140156	Identifier	dst		1139791	0					
ANR	1140157	Argument	dstw		1139791	6					
ANR	1140158	Identifier	dstw		1139791	0					
ANR	1140159	Argument	src1		1139791	7					
ANR	1140160	Identifier	src1		1139791	0					
ANR	1140161	Argument	src1w		1139791	8					
ANR	1140162	Identifier	src1w		1139791	0					
ANR	1140163	Argument	src2		1139791	9					
ANR	1140164	Identifier	src2		1139791	0					
ANR	1140165	Argument	src2w		1139791	10					
ANR	1140166	Identifier	src2w		1139791	0					
ANR	1140167	Label	case SLJIT_SUB :	2175:1:61361:61375	1139791	8	True				
ANR	1140168	Identifier	SLJIT_SUB		1139791	0					
ANR	1140169	IfStatement	if ( ! GET_FLAGS ( op ) )		1139791	9					
ANR	1140170	Condition	! GET_FLAGS ( op )	2176:6:61383:61396	1139791	0	True				
ANR	1140171	UnaryOperationExpression	! GET_FLAGS ( op )		1139791	0					
ANR	1140172	UnaryOperator	!		1139791	0					
ANR	1140173	CallExpression	GET_FLAGS ( op )		1139791	1					
ANR	1140174	Callee	GET_FLAGS		1139791	0					
ANR	1140175	Identifier	GET_FLAGS		1139791	0					
ANR	1140176	ArgumentList	op		1139791	1					
ANR	1140177	Argument	op		1139791	0					
ANR	1140178	Identifier	op		1139791	0					
ANR	1140179	CompoundStatement		44:22:1577:1577	1139791	1					
ANR	1140180	IfStatement	"if ( ( src2 & SLJIT_IMM ) && emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED )"		1139791	0					
ANR	1140181	Condition	"( src2 & SLJIT_IMM ) && emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED"	2177:7:61408:61545	1139791	0	True				
ANR	1140182	AndExpression	"( src2 & SLJIT_IMM ) && emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED"		1139791	0		&&			
ANR	1140183	BitAndExpression	src2 & SLJIT_IMM		1139791	0		&			
ANR	1140184	Identifier	src2		1139791	0					
ANR	1140185	Identifier	SLJIT_IMM		1139791	1					
ANR	1140186	EqualityExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED"		1139791	1		!=			
ANR	1140187	CallExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w )"		1139791	0					
ANR	1140188	Callee	emit_lea_binary		1139791	0					
ANR	1140189	Identifier	emit_lea_binary		1139791	0					
ANR	1140190	ArgumentList	compiler		1139791	1					
ANR	1140191	Argument	compiler		1139791	0					
ANR	1140192	Identifier	compiler		1139791	0					
ANR	1140193	Argument	op & SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140194	BitAndExpression	op & SLJIT_KEEP_FLAGS		1139791	0		&			
ANR	1140195	Identifier	op		1139791	0					
ANR	1140196	Identifier	SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140197	Argument	dst		1139791	2					
ANR	1140198	Identifier	dst		1139791	0					
ANR	1140199	Argument	dstw		1139791	3					
ANR	1140200	Identifier	dstw		1139791	0					
ANR	1140201	Argument	src1		1139791	4					
ANR	1140202	Identifier	src1		1139791	0					
ANR	1140203	Argument	src1w		1139791	5					
ANR	1140204	Identifier	src1w		1139791	0					
ANR	1140205	Argument	SLJIT_IMM		1139791	6					
ANR	1140206	Identifier	SLJIT_IMM		1139791	0					
ANR	1140207	Argument	- src2w		1139791	7					
ANR	1140208	UnaryOperationExpression	- src2w		1139791	0					
ANR	1140209	UnaryOperator	-		1139791	0					
ANR	1140210	Identifier	src2w		1139791	1					
ANR	1140211	Identifier	SLJIT_ERR_UNSUPPORTED		1139791	1					
ANR	1140212	ReturnStatement	return compiler -> error ;	2178:4:61552:61574	1139791	1	True				
ANR	1140213	PtrMemberAccess	compiler -> error		1139791	0					
ANR	1140214	Identifier	compiler		1139791	0					
ANR	1140215	Identifier	error		1139791	1					
ANR	1140216	ElseStatement	else		1139791	0					
ANR	1140217	ExpressionStatement	compiler -> flags_saved = 0	2181:3:61590:61615	1139791	0	True				
ANR	1140218	AssignmentExpression	compiler -> flags_saved = 0		1139791	0		=			
ANR	1140219	PtrMemberAccess	compiler -> flags_saved		1139791	0					
ANR	1140220	Identifier	compiler		1139791	0					
ANR	1140221	Identifier	flags_saved		1139791	1					
ANR	1140222	PrimaryExpression	0		1139791	1					
ANR	1140223	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1139791	10					
ANR	1140224	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	2182:6:61623:61685	1139791	0	True				
ANR	1140225	AndExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1139791	0		&&			
ANR	1140226	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1139791	0					
ANR	1140227	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140228	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140229	ArgumentList	op & SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140230	Argument	op & SLJIT_KEEP_FLAGS		1139791	0					
ANR	1140231	BitAndExpression	op & SLJIT_KEEP_FLAGS		1139791	0		&			
ANR	1140232	Identifier	op		1139791	0					
ANR	1140233	Identifier	SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140234	UnaryOperationExpression	! compiler -> flags_saved		1139791	1					
ANR	1140235	UnaryOperator	!		1139791	0					
ANR	1140236	PtrMemberAccess	compiler -> flags_saved		1139791	1					
ANR	1140237	Identifier	compiler		1139791	0					
ANR	1140238	Identifier	flags_saved		1139791	1					
ANR	1140239	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2183:3:61691:61725	1139791	1	True				
ANR	1140240	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1139791	0					
ANR	1140241	Callee	FAIL_IF		1139791	0					
ANR	1140242	Identifier	FAIL_IF		1139791	0					
ANR	1140243	ArgumentList	emit_save_flags ( compiler )		1139791	1					
ANR	1140244	Argument	emit_save_flags ( compiler )		1139791	0					
ANR	1140245	CallExpression	emit_save_flags ( compiler )		1139791	0					
ANR	1140246	Callee	emit_save_flags		1139791	0					
ANR	1140247	Identifier	emit_save_flags		1139791	0					
ANR	1140248	ArgumentList	compiler		1139791	1					
ANR	1140249	Argument	compiler		1139791	0					
ANR	1140250	Identifier	compiler		1139791	0					
ANR	1140251	IfStatement	if ( dst == SLJIT_UNUSED )		1139791	11					
ANR	1140252	Condition	dst == SLJIT_UNUSED	2184:6:61733:61751	1139791	0	True				
ANR	1140253	EqualityExpression	dst == SLJIT_UNUSED		1139791	0		==			
ANR	1140254	Identifier	dst		1139791	0					
ANR	1140255	Identifier	SLJIT_UNUSED		1139791	1					
ANR	1140256	ReturnStatement	"return emit_cmp_binary ( compiler , src1 , src1w , src2 , src2w ) ;"	2185:3:61757:61815	1139791	1	True				
ANR	1140257	CallExpression	"emit_cmp_binary ( compiler , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140258	Callee	emit_cmp_binary		1139791	0					
ANR	1140259	Identifier	emit_cmp_binary		1139791	0					
ANR	1140260	ArgumentList	compiler		1139791	1					
ANR	1140261	Argument	compiler		1139791	0					
ANR	1140262	Identifier	compiler		1139791	0					
ANR	1140263	Argument	src1		1139791	1					
ANR	1140264	Identifier	src1		1139791	0					
ANR	1140265	Argument	src1w		1139791	2					
ANR	1140266	Identifier	src1w		1139791	0					
ANR	1140267	Argument	src2		1139791	3					
ANR	1140268	Identifier	src2		1139791	0					
ANR	1140269	Argument	src2w		1139791	4					
ANR	1140270	Identifier	src2w		1139791	0					
ANR	1140271	ReturnStatement	"return emit_non_cum_binary ( compiler , SUB_r_rm , SUB_rm_r , SUB , SUB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2186:2:61819:61933	1139791	12	True				
ANR	1140272	CallExpression	"emit_non_cum_binary ( compiler , SUB_r_rm , SUB_rm_r , SUB , SUB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140273	Callee	emit_non_cum_binary		1139791	0					
ANR	1140274	Identifier	emit_non_cum_binary		1139791	0					
ANR	1140275	ArgumentList	compiler		1139791	1					
ANR	1140276	Argument	compiler		1139791	0					
ANR	1140277	Identifier	compiler		1139791	0					
ANR	1140278	Argument	SUB_r_rm		1139791	1					
ANR	1140279	Identifier	SUB_r_rm		1139791	0					
ANR	1140280	Argument	SUB_rm_r		1139791	2					
ANR	1140281	Identifier	SUB_rm_r		1139791	0					
ANR	1140282	Argument	SUB		1139791	3					
ANR	1140283	Identifier	SUB		1139791	0					
ANR	1140284	Argument	SUB_EAX_i32		1139791	4					
ANR	1140285	Identifier	SUB_EAX_i32		1139791	0					
ANR	1140286	Argument	dst		1139791	5					
ANR	1140287	Identifier	dst		1139791	0					
ANR	1140288	Argument	dstw		1139791	6					
ANR	1140289	Identifier	dstw		1139791	0					
ANR	1140290	Argument	src1		1139791	7					
ANR	1140291	Identifier	src1		1139791	0					
ANR	1140292	Argument	src1w		1139791	8					
ANR	1140293	Identifier	src1w		1139791	0					
ANR	1140294	Argument	src2		1139791	9					
ANR	1140295	Identifier	src2		1139791	0					
ANR	1140296	Argument	src2w		1139791	10					
ANR	1140297	Identifier	src2w		1139791	0					
ANR	1140298	Label	case SLJIT_SUBC :	2188:1:61936:61951	1139791	13	True				
ANR	1140299	Identifier	SLJIT_SUBC		1139791	0					
ANR	1140300	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1139791	14					
ANR	1140301	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2189:6:61959:61995	1139791	0	True				
ANR	1140302	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1139791	0					
ANR	1140303	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140304	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140305	ArgumentList	compiler -> flags_saved		1139791	1					
ANR	1140306	Argument	compiler -> flags_saved		1139791	0					
ANR	1140307	PtrMemberAccess	compiler -> flags_saved		1139791	0					
ANR	1140308	Identifier	compiler		1139791	0					
ANR	1140309	Identifier	flags_saved		1139791	1					
ANR	1140310	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"	2190:3:62032:62072	1139791	1	True				
ANR	1140311	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"		1139791	0					
ANR	1140312	Callee	FAIL_IF		1139791	0					
ANR	1140313	Identifier	FAIL_IF		1139791	0					
ANR	1140314	ArgumentList	"emit_restore_flags ( compiler , 1 )"		1139791	1					
ANR	1140315	Argument	"emit_restore_flags ( compiler , 1 )"		1139791	0					
ANR	1140316	CallExpression	"emit_restore_flags ( compiler , 1 )"		1139791	0					
ANR	1140317	Callee	emit_restore_flags		1139791	0					
ANR	1140318	Identifier	emit_restore_flags		1139791	0					
ANR	1140319	ArgumentList	compiler		1139791	1					
ANR	1140320	Argument	compiler		1139791	0					
ANR	1140321	Identifier	compiler		1139791	0					
ANR	1140322	Argument	1		1139791	1					
ANR	1140323	PrimaryExpression	1		1139791	0					
ANR	1140324	ElseStatement	else		1139791	0					
ANR	1140325	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) )		1139791	0					
ANR	1140326	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )	2191:11:62085:62121	1139791	0	True				
ANR	1140327	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1139791	0					
ANR	1140328	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140329	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140330	ArgumentList	op & SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140331	Argument	op & SLJIT_KEEP_FLAGS		1139791	0					
ANR	1140332	BitAndExpression	op & SLJIT_KEEP_FLAGS		1139791	0		&			
ANR	1140333	Identifier	op		1139791	0					
ANR	1140334	Identifier	SLJIT_KEEP_FLAGS		1139791	1					
ANR	1140335	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2192:3:62127:62161	1139791	1	True				
ANR	1140336	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1139791	0					
ANR	1140337	Callee	FAIL_IF		1139791	0					
ANR	1140338	Identifier	FAIL_IF		1139791	0					
ANR	1140339	ArgumentList	emit_save_flags ( compiler )		1139791	1					
ANR	1140340	Argument	emit_save_flags ( compiler )		1139791	0					
ANR	1140341	CallExpression	emit_save_flags ( compiler )		1139791	0					
ANR	1140342	Callee	emit_save_flags		1139791	0					
ANR	1140343	Identifier	emit_save_flags		1139791	0					
ANR	1140344	ArgumentList	compiler		1139791	1					
ANR	1140345	Argument	compiler		1139791	0					
ANR	1140346	Identifier	compiler		1139791	0					
ANR	1140347	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op ) ) )		1139791	15					
ANR	1140348	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )	2193:6:62169:62197	1139791	0	True				
ANR	1140349	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )		1139791	0					
ANR	1140350	Callee	SLJIT_UNLIKELY		1139791	0					
ANR	1140351	Identifier	SLJIT_UNLIKELY		1139791	0					
ANR	1140352	ArgumentList	GET_FLAGS ( op )		1139791	1					
ANR	1140353	Argument	GET_FLAGS ( op )		1139791	0					
ANR	1140354	CallExpression	GET_FLAGS ( op )		1139791	0					
ANR	1140355	Callee	GET_FLAGS		1139791	0					
ANR	1140356	Identifier	GET_FLAGS		1139791	0					
ANR	1140357	ArgumentList	op		1139791	1					
ANR	1140358	Argument	op		1139791	0					
ANR	1140359	Identifier	op		1139791	0					
ANR	1140360	ExpressionStatement	compiler -> flags_saved = 0	2194:3:62203:62228	1139791	1	True				
ANR	1140361	AssignmentExpression	compiler -> flags_saved = 0		1139791	0		=			
ANR	1140362	PtrMemberAccess	compiler -> flags_saved		1139791	0					
ANR	1140363	Identifier	compiler		1139791	0					
ANR	1140364	Identifier	flags_saved		1139791	1					
ANR	1140365	PrimaryExpression	0		1139791	1					
ANR	1140366	ReturnStatement	"return emit_non_cum_binary ( compiler , SBB_r_rm , SBB_rm_r , SBB , SBB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2195:2:62232:62346	1139791	16	True				
ANR	1140367	CallExpression	"emit_non_cum_binary ( compiler , SBB_r_rm , SBB_rm_r , SBB , SBB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140368	Callee	emit_non_cum_binary		1139791	0					
ANR	1140369	Identifier	emit_non_cum_binary		1139791	0					
ANR	1140370	ArgumentList	compiler		1139791	1					
ANR	1140371	Argument	compiler		1139791	0					
ANR	1140372	Identifier	compiler		1139791	0					
ANR	1140373	Argument	SBB_r_rm		1139791	1					
ANR	1140374	Identifier	SBB_r_rm		1139791	0					
ANR	1140375	Argument	SBB_rm_r		1139791	2					
ANR	1140376	Identifier	SBB_rm_r		1139791	0					
ANR	1140377	Argument	SBB		1139791	3					
ANR	1140378	Identifier	SBB		1139791	0					
ANR	1140379	Argument	SBB_EAX_i32		1139791	4					
ANR	1140380	Identifier	SBB_EAX_i32		1139791	0					
ANR	1140381	Argument	dst		1139791	5					
ANR	1140382	Identifier	dst		1139791	0					
ANR	1140383	Argument	dstw		1139791	6					
ANR	1140384	Identifier	dstw		1139791	0					
ANR	1140385	Argument	src1		1139791	7					
ANR	1140386	Identifier	src1		1139791	0					
ANR	1140387	Argument	src1w		1139791	8					
ANR	1140388	Identifier	src1w		1139791	0					
ANR	1140389	Argument	src2		1139791	9					
ANR	1140390	Identifier	src2		1139791	0					
ANR	1140391	Argument	src2w		1139791	10					
ANR	1140392	Identifier	src2w		1139791	0					
ANR	1140393	Label	case SLJIT_MUL :	2197:1:62349:62363	1139791	17	True				
ANR	1140394	Identifier	SLJIT_MUL		1139791	0					
ANR	1140395	ReturnStatement	"return emit_mul ( compiler , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2198:2:62367:62429	1139791	18	True				
ANR	1140396	CallExpression	"emit_mul ( compiler , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140397	Callee	emit_mul		1139791	0					
ANR	1140398	Identifier	emit_mul		1139791	0					
ANR	1140399	ArgumentList	compiler		1139791	1					
ANR	1140400	Argument	compiler		1139791	0					
ANR	1140401	Identifier	compiler		1139791	0					
ANR	1140402	Argument	dst		1139791	1					
ANR	1140403	Identifier	dst		1139791	0					
ANR	1140404	Argument	dstw		1139791	2					
ANR	1140405	Identifier	dstw		1139791	0					
ANR	1140406	Argument	src1		1139791	3					
ANR	1140407	Identifier	src1		1139791	0					
ANR	1140408	Argument	src1w		1139791	4					
ANR	1140409	Identifier	src1w		1139791	0					
ANR	1140410	Argument	src2		1139791	5					
ANR	1140411	Identifier	src2		1139791	0					
ANR	1140412	Argument	src2w		1139791	6					
ANR	1140413	Identifier	src2w		1139791	0					
ANR	1140414	Label	case SLJIT_AND :	2199:1:62432:62446	1139791	19	True				
ANR	1140415	Identifier	SLJIT_AND		1139791	0					
ANR	1140416	IfStatement	if ( dst == SLJIT_UNUSED )		1139791	20					
ANR	1140417	Condition	dst == SLJIT_UNUSED	2200:6:62454:62472	1139791	0	True				
ANR	1140418	EqualityExpression	dst == SLJIT_UNUSED		1139791	0		==			
ANR	1140419	Identifier	dst		1139791	0					
ANR	1140420	Identifier	SLJIT_UNUSED		1139791	1					
ANR	1140421	ReturnStatement	"return emit_test_binary ( compiler , src1 , src1w , src2 , src2w ) ;"	2201:3:62478:62537	1139791	1	True				
ANR	1140422	CallExpression	"emit_test_binary ( compiler , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140423	Callee	emit_test_binary		1139791	0					
ANR	1140424	Identifier	emit_test_binary		1139791	0					
ANR	1140425	ArgumentList	compiler		1139791	1					
ANR	1140426	Argument	compiler		1139791	0					
ANR	1140427	Identifier	compiler		1139791	0					
ANR	1140428	Argument	src1		1139791	1					
ANR	1140429	Identifier	src1		1139791	0					
ANR	1140430	Argument	src1w		1139791	2					
ANR	1140431	Identifier	src1w		1139791	0					
ANR	1140432	Argument	src2		1139791	3					
ANR	1140433	Identifier	src2		1139791	0					
ANR	1140434	Argument	src2w		1139791	4					
ANR	1140435	Identifier	src2w		1139791	0					
ANR	1140436	ReturnStatement	"return emit_cum_binary ( compiler , AND_r_rm , AND_rm_r , AND , AND_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2202:2:62541:62651	1139791	21	True				
ANR	1140437	CallExpression	"emit_cum_binary ( compiler , AND_r_rm , AND_rm_r , AND , AND_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140438	Callee	emit_cum_binary		1139791	0					
ANR	1140439	Identifier	emit_cum_binary		1139791	0					
ANR	1140440	ArgumentList	compiler		1139791	1					
ANR	1140441	Argument	compiler		1139791	0					
ANR	1140442	Identifier	compiler		1139791	0					
ANR	1140443	Argument	AND_r_rm		1139791	1					
ANR	1140444	Identifier	AND_r_rm		1139791	0					
ANR	1140445	Argument	AND_rm_r		1139791	2					
ANR	1140446	Identifier	AND_rm_r		1139791	0					
ANR	1140447	Argument	AND		1139791	3					
ANR	1140448	Identifier	AND		1139791	0					
ANR	1140449	Argument	AND_EAX_i32		1139791	4					
ANR	1140450	Identifier	AND_EAX_i32		1139791	0					
ANR	1140451	Argument	dst		1139791	5					
ANR	1140452	Identifier	dst		1139791	0					
ANR	1140453	Argument	dstw		1139791	6					
ANR	1140454	Identifier	dstw		1139791	0					
ANR	1140455	Argument	src1		1139791	7					
ANR	1140456	Identifier	src1		1139791	0					
ANR	1140457	Argument	src1w		1139791	8					
ANR	1140458	Identifier	src1w		1139791	0					
ANR	1140459	Argument	src2		1139791	9					
ANR	1140460	Identifier	src2		1139791	0					
ANR	1140461	Argument	src2w		1139791	10					
ANR	1140462	Identifier	src2w		1139791	0					
ANR	1140463	Label	case SLJIT_OR :	2204:1:62654:62667	1139791	22	True				
ANR	1140464	Identifier	SLJIT_OR		1139791	0					
ANR	1140465	ReturnStatement	"return emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2205:2:62671:62777	1139791	23	True				
ANR	1140466	CallExpression	"emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140467	Callee	emit_cum_binary		1139791	0					
ANR	1140468	Identifier	emit_cum_binary		1139791	0					
ANR	1140469	ArgumentList	compiler		1139791	1					
ANR	1140470	Argument	compiler		1139791	0					
ANR	1140471	Identifier	compiler		1139791	0					
ANR	1140472	Argument	OR_r_rm		1139791	1					
ANR	1140473	Identifier	OR_r_rm		1139791	0					
ANR	1140474	Argument	OR_rm_r		1139791	2					
ANR	1140475	Identifier	OR_rm_r		1139791	0					
ANR	1140476	Argument	OR		1139791	3					
ANR	1140477	Identifier	OR		1139791	0					
ANR	1140478	Argument	OR_EAX_i32		1139791	4					
ANR	1140479	Identifier	OR_EAX_i32		1139791	0					
ANR	1140480	Argument	dst		1139791	5					
ANR	1140481	Identifier	dst		1139791	0					
ANR	1140482	Argument	dstw		1139791	6					
ANR	1140483	Identifier	dstw		1139791	0					
ANR	1140484	Argument	src1		1139791	7					
ANR	1140485	Identifier	src1		1139791	0					
ANR	1140486	Argument	src1w		1139791	8					
ANR	1140487	Identifier	src1w		1139791	0					
ANR	1140488	Argument	src2		1139791	9					
ANR	1140489	Identifier	src2		1139791	0					
ANR	1140490	Argument	src2w		1139791	10					
ANR	1140491	Identifier	src2w		1139791	0					
ANR	1140492	Label	case SLJIT_XOR :	2207:1:62780:62794	1139791	24	True				
ANR	1140493	Identifier	SLJIT_XOR		1139791	0					
ANR	1140494	ReturnStatement	"return emit_cum_binary ( compiler , XOR_r_rm , XOR_rm_r , XOR , XOR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2208:2:62798:62908	1139791	25	True				
ANR	1140495	CallExpression	"emit_cum_binary ( compiler , XOR_r_rm , XOR_rm_r , XOR , XOR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140496	Callee	emit_cum_binary		1139791	0					
ANR	1140497	Identifier	emit_cum_binary		1139791	0					
ANR	1140498	ArgumentList	compiler		1139791	1					
ANR	1140499	Argument	compiler		1139791	0					
ANR	1140500	Identifier	compiler		1139791	0					
ANR	1140501	Argument	XOR_r_rm		1139791	1					
ANR	1140502	Identifier	XOR_r_rm		1139791	0					
ANR	1140503	Argument	XOR_rm_r		1139791	2					
ANR	1140504	Identifier	XOR_rm_r		1139791	0					
ANR	1140505	Argument	XOR		1139791	3					
ANR	1140506	Identifier	XOR		1139791	0					
ANR	1140507	Argument	XOR_EAX_i32		1139791	4					
ANR	1140508	Identifier	XOR_EAX_i32		1139791	0					
ANR	1140509	Argument	dst		1139791	5					
ANR	1140510	Identifier	dst		1139791	0					
ANR	1140511	Argument	dstw		1139791	6					
ANR	1140512	Identifier	dstw		1139791	0					
ANR	1140513	Argument	src1		1139791	7					
ANR	1140514	Identifier	src1		1139791	0					
ANR	1140515	Argument	src1w		1139791	8					
ANR	1140516	Identifier	src1w		1139791	0					
ANR	1140517	Argument	src2		1139791	9					
ANR	1140518	Identifier	src2		1139791	0					
ANR	1140519	Argument	src2w		1139791	10					
ANR	1140520	Identifier	src2w		1139791	0					
ANR	1140521	Label	case SLJIT_SHL :	2210:1:62911:62925	1139791	26	True				
ANR	1140522	Identifier	SLJIT_SHL		1139791	0					
ANR	1140523	ReturnStatement	"return emit_shift_with_flags ( compiler , SHL , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2211:2:62929:63027	1139791	27	True				
ANR	1140524	CallExpression	"emit_shift_with_flags ( compiler , SHL , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140525	Callee	emit_shift_with_flags		1139791	0					
ANR	1140526	Identifier	emit_shift_with_flags		1139791	0					
ANR	1140527	ArgumentList	compiler		1139791	1					
ANR	1140528	Argument	compiler		1139791	0					
ANR	1140529	Identifier	compiler		1139791	0					
ANR	1140530	Argument	SHL		1139791	1					
ANR	1140531	Identifier	SHL		1139791	0					
ANR	1140532	Argument	GET_FLAGS ( op )		1139791	2					
ANR	1140533	CallExpression	GET_FLAGS ( op )		1139791	0					
ANR	1140534	Callee	GET_FLAGS		1139791	0					
ANR	1140535	Identifier	GET_FLAGS		1139791	0					
ANR	1140536	ArgumentList	op		1139791	1					
ANR	1140537	Argument	op		1139791	0					
ANR	1140538	Identifier	op		1139791	0					
ANR	1140539	Argument	dst		1139791	3					
ANR	1140540	Identifier	dst		1139791	0					
ANR	1140541	Argument	dstw		1139791	4					
ANR	1140542	Identifier	dstw		1139791	0					
ANR	1140543	Argument	src1		1139791	5					
ANR	1140544	Identifier	src1		1139791	0					
ANR	1140545	Argument	src1w		1139791	6					
ANR	1140546	Identifier	src1w		1139791	0					
ANR	1140547	Argument	src2		1139791	7					
ANR	1140548	Identifier	src2		1139791	0					
ANR	1140549	Argument	src2w		1139791	8					
ANR	1140550	Identifier	src2w		1139791	0					
ANR	1140551	Label	case SLJIT_LSHR :	2213:1:63030:63045	1139791	28	True				
ANR	1140552	Identifier	SLJIT_LSHR		1139791	0					
ANR	1140553	ReturnStatement	"return emit_shift_with_flags ( compiler , SHR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2214:2:63049:63147	1139791	29	True				
ANR	1140554	CallExpression	"emit_shift_with_flags ( compiler , SHR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140555	Callee	emit_shift_with_flags		1139791	0					
ANR	1140556	Identifier	emit_shift_with_flags		1139791	0					
ANR	1140557	ArgumentList	compiler		1139791	1					
ANR	1140558	Argument	compiler		1139791	0					
ANR	1140559	Identifier	compiler		1139791	0					
ANR	1140560	Argument	SHR		1139791	1					
ANR	1140561	Identifier	SHR		1139791	0					
ANR	1140562	Argument	GET_FLAGS ( op )		1139791	2					
ANR	1140563	CallExpression	GET_FLAGS ( op )		1139791	0					
ANR	1140564	Callee	GET_FLAGS		1139791	0					
ANR	1140565	Identifier	GET_FLAGS		1139791	0					
ANR	1140566	ArgumentList	op		1139791	1					
ANR	1140567	Argument	op		1139791	0					
ANR	1140568	Identifier	op		1139791	0					
ANR	1140569	Argument	dst		1139791	3					
ANR	1140570	Identifier	dst		1139791	0					
ANR	1140571	Argument	dstw		1139791	4					
ANR	1140572	Identifier	dstw		1139791	0					
ANR	1140573	Argument	src1		1139791	5					
ANR	1140574	Identifier	src1		1139791	0					
ANR	1140575	Argument	src1w		1139791	6					
ANR	1140576	Identifier	src1w		1139791	0					
ANR	1140577	Argument	src2		1139791	7					
ANR	1140578	Identifier	src2		1139791	0					
ANR	1140579	Argument	src2w		1139791	8					
ANR	1140580	Identifier	src2w		1139791	0					
ANR	1140581	Label	case SLJIT_ASHR :	2216:1:63150:63165	1139791	30	True				
ANR	1140582	Identifier	SLJIT_ASHR		1139791	0					
ANR	1140583	ReturnStatement	"return emit_shift_with_flags ( compiler , SAR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2217:2:63169:63267	1139791	31	True				
ANR	1140584	CallExpression	"emit_shift_with_flags ( compiler , SAR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w )"		1139791	0					
ANR	1140585	Callee	emit_shift_with_flags		1139791	0					
ANR	1140586	Identifier	emit_shift_with_flags		1139791	0					
ANR	1140587	ArgumentList	compiler		1139791	1					
ANR	1140588	Argument	compiler		1139791	0					
ANR	1140589	Identifier	compiler		1139791	0					
ANR	1140590	Argument	SAR		1139791	1					
ANR	1140591	Identifier	SAR		1139791	0					
ANR	1140592	Argument	GET_FLAGS ( op )		1139791	2					
ANR	1140593	CallExpression	GET_FLAGS ( op )		1139791	0					
ANR	1140594	Callee	GET_FLAGS		1139791	0					
ANR	1140595	Identifier	GET_FLAGS		1139791	0					
ANR	1140596	ArgumentList	op		1139791	1					
ANR	1140597	Argument	op		1139791	0					
ANR	1140598	Identifier	op		1139791	0					
ANR	1140599	Argument	dst		1139791	3					
ANR	1140600	Identifier	dst		1139791	0					
ANR	1140601	Argument	dstw		1139791	4					
ANR	1140602	Identifier	dstw		1139791	0					
ANR	1140603	Argument	src1		1139791	5					
ANR	1140604	Identifier	src1		1139791	0					
ANR	1140605	Argument	src1w		1139791	6					
ANR	1140606	Identifier	src1w		1139791	0					
ANR	1140607	Argument	src2		1139791	7					
ANR	1140608	Identifier	src2		1139791	0					
ANR	1140609	Argument	src2w		1139791	8					
ANR	1140610	Identifier	src2w		1139791	0					
ANR	1140611	ReturnStatement	return SLJIT_SUCCESS ;	2221:1:63274:63294	1139791	11	True				
ANR	1140612	Identifier	SLJIT_SUCCESS		1139791	0					
ANR	1140613	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1139791	1					
ANR	1140614	Identifier	sljit_emit_op2		1139791	2					
ANR	1140615	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1139791	3					
ANR	1140616	Parameter	struct sljit_compiler * compiler	2129:49:59681:59711	1139791	0	True				
ANR	1140617	ParameterType	struct sljit_compiler *		1139791	0					
ANR	1140618	Identifier	compiler		1139791	1					
ANR	1140619	Parameter	sljit_si op	2129:82:59714:59724	1139791	1	True				
ANR	1140620	ParameterType	sljit_si		1139791	0					
ANR	1140621	Identifier	op		1139791	1					
ANR	1140622	Parameter	sljit_si dst	2130:1:59728:59739	1139791	2	True				
ANR	1140623	ParameterType	sljit_si		1139791	0					
ANR	1140624	Identifier	dst		1139791	1					
ANR	1140625	Parameter	sljit_sw dstw	2130:15:59742:59754	1139791	3	True				
ANR	1140626	ParameterType	sljit_sw		1139791	0					
ANR	1140627	Identifier	dstw		1139791	1					
ANR	1140628	Parameter	sljit_si src1	2131:1:59758:59770	1139791	4	True				
ANR	1140629	ParameterType	sljit_si		1139791	0					
ANR	1140630	Identifier	src1		1139791	1					
ANR	1140631	Parameter	sljit_sw src1w	2131:16:59773:59786	1139791	5	True				
ANR	1140632	ParameterType	sljit_sw		1139791	0					
ANR	1140633	Identifier	src1w		1139791	1					
ANR	1140634	Parameter	sljit_si src2	2132:1:59790:59802	1139791	6	True				
ANR	1140635	ParameterType	sljit_si		1139791	0					
ANR	1140636	Identifier	src2		1139791	1					
ANR	1140637	Parameter	sljit_sw src2w	2132:16:59805:59818	1139791	7	True				
ANR	1140638	ParameterType	sljit_sw		1139791	0					
ANR	1140639	Identifier	src2w		1139791	1					
ANR	1140640	CFGEntryNode	ENTRY		1139791		True				
ANR	1140641	CFGExitNode	EXIT		1139791		True				
ANR	1140642	Symbol	ADC		1139791						
ANR	1140643	Symbol	ADD		1139791						
ANR	1140644	Symbol	compiler -> flags_saved		1139791						
ANR	1140645	Symbol	ADD_EAX_i32		1139791						
ANR	1140646	Symbol	emit_lea_binary		1139791						
ANR	1140647	Symbol	* compiler		1139791						
ANR	1140648	Symbol	OR_EAX_i32		1139791						
ANR	1140649	Symbol	GET_OPCODE		1139791						
ANR	1140650	Symbol	SLJIT_IMM		1139791						
ANR	1140651	Symbol	SLJIT_KEEP_FLAGS		1139791						
ANR	1140652	Symbol	SLJIT_MUL		1139791						
ANR	1140653	Symbol	SHL		1139791						
ANR	1140654	Symbol	SHR		1139791						
ANR	1140655	Symbol	ADC_r_rm		1139791						
ANR	1140656	Symbol	emit_test_binary		1139791						
ANR	1140657	Symbol	ADD_rm_r		1139791						
ANR	1140658	Symbol	SUB		1139791						
ANR	1140659	Symbol	emit_save_flags		1139791						
ANR	1140660	Symbol	OR_rm_r		1139791						
ANR	1140661	Symbol	XOR_rm_r		1139791						
ANR	1140662	Symbol	check_sljit_emit_op2		1139791						
ANR	1140663	Symbol	emit_non_cum_binary		1139791						
ANR	1140664	Symbol	SUB_rm_r		1139791						
ANR	1140665	Symbol	SBB_rm_r		1139791						
ANR	1140666	Symbol	AND		1139791						
ANR	1140667	Symbol	AND_rm_r		1139791						
ANR	1140668	Symbol	XOR		1139791						
ANR	1140669	Symbol	emit_shift_with_flags		1139791						
ANR	1140670	Symbol	emit_restore_flags		1139791						
ANR	1140671	Symbol	SLJIT_UNLIKELY		1139791						
ANR	1140672	Symbol	emit_cum_binary		1139791						
ANR	1140673	Symbol	XOR_EAX_i32		1139791						
ANR	1140674	Symbol	emit_mul		1139791						
ANR	1140675	Symbol	src1w		1139791						
ANR	1140676	Symbol	dst		1139791						
ANR	1140677	Symbol	SAR		1139791						
ANR	1140678	Symbol	emit_cmp_binary		1139791						
ANR	1140679	Symbol	GET_FLAGS		1139791						
ANR	1140680	Symbol	ADC_EAX_i32		1139791						
ANR	1140681	Symbol	AND_EAX_i32		1139791						
ANR	1140682	Symbol	SBB		1139791						
ANR	1140683	Symbol	ADC_rm_r		1139791						
ANR	1140684	Symbol	compiler		1139791						
ANR	1140685	Symbol	SUB_EAX_i32		1139791						
ANR	1140686	Symbol	SBB_EAX_i32		1139791						
ANR	1140687	Symbol	src2w		1139791						
ANR	1140688	Symbol	op		1139791						
ANR	1140689	Symbol	OR		1139791						
ANR	1140690	Symbol	SUB_r_rm		1139791						
ANR	1140691	Symbol	SLJIT_INT_OP		1139791						
ANR	1140692	Symbol	SLJIT_SUCCESS		1139791						
ANR	1140693	Symbol	ADD_r_rm		1139791						
ANR	1140694	Symbol	OR_r_rm		1139791						
ANR	1140695	Symbol	SLJIT_UNUSED		1139791						
ANR	1140696	Symbol	src1		1139791						
ANR	1140697	Symbol	SBB_r_rm		1139791						
ANR	1140698	Symbol	compiler -> mode32		1139791						
ANR	1140699	Symbol	src2		1139791						
ANR	1140700	Symbol	AND_r_rm		1139791						
ANR	1140701	Symbol	dstw		1139791						
ANR	1140702	Symbol	compiler -> error		1139791						
ANR	1140703	Symbol	XOR_r_rm		1139791						
ANR	1140704	Symbol	SLJIT_ERR_UNSUPPORTED		1139791						
ANR	1140705	Function	sljit_get_register_index	2224:0:63299:63569							
ANR	1140706	FunctionDef	sljit_get_register_index (sljit_si reg)		1140705	0					
ANR	1140707	CompoundStatement		2225:0:63372:63569	1140705	0					
ANR	1140708	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	2226:1:63375:63427	1140705	0	True				
ANR	1140709	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1140705	0					
ANR	1140710	Callee	CHECK_REG_INDEX		1140705	0					
ANR	1140711	Identifier	CHECK_REG_INDEX		1140705	0					
ANR	1140712	ArgumentList	check_sljit_get_register_index ( reg )		1140705	1					
ANR	1140713	Argument	check_sljit_get_register_index ( reg )		1140705	0					
ANR	1140714	CallExpression	check_sljit_get_register_index ( reg )		1140705	0					
ANR	1140715	Callee	check_sljit_get_register_index		1140705	0					
ANR	1140716	Identifier	check_sljit_get_register_index		1140705	0					
ANR	1140717	ArgumentList	reg		1140705	1					
ANR	1140718	Argument	reg		1140705	0					
ANR	1140719	Identifier	reg		1140705	0					
ANR	1140720	IfStatement	if ( reg >= SLJIT_R3 && reg <= SLJIT_R6 )		1140705	1					
ANR	1140721	Condition	reg >= SLJIT_R3 && reg <= SLJIT_R6	2228:5:63491:63524	1140705	0	True				
ANR	1140722	AndExpression	reg >= SLJIT_R3 && reg <= SLJIT_R6		1140705	0		&&			
ANR	1140723	RelationalExpression	reg >= SLJIT_R3		1140705	0		>=			
ANR	1140724	Identifier	reg		1140705	0					
ANR	1140725	Identifier	SLJIT_R3		1140705	1					
ANR	1140726	RelationalExpression	reg <= SLJIT_R6		1140705	1		<=			
ANR	1140727	Identifier	reg		1140705	0					
ANR	1140728	Identifier	SLJIT_R6		1140705	1					
ANR	1140729	ReturnStatement	return - 1 ;	2229:2:63529:63538	1140705	1	True				
ANR	1140730	UnaryOperationExpression	- 1		1140705	0					
ANR	1140731	UnaryOperator	-		1140705	0					
ANR	1140732	PrimaryExpression	1		1140705	1					
ANR	1140733	ReturnStatement	return reg_map [ reg ] ;	2231:1:63548:63567	1140705	2	True				
ANR	1140734	ArrayIndexing	reg_map [ reg ]		1140705	0					
ANR	1140735	Identifier	reg_map		1140705	0					
ANR	1140736	Identifier	reg		1140705	1					
ANR	1140737	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1140705	1					
ANR	1140738	Identifier	sljit_get_register_index		1140705	2					
ANR	1140739	ParameterList	sljit_si reg		1140705	3					
ANR	1140740	Parameter	sljit_si reg	2224:59:63358:63369	1140705	0	True				
ANR	1140741	ParameterType	sljit_si		1140705	0					
ANR	1140742	Identifier	reg		1140705	1					
ANR	1140743	CFGEntryNode	ENTRY		1140705		True				
ANR	1140744	CFGExitNode	EXIT		1140705		True				
ANR	1140745	Symbol	reg		1140705						
ANR	1140746	Symbol	SLJIT_R6		1140705						
ANR	1140747	Symbol	reg_map		1140705						
ANR	1140748	Symbol	SLJIT_R3		1140705						
ANR	1140749	Symbol	* reg_map		1140705						
ANR	1140750	Symbol	* reg		1140705						
ANR	1140751	Symbol	check_sljit_get_register_index		1140705						
ANR	1140752	Function	sljit_get_float_register_index	2234:0:63572:63727							
ANR	1140753	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1140752	0					
ANR	1140754	CompoundStatement		2235:0:63651:63727	1140752	0					
ANR	1140755	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	2236:1:63654:63712	1140752	0	True				
ANR	1140756	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1140752	0					
ANR	1140757	Callee	CHECK_REG_INDEX		1140752	0					
ANR	1140758	Identifier	CHECK_REG_INDEX		1140752	0					
ANR	1140759	ArgumentList	check_sljit_get_float_register_index ( reg )		1140752	1					
ANR	1140760	Argument	check_sljit_get_float_register_index ( reg )		1140752	0					
ANR	1140761	CallExpression	check_sljit_get_float_register_index ( reg )		1140752	0					
ANR	1140762	Callee	check_sljit_get_float_register_index		1140752	0					
ANR	1140763	Identifier	check_sljit_get_float_register_index		1140752	0					
ANR	1140764	ArgumentList	reg		1140752	1					
ANR	1140765	Argument	reg		1140752	0					
ANR	1140766	Identifier	reg		1140752	0					
ANR	1140767	ReturnStatement	return reg ;	2237:1:63715:63725	1140752	1	True				
ANR	1140768	Identifier	reg		1140752	0					
ANR	1140769	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1140752	1					
ANR	1140770	Identifier	sljit_get_float_register_index		1140752	2					
ANR	1140771	ParameterList	sljit_si reg		1140752	3					
ANR	1140772	Parameter	sljit_si reg	2234:65:63637:63648	1140752	0	True				
ANR	1140773	ParameterType	sljit_si		1140752	0					
ANR	1140774	Identifier	reg		1140752	1					
ANR	1140775	CFGEntryNode	ENTRY		1140752		True				
ANR	1140776	CFGExitNode	EXIT		1140752		True				
ANR	1140777	Symbol	reg		1140752						
ANR	1140778	Symbol	check_sljit_get_float_register_index		1140752						
ANR	1140779	Function	sljit_emit_op_custom	2240:0:63730:64104							
ANR	1140780	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1140779	0					
ANR	1140781	CompoundStatement		2242:0:63853:64104	1140779	0					
ANR	1140782	IdentifierDeclStatement	sljit_ub * inst ;	2243:1:63856:63870	1140779	0	True				
ANR	1140783	IdentifierDecl	* inst		1140779	0					
ANR	1140784	IdentifierDeclType	sljit_ub *		1140779	0					
ANR	1140785	Identifier	inst		1140779	1					
ANR	1140786	ExpressionStatement	CHECK_ERROR ( )	2245:1:63874:63887	1140779	1	True				
ANR	1140787	CallExpression	CHECK_ERROR ( )		1140779	0					
ANR	1140788	Callee	CHECK_ERROR		1140779	0					
ANR	1140789	Identifier	CHECK_ERROR		1140779	0					
ANR	1140790	ArgumentList			1140779	1					
ANR	1140791	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	2246:1:63890:63952	1140779	2	True				
ANR	1140792	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1140779	0					
ANR	1140793	Callee	CHECK		1140779	0					
ANR	1140794	Identifier	CHECK		1140779	0					
ANR	1140795	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1140779	1					
ANR	1140796	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1140779	0					
ANR	1140797	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1140779	0					
ANR	1140798	Callee	check_sljit_emit_op_custom		1140779	0					
ANR	1140799	Identifier	check_sljit_emit_op_custom		1140779	0					
ANR	1140800	ArgumentList	compiler		1140779	1					
ANR	1140801	Argument	compiler		1140779	0					
ANR	1140802	Identifier	compiler		1140779	0					
ANR	1140803	Argument	instruction		1140779	1					
ANR	1140804	Identifier	instruction		1140779	0					
ANR	1140805	Argument	size		1140779	2					
ANR	1140806	Identifier	size		1140779	0					
ANR	1140807	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"	2248:1:63956:64004	1140779	3	True				
ANR	1140808	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1140779	0		=			
ANR	1140809	Identifier	inst		1140779	0					
ANR	1140810	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1140779	1					
ANR	1140811	CastTarget	sljit_ub *		1140779	0					
ANR	1140812	CallExpression	"ensure_buf ( compiler , 1 + size )"		1140779	1					
ANR	1140813	Callee	ensure_buf		1140779	0					
ANR	1140814	Identifier	ensure_buf		1140779	0					
ANR	1140815	ArgumentList	compiler		1140779	1					
ANR	1140816	Argument	compiler		1140779	0					
ANR	1140817	Identifier	compiler		1140779	0					
ANR	1140818	Argument	1 + size		1140779	1					
ANR	1140819	AdditiveExpression	1 + size		1140779	0		+			
ANR	1140820	PrimaryExpression	1		1140779	0					
ANR	1140821	Identifier	size		1140779	1					
ANR	1140822	ExpressionStatement	FAIL_IF ( ! inst )	2249:1:64007:64021	1140779	4	True				
ANR	1140823	CallExpression	FAIL_IF ( ! inst )		1140779	0					
ANR	1140824	Callee	FAIL_IF		1140779	0					
ANR	1140825	Identifier	FAIL_IF		1140779	0					
ANR	1140826	ArgumentList	! inst		1140779	1					
ANR	1140827	Argument	! inst		1140779	0					
ANR	1140828	UnaryOperationExpression	! inst		1140779	0					
ANR	1140829	UnaryOperator	!		1140779	0					
ANR	1140830	Identifier	inst		1140779	1					
ANR	1140831	ExpressionStatement	INC_SIZE ( size )	2250:1:64024:64038	1140779	5	True				
ANR	1140832	CallExpression	INC_SIZE ( size )		1140779	0					
ANR	1140833	Callee	INC_SIZE		1140779	0					
ANR	1140834	Identifier	INC_SIZE		1140779	0					
ANR	1140835	ArgumentList	size		1140779	1					
ANR	1140836	Argument	size		1140779	0					
ANR	1140837	Identifier	size		1140779	0					
ANR	1140838	ExpressionStatement	"SLJIT_MEMMOVE ( inst , instruction , size )"	2251:1:64041:64079	1140779	6	True				
ANR	1140839	CallExpression	"SLJIT_MEMMOVE ( inst , instruction , size )"		1140779	0					
ANR	1140840	Callee	SLJIT_MEMMOVE		1140779	0					
ANR	1140841	Identifier	SLJIT_MEMMOVE		1140779	0					
ANR	1140842	ArgumentList	inst		1140779	1					
ANR	1140843	Argument	inst		1140779	0					
ANR	1140844	Identifier	inst		1140779	0					
ANR	1140845	Argument	instruction		1140779	1					
ANR	1140846	Identifier	instruction		1140779	0					
ANR	1140847	Argument	size		1140779	2					
ANR	1140848	Identifier	size		1140779	0					
ANR	1140849	ReturnStatement	return SLJIT_SUCCESS ;	2252:1:64082:64102	1140779	7	True				
ANR	1140850	Identifier	SLJIT_SUCCESS		1140779	0					
ANR	1140851	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1140779	1					
ANR	1140852	Identifier	sljit_emit_op_custom		1140779	2					
ANR	1140853	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1140779	3					
ANR	1140854	Parameter	struct sljit_compiler * compiler	2240:55:63785:63815	1140779	0	True				
ANR	1140855	ParameterType	struct sljit_compiler *		1140779	0					
ANR	1140856	Identifier	compiler		1140779	1					
ANR	1140857	Parameter	void * instruction	2241:1:63819:63835	1140779	1	True				
ANR	1140858	ParameterType	void *		1140779	0					
ANR	1140859	Identifier	instruction		1140779	1					
ANR	1140860	Parameter	sljit_si size	2241:20:63838:63850	1140779	2	True				
ANR	1140861	ParameterType	sljit_si		1140779	0					
ANR	1140862	Identifier	size		1140779	1					
ANR	1140863	CFGEntryNode	ENTRY		1140779		True				
ANR	1140864	CFGExitNode	EXIT		1140779		True				
ANR	1140865	Symbol	size		1140779						
ANR	1140866	Symbol	instruction		1140779						
ANR	1140867	Symbol	inst		1140779						
ANR	1140868	Symbol	check_sljit_emit_op_custom		1140779						
ANR	1140869	Symbol	ensure_buf		1140779						
ANR	1140870	Symbol	SLJIT_SUCCESS		1140779						
ANR	1140871	Symbol	compiler		1140779						
ANR	1140872	DeclStmt									
ANR	1140873	Decl							sljit_si	sljit_si [ 3 + ( 4 + 4 ) * 2 ]	sse2_data
ANR	1140874	DeclStmt									
ANR	1140875	Decl							sljit_si	sljit_si *	sse2_buffer
ANR	1140876	Function	init_compiler	2263:0:64443:64783							
ANR	1140877	FunctionDef	init_compiler ()		1140876	0					
ANR	1140878	CompoundStatement		2264:0:64475:64783	1140876	0					
ANR	1140879	ExpressionStatement	sse2_buffer = ( sljit_si * ) ( ( ( sljit_uw ) sse2_data + 15 ) & ~0xf )	2265:1:64478:64538	1140876	0	True				
ANR	1140880	AssignmentExpression	sse2_buffer = ( sljit_si * ) ( ( ( sljit_uw ) sse2_data + 15 ) & ~0xf )		1140876	0		=			
ANR	1140881	Identifier	sse2_buffer		1140876	0					
ANR	1140882	CastExpression	( sljit_si * ) ( ( ( sljit_uw ) sse2_data + 15 ) & ~0xf )		1140876	1					
ANR	1140883	CastTarget	sljit_si *		1140876	0					
ANR	1140884	BitAndExpression	( ( sljit_uw ) sse2_data + 15 ) & ~0xf		1140876	1		&			
ANR	1140885	AdditiveExpression	( sljit_uw ) sse2_data + 15		1140876	0		+			
ANR	1140886	CastExpression	( sljit_uw ) sse2_data		1140876	0					
ANR	1140887	CastTarget	sljit_uw		1140876	0					
ANR	1140888	Identifier	sse2_data		1140876	1					
ANR	1140889	PrimaryExpression	15		1140876	1					
ANR	1140890	Identifier	~0xf		1140876	1					
ANR	1140891	ExpressionStatement	sse2_buffer [ 0 ] = 0x80000000	2267:1:64576:64603	1140876	1	True				
ANR	1140892	AssignmentExpression	sse2_buffer [ 0 ] = 0x80000000		1140876	0		=			
ANR	1140893	ArrayIndexing	sse2_buffer [ 0 ]		1140876	0					
ANR	1140894	Identifier	sse2_buffer		1140876	0					
ANR	1140895	PrimaryExpression	0		1140876	1					
ANR	1140896	PrimaryExpression	0x80000000		1140876	1					
ANR	1140897	ExpressionStatement	sse2_buffer [ 4 ] = 0x7fffffff	2268:1:64606:64633	1140876	2	True				
ANR	1140898	AssignmentExpression	sse2_buffer [ 4 ] = 0x7fffffff		1140876	0		=			
ANR	1140899	ArrayIndexing	sse2_buffer [ 4 ]		1140876	0					
ANR	1140900	Identifier	sse2_buffer		1140876	0					
ANR	1140901	PrimaryExpression	4		1140876	1					
ANR	1140902	PrimaryExpression	0x7fffffff		1140876	1					
ANR	1140903	ExpressionStatement	sse2_buffer [ 8 ] = 0	2270:1:64671:64689	1140876	3	True				
ANR	1140904	AssignmentExpression	sse2_buffer [ 8 ] = 0		1140876	0		=			
ANR	1140905	ArrayIndexing	sse2_buffer [ 8 ]		1140876	0					
ANR	1140906	Identifier	sse2_buffer		1140876	0					
ANR	1140907	PrimaryExpression	8		1140876	1					
ANR	1140908	PrimaryExpression	0		1140876	1					
ANR	1140909	ExpressionStatement	sse2_buffer [ 9 ] = 0x80000000	2271:1:64692:64719	1140876	4	True				
ANR	1140910	AssignmentExpression	sse2_buffer [ 9 ] = 0x80000000		1140876	0		=			
ANR	1140911	ArrayIndexing	sse2_buffer [ 9 ]		1140876	0					
ANR	1140912	Identifier	sse2_buffer		1140876	0					
ANR	1140913	PrimaryExpression	9		1140876	1					
ANR	1140914	PrimaryExpression	0x80000000		1140876	1					
ANR	1140915	ExpressionStatement	sse2_buffer [ 12 ] = 0xffffffff	2272:1:64722:64750	1140876	5	True				
ANR	1140916	AssignmentExpression	sse2_buffer [ 12 ] = 0xffffffff		1140876	0		=			
ANR	1140917	ArrayIndexing	sse2_buffer [ 12 ]		1140876	0					
ANR	1140918	Identifier	sse2_buffer		1140876	0					
ANR	1140919	PrimaryExpression	12		1140876	1					
ANR	1140920	PrimaryExpression	0xffffffff		1140876	1					
ANR	1140921	ExpressionStatement	sse2_buffer [ 13 ] = 0x7fffffff	2273:1:64753:64781	1140876	6	True				
ANR	1140922	AssignmentExpression	sse2_buffer [ 13 ] = 0x7fffffff		1140876	0		=			
ANR	1140923	ArrayIndexing	sse2_buffer [ 13 ]		1140876	0					
ANR	1140924	Identifier	sse2_buffer		1140876	0					
ANR	1140925	PrimaryExpression	13		1140876	1					
ANR	1140926	PrimaryExpression	0x7fffffff		1140876	1					
ANR	1140927	ReturnType	static void		1140876	1					
ANR	1140928	Identifier	init_compiler		1140876	2					
ANR	1140929	ParameterList			1140876	3					
ANR	1140930	CFGEntryNode	ENTRY		1140876		True				
ANR	1140931	CFGExitNode	EXIT		1140876		True				
ANR	1140932	Symbol	sse2_buffer		1140876						
ANR	1140933	Symbol	sse2_data		1140876						
ANR	1140934	Symbol	~0xf		1140876						
ANR	1140935	Symbol	* sse2_buffer		1140876						
ANR	1140936	Function	sljit_is_fpu_available	2276:0:64786:65109							
ANR	1140937	FunctionDef	sljit_is_fpu_available ()		1140936	0					
ANR	1140938	CompoundStatement		2277:0:64849:65109	1140936	0					
ANR	1140939	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	2279:1:64882:64911	1140936	0	True				
ANR	1140940	Identifier	SLJIT_IS_FPU_AVAILABLE		1140936	0					
ANR	1140941	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1140936	1					
ANR	1140942	Identifier	sljit_is_fpu_available		1140936	2					
ANR	1140943	ParameterList			1140936	3					
ANR	1140944	CFGEntryNode	ENTRY		1140936		True				
ANR	1140945	CFGExitNode	EXIT		1140936		True				
ANR	1140946	Symbol	SLJIT_IS_FPU_AVAILABLE		1140936						
ANR	1140947	Function	emit_sse2	2289:0:65112:65468							
ANR	1140948	FunctionDef	"emit_sse2 (struct sljit_compiler * compiler , sljit_ub opcode , sljit_si single , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w)"		1140947	0					
ANR	1140949	CompoundStatement		2291:0:65252:65468	1140947	0					
ANR	1140950	IdentifierDeclStatement	sljit_ub * inst ;	2292:1:65255:65269	1140947	0	True				
ANR	1140951	IdentifierDecl	* inst		1140947	0					
ANR	1140952	IdentifierDeclType	sljit_ub *		1140947	0					
ANR	1140953	Identifier	inst		1140947	1					
ANR	1140954	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"	2294:1:65273:65388	1140947	1	True				
ANR	1140955	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1140947	0		=			
ANR	1140956	Identifier	inst		1140947	0					
ANR	1140957	CallExpression	"emit_x86_instruction ( compiler , 2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1140947	1					
ANR	1140958	Callee	emit_x86_instruction		1140947	0					
ANR	1140959	Identifier	emit_x86_instruction		1140947	0					
ANR	1140960	ArgumentList	compiler		1140947	1					
ANR	1140961	Argument	compiler		1140947	0					
ANR	1140962	Identifier	compiler		1140947	0					
ANR	1140963	Argument	2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2		1140947	1					
ANR	1140964	InclusiveOrExpression	2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2		1140947	0		|			
ANR	1140965	PrimaryExpression	2		1140947	0					
ANR	1140966	InclusiveOrExpression	( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2		1140947	1		|			
ANR	1140967	ConditionalExpression	single ? EX86_PREF_F3 : EX86_PREF_F2		1140947	0					
ANR	1140968	Condition	single		1140947	0					
ANR	1140969	Identifier	single		1140947	0					
ANR	1140970	Identifier	EX86_PREF_F3		1140947	1					
ANR	1140971	Identifier	EX86_PREF_F2		1140947	2					
ANR	1140972	Identifier	EX86_SSE2		1140947	1					
ANR	1140973	Argument	xmm1		1140947	2					
ANR	1140974	Identifier	xmm1		1140947	0					
ANR	1140975	Argument	0		1140947	3					
ANR	1140976	PrimaryExpression	0		1140947	0					
ANR	1140977	Argument	xmm2		1140947	4					
ANR	1140978	Identifier	xmm2		1140947	0					
ANR	1140979	Argument	xmm2w		1140947	5					
ANR	1140980	Identifier	xmm2w		1140947	0					
ANR	1140981	ExpressionStatement	FAIL_IF ( ! inst )	2295:1:65391:65405	1140947	2	True				
ANR	1140982	CallExpression	FAIL_IF ( ! inst )		1140947	0					
ANR	1140983	Callee	FAIL_IF		1140947	0					
ANR	1140984	Identifier	FAIL_IF		1140947	0					
ANR	1140985	ArgumentList	! inst		1140947	1					
ANR	1140986	Argument	! inst		1140947	0					
ANR	1140987	UnaryOperationExpression	! inst		1140947	0					
ANR	1140988	UnaryOperator	!		1140947	0					
ANR	1140989	Identifier	inst		1140947	1					
ANR	1140990	ExpressionStatement	* inst ++ = GROUP_0F	2296:1:65408:65426	1140947	3	True				
ANR	1140991	AssignmentExpression	* inst ++ = GROUP_0F		1140947	0		=			
ANR	1140992	UnaryOperationExpression	* inst ++		1140947	0					
ANR	1140993	UnaryOperator	*		1140947	0					
ANR	1140994	PostIncDecOperationExpression	inst ++		1140947	1					
ANR	1140995	Identifier	inst		1140947	0					
ANR	1140996	IncDec	++		1140947	1					
ANR	1140997	Identifier	GROUP_0F		1140947	1					
ANR	1140998	ExpressionStatement	* inst = opcode	2297:1:65429:65443	1140947	4	True				
ANR	1140999	AssignmentExpression	* inst = opcode		1140947	0		=			
ANR	1141000	UnaryOperationExpression	* inst		1140947	0					
ANR	1141001	UnaryOperator	*		1140947	0					
ANR	1141002	Identifier	inst		1140947	1					
ANR	1141003	Identifier	opcode		1140947	1					
ANR	1141004	ReturnStatement	return SLJIT_SUCCESS ;	2298:1:65446:65466	1140947	5	True				
ANR	1141005	Identifier	SLJIT_SUCCESS		1140947	0					
ANR	1141006	ReturnType	static sljit_si		1140947	1					
ANR	1141007	Identifier	emit_sse2		1140947	2					
ANR	1141008	ParameterList	"struct sljit_compiler * compiler , sljit_ub opcode , sljit_si single , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w"		1140947	3					
ANR	1141009	Parameter	struct sljit_compiler * compiler	2289:26:65138:65168	1140947	0	True				
ANR	1141010	ParameterType	struct sljit_compiler *		1140947	0					
ANR	1141011	Identifier	compiler		1140947	1					
ANR	1141012	Parameter	sljit_ub opcode	2289:59:65171:65185	1140947	1	True				
ANR	1141013	ParameterType	sljit_ub		1140947	0					
ANR	1141014	Identifier	opcode		1140947	1					
ANR	1141015	Parameter	sljit_si single	2290:1:65189:65203	1140947	2	True				
ANR	1141016	ParameterType	sljit_si		1140947	0					
ANR	1141017	Identifier	single		1140947	1					
ANR	1141018	Parameter	sljit_si xmm1	2290:18:65206:65218	1140947	3	True				
ANR	1141019	ParameterType	sljit_si		1140947	0					
ANR	1141020	Identifier	xmm1		1140947	1					
ANR	1141021	Parameter	sljit_si xmm2	2290:33:65221:65233	1140947	4	True				
ANR	1141022	ParameterType	sljit_si		1140947	0					
ANR	1141023	Identifier	xmm2		1140947	1					
ANR	1141024	Parameter	sljit_sw xmm2w	2290:48:65236:65249	1140947	5	True				
ANR	1141025	ParameterType	sljit_sw		1140947	0					
ANR	1141026	Identifier	xmm2w		1140947	1					
ANR	1141027	CFGEntryNode	ENTRY		1140947		True				
ANR	1141028	CFGExitNode	EXIT		1140947		True				
ANR	1141029	Symbol	xmm1		1140947						
ANR	1141030	Symbol	xmm2		1140947						
ANR	1141031	Symbol	emit_x86_instruction		1140947						
ANR	1141032	Symbol	GROUP_0F		1140947						
ANR	1141033	Symbol	* inst		1140947						
ANR	1141034	Symbol	EX86_SSE2		1140947						
ANR	1141035	Symbol	EX86_PREF_F2		1140947						
ANR	1141036	Symbol	EX86_PREF_F3		1140947						
ANR	1141037	Symbol	* inst ++		1140947						
ANR	1141038	Symbol	SLJIT_SUCCESS		1140947						
ANR	1141039	Symbol	opcode		1140947						
ANR	1141040	Symbol	single		1140947						
ANR	1141041	Symbol	xmm2w		1140947						
ANR	1141042	Symbol	inst		1140947						
ANR	1141043	Symbol	compiler		1140947						
ANR	1141044	Function	emit_sse2_logic	2301:0:65471:65822							
ANR	1141045	FunctionDef	"emit_sse2_logic (struct sljit_compiler * compiler , sljit_ub opcode , sljit_si pref66 , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w)"		1141044	0					
ANR	1141046	CompoundStatement		2303:0:65617:65822	1141044	0					
ANR	1141047	IdentifierDeclStatement	sljit_ub * inst ;	2304:1:65620:65634	1141044	0	True				
ANR	1141048	IdentifierDecl	* inst		1141044	0					
ANR	1141049	IdentifierDeclType	sljit_ub *		1141044	0					
ANR	1141050	Identifier	inst		1141044	1					
ANR	1141051	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"	2306:1:65638:65742	1141044	1	True				
ANR	1141052	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1141044	0		=			
ANR	1141053	Identifier	inst		1141044	0					
ANR	1141054	CallExpression	"emit_x86_instruction ( compiler , 2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1141044	1					
ANR	1141055	Callee	emit_x86_instruction		1141044	0					
ANR	1141056	Identifier	emit_x86_instruction		1141044	0					
ANR	1141057	ArgumentList	compiler		1141044	1					
ANR	1141058	Argument	compiler		1141044	0					
ANR	1141059	Identifier	compiler		1141044	0					
ANR	1141060	Argument	2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2		1141044	1					
ANR	1141061	InclusiveOrExpression	2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2		1141044	0		|			
ANR	1141062	PrimaryExpression	2		1141044	0					
ANR	1141063	InclusiveOrExpression	( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2		1141044	1		|			
ANR	1141064	ConditionalExpression	pref66 ? EX86_PREF_66 : 0		1141044	0					
ANR	1141065	Condition	pref66		1141044	0					
ANR	1141066	Identifier	pref66		1141044	0					
ANR	1141067	Identifier	EX86_PREF_66		1141044	1					
ANR	1141068	PrimaryExpression	0		1141044	2					
ANR	1141069	Identifier	EX86_SSE2		1141044	1					
ANR	1141070	Argument	xmm1		1141044	2					
ANR	1141071	Identifier	xmm1		1141044	0					
ANR	1141072	Argument	0		1141044	3					
ANR	1141073	PrimaryExpression	0		1141044	0					
ANR	1141074	Argument	xmm2		1141044	4					
ANR	1141075	Identifier	xmm2		1141044	0					
ANR	1141076	Argument	xmm2w		1141044	5					
ANR	1141077	Identifier	xmm2w		1141044	0					
ANR	1141078	ExpressionStatement	FAIL_IF ( ! inst )	2307:1:65745:65759	1141044	2	True				
ANR	1141079	CallExpression	FAIL_IF ( ! inst )		1141044	0					
ANR	1141080	Callee	FAIL_IF		1141044	0					
ANR	1141081	Identifier	FAIL_IF		1141044	0					
ANR	1141082	ArgumentList	! inst		1141044	1					
ANR	1141083	Argument	! inst		1141044	0					
ANR	1141084	UnaryOperationExpression	! inst		1141044	0					
ANR	1141085	UnaryOperator	!		1141044	0					
ANR	1141086	Identifier	inst		1141044	1					
ANR	1141087	ExpressionStatement	* inst ++ = GROUP_0F	2308:1:65762:65780	1141044	3	True				
ANR	1141088	AssignmentExpression	* inst ++ = GROUP_0F		1141044	0		=			
ANR	1141089	UnaryOperationExpression	* inst ++		1141044	0					
ANR	1141090	UnaryOperator	*		1141044	0					
ANR	1141091	PostIncDecOperationExpression	inst ++		1141044	1					
ANR	1141092	Identifier	inst		1141044	0					
ANR	1141093	IncDec	++		1141044	1					
ANR	1141094	Identifier	GROUP_0F		1141044	1					
ANR	1141095	ExpressionStatement	* inst = opcode	2309:1:65783:65797	1141044	4	True				
ANR	1141096	AssignmentExpression	* inst = opcode		1141044	0		=			
ANR	1141097	UnaryOperationExpression	* inst		1141044	0					
ANR	1141098	UnaryOperator	*		1141044	0					
ANR	1141099	Identifier	inst		1141044	1					
ANR	1141100	Identifier	opcode		1141044	1					
ANR	1141101	ReturnStatement	return SLJIT_SUCCESS ;	2310:1:65800:65820	1141044	5	True				
ANR	1141102	Identifier	SLJIT_SUCCESS		1141044	0					
ANR	1141103	ReturnType	static sljit_si		1141044	1					
ANR	1141104	Identifier	emit_sse2_logic		1141044	2					
ANR	1141105	ParameterList	"struct sljit_compiler * compiler , sljit_ub opcode , sljit_si pref66 , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w"		1141044	3					
ANR	1141106	Parameter	struct sljit_compiler * compiler	2301:32:65503:65533	1141044	0	True				
ANR	1141107	ParameterType	struct sljit_compiler *		1141044	0					
ANR	1141108	Identifier	compiler		1141044	1					
ANR	1141109	Parameter	sljit_ub opcode	2301:65:65536:65550	1141044	1	True				
ANR	1141110	ParameterType	sljit_ub		1141044	0					
ANR	1141111	Identifier	opcode		1141044	1					
ANR	1141112	Parameter	sljit_si pref66	2302:1:65554:65568	1141044	2	True				
ANR	1141113	ParameterType	sljit_si		1141044	0					
ANR	1141114	Identifier	pref66		1141044	1					
ANR	1141115	Parameter	sljit_si xmm1	2302:18:65571:65583	1141044	3	True				
ANR	1141116	ParameterType	sljit_si		1141044	0					
ANR	1141117	Identifier	xmm1		1141044	1					
ANR	1141118	Parameter	sljit_si xmm2	2302:33:65586:65598	1141044	4	True				
ANR	1141119	ParameterType	sljit_si		1141044	0					
ANR	1141120	Identifier	xmm2		1141044	1					
ANR	1141121	Parameter	sljit_sw xmm2w	2302:48:65601:65614	1141044	5	True				
ANR	1141122	ParameterType	sljit_sw		1141044	0					
ANR	1141123	Identifier	xmm2w		1141044	1					
ANR	1141124	CFGEntryNode	ENTRY		1141044		True				
ANR	1141125	CFGExitNode	EXIT		1141044		True				
ANR	1141126	Symbol	xmm1		1141044						
ANR	1141127	Symbol	xmm2		1141044						
ANR	1141128	Symbol	emit_x86_instruction		1141044						
ANR	1141129	Symbol	GROUP_0F		1141044						
ANR	1141130	Symbol	* inst		1141044						
ANR	1141131	Symbol	EX86_SSE2		1141044						
ANR	1141132	Symbol	* inst ++		1141044						
ANR	1141133	Symbol	SLJIT_SUCCESS		1141044						
ANR	1141134	Symbol	opcode		1141044						
ANR	1141135	Symbol	EX86_PREF_66		1141044						
ANR	1141136	Symbol	xmm2w		1141044						
ANR	1141137	Symbol	pref66		1141044						
ANR	1141138	Symbol	inst		1141044						
ANR	1141139	Symbol	compiler		1141044						
ANR	1141140	Function	emit_sse2_load	2313:0:65825:66030							
ANR	1141141	FunctionDef	"emit_sse2_load (struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_si src , sljit_sw srcw)"		1141140	0					
ANR	1141142	CompoundStatement		2315:0:65963:66030	1141140	0					
ANR	1141143	ReturnStatement	"return emit_sse2 ( compiler , MOVSD_x_xm , single , dst , src , srcw ) ;"	2316:1:65966:66028	1141140	0	True				
ANR	1141144	CallExpression	"emit_sse2 ( compiler , MOVSD_x_xm , single , dst , src , srcw )"		1141140	0					
ANR	1141145	Callee	emit_sse2		1141140	0					
ANR	1141146	Identifier	emit_sse2		1141140	0					
ANR	1141147	ArgumentList	compiler		1141140	1					
ANR	1141148	Argument	compiler		1141140	0					
ANR	1141149	Identifier	compiler		1141140	0					
ANR	1141150	Argument	MOVSD_x_xm		1141140	1					
ANR	1141151	Identifier	MOVSD_x_xm		1141140	0					
ANR	1141152	Argument	single		1141140	2					
ANR	1141153	Identifier	single		1141140	0					
ANR	1141154	Argument	dst		1141140	3					
ANR	1141155	Identifier	dst		1141140	0					
ANR	1141156	Argument	src		1141140	4					
ANR	1141157	Identifier	src		1141140	0					
ANR	1141158	Argument	srcw		1141140	5					
ANR	1141159	Identifier	srcw		1141140	0					
ANR	1141160	ReturnType	static SLJIT_INLINE sljit_si		1141140	1					
ANR	1141161	Identifier	emit_sse2_load		1141140	2					
ANR	1141162	ParameterList	"struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_si src , sljit_sw srcw"		1141140	3					
ANR	1141163	Parameter	struct sljit_compiler * compiler	2313:44:65869:65899	1141140	0	True				
ANR	1141164	ParameterType	struct sljit_compiler *		1141140	0					
ANR	1141165	Identifier	compiler		1141140	1					
ANR	1141166	Parameter	sljit_si single	2314:1:65903:65917	1141140	1	True				
ANR	1141167	ParameterType	sljit_si		1141140	0					
ANR	1141168	Identifier	single		1141140	1					
ANR	1141169	Parameter	sljit_si dst	2314:18:65920:65931	1141140	2	True				
ANR	1141170	ParameterType	sljit_si		1141140	0					
ANR	1141171	Identifier	dst		1141140	1					
ANR	1141172	Parameter	sljit_si src	2314:32:65934:65945	1141140	3	True				
ANR	1141173	ParameterType	sljit_si		1141140	0					
ANR	1141174	Identifier	src		1141140	1					
ANR	1141175	Parameter	sljit_sw srcw	2314:46:65948:65960	1141140	4	True				
ANR	1141176	ParameterType	sljit_sw		1141140	0					
ANR	1141177	Identifier	srcw		1141140	1					
ANR	1141178	CFGEntryNode	ENTRY		1141140		True				
ANR	1141179	CFGExitNode	EXIT		1141140		True				
ANR	1141180	Symbol	single		1141140						
ANR	1141181	Symbol	dst		1141140						
ANR	1141182	Symbol	src		1141140						
ANR	1141183	Symbol	srcw		1141140						
ANR	1141184	Symbol	emit_sse2		1141140						
ANR	1141185	Symbol	compiler		1141140						
ANR	1141186	Symbol	MOVSD_x_xm		1141140						
ANR	1141187	Function	emit_sse2_store	2319:0:66033:66239							
ANR	1141188	FunctionDef	"emit_sse2_store (struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_sw dstw , sljit_si src)"		1141187	0					
ANR	1141189	CompoundStatement		2321:0:66172:66239	1141187	0					
ANR	1141190	ReturnStatement	"return emit_sse2 ( compiler , MOVSD_xm_x , single , src , dst , dstw ) ;"	2322:1:66175:66237	1141187	0	True				
ANR	1141191	CallExpression	"emit_sse2 ( compiler , MOVSD_xm_x , single , src , dst , dstw )"		1141187	0					
ANR	1141192	Callee	emit_sse2		1141187	0					
ANR	1141193	Identifier	emit_sse2		1141187	0					
ANR	1141194	ArgumentList	compiler		1141187	1					
ANR	1141195	Argument	compiler		1141187	0					
ANR	1141196	Identifier	compiler		1141187	0					
ANR	1141197	Argument	MOVSD_xm_x		1141187	1					
ANR	1141198	Identifier	MOVSD_xm_x		1141187	0					
ANR	1141199	Argument	single		1141187	2					
ANR	1141200	Identifier	single		1141187	0					
ANR	1141201	Argument	src		1141187	3					
ANR	1141202	Identifier	src		1141187	0					
ANR	1141203	Argument	dst		1141187	4					
ANR	1141204	Identifier	dst		1141187	0					
ANR	1141205	Argument	dstw		1141187	5					
ANR	1141206	Identifier	dstw		1141187	0					
ANR	1141207	ReturnType	static SLJIT_INLINE sljit_si		1141187	1					
ANR	1141208	Identifier	emit_sse2_store		1141187	2					
ANR	1141209	ParameterList	"struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_sw dstw , sljit_si src"		1141187	3					
ANR	1141210	Parameter	struct sljit_compiler * compiler	2319:45:66078:66108	1141187	0	True				
ANR	1141211	ParameterType	struct sljit_compiler *		1141187	0					
ANR	1141212	Identifier	compiler		1141187	1					
ANR	1141213	Parameter	sljit_si single	2320:1:66112:66126	1141187	1	True				
ANR	1141214	ParameterType	sljit_si		1141187	0					
ANR	1141215	Identifier	single		1141187	1					
ANR	1141216	Parameter	sljit_si dst	2320:18:66129:66140	1141187	2	True				
ANR	1141217	ParameterType	sljit_si		1141187	0					
ANR	1141218	Identifier	dst		1141187	1					
ANR	1141219	Parameter	sljit_sw dstw	2320:32:66143:66155	1141187	3	True				
ANR	1141220	ParameterType	sljit_sw		1141187	0					
ANR	1141221	Identifier	dstw		1141187	1					
ANR	1141222	Parameter	sljit_si src	2320:47:66158:66169	1141187	4	True				
ANR	1141223	ParameterType	sljit_si		1141187	0					
ANR	1141224	Identifier	src		1141187	1					
ANR	1141225	CFGEntryNode	ENTRY		1141187		True				
ANR	1141226	CFGExitNode	EXIT		1141187		True				
ANR	1141227	Symbol	single		1141187						
ANR	1141228	Symbol	dst		1141187						
ANR	1141229	Symbol	MOVSD_xm_x		1141187						
ANR	1141230	Symbol	src		1141187						
ANR	1141231	Symbol	emit_sse2		1141187						
ANR	1141232	Symbol	compiler		1141187						
ANR	1141233	Symbol	dstw		1141187						
ANR	1141234	Function	sljit_emit_fop1_convw_fromd	2325:0:66242:66933							
ANR	1141235	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1141234	0					
ANR	1141236	CompoundStatement		2328:0:66405:66933	1141234	0					
ANR	1141237	IdentifierDeclStatement	sljit_si dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1 ;	2329:1:66408:66458	1141234	0	True				
ANR	1141238	IdentifierDecl	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1141234	0					
ANR	1141239	IdentifierDeclType	sljit_si		1141234	0					
ANR	1141240	Identifier	dst_r		1141234	1					
ANR	1141241	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1141234	2		=			
ANR	1141242	Identifier	dst_r		1141234	0					
ANR	1141243	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1141234	1					
ANR	1141244	Condition	SLOW_IS_REG ( dst )		1141234	0					
ANR	1141245	CallExpression	SLOW_IS_REG ( dst )		1141234	0					
ANR	1141246	Callee	SLOW_IS_REG		1141234	0					
ANR	1141247	Identifier	SLOW_IS_REG		1141234	0					
ANR	1141248	ArgumentList	dst		1141234	1					
ANR	1141249	Argument	dst		1141234	0					
ANR	1141250	Identifier	dst		1141234	0					
ANR	1141251	Identifier	dst		1141234	1					
ANR	1141252	Identifier	TMP_REG1		1141234	2					
ANR	1141253	IdentifierDeclStatement	sljit_ub * inst ;	2330:1:66461:66475	1141234	1	True				
ANR	1141254	IdentifierDecl	* inst		1141234	0					
ANR	1141255	IdentifierDeclType	sljit_ub *		1141234	0					
ANR	1141256	Identifier	inst		1141234	1					
ANR	1141257	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVW_FROMD )		1141234	2					
ANR	1141258	Condition	GET_OPCODE ( op ) == SLJIT_CONVW_FROMD	2333:5:66540:66574	1141234	0	True				
ANR	1141259	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVW_FROMD		1141234	0		==			
ANR	1141260	CallExpression	GET_OPCODE ( op )		1141234	0					
ANR	1141261	Callee	GET_OPCODE		1141234	0					
ANR	1141262	Identifier	GET_OPCODE		1141234	0					
ANR	1141263	ArgumentList	op		1141234	1					
ANR	1141264	Argument	op		1141234	0					
ANR	1141265	Identifier	op		1141234	0					
ANR	1141266	Identifier	SLJIT_CONVW_FROMD		1141234	1					
ANR	1141267	ExpressionStatement	compiler -> mode32 = 0	2334:2:66579:66599	1141234	1	True				
ANR	1141268	AssignmentExpression	compiler -> mode32 = 0		1141234	0		=			
ANR	1141269	PtrMemberAccess	compiler -> mode32		1141234	0					
ANR	1141270	Identifier	compiler		1141234	0					
ANR	1141271	Identifier	mode32		1141234	1					
ANR	1141272	PrimaryExpression	0		1141234	1					
ANR	1141273	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2 , dst_r , 0 , src , srcw )"	2337:1:66610:66744	1141234	3	True				
ANR	1141274	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2 , dst_r , 0 , src , srcw )"		1141234	0		=			
ANR	1141275	Identifier	inst		1141234	0					
ANR	1141276	CallExpression	"emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2 , dst_r , 0 , src , srcw )"		1141234	1					
ANR	1141277	Callee	emit_x86_instruction		1141234	0					
ANR	1141278	Identifier	emit_x86_instruction		1141234	0					
ANR	1141279	ArgumentList	compiler		1141234	1					
ANR	1141280	Argument	compiler		1141234	0					
ANR	1141281	Identifier	compiler		1141234	0					
ANR	1141282	Argument	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2		1141234	1					
ANR	1141283	InclusiveOrExpression	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2		1141234	0		|			
ANR	1141284	PrimaryExpression	2		1141234	0					
ANR	1141285	InclusiveOrExpression	( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2		1141234	1		|			
ANR	1141286	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2		1141234	0					
ANR	1141287	Condition	op & SLJIT_SINGLE_OP		1141234	0					
ANR	1141288	BitAndExpression	op & SLJIT_SINGLE_OP		1141234	0		&			
ANR	1141289	Identifier	op		1141234	0					
ANR	1141290	Identifier	SLJIT_SINGLE_OP		1141234	1					
ANR	1141291	Identifier	EX86_PREF_F3		1141234	1					
ANR	1141292	Identifier	EX86_PREF_F2		1141234	2					
ANR	1141293	Identifier	EX86_SSE2_OP2		1141234	1					
ANR	1141294	Argument	dst_r		1141234	2					
ANR	1141295	Identifier	dst_r		1141234	0					
ANR	1141296	Argument	0		1141234	3					
ANR	1141297	PrimaryExpression	0		1141234	0					
ANR	1141298	Argument	src		1141234	4					
ANR	1141299	Identifier	src		1141234	0					
ANR	1141300	Argument	srcw		1141234	5					
ANR	1141301	Identifier	srcw		1141234	0					
ANR	1141302	ExpressionStatement	FAIL_IF ( ! inst )	2338:1:66747:66761	1141234	4	True				
ANR	1141303	CallExpression	FAIL_IF ( ! inst )		1141234	0					
ANR	1141304	Callee	FAIL_IF		1141234	0					
ANR	1141305	Identifier	FAIL_IF		1141234	0					
ANR	1141306	ArgumentList	! inst		1141234	1					
ANR	1141307	Argument	! inst		1141234	0					
ANR	1141308	UnaryOperationExpression	! inst		1141234	0					
ANR	1141309	UnaryOperator	!		1141234	0					
ANR	1141310	Identifier	inst		1141234	1					
ANR	1141311	ExpressionStatement	* inst ++ = GROUP_0F	2339:1:66764:66782	1141234	5	True				
ANR	1141312	AssignmentExpression	* inst ++ = GROUP_0F		1141234	0		=			
ANR	1141313	UnaryOperationExpression	* inst ++		1141234	0					
ANR	1141314	UnaryOperator	*		1141234	0					
ANR	1141315	PostIncDecOperationExpression	inst ++		1141234	1					
ANR	1141316	Identifier	inst		1141234	0					
ANR	1141317	IncDec	++		1141234	1					
ANR	1141318	Identifier	GROUP_0F		1141234	1					
ANR	1141319	ExpressionStatement	* inst = CVTTSD2SI_r_xm	2340:1:66785:66807	1141234	6	True				
ANR	1141320	AssignmentExpression	* inst = CVTTSD2SI_r_xm		1141234	0		=			
ANR	1141321	UnaryOperationExpression	* inst		1141234	0					
ANR	1141322	UnaryOperator	*		1141234	0					
ANR	1141323	Identifier	inst		1141234	1					
ANR	1141324	Identifier	CVTTSD2SI_r_xm		1141234	1					
ANR	1141325	IfStatement	if ( dst_r == TMP_REG1 && dst != SLJIT_UNUSED )		1141234	7					
ANR	1141326	Condition	dst_r == TMP_REG1 && dst != SLJIT_UNUSED	2342:5:66815:66854	1141234	0	True				
ANR	1141327	AndExpression	dst_r == TMP_REG1 && dst != SLJIT_UNUSED		1141234	0		&&			
ANR	1141328	EqualityExpression	dst_r == TMP_REG1		1141234	0		==			
ANR	1141329	Identifier	dst_r		1141234	0					
ANR	1141330	Identifier	TMP_REG1		1141234	1					
ANR	1141331	EqualityExpression	dst != SLJIT_UNUSED		1141234	1		!=			
ANR	1141332	Identifier	dst		1141234	0					
ANR	1141333	Identifier	SLJIT_UNUSED		1141234	1					
ANR	1141334	ReturnStatement	"return emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) ;"	2343:2:66859:66908	1141234	1	True				
ANR	1141335	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1141234	0					
ANR	1141336	Callee	emit_mov		1141234	0					
ANR	1141337	Identifier	emit_mov		1141234	0					
ANR	1141338	ArgumentList	compiler		1141234	1					
ANR	1141339	Argument	compiler		1141234	0					
ANR	1141340	Identifier	compiler		1141234	0					
ANR	1141341	Argument	dst		1141234	1					
ANR	1141342	Identifier	dst		1141234	0					
ANR	1141343	Argument	dstw		1141234	2					
ANR	1141344	Identifier	dstw		1141234	0					
ANR	1141345	Argument	TMP_REG1		1141234	3					
ANR	1141346	Identifier	TMP_REG1		1141234	0					
ANR	1141347	Argument	0		1141234	4					
ANR	1141348	PrimaryExpression	0		1141234	0					
ANR	1141349	ReturnStatement	return SLJIT_SUCCESS ;	2344:1:66911:66931	1141234	8	True				
ANR	1141350	Identifier	SLJIT_SUCCESS		1141234	0					
ANR	1141351	ReturnType	static SLJIT_INLINE sljit_si		1141234	1					
ANR	1141352	Identifier	sljit_emit_fop1_convw_fromd		1141234	2					
ANR	1141353	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1141234	3					
ANR	1141354	Parameter	struct sljit_compiler * compiler	2325:57:66299:66329	1141234	0	True				
ANR	1141355	ParameterType	struct sljit_compiler *		1141234	0					
ANR	1141356	Identifier	compiler		1141234	1					
ANR	1141357	Parameter	sljit_si op	2325:90:66332:66342	1141234	1	True				
ANR	1141358	ParameterType	sljit_si		1141234	0					
ANR	1141359	Identifier	op		1141234	1					
ANR	1141360	Parameter	sljit_si dst	2326:1:66346:66357	1141234	2	True				
ANR	1141361	ParameterType	sljit_si		1141234	0					
ANR	1141362	Identifier	dst		1141234	1					
ANR	1141363	Parameter	sljit_sw dstw	2326:15:66360:66372	1141234	3	True				
ANR	1141364	ParameterType	sljit_sw		1141234	0					
ANR	1141365	Identifier	dstw		1141234	1					
ANR	1141366	Parameter	sljit_si src	2327:1:66376:66387	1141234	4	True				
ANR	1141367	ParameterType	sljit_si		1141234	0					
ANR	1141368	Identifier	src		1141234	1					
ANR	1141369	Parameter	sljit_sw srcw	2327:15:66390:66402	1141234	5	True				
ANR	1141370	ParameterType	sljit_sw		1141234	0					
ANR	1141371	Identifier	srcw		1141234	1					
ANR	1141372	CFGEntryNode	ENTRY		1141234		True				
ANR	1141373	CFGExitNode	EXIT		1141234		True				
ANR	1141374	Symbol	TMP_REG1		1141234						
ANR	1141375	Symbol	dst		1141234						
ANR	1141376	Symbol	* inst ++		1141234						
ANR	1141377	Symbol	SLOW_IS_REG		1141234						
ANR	1141378	Symbol	* compiler		1141234						
ANR	1141379	Symbol	dst_r		1141234						
ANR	1141380	Symbol	GET_OPCODE		1141234						
ANR	1141381	Symbol	compiler		1141234						
ANR	1141382	Symbol	op		1141234						
ANR	1141383	Symbol	emit_x86_instruction		1141234						
ANR	1141384	Symbol	GROUP_0F		1141234						
ANR	1141385	Symbol	* inst		1141234						
ANR	1141386	Symbol	src		1141234						
ANR	1141387	Symbol	srcw		1141234						
ANR	1141388	Symbol	EX86_PREF_F2		1141234						
ANR	1141389	Symbol	SLJIT_SINGLE_OP		1141234						
ANR	1141390	Symbol	EX86_PREF_F3		1141234						
ANR	1141391	Symbol	SLJIT_SUCCESS		1141234						
ANR	1141392	Symbol	SLJIT_CONVW_FROMD		1141234						
ANR	1141393	Symbol	EX86_SSE2_OP2		1141234						
ANR	1141394	Symbol	emit_mov		1141234						
ANR	1141395	Symbol	SLJIT_UNUSED		1141234						
ANR	1141396	Symbol	inst		1141234						
ANR	1141397	Symbol	compiler -> mode32		1141234						
ANR	1141398	Symbol	dstw		1141234						
ANR	1141399	Symbol	CVTTSD2SI_r_xm		1141234						
ANR	1141400	Function	sljit_emit_fop1_convd_fromw	2347:0:66936:67953							
ANR	1141401	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1141400	0					
ANR	1141402	CompoundStatement		2350:0:67099:67953	1141400	0					
ANR	1141403	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG ;	2351:1:67102:67152	1141400	0	True				
ANR	1141404	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG		1141400	0					
ANR	1141405	IdentifierDeclType	sljit_si		1141400	0					
ANR	1141406	Identifier	dst_r		1141400	1					
ANR	1141407	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG		1141400	2		=			
ANR	1141408	Identifier	dst_r		1141400	0					
ANR	1141409	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG		1141400	1					
ANR	1141410	Condition	FAST_IS_REG ( dst )		1141400	0					
ANR	1141411	CallExpression	FAST_IS_REG ( dst )		1141400	0					
ANR	1141412	Callee	FAST_IS_REG		1141400	0					
ANR	1141413	Identifier	FAST_IS_REG		1141400	0					
ANR	1141414	ArgumentList	dst		1141400	1					
ANR	1141415	Argument	dst		1141400	0					
ANR	1141416	Identifier	dst		1141400	0					
ANR	1141417	Identifier	dst		1141400	1					
ANR	1141418	Identifier	TMP_FREG		1141400	2					
ANR	1141419	IdentifierDeclStatement	sljit_ub * inst ;	2352:1:67155:67169	1141400	1	True				
ANR	1141420	IdentifierDecl	* inst		1141400	0					
ANR	1141421	IdentifierDeclType	sljit_ub *		1141400	0					
ANR	1141422	Identifier	inst		1141400	1					
ANR	1141423	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMW )		1141400	2					
ANR	1141424	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMW	2355:5:67234:67268	1141400	0	True				
ANR	1141425	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMW		1141400	0		==			
ANR	1141426	CallExpression	GET_OPCODE ( op )		1141400	0					
ANR	1141427	Callee	GET_OPCODE		1141400	0					
ANR	1141428	Identifier	GET_OPCODE		1141400	0					
ANR	1141429	ArgumentList	op		1141400	1					
ANR	1141430	Argument	op		1141400	0					
ANR	1141431	Identifier	op		1141400	0					
ANR	1141432	Identifier	SLJIT_CONVD_FROMW		1141400	1					
ANR	1141433	ExpressionStatement	compiler -> mode32 = 0	2356:2:67273:67293	1141400	1	True				
ANR	1141434	AssignmentExpression	compiler -> mode32 = 0		1141400	0		=			
ANR	1141435	PtrMemberAccess	compiler -> mode32		1141400	0					
ANR	1141436	Identifier	compiler		1141400	0					
ANR	1141437	Identifier	mode32		1141400	1					
ANR	1141438	PrimaryExpression	0		1141400	1					
ANR	1141439	IfStatement	if ( src & SLJIT_IMM )		1141400	3					
ANR	1141440	Condition	src & SLJIT_IMM	2359:5:67308:67322	1141400	0	True				
ANR	1141441	BitAndExpression	src & SLJIT_IMM		1141400	0		&			
ANR	1141442	Identifier	src		1141400	0					
ANR	1141443	Identifier	SLJIT_IMM		1141400	1					
ANR	1141444	CompoundStatement		10:22:225:225	1141400	1					
ANR	1141445	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1141400	0					
ANR	1141446	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	2361:6:67390:67424	1141400	0	True				
ANR	1141447	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1141400	0		==			
ANR	1141448	CallExpression	GET_OPCODE ( op )		1141400	0					
ANR	1141449	Callee	GET_OPCODE		1141400	0					
ANR	1141450	Identifier	GET_OPCODE		1141400	0					
ANR	1141451	ArgumentList	op		1141400	1					
ANR	1141452	Argument	op		1141400	0					
ANR	1141453	Identifier	op		1141400	0					
ANR	1141454	Identifier	SLJIT_CONVD_FROMI		1141400	1					
ANR	1141455	ExpressionStatement	srcw = ( sljit_si ) srcw	2362:3:67430:67451	1141400	1	True				
ANR	1141456	AssignmentExpression	srcw = ( sljit_si ) srcw		1141400	0		=			
ANR	1141457	Identifier	srcw		1141400	0					
ANR	1141458	CastExpression	( sljit_si ) srcw		1141400	1					
ANR	1141459	CastTarget	sljit_si		1141400	0					
ANR	1141460	Identifier	srcw		1141400	1					
ANR	1141461	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	2364:2:67462:67504	1141400	1	True				
ANR	1141462	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1141400	0					
ANR	1141463	Callee	EMIT_MOV		1141400	0					
ANR	1141464	Identifier	EMIT_MOV		1141400	0					
ANR	1141465	ArgumentList	compiler		1141400	1					
ANR	1141466	Argument	compiler		1141400	0					
ANR	1141467	Identifier	compiler		1141400	0					
ANR	1141468	Argument	TMP_REG1		1141400	1					
ANR	1141469	Identifier	TMP_REG1		1141400	0					
ANR	1141470	Argument	0		1141400	2					
ANR	1141471	PrimaryExpression	0		1141400	0					
ANR	1141472	Argument	src		1141400	3					
ANR	1141473	Identifier	src		1141400	0					
ANR	1141474	Argument	srcw		1141400	4					
ANR	1141475	Identifier	srcw		1141400	0					
ANR	1141476	ExpressionStatement	src = TMP_REG1	2365:2:67508:67522	1141400	2	True				
ANR	1141477	AssignmentExpression	src = TMP_REG1		1141400	0		=			
ANR	1141478	Identifier	src		1141400	0					
ANR	1141479	Identifier	TMP_REG1		1141400	1					
ANR	1141480	ExpressionStatement	srcw = 0	2366:2:67526:67534	1141400	3	True				
ANR	1141481	AssignmentExpression	srcw = 0		1141400	0		=			
ANR	1141482	Identifier	srcw		1141400	0					
ANR	1141483	PrimaryExpression	0		1141400	1					
ANR	1141484	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1 , dst_r , 0 , src , srcw )"	2369:1:67541:67675	1141400	4	True				
ANR	1141485	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1 , dst_r , 0 , src , srcw )"		1141400	0		=			
ANR	1141486	Identifier	inst		1141400	0					
ANR	1141487	CallExpression	"emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1 , dst_r , 0 , src , srcw )"		1141400	1					
ANR	1141488	Callee	emit_x86_instruction		1141400	0					
ANR	1141489	Identifier	emit_x86_instruction		1141400	0					
ANR	1141490	ArgumentList	compiler		1141400	1					
ANR	1141491	Argument	compiler		1141400	0					
ANR	1141492	Identifier	compiler		1141400	0					
ANR	1141493	Argument	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1		1141400	1					
ANR	1141494	InclusiveOrExpression	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1		1141400	0		|			
ANR	1141495	PrimaryExpression	2		1141400	0					
ANR	1141496	InclusiveOrExpression	( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1		1141400	1		|			
ANR	1141497	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2		1141400	0					
ANR	1141498	Condition	op & SLJIT_SINGLE_OP		1141400	0					
ANR	1141499	BitAndExpression	op & SLJIT_SINGLE_OP		1141400	0		&			
ANR	1141500	Identifier	op		1141400	0					
ANR	1141501	Identifier	SLJIT_SINGLE_OP		1141400	1					
ANR	1141502	Identifier	EX86_PREF_F3		1141400	1					
ANR	1141503	Identifier	EX86_PREF_F2		1141400	2					
ANR	1141504	Identifier	EX86_SSE2_OP1		1141400	1					
ANR	1141505	Argument	dst_r		1141400	2					
ANR	1141506	Identifier	dst_r		1141400	0					
ANR	1141507	Argument	0		1141400	3					
ANR	1141508	PrimaryExpression	0		1141400	0					
ANR	1141509	Argument	src		1141400	4					
ANR	1141510	Identifier	src		1141400	0					
ANR	1141511	Argument	srcw		1141400	5					
ANR	1141512	Identifier	srcw		1141400	0					
ANR	1141513	ExpressionStatement	FAIL_IF ( ! inst )	2370:1:67678:67692	1141400	5	True				
ANR	1141514	CallExpression	FAIL_IF ( ! inst )		1141400	0					
ANR	1141515	Callee	FAIL_IF		1141400	0					
ANR	1141516	Identifier	FAIL_IF		1141400	0					
ANR	1141517	ArgumentList	! inst		1141400	1					
ANR	1141518	Argument	! inst		1141400	0					
ANR	1141519	UnaryOperationExpression	! inst		1141400	0					
ANR	1141520	UnaryOperator	!		1141400	0					
ANR	1141521	Identifier	inst		1141400	1					
ANR	1141522	ExpressionStatement	* inst ++ = GROUP_0F	2371:1:67695:67713	1141400	6	True				
ANR	1141523	AssignmentExpression	* inst ++ = GROUP_0F		1141400	0		=			
ANR	1141524	UnaryOperationExpression	* inst ++		1141400	0					
ANR	1141525	UnaryOperator	*		1141400	0					
ANR	1141526	PostIncDecOperationExpression	inst ++		1141400	1					
ANR	1141527	Identifier	inst		1141400	0					
ANR	1141528	IncDec	++		1141400	1					
ANR	1141529	Identifier	GROUP_0F		1141400	1					
ANR	1141530	ExpressionStatement	* inst = CVTSI2SD_x_rm	2372:1:67716:67737	1141400	7	True				
ANR	1141531	AssignmentExpression	* inst = CVTSI2SD_x_rm		1141400	0		=			
ANR	1141532	UnaryOperationExpression	* inst		1141400	0					
ANR	1141533	UnaryOperator	*		1141400	0					
ANR	1141534	Identifier	inst		1141400	1					
ANR	1141535	Identifier	CVTSI2SD_x_rm		1141400	1					
ANR	1141536	ExpressionStatement	compiler -> mode32 = 1	2375:1:67798:67818	1141400	8	True				
ANR	1141537	AssignmentExpression	compiler -> mode32 = 1		1141400	0		=			
ANR	1141538	PtrMemberAccess	compiler -> mode32		1141400	0					
ANR	1141539	Identifier	compiler		1141400	0					
ANR	1141540	Identifier	mode32		1141400	1					
ANR	1141541	PrimaryExpression	1		1141400	1					
ANR	1141542	IfStatement	if ( dst_r == TMP_FREG )		1141400	9					
ANR	1141543	Condition	dst_r == TMP_FREG	2377:5:67832:67848	1141400	0	True				
ANR	1141544	EqualityExpression	dst_r == TMP_FREG		1141400	0		==			
ANR	1141545	Identifier	dst_r		1141400	0					
ANR	1141546	Identifier	TMP_FREG		1141400	1					
ANR	1141547	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2378:2:67853:67928	1141400	1	True				
ANR	1141548	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1141400	0					
ANR	1141549	Callee	emit_sse2_store		1141400	0					
ANR	1141550	Identifier	emit_sse2_store		1141400	0					
ANR	1141551	ArgumentList	compiler		1141400	1					
ANR	1141552	Argument	compiler		1141400	0					
ANR	1141553	Identifier	compiler		1141400	0					
ANR	1141554	Argument	op & SLJIT_SINGLE_OP		1141400	1					
ANR	1141555	BitAndExpression	op & SLJIT_SINGLE_OP		1141400	0		&			
ANR	1141556	Identifier	op		1141400	0					
ANR	1141557	Identifier	SLJIT_SINGLE_OP		1141400	1					
ANR	1141558	Argument	dst		1141400	2					
ANR	1141559	Identifier	dst		1141400	0					
ANR	1141560	Argument	dstw		1141400	3					
ANR	1141561	Identifier	dstw		1141400	0					
ANR	1141562	Argument	TMP_FREG		1141400	4					
ANR	1141563	Identifier	TMP_FREG		1141400	0					
ANR	1141564	ReturnStatement	return SLJIT_SUCCESS ;	2379:1:67931:67951	1141400	10	True				
ANR	1141565	Identifier	SLJIT_SUCCESS		1141400	0					
ANR	1141566	ReturnType	static SLJIT_INLINE sljit_si		1141400	1					
ANR	1141567	Identifier	sljit_emit_fop1_convd_fromw		1141400	2					
ANR	1141568	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1141400	3					
ANR	1141569	Parameter	struct sljit_compiler * compiler	2347:57:66993:67023	1141400	0	True				
ANR	1141570	ParameterType	struct sljit_compiler *		1141400	0					
ANR	1141571	Identifier	compiler		1141400	1					
ANR	1141572	Parameter	sljit_si op	2347:90:67026:67036	1141400	1	True				
ANR	1141573	ParameterType	sljit_si		1141400	0					
ANR	1141574	Identifier	op		1141400	1					
ANR	1141575	Parameter	sljit_si dst	2348:1:67040:67051	1141400	2	True				
ANR	1141576	ParameterType	sljit_si		1141400	0					
ANR	1141577	Identifier	dst		1141400	1					
ANR	1141578	Parameter	sljit_sw dstw	2348:15:67054:67066	1141400	3	True				
ANR	1141579	ParameterType	sljit_sw		1141400	0					
ANR	1141580	Identifier	dstw		1141400	1					
ANR	1141581	Parameter	sljit_si src	2349:1:67070:67081	1141400	4	True				
ANR	1141582	ParameterType	sljit_si		1141400	0					
ANR	1141583	Identifier	src		1141400	1					
ANR	1141584	Parameter	sljit_sw srcw	2349:15:67084:67096	1141400	5	True				
ANR	1141585	ParameterType	sljit_sw		1141400	0					
ANR	1141586	Identifier	srcw		1141400	1					
ANR	1141587	CFGEntryNode	ENTRY		1141400		True				
ANR	1141588	CFGExitNode	EXIT		1141400		True				
ANR	1141589	Symbol	TMP_REG1		1141400						
ANR	1141590	Symbol	dst		1141400						
ANR	1141591	Symbol	SLJIT_CONVD_FROMW		1141400						
ANR	1141592	Symbol	CVTSI2SD_x_rm		1141400						
ANR	1141593	Symbol	* inst ++		1141400						
ANR	1141594	Symbol	* compiler		1141400						
ANR	1141595	Symbol	dst_r		1141400						
ANR	1141596	Symbol	GET_OPCODE		1141400						
ANR	1141597	Symbol	SLJIT_IMM		1141400						
ANR	1141598	Symbol	SLJIT_CONVD_FROMI		1141400						
ANR	1141599	Symbol	emit_sse2_store		1141400						
ANR	1141600	Symbol	compiler		1141400						
ANR	1141601	Symbol	op		1141400						
ANR	1141602	Symbol	emit_x86_instruction		1141400						
ANR	1141603	Symbol	GROUP_0F		1141400						
ANR	1141604	Symbol	FAST_IS_REG		1141400						
ANR	1141605	Symbol	* inst		1141400						
ANR	1141606	Symbol	src		1141400						
ANR	1141607	Symbol	srcw		1141400						
ANR	1141608	Symbol	EX86_PREF_F2		1141400						
ANR	1141609	Symbol	EX86_PREF_F3		1141400						
ANR	1141610	Symbol	SLJIT_SINGLE_OP		1141400						
ANR	1141611	Symbol	SLJIT_SUCCESS		1141400						
ANR	1141612	Symbol	EX86_SSE2_OP1		1141400						
ANR	1141613	Symbol	TMP_FREG		1141400						
ANR	1141614	Symbol	inst		1141400						
ANR	1141615	Symbol	compiler -> mode32		1141400						
ANR	1141616	Symbol	dstw		1141400						
ANR	1141617	Function	sljit_emit_fop1_cmp	2382:0:67956:68369							
ANR	1141618	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1141617	0					
ANR	1141619	CompoundStatement		2385:0:68115:68369	1141617	0					
ANR	1141620	ExpressionStatement	compiler -> flags_saved = 0	2386:1:68118:68143	1141617	0	True				
ANR	1141621	AssignmentExpression	compiler -> flags_saved = 0		1141617	0		=			
ANR	1141622	PtrMemberAccess	compiler -> flags_saved		1141617	0					
ANR	1141623	Identifier	compiler		1141617	0					
ANR	1141624	Identifier	flags_saved		1141617	1					
ANR	1141625	PrimaryExpression	0		1141617	1					
ANR	1141626	IfStatement	if ( ! FAST_IS_REG ( src1 ) )		1141617	1					
ANR	1141627	Condition	! FAST_IS_REG ( src1 )	2387:5:68150:68167	1141617	0	True				
ANR	1141628	UnaryOperationExpression	! FAST_IS_REG ( src1 )		1141617	0					
ANR	1141629	UnaryOperator	!		1141617	0					
ANR	1141630	CallExpression	FAST_IS_REG ( src1 )		1141617	1					
ANR	1141631	Callee	FAST_IS_REG		1141617	0					
ANR	1141632	Identifier	FAST_IS_REG		1141617	0					
ANR	1141633	ArgumentList	src1		1141617	1					
ANR	1141634	Argument	src1		1141617	0					
ANR	1141635	Identifier	src1		1141617	0					
ANR	1141636	CompoundStatement		3:25:54:54	1141617	1					
ANR	1141637	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"	2388:2:68174:68252	1141617	0	True				
ANR	1141638	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"		1141617	0					
ANR	1141639	Callee	FAIL_IF		1141617	0					
ANR	1141640	Identifier	FAIL_IF		1141617	0					
ANR	1141641	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1141617	1					
ANR	1141642	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1141617	0					
ANR	1141643	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1141617	0					
ANR	1141644	Callee	emit_sse2_load		1141617	0					
ANR	1141645	Identifier	emit_sse2_load		1141617	0					
ANR	1141646	ArgumentList	compiler		1141617	1					
ANR	1141647	Argument	compiler		1141617	0					
ANR	1141648	Identifier	compiler		1141617	0					
ANR	1141649	Argument	op & SLJIT_SINGLE_OP		1141617	1					
ANR	1141650	BitAndExpression	op & SLJIT_SINGLE_OP		1141617	0		&			
ANR	1141651	Identifier	op		1141617	0					
ANR	1141652	Identifier	SLJIT_SINGLE_OP		1141617	1					
ANR	1141653	Argument	TMP_FREG		1141617	2					
ANR	1141654	Identifier	TMP_FREG		1141617	0					
ANR	1141655	Argument	src1		1141617	3					
ANR	1141656	Identifier	src1		1141617	0					
ANR	1141657	Argument	src1w		1141617	4					
ANR	1141658	Identifier	src1w		1141617	0					
ANR	1141659	ExpressionStatement	src1 = TMP_FREG	2389:2:68256:68271	1141617	1	True				
ANR	1141660	AssignmentExpression	src1 = TMP_FREG		1141617	0		=			
ANR	1141661	Identifier	src1		1141617	0					
ANR	1141662	Identifier	TMP_FREG		1141617	1					
ANR	1141663	ReturnStatement	"return emit_sse2_logic ( compiler , UCOMISD_x_xm , ! ( op & SLJIT_SINGLE_OP ) , src1 , src2 , src2w ) ;"	2391:1:68277:68367	1141617	2	True				
ANR	1141664	CallExpression	"emit_sse2_logic ( compiler , UCOMISD_x_xm , ! ( op & SLJIT_SINGLE_OP ) , src1 , src2 , src2w )"		1141617	0					
ANR	1141665	Callee	emit_sse2_logic		1141617	0					
ANR	1141666	Identifier	emit_sse2_logic		1141617	0					
ANR	1141667	ArgumentList	compiler		1141617	1					
ANR	1141668	Argument	compiler		1141617	0					
ANR	1141669	Identifier	compiler		1141617	0					
ANR	1141670	Argument	UCOMISD_x_xm		1141617	1					
ANR	1141671	Identifier	UCOMISD_x_xm		1141617	0					
ANR	1141672	Argument	! ( op & SLJIT_SINGLE_OP )		1141617	2					
ANR	1141673	UnaryOperationExpression	! ( op & SLJIT_SINGLE_OP )		1141617	0					
ANR	1141674	UnaryOperator	!		1141617	0					
ANR	1141675	BitAndExpression	op & SLJIT_SINGLE_OP		1141617	1		&			
ANR	1141676	Identifier	op		1141617	0					
ANR	1141677	Identifier	SLJIT_SINGLE_OP		1141617	1					
ANR	1141678	Argument	src1		1141617	3					
ANR	1141679	Identifier	src1		1141617	0					
ANR	1141680	Argument	src2		1141617	4					
ANR	1141681	Identifier	src2		1141617	0					
ANR	1141682	Argument	src2w		1141617	5					
ANR	1141683	Identifier	src2w		1141617	0					
ANR	1141684	ReturnType	static SLJIT_INLINE sljit_si		1141617	1					
ANR	1141685	Identifier	sljit_emit_fop1_cmp		1141617	2					
ANR	1141686	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1141617	3					
ANR	1141687	Parameter	struct sljit_compiler * compiler	2382:49:68005:68035	1141617	0	True				
ANR	1141688	ParameterType	struct sljit_compiler *		1141617	0					
ANR	1141689	Identifier	compiler		1141617	1					
ANR	1141690	Parameter	sljit_si op	2382:82:68038:68048	1141617	1	True				
ANR	1141691	ParameterType	sljit_si		1141617	0					
ANR	1141692	Identifier	op		1141617	1					
ANR	1141693	Parameter	sljit_si src1	2383:1:68052:68064	1141617	2	True				
ANR	1141694	ParameterType	sljit_si		1141617	0					
ANR	1141695	Identifier	src1		1141617	1					
ANR	1141696	Parameter	sljit_sw src1w	2383:16:68067:68080	1141617	3	True				
ANR	1141697	ParameterType	sljit_sw		1141617	0					
ANR	1141698	Identifier	src1w		1141617	1					
ANR	1141699	Parameter	sljit_si src2	2384:1:68084:68096	1141617	4	True				
ANR	1141700	ParameterType	sljit_si		1141617	0					
ANR	1141701	Identifier	src2		1141617	1					
ANR	1141702	Parameter	sljit_sw src2w	2384:16:68099:68112	1141617	5	True				
ANR	1141703	ParameterType	sljit_sw		1141617	0					
ANR	1141704	Identifier	src2w		1141617	1					
ANR	1141705	CFGEntryNode	ENTRY		1141617		True				
ANR	1141706	CFGExitNode	EXIT		1141617		True				
ANR	1141707	Symbol	src2w		1141617						
ANR	1141708	Symbol	UCOMISD_x_xm		1141617						
ANR	1141709	Symbol	op		1141617						
ANR	1141710	Symbol	src1w		1141617						
ANR	1141711	Symbol	FAST_IS_REG		1141617						
ANR	1141712	Symbol	compiler -> flags_saved		1141617						
ANR	1141713	Symbol	SLJIT_SINGLE_OP		1141617						
ANR	1141714	Symbol	* compiler		1141617						
ANR	1141715	Symbol	emit_sse2_load		1141617						
ANR	1141716	Symbol	TMP_FREG		1141617						
ANR	1141717	Symbol	src1		1141617						
ANR	1141718	Symbol	src2		1141617						
ANR	1141719	Symbol	compiler		1141617						
ANR	1141720	Symbol	emit_sse2_logic		1141617						
ANR	1141721	Function	sljit_emit_fop1	2394:0:68372:70577							
ANR	1141722	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1141721	0					
ANR	1141723	CompoundStatement		2397:0:68528:70577	1141721	0					
ANR	1141724	IdentifierDeclStatement	sljit_si dst_r ;	2398:1:68531:68545	1141721	0	True				
ANR	1141725	IdentifierDecl	dst_r		1141721	0					
ANR	1141726	IdentifierDeclType	sljit_si		1141721	0					
ANR	1141727	Identifier	dst_r		1141721	1					
ANR	1141728	ExpressionStatement	compiler -> mode32 = 1	2401:1:68606:68626	1141721	1	True				
ANR	1141729	AssignmentExpression	compiler -> mode32 = 1		1141721	0		=			
ANR	1141730	PtrMemberAccess	compiler -> mode32		1141721	0					
ANR	1141731	Identifier	compiler		1141721	0					
ANR	1141732	Identifier	mode32		1141721	1					
ANR	1141733	PrimaryExpression	1		1141721	1					
ANR	1141734	ExpressionStatement	CHECK_ERROR ( )	2404:1:68637:68650	1141721	2	True				
ANR	1141735	CallExpression	CHECK_ERROR ( )		1141721	0					
ANR	1141736	Callee	CHECK_ERROR		1141721	0					
ANR	1141737	Identifier	CHECK_ERROR		1141721	0					
ANR	1141738	ArgumentList			1141721	1					
ANR	1141739	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	2405:1:68653:68722	1141721	3	True				
ANR	1141740	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1141721	0					
ANR	1141741	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1141721	0					
ANR	1141742	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1141721	0					
ANR	1141743	ArgumentList	compiler		1141721	1					
ANR	1141744	Argument	compiler		1141721	0					
ANR	1141745	Identifier	compiler		1141721	0					
ANR	1141746	Argument	op		1141721	1					
ANR	1141747	Identifier	op		1141721	0					
ANR	1141748	Argument	dst		1141721	2					
ANR	1141749	Identifier	dst		1141721	0					
ANR	1141750	Argument	dstw		1141721	3					
ANR	1141751	Identifier	dstw		1141721	0					
ANR	1141752	Argument	src		1141721	4					
ANR	1141753	Identifier	src		1141721	0					
ANR	1141754	Argument	srcw		1141721	5					
ANR	1141755	Identifier	srcw		1141721	0					
ANR	1141756	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_DMOV )		1141721	4					
ANR	1141757	Condition	GET_OPCODE ( op ) == SLJIT_DMOV	2407:5:68730:68757	1141721	0	True				
ANR	1141758	EqualityExpression	GET_OPCODE ( op ) == SLJIT_DMOV		1141721	0		==			
ANR	1141759	CallExpression	GET_OPCODE ( op )		1141721	0					
ANR	1141760	Callee	GET_OPCODE		1141721	0					
ANR	1141761	Identifier	GET_OPCODE		1141721	0					
ANR	1141762	ArgumentList	op		1141721	1					
ANR	1141763	Argument	op		1141721	0					
ANR	1141764	Identifier	op		1141721	0					
ANR	1141765	Identifier	SLJIT_DMOV		1141721	1					
ANR	1141766	CompoundStatement		11:35:231:231	1141721	1					
ANR	1141767	IfStatement	if ( FAST_IS_REG ( dst ) )		1141721	0					
ANR	1141768	Condition	FAST_IS_REG ( dst )	2408:6:68768:68783	1141721	0	True				
ANR	1141769	CallExpression	FAST_IS_REG ( dst )		1141721	0					
ANR	1141770	Callee	FAST_IS_REG		1141721	0					
ANR	1141771	Identifier	FAST_IS_REG		1141721	0					
ANR	1141772	ArgumentList	dst		1141721	1					
ANR	1141773	Argument	dst		1141721	0					
ANR	1141774	Identifier	dst		1141721	0					
ANR	1141775	ReturnStatement	"return emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst , src , srcw ) ;"	2409:3:68789:68858	1141721	1	True				
ANR	1141776	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst , src , srcw )"		1141721	0					
ANR	1141777	Callee	emit_sse2_load		1141721	0					
ANR	1141778	Identifier	emit_sse2_load		1141721	0					
ANR	1141779	ArgumentList	compiler		1141721	1					
ANR	1141780	Argument	compiler		1141721	0					
ANR	1141781	Identifier	compiler		1141721	0					
ANR	1141782	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1141783	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1141784	Identifier	op		1141721	0					
ANR	1141785	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141786	Argument	dst		1141721	2					
ANR	1141787	Identifier	dst		1141721	0					
ANR	1141788	Argument	src		1141721	3					
ANR	1141789	Identifier	src		1141721	0					
ANR	1141790	Argument	srcw		1141721	4					
ANR	1141791	Identifier	srcw		1141721	0					
ANR	1141792	IfStatement	if ( FAST_IS_REG ( src ) )		1141721	1					
ANR	1141793	Condition	FAST_IS_REG ( src )	2410:6:68866:68881	1141721	0	True				
ANR	1141794	CallExpression	FAST_IS_REG ( src )		1141721	0					
ANR	1141795	Callee	FAST_IS_REG		1141721	0					
ANR	1141796	Identifier	FAST_IS_REG		1141721	0					
ANR	1141797	ArgumentList	src		1141721	1					
ANR	1141798	Argument	src		1141721	0					
ANR	1141799	Identifier	src		1141721	0					
ANR	1141800	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , src ) ;"	2411:3:68887:68957	1141721	1	True				
ANR	1141801	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , src )"		1141721	0					
ANR	1141802	Callee	emit_sse2_store		1141721	0					
ANR	1141803	Identifier	emit_sse2_store		1141721	0					
ANR	1141804	ArgumentList	compiler		1141721	1					
ANR	1141805	Argument	compiler		1141721	0					
ANR	1141806	Identifier	compiler		1141721	0					
ANR	1141807	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1141808	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1141809	Identifier	op		1141721	0					
ANR	1141810	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141811	Argument	dst		1141721	2					
ANR	1141812	Identifier	dst		1141721	0					
ANR	1141813	Argument	dstw		1141721	3					
ANR	1141814	Identifier	dstw		1141721	0					
ANR	1141815	Argument	src		1141721	4					
ANR	1141816	Identifier	src		1141721	0					
ANR	1141817	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw ) )"	2412:2:68961:69037	1141721	2	True				
ANR	1141818	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw ) )"		1141721	0					
ANR	1141819	Callee	FAIL_IF		1141721	0					
ANR	1141820	Identifier	FAIL_IF		1141721	0					
ANR	1141821	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw )"		1141721	1					
ANR	1141822	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw )"		1141721	0					
ANR	1141823	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw )"		1141721	0					
ANR	1141824	Callee	emit_sse2_load		1141721	0					
ANR	1141825	Identifier	emit_sse2_load		1141721	0					
ANR	1141826	ArgumentList	compiler		1141721	1					
ANR	1141827	Argument	compiler		1141721	0					
ANR	1141828	Identifier	compiler		1141721	0					
ANR	1141829	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1141830	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1141831	Identifier	op		1141721	0					
ANR	1141832	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141833	Argument	TMP_FREG		1141721	2					
ANR	1141834	Identifier	TMP_FREG		1141721	0					
ANR	1141835	Argument	src		1141721	3					
ANR	1141836	Identifier	src		1141721	0					
ANR	1141837	Argument	srcw		1141721	4					
ANR	1141838	Identifier	srcw		1141721	0					
ANR	1141839	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2413:2:69041:69116	1141721	3	True				
ANR	1141840	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1141721	0					
ANR	1141841	Callee	emit_sse2_store		1141721	0					
ANR	1141842	Identifier	emit_sse2_store		1141721	0					
ANR	1141843	ArgumentList	compiler		1141721	1					
ANR	1141844	Argument	compiler		1141721	0					
ANR	1141845	Identifier	compiler		1141721	0					
ANR	1141846	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1141847	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1141848	Identifier	op		1141721	0					
ANR	1141849	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141850	Argument	dst		1141721	2					
ANR	1141851	Identifier	dst		1141721	0					
ANR	1141852	Argument	dstw		1141721	3					
ANR	1141853	Identifier	dstw		1141721	0					
ANR	1141854	Argument	TMP_FREG		1141721	4					
ANR	1141855	Identifier	TMP_FREG		1141721	0					
ANR	1141856	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS )		1141721	5					
ANR	1141857	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS	2416:5:69127:69161	1141721	0	True				
ANR	1141858	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1141721	0		==			
ANR	1141859	CallExpression	GET_OPCODE ( op )		1141721	0					
ANR	1141860	Callee	GET_OPCODE		1141721	0					
ANR	1141861	Identifier	GET_OPCODE		1141721	0					
ANR	1141862	ArgumentList	op		1141721	1					
ANR	1141863	Argument	op		1141721	0					
ANR	1141864	Identifier	op		1141721	0					
ANR	1141865	Identifier	SLJIT_CONVD_FROMS		1141721	1					
ANR	1141866	CompoundStatement		20:42:635:635	1141721	1					
ANR	1141867	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG	2417:2:69168:69209	1141721	0	True				
ANR	1141868	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG		1141721	0		=			
ANR	1141869	Identifier	dst_r		1141721	0					
ANR	1141870	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG		1141721	1					
ANR	1141871	Condition	FAST_IS_REG ( dst )		1141721	0					
ANR	1141872	CallExpression	FAST_IS_REG ( dst )		1141721	0					
ANR	1141873	Callee	FAST_IS_REG		1141721	0					
ANR	1141874	Identifier	FAST_IS_REG		1141721	0					
ANR	1141875	ArgumentList	dst		1141721	1					
ANR	1141876	Argument	dst		1141721	0					
ANR	1141877	Identifier	dst		1141721	0					
ANR	1141878	Identifier	dst		1141721	1					
ANR	1141879	Identifier	TMP_FREG		1141721	2					
ANR	1141880	IfStatement	if ( FAST_IS_REG ( src ) )		1141721	1					
ANR	1141881	Condition	FAST_IS_REG ( src )	2418:6:69217:69232	1141721	0	True				
ANR	1141882	CallExpression	FAST_IS_REG ( src )		1141721	0					
ANR	1141883	Callee	FAST_IS_REG		1141721	0					
ANR	1141884	Identifier	FAST_IS_REG		1141721	0					
ANR	1141885	ArgumentList	src		1141721	1					
ANR	1141886	Argument	src		1141721	0					
ANR	1141887	Identifier	src		1141721	0					
ANR	1141888	CompoundStatement		22:24:706:706	1141721	1					
ANR	1141889	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 ) )"	2422:3:69402:69486	1141721	0	True				
ANR	1141890	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 ) )"		1141721	0					
ANR	1141891	Callee	FAIL_IF		1141721	0					
ANR	1141892	Identifier	FAIL_IF		1141721	0					
ANR	1141893	ArgumentList	"emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 )"		1141721	1					
ANR	1141894	Argument	"emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 )"		1141721	0					
ANR	1141895	CallExpression	"emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 )"		1141721	0					
ANR	1141896	Callee	emit_sse2_logic		1141721	0					
ANR	1141897	Identifier	emit_sse2_logic		1141721	0					
ANR	1141898	ArgumentList	compiler		1141721	1					
ANR	1141899	Argument	compiler		1141721	0					
ANR	1141900	Identifier	compiler		1141721	0					
ANR	1141901	Argument	UNPCKLPD_x_xm		1141721	1					
ANR	1141902	Identifier	UNPCKLPD_x_xm		1141721	0					
ANR	1141903	Argument	op & SLJIT_SINGLE_OP		1141721	2					
ANR	1141904	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1141905	Identifier	op		1141721	0					
ANR	1141906	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141907	Argument	src		1141721	3					
ANR	1141908	Identifier	src		1141721	0					
ANR	1141909	Argument	src		1141721	4					
ANR	1141910	Identifier	src		1141721	0					
ANR	1141911	Argument	0		1141721	5					
ANR	1141912	PrimaryExpression	0		1141721	0					
ANR	1141913	ElseStatement	else		1141721	0					
ANR	1141914	CompoundStatement		28:7:970:970	1141721	0					
ANR	1141915	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw ) )"	2425:3:69504:69583	1141721	0	True				
ANR	1141916	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw ) )"		1141721	0					
ANR	1141917	Callee	FAIL_IF		1141721	0					
ANR	1141918	Identifier	FAIL_IF		1141721	0					
ANR	1141919	ArgumentList	"emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw )"		1141721	1					
ANR	1141920	Argument	"emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw )"		1141721	0					
ANR	1141921	CallExpression	"emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw )"		1141721	0					
ANR	1141922	Callee	emit_sse2_load		1141721	0					
ANR	1141923	Identifier	emit_sse2_load		1141721	0					
ANR	1141924	ArgumentList	compiler		1141721	1					
ANR	1141925	Argument	compiler		1141721	0					
ANR	1141926	Identifier	compiler		1141721	0					
ANR	1141927	Argument	! ( op & SLJIT_SINGLE_OP )		1141721	1					
ANR	1141928	UnaryOperationExpression	! ( op & SLJIT_SINGLE_OP )		1141721	0					
ANR	1141929	UnaryOperator	!		1141721	0					
ANR	1141930	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	1		&			
ANR	1141931	Identifier	op		1141721	0					
ANR	1141932	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141933	Argument	TMP_FREG		1141721	2					
ANR	1141934	Identifier	TMP_FREG		1141721	0					
ANR	1141935	Argument	src		1141721	3					
ANR	1141936	Identifier	src		1141721	0					
ANR	1141937	Argument	srcw		1141721	4					
ANR	1141938	Identifier	srcw		1141721	0					
ANR	1141939	ExpressionStatement	src = TMP_FREG	2426:3:69588:69602	1141721	1	True				
ANR	1141940	AssignmentExpression	src = TMP_FREG		1141721	0		=			
ANR	1141941	Identifier	src		1141721	0					
ANR	1141942	Identifier	TMP_FREG		1141721	1					
ANR	1141943	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"	2429:2:69611:69697	1141721	2	True				
ANR	1141944	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1141721	0					
ANR	1141945	Callee	FAIL_IF		1141721	0					
ANR	1141946	Identifier	FAIL_IF		1141721	0					
ANR	1141947	ArgumentList	"emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1141721	1					
ANR	1141948	Argument	"emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1141721	0					
ANR	1141949	CallExpression	"emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1141721	0					
ANR	1141950	Callee	emit_sse2_logic		1141721	0					
ANR	1141951	Identifier	emit_sse2_logic		1141721	0					
ANR	1141952	ArgumentList	compiler		1141721	1					
ANR	1141953	Argument	compiler		1141721	0					
ANR	1141954	Identifier	compiler		1141721	0					
ANR	1141955	Argument	CVTPD2PS_x_xm		1141721	1					
ANR	1141956	Identifier	CVTPD2PS_x_xm		1141721	0					
ANR	1141957	Argument	op & SLJIT_SINGLE_OP		1141721	2					
ANR	1141958	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1141959	Identifier	op		1141721	0					
ANR	1141960	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141961	Argument	dst_r		1141721	3					
ANR	1141962	Identifier	dst_r		1141721	0					
ANR	1141963	Argument	src		1141721	4					
ANR	1141964	Identifier	src		1141721	0					
ANR	1141965	Argument	0		1141721	5					
ANR	1141966	PrimaryExpression	0		1141721	0					
ANR	1141967	IfStatement	if ( dst_r == TMP_FREG )		1141721	3					
ANR	1141968	Condition	dst_r == TMP_FREG	2430:6:69705:69721	1141721	0	True				
ANR	1141969	EqualityExpression	dst_r == TMP_FREG		1141721	0		==			
ANR	1141970	Identifier	dst_r		1141721	0					
ANR	1141971	Identifier	TMP_FREG		1141721	1					
ANR	1141972	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2431:3:69727:69802	1141721	1	True				
ANR	1141973	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1141721	0					
ANR	1141974	Callee	emit_sse2_store		1141721	0					
ANR	1141975	Identifier	emit_sse2_store		1141721	0					
ANR	1141976	ArgumentList	compiler		1141721	1					
ANR	1141977	Argument	compiler		1141721	0					
ANR	1141978	Identifier	compiler		1141721	0					
ANR	1141979	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1141980	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1141981	Identifier	op		1141721	0					
ANR	1141982	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1141983	Argument	dst		1141721	2					
ANR	1141984	Identifier	dst		1141721	0					
ANR	1141985	Argument	dstw		1141721	3					
ANR	1141986	Identifier	dstw		1141721	0					
ANR	1141987	Argument	TMP_FREG		1141721	4					
ANR	1141988	Identifier	TMP_FREG		1141721	0					
ANR	1141989	ReturnStatement	return SLJIT_SUCCESS ;	2432:2:69806:69826	1141721	4	True				
ANR	1141990	Identifier	SLJIT_SUCCESS		1141721	0					
ANR	1141991	IfStatement	if ( SLOW_IS_REG ( dst ) )		1141721	6					
ANR	1141992	Condition	SLOW_IS_REG ( dst )	2435:5:69837:69852	1141721	0	True				
ANR	1141993	CallExpression	SLOW_IS_REG ( dst )		1141721	0					
ANR	1141994	Callee	SLOW_IS_REG		1141721	0					
ANR	1141995	Identifier	SLOW_IS_REG		1141721	0					
ANR	1141996	ArgumentList	dst		1141721	1					
ANR	1141997	Argument	dst		1141721	0					
ANR	1141998	Identifier	dst		1141721	0					
ANR	1141999	CompoundStatement		39:23:1326:1326	1141721	1					
ANR	1142000	ExpressionStatement	dst_r = dst	2436:2:69859:69870	1141721	0	True				
ANR	1142001	AssignmentExpression	dst_r = dst		1141721	0		=			
ANR	1142002	Identifier	dst_r		1141721	0					
ANR	1142003	Identifier	dst		1141721	1					
ANR	1142004	IfStatement	if ( dst != src )		1141721	1					
ANR	1142005	Condition	dst != src	2437:6:69878:69887	1141721	0	True				
ANR	1142006	EqualityExpression	dst != src		1141721	0		!=			
ANR	1142007	Identifier	dst		1141721	0					
ANR	1142008	Identifier	src		1141721	1					
ANR	1142009	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"	2438:3:69893:69966	1141721	1	True				
ANR	1142010	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"		1141721	0					
ANR	1142011	Callee	FAIL_IF		1141721	0					
ANR	1142012	Identifier	FAIL_IF		1141721	0					
ANR	1142013	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1141721	1					
ANR	1142014	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1141721	0					
ANR	1142015	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1141721	0					
ANR	1142016	Callee	emit_sse2_load		1141721	0					
ANR	1142017	Identifier	emit_sse2_load		1141721	0					
ANR	1142018	ArgumentList	compiler		1141721	1					
ANR	1142019	Argument	compiler		1141721	0					
ANR	1142020	Identifier	compiler		1141721	0					
ANR	1142021	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1142022	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1142023	Identifier	op		1141721	0					
ANR	1142024	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1142025	Argument	dst_r		1141721	2					
ANR	1142026	Identifier	dst_r		1141721	0					
ANR	1142027	Argument	src		1141721	3					
ANR	1142028	Identifier	src		1141721	0					
ANR	1142029	Argument	srcw		1141721	4					
ANR	1142030	Identifier	srcw		1141721	0					
ANR	1142031	ElseStatement	else		1141721	0					
ANR	1142032	CompoundStatement		44:6:1448:1448	1141721	0					
ANR	1142033	ExpressionStatement	dst_r = TMP_FREG	2441:2:69981:69997	1141721	0	True				
ANR	1142034	AssignmentExpression	dst_r = TMP_FREG		1141721	0		=			
ANR	1142035	Identifier	dst_r		1141721	0					
ANR	1142036	Identifier	TMP_FREG		1141721	1					
ANR	1142037	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"	2442:2:70001:70074	1141721	1	True				
ANR	1142038	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"		1141721	0					
ANR	1142039	Callee	FAIL_IF		1141721	0					
ANR	1142040	Identifier	FAIL_IF		1141721	0					
ANR	1142041	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1141721	1					
ANR	1142042	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1141721	0					
ANR	1142043	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1141721	0					
ANR	1142044	Callee	emit_sse2_load		1141721	0					
ANR	1142045	Identifier	emit_sse2_load		1141721	0					
ANR	1142046	ArgumentList	compiler		1141721	1					
ANR	1142047	Argument	compiler		1141721	0					
ANR	1142048	Identifier	compiler		1141721	0					
ANR	1142049	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1142050	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1142051	Identifier	op		1141721	0					
ANR	1142052	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1142053	Argument	dst_r		1141721	2					
ANR	1142054	Identifier	dst_r		1141721	0					
ANR	1142055	Argument	src		1141721	3					
ANR	1142056	Identifier	src		1141721	0					
ANR	1142057	Argument	srcw		1141721	4					
ANR	1142058	Identifier	srcw		1141721	0					
ANR	1142059	SwitchStatement	switch ( GET_OPCODE ( op ) )		1141721	7					
ANR	1142060	Condition	GET_OPCODE ( op )	2445:9:70089:70102	1141721	0	True				
ANR	1142061	CallExpression	GET_OPCODE ( op )		1141721	0					
ANR	1142062	Callee	GET_OPCODE		1141721	0					
ANR	1142063	Identifier	GET_OPCODE		1141721	0					
ANR	1142064	ArgumentList	op		1141721	1					
ANR	1142065	Argument	op		1141721	0					
ANR	1142066	Identifier	op		1141721	0					
ANR	1142067	CompoundStatement		49:25:1576:1576	1141721	1					
ANR	1142068	Label	case SLJIT_DNEG :	2446:1:70108:70123	1141721	0	True				
ANR	1142069	Identifier	SLJIT_DNEG		1141721	0					
ANR	1142070	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) ) )"	2447:2:70127:70263	1141721	1	True				
ANR	1142071	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) ) )"		1141721	0					
ANR	1142072	Callee	FAIL_IF		1141721	0					
ANR	1142073	Identifier	FAIL_IF		1141721	0					
ANR	1142074	ArgumentList	"emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) )"		1141721	1					
ANR	1142075	Argument	"emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) )"		1141721	0					
ANR	1142076	CallExpression	"emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) )"		1141721	0					
ANR	1142077	Callee	emit_sse2_logic		1141721	0					
ANR	1142078	Identifier	emit_sse2_logic		1141721	0					
ANR	1142079	ArgumentList	compiler		1141721	1					
ANR	1142080	Argument	compiler		1141721	0					
ANR	1142081	Identifier	compiler		1141721	0					
ANR	1142082	Argument	XORPD_x_xm		1141721	1					
ANR	1142083	Identifier	XORPD_x_xm		1141721	0					
ANR	1142084	Argument	1		1141721	2					
ANR	1142085	PrimaryExpression	1		1141721	0					
ANR	1142086	Argument	dst_r		1141721	3					
ANR	1142087	Identifier	dst_r		1141721	0					
ANR	1142088	Argument	SLJIT_MEM0 ( )		1141721	4					
ANR	1142089	CallExpression	SLJIT_MEM0 ( )		1141721	0					
ANR	1142090	Callee	SLJIT_MEM0		1141721	0					
ANR	1142091	Identifier	SLJIT_MEM0		1141721	0					
ANR	1142092	ArgumentList			1141721	1					
ANR	1142093	Argument	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 )		1141721	5					
ANR	1142094	CastExpression	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 )		1141721	0					
ANR	1142095	CastTarget	sljit_sw		1141721	0					
ANR	1142096	ConditionalExpression	op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8		1141721	1					
ANR	1142097	Condition	op & SLJIT_SINGLE_OP		1141721	0					
ANR	1142098	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1142099	Identifier	op		1141721	0					
ANR	1142100	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1142101	Identifier	sse2_buffer		1141721	1					
ANR	1142102	AdditiveExpression	sse2_buffer + 8		1141721	2		+			
ANR	1142103	Identifier	sse2_buffer		1141721	0					
ANR	1142104	PrimaryExpression	8		1141721	1					
ANR	1142105	BreakStatement	break ;	2448:2:70267:70272	1141721	2	True				
ANR	1142106	Label	case SLJIT_DABS :	2450:1:70276:70291	1141721	3	True				
ANR	1142107	Identifier	SLJIT_DABS		1141721	0					
ANR	1142108	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) ) )"	2451:2:70295:70436	1141721	4	True				
ANR	1142109	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) ) )"		1141721	0					
ANR	1142110	Callee	FAIL_IF		1141721	0					
ANR	1142111	Identifier	FAIL_IF		1141721	0					
ANR	1142112	ArgumentList	"emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) )"		1141721	1					
ANR	1142113	Argument	"emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) )"		1141721	0					
ANR	1142114	CallExpression	"emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) )"		1141721	0					
ANR	1142115	Callee	emit_sse2_logic		1141721	0					
ANR	1142116	Identifier	emit_sse2_logic		1141721	0					
ANR	1142117	ArgumentList	compiler		1141721	1					
ANR	1142118	Argument	compiler		1141721	0					
ANR	1142119	Identifier	compiler		1141721	0					
ANR	1142120	Argument	ANDPD_x_xm		1141721	1					
ANR	1142121	Identifier	ANDPD_x_xm		1141721	0					
ANR	1142122	Argument	1		1141721	2					
ANR	1142123	PrimaryExpression	1		1141721	0					
ANR	1142124	Argument	dst_r		1141721	3					
ANR	1142125	Identifier	dst_r		1141721	0					
ANR	1142126	Argument	SLJIT_MEM0 ( )		1141721	4					
ANR	1142127	CallExpression	SLJIT_MEM0 ( )		1141721	0					
ANR	1142128	Callee	SLJIT_MEM0		1141721	0					
ANR	1142129	Identifier	SLJIT_MEM0		1141721	0					
ANR	1142130	ArgumentList			1141721	1					
ANR	1142131	Argument	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 )		1141721	5					
ANR	1142132	CastExpression	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 )		1141721	0					
ANR	1142133	CastTarget	sljit_sw		1141721	0					
ANR	1142134	ConditionalExpression	op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12		1141721	1					
ANR	1142135	Condition	op & SLJIT_SINGLE_OP		1141721	0					
ANR	1142136	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1142137	Identifier	op		1141721	0					
ANR	1142138	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1142139	AdditiveExpression	sse2_buffer + 4		1141721	1		+			
ANR	1142140	Identifier	sse2_buffer		1141721	0					
ANR	1142141	PrimaryExpression	4		1141721	1					
ANR	1142142	AdditiveExpression	sse2_buffer + 12		1141721	2		+			
ANR	1142143	Identifier	sse2_buffer		1141721	0					
ANR	1142144	PrimaryExpression	12		1141721	1					
ANR	1142145	BreakStatement	break ;	2452:2:70440:70445	1141721	5	True				
ANR	1142146	IfStatement	if ( dst_r == TMP_FREG )		1141721	8					
ANR	1142147	Condition	dst_r == TMP_FREG	2455:5:70456:70472	1141721	0	True				
ANR	1142148	EqualityExpression	dst_r == TMP_FREG		1141721	0		==			
ANR	1142149	Identifier	dst_r		1141721	0					
ANR	1142150	Identifier	TMP_FREG		1141721	1					
ANR	1142151	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2456:2:70477:70552	1141721	1	True				
ANR	1142152	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1141721	0					
ANR	1142153	Callee	emit_sse2_store		1141721	0					
ANR	1142154	Identifier	emit_sse2_store		1141721	0					
ANR	1142155	ArgumentList	compiler		1141721	1					
ANR	1142156	Argument	compiler		1141721	0					
ANR	1142157	Identifier	compiler		1141721	0					
ANR	1142158	Argument	op & SLJIT_SINGLE_OP		1141721	1					
ANR	1142159	BitAndExpression	op & SLJIT_SINGLE_OP		1141721	0		&			
ANR	1142160	Identifier	op		1141721	0					
ANR	1142161	Identifier	SLJIT_SINGLE_OP		1141721	1					
ANR	1142162	Argument	dst		1141721	2					
ANR	1142163	Identifier	dst		1141721	0					
ANR	1142164	Argument	dstw		1141721	3					
ANR	1142165	Identifier	dstw		1141721	0					
ANR	1142166	Argument	TMP_FREG		1141721	4					
ANR	1142167	Identifier	TMP_FREG		1141721	0					
ANR	1142168	ReturnStatement	return SLJIT_SUCCESS ;	2457:1:70555:70575	1141721	9	True				
ANR	1142169	Identifier	SLJIT_SUCCESS		1141721	0					
ANR	1142170	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1141721	1					
ANR	1142171	Identifier	sljit_emit_fop1		1141721	2					
ANR	1142172	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1141721	3					
ANR	1142173	Parameter	struct sljit_compiler * compiler	2394:50:68422:68452	1141721	0	True				
ANR	1142174	ParameterType	struct sljit_compiler *		1141721	0					
ANR	1142175	Identifier	compiler		1141721	1					
ANR	1142176	Parameter	sljit_si op	2394:83:68455:68465	1141721	1	True				
ANR	1142177	ParameterType	sljit_si		1141721	0					
ANR	1142178	Identifier	op		1141721	1					
ANR	1142179	Parameter	sljit_si dst	2395:1:68469:68480	1141721	2	True				
ANR	1142180	ParameterType	sljit_si		1141721	0					
ANR	1142181	Identifier	dst		1141721	1					
ANR	1142182	Parameter	sljit_sw dstw	2395:15:68483:68495	1141721	3	True				
ANR	1142183	ParameterType	sljit_sw		1141721	0					
ANR	1142184	Identifier	dstw		1141721	1					
ANR	1142185	Parameter	sljit_si src	2396:1:68499:68510	1141721	4	True				
ANR	1142186	ParameterType	sljit_si		1141721	0					
ANR	1142187	Identifier	src		1141721	1					
ANR	1142188	Parameter	sljit_sw srcw	2396:15:68513:68525	1141721	5	True				
ANR	1142189	ParameterType	sljit_sw		1141721	0					
ANR	1142190	Identifier	srcw		1141721	1					
ANR	1142191	CFGEntryNode	ENTRY		1141721		True				
ANR	1142192	CFGExitNode	EXIT		1141721		True				
ANR	1142193	Symbol	XORPD_x_xm		1141721						
ANR	1142194	Symbol	SLJIT_DMOV		1141721						
ANR	1142195	Symbol	dst		1141721						
ANR	1142196	Symbol	SLJIT_CONVD_FROMS		1141721						
ANR	1142197	Symbol	SLOW_IS_REG		1141721						
ANR	1142198	Symbol	* compiler		1141721						
ANR	1142199	Symbol	ANDPD_x_xm		1141721						
ANR	1142200	Symbol	dst_r		1141721						
ANR	1142201	Symbol	GET_OPCODE		1141721						
ANR	1142202	Symbol	emit_sse2_store		1141721						
ANR	1142203	Symbol	compiler		1141721						
ANR	1142204	Symbol	UNPCKLPD_x_xm		1141721						
ANR	1142205	Symbol	op		1141721						
ANR	1142206	Symbol	FAST_IS_REG		1141721						
ANR	1142207	Symbol	src		1141721						
ANR	1142208	Symbol	srcw		1141721						
ANR	1142209	Symbol	SLJIT_SINGLE_OP		1141721						
ANR	1142210	Symbol	SLJIT_SUCCESS		1141721						
ANR	1142211	Symbol	SLJIT_MEM0		1141721						
ANR	1142212	Symbol	emit_sse2_load		1141721						
ANR	1142213	Symbol	sse2_buffer		1141721						
ANR	1142214	Symbol	TMP_FREG		1141721						
ANR	1142215	Symbol	compiler -> mode32		1141721						
ANR	1142216	Symbol	dstw		1141721						
ANR	1142217	Symbol	emit_sse2_logic		1141721						
ANR	1142218	Symbol	CVTPD2PS_x_xm		1141721						
ANR	1142219	Function	sljit_emit_fop2	2460:0:70580:72248							
ANR	1142220	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1142219	0					
ANR	1142221	CompoundStatement		2464:0:70770:72248	1142219	0					
ANR	1142222	IdentifierDeclStatement	sljit_si dst_r ;	2465:1:70773:70787	1142219	0	True				
ANR	1142223	IdentifierDecl	dst_r		1142219	0					
ANR	1142224	IdentifierDeclType	sljit_si		1142219	0					
ANR	1142225	Identifier	dst_r		1142219	1					
ANR	1142226	ExpressionStatement	CHECK_ERROR ( )	2467:1:70791:70804	1142219	1	True				
ANR	1142227	CallExpression	CHECK_ERROR ( )		1142219	0					
ANR	1142228	Callee	CHECK_ERROR		1142219	0					
ANR	1142229	Identifier	CHECK_ERROR		1142219	0					
ANR	1142230	ArgumentList			1142219	1					
ANR	1142231	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	2468:1:70807:70886	1142219	2	True				
ANR	1142232	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1142219	0					
ANR	1142233	Callee	CHECK		1142219	0					
ANR	1142234	Identifier	CHECK		1142219	0					
ANR	1142235	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1142219	1					
ANR	1142236	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1142219	0					
ANR	1142237	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1142219	0					
ANR	1142238	Callee	check_sljit_emit_fop2		1142219	0					
ANR	1142239	Identifier	check_sljit_emit_fop2		1142219	0					
ANR	1142240	ArgumentList	compiler		1142219	1					
ANR	1142241	Argument	compiler		1142219	0					
ANR	1142242	Identifier	compiler		1142219	0					
ANR	1142243	Argument	op		1142219	1					
ANR	1142244	Identifier	op		1142219	0					
ANR	1142245	Argument	dst		1142219	2					
ANR	1142246	Identifier	dst		1142219	0					
ANR	1142247	Argument	dstw		1142219	3					
ANR	1142248	Identifier	dstw		1142219	0					
ANR	1142249	Argument	src1		1142219	4					
ANR	1142250	Identifier	src1		1142219	0					
ANR	1142251	Argument	src1w		1142219	5					
ANR	1142252	Identifier	src1w		1142219	0					
ANR	1142253	Argument	src2		1142219	6					
ANR	1142254	Identifier	src2		1142219	0					
ANR	1142255	Argument	src2w		1142219	7					
ANR	1142256	Identifier	src2w		1142219	0					
ANR	1142257	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2469:1:70889:70919	1142219	3	True				
ANR	1142258	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1142219	0					
ANR	1142259	Callee	ADJUST_LOCAL_OFFSET		1142219	0					
ANR	1142260	Identifier	ADJUST_LOCAL_OFFSET		1142219	0					
ANR	1142261	ArgumentList	dst		1142219	1					
ANR	1142262	Argument	dst		1142219	0					
ANR	1142263	Identifier	dst		1142219	0					
ANR	1142264	Argument	dstw		1142219	1					
ANR	1142265	Identifier	dstw		1142219	0					
ANR	1142266	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	2470:1:70922:70954	1142219	4	True				
ANR	1142267	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1142219	0					
ANR	1142268	Callee	ADJUST_LOCAL_OFFSET		1142219	0					
ANR	1142269	Identifier	ADJUST_LOCAL_OFFSET		1142219	0					
ANR	1142270	ArgumentList	src1		1142219	1					
ANR	1142271	Argument	src1		1142219	0					
ANR	1142272	Identifier	src1		1142219	0					
ANR	1142273	Argument	src1w		1142219	1					
ANR	1142274	Identifier	src1w		1142219	0					
ANR	1142275	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	2471:1:70957:70989	1142219	5	True				
ANR	1142276	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1142219	0					
ANR	1142277	Callee	ADJUST_LOCAL_OFFSET		1142219	0					
ANR	1142278	Identifier	ADJUST_LOCAL_OFFSET		1142219	0					
ANR	1142279	ArgumentList	src2		1142219	1					
ANR	1142280	Argument	src2		1142219	0					
ANR	1142281	Identifier	src2		1142219	0					
ANR	1142282	Argument	src2w		1142219	1					
ANR	1142283	Identifier	src2w		1142219	0					
ANR	1142284	ExpressionStatement	compiler -> mode32 = 1	2474:1:71050:71070	1142219	6	True				
ANR	1142285	AssignmentExpression	compiler -> mode32 = 1		1142219	0		=			
ANR	1142286	PtrMemberAccess	compiler -> mode32		1142219	0					
ANR	1142287	Identifier	compiler		1142219	0					
ANR	1142288	Identifier	mode32		1142219	1					
ANR	1142289	PrimaryExpression	1		1142219	1					
ANR	1142290	IfStatement	if ( FAST_IS_REG ( dst ) )		1142219	7					
ANR	1142291	Condition	FAST_IS_REG ( dst )	2477:5:71085:71100	1142219	0	True				
ANR	1142292	CallExpression	FAST_IS_REG ( dst )		1142219	0					
ANR	1142293	Callee	FAST_IS_REG		1142219	0					
ANR	1142294	Identifier	FAST_IS_REG		1142219	0					
ANR	1142295	ArgumentList	dst		1142219	1					
ANR	1142296	Argument	dst		1142219	0					
ANR	1142297	Identifier	dst		1142219	0					
ANR	1142298	CompoundStatement		14:23:332:332	1142219	1					
ANR	1142299	ExpressionStatement	dst_r = dst	2478:2:71107:71118	1142219	0	True				
ANR	1142300	AssignmentExpression	dst_r = dst		1142219	0		=			
ANR	1142301	Identifier	dst_r		1142219	0					
ANR	1142302	Identifier	dst		1142219	1					
ANR	1142303	IfStatement	if ( dst == src1 )		1142219	1					
ANR	1142304	Condition	dst == src1	2479:6:71126:71136	1142219	0	True				
ANR	1142305	EqualityExpression	dst == src1		1142219	0		==			
ANR	1142306	Identifier	dst		1142219	0					
ANR	1142307	Identifier	src1		1142219	1					
ANR	1142308	ExpressionStatement		2480:3:71142:71142	1142219	1	True				
ANR	1142309	ElseStatement	else		1142219	0					
ANR	1142310	IfStatement	if ( dst == src2 && ( op == SLJIT_DADD || op == SLJIT_DMUL ) )		1142219	0					
ANR	1142311	Condition	dst == src2 && ( op == SLJIT_DADD || op == SLJIT_DMUL )	2481:11:71178:71230	1142219	0	True				
ANR	1142312	AndExpression	dst == src2 && ( op == SLJIT_DADD || op == SLJIT_DMUL )		1142219	0		&&			
ANR	1142313	EqualityExpression	dst == src2		1142219	0		==			
ANR	1142314	Identifier	dst		1142219	0					
ANR	1142315	Identifier	src2		1142219	1					
ANR	1142316	OrExpression	op == SLJIT_DADD || op == SLJIT_DMUL		1142219	1		||			
ANR	1142317	EqualityExpression	op == SLJIT_DADD		1142219	0		==			
ANR	1142318	Identifier	op		1142219	0					
ANR	1142319	Identifier	SLJIT_DADD		1142219	1					
ANR	1142320	EqualityExpression	op == SLJIT_DMUL		1142219	1		==			
ANR	1142321	Identifier	op		1142219	0					
ANR	1142322	Identifier	SLJIT_DMUL		1142219	1					
ANR	1142323	CompoundStatement		18:66:462:462	1142219	1					
ANR	1142324	ExpressionStatement	src2 = src1	2483:3:71263:71274	1142219	0	True				
ANR	1142325	AssignmentExpression	src2 = src1		1142219	0		=			
ANR	1142326	Identifier	src2		1142219	0					
ANR	1142327	Identifier	src1		1142219	1					
ANR	1142328	ExpressionStatement	src2w = src1w	2484:3:71279:71292	1142219	1	True				
ANR	1142329	AssignmentExpression	src2w = src1w		1142219	0		=			
ANR	1142330	Identifier	src2w		1142219	0					
ANR	1142331	Identifier	src1w		1142219	1					
ANR	1142332	ElseStatement	else		1142219	0					
ANR	1142333	IfStatement	if ( dst != src2 )		1142219	0					
ANR	1142334	Condition	dst != src2	2486:11:71309:71319	1142219	0	True				
ANR	1142335	EqualityExpression	dst != src2		1142219	0		!=			
ANR	1142336	Identifier	dst		1142219	0					
ANR	1142337	Identifier	src2		1142219	1					
ANR	1142338	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w ) )"	2487:3:71325:71400	1142219	1	True				
ANR	1142339	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w ) )"		1142219	0					
ANR	1142340	Callee	FAIL_IF		1142219	0					
ANR	1142341	Identifier	FAIL_IF		1142219	0					
ANR	1142342	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w )"		1142219	1					
ANR	1142343	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w )"		1142219	0					
ANR	1142344	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w )"		1142219	0					
ANR	1142345	Callee	emit_sse2_load		1142219	0					
ANR	1142346	Identifier	emit_sse2_load		1142219	0					
ANR	1142347	ArgumentList	compiler		1142219	1					
ANR	1142348	Argument	compiler		1142219	0					
ANR	1142349	Identifier	compiler		1142219	0					
ANR	1142350	Argument	op & SLJIT_SINGLE_OP		1142219	1					
ANR	1142351	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142352	Identifier	op		1142219	0					
ANR	1142353	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142354	Argument	dst_r		1142219	2					
ANR	1142355	Identifier	dst_r		1142219	0					
ANR	1142356	Argument	src1		1142219	3					
ANR	1142357	Identifier	src1		1142219	0					
ANR	1142358	Argument	src1w		1142219	4					
ANR	1142359	Identifier	src1w		1142219	0					
ANR	1142360	ElseStatement	else		1142219	0					
ANR	1142361	CompoundStatement		25:7:638:638	1142219	0					
ANR	1142362	ExpressionStatement	dst_r = TMP_FREG	2489:3:71414:71430	1142219	0	True				
ANR	1142363	AssignmentExpression	dst_r = TMP_FREG		1142219	0		=			
ANR	1142364	Identifier	dst_r		1142219	0					
ANR	1142365	Identifier	TMP_FREG		1142219	1					
ANR	1142366	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"	2490:3:71435:71513	1142219	1	True				
ANR	1142367	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"		1142219	0					
ANR	1142368	Callee	FAIL_IF		1142219	0					
ANR	1142369	Identifier	FAIL_IF		1142219	0					
ANR	1142370	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1142219	1					
ANR	1142371	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1142219	0					
ANR	1142372	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1142219	0					
ANR	1142373	Callee	emit_sse2_load		1142219	0					
ANR	1142374	Identifier	emit_sse2_load		1142219	0					
ANR	1142375	ArgumentList	compiler		1142219	1					
ANR	1142376	Argument	compiler		1142219	0					
ANR	1142377	Identifier	compiler		1142219	0					
ANR	1142378	Argument	op & SLJIT_SINGLE_OP		1142219	1					
ANR	1142379	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142380	Identifier	op		1142219	0					
ANR	1142381	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142382	Argument	TMP_FREG		1142219	2					
ANR	1142383	Identifier	TMP_FREG		1142219	0					
ANR	1142384	Argument	src1		1142219	3					
ANR	1142385	Identifier	src1		1142219	0					
ANR	1142386	Argument	src1w		1142219	4					
ANR	1142387	Identifier	src1w		1142219	0					
ANR	1142388	ElseStatement	else		1142219	0					
ANR	1142389	CompoundStatement		30:6:757:757	1142219	0					
ANR	1142390	ExpressionStatement	dst_r = TMP_FREG	2494:2:71532:71548	1142219	0	True				
ANR	1142391	AssignmentExpression	dst_r = TMP_FREG		1142219	0		=			
ANR	1142392	Identifier	dst_r		1142219	0					
ANR	1142393	Identifier	TMP_FREG		1142219	1					
ANR	1142394	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"	2495:2:71552:71630	1142219	1	True				
ANR	1142395	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"		1142219	0					
ANR	1142396	Callee	FAIL_IF		1142219	0					
ANR	1142397	Identifier	FAIL_IF		1142219	0					
ANR	1142398	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1142219	1					
ANR	1142399	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1142219	0					
ANR	1142400	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1142219	0					
ANR	1142401	Callee	emit_sse2_load		1142219	0					
ANR	1142402	Identifier	emit_sse2_load		1142219	0					
ANR	1142403	ArgumentList	compiler		1142219	1					
ANR	1142404	Argument	compiler		1142219	0					
ANR	1142405	Identifier	compiler		1142219	0					
ANR	1142406	Argument	op & SLJIT_SINGLE_OP		1142219	1					
ANR	1142407	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142408	Identifier	op		1142219	0					
ANR	1142409	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142410	Argument	TMP_FREG		1142219	2					
ANR	1142411	Identifier	TMP_FREG		1142219	0					
ANR	1142412	Argument	src1		1142219	3					
ANR	1142413	Identifier	src1		1142219	0					
ANR	1142414	Argument	src1w		1142219	4					
ANR	1142415	Identifier	src1w		1142219	0					
ANR	1142416	SwitchStatement	switch ( GET_OPCODE ( op ) )		1142219	8					
ANR	1142417	Condition	GET_OPCODE ( op )	2498:9:71645:71658	1142219	0	True				
ANR	1142418	CallExpression	GET_OPCODE ( op )		1142219	0					
ANR	1142419	Callee	GET_OPCODE		1142219	0					
ANR	1142420	Identifier	GET_OPCODE		1142219	0					
ANR	1142421	ArgumentList	op		1142219	1					
ANR	1142422	Argument	op		1142219	0					
ANR	1142423	Identifier	op		1142219	0					
ANR	1142424	CompoundStatement		35:25:890:890	1142219	1					
ANR	1142425	Label	case SLJIT_DADD :	2499:1:71664:71679	1142219	0	True				
ANR	1142426	Identifier	SLJIT_DADD		1142219	0					
ANR	1142427	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2500:2:71683:71765	1142219	1	True				
ANR	1142428	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1142219	0					
ANR	1142429	Callee	FAIL_IF		1142219	0					
ANR	1142430	Identifier	FAIL_IF		1142219	0					
ANR	1142431	ArgumentList	"emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	1					
ANR	1142432	Argument	"emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142433	CallExpression	"emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142434	Callee	emit_sse2		1142219	0					
ANR	1142435	Identifier	emit_sse2		1142219	0					
ANR	1142436	ArgumentList	compiler		1142219	1					
ANR	1142437	Argument	compiler		1142219	0					
ANR	1142438	Identifier	compiler		1142219	0					
ANR	1142439	Argument	ADDSD_x_xm		1142219	1					
ANR	1142440	Identifier	ADDSD_x_xm		1142219	0					
ANR	1142441	Argument	op & SLJIT_SINGLE_OP		1142219	2					
ANR	1142442	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142443	Identifier	op		1142219	0					
ANR	1142444	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142445	Argument	dst_r		1142219	3					
ANR	1142446	Identifier	dst_r		1142219	0					
ANR	1142447	Argument	src2		1142219	4					
ANR	1142448	Identifier	src2		1142219	0					
ANR	1142449	Argument	src2w		1142219	5					
ANR	1142450	Identifier	src2w		1142219	0					
ANR	1142451	BreakStatement	break ;	2501:2:71769:71774	1142219	2	True				
ANR	1142452	Label	case SLJIT_DSUB :	2503:1:71778:71793	1142219	3	True				
ANR	1142453	Identifier	SLJIT_DSUB		1142219	0					
ANR	1142454	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2504:2:71797:71879	1142219	4	True				
ANR	1142455	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1142219	0					
ANR	1142456	Callee	FAIL_IF		1142219	0					
ANR	1142457	Identifier	FAIL_IF		1142219	0					
ANR	1142458	ArgumentList	"emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	1					
ANR	1142459	Argument	"emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142460	CallExpression	"emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142461	Callee	emit_sse2		1142219	0					
ANR	1142462	Identifier	emit_sse2		1142219	0					
ANR	1142463	ArgumentList	compiler		1142219	1					
ANR	1142464	Argument	compiler		1142219	0					
ANR	1142465	Identifier	compiler		1142219	0					
ANR	1142466	Argument	SUBSD_x_xm		1142219	1					
ANR	1142467	Identifier	SUBSD_x_xm		1142219	0					
ANR	1142468	Argument	op & SLJIT_SINGLE_OP		1142219	2					
ANR	1142469	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142470	Identifier	op		1142219	0					
ANR	1142471	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142472	Argument	dst_r		1142219	3					
ANR	1142473	Identifier	dst_r		1142219	0					
ANR	1142474	Argument	src2		1142219	4					
ANR	1142475	Identifier	src2		1142219	0					
ANR	1142476	Argument	src2w		1142219	5					
ANR	1142477	Identifier	src2w		1142219	0					
ANR	1142478	BreakStatement	break ;	2505:2:71883:71888	1142219	5	True				
ANR	1142479	Label	case SLJIT_DMUL :	2507:1:71892:71907	1142219	6	True				
ANR	1142480	Identifier	SLJIT_DMUL		1142219	0					
ANR	1142481	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2508:2:71911:71993	1142219	7	True				
ANR	1142482	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1142219	0					
ANR	1142483	Callee	FAIL_IF		1142219	0					
ANR	1142484	Identifier	FAIL_IF		1142219	0					
ANR	1142485	ArgumentList	"emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	1					
ANR	1142486	Argument	"emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142487	CallExpression	"emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142488	Callee	emit_sse2		1142219	0					
ANR	1142489	Identifier	emit_sse2		1142219	0					
ANR	1142490	ArgumentList	compiler		1142219	1					
ANR	1142491	Argument	compiler		1142219	0					
ANR	1142492	Identifier	compiler		1142219	0					
ANR	1142493	Argument	MULSD_x_xm		1142219	1					
ANR	1142494	Identifier	MULSD_x_xm		1142219	0					
ANR	1142495	Argument	op & SLJIT_SINGLE_OP		1142219	2					
ANR	1142496	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142497	Identifier	op		1142219	0					
ANR	1142498	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142499	Argument	dst_r		1142219	3					
ANR	1142500	Identifier	dst_r		1142219	0					
ANR	1142501	Argument	src2		1142219	4					
ANR	1142502	Identifier	src2		1142219	0					
ANR	1142503	Argument	src2w		1142219	5					
ANR	1142504	Identifier	src2w		1142219	0					
ANR	1142505	BreakStatement	break ;	2509:2:71997:72002	1142219	8	True				
ANR	1142506	Label	case SLJIT_DDIV :	2511:1:72006:72021	1142219	9	True				
ANR	1142507	Identifier	SLJIT_DDIV		1142219	0					
ANR	1142508	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2512:2:72025:72107	1142219	10	True				
ANR	1142509	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1142219	0					
ANR	1142510	Callee	FAIL_IF		1142219	0					
ANR	1142511	Identifier	FAIL_IF		1142219	0					
ANR	1142512	ArgumentList	"emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	1					
ANR	1142513	Argument	"emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142514	CallExpression	"emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1142219	0					
ANR	1142515	Callee	emit_sse2		1142219	0					
ANR	1142516	Identifier	emit_sse2		1142219	0					
ANR	1142517	ArgumentList	compiler		1142219	1					
ANR	1142518	Argument	compiler		1142219	0					
ANR	1142519	Identifier	compiler		1142219	0					
ANR	1142520	Argument	DIVSD_x_xm		1142219	1					
ANR	1142521	Identifier	DIVSD_x_xm		1142219	0					
ANR	1142522	Argument	op & SLJIT_SINGLE_OP		1142219	2					
ANR	1142523	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142524	Identifier	op		1142219	0					
ANR	1142525	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142526	Argument	dst_r		1142219	3					
ANR	1142527	Identifier	dst_r		1142219	0					
ANR	1142528	Argument	src2		1142219	4					
ANR	1142529	Identifier	src2		1142219	0					
ANR	1142530	Argument	src2w		1142219	5					
ANR	1142531	Identifier	src2w		1142219	0					
ANR	1142532	BreakStatement	break ;	2513:2:72111:72116	1142219	11	True				
ANR	1142533	IfStatement	if ( dst_r == TMP_FREG )		1142219	9					
ANR	1142534	Condition	dst_r == TMP_FREG	2516:5:72127:72143	1142219	0	True				
ANR	1142535	EqualityExpression	dst_r == TMP_FREG		1142219	0		==			
ANR	1142536	Identifier	dst_r		1142219	0					
ANR	1142537	Identifier	TMP_FREG		1142219	1					
ANR	1142538	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2517:2:72148:72223	1142219	1	True				
ANR	1142539	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1142219	0					
ANR	1142540	Callee	emit_sse2_store		1142219	0					
ANR	1142541	Identifier	emit_sse2_store		1142219	0					
ANR	1142542	ArgumentList	compiler		1142219	1					
ANR	1142543	Argument	compiler		1142219	0					
ANR	1142544	Identifier	compiler		1142219	0					
ANR	1142545	Argument	op & SLJIT_SINGLE_OP		1142219	1					
ANR	1142546	BitAndExpression	op & SLJIT_SINGLE_OP		1142219	0		&			
ANR	1142547	Identifier	op		1142219	0					
ANR	1142548	Identifier	SLJIT_SINGLE_OP		1142219	1					
ANR	1142549	Argument	dst		1142219	2					
ANR	1142550	Identifier	dst		1142219	0					
ANR	1142551	Argument	dstw		1142219	3					
ANR	1142552	Identifier	dstw		1142219	0					
ANR	1142553	Argument	TMP_FREG		1142219	4					
ANR	1142554	Identifier	TMP_FREG		1142219	0					
ANR	1142555	ReturnStatement	return SLJIT_SUCCESS ;	2518:1:72226:72246	1142219	10	True				
ANR	1142556	Identifier	SLJIT_SUCCESS		1142219	0					
ANR	1142557	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1142219	1					
ANR	1142558	Identifier	sljit_emit_fop2		1142219	2					
ANR	1142559	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1142219	3					
ANR	1142560	Parameter	struct sljit_compiler * compiler	2460:50:70630:70660	1142219	0	True				
ANR	1142561	ParameterType	struct sljit_compiler *		1142219	0					
ANR	1142562	Identifier	compiler		1142219	1					
ANR	1142563	Parameter	sljit_si op	2460:83:70663:70673	1142219	1	True				
ANR	1142564	ParameterType	sljit_si		1142219	0					
ANR	1142565	Identifier	op		1142219	1					
ANR	1142566	Parameter	sljit_si dst	2461:1:70677:70688	1142219	2	True				
ANR	1142567	ParameterType	sljit_si		1142219	0					
ANR	1142568	Identifier	dst		1142219	1					
ANR	1142569	Parameter	sljit_sw dstw	2461:15:70691:70703	1142219	3	True				
ANR	1142570	ParameterType	sljit_sw		1142219	0					
ANR	1142571	Identifier	dstw		1142219	1					
ANR	1142572	Parameter	sljit_si src1	2462:1:70707:70719	1142219	4	True				
ANR	1142573	ParameterType	sljit_si		1142219	0					
ANR	1142574	Identifier	src1		1142219	1					
ANR	1142575	Parameter	sljit_sw src1w	2462:16:70722:70735	1142219	5	True				
ANR	1142576	ParameterType	sljit_sw		1142219	0					
ANR	1142577	Identifier	src1w		1142219	1					
ANR	1142578	Parameter	sljit_si src2	2463:1:70739:70751	1142219	6	True				
ANR	1142579	ParameterType	sljit_si		1142219	0					
ANR	1142580	Identifier	src2		1142219	1					
ANR	1142581	Parameter	sljit_sw src2w	2463:16:70754:70767	1142219	7	True				
ANR	1142582	ParameterType	sljit_sw		1142219	0					
ANR	1142583	Identifier	src2w		1142219	1					
ANR	1142584	CFGEntryNode	ENTRY		1142219		True				
ANR	1142585	CFGExitNode	EXIT		1142219		True				
ANR	1142586	Symbol	src1w		1142219						
ANR	1142587	Symbol	dst		1142219						
ANR	1142588	Symbol	emit_sse2		1142219						
ANR	1142589	Symbol	* compiler		1142219						
ANR	1142590	Symbol	dst_r		1142219						
ANR	1142591	Symbol	GET_OPCODE		1142219						
ANR	1142592	Symbol	SLJIT_DMUL		1142219						
ANR	1142593	Symbol	emit_sse2_store		1142219						
ANR	1142594	Symbol	compiler		1142219						
ANR	1142595	Symbol	SUBSD_x_xm		1142219						
ANR	1142596	Symbol	src2w		1142219						
ANR	1142597	Symbol	op		1142219						
ANR	1142598	Symbol	FAST_IS_REG		1142219						
ANR	1142599	Symbol	SLJIT_SINGLE_OP		1142219						
ANR	1142600	Symbol	SLJIT_SUCCESS		1142219						
ANR	1142601	Symbol	check_sljit_emit_fop2		1142219						
ANR	1142602	Symbol	MULSD_x_xm		1142219						
ANR	1142603	Symbol	ADDSD_x_xm		1142219						
ANR	1142604	Symbol	emit_sse2_load		1142219						
ANR	1142605	Symbol	SLJIT_DADD		1142219						
ANR	1142606	Symbol	TMP_FREG		1142219						
ANR	1142607	Symbol	DIVSD_x_xm		1142219						
ANR	1142608	Symbol	src1		1142219						
ANR	1142609	Symbol	compiler -> mode32		1142219						
ANR	1142610	Symbol	src2		1142219						
ANR	1142611	Symbol	dstw		1142219						
ANR	1142612	Function	sljit_emit_label	2525:25:72505:73243							
ANR	1142613	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1142612	0					
ANR	1142614	CompoundStatement		2526:0:72575:73243	1142612	0					
ANR	1142615	IdentifierDeclStatement	sljit_ub * inst ;	2527:1:72578:72592	1142612	0	True				
ANR	1142616	IdentifierDecl	* inst		1142612	0					
ANR	1142617	IdentifierDeclType	sljit_ub *		1142612	0					
ANR	1142618	Identifier	inst		1142612	1					
ANR	1142619	IdentifierDeclStatement	struct sljit_label * label ;	2528:1:72595:72620	1142612	1	True				
ANR	1142620	IdentifierDecl	* label		1142612	0					
ANR	1142621	IdentifierDeclType	struct sljit_label *		1142612	0					
ANR	1142622	Identifier	label		1142612	1					
ANR	1142623	ExpressionStatement	CHECK_ERROR_PTR ( )	2530:1:72624:72641	1142612	2	True				
ANR	1142624	CallExpression	CHECK_ERROR_PTR ( )		1142612	0					
ANR	1142625	Callee	CHECK_ERROR_PTR		1142612	0					
ANR	1142626	Identifier	CHECK_ERROR_PTR		1142612	0					
ANR	1142627	ArgumentList			1142612	1					
ANR	1142628	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	2531:1:72644:72687	1142612	3	True				
ANR	1142629	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1142612	0					
ANR	1142630	Callee	CHECK_PTR		1142612	0					
ANR	1142631	Identifier	CHECK_PTR		1142612	0					
ANR	1142632	ArgumentList	check_sljit_emit_label ( compiler )		1142612	1					
ANR	1142633	Argument	check_sljit_emit_label ( compiler )		1142612	0					
ANR	1142634	CallExpression	check_sljit_emit_label ( compiler )		1142612	0					
ANR	1142635	Callee	check_sljit_emit_label		1142612	0					
ANR	1142636	Identifier	check_sljit_emit_label		1142612	0					
ANR	1142637	ArgumentList	compiler		1142612	1					
ANR	1142638	Argument	compiler		1142612	0					
ANR	1142639	Identifier	compiler		1142612	0					
ANR	1142640	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1142612	4					
ANR	1142641	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2535:5:72805:72841	1142612	0	True				
ANR	1142642	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1142612	0					
ANR	1142643	Callee	SLJIT_UNLIKELY		1142612	0					
ANR	1142644	Identifier	SLJIT_UNLIKELY		1142612	0					
ANR	1142645	ArgumentList	compiler -> flags_saved		1142612	1					
ANR	1142646	Argument	compiler -> flags_saved		1142612	0					
ANR	1142647	PtrMemberAccess	compiler -> flags_saved		1142612	0					
ANR	1142648	Identifier	compiler		1142612	0					
ANR	1142649	Identifier	flags_saved		1142612	1					
ANR	1142650	ExpressionStatement	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"	2536:2:72846:72890	1142612	1	True				
ANR	1142651	CallExpression	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"		1142612	0					
ANR	1142652	Callee	PTR_FAIL_IF		1142612	0					
ANR	1142653	Identifier	PTR_FAIL_IF		1142612	0					
ANR	1142654	ArgumentList	"emit_restore_flags ( compiler , 0 )"		1142612	1					
ANR	1142655	Argument	"emit_restore_flags ( compiler , 0 )"		1142612	0					
ANR	1142656	CallExpression	"emit_restore_flags ( compiler , 0 )"		1142612	0					
ANR	1142657	Callee	emit_restore_flags		1142612	0					
ANR	1142658	Identifier	emit_restore_flags		1142612	0					
ANR	1142659	ArgumentList	compiler		1142612	1					
ANR	1142660	Argument	compiler		1142612	0					
ANR	1142661	Identifier	compiler		1142612	0					
ANR	1142662	Argument	0		1142612	1					
ANR	1142663	PrimaryExpression	0		1142612	0					
ANR	1142664	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1142612	5					
ANR	1142665	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	2538:5:72898:72965	1142612	0	True				
ANR	1142666	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1142612	0		&&			
ANR	1142667	PtrMemberAccess	compiler -> last_label		1142612	0					
ANR	1142668	Identifier	compiler		1142612	0					
ANR	1142669	Identifier	last_label		1142612	1					
ANR	1142670	EqualityExpression	compiler -> last_label -> size == compiler -> size		1142612	1		==			
ANR	1142671	PtrMemberAccess	compiler -> last_label -> size		1142612	0					
ANR	1142672	PtrMemberAccess	compiler -> last_label		1142612	0					
ANR	1142673	Identifier	compiler		1142612	0					
ANR	1142674	Identifier	last_label		1142612	1					
ANR	1142675	Identifier	size		1142612	1					
ANR	1142676	PtrMemberAccess	compiler -> size		1142612	1					
ANR	1142677	Identifier	compiler		1142612	0					
ANR	1142678	Identifier	size		1142612	1					
ANR	1142679	ReturnStatement	return compiler -> last_label ;	2539:2:72970:72997	1142612	1	True				
ANR	1142680	PtrMemberAccess	compiler -> last_label		1142612	0					
ANR	1142681	Identifier	compiler		1142612	0					
ANR	1142682	Identifier	last_label		1142612	1					
ANR	1142683	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	2541:1:73001:73079	1142612	6	True				
ANR	1142684	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1142612	0		=			
ANR	1142685	Identifier	label		1142612	0					
ANR	1142686	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1142612	1					
ANR	1142687	CastTarget	struct sljit_label *		1142612	0					
ANR	1142688	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1142612	1					
ANR	1142689	Callee	ensure_abuf		1142612	0					
ANR	1142690	Identifier	ensure_abuf		1142612	0					
ANR	1142691	ArgumentList	compiler		1142612	1					
ANR	1142692	Argument	compiler		1142612	0					
ANR	1142693	Identifier	compiler		1142612	0					
ANR	1142694	Argument	sizeof ( struct sljit_label )		1142612	1					
ANR	1142695	SizeofExpression	sizeof ( struct sljit_label )		1142612	0					
ANR	1142696	Sizeof	sizeof		1142612	0					
ANR	1142697	SizeofOperand	struct sljit_label		1142612	1					
ANR	1142698	ExpressionStatement	PTR_FAIL_IF ( ! label )	2542:1:73082:73101	1142612	7	True				
ANR	1142699	CallExpression	PTR_FAIL_IF ( ! label )		1142612	0					
ANR	1142700	Callee	PTR_FAIL_IF		1142612	0					
ANR	1142701	Identifier	PTR_FAIL_IF		1142612	0					
ANR	1142702	ArgumentList	! label		1142612	1					
ANR	1142703	Argument	! label		1142612	0					
ANR	1142704	UnaryOperationExpression	! label		1142612	0					
ANR	1142705	UnaryOperator	!		1142612	0					
ANR	1142706	Identifier	label		1142612	1					
ANR	1142707	ExpressionStatement	"set_label ( label , compiler )"	2543:1:73104:73130	1142612	8	True				
ANR	1142708	CallExpression	"set_label ( label , compiler )"		1142612	0					
ANR	1142709	Callee	set_label		1142612	0					
ANR	1142710	Identifier	set_label		1142612	0					
ANR	1142711	ArgumentList	label		1142612	1					
ANR	1142712	Argument	label		1142612	0					
ANR	1142713	Identifier	label		1142612	0					
ANR	1142714	Argument	compiler		1142612	1					
ANR	1142715	Identifier	compiler		1142612	0					
ANR	1142716	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2545:1:73134:73175	1142612	9	True				
ANR	1142717	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1142612	0		=			
ANR	1142718	Identifier	inst		1142612	0					
ANR	1142719	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1142612	1					
ANR	1142720	CastTarget	sljit_ub *		1142612	0					
ANR	1142721	CallExpression	"ensure_buf ( compiler , 2 )"		1142612	1					
ANR	1142722	Callee	ensure_buf		1142612	0					
ANR	1142723	Identifier	ensure_buf		1142612	0					
ANR	1142724	ArgumentList	compiler		1142612	1					
ANR	1142725	Argument	compiler		1142612	0					
ANR	1142726	Identifier	compiler		1142612	0					
ANR	1142727	Argument	2		1142612	1					
ANR	1142728	PrimaryExpression	2		1142612	0					
ANR	1142729	ExpressionStatement	PTR_FAIL_IF ( ! inst )	2546:1:73178:73196	1142612	10	True				
ANR	1142730	CallExpression	PTR_FAIL_IF ( ! inst )		1142612	0					
ANR	1142731	Callee	PTR_FAIL_IF		1142612	0					
ANR	1142732	Identifier	PTR_FAIL_IF		1142612	0					
ANR	1142733	ArgumentList	! inst		1142612	1					
ANR	1142734	Argument	! inst		1142612	0					
ANR	1142735	UnaryOperationExpression	! inst		1142612	0					
ANR	1142736	UnaryOperator	!		1142612	0					
ANR	1142737	Identifier	inst		1142612	1					
ANR	1142738	ExpressionStatement	* inst ++ = 0	2548:1:73200:73211	1142612	11	True				
ANR	1142739	AssignmentExpression	* inst ++ = 0		1142612	0		=			
ANR	1142740	UnaryOperationExpression	* inst ++		1142612	0					
ANR	1142741	UnaryOperator	*		1142612	0					
ANR	1142742	PostIncDecOperationExpression	inst ++		1142612	1					
ANR	1142743	Identifier	inst		1142612	0					
ANR	1142744	IncDec	++		1142612	1					
ANR	1142745	PrimaryExpression	0		1142612	1					
ANR	1142746	ExpressionStatement	* inst ++ = 0	2549:1:73214:73225	1142612	12	True				
ANR	1142747	AssignmentExpression	* inst ++ = 0		1142612	0		=			
ANR	1142748	UnaryOperationExpression	* inst ++		1142612	0					
ANR	1142749	UnaryOperator	*		1142612	0					
ANR	1142750	PostIncDecOperationExpression	inst ++		1142612	1					
ANR	1142751	Identifier	inst		1142612	0					
ANR	1142752	IncDec	++		1142612	1					
ANR	1142753	PrimaryExpression	0		1142612	1					
ANR	1142754	ReturnStatement	return label ;	2551:1:73229:73241	1142612	13	True				
ANR	1142755	Identifier	label		1142612	0					
ANR	1142756	ReturnType	struct sljit_label *		1142612	1					
ANR	1142757	Identifier	sljit_emit_label		1142612	2					
ANR	1142758	ParameterList	struct sljit_compiler * compiler		1142612	3					
ANR	1142759	Parameter	struct sljit_compiler * compiler	2525:62:72542:72572	1142612	0	True				
ANR	1142760	ParameterType	struct sljit_compiler *		1142612	0					
ANR	1142761	Identifier	compiler		1142612	1					
ANR	1142762	CFGEntryNode	ENTRY		1142612		True				
ANR	1142763	CFGExitNode	EXIT		1142612		True				
ANR	1142764	Symbol	* compiler -> last_label		1142612						
ANR	1142765	Symbol	compiler -> last_label		1142612						
ANR	1142766	Symbol	compiler -> flags_saved		1142612						
ANR	1142767	Symbol	check_sljit_emit_label		1142612						
ANR	1142768	Symbol	* inst ++		1142612						
ANR	1142769	Symbol	label		1142612						
ANR	1142770	Symbol	* compiler		1142612						
ANR	1142771	Symbol	ensure_abuf		1142612						
ANR	1142772	Symbol	compiler -> last_label -> size		1142612						
ANR	1142773	Symbol	* * compiler		1142612						
ANR	1142774	Symbol	compiler -> size		1142612						
ANR	1142775	Symbol	inst		1142612						
ANR	1142776	Symbol	ensure_buf		1142612						
ANR	1142777	Symbol	compiler		1142612						
ANR	1142778	Symbol	emit_restore_flags		1142612						
ANR	1142779	Symbol	SLJIT_UNLIKELY		1142612						
ANR	1142780	Function	sljit_emit_jump	2554:25:73271:74215							
ANR	1142781	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1142780	0					
ANR	1142782	CompoundStatement		2555:0:73354:74215	1142780	0					
ANR	1142783	IdentifierDeclStatement	sljit_ub * inst ;	2556:1:73357:73371	1142780	0	True				
ANR	1142784	IdentifierDecl	* inst		1142780	0					
ANR	1142785	IdentifierDeclType	sljit_ub *		1142780	0					
ANR	1142786	Identifier	inst		1142780	1					
ANR	1142787	IdentifierDeclStatement	struct sljit_jump * jump ;	2557:1:73374:73397	1142780	1	True				
ANR	1142788	IdentifierDecl	* jump		1142780	0					
ANR	1142789	IdentifierDeclType	struct sljit_jump *		1142780	0					
ANR	1142790	Identifier	jump		1142780	1					
ANR	1142791	ExpressionStatement	CHECK_ERROR_PTR ( )	2559:1:73401:73418	1142780	2	True				
ANR	1142792	CallExpression	CHECK_ERROR_PTR ( )		1142780	0					
ANR	1142793	Callee	CHECK_ERROR_PTR		1142780	0					
ANR	1142794	Identifier	CHECK_ERROR_PTR		1142780	0					
ANR	1142795	ArgumentList			1142780	1					
ANR	1142796	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	2560:1:73421:73469	1142780	3	True				
ANR	1142797	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1142780	0					
ANR	1142798	Callee	CHECK_PTR		1142780	0					
ANR	1142799	Identifier	CHECK_PTR		1142780	0					
ANR	1142800	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1142780	1					
ANR	1142801	Argument	"check_sljit_emit_jump ( compiler , type )"		1142780	0					
ANR	1142802	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1142780	0					
ANR	1142803	Callee	check_sljit_emit_jump		1142780	0					
ANR	1142804	Identifier	check_sljit_emit_jump		1142780	0					
ANR	1142805	ArgumentList	compiler		1142780	1					
ANR	1142806	Argument	compiler		1142780	0					
ANR	1142807	Identifier	compiler		1142780	0					
ANR	1142808	Argument	type		1142780	1					
ANR	1142809	Identifier	type		1142780	0					
ANR	1142810	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1142780	4					
ANR	1142811	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2562:5:73477:73513	1142780	0	True				
ANR	1142812	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1142780	0					
ANR	1142813	Callee	SLJIT_UNLIKELY		1142780	0					
ANR	1142814	Identifier	SLJIT_UNLIKELY		1142780	0					
ANR	1142815	ArgumentList	compiler -> flags_saved		1142780	1					
ANR	1142816	Argument	compiler -> flags_saved		1142780	0					
ANR	1142817	PtrMemberAccess	compiler -> flags_saved		1142780	0					
ANR	1142818	Identifier	compiler		1142780	0					
ANR	1142819	Identifier	flags_saved		1142780	1					
ANR	1142820	CompoundStatement		8:44:161:161	1142780	1					
ANR	1142821	IfStatement	if ( ( type & 0xff ) <= SLJIT_JUMP )		1142780	0					
ANR	1142822	Condition	( type & 0xff ) <= SLJIT_JUMP	2563:6:73524:73550	1142780	0	True				
ANR	1142823	RelationalExpression	( type & 0xff ) <= SLJIT_JUMP		1142780	0		<=			
ANR	1142824	BitAndExpression	type & 0xff		1142780	0		&			
ANR	1142825	Identifier	type		1142780	0					
ANR	1142826	PrimaryExpression	0xff		1142780	1					
ANR	1142827	Identifier	SLJIT_JUMP		1142780	1					
ANR	1142828	ExpressionStatement	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"	2564:3:73556:73600	1142780	1	True				
ANR	1142829	CallExpression	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"		1142780	0					
ANR	1142830	Callee	PTR_FAIL_IF		1142780	0					
ANR	1142831	Identifier	PTR_FAIL_IF		1142780	0					
ANR	1142832	ArgumentList	"emit_restore_flags ( compiler , 0 )"		1142780	1					
ANR	1142833	Argument	"emit_restore_flags ( compiler , 0 )"		1142780	0					
ANR	1142834	CallExpression	"emit_restore_flags ( compiler , 0 )"		1142780	0					
ANR	1142835	Callee	emit_restore_flags		1142780	0					
ANR	1142836	Identifier	emit_restore_flags		1142780	0					
ANR	1142837	ArgumentList	compiler		1142780	1					
ANR	1142838	Argument	compiler		1142780	0					
ANR	1142839	Identifier	compiler		1142780	0					
ANR	1142840	Argument	0		1142780	1					
ANR	1142841	PrimaryExpression	0		1142780	0					
ANR	1142842	ExpressionStatement	compiler -> flags_saved = 0	2565:2:73604:73629	1142780	1	True				
ANR	1142843	AssignmentExpression	compiler -> flags_saved = 0		1142780	0		=			
ANR	1142844	PtrMemberAccess	compiler -> flags_saved		1142780	0					
ANR	1142845	Identifier	compiler		1142780	0					
ANR	1142846	Identifier	flags_saved		1142780	1					
ANR	1142847	PrimaryExpression	0		1142780	1					
ANR	1142848	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2568:1:73636:73711	1142780	5	True				
ANR	1142849	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1142780	0		=			
ANR	1142850	Identifier	jump		1142780	0					
ANR	1142851	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1142780	1					
ANR	1142852	CastTarget	struct sljit_jump *		1142780	0					
ANR	1142853	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1142780	1					
ANR	1142854	Callee	ensure_abuf		1142780	0					
ANR	1142855	Identifier	ensure_abuf		1142780	0					
ANR	1142856	ArgumentList	compiler		1142780	1					
ANR	1142857	Argument	compiler		1142780	0					
ANR	1142858	Identifier	compiler		1142780	0					
ANR	1142859	Argument	sizeof ( struct sljit_jump )		1142780	1					
ANR	1142860	SizeofExpression	sizeof ( struct sljit_jump )		1142780	0					
ANR	1142861	Sizeof	sizeof		1142780	0					
ANR	1142862	SizeofOperand	struct sljit_jump		1142780	1					
ANR	1142863	ExpressionStatement	PTR_FAIL_IF_NULL ( jump )	2569:1:73714:73736	1142780	6	True				
ANR	1142864	CallExpression	PTR_FAIL_IF_NULL ( jump )		1142780	0					
ANR	1142865	Callee	PTR_FAIL_IF_NULL		1142780	0					
ANR	1142866	Identifier	PTR_FAIL_IF_NULL		1142780	0					
ANR	1142867	ArgumentList	jump		1142780	1					
ANR	1142868	Argument	jump		1142780	0					
ANR	1142869	Identifier	jump		1142780	0					
ANR	1142870	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	2570:1:73739:73793	1142780	7	True				
ANR	1142871	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1142780	0					
ANR	1142872	Callee	set_jump		1142780	0					
ANR	1142873	Identifier	set_jump		1142780	0					
ANR	1142874	ArgumentList	jump		1142780	1					
ANR	1142875	Argument	jump		1142780	0					
ANR	1142876	Identifier	jump		1142780	0					
ANR	1142877	Argument	compiler		1142780	1					
ANR	1142878	Identifier	compiler		1142780	0					
ANR	1142879	Argument	type & SLJIT_REWRITABLE_JUMP		1142780	2					
ANR	1142880	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1142780	0		&			
ANR	1142881	Identifier	type		1142780	0					
ANR	1142882	Identifier	SLJIT_REWRITABLE_JUMP		1142780	1					
ANR	1142883	ExpressionStatement	type &= 0xff	2571:1:73796:73808	1142780	8	True				
ANR	1142884	AssignmentExpression	type &= 0xff		1142780	0		&=			
ANR	1142885	Identifier	type		1142780	0					
ANR	1142886	PrimaryExpression	0xff		1142780	1					
ANR	1142887	IfStatement	if ( type >= SLJIT_CALL1 )		1142780	9					
ANR	1142888	Condition	type >= SLJIT_CALL1	2573:5:73816:73834	1142780	0	True				
ANR	1142889	RelationalExpression	type >= SLJIT_CALL1		1142780	0		>=			
ANR	1142890	Identifier	type		1142780	0					
ANR	1142891	Identifier	SLJIT_CALL1		1142780	1					
ANR	1142892	ExpressionStatement	"PTR_FAIL_IF ( call_with_args ( compiler , type ) )"	2574:2:73839:73882	1142780	1	True				
ANR	1142893	CallExpression	"PTR_FAIL_IF ( call_with_args ( compiler , type ) )"		1142780	0					
ANR	1142894	Callee	PTR_FAIL_IF		1142780	0					
ANR	1142895	Identifier	PTR_FAIL_IF		1142780	0					
ANR	1142896	ArgumentList	"call_with_args ( compiler , type )"		1142780	1					
ANR	1142897	Argument	"call_with_args ( compiler , type )"		1142780	0					
ANR	1142898	CallExpression	"call_with_args ( compiler , type )"		1142780	0					
ANR	1142899	Callee	call_with_args		1142780	0					
ANR	1142900	Identifier	call_with_args		1142780	0					
ANR	1142901	ArgumentList	compiler		1142780	1					
ANR	1142902	Argument	compiler		1142780	0					
ANR	1142903	Identifier	compiler		1142780	0					
ANR	1142904	Argument	type		1142780	1					
ANR	1142905	Identifier	type		1142780	0					
ANR	1142906	ExpressionStatement	compiler -> size += ( type >= SLJIT_JUMP ) ? 5 : 6	2578:1:73967:74013	1142780	10	True				
ANR	1142907	AssignmentExpression	compiler -> size += ( type >= SLJIT_JUMP ) ? 5 : 6		1142780	0		+=			
ANR	1142908	PtrMemberAccess	compiler -> size		1142780	0					
ANR	1142909	Identifier	compiler		1142780	0					
ANR	1142910	Identifier	size		1142780	1					
ANR	1142911	ConditionalExpression	( type >= SLJIT_JUMP ) ? 5 : 6		1142780	1					
ANR	1142912	Condition	type >= SLJIT_JUMP		1142780	0					
ANR	1142913	RelationalExpression	type >= SLJIT_JUMP		1142780	0		>=			
ANR	1142914	Identifier	type		1142780	0					
ANR	1142915	Identifier	SLJIT_JUMP		1142780	1					
ANR	1142916	PrimaryExpression	5		1142780	1					
ANR	1142917	PrimaryExpression	6		1142780	2					
ANR	1142918	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2583:1:74097:74138	1142780	11	True				
ANR	1142919	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1142780	0		=			
ANR	1142920	Identifier	inst		1142780	0					
ANR	1142921	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1142780	1					
ANR	1142922	CastTarget	sljit_ub *		1142780	0					
ANR	1142923	CallExpression	"ensure_buf ( compiler , 2 )"		1142780	1					
ANR	1142924	Callee	ensure_buf		1142780	0					
ANR	1142925	Identifier	ensure_buf		1142780	0					
ANR	1142926	ArgumentList	compiler		1142780	1					
ANR	1142927	Argument	compiler		1142780	0					
ANR	1142928	Identifier	compiler		1142780	0					
ANR	1142929	Argument	2		1142780	1					
ANR	1142930	PrimaryExpression	2		1142780	0					
ANR	1142931	ExpressionStatement	PTR_FAIL_IF_NULL ( inst )	2584:1:74141:74163	1142780	12	True				
ANR	1142932	CallExpression	PTR_FAIL_IF_NULL ( inst )		1142780	0					
ANR	1142933	Callee	PTR_FAIL_IF_NULL		1142780	0					
ANR	1142934	Identifier	PTR_FAIL_IF_NULL		1142780	0					
ANR	1142935	ArgumentList	inst		1142780	1					
ANR	1142936	Argument	inst		1142780	0					
ANR	1142937	Identifier	inst		1142780	0					
ANR	1142938	ExpressionStatement	* inst ++ = 0	2586:1:74167:74178	1142780	13	True				
ANR	1142939	AssignmentExpression	* inst ++ = 0		1142780	0		=			
ANR	1142940	UnaryOperationExpression	* inst ++		1142780	0					
ANR	1142941	UnaryOperator	*		1142780	0					
ANR	1142942	PostIncDecOperationExpression	inst ++		1142780	1					
ANR	1142943	Identifier	inst		1142780	0					
ANR	1142944	IncDec	++		1142780	1					
ANR	1142945	PrimaryExpression	0		1142780	1					
ANR	1142946	ExpressionStatement	* inst ++ = type + 4	2587:1:74181:74199	1142780	14	True				
ANR	1142947	AssignmentExpression	* inst ++ = type + 4		1142780	0		=			
ANR	1142948	UnaryOperationExpression	* inst ++		1142780	0					
ANR	1142949	UnaryOperator	*		1142780	0					
ANR	1142950	PostIncDecOperationExpression	inst ++		1142780	1					
ANR	1142951	Identifier	inst		1142780	0					
ANR	1142952	IncDec	++		1142780	1					
ANR	1142953	AdditiveExpression	type + 4		1142780	1		+			
ANR	1142954	Identifier	type		1142780	0					
ANR	1142955	PrimaryExpression	4		1142780	1					
ANR	1142956	ReturnStatement	return jump ;	2588:1:74202:74213	1142780	15	True				
ANR	1142957	Identifier	jump		1142780	0					
ANR	1142958	ReturnType	struct sljit_jump *		1142780	1					
ANR	1142959	Identifier	sljit_emit_jump		1142780	2					
ANR	1142960	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1142780	3					
ANR	1142961	Parameter	struct sljit_compiler * compiler	2554:60:73306:73336	1142780	0	True				
ANR	1142962	ParameterType	struct sljit_compiler *		1142780	0					
ANR	1142963	Identifier	compiler		1142780	1					
ANR	1142964	Parameter	sljit_si type	2554:93:73339:73351	1142780	1	True				
ANR	1142965	ParameterType	sljit_si		1142780	0					
ANR	1142966	Identifier	type		1142780	1					
ANR	1142967	CFGEntryNode	ENTRY		1142780		True				
ANR	1142968	CFGExitNode	EXIT		1142780		True				
ANR	1142969	Symbol	SLJIT_JUMP		1142780						
ANR	1142970	Symbol	call_with_args		1142780						
ANR	1142971	Symbol	compiler -> flags_saved		1142780						
ANR	1142972	Symbol	* inst ++		1142780						
ANR	1142973	Symbol	* compiler		1142780						
ANR	1142974	Symbol	ensure_abuf		1142780						
ANR	1142975	Symbol	type		1142780						
ANR	1142976	Symbol	compiler -> size		1142780						
ANR	1142977	Symbol	inst		1142780						
ANR	1142978	Symbol	ensure_buf		1142780						
ANR	1142979	Symbol	check_sljit_emit_jump		1142780						
ANR	1142980	Symbol	SLJIT_CALL1		1142780						
ANR	1142981	Symbol	SLJIT_REWRITABLE_JUMP		1142780						
ANR	1142982	Symbol	compiler		1142780						
ANR	1142983	Symbol	emit_restore_flags		1142780						
ANR	1142984	Symbol	jump		1142780						
ANR	1142985	Symbol	SLJIT_UNLIKELY		1142780						
ANR	1142986	Function	sljit_emit_ijump	2591:0:74218:76033							
ANR	1142987	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1142986	0					
ANR	1142988	CompoundStatement		2592:0:74346:76033	1142986	0					
ANR	1142989	IdentifierDeclStatement	sljit_ub * inst ;	2593:1:74349:74363	1142986	0	True				
ANR	1142990	IdentifierDecl	* inst		1142986	0					
ANR	1142991	IdentifierDeclType	sljit_ub *		1142986	0					
ANR	1142992	Identifier	inst		1142986	1					
ANR	1142993	IdentifierDeclStatement	struct sljit_jump * jump ;	2594:1:74366:74389	1142986	1	True				
ANR	1142994	IdentifierDecl	* jump		1142986	0					
ANR	1142995	IdentifierDeclType	struct sljit_jump *		1142986	0					
ANR	1142996	Identifier	jump		1142986	1					
ANR	1142997	ExpressionStatement	CHECK_ERROR ( )	2596:1:74393:74406	1142986	2	True				
ANR	1142998	CallExpression	CHECK_ERROR ( )		1142986	0					
ANR	1142999	Callee	CHECK_ERROR		1142986	0					
ANR	1143000	Identifier	CHECK_ERROR		1142986	0					
ANR	1143001	ArgumentList			1142986	1					
ANR	1143002	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	2597:1:74409:74465	1142986	3	True				
ANR	1143003	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1142986	0					
ANR	1143004	Callee	CHECK		1142986	0					
ANR	1143005	Identifier	CHECK		1142986	0					
ANR	1143006	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1142986	1					
ANR	1143007	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1142986	0					
ANR	1143008	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1142986	0					
ANR	1143009	Callee	check_sljit_emit_ijump		1142986	0					
ANR	1143010	Identifier	check_sljit_emit_ijump		1142986	0					
ANR	1143011	ArgumentList	compiler		1142986	1					
ANR	1143012	Argument	compiler		1142986	0					
ANR	1143013	Identifier	compiler		1142986	0					
ANR	1143014	Argument	type		1142986	1					
ANR	1143015	Identifier	type		1142986	0					
ANR	1143016	Argument	src		1142986	2					
ANR	1143017	Identifier	src		1142986	0					
ANR	1143018	Argument	srcw		1142986	3					
ANR	1143019	Identifier	srcw		1142986	0					
ANR	1143020	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2598:1:74468:74498	1142986	4	True				
ANR	1143021	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1142986	0					
ANR	1143022	Callee	ADJUST_LOCAL_OFFSET		1142986	0					
ANR	1143023	Identifier	ADJUST_LOCAL_OFFSET		1142986	0					
ANR	1143024	ArgumentList	src		1142986	1					
ANR	1143025	Argument	src		1142986	0					
ANR	1143026	Identifier	src		1142986	0					
ANR	1143027	Argument	srcw		1142986	1					
ANR	1143028	Identifier	srcw		1142986	0					
ANR	1143029	ExpressionStatement	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"	2600:1:74502:74538	1142986	5	True				
ANR	1143030	CallExpression	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"		1142986	0					
ANR	1143031	Callee	CHECK_EXTRA_REGS		1142986	0					
ANR	1143032	Identifier	CHECK_EXTRA_REGS		1142986	0					
ANR	1143033	ArgumentList	src		1142986	1					
ANR	1143034	Argument	src		1142986	0					
ANR	1143035	Identifier	src		1142986	0					
ANR	1143036	Argument	srcw		1142986	1					
ANR	1143037	Identifier	srcw		1142986	0					
ANR	1143038	Argument	( void ) 0		1142986	2					
ANR	1143039	CastExpression	( void ) 0		1142986	0					
ANR	1143040	CastTarget	void		1142986	0					
ANR	1143041	PrimaryExpression	0		1142986	1					
ANR	1143042	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1142986	6					
ANR	1143043	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2602:5:74546:74582	1142986	0	True				
ANR	1143044	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1142986	0					
ANR	1143045	Callee	SLJIT_UNLIKELY		1142986	0					
ANR	1143046	Identifier	SLJIT_UNLIKELY		1142986	0					
ANR	1143047	ArgumentList	compiler -> flags_saved		1142986	1					
ANR	1143048	Argument	compiler -> flags_saved		1142986	0					
ANR	1143049	PtrMemberAccess	compiler -> flags_saved		1142986	0					
ANR	1143050	Identifier	compiler		1142986	0					
ANR	1143051	Identifier	flags_saved		1142986	1					
ANR	1143052	CompoundStatement		11:44:238:238	1142986	1					
ANR	1143053	IfStatement	if ( type <= SLJIT_JUMP )		1142986	0					
ANR	1143054	Condition	type <= SLJIT_JUMP	2603:6:74593:74610	1142986	0	True				
ANR	1143055	RelationalExpression	type <= SLJIT_JUMP		1142986	0		<=			
ANR	1143056	Identifier	type		1142986	0					
ANR	1143057	Identifier	SLJIT_JUMP		1142986	1					
ANR	1143058	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"	2604:3:74616:74656	1142986	1	True				
ANR	1143059	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"		1142986	0					
ANR	1143060	Callee	FAIL_IF		1142986	0					
ANR	1143061	Identifier	FAIL_IF		1142986	0					
ANR	1143062	ArgumentList	"emit_restore_flags ( compiler , 0 )"		1142986	1					
ANR	1143063	Argument	"emit_restore_flags ( compiler , 0 )"		1142986	0					
ANR	1143064	CallExpression	"emit_restore_flags ( compiler , 0 )"		1142986	0					
ANR	1143065	Callee	emit_restore_flags		1142986	0					
ANR	1143066	Identifier	emit_restore_flags		1142986	0					
ANR	1143067	ArgumentList	compiler		1142986	1					
ANR	1143068	Argument	compiler		1142986	0					
ANR	1143069	Identifier	compiler		1142986	0					
ANR	1143070	Argument	0		1142986	1					
ANR	1143071	PrimaryExpression	0		1142986	0					
ANR	1143072	ExpressionStatement	compiler -> flags_saved = 0	2605:2:74660:74685	1142986	1	True				
ANR	1143073	AssignmentExpression	compiler -> flags_saved = 0		1142986	0		=			
ANR	1143074	PtrMemberAccess	compiler -> flags_saved		1142986	0					
ANR	1143075	Identifier	compiler		1142986	0					
ANR	1143076	Identifier	flags_saved		1142986	1					
ANR	1143077	PrimaryExpression	0		1142986	1					
ANR	1143078	IfStatement	if ( type >= SLJIT_CALL1 )		1142986	7					
ANR	1143079	Condition	type >= SLJIT_CALL1	2608:5:74696:74714	1142986	0	True				
ANR	1143080	RelationalExpression	type >= SLJIT_CALL1		1142986	0		>=			
ANR	1143081	Identifier	type		1142986	0					
ANR	1143082	Identifier	SLJIT_CALL1		1142986	1					
ANR	1143083	CompoundStatement		17:26:370:370	1142986	1					
ANR	1143084	IfStatement	if ( src == SLJIT_R2 )		1142986	0					
ANR	1143085	Condition	src == SLJIT_R2	2611:6:74843:74857	1142986	0	True				
ANR	1143086	EqualityExpression	src == SLJIT_R2		1142986	0		==			
ANR	1143087	Identifier	src		1142986	0					
ANR	1143088	Identifier	SLJIT_R2		1142986	1					
ANR	1143089	CompoundStatement		20:23:513:513	1142986	1					
ANR	1143090	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"	2612:3:74865:74904	1142986	0	True				
ANR	1143091	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"		1142986	0					
ANR	1143092	Callee	EMIT_MOV		1142986	0					
ANR	1143093	Identifier	EMIT_MOV		1142986	0					
ANR	1143094	ArgumentList	compiler		1142986	1					
ANR	1143095	Argument	compiler		1142986	0					
ANR	1143096	Identifier	compiler		1142986	0					
ANR	1143097	Argument	TMP_REG1		1142986	1					
ANR	1143098	Identifier	TMP_REG1		1142986	0					
ANR	1143099	Argument	0		1142986	2					
ANR	1143100	PrimaryExpression	0		1142986	0					
ANR	1143101	Argument	src		1142986	3					
ANR	1143102	Identifier	src		1142986	0					
ANR	1143103	Argument	0		1142986	4					
ANR	1143104	PrimaryExpression	0		1142986	0					
ANR	1143105	ExpressionStatement	src = TMP_REG1	2613:3:74909:74923	1142986	1	True				
ANR	1143106	AssignmentExpression	src = TMP_REG1		1142986	0		=			
ANR	1143107	Identifier	src		1142986	0					
ANR	1143108	Identifier	TMP_REG1		1142986	1					
ANR	1143109	IfStatement	if ( src == SLJIT_MEM1 ( SLJIT_SP ) && type >= SLJIT_CALL3 )		1142986	1					
ANR	1143110	Condition	src == SLJIT_MEM1 ( SLJIT_SP ) && type >= SLJIT_CALL3	2615:6:74935:74984	1142986	0	True				
ANR	1143111	AndExpression	src == SLJIT_MEM1 ( SLJIT_SP ) && type >= SLJIT_CALL3		1142986	0		&&			
ANR	1143112	EqualityExpression	src == SLJIT_MEM1 ( SLJIT_SP )		1142986	0		==			
ANR	1143113	Identifier	src		1142986	0					
ANR	1143114	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1142986	1					
ANR	1143115	Callee	SLJIT_MEM1		1142986	0					
ANR	1143116	Identifier	SLJIT_MEM1		1142986	0					
ANR	1143117	ArgumentList	SLJIT_SP		1142986	1					
ANR	1143118	Argument	SLJIT_SP		1142986	0					
ANR	1143119	Identifier	SLJIT_SP		1142986	0					
ANR	1143120	RelationalExpression	type >= SLJIT_CALL3		1142986	1		>=			
ANR	1143121	Identifier	type		1142986	0					
ANR	1143122	Identifier	SLJIT_CALL3		1142986	1					
ANR	1143123	ExpressionStatement	srcw += sizeof ( sljit_sw )	2616:3:74990:75014	1142986	1	True				
ANR	1143124	AssignmentExpression	srcw += sizeof ( sljit_sw )		1142986	0		+=			
ANR	1143125	Identifier	srcw		1142986	0					
ANR	1143126	SizeofExpression	sizeof ( sljit_sw )		1142986	1					
ANR	1143127	Sizeof	sizeof		1142986	0					
ANR	1143128	SizeofOperand	sljit_sw		1142986	1					
ANR	1143129	IfStatement	if ( src == SLJIT_R2 )		1142986	2					
ANR	1143130	Condition	src == SLJIT_R2	2620:6:75112:75126	1142986	0	True				
ANR	1143131	EqualityExpression	src == SLJIT_R2		1142986	0		==			
ANR	1143132	Identifier	src		1142986	0					
ANR	1143133	Identifier	SLJIT_R2		1142986	1					
ANR	1143134	CompoundStatement		29:23:782:782	1142986	1					
ANR	1143135	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"	2621:3:75134:75173	1142986	0	True				
ANR	1143136	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"		1142986	0					
ANR	1143137	Callee	EMIT_MOV		1142986	0					
ANR	1143138	Identifier	EMIT_MOV		1142986	0					
ANR	1143139	ArgumentList	compiler		1142986	1					
ANR	1143140	Argument	compiler		1142986	0					
ANR	1143141	Identifier	compiler		1142986	0					
ANR	1143142	Argument	TMP_REG1		1142986	1					
ANR	1143143	Identifier	TMP_REG1		1142986	0					
ANR	1143144	Argument	0		1142986	2					
ANR	1143145	PrimaryExpression	0		1142986	0					
ANR	1143146	Argument	src		1142986	3					
ANR	1143147	Identifier	src		1142986	0					
ANR	1143148	Argument	0		1142986	4					
ANR	1143149	PrimaryExpression	0		1142986	0					
ANR	1143150	ExpressionStatement	src = TMP_REG1	2622:3:75178:75192	1142986	1	True				
ANR	1143151	AssignmentExpression	src = TMP_REG1		1142986	0		=			
ANR	1143152	Identifier	src		1142986	0					
ANR	1143153	Identifier	TMP_REG1		1142986	1					
ANR	1143154	ExpressionStatement	"FAIL_IF ( call_with_args ( compiler , type ) )"	2625:2:75207:75246	1142986	3	True				
ANR	1143155	CallExpression	"FAIL_IF ( call_with_args ( compiler , type ) )"		1142986	0					
ANR	1143156	Callee	FAIL_IF		1142986	0					
ANR	1143157	Identifier	FAIL_IF		1142986	0					
ANR	1143158	ArgumentList	"call_with_args ( compiler , type )"		1142986	1					
ANR	1143159	Argument	"call_with_args ( compiler , type )"		1142986	0					
ANR	1143160	CallExpression	"call_with_args ( compiler , type )"		1142986	0					
ANR	1143161	Callee	call_with_args		1142986	0					
ANR	1143162	Identifier	call_with_args		1142986	0					
ANR	1143163	ArgumentList	compiler		1142986	1					
ANR	1143164	Argument	compiler		1142986	0					
ANR	1143165	Identifier	compiler		1142986	0					
ANR	1143166	Argument	type		1142986	1					
ANR	1143167	Identifier	type		1142986	0					
ANR	1143168	IfStatement	if ( src == SLJIT_IMM )		1142986	8					
ANR	1143169	Condition	src == SLJIT_IMM	2628:5:75257:75272	1142986	0	True				
ANR	1143170	EqualityExpression	src == SLJIT_IMM		1142986	0		==			
ANR	1143171	Identifier	src		1142986	0					
ANR	1143172	Identifier	SLJIT_IMM		1142986	1					
ANR	1143173	CompoundStatement		37:23:928:928	1142986	1					
ANR	1143174	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2629:2:75279:75354	1142986	0	True				
ANR	1143175	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1142986	0		=			
ANR	1143176	Identifier	jump		1142986	0					
ANR	1143177	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1142986	1					
ANR	1143178	CastTarget	struct sljit_jump *		1142986	0					
ANR	1143179	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1142986	1					
ANR	1143180	Callee	ensure_abuf		1142986	0					
ANR	1143181	Identifier	ensure_abuf		1142986	0					
ANR	1143182	ArgumentList	compiler		1142986	1					
ANR	1143183	Argument	compiler		1142986	0					
ANR	1143184	Identifier	compiler		1142986	0					
ANR	1143185	Argument	sizeof ( struct sljit_jump )		1142986	1					
ANR	1143186	SizeofExpression	sizeof ( struct sljit_jump )		1142986	0					
ANR	1143187	Sizeof	sizeof		1142986	0					
ANR	1143188	SizeofOperand	struct sljit_jump		1142986	1					
ANR	1143189	ExpressionStatement	FAIL_IF_NULL ( jump )	2630:2:75358:75376	1142986	1	True				
ANR	1143190	CallExpression	FAIL_IF_NULL ( jump )		1142986	0					
ANR	1143191	Callee	FAIL_IF_NULL		1142986	0					
ANR	1143192	Identifier	FAIL_IF_NULL		1142986	0					
ANR	1143193	ArgumentList	jump		1142986	1					
ANR	1143194	Argument	jump		1142986	0					
ANR	1143195	Identifier	jump		1142986	0					
ANR	1143196	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR )"	2631:2:75380:75415	1142986	2	True				
ANR	1143197	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR )"		1142986	0					
ANR	1143198	Callee	set_jump		1142986	0					
ANR	1143199	Identifier	set_jump		1142986	0					
ANR	1143200	ArgumentList	jump		1142986	1					
ANR	1143201	Argument	jump		1142986	0					
ANR	1143202	Identifier	jump		1142986	0					
ANR	1143203	Argument	compiler		1142986	1					
ANR	1143204	Identifier	compiler		1142986	0					
ANR	1143205	Argument	JUMP_ADDR		1142986	2					
ANR	1143206	Identifier	JUMP_ADDR		1142986	0					
ANR	1143207	ExpressionStatement	jump -> u . target = srcw	2632:2:75419:75440	1142986	3	True				
ANR	1143208	AssignmentExpression	jump -> u . target = srcw		1142986	0		=			
ANR	1143209	MemberAccess	jump -> u . target		1142986	0					
ANR	1143210	PtrMemberAccess	jump -> u		1142986	0					
ANR	1143211	Identifier	jump		1142986	0					
ANR	1143212	Identifier	u		1142986	1					
ANR	1143213	Identifier	target		1142986	1					
ANR	1143214	Identifier	srcw		1142986	1					
ANR	1143215	ExpressionStatement	compiler -> size += 5	2636:2:75527:75546	1142986	4	True				
ANR	1143216	AssignmentExpression	compiler -> size += 5		1142986	0		+=			
ANR	1143217	PtrMemberAccess	compiler -> size		1142986	0					
ANR	1143218	Identifier	compiler		1142986	0					
ANR	1143219	Identifier	size		1142986	1					
ANR	1143220	PrimaryExpression	5		1142986	1					
ANR	1143221	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2641:2:75592:75633	1142986	5	True				
ANR	1143222	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1142986	0		=			
ANR	1143223	Identifier	inst		1142986	0					
ANR	1143224	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1142986	1					
ANR	1143225	CastTarget	sljit_ub *		1142986	0					
ANR	1143226	CallExpression	"ensure_buf ( compiler , 2 )"		1142986	1					
ANR	1143227	Callee	ensure_buf		1142986	0					
ANR	1143228	Identifier	ensure_buf		1142986	0					
ANR	1143229	ArgumentList	compiler		1142986	1					
ANR	1143230	Argument	compiler		1142986	0					
ANR	1143231	Identifier	compiler		1142986	0					
ANR	1143232	Argument	2		1142986	1					
ANR	1143233	PrimaryExpression	2		1142986	0					
ANR	1143234	ExpressionStatement	FAIL_IF_NULL ( inst )	2642:2:75637:75655	1142986	6	True				
ANR	1143235	CallExpression	FAIL_IF_NULL ( inst )		1142986	0					
ANR	1143236	Callee	FAIL_IF_NULL		1142986	0					
ANR	1143237	Identifier	FAIL_IF_NULL		1142986	0					
ANR	1143238	ArgumentList	inst		1142986	1					
ANR	1143239	Argument	inst		1142986	0					
ANR	1143240	Identifier	inst		1142986	0					
ANR	1143241	ExpressionStatement	* inst ++ = 0	2644:2:75660:75671	1142986	7	True				
ANR	1143242	AssignmentExpression	* inst ++ = 0		1142986	0		=			
ANR	1143243	UnaryOperationExpression	* inst ++		1142986	0					
ANR	1143244	UnaryOperator	*		1142986	0					
ANR	1143245	PostIncDecOperationExpression	inst ++		1142986	1					
ANR	1143246	Identifier	inst		1142986	0					
ANR	1143247	IncDec	++		1142986	1					
ANR	1143248	PrimaryExpression	0		1142986	1					
ANR	1143249	ExpressionStatement	* inst ++ = type + 4	2645:2:75675:75693	1142986	8	True				
ANR	1143250	AssignmentExpression	* inst ++ = type + 4		1142986	0		=			
ANR	1143251	UnaryOperationExpression	* inst ++		1142986	0					
ANR	1143252	UnaryOperator	*		1142986	0					
ANR	1143253	PostIncDecOperationExpression	inst ++		1142986	1					
ANR	1143254	Identifier	inst		1142986	0					
ANR	1143255	IncDec	++		1142986	1					
ANR	1143256	AdditiveExpression	type + 4		1142986	1		+			
ANR	1143257	Identifier	type		1142986	0					
ANR	1143258	PrimaryExpression	4		1142986	1					
ANR	1143259	ElseStatement	else		1142986	0					
ANR	1143260	CompoundStatement		56:6:1357:1357	1142986	0					
ANR	1143261	ExpressionStatement	compiler -> mode32 = 1	2650:2:75820:75840	1142986	0	True				
ANR	1143262	AssignmentExpression	compiler -> mode32 = 1		1142986	0		=			
ANR	1143263	PtrMemberAccess	compiler -> mode32		1142986	0					
ANR	1143264	Identifier	compiler		1142986	0					
ANR	1143265	Identifier	mode32		1142986	1					
ANR	1143266	PrimaryExpression	1		1142986	1					
ANR	1143267	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"	2652:2:75851:75908	1142986	1	True				
ANR	1143268	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"		1142986	0		=			
ANR	1143269	Identifier	inst		1142986	0					
ANR	1143270	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"		1142986	1					
ANR	1143271	Callee	emit_x86_instruction		1142986	0					
ANR	1143272	Identifier	emit_x86_instruction		1142986	0					
ANR	1143273	ArgumentList	compiler		1142986	1					
ANR	1143274	Argument	compiler		1142986	0					
ANR	1143275	Identifier	compiler		1142986	0					
ANR	1143276	Argument	1		1142986	1					
ANR	1143277	PrimaryExpression	1		1142986	0					
ANR	1143278	Argument	0		1142986	2					
ANR	1143279	PrimaryExpression	0		1142986	0					
ANR	1143280	Argument	0		1142986	3					
ANR	1143281	PrimaryExpression	0		1142986	0					
ANR	1143282	Argument	src		1142986	4					
ANR	1143283	Identifier	src		1142986	0					
ANR	1143284	Argument	srcw		1142986	5					
ANR	1143285	Identifier	srcw		1142986	0					
ANR	1143286	ExpressionStatement	FAIL_IF ( ! inst )	2653:2:75912:75926	1142986	2	True				
ANR	1143287	CallExpression	FAIL_IF ( ! inst )		1142986	0					
ANR	1143288	Callee	FAIL_IF		1142986	0					
ANR	1143289	Identifier	FAIL_IF		1142986	0					
ANR	1143290	ArgumentList	! inst		1142986	1					
ANR	1143291	Argument	! inst		1142986	0					
ANR	1143292	UnaryOperationExpression	! inst		1142986	0					
ANR	1143293	UnaryOperator	!		1142986	0					
ANR	1143294	Identifier	inst		1142986	1					
ANR	1143295	ExpressionStatement	* inst ++ = GROUP_FF	2654:2:75930:75948	1142986	3	True				
ANR	1143296	AssignmentExpression	* inst ++ = GROUP_FF		1142986	0		=			
ANR	1143297	UnaryOperationExpression	* inst ++		1142986	0					
ANR	1143298	UnaryOperator	*		1142986	0					
ANR	1143299	PostIncDecOperationExpression	inst ++		1142986	1					
ANR	1143300	Identifier	inst		1142986	0					
ANR	1143301	IncDec	++		1142986	1					
ANR	1143302	Identifier	GROUP_FF		1142986	1					
ANR	1143303	ExpressionStatement	* inst |= ( type >= SLJIT_FAST_CALL ) ? CALL_rm : JMP_rm	2655:2:75952:76005	1142986	4	True				
ANR	1143304	AssignmentExpression	* inst |= ( type >= SLJIT_FAST_CALL ) ? CALL_rm : JMP_rm		1142986	0		|=			
ANR	1143305	UnaryOperationExpression	* inst		1142986	0					
ANR	1143306	UnaryOperator	*		1142986	0					
ANR	1143307	Identifier	inst		1142986	1					
ANR	1143308	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? CALL_rm : JMP_rm		1142986	1					
ANR	1143309	Condition	type >= SLJIT_FAST_CALL		1142986	0					
ANR	1143310	RelationalExpression	type >= SLJIT_FAST_CALL		1142986	0		>=			
ANR	1143311	Identifier	type		1142986	0					
ANR	1143312	Identifier	SLJIT_FAST_CALL		1142986	1					
ANR	1143313	Identifier	CALL_rm		1142986	1					
ANR	1143314	Identifier	JMP_rm		1142986	2					
ANR	1143315	ReturnStatement	return SLJIT_SUCCESS ;	2657:1:76011:76031	1142986	9	True				
ANR	1143316	Identifier	SLJIT_SUCCESS		1142986	0					
ANR	1143317	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1142986	1					
ANR	1143318	Identifier	sljit_emit_ijump		1142986	2					
ANR	1143319	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1142986	3					
ANR	1143320	Parameter	struct sljit_compiler * compiler	2591:51:74269:74299	1142986	0	True				
ANR	1143321	ParameterType	struct sljit_compiler *		1142986	0					
ANR	1143322	Identifier	compiler		1142986	1					
ANR	1143323	Parameter	sljit_si type	2591:84:74302:74314	1142986	1	True				
ANR	1143324	ParameterType	sljit_si		1142986	0					
ANR	1143325	Identifier	type		1142986	1					
ANR	1143326	Parameter	sljit_si src	2591:99:74317:74328	1142986	2	True				
ANR	1143327	ParameterType	sljit_si		1142986	0					
ANR	1143328	Identifier	src		1142986	1					
ANR	1143329	Parameter	sljit_sw srcw	2591:113:74331:74343	1142986	3	True				
ANR	1143330	ParameterType	sljit_sw		1142986	0					
ANR	1143331	Identifier	srcw		1142986	1					
ANR	1143332	CFGEntryNode	ENTRY		1142986		True				
ANR	1143333	CFGExitNode	EXIT		1142986		True				
ANR	1143334	Symbol	check_sljit_emit_ijump		1142986						
ANR	1143335	Symbol	SLJIT_JUMP		1142986						
ANR	1143336	Symbol	TMP_REG1		1142986						
ANR	1143337	Symbol	CALL_rm		1142986						
ANR	1143338	Symbol	* jump		1142986						
ANR	1143339	Symbol	jump -> u		1142986						
ANR	1143340	Symbol	compiler -> flags_saved		1142986						
ANR	1143341	Symbol	* inst ++		1142986						
ANR	1143342	Symbol	JUMP_ADDR		1142986						
ANR	1143343	Symbol	* compiler		1142986						
ANR	1143344	Symbol	type		1142986						
ANR	1143345	Symbol	SLJIT_R2		1142986						
ANR	1143346	Symbol	SLJIT_SP		1142986						
ANR	1143347	Symbol	SLJIT_IMM		1142986						
ANR	1143348	Symbol	SLJIT_FAST_CALL		1142986						
ANR	1143349	Symbol	compiler		1142986						
ANR	1143350	Symbol	jump		1142986						
ANR	1143351	Symbol	emit_x86_instruction		1142986						
ANR	1143352	Symbol	call_with_args		1142986						
ANR	1143353	Symbol	* inst		1142986						
ANR	1143354	Symbol	JMP_rm		1142986						
ANR	1143355	Symbol	src		1142986						
ANR	1143356	Symbol	srcw		1142986						
ANR	1143357	Symbol	SLJIT_SUCCESS		1142986						
ANR	1143358	Symbol	SLJIT_MEM1		1142986						
ANR	1143359	Symbol	ensure_abuf		1142986						
ANR	1143360	Symbol	compiler -> size		1142986						
ANR	1143361	Symbol	GROUP_FF		1142986						
ANR	1143362	Symbol	inst		1142986						
ANR	1143363	Symbol	jump -> u . target		1142986						
ANR	1143364	Symbol	ensure_buf		1142986						
ANR	1143365	Symbol	SLJIT_CALL1		1142986						
ANR	1143366	Symbol	compiler -> mode32		1142986						
ANR	1143367	Symbol	SLJIT_CALL3		1142986						
ANR	1143368	Symbol	emit_restore_flags		1142986						
ANR	1143369	Symbol	SLJIT_UNLIKELY		1142986						
ANR	1143370	Function	sljit_emit_op_flags	2660:0:76036:81826							
ANR	1143371	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1143370	0					
ANR	1143372	CompoundStatement		2664:0:76212:81826	1143370	0					
ANR	1143373	IdentifierDeclStatement	sljit_ub * inst ;	2665:1:76215:76229	1143370	0	True				
ANR	1143374	IdentifierDecl	* inst		1143370	0					
ANR	1143375	IdentifierDeclType	sljit_ub *		1143370	0					
ANR	1143376	Identifier	inst		1143370	1					
ANR	1143377	IdentifierDeclStatement	sljit_ub cond_set = 0 ;	2666:1:76232:76253	1143370	1	True				
ANR	1143378	IdentifierDecl	cond_set = 0		1143370	0					
ANR	1143379	IdentifierDeclType	sljit_ub		1143370	0					
ANR	1143380	Identifier	cond_set		1143370	1					
ANR	1143381	AssignmentExpression	cond_set = 0		1143370	2		=			
ANR	1143382	Identifier	cond_set		1143370	0					
ANR	1143383	PrimaryExpression	0		1143370	1					
ANR	1143384	IdentifierDeclStatement	sljit_si reg ;	2668:1:76313:76325	1143370	2	True				
ANR	1143385	IdentifierDecl	reg		1143370	0					
ANR	1143386	IdentifierDeclType	sljit_si		1143370	0					
ANR	1143387	Identifier	reg		1143370	1					
ANR	1143388	ExpressionStatement	CHECK_ERROR ( )	2675:1:76449:76462	1143370	3	True				
ANR	1143389	CallExpression	CHECK_ERROR ( )		1143370	0					
ANR	1143390	Callee	CHECK_ERROR		1143370	0					
ANR	1143391	Identifier	CHECK_ERROR		1143370	0					
ANR	1143392	ArgumentList			1143370	1					
ANR	1143393	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	2676:1:76465:76539	1143370	4	True				
ANR	1143394	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1143370	0					
ANR	1143395	Callee	CHECK		1143370	0					
ANR	1143396	Identifier	CHECK		1143370	0					
ANR	1143397	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1143370	1					
ANR	1143398	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1143370	0					
ANR	1143399	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1143370	0					
ANR	1143400	Callee	check_sljit_emit_op_flags		1143370	0					
ANR	1143401	Identifier	check_sljit_emit_op_flags		1143370	0					
ANR	1143402	ArgumentList	compiler		1143370	1					
ANR	1143403	Argument	compiler		1143370	0					
ANR	1143404	Identifier	compiler		1143370	0					
ANR	1143405	Argument	op		1143370	1					
ANR	1143406	Identifier	op		1143370	0					
ANR	1143407	Argument	dst		1143370	2					
ANR	1143408	Identifier	dst		1143370	0					
ANR	1143409	Argument	dstw		1143370	3					
ANR	1143410	Identifier	dstw		1143370	0					
ANR	1143411	Argument	src		1143370	4					
ANR	1143412	Identifier	src		1143370	0					
ANR	1143413	Argument	srcw		1143370	5					
ANR	1143414	Identifier	srcw		1143370	0					
ANR	1143415	Argument	type		1143370	6					
ANR	1143416	Identifier	type		1143370	0					
ANR	1143417	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	2677:1:76542:76564	1143370	5	True				
ANR	1143418	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1143370	0					
ANR	1143419	Callee	SLJIT_UNUSED_ARG		1143370	0					
ANR	1143420	Identifier	SLJIT_UNUSED_ARG		1143370	0					
ANR	1143421	ArgumentList	srcw		1143370	1					
ANR	1143422	Argument	srcw		1143370	0					
ANR	1143423	Identifier	srcw		1143370	0					
ANR	1143424	IfStatement	if ( dst == SLJIT_UNUSED )		1143370	6					
ANR	1143425	Condition	dst == SLJIT_UNUSED	2679:5:76572:76590	1143370	0	True				
ANR	1143426	EqualityExpression	dst == SLJIT_UNUSED		1143370	0		==			
ANR	1143427	Identifier	dst		1143370	0					
ANR	1143428	Identifier	SLJIT_UNUSED		1143370	1					
ANR	1143429	ReturnStatement	return SLJIT_SUCCESS ;	2680:2:76595:76615	1143370	1	True				
ANR	1143430	Identifier	SLJIT_SUCCESS		1143370	0					
ANR	1143431	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2682:1:76619:76649	1143370	7	True				
ANR	1143432	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1143370	0					
ANR	1143433	Callee	ADJUST_LOCAL_OFFSET		1143370	0					
ANR	1143434	Identifier	ADJUST_LOCAL_OFFSET		1143370	0					
ANR	1143435	ArgumentList	dst		1143370	1					
ANR	1143436	Argument	dst		1143370	0					
ANR	1143437	Identifier	dst		1143370	0					
ANR	1143438	Argument	dstw		1143370	1					
ANR	1143439	Identifier	dstw		1143370	0					
ANR	1143440	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2683:1:76652:76688	1143370	8	True				
ANR	1143441	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1143370	0					
ANR	1143442	Callee	CHECK_EXTRA_REGS		1143370	0					
ANR	1143443	Identifier	CHECK_EXTRA_REGS		1143370	0					
ANR	1143444	ArgumentList	dst		1143370	1					
ANR	1143445	Argument	dst		1143370	0					
ANR	1143446	Identifier	dst		1143370	0					
ANR	1143447	Argument	dstw		1143370	1					
ANR	1143448	Identifier	dstw		1143370	0					
ANR	1143449	Argument	( void ) 0		1143370	2					
ANR	1143450	CastExpression	( void ) 0		1143370	0					
ANR	1143451	CastTarget	void		1143370	0					
ANR	1143452	PrimaryExpression	0		1143370	1					
ANR	1143453	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1143370	9					
ANR	1143454	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2684:5:76695:76731	1143370	0	True				
ANR	1143455	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1143370	0					
ANR	1143456	Callee	SLJIT_UNLIKELY		1143370	0					
ANR	1143457	Identifier	SLJIT_UNLIKELY		1143370	0					
ANR	1143458	ArgumentList	compiler -> flags_saved		1143370	1					
ANR	1143459	Argument	compiler -> flags_saved		1143370	0					
ANR	1143460	PtrMemberAccess	compiler -> flags_saved		1143370	0					
ANR	1143461	Identifier	compiler		1143370	0					
ANR	1143462	Identifier	flags_saved		1143370	1					
ANR	1143463	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS ) )"	2685:2:76736:76796	1143370	1	True				
ANR	1143464	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS ) )"		1143370	0					
ANR	1143465	Callee	FAIL_IF		1143370	0					
ANR	1143466	Identifier	FAIL_IF		1143370	0					
ANR	1143467	ArgumentList	"emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS )"		1143370	1					
ANR	1143468	Argument	"emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS )"		1143370	0					
ANR	1143469	CallExpression	"emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS )"		1143370	0					
ANR	1143470	Callee	emit_restore_flags		1143370	0					
ANR	1143471	Identifier	emit_restore_flags		1143370	0					
ANR	1143472	ArgumentList	compiler		1143370	1					
ANR	1143473	Argument	compiler		1143370	0					
ANR	1143474	Identifier	compiler		1143370	0					
ANR	1143475	Argument	op & SLJIT_KEEP_FLAGS		1143370	1					
ANR	1143476	BitAndExpression	op & SLJIT_KEEP_FLAGS		1143370	0		&			
ANR	1143477	Identifier	op		1143370	0					
ANR	1143478	Identifier	SLJIT_KEEP_FLAGS		1143370	1					
ANR	1143479	ExpressionStatement	type &= 0xff	2687:1:76800:76812	1143370	10	True				
ANR	1143480	AssignmentExpression	type &= 0xff		1143370	0		&=			
ANR	1143481	Identifier	type		1143370	0					
ANR	1143482	PrimaryExpression	0xff		1143370	1					
ANR	1143483	ExpressionStatement	cond_set = get_jump_code ( type ) + 0x10	2689:1:76842:76879	1143370	11	True				
ANR	1143484	AssignmentExpression	cond_set = get_jump_code ( type ) + 0x10		1143370	0		=			
ANR	1143485	Identifier	cond_set		1143370	0					
ANR	1143486	AdditiveExpression	get_jump_code ( type ) + 0x10		1143370	1		+			
ANR	1143487	CallExpression	get_jump_code ( type )		1143370	0					
ANR	1143488	Callee	get_jump_code		1143370	0					
ANR	1143489	Identifier	get_jump_code		1143370	0					
ANR	1143490	ArgumentList	type		1143370	1					
ANR	1143491	Argument	type		1143370	0					
ANR	1143492	Identifier	type		1143370	0					
ANR	1143493	PrimaryExpression	0x10		1143370	1					
ANR	1143494	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_OR && ! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src )		1143370	12					
ANR	1143495	Condition	GET_OPCODE ( op ) == SLJIT_OR && ! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src	2692:5:76944:77025	1143370	0	True				
ANR	1143496	AndExpression	GET_OPCODE ( op ) == SLJIT_OR && ! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src		1143370	0		&&			
ANR	1143497	EqualityExpression	GET_OPCODE ( op ) == SLJIT_OR		1143370	0		==			
ANR	1143498	CallExpression	GET_OPCODE ( op )		1143370	0					
ANR	1143499	Callee	GET_OPCODE		1143370	0					
ANR	1143500	Identifier	GET_OPCODE		1143370	0					
ANR	1143501	ArgumentList	op		1143370	1					
ANR	1143502	Argument	op		1143370	0					
ANR	1143503	Identifier	op		1143370	0					
ANR	1143504	Identifier	SLJIT_OR		1143370	1					
ANR	1143505	AndExpression	! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src		1143370	1		&&			
ANR	1143506	UnaryOperationExpression	! GET_ALL_FLAGS ( op )		1143370	0					
ANR	1143507	UnaryOperator	!		1143370	0					
ANR	1143508	CallExpression	GET_ALL_FLAGS ( op )		1143370	1					
ANR	1143509	Callee	GET_ALL_FLAGS		1143370	0					
ANR	1143510	Identifier	GET_ALL_FLAGS		1143370	0					
ANR	1143511	ArgumentList	op		1143370	1					
ANR	1143512	Argument	op		1143370	0					
ANR	1143513	Identifier	op		1143370	0					
ANR	1143514	AndExpression	FAST_IS_REG ( dst ) && dst == src		1143370	1		&&			
ANR	1143515	CallExpression	FAST_IS_REG ( dst )		1143370	0					
ANR	1143516	Callee	FAST_IS_REG		1143370	0					
ANR	1143517	Identifier	FAST_IS_REG		1143370	0					
ANR	1143518	ArgumentList	dst		1143370	1					
ANR	1143519	Argument	dst		1143370	0					
ANR	1143520	Identifier	dst		1143370	0					
ANR	1143521	EqualityExpression	dst == src		1143370	1		==			
ANR	1143522	Identifier	dst		1143370	0					
ANR	1143523	Identifier	src		1143370	1					
ANR	1143524	CompoundStatement		29:89:815:815	1143370	1					
ANR	1143525	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 3 )"	2693:2:77032:77081	1143370	0	True				
ANR	1143526	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 3 )"		1143370	0		=			
ANR	1143527	Identifier	inst		1143370	0					
ANR	1143528	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 3 )"		1143370	1					
ANR	1143529	CastTarget	sljit_ub *		1143370	0					
ANR	1143530	CallExpression	"ensure_buf ( compiler , 1 + 4 + 3 )"		1143370	1					
ANR	1143531	Callee	ensure_buf		1143370	0					
ANR	1143532	Identifier	ensure_buf		1143370	0					
ANR	1143533	ArgumentList	compiler		1143370	1					
ANR	1143534	Argument	compiler		1143370	0					
ANR	1143535	Identifier	compiler		1143370	0					
ANR	1143536	Argument	1 + 4 + 3		1143370	1					
ANR	1143537	AdditiveExpression	1 + 4 + 3		1143370	0		+			
ANR	1143538	PrimaryExpression	1		1143370	0					
ANR	1143539	AdditiveExpression	4 + 3		1143370	1		+			
ANR	1143540	PrimaryExpression	4		1143370	0					
ANR	1143541	PrimaryExpression	3		1143370	1					
ANR	1143542	ExpressionStatement	FAIL_IF ( ! inst )	2694:2:77085:77099	1143370	1	True				
ANR	1143543	CallExpression	FAIL_IF ( ! inst )		1143370	0					
ANR	1143544	Callee	FAIL_IF		1143370	0					
ANR	1143545	Identifier	FAIL_IF		1143370	0					
ANR	1143546	ArgumentList	! inst		1143370	1					
ANR	1143547	Argument	! inst		1143370	0					
ANR	1143548	UnaryOperationExpression	! inst		1143370	0					
ANR	1143549	UnaryOperator	!		1143370	0					
ANR	1143550	Identifier	inst		1143370	1					
ANR	1143551	ExpressionStatement	INC_SIZE ( 4 + 3 )	2695:2:77103:77118	1143370	2	True				
ANR	1143552	CallExpression	INC_SIZE ( 4 + 3 )		1143370	0					
ANR	1143553	Callee	INC_SIZE		1143370	0					
ANR	1143554	Identifier	INC_SIZE		1143370	0					
ANR	1143555	ArgumentList	4 + 3		1143370	1					
ANR	1143556	Argument	4 + 3		1143370	0					
ANR	1143557	AdditiveExpression	4 + 3		1143370	0		+			
ANR	1143558	PrimaryExpression	4		1143370	0					
ANR	1143559	PrimaryExpression	3		1143370	1					
ANR	1143560	ExpressionStatement	* inst ++ = ( reg_map [ TMP_REG1 ] <= 7 ) ? REX : REX_B	2697:2:77168:77216	1143370	3	True				
ANR	1143561	AssignmentExpression	* inst ++ = ( reg_map [ TMP_REG1 ] <= 7 ) ? REX : REX_B		1143370	0		=			
ANR	1143562	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143563	UnaryOperator	*		1143370	0					
ANR	1143564	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143565	Identifier	inst		1143370	0					
ANR	1143566	IncDec	++		1143370	1					
ANR	1143567	ConditionalExpression	( reg_map [ TMP_REG1 ] <= 7 ) ? REX : REX_B		1143370	1					
ANR	1143568	Condition	reg_map [ TMP_REG1 ] <= 7		1143370	0					
ANR	1143569	RelationalExpression	reg_map [ TMP_REG1 ] <= 7		1143370	0		<=			
ANR	1143570	ArrayIndexing	reg_map [ TMP_REG1 ]		1143370	0					
ANR	1143571	Identifier	reg_map		1143370	0					
ANR	1143572	Identifier	TMP_REG1		1143370	1					
ANR	1143573	PrimaryExpression	7		1143370	1					
ANR	1143574	Identifier	REX		1143370	1					
ANR	1143575	Identifier	REX_B		1143370	2					
ANR	1143576	ExpressionStatement	* inst ++ = GROUP_0F	2698:2:77220:77238	1143370	4	True				
ANR	1143577	AssignmentExpression	* inst ++ = GROUP_0F		1143370	0		=			
ANR	1143578	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143579	UnaryOperator	*		1143370	0					
ANR	1143580	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143581	Identifier	inst		1143370	0					
ANR	1143582	IncDec	++		1143370	1					
ANR	1143583	Identifier	GROUP_0F		1143370	1					
ANR	1143584	ExpressionStatement	* inst ++ = cond_set	2699:2:77242:77260	1143370	5	True				
ANR	1143585	AssignmentExpression	* inst ++ = cond_set		1143370	0		=			
ANR	1143586	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143587	UnaryOperator	*		1143370	0					
ANR	1143588	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143589	Identifier	inst		1143370	0					
ANR	1143590	IncDec	++		1143370	1					
ANR	1143591	Identifier	cond_set		1143370	1					
ANR	1143592	ExpressionStatement	* inst ++ = MOD_REG | reg_lmap [ TMP_REG1 ]	2700:2:77264:77302	1143370	6	True				
ANR	1143593	AssignmentExpression	* inst ++ = MOD_REG | reg_lmap [ TMP_REG1 ]		1143370	0		=			
ANR	1143594	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143595	UnaryOperator	*		1143370	0					
ANR	1143596	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143597	Identifier	inst		1143370	0					
ANR	1143598	IncDec	++		1143370	1					
ANR	1143599	InclusiveOrExpression	MOD_REG | reg_lmap [ TMP_REG1 ]		1143370	1		|			
ANR	1143600	Identifier	MOD_REG		1143370	0					
ANR	1143601	ArrayIndexing	reg_lmap [ TMP_REG1 ]		1143370	1					
ANR	1143602	Identifier	reg_lmap		1143370	0					
ANR	1143603	Identifier	TMP_REG1		1143370	1					
ANR	1143604	ExpressionStatement	* inst ++ = REX | ( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )	2701:2:77306:77392	1143370	7	True				
ANR	1143605	AssignmentExpression	* inst ++ = REX | ( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )		1143370	0		=			
ANR	1143606	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143607	UnaryOperator	*		1143370	0					
ANR	1143608	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143609	Identifier	inst		1143370	0					
ANR	1143610	IncDec	++		1143370	1					
ANR	1143611	InclusiveOrExpression	REX | ( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )		1143370	1		|			
ANR	1143612	Identifier	REX		1143370	0					
ANR	1143613	InclusiveOrExpression	( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )		1143370	1		|			
ANR	1143614	ConditionalExpression	reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R		1143370	0					
ANR	1143615	Condition	reg_map [ TMP_REG1 ] <= 7		1143370	0					
ANR	1143616	RelationalExpression	reg_map [ TMP_REG1 ] <= 7		1143370	0		<=			
ANR	1143617	ArrayIndexing	reg_map [ TMP_REG1 ]		1143370	0					
ANR	1143618	Identifier	reg_map		1143370	0					
ANR	1143619	Identifier	TMP_REG1		1143370	1					
ANR	1143620	PrimaryExpression	7		1143370	1					
ANR	1143621	PrimaryExpression	0		1143370	1					
ANR	1143622	Identifier	REX_R		1143370	2					
ANR	1143623	ConditionalExpression	reg_map [ dst ] <= 7 ? 0 : REX_B		1143370	1					
ANR	1143624	Condition	reg_map [ dst ] <= 7		1143370	0					
ANR	1143625	RelationalExpression	reg_map [ dst ] <= 7		1143370	0		<=			
ANR	1143626	ArrayIndexing	reg_map [ dst ]		1143370	0					
ANR	1143627	Identifier	reg_map		1143370	0					
ANR	1143628	Identifier	dst		1143370	1					
ANR	1143629	PrimaryExpression	7		1143370	1					
ANR	1143630	PrimaryExpression	0		1143370	1					
ANR	1143631	Identifier	REX_B		1143370	2					
ANR	1143632	ExpressionStatement	* inst ++ = OR_rm8_r8	2702:2:77396:77415	1143370	8	True				
ANR	1143633	AssignmentExpression	* inst ++ = OR_rm8_r8		1143370	0		=			
ANR	1143634	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143635	UnaryOperator	*		1143370	0					
ANR	1143636	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143637	Identifier	inst		1143370	0					
ANR	1143638	IncDec	++		1143370	1					
ANR	1143639	Identifier	OR_rm8_r8		1143370	1					
ANR	1143640	ExpressionStatement	* inst ++ = MOD_REG | ( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]	2703:2:77419:77480	1143370	9	True				
ANR	1143641	AssignmentExpression	* inst ++ = MOD_REG | ( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]		1143370	0		=			
ANR	1143642	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143643	UnaryOperator	*		1143370	0					
ANR	1143644	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143645	Identifier	inst		1143370	0					
ANR	1143646	IncDec	++		1143370	1					
ANR	1143647	InclusiveOrExpression	MOD_REG | ( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]		1143370	1		|			
ANR	1143648	Identifier	MOD_REG		1143370	0					
ANR	1143649	InclusiveOrExpression	( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]		1143370	1		|			
ANR	1143650	ShiftExpression	reg_lmap [ TMP_REG1 ] << 3		1143370	0		<<			
ANR	1143651	ArrayIndexing	reg_lmap [ TMP_REG1 ]		1143370	0					
ANR	1143652	Identifier	reg_lmap		1143370	0					
ANR	1143653	Identifier	TMP_REG1		1143370	1					
ANR	1143654	PrimaryExpression	3		1143370	1					
ANR	1143655	ArrayIndexing	reg_lmap [ dst ]		1143370	1					
ANR	1143656	Identifier	reg_lmap		1143370	0					
ANR	1143657	Identifier	dst		1143370	1					
ANR	1143658	ReturnStatement	return SLJIT_SUCCESS ;	2704:2:77484:77504	1143370	10	True				
ANR	1143659	Identifier	SLJIT_SUCCESS		1143370	0					
ANR	1143660	ExpressionStatement	reg = ( op == SLJIT_MOV && FAST_IS_REG ( dst ) ) ? dst : TMP_REG1	2707:1:77511:77571	1143370	13	True				
ANR	1143661	AssignmentExpression	reg = ( op == SLJIT_MOV && FAST_IS_REG ( dst ) ) ? dst : TMP_REG1		1143370	0		=			
ANR	1143662	Identifier	reg		1143370	0					
ANR	1143663	ConditionalExpression	( op == SLJIT_MOV && FAST_IS_REG ( dst ) ) ? dst : TMP_REG1		1143370	1					
ANR	1143664	Condition	op == SLJIT_MOV && FAST_IS_REG ( dst )		1143370	0					
ANR	1143665	AndExpression	op == SLJIT_MOV && FAST_IS_REG ( dst )		1143370	0		&&			
ANR	1143666	EqualityExpression	op == SLJIT_MOV		1143370	0		==			
ANR	1143667	Identifier	op		1143370	0					
ANR	1143668	Identifier	SLJIT_MOV		1143370	1					
ANR	1143669	CallExpression	FAST_IS_REG ( dst )		1143370	1					
ANR	1143670	Callee	FAST_IS_REG		1143370	0					
ANR	1143671	Identifier	FAST_IS_REG		1143370	0					
ANR	1143672	ArgumentList	dst		1143370	1					
ANR	1143673	Argument	dst		1143370	0					
ANR	1143674	Identifier	dst		1143370	0					
ANR	1143675	Identifier	dst		1143370	1					
ANR	1143676	Identifier	TMP_REG1		1143370	2					
ANR	1143677	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 4 )"	2709:1:77575:77624	1143370	14	True				
ANR	1143678	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 4 )"		1143370	0		=			
ANR	1143679	Identifier	inst		1143370	0					
ANR	1143680	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 4 )"		1143370	1					
ANR	1143681	CastTarget	sljit_ub *		1143370	0					
ANR	1143682	CallExpression	"ensure_buf ( compiler , 1 + 4 + 4 )"		1143370	1					
ANR	1143683	Callee	ensure_buf		1143370	0					
ANR	1143684	Identifier	ensure_buf		1143370	0					
ANR	1143685	ArgumentList	compiler		1143370	1					
ANR	1143686	Argument	compiler		1143370	0					
ANR	1143687	Identifier	compiler		1143370	0					
ANR	1143688	Argument	1 + 4 + 4		1143370	1					
ANR	1143689	AdditiveExpression	1 + 4 + 4		1143370	0		+			
ANR	1143690	PrimaryExpression	1		1143370	0					
ANR	1143691	AdditiveExpression	4 + 4		1143370	1		+			
ANR	1143692	PrimaryExpression	4		1143370	0					
ANR	1143693	PrimaryExpression	4		1143370	1					
ANR	1143694	ExpressionStatement	FAIL_IF ( ! inst )	2710:1:77627:77641	1143370	15	True				
ANR	1143695	CallExpression	FAIL_IF ( ! inst )		1143370	0					
ANR	1143696	Callee	FAIL_IF		1143370	0					
ANR	1143697	Identifier	FAIL_IF		1143370	0					
ANR	1143698	ArgumentList	! inst		1143370	1					
ANR	1143699	Argument	! inst		1143370	0					
ANR	1143700	UnaryOperationExpression	! inst		1143370	0					
ANR	1143701	UnaryOperator	!		1143370	0					
ANR	1143702	Identifier	inst		1143370	1					
ANR	1143703	ExpressionStatement	INC_SIZE ( 4 + 4 )	2711:1:77644:77659	1143370	16	True				
ANR	1143704	CallExpression	INC_SIZE ( 4 + 4 )		1143370	0					
ANR	1143705	Callee	INC_SIZE		1143370	0					
ANR	1143706	Identifier	INC_SIZE		1143370	0					
ANR	1143707	ArgumentList	4 + 4		1143370	1					
ANR	1143708	Argument	4 + 4		1143370	0					
ANR	1143709	AdditiveExpression	4 + 4		1143370	0		+			
ANR	1143710	PrimaryExpression	4		1143370	0					
ANR	1143711	PrimaryExpression	4		1143370	1					
ANR	1143712	ExpressionStatement	* inst ++ = ( reg_map [ reg ] <= 7 ) ? REX : REX_B	2713:1:77707:77750	1143370	17	True				
ANR	1143713	AssignmentExpression	* inst ++ = ( reg_map [ reg ] <= 7 ) ? REX : REX_B		1143370	0		=			
ANR	1143714	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143715	UnaryOperator	*		1143370	0					
ANR	1143716	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143717	Identifier	inst		1143370	0					
ANR	1143718	IncDec	++		1143370	1					
ANR	1143719	ConditionalExpression	( reg_map [ reg ] <= 7 ) ? REX : REX_B		1143370	1					
ANR	1143720	Condition	reg_map [ reg ] <= 7		1143370	0					
ANR	1143721	RelationalExpression	reg_map [ reg ] <= 7		1143370	0		<=			
ANR	1143722	ArrayIndexing	reg_map [ reg ]		1143370	0					
ANR	1143723	Identifier	reg_map		1143370	0					
ANR	1143724	Identifier	reg		1143370	1					
ANR	1143725	PrimaryExpression	7		1143370	1					
ANR	1143726	Identifier	REX		1143370	1					
ANR	1143727	Identifier	REX_B		1143370	2					
ANR	1143728	ExpressionStatement	* inst ++ = GROUP_0F	2714:1:77753:77771	1143370	18	True				
ANR	1143729	AssignmentExpression	* inst ++ = GROUP_0F		1143370	0		=			
ANR	1143730	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143731	UnaryOperator	*		1143370	0					
ANR	1143732	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143733	Identifier	inst		1143370	0					
ANR	1143734	IncDec	++		1143370	1					
ANR	1143735	Identifier	GROUP_0F		1143370	1					
ANR	1143736	ExpressionStatement	* inst ++ = cond_set	2715:1:77774:77792	1143370	19	True				
ANR	1143737	AssignmentExpression	* inst ++ = cond_set		1143370	0		=			
ANR	1143738	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143739	UnaryOperator	*		1143370	0					
ANR	1143740	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143741	Identifier	inst		1143370	0					
ANR	1143742	IncDec	++		1143370	1					
ANR	1143743	Identifier	cond_set		1143370	1					
ANR	1143744	ExpressionStatement	* inst ++ = MOD_REG | reg_lmap [ reg ]	2716:1:77795:77828	1143370	20	True				
ANR	1143745	AssignmentExpression	* inst ++ = MOD_REG | reg_lmap [ reg ]		1143370	0		=			
ANR	1143746	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143747	UnaryOperator	*		1143370	0					
ANR	1143748	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143749	Identifier	inst		1143370	0					
ANR	1143750	IncDec	++		1143370	1					
ANR	1143751	InclusiveOrExpression	MOD_REG | reg_lmap [ reg ]		1143370	1		|			
ANR	1143752	Identifier	MOD_REG		1143370	0					
ANR	1143753	ArrayIndexing	reg_lmap [ reg ]		1143370	1					
ANR	1143754	Identifier	reg_lmap		1143370	0					
ANR	1143755	Identifier	reg		1143370	1					
ANR	1143756	ExpressionStatement	* inst ++ = REX_W | ( reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R ) )	2717:1:77831:77890	1143370	21	True				
ANR	1143757	AssignmentExpression	* inst ++ = REX_W | ( reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R ) )		1143370	0		=			
ANR	1143758	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143759	UnaryOperator	*		1143370	0					
ANR	1143760	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143761	Identifier	inst		1143370	0					
ANR	1143762	IncDec	++		1143370	1					
ANR	1143763	InclusiveOrExpression	REX_W | ( reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R ) )		1143370	1		|			
ANR	1143764	Identifier	REX_W		1143370	0					
ANR	1143765	ConditionalExpression	reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R )		1143370	1					
ANR	1143766	Condition	reg_map [ reg ] <= 7		1143370	0					
ANR	1143767	RelationalExpression	reg_map [ reg ] <= 7		1143370	0		<=			
ANR	1143768	ArrayIndexing	reg_map [ reg ]		1143370	0					
ANR	1143769	Identifier	reg_map		1143370	0					
ANR	1143770	Identifier	reg		1143370	1					
ANR	1143771	PrimaryExpression	7		1143370	1					
ANR	1143772	PrimaryExpression	0		1143370	1					
ANR	1143773	InclusiveOrExpression	REX_B | REX_R		1143370	2		|			
ANR	1143774	Identifier	REX_B		1143370	0					
ANR	1143775	Identifier	REX_R		1143370	1					
ANR	1143776	ExpressionStatement	* inst ++ = GROUP_0F	2718:1:77893:77911	1143370	22	True				
ANR	1143777	AssignmentExpression	* inst ++ = GROUP_0F		1143370	0		=			
ANR	1143778	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143779	UnaryOperator	*		1143370	0					
ANR	1143780	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143781	Identifier	inst		1143370	0					
ANR	1143782	IncDec	++		1143370	1					
ANR	1143783	Identifier	GROUP_0F		1143370	1					
ANR	1143784	ExpressionStatement	* inst ++ = MOVZX_r_rm8	2719:1:77914:77935	1143370	23	True				
ANR	1143785	AssignmentExpression	* inst ++ = MOVZX_r_rm8		1143370	0		=			
ANR	1143786	UnaryOperationExpression	* inst ++		1143370	0					
ANR	1143787	UnaryOperator	*		1143370	0					
ANR	1143788	PostIncDecOperationExpression	inst ++		1143370	1					
ANR	1143789	Identifier	inst		1143370	0					
ANR	1143790	IncDec	++		1143370	1					
ANR	1143791	Identifier	MOVZX_r_rm8		1143370	1					
ANR	1143792	ExpressionStatement	* inst = MOD_REG | ( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]	2720:1:77938:77992	1143370	24	True				
ANR	1143793	AssignmentExpression	* inst = MOD_REG | ( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]		1143370	0		=			
ANR	1143794	UnaryOperationExpression	* inst		1143370	0					
ANR	1143795	UnaryOperator	*		1143370	0					
ANR	1143796	Identifier	inst		1143370	1					
ANR	1143797	InclusiveOrExpression	MOD_REG | ( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]		1143370	1		|			
ANR	1143798	Identifier	MOD_REG		1143370	0					
ANR	1143799	InclusiveOrExpression	( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]		1143370	1		|			
ANR	1143800	ShiftExpression	reg_lmap [ reg ] << 3		1143370	0		<<			
ANR	1143801	ArrayIndexing	reg_lmap [ reg ]		1143370	0					
ANR	1143802	Identifier	reg_lmap		1143370	0					
ANR	1143803	Identifier	reg		1143370	1					
ANR	1143804	PrimaryExpression	3		1143370	1					
ANR	1143805	ArrayIndexing	reg_lmap [ reg ]		1143370	1					
ANR	1143806	Identifier	reg_lmap		1143370	0					
ANR	1143807	Identifier	reg		1143370	1					
ANR	1143808	IfStatement	if ( reg != TMP_REG1 )		1143370	25					
ANR	1143809	Condition	reg != TMP_REG1	2722:5:78000:78014	1143370	0	True				
ANR	1143810	EqualityExpression	reg != TMP_REG1		1143370	0		!=			
ANR	1143811	Identifier	reg		1143370	0					
ANR	1143812	Identifier	TMP_REG1		1143370	1					
ANR	1143813	ReturnStatement	return SLJIT_SUCCESS ;	2723:2:78019:78039	1143370	1	True				
ANR	1143814	Identifier	SLJIT_SUCCESS		1143370	0					
ANR	1143815	IfStatement	if ( GET_OPCODE ( op ) < SLJIT_ADD )		1143370	26					
ANR	1143816	Condition	GET_OPCODE ( op ) < SLJIT_ADD	2725:5:78047:78072	1143370	0	True				
ANR	1143817	RelationalExpression	GET_OPCODE ( op ) < SLJIT_ADD		1143370	0		<			
ANR	1143818	CallExpression	GET_OPCODE ( op )		1143370	0					
ANR	1143819	Callee	GET_OPCODE		1143370	0					
ANR	1143820	Identifier	GET_OPCODE		1143370	0					
ANR	1143821	ArgumentList	op		1143370	1					
ANR	1143822	Argument	op		1143370	0					
ANR	1143823	Identifier	op		1143370	0					
ANR	1143824	Identifier	SLJIT_ADD		1143370	1					
ANR	1143825	CompoundStatement		62:33:1862:1862	1143370	1					
ANR	1143826	ExpressionStatement	compiler -> mode32 = GET_OPCODE ( op ) != SLJIT_MOV	2726:2:78079:78125	1143370	0	True				
ANR	1143827	AssignmentExpression	compiler -> mode32 = GET_OPCODE ( op ) != SLJIT_MOV		1143370	0		=			
ANR	1143828	PtrMemberAccess	compiler -> mode32		1143370	0					
ANR	1143829	Identifier	compiler		1143370	0					
ANR	1143830	Identifier	mode32		1143370	1					
ANR	1143831	EqualityExpression	GET_OPCODE ( op ) != SLJIT_MOV		1143370	1		!=			
ANR	1143832	CallExpression	GET_OPCODE ( op )		1143370	0					
ANR	1143833	Callee	GET_OPCODE		1143370	0					
ANR	1143834	Identifier	GET_OPCODE		1143370	0					
ANR	1143835	ArgumentList	op		1143370	1					
ANR	1143836	Argument	op		1143370	0					
ANR	1143837	Identifier	op		1143370	0					
ANR	1143838	Identifier	SLJIT_MOV		1143370	1					
ANR	1143839	ReturnStatement	"return emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) ;"	2727:2:78129:78178	1143370	1	True				
ANR	1143840	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1143370	0					
ANR	1143841	Callee	emit_mov		1143370	0					
ANR	1143842	Identifier	emit_mov		1143370	0					
ANR	1143843	ArgumentList	compiler		1143370	1					
ANR	1143844	Argument	compiler		1143370	0					
ANR	1143845	Identifier	compiler		1143370	0					
ANR	1143846	Argument	dst		1143370	1					
ANR	1143847	Identifier	dst		1143370	0					
ANR	1143848	Argument	dstw		1143370	2					
ANR	1143849	Identifier	dstw		1143370	0					
ANR	1143850	Argument	TMP_REG1		1143370	3					
ANR	1143851	Identifier	TMP_REG1		1143370	0					
ANR	1143852	Argument	0		1143370	4					
ANR	1143853	PrimaryExpression	0		1143370	0					
ANR	1143854	Statement	||	2730:2:78232:78233	1143370	27	True				
ANR	1143855	Statement	(	2730:5:78235:78235	1143370	28	True				
ANR	1143856	Statement	defined	2730:6:78236:78242	1143370	29	True				
ANR	1143857	Statement	SLJIT_ARGUMENT_CHECKS	2730:14:78244:78264	1143370	30	True				
ANR	1143858	Statement	&&	2730:36:78266:78267	1143370	31	True				
ANR	1143859	Statement	SLJIT_ARGUMENT_CHECKS	2730:39:78269:78289	1143370	32	True				
ANR	1143860	Statement	)	2730:60:78290:78290	1143370	33	True				
ANR	1143861	ExpressionStatement	compiler -> skip_checks = 1	2731:1:78293:78318	1143370	34	True				
ANR	1143862	AssignmentExpression	compiler -> skip_checks = 1		1143370	0		=			
ANR	1143863	PtrMemberAccess	compiler -> skip_checks		1143370	0					
ANR	1143864	Identifier	compiler		1143370	0					
ANR	1143865	Identifier	skip_checks		1143370	1					
ANR	1143866	PrimaryExpression	1		1143370	1					
ANR	1143867	ReturnStatement	"return sljit_emit_op2 ( compiler , op , dst , dstw , dst , dstw , TMP_REG1 , 0 ) ;"	2733:1:78328:78398	1143370	35	True				
ANR	1143868	CallExpression	"sljit_emit_op2 ( compiler , op , dst , dstw , dst , dstw , TMP_REG1 , 0 )"		1143370	0					
ANR	1143869	Callee	sljit_emit_op2		1143370	0					
ANR	1143870	Identifier	sljit_emit_op2		1143370	0					
ANR	1143871	ArgumentList	compiler		1143370	1					
ANR	1143872	Argument	compiler		1143370	0					
ANR	1143873	Identifier	compiler		1143370	0					
ANR	1143874	Argument	op		1143370	1					
ANR	1143875	Identifier	op		1143370	0					
ANR	1143876	Argument	dst		1143370	2					
ANR	1143877	Identifier	dst		1143370	0					
ANR	1143878	Argument	dstw		1143370	3					
ANR	1143879	Identifier	dstw		1143370	0					
ANR	1143880	Argument	dst		1143370	4					
ANR	1143881	Identifier	dst		1143370	0					
ANR	1143882	Argument	dstw		1143370	5					
ANR	1143883	Identifier	dstw		1143370	0					
ANR	1143884	Argument	TMP_REG1		1143370	6					
ANR	1143885	Identifier	TMP_REG1		1143370	0					
ANR	1143886	Argument	0		1143370	7					
ANR	1143887	PrimaryExpression	0		1143370	0					
ANR	1143888	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1143370	1					
ANR	1143889	Identifier	sljit_emit_op_flags		1143370	2					
ANR	1143890	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1143370	3					
ANR	1143891	Parameter	struct sljit_compiler * compiler	2660:54:76090:76120	1143370	0	True				
ANR	1143892	ParameterType	struct sljit_compiler *		1143370	0					
ANR	1143893	Identifier	compiler		1143370	1					
ANR	1143894	Parameter	sljit_si op	2660:87:76123:76133	1143370	1	True				
ANR	1143895	ParameterType	sljit_si		1143370	0					
ANR	1143896	Identifier	op		1143370	1					
ANR	1143897	Parameter	sljit_si dst	2661:1:76137:76148	1143370	2	True				
ANR	1143898	ParameterType	sljit_si		1143370	0					
ANR	1143899	Identifier	dst		1143370	1					
ANR	1143900	Parameter	sljit_sw dstw	2661:15:76151:76163	1143370	3	True				
ANR	1143901	ParameterType	sljit_sw		1143370	0					
ANR	1143902	Identifier	dstw		1143370	1					
ANR	1143903	Parameter	sljit_si src	2662:1:76167:76178	1143370	4	True				
ANR	1143904	ParameterType	sljit_si		1143370	0					
ANR	1143905	Identifier	src		1143370	1					
ANR	1143906	Parameter	sljit_sw srcw	2662:15:76181:76193	1143370	5	True				
ANR	1143907	ParameterType	sljit_sw		1143370	0					
ANR	1143908	Identifier	srcw		1143370	1					
ANR	1143909	Parameter	sljit_si type	2663:1:76197:76209	1143370	6	True				
ANR	1143910	ParameterType	sljit_si		1143370	0					
ANR	1143911	Identifier	type		1143370	1					
ANR	1143912	CFGEntryNode	ENTRY		1143370		True				
ANR	1143913	CFGExitNode	EXIT		1143370		True				
ANR	1143914	Symbol	TMP_REG1		1143370						
ANR	1143915	Symbol	sljit_emit_op2		1143370						
ANR	1143916	Symbol	dst		1143370						
ANR	1143917	Symbol	REX		1143370						
ANR	1143918	Symbol	SLJIT_MOV		1143370						
ANR	1143919	Symbol	compiler -> flags_saved		1143370						
ANR	1143920	Symbol	SLJIT_OR		1143370						
ANR	1143921	Symbol	* inst ++		1143370						
ANR	1143922	Symbol	reg_map		1143370						
ANR	1143923	Symbol	SLJIT_ADD		1143370						
ANR	1143924	Symbol	* compiler		1143370						
ANR	1143925	Symbol	get_jump_code		1143370						
ANR	1143926	Symbol	type		1143370						
ANR	1143927	Symbol	MOVZX_r_rm8		1143370						
ANR	1143928	Symbol	cond_set		1143370						
ANR	1143929	Symbol	GET_OPCODE		1143370						
ANR	1143930	Symbol	* dst		1143370						
ANR	1143931	Symbol	GET_ALL_FLAGS		1143370						
ANR	1143932	Symbol	SLJIT_KEEP_FLAGS		1143370						
ANR	1143933	Symbol	reg		1143370						
ANR	1143934	Symbol	OR_rm8_r8		1143370						
ANR	1143935	Symbol	* reg_lmap		1143370						
ANR	1143936	Symbol	* TMP_REG1		1143370						
ANR	1143937	Symbol	compiler		1143370						
ANR	1143938	Symbol	check_sljit_emit_op_flags		1143370						
ANR	1143939	Symbol	op		1143370						
ANR	1143940	Symbol	GROUP_0F		1143370						
ANR	1143941	Symbol	FAST_IS_REG		1143370						
ANR	1143942	Symbol	* inst		1143370						
ANR	1143943	Symbol	src		1143370						
ANR	1143944	Symbol	srcw		1143370						
ANR	1143945	Symbol	SLJIT_SUCCESS		1143370						
ANR	1143946	Symbol	* reg_map		1143370						
ANR	1143947	Symbol	REX_B		1143370						
ANR	1143948	Symbol	MOD_REG		1143370						
ANR	1143949	Symbol	reg_lmap		1143370						
ANR	1143950	Symbol	emit_mov		1143370						
ANR	1143951	Symbol	SLJIT_UNUSED		1143370						
ANR	1143952	Symbol	inst		1143370						
ANR	1143953	Symbol	ensure_buf		1143370						
ANR	1143954	Symbol	compiler -> skip_checks		1143370						
ANR	1143955	Symbol	REX_W		1143370						
ANR	1143956	Symbol	compiler -> mode32		1143370						
ANR	1143957	Symbol	emit_restore_flags		1143370						
ANR	1143958	Symbol	REX_R		1143370						
ANR	1143959	Symbol	dstw		1143370						
ANR	1143960	Symbol	* reg		1143370						
ANR	1143961	Symbol	SLJIT_UNLIKELY		1143370						
ANR	1143962	Function	sljit_get_local_base	2848:0:81829:82875							
ANR	1143963	FunctionDef	"sljit_get_local_base (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset)"		1143962	0					
ANR	1143964	CompoundStatement		2849:0:81963:82875	1143962	0					
ANR	1143965	ExpressionStatement	CHECK_ERROR ( )	2850:1:81966:81979	1143962	0	True				
ANR	1143966	CallExpression	CHECK_ERROR ( )		1143962	0					
ANR	1143967	Callee	CHECK_ERROR		1143962	0					
ANR	1143968	Identifier	CHECK_ERROR		1143962	0					
ANR	1143969	ArgumentList			1143962	1					
ANR	1143970	ExpressionStatement	"CHECK ( check_sljit_get_local_base ( compiler , dst , dstw , offset ) )"	2851:1:81982:82044	1143962	1	True				
ANR	1143971	CallExpression	"CHECK ( check_sljit_get_local_base ( compiler , dst , dstw , offset ) )"		1143962	0					
ANR	1143972	Callee	CHECK		1143962	0					
ANR	1143973	Identifier	CHECK		1143962	0					
ANR	1143974	ArgumentList	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1143962	1					
ANR	1143975	Argument	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1143962	0					
ANR	1143976	CallExpression	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1143962	0					
ANR	1143977	Callee	check_sljit_get_local_base		1143962	0					
ANR	1143978	Identifier	check_sljit_get_local_base		1143962	0					
ANR	1143979	ArgumentList	compiler		1143962	1					
ANR	1143980	Argument	compiler		1143962	0					
ANR	1143981	Identifier	compiler		1143962	0					
ANR	1143982	Argument	dst		1143962	1					
ANR	1143983	Identifier	dst		1143962	0					
ANR	1143984	Argument	dstw		1143962	2					
ANR	1143985	Identifier	dstw		1143962	0					
ANR	1143986	Argument	offset		1143962	3					
ANR	1143987	Identifier	offset		1143962	0					
ANR	1143988	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2852:1:82047:82077	1143962	2	True				
ANR	1143989	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1143962	0					
ANR	1143990	Callee	ADJUST_LOCAL_OFFSET		1143962	0					
ANR	1143991	Identifier	ADJUST_LOCAL_OFFSET		1143962	0					
ANR	1143992	ArgumentList	dst		1143962	1					
ANR	1143993	Argument	dst		1143962	0					
ANR	1143994	Identifier	dst		1143962	0					
ANR	1143995	Argument	dstw		1143962	1					
ANR	1143996	Identifier	dstw		1143962	0					
ANR	1143997	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2854:1:82081:82117	1143962	3	True				
ANR	1143998	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1143962	0					
ANR	1143999	Callee	CHECK_EXTRA_REGS		1143962	0					
ANR	1144000	Identifier	CHECK_EXTRA_REGS		1143962	0					
ANR	1144001	ArgumentList	dst		1143962	1					
ANR	1144002	Argument	dst		1143962	0					
ANR	1144003	Identifier	dst		1143962	0					
ANR	1144004	Argument	dstw		1143962	1					
ANR	1144005	Identifier	dstw		1143962	0					
ANR	1144006	Argument	( void ) 0		1143962	2					
ANR	1144007	CastExpression	( void ) 0		1143962	0					
ANR	1144008	CastTarget	void		1143962	0					
ANR	1144009	PrimaryExpression	0		1143962	1					
ANR	1144010	ExpressionStatement	compiler -> mode32 = 0	2857:1:82178:82198	1143962	4	True				
ANR	1144011	AssignmentExpression	compiler -> mode32 = 0		1143962	0		=			
ANR	1144012	PtrMemberAccess	compiler -> mode32		1143962	0					
ANR	1144013	Identifier	compiler		1143962	0					
ANR	1144014	Identifier	mode32		1143962	1					
ANR	1144015	PrimaryExpression	0		1143962	1					
ANR	1144016	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( SLJIT_MEM1 ( SLJIT_SP ) , offset )"	2860:1:82209:82258	1143962	5	True				
ANR	1144017	CallExpression	"ADJUST_LOCAL_OFFSET ( SLJIT_MEM1 ( SLJIT_SP ) , offset )"		1143962	0					
ANR	1144018	Callee	ADJUST_LOCAL_OFFSET		1143962	0					
ANR	1144019	Identifier	ADJUST_LOCAL_OFFSET		1143962	0					
ANR	1144020	ArgumentList	SLJIT_MEM1 ( SLJIT_SP )		1143962	1					
ANR	1144021	Argument	SLJIT_MEM1 ( SLJIT_SP )		1143962	0					
ANR	1144022	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1143962	0					
ANR	1144023	Callee	SLJIT_MEM1		1143962	0					
ANR	1144024	Identifier	SLJIT_MEM1		1143962	0					
ANR	1144025	ArgumentList	SLJIT_SP		1143962	1					
ANR	1144026	Argument	SLJIT_SP		1143962	0					
ANR	1144027	Identifier	SLJIT_SP		1143962	0					
ANR	1144028	Argument	offset		1143962	1					
ANR	1144029	Identifier	offset		1143962	0					
ANR	1144030	IfStatement	if ( NOT_HALFWORD ( offset ) )		1143962	6					
ANR	1144031	Condition	NOT_HALFWORD ( offset )	2863:5:82323:82342	1143962	0	True				
ANR	1144032	CallExpression	NOT_HALFWORD ( offset )		1143962	0					
ANR	1144033	Callee	NOT_HALFWORD		1143962	0					
ANR	1144034	Identifier	NOT_HALFWORD		1143962	0					
ANR	1144035	ArgumentList	offset		1143962	1					
ANR	1144036	Argument	offset		1143962	0					
ANR	1144037	Identifier	offset		1143962	0					
ANR	1144038	CompoundStatement		15:27:381:381	1143962	1					
ANR	1144039	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG1 , offset ) )"	2864:2:82349:82401	1143962	0	True				
ANR	1144040	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG1 , offset ) )"		1143962	0					
ANR	1144041	Callee	FAIL_IF		1143962	0					
ANR	1144042	Identifier	FAIL_IF		1143962	0					
ANR	1144043	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG1 , offset )"		1143962	1					
ANR	1144044	Argument	"emit_load_imm64 ( compiler , TMP_REG1 , offset )"		1143962	0					
ANR	1144045	CallExpression	"emit_load_imm64 ( compiler , TMP_REG1 , offset )"		1143962	0					
ANR	1144046	Callee	emit_load_imm64		1143962	0					
ANR	1144047	Identifier	emit_load_imm64		1143962	0					
ANR	1144048	ArgumentList	compiler		1143962	1					
ANR	1144049	Argument	compiler		1143962	0					
ANR	1144050	Identifier	compiler		1143962	0					
ANR	1144051	Argument	TMP_REG1		1143962	1					
ANR	1144052	Identifier	TMP_REG1		1143962	0					
ANR	1144053	Argument	offset		1143962	2					
ANR	1144054	Identifier	offset		1143962	0					
ANR	1144055	ExpressionStatement	"SLJIT_ASSERT ( emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED )"	2866:2:82446:82565	1143962	1	True				
ANR	1144056	CallExpression	"SLJIT_ASSERT ( emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED )"		1143962	0					
ANR	1144057	Callee	SLJIT_ASSERT		1143962	0					
ANR	1144058	Identifier	SLJIT_ASSERT		1143962	0					
ANR	1144059	ArgumentList	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED"		1143962	1					
ANR	1144060	Argument	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED"		1143962	0					
ANR	1144061	EqualityExpression	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED"		1143962	0		!=			
ANR	1144062	CallExpression	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 )"		1143962	0					
ANR	1144063	Callee	emit_lea_binary		1143962	0					
ANR	1144064	Identifier	emit_lea_binary		1143962	0					
ANR	1144065	ArgumentList	compiler		1143962	1					
ANR	1144066	Argument	compiler		1143962	0					
ANR	1144067	Identifier	compiler		1143962	0					
ANR	1144068	Argument	SLJIT_KEEP_FLAGS		1143962	1					
ANR	1144069	Identifier	SLJIT_KEEP_FLAGS		1143962	0					
ANR	1144070	Argument	dst		1143962	2					
ANR	1144071	Identifier	dst		1143962	0					
ANR	1144072	Argument	dstw		1143962	3					
ANR	1144073	Identifier	dstw		1143962	0					
ANR	1144074	Argument	SLJIT_SP		1143962	4					
ANR	1144075	Identifier	SLJIT_SP		1143962	0					
ANR	1144076	Argument	0		1143962	5					
ANR	1144077	PrimaryExpression	0		1143962	0					
ANR	1144078	Argument	TMP_REG1		1143962	6					
ANR	1144079	Identifier	TMP_REG1		1143962	0					
ANR	1144080	Argument	0		1143962	7					
ANR	1144081	PrimaryExpression	0		1143962	0					
ANR	1144082	Identifier	SLJIT_ERR_UNSUPPORTED		1143962	1					
ANR	1144083	ReturnStatement	return compiler -> error ;	2867:2:82569:82591	1143962	2	True				
ANR	1144084	PtrMemberAccess	compiler -> error		1143962	0					
ANR	1144085	Identifier	compiler		1143962	0					
ANR	1144086	Identifier	error		1143962	1					
ANR	1144087	IfStatement	if ( offset != 0 )		1143962	7					
ANR	1144088	Condition	offset != 0	2874:5:82713:82723	1143962	0	True				
ANR	1144089	EqualityExpression	offset != 0		1143962	0		!=			
ANR	1144090	Identifier	offset		1143962	0					
ANR	1144091	PrimaryExpression	0		1143962	1					
ANR	1144092	ReturnStatement	"return emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , SLJIT_IMM , offset ) ;"	2875:2:82728:82821	1143962	1	True				
ANR	1144093	CallExpression	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , SLJIT_IMM , offset )"		1143962	0					
ANR	1144094	Callee	emit_lea_binary		1143962	0					
ANR	1144095	Identifier	emit_lea_binary		1143962	0					
ANR	1144096	ArgumentList	compiler		1143962	1					
ANR	1144097	Argument	compiler		1143962	0					
ANR	1144098	Identifier	compiler		1143962	0					
ANR	1144099	Argument	SLJIT_KEEP_FLAGS		1143962	1					
ANR	1144100	Identifier	SLJIT_KEEP_FLAGS		1143962	0					
ANR	1144101	Argument	dst		1143962	2					
ANR	1144102	Identifier	dst		1143962	0					
ANR	1144103	Argument	dstw		1143962	3					
ANR	1144104	Identifier	dstw		1143962	0					
ANR	1144105	Argument	SLJIT_SP		1143962	4					
ANR	1144106	Identifier	SLJIT_SP		1143962	0					
ANR	1144107	Argument	0		1143962	5					
ANR	1144108	PrimaryExpression	0		1143962	0					
ANR	1144109	Argument	SLJIT_IMM		1143962	6					
ANR	1144110	Identifier	SLJIT_IMM		1143962	0					
ANR	1144111	Argument	offset		1143962	7					
ANR	1144112	Identifier	offset		1143962	0					
ANR	1144113	ReturnStatement	"return emit_mov ( compiler , dst , dstw , SLJIT_SP , 0 ) ;"	2876:1:82824:82873	1143962	8	True				
ANR	1144114	CallExpression	"emit_mov ( compiler , dst , dstw , SLJIT_SP , 0 )"		1143962	0					
ANR	1144115	Callee	emit_mov		1143962	0					
ANR	1144116	Identifier	emit_mov		1143962	0					
ANR	1144117	ArgumentList	compiler		1143962	1					
ANR	1144118	Argument	compiler		1143962	0					
ANR	1144119	Identifier	compiler		1143962	0					
ANR	1144120	Argument	dst		1143962	1					
ANR	1144121	Identifier	dst		1143962	0					
ANR	1144122	Argument	dstw		1143962	2					
ANR	1144123	Identifier	dstw		1143962	0					
ANR	1144124	Argument	SLJIT_SP		1143962	3					
ANR	1144125	Identifier	SLJIT_SP		1143962	0					
ANR	1144126	Argument	0		1143962	4					
ANR	1144127	PrimaryExpression	0		1143962	0					
ANR	1144128	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1143962	1					
ANR	1144129	Identifier	sljit_get_local_base		1143962	2					
ANR	1144130	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset"		1143962	3					
ANR	1144131	Parameter	struct sljit_compiler * compiler	2848:55:81884:81914	1143962	0	True				
ANR	1144132	ParameterType	struct sljit_compiler *		1143962	0					
ANR	1144133	Identifier	compiler		1143962	1					
ANR	1144134	Parameter	sljit_si dst	2848:88:81917:81928	1143962	1	True				
ANR	1144135	ParameterType	sljit_si		1143962	0					
ANR	1144136	Identifier	dst		1143962	1					
ANR	1144137	Parameter	sljit_sw dstw	2848:102:81931:81943	1143962	2	True				
ANR	1144138	ParameterType	sljit_sw		1143962	0					
ANR	1144139	Identifier	dstw		1143962	1					
ANR	1144140	Parameter	sljit_sw offset	2848:117:81946:81960	1143962	3	True				
ANR	1144141	ParameterType	sljit_sw		1143962	0					
ANR	1144142	Identifier	offset		1143962	1					
ANR	1144143	CFGEntryNode	ENTRY		1143962		True				
ANR	1144144	CFGExitNode	EXIT		1143962		True				
ANR	1144145	Symbol	emit_load_imm64		1143962						
ANR	1144146	Symbol	TMP_REG1		1143962						
ANR	1144147	Symbol	dst		1143962						
ANR	1144148	Symbol	offset		1143962						
ANR	1144149	Symbol	NOT_HALFWORD		1143962						
ANR	1144150	Symbol	emit_lea_binary		1143962						
ANR	1144151	Symbol	check_sljit_get_local_base		1143962						
ANR	1144152	Symbol	* compiler		1143962						
ANR	1144153	Symbol	SLJIT_MEM1		1143962						
ANR	1144154	Symbol	SLJIT_SP		1143962						
ANR	1144155	Symbol	SLJIT_IMM		1143962						
ANR	1144156	Symbol	emit_mov		1143962						
ANR	1144157	Symbol	SLJIT_KEEP_FLAGS		1143962						
ANR	1144158	Symbol	compiler -> mode32		1143962						
ANR	1144159	Symbol	compiler		1143962						
ANR	1144160	Symbol	dstw		1143962						
ANR	1144161	Symbol	compiler -> error		1143962						
ANR	1144162	Symbol	SLJIT_ERR_UNSUPPORTED		1143962						
ANR	1144163	Function	sljit_emit_const	2879:25:82903:84034							
ANR	1144164	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1144163	0					
ANR	1144165	CompoundStatement		2880:0:83023:84034	1144163	0					
ANR	1144166	IdentifierDeclStatement	sljit_ub * inst ;	2881:1:83026:83040	1144163	0	True				
ANR	1144167	IdentifierDecl	* inst		1144163	0					
ANR	1144168	IdentifierDeclType	sljit_ub *		1144163	0					
ANR	1144169	Identifier	inst		1144163	1					
ANR	1144170	IdentifierDeclStatement	struct sljit_const * const_ ;	2882:1:83043:83069	1144163	1	True				
ANR	1144171	IdentifierDecl	* const_		1144163	0					
ANR	1144172	IdentifierDeclType	struct sljit_const *		1144163	0					
ANR	1144173	Identifier	const_		1144163	1					
ANR	1144174	IdentifierDeclStatement	sljit_si reg ;	2884:1:83129:83141	1144163	2	True				
ANR	1144175	IdentifierDecl	reg		1144163	0					
ANR	1144176	IdentifierDeclType	sljit_si		1144163	0					
ANR	1144177	Identifier	reg		1144163	1					
ANR	1144178	ExpressionStatement	CHECK_ERROR_PTR ( )	2887:1:83152:83169	1144163	3	True				
ANR	1144179	CallExpression	CHECK_ERROR_PTR ( )		1144163	0					
ANR	1144180	Callee	CHECK_ERROR_PTR		1144163	0					
ANR	1144181	Identifier	CHECK_ERROR_PTR		1144163	0					
ANR	1144182	ArgumentList			1144163	1					
ANR	1144183	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2888:1:83172:83238	1144163	4	True				
ANR	1144184	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1144163	0					
ANR	1144185	Callee	CHECK_PTR		1144163	0					
ANR	1144186	Identifier	CHECK_PTR		1144163	0					
ANR	1144187	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1144163	1					
ANR	1144188	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1144163	0					
ANR	1144189	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1144163	0					
ANR	1144190	Callee	check_sljit_emit_const		1144163	0					
ANR	1144191	Identifier	check_sljit_emit_const		1144163	0					
ANR	1144192	ArgumentList	compiler		1144163	1					
ANR	1144193	Argument	compiler		1144163	0					
ANR	1144194	Identifier	compiler		1144163	0					
ANR	1144195	Argument	dst		1144163	1					
ANR	1144196	Identifier	dst		1144163	0					
ANR	1144197	Argument	dstw		1144163	2					
ANR	1144198	Identifier	dstw		1144163	0					
ANR	1144199	Argument	init_value		1144163	3					
ANR	1144200	Identifier	init_value		1144163	0					
ANR	1144201	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2889:1:83241:83271	1144163	5	True				
ANR	1144202	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1144163	0					
ANR	1144203	Callee	ADJUST_LOCAL_OFFSET		1144163	0					
ANR	1144204	Identifier	ADJUST_LOCAL_OFFSET		1144163	0					
ANR	1144205	ArgumentList	dst		1144163	1					
ANR	1144206	Argument	dst		1144163	0					
ANR	1144207	Identifier	dst		1144163	0					
ANR	1144208	Argument	dstw		1144163	1					
ANR	1144209	Identifier	dstw		1144163	0					
ANR	1144210	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2891:1:83275:83311	1144163	6	True				
ANR	1144211	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1144163	0					
ANR	1144212	Callee	CHECK_EXTRA_REGS		1144163	0					
ANR	1144213	Identifier	CHECK_EXTRA_REGS		1144163	0					
ANR	1144214	ArgumentList	dst		1144163	1					
ANR	1144215	Argument	dst		1144163	0					
ANR	1144216	Identifier	dst		1144163	0					
ANR	1144217	Argument	dstw		1144163	1					
ANR	1144218	Identifier	dstw		1144163	0					
ANR	1144219	Argument	( void ) 0		1144163	2					
ANR	1144220	CastExpression	( void ) 0		1144163	0					
ANR	1144221	CastTarget	void		1144163	0					
ANR	1144222	PrimaryExpression	0		1144163	1					
ANR	1144223	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2893:1:83315:83394	1144163	7	True				
ANR	1144224	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1144163	0		=			
ANR	1144225	Identifier	const_		1144163	0					
ANR	1144226	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1144163	1					
ANR	1144227	CastTarget	struct sljit_const *		1144163	0					
ANR	1144228	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1144163	1					
ANR	1144229	Callee	ensure_abuf		1144163	0					
ANR	1144230	Identifier	ensure_abuf		1144163	0					
ANR	1144231	ArgumentList	compiler		1144163	1					
ANR	1144232	Argument	compiler		1144163	0					
ANR	1144233	Identifier	compiler		1144163	0					
ANR	1144234	Argument	sizeof ( struct sljit_const )		1144163	1					
ANR	1144235	SizeofExpression	sizeof ( struct sljit_const )		1144163	0					
ANR	1144236	Sizeof	sizeof		1144163	0					
ANR	1144237	SizeofOperand	struct sljit_const		1144163	1					
ANR	1144238	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2894:1:83397:83417	1144163	8	True				
ANR	1144239	CallExpression	PTR_FAIL_IF ( ! const_ )		1144163	0					
ANR	1144240	Callee	PTR_FAIL_IF		1144163	0					
ANR	1144241	Identifier	PTR_FAIL_IF		1144163	0					
ANR	1144242	ArgumentList	! const_		1144163	1					
ANR	1144243	Argument	! const_		1144163	0					
ANR	1144244	UnaryOperationExpression	! const_		1144163	0					
ANR	1144245	UnaryOperator	!		1144163	0					
ANR	1144246	Identifier	const_		1144163	1					
ANR	1144247	ExpressionStatement	"set_const ( const_ , compiler )"	2895:1:83420:83447	1144163	9	True				
ANR	1144248	CallExpression	"set_const ( const_ , compiler )"		1144163	0					
ANR	1144249	Callee	set_const		1144163	0					
ANR	1144250	Identifier	set_const		1144163	0					
ANR	1144251	ArgumentList	const_		1144163	1					
ANR	1144252	Argument	const_		1144163	0					
ANR	1144253	Identifier	const_		1144163	0					
ANR	1144254	Argument	compiler		1144163	1					
ANR	1144255	Identifier	compiler		1144163	0					
ANR	1144256	ExpressionStatement	compiler -> mode32 = 0	2898:1:83508:83528	1144163	10	True				
ANR	1144257	AssignmentExpression	compiler -> mode32 = 0		1144163	0		=			
ANR	1144258	PtrMemberAccess	compiler -> mode32		1144163	0					
ANR	1144259	Identifier	compiler		1144163	0					
ANR	1144260	Identifier	mode32		1144163	1					
ANR	1144261	PrimaryExpression	0		1144163	1					
ANR	1144262	ExpressionStatement	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	2899:1:83531:83570	1144163	11	True				
ANR	1144263	AssignmentExpression	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1144163	0		=			
ANR	1144264	Identifier	reg		1144163	0					
ANR	1144265	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1144163	1					
ANR	1144266	Condition	SLOW_IS_REG ( dst )		1144163	0					
ANR	1144267	CallExpression	SLOW_IS_REG ( dst )		1144163	0					
ANR	1144268	Callee	SLOW_IS_REG		1144163	0					
ANR	1144269	Identifier	SLOW_IS_REG		1144163	0					
ANR	1144270	ArgumentList	dst		1144163	1					
ANR	1144271	Argument	dst		1144163	0					
ANR	1144272	Identifier	dst		1144163	0					
ANR	1144273	Identifier	dst		1144163	1					
ANR	1144274	Identifier	TMP_REG1		1144163	2					
ANR	1144275	IfStatement	"if ( emit_load_imm64 ( compiler , reg , init_value ) )"		1144163	12					
ANR	1144276	Condition	"emit_load_imm64 ( compiler , reg , init_value )"	2901:5:83578:83619	1144163	0	True				
ANR	1144277	CallExpression	"emit_load_imm64 ( compiler , reg , init_value )"		1144163	0					
ANR	1144278	Callee	emit_load_imm64		1144163	0					
ANR	1144279	Identifier	emit_load_imm64		1144163	0					
ANR	1144280	ArgumentList	compiler		1144163	1					
ANR	1144281	Argument	compiler		1144163	0					
ANR	1144282	Identifier	compiler		1144163	0					
ANR	1144283	Argument	reg		1144163	1					
ANR	1144284	Identifier	reg		1144163	0					
ANR	1144285	Argument	init_value		1144163	2					
ANR	1144286	Identifier	init_value		1144163	0					
ANR	1144287	ReturnStatement	return NULL ;	2902:2:83624:83635	1144163	1	True				
ANR	1144288	Identifier	NULL		1144163	0					
ANR	1144289	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2911:1:83771:83812	1144163	13	True				
ANR	1144290	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1144163	0		=			
ANR	1144291	Identifier	inst		1144163	0					
ANR	1144292	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1144163	1					
ANR	1144293	CastTarget	sljit_ub *		1144163	0					
ANR	1144294	CallExpression	"ensure_buf ( compiler , 2 )"		1144163	1					
ANR	1144295	Callee	ensure_buf		1144163	0					
ANR	1144296	Identifier	ensure_buf		1144163	0					
ANR	1144297	ArgumentList	compiler		1144163	1					
ANR	1144298	Argument	compiler		1144163	0					
ANR	1144299	Identifier	compiler		1144163	0					
ANR	1144300	Argument	2		1144163	1					
ANR	1144301	PrimaryExpression	2		1144163	0					
ANR	1144302	ExpressionStatement	PTR_FAIL_IF ( ! inst )	2912:1:83815:83833	1144163	14	True				
ANR	1144303	CallExpression	PTR_FAIL_IF ( ! inst )		1144163	0					
ANR	1144304	Callee	PTR_FAIL_IF		1144163	0					
ANR	1144305	Identifier	PTR_FAIL_IF		1144163	0					
ANR	1144306	ArgumentList	! inst		1144163	1					
ANR	1144307	Argument	! inst		1144163	0					
ANR	1144308	UnaryOperationExpression	! inst		1144163	0					
ANR	1144309	UnaryOperator	!		1144163	0					
ANR	1144310	Identifier	inst		1144163	1					
ANR	1144311	ExpressionStatement	* inst ++ = 0	2914:1:83837:83848	1144163	15	True				
ANR	1144312	AssignmentExpression	* inst ++ = 0		1144163	0		=			
ANR	1144313	UnaryOperationExpression	* inst ++		1144163	0					
ANR	1144314	UnaryOperator	*		1144163	0					
ANR	1144315	PostIncDecOperationExpression	inst ++		1144163	1					
ANR	1144316	Identifier	inst		1144163	0					
ANR	1144317	IncDec	++		1144163	1					
ANR	1144318	PrimaryExpression	0		1144163	1					
ANR	1144319	ExpressionStatement	* inst ++ = 1	2915:1:83851:83862	1144163	16	True				
ANR	1144320	AssignmentExpression	* inst ++ = 1		1144163	0		=			
ANR	1144321	UnaryOperationExpression	* inst ++		1144163	0					
ANR	1144322	UnaryOperator	*		1144163	0					
ANR	1144323	PostIncDecOperationExpression	inst ++		1144163	1					
ANR	1144324	Identifier	inst		1144163	0					
ANR	1144325	IncDec	++		1144163	1					
ANR	1144326	PrimaryExpression	1		1144163	1					
ANR	1144327	IfStatement	if ( dst & SLJIT_MEM )		1144163	17					
ANR	1144328	Condition	dst & SLJIT_MEM	2918:5:83927:83941	1144163	0	True				
ANR	1144329	BitAndExpression	dst & SLJIT_MEM		1144163	0		&			
ANR	1144330	Identifier	dst		1144163	0					
ANR	1144331	Identifier	SLJIT_MEM		1144163	1					
ANR	1144332	IfStatement	"if ( emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) )"		1144163	1					
ANR	1144333	Condition	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"	2919:6:83950:83991	1144163	0	True				
ANR	1144334	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1144163	0					
ANR	1144335	Callee	emit_mov		1144163	0					
ANR	1144336	Identifier	emit_mov		1144163	0					
ANR	1144337	ArgumentList	compiler		1144163	1					
ANR	1144338	Argument	compiler		1144163	0					
ANR	1144339	Identifier	compiler		1144163	0					
ANR	1144340	Argument	dst		1144163	1					
ANR	1144341	Identifier	dst		1144163	0					
ANR	1144342	Argument	dstw		1144163	2					
ANR	1144343	Identifier	dstw		1144163	0					
ANR	1144344	Argument	TMP_REG1		1144163	3					
ANR	1144345	Identifier	TMP_REG1		1144163	0					
ANR	1144346	Argument	0		1144163	4					
ANR	1144347	PrimaryExpression	0		1144163	0					
ANR	1144348	ReturnStatement	return NULL ;	2920:3:83997:84008	1144163	1	True				
ANR	1144349	Identifier	NULL		1144163	0					
ANR	1144350	ReturnStatement	return const_ ;	2923:1:84019:84032	1144163	18	True				
ANR	1144351	Identifier	const_		1144163	0					
ANR	1144352	ReturnType	struct sljit_const *		1144163	1					
ANR	1144353	Identifier	sljit_emit_const		1144163	2					
ANR	1144354	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1144163	3					
ANR	1144355	Parameter	struct sljit_compiler * compiler	2879:62:82940:82970	1144163	0	True				
ANR	1144356	ParameterType	struct sljit_compiler *		1144163	0					
ANR	1144357	Identifier	compiler		1144163	1					
ANR	1144358	Parameter	sljit_si dst	2879:95:82973:82984	1144163	1	True				
ANR	1144359	ParameterType	sljit_si		1144163	0					
ANR	1144360	Identifier	dst		1144163	1					
ANR	1144361	Parameter	sljit_sw dstw	2879:109:82987:82999	1144163	2	True				
ANR	1144362	ParameterType	sljit_sw		1144163	0					
ANR	1144363	Identifier	dstw		1144163	1					
ANR	1144364	Parameter	sljit_sw init_value	2879:124:83002:83020	1144163	3	True				
ANR	1144365	ParameterType	sljit_sw		1144163	0					
ANR	1144366	Identifier	init_value		1144163	1					
ANR	1144367	CFGEntryNode	ENTRY		1144163		True				
ANR	1144368	CFGExitNode	EXIT		1144163		True				
ANR	1144369	Symbol	check_sljit_emit_const		1144163						
ANR	1144370	Symbol	emit_load_imm64		1144163						
ANR	1144371	Symbol	TMP_REG1		1144163						
ANR	1144372	Symbol	const_		1144163						
ANR	1144373	Symbol	NULL		1144163						
ANR	1144374	Symbol	dst		1144163						
ANR	1144375	Symbol	SLJIT_MEM		1144163						
ANR	1144376	Symbol	* inst ++		1144163						
ANR	1144377	Symbol	SLOW_IS_REG		1144163						
ANR	1144378	Symbol	ensure_abuf		1144163						
ANR	1144379	Symbol	* compiler		1144163						
ANR	1144380	Symbol	emit_mov		1144163						
ANR	1144381	Symbol	reg		1144163						
ANR	1144382	Symbol	inst		1144163						
ANR	1144383	Symbol	ensure_buf		1144163						
ANR	1144384	Symbol	compiler -> mode32		1144163						
ANR	1144385	Symbol	compiler		1144163						
ANR	1144386	Symbol	init_value		1144163						
ANR	1144387	Symbol	dstw		1144163						
ANR	1144388	Function	sljit_set_jump_addr	2926:0:84037:84266							
ANR	1144389	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1144388	0					
ANR	1144390	CompoundStatement		2927:0:84121:84266	1144388	0					
ANR	1144391	ExpressionStatement	* ( sljit_sw * ) addr = new_addr - ( addr + 4 )	2929:1:84181:84221	1144388	0	True				
ANR	1144392	AssignmentExpression	* ( sljit_sw * ) addr = new_addr - ( addr + 4 )		1144388	0		=			
ANR	1144393	UnaryOperationExpression	* ( sljit_sw * ) addr		1144388	0					
ANR	1144394	UnaryOperator	*		1144388	0					
ANR	1144395	CastExpression	( sljit_sw * ) addr		1144388	1					
ANR	1144396	CastTarget	sljit_sw *		1144388	0					
ANR	1144397	Identifier	addr		1144388	1					
ANR	1144398	AdditiveExpression	new_addr - ( addr + 4 )		1144388	1		-			
ANR	1144399	Identifier	new_addr		1144388	0					
ANR	1144400	AdditiveExpression	addr + 4		1144388	1		+			
ANR	1144401	Identifier	addr		1144388	0					
ANR	1144402	PrimaryExpression	4		1144388	1					
ANR	1144403	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1144388	1					
ANR	1144404	Identifier	sljit_set_jump_addr		1144388	2					
ANR	1144405	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1144388	3					
ANR	1144406	Parameter	sljit_uw addr	2926:50:84087:84099	1144388	0	True				
ANR	1144407	ParameterType	sljit_uw		1144388	0					
ANR	1144408	Identifier	addr		1144388	1					
ANR	1144409	Parameter	sljit_uw new_addr	2926:65:84102:84118	1144388	1	True				
ANR	1144410	ParameterType	sljit_uw		1144388	0					
ANR	1144411	Identifier	new_addr		1144388	1					
ANR	1144412	CFGEntryNode	ENTRY		1144388		True				
ANR	1144413	CFGExitNode	EXIT		1144388		True				
ANR	1144414	Symbol	* ( sljit_sw * ) addr		1144388						
ANR	1144415	Symbol	* addr		1144388						
ANR	1144416	Symbol	addr		1144388						
ANR	1144417	Symbol	new_addr		1144388						
ANR	1144418	Function	sljit_set_const	2935:0:84269:84389							
ANR	1144419	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1144418	0					
ANR	1144420	CompoundStatement		2936:0:84353:84389	1144418	0					
ANR	1144421	ExpressionStatement	* ( sljit_sw * ) addr = new_constant	2937:1:84356:84387	1144418	0	True				
ANR	1144422	AssignmentExpression	* ( sljit_sw * ) addr = new_constant		1144418	0		=			
ANR	1144423	UnaryOperationExpression	* ( sljit_sw * ) addr		1144418	0					
ANR	1144424	UnaryOperator	*		1144418	0					
ANR	1144425	CastExpression	( sljit_sw * ) addr		1144418	1					
ANR	1144426	CastTarget	sljit_sw *		1144418	0					
ANR	1144427	Identifier	addr		1144418	1					
ANR	1144428	Identifier	new_constant		1144418	1					
ANR	1144429	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1144418	1					
ANR	1144430	Identifier	sljit_set_const		1144418	2					
ANR	1144431	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1144418	3					
ANR	1144432	Parameter	sljit_uw addr	2935:46:84315:84327	1144418	0	True				
ANR	1144433	ParameterType	sljit_uw		1144418	0					
ANR	1144434	Identifier	addr		1144418	1					
ANR	1144435	Parameter	sljit_sw new_constant	2935:61:84330:84350	1144418	1	True				
ANR	1144436	ParameterType	sljit_sw		1144418	0					
ANR	1144437	Identifier	new_constant		1144418	1					
ANR	1144438	CFGEntryNode	ENTRY		1144418		True				
ANR	1144439	CFGExitNode	EXIT		1144418		True				
ANR	1144440	Symbol	new_constant		1144418						
ANR	1144441	Symbol	* ( sljit_sw * ) addr		1144418						
ANR	1144442	Symbol	* addr		1144418						
ANR	1144443	Symbol	addr		1144418						
ANR	1144444	Function	sljit_x86_is_sse2_available	2940:0:84392:84608							
ANR	1144445	FunctionDef	sljit_x86_is_sse2_available ()		1144444	0					
ANR	1144446	CompoundStatement		2941:0:84460:84608	1144444	0					
ANR	1144447	IfStatement	if ( cpu_has_sse2 == - 1 )		1144444	0					
ANR	1144448	Condition	cpu_has_sse2 == - 1	2943:5:84520:84537	1144444	0	True				
ANR	1144449	EqualityExpression	cpu_has_sse2 == - 1		1144444	0		==			
ANR	1144450	Identifier	cpu_has_sse2		1144444	0					
ANR	1144451	UnaryOperationExpression	- 1		1144444	1					
ANR	1144452	UnaryOperator	-		1144444	0					
ANR	1144453	PrimaryExpression	1		1144444	1					
ANR	1144454	ExpressionStatement	get_cpu_features ( )	2944:2:84542:84560	1144444	1	True				
ANR	1144455	CallExpression	get_cpu_features ( )		1144444	0					
ANR	1144456	Callee	get_cpu_features		1144444	0					
ANR	1144457	Identifier	get_cpu_features		1144444	0					
ANR	1144458	ArgumentList			1144444	1					
ANR	1144459	ReturnStatement	return cpu_has_sse2 ;	2945:1:84563:84582	1144444	1	True				
ANR	1144460	Identifier	cpu_has_sse2		1144444	0					
ANR	1144461	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1144444	1					
ANR	1144462	Identifier	sljit_x86_is_sse2_available		1144444	2					
ANR	1144463	ParameterList			1144444	3					
ANR	1144464	CFGEntryNode	ENTRY		1144444		True				
ANR	1144465	CFGExitNode	EXIT		1144444		True				
ANR	1144466	Symbol	cpu_has_sse2		1144444						
ANR	1144467	Function	sljit_x86_is_cmov_available	2951:0:84611:84750							
ANR	1144468	FunctionDef	sljit_x86_is_cmov_available ()		1144467	0					
ANR	1144469	CompoundStatement		2952:0:84679:84750	1144467	0					
ANR	1144470	IfStatement	if ( cpu_has_cmov == - 1 )		1144467	0					
ANR	1144471	Condition	cpu_has_cmov == - 1	2953:5:84686:84703	1144467	0	True				
ANR	1144472	EqualityExpression	cpu_has_cmov == - 1		1144467	0		==			
ANR	1144473	Identifier	cpu_has_cmov		1144467	0					
ANR	1144474	UnaryOperationExpression	- 1		1144467	1					
ANR	1144475	UnaryOperator	-		1144467	0					
ANR	1144476	PrimaryExpression	1		1144467	1					
ANR	1144477	ExpressionStatement	get_cpu_features ( )	2954:2:84708:84726	1144467	1	True				
ANR	1144478	CallExpression	get_cpu_features ( )		1144467	0					
ANR	1144479	Callee	get_cpu_features		1144467	0					
ANR	1144480	Identifier	get_cpu_features		1144467	0					
ANR	1144481	ArgumentList			1144467	1					
ANR	1144482	ReturnStatement	return cpu_has_cmov ;	2955:1:84729:84748	1144467	1	True				
ANR	1144483	Identifier	cpu_has_cmov		1144467	0					
ANR	1144484	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1144467	1					
ANR	1144485	Identifier	sljit_x86_is_cmov_available		1144467	2					
ANR	1144486	ParameterList			1144467	3					
ANR	1144487	CFGEntryNode	ENTRY		1144467		True				
ANR	1144488	CFGExitNode	EXIT		1144467		True				
ANR	1144489	Symbol	cpu_has_cmov		1144467						
ANR	1144490	Function	sljit_x86_emit_cmov	2958:0:84753:86208							
ANR	1144491	FunctionDef	"sljit_x86_emit_cmov (struct sljit_compiler * compiler , sljit_si type , sljit_si dst_reg , sljit_si src , sljit_sw srcw)"		1144490	0					
ANR	1144492	CompoundStatement		2962:0:84905:86208	1144490	0					
ANR	1144493	IdentifierDeclStatement	sljit_ub * inst ;	2963:1:84908:84922	1144490	0	True				
ANR	1144494	IdentifierDecl	* inst		1144490	0					
ANR	1144495	IdentifierDeclType	sljit_ub *		1144490	0					
ANR	1144496	Identifier	inst		1144490	1					
ANR	1144497	ExpressionStatement	CHECK_ERROR ( )	2965:1:84926:84939	1144490	1	True				
ANR	1144498	CallExpression	CHECK_ERROR ( )		1144490	0					
ANR	1144499	Callee	CHECK_ERROR		1144490	0					
ANR	1144500	Identifier	CHECK_ERROR		1144490	0					
ANR	1144501	ArgumentList			1144490	1					
ANR	1144502	ExpressionStatement	CHECK_ARGUMENT ( sljit_x86_is_cmov_available ( ) )	2967:1:85003:85048	1144490	2	True				
ANR	1144503	CallExpression	CHECK_ARGUMENT ( sljit_x86_is_cmov_available ( ) )		1144490	0					
ANR	1144504	Callee	CHECK_ARGUMENT		1144490	0					
ANR	1144505	Identifier	CHECK_ARGUMENT		1144490	0					
ANR	1144506	ArgumentList	sljit_x86_is_cmov_available ( )		1144490	1					
ANR	1144507	Argument	sljit_x86_is_cmov_available ( )		1144490	0					
ANR	1144508	CallExpression	sljit_x86_is_cmov_available ( )		1144490	0					
ANR	1144509	Callee	sljit_x86_is_cmov_available		1144490	0					
ANR	1144510	Identifier	sljit_x86_is_cmov_available		1144490	0					
ANR	1144511	ArgumentList			1144490	1					
ANR	1144512	ExpressionStatement	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_INT_OP ) ) )	2968:1:85051:85099	1144490	3	True				
ANR	1144513	CallExpression	CHECK_ARGUMENT ( ! ( type & ~ ( 0xff | SLJIT_INT_OP ) ) )		1144490	0					
ANR	1144514	Callee	CHECK_ARGUMENT		1144490	0					
ANR	1144515	Identifier	CHECK_ARGUMENT		1144490	0					
ANR	1144516	ArgumentList	! ( type & ~ ( 0xff | SLJIT_INT_OP ) )		1144490	1					
ANR	1144517	Argument	! ( type & ~ ( 0xff | SLJIT_INT_OP ) )		1144490	0					
ANR	1144518	UnaryOperationExpression	! ( type & ~ ( 0xff | SLJIT_INT_OP ) )		1144490	0					
ANR	1144519	UnaryOperator	!		1144490	0					
ANR	1144520	BitAndExpression	type & ~ ( 0xff | SLJIT_INT_OP )		1144490	1		&			
ANR	1144521	Identifier	type		1144490	0					
ANR	1144522	UnaryOperationExpression	~ ( 0xff | SLJIT_INT_OP )		1144490	1					
ANR	1144523	UnaryOperator	~		1144490	0					
ANR	1144524	InclusiveOrExpression	0xff | SLJIT_INT_OP		1144490	1		|			
ANR	1144525	PrimaryExpression	0xff		1144490	0					
ANR	1144526	Identifier	SLJIT_INT_OP		1144490	1					
ANR	1144527	ExpressionStatement	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED )	2969:1:85102:85182	1144490	4	True				
ANR	1144528	CallExpression	CHECK_ARGUMENT ( ( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED )		1144490	0					
ANR	1144529	Callee	CHECK_ARGUMENT		1144490	0					
ANR	1144530	Identifier	CHECK_ARGUMENT		1144490	0					
ANR	1144531	ArgumentList	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1144490	1					
ANR	1144532	Argument	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1144490	0					
ANR	1144533	AndExpression	( type & 0xff ) >= SLJIT_EQUAL && ( type & 0xff ) <= SLJIT_D_ORDERED		1144490	0		&&			
ANR	1144534	RelationalExpression	( type & 0xff ) >= SLJIT_EQUAL		1144490	0		>=			
ANR	1144535	BitAndExpression	type & 0xff		1144490	0		&			
ANR	1144536	Identifier	type		1144490	0					
ANR	1144537	PrimaryExpression	0xff		1144490	1					
ANR	1144538	Identifier	SLJIT_EQUAL		1144490	1					
ANR	1144539	RelationalExpression	( type & 0xff ) <= SLJIT_D_ORDERED		1144490	1		<=			
ANR	1144540	BitAndExpression	type & 0xff		1144490	0		&			
ANR	1144541	Identifier	type		1144490	0					
ANR	1144542	PrimaryExpression	0xff		1144490	1					
ANR	1144543	Identifier	SLJIT_D_ORDERED		1144490	1					
ANR	1144544	ExpressionStatement	CHECK_ARGUMENT ( FUNCTION_CHECK_IS_REG ( dst_reg & ~SLJIT_INT_OP ) )	2970:1:85185:85247	1144490	5	True				
ANR	1144545	CallExpression	CHECK_ARGUMENT ( FUNCTION_CHECK_IS_REG ( dst_reg & ~SLJIT_INT_OP ) )		1144490	0					
ANR	1144546	Callee	CHECK_ARGUMENT		1144490	0					
ANR	1144547	Identifier	CHECK_ARGUMENT		1144490	0					
ANR	1144548	ArgumentList	FUNCTION_CHECK_IS_REG ( dst_reg & ~SLJIT_INT_OP )		1144490	1					
ANR	1144549	Argument	FUNCTION_CHECK_IS_REG ( dst_reg & ~SLJIT_INT_OP )		1144490	0					
ANR	1144550	CallExpression	FUNCTION_CHECK_IS_REG ( dst_reg & ~SLJIT_INT_OP )		1144490	0					
ANR	1144551	Callee	FUNCTION_CHECK_IS_REG		1144490	0					
ANR	1144552	Identifier	FUNCTION_CHECK_IS_REG		1144490	0					
ANR	1144553	ArgumentList	dst_reg & ~SLJIT_INT_OP		1144490	1					
ANR	1144554	Argument	dst_reg & ~SLJIT_INT_OP		1144490	0					
ANR	1144555	BitAndExpression	dst_reg & ~SLJIT_INT_OP		1144490	0		&			
ANR	1144556	Identifier	dst_reg		1144490	0					
ANR	1144557	Identifier	~SLJIT_INT_OP		1144490	1					
ANR	1144558	ExpressionStatement	"FUNCTION_CHECK_SRC ( src , srcw )"	2971:1:85250:85279	1144490	6	True				
ANR	1144559	CallExpression	"FUNCTION_CHECK_SRC ( src , srcw )"		1144490	0					
ANR	1144560	Callee	FUNCTION_CHECK_SRC		1144490	0					
ANR	1144561	Identifier	FUNCTION_CHECK_SRC		1144490	0					
ANR	1144562	ArgumentList	src		1144490	1					
ANR	1144563	Argument	src		1144490	0					
ANR	1144564	Identifier	src		1144490	0					
ANR	1144565	Argument	srcw		1144490	1					
ANR	1144566	Identifier	srcw		1144490	0					
ANR	1144567	IfStatement	if ( SLJIT_UNLIKELY ( ! ! compiler -> verbose ) )		1144490	7					
ANR	1144568	Condition	SLJIT_UNLIKELY ( ! ! compiler -> verbose )	2974:5:85338:85372	1144490	0	True				
ANR	1144569	CallExpression	SLJIT_UNLIKELY ( ! ! compiler -> verbose )		1144490	0					
ANR	1144570	Callee	SLJIT_UNLIKELY		1144490	0					
ANR	1144571	Identifier	SLJIT_UNLIKELY		1144490	0					
ANR	1144572	ArgumentList	! ! compiler -> verbose		1144490	1					
ANR	1144573	Argument	! ! compiler -> verbose		1144490	0					
ANR	1144574	UnaryOperationExpression	! ! compiler -> verbose		1144490	0					
ANR	1144575	UnaryOperator	!		1144490	0					
ANR	1144576	UnaryOperationExpression	! compiler -> verbose		1144490	1					
ANR	1144577	UnaryOperator	!		1144490	0					
ANR	1144578	PtrMemberAccess	compiler -> verbose		1144490	1					
ANR	1144579	Identifier	compiler		1144490	0					
ANR	1144580	Identifier	verbose		1144490	1					
ANR	1144581	CompoundStatement		13:42:469:469	1144490	1					
ANR	1144582	ExpressionStatement	"fprintf ( compiler -> verbose , ""  x86_cmov%s %s%s, "" , ! ( dst_reg & SLJIT_INT_OP ) ? """" : "".i"" , JUMP_PREFIX ( type ) , jump_names [ type & 0xff ] )"	2975:2:85379:85517	1144490	0	True				
ANR	1144583	CallExpression	"fprintf ( compiler -> verbose , ""  x86_cmov%s %s%s, "" , ! ( dst_reg & SLJIT_INT_OP ) ? """" : "".i"" , JUMP_PREFIX ( type ) , jump_names [ type & 0xff ] )"		1144490	0					
ANR	1144584	Callee	fprintf		1144490	0					
ANR	1144585	Identifier	fprintf		1144490	0					
ANR	1144586	ArgumentList	compiler -> verbose		1144490	1					
ANR	1144587	Argument	compiler -> verbose		1144490	0					
ANR	1144588	PtrMemberAccess	compiler -> verbose		1144490	0					
ANR	1144589	Identifier	compiler		1144490	0					
ANR	1144590	Identifier	verbose		1144490	1					
ANR	1144591	Argument	"""  x86_cmov%s %s%s, """		1144490	1					
ANR	1144592	PrimaryExpression	"""  x86_cmov%s %s%s, """		1144490	0					
ANR	1144593	Argument	"! ( dst_reg & SLJIT_INT_OP ) ? """" : "".i"""		1144490	2					
ANR	1144594	ConditionalExpression	"! ( dst_reg & SLJIT_INT_OP ) ? """" : "".i"""		1144490	0					
ANR	1144595	Condition	! ( dst_reg & SLJIT_INT_OP )		1144490	0					
ANR	1144596	UnaryOperationExpression	! ( dst_reg & SLJIT_INT_OP )		1144490	0					
ANR	1144597	UnaryOperator	!		1144490	0					
ANR	1144598	BitAndExpression	dst_reg & SLJIT_INT_OP		1144490	1		&			
ANR	1144599	Identifier	dst_reg		1144490	0					
ANR	1144600	Identifier	SLJIT_INT_OP		1144490	1					
ANR	1144601	PrimaryExpression	""""""		1144490	1					
ANR	1144602	PrimaryExpression	""".i"""		1144490	2					
ANR	1144603	Argument	JUMP_PREFIX ( type )		1144490	3					
ANR	1144604	CallExpression	JUMP_PREFIX ( type )		1144490	0					
ANR	1144605	Callee	JUMP_PREFIX		1144490	0					
ANR	1144606	Identifier	JUMP_PREFIX		1144490	0					
ANR	1144607	ArgumentList	type		1144490	1					
ANR	1144608	Argument	type		1144490	0					
ANR	1144609	Identifier	type		1144490	0					
ANR	1144610	Argument	jump_names [ type & 0xff ]		1144490	4					
ANR	1144611	ArrayIndexing	jump_names [ type & 0xff ]		1144490	0					
ANR	1144612	Identifier	jump_names		1144490	0					
ANR	1144613	BitAndExpression	type & 0xff		1144490	1		&			
ANR	1144614	Identifier	type		1144490	0					
ANR	1144615	PrimaryExpression	0xff		1144490	1					
ANR	1144616	ExpressionStatement	"sljit_verbose_reg ( compiler , dst_reg & ~SLJIT_INT_OP )"	2978:2:85521:85573	1144490	1	True				
ANR	1144617	CallExpression	"sljit_verbose_reg ( compiler , dst_reg & ~SLJIT_INT_OP )"		1144490	0					
ANR	1144618	Callee	sljit_verbose_reg		1144490	0					
ANR	1144619	Identifier	sljit_verbose_reg		1144490	0					
ANR	1144620	ArgumentList	compiler		1144490	1					
ANR	1144621	Argument	compiler		1144490	0					
ANR	1144622	Identifier	compiler		1144490	0					
ANR	1144623	Argument	dst_reg & ~SLJIT_INT_OP		1144490	1					
ANR	1144624	BitAndExpression	dst_reg & ~SLJIT_INT_OP		1144490	0		&			
ANR	1144625	Identifier	dst_reg		1144490	0					
ANR	1144626	Identifier	~SLJIT_INT_OP		1144490	1					
ANR	1144627	ExpressionStatement	"fprintf ( compiler -> verbose , "", "" )"	2979:2:85577:85609	1144490	2	True				
ANR	1144628	CallExpression	"fprintf ( compiler -> verbose , "", "" )"		1144490	0					
ANR	1144629	Callee	fprintf		1144490	0					
ANR	1144630	Identifier	fprintf		1144490	0					
ANR	1144631	ArgumentList	compiler -> verbose		1144490	1					
ANR	1144632	Argument	compiler -> verbose		1144490	0					
ANR	1144633	PtrMemberAccess	compiler -> verbose		1144490	0					
ANR	1144634	Identifier	compiler		1144490	0					
ANR	1144635	Identifier	verbose		1144490	1					
ANR	1144636	Argument	""", """		1144490	1					
ANR	1144637	PrimaryExpression	""", """		1144490	0					
ANR	1144638	ExpressionStatement	"sljit_verbose_param ( compiler , src , srcw )"	2980:2:85613:85653	1144490	3	True				
ANR	1144639	CallExpression	"sljit_verbose_param ( compiler , src , srcw )"		1144490	0					
ANR	1144640	Callee	sljit_verbose_param		1144490	0					
ANR	1144641	Identifier	sljit_verbose_param		1144490	0					
ANR	1144642	ArgumentList	compiler		1144490	1					
ANR	1144643	Argument	compiler		1144490	0					
ANR	1144644	Identifier	compiler		1144490	0					
ANR	1144645	Argument	src		1144490	1					
ANR	1144646	Identifier	src		1144490	0					
ANR	1144647	Argument	srcw		1144490	2					
ANR	1144648	Identifier	srcw		1144490	0					
ANR	1144649	ExpressionStatement	"fprintf ( compiler -> verbose , ""\\n"" )"	2981:2:85657:85689	1144490	4	True				
ANR	1144650	CallExpression	"fprintf ( compiler -> verbose , ""\\n"" )"		1144490	0					
ANR	1144651	Callee	fprintf		1144490	0					
ANR	1144652	Identifier	fprintf		1144490	0					
ANR	1144653	ArgumentList	compiler -> verbose		1144490	1					
ANR	1144654	Argument	compiler -> verbose		1144490	0					
ANR	1144655	PtrMemberAccess	compiler -> verbose		1144490	0					
ANR	1144656	Identifier	compiler		1144490	0					
ANR	1144657	Identifier	verbose		1144490	1					
ANR	1144658	Argument	"""\\n"""		1144490	1					
ANR	1144659	PrimaryExpression	"""\\n"""		1144490	0					
ANR	1144660	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2985:1:85703:85733	1144490	8	True				
ANR	1144661	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1144490	0					
ANR	1144662	Callee	ADJUST_LOCAL_OFFSET		1144490	0					
ANR	1144663	Identifier	ADJUST_LOCAL_OFFSET		1144490	0					
ANR	1144664	ArgumentList	src		1144490	1					
ANR	1144665	Argument	src		1144490	0					
ANR	1144666	Identifier	src		1144490	0					
ANR	1144667	Argument	srcw		1144490	1					
ANR	1144668	Identifier	srcw		1144490	0					
ANR	1144669	ExpressionStatement	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"	2986:1:85736:85772	1144490	9	True				
ANR	1144670	CallExpression	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"		1144490	0					
ANR	1144671	Callee	CHECK_EXTRA_REGS		1144490	0					
ANR	1144672	Identifier	CHECK_EXTRA_REGS		1144490	0					
ANR	1144673	ArgumentList	src		1144490	1					
ANR	1144674	Argument	src		1144490	0					
ANR	1144675	Identifier	src		1144490	0					
ANR	1144676	Argument	srcw		1144490	1					
ANR	1144677	Identifier	srcw		1144490	0					
ANR	1144678	Argument	( void ) 0		1144490	2					
ANR	1144679	CastExpression	( void ) 0		1144490	0					
ANR	1144680	CastTarget	void		1144490	0					
ANR	1144681	PrimaryExpression	0		1144490	1					
ANR	1144682	ExpressionStatement	compiler -> mode32 = dst_reg & SLJIT_INT_OP	2989:1:85833:85874	1144490	10	True				
ANR	1144683	AssignmentExpression	compiler -> mode32 = dst_reg & SLJIT_INT_OP		1144490	0		=			
ANR	1144684	PtrMemberAccess	compiler -> mode32		1144490	0					
ANR	1144685	Identifier	compiler		1144490	0					
ANR	1144686	Identifier	mode32		1144490	1					
ANR	1144687	BitAndExpression	dst_reg & SLJIT_INT_OP		1144490	1		&			
ANR	1144688	Identifier	dst_reg		1144490	0					
ANR	1144689	Identifier	SLJIT_INT_OP		1144490	1					
ANR	1144690	ExpressionStatement	dst_reg &= ~SLJIT_INT_OP	2991:1:85884:85908	1144490	11	True				
ANR	1144691	AssignmentExpression	dst_reg &= ~SLJIT_INT_OP		1144490	0		&=			
ANR	1144692	Identifier	dst_reg		1144490	0					
ANR	1144693	Identifier	~SLJIT_INT_OP		1144490	1					
ANR	1144694	IfStatement	if ( SLJIT_UNLIKELY ( src & SLJIT_IMM ) )		1144490	12					
ANR	1144695	Condition	SLJIT_UNLIKELY ( src & SLJIT_IMM )	2993:5:85916:85946	1144490	0	True				
ANR	1144696	CallExpression	SLJIT_UNLIKELY ( src & SLJIT_IMM )		1144490	0					
ANR	1144697	Callee	SLJIT_UNLIKELY		1144490	0					
ANR	1144698	Identifier	SLJIT_UNLIKELY		1144490	0					
ANR	1144699	ArgumentList	src & SLJIT_IMM		1144490	1					
ANR	1144700	Argument	src & SLJIT_IMM		1144490	0					
ANR	1144701	BitAndExpression	src & SLJIT_IMM		1144490	0		&			
ANR	1144702	Identifier	src		1144490	0					
ANR	1144703	Identifier	SLJIT_IMM		1144490	1					
ANR	1144704	CompoundStatement		32:38:1043:1043	1144490	1					
ANR	1144705	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_IMM , srcw )"	2994:2:85953:86001	1144490	0	True				
ANR	1144706	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_IMM , srcw )"		1144490	0					
ANR	1144707	Callee	EMIT_MOV		1144490	0					
ANR	1144708	Identifier	EMIT_MOV		1144490	0					
ANR	1144709	ArgumentList	compiler		1144490	1					
ANR	1144710	Argument	compiler		1144490	0					
ANR	1144711	Identifier	compiler		1144490	0					
ANR	1144712	Argument	TMP_REG1		1144490	1					
ANR	1144713	Identifier	TMP_REG1		1144490	0					
ANR	1144714	Argument	0		1144490	2					
ANR	1144715	PrimaryExpression	0		1144490	0					
ANR	1144716	Argument	SLJIT_IMM		1144490	3					
ANR	1144717	Identifier	SLJIT_IMM		1144490	0					
ANR	1144718	Argument	srcw		1144490	4					
ANR	1144719	Identifier	srcw		1144490	0					
ANR	1144720	ExpressionStatement	src = TMP_REG1	2995:2:86005:86019	1144490	1	True				
ANR	1144721	AssignmentExpression	src = TMP_REG1		1144490	0		=			
ANR	1144722	Identifier	src		1144490	0					
ANR	1144723	Identifier	TMP_REG1		1144490	1					
ANR	1144724	ExpressionStatement	srcw = 0	2996:2:86023:86031	1144490	2	True				
ANR	1144725	AssignmentExpression	srcw = 0		1144490	0		=			
ANR	1144726	Identifier	srcw		1144490	0					
ANR	1144727	PrimaryExpression	0		1144490	1					
ANR	1144728	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_reg , 0 , src , srcw )"	2999:1:86038:86101	1144490	13	True				
ANR	1144729	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_reg , 0 , src , srcw )"		1144490	0		=			
ANR	1144730	Identifier	inst		1144490	0					
ANR	1144731	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_reg , 0 , src , srcw )"		1144490	1					
ANR	1144732	Callee	emit_x86_instruction		1144490	0					
ANR	1144733	Identifier	emit_x86_instruction		1144490	0					
ANR	1144734	ArgumentList	compiler		1144490	1					
ANR	1144735	Argument	compiler		1144490	0					
ANR	1144736	Identifier	compiler		1144490	0					
ANR	1144737	Argument	2		1144490	1					
ANR	1144738	PrimaryExpression	2		1144490	0					
ANR	1144739	Argument	dst_reg		1144490	2					
ANR	1144740	Identifier	dst_reg		1144490	0					
ANR	1144741	Argument	0		1144490	3					
ANR	1144742	PrimaryExpression	0		1144490	0					
ANR	1144743	Argument	src		1144490	4					
ANR	1144744	Identifier	src		1144490	0					
ANR	1144745	Argument	srcw		1144490	5					
ANR	1144746	Identifier	srcw		1144490	0					
ANR	1144747	ExpressionStatement	FAIL_IF ( ! inst )	3000:1:86104:86118	1144490	14	True				
ANR	1144748	CallExpression	FAIL_IF ( ! inst )		1144490	0					
ANR	1144749	Callee	FAIL_IF		1144490	0					
ANR	1144750	Identifier	FAIL_IF		1144490	0					
ANR	1144751	ArgumentList	! inst		1144490	1					
ANR	1144752	Argument	! inst		1144490	0					
ANR	1144753	UnaryOperationExpression	! inst		1144490	0					
ANR	1144754	UnaryOperator	!		1144490	0					
ANR	1144755	Identifier	inst		1144490	1					
ANR	1144756	ExpressionStatement	* inst ++ = GROUP_0F	3001:1:86121:86139	1144490	15	True				
ANR	1144757	AssignmentExpression	* inst ++ = GROUP_0F		1144490	0		=			
ANR	1144758	UnaryOperationExpression	* inst ++		1144490	0					
ANR	1144759	UnaryOperator	*		1144490	0					
ANR	1144760	PostIncDecOperationExpression	inst ++		1144490	1					
ANR	1144761	Identifier	inst		1144490	0					
ANR	1144762	IncDec	++		1144490	1					
ANR	1144763	Identifier	GROUP_0F		1144490	1					
ANR	1144764	ExpressionStatement	* inst = get_jump_code ( type & 0xff ) - 0x40	3002:1:86142:86183	1144490	16	True				
ANR	1144765	AssignmentExpression	* inst = get_jump_code ( type & 0xff ) - 0x40		1144490	0		=			
ANR	1144766	UnaryOperationExpression	* inst		1144490	0					
ANR	1144767	UnaryOperator	*		1144490	0					
ANR	1144768	Identifier	inst		1144490	1					
ANR	1144769	AdditiveExpression	get_jump_code ( type & 0xff ) - 0x40		1144490	1		-			
ANR	1144770	CallExpression	get_jump_code ( type & 0xff )		1144490	0					
ANR	1144771	Callee	get_jump_code		1144490	0					
ANR	1144772	Identifier	get_jump_code		1144490	0					
ANR	1144773	ArgumentList	type & 0xff		1144490	1					
ANR	1144774	Argument	type & 0xff		1144490	0					
ANR	1144775	BitAndExpression	type & 0xff		1144490	0		&			
ANR	1144776	Identifier	type		1144490	0					
ANR	1144777	PrimaryExpression	0xff		1144490	1					
ANR	1144778	PrimaryExpression	0x40		1144490	1					
ANR	1144779	ReturnStatement	return SLJIT_SUCCESS ;	3003:1:86186:86206	1144490	17	True				
ANR	1144780	Identifier	SLJIT_SUCCESS		1144490	0					
ANR	1144781	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1144490	1					
ANR	1144782	Identifier	sljit_x86_emit_cmov		1144490	2					
ANR	1144783	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si dst_reg , sljit_si src , sljit_sw srcw"		1144490	3					
ANR	1144784	Parameter	struct sljit_compiler * compiler	2958:54:84807:84837	1144490	0	True				
ANR	1144785	ParameterType	struct sljit_compiler *		1144490	0					
ANR	1144786	Identifier	compiler		1144490	1					
ANR	1144787	Parameter	sljit_si type	2959:1:84841:84853	1144490	1	True				
ANR	1144788	ParameterType	sljit_si		1144490	0					
ANR	1144789	Identifier	type		1144490	1					
ANR	1144790	Parameter	sljit_si dst_reg	2960:1:84857:84872	1144490	2	True				
ANR	1144791	ParameterType	sljit_si		1144490	0					
ANR	1144792	Identifier	dst_reg		1144490	1					
ANR	1144793	Parameter	sljit_si src	2961:1:84876:84887	1144490	3	True				
ANR	1144794	ParameterType	sljit_si		1144490	0					
ANR	1144795	Identifier	src		1144490	1					
ANR	1144796	Parameter	sljit_sw srcw	2961:15:84890:84902	1144490	4	True				
ANR	1144797	ParameterType	sljit_sw		1144490	0					
ANR	1144798	Identifier	srcw		1144490	1					
ANR	1144799	CFGEntryNode	ENTRY		1144490		True				
ANR	1144800	CFGExitNode	EXIT		1144490		True				
ANR	1144801	Symbol	sljit_x86_is_cmov_available		1144490						
ANR	1144802	Symbol	TMP_REG1		1144490						
ANR	1144803	Symbol	* inst ++		1144490						
ANR	1144804	Symbol	JUMP_PREFIX		1144490						
ANR	1144805	Symbol	* compiler		1144490						
ANR	1144806	Symbol	get_jump_code		1144490						
ANR	1144807	Symbol	type		1144490						
ANR	1144808	Symbol	SLJIT_IMM		1144490						
ANR	1144809	Symbol	* type		1144490						
ANR	1144810	Symbol	jump_names		1144490						
ANR	1144811	Symbol	SLJIT_EQUAL		1144490						
ANR	1144812	Symbol	compiler		1144490						
ANR	1144813	Symbol	~SLJIT_INT_OP		1144490						
ANR	1144814	Symbol	emit_x86_instruction		1144490						
ANR	1144815	Symbol	GROUP_0F		1144490						
ANR	1144816	Symbol	* inst		1144490						
ANR	1144817	Symbol	src		1144490						
ANR	1144818	Symbol	dst_reg		1144490						
ANR	1144819	Symbol	srcw		1144490						
ANR	1144820	Symbol	SLJIT_INT_OP		1144490						
ANR	1144821	Symbol	SLJIT_SUCCESS		1144490						
ANR	1144822	Symbol	SLJIT_D_ORDERED		1144490						
ANR	1144823	Symbol	* jump_names		1144490						
ANR	1144824	Symbol	inst		1144490						
ANR	1144825	Symbol	compiler -> mode32		1144490						
ANR	1144826	Symbol	FUNCTION_CHECK_IS_REG		1144490						
ANR	1144827	Symbol	SLJIT_UNLIKELY		1144490						
ANR	1144828	Symbol	compiler -> verbose		1144490						
