command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1286159	File	data/converged/CVE-2017-11142_php-src/ext_soap_soap.c								
ANR	1286160	DeclStmt									
ANR	1286161	Decl							int	int	le_sdl
ANR	1286162	DeclStmt									
ANR	1286163	Decl							int	int	le_url
ANR	1286164	DeclStmt									
ANR	1286165	Decl							int	int	le_service
ANR	1286166	DeclStmt									
ANR	1286167	Decl							int	int	le_typemap
ANR	1286168	ClassDef	_soapHeader	37:8:1593:1990							
ANR	1286169	DeclStmt									
ANR	1286170	Decl							sdlFunctionPtr	sdlFunctionPtr	function
ANR	1286171	DeclStmt									
ANR	1286172	Decl							zval	zval	function_name
ANR	1286173	DeclStmt									
ANR	1286174	Decl							int	int	mustUnderstand
ANR	1286175	DeclStmt									
ANR	1286176	Decl							int	int	num_params
ANR	1286177	DeclStmt									
ANR	1286178	Decl							zval	zval * *	parameters
ANR	1286179	DeclStmt									
ANR	1286180	Decl							zval	zval	retval
ANR	1286181	DeclStmt									
ANR	1286182	Decl							sdlSoapBindingFunctionHeaderPtr	sdlSoapBindingFunctionHeaderPtr	hdr
ANR	1286183	DeclStmt									
ANR	1286184	Decl							struct _soapHeader	struct _soapHeader *	next
ANR	1286185	DeclStmt									
ANR	1286186	Decl							_soapHeader	_soapHeader	soapHeader
ANR	1286187	DeclStmt									
ANR	1286188	Decl							void	"void ( sdlFunctionPtr function , smart_str * buf )"	function_to_string
ANR	1286189	DeclStmt									
ANR	1286190	Decl							void	"void ( sdlTypePtr type , smart_str * buf , int level )"	type_to_string
ANR	1286191	DeclStmt									
ANR	1286192	Decl							sdlParamPtr	"sdlParamPtr ( sdlFunctionPtr function , char * param_name , int index , int )"	get_param
ANR	1286193	DeclStmt									
ANR	1286194	Decl							sdlFunctionPtr	"sdlFunctionPtr ( sdlPtr sdl , const char * function_name )"	get_function
ANR	1286195	DeclStmt									
ANR	1286196	Decl							sdlFunctionPtr	"sdlFunctionPtr ( sdlPtr sdl , xmlNodePtr node )"	get_doc_function
ANR	1286197	DeclStmt									
ANR	1286198	Decl							xmlDocPtr	"xmlDocPtr ( sdlFunctionPtr function , char * function_name , char * uri , zval * ret , soapHeader * headers , int version TSRMLS_DC )"	serialize_response_call
ANR	1286199	DeclStmt									
ANR	1286200	Decl							xmlNodePtr	"xmlNodePtr ( sdlParamPtr param , zval * param_val , int index , char * name , int style , xmlNodePtr parent TSRMLS_DC )"	serialize_parameter
ANR	1286201	DeclStmt									
ANR	1286202	Decl							xmlNodePtr	"xmlNodePtr ( zval * val , sdlParamPtr param , char * paramName , int style , xmlNodePtr parent TSRMLS_DC )"	serialize_zval
ANR	1286203	DeclStmt									
ANR	1286204	Decl							void	void ( void * service )	delete_service
ANR	1286205	DeclStmt									
ANR	1286206	Decl							void	void ( void * handle )	delete_url
ANR	1286207	DeclStmt									
ANR	1286208	Decl							void	void ( void * hashtable )	delete_hashtable
ANR	1286209	DeclStmt									
ANR	1286210	Decl							void	"void ( int error_num , const char * error_filename , const uint error_lineno , const char * format , va_list args )"	soap_error_handler
ANR	1286211	DeclStmt									
ANR	1286212	Decl							zend_bool	zend_bool	_old_handler
ANR	1286213	DeclStmt									
ANR	1286214	Decl							char	char *	_old_error_code
ANR	1286215	DeclStmt									
ANR	1286216	Decl							zval	zval *	_old_error_object
ANR	1286217	DeclStmt									
ANR	1286218	Decl							int	int	_old_soap_version
ANR	1286219	DeclStmt									
ANR	1286220	Decl							zend_bool	zend_bool	_old_handler
ANR	1286221	DeclStmt									
ANR	1286222	Decl							char	char *	_old_error_code
ANR	1286223	DeclStmt									
ANR	1286224	Decl							zval	zval *	_old_error_object
ANR	1286225	DeclStmt									
ANR	1286226	Decl							int	int	_old_soap_version
ANR	1286227	DeclStmt									
ANR	1286228	Decl							zend_bool	zend_bool	_old_in_compilation
ANR	1286229	DeclStmt									
ANR	1286230	Decl							zend_bool	zend_bool	_old_in_execution
ANR	1286231	DeclStmt									
ANR	1286232	Decl							zend_execute_data	zend_execute_data *	_old_current_execute_data
ANR	1286233	DeclStmt									
ANR	1286234	Decl							void	void * *	_old_stack_top
ANR	1286235	DeclStmt									
ANR	1286236	Decl							int	int	_bailout
ANR	1286237	DeclStmt									
ANR	1286238	Decl							zend_vm_stack	zend_vm_stack	tmp
ANR	1286239	DeclStmt									
ANR	1286240	Decl							zval	zval * *	__tmp
ANR	1286241	DeclStmt									
ANR	1286242	Decl							zval	zval * *	tmp
ANR	1286243	DeclStmt									
ANR	1286244	Decl							zend_class_entry	zend_class_entry *	soap_class_entry
ANR	1286245	DeclStmt									
ANR	1286246	Decl							zend_class_entry	zend_class_entry *	soap_server_class_entry
ANR	1286247	DeclStmt									
ANR	1286248	Decl							zend_class_entry	zend_class_entry *	soap_fault_class_entry
ANR	1286249	DeclStmt									
ANR	1286250	Decl							zend_class_entry	zend_class_entry *	soap_header_class_entry
ANR	1286251	DeclStmt									
ANR	1286252	Decl							zend_class_entry	zend_class_entry *	soap_param_class_entry
ANR	1286253	DeclStmt									
ANR	1286254	Decl							zend_class_entry	zend_class_entry *	soap_var_class_entry
ANR	1286255	DeclStmt									
ANR	1286256	Decl							"void ( * ) ( int , const char * , const uint , const char * , va_list )"	"void ( * ) ( int , const char * , const uint , const char * , va_list )"	old_error_handler
ANR	1286257	DeclStmt									
ANR	1286258	Decl							va_list	va_list	copy
ANR	1286259	DeclStmt									
ANR	1286260	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_functions
ANR	1286261	DeclStmt									
ANR	1286262	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_fault_functions
ANR	1286263	DeclStmt									
ANR	1286264	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_server_functions
ANR	1286265	DeclStmt									
ANR	1286266	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_client_functions
ANR	1286267	DeclStmt									
ANR	1286268	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_var_functions
ANR	1286269	DeclStmt									
ANR	1286270	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_param_functions
ANR	1286271	DeclStmt									
ANR	1286272	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_header_functions
ANR	1286273	DeclStmt									
ANR	1286274	Decl							zend_module_entry	zend_module_entry	soap_module_entry
ANR	1286275	DeclStmt									
ANR	1286276	Decl							char	char *	p
ANR	1286277	DeclStmt									
ANR	1286278	Decl							char	char *	base
ANR	1286279	DeclStmt									
ANR	1286280	Decl							char	char *	base
ANR	1286281	DeclStmt									
ANR	1286282	Decl							char	char *	p
ANR	1286283	DeclStmt									
ANR	1286284	Decl							char	char *	p2
ANR	1286285	DeclStmt									
ANR	1286286	Decl							HashTable	HashTable	defEnc
ANR	1286287	Decl							HashTable	HashTable	defEncIndex
ANR	1286288	Decl							HashTable	HashTable	defEncNs
ANR	1286289	Function	php_soap_prepare_globals	534:0:18667:20513							
ANR	1286290	FunctionDef	php_soap_prepare_globals ()		1286289	0					
ANR	1286291	CompoundStatement		535:0:18706:20513	1286289	0					
ANR	1286292	IdentifierDeclStatement	int i ;	536:1:18709:18714	1286289	0	True				
ANR	1286293	IdentifierDecl	i		1286289	0					
ANR	1286294	IdentifierDeclType	int		1286289	0					
ANR	1286295	Identifier	i		1286289	1					
ANR	1286296	IdentifierDeclStatement	encodePtr enc ;	537:1:18717:18730	1286289	1	True				
ANR	1286297	IdentifierDecl	enc		1286289	0					
ANR	1286298	IdentifierDeclType	encodePtr		1286289	0					
ANR	1286299	Identifier	enc		1286289	1					
ANR	1286300	ExpressionStatement	"zend_hash_init ( & defEnc , 0 , NULL , NULL , 1 )"	539:1:18734:18775	1286289	2	True				
ANR	1286301	CallExpression	"zend_hash_init ( & defEnc , 0 , NULL , NULL , 1 )"		1286289	0					
ANR	1286302	Callee	zend_hash_init		1286289	0					
ANR	1286303	Identifier	zend_hash_init		1286289	0					
ANR	1286304	ArgumentList	& defEnc		1286289	1					
ANR	1286305	Argument	& defEnc		1286289	0					
ANR	1286306	UnaryOperationExpression	& defEnc		1286289	0					
ANR	1286307	UnaryOperator	&		1286289	0					
ANR	1286308	Identifier	defEnc		1286289	1					
ANR	1286309	Argument	0		1286289	1					
ANR	1286310	PrimaryExpression	0		1286289	0					
ANR	1286311	Argument	NULL		1286289	2					
ANR	1286312	Identifier	NULL		1286289	0					
ANR	1286313	Argument	NULL		1286289	3					
ANR	1286314	Identifier	NULL		1286289	0					
ANR	1286315	Argument	1		1286289	4					
ANR	1286316	PrimaryExpression	1		1286289	0					
ANR	1286317	ExpressionStatement	"zend_hash_init ( & defEncIndex , 0 , NULL , NULL , 1 )"	540:1:18778:18824	1286289	3	True				
ANR	1286318	CallExpression	"zend_hash_init ( & defEncIndex , 0 , NULL , NULL , 1 )"		1286289	0					
ANR	1286319	Callee	zend_hash_init		1286289	0					
ANR	1286320	Identifier	zend_hash_init		1286289	0					
ANR	1286321	ArgumentList	& defEncIndex		1286289	1					
ANR	1286322	Argument	& defEncIndex		1286289	0					
ANR	1286323	UnaryOperationExpression	& defEncIndex		1286289	0					
ANR	1286324	UnaryOperator	&		1286289	0					
ANR	1286325	Identifier	defEncIndex		1286289	1					
ANR	1286326	Argument	0		1286289	1					
ANR	1286327	PrimaryExpression	0		1286289	0					
ANR	1286328	Argument	NULL		1286289	2					
ANR	1286329	Identifier	NULL		1286289	0					
ANR	1286330	Argument	NULL		1286289	3					
ANR	1286331	Identifier	NULL		1286289	0					
ANR	1286332	Argument	1		1286289	4					
ANR	1286333	PrimaryExpression	1		1286289	0					
ANR	1286334	ExpressionStatement	"zend_hash_init ( & defEncNs , 0 , NULL , NULL , 1 )"	541:1:18827:18870	1286289	4	True				
ANR	1286335	CallExpression	"zend_hash_init ( & defEncNs , 0 , NULL , NULL , 1 )"		1286289	0					
ANR	1286336	Callee	zend_hash_init		1286289	0					
ANR	1286337	Identifier	zend_hash_init		1286289	0					
ANR	1286338	ArgumentList	& defEncNs		1286289	1					
ANR	1286339	Argument	& defEncNs		1286289	0					
ANR	1286340	UnaryOperationExpression	& defEncNs		1286289	0					
ANR	1286341	UnaryOperator	&		1286289	0					
ANR	1286342	Identifier	defEncNs		1286289	1					
ANR	1286343	Argument	0		1286289	1					
ANR	1286344	PrimaryExpression	0		1286289	0					
ANR	1286345	Argument	NULL		1286289	2					
ANR	1286346	Identifier	NULL		1286289	0					
ANR	1286347	Argument	NULL		1286289	3					
ANR	1286348	Identifier	NULL		1286289	0					
ANR	1286349	Argument	1		1286289	4					
ANR	1286350	PrimaryExpression	1		1286289	0					
ANR	1286351	ExpressionStatement	i = 0	543:1:18874:18879	1286289	5	True				
ANR	1286352	AssignmentExpression	i = 0		1286289	0		=			
ANR	1286353	Identifier	i		1286289	0					
ANR	1286354	PrimaryExpression	0		1286289	1					
ANR	1286355	DoStatement	do		1286289	6					
ANR	1286356	CompoundStatement		10:4:178:178	1286289	0					
ANR	1286357	ExpressionStatement	enc = & defaultEncoding [ i ]	545:2:18889:18914	1286289	0	True				
ANR	1286358	AssignmentExpression	enc = & defaultEncoding [ i ]		1286289	0		=			
ANR	1286359	Identifier	enc		1286289	0					
ANR	1286360	UnaryOperationExpression	& defaultEncoding [ i ]		1286289	1					
ANR	1286361	UnaryOperator	&		1286289	0					
ANR	1286362	ArrayIndexing	defaultEncoding [ i ]		1286289	1					
ANR	1286363	Identifier	defaultEncoding		1286289	0					
ANR	1286364	Identifier	i		1286289	1					
ANR	1286365	IfStatement	if ( defaultEncoding [ i ] . details . type_str )		1286289	1					
ANR	1286366	Condition	defaultEncoding [ i ] . details . type_str	548:6:18972:19006	1286289	0	True				
ANR	1286367	MemberAccess	defaultEncoding [ i ] . details . type_str		1286289	0					
ANR	1286368	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286369	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286370	Identifier	defaultEncoding		1286289	0					
ANR	1286371	Identifier	i		1286289	1					
ANR	1286372	Identifier	details		1286289	1					
ANR	1286373	Identifier	type_str		1286289	1					
ANR	1286374	CompoundStatement		14:43:302:302	1286289	1					
ANR	1286375	IfStatement	if ( defaultEncoding [ i ] . details . ns != NULL )		1286289	0					
ANR	1286376	Condition	defaultEncoding [ i ] . details . ns != NULL	549:7:19018:19054	1286289	0	True				
ANR	1286377	EqualityExpression	defaultEncoding [ i ] . details . ns != NULL		1286289	0		!=			
ANR	1286378	MemberAccess	defaultEncoding [ i ] . details . ns		1286289	0					
ANR	1286379	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286380	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286381	Identifier	defaultEncoding		1286289	0					
ANR	1286382	Identifier	i		1286289	1					
ANR	1286383	Identifier	details		1286289	1					
ANR	1286384	Identifier	ns		1286289	1					
ANR	1286385	Identifier	NULL		1286289	1					
ANR	1286386	CompoundStatement		16:4:356:369	1286289	1					
ANR	1286387	IdentifierDeclStatement	char * ns_type ;	550:4:19063:19076	1286289	0	True				
ANR	1286388	IdentifierDecl	* ns_type		1286289	0					
ANR	1286389	IdentifierDeclType	char *		1286289	0					
ANR	1286390	Identifier	ns_type		1286289	1					
ANR	1286391	ExpressionStatement	"spprintf ( & ns_type , 0 , ""%s:%s"" , defaultEncoding [ i ] . details . ns , defaultEncoding [ i ] . details . type_str )"	551:4:19082:19180	1286289	1	True				
ANR	1286392	CallExpression	"spprintf ( & ns_type , 0 , ""%s:%s"" , defaultEncoding [ i ] . details . ns , defaultEncoding [ i ] . details . type_str )"		1286289	0					
ANR	1286393	Callee	spprintf		1286289	0					
ANR	1286394	Identifier	spprintf		1286289	0					
ANR	1286395	ArgumentList	& ns_type		1286289	1					
ANR	1286396	Argument	& ns_type		1286289	0					
ANR	1286397	UnaryOperationExpression	& ns_type		1286289	0					
ANR	1286398	UnaryOperator	&		1286289	0					
ANR	1286399	Identifier	ns_type		1286289	1					
ANR	1286400	Argument	0		1286289	1					
ANR	1286401	PrimaryExpression	0		1286289	0					
ANR	1286402	Argument	"""%s:%s"""		1286289	2					
ANR	1286403	PrimaryExpression	"""%s:%s"""		1286289	0					
ANR	1286404	Argument	defaultEncoding [ i ] . details . ns		1286289	3					
ANR	1286405	MemberAccess	defaultEncoding [ i ] . details . ns		1286289	0					
ANR	1286406	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286407	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286408	Identifier	defaultEncoding		1286289	0					
ANR	1286409	Identifier	i		1286289	1					
ANR	1286410	Identifier	details		1286289	1					
ANR	1286411	Identifier	ns		1286289	1					
ANR	1286412	Argument	defaultEncoding [ i ] . details . type_str		1286289	4					
ANR	1286413	MemberAccess	defaultEncoding [ i ] . details . type_str		1286289	0					
ANR	1286414	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286415	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286416	Identifier	defaultEncoding		1286289	0					
ANR	1286417	Identifier	i		1286289	1					
ANR	1286418	Identifier	details		1286289	1					
ANR	1286419	Identifier	type_str		1286289	1					
ANR	1286420	ExpressionStatement	"zend_hash_add ( & defEnc , ns_type , strlen ( ns_type ) + 1 , & enc , sizeof ( encodePtr ) , NULL )"	552:4:19186:19269	1286289	2	True				
ANR	1286421	CallExpression	"zend_hash_add ( & defEnc , ns_type , strlen ( ns_type ) + 1 , & enc , sizeof ( encodePtr ) , NULL )"		1286289	0					
ANR	1286422	Callee	zend_hash_add		1286289	0					
ANR	1286423	Identifier	zend_hash_add		1286289	0					
ANR	1286424	ArgumentList	& defEnc		1286289	1					
ANR	1286425	Argument	& defEnc		1286289	0					
ANR	1286426	UnaryOperationExpression	& defEnc		1286289	0					
ANR	1286427	UnaryOperator	&		1286289	0					
ANR	1286428	Identifier	defEnc		1286289	1					
ANR	1286429	Argument	ns_type		1286289	1					
ANR	1286430	Identifier	ns_type		1286289	0					
ANR	1286431	Argument	strlen ( ns_type ) + 1		1286289	2					
ANR	1286432	AdditiveExpression	strlen ( ns_type ) + 1		1286289	0		+			
ANR	1286433	CallExpression	strlen ( ns_type )		1286289	0					
ANR	1286434	Callee	strlen		1286289	0					
ANR	1286435	Identifier	strlen		1286289	0					
ANR	1286436	ArgumentList	ns_type		1286289	1					
ANR	1286437	Argument	ns_type		1286289	0					
ANR	1286438	Identifier	ns_type		1286289	0					
ANR	1286439	PrimaryExpression	1		1286289	1					
ANR	1286440	Argument	& enc		1286289	3					
ANR	1286441	UnaryOperationExpression	& enc		1286289	0					
ANR	1286442	UnaryOperator	&		1286289	0					
ANR	1286443	Identifier	enc		1286289	1					
ANR	1286444	Argument	sizeof ( encodePtr )		1286289	4					
ANR	1286445	SizeofExpression	sizeof ( encodePtr )		1286289	0					
ANR	1286446	Sizeof	sizeof		1286289	0					
ANR	1286447	SizeofOperand	encodePtr		1286289	1					
ANR	1286448	Argument	NULL		1286289	5					
ANR	1286449	Identifier	NULL		1286289	0					
ANR	1286450	ExpressionStatement	efree ( ns_type )	553:4:19275:19289	1286289	3	True				
ANR	1286451	CallExpression	efree ( ns_type )		1286289	0					
ANR	1286452	Callee	efree		1286289	0					
ANR	1286453	Identifier	efree		1286289	0					
ANR	1286454	ArgumentList	ns_type		1286289	1					
ANR	1286455	Argument	ns_type		1286289	0					
ANR	1286456	Identifier	ns_type		1286289	0					
ANR	1286457	ElseStatement	else		1286289	0					
ANR	1286458	CompoundStatement		20:10:594:594	1286289	0					
ANR	1286459	ExpressionStatement	"zend_hash_add ( & defEnc , defaultEncoding [ i ] . details . type_str , strlen ( defaultEncoding [ i ] . details . type_str ) + 1 , & enc , sizeof ( encodePtr ) , NULL )"	555:4:19307:19446	1286289	0	True				
ANR	1286460	CallExpression	"zend_hash_add ( & defEnc , defaultEncoding [ i ] . details . type_str , strlen ( defaultEncoding [ i ] . details . type_str ) + 1 , & enc , sizeof ( encodePtr ) , NULL )"		1286289	0					
ANR	1286461	Callee	zend_hash_add		1286289	0					
ANR	1286462	Identifier	zend_hash_add		1286289	0					
ANR	1286463	ArgumentList	& defEnc		1286289	1					
ANR	1286464	Argument	& defEnc		1286289	0					
ANR	1286465	UnaryOperationExpression	& defEnc		1286289	0					
ANR	1286466	UnaryOperator	&		1286289	0					
ANR	1286467	Identifier	defEnc		1286289	1					
ANR	1286468	Argument	defaultEncoding [ i ] . details . type_str		1286289	1					
ANR	1286469	MemberAccess	defaultEncoding [ i ] . details . type_str		1286289	0					
ANR	1286470	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286471	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286472	Identifier	defaultEncoding		1286289	0					
ANR	1286473	Identifier	i		1286289	1					
ANR	1286474	Identifier	details		1286289	1					
ANR	1286475	Identifier	type_str		1286289	1					
ANR	1286476	Argument	strlen ( defaultEncoding [ i ] . details . type_str ) + 1		1286289	2					
ANR	1286477	AdditiveExpression	strlen ( defaultEncoding [ i ] . details . type_str ) + 1		1286289	0		+			
ANR	1286478	CallExpression	strlen ( defaultEncoding [ i ] . details . type_str )		1286289	0					
ANR	1286479	Callee	strlen		1286289	0					
ANR	1286480	Identifier	strlen		1286289	0					
ANR	1286481	ArgumentList	defaultEncoding [ i ] . details . type_str		1286289	1					
ANR	1286482	Argument	defaultEncoding [ i ] . details . type_str		1286289	0					
ANR	1286483	MemberAccess	defaultEncoding [ i ] . details . type_str		1286289	0					
ANR	1286484	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286485	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286486	Identifier	defaultEncoding		1286289	0					
ANR	1286487	Identifier	i		1286289	1					
ANR	1286488	Identifier	details		1286289	1					
ANR	1286489	Identifier	type_str		1286289	1					
ANR	1286490	PrimaryExpression	1		1286289	1					
ANR	1286491	Argument	& enc		1286289	3					
ANR	1286492	UnaryOperationExpression	& enc		1286289	0					
ANR	1286493	UnaryOperator	&		1286289	0					
ANR	1286494	Identifier	enc		1286289	1					
ANR	1286495	Argument	sizeof ( encodePtr )		1286289	4					
ANR	1286496	SizeofExpression	sizeof ( encodePtr )		1286289	0					
ANR	1286497	Sizeof	sizeof		1286289	0					
ANR	1286498	SizeofOperand	encodePtr		1286289	1					
ANR	1286499	Argument	NULL		1286289	5					
ANR	1286500	Identifier	NULL		1286289	0					
ANR	1286501	IfStatement	"if ( ! zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type ) )"		1286289	2					
ANR	1286502	Condition	"! zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type )"	559:6:19498:19567	1286289	0	True				
ANR	1286503	UnaryOperationExpression	"! zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type )"		1286289	0					
ANR	1286504	UnaryOperator	!		1286289	0					
ANR	1286505	CallExpression	"zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type )"		1286289	1					
ANR	1286506	Callee	zend_hash_index_exists		1286289	0					
ANR	1286507	Identifier	zend_hash_index_exists		1286289	0					
ANR	1286508	ArgumentList	& defEncIndex		1286289	1					
ANR	1286509	Argument	& defEncIndex		1286289	0					
ANR	1286510	UnaryOperationExpression	& defEncIndex		1286289	0					
ANR	1286511	UnaryOperator	&		1286289	0					
ANR	1286512	Identifier	defEncIndex		1286289	1					
ANR	1286513	Argument	defaultEncoding [ i ] . details . type		1286289	1					
ANR	1286514	MemberAccess	defaultEncoding [ i ] . details . type		1286289	0					
ANR	1286515	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286516	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286517	Identifier	defaultEncoding		1286289	0					
ANR	1286518	Identifier	i		1286289	1					
ANR	1286519	Identifier	details		1286289	1					
ANR	1286520	Identifier	type		1286289	1					
ANR	1286521	CompoundStatement		25:78:863:863	1286289	1					
ANR	1286522	ExpressionStatement	"zend_hash_index_update ( & defEncIndex , defaultEncoding [ i ] . details . type , & enc , sizeof ( encodePtr ) , NULL )"	560:3:19575:19675	1286289	0	True				
ANR	1286523	CallExpression	"zend_hash_index_update ( & defEncIndex , defaultEncoding [ i ] . details . type , & enc , sizeof ( encodePtr ) , NULL )"		1286289	0					
ANR	1286524	Callee	zend_hash_index_update		1286289	0					
ANR	1286525	Identifier	zend_hash_index_update		1286289	0					
ANR	1286526	ArgumentList	& defEncIndex		1286289	1					
ANR	1286527	Argument	& defEncIndex		1286289	0					
ANR	1286528	UnaryOperationExpression	& defEncIndex		1286289	0					
ANR	1286529	UnaryOperator	&		1286289	0					
ANR	1286530	Identifier	defEncIndex		1286289	1					
ANR	1286531	Argument	defaultEncoding [ i ] . details . type		1286289	1					
ANR	1286532	MemberAccess	defaultEncoding [ i ] . details . type		1286289	0					
ANR	1286533	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286534	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286535	Identifier	defaultEncoding		1286289	0					
ANR	1286536	Identifier	i		1286289	1					
ANR	1286537	Identifier	details		1286289	1					
ANR	1286538	Identifier	type		1286289	1					
ANR	1286539	Argument	& enc		1286289	2					
ANR	1286540	UnaryOperationExpression	& enc		1286289	0					
ANR	1286541	UnaryOperator	&		1286289	0					
ANR	1286542	Identifier	enc		1286289	1					
ANR	1286543	Argument	sizeof ( encodePtr )		1286289	3					
ANR	1286544	SizeofExpression	sizeof ( encodePtr )		1286289	0					
ANR	1286545	Sizeof	sizeof		1286289	0					
ANR	1286546	SizeofOperand	encodePtr		1286289	1					
ANR	1286547	Argument	NULL		1286289	4					
ANR	1286548	Identifier	NULL		1286289	0					
ANR	1286549	ExpressionStatement	i ++	562:2:19683:19686	1286289	3	True				
ANR	1286550	PostIncDecOperationExpression	i ++		1286289	0					
ANR	1286551	Identifier	i		1286289	0					
ANR	1286552	IncDec	++		1286289	1					
ANR	1286553	Condition	defaultEncoding [ i ] . details . type != END_KNOWN_TYPES	563:10:19698:19747	1286289	1	True				
ANR	1286554	EqualityExpression	defaultEncoding [ i ] . details . type != END_KNOWN_TYPES		1286289	0		!=			
ANR	1286555	MemberAccess	defaultEncoding [ i ] . details . type		1286289	0					
ANR	1286556	MemberAccess	defaultEncoding [ i ] . details		1286289	0					
ANR	1286557	ArrayIndexing	defaultEncoding [ i ]		1286289	0					
ANR	1286558	Identifier	defaultEncoding		1286289	0					
ANR	1286559	Identifier	i		1286289	1					
ANR	1286560	Identifier	details		1286289	1					
ANR	1286561	Identifier	type		1286289	1					
ANR	1286562	Identifier	END_KNOWN_TYPES		1286289	1					
ANR	1286563	ExpressionStatement	"zend_hash_add ( & defEncNs , XSD_1999_NAMESPACE , sizeof ( XSD_1999_NAMESPACE ) , XSD_NS_PREFIX , sizeof ( XSD_NS_PREFIX ) , NULL )"	566:1:19778:19894	1286289	7	True				
ANR	1286564	CallExpression	"zend_hash_add ( & defEncNs , XSD_1999_NAMESPACE , sizeof ( XSD_1999_NAMESPACE ) , XSD_NS_PREFIX , sizeof ( XSD_NS_PREFIX ) , NULL )"		1286289	0					
ANR	1286565	Callee	zend_hash_add		1286289	0					
ANR	1286566	Identifier	zend_hash_add		1286289	0					
ANR	1286567	ArgumentList	& defEncNs		1286289	1					
ANR	1286568	Argument	& defEncNs		1286289	0					
ANR	1286569	UnaryOperationExpression	& defEncNs		1286289	0					
ANR	1286570	UnaryOperator	&		1286289	0					
ANR	1286571	Identifier	defEncNs		1286289	1					
ANR	1286572	Argument	XSD_1999_NAMESPACE		1286289	1					
ANR	1286573	Identifier	XSD_1999_NAMESPACE		1286289	0					
ANR	1286574	Argument	sizeof ( XSD_1999_NAMESPACE )		1286289	2					
ANR	1286575	SizeofExpression	sizeof ( XSD_1999_NAMESPACE )		1286289	0					
ANR	1286576	Sizeof	sizeof		1286289	0					
ANR	1286577	SizeofOperand	XSD_1999_NAMESPACE		1286289	1					
ANR	1286578	Argument	XSD_NS_PREFIX		1286289	3					
ANR	1286579	Identifier	XSD_NS_PREFIX		1286289	0					
ANR	1286580	Argument	sizeof ( XSD_NS_PREFIX )		1286289	4					
ANR	1286581	SizeofExpression	sizeof ( XSD_NS_PREFIX )		1286289	0					
ANR	1286582	Sizeof	sizeof		1286289	0					
ANR	1286583	SizeofOperand	XSD_NS_PREFIX		1286289	1					
ANR	1286584	Argument	NULL		1286289	5					
ANR	1286585	Identifier	NULL		1286289	0					
ANR	1286586	ExpressionStatement	"zend_hash_add ( & defEncNs , XSD_NAMESPACE , sizeof ( XSD_NAMESPACE ) , XSD_NS_PREFIX , sizeof ( XSD_NS_PREFIX ) , NULL )"	567:1:19897:20003	1286289	8	True				
ANR	1286587	CallExpression	"zend_hash_add ( & defEncNs , XSD_NAMESPACE , sizeof ( XSD_NAMESPACE ) , XSD_NS_PREFIX , sizeof ( XSD_NS_PREFIX ) , NULL )"		1286289	0					
ANR	1286588	Callee	zend_hash_add		1286289	0					
ANR	1286589	Identifier	zend_hash_add		1286289	0					
ANR	1286590	ArgumentList	& defEncNs		1286289	1					
ANR	1286591	Argument	& defEncNs		1286289	0					
ANR	1286592	UnaryOperationExpression	& defEncNs		1286289	0					
ANR	1286593	UnaryOperator	&		1286289	0					
ANR	1286594	Identifier	defEncNs		1286289	1					
ANR	1286595	Argument	XSD_NAMESPACE		1286289	1					
ANR	1286596	Identifier	XSD_NAMESPACE		1286289	0					
ANR	1286597	Argument	sizeof ( XSD_NAMESPACE )		1286289	2					
ANR	1286598	SizeofExpression	sizeof ( XSD_NAMESPACE )		1286289	0					
ANR	1286599	Sizeof	sizeof		1286289	0					
ANR	1286600	SizeofOperand	XSD_NAMESPACE		1286289	1					
ANR	1286601	Argument	XSD_NS_PREFIX		1286289	3					
ANR	1286602	Identifier	XSD_NS_PREFIX		1286289	0					
ANR	1286603	Argument	sizeof ( XSD_NS_PREFIX )		1286289	4					
ANR	1286604	SizeofExpression	sizeof ( XSD_NS_PREFIX )		1286289	0					
ANR	1286605	Sizeof	sizeof		1286289	0					
ANR	1286606	SizeofOperand	XSD_NS_PREFIX		1286289	1					
ANR	1286607	Argument	NULL		1286289	5					
ANR	1286608	Identifier	NULL		1286289	0					
ANR	1286609	ExpressionStatement	"zend_hash_add ( & defEncNs , XSI_NAMESPACE , sizeof ( XSI_NAMESPACE ) , XSI_NS_PREFIX , sizeof ( XSI_NS_PREFIX ) , NULL )"	568:1:20006:20112	1286289	9	True				
ANR	1286610	CallExpression	"zend_hash_add ( & defEncNs , XSI_NAMESPACE , sizeof ( XSI_NAMESPACE ) , XSI_NS_PREFIX , sizeof ( XSI_NS_PREFIX ) , NULL )"		1286289	0					
ANR	1286611	Callee	zend_hash_add		1286289	0					
ANR	1286612	Identifier	zend_hash_add		1286289	0					
ANR	1286613	ArgumentList	& defEncNs		1286289	1					
ANR	1286614	Argument	& defEncNs		1286289	0					
ANR	1286615	UnaryOperationExpression	& defEncNs		1286289	0					
ANR	1286616	UnaryOperator	&		1286289	0					
ANR	1286617	Identifier	defEncNs		1286289	1					
ANR	1286618	Argument	XSI_NAMESPACE		1286289	1					
ANR	1286619	Identifier	XSI_NAMESPACE		1286289	0					
ANR	1286620	Argument	sizeof ( XSI_NAMESPACE )		1286289	2					
ANR	1286621	SizeofExpression	sizeof ( XSI_NAMESPACE )		1286289	0					
ANR	1286622	Sizeof	sizeof		1286289	0					
ANR	1286623	SizeofOperand	XSI_NAMESPACE		1286289	1					
ANR	1286624	Argument	XSI_NS_PREFIX		1286289	3					
ANR	1286625	Identifier	XSI_NS_PREFIX		1286289	0					
ANR	1286626	Argument	sizeof ( XSI_NS_PREFIX )		1286289	4					
ANR	1286627	SizeofExpression	sizeof ( XSI_NS_PREFIX )		1286289	0					
ANR	1286628	Sizeof	sizeof		1286289	0					
ANR	1286629	SizeofOperand	XSI_NS_PREFIX		1286289	1					
ANR	1286630	Argument	NULL		1286289	5					
ANR	1286631	Identifier	NULL		1286289	0					
ANR	1286632	ExpressionStatement	"zend_hash_add ( & defEncNs , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) , XML_NS_PREFIX , sizeof ( XML_NS_PREFIX ) , NULL )"	569:1:20115:20221	1286289	10	True				
ANR	1286633	CallExpression	"zend_hash_add ( & defEncNs , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) , XML_NS_PREFIX , sizeof ( XML_NS_PREFIX ) , NULL )"		1286289	0					
ANR	1286634	Callee	zend_hash_add		1286289	0					
ANR	1286635	Identifier	zend_hash_add		1286289	0					
ANR	1286636	ArgumentList	& defEncNs		1286289	1					
ANR	1286637	Argument	& defEncNs		1286289	0					
ANR	1286638	UnaryOperationExpression	& defEncNs		1286289	0					
ANR	1286639	UnaryOperator	&		1286289	0					
ANR	1286640	Identifier	defEncNs		1286289	1					
ANR	1286641	Argument	XML_NAMESPACE		1286289	1					
ANR	1286642	Identifier	XML_NAMESPACE		1286289	0					
ANR	1286643	Argument	sizeof ( XML_NAMESPACE )		1286289	2					
ANR	1286644	SizeofExpression	sizeof ( XML_NAMESPACE )		1286289	0					
ANR	1286645	Sizeof	sizeof		1286289	0					
ANR	1286646	SizeofOperand	XML_NAMESPACE		1286289	1					
ANR	1286647	Argument	XML_NS_PREFIX		1286289	3					
ANR	1286648	Identifier	XML_NS_PREFIX		1286289	0					
ANR	1286649	Argument	sizeof ( XML_NS_PREFIX )		1286289	4					
ANR	1286650	SizeofExpression	sizeof ( XML_NS_PREFIX )		1286289	0					
ANR	1286651	Sizeof	sizeof		1286289	0					
ANR	1286652	SizeofOperand	XML_NS_PREFIX		1286289	1					
ANR	1286653	Argument	NULL		1286289	5					
ANR	1286654	Identifier	NULL		1286289	0					
ANR	1286655	ExpressionStatement	"zend_hash_add ( & defEncNs , SOAP_1_1_ENC_NAMESPACE , sizeof ( SOAP_1_1_ENC_NAMESPACE ) , SOAP_1_1_ENC_NS_PREFIX , sizeof ( SOAP_1_1_ENC_NS_PREFIX ) , NULL )"	570:1:20224:20366	1286289	11	True				
ANR	1286656	CallExpression	"zend_hash_add ( & defEncNs , SOAP_1_1_ENC_NAMESPACE , sizeof ( SOAP_1_1_ENC_NAMESPACE ) , SOAP_1_1_ENC_NS_PREFIX , sizeof ( SOAP_1_1_ENC_NS_PREFIX ) , NULL )"		1286289	0					
ANR	1286657	Callee	zend_hash_add		1286289	0					
ANR	1286658	Identifier	zend_hash_add		1286289	0					
ANR	1286659	ArgumentList	& defEncNs		1286289	1					
ANR	1286660	Argument	& defEncNs		1286289	0					
ANR	1286661	UnaryOperationExpression	& defEncNs		1286289	0					
ANR	1286662	UnaryOperator	&		1286289	0					
ANR	1286663	Identifier	defEncNs		1286289	1					
ANR	1286664	Argument	SOAP_1_1_ENC_NAMESPACE		1286289	1					
ANR	1286665	Identifier	SOAP_1_1_ENC_NAMESPACE		1286289	0					
ANR	1286666	Argument	sizeof ( SOAP_1_1_ENC_NAMESPACE )		1286289	2					
ANR	1286667	SizeofExpression	sizeof ( SOAP_1_1_ENC_NAMESPACE )		1286289	0					
ANR	1286668	Sizeof	sizeof		1286289	0					
ANR	1286669	SizeofOperand	SOAP_1_1_ENC_NAMESPACE		1286289	1					
ANR	1286670	Argument	SOAP_1_1_ENC_NS_PREFIX		1286289	3					
ANR	1286671	Identifier	SOAP_1_1_ENC_NS_PREFIX		1286289	0					
ANR	1286672	Argument	sizeof ( SOAP_1_1_ENC_NS_PREFIX )		1286289	4					
ANR	1286673	SizeofExpression	sizeof ( SOAP_1_1_ENC_NS_PREFIX )		1286289	0					
ANR	1286674	Sizeof	sizeof		1286289	0					
ANR	1286675	SizeofOperand	SOAP_1_1_ENC_NS_PREFIX		1286289	1					
ANR	1286676	Argument	NULL		1286289	5					
ANR	1286677	Identifier	NULL		1286289	0					
ANR	1286678	ExpressionStatement	"zend_hash_add ( & defEncNs , SOAP_1_2_ENC_NAMESPACE , sizeof ( SOAP_1_2_ENC_NAMESPACE ) , SOAP_1_2_ENC_NS_PREFIX , sizeof ( SOAP_1_2_ENC_NS_PREFIX ) , NULL )"	571:1:20369:20511	1286289	12	True				
ANR	1286679	CallExpression	"zend_hash_add ( & defEncNs , SOAP_1_2_ENC_NAMESPACE , sizeof ( SOAP_1_2_ENC_NAMESPACE ) , SOAP_1_2_ENC_NS_PREFIX , sizeof ( SOAP_1_2_ENC_NS_PREFIX ) , NULL )"		1286289	0					
ANR	1286680	Callee	zend_hash_add		1286289	0					
ANR	1286681	Identifier	zend_hash_add		1286289	0					
ANR	1286682	ArgumentList	& defEncNs		1286289	1					
ANR	1286683	Argument	& defEncNs		1286289	0					
ANR	1286684	UnaryOperationExpression	& defEncNs		1286289	0					
ANR	1286685	UnaryOperator	&		1286289	0					
ANR	1286686	Identifier	defEncNs		1286289	1					
ANR	1286687	Argument	SOAP_1_2_ENC_NAMESPACE		1286289	1					
ANR	1286688	Identifier	SOAP_1_2_ENC_NAMESPACE		1286289	0					
ANR	1286689	Argument	sizeof ( SOAP_1_2_ENC_NAMESPACE )		1286289	2					
ANR	1286690	SizeofExpression	sizeof ( SOAP_1_2_ENC_NAMESPACE )		1286289	0					
ANR	1286691	Sizeof	sizeof		1286289	0					
ANR	1286692	SizeofOperand	SOAP_1_2_ENC_NAMESPACE		1286289	1					
ANR	1286693	Argument	SOAP_1_2_ENC_NS_PREFIX		1286289	3					
ANR	1286694	Identifier	SOAP_1_2_ENC_NS_PREFIX		1286289	0					
ANR	1286695	Argument	sizeof ( SOAP_1_2_ENC_NS_PREFIX )		1286289	4					
ANR	1286696	SizeofExpression	sizeof ( SOAP_1_2_ENC_NS_PREFIX )		1286289	0					
ANR	1286697	Sizeof	sizeof		1286289	0					
ANR	1286698	SizeofOperand	SOAP_1_2_ENC_NS_PREFIX		1286289	1					
ANR	1286699	Argument	NULL		1286289	5					
ANR	1286700	Identifier	NULL		1286289	0					
ANR	1286701	ReturnType	static void		1286289	1					
ANR	1286702	Identifier	php_soap_prepare_globals		1286289	2					
ANR	1286703	ParameterList			1286289	3					
ANR	1286704	CFGEntryNode	ENTRY		1286289		True				
ANR	1286705	CFGExitNode	EXIT		1286289		True				
ANR	1286706	Symbol	& defEncIndex		1286289						
ANR	1286707	Symbol	defaultEncoding [ i ] . details . type_str		1286289						
ANR	1286708	Symbol	& enc		1286289						
ANR	1286709	Symbol	zend_hash_index_exists		1286289						
ANR	1286710	Symbol	SOAP_1_1_ENC_NS_PREFIX		1286289						
ANR	1286711	Symbol	* defaultEncoding		1286289						
ANR	1286712	Symbol	& ns_type		1286289						
ANR	1286713	Symbol	strlen		1286289						
ANR	1286714	Symbol	XML_NS_PREFIX		1286289						
ANR	1286715	Symbol	& defEnc		1286289						
ANR	1286716	Symbol	defaultEncoding [ i ] . details . type		1286289						
ANR	1286717	Symbol	enc		1286289						
ANR	1286718	Symbol	XSD_NS_PREFIX		1286289						
ANR	1286719	Symbol	XSD_1999_NAMESPACE		1286289						
ANR	1286720	Symbol	NULL		1286289						
ANR	1286721	Symbol	defaultEncoding		1286289						
ANR	1286722	Symbol	SOAP_1_1_ENC_NAMESPACE		1286289						
ANR	1286723	Symbol	ns_type		1286289						
ANR	1286724	Symbol	i		1286289						
ANR	1286725	Symbol	XML_NAMESPACE		1286289						
ANR	1286726	Symbol	defaultEncoding [ i ] . details		1286289						
ANR	1286727	Symbol	defaultEncoding [ i ] . details . ns		1286289						
ANR	1286728	Symbol	SOAP_1_2_ENC_NS_PREFIX		1286289						
ANR	1286729	Symbol	* i		1286289						
ANR	1286730	Symbol	XSI_NS_PREFIX		1286289						
ANR	1286731	Symbol	& defEncNs		1286289						
ANR	1286732	Symbol	SOAP_1_2_ENC_NAMESPACE		1286289						
ANR	1286733	Symbol	END_KNOWN_TYPES		1286289						
ANR	1286734	Symbol	XSD_NAMESPACE		1286289						
ANR	1286735	Symbol	XSI_NAMESPACE		1286289						
ANR	1286736	DeclStmt									
ANR	1286737	Decl							zend_class_entry	zend_class_entry	ce
ANR	1286738	DeclStmt									
ANR	1286739	Decl							zend_internal_function	zend_internal_function	fe
ANR	1286740	DeclStmt									
ANR	1286741	Decl							zval	zval *	data
ANR	1286742	DeclStmt									
ANR	1286743	Decl							char	char *	name
ANR	1286744	DeclStmt									
ANR	1286745	Decl							int	int	name_length
ANR	1286746	DeclStmt									
ANR	1286747	Decl							zval	zval *	data
ANR	1286748	Decl							zval	zval *	actor
ANR	1286749	DeclStmt									
ANR	1286750	Decl							char	char *	name
ANR	1286751	Decl							char	char *	ns
ANR	1286752	DeclStmt									
ANR	1286753	Decl							int	int	name_len
ANR	1286754	Decl							int	int	ns_len
ANR	1286755	DeclStmt									
ANR	1286756	Decl							zend_bool	zend_bool	must_understand
ANR	1286757	DeclStmt									
ANR	1286758	Decl							char	char *	fault_string
ANR	1286759	Decl							char	char *	fault_code
ANR	1286760	Decl							char	char *	fault_actor
ANR	1286761	Decl							char	char *	name
ANR	1286762	Decl							char	char *	fault_code_ns
ANR	1286763	DeclStmt									
ANR	1286764	Decl							int	int	fault_string_len
ANR	1286765	Decl							int	int	fault_actor_len
ANR	1286766	Decl							int	int	name_len
ANR	1286767	Decl							int	int	fault_code_len
ANR	1286768	DeclStmt									
ANR	1286769	Decl							zval	zval *	code
ANR	1286770	Decl							zval	zval *	details
ANR	1286771	Decl							zval	zval *	headerfault
ANR	1286772	DeclStmt									
ANR	1286773	Decl							zval	zval * *	t_ns
ANR	1286774	Decl							zval	zval * *	t_code
ANR	1286775	DeclStmt									
ANR	1286776	Decl							zval	zval *	faultcode
ANR	1286777	Decl							zval	zval *	faultstring
ANR	1286778	Decl							zval	zval *	file
ANR	1286779	Decl							zval	zval *	line
ANR	1286780	Decl							zval	zval *	trace
ANR	1286781	DeclStmt									
ANR	1286782	Decl							zval	zval *	faultcode_cp
ANR	1286783	Decl							zval	zval *	faultstring_cp
ANR	1286784	Decl							zval	zval *	file_cp
ANR	1286785	Decl							zval	zval *	line_cp
ANR	1286786	DeclStmt									
ANR	1286787	Decl							char	char *	str
ANR	1286788	DeclStmt									
ANR	1286789	Decl							int	int	len
ANR	1286790	DeclStmt									
ANR	1286791	Decl							zend_fcall_info	zend_fcall_info	fci
ANR	1286792	DeclStmt									
ANR	1286793	Decl							zval	zval	fname
ANR	1286794	DeclStmt									
ANR	1286795	Decl							zval	zval *	data
ANR	1286796	Decl							zval	zval *	type
ANR	1286797	DeclStmt									
ANR	1286798	Decl							char	char *	stype
ANR	1286799	Decl							char	char *	ns
ANR	1286800	Decl							char	char *	name
ANR	1286801	Decl							char	char *	namens
ANR	1286802	DeclStmt									
ANR	1286803	Decl							int	int	stype_len
ANR	1286804	Decl							int	int	ns_len
ANR	1286805	Decl							int	int	name_len
ANR	1286806	Decl							int	int	namens_len
ANR	1286807	DeclStmt									
ANR	1286808	Decl							zval	zval * *	tmp
ANR	1286809	DeclStmt									
ANR	1286810	Decl							HashTable	HashTable *	ht2
ANR	1286811	DeclStmt									
ANR	1286812	Decl							HashPosition	HashPosition	pos1
ANR	1286813	Decl							HashPosition	HashPosition	pos2
ANR	1286814	DeclStmt									
ANR	1286815	Decl							HashTable	HashTable *	typemap
ANR	1286816	DeclStmt									
ANR	1286817	Decl							char	char *	type_name
ANR	1286818	DeclStmt									
ANR	1286819	Decl							char	char *	type_ns
ANR	1286820	DeclStmt									
ANR	1286821	Decl							zval	zval *	to_xml
ANR	1286822	DeclStmt									
ANR	1286823	Decl							zval	zval *	to_zval
ANR	1286824	DeclStmt									
ANR	1286825	Decl							encodePtr	encodePtr	enc
ANR	1286826	Decl							encodePtr	encodePtr	new_enc
ANR	1286827	DeclStmt									
ANR	1286828	Decl							char	char *	name
ANR	1286829	DeclStmt									
ANR	1286830	Decl							unsigned int	unsigned int	name_len
ANR	1286831	DeclStmt									
ANR	1286832	Decl							ulong	ulong	index
ANR	1286833	DeclStmt									
ANR	1286834	Decl							smart_str	smart_str	nscat
ANR	1286835	DeclStmt									
ANR	1286836	Decl							soapServicePtr	soapServicePtr	service
ANR	1286837	DeclStmt									
ANR	1286838	Decl							zval	zval *	wsdl
ANR	1286839	Decl							zval	zval *	options
ANR	1286840	DeclStmt									
ANR	1286841	Decl							int	int	ret
ANR	1286842	DeclStmt									
ANR	1286843	Decl							int	int	version
ANR	1286844	DeclStmt									
ANR	1286845	Decl							long	long	cache_wsdl
ANR	1286846	DeclStmt									
ANR	1286847	Decl							HashTable	HashTable *	typemap_ht
ANR	1286848	DeclStmt									
ANR	1286849	Decl							HashTable	HashTable *	ht
ANR	1286850	DeclStmt									
ANR	1286851	Decl							zval	zval * *	tmp
ANR	1286852	DeclStmt									
ANR	1286853	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	encoding
ANR	1286854	DeclStmt									
ANR	1286855	Decl							zval	zval *	ztmp
ANR	1286856	DeclStmt									
ANR	1286857	Decl							soapServicePtr	soapServicePtr	service
ANR	1286858	DeclStmt									
ANR	1286859	Decl							long	long	value
ANR	1286860	DeclStmt									
ANR	1286861	Decl							soapServicePtr	soapServicePtr	service
ANR	1286862	DeclStmt									
ANR	1286863	Decl							char	char *	classname
ANR	1286864	DeclStmt									
ANR	1286865	Decl							zend_class_entry	zend_class_entry * *	ce
ANR	1286866	DeclStmt									
ANR	1286867	Decl							int	int	classname_len
ANR	1286868	Decl							int	int	found
ANR	1286869	Decl							int	int	num_args
ANR	1286870	DeclStmt									
ANR	1286871	Decl							zval	zval * * *	argv
ANR	1286872	DeclStmt									
ANR	1286873	Decl							int	int	i
ANR	1286874	DeclStmt									
ANR	1286875	Decl							soapServicePtr	soapServicePtr	service
ANR	1286876	DeclStmt									
ANR	1286877	Decl							zval	zval *	obj
ANR	1286878	DeclStmt									
ANR	1286879	Decl							soapServicePtr	soapServicePtr	service
ANR	1286880	DeclStmt									
ANR	1286881	Decl							HashTable	HashTable *	ft
ANR	1286882	DeclStmt									
ANR	1286883	Decl							zval	zval * *	name
ANR	1286884	DeclStmt									
ANR	1286885	Decl							HashPosition	HashPosition	pos
ANR	1286886	DeclStmt									
ANR	1286887	Decl							zend_function	zend_function *	f
ANR	1286888	DeclStmt									
ANR	1286889	Decl							HashPosition	HashPosition	pos
ANR	1286890	DeclStmt									
ANR	1286891	Decl							soapServicePtr	soapServicePtr	service
ANR	1286892	DeclStmt									
ANR	1286893	Decl							zval	zval *	function_name
ANR	1286894	Decl							zval	zval *	function_copy
ANR	1286895	DeclStmt									
ANR	1286896	Decl							HashPosition	HashPosition	pos
ANR	1286897	DeclStmt									
ANR	1286898	Decl							zval	zval * *	tmp_function
ANR	1286899	Decl							zval	zval *	function_copy
ANR	1286900	DeclStmt									
ANR	1286901	Decl							char	char *	key
ANR	1286902	DeclStmt									
ANR	1286903	Decl							int	int	key_len
ANR	1286904	DeclStmt									
ANR	1286905	Decl							zend_function	zend_function *	f
ANR	1286906	DeclStmt									
ANR	1286907	Decl							char	char *	key
ANR	1286908	DeclStmt									
ANR	1286909	Decl							int	int	key_len
ANR	1286910	DeclStmt									
ANR	1286911	Decl							zend_function	zend_function *	f
ANR	1286912	DeclStmt									
ANR	1286913	Decl							int	int	soap_version
ANR	1286914	Decl							int	int	old_soap_version
ANR	1286915	DeclStmt									
ANR	1286916	Decl							sdlPtr	sdlPtr	old_sdl
ANR	1286917	DeclStmt									
ANR	1286918	Decl							soapServicePtr	soapServicePtr	service
ANR	1286919	DeclStmt									
ANR	1286920	Decl							xmlDocPtr	xmlDocPtr	doc_request
ANR	1286921	Decl							xmlDocPtr	xmlDocPtr	doc_return
ANR	1286922	DeclStmt									
ANR	1286923	Decl							zval	zval	function_name
ANR	1286924	Decl							zval	zval * *	params
ANR	1286925	Decl							zval	zval *	soap_obj
ANR	1286926	Decl							zval	zval *	retval
ANR	1286927	DeclStmt									
ANR	1286928	Decl							char	char *	fn_name
ANR	1286929	Decl							char	char [ 30 ]	cont_len
ANR	1286930	DeclStmt									
ANR	1286931	Decl							int	int	num_params
ANR	1286932	Decl							int	int	size
ANR	1286933	Decl							int	int	i
ANR	1286934	Decl							int	int	call_status
ANR	1286935	DeclStmt									
ANR	1286936	Decl							xmlChar	xmlChar *	buf
ANR	1286937	DeclStmt									
ANR	1286938	Decl							HashTable	HashTable *	function_table
ANR	1286939	DeclStmt									
ANR	1286940	Decl							soapHeader	soapHeader *	soap_headers
ANR	1286941	DeclStmt									
ANR	1286942	Decl							sdlFunctionPtr	sdlFunctionPtr	function
ANR	1286943	DeclStmt									
ANR	1286944	Decl							char	char *	arg
ANR	1286945	DeclStmt									
ANR	1286946	Decl							int	int	arg_len
ANR	1286947	DeclStmt									
ANR	1286948	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	old_encoding
ANR	1286949	DeclStmt									
ANR	1286950	Decl							HashTable	HashTable *	old_class_map
ANR	1286951	Decl							HashTable	HashTable *	old_typemap
ANR	1286952	DeclStmt									
ANR	1286953	Decl							int	int	old_features
ANR	1286954	DeclStmt									
ANR	1286955	Decl							zval	zval	readfile
ANR	1286956	Decl							zval	zval	readfile_ret
ANR	1286957	Decl							zval	zval *	param
ANR	1286958	DeclStmt									
ANR	1286959	Decl							zval	zval * *	server_vars
ANR	1286960	Decl							zval	zval * *	encoding
ANR	1286961	DeclStmt									
ANR	1286962	Decl							php_stream_filter	php_stream_filter *	zf
ANR	1286963	DeclStmt									
ANR	1286964	Decl							zval	zval	filter_params
ANR	1286965	DeclStmt									
ANR	1286966	Decl							xmlNodePtr	xmlNodePtr	env
ANR	1286967	DeclStmt									
ANR	1286968	Decl							zval	zval * *	tmp_soap
ANR	1286969	DeclStmt									
ANR	1286970	Decl							zval	zval *	tmp_soap
ANR	1286971	DeclStmt									
ANR	1286972	Decl							zval	zval	c_ret
ANR	1286973	Decl							zval	zval	constructor
ANR	1286974	DeclStmt									
ANR	1286975	Decl							int	int	class_name_len
ANR	1286976	DeclStmt									
ANR	1286977	Decl							char	char *	class_name
ANR	1286978	DeclStmt									
ANR	1286979	Decl							zval	zval	c_ret
ANR	1286980	Decl							zval	zval	constructor
ANR	1286981	DeclStmt									
ANR	1286982	Decl							zval	zval * *	tmp_soap_pp
ANR	1286983	DeclStmt									
ANR	1286984	Decl							soapHeader	soapHeader *	header
ANR	1286985	DeclStmt									
ANR	1286986	Decl							soapHeader	soapHeader *	h
ANR	1286987	DeclStmt									
ANR	1286988	Decl							zval	zval *	headerfault
ANR	1286989	Decl							zval	zval * *	tmp
ANR	1286990	DeclStmt									
ANR	1286991	Decl							zval	zval *	headerfault
ANR	1286992	Decl							zval	zval * *	tmp
ANR	1286993	DeclStmt									
ANR	1286994	Decl							char	char *	response_name
ANR	1286995	DeclStmt									
ANR	1286996	Decl							soapHeader	soapHeader *	h
ANR	1286997	DeclStmt									
ANR	1286998	Decl							int	int	i
ANR	1286999	DeclStmt									
ANR	1287000	Decl							char	char *	code
ANR	1287001	Decl							char	char *	string
ANR	1287002	Decl							char	char *	actor
ANR	1287003	Decl							char	char *	name
ANR	1287004	DeclStmt									
ANR	1287005	Decl							int	int	code_len
ANR	1287006	Decl							int	int	string_len
ANR	1287007	Decl							int	int	actor_len
ANR	1287008	Decl							int	int	name_len
ANR	1287009	DeclStmt									
ANR	1287010	Decl							zval	zval *	details
ANR	1287011	DeclStmt									
ANR	1287012	Decl							soapServicePtr	soapServicePtr	service
ANR	1287013	DeclStmt									
ANR	1287014	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	old_encoding
ANR	1287015	DeclStmt									
ANR	1287016	Decl							soapServicePtr	soapServicePtr	service
ANR	1287017	DeclStmt									
ANR	1287018	Decl							zval	zval *	fault
ANR	1287019	DeclStmt									
ANR	1287020	Decl							soapHeader	soapHeader * *	p
ANR	1287021	DeclStmt									
ANR	1287022	Decl							int	int	soap_version
ANR	1287023	DeclStmt									
ANR	1287024	Decl							xmlChar	xmlChar *	buf
ANR	1287025	DeclStmt									
ANR	1287026	Decl							char	char [ 30 ]	cont_len
ANR	1287027	DeclStmt									
ANR	1287028	Decl							int	int	size
ANR	1287029	DeclStmt									
ANR	1287030	Decl							xmlDocPtr	xmlDocPtr	doc_return
ANR	1287031	DeclStmt									
ANR	1287032	Decl							zval	zval * *	agent_name
ANR	1287033	DeclStmt									
ANR	1287034	Decl							int	int	use_http_error_status
ANR	1287035	DeclStmt									
ANR	1287036	Decl							zval	zval	ret
ANR	1287037	Function	soap_error_handler	2145:0:75209:81072							
ANR	1287038	FunctionDef	"soap_error_handler (int error_num , const char * error_filename , const uint error_lineno , const char * format , va_list args)"		1287037	0					
ANR	1287039	CompoundStatement		2146:0:75342:81072	1287037	0					
ANR	1287040	IdentifierDeclStatement	"zend_bool _old_in_compilation , _old_in_execution ;"	2147:1:75345:75393	1287037	0	True				
ANR	1287041	IdentifierDecl	_old_in_compilation		1287037	0					
ANR	1287042	IdentifierDeclType	zend_bool		1287037	0					
ANR	1287043	Identifier	_old_in_compilation		1287037	1					
ANR	1287044	IdentifierDecl	_old_in_execution		1287037	1					
ANR	1287045	IdentifierDeclType	zend_bool		1287037	0					
ANR	1287046	Identifier	_old_in_execution		1287037	1					
ANR	1287047	IdentifierDeclStatement	zend_execute_data * _old_current_execute_data ;	2148:1:75396:75440	1287037	1	True				
ANR	1287048	IdentifierDecl	* _old_current_execute_data		1287037	0					
ANR	1287049	IdentifierDeclType	zend_execute_data *		1287037	0					
ANR	1287050	Identifier	_old_current_execute_data		1287037	1					
ANR	1287051	IdentifierDeclStatement	int _old_http_response_code ;	2149:1:75443:75470	1287037	2	True				
ANR	1287052	IdentifierDecl	_old_http_response_code		1287037	0					
ANR	1287053	IdentifierDeclType	int		1287037	0					
ANR	1287054	Identifier	_old_http_response_code		1287037	1					
ANR	1287055	IdentifierDeclStatement	char * _old_http_status_line ;	2150:1:75473:75500	1287037	3	True				
ANR	1287056	IdentifierDecl	* _old_http_status_line		1287037	0					
ANR	1287057	IdentifierDeclType	char *		1287037	0					
ANR	1287058	Identifier	_old_http_status_line		1287037	1					
ANR	1287059	ExpressionStatement	TSRMLS_FETCH ( )	2151:1:75503:75517	1287037	4	True				
ANR	1287060	CallExpression	TSRMLS_FETCH ( )		1287037	0					
ANR	1287061	Callee	TSRMLS_FETCH		1287037	0					
ANR	1287062	Identifier	TSRMLS_FETCH		1287037	0					
ANR	1287063	ArgumentList			1287037	1					
ANR	1287064	ExpressionStatement	_old_in_compilation = CG ( in_compilation )	2153:1:75521:75561	1287037	5	True				
ANR	1287065	AssignmentExpression	_old_in_compilation = CG ( in_compilation )		1287037	0		=			
ANR	1287066	Identifier	_old_in_compilation		1287037	0					
ANR	1287067	CallExpression	CG ( in_compilation )		1287037	1					
ANR	1287068	Callee	CG		1287037	0					
ANR	1287069	Identifier	CG		1287037	0					
ANR	1287070	ArgumentList	in_compilation		1287037	1					
ANR	1287071	Argument	in_compilation		1287037	0					
ANR	1287072	Identifier	in_compilation		1287037	0					
ANR	1287073	ExpressionStatement	_old_in_execution = EG ( in_execution )	2154:1:75564:75600	1287037	6	True				
ANR	1287074	AssignmentExpression	_old_in_execution = EG ( in_execution )		1287037	0		=			
ANR	1287075	Identifier	_old_in_execution		1287037	0					
ANR	1287076	CallExpression	EG ( in_execution )		1287037	1					
ANR	1287077	Callee	EG		1287037	0					
ANR	1287078	Identifier	EG		1287037	0					
ANR	1287079	ArgumentList	in_execution		1287037	1					
ANR	1287080	Argument	in_execution		1287037	0					
ANR	1287081	Identifier	in_execution		1287037	0					
ANR	1287082	ExpressionStatement	_old_current_execute_data = EG ( current_execute_data )	2155:1:75603:75655	1287037	7	True				
ANR	1287083	AssignmentExpression	_old_current_execute_data = EG ( current_execute_data )		1287037	0		=			
ANR	1287084	Identifier	_old_current_execute_data		1287037	0					
ANR	1287085	CallExpression	EG ( current_execute_data )		1287037	1					
ANR	1287086	Callee	EG		1287037	0					
ANR	1287087	Identifier	EG		1287037	0					
ANR	1287088	ArgumentList	current_execute_data		1287037	1					
ANR	1287089	Argument	current_execute_data		1287037	0					
ANR	1287090	Identifier	current_execute_data		1287037	0					
ANR	1287091	ExpressionStatement	_old_http_response_code = SG ( sapi_headers ) . http_response_code	2156:1:75658:75719	1287037	8	True				
ANR	1287092	AssignmentExpression	_old_http_response_code = SG ( sapi_headers ) . http_response_code		1287037	0		=			
ANR	1287093	Identifier	_old_http_response_code		1287037	0					
ANR	1287094	MemberAccess	SG ( sapi_headers ) . http_response_code		1287037	1					
ANR	1287095	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287096	Callee	SG		1287037	0					
ANR	1287097	Identifier	SG		1287037	0					
ANR	1287098	ArgumentList	sapi_headers		1287037	1					
ANR	1287099	Argument	sapi_headers		1287037	0					
ANR	1287100	Identifier	sapi_headers		1287037	0					
ANR	1287101	Identifier	http_response_code		1287037	1					
ANR	1287102	ExpressionStatement	_old_http_status_line = SG ( sapi_headers ) . http_status_line	2157:1:75722:75779	1287037	9	True				
ANR	1287103	AssignmentExpression	_old_http_status_line = SG ( sapi_headers ) . http_status_line		1287037	0		=			
ANR	1287104	Identifier	_old_http_status_line		1287037	0					
ANR	1287105	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	1					
ANR	1287106	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287107	Callee	SG		1287037	0					
ANR	1287108	Identifier	SG		1287037	0					
ANR	1287109	ArgumentList	sapi_headers		1287037	1					
ANR	1287110	Argument	sapi_headers		1287037	0					
ANR	1287111	Identifier	sapi_headers		1287037	0					
ANR	1287112	Identifier	http_status_line		1287037	1					
ANR	1287113	IfStatement	if ( ! PG ( modules_activated ) || ! SOAP_GLOBAL ( use_soap_error_handler ) || ! EG ( objects_store ) . object_buckets )		1287037	10					
ANR	1287114	Condition	! PG ( modules_activated ) || ! SOAP_GLOBAL ( use_soap_error_handler ) || ! EG ( objects_store ) . object_buckets	2159:5:75787:75885	1287037	0	True				
ANR	1287115	OrExpression	! PG ( modules_activated ) || ! SOAP_GLOBAL ( use_soap_error_handler ) || ! EG ( objects_store ) . object_buckets		1287037	0		||			
ANR	1287116	UnaryOperationExpression	! PG ( modules_activated )		1287037	0					
ANR	1287117	UnaryOperator	!		1287037	0					
ANR	1287118	CallExpression	PG ( modules_activated )		1287037	1					
ANR	1287119	Callee	PG		1287037	0					
ANR	1287120	Identifier	PG		1287037	0					
ANR	1287121	ArgumentList	modules_activated		1287037	1					
ANR	1287122	Argument	modules_activated		1287037	0					
ANR	1287123	Identifier	modules_activated		1287037	0					
ANR	1287124	OrExpression	! SOAP_GLOBAL ( use_soap_error_handler ) || ! EG ( objects_store ) . object_buckets		1287037	1		||			
ANR	1287125	UnaryOperationExpression	! SOAP_GLOBAL ( use_soap_error_handler )		1287037	0					
ANR	1287126	UnaryOperator	!		1287037	0					
ANR	1287127	CallExpression	SOAP_GLOBAL ( use_soap_error_handler )		1287037	1					
ANR	1287128	Callee	SOAP_GLOBAL		1287037	0					
ANR	1287129	Identifier	SOAP_GLOBAL		1287037	0					
ANR	1287130	ArgumentList	use_soap_error_handler		1287037	1					
ANR	1287131	Argument	use_soap_error_handler		1287037	0					
ANR	1287132	Identifier	use_soap_error_handler		1287037	0					
ANR	1287133	UnaryOperationExpression	! EG ( objects_store ) . object_buckets		1287037	1					
ANR	1287134	UnaryOperator	!		1287037	0					
ANR	1287135	MemberAccess	EG ( objects_store ) . object_buckets		1287037	1					
ANR	1287136	CallExpression	EG ( objects_store )		1287037	0					
ANR	1287137	Callee	EG		1287037	0					
ANR	1287138	Identifier	EG		1287037	0					
ANR	1287139	ArgumentList	objects_store		1287037	1					
ANR	1287140	Argument	objects_store		1287037	0					
ANR	1287141	Identifier	objects_store		1287037	0					
ANR	1287142	Identifier	object_buckets		1287037	1					
ANR	1287143	CompoundStatement		14:106:545:545	1287037	1					
ANR	1287144	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2160:2:75892:75969	1287037	0	True				
ANR	1287145	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1287037	0					
ANR	1287146	Callee	call_old_error_handler		1287037	0					
ANR	1287147	Identifier	call_old_error_handler		1287037	0					
ANR	1287148	ArgumentList	error_num		1287037	1					
ANR	1287149	Argument	error_num		1287037	0					
ANR	1287150	Identifier	error_num		1287037	0					
ANR	1287151	Argument	error_filename		1287037	1					
ANR	1287152	Identifier	error_filename		1287037	0					
ANR	1287153	Argument	error_lineno		1287037	2					
ANR	1287154	Identifier	error_lineno		1287037	0					
ANR	1287155	Argument	format		1287037	3					
ANR	1287156	Identifier	format		1287037	0					
ANR	1287157	Argument	args		1287037	4					
ANR	1287158	Identifier	args		1287037	0					
ANR	1287159	ReturnStatement	return ;	2161:2:75973:75979	1287037	1	True				
ANR	1287160	ElseStatement	else		1287037	0					
ANR	1287161	CompoundStatement		99:2:3335:3350	1287037	0					
ANR	1287162	IdentifierDeclStatement	int old = PG ( display_errors ) ;	2240:2:78596:78624	1287037	0	True				
ANR	1287163	IdentifierDecl	old = PG ( display_errors )		1287037	0					
ANR	1287164	IdentifierDeclType	int		1287037	0					
ANR	1287165	Identifier	old		1287037	1					
ANR	1287166	AssignmentExpression	old = PG ( display_errors )		1287037	2		=			
ANR	1287167	Identifier	old		1287037	0					
ANR	1287168	CallExpression	PG ( display_errors )		1287037	1					
ANR	1287169	Callee	PG		1287037	0					
ANR	1287170	Identifier	PG		1287037	0					
ANR	1287171	ArgumentList	display_errors		1287037	1					
ANR	1287172	Argument	display_errors		1287037	0					
ANR	1287173	Identifier	display_errors		1287037	0					
ANR	1287174	IdentifierDeclStatement	int fault = 0 ;	2241:2:78628:78641	1287037	1	True				
ANR	1287175	IdentifierDecl	fault = 0		1287037	0					
ANR	1287176	IdentifierDeclType	int		1287037	0					
ANR	1287177	Identifier	fault		1287037	1					
ANR	1287178	AssignmentExpression	fault = 0		1287037	2		=			
ANR	1287179	Identifier	fault		1287037	0					
ANR	1287180	PrimaryExpression	0		1287037	1					
ANR	1287181	IdentifierDeclStatement	zval fault_obj ;	2242:2:78645:78659	1287037	2	True				
ANR	1287182	IdentifierDecl	fault_obj		1287037	0					
ANR	1287183	IdentifierDeclType	zval		1287037	0					
ANR	1287184	Identifier	fault_obj		1287037	1					
ANR	1287185	IdentifierDeclStatement	va_list argcopy ;	2244:2:78678:78693	1287037	3	True				
ANR	1287186	IdentifierDecl	argcopy		1287037	0					
ANR	1287187	IdentifierDeclType	va_list		1287037	0					
ANR	1287188	Identifier	argcopy		1287037	1					
ANR	1287189	IfStatement	if ( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE )		1287037	4					
ANR	1287190	Condition	error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE	2247:6:78709:78866	1287037	0	True				
ANR	1287191	OrExpression	error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1287037	0		||			
ANR	1287192	EqualityExpression	error_num == E_USER_ERROR		1287037	0		==			
ANR	1287193	Identifier	error_num		1287037	0					
ANR	1287194	Identifier	E_USER_ERROR		1287037	1					
ANR	1287195	OrExpression	error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1287037	1		||			
ANR	1287196	EqualityExpression	error_num == E_COMPILE_ERROR		1287037	0		==			
ANR	1287197	Identifier	error_num		1287037	0					
ANR	1287198	Identifier	E_COMPILE_ERROR		1287037	1					
ANR	1287199	OrExpression	error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1287037	1		||			
ANR	1287200	EqualityExpression	error_num == E_CORE_ERROR		1287037	0		==			
ANR	1287201	Identifier	error_num		1287037	0					
ANR	1287202	Identifier	E_CORE_ERROR		1287037	1					
ANR	1287203	OrExpression	error_num == E_ERROR || error_num == E_PARSE		1287037	1		||			
ANR	1287204	EqualityExpression	error_num == E_ERROR		1287037	0		==			
ANR	1287205	Identifier	error_num		1287037	0					
ANR	1287206	Identifier	E_ERROR		1287037	1					
ANR	1287207	EqualityExpression	error_num == E_PARSE		1287037	1		==			
ANR	1287208	Identifier	error_num		1287037	0					
ANR	1287209	Identifier	E_PARSE		1287037	1					
ANR	1287210	CompoundStatement		112:3:3634:3656	1287037	1					
ANR	1287211	IdentifierDeclStatement	char * code = SOAP_GLOBAL ( error_code ) ;	2253:3:78875:78911	1287037	0	True				
ANR	1287212	IdentifierDecl	* code = SOAP_GLOBAL ( error_code )		1287037	0					
ANR	1287213	IdentifierDeclType	char *		1287037	0					
ANR	1287214	Identifier	code		1287037	1					
ANR	1287215	AssignmentExpression	* code = SOAP_GLOBAL ( error_code )		1287037	2		=			
ANR	1287216	Identifier	code		1287037	0					
ANR	1287217	CallExpression	SOAP_GLOBAL ( error_code )		1287037	1					
ANR	1287218	Callee	SOAP_GLOBAL		1287037	0					
ANR	1287219	Identifier	SOAP_GLOBAL		1287037	0					
ANR	1287220	ArgumentList	error_code		1287037	1					
ANR	1287221	Argument	error_code		1287037	0					
ANR	1287222	Identifier	error_code		1287037	0					
ANR	1287223	IdentifierDeclStatement	char buffer [ 1024 ] ;	2254:3:78916:78933	1287037	1	True				
ANR	1287224	IdentifierDecl	buffer [ 1024 ]		1287037	0					
ANR	1287225	IdentifierDeclType	char [ 1024 ]		1287037	0					
ANR	1287226	Identifier	buffer		1287037	1					
ANR	1287227	PrimaryExpression	1024		1287037	2					
ANR	1287228	IdentifierDeclStatement	zval * outbuf = NULL ;	2255:3:78938:78957	1287037	2	True				
ANR	1287229	IdentifierDecl	* outbuf = NULL		1287037	0					
ANR	1287230	IdentifierDeclType	zval *		1287037	0					
ANR	1287231	Identifier	outbuf		1287037	1					
ANR	1287232	AssignmentExpression	* outbuf = NULL		1287037	2		=			
ANR	1287233	Identifier	NULL		1287037	0					
ANR	1287234	Identifier	NULL		1287037	1					
ANR	1287235	IdentifierDeclStatement	zval * * tmp ;	2256:3:78962:78972	1287037	3	True				
ANR	1287236	IdentifierDecl	* * tmp		1287037	0					
ANR	1287237	IdentifierDeclType	zval * *		1287037	0					
ANR	1287238	Identifier	tmp		1287037	1					
ANR	1287239	IdentifierDeclStatement	soapServicePtr service ;	2257:3:78977:78999	1287037	4	True				
ANR	1287240	IdentifierDecl	service		1287037	0					
ANR	1287241	IdentifierDeclType	soapServicePtr		1287037	0					
ANR	1287242	Identifier	service		1287037	1					
ANR	1287243	IfStatement	if ( code == NULL )		1287037	5					
ANR	1287244	Condition	code == NULL	2259:7:79009:79020	1287037	0	True				
ANR	1287245	EqualityExpression	code == NULL		1287037	0		==			
ANR	1287246	Identifier	code		1287037	0					
ANR	1287247	Identifier	NULL		1287037	1					
ANR	1287248	CompoundStatement		114:21:3680:3680	1287037	1					
ANR	1287249	ExpressionStatement	"code = ""Server"""	2260:4:79029:79044	1287037	0	True				
ANR	1287250	AssignmentExpression	"code = ""Server"""		1287037	0		=			
ANR	1287251	Identifier	code		1287037	0					
ANR	1287252	PrimaryExpression	"""Server"""		1287037	1					
ANR	1287253	ElseStatement	else		1287037	0					
ANR	1287254	CompoundStatement		126:4:4239:4253	1287037	0					
ANR	1287255	IdentifierDeclStatement	int buffer_len ;	2270:4:79562:79576	1287037	0	True				
ANR	1287256	IdentifierDecl	buffer_len		1287037	0					
ANR	1287257	IdentifierDeclType	int		1287037	0					
ANR	1287258	Identifier	buffer_len		1287037	1					
ANR	1287259	IdentifierDeclStatement	zval outbuflen ;	2271:4:79582:79596	1287037	1	True				
ANR	1287260	IdentifierDecl	outbuflen		1287037	0					
ANR	1287261	IdentifierDeclType	zval		1287037	0					
ANR	1287262	Identifier	outbuflen		1287037	1					
ANR	1287263	ExpressionStatement	INIT_ZVAL ( outbuflen )	2273:4:79603:79623	1287037	2	True				
ANR	1287264	CallExpression	INIT_ZVAL ( outbuflen )		1287037	0					
ANR	1287265	Callee	INIT_ZVAL		1287037	0					
ANR	1287266	Identifier	INIT_ZVAL		1287037	0					
ANR	1287267	ArgumentList	outbuflen		1287037	1					
ANR	1287268	Argument	outbuflen		1287037	0					
ANR	1287269	Identifier	outbuflen		1287037	0					
ANR	1287270	ExpressionStatement	"va_copy ( argcopy , args )"	2276:4:79645:79667	1287037	3	True				
ANR	1287271	CallExpression	"va_copy ( argcopy , args )"		1287037	0					
ANR	1287272	Callee	va_copy		1287037	0					
ANR	1287273	Identifier	va_copy		1287037	0					
ANR	1287274	ArgumentList	argcopy		1287037	1					
ANR	1287275	Argument	argcopy		1287037	0					
ANR	1287276	Identifier	argcopy		1287037	0					
ANR	1287277	Argument	args		1287037	1					
ANR	1287278	Identifier	args		1287037	0					
ANR	1287279	ExpressionStatement	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"	2277:4:79673:79738	1287037	4	True				
ANR	1287280	AssignmentExpression	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1287037	0		=			
ANR	1287281	Identifier	buffer_len		1287037	0					
ANR	1287282	CallExpression	"vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1287037	1					
ANR	1287283	Callee	vslprintf		1287037	0					
ANR	1287284	Identifier	vslprintf		1287037	0					
ANR	1287285	ArgumentList	buffer		1287037	1					
ANR	1287286	Argument	buffer		1287037	0					
ANR	1287287	Identifier	buffer		1287037	0					
ANR	1287288	Argument	sizeof ( buffer ) - 1		1287037	1					
ANR	1287289	AdditiveExpression	sizeof ( buffer ) - 1		1287037	0		-			
ANR	1287290	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287291	Sizeof	sizeof		1287037	0					
ANR	1287292	SizeofOperand	buffer		1287037	1					
ANR	1287293	PrimaryExpression	1		1287037	1					
ANR	1287294	Argument	format		1287037	2					
ANR	1287295	Identifier	format		1287037	0					
ANR	1287296	Argument	argcopy		1287037	3					
ANR	1287297	Identifier	argcopy		1287037	0					
ANR	1287298	ExpressionStatement	va_end ( argcopy )	2278:4:79744:79759	1287037	5	True				
ANR	1287299	CallExpression	va_end ( argcopy )		1287037	0					
ANR	1287300	Callee	va_end		1287037	0					
ANR	1287301	Identifier	va_end		1287037	0					
ANR	1287302	ArgumentList	argcopy		1287037	1					
ANR	1287303	Argument	argcopy		1287037	0					
ANR	1287304	Identifier	argcopy		1287037	0					
ANR	1287305	ExpressionStatement	buffer [ sizeof ( buffer ) - 1 ] = 0	2282:4:79846:79872	1287037	6	True				
ANR	1287306	AssignmentExpression	buffer [ sizeof ( buffer ) - 1 ] = 0		1287037	0		=			
ANR	1287307	ArrayIndexing	buffer [ sizeof ( buffer ) - 1 ]		1287037	0					
ANR	1287308	Identifier	buffer		1287037	0					
ANR	1287309	AdditiveExpression	sizeof ( buffer ) - 1		1287037	1		-			
ANR	1287310	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287311	Sizeof	sizeof		1287037	0					
ANR	1287312	SizeofOperand	buffer		1287037	1					
ANR	1287313	PrimaryExpression	1		1287037	1					
ANR	1287314	PrimaryExpression	0		1287037	1					
ANR	1287315	IfStatement	if ( buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0 )		1287037	7					
ANR	1287316	Condition	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0	2283:8:79882:79930	1287037	0	True				
ANR	1287317	OrExpression	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0		1287037	0		||			
ANR	1287318	RelationalExpression	buffer_len > sizeof ( buffer ) - 1		1287037	0		>			
ANR	1287319	Identifier	buffer_len		1287037	0					
ANR	1287320	AdditiveExpression	sizeof ( buffer ) - 1		1287037	1		-			
ANR	1287321	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287322	Sizeof	sizeof		1287037	0					
ANR	1287323	SizeofOperand	buffer		1287037	1					
ANR	1287324	PrimaryExpression	1		1287037	1					
ANR	1287325	RelationalExpression	buffer_len < 0		1287037	1		<			
ANR	1287326	Identifier	buffer_len		1287037	0					
ANR	1287327	PrimaryExpression	0		1287037	1					
ANR	1287328	CompoundStatement		138:59:4590:4590	1287037	1					
ANR	1287329	ExpressionStatement	buffer_len = sizeof ( buffer ) - 1	2284:5:79940:79971	1287037	0	True				
ANR	1287330	AssignmentExpression	buffer_len = sizeof ( buffer ) - 1		1287037	0		=			
ANR	1287331	Identifier	buffer_len		1287037	0					
ANR	1287332	AdditiveExpression	sizeof ( buffer ) - 1		1287037	1		-			
ANR	1287333	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287334	Sizeof	sizeof		1287037	0					
ANR	1287335	SizeofOperand	buffer		1287037	1					
ANR	1287336	PrimaryExpression	1		1287037	1					
ANR	1287337	Statement	if	2288:4:80038:80039	1287037	8	True				
ANR	1287338	Statement	(	2288:7:80041:80041	1287037	9	True				
ANR	1287339	Statement	php_output_get_length	2288:8:80042:80062	1287037	10	True				
ANR	1287340	Statement	(	2288:29:80063:80063	1287037	11	True				
ANR	1287341	Statement	&	2288:30:80064:80064	1287037	12	True				
ANR	1287342	Statement	outbuflen	2288:31:80065:80073	1287037	13	True				
ANR	1287343	Statement	TSRMLS_CC	2288:41:80075:80083	1287037	14	True				
ANR	1287344	Statement	)	2288:50:80084:80084	1287037	15	True				
ANR	1287345	Statement	!=	2288:52:80086:80087	1287037	16	True				
ANR	1287346	Statement	FAILURE	2288:55:80089:80095	1287037	17	True				
ANR	1287347	Statement	&&	2288:63:80097:80098	1287037	18	True				
ANR	1287348	Statement	Z_LVAL	2288:66:80100:80105	1287037	19	True				
ANR	1287349	Statement	(	2288:72:80106:80106	1287037	20	True				
ANR	1287350	Statement	outbuflen	2288:73:80107:80115	1287037	21	True				
ANR	1287351	Statement	)	2288:82:80116:80116	1287037	22	True				
ANR	1287352	Statement	!=	2288:84:80118:80119	1287037	23	True				
ANR	1287353	Statement	0	2288:87:80121:80121	1287037	24	True				
ANR	1287354	Statement	)	2288:88:80122:80122	1287037	25	True				
ANR	1287355	CompoundStatement		143:90:4781:4781	1287037	26					
ANR	1287356	ExpressionStatement	ALLOC_INIT_ZVAL ( outbuf )	2289:5:80131:80154	1287037	0	True				
ANR	1287357	CallExpression	ALLOC_INIT_ZVAL ( outbuf )		1287037	0					
ANR	1287358	Callee	ALLOC_INIT_ZVAL		1287037	0					
ANR	1287359	Identifier	ALLOC_INIT_ZVAL		1287037	0					
ANR	1287360	ArgumentList	outbuf		1287037	1					
ANR	1287361	Argument	outbuf		1287037	0					
ANR	1287362	Identifier	outbuf		1287037	0					
ANR	1287363	Statement	php_output_get_contents	2290:5:80161:80183	1287037	1	True				
ANR	1287364	Statement	(	2290:28:80184:80184	1287037	2	True				
ANR	1287365	Statement	outbuf	2290:29:80185:80190	1287037	3	True				
ANR	1287366	Statement	TSRMLS_CC	2290:36:80192:80200	1287037	4	True				
ANR	1287367	Statement	)	2290:45:80201:80201	1287037	5	True				
ANR	1287368	ExpressionStatement		2290:46:80202:80202	1287037	6	True				
ANR	1287369	ExpressionStatement	php_output_discard ( TSRMLS_C )	2292:4:80214:80242	1287037	27	True				
ANR	1287370	CallExpression	php_output_discard ( TSRMLS_C )		1287037	0					
ANR	1287371	Callee	php_output_discard		1287037	0					
ANR	1287372	Identifier	php_output_discard		1287037	0					
ANR	1287373	ArgumentList	TSRMLS_C		1287037	1					
ANR	1287374	Argument	TSRMLS_C		1287037	0					
ANR	1287375	Identifier	TSRMLS_C		1287037	0					
ANR	1287376	Statement	if	2262:3:79054:79055	1287037	6	True				
ANR	1287377	Statement	(	2262:6:79057:79057	1287037	7	True				
ANR	1287378	Statement	SOAP_GLOBAL	2262:7:79058:79068	1287037	8	True				
ANR	1287379	Statement	(	2262:18:79069:79069	1287037	9	True				
ANR	1287380	Statement	error_object	2262:19:79070:79081	1287037	10	True				
ANR	1287381	Statement	)	2262:31:79082:79082	1287037	11	True				
ANR	1287382	Statement	&&	2262:33:79084:79085	1287037	12	True				
ANR	1287383	Statement	Z_TYPE_P	2263:7:79094:79101	1287037	13	True				
ANR	1287384	Statement	(	2263:15:79102:79102	1287037	14	True				
ANR	1287385	Statement	SOAP_GLOBAL	2263:16:79103:79113	1287037	15	True				
ANR	1287386	Statement	(	2263:27:79114:79114	1287037	16	True				
ANR	1287387	Statement	error_object	2263:28:79115:79126	1287037	17	True				
ANR	1287388	Statement	)	2263:40:79127:79127	1287037	18	True				
ANR	1287389	Statement	)	2263:41:79128:79128	1287037	19	True				
ANR	1287390	Statement	==	2263:43:79130:79131	1287037	20	True				
ANR	1287391	Statement	IS_OBJECT	2263:46:79133:79141	1287037	21	True				
ANR	1287392	Statement	&&	2263:56:79143:79144	1287037	22	True				
ANR	1287393	Statement	instanceof_function	2264:7:79153:79171	1287037	23	True				
ANR	1287394	Statement	(	2264:26:79172:79172	1287037	24	True				
ANR	1287395	Statement	Z_OBJCE_P	2264:27:79173:79181	1287037	25	True				
ANR	1287396	Statement	(	2264:36:79182:79182	1287037	26	True				
ANR	1287397	Statement	SOAP_GLOBAL	2264:37:79183:79193	1287037	27	True				
ANR	1287398	Statement	(	2264:48:79194:79194	1287037	28	True				
ANR	1287399	Statement	error_object	2264:49:79195:79206	1287037	29	True				
ANR	1287400	Statement	)	2264:61:79207:79207	1287037	30	True				
ANR	1287401	Statement	)	2264:62:79208:79208	1287037	31	True				
ANR	1287402	Statement	","	2264:63:79209:79209	1287037	32	True				
ANR	1287403	Statement	soap_server_class_entry	2264:65:79211:79233	1287037	33	True				
ANR	1287404	Statement	TSRMLS_CC	2264:89:79235:79243	1287037	34	True				
ANR	1287405	Statement	)	2264:98:79244:79244	1287037	35	True				
ANR	1287406	Statement	&&	2264:100:79246:79247	1287037	36	True				
ANR	1287407	Statement	zend_hash_find	2265:10:79259:79272	1287037	37	True				
ANR	1287408	Statement	(	2265:24:79273:79273	1287037	38	True				
ANR	1287409	Statement	Z_OBJPROP_P	2265:25:79274:79284	1287037	39	True				
ANR	1287410	Statement	(	2265:36:79285:79285	1287037	40	True				
ANR	1287411	Statement	SOAP_GLOBAL	2265:37:79286:79296	1287037	41	True				
ANR	1287412	Statement	(	2265:48:79297:79297	1287037	42	True				
ANR	1287413	Statement	error_object	2265:49:79298:79309	1287037	43	True				
ANR	1287414	Statement	)	2265:61:79310:79310	1287037	44	True				
ANR	1287415	Statement	)	2265:62:79311:79311	1287037	45	True				
ANR	1287416	Statement	","	2265:63:79312:79312	1287037	46	True				
ANR	1287417	Statement	"""service"""	2265:65:79314:79322	1287037	47	True				
ANR	1287418	Statement	","	2265:74:79323:79323	1287037	48	True				
ANR	1287419	Statement	sizeof	2265:76:79325:79330	1287037	49	True				
ANR	1287420	Statement	(	2265:82:79331:79331	1287037	50	True				
ANR	1287421	Statement	"""service"""	2265:83:79332:79340	1287037	51	True				
ANR	1287422	Statement	)	2265:92:79341:79341	1287037	52	True				
ANR	1287423	Statement	","	2265:93:79342:79342	1287037	53	True				
ANR	1287424	Statement	(	2265:95:79344:79344	1287037	54	True				
ANR	1287425	Statement	void	2265:96:79345:79348	1287037	55	True				
ANR	1287426	Statement	*	2265:101:79350:79350	1287037	56	True				
ANR	1287427	Statement	*	2265:102:79351:79351	1287037	57	True				
ANR	1287428	Statement	)	2265:103:79352:79352	1287037	58	True				
ANR	1287429	Statement	&	2265:104:79353:79353	1287037	59	True				
ANR	1287430	Statement	tmp	2265:105:79354:79356	1287037	60	True				
ANR	1287431	Statement	)	2265:108:79357:79357	1287037	61	True				
ANR	1287432	Statement	!=	2265:110:79359:79360	1287037	62	True				
ANR	1287433	Statement	FAILURE	2265:113:79362:79368	1287037	63	True				
ANR	1287434	Statement	&&	2265:121:79370:79371	1287037	64	True				
ANR	1287435	Statement	(	2266:4:79377:79377	1287037	65	True				
ANR	1287436	Statement	service	2266:5:79378:79384	1287037	66	True				
ANR	1287437	Statement	=	2266:13:79386:79386	1287037	67	True				
ANR	1287438	Statement	(	2266:15:79388:79388	1287037	68	True				
ANR	1287439	Statement	soapServicePtr	2266:16:79389:79402	1287037	69	True				
ANR	1287440	Statement	)	2266:30:79403:79403	1287037	70	True				
ANR	1287441	Statement	zend_fetch_resource	2266:31:79404:79422	1287037	71	True				
ANR	1287442	Statement	(	2266:50:79423:79423	1287037	72	True				
ANR	1287443	Statement	tmp	2266:51:79424:79426	1287037	73	True				
ANR	1287444	Statement	TSRMLS_CC	2266:55:79428:79436	1287037	74	True				
ANR	1287445	Statement	","	2266:64:79437:79437	1287037	75	True				
ANR	1287446	Statement	-	2266:66:79439:79439	1287037	76	True				
ANR	1287447	Statement	1	2266:67:79440:79440	1287037	77	True				
ANR	1287448	Statement	","	2266:68:79441:79441	1287037	78	True				
ANR	1287449	Statement	"""service"""	2266:70:79443:79451	1287037	79	True				
ANR	1287450	Statement	","	2266:79:79452:79452	1287037	80	True				
ANR	1287451	Statement	NULL	2266:81:79454:79457	1287037	81	True				
ANR	1287452	Statement	","	2266:85:79458:79458	1287037	82	True				
ANR	1287453	Statement	1	2266:87:79460:79460	1287037	83	True				
ANR	1287454	Statement	","	2266:88:79461:79461	1287037	84	True				
ANR	1287455	Statement	le_service	2266:90:79463:79472	1287037	85	True				
ANR	1287456	Statement	)	2266:100:79473:79473	1287037	86	True				
ANR	1287457	Statement	)	2266:101:79474:79474	1287037	87	True				
ANR	1287458	Statement	&&	2266:103:79476:79477	1287037	88	True				
ANR	1287459	Statement	!	2267:4:79483:79483	1287037	89	True				
ANR	1287460	Statement	service	2267:5:79484:79490	1287037	90	True				
ANR	1287461	Statement	->	2267:12:79491:79492	1287037	91	True				
ANR	1287462	Statement	send_errors	2267:14:79493:79503	1287037	92	True				
ANR	1287463	Statement	)	2267:25:79504:79504	1287037	93	True				
ANR	1287464	CompoundStatement		122:27:4163:4163	1287037	94					
ANR	1287465	ExpressionStatement	"strcpy ( buffer , ""Internal Error"" )"	2268:4:79512:79544	1287037	0	True				
ANR	1287466	CallExpression	"strcpy ( buffer , ""Internal Error"" )"		1287037	0					
ANR	1287467	Callee	strcpy		1287037	0					
ANR	1287468	Identifier	strcpy		1287037	0					
ANR	1287469	ArgumentList	buffer		1287037	1					
ANR	1287470	Argument	buffer		1287037	0					
ANR	1287471	Identifier	buffer		1287037	0					
ANR	1287472	Argument	"""Internal Error"""		1287037	1					
ANR	1287473	PrimaryExpression	"""Internal Error"""		1287037	0					
ANR	1287474	ExpressionStatement	INIT_ZVAL ( fault_obj )	2295:3:80253:80273	1287037	95	True				
ANR	1287475	CallExpression	INIT_ZVAL ( fault_obj )		1287037	0					
ANR	1287476	Callee	INIT_ZVAL		1287037	0					
ANR	1287477	Identifier	INIT_ZVAL		1287037	0					
ANR	1287478	ArgumentList	fault_obj		1287037	1					
ANR	1287479	Argument	fault_obj		1287037	0					
ANR	1287480	Identifier	fault_obj		1287037	0					
ANR	1287481	Statement	set_soap_fault	2296:3:80278:80291	1287037	96	True				
ANR	1287482	Statement	(	2296:17:80292:80292	1287037	97	True				
ANR	1287483	Statement	&	2296:18:80293:80293	1287037	98	True				
ANR	1287484	Statement	fault_obj	2296:19:80294:80302	1287037	99	True				
ANR	1287485	Statement	","	2296:28:80303:80303	1287037	100	True				
ANR	1287486	Statement	NULL	2296:30:80305:80308	1287037	101	True				
ANR	1287487	Statement	","	2296:34:80309:80309	1287037	102	True				
ANR	1287488	Statement	code	2296:36:80311:80314	1287037	103	True				
ANR	1287489	Statement	","	2296:40:80315:80315	1287037	104	True				
ANR	1287490	Statement	buffer	2296:42:80317:80322	1287037	105	True				
ANR	1287491	Statement	","	2296:48:80323:80323	1287037	106	True				
ANR	1287492	Statement	NULL	2296:50:80325:80328	1287037	107	True				
ANR	1287493	Statement	","	2296:54:80329:80329	1287037	108	True				
ANR	1287494	Statement	outbuf	2296:56:80331:80336	1287037	109	True				
ANR	1287495	Statement	","	2296:62:80337:80337	1287037	110	True				
ANR	1287496	Statement	NULL	2296:64:80339:80342	1287037	111	True				
ANR	1287497	Statement	TSRMLS_CC	2296:69:80344:80352	1287037	112	True				
ANR	1287498	Statement	)	2296:78:80353:80353	1287037	113	True				
ANR	1287499	ExpressionStatement		2296:79:80354:80354	1287037	114	True				
ANR	1287500	ExpressionStatement	fault = 1	2297:3:80359:80368	1287037	115	True				
ANR	1287501	AssignmentExpression	fault = 1		1287037	0		=			
ANR	1287502	Identifier	fault		1287037	0					
ANR	1287503	PrimaryExpression	1		1287037	1					
ANR	1287504	ExpressionStatement	PG ( display_errors ) = 0	2300:2:80377:80399	1287037	5	True				
ANR	1287505	AssignmentExpression	PG ( display_errors ) = 0		1287037	0		=			
ANR	1287506	CallExpression	PG ( display_errors )		1287037	0					
ANR	1287507	Callee	PG		1287037	0					
ANR	1287508	Identifier	PG		1287037	0					
ANR	1287509	ArgumentList	display_errors		1287037	1					
ANR	1287510	Argument	display_errors		1287037	0					
ANR	1287511	Identifier	display_errors		1287037	0					
ANR	1287512	PrimaryExpression	0		1287037	1					
ANR	1287513	ExpressionStatement	SG ( sapi_headers ) . http_status_line = NULL	2301:2:80403:80443	1287037	6	True				
ANR	1287514	AssignmentExpression	SG ( sapi_headers ) . http_status_line = NULL		1287037	0		=			
ANR	1287515	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1287516	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287517	Callee	SG		1287037	0					
ANR	1287518	Identifier	SG		1287037	0					
ANR	1287519	ArgumentList	sapi_headers		1287037	1					
ANR	1287520	Argument	sapi_headers		1287037	0					
ANR	1287521	Identifier	sapi_headers		1287037	0					
ANR	1287522	Identifier	http_status_line		1287037	1					
ANR	1287523	Identifier	NULL		1287037	1					
ANR	1287524	Statement	zend_try	2302:2:80447:80454	1287037	7	True				
ANR	1287525	CompoundStatement		157:11:5113:5113	1287037	8					
ANR	1287526	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2303:3:80461:80538	1287037	0	True				
ANR	1287527	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1287037	0					
ANR	1287528	Callee	call_old_error_handler		1287037	0					
ANR	1287529	Identifier	call_old_error_handler		1287037	0					
ANR	1287530	ArgumentList	error_num		1287037	1					
ANR	1287531	Argument	error_num		1287037	0					
ANR	1287532	Identifier	error_num		1287037	0					
ANR	1287533	Argument	error_filename		1287037	1					
ANR	1287534	Identifier	error_filename		1287037	0					
ANR	1287535	Argument	error_lineno		1287037	2					
ANR	1287536	Identifier	error_lineno		1287037	0					
ANR	1287537	Argument	format		1287037	3					
ANR	1287538	Identifier	format		1287037	0					
ANR	1287539	Argument	args		1287037	4					
ANR	1287540	Identifier	args		1287037	0					
ANR	1287541	Statement	zend_catch	2304:4:80544:80553	1287037	9	True				
ANR	1287542	CompoundStatement		159:15:5212:5212	1287037	10					
ANR	1287543	ExpressionStatement	CG ( in_compilation ) = _old_in_compilation	2305:3:80560:80600	1287037	0	True				
ANR	1287544	AssignmentExpression	CG ( in_compilation ) = _old_in_compilation		1287037	0		=			
ANR	1287545	CallExpression	CG ( in_compilation )		1287037	0					
ANR	1287546	Callee	CG		1287037	0					
ANR	1287547	Identifier	CG		1287037	0					
ANR	1287548	ArgumentList	in_compilation		1287037	1					
ANR	1287549	Argument	in_compilation		1287037	0					
ANR	1287550	Identifier	in_compilation		1287037	0					
ANR	1287551	Identifier	_old_in_compilation		1287037	1					
ANR	1287552	ExpressionStatement	EG ( in_execution ) = _old_in_execution	2306:3:80605:80641	1287037	1	True				
ANR	1287553	AssignmentExpression	EG ( in_execution ) = _old_in_execution		1287037	0		=			
ANR	1287554	CallExpression	EG ( in_execution )		1287037	0					
ANR	1287555	Callee	EG		1287037	0					
ANR	1287556	Identifier	EG		1287037	0					
ANR	1287557	ArgumentList	in_execution		1287037	1					
ANR	1287558	Argument	in_execution		1287037	0					
ANR	1287559	Identifier	in_execution		1287037	0					
ANR	1287560	Identifier	_old_in_execution		1287037	1					
ANR	1287561	ExpressionStatement	EG ( current_execute_data ) = _old_current_execute_data	2307:3:80646:80698	1287037	2	True				
ANR	1287562	AssignmentExpression	EG ( current_execute_data ) = _old_current_execute_data		1287037	0		=			
ANR	1287563	CallExpression	EG ( current_execute_data )		1287037	0					
ANR	1287564	Callee	EG		1287037	0					
ANR	1287565	Identifier	EG		1287037	0					
ANR	1287566	ArgumentList	current_execute_data		1287037	1					
ANR	1287567	Argument	current_execute_data		1287037	0					
ANR	1287568	Identifier	current_execute_data		1287037	0					
ANR	1287569	Identifier	_old_current_execute_data		1287037	1					
ANR	1287570	IfStatement	if ( SG ( sapi_headers ) . http_status_line )		1287037	3					
ANR	1287571	Condition	SG ( sapi_headers ) . http_status_line	2308:7:80707:80739	1287037	0	True				
ANR	1287572	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1287573	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287574	Callee	SG		1287037	0					
ANR	1287575	Identifier	SG		1287037	0					
ANR	1287576	ArgumentList	sapi_headers		1287037	1					
ANR	1287577	Argument	sapi_headers		1287037	0					
ANR	1287578	Identifier	sapi_headers		1287037	0					
ANR	1287579	Identifier	http_status_line		1287037	1					
ANR	1287580	CompoundStatement		163:42:5399:5399	1287037	1					
ANR	1287581	ExpressionStatement	efree ( SG ( sapi_headers ) . http_status_line )	2309:4:80748:80788	1287037	0	True				
ANR	1287582	CallExpression	efree ( SG ( sapi_headers ) . http_status_line )		1287037	0					
ANR	1287583	Callee	efree		1287037	0					
ANR	1287584	Identifier	efree		1287037	0					
ANR	1287585	ArgumentList	SG ( sapi_headers ) . http_status_line		1287037	1					
ANR	1287586	Argument	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1287587	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1287588	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287589	Callee	SG		1287037	0					
ANR	1287590	Identifier	SG		1287037	0					
ANR	1287591	ArgumentList	sapi_headers		1287037	1					
ANR	1287592	Argument	sapi_headers		1287037	0					
ANR	1287593	Identifier	sapi_headers		1287037	0					
ANR	1287594	Identifier	http_status_line		1287037	1					
ANR	1287595	ExpressionStatement	SG ( sapi_headers ) . http_status_line = _old_http_status_line	2311:3:80798:80855	1287037	4	True				
ANR	1287596	AssignmentExpression	SG ( sapi_headers ) . http_status_line = _old_http_status_line		1287037	0		=			
ANR	1287597	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1287598	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287599	Callee	SG		1287037	0					
ANR	1287600	Identifier	SG		1287037	0					
ANR	1287601	ArgumentList	sapi_headers		1287037	1					
ANR	1287602	Argument	sapi_headers		1287037	0					
ANR	1287603	Identifier	sapi_headers		1287037	0					
ANR	1287604	Identifier	http_status_line		1287037	1					
ANR	1287605	Identifier	_old_http_status_line		1287037	1					
ANR	1287606	ExpressionStatement	SG ( sapi_headers ) . http_response_code = _old_http_response_code	2312:3:80860:80921	1287037	5	True				
ANR	1287607	AssignmentExpression	SG ( sapi_headers ) . http_response_code = _old_http_response_code		1287037	0		=			
ANR	1287608	MemberAccess	SG ( sapi_headers ) . http_response_code		1287037	0					
ANR	1287609	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287610	Callee	SG		1287037	0					
ANR	1287611	Identifier	SG		1287037	0					
ANR	1287612	ArgumentList	sapi_headers		1287037	1					
ANR	1287613	Argument	sapi_headers		1287037	0					
ANR	1287614	Identifier	sapi_headers		1287037	0					
ANR	1287615	Identifier	http_response_code		1287037	1					
ANR	1287616	Identifier	_old_http_response_code		1287037	1					
ANR	1287617	ExpressionStatement	zend_end_try ( )	2313:4:80927:80941	1287037	11	True				
ANR	1287618	CallExpression	zend_end_try ( )		1287037	0					
ANR	1287619	Callee	zend_end_try		1287037	0					
ANR	1287620	Identifier	zend_end_try		1287037	0					
ANR	1287621	ArgumentList			1287037	1					
ANR	1287622	ExpressionStatement	PG ( display_errors ) = old	2314:2:80945:80969	1287037	12	True				
ANR	1287623	AssignmentExpression	PG ( display_errors ) = old		1287037	0		=			
ANR	1287624	CallExpression	PG ( display_errors )		1287037	0					
ANR	1287625	Callee	PG		1287037	0					
ANR	1287626	Identifier	PG		1287037	0					
ANR	1287627	ArgumentList	display_errors		1287037	1					
ANR	1287628	Argument	display_errors		1287037	0					
ANR	1287629	Identifier	display_errors		1287037	0					
ANR	1287630	Identifier	old		1287037	1					
ANR	1287631	IfStatement	if ( fault )		1287037	13					
ANR	1287632	Condition	fault	2316:6:80978:80982	1287037	0	True				
ANR	1287633	Identifier	fault		1287037	0					
ANR	1287634	CompoundStatement		171:13:5642:5642	1287037	1					
ANR	1287635	Statement	soap_server_fault_ex	2317:3:80990:81009	1287037	0	True				
ANR	1287636	Statement	(	2317:23:81010:81010	1287037	1	True				
ANR	1287637	Statement	NULL	2317:24:81011:81014	1287037	2	True				
ANR	1287638	Statement	","	2317:28:81015:81015	1287037	3	True				
ANR	1287639	Statement	&	2317:30:81017:81017	1287037	4	True				
ANR	1287640	Statement	fault_obj	2317:31:81018:81026	1287037	5	True				
ANR	1287641	Statement	","	2317:40:81027:81027	1287037	6	True				
ANR	1287642	Statement	NULL	2317:42:81029:81032	1287037	7	True				
ANR	1287643	Statement	TSRMLS_CC	2317:47:81034:81042	1287037	8	True				
ANR	1287644	Statement	)	2317:56:81043:81043	1287037	9	True				
ANR	1287645	ExpressionStatement		2317:57:81044:81044	1287037	10	True				
ANR	1287646	ExpressionStatement	zend_bailout ( )	2318:3:81049:81063	1287037	11	True				
ANR	1287647	CallExpression	zend_bailout ( )		1287037	0					
ANR	1287648	Callee	zend_bailout		1287037	0					
ANR	1287649	Identifier	zend_bailout		1287037	0					
ANR	1287650	ArgumentList			1287037	1					
ANR	1287651	Statement	if	2164:1:75986:75987	1287037	11	True				
ANR	1287652	Statement	(	2164:4:75989:75989	1287037	12	True				
ANR	1287653	Statement	SOAP_GLOBAL	2164:5:75990:76000	1287037	13	True				
ANR	1287654	Statement	(	2164:16:76001:76001	1287037	14	True				
ANR	1287655	Statement	error_object	2164:17:76002:76013	1287037	15	True				
ANR	1287656	Statement	)	2164:29:76014:76014	1287037	16	True				
ANR	1287657	Statement	&&	2164:31:76016:76017	1287037	17	True				
ANR	1287658	Statement	Z_TYPE_P	2165:5:76024:76031	1287037	18	True				
ANR	1287659	Statement	(	2165:13:76032:76032	1287037	19	True				
ANR	1287660	Statement	SOAP_GLOBAL	2165:14:76033:76043	1287037	20	True				
ANR	1287661	Statement	(	2165:25:76044:76044	1287037	21	True				
ANR	1287662	Statement	error_object	2165:26:76045:76056	1287037	22	True				
ANR	1287663	Statement	)	2165:38:76057:76057	1287037	23	True				
ANR	1287664	Statement	)	2165:39:76058:76058	1287037	24	True				
ANR	1287665	Statement	==	2165:41:76060:76061	1287037	25	True				
ANR	1287666	Statement	IS_OBJECT	2165:44:76063:76071	1287037	26	True				
ANR	1287667	Statement	&&	2165:54:76073:76074	1287037	27	True				
ANR	1287668	Statement	instanceof_function	2166:5:76081:76099	1287037	28	True				
ANR	1287669	Statement	(	2166:24:76100:76100	1287037	29	True				
ANR	1287670	Statement	Z_OBJCE_P	2166:25:76101:76109	1287037	30	True				
ANR	1287671	Statement	(	2166:34:76110:76110	1287037	31	True				
ANR	1287672	Statement	SOAP_GLOBAL	2166:35:76111:76121	1287037	32	True				
ANR	1287673	Statement	(	2166:46:76122:76122	1287037	33	True				
ANR	1287674	Statement	error_object	2166:47:76123:76134	1287037	34	True				
ANR	1287675	Statement	)	2166:59:76135:76135	1287037	35	True				
ANR	1287676	Statement	)	2166:60:76136:76136	1287037	36	True				
ANR	1287677	Statement	","	2166:61:76137:76137	1287037	37	True				
ANR	1287678	Statement	soap_class_entry	2166:63:76139:76154	1287037	38	True				
ANR	1287679	Statement	TSRMLS_CC	2166:80:76156:76164	1287037	39	True				
ANR	1287680	Statement	)	2166:89:76165:76165	1287037	40	True				
ANR	1287681	Statement	)	2166:90:76166:76166	1287037	41	True				
ANR	1287682	CompoundStatement		23:2:843:865	1287037	42					
ANR	1287683	IdentifierDeclStatement	zval * * tmp ;	2167:2:76172:76182	1287037	0	True				
ANR	1287684	IdentifierDecl	* * tmp		1287037	0					
ANR	1287685	IdentifierDeclType	zval * *		1287037	0					
ANR	1287686	Identifier	tmp		1287037	1					
ANR	1287687	IdentifierDeclStatement	int use_exceptions = 0 ;	2168:2:76186:76208	1287037	1	True				
ANR	1287688	IdentifierDecl	use_exceptions = 0		1287037	0					
ANR	1287689	IdentifierDeclType	int		1287037	0					
ANR	1287690	Identifier	use_exceptions		1287037	1					
ANR	1287691	AssignmentExpression	use_exceptions = 0		1287037	2		=			
ANR	1287692	Identifier	use_exceptions		1287037	0					
ANR	1287693	PrimaryExpression	0		1287037	1					
ANR	1287694	IfStatement	"if ( zend_hash_find ( Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) , ( void * * ) & tmp ) != SUCCESS || Z_TYPE_PP ( tmp ) != IS_BOOL || Z_LVAL_PP ( tmp ) != 0 )"		1287037	2					
ANR	1287695	Condition	"zend_hash_find ( Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) , ( void * * ) & tmp ) != SUCCESS || Z_TYPE_PP ( tmp ) != IS_BOOL || Z_LVAL_PP ( tmp ) != 0"	2170:6:76217:76394	1287037	0	True				
ANR	1287696	OrExpression	"zend_hash_find ( Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) , ( void * * ) & tmp ) != SUCCESS || Z_TYPE_PP ( tmp ) != IS_BOOL || Z_LVAL_PP ( tmp ) != 0"		1287037	0		||			
ANR	1287697	EqualityExpression	"zend_hash_find ( Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) , ( void * * ) & tmp ) != SUCCESS"		1287037	0		!=			
ANR	1287698	CallExpression	"zend_hash_find ( Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) , ( void * * ) & tmp )"		1287037	0					
ANR	1287699	Callee	zend_hash_find		1287037	0					
ANR	1287700	Identifier	zend_hash_find		1287037	0					
ANR	1287701	ArgumentList	Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) )		1287037	1					
ANR	1287702	Argument	Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) )		1287037	0					
ANR	1287703	CallExpression	Z_OBJPROP_P ( SOAP_GLOBAL ( error_object ) )		1287037	0					
ANR	1287704	Callee	Z_OBJPROP_P		1287037	0					
ANR	1287705	Identifier	Z_OBJPROP_P		1287037	0					
ANR	1287706	ArgumentList	SOAP_GLOBAL ( error_object )		1287037	1					
ANR	1287707	Argument	SOAP_GLOBAL ( error_object )		1287037	0					
ANR	1287708	CallExpression	SOAP_GLOBAL ( error_object )		1287037	0					
ANR	1287709	Callee	SOAP_GLOBAL		1287037	0					
ANR	1287710	Identifier	SOAP_GLOBAL		1287037	0					
ANR	1287711	ArgumentList	error_object		1287037	1					
ANR	1287712	Argument	error_object		1287037	0					
ANR	1287713	Identifier	error_object		1287037	0					
ANR	1287714	Argument	"""_exceptions"""		1287037	1					
ANR	1287715	PrimaryExpression	"""_exceptions"""		1287037	0					
ANR	1287716	Argument	"sizeof ( ""_exceptions"" )"		1287037	2					
ANR	1287717	SizeofExpression	"sizeof ( ""_exceptions"" )"		1287037	0					
ANR	1287718	Sizeof	sizeof		1287037	0					
ANR	1287719	PrimaryExpression	"""_exceptions"""		1287037	1					
ANR	1287720	Argument	( void * * ) & tmp		1287037	3					
ANR	1287721	CastExpression	( void * * ) & tmp		1287037	0					
ANR	1287722	CastTarget	void * *		1287037	0					
ANR	1287723	UnaryOperationExpression	& tmp		1287037	1					
ANR	1287724	UnaryOperator	&		1287037	0					
ANR	1287725	Identifier	tmp		1287037	1					
ANR	1287726	Identifier	SUCCESS		1287037	1					
ANR	1287727	OrExpression	Z_TYPE_PP ( tmp ) != IS_BOOL || Z_LVAL_PP ( tmp ) != 0		1287037	1		||			
ANR	1287728	EqualityExpression	Z_TYPE_PP ( tmp ) != IS_BOOL		1287037	0		!=			
ANR	1287729	CallExpression	Z_TYPE_PP ( tmp )		1287037	0					
ANR	1287730	Callee	Z_TYPE_PP		1287037	0					
ANR	1287731	Identifier	Z_TYPE_PP		1287037	0					
ANR	1287732	ArgumentList	tmp		1287037	1					
ANR	1287733	Argument	tmp		1287037	0					
ANR	1287734	Identifier	tmp		1287037	0					
ANR	1287735	Identifier	IS_BOOL		1287037	1					
ANR	1287736	EqualityExpression	Z_LVAL_PP ( tmp ) != 0		1287037	1		!=			
ANR	1287737	CallExpression	Z_LVAL_PP ( tmp )		1287037	0					
ANR	1287738	Callee	Z_LVAL_PP		1287037	0					
ANR	1287739	Identifier	Z_LVAL_PP		1287037	0					
ANR	1287740	ArgumentList	tmp		1287037	1					
ANR	1287741	Argument	tmp		1287037	0					
ANR	1287742	Identifier	tmp		1287037	0					
ANR	1287743	PrimaryExpression	0		1287037	1					
ANR	1287744	CompoundStatement		26:57:1054:1054	1287037	1					
ANR	1287745	ExpressionStatement	use_exceptions = 1	2172:7:76406:76424	1287037	0	True				
ANR	1287746	AssignmentExpression	use_exceptions = 1		1287037	0		=			
ANR	1287747	Identifier	use_exceptions		1287037	0					
ANR	1287748	PrimaryExpression	1		1287037	1					
ANR	1287749	IfStatement	if ( ( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE ) && use_exceptions )		1287037	3					
ANR	1287750	Condition	( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE ) && use_exceptions	2175:6:76437:76624	1287037	0	True				
ANR	1287751	AndExpression	( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE ) && use_exceptions		1287037	0		&&			
ANR	1287752	OrExpression	error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1287037	0		||			
ANR	1287753	EqualityExpression	error_num == E_USER_ERROR		1287037	0		==			
ANR	1287754	Identifier	error_num		1287037	0					
ANR	1287755	Identifier	E_USER_ERROR		1287037	1					
ANR	1287756	OrExpression	error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1287037	1		||			
ANR	1287757	EqualityExpression	error_num == E_COMPILE_ERROR		1287037	0		==			
ANR	1287758	Identifier	error_num		1287037	0					
ANR	1287759	Identifier	E_COMPILE_ERROR		1287037	1					
ANR	1287760	OrExpression	error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1287037	1		||			
ANR	1287761	EqualityExpression	error_num == E_CORE_ERROR		1287037	0		==			
ANR	1287762	Identifier	error_num		1287037	0					
ANR	1287763	Identifier	E_CORE_ERROR		1287037	1					
ANR	1287764	OrExpression	error_num == E_ERROR || error_num == E_PARSE		1287037	1		||			
ANR	1287765	EqualityExpression	error_num == E_ERROR		1287037	0		==			
ANR	1287766	Identifier	error_num		1287037	0					
ANR	1287767	Identifier	E_ERROR		1287037	1					
ANR	1287768	EqualityExpression	error_num == E_PARSE		1287037	1		==			
ANR	1287769	Identifier	error_num		1287037	0					
ANR	1287770	Identifier	E_PARSE		1287037	1					
ANR	1287771	Identifier	use_exceptions		1287037	1					
ANR	1287772	CompoundStatement		45:3:1510:1538	1287037	1					
ANR	1287773	IdentifierDeclStatement	"zval * fault , * exception ;"	2181:3:76632:76655	1287037	0	True				
ANR	1287774	IdentifierDecl	* fault		1287037	0					
ANR	1287775	IdentifierDeclType	zval *		1287037	0					
ANR	1287776	Identifier	fault		1287037	1					
ANR	1287777	IdentifierDecl	* exception		1287037	1					
ANR	1287778	IdentifierDeclType	zval *		1287037	0					
ANR	1287779	Identifier	exception		1287037	1					
ANR	1287780	IdentifierDeclStatement	char * code = SOAP_GLOBAL ( error_code ) ;	2182:3:76660:76696	1287037	1	True				
ANR	1287781	IdentifierDecl	* code = SOAP_GLOBAL ( error_code )		1287037	0					
ANR	1287782	IdentifierDeclType	char *		1287037	0					
ANR	1287783	Identifier	code		1287037	1					
ANR	1287784	AssignmentExpression	* code = SOAP_GLOBAL ( error_code )		1287037	2		=			
ANR	1287785	Identifier	code		1287037	0					
ANR	1287786	CallExpression	SOAP_GLOBAL ( error_code )		1287037	1					
ANR	1287787	Callee	SOAP_GLOBAL		1287037	0					
ANR	1287788	Identifier	SOAP_GLOBAL		1287037	0					
ANR	1287789	ArgumentList	error_code		1287037	1					
ANR	1287790	Argument	error_code		1287037	0					
ANR	1287791	Identifier	error_code		1287037	0					
ANR	1287792	IdentifierDeclStatement	char buffer [ 1024 ] ;	2183:3:76701:76718	1287037	2	True				
ANR	1287793	IdentifierDecl	buffer [ 1024 ]		1287037	0					
ANR	1287794	IdentifierDeclType	char [ 1024 ]		1287037	0					
ANR	1287795	Identifier	buffer		1287037	1					
ANR	1287796	PrimaryExpression	1024		1287037	2					
ANR	1287797	IdentifierDeclStatement	int buffer_len ;	2184:3:76723:76737	1287037	3	True				
ANR	1287798	IdentifierDecl	buffer_len		1287037	0					
ANR	1287799	IdentifierDeclType	int		1287037	0					
ANR	1287800	Identifier	buffer_len		1287037	1					
ANR	1287801	IdentifierDeclStatement	"zval outbuf , outbuflen ;"	2185:3:76742:76764	1287037	4	True				
ANR	1287802	IdentifierDecl	outbuf		1287037	0					
ANR	1287803	IdentifierDeclType	zval		1287037	0					
ANR	1287804	Identifier	outbuf		1287037	1					
ANR	1287805	IdentifierDecl	outbuflen		1287037	1					
ANR	1287806	IdentifierDeclType	zval		1287037	0					
ANR	1287807	Identifier	outbuflen		1287037	1					
ANR	1287808	IdentifierDeclStatement	va_list argcopy ;	2187:3:76784:76799	1287037	5	True				
ANR	1287809	IdentifierDecl	argcopy		1287037	0					
ANR	1287810	IdentifierDeclType	va_list		1287037	0					
ANR	1287811	Identifier	argcopy		1287037	1					
ANR	1287812	IdentifierDeclStatement	zend_object_store_bucket * old_objects ;	2189:3:76811:76848	1287037	6	True				
ANR	1287813	IdentifierDecl	* old_objects		1287037	0					
ANR	1287814	IdentifierDeclType	zend_object_store_bucket *		1287037	0					
ANR	1287815	Identifier	old_objects		1287037	1					
ANR	1287816	IdentifierDeclStatement	int old = PG ( display_errors ) ;	2190:3:76853:76881	1287037	7	True				
ANR	1287817	IdentifierDecl	old = PG ( display_errors )		1287037	0					
ANR	1287818	IdentifierDeclType	int		1287037	0					
ANR	1287819	Identifier	old		1287037	1					
ANR	1287820	AssignmentExpression	old = PG ( display_errors )		1287037	2		=			
ANR	1287821	Identifier	old		1287037	0					
ANR	1287822	CallExpression	PG ( display_errors )		1287037	1					
ANR	1287823	Callee	PG		1287037	0					
ANR	1287824	Identifier	PG		1287037	0					
ANR	1287825	ArgumentList	display_errors		1287037	1					
ANR	1287826	Argument	display_errors		1287037	0					
ANR	1287827	Identifier	display_errors		1287037	0					
ANR	1287828	ExpressionStatement	INIT_ZVAL ( outbuf )	2192:3:76887:76904	1287037	8	True				
ANR	1287829	CallExpression	INIT_ZVAL ( outbuf )		1287037	0					
ANR	1287830	Callee	INIT_ZVAL		1287037	0					
ANR	1287831	Identifier	INIT_ZVAL		1287037	0					
ANR	1287832	ArgumentList	outbuf		1287037	1					
ANR	1287833	Argument	outbuf		1287037	0					
ANR	1287834	Identifier	outbuf		1287037	0					
ANR	1287835	ExpressionStatement	INIT_ZVAL ( outbuflen )	2193:3:76909:76929	1287037	9	True				
ANR	1287836	CallExpression	INIT_ZVAL ( outbuflen )		1287037	0					
ANR	1287837	Callee	INIT_ZVAL		1287037	0					
ANR	1287838	Identifier	INIT_ZVAL		1287037	0					
ANR	1287839	ArgumentList	outbuflen		1287037	1					
ANR	1287840	Argument	outbuflen		1287037	0					
ANR	1287841	Identifier	outbuflen		1287037	0					
ANR	1287842	ExpressionStatement	"va_copy ( argcopy , args )"	2195:3:76949:76971	1287037	10	True				
ANR	1287843	CallExpression	"va_copy ( argcopy , args )"		1287037	0					
ANR	1287844	Callee	va_copy		1287037	0					
ANR	1287845	Identifier	va_copy		1287037	0					
ANR	1287846	ArgumentList	argcopy		1287037	1					
ANR	1287847	Argument	argcopy		1287037	0					
ANR	1287848	Identifier	argcopy		1287037	0					
ANR	1287849	Argument	args		1287037	1					
ANR	1287850	Identifier	args		1287037	0					
ANR	1287851	ExpressionStatement	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"	2196:3:76976:77041	1287037	11	True				
ANR	1287852	AssignmentExpression	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1287037	0		=			
ANR	1287853	Identifier	buffer_len		1287037	0					
ANR	1287854	CallExpression	"vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1287037	1					
ANR	1287855	Callee	vslprintf		1287037	0					
ANR	1287856	Identifier	vslprintf		1287037	0					
ANR	1287857	ArgumentList	buffer		1287037	1					
ANR	1287858	Argument	buffer		1287037	0					
ANR	1287859	Identifier	buffer		1287037	0					
ANR	1287860	Argument	sizeof ( buffer ) - 1		1287037	1					
ANR	1287861	AdditiveExpression	sizeof ( buffer ) - 1		1287037	0		-			
ANR	1287862	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287863	Sizeof	sizeof		1287037	0					
ANR	1287864	SizeofOperand	buffer		1287037	1					
ANR	1287865	PrimaryExpression	1		1287037	1					
ANR	1287866	Argument	format		1287037	2					
ANR	1287867	Identifier	format		1287037	0					
ANR	1287868	Argument	argcopy		1287037	3					
ANR	1287869	Identifier	argcopy		1287037	0					
ANR	1287870	ExpressionStatement	va_end ( argcopy )	2197:3:77046:77061	1287037	12	True				
ANR	1287871	CallExpression	va_end ( argcopy )		1287037	0					
ANR	1287872	Callee	va_end		1287037	0					
ANR	1287873	Identifier	va_end		1287037	0					
ANR	1287874	ArgumentList	argcopy		1287037	1					
ANR	1287875	Argument	argcopy		1287037	0					
ANR	1287876	Identifier	argcopy		1287037	0					
ANR	1287877	ExpressionStatement	buffer [ sizeof ( buffer ) - 1 ] = 0	2201:3:77146:77172	1287037	13	True				
ANR	1287878	AssignmentExpression	buffer [ sizeof ( buffer ) - 1 ] = 0		1287037	0		=			
ANR	1287879	ArrayIndexing	buffer [ sizeof ( buffer ) - 1 ]		1287037	0					
ANR	1287880	Identifier	buffer		1287037	0					
ANR	1287881	AdditiveExpression	sizeof ( buffer ) - 1		1287037	1		-			
ANR	1287882	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287883	Sizeof	sizeof		1287037	0					
ANR	1287884	SizeofOperand	buffer		1287037	1					
ANR	1287885	PrimaryExpression	1		1287037	1					
ANR	1287886	PrimaryExpression	0		1287037	1					
ANR	1287887	IfStatement	if ( buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0 )		1287037	14					
ANR	1287888	Condition	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0	2202:7:77181:77229	1287037	0	True				
ANR	1287889	OrExpression	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0		1287037	0		||			
ANR	1287890	RelationalExpression	buffer_len > sizeof ( buffer ) - 1		1287037	0		>			
ANR	1287891	Identifier	buffer_len		1287037	0					
ANR	1287892	AdditiveExpression	sizeof ( buffer ) - 1		1287037	1		-			
ANR	1287893	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287894	Sizeof	sizeof		1287037	0					
ANR	1287895	SizeofOperand	buffer		1287037	1					
ANR	1287896	PrimaryExpression	1		1287037	1					
ANR	1287897	RelationalExpression	buffer_len < 0		1287037	1		<			
ANR	1287898	Identifier	buffer_len		1287037	0					
ANR	1287899	PrimaryExpression	0		1287037	1					
ANR	1287900	CompoundStatement		57:58:1889:1889	1287037	1					
ANR	1287901	ExpressionStatement	buffer_len = sizeof ( buffer ) - 1	2203:4:77238:77269	1287037	0	True				
ANR	1287902	AssignmentExpression	buffer_len = sizeof ( buffer ) - 1		1287037	0		=			
ANR	1287903	Identifier	buffer_len		1287037	0					
ANR	1287904	AdditiveExpression	sizeof ( buffer ) - 1		1287037	1		-			
ANR	1287905	SizeofExpression	sizeof ( buffer )		1287037	0					
ANR	1287906	Sizeof	sizeof		1287037	0					
ANR	1287907	SizeofOperand	buffer		1287037	1					
ANR	1287908	PrimaryExpression	1		1287037	1					
ANR	1287909	IfStatement	if ( code == NULL )		1287037	15					
ANR	1287910	Condition	code == NULL	2206:7:77284:77295	1287037	0	True				
ANR	1287911	EqualityExpression	code == NULL		1287037	0		==			
ANR	1287912	Identifier	code		1287037	0					
ANR	1287913	Identifier	NULL		1287037	1					
ANR	1287914	CompoundStatement		61:21:1955:1955	1287037	1					
ANR	1287915	ExpressionStatement	"code = ""Client"""	2207:4:77304:77319	1287037	0	True				
ANR	1287916	AssignmentExpression	"code = ""Client"""		1287037	0		=			
ANR	1287917	Identifier	code		1287037	0					
ANR	1287918	PrimaryExpression	"""Client"""		1287037	1					
ANR	1287919	Statement	fault	2209:3:77329:77333	1287037	16	True				
ANR	1287920	Statement	=	2209:9:77335:77335	1287037	17	True				
ANR	1287921	Statement	add_soap_fault	2209:11:77337:77350	1287037	18	True				
ANR	1287922	Statement	(	2209:25:77351:77351	1287037	19	True				
ANR	1287923	Statement	SOAP_GLOBAL	2209:26:77352:77362	1287037	20	True				
ANR	1287924	Statement	(	2209:37:77363:77363	1287037	21	True				
ANR	1287925	Statement	error_object	2209:38:77364:77375	1287037	22	True				
ANR	1287926	Statement	)	2209:50:77376:77376	1287037	23	True				
ANR	1287927	Statement	","	2209:51:77377:77377	1287037	24	True				
ANR	1287928	Statement	code	2209:53:77379:77382	1287037	25	True				
ANR	1287929	Statement	","	2209:57:77383:77383	1287037	26	True				
ANR	1287930	Statement	buffer	2209:59:77385:77390	1287037	27	True				
ANR	1287931	Statement	","	2209:65:77391:77391	1287037	28	True				
ANR	1287932	Statement	NULL	2209:67:77393:77396	1287037	29	True				
ANR	1287933	Statement	","	2209:71:77397:77397	1287037	30	True				
ANR	1287934	Statement	NULL	2209:73:77399:77402	1287037	31	True				
ANR	1287935	Statement	TSRMLS_CC	2209:78:77404:77412	1287037	32	True				
ANR	1287936	Statement	)	2209:87:77413:77413	1287037	33	True				
ANR	1287937	ExpressionStatement		2209:88:77414:77414	1287037	34	True				
ANR	1287938	ExpressionStatement	MAKE_STD_ZVAL ( exception )	2210:3:77419:77443	1287037	35	True				
ANR	1287939	CallExpression	MAKE_STD_ZVAL ( exception )		1287037	0					
ANR	1287940	Callee	MAKE_STD_ZVAL		1287037	0					
ANR	1287941	Identifier	MAKE_STD_ZVAL		1287037	0					
ANR	1287942	ArgumentList	exception		1287037	1					
ANR	1287943	Argument	exception		1287037	0					
ANR	1287944	Identifier	exception		1287037	0					
ANR	1287945	ExpressionStatement	"MAKE_COPY_ZVAL ( & fault , exception )"	2211:3:77448:77481	1287037	36	True				
ANR	1287946	CallExpression	"MAKE_COPY_ZVAL ( & fault , exception )"		1287037	0					
ANR	1287947	Callee	MAKE_COPY_ZVAL		1287037	0					
ANR	1287948	Identifier	MAKE_COPY_ZVAL		1287037	0					
ANR	1287949	ArgumentList	& fault		1287037	1					
ANR	1287950	Argument	& fault		1287037	0					
ANR	1287951	UnaryOperationExpression	& fault		1287037	0					
ANR	1287952	UnaryOperator	&		1287037	0					
ANR	1287953	Identifier	fault		1287037	1					
ANR	1287954	Argument	exception		1287037	1					
ANR	1287955	Identifier	exception		1287037	0					
ANR	1287956	Statement	zend_throw_exception_object	2212:3:77486:77512	1287037	37	True				
ANR	1287957	Statement	(	2212:30:77513:77513	1287037	38	True				
ANR	1287958	Statement	exception	2212:31:77514:77522	1287037	39	True				
ANR	1287959	Statement	TSRMLS_CC	2212:41:77524:77532	1287037	40	True				
ANR	1287960	Statement	)	2212:50:77533:77533	1287037	41	True				
ANR	1287961	ExpressionStatement		2212:51:77534:77534	1287037	42	True				
ANR	1287962	ExpressionStatement	old_objects = EG ( objects_store ) . object_buckets	2214:3:77540:77586	1287037	43	True				
ANR	1287963	AssignmentExpression	old_objects = EG ( objects_store ) . object_buckets		1287037	0		=			
ANR	1287964	Identifier	old_objects		1287037	0					
ANR	1287965	MemberAccess	EG ( objects_store ) . object_buckets		1287037	1					
ANR	1287966	CallExpression	EG ( objects_store )		1287037	0					
ANR	1287967	Callee	EG		1287037	0					
ANR	1287968	Identifier	EG		1287037	0					
ANR	1287969	ArgumentList	objects_store		1287037	1					
ANR	1287970	Argument	objects_store		1287037	0					
ANR	1287971	Identifier	objects_store		1287037	0					
ANR	1287972	Identifier	object_buckets		1287037	1					
ANR	1287973	ExpressionStatement	EG ( objects_store ) . object_buckets = NULL	2215:3:77591:77630	1287037	44	True				
ANR	1287974	AssignmentExpression	EG ( objects_store ) . object_buckets = NULL		1287037	0		=			
ANR	1287975	MemberAccess	EG ( objects_store ) . object_buckets		1287037	0					
ANR	1287976	CallExpression	EG ( objects_store )		1287037	0					
ANR	1287977	Callee	EG		1287037	0					
ANR	1287978	Identifier	EG		1287037	0					
ANR	1287979	ArgumentList	objects_store		1287037	1					
ANR	1287980	Argument	objects_store		1287037	0					
ANR	1287981	Identifier	objects_store		1287037	0					
ANR	1287982	Identifier	object_buckets		1287037	1					
ANR	1287983	Identifier	NULL		1287037	1					
ANR	1287984	ExpressionStatement	PG ( display_errors ) = 0	2216:3:77635:77657	1287037	45	True				
ANR	1287985	AssignmentExpression	PG ( display_errors ) = 0		1287037	0		=			
ANR	1287986	CallExpression	PG ( display_errors )		1287037	0					
ANR	1287987	Callee	PG		1287037	0					
ANR	1287988	Identifier	PG		1287037	0					
ANR	1287989	ArgumentList	display_errors		1287037	1					
ANR	1287990	Argument	display_errors		1287037	0					
ANR	1287991	Identifier	display_errors		1287037	0					
ANR	1287992	PrimaryExpression	0		1287037	1					
ANR	1287993	ExpressionStatement	SG ( sapi_headers ) . http_status_line = NULL	2217:3:77662:77702	1287037	46	True				
ANR	1287994	AssignmentExpression	SG ( sapi_headers ) . http_status_line = NULL		1287037	0		=			
ANR	1287995	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1287996	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1287997	Callee	SG		1287037	0					
ANR	1287998	Identifier	SG		1287037	0					
ANR	1287999	ArgumentList	sapi_headers		1287037	1					
ANR	1288000	Argument	sapi_headers		1287037	0					
ANR	1288001	Identifier	sapi_headers		1287037	0					
ANR	1288002	Identifier	http_status_line		1287037	1					
ANR	1288003	Identifier	NULL		1287037	1					
ANR	1288004	Statement	zend_try	2218:3:77707:77714	1287037	47	True				
ANR	1288005	CompoundStatement		73:12:2373:2373	1287037	48					
ANR	1288006	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2219:4:77722:77799	1287037	0	True				
ANR	1288007	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1287037	0					
ANR	1288008	Callee	call_old_error_handler		1287037	0					
ANR	1288009	Identifier	call_old_error_handler		1287037	0					
ANR	1288010	ArgumentList	error_num		1287037	1					
ANR	1288011	Argument	error_num		1287037	0					
ANR	1288012	Identifier	error_num		1287037	0					
ANR	1288013	Argument	error_filename		1287037	1					
ANR	1288014	Identifier	error_filename		1287037	0					
ANR	1288015	Argument	error_lineno		1287037	2					
ANR	1288016	Identifier	error_lineno		1287037	0					
ANR	1288017	Argument	format		1287037	3					
ANR	1288018	Identifier	format		1287037	0					
ANR	1288019	Argument	args		1287037	4					
ANR	1288020	Identifier	args		1287037	0					
ANR	1288021	Statement	zend_catch	2220:5:77806:77815	1287037	49	True				
ANR	1288022	CompoundStatement		75:16:2474:2474	1287037	50					
ANR	1288023	ExpressionStatement	CG ( in_compilation ) = _old_in_compilation	2221:4:77823:77863	1287037	0	True				
ANR	1288024	AssignmentExpression	CG ( in_compilation ) = _old_in_compilation		1287037	0		=			
ANR	1288025	CallExpression	CG ( in_compilation )		1287037	0					
ANR	1288026	Callee	CG		1287037	0					
ANR	1288027	Identifier	CG		1287037	0					
ANR	1288028	ArgumentList	in_compilation		1287037	1					
ANR	1288029	Argument	in_compilation		1287037	0					
ANR	1288030	Identifier	in_compilation		1287037	0					
ANR	1288031	Identifier	_old_in_compilation		1287037	1					
ANR	1288032	ExpressionStatement	EG ( in_execution ) = _old_in_execution	2222:4:77869:77905	1287037	1	True				
ANR	1288033	AssignmentExpression	EG ( in_execution ) = _old_in_execution		1287037	0		=			
ANR	1288034	CallExpression	EG ( in_execution )		1287037	0					
ANR	1288035	Callee	EG		1287037	0					
ANR	1288036	Identifier	EG		1287037	0					
ANR	1288037	ArgumentList	in_execution		1287037	1					
ANR	1288038	Argument	in_execution		1287037	0					
ANR	1288039	Identifier	in_execution		1287037	0					
ANR	1288040	Identifier	_old_in_execution		1287037	1					
ANR	1288041	ExpressionStatement	EG ( current_execute_data ) = _old_current_execute_data	2223:4:77911:77963	1287037	2	True				
ANR	1288042	AssignmentExpression	EG ( current_execute_data ) = _old_current_execute_data		1287037	0		=			
ANR	1288043	CallExpression	EG ( current_execute_data )		1287037	0					
ANR	1288044	Callee	EG		1287037	0					
ANR	1288045	Identifier	EG		1287037	0					
ANR	1288046	ArgumentList	current_execute_data		1287037	1					
ANR	1288047	Argument	current_execute_data		1287037	0					
ANR	1288048	Identifier	current_execute_data		1287037	0					
ANR	1288049	Identifier	_old_current_execute_data		1287037	1					
ANR	1288050	IfStatement	if ( SG ( sapi_headers ) . http_status_line )		1287037	3					
ANR	1288051	Condition	SG ( sapi_headers ) . http_status_line	2224:8:77973:78005	1287037	0	True				
ANR	1288052	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1288053	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1288054	Callee	SG		1287037	0					
ANR	1288055	Identifier	SG		1287037	0					
ANR	1288056	ArgumentList	sapi_headers		1287037	1					
ANR	1288057	Argument	sapi_headers		1287037	0					
ANR	1288058	Identifier	sapi_headers		1287037	0					
ANR	1288059	Identifier	http_status_line		1287037	1					
ANR	1288060	CompoundStatement		79:43:2665:2665	1287037	1					
ANR	1288061	ExpressionStatement	efree ( SG ( sapi_headers ) . http_status_line )	2225:5:78015:78055	1287037	0	True				
ANR	1288062	CallExpression	efree ( SG ( sapi_headers ) . http_status_line )		1287037	0					
ANR	1288063	Callee	efree		1287037	0					
ANR	1288064	Identifier	efree		1287037	0					
ANR	1288065	ArgumentList	SG ( sapi_headers ) . http_status_line		1287037	1					
ANR	1288066	Argument	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1288067	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1288068	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1288069	Callee	SG		1287037	0					
ANR	1288070	Identifier	SG		1287037	0					
ANR	1288071	ArgumentList	sapi_headers		1287037	1					
ANR	1288072	Argument	sapi_headers		1287037	0					
ANR	1288073	Identifier	sapi_headers		1287037	0					
ANR	1288074	Identifier	http_status_line		1287037	1					
ANR	1288075	ExpressionStatement	SG ( sapi_headers ) . http_status_line = _old_http_status_line	2227:4:78067:78124	1287037	4	True				
ANR	1288076	AssignmentExpression	SG ( sapi_headers ) . http_status_line = _old_http_status_line		1287037	0		=			
ANR	1288077	MemberAccess	SG ( sapi_headers ) . http_status_line		1287037	0					
ANR	1288078	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1288079	Callee	SG		1287037	0					
ANR	1288080	Identifier	SG		1287037	0					
ANR	1288081	ArgumentList	sapi_headers		1287037	1					
ANR	1288082	Argument	sapi_headers		1287037	0					
ANR	1288083	Identifier	sapi_headers		1287037	0					
ANR	1288084	Identifier	http_status_line		1287037	1					
ANR	1288085	Identifier	_old_http_status_line		1287037	1					
ANR	1288086	ExpressionStatement	SG ( sapi_headers ) . http_response_code = _old_http_response_code	2228:4:78130:78191	1287037	5	True				
ANR	1288087	AssignmentExpression	SG ( sapi_headers ) . http_response_code = _old_http_response_code		1287037	0		=			
ANR	1288088	MemberAccess	SG ( sapi_headers ) . http_response_code		1287037	0					
ANR	1288089	CallExpression	SG ( sapi_headers )		1287037	0					
ANR	1288090	Callee	SG		1287037	0					
ANR	1288091	Identifier	SG		1287037	0					
ANR	1288092	ArgumentList	sapi_headers		1287037	1					
ANR	1288093	Argument	sapi_headers		1287037	0					
ANR	1288094	Identifier	sapi_headers		1287037	0					
ANR	1288095	Identifier	http_response_code		1287037	1					
ANR	1288096	Identifier	_old_http_response_code		1287037	1					
ANR	1288097	ExpressionStatement	zend_end_try ( )	2229:5:78198:78212	1287037	51	True				
ANR	1288098	CallExpression	zend_end_try ( )		1287037	0					
ANR	1288099	Callee	zend_end_try		1287037	0					
ANR	1288100	Identifier	zend_end_try		1287037	0					
ANR	1288101	ArgumentList			1287037	1					
ANR	1288102	ExpressionStatement	EG ( objects_store ) . object_buckets = old_objects	2230:3:78217:78263	1287037	52	True				
ANR	1288103	AssignmentExpression	EG ( objects_store ) . object_buckets = old_objects		1287037	0		=			
ANR	1288104	MemberAccess	EG ( objects_store ) . object_buckets		1287037	0					
ANR	1288105	CallExpression	EG ( objects_store )		1287037	0					
ANR	1288106	Callee	EG		1287037	0					
ANR	1288107	Identifier	EG		1287037	0					
ANR	1288108	ArgumentList	objects_store		1287037	1					
ANR	1288109	Argument	objects_store		1287037	0					
ANR	1288110	Identifier	objects_store		1287037	0					
ANR	1288111	Identifier	object_buckets		1287037	1					
ANR	1288112	Identifier	old_objects		1287037	1					
ANR	1288113	ExpressionStatement	PG ( display_errors ) = old	2231:3:78268:78292	1287037	53	True				
ANR	1288114	AssignmentExpression	PG ( display_errors ) = old		1287037	0		=			
ANR	1288115	CallExpression	PG ( display_errors )		1287037	0					
ANR	1288116	Callee	PG		1287037	0					
ANR	1288117	Identifier	PG		1287037	0					
ANR	1288118	ArgumentList	display_errors		1287037	1					
ANR	1288119	Argument	display_errors		1287037	0					
ANR	1288120	Identifier	display_errors		1287037	0					
ANR	1288121	Identifier	old		1287037	1					
ANR	1288122	ExpressionStatement	zend_bailout ( )	2232:3:78297:78311	1287037	54	True				
ANR	1288123	CallExpression	zend_bailout ( )		1287037	0					
ANR	1288124	Callee	zend_bailout		1287037	0					
ANR	1288125	Identifier	zend_bailout		1287037	0					
ANR	1288126	ArgumentList			1287037	1					
ANR	1288127	ElseStatement	else		1287037	0					
ANR	1288128	IfStatement	"if ( ! use_exceptions || ! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0 )"		1287037	0					
ANR	1288129	Condition	"! use_exceptions || ! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"	2233:13:78326:78441	1287037	0	True				
ANR	1288130	OrExpression	"! use_exceptions || ! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"		1287037	0		||			
ANR	1288131	UnaryOperationExpression	! use_exceptions		1287037	0					
ANR	1288132	UnaryOperator	!		1287037	0					
ANR	1288133	Identifier	use_exceptions		1287037	1					
ANR	1288134	OrExpression	"! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"		1287037	1		||			
ANR	1288135	UnaryOperationExpression	! SOAP_GLOBAL ( error_code )		1287037	0					
ANR	1288136	UnaryOperator	!		1287037	0					
ANR	1288137	CallExpression	SOAP_GLOBAL ( error_code )		1287037	1					
ANR	1288138	Callee	SOAP_GLOBAL		1287037	0					
ANR	1288139	Identifier	SOAP_GLOBAL		1287037	0					
ANR	1288140	ArgumentList	error_code		1287037	1					
ANR	1288141	Argument	error_code		1287037	0					
ANR	1288142	Identifier	error_code		1287037	0					
ANR	1288143	EqualityExpression	"strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"		1287037	1		!=			
ANR	1288144	CallExpression	"strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" )"		1287037	0					
ANR	1288145	Callee	strcmp		1287037	0					
ANR	1288146	Identifier	strcmp		1287037	0					
ANR	1288147	ArgumentList	SOAP_GLOBAL ( error_code )		1287037	1					
ANR	1288148	Argument	SOAP_GLOBAL ( error_code )		1287037	0					
ANR	1288149	CallExpression	SOAP_GLOBAL ( error_code )		1287037	0					
ANR	1288150	Callee	SOAP_GLOBAL		1287037	0					
ANR	1288151	Identifier	SOAP_GLOBAL		1287037	0					
ANR	1288152	ArgumentList	error_code		1287037	1					
ANR	1288153	Argument	error_code		1287037	0					
ANR	1288154	Identifier	error_code		1287037	0					
ANR	1288155	Argument	"""WSDL"""		1287037	1					
ANR	1288156	PrimaryExpression	"""WSDL"""		1287037	0					
ANR	1288157	PrimaryExpression	0		1287037	1					
ANR	1288158	CompoundStatement		90:58:3101:3101	1287037	1					
ANR	1288159	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2237:3:78501:78578	1287037	0	True				
ANR	1288160	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1287037	0					
ANR	1288161	Callee	call_old_error_handler		1287037	0					
ANR	1288162	Identifier	call_old_error_handler		1287037	0					
ANR	1288163	ArgumentList	error_num		1287037	1					
ANR	1288164	Argument	error_num		1287037	0					
ANR	1288165	Identifier	error_num		1287037	0					
ANR	1288166	Argument	error_filename		1287037	1					
ANR	1288167	Identifier	error_filename		1287037	0					
ANR	1288168	Argument	error_lineno		1287037	2					
ANR	1288169	Identifier	error_lineno		1287037	0					
ANR	1288170	Argument	format		1287037	3					
ANR	1288171	Identifier	format		1287037	0					
ANR	1288172	Argument	args		1287037	4					
ANR	1288173	Identifier	args		1287037	0					
ANR	1288174	ReturnType	static void		1287037	1					
ANR	1288175	Identifier	soap_error_handler		1287037	2					
ANR	1288176	ParameterList	"int error_num , const char * error_filename , const uint error_lineno , const char * format , va_list args"		1287037	3					
ANR	1288177	Parameter	int error_num	2145:31:75240:75252	1287037	0	True				
ANR	1288178	ParameterType	int		1287037	0					
ANR	1288179	Identifier	error_num		1287037	1					
ANR	1288180	Parameter	const char * error_filename	2145:46:75255:75280	1287037	1	True				
ANR	1288181	ParameterType	const char *		1287037	0					
ANR	1288182	Identifier	error_filename		1287037	1					
ANR	1288183	Parameter	const uint error_lineno	2145:74:75283:75305	1287037	2	True				
ANR	1288184	ParameterType	const uint		1287037	0					
ANR	1288185	Identifier	error_lineno		1287037	1					
ANR	1288186	Parameter	const char * format	2145:99:75308:75325	1287037	3	True				
ANR	1288187	ParameterType	const char *		1287037	0					
ANR	1288188	Identifier	format		1287037	1					
ANR	1288189	Parameter	va_list args	2145:119:75328:75339	1287037	4	True				
ANR	1288190	ParameterType	va_list		1287037	0					
ANR	1288191	Identifier	args		1287037	1					
ANR	1288192	CFGEntryNode	ENTRY		1287037		True				
ANR	1288193	CFGExitNode	EXIT		1287037		True				
ANR	1288194	Symbol	exception		1287037						
ANR	1288195	Symbol	vslprintf		1287037						
ANR	1288196	Symbol	_old_in_execution		1287037						
ANR	1288197	Symbol	_old_http_response_code		1287037						
ANR	1288198	Symbol	SG ( sapi_headers ) . http_response_code		1287037						
ANR	1288199	Symbol	error_lineno		1287037						
ANR	1288200	Symbol	current_execute_data		1287037						
ANR	1288201	Symbol	E_COMPILE_ERROR		1287037						
ANR	1288202	Symbol	SG ( sapi_headers ) . http_status_line		1287037						
ANR	1288203	Symbol	sapi_headers		1287037						
ANR	1288204	Symbol	zend_hash_find		1287037						
ANR	1288205	Symbol	_old_in_compilation		1287037						
ANR	1288206	Symbol	EG ( objects_store ) . object_buckets		1287037						
ANR	1288207	Symbol	Z_LVAL_PP		1287037						
ANR	1288208	Symbol	tmp		1287037						
ANR	1288209	Symbol	buffer		1287037						
ANR	1288210	Symbol	strcmp		1287037						
ANR	1288211	Symbol	EG		1287037						
ANR	1288212	Symbol	NULL		1287037						
ANR	1288213	Symbol	in_execution		1287037						
ANR	1288214	Symbol	old		1287037						
ANR	1288215	Symbol	format		1287037						
ANR	1288216	Symbol	E_PARSE		1287037						
ANR	1288217	Symbol	SOAP_GLOBAL		1287037						
ANR	1288218	Symbol	error_filename		1287037						
ANR	1288219	Symbol	buffer_len		1287037						
ANR	1288220	Symbol	modules_activated		1287037						
ANR	1288221	Symbol	error_code		1287037						
ANR	1288222	Symbol	& tmp		1287037						
ANR	1288223	Symbol	& fault		1287037						
ANR	1288224	Symbol	_old_http_status_line		1287037						
ANR	1288225	Symbol	code		1287037						
ANR	1288226	Symbol	in_compilation		1287037						
ANR	1288227	Symbol	display_errors		1287037						
ANR	1288228	Symbol	Z_TYPE_PP		1287037						
ANR	1288229	Symbol	error_object		1287037						
ANR	1288230	Symbol	TSRMLS_C		1287037						
ANR	1288231	Symbol	SG		1287037						
ANR	1288232	Symbol	argcopy		1287037						
ANR	1288233	Symbol	outbuflen		1287037						
ANR	1288234	Symbol	E_CORE_ERROR		1287037						
ANR	1288235	Symbol	* buffer		1287037						
ANR	1288236	Symbol	SUCCESS		1287037						
ANR	1288237	Symbol	CG		1287037						
ANR	1288238	Symbol	error_num		1287037						
ANR	1288239	Symbol	objects_store		1287037						
ANR	1288240	Symbol	fault		1287037						
ANR	1288241	Symbol	use_exceptions		1287037						
ANR	1288242	Symbol	Z_OBJPROP_P		1287037						
ANR	1288243	Symbol	use_soap_error_handler		1287037						
ANR	1288244	Symbol	args		1287037						
ANR	1288245	Symbol	fault_obj		1287037						
ANR	1288246	Symbol	_old_current_execute_data		1287037						
ANR	1288247	Symbol	E_ERROR		1287037						
ANR	1288248	Symbol	outbuf		1287037						
ANR	1288249	Symbol	service		1287037						
ANR	1288250	Symbol	PG		1287037						
ANR	1288251	Symbol	old_objects		1287037						
ANR	1288252	Symbol	IS_BOOL		1287037						
ANR	1288253	Symbol	E_USER_ERROR		1287037						
ANR	1288254	DeclStmt									
ANR	1288255	Decl							zend_bool	zend_bool	handler
ANR	1288256	DeclStmt									
ANR	1288257	Decl							zval	zval *	fault
ANR	1288258	DeclStmt									
ANR	1288259	Decl							zval	zval *	wsdl
ANR	1288260	Decl							zval	zval *	options
ANR	1288261	DeclStmt									
ANR	1288262	Decl							int	int	soap_version
ANR	1288263	DeclStmt									
ANR	1288264	Decl							php_stream_context	php_stream_context *	context
ANR	1288265	DeclStmt									
ANR	1288266	Decl							long	long	cache_wsdl
ANR	1288267	DeclStmt									
ANR	1288268	Decl							sdlPtr	sdlPtr	sdl
ANR	1288269	DeclStmt									
ANR	1288270	Decl							HashTable	HashTable *	typemap_ht
ANR	1288271	DeclStmt									
ANR	1288272	Decl							HashTable	HashTable *	ht
ANR	1288273	DeclStmt									
ANR	1288274	Decl							zval	zval * *	tmp
ANR	1288275	DeclStmt									
ANR	1288276	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	encoding
ANR	1288277	DeclStmt									
ANR	1288278	Decl							zval	zval *	class_map
ANR	1288279	DeclStmt									
ANR	1288280	Decl							int	int	old_soap_version
ANR	1288281	Decl							int	int	ret
ANR	1288282	DeclStmt									
ANR	1288283	Decl							HashTable	HashTable *	typemap
ANR	1288284	DeclStmt									
ANR	1288285	Decl							int	int	ret
ANR	1288286	DeclStmt									
ANR	1288287	Decl							int	int	ret
ANR	1288288	DeclStmt									
ANR	1288289	Decl							char	char *	buf
ANR	1288290	DeclStmt									
ANR	1288291	Decl							int	int	buf_size
ANR	1288292	DeclStmt									
ANR	1288293	Decl							zval	zval	func
ANR	1288294	DeclStmt									
ANR	1288295	Decl							zval	zval * [ 5 ]	params
ANR	1288296	DeclStmt									
ANR	1288297	Decl							zval	zval * *	trace
ANR	1288298	DeclStmt									
ANR	1288299	Decl							zval	zval * *	fault
ANR	1288300	DeclStmt									
ANR	1288301	Decl							zval	zval * *	tmp
ANR	1288302	DeclStmt									
ANR	1288303	Decl							zval	zval * *	trace
ANR	1288304	DeclStmt									
ANR	1288305	Decl							sdlPtr	sdlPtr	sdl
ANR	1288306	DeclStmt									
ANR	1288307	Decl							sdlPtr	sdlPtr	old_sdl
ANR	1288308	DeclStmt									
ANR	1288309	Decl							sdlFunctionPtr	sdlFunctionPtr	fn
ANR	1288310	DeclStmt									
ANR	1288311	Decl							xmlDocPtr	xmlDocPtr	request
ANR	1288312	DeclStmt									
ANR	1288313	Decl							int	int	ret
ANR	1288314	DeclStmt									
ANR	1288315	Decl							int	int	soap_version
ANR	1288316	DeclStmt									
ANR	1288317	Decl							zval	zval	response
ANR	1288318	DeclStmt									
ANR	1288319	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	old_encoding
ANR	1288320	DeclStmt									
ANR	1288321	Decl							HashTable	HashTable *	old_class_map
ANR	1288322	DeclStmt									
ANR	1288323	Decl							int	int	old_features
ANR	1288324	DeclStmt									
ANR	1288325	Decl							HashTable	HashTable *	old_typemap
ANR	1288326	Decl							HashTable	HashTable *	typemap
ANR	1288327	DeclStmt									
ANR	1288328	Decl							sdlBindingPtr	sdlBindingPtr	binding
ANR	1288329	DeclStmt									
ANR	1288330	Decl							int	int	one_way
ANR	1288331	DeclStmt									
ANR	1288332	Decl							sdlSoapBindingFunctionPtr	sdlSoapBindingFunctionPtr	fnb
ANR	1288333	DeclStmt									
ANR	1288334	Decl							smart_str	smart_str	error
ANR	1288335	DeclStmt									
ANR	1288336	Decl							zval	zval * *	uri
ANR	1288337	DeclStmt									
ANR	1288338	Decl							smart_str	smart_str	action
ANR	1288339	DeclStmt									
ANR	1288340	Decl							zval	zval * *	fault
ANR	1288341	DeclStmt									
ANR	1288342	Decl							zval	zval * *	fault
ANR	1288343	DeclStmt									
ANR	1288344	Decl							zval	zval *	exception
ANR	1288345	DeclStmt									
ANR	1288346	Decl							zval	zval * *	tmp
ANR	1288347	DeclStmt									
ANR	1288348	Decl							char	char *	function
ANR	1288349	Decl							char	char *	location
ANR	1288350	Decl							char	char *	soap_action
ANR	1288351	Decl							char	char *	uri
ANR	1288352	DeclStmt									
ANR	1288353	Decl							int	int	function_len
ANR	1288354	Decl							int	int	i
ANR	1288355	DeclStmt									
ANR	1288356	Decl							HashTable	HashTable *	soap_headers
ANR	1288357	DeclStmt									
ANR	1288358	Decl							zval	zval *	options
ANR	1288359	DeclStmt									
ANR	1288360	Decl							zval	zval *	headers
ANR	1288361	DeclStmt									
ANR	1288362	Decl							zval	zval *	output_headers
ANR	1288363	DeclStmt									
ANR	1288364	Decl							zval	zval *	args
ANR	1288365	DeclStmt									
ANR	1288366	Decl							zval	zval * *	real_args
ANR	1288367	DeclStmt									
ANR	1288368	Decl							zval	zval * *	param
ANR	1288369	DeclStmt									
ANR	1288370	Decl							int	int	arg_count
ANR	1288371	DeclStmt									
ANR	1288372	Decl							zval	zval * *	tmp
ANR	1288373	DeclStmt									
ANR	1288374	Decl							zend_bool	zend_bool	free_soap_headers
ANR	1288375	DeclStmt									
ANR	1288376	Decl							HashPosition	HashPosition	pos
ANR	1288377	DeclStmt									
ANR	1288378	Decl							HashTable	HashTable *	hto
ANR	1288379	DeclStmt									
ANR	1288380	Decl							HashTable	HashTable *	default_headers
ANR	1288381	DeclStmt									
ANR	1288382	Decl							HashTable	HashTable *	t
ANR	1288383	DeclStmt									
ANR	1288384	Decl							sdlPtr	sdlPtr	sdl
ANR	1288385	DeclStmt									
ANR	1288386	Decl							HashPosition	HashPosition	pos
ANR	1288387	DeclStmt									
ANR	1288388	Decl							smart_str	smart_str	buf
ANR	1288389	DeclStmt									
ANR	1288390	Decl							sdlFunctionPtr	sdlFunctionPtr *	function
ANR	1288391	DeclStmt									
ANR	1288392	Decl							sdlPtr	sdlPtr	sdl
ANR	1288393	DeclStmt									
ANR	1288394	Decl							HashPosition	HashPosition	pos
ANR	1288395	DeclStmt									
ANR	1288396	Decl							sdlTypePtr	sdlTypePtr *	type
ANR	1288397	DeclStmt									
ANR	1288398	Decl							smart_str	smart_str	buf
ANR	1288399	DeclStmt									
ANR	1288400	Decl							zval	zval * *	tmp
ANR	1288401	DeclStmt									
ANR	1288402	Decl							zval	zval * *	tmp
ANR	1288403	DeclStmt									
ANR	1288404	Decl							zval	zval * *	tmp
ANR	1288405	DeclStmt									
ANR	1288406	Decl							zval	zval * *	tmp
ANR	1288407	DeclStmt									
ANR	1288408	Decl							char	char *	buf
ANR	1288409	Decl							char	char *	location
ANR	1288410	Decl							char	char *	action
ANR	1288411	DeclStmt									
ANR	1288412	Decl							int	int	buf_size
ANR	1288413	Decl							int	int	location_size
ANR	1288414	Decl							int	int	action_size
ANR	1288415	DeclStmt									
ANR	1288416	Decl							long	long	version
ANR	1288417	DeclStmt									
ANR	1288418	Decl							long	long	one_way
ANR	1288419	DeclStmt									
ANR	1288420	Decl							char	char *	name
ANR	1288421	DeclStmt									
ANR	1288422	Decl							char	char *	val
ANR	1288423	DeclStmt									
ANR	1288424	Decl							int	int	name_len
ANR	1288425	Decl							int	int	val_len
ANR	1288426	DeclStmt									
ANR	1288427	Decl							zval	zval * *	cookies
ANR	1288428	DeclStmt									
ANR	1288429	Decl							zval	zval *	zcookie
ANR	1288430	DeclStmt									
ANR	1288431	Decl							zval	zval *	tmp_cookies
ANR	1288432	DeclStmt									
ANR	1288433	Decl							zval	zval * *	cookies
ANR	1288434	Decl							zval	zval *	tmp
ANR	1288435	DeclStmt									
ANR	1288436	Decl							zval	zval *	headers
ANR	1288437	DeclStmt									
ANR	1288438	Decl							zval	zval *	default_headers
ANR	1288439	DeclStmt									
ANR	1288440	Decl							zval	zval *	default_headers
ANR	1288441	DeclStmt									
ANR	1288442	Decl							char	char *	location
ANR	1288443	DeclStmt									
ANR	1288444	Decl							int	int	location_len
ANR	1288445	DeclStmt									
ANR	1288446	Decl							zval	zval * *	tmp
ANR	1288447	DeclStmt									
ANR	1288448	Decl							zval	zval *	fault
ANR	1288449	DeclStmt									
ANR	1288450	Decl							int	int	soap_version
ANR	1288451	DeclStmt									
ANR	1288452	Decl							int	int	cur_param
ANR	1288453	Decl							int	int	num_of_params
ANR	1288454	DeclStmt									
ANR	1288455	Decl							zval	zval * *	tmp_parameters
ANR	1288456	DeclStmt									
ANR	1288457	Decl							sdlParamPtr	sdlParamPtr *	param
ANR	1288458	DeclStmt									
ANR	1288459	Decl							xmlNodePtr	xmlNodePtr	val
ANR	1288460	DeclStmt									
ANR	1288461	Decl							int	int	use_names
ANR	1288462	DeclStmt									
ANR	1288463	Decl							xmlNodePtr	xmlNodePtr	trav
ANR	1288464	DeclStmt									
ANR	1288465	Decl							encodePtr	encodePtr	enc
ANR	1288466	DeclStmt									
ANR	1288467	Decl							sdlParamPtr	sdlParamPtr *	param
ANR	1288468	Function	find_function	3448:0:118074:118924							
ANR	1288469	FunctionDef	"find_function (sdlPtr sdl , xmlNodePtr func , zval * function_name)"		1288468	0					
ANR	1288470	CompoundStatement		3449:0:118160:118924	1288468	0					
ANR	1288471	IdentifierDeclStatement	sdlFunctionPtr function ;	3450:1:118163:118186	1288468	0	True				
ANR	1288472	IdentifierDecl	function		1288468	0					
ANR	1288473	IdentifierDeclType	sdlFunctionPtr		1288468	0					
ANR	1288474	Identifier	function		1288468	1					
ANR	1288475	ExpressionStatement	"function = get_function ( sdl , ( char * ) func -> name )"	3452:1:118190:118237	1288468	1	True				
ANR	1288476	AssignmentExpression	"function = get_function ( sdl , ( char * ) func -> name )"		1288468	0		=			
ANR	1288477	Identifier	function		1288468	0					
ANR	1288478	CallExpression	"get_function ( sdl , ( char * ) func -> name )"		1288468	1					
ANR	1288479	Callee	get_function		1288468	0					
ANR	1288480	Identifier	get_function		1288468	0					
ANR	1288481	ArgumentList	sdl		1288468	1					
ANR	1288482	Argument	sdl		1288468	0					
ANR	1288483	Identifier	sdl		1288468	0					
ANR	1288484	Argument	( char * ) func -> name		1288468	1					
ANR	1288485	CastExpression	( char * ) func -> name		1288468	0					
ANR	1288486	CastTarget	char *		1288468	0					
ANR	1288487	PtrMemberAccess	func -> name		1288468	1					
ANR	1288488	Identifier	func		1288468	0					
ANR	1288489	Identifier	name		1288468	1					
ANR	1288490	IfStatement	if ( function && function -> binding && function -> binding -> bindingType == BINDING_SOAP )		1288468	2					
ANR	1288491	Condition	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP	3453:5:118244:118322	1288468	0	True				
ANR	1288492	AndExpression	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP		1288468	0		&&			
ANR	1288493	Identifier	function		1288468	0					
ANR	1288494	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP		1288468	1		&&			
ANR	1288495	PtrMemberAccess	function -> binding		1288468	0					
ANR	1288496	Identifier	function		1288468	0					
ANR	1288497	Identifier	binding		1288468	1					
ANR	1288498	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1288468	1		==			
ANR	1288499	PtrMemberAccess	function -> binding -> bindingType		1288468	0					
ANR	1288500	PtrMemberAccess	function -> binding		1288468	0					
ANR	1288501	Identifier	function		1288468	0					
ANR	1288502	Identifier	binding		1288468	1					
ANR	1288503	Identifier	bindingType		1288468	1					
ANR	1288504	Identifier	BINDING_SOAP		1288468	1					
ANR	1288505	CompoundStatement		6:2:168:254	1288468	1					
ANR	1288506	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	3454:2:118329:118415	1288468	0	True				
ANR	1288507	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1288468	0					
ANR	1288508	IdentifierDeclType	sdlSoapBindingFunctionPtr		1288468	0					
ANR	1288509	Identifier	fnb		1288468	1					
ANR	1288510	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1288468	2		=			
ANR	1288511	Identifier	fnb		1288468	0					
ANR	1288512	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1288468	1					
ANR	1288513	CastTarget	sdlSoapBindingFunctionPtr		1288468	0					
ANR	1288514	PtrMemberAccess	function -> bindingAttributes		1288468	1					
ANR	1288515	Identifier	function		1288468	0					
ANR	1288516	Identifier	bindingAttributes		1288468	1					
ANR	1288517	IfStatement	if ( fnb -> style == SOAP_DOCUMENT )		1288468	1					
ANR	1288518	Condition	fnb -> style == SOAP_DOCUMENT	3455:6:118423:118449	1288468	0	True				
ANR	1288519	EqualityExpression	fnb -> style == SOAP_DOCUMENT		1288468	0		==			
ANR	1288520	PtrMemberAccess	fnb -> style		1288468	0					
ANR	1288521	Identifier	fnb		1288468	0					
ANR	1288522	Identifier	style		1288468	1					
ANR	1288523	Identifier	SOAP_DOCUMENT		1288468	1					
ANR	1288524	CompoundStatement		7:35:291:291	1288468	1					
ANR	1288525	IfStatement	if ( func -> children != NULL || ( function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0 ) )		1288468	0					
ANR	1288526	Condition	func -> children != NULL || ( function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0 )	3456:7:118461:118597	1288468	0	True				
ANR	1288527	OrExpression	func -> children != NULL || ( function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0 )		1288468	0		||			
ANR	1288528	EqualityExpression	func -> children != NULL		1288468	0		!=			
ANR	1288529	PtrMemberAccess	func -> children		1288468	0					
ANR	1288530	Identifier	func		1288468	0					
ANR	1288531	Identifier	children		1288468	1					
ANR	1288532	Identifier	NULL		1288468	1					
ANR	1288533	AndExpression	function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0		1288468	1		&&			
ANR	1288534	EqualityExpression	function -> requestParameters != NULL		1288468	0		!=			
ANR	1288535	PtrMemberAccess	function -> requestParameters		1288468	0					
ANR	1288536	Identifier	function		1288468	0					
ANR	1288537	Identifier	requestParameters		1288468	1					
ANR	1288538	Identifier	NULL		1288468	1					
ANR	1288539	RelationalExpression	zend_hash_num_elements ( function -> requestParameters ) > 0		1288468	1		>			
ANR	1288540	CallExpression	zend_hash_num_elements ( function -> requestParameters )		1288468	0					
ANR	1288541	Callee	zend_hash_num_elements		1288468	0					
ANR	1288542	Identifier	zend_hash_num_elements		1288468	0					
ANR	1288543	ArgumentList	function -> requestParameters		1288468	1					
ANR	1288544	Argument	function -> requestParameters		1288468	0					
ANR	1288545	PtrMemberAccess	function -> requestParameters		1288468	0					
ANR	1288546	Identifier	function		1288468	0					
ANR	1288547	Identifier	requestParameters		1288468	1					
ANR	1288548	PrimaryExpression	0		1288468	1					
ANR	1288549	CompoundStatement		10:66:439:439	1288468	1					
ANR	1288550	ExpressionStatement	function = NULL	3459:4:118606:118621	1288468	0	True				
ANR	1288551	AssignmentExpression	function = NULL		1288468	0		=			
ANR	1288552	Identifier	function		1288468	0					
ANR	1288553	Identifier	NULL		1288468	1					
ANR	1288554	IfStatement	if ( sdl != NULL && function == NULL )		1288468	3					
ANR	1288555	Condition	sdl != NULL && function == NULL	3463:5:118640:118670	1288468	0	True				
ANR	1288556	AndExpression	sdl != NULL && function == NULL		1288468	0		&&			
ANR	1288557	EqualityExpression	sdl != NULL		1288468	0		!=			
ANR	1288558	Identifier	sdl		1288468	0					
ANR	1288559	Identifier	NULL		1288468	1					
ANR	1288560	EqualityExpression	function == NULL		1288468	1		==			
ANR	1288561	Identifier	function		1288468	0					
ANR	1288562	Identifier	NULL		1288468	1					
ANR	1288563	CompoundStatement		15:38:512:512	1288468	1					
ANR	1288564	ExpressionStatement	"function = get_doc_function ( sdl , func )"	3464:2:118677:118715	1288468	0	True				
ANR	1288565	AssignmentExpression	"function = get_doc_function ( sdl , func )"		1288468	0		=			
ANR	1288566	Identifier	function		1288468	0					
ANR	1288567	CallExpression	"get_doc_function ( sdl , func )"		1288468	1					
ANR	1288568	Callee	get_doc_function		1288468	0					
ANR	1288569	Identifier	get_doc_function		1288468	0					
ANR	1288570	ArgumentList	sdl		1288468	1					
ANR	1288571	Argument	sdl		1288468	0					
ANR	1288572	Identifier	sdl		1288468	0					
ANR	1288573	Argument	func		1288468	1					
ANR	1288574	Identifier	func		1288468	0					
ANR	1288575	ExpressionStatement	INIT_ZVAL ( * function_name )	3467:1:118722:118747	1288468	4	True				
ANR	1288576	CallExpression	INIT_ZVAL ( * function_name )		1288468	0					
ANR	1288577	Callee	INIT_ZVAL		1288468	0					
ANR	1288578	Identifier	INIT_ZVAL		1288468	0					
ANR	1288579	ArgumentList	* function_name		1288468	1					
ANR	1288580	Argument	* function_name		1288468	0					
ANR	1288581	UnaryOperationExpression	* function_name		1288468	0					
ANR	1288582	UnaryOperator	*		1288468	0					
ANR	1288583	Identifier	function_name		1288468	1					
ANR	1288584	IfStatement	if ( function != NULL )		1288468	5					
ANR	1288585	Condition	function != NULL	3468:5:118754:118769	1288468	0	True				
ANR	1288586	EqualityExpression	function != NULL		1288468	0		!=			
ANR	1288587	Identifier	function		1288468	0					
ANR	1288588	Identifier	NULL		1288468	1					
ANR	1288589	CompoundStatement		20:23:611:611	1288468	1					
ANR	1288590	ExpressionStatement	"ZVAL_STRING ( function_name , ( char * ) function -> functionName , 1 )"	3469:2:118776:118837	1288468	0	True				
ANR	1288591	CallExpression	"ZVAL_STRING ( function_name , ( char * ) function -> functionName , 1 )"		1288468	0					
ANR	1288592	Callee	ZVAL_STRING		1288468	0					
ANR	1288593	Identifier	ZVAL_STRING		1288468	0					
ANR	1288594	ArgumentList	function_name		1288468	1					
ANR	1288595	Argument	function_name		1288468	0					
ANR	1288596	Identifier	function_name		1288468	0					
ANR	1288597	Argument	( char * ) function -> functionName		1288468	1					
ANR	1288598	CastExpression	( char * ) function -> functionName		1288468	0					
ANR	1288599	CastTarget	char *		1288468	0					
ANR	1288600	PtrMemberAccess	function -> functionName		1288468	1					
ANR	1288601	Identifier	function		1288468	0					
ANR	1288602	Identifier	functionName		1288468	1					
ANR	1288603	Argument	1		1288468	2					
ANR	1288604	PrimaryExpression	1		1288468	0					
ANR	1288605	ElseStatement	else		1288468	0					
ANR	1288606	CompoundStatement		22:8:686:686	1288468	0					
ANR	1288607	ExpressionStatement	"ZVAL_STRING ( function_name , ( char * ) func -> name , 1 )"	3471:2:118851:118900	1288468	0	True				
ANR	1288608	CallExpression	"ZVAL_STRING ( function_name , ( char * ) func -> name , 1 )"		1288468	0					
ANR	1288609	Callee	ZVAL_STRING		1288468	0					
ANR	1288610	Identifier	ZVAL_STRING		1288468	0					
ANR	1288611	ArgumentList	function_name		1288468	1					
ANR	1288612	Argument	function_name		1288468	0					
ANR	1288613	Identifier	function_name		1288468	0					
ANR	1288614	Argument	( char * ) func -> name		1288468	1					
ANR	1288615	CastExpression	( char * ) func -> name		1288468	0					
ANR	1288616	CastTarget	char *		1288468	0					
ANR	1288617	PtrMemberAccess	func -> name		1288468	1					
ANR	1288618	Identifier	func		1288468	0					
ANR	1288619	Identifier	name		1288468	1					
ANR	1288620	Argument	1		1288468	2					
ANR	1288621	PrimaryExpression	1		1288468	0					
ANR	1288622	ReturnStatement	return function ;	3474:1:118907:118922	1288468	6	True				
ANR	1288623	Identifier	function		1288468	0					
ANR	1288624	ReturnType	static sdlFunctionPtr		1288468	1					
ANR	1288625	Identifier	find_function		1288468	2					
ANR	1288626	ParameterList	"sdlPtr sdl , xmlNodePtr func , zval * function_name"		1288468	3					
ANR	1288627	Parameter	sdlPtr sdl	3448:36:118110:118119	1288468	0	True				
ANR	1288628	ParameterType	sdlPtr		1288468	0					
ANR	1288629	Identifier	sdl		1288468	1					
ANR	1288630	Parameter	xmlNodePtr func	3448:48:118122:118136	1288468	1	True				
ANR	1288631	ParameterType	xmlNodePtr		1288468	0					
ANR	1288632	Identifier	func		1288468	1					
ANR	1288633	Parameter	zval * function_name	3448:65:118139:118157	1288468	2	True				
ANR	1288634	ParameterType	zval *		1288468	0					
ANR	1288635	Identifier	function_name		1288468	1					
ANR	1288636	CFGEntryNode	ENTRY		1288468		True				
ANR	1288637	CFGExitNode	EXIT		1288468		True				
ANR	1288638	Symbol	get_doc_function		1288468						
ANR	1288639	Symbol	* function_name		1288468						
ANR	1288640	Symbol	func -> name		1288468						
ANR	1288641	Symbol	function -> requestParameters		1288468						
ANR	1288642	Symbol	get_function		1288468						
ANR	1288643	Symbol	BINDING_SOAP		1288468						
ANR	1288644	Symbol	function		1288468						
ANR	1288645	Symbol	fnb		1288468						
ANR	1288646	Symbol	function -> binding		1288468						
ANR	1288647	Symbol	* * function		1288468						
ANR	1288648	Symbol	function -> functionName		1288468						
ANR	1288649	Symbol	NULL		1288468						
ANR	1288650	Symbol	* func		1288468						
ANR	1288651	Symbol	zend_hash_num_elements		1288468						
ANR	1288652	Symbol	* function		1288468						
ANR	1288653	Symbol	function -> binding -> bindingType		1288468						
ANR	1288654	Symbol	func		1288468						
ANR	1288655	Symbol	func -> children		1288468						
ANR	1288656	Symbol	SOAP_DOCUMENT		1288468						
ANR	1288657	Symbol	function_name		1288468						
ANR	1288658	Symbol	sdl		1288468						
ANR	1288659	Symbol	* fnb		1288468						
ANR	1288660	Symbol	* function -> binding		1288468						
ANR	1288661	Symbol	function -> bindingAttributes		1288468						
ANR	1288662	Symbol	fnb -> style		1288468						
ANR	1288663	DeclStmt									
ANR	1288664	Decl							char	char *	envelope_ns
ANR	1288665	DeclStmt									
ANR	1288666	Decl							xmlNodePtr	xmlNodePtr	trav
ANR	1288667	Decl							xmlNodePtr	xmlNodePtr	env
ANR	1288668	Decl							xmlNodePtr	xmlNodePtr	head
ANR	1288669	Decl							xmlNodePtr	xmlNodePtr	body
ANR	1288670	Decl							xmlNodePtr	xmlNodePtr	func
ANR	1288671	DeclStmt									
ANR	1288672	Decl							xmlAttrPtr	xmlAttrPtr	attr
ANR	1288673	DeclStmt									
ANR	1288674	Decl							sdlFunctionPtr	sdlFunctionPtr	function
ANR	1288675	DeclStmt									
ANR	1288676	Decl							soapHeader	soapHeader *	h
ANR	1288677	Decl							soapHeader	soapHeader *	last
ANR	1288678	DeclStmt									
ANR	1288679	Decl							xmlNodePtr	xmlNodePtr	hdr_func
ANR	1288680	DeclStmt									
ANR	1288681	Decl							int	int	mustUnderstand
ANR	1288682	DeclStmt									
ANR	1288683	Decl							sdlSoapBindingFunctionHeaderPtr	sdlSoapBindingFunctionHeaderPtr *	hdr
ANR	1288684	DeclStmt									
ANR	1288685	Decl							sdlSoapBindingFunctionPtr	sdlSoapBindingFunctionPtr	fnb
ANR	1288686	DeclStmt									
ANR	1288687	Decl							smart_str	smart_str	key
ANR	1288688	DeclStmt									
ANR	1288689	Decl							sdlSoapBindingFunctionPtr	sdlSoapBindingFunctionPtr	fnb
ANR	1288690	DeclStmt									
ANR	1288691	Decl							sdlSoapBindingFunctionPtr	sdlSoapBindingFunctionPtr	fnb
ANR	1288692	Function	set_soap_header_attributes	3739:0:128588:130085							
ANR	1288693	FunctionDef	"set_soap_header_attributes (xmlNodePtr h , HashTable * ht , int version)"		1288692	0					
ANR	1288694	CompoundStatement		3740:0:128669:130085	1288692	0					
ANR	1288695	IdentifierDeclStatement	zval * * tmp ;	3741:1:128672:128682	1288692	0	True				
ANR	1288696	IdentifierDecl	* * tmp		1288692	0					
ANR	1288697	IdentifierDeclType	zval * *		1288692	0					
ANR	1288698	Identifier	tmp		1288692	1					
ANR	1288699	IfStatement	"if ( zend_hash_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_BOOL && Z_LVAL_PP ( tmp ) )"		1288692	1					
ANR	1288700	Condition	"zend_hash_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_BOOL && Z_LVAL_PP ( tmp )"	3743:5:128690:128828	1288692	0	True				
ANR	1288701	AndExpression	"zend_hash_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_BOOL && Z_LVAL_PP ( tmp )"		1288692	0		&&			
ANR	1288702	EqualityExpression	"zend_hash_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) , ( void * * ) & tmp ) == SUCCESS"		1288692	0		==			
ANR	1288703	CallExpression	"zend_hash_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) , ( void * * ) & tmp )"		1288692	0					
ANR	1288704	Callee	zend_hash_find		1288692	0					
ANR	1288705	Identifier	zend_hash_find		1288692	0					
ANR	1288706	ArgumentList	ht		1288692	1					
ANR	1288707	Argument	ht		1288692	0					
ANR	1288708	Identifier	ht		1288692	0					
ANR	1288709	Argument	"""mustUnderstand"""		1288692	1					
ANR	1288710	PrimaryExpression	"""mustUnderstand"""		1288692	0					
ANR	1288711	Argument	"sizeof ( ""mustUnderstand"" )"		1288692	2					
ANR	1288712	SizeofExpression	"sizeof ( ""mustUnderstand"" )"		1288692	0					
ANR	1288713	Sizeof	sizeof		1288692	0					
ANR	1288714	PrimaryExpression	"""mustUnderstand"""		1288692	1					
ANR	1288715	Argument	( void * * ) & tmp		1288692	3					
ANR	1288716	CastExpression	( void * * ) & tmp		1288692	0					
ANR	1288717	CastTarget	void * *		1288692	0					
ANR	1288718	UnaryOperationExpression	& tmp		1288692	1					
ANR	1288719	UnaryOperator	&		1288692	0					
ANR	1288720	Identifier	tmp		1288692	1					
ANR	1288721	Identifier	SUCCESS		1288692	1					
ANR	1288722	AndExpression	Z_TYPE_PP ( tmp ) == IS_BOOL && Z_LVAL_PP ( tmp )		1288692	1		&&			
ANR	1288723	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_BOOL		1288692	0		==			
ANR	1288724	CallExpression	Z_TYPE_PP ( tmp )		1288692	0					
ANR	1288725	Callee	Z_TYPE_PP		1288692	0					
ANR	1288726	Identifier	Z_TYPE_PP		1288692	0					
ANR	1288727	ArgumentList	tmp		1288692	1					
ANR	1288728	Argument	tmp		1288692	0					
ANR	1288729	Identifier	tmp		1288692	0					
ANR	1288730	Identifier	IS_BOOL		1288692	1					
ANR	1288731	CallExpression	Z_LVAL_PP ( tmp )		1288692	1					
ANR	1288732	Callee	Z_LVAL_PP		1288692	0					
ANR	1288733	Identifier	Z_LVAL_PP		1288692	0					
ANR	1288734	ArgumentList	tmp		1288692	1					
ANR	1288735	Argument	tmp		1288692	0					
ANR	1288736	Identifier	tmp		1288692	0					
ANR	1288737	CompoundStatement		5:50:161:161	1288692	1					
ANR	1288738	IfStatement	if ( version == SOAP_1_1 )		1288692	0					
ANR	1288739	Condition	version == SOAP_1_1	3745:6:128839:128857	1288692	0	True				
ANR	1288740	EqualityExpression	version == SOAP_1_1		1288692	0		==			
ANR	1288741	Identifier	version		1288692	0					
ANR	1288742	Identifier	SOAP_1_1		1288692	1					
ANR	1288743	CompoundStatement		6:27:190:190	1288692	1					
ANR	1288744	Statement	xmlSetProp	3746:3:128865:128874	1288692	0	True				
ANR	1288745	Statement	(	3746:13:128875:128875	1288692	1	True				
ANR	1288746	Statement	h	3746:14:128876:128876	1288692	2	True				
ANR	1288747	Statement	","	3746:15:128877:128877	1288692	3	True				
ANR	1288748	Statement	BAD_CAST	3746:17:128879:128886	1288692	4	True				
ANR	1288749	Statement	(	3746:25:128887:128887	1288692	5	True				
ANR	1288750	Statement	SOAP_1_1_ENV_NS_PREFIX	3746:26:128888:128909	1288692	6	True				
ANR	1288751	Statement	""":mustUnderstand"""	3746:48:128910:128926	1288692	7	True				
ANR	1288752	Statement	)	3746:65:128927:128927	1288692	8	True				
ANR	1288753	Statement	","	3746:66:128928:128928	1288692	9	True				
ANR	1288754	Statement	BAD_CAST	3746:68:128930:128937	1288692	10	True				
ANR	1288755	Statement	(	3746:76:128938:128938	1288692	11	True				
ANR	1288756	Statement	"""1"""	3746:77:128939:128941	1288692	12	True				
ANR	1288757	Statement	)	3746:80:128942:128942	1288692	13	True				
ANR	1288758	Statement	)	3746:81:128943:128943	1288692	14	True				
ANR	1288759	ExpressionStatement		3746:82:128944:128944	1288692	15	True				
ANR	1288760	ElseStatement	else		1288692	0					
ANR	1288761	CompoundStatement		8:9:285:285	1288692	0					
ANR	1288762	Statement	xmlSetProp	3748:3:128960:128969	1288692	0	True				
ANR	1288763	Statement	(	3748:13:128970:128970	1288692	1	True				
ANR	1288764	Statement	h	3748:14:128971:128971	1288692	2	True				
ANR	1288765	Statement	","	3748:15:128972:128972	1288692	3	True				
ANR	1288766	Statement	BAD_CAST	3748:17:128974:128981	1288692	4	True				
ANR	1288767	Statement	(	3748:25:128982:128982	1288692	5	True				
ANR	1288768	Statement	SOAP_1_2_ENV_NS_PREFIX	3748:26:128983:129004	1288692	6	True				
ANR	1288769	Statement	""":mustUnderstand"""	3748:48:129005:129021	1288692	7	True				
ANR	1288770	Statement	)	3748:65:129022:129022	1288692	8	True				
ANR	1288771	Statement	","	3748:66:129023:129023	1288692	9	True				
ANR	1288772	Statement	BAD_CAST	3748:68:129025:129032	1288692	10	True				
ANR	1288773	Statement	(	3748:76:129033:129033	1288692	11	True				
ANR	1288774	Statement	"""true"""	3748:77:129034:129039	1288692	12	True				
ANR	1288775	Statement	)	3748:83:129040:129040	1288692	13	True				
ANR	1288776	Statement	)	3748:84:129041:129041	1288692	14	True				
ANR	1288777	ExpressionStatement		3748:85:129042:129042	1288692	15	True				
ANR	1288778	IfStatement	"if ( zend_hash_find ( ht , ""actor"" , sizeof ( ""actor"" ) , ( void * * ) & tmp ) == SUCCESS )"		1288692	2					
ANR	1288779	Condition	"zend_hash_find ( ht , ""actor"" , sizeof ( ""actor"" ) , ( void * * ) & tmp ) == SUCCESS"	3751:5:129056:129124	1288692	0	True				
ANR	1288780	EqualityExpression	"zend_hash_find ( ht , ""actor"" , sizeof ( ""actor"" ) , ( void * * ) & tmp ) == SUCCESS"		1288692	0		==			
ANR	1288781	CallExpression	"zend_hash_find ( ht , ""actor"" , sizeof ( ""actor"" ) , ( void * * ) & tmp )"		1288692	0					
ANR	1288782	Callee	zend_hash_find		1288692	0					
ANR	1288783	Identifier	zend_hash_find		1288692	0					
ANR	1288784	ArgumentList	ht		1288692	1					
ANR	1288785	Argument	ht		1288692	0					
ANR	1288786	Identifier	ht		1288692	0					
ANR	1288787	Argument	"""actor"""		1288692	1					
ANR	1288788	PrimaryExpression	"""actor"""		1288692	0					
ANR	1288789	Argument	"sizeof ( ""actor"" )"		1288692	2					
ANR	1288790	SizeofExpression	"sizeof ( ""actor"" )"		1288692	0					
ANR	1288791	Sizeof	sizeof		1288692	0					
ANR	1288792	PrimaryExpression	"""actor"""		1288692	1					
ANR	1288793	Argument	( void * * ) & tmp		1288692	3					
ANR	1288794	CastExpression	( void * * ) & tmp		1288692	0					
ANR	1288795	CastTarget	void * *		1288692	0					
ANR	1288796	UnaryOperationExpression	& tmp		1288692	1					
ANR	1288797	UnaryOperator	&		1288692	0					
ANR	1288798	Identifier	tmp		1288692	1					
ANR	1288799	Identifier	SUCCESS		1288692	1					
ANR	1288800	CompoundStatement		12:76:457:457	1288692	1					
ANR	1288801	IfStatement	if ( Z_TYPE_PP ( tmp ) == IS_STRING )		1288692	0					
ANR	1288802	Condition	Z_TYPE_PP ( tmp ) == IS_STRING	3752:6:129135:129161	1288692	0	True				
ANR	1288803	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1288692	0		==			
ANR	1288804	CallExpression	Z_TYPE_PP ( tmp )		1288692	0					
ANR	1288805	Callee	Z_TYPE_PP		1288692	0					
ANR	1288806	Identifier	Z_TYPE_PP		1288692	0					
ANR	1288807	ArgumentList	tmp		1288692	1					
ANR	1288808	Argument	tmp		1288692	0					
ANR	1288809	Identifier	tmp		1288692	0					
ANR	1288810	Identifier	IS_STRING		1288692	1					
ANR	1288811	CompoundStatement		13:35:494:494	1288692	1					
ANR	1288812	IfStatement	if ( version == SOAP_1_1 )		1288692	0					
ANR	1288813	Condition	version == SOAP_1_1	3753:7:129173:129191	1288692	0	True				
ANR	1288814	EqualityExpression	version == SOAP_1_1		1288692	0		==			
ANR	1288815	Identifier	version		1288692	0					
ANR	1288816	Identifier	SOAP_1_1		1288692	1					
ANR	1288817	CompoundStatement		14:28:524:524	1288692	1					
ANR	1288818	Statement	xmlSetProp	3754:4:129200:129209	1288692	0	True				
ANR	1288819	Statement	(	3754:14:129210:129210	1288692	1	True				
ANR	1288820	Statement	h	3754:15:129211:129211	1288692	2	True				
ANR	1288821	Statement	","	3754:16:129212:129212	1288692	3	True				
ANR	1288822	Statement	BAD_CAST	3754:18:129214:129221	1288692	4	True				
ANR	1288823	Statement	(	3754:26:129222:129222	1288692	5	True				
ANR	1288824	Statement	SOAP_1_1_ENV_NS_PREFIX	3754:27:129223:129244	1288692	6	True				
ANR	1288825	Statement	""":actor"""	3754:49:129245:129252	1288692	7	True				
ANR	1288826	Statement	)	3754:57:129253:129253	1288692	8	True				
ANR	1288827	Statement	","	3754:58:129254:129254	1288692	9	True				
ANR	1288828	Statement	BAD_CAST	3754:60:129256:129263	1288692	10	True				
ANR	1288829	Statement	(	3754:68:129264:129264	1288692	11	True				
ANR	1288830	Statement	Z_STRVAL_PP	3754:69:129265:129275	1288692	12	True				
ANR	1288831	Statement	(	3754:80:129276:129276	1288692	13	True				
ANR	1288832	Statement	tmp	3754:81:129277:129279	1288692	14	True				
ANR	1288833	Statement	)	3754:84:129280:129280	1288692	15	True				
ANR	1288834	Statement	)	3754:85:129281:129281	1288692	16	True				
ANR	1288835	Statement	)	3754:86:129282:129282	1288692	17	True				
ANR	1288836	ExpressionStatement		3754:87:129283:129283	1288692	18	True				
ANR	1288837	ElseStatement	else		1288692	0					
ANR	1288838	CompoundStatement		16:10:625:625	1288692	0					
ANR	1288839	Statement	xmlSetProp	3756:4:129301:129310	1288692	0	True				
ANR	1288840	Statement	(	3756:14:129311:129311	1288692	1	True				
ANR	1288841	Statement	h	3756:15:129312:129312	1288692	2	True				
ANR	1288842	Statement	","	3756:16:129313:129313	1288692	3	True				
ANR	1288843	Statement	BAD_CAST	3756:18:129315:129322	1288692	4	True				
ANR	1288844	Statement	(	3756:26:129323:129323	1288692	5	True				
ANR	1288845	Statement	SOAP_1_2_ENV_NS_PREFIX	3756:27:129324:129345	1288692	6	True				
ANR	1288846	Statement	""":role"""	3756:49:129346:129352	1288692	7	True				
ANR	1288847	Statement	)	3756:56:129353:129353	1288692	8	True				
ANR	1288848	Statement	","	3756:57:129354:129354	1288692	9	True				
ANR	1288849	Statement	BAD_CAST	3756:59:129356:129363	1288692	10	True				
ANR	1288850	Statement	(	3756:67:129364:129364	1288692	11	True				
ANR	1288851	Statement	Z_STRVAL_PP	3756:68:129365:129375	1288692	12	True				
ANR	1288852	Statement	(	3756:79:129376:129376	1288692	13	True				
ANR	1288853	Statement	tmp	3756:80:129377:129379	1288692	14	True				
ANR	1288854	Statement	)	3756:83:129380:129380	1288692	15	True				
ANR	1288855	Statement	)	3756:84:129381:129381	1288692	16	True				
ANR	1288856	Statement	)	3756:85:129382:129382	1288692	17	True				
ANR	1288857	ExpressionStatement		3756:86:129383:129383	1288692	18	True				
ANR	1288858	ElseStatement	else		1288692	0					
ANR	1288859	IfStatement	if ( Z_TYPE_PP ( tmp ) == IS_LONG )		1288692	0					
ANR	1288860	Condition	Z_TYPE_PP ( tmp ) == IS_LONG	3758:13:129403:129427	1288692	0	True				
ANR	1288861	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_LONG		1288692	0		==			
ANR	1288862	CallExpression	Z_TYPE_PP ( tmp )		1288692	0					
ANR	1288863	Callee	Z_TYPE_PP		1288692	0					
ANR	1288864	Identifier	Z_TYPE_PP		1288692	0					
ANR	1288865	ArgumentList	tmp		1288692	1					
ANR	1288866	Argument	tmp		1288692	0					
ANR	1288867	Identifier	tmp		1288692	0					
ANR	1288868	Identifier	IS_LONG		1288692	1					
ANR	1288869	CompoundStatement		19:40:760:760	1288692	1					
ANR	1288870	IfStatement	if ( version == SOAP_1_1 )		1288692	0					
ANR	1288871	Condition	version == SOAP_1_1	3759:7:129439:129457	1288692	0	True				
ANR	1288872	EqualityExpression	version == SOAP_1_1		1288692	0		==			
ANR	1288873	Identifier	version		1288692	0					
ANR	1288874	Identifier	SOAP_1_1		1288692	1					
ANR	1288875	CompoundStatement		20:28:790:790	1288692	1					
ANR	1288876	IfStatement	if ( Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NEXT )		1288692	0					
ANR	1288877	Condition	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NEXT	3760:8:129470:129502	1288692	0	True				
ANR	1288878	EqualityExpression	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NEXT		1288692	0		==			
ANR	1288879	CallExpression	Z_LVAL_PP ( tmp )		1288692	0					
ANR	1288880	Callee	Z_LVAL_PP		1288692	0					
ANR	1288881	Identifier	Z_LVAL_PP		1288692	0					
ANR	1288882	ArgumentList	tmp		1288692	1					
ANR	1288883	Argument	tmp		1288692	0					
ANR	1288884	Identifier	tmp		1288692	0					
ANR	1288885	Identifier	SOAP_ACTOR_NEXT		1288692	1					
ANR	1288886	CompoundStatement		21:43:835:835	1288692	1					
ANR	1288887	Statement	xmlSetProp	3761:5:129512:129521	1288692	0	True				
ANR	1288888	Statement	(	3761:15:129522:129522	1288692	1	True				
ANR	1288889	Statement	h	3761:16:129523:129523	1288692	2	True				
ANR	1288890	Statement	","	3761:17:129524:129524	1288692	3	True				
ANR	1288891	Statement	BAD_CAST	3761:19:129526:129533	1288692	4	True				
ANR	1288892	Statement	(	3761:27:129534:129534	1288692	5	True				
ANR	1288893	Statement	SOAP_1_1_ENV_NS_PREFIX	3761:28:129535:129556	1288692	6	True				
ANR	1288894	Statement	""":actor"""	3761:50:129557:129564	1288692	7	True				
ANR	1288895	Statement	)	3761:58:129565:129565	1288692	8	True				
ANR	1288896	Statement	","	3761:59:129566:129566	1288692	9	True				
ANR	1288897	Statement	BAD_CAST	3761:61:129568:129575	1288692	10	True				
ANR	1288898	Statement	(	3761:69:129576:129576	1288692	11	True				
ANR	1288899	Statement	SOAP_1_1_ACTOR_NEXT	3761:70:129577:129595	1288692	12	True				
ANR	1288900	Statement	)	3761:89:129596:129596	1288692	13	True				
ANR	1288901	Statement	)	3761:90:129597:129597	1288692	14	True				
ANR	1288902	ExpressionStatement		3761:91:129598:129598	1288692	15	True				
ANR	1288903	ElseStatement	else		1288692	0					
ANR	1288904	CompoundStatement		24:10:946:946	1288692	0					
ANR	1288905	IfStatement	if ( Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NEXT )		1288692	0					
ANR	1288906	Condition	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NEXT	3764:8:129626:129658	1288692	0	True				
ANR	1288907	EqualityExpression	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NEXT		1288692	0		==			
ANR	1288908	CallExpression	Z_LVAL_PP ( tmp )		1288692	0					
ANR	1288909	Callee	Z_LVAL_PP		1288692	0					
ANR	1288910	Identifier	Z_LVAL_PP		1288692	0					
ANR	1288911	ArgumentList	tmp		1288692	1					
ANR	1288912	Argument	tmp		1288692	0					
ANR	1288913	Identifier	tmp		1288692	0					
ANR	1288914	Identifier	SOAP_ACTOR_NEXT		1288692	1					
ANR	1288915	CompoundStatement		25:43:991:991	1288692	1					
ANR	1288916	Statement	xmlSetProp	3765:5:129668:129677	1288692	0	True				
ANR	1288917	Statement	(	3765:15:129678:129678	1288692	1	True				
ANR	1288918	Statement	h	3765:16:129679:129679	1288692	2	True				
ANR	1288919	Statement	","	3765:17:129680:129680	1288692	3	True				
ANR	1288920	Statement	BAD_CAST	3765:19:129682:129689	1288692	4	True				
ANR	1288921	Statement	(	3765:27:129690:129690	1288692	5	True				
ANR	1288922	Statement	SOAP_1_2_ENV_NS_PREFIX	3765:28:129691:129712	1288692	6	True				
ANR	1288923	Statement	""":role"""	3765:50:129713:129719	1288692	7	True				
ANR	1288924	Statement	)	3765:57:129720:129720	1288692	8	True				
ANR	1288925	Statement	","	3765:58:129721:129721	1288692	9	True				
ANR	1288926	Statement	BAD_CAST	3765:60:129723:129730	1288692	10	True				
ANR	1288927	Statement	(	3765:68:129731:129731	1288692	11	True				
ANR	1288928	Statement	SOAP_1_2_ACTOR_NEXT	3765:69:129732:129750	1288692	12	True				
ANR	1288929	Statement	)	3765:88:129751:129751	1288692	13	True				
ANR	1288930	Statement	)	3765:89:129752:129752	1288692	14	True				
ANR	1288931	ExpressionStatement		3765:90:129753:129753	1288692	15	True				
ANR	1288932	ElseStatement	else		1288692	0					
ANR	1288933	IfStatement	if ( Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NONE )		1288692	0					
ANR	1288934	Condition	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NONE	3766:15:129770:129802	1288692	0	True				
ANR	1288935	EqualityExpression	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_NONE		1288692	0		==			
ANR	1288936	CallExpression	Z_LVAL_PP ( tmp )		1288692	0					
ANR	1288937	Callee	Z_LVAL_PP		1288692	0					
ANR	1288938	Identifier	Z_LVAL_PP		1288692	0					
ANR	1288939	ArgumentList	tmp		1288692	1					
ANR	1288940	Argument	tmp		1288692	0					
ANR	1288941	Identifier	tmp		1288692	0					
ANR	1288942	Identifier	SOAP_ACTOR_NONE		1288692	1					
ANR	1288943	CompoundStatement		27:50:1135:1135	1288692	1					
ANR	1288944	Statement	xmlSetProp	3767:5:129812:129821	1288692	0	True				
ANR	1288945	Statement	(	3767:15:129822:129822	1288692	1	True				
ANR	1288946	Statement	h	3767:16:129823:129823	1288692	2	True				
ANR	1288947	Statement	","	3767:17:129824:129824	1288692	3	True				
ANR	1288948	Statement	BAD_CAST	3767:19:129826:129833	1288692	4	True				
ANR	1288949	Statement	(	3767:27:129834:129834	1288692	5	True				
ANR	1288950	Statement	SOAP_1_2_ENV_NS_PREFIX	3767:28:129835:129856	1288692	6	True				
ANR	1288951	Statement	""":role"""	3767:50:129857:129863	1288692	7	True				
ANR	1288952	Statement	)	3767:57:129864:129864	1288692	8	True				
ANR	1288953	Statement	","	3767:58:129865:129865	1288692	9	True				
ANR	1288954	Statement	BAD_CAST	3767:60:129867:129874	1288692	10	True				
ANR	1288955	Statement	(	3767:68:129875:129875	1288692	11	True				
ANR	1288956	Statement	SOAP_1_2_ACTOR_NONE	3767:69:129876:129894	1288692	12	True				
ANR	1288957	Statement	)	3767:88:129895:129895	1288692	13	True				
ANR	1288958	Statement	)	3767:89:129896:129896	1288692	14	True				
ANR	1288959	ExpressionStatement		3767:90:129897:129897	1288692	15	True				
ANR	1288960	ElseStatement	else		1288692	0					
ANR	1288961	IfStatement	if ( Z_LVAL_PP ( tmp ) == SOAP_ACTOR_UNLIMATERECEIVER )		1288692	0					
ANR	1288962	Condition	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_UNLIMATERECEIVER	3768:15:129914:129958	1288692	0	True				
ANR	1288963	EqualityExpression	Z_LVAL_PP ( tmp ) == SOAP_ACTOR_UNLIMATERECEIVER		1288692	0		==			
ANR	1288964	CallExpression	Z_LVAL_PP ( tmp )		1288692	0					
ANR	1288965	Callee	Z_LVAL_PP		1288692	0					
ANR	1288966	Identifier	Z_LVAL_PP		1288692	0					
ANR	1288967	ArgumentList	tmp		1288692	1					
ANR	1288968	Argument	tmp		1288692	0					
ANR	1288969	Identifier	tmp		1288692	0					
ANR	1288970	Identifier	SOAP_ACTOR_UNLIMATERECEIVER		1288692	1					
ANR	1288971	CompoundStatement		29:62:1291:1291	1288692	1					
ANR	1288972	Statement	xmlSetProp	3769:5:129968:129977	1288692	0	True				
ANR	1288973	Statement	(	3769:15:129978:129978	1288692	1	True				
ANR	1288974	Statement	h	3769:16:129979:129979	1288692	2	True				
ANR	1288975	Statement	","	3769:17:129980:129980	1288692	3	True				
ANR	1288976	Statement	BAD_CAST	3769:19:129982:129989	1288692	4	True				
ANR	1288977	Statement	(	3769:27:129990:129990	1288692	5	True				
ANR	1288978	Statement	SOAP_1_2_ENV_NS_PREFIX	3769:28:129991:130012	1288692	6	True				
ANR	1288979	Statement	""":role"""	3769:50:130013:130019	1288692	7	True				
ANR	1288980	Statement	)	3769:57:130020:130020	1288692	8	True				
ANR	1288981	Statement	","	3769:58:130021:130021	1288692	9	True				
ANR	1288982	Statement	BAD_CAST	3769:60:130023:130030	1288692	10	True				
ANR	1288983	Statement	(	3769:68:130031:130031	1288692	11	True				
ANR	1288984	Statement	SOAP_1_2_ACTOR_UNLIMATERECEIVER	3769:69:130032:130062	1288692	12	True				
ANR	1288985	Statement	)	3769:100:130063:130063	1288692	13	True				
ANR	1288986	Statement	)	3769:101:130064:130064	1288692	14	True				
ANR	1288987	ExpressionStatement		3769:102:130065:130065	1288692	15	True				
ANR	1288988	ReturnType	static void		1288692	1					
ANR	1288989	Identifier	set_soap_header_attributes		1288692	2					
ANR	1288990	ParameterList	"xmlNodePtr h , HashTable * ht , int version"		1288692	3					
ANR	1288991	Parameter	xmlNodePtr h	3739:39:128627:128638	1288692	0	True				
ANR	1288992	ParameterType	xmlNodePtr		1288692	0					
ANR	1288993	Identifier	h		1288692	1					
ANR	1288994	Parameter	HashTable * ht	3739:53:128641:128653	1288692	1	True				
ANR	1288995	ParameterType	HashTable *		1288692	0					
ANR	1288996	Identifier	ht		1288692	1					
ANR	1288997	Parameter	int version	3739:68:128656:128666	1288692	2	True				
ANR	1288998	ParameterType	int		1288692	0					
ANR	1288999	Identifier	version		1288692	1					
ANR	1289000	CFGEntryNode	ENTRY		1288692		True				
ANR	1289001	CFGExitNode	EXIT		1288692		True				
ANR	1289002	Symbol	SOAP_ACTOR_UNLIMATERECEIVER		1288692						
ANR	1289003	Symbol	SUCCESS		1288692						
ANR	1289004	Symbol	SOAP_1_1		1288692						
ANR	1289005	Symbol	h		1288692						
ANR	1289006	Symbol	ht		1288692						
ANR	1289007	Symbol	version		1288692						
ANR	1289008	Symbol	Z_TYPE_PP		1288692						
ANR	1289009	Symbol	zend_hash_find		1288692						
ANR	1289010	Symbol	SOAP_ACTOR_NONE		1288692						
ANR	1289011	Symbol	SOAP_ACTOR_NEXT		1288692						
ANR	1289012	Symbol	Z_LVAL_PP		1288692						
ANR	1289013	Symbol	tmp		1288692						
ANR	1289014	Symbol	IS_LONG		1288692						
ANR	1289015	Symbol	& tmp		1288692						
ANR	1289016	Symbol	IS_STRING		1288692						
ANR	1289017	Symbol	IS_BOOL		1288692						
ANR	1289018	DeclStmt									
ANR	1289019	Decl							xmlNodePtr	xmlNodePtr	method
ANR	1289020	Decl							xmlNodePtr	xmlNodePtr	param
ANR	1289021	DeclStmt									
ANR	1289022	Decl							sdlParamPtr	sdlParamPtr	parameter
ANR	1289023	DeclStmt									
ANR	1289024	Decl							int	int	param_count
ANR	1289025	DeclStmt									
ANR	1289026	Decl							int	int	style
ANR	1289027	Decl							int	int	use
ANR	1289028	DeclStmt									
ANR	1289029	Decl							xmlNsPtr	xmlNsPtr	ns
ANR	1289030	DeclStmt									
ANR	1289031	Decl							sdlSoapBindingFunctionPtr	sdlSoapBindingFunctionPtr	fnb
ANR	1289032	DeclStmt									
ANR	1289033	Decl							xmlNode	xmlNode *	rpc_result
ANR	1289034	DeclStmt									
ANR	1289035	Decl							xmlNs	xmlNs *	rpc_ns
ANR	1289036	DeclStmt									
ANR	1289037	Decl							HashPosition	HashPosition	pos
ANR	1289038	DeclStmt									
ANR	1289039	Decl							zval	zval * *	data
ANR	1289040	DeclStmt									
ANR	1289041	Decl							int	int	i
ANR	1289042	DeclStmt									
ANR	1289043	Decl							char	char *	param_name
ANR	1289044	DeclStmt									
ANR	1289045	Decl							unsigned int	unsigned int	param_name_len
ANR	1289046	DeclStmt									
ANR	1289047	Decl							ulong	ulong	param_index
ANR	1289048	Function	serialize_response_call	3882:0:133757:146641							
ANR	1289049	FunctionDef	"serialize_response_call (sdlFunctionPtr function , char * function_name , char * uri , zval * ret , soapHeader * headers , int version TSRMLS_DC)"		1289048	0					
ANR	1289050	CompoundStatement		3883:0:133910:146641	1289048	0					
ANR	1289051	IdentifierDeclStatement	xmlDocPtr doc ;	3884:1:133913:133926	1289048	0	True				
ANR	1289052	IdentifierDecl	doc		1289048	0					
ANR	1289053	IdentifierDeclType	xmlDocPtr		1289048	0					
ANR	1289054	Identifier	doc		1289048	1					
ANR	1289055	IdentifierDeclStatement	"xmlNodePtr envelope = NULL , body , param ;"	3885:1:133929:133968	1289048	1	True				
ANR	1289056	IdentifierDecl	envelope = NULL		1289048	0					
ANR	1289057	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1289058	Identifier	envelope		1289048	1					
ANR	1289059	AssignmentExpression	envelope = NULL		1289048	2		=			
ANR	1289060	Identifier	NULL		1289048	0					
ANR	1289061	Identifier	NULL		1289048	1					
ANR	1289062	IdentifierDecl	body		1289048	1					
ANR	1289063	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1289064	Identifier	body		1289048	1					
ANR	1289065	IdentifierDecl	param		1289048	2					
ANR	1289066	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1289067	Identifier	param		1289048	1					
ANR	1289068	IdentifierDeclStatement	xmlNsPtr ns = NULL ;	3886:1:133971:133989	1289048	2	True				
ANR	1289069	IdentifierDecl	ns = NULL		1289048	0					
ANR	1289070	IdentifierDeclType	xmlNsPtr		1289048	0					
ANR	1289071	Identifier	ns		1289048	1					
ANR	1289072	AssignmentExpression	ns = NULL		1289048	2		=			
ANR	1289073	Identifier	NULL		1289048	0					
ANR	1289074	Identifier	NULL		1289048	1					
ANR	1289075	IdentifierDeclStatement	int use = SOAP_LITERAL ;	3887:1:133992:134014	1289048	3	True				
ANR	1289076	IdentifierDecl	use = SOAP_LITERAL		1289048	0					
ANR	1289077	IdentifierDeclType	int		1289048	0					
ANR	1289078	Identifier	use		1289048	1					
ANR	1289079	AssignmentExpression	use = SOAP_LITERAL		1289048	2		=			
ANR	1289080	Identifier	SOAP_LITERAL		1289048	0					
ANR	1289081	Identifier	SOAP_LITERAL		1289048	1					
ANR	1289082	IdentifierDeclStatement	xmlNodePtr head = NULL ;	3888:1:134017:134039	1289048	4	True				
ANR	1289083	IdentifierDecl	head = NULL		1289048	0					
ANR	1289084	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1289085	Identifier	head		1289048	1					
ANR	1289086	AssignmentExpression	head = NULL		1289048	2		=			
ANR	1289087	Identifier	NULL		1289048	0					
ANR	1289088	Identifier	NULL		1289048	1					
ANR	1289089	ExpressionStatement	encode_reset_ns ( )	3890:1:134043:134060	1289048	5	True				
ANR	1289090	CallExpression	encode_reset_ns ( )		1289048	0					
ANR	1289091	Callee	encode_reset_ns		1289048	0					
ANR	1289092	Identifier	encode_reset_ns		1289048	0					
ANR	1289093	ArgumentList			1289048	1					
ANR	1289094	ExpressionStatement	"doc = xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"	3892:1:134064:134096	1289048	6	True				
ANR	1289095	AssignmentExpression	"doc = xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"		1289048	0		=			
ANR	1289096	Identifier	doc		1289048	0					
ANR	1289097	CallExpression	"xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"		1289048	1					
ANR	1289098	Callee	xmlNewDoc		1289048	0					
ANR	1289099	Identifier	xmlNewDoc		1289048	0					
ANR	1289100	ArgumentList	"BAD_CAST ( ""1.0"" )"		1289048	1					
ANR	1289101	Argument	"BAD_CAST ( ""1.0"" )"		1289048	0					
ANR	1289102	CallExpression	"BAD_CAST ( ""1.0"" )"		1289048	0					
ANR	1289103	Callee	BAD_CAST		1289048	0					
ANR	1289104	Identifier	BAD_CAST		1289048	0					
ANR	1289105	ArgumentList	"""1.0"""		1289048	1					
ANR	1289106	Argument	"""1.0"""		1289048	0					
ANR	1289107	PrimaryExpression	"""1.0"""		1289048	0					
ANR	1289108	ExpressionStatement	doc -> charset = XML_CHAR_ENCODING_UTF8	3893:1:134099:134136	1289048	7	True				
ANR	1289109	AssignmentExpression	doc -> charset = XML_CHAR_ENCODING_UTF8		1289048	0		=			
ANR	1289110	PtrMemberAccess	doc -> charset		1289048	0					
ANR	1289111	Identifier	doc		1289048	0					
ANR	1289112	Identifier	charset		1289048	1					
ANR	1289113	Identifier	XML_CHAR_ENCODING_UTF8		1289048	1					
ANR	1289114	ExpressionStatement	"doc -> encoding = xmlCharStrdup ( ""UTF-8"" )"	3894:1:134139:134177	1289048	8	True				
ANR	1289115	AssignmentExpression	"doc -> encoding = xmlCharStrdup ( ""UTF-8"" )"		1289048	0		=			
ANR	1289116	PtrMemberAccess	doc -> encoding		1289048	0					
ANR	1289117	Identifier	doc		1289048	0					
ANR	1289118	Identifier	encoding		1289048	1					
ANR	1289119	CallExpression	"xmlCharStrdup ( ""UTF-8"" )"		1289048	1					
ANR	1289120	Callee	xmlCharStrdup		1289048	0					
ANR	1289121	Identifier	xmlCharStrdup		1289048	0					
ANR	1289122	ArgumentList	"""UTF-8"""		1289048	1					
ANR	1289123	Argument	"""UTF-8"""		1289048	0					
ANR	1289124	PrimaryExpression	"""UTF-8"""		1289048	0					
ANR	1289125	IfStatement	if ( version == SOAP_1_1 )		1289048	9					
ANR	1289126	Condition	version == SOAP_1_1	3896:5:134185:134203	1289048	0	True				
ANR	1289127	EqualityExpression	version == SOAP_1_1		1289048	0		==			
ANR	1289128	Identifier	version		1289048	0					
ANR	1289129	Identifier	SOAP_1_1		1289048	1					
ANR	1289130	CompoundStatement		14:26:295:295	1289048	1					
ANR	1289131	ExpressionStatement	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"	3897:2:134210:134273	1289048	0	True				
ANR	1289132	AssignmentExpression	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		1289048	0		=			
ANR	1289133	Identifier	envelope		1289048	0					
ANR	1289134	CallExpression	"xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		1289048	1					
ANR	1289135	Callee	xmlNewDocNode		1289048	0					
ANR	1289136	Identifier	xmlNewDocNode		1289048	0					
ANR	1289137	ArgumentList	doc		1289048	1					
ANR	1289138	Argument	doc		1289048	0					
ANR	1289139	Identifier	doc		1289048	0					
ANR	1289140	Argument	NULL		1289048	1					
ANR	1289141	Identifier	NULL		1289048	0					
ANR	1289142	Argument	"BAD_CAST ( ""Envelope"" )"		1289048	2					
ANR	1289143	CallExpression	"BAD_CAST ( ""Envelope"" )"		1289048	0					
ANR	1289144	Callee	BAD_CAST		1289048	0					
ANR	1289145	Identifier	BAD_CAST		1289048	0					
ANR	1289146	ArgumentList	"""Envelope"""		1289048	1					
ANR	1289147	Argument	"""Envelope"""		1289048	0					
ANR	1289148	PrimaryExpression	"""Envelope"""		1289048	0					
ANR	1289149	Argument	NULL		1289048	3					
ANR	1289150	Identifier	NULL		1289048	0					
ANR	1289151	ExpressionStatement	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"	3898:2:134277:134368	1289048	1	True				
ANR	1289152	AssignmentExpression	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"		1289048	0		=			
ANR	1289153	Identifier	ns		1289048	0					
ANR	1289154	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"		1289048	1					
ANR	1289155	Callee	xmlNewNs		1289048	0					
ANR	1289156	Identifier	xmlNewNs		1289048	0					
ANR	1289157	ArgumentList	envelope		1289048	1					
ANR	1289158	Argument	envelope		1289048	0					
ANR	1289159	Identifier	envelope		1289048	0					
ANR	1289160	Argument	BAD_CAST ( SOAP_1_1_ENV_NAMESPACE )		1289048	1					
ANR	1289161	CallExpression	BAD_CAST ( SOAP_1_1_ENV_NAMESPACE )		1289048	0					
ANR	1289162	Callee	BAD_CAST		1289048	0					
ANR	1289163	Identifier	BAD_CAST		1289048	0					
ANR	1289164	ArgumentList	SOAP_1_1_ENV_NAMESPACE		1289048	1					
ANR	1289165	Argument	SOAP_1_1_ENV_NAMESPACE		1289048	0					
ANR	1289166	Identifier	SOAP_1_1_ENV_NAMESPACE		1289048	0					
ANR	1289167	Argument	BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX )		1289048	2					
ANR	1289168	CallExpression	BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX )		1289048	0					
ANR	1289169	Callee	BAD_CAST		1289048	0					
ANR	1289170	Identifier	BAD_CAST		1289048	0					
ANR	1289171	ArgumentList	SOAP_1_1_ENV_NS_PREFIX		1289048	1					
ANR	1289172	Argument	SOAP_1_1_ENV_NS_PREFIX		1289048	0					
ANR	1289173	Identifier	SOAP_1_1_ENV_NS_PREFIX		1289048	0					
ANR	1289174	ExpressionStatement	"xmlSetNs ( envelope , ns )"	3899:2:134372:134393	1289048	2	True				
ANR	1289175	CallExpression	"xmlSetNs ( envelope , ns )"		1289048	0					
ANR	1289176	Callee	xmlSetNs		1289048	0					
ANR	1289177	Identifier	xmlSetNs		1289048	0					
ANR	1289178	ArgumentList	envelope		1289048	1					
ANR	1289179	Argument	envelope		1289048	0					
ANR	1289180	Identifier	envelope		1289048	0					
ANR	1289181	Argument	ns		1289048	1					
ANR	1289182	Identifier	ns		1289048	0					
ANR	1289183	ElseStatement	else		1289048	0					
ANR	1289184	IfStatement	if ( version == SOAP_1_2 )		1289048	0					
ANR	1289185	Condition	version == SOAP_1_2	3900:12:134407:134425	1289048	0	True				
ANR	1289186	EqualityExpression	version == SOAP_1_2		1289048	0		==			
ANR	1289187	Identifier	version		1289048	0					
ANR	1289188	Identifier	SOAP_1_2		1289048	1					
ANR	1289189	CompoundStatement		18:33:517:517	1289048	1					
ANR	1289190	ExpressionStatement	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"	3901:2:134432:134495	1289048	0	True				
ANR	1289191	AssignmentExpression	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		1289048	0		=			
ANR	1289192	Identifier	envelope		1289048	0					
ANR	1289193	CallExpression	"xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		1289048	1					
ANR	1289194	Callee	xmlNewDocNode		1289048	0					
ANR	1289195	Identifier	xmlNewDocNode		1289048	0					
ANR	1289196	ArgumentList	doc		1289048	1					
ANR	1289197	Argument	doc		1289048	0					
ANR	1289198	Identifier	doc		1289048	0					
ANR	1289199	Argument	NULL		1289048	1					
ANR	1289200	Identifier	NULL		1289048	0					
ANR	1289201	Argument	"BAD_CAST ( ""Envelope"" )"		1289048	2					
ANR	1289202	CallExpression	"BAD_CAST ( ""Envelope"" )"		1289048	0					
ANR	1289203	Callee	BAD_CAST		1289048	0					
ANR	1289204	Identifier	BAD_CAST		1289048	0					
ANR	1289205	ArgumentList	"""Envelope"""		1289048	1					
ANR	1289206	Argument	"""Envelope"""		1289048	0					
ANR	1289207	PrimaryExpression	"""Envelope"""		1289048	0					
ANR	1289208	Argument	NULL		1289048	3					
ANR	1289209	Identifier	NULL		1289048	0					
ANR	1289210	ExpressionStatement	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"	3902:2:134499:134590	1289048	1	True				
ANR	1289211	AssignmentExpression	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"		1289048	0		=			
ANR	1289212	Identifier	ns		1289048	0					
ANR	1289213	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"		1289048	1					
ANR	1289214	Callee	xmlNewNs		1289048	0					
ANR	1289215	Identifier	xmlNewNs		1289048	0					
ANR	1289216	ArgumentList	envelope		1289048	1					
ANR	1289217	Argument	envelope		1289048	0					
ANR	1289218	Identifier	envelope		1289048	0					
ANR	1289219	Argument	BAD_CAST ( SOAP_1_2_ENV_NAMESPACE )		1289048	1					
ANR	1289220	CallExpression	BAD_CAST ( SOAP_1_2_ENV_NAMESPACE )		1289048	0					
ANR	1289221	Callee	BAD_CAST		1289048	0					
ANR	1289222	Identifier	BAD_CAST		1289048	0					
ANR	1289223	ArgumentList	SOAP_1_2_ENV_NAMESPACE		1289048	1					
ANR	1289224	Argument	SOAP_1_2_ENV_NAMESPACE		1289048	0					
ANR	1289225	Identifier	SOAP_1_2_ENV_NAMESPACE		1289048	0					
ANR	1289226	Argument	BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX )		1289048	2					
ANR	1289227	CallExpression	BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX )		1289048	0					
ANR	1289228	Callee	BAD_CAST		1289048	0					
ANR	1289229	Identifier	BAD_CAST		1289048	0					
ANR	1289230	ArgumentList	SOAP_1_2_ENV_NS_PREFIX		1289048	1					
ANR	1289231	Argument	SOAP_1_2_ENV_NS_PREFIX		1289048	0					
ANR	1289232	Identifier	SOAP_1_2_ENV_NS_PREFIX		1289048	0					
ANR	1289233	ExpressionStatement	"xmlSetNs ( envelope , ns )"	3903:2:134594:134615	1289048	2	True				
ANR	1289234	CallExpression	"xmlSetNs ( envelope , ns )"		1289048	0					
ANR	1289235	Callee	xmlSetNs		1289048	0					
ANR	1289236	Identifier	xmlSetNs		1289048	0					
ANR	1289237	ArgumentList	envelope		1289048	1					
ANR	1289238	Argument	envelope		1289048	0					
ANR	1289239	Identifier	envelope		1289048	0					
ANR	1289240	Argument	ns		1289048	1					
ANR	1289241	Identifier	ns		1289048	0					
ANR	1289242	ElseStatement	else		1289048	0					
ANR	1289243	CompoundStatement		22:8:714:714	1289048	0					
ANR	1289244	Statement	soap_server_fault	3905:2:134629:134645	1289048	0	True				
ANR	1289245	Statement	(	3905:19:134646:134646	1289048	1	True				
ANR	1289246	Statement	"""Server"""	3905:20:134647:134654	1289048	2	True				
ANR	1289247	Statement	","	3905:28:134655:134655	1289048	3	True				
ANR	1289248	Statement	"""Unknown SOAP version"""	3905:30:134657:134678	1289048	4	True				
ANR	1289249	Statement	","	3905:52:134679:134679	1289048	5	True				
ANR	1289250	Statement	NULL	3905:54:134681:134684	1289048	6	True				
ANR	1289251	Statement	","	3905:58:134685:134685	1289048	7	True				
ANR	1289252	Statement	NULL	3905:60:134687:134690	1289048	8	True				
ANR	1289253	Statement	","	3905:64:134691:134691	1289048	9	True				
ANR	1289254	Statement	NULL	3905:66:134693:134696	1289048	10	True				
ANR	1289255	Statement	TSRMLS_CC	3905:71:134698:134706	1289048	11	True				
ANR	1289256	Statement	)	3905:80:134707:134707	1289048	12	True				
ANR	1289257	ExpressionStatement		3905:81:134708:134708	1289048	13	True				
ANR	1289258	ExpressionStatement	"xmlDocSetRootElement ( doc , envelope )"	3907:1:134714:134749	1289048	10	True				
ANR	1289259	CallExpression	"xmlDocSetRootElement ( doc , envelope )"		1289048	0					
ANR	1289260	Callee	xmlDocSetRootElement		1289048	0					
ANR	1289261	Identifier	xmlDocSetRootElement		1289048	0					
ANR	1289262	ArgumentList	doc		1289048	1					
ANR	1289263	Argument	doc		1289048	0					
ANR	1289264	Identifier	doc		1289048	0					
ANR	1289265	Argument	envelope		1289048	1					
ANR	1289266	Identifier	envelope		1289048	0					
ANR	1289267	Statement	if	3909:1:134753:134754	1289048	11	True				
ANR	1289268	Statement	(	3909:4:134756:134756	1289048	12	True				
ANR	1289269	Statement	Z_TYPE_P	3909:5:134757:134764	1289048	13	True				
ANR	1289270	Statement	(	3909:13:134765:134765	1289048	14	True				
ANR	1289271	Statement	ret	3909:14:134766:134768	1289048	15	True				
ANR	1289272	Statement	)	3909:17:134769:134769	1289048	16	True				
ANR	1289273	Statement	==	3909:19:134771:134772	1289048	17	True				
ANR	1289274	Statement	IS_OBJECT	3909:22:134774:134782	1289048	18	True				
ANR	1289275	Statement	&&	3909:32:134784:134785	1289048	19	True				
ANR	1289276	Statement	instanceof_function	3910:5:134792:134810	1289048	20	True				
ANR	1289277	Statement	(	3910:24:134811:134811	1289048	21	True				
ANR	1289278	Statement	Z_OBJCE_P	3910:25:134812:134820	1289048	22	True				
ANR	1289279	Statement	(	3910:34:134821:134821	1289048	23	True				
ANR	1289280	Statement	ret	3910:35:134822:134824	1289048	24	True				
ANR	1289281	Statement	)	3910:38:134825:134825	1289048	25	True				
ANR	1289282	Statement	","	3910:39:134826:134826	1289048	26	True				
ANR	1289283	Statement	soap_fault_class_entry	3910:41:134828:134849	1289048	27	True				
ANR	1289284	Statement	TSRMLS_CC	3910:64:134851:134859	1289048	28	True				
ANR	1289285	Statement	)	3910:73:134860:134860	1289048	29	True				
ANR	1289286	Statement	)	3910:74:134861:134861	1289048	30	True				
ANR	1289287	CompoundStatement		33:2:1039:1060	1289048	31					
ANR	1289288	IdentifierDeclStatement	char * detail_name ;	3911:3:134868:134885	1289048	0	True				
ANR	1289289	IdentifierDecl	* detail_name		1289048	0					
ANR	1289290	IdentifierDeclType	char *		1289048	0					
ANR	1289291	Identifier	detail_name		1289048	1					
ANR	1289292	IdentifierDeclStatement	HashTable * prop ;	3912:2:134889:134904	1289048	1	True				
ANR	1289293	IdentifierDecl	* prop		1289048	0					
ANR	1289294	IdentifierDeclType	HashTable *		1289048	0					
ANR	1289295	Identifier	prop		1289048	1					
ANR	1289296	IdentifierDeclStatement	zval * * tmp ;	3913:2:134908:134918	1289048	2	True				
ANR	1289297	IdentifierDecl	* * tmp		1289048	0					
ANR	1289298	IdentifierDeclType	zval * *		1289048	0					
ANR	1289299	Identifier	tmp		1289048	1					
ANR	1289300	IdentifierDeclStatement	sdlFaultPtr fault = NULL ;	3914:2:134922:134946	1289048	3	True				
ANR	1289301	IdentifierDecl	fault = NULL		1289048	0					
ANR	1289302	IdentifierDeclType	sdlFaultPtr		1289048	0					
ANR	1289303	Identifier	fault		1289048	1					
ANR	1289304	AssignmentExpression	fault = NULL		1289048	2		=			
ANR	1289305	Identifier	NULL		1289048	0					
ANR	1289306	Identifier	NULL		1289048	1					
ANR	1289307	IdentifierDeclStatement	char * fault_ns = NULL ;	3915:2:134950:134971	1289048	4	True				
ANR	1289308	IdentifierDecl	* fault_ns = NULL		1289048	0					
ANR	1289309	IdentifierDeclType	char *		1289048	0					
ANR	1289310	Identifier	fault_ns		1289048	1					
ANR	1289311	AssignmentExpression	* fault_ns = NULL		1289048	2		=			
ANR	1289312	Identifier	NULL		1289048	0					
ANR	1289313	Identifier	NULL		1289048	1					
ANR	1289314	ExpressionStatement	prop = Z_OBJPROP_P ( ret )	3917:2:134976:134999	1289048	5	True				
ANR	1289315	AssignmentExpression	prop = Z_OBJPROP_P ( ret )		1289048	0		=			
ANR	1289316	Identifier	prop		1289048	0					
ANR	1289317	CallExpression	Z_OBJPROP_P ( ret )		1289048	1					
ANR	1289318	Callee	Z_OBJPROP_P		1289048	0					
ANR	1289319	Identifier	Z_OBJPROP_P		1289048	0					
ANR	1289320	ArgumentList	ret		1289048	1					
ANR	1289321	Argument	ret		1289048	0					
ANR	1289322	Identifier	ret		1289048	0					
ANR	1289323	IfStatement	"if ( headers && zend_hash_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) , ( void * * ) & tmp ) == SUCCESS )"		1289048	6					
ANR	1289324	Condition	"headers && zend_hash_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) , ( void * * ) & tmp ) == SUCCESS"	3919:6:135008:135107	1289048	0	True				
ANR	1289325	AndExpression	"headers && zend_hash_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		&&			
ANR	1289326	Identifier	headers		1289048	0					
ANR	1289327	EqualityExpression	"zend_hash_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	1		==			
ANR	1289328	CallExpression	"zend_hash_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1289329	Callee	zend_hash_find		1289048	0					
ANR	1289330	Identifier	zend_hash_find		1289048	0					
ANR	1289331	ArgumentList	prop		1289048	1					
ANR	1289332	Argument	prop		1289048	0					
ANR	1289333	Identifier	prop		1289048	0					
ANR	1289334	Argument	"""headerfault"""		1289048	1					
ANR	1289335	PrimaryExpression	"""headerfault"""		1289048	0					
ANR	1289336	Argument	"sizeof ( ""headerfault"" )"		1289048	2					
ANR	1289337	SizeofExpression	"sizeof ( ""headerfault"" )"		1289048	0					
ANR	1289338	Sizeof	sizeof		1289048	0					
ANR	1289339	PrimaryExpression	"""headerfault"""		1289048	1					
ANR	1289340	Argument	( void * * ) & tmp		1289048	3					
ANR	1289341	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1289342	CastTarget	void * *		1289048	0					
ANR	1289343	UnaryOperationExpression	& tmp		1289048	1					
ANR	1289344	UnaryOperator	&		1289048	0					
ANR	1289345	Identifier	tmp		1289048	1					
ANR	1289346	Identifier	SUCCESS		1289048	1					
ANR	1289347	CompoundStatement		43:3:1346:1395	1289048	1					
ANR	1289348	IdentifierDeclStatement	encodePtr hdr_enc = NULL ;	3921:3:135115:135139	1289048	0	True				
ANR	1289349	IdentifierDecl	hdr_enc = NULL		1289048	0					
ANR	1289350	IdentifierDeclType	encodePtr		1289048	0					
ANR	1289351	Identifier	hdr_enc		1289048	1					
ANR	1289352	AssignmentExpression	hdr_enc = NULL		1289048	2		=			
ANR	1289353	Identifier	NULL		1289048	0					
ANR	1289354	Identifier	NULL		1289048	1					
ANR	1289355	IdentifierDeclStatement	int hdr_use = SOAP_LITERAL ;	3922:3:135144:135170	1289048	1	True				
ANR	1289356	IdentifierDecl	hdr_use = SOAP_LITERAL		1289048	0					
ANR	1289357	IdentifierDeclType	int		1289048	0					
ANR	1289358	Identifier	hdr_use		1289048	1					
ANR	1289359	AssignmentExpression	hdr_use = SOAP_LITERAL		1289048	2		=			
ANR	1289360	Identifier	SOAP_LITERAL		1289048	0					
ANR	1289361	Identifier	SOAP_LITERAL		1289048	1					
ANR	1289362	IdentifierDeclStatement	zval * hdr_ret = * tmp ;	3923:3:135175:135196	1289048	2	True				
ANR	1289363	IdentifierDecl	* hdr_ret = * tmp		1289048	0					
ANR	1289364	IdentifierDeclType	zval *		1289048	0					
ANR	1289365	Identifier	hdr_ret		1289048	1					
ANR	1289366	AssignmentExpression	* hdr_ret = * tmp		1289048	2		=			
ANR	1289367	Identifier	hdr_ret		1289048	0					
ANR	1289368	UnaryOperationExpression	* tmp		1289048	1					
ANR	1289369	UnaryOperator	*		1289048	0					
ANR	1289370	Identifier	tmp		1289048	1					
ANR	1289371	IdentifierDeclStatement	char * hdr_ns = headers -> hdr ? headers -> hdr -> ns : NULL ;	3924:3:135201:135252	1289048	3	True				
ANR	1289372	IdentifierDecl	* hdr_ns = headers -> hdr ? headers -> hdr -> ns : NULL		1289048	0					
ANR	1289373	IdentifierDeclType	char *		1289048	0					
ANR	1289374	Identifier	hdr_ns		1289048	1					
ANR	1289375	AssignmentExpression	* hdr_ns = headers -> hdr ? headers -> hdr -> ns : NULL		1289048	2		=			
ANR	1289376	Identifier	hdr_ns		1289048	0					
ANR	1289377	ConditionalExpression	headers -> hdr ? headers -> hdr -> ns : NULL		1289048	1					
ANR	1289378	Condition	headers -> hdr		1289048	0					
ANR	1289379	PtrMemberAccess	headers -> hdr		1289048	0					
ANR	1289380	Identifier	headers		1289048	0					
ANR	1289381	Identifier	hdr		1289048	1					
ANR	1289382	PtrMemberAccess	headers -> hdr -> ns		1289048	1					
ANR	1289383	PtrMemberAccess	headers -> hdr		1289048	0					
ANR	1289384	Identifier	headers		1289048	0					
ANR	1289385	Identifier	hdr		1289048	1					
ANR	1289386	Identifier	ns		1289048	1					
ANR	1289387	Identifier	NULL		1289048	2					
ANR	1289388	IdentifierDeclStatement	char * hdr_name = Z_STRVAL ( headers -> function_name ) ;	3925:3:135257:135306	1289048	4	True				
ANR	1289389	IdentifierDecl	* hdr_name = Z_STRVAL ( headers -> function_name )		1289048	0					
ANR	1289390	IdentifierDeclType	char *		1289048	0					
ANR	1289391	Identifier	hdr_name		1289048	1					
ANR	1289392	AssignmentExpression	* hdr_name = Z_STRVAL ( headers -> function_name )		1289048	2		=			
ANR	1289393	Identifier	hdr_name		1289048	0					
ANR	1289394	CallExpression	Z_STRVAL ( headers -> function_name )		1289048	1					
ANR	1289395	Callee	Z_STRVAL		1289048	0					
ANR	1289396	Identifier	Z_STRVAL		1289048	0					
ANR	1289397	ArgumentList	headers -> function_name		1289048	1					
ANR	1289398	Argument	headers -> function_name		1289048	0					
ANR	1289399	PtrMemberAccess	headers -> function_name		1289048	0					
ANR	1289400	Identifier	headers		1289048	0					
ANR	1289401	Identifier	function_name		1289048	1					
ANR	1289402	ExpressionStatement	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"	3927:3:135312:135370	1289048	5	True				
ANR	1289403	AssignmentExpression	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		1289048	0		=			
ANR	1289404	Identifier	head		1289048	0					
ANR	1289405	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		1289048	1					
ANR	1289406	Callee	xmlNewChild		1289048	0					
ANR	1289407	Identifier	xmlNewChild		1289048	0					
ANR	1289408	ArgumentList	envelope		1289048	1					
ANR	1289409	Argument	envelope		1289048	0					
ANR	1289410	Identifier	envelope		1289048	0					
ANR	1289411	Argument	ns		1289048	1					
ANR	1289412	Identifier	ns		1289048	0					
ANR	1289413	Argument	"BAD_CAST ( ""Header"" )"		1289048	2					
ANR	1289414	CallExpression	"BAD_CAST ( ""Header"" )"		1289048	0					
ANR	1289415	Callee	BAD_CAST		1289048	0					
ANR	1289416	Identifier	BAD_CAST		1289048	0					
ANR	1289417	ArgumentList	"""Header"""		1289048	1					
ANR	1289418	Argument	"""Header"""		1289048	0					
ANR	1289419	PrimaryExpression	"""Header"""		1289048	0					
ANR	1289420	Argument	NULL		1289048	3					
ANR	1289421	Identifier	NULL		1289048	0					
ANR	1289422	Statement	if	3928:3:135375:135376	1289048	6	True				
ANR	1289423	Statement	(	3928:6:135378:135378	1289048	7	True				
ANR	1289424	Statement	Z_TYPE_P	3928:7:135379:135386	1289048	8	True				
ANR	1289425	Statement	(	3928:15:135387:135387	1289048	9	True				
ANR	1289426	Statement	hdr_ret	3928:16:135388:135394	1289048	10	True				
ANR	1289427	Statement	)	3928:23:135395:135395	1289048	11	True				
ANR	1289428	Statement	==	3928:25:135397:135398	1289048	12	True				
ANR	1289429	Statement	IS_OBJECT	3928:28:135400:135408	1289048	13	True				
ANR	1289430	Statement	&&	3928:38:135410:135411	1289048	14	True				
ANR	1289431	Statement	instanceof_function	3929:7:135420:135438	1289048	15	True				
ANR	1289432	Statement	(	3929:26:135439:135439	1289048	16	True				
ANR	1289433	Statement	Z_OBJCE_P	3929:27:135440:135448	1289048	17	True				
ANR	1289434	Statement	(	3929:36:135449:135449	1289048	18	True				
ANR	1289435	Statement	hdr_ret	3929:37:135450:135456	1289048	19	True				
ANR	1289436	Statement	)	3929:44:135457:135457	1289048	20	True				
ANR	1289437	Statement	","	3929:45:135458:135458	1289048	21	True				
ANR	1289438	Statement	soap_header_class_entry	3929:47:135460:135482	1289048	22	True				
ANR	1289439	Statement	TSRMLS_CC	3929:71:135484:135492	1289048	23	True				
ANR	1289440	Statement	)	3929:80:135493:135493	1289048	24	True				
ANR	1289441	Statement	)	3929:81:135494:135494	1289048	25	True				
ANR	1289442	CompoundStatement		50:4:1675:1694	1289048	26					
ANR	1289443	IdentifierDeclStatement	HashTable * ht = Z_OBJPROP_P ( hdr_ret ) ;	3930:4:135502:135538	1289048	0	True				
ANR	1289444	IdentifierDecl	* ht = Z_OBJPROP_P ( hdr_ret )		1289048	0					
ANR	1289445	IdentifierDeclType	HashTable *		1289048	0					
ANR	1289446	Identifier	ht		1289048	1					
ANR	1289447	AssignmentExpression	* ht = Z_OBJPROP_P ( hdr_ret )		1289048	2		=			
ANR	1289448	Identifier	ht		1289048	0					
ANR	1289449	CallExpression	Z_OBJPROP_P ( hdr_ret )		1289048	1					
ANR	1289450	Callee	Z_OBJPROP_P		1289048	0					
ANR	1289451	Identifier	Z_OBJPROP_P		1289048	0					
ANR	1289452	ArgumentList	hdr_ret		1289048	1					
ANR	1289453	Argument	hdr_ret		1289048	0					
ANR	1289454	Identifier	hdr_ret		1289048	0					
ANR	1289455	IdentifierDeclStatement	sdlSoapBindingFunctionHeaderPtr * hdr ;	3931:4:135544:135580	1289048	1	True				
ANR	1289456	IdentifierDecl	* hdr		1289048	0					
ANR	1289457	IdentifierDeclType	sdlSoapBindingFunctionHeaderPtr *		1289048	0					
ANR	1289458	Identifier	hdr		1289048	1					
ANR	1289459	IdentifierDeclStatement	smart_str key = { 0 } ;	3932:4:135586:135605	1289048	2	True				
ANR	1289460	IdentifierDecl	key = { 0 }		1289048	0					
ANR	1289461	IdentifierDeclType	smart_str		1289048	0					
ANR	1289462	Identifier	key		1289048	1					
ANR	1289463	AssignmentExpression	key = { 0 }		1289048	2		=			
ANR	1289464	Identifier	key		1289048	0					
ANR	1289465	InitializerList	0		1289048	1					
ANR	1289466	PrimaryExpression	0		1289048	0					
ANR	1289467	IfStatement	"if ( zend_hash_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING )"		1289048	3					
ANR	1289468	Condition	"zend_hash_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"	3934:8:135616:135732	1289048	0	True				
ANR	1289469	AndExpression	"zend_hash_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"		1289048	0		&&			
ANR	1289470	EqualityExpression	"zend_hash_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1289471	CallExpression	"zend_hash_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1289472	Callee	zend_hash_find		1289048	0					
ANR	1289473	Identifier	zend_hash_find		1289048	0					
ANR	1289474	ArgumentList	ht		1289048	1					
ANR	1289475	Argument	ht		1289048	0					
ANR	1289476	Identifier	ht		1289048	0					
ANR	1289477	Argument	"""namespace"""		1289048	1					
ANR	1289478	PrimaryExpression	"""namespace"""		1289048	0					
ANR	1289479	Argument	"sizeof ( ""namespace"" )"		1289048	2					
ANR	1289480	SizeofExpression	"sizeof ( ""namespace"" )"		1289048	0					
ANR	1289481	Sizeof	sizeof		1289048	0					
ANR	1289482	PrimaryExpression	"""namespace"""		1289048	1					
ANR	1289483	Argument	( void * * ) & tmp		1289048	3					
ANR	1289484	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1289485	CastTarget	void * *		1289048	0					
ANR	1289486	UnaryOperationExpression	& tmp		1289048	1					
ANR	1289487	UnaryOperator	&		1289048	0					
ANR	1289488	Identifier	tmp		1289048	1					
ANR	1289489	Identifier	SUCCESS		1289048	1					
ANR	1289490	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1289048	1		==			
ANR	1289491	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1289492	Callee	Z_TYPE_PP		1289048	0					
ANR	1289493	Identifier	Z_TYPE_PP		1289048	0					
ANR	1289494	ArgumentList	tmp		1289048	1					
ANR	1289495	Argument	tmp		1289048	0					
ANR	1289496	Identifier	tmp		1289048	0					
ANR	1289497	Identifier	IS_STRING		1289048	1					
ANR	1289498	CompoundStatement		53:38:1824:1824	1289048	1					
ANR	1289499	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) )"	3936:5:135742:135801	1289048	0	True				
ANR	1289500	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) )"		1289048	0					
ANR	1289501	Callee	smart_str_appendl		1289048	0					
ANR	1289502	Identifier	smart_str_appendl		1289048	0					
ANR	1289503	ArgumentList	& key		1289048	1					
ANR	1289504	Argument	& key		1289048	0					
ANR	1289505	UnaryOperationExpression	& key		1289048	0					
ANR	1289506	UnaryOperator	&		1289048	0					
ANR	1289507	Identifier	key		1289048	1					
ANR	1289508	Argument	Z_STRVAL_PP ( tmp )		1289048	1					
ANR	1289509	CallExpression	Z_STRVAL_PP ( tmp )		1289048	0					
ANR	1289510	Callee	Z_STRVAL_PP		1289048	0					
ANR	1289511	Identifier	Z_STRVAL_PP		1289048	0					
ANR	1289512	ArgumentList	tmp		1289048	1					
ANR	1289513	Argument	tmp		1289048	0					
ANR	1289514	Identifier	tmp		1289048	0					
ANR	1289515	Argument	Z_STRLEN_PP ( tmp )		1289048	2					
ANR	1289516	CallExpression	Z_STRLEN_PP ( tmp )		1289048	0					
ANR	1289517	Callee	Z_STRLEN_PP		1289048	0					
ANR	1289518	Identifier	Z_STRLEN_PP		1289048	0					
ANR	1289519	ArgumentList	tmp		1289048	1					
ANR	1289520	Argument	tmp		1289048	0					
ANR	1289521	Identifier	tmp		1289048	0					
ANR	1289522	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	3937:5:135808:135836	1289048	1	True				
ANR	1289523	CallExpression	"smart_str_appendc ( & key , ':' )"		1289048	0					
ANR	1289524	Callee	smart_str_appendc		1289048	0					
ANR	1289525	Identifier	smart_str_appendc		1289048	0					
ANR	1289526	ArgumentList	& key		1289048	1					
ANR	1289527	Argument	& key		1289048	0					
ANR	1289528	UnaryOperationExpression	& key		1289048	0					
ANR	1289529	UnaryOperator	&		1289048	0					
ANR	1289530	Identifier	key		1289048	1					
ANR	1289531	Argument	':'		1289048	1					
ANR	1289532	PrimaryExpression	':'		1289048	0					
ANR	1289533	ExpressionStatement	hdr_ns = Z_STRVAL_PP ( tmp )	3938:5:135843:135868	1289048	2	True				
ANR	1289534	AssignmentExpression	hdr_ns = Z_STRVAL_PP ( tmp )		1289048	0		=			
ANR	1289535	Identifier	hdr_ns		1289048	0					
ANR	1289536	CallExpression	Z_STRVAL_PP ( tmp )		1289048	1					
ANR	1289537	Callee	Z_STRVAL_PP		1289048	0					
ANR	1289538	Identifier	Z_STRVAL_PP		1289048	0					
ANR	1289539	ArgumentList	tmp		1289048	1					
ANR	1289540	Argument	tmp		1289048	0					
ANR	1289541	Identifier	tmp		1289048	0					
ANR	1289542	IfStatement	"if ( zend_hash_find ( ht , ""name"" , sizeof ( ""name"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING )"		1289048	4					
ANR	1289543	Condition	"zend_hash_find ( ht , ""name"" , sizeof ( ""name"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"	3940:8:135884:135989	1289048	0	True				
ANR	1289544	AndExpression	"zend_hash_find ( ht , ""name"" , sizeof ( ""name"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"		1289048	0		&&			
ANR	1289545	EqualityExpression	"zend_hash_find ( ht , ""name"" , sizeof ( ""name"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1289546	CallExpression	"zend_hash_find ( ht , ""name"" , sizeof ( ""name"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1289547	Callee	zend_hash_find		1289048	0					
ANR	1289548	Identifier	zend_hash_find		1289048	0					
ANR	1289549	ArgumentList	ht		1289048	1					
ANR	1289550	Argument	ht		1289048	0					
ANR	1289551	Identifier	ht		1289048	0					
ANR	1289552	Argument	"""name"""		1289048	1					
ANR	1289553	PrimaryExpression	"""name"""		1289048	0					
ANR	1289554	Argument	"sizeof ( ""name"" )"		1289048	2					
ANR	1289555	SizeofExpression	"sizeof ( ""name"" )"		1289048	0					
ANR	1289556	Sizeof	sizeof		1289048	0					
ANR	1289557	PrimaryExpression	"""name"""		1289048	1					
ANR	1289558	Argument	( void * * ) & tmp		1289048	3					
ANR	1289559	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1289560	CastTarget	void * *		1289048	0					
ANR	1289561	UnaryOperationExpression	& tmp		1289048	1					
ANR	1289562	UnaryOperator	&		1289048	0					
ANR	1289563	Identifier	tmp		1289048	1					
ANR	1289564	Identifier	SUCCESS		1289048	1					
ANR	1289565	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1289048	1		==			
ANR	1289566	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1289567	Callee	Z_TYPE_PP		1289048	0					
ANR	1289568	Identifier	Z_TYPE_PP		1289048	0					
ANR	1289569	ArgumentList	tmp		1289048	1					
ANR	1289570	Argument	tmp		1289048	0					
ANR	1289571	Identifier	tmp		1289048	0					
ANR	1289572	Identifier	IS_STRING		1289048	1					
ANR	1289573	CompoundStatement		59:37:2081:2081	1289048	1					
ANR	1289574	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) )"	3942:5:135999:136058	1289048	0	True				
ANR	1289575	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) )"		1289048	0					
ANR	1289576	Callee	smart_str_appendl		1289048	0					
ANR	1289577	Identifier	smart_str_appendl		1289048	0					
ANR	1289578	ArgumentList	& key		1289048	1					
ANR	1289579	Argument	& key		1289048	0					
ANR	1289580	UnaryOperationExpression	& key		1289048	0					
ANR	1289581	UnaryOperator	&		1289048	0					
ANR	1289582	Identifier	key		1289048	1					
ANR	1289583	Argument	Z_STRVAL_PP ( tmp )		1289048	1					
ANR	1289584	CallExpression	Z_STRVAL_PP ( tmp )		1289048	0					
ANR	1289585	Callee	Z_STRVAL_PP		1289048	0					
ANR	1289586	Identifier	Z_STRVAL_PP		1289048	0					
ANR	1289587	ArgumentList	tmp		1289048	1					
ANR	1289588	Argument	tmp		1289048	0					
ANR	1289589	Identifier	tmp		1289048	0					
ANR	1289590	Argument	Z_STRLEN_PP ( tmp )		1289048	2					
ANR	1289591	CallExpression	Z_STRLEN_PP ( tmp )		1289048	0					
ANR	1289592	Callee	Z_STRLEN_PP		1289048	0					
ANR	1289593	Identifier	Z_STRLEN_PP		1289048	0					
ANR	1289594	ArgumentList	tmp		1289048	1					
ANR	1289595	Argument	tmp		1289048	0					
ANR	1289596	Identifier	tmp		1289048	0					
ANR	1289597	ExpressionStatement	hdr_name = Z_STRVAL_PP ( tmp )	3943:5:136065:136092	1289048	1	True				
ANR	1289598	AssignmentExpression	hdr_name = Z_STRVAL_PP ( tmp )		1289048	0		=			
ANR	1289599	Identifier	hdr_name		1289048	0					
ANR	1289600	CallExpression	Z_STRVAL_PP ( tmp )		1289048	1					
ANR	1289601	Callee	Z_STRVAL_PP		1289048	0					
ANR	1289602	Identifier	Z_STRVAL_PP		1289048	0					
ANR	1289603	ArgumentList	tmp		1289048	1					
ANR	1289604	Argument	tmp		1289048	0					
ANR	1289605	Identifier	tmp		1289048	0					
ANR	1289606	ExpressionStatement	smart_str_0 ( & key )	3945:4:136104:136121	1289048	5	True				
ANR	1289607	CallExpression	smart_str_0 ( & key )		1289048	0					
ANR	1289608	Callee	smart_str_0		1289048	0					
ANR	1289609	Identifier	smart_str_0		1289048	0					
ANR	1289610	ArgumentList	& key		1289048	1					
ANR	1289611	Argument	& key		1289048	0					
ANR	1289612	UnaryOperationExpression	& key		1289048	0					
ANR	1289613	UnaryOperator	&		1289048	0					
ANR	1289614	Identifier	key		1289048	1					
ANR	1289615	IfStatement	"if ( headers -> hdr && headers -> hdr -> headerfaults && zend_hash_find ( headers -> hdr -> headerfaults , key . c , key . len + 1 , ( void * * ) & hdr ) == SUCCESS )"		1289048	6					
ANR	1289616	Condition	"headers -> hdr && headers -> hdr -> headerfaults && zend_hash_find ( headers -> hdr -> headerfaults , key . c , key . len + 1 , ( void * * ) & hdr ) == SUCCESS"	3946:8:136131:136269	1289048	0	True				
ANR	1289617	AndExpression	"headers -> hdr && headers -> hdr -> headerfaults && zend_hash_find ( headers -> hdr -> headerfaults , key . c , key . len + 1 , ( void * * ) & hdr ) == SUCCESS"		1289048	0		&&			
ANR	1289618	PtrMemberAccess	headers -> hdr		1289048	0					
ANR	1289619	Identifier	headers		1289048	0					
ANR	1289620	Identifier	hdr		1289048	1					
ANR	1289621	AndExpression	"headers -> hdr -> headerfaults && zend_hash_find ( headers -> hdr -> headerfaults , key . c , key . len + 1 , ( void * * ) & hdr ) == SUCCESS"		1289048	1		&&			
ANR	1289622	PtrMemberAccess	headers -> hdr -> headerfaults		1289048	0					
ANR	1289623	PtrMemberAccess	headers -> hdr		1289048	0					
ANR	1289624	Identifier	headers		1289048	0					
ANR	1289625	Identifier	hdr		1289048	1					
ANR	1289626	Identifier	headerfaults		1289048	1					
ANR	1289627	EqualityExpression	"zend_hash_find ( headers -> hdr -> headerfaults , key . c , key . len + 1 , ( void * * ) & hdr ) == SUCCESS"		1289048	1		==			
ANR	1289628	CallExpression	"zend_hash_find ( headers -> hdr -> headerfaults , key . c , key . len + 1 , ( void * * ) & hdr )"		1289048	0					
ANR	1289629	Callee	zend_hash_find		1289048	0					
ANR	1289630	Identifier	zend_hash_find		1289048	0					
ANR	1289631	ArgumentList	headers -> hdr -> headerfaults		1289048	1					
ANR	1289632	Argument	headers -> hdr -> headerfaults		1289048	0					
ANR	1289633	PtrMemberAccess	headers -> hdr -> headerfaults		1289048	0					
ANR	1289634	PtrMemberAccess	headers -> hdr		1289048	0					
ANR	1289635	Identifier	headers		1289048	0					
ANR	1289636	Identifier	hdr		1289048	1					
ANR	1289637	Identifier	headerfaults		1289048	1					
ANR	1289638	Argument	key . c		1289048	1					
ANR	1289639	MemberAccess	key . c		1289048	0					
ANR	1289640	Identifier	key		1289048	0					
ANR	1289641	Identifier	c		1289048	1					
ANR	1289642	Argument	key . len + 1		1289048	2					
ANR	1289643	AdditiveExpression	key . len + 1		1289048	0		+			
ANR	1289644	MemberAccess	key . len		1289048	0					
ANR	1289645	Identifier	key		1289048	0					
ANR	1289646	Identifier	len		1289048	1					
ANR	1289647	PrimaryExpression	1		1289048	1					
ANR	1289648	Argument	( void * * ) & hdr		1289048	3					
ANR	1289649	CastExpression	( void * * ) & hdr		1289048	0					
ANR	1289650	CastTarget	void * *		1289048	0					
ANR	1289651	UnaryOperationExpression	& hdr		1289048	1					
ANR	1289652	UnaryOperator	&		1289048	0					
ANR	1289653	Identifier	hdr		1289048	1					
ANR	1289654	Identifier	SUCCESS		1289048	1					
ANR	1289655	CompoundStatement		65:95:2361:2361	1289048	1					
ANR	1289656	ExpressionStatement	hdr_enc = ( * hdr ) -> encode	3948:5:136279:136303	1289048	0	True				
ANR	1289657	AssignmentExpression	hdr_enc = ( * hdr ) -> encode		1289048	0		=			
ANR	1289658	Identifier	hdr_enc		1289048	0					
ANR	1289659	PtrMemberAccess	( * hdr ) -> encode		1289048	1					
ANR	1289660	UnaryOperationExpression	* hdr		1289048	0					
ANR	1289661	UnaryOperator	*		1289048	0					
ANR	1289662	Identifier	hdr		1289048	1					
ANR	1289663	Identifier	encode		1289048	1					
ANR	1289664	ExpressionStatement	hdr_use = ( * hdr ) -> use	3949:5:136310:136331	1289048	1	True				
ANR	1289665	AssignmentExpression	hdr_use = ( * hdr ) -> use		1289048	0		=			
ANR	1289666	Identifier	hdr_use		1289048	0					
ANR	1289667	PtrMemberAccess	( * hdr ) -> use		1289048	1					
ANR	1289668	UnaryOperationExpression	* hdr		1289048	0					
ANR	1289669	UnaryOperator	*		1289048	0					
ANR	1289670	Identifier	hdr		1289048	1					
ANR	1289671	Identifier	use		1289048	1					
ANR	1289672	ExpressionStatement	smart_str_free ( & key )	3951:4:136343:136363	1289048	7	True				
ANR	1289673	CallExpression	smart_str_free ( & key )		1289048	0					
ANR	1289674	Callee	smart_str_free		1289048	0					
ANR	1289675	Identifier	smart_str_free		1289048	0					
ANR	1289676	ArgumentList	& key		1289048	1					
ANR	1289677	Argument	& key		1289048	0					
ANR	1289678	UnaryOperationExpression	& key		1289048	0					
ANR	1289679	UnaryOperator	&		1289048	0					
ANR	1289680	Identifier	key		1289048	1					
ANR	1289681	IfStatement	"if ( zend_hash_find ( ht , ""data"" , sizeof ( ""data"" ) , ( void * * ) & tmp ) == SUCCESS )"		1289048	8					
ANR	1289682	Condition	"zend_hash_find ( ht , ""data"" , sizeof ( ""data"" ) , ( void * * ) & tmp ) == SUCCESS"	3952:8:136373:136439	1289048	0	True				
ANR	1289683	EqualityExpression	"zend_hash_find ( ht , ""data"" , sizeof ( ""data"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1289684	CallExpression	"zend_hash_find ( ht , ""data"" , sizeof ( ""data"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1289685	Callee	zend_hash_find		1289048	0					
ANR	1289686	Identifier	zend_hash_find		1289048	0					
ANR	1289687	ArgumentList	ht		1289048	1					
ANR	1289688	Argument	ht		1289048	0					
ANR	1289689	Identifier	ht		1289048	0					
ANR	1289690	Argument	"""data"""		1289048	1					
ANR	1289691	PrimaryExpression	"""data"""		1289048	0					
ANR	1289692	Argument	"sizeof ( ""data"" )"		1289048	2					
ANR	1289693	SizeofExpression	"sizeof ( ""data"" )"		1289048	0					
ANR	1289694	Sizeof	sizeof		1289048	0					
ANR	1289695	PrimaryExpression	"""data"""		1289048	1					
ANR	1289696	Argument	( void * * ) & tmp		1289048	3					
ANR	1289697	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1289698	CastTarget	void * *		1289048	0					
ANR	1289699	UnaryOperationExpression	& tmp		1289048	1					
ANR	1289700	UnaryOperator	&		1289048	0					
ANR	1289701	Identifier	tmp		1289048	1					
ANR	1289702	Identifier	SUCCESS		1289048	1					
ANR	1289703	CompoundStatement		70:77:2531:2531	1289048	1					
ANR	1289704	ExpressionStatement	hdr_ret = * tmp	3953:5:136449:136463	1289048	0	True				
ANR	1289705	AssignmentExpression	hdr_ret = * tmp		1289048	0		=			
ANR	1289706	Identifier	hdr_ret		1289048	0					
ANR	1289707	UnaryOperationExpression	* tmp		1289048	1					
ANR	1289708	UnaryOperator	*		1289048	0					
ANR	1289709	Identifier	tmp		1289048	1					
ANR	1289710	ElseStatement	else		1289048	0					
ANR	1289711	CompoundStatement		72:11:2565:2565	1289048	0					
ANR	1289712	ExpressionStatement	hdr_ret = NULL	3955:5:136483:136497	1289048	0	True				
ANR	1289713	AssignmentExpression	hdr_ret = NULL		1289048	0		=			
ANR	1289714	Identifier	hdr_ret		1289048	0					
ANR	1289715	Identifier	NULL		1289048	1					
ANR	1289716	IfStatement	if ( headers -> function )		1289048	27					
ANR	1289717	Condition	headers -> function	3959:7:136518:136534	1289048	0	True				
ANR	1289718	PtrMemberAccess	headers -> function		1289048	0					
ANR	1289719	Identifier	headers		1289048	0					
ANR	1289720	Identifier	function		1289048	1					
ANR	1289721	CompoundStatement		77:26:2626:2626	1289048	1					
ANR	1289722	Statement	if	3960:4:136543:136544	1289048	0	True				
ANR	1289723	Statement	(	3960:7:136546:136546	1289048	1	True				
ANR	1289724	Statement	serialize_response_call2	3960:8:136547:136570	1289048	2	True				
ANR	1289725	Statement	(	3960:32:136571:136571	1289048	3	True				
ANR	1289726	Statement	head	3960:33:136572:136575	1289048	4	True				
ANR	1289727	Statement	","	3960:37:136576:136576	1289048	5	True				
ANR	1289728	Statement	headers	3960:39:136578:136584	1289048	6	True				
ANR	1289729	Statement	->	3960:46:136585:136586	1289048	7	True				
ANR	1289730	Statement	function	3960:48:136587:136594	1289048	8	True				
ANR	1289731	Statement	","	3960:56:136595:136595	1289048	9	True				
ANR	1289732	Statement	Z_STRVAL	3960:58:136597:136604	1289048	10	True				
ANR	1289733	Statement	(	3960:66:136605:136605	1289048	11	True				
ANR	1289734	Statement	headers	3960:67:136606:136612	1289048	12	True				
ANR	1289735	Statement	->	3960:74:136613:136614	1289048	13	True				
ANR	1289736	Statement	function_name	3960:76:136615:136627	1289048	14	True				
ANR	1289737	Statement	)	3960:89:136628:136628	1289048	15	True				
ANR	1289738	Statement	","	3960:90:136629:136629	1289048	16	True				
ANR	1289739	Statement	uri	3960:92:136631:136633	1289048	17	True				
ANR	1289740	Statement	","	3960:95:136634:136634	1289048	18	True				
ANR	1289741	Statement	hdr_ret	3960:97:136636:136642	1289048	19	True				
ANR	1289742	Statement	","	3960:104:136643:136643	1289048	20	True				
ANR	1289743	Statement	version	3960:106:136645:136651	1289048	21	True				
ANR	1289744	Statement	","	3960:113:136652:136652	1289048	22	True				
ANR	1289745	Statement	0	3960:115:136654:136654	1289048	23	True				
ANR	1289746	Statement	","	3960:116:136655:136655	1289048	24	True				
ANR	1289747	Statement	NULL	3960:118:136657:136660	1289048	25	True				
ANR	1289748	Statement	TSRMLS_CC	3960:123:136662:136670	1289048	26	True				
ANR	1289749	Statement	)	3960:132:136671:136671	1289048	27	True				
ANR	1289750	Statement	==	3960:134:136673:136674	1289048	28	True				
ANR	1289751	Statement	SOAP_ENCODED	3960:137:136676:136687	1289048	29	True				
ANR	1289752	Statement	)	3960:149:136688:136688	1289048	30	True				
ANR	1289753	CompoundStatement		78:151:2779:2779	1289048	31					
ANR	1289754	ExpressionStatement	use = SOAP_ENCODED	3961:5:136697:136715	1289048	0	True				
ANR	1289755	AssignmentExpression	use = SOAP_ENCODED		1289048	0		=			
ANR	1289756	Identifier	use		1289048	0					
ANR	1289757	Identifier	SOAP_ENCODED		1289048	1					
ANR	1289758	ElseStatement	else		1289048	0					
ANR	1289759	CompoundStatement		81:10:2822:2822	1289048	0					
ANR	1289760	Statement	xmlNodePtr	3964:4:136739:136748	1289048	0	True				
ANR	1289761	Statement	xmlHdr	3964:15:136750:136755	1289048	1	True				
ANR	1289762	Statement	=	3964:22:136757:136757	1289048	2	True				
ANR	1289763	Statement	master_to_xml	3964:24:136759:136771	1289048	3	True				
ANR	1289764	Statement	(	3964:37:136772:136772	1289048	4	True				
ANR	1289765	Statement	hdr_enc	3964:38:136773:136779	1289048	5	True				
ANR	1289766	Statement	","	3964:45:136780:136780	1289048	6	True				
ANR	1289767	Statement	hdr_ret	3964:47:136782:136788	1289048	7	True				
ANR	1289768	Statement	","	3964:54:136789:136789	1289048	8	True				
ANR	1289769	Statement	hdr_use	3964:56:136791:136797	1289048	9	True				
ANR	1289770	Statement	","	3964:63:136798:136798	1289048	10	True				
ANR	1289771	Statement	head	3964:65:136800:136803	1289048	11	True				
ANR	1289772	Statement	TSRMLS_CC	3964:70:136805:136813	1289048	12	True				
ANR	1289773	Statement	)	3964:79:136814:136814	1289048	13	True				
ANR	1289774	ExpressionStatement		3964:80:136815:136815	1289048	14	True				
ANR	1289775	IfStatement	if ( hdr_name )		1289048	15					
ANR	1289776	Condition	hdr_name	3965:8:136825:136832	1289048	0	True				
ANR	1289777	Identifier	hdr_name		1289048	0					
ANR	1289778	CompoundStatement		83:18:2924:2924	1289048	1					
ANR	1289779	ExpressionStatement	"xmlNodeSetName ( xmlHdr , BAD_CAST ( hdr_name ) )"	3966:5:136842:136884	1289048	0	True				
ANR	1289780	CallExpression	"xmlNodeSetName ( xmlHdr , BAD_CAST ( hdr_name ) )"		1289048	0					
ANR	1289781	Callee	xmlNodeSetName		1289048	0					
ANR	1289782	Identifier	xmlNodeSetName		1289048	0					
ANR	1289783	ArgumentList	xmlHdr		1289048	1					
ANR	1289784	Argument	xmlHdr		1289048	0					
ANR	1289785	Identifier	xmlHdr		1289048	0					
ANR	1289786	Argument	BAD_CAST ( hdr_name )		1289048	1					
ANR	1289787	CallExpression	BAD_CAST ( hdr_name )		1289048	0					
ANR	1289788	Callee	BAD_CAST		1289048	0					
ANR	1289789	Identifier	BAD_CAST		1289048	0					
ANR	1289790	ArgumentList	hdr_name		1289048	1					
ANR	1289791	Argument	hdr_name		1289048	0					
ANR	1289792	Identifier	hdr_name		1289048	0					
ANR	1289793	IfStatement	if ( hdr_ns )		1289048	16					
ANR	1289794	Condition	hdr_ns	3968:8:136900:136905	1289048	0	True				
ANR	1289795	Identifier	hdr_ns		1289048	0					
ANR	1289796	CompoundStatement		87:5:3004:3050	1289048	1					
ANR	1289797	IdentifierDeclStatement	"xmlNsPtr nsptr = encode_add_ns ( xmlHdr , hdr_ns ) ;"	3969:5:136915:136961	1289048	0	True				
ANR	1289798	IdentifierDecl	"nsptr = encode_add_ns ( xmlHdr , hdr_ns )"		1289048	0					
ANR	1289799	IdentifierDeclType	xmlNsPtr		1289048	0					
ANR	1289800	Identifier	nsptr		1289048	1					
ANR	1289801	AssignmentExpression	"nsptr = encode_add_ns ( xmlHdr , hdr_ns )"		1289048	2		=			
ANR	1289802	Identifier	nsptr		1289048	0					
ANR	1289803	CallExpression	"encode_add_ns ( xmlHdr , hdr_ns )"		1289048	1					
ANR	1289804	Callee	encode_add_ns		1289048	0					
ANR	1289805	Identifier	encode_add_ns		1289048	0					
ANR	1289806	ArgumentList	xmlHdr		1289048	1					
ANR	1289807	Argument	xmlHdr		1289048	0					
ANR	1289808	Identifier	xmlHdr		1289048	0					
ANR	1289809	Argument	hdr_ns		1289048	1					
ANR	1289810	Identifier	hdr_ns		1289048	0					
ANR	1289811	ExpressionStatement	"xmlSetNs ( xmlHdr , nsptr )"	3970:5:136968:136991	1289048	1	True				
ANR	1289812	CallExpression	"xmlSetNs ( xmlHdr , nsptr )"		1289048	0					
ANR	1289813	Callee	xmlSetNs		1289048	0					
ANR	1289814	Identifier	xmlSetNs		1289048	0					
ANR	1289815	ArgumentList	xmlHdr		1289048	1					
ANR	1289816	Argument	xmlHdr		1289048	0					
ANR	1289817	Identifier	xmlHdr		1289048	0					
ANR	1289818	Argument	nsptr		1289048	1					
ANR	1289819	Identifier	nsptr		1289048	0					
ANR	1289820	ExpressionStatement	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"	3975:2:137011:137067	1289048	7	True				
ANR	1289821	AssignmentExpression	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		1289048	0		=			
ANR	1289822	Identifier	body		1289048	0					
ANR	1289823	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		1289048	1					
ANR	1289824	Callee	xmlNewChild		1289048	0					
ANR	1289825	Identifier	xmlNewChild		1289048	0					
ANR	1289826	ArgumentList	envelope		1289048	1					
ANR	1289827	Argument	envelope		1289048	0					
ANR	1289828	Identifier	envelope		1289048	0					
ANR	1289829	Argument	ns		1289048	1					
ANR	1289830	Identifier	ns		1289048	0					
ANR	1289831	Argument	"BAD_CAST ( ""Body"" )"		1289048	2					
ANR	1289832	CallExpression	"BAD_CAST ( ""Body"" )"		1289048	0					
ANR	1289833	Callee	BAD_CAST		1289048	0					
ANR	1289834	Identifier	BAD_CAST		1289048	0					
ANR	1289835	ArgumentList	"""Body"""		1289048	1					
ANR	1289836	Argument	"""Body"""		1289048	0					
ANR	1289837	PrimaryExpression	"""Body"""		1289048	0					
ANR	1289838	Argument	NULL		1289048	3					
ANR	1289839	Identifier	NULL		1289048	0					
ANR	1289840	ExpressionStatement	"param = xmlNewChild ( body , ns , BAD_CAST ( ""Fault"" ) , NULL )"	3976:2:137071:137125	1289048	8	True				
ANR	1289841	AssignmentExpression	"param = xmlNewChild ( body , ns , BAD_CAST ( ""Fault"" ) , NULL )"		1289048	0		=			
ANR	1289842	Identifier	param		1289048	0					
ANR	1289843	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( ""Fault"" ) , NULL )"		1289048	1					
ANR	1289844	Callee	xmlNewChild		1289048	0					
ANR	1289845	Identifier	xmlNewChild		1289048	0					
ANR	1289846	ArgumentList	body		1289048	1					
ANR	1289847	Argument	body		1289048	0					
ANR	1289848	Identifier	body		1289048	0					
ANR	1289849	Argument	ns		1289048	1					
ANR	1289850	Identifier	ns		1289048	0					
ANR	1289851	Argument	"BAD_CAST ( ""Fault"" )"		1289048	2					
ANR	1289852	CallExpression	"BAD_CAST ( ""Fault"" )"		1289048	0					
ANR	1289853	Callee	BAD_CAST		1289048	0					
ANR	1289854	Identifier	BAD_CAST		1289048	0					
ANR	1289855	ArgumentList	"""Fault"""		1289048	1					
ANR	1289856	Argument	"""Fault"""		1289048	0					
ANR	1289857	PrimaryExpression	"""Fault"""		1289048	0					
ANR	1289858	Argument	NULL		1289048	3					
ANR	1289859	Identifier	NULL		1289048	0					
ANR	1289860	IfStatement	"if ( zend_hash_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING )"		1289048	9					
ANR	1289861	Condition	"zend_hash_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"	3978:6:137134:137247	1289048	0	True				
ANR	1289862	AndExpression	"zend_hash_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"		1289048	0		&&			
ANR	1289863	EqualityExpression	"zend_hash_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1289864	CallExpression	"zend_hash_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1289865	Callee	zend_hash_find		1289048	0					
ANR	1289866	Identifier	zend_hash_find		1289048	0					
ANR	1289867	ArgumentList	prop		1289048	1					
ANR	1289868	Argument	prop		1289048	0					
ANR	1289869	Identifier	prop		1289048	0					
ANR	1289870	Argument	"""faultcodens"""		1289048	1					
ANR	1289871	PrimaryExpression	"""faultcodens"""		1289048	0					
ANR	1289872	Argument	"sizeof ( ""faultcodens"" )"		1289048	2					
ANR	1289873	SizeofExpression	"sizeof ( ""faultcodens"" )"		1289048	0					
ANR	1289874	Sizeof	sizeof		1289048	0					
ANR	1289875	PrimaryExpression	"""faultcodens"""		1289048	1					
ANR	1289876	Argument	( void * * ) & tmp		1289048	3					
ANR	1289877	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1289878	CastTarget	void * *		1289048	0					
ANR	1289879	UnaryOperationExpression	& tmp		1289048	1					
ANR	1289880	UnaryOperator	&		1289048	0					
ANR	1289881	Identifier	tmp		1289048	1					
ANR	1289882	Identifier	SUCCESS		1289048	1					
ANR	1289883	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1289048	1		==			
ANR	1289884	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1289885	Callee	Z_TYPE_PP		1289048	0					
ANR	1289886	Identifier	Z_TYPE_PP		1289048	0					
ANR	1289887	ArgumentList	tmp		1289048	1					
ANR	1289888	Argument	tmp		1289048	0					
ANR	1289889	Identifier	tmp		1289048	0					
ANR	1289890	Identifier	IS_STRING		1289048	1					
ANR	1289891	CompoundStatement		96:122:3339:3339	1289048	1					
ANR	1289892	ExpressionStatement	fault_ns = Z_STRVAL_PP ( tmp )	3979:3:137255:137282	1289048	0	True				
ANR	1289893	AssignmentExpression	fault_ns = Z_STRVAL_PP ( tmp )		1289048	0		=			
ANR	1289894	Identifier	fault_ns		1289048	0					
ANR	1289895	CallExpression	Z_STRVAL_PP ( tmp )		1289048	1					
ANR	1289896	Callee	Z_STRVAL_PP		1289048	0					
ANR	1289897	Identifier	Z_STRVAL_PP		1289048	0					
ANR	1289898	ArgumentList	tmp		1289048	1					
ANR	1289899	Argument	tmp		1289048	0					
ANR	1289900	Identifier	tmp		1289048	0					
ANR	1289901	ExpressionStatement	use = SOAP_LITERAL	3981:2:137290:137308	1289048	10	True				
ANR	1289902	AssignmentExpression	use = SOAP_LITERAL		1289048	0		=			
ANR	1289903	Identifier	use		1289048	0					
ANR	1289904	Identifier	SOAP_LITERAL		1289048	1					
ANR	1289905	IfStatement	"if ( zend_hash_find ( prop , ""_name"" , sizeof ( ""_name"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING )"		1289048	11					
ANR	1289906	Condition	"zend_hash_find ( prop , ""_name"" , sizeof ( ""_name"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"	3982:6:137316:137417	1289048	0	True				
ANR	1289907	AndExpression	"zend_hash_find ( prop , ""_name"" , sizeof ( ""_name"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"		1289048	0		&&			
ANR	1289908	EqualityExpression	"zend_hash_find ( prop , ""_name"" , sizeof ( ""_name"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1289909	CallExpression	"zend_hash_find ( prop , ""_name"" , sizeof ( ""_name"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1289910	Callee	zend_hash_find		1289048	0					
ANR	1289911	Identifier	zend_hash_find		1289048	0					
ANR	1289912	ArgumentList	prop		1289048	1					
ANR	1289913	Argument	prop		1289048	0					
ANR	1289914	Identifier	prop		1289048	0					
ANR	1289915	Argument	"""_name"""		1289048	1					
ANR	1289916	PrimaryExpression	"""_name"""		1289048	0					
ANR	1289917	Argument	"sizeof ( ""_name"" )"		1289048	2					
ANR	1289918	SizeofExpression	"sizeof ( ""_name"" )"		1289048	0					
ANR	1289919	Sizeof	sizeof		1289048	0					
ANR	1289920	PrimaryExpression	"""_name"""		1289048	1					
ANR	1289921	Argument	( void * * ) & tmp		1289048	3					
ANR	1289922	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1289923	CastTarget	void * *		1289048	0					
ANR	1289924	UnaryOperationExpression	& tmp		1289048	1					
ANR	1289925	UnaryOperator	&		1289048	0					
ANR	1289926	Identifier	tmp		1289048	1					
ANR	1289927	Identifier	SUCCESS		1289048	1					
ANR	1289928	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1289048	1		==			
ANR	1289929	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1289930	Callee	Z_TYPE_PP		1289048	0					
ANR	1289931	Identifier	Z_TYPE_PP		1289048	0					
ANR	1289932	ArgumentList	tmp		1289048	1					
ANR	1289933	Argument	tmp		1289048	0					
ANR	1289934	Identifier	tmp		1289048	0					
ANR	1289935	Identifier	IS_STRING		1289048	1					
ANR	1289936	CompoundStatement		101:3:3514:3536	1289048	1					
ANR	1289937	IdentifierDeclStatement	sdlFaultPtr * tmp_fault ;	3983:3:137425:137447	1289048	0	True				
ANR	1289938	IdentifierDecl	* tmp_fault		1289048	0					
ANR	1289939	IdentifierDeclType	sdlFaultPtr *		1289048	0					
ANR	1289940	Identifier	tmp_fault		1289048	1					
ANR	1289941	IfStatement	"if ( function && function -> faults && zend_hash_find ( function -> faults , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) + 1 , ( void * * ) & tmp_fault ) == SUCCESS )"		1289048	1					
ANR	1289942	Condition	"function && function -> faults && zend_hash_find ( function -> faults , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) + 1 , ( void * * ) & tmp_fault ) == SUCCESS"	3984:7:137456:137595	1289048	0	True				
ANR	1289943	AndExpression	"function && function -> faults && zend_hash_find ( function -> faults , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) + 1 , ( void * * ) & tmp_fault ) == SUCCESS"		1289048	0		&&			
ANR	1289944	Identifier	function		1289048	0					
ANR	1289945	AndExpression	"function -> faults && zend_hash_find ( function -> faults , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) + 1 , ( void * * ) & tmp_fault ) == SUCCESS"		1289048	1		&&			
ANR	1289946	PtrMemberAccess	function -> faults		1289048	0					
ANR	1289947	Identifier	function		1289048	0					
ANR	1289948	Identifier	faults		1289048	1					
ANR	1289949	EqualityExpression	"zend_hash_find ( function -> faults , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) + 1 , ( void * * ) & tmp_fault ) == SUCCESS"		1289048	1		==			
ANR	1289950	CallExpression	"zend_hash_find ( function -> faults , Z_STRVAL_PP ( tmp ) , Z_STRLEN_PP ( tmp ) + 1 , ( void * * ) & tmp_fault )"		1289048	0					
ANR	1289951	Callee	zend_hash_find		1289048	0					
ANR	1289952	Identifier	zend_hash_find		1289048	0					
ANR	1289953	ArgumentList	function -> faults		1289048	1					
ANR	1289954	Argument	function -> faults		1289048	0					
ANR	1289955	PtrMemberAccess	function -> faults		1289048	0					
ANR	1289956	Identifier	function		1289048	0					
ANR	1289957	Identifier	faults		1289048	1					
ANR	1289958	Argument	Z_STRVAL_PP ( tmp )		1289048	1					
ANR	1289959	CallExpression	Z_STRVAL_PP ( tmp )		1289048	0					
ANR	1289960	Callee	Z_STRVAL_PP		1289048	0					
ANR	1289961	Identifier	Z_STRVAL_PP		1289048	0					
ANR	1289962	ArgumentList	tmp		1289048	1					
ANR	1289963	Argument	tmp		1289048	0					
ANR	1289964	Identifier	tmp		1289048	0					
ANR	1289965	Argument	Z_STRLEN_PP ( tmp ) + 1		1289048	2					
ANR	1289966	AdditiveExpression	Z_STRLEN_PP ( tmp ) + 1		1289048	0		+			
ANR	1289967	CallExpression	Z_STRLEN_PP ( tmp )		1289048	0					
ANR	1289968	Callee	Z_STRLEN_PP		1289048	0					
ANR	1289969	Identifier	Z_STRLEN_PP		1289048	0					
ANR	1289970	ArgumentList	tmp		1289048	1					
ANR	1289971	Argument	tmp		1289048	0					
ANR	1289972	Identifier	tmp		1289048	0					
ANR	1289973	PrimaryExpression	1		1289048	1					
ANR	1289974	Argument	( void * * ) & tmp_fault		1289048	3					
ANR	1289975	CastExpression	( void * * ) & tmp_fault		1289048	0					
ANR	1289976	CastTarget	void * *		1289048	0					
ANR	1289977	UnaryOperationExpression	& tmp_fault		1289048	1					
ANR	1289978	UnaryOperator	&		1289048	0					
ANR	1289979	Identifier	tmp_fault		1289048	1					
ANR	1289980	Identifier	SUCCESS		1289048	1					
ANR	1289981	CompoundStatement		103:110:3687:3687	1289048	1					
ANR	1289982	ExpressionStatement	fault = * tmp_fault	3986:5:137605:137623	1289048	0	True				
ANR	1289983	AssignmentExpression	fault = * tmp_fault		1289048	0		=			
ANR	1289984	Identifier	fault		1289048	0					
ANR	1289985	UnaryOperationExpression	* tmp_fault		1289048	1					
ANR	1289986	UnaryOperator	*		1289048	0					
ANR	1289987	Identifier	tmp_fault		1289048	1					
ANR	1289988	IfStatement	if ( function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes )		1289048	1					
ANR	1289989	Condition	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes	3987:8:137633:137743	1289048	0	True				
ANR	1289990	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		1289048	0		&&			
ANR	1289991	PtrMemberAccess	function -> binding		1289048	0					
ANR	1289992	Identifier	function		1289048	0					
ANR	1289993	Identifier	binding		1289048	1					
ANR	1289994	AndExpression	function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		1289048	1		&&			
ANR	1289995	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1289048	0		==			
ANR	1289996	PtrMemberAccess	function -> binding -> bindingType		1289048	0					
ANR	1289997	PtrMemberAccess	function -> binding		1289048	0					
ANR	1289998	Identifier	function		1289048	0					
ANR	1289999	Identifier	binding		1289048	1					
ANR	1290000	Identifier	bindingType		1289048	1					
ANR	1290001	Identifier	BINDING_SOAP		1289048	1					
ANR	1290002	PtrMemberAccess	fault -> bindingAttributes		1289048	1					
ANR	1290003	Identifier	fault		1289048	0					
ANR	1290004	Identifier	bindingAttributes		1289048	1					
ANR	1290005	CompoundStatement		108:5:3842:3934	1289048	1					
ANR	1290006	IdentifierDeclStatement	sdlSoapBindingFunctionFaultPtr fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes ;	3990:5:137753:137845	1289048	0	True				
ANR	1290007	IdentifierDecl	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	0					
ANR	1290008	IdentifierDeclType	sdlSoapBindingFunctionFaultPtr		1289048	0					
ANR	1290009	Identifier	fb		1289048	1					
ANR	1290010	AssignmentExpression	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	2		=			
ANR	1290011	Identifier	fb		1289048	0					
ANR	1290012	CastExpression	( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	1					
ANR	1290013	CastTarget	sdlSoapBindingFunctionFaultPtr		1289048	0					
ANR	1290014	PtrMemberAccess	fault -> bindingAttributes		1289048	1					
ANR	1290015	Identifier	fault		1289048	0					
ANR	1290016	Identifier	bindingAttributes		1289048	1					
ANR	1290017	ExpressionStatement	use = fb -> use	3991:5:137852:137865	1289048	1	True				
ANR	1290018	AssignmentExpression	use = fb -> use		1289048	0		=			
ANR	1290019	Identifier	use		1289048	0					
ANR	1290020	PtrMemberAccess	fb -> use		1289048	1					
ANR	1290021	Identifier	fb		1289048	0					
ANR	1290022	Identifier	use		1289048	1					
ANR	1290023	IfStatement	if ( fault_ns == NULL )		1289048	2					
ANR	1290024	Condition	fault_ns == NULL	3992:9:137876:137891	1289048	0	True				
ANR	1290025	EqualityExpression	fault_ns == NULL		1289048	0		==			
ANR	1290026	Identifier	fault_ns		1289048	0					
ANR	1290027	Identifier	NULL		1289048	1					
ANR	1290028	CompoundStatement		110:27:3983:3983	1289048	1					
ANR	1290029	ExpressionStatement	fault_ns = fb -> ns	3993:6:137902:137919	1289048	0	True				
ANR	1290030	AssignmentExpression	fault_ns = fb -> ns		1289048	0		=			
ANR	1290031	Identifier	fault_ns		1289048	0					
ANR	1290032	PtrMemberAccess	fb -> ns		1289048	1					
ANR	1290033	Identifier	fb		1289048	0					
ANR	1290034	Identifier	ns		1289048	1					
ANR	1290035	ElseStatement	else		1289048	0					
ANR	1290036	IfStatement	if ( function && function -> faults && zend_hash_num_elements ( function -> faults ) == 1 )		1289048	0					
ANR	1290037	Condition	function && function -> faults && zend_hash_num_elements ( function -> faults ) == 1	3997:13:137952:138041	1289048	0	True				
ANR	1290038	AndExpression	function && function -> faults && zend_hash_num_elements ( function -> faults ) == 1		1289048	0		&&			
ANR	1290039	Identifier	function		1289048	0					
ANR	1290040	AndExpression	function -> faults && zend_hash_num_elements ( function -> faults ) == 1		1289048	1		&&			
ANR	1290041	PtrMemberAccess	function -> faults		1289048	0					
ANR	1290042	Identifier	function		1289048	0					
ANR	1290043	Identifier	faults		1289048	1					
ANR	1290044	EqualityExpression	zend_hash_num_elements ( function -> faults ) == 1		1289048	1		==			
ANR	1290045	CallExpression	zend_hash_num_elements ( function -> faults )		1289048	0					
ANR	1290046	Callee	zend_hash_num_elements		1289048	0					
ANR	1290047	Identifier	zend_hash_num_elements		1289048	0					
ANR	1290048	ArgumentList	function -> faults		1289048	1					
ANR	1290049	Argument	function -> faults		1289048	0					
ANR	1290050	PtrMemberAccess	function -> faults		1289048	0					
ANR	1290051	Identifier	function		1289048	0					
ANR	1290052	Identifier	faults		1289048	1					
ANR	1290053	PrimaryExpression	1		1289048	1					
ANR	1290054	CompoundStatement		116:60:4133:4133	1289048	1					
ANR	1290055	ExpressionStatement	zend_hash_internal_pointer_reset ( function -> faults )	4000:3:138050:138100	1289048	0	True				
ANR	1290056	CallExpression	zend_hash_internal_pointer_reset ( function -> faults )		1289048	0					
ANR	1290057	Callee	zend_hash_internal_pointer_reset		1289048	0					
ANR	1290058	Identifier	zend_hash_internal_pointer_reset		1289048	0					
ANR	1290059	ArgumentList	function -> faults		1289048	1					
ANR	1290060	Argument	function -> faults		1289048	0					
ANR	1290061	PtrMemberAccess	function -> faults		1289048	0					
ANR	1290062	Identifier	function		1289048	0					
ANR	1290063	Identifier	faults		1289048	1					
ANR	1290064	ExpressionStatement	"zend_hash_get_current_data ( function -> faults , ( void * * ) & fault )"	4001:3:138105:138165	1289048	1	True				
ANR	1290065	CallExpression	"zend_hash_get_current_data ( function -> faults , ( void * * ) & fault )"		1289048	0					
ANR	1290066	Callee	zend_hash_get_current_data		1289048	0					
ANR	1290067	Identifier	zend_hash_get_current_data		1289048	0					
ANR	1290068	ArgumentList	function -> faults		1289048	1					
ANR	1290069	Argument	function -> faults		1289048	0					
ANR	1290070	PtrMemberAccess	function -> faults		1289048	0					
ANR	1290071	Identifier	function		1289048	0					
ANR	1290072	Identifier	faults		1289048	1					
ANR	1290073	Argument	( void * * ) & fault		1289048	1					
ANR	1290074	CastExpression	( void * * ) & fault		1289048	0					
ANR	1290075	CastTarget	void * *		1289048	0					
ANR	1290076	UnaryOperationExpression	& fault		1289048	1					
ANR	1290077	UnaryOperator	&		1289048	0					
ANR	1290078	Identifier	fault		1289048	1					
ANR	1290079	ExpressionStatement	fault = * ( sdlFaultPtr * ) fault	4002:3:138170:138198	1289048	2	True				
ANR	1290080	AssignmentExpression	fault = * ( sdlFaultPtr * ) fault		1289048	0		=			
ANR	1290081	Identifier	fault		1289048	0					
ANR	1290082	UnaryOperationExpression	* ( sdlFaultPtr * ) fault		1289048	1					
ANR	1290083	UnaryOperator	*		1289048	0					
ANR	1290084	CastExpression	( sdlFaultPtr * ) fault		1289048	1					
ANR	1290085	CastTarget	sdlFaultPtr *		1289048	0					
ANR	1290086	Identifier	fault		1289048	1					
ANR	1290087	IfStatement	if ( function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes )		1289048	3					
ANR	1290088	Condition	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes	4003:7:138207:138315	1289048	0	True				
ANR	1290089	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		1289048	0		&&			
ANR	1290090	PtrMemberAccess	function -> binding		1289048	0					
ANR	1290091	Identifier	function		1289048	0					
ANR	1290092	Identifier	binding		1289048	1					
ANR	1290093	AndExpression	function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		1289048	1		&&			
ANR	1290094	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1289048	0		==			
ANR	1290095	PtrMemberAccess	function -> binding -> bindingType		1289048	0					
ANR	1290096	PtrMemberAccess	function -> binding		1289048	0					
ANR	1290097	Identifier	function		1289048	0					
ANR	1290098	Identifier	binding		1289048	1					
ANR	1290099	Identifier	bindingType		1289048	1					
ANR	1290100	Identifier	BINDING_SOAP		1289048	1					
ANR	1290101	PtrMemberAccess	fault -> bindingAttributes		1289048	1					
ANR	1290102	Identifier	fault		1289048	0					
ANR	1290103	Identifier	bindingAttributes		1289048	1					
ANR	1290104	CompoundStatement		124:4:4413:4505	1289048	1					
ANR	1290105	IdentifierDeclStatement	sdlSoapBindingFunctionFaultPtr fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes ;	4006:4:138324:138416	1289048	0	True				
ANR	1290106	IdentifierDecl	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	0					
ANR	1290107	IdentifierDeclType	sdlSoapBindingFunctionFaultPtr		1289048	0					
ANR	1290108	Identifier	fb		1289048	1					
ANR	1290109	AssignmentExpression	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	2		=			
ANR	1290110	Identifier	fb		1289048	0					
ANR	1290111	CastExpression	( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	1					
ANR	1290112	CastTarget	sdlSoapBindingFunctionFaultPtr		1289048	0					
ANR	1290113	PtrMemberAccess	fault -> bindingAttributes		1289048	1					
ANR	1290114	Identifier	fault		1289048	0					
ANR	1290115	Identifier	bindingAttributes		1289048	1					
ANR	1290116	ExpressionStatement	use = fb -> use	4007:4:138422:138435	1289048	1	True				
ANR	1290117	AssignmentExpression	use = fb -> use		1289048	0		=			
ANR	1290118	Identifier	use		1289048	0					
ANR	1290119	PtrMemberAccess	fb -> use		1289048	1					
ANR	1290120	Identifier	fb		1289048	0					
ANR	1290121	Identifier	use		1289048	1					
ANR	1290122	IfStatement	if ( fault_ns == NULL )		1289048	2					
ANR	1290123	Condition	fault_ns == NULL	4008:8:138445:138460	1289048	0	True				
ANR	1290124	EqualityExpression	fault_ns == NULL		1289048	0		==			
ANR	1290125	Identifier	fault_ns		1289048	0					
ANR	1290126	Identifier	NULL		1289048	1					
ANR	1290127	CompoundStatement		126:26:4552:4552	1289048	1					
ANR	1290128	ExpressionStatement	fault_ns = fb -> ns	4009:6:138471:138488	1289048	0	True				
ANR	1290129	AssignmentExpression	fault_ns = fb -> ns		1289048	0		=			
ANR	1290130	Identifier	fault_ns		1289048	0					
ANR	1290131	PtrMemberAccess	fb -> ns		1289048	1					
ANR	1290132	Identifier	fb		1289048	0					
ANR	1290133	Identifier	ns		1289048	1					
ANR	1290134	IfStatement	if ( fault_ns == NULL && fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1 )		1289048	12					
ANR	1290135	Condition	fault_ns == NULL && fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1	4014:6:138512:138619	1289048	0	True				
ANR	1290136	AndExpression	fault_ns == NULL && fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1		1289048	0		&&			
ANR	1290137	EqualityExpression	fault_ns == NULL		1289048	0		==			
ANR	1290138	Identifier	fault_ns		1289048	0					
ANR	1290139	Identifier	NULL		1289048	1					
ANR	1290140	AndExpression	fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1		1289048	1		&&			
ANR	1290141	Identifier	fault		1289048	0					
ANR	1290142	AndExpression	fault -> details && zend_hash_num_elements ( fault -> details ) == 1		1289048	1		&&			
ANR	1290143	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290144	Identifier	fault		1289048	0					
ANR	1290145	Identifier	details		1289048	1					
ANR	1290146	EqualityExpression	zend_hash_num_elements ( fault -> details ) == 1		1289048	1		==			
ANR	1290147	CallExpression	zend_hash_num_elements ( fault -> details )		1289048	0					
ANR	1290148	Callee	zend_hash_num_elements		1289048	0					
ANR	1290149	Identifier	zend_hash_num_elements		1289048	0					
ANR	1290150	ArgumentList	fault -> details		1289048	1					
ANR	1290151	Argument	fault -> details		1289048	0					
ANR	1290152	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290153	Identifier	fault		1289048	0					
ANR	1290154	Identifier	details		1289048	1					
ANR	1290155	PrimaryExpression	1		1289048	1					
ANR	1290156	CompoundStatement		136:3:4716:4734	1289048	1					
ANR	1290157	IdentifierDeclStatement	sdlParamPtr sparam ;	4018:3:138627:138645	1289048	0	True				
ANR	1290158	IdentifierDecl	sparam		1289048	0					
ANR	1290159	IdentifierDeclType	sdlParamPtr		1289048	0					
ANR	1290160	Identifier	sparam		1289048	1					
ANR	1290161	ExpressionStatement	zend_hash_internal_pointer_reset ( fault -> details )	4020:3:138651:138699	1289048	1	True				
ANR	1290162	CallExpression	zend_hash_internal_pointer_reset ( fault -> details )		1289048	0					
ANR	1290163	Callee	zend_hash_internal_pointer_reset		1289048	0					
ANR	1290164	Identifier	zend_hash_internal_pointer_reset		1289048	0					
ANR	1290165	ArgumentList	fault -> details		1289048	1					
ANR	1290166	Argument	fault -> details		1289048	0					
ANR	1290167	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290168	Identifier	fault		1289048	0					
ANR	1290169	Identifier	details		1289048	1					
ANR	1290170	ExpressionStatement	"zend_hash_get_current_data ( fault -> details , ( void * * ) & sparam )"	4021:3:138704:138763	1289048	2	True				
ANR	1290171	CallExpression	"zend_hash_get_current_data ( fault -> details , ( void * * ) & sparam )"		1289048	0					
ANR	1290172	Callee	zend_hash_get_current_data		1289048	0					
ANR	1290173	Identifier	zend_hash_get_current_data		1289048	0					
ANR	1290174	ArgumentList	fault -> details		1289048	1					
ANR	1290175	Argument	fault -> details		1289048	0					
ANR	1290176	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290177	Identifier	fault		1289048	0					
ANR	1290178	Identifier	details		1289048	1					
ANR	1290179	Argument	( void * * ) & sparam		1289048	1					
ANR	1290180	CastExpression	( void * * ) & sparam		1289048	0					
ANR	1290181	CastTarget	void * *		1289048	0					
ANR	1290182	UnaryOperationExpression	& sparam		1289048	1					
ANR	1290183	UnaryOperator	&		1289048	0					
ANR	1290184	Identifier	sparam		1289048	1					
ANR	1290185	ExpressionStatement	sparam = * ( sdlParamPtr * ) sparam	4022:3:138768:138798	1289048	3	True				
ANR	1290186	AssignmentExpression	sparam = * ( sdlParamPtr * ) sparam		1289048	0		=			
ANR	1290187	Identifier	sparam		1289048	0					
ANR	1290188	UnaryOperationExpression	* ( sdlParamPtr * ) sparam		1289048	1					
ANR	1290189	UnaryOperator	*		1289048	0					
ANR	1290190	CastExpression	( sdlParamPtr * ) sparam		1289048	1					
ANR	1290191	CastTarget	sdlParamPtr *		1289048	0					
ANR	1290192	Identifier	sparam		1289048	1					
ANR	1290193	IfStatement	if ( sparam -> element )		1289048	4					
ANR	1290194	Condition	sparam -> element	4023:7:138807:138821	1289048	0	True				
ANR	1290195	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1290196	Identifier	sparam		1289048	0					
ANR	1290197	Identifier	element		1289048	1					
ANR	1290198	CompoundStatement		141:24:4913:4913	1289048	1					
ANR	1290199	ExpressionStatement	fault_ns = sparam -> element -> namens	4024:4:138830:138864	1289048	0	True				
ANR	1290200	AssignmentExpression	fault_ns = sparam -> element -> namens		1289048	0		=			
ANR	1290201	Identifier	fault_ns		1289048	0					
ANR	1290202	PtrMemberAccess	sparam -> element -> namens		1289048	1					
ANR	1290203	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1290204	Identifier	sparam		1289048	0					
ANR	1290205	Identifier	element		1289048	1					
ANR	1290206	Identifier	namens		1289048	1					
ANR	1290207	IfStatement	if ( version == SOAP_1_1 )		1289048	13					
ANR	1290208	Condition	version == SOAP_1_1	4028:6:138882:138900	1289048	0	True				
ANR	1290209	EqualityExpression	version == SOAP_1_1		1289048	0		==			
ANR	1290210	Identifier	version		1289048	0					
ANR	1290211	Identifier	SOAP_1_1		1289048	1					
ANR	1290212	CompoundStatement		146:27:4992:4992	1289048	1					
ANR	1290213	IfStatement	"if ( zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING )"		1289048	0					
ANR	1290214	Condition	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"	4029:7:138912:139028	1289048	0	True				
ANR	1290215	AndExpression	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"		1289048	0		&&			
ANR	1290216	EqualityExpression	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1290217	CallExpression	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1290218	Callee	zend_hash_find		1289048	0					
ANR	1290219	Identifier	zend_hash_find		1289048	0					
ANR	1290220	ArgumentList	prop		1289048	1					
ANR	1290221	Argument	prop		1289048	0					
ANR	1290222	Identifier	prop		1289048	0					
ANR	1290223	Argument	"""faultcode"""		1289048	1					
ANR	1290224	PrimaryExpression	"""faultcode"""		1289048	0					
ANR	1290225	Argument	"sizeof ( ""faultcode"" )"		1289048	2					
ANR	1290226	SizeofExpression	"sizeof ( ""faultcode"" )"		1289048	0					
ANR	1290227	Sizeof	sizeof		1289048	0					
ANR	1290228	PrimaryExpression	"""faultcode"""		1289048	1					
ANR	1290229	Argument	( void * * ) & tmp		1289048	3					
ANR	1290230	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1290231	CastTarget	void * *		1289048	0					
ANR	1290232	UnaryOperationExpression	& tmp		1289048	1					
ANR	1290233	UnaryOperator	&		1289048	0					
ANR	1290234	Identifier	tmp		1289048	1					
ANR	1290235	Identifier	SUCCESS		1289048	1					
ANR	1290236	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1289048	1		==			
ANR	1290237	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1290238	Callee	Z_TYPE_PP		1289048	0					
ANR	1290239	Identifier	Z_TYPE_PP		1289048	0					
ANR	1290240	ArgumentList	tmp		1289048	1					
ANR	1290241	Argument	tmp		1289048	0					
ANR	1290242	Identifier	tmp		1289048	0					
ANR	1290243	Identifier	IS_STRING		1289048	1					
ANR	1290244	CompoundStatement		150:4:5146:5203	1289048	1					
ANR	1290245	IdentifierDeclStatement	size_t new_len ;	4031:4:139037:139051	1289048	0	True				
ANR	1290246	IdentifierDecl	new_len		1289048	0					
ANR	1290247	IdentifierDeclType	size_t		1289048	0					
ANR	1290248	Identifier	new_len		1289048	1					
ANR	1290249	IdentifierDeclStatement	"xmlNodePtr node = xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) ) ;"	4032:4:139057:139114	1289048	1	True				
ANR	1290250	IdentifierDecl	"node = xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) )"		1289048	0					
ANR	1290251	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1290252	Identifier	node		1289048	1					
ANR	1290253	AssignmentExpression	"node = xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) )"		1289048	2		=			
ANR	1290254	Identifier	node		1289048	0					
ANR	1290255	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) )"		1289048	1					
ANR	1290256	Callee	xmlNewNode		1289048	0					
ANR	1290257	Identifier	xmlNewNode		1289048	0					
ANR	1290258	ArgumentList	NULL		1289048	1					
ANR	1290259	Argument	NULL		1289048	0					
ANR	1290260	Identifier	NULL		1289048	0					
ANR	1290261	Argument	"BAD_CAST ( ""faultcode"" )"		1289048	1					
ANR	1290262	CallExpression	"BAD_CAST ( ""faultcode"" )"		1289048	0					
ANR	1290263	Callee	BAD_CAST		1289048	0					
ANR	1290264	Identifier	BAD_CAST		1289048	0					
ANR	1290265	ArgumentList	"""faultcode"""		1289048	1					
ANR	1290266	Argument	"""faultcode"""		1289048	0					
ANR	1290267	PrimaryExpression	"""faultcode"""		1289048	0					
ANR	1290268	Statement	char	4033:4:139120:139123	1289048	2	True				
ANR	1290269	Statement	*	4033:9:139125:139125	1289048	3	True				
ANR	1290270	Statement	str	4033:10:139126:139128	1289048	4	True				
ANR	1290271	Statement	=	4033:14:139130:139130	1289048	5	True				
ANR	1290272	Statement	php_escape_html_entities	4033:16:139132:139155	1289048	6	True				
ANR	1290273	Statement	(	4033:40:139156:139156	1289048	7	True				
ANR	1290274	Statement	(	4033:41:139157:139157	1289048	8	True				
ANR	1290275	Statement	unsigned	4033:42:139158:139165	1289048	9	True				
ANR	1290276	Statement	char	4033:51:139167:139170	1289048	10	True				
ANR	1290277	Statement	*	4033:55:139171:139171	1289048	11	True				
ANR	1290278	Statement	)	4033:56:139172:139172	1289048	12	True				
ANR	1290279	Statement	Z_STRVAL_PP	4033:57:139173:139183	1289048	13	True				
ANR	1290280	Statement	(	4033:68:139184:139184	1289048	14	True				
ANR	1290281	Statement	tmp	4033:69:139185:139187	1289048	15	True				
ANR	1290282	Statement	)	4033:72:139188:139188	1289048	16	True				
ANR	1290283	Statement	","	4033:73:139189:139189	1289048	17	True				
ANR	1290284	Statement	Z_STRLEN_PP	4033:75:139191:139201	1289048	18	True				
ANR	1290285	Statement	(	4033:86:139202:139202	1289048	19	True				
ANR	1290286	Statement	tmp	4033:87:139203:139205	1289048	20	True				
ANR	1290287	Statement	)	4033:90:139206:139206	1289048	21	True				
ANR	1290288	Statement	","	4033:91:139207:139207	1289048	22	True				
ANR	1290289	Statement	&	4033:93:139209:139209	1289048	23	True				
ANR	1290290	Statement	new_len	4033:94:139210:139216	1289048	24	True				
ANR	1290291	Statement	","	4033:101:139217:139217	1289048	25	True				
ANR	1290292	Statement	0	4033:103:139219:139219	1289048	26	True				
ANR	1290293	Statement	","	4033:104:139220:139220	1289048	27	True				
ANR	1290294	Statement	0	4033:106:139222:139222	1289048	28	True				
ANR	1290295	Statement	","	4033:107:139223:139223	1289048	29	True				
ANR	1290296	Statement	NULL	4033:109:139225:139228	1289048	30	True				
ANR	1290297	Statement	TSRMLS_CC	4033:114:139230:139238	1289048	31	True				
ANR	1290298	Statement	)	4033:123:139239:139239	1289048	32	True				
ANR	1290299	ExpressionStatement		4033:124:139240:139240	1289048	33	True				
ANR	1290300	ExpressionStatement	"xmlAddChild ( param , node )"	4034:4:139246:139270	1289048	34	True				
ANR	1290301	CallExpression	"xmlAddChild ( param , node )"		1289048	0					
ANR	1290302	Callee	xmlAddChild		1289048	0					
ANR	1290303	Identifier	xmlAddChild		1289048	0					
ANR	1290304	ArgumentList	param		1289048	1					
ANR	1290305	Argument	param		1289048	0					
ANR	1290306	Identifier	param		1289048	0					
ANR	1290307	Argument	node		1289048	1					
ANR	1290308	Identifier	node		1289048	0					
ANR	1290309	IfStatement	if ( fault_ns )		1289048	35					
ANR	1290310	Condition	fault_ns	4035:8:139280:139287	1289048	0	True				
ANR	1290311	Identifier	fault_ns		1289048	0					
ANR	1290312	CompoundStatement		155:5:5439:5507	1289048	1					
ANR	1290313	IdentifierDeclStatement	"xmlNsPtr nsptr = encode_add_ns ( node , fault_ns ) ;"	4036:5:139297:139343	1289048	0	True				
ANR	1290314	IdentifierDecl	"nsptr = encode_add_ns ( node , fault_ns )"		1289048	0					
ANR	1290315	IdentifierDeclType	xmlNsPtr		1289048	0					
ANR	1290316	Identifier	nsptr		1289048	1					
ANR	1290317	AssignmentExpression	"nsptr = encode_add_ns ( node , fault_ns )"		1289048	2		=			
ANR	1290318	Identifier	nsptr		1289048	0					
ANR	1290319	CallExpression	"encode_add_ns ( node , fault_ns )"		1289048	1					
ANR	1290320	Callee	encode_add_ns		1289048	0					
ANR	1290321	Identifier	encode_add_ns		1289048	0					
ANR	1290322	ArgumentList	node		1289048	1					
ANR	1290323	Argument	node		1289048	0					
ANR	1290324	Identifier	node		1289048	0					
ANR	1290325	Argument	fault_ns		1289048	1					
ANR	1290326	Identifier	fault_ns		1289048	0					
ANR	1290327	IdentifierDeclStatement	"xmlChar * code = xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 ) ;"	4037:5:139350:139418	1289048	1	True				
ANR	1290328	IdentifierDecl	"* code = xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 )"		1289048	0					
ANR	1290329	IdentifierDeclType	xmlChar *		1289048	0					
ANR	1290330	Identifier	code		1289048	1					
ANR	1290331	AssignmentExpression	"* code = xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 )"		1289048	2		=			
ANR	1290332	Identifier	code		1289048	0					
ANR	1290333	CallExpression	"xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 )"		1289048	1					
ANR	1290334	Callee	xmlBuildQName		1289048	0					
ANR	1290335	Identifier	xmlBuildQName		1289048	0					
ANR	1290336	ArgumentList	BAD_CAST ( str )		1289048	1					
ANR	1290337	Argument	BAD_CAST ( str )		1289048	0					
ANR	1290338	CallExpression	BAD_CAST ( str )		1289048	0					
ANR	1290339	Callee	BAD_CAST		1289048	0					
ANR	1290340	Identifier	BAD_CAST		1289048	0					
ANR	1290341	ArgumentList	str		1289048	1					
ANR	1290342	Argument	str		1289048	0					
ANR	1290343	Identifier	str		1289048	0					
ANR	1290344	Argument	nsptr -> prefix		1289048	1					
ANR	1290345	PtrMemberAccess	nsptr -> prefix		1289048	0					
ANR	1290346	Identifier	nsptr		1289048	0					
ANR	1290347	Identifier	prefix		1289048	1					
ANR	1290348	Argument	NULL		1289048	2					
ANR	1290349	Identifier	NULL		1289048	0					
ANR	1290350	Argument	0		1289048	3					
ANR	1290351	PrimaryExpression	0		1289048	0					
ANR	1290352	ExpressionStatement	"xmlNodeSetContent ( node , code )"	4038:5:139425:139454	1289048	2	True				
ANR	1290353	CallExpression	"xmlNodeSetContent ( node , code )"		1289048	0					
ANR	1290354	Callee	xmlNodeSetContent		1289048	0					
ANR	1290355	Identifier	xmlNodeSetContent		1289048	0					
ANR	1290356	ArgumentList	node		1289048	1					
ANR	1290357	Argument	node		1289048	0					
ANR	1290358	Identifier	node		1289048	0					
ANR	1290359	Argument	code		1289048	1					
ANR	1290360	Identifier	code		1289048	0					
ANR	1290361	ExpressionStatement	xmlFree ( code )	4039:5:139461:139474	1289048	3	True				
ANR	1290362	CallExpression	xmlFree ( code )		1289048	0					
ANR	1290363	Callee	xmlFree		1289048	0					
ANR	1290364	Identifier	xmlFree		1289048	0					
ANR	1290365	ArgumentList	code		1289048	1					
ANR	1290366	Argument	code		1289048	0					
ANR	1290367	Identifier	code		1289048	0					
ANR	1290368	ElseStatement	else		1289048	0					
ANR	1290369	CompoundStatement		158:11:5576:5576	1289048	0					
ANR	1290370	ExpressionStatement	"xmlNodeSetContentLen ( node , BAD_CAST ( str ) , ( int ) new_len )"	4041:5:139494:139549	1289048	0	True				
ANR	1290371	CallExpression	"xmlNodeSetContentLen ( node , BAD_CAST ( str ) , ( int ) new_len )"		1289048	0					
ANR	1290372	Callee	xmlNodeSetContentLen		1289048	0					
ANR	1290373	Identifier	xmlNodeSetContentLen		1289048	0					
ANR	1290374	ArgumentList	node		1289048	1					
ANR	1290375	Argument	node		1289048	0					
ANR	1290376	Identifier	node		1289048	0					
ANR	1290377	Argument	BAD_CAST ( str )		1289048	1					
ANR	1290378	CallExpression	BAD_CAST ( str )		1289048	0					
ANR	1290379	Callee	BAD_CAST		1289048	0					
ANR	1290380	Identifier	BAD_CAST		1289048	0					
ANR	1290381	ArgumentList	str		1289048	1					
ANR	1290382	Argument	str		1289048	0					
ANR	1290383	Identifier	str		1289048	0					
ANR	1290384	Argument	( int ) new_len		1289048	2					
ANR	1290385	CastExpression	( int ) new_len		1289048	0					
ANR	1290386	CastTarget	int		1289048	0					
ANR	1290387	Identifier	new_len		1289048	1					
ANR	1290388	ExpressionStatement	str_efree ( str )	4043:4:139561:139575	1289048	36	True				
ANR	1290389	CallExpression	str_efree ( str )		1289048	0					
ANR	1290390	Callee	str_efree		1289048	0					
ANR	1290391	Identifier	str_efree		1289048	0					
ANR	1290392	ArgumentList	str		1289048	1					
ANR	1290393	Argument	str		1289048	0					
ANR	1290394	Identifier	str		1289048	0					
ANR	1290395	IfStatement	"if ( zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp ) == SUCCESS )"		1289048	1					
ANR	1290396	Condition	"zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp ) == SUCCESS"	4045:7:139589:139671	1289048	0	True				
ANR	1290397	EqualityExpression	"zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1290398	CallExpression	"zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1290399	Callee	zend_hash_find		1289048	0					
ANR	1290400	Identifier	zend_hash_find		1289048	0					
ANR	1290401	ArgumentList	prop		1289048	1					
ANR	1290402	Argument	prop		1289048	0					
ANR	1290403	Identifier	prop		1289048	0					
ANR	1290404	Argument	"""faultstring"""		1289048	1					
ANR	1290405	PrimaryExpression	"""faultstring"""		1289048	0					
ANR	1290406	Argument	"sizeof ( ""faultstring"" )"		1289048	2					
ANR	1290407	SizeofExpression	"sizeof ( ""faultstring"" )"		1289048	0					
ANR	1290408	Sizeof	sizeof		1289048	0					
ANR	1290409	PrimaryExpression	"""faultstring"""		1289048	1					
ANR	1290410	Argument	( void * * ) & tmp		1289048	3					
ANR	1290411	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1290412	CastTarget	void * *		1289048	0					
ANR	1290413	UnaryOperationExpression	& tmp		1289048	1					
ANR	1290414	UnaryOperator	&		1289048	0					
ANR	1290415	Identifier	tmp		1289048	1					
ANR	1290416	Identifier	SUCCESS		1289048	1					
ANR	1290417	CompoundStatement		163:92:5763:5763	1289048	1					
ANR	1290418	Statement	xmlNodePtr	4046:4:139680:139689	1289048	0	True				
ANR	1290419	Statement	node	4046:15:139691:139694	1289048	1	True				
ANR	1290420	Statement	=	4046:20:139696:139696	1289048	2	True				
ANR	1290421	Statement	master_to_xml	4046:22:139698:139710	1289048	3	True				
ANR	1290422	Statement	(	4046:35:139711:139711	1289048	4	True				
ANR	1290423	Statement	get_conversion	4046:36:139712:139725	1289048	5	True				
ANR	1290424	Statement	(	4046:50:139726:139726	1289048	6	True				
ANR	1290425	Statement	IS_STRING	4046:51:139727:139735	1289048	7	True				
ANR	1290426	Statement	)	4046:60:139736:139736	1289048	8	True				
ANR	1290427	Statement	","	4046:61:139737:139737	1289048	9	True				
ANR	1290428	Statement	*	4046:63:139739:139739	1289048	10	True				
ANR	1290429	Statement	tmp	4046:64:139740:139742	1289048	11	True				
ANR	1290430	Statement	","	4046:67:139743:139743	1289048	12	True				
ANR	1290431	Statement	SOAP_LITERAL	4046:69:139745:139756	1289048	13	True				
ANR	1290432	Statement	","	4046:81:139757:139757	1289048	14	True				
ANR	1290433	Statement	param	4046:83:139759:139763	1289048	15	True				
ANR	1290434	Statement	TSRMLS_CC	4046:89:139765:139773	1289048	16	True				
ANR	1290435	Statement	)	4046:98:139774:139774	1289048	17	True				
ANR	1290436	ExpressionStatement		4046:99:139775:139775	1289048	18	True				
ANR	1290437	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( ""faultstring"" ) )"	4047:4:139781:139826	1289048	19	True				
ANR	1290438	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( ""faultstring"" ) )"		1289048	0					
ANR	1290439	Callee	xmlNodeSetName		1289048	0					
ANR	1290440	Identifier	xmlNodeSetName		1289048	0					
ANR	1290441	ArgumentList	node		1289048	1					
ANR	1290442	Argument	node		1289048	0					
ANR	1290443	Identifier	node		1289048	0					
ANR	1290444	Argument	"BAD_CAST ( ""faultstring"" )"		1289048	1					
ANR	1290445	CallExpression	"BAD_CAST ( ""faultstring"" )"		1289048	0					
ANR	1290446	Callee	BAD_CAST		1289048	0					
ANR	1290447	Identifier	BAD_CAST		1289048	0					
ANR	1290448	ArgumentList	"""faultstring"""		1289048	1					
ANR	1290449	Argument	"""faultstring"""		1289048	0					
ANR	1290450	PrimaryExpression	"""faultstring"""		1289048	0					
ANR	1290451	IfStatement	"if ( zend_hash_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) , ( void * * ) & tmp ) == SUCCESS )"		1289048	2					
ANR	1290452	Condition	"zend_hash_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) , ( void * * ) & tmp ) == SUCCESS"	4049:7:139840:139920	1289048	0	True				
ANR	1290453	EqualityExpression	"zend_hash_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1290454	CallExpression	"zend_hash_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1290455	Callee	zend_hash_find		1289048	0					
ANR	1290456	Identifier	zend_hash_find		1289048	0					
ANR	1290457	ArgumentList	prop		1289048	1					
ANR	1290458	Argument	prop		1289048	0					
ANR	1290459	Identifier	prop		1289048	0					
ANR	1290460	Argument	"""faultactor"""		1289048	1					
ANR	1290461	PrimaryExpression	"""faultactor"""		1289048	0					
ANR	1290462	Argument	"sizeof ( ""faultactor"" )"		1289048	2					
ANR	1290463	SizeofExpression	"sizeof ( ""faultactor"" )"		1289048	0					
ANR	1290464	Sizeof	sizeof		1289048	0					
ANR	1290465	PrimaryExpression	"""faultactor"""		1289048	1					
ANR	1290466	Argument	( void * * ) & tmp		1289048	3					
ANR	1290467	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1290468	CastTarget	void * *		1289048	0					
ANR	1290469	UnaryOperationExpression	& tmp		1289048	1					
ANR	1290470	UnaryOperator	&		1289048	0					
ANR	1290471	Identifier	tmp		1289048	1					
ANR	1290472	Identifier	SUCCESS		1289048	1					
ANR	1290473	CompoundStatement		167:90:6012:6012	1289048	1					
ANR	1290474	Statement	xmlNodePtr	4050:4:139929:139938	1289048	0	True				
ANR	1290475	Statement	node	4050:15:139940:139943	1289048	1	True				
ANR	1290476	Statement	=	4050:20:139945:139945	1289048	2	True				
ANR	1290477	Statement	master_to_xml	4050:22:139947:139959	1289048	3	True				
ANR	1290478	Statement	(	4050:35:139960:139960	1289048	4	True				
ANR	1290479	Statement	get_conversion	4050:36:139961:139974	1289048	5	True				
ANR	1290480	Statement	(	4050:50:139975:139975	1289048	6	True				
ANR	1290481	Statement	IS_STRING	4050:51:139976:139984	1289048	7	True				
ANR	1290482	Statement	)	4050:60:139985:139985	1289048	8	True				
ANR	1290483	Statement	","	4050:61:139986:139986	1289048	9	True				
ANR	1290484	Statement	*	4050:63:139988:139988	1289048	10	True				
ANR	1290485	Statement	tmp	4050:64:139989:139991	1289048	11	True				
ANR	1290486	Statement	","	4050:67:139992:139992	1289048	12	True				
ANR	1290487	Statement	SOAP_LITERAL	4050:69:139994:140005	1289048	13	True				
ANR	1290488	Statement	","	4050:81:140006:140006	1289048	14	True				
ANR	1290489	Statement	param	4050:83:140008:140012	1289048	15	True				
ANR	1290490	Statement	TSRMLS_CC	4050:89:140014:140022	1289048	16	True				
ANR	1290491	Statement	)	4050:98:140023:140023	1289048	17	True				
ANR	1290492	ExpressionStatement		4050:99:140024:140024	1289048	18	True				
ANR	1290493	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( ""faultactor"" ) )"	4051:4:140030:140074	1289048	19	True				
ANR	1290494	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( ""faultactor"" ) )"		1289048	0					
ANR	1290495	Callee	xmlNodeSetName		1289048	0					
ANR	1290496	Identifier	xmlNodeSetName		1289048	0					
ANR	1290497	ArgumentList	node		1289048	1					
ANR	1290498	Argument	node		1289048	0					
ANR	1290499	Identifier	node		1289048	0					
ANR	1290500	Argument	"BAD_CAST ( ""faultactor"" )"		1289048	1					
ANR	1290501	CallExpression	"BAD_CAST ( ""faultactor"" )"		1289048	0					
ANR	1290502	Callee	BAD_CAST		1289048	0					
ANR	1290503	Identifier	BAD_CAST		1289048	0					
ANR	1290504	ArgumentList	"""faultactor"""		1289048	1					
ANR	1290505	Argument	"""faultactor"""		1289048	0					
ANR	1290506	PrimaryExpression	"""faultactor"""		1289048	0					
ANR	1290507	ExpressionStatement	"detail_name = ""detail"""	4053:3:140084:140106	1289048	3	True				
ANR	1290508	AssignmentExpression	"detail_name = ""detail"""		1289048	0		=			
ANR	1290509	Identifier	detail_name		1289048	0					
ANR	1290510	PrimaryExpression	"""detail"""		1289048	1					
ANR	1290511	ElseStatement	else		1289048	0					
ANR	1290512	CompoundStatement		172:9:6206:6206	1289048	0					
ANR	1290513	IfStatement	"if ( zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING )"		1289048	0					
ANR	1290514	Condition	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"	4055:7:140126:140242	1289048	0	True				
ANR	1290515	AndExpression	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) == IS_STRING"		1289048	0		&&			
ANR	1290516	EqualityExpression	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1290517	CallExpression	"zend_hash_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1290518	Callee	zend_hash_find		1289048	0					
ANR	1290519	Identifier	zend_hash_find		1289048	0					
ANR	1290520	ArgumentList	prop		1289048	1					
ANR	1290521	Argument	prop		1289048	0					
ANR	1290522	Identifier	prop		1289048	0					
ANR	1290523	Argument	"""faultcode"""		1289048	1					
ANR	1290524	PrimaryExpression	"""faultcode"""		1289048	0					
ANR	1290525	Argument	"sizeof ( ""faultcode"" )"		1289048	2					
ANR	1290526	SizeofExpression	"sizeof ( ""faultcode"" )"		1289048	0					
ANR	1290527	Sizeof	sizeof		1289048	0					
ANR	1290528	PrimaryExpression	"""faultcode"""		1289048	1					
ANR	1290529	Argument	( void * * ) & tmp		1289048	3					
ANR	1290530	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1290531	CastTarget	void * *		1289048	0					
ANR	1290532	UnaryOperationExpression	& tmp		1289048	1					
ANR	1290533	UnaryOperator	&		1289048	0					
ANR	1290534	Identifier	tmp		1289048	1					
ANR	1290535	Identifier	SUCCESS		1289048	1					
ANR	1290536	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1289048	1		==			
ANR	1290537	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1290538	Callee	Z_TYPE_PP		1289048	0					
ANR	1290539	Identifier	Z_TYPE_PP		1289048	0					
ANR	1290540	ArgumentList	tmp		1289048	1					
ANR	1290541	Argument	tmp		1289048	0					
ANR	1290542	Identifier	tmp		1289048	0					
ANR	1290543	Identifier	IS_STRING		1289048	1					
ANR	1290544	CompoundStatement		176:4:6360:6424	1289048	1					
ANR	1290545	IdentifierDeclStatement	size_t new_len ;	4057:4:140251:140265	1289048	0	True				
ANR	1290546	IdentifierDecl	new_len		1289048	0					
ANR	1290547	IdentifierDeclType	size_t		1289048	0					
ANR	1290548	Identifier	new_len		1289048	1					
ANR	1290549	IdentifierDeclStatement	"xmlNodePtr node = xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL ) ;"	4058:4:140271:140335	1289048	1	True				
ANR	1290550	IdentifierDecl	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL )"		1289048	0					
ANR	1290551	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1290552	Identifier	node		1289048	1					
ANR	1290553	AssignmentExpression	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL )"		1289048	2		=			
ANR	1290554	Identifier	node		1289048	0					
ANR	1290555	CallExpression	"xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL )"		1289048	1					
ANR	1290556	Callee	xmlNewChild		1289048	0					
ANR	1290557	Identifier	xmlNewChild		1289048	0					
ANR	1290558	ArgumentList	param		1289048	1					
ANR	1290559	Argument	param		1289048	0					
ANR	1290560	Identifier	param		1289048	0					
ANR	1290561	Argument	ns		1289048	1					
ANR	1290562	Identifier	ns		1289048	0					
ANR	1290563	Argument	"BAD_CAST ( ""Code"" )"		1289048	2					
ANR	1290564	CallExpression	"BAD_CAST ( ""Code"" )"		1289048	0					
ANR	1290565	Callee	BAD_CAST		1289048	0					
ANR	1290566	Identifier	BAD_CAST		1289048	0					
ANR	1290567	ArgumentList	"""Code"""		1289048	1					
ANR	1290568	Argument	"""Code"""		1289048	0					
ANR	1290569	PrimaryExpression	"""Code"""		1289048	0					
ANR	1290570	Argument	NULL		1289048	3					
ANR	1290571	Identifier	NULL		1289048	0					
ANR	1290572	Statement	char	4059:4:140341:140344	1289048	2	True				
ANR	1290573	Statement	*	4059:9:140346:140346	1289048	3	True				
ANR	1290574	Statement	str	4059:10:140347:140349	1289048	4	True				
ANR	1290575	Statement	=	4059:14:140351:140351	1289048	5	True				
ANR	1290576	Statement	php_escape_html_entities	4059:16:140353:140376	1289048	6	True				
ANR	1290577	Statement	(	4059:40:140377:140377	1289048	7	True				
ANR	1290578	Statement	(	4059:41:140378:140378	1289048	8	True				
ANR	1290579	Statement	unsigned	4059:42:140379:140386	1289048	9	True				
ANR	1290580	Statement	char	4059:51:140388:140391	1289048	10	True				
ANR	1290581	Statement	*	4059:55:140392:140392	1289048	11	True				
ANR	1290582	Statement	)	4059:56:140393:140393	1289048	12	True				
ANR	1290583	Statement	Z_STRVAL_PP	4059:57:140394:140404	1289048	13	True				
ANR	1290584	Statement	(	4059:68:140405:140405	1289048	14	True				
ANR	1290585	Statement	tmp	4059:69:140406:140408	1289048	15	True				
ANR	1290586	Statement	)	4059:72:140409:140409	1289048	16	True				
ANR	1290587	Statement	","	4059:73:140410:140410	1289048	17	True				
ANR	1290588	Statement	Z_STRLEN_PP	4059:75:140412:140422	1289048	18	True				
ANR	1290589	Statement	(	4059:86:140423:140423	1289048	19	True				
ANR	1290590	Statement	tmp	4059:87:140424:140426	1289048	20	True				
ANR	1290591	Statement	)	4059:90:140427:140427	1289048	21	True				
ANR	1290592	Statement	","	4059:91:140428:140428	1289048	22	True				
ANR	1290593	Statement	&	4059:93:140430:140430	1289048	23	True				
ANR	1290594	Statement	new_len	4059:94:140431:140437	1289048	24	True				
ANR	1290595	Statement	","	4059:101:140438:140438	1289048	25	True				
ANR	1290596	Statement	0	4059:103:140440:140440	1289048	26	True				
ANR	1290597	Statement	","	4059:104:140441:140441	1289048	27	True				
ANR	1290598	Statement	0	4059:106:140443:140443	1289048	28	True				
ANR	1290599	Statement	","	4059:107:140444:140444	1289048	29	True				
ANR	1290600	Statement	NULL	4059:109:140446:140449	1289048	30	True				
ANR	1290601	Statement	TSRMLS_CC	4059:114:140451:140459	1289048	31	True				
ANR	1290602	Statement	)	4059:123:140460:140460	1289048	32	True				
ANR	1290603	ExpressionStatement		4059:124:140461:140461	1289048	33	True				
ANR	1290604	ExpressionStatement	"node = xmlNewChild ( node , ns , BAD_CAST ( ""Value"" ) , NULL )"	4060:4:140467:140520	1289048	34	True				
ANR	1290605	AssignmentExpression	"node = xmlNewChild ( node , ns , BAD_CAST ( ""Value"" ) , NULL )"		1289048	0		=			
ANR	1290606	Identifier	node		1289048	0					
ANR	1290607	CallExpression	"xmlNewChild ( node , ns , BAD_CAST ( ""Value"" ) , NULL )"		1289048	1					
ANR	1290608	Callee	xmlNewChild		1289048	0					
ANR	1290609	Identifier	xmlNewChild		1289048	0					
ANR	1290610	ArgumentList	node		1289048	1					
ANR	1290611	Argument	node		1289048	0					
ANR	1290612	Identifier	node		1289048	0					
ANR	1290613	Argument	ns		1289048	1					
ANR	1290614	Identifier	ns		1289048	0					
ANR	1290615	Argument	"BAD_CAST ( ""Value"" )"		1289048	2					
ANR	1290616	CallExpression	"BAD_CAST ( ""Value"" )"		1289048	0					
ANR	1290617	Callee	BAD_CAST		1289048	0					
ANR	1290618	Identifier	BAD_CAST		1289048	0					
ANR	1290619	ArgumentList	"""Value"""		1289048	1					
ANR	1290620	Argument	"""Value"""		1289048	0					
ANR	1290621	PrimaryExpression	"""Value"""		1289048	0					
ANR	1290622	Argument	NULL		1289048	3					
ANR	1290623	Identifier	NULL		1289048	0					
ANR	1290624	IfStatement	if ( fault_ns )		1289048	35					
ANR	1290625	Condition	fault_ns	4061:8:140530:140537	1289048	0	True				
ANR	1290626	Identifier	fault_ns		1289048	0					
ANR	1290627	CompoundStatement		181:5:6689:6757	1289048	1					
ANR	1290628	IdentifierDeclStatement	"xmlNsPtr nsptr = encode_add_ns ( node , fault_ns ) ;"	4062:5:140547:140593	1289048	0	True				
ANR	1290629	IdentifierDecl	"nsptr = encode_add_ns ( node , fault_ns )"		1289048	0					
ANR	1290630	IdentifierDeclType	xmlNsPtr		1289048	0					
ANR	1290631	Identifier	nsptr		1289048	1					
ANR	1290632	AssignmentExpression	"nsptr = encode_add_ns ( node , fault_ns )"		1289048	2		=			
ANR	1290633	Identifier	nsptr		1289048	0					
ANR	1290634	CallExpression	"encode_add_ns ( node , fault_ns )"		1289048	1					
ANR	1290635	Callee	encode_add_ns		1289048	0					
ANR	1290636	Identifier	encode_add_ns		1289048	0					
ANR	1290637	ArgumentList	node		1289048	1					
ANR	1290638	Argument	node		1289048	0					
ANR	1290639	Identifier	node		1289048	0					
ANR	1290640	Argument	fault_ns		1289048	1					
ANR	1290641	Identifier	fault_ns		1289048	0					
ANR	1290642	IdentifierDeclStatement	"xmlChar * code = xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 ) ;"	4063:5:140600:140668	1289048	1	True				
ANR	1290643	IdentifierDecl	"* code = xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 )"		1289048	0					
ANR	1290644	IdentifierDeclType	xmlChar *		1289048	0					
ANR	1290645	Identifier	code		1289048	1					
ANR	1290646	AssignmentExpression	"* code = xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 )"		1289048	2		=			
ANR	1290647	Identifier	code		1289048	0					
ANR	1290648	CallExpression	"xmlBuildQName ( BAD_CAST ( str ) , nsptr -> prefix , NULL , 0 )"		1289048	1					
ANR	1290649	Callee	xmlBuildQName		1289048	0					
ANR	1290650	Identifier	xmlBuildQName		1289048	0					
ANR	1290651	ArgumentList	BAD_CAST ( str )		1289048	1					
ANR	1290652	Argument	BAD_CAST ( str )		1289048	0					
ANR	1290653	CallExpression	BAD_CAST ( str )		1289048	0					
ANR	1290654	Callee	BAD_CAST		1289048	0					
ANR	1290655	Identifier	BAD_CAST		1289048	0					
ANR	1290656	ArgumentList	str		1289048	1					
ANR	1290657	Argument	str		1289048	0					
ANR	1290658	Identifier	str		1289048	0					
ANR	1290659	Argument	nsptr -> prefix		1289048	1					
ANR	1290660	PtrMemberAccess	nsptr -> prefix		1289048	0					
ANR	1290661	Identifier	nsptr		1289048	0					
ANR	1290662	Identifier	prefix		1289048	1					
ANR	1290663	Argument	NULL		1289048	2					
ANR	1290664	Identifier	NULL		1289048	0					
ANR	1290665	Argument	0		1289048	3					
ANR	1290666	PrimaryExpression	0		1289048	0					
ANR	1290667	ExpressionStatement	"xmlNodeSetContent ( node , code )"	4064:5:140675:140704	1289048	2	True				
ANR	1290668	CallExpression	"xmlNodeSetContent ( node , code )"		1289048	0					
ANR	1290669	Callee	xmlNodeSetContent		1289048	0					
ANR	1290670	Identifier	xmlNodeSetContent		1289048	0					
ANR	1290671	ArgumentList	node		1289048	1					
ANR	1290672	Argument	node		1289048	0					
ANR	1290673	Identifier	node		1289048	0					
ANR	1290674	Argument	code		1289048	1					
ANR	1290675	Identifier	code		1289048	0					
ANR	1290676	ExpressionStatement	xmlFree ( code )	4065:5:140711:140724	1289048	3	True				
ANR	1290677	CallExpression	xmlFree ( code )		1289048	0					
ANR	1290678	Callee	xmlFree		1289048	0					
ANR	1290679	Identifier	xmlFree		1289048	0					
ANR	1290680	ArgumentList	code		1289048	1					
ANR	1290681	Argument	code		1289048	0					
ANR	1290682	Identifier	code		1289048	0					
ANR	1290683	ElseStatement	else		1289048	0					
ANR	1290684	CompoundStatement		184:11:6826:6826	1289048	0					
ANR	1290685	ExpressionStatement	"xmlNodeSetContentLen ( node , BAD_CAST ( str ) , ( int ) new_len )"	4067:5:140744:140799	1289048	0	True				
ANR	1290686	CallExpression	"xmlNodeSetContentLen ( node , BAD_CAST ( str ) , ( int ) new_len )"		1289048	0					
ANR	1290687	Callee	xmlNodeSetContentLen		1289048	0					
ANR	1290688	Identifier	xmlNodeSetContentLen		1289048	0					
ANR	1290689	ArgumentList	node		1289048	1					
ANR	1290690	Argument	node		1289048	0					
ANR	1290691	Identifier	node		1289048	0					
ANR	1290692	Argument	BAD_CAST ( str )		1289048	1					
ANR	1290693	CallExpression	BAD_CAST ( str )		1289048	0					
ANR	1290694	Callee	BAD_CAST		1289048	0					
ANR	1290695	Identifier	BAD_CAST		1289048	0					
ANR	1290696	ArgumentList	str		1289048	1					
ANR	1290697	Argument	str		1289048	0					
ANR	1290698	Identifier	str		1289048	0					
ANR	1290699	Argument	( int ) new_len		1289048	2					
ANR	1290700	CastExpression	( int ) new_len		1289048	0					
ANR	1290701	CastTarget	int		1289048	0					
ANR	1290702	Identifier	new_len		1289048	1					
ANR	1290703	ExpressionStatement	str_efree ( str )	4069:4:140811:140825	1289048	36	True				
ANR	1290704	CallExpression	str_efree ( str )		1289048	0					
ANR	1290705	Callee	str_efree		1289048	0					
ANR	1290706	Identifier	str_efree		1289048	0					
ANR	1290707	ArgumentList	str		1289048	1					
ANR	1290708	Argument	str		1289048	0					
ANR	1290709	Identifier	str		1289048	0					
ANR	1290710	IfStatement	"if ( zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp ) == SUCCESS )"		1289048	1					
ANR	1290711	Condition	"zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp ) == SUCCESS"	4071:7:140839:140921	1289048	0	True				
ANR	1290712	EqualityExpression	"zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1290713	CallExpression	"zend_hash_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1290714	Callee	zend_hash_find		1289048	0					
ANR	1290715	Identifier	zend_hash_find		1289048	0					
ANR	1290716	ArgumentList	prop		1289048	1					
ANR	1290717	Argument	prop		1289048	0					
ANR	1290718	Identifier	prop		1289048	0					
ANR	1290719	Argument	"""faultstring"""		1289048	1					
ANR	1290720	PrimaryExpression	"""faultstring"""		1289048	0					
ANR	1290721	Argument	"sizeof ( ""faultstring"" )"		1289048	2					
ANR	1290722	SizeofExpression	"sizeof ( ""faultstring"" )"		1289048	0					
ANR	1290723	Sizeof	sizeof		1289048	0					
ANR	1290724	PrimaryExpression	"""faultstring"""		1289048	1					
ANR	1290725	Argument	( void * * ) & tmp		1289048	3					
ANR	1290726	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1290727	CastTarget	void * *		1289048	0					
ANR	1290728	UnaryOperationExpression	& tmp		1289048	1					
ANR	1290729	UnaryOperator	&		1289048	0					
ANR	1290730	Identifier	tmp		1289048	1					
ANR	1290731	Identifier	SUCCESS		1289048	1					
ANR	1290732	CompoundStatement		190:4:7019:7085	1289048	1					
ANR	1290733	IdentifierDeclStatement	"xmlNodePtr node = xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL ) ;"	4072:4:140930:140996	1289048	0	True				
ANR	1290734	IdentifierDecl	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL )"		1289048	0					
ANR	1290735	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1290736	Identifier	node		1289048	1					
ANR	1290737	AssignmentExpression	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL )"		1289048	2		=			
ANR	1290738	Identifier	node		1289048	0					
ANR	1290739	CallExpression	"xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL )"		1289048	1					
ANR	1290740	Callee	xmlNewChild		1289048	0					
ANR	1290741	Identifier	xmlNewChild		1289048	0					
ANR	1290742	ArgumentList	param		1289048	1					
ANR	1290743	Argument	param		1289048	0					
ANR	1290744	Identifier	param		1289048	0					
ANR	1290745	Argument	ns		1289048	1					
ANR	1290746	Identifier	ns		1289048	0					
ANR	1290747	Argument	"BAD_CAST ( ""Reason"" )"		1289048	2					
ANR	1290748	CallExpression	"BAD_CAST ( ""Reason"" )"		1289048	0					
ANR	1290749	Callee	BAD_CAST		1289048	0					
ANR	1290750	Identifier	BAD_CAST		1289048	0					
ANR	1290751	ArgumentList	"""Reason"""		1289048	1					
ANR	1290752	Argument	"""Reason"""		1289048	0					
ANR	1290753	PrimaryExpression	"""Reason"""		1289048	0					
ANR	1290754	Argument	NULL		1289048	3					
ANR	1290755	Identifier	NULL		1289048	0					
ANR	1290756	Statement	node	4073:4:141002:141005	1289048	1	True				
ANR	1290757	Statement	=	4073:9:141007:141007	1289048	2	True				
ANR	1290758	Statement	master_to_xml	4073:11:141009:141021	1289048	3	True				
ANR	1290759	Statement	(	4073:24:141022:141022	1289048	4	True				
ANR	1290760	Statement	get_conversion	4073:25:141023:141036	1289048	5	True				
ANR	1290761	Statement	(	4073:39:141037:141037	1289048	6	True				
ANR	1290762	Statement	IS_STRING	4073:40:141038:141046	1289048	7	True				
ANR	1290763	Statement	)	4073:49:141047:141047	1289048	8	True				
ANR	1290764	Statement	","	4073:50:141048:141048	1289048	9	True				
ANR	1290765	Statement	*	4073:52:141050:141050	1289048	10	True				
ANR	1290766	Statement	tmp	4073:53:141051:141053	1289048	11	True				
ANR	1290767	Statement	","	4073:56:141054:141054	1289048	12	True				
ANR	1290768	Statement	SOAP_LITERAL	4073:58:141056:141067	1289048	13	True				
ANR	1290769	Statement	","	4073:70:141068:141068	1289048	14	True				
ANR	1290770	Statement	node	4073:72:141070:141073	1289048	15	True				
ANR	1290771	Statement	TSRMLS_CC	4073:77:141075:141083	1289048	16	True				
ANR	1290772	Statement	)	4073:86:141084:141084	1289048	17	True				
ANR	1290773	ExpressionStatement		4073:87:141085:141085	1289048	18	True				
ANR	1290774	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( ""Text"" ) )"	4074:4:141091:141129	1289048	19	True				
ANR	1290775	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( ""Text"" ) )"		1289048	0					
ANR	1290776	Callee	xmlNodeSetName		1289048	0					
ANR	1290777	Identifier	xmlNodeSetName		1289048	0					
ANR	1290778	ArgumentList	node		1289048	1					
ANR	1290779	Argument	node		1289048	0					
ANR	1290780	Identifier	node		1289048	0					
ANR	1290781	Argument	"BAD_CAST ( ""Text"" )"		1289048	1					
ANR	1290782	CallExpression	"BAD_CAST ( ""Text"" )"		1289048	0					
ANR	1290783	Callee	BAD_CAST		1289048	0					
ANR	1290784	Identifier	BAD_CAST		1289048	0					
ANR	1290785	ArgumentList	"""Text"""		1289048	1					
ANR	1290786	Argument	"""Text"""		1289048	0					
ANR	1290787	PrimaryExpression	"""Text"""		1289048	0					
ANR	1290788	ExpressionStatement	"xmlSetNs ( node , ns )"	4075:4:141135:141153	1289048	20	True				
ANR	1290789	CallExpression	"xmlSetNs ( node , ns )"		1289048	0					
ANR	1290790	Callee	xmlSetNs		1289048	0					
ANR	1290791	Identifier	xmlSetNs		1289048	0					
ANR	1290792	ArgumentList	node		1289048	1					
ANR	1290793	Argument	node		1289048	0					
ANR	1290794	Identifier	node		1289048	0					
ANR	1290795	Argument	ns		1289048	1					
ANR	1290796	Identifier	ns		1289048	0					
ANR	1290797	Statement	detail_name	4077:3:141163:141173	1289048	2	True				
ANR	1290798	Statement	=	4077:15:141175:141175	1289048	3	True				
ANR	1290799	Statement	SOAP_1_2_ENV_NS_PREFIX	4077:17:141177:141198	1289048	4	True				
ANR	1290800	ExpressionStatement	""":Detail"""	4077:39:141199:141208	1289048	5	True				
ANR	1290801	PrimaryExpression	""":Detail"""		1289048	0					
ANR	1290802	IfStatement	if ( fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1 )		1289048	14					
ANR	1290803	Condition	fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1	4079:6:141220:141289	1289048	0	True				
ANR	1290804	AndExpression	fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1		1289048	0		&&			
ANR	1290805	Identifier	fault		1289048	0					
ANR	1290806	AndExpression	fault -> details && zend_hash_num_elements ( fault -> details ) == 1		1289048	1		&&			
ANR	1290807	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290808	Identifier	fault		1289048	0					
ANR	1290809	Identifier	details		1289048	1					
ANR	1290810	EqualityExpression	zend_hash_num_elements ( fault -> details ) == 1		1289048	1		==			
ANR	1290811	CallExpression	zend_hash_num_elements ( fault -> details )		1289048	0					
ANR	1290812	Callee	zend_hash_num_elements		1289048	0					
ANR	1290813	Identifier	zend_hash_num_elements		1289048	0					
ANR	1290814	ArgumentList	fault -> details		1289048	1					
ANR	1290815	Argument	fault -> details		1289048	0					
ANR	1290816	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290817	Identifier	fault		1289048	0					
ANR	1290818	Identifier	details		1289048	1					
ANR	1290819	PrimaryExpression	1		1289048	1					
ANR	1290820	CompoundStatement		201:3:7453:7465	1289048	1					
ANR	1290821	IdentifierDeclStatement	xmlNodePtr node ;	4080:3:141297:141312	1289048	0	True				
ANR	1290822	IdentifierDecl	node		1289048	0					
ANR	1290823	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1290824	Identifier	node		1289048	1					
ANR	1290825	IdentifierDeclStatement	zval * detail = NULL ;	4081:3:141317:141336	1289048	1	True				
ANR	1290826	IdentifierDecl	* detail = NULL		1289048	0					
ANR	1290827	IdentifierDeclType	zval *		1289048	0					
ANR	1290828	Identifier	detail		1289048	1					
ANR	1290829	AssignmentExpression	* detail = NULL		1289048	2		=			
ANR	1290830	Identifier	NULL		1289048	0					
ANR	1290831	Identifier	NULL		1289048	1					
ANR	1290832	IdentifierDeclStatement	sdlParamPtr sparam ;	4082:3:141341:141359	1289048	2	True				
ANR	1290833	IdentifierDecl	sparam		1289048	0					
ANR	1290834	IdentifierDeclType	sdlParamPtr		1289048	0					
ANR	1290835	Identifier	sparam		1289048	1					
ANR	1290836	IdentifierDeclStatement	xmlNodePtr x ;	4083:3:141364:141376	1289048	3	True				
ANR	1290837	IdentifierDecl	x		1289048	0					
ANR	1290838	IdentifierDeclType	xmlNodePtr		1289048	0					
ANR	1290839	Identifier	x		1289048	1					
ANR	1290840	IfStatement	"if ( zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) != IS_NULL )"		1289048	4					
ANR	1290841	Condition	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) != IS_NULL"	4085:7:141386:141494	1289048	0	True				
ANR	1290842	AndExpression	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) != IS_NULL"		1289048	0		&&			
ANR	1290843	EqualityExpression	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1290844	CallExpression	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1290845	Callee	zend_hash_find		1289048	0					
ANR	1290846	Identifier	zend_hash_find		1289048	0					
ANR	1290847	ArgumentList	prop		1289048	1					
ANR	1290848	Argument	prop		1289048	0					
ANR	1290849	Identifier	prop		1289048	0					
ANR	1290850	Argument	"""detail"""		1289048	1					
ANR	1290851	PrimaryExpression	"""detail"""		1289048	0					
ANR	1290852	Argument	"sizeof ( ""detail"" )"		1289048	2					
ANR	1290853	SizeofExpression	"sizeof ( ""detail"" )"		1289048	0					
ANR	1290854	Sizeof	sizeof		1289048	0					
ANR	1290855	PrimaryExpression	"""detail"""		1289048	1					
ANR	1290856	Argument	( void * * ) & tmp		1289048	3					
ANR	1290857	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1290858	CastTarget	void * *		1289048	0					
ANR	1290859	UnaryOperationExpression	& tmp		1289048	1					
ANR	1290860	UnaryOperator	&		1289048	0					
ANR	1290861	Identifier	tmp		1289048	1					
ANR	1290862	Identifier	SUCCESS		1289048	1					
ANR	1290863	EqualityExpression	Z_TYPE_PP ( tmp ) != IS_NULL		1289048	1		!=			
ANR	1290864	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1290865	Callee	Z_TYPE_PP		1289048	0					
ANR	1290866	Identifier	Z_TYPE_PP		1289048	0					
ANR	1290867	ArgumentList	tmp		1289048	1					
ANR	1290868	Argument	tmp		1289048	0					
ANR	1290869	Identifier	tmp		1289048	0					
ANR	1290870	Identifier	IS_NULL		1289048	1					
ANR	1290871	CompoundStatement		204:34:7586:7586	1289048	1					
ANR	1290872	ExpressionStatement	detail = * tmp	4087:4:141503:141516	1289048	0	True				
ANR	1290873	AssignmentExpression	detail = * tmp		1289048	0		=			
ANR	1290874	Identifier	detail		1289048	0					
ANR	1290875	UnaryOperationExpression	* tmp		1289048	1					
ANR	1290876	UnaryOperator	*		1289048	0					
ANR	1290877	Identifier	tmp		1289048	1					
ANR	1290878	ExpressionStatement	"node = xmlNewNode ( NULL , BAD_CAST ( detail_name ) )"	4089:3:141526:141572	1289048	5	True				
ANR	1290879	AssignmentExpression	"node = xmlNewNode ( NULL , BAD_CAST ( detail_name ) )"		1289048	0		=			
ANR	1290880	Identifier	node		1289048	0					
ANR	1290881	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( detail_name ) )"		1289048	1					
ANR	1290882	Callee	xmlNewNode		1289048	0					
ANR	1290883	Identifier	xmlNewNode		1289048	0					
ANR	1290884	ArgumentList	NULL		1289048	1					
ANR	1290885	Argument	NULL		1289048	0					
ANR	1290886	Identifier	NULL		1289048	0					
ANR	1290887	Argument	BAD_CAST ( detail_name )		1289048	1					
ANR	1290888	CallExpression	BAD_CAST ( detail_name )		1289048	0					
ANR	1290889	Callee	BAD_CAST		1289048	0					
ANR	1290890	Identifier	BAD_CAST		1289048	0					
ANR	1290891	ArgumentList	detail_name		1289048	1					
ANR	1290892	Argument	detail_name		1289048	0					
ANR	1290893	Identifier	detail_name		1289048	0					
ANR	1290894	ExpressionStatement	"xmlAddChild ( param , node )"	4090:3:141577:141601	1289048	6	True				
ANR	1290895	CallExpression	"xmlAddChild ( param , node )"		1289048	0					
ANR	1290896	Callee	xmlAddChild		1289048	0					
ANR	1290897	Identifier	xmlAddChild		1289048	0					
ANR	1290898	ArgumentList	param		1289048	1					
ANR	1290899	Argument	param		1289048	0					
ANR	1290900	Identifier	param		1289048	0					
ANR	1290901	Argument	node		1289048	1					
ANR	1290902	Identifier	node		1289048	0					
ANR	1290903	ExpressionStatement	zend_hash_internal_pointer_reset ( fault -> details )	4092:3:141607:141655	1289048	7	True				
ANR	1290904	CallExpression	zend_hash_internal_pointer_reset ( fault -> details )		1289048	0					
ANR	1290905	Callee	zend_hash_internal_pointer_reset		1289048	0					
ANR	1290906	Identifier	zend_hash_internal_pointer_reset		1289048	0					
ANR	1290907	ArgumentList	fault -> details		1289048	1					
ANR	1290908	Argument	fault -> details		1289048	0					
ANR	1290909	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290910	Identifier	fault		1289048	0					
ANR	1290911	Identifier	details		1289048	1					
ANR	1290912	ExpressionStatement	"zend_hash_get_current_data ( fault -> details , ( void * * ) & sparam )"	4093:3:141660:141719	1289048	8	True				
ANR	1290913	CallExpression	"zend_hash_get_current_data ( fault -> details , ( void * * ) & sparam )"		1289048	0					
ANR	1290914	Callee	zend_hash_get_current_data		1289048	0					
ANR	1290915	Identifier	zend_hash_get_current_data		1289048	0					
ANR	1290916	ArgumentList	fault -> details		1289048	1					
ANR	1290917	Argument	fault -> details		1289048	0					
ANR	1290918	PtrMemberAccess	fault -> details		1289048	0					
ANR	1290919	Identifier	fault		1289048	0					
ANR	1290920	Identifier	details		1289048	1					
ANR	1290921	Argument	( void * * ) & sparam		1289048	1					
ANR	1290922	CastExpression	( void * * ) & sparam		1289048	0					
ANR	1290923	CastTarget	void * *		1289048	0					
ANR	1290924	UnaryOperationExpression	& sparam		1289048	1					
ANR	1290925	UnaryOperator	&		1289048	0					
ANR	1290926	Identifier	sparam		1289048	1					
ANR	1290927	ExpressionStatement	sparam = * ( sdlParamPtr * ) sparam	4094:3:141724:141754	1289048	9	True				
ANR	1290928	AssignmentExpression	sparam = * ( sdlParamPtr * ) sparam		1289048	0		=			
ANR	1290929	Identifier	sparam		1289048	0					
ANR	1290930	UnaryOperationExpression	* ( sdlParamPtr * ) sparam		1289048	1					
ANR	1290931	UnaryOperator	*		1289048	0					
ANR	1290932	CastExpression	( sdlParamPtr * ) sparam		1289048	1					
ANR	1290933	CastTarget	sdlParamPtr *		1289048	0					
ANR	1290934	Identifier	sparam		1289048	1					
ANR	1290935	IfStatement	"if ( detail && Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp ) == SUCCESS )"		1289048	10					
ANR	1290936	Condition	"detail && Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp ) == SUCCESS"	4096:7:141764:142021	1289048	0	True				
ANR	1290937	AndExpression	"detail && Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1289048	0		&&			
ANR	1290938	Identifier	detail		1289048	0					
ANR	1290939	AndExpression	"Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1289048	1		&&			
ANR	1290940	EqualityExpression	Z_TYPE_P ( detail ) == IS_OBJECT		1289048	0		==			
ANR	1290941	CallExpression	Z_TYPE_P ( detail )		1289048	0					
ANR	1290942	Callee	Z_TYPE_P		1289048	0					
ANR	1290943	Identifier	Z_TYPE_P		1289048	0					
ANR	1290944	ArgumentList	detail		1289048	1					
ANR	1290945	Argument	detail		1289048	0					
ANR	1290946	Identifier	detail		1289048	0					
ANR	1290947	Identifier	IS_OBJECT		1289048	1					
ANR	1290948	AndExpression	"sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1289048	1		&&			
ANR	1290949	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1290950	Identifier	sparam		1289048	0					
ANR	1290951	Identifier	element		1289048	1					
ANR	1290952	AndExpression	"zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1289048	1		&&			
ANR	1290953	EqualityExpression	zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1		1289048	0		==			
ANR	1290954	CallExpression	zend_hash_num_elements ( Z_OBJPROP_P ( detail ) )		1289048	0					
ANR	1290955	Callee	zend_hash_num_elements		1289048	0					
ANR	1290956	Identifier	zend_hash_num_elements		1289048	0					
ANR	1290957	ArgumentList	Z_OBJPROP_P ( detail )		1289048	1					
ANR	1290958	Argument	Z_OBJPROP_P ( detail )		1289048	0					
ANR	1290959	CallExpression	Z_OBJPROP_P ( detail )		1289048	0					
ANR	1290960	Callee	Z_OBJPROP_P		1289048	0					
ANR	1290961	Identifier	Z_OBJPROP_P		1289048	0					
ANR	1290962	ArgumentList	detail		1289048	1					
ANR	1290963	Argument	detail		1289048	0					
ANR	1290964	Identifier	detail		1289048	0					
ANR	1290965	PrimaryExpression	1		1289048	1					
ANR	1290966	EqualityExpression	"zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp ) == SUCCESS"		1289048	1		==			
ANR	1290967	CallExpression	"zend_hash_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) + 1 , ( void * * ) & tmp )"		1289048	0					
ANR	1290968	Callee	zend_hash_find		1289048	0					
ANR	1290969	Identifier	zend_hash_find		1289048	0					
ANR	1290970	ArgumentList	Z_OBJPROP_P ( detail )		1289048	1					
ANR	1290971	Argument	Z_OBJPROP_P ( detail )		1289048	0					
ANR	1290972	CallExpression	Z_OBJPROP_P ( detail )		1289048	0					
ANR	1290973	Callee	Z_OBJPROP_P		1289048	0					
ANR	1290974	Identifier	Z_OBJPROP_P		1289048	0					
ANR	1290975	ArgumentList	detail		1289048	1					
ANR	1290976	Argument	detail		1289048	0					
ANR	1290977	Identifier	detail		1289048	0					
ANR	1290978	Argument	sparam -> element -> name		1289048	1					
ANR	1290979	PtrMemberAccess	sparam -> element -> name		1289048	0					
ANR	1290980	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1290981	Identifier	sparam		1289048	0					
ANR	1290982	Identifier	element		1289048	1					
ANR	1290983	Identifier	name		1289048	1					
ANR	1290984	Argument	strlen ( sparam -> element -> name ) + 1		1289048	2					
ANR	1290985	AdditiveExpression	strlen ( sparam -> element -> name ) + 1		1289048	0		+			
ANR	1290986	CallExpression	strlen ( sparam -> element -> name )		1289048	0					
ANR	1290987	Callee	strlen		1289048	0					
ANR	1290988	Identifier	strlen		1289048	0					
ANR	1290989	ArgumentList	sparam -> element -> name		1289048	1					
ANR	1290990	Argument	sparam -> element -> name		1289048	0					
ANR	1290991	PtrMemberAccess	sparam -> element -> name		1289048	0					
ANR	1290992	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1290993	Identifier	sparam		1289048	0					
ANR	1290994	Identifier	element		1289048	1					
ANR	1290995	Identifier	name		1289048	1					
ANR	1290996	PrimaryExpression	1		1289048	1					
ANR	1290997	Argument	( void * * ) & tmp		1289048	3					
ANR	1290998	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1290999	CastTarget	void * *		1289048	0					
ANR	1291000	UnaryOperationExpression	& tmp		1289048	1					
ANR	1291001	UnaryOperator	&		1289048	0					
ANR	1291002	Identifier	tmp		1289048	1					
ANR	1291003	Identifier	SUCCESS		1289048	1					
ANR	1291004	CompoundStatement		218:125:8113:8113	1289048	1					
ANR	1291005	ExpressionStatement	detail = * tmp	4101:4:142030:142043	1289048	0	True				
ANR	1291006	AssignmentExpression	detail = * tmp		1289048	0		=			
ANR	1291007	Identifier	detail		1289048	0					
ANR	1291008	UnaryOperationExpression	* tmp		1289048	1					
ANR	1291009	UnaryOperator	*		1289048	0					
ANR	1291010	Identifier	tmp		1289048	1					
ANR	1291011	Statement	x	4104:3:142054:142054	1289048	11	True				
ANR	1291012	Statement	=	4104:5:142056:142056	1289048	12	True				
ANR	1291013	Statement	serialize_parameter	4104:7:142058:142076	1289048	13	True				
ANR	1291014	Statement	(	4104:26:142077:142077	1289048	14	True				
ANR	1291015	Statement	sparam	4104:27:142078:142083	1289048	15	True				
ANR	1291016	Statement	","	4104:33:142084:142084	1289048	16	True				
ANR	1291017	Statement	detail	4104:35:142086:142091	1289048	17	True				
ANR	1291018	Statement	","	4104:41:142092:142092	1289048	18	True				
ANR	1291019	Statement	1	4104:43:142094:142094	1289048	19	True				
ANR	1291020	Statement	","	4104:44:142095:142095	1289048	20	True				
ANR	1291021	Statement	NULL	4104:46:142097:142100	1289048	21	True				
ANR	1291022	Statement	","	4104:50:142101:142101	1289048	22	True				
ANR	1291023	Statement	use	4104:52:142103:142105	1289048	23	True				
ANR	1291024	Statement	","	4104:55:142106:142106	1289048	24	True				
ANR	1291025	Statement	node	4104:57:142108:142111	1289048	25	True				
ANR	1291026	Statement	TSRMLS_CC	4104:62:142113:142121	1289048	26	True				
ANR	1291027	Statement	)	4104:71:142122:142122	1289048	27	True				
ANR	1291028	ExpressionStatement		4104:72:142123:142123	1289048	28	True				
ANR	1291029	IfStatement	if ( function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes )		1289048	29					
ANR	1291030	Condition	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes	4106:7:142133:142263	1289048	0	True				
ANR	1291031	AndExpression	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes		1289048	0		&&			
ANR	1291032	Identifier	function		1289048	0					
ANR	1291033	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes		1289048	1		&&			
ANR	1291034	PtrMemberAccess	function -> binding		1289048	0					
ANR	1291035	Identifier	function		1289048	0					
ANR	1291036	Identifier	binding		1289048	1					
ANR	1291037	AndExpression	function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes		1289048	1		&&			
ANR	1291038	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1289048	0		==			
ANR	1291039	PtrMemberAccess	function -> binding -> bindingType		1289048	0					
ANR	1291040	PtrMemberAccess	function -> binding		1289048	0					
ANR	1291041	Identifier	function		1289048	0					
ANR	1291042	Identifier	binding		1289048	1					
ANR	1291043	Identifier	bindingType		1289048	1					
ANR	1291044	Identifier	BINDING_SOAP		1289048	1					
ANR	1291045	PtrMemberAccess	function -> bindingAttributes		1289048	1					
ANR	1291046	Identifier	function		1289048	0					
ANR	1291047	Identifier	bindingAttributes		1289048	1					
ANR	1291048	CompoundStatement		228:4:8361:8447	1289048	1					
ANR	1291049	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	4110:4:142272:142358	1289048	0	True				
ANR	1291050	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1289048	0					
ANR	1291051	IdentifierDeclType	sdlSoapBindingFunctionPtr		1289048	0					
ANR	1291052	Identifier	fnb		1289048	1					
ANR	1291053	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1289048	2		=			
ANR	1291054	Identifier	fnb		1289048	0					
ANR	1291055	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1289048	1					
ANR	1291056	CastTarget	sdlSoapBindingFunctionPtr		1289048	0					
ANR	1291057	PtrMemberAccess	function -> bindingAttributes		1289048	1					
ANR	1291058	Identifier	function		1289048	0					
ANR	1291059	Identifier	bindingAttributes		1289048	1					
ANR	1291060	IfStatement	if ( fnb -> style == SOAP_RPC && ! sparam -> element )		1289048	1					
ANR	1291061	Condition	fnb -> style == SOAP_RPC && ! sparam -> element	4111:8:142368:142409	1289048	0	True				
ANR	1291062	AndExpression	fnb -> style == SOAP_RPC && ! sparam -> element		1289048	0		&&			
ANR	1291063	EqualityExpression	fnb -> style == SOAP_RPC		1289048	0		==			
ANR	1291064	PtrMemberAccess	fnb -> style		1289048	0					
ANR	1291065	Identifier	fnb		1289048	0					
ANR	1291066	Identifier	style		1289048	1					
ANR	1291067	Identifier	SOAP_RPC		1289048	1					
ANR	1291068	UnaryOperationExpression	! sparam -> element		1289048	1					
ANR	1291069	UnaryOperator	!		1289048	0					
ANR	1291070	PtrMemberAccess	sparam -> element		1289048	1					
ANR	1291071	Identifier	sparam		1289048	0					
ANR	1291072	Identifier	element		1289048	1					
ANR	1291073	CompoundStatement		229:52:8501:8501	1289048	1					
ANR	1291074	IfStatement	if ( fault -> bindingAttributes )		1289048	0					
ANR	1291075	Condition	fault -> bindingAttributes	4112:10:142424:142447	1289048	0	True				
ANR	1291076	PtrMemberAccess	fault -> bindingAttributes		1289048	0					
ANR	1291077	Identifier	fault		1289048	0					
ANR	1291078	Identifier	bindingAttributes		1289048	1					
ANR	1291079	CompoundStatement		231:6:8547:8639	1289048	1					
ANR	1291080	IdentifierDeclStatement	sdlSoapBindingFunctionFaultPtr fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes ;	4113:6:142458:142550	1289048	0	True				
ANR	1291081	IdentifierDecl	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	0					
ANR	1291082	IdentifierDeclType	sdlSoapBindingFunctionFaultPtr		1289048	0					
ANR	1291083	Identifier	fb		1289048	1					
ANR	1291084	AssignmentExpression	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	2		=			
ANR	1291085	Identifier	fb		1289048	0					
ANR	1291086	CastExpression	( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		1289048	1					
ANR	1291087	CastTarget	sdlSoapBindingFunctionFaultPtr		1289048	0					
ANR	1291088	PtrMemberAccess	fault -> bindingAttributes		1289048	1					
ANR	1291089	Identifier	fault		1289048	0					
ANR	1291090	Identifier	bindingAttributes		1289048	1					
ANR	1291091	IfStatement	if ( fb -> ns )		1289048	1					
ANR	1291092	Condition	fb -> ns	4114:10:142562:142567	1289048	0	True				
ANR	1291093	PtrMemberAccess	fb -> ns		1289048	0					
ANR	1291094	Identifier	fb		1289048	0					
ANR	1291095	Identifier	ns		1289048	1					
ANR	1291096	CompoundStatement		233:7:8668:8706	1289048	1					
ANR	1291097	IdentifierDeclStatement	"xmlNsPtr ns = encode_add_ns ( x , fb -> ns ) ;"	4115:7:142579:142617	1289048	0	True				
ANR	1291098	IdentifierDecl	"ns = encode_add_ns ( x , fb -> ns )"		1289048	0					
ANR	1291099	IdentifierDeclType	xmlNsPtr		1289048	0					
ANR	1291100	Identifier	ns		1289048	1					
ANR	1291101	AssignmentExpression	"ns = encode_add_ns ( x , fb -> ns )"		1289048	2		=			
ANR	1291102	Identifier	ns		1289048	0					
ANR	1291103	CallExpression	"encode_add_ns ( x , fb -> ns )"		1289048	1					
ANR	1291104	Callee	encode_add_ns		1289048	0					
ANR	1291105	Identifier	encode_add_ns		1289048	0					
ANR	1291106	ArgumentList	x		1289048	1					
ANR	1291107	Argument	x		1289048	0					
ANR	1291108	Identifier	x		1289048	0					
ANR	1291109	Argument	fb -> ns		1289048	1					
ANR	1291110	PtrMemberAccess	fb -> ns		1289048	0					
ANR	1291111	Identifier	fb		1289048	0					
ANR	1291112	Identifier	ns		1289048	1					
ANR	1291113	ExpressionStatement	"xmlSetNs ( x , ns )"	4116:7:142626:142641	1289048	1	True				
ANR	1291114	CallExpression	"xmlSetNs ( x , ns )"		1289048	0					
ANR	1291115	Callee	xmlSetNs		1289048	0					
ANR	1291116	Identifier	xmlSetNs		1289048	0					
ANR	1291117	ArgumentList	x		1289048	1					
ANR	1291118	Argument	x		1289048	0					
ANR	1291119	Identifier	x		1289048	0					
ANR	1291120	Argument	ns		1289048	1					
ANR	1291121	Identifier	ns		1289048	0					
ANR	1291122	ElseStatement	else		1289048	0					
ANR	1291123	CompoundStatement		237:11:8758:8758	1289048	0					
ANR	1291124	IfStatement	if ( sparam -> element )		1289048	0					
ANR	1291125	Condition	sparam -> element	4120:9:142680:142694	1289048	0	True				
ANR	1291126	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1291127	Identifier	sparam		1289048	0					
ANR	1291128	Identifier	element		1289048	1					
ANR	1291129	CompoundStatement		238:26:8786:8786	1289048	1					
ANR	1291130	ExpressionStatement	"ns = encode_add_ns ( x , sparam -> element -> namens )"	4121:6:142705:142751	1289048	0	True				
ANR	1291131	AssignmentExpression	"ns = encode_add_ns ( x , sparam -> element -> namens )"		1289048	0		=			
ANR	1291132	Identifier	ns		1289048	0					
ANR	1291133	CallExpression	"encode_add_ns ( x , sparam -> element -> namens )"		1289048	1					
ANR	1291134	Callee	encode_add_ns		1289048	0					
ANR	1291135	Identifier	encode_add_ns		1289048	0					
ANR	1291136	ArgumentList	x		1289048	1					
ANR	1291137	Argument	x		1289048	0					
ANR	1291138	Identifier	x		1289048	0					
ANR	1291139	Argument	sparam -> element -> namens		1289048	1					
ANR	1291140	PtrMemberAccess	sparam -> element -> namens		1289048	0					
ANR	1291141	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1291142	Identifier	sparam		1289048	0					
ANR	1291143	Identifier	element		1289048	1					
ANR	1291144	Identifier	namens		1289048	1					
ANR	1291145	ExpressionStatement	"xmlNodeSetName ( x , BAD_CAST ( sparam -> element -> name ) )"	4122:6:142759:142809	1289048	1	True				
ANR	1291146	CallExpression	"xmlNodeSetName ( x , BAD_CAST ( sparam -> element -> name ) )"		1289048	0					
ANR	1291147	Callee	xmlNodeSetName		1289048	0					
ANR	1291148	Identifier	xmlNodeSetName		1289048	0					
ANR	1291149	ArgumentList	x		1289048	1					
ANR	1291150	Argument	x		1289048	0					
ANR	1291151	Identifier	x		1289048	0					
ANR	1291152	Argument	BAD_CAST ( sparam -> element -> name )		1289048	1					
ANR	1291153	CallExpression	BAD_CAST ( sparam -> element -> name )		1289048	0					
ANR	1291154	Callee	BAD_CAST		1289048	0					
ANR	1291155	Identifier	BAD_CAST		1289048	0					
ANR	1291156	ArgumentList	sparam -> element -> name		1289048	1					
ANR	1291157	Argument	sparam -> element -> name		1289048	0					
ANR	1291158	PtrMemberAccess	sparam -> element -> name		1289048	0					
ANR	1291159	PtrMemberAccess	sparam -> element		1289048	0					
ANR	1291160	Identifier	sparam		1289048	0					
ANR	1291161	Identifier	element		1289048	1					
ANR	1291162	Identifier	name		1289048	1					
ANR	1291163	ExpressionStatement	"xmlSetNs ( x , ns )"	4123:6:142817:142832	1289048	2	True				
ANR	1291164	CallExpression	"xmlSetNs ( x , ns )"		1289048	0					
ANR	1291165	Callee	xmlSetNs		1289048	0					
ANR	1291166	Identifier	xmlSetNs		1289048	0					
ANR	1291167	ArgumentList	x		1289048	1					
ANR	1291168	Argument	x		1289048	0					
ANR	1291169	Identifier	x		1289048	0					
ANR	1291170	Argument	ns		1289048	1					
ANR	1291171	Identifier	ns		1289048	0					
ANR	1291172	IfStatement	if ( use == SOAP_ENCODED && version == SOAP_1_2 )		1289048	30					
ANR	1291173	Condition	use == SOAP_ENCODED && version == SOAP_1_2	4127:7:142859:142900	1289048	0	True				
ANR	1291174	AndExpression	use == SOAP_ENCODED && version == SOAP_1_2		1289048	0		&&			
ANR	1291175	EqualityExpression	use == SOAP_ENCODED		1289048	0		==			
ANR	1291176	Identifier	use		1289048	0					
ANR	1291177	Identifier	SOAP_ENCODED		1289048	1					
ANR	1291178	EqualityExpression	version == SOAP_1_2		1289048	1		==			
ANR	1291179	Identifier	version		1289048	0					
ANR	1291180	Identifier	SOAP_1_2		1289048	1					
ANR	1291181	CompoundStatement		245:51:8992:8992	1289048	1					
ANR	1291182	ExpressionStatement	"xmlSetNsProp ( x , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"	4128:4:142909:142999	1289048	0	True				
ANR	1291183	CallExpression	"xmlSetNsProp ( x , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"		1289048	0					
ANR	1291184	Callee	xmlSetNsProp		1289048	0					
ANR	1291185	Identifier	xmlSetNsProp		1289048	0					
ANR	1291186	ArgumentList	x		1289048	1					
ANR	1291187	Argument	x		1289048	0					
ANR	1291188	Identifier	x		1289048	0					
ANR	1291189	Argument	envelope -> ns		1289048	1					
ANR	1291190	PtrMemberAccess	envelope -> ns		1289048	0					
ANR	1291191	Identifier	envelope		1289048	0					
ANR	1291192	Identifier	ns		1289048	1					
ANR	1291193	Argument	"BAD_CAST ( ""encodingStyle"" )"		1289048	2					
ANR	1291194	CallExpression	"BAD_CAST ( ""encodingStyle"" )"		1289048	0					
ANR	1291195	Callee	BAD_CAST		1289048	0					
ANR	1291196	Identifier	BAD_CAST		1289048	0					
ANR	1291197	ArgumentList	"""encodingStyle"""		1289048	1					
ANR	1291198	Argument	"""encodingStyle"""		1289048	0					
ANR	1291199	PrimaryExpression	"""encodingStyle"""		1289048	0					
ANR	1291200	Argument	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		1289048	3					
ANR	1291201	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		1289048	0					
ANR	1291202	Callee	BAD_CAST		1289048	0					
ANR	1291203	Identifier	BAD_CAST		1289048	0					
ANR	1291204	ArgumentList	SOAP_1_2_ENC_NAMESPACE		1289048	1					
ANR	1291205	Argument	SOAP_1_2_ENC_NAMESPACE		1289048	0					
ANR	1291206	Identifier	SOAP_1_2_ENC_NAMESPACE		1289048	0					
ANR	1291207	ElseStatement	else		1289048	0					
ANR	1291208	IfStatement	"if ( zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) != IS_NULL )"		1289048	0					
ANR	1291209	Condition	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) != IS_NULL"	4130:13:143019:143126	1289048	0	True				
ANR	1291210	AndExpression	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS && Z_TYPE_PP ( tmp ) != IS_NULL"		1289048	0		&&			
ANR	1291211	EqualityExpression	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp ) == SUCCESS"		1289048	0		==			
ANR	1291212	CallExpression	"zend_hash_find ( prop , ""detail"" , sizeof ( ""detail"" ) , ( void * * ) & tmp )"		1289048	0					
ANR	1291213	Callee	zend_hash_find		1289048	0					
ANR	1291214	Identifier	zend_hash_find		1289048	0					
ANR	1291215	ArgumentList	prop		1289048	1					
ANR	1291216	Argument	prop		1289048	0					
ANR	1291217	Identifier	prop		1289048	0					
ANR	1291218	Argument	"""detail"""		1289048	1					
ANR	1291219	PrimaryExpression	"""detail"""		1289048	0					
ANR	1291220	Argument	"sizeof ( ""detail"" )"		1289048	2					
ANR	1291221	SizeofExpression	"sizeof ( ""detail"" )"		1289048	0					
ANR	1291222	Sizeof	sizeof		1289048	0					
ANR	1291223	PrimaryExpression	"""detail"""		1289048	1					
ANR	1291224	Argument	( void * * ) & tmp		1289048	3					
ANR	1291225	CastExpression	( void * * ) & tmp		1289048	0					
ANR	1291226	CastTarget	void * *		1289048	0					
ANR	1291227	UnaryOperationExpression	& tmp		1289048	1					
ANR	1291228	UnaryOperator	&		1289048	0					
ANR	1291229	Identifier	tmp		1289048	1					
ANR	1291230	Identifier	SUCCESS		1289048	1					
ANR	1291231	EqualityExpression	Z_TYPE_PP ( tmp ) != IS_NULL		1289048	1		!=			
ANR	1291232	CallExpression	Z_TYPE_PP ( tmp )		1289048	0					
ANR	1291233	Callee	Z_TYPE_PP		1289048	0					
ANR	1291234	Identifier	Z_TYPE_PP		1289048	0					
ANR	1291235	ArgumentList	tmp		1289048	1					
ANR	1291236	Argument	tmp		1289048	0					
ANR	1291237	Identifier	tmp		1289048	0					
ANR	1291238	Identifier	IS_NULL		1289048	1					
ANR	1291239	CompoundStatement		249:33:9218:9218	1289048	1					
ANR	1291240	Statement	serialize_zval	4132:3:143134:143147	1289048	0	True				
ANR	1291241	Statement	(	4132:17:143148:143148	1289048	1	True				
ANR	1291242	Statement	*	4132:18:143149:143149	1289048	2	True				
ANR	1291243	Statement	tmp	4132:19:143150:143152	1289048	3	True				
ANR	1291244	Statement	","	4132:22:143153:143153	1289048	4	True				
ANR	1291245	Statement	NULL	4132:24:143155:143158	1289048	5	True				
ANR	1291246	Statement	","	4132:28:143159:143159	1289048	6	True				
ANR	1291247	Statement	detail_name	4132:30:143161:143171	1289048	7	True				
ANR	1291248	Statement	","	4132:41:143172:143172	1289048	8	True				
ANR	1291249	Statement	use	4132:43:143174:143176	1289048	9	True				
ANR	1291250	Statement	","	4132:46:143177:143177	1289048	10	True				
ANR	1291251	Statement	param	4132:48:143179:143183	1289048	11	True				
ANR	1291252	Statement	TSRMLS_CC	4132:54:143185:143193	1289048	12	True				
ANR	1291253	Statement	)	4132:63:143194:143194	1289048	13	True				
ANR	1291254	ExpressionStatement		4132:64:143195:143195	1289048	14	True				
ANR	1291255	ReturnType	static xmlDocPtr		1289048	1					
ANR	1291256	Identifier	serialize_response_call		1289048	2					
ANR	1291257	ParameterList	"sdlFunctionPtr function , char * function_name , char * uri , zval * ret , soapHeader * headers , int version TSRMLS_DC"		1289048	3					
ANR	1291258	Parameter	sdlFunctionPtr function	3882:41:133798:133820	1289048	0	True				
ANR	1291259	ParameterType	sdlFunctionPtr		1289048	0					
ANR	1291260	Identifier	function		1289048	1					
ANR	1291261	Parameter	char * function_name	3882:66:133823:133841	1289048	1	True				
ANR	1291262	ParameterType	char *		1289048	0					
ANR	1291263	Identifier	function_name		1289048	1					
ANR	1291264	Parameter	char * uri	3882:87:133844:133852	1289048	2	True				
ANR	1291265	ParameterType	char *		1289048	0					
ANR	1291266	Identifier	uri		1289048	1					
ANR	1291267	Parameter	zval * ret	3882:98:133855:133863	1289048	3	True				
ANR	1291268	ParameterType	zval *		1289048	0					
ANR	1291269	Identifier	ret		1289048	1					
ANR	1291270	Parameter	soapHeader * headers	3882:109:133866:133884	1289048	4	True				
ANR	1291271	ParameterType	soapHeader *		1289048	0					
ANR	1291272	Identifier	headers		1289048	1					
ANR	1291273	Parameter	int version TSRMLS_DC	3882:130:133887:133907	1289048	5	True				
ANR	1291274	ParameterType	int version		1289048	0					
ANR	1291275	Identifier	TSRMLS_DC		1289048	1					
ANR	1291276	CFGEntryNode	ENTRY		1289048		True				
ANR	1291277	CFGExitNode	EXIT		1289048		True				
ANR	1291278	Symbol	ht		1289048						
ANR	1291279	Symbol	headers -> hdr -> headerfaults		1289048						
ANR	1291280	Symbol	* * sparam		1289048						
ANR	1291281	Symbol	zend_hash_find		1289048						
ANR	1291282	Symbol	* ( sdlFaultPtr * ) fault		1289048						
ANR	1291283	Symbol	( * hdr ) -> encode		1289048						
ANR	1291284	Symbol	tmp		1289048						
ANR	1291285	Symbol	sparam -> element		1289048						
ANR	1291286	Symbol	function -> binding		1289048						
ANR	1291287	Symbol	* doc		1289048						
ANR	1291288	Symbol	hdr_use		1289048						
ANR	1291289	Symbol	& tmp_fault		1289048						
ANR	1291290	Symbol	* ( sdlParamPtr * ) sparam		1289048						
ANR	1291291	Symbol	nsptr -> prefix		1289048						
ANR	1291292	Symbol	xmlNewChild		1289048						
ANR	1291293	Symbol	version		1289048						
ANR	1291294	Symbol	SOAP_1_2_ENV_NAMESPACE		1289048						
ANR	1291295	Symbol	Z_STRLEN_PP		1289048						
ANR	1291296	Symbol	str		1289048						
ANR	1291297	Symbol	node		1289048						
ANR	1291298	Symbol	envelope		1289048						
ANR	1291299	Symbol	sparam -> element -> namens		1289048						
ANR	1291300	Symbol	* nsptr		1289048						
ANR	1291301	Symbol	doc		1289048						
ANR	1291302	Symbol	xmlCharStrdup		1289048						
ANR	1291303	Symbol	& tmp		1289048						
ANR	1291304	Symbol	& fault		1289048						
ANR	1291305	Symbol	detail		1289048						
ANR	1291306	Symbol	fb -> ns		1289048						
ANR	1291307	Symbol	xmlBuildQName		1289048						
ANR	1291308	Symbol	* tmp		1289048						
ANR	1291309	Symbol	& key		1289048						
ANR	1291310	Symbol	fault -> bindingAttributes		1289048						
ANR	1291311	Symbol	* * hdr		1289048						
ANR	1291312	Symbol	nsptr		1289048						
ANR	1291313	Symbol	BINDING_SOAP		1289048						
ANR	1291314	Symbol	hdr_name		1289048						
ANR	1291315	Symbol	key . len		1289048						
ANR	1291316	Symbol	prop		1289048						
ANR	1291317	Symbol	* headers		1289048						
ANR	1291318	Symbol	Z_STRVAL_PP		1289048						
ANR	1291319	Symbol	envelope -> ns		1289048						
ANR	1291320	Symbol	( * hdr ) -> use		1289048						
ANR	1291321	Symbol	key		1289048						
ANR	1291322	Symbol	* hdr		1289048						
ANR	1291323	Symbol	* * headers		1289048						
ANR	1291324	Symbol	* * function		1289048						
ANR	1291325	Symbol	* fb		1289048						
ANR	1291326	Symbol	SOAP_1_1		1289048						
ANR	1291327	Symbol	SUCCESS		1289048						
ANR	1291328	Symbol	zend_hash_num_elements		1289048						
ANR	1291329	Symbol	* sparam -> element		1289048						
ANR	1291330	Symbol	sparam -> element -> name		1289048						
ANR	1291331	Symbol	xmlNewNode		1289048						
ANR	1291332	Symbol	function -> faults		1289048						
ANR	1291333	Symbol	uri		1289048						
ANR	1291334	Symbol	sparam		1289048						
ANR	1291335	Symbol	detail_name		1289048						
ANR	1291336	Symbol	hdr_ret		1289048						
ANR	1291337	Symbol	x		1289048						
ANR	1291338	Symbol	tmp_fault		1289048						
ANR	1291339	Symbol	* envelope		1289048						
ANR	1291340	Symbol	SOAP_1_2		1289048						
ANR	1291341	Symbol	IS_OBJECT		1289048						
ANR	1291342	Symbol	fnb -> style		1289048						
ANR	1291343	Symbol	hdr_ns		1289048						
ANR	1291344	Symbol	* fault		1289048						
ANR	1291345	Symbol	SOAP_1_2_ENV_NS_PREFIX		1289048						
ANR	1291346	Symbol	use		1289048						
ANR	1291347	Symbol	body		1289048						
ANR	1291348	Symbol	TSRMLS_DC		1289048						
ANR	1291349	Symbol	hdr_enc		1289048						
ANR	1291350	Symbol	headers -> function		1289048						
ANR	1291351	Symbol	strlen		1289048						
ANR	1291352	Symbol	function		1289048						
ANR	1291353	Symbol	xmlNewDoc		1289048						
ANR	1291354	Symbol	IS_STRING		1289048						
ANR	1291355	Symbol	fnb		1289048						
ANR	1291356	Symbol	SOAP_RPC		1289048						
ANR	1291357	Symbol	ret		1289048						
ANR	1291358	Symbol	NULL		1289048						
ANR	1291359	Symbol	xmlHdr		1289048						
ANR	1291360	Symbol	xmlNewDocNode		1289048						
ANR	1291361	Symbol	doc -> charset		1289048						
ANR	1291362	Symbol	doc -> encoding		1289048						
ANR	1291363	Symbol	* tmp_fault		1289048						
ANR	1291364	Symbol	SOAP_LITERAL		1289048						
ANR	1291365	Symbol	headers -> hdr -> ns		1289048						
ANR	1291366	Symbol	fb		1289048						
ANR	1291367	Symbol	BAD_CAST		1289048						
ANR	1291368	Symbol	headers -> function_name		1289048						
ANR	1291369	Symbol	XML_CHAR_ENCODING_UTF8		1289048						
ANR	1291370	Symbol	fault_ns		1289048						
ANR	1291371	Symbol	SOAP_1_1_ENV_NAMESPACE		1289048						
ANR	1291372	Symbol	code		1289048						
ANR	1291373	Symbol	ns		1289048						
ANR	1291374	Symbol	head		1289048						
ANR	1291375	Symbol	Z_TYPE_PP		1289048						
ANR	1291376	Symbol	IS_NULL		1289048						
ANR	1291377	Symbol	param		1289048						
ANR	1291378	Symbol	Z_STRVAL		1289048						
ANR	1291379	Symbol	& hdr		1289048						
ANR	1291380	Symbol	headers		1289048						
ANR	1291381	Symbol	encode_add_ns		1289048						
ANR	1291382	Symbol	fault -> details		1289048						
ANR	1291383	Symbol	* headers -> hdr		1289048						
ANR	1291384	Symbol	* function		1289048						
ANR	1291385	Symbol	fault		1289048						
ANR	1291386	Symbol	function -> binding -> bindingType		1289048						
ANR	1291387	Symbol	Z_OBJPROP_P		1289048						
ANR	1291388	Symbol	Z_TYPE_P		1289048						
ANR	1291389	Symbol	xmlNewNs		1289048						
ANR	1291390	Symbol	new_len		1289048						
ANR	1291391	Symbol	function_name		1289048						
ANR	1291392	Symbol	headers -> hdr		1289048						
ANR	1291393	Symbol	hdr		1289048						
ANR	1291394	Symbol	SOAP_1_1_ENV_NS_PREFIX		1289048						
ANR	1291395	Symbol	SOAP_ENCODED		1289048						
ANR	1291396	Symbol	SOAP_1_2_ENC_NAMESPACE		1289048						
ANR	1291397	Symbol	* fnb		1289048						
ANR	1291398	Symbol	key . c		1289048						
ANR	1291399	Symbol	* function -> binding		1289048						
ANR	1291400	Symbol	& sparam		1289048						
ANR	1291401	Symbol	function -> bindingAttributes		1289048						
ANR	1291402	Symbol	fb -> use		1289048						
ANR	1291403	Symbol	* sparam		1289048						
ANR	1291404	DeclStmt									
ANR	1291405	Decl							xmlDoc	xmlDoc *	doc
ANR	1291406	DeclStmt									
ANR	1291407	Decl							xmlNodePtr	xmlNodePtr	envelope
ANR	1291408	Decl							xmlNodePtr	xmlNodePtr	body
ANR	1291409	Decl							xmlNodePtr	xmlNodePtr	method
ANR	1291410	Decl							xmlNodePtr	xmlNodePtr	head
ANR	1291411	DeclStmt									
ANR	1291412	Decl							xmlNsPtr	xmlNsPtr	ns
ANR	1291413	DeclStmt									
ANR	1291414	Decl							zval	zval * *	zstyle
ANR	1291415	Decl							zval	zval * *	zuse
ANR	1291416	DeclStmt									
ANR	1291417	Decl							int	int	i
ANR	1291418	Decl							int	int	style
ANR	1291419	Decl							int	int	use
ANR	1291420	DeclStmt									
ANR	1291421	Decl							HashTable	HashTable *	hdrs
ANR	1291422	DeclStmt									
ANR	1291423	Decl							sdlSoapBindingFunctionPtr	sdlSoapBindingFunctionPtr	fnb
ANR	1291424	DeclStmt									
ANR	1291425	Decl							xmlNodePtr	xmlNodePtr	param
ANR	1291426	DeclStmt									
ANR	1291427	Decl							sdlParamPtr	sdlParamPtr	parameter
ANR	1291428	DeclStmt									
ANR	1291429	Decl							int	int	n
ANR	1291430	DeclStmt									
ANR	1291431	Decl							xmlNodePtr	xmlNodePtr	param
ANR	1291432	DeclStmt									
ANR	1291433	Decl							sdlParamPtr	sdlParamPtr	parameter
ANR	1291434	DeclStmt									
ANR	1291435	Decl							zval	zval * *	header
ANR	1291436	DeclStmt									
ANR	1291437	Decl							HashTable	HashTable *	ht
ANR	1291438	DeclStmt									
ANR	1291439	Decl							zval	zval * *	name
ANR	1291440	Decl							zval	zval * *	ns
ANR	1291441	Decl							zval	zval * *	tmp
ANR	1291442	DeclStmt									
ANR	1291443	Decl							xmlNodePtr	xmlNodePtr	h
ANR	1291444	DeclStmt									
ANR	1291445	Decl							xmlNsPtr	xmlNsPtr	nsptr
ANR	1291446	DeclStmt									
ANR	1291447	Decl							int	int	hdr_use
ANR	1291448	DeclStmt									
ANR	1291449	Decl							encodePtr	encodePtr	enc
ANR	1291450	DeclStmt									
ANR	1291451	Decl							smart_str	smart_str	key
ANR	1291452	DeclStmt									
ANR	1291453	Decl							sdlSoapBindingFunctionHeaderPtr	sdlSoapBindingFunctionHeaderPtr *	hdr
ANR	1291454	Function	serialize_parameter	4443:0:153127:154184							
ANR	1291455	FunctionDef	"serialize_parameter (sdlParamPtr param , zval * param_val , int index , char * name , int style , xmlNodePtr parent TSRMLS_DC)"		1291454	0					
ANR	1291456	CompoundStatement		4444:0:153264:154184	1291454	0					
ANR	1291457	IdentifierDeclStatement	char * paramName ;	4445:1:153267:153282	1291454	0	True				
ANR	1291458	IdentifierDecl	* paramName		1291454	0					
ANR	1291459	IdentifierDeclType	char *		1291454	0					
ANR	1291460	Identifier	paramName		1291454	1					
ANR	1291461	IdentifierDeclStatement	xmlNodePtr xmlParam ;	4446:1:153285:153304	1291454	1	True				
ANR	1291462	IdentifierDecl	xmlParam		1291454	0					
ANR	1291463	IdentifierDeclType	xmlNodePtr		1291454	0					
ANR	1291464	Identifier	xmlParam		1291454	1					
ANR	1291465	IdentifierDeclStatement	char paramNameBuf [ 10 ] ;	4447:1:153307:153328	1291454	2	True				
ANR	1291466	IdentifierDecl	paramNameBuf [ 10 ]		1291454	0					
ANR	1291467	IdentifierDeclType	char [ 10 ]		1291454	0					
ANR	1291468	Identifier	paramNameBuf		1291454	1					
ANR	1291469	PrimaryExpression	10		1291454	2					
ANR	1291470	IfStatement	if ( param_val && Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry )		1291454	3					
ANR	1291471	Condition	param_val && Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry	4449:5:153336:153440	1291454	0	True				
ANR	1291472	AndExpression	param_val && Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry		1291454	0		&&			
ANR	1291473	Identifier	param_val		1291454	0					
ANR	1291474	AndExpression	Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry		1291454	1		&&			
ANR	1291475	EqualityExpression	Z_TYPE_P ( param_val ) == IS_OBJECT		1291454	0		==			
ANR	1291476	CallExpression	Z_TYPE_P ( param_val )		1291454	0					
ANR	1291477	Callee	Z_TYPE_P		1291454	0					
ANR	1291478	Identifier	Z_TYPE_P		1291454	0					
ANR	1291479	ArgumentList	param_val		1291454	1					
ANR	1291480	Argument	param_val		1291454	0					
ANR	1291481	Identifier	param_val		1291454	0					
ANR	1291482	Identifier	IS_OBJECT		1291454	1					
ANR	1291483	EqualityExpression	Z_OBJCE_P ( param_val ) == soap_param_class_entry		1291454	1		==			
ANR	1291484	CallExpression	Z_OBJCE_P ( param_val )		1291454	0					
ANR	1291485	Callee	Z_OBJCE_P		1291454	0					
ANR	1291486	Identifier	Z_OBJCE_P		1291454	0					
ANR	1291487	ArgumentList	param_val		1291454	1					
ANR	1291488	Argument	param_val		1291454	0					
ANR	1291489	Identifier	param_val		1291454	0					
ANR	1291490	Identifier	soap_param_class_entry		1291454	1					
ANR	1291491	CompoundStatement		10:2:203:220	1291454	1					
ANR	1291492	IdentifierDeclStatement	zval * * param_name ;	4452:2:153447:153464	1291454	0	True				
ANR	1291493	IdentifierDecl	* * param_name		1291454	0					
ANR	1291494	IdentifierDeclType	zval * *		1291454	0					
ANR	1291495	Identifier	param_name		1291454	1					
ANR	1291496	IdentifierDeclStatement	zval * * param_data ;	4453:2:153468:153485	1291454	1	True				
ANR	1291497	IdentifierDecl	* * param_data		1291454	0					
ANR	1291498	IdentifierDeclType	zval * *		1291454	0					
ANR	1291499	Identifier	param_data		1291454	1					
ANR	1291500	IfStatement	"if ( zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) , ( void * * ) & param_name ) == SUCCESS && Z_TYPE_PP ( param_name ) == IS_STRING && zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) , ( void * * ) & param_data ) == SUCCESS )"		1291454	2					
ANR	1291501	Condition	"zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) , ( void * * ) & param_name ) == SUCCESS && Z_TYPE_PP ( param_name ) == IS_STRING && zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) , ( void * * ) & param_data ) == SUCCESS"	4455:6:153494:153761	1291454	0	True				
ANR	1291502	AndExpression	"zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) , ( void * * ) & param_name ) == SUCCESS && Z_TYPE_PP ( param_name ) == IS_STRING && zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) , ( void * * ) & param_data ) == SUCCESS"		1291454	0		&&			
ANR	1291503	EqualityExpression	"zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) , ( void * * ) & param_name ) == SUCCESS"		1291454	0		==			
ANR	1291504	CallExpression	"zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) , ( void * * ) & param_name )"		1291454	0					
ANR	1291505	Callee	zend_hash_find		1291454	0					
ANR	1291506	Identifier	zend_hash_find		1291454	0					
ANR	1291507	ArgumentList	Z_OBJPROP_P ( param_val )		1291454	1					
ANR	1291508	Argument	Z_OBJPROP_P ( param_val )		1291454	0					
ANR	1291509	CallExpression	Z_OBJPROP_P ( param_val )		1291454	0					
ANR	1291510	Callee	Z_OBJPROP_P		1291454	0					
ANR	1291511	Identifier	Z_OBJPROP_P		1291454	0					
ANR	1291512	ArgumentList	param_val		1291454	1					
ANR	1291513	Argument	param_val		1291454	0					
ANR	1291514	Identifier	param_val		1291454	0					
ANR	1291515	Argument	"""param_name"""		1291454	1					
ANR	1291516	PrimaryExpression	"""param_name"""		1291454	0					
ANR	1291517	Argument	"sizeof ( ""param_name"" )"		1291454	2					
ANR	1291518	SizeofExpression	"sizeof ( ""param_name"" )"		1291454	0					
ANR	1291519	Sizeof	sizeof		1291454	0					
ANR	1291520	PrimaryExpression	"""param_name"""		1291454	1					
ANR	1291521	Argument	( void * * ) & param_name		1291454	3					
ANR	1291522	CastExpression	( void * * ) & param_name		1291454	0					
ANR	1291523	CastTarget	void * *		1291454	0					
ANR	1291524	UnaryOperationExpression	& param_name		1291454	1					
ANR	1291525	UnaryOperator	&		1291454	0					
ANR	1291526	Identifier	param_name		1291454	1					
ANR	1291527	Identifier	SUCCESS		1291454	1					
ANR	1291528	AndExpression	"Z_TYPE_PP ( param_name ) == IS_STRING && zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) , ( void * * ) & param_data ) == SUCCESS"		1291454	1		&&			
ANR	1291529	EqualityExpression	Z_TYPE_PP ( param_name ) == IS_STRING		1291454	0		==			
ANR	1291530	CallExpression	Z_TYPE_PP ( param_name )		1291454	0					
ANR	1291531	Callee	Z_TYPE_PP		1291454	0					
ANR	1291532	Identifier	Z_TYPE_PP		1291454	0					
ANR	1291533	ArgumentList	param_name		1291454	1					
ANR	1291534	Argument	param_name		1291454	0					
ANR	1291535	Identifier	param_name		1291454	0					
ANR	1291536	Identifier	IS_STRING		1291454	1					
ANR	1291537	EqualityExpression	"zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) , ( void * * ) & param_data ) == SUCCESS"		1291454	1		==			
ANR	1291538	CallExpression	"zend_hash_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) , ( void * * ) & param_data )"		1291454	0					
ANR	1291539	Callee	zend_hash_find		1291454	0					
ANR	1291540	Identifier	zend_hash_find		1291454	0					
ANR	1291541	ArgumentList	Z_OBJPROP_P ( param_val )		1291454	1					
ANR	1291542	Argument	Z_OBJPROP_P ( param_val )		1291454	0					
ANR	1291543	CallExpression	Z_OBJPROP_P ( param_val )		1291454	0					
ANR	1291544	Callee	Z_OBJPROP_P		1291454	0					
ANR	1291545	Identifier	Z_OBJPROP_P		1291454	0					
ANR	1291546	ArgumentList	param_val		1291454	1					
ANR	1291547	Argument	param_val		1291454	0					
ANR	1291548	Identifier	param_val		1291454	0					
ANR	1291549	Argument	"""param_data"""		1291454	1					
ANR	1291550	PrimaryExpression	"""param_data"""		1291454	0					
ANR	1291551	Argument	"sizeof ( ""param_data"" )"		1291454	2					
ANR	1291552	SizeofExpression	"sizeof ( ""param_data"" )"		1291454	0					
ANR	1291553	Sizeof	sizeof		1291454	0					
ANR	1291554	PrimaryExpression	"""param_data"""		1291454	1					
ANR	1291555	Argument	( void * * ) & param_data		1291454	3					
ANR	1291556	CastExpression	( void * * ) & param_data		1291454	0					
ANR	1291557	CastTarget	void * *		1291454	0					
ANR	1291558	UnaryOperationExpression	& param_data		1291454	1					
ANR	1291559	UnaryOperator	&		1291454	0					
ANR	1291560	Identifier	param_data		1291454	1					
ANR	1291561	Identifier	SUCCESS		1291454	1					
ANR	1291562	CompoundStatement		14:115:499:499	1291454	1					
ANR	1291563	ExpressionStatement	param_val = * param_data	4458:3:153769:153792	1291454	0	True				
ANR	1291564	AssignmentExpression	param_val = * param_data		1291454	0		=			
ANR	1291565	Identifier	param_val		1291454	0					
ANR	1291566	UnaryOperationExpression	* param_data		1291454	1					
ANR	1291567	UnaryOperator	*		1291454	0					
ANR	1291568	Identifier	param_data		1291454	1					
ANR	1291569	ExpressionStatement	name = Z_STRVAL_PP ( param_name )	4459:3:153797:153827	1291454	1	True				
ANR	1291570	AssignmentExpression	name = Z_STRVAL_PP ( param_name )		1291454	0		=			
ANR	1291571	Identifier	name		1291454	0					
ANR	1291572	CallExpression	Z_STRVAL_PP ( param_name )		1291454	1					
ANR	1291573	Callee	Z_STRVAL_PP		1291454	0					
ANR	1291574	Identifier	Z_STRVAL_PP		1291454	0					
ANR	1291575	ArgumentList	param_name		1291454	1					
ANR	1291576	Argument	param_name		1291454	0					
ANR	1291577	Identifier	param_name		1291454	0					
ANR	1291578	IfStatement	if ( param != NULL && param -> paramName != NULL )		1291454	4					
ANR	1291579	Condition	param != NULL && param -> paramName != NULL	4463:5:153842:153882	1291454	0	True				
ANR	1291580	AndExpression	param != NULL && param -> paramName != NULL		1291454	0		&&			
ANR	1291581	EqualityExpression	param != NULL		1291454	0		!=			
ANR	1291582	Identifier	param		1291454	0					
ANR	1291583	Identifier	NULL		1291454	1					
ANR	1291584	EqualityExpression	param -> paramName != NULL		1291454	1		!=			
ANR	1291585	PtrMemberAccess	param -> paramName		1291454	0					
ANR	1291586	Identifier	param		1291454	0					
ANR	1291587	Identifier	paramName		1291454	1					
ANR	1291588	Identifier	NULL		1291454	1					
ANR	1291589	CompoundStatement		20:48:620:620	1291454	1					
ANR	1291590	ExpressionStatement	paramName = param -> paramName	4464:2:153889:153917	1291454	0	True				
ANR	1291591	AssignmentExpression	paramName = param -> paramName		1291454	0		=			
ANR	1291592	Identifier	paramName		1291454	0					
ANR	1291593	PtrMemberAccess	param -> paramName		1291454	1					
ANR	1291594	Identifier	param		1291454	0					
ANR	1291595	Identifier	paramName		1291454	1					
ANR	1291596	ElseStatement	else		1291454	0					
ANR	1291597	CompoundStatement		22:8:662:662	1291454	0					
ANR	1291598	IfStatement	if ( name == NULL )		1291454	0					
ANR	1291599	Condition	name == NULL	4466:6:153935:153946	1291454	0	True				
ANR	1291600	EqualityExpression	name == NULL		1291454	0		==			
ANR	1291601	Identifier	name		1291454	0					
ANR	1291602	Identifier	NULL		1291454	1					
ANR	1291603	CompoundStatement		23:20:684:684	1291454	1					
ANR	1291604	ExpressionStatement	paramName = paramNameBuf	4467:3:153954:153978	1291454	0	True				
ANR	1291605	AssignmentExpression	paramName = paramNameBuf		1291454	0		=			
ANR	1291606	Identifier	paramName		1291454	0					
ANR	1291607	Identifier	paramNameBuf		1291454	1					
ANR	1291608	ExpressionStatement	"snprintf ( paramName , sizeof ( paramNameBuf ) , ""param%d"" , index )"	4468:3:153983:154041	1291454	1	True				
ANR	1291609	CallExpression	"snprintf ( paramName , sizeof ( paramNameBuf ) , ""param%d"" , index )"		1291454	0					
ANR	1291610	Callee	snprintf		1291454	0					
ANR	1291611	Identifier	snprintf		1291454	0					
ANR	1291612	ArgumentList	paramName		1291454	1					
ANR	1291613	Argument	paramName		1291454	0					
ANR	1291614	Identifier	paramName		1291454	0					
ANR	1291615	Argument	sizeof ( paramNameBuf )		1291454	1					
ANR	1291616	SizeofExpression	sizeof ( paramNameBuf )		1291454	0					
ANR	1291617	Sizeof	sizeof		1291454	0					
ANR	1291618	SizeofOperand	paramNameBuf		1291454	1					
ANR	1291619	Argument	"""param%d"""		1291454	2					
ANR	1291620	PrimaryExpression	"""param%d"""		1291454	0					
ANR	1291621	Argument	index		1291454	3					
ANR	1291622	Identifier	index		1291454	0					
ANR	1291623	ElseStatement	else		1291454	0					
ANR	1291624	CompoundStatement		26:9:787:787	1291454	0					
ANR	1291625	ExpressionStatement	paramName = name	4470:3:154057:154073	1291454	0	True				
ANR	1291626	AssignmentExpression	paramName = name		1291454	0		=			
ANR	1291627	Identifier	paramName		1291454	0					
ANR	1291628	Identifier	name		1291454	1					
ANR	1291629	Statement	xmlParam	4474:1:154084:154091	1291454	5	True				
ANR	1291630	Statement	=	4474:10:154093:154093	1291454	6	True				
ANR	1291631	Statement	serialize_zval	4474:12:154095:154108	1291454	7	True				
ANR	1291632	Statement	(	4474:26:154109:154109	1291454	8	True				
ANR	1291633	Statement	param_val	4474:27:154110:154118	1291454	9	True				
ANR	1291634	Statement	","	4474:36:154119:154119	1291454	10	True				
ANR	1291635	Statement	param	4474:38:154121:154125	1291454	11	True				
ANR	1291636	Statement	","	4474:43:154126:154126	1291454	12	True				
ANR	1291637	Statement	paramName	4474:45:154128:154136	1291454	13	True				
ANR	1291638	Statement	","	4474:54:154137:154137	1291454	14	True				
ANR	1291639	Statement	style	4474:56:154139:154143	1291454	15	True				
ANR	1291640	Statement	","	4474:61:154144:154144	1291454	16	True				
ANR	1291641	Statement	parent	4474:63:154146:154151	1291454	17	True				
ANR	1291642	Statement	TSRMLS_CC	4474:70:154153:154161	1291454	18	True				
ANR	1291643	Statement	)	4474:79:154162:154162	1291454	19	True				
ANR	1291644	ExpressionStatement		4474:80:154163:154163	1291454	20	True				
ANR	1291645	ReturnStatement	return xmlParam ;	4476:1:154167:154182	1291454	21	True				
ANR	1291646	Identifier	xmlParam		1291454	0					
ANR	1291647	ReturnType	static xmlNodePtr		1291454	1					
ANR	1291648	Identifier	serialize_parameter		1291454	2					
ANR	1291649	ParameterList	"sdlParamPtr param , zval * param_val , int index , char * name , int style , xmlNodePtr parent TSRMLS_DC"		1291454	3					
ANR	1291650	Parameter	sdlParamPtr param	4443:38:153165:153181	1291454	0	True				
ANR	1291651	ParameterType	sdlParamPtr		1291454	0					
ANR	1291652	Identifier	param		1291454	1					
ANR	1291653	Parameter	zval * param_val	4443:57:153184:153198	1291454	1	True				
ANR	1291654	ParameterType	zval *		1291454	0					
ANR	1291655	Identifier	param_val		1291454	1					
ANR	1291656	Parameter	int index	4443:74:153201:153209	1291454	2	True				
ANR	1291657	ParameterType	int		1291454	0					
ANR	1291658	Identifier	index		1291454	1					
ANR	1291659	Parameter	char * name	4443:85:153212:153221	1291454	3	True				
ANR	1291660	ParameterType	char *		1291454	0					
ANR	1291661	Identifier	name		1291454	1					
ANR	1291662	Parameter	int style	4443:97:153224:153232	1291454	4	True				
ANR	1291663	ParameterType	int		1291454	0					
ANR	1291664	Identifier	style		1291454	1					
ANR	1291665	Parameter	xmlNodePtr parent TSRMLS_DC	4443:108:153235:153261	1291454	5	True				
ANR	1291666	ParameterType	xmlNodePtr parent		1291454	0					
ANR	1291667	Identifier	TSRMLS_DC		1291454	1					
ANR	1291668	CFGEntryNode	ENTRY		1291454		True				
ANR	1291669	CFGExitNode	EXIT		1291454		True				
ANR	1291670	Symbol	xmlParam		1291454						
ANR	1291671	Symbol	& param_name		1291454						
ANR	1291672	Symbol	paramName		1291454						
ANR	1291673	Symbol	TSRMLS_DC		1291454						
ANR	1291674	Symbol	zend_hash_find		1291454						
ANR	1291675	Symbol	Z_TYPE_PP		1291454						
ANR	1291676	Symbol	param_val		1291454						
ANR	1291677	Symbol	param		1291454						
ANR	1291678	Symbol	Z_OBJCE_P		1291454						
ANR	1291679	Symbol	Z_STRVAL_PP		1291454						
ANR	1291680	Symbol	IS_STRING		1291454						
ANR	1291681	Symbol	SUCCESS		1291454						
ANR	1291682	Symbol	NULL		1291454						
ANR	1291683	Symbol	* param_data		1291454						
ANR	1291684	Symbol	paramNameBuf		1291454						
ANR	1291685	Symbol	& param_data		1291454						
ANR	1291686	Symbol	param_data		1291454						
ANR	1291687	Symbol	index		1291454						
ANR	1291688	Symbol	Z_OBJPROP_P		1291454						
ANR	1291689	Symbol	param -> paramName		1291454						
ANR	1291690	Symbol	Z_TYPE_P		1291454						
ANR	1291691	Symbol	* param		1291454						
ANR	1291692	Symbol	name		1291454						
ANR	1291693	Symbol	style		1291454						
ANR	1291694	Symbol	soap_param_class_entry		1291454						
ANR	1291695	Symbol	IS_OBJECT		1291454						
ANR	1291696	Symbol	param_name		1291454						
ANR	1291697	Function	serialize_zval	4479:0:154187:154919							
ANR	1291698	FunctionDef	"serialize_zval (zval * val , sdlParamPtr param , char * paramName , int style , xmlNodePtr parent TSRMLS_DC)"		1291697	0					
ANR	1291699	CompoundStatement		4480:0:154307:154919	1291697	0					
ANR	1291700	IdentifierDeclStatement	xmlNodePtr xmlParam ;	4481:1:154310:154329	1291697	0	True				
ANR	1291701	IdentifierDecl	xmlParam		1291697	0					
ANR	1291702	IdentifierDeclType	xmlNodePtr		1291697	0					
ANR	1291703	Identifier	xmlParam		1291697	1					
ANR	1291704	IdentifierDeclStatement	encodePtr enc ;	4482:1:154332:154345	1291697	1	True				
ANR	1291705	IdentifierDecl	enc		1291697	0					
ANR	1291706	IdentifierDeclType	encodePtr		1291697	0					
ANR	1291707	Identifier	enc		1291697	1					
ANR	1291708	IdentifierDeclStatement	zval defval ;	4483:1:154348:154359	1291697	2	True				
ANR	1291709	IdentifierDecl	defval		1291697	0					
ANR	1291710	IdentifierDeclType	zval		1291697	0					
ANR	1291711	Identifier	defval		1291697	1					
ANR	1291712	IfStatement	if ( param != NULL )		1291697	3					
ANR	1291713	Condition	param != NULL	4485:5:154367:154379	1291697	0	True				
ANR	1291714	EqualityExpression	param != NULL		1291697	0		!=			
ANR	1291715	Identifier	param		1291697	0					
ANR	1291716	Identifier	NULL		1291697	1					
ANR	1291717	CompoundStatement		6:20:74:74	1291697	1					
ANR	1291718	ExpressionStatement	enc = param -> encode	4486:2:154386:154405	1291697	0	True				
ANR	1291719	AssignmentExpression	enc = param -> encode		1291697	0		=			
ANR	1291720	Identifier	enc		1291697	0					
ANR	1291721	PtrMemberAccess	param -> encode		1291697	1					
ANR	1291722	Identifier	param		1291697	0					
ANR	1291723	Identifier	encode		1291697	1					
ANR	1291724	IfStatement	if ( val == NULL )		1291697	1					
ANR	1291725	Condition	val == NULL	4487:6:154413:154423	1291697	0	True				
ANR	1291726	EqualityExpression	val == NULL		1291697	0		==			
ANR	1291727	Identifier	val		1291697	0					
ANR	1291728	Identifier	NULL		1291697	1					
ANR	1291729	CompoundStatement		8:19:118:118	1291697	1					
ANR	1291730	IfStatement	if ( param -> element )		1291697	0					
ANR	1291731	Condition	param -> element	4488:7:154435:154448	1291697	0	True				
ANR	1291732	PtrMemberAccess	param -> element		1291697	0					
ANR	1291733	Identifier	param		1291697	0					
ANR	1291734	Identifier	element		1291697	1					
ANR	1291735	CompoundStatement		9:23:143:143	1291697	1					
ANR	1291736	IfStatement	if ( param -> element -> fixed )		1291697	0					
ANR	1291737	Condition	param -> element -> fixed	4489:8:154461:154481	1291697	0	True				
ANR	1291738	PtrMemberAccess	param -> element -> fixed		1291697	0					
ANR	1291739	PtrMemberAccess	param -> element		1291697	0					
ANR	1291740	Identifier	param		1291697	0					
ANR	1291741	Identifier	element		1291697	1					
ANR	1291742	Identifier	fixed		1291697	1					
ANR	1291743	CompoundStatement		10:31:176:176	1291697	1					
ANR	1291744	ExpressionStatement	"ZVAL_STRING ( & defval , param -> element -> fixed , 0 )"	4490:5:154491:154537	1291697	0	True				
ANR	1291745	CallExpression	"ZVAL_STRING ( & defval , param -> element -> fixed , 0 )"		1291697	0					
ANR	1291746	Callee	ZVAL_STRING		1291697	0					
ANR	1291747	Identifier	ZVAL_STRING		1291697	0					
ANR	1291748	ArgumentList	& defval		1291697	1					
ANR	1291749	Argument	& defval		1291697	0					
ANR	1291750	UnaryOperationExpression	& defval		1291697	0					
ANR	1291751	UnaryOperator	&		1291697	0					
ANR	1291752	Identifier	defval		1291697	1					
ANR	1291753	Argument	param -> element -> fixed		1291697	1					
ANR	1291754	PtrMemberAccess	param -> element -> fixed		1291697	0					
ANR	1291755	PtrMemberAccess	param -> element		1291697	0					
ANR	1291756	Identifier	param		1291697	0					
ANR	1291757	Identifier	element		1291697	1					
ANR	1291758	Identifier	fixed		1291697	1					
ANR	1291759	Argument	0		1291697	2					
ANR	1291760	PrimaryExpression	0		1291697	0					
ANR	1291761	ExpressionStatement	val = & defval	4491:5:154544:154557	1291697	1	True				
ANR	1291762	AssignmentExpression	val = & defval		1291697	0		=			
ANR	1291763	Identifier	val		1291697	0					
ANR	1291764	UnaryOperationExpression	& defval		1291697	1					
ANR	1291765	UnaryOperator	&		1291697	0					
ANR	1291766	Identifier	defval		1291697	1					
ANR	1291767	ElseStatement	else		1291697	0					
ANR	1291768	IfStatement	if ( param -> element -> def && ! param -> element -> nillable )		1291697	0					
ANR	1291769	Condition	param -> element -> def && ! param -> element -> nillable	4492:15:154574:154621	1291697	0	True				
ANR	1291770	AndExpression	param -> element -> def && ! param -> element -> nillable		1291697	0		&&			
ANR	1291771	PtrMemberAccess	param -> element -> def		1291697	0					
ANR	1291772	PtrMemberAccess	param -> element		1291697	0					
ANR	1291773	Identifier	param		1291697	0					
ANR	1291774	Identifier	element		1291697	1					
ANR	1291775	Identifier	def		1291697	1					
ANR	1291776	UnaryOperationExpression	! param -> element -> nillable		1291697	1					
ANR	1291777	UnaryOperator	!		1291697	0					
ANR	1291778	PtrMemberAccess	param -> element -> nillable		1291697	1					
ANR	1291779	PtrMemberAccess	param -> element		1291697	0					
ANR	1291780	Identifier	param		1291697	0					
ANR	1291781	Identifier	element		1291697	1					
ANR	1291782	Identifier	nillable		1291697	1					
ANR	1291783	CompoundStatement		13:65:316:316	1291697	1					
ANR	1291784	ExpressionStatement	"ZVAL_STRING ( & defval , param -> element -> def , 0 )"	4493:5:154631:154675	1291697	0	True				
ANR	1291785	CallExpression	"ZVAL_STRING ( & defval , param -> element -> def , 0 )"		1291697	0					
ANR	1291786	Callee	ZVAL_STRING		1291697	0					
ANR	1291787	Identifier	ZVAL_STRING		1291697	0					
ANR	1291788	ArgumentList	& defval		1291697	1					
ANR	1291789	Argument	& defval		1291697	0					
ANR	1291790	UnaryOperationExpression	& defval		1291697	0					
ANR	1291791	UnaryOperator	&		1291697	0					
ANR	1291792	Identifier	defval		1291697	1					
ANR	1291793	Argument	param -> element -> def		1291697	1					
ANR	1291794	PtrMemberAccess	param -> element -> def		1291697	0					
ANR	1291795	PtrMemberAccess	param -> element		1291697	0					
ANR	1291796	Identifier	param		1291697	0					
ANR	1291797	Identifier	element		1291697	1					
ANR	1291798	Identifier	def		1291697	1					
ANR	1291799	Argument	0		1291697	2					
ANR	1291800	PrimaryExpression	0		1291697	0					
ANR	1291801	ExpressionStatement	val = & defval	4494:5:154682:154695	1291697	1	True				
ANR	1291802	AssignmentExpression	val = & defval		1291697	0		=			
ANR	1291803	Identifier	val		1291697	0					
ANR	1291804	UnaryOperationExpression	& defval		1291697	1					
ANR	1291805	UnaryOperator	&		1291697	0					
ANR	1291806	Identifier	defval		1291697	1					
ANR	1291807	ElseStatement	else		1291697	0					
ANR	1291808	CompoundStatement		19:8:412:412	1291697	0					
ANR	1291809	ExpressionStatement	enc = NULL	4499:2:154724:154734	1291697	0	True				
ANR	1291810	AssignmentExpression	enc = NULL		1291697	0		=			
ANR	1291811	Identifier	enc		1291697	0					
ANR	1291812	Identifier	NULL		1291697	1					
ANR	1291813	Statement	xmlParam	4501:1:154740:154747	1291697	4	True				
ANR	1291814	Statement	=	4501:10:154749:154749	1291697	5	True				
ANR	1291815	Statement	master_to_xml	4501:12:154751:154763	1291697	6	True				
ANR	1291816	Statement	(	4501:25:154764:154764	1291697	7	True				
ANR	1291817	Statement	enc	4501:26:154765:154767	1291697	8	True				
ANR	1291818	Statement	","	4501:29:154768:154768	1291697	9	True				
ANR	1291819	Statement	val	4501:31:154770:154772	1291697	10	True				
ANR	1291820	Statement	","	4501:34:154773:154773	1291697	11	True				
ANR	1291821	Statement	style	4501:36:154775:154779	1291697	12	True				
ANR	1291822	Statement	","	4501:41:154780:154780	1291697	13	True				
ANR	1291823	Statement	parent	4501:43:154782:154787	1291697	14	True				
ANR	1291824	Statement	TSRMLS_CC	4501:50:154789:154797	1291697	15	True				
ANR	1291825	Statement	)	4501:59:154798:154798	1291697	16	True				
ANR	1291826	ExpressionStatement		4501:60:154799:154799	1291697	17	True				
ANR	1291827	IfStatement	"if ( ! strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" ) )"		1291697	18					
ANR	1291828	Condition	"! strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" )"	4502:5:154806:154844	1291697	0	True				
ANR	1291829	UnaryOperationExpression	"! strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" )"		1291697	0					
ANR	1291830	UnaryOperator	!		1291697	0					
ANR	1291831	CallExpression	"strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" )"		1291697	1					
ANR	1291832	Callee	strcmp		1291697	0					
ANR	1291833	Identifier	strcmp		1291697	0					
ANR	1291834	ArgumentList	( char * ) xmlParam -> name		1291697	1					
ANR	1291835	Argument	( char * ) xmlParam -> name		1291697	0					
ANR	1291836	CastExpression	( char * ) xmlParam -> name		1291697	0					
ANR	1291837	CastTarget	char *		1291697	0					
ANR	1291838	PtrMemberAccess	xmlParam -> name		1291697	1					
ANR	1291839	Identifier	xmlParam		1291697	0					
ANR	1291840	Identifier	name		1291697	1					
ANR	1291841	Argument	"""BOGUS"""		1291697	1					
ANR	1291842	PrimaryExpression	"""BOGUS"""		1291697	0					
ANR	1291843	CompoundStatement		23:46:539:539	1291697	1					
ANR	1291844	ExpressionStatement	"xmlNodeSetName ( xmlParam , BAD_CAST ( paramName ) )"	4503:2:154851:154896	1291697	0	True				
ANR	1291845	CallExpression	"xmlNodeSetName ( xmlParam , BAD_CAST ( paramName ) )"		1291697	0					
ANR	1291846	Callee	xmlNodeSetName		1291697	0					
ANR	1291847	Identifier	xmlNodeSetName		1291697	0					
ANR	1291848	ArgumentList	xmlParam		1291697	1					
ANR	1291849	Argument	xmlParam		1291697	0					
ANR	1291850	Identifier	xmlParam		1291697	0					
ANR	1291851	Argument	BAD_CAST ( paramName )		1291697	1					
ANR	1291852	CallExpression	BAD_CAST ( paramName )		1291697	0					
ANR	1291853	Callee	BAD_CAST		1291697	0					
ANR	1291854	Identifier	BAD_CAST		1291697	0					
ANR	1291855	ArgumentList	paramName		1291697	1					
ANR	1291856	Argument	paramName		1291697	0					
ANR	1291857	Identifier	paramName		1291697	0					
ANR	1291858	ReturnStatement	return xmlParam ;	4505:1:154902:154917	1291697	19	True				
ANR	1291859	Identifier	xmlParam		1291697	0					
ANR	1291860	ReturnType	static xmlNodePtr		1291697	1					
ANR	1291861	Identifier	serialize_zval		1291697	2					
ANR	1291862	ParameterList	"zval * val , sdlParamPtr param , char * paramName , int style , xmlNodePtr parent TSRMLS_DC"		1291697	3					
ANR	1291863	Parameter	zval * val	4479:33:154220:154228	1291697	0	True				
ANR	1291864	ParameterType	zval *		1291697	0					
ANR	1291865	Identifier	val		1291697	1					
ANR	1291866	Parameter	sdlParamPtr param	4479:44:154231:154247	1291697	1	True				
ANR	1291867	ParameterType	sdlParamPtr		1291697	0					
ANR	1291868	Identifier	param		1291697	1					
ANR	1291869	Parameter	char * paramName	4479:63:154250:154264	1291697	2	True				
ANR	1291870	ParameterType	char *		1291697	0					
ANR	1291871	Identifier	paramName		1291697	1					
ANR	1291872	Parameter	int style	4479:80:154267:154275	1291697	3	True				
ANR	1291873	ParameterType	int		1291697	0					
ANR	1291874	Identifier	style		1291697	1					
ANR	1291875	Parameter	xmlNodePtr parent TSRMLS_DC	4479:91:154278:154304	1291697	4	True				
ANR	1291876	ParameterType	xmlNodePtr parent		1291697	0					
ANR	1291877	Identifier	TSRMLS_DC		1291697	1					
ANR	1291878	CFGEntryNode	ENTRY		1291697		True				
ANR	1291879	CFGExitNode	EXIT		1291697		True				
ANR	1291880	Symbol	val		1291697						
ANR	1291881	Symbol	strcmp		1291697						
ANR	1291882	Symbol	xmlParam		1291697						
ANR	1291883	Symbol	NULL		1291697						
ANR	1291884	Symbol	* xmlParam		1291697						
ANR	1291885	Symbol	paramName		1291697						
ANR	1291886	Symbol	TSRMLS_DC		1291697						
ANR	1291887	Symbol	& defval		1291697						
ANR	1291888	Symbol	* param		1291697						
ANR	1291889	Symbol	* param -> element		1291697						
ANR	1291890	Symbol	param -> element -> def		1291697						
ANR	1291891	Symbol	param		1291697						
ANR	1291892	Symbol	param -> element -> fixed		1291697						
ANR	1291893	Symbol	defval		1291697						
ANR	1291894	Symbol	* * param		1291697						
ANR	1291895	Symbol	style		1291697						
ANR	1291896	Symbol	param -> element -> nillable		1291697						
ANR	1291897	Symbol	enc		1291697						
ANR	1291898	Symbol	param -> element		1291697						
ANR	1291899	Symbol	param -> encode		1291697						
ANR	1291900	Symbol	xmlParam -> name		1291697						
ANR	1291901	Symbol	BAD_CAST		1291697						
ANR	1291902	Function	get_param	4508:0:154922:155811							
ANR	1291903	FunctionDef	"get_param (sdlFunctionPtr function , char * param_name , int index , int response)"		1291902	0					
ANR	1291904	CompoundStatement		4509:0:155019:155811	1291902	0					
ANR	1291905	IdentifierDeclStatement	sdlParamPtr * tmp ;	4510:1:155022:155038	1291902	0	True				
ANR	1291906	IdentifierDecl	* tmp		1291902	0					
ANR	1291907	IdentifierDeclType	sdlParamPtr *		1291902	0					
ANR	1291908	Identifier	tmp		1291902	1					
ANR	1291909	IdentifierDeclStatement	HashTable * ht ;	4511:1:155041:155056	1291902	1	True				
ANR	1291910	IdentifierDecl	* ht		1291902	0					
ANR	1291911	IdentifierDeclType	HashTable *		1291902	0					
ANR	1291912	Identifier	ht		1291902	1					
ANR	1291913	IfStatement	if ( function == NULL )		1291902	2					
ANR	1291914	Condition	function == NULL	4513:5:155064:155079	1291902	0	True				
ANR	1291915	EqualityExpression	function == NULL		1291902	0		==			
ANR	1291916	Identifier	function		1291902	0					
ANR	1291917	Identifier	NULL		1291902	1					
ANR	1291918	CompoundStatement		5:23:62:62	1291902	1					
ANR	1291919	ReturnStatement	return NULL ;	4514:2:155086:155097	1291902	0	True				
ANR	1291920	Identifier	NULL		1291902	0					
ANR	1291921	IfStatement	if ( response == FALSE )		1291902	3					
ANR	1291922	Condition	response == FALSE	4517:5:155108:155124	1291902	0	True				
ANR	1291923	EqualityExpression	response == FALSE		1291902	0		==			
ANR	1291924	Identifier	response		1291902	0					
ANR	1291925	Identifier	FALSE		1291902	1					
ANR	1291926	CompoundStatement		9:24:107:107	1291902	1					
ANR	1291927	ExpressionStatement	ht = function -> requestParameters	4518:2:155131:155163	1291902	0	True				
ANR	1291928	AssignmentExpression	ht = function -> requestParameters		1291902	0		=			
ANR	1291929	Identifier	ht		1291902	0					
ANR	1291930	PtrMemberAccess	function -> requestParameters		1291902	1					
ANR	1291931	Identifier	function		1291902	0					
ANR	1291932	Identifier	requestParameters		1291902	1					
ANR	1291933	ElseStatement	else		1291902	0					
ANR	1291934	CompoundStatement		11:8:153:153	1291902	0					
ANR	1291935	ExpressionStatement	ht = function -> responseParameters	4520:2:155177:155210	1291902	0	True				
ANR	1291936	AssignmentExpression	ht = function -> responseParameters		1291902	0		=			
ANR	1291937	Identifier	ht		1291902	0					
ANR	1291938	PtrMemberAccess	function -> responseParameters		1291902	1					
ANR	1291939	Identifier	function		1291902	0					
ANR	1291940	Identifier	responseParameters		1291902	1					
ANR	1291941	IfStatement	if ( ht == NULL )		1291902	4					
ANR	1291942	Condition	ht == NULL	4523:5:155221:155230	1291902	0	True				
ANR	1291943	EqualityExpression	ht == NULL		1291902	0		==			
ANR	1291944	Identifier	ht		1291902	0					
ANR	1291945	Identifier	NULL		1291902	1					
ANR	1291946	CompoundStatement		15:17:213:213	1291902	1					
ANR	1291947	ReturnStatement	return NULL ;	4524:3:155238:155249	1291902	0	True				
ANR	1291948	Identifier	NULL		1291902	0					
ANR	1291949	IfStatement	if ( param_name != NULL )		1291902	5					
ANR	1291950	Condition	param_name != NULL	4527:5:155260:155277	1291902	0	True				
ANR	1291951	EqualityExpression	param_name != NULL		1291902	0		!=			
ANR	1291952	Identifier	param_name		1291902	0					
ANR	1291953	Identifier	NULL		1291902	1					
ANR	1291954	CompoundStatement		19:25:260:260	1291902	1					
ANR	1291955	IfStatement	"if ( zend_hash_find ( ht , param_name , strlen ( param_name ) , ( void * * ) & tmp ) != FAILURE )"		1291902	0					
ANR	1291956	Condition	"zend_hash_find ( ht , param_name , strlen ( param_name ) , ( void * * ) & tmp ) != FAILURE"	4528:6:155288:155363	1291902	0	True				
ANR	1291957	EqualityExpression	"zend_hash_find ( ht , param_name , strlen ( param_name ) , ( void * * ) & tmp ) != FAILURE"		1291902	0		!=			
ANR	1291958	CallExpression	"zend_hash_find ( ht , param_name , strlen ( param_name ) , ( void * * ) & tmp )"		1291902	0					
ANR	1291959	Callee	zend_hash_find		1291902	0					
ANR	1291960	Identifier	zend_hash_find		1291902	0					
ANR	1291961	ArgumentList	ht		1291902	1					
ANR	1291962	Argument	ht		1291902	0					
ANR	1291963	Identifier	ht		1291902	0					
ANR	1291964	Argument	param_name		1291902	1					
ANR	1291965	Identifier	param_name		1291902	0					
ANR	1291966	Argument	strlen ( param_name )		1291902	2					
ANR	1291967	CallExpression	strlen ( param_name )		1291902	0					
ANR	1291968	Callee	strlen		1291902	0					
ANR	1291969	Identifier	strlen		1291902	0					
ANR	1291970	ArgumentList	param_name		1291902	1					
ANR	1291971	Argument	param_name		1291902	0					
ANR	1291972	Identifier	param_name		1291902	0					
ANR	1291973	Argument	( void * * ) & tmp		1291902	3					
ANR	1291974	CastExpression	( void * * ) & tmp		1291902	0					
ANR	1291975	CastTarget	void * *		1291902	0					
ANR	1291976	UnaryOperationExpression	& tmp		1291902	1					
ANR	1291977	UnaryOperator	&		1291902	0					
ANR	1291978	Identifier	tmp		1291902	1					
ANR	1291979	Identifier	FAILURE		1291902	1					
ANR	1291980	CompoundStatement		20:84:346:346	1291902	1					
ANR	1291981	ReturnStatement	return * tmp ;	4529:3:155371:155382	1291902	0	True				
ANR	1291982	UnaryOperationExpression	* tmp		1291902	0					
ANR	1291983	UnaryOperator	*		1291902	0					
ANR	1291984	Identifier	tmp		1291902	1					
ANR	1291985	ElseStatement	else		1291902	0					
ANR	1291986	CompoundStatement		23:3:378:394	1291902	0					
ANR	1291987	IdentifierDeclStatement	HashPosition pos ;	4531:3:155398:155414	1291902	0	True				
ANR	1291988	IdentifierDecl	pos		1291902	0					
ANR	1291989	IdentifierDeclType	HashPosition		1291902	0					
ANR	1291990	Identifier	pos		1291902	1					
ANR	1291991	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( ht , & pos )"	4533:3:155420:155465	1291902	1	True				
ANR	1291992	CallExpression	"zend_hash_internal_pointer_reset_ex ( ht , & pos )"		1291902	0					
ANR	1291993	Callee	zend_hash_internal_pointer_reset_ex		1291902	0					
ANR	1291994	Identifier	zend_hash_internal_pointer_reset_ex		1291902	0					
ANR	1291995	ArgumentList	ht		1291902	1					
ANR	1291996	Argument	ht		1291902	0					
ANR	1291997	Identifier	ht		1291902	0					
ANR	1291998	Argument	& pos		1291902	1					
ANR	1291999	UnaryOperationExpression	& pos		1291902	0					
ANR	1292000	UnaryOperator	&		1291902	0					
ANR	1292001	Identifier	pos		1291902	1					
ANR	1292002	WhileStatement	"while ( zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & pos ) != FAILURE )"		1291902	2					
ANR	1292003	Condition	"zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & pos ) != FAILURE"	4534:10:155477:155541	1291902	0	True				
ANR	1292004	EqualityExpression	"zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & pos ) != FAILURE"		1291902	0		!=			
ANR	1292005	CallExpression	"zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & pos )"		1291902	0					
ANR	1292006	Callee	zend_hash_get_current_data_ex		1291902	0					
ANR	1292007	Identifier	zend_hash_get_current_data_ex		1291902	0					
ANR	1292008	ArgumentList	ht		1291902	1					
ANR	1292009	Argument	ht		1291902	0					
ANR	1292010	Identifier	ht		1291902	0					
ANR	1292011	Argument	( void * * ) & tmp		1291902	1					
ANR	1292012	CastExpression	( void * * ) & tmp		1291902	0					
ANR	1292013	CastTarget	void * *		1291902	0					
ANR	1292014	UnaryOperationExpression	& tmp		1291902	1					
ANR	1292015	UnaryOperator	&		1291902	0					
ANR	1292016	Identifier	tmp		1291902	1					
ANR	1292017	Argument	& pos		1291902	2					
ANR	1292018	UnaryOperationExpression	& pos		1291902	0					
ANR	1292019	UnaryOperator	&		1291902	0					
ANR	1292020	Identifier	pos		1291902	1					
ANR	1292021	Identifier	FAILURE		1291902	1					
ANR	1292022	CompoundStatement		26:77:524:524	1291902	1					
ANR	1292023	IfStatement	"if ( ( * tmp ) -> paramName && strcmp ( param_name , ( * tmp ) -> paramName ) == 0 )"		1291902	0					
ANR	1292024	Condition	"( * tmp ) -> paramName && strcmp ( param_name , ( * tmp ) -> paramName ) == 0"	4535:8:155554:155616	1291902	0	True				
ANR	1292025	AndExpression	"( * tmp ) -> paramName && strcmp ( param_name , ( * tmp ) -> paramName ) == 0"		1291902	0		&&			
ANR	1292026	PtrMemberAccess	( * tmp ) -> paramName		1291902	0					
ANR	1292027	UnaryOperationExpression	* tmp		1291902	0					
ANR	1292028	UnaryOperator	*		1291902	0					
ANR	1292029	Identifier	tmp		1291902	1					
ANR	1292030	Identifier	paramName		1291902	1					
ANR	1292031	EqualityExpression	"strcmp ( param_name , ( * tmp ) -> paramName ) == 0"		1291902	1		==			
ANR	1292032	CallExpression	"strcmp ( param_name , ( * tmp ) -> paramName )"		1291902	0					
ANR	1292033	Callee	strcmp		1291902	0					
ANR	1292034	Identifier	strcmp		1291902	0					
ANR	1292035	ArgumentList	param_name		1291902	1					
ANR	1292036	Argument	param_name		1291902	0					
ANR	1292037	Identifier	param_name		1291902	0					
ANR	1292038	Argument	( * tmp ) -> paramName		1291902	1					
ANR	1292039	PtrMemberAccess	( * tmp ) -> paramName		1291902	0					
ANR	1292040	UnaryOperationExpression	* tmp		1291902	0					
ANR	1292041	UnaryOperator	*		1291902	0					
ANR	1292042	Identifier	tmp		1291902	1					
ANR	1292043	Identifier	paramName		1291902	1					
ANR	1292044	PrimaryExpression	0		1291902	1					
ANR	1292045	CompoundStatement		27:73:599:599	1291902	1					
ANR	1292046	ReturnStatement	return * tmp ;	4536:5:155626:155637	1291902	0	True				
ANR	1292047	UnaryOperationExpression	* tmp		1291902	0					
ANR	1292048	UnaryOperator	*		1291902	0					
ANR	1292049	Identifier	tmp		1291902	1					
ANR	1292050	ExpressionStatement	"zend_hash_move_forward_ex ( ht , & pos )"	4538:4:155649:155684	1291902	1	True				
ANR	1292051	CallExpression	"zend_hash_move_forward_ex ( ht , & pos )"		1291902	0					
ANR	1292052	Callee	zend_hash_move_forward_ex		1291902	0					
ANR	1292053	Identifier	zend_hash_move_forward_ex		1291902	0					
ANR	1292054	ArgumentList	ht		1291902	1					
ANR	1292055	Argument	ht		1291902	0					
ANR	1292056	Identifier	ht		1291902	0					
ANR	1292057	Argument	& pos		1291902	1					
ANR	1292058	UnaryOperationExpression	& pos		1291902	0					
ANR	1292059	UnaryOperator	&		1291902	0					
ANR	1292060	Identifier	pos		1291902	1					
ANR	1292061	ElseStatement	else		1291902	0					
ANR	1292062	CompoundStatement		33:8:683:683	1291902	0					
ANR	1292063	IfStatement	"if ( zend_hash_index_find ( ht , index , ( void * * ) & tmp ) != FAILURE )"		1291902	0					
ANR	1292064	Condition	"zend_hash_index_find ( ht , index , ( void * * ) & tmp ) != FAILURE"	4542:6:155711:155767	1291902	0	True				
ANR	1292065	EqualityExpression	"zend_hash_index_find ( ht , index , ( void * * ) & tmp ) != FAILURE"		1291902	0		!=			
ANR	1292066	CallExpression	"zend_hash_index_find ( ht , index , ( void * * ) & tmp )"		1291902	0					
ANR	1292067	Callee	zend_hash_index_find		1291902	0					
ANR	1292068	Identifier	zend_hash_index_find		1291902	0					
ANR	1292069	ArgumentList	ht		1291902	1					
ANR	1292070	Argument	ht		1291902	0					
ANR	1292071	Identifier	ht		1291902	0					
ANR	1292072	Argument	index		1291902	1					
ANR	1292073	Identifier	index		1291902	0					
ANR	1292074	Argument	( void * * ) & tmp		1291902	2					
ANR	1292075	CastExpression	( void * * ) & tmp		1291902	0					
ANR	1292076	CastTarget	void * *		1291902	0					
ANR	1292077	UnaryOperationExpression	& tmp		1291902	1					
ANR	1292078	UnaryOperator	&		1291902	0					
ANR	1292079	Identifier	tmp		1291902	1					
ANR	1292080	Identifier	FAILURE		1291902	1					
ANR	1292081	CompoundStatement		34:65:750:750	1291902	1					
ANR	1292082	ReturnStatement	return ( * tmp ) ;	4543:3:155775:155788	1291902	0	True				
ANR	1292083	UnaryOperationExpression	* tmp		1291902	0					
ANR	1292084	UnaryOperator	*		1291902	0					
ANR	1292085	Identifier	tmp		1291902	1					
ANR	1292086	ReturnStatement	return NULL ;	4546:1:155798:155809	1291902	6	True				
ANR	1292087	Identifier	NULL		1291902	0					
ANR	1292088	ReturnType	static sdlParamPtr		1291902	1					
ANR	1292089	Identifier	get_param		1291902	2					
ANR	1292090	ParameterList	"sdlFunctionPtr function , char * param_name , int index , int response"		1291902	3					
ANR	1292091	Parameter	sdlFunctionPtr function	4508:29:154951:154973	1291902	0	True				
ANR	1292092	ParameterType	sdlFunctionPtr		1291902	0					
ANR	1292093	Identifier	function		1291902	1					
ANR	1292094	Parameter	char * param_name	4508:54:154976:154991	1291902	1	True				
ANR	1292095	ParameterType	char *		1291902	0					
ANR	1292096	Identifier	param_name		1291902	1					
ANR	1292097	Parameter	int index	4508:72:154994:155002	1291902	2	True				
ANR	1292098	ParameterType	int		1291902	0					
ANR	1292099	Identifier	index		1291902	1					
ANR	1292100	Parameter	int response	4508:83:155005:155016	1291902	3	True				
ANR	1292101	ParameterType	int		1291902	0					
ANR	1292102	Identifier	response		1291902	1					
ANR	1292103	CFGEntryNode	ENTRY		1291902		True				
ANR	1292104	CFGExitNode	EXIT		1291902		True				
ANR	1292105	Symbol	strcmp		1291902						
ANR	1292106	Symbol	* tmp		1291902						
ANR	1292107	Symbol	zend_hash_index_find		1291902						
ANR	1292108	Symbol	NULL		1291902						
ANR	1292109	Symbol	zend_hash_get_current_data_ex		1291902						
ANR	1292110	Symbol	* function		1291902						
ANR	1292111	Symbol	index		1291902						
ANR	1292112	Symbol	* * tmp		1291902						
ANR	1292113	Symbol	ht		1291902						
ANR	1292114	Symbol	function -> requestParameters		1291902						
ANR	1292115	Symbol	FAILURE		1291902						
ANR	1292116	Symbol	function -> responseParameters		1291902						
ANR	1292117	Symbol	strlen		1291902						
ANR	1292118	Symbol	zend_hash_find		1291902						
ANR	1292119	Symbol	pos		1291902						
ANR	1292120	Symbol	response		1291902						
ANR	1292121	Symbol	tmp		1291902						
ANR	1292122	Symbol	function		1291902						
ANR	1292123	Symbol	( * tmp ) -> paramName		1291902						
ANR	1292124	Symbol	FALSE		1291902						
ANR	1292125	Symbol	& tmp		1291902						
ANR	1292126	Symbol	param_name		1291902						
ANR	1292127	Symbol	& pos		1291902						
ANR	1292128	Function	get_function	4549:0:155814:156323							
ANR	1292129	FunctionDef	"get_function (sdlPtr sdl , const char * function_name)"		1292128	0					
ANR	1292130	CompoundStatement		4550:0:155888:156323	1292128	0					
ANR	1292131	IdentifierDeclStatement	sdlFunctionPtr * tmp ;	4551:1:155891:155910	1292128	0	True				
ANR	1292132	IdentifierDecl	* tmp		1292128	0					
ANR	1292133	IdentifierDeclType	sdlFunctionPtr *		1292128	0					
ANR	1292134	Identifier	tmp		1292128	1					
ANR	1292135	IdentifierDeclStatement	int len = strlen ( function_name ) ;	4553:1:155914:155945	1292128	1	True				
ANR	1292136	IdentifierDecl	len = strlen ( function_name )		1292128	0					
ANR	1292137	IdentifierDeclType	int		1292128	0					
ANR	1292138	Identifier	len		1292128	1					
ANR	1292139	AssignmentExpression	len = strlen ( function_name )		1292128	2		=			
ANR	1292140	Identifier	len		1292128	0					
ANR	1292141	CallExpression	strlen ( function_name )		1292128	1					
ANR	1292142	Callee	strlen		1292128	0					
ANR	1292143	Identifier	strlen		1292128	0					
ANR	1292144	ArgumentList	function_name		1292128	1					
ANR	1292145	Argument	function_name		1292128	0					
ANR	1292146	Identifier	function_name		1292128	0					
ANR	1292147	IdentifierDeclStatement	"char * str = estrndup ( function_name , len ) ;"	4554:1:155948:155987	1292128	2	True				
ANR	1292148	IdentifierDecl	"* str = estrndup ( function_name , len )"		1292128	0					
ANR	1292149	IdentifierDeclType	char *		1292128	0					
ANR	1292150	Identifier	str		1292128	1					
ANR	1292151	AssignmentExpression	"* str = estrndup ( function_name , len )"		1292128	2		=			
ANR	1292152	Identifier	str		1292128	0					
ANR	1292153	CallExpression	"estrndup ( function_name , len )"		1292128	1					
ANR	1292154	Callee	estrndup		1292128	0					
ANR	1292155	Identifier	estrndup		1292128	0					
ANR	1292156	ArgumentList	function_name		1292128	1					
ANR	1292157	Argument	function_name		1292128	0					
ANR	1292158	Identifier	function_name		1292128	0					
ANR	1292159	Argument	len		1292128	1					
ANR	1292160	Identifier	len		1292128	0					
ANR	1292161	ExpressionStatement	"php_strtolower ( str , len )"	4555:1:155990:156013	1292128	3	True				
ANR	1292162	CallExpression	"php_strtolower ( str , len )"		1292128	0					
ANR	1292163	Callee	php_strtolower		1292128	0					
ANR	1292164	Identifier	php_strtolower		1292128	0					
ANR	1292165	ArgumentList	str		1292128	1					
ANR	1292166	Argument	str		1292128	0					
ANR	1292167	Identifier	str		1292128	0					
ANR	1292168	Argument	len		1292128	1					
ANR	1292169	Identifier	len		1292128	0					
ANR	1292170	IfStatement	if ( sdl != NULL )		1292128	4					
ANR	1292171	Condition	sdl != NULL	4556:5:156020:156030	1292128	0	True				
ANR	1292172	EqualityExpression	sdl != NULL		1292128	0		!=			
ANR	1292173	Identifier	sdl		1292128	0					
ANR	1292174	Identifier	NULL		1292128	1					
ANR	1292175	CompoundStatement		7:18:144:144	1292128	1					
ANR	1292176	IfStatement	"if ( zend_hash_find ( & sdl -> functions , str , len + 1 , ( void * * ) & tmp ) != FAILURE )"		1292128	0					
ANR	1292177	Condition	"zend_hash_find ( & sdl -> functions , str , len + 1 , ( void * * ) & tmp ) != FAILURE"	4557:6:156041:156109	1292128	0	True				
ANR	1292178	EqualityExpression	"zend_hash_find ( & sdl -> functions , str , len + 1 , ( void * * ) & tmp ) != FAILURE"		1292128	0		!=			
ANR	1292179	CallExpression	"zend_hash_find ( & sdl -> functions , str , len + 1 , ( void * * ) & tmp )"		1292128	0					
ANR	1292180	Callee	zend_hash_find		1292128	0					
ANR	1292181	Identifier	zend_hash_find		1292128	0					
ANR	1292182	ArgumentList	& sdl -> functions		1292128	1					
ANR	1292183	Argument	& sdl -> functions		1292128	0					
ANR	1292184	UnaryOperationExpression	& sdl -> functions		1292128	0					
ANR	1292185	UnaryOperator	&		1292128	0					
ANR	1292186	PtrMemberAccess	sdl -> functions		1292128	1					
ANR	1292187	Identifier	sdl		1292128	0					
ANR	1292188	Identifier	functions		1292128	1					
ANR	1292189	Argument	str		1292128	1					
ANR	1292190	Identifier	str		1292128	0					
ANR	1292191	Argument	len + 1		1292128	2					
ANR	1292192	AdditiveExpression	len + 1		1292128	0		+			
ANR	1292193	Identifier	len		1292128	0					
ANR	1292194	PrimaryExpression	1		1292128	1					
ANR	1292195	Argument	( void * * ) & tmp		1292128	3					
ANR	1292196	CastExpression	( void * * ) & tmp		1292128	0					
ANR	1292197	CastTarget	void * *		1292128	0					
ANR	1292198	UnaryOperationExpression	& tmp		1292128	1					
ANR	1292199	UnaryOperator	&		1292128	0					
ANR	1292200	Identifier	tmp		1292128	1					
ANR	1292201	Identifier	FAILURE		1292128	1					
ANR	1292202	CompoundStatement		8:77:223:223	1292128	1					
ANR	1292203	ExpressionStatement	efree ( str )	4558:3:156117:156127	1292128	0	True				
ANR	1292204	CallExpression	efree ( str )		1292128	0					
ANR	1292205	Callee	efree		1292128	0					
ANR	1292206	Identifier	efree		1292128	0					
ANR	1292207	ArgumentList	str		1292128	1					
ANR	1292208	Argument	str		1292128	0					
ANR	1292209	Identifier	str		1292128	0					
ANR	1292210	ReturnStatement	return ( * tmp ) ;	4559:3:156132:156145	1292128	1	True				
ANR	1292211	UnaryOperationExpression	* tmp		1292128	0					
ANR	1292212	UnaryOperator	*		1292128	0					
ANR	1292213	Identifier	tmp		1292128	1					
ANR	1292214	ElseStatement	else		1292128	0					
ANR	1292215	IfStatement	"if ( sdl -> requests != NULL && zend_hash_find ( sdl -> requests , str , len + 1 , ( void * * ) & tmp ) != FAILURE )"		1292128	0					
ANR	1292216	Condition	"sdl -> requests != NULL && zend_hash_find ( sdl -> requests , str , len + 1 , ( void * * ) & tmp ) != FAILURE"	4560:13:156160:156251	1292128	0	True				
ANR	1292217	AndExpression	"sdl -> requests != NULL && zend_hash_find ( sdl -> requests , str , len + 1 , ( void * * ) & tmp ) != FAILURE"		1292128	0		&&			
ANR	1292218	EqualityExpression	sdl -> requests != NULL		1292128	0		!=			
ANR	1292219	PtrMemberAccess	sdl -> requests		1292128	0					
ANR	1292220	Identifier	sdl		1292128	0					
ANR	1292221	Identifier	requests		1292128	1					
ANR	1292222	Identifier	NULL		1292128	1					
ANR	1292223	EqualityExpression	"zend_hash_find ( sdl -> requests , str , len + 1 , ( void * * ) & tmp ) != FAILURE"		1292128	1		!=			
ANR	1292224	CallExpression	"zend_hash_find ( sdl -> requests , str , len + 1 , ( void * * ) & tmp )"		1292128	0					
ANR	1292225	Callee	zend_hash_find		1292128	0					
ANR	1292226	Identifier	zend_hash_find		1292128	0					
ANR	1292227	ArgumentList	sdl -> requests		1292128	1					
ANR	1292228	Argument	sdl -> requests		1292128	0					
ANR	1292229	PtrMemberAccess	sdl -> requests		1292128	0					
ANR	1292230	Identifier	sdl		1292128	0					
ANR	1292231	Identifier	requests		1292128	1					
ANR	1292232	Argument	str		1292128	1					
ANR	1292233	Identifier	str		1292128	0					
ANR	1292234	Argument	len + 1		1292128	2					
ANR	1292235	AdditiveExpression	len + 1		1292128	0		+			
ANR	1292236	Identifier	len		1292128	0					
ANR	1292237	PrimaryExpression	1		1292128	1					
ANR	1292238	Argument	( void * * ) & tmp		1292128	3					
ANR	1292239	CastExpression	( void * * ) & tmp		1292128	0					
ANR	1292240	CastTarget	void * *		1292128	0					
ANR	1292241	UnaryOperationExpression	& tmp		1292128	1					
ANR	1292242	UnaryOperator	&		1292128	0					
ANR	1292243	Identifier	tmp		1292128	1					
ANR	1292244	Identifier	FAILURE		1292128	1					
ANR	1292245	CompoundStatement		11:107:365:365	1292128	1					
ANR	1292246	ExpressionStatement	efree ( str )	4561:3:156259:156269	1292128	0	True				
ANR	1292247	CallExpression	efree ( str )		1292128	0					
ANR	1292248	Callee	efree		1292128	0					
ANR	1292249	Identifier	efree		1292128	0					
ANR	1292250	ArgumentList	str		1292128	1					
ANR	1292251	Argument	str		1292128	0					
ANR	1292252	Identifier	str		1292128	0					
ANR	1292253	ReturnStatement	return ( * tmp ) ;	4562:3:156274:156287	1292128	1	True				
ANR	1292254	UnaryOperationExpression	* tmp		1292128	0					
ANR	1292255	UnaryOperator	*		1292128	0					
ANR	1292256	Identifier	tmp		1292128	1					
ANR	1292257	ExpressionStatement	efree ( str )	4565:1:156297:156307	1292128	5	True				
ANR	1292258	CallExpression	efree ( str )		1292128	0					
ANR	1292259	Callee	efree		1292128	0					
ANR	1292260	Identifier	efree		1292128	0					
ANR	1292261	ArgumentList	str		1292128	1					
ANR	1292262	Argument	str		1292128	0					
ANR	1292263	Identifier	str		1292128	0					
ANR	1292264	ReturnStatement	return NULL ;	4566:1:156310:156321	1292128	6	True				
ANR	1292265	Identifier	NULL		1292128	0					
ANR	1292266	ReturnType	static sdlFunctionPtr		1292128	1					
ANR	1292267	Identifier	get_function		1292128	2					
ANR	1292268	ParameterList	"sdlPtr sdl , const char * function_name"		1292128	3					
ANR	1292269	Parameter	sdlPtr sdl	4549:35:155849:155858	1292128	0	True				
ANR	1292270	ParameterType	sdlPtr		1292128	0					
ANR	1292271	Identifier	sdl		1292128	1					
ANR	1292272	Parameter	const char * function_name	4549:47:155861:155885	1292128	1	True				
ANR	1292273	ParameterType	const char *		1292128	0					
ANR	1292274	Identifier	function_name		1292128	1					
ANR	1292275	CFGEntryNode	ENTRY		1292128		True				
ANR	1292276	CFGExitNode	EXIT		1292128		True				
ANR	1292277	Symbol	* tmp		1292128						
ANR	1292278	Symbol	NULL		1292128						
ANR	1292279	Symbol	* sdl		1292128						
ANR	1292280	Symbol	sdl -> requests		1292128						
ANR	1292281	Symbol	FAILURE		1292128						
ANR	1292282	Symbol	str		1292128						
ANR	1292283	Symbol	& sdl -> functions		1292128						
ANR	1292284	Symbol	strlen		1292128						
ANR	1292285	Symbol	zend_hash_find		1292128						
ANR	1292286	Symbol	estrndup		1292128						
ANR	1292287	Symbol	len		1292128						
ANR	1292288	Symbol	tmp		1292128						
ANR	1292289	Symbol	function_name		1292128						
ANR	1292290	Symbol	sdl		1292128						
ANR	1292291	Symbol	& tmp		1292128						
ANR	1292292	Function	get_doc_function	4569:0:156326:158118							
ANR	1292293	FunctionDef	"get_doc_function (sdlPtr sdl , xmlNodePtr params)"		1292292	0					
ANR	1292294	CompoundStatement		4570:0:156396:158118	1292292	0					
ANR	1292295	IfStatement	if ( sdl )		1292292	0					
ANR	1292296	Condition	sdl	4571:5:156403:156405	1292292	0	True				
ANR	1292297	Identifier	sdl		1292292	0					
ANR	1292298	CompoundStatement		4:2:38:59	1292292	1					
ANR	1292299	IdentifierDeclStatement	sdlFunctionPtr * tmp ;	4572:2:156412:156431	1292292	0	True				
ANR	1292300	IdentifierDecl	* tmp		1292292	0					
ANR	1292301	IdentifierDeclType	sdlFunctionPtr *		1292292	0					
ANR	1292302	Identifier	tmp		1292292	1					
ANR	1292303	IdentifierDeclStatement	sdlParamPtr * param ;	4573:2:156435:156456	1292292	1	True				
ANR	1292304	IdentifierDecl	* param		1292292	0					
ANR	1292305	IdentifierDeclType	sdlParamPtr *		1292292	0					
ANR	1292306	Identifier	param		1292292	1					
ANR	1292307	ExpressionStatement	zend_hash_internal_pointer_reset ( & sdl -> functions )	4575:2:156461:156510	1292292	2	True				
ANR	1292308	CallExpression	zend_hash_internal_pointer_reset ( & sdl -> functions )		1292292	0					
ANR	1292309	Callee	zend_hash_internal_pointer_reset		1292292	0					
ANR	1292310	Identifier	zend_hash_internal_pointer_reset		1292292	0					
ANR	1292311	ArgumentList	& sdl -> functions		1292292	1					
ANR	1292312	Argument	& sdl -> functions		1292292	0					
ANR	1292313	UnaryOperationExpression	& sdl -> functions		1292292	0					
ANR	1292314	UnaryOperator	&		1292292	0					
ANR	1292315	PtrMemberAccess	sdl -> functions		1292292	1					
ANR	1292316	Identifier	sdl		1292292	0					
ANR	1292317	Identifier	functions		1292292	1					
ANR	1292318	WhileStatement	"while ( zend_hash_get_current_data ( & sdl -> functions , ( void * * ) & tmp ) == SUCCESS )"		1292292	3					
ANR	1292319	Condition	"zend_hash_get_current_data ( & sdl -> functions , ( void * * ) & tmp ) == SUCCESS"	4576:9:156521:156588	1292292	0	True				
ANR	1292320	EqualityExpression	"zend_hash_get_current_data ( & sdl -> functions , ( void * * ) & tmp ) == SUCCESS"		1292292	0		==			
ANR	1292321	CallExpression	"zend_hash_get_current_data ( & sdl -> functions , ( void * * ) & tmp )"		1292292	0					
ANR	1292322	Callee	zend_hash_get_current_data		1292292	0					
ANR	1292323	Identifier	zend_hash_get_current_data		1292292	0					
ANR	1292324	ArgumentList	& sdl -> functions		1292292	1					
ANR	1292325	Argument	& sdl -> functions		1292292	0					
ANR	1292326	UnaryOperationExpression	& sdl -> functions		1292292	0					
ANR	1292327	UnaryOperator	&		1292292	0					
ANR	1292328	PtrMemberAccess	sdl -> functions		1292292	1					
ANR	1292329	Identifier	sdl		1292292	0					
ANR	1292330	Identifier	functions		1292292	1					
ANR	1292331	Argument	( void * * ) & tmp		1292292	1					
ANR	1292332	CastExpression	( void * * ) & tmp		1292292	0					
ANR	1292333	CastTarget	void * *		1292292	0					
ANR	1292334	UnaryOperationExpression	& tmp		1292292	1					
ANR	1292335	UnaryOperator	&		1292292	0					
ANR	1292336	Identifier	tmp		1292292	1					
ANR	1292337	Identifier	SUCCESS		1292292	1					
ANR	1292338	CompoundStatement		7:79:194:194	1292292	1					
ANR	1292339	IfStatement	if ( ( * tmp ) -> binding && ( * tmp ) -> binding -> bindingType == BINDING_SOAP )		1292292	0					
ANR	1292340	Condition	( * tmp ) -> binding && ( * tmp ) -> binding -> bindingType == BINDING_SOAP	4577:7:156600:156662	1292292	0	True				
ANR	1292341	AndExpression	( * tmp ) -> binding && ( * tmp ) -> binding -> bindingType == BINDING_SOAP		1292292	0		&&			
ANR	1292342	PtrMemberAccess	( * tmp ) -> binding		1292292	0					
ANR	1292343	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292344	UnaryOperator	*		1292292	0					
ANR	1292345	Identifier	tmp		1292292	1					
ANR	1292346	Identifier	binding		1292292	1					
ANR	1292347	EqualityExpression	( * tmp ) -> binding -> bindingType == BINDING_SOAP		1292292	1		==			
ANR	1292348	PtrMemberAccess	( * tmp ) -> binding -> bindingType		1292292	0					
ANR	1292349	PtrMemberAccess	( * tmp ) -> binding		1292292	0					
ANR	1292350	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292351	UnaryOperator	*		1292292	0					
ANR	1292352	Identifier	tmp		1292292	1					
ANR	1292353	Identifier	binding		1292292	1					
ANR	1292354	Identifier	bindingType		1292292	1					
ANR	1292355	Identifier	BINDING_SOAP		1292292	1					
ANR	1292356	CompoundStatement		9:4:274:358	1292292	1					
ANR	1292357	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) ( * tmp ) -> bindingAttributes ;	4578:4:156671:156755	1292292	0	True				
ANR	1292358	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) ( * tmp ) -> bindingAttributes		1292292	0					
ANR	1292359	IdentifierDeclType	sdlSoapBindingFunctionPtr		1292292	0					
ANR	1292360	Identifier	fnb		1292292	1					
ANR	1292361	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) ( * tmp ) -> bindingAttributes		1292292	2		=			
ANR	1292362	Identifier	fnb		1292292	0					
ANR	1292363	CastExpression	( sdlSoapBindingFunctionPtr ) ( * tmp ) -> bindingAttributes		1292292	1					
ANR	1292364	CastTarget	sdlSoapBindingFunctionPtr		1292292	0					
ANR	1292365	PtrMemberAccess	( * tmp ) -> bindingAttributes		1292292	1					
ANR	1292366	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292367	UnaryOperator	*		1292292	0					
ANR	1292368	Identifier	tmp		1292292	1					
ANR	1292369	Identifier	bindingAttributes		1292292	1					
ANR	1292370	IfStatement	if ( fnb -> style == SOAP_DOCUMENT )		1292292	1					
ANR	1292371	Condition	fnb -> style == SOAP_DOCUMENT	4579:8:156765:156791	1292292	0	True				
ANR	1292372	EqualityExpression	fnb -> style == SOAP_DOCUMENT		1292292	0		==			
ANR	1292373	PtrMemberAccess	fnb -> style		1292292	0					
ANR	1292374	Identifier	fnb		1292292	0					
ANR	1292375	Identifier	style		1292292	1					
ANR	1292376	Identifier	SOAP_DOCUMENT		1292292	1					
ANR	1292377	CompoundStatement		10:37:397:397	1292292	1					
ANR	1292378	IfStatement	if ( params == NULL )		1292292	0					
ANR	1292379	Condition	params == NULL	4580:9:156805:156818	1292292	0	True				
ANR	1292380	EqualityExpression	params == NULL		1292292	0		==			
ANR	1292381	Identifier	params		1292292	0					
ANR	1292382	Identifier	NULL		1292292	1					
ANR	1292383	CompoundStatement		11:25:424:424	1292292	1					
ANR	1292384	IfStatement	if ( ( * tmp ) -> requestParameters == NULL || zend_hash_num_elements ( ( * tmp ) -> requestParameters ) == 0 )		1292292	0					
ANR	1292385	Condition	( * tmp ) -> requestParameters == NULL || zend_hash_num_elements ( ( * tmp ) -> requestParameters ) == 0	4581:10:156833:156933	1292292	0	True				
ANR	1292386	OrExpression	( * tmp ) -> requestParameters == NULL || zend_hash_num_elements ( ( * tmp ) -> requestParameters ) == 0		1292292	0		||			
ANR	1292387	EqualityExpression	( * tmp ) -> requestParameters == NULL		1292292	0		==			
ANR	1292388	PtrMemberAccess	( * tmp ) -> requestParameters		1292292	0					
ANR	1292389	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292390	UnaryOperator	*		1292292	0					
ANR	1292391	Identifier	tmp		1292292	1					
ANR	1292392	Identifier	requestParameters		1292292	1					
ANR	1292393	Identifier	NULL		1292292	1					
ANR	1292394	EqualityExpression	zend_hash_num_elements ( ( * tmp ) -> requestParameters ) == 0		1292292	1		==			
ANR	1292395	CallExpression	zend_hash_num_elements ( ( * tmp ) -> requestParameters )		1292292	0					
ANR	1292396	Callee	zend_hash_num_elements		1292292	0					
ANR	1292397	Identifier	zend_hash_num_elements		1292292	0					
ANR	1292398	ArgumentList	( * tmp ) -> requestParameters		1292292	1					
ANR	1292399	Argument	( * tmp ) -> requestParameters		1292292	0					
ANR	1292400	PtrMemberAccess	( * tmp ) -> requestParameters		1292292	0					
ANR	1292401	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292402	UnaryOperator	*		1292292	0					
ANR	1292403	Identifier	tmp		1292292	1					
ANR	1292404	Identifier	requestParameters		1292292	1					
ANR	1292405	PrimaryExpression	0		1292292	1					
ANR	1292406	CompoundStatement		13:66:539:539	1292292	1					
ANR	1292407	ReturnStatement	return * tmp ;	4583:8:156946:156957	1292292	0	True				
ANR	1292408	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292409	UnaryOperator	*		1292292	0					
ANR	1292410	Identifier	tmp		1292292	1					
ANR	1292411	ElseStatement	else		1292292	0					
ANR	1292412	IfStatement	if ( ( * tmp ) -> requestParameters != NULL && zend_hash_num_elements ( ( * tmp ) -> requestParameters ) > 0 )		1292292	0					
ANR	1292413	Condition	( * tmp ) -> requestParameters != NULL && zend_hash_num_elements ( ( * tmp ) -> requestParameters ) > 0	4585:16:156983:157088	1292292	0	True				
ANR	1292414	AndExpression	( * tmp ) -> requestParameters != NULL && zend_hash_num_elements ( ( * tmp ) -> requestParameters ) > 0		1292292	0		&&			
ANR	1292415	EqualityExpression	( * tmp ) -> requestParameters != NULL		1292292	0		!=			
ANR	1292416	PtrMemberAccess	( * tmp ) -> requestParameters		1292292	0					
ANR	1292417	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292418	UnaryOperator	*		1292292	0					
ANR	1292419	Identifier	tmp		1292292	1					
ANR	1292420	Identifier	requestParameters		1292292	1					
ANR	1292421	Identifier	NULL		1292292	1					
ANR	1292422	RelationalExpression	zend_hash_num_elements ( ( * tmp ) -> requestParameters ) > 0		1292292	1		>			
ANR	1292423	CallExpression	zend_hash_num_elements ( ( * tmp ) -> requestParameters )		1292292	0					
ANR	1292424	Callee	zend_hash_num_elements		1292292	0					
ANR	1292425	Identifier	zend_hash_num_elements		1292292	0					
ANR	1292426	ArgumentList	( * tmp ) -> requestParameters		1292292	1					
ANR	1292427	Argument	( * tmp ) -> requestParameters		1292292	0					
ANR	1292428	PtrMemberAccess	( * tmp ) -> requestParameters		1292292	0					
ANR	1292429	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292430	UnaryOperator	*		1292292	0					
ANR	1292431	Identifier	tmp		1292292	1					
ANR	1292432	Identifier	requestParameters		1292292	1					
ANR	1292433	PrimaryExpression	0		1292292	1					
ANR	1292434	CompoundStatement		19:6:720:744	1292292	1					
ANR	1292435	IdentifierDeclStatement	int ok = 1 ;	4587:6:157099:157109	1292292	0	True				
ANR	1292436	IdentifierDecl	ok = 1		1292292	0					
ANR	1292437	IdentifierDeclType	int		1292292	0					
ANR	1292438	Identifier	ok		1292292	1					
ANR	1292439	AssignmentExpression	ok = 1		1292292	2		=			
ANR	1292440	Identifier	ok		1292292	0					
ANR	1292441	PrimaryExpression	1		1292292	1					
ANR	1292442	IdentifierDeclStatement	xmlNodePtr node = params ;	4588:6:157117:157141	1292292	1	True				
ANR	1292443	IdentifierDecl	node = params		1292292	0					
ANR	1292444	IdentifierDeclType	xmlNodePtr		1292292	0					
ANR	1292445	Identifier	node		1292292	1					
ANR	1292446	AssignmentExpression	node = params		1292292	2		=			
ANR	1292447	Identifier	params		1292292	0					
ANR	1292448	Identifier	params		1292292	1					
ANR	1292449	ExpressionStatement	zend_hash_internal_pointer_reset ( ( * tmp ) -> requestParameters )	4590:6:157150:157209	1292292	2	True				
ANR	1292450	CallExpression	zend_hash_internal_pointer_reset ( ( * tmp ) -> requestParameters )		1292292	0					
ANR	1292451	Callee	zend_hash_internal_pointer_reset		1292292	0					
ANR	1292452	Identifier	zend_hash_internal_pointer_reset		1292292	0					
ANR	1292453	ArgumentList	( * tmp ) -> requestParameters		1292292	1					
ANR	1292454	Argument	( * tmp ) -> requestParameters		1292292	0					
ANR	1292455	PtrMemberAccess	( * tmp ) -> requestParameters		1292292	0					
ANR	1292456	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292457	UnaryOperator	*		1292292	0					
ANR	1292458	Identifier	tmp		1292292	1					
ANR	1292459	Identifier	requestParameters		1292292	1					
ANR	1292460	WhileStatement	"while ( zend_hash_get_current_data ( ( * tmp ) -> requestParameters , ( void * * ) & param ) == SUCCESS )"		1292292	3					
ANR	1292461	Condition	"zend_hash_get_current_data ( ( * tmp ) -> requestParameters , ( void * * ) & param ) == SUCCESS"	4591:13:157224:157303	1292292	0	True				
ANR	1292462	EqualityExpression	"zend_hash_get_current_data ( ( * tmp ) -> requestParameters , ( void * * ) & param ) == SUCCESS"		1292292	0		==			
ANR	1292463	CallExpression	"zend_hash_get_current_data ( ( * tmp ) -> requestParameters , ( void * * ) & param )"		1292292	0					
ANR	1292464	Callee	zend_hash_get_current_data		1292292	0					
ANR	1292465	Identifier	zend_hash_get_current_data		1292292	0					
ANR	1292466	ArgumentList	( * tmp ) -> requestParameters		1292292	1					
ANR	1292467	Argument	( * tmp ) -> requestParameters		1292292	0					
ANR	1292468	PtrMemberAccess	( * tmp ) -> requestParameters		1292292	0					
ANR	1292469	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292470	UnaryOperator	*		1292292	0					
ANR	1292471	Identifier	tmp		1292292	1					
ANR	1292472	Identifier	requestParameters		1292292	1					
ANR	1292473	Argument	( void * * ) & param		1292292	1					
ANR	1292474	CastExpression	( void * * ) & param		1292292	0					
ANR	1292475	CastTarget	void * *		1292292	0					
ANR	1292476	UnaryOperationExpression	& param		1292292	1					
ANR	1292477	UnaryOperator	&		1292292	0					
ANR	1292478	Identifier	param		1292292	1					
ANR	1292479	Identifier	SUCCESS		1292292	1					
ANR	1292480	CompoundStatement		22:95:909:909	1292292	1					
ANR	1292481	IfStatement	if ( ( * param ) -> element )		1292292	0					
ANR	1292482	Condition	( * param ) -> element	4592:11:157319:157335	1292292	0	True				
ANR	1292483	PtrMemberAccess	( * param ) -> element		1292292	0					
ANR	1292484	UnaryOperationExpression	* param		1292292	0					
ANR	1292485	UnaryOperator	*		1292292	0					
ANR	1292486	Identifier	param		1292292	1					
ANR	1292487	Identifier	element		1292292	1					
ANR	1292488	CompoundStatement		23:30:941:941	1292292	1					
ANR	1292489	IfStatement	"if ( strcmp ( ( * param ) -> element -> name , ( char * ) node -> name ) != 0 )"		1292292	0					
ANR	1292490	Condition	"strcmp ( ( * param ) -> element -> name , ( char * ) node -> name ) != 0"	4593:12:157352:157406	1292292	0	True				
ANR	1292491	EqualityExpression	"strcmp ( ( * param ) -> element -> name , ( char * ) node -> name ) != 0"		1292292	0		!=			
ANR	1292492	CallExpression	"strcmp ( ( * param ) -> element -> name , ( char * ) node -> name )"		1292292	0					
ANR	1292493	Callee	strcmp		1292292	0					
ANR	1292494	Identifier	strcmp		1292292	0					
ANR	1292495	ArgumentList	( * param ) -> element -> name		1292292	1					
ANR	1292496	Argument	( * param ) -> element -> name		1292292	0					
ANR	1292497	PtrMemberAccess	( * param ) -> element -> name		1292292	0					
ANR	1292498	PtrMemberAccess	( * param ) -> element		1292292	0					
ANR	1292499	UnaryOperationExpression	* param		1292292	0					
ANR	1292500	UnaryOperator	*		1292292	0					
ANR	1292501	Identifier	param		1292292	1					
ANR	1292502	Identifier	element		1292292	1					
ANR	1292503	Identifier	name		1292292	1					
ANR	1292504	Argument	( char * ) node -> name		1292292	1					
ANR	1292505	CastExpression	( char * ) node -> name		1292292	0					
ANR	1292506	CastTarget	char *		1292292	0					
ANR	1292507	PtrMemberAccess	node -> name		1292292	1					
ANR	1292508	Identifier	node		1292292	0					
ANR	1292509	Identifier	name		1292292	1					
ANR	1292510	PrimaryExpression	0		1292292	1					
ANR	1292511	CompoundStatement		24:69:1012:1012	1292292	1					
ANR	1292512	ExpressionStatement	ok = 0	4594:9:157420:157426	1292292	0	True				
ANR	1292513	AssignmentExpression	ok = 0		1292292	0		=			
ANR	1292514	Identifier	ok		1292292	0					
ANR	1292515	PrimaryExpression	0		1292292	1					
ANR	1292516	BreakStatement	break ;	4595:9:157437:157442	1292292	1	True				
ANR	1292517	IfStatement	if ( ( * param ) -> element -> namens != NULL && node -> ns != NULL )		1292292	1					
ANR	1292518	Condition	( * param ) -> element -> namens != NULL && node -> ns != NULL	4597:12:157466:157518	1292292	0	True				
ANR	1292519	AndExpression	( * param ) -> element -> namens != NULL && node -> ns != NULL		1292292	0		&&			
ANR	1292520	EqualityExpression	( * param ) -> element -> namens != NULL		1292292	0		!=			
ANR	1292521	PtrMemberAccess	( * param ) -> element -> namens		1292292	0					
ANR	1292522	PtrMemberAccess	( * param ) -> element		1292292	0					
ANR	1292523	UnaryOperationExpression	* param		1292292	0					
ANR	1292524	UnaryOperator	*		1292292	0					
ANR	1292525	Identifier	param		1292292	1					
ANR	1292526	Identifier	element		1292292	1					
ANR	1292527	Identifier	namens		1292292	1					
ANR	1292528	Identifier	NULL		1292292	1					
ANR	1292529	EqualityExpression	node -> ns != NULL		1292292	1		!=			
ANR	1292530	PtrMemberAccess	node -> ns		1292292	0					
ANR	1292531	Identifier	node		1292292	0					
ANR	1292532	Identifier	ns		1292292	1					
ANR	1292533	Identifier	NULL		1292292	1					
ANR	1292534	CompoundStatement		28:67:1124:1124	1292292	1					
ANR	1292535	IfStatement	"if ( strcmp ( ( * param ) -> element -> namens , ( char * ) node -> ns -> href ) != 0 )"		1292292	0					
ANR	1292536	Condition	"strcmp ( ( * param ) -> element -> namens , ( char * ) node -> ns -> href ) != 0"	4598:13:157536:157596	1292292	0	True				
ANR	1292537	EqualityExpression	"strcmp ( ( * param ) -> element -> namens , ( char * ) node -> ns -> href ) != 0"		1292292	0		!=			
ANR	1292538	CallExpression	"strcmp ( ( * param ) -> element -> namens , ( char * ) node -> ns -> href )"		1292292	0					
ANR	1292539	Callee	strcmp		1292292	0					
ANR	1292540	Identifier	strcmp		1292292	0					
ANR	1292541	ArgumentList	( * param ) -> element -> namens		1292292	1					
ANR	1292542	Argument	( * param ) -> element -> namens		1292292	0					
ANR	1292543	PtrMemberAccess	( * param ) -> element -> namens		1292292	0					
ANR	1292544	PtrMemberAccess	( * param ) -> element		1292292	0					
ANR	1292545	UnaryOperationExpression	* param		1292292	0					
ANR	1292546	UnaryOperator	*		1292292	0					
ANR	1292547	Identifier	param		1292292	1					
ANR	1292548	Identifier	element		1292292	1					
ANR	1292549	Identifier	namens		1292292	1					
ANR	1292550	Argument	( char * ) node -> ns -> href		1292292	1					
ANR	1292551	CastExpression	( char * ) node -> ns -> href		1292292	0					
ANR	1292552	CastTarget	char *		1292292	0					
ANR	1292553	PtrMemberAccess	node -> ns -> href		1292292	1					
ANR	1292554	PtrMemberAccess	node -> ns		1292292	0					
ANR	1292555	Identifier	node		1292292	0					
ANR	1292556	Identifier	ns		1292292	1					
ANR	1292557	Identifier	href		1292292	1					
ANR	1292558	PrimaryExpression	0		1292292	1					
ANR	1292559	CompoundStatement		29:76:1202:1202	1292292	1					
ANR	1292560	ExpressionStatement	ok = 0	4599:10:157611:157617	1292292	0	True				
ANR	1292561	AssignmentExpression	ok = 0		1292292	0		=			
ANR	1292562	Identifier	ok		1292292	0					
ANR	1292563	PrimaryExpression	0		1292292	1					
ANR	1292564	BreakStatement	break ;	4600:10:157629:157634	1292292	1	True				
ANR	1292565	ElseStatement	else		1292292	0					
ANR	1292566	IfStatement	if ( ( void * ) ( * param ) -> element -> namens != ( void * ) node -> ns )		1292292	0					
ANR	1292567	Condition	( void * ) ( * param ) -> element -> namens != ( void * ) node -> ns	4602:19:157666:157716	1292292	0	True				
ANR	1292568	EqualityExpression	( void * ) ( * param ) -> element -> namens != ( void * ) node -> ns		1292292	0		!=			
ANR	1292569	CastExpression	( void * ) ( * param ) -> element -> namens		1292292	0					
ANR	1292570	CastTarget	void *		1292292	0					
ANR	1292571	PtrMemberAccess	( * param ) -> element -> namens		1292292	1					
ANR	1292572	PtrMemberAccess	( * param ) -> element		1292292	0					
ANR	1292573	UnaryOperationExpression	* param		1292292	0					
ANR	1292574	UnaryOperator	*		1292292	0					
ANR	1292575	Identifier	param		1292292	1					
ANR	1292576	Identifier	element		1292292	1					
ANR	1292577	Identifier	namens		1292292	1					
ANR	1292578	CastExpression	( void * ) node -> ns		1292292	1					
ANR	1292579	CastTarget	void *		1292292	0					
ANR	1292580	PtrMemberAccess	node -> ns		1292292	1					
ANR	1292581	Identifier	node		1292292	0					
ANR	1292582	Identifier	ns		1292292	1					
ANR	1292583	CompoundStatement		33:72:1322:1322	1292292	1					
ANR	1292584	ExpressionStatement	ok = 0	4603:9:157730:157736	1292292	0	True				
ANR	1292585	AssignmentExpression	ok = 0		1292292	0		=			
ANR	1292586	Identifier	ok		1292292	0					
ANR	1292587	PrimaryExpression	0		1292292	1					
ANR	1292588	BreakStatement	break ;	4604:9:157747:157752	1292292	1	True				
ANR	1292589	ElseStatement	else		1292292	0					
ANR	1292590	IfStatement	"if ( strcmp ( ( * param ) -> paramName , ( char * ) node -> name ) != 0 )"		1292292	0					
ANR	1292591	Condition	"strcmp ( ( * param ) -> paramName , ( char * ) node -> name ) != 0"	4606:18:157782:157832	1292292	0	True				
ANR	1292592	EqualityExpression	"strcmp ( ( * param ) -> paramName , ( char * ) node -> name ) != 0"		1292292	0		!=			
ANR	1292593	CallExpression	"strcmp ( ( * param ) -> paramName , ( char * ) node -> name )"		1292292	0					
ANR	1292594	Callee	strcmp		1292292	0					
ANR	1292595	Identifier	strcmp		1292292	0					
ANR	1292596	ArgumentList	( * param ) -> paramName		1292292	1					
ANR	1292597	Argument	( * param ) -> paramName		1292292	0					
ANR	1292598	PtrMemberAccess	( * param ) -> paramName		1292292	0					
ANR	1292599	UnaryOperationExpression	* param		1292292	0					
ANR	1292600	UnaryOperator	*		1292292	0					
ANR	1292601	Identifier	param		1292292	1					
ANR	1292602	Identifier	paramName		1292292	1					
ANR	1292603	Argument	( char * ) node -> name		1292292	1					
ANR	1292604	CastExpression	( char * ) node -> name		1292292	0					
ANR	1292605	CastTarget	char *		1292292	0					
ANR	1292606	PtrMemberAccess	node -> name		1292292	1					
ANR	1292607	Identifier	node		1292292	0					
ANR	1292608	Identifier	name		1292292	1					
ANR	1292609	PrimaryExpression	0		1292292	1					
ANR	1292610	CompoundStatement		37:71:1438:1438	1292292	1					
ANR	1292611	ExpressionStatement	ok = 0	4607:8:157845:157851	1292292	0	True				
ANR	1292612	AssignmentExpression	ok = 0		1292292	0		=			
ANR	1292613	Identifier	ok		1292292	0					
ANR	1292614	PrimaryExpression	0		1292292	1					
ANR	1292615	BreakStatement	break ;	4608:8:157861:157866	1292292	1	True				
ANR	1292616	ExpressionStatement	zend_hash_move_forward ( ( * tmp ) -> requestParameters )	4610:7:157884:157933	1292292	1	True				
ANR	1292617	CallExpression	zend_hash_move_forward ( ( * tmp ) -> requestParameters )		1292292	0					
ANR	1292618	Callee	zend_hash_move_forward		1292292	0					
ANR	1292619	Identifier	zend_hash_move_forward		1292292	0					
ANR	1292620	ArgumentList	( * tmp ) -> requestParameters		1292292	1					
ANR	1292621	Argument	( * tmp ) -> requestParameters		1292292	0					
ANR	1292622	PtrMemberAccess	( * tmp ) -> requestParameters		1292292	0					
ANR	1292623	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292624	UnaryOperator	*		1292292	0					
ANR	1292625	Identifier	tmp		1292292	1					
ANR	1292626	Identifier	requestParameters		1292292	1					
ANR	1292627	ExpressionStatement	node = node -> next	4611:7:157942:157959	1292292	2	True				
ANR	1292628	AssignmentExpression	node = node -> next		1292292	0		=			
ANR	1292629	Identifier	node		1292292	0					
ANR	1292630	PtrMemberAccess	node -> next		1292292	1					
ANR	1292631	Identifier	node		1292292	0					
ANR	1292632	Identifier	next		1292292	1					
ANR	1292633	IfStatement	if ( ok )		1292292	4					
ANR	1292634	Condition	ok	4613:10:157979:157980	1292292	0	True				
ANR	1292635	Identifier	ok		1292292	0					
ANR	1292636	CompoundStatement		44:34:1606:1606	1292292	1					
ANR	1292637	ReturnStatement	return ( * tmp ) ;	4614:7:158012:158025	1292292	0	True				
ANR	1292638	UnaryOperationExpression	* tmp		1292292	0					
ANR	1292639	UnaryOperator	*		1292292	0					
ANR	1292640	Identifier	tmp		1292292	1					
ANR	1292641	ExpressionStatement	zend_hash_move_forward ( & sdl -> functions )	4619:3:158056:158095	1292292	1	True				
ANR	1292642	CallExpression	zend_hash_move_forward ( & sdl -> functions )		1292292	0					
ANR	1292643	Callee	zend_hash_move_forward		1292292	0					
ANR	1292644	Identifier	zend_hash_move_forward		1292292	0					
ANR	1292645	ArgumentList	& sdl -> functions		1292292	1					
ANR	1292646	Argument	& sdl -> functions		1292292	0					
ANR	1292647	UnaryOperationExpression	& sdl -> functions		1292292	0					
ANR	1292648	UnaryOperator	&		1292292	0					
ANR	1292649	PtrMemberAccess	sdl -> functions		1292292	1					
ANR	1292650	Identifier	sdl		1292292	0					
ANR	1292651	Identifier	functions		1292292	1					
ANR	1292652	ReturnStatement	return NULL ;	4622:1:158105:158116	1292292	1	True				
ANR	1292653	Identifier	NULL		1292292	0					
ANR	1292654	ReturnType	static sdlFunctionPtr		1292292	1					
ANR	1292655	Identifier	get_doc_function		1292292	2					
ANR	1292656	ParameterList	"sdlPtr sdl , xmlNodePtr params"		1292292	3					
ANR	1292657	Parameter	sdlPtr sdl	4569:39:156365:156374	1292292	0	True				
ANR	1292658	ParameterType	sdlPtr		1292292	0					
ANR	1292659	Identifier	sdl		1292292	1					
ANR	1292660	Parameter	xmlNodePtr params	4569:51:156377:156393	1292292	1	True				
ANR	1292661	ParameterType	xmlNodePtr		1292292	0					
ANR	1292662	Identifier	params		1292292	1					
ANR	1292663	CFGEntryNode	ENTRY		1292292		True				
ANR	1292664	CFGExitNode	EXIT		1292292		True				
ANR	1292665	Symbol	* tmp		1292292						
ANR	1292666	Symbol	node -> ns		1292292						
ANR	1292667	Symbol	( * param ) -> element -> namens		1292292						
ANR	1292668	Symbol	( * param ) -> element		1292292						
ANR	1292669	Symbol	& param		1292292						
ANR	1292670	Symbol	* ( * param ) -> element		1292292						
ANR	1292671	Symbol	( * param ) -> element -> name		1292292						
ANR	1292672	Symbol	* ( * tmp ) -> binding		1292292						
ANR	1292673	Symbol	& sdl -> functions		1292292						
ANR	1292674	Symbol	BINDING_SOAP		1292292						
ANR	1292675	Symbol	zend_hash_get_current_data		1292292						
ANR	1292676	Symbol	( * tmp ) -> bindingAttributes		1292292						
ANR	1292677	Symbol	param		1292292						
ANR	1292678	Symbol	* * * tmp		1292292						
ANR	1292679	Symbol	tmp		1292292						
ANR	1292680	Symbol	* node		1292292						
ANR	1292681	Symbol	fnb		1292292						
ANR	1292682	Symbol	ok		1292292						
ANR	1292683	Symbol	( * param ) -> paramName		1292292						
ANR	1292684	Symbol	* node -> ns		1292292						
ANR	1292685	Symbol	strcmp		1292292						
ANR	1292686	Symbol	( * tmp ) -> binding		1292292						
ANR	1292687	Symbol	SUCCESS		1292292						
ANR	1292688	Symbol	NULL		1292292						
ANR	1292689	Symbol	zend_hash_num_elements		1292292						
ANR	1292690	Symbol	( * tmp ) -> requestParameters		1292292						
ANR	1292691	Symbol	* * * param		1292292						
ANR	1292692	Symbol	* * tmp		1292292						
ANR	1292693	Symbol	node -> next		1292292						
ANR	1292694	Symbol	params		1292292						
ANR	1292695	Symbol	* param		1292292						
ANR	1292696	Symbol	node		1292292						
ANR	1292697	Symbol	node -> name		1292292						
ANR	1292698	Symbol	* * node		1292292						
ANR	1292699	Symbol	SOAP_DOCUMENT		1292292						
ANR	1292700	Symbol	* * param		1292292						
ANR	1292701	Symbol	sdl		1292292						
ANR	1292702	Symbol	& tmp		1292292						
ANR	1292703	Symbol	node -> ns -> href		1292292						
ANR	1292704	Symbol	* fnb		1292292						
ANR	1292705	Symbol	fnb -> style		1292292						
ANR	1292706	Symbol	( * tmp ) -> binding -> bindingType		1292292						
ANR	1292707	Function	function_to_string	4625:0:158121:160524							
ANR	1292708	FunctionDef	"function_to_string (sdlFunctionPtr function , smart_str * buf)"		1292707	0					
ANR	1292709	CompoundStatement		4626:0:158193:160524	1292707	0					
ANR	1292710	IdentifierDeclStatement	int i = 0 ;	4627:1:158196:158205	1292707	0	True				
ANR	1292711	IdentifierDecl	i = 0		1292707	0					
ANR	1292712	IdentifierDeclType	int		1292707	0					
ANR	1292713	Identifier	i		1292707	1					
ANR	1292714	AssignmentExpression	i = 0		1292707	2		=			
ANR	1292715	Identifier	i		1292707	0					
ANR	1292716	PrimaryExpression	0		1292707	1					
ANR	1292717	IdentifierDeclStatement	HashPosition pos ;	4628:1:158208:158224	1292707	1	True				
ANR	1292718	IdentifierDecl	pos		1292707	0					
ANR	1292719	IdentifierDeclType	HashPosition		1292707	0					
ANR	1292720	Identifier	pos		1292707	1					
ANR	1292721	IdentifierDeclStatement	sdlParamPtr * param ;	4629:1:158227:158245	1292707	2	True				
ANR	1292722	IdentifierDecl	* param		1292707	0					
ANR	1292723	IdentifierDeclType	sdlParamPtr *		1292707	0					
ANR	1292724	Identifier	param		1292707	1					
ANR	1292725	IfStatement	if ( function -> responseParameters && zend_hash_num_elements ( function -> responseParameters ) > 0 )		1292707	3					
ANR	1292726	Condition	function -> responseParameters && zend_hash_num_elements ( function -> responseParameters ) > 0	4631:5:158253:158345	1292707	0	True				
ANR	1292727	AndExpression	function -> responseParameters && zend_hash_num_elements ( function -> responseParameters ) > 0		1292707	0		&&			
ANR	1292728	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1292729	Identifier	function		1292707	0					
ANR	1292730	Identifier	responseParameters		1292707	1					
ANR	1292731	RelationalExpression	zend_hash_num_elements ( function -> responseParameters ) > 0		1292707	1		>			
ANR	1292732	CallExpression	zend_hash_num_elements ( function -> responseParameters )		1292707	0					
ANR	1292733	Callee	zend_hash_num_elements		1292707	0					
ANR	1292734	Identifier	zend_hash_num_elements		1292707	0					
ANR	1292735	ArgumentList	function -> responseParameters		1292707	1					
ANR	1292736	Argument	function -> responseParameters		1292707	0					
ANR	1292737	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1292738	Identifier	function		1292707	0					
ANR	1292739	Identifier	responseParameters		1292707	1					
ANR	1292740	PrimaryExpression	0		1292707	1					
ANR	1292741	CompoundStatement		7:63:154:154	1292707	1					
ANR	1292742	IfStatement	if ( zend_hash_num_elements ( function -> responseParameters ) == 1 )		1292707	0					
ANR	1292743	Condition	zend_hash_num_elements ( function -> responseParameters ) == 1	4633:6:158356:158412	1292707	0	True				
ANR	1292744	EqualityExpression	zend_hash_num_elements ( function -> responseParameters ) == 1		1292707	0		==			
ANR	1292745	CallExpression	zend_hash_num_elements ( function -> responseParameters )		1292707	0					
ANR	1292746	Callee	zend_hash_num_elements		1292707	0					
ANR	1292747	Identifier	zend_hash_num_elements		1292707	0					
ANR	1292748	ArgumentList	function -> responseParameters		1292707	1					
ANR	1292749	Argument	function -> responseParameters		1292707	0					
ANR	1292750	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1292751	Identifier	function		1292707	0					
ANR	1292752	Identifier	responseParameters		1292707	1					
ANR	1292753	PrimaryExpression	1		1292707	1					
ANR	1292754	CompoundStatement		8:65:221:221	1292707	1					
ANR	1292755	ExpressionStatement	zend_hash_internal_pointer_reset ( function -> responseParameters )	4634:3:158420:158482	1292707	0	True				
ANR	1292756	CallExpression	zend_hash_internal_pointer_reset ( function -> responseParameters )		1292707	0					
ANR	1292757	Callee	zend_hash_internal_pointer_reset		1292707	0					
ANR	1292758	Identifier	zend_hash_internal_pointer_reset		1292707	0					
ANR	1292759	ArgumentList	function -> responseParameters		1292707	1					
ANR	1292760	Argument	function -> responseParameters		1292707	0					
ANR	1292761	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1292762	Identifier	function		1292707	0					
ANR	1292763	Identifier	responseParameters		1292707	1					
ANR	1292764	ExpressionStatement	"zend_hash_get_current_data ( function -> responseParameters , ( void * * ) & param )"	4635:3:158487:158559	1292707	1	True				
ANR	1292765	CallExpression	"zend_hash_get_current_data ( function -> responseParameters , ( void * * ) & param )"		1292707	0					
ANR	1292766	Callee	zend_hash_get_current_data		1292707	0					
ANR	1292767	Identifier	zend_hash_get_current_data		1292707	0					
ANR	1292768	ArgumentList	function -> responseParameters		1292707	1					
ANR	1292769	Argument	function -> responseParameters		1292707	0					
ANR	1292770	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1292771	Identifier	function		1292707	0					
ANR	1292772	Identifier	responseParameters		1292707	1					
ANR	1292773	Argument	( void * * ) & param		1292707	1					
ANR	1292774	CastExpression	( void * * ) & param		1292707	0					
ANR	1292775	CastTarget	void * *		1292707	0					
ANR	1292776	UnaryOperationExpression	& param		1292707	1					
ANR	1292777	UnaryOperator	&		1292707	0					
ANR	1292778	Identifier	param		1292707	1					
ANR	1292779	IfStatement	if ( ( * param ) -> encode && ( * param ) -> encode -> details . type_str )		1292707	2					
ANR	1292780	Condition	( * param ) -> encode && ( * param ) -> encode -> details . type_str	4636:7:158568:158621	1292707	0	True				
ANR	1292781	AndExpression	( * param ) -> encode && ( * param ) -> encode -> details . type_str		1292707	0		&&			
ANR	1292782	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292783	UnaryOperationExpression	* param		1292707	0					
ANR	1292784	UnaryOperator	*		1292707	0					
ANR	1292785	Identifier	param		1292707	1					
ANR	1292786	Identifier	encode		1292707	1					
ANR	1292787	MemberAccess	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1292788	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1292789	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292790	UnaryOperationExpression	* param		1292707	0					
ANR	1292791	UnaryOperator	*		1292707	0					
ANR	1292792	Identifier	param		1292707	1					
ANR	1292793	Identifier	encode		1292707	1					
ANR	1292794	Identifier	details		1292707	1					
ANR	1292795	Identifier	type_str		1292707	1					
ANR	1292796	CompoundStatement		11:63:430:430	1292707	1					
ANR	1292797	ExpressionStatement	"smart_str_appendl ( buf , ( * param ) -> encode -> details . type_str , strlen ( ( * param ) -> encode -> details . type_str ) )"	4637:4:158630:158732	1292707	0	True				
ANR	1292798	CallExpression	"smart_str_appendl ( buf , ( * param ) -> encode -> details . type_str , strlen ( ( * param ) -> encode -> details . type_str ) )"		1292707	0					
ANR	1292799	Callee	smart_str_appendl		1292707	0					
ANR	1292800	Identifier	smart_str_appendl		1292707	0					
ANR	1292801	ArgumentList	buf		1292707	1					
ANR	1292802	Argument	buf		1292707	0					
ANR	1292803	Identifier	buf		1292707	0					
ANR	1292804	Argument	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1292805	MemberAccess	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1292806	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1292807	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292808	UnaryOperationExpression	* param		1292707	0					
ANR	1292809	UnaryOperator	*		1292707	0					
ANR	1292810	Identifier	param		1292707	1					
ANR	1292811	Identifier	encode		1292707	1					
ANR	1292812	Identifier	details		1292707	1					
ANR	1292813	Identifier	type_str		1292707	1					
ANR	1292814	Argument	strlen ( ( * param ) -> encode -> details . type_str )		1292707	2					
ANR	1292815	CallExpression	strlen ( ( * param ) -> encode -> details . type_str )		1292707	0					
ANR	1292816	Callee	strlen		1292707	0					
ANR	1292817	Identifier	strlen		1292707	0					
ANR	1292818	ArgumentList	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1292819	Argument	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1292820	MemberAccess	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1292821	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1292822	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292823	UnaryOperationExpression	* param		1292707	0					
ANR	1292824	UnaryOperator	*		1292707	0					
ANR	1292825	Identifier	param		1292707	1					
ANR	1292826	Identifier	encode		1292707	1					
ANR	1292827	Identifier	details		1292707	1					
ANR	1292828	Identifier	type_str		1292707	1					
ANR	1292829	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4638:4:158738:158765	1292707	1	True				
ANR	1292830	CallExpression	"smart_str_appendc ( buf , ' ' )"		1292707	0					
ANR	1292831	Callee	smart_str_appendc		1292707	0					
ANR	1292832	Identifier	smart_str_appendc		1292707	0					
ANR	1292833	ArgumentList	buf		1292707	1					
ANR	1292834	Argument	buf		1292707	0					
ANR	1292835	Identifier	buf		1292707	0					
ANR	1292836	Argument	' '		1292707	1					
ANR	1292837	PrimaryExpression	' '		1292707	0					
ANR	1292838	ElseStatement	else		1292707	0					
ANR	1292839	CompoundStatement		14:10:583:583	1292707	0					
ANR	1292840	ExpressionStatement	"smart_str_appendl ( buf , ""UNKNOWN "" , 8 )"	4640:4:158783:158820	1292707	0	True				
ANR	1292841	CallExpression	"smart_str_appendl ( buf , ""UNKNOWN "" , 8 )"		1292707	0					
ANR	1292842	Callee	smart_str_appendl		1292707	0					
ANR	1292843	Identifier	smart_str_appendl		1292707	0					
ANR	1292844	ArgumentList	buf		1292707	1					
ANR	1292845	Argument	buf		1292707	0					
ANR	1292846	Identifier	buf		1292707	0					
ANR	1292847	Argument	"""UNKNOWN """		1292707	1					
ANR	1292848	PrimaryExpression	"""UNKNOWN """		1292707	0					
ANR	1292849	Argument	8		1292707	2					
ANR	1292850	PrimaryExpression	8		1292707	0					
ANR	1292851	ElseStatement	else		1292707	0					
ANR	1292852	CompoundStatement		17:9:642:642	1292707	0					
ANR	1292853	ExpressionStatement	i = 0	4643:3:158841:158846	1292707	0	True				
ANR	1292854	AssignmentExpression	i = 0		1292707	0		=			
ANR	1292855	Identifier	i		1292707	0					
ANR	1292856	PrimaryExpression	0		1292707	1					
ANR	1292857	ExpressionStatement	"smart_str_appendl ( buf , ""list("" , 5 )"	4644:3:158851:158885	1292707	1	True				
ANR	1292858	CallExpression	"smart_str_appendl ( buf , ""list("" , 5 )"		1292707	0					
ANR	1292859	Callee	smart_str_appendl		1292707	0					
ANR	1292860	Identifier	smart_str_appendl		1292707	0					
ANR	1292861	ArgumentList	buf		1292707	1					
ANR	1292862	Argument	buf		1292707	0					
ANR	1292863	Identifier	buf		1292707	0					
ANR	1292864	Argument	"""list("""		1292707	1					
ANR	1292865	PrimaryExpression	"""list("""		1292707	0					
ANR	1292866	Argument	5		1292707	2					
ANR	1292867	PrimaryExpression	5		1292707	0					
ANR	1292868	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( function -> responseParameters , & pos )"	4645:3:158890:158961	1292707	2	True				
ANR	1292869	CallExpression	"zend_hash_internal_pointer_reset_ex ( function -> responseParameters , & pos )"		1292707	0					
ANR	1292870	Callee	zend_hash_internal_pointer_reset_ex		1292707	0					
ANR	1292871	Identifier	zend_hash_internal_pointer_reset_ex		1292707	0					
ANR	1292872	ArgumentList	function -> responseParameters		1292707	1					
ANR	1292873	Argument	function -> responseParameters		1292707	0					
ANR	1292874	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1292875	Identifier	function		1292707	0					
ANR	1292876	Identifier	responseParameters		1292707	1					
ANR	1292877	Argument	& pos		1292707	1					
ANR	1292878	UnaryOperationExpression	& pos		1292707	0					
ANR	1292879	UnaryOperator	&		1292707	0					
ANR	1292880	Identifier	pos		1292707	1					
ANR	1292881	WhileStatement	"while ( zend_hash_get_current_data_ex ( function -> responseParameters , ( void * * ) & param , & pos ) != FAILURE )"		1292707	3					
ANR	1292882	Condition	"zend_hash_get_current_data_ex ( function -> responseParameters , ( void * * ) & param , & pos ) != FAILURE"	4646:10:158973:159065	1292707	0	True				
ANR	1292883	EqualityExpression	"zend_hash_get_current_data_ex ( function -> responseParameters , ( void * * ) & param , & pos ) != FAILURE"		1292707	0		!=			
ANR	1292884	CallExpression	"zend_hash_get_current_data_ex ( function -> responseParameters , ( void * * ) & param , & pos )"		1292707	0					
ANR	1292885	Callee	zend_hash_get_current_data_ex		1292707	0					
ANR	1292886	Identifier	zend_hash_get_current_data_ex		1292707	0					
ANR	1292887	ArgumentList	function -> responseParameters		1292707	1					
ANR	1292888	Argument	function -> responseParameters		1292707	0					
ANR	1292889	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1292890	Identifier	function		1292707	0					
ANR	1292891	Identifier	responseParameters		1292707	1					
ANR	1292892	Argument	( void * * ) & param		1292707	1					
ANR	1292893	CastExpression	( void * * ) & param		1292707	0					
ANR	1292894	CastTarget	void * *		1292707	0					
ANR	1292895	UnaryOperationExpression	& param		1292707	1					
ANR	1292896	UnaryOperator	&		1292707	0					
ANR	1292897	Identifier	param		1292707	1					
ANR	1292898	Argument	& pos		1292707	2					
ANR	1292899	UnaryOperationExpression	& pos		1292707	0					
ANR	1292900	UnaryOperator	&		1292707	0					
ANR	1292901	Identifier	pos		1292707	1					
ANR	1292902	Identifier	FAILURE		1292707	1					
ANR	1292903	CompoundStatement		21:105:874:874	1292707	1					
ANR	1292904	IfStatement	if ( i > 0 )		1292707	0					
ANR	1292905	Condition	i > 0	4647:8:159078:159082	1292707	0	True				
ANR	1292906	RelationalExpression	i > 0		1292707	0		>			
ANR	1292907	Identifier	i		1292707	0					
ANR	1292908	PrimaryExpression	0		1292707	1					
ANR	1292909	CompoundStatement		22:15:891:891	1292707	1					
ANR	1292910	ExpressionStatement	"smart_str_appendl ( buf , "", "" , 2 )"	4648:5:159092:159123	1292707	0	True				
ANR	1292911	CallExpression	"smart_str_appendl ( buf , "", "" , 2 )"		1292707	0					
ANR	1292912	Callee	smart_str_appendl		1292707	0					
ANR	1292913	Identifier	smart_str_appendl		1292707	0					
ANR	1292914	ArgumentList	buf		1292707	1					
ANR	1292915	Argument	buf		1292707	0					
ANR	1292916	Identifier	buf		1292707	0					
ANR	1292917	Argument	""", """		1292707	1					
ANR	1292918	PrimaryExpression	""", """		1292707	0					
ANR	1292919	Argument	2		1292707	2					
ANR	1292920	PrimaryExpression	2		1292707	0					
ANR	1292921	IfStatement	if ( ( * param ) -> encode && ( * param ) -> encode -> details . type_str )		1292707	1					
ANR	1292922	Condition	( * param ) -> encode && ( * param ) -> encode -> details . type_str	4650:8:159139:159192	1292707	0	True				
ANR	1292923	AndExpression	( * param ) -> encode && ( * param ) -> encode -> details . type_str		1292707	0		&&			
ANR	1292924	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292925	UnaryOperationExpression	* param		1292707	0					
ANR	1292926	UnaryOperator	*		1292707	0					
ANR	1292927	Identifier	param		1292707	1					
ANR	1292928	Identifier	encode		1292707	1					
ANR	1292929	MemberAccess	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1292930	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1292931	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292932	UnaryOperationExpression	* param		1292707	0					
ANR	1292933	UnaryOperator	*		1292707	0					
ANR	1292934	Identifier	param		1292707	1					
ANR	1292935	Identifier	encode		1292707	1					
ANR	1292936	Identifier	details		1292707	1					
ANR	1292937	Identifier	type_str		1292707	1					
ANR	1292938	CompoundStatement		25:64:1001:1001	1292707	1					
ANR	1292939	ExpressionStatement	"smart_str_appendl ( buf , ( * param ) -> encode -> details . type_str , strlen ( ( * param ) -> encode -> details . type_str ) )"	4651:5:159202:159304	1292707	0	True				
ANR	1292940	CallExpression	"smart_str_appendl ( buf , ( * param ) -> encode -> details . type_str , strlen ( ( * param ) -> encode -> details . type_str ) )"		1292707	0					
ANR	1292941	Callee	smart_str_appendl		1292707	0					
ANR	1292942	Identifier	smart_str_appendl		1292707	0					
ANR	1292943	ArgumentList	buf		1292707	1					
ANR	1292944	Argument	buf		1292707	0					
ANR	1292945	Identifier	buf		1292707	0					
ANR	1292946	Argument	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1292947	MemberAccess	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1292948	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1292949	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292950	UnaryOperationExpression	* param		1292707	0					
ANR	1292951	UnaryOperator	*		1292707	0					
ANR	1292952	Identifier	param		1292707	1					
ANR	1292953	Identifier	encode		1292707	1					
ANR	1292954	Identifier	details		1292707	1					
ANR	1292955	Identifier	type_str		1292707	1					
ANR	1292956	Argument	strlen ( ( * param ) -> encode -> details . type_str )		1292707	2					
ANR	1292957	CallExpression	strlen ( ( * param ) -> encode -> details . type_str )		1292707	0					
ANR	1292958	Callee	strlen		1292707	0					
ANR	1292959	Identifier	strlen		1292707	0					
ANR	1292960	ArgumentList	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1292961	Argument	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1292962	MemberAccess	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1292963	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1292964	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1292965	UnaryOperationExpression	* param		1292707	0					
ANR	1292966	UnaryOperator	*		1292707	0					
ANR	1292967	Identifier	param		1292707	1					
ANR	1292968	Identifier	encode		1292707	1					
ANR	1292969	Identifier	details		1292707	1					
ANR	1292970	Identifier	type_str		1292707	1					
ANR	1292971	ElseStatement	else		1292707	0					
ANR	1292972	CompoundStatement		27:11:1123:1123	1292707	0					
ANR	1292973	ExpressionStatement	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"	4653:5:159324:159360	1292707	0	True				
ANR	1292974	CallExpression	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"		1292707	0					
ANR	1292975	Callee	smart_str_appendl		1292707	0					
ANR	1292976	Identifier	smart_str_appendl		1292707	0					
ANR	1292977	ArgumentList	buf		1292707	1					
ANR	1292978	Argument	buf		1292707	0					
ANR	1292979	Identifier	buf		1292707	0					
ANR	1292980	Argument	"""UNKNOWN"""		1292707	1					
ANR	1292981	PrimaryExpression	"""UNKNOWN"""		1292707	0					
ANR	1292982	Argument	7		1292707	2					
ANR	1292983	PrimaryExpression	7		1292707	0					
ANR	1292984	ExpressionStatement	"smart_str_appendl ( buf , "" $"" , 2 )"	4655:4:159372:159403	1292707	2	True				
ANR	1292985	CallExpression	"smart_str_appendl ( buf , "" $"" , 2 )"		1292707	0					
ANR	1292986	Callee	smart_str_appendl		1292707	0					
ANR	1292987	Identifier	smart_str_appendl		1292707	0					
ANR	1292988	ArgumentList	buf		1292707	1					
ANR	1292989	Argument	buf		1292707	0					
ANR	1292990	Identifier	buf		1292707	0					
ANR	1292991	Argument	""" $"""		1292707	1					
ANR	1292992	PrimaryExpression	""" $"""		1292707	0					
ANR	1292993	Argument	2		1292707	2					
ANR	1292994	PrimaryExpression	2		1292707	0					
ANR	1292995	ExpressionStatement	"smart_str_appendl ( buf , ( * param ) -> paramName , strlen ( ( * param ) -> paramName ) )"	4656:4:159409:159481	1292707	3	True				
ANR	1292996	CallExpression	"smart_str_appendl ( buf , ( * param ) -> paramName , strlen ( ( * param ) -> paramName ) )"		1292707	0					
ANR	1292997	Callee	smart_str_appendl		1292707	0					
ANR	1292998	Identifier	smart_str_appendl		1292707	0					
ANR	1292999	ArgumentList	buf		1292707	1					
ANR	1293000	Argument	buf		1292707	0					
ANR	1293001	Identifier	buf		1292707	0					
ANR	1293002	Argument	( * param ) -> paramName		1292707	1					
ANR	1293003	PtrMemberAccess	( * param ) -> paramName		1292707	0					
ANR	1293004	UnaryOperationExpression	* param		1292707	0					
ANR	1293005	UnaryOperator	*		1292707	0					
ANR	1293006	Identifier	param		1292707	1					
ANR	1293007	Identifier	paramName		1292707	1					
ANR	1293008	Argument	strlen ( ( * param ) -> paramName )		1292707	2					
ANR	1293009	CallExpression	strlen ( ( * param ) -> paramName )		1292707	0					
ANR	1293010	Callee	strlen		1292707	0					
ANR	1293011	Identifier	strlen		1292707	0					
ANR	1293012	ArgumentList	( * param ) -> paramName		1292707	1					
ANR	1293013	Argument	( * param ) -> paramName		1292707	0					
ANR	1293014	PtrMemberAccess	( * param ) -> paramName		1292707	0					
ANR	1293015	UnaryOperationExpression	* param		1292707	0					
ANR	1293016	UnaryOperator	*		1292707	0					
ANR	1293017	Identifier	param		1292707	1					
ANR	1293018	Identifier	paramName		1292707	1					
ANR	1293019	ExpressionStatement	"zend_hash_move_forward_ex ( function -> responseParameters , & pos )"	4657:4:159487:159548	1292707	4	True				
ANR	1293020	CallExpression	"zend_hash_move_forward_ex ( function -> responseParameters , & pos )"		1292707	0					
ANR	1293021	Callee	zend_hash_move_forward_ex		1292707	0					
ANR	1293022	Identifier	zend_hash_move_forward_ex		1292707	0					
ANR	1293023	ArgumentList	function -> responseParameters		1292707	1					
ANR	1293024	Argument	function -> responseParameters		1292707	0					
ANR	1293025	PtrMemberAccess	function -> responseParameters		1292707	0					
ANR	1293026	Identifier	function		1292707	0					
ANR	1293027	Identifier	responseParameters		1292707	1					
ANR	1293028	Argument	& pos		1292707	1					
ANR	1293029	UnaryOperationExpression	& pos		1292707	0					
ANR	1293030	UnaryOperator	&		1292707	0					
ANR	1293031	Identifier	pos		1292707	1					
ANR	1293032	ExpressionStatement	i ++	4658:4:159554:159557	1292707	5	True				
ANR	1293033	PostIncDecOperationExpression	i ++		1292707	0					
ANR	1293034	Identifier	i		1292707	0					
ANR	1293035	IncDec	++		1292707	1					
ANR	1293036	ExpressionStatement	"smart_str_appendl ( buf , "") "" , 2 )"	4660:3:159567:159598	1292707	4	True				
ANR	1293037	CallExpression	"smart_str_appendl ( buf , "") "" , 2 )"		1292707	0					
ANR	1293038	Callee	smart_str_appendl		1292707	0					
ANR	1293039	Identifier	smart_str_appendl		1292707	0					
ANR	1293040	ArgumentList	buf		1292707	1					
ANR	1293041	Argument	buf		1292707	0					
ANR	1293042	Identifier	buf		1292707	0					
ANR	1293043	Argument	""") """		1292707	1					
ANR	1293044	PrimaryExpression	""") """		1292707	0					
ANR	1293045	Argument	2		1292707	2					
ANR	1293046	PrimaryExpression	2		1292707	0					
ANR	1293047	ElseStatement	else		1292707	0					
ANR	1293048	CompoundStatement		37:8:1418:1418	1292707	0					
ANR	1293049	ExpressionStatement	"smart_str_appendl ( buf , ""void "" , 5 )"	4663:2:159616:159650	1292707	0	True				
ANR	1293050	CallExpression	"smart_str_appendl ( buf , ""void "" , 5 )"		1292707	0					
ANR	1293051	Callee	smart_str_appendl		1292707	0					
ANR	1293052	Identifier	smart_str_appendl		1292707	0					
ANR	1293053	ArgumentList	buf		1292707	1					
ANR	1293054	Argument	buf		1292707	0					
ANR	1293055	Identifier	buf		1292707	0					
ANR	1293056	Argument	"""void """		1292707	1					
ANR	1293057	PrimaryExpression	"""void """		1292707	0					
ANR	1293058	Argument	5		1292707	2					
ANR	1293059	PrimaryExpression	5		1292707	0					
ANR	1293060	ExpressionStatement	"smart_str_appendl ( buf , function -> functionName , strlen ( function -> functionName ) )"	4666:1:159657:159735	1292707	4	True				
ANR	1293061	CallExpression	"smart_str_appendl ( buf , function -> functionName , strlen ( function -> functionName ) )"		1292707	0					
ANR	1293062	Callee	smart_str_appendl		1292707	0					
ANR	1293063	Identifier	smart_str_appendl		1292707	0					
ANR	1293064	ArgumentList	buf		1292707	1					
ANR	1293065	Argument	buf		1292707	0					
ANR	1293066	Identifier	buf		1292707	0					
ANR	1293067	Argument	function -> functionName		1292707	1					
ANR	1293068	PtrMemberAccess	function -> functionName		1292707	0					
ANR	1293069	Identifier	function		1292707	0					
ANR	1293070	Identifier	functionName		1292707	1					
ANR	1293071	Argument	strlen ( function -> functionName )		1292707	2					
ANR	1293072	CallExpression	strlen ( function -> functionName )		1292707	0					
ANR	1293073	Callee	strlen		1292707	0					
ANR	1293074	Identifier	strlen		1292707	0					
ANR	1293075	ArgumentList	function -> functionName		1292707	1					
ANR	1293076	Argument	function -> functionName		1292707	0					
ANR	1293077	PtrMemberAccess	function -> functionName		1292707	0					
ANR	1293078	Identifier	function		1292707	0					
ANR	1293079	Identifier	functionName		1292707	1					
ANR	1293080	ExpressionStatement	"smart_str_appendc ( buf , '(' )"	4668:1:159739:159766	1292707	5	True				
ANR	1293081	CallExpression	"smart_str_appendc ( buf , '(' )"		1292707	0					
ANR	1293082	Callee	smart_str_appendc		1292707	0					
ANR	1293083	Identifier	smart_str_appendc		1292707	0					
ANR	1293084	ArgumentList	buf		1292707	1					
ANR	1293085	Argument	buf		1292707	0					
ANR	1293086	Identifier	buf		1292707	0					
ANR	1293087	Argument	'('		1292707	1					
ANR	1293088	PrimaryExpression	'('		1292707	0					
ANR	1293089	IfStatement	if ( function -> requestParameters )		1292707	6					
ANR	1293090	Condition	function -> requestParameters	4669:5:159773:159799	1292707	0	True				
ANR	1293091	PtrMemberAccess	function -> requestParameters		1292707	0					
ANR	1293092	Identifier	function		1292707	0					
ANR	1293093	Identifier	requestParameters		1292707	1					
ANR	1293094	CompoundStatement		44:34:1608:1608	1292707	1					
ANR	1293095	ExpressionStatement	i = 0	4670:2:159806:159811	1292707	0	True				
ANR	1293096	AssignmentExpression	i = 0		1292707	0		=			
ANR	1293097	Identifier	i		1292707	0					
ANR	1293098	PrimaryExpression	0		1292707	1					
ANR	1293099	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( function -> requestParameters , & pos )"	4671:2:159815:159885	1292707	1	True				
ANR	1293100	CallExpression	"zend_hash_internal_pointer_reset_ex ( function -> requestParameters , & pos )"		1292707	0					
ANR	1293101	Callee	zend_hash_internal_pointer_reset_ex		1292707	0					
ANR	1293102	Identifier	zend_hash_internal_pointer_reset_ex		1292707	0					
ANR	1293103	ArgumentList	function -> requestParameters		1292707	1					
ANR	1293104	Argument	function -> requestParameters		1292707	0					
ANR	1293105	PtrMemberAccess	function -> requestParameters		1292707	0					
ANR	1293106	Identifier	function		1292707	0					
ANR	1293107	Identifier	requestParameters		1292707	1					
ANR	1293108	Argument	& pos		1292707	1					
ANR	1293109	UnaryOperationExpression	& pos		1292707	0					
ANR	1293110	UnaryOperator	&		1292707	0					
ANR	1293111	Identifier	pos		1292707	1					
ANR	1293112	WhileStatement	"while ( zend_hash_get_current_data_ex ( function -> requestParameters , ( void * * ) & param , & pos ) != FAILURE )"		1292707	2					
ANR	1293113	Condition	"zend_hash_get_current_data_ex ( function -> requestParameters , ( void * * ) & param , & pos ) != FAILURE"	4672:9:159896:159987	1292707	0	True				
ANR	1293114	EqualityExpression	"zend_hash_get_current_data_ex ( function -> requestParameters , ( void * * ) & param , & pos ) != FAILURE"		1292707	0		!=			
ANR	1293115	CallExpression	"zend_hash_get_current_data_ex ( function -> requestParameters , ( void * * ) & param , & pos )"		1292707	0					
ANR	1293116	Callee	zend_hash_get_current_data_ex		1292707	0					
ANR	1293117	Identifier	zend_hash_get_current_data_ex		1292707	0					
ANR	1293118	ArgumentList	function -> requestParameters		1292707	1					
ANR	1293119	Argument	function -> requestParameters		1292707	0					
ANR	1293120	PtrMemberAccess	function -> requestParameters		1292707	0					
ANR	1293121	Identifier	function		1292707	0					
ANR	1293122	Identifier	requestParameters		1292707	1					
ANR	1293123	Argument	( void * * ) & param		1292707	1					
ANR	1293124	CastExpression	( void * * ) & param		1292707	0					
ANR	1293125	CastTarget	void * *		1292707	0					
ANR	1293126	UnaryOperationExpression	& param		1292707	1					
ANR	1293127	UnaryOperator	&		1292707	0					
ANR	1293128	Identifier	param		1292707	1					
ANR	1293129	Argument	& pos		1292707	2					
ANR	1293130	UnaryOperationExpression	& pos		1292707	0					
ANR	1293131	UnaryOperator	&		1292707	0					
ANR	1293132	Identifier	pos		1292707	1					
ANR	1293133	Identifier	FAILURE		1292707	1					
ANR	1293134	CompoundStatement		47:103:1796:1796	1292707	1					
ANR	1293135	IfStatement	if ( i > 0 )		1292707	0					
ANR	1293136	Condition	i > 0	4673:7:159999:160003	1292707	0	True				
ANR	1293137	RelationalExpression	i > 0		1292707	0		>			
ANR	1293138	Identifier	i		1292707	0					
ANR	1293139	PrimaryExpression	0		1292707	1					
ANR	1293140	CompoundStatement		48:14:1812:1812	1292707	1					
ANR	1293141	ExpressionStatement	"smart_str_appendl ( buf , "", "" , 2 )"	4674:4:160012:160043	1292707	0	True				
ANR	1293142	CallExpression	"smart_str_appendl ( buf , "", "" , 2 )"		1292707	0					
ANR	1293143	Callee	smart_str_appendl		1292707	0					
ANR	1293144	Identifier	smart_str_appendl		1292707	0					
ANR	1293145	ArgumentList	buf		1292707	1					
ANR	1293146	Argument	buf		1292707	0					
ANR	1293147	Identifier	buf		1292707	0					
ANR	1293148	Argument	""", """		1292707	1					
ANR	1293149	PrimaryExpression	""", """		1292707	0					
ANR	1293150	Argument	2		1292707	2					
ANR	1293151	PrimaryExpression	2		1292707	0					
ANR	1293152	IfStatement	if ( ( * param ) -> encode && ( * param ) -> encode -> details . type_str )		1292707	1					
ANR	1293153	Condition	( * param ) -> encode && ( * param ) -> encode -> details . type_str	4676:7:160057:160110	1292707	0	True				
ANR	1293154	AndExpression	( * param ) -> encode && ( * param ) -> encode -> details . type_str		1292707	0		&&			
ANR	1293155	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1293156	UnaryOperationExpression	* param		1292707	0					
ANR	1293157	UnaryOperator	*		1292707	0					
ANR	1293158	Identifier	param		1292707	1					
ANR	1293159	Identifier	encode		1292707	1					
ANR	1293160	MemberAccess	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1293161	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1293162	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1293163	UnaryOperationExpression	* param		1292707	0					
ANR	1293164	UnaryOperator	*		1292707	0					
ANR	1293165	Identifier	param		1292707	1					
ANR	1293166	Identifier	encode		1292707	1					
ANR	1293167	Identifier	details		1292707	1					
ANR	1293168	Identifier	type_str		1292707	1					
ANR	1293169	CompoundStatement		51:63:1919:1919	1292707	1					
ANR	1293170	ExpressionStatement	"smart_str_appendl ( buf , ( * param ) -> encode -> details . type_str , strlen ( ( * param ) -> encode -> details . type_str ) )"	4677:4:160119:160221	1292707	0	True				
ANR	1293171	CallExpression	"smart_str_appendl ( buf , ( * param ) -> encode -> details . type_str , strlen ( ( * param ) -> encode -> details . type_str ) )"		1292707	0					
ANR	1293172	Callee	smart_str_appendl		1292707	0					
ANR	1293173	Identifier	smart_str_appendl		1292707	0					
ANR	1293174	ArgumentList	buf		1292707	1					
ANR	1293175	Argument	buf		1292707	0					
ANR	1293176	Identifier	buf		1292707	0					
ANR	1293177	Argument	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1293178	MemberAccess	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1293179	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1293180	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1293181	UnaryOperationExpression	* param		1292707	0					
ANR	1293182	UnaryOperator	*		1292707	0					
ANR	1293183	Identifier	param		1292707	1					
ANR	1293184	Identifier	encode		1292707	1					
ANR	1293185	Identifier	details		1292707	1					
ANR	1293186	Identifier	type_str		1292707	1					
ANR	1293187	Argument	strlen ( ( * param ) -> encode -> details . type_str )		1292707	2					
ANR	1293188	CallExpression	strlen ( ( * param ) -> encode -> details . type_str )		1292707	0					
ANR	1293189	Callee	strlen		1292707	0					
ANR	1293190	Identifier	strlen		1292707	0					
ANR	1293191	ArgumentList	( * param ) -> encode -> details . type_str		1292707	1					
ANR	1293192	Argument	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1293193	MemberAccess	( * param ) -> encode -> details . type_str		1292707	0					
ANR	1293194	PtrMemberAccess	( * param ) -> encode -> details		1292707	0					
ANR	1293195	PtrMemberAccess	( * param ) -> encode		1292707	0					
ANR	1293196	UnaryOperationExpression	* param		1292707	0					
ANR	1293197	UnaryOperator	*		1292707	0					
ANR	1293198	Identifier	param		1292707	1					
ANR	1293199	Identifier	encode		1292707	1					
ANR	1293200	Identifier	details		1292707	1					
ANR	1293201	Identifier	type_str		1292707	1					
ANR	1293202	ElseStatement	else		1292707	0					
ANR	1293203	CompoundStatement		53:10:2039:2039	1292707	0					
ANR	1293204	ExpressionStatement	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"	4679:4:160239:160275	1292707	0	True				
ANR	1293205	CallExpression	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"		1292707	0					
ANR	1293206	Callee	smart_str_appendl		1292707	0					
ANR	1293207	Identifier	smart_str_appendl		1292707	0					
ANR	1293208	ArgumentList	buf		1292707	1					
ANR	1293209	Argument	buf		1292707	0					
ANR	1293210	Identifier	buf		1292707	0					
ANR	1293211	Argument	"""UNKNOWN"""		1292707	1					
ANR	1293212	PrimaryExpression	"""UNKNOWN"""		1292707	0					
ANR	1293213	Argument	7		1292707	2					
ANR	1293214	PrimaryExpression	7		1292707	0					
ANR	1293215	ExpressionStatement	"smart_str_appendl ( buf , "" $"" , 2 )"	4681:3:160285:160316	1292707	2	True				
ANR	1293216	CallExpression	"smart_str_appendl ( buf , "" $"" , 2 )"		1292707	0					
ANR	1293217	Callee	smart_str_appendl		1292707	0					
ANR	1293218	Identifier	smart_str_appendl		1292707	0					
ANR	1293219	ArgumentList	buf		1292707	1					
ANR	1293220	Argument	buf		1292707	0					
ANR	1293221	Identifier	buf		1292707	0					
ANR	1293222	Argument	""" $"""		1292707	1					
ANR	1293223	PrimaryExpression	""" $"""		1292707	0					
ANR	1293224	Argument	2		1292707	2					
ANR	1293225	PrimaryExpression	2		1292707	0					
ANR	1293226	ExpressionStatement	"smart_str_appendl ( buf , ( * param ) -> paramName , strlen ( ( * param ) -> paramName ) )"	4682:3:160321:160393	1292707	3	True				
ANR	1293227	CallExpression	"smart_str_appendl ( buf , ( * param ) -> paramName , strlen ( ( * param ) -> paramName ) )"		1292707	0					
ANR	1293228	Callee	smart_str_appendl		1292707	0					
ANR	1293229	Identifier	smart_str_appendl		1292707	0					
ANR	1293230	ArgumentList	buf		1292707	1					
ANR	1293231	Argument	buf		1292707	0					
ANR	1293232	Identifier	buf		1292707	0					
ANR	1293233	Argument	( * param ) -> paramName		1292707	1					
ANR	1293234	PtrMemberAccess	( * param ) -> paramName		1292707	0					
ANR	1293235	UnaryOperationExpression	* param		1292707	0					
ANR	1293236	UnaryOperator	*		1292707	0					
ANR	1293237	Identifier	param		1292707	1					
ANR	1293238	Identifier	paramName		1292707	1					
ANR	1293239	Argument	strlen ( ( * param ) -> paramName )		1292707	2					
ANR	1293240	CallExpression	strlen ( ( * param ) -> paramName )		1292707	0					
ANR	1293241	Callee	strlen		1292707	0					
ANR	1293242	Identifier	strlen		1292707	0					
ANR	1293243	ArgumentList	( * param ) -> paramName		1292707	1					
ANR	1293244	Argument	( * param ) -> paramName		1292707	0					
ANR	1293245	PtrMemberAccess	( * param ) -> paramName		1292707	0					
ANR	1293246	UnaryOperationExpression	* param		1292707	0					
ANR	1293247	UnaryOperator	*		1292707	0					
ANR	1293248	Identifier	param		1292707	1					
ANR	1293249	Identifier	paramName		1292707	1					
ANR	1293250	ExpressionStatement	"zend_hash_move_forward_ex ( function -> requestParameters , & pos )"	4683:3:160398:160458	1292707	4	True				
ANR	1293251	CallExpression	"zend_hash_move_forward_ex ( function -> requestParameters , & pos )"		1292707	0					
ANR	1293252	Callee	zend_hash_move_forward_ex		1292707	0					
ANR	1293253	Identifier	zend_hash_move_forward_ex		1292707	0					
ANR	1293254	ArgumentList	function -> requestParameters		1292707	1					
ANR	1293255	Argument	function -> requestParameters		1292707	0					
ANR	1293256	PtrMemberAccess	function -> requestParameters		1292707	0					
ANR	1293257	Identifier	function		1292707	0					
ANR	1293258	Identifier	requestParameters		1292707	1					
ANR	1293259	Argument	& pos		1292707	1					
ANR	1293260	UnaryOperationExpression	& pos		1292707	0					
ANR	1293261	UnaryOperator	&		1292707	0					
ANR	1293262	Identifier	pos		1292707	1					
ANR	1293263	ExpressionStatement	i ++	4684:3:160463:160466	1292707	5	True				
ANR	1293264	PostIncDecOperationExpression	i ++		1292707	0					
ANR	1293265	Identifier	i		1292707	0					
ANR	1293266	IncDec	++		1292707	1					
ANR	1293267	ExpressionStatement	"smart_str_appendc ( buf , ')' )"	4687:1:160476:160503	1292707	7	True				
ANR	1293268	CallExpression	"smart_str_appendc ( buf , ')' )"		1292707	0					
ANR	1293269	Callee	smart_str_appendc		1292707	0					
ANR	1293270	Identifier	smart_str_appendc		1292707	0					
ANR	1293271	ArgumentList	buf		1292707	1					
ANR	1293272	Argument	buf		1292707	0					
ANR	1293273	Identifier	buf		1292707	0					
ANR	1293274	Argument	')'		1292707	1					
ANR	1293275	PrimaryExpression	')'		1292707	0					
ANR	1293276	ExpressionStatement	smart_str_0 ( buf )	4688:1:160506:160522	1292707	8	True				
ANR	1293277	CallExpression	smart_str_0 ( buf )		1292707	0					
ANR	1293278	Callee	smart_str_0		1292707	0					
ANR	1293279	Identifier	smart_str_0		1292707	0					
ANR	1293280	ArgumentList	buf		1292707	1					
ANR	1293281	Argument	buf		1292707	0					
ANR	1293282	Identifier	buf		1292707	0					
ANR	1293283	ReturnType	static void		1292707	1					
ANR	1293284	Identifier	function_to_string		1292707	2					
ANR	1293285	ParameterList	"sdlFunctionPtr function , smart_str * buf"		1292707	3					
ANR	1293286	Parameter	sdlFunctionPtr function	4625:31:158152:158174	1292707	0	True				
ANR	1293287	ParameterType	sdlFunctionPtr		1292707	0					
ANR	1293288	Identifier	function		1292707	1					
ANR	1293289	Parameter	smart_str * buf	4625:56:158177:158190	1292707	1	True				
ANR	1293290	ParameterType	smart_str *		1292707	0					
ANR	1293291	Identifier	buf		1292707	1					
ANR	1293292	CFGEntryNode	ENTRY		1292707		True				
ANR	1293293	CFGExitNode	EXIT		1292707		True				
ANR	1293294	Symbol	function -> functionName		1292707						
ANR	1293295	Symbol	zend_hash_get_current_data_ex		1292707						
ANR	1293296	Symbol	zend_hash_num_elements		1292707						
ANR	1293297	Symbol	* function		1292707						
ANR	1293298	Symbol	* * * param		1292707						
ANR	1293299	Symbol	i		1292707						
ANR	1293300	Symbol	* ( * param ) -> encode		1292707						
ANR	1293301	Symbol	& param		1292707						
ANR	1293302	Symbol	( * param ) -> encode		1292707						
ANR	1293303	Symbol	FAILURE		1292707						
ANR	1293304	Symbol	function -> requestParameters		1292707						
ANR	1293305	Symbol	* param		1292707						
ANR	1293306	Symbol	function -> responseParameters		1292707						
ANR	1293307	Symbol	( * param ) -> encode -> details		1292707						
ANR	1293308	Symbol	strlen		1292707						
ANR	1293309	Symbol	buf		1292707						
ANR	1293310	Symbol	pos		1292707						
ANR	1293311	Symbol	param		1292707						
ANR	1293312	Symbol	function		1292707						
ANR	1293313	Symbol	* * param		1292707						
ANR	1293314	Symbol	( * param ) -> encode -> details . type_str		1292707						
ANR	1293315	Symbol	& pos		1292707						
ANR	1293316	Symbol	( * param ) -> paramName		1292707						
ANR	1293317	Function	model_to_string	4691:0:160527:161404							
ANR	1293318	FunctionDef	"model_to_string (sdlContentModelPtr model , smart_str * buf , int level)"		1293317	0					
ANR	1293319	CompoundStatement		4692:0:160608:161404	1293317	0					
ANR	1293320	IdentifierDeclStatement	int i ;	4693:1:160611:160616	1293317	0	True				
ANR	1293321	IdentifierDecl	i		1293317	0					
ANR	1293322	IdentifierDeclType	int		1293317	0					
ANR	1293323	Identifier	i		1293317	1					
ANR	1293324	SwitchStatement	switch ( model -> kind )		1293317	1					
ANR	1293325	Condition	model -> kind	4695:9:160628:160638	1293317	0	True				
ANR	1293326	PtrMemberAccess	model -> kind		1293317	0					
ANR	1293327	Identifier	model		1293317	0					
ANR	1293328	Identifier	kind		1293317	1					
ANR	1293329	CompoundStatement		4:22:32:32	1293317	1					
ANR	1293330	Label	case XSD_CONTENT_ELEMENT :	4696:2:160645:160669	1293317	0	True				
ANR	1293331	Identifier	XSD_CONTENT_ELEMENT		1293317	0					
ANR	1293332	ExpressionStatement	"type_to_string ( model -> u . element , buf , level )"	4697:3:160674:160718	1293317	1	True				
ANR	1293333	CallExpression	"type_to_string ( model -> u . element , buf , level )"		1293317	0					
ANR	1293334	Callee	type_to_string		1293317	0					
ANR	1293335	Identifier	type_to_string		1293317	0					
ANR	1293336	ArgumentList	model -> u . element		1293317	1					
ANR	1293337	Argument	model -> u . element		1293317	0					
ANR	1293338	MemberAccess	model -> u . element		1293317	0					
ANR	1293339	PtrMemberAccess	model -> u		1293317	0					
ANR	1293340	Identifier	model		1293317	0					
ANR	1293341	Identifier	u		1293317	1					
ANR	1293342	Identifier	element		1293317	1					
ANR	1293343	Argument	buf		1293317	1					
ANR	1293344	Identifier	buf		1293317	0					
ANR	1293345	Argument	level		1293317	2					
ANR	1293346	Identifier	level		1293317	0					
ANR	1293347	ExpressionStatement	"smart_str_appendl ( buf , "";\\n"" , 2 )"	4698:3:160723:160755	1293317	2	True				
ANR	1293348	CallExpression	"smart_str_appendl ( buf , "";\\n"" , 2 )"		1293317	0					
ANR	1293349	Callee	smart_str_appendl		1293317	0					
ANR	1293350	Identifier	smart_str_appendl		1293317	0					
ANR	1293351	ArgumentList	buf		1293317	1					
ANR	1293352	Argument	buf		1293317	0					
ANR	1293353	Identifier	buf		1293317	0					
ANR	1293354	Argument	""";\\n"""		1293317	1					
ANR	1293355	PrimaryExpression	""";\\n"""		1293317	0					
ANR	1293356	Argument	2		1293317	2					
ANR	1293357	PrimaryExpression	2		1293317	0					
ANR	1293358	BreakStatement	break ;	4699:3:160760:160765	1293317	3	True				
ANR	1293359	Label	case XSD_CONTENT_ANY :	4700:2:160769:160789	1293317	4	True				
ANR	1293360	Identifier	XSD_CONTENT_ANY		1293317	0					
ANR	1293361	ForStatement	for ( i = 0 ; i < level ; i ++ )		1293317	5					
ANR	1293362	ForInit	i = 0 ;	4701:8:160799:160804	1293317	0	True				
ANR	1293363	AssignmentExpression	i = 0		1293317	0		=			
ANR	1293364	Identifier	i		1293317	0					
ANR	1293365	PrimaryExpression	0		1293317	1					
ANR	1293366	Condition	i < level	4701:14:160805:160813	1293317	1	True				
ANR	1293367	RelationalExpression	i < level		1293317	0		<			
ANR	1293368	Identifier	i		1293317	0					
ANR	1293369	Identifier	level		1293317	1					
ANR	1293370	PostIncDecOperationExpression	i ++	4701:24:160815:160817	1293317	2	True				
ANR	1293371	Identifier	i		1293317	0					
ANR	1293372	IncDec	++		1293317	1					
ANR	1293373	CompoundStatement		10:29:211:211	1293317	3					
ANR	1293374	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4702:4:160826:160853	1293317	0	True				
ANR	1293375	CallExpression	"smart_str_appendc ( buf , ' ' )"		1293317	0					
ANR	1293376	Callee	smart_str_appendc		1293317	0					
ANR	1293377	Identifier	smart_str_appendc		1293317	0					
ANR	1293378	ArgumentList	buf		1293317	1					
ANR	1293379	Argument	buf		1293317	0					
ANR	1293380	Identifier	buf		1293317	0					
ANR	1293381	Argument	' '		1293317	1					
ANR	1293382	PrimaryExpression	' '		1293317	0					
ANR	1293383	ExpressionStatement	"smart_str_appendl ( buf , ""<anyXML> any;\\n"" , sizeof ( ""<anyXML> any;\\n"" ) - 1 )"	4704:3:160863:160933	1293317	6	True				
ANR	1293384	CallExpression	"smart_str_appendl ( buf , ""<anyXML> any;\\n"" , sizeof ( ""<anyXML> any;\\n"" ) - 1 )"		1293317	0					
ANR	1293385	Callee	smart_str_appendl		1293317	0					
ANR	1293386	Identifier	smart_str_appendl		1293317	0					
ANR	1293387	ArgumentList	buf		1293317	1					
ANR	1293388	Argument	buf		1293317	0					
ANR	1293389	Identifier	buf		1293317	0					
ANR	1293390	Argument	"""<anyXML> any;\\n"""		1293317	1					
ANR	1293391	PrimaryExpression	"""<anyXML> any;\\n"""		1293317	0					
ANR	1293392	Argument	"sizeof ( ""<anyXML> any;\\n"" ) - 1"		1293317	2					
ANR	1293393	AdditiveExpression	"sizeof ( ""<anyXML> any;\\n"" ) - 1"		1293317	0		-			
ANR	1293394	SizeofExpression	"sizeof ( ""<anyXML> any;\\n"" )"		1293317	0					
ANR	1293395	Sizeof	sizeof		1293317	0					
ANR	1293396	PrimaryExpression	"""<anyXML> any;\\n"""		1293317	1					
ANR	1293397	PrimaryExpression	1		1293317	1					
ANR	1293398	BreakStatement	break ;	4705:3:160938:160943	1293317	7	True				
ANR	1293399	Label	case XSD_CONTENT_SEQUENCE :	4706:2:160947:160972	1293317	8	True				
ANR	1293400	Identifier	XSD_CONTENT_SEQUENCE		1293317	0					
ANR	1293401	Label	case XSD_CONTENT_ALL :	4707:2:160976:160996	1293317	9	True				
ANR	1293402	Identifier	XSD_CONTENT_ALL		1293317	0					
ANR	1293403	Label	case XSD_CONTENT_CHOICE :	4708:2:161000:161023	1293317	10	True				
ANR	1293404	Identifier	XSD_CONTENT_CHOICE		1293317	0					
ANR	1293405	CompoundStatement		18:3:421:444	1293317	11					
ANR	1293406	IdentifierDeclStatement	sdlContentModelPtr * tmp ;	4709:3:161030:161053	1293317	0	True				
ANR	1293407	IdentifierDecl	* tmp		1293317	0					
ANR	1293408	IdentifierDeclType	sdlContentModelPtr *		1293317	0					
ANR	1293409	Identifier	tmp		1293317	1					
ANR	1293410	ExpressionStatement	zend_hash_internal_pointer_reset ( model -> u . content )	4711:3:161059:161109	1293317	1	True				
ANR	1293411	CallExpression	zend_hash_internal_pointer_reset ( model -> u . content )		1293317	0					
ANR	1293412	Callee	zend_hash_internal_pointer_reset		1293317	0					
ANR	1293413	Identifier	zend_hash_internal_pointer_reset		1293317	0					
ANR	1293414	ArgumentList	model -> u . content		1293317	1					
ANR	1293415	Argument	model -> u . content		1293317	0					
ANR	1293416	MemberAccess	model -> u . content		1293317	0					
ANR	1293417	PtrMemberAccess	model -> u		1293317	0					
ANR	1293418	Identifier	model		1293317	0					
ANR	1293419	Identifier	u		1293317	1					
ANR	1293420	Identifier	content		1293317	1					
ANR	1293421	WhileStatement	"while ( zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp ) == SUCCESS )"		1293317	2					
ANR	1293422	Condition	"zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp ) == SUCCESS"	4712:10:161121:161189	1293317	0	True				
ANR	1293423	EqualityExpression	"zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp ) == SUCCESS"		1293317	0		==			
ANR	1293424	CallExpression	"zend_hash_get_current_data ( model -> u . content , ( void * * ) & tmp )"		1293317	0					
ANR	1293425	Callee	zend_hash_get_current_data		1293317	0					
ANR	1293426	Identifier	zend_hash_get_current_data		1293317	0					
ANR	1293427	ArgumentList	model -> u . content		1293317	1					
ANR	1293428	Argument	model -> u . content		1293317	0					
ANR	1293429	MemberAccess	model -> u . content		1293317	0					
ANR	1293430	PtrMemberAccess	model -> u		1293317	0					
ANR	1293431	Identifier	model		1293317	0					
ANR	1293432	Identifier	u		1293317	1					
ANR	1293433	Identifier	content		1293317	1					
ANR	1293434	Argument	( void * * ) & tmp		1293317	1					
ANR	1293435	CastExpression	( void * * ) & tmp		1293317	0					
ANR	1293436	CastTarget	void * *		1293317	0					
ANR	1293437	UnaryOperationExpression	& tmp		1293317	1					
ANR	1293438	UnaryOperator	&		1293317	0					
ANR	1293439	Identifier	tmp		1293317	1					
ANR	1293440	Identifier	SUCCESS		1293317	1					
ANR	1293441	CompoundStatement		21:81:583:583	1293317	1					
ANR	1293442	ExpressionStatement	"model_to_string ( * tmp , buf , level )"	4713:4:161198:161231	1293317	0	True				
ANR	1293443	CallExpression	"model_to_string ( * tmp , buf , level )"		1293317	0					
ANR	1293444	Callee	model_to_string		1293317	0					
ANR	1293445	Identifier	model_to_string		1293317	0					
ANR	1293446	ArgumentList	* tmp		1293317	1					
ANR	1293447	Argument	* tmp		1293317	0					
ANR	1293448	UnaryOperationExpression	* tmp		1293317	0					
ANR	1293449	UnaryOperator	*		1293317	0					
ANR	1293450	Identifier	tmp		1293317	1					
ANR	1293451	Argument	buf		1293317	1					
ANR	1293452	Identifier	buf		1293317	0					
ANR	1293453	Argument	level		1293317	2					
ANR	1293454	Identifier	level		1293317	0					
ANR	1293455	ExpressionStatement	zend_hash_move_forward ( model -> u . content )	4714:4:161237:161277	1293317	1	True				
ANR	1293456	CallExpression	zend_hash_move_forward ( model -> u . content )		1293317	0					
ANR	1293457	Callee	zend_hash_move_forward		1293317	0					
ANR	1293458	Identifier	zend_hash_move_forward		1293317	0					
ANR	1293459	ArgumentList	model -> u . content		1293317	1					
ANR	1293460	Argument	model -> u . content		1293317	0					
ANR	1293461	MemberAccess	model -> u . content		1293317	0					
ANR	1293462	PtrMemberAccess	model -> u		1293317	0					
ANR	1293463	Identifier	model		1293317	0					
ANR	1293464	Identifier	u		1293317	1					
ANR	1293465	Identifier	content		1293317	1					
ANR	1293466	BreakStatement	break ;	4716:3:161287:161292	1293317	3	True				
ANR	1293467	Label	case XSD_CONTENT_GROUP :	4718:2:161300:161322	1293317	12	True				
ANR	1293468	Identifier	XSD_CONTENT_GROUP		1293317	0					
ANR	1293469	ExpressionStatement	"model_to_string ( model -> u . group -> model , buf , level )"	4719:3:161327:161377	1293317	13	True				
ANR	1293470	CallExpression	"model_to_string ( model -> u . group -> model , buf , level )"		1293317	0					
ANR	1293471	Callee	model_to_string		1293317	0					
ANR	1293472	Identifier	model_to_string		1293317	0					
ANR	1293473	ArgumentList	model -> u . group -> model		1293317	1					
ANR	1293474	Argument	model -> u . group -> model		1293317	0					
ANR	1293475	PtrMemberAccess	model -> u . group -> model		1293317	0					
ANR	1293476	MemberAccess	model -> u . group		1293317	0					
ANR	1293477	PtrMemberAccess	model -> u		1293317	0					
ANR	1293478	Identifier	model		1293317	0					
ANR	1293479	Identifier	u		1293317	1					
ANR	1293480	Identifier	group		1293317	1					
ANR	1293481	Identifier	model		1293317	1					
ANR	1293482	Argument	buf		1293317	1					
ANR	1293483	Identifier	buf		1293317	0					
ANR	1293484	Argument	level		1293317	2					
ANR	1293485	Identifier	level		1293317	0					
ANR	1293486	Label	default :	4720:2:161381:161388	1293317	14	True				
ANR	1293487	Identifier	default		1293317	0					
ANR	1293488	BreakStatement	break ;	4721:4:161394:161399	1293317	15	True				
ANR	1293489	ReturnType	static void		1293317	1					
ANR	1293490	Identifier	model_to_string		1293317	2					
ANR	1293491	ParameterList	"sdlContentModelPtr model , smart_str * buf , int level"		1293317	3					
ANR	1293492	Parameter	sdlContentModelPtr model	4691:28:160555:160578	1293317	0	True				
ANR	1293493	ParameterType	sdlContentModelPtr		1293317	0					
ANR	1293494	Identifier	model		1293317	1					
ANR	1293495	Parameter	smart_str * buf	4691:54:160581:160594	1293317	1	True				
ANR	1293496	ParameterType	smart_str *		1293317	0					
ANR	1293497	Identifier	buf		1293317	1					
ANR	1293498	Parameter	int level	4691:70:160597:160605	1293317	2	True				
ANR	1293499	ParameterType	int		1293317	0					
ANR	1293500	Identifier	level		1293317	1					
ANR	1293501	CFGEntryNode	ENTRY		1293317		True				
ANR	1293502	CFGExitNode	EXIT		1293317		True				
ANR	1293503	Symbol	* tmp		1293317						
ANR	1293504	Symbol	model -> u		1293317						
ANR	1293505	Symbol	SUCCESS		1293317						
ANR	1293506	Symbol	level		1293317						
ANR	1293507	Symbol	* model		1293317						
ANR	1293508	Symbol	* model -> u		1293317						
ANR	1293509	Symbol	i		1293317						
ANR	1293510	Symbol	* * model		1293317						
ANR	1293511	Symbol	model -> u . content		1293317						
ANR	1293512	Symbol	* model -> u . group		1293317						
ANR	1293513	Symbol	buf		1293317						
ANR	1293514	Symbol	model -> kind		1293317						
ANR	1293515	Symbol	model -> u . element		1293317						
ANR	1293516	Symbol	model -> u . group -> model		1293317						
ANR	1293517	Symbol	zend_hash_get_current_data		1293317						
ANR	1293518	Symbol	tmp		1293317						
ANR	1293519	Symbol	model		1293317						
ANR	1293520	Symbol	& tmp		1293317						
ANR	1293521	Symbol	model -> u . group		1293317						
ANR	1293522	Function	type_to_string	4725:0:161407:167898							
ANR	1293523	FunctionDef	"type_to_string (sdlTypePtr type , smart_str * buf , int level)"		1293522	0					
ANR	1293524	CompoundStatement		4726:0:161478:167898	1293522	0					
ANR	1293525	IdentifierDeclStatement	int i ;	4727:1:161481:161486	1293522	0	True				
ANR	1293526	IdentifierDecl	i		1293522	0					
ANR	1293527	IdentifierDeclType	int		1293522	0					
ANR	1293528	Identifier	i		1293522	1					
ANR	1293529	IdentifierDeclStatement	smart_str spaces = { 0 } ;	4728:1:161489:161511	1293522	1	True				
ANR	1293530	IdentifierDecl	spaces = { 0 }		1293522	0					
ANR	1293531	IdentifierDeclType	smart_str		1293522	0					
ANR	1293532	Identifier	spaces		1293522	1					
ANR	1293533	AssignmentExpression	spaces = { 0 }		1293522	2		=			
ANR	1293534	Identifier	spaces		1293522	0					
ANR	1293535	InitializerList	0		1293522	1					
ANR	1293536	PrimaryExpression	0		1293522	0					
ANR	1293537	IdentifierDeclStatement	HashPosition pos ;	4729:1:161514:161530	1293522	2	True				
ANR	1293538	IdentifierDecl	pos		1293522	0					
ANR	1293539	IdentifierDeclType	HashPosition		1293522	0					
ANR	1293540	Identifier	pos		1293522	1					
ANR	1293541	ForStatement	for ( i = 0 ; i < level ; i ++ )		1293522	3					
ANR	1293542	ForInit	i = 0 ;	4731:6:161539:161544	1293522	0	True				
ANR	1293543	AssignmentExpression	i = 0		1293522	0		=			
ANR	1293544	Identifier	i		1293522	0					
ANR	1293545	PrimaryExpression	0		1293522	1					
ANR	1293546	Condition	i < level	4731:12:161545:161553	1293522	1	True				
ANR	1293547	RelationalExpression	i < level		1293522	0		<			
ANR	1293548	Identifier	i		1293522	0					
ANR	1293549	Identifier	level		1293522	1					
ANR	1293550	PostIncDecOperationExpression	i ++	4731:22:161555:161557	1293522	2	True				
ANR	1293551	Identifier	i		1293522	0					
ANR	1293552	IncDec	++		1293522	1					
ANR	1293553	CompoundStatement		6:27:81:81	1293522	3					
ANR	1293554	ExpressionStatement	"smart_str_appendc ( & spaces , ' ' )"	4732:2:161564:161595	1293522	0	True				
ANR	1293555	CallExpression	"smart_str_appendc ( & spaces , ' ' )"		1293522	0					
ANR	1293556	Callee	smart_str_appendc		1293522	0					
ANR	1293557	Identifier	smart_str_appendc		1293522	0					
ANR	1293558	ArgumentList	& spaces		1293522	1					
ANR	1293559	Argument	& spaces		1293522	0					
ANR	1293560	UnaryOperationExpression	& spaces		1293522	0					
ANR	1293561	UnaryOperator	&		1293522	0					
ANR	1293562	Identifier	spaces		1293522	1					
ANR	1293563	Argument	' '		1293522	1					
ANR	1293564	PrimaryExpression	' '		1293522	0					
ANR	1293565	ExpressionStatement	"smart_str_appendl ( buf , spaces . c , spaces . len )"	4734:1:161601:161645	1293522	4	True				
ANR	1293566	CallExpression	"smart_str_appendl ( buf , spaces . c , spaces . len )"		1293522	0					
ANR	1293567	Callee	smart_str_appendl		1293522	0					
ANR	1293568	Identifier	smart_str_appendl		1293522	0					
ANR	1293569	ArgumentList	buf		1293522	1					
ANR	1293570	Argument	buf		1293522	0					
ANR	1293571	Identifier	buf		1293522	0					
ANR	1293572	Argument	spaces . c		1293522	1					
ANR	1293573	MemberAccess	spaces . c		1293522	0					
ANR	1293574	Identifier	spaces		1293522	0					
ANR	1293575	Identifier	c		1293522	1					
ANR	1293576	Argument	spaces . len		1293522	2					
ANR	1293577	MemberAccess	spaces . len		1293522	0					
ANR	1293578	Identifier	spaces		1293522	0					
ANR	1293579	Identifier	len		1293522	1					
ANR	1293580	ReturnType	static void		1293522	1					
ANR	1293581	Identifier	type_to_string		1293522	2					
ANR	1293582	ParameterList	"sdlTypePtr type , smart_str * buf , int level"		1293522	3					
ANR	1293583	Parameter	sdlTypePtr type	4725:27:161434:161448	1293522	0	True				
ANR	1293584	ParameterType	sdlTypePtr		1293522	0					
ANR	1293585	Identifier	type		1293522	1					
ANR	1293586	Parameter	smart_str * buf	4725:44:161451:161464	1293522	1	True				
ANR	1293587	ParameterType	smart_str *		1293522	0					
ANR	1293588	Identifier	buf		1293522	1					
ANR	1293589	Parameter	int level	4725:60:161467:161475	1293522	2	True				
ANR	1293590	ParameterType	int		1293522	0					
ANR	1293591	Identifier	level		1293522	1					
ANR	1293592	CFGEntryNode	ENTRY		1293522		True				
ANR	1293593	CFGExitNode	EXIT		1293522		True				
ANR	1293594	Symbol	buf		1293522						
ANR	1293595	Symbol	level		1293522						
ANR	1293596	Symbol	pos		1293522						
ANR	1293597	Symbol	spaces		1293522						
ANR	1293598	Symbol	spaces . c		1293522						
ANR	1293599	Symbol	i		1293522						
ANR	1293600	Symbol	type		1293522						
ANR	1293601	Symbol	spaces . len		1293522						
ANR	1293602	Symbol	& spaces		1293522						
ANR	1293603	Function	delete_url	4901:0:167901:167973							
ANR	1293604	FunctionDef	delete_url (void * handle)		1293603	0					
ANR	1293605	CompoundStatement		4902:0:167938:167973	1293603	0					
ANR	1293606	ExpressionStatement	php_url_free ( ( php_url * ) handle )	4903:1:167941:167971	1293603	0	True				
ANR	1293607	CallExpression	php_url_free ( ( php_url * ) handle )		1293603	0					
ANR	1293608	Callee	php_url_free		1293603	0					
ANR	1293609	Identifier	php_url_free		1293603	0					
ANR	1293610	ArgumentList	( php_url * ) handle		1293603	1					
ANR	1293611	Argument	( php_url * ) handle		1293603	0					
ANR	1293612	CastExpression	( php_url * ) handle		1293603	0					
ANR	1293613	CastTarget	php_url *		1293603	0					
ANR	1293614	Identifier	handle		1293603	1					
ANR	1293615	ReturnType	static void		1293603	1					
ANR	1293616	Identifier	delete_url		1293603	2					
ANR	1293617	ParameterList	void * handle		1293603	3					
ANR	1293618	Parameter	void * handle	4901:23:167924:167935	1293603	0	True				
ANR	1293619	ParameterType	void *		1293603	0					
ANR	1293620	Identifier	handle		1293603	1					
ANR	1293621	CFGEntryNode	ENTRY		1293603		True				
ANR	1293622	CFGExitNode	EXIT		1293603		True				
ANR	1293623	Symbol	handle		1293603						
ANR	1293624	Function	delete_service	4906:0:167976:168888							
ANR	1293625	FunctionDef	delete_service (void * data)		1293624	0					
ANR	1293626	CompoundStatement		4907:0:168015:168888	1293624	0					
ANR	1293627	IdentifierDeclStatement	soapServicePtr service = ( soapServicePtr ) data ;	4908:1:168018:168063	1293624	0	True				
ANR	1293628	IdentifierDecl	service = ( soapServicePtr ) data		1293624	0					
ANR	1293629	IdentifierDeclType	soapServicePtr		1293624	0					
ANR	1293630	Identifier	service		1293624	1					
ANR	1293631	AssignmentExpression	service = ( soapServicePtr ) data		1293624	2		=			
ANR	1293632	Identifier	service		1293624	0					
ANR	1293633	CastExpression	( soapServicePtr ) data		1293624	1					
ANR	1293634	CastTarget	soapServicePtr		1293624	0					
ANR	1293635	Identifier	data		1293624	1					
ANR	1293636	IfStatement	if ( service -> soap_functions . ft )		1293624	1					
ANR	1293637	Condition	service -> soap_functions . ft	4910:5:168071:168096	1293624	0	True				
ANR	1293638	MemberAccess	service -> soap_functions . ft		1293624	0					
ANR	1293639	PtrMemberAccess	service -> soap_functions		1293624	0					
ANR	1293640	Identifier	service		1293624	0					
ANR	1293641	Identifier	soap_functions		1293624	1					
ANR	1293642	Identifier	ft		1293624	1					
ANR	1293643	CompoundStatement		4:33:83:83	1293624	1					
ANR	1293644	ExpressionStatement	zend_hash_destroy ( service -> soap_functions . ft )	4911:2:168103:168148	1293624	0	True				
ANR	1293645	CallExpression	zend_hash_destroy ( service -> soap_functions . ft )		1293624	0					
ANR	1293646	Callee	zend_hash_destroy		1293624	0					
ANR	1293647	Identifier	zend_hash_destroy		1293624	0					
ANR	1293648	ArgumentList	service -> soap_functions . ft		1293624	1					
ANR	1293649	Argument	service -> soap_functions . ft		1293624	0					
ANR	1293650	MemberAccess	service -> soap_functions . ft		1293624	0					
ANR	1293651	PtrMemberAccess	service -> soap_functions		1293624	0					
ANR	1293652	Identifier	service		1293624	0					
ANR	1293653	Identifier	soap_functions		1293624	1					
ANR	1293654	Identifier	ft		1293624	1					
ANR	1293655	ExpressionStatement	efree ( service -> soap_functions . ft )	4912:2:168152:168185	1293624	1	True				
ANR	1293656	CallExpression	efree ( service -> soap_functions . ft )		1293624	0					
ANR	1293657	Callee	efree		1293624	0					
ANR	1293658	Identifier	efree		1293624	0					
ANR	1293659	ArgumentList	service -> soap_functions . ft		1293624	1					
ANR	1293660	Argument	service -> soap_functions . ft		1293624	0					
ANR	1293661	MemberAccess	service -> soap_functions . ft		1293624	0					
ANR	1293662	PtrMemberAccess	service -> soap_functions		1293624	0					
ANR	1293663	Identifier	service		1293624	0					
ANR	1293664	Identifier	soap_functions		1293624	1					
ANR	1293665	Identifier	ft		1293624	1					
ANR	1293666	IfStatement	if ( service -> typemap )		1293624	2					
ANR	1293667	Condition	service -> typemap	4915:5:168196:168211	1293624	0	True				
ANR	1293668	PtrMemberAccess	service -> typemap		1293624	0					
ANR	1293669	Identifier	service		1293624	0					
ANR	1293670	Identifier	typemap		1293624	1					
ANR	1293671	CompoundStatement		9:23:198:198	1293624	1					
ANR	1293672	ExpressionStatement	zend_hash_destroy ( service -> typemap )	4916:2:168218:168253	1293624	0	True				
ANR	1293673	CallExpression	zend_hash_destroy ( service -> typemap )		1293624	0					
ANR	1293674	Callee	zend_hash_destroy		1293624	0					
ANR	1293675	Identifier	zend_hash_destroy		1293624	0					
ANR	1293676	ArgumentList	service -> typemap		1293624	1					
ANR	1293677	Argument	service -> typemap		1293624	0					
ANR	1293678	PtrMemberAccess	service -> typemap		1293624	0					
ANR	1293679	Identifier	service		1293624	0					
ANR	1293680	Identifier	typemap		1293624	1					
ANR	1293681	ExpressionStatement	efree ( service -> typemap )	4917:2:168257:168280	1293624	1	True				
ANR	1293682	CallExpression	efree ( service -> typemap )		1293624	0					
ANR	1293683	Callee	efree		1293624	0					
ANR	1293684	Identifier	efree		1293624	0					
ANR	1293685	ArgumentList	service -> typemap		1293624	1					
ANR	1293686	Argument	service -> typemap		1293624	0					
ANR	1293687	PtrMemberAccess	service -> typemap		1293624	0					
ANR	1293688	Identifier	service		1293624	0					
ANR	1293689	Identifier	typemap		1293624	1					
ANR	1293690	IfStatement	if ( service -> soap_class . argc )		1293624	3					
ANR	1293691	Condition	service -> soap_class . argc	4920:5:168291:168314	1293624	0	True				
ANR	1293692	MemberAccess	service -> soap_class . argc		1293624	0					
ANR	1293693	PtrMemberAccess	service -> soap_class		1293624	0					
ANR	1293694	Identifier	service		1293624	0					
ANR	1293695	Identifier	soap_class		1293624	1					
ANR	1293696	Identifier	argc		1293624	1					
ANR	1293697	CompoundStatement		15:2:305:310	1293624	1					
ANR	1293698	IdentifierDeclStatement	int i ;	4921:2:168321:168326	1293624	0	True				
ANR	1293699	IdentifierDecl	i		1293624	0					
ANR	1293700	IdentifierDeclType	int		1293624	0					
ANR	1293701	Identifier	i		1293624	1					
ANR	1293702	ForStatement	for ( i = 0 ; i < service -> soap_class . argc ; i ++ )		1293624	1					
ANR	1293703	ForInit	i = 0 ;	4922:7:168335:168340	1293624	0	True				
ANR	1293704	AssignmentExpression	i = 0		1293624	0		=			
ANR	1293705	Identifier	i		1293624	0					
ANR	1293706	PrimaryExpression	0		1293624	1					
ANR	1293707	Condition	i < service -> soap_class . argc	4922:14:168342:168369	1293624	1	True				
ANR	1293708	RelationalExpression	i < service -> soap_class . argc		1293624	0		<			
ANR	1293709	Identifier	i		1293624	0					
ANR	1293710	MemberAccess	service -> soap_class . argc		1293624	1					
ANR	1293711	PtrMemberAccess	service -> soap_class		1293624	0					
ANR	1293712	Identifier	service		1293624	0					
ANR	1293713	Identifier	soap_class		1293624	1					
ANR	1293714	Identifier	argc		1293624	1					
ANR	1293715	PostIncDecOperationExpression	i ++	4922:43:168371:168373	1293624	2	True				
ANR	1293716	Identifier	i		1293624	0					
ANR	1293717	IncDec	++		1293624	1					
ANR	1293718	CompoundStatement		16:48:360:360	1293624	3					
ANR	1293719	ExpressionStatement	zval_ptr_dtor ( & service -> soap_class . argv [ i ] )	4923:3:168381:168424	1293624	0	True				
ANR	1293720	CallExpression	zval_ptr_dtor ( & service -> soap_class . argv [ i ] )		1293624	0					
ANR	1293721	Callee	zval_ptr_dtor		1293624	0					
ANR	1293722	Identifier	zval_ptr_dtor		1293624	0					
ANR	1293723	ArgumentList	& service -> soap_class . argv [ i ]		1293624	1					
ANR	1293724	Argument	& service -> soap_class . argv [ i ]		1293624	0					
ANR	1293725	UnaryOperationExpression	& service -> soap_class . argv [ i ]		1293624	0					
ANR	1293726	UnaryOperator	&		1293624	0					
ANR	1293727	ArrayIndexing	service -> soap_class . argv [ i ]		1293624	1					
ANR	1293728	MemberAccess	service -> soap_class . argv		1293624	0					
ANR	1293729	PtrMemberAccess	service -> soap_class		1293624	0					
ANR	1293730	Identifier	service		1293624	0					
ANR	1293731	Identifier	soap_class		1293624	1					
ANR	1293732	Identifier	argv		1293624	1					
ANR	1293733	Identifier	i		1293624	1					
ANR	1293734	ExpressionStatement	efree ( service -> soap_class . argv )	4925:2:168432:168463	1293624	2	True				
ANR	1293735	CallExpression	efree ( service -> soap_class . argv )		1293624	0					
ANR	1293736	Callee	efree		1293624	0					
ANR	1293737	Identifier	efree		1293624	0					
ANR	1293738	ArgumentList	service -> soap_class . argv		1293624	1					
ANR	1293739	Argument	service -> soap_class . argv		1293624	0					
ANR	1293740	MemberAccess	service -> soap_class . argv		1293624	0					
ANR	1293741	PtrMemberAccess	service -> soap_class		1293624	0					
ANR	1293742	Identifier	service		1293624	0					
ANR	1293743	Identifier	soap_class		1293624	1					
ANR	1293744	Identifier	argv		1293624	1					
ANR	1293745	IfStatement	if ( service -> actor )		1293624	4					
ANR	1293746	Condition	service -> actor	4928:5:168474:168487	1293624	0	True				
ANR	1293747	PtrMemberAccess	service -> actor		1293624	0					
ANR	1293748	Identifier	service		1293624	0					
ANR	1293749	Identifier	actor		1293624	1					
ANR	1293750	CompoundStatement		22:21:474:474	1293624	1					
ANR	1293751	ExpressionStatement	efree ( service -> actor )	4929:2:168494:168515	1293624	0	True				
ANR	1293752	CallExpression	efree ( service -> actor )		1293624	0					
ANR	1293753	Callee	efree		1293624	0					
ANR	1293754	Identifier	efree		1293624	0					
ANR	1293755	ArgumentList	service -> actor		1293624	1					
ANR	1293756	Argument	service -> actor		1293624	0					
ANR	1293757	PtrMemberAccess	service -> actor		1293624	0					
ANR	1293758	Identifier	service		1293624	0					
ANR	1293759	Identifier	actor		1293624	1					
ANR	1293760	IfStatement	if ( service -> uri )		1293624	5					
ANR	1293761	Condition	service -> uri	4931:5:168525:168536	1293624	0	True				
ANR	1293762	PtrMemberAccess	service -> uri		1293624	0					
ANR	1293763	Identifier	service		1293624	0					
ANR	1293764	Identifier	uri		1293624	1					
ANR	1293765	CompoundStatement		25:19:523:523	1293624	1					
ANR	1293766	ExpressionStatement	efree ( service -> uri )	4932:2:168543:168562	1293624	0	True				
ANR	1293767	CallExpression	efree ( service -> uri )		1293624	0					
ANR	1293768	Callee	efree		1293624	0					
ANR	1293769	Identifier	efree		1293624	0					
ANR	1293770	ArgumentList	service -> uri		1293624	1					
ANR	1293771	Argument	service -> uri		1293624	0					
ANR	1293772	PtrMemberAccess	service -> uri		1293624	0					
ANR	1293773	Identifier	service		1293624	0					
ANR	1293774	Identifier	uri		1293624	1					
ANR	1293775	IfStatement	if ( service -> sdl )		1293624	6					
ANR	1293776	Condition	service -> sdl	4934:5:168572:168583	1293624	0	True				
ANR	1293777	PtrMemberAccess	service -> sdl		1293624	0					
ANR	1293778	Identifier	service		1293624	0					
ANR	1293779	Identifier	sdl		1293624	1					
ANR	1293780	CompoundStatement		28:19:570:570	1293624	1					
ANR	1293781	ExpressionStatement	delete_sdl ( service -> sdl )	4935:2:168590:168614	1293624	0	True				
ANR	1293782	CallExpression	delete_sdl ( service -> sdl )		1293624	0					
ANR	1293783	Callee	delete_sdl		1293624	0					
ANR	1293784	Identifier	delete_sdl		1293624	0					
ANR	1293785	ArgumentList	service -> sdl		1293624	1					
ANR	1293786	Argument	service -> sdl		1293624	0					
ANR	1293787	PtrMemberAccess	service -> sdl		1293624	0					
ANR	1293788	Identifier	service		1293624	0					
ANR	1293789	Identifier	sdl		1293624	1					
ANR	1293790	IfStatement	if ( service -> encoding )		1293624	7					
ANR	1293791	Condition	service -> encoding	4937:5:168624:168640	1293624	0	True				
ANR	1293792	PtrMemberAccess	service -> encoding		1293624	0					
ANR	1293793	Identifier	service		1293624	0					
ANR	1293794	Identifier	encoding		1293624	1					
ANR	1293795	CompoundStatement		31:24:627:627	1293624	1					
ANR	1293796	ExpressionStatement	xmlCharEncCloseFunc ( service -> encoding )	4938:2:168647:168685	1293624	0	True				
ANR	1293797	CallExpression	xmlCharEncCloseFunc ( service -> encoding )		1293624	0					
ANR	1293798	Callee	xmlCharEncCloseFunc		1293624	0					
ANR	1293799	Identifier	xmlCharEncCloseFunc		1293624	0					
ANR	1293800	ArgumentList	service -> encoding		1293624	1					
ANR	1293801	Argument	service -> encoding		1293624	0					
ANR	1293802	PtrMemberAccess	service -> encoding		1293624	0					
ANR	1293803	Identifier	service		1293624	0					
ANR	1293804	Identifier	encoding		1293624	1					
ANR	1293805	IfStatement	if ( service -> class_map )		1293624	8					
ANR	1293806	Condition	service -> class_map	4940:5:168695:168712	1293624	0	True				
ANR	1293807	PtrMemberAccess	service -> class_map		1293624	0					
ANR	1293808	Identifier	service		1293624	0					
ANR	1293809	Identifier	class_map		1293624	1					
ANR	1293810	CompoundStatement		34:25:699:699	1293624	1					
ANR	1293811	ExpressionStatement	zend_hash_destroy ( service -> class_map )	4941:2:168719:168756	1293624	0	True				
ANR	1293812	CallExpression	zend_hash_destroy ( service -> class_map )		1293624	0					
ANR	1293813	Callee	zend_hash_destroy		1293624	0					
ANR	1293814	Identifier	zend_hash_destroy		1293624	0					
ANR	1293815	ArgumentList	service -> class_map		1293624	1					
ANR	1293816	Argument	service -> class_map		1293624	0					
ANR	1293817	PtrMemberAccess	service -> class_map		1293624	0					
ANR	1293818	Identifier	service		1293624	0					
ANR	1293819	Identifier	class_map		1293624	1					
ANR	1293820	ExpressionStatement	FREE_HASHTABLE ( service -> class_map )	4942:2:168760:168794	1293624	1	True				
ANR	1293821	CallExpression	FREE_HASHTABLE ( service -> class_map )		1293624	0					
ANR	1293822	Callee	FREE_HASHTABLE		1293624	0					
ANR	1293823	Identifier	FREE_HASHTABLE		1293624	0					
ANR	1293824	ArgumentList	service -> class_map		1293624	1					
ANR	1293825	Argument	service -> class_map		1293624	0					
ANR	1293826	PtrMemberAccess	service -> class_map		1293624	0					
ANR	1293827	Identifier	service		1293624	0					
ANR	1293828	Identifier	class_map		1293624	1					
ANR	1293829	IfStatement	if ( service -> soap_object )		1293624	9					
ANR	1293830	Condition	service -> soap_object	4944:5:168804:168823	1293624	0	True				
ANR	1293831	PtrMemberAccess	service -> soap_object		1293624	0					
ANR	1293832	Identifier	service		1293624	0					
ANR	1293833	Identifier	soap_object		1293624	1					
ANR	1293834	CompoundStatement		38:27:810:810	1293624	1					
ANR	1293835	ExpressionStatement	zval_ptr_dtor ( & service -> soap_object )	4945:2:168830:168866	1293624	0	True				
ANR	1293836	CallExpression	zval_ptr_dtor ( & service -> soap_object )		1293624	0					
ANR	1293837	Callee	zval_ptr_dtor		1293624	0					
ANR	1293838	Identifier	zval_ptr_dtor		1293624	0					
ANR	1293839	ArgumentList	& service -> soap_object		1293624	1					
ANR	1293840	Argument	& service -> soap_object		1293624	0					
ANR	1293841	UnaryOperationExpression	& service -> soap_object		1293624	0					
ANR	1293842	UnaryOperator	&		1293624	0					
ANR	1293843	PtrMemberAccess	service -> soap_object		1293624	1					
ANR	1293844	Identifier	service		1293624	0					
ANR	1293845	Identifier	soap_object		1293624	1					
ANR	1293846	ExpressionStatement	efree ( service )	4947:1:168872:168886	1293624	10	True				
ANR	1293847	CallExpression	efree ( service )		1293624	0					
ANR	1293848	Callee	efree		1293624	0					
ANR	1293849	Identifier	efree		1293624	0					
ANR	1293850	ArgumentList	service		1293624	1					
ANR	1293851	Argument	service		1293624	0					
ANR	1293852	Identifier	service		1293624	0					
ANR	1293853	ReturnType	static void		1293624	1					
ANR	1293854	Identifier	delete_service		1293624	2					
ANR	1293855	ParameterList	void * data		1293624	3					
ANR	1293856	Parameter	void * data	4906:27:168003:168012	1293624	0	True				
ANR	1293857	ParameterType	void *		1293624	0					
ANR	1293858	Identifier	data		1293624	1					
ANR	1293859	CFGEntryNode	ENTRY		1293624		True				
ANR	1293860	CFGExitNode	EXIT		1293624		True				
ANR	1293861	Symbol	service -> soap_class		1293624						
ANR	1293862	Symbol	service -> typemap		1293624						
ANR	1293863	Symbol	service -> soap_class . argv		1293624						
ANR	1293864	Symbol	data		1293624						
ANR	1293865	Symbol	service -> sdl		1293624						
ANR	1293866	Symbol	service -> soap_object		1293624						
ANR	1293867	Symbol	service -> soap_functions . ft		1293624						
ANR	1293868	Symbol	i		1293624						
ANR	1293869	Symbol	service -> class_map		1293624						
ANR	1293870	Symbol	& service -> soap_object		1293624						
ANR	1293871	Symbol	service		1293624						
ANR	1293872	Symbol	service -> soap_functions		1293624						
ANR	1293873	Symbol	service -> uri		1293624						
ANR	1293874	Symbol	service -> encoding		1293624						
ANR	1293875	Symbol	* service		1293624						
ANR	1293876	Symbol	service -> actor		1293624						
ANR	1293877	Symbol	service -> soap_class . argc		1293624						
ANR	1293878	Function	delete_hashtable	4950:0:168891:169005							
ANR	1293879	FunctionDef	delete_hashtable (void * data)		1293878	0					
ANR	1293880	CompoundStatement		4951:0:168932:169005	1293878	0					
ANR	1293881	IdentifierDeclStatement	HashTable * ht = ( HashTable * ) data ;	4952:1:168935:168967	1293878	0	True				
ANR	1293882	IdentifierDecl	* ht = ( HashTable * ) data		1293878	0					
ANR	1293883	IdentifierDeclType	HashTable *		1293878	0					
ANR	1293884	Identifier	ht		1293878	1					
ANR	1293885	AssignmentExpression	* ht = ( HashTable * ) data		1293878	2		=			
ANR	1293886	Identifier	ht		1293878	0					
ANR	1293887	CastExpression	( HashTable * ) data		1293878	1					
ANR	1293888	CastTarget	HashTable *		1293878	0					
ANR	1293889	Identifier	data		1293878	1					
ANR	1293890	ExpressionStatement	zend_hash_destroy ( ht )	4953:1:168970:168991	1293878	1	True				
ANR	1293891	CallExpression	zend_hash_destroy ( ht )		1293878	0					
ANR	1293892	Callee	zend_hash_destroy		1293878	0					
ANR	1293893	Identifier	zend_hash_destroy		1293878	0					
ANR	1293894	ArgumentList	ht		1293878	1					
ANR	1293895	Argument	ht		1293878	0					
ANR	1293896	Identifier	ht		1293878	0					
ANR	1293897	ExpressionStatement	efree ( ht )	4954:1:168994:169003	1293878	2	True				
ANR	1293898	CallExpression	efree ( ht )		1293878	0					
ANR	1293899	Callee	efree		1293878	0					
ANR	1293900	Identifier	efree		1293878	0					
ANR	1293901	ArgumentList	ht		1293878	1					
ANR	1293902	Argument	ht		1293878	0					
ANR	1293903	Identifier	ht		1293878	0					
ANR	1293904	ReturnType	static void		1293878	1					
ANR	1293905	Identifier	delete_hashtable		1293878	2					
ANR	1293906	ParameterList	void * data		1293878	3					
ANR	1293907	Parameter	void * data	4950:29:168920:168929	1293878	0	True				
ANR	1293908	ParameterType	void *		1293878	0					
ANR	1293909	Identifier	data		1293878	1					
ANR	1293910	CFGEntryNode	ENTRY		1293878		True				
ANR	1293911	CFGExitNode	EXIT		1293878		True				
ANR	1293912	Symbol	data		1293878						
ANR	1293913	Symbol	ht		1293878						
