command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	632968	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_libmbfl_filters_mbfilter_utf32.c								
ANR	632969	DeclStmt									
ANR	632970	Decl							const char	const char * [ ]	mbfl_encoding_utf32_aliases
ANR	632971	DeclStmt									
ANR	632972	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf32
ANR	632973	DeclStmt									
ANR	632974	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf32be
ANR	632975	DeclStmt									
ANR	632976	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf32le
ANR	632977	DeclStmt									
ANR	632978	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf32_wchar
ANR	632979	DeclStmt									
ANR	632980	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf32
ANR	632981	DeclStmt									
ANR	632982	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf32be_wchar
ANR	632983	DeclStmt									
ANR	632984	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf32be
ANR	632985	DeclStmt									
ANR	632986	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf32le_wchar
ANR	632987	DeclStmt									
ANR	632988	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf32le
ANR	632989	Function	mbfl_filt_conv_utf32_wchar	125:0:3118:4348							
ANR	632990	FunctionDef	"mbfl_filt_conv_utf32_wchar (int c , mbfl_convert_filter * filter)"		632989	0					
ANR	632991	CompoundStatement		126:0:3185:4348	632989	0					
ANR	632992	IdentifierDeclStatement	"int n , endian ;"	127:1:3188:3201	632989	0	True				
ANR	632993	IdentifierDecl	n		632989	0					
ANR	632994	IdentifierDeclType	int		632989	0					
ANR	632995	Identifier	n		632989	1					
ANR	632996	IdentifierDecl	endian		632989	1					
ANR	632997	IdentifierDeclType	int		632989	0					
ANR	632998	Identifier	endian		632989	1					
ANR	632999	ExpressionStatement	endian = filter -> status & 0xff00	129:1:3205:3237	632989	1	True				
ANR	633000	AssignmentExpression	endian = filter -> status & 0xff00		632989	0		=			
ANR	633001	Identifier	endian		632989	0					
ANR	633002	BitAndExpression	filter -> status & 0xff00		632989	1		&			
ANR	633003	PtrMemberAccess	filter -> status		632989	0					
ANR	633004	Identifier	filter		632989	0					
ANR	633005	Identifier	status		632989	1					
ANR	633006	PrimaryExpression	0xff00		632989	1					
ANR	633007	SwitchStatement	switch ( filter -> status & 0xff )		632989	2					
ANR	633008	Condition	filter -> status & 0xff	130:9:3248:3268	632989	0	True				
ANR	633009	BitAndExpression	filter -> status & 0xff		632989	0		&			
ANR	633010	PtrMemberAccess	filter -> status		632989	0					
ANR	633011	Identifier	filter		632989	0					
ANR	633012	Identifier	status		632989	1					
ANR	633013	PrimaryExpression	0xff		632989	1					
ANR	633014	CompoundStatement		5:32:85:85	632989	1					
ANR	633015	Label	case 0 :	131:1:3274:3280	632989	0	True				
ANR	633016	IfStatement	if ( endian )		632989	1					
ANR	633017	Condition	endian	132:6:3288:3293	632989	0	True				
ANR	633018	Identifier	endian		632989	0					
ANR	633019	CompoundStatement		7:14:110:110	632989	1					
ANR	633020	ExpressionStatement	n = c & 0xff	133:3:3301:3313	632989	0	True				
ANR	633021	AssignmentExpression	n = c & 0xff		632989	0		=			
ANR	633022	Identifier	n		632989	0					
ANR	633023	BitAndExpression	c & 0xff		632989	1		&			
ANR	633024	Identifier	c		632989	0					
ANR	633025	PrimaryExpression	0xff		632989	1					
ANR	633026	ElseStatement	else		632989	0					
ANR	633027	CompoundStatement		9:9:138:138	632989	0					
ANR	633028	ExpressionStatement	n = ( c & 0xff ) << 24	135:3:3329:3349	632989	0	True				
ANR	633029	AssignmentExpression	n = ( c & 0xff ) << 24		632989	0		=			
ANR	633030	Identifier	n		632989	0					
ANR	633031	ShiftExpression	( c & 0xff ) << 24		632989	1		<<			
ANR	633032	BitAndExpression	c & 0xff		632989	0		&			
ANR	633033	Identifier	c		632989	0					
ANR	633034	PrimaryExpression	0xff		632989	1					
ANR	633035	PrimaryExpression	24		632989	1					
ANR	633036	ExpressionStatement	filter -> cache = n	137:2:3357:3374	632989	2	True				
ANR	633037	AssignmentExpression	filter -> cache = n		632989	0		=			
ANR	633038	PtrMemberAccess	filter -> cache		632989	0					
ANR	633039	Identifier	filter		632989	0					
ANR	633040	Identifier	cache		632989	1					
ANR	633041	Identifier	n		632989	1					
ANR	633042	ExpressionStatement	filter -> status ++	138:2:3378:3394	632989	3	True				
ANR	633043	PostIncDecOperationExpression	filter -> status ++		632989	0					
ANR	633044	PtrMemberAccess	filter -> status		632989	0					
ANR	633045	Identifier	filter		632989	0					
ANR	633046	Identifier	status		632989	1					
ANR	633047	IncDec	++		632989	1					
ANR	633048	BreakStatement	break ;	139:2:3398:3403	632989	4	True				
ANR	633049	Label	case 1 :	140:1:3406:3412	632989	5	True				
ANR	633050	IfStatement	if ( endian )		632989	6					
ANR	633051	Condition	endian	141:6:3420:3425	632989	0	True				
ANR	633052	Identifier	endian		632989	0					
ANR	633053	CompoundStatement		16:14:242:242	632989	1					
ANR	633054	ExpressionStatement	n = ( c & 0xff ) << 8	142:3:3433:3452	632989	0	True				
ANR	633055	AssignmentExpression	n = ( c & 0xff ) << 8		632989	0		=			
ANR	633056	Identifier	n		632989	0					
ANR	633057	ShiftExpression	( c & 0xff ) << 8		632989	1		<<			
ANR	633058	BitAndExpression	c & 0xff		632989	0		&			
ANR	633059	Identifier	c		632989	0					
ANR	633060	PrimaryExpression	0xff		632989	1					
ANR	633061	PrimaryExpression	8		632989	1					
ANR	633062	ElseStatement	else		632989	0					
ANR	633063	CompoundStatement		18:9:277:277	632989	0					
ANR	633064	ExpressionStatement	n = ( c & 0xff ) << 16	144:3:3468:3488	632989	0	True				
ANR	633065	AssignmentExpression	n = ( c & 0xff ) << 16		632989	0		=			
ANR	633066	Identifier	n		632989	0					
ANR	633067	ShiftExpression	( c & 0xff ) << 16		632989	1		<<			
ANR	633068	BitAndExpression	c & 0xff		632989	0		&			
ANR	633069	Identifier	c		632989	0					
ANR	633070	PrimaryExpression	0xff		632989	1					
ANR	633071	PrimaryExpression	16		632989	1					
ANR	633072	ExpressionStatement	filter -> cache |= n	146:2:3496:3514	632989	7	True				
ANR	633073	AssignmentExpression	filter -> cache |= n		632989	0		|=			
ANR	633074	PtrMemberAccess	filter -> cache		632989	0					
ANR	633075	Identifier	filter		632989	0					
ANR	633076	Identifier	cache		632989	1					
ANR	633077	Identifier	n		632989	1					
ANR	633078	ExpressionStatement	filter -> status ++	147:2:3518:3534	632989	8	True				
ANR	633079	PostIncDecOperationExpression	filter -> status ++		632989	0					
ANR	633080	PtrMemberAccess	filter -> status		632989	0					
ANR	633081	Identifier	filter		632989	0					
ANR	633082	Identifier	status		632989	1					
ANR	633083	IncDec	++		632989	1					
ANR	633084	BreakStatement	break ;	148:2:3538:3543	632989	9	True				
ANR	633085	Label	case 2 :	149:1:3546:3552	632989	10	True				
ANR	633086	IfStatement	if ( endian )		632989	11					
ANR	633087	Condition	endian	150:6:3560:3565	632989	0	True				
ANR	633088	Identifier	endian		632989	0					
ANR	633089	CompoundStatement		25:14:382:382	632989	1					
ANR	633090	ExpressionStatement	n = ( c & 0xff ) << 16	151:3:3573:3593	632989	0	True				
ANR	633091	AssignmentExpression	n = ( c & 0xff ) << 16		632989	0		=			
ANR	633092	Identifier	n		632989	0					
ANR	633093	ShiftExpression	( c & 0xff ) << 16		632989	1		<<			
ANR	633094	BitAndExpression	c & 0xff		632989	0		&			
ANR	633095	Identifier	c		632989	0					
ANR	633096	PrimaryExpression	0xff		632989	1					
ANR	633097	PrimaryExpression	16		632989	1					
ANR	633098	ElseStatement	else		632989	0					
ANR	633099	CompoundStatement		27:9:418:418	632989	0					
ANR	633100	ExpressionStatement	n = ( c & 0xff ) << 8	153:3:3609:3628	632989	0	True				
ANR	633101	AssignmentExpression	n = ( c & 0xff ) << 8		632989	0		=			
ANR	633102	Identifier	n		632989	0					
ANR	633103	ShiftExpression	( c & 0xff ) << 8		632989	1		<<			
ANR	633104	BitAndExpression	c & 0xff		632989	0		&			
ANR	633105	Identifier	c		632989	0					
ANR	633106	PrimaryExpression	0xff		632989	1					
ANR	633107	PrimaryExpression	8		632989	1					
ANR	633108	ExpressionStatement	filter -> cache |= n	155:2:3636:3654	632989	12	True				
ANR	633109	AssignmentExpression	filter -> cache |= n		632989	0		|=			
ANR	633110	PtrMemberAccess	filter -> cache		632989	0					
ANR	633111	Identifier	filter		632989	0					
ANR	633112	Identifier	cache		632989	1					
ANR	633113	Identifier	n		632989	1					
ANR	633114	ExpressionStatement	filter -> status ++	156:2:3658:3674	632989	13	True				
ANR	633115	PostIncDecOperationExpression	filter -> status ++		632989	0					
ANR	633116	PtrMemberAccess	filter -> status		632989	0					
ANR	633117	Identifier	filter		632989	0					
ANR	633118	Identifier	status		632989	1					
ANR	633119	IncDec	++		632989	1					
ANR	633120	BreakStatement	break ;	157:2:3678:3683	632989	14	True				
ANR	633121	Label	default :	158:1:3686:3693	632989	15	True				
ANR	633122	Identifier	default		632989	0					
ANR	633123	IfStatement	if ( endian )		632989	16					
ANR	633124	Condition	endian	159:6:3701:3706	632989	0	True				
ANR	633125	Identifier	endian		632989	0					
ANR	633126	CompoundStatement		34:14:523:523	632989	1					
ANR	633127	ExpressionStatement	n = ( c & 0xff ) << 24	160:3:3714:3734	632989	0	True				
ANR	633128	AssignmentExpression	n = ( c & 0xff ) << 24		632989	0		=			
ANR	633129	Identifier	n		632989	0					
ANR	633130	ShiftExpression	( c & 0xff ) << 24		632989	1		<<			
ANR	633131	BitAndExpression	c & 0xff		632989	0		&			
ANR	633132	Identifier	c		632989	0					
ANR	633133	PrimaryExpression	0xff		632989	1					
ANR	633134	PrimaryExpression	24		632989	1					
ANR	633135	ElseStatement	else		632989	0					
ANR	633136	CompoundStatement		36:9:559:559	632989	0					
ANR	633137	ExpressionStatement	n = c & 0xff	162:3:3750:3762	632989	0	True				
ANR	633138	AssignmentExpression	n = c & 0xff		632989	0		=			
ANR	633139	Identifier	n		632989	0					
ANR	633140	BitAndExpression	c & 0xff		632989	1		&			
ANR	633141	Identifier	c		632989	0					
ANR	633142	PrimaryExpression	0xff		632989	1					
ANR	633143	ExpressionStatement	n |= filter -> cache	164:2:3770:3788	632989	17	True				
ANR	633144	AssignmentExpression	n |= filter -> cache		632989	0		|=			
ANR	633145	Identifier	n		632989	0					
ANR	633146	PtrMemberAccess	filter -> cache		632989	1					
ANR	633147	Identifier	filter		632989	0					
ANR	633148	Identifier	cache		632989	1					
ANR	633149	IfStatement	if ( ( n & 0xffff ) == 0 && ( ( n >> 16 ) & 0xffff ) == 0xfffe )		632989	18					
ANR	633150	Condition	( n & 0xffff ) == 0 && ( ( n >> 16 ) & 0xffff ) == 0xfffe	165:6:3796:3846	632989	0	True				
ANR	633151	AndExpression	( n & 0xffff ) == 0 && ( ( n >> 16 ) & 0xffff ) == 0xfffe		632989	0		&&			
ANR	633152	EqualityExpression	( n & 0xffff ) == 0		632989	0		==			
ANR	633153	BitAndExpression	n & 0xffff		632989	0		&			
ANR	633154	Identifier	n		632989	0					
ANR	633155	PrimaryExpression	0xffff		632989	1					
ANR	633156	PrimaryExpression	0		632989	1					
ANR	633157	EqualityExpression	( ( n >> 16 ) & 0xffff ) == 0xfffe		632989	1		==			
ANR	633158	BitAndExpression	( n >> 16 ) & 0xffff		632989	0		&			
ANR	633159	ShiftExpression	n >> 16		632989	0		>>			
ANR	633160	Identifier	n		632989	0					
ANR	633161	PrimaryExpression	16		632989	1					
ANR	633162	PrimaryExpression	0xffff		632989	1					
ANR	633163	PrimaryExpression	0xfffe		632989	1					
ANR	633164	CompoundStatement		40:59:663:663	632989	1					
ANR	633165	IfStatement	if ( endian )		632989	0					
ANR	633166	Condition	endian	166:7:3858:3863	632989	0	True				
ANR	633167	Identifier	endian		632989	0					
ANR	633168	CompoundStatement		41:15:680:680	632989	1					
ANR	633169	ExpressionStatement	filter -> status = 0	167:4:3872:3890	632989	0	True				
ANR	633170	AssignmentExpression	filter -> status = 0		632989	0		=			
ANR	633171	PtrMemberAccess	filter -> status		632989	0					
ANR	633172	Identifier	filter		632989	0					
ANR	633173	Identifier	status		632989	1					
ANR	633174	PrimaryExpression	0		632989	1					
ANR	633175	ElseStatement	else		632989	0					
ANR	633176	CompoundStatement		43:10:734:734	632989	0					
ANR	633177	ExpressionStatement	filter -> status = 0x100	169:4:3926:3948	632989	0	True				
ANR	633178	AssignmentExpression	filter -> status = 0x100		632989	0		=			
ANR	633179	PtrMemberAccess	filter -> status		632989	0					
ANR	633180	Identifier	filter		632989	0					
ANR	633181	Identifier	status		632989	1					
ANR	633182	PrimaryExpression	0x100		632989	1					
ANR	633183	ExpressionStatement	"CK ( ( * filter -> output_function ) ( 0xfeff , filter -> data ) )"	171:3:3979:4031	632989	1	True				
ANR	633184	CallExpression	"CK ( ( * filter -> output_function ) ( 0xfeff , filter -> data ) )"		632989	0					
ANR	633185	Callee	CK		632989	0					
ANR	633186	Identifier	CK		632989	0					
ANR	633187	ArgumentList	"( * filter -> output_function ) ( 0xfeff , filter -> data )"		632989	1					
ANR	633188	Argument	"( * filter -> output_function ) ( 0xfeff , filter -> data )"		632989	0					
ANR	633189	CallExpression	"( * filter -> output_function ) ( 0xfeff , filter -> data )"		632989	0					
ANR	633190	Callee	* filter -> output_function		632989	0					
ANR	633191	UnaryOperationExpression	* filter -> output_function		632989	0					
ANR	633192	UnaryOperator	*		632989	0					
ANR	633193	PtrMemberAccess	filter -> output_function		632989	1					
ANR	633194	Identifier	filter		632989	0					
ANR	633195	Identifier	output_function		632989	1					
ANR	633196	ArgumentList	0xfeff		632989	1					
ANR	633197	Argument	0xfeff		632989	0					
ANR	633198	PrimaryExpression	0xfeff		632989	0					
ANR	633199	Argument	filter -> data		632989	1					
ANR	633200	PtrMemberAccess	filter -> data		632989	0					
ANR	633201	Identifier	filter		632989	0					
ANR	633202	Identifier	data		632989	1					
ANR	633203	ElseStatement	else		632989	0					
ANR	633204	CompoundStatement		47:9:856:856	632989	0					
ANR	633205	ExpressionStatement	filter -> status &= ~0xff	173:3:4047:4070	632989	0	True				
ANR	633206	AssignmentExpression	filter -> status &= ~0xff		632989	0		&=			
ANR	633207	PtrMemberAccess	filter -> status		632989	0					
ANR	633208	Identifier	filter		632989	0					
ANR	633209	Identifier	status		632989	1					
ANR	633210	Identifier	~0xff		632989	1					
ANR	633211	IfStatement	if ( n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff ) )		632989	1					
ANR	633212	Condition	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )	174:7:4079:4134	632989	0	True				
ANR	633213	AndExpression	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )		632989	0		&&			
ANR	633214	RelationalExpression	n < MBFL_WCSPLANE_UTF32MAX		632989	0		<			
ANR	633215	Identifier	n		632989	0					
ANR	633216	Identifier	MBFL_WCSPLANE_UTF32MAX		632989	1					
ANR	633217	OrExpression	n < 0xd800 || n > 0xdfff		632989	1		||			
ANR	633218	RelationalExpression	n < 0xd800		632989	0		<			
ANR	633219	Identifier	n		632989	0					
ANR	633220	PrimaryExpression	0xd800		632989	1					
ANR	633221	RelationalExpression	n > 0xdfff		632989	1		>			
ANR	633222	Identifier	n		632989	0					
ANR	633223	PrimaryExpression	0xdfff		632989	1					
ANR	633224	CompoundStatement		49:65:951:951	632989	1					
ANR	633225	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	175:4:4143:4190	632989	0	True				
ANR	633226	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		632989	0					
ANR	633227	Callee	CK		632989	0					
ANR	633228	Identifier	CK		632989	0					
ANR	633229	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		632989	1					
ANR	633230	Argument	"( * filter -> output_function ) ( n , filter -> data )"		632989	0					
ANR	633231	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		632989	0					
ANR	633232	Callee	* filter -> output_function		632989	0					
ANR	633233	UnaryOperationExpression	* filter -> output_function		632989	0					
ANR	633234	UnaryOperator	*		632989	0					
ANR	633235	PtrMemberAccess	filter -> output_function		632989	1					
ANR	633236	Identifier	filter		632989	0					
ANR	633237	Identifier	output_function		632989	1					
ANR	633238	ArgumentList	n		632989	1					
ANR	633239	Argument	n		632989	0					
ANR	633240	Identifier	n		632989	0					
ANR	633241	Argument	filter -> data		632989	1					
ANR	633242	PtrMemberAccess	filter -> data		632989	0					
ANR	633243	Identifier	filter		632989	0					
ANR	633244	Identifier	data		632989	1					
ANR	633245	ElseStatement	else		632989	0					
ANR	633246	CompoundStatement		51:10:1016:1016	632989	0					
ANR	633247	ExpressionStatement	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH	177:4:4208:4260	632989	0	True				
ANR	633248	AssignmentExpression	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		632989	0		=			
ANR	633249	Identifier	n		632989	0					
ANR	633250	InclusiveOrExpression	( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		632989	1		|			
ANR	633251	BitAndExpression	n & MBFL_WCSGROUP_MASK		632989	0		&			
ANR	633252	Identifier	n		632989	0					
ANR	633253	Identifier	MBFL_WCSGROUP_MASK		632989	1					
ANR	633254	Identifier	MBFL_WCSGROUP_THROUGH		632989	1					
ANR	633255	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	178:4:4266:4313	632989	1	True				
ANR	633256	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		632989	0					
ANR	633257	Callee	CK		632989	0					
ANR	633258	Identifier	CK		632989	0					
ANR	633259	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		632989	1					
ANR	633260	Argument	"( * filter -> output_function ) ( n , filter -> data )"		632989	0					
ANR	633261	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		632989	0					
ANR	633262	Callee	* filter -> output_function		632989	0					
ANR	633263	UnaryOperationExpression	* filter -> output_function		632989	0					
ANR	633264	UnaryOperator	*		632989	0					
ANR	633265	PtrMemberAccess	filter -> output_function		632989	1					
ANR	633266	Identifier	filter		632989	0					
ANR	633267	Identifier	output_function		632989	1					
ANR	633268	ArgumentList	n		632989	1					
ANR	633269	Argument	n		632989	0					
ANR	633270	Identifier	n		632989	0					
ANR	633271	Argument	filter -> data		632989	1					
ANR	633272	PtrMemberAccess	filter -> data		632989	0					
ANR	633273	Identifier	filter		632989	0					
ANR	633274	Identifier	data		632989	1					
ANR	633275	BreakStatement	break ;	181:2:4326:4331	632989	19	True				
ANR	633276	ReturnStatement	return c ;	184:1:4338:4346	632989	3	True				
ANR	633277	Identifier	c		632989	0					
ANR	633278	ReturnType	int		632989	1					
ANR	633279	Identifier	mbfl_filt_conv_utf32_wchar		632989	2					
ANR	633280	ParameterList	"int c , mbfl_convert_filter * filter"		632989	3					
ANR	633281	Parameter	int c	125:31:3149:3153	632989	0	True				
ANR	633282	ParameterType	int		632989	0					
ANR	633283	Identifier	c		632989	1					
ANR	633284	Parameter	mbfl_convert_filter * filter	125:38:3156:3182	632989	1	True				
ANR	633285	ParameterType	mbfl_convert_filter *		632989	0					
ANR	633286	Identifier	filter		632989	1					
ANR	633287	CFGEntryNode	ENTRY		632989		True				
ANR	633288	CFGExitNode	EXIT		632989		True				
ANR	633289	Symbol	MBFL_WCSPLANE_UTF32MAX		632989						
ANR	633290	Symbol	~0xff		632989						
ANR	633291	Symbol	filter -> cache		632989						
ANR	633292	Symbol	c		632989						
ANR	633293	Symbol	MBFL_WCSGROUP_MASK		632989						
ANR	633294	Symbol	MBFL_WCSGROUP_THROUGH		632989						
ANR	633295	Symbol	* filter -> output_function		632989						
ANR	633296	Symbol	endian		632989						
ANR	633297	Symbol	n		632989						
ANR	633298	Symbol	* filter		632989						
ANR	633299	Symbol	filter -> data		632989						
ANR	633300	Symbol	filter		632989						
ANR	633301	Symbol	filter -> output_function		632989						
ANR	633302	Symbol	filter -> status		632989						
ANR	633303	Symbol	* * filter		632989						
ANR	633304	Function	mbfl_filt_conv_utf32be_wchar	190:0:4379:5081							
ANR	633305	FunctionDef	"mbfl_filt_conv_utf32be_wchar (int c , mbfl_convert_filter * filter)"		633304	0					
ANR	633306	CompoundStatement		191:0:4448:5081	633304	0					
ANR	633307	IdentifierDeclStatement	int n ;	192:1:4451:4456	633304	0	True				
ANR	633308	IdentifierDecl	n		633304	0					
ANR	633309	IdentifierDeclType	int		633304	0					
ANR	633310	Identifier	n		633304	1					
ANR	633311	IfStatement	if ( filter -> status == 0 )		633304	1					
ANR	633312	Condition	filter -> status == 0	194:5:4464:4482	633304	0	True				
ANR	633313	EqualityExpression	filter -> status == 0		633304	0		==			
ANR	633314	PtrMemberAccess	filter -> status		633304	0					
ANR	633315	Identifier	filter		633304	0					
ANR	633316	Identifier	status		633304	1					
ANR	633317	PrimaryExpression	0		633304	1					
ANR	633318	CompoundStatement		4:26:36:36	633304	1					
ANR	633319	ExpressionStatement	filter -> status = 1	195:2:4489:4507	633304	0	True				
ANR	633320	AssignmentExpression	filter -> status = 1		633304	0		=			
ANR	633321	PtrMemberAccess	filter -> status		633304	0					
ANR	633322	Identifier	filter		633304	0					
ANR	633323	Identifier	status		633304	1					
ANR	633324	PrimaryExpression	1		633304	1					
ANR	633325	ExpressionStatement	n = ( c & 0xff ) << 24	196:2:4511:4531	633304	1	True				
ANR	633326	AssignmentExpression	n = ( c & 0xff ) << 24		633304	0		=			
ANR	633327	Identifier	n		633304	0					
ANR	633328	ShiftExpression	( c & 0xff ) << 24		633304	1		<<			
ANR	633329	BitAndExpression	c & 0xff		633304	0		&			
ANR	633330	Identifier	c		633304	0					
ANR	633331	PrimaryExpression	0xff		633304	1					
ANR	633332	PrimaryExpression	24		633304	1					
ANR	633333	ExpressionStatement	filter -> cache = n	197:2:4535:4552	633304	2	True				
ANR	633334	AssignmentExpression	filter -> cache = n		633304	0		=			
ANR	633335	PtrMemberAccess	filter -> cache		633304	0					
ANR	633336	Identifier	filter		633304	0					
ANR	633337	Identifier	cache		633304	1					
ANR	633338	Identifier	n		633304	1					
ANR	633339	ElseStatement	else		633304	0					
ANR	633340	IfStatement	if ( filter -> status == 1 )		633304	0					
ANR	633341	Condition	filter -> status == 1	198:12:4566:4584	633304	0	True				
ANR	633342	EqualityExpression	filter -> status == 1		633304	0		==			
ANR	633343	PtrMemberAccess	filter -> status		633304	0					
ANR	633344	Identifier	filter		633304	0					
ANR	633345	Identifier	status		633304	1					
ANR	633346	PrimaryExpression	1		633304	1					
ANR	633347	CompoundStatement		8:33:138:138	633304	1					
ANR	633348	ExpressionStatement	filter -> status = 2	199:2:4591:4609	633304	0	True				
ANR	633349	AssignmentExpression	filter -> status = 2		633304	0		=			
ANR	633350	PtrMemberAccess	filter -> status		633304	0					
ANR	633351	Identifier	filter		633304	0					
ANR	633352	Identifier	status		633304	1					
ANR	633353	PrimaryExpression	2		633304	1					
ANR	633354	ExpressionStatement	n = ( c & 0xff ) << 16	200:2:4613:4633	633304	1	True				
ANR	633355	AssignmentExpression	n = ( c & 0xff ) << 16		633304	0		=			
ANR	633356	Identifier	n		633304	0					
ANR	633357	ShiftExpression	( c & 0xff ) << 16		633304	1		<<			
ANR	633358	BitAndExpression	c & 0xff		633304	0		&			
ANR	633359	Identifier	c		633304	0					
ANR	633360	PrimaryExpression	0xff		633304	1					
ANR	633361	PrimaryExpression	16		633304	1					
ANR	633362	ExpressionStatement	filter -> cache |= n	201:2:4637:4655	633304	2	True				
ANR	633363	AssignmentExpression	filter -> cache |= n		633304	0		|=			
ANR	633364	PtrMemberAccess	filter -> cache		633304	0					
ANR	633365	Identifier	filter		633304	0					
ANR	633366	Identifier	cache		633304	1					
ANR	633367	Identifier	n		633304	1					
ANR	633368	ElseStatement	else		633304	0					
ANR	633369	IfStatement	if ( filter -> status == 2 )		633304	0					
ANR	633370	Condition	filter -> status == 2	202:12:4669:4687	633304	0	True				
ANR	633371	EqualityExpression	filter -> status == 2		633304	0		==			
ANR	633372	PtrMemberAccess	filter -> status		633304	0					
ANR	633373	Identifier	filter		633304	0					
ANR	633374	Identifier	status		633304	1					
ANR	633375	PrimaryExpression	2		633304	1					
ANR	633376	CompoundStatement		12:33:241:241	633304	1					
ANR	633377	ExpressionStatement	filter -> status = 3	203:2:4694:4712	633304	0	True				
ANR	633378	AssignmentExpression	filter -> status = 3		633304	0		=			
ANR	633379	PtrMemberAccess	filter -> status		633304	0					
ANR	633380	Identifier	filter		633304	0					
ANR	633381	Identifier	status		633304	1					
ANR	633382	PrimaryExpression	3		633304	1					
ANR	633383	ExpressionStatement	n = ( c & 0xff ) << 8	204:2:4716:4735	633304	1	True				
ANR	633384	AssignmentExpression	n = ( c & 0xff ) << 8		633304	0		=			
ANR	633385	Identifier	n		633304	0					
ANR	633386	ShiftExpression	( c & 0xff ) << 8		633304	1		<<			
ANR	633387	BitAndExpression	c & 0xff		633304	0		&			
ANR	633388	Identifier	c		633304	0					
ANR	633389	PrimaryExpression	0xff		633304	1					
ANR	633390	PrimaryExpression	8		633304	1					
ANR	633391	ExpressionStatement	filter -> cache |= n	205:2:4739:4757	633304	2	True				
ANR	633392	AssignmentExpression	filter -> cache |= n		633304	0		|=			
ANR	633393	PtrMemberAccess	filter -> cache		633304	0					
ANR	633394	Identifier	filter		633304	0					
ANR	633395	Identifier	cache		633304	1					
ANR	633396	Identifier	n		633304	1					
ANR	633397	ElseStatement	else		633304	0					
ANR	633398	CompoundStatement		16:8:318:318	633304	0					
ANR	633399	ExpressionStatement	filter -> status = 0	207:2:4771:4789	633304	0	True				
ANR	633400	AssignmentExpression	filter -> status = 0		633304	0		=			
ANR	633401	PtrMemberAccess	filter -> status		633304	0					
ANR	633402	Identifier	filter		633304	0					
ANR	633403	Identifier	status		633304	1					
ANR	633404	PrimaryExpression	0		633304	1					
ANR	633405	ExpressionStatement	n = ( c & 0xff ) | filter -> cache	208:2:4793:4823	633304	1	True				
ANR	633406	AssignmentExpression	n = ( c & 0xff ) | filter -> cache		633304	0		=			
ANR	633407	Identifier	n		633304	0					
ANR	633408	InclusiveOrExpression	( c & 0xff ) | filter -> cache		633304	1		|			
ANR	633409	BitAndExpression	c & 0xff		633304	0		&			
ANR	633410	Identifier	c		633304	0					
ANR	633411	PrimaryExpression	0xff		633304	1					
ANR	633412	PtrMemberAccess	filter -> cache		633304	1					
ANR	633413	Identifier	filter		633304	0					
ANR	633414	Identifier	cache		633304	1					
ANR	633415	IfStatement	if ( n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff ) )		633304	2					
ANR	633416	Condition	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )	209:6:4831:4886	633304	0	True				
ANR	633417	AndExpression	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )		633304	0		&&			
ANR	633418	RelationalExpression	n < MBFL_WCSPLANE_UTF32MAX		633304	0		<			
ANR	633419	Identifier	n		633304	0					
ANR	633420	Identifier	MBFL_WCSPLANE_UTF32MAX		633304	1					
ANR	633421	OrExpression	n < 0xd800 || n > 0xdfff		633304	1		||			
ANR	633422	RelationalExpression	n < 0xd800		633304	0		<			
ANR	633423	Identifier	n		633304	0					
ANR	633424	PrimaryExpression	0xd800		633304	1					
ANR	633425	RelationalExpression	n > 0xdfff		633304	1		>			
ANR	633426	Identifier	n		633304	0					
ANR	633427	PrimaryExpression	0xdfff		633304	1					
ANR	633428	CompoundStatement		19:64:440:440	633304	1					
ANR	633429	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	210:3:4894:4941	633304	0	True				
ANR	633430	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		633304	0					
ANR	633431	Callee	CK		633304	0					
ANR	633432	Identifier	CK		633304	0					
ANR	633433	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		633304	1					
ANR	633434	Argument	"( * filter -> output_function ) ( n , filter -> data )"		633304	0					
ANR	633435	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		633304	0					
ANR	633436	Callee	* filter -> output_function		633304	0					
ANR	633437	UnaryOperationExpression	* filter -> output_function		633304	0					
ANR	633438	UnaryOperator	*		633304	0					
ANR	633439	PtrMemberAccess	filter -> output_function		633304	1					
ANR	633440	Identifier	filter		633304	0					
ANR	633441	Identifier	output_function		633304	1					
ANR	633442	ArgumentList	n		633304	1					
ANR	633443	Argument	n		633304	0					
ANR	633444	Identifier	n		633304	0					
ANR	633445	Argument	filter -> data		633304	1					
ANR	633446	PtrMemberAccess	filter -> data		633304	0					
ANR	633447	Identifier	filter		633304	0					
ANR	633448	Identifier	data		633304	1					
ANR	633449	ElseStatement	else		633304	0					
ANR	633450	CompoundStatement		21:9:503:503	633304	0					
ANR	633451	ExpressionStatement	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH	212:3:4957:5009	633304	0	True				
ANR	633452	AssignmentExpression	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		633304	0		=			
ANR	633453	Identifier	n		633304	0					
ANR	633454	InclusiveOrExpression	( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		633304	1		|			
ANR	633455	BitAndExpression	n & MBFL_WCSGROUP_MASK		633304	0		&			
ANR	633456	Identifier	n		633304	0					
ANR	633457	Identifier	MBFL_WCSGROUP_MASK		633304	1					
ANR	633458	Identifier	MBFL_WCSGROUP_THROUGH		633304	1					
ANR	633459	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	213:3:5014:5061	633304	1	True				
ANR	633460	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		633304	0					
ANR	633461	Callee	CK		633304	0					
ANR	633462	Identifier	CK		633304	0					
ANR	633463	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		633304	1					
ANR	633464	Argument	"( * filter -> output_function ) ( n , filter -> data )"		633304	0					
ANR	633465	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		633304	0					
ANR	633466	Callee	* filter -> output_function		633304	0					
ANR	633467	UnaryOperationExpression	* filter -> output_function		633304	0					
ANR	633468	UnaryOperator	*		633304	0					
ANR	633469	PtrMemberAccess	filter -> output_function		633304	1					
ANR	633470	Identifier	filter		633304	0					
ANR	633471	Identifier	output_function		633304	1					
ANR	633472	ArgumentList	n		633304	1					
ANR	633473	Argument	n		633304	0					
ANR	633474	Identifier	n		633304	0					
ANR	633475	Argument	filter -> data		633304	1					
ANR	633476	PtrMemberAccess	filter -> data		633304	0					
ANR	633477	Identifier	filter		633304	0					
ANR	633478	Identifier	data		633304	1					
ANR	633479	ReturnStatement	return c ;	216:1:5071:5079	633304	2	True				
ANR	633480	Identifier	c		633304	0					
ANR	633481	ReturnType	int		633304	1					
ANR	633482	Identifier	mbfl_filt_conv_utf32be_wchar		633304	2					
ANR	633483	ParameterList	"int c , mbfl_convert_filter * filter"		633304	3					
ANR	633484	Parameter	int c	190:33:4412:4416	633304	0	True				
ANR	633485	ParameterType	int		633304	0					
ANR	633486	Identifier	c		633304	1					
ANR	633487	Parameter	mbfl_convert_filter * filter	190:40:4419:4445	633304	1	True				
ANR	633488	ParameterType	mbfl_convert_filter *		633304	0					
ANR	633489	Identifier	filter		633304	1					
ANR	633490	CFGEntryNode	ENTRY		633304		True				
ANR	633491	CFGExitNode	EXIT		633304		True				
ANR	633492	Symbol	MBFL_WCSPLANE_UTF32MAX		633304						
ANR	633493	Symbol	filter -> cache		633304						
ANR	633494	Symbol	c		633304						
ANR	633495	Symbol	MBFL_WCSGROUP_MASK		633304						
ANR	633496	Symbol	MBFL_WCSGROUP_THROUGH		633304						
ANR	633497	Symbol	* filter -> output_function		633304						
ANR	633498	Symbol	n		633304						
ANR	633499	Symbol	* filter		633304						
ANR	633500	Symbol	filter -> data		633304						
ANR	633501	Symbol	filter		633304						
ANR	633502	Symbol	filter -> output_function		633304						
ANR	633503	Symbol	filter -> status		633304						
ANR	633504	Symbol	* * filter		633304						
ANR	633505	Function	mbfl_filt_conv_wchar_utf32be	222:0:5112:5630							
ANR	633506	FunctionDef	"mbfl_filt_conv_wchar_utf32be (int c , mbfl_convert_filter * filter)"		633505	0					
ANR	633507	CompoundStatement		223:0:5181:5630	633505	0					
ANR	633508	IfStatement	if ( c >= 0 && c < MBFL_WCSPLANE_UTF32MAX )		633505	0					
ANR	633509	Condition	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX	224:5:5188:5223	633505	0	True				
ANR	633510	AndExpression	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX		633505	0		&&			
ANR	633511	RelationalExpression	c >= 0		633505	0		>=			
ANR	633512	Identifier	c		633505	0					
ANR	633513	PrimaryExpression	0		633505	1					
ANR	633514	RelationalExpression	c < MBFL_WCSPLANE_UTF32MAX		633505	1		<			
ANR	633515	Identifier	c		633505	0					
ANR	633516	Identifier	MBFL_WCSPLANE_UTF32MAX		633505	1					
ANR	633517	CompoundStatement		2:43:44:44	633505	1					
ANR	633518	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"	225:2:5230:5292	633505	0	True				
ANR	633519	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"		633505	0					
ANR	633520	Callee	CK		633505	0					
ANR	633521	Identifier	CK		633505	0					
ANR	633522	ArgumentList	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		633505	1					
ANR	633523	Argument	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		633505	0					
ANR	633524	CallExpression	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		633505	0					
ANR	633525	Callee	* filter -> output_function		633505	0					
ANR	633526	UnaryOperationExpression	* filter -> output_function		633505	0					
ANR	633527	UnaryOperator	*		633505	0					
ANR	633528	PtrMemberAccess	filter -> output_function		633505	1					
ANR	633529	Identifier	filter		633505	0					
ANR	633530	Identifier	output_function		633505	1					
ANR	633531	ArgumentList	( c >> 24 ) & 0xff		633505	1					
ANR	633532	Argument	( c >> 24 ) & 0xff		633505	0					
ANR	633533	BitAndExpression	( c >> 24 ) & 0xff		633505	0		&			
ANR	633534	ShiftExpression	c >> 24		633505	0		>>			
ANR	633535	Identifier	c		633505	0					
ANR	633536	PrimaryExpression	24		633505	1					
ANR	633537	PrimaryExpression	0xff		633505	1					
ANR	633538	Argument	filter -> data		633505	1					
ANR	633539	PtrMemberAccess	filter -> data		633505	0					
ANR	633540	Identifier	filter		633505	0					
ANR	633541	Identifier	data		633505	1					
ANR	633542	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"	226:2:5296:5358	633505	1	True				
ANR	633543	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"		633505	0					
ANR	633544	Callee	CK		633505	0					
ANR	633545	Identifier	CK		633505	0					
ANR	633546	ArgumentList	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		633505	1					
ANR	633547	Argument	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		633505	0					
ANR	633548	CallExpression	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		633505	0					
ANR	633549	Callee	* filter -> output_function		633505	0					
ANR	633550	UnaryOperationExpression	* filter -> output_function		633505	0					
ANR	633551	UnaryOperator	*		633505	0					
ANR	633552	PtrMemberAccess	filter -> output_function		633505	1					
ANR	633553	Identifier	filter		633505	0					
ANR	633554	Identifier	output_function		633505	1					
ANR	633555	ArgumentList	( c >> 16 ) & 0xff		633505	1					
ANR	633556	Argument	( c >> 16 ) & 0xff		633505	0					
ANR	633557	BitAndExpression	( c >> 16 ) & 0xff		633505	0		&			
ANR	633558	ShiftExpression	c >> 16		633505	0		>>			
ANR	633559	Identifier	c		633505	0					
ANR	633560	PrimaryExpression	16		633505	1					
ANR	633561	PrimaryExpression	0xff		633505	1					
ANR	633562	Argument	filter -> data		633505	1					
ANR	633563	PtrMemberAccess	filter -> data		633505	0					
ANR	633564	Identifier	filter		633505	0					
ANR	633565	Identifier	data		633505	1					
ANR	633566	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	227:2:5362:5423	633505	2	True				
ANR	633567	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		633505	0					
ANR	633568	Callee	CK		633505	0					
ANR	633569	Identifier	CK		633505	0					
ANR	633570	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		633505	1					
ANR	633571	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		633505	0					
ANR	633572	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		633505	0					
ANR	633573	Callee	* filter -> output_function		633505	0					
ANR	633574	UnaryOperationExpression	* filter -> output_function		633505	0					
ANR	633575	UnaryOperator	*		633505	0					
ANR	633576	PtrMemberAccess	filter -> output_function		633505	1					
ANR	633577	Identifier	filter		633505	0					
ANR	633578	Identifier	output_function		633505	1					
ANR	633579	ArgumentList	( c >> 8 ) & 0xff		633505	1					
ANR	633580	Argument	( c >> 8 ) & 0xff		633505	0					
ANR	633581	BitAndExpression	( c >> 8 ) & 0xff		633505	0		&			
ANR	633582	ShiftExpression	c >> 8		633505	0		>>			
ANR	633583	Identifier	c		633505	0					
ANR	633584	PrimaryExpression	8		633505	1					
ANR	633585	PrimaryExpression	0xff		633505	1					
ANR	633586	Argument	filter -> data		633505	1					
ANR	633587	PtrMemberAccess	filter -> data		633505	0					
ANR	633588	Identifier	filter		633505	0					
ANR	633589	Identifier	data		633505	1					
ANR	633590	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	228:2:5427:5481	633505	3	True				
ANR	633591	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		633505	0					
ANR	633592	Callee	CK		633505	0					
ANR	633593	Identifier	CK		633505	0					
ANR	633594	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		633505	1					
ANR	633595	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		633505	0					
ANR	633596	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		633505	0					
ANR	633597	Callee	* filter -> output_function		633505	0					
ANR	633598	UnaryOperationExpression	* filter -> output_function		633505	0					
ANR	633599	UnaryOperator	*		633505	0					
ANR	633600	PtrMemberAccess	filter -> output_function		633505	1					
ANR	633601	Identifier	filter		633505	0					
ANR	633602	Identifier	output_function		633505	1					
ANR	633603	ArgumentList	c & 0xff		633505	1					
ANR	633604	Argument	c & 0xff		633505	0					
ANR	633605	BitAndExpression	c & 0xff		633505	0		&			
ANR	633606	Identifier	c		633505	0					
ANR	633607	PrimaryExpression	0xff		633505	1					
ANR	633608	Argument	filter -> data		633505	1					
ANR	633609	PtrMemberAccess	filter -> data		633505	0					
ANR	633610	Identifier	filter		633505	0					
ANR	633611	Identifier	data		633505	1					
ANR	633612	ElseStatement	else		633505	0					
ANR	633613	CompoundStatement		7:8:309:309	633505	0					
ANR	633614	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		633505	0					
ANR	633615	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	230:6:5499:5557	633505	0	True				
ANR	633616	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		633505	0		!=			
ANR	633617	PtrMemberAccess	filter -> illegal_mode		633505	0					
ANR	633618	Identifier	filter		633505	0					
ANR	633619	Identifier	illegal_mode		633505	1					
ANR	633620	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		633505	1					
ANR	633621	CompoundStatement		8:67:378:378	633505	1					
ANR	633622	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	231:3:5565:5609	633505	0	True				
ANR	633623	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		633505	0					
ANR	633624	Callee	CK		633505	0					
ANR	633625	Identifier	CK		633505	0					
ANR	633626	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		633505	1					
ANR	633627	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		633505	0					
ANR	633628	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		633505	0					
ANR	633629	Callee	mbfl_filt_conv_illegal_output		633505	0					
ANR	633630	Identifier	mbfl_filt_conv_illegal_output		633505	0					
ANR	633631	ArgumentList	c		633505	1					
ANR	633632	Argument	c		633505	0					
ANR	633633	Identifier	c		633505	0					
ANR	633634	Argument	filter		633505	1					
ANR	633635	Identifier	filter		633505	0					
ANR	633636	ReturnStatement	return c ;	235:1:5620:5628	633505	1	True				
ANR	633637	Identifier	c		633505	0					
ANR	633638	ReturnType	int		633505	1					
ANR	633639	Identifier	mbfl_filt_conv_wchar_utf32be		633505	2					
ANR	633640	ParameterList	"int c , mbfl_convert_filter * filter"		633505	3					
ANR	633641	Parameter	int c	222:33:5145:5149	633505	0	True				
ANR	633642	ParameterType	int		633505	0					
ANR	633643	Identifier	c		633505	1					
ANR	633644	Parameter	mbfl_convert_filter * filter	222:40:5152:5178	633505	1	True				
ANR	633645	ParameterType	mbfl_convert_filter *		633505	0					
ANR	633646	Identifier	filter		633505	1					
ANR	633647	CFGEntryNode	ENTRY		633505		True				
ANR	633648	CFGExitNode	EXIT		633505		True				
ANR	633649	Symbol	filter		633505						
ANR	633650	Symbol	MBFL_WCSPLANE_UTF32MAX		633505						
ANR	633651	Symbol	c		633505						
ANR	633652	Symbol	filter -> output_function		633505						
ANR	633653	Symbol	mbfl_filt_conv_illegal_output		633505						
ANR	633654	Symbol	filter -> illegal_mode		633505						
ANR	633655	Symbol	* filter -> output_function		633505						
ANR	633656	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		633505						
ANR	633657	Symbol	filter -> data		633505						
ANR	633658	Symbol	* filter		633505						
ANR	633659	Symbol	* * filter		633505						
ANR	633660	Function	mbfl_filt_conv_utf32le_wchar	241:0:5661:6367							
ANR	633661	FunctionDef	"mbfl_filt_conv_utf32le_wchar (int c , mbfl_convert_filter * filter)"		633660	0					
ANR	633662	CompoundStatement		242:0:5730:6367	633660	0					
ANR	633663	IdentifierDeclStatement	int n ;	243:1:5733:5738	633660	0	True				
ANR	633664	IdentifierDecl	n		633660	0					
ANR	633665	IdentifierDeclType	int		633660	0					
ANR	633666	Identifier	n		633660	1					
ANR	633667	IfStatement	if ( filter -> status == 0 )		633660	1					
ANR	633668	Condition	filter -> status == 0	245:5:5746:5764	633660	0	True				
ANR	633669	EqualityExpression	filter -> status == 0		633660	0		==			
ANR	633670	PtrMemberAccess	filter -> status		633660	0					
ANR	633671	Identifier	filter		633660	0					
ANR	633672	Identifier	status		633660	1					
ANR	633673	PrimaryExpression	0		633660	1					
ANR	633674	CompoundStatement		4:26:36:36	633660	1					
ANR	633675	ExpressionStatement	filter -> status = 1	246:2:5771:5789	633660	0	True				
ANR	633676	AssignmentExpression	filter -> status = 1		633660	0		=			
ANR	633677	PtrMemberAccess	filter -> status		633660	0					
ANR	633678	Identifier	filter		633660	0					
ANR	633679	Identifier	status		633660	1					
ANR	633680	PrimaryExpression	1		633660	1					
ANR	633681	ExpressionStatement	n = ( c & 0xff )	247:2:5793:5807	633660	1	True				
ANR	633682	AssignmentExpression	n = ( c & 0xff )		633660	0		=			
ANR	633683	Identifier	n		633660	0					
ANR	633684	BitAndExpression	c & 0xff		633660	1		&			
ANR	633685	Identifier	c		633660	0					
ANR	633686	PrimaryExpression	0xff		633660	1					
ANR	633687	ExpressionStatement	filter -> cache = n	248:2:5811:5828	633660	2	True				
ANR	633688	AssignmentExpression	filter -> cache = n		633660	0		=			
ANR	633689	PtrMemberAccess	filter -> cache		633660	0					
ANR	633690	Identifier	filter		633660	0					
ANR	633691	Identifier	cache		633660	1					
ANR	633692	Identifier	n		633660	1					
ANR	633693	ElseStatement	else		633660	0					
ANR	633694	IfStatement	if ( filter -> status == 1 )		633660	0					
ANR	633695	Condition	filter -> status == 1	249:12:5842:5860	633660	0	True				
ANR	633696	EqualityExpression	filter -> status == 1		633660	0		==			
ANR	633697	PtrMemberAccess	filter -> status		633660	0					
ANR	633698	Identifier	filter		633660	0					
ANR	633699	Identifier	status		633660	1					
ANR	633700	PrimaryExpression	1		633660	1					
ANR	633701	CompoundStatement		8:33:132:132	633660	1					
ANR	633702	ExpressionStatement	filter -> status = 2	250:2:5867:5885	633660	0	True				
ANR	633703	AssignmentExpression	filter -> status = 2		633660	0		=			
ANR	633704	PtrMemberAccess	filter -> status		633660	0					
ANR	633705	Identifier	filter		633660	0					
ANR	633706	Identifier	status		633660	1					
ANR	633707	PrimaryExpression	2		633660	1					
ANR	633708	ExpressionStatement	n = ( c & 0xff ) << 8	251:2:5889:5908	633660	1	True				
ANR	633709	AssignmentExpression	n = ( c & 0xff ) << 8		633660	0		=			
ANR	633710	Identifier	n		633660	0					
ANR	633711	ShiftExpression	( c & 0xff ) << 8		633660	1		<<			
ANR	633712	BitAndExpression	c & 0xff		633660	0		&			
ANR	633713	Identifier	c		633660	0					
ANR	633714	PrimaryExpression	0xff		633660	1					
ANR	633715	PrimaryExpression	8		633660	1					
ANR	633716	ExpressionStatement	filter -> cache |= n	252:2:5912:5930	633660	2	True				
ANR	633717	AssignmentExpression	filter -> cache |= n		633660	0		|=			
ANR	633718	PtrMemberAccess	filter -> cache		633660	0					
ANR	633719	Identifier	filter		633660	0					
ANR	633720	Identifier	cache		633660	1					
ANR	633721	Identifier	n		633660	1					
ANR	633722	ElseStatement	else		633660	0					
ANR	633723	IfStatement	if ( filter -> status == 2 )		633660	0					
ANR	633724	Condition	filter -> status == 2	253:12:5944:5962	633660	0	True				
ANR	633725	EqualityExpression	filter -> status == 2		633660	0		==			
ANR	633726	PtrMemberAccess	filter -> status		633660	0					
ANR	633727	Identifier	filter		633660	0					
ANR	633728	Identifier	status		633660	1					
ANR	633729	PrimaryExpression	2		633660	1					
ANR	633730	CompoundStatement		12:33:234:234	633660	1					
ANR	633731	ExpressionStatement	filter -> status = 3	254:2:5969:5987	633660	0	True				
ANR	633732	AssignmentExpression	filter -> status = 3		633660	0		=			
ANR	633733	PtrMemberAccess	filter -> status		633660	0					
ANR	633734	Identifier	filter		633660	0					
ANR	633735	Identifier	status		633660	1					
ANR	633736	PrimaryExpression	3		633660	1					
ANR	633737	ExpressionStatement	n = ( c & 0xff ) << 16	255:2:5991:6011	633660	1	True				
ANR	633738	AssignmentExpression	n = ( c & 0xff ) << 16		633660	0		=			
ANR	633739	Identifier	n		633660	0					
ANR	633740	ShiftExpression	( c & 0xff ) << 16		633660	1		<<			
ANR	633741	BitAndExpression	c & 0xff		633660	0		&			
ANR	633742	Identifier	c		633660	0					
ANR	633743	PrimaryExpression	0xff		633660	1					
ANR	633744	PrimaryExpression	16		633660	1					
ANR	633745	ExpressionStatement	filter -> cache |= n	256:2:6015:6033	633660	2	True				
ANR	633746	AssignmentExpression	filter -> cache |= n		633660	0		|=			
ANR	633747	PtrMemberAccess	filter -> cache		633660	0					
ANR	633748	Identifier	filter		633660	0					
ANR	633749	Identifier	cache		633660	1					
ANR	633750	Identifier	n		633660	1					
ANR	633751	ElseStatement	else		633660	0					
ANR	633752	CompoundStatement		16:8:312:312	633660	0					
ANR	633753	ExpressionStatement	filter -> status = 0	258:2:6047:6065	633660	0	True				
ANR	633754	AssignmentExpression	filter -> status = 0		633660	0		=			
ANR	633755	PtrMemberAccess	filter -> status		633660	0					
ANR	633756	Identifier	filter		633660	0					
ANR	633757	Identifier	status		633660	1					
ANR	633758	PrimaryExpression	0		633660	1					
ANR	633759	ExpressionStatement	n = ( ( c & 0xff ) << 24 ) | filter -> cache	259:2:6069:6107	633660	1	True				
ANR	633760	AssignmentExpression	n = ( ( c & 0xff ) << 24 ) | filter -> cache		633660	0		=			
ANR	633761	Identifier	n		633660	0					
ANR	633762	InclusiveOrExpression	( ( c & 0xff ) << 24 ) | filter -> cache		633660	1		|			
ANR	633763	ShiftExpression	( c & 0xff ) << 24		633660	0		<<			
ANR	633764	BitAndExpression	c & 0xff		633660	0		&			
ANR	633765	Identifier	c		633660	0					
ANR	633766	PrimaryExpression	0xff		633660	1					
ANR	633767	PrimaryExpression	24		633660	1					
ANR	633768	PtrMemberAccess	filter -> cache		633660	1					
ANR	633769	Identifier	filter		633660	0					
ANR	633770	Identifier	cache		633660	1					
ANR	633771	IfStatement	if ( n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff ) )		633660	2					
ANR	633772	Condition	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )	260:6:6115:6170	633660	0	True				
ANR	633773	AndExpression	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )		633660	0		&&			
ANR	633774	RelationalExpression	n < MBFL_WCSPLANE_UTF32MAX		633660	0		<			
ANR	633775	Identifier	n		633660	0					
ANR	633776	Identifier	MBFL_WCSPLANE_UTF32MAX		633660	1					
ANR	633777	OrExpression	n < 0xd800 || n > 0xdfff		633660	1		||			
ANR	633778	RelationalExpression	n < 0xd800		633660	0		<			
ANR	633779	Identifier	n		633660	0					
ANR	633780	PrimaryExpression	0xd800		633660	1					
ANR	633781	RelationalExpression	n > 0xdfff		633660	1		>			
ANR	633782	Identifier	n		633660	0					
ANR	633783	PrimaryExpression	0xdfff		633660	1					
ANR	633784	CompoundStatement		19:64:442:442	633660	1					
ANR	633785	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	261:3:6178:6225	633660	0	True				
ANR	633786	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		633660	0					
ANR	633787	Callee	CK		633660	0					
ANR	633788	Identifier	CK		633660	0					
ANR	633789	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		633660	1					
ANR	633790	Argument	"( * filter -> output_function ) ( n , filter -> data )"		633660	0					
ANR	633791	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		633660	0					
ANR	633792	Callee	* filter -> output_function		633660	0					
ANR	633793	UnaryOperationExpression	* filter -> output_function		633660	0					
ANR	633794	UnaryOperator	*		633660	0					
ANR	633795	PtrMemberAccess	filter -> output_function		633660	1					
ANR	633796	Identifier	filter		633660	0					
ANR	633797	Identifier	output_function		633660	1					
ANR	633798	ArgumentList	n		633660	1					
ANR	633799	Argument	n		633660	0					
ANR	633800	Identifier	n		633660	0					
ANR	633801	Argument	filter -> data		633660	1					
ANR	633802	PtrMemberAccess	filter -> data		633660	0					
ANR	633803	Identifier	filter		633660	0					
ANR	633804	Identifier	data		633660	1					
ANR	633805	ElseStatement	else		633660	0					
ANR	633806	CompoundStatement		21:9:505:505	633660	0					
ANR	633807	ExpressionStatement	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH	263:3:6241:6293	633660	0	True				
ANR	633808	AssignmentExpression	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		633660	0		=			
ANR	633809	Identifier	n		633660	0					
ANR	633810	InclusiveOrExpression	( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		633660	1		|			
ANR	633811	BitAndExpression	n & MBFL_WCSGROUP_MASK		633660	0		&			
ANR	633812	Identifier	n		633660	0					
ANR	633813	Identifier	MBFL_WCSGROUP_MASK		633660	1					
ANR	633814	Identifier	MBFL_WCSGROUP_THROUGH		633660	1					
ANR	633815	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	264:3:6298:6345	633660	1	True				
ANR	633816	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		633660	0					
ANR	633817	Callee	CK		633660	0					
ANR	633818	Identifier	CK		633660	0					
ANR	633819	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		633660	1					
ANR	633820	Argument	"( * filter -> output_function ) ( n , filter -> data )"		633660	0					
ANR	633821	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		633660	0					
ANR	633822	Callee	* filter -> output_function		633660	0					
ANR	633823	UnaryOperationExpression	* filter -> output_function		633660	0					
ANR	633824	UnaryOperator	*		633660	0					
ANR	633825	PtrMemberAccess	filter -> output_function		633660	1					
ANR	633826	Identifier	filter		633660	0					
ANR	633827	Identifier	output_function		633660	1					
ANR	633828	ArgumentList	n		633660	1					
ANR	633829	Argument	n		633660	0					
ANR	633830	Identifier	n		633660	0					
ANR	633831	Argument	filter -> data		633660	1					
ANR	633832	PtrMemberAccess	filter -> data		633660	0					
ANR	633833	Identifier	filter		633660	0					
ANR	633834	Identifier	data		633660	1					
ANR	633835	ReturnStatement	return c ;	267:1:6357:6365	633660	2	True				
ANR	633836	Identifier	c		633660	0					
ANR	633837	ReturnType	int		633660	1					
ANR	633838	Identifier	mbfl_filt_conv_utf32le_wchar		633660	2					
ANR	633839	ParameterList	"int c , mbfl_convert_filter * filter"		633660	3					
ANR	633840	Parameter	int c	241:33:5694:5698	633660	0	True				
ANR	633841	ParameterType	int		633660	0					
ANR	633842	Identifier	c		633660	1					
ANR	633843	Parameter	mbfl_convert_filter * filter	241:40:5701:5727	633660	1	True				
ANR	633844	ParameterType	mbfl_convert_filter *		633660	0					
ANR	633845	Identifier	filter		633660	1					
ANR	633846	CFGEntryNode	ENTRY		633660		True				
ANR	633847	CFGExitNode	EXIT		633660		True				
ANR	633848	Symbol	MBFL_WCSPLANE_UTF32MAX		633660						
ANR	633849	Symbol	filter -> cache		633660						
ANR	633850	Symbol	c		633660						
ANR	633851	Symbol	MBFL_WCSGROUP_MASK		633660						
ANR	633852	Symbol	MBFL_WCSGROUP_THROUGH		633660						
ANR	633853	Symbol	* filter -> output_function		633660						
ANR	633854	Symbol	n		633660						
ANR	633855	Symbol	* filter		633660						
ANR	633856	Symbol	filter -> data		633660						
ANR	633857	Symbol	filter		633660						
ANR	633858	Symbol	filter -> output_function		633660						
ANR	633859	Symbol	filter -> status		633660						
ANR	633860	Symbol	* * filter		633660						
ANR	633861	Function	mbfl_filt_conv_wchar_utf32le	273:0:6398:6916							
ANR	633862	FunctionDef	"mbfl_filt_conv_wchar_utf32le (int c , mbfl_convert_filter * filter)"		633861	0					
ANR	633863	CompoundStatement		274:0:6467:6916	633861	0					
ANR	633864	IfStatement	if ( c >= 0 && c < MBFL_WCSPLANE_UTF32MAX )		633861	0					
ANR	633865	Condition	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX	275:5:6474:6509	633861	0	True				
ANR	633866	AndExpression	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX		633861	0		&&			
ANR	633867	RelationalExpression	c >= 0		633861	0		>=			
ANR	633868	Identifier	c		633861	0					
ANR	633869	PrimaryExpression	0		633861	1					
ANR	633870	RelationalExpression	c < MBFL_WCSPLANE_UTF32MAX		633861	1		<			
ANR	633871	Identifier	c		633861	0					
ANR	633872	Identifier	MBFL_WCSPLANE_UTF32MAX		633861	1					
ANR	633873	CompoundStatement		2:43:44:44	633861	1					
ANR	633874	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	276:2:6516:6570	633861	0	True				
ANR	633875	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		633861	0					
ANR	633876	Callee	CK		633861	0					
ANR	633877	Identifier	CK		633861	0					
ANR	633878	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		633861	1					
ANR	633879	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		633861	0					
ANR	633880	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		633861	0					
ANR	633881	Callee	* filter -> output_function		633861	0					
ANR	633882	UnaryOperationExpression	* filter -> output_function		633861	0					
ANR	633883	UnaryOperator	*		633861	0					
ANR	633884	PtrMemberAccess	filter -> output_function		633861	1					
ANR	633885	Identifier	filter		633861	0					
ANR	633886	Identifier	output_function		633861	1					
ANR	633887	ArgumentList	c & 0xff		633861	1					
ANR	633888	Argument	c & 0xff		633861	0					
ANR	633889	BitAndExpression	c & 0xff		633861	0		&			
ANR	633890	Identifier	c		633861	0					
ANR	633891	PrimaryExpression	0xff		633861	1					
ANR	633892	Argument	filter -> data		633861	1					
ANR	633893	PtrMemberAccess	filter -> data		633861	0					
ANR	633894	Identifier	filter		633861	0					
ANR	633895	Identifier	data		633861	1					
ANR	633896	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	277:2:6574:6635	633861	1	True				
ANR	633897	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		633861	0					
ANR	633898	Callee	CK		633861	0					
ANR	633899	Identifier	CK		633861	0					
ANR	633900	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		633861	1					
ANR	633901	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		633861	0					
ANR	633902	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		633861	0					
ANR	633903	Callee	* filter -> output_function		633861	0					
ANR	633904	UnaryOperationExpression	* filter -> output_function		633861	0					
ANR	633905	UnaryOperator	*		633861	0					
ANR	633906	PtrMemberAccess	filter -> output_function		633861	1					
ANR	633907	Identifier	filter		633861	0					
ANR	633908	Identifier	output_function		633861	1					
ANR	633909	ArgumentList	( c >> 8 ) & 0xff		633861	1					
ANR	633910	Argument	( c >> 8 ) & 0xff		633861	0					
ANR	633911	BitAndExpression	( c >> 8 ) & 0xff		633861	0		&			
ANR	633912	ShiftExpression	c >> 8		633861	0		>>			
ANR	633913	Identifier	c		633861	0					
ANR	633914	PrimaryExpression	8		633861	1					
ANR	633915	PrimaryExpression	0xff		633861	1					
ANR	633916	Argument	filter -> data		633861	1					
ANR	633917	PtrMemberAccess	filter -> data		633861	0					
ANR	633918	Identifier	filter		633861	0					
ANR	633919	Identifier	data		633861	1					
ANR	633920	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"	278:2:6639:6701	633861	2	True				
ANR	633921	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"		633861	0					
ANR	633922	Callee	CK		633861	0					
ANR	633923	Identifier	CK		633861	0					
ANR	633924	ArgumentList	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		633861	1					
ANR	633925	Argument	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		633861	0					
ANR	633926	CallExpression	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		633861	0					
ANR	633927	Callee	* filter -> output_function		633861	0					
ANR	633928	UnaryOperationExpression	* filter -> output_function		633861	0					
ANR	633929	UnaryOperator	*		633861	0					
ANR	633930	PtrMemberAccess	filter -> output_function		633861	1					
ANR	633931	Identifier	filter		633861	0					
ANR	633932	Identifier	output_function		633861	1					
ANR	633933	ArgumentList	( c >> 16 ) & 0xff		633861	1					
ANR	633934	Argument	( c >> 16 ) & 0xff		633861	0					
ANR	633935	BitAndExpression	( c >> 16 ) & 0xff		633861	0		&			
ANR	633936	ShiftExpression	c >> 16		633861	0		>>			
ANR	633937	Identifier	c		633861	0					
ANR	633938	PrimaryExpression	16		633861	1					
ANR	633939	PrimaryExpression	0xff		633861	1					
ANR	633940	Argument	filter -> data		633861	1					
ANR	633941	PtrMemberAccess	filter -> data		633861	0					
ANR	633942	Identifier	filter		633861	0					
ANR	633943	Identifier	data		633861	1					
ANR	633944	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"	279:2:6705:6767	633861	3	True				
ANR	633945	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"		633861	0					
ANR	633946	Callee	CK		633861	0					
ANR	633947	Identifier	CK		633861	0					
ANR	633948	ArgumentList	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		633861	1					
ANR	633949	Argument	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		633861	0					
ANR	633950	CallExpression	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		633861	0					
ANR	633951	Callee	* filter -> output_function		633861	0					
ANR	633952	UnaryOperationExpression	* filter -> output_function		633861	0					
ANR	633953	UnaryOperator	*		633861	0					
ANR	633954	PtrMemberAccess	filter -> output_function		633861	1					
ANR	633955	Identifier	filter		633861	0					
ANR	633956	Identifier	output_function		633861	1					
ANR	633957	ArgumentList	( c >> 24 ) & 0xff		633861	1					
ANR	633958	Argument	( c >> 24 ) & 0xff		633861	0					
ANR	633959	BitAndExpression	( c >> 24 ) & 0xff		633861	0		&			
ANR	633960	ShiftExpression	c >> 24		633861	0		>>			
ANR	633961	Identifier	c		633861	0					
ANR	633962	PrimaryExpression	24		633861	1					
ANR	633963	PrimaryExpression	0xff		633861	1					
ANR	633964	Argument	filter -> data		633861	1					
ANR	633965	PtrMemberAccess	filter -> data		633861	0					
ANR	633966	Identifier	filter		633861	0					
ANR	633967	Identifier	data		633861	1					
ANR	633968	ElseStatement	else		633861	0					
ANR	633969	CompoundStatement		7:8:309:309	633861	0					
ANR	633970	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		633861	0					
ANR	633971	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	281:6:6785:6843	633861	0	True				
ANR	633972	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		633861	0		!=			
ANR	633973	PtrMemberAccess	filter -> illegal_mode		633861	0					
ANR	633974	Identifier	filter		633861	0					
ANR	633975	Identifier	illegal_mode		633861	1					
ANR	633976	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		633861	1					
ANR	633977	CompoundStatement		8:67:378:378	633861	1					
ANR	633978	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	282:3:6851:6895	633861	0	True				
ANR	633979	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		633861	0					
ANR	633980	Callee	CK		633861	0					
ANR	633981	Identifier	CK		633861	0					
ANR	633982	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		633861	1					
ANR	633983	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		633861	0					
ANR	633984	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		633861	0					
ANR	633985	Callee	mbfl_filt_conv_illegal_output		633861	0					
ANR	633986	Identifier	mbfl_filt_conv_illegal_output		633861	0					
ANR	633987	ArgumentList	c		633861	1					
ANR	633988	Argument	c		633861	0					
ANR	633989	Identifier	c		633861	0					
ANR	633990	Argument	filter		633861	1					
ANR	633991	Identifier	filter		633861	0					
ANR	633992	ReturnStatement	return c ;	286:1:6906:6914	633861	1	True				
ANR	633993	Identifier	c		633861	0					
ANR	633994	ReturnType	int		633861	1					
ANR	633995	Identifier	mbfl_filt_conv_wchar_utf32le		633861	2					
ANR	633996	ParameterList	"int c , mbfl_convert_filter * filter"		633861	3					
ANR	633997	Parameter	int c	273:33:6431:6435	633861	0	True				
ANR	633998	ParameterType	int		633861	0					
ANR	633999	Identifier	c		633861	1					
ANR	634000	Parameter	mbfl_convert_filter * filter	273:40:6438:6464	633861	1	True				
ANR	634001	ParameterType	mbfl_convert_filter *		633861	0					
ANR	634002	Identifier	filter		633861	1					
ANR	634003	CFGEntryNode	ENTRY		633861		True				
ANR	634004	CFGExitNode	EXIT		633861		True				
ANR	634005	Symbol	filter		633861						
ANR	634006	Symbol	MBFL_WCSPLANE_UTF32MAX		633861						
ANR	634007	Symbol	c		633861						
ANR	634008	Symbol	filter -> output_function		633861						
ANR	634009	Symbol	mbfl_filt_conv_illegal_output		633861						
ANR	634010	Symbol	filter -> illegal_mode		633861						
ANR	634011	Symbol	* filter -> output_function		633861						
ANR	634012	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		633861						
ANR	634013	Symbol	* filter		633861						
ANR	634014	Symbol	filter -> data		633861						
ANR	634015	Symbol	* * filter		633861						
