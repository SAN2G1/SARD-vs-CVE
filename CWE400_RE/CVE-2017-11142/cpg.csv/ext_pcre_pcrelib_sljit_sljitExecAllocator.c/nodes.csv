command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	998787	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitExecAllocator.c								
ANR	998788	Function	alloc_chunk	84:0:3700:3839							
ANR	998789	FunctionDef	alloc_chunk (sljit_uw size)		998788	0					
ANR	998790	CompoundStatement		85:0:3753:3839	998788	0					
ANR	998791	ReturnStatement	"return VirtualAlloc ( NULL , size , MEM_COMMIT | MEM_RESERVE , PAGE_EXECUTE_READWRITE ) ;"	86:1:3756:3837	998788	0	True				
ANR	998792	CallExpression	"VirtualAlloc ( NULL , size , MEM_COMMIT | MEM_RESERVE , PAGE_EXECUTE_READWRITE )"		998788	0					
ANR	998793	Callee	VirtualAlloc		998788	0					
ANR	998794	Identifier	VirtualAlloc		998788	0					
ANR	998795	ArgumentList	NULL		998788	1					
ANR	998796	Argument	NULL		998788	0					
ANR	998797	Identifier	NULL		998788	0					
ANR	998798	Argument	size		998788	1					
ANR	998799	Identifier	size		998788	0					
ANR	998800	Argument	MEM_COMMIT | MEM_RESERVE		998788	2					
ANR	998801	InclusiveOrExpression	MEM_COMMIT | MEM_RESERVE		998788	0		|			
ANR	998802	Identifier	MEM_COMMIT		998788	0					
ANR	998803	Identifier	MEM_RESERVE		998788	1					
ANR	998804	Argument	PAGE_EXECUTE_READWRITE		998788	3					
ANR	998805	Identifier	PAGE_EXECUTE_READWRITE		998788	0					
ANR	998806	ReturnType	static SLJIT_INLINE void *		998788	1					
ANR	998807	Identifier	alloc_chunk		998788	2					
ANR	998808	ParameterList	sljit_uw size		998788	3					
ANR	998809	Parameter	sljit_uw size	84:38:3738:3750	998788	0	True				
ANR	998810	ParameterType	sljit_uw		998788	0					
ANR	998811	Identifier	size		998788	1					
ANR	998812	CFGEntryNode	ENTRY		998788		True				
ANR	998813	CFGExitNode	EXIT		998788		True				
ANR	998814	Symbol	VirtualAlloc		998788						
ANR	998815	Symbol	NULL		998788						
ANR	998816	Symbol	size		998788						
ANR	998817	Symbol	MEM_COMMIT		998788						
ANR	998818	Symbol	PAGE_EXECUTE_READWRITE		998788						
ANR	998819	Symbol	MEM_RESERVE		998788						
ANR	998820	Function	free_chunk	89:0:3842:3970							
ANR	998821	FunctionDef	"free_chunk (void * chunk , sljit_uw size)"		998820	0					
ANR	998822	CompoundStatement		90:0:3906:3970	998820	0					
ANR	998823	ExpressionStatement	SLJIT_UNUSED_ARG ( size )	91:1:3909:3931	998820	0	True				
ANR	998824	CallExpression	SLJIT_UNUSED_ARG ( size )		998820	0					
ANR	998825	Callee	SLJIT_UNUSED_ARG		998820	0					
ANR	998826	Identifier	SLJIT_UNUSED_ARG		998820	0					
ANR	998827	ArgumentList	size		998820	1					
ANR	998828	Argument	size		998820	0					
ANR	998829	Identifier	size		998820	0					
ANR	998830	ExpressionStatement	"VirtualFree ( chunk , 0 , MEM_RELEASE )"	92:1:3934:3968	998820	1	True				
ANR	998831	CallExpression	"VirtualFree ( chunk , 0 , MEM_RELEASE )"		998820	0					
ANR	998832	Callee	VirtualFree		998820	0					
ANR	998833	Identifier	VirtualFree		998820	0					
ANR	998834	ArgumentList	chunk		998820	1					
ANR	998835	Argument	chunk		998820	0					
ANR	998836	Identifier	chunk		998820	0					
ANR	998837	Argument	0		998820	1					
ANR	998838	PrimaryExpression	0		998820	0					
ANR	998839	Argument	MEM_RELEASE		998820	2					
ANR	998840	Identifier	MEM_RELEASE		998820	0					
ANR	998841	ReturnType	static SLJIT_INLINE void		998820	1					
ANR	998842	Identifier	free_chunk		998820	2					
ANR	998843	ParameterList	"void * chunk , sljit_uw size"		998820	3					
ANR	998844	Parameter	void * chunk	89:36:3878:3888	998820	0	True				
ANR	998845	ParameterType	void *		998820	0					
ANR	998846	Identifier	chunk		998820	1					
ANR	998847	Parameter	sljit_uw size	89:49:3891:3903	998820	1	True				
ANR	998848	ParameterType	sljit_uw		998820	0					
ANR	998849	Identifier	size		998820	1					
ANR	998850	CFGEntryNode	ENTRY		998820		True				
ANR	998851	CFGExitNode	EXIT		998820		True				
ANR	998852	Symbol	size		998820						
ANR	998853	Symbol	chunk		998820						
ANR	998854	Symbol	MEM_RELEASE		998820						
ANR	998855	Function	alloc_chunk	97:0:3980:4377							
ANR	998856	FunctionDef	alloc_chunk (sljit_uw size)		998855	0					
ANR	998857	CompoundStatement		98:0:4033:4377	998855	0					
ANR	998858	IdentifierDeclStatement	void * retval ;	99:1:4036:4048	998855	0	True				
ANR	998859	IdentifierDecl	* retval		998855	0					
ANR	998860	IdentifierDeclType	void *		998855	0					
ANR	998861	Identifier	retval		998855	1					
ANR	998862	ExpressionStatement	"retval = mmap ( NULL , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANON , - 1 , 0 )"	102:1:4068:4160	998855	1	True				
ANR	998863	AssignmentExpression	"retval = mmap ( NULL , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANON , - 1 , 0 )"		998855	0		=			
ANR	998864	Identifier	retval		998855	0					
ANR	998865	CallExpression	"mmap ( NULL , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANON , - 1 , 0 )"		998855	1					
ANR	998866	Callee	mmap		998855	0					
ANR	998867	Identifier	mmap		998855	0					
ANR	998868	ArgumentList	NULL		998855	1					
ANR	998869	Argument	NULL		998855	0					
ANR	998870	Identifier	NULL		998855	0					
ANR	998871	Argument	size		998855	1					
ANR	998872	Identifier	size		998855	0					
ANR	998873	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		998855	2					
ANR	998874	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		998855	0		|			
ANR	998875	Identifier	PROT_READ		998855	0					
ANR	998876	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		998855	1		|			
ANR	998877	Identifier	PROT_WRITE		998855	0					
ANR	998878	Identifier	PROT_EXEC		998855	1					
ANR	998879	Argument	MAP_PRIVATE | MAP_ANON		998855	3					
ANR	998880	InclusiveOrExpression	MAP_PRIVATE | MAP_ANON		998855	0		|			
ANR	998881	Identifier	MAP_PRIVATE		998855	0					
ANR	998882	Identifier	MAP_ANON		998855	1					
ANR	998883	Argument	- 1		998855	4					
ANR	998884	UnaryOperationExpression	- 1		998855	0					
ANR	998885	UnaryOperator	-		998855	0					
ANR	998886	PrimaryExpression	1		998855	1					
ANR	998887	Argument	0		998855	5					
ANR	998888	PrimaryExpression	0		998855	0					
ANR	998889	ReturnStatement	return ( retval != MAP_FAILED ) ? retval : NULL ;	111:1:4330:4375	998855	2	True				
ANR	998890	ConditionalExpression	( retval != MAP_FAILED ) ? retval : NULL		998855	0					
ANR	998891	Condition	retval != MAP_FAILED		998855	0					
ANR	998892	EqualityExpression	retval != MAP_FAILED		998855	0		!=			
ANR	998893	Identifier	retval		998855	0					
ANR	998894	Identifier	MAP_FAILED		998855	1					
ANR	998895	Identifier	retval		998855	1					
ANR	998896	Identifier	NULL		998855	2					
ANR	998897	ReturnType	static SLJIT_INLINE void *		998855	1					
ANR	998898	Identifier	alloc_chunk		998855	2					
ANR	998899	ParameterList	sljit_uw size		998855	3					
ANR	998900	Parameter	sljit_uw size	97:38:4018:4030	998855	0	True				
ANR	998901	ParameterType	sljit_uw		998855	0					
ANR	998902	Identifier	size		998855	1					
ANR	998903	CFGEntryNode	ENTRY		998855		True				
ANR	998904	CFGExitNode	EXIT		998855		True				
ANR	998905	Symbol	NULL		998855						
ANR	998906	Symbol	MAP_ANON		998855						
ANR	998907	Symbol	size		998855						
ANR	998908	Symbol	PROT_WRITE		998855						
ANR	998909	Symbol	PROT_EXEC		998855						
ANR	998910	Symbol	PROT_READ		998855						
ANR	998911	Symbol	mmap		998855						
ANR	998912	Symbol	retval		998855						
ANR	998913	Symbol	MAP_PRIVATE		998855						
ANR	998914	Symbol	MAP_FAILED		998855						
ANR	998915	Function	free_chunk	114:0:4380:4468							
ANR	998916	FunctionDef	"free_chunk (void * chunk , sljit_uw size)"		998915	0					
ANR	998917	CompoundStatement		115:0:4444:4468	998915	0					
ANR	998918	ExpressionStatement	"munmap ( chunk , size )"	116:1:4447:4466	998915	0	True				
ANR	998919	CallExpression	"munmap ( chunk , size )"		998915	0					
ANR	998920	Callee	munmap		998915	0					
ANR	998921	Identifier	munmap		998915	0					
ANR	998922	ArgumentList	chunk		998915	1					
ANR	998923	Argument	chunk		998915	0					
ANR	998924	Identifier	chunk		998915	0					
ANR	998925	Argument	size		998915	1					
ANR	998926	Identifier	size		998915	0					
ANR	998927	ReturnType	static SLJIT_INLINE void		998915	1					
ANR	998928	Identifier	free_chunk		998915	2					
ANR	998929	ParameterList	"void * chunk , sljit_uw size"		998915	3					
ANR	998930	Parameter	void * chunk	114:36:4416:4426	998915	0	True				
ANR	998931	ParameterType	void *		998915	0					
ANR	998932	Identifier	chunk		998915	1					
ANR	998933	Parameter	sljit_uw size	114:49:4429:4441	998915	1	True				
ANR	998934	ParameterType	sljit_uw		998915	0					
ANR	998935	Identifier	size		998915	1					
ANR	998936	CFGEntryNode	ENTRY		998915		True				
ANR	998937	CFGExitNode	EXIT		998915		True				
ANR	998938	Symbol	size		998915						
ANR	998939	Symbol	chunk		998915						
ANR	998940	ClassDef	block_header	127:0:4748:4807							
ANR	998941	DeclStmt									
ANR	998942	Decl							sljit_uw	sljit_uw	size
ANR	998943	DeclStmt									
ANR	998944	Decl							sljit_uw	sljit_uw	prev_size
ANR	998945	ClassDef	free_block	132:0:4811:4928							
ANR	998946	DeclStmt									
ANR	998947	Decl							struct block_header	struct block_header	header
ANR	998948	DeclStmt									
ANR	998949	Decl							struct free_block	struct free_block *	next
ANR	998950	DeclStmt									
ANR	998951	Decl							struct free_block	struct free_block *	prev
ANR	998952	DeclStmt									
ANR	998953	Decl							sljit_uw	sljit_uw	size
ANR	998954	DeclStmt									
ANR	998955	Decl							struct free_block	struct free_block *	free_blocks
ANR	998956	DeclStmt									
ANR	998957	Decl							sljit_uw	sljit_uw	allocated_size
ANR	998958	DeclStmt									
ANR	998959	Decl							sljit_uw	sljit_uw	total_size
ANR	998960	Function	sljit_insert_free_block	150:0:5376:5665							
ANR	998961	FunctionDef	"sljit_insert_free_block (struct free_block * free_block , sljit_uw size)"		998960	0					
ANR	998962	CompoundStatement		151:0:5471:5665	998960	0					
ANR	998963	ExpressionStatement	free_block -> header . size = 0	152:1:5474:5501	998960	0	True				
ANR	998964	AssignmentExpression	free_block -> header . size = 0		998960	0		=			
ANR	998965	MemberAccess	free_block -> header . size		998960	0					
ANR	998966	PtrMemberAccess	free_block -> header		998960	0					
ANR	998967	Identifier	free_block		998960	0					
ANR	998968	Identifier	header		998960	1					
ANR	998969	Identifier	size		998960	1					
ANR	998970	PrimaryExpression	0		998960	1					
ANR	998971	ExpressionStatement	free_block -> size = size	153:1:5504:5527	998960	1	True				
ANR	998972	AssignmentExpression	free_block -> size = size		998960	0		=			
ANR	998973	PtrMemberAccess	free_block -> size		998960	0					
ANR	998974	Identifier	free_block		998960	0					
ANR	998975	Identifier	size		998960	1					
ANR	998976	Identifier	size		998960	1					
ANR	998977	ExpressionStatement	free_block -> next = free_blocks	155:1:5531:5561	998960	2	True				
ANR	998978	AssignmentExpression	free_block -> next = free_blocks		998960	0		=			
ANR	998979	PtrMemberAccess	free_block -> next		998960	0					
ANR	998980	Identifier	free_block		998960	0					
ANR	998981	Identifier	next		998960	1					
ANR	998982	Identifier	free_blocks		998960	1					
ANR	998983	ExpressionStatement	free_block -> prev = 0	156:1:5564:5584	998960	3	True				
ANR	998984	AssignmentExpression	free_block -> prev = 0		998960	0		=			
ANR	998985	PtrMemberAccess	free_block -> prev		998960	0					
ANR	998986	Identifier	free_block		998960	0					
ANR	998987	Identifier	prev		998960	1					
ANR	998988	PrimaryExpression	0		998960	1					
ANR	998989	IfStatement	if ( free_blocks )		998960	4					
ANR	998990	Condition	free_blocks	157:5:5591:5601	998960	0	True				
ANR	998991	Identifier	free_blocks		998960	0					
ANR	998992	ExpressionStatement	free_blocks -> prev = free_block	158:2:5606:5636	998960	1	True				
ANR	998993	AssignmentExpression	free_blocks -> prev = free_block		998960	0		=			
ANR	998994	PtrMemberAccess	free_blocks -> prev		998960	0					
ANR	998995	Identifier	free_blocks		998960	0					
ANR	998996	Identifier	prev		998960	1					
ANR	998997	Identifier	free_block		998960	1					
ANR	998998	ExpressionStatement	free_blocks = free_block	159:1:5639:5663	998960	5	True				
ANR	998999	AssignmentExpression	free_blocks = free_block		998960	0		=			
ANR	999000	Identifier	free_blocks		998960	0					
ANR	999001	Identifier	free_block		998960	1					
ANR	999002	ReturnType	static SLJIT_INLINE void		998960	1					
ANR	999003	Identifier	sljit_insert_free_block		998960	2					
ANR	999004	ParameterList	"struct free_block * free_block , sljit_uw size"		998960	3					
ANR	999005	Parameter	struct free_block * free_block	150:49:5425:5453	998960	0	True				
ANR	999006	ParameterType	struct free_block *		998960	0					
ANR	999007	Identifier	free_block		998960	1					
ANR	999008	Parameter	sljit_uw size	150:80:5456:5468	998960	1	True				
ANR	999009	ParameterType	sljit_uw		998960	0					
ANR	999010	Identifier	size		998960	1					
ANR	999011	CFGEntryNode	ENTRY		998960		True				
ANR	999012	CFGExitNode	EXIT		998960		True				
ANR	999013	Symbol	free_block -> size		998960						
ANR	999014	Symbol	free_blocks		998960						
ANR	999015	Symbol	size		998960						
ANR	999016	Symbol	free_blocks -> prev		998960						
ANR	999017	Symbol	free_block -> header		998960						
ANR	999018	Symbol	free_block		998960						
ANR	999019	Symbol	* free_block		998960						
ANR	999020	Symbol	free_block -> next		998960						
ANR	999021	Symbol	free_block -> prev		998960						
ANR	999022	Symbol	* free_blocks		998960						
ANR	999023	Symbol	free_block -> header . size		998960						
ANR	999024	Function	sljit_remove_free_block	162:0:5668:5975							
ANR	999025	FunctionDef	sljit_remove_free_block (struct free_block * free_block)		999024	0					
ANR	999026	CompoundStatement		163:0:5748:5975	999024	0					
ANR	999027	IfStatement	if ( free_block -> next )		999024	0					
ANR	999028	Condition	free_block -> next	164:5:5755:5770	999024	0	True				
ANR	999029	PtrMemberAccess	free_block -> next		999024	0					
ANR	999030	Identifier	free_block		999024	0					
ANR	999031	Identifier	next		999024	1					
ANR	999032	ExpressionStatement	free_block -> next -> prev = free_block -> prev	165:2:5775:5816	999024	1	True				
ANR	999033	AssignmentExpression	free_block -> next -> prev = free_block -> prev		999024	0		=			
ANR	999034	PtrMemberAccess	free_block -> next -> prev		999024	0					
ANR	999035	PtrMemberAccess	free_block -> next		999024	0					
ANR	999036	Identifier	free_block		999024	0					
ANR	999037	Identifier	next		999024	1					
ANR	999038	Identifier	prev		999024	1					
ANR	999039	PtrMemberAccess	free_block -> prev		999024	1					
ANR	999040	Identifier	free_block		999024	0					
ANR	999041	Identifier	prev		999024	1					
ANR	999042	IfStatement	if ( free_block -> prev )		999024	1					
ANR	999043	Condition	free_block -> prev	167:5:5824:5839	999024	0	True				
ANR	999044	PtrMemberAccess	free_block -> prev		999024	0					
ANR	999045	Identifier	free_block		999024	0					
ANR	999046	Identifier	prev		999024	1					
ANR	999047	ExpressionStatement	free_block -> prev -> next = free_block -> next	168:2:5844:5885	999024	1	True				
ANR	999048	AssignmentExpression	free_block -> prev -> next = free_block -> next		999024	0		=			
ANR	999049	PtrMemberAccess	free_block -> prev -> next		999024	0					
ANR	999050	PtrMemberAccess	free_block -> prev		999024	0					
ANR	999051	Identifier	free_block		999024	0					
ANR	999052	Identifier	prev		999024	1					
ANR	999053	Identifier	next		999024	1					
ANR	999054	PtrMemberAccess	free_block -> next		999024	1					
ANR	999055	Identifier	free_block		999024	0					
ANR	999056	Identifier	next		999024	1					
ANR	999057	ElseStatement	else		999024	0					
ANR	999058	CompoundStatement		7:6:144:144	999024	0					
ANR	999059	ExpressionStatement	SLJIT_ASSERT ( free_blocks == free_block )	170:2:5897:5936	999024	0	True				
ANR	999060	CallExpression	SLJIT_ASSERT ( free_blocks == free_block )		999024	0					
ANR	999061	Callee	SLJIT_ASSERT		999024	0					
ANR	999062	Identifier	SLJIT_ASSERT		999024	0					
ANR	999063	ArgumentList	free_blocks == free_block		999024	1					
ANR	999064	Argument	free_blocks == free_block		999024	0					
ANR	999065	EqualityExpression	free_blocks == free_block		999024	0		==			
ANR	999066	Identifier	free_blocks		999024	0					
ANR	999067	Identifier	free_block		999024	1					
ANR	999068	ExpressionStatement	free_blocks = free_block -> next	171:2:5940:5970	999024	1	True				
ANR	999069	AssignmentExpression	free_blocks = free_block -> next		999024	0		=			
ANR	999070	Identifier	free_blocks		999024	0					
ANR	999071	PtrMemberAccess	free_block -> next		999024	1					
ANR	999072	Identifier	free_block		999024	0					
ANR	999073	Identifier	next		999024	1					
ANR	999074	ReturnType	static SLJIT_INLINE void		999024	1					
ANR	999075	Identifier	sljit_remove_free_block		999024	2					
ANR	999076	ParameterList	struct free_block * free_block		999024	3					
ANR	999077	Parameter	struct free_block * free_block	162:49:5717:5745	999024	0	True				
ANR	999078	ParameterType	struct free_block *		999024	0					
ANR	999079	Identifier	free_block		999024	1					
ANR	999080	CFGEntryNode	ENTRY		999024		True				
ANR	999081	CFGExitNode	EXIT		999024		True				
ANR	999082	Symbol	* free_block -> prev		999024						
ANR	999083	Symbol	free_block -> next -> prev		999024						
ANR	999084	Symbol	free_blocks		999024						
ANR	999085	Symbol	free_block		999024						
ANR	999086	Symbol	* free_block		999024						
ANR	999087	Symbol	free_block -> next		999024						
ANR	999088	Symbol	* * free_block		999024						
ANR	999089	Symbol	free_block -> prev		999024						
ANR	999090	Symbol	free_block -> prev -> next		999024						
ANR	999091	Symbol	* free_block -> next		999024						
ANR	999092	Function	sljit_malloc_exec	175:0:5978:7929							
ANR	999093	FunctionDef	sljit_malloc_exec (sljit_uw size)		999092	0					
ANR	999094	CompoundStatement		176:0:6042:7929	999092	0					
ANR	999095	IdentifierDeclStatement	struct block_header * header ;	177:1:6045:6072	999092	0	True				
ANR	999096	IdentifierDecl	* header		999092	0					
ANR	999097	IdentifierDeclType	struct block_header *		999092	0					
ANR	999098	Identifier	header		999092	1					
ANR	999099	IdentifierDeclStatement	struct block_header * next_header ;	178:1:6075:6107	999092	1	True				
ANR	999100	IdentifierDecl	* next_header		999092	0					
ANR	999101	IdentifierDeclType	struct block_header *		999092	0					
ANR	999102	Identifier	next_header		999092	1					
ANR	999103	IdentifierDeclStatement	struct free_block * free_block ;	179:1:6110:6139	999092	2	True				
ANR	999104	IdentifierDecl	* free_block		999092	0					
ANR	999105	IdentifierDeclType	struct free_block *		999092	0					
ANR	999106	Identifier	free_block		999092	1					
ANR	999107	IdentifierDeclStatement	sljit_uw chunk_size ;	180:1:6142:6161	999092	3	True				
ANR	999108	IdentifierDecl	chunk_size		999092	0					
ANR	999109	IdentifierDeclType	sljit_uw		999092	0					
ANR	999110	Identifier	chunk_size		999092	1					
ANR	999111	ExpressionStatement	allocator_grab_lock ( )	182:1:6165:6186	999092	4	True				
ANR	999112	CallExpression	allocator_grab_lock ( )		999092	0					
ANR	999113	Callee	allocator_grab_lock		999092	0					
ANR	999114	Identifier	allocator_grab_lock		999092	0					
ANR	999115	ArgumentList			999092	1					
ANR	999116	IfStatement	if ( size < sizeof ( struct free_block ) )		999092	5					
ANR	999117	Condition	size < sizeof ( struct free_block )	183:5:6193:6224	999092	0	True				
ANR	999118	RelationalExpression	size < sizeof ( struct free_block )		999092	0		<			
ANR	999119	Identifier	size		999092	0					
ANR	999120	SizeofExpression	sizeof ( struct free_block )		999092	1					
ANR	999121	Sizeof	sizeof		999092	0					
ANR	999122	SizeofOperand	struct free_block		999092	1					
ANR	999123	ExpressionStatement	size = sizeof ( struct free_block )	184:2:6229:6261	999092	1	True				
ANR	999124	AssignmentExpression	size = sizeof ( struct free_block )		999092	0		=			
ANR	999125	Identifier	size		999092	0					
ANR	999126	SizeofExpression	sizeof ( struct free_block )		999092	1					
ANR	999127	Sizeof	sizeof		999092	0					
ANR	999128	SizeofOperand	struct free_block		999092	1					
ANR	999129	ExpressionStatement	size = ALIGN_SIZE ( size )	185:1:6264:6287	999092	6	True				
ANR	999130	AssignmentExpression	size = ALIGN_SIZE ( size )		999092	0		=			
ANR	999131	Identifier	size		999092	0					
ANR	999132	CallExpression	ALIGN_SIZE ( size )		999092	1					
ANR	999133	Callee	ALIGN_SIZE		999092	0					
ANR	999134	Identifier	ALIGN_SIZE		999092	0					
ANR	999135	ArgumentList	size		999092	1					
ANR	999136	Argument	size		999092	0					
ANR	999137	Identifier	size		999092	0					
ANR	999138	ExpressionStatement	free_block = free_blocks	187:1:6291:6315	999092	7	True				
ANR	999139	AssignmentExpression	free_block = free_blocks		999092	0		=			
ANR	999140	Identifier	free_block		999092	0					
ANR	999141	Identifier	free_blocks		999092	1					
ANR	999142	WhileStatement	while ( free_block )		999092	8					
ANR	999143	Condition	free_block	188:8:6325:6334	999092	0	True				
ANR	999144	Identifier	free_block		999092	0					
ANR	999145	CompoundStatement		13:20:294:294	999092	1					
ANR	999146	IfStatement	if ( free_block -> size >= size )		999092	0					
ANR	999147	Condition	free_block -> size >= size	189:6:6345:6368	999092	0	True				
ANR	999148	RelationalExpression	free_block -> size >= size		999092	0		>=			
ANR	999149	PtrMemberAccess	free_block -> size		999092	0					
ANR	999150	Identifier	free_block		999092	0					
ANR	999151	Identifier	size		999092	1					
ANR	999152	Identifier	size		999092	1					
ANR	999153	CompoundStatement		14:32:328:328	999092	1					
ANR	999154	ExpressionStatement	chunk_size = free_block -> size	190:3:6376:6405	999092	0	True				
ANR	999155	AssignmentExpression	chunk_size = free_block -> size		999092	0		=			
ANR	999156	Identifier	chunk_size		999092	0					
ANR	999157	PtrMemberAccess	free_block -> size		999092	1					
ANR	999158	Identifier	free_block		999092	0					
ANR	999159	Identifier	size		999092	1					
ANR	999160	IfStatement	if ( chunk_size > size + 64 )		999092	1					
ANR	999161	Condition	chunk_size > size + 64	191:7:6414:6435	999092	0	True				
ANR	999162	RelationalExpression	chunk_size > size + 64		999092	0		>			
ANR	999163	Identifier	chunk_size		999092	0					
ANR	999164	AdditiveExpression	size + 64		999092	1		+			
ANR	999165	Identifier	size		999092	0					
ANR	999166	PrimaryExpression	64		999092	1					
ANR	999167	CompoundStatement		16:31:395:395	999092	1					
ANR	999168	ExpressionStatement	chunk_size -= size	193:4:6506:6524	999092	0	True				
ANR	999169	AssignmentExpression	chunk_size -= size		999092	0		-=			
ANR	999170	Identifier	chunk_size		999092	0					
ANR	999171	Identifier	size		999092	1					
ANR	999172	ExpressionStatement	free_block -> size = chunk_size	194:4:6530:6559	999092	1	True				
ANR	999173	AssignmentExpression	free_block -> size = chunk_size		999092	0		=			
ANR	999174	PtrMemberAccess	free_block -> size		999092	0					
ANR	999175	Identifier	free_block		999092	0					
ANR	999176	Identifier	size		999092	1					
ANR	999177	Identifier	chunk_size		999092	1					
ANR	999178	ExpressionStatement	"header = AS_BLOCK_HEADER ( free_block , chunk_size )"	195:4:6565:6613	999092	2	True				
ANR	999179	AssignmentExpression	"header = AS_BLOCK_HEADER ( free_block , chunk_size )"		999092	0		=			
ANR	999180	Identifier	header		999092	0					
ANR	999181	CallExpression	"AS_BLOCK_HEADER ( free_block , chunk_size )"		999092	1					
ANR	999182	Callee	AS_BLOCK_HEADER		999092	0					
ANR	999183	Identifier	AS_BLOCK_HEADER		999092	0					
ANR	999184	ArgumentList	free_block		999092	1					
ANR	999185	Argument	free_block		999092	0					
ANR	999186	Identifier	free_block		999092	0					
ANR	999187	Argument	chunk_size		999092	1					
ANR	999188	Identifier	chunk_size		999092	0					
ANR	999189	ExpressionStatement	header -> prev_size = chunk_size	196:4:6619:6649	999092	3	True				
ANR	999190	AssignmentExpression	header -> prev_size = chunk_size		999092	0		=			
ANR	999191	PtrMemberAccess	header -> prev_size		999092	0					
ANR	999192	Identifier	header		999092	0					
ANR	999193	Identifier	prev_size		999092	1					
ANR	999194	Identifier	chunk_size		999092	1					
ANR	999195	ExpressionStatement	"AS_BLOCK_HEADER ( header , size ) -> prev_size = size"	197:4:6655:6702	999092	4	True				
ANR	999196	AssignmentExpression	"AS_BLOCK_HEADER ( header , size ) -> prev_size = size"		999092	0		=			
ANR	999197	PtrMemberAccess	"AS_BLOCK_HEADER ( header , size ) -> prev_size"		999092	0					
ANR	999198	CallExpression	"AS_BLOCK_HEADER ( header , size )"		999092	0					
ANR	999199	Callee	AS_BLOCK_HEADER		999092	0					
ANR	999200	Identifier	AS_BLOCK_HEADER		999092	0					
ANR	999201	ArgumentList	header		999092	1					
ANR	999202	Argument	header		999092	0					
ANR	999203	Identifier	header		999092	0					
ANR	999204	Argument	size		999092	1					
ANR	999205	Identifier	size		999092	0					
ANR	999206	Identifier	prev_size		999092	1					
ANR	999207	Identifier	size		999092	1					
ANR	999208	ElseStatement	else		999092	0					
ANR	999209	CompoundStatement		24:8:674:674	999092	0					
ANR	999210	ExpressionStatement	sljit_remove_free_block ( free_block )	200:4:6723:6758	999092	0	True				
ANR	999211	CallExpression	sljit_remove_free_block ( free_block )		999092	0					
ANR	999212	Callee	sljit_remove_free_block		999092	0					
ANR	999213	Identifier	sljit_remove_free_block		999092	0					
ANR	999214	ArgumentList	free_block		999092	1					
ANR	999215	Argument	free_block		999092	0					
ANR	999216	Identifier	free_block		999092	0					
ANR	999217	ExpressionStatement	header = ( struct block_header * ) free_block	201:4:6764:6805	999092	1	True				
ANR	999218	AssignmentExpression	header = ( struct block_header * ) free_block		999092	0		=			
ANR	999219	Identifier	header		999092	0					
ANR	999220	CastExpression	( struct block_header * ) free_block		999092	1					
ANR	999221	CastTarget	struct block_header *		999092	0					
ANR	999222	Identifier	free_block		999092	1					
ANR	999223	ExpressionStatement	size = chunk_size	202:4:6811:6828	999092	2	True				
ANR	999224	AssignmentExpression	size = chunk_size		999092	0		=			
ANR	999225	Identifier	size		999092	0					
ANR	999226	Identifier	chunk_size		999092	1					
ANR	999227	ExpressionStatement	allocated_size += size	204:3:6838:6860	999092	2	True				
ANR	999228	AssignmentExpression	allocated_size += size		999092	0		+=			
ANR	999229	Identifier	allocated_size		999092	0					
ANR	999230	Identifier	size		999092	1					
ANR	999231	ExpressionStatement	header -> size = size	205:3:6865:6884	999092	3	True				
ANR	999232	AssignmentExpression	header -> size = size		999092	0		=			
ANR	999233	PtrMemberAccess	header -> size		999092	0					
ANR	999234	Identifier	header		999092	0					
ANR	999235	Identifier	size		999092	1					
ANR	999236	Identifier	size		999092	1					
ANR	999237	ExpressionStatement	allocator_release_lock ( )	206:3:6889:6913	999092	4	True				
ANR	999238	CallExpression	allocator_release_lock ( )		999092	0					
ANR	999239	Callee	allocator_release_lock		999092	0					
ANR	999240	Identifier	allocator_release_lock		999092	0					
ANR	999241	ArgumentList			999092	1					
ANR	999242	ReturnStatement	return MEM_START ( header ) ;	207:3:6918:6942	999092	5	True				
ANR	999243	CallExpression	MEM_START ( header )		999092	0					
ANR	999244	Callee	MEM_START		999092	0					
ANR	999245	Identifier	MEM_START		999092	0					
ANR	999246	ArgumentList	header		999092	1					
ANR	999247	Argument	header		999092	0					
ANR	999248	Identifier	header		999092	0					
ANR	999249	ExpressionStatement	free_block = free_block -> next	209:2:6950:6979	999092	1	True				
ANR	999250	AssignmentExpression	free_block = free_block -> next		999092	0		=			
ANR	999251	Identifier	free_block		999092	0					
ANR	999252	PtrMemberAccess	free_block -> next		999092	1					
ANR	999253	Identifier	free_block		999092	0					
ANR	999254	Identifier	next		999092	1					
ANR	999255	ExpressionStatement	chunk_size = ( size + sizeof ( struct block_header ) + CHUNK_SIZE - 1 ) & CHUNK_MASK	212:1:6986:7065	999092	9	True				
ANR	999256	AssignmentExpression	chunk_size = ( size + sizeof ( struct block_header ) + CHUNK_SIZE - 1 ) & CHUNK_MASK		999092	0		=			
ANR	999257	Identifier	chunk_size		999092	0					
ANR	999258	BitAndExpression	( size + sizeof ( struct block_header ) + CHUNK_SIZE - 1 ) & CHUNK_MASK		999092	1		&			
ANR	999259	AdditiveExpression	size + sizeof ( struct block_header ) + CHUNK_SIZE - 1		999092	0		+			
ANR	999260	Identifier	size		999092	0					
ANR	999261	AdditiveExpression	sizeof ( struct block_header ) + CHUNK_SIZE - 1		999092	1		+			
ANR	999262	SizeofExpression	sizeof ( struct block_header )		999092	0					
ANR	999263	Sizeof	sizeof		999092	0					
ANR	999264	SizeofOperand	struct block_header		999092	1					
ANR	999265	AdditiveExpression	CHUNK_SIZE - 1		999092	1		-			
ANR	999266	Identifier	CHUNK_SIZE		999092	0					
ANR	999267	PrimaryExpression	1		999092	1					
ANR	999268	Identifier	CHUNK_MASK		999092	1					
ANR	999269	ExpressionStatement	header = ( struct block_header * ) alloc_chunk ( chunk_size )	213:1:7068:7122	999092	10	True				
ANR	999270	AssignmentExpression	header = ( struct block_header * ) alloc_chunk ( chunk_size )		999092	0		=			
ANR	999271	Identifier	header		999092	0					
ANR	999272	CastExpression	( struct block_header * ) alloc_chunk ( chunk_size )		999092	1					
ANR	999273	CastTarget	struct block_header *		999092	0					
ANR	999274	CallExpression	alloc_chunk ( chunk_size )		999092	1					
ANR	999275	Callee	alloc_chunk		999092	0					
ANR	999276	Identifier	alloc_chunk		999092	0					
ANR	999277	ArgumentList	chunk_size		999092	1					
ANR	999278	Argument	chunk_size		999092	0					
ANR	999279	Identifier	chunk_size		999092	0					
ANR	999280	IfStatement	if ( ! header )		999092	11					
ANR	999281	Condition	! header	214:5:7129:7135	999092	0	True				
ANR	999282	UnaryOperationExpression	! header		999092	0					
ANR	999283	UnaryOperator	!		999092	0					
ANR	999284	Identifier	header		999092	1					
ANR	999285	CompoundStatement		39:14:1095:1095	999092	1					
ANR	999286	ExpressionStatement	allocator_release_lock ( )	215:2:7142:7166	999092	0	True				
ANR	999287	CallExpression	allocator_release_lock ( )		999092	0					
ANR	999288	Callee	allocator_release_lock		999092	0					
ANR	999289	Identifier	allocator_release_lock		999092	0					
ANR	999290	ArgumentList			999092	1					
ANR	999291	ReturnStatement	return NULL ;	216:2:7170:7181	999092	1	True				
ANR	999292	Identifier	NULL		999092	0					
ANR	999293	ExpressionStatement	chunk_size -= sizeof ( struct block_header )	219:1:7188:7229	999092	12	True				
ANR	999294	AssignmentExpression	chunk_size -= sizeof ( struct block_header )		999092	0		-=			
ANR	999295	Identifier	chunk_size		999092	0					
ANR	999296	SizeofExpression	sizeof ( struct block_header )		999092	1					
ANR	999297	Sizeof	sizeof		999092	0					
ANR	999298	SizeofOperand	struct block_header		999092	1					
ANR	999299	ExpressionStatement	total_size += chunk_size	220:1:7232:7256	999092	13	True				
ANR	999300	AssignmentExpression	total_size += chunk_size		999092	0		+=			
ANR	999301	Identifier	total_size		999092	0					
ANR	999302	Identifier	chunk_size		999092	1					
ANR	999303	ExpressionStatement	header -> prev_size = 0	222:1:7260:7281	999092	14	True				
ANR	999304	AssignmentExpression	header -> prev_size = 0		999092	0		=			
ANR	999305	PtrMemberAccess	header -> prev_size		999092	0					
ANR	999306	Identifier	header		999092	0					
ANR	999307	Identifier	prev_size		999092	1					
ANR	999308	PrimaryExpression	0		999092	1					
ANR	999309	IfStatement	if ( chunk_size > size + 64 )		999092	15					
ANR	999310	Condition	chunk_size > size + 64	223:5:7288:7309	999092	0	True				
ANR	999311	RelationalExpression	chunk_size > size + 64		999092	0		>			
ANR	999312	Identifier	chunk_size		999092	0					
ANR	999313	AdditiveExpression	size + 64		999092	1		+			
ANR	999314	Identifier	size		999092	0					
ANR	999315	PrimaryExpression	64		999092	1					
ANR	999316	CompoundStatement		48:29:1269:1269	999092	1					
ANR	999317	ExpressionStatement	allocated_size += size	225:2:7378:7400	999092	0	True				
ANR	999318	AssignmentExpression	allocated_size += size		999092	0		+=			
ANR	999319	Identifier	allocated_size		999092	0					
ANR	999320	Identifier	size		999092	1					
ANR	999321	ExpressionStatement	header -> size = size	226:2:7404:7423	999092	1	True				
ANR	999322	AssignmentExpression	header -> size = size		999092	0		=			
ANR	999323	PtrMemberAccess	header -> size		999092	0					
ANR	999324	Identifier	header		999092	0					
ANR	999325	Identifier	size		999092	1					
ANR	999326	Identifier	size		999092	1					
ANR	999327	ExpressionStatement	chunk_size -= size	227:2:7427:7445	999092	2	True				
ANR	999328	AssignmentExpression	chunk_size -= size		999092	0		-=			
ANR	999329	Identifier	chunk_size		999092	0					
ANR	999330	Identifier	size		999092	1					
ANR	999331	ExpressionStatement	"free_block = AS_FREE_BLOCK ( header , size )"	229:2:7450:7490	999092	3	True				
ANR	999332	AssignmentExpression	"free_block = AS_FREE_BLOCK ( header , size )"		999092	0		=			
ANR	999333	Identifier	free_block		999092	0					
ANR	999334	CallExpression	"AS_FREE_BLOCK ( header , size )"		999092	1					
ANR	999335	Callee	AS_FREE_BLOCK		999092	0					
ANR	999336	Identifier	AS_FREE_BLOCK		999092	0					
ANR	999337	ArgumentList	header		999092	1					
ANR	999338	Argument	header		999092	0					
ANR	999339	Identifier	header		999092	0					
ANR	999340	Argument	size		999092	1					
ANR	999341	Identifier	size		999092	0					
ANR	999342	ExpressionStatement	free_block -> header . prev_size = size	230:2:7494:7529	999092	4	True				
ANR	999343	AssignmentExpression	free_block -> header . prev_size = size		999092	0		=			
ANR	999344	MemberAccess	free_block -> header . prev_size		999092	0					
ANR	999345	PtrMemberAccess	free_block -> header		999092	0					
ANR	999346	Identifier	free_block		999092	0					
ANR	999347	Identifier	header		999092	1					
ANR	999348	Identifier	prev_size		999092	1					
ANR	999349	Identifier	size		999092	1					
ANR	999350	ExpressionStatement	"sljit_insert_free_block ( free_block , chunk_size )"	231:2:7533:7580	999092	5	True				
ANR	999351	CallExpression	"sljit_insert_free_block ( free_block , chunk_size )"		999092	0					
ANR	999352	Callee	sljit_insert_free_block		999092	0					
ANR	999353	Identifier	sljit_insert_free_block		999092	0					
ANR	999354	ArgumentList	free_block		999092	1					
ANR	999355	Argument	free_block		999092	0					
ANR	999356	Identifier	free_block		999092	0					
ANR	999357	Argument	chunk_size		999092	1					
ANR	999358	Identifier	chunk_size		999092	0					
ANR	999359	ExpressionStatement	"next_header = AS_BLOCK_HEADER ( free_block , chunk_size )"	232:2:7584:7637	999092	6	True				
ANR	999360	AssignmentExpression	"next_header = AS_BLOCK_HEADER ( free_block , chunk_size )"		999092	0		=			
ANR	999361	Identifier	next_header		999092	0					
ANR	999362	CallExpression	"AS_BLOCK_HEADER ( free_block , chunk_size )"		999092	1					
ANR	999363	Callee	AS_BLOCK_HEADER		999092	0					
ANR	999364	Identifier	AS_BLOCK_HEADER		999092	0					
ANR	999365	ArgumentList	free_block		999092	1					
ANR	999366	Argument	free_block		999092	0					
ANR	999367	Identifier	free_block		999092	0					
ANR	999368	Argument	chunk_size		999092	1					
ANR	999369	Identifier	chunk_size		999092	0					
ANR	999370	ElseStatement	else		999092	0					
ANR	999371	CompoundStatement		59:6:1605:1605	999092	0					
ANR	999372	ExpressionStatement	allocated_size += chunk_size	236:2:7698:7726	999092	0	True				
ANR	999373	AssignmentExpression	allocated_size += chunk_size		999092	0		+=			
ANR	999374	Identifier	allocated_size		999092	0					
ANR	999375	Identifier	chunk_size		999092	1					
ANR	999376	ExpressionStatement	header -> size = chunk_size	237:2:7730:7755	999092	1	True				
ANR	999377	AssignmentExpression	header -> size = chunk_size		999092	0		=			
ANR	999378	PtrMemberAccess	header -> size		999092	0					
ANR	999379	Identifier	header		999092	0					
ANR	999380	Identifier	size		999092	1					
ANR	999381	Identifier	chunk_size		999092	1					
ANR	999382	ExpressionStatement	"next_header = AS_BLOCK_HEADER ( header , chunk_size )"	238:2:7759:7808	999092	2	True				
ANR	999383	AssignmentExpression	"next_header = AS_BLOCK_HEADER ( header , chunk_size )"		999092	0		=			
ANR	999384	Identifier	next_header		999092	0					
ANR	999385	CallExpression	"AS_BLOCK_HEADER ( header , chunk_size )"		999092	1					
ANR	999386	Callee	AS_BLOCK_HEADER		999092	0					
ANR	999387	Identifier	AS_BLOCK_HEADER		999092	0					
ANR	999388	ArgumentList	header		999092	1					
ANR	999389	Argument	header		999092	0					
ANR	999390	Identifier	header		999092	0					
ANR	999391	Argument	chunk_size		999092	1					
ANR	999392	Identifier	chunk_size		999092	0					
ANR	999393	ExpressionStatement	next_header -> size = 1	240:1:7814:7835	999092	16	True				
ANR	999394	AssignmentExpression	next_header -> size = 1		999092	0		=			
ANR	999395	PtrMemberAccess	next_header -> size		999092	0					
ANR	999396	Identifier	next_header		999092	0					
ANR	999397	Identifier	size		999092	1					
ANR	999398	PrimaryExpression	1		999092	1					
ANR	999399	ExpressionStatement	next_header -> prev_size = chunk_size	241:1:7838:7873	999092	17	True				
ANR	999400	AssignmentExpression	next_header -> prev_size = chunk_size		999092	0		=			
ANR	999401	PtrMemberAccess	next_header -> prev_size		999092	0					
ANR	999402	Identifier	next_header		999092	0					
ANR	999403	Identifier	prev_size		999092	1					
ANR	999404	Identifier	chunk_size		999092	1					
ANR	999405	ExpressionStatement	allocator_release_lock ( )	242:1:7876:7900	999092	18	True				
ANR	999406	CallExpression	allocator_release_lock ( )		999092	0					
ANR	999407	Callee	allocator_release_lock		999092	0					
ANR	999408	Identifier	allocator_release_lock		999092	0					
ANR	999409	ArgumentList			999092	1					
ANR	999410	ReturnStatement	return MEM_START ( header ) ;	243:1:7903:7927	999092	19	True				
ANR	999411	CallExpression	MEM_START ( header )		999092	0					
ANR	999412	Callee	MEM_START		999092	0					
ANR	999413	Identifier	MEM_START		999092	0					
ANR	999414	ArgumentList	header		999092	1					
ANR	999415	Argument	header		999092	0					
ANR	999416	Identifier	header		999092	0					
ANR	999417	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		999092	1					
ANR	999418	Identifier	sljit_malloc_exec		999092	2					
ANR	999419	ParameterList	sljit_uw size		999092	3					
ANR	999420	Parameter	sljit_uw size	175:49:6027:6039	999092	0	True				
ANR	999421	ParameterType	sljit_uw		999092	0					
ANR	999422	Identifier	size		999092	1					
ANR	999423	CFGEntryNode	ENTRY		999092		True				
ANR	999424	CFGExitNode	EXIT		999092		True				
ANR	999425	Symbol	chunk_size		999092						
ANR	999426	Symbol	free_blocks		999092						
ANR	999427	Symbol	next_header -> prev_size		999092						
ANR	999428	Symbol	free_block -> header		999092						
ANR	999429	Symbol	allocated_size		999092						
ANR	999430	Symbol	free_block -> next		999092						
ANR	999431	Symbol	CHUNK_SIZE		999092						
ANR	999432	Symbol	alloc_chunk		999092						
ANR	999433	Symbol	* next_header		999092						
ANR	999434	Symbol	ALIGN_SIZE		999092						
ANR	999435	Symbol	* AS_BLOCK_HEADER		999092						
ANR	999436	Symbol	AS_FREE_BLOCK		999092						
ANR	999437	Symbol	"AS_BLOCK_HEADER ( header , size ) -> prev_size"		999092						
ANR	999438	Symbol	MEM_START		999092						
ANR	999439	Symbol	NULL		999092						
ANR	999440	Symbol	CHUNK_MASK		999092						
ANR	999441	Symbol	next_header		999092						
ANR	999442	Symbol	free_block		999092						
ANR	999443	Symbol	header -> prev_size		999092						
ANR	999444	Symbol	* free_block		999092						
ANR	999445	Symbol	total_size		999092						
ANR	999446	Symbol	* header		999092						
ANR	999447	Symbol	free_block -> header . prev_size		999092						
ANR	999448	Symbol	free_block -> size		999092						
ANR	999449	Symbol	size		999092						
ANR	999450	Symbol	header		999092						
ANR	999451	Symbol	next_header -> size		999092						
ANR	999452	Symbol	header -> size		999092						
ANR	999453	Symbol	AS_BLOCK_HEADER		999092						
ANR	999454	Function	sljit_free_exec	246:0:7932:9467							
ANR	999455	FunctionDef	sljit_free_exec (void * ptr)		999454	0					
ANR	999456	CompoundStatement		247:0:7989:9467	999454	0					
ANR	999457	IdentifierDeclStatement	struct block_header * header ;	248:1:7992:8019	999454	0	True				
ANR	999458	IdentifierDecl	* header		999454	0					
ANR	999459	IdentifierDeclType	struct block_header *		999454	0					
ANR	999460	Identifier	header		999454	1					
ANR	999461	IdentifierDeclStatement	struct free_block * free_block ;	249:1:8022:8051	999454	1	True				
ANR	999462	IdentifierDecl	* free_block		999454	0					
ANR	999463	IdentifierDeclType	struct free_block *		999454	0					
ANR	999464	Identifier	free_block		999454	1					
ANR	999465	ExpressionStatement	allocator_grab_lock ( )	251:1:8055:8076	999454	2	True				
ANR	999466	CallExpression	allocator_grab_lock ( )		999454	0					
ANR	999467	Callee	allocator_grab_lock		999454	0					
ANR	999468	Identifier	allocator_grab_lock		999454	0					
ANR	999469	ArgumentList			999454	1					
ANR	999470	ExpressionStatement	"header = AS_BLOCK_HEADER ( ptr , - ( sljit_sw ) sizeof ( struct block_header ) )"	252:1:8079:8148	999454	3	True				
ANR	999471	AssignmentExpression	"header = AS_BLOCK_HEADER ( ptr , - ( sljit_sw ) sizeof ( struct block_header ) )"		999454	0		=			
ANR	999472	Identifier	header		999454	0					
ANR	999473	CallExpression	"AS_BLOCK_HEADER ( ptr , - ( sljit_sw ) sizeof ( struct block_header ) )"		999454	1					
ANR	999474	Callee	AS_BLOCK_HEADER		999454	0					
ANR	999475	Identifier	AS_BLOCK_HEADER		999454	0					
ANR	999476	ArgumentList	ptr		999454	1					
ANR	999477	Argument	ptr		999454	0					
ANR	999478	Identifier	ptr		999454	0					
ANR	999479	Argument	- ( sljit_sw ) sizeof ( struct block_header )		999454	1					
ANR	999480	UnaryOperationExpression	- ( sljit_sw ) sizeof ( struct block_header )		999454	0					
ANR	999481	UnaryOperator	-		999454	0					
ANR	999482	CastExpression	( sljit_sw ) sizeof ( struct block_header )		999454	1					
ANR	999483	CastTarget	sljit_sw		999454	0					
ANR	999484	SizeofExpression	sizeof ( struct block_header )		999454	1					
ANR	999485	Sizeof	sizeof		999454	0					
ANR	999486	SizeofOperand	struct block_header		999454	1					
ANR	999487	ExpressionStatement	allocated_size -= header -> size	253:1:8151:8181	999454	4	True				
ANR	999488	AssignmentExpression	allocated_size -= header -> size		999454	0		-=			
ANR	999489	Identifier	allocated_size		999454	0					
ANR	999490	PtrMemberAccess	header -> size		999454	1					
ANR	999491	Identifier	header		999454	0					
ANR	999492	Identifier	size		999454	1					
ANR	999493	ExpressionStatement	"free_block = AS_FREE_BLOCK ( header , - ( sljit_sw ) header -> prev_size )"	259:1:8360:8424	999454	5	True				
ANR	999494	AssignmentExpression	"free_block = AS_FREE_BLOCK ( header , - ( sljit_sw ) header -> prev_size )"		999454	0		=			
ANR	999495	Identifier	free_block		999454	0					
ANR	999496	CallExpression	"AS_FREE_BLOCK ( header , - ( sljit_sw ) header -> prev_size )"		999454	1					
ANR	999497	Callee	AS_FREE_BLOCK		999454	0					
ANR	999498	Identifier	AS_FREE_BLOCK		999454	0					
ANR	999499	ArgumentList	header		999454	1					
ANR	999500	Argument	header		999454	0					
ANR	999501	Identifier	header		999454	0					
ANR	999502	Argument	- ( sljit_sw ) header -> prev_size		999454	1					
ANR	999503	UnaryOperationExpression	- ( sljit_sw ) header -> prev_size		999454	0					
ANR	999504	UnaryOperator	-		999454	0					
ANR	999505	CastExpression	( sljit_sw ) header -> prev_size		999454	1					
ANR	999506	CastTarget	sljit_sw		999454	0					
ANR	999507	PtrMemberAccess	header -> prev_size		999454	1					
ANR	999508	Identifier	header		999454	0					
ANR	999509	Identifier	prev_size		999454	1					
ANR	999510	IfStatement	if ( SLJIT_UNLIKELY ( ! free_block -> header . size ) )		999454	6					
ANR	999511	Condition	SLJIT_UNLIKELY ( ! free_block -> header . size )	260:5:8431:8470	999454	0	True				
ANR	999512	CallExpression	SLJIT_UNLIKELY ( ! free_block -> header . size )		999454	0					
ANR	999513	Callee	SLJIT_UNLIKELY		999454	0					
ANR	999514	Identifier	SLJIT_UNLIKELY		999454	0					
ANR	999515	ArgumentList	! free_block -> header . size		999454	1					
ANR	999516	Argument	! free_block -> header . size		999454	0					
ANR	999517	UnaryOperationExpression	! free_block -> header . size		999454	0					
ANR	999518	UnaryOperator	!		999454	0					
ANR	999519	MemberAccess	free_block -> header . size		999454	1					
ANR	999520	PtrMemberAccess	free_block -> header		999454	0					
ANR	999521	Identifier	free_block		999454	0					
ANR	999522	Identifier	header		999454	1					
ANR	999523	Identifier	size		999454	1					
ANR	999524	CompoundStatement		14:47:483:483	999454	1					
ANR	999525	ExpressionStatement	free_block -> size += header -> size	261:2:8477:8509	999454	0	True				
ANR	999526	AssignmentExpression	free_block -> size += header -> size		999454	0		+=			
ANR	999527	PtrMemberAccess	free_block -> size		999454	0					
ANR	999528	Identifier	free_block		999454	0					
ANR	999529	Identifier	size		999454	1					
ANR	999530	PtrMemberAccess	header -> size		999454	1					
ANR	999531	Identifier	header		999454	0					
ANR	999532	Identifier	size		999454	1					
ANR	999533	ExpressionStatement	"header = AS_BLOCK_HEADER ( free_block , free_block -> size )"	262:2:8513:8567	999454	1	True				
ANR	999534	AssignmentExpression	"header = AS_BLOCK_HEADER ( free_block , free_block -> size )"		999454	0		=			
ANR	999535	Identifier	header		999454	0					
ANR	999536	CallExpression	"AS_BLOCK_HEADER ( free_block , free_block -> size )"		999454	1					
ANR	999537	Callee	AS_BLOCK_HEADER		999454	0					
ANR	999538	Identifier	AS_BLOCK_HEADER		999454	0					
ANR	999539	ArgumentList	free_block		999454	1					
ANR	999540	Argument	free_block		999454	0					
ANR	999541	Identifier	free_block		999454	0					
ANR	999542	Argument	free_block -> size		999454	1					
ANR	999543	PtrMemberAccess	free_block -> size		999454	0					
ANR	999544	Identifier	free_block		999454	0					
ANR	999545	Identifier	size		999454	1					
ANR	999546	ExpressionStatement	header -> prev_size = free_block -> size	263:2:8571:8607	999454	2	True				
ANR	999547	AssignmentExpression	header -> prev_size = free_block -> size		999454	0		=			
ANR	999548	PtrMemberAccess	header -> prev_size		999454	0					
ANR	999549	Identifier	header		999454	0					
ANR	999550	Identifier	prev_size		999454	1					
ANR	999551	PtrMemberAccess	free_block -> size		999454	1					
ANR	999552	Identifier	free_block		999454	0					
ANR	999553	Identifier	size		999454	1					
ANR	999554	ElseStatement	else		999454	0					
ANR	999555	CompoundStatement		19:6:628:628	999454	0					
ANR	999556	ExpressionStatement	free_block = ( struct free_block * ) header	266:2:8622:8661	999454	0	True				
ANR	999557	AssignmentExpression	free_block = ( struct free_block * ) header		999454	0		=			
ANR	999558	Identifier	free_block		999454	0					
ANR	999559	CastExpression	( struct free_block * ) header		999454	1					
ANR	999560	CastTarget	struct free_block *		999454	0					
ANR	999561	Identifier	header		999454	1					
ANR	999562	ExpressionStatement	"sljit_insert_free_block ( free_block , header -> size )"	267:2:8665:8714	999454	1	True				
ANR	999563	CallExpression	"sljit_insert_free_block ( free_block , header -> size )"		999454	0					
ANR	999564	Callee	sljit_insert_free_block		999454	0					
ANR	999565	Identifier	sljit_insert_free_block		999454	0					
ANR	999566	ArgumentList	free_block		999454	1					
ANR	999567	Argument	free_block		999454	0					
ANR	999568	Identifier	free_block		999454	0					
ANR	999569	Argument	header -> size		999454	1					
ANR	999570	PtrMemberAccess	header -> size		999454	0					
ANR	999571	Identifier	header		999454	0					
ANR	999572	Identifier	size		999454	1					
ANR	999573	ExpressionStatement	"header = AS_BLOCK_HEADER ( free_block , free_block -> size )"	270:1:8721:8775	999454	7	True				
ANR	999574	AssignmentExpression	"header = AS_BLOCK_HEADER ( free_block , free_block -> size )"		999454	0		=			
ANR	999575	Identifier	header		999454	0					
ANR	999576	CallExpression	"AS_BLOCK_HEADER ( free_block , free_block -> size )"		999454	1					
ANR	999577	Callee	AS_BLOCK_HEADER		999454	0					
ANR	999578	Identifier	AS_BLOCK_HEADER		999454	0					
ANR	999579	ArgumentList	free_block		999454	1					
ANR	999580	Argument	free_block		999454	0					
ANR	999581	Identifier	free_block		999454	0					
ANR	999582	Argument	free_block -> size		999454	1					
ANR	999583	PtrMemberAccess	free_block -> size		999454	0					
ANR	999584	Identifier	free_block		999454	0					
ANR	999585	Identifier	size		999454	1					
ANR	999586	IfStatement	if ( SLJIT_UNLIKELY ( ! header -> size ) )		999454	8					
ANR	999587	Condition	SLJIT_UNLIKELY ( ! header -> size )	271:5:8782:8810	999454	0	True				
ANR	999588	CallExpression	SLJIT_UNLIKELY ( ! header -> size )		999454	0					
ANR	999589	Callee	SLJIT_UNLIKELY		999454	0					
ANR	999590	Identifier	SLJIT_UNLIKELY		999454	0					
ANR	999591	ArgumentList	! header -> size		999454	1					
ANR	999592	Argument	! header -> size		999454	0					
ANR	999593	UnaryOperationExpression	! header -> size		999454	0					
ANR	999594	UnaryOperator	!		999454	0					
ANR	999595	PtrMemberAccess	header -> size		999454	1					
ANR	999596	Identifier	header		999454	0					
ANR	999597	Identifier	size		999454	1					
ANR	999598	CompoundStatement		25:36:823:823	999454	1					
ANR	999599	ExpressionStatement	free_block -> size += ( ( struct free_block * ) header ) -> size	272:2:8817:8871	999454	0	True				
ANR	999600	AssignmentExpression	free_block -> size += ( ( struct free_block * ) header ) -> size		999454	0		+=			
ANR	999601	PtrMemberAccess	free_block -> size		999454	0					
ANR	999602	Identifier	free_block		999454	0					
ANR	999603	Identifier	size		999454	1					
ANR	999604	PtrMemberAccess	( ( struct free_block * ) header ) -> size		999454	1					
ANR	999605	CastExpression	( struct free_block * ) header		999454	0					
ANR	999606	CastTarget	struct free_block *		999454	0					
ANR	999607	Identifier	header		999454	1					
ANR	999608	Identifier	size		999454	1					
ANR	999609	ExpressionStatement	sljit_remove_free_block ( ( struct free_block * ) header )	273:2:8875:8926	999454	1	True				
ANR	999610	CallExpression	sljit_remove_free_block ( ( struct free_block * ) header )		999454	0					
ANR	999611	Callee	sljit_remove_free_block		999454	0					
ANR	999612	Identifier	sljit_remove_free_block		999454	0					
ANR	999613	ArgumentList	( struct free_block * ) header		999454	1					
ANR	999614	Argument	( struct free_block * ) header		999454	0					
ANR	999615	CastExpression	( struct free_block * ) header		999454	0					
ANR	999616	CastTarget	struct free_block *		999454	0					
ANR	999617	Identifier	header		999454	1					
ANR	999618	ExpressionStatement	"header = AS_BLOCK_HEADER ( free_block , free_block -> size )"	274:2:8930:8984	999454	2	True				
ANR	999619	AssignmentExpression	"header = AS_BLOCK_HEADER ( free_block , free_block -> size )"		999454	0		=			
ANR	999620	Identifier	header		999454	0					
ANR	999621	CallExpression	"AS_BLOCK_HEADER ( free_block , free_block -> size )"		999454	1					
ANR	999622	Callee	AS_BLOCK_HEADER		999454	0					
ANR	999623	Identifier	AS_BLOCK_HEADER		999454	0					
ANR	999624	ArgumentList	free_block		999454	1					
ANR	999625	Argument	free_block		999454	0					
ANR	999626	Identifier	free_block		999454	0					
ANR	999627	Argument	free_block -> size		999454	1					
ANR	999628	PtrMemberAccess	free_block -> size		999454	0					
ANR	999629	Identifier	free_block		999454	0					
ANR	999630	Identifier	size		999454	1					
ANR	999631	ExpressionStatement	header -> prev_size = free_block -> size	275:2:8988:9024	999454	3	True				
ANR	999632	AssignmentExpression	header -> prev_size = free_block -> size		999454	0		=			
ANR	999633	PtrMemberAccess	header -> prev_size		999454	0					
ANR	999634	Identifier	header		999454	0					
ANR	999635	Identifier	prev_size		999454	1					
ANR	999636	PtrMemberAccess	free_block -> size		999454	1					
ANR	999637	Identifier	free_block		999454	0					
ANR	999638	Identifier	size		999454	1					
ANR	999639	IfStatement	if ( SLJIT_UNLIKELY ( ! free_block -> header . prev_size && header -> size == 1 ) )		999454	9					
ANR	999640	Condition	SLJIT_UNLIKELY ( ! free_block -> header . prev_size && header -> size == 1 )	279:5:9067:9132	999454	0	True				
ANR	999641	CallExpression	SLJIT_UNLIKELY ( ! free_block -> header . prev_size && header -> size == 1 )		999454	0					
ANR	999642	Callee	SLJIT_UNLIKELY		999454	0					
ANR	999643	Identifier	SLJIT_UNLIKELY		999454	0					
ANR	999644	ArgumentList	! free_block -> header . prev_size && header -> size == 1		999454	1					
ANR	999645	Argument	! free_block -> header . prev_size && header -> size == 1		999454	0					
ANR	999646	AndExpression	! free_block -> header . prev_size && header -> size == 1		999454	0		&&			
ANR	999647	UnaryOperationExpression	! free_block -> header . prev_size		999454	0					
ANR	999648	UnaryOperator	!		999454	0					
ANR	999649	MemberAccess	free_block -> header . prev_size		999454	1					
ANR	999650	PtrMemberAccess	free_block -> header		999454	0					
ANR	999651	Identifier	free_block		999454	0					
ANR	999652	Identifier	header		999454	1					
ANR	999653	Identifier	prev_size		999454	1					
ANR	999654	EqualityExpression	header -> size == 1		999454	1		==			
ANR	999655	PtrMemberAccess	header -> size		999454	0					
ANR	999656	Identifier	header		999454	0					
ANR	999657	Identifier	size		999454	1					
ANR	999658	PrimaryExpression	1		999454	1					
ANR	999659	CompoundStatement		33:73:1145:1145	999454	1					
ANR	999660	IfStatement	if ( total_size - free_block -> size > ( allocated_size * 3 / 2 ) )		999454	0					
ANR	999661	Condition	total_size - free_block -> size > ( allocated_size * 3 / 2 )	281:6:9222:9277	999454	0	True				
ANR	999662	RelationalExpression	total_size - free_block -> size > ( allocated_size * 3 / 2 )		999454	0		>			
ANR	999663	AdditiveExpression	total_size - free_block -> size		999454	0		-			
ANR	999664	Identifier	total_size		999454	0					
ANR	999665	PtrMemberAccess	free_block -> size		999454	1					
ANR	999666	Identifier	free_block		999454	0					
ANR	999667	Identifier	size		999454	1					
ANR	999668	MultiplicativeExpression	allocated_size * 3 / 2		999454	1		*			
ANR	999669	Identifier	allocated_size		999454	0					
ANR	999670	MultiplicativeExpression	3 / 2		999454	1		/			
ANR	999671	PrimaryExpression	3		999454	0					
ANR	999672	PrimaryExpression	2		999454	1					
ANR	999673	CompoundStatement		35:64:1290:1290	999454	1					
ANR	999674	ExpressionStatement	total_size -= free_block -> size	282:3:9285:9315	999454	0	True				
ANR	999675	AssignmentExpression	total_size -= free_block -> size		999454	0		-=			
ANR	999676	Identifier	total_size		999454	0					
ANR	999677	PtrMemberAccess	free_block -> size		999454	1					
ANR	999678	Identifier	free_block		999454	0					
ANR	999679	Identifier	size		999454	1					
ANR	999680	ExpressionStatement	sljit_remove_free_block ( free_block )	283:3:9320:9355	999454	1	True				
ANR	999681	CallExpression	sljit_remove_free_block ( free_block )		999454	0					
ANR	999682	Callee	sljit_remove_free_block		999454	0					
ANR	999683	Identifier	sljit_remove_free_block		999454	0					
ANR	999684	ArgumentList	free_block		999454	1					
ANR	999685	Argument	free_block		999454	0					
ANR	999686	Identifier	free_block		999454	0					
ANR	999687	ExpressionStatement	"free_chunk ( free_block , free_block -> size + sizeof ( struct block_header ) )"	284:3:9360:9430	999454	2	True				
ANR	999688	CallExpression	"free_chunk ( free_block , free_block -> size + sizeof ( struct block_header ) )"		999454	0					
ANR	999689	Callee	free_chunk		999454	0					
ANR	999690	Identifier	free_chunk		999454	0					
ANR	999691	ArgumentList	free_block		999454	1					
ANR	999692	Argument	free_block		999454	0					
ANR	999693	Identifier	free_block		999454	0					
ANR	999694	Argument	free_block -> size + sizeof ( struct block_header )		999454	1					
ANR	999695	AdditiveExpression	free_block -> size + sizeof ( struct block_header )		999454	0		+			
ANR	999696	PtrMemberAccess	free_block -> size		999454	0					
ANR	999697	Identifier	free_block		999454	0					
ANR	999698	Identifier	size		999454	1					
ANR	999699	SizeofExpression	sizeof ( struct block_header )		999454	1					
ANR	999700	Sizeof	sizeof		999454	0					
ANR	999701	SizeofOperand	struct block_header		999454	1					
ANR	999702	ExpressionStatement	allocator_release_lock ( )	288:1:9441:9465	999454	10	True				
ANR	999703	CallExpression	allocator_release_lock ( )		999454	0					
ANR	999704	Callee	allocator_release_lock		999454	0					
ANR	999705	Identifier	allocator_release_lock		999454	0					
ANR	999706	ArgumentList			999454	1					
ANR	999707	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		999454	1					
ANR	999708	Identifier	sljit_free_exec		999454	2					
ANR	999709	ParameterList	void * ptr		999454	3					
ANR	999710	Parameter	void * ptr	246:46:7978:7986	999454	0	True				
ANR	999711	ParameterType	void *		999454	0					
ANR	999712	Identifier	ptr		999454	1					
ANR	999713	CFGEntryNode	ENTRY		999454		True				
ANR	999714	CFGExitNode	EXIT		999454		True				
ANR	999715	Symbol	free_block -> header		999454						
ANR	999716	Symbol	free_block		999454						
ANR	999717	Symbol	header -> prev_size		999454						
ANR	999718	Symbol	* free_block		999454						
ANR	999719	Symbol	total_size		999454						
ANR	999720	Symbol	allocated_size		999454						
ANR	999721	Symbol	* header		999454						
ANR	999722	Symbol	free_block -> header . size		999454						
ANR	999723	Symbol	free_block -> header . prev_size		999454						
ANR	999724	Symbol	ptr		999454						
ANR	999725	Symbol	free_block -> size		999454						
ANR	999726	Symbol	( ( struct free_block * ) header ) -> size		999454						
ANR	999727	Symbol	header		999454						
ANR	999728	Symbol	header -> size		999454						
ANR	999729	Symbol	AS_FREE_BLOCK		999454						
ANR	999730	Symbol	AS_BLOCK_HEADER		999454						
ANR	999731	Symbol	SLJIT_UNLIKELY		999454						
ANR	999732	Function	sljit_free_unused_memory_exec	291:0:9470:10118							
ANR	999733	FunctionDef	sljit_free_unused_memory_exec ()		999732	0					
ANR	999734	CompoundStatement		292:0:9536:10118	999732	0					
ANR	999735	IdentifierDeclStatement	struct free_block * free_block ;	293:1:9539:9568	999732	0	True				
ANR	999736	IdentifierDecl	* free_block		999732	0					
ANR	999737	IdentifierDeclType	struct free_block *		999732	0					
ANR	999738	Identifier	free_block		999732	1					
ANR	999739	IdentifierDeclStatement	struct free_block * next_free_block ;	294:1:9571:9605	999732	1	True				
ANR	999740	IdentifierDecl	* next_free_block		999732	0					
ANR	999741	IdentifierDeclType	struct free_block *		999732	0					
ANR	999742	Identifier	next_free_block		999732	1					
ANR	999743	ExpressionStatement	allocator_grab_lock ( )	296:1:9609:9630	999732	2	True				
ANR	999744	CallExpression	allocator_grab_lock ( )		999732	0					
ANR	999745	Callee	allocator_grab_lock		999732	0					
ANR	999746	Identifier	allocator_grab_lock		999732	0					
ANR	999747	ArgumentList			999732	1					
ANR	999748	ExpressionStatement	free_block = free_blocks	298:1:9634:9658	999732	3	True				
ANR	999749	AssignmentExpression	free_block = free_blocks		999732	0		=			
ANR	999750	Identifier	free_block		999732	0					
ANR	999751	Identifier	free_blocks		999732	1					
ANR	999752	WhileStatement	while ( free_block )		999732	4					
ANR	999753	Condition	free_block	299:8:9668:9677	999732	0	True				
ANR	999754	Identifier	free_block		999732	0					
ANR	999755	CompoundStatement		8:20:143:143	999732	1					
ANR	999756	ExpressionStatement	next_free_block = free_block -> next	300:2:9684:9718	999732	0	True				
ANR	999757	AssignmentExpression	next_free_block = free_block -> next		999732	0		=			
ANR	999758	Identifier	next_free_block		999732	0					
ANR	999759	PtrMemberAccess	free_block -> next		999732	1					
ANR	999760	Identifier	free_block		999732	0					
ANR	999761	Identifier	next		999732	1					
ANR	999762	IfStatement	"if ( ! free_block -> header . prev_size && AS_BLOCK_HEADER ( free_block , free_block -> size ) -> size == 1 )"		999732	1					
ANR	999763	Condition	"! free_block -> header . prev_size && AS_BLOCK_HEADER ( free_block , free_block -> size ) -> size == 1"	301:6:9726:9819	999732	0	True				
ANR	999764	AndExpression	"! free_block -> header . prev_size && AS_BLOCK_HEADER ( free_block , free_block -> size ) -> size == 1"		999732	0		&&			
ANR	999765	UnaryOperationExpression	! free_block -> header . prev_size		999732	0					
ANR	999766	UnaryOperator	!		999732	0					
ANR	999767	MemberAccess	free_block -> header . prev_size		999732	1					
ANR	999768	PtrMemberAccess	free_block -> header		999732	0					
ANR	999769	Identifier	free_block		999732	0					
ANR	999770	Identifier	header		999732	1					
ANR	999771	Identifier	prev_size		999732	1					
ANR	999772	EqualityExpression	"AS_BLOCK_HEADER ( free_block , free_block -> size ) -> size == 1"		999732	1		==			
ANR	999773	PtrMemberAccess	"AS_BLOCK_HEADER ( free_block , free_block -> size ) -> size"		999732	0					
ANR	999774	CallExpression	"AS_BLOCK_HEADER ( free_block , free_block -> size )"		999732	0					
ANR	999775	Callee	AS_BLOCK_HEADER		999732	0					
ANR	999776	Identifier	AS_BLOCK_HEADER		999732	0					
ANR	999777	ArgumentList	free_block		999732	1					
ANR	999778	Argument	free_block		999732	0					
ANR	999779	Identifier	free_block		999732	0					
ANR	999780	Argument	free_block -> size		999732	1					
ANR	999781	PtrMemberAccess	free_block -> size		999732	0					
ANR	999782	Identifier	free_block		999732	0					
ANR	999783	Identifier	size		999732	1					
ANR	999784	Identifier	size		999732	1					
ANR	999785	PrimaryExpression	1		999732	1					
ANR	999786	CompoundStatement		11:62:285:285	999732	1					
ANR	999787	ExpressionStatement	total_size -= free_block -> size	303:3:9827:9857	999732	0	True				
ANR	999788	AssignmentExpression	total_size -= free_block -> size		999732	0		-=			
ANR	999789	Identifier	total_size		999732	0					
ANR	999790	PtrMemberAccess	free_block -> size		999732	1					
ANR	999791	Identifier	free_block		999732	0					
ANR	999792	Identifier	size		999732	1					
ANR	999793	ExpressionStatement	sljit_remove_free_block ( free_block )	304:3:9862:9897	999732	1	True				
ANR	999794	CallExpression	sljit_remove_free_block ( free_block )		999732	0					
ANR	999795	Callee	sljit_remove_free_block		999732	0					
ANR	999796	Identifier	sljit_remove_free_block		999732	0					
ANR	999797	ArgumentList	free_block		999732	1					
ANR	999798	Argument	free_block		999732	0					
ANR	999799	Identifier	free_block		999732	0					
ANR	999800	ExpressionStatement	"free_chunk ( free_block , free_block -> size + sizeof ( struct block_header ) )"	305:3:9902:9972	999732	2	True				
ANR	999801	CallExpression	"free_chunk ( free_block , free_block -> size + sizeof ( struct block_header ) )"		999732	0					
ANR	999802	Callee	free_chunk		999732	0					
ANR	999803	Identifier	free_chunk		999732	0					
ANR	999804	ArgumentList	free_block		999732	1					
ANR	999805	Argument	free_block		999732	0					
ANR	999806	Identifier	free_block		999732	0					
ANR	999807	Argument	free_block -> size + sizeof ( struct block_header )		999732	1					
ANR	999808	AdditiveExpression	free_block -> size + sizeof ( struct block_header )		999732	0		+			
ANR	999809	PtrMemberAccess	free_block -> size		999732	0					
ANR	999810	Identifier	free_block		999732	0					
ANR	999811	Identifier	size		999732	1					
ANR	999812	SizeofExpression	sizeof ( struct block_header )		999732	1					
ANR	999813	Sizeof	sizeof		999732	0					
ANR	999814	SizeofOperand	struct block_header		999732	1					
ANR	999815	ExpressionStatement	free_block = next_free_block	307:2:9980:10008	999732	2	True				
ANR	999816	AssignmentExpression	free_block = next_free_block		999732	0		=			
ANR	999817	Identifier	free_block		999732	0					
ANR	999818	Identifier	next_free_block		999732	1					
ANR	999819	ExpressionStatement	SLJIT_ASSERT ( ( total_size && free_blocks ) || ( ! total_size && ! free_blocks ) )	310:1:10015:10089	999732	5	True				
ANR	999820	CallExpression	SLJIT_ASSERT ( ( total_size && free_blocks ) || ( ! total_size && ! free_blocks ) )		999732	0					
ANR	999821	Callee	SLJIT_ASSERT		999732	0					
ANR	999822	Identifier	SLJIT_ASSERT		999732	0					
ANR	999823	ArgumentList	( total_size && free_blocks ) || ( ! total_size && ! free_blocks )		999732	1					
ANR	999824	Argument	( total_size && free_blocks ) || ( ! total_size && ! free_blocks )		999732	0					
ANR	999825	OrExpression	( total_size && free_blocks ) || ( ! total_size && ! free_blocks )		999732	0		||			
ANR	999826	AndExpression	total_size && free_blocks		999732	0		&&			
ANR	999827	Identifier	total_size		999732	0					
ANR	999828	Identifier	free_blocks		999732	1					
ANR	999829	AndExpression	! total_size && ! free_blocks		999732	1		&&			
ANR	999830	UnaryOperationExpression	! total_size		999732	0					
ANR	999831	UnaryOperator	!		999732	0					
ANR	999832	Identifier	total_size		999732	1					
ANR	999833	UnaryOperationExpression	! free_blocks		999732	1					
ANR	999834	UnaryOperator	!		999732	0					
ANR	999835	Identifier	free_blocks		999732	1					
ANR	999836	ExpressionStatement	allocator_release_lock ( )	311:1:10092:10116	999732	6	True				
ANR	999837	CallExpression	allocator_release_lock ( )		999732	0					
ANR	999838	Callee	allocator_release_lock		999732	0					
ANR	999839	Identifier	allocator_release_lock		999732	0					
ANR	999840	ArgumentList			999732	1					
ANR	999841	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		999732	1					
ANR	999842	Identifier	sljit_free_unused_memory_exec		999732	2					
ANR	999843	ParameterList			999732	3					
ANR	999844	CFGEntryNode	ENTRY		999732		True				
ANR	999845	CFGExitNode	EXIT		999732		True				
ANR	999846	Symbol	free_block -> size		999732						
ANR	999847	Symbol	free_blocks		999732						
ANR	999848	Symbol	free_block -> header		999732						
ANR	999849	Symbol	free_block		999732						
ANR	999850	Symbol	* free_block		999732						
ANR	999851	Symbol	total_size		999732						
ANR	999852	Symbol	free_block -> next		999732						
ANR	999853	Symbol	* AS_BLOCK_HEADER		999732						
ANR	999854	Symbol	next_free_block		999732						
ANR	999855	Symbol	"AS_BLOCK_HEADER ( free_block , free_block -> size ) -> size"		999732						
ANR	999856	Symbol	free_block -> header . prev_size		999732						
ANR	999857	Symbol	AS_BLOCK_HEADER		999732						
