command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	997760	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_pcreposix.c								
ANR	997761	DeclStmt									
ANR	997762	Decl							const int	const int [ ]	eint
ANR	997763	Function	regerror	209:0:9612:10346							
ANR	997764	FunctionDef	"regerror (int errcode , const regex_t * preg , char * errbuf , size_t errbuf_size)"		997763	0					
ANR	997765	CompoundStatement		211:0:9736:10346	997763	0					
ANR	997766	IdentifierDeclStatement	"const char * message , * addmessage ;"	212:0:9738:9770	997763	0	True				
ANR	997767	IdentifierDecl	* message		997763	0					
ANR	997768	IdentifierDeclType	const char *		997763	0					
ANR	997769	Identifier	message		997763	1					
ANR	997770	IdentifierDecl	* addmessage		997763	1					
ANR	997771	IdentifierDeclType	const char *		997763	0					
ANR	997772	Identifier	addmessage		997763	1					
ANR	997773	IdentifierDeclStatement	"size_t length , addlength ;"	213:0:9772:9796	997763	1	True				
ANR	997774	IdentifierDecl	length		997763	0					
ANR	997775	IdentifierDeclType	size_t		997763	0					
ANR	997776	Identifier	length		997763	1					
ANR	997777	IdentifierDecl	addlength		997763	1					
ANR	997778	IdentifierDeclType	size_t		997763	0					
ANR	997779	Identifier	addlength		997763	1					
ANR	997780	ExpressionStatement	"message = ( errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) ) ) ? ""unknown error code"" : pstring [ errcode ]"	215:0:9799:9902	997763	2	True				
ANR	997781	AssignmentExpression	"message = ( errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) ) ) ? ""unknown error code"" : pstring [ errcode ]"		997763	0		=			
ANR	997782	Identifier	message		997763	0					
ANR	997783	ConditionalExpression	"( errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) ) ) ? ""unknown error code"" : pstring [ errcode ]"		997763	1					
ANR	997784	Condition	errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) )		997763	0					
ANR	997785	RelationalExpression	errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) )		997763	0		>=			
ANR	997786	Identifier	errcode		997763	0					
ANR	997787	CastExpression	( int ) ( sizeof ( pstring ) / sizeof ( char * ) )		997763	1					
ANR	997788	CastTarget	int		997763	0					
ANR	997789	MultiplicativeExpression	sizeof ( pstring ) / sizeof ( char * )		997763	1		/			
ANR	997790	SizeofExpression	sizeof ( pstring )		997763	0					
ANR	997791	Sizeof	sizeof		997763	0					
ANR	997792	SizeofOperand	pstring		997763	1					
ANR	997793	SizeofExpression	sizeof ( char * )		997763	1					
ANR	997794	Sizeof	sizeof		997763	0					
ANR	997795	SizeofOperand	char *		997763	1					
ANR	997796	PrimaryExpression	"""unknown error code"""		997763	1					
ANR	997797	ArrayIndexing	pstring [ errcode ]		997763	2					
ANR	997798	Identifier	pstring		997763	0					
ANR	997799	Identifier	errcode		997763	1					
ANR	997800	ExpressionStatement	length = strlen ( message ) + 1	217:0:9904:9932	997763	3	True				
ANR	997801	AssignmentExpression	length = strlen ( message ) + 1		997763	0		=			
ANR	997802	Identifier	length		997763	0					
ANR	997803	AdditiveExpression	strlen ( message ) + 1		997763	1		+			
ANR	997804	CallExpression	strlen ( message )		997763	0					
ANR	997805	Callee	strlen		997763	0					
ANR	997806	Identifier	strlen		997763	0					
ANR	997807	ArgumentList	message		997763	1					
ANR	997808	Argument	message		997763	0					
ANR	997809	Identifier	message		997763	0					
ANR	997810	PrimaryExpression	1		997763	1					
ANR	997811	ExpressionStatement	"addmessage = "" at offset """	219:0:9935:9961	997763	4	True				
ANR	997812	AssignmentExpression	"addmessage = "" at offset """		997763	0		=			
ANR	997813	Identifier	addmessage		997763	0					
ANR	997814	PrimaryExpression	""" at offset """		997763	1					
ANR	997815	ExpressionStatement	addlength = ( preg != NULL && ( int ) preg -> re_erroffset != - 1 ) ? strlen ( addmessage ) + 6 : 0	220:0:9963:10052	997763	5	True				
ANR	997816	AssignmentExpression	addlength = ( preg != NULL && ( int ) preg -> re_erroffset != - 1 ) ? strlen ( addmessage ) + 6 : 0		997763	0		=			
ANR	997817	Identifier	addlength		997763	0					
ANR	997818	ConditionalExpression	( preg != NULL && ( int ) preg -> re_erroffset != - 1 ) ? strlen ( addmessage ) + 6 : 0		997763	1					
ANR	997819	Condition	preg != NULL && ( int ) preg -> re_erroffset != - 1		997763	0					
ANR	997820	AndExpression	preg != NULL && ( int ) preg -> re_erroffset != - 1		997763	0		&&			
ANR	997821	EqualityExpression	preg != NULL		997763	0		!=			
ANR	997822	Identifier	preg		997763	0					
ANR	997823	Identifier	NULL		997763	1					
ANR	997824	EqualityExpression	( int ) preg -> re_erroffset != - 1		997763	1		!=			
ANR	997825	CastExpression	( int ) preg -> re_erroffset		997763	0					
ANR	997826	CastTarget	int		997763	0					
ANR	997827	PtrMemberAccess	preg -> re_erroffset		997763	1					
ANR	997828	Identifier	preg		997763	0					
ANR	997829	Identifier	re_erroffset		997763	1					
ANR	997830	UnaryOperationExpression	- 1		997763	1					
ANR	997831	UnaryOperator	-		997763	0					
ANR	997832	PrimaryExpression	1		997763	1					
ANR	997833	AdditiveExpression	strlen ( addmessage ) + 6		997763	1		+			
ANR	997834	CallExpression	strlen ( addmessage )		997763	0					
ANR	997835	Callee	strlen		997763	0					
ANR	997836	Identifier	strlen		997763	0					
ANR	997837	ArgumentList	addmessage		997763	1					
ANR	997838	Argument	addmessage		997763	0					
ANR	997839	Identifier	addmessage		997763	0					
ANR	997840	PrimaryExpression	6		997763	1					
ANR	997841	PrimaryExpression	0		997763	2					
ANR	997842	IfStatement	if ( errbuf_size > 0 )		997763	6					
ANR	997843	Condition	errbuf_size > 0	223:4:10059:10073	997763	0	True				
ANR	997844	RelationalExpression	errbuf_size > 0		997763	0		>			
ANR	997845	Identifier	errbuf_size		997763	0					
ANR	997846	PrimaryExpression	0		997763	1					
ANR	997847	CompoundStatement		14:2:341:341	997763	1					
ANR	997848	IfStatement	if ( addlength > 0 && errbuf_size >= length + addlength )		997763	0					
ANR	997849	Condition	addlength > 0 && errbuf_size >= length + addlength	225:6:10086:10135	997763	0	True				
ANR	997850	AndExpression	addlength > 0 && errbuf_size >= length + addlength		997763	0		&&			
ANR	997851	RelationalExpression	addlength > 0		997763	0		>			
ANR	997852	Identifier	addlength		997763	0					
ANR	997853	PrimaryExpression	0		997763	1					
ANR	997854	RelationalExpression	errbuf_size >= length + addlength		997763	1		>=			
ANR	997855	Identifier	errbuf_size		997763	0					
ANR	997856	AdditiveExpression	length + addlength		997763	1		+			
ANR	997857	Identifier	length		997763	0					
ANR	997858	Identifier	addlength		997763	1					
ANR	997859	ExpressionStatement	"sprintf ( errbuf , ""%s%s%-6d"" , message , addmessage , ( int ) preg -> re_erroffset )"	226:4:10142:10215	997763	1	True				
ANR	997860	CallExpression	"sprintf ( errbuf , ""%s%s%-6d"" , message , addmessage , ( int ) preg -> re_erroffset )"		997763	0					
ANR	997861	Callee	sprintf		997763	0					
ANR	997862	Identifier	sprintf		997763	0					
ANR	997863	ArgumentList	errbuf		997763	1					
ANR	997864	Argument	errbuf		997763	0					
ANR	997865	Identifier	errbuf		997763	0					
ANR	997866	Argument	"""%s%s%-6d"""		997763	1					
ANR	997867	PrimaryExpression	"""%s%s%-6d"""		997763	0					
ANR	997868	Argument	message		997763	2					
ANR	997869	Identifier	message		997763	0					
ANR	997870	Argument	addmessage		997763	3					
ANR	997871	Identifier	addmessage		997763	0					
ANR	997872	Argument	( int ) preg -> re_erroffset		997763	4					
ANR	997873	CastExpression	( int ) preg -> re_erroffset		997763	0					
ANR	997874	CastTarget	int		997763	0					
ANR	997875	PtrMemberAccess	preg -> re_erroffset		997763	1					
ANR	997876	Identifier	preg		997763	0					
ANR	997877	Identifier	re_erroffset		997763	1					
ANR	997878	ElseStatement	else		997763	0					
ANR	997879	CompoundStatement		18:4:491:491	997763	0					
ANR	997880	ExpressionStatement	"strncpy ( errbuf , message , errbuf_size - 1 )"	229:4:10234:10275	997763	0	True				
ANR	997881	CallExpression	"strncpy ( errbuf , message , errbuf_size - 1 )"		997763	0					
ANR	997882	Callee	strncpy		997763	0					
ANR	997883	Identifier	strncpy		997763	0					
ANR	997884	ArgumentList	errbuf		997763	1					
ANR	997885	Argument	errbuf		997763	0					
ANR	997886	Identifier	errbuf		997763	0					
ANR	997887	Argument	message		997763	1					
ANR	997888	Identifier	message		997763	0					
ANR	997889	Argument	errbuf_size - 1		997763	2					
ANR	997890	AdditiveExpression	errbuf_size - 1		997763	0		-			
ANR	997891	Identifier	errbuf_size		997763	0					
ANR	997892	PrimaryExpression	1		997763	1					
ANR	997893	ExpressionStatement	errbuf [ errbuf_size - 1 ] = 0	230:4:10281:10306	997763	1	True				
ANR	997894	AssignmentExpression	errbuf [ errbuf_size - 1 ] = 0		997763	0		=			
ANR	997895	ArrayIndexing	errbuf [ errbuf_size - 1 ]		997763	0					
ANR	997896	Identifier	errbuf		997763	0					
ANR	997897	AdditiveExpression	errbuf_size - 1		997763	1		-			
ANR	997898	Identifier	errbuf_size		997763	0					
ANR	997899	PrimaryExpression	1		997763	1					
ANR	997900	PrimaryExpression	0		997763	1					
ANR	997901	ReturnStatement	return length + addlength ;	234:0:10319:10344	997763	7	True				
ANR	997902	AdditiveExpression	length + addlength		997763	0		+			
ANR	997903	Identifier	length		997763	0					
ANR	997904	Identifier	addlength		997763	1					
ANR	997905	ReturnType	PCREPOSIX_EXP_DEFN size_t PCRE_CALL_CONVENTION		997763	1					
ANR	997906	Identifier	regerror		997763	2					
ANR	997907	ParameterList	"int errcode , const regex_t * preg , char * errbuf , size_t errbuf_size"		997763	3					
ANR	997908	Parameter	int errcode	210:9:9668:9678	997763	0	True				
ANR	997909	ParameterType	int		997763	0					
ANR	997910	Identifier	errcode		997763	1					
ANR	997911	Parameter	const regex_t * preg	210:22:9681:9699	997763	1	True				
ANR	997912	ParameterType	const regex_t *		997763	0					
ANR	997913	Identifier	preg		997763	1					
ANR	997914	Parameter	char * errbuf	210:43:9702:9713	997763	2	True				
ANR	997915	ParameterType	char *		997763	0					
ANR	997916	Identifier	errbuf		997763	1					
ANR	997917	Parameter	size_t errbuf_size	210:57:9716:9733	997763	3	True				
ANR	997918	ParameterType	size_t		997763	0					
ANR	997919	Identifier	errbuf_size		997763	1					
ANR	997920	CFGEntryNode	ENTRY		997763		True				
ANR	997921	CFGExitNode	EXIT		997763		True				
ANR	997922	Symbol	errcode		997763						
ANR	997923	Symbol	errbuf_size		997763						
ANR	997924	Symbol	NULL		997763						
ANR	997925	Symbol	* pstring		997763						
ANR	997926	Symbol	addlength		997763						
ANR	997927	Symbol	length		997763						
ANR	997928	Symbol	addmessage		997763						
ANR	997929	Symbol	* errbuf		997763						
ANR	997930	Symbol	message		997763						
ANR	997931	Symbol	preg -> re_erroffset		997763						
ANR	997932	Symbol	* errcode		997763						
ANR	997933	Symbol	pstring		997763						
ANR	997934	Symbol	preg		997763						
ANR	997935	Symbol	strlen		997763						
ANR	997936	Symbol	* preg		997763						
ANR	997937	Symbol	errbuf		997763						
ANR	997938	Symbol	* errbuf_size		997763						
ANR	997939	Function	regfree	244:0:10506:10605							
ANR	997940	FunctionDef	regfree (regex_t * preg)		997939	0					
ANR	997941	CompoundStatement		246:0:10574:10605	997939	0					
ANR	997942	ExpressionStatement	( PUBL ( free ) ) ( preg -> re_pcre )	247:0:10576:10603	997939	0	True				
ANR	997943	CallExpression	( PUBL ( free ) ) ( preg -> re_pcre )		997939	0					
ANR	997944	Callee	PUBL ( free )		997939	0					
ANR	997945	CallExpression	PUBL ( free )		997939	0					
ANR	997946	Callee	PUBL		997939	0					
ANR	997947	Identifier	PUBL		997939	0					
ANR	997948	ArgumentList	free		997939	1					
ANR	997949	Argument	free		997939	0					
ANR	997950	Identifier	free		997939	0					
ANR	997951	ArgumentList	preg -> re_pcre		997939	1					
ANR	997952	Argument	preg -> re_pcre		997939	0					
ANR	997953	PtrMemberAccess	preg -> re_pcre		997939	0					
ANR	997954	Identifier	preg		997939	0					
ANR	997955	Identifier	re_pcre		997939	1					
ANR	997956	ReturnType	PCREPOSIX_EXP_DEFN void PCRE_CALL_CONVENTION		997939	1					
ANR	997957	Identifier	regfree		997939	2					
ANR	997958	ParameterList	regex_t * preg		997939	3					
ANR	997959	Parameter	regex_t * preg	245:8:10559:10571	997939	0	True				
ANR	997960	ParameterType	regex_t *		997939	0					
ANR	997961	Identifier	preg		997939	1					
ANR	997962	CFGEntryNode	ENTRY		997939		True				
ANR	997963	CFGExitNode	EXIT		997939		True				
ANR	997964	Symbol	preg		997939						
ANR	997965	Symbol	* preg		997939						
ANR	997966	Symbol	preg -> re_pcre		997939						
ANR	997967	Symbol	free		997939						
ANR	997968	Function	regcomp	267:0:11002:12144							
ANR	997969	FunctionDef	"regcomp (regex_t * preg , const char * pattern , int cflags)"		997968	0					
ANR	997970	CompoundStatement		269:0:11102:12144	997968	0					
ANR	997971	IdentifierDeclStatement	const char * errorptr ;	270:0:11104:11124	997968	0	True				
ANR	997972	IdentifierDecl	* errorptr		997968	0					
ANR	997973	IdentifierDeclType	const char *		997968	0					
ANR	997974	Identifier	errorptr		997968	1					
ANR	997975	IdentifierDeclStatement	int erroffset ;	271:0:11126:11139	997968	1	True				
ANR	997976	IdentifierDecl	erroffset		997968	0					
ANR	997977	IdentifierDeclType	int		997968	0					
ANR	997978	Identifier	erroffset		997968	1					
ANR	997979	IdentifierDeclStatement	int errorcode ;	272:0:11141:11154	997968	2	True				
ANR	997980	IdentifierDecl	errorcode		997968	0					
ANR	997981	IdentifierDeclType	int		997968	0					
ANR	997982	Identifier	errorcode		997968	1					
ANR	997983	IdentifierDeclStatement	int options = 0 ;	273:0:11156:11171	997968	3	True				
ANR	997984	IdentifierDecl	options = 0		997968	0					
ANR	997985	IdentifierDeclType	int		997968	0					
ANR	997986	Identifier	options		997968	1					
ANR	997987	AssignmentExpression	options = 0		997968	2		=			
ANR	997988	Identifier	options		997968	0					
ANR	997989	PrimaryExpression	0		997968	1					
ANR	997990	IdentifierDeclStatement	int re_nsub = 0 ;	274:0:11173:11188	997968	4	True				
ANR	997991	IdentifierDecl	re_nsub = 0		997968	0					
ANR	997992	IdentifierDeclType	int		997968	0					
ANR	997993	Identifier	re_nsub		997968	1					
ANR	997994	AssignmentExpression	re_nsub = 0		997968	2		=			
ANR	997995	Identifier	re_nsub		997968	0					
ANR	997996	PrimaryExpression	0		997968	1					
ANR	997997	IfStatement	if ( ( cflags & REG_ICASE ) != 0 )		997968	5					
ANR	997998	Condition	( cflags & REG_ICASE ) != 0	276:4:11195:11219	997968	0	True				
ANR	997999	EqualityExpression	( cflags & REG_ICASE ) != 0		997968	0		!=			
ANR	998000	BitAndExpression	cflags & REG_ICASE		997968	0		&			
ANR	998001	Identifier	cflags		997968	0					
ANR	998002	Identifier	REG_ICASE		997968	1					
ANR	998003	PrimaryExpression	0		997968	1					
ANR	998004	ExpressionStatement	options |= PCRE_CASELESS	276:34:11225:11249	997968	1	True				
ANR	998005	AssignmentExpression	options |= PCRE_CASELESS		997968	0		|=			
ANR	998006	Identifier	options		997968	0					
ANR	998007	Identifier	PCRE_CASELESS		997968	1					
ANR	998008	IfStatement	if ( ( cflags & REG_NEWLINE ) != 0 )		997968	6					
ANR	998009	Condition	( cflags & REG_NEWLINE ) != 0	277:4:11255:11281	997968	0	True				
ANR	998010	EqualityExpression	( cflags & REG_NEWLINE ) != 0		997968	0		!=			
ANR	998011	BitAndExpression	cflags & REG_NEWLINE		997968	0		&			
ANR	998012	Identifier	cflags		997968	0					
ANR	998013	Identifier	REG_NEWLINE		997968	1					
ANR	998014	PrimaryExpression	0		997968	1					
ANR	998015	ExpressionStatement	options |= PCRE_MULTILINE	277:34:11285:11310	997968	1	True				
ANR	998016	AssignmentExpression	options |= PCRE_MULTILINE		997968	0		|=			
ANR	998017	Identifier	options		997968	0					
ANR	998018	Identifier	PCRE_MULTILINE		997968	1					
ANR	998019	IfStatement	if ( ( cflags & REG_DOTALL ) != 0 )		997968	7					
ANR	998020	Condition	( cflags & REG_DOTALL ) != 0	278:4:11316:11341	997968	0	True				
ANR	998021	EqualityExpression	( cflags & REG_DOTALL ) != 0		997968	0		!=			
ANR	998022	BitAndExpression	cflags & REG_DOTALL		997968	0		&			
ANR	998023	Identifier	cflags		997968	0					
ANR	998024	Identifier	REG_DOTALL		997968	1					
ANR	998025	PrimaryExpression	0		997968	1					
ANR	998026	ExpressionStatement	options |= PCRE_DOTALL	278:34:11346:11368	997968	1	True				
ANR	998027	AssignmentExpression	options |= PCRE_DOTALL		997968	0		|=			
ANR	998028	Identifier	options		997968	0					
ANR	998029	Identifier	PCRE_DOTALL		997968	1					
ANR	998030	IfStatement	if ( ( cflags & REG_NOSUB ) != 0 )		997968	8					
ANR	998031	Condition	( cflags & REG_NOSUB ) != 0	279:4:11374:11398	997968	0	True				
ANR	998032	EqualityExpression	( cflags & REG_NOSUB ) != 0		997968	0		!=			
ANR	998033	BitAndExpression	cflags & REG_NOSUB		997968	0		&			
ANR	998034	Identifier	cflags		997968	0					
ANR	998035	Identifier	REG_NOSUB		997968	1					
ANR	998036	PrimaryExpression	0		997968	1					
ANR	998037	ExpressionStatement	options |= PCRE_NO_AUTO_CAPTURE	279:34:11404:11435	997968	1	True				
ANR	998038	AssignmentExpression	options |= PCRE_NO_AUTO_CAPTURE		997968	0		|=			
ANR	998039	Identifier	options		997968	0					
ANR	998040	Identifier	PCRE_NO_AUTO_CAPTURE		997968	1					
ANR	998041	IfStatement	if ( ( cflags & REG_UTF8 ) != 0 )		997968	9					
ANR	998042	Condition	( cflags & REG_UTF8 ) != 0	280:4:11441:11464	997968	0	True				
ANR	998043	EqualityExpression	( cflags & REG_UTF8 ) != 0		997968	0		!=			
ANR	998044	BitAndExpression	cflags & REG_UTF8		997968	0		&			
ANR	998045	Identifier	cflags		997968	0					
ANR	998046	Identifier	REG_UTF8		997968	1					
ANR	998047	PrimaryExpression	0		997968	1					
ANR	998048	ExpressionStatement	options |= PCRE_UTF8	280:34:11471:11491	997968	1	True				
ANR	998049	AssignmentExpression	options |= PCRE_UTF8		997968	0		|=			
ANR	998050	Identifier	options		997968	0					
ANR	998051	Identifier	PCRE_UTF8		997968	1					
ANR	998052	IfStatement	if ( ( cflags & REG_UCP ) != 0 )		997968	10					
ANR	998053	Condition	( cflags & REG_UCP ) != 0	281:4:11497:11519	997968	0	True				
ANR	998054	EqualityExpression	( cflags & REG_UCP ) != 0		997968	0		!=			
ANR	998055	BitAndExpression	cflags & REG_UCP		997968	0		&			
ANR	998056	Identifier	cflags		997968	0					
ANR	998057	Identifier	REG_UCP		997968	1					
ANR	998058	PrimaryExpression	0		997968	1					
ANR	998059	ExpressionStatement	options |= PCRE_UCP	281:34:11527:11546	997968	1	True				
ANR	998060	AssignmentExpression	options |= PCRE_UCP		997968	0		|=			
ANR	998061	Identifier	options		997968	0					
ANR	998062	Identifier	PCRE_UCP		997968	1					
ANR	998063	IfStatement	if ( ( cflags & REG_UNGREEDY ) != 0 )		997968	11					
ANR	998064	Condition	( cflags & REG_UNGREEDY ) != 0	282:4:11552:11579	997968	0	True				
ANR	998065	EqualityExpression	( cflags & REG_UNGREEDY ) != 0		997968	0		!=			
ANR	998066	BitAndExpression	cflags & REG_UNGREEDY		997968	0		&			
ANR	998067	Identifier	cflags		997968	0					
ANR	998068	Identifier	REG_UNGREEDY		997968	1					
ANR	998069	PrimaryExpression	0		997968	1					
ANR	998070	ExpressionStatement	options |= PCRE_UNGREEDY	282:34:11582:11606	997968	1	True				
ANR	998071	AssignmentExpression	options |= PCRE_UNGREEDY		997968	0		|=			
ANR	998072	Identifier	options		997968	0					
ANR	998073	Identifier	PCRE_UNGREEDY		997968	1					
ANR	998074	ExpressionStatement	"preg -> re_pcre = pcre_compile2 ( pattern , options , & errorcode , & errorptr , & erroffset , NULL )"	284:0:11609:11699	997968	12	True				
ANR	998075	AssignmentExpression	"preg -> re_pcre = pcre_compile2 ( pattern , options , & errorcode , & errorptr , & erroffset , NULL )"		997968	0		=			
ANR	998076	PtrMemberAccess	preg -> re_pcre		997968	0					
ANR	998077	Identifier	preg		997968	0					
ANR	998078	Identifier	re_pcre		997968	1					
ANR	998079	CallExpression	"pcre_compile2 ( pattern , options , & errorcode , & errorptr , & erroffset , NULL )"		997968	1					
ANR	998080	Callee	pcre_compile2		997968	0					
ANR	998081	Identifier	pcre_compile2		997968	0					
ANR	998082	ArgumentList	pattern		997968	1					
ANR	998083	Argument	pattern		997968	0					
ANR	998084	Identifier	pattern		997968	0					
ANR	998085	Argument	options		997968	1					
ANR	998086	Identifier	options		997968	0					
ANR	998087	Argument	& errorcode		997968	2					
ANR	998088	UnaryOperationExpression	& errorcode		997968	0					
ANR	998089	UnaryOperator	&		997968	0					
ANR	998090	Identifier	errorcode		997968	1					
ANR	998091	Argument	& errorptr		997968	3					
ANR	998092	UnaryOperationExpression	& errorptr		997968	0					
ANR	998093	UnaryOperator	&		997968	0					
ANR	998094	Identifier	errorptr		997968	1					
ANR	998095	Argument	& erroffset		997968	4					
ANR	998096	UnaryOperationExpression	& erroffset		997968	0					
ANR	998097	UnaryOperator	&		997968	0					
ANR	998098	Identifier	erroffset		997968	1					
ANR	998099	Argument	NULL		997968	5					
ANR	998100	Identifier	NULL		997968	0					
ANR	998101	ExpressionStatement	preg -> re_erroffset = erroffset	286:0:11701:11731	997968	13	True				
ANR	998102	AssignmentExpression	preg -> re_erroffset = erroffset		997968	0		=			
ANR	998103	PtrMemberAccess	preg -> re_erroffset		997968	0					
ANR	998104	Identifier	preg		997968	0					
ANR	998105	Identifier	re_erroffset		997968	1					
ANR	998106	Identifier	erroffset		997968	1					
ANR	998107	IfStatement	if ( preg -> re_pcre == NULL )		997968	14					
ANR	998108	Condition	preg -> re_pcre == NULL	291:4:11881:11901	997968	0	True				
ANR	998109	EqualityExpression	preg -> re_pcre == NULL		997968	0		==			
ANR	998110	PtrMemberAccess	preg -> re_pcre		997968	0					
ANR	998111	Identifier	preg		997968	0					
ANR	998112	Identifier	re_pcre		997968	1					
ANR	998113	Identifier	NULL		997968	1					
ANR	998114	CompoundStatement		24:2:803:803	997968	1					
ANR	998115	ReturnStatement	return ( errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) ) ) ? eint [ errorcode ] : REG_BADPAT ;	293:2:11910:12002	997968	0	True				
ANR	998116	ConditionalExpression	( errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) ) ) ? eint [ errorcode ] : REG_BADPAT		997968	0					
ANR	998117	Condition	errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) )		997968	0					
ANR	998118	RelationalExpression	errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) )		997968	0		<			
ANR	998119	Identifier	errorcode		997968	0					
ANR	998120	CastExpression	( int ) ( sizeof ( eint ) / sizeof ( const int ) )		997968	1					
ANR	998121	CastTarget	int		997968	0					
ANR	998122	MultiplicativeExpression	sizeof ( eint ) / sizeof ( const int )		997968	1		/			
ANR	998123	SizeofExpression	sizeof ( eint )		997968	0					
ANR	998124	Sizeof	sizeof		997968	0					
ANR	998125	SizeofOperand	eint		997968	1					
ANR	998126	SizeofExpression	sizeof ( const int )		997968	1					
ANR	998127	Sizeof	sizeof		997968	0					
ANR	998128	SizeofOperand	const int		997968	1					
ANR	998129	ArrayIndexing	eint [ errorcode ]		997968	1					
ANR	998130	Identifier	eint		997968	0					
ANR	998131	Identifier	errorcode		997968	1					
ANR	998132	Identifier	REG_BADPAT		997968	2					
ANR	998133	ExpressionStatement	"( void ) pcre_fullinfo ( ( const pcre * ) preg -> re_pcre , NULL , PCRE_INFO_CAPTURECOUNT , & re_nsub )"	297:0:12009:12099	997968	15	True				
ANR	998134	CastExpression	"( void ) pcre_fullinfo ( ( const pcre * ) preg -> re_pcre , NULL , PCRE_INFO_CAPTURECOUNT , & re_nsub )"		997968	0					
ANR	998135	CastTarget	void		997968	0					
ANR	998136	CallExpression	"pcre_fullinfo ( ( const pcre * ) preg -> re_pcre , NULL , PCRE_INFO_CAPTURECOUNT , & re_nsub )"		997968	1					
ANR	998137	Callee	pcre_fullinfo		997968	0					
ANR	998138	Identifier	pcre_fullinfo		997968	0					
ANR	998139	ArgumentList	( const pcre * ) preg -> re_pcre		997968	1					
ANR	998140	Argument	( const pcre * ) preg -> re_pcre		997968	0					
ANR	998141	CastExpression	( const pcre * ) preg -> re_pcre		997968	0					
ANR	998142	CastTarget	const pcre *		997968	0					
ANR	998143	PtrMemberAccess	preg -> re_pcre		997968	1					
ANR	998144	Identifier	preg		997968	0					
ANR	998145	Identifier	re_pcre		997968	1					
ANR	998146	Argument	NULL		997968	1					
ANR	998147	Identifier	NULL		997968	0					
ANR	998148	Argument	PCRE_INFO_CAPTURECOUNT		997968	2					
ANR	998149	Identifier	PCRE_INFO_CAPTURECOUNT		997968	0					
ANR	998150	Argument	& re_nsub		997968	3					
ANR	998151	UnaryOperationExpression	& re_nsub		997968	0					
ANR	998152	UnaryOperator	&		997968	0					
ANR	998153	Identifier	re_nsub		997968	1					
ANR	998154	ExpressionStatement	preg -> re_nsub = ( size_t ) re_nsub	299:0:12101:12132	997968	16	True				
ANR	998155	AssignmentExpression	preg -> re_nsub = ( size_t ) re_nsub		997968	0		=			
ANR	998156	PtrMemberAccess	preg -> re_nsub		997968	0					
ANR	998157	Identifier	preg		997968	0					
ANR	998158	Identifier	re_nsub		997968	1					
ANR	998159	CastExpression	( size_t ) re_nsub		997968	1					
ANR	998160	CastTarget	size_t		997968	0					
ANR	998161	Identifier	re_nsub		997968	1					
ANR	998162	ReturnStatement	return 0 ;	300:0:12134:12142	997968	17	True				
ANR	998163	PrimaryExpression	0		997968	0					
ANR	998164	ReturnType	PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION		997968	1					
ANR	998165	Identifier	regcomp		997968	2					
ANR	998166	ParameterList	"regex_t * preg , const char * pattern , int cflags"		997968	3					
ANR	998167	Parameter	regex_t * preg	268:8:11054:11066	997968	0	True				
ANR	998168	ParameterType	regex_t *		997968	0					
ANR	998169	Identifier	preg		997968	1					
ANR	998170	Parameter	const char * pattern	268:23:11069:11087	997968	1	True				
ANR	998171	ParameterType	const char *		997968	0					
ANR	998172	Identifier	pattern		997968	1					
ANR	998173	Parameter	int cflags	268:44:11090:11099	997968	2	True				
ANR	998174	ParameterType	int		997968	0					
ANR	998175	Identifier	cflags		997968	1					
ANR	998176	CFGEntryNode	ENTRY		997968		True				
ANR	998177	CFGExitNode	EXIT		997968		True				
ANR	998178	Symbol	REG_NEWLINE		997968						
ANR	998179	Symbol	REG_UTF8		997968						
ANR	998180	Symbol	eint		997968						
ANR	998181	Symbol	REG_DOTALL		997968						
ANR	998182	Symbol	REG_BADPAT		997968						
ANR	998183	Symbol	pattern		997968						
ANR	998184	Symbol	preg -> re_pcre		997968						
ANR	998185	Symbol	& errorptr		997968						
ANR	998186	Symbol	preg		997968						
ANR	998187	Symbol	re_nsub		997968						
ANR	998188	Symbol	errorptr		997968						
ANR	998189	Symbol	options		997968						
ANR	998190	Symbol	pcre_compile2		997968						
ANR	998191	Symbol	preg -> re_nsub		997968						
ANR	998192	Symbol	REG_ICASE		997968						
ANR	998193	Symbol	PCRE_INFO_CAPTURECOUNT		997968						
ANR	998194	Symbol	PCRE_CASELESS		997968						
ANR	998195	Symbol	& erroffset		997968						
ANR	998196	Symbol	errorcode		997968						
ANR	998197	Symbol	REG_UNGREEDY		997968						
ANR	998198	Symbol	* errorcode		997968						
ANR	998199	Symbol	NULL		997968						
ANR	998200	Symbol	REG_UCP		997968						
ANR	998201	Symbol	PCRE_UNGREEDY		997968						
ANR	998202	Symbol	PCRE_MULTILINE		997968						
ANR	998203	Symbol	PCRE_UCP		997968						
ANR	998204	Symbol	preg -> re_erroffset		997968						
ANR	998205	Symbol	& errorcode		997968						
ANR	998206	Symbol	PCRE_DOTALL		997968						
ANR	998207	Symbol	REG_NOSUB		997968						
ANR	998208	Symbol	& re_nsub		997968						
ANR	998209	Symbol	* preg		997968						
ANR	998210	Symbol	cflags		997968						
ANR	998211	Symbol	erroffset		997968						
ANR	998212	Symbol	PCRE_UTF8		997968						
ANR	998213	Symbol	PCRE_NO_AUTO_CAPTURE		997968						
ANR	998214	Symbol	* eint		997968						
ANR	998215	Function	regexec	321:0:12935:16324							
ANR	998216	FunctionDef	"regexec (const regex_t * preg , const char * string , size_t nmatch , regmatch_t pmatch [ ] , int eflags)"		998215	0					
ANR	998217	CompoundStatement		324:0:13078:16324	998215	0					
ANR	998218	IdentifierDeclStatement	"int rc , so , eo ;"	325:0:13080:13094	998215	0	True				
ANR	998219	IdentifierDecl	rc		998215	0					
ANR	998220	IdentifierDeclType	int		998215	0					
ANR	998221	Identifier	rc		998215	1					
ANR	998222	IdentifierDecl	so		998215	1					
ANR	998223	IdentifierDeclType	int		998215	0					
ANR	998224	Identifier	so		998215	1					
ANR	998225	IdentifierDecl	eo		998215	2					
ANR	998226	IdentifierDeclType	int		998215	0					
ANR	998227	Identifier	eo		998215	1					
ANR	998228	IdentifierDeclStatement	int options = 0 ;	326:0:13096:13111	998215	1	True				
ANR	998229	IdentifierDecl	options = 0		998215	0					
ANR	998230	IdentifierDeclType	int		998215	0					
ANR	998231	Identifier	options		998215	1					
ANR	998232	AssignmentExpression	options = 0		998215	2		=			
ANR	998233	Identifier	options		998215	0					
ANR	998234	PrimaryExpression	0		998215	1					
ANR	998235	IdentifierDeclStatement	int * ovector = NULL ;	327:0:13113:13132	998215	2	True				
ANR	998236	IdentifierDecl	* ovector = NULL		998215	0					
ANR	998237	IdentifierDeclType	int *		998215	0					
ANR	998238	Identifier	ovector		998215	1					
ANR	998239	AssignmentExpression	* ovector = NULL		998215	2		=			
ANR	998240	Identifier	NULL		998215	0					
ANR	998241	Identifier	NULL		998215	1					
ANR	998242	IdentifierDeclStatement	int small_ovector [ POSIX_MALLOC_THRESHOLD * 3 ] ;	328:0:13134:13179	998215	3	True				
ANR	998243	IdentifierDecl	small_ovector [ POSIX_MALLOC_THRESHOLD * 3 ]		998215	0					
ANR	998244	IdentifierDeclType	int [ POSIX_MALLOC_THRESHOLD * 3 ]		998215	0					
ANR	998245	Identifier	small_ovector		998215	1					
ANR	998246	MultiplicativeExpression	POSIX_MALLOC_THRESHOLD * 3		998215	2		*			
ANR	998247	Identifier	POSIX_MALLOC_THRESHOLD		998215	0					
ANR	998248	PrimaryExpression	3		998215	1					
ANR	998249	IdentifierDeclStatement	BOOL allocated_ovector = FALSE ;	329:0:13181:13211	998215	4	True				
ANR	998250	IdentifierDecl	allocated_ovector = FALSE		998215	0					
ANR	998251	IdentifierDeclType	BOOL		998215	0					
ANR	998252	Identifier	allocated_ovector		998215	1					
ANR	998253	AssignmentExpression	allocated_ovector = FALSE		998215	2		=			
ANR	998254	Identifier	FALSE		998215	0					
ANR	998255	Identifier	FALSE		998215	1					
ANR	998256	IdentifierDeclStatement	BOOL nosub = ( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0 ;	330:0:13213:13304	998215	5	True				
ANR	998257	IdentifierDecl	nosub = ( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0		998215	0					
ANR	998258	IdentifierDeclType	BOOL		998215	0					
ANR	998259	Identifier	nosub		998215	1					
ANR	998260	AssignmentExpression	nosub = ( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0		998215	2		=			
ANR	998261	Identifier	nosub		998215	0					
ANR	998262	EqualityExpression	( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0		998215	1		!=			
ANR	998263	BitAndExpression	REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE		998215	0		&			
ANR	998264	CallExpression	REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre )		998215	0					
ANR	998265	Callee	REAL_PCRE_OPTIONS		998215	0					
ANR	998266	Identifier	REAL_PCRE_OPTIONS		998215	0					
ANR	998267	ArgumentList	( const pcre * ) preg -> re_pcre		998215	1					
ANR	998268	Argument	( const pcre * ) preg -> re_pcre		998215	0					
ANR	998269	CastExpression	( const pcre * ) preg -> re_pcre		998215	0					
ANR	998270	CastTarget	const pcre *		998215	0					
ANR	998271	PtrMemberAccess	preg -> re_pcre		998215	1					
ANR	998272	Identifier	preg		998215	0					
ANR	998273	Identifier	re_pcre		998215	1					
ANR	998274	Identifier	PCRE_NO_AUTO_CAPTURE		998215	1					
ANR	998275	PrimaryExpression	0		998215	1					
ANR	998276	IfStatement	if ( ( eflags & REG_NOTBOL ) != 0 )		998215	6					
ANR	998277	Condition	( eflags & REG_NOTBOL ) != 0	333:4:13311:13336	998215	0	True				
ANR	998278	EqualityExpression	( eflags & REG_NOTBOL ) != 0		998215	0		!=			
ANR	998279	BitAndExpression	eflags & REG_NOTBOL		998215	0		&			
ANR	998280	Identifier	eflags		998215	0					
ANR	998281	Identifier	REG_NOTBOL		998215	1					
ANR	998282	PrimaryExpression	0		998215	1					
ANR	998283	ExpressionStatement	options |= PCRE_NOTBOL	333:32:13339:13361	998215	1	True				
ANR	998284	AssignmentExpression	options |= PCRE_NOTBOL		998215	0		|=			
ANR	998285	Identifier	options		998215	0					
ANR	998286	Identifier	PCRE_NOTBOL		998215	1					
ANR	998287	IfStatement	if ( ( eflags & REG_NOTEOL ) != 0 )		998215	7					
ANR	998288	Condition	( eflags & REG_NOTEOL ) != 0	334:4:13367:13392	998215	0	True				
ANR	998289	EqualityExpression	( eflags & REG_NOTEOL ) != 0		998215	0		!=			
ANR	998290	BitAndExpression	eflags & REG_NOTEOL		998215	0		&			
ANR	998291	Identifier	eflags		998215	0					
ANR	998292	Identifier	REG_NOTEOL		998215	1					
ANR	998293	PrimaryExpression	0		998215	1					
ANR	998294	ExpressionStatement	options |= PCRE_NOTEOL	334:32:13395:13417	998215	1	True				
ANR	998295	AssignmentExpression	options |= PCRE_NOTEOL		998215	0		|=			
ANR	998296	Identifier	options		998215	0					
ANR	998297	Identifier	PCRE_NOTEOL		998215	1					
ANR	998298	IfStatement	if ( ( eflags & REG_NOTEMPTY ) != 0 )		998215	8					
ANR	998299	Condition	( eflags & REG_NOTEMPTY ) != 0	335:4:13423:13450	998215	0	True				
ANR	998300	EqualityExpression	( eflags & REG_NOTEMPTY ) != 0		998215	0		!=			
ANR	998301	BitAndExpression	eflags & REG_NOTEMPTY		998215	0		&			
ANR	998302	Identifier	eflags		998215	0					
ANR	998303	Identifier	REG_NOTEMPTY		998215	1					
ANR	998304	PrimaryExpression	0		998215	1					
ANR	998305	ExpressionStatement	options |= PCRE_NOTEMPTY	335:34:13453:13477	998215	1	True				
ANR	998306	AssignmentExpression	options |= PCRE_NOTEMPTY		998215	0		|=			
ANR	998307	Identifier	options		998215	0					
ANR	998308	Identifier	PCRE_NOTEMPTY		998215	1					
ANR	998309	ExpressionStatement	( ( regex_t * ) preg ) -> re_erroffset = ( size_t ) ( - 1 )	337:0:13480:13526	998215	9	True				
ANR	998310	AssignmentExpression	( ( regex_t * ) preg ) -> re_erroffset = ( size_t ) ( - 1 )		998215	0		=			
ANR	998311	PtrMemberAccess	( ( regex_t * ) preg ) -> re_erroffset		998215	0					
ANR	998312	CastExpression	( regex_t * ) preg		998215	0					
ANR	998313	CastTarget	regex_t *		998215	0					
ANR	998314	Identifier	preg		998215	1					
ANR	998315	Identifier	re_erroffset		998215	1					
ANR	998316	CastExpression	( size_t ) ( - 1 )		998215	1					
ANR	998317	CastTarget	size_t		998215	0					
ANR	998318	UnaryOperationExpression	- 1		998215	1					
ANR	998319	UnaryOperator	-		998215	0					
ANR	998320	PrimaryExpression	1		998215	1					
ANR	998321	IfStatement	if ( nosub || pmatch == NULL )		998215	10					
ANR	998322	Condition	nosub || pmatch == NULL	343:4:13768:13790	998215	0	True				
ANR	998323	OrExpression	nosub || pmatch == NULL		998215	0		||			
ANR	998324	Identifier	nosub		998215	0					
ANR	998325	EqualityExpression	pmatch == NULL		998215	1		==			
ANR	998326	Identifier	pmatch		998215	0					
ANR	998327	Identifier	NULL		998215	1					
ANR	998328	ExpressionStatement	nmatch = 0	343:29:13793:13803	998215	1	True				
ANR	998329	AssignmentExpression	nmatch = 0		998215	0		=			
ANR	998330	Identifier	nmatch		998215	0					
ANR	998331	PrimaryExpression	0		998215	1					
ANR	998332	ElseStatement	else		998215	0					
ANR	998333	IfStatement	if ( nmatch > 0 )		998215	0					
ANR	998334	Condition	nmatch > 0	345:9:13815:13824	998215	0	True				
ANR	998335	RelationalExpression	nmatch > 0		998215	0		>			
ANR	998336	Identifier	nmatch		998215	0					
ANR	998337	PrimaryExpression	0		998215	1					
ANR	998338	CompoundStatement		23:2:750:750	998215	1					
ANR	998339	IfStatement	if ( nmatch <= POSIX_MALLOC_THRESHOLD )		998215	0					
ANR	998340	Condition	nmatch <= POSIX_MALLOC_THRESHOLD	347:6:13837:13868	998215	0	True				
ANR	998341	RelationalExpression	nmatch <= POSIX_MALLOC_THRESHOLD		998215	0		<=			
ANR	998342	Identifier	nmatch		998215	0					
ANR	998343	Identifier	POSIX_MALLOC_THRESHOLD		998215	1					
ANR	998344	CompoundStatement		25:4:796:796	998215	1					
ANR	998345	ExpressionStatement	ovector = & ( small_ovector [ 0 ] )	349:4:13881:13910	998215	0	True				
ANR	998346	AssignmentExpression	ovector = & ( small_ovector [ 0 ] )		998215	0		=			
ANR	998347	Identifier	ovector		998215	0					
ANR	998348	UnaryOperationExpression	& ( small_ovector [ 0 ] )		998215	1					
ANR	998349	UnaryOperator	&		998215	0					
ANR	998350	ArrayIndexing	small_ovector [ 0 ]		998215	1					
ANR	998351	Identifier	small_ovector		998215	0					
ANR	998352	PrimaryExpression	0		998215	1					
ANR	998353	ElseStatement	else		998215	0					
ANR	998354	CompoundStatement		29:4:850:850	998215	0					
ANR	998355	IfStatement	if ( nmatch > INT_MAX / ( sizeof ( int ) * 3 ) )		998215	0					
ANR	998356	Condition	nmatch > INT_MAX / ( sizeof ( int ) * 3 )	353:8:13939:13972	998215	0	True				
ANR	998357	RelationalExpression	nmatch > INT_MAX / ( sizeof ( int ) * 3 )		998215	0		>			
ANR	998358	Identifier	nmatch		998215	0					
ANR	998359	MultiplicativeExpression	INT_MAX / ( sizeof ( int ) * 3 )		998215	1		/			
ANR	998360	Identifier	INT_MAX		998215	0					
ANR	998361	MultiplicativeExpression	sizeof ( int ) * 3		998215	1		*			
ANR	998362	SizeofExpression	sizeof ( int )		998215	0					
ANR	998363	Sizeof	sizeof		998215	0					
ANR	998364	SizeofOperand	int		998215	1					
ANR	998365	PrimaryExpression	3		998215	1					
ANR	998366	ReturnStatement	return REG_ESPACE ;	353:44:13975:13992	998215	1	True				
ANR	998367	Identifier	REG_ESPACE		998215	0					
ANR	998368	ExpressionStatement	ovector = ( int * ) malloc ( sizeof ( int ) * nmatch * 3 )	354:4:13998:14047	998215	1	True				
ANR	998369	AssignmentExpression	ovector = ( int * ) malloc ( sizeof ( int ) * nmatch * 3 )		998215	0		=			
ANR	998370	Identifier	ovector		998215	0					
ANR	998371	CastExpression	( int * ) malloc ( sizeof ( int ) * nmatch * 3 )		998215	1					
ANR	998372	CastTarget	int *		998215	0					
ANR	998373	CallExpression	malloc ( sizeof ( int ) * nmatch * 3 )		998215	1					
ANR	998374	Callee	malloc		998215	0					
ANR	998375	Identifier	malloc		998215	0					
ANR	998376	ArgumentList	sizeof ( int ) * nmatch * 3		998215	1					
ANR	998377	Argument	sizeof ( int ) * nmatch * 3		998215	0					
ANR	998378	MultiplicativeExpression	sizeof ( int ) * nmatch * 3		998215	0		*			
ANR	998379	SizeofExpression	sizeof ( int )		998215	0					
ANR	998380	Sizeof	sizeof		998215	0					
ANR	998381	SizeofOperand	int		998215	1					
ANR	998382	MultiplicativeExpression	nmatch * 3		998215	1		*			
ANR	998383	Identifier	nmatch		998215	0					
ANR	998384	PrimaryExpression	3		998215	1					
ANR	998385	IfStatement	if ( ovector == NULL )		998215	2					
ANR	998386	Condition	ovector == NULL	355:8:14057:14071	998215	0	True				
ANR	998387	EqualityExpression	ovector == NULL		998215	0		==			
ANR	998388	Identifier	ovector		998215	0					
ANR	998389	Identifier	NULL		998215	1					
ANR	998390	ReturnStatement	return REG_ESPACE ;	355:25:14074:14091	998215	1	True				
ANR	998391	Identifier	REG_ESPACE		998215	0					
ANR	998392	ExpressionStatement	allocated_ovector = TRUE	356:4:14097:14121	998215	3	True				
ANR	998393	AssignmentExpression	allocated_ovector = TRUE		998215	0		=			
ANR	998394	Identifier	allocated_ovector		998215	0					
ANR	998395	Identifier	TRUE		998215	1					
ANR	998396	IfStatement	if ( ( eflags & REG_STARTEND ) != 0 )		998215	11					
ANR	998397	Condition	( eflags & REG_STARTEND ) != 0	365:4:14442:14469	998215	0	True				
ANR	998398	EqualityExpression	( eflags & REG_STARTEND ) != 0		998215	0		!=			
ANR	998399	BitAndExpression	eflags & REG_STARTEND		998215	0		&			
ANR	998400	Identifier	eflags		998215	0					
ANR	998401	Identifier	REG_STARTEND		998215	1					
ANR	998402	PrimaryExpression	0		998215	1					
ANR	998403	CompoundStatement		43:2:1395:1395	998215	1					
ANR	998404	ExpressionStatement	so = pmatch [ 0 ] . rm_so	367:2:14478:14498	998215	0	True				
ANR	998405	AssignmentExpression	so = pmatch [ 0 ] . rm_so		998215	0		=			
ANR	998406	Identifier	so		998215	0					
ANR	998407	MemberAccess	pmatch [ 0 ] . rm_so		998215	1					
ANR	998408	ArrayIndexing	pmatch [ 0 ]		998215	0					
ANR	998409	Identifier	pmatch		998215	0					
ANR	998410	PrimaryExpression	0		998215	1					
ANR	998411	Identifier	rm_so		998215	1					
ANR	998412	ExpressionStatement	eo = pmatch [ 0 ] . rm_eo	368:2:14502:14522	998215	1	True				
ANR	998413	AssignmentExpression	eo = pmatch [ 0 ] . rm_eo		998215	0		=			
ANR	998414	Identifier	eo		998215	0					
ANR	998415	MemberAccess	pmatch [ 0 ] . rm_eo		998215	1					
ANR	998416	ArrayIndexing	pmatch [ 0 ]		998215	0					
ANR	998417	Identifier	pmatch		998215	0					
ANR	998418	PrimaryExpression	0		998215	1					
ANR	998419	Identifier	rm_eo		998215	1					
ANR	998420	ElseStatement	else		998215	0					
ANR	998421	CompoundStatement		48:2:1456:1456	998215	0					
ANR	998422	ExpressionStatement	so = 0	372:2:14539:14545	998215	0	True				
ANR	998423	AssignmentExpression	so = 0		998215	0		=			
ANR	998424	Identifier	so		998215	0					
ANR	998425	PrimaryExpression	0		998215	1					
ANR	998426	ExpressionStatement	eo = ( int ) strlen ( string )	373:2:14549:14573	998215	1	True				
ANR	998427	AssignmentExpression	eo = ( int ) strlen ( string )		998215	0		=			
ANR	998428	Identifier	eo		998215	0					
ANR	998429	CastExpression	( int ) strlen ( string )		998215	1					
ANR	998430	CastTarget	int		998215	0					
ANR	998431	CallExpression	strlen ( string )		998215	1					
ANR	998432	Callee	strlen		998215	0					
ANR	998433	Identifier	strlen		998215	0					
ANR	998434	ArgumentList	string		998215	1					
ANR	998435	Argument	string		998215	0					
ANR	998436	Identifier	string		998215	0					
ANR	998437	ExpressionStatement	"rc = pcre_exec ( ( const pcre * ) preg -> re_pcre , NULL , string + so , ( eo - so ) , 0 , options , ovector , ( int ) ( nmatch * 3 ) )"	376:0:14580:14695	998215	12	True				
ANR	998438	AssignmentExpression	"rc = pcre_exec ( ( const pcre * ) preg -> re_pcre , NULL , string + so , ( eo - so ) , 0 , options , ovector , ( int ) ( nmatch * 3 ) )"		998215	0		=			
ANR	998439	Identifier	rc		998215	0					
ANR	998440	CallExpression	"pcre_exec ( ( const pcre * ) preg -> re_pcre , NULL , string + so , ( eo - so ) , 0 , options , ovector , ( int ) ( nmatch * 3 ) )"		998215	1					
ANR	998441	Callee	pcre_exec		998215	0					
ANR	998442	Identifier	pcre_exec		998215	0					
ANR	998443	ArgumentList	( const pcre * ) preg -> re_pcre		998215	1					
ANR	998444	Argument	( const pcre * ) preg -> re_pcre		998215	0					
ANR	998445	CastExpression	( const pcre * ) preg -> re_pcre		998215	0					
ANR	998446	CastTarget	const pcre *		998215	0					
ANR	998447	PtrMemberAccess	preg -> re_pcre		998215	1					
ANR	998448	Identifier	preg		998215	0					
ANR	998449	Identifier	re_pcre		998215	1					
ANR	998450	Argument	NULL		998215	1					
ANR	998451	Identifier	NULL		998215	0					
ANR	998452	Argument	string + so		998215	2					
ANR	998453	AdditiveExpression	string + so		998215	0		+			
ANR	998454	Identifier	string		998215	0					
ANR	998455	Identifier	so		998215	1					
ANR	998456	Argument	eo - so		998215	3					
ANR	998457	AdditiveExpression	eo - so		998215	0		-			
ANR	998458	Identifier	eo		998215	0					
ANR	998459	Identifier	so		998215	1					
ANR	998460	Argument	0		998215	4					
ANR	998461	PrimaryExpression	0		998215	0					
ANR	998462	Argument	options		998215	5					
ANR	998463	Identifier	options		998215	0					
ANR	998464	Argument	ovector		998215	6					
ANR	998465	Identifier	ovector		998215	0					
ANR	998466	Argument	( int ) ( nmatch * 3 )		998215	7					
ANR	998467	CastExpression	( int ) ( nmatch * 3 )		998215	0					
ANR	998468	CastTarget	int		998215	0					
ANR	998469	MultiplicativeExpression	nmatch * 3		998215	1		*			
ANR	998470	Identifier	nmatch		998215	0					
ANR	998471	PrimaryExpression	3		998215	1					
ANR	998472	IfStatement	if ( rc == 0 )		998215	13					
ANR	998473	Condition	rc == 0	379:4:14702:14708	998215	0	True				
ANR	998474	EqualityExpression	rc == 0		998215	0		==			
ANR	998475	Identifier	rc		998215	0					
ANR	998476	PrimaryExpression	0		998215	1					
ANR	998477	ExpressionStatement	rc = ( int ) nmatch	379:13:14711:14727	998215	1	True				
ANR	998478	AssignmentExpression	rc = ( int ) nmatch		998215	0		=			
ANR	998479	Identifier	rc		998215	0					
ANR	998480	CastExpression	( int ) nmatch		998215	1					
ANR	998481	CastTarget	int		998215	0					
ANR	998482	Identifier	nmatch		998215	1					
ANR	998483	IfStatement	if ( rc >= 0 )		998215	14					
ANR	998484	Condition	rc >= 0	383:4:14801:14807	998215	0	True				
ANR	998485	RelationalExpression	rc >= 0		998215	0		>=			
ANR	998486	Identifier	rc		998215	0					
ANR	998487	PrimaryExpression	0		998215	1					
ANR	998488	CompoundStatement		62:2:1737:1745	998215	1					
ANR	998489	IdentifierDeclStatement	size_t i ;	385:2:14816:14824	998215	0	True				
ANR	998490	IdentifierDecl	i		998215	0					
ANR	998491	IdentifierDeclType	size_t		998215	0					
ANR	998492	Identifier	i		998215	1					
ANR	998493	IfStatement	if ( ! nosub )		998215	1					
ANR	998494	Condition	! nosub	386:6:14832:14837	998215	0	True				
ANR	998495	UnaryOperationExpression	! nosub		998215	0					
ANR	998496	UnaryOperator	!		998215	0					
ANR	998497	Identifier	nosub		998215	1					
ANR	998498	CompoundStatement		64:4:1765:1765	998215	1					
ANR	998499	ForStatement	for ( i = 0 ; i < ( size_t ) rc ; i ++ )		998215	0					
ANR	998500	ForInit	i = 0 ;	388:9:14855:14860	998215	0	True				
ANR	998501	AssignmentExpression	i = 0		998215	0		=			
ANR	998502	Identifier	i		998215	0					
ANR	998503	PrimaryExpression	0		998215	1					
ANR	998504	Condition	i < ( size_t ) rc	388:16:14862:14875	998215	1	True				
ANR	998505	RelationalExpression	i < ( size_t ) rc		998215	0		<			
ANR	998506	Identifier	i		998215	0					
ANR	998507	CastExpression	( size_t ) rc		998215	1					
ANR	998508	CastTarget	size_t		998215	0					
ANR	998509	Identifier	rc		998215	1					
ANR	998510	PostIncDecOperationExpression	i ++	388:32:14878:14880	998215	2	True				
ANR	998511	Identifier	i		998215	0					
ANR	998512	IncDec	++		998215	1					
ANR	998513	CompoundStatement		66:6:1810:1810	998215	3					
ANR	998514	ExpressionStatement	pmatch [ i ] . rm_so = ovector [ i * 2 ]	390:6:14897:14927	998215	0	True				
ANR	998515	AssignmentExpression	pmatch [ i ] . rm_so = ovector [ i * 2 ]		998215	0		=			
ANR	998516	MemberAccess	pmatch [ i ] . rm_so		998215	0					
ANR	998517	ArrayIndexing	pmatch [ i ]		998215	0					
ANR	998518	Identifier	pmatch		998215	0					
ANR	998519	Identifier	i		998215	1					
ANR	998520	Identifier	rm_so		998215	1					
ANR	998521	ArrayIndexing	ovector [ i * 2 ]		998215	1					
ANR	998522	Identifier	ovector		998215	0					
ANR	998523	MultiplicativeExpression	i * 2		998215	1		*			
ANR	998524	Identifier	i		998215	0					
ANR	998525	PrimaryExpression	2		998215	1					
ANR	998526	ExpressionStatement	pmatch [ i ] . rm_eo = ovector [ i * 2 + 1 ]	391:6:14935:14967	998215	1	True				
ANR	998527	AssignmentExpression	pmatch [ i ] . rm_eo = ovector [ i * 2 + 1 ]		998215	0		=			
ANR	998528	MemberAccess	pmatch [ i ] . rm_eo		998215	0					
ANR	998529	ArrayIndexing	pmatch [ i ]		998215	0					
ANR	998530	Identifier	pmatch		998215	0					
ANR	998531	Identifier	i		998215	1					
ANR	998532	Identifier	rm_eo		998215	1					
ANR	998533	ArrayIndexing	ovector [ i * 2 + 1 ]		998215	1					
ANR	998534	Identifier	ovector		998215	0					
ANR	998535	AdditiveExpression	i * 2 + 1		998215	1		+			
ANR	998536	MultiplicativeExpression	i * 2		998215	0		*			
ANR	998537	Identifier	i		998215	0					
ANR	998538	PrimaryExpression	2		998215	1					
ANR	998539	PrimaryExpression	1		998215	1					
ANR	998540	IfStatement	if ( allocated_ovector )		998215	1					
ANR	998541	Condition	allocated_ovector	393:8:14985:15001	998215	0	True				
ANR	998542	Identifier	allocated_ovector		998215	0					
ANR	998543	ExpressionStatement	free ( ovector )	393:27:15004:15017	998215	1	True				
ANR	998544	CallExpression	free ( ovector )		998215	0					
ANR	998545	Callee	free		998215	0					
ANR	998546	Identifier	free		998215	0					
ANR	998547	ArgumentList	ovector		998215	1					
ANR	998548	Argument	ovector		998215	0					
ANR	998549	Identifier	ovector		998215	0					
ANR	998550	ForStatement	for ( ; i < nmatch ; i ++ )		998215	2					
ANR	998551	Condition	i < nmatch	394:11:15030:15039	998215	0	True				
ANR	998552	RelationalExpression	i < nmatch		998215	0		<			
ANR	998553	Identifier	i		998215	0					
ANR	998554	Identifier	nmatch		998215	1					
ANR	998555	PostIncDecOperationExpression	i ++	394:23:15042:15044	998215	1	True				
ANR	998556	Identifier	i		998215	0					
ANR	998557	IncDec	++		998215	1					
ANR	998558	ExpressionStatement	pmatch [ i ] . rm_so = pmatch [ i ] . rm_eo = - 1	394:28:15047:15085	998215	2	True				
ANR	998559	AssignmentExpression	pmatch [ i ] . rm_so = pmatch [ i ] . rm_eo = - 1		998215	0		=			
ANR	998560	MemberAccess	pmatch [ i ] . rm_so		998215	0					
ANR	998561	ArrayIndexing	pmatch [ i ]		998215	0					
ANR	998562	Identifier	pmatch		998215	0					
ANR	998563	Identifier	i		998215	1					
ANR	998564	Identifier	rm_so		998215	1					
ANR	998565	AssignmentExpression	pmatch [ i ] . rm_eo = - 1		998215	1		=			
ANR	998566	MemberAccess	pmatch [ i ] . rm_eo		998215	0					
ANR	998567	ArrayIndexing	pmatch [ i ]		998215	0					
ANR	998568	Identifier	pmatch		998215	0					
ANR	998569	Identifier	i		998215	1					
ANR	998570	Identifier	rm_eo		998215	1					
ANR	998571	UnaryOperationExpression	- 1		998215	1					
ANR	998572	UnaryOperator	-		998215	0					
ANR	998573	PrimaryExpression	1		998215	1					
ANR	998574	ReturnStatement	return 0 ;	396:2:15095:15103	998215	2	True				
ANR	998575	PrimaryExpression	0		998215	0					
ANR	998576	IfStatement	if ( allocated_ovector )		998215	15					
ANR	998577	Condition	allocated_ovector	401:4:15140:15156	998215	0	True				
ANR	998578	Identifier	allocated_ovector		998215	0					
ANR	998579	ExpressionStatement	free ( ovector )	401:23:15159:15172	998215	1	True				
ANR	998580	CallExpression	free ( ovector )		998215	0					
ANR	998581	Callee	free		998215	0					
ANR	998582	Identifier	free		998215	0					
ANR	998583	ArgumentList	ovector		998215	1					
ANR	998584	Argument	ovector		998215	0					
ANR	998585	Identifier	ovector		998215	0					
ANR	998586	SwitchStatement	switch ( rc )		998215	16					
ANR	998587	Condition	rc	402:7:15181:15182	998215	0	True				
ANR	998588	Identifier	rc		998215	0					
ANR	998589	CompoundStatement		80:2:2108:2108	998215	1					
ANR	998590	Label	case 0 :	411:2:15655:15661	998215	0	True				
ANR	998591	Statement	case	412:2:15665:15668	998215	1	True				
ANR	998592	Statement	(	412:7:15670:15670	998215	2	True				
ANR	998593	Statement	sizeof	412:8:15671:15676	998215	3	True				
ANR	998594	Statement	(	412:14:15677:15677	998215	4	True				
ANR	998595	Statement	eint	412:15:15678:15681	998215	5	True				
ANR	998596	Statement	)	412:19:15682:15682	998215	6	True				
ANR	998597	Statement	/	412:20:15683:15683	998215	7	True				
ANR	998598	Statement	sizeof	412:21:15684:15689	998215	8	True				
ANR	998599	Statement	(	412:27:15690:15690	998215	9	True				
ANR	998600	Statement	int	412:28:15691:15693	998215	10	True				
ANR	998601	Statement	)	412:31:15694:15694	998215	11	True				
ANR	998602	Statement	==	412:33:15696:15697	998215	12	True				
ANR	998603	Statement	ERRCOUNT	412:36:15699:15706	998215	13	True				
ANR	998604	Statement	)	412:44:15707:15707	998215	14	True				
ANR	998605	Statement	:	412:45:15708:15708	998215	15	True				
ANR	998606	ReturnStatement	return REG_ASSERT ;	413:2:15712:15729	998215	16	True				
ANR	998607	Identifier	REG_ASSERT		998215	0					
ANR	998608	Label	case PCRE_ERROR_NOMATCH :	416:2:15815:15838	998215	17	True				
ANR	998609	Identifier	PCRE_ERROR_NOMATCH		998215	0					
ANR	998610	ReturnStatement	return REG_NOMATCH ;	416:27:15840:15858	998215	18	True				
ANR	998611	Identifier	REG_NOMATCH		998215	0					
ANR	998612	Label	case PCRE_ERROR_NULL :	417:2:15862:15882	998215	19	True				
ANR	998613	Identifier	PCRE_ERROR_NULL		998215	0					
ANR	998614	ReturnStatement	return REG_INVARG ;	417:24:15884:15901	998215	20	True				
ANR	998615	Identifier	REG_INVARG		998215	0					
ANR	998616	Label	case PCRE_ERROR_BADOPTION :	418:2:15905:15930	998215	21	True				
ANR	998617	Identifier	PCRE_ERROR_BADOPTION		998215	0					
ANR	998618	ReturnStatement	return REG_INVARG ;	418:29:15932:15949	998215	22	True				
ANR	998619	Identifier	REG_INVARG		998215	0					
ANR	998620	Label	case PCRE_ERROR_BADMAGIC :	419:2:15953:15977	998215	23	True				
ANR	998621	Identifier	PCRE_ERROR_BADMAGIC		998215	0					
ANR	998622	ReturnStatement	return REG_INVARG ;	419:28:15979:15996	998215	24	True				
ANR	998623	Identifier	REG_INVARG		998215	0					
ANR	998624	Label	case PCRE_ERROR_UNKNOWN_NODE :	420:2:16000:16028	998215	25	True				
ANR	998625	Identifier	PCRE_ERROR_UNKNOWN_NODE		998215	0					
ANR	998626	ReturnStatement	return REG_ASSERT ;	420:32:16030:16047	998215	26	True				
ANR	998627	Identifier	REG_ASSERT		998215	0					
ANR	998628	Label	case PCRE_ERROR_NOMEMORY :	421:2:16051:16075	998215	27	True				
ANR	998629	Identifier	PCRE_ERROR_NOMEMORY		998215	0					
ANR	998630	ReturnStatement	return REG_ESPACE ;	421:28:16077:16094	998215	28	True				
ANR	998631	Identifier	REG_ESPACE		998215	0					
ANR	998632	Label	case PCRE_ERROR_MATCHLIMIT :	422:2:16098:16124	998215	29	True				
ANR	998633	Identifier	PCRE_ERROR_MATCHLIMIT		998215	0					
ANR	998634	ReturnStatement	return REG_ESPACE ;	422:30:16126:16143	998215	30	True				
ANR	998635	Identifier	REG_ESPACE		998215	0					
ANR	998636	Label	case PCRE_ERROR_BADUTF8 :	423:2:16147:16170	998215	31	True				
ANR	998637	Identifier	PCRE_ERROR_BADUTF8		998215	0					
ANR	998638	ReturnStatement	return REG_INVARG ;	423:27:16172:16189	998215	32	True				
ANR	998639	Identifier	REG_INVARG		998215	0					
ANR	998640	Label	case PCRE_ERROR_BADUTF8_OFFSET :	424:2:16193:16223	998215	33	True				
ANR	998641	Identifier	PCRE_ERROR_BADUTF8_OFFSET		998215	0					
ANR	998642	ReturnStatement	return REG_INVARG ;	424:34:16225:16242	998215	34	True				
ANR	998643	Identifier	REG_INVARG		998215	0					
ANR	998644	Label	case PCRE_ERROR_BADMODE :	425:2:16246:16269	998215	35	True				
ANR	998645	Identifier	PCRE_ERROR_BADMODE		998215	0					
ANR	998646	ReturnStatement	return REG_INVARG ;	425:27:16271:16288	998215	36	True				
ANR	998647	Identifier	REG_INVARG		998215	0					
ANR	998648	Label	default :	426:2:16292:16299	998215	37	True				
ANR	998649	Identifier	default		998215	0					
ANR	998650	ReturnStatement	return REG_ASSERT ;	426:11:16301:16318	998215	38	True				
ANR	998651	Identifier	REG_ASSERT		998215	0					
ANR	998652	ReturnType	PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION		998215	1					
ANR	998653	Identifier	regexec		998215	2					
ANR	998654	ParameterList	"const regex_t * preg , const char * string , size_t nmatch , regmatch_t pmatch [ ] , int eflags"		998215	3					
ANR	998655	Parameter	const regex_t * preg	322:8:12987:13005	998215	0	True				
ANR	998656	ParameterType	const regex_t *		998215	0					
ANR	998657	Identifier	preg		998215	1					
ANR	998658	Parameter	const char * string	322:29:13008:13025	998215	1	True				
ANR	998659	ParameterType	const char *		998215	0					
ANR	998660	Identifier	string		998215	1					
ANR	998661	Parameter	size_t nmatch	322:49:13028:13040	998215	2	True				
ANR	998662	ParameterType	size_t		998215	0					
ANR	998663	Identifier	nmatch		998215	1					
ANR	998664	Parameter	regmatch_t pmatch [ ]	323:2:13045:13063	998215	3	True				
ANR	998665	ParameterType	regmatch_t [ ]		998215	0					
ANR	998666	Identifier	pmatch		998215	1					
ANR	998667	Parameter	int eflags	323:23:13066:13075	998215	4	True				
ANR	998668	ParameterType	int		998215	0					
ANR	998669	Identifier	eflags		998215	1					
ANR	998670	CFGEntryNode	ENTRY		998215		True				
ANR	998671	CFGExitNode	EXIT		998215		True				
ANR	998672	Symbol	( ( regex_t * ) preg ) -> re_erroffset		998215						
ANR	998673	Symbol	REG_NOTBOL		998215						
ANR	998674	Symbol	pmatch [ 0 ] . rm_so		998215						
ANR	998675	Symbol	PCRE_NOTEMPTY		998215						
ANR	998676	Symbol	string		998215						
ANR	998677	Symbol	small_ovector		998215						
ANR	998678	Symbol	pcre_exec		998215						
ANR	998679	Symbol	allocated_ovector		998215						
ANR	998680	Symbol	preg -> re_pcre		998215						
ANR	998681	Symbol	REG_NOTEOL		998215						
ANR	998682	Symbol	* pmatch		998215						
ANR	998683	Symbol	REG_ASSERT		998215						
ANR	998684	Symbol	preg		998215						
ANR	998685	Symbol	REG_INVARG		998215						
ANR	998686	Symbol	strlen		998215						
ANR	998687	Symbol	PCRE_NOTBOL		998215						
ANR	998688	Symbol	pmatch [ 0 ] . rm_eo		998215						
ANR	998689	Symbol	REG_STARTEND		998215						
ANR	998690	Symbol	options		998215						
ANR	998691	Symbol	INT_MAX		998215						
ANR	998692	Symbol	pmatch		998215						
ANR	998693	Symbol	so		998215						
ANR	998694	Symbol	nosub		998215						
ANR	998695	Symbol	REG_NOMATCH		998215						
ANR	998696	Symbol	ovector		998215						
ANR	998697	Symbol	PCRE_NOTEOL		998215						
ANR	998698	Symbol	malloc		998215						
ANR	998699	Symbol	NULL		998215						
ANR	998700	Symbol	pmatch [ i ] . rm_eo		998215						
ANR	998701	Symbol	POSIX_MALLOC_THRESHOLD		998215						
ANR	998702	Symbol	TRUE		998215						
ANR	998703	Symbol	i		998215						
ANR	998704	Symbol	eo		998215						
ANR	998705	Symbol	eflags		998215						
ANR	998706	Symbol	rc		998215						
ANR	998707	Symbol	* ovector		998215						
ANR	998708	Symbol	pmatch [ i ] . rm_so		998215						
ANR	998709	Symbol	* i		998215						
ANR	998710	Symbol	nmatch		998215						
ANR	998711	Symbol	* preg		998215						
ANR	998712	Symbol	REAL_PCRE_OPTIONS		998215						
ANR	998713	Symbol	FALSE		998215						
ANR	998714	Symbol	REG_NOTEMPTY		998215						
ANR	998715	Symbol	REG_ESPACE		998215						
ANR	998716	Symbol	PCRE_NO_AUTO_CAPTURE		998215						
