command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2164492	File	data/converged/CVE-2017-11142_php-src/main_spprintf.c								
ANR	2164493	DeclStmt									
ANR	2164494	Decl							size_t	size_t	newlen
ANR	2164495	Function	strnlen	194:0:6681:6797							
ANR	2164496	FunctionDef	"strnlen (const char * s , size_t maxlen)"		2164495	0					
ANR	2164497	CompoundStatement		194:52:6733:6797	2164495	0					
ANR	2164498	IdentifierDeclStatement	"char * r = memchr ( s , '\\0' , maxlen ) ;"	195:1:6736:6769	2164495	0	True				
ANR	2164499	IdentifierDecl	"* r = memchr ( s , '\\0' , maxlen )"		2164495	0					
ANR	2164500	IdentifierDeclType	char *		2164495	0					
ANR	2164501	Identifier	r		2164495	1					
ANR	2164502	AssignmentExpression	"* r = memchr ( s , '\\0' , maxlen )"		2164495	2		=			
ANR	2164503	Identifier	r		2164495	0					
ANR	2164504	CallExpression	"memchr ( s , '\\0' , maxlen )"		2164495	1					
ANR	2164505	Callee	memchr		2164495	0					
ANR	2164506	Identifier	memchr		2164495	0					
ANR	2164507	ArgumentList	s		2164495	1					
ANR	2164508	Argument	s		2164495	0					
ANR	2164509	Identifier	s		2164495	0					
ANR	2164510	Argument	'\\0'		2164495	1					
ANR	2164511	PrimaryExpression	'\\0'		2164495	0					
ANR	2164512	Argument	maxlen		2164495	2					
ANR	2164513	Identifier	maxlen		2164495	0					
ANR	2164514	ReturnStatement	return r ? r - s : maxlen ;	196:1:6772:6795	2164495	1	True				
ANR	2164515	ConditionalExpression	r ? r - s : maxlen		2164495	0					
ANR	2164516	Condition	r		2164495	0					
ANR	2164517	Identifier	r		2164495	0					
ANR	2164518	AdditiveExpression	r - s		2164495	1		-			
ANR	2164519	Identifier	r		2164495	0					
ANR	2164520	Identifier	s		2164495	1					
ANR	2164521	Identifier	maxlen		2164495	2					
ANR	2164522	ReturnType	static size_t		2164495	1					
ANR	2164523	Identifier	strnlen		2164495	2					
ANR	2164524	ParameterList	"const char * s , size_t maxlen"		2164495	3					
ANR	2164525	Parameter	const char * s	194:22:6703:6715	2164495	0	True				
ANR	2164526	ParameterType	const char *		2164495	0					
ANR	2164527	Identifier	s		2164495	1					
ANR	2164528	Parameter	size_t maxlen	194:37:6718:6730	2164495	1	True				
ANR	2164529	ParameterType	size_t		2164495	0					
ANR	2164530	Identifier	maxlen		2164495	1					
ANR	2164531	CFGEntryNode	ENTRY		2164495		True				
ANR	2164532	CFGExitNode	EXIT		2164495		True				
ANR	2164533	Symbol	r		2164495						
ANR	2164534	Symbol	s		2164495						
ANR	2164535	Symbol	memchr		2164495						
ANR	2164536	Symbol	maxlen		2164495						
ANR	2164537	Function	xbuf_format_converter	203:0:6867:20207							
ANR	2164538	FunctionDef	"xbuf_format_converter (smart_str * xbuf , const char * fmt , va_list ap)"		2164537	0					
ANR	2164539	CompoundStatement		204:0:6957:20207	2164537	0					
ANR	2164540	IdentifierDeclStatement	char * s = NULL ;	205:1:6960:6974	2164537	0	True				
ANR	2164541	IdentifierDecl	* s = NULL		2164537	0					
ANR	2164542	IdentifierDeclType	char *		2164537	0					
ANR	2164543	Identifier	s		2164537	1					
ANR	2164544	AssignmentExpression	* s = NULL		2164537	2		=			
ANR	2164545	Identifier	NULL		2164537	0					
ANR	2164546	Identifier	NULL		2164537	1					
ANR	2164547	IdentifierDeclStatement	"int s_len , free_zcopy ;"	206:1:6977:6998	2164537	1	True				
ANR	2164548	IdentifierDecl	s_len		2164537	0					
ANR	2164549	IdentifierDeclType	int		2164537	0					
ANR	2164550	Identifier	s_len		2164537	1					
ANR	2164551	IdentifierDecl	free_zcopy		2164537	1					
ANR	2164552	IdentifierDeclType	int		2164537	0					
ANR	2164553	Identifier	free_zcopy		2164537	1					
ANR	2164554	IdentifierDeclStatement	"zval * zvp , zcopy ;"	207:1:7001:7017	2164537	2	True				
ANR	2164555	IdentifierDecl	* zvp		2164537	0					
ANR	2164556	IdentifierDeclType	zval *		2164537	0					
ANR	2164557	Identifier	zvp		2164537	1					
ANR	2164558	IdentifierDecl	zcopy		2164537	1					
ANR	2164559	IdentifierDeclType	zval		2164537	0					
ANR	2164560	Identifier	zcopy		2164537	1					
ANR	2164561	IdentifierDeclStatement	int min_width = 0 ;	209:1:7021:7038	2164537	3	True				
ANR	2164562	IdentifierDecl	min_width = 0		2164537	0					
ANR	2164563	IdentifierDeclType	int		2164537	0					
ANR	2164564	Identifier	min_width		2164537	1					
ANR	2164565	AssignmentExpression	min_width = 0		2164537	2		=			
ANR	2164566	Identifier	min_width		2164537	0					
ANR	2164567	PrimaryExpression	0		2164537	1					
ANR	2164568	IdentifierDeclStatement	int precision = 0 ;	210:1:7041:7058	2164537	4	True				
ANR	2164569	IdentifierDecl	precision = 0		2164537	0					
ANR	2164570	IdentifierDeclType	int		2164537	0					
ANR	2164571	Identifier	precision		2164537	1					
ANR	2164572	AssignmentExpression	precision = 0		2164537	2		=			
ANR	2164573	Identifier	precision		2164537	0					
ANR	2164574	PrimaryExpression	0		2164537	1					
ANR	2164575	ClassDefStatement	"enum { LEFT , RIGHT } adjust ;"	211:1:7061:7091	2164537	5	True				
ANR	2164576	IdentifierDecl	adjust		2164537	0					
ANR	2164577	IdentifierDeclType			2164537	0					
ANR	2164578	Identifier	adjust		2164537	1					
ANR	2164579	IdentifierDeclStatement	char pad_char ;	214:1:7094:7107	2164537	6	True				
ANR	2164580	IdentifierDecl	pad_char		2164537	0					
ANR	2164581	IdentifierDeclType	char		2164537	0					
ANR	2164582	Identifier	pad_char		2164537	1					
ANR	2164583	IdentifierDeclStatement	char prefix_char ;	215:1:7110:7126	2164537	7	True				
ANR	2164584	IdentifierDecl	prefix_char		2164537	0					
ANR	2164585	IdentifierDeclType	char		2164537	0					
ANR	2164586	Identifier	prefix_char		2164537	1					
ANR	2164587	IdentifierDeclStatement	double fp_num ;	217:1:7130:7143	2164537	8	True				
ANR	2164588	IdentifierDecl	fp_num		2164537	0					
ANR	2164589	IdentifierDeclType	double		2164537	0					
ANR	2164590	Identifier	fp_num		2164537	1					
ANR	2164591	IdentifierDeclStatement	wide_int i_num = ( wide_int ) 0 ;	218:1:7146:7175	2164537	9	True				
ANR	2164592	IdentifierDecl	i_num = ( wide_int ) 0		2164537	0					
ANR	2164593	IdentifierDeclType	wide_int		2164537	0					
ANR	2164594	Identifier	i_num		2164537	1					
ANR	2164595	AssignmentExpression	i_num = ( wide_int ) 0		2164537	2		=			
ANR	2164596	Identifier	i_num		2164537	0					
ANR	2164597	CastExpression	( wide_int ) 0		2164537	1					
ANR	2164598	CastTarget	wide_int		2164537	0					
ANR	2164599	PrimaryExpression	0		2164537	1					
ANR	2164600	IdentifierDeclStatement	u_wide_int ui_num = ( u_wide_int ) 0 ;	219:1:7178:7212	2164537	10	True				
ANR	2164601	IdentifierDecl	ui_num = ( u_wide_int ) 0		2164537	0					
ANR	2164602	IdentifierDeclType	u_wide_int		2164537	0					
ANR	2164603	Identifier	ui_num		2164537	1					
ANR	2164604	AssignmentExpression	ui_num = ( u_wide_int ) 0		2164537	2		=			
ANR	2164605	Identifier	ui_num		2164537	0					
ANR	2164606	CastExpression	( u_wide_int ) 0		2164537	1					
ANR	2164607	CastTarget	u_wide_int		2164537	0					
ANR	2164608	PrimaryExpression	0		2164537	1					
ANR	2164609	IdentifierDeclStatement	char num_buf [ NUM_BUF_SIZE ] ;	221:1:7216:7242	2164537	11	True				
ANR	2164610	IdentifierDecl	num_buf [ NUM_BUF_SIZE ]		2164537	0					
ANR	2164611	IdentifierDeclType	char [ NUM_BUF_SIZE ]		2164537	0					
ANR	2164612	Identifier	num_buf		2164537	1					
ANR	2164613	Identifier	NUM_BUF_SIZE		2164537	2					
ANR	2164614	IdentifierDeclStatement	char char_buf [ 2 ] ;	222:1:7245:7261	2164537	12	True				
ANR	2164615	IdentifierDecl	char_buf [ 2 ]		2164537	0					
ANR	2164616	IdentifierDeclType	char [ 2 ]		2164537	0					
ANR	2164617	Identifier	char_buf		2164537	1					
ANR	2164618	PrimaryExpression	2		2164537	2					
ANR	2164619	IdentifierDeclStatement	struct lconv lconv ;	226:1:7336:7354	2164537	13	True				
ANR	2164620	IdentifierDecl	lconv		2164537	0					
ANR	2164621	IdentifierDeclType	struct lconv		2164537	0					
ANR	2164622	Identifier	lconv		2164537	1					
ANR	2164623	IdentifierDeclStatement	length_modifier_e modifier ;	235:1:7435:7461	2164537	14	True				
ANR	2164624	IdentifierDecl	modifier		2164537	0					
ANR	2164625	IdentifierDeclType	length_modifier_e		2164537	0					
ANR	2164626	Identifier	modifier		2164537	1					
ANR	2164627	IdentifierDeclStatement	boolean_e alternate_form ;	236:1:7464:7488	2164537	15	True				
ANR	2164628	IdentifierDecl	alternate_form		2164537	0					
ANR	2164629	IdentifierDeclType	boolean_e		2164537	0					
ANR	2164630	Identifier	alternate_form		2164537	1					
ANR	2164631	IdentifierDeclStatement	boolean_e print_sign ;	237:1:7491:7511	2164537	16	True				
ANR	2164632	IdentifierDecl	print_sign		2164537	0					
ANR	2164633	IdentifierDeclType	boolean_e		2164537	0					
ANR	2164634	Identifier	print_sign		2164537	1					
ANR	2164635	IdentifierDeclStatement	boolean_e print_blank ;	238:1:7514:7535	2164537	17	True				
ANR	2164636	IdentifierDecl	print_blank		2164537	0					
ANR	2164637	IdentifierDeclType	boolean_e		2164537	0					
ANR	2164638	Identifier	print_blank		2164537	1					
ANR	2164639	IdentifierDeclStatement	boolean_e adjust_precision ;	239:1:7538:7564	2164537	18	True				
ANR	2164640	IdentifierDecl	adjust_precision		2164537	0					
ANR	2164641	IdentifierDeclType	boolean_e		2164537	0					
ANR	2164642	Identifier	adjust_precision		2164537	1					
ANR	2164643	IdentifierDeclStatement	boolean_e adjust_width ;	240:1:7567:7589	2164537	19	True				
ANR	2164644	IdentifierDecl	adjust_width		2164537	0					
ANR	2164645	IdentifierDeclType	boolean_e		2164537	0					
ANR	2164646	Identifier	adjust_width		2164537	1					
ANR	2164647	IdentifierDeclStatement	bool_int is_negative ;	241:1:7592:7612	2164537	20	True				
ANR	2164648	IdentifierDecl	is_negative		2164537	0					
ANR	2164649	IdentifierDeclType	bool_int		2164537	0					
ANR	2164650	Identifier	is_negative		2164537	1					
ANR	2164651	WhileStatement	while ( * fmt )		2164537	21					
ANR	2164652	Condition	* fmt	243:8:7623:7626	2164537	0	True				
ANR	2164653	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164654	UnaryOperator	*		2164537	0					
ANR	2164655	Identifier	fmt		2164537	1					
ANR	2164656	CompoundStatement		40:14:671:671	2164537	1					
ANR	2164657	IfStatement	if ( * fmt != '%' )		2164537	0					
ANR	2164658	Condition	* fmt != '%'	244:6:7637:7647	2164537	0	True				
ANR	2164659	EqualityExpression	* fmt != '%'		2164537	0		!=			
ANR	2164660	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164661	UnaryOperator	*		2164537	0					
ANR	2164662	Identifier	fmt		2164537	1					
ANR	2164663	PrimaryExpression	'%'		2164537	1					
ANR	2164664	CompoundStatement		41:19:692:692	2164537	1					
ANR	2164665	ExpressionStatement	"INS_CHAR ( xbuf , * fmt )"	245:3:7655:7675	2164537	0	True				
ANR	2164666	CallExpression	"INS_CHAR ( xbuf , * fmt )"		2164537	0					
ANR	2164667	Callee	INS_CHAR		2164537	0					
ANR	2164668	Identifier	INS_CHAR		2164537	0					
ANR	2164669	ArgumentList	xbuf		2164537	1					
ANR	2164670	Argument	xbuf		2164537	0					
ANR	2164671	Identifier	xbuf		2164537	0					
ANR	2164672	Argument	* fmt		2164537	1					
ANR	2164673	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164674	UnaryOperator	*		2164537	0					
ANR	2164675	Identifier	fmt		2164537	1					
ANR	2164676	ElseStatement	else		2164537	0					
ANR	2164677	CompoundStatement		43:9:728:728	2164537	0					
ANR	2164678	ExpressionStatement	adjust = RIGHT	250:3:7736:7750	2164537	0	True				
ANR	2164679	AssignmentExpression	adjust = RIGHT		2164537	0		=			
ANR	2164680	Identifier	adjust		2164537	0					
ANR	2164681	Identifier	RIGHT		2164537	1					
ANR	2164682	ExpressionStatement	alternate_form = print_sign = print_blank = NO	251:3:7755:7801	2164537	1	True				
ANR	2164683	AssignmentExpression	alternate_form = print_sign = print_blank = NO		2164537	0		=			
ANR	2164684	Identifier	alternate_form		2164537	0					
ANR	2164685	AssignmentExpression	print_sign = print_blank = NO		2164537	1		=			
ANR	2164686	Identifier	print_sign		2164537	0					
ANR	2164687	AssignmentExpression	print_blank = NO		2164537	1		=			
ANR	2164688	Identifier	print_blank		2164537	0					
ANR	2164689	Identifier	NO		2164537	1					
ANR	2164690	ExpressionStatement	pad_char = ' '	252:3:7806:7820	2164537	2	True				
ANR	2164691	AssignmentExpression	pad_char = ' '		2164537	0		=			
ANR	2164692	Identifier	pad_char		2164537	0					
ANR	2164693	PrimaryExpression	' '		2164537	1					
ANR	2164694	ExpressionStatement	prefix_char = NUL	253:3:7825:7842	2164537	3	True				
ANR	2164695	AssignmentExpression	prefix_char = NUL		2164537	0		=			
ANR	2164696	Identifier	prefix_char		2164537	0					
ANR	2164697	Identifier	NUL		2164537	1					
ANR	2164698	ExpressionStatement	free_zcopy = 0	254:3:7847:7861	2164537	4	True				
ANR	2164699	AssignmentExpression	free_zcopy = 0		2164537	0		=			
ANR	2164700	Identifier	free_zcopy		2164537	0					
ANR	2164701	PrimaryExpression	0		2164537	1					
ANR	2164702	ExpressionStatement	fmt ++	256:3:7867:7872	2164537	5	True				
ANR	2164703	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2164704	Identifier	fmt		2164537	0					
ANR	2164705	IncDec	++		2164537	1					
ANR	2164706	IfStatement	if ( isascii ( ( int ) * fmt ) && ! islower ( ( int ) * fmt ) )		2164537	6					
ANR	2164707	Condition	isascii ( ( int ) * fmt ) && ! islower ( ( int ) * fmt )	261:7:7953:7993	2164537	0	True				
ANR	2164708	AndExpression	isascii ( ( int ) * fmt ) && ! islower ( ( int ) * fmt )		2164537	0		&&			
ANR	2164709	CallExpression	isascii ( ( int ) * fmt )		2164537	0					
ANR	2164710	Callee	isascii		2164537	0					
ANR	2164711	Identifier	isascii		2164537	0					
ANR	2164712	ArgumentList	( int ) * fmt		2164537	1					
ANR	2164713	Argument	( int ) * fmt		2164537	0					
ANR	2164714	CastExpression	( int ) * fmt		2164537	0					
ANR	2164715	CastTarget	int		2164537	0					
ANR	2164716	UnaryOperationExpression	* fmt		2164537	1					
ANR	2164717	UnaryOperator	*		2164537	0					
ANR	2164718	Identifier	fmt		2164537	1					
ANR	2164719	UnaryOperationExpression	! islower ( ( int ) * fmt )		2164537	1					
ANR	2164720	UnaryOperator	!		2164537	0					
ANR	2164721	CallExpression	islower ( ( int ) * fmt )		2164537	1					
ANR	2164722	Callee	islower		2164537	0					
ANR	2164723	Identifier	islower		2164537	0					
ANR	2164724	ArgumentList	( int ) * fmt		2164537	1					
ANR	2164725	Argument	( int ) * fmt		2164537	0					
ANR	2164726	CastExpression	( int ) * fmt		2164537	0					
ANR	2164727	CastTarget	int		2164537	0					
ANR	2164728	UnaryOperationExpression	* fmt		2164537	1					
ANR	2164729	UnaryOperator	*		2164537	0					
ANR	2164730	Identifier	fmt		2164537	1					
ANR	2164731	CompoundStatement		58:50:1038:1038	2164537	1					
ANR	2164732	ForStatement	for ( ; ; fmt ++ )		2164537	0					
ANR	2164733	PostIncDecOperationExpression	fmt ++	265:12:8064:8068	2164537	0	True				
ANR	2164734	Identifier	fmt		2164537	0					
ANR	2164735	IncDec	++		2164537	1					
ANR	2164736	CompoundStatement		62:19:1113:1113	2164537	1					
ANR	2164737	IfStatement	if ( * fmt == '-' )		2164537	0					
ANR	2164738	Condition	* fmt == '-'	266:9:8082:8092	2164537	0	True				
ANR	2164739	EqualityExpression	* fmt == '-'		2164537	0		==			
ANR	2164740	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164741	UnaryOperator	*		2164537	0					
ANR	2164742	Identifier	fmt		2164537	1					
ANR	2164743	PrimaryExpression	'-'		2164537	1					
ANR	2164744	ExpressionStatement	adjust = LEFT	267:6:8101:8114	2164537	1	True				
ANR	2164745	AssignmentExpression	adjust = LEFT		2164537	0		=			
ANR	2164746	Identifier	adjust		2164537	0					
ANR	2164747	Identifier	LEFT		2164537	1					
ANR	2164748	ElseStatement	else		2164537	0					
ANR	2164749	IfStatement	if ( * fmt == '+' )		2164537	0					
ANR	2164750	Condition	* fmt == '+'	268:14:8130:8140	2164537	0	True				
ANR	2164751	EqualityExpression	* fmt == '+'		2164537	0		==			
ANR	2164752	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164753	UnaryOperator	*		2164537	0					
ANR	2164754	Identifier	fmt		2164537	1					
ANR	2164755	PrimaryExpression	'+'		2164537	1					
ANR	2164756	ExpressionStatement	print_sign = YES	269:6:8149:8165	2164537	1	True				
ANR	2164757	AssignmentExpression	print_sign = YES		2164537	0		=			
ANR	2164758	Identifier	print_sign		2164537	0					
ANR	2164759	Identifier	YES		2164537	1					
ANR	2164760	ElseStatement	else		2164537	0					
ANR	2164761	IfStatement	if ( * fmt == '#' )		2164537	0					
ANR	2164762	Condition	* fmt == '#'	270:14:8181:8191	2164537	0	True				
ANR	2164763	EqualityExpression	* fmt == '#'		2164537	0		==			
ANR	2164764	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164765	UnaryOperator	*		2164537	0					
ANR	2164766	Identifier	fmt		2164537	1					
ANR	2164767	PrimaryExpression	'#'		2164537	1					
ANR	2164768	ExpressionStatement	alternate_form = YES	271:6:8200:8220	2164537	1	True				
ANR	2164769	AssignmentExpression	alternate_form = YES		2164537	0		=			
ANR	2164770	Identifier	alternate_form		2164537	0					
ANR	2164771	Identifier	YES		2164537	1					
ANR	2164772	ElseStatement	else		2164537	0					
ANR	2164773	IfStatement	if ( * fmt == ' ' )		2164537	0					
ANR	2164774	Condition	* fmt == ' '	272:14:8236:8246	2164537	0	True				
ANR	2164775	EqualityExpression	* fmt == ' '		2164537	0		==			
ANR	2164776	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164777	UnaryOperator	*		2164537	0					
ANR	2164778	Identifier	fmt		2164537	1					
ANR	2164779	PrimaryExpression	' '		2164537	1					
ANR	2164780	ExpressionStatement	print_blank = YES	273:6:8255:8272	2164537	1	True				
ANR	2164781	AssignmentExpression	print_blank = YES		2164537	0		=			
ANR	2164782	Identifier	print_blank		2164537	0					
ANR	2164783	Identifier	YES		2164537	1					
ANR	2164784	ElseStatement	else		2164537	0					
ANR	2164785	IfStatement	if ( * fmt == '0' )		2164537	0					
ANR	2164786	Condition	* fmt == '0'	274:14:8288:8298	2164537	0	True				
ANR	2164787	EqualityExpression	* fmt == '0'		2164537	0		==			
ANR	2164788	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164789	UnaryOperator	*		2164537	0					
ANR	2164790	Identifier	fmt		2164537	1					
ANR	2164791	PrimaryExpression	'0'		2164537	1					
ANR	2164792	ExpressionStatement	pad_char = '0'	275:6:8307:8321	2164537	1	True				
ANR	2164793	AssignmentExpression	pad_char = '0'		2164537	0		=			
ANR	2164794	Identifier	pad_char		2164537	0					
ANR	2164795	PrimaryExpression	'0'		2164537	1					
ANR	2164796	ElseStatement	else		2164537	0					
ANR	2164797	BreakStatement	break ;	277:6:8339:8344	2164537	0	True				
ANR	2164798	IfStatement	if ( isdigit ( ( int ) * fmt ) )		2164537	1					
ANR	2164799	Condition	isdigit ( ( int ) * fmt )	283:8:8414:8431	2164537	0	True				
ANR	2164800	CallExpression	isdigit ( ( int ) * fmt )		2164537	0					
ANR	2164801	Callee	isdigit		2164537	0					
ANR	2164802	Identifier	isdigit		2164537	0					
ANR	2164803	ArgumentList	( int ) * fmt		2164537	1					
ANR	2164804	Argument	( int ) * fmt		2164537	0					
ANR	2164805	CastExpression	( int ) * fmt		2164537	0					
ANR	2164806	CastTarget	int		2164537	0					
ANR	2164807	UnaryOperationExpression	* fmt		2164537	1					
ANR	2164808	UnaryOperator	*		2164537	0					
ANR	2164809	Identifier	fmt		2164537	1					
ANR	2164810	CompoundStatement		80:28:1476:1476	2164537	1					
ANR	2164811	ExpressionStatement	"STR_TO_DEC ( fmt , min_width )"	284:5:8441:8467	2164537	0	True				
ANR	2164812	CallExpression	"STR_TO_DEC ( fmt , min_width )"		2164537	0					
ANR	2164813	Callee	STR_TO_DEC		2164537	0					
ANR	2164814	Identifier	STR_TO_DEC		2164537	0					
ANR	2164815	ArgumentList	fmt		2164537	1					
ANR	2164816	Argument	fmt		2164537	0					
ANR	2164817	Identifier	fmt		2164537	0					
ANR	2164818	Argument	min_width		2164537	1					
ANR	2164819	Identifier	min_width		2164537	0					
ANR	2164820	ExpressionStatement	adjust_width = YES	285:5:8474:8492	2164537	1	True				
ANR	2164821	AssignmentExpression	adjust_width = YES		2164537	0		=			
ANR	2164822	Identifier	adjust_width		2164537	0					
ANR	2164823	Identifier	YES		2164537	1					
ANR	2164824	ElseStatement	else		2164537	0					
ANR	2164825	IfStatement	if ( * fmt == '*' )		2164537	0					
ANR	2164826	Condition	* fmt == '*'	286:15:8509:8519	2164537	0	True				
ANR	2164827	EqualityExpression	* fmt == '*'		2164537	0		==			
ANR	2164828	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164829	UnaryOperator	*		2164537	0					
ANR	2164830	Identifier	fmt		2164537	1					
ANR	2164831	PrimaryExpression	'*'		2164537	1					
ANR	2164832	CompoundStatement		83:28:1564:1564	2164537	1					
ANR	2164833	ExpressionStatement	"min_width = va_arg ( ap , int )"	287:5:8529:8556	2164537	0	True				
ANR	2164834	AssignmentExpression	"min_width = va_arg ( ap , int )"		2164537	0		=			
ANR	2164835	Identifier	min_width		2164537	0					
ANR	2164836	CallExpression	"va_arg ( ap , int )"		2164537	1					
ANR	2164837	Callee	va_arg		2164537	0					
ANR	2164838	Identifier	va_arg		2164537	0					
ANR	2164839	ArgumentList	ap		2164537	1					
ANR	2164840	Argument	ap		2164537	0					
ANR	2164841	Identifier	ap		2164537	0					
ANR	2164842	Argument	int		2164537	1					
ANR	2164843	Identifier	int		2164537	0					
ANR	2164844	ExpressionStatement	fmt ++	288:5:8563:8568	2164537	1	True				
ANR	2164845	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2164846	Identifier	fmt		2164537	0					
ANR	2164847	IncDec	++		2164537	1					
ANR	2164848	ExpressionStatement	adjust_width = YES	289:5:8575:8593	2164537	2	True				
ANR	2164849	AssignmentExpression	adjust_width = YES		2164537	0		=			
ANR	2164850	Identifier	adjust_width		2164537	0					
ANR	2164851	Identifier	YES		2164537	1					
ANR	2164852	IfStatement	if ( min_width < 0 )		2164537	3					
ANR	2164853	Condition	min_width < 0	290:9:8604:8616	2164537	0	True				
ANR	2164854	RelationalExpression	min_width < 0		2164537	0		<			
ANR	2164855	Identifier	min_width		2164537	0					
ANR	2164856	PrimaryExpression	0		2164537	1					
ANR	2164857	CompoundStatement		87:24:1661:1661	2164537	1					
ANR	2164858	ExpressionStatement	adjust = LEFT	291:6:8627:8640	2164537	0	True				
ANR	2164859	AssignmentExpression	adjust = LEFT		2164537	0		=			
ANR	2164860	Identifier	adjust		2164537	0					
ANR	2164861	Identifier	LEFT		2164537	1					
ANR	2164862	ExpressionStatement	min_width = - min_width	292:6:8648:8670	2164537	1	True				
ANR	2164863	AssignmentExpression	min_width = - min_width		2164537	0		=			
ANR	2164864	Identifier	min_width		2164537	0					
ANR	2164865	UnaryOperationExpression	- min_width		2164537	1					
ANR	2164866	UnaryOperator	-		2164537	0					
ANR	2164867	Identifier	min_width		2164537	1					
ANR	2164868	ElseStatement	else		2164537	0					
ANR	2164869	ExpressionStatement	adjust_width = NO	295:5:8695:8712	2164537	0	True				
ANR	2164870	AssignmentExpression	adjust_width = NO		2164537	0		=			
ANR	2164871	Identifier	adjust_width		2164537	0					
ANR	2164872	Identifier	NO		2164537	1					
ANR	2164873	IfStatement	if ( * fmt == '.' )		2164537	2					
ANR	2164874	Condition	* fmt == '.'	300:8:8780:8790	2164537	0	True				
ANR	2164875	EqualityExpression	* fmt == '.'		2164537	0		==			
ANR	2164876	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164877	UnaryOperator	*		2164537	0					
ANR	2164878	Identifier	fmt		2164537	1					
ANR	2164879	PrimaryExpression	'.'		2164537	1					
ANR	2164880	CompoundStatement		97:21:1835:1835	2164537	1					
ANR	2164881	ExpressionStatement	adjust_precision = YES	301:5:8800:8822	2164537	0	True				
ANR	2164882	AssignmentExpression	adjust_precision = YES		2164537	0		=			
ANR	2164883	Identifier	adjust_precision		2164537	0					
ANR	2164884	Identifier	YES		2164537	1					
ANR	2164885	ExpressionStatement	fmt ++	302:5:8829:8834	2164537	1	True				
ANR	2164886	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2164887	Identifier	fmt		2164537	0					
ANR	2164888	IncDec	++		2164537	1					
ANR	2164889	IfStatement	if ( isdigit ( ( int ) * fmt ) )		2164537	2					
ANR	2164890	Condition	isdigit ( ( int ) * fmt )	303:9:8845:8862	2164537	0	True				
ANR	2164891	CallExpression	isdigit ( ( int ) * fmt )		2164537	0					
ANR	2164892	Callee	isdigit		2164537	0					
ANR	2164893	Identifier	isdigit		2164537	0					
ANR	2164894	ArgumentList	( int ) * fmt		2164537	1					
ANR	2164895	Argument	( int ) * fmt		2164537	0					
ANR	2164896	CastExpression	( int ) * fmt		2164537	0					
ANR	2164897	CastTarget	int		2164537	0					
ANR	2164898	UnaryOperationExpression	* fmt		2164537	1					
ANR	2164899	UnaryOperator	*		2164537	0					
ANR	2164900	Identifier	fmt		2164537	1					
ANR	2164901	CompoundStatement		100:29:1907:1907	2164537	1					
ANR	2164902	ExpressionStatement	"STR_TO_DEC ( fmt , precision )"	304:6:8873:8899	2164537	0	True				
ANR	2164903	CallExpression	"STR_TO_DEC ( fmt , precision )"		2164537	0					
ANR	2164904	Callee	STR_TO_DEC		2164537	0					
ANR	2164905	Identifier	STR_TO_DEC		2164537	0					
ANR	2164906	ArgumentList	fmt		2164537	1					
ANR	2164907	Argument	fmt		2164537	0					
ANR	2164908	Identifier	fmt		2164537	0					
ANR	2164909	Argument	precision		2164537	1					
ANR	2164910	Identifier	precision		2164537	0					
ANR	2164911	ElseStatement	else		2164537	0					
ANR	2164912	IfStatement	if ( * fmt == '*' )		2164537	0					
ANR	2164913	Condition	* fmt == '*'	305:16:8917:8927	2164537	0	True				
ANR	2164914	EqualityExpression	* fmt == '*'		2164537	0		==			
ANR	2164915	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164916	UnaryOperator	*		2164537	0					
ANR	2164917	Identifier	fmt		2164537	1					
ANR	2164918	PrimaryExpression	'*'		2164537	1					
ANR	2164919	CompoundStatement		102:29:1972:1972	2164537	1					
ANR	2164920	ExpressionStatement	"precision = va_arg ( ap , int )"	306:6:8938:8965	2164537	0	True				
ANR	2164921	AssignmentExpression	"precision = va_arg ( ap , int )"		2164537	0		=			
ANR	2164922	Identifier	precision		2164537	0					
ANR	2164923	CallExpression	"va_arg ( ap , int )"		2164537	1					
ANR	2164924	Callee	va_arg		2164537	0					
ANR	2164925	Identifier	va_arg		2164537	0					
ANR	2164926	ArgumentList	ap		2164537	1					
ANR	2164927	Argument	ap		2164537	0					
ANR	2164928	Identifier	ap		2164537	0					
ANR	2164929	Argument	int		2164537	1					
ANR	2164930	Identifier	int		2164537	0					
ANR	2164931	ExpressionStatement	fmt ++	307:6:8973:8978	2164537	1	True				
ANR	2164932	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2164933	Identifier	fmt		2164537	0					
ANR	2164934	IncDec	++		2164537	1					
ANR	2164935	IfStatement	if ( precision < 0 )		2164537	2					
ANR	2164936	Condition	precision < 0	308:10:8990:9002	2164537	0	True				
ANR	2164937	RelationalExpression	precision < 0		2164537	0		<			
ANR	2164938	Identifier	precision		2164537	0					
ANR	2164939	PrimaryExpression	0		2164537	1					
ANR	2164940	ExpressionStatement	precision = 0	309:7:9012:9025	2164537	1	True				
ANR	2164941	AssignmentExpression	precision = 0		2164537	0		=			
ANR	2164942	Identifier	precision		2164537	0					
ANR	2164943	PrimaryExpression	0		2164537	1					
ANR	2164944	ElseStatement	else		2164537	0					
ANR	2164945	ExpressionStatement	precision = 0	311:6:9045:9058	2164537	0	True				
ANR	2164946	AssignmentExpression	precision = 0		2164537	0		=			
ANR	2164947	Identifier	precision		2164537	0					
ANR	2164948	PrimaryExpression	0		2164537	1					
ANR	2164949	IfStatement	if ( precision > FORMAT_CONV_MAX_PRECISION )		2164537	3					
ANR	2164950	Condition	precision > FORMAT_CONV_MAX_PRECISION	313:9:9075:9111	2164537	0	True				
ANR	2164951	RelationalExpression	precision > FORMAT_CONV_MAX_PRECISION		2164537	0		>			
ANR	2164952	Identifier	precision		2164537	0					
ANR	2164953	Identifier	FORMAT_CONV_MAX_PRECISION		2164537	1					
ANR	2164954	CompoundStatement		110:48:2156:2156	2164537	1					
ANR	2164955	ExpressionStatement	precision = FORMAT_CONV_MAX_PRECISION	314:6:9122:9159	2164537	0	True				
ANR	2164956	AssignmentExpression	precision = FORMAT_CONV_MAX_PRECISION		2164537	0		=			
ANR	2164957	Identifier	precision		2164537	0					
ANR	2164958	Identifier	FORMAT_CONV_MAX_PRECISION		2164537	1					
ANR	2164959	ElseStatement	else		2164537	0					
ANR	2164960	ExpressionStatement	adjust_precision = NO	317:5:9184:9205	2164537	0	True				
ANR	2164961	AssignmentExpression	adjust_precision = NO		2164537	0		=			
ANR	2164962	Identifier	adjust_precision		2164537	0					
ANR	2164963	Identifier	NO		2164537	1					
ANR	2164964	ElseStatement	else		2164537	0					
ANR	2164965	ExpressionStatement	adjust_precision = adjust_width = NO	319:4:9221:9257	2164537	0	True				
ANR	2164966	AssignmentExpression	adjust_precision = adjust_width = NO		2164537	0		=			
ANR	2164967	Identifier	adjust_precision		2164537	0					
ANR	2164968	AssignmentExpression	adjust_width = NO		2164537	1		=			
ANR	2164969	Identifier	adjust_width		2164537	0					
ANR	2164970	Identifier	NO		2164537	1					
ANR	2164971	SwitchStatement	switch ( * fmt )		2164537	7					
ANR	2164972	Condition	* fmt	324:11:9305:9308	2164537	0	True				
ANR	2164973	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164974	UnaryOperator	*		2164537	0					
ANR	2164975	Identifier	fmt		2164537	1					
ANR	2164976	CompoundStatement		121:17:2353:2353	2164537	1					
ANR	2164977	Label	case 'L' :	325:4:9317:9325	2164537	0	True				
ANR	2164978	ExpressionStatement	fmt ++	326:5:9332:9337	2164537	1	True				
ANR	2164979	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2164980	Identifier	fmt		2164537	0					
ANR	2164981	IncDec	++		2164537	1					
ANR	2164982	ExpressionStatement	modifier = LM_LONG_DOUBLE	327:5:9344:9369	2164537	2	True				
ANR	2164983	AssignmentExpression	modifier = LM_LONG_DOUBLE		2164537	0		=			
ANR	2164984	Identifier	modifier		2164537	0					
ANR	2164985	Identifier	LM_LONG_DOUBLE		2164537	1					
ANR	2164986	BreakStatement	break ;	328:5:9376:9381	2164537	3	True				
ANR	2164987	Label	case 'I' :	329:4:9387:9395	2164537	4	True				
ANR	2164988	ExpressionStatement	fmt ++	330:5:9402:9407	2164537	5	True				
ANR	2164989	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2164990	Identifier	fmt		2164537	0					
ANR	2164991	IncDec	++		2164537	1					
ANR	2164992	IfStatement	if ( * fmt == '6' && * ( fmt + 1 ) == '4' )		2164537	6					
ANR	2164993	Condition	* fmt == '6' && * ( fmt + 1 ) == '4'	332:9:9439:9468	2164537	0	True				
ANR	2164994	AndExpression	* fmt == '6' && * ( fmt + 1 ) == '4'		2164537	0		&&			
ANR	2164995	EqualityExpression	* fmt == '6'		2164537	0		==			
ANR	2164996	UnaryOperationExpression	* fmt		2164537	0					
ANR	2164997	UnaryOperator	*		2164537	0					
ANR	2164998	Identifier	fmt		2164537	1					
ANR	2164999	PrimaryExpression	'6'		2164537	1					
ANR	2165000	EqualityExpression	* ( fmt + 1 ) == '4'		2164537	1		==			
ANR	2165001	UnaryOperationExpression	* ( fmt + 1 )		2164537	0					
ANR	2165002	UnaryOperator	*		2164537	0					
ANR	2165003	AdditiveExpression	fmt + 1		2164537	1		+			
ANR	2165004	Identifier	fmt		2164537	0					
ANR	2165005	PrimaryExpression	1		2164537	1					
ANR	2165006	PrimaryExpression	'4'		2164537	1					
ANR	2165007	CompoundStatement		129:41:2513:2513	2164537	1					
ANR	2165008	ExpressionStatement	fmt += 2	333:6:9479:9487	2164537	0	True				
ANR	2165009	AssignmentExpression	fmt += 2		2164537	0		+=			
ANR	2165010	Identifier	fmt		2164537	0					
ANR	2165011	PrimaryExpression	2		2164537	1					
ANR	2165012	ExpressionStatement	modifier = LM_LONG_LONG	334:6:9495:9518	2164537	1	True				
ANR	2165013	AssignmentExpression	modifier = LM_LONG_LONG		2164537	0		=			
ANR	2165014	Identifier	modifier		2164537	0					
ANR	2165015	Identifier	LM_LONG_LONG		2164537	1					
ANR	2165016	ElseStatement	else		2164537	0					
ANR	2165017	IfStatement	if ( * fmt == '3' && * ( fmt + 1 ) == '2' )		2164537	0					
ANR	2165018	Condition	* fmt == '3' && * ( fmt + 1 ) == '2'	337:10:9549:9578	2164537	0	True				
ANR	2165019	AndExpression	* fmt == '3' && * ( fmt + 1 ) == '2'		2164537	0		&&			
ANR	2165020	EqualityExpression	* fmt == '3'		2164537	0		==			
ANR	2165021	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165022	UnaryOperator	*		2164537	0					
ANR	2165023	Identifier	fmt		2164537	1					
ANR	2165024	PrimaryExpression	'3'		2164537	1					
ANR	2165025	EqualityExpression	* ( fmt + 1 ) == '2'		2164537	1		==			
ANR	2165026	UnaryOperationExpression	* ( fmt + 1 )		2164537	0					
ANR	2165027	UnaryOperator	*		2164537	0					
ANR	2165028	AdditiveExpression	fmt + 1		2164537	1		+			
ANR	2165029	Identifier	fmt		2164537	0					
ANR	2165030	PrimaryExpression	1		2164537	1					
ANR	2165031	PrimaryExpression	'2'		2164537	1					
ANR	2165032	CompoundStatement		134:42:2623:2623	2164537	1					
ANR	2165033	ExpressionStatement	fmt += 2	338:7:9590:9598	2164537	0	True				
ANR	2165034	AssignmentExpression	fmt += 2		2164537	0		+=			
ANR	2165035	Identifier	fmt		2164537	0					
ANR	2165036	PrimaryExpression	2		2164537	1					
ANR	2165037	ExpressionStatement	modifier = LM_LONG	339:7:9607:9625	2164537	1	True				
ANR	2165038	AssignmentExpression	modifier = LM_LONG		2164537	0		=			
ANR	2165039	Identifier	modifier		2164537	0					
ANR	2165040	Identifier	LM_LONG		2164537	1					
ANR	2165041	ElseStatement	else		2164537	0					
ANR	2165042	CompoundStatement		137:13:2682:2682	2164537	0					
ANR	2165043	ExpressionStatement	modifier = LM_LONG_LONG	342:7:9663:9686	2164537	0	True				
ANR	2165044	AssignmentExpression	modifier = LM_LONG_LONG		2164537	0		=			
ANR	2165045	Identifier	modifier		2164537	0					
ANR	2165046	Identifier	LM_LONG_LONG		2164537	1					
ANR	2165047	BreakStatement	break ;	347:5:9741:9746	2164537	7	True				
ANR	2165048	Label	case 'l' :	348:4:9752:9760	2164537	8	True				
ANR	2165049	ExpressionStatement	fmt ++	349:5:9767:9772	2164537	9	True				
ANR	2165050	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2165051	Identifier	fmt		2164537	0					
ANR	2165052	IncDec	++		2164537	1					
ANR	2165053	IfStatement	if ( * fmt == 'l' )		2164537	10					
ANR	2165054	Condition	* fmt == 'l'	351:9:9804:9814	2164537	0	True				
ANR	2165055	EqualityExpression	* fmt == 'l'		2164537	0		==			
ANR	2165056	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165057	UnaryOperator	*		2164537	0					
ANR	2165058	Identifier	fmt		2164537	1					
ANR	2165059	PrimaryExpression	'l'		2164537	1					
ANR	2165060	CompoundStatement		148:22:2859:2859	2164537	1					
ANR	2165061	ExpressionStatement	fmt ++	352:6:9825:9830	2164537	0	True				
ANR	2165062	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2165063	Identifier	fmt		2164537	0					
ANR	2165064	IncDec	++		2164537	1					
ANR	2165065	ExpressionStatement	modifier = LM_LONG_LONG	353:6:9838:9861	2164537	1	True				
ANR	2165066	AssignmentExpression	modifier = LM_LONG_LONG		2164537	0		=			
ANR	2165067	Identifier	modifier		2164537	0					
ANR	2165068	Identifier	LM_LONG_LONG		2164537	1					
ANR	2165069	ElseStatement	else		2164537	0					
ANR	2165070	ExpressionStatement	modifier = LM_LONG	356:6:9888:9906	2164537	0	True				
ANR	2165071	AssignmentExpression	modifier = LM_LONG		2164537	0		=			
ANR	2165072	Identifier	modifier		2164537	0					
ANR	2165073	Identifier	LM_LONG		2164537	1					
ANR	2165074	BreakStatement	break ;	357:5:9913:9918	2164537	11	True				
ANR	2165075	Label	case 'z' :	358:4:9924:9932	2164537	12	True				
ANR	2165076	ExpressionStatement	fmt ++	359:5:9939:9944	2164537	13	True				
ANR	2165077	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2165078	Identifier	fmt		2164537	0					
ANR	2165079	IncDec	++		2164537	1					
ANR	2165080	ExpressionStatement	modifier = LM_SIZE_T	360:5:9951:9971	2164537	14	True				
ANR	2165081	AssignmentExpression	modifier = LM_SIZE_T		2164537	0		=			
ANR	2165082	Identifier	modifier		2164537	0					
ANR	2165083	Identifier	LM_SIZE_T		2164537	1					
ANR	2165084	BreakStatement	break ;	361:5:9978:9983	2164537	15	True				
ANR	2165085	Label	case 'j' :	362:4:9989:9997	2164537	16	True				
ANR	2165086	ExpressionStatement	fmt ++	363:5:10004:10009	2164537	17	True				
ANR	2165087	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2165088	Identifier	fmt		2164537	0					
ANR	2165089	IncDec	++		2164537	1					
ANR	2165090	ExpressionStatement	modifier = LM_INTMAX_T	365:5:10036:10058	2164537	18	True				
ANR	2165091	AssignmentExpression	modifier = LM_INTMAX_T		2164537	0		=			
ANR	2165092	Identifier	modifier		2164537	0					
ANR	2165093	Identifier	LM_INTMAX_T		2164537	1					
ANR	2165094	BreakStatement	break ;	369:5:10105:10110	2164537	19	True				
ANR	2165095	Label	case 't' :	370:4:10116:10124	2164537	20	True				
ANR	2165096	ExpressionStatement	fmt ++	371:5:10131:10136	2164537	21	True				
ANR	2165097	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2165098	Identifier	fmt		2164537	0					
ANR	2165099	IncDec	++		2164537	1					
ANR	2165100	ExpressionStatement	modifier = LM_PTRDIFF_T	373:5:10164:10187	2164537	22	True				
ANR	2165101	AssignmentExpression	modifier = LM_PTRDIFF_T		2164537	0		=			
ANR	2165102	Identifier	modifier		2164537	0					
ANR	2165103	Identifier	LM_PTRDIFF_T		2164537	1					
ANR	2165104	BreakStatement	break ;	377:5:10234:10239	2164537	23	True				
ANR	2165105	Label	case 'h' :	378:4:10245:10253	2164537	24	True				
ANR	2165106	ExpressionStatement	fmt ++	379:5:10260:10265	2164537	25	True				
ANR	2165107	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2165108	Identifier	fmt		2164537	0					
ANR	2165109	IncDec	++		2164537	1					
ANR	2165110	IfStatement	if ( * fmt == 'h' )		2164537	26					
ANR	2165111	Condition	* fmt == 'h'	380:9:10276:10286	2164537	0	True				
ANR	2165112	EqualityExpression	* fmt == 'h'		2164537	0		==			
ANR	2165113	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165114	UnaryOperator	*		2164537	0					
ANR	2165115	Identifier	fmt		2164537	1					
ANR	2165116	PrimaryExpression	'h'		2164537	1					
ANR	2165117	CompoundStatement		177:22:3331:3331	2164537	1					
ANR	2165118	ExpressionStatement	fmt ++	381:6:10297:10302	2164537	0	True				
ANR	2165119	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2165120	Identifier	fmt		2164537	0					
ANR	2165121	IncDec	++		2164537	1					
ANR	2165122	Label	default :	384:4:10365:10372	2164537	27	True				
ANR	2165123	Identifier	default		2164537	0					
ANR	2165124	ExpressionStatement	modifier = LM_STD	385:5:10379:10396	2164537	28	True				
ANR	2165125	AssignmentExpression	modifier = LM_STD		2164537	0		=			
ANR	2165126	Identifier	modifier		2164537	0					
ANR	2165127	Identifier	LM_STD		2164537	1					
ANR	2165128	BreakStatement	break ;	386:5:10403:10408	2164537	29	True				
ANR	2165129	SwitchStatement	switch ( * fmt )		2164537	8					
ANR	2165130	Condition	* fmt	400:11:10874:10877	2164537	0	True				
ANR	2165131	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165132	UnaryOperator	*		2164537	0					
ANR	2165133	Identifier	fmt		2164537	1					
ANR	2165134	CompoundStatement		197:17:3922:3922	2164537	1					
ANR	2165135	Label	case 'Z' :	401:4:10886:10894	2164537	0	True				
ANR	2165136	Statement	zvp	402:5:10901:10903	2164537	1	True				
ANR	2165137	Statement	=	402:9:10905:10905	2164537	2	True				
ANR	2165138	Statement	(	402:11:10907:10907	2164537	3	True				
ANR	2165139	Statement	zval	402:12:10908:10911	2164537	4	True				
ANR	2165140	Statement	*	402:16:10912:10912	2164537	5	True				
ANR	2165141	Statement	)	402:17:10913:10913	2164537	6	True				
ANR	2165142	Statement	va_arg	402:19:10915:10920	2164537	7	True				
ANR	2165143	Statement	(	402:25:10921:10921	2164537	8	True				
ANR	2165144	Statement	ap	402:26:10922:10923	2164537	9	True				
ANR	2165145	Statement	","	402:28:10924:10924	2164537	10	True				
ANR	2165146	Statement	zval	402:30:10926:10929	2164537	11	True				
ANR	2165147	Statement	*	402:34:10930:10930	2164537	12	True				
ANR	2165148	Statement	)	402:35:10931:10931	2164537	13	True				
ANR	2165149	ExpressionStatement		402:36:10932:10932	2164537	14	True				
ANR	2165150	ExpressionStatement	"zend_make_printable_zval ( zvp , & zcopy , & free_zcopy )"	403:5:10939:10989	2164537	15	True				
ANR	2165151	CallExpression	"zend_make_printable_zval ( zvp , & zcopy , & free_zcopy )"		2164537	0					
ANR	2165152	Callee	zend_make_printable_zval		2164537	0					
ANR	2165153	Identifier	zend_make_printable_zval		2164537	0					
ANR	2165154	ArgumentList	zvp		2164537	1					
ANR	2165155	Argument	zvp		2164537	0					
ANR	2165156	Identifier	zvp		2164537	0					
ANR	2165157	Argument	& zcopy		2164537	1					
ANR	2165158	UnaryOperationExpression	& zcopy		2164537	0					
ANR	2165159	UnaryOperator	&		2164537	0					
ANR	2165160	Identifier	zcopy		2164537	1					
ANR	2165161	Argument	& free_zcopy		2164537	2					
ANR	2165162	UnaryOperationExpression	& free_zcopy		2164537	0					
ANR	2165163	UnaryOperator	&		2164537	0					
ANR	2165164	Identifier	free_zcopy		2164537	1					
ANR	2165165	IfStatement	if ( free_zcopy )		2164537	16					
ANR	2165166	Condition	free_zcopy	404:9:11000:11009	2164537	0	True				
ANR	2165167	Identifier	free_zcopy		2164537	0					
ANR	2165168	CompoundStatement		201:21:4054:4054	2164537	1					
ANR	2165169	ExpressionStatement	zvp = & zcopy	405:6:11020:11032	2164537	0	True				
ANR	2165170	AssignmentExpression	zvp = & zcopy		2164537	0		=			
ANR	2165171	Identifier	zvp		2164537	0					
ANR	2165172	UnaryOperationExpression	& zcopy		2164537	1					
ANR	2165173	UnaryOperator	&		2164537	0					
ANR	2165174	Identifier	zcopy		2164537	1					
ANR	2165175	ExpressionStatement	s_len = Z_STRLEN_P ( zvp )	407:5:11046:11069	2164537	17	True				
ANR	2165176	AssignmentExpression	s_len = Z_STRLEN_P ( zvp )		2164537	0		=			
ANR	2165177	Identifier	s_len		2164537	0					
ANR	2165178	CallExpression	Z_STRLEN_P ( zvp )		2164537	1					
ANR	2165179	Callee	Z_STRLEN_P		2164537	0					
ANR	2165180	Identifier	Z_STRLEN_P		2164537	0					
ANR	2165181	ArgumentList	zvp		2164537	1					
ANR	2165182	Argument	zvp		2164537	0					
ANR	2165183	Identifier	zvp		2164537	0					
ANR	2165184	ExpressionStatement	s = Z_STRVAL_P ( zvp )	408:5:11076:11095	2164537	18	True				
ANR	2165185	AssignmentExpression	s = Z_STRVAL_P ( zvp )		2164537	0		=			
ANR	2165186	Identifier	s		2164537	0					
ANR	2165187	CallExpression	Z_STRVAL_P ( zvp )		2164537	1					
ANR	2165188	Callee	Z_STRVAL_P		2164537	0					
ANR	2165189	Identifier	Z_STRVAL_P		2164537	0					
ANR	2165190	ArgumentList	zvp		2164537	1					
ANR	2165191	Argument	zvp		2164537	0					
ANR	2165192	Identifier	zvp		2164537	0					
ANR	2165193	IfStatement	if ( adjust_precision && precision < s_len )		2164537	19					
ANR	2165194	Condition	adjust_precision && precision < s_len	409:9:11106:11142	2164537	0	True				
ANR	2165195	AndExpression	adjust_precision && precision < s_len		2164537	0		&&			
ANR	2165196	Identifier	adjust_precision		2164537	0					
ANR	2165197	RelationalExpression	precision < s_len		2164537	1		<			
ANR	2165198	Identifier	precision		2164537	0					
ANR	2165199	Identifier	s_len		2164537	1					
ANR	2165200	CompoundStatement		206:48:4187:4187	2164537	1					
ANR	2165201	ExpressionStatement	s_len = precision	410:6:11153:11170	2164537	0	True				
ANR	2165202	AssignmentExpression	s_len = precision		2164537	0		=			
ANR	2165203	Identifier	s_len		2164537	0					
ANR	2165204	Identifier	precision		2164537	1					
ANR	2165205	BreakStatement	break ;	412:5:11184:11189	2164537	20	True				
ANR	2165206	Label	case 'u' :	413:4:11195:11203	2164537	21	True				
ANR	2165207	SwitchStatement	switch ( modifier )		2164537	22					
ANR	2165208	Condition	modifier	414:12:11217:11224	2164537	0	True				
ANR	2165209	Identifier	modifier		2164537	0					
ANR	2165210	CompoundStatement		211:22:4269:4269	2164537	1					
ANR	2165211	Label	default :	415:6:11235:11242	2164537	0	True				
ANR	2165212	Identifier	default		2164537	0					
ANR	2165213	Statement	i_num	416:7:11251:11255	2164537	1	True				
ANR	2165214	Statement	=	416:13:11257:11257	2164537	2	True				
ANR	2165215	Statement	(	416:15:11259:11259	2164537	3	True				
ANR	2165216	Statement	wide_int	416:16:11260:11267	2164537	4	True				
ANR	2165217	Statement	)	416:24:11268:11268	2164537	5	True				
ANR	2165218	Statement	va_arg	416:26:11270:11275	2164537	6	True				
ANR	2165219	Statement	(	416:32:11276:11276	2164537	7	True				
ANR	2165220	Statement	ap	416:33:11277:11278	2164537	8	True				
ANR	2165221	Statement	","	416:35:11279:11279	2164537	9	True				
ANR	2165222	Statement	unsigned	416:37:11281:11288	2164537	10	True				
ANR	2165223	Statement	int	416:46:11290:11292	2164537	11	True				
ANR	2165224	Statement	)	416:49:11293:11293	2164537	12	True				
ANR	2165225	ExpressionStatement		416:50:11294:11294	2164537	13	True				
ANR	2165226	BreakStatement	break ;	417:7:11303:11308	2164537	14	True				
ANR	2165227	Label	case LM_LONG_DOUBLE :	418:6:11316:11335	2164537	15	True				
ANR	2165228	Identifier	LM_LONG_DOUBLE		2164537	0					
ANR	2165229	GotoStatement	goto fmt_error ;	419:7:11344:11358	2164537	16	True				
ANR	2165230	Identifier	fmt_error		2164537	0					
ANR	2165231	Label	case LM_LONG :	420:6:11366:11378	2164537	17	True				
ANR	2165232	Identifier	LM_LONG		2164537	0					
ANR	2165233	Statement	i_num	421:7:11387:11391	2164537	18	True				
ANR	2165234	Statement	=	421:13:11393:11393	2164537	19	True				
ANR	2165235	Statement	(	421:15:11395:11395	2164537	20	True				
ANR	2165236	Statement	wide_int	421:16:11396:11403	2164537	21	True				
ANR	2165237	Statement	)	421:24:11404:11404	2164537	22	True				
ANR	2165238	Statement	va_arg	421:26:11406:11411	2164537	23	True				
ANR	2165239	Statement	(	421:32:11412:11412	2164537	24	True				
ANR	2165240	Statement	ap	421:33:11413:11414	2164537	25	True				
ANR	2165241	Statement	","	421:35:11415:11415	2164537	26	True				
ANR	2165242	Statement	unsigned	421:37:11417:11424	2164537	27	True				
ANR	2165243	Statement	long	421:46:11426:11429	2164537	28	True				
ANR	2165244	Statement	int	421:51:11431:11433	2164537	29	True				
ANR	2165245	Statement	)	421:54:11434:11434	2164537	30	True				
ANR	2165246	ExpressionStatement		421:55:11435:11435	2164537	31	True				
ANR	2165247	BreakStatement	break ;	422:7:11444:11449	2164537	32	True				
ANR	2165248	Label	case LM_SIZE_T :	423:6:11457:11471	2164537	33	True				
ANR	2165249	Identifier	LM_SIZE_T		2164537	0					
ANR	2165250	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , size_t )"	424:7:11480:11517	2164537	34	True				
ANR	2165251	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , size_t )"		2164537	0		=			
ANR	2165252	Identifier	i_num		2164537	0					
ANR	2165253	CastExpression	"( wide_int ) va_arg ( ap , size_t )"		2164537	1					
ANR	2165254	CastTarget	wide_int		2164537	0					
ANR	2165255	CallExpression	"va_arg ( ap , size_t )"		2164537	1					
ANR	2165256	Callee	va_arg		2164537	0					
ANR	2165257	Identifier	va_arg		2164537	0					
ANR	2165258	ArgumentList	ap		2164537	1					
ANR	2165259	Argument	ap		2164537	0					
ANR	2165260	Identifier	ap		2164537	0					
ANR	2165261	Argument	size_t		2164537	1					
ANR	2165262	Identifier	size_t		2164537	0					
ANR	2165263	BreakStatement	break ;	425:7:11526:11531	2164537	35	True				
ANR	2165264	Label	case LM_LONG_LONG :	427:6:11560:11577	2164537	36	True				
ANR	2165265	Identifier	LM_LONG_LONG		2164537	0					
ANR	2165266	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , u_wide_int )"	428:7:11586:11627	2164537	37	True				
ANR	2165267	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , u_wide_int )"		2164537	0		=			
ANR	2165268	Identifier	i_num		2164537	0					
ANR	2165269	CastExpression	"( wide_int ) va_arg ( ap , u_wide_int )"		2164537	1					
ANR	2165270	CastTarget	wide_int		2164537	0					
ANR	2165271	CallExpression	"va_arg ( ap , u_wide_int )"		2164537	1					
ANR	2165272	Callee	va_arg		2164537	0					
ANR	2165273	Identifier	va_arg		2164537	0					
ANR	2165274	ArgumentList	ap		2164537	1					
ANR	2165275	Argument	ap		2164537	0					
ANR	2165276	Identifier	ap		2164537	0					
ANR	2165277	Argument	u_wide_int		2164537	1					
ANR	2165278	Identifier	u_wide_int		2164537	0					
ANR	2165279	BreakStatement	break ;	429:7:11636:11641	2164537	38	True				
ANR	2165280	Label	case LM_INTMAX_T :	432:6:11676:11692	2164537	39	True				
ANR	2165281	Identifier	LM_INTMAX_T		2164537	0					
ANR	2165282	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , uintmax_t )"	433:7:11701:11741	2164537	40	True				
ANR	2165283	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , uintmax_t )"		2164537	0		=			
ANR	2165284	Identifier	i_num		2164537	0					
ANR	2165285	CastExpression	"( wide_int ) va_arg ( ap , uintmax_t )"		2164537	1					
ANR	2165286	CastTarget	wide_int		2164537	0					
ANR	2165287	CallExpression	"va_arg ( ap , uintmax_t )"		2164537	1					
ANR	2165288	Callee	va_arg		2164537	0					
ANR	2165289	Identifier	va_arg		2164537	0					
ANR	2165290	ArgumentList	ap		2164537	1					
ANR	2165291	Argument	ap		2164537	0					
ANR	2165292	Identifier	ap		2164537	0					
ANR	2165293	Argument	uintmax_t		2164537	1					
ANR	2165294	Identifier	uintmax_t		2164537	0					
ANR	2165295	BreakStatement	break ;	434:7:11750:11755	2164537	41	True				
ANR	2165296	Label	case LM_PTRDIFF_T :	437:6:11791:11808	2164537	42	True				
ANR	2165297	Identifier	LM_PTRDIFF_T		2164537	0					
ANR	2165298	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"	438:7:11817:11857	2164537	43	True				
ANR	2165299	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	0		=			
ANR	2165300	Identifier	i_num		2164537	0					
ANR	2165301	CastExpression	"( wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165302	CastTarget	wide_int		2164537	0					
ANR	2165303	CallExpression	"va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165304	Callee	va_arg		2164537	0					
ANR	2165305	Identifier	va_arg		2164537	0					
ANR	2165306	ArgumentList	ap		2164537	1					
ANR	2165307	Argument	ap		2164537	0					
ANR	2165308	Identifier	ap		2164537	0					
ANR	2165309	Argument	ptrdiff_t		2164537	1					
ANR	2165310	Identifier	ptrdiff_t		2164537	0					
ANR	2165311	BreakStatement	break ;	439:7:11866:11871	2164537	44	True				
ANR	2165312	Label	case 'd' :	446:4:11996:12004	2164537	23	True				
ANR	2165313	Label	case 'i' :	447:4:12010:12018	2164537	24	True				
ANR	2165314	IfStatement	if ( ( * fmt ) != 'u' )		2164537	25					
ANR	2165315	Condition	( * fmt ) != 'u'	451:9:12089:12101	2164537	0	True				
ANR	2165316	EqualityExpression	( * fmt ) != 'u'		2164537	0		!=			
ANR	2165317	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165318	UnaryOperator	*		2164537	0					
ANR	2165319	Identifier	fmt		2164537	1					
ANR	2165320	PrimaryExpression	'u'		2164537	1					
ANR	2165321	CompoundStatement		248:24:5146:5146	2164537	1					
ANR	2165322	SwitchStatement	switch ( modifier )		2164537	0					
ANR	2165323	Condition	modifier	452:13:12119:12126	2164537	0	True				
ANR	2165324	Identifier	modifier		2164537	0					
ANR	2165325	CompoundStatement		249:23:5171:5171	2164537	1					
ANR	2165326	Label	default :	453:7:12138:12145	2164537	0	True				
ANR	2165327	Identifier	default		2164537	0					
ANR	2165328	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , int )"	454:8:12155:12189	2164537	1	True				
ANR	2165329	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , int )"		2164537	0		=			
ANR	2165330	Identifier	i_num		2164537	0					
ANR	2165331	CastExpression	"( wide_int ) va_arg ( ap , int )"		2164537	1					
ANR	2165332	CastTarget	wide_int		2164537	0					
ANR	2165333	CallExpression	"va_arg ( ap , int )"		2164537	1					
ANR	2165334	Callee	va_arg		2164537	0					
ANR	2165335	Identifier	va_arg		2164537	0					
ANR	2165336	ArgumentList	ap		2164537	1					
ANR	2165337	Argument	ap		2164537	0					
ANR	2165338	Identifier	ap		2164537	0					
ANR	2165339	Argument	int		2164537	1					
ANR	2165340	Identifier	int		2164537	0					
ANR	2165341	BreakStatement	break ;	455:8:12199:12204	2164537	2	True				
ANR	2165342	Label	case LM_LONG_DOUBLE :	456:7:12213:12232	2164537	3	True				
ANR	2165343	Identifier	LM_LONG_DOUBLE		2164537	0					
ANR	2165344	GotoStatement	goto fmt_error ;	457:8:12242:12256	2164537	4	True				
ANR	2165345	Identifier	fmt_error		2164537	0					
ANR	2165346	Label	case LM_LONG :	458:7:12265:12277	2164537	5	True				
ANR	2165347	Identifier	LM_LONG		2164537	0					
ANR	2165348	Statement	i_num	459:8:12287:12291	2164537	6	True				
ANR	2165349	Statement	=	459:14:12293:12293	2164537	7	True				
ANR	2165350	Statement	(	459:16:12295:12295	2164537	8	True				
ANR	2165351	Statement	wide_int	459:17:12296:12303	2164537	9	True				
ANR	2165352	Statement	)	459:25:12304:12304	2164537	10	True				
ANR	2165353	Statement	va_arg	459:27:12306:12311	2164537	11	True				
ANR	2165354	Statement	(	459:33:12312:12312	2164537	12	True				
ANR	2165355	Statement	ap	459:34:12313:12314	2164537	13	True				
ANR	2165356	Statement	","	459:36:12315:12315	2164537	14	True				
ANR	2165357	Statement	long	459:38:12317:12320	2164537	15	True				
ANR	2165358	Statement	int	459:43:12322:12324	2164537	16	True				
ANR	2165359	Statement	)	459:46:12325:12325	2164537	17	True				
ANR	2165360	ExpressionStatement		459:47:12326:12326	2164537	18	True				
ANR	2165361	BreakStatement	break ;	460:8:12336:12341	2164537	19	True				
ANR	2165362	Label	case LM_SIZE_T :	461:7:12350:12364	2164537	20	True				
ANR	2165363	Identifier	LM_SIZE_T		2164537	0					
ANR	2165364	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , ssize_t )"	463:8:12393:12431	2164537	21	True				
ANR	2165365	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , ssize_t )"		2164537	0		=			
ANR	2165366	Identifier	i_num		2164537	0					
ANR	2165367	CastExpression	"( wide_int ) va_arg ( ap , ssize_t )"		2164537	1					
ANR	2165368	CastTarget	wide_int		2164537	0					
ANR	2165369	CallExpression	"va_arg ( ap , ssize_t )"		2164537	1					
ANR	2165370	Callee	va_arg		2164537	0					
ANR	2165371	Identifier	va_arg		2164537	0					
ANR	2165372	ArgumentList	ap		2164537	1					
ANR	2165373	Argument	ap		2164537	0					
ANR	2165374	Identifier	ap		2164537	0					
ANR	2165375	Argument	ssize_t		2164537	1					
ANR	2165376	Identifier	ssize_t		2164537	0					
ANR	2165377	BreakStatement	break ;	467:8:12501:12506	2164537	22	True				
ANR	2165378	Label	case LM_LONG_LONG :	469:7:12536:12553	2164537	23	True				
ANR	2165379	Identifier	LM_LONG_LONG		2164537	0					
ANR	2165380	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , wide_int )"	470:8:12563:12602	2164537	24	True				
ANR	2165381	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , wide_int )"		2164537	0		=			
ANR	2165382	Identifier	i_num		2164537	0					
ANR	2165383	CastExpression	"( wide_int ) va_arg ( ap , wide_int )"		2164537	1					
ANR	2165384	CastTarget	wide_int		2164537	0					
ANR	2165385	CallExpression	"va_arg ( ap , wide_int )"		2164537	1					
ANR	2165386	Callee	va_arg		2164537	0					
ANR	2165387	Identifier	va_arg		2164537	0					
ANR	2165388	ArgumentList	ap		2164537	1					
ANR	2165389	Argument	ap		2164537	0					
ANR	2165390	Identifier	ap		2164537	0					
ANR	2165391	Argument	wide_int		2164537	1					
ANR	2165392	Identifier	wide_int		2164537	0					
ANR	2165393	BreakStatement	break ;	471:8:12612:12617	2164537	25	True				
ANR	2165394	Label	case LM_INTMAX_T :	474:7:12653:12669	2164537	26	True				
ANR	2165395	Identifier	LM_INTMAX_T		2164537	0					
ANR	2165396	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , intmax_t )"	475:8:12679:12718	2164537	27	True				
ANR	2165397	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , intmax_t )"		2164537	0		=			
ANR	2165398	Identifier	i_num		2164537	0					
ANR	2165399	CastExpression	"( wide_int ) va_arg ( ap , intmax_t )"		2164537	1					
ANR	2165400	CastTarget	wide_int		2164537	0					
ANR	2165401	CallExpression	"va_arg ( ap , intmax_t )"		2164537	1					
ANR	2165402	Callee	va_arg		2164537	0					
ANR	2165403	Identifier	va_arg		2164537	0					
ANR	2165404	ArgumentList	ap		2164537	1					
ANR	2165405	Argument	ap		2164537	0					
ANR	2165406	Identifier	ap		2164537	0					
ANR	2165407	Argument	intmax_t		2164537	1					
ANR	2165408	Identifier	intmax_t		2164537	0					
ANR	2165409	BreakStatement	break ;	476:8:12728:12733	2164537	28	True				
ANR	2165410	Label	case LM_PTRDIFF_T :	479:7:12770:12787	2164537	29	True				
ANR	2165411	Identifier	LM_PTRDIFF_T		2164537	0					
ANR	2165412	ExpressionStatement	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"	480:8:12797:12837	2164537	30	True				
ANR	2165413	AssignmentExpression	"i_num = ( wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	0		=			
ANR	2165414	Identifier	i_num		2164537	0					
ANR	2165415	CastExpression	"( wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165416	CastTarget	wide_int		2164537	0					
ANR	2165417	CallExpression	"va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165418	Callee	va_arg		2164537	0					
ANR	2165419	Identifier	va_arg		2164537	0					
ANR	2165420	ArgumentList	ap		2164537	1					
ANR	2165421	Argument	ap		2164537	0					
ANR	2165422	Identifier	ap		2164537	0					
ANR	2165423	Argument	ptrdiff_t		2164537	1					
ANR	2165424	Identifier	ptrdiff_t		2164537	0					
ANR	2165425	BreakStatement	break ;	481:8:12847:12852	2164537	31	True				
ANR	2165426	ExpressionStatement	"s = ap_php_conv_10 ( i_num , ( * fmt ) == 'u' , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	485:5:12881:12975	2164537	26	True				
ANR	2165427	AssignmentExpression	"s = ap_php_conv_10 ( i_num , ( * fmt ) == 'u' , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	0		=			
ANR	2165428	Identifier	s		2164537	0					
ANR	2165429	CallExpression	"ap_php_conv_10 ( i_num , ( * fmt ) == 'u' , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	1					
ANR	2165430	Callee	ap_php_conv_10		2164537	0					
ANR	2165431	Identifier	ap_php_conv_10		2164537	0					
ANR	2165432	ArgumentList	i_num		2164537	1					
ANR	2165433	Argument	i_num		2164537	0					
ANR	2165434	Identifier	i_num		2164537	0					
ANR	2165435	Argument	( * fmt ) == 'u'		2164537	1					
ANR	2165436	EqualityExpression	( * fmt ) == 'u'		2164537	0		==			
ANR	2165437	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165438	UnaryOperator	*		2164537	0					
ANR	2165439	Identifier	fmt		2164537	1					
ANR	2165440	PrimaryExpression	'u'		2164537	1					
ANR	2165441	Argument	& is_negative		2164537	2					
ANR	2165442	UnaryOperationExpression	& is_negative		2164537	0					
ANR	2165443	UnaryOperator	&		2164537	0					
ANR	2165444	Identifier	is_negative		2164537	1					
ANR	2165445	Argument	& num_buf [ NUM_BUF_SIZE ]		2164537	3					
ANR	2165446	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2164537	0					
ANR	2165447	UnaryOperator	&		2164537	0					
ANR	2165448	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2164537	1					
ANR	2165449	Identifier	num_buf		2164537	0					
ANR	2165450	Identifier	NUM_BUF_SIZE		2164537	1					
ANR	2165451	Argument	& s_len		2164537	4					
ANR	2165452	UnaryOperationExpression	& s_len		2164537	0					
ANR	2165453	UnaryOperator	&		2164537	0					
ANR	2165454	Identifier	s_len		2164537	1					
ANR	2165455	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	487:5:12982:13034	2164537	27	True				
ANR	2165456	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		2164537	0					
ANR	2165457	Callee	FIX_PRECISION		2164537	0					
ANR	2165458	Identifier	FIX_PRECISION		2164537	0					
ANR	2165459	ArgumentList	adjust_precision		2164537	1					
ANR	2165460	Argument	adjust_precision		2164537	0					
ANR	2165461	Identifier	adjust_precision		2164537	0					
ANR	2165462	Argument	precision		2164537	1					
ANR	2165463	Identifier	precision		2164537	0					
ANR	2165464	Argument	s		2164537	2					
ANR	2165465	Identifier	s		2164537	0					
ANR	2165466	Argument	s_len		2164537	3					
ANR	2165467	Identifier	s_len		2164537	0					
ANR	2165468	IfStatement	if ( * fmt != 'u' )		2164537	28					
ANR	2165469	Condition	* fmt != 'u'	489:9:13046:13056	2164537	0	True				
ANR	2165470	EqualityExpression	* fmt != 'u'		2164537	0		!=			
ANR	2165471	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165472	UnaryOperator	*		2164537	0					
ANR	2165473	Identifier	fmt		2164537	1					
ANR	2165474	PrimaryExpression	'u'		2164537	1					
ANR	2165475	CompoundStatement		286:22:6101:6101	2164537	1					
ANR	2165476	IfStatement	if ( is_negative )		2164537	0					
ANR	2165477	Condition	is_negative	490:10:13071:13081	2164537	0	True				
ANR	2165478	Identifier	is_negative		2164537	0					
ANR	2165479	ExpressionStatement	prefix_char = '-'	491:7:13091:13108	2164537	1	True				
ANR	2165480	AssignmentExpression	prefix_char = '-'		2164537	0		=			
ANR	2165481	Identifier	prefix_char		2164537	0					
ANR	2165482	PrimaryExpression	'-'		2164537	1					
ANR	2165483	ElseStatement	else		2164537	0					
ANR	2165484	IfStatement	if ( print_sign )		2164537	0					
ANR	2165485	Condition	print_sign	492:15:13125:13134	2164537	0	True				
ANR	2165486	Identifier	print_sign		2164537	0					
ANR	2165487	ExpressionStatement	prefix_char = '+'	493:7:13144:13161	2164537	1	True				
ANR	2165488	AssignmentExpression	prefix_char = '+'		2164537	0		=			
ANR	2165489	Identifier	prefix_char		2164537	0					
ANR	2165490	PrimaryExpression	'+'		2164537	1					
ANR	2165491	ElseStatement	else		2164537	0					
ANR	2165492	IfStatement	if ( print_blank )		2164537	0					
ANR	2165493	Condition	print_blank	494:15:13178:13188	2164537	0	True				
ANR	2165494	Identifier	print_blank		2164537	0					
ANR	2165495	ExpressionStatement	prefix_char = ' '	495:7:13198:13215	2164537	1	True				
ANR	2165496	AssignmentExpression	prefix_char = ' '		2164537	0		=			
ANR	2165497	Identifier	prefix_char		2164537	0					
ANR	2165498	PrimaryExpression	' '		2164537	1					
ANR	2165499	BreakStatement	break ;	497:5:13229:13234	2164537	29	True				
ANR	2165500	Label	case 'o' :	500:4:13242:13250	2164537	30	True				
ANR	2165501	SwitchStatement	switch ( modifier )		2164537	31					
ANR	2165502	Condition	modifier	501:12:13264:13271	2164537	0	True				
ANR	2165503	Identifier	modifier		2164537	0					
ANR	2165504	CompoundStatement		298:22:6316:6316	2164537	1					
ANR	2165505	Label	default :	502:6:13282:13289	2164537	0	True				
ANR	2165506	Identifier	default		2164537	0					
ANR	2165507	Statement	ui_num	503:7:13298:13303	2164537	1	True				
ANR	2165508	Statement	=	503:14:13305:13305	2164537	2	True				
ANR	2165509	Statement	(	503:16:13307:13307	2164537	3	True				
ANR	2165510	Statement	u_wide_int	503:17:13308:13317	2164537	4	True				
ANR	2165511	Statement	)	503:27:13318:13318	2164537	5	True				
ANR	2165512	Statement	va_arg	503:29:13320:13325	2164537	6	True				
ANR	2165513	Statement	(	503:35:13326:13326	2164537	7	True				
ANR	2165514	Statement	ap	503:36:13327:13328	2164537	8	True				
ANR	2165515	Statement	","	503:38:13329:13329	2164537	9	True				
ANR	2165516	Statement	unsigned	503:40:13331:13338	2164537	10	True				
ANR	2165517	Statement	int	503:49:13340:13342	2164537	11	True				
ANR	2165518	Statement	)	503:52:13343:13343	2164537	12	True				
ANR	2165519	ExpressionStatement		503:53:13344:13344	2164537	13	True				
ANR	2165520	BreakStatement	break ;	504:7:13353:13358	2164537	14	True				
ANR	2165521	Label	case LM_LONG_DOUBLE :	505:6:13366:13385	2164537	15	True				
ANR	2165522	Identifier	LM_LONG_DOUBLE		2164537	0					
ANR	2165523	GotoStatement	goto fmt_error ;	506:7:13394:13408	2164537	16	True				
ANR	2165524	Identifier	fmt_error		2164537	0					
ANR	2165525	Label	case LM_LONG :	507:6:13416:13428	2164537	17	True				
ANR	2165526	Identifier	LM_LONG		2164537	0					
ANR	2165527	Statement	ui_num	508:7:13437:13442	2164537	18	True				
ANR	2165528	Statement	=	508:14:13444:13444	2164537	19	True				
ANR	2165529	Statement	(	508:16:13446:13446	2164537	20	True				
ANR	2165530	Statement	u_wide_int	508:17:13447:13456	2164537	21	True				
ANR	2165531	Statement	)	508:27:13457:13457	2164537	22	True				
ANR	2165532	Statement	va_arg	508:29:13459:13464	2164537	23	True				
ANR	2165533	Statement	(	508:35:13465:13465	2164537	24	True				
ANR	2165534	Statement	ap	508:36:13466:13467	2164537	25	True				
ANR	2165535	Statement	","	508:38:13468:13468	2164537	26	True				
ANR	2165536	Statement	unsigned	508:40:13470:13477	2164537	27	True				
ANR	2165537	Statement	long	508:49:13479:13482	2164537	28	True				
ANR	2165538	Statement	int	508:54:13484:13486	2164537	29	True				
ANR	2165539	Statement	)	508:57:13487:13487	2164537	30	True				
ANR	2165540	ExpressionStatement		508:58:13488:13488	2164537	31	True				
ANR	2165541	BreakStatement	break ;	509:7:13497:13502	2164537	32	True				
ANR	2165542	Label	case LM_SIZE_T :	510:6:13510:13524	2164537	33	True				
ANR	2165543	Identifier	LM_SIZE_T		2164537	0					
ANR	2165544	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"	511:7:13533:13573	2164537	34	True				
ANR	2165545	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"		2164537	0		=			
ANR	2165546	Identifier	ui_num		2164537	0					
ANR	2165547	CastExpression	"( u_wide_int ) va_arg ( ap , size_t )"		2164537	1					
ANR	2165548	CastTarget	u_wide_int		2164537	0					
ANR	2165549	CallExpression	"va_arg ( ap , size_t )"		2164537	1					
ANR	2165550	Callee	va_arg		2164537	0					
ANR	2165551	Identifier	va_arg		2164537	0					
ANR	2165552	ArgumentList	ap		2164537	1					
ANR	2165553	Argument	ap		2164537	0					
ANR	2165554	Identifier	ap		2164537	0					
ANR	2165555	Argument	size_t		2164537	1					
ANR	2165556	Identifier	size_t		2164537	0					
ANR	2165557	BreakStatement	break ;	512:7:13582:13587	2164537	35	True				
ANR	2165558	Label	case LM_LONG_LONG :	514:6:13616:13633	2164537	36	True				
ANR	2165559	Identifier	LM_LONG_LONG		2164537	0					
ANR	2165560	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"	515:7:13642:13686	2164537	37	True				
ANR	2165561	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"		2164537	0		=			
ANR	2165562	Identifier	ui_num		2164537	0					
ANR	2165563	CastExpression	"( u_wide_int ) va_arg ( ap , u_wide_int )"		2164537	1					
ANR	2165564	CastTarget	u_wide_int		2164537	0					
ANR	2165565	CallExpression	"va_arg ( ap , u_wide_int )"		2164537	1					
ANR	2165566	Callee	va_arg		2164537	0					
ANR	2165567	Identifier	va_arg		2164537	0					
ANR	2165568	ArgumentList	ap		2164537	1					
ANR	2165569	Argument	ap		2164537	0					
ANR	2165570	Identifier	ap		2164537	0					
ANR	2165571	Argument	u_wide_int		2164537	1					
ANR	2165572	Identifier	u_wide_int		2164537	0					
ANR	2165573	BreakStatement	break ;	516:7:13695:13700	2164537	38	True				
ANR	2165574	Label	case LM_INTMAX_T :	519:6:13735:13751	2164537	39	True				
ANR	2165575	Identifier	LM_INTMAX_T		2164537	0					
ANR	2165576	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"	520:7:13760:13803	2164537	40	True				
ANR	2165577	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"		2164537	0		=			
ANR	2165578	Identifier	ui_num		2164537	0					
ANR	2165579	CastExpression	"( u_wide_int ) va_arg ( ap , uintmax_t )"		2164537	1					
ANR	2165580	CastTarget	u_wide_int		2164537	0					
ANR	2165581	CallExpression	"va_arg ( ap , uintmax_t )"		2164537	1					
ANR	2165582	Callee	va_arg		2164537	0					
ANR	2165583	Identifier	va_arg		2164537	0					
ANR	2165584	ArgumentList	ap		2164537	1					
ANR	2165585	Argument	ap		2164537	0					
ANR	2165586	Identifier	ap		2164537	0					
ANR	2165587	Argument	uintmax_t		2164537	1					
ANR	2165588	Identifier	uintmax_t		2164537	0					
ANR	2165589	BreakStatement	break ;	521:7:13812:13817	2164537	41	True				
ANR	2165590	Label	case LM_PTRDIFF_T :	524:6:13853:13870	2164537	42	True				
ANR	2165591	Identifier	LM_PTRDIFF_T		2164537	0					
ANR	2165592	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"	525:7:13879:13922	2164537	43	True				
ANR	2165593	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	0		=			
ANR	2165594	Identifier	ui_num		2164537	0					
ANR	2165595	CastExpression	"( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165596	CastTarget	u_wide_int		2164537	0					
ANR	2165597	CallExpression	"va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165598	Callee	va_arg		2164537	0					
ANR	2165599	Identifier	va_arg		2164537	0					
ANR	2165600	ArgumentList	ap		2164537	1					
ANR	2165601	Argument	ap		2164537	0					
ANR	2165602	Identifier	ap		2164537	0					
ANR	2165603	Argument	ptrdiff_t		2164537	1					
ANR	2165604	Identifier	ptrdiff_t		2164537	0					
ANR	2165605	BreakStatement	break ;	526:7:13931:13936	2164537	44	True				
ANR	2165606	ExpressionStatement	"s = ap_php_conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	529:5:13957:14032	2164537	32	True				
ANR	2165607	AssignmentExpression	"s = ap_php_conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	0		=			
ANR	2165608	Identifier	s		2164537	0					
ANR	2165609	CallExpression	"ap_php_conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	1					
ANR	2165610	Callee	ap_php_conv_p2		2164537	0					
ANR	2165611	Identifier	ap_php_conv_p2		2164537	0					
ANR	2165612	ArgumentList	ui_num		2164537	1					
ANR	2165613	Argument	ui_num		2164537	0					
ANR	2165614	Identifier	ui_num		2164537	0					
ANR	2165615	Argument	3		2164537	1					
ANR	2165616	PrimaryExpression	3		2164537	0					
ANR	2165617	Argument	* fmt		2164537	2					
ANR	2165618	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165619	UnaryOperator	*		2164537	0					
ANR	2165620	Identifier	fmt		2164537	1					
ANR	2165621	Argument	& num_buf [ NUM_BUF_SIZE ]		2164537	3					
ANR	2165622	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2164537	0					
ANR	2165623	UnaryOperator	&		2164537	0					
ANR	2165624	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2164537	1					
ANR	2165625	Identifier	num_buf		2164537	0					
ANR	2165626	Identifier	NUM_BUF_SIZE		2164537	1					
ANR	2165627	Argument	& s_len		2164537	4					
ANR	2165628	UnaryOperationExpression	& s_len		2164537	0					
ANR	2165629	UnaryOperator	&		2164537	0					
ANR	2165630	Identifier	s_len		2164537	1					
ANR	2165631	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	531:5:14039:14091	2164537	33	True				
ANR	2165632	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		2164537	0					
ANR	2165633	Callee	FIX_PRECISION		2164537	0					
ANR	2165634	Identifier	FIX_PRECISION		2164537	0					
ANR	2165635	ArgumentList	adjust_precision		2164537	1					
ANR	2165636	Argument	adjust_precision		2164537	0					
ANR	2165637	Identifier	adjust_precision		2164537	0					
ANR	2165638	Argument	precision		2164537	1					
ANR	2165639	Identifier	precision		2164537	0					
ANR	2165640	Argument	s		2164537	2					
ANR	2165641	Identifier	s		2164537	0					
ANR	2165642	Argument	s_len		2164537	3					
ANR	2165643	Identifier	s_len		2164537	0					
ANR	2165644	IfStatement	if ( alternate_form && * s != '0' )		2164537	34					
ANR	2165645	Condition	alternate_form && * s != '0'	532:9:14102:14128	2164537	0	True				
ANR	2165646	AndExpression	alternate_form && * s != '0'		2164537	0		&&			
ANR	2165647	Identifier	alternate_form		2164537	0					
ANR	2165648	EqualityExpression	* s != '0'		2164537	1		!=			
ANR	2165649	UnaryOperationExpression	* s		2164537	0					
ANR	2165650	UnaryOperator	*		2164537	0					
ANR	2165651	Identifier	s		2164537	1					
ANR	2165652	PrimaryExpression	'0'		2164537	1					
ANR	2165653	CompoundStatement		329:38:7173:7173	2164537	1					
ANR	2165654	ExpressionStatement	* -- s = '0'	533:6:14139:14149	2164537	0	True				
ANR	2165655	AssignmentExpression	* -- s = '0'		2164537	0		=			
ANR	2165656	UnaryOperationExpression	* -- s		2164537	0					
ANR	2165657	UnaryOperator	*		2164537	0					
ANR	2165658	UnaryExpression	-- s		2164537	1					
ANR	2165659	IncDec	--		2164537	0					
ANR	2165660	Identifier	s		2164537	1					
ANR	2165661	PrimaryExpression	'0'		2164537	1					
ANR	2165662	ExpressionStatement	s_len ++	534:6:14157:14164	2164537	1	True				
ANR	2165663	PostIncDecOperationExpression	s_len ++		2164537	0					
ANR	2165664	Identifier	s_len		2164537	0					
ANR	2165665	IncDec	++		2164537	1					
ANR	2165666	BreakStatement	break ;	536:5:14178:14183	2164537	35	True				
ANR	2165667	Label	case 'x' :	539:4:14191:14199	2164537	36	True				
ANR	2165668	Label	case 'X' :	540:4:14205:14213	2164537	37	True				
ANR	2165669	SwitchStatement	switch ( modifier )		2164537	38					
ANR	2165670	Condition	modifier	541:12:14227:14234	2164537	0	True				
ANR	2165671	Identifier	modifier		2164537	0					
ANR	2165672	CompoundStatement		338:22:7279:7279	2164537	1					
ANR	2165673	Label	default :	542:6:14245:14252	2164537	0	True				
ANR	2165674	Identifier	default		2164537	0					
ANR	2165675	Statement	ui_num	543:7:14261:14266	2164537	1	True				
ANR	2165676	Statement	=	543:14:14268:14268	2164537	2	True				
ANR	2165677	Statement	(	543:16:14270:14270	2164537	3	True				
ANR	2165678	Statement	u_wide_int	543:17:14271:14280	2164537	4	True				
ANR	2165679	Statement	)	543:27:14281:14281	2164537	5	True				
ANR	2165680	Statement	va_arg	543:29:14283:14288	2164537	6	True				
ANR	2165681	Statement	(	543:35:14289:14289	2164537	7	True				
ANR	2165682	Statement	ap	543:36:14290:14291	2164537	8	True				
ANR	2165683	Statement	","	543:38:14292:14292	2164537	9	True				
ANR	2165684	Statement	unsigned	543:40:14294:14301	2164537	10	True				
ANR	2165685	Statement	int	543:49:14303:14305	2164537	11	True				
ANR	2165686	Statement	)	543:52:14306:14306	2164537	12	True				
ANR	2165687	ExpressionStatement		543:53:14307:14307	2164537	13	True				
ANR	2165688	BreakStatement	break ;	544:7:14316:14321	2164537	14	True				
ANR	2165689	Label	case LM_LONG_DOUBLE :	545:6:14329:14348	2164537	15	True				
ANR	2165690	Identifier	LM_LONG_DOUBLE		2164537	0					
ANR	2165691	GotoStatement	goto fmt_error ;	546:7:14357:14371	2164537	16	True				
ANR	2165692	Identifier	fmt_error		2164537	0					
ANR	2165693	Label	case LM_LONG :	547:6:14379:14391	2164537	17	True				
ANR	2165694	Identifier	LM_LONG		2164537	0					
ANR	2165695	Statement	ui_num	548:7:14400:14405	2164537	18	True				
ANR	2165696	Statement	=	548:14:14407:14407	2164537	19	True				
ANR	2165697	Statement	(	548:16:14409:14409	2164537	20	True				
ANR	2165698	Statement	u_wide_int	548:17:14410:14419	2164537	21	True				
ANR	2165699	Statement	)	548:27:14420:14420	2164537	22	True				
ANR	2165700	Statement	va_arg	548:29:14422:14427	2164537	23	True				
ANR	2165701	Statement	(	548:35:14428:14428	2164537	24	True				
ANR	2165702	Statement	ap	548:36:14429:14430	2164537	25	True				
ANR	2165703	Statement	","	548:38:14431:14431	2164537	26	True				
ANR	2165704	Statement	unsigned	548:40:14433:14440	2164537	27	True				
ANR	2165705	Statement	long	548:49:14442:14445	2164537	28	True				
ANR	2165706	Statement	int	548:54:14447:14449	2164537	29	True				
ANR	2165707	Statement	)	548:57:14450:14450	2164537	30	True				
ANR	2165708	ExpressionStatement		548:58:14451:14451	2164537	31	True				
ANR	2165709	BreakStatement	break ;	549:7:14460:14465	2164537	32	True				
ANR	2165710	Label	case LM_SIZE_T :	550:6:14473:14487	2164537	33	True				
ANR	2165711	Identifier	LM_SIZE_T		2164537	0					
ANR	2165712	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"	551:7:14496:14536	2164537	34	True				
ANR	2165713	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , size_t )"		2164537	0		=			
ANR	2165714	Identifier	ui_num		2164537	0					
ANR	2165715	CastExpression	"( u_wide_int ) va_arg ( ap , size_t )"		2164537	1					
ANR	2165716	CastTarget	u_wide_int		2164537	0					
ANR	2165717	CallExpression	"va_arg ( ap , size_t )"		2164537	1					
ANR	2165718	Callee	va_arg		2164537	0					
ANR	2165719	Identifier	va_arg		2164537	0					
ANR	2165720	ArgumentList	ap		2164537	1					
ANR	2165721	Argument	ap		2164537	0					
ANR	2165722	Identifier	ap		2164537	0					
ANR	2165723	Argument	size_t		2164537	1					
ANR	2165724	Identifier	size_t		2164537	0					
ANR	2165725	BreakStatement	break ;	552:7:14545:14550	2164537	35	True				
ANR	2165726	Label	case LM_LONG_LONG :	554:6:14579:14596	2164537	36	True				
ANR	2165727	Identifier	LM_LONG_LONG		2164537	0					
ANR	2165728	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"	555:7:14605:14649	2164537	37	True				
ANR	2165729	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , u_wide_int )"		2164537	0		=			
ANR	2165730	Identifier	ui_num		2164537	0					
ANR	2165731	CastExpression	"( u_wide_int ) va_arg ( ap , u_wide_int )"		2164537	1					
ANR	2165732	CastTarget	u_wide_int		2164537	0					
ANR	2165733	CallExpression	"va_arg ( ap , u_wide_int )"		2164537	1					
ANR	2165734	Callee	va_arg		2164537	0					
ANR	2165735	Identifier	va_arg		2164537	0					
ANR	2165736	ArgumentList	ap		2164537	1					
ANR	2165737	Argument	ap		2164537	0					
ANR	2165738	Identifier	ap		2164537	0					
ANR	2165739	Argument	u_wide_int		2164537	1					
ANR	2165740	Identifier	u_wide_int		2164537	0					
ANR	2165741	BreakStatement	break ;	556:7:14658:14663	2164537	38	True				
ANR	2165742	Label	case LM_INTMAX_T :	559:6:14698:14714	2164537	39	True				
ANR	2165743	Identifier	LM_INTMAX_T		2164537	0					
ANR	2165744	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"	560:7:14723:14766	2164537	40	True				
ANR	2165745	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , uintmax_t )"		2164537	0		=			
ANR	2165746	Identifier	ui_num		2164537	0					
ANR	2165747	CastExpression	"( u_wide_int ) va_arg ( ap , uintmax_t )"		2164537	1					
ANR	2165748	CastTarget	u_wide_int		2164537	0					
ANR	2165749	CallExpression	"va_arg ( ap , uintmax_t )"		2164537	1					
ANR	2165750	Callee	va_arg		2164537	0					
ANR	2165751	Identifier	va_arg		2164537	0					
ANR	2165752	ArgumentList	ap		2164537	1					
ANR	2165753	Argument	ap		2164537	0					
ANR	2165754	Identifier	ap		2164537	0					
ANR	2165755	Argument	uintmax_t		2164537	1					
ANR	2165756	Identifier	uintmax_t		2164537	0					
ANR	2165757	BreakStatement	break ;	561:7:14775:14780	2164537	41	True				
ANR	2165758	Label	case LM_PTRDIFF_T :	564:6:14816:14833	2164537	42	True				
ANR	2165759	Identifier	LM_PTRDIFF_T		2164537	0					
ANR	2165760	ExpressionStatement	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"	565:7:14842:14885	2164537	43	True				
ANR	2165761	AssignmentExpression	"ui_num = ( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	0		=			
ANR	2165762	Identifier	ui_num		2164537	0					
ANR	2165763	CastExpression	"( u_wide_int ) va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165764	CastTarget	u_wide_int		2164537	0					
ANR	2165765	CallExpression	"va_arg ( ap , ptrdiff_t )"		2164537	1					
ANR	2165766	Callee	va_arg		2164537	0					
ANR	2165767	Identifier	va_arg		2164537	0					
ANR	2165768	ArgumentList	ap		2164537	1					
ANR	2165769	Argument	ap		2164537	0					
ANR	2165770	Identifier	ap		2164537	0					
ANR	2165771	Argument	ptrdiff_t		2164537	1					
ANR	2165772	Identifier	ptrdiff_t		2164537	0					
ANR	2165773	BreakStatement	break ;	566:7:14894:14899	2164537	44	True				
ANR	2165774	ExpressionStatement	"s = ap_php_conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	569:5:14920:14995	2164537	39	True				
ANR	2165775	AssignmentExpression	"s = ap_php_conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	0		=			
ANR	2165776	Identifier	s		2164537	0					
ANR	2165777	CallExpression	"ap_php_conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	1					
ANR	2165778	Callee	ap_php_conv_p2		2164537	0					
ANR	2165779	Identifier	ap_php_conv_p2		2164537	0					
ANR	2165780	ArgumentList	ui_num		2164537	1					
ANR	2165781	Argument	ui_num		2164537	0					
ANR	2165782	Identifier	ui_num		2164537	0					
ANR	2165783	Argument	4		2164537	1					
ANR	2165784	PrimaryExpression	4		2164537	0					
ANR	2165785	Argument	* fmt		2164537	2					
ANR	2165786	UnaryOperationExpression	* fmt		2164537	0					
ANR	2165787	UnaryOperator	*		2164537	0					
ANR	2165788	Identifier	fmt		2164537	1					
ANR	2165789	Argument	& num_buf [ NUM_BUF_SIZE ]		2164537	3					
ANR	2165790	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2164537	0					
ANR	2165791	UnaryOperator	&		2164537	0					
ANR	2165792	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2164537	1					
ANR	2165793	Identifier	num_buf		2164537	0					
ANR	2165794	Identifier	NUM_BUF_SIZE		2164537	1					
ANR	2165795	Argument	& s_len		2164537	4					
ANR	2165796	UnaryOperationExpression	& s_len		2164537	0					
ANR	2165797	UnaryOperator	&		2164537	0					
ANR	2165798	Identifier	s_len		2164537	1					
ANR	2165799	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	571:5:15002:15054	2164537	40	True				
ANR	2165800	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		2164537	0					
ANR	2165801	Callee	FIX_PRECISION		2164537	0					
ANR	2165802	Identifier	FIX_PRECISION		2164537	0					
ANR	2165803	ArgumentList	adjust_precision		2164537	1					
ANR	2165804	Argument	adjust_precision		2164537	0					
ANR	2165805	Identifier	adjust_precision		2164537	0					
ANR	2165806	Argument	precision		2164537	1					
ANR	2165807	Identifier	precision		2164537	0					
ANR	2165808	Argument	s		2164537	2					
ANR	2165809	Identifier	s		2164537	0					
ANR	2165810	Argument	s_len		2164537	3					
ANR	2165811	Identifier	s_len		2164537	0					
ANR	2165812	IfStatement	if ( alternate_form && ui_num != 0 )		2164537	41					
ANR	2165813	Condition	alternate_form && ui_num != 0	572:9:15065:15093	2164537	0	True				
ANR	2165814	AndExpression	alternate_form && ui_num != 0		2164537	0		&&			
ANR	2165815	Identifier	alternate_form		2164537	0					
ANR	2165816	EqualityExpression	ui_num != 0		2164537	1		!=			
ANR	2165817	Identifier	ui_num		2164537	0					
ANR	2165818	PrimaryExpression	0		2164537	1					
ANR	2165819	CompoundStatement		369:40:8138:8138	2164537	1					
ANR	2165820	ExpressionStatement	* -- s = * fmt	573:6:15104:15115	2164537	0	True				
ANR	2165821	AssignmentExpression	* -- s = * fmt		2164537	0		=			
ANR	2165822	UnaryOperationExpression	* -- s		2164537	0					
ANR	2165823	UnaryOperator	*		2164537	0					
ANR	2165824	UnaryExpression	-- s		2164537	1					
ANR	2165825	IncDec	--		2164537	0					
ANR	2165826	Identifier	s		2164537	1					
ANR	2165827	UnaryOperationExpression	* fmt		2164537	1					
ANR	2165828	UnaryOperator	*		2164537	0					
ANR	2165829	Identifier	fmt		2164537	1					
ANR	2165830	ExpressionStatement	* -- s = '0'	574:6:15140:15150	2164537	1	True				
ANR	2165831	AssignmentExpression	* -- s = '0'		2164537	0		=			
ANR	2165832	UnaryOperationExpression	* -- s		2164537	0					
ANR	2165833	UnaryOperator	*		2164537	0					
ANR	2165834	UnaryExpression	-- s		2164537	1					
ANR	2165835	IncDec	--		2164537	0					
ANR	2165836	Identifier	s		2164537	1					
ANR	2165837	PrimaryExpression	'0'		2164537	1					
ANR	2165838	ExpressionStatement	s_len += 2	575:6:15158:15168	2164537	2	True				
ANR	2165839	AssignmentExpression	s_len += 2		2164537	0		+=			
ANR	2165840	Identifier	s_len		2164537	0					
ANR	2165841	PrimaryExpression	2		2164537	1					
ANR	2165842	BreakStatement	break ;	577:5:15182:15187	2164537	42	True				
ANR	2165843	Label	case 's' :	580:4:15195:15203	2164537	43	True				
ANR	2165844	Label	case 'v' :	581:4:15209:15217	2164537	44	True				
ANR	2165845	Statement	s	582:5:15224:15224	2164537	45	True				
ANR	2165846	Statement	=	582:7:15226:15226	2164537	46	True				
ANR	2165847	Statement	va_arg	582:9:15228:15233	2164537	47	True				
ANR	2165848	Statement	(	582:15:15234:15234	2164537	48	True				
ANR	2165849	Statement	ap	582:16:15235:15236	2164537	49	True				
ANR	2165850	Statement	","	582:18:15237:15237	2164537	50	True				
ANR	2165851	Statement	char	582:20:15239:15242	2164537	51	True				
ANR	2165852	Statement	*	582:25:15244:15244	2164537	52	True				
ANR	2165853	Statement	)	582:26:15245:15245	2164537	53	True				
ANR	2165854	ExpressionStatement		582:27:15246:15246	2164537	54	True				
ANR	2165855	IfStatement	if ( s != NULL )		2164537	55					
ANR	2165856	Condition	s != NULL	583:9:15257:15265	2164537	0	True				
ANR	2165857	EqualityExpression	s != NULL		2164537	0		!=			
ANR	2165858	Identifier	s		2164537	0					
ANR	2165859	Identifier	NULL		2164537	1					
ANR	2165860	CompoundStatement		380:20:8310:8310	2164537	1					
ANR	2165861	IfStatement	if ( ! adjust_precision )		2164537	0					
ANR	2165862	Condition	! adjust_precision	584:10:15280:15296	2164537	0	True				
ANR	2165863	UnaryOperationExpression	! adjust_precision		2164537	0					
ANR	2165864	UnaryOperator	!		2164537	0					
ANR	2165865	Identifier	adjust_precision		2164537	1					
ANR	2165866	CompoundStatement		381:29:8341:8341	2164537	1					
ANR	2165867	ExpressionStatement	s_len = strlen ( s )	585:7:15308:15325	2164537	0	True				
ANR	2165868	AssignmentExpression	s_len = strlen ( s )		2164537	0		=			
ANR	2165869	Identifier	s_len		2164537	0					
ANR	2165870	CallExpression	strlen ( s )		2164537	1					
ANR	2165871	Callee	strlen		2164537	0					
ANR	2165872	Identifier	strlen		2164537	0					
ANR	2165873	ArgumentList	s		2164537	1					
ANR	2165874	Argument	s		2164537	0					
ANR	2165875	Identifier	s		2164537	0					
ANR	2165876	ElseStatement	else		2164537	0					
ANR	2165877	CompoundStatement		383:13:8382:8382	2164537	0					
ANR	2165878	ExpressionStatement	"s_len = strnlen ( s , precision )"	587:7:15349:15378	2164537	0	True				
ANR	2165879	AssignmentExpression	"s_len = strnlen ( s , precision )"		2164537	0		=			
ANR	2165880	Identifier	s_len		2164537	0					
ANR	2165881	CallExpression	"strnlen ( s , precision )"		2164537	1					
ANR	2165882	Callee	strnlen		2164537	0					
ANR	2165883	Identifier	strnlen		2164537	0					
ANR	2165884	ArgumentList	s		2164537	1					
ANR	2165885	Argument	s		2164537	0					
ANR	2165886	Identifier	s		2164537	0					
ANR	2165887	Argument	precision		2164537	1					
ANR	2165888	Identifier	precision		2164537	0					
ANR	2165889	ElseStatement	else		2164537	0					
ANR	2165890	CompoundStatement		386:12:8442:8442	2164537	0					
ANR	2165891	ExpressionStatement	s = S_NULL	590:6:15408:15418	2164537	0	True				
ANR	2165892	AssignmentExpression	s = S_NULL		2164537	0		=			
ANR	2165893	Identifier	s		2164537	0					
ANR	2165894	Identifier	S_NULL		2164537	1					
ANR	2165895	ExpressionStatement	s_len = S_NULL_LEN	591:6:15426:15444	2164537	1	True				
ANR	2165896	AssignmentExpression	s_len = S_NULL_LEN		2164537	0		=			
ANR	2165897	Identifier	s_len		2164537	0					
ANR	2165898	Identifier	S_NULL_LEN		2164537	1					
ANR	2165899	ExpressionStatement	pad_char = ' '	593:5:15458:15472	2164537	56	True				
ANR	2165900	AssignmentExpression	pad_char = ' '		2164537	0		=			
ANR	2165901	Identifier	pad_char		2164537	0					
ANR	2165902	PrimaryExpression	' '		2164537	1					
ANR	2165903	BreakStatement	break ;	594:5:15479:15484	2164537	57	True				
ANR	2165904	Label	case 'f' :	597:4:15492:15500	2164537	58	True				
ANR	2165905	Label	case 'F' :	598:4:15506:15514	2164537	59	True				
ANR	2165906	Label	case 'e' :	599:4:15520:15528	2164537	60	True				
ANR	2165907	Label	case 'E' :	600:4:15534:15542	2164537	61	True				
ANR	2165908	SwitchStatement	switch ( modifier )		2164537	62					
ANR	2165909	Condition	modifier	601:12:15556:15563	2164537	0	True				
ANR	2165910	Identifier	modifier		2164537	0					
ANR	2165911	CompoundStatement		398:22:8608:8608	2164537	1					
ANR	2165912	Label	case LM_LONG_DOUBLE :	602:6:15574:15593	2164537	0	True				
ANR	2165913	Identifier	LM_LONG_DOUBLE		2164537	0					
ANR	2165914	Statement	fp_num	603:7:15602:15607	2164537	1	True				
ANR	2165915	Statement	=	603:14:15609:15609	2164537	2	True				
ANR	2165916	Statement	(	603:16:15611:15611	2164537	3	True				
ANR	2165917	Statement	double	603:17:15612:15617	2164537	4	True				
ANR	2165918	Statement	)	603:23:15618:15618	2164537	5	True				
ANR	2165919	Statement	va_arg	603:25:15620:15625	2164537	6	True				
ANR	2165920	Statement	(	603:31:15626:15626	2164537	7	True				
ANR	2165921	Statement	ap	603:32:15627:15628	2164537	8	True				
ANR	2165922	Statement	","	603:34:15629:15629	2164537	9	True				
ANR	2165923	Statement	long	603:36:15631:15634	2164537	10	True				
ANR	2165924	Statement	double	603:41:15636:15641	2164537	11	True				
ANR	2165925	Statement	)	603:47:15642:15642	2164537	12	True				
ANR	2165926	ExpressionStatement		603:48:15643:15643	2164537	13	True				
ANR	2165927	BreakStatement	break ;	604:7:15652:15657	2164537	14	True				
ANR	2165928	Label	case LM_STD :	605:6:15665:15676	2164537	15	True				
ANR	2165929	Identifier	LM_STD		2164537	0					
ANR	2165930	ExpressionStatement	"fp_num = va_arg ( ap , double )"	606:7:15685:15712	2164537	16	True				
ANR	2165931	AssignmentExpression	"fp_num = va_arg ( ap , double )"		2164537	0		=			
ANR	2165932	Identifier	fp_num		2164537	0					
ANR	2165933	CallExpression	"va_arg ( ap , double )"		2164537	1					
ANR	2165934	Callee	va_arg		2164537	0					
ANR	2165935	Identifier	va_arg		2164537	0					
ANR	2165936	ArgumentList	ap		2164537	1					
ANR	2165937	Argument	ap		2164537	0					
ANR	2165938	Identifier	ap		2164537	0					
ANR	2165939	Argument	double		2164537	1					
ANR	2165940	Identifier	double		2164537	0					
ANR	2165941	BreakStatement	break ;	607:7:15721:15726	2164537	17	True				
ANR	2165942	Label	default :	608:6:15734:15741	2164537	18	True				
ANR	2165943	Identifier	default		2164537	0					
ANR	2165944	GotoStatement	goto fmt_error ;	609:7:15750:15764	2164537	19	True				
ANR	2165945	Identifier	fmt_error		2164537	0					
ANR	2165946	IfStatement	if ( zend_isnan ( fp_num ) )		2164537	63					
ANR	2165947	Condition	zend_isnan ( fp_num )	612:9:15783:15800	2164537	0	True				
ANR	2165948	CallExpression	zend_isnan ( fp_num )		2164537	0					
ANR	2165949	Callee	zend_isnan		2164537	0					
ANR	2165950	Identifier	zend_isnan		2164537	0					
ANR	2165951	ArgumentList	fp_num		2164537	1					
ANR	2165952	Argument	fp_num		2164537	0					
ANR	2165953	Identifier	fp_num		2164537	0					
ANR	2165954	CompoundStatement		409:29:8845:8845	2164537	1					
ANR	2165955	ExpressionStatement	"s = ""nan"""	613:6:15811:15820	2164537	0	True				
ANR	2165956	AssignmentExpression	"s = ""nan"""		2164537	0		=			
ANR	2165957	Identifier	s		2164537	0					
ANR	2165958	PrimaryExpression	"""nan"""		2164537	1					
ANR	2165959	ExpressionStatement	s_len = 3	614:6:15828:15837	2164537	1	True				
ANR	2165960	AssignmentExpression	s_len = 3		2164537	0		=			
ANR	2165961	Identifier	s_len		2164537	0					
ANR	2165962	PrimaryExpression	3		2164537	1					
ANR	2165963	ElseStatement	else		2164537	0					
ANR	2165964	IfStatement	if ( zend_isinf ( fp_num ) )		2164537	0					
ANR	2165965	Condition	zend_isinf ( fp_num )	615:16:15855:15872	2164537	0	True				
ANR	2165966	CallExpression	zend_isinf ( fp_num )		2164537	0					
ANR	2165967	Callee	zend_isinf		2164537	0					
ANR	2165968	Identifier	zend_isinf		2164537	0					
ANR	2165969	ArgumentList	fp_num		2164537	1					
ANR	2165970	Argument	fp_num		2164537	0					
ANR	2165971	Identifier	fp_num		2164537	0					
ANR	2165972	CompoundStatement		412:36:8917:8917	2164537	1					
ANR	2165973	ExpressionStatement	"s = ""inf"""	616:6:15883:15892	2164537	0	True				
ANR	2165974	AssignmentExpression	"s = ""inf"""		2164537	0		=			
ANR	2165975	Identifier	s		2164537	0					
ANR	2165976	PrimaryExpression	"""inf"""		2164537	1					
ANR	2165977	ExpressionStatement	s_len = 3	617:6:15900:15909	2164537	1	True				
ANR	2165978	AssignmentExpression	s_len = 3		2164537	0		=			
ANR	2165979	Identifier	s_len		2164537	0					
ANR	2165980	PrimaryExpression	3		2164537	1					
ANR	2165981	ElseStatement	else		2164537	0					
ANR	2165982	CompoundStatement		415:12:8965:8965	2164537	0					
ANR	2165983	ExpressionStatement	localeconv_r ( & lconv )	621:6:15963:15983	2164537	0	True				
ANR	2165984	CallExpression	localeconv_r ( & lconv )		2164537	0					
ANR	2165985	Callee	localeconv_r		2164537	0					
ANR	2165986	Identifier	localeconv_r		2164537	0					
ANR	2165987	ArgumentList	& lconv		2164537	1					
ANR	2165988	Argument	& lconv		2164537	0					
ANR	2165989	UnaryOperationExpression	& lconv		2164537	0					
ANR	2165990	UnaryOperator	&		2164537	0					
ANR	2165991	Identifier	lconv		2164537	1					
ANR	2165992	ExpressionStatement	"s = php_conv_fp ( ( * fmt == 'f' ) ? 'F' : * fmt , fp_num , alternate_form , ( adjust_precision == NO ) ? FLOAT_DIGITS : precision , ( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"	628:6:16068:16281	2164537	1	True				
ANR	2165993	AssignmentExpression	"s = php_conv_fp ( ( * fmt == 'f' ) ? 'F' : * fmt , fp_num , alternate_form , ( adjust_precision == NO ) ? FLOAT_DIGITS : precision , ( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		2164537	0		=			
ANR	2165994	Identifier	s		2164537	0					
ANR	2165995	CallExpression	"php_conv_fp ( ( * fmt == 'f' ) ? 'F' : * fmt , fp_num , alternate_form , ( adjust_precision == NO ) ? FLOAT_DIGITS : precision , ( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		2164537	1					
ANR	2165996	Callee	php_conv_fp		2164537	0					
ANR	2165997	Identifier	php_conv_fp		2164537	0					
ANR	2165998	ArgumentList	( * fmt == 'f' ) ? 'F' : * fmt		2164537	1					
ANR	2165999	Argument	( * fmt == 'f' ) ? 'F' : * fmt		2164537	0					
ANR	2166000	ConditionalExpression	( * fmt == 'f' ) ? 'F' : * fmt		2164537	0					
ANR	2166001	Condition	* fmt == 'f'		2164537	0					
ANR	2166002	EqualityExpression	* fmt == 'f'		2164537	0		==			
ANR	2166003	UnaryOperationExpression	* fmt		2164537	0					
ANR	2166004	UnaryOperator	*		2164537	0					
ANR	2166005	Identifier	fmt		2164537	1					
ANR	2166006	PrimaryExpression	'f'		2164537	1					
ANR	2166007	PrimaryExpression	'F'		2164537	1					
ANR	2166008	UnaryOperationExpression	* fmt		2164537	2					
ANR	2166009	UnaryOperator	*		2164537	0					
ANR	2166010	Identifier	fmt		2164537	1					
ANR	2166011	Argument	fp_num		2164537	1					
ANR	2166012	Identifier	fp_num		2164537	0					
ANR	2166013	Argument	alternate_form		2164537	2					
ANR	2166014	Identifier	alternate_form		2164537	0					
ANR	2166015	Argument	( adjust_precision == NO ) ? FLOAT_DIGITS : precision		2164537	3					
ANR	2166016	ConditionalExpression	( adjust_precision == NO ) ? FLOAT_DIGITS : precision		2164537	0					
ANR	2166017	Condition	adjust_precision == NO		2164537	0					
ANR	2166018	EqualityExpression	adjust_precision == NO		2164537	0		==			
ANR	2166019	Identifier	adjust_precision		2164537	0					
ANR	2166020	Identifier	NO		2164537	1					
ANR	2166021	Identifier	FLOAT_DIGITS		2164537	1					
ANR	2166022	Identifier	precision		2164537	2					
ANR	2166023	Argument	( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		2164537	4					
ANR	2166024	ConditionalExpression	( * fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		2164537	0					
ANR	2166025	Condition	* fmt == 'f'		2164537	0					
ANR	2166026	EqualityExpression	* fmt == 'f'		2164537	0		==			
ANR	2166027	UnaryOperationExpression	* fmt		2164537	0					
ANR	2166028	UnaryOperator	*		2164537	0					
ANR	2166029	Identifier	fmt		2164537	1					
ANR	2166030	PrimaryExpression	'f'		2164537	1					
ANR	2166031	Identifier	LCONV_DECIMAL_POINT		2164537	1					
ANR	2166032	PrimaryExpression	'.'		2164537	2					
ANR	2166033	Argument	& is_negative		2164537	5					
ANR	2166034	UnaryOperationExpression	& is_negative		2164537	0					
ANR	2166035	UnaryOperator	&		2164537	0					
ANR	2166036	Identifier	is_negative		2164537	1					
ANR	2166037	Argument	& num_buf [ 1 ]		2164537	6					
ANR	2166038	UnaryOperationExpression	& num_buf [ 1 ]		2164537	0					
ANR	2166039	UnaryOperator	&		2164537	0					
ANR	2166040	ArrayIndexing	num_buf [ 1 ]		2164537	1					
ANR	2166041	Identifier	num_buf		2164537	0					
ANR	2166042	PrimaryExpression	1		2164537	1					
ANR	2166043	Argument	& s_len		2164537	7					
ANR	2166044	UnaryOperationExpression	& s_len		2164537	0					
ANR	2166045	UnaryOperator	&		2164537	0					
ANR	2166046	Identifier	s_len		2164537	1					
ANR	2166047	IfStatement	if ( is_negative )		2164537	2					
ANR	2166048	Condition	is_negative	632:10:16293:16303	2164537	0	True				
ANR	2166049	Identifier	is_negative		2164537	0					
ANR	2166050	ExpressionStatement	prefix_char = '-'	633:7:16313:16330	2164537	1	True				
ANR	2166051	AssignmentExpression	prefix_char = '-'		2164537	0		=			
ANR	2166052	Identifier	prefix_char		2164537	0					
ANR	2166053	PrimaryExpression	'-'		2164537	1					
ANR	2166054	ElseStatement	else		2164537	0					
ANR	2166055	IfStatement	if ( print_sign )		2164537	0					
ANR	2166056	Condition	print_sign	634:15:16347:16356	2164537	0	True				
ANR	2166057	Identifier	print_sign		2164537	0					
ANR	2166058	ExpressionStatement	prefix_char = '+'	635:7:16366:16383	2164537	1	True				
ANR	2166059	AssignmentExpression	prefix_char = '+'		2164537	0		=			
ANR	2166060	Identifier	prefix_char		2164537	0					
ANR	2166061	PrimaryExpression	'+'		2164537	1					
ANR	2166062	ElseStatement	else		2164537	0					
ANR	2166063	IfStatement	if ( print_blank )		2164537	0					
ANR	2166064	Condition	print_blank	636:15:16400:16410	2164537	0	True				
ANR	2166065	Identifier	print_blank		2164537	0					
ANR	2166066	ExpressionStatement	prefix_char = ' '	637:7:16420:16437	2164537	1	True				
ANR	2166067	AssignmentExpression	prefix_char = ' '		2164537	0		=			
ANR	2166068	Identifier	prefix_char		2164537	0					
ANR	2166069	PrimaryExpression	' '		2164537	1					
ANR	2166070	BreakStatement	break ;	639:5:16451:16456	2164537	64	True				
ANR	2166071	Label	case 'g' :	642:4:16464:16472	2164537	65	True				
ANR	2166072	Label	case 'k' :	643:4:16478:16486	2164537	66	True				
ANR	2166073	Label	case 'G' :	644:4:16492:16500	2164537	67	True				
ANR	2166074	Label	case 'H' :	645:4:16506:16514	2164537	68	True				
ANR	2166075	SwitchStatement	switch ( modifier )		2164537	69					
ANR	2166076	Condition	modifier	646:12:16528:16535	2164537	0	True				
ANR	2166077	Identifier	modifier		2164537	0					
ANR	2166078	CompoundStatement		443:22:9580:9580	2164537	1					
ANR	2166079	Label	case LM_LONG_DOUBLE :	647:6:16546:16565	2164537	0	True				
ANR	2166080	Identifier	LM_LONG_DOUBLE		2164537	0					
ANR	2166081	Statement	fp_num	648:7:16574:16579	2164537	1	True				
ANR	2166082	Statement	=	648:14:16581:16581	2164537	2	True				
ANR	2166083	Statement	(	648:16:16583:16583	2164537	3	True				
ANR	2166084	Statement	double	648:17:16584:16589	2164537	4	True				
ANR	2166085	Statement	)	648:23:16590:16590	2164537	5	True				
ANR	2166086	Statement	va_arg	648:25:16592:16597	2164537	6	True				
ANR	2166087	Statement	(	648:31:16598:16598	2164537	7	True				
ANR	2166088	Statement	ap	648:32:16599:16600	2164537	8	True				
ANR	2166089	Statement	","	648:34:16601:16601	2164537	9	True				
ANR	2166090	Statement	long	648:36:16603:16606	2164537	10	True				
ANR	2166091	Statement	double	648:41:16608:16613	2164537	11	True				
ANR	2166092	Statement	)	648:47:16614:16614	2164537	12	True				
ANR	2166093	ExpressionStatement		648:48:16615:16615	2164537	13	True				
ANR	2166094	BreakStatement	break ;	649:7:16624:16629	2164537	14	True				
ANR	2166095	Label	case LM_STD :	650:6:16637:16648	2164537	15	True				
ANR	2166096	Identifier	LM_STD		2164537	0					
ANR	2166097	ExpressionStatement	"fp_num = va_arg ( ap , double )"	651:7:16657:16684	2164537	16	True				
ANR	2166098	AssignmentExpression	"fp_num = va_arg ( ap , double )"		2164537	0		=			
ANR	2166099	Identifier	fp_num		2164537	0					
ANR	2166100	CallExpression	"va_arg ( ap , double )"		2164537	1					
ANR	2166101	Callee	va_arg		2164537	0					
ANR	2166102	Identifier	va_arg		2164537	0					
ANR	2166103	ArgumentList	ap		2164537	1					
ANR	2166104	Argument	ap		2164537	0					
ANR	2166105	Identifier	ap		2164537	0					
ANR	2166106	Argument	double		2164537	1					
ANR	2166107	Identifier	double		2164537	0					
ANR	2166108	BreakStatement	break ;	652:7:16693:16698	2164537	17	True				
ANR	2166109	Label	default :	653:6:16706:16713	2164537	18	True				
ANR	2166110	Identifier	default		2164537	0					
ANR	2166111	GotoStatement	goto fmt_error ;	654:7:16722:16736	2164537	19	True				
ANR	2166112	Identifier	fmt_error		2164537	0					
ANR	2166113	IfStatement	if ( zend_isnan ( fp_num ) )		2164537	70					
ANR	2166114	Condition	zend_isnan ( fp_num )	657:9:16755:16772	2164537	0	True				
ANR	2166115	CallExpression	zend_isnan ( fp_num )		2164537	0					
ANR	2166116	Callee	zend_isnan		2164537	0					
ANR	2166117	Identifier	zend_isnan		2164537	0					
ANR	2166118	ArgumentList	fp_num		2164537	1					
ANR	2166119	Argument	fp_num		2164537	0					
ANR	2166120	Identifier	fp_num		2164537	0					
ANR	2166121	CompoundStatement		454:29:9817:9817	2164537	1					
ANR	2166122	ExpressionStatement	"s = ""NAN"""	658:7:16784:16793	2164537	0	True				
ANR	2166123	AssignmentExpression	"s = ""NAN"""		2164537	0		=			
ANR	2166124	Identifier	s		2164537	0					
ANR	2166125	PrimaryExpression	"""NAN"""		2164537	1					
ANR	2166126	ExpressionStatement	s_len = 3	659:7:16802:16811	2164537	1	True				
ANR	2166127	AssignmentExpression	s_len = 3		2164537	0		=			
ANR	2166128	Identifier	s_len		2164537	0					
ANR	2166129	PrimaryExpression	3		2164537	1					
ANR	2166130	BreakStatement	break ;	660:7:16820:16825	2164537	2	True				
ANR	2166131	ElseStatement	else		2164537	0					
ANR	2166132	IfStatement	if ( zend_isinf ( fp_num ) )		2164537	0					
ANR	2166133	Condition	zend_isinf ( fp_num )	661:17:16844:16861	2164537	0	True				
ANR	2166134	CallExpression	zend_isinf ( fp_num )		2164537	0					
ANR	2166135	Callee	zend_isinf		2164537	0					
ANR	2166136	Identifier	zend_isinf		2164537	0					
ANR	2166137	ArgumentList	fp_num		2164537	1					
ANR	2166138	Argument	fp_num		2164537	0					
ANR	2166139	Identifier	fp_num		2164537	0					
ANR	2166140	CompoundStatement		458:37:9906:9906	2164537	1					
ANR	2166141	IfStatement	if ( fp_num > 0 )		2164537	0					
ANR	2166142	Condition	fp_num > 0	662:11:16877:16886	2164537	0	True				
ANR	2166143	RelationalExpression	fp_num > 0		2164537	0		>			
ANR	2166144	Identifier	fp_num		2164537	0					
ANR	2166145	PrimaryExpression	0		2164537	1					
ANR	2166146	CompoundStatement		459:23:9931:9931	2164537	1					
ANR	2166147	ExpressionStatement	"s = ""INF"""	663:8:16899:16908	2164537	0	True				
ANR	2166148	AssignmentExpression	"s = ""INF"""		2164537	0		=			
ANR	2166149	Identifier	s		2164537	0					
ANR	2166150	PrimaryExpression	"""INF"""		2164537	1					
ANR	2166151	ExpressionStatement	s_len = 3	664:8:16918:16927	2164537	1	True				
ANR	2166152	AssignmentExpression	s_len = 3		2164537	0		=			
ANR	2166153	Identifier	s_len		2164537	0					
ANR	2166154	PrimaryExpression	3		2164537	1					
ANR	2166155	ElseStatement	else		2164537	0					
ANR	2166156	CompoundStatement		462:14:9985:9985	2164537	0					
ANR	2166157	ExpressionStatement	"s = ""-INF"""	666:8:16953:16963	2164537	0	True				
ANR	2166158	AssignmentExpression	"s = ""-INF"""		2164537	0		=			
ANR	2166159	Identifier	s		2164537	0					
ANR	2166160	PrimaryExpression	"""-INF"""		2164537	1					
ANR	2166161	ExpressionStatement	s_len = 4	667:8:16973:16982	2164537	1	True				
ANR	2166162	AssignmentExpression	s_len = 4		2164537	0		=			
ANR	2166163	Identifier	s_len		2164537	0					
ANR	2166164	PrimaryExpression	4		2164537	1					
ANR	2166165	BreakStatement	break ;	669:7:17000:17005	2164537	1	True				
ANR	2166166	IfStatement	if ( adjust_precision == NO )		2164537	71					
ANR	2166167	Condition	adjust_precision == NO	672:9:17025:17046	2164537	0	True				
ANR	2166168	EqualityExpression	adjust_precision == NO		2164537	0		==			
ANR	2166169	Identifier	adjust_precision		2164537	0					
ANR	2166170	Identifier	NO		2164537	1					
ANR	2166171	ExpressionStatement	precision = FLOAT_DIGITS	673:6:17055:17079	2164537	1	True				
ANR	2166172	AssignmentExpression	precision = FLOAT_DIGITS		2164537	0		=			
ANR	2166173	Identifier	precision		2164537	0					
ANR	2166174	Identifier	FLOAT_DIGITS		2164537	1					
ANR	2166175	ElseStatement	else		2164537	0					
ANR	2166176	IfStatement	if ( precision == 0 )		2164537	0					
ANR	2166177	Condition	precision == 0	674:14:17095:17108	2164537	0	True				
ANR	2166178	EqualityExpression	precision == 0		2164537	0		==			
ANR	2166179	Identifier	precision		2164537	0					
ANR	2166180	PrimaryExpression	0		2164537	1					
ANR	2166181	ExpressionStatement	precision = 1	675:6:17117:17130	2164537	1	True				
ANR	2166182	AssignmentExpression	precision = 1		2164537	0		=			
ANR	2166183	Identifier	precision		2164537	0					
ANR	2166184	PrimaryExpression	1		2164537	1					
ANR	2166185	ExpressionStatement	localeconv_r ( & lconv )	681:5:17252:17272	2164537	72	True				
ANR	2166186	CallExpression	localeconv_r ( & lconv )		2164537	0					
ANR	2166187	Callee	localeconv_r		2164537	0					
ANR	2166188	Identifier	localeconv_r		2164537	0					
ANR	2166189	ArgumentList	& lconv		2164537	1					
ANR	2166190	Argument	& lconv		2164537	0					
ANR	2166191	UnaryOperationExpression	& lconv		2164537	0					
ANR	2166192	UnaryOperator	&		2164537	0					
ANR	2166193	Identifier	lconv		2164537	1					
ANR	2166194	ExpressionStatement	"s = php_gcvt ( fp_num , precision , ( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT , ( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e' , & num_buf [ 1 ] )"	688:5:17353:17491	2164537	73	True				
ANR	2166195	AssignmentExpression	"s = php_gcvt ( fp_num , precision , ( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT , ( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		2164537	0		=			
ANR	2166196	Identifier	s		2164537	0					
ANR	2166197	CallExpression	"php_gcvt ( fp_num , precision , ( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT , ( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		2164537	1					
ANR	2166198	Callee	php_gcvt		2164537	0					
ANR	2166199	Identifier	php_gcvt		2164537	0					
ANR	2166200	ArgumentList	fp_num		2164537	1					
ANR	2166201	Argument	fp_num		2164537	0					
ANR	2166202	Identifier	fp_num		2164537	0					
ANR	2166203	Argument	precision		2164537	1					
ANR	2166204	Identifier	precision		2164537	0					
ANR	2166205	Argument	( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT		2164537	2					
ANR	2166206	ConditionalExpression	( * fmt == 'H' || * fmt == 'k' ) ? '.' : LCONV_DECIMAL_POINT		2164537	0					
ANR	2166207	Condition	* fmt == 'H' || * fmt == 'k'		2164537	0					
ANR	2166208	OrExpression	* fmt == 'H' || * fmt == 'k'		2164537	0		||			
ANR	2166209	EqualityExpression	* fmt == 'H'		2164537	0		==			
ANR	2166210	UnaryOperationExpression	* fmt		2164537	0					
ANR	2166211	UnaryOperator	*		2164537	0					
ANR	2166212	Identifier	fmt		2164537	1					
ANR	2166213	PrimaryExpression	'H'		2164537	1					
ANR	2166214	EqualityExpression	* fmt == 'k'		2164537	1		==			
ANR	2166215	UnaryOperationExpression	* fmt		2164537	0					
ANR	2166216	UnaryOperator	*		2164537	0					
ANR	2166217	Identifier	fmt		2164537	1					
ANR	2166218	PrimaryExpression	'k'		2164537	1					
ANR	2166219	PrimaryExpression	'.'		2164537	1					
ANR	2166220	Identifier	LCONV_DECIMAL_POINT		2164537	2					
ANR	2166221	Argument	( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e'		2164537	3					
ANR	2166222	ConditionalExpression	( * fmt == 'G' || * fmt == 'H' ) ? 'E' : 'e'		2164537	0					
ANR	2166223	Condition	* fmt == 'G' || * fmt == 'H'		2164537	0					
ANR	2166224	OrExpression	* fmt == 'G' || * fmt == 'H'		2164537	0		||			
ANR	2166225	EqualityExpression	* fmt == 'G'		2164537	0		==			
ANR	2166226	UnaryOperationExpression	* fmt		2164537	0					
ANR	2166227	UnaryOperator	*		2164537	0					
ANR	2166228	Identifier	fmt		2164537	1					
ANR	2166229	PrimaryExpression	'G'		2164537	1					
ANR	2166230	EqualityExpression	* fmt == 'H'		2164537	1		==			
ANR	2166231	UnaryOperationExpression	* fmt		2164537	0					
ANR	2166232	UnaryOperator	*		2164537	0					
ANR	2166233	Identifier	fmt		2164537	1					
ANR	2166234	PrimaryExpression	'H'		2164537	1					
ANR	2166235	PrimaryExpression	'E'		2164537	1					
ANR	2166236	PrimaryExpression	'e'		2164537	2					
ANR	2166237	Argument	& num_buf [ 1 ]		2164537	4					
ANR	2166238	UnaryOperationExpression	& num_buf [ 1 ]		2164537	0					
ANR	2166239	UnaryOperator	&		2164537	0					
ANR	2166240	ArrayIndexing	num_buf [ 1 ]		2164537	1					
ANR	2166241	Identifier	num_buf		2164537	0					
ANR	2166242	PrimaryExpression	1		2164537	1					
ANR	2166243	IfStatement	if ( * s == '-' )		2164537	74					
ANR	2166244	Condition	* s == '-'	689:9:17502:17510	2164537	0	True				
ANR	2166245	EqualityExpression	* s == '-'		2164537	0		==			
ANR	2166246	UnaryOperationExpression	* s		2164537	0					
ANR	2166247	UnaryOperator	*		2164537	0					
ANR	2166248	Identifier	s		2164537	1					
ANR	2166249	PrimaryExpression	'-'		2164537	1					
ANR	2166250	ExpressionStatement	prefix_char = * s ++	690:6:17519:17537	2164537	1	True				
ANR	2166251	AssignmentExpression	prefix_char = * s ++		2164537	0		=			
ANR	2166252	Identifier	prefix_char		2164537	0					
ANR	2166253	UnaryOperationExpression	* s ++		2164537	1					
ANR	2166254	UnaryOperator	*		2164537	0					
ANR	2166255	PostIncDecOperationExpression	s ++		2164537	1					
ANR	2166256	Identifier	s		2164537	0					
ANR	2166257	IncDec	++		2164537	1					
ANR	2166258	ElseStatement	else		2164537	0					
ANR	2166259	IfStatement	if ( print_sign )		2164537	0					
ANR	2166260	Condition	print_sign	691:14:17553:17562	2164537	0	True				
ANR	2166261	Identifier	print_sign		2164537	0					
ANR	2166262	ExpressionStatement	prefix_char = '+'	692:6:17571:17588	2164537	1	True				
ANR	2166263	AssignmentExpression	prefix_char = '+'		2164537	0		=			
ANR	2166264	Identifier	prefix_char		2164537	0					
ANR	2166265	PrimaryExpression	'+'		2164537	1					
ANR	2166266	ElseStatement	else		2164537	0					
ANR	2166267	IfStatement	if ( print_blank )		2164537	0					
ANR	2166268	Condition	print_blank	693:14:17604:17614	2164537	0	True				
ANR	2166269	Identifier	print_blank		2164537	0					
ANR	2166270	ExpressionStatement	prefix_char = ' '	694:6:17623:17640	2164537	1	True				
ANR	2166271	AssignmentExpression	prefix_char = ' '		2164537	0		=			
ANR	2166272	Identifier	prefix_char		2164537	0					
ANR	2166273	PrimaryExpression	' '		2164537	1					
ANR	2166274	ExpressionStatement	s_len = strlen ( s )	696:5:17648:17665	2164537	75	True				
ANR	2166275	AssignmentExpression	s_len = strlen ( s )		2164537	0		=			
ANR	2166276	Identifier	s_len		2164537	0					
ANR	2166277	CallExpression	strlen ( s )		2164537	1					
ANR	2166278	Callee	strlen		2164537	0					
ANR	2166279	Identifier	strlen		2164537	0					
ANR	2166280	ArgumentList	s		2164537	1					
ANR	2166281	Argument	s		2164537	0					
ANR	2166282	Identifier	s		2164537	0					
ANR	2166283	IfStatement	"if ( alternate_form && ( strchr ( s , '.' ) ) == NULL )"		2164537	76					
ANR	2166284	Condition	"alternate_form && ( strchr ( s , '.' ) ) == NULL"	698:9:17677:17718	2164537	0	True				
ANR	2166285	AndExpression	"alternate_form && ( strchr ( s , '.' ) ) == NULL"		2164537	0		&&			
ANR	2166286	Identifier	alternate_form		2164537	0					
ANR	2166287	EqualityExpression	"( strchr ( s , '.' ) ) == NULL"		2164537	1		==			
ANR	2166288	CallExpression	"strchr ( s , '.' )"		2164537	0					
ANR	2166289	Callee	strchr		2164537	0					
ANR	2166290	Identifier	strchr		2164537	0					
ANR	2166291	ArgumentList	s		2164537	1					
ANR	2166292	Argument	s		2164537	0					
ANR	2166293	Identifier	s		2164537	0					
ANR	2166294	Argument	'.'		2164537	1					
ANR	2166295	PrimaryExpression	'.'		2164537	0					
ANR	2166296	Identifier	NULL		2164537	1					
ANR	2166297	ExpressionStatement	s [ s_len ++ ] = '.'	699:6:17727:17743	2164537	1	True				
ANR	2166298	AssignmentExpression	s [ s_len ++ ] = '.'		2164537	0		=			
ANR	2166299	ArrayIndexing	s [ s_len ++ ]		2164537	0					
ANR	2166300	Identifier	s		2164537	0					
ANR	2166301	PostIncDecOperationExpression	s_len ++		2164537	1					
ANR	2166302	Identifier	s_len		2164537	0					
ANR	2166303	IncDec	++		2164537	1					
ANR	2166304	PrimaryExpression	'.'		2164537	1					
ANR	2166305	BreakStatement	break ;	700:5:17750:17755	2164537	77	True				
ANR	2166306	Label	case 'c' :	703:4:17763:17771	2164537	78	True				
ANR	2166307	ExpressionStatement	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"	704:5:17778:17816	2164537	79	True				
ANR	2166308	AssignmentExpression	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"		2164537	0		=			
ANR	2166309	ArrayIndexing	char_buf [ 0 ]		2164537	0					
ANR	2166310	Identifier	char_buf		2164537	0					
ANR	2166311	PrimaryExpression	0		2164537	1					
ANR	2166312	CastExpression	"( char ) ( va_arg ( ap , int ) )"		2164537	1					
ANR	2166313	CastTarget	char		2164537	0					
ANR	2166314	CallExpression	"va_arg ( ap , int )"		2164537	1					
ANR	2166315	Callee	va_arg		2164537	0					
ANR	2166316	Identifier	va_arg		2164537	0					
ANR	2166317	ArgumentList	ap		2164537	1					
ANR	2166318	Argument	ap		2164537	0					
ANR	2166319	Identifier	ap		2164537	0					
ANR	2166320	Argument	int		2164537	1					
ANR	2166321	Identifier	int		2164537	0					
ANR	2166322	ExpressionStatement	s = & char_buf [ 0 ]	705:5:17823:17839	2164537	80	True				
ANR	2166323	AssignmentExpression	s = & char_buf [ 0 ]		2164537	0		=			
ANR	2166324	Identifier	s		2164537	0					
ANR	2166325	UnaryOperationExpression	& char_buf [ 0 ]		2164537	1					
ANR	2166326	UnaryOperator	&		2164537	0					
ANR	2166327	ArrayIndexing	char_buf [ 0 ]		2164537	1					
ANR	2166328	Identifier	char_buf		2164537	0					
ANR	2166329	PrimaryExpression	0		2164537	1					
ANR	2166330	ExpressionStatement	s_len = 1	706:5:17846:17855	2164537	81	True				
ANR	2166331	AssignmentExpression	s_len = 1		2164537	0		=			
ANR	2166332	Identifier	s_len		2164537	0					
ANR	2166333	PrimaryExpression	1		2164537	1					
ANR	2166334	ExpressionStatement	pad_char = ' '	707:5:17862:17876	2164537	82	True				
ANR	2166335	AssignmentExpression	pad_char = ' '		2164537	0		=			
ANR	2166336	Identifier	pad_char		2164537	0					
ANR	2166337	PrimaryExpression	' '		2164537	1					
ANR	2166338	BreakStatement	break ;	708:5:17883:17888	2164537	83	True				
ANR	2166339	Label	case '%' :	711:4:17896:17904	2164537	84	True				
ANR	2166340	ExpressionStatement	char_buf [ 0 ] = '%'	712:5:17911:17928	2164537	85	True				
ANR	2166341	AssignmentExpression	char_buf [ 0 ] = '%'		2164537	0		=			
ANR	2166342	ArrayIndexing	char_buf [ 0 ]		2164537	0					
ANR	2166343	Identifier	char_buf		2164537	0					
ANR	2166344	PrimaryExpression	0		2164537	1					
ANR	2166345	PrimaryExpression	'%'		2164537	1					
ANR	2166346	ExpressionStatement	s = & char_buf [ 0 ]	713:5:17935:17951	2164537	86	True				
ANR	2166347	AssignmentExpression	s = & char_buf [ 0 ]		2164537	0		=			
ANR	2166348	Identifier	s		2164537	0					
ANR	2166349	UnaryOperationExpression	& char_buf [ 0 ]		2164537	1					
ANR	2166350	UnaryOperator	&		2164537	0					
ANR	2166351	ArrayIndexing	char_buf [ 0 ]		2164537	1					
ANR	2166352	Identifier	char_buf		2164537	0					
ANR	2166353	PrimaryExpression	0		2164537	1					
ANR	2166354	ExpressionStatement	s_len = 1	714:5:17958:17967	2164537	87	True				
ANR	2166355	AssignmentExpression	s_len = 1		2164537	0		=			
ANR	2166356	Identifier	s_len		2164537	0					
ANR	2166357	PrimaryExpression	1		2164537	1					
ANR	2166358	ExpressionStatement	pad_char = ' '	715:5:17974:17988	2164537	88	True				
ANR	2166359	AssignmentExpression	pad_char = ' '		2164537	0		=			
ANR	2166360	Identifier	pad_char		2164537	0					
ANR	2166361	PrimaryExpression	' '		2164537	1					
ANR	2166362	BreakStatement	break ;	716:5:17995:18000	2164537	89	True				
ANR	2166363	Label	case 'n' :	719:4:18008:18016	2164537	90	True				
ANR	2166364	Statement	*	720:5:18023:18023	2164537	91	True				
ANR	2166365	Statement	(	720:6:18024:18024	2164537	92	True				
ANR	2166366	Statement	va_arg	720:7:18025:18030	2164537	93	True				
ANR	2166367	Statement	(	720:13:18031:18031	2164537	94	True				
ANR	2166368	Statement	ap	720:14:18032:18033	2164537	95	True				
ANR	2166369	Statement	","	720:16:18034:18034	2164537	96	True				
ANR	2166370	Statement	int	720:18:18036:18038	2164537	97	True				
ANR	2166371	Statement	*	720:22:18040:18040	2164537	98	True				
ANR	2166372	Statement	)	720:23:18041:18041	2164537	99	True				
ANR	2166373	Statement	)	720:24:18042:18042	2164537	100	True				
ANR	2166374	Statement	=	720:26:18044:18044	2164537	101	True				
ANR	2166375	ExpressionStatement	xbuf -> len	720:28:18046:18055	2164537	102	True				
ANR	2166376	PtrMemberAccess	xbuf -> len		2164537	0					
ANR	2166377	Identifier	xbuf		2164537	0					
ANR	2166378	Identifier	len		2164537	1					
ANR	2166379	GotoStatement	goto skip_output ;	721:5:18062:18078	2164537	103	True				
ANR	2166380	Identifier	skip_output		2164537	0					
ANR	2166381	Label	case 'p' :	731:4:18451:18459	2164537	104	True				
ANR	2166382	IfStatement	if ( sizeof ( char * ) <= sizeof ( u_wide_int ) )		2164537	105					
ANR	2166383	Condition	sizeof ( char * ) <= sizeof ( u_wide_int )	732:9:18470:18505	2164537	0	True				
ANR	2166384	RelationalExpression	sizeof ( char * ) <= sizeof ( u_wide_int )		2164537	0		<=			
ANR	2166385	SizeofExpression	sizeof ( char * )		2164537	0					
ANR	2166386	Sizeof	sizeof		2164537	0					
ANR	2166387	SizeofOperand	char *		2164537	1					
ANR	2166388	SizeofExpression	sizeof ( u_wide_int )		2164537	1					
ANR	2166389	Sizeof	sizeof		2164537	0					
ANR	2166390	SizeofOperand	u_wide_int		2164537	1					
ANR	2166391	CompoundStatement		529:47:11550:11550	2164537	1					
ANR	2166392	Statement	ui_num	733:6:18516:18521	2164537	0	True				
ANR	2166393	Statement	=	733:13:18523:18523	2164537	1	True				
ANR	2166394	Statement	(	733:15:18525:18525	2164537	2	True				
ANR	2166395	Statement	u_wide_int	733:16:18526:18535	2164537	3	True				
ANR	2166396	Statement	)	733:26:18536:18536	2164537	4	True				
ANR	2166397	Statement	(	733:27:18537:18537	2164537	5	True				
ANR	2166398	Statement	(	733:28:18538:18538	2164537	6	True				
ANR	2166399	Statement	size_t	733:29:18539:18544	2164537	7	True				
ANR	2166400	Statement	)	733:35:18545:18545	2164537	8	True				
ANR	2166401	Statement	va_arg	733:37:18547:18552	2164537	9	True				
ANR	2166402	Statement	(	733:43:18553:18553	2164537	10	True				
ANR	2166403	Statement	ap	733:44:18554:18555	2164537	11	True				
ANR	2166404	Statement	","	733:46:18556:18556	2164537	12	True				
ANR	2166405	Statement	char	733:48:18558:18561	2164537	13	True				
ANR	2166406	Statement	*	733:53:18563:18563	2164537	14	True				
ANR	2166407	Statement	)	733:54:18564:18564	2164537	15	True				
ANR	2166408	Statement	)	733:55:18565:18565	2164537	16	True				
ANR	2166409	ExpressionStatement		733:56:18566:18566	2164537	17	True				
ANR	2166410	ExpressionStatement	"s = ap_php_conv_p2 ( ui_num , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	734:6:18574:18648	2164537	18	True				
ANR	2166411	AssignmentExpression	"s = ap_php_conv_p2 ( ui_num , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	0		=			
ANR	2166412	Identifier	s		2164537	0					
ANR	2166413	CallExpression	"ap_php_conv_p2 ( ui_num , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		2164537	1					
ANR	2166414	Callee	ap_php_conv_p2		2164537	0					
ANR	2166415	Identifier	ap_php_conv_p2		2164537	0					
ANR	2166416	ArgumentList	ui_num		2164537	1					
ANR	2166417	Argument	ui_num		2164537	0					
ANR	2166418	Identifier	ui_num		2164537	0					
ANR	2166419	Argument	4		2164537	1					
ANR	2166420	PrimaryExpression	4		2164537	0					
ANR	2166421	Argument	'x'		2164537	2					
ANR	2166422	PrimaryExpression	'x'		2164537	0					
ANR	2166423	Argument	& num_buf [ NUM_BUF_SIZE ]		2164537	3					
ANR	2166424	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		2164537	0					
ANR	2166425	UnaryOperator	&		2164537	0					
ANR	2166426	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		2164537	1					
ANR	2166427	Identifier	num_buf		2164537	0					
ANR	2166428	Identifier	NUM_BUF_SIZE		2164537	1					
ANR	2166429	Argument	& s_len		2164537	4					
ANR	2166430	UnaryOperationExpression	& s_len		2164537	0					
ANR	2166431	UnaryOperator	&		2164537	0					
ANR	2166432	Identifier	s_len		2164537	1					
ANR	2166433	IfStatement	if ( ui_num != 0 )		2164537	19					
ANR	2166434	Condition	ui_num != 0	736:10:18660:18670	2164537	0	True				
ANR	2166435	EqualityExpression	ui_num != 0		2164537	0		!=			
ANR	2166436	Identifier	ui_num		2164537	0					
ANR	2166437	PrimaryExpression	0		2164537	1					
ANR	2166438	CompoundStatement		533:23:11715:11715	2164537	1					
ANR	2166439	ExpressionStatement	* -- s = 'x'	737:7:18682:18692	2164537	0	True				
ANR	2166440	AssignmentExpression	* -- s = 'x'		2164537	0		=			
ANR	2166441	UnaryOperationExpression	* -- s		2164537	0					
ANR	2166442	UnaryOperator	*		2164537	0					
ANR	2166443	UnaryExpression	-- s		2164537	1					
ANR	2166444	IncDec	--		2164537	0					
ANR	2166445	Identifier	s		2164537	1					
ANR	2166446	PrimaryExpression	'x'		2164537	1					
ANR	2166447	ExpressionStatement	* -- s = '0'	738:7:18701:18711	2164537	1	True				
ANR	2166448	AssignmentExpression	* -- s = '0'		2164537	0		=			
ANR	2166449	UnaryOperationExpression	* -- s		2164537	0					
ANR	2166450	UnaryOperator	*		2164537	0					
ANR	2166451	UnaryExpression	-- s		2164537	1					
ANR	2166452	IncDec	--		2164537	0					
ANR	2166453	Identifier	s		2164537	1					
ANR	2166454	PrimaryExpression	'0'		2164537	1					
ANR	2166455	ExpressionStatement	s_len += 2	739:7:18720:18730	2164537	2	True				
ANR	2166456	AssignmentExpression	s_len += 2		2164537	0		+=			
ANR	2166457	Identifier	s_len		2164537	0					
ANR	2166458	PrimaryExpression	2		2164537	1					
ANR	2166459	ElseStatement	else		2164537	0					
ANR	2166460	CompoundStatement		538:12:11794:11794	2164537	0					
ANR	2166461	ExpressionStatement	"s = ""%p"""	742:6:18760:18768	2164537	0	True				
ANR	2166462	AssignmentExpression	"s = ""%p"""		2164537	0		=			
ANR	2166463	Identifier	s		2164537	0					
ANR	2166464	PrimaryExpression	"""%p"""		2164537	1					
ANR	2166465	ExpressionStatement	s_len = 2	743:6:18776:18785	2164537	1	True				
ANR	2166466	AssignmentExpression	s_len = 2		2164537	0		=			
ANR	2166467	Identifier	s_len		2164537	0					
ANR	2166468	PrimaryExpression	2		2164537	1					
ANR	2166469	ExpressionStatement	pad_char = ' '	745:5:18799:18813	2164537	106	True				
ANR	2166470	AssignmentExpression	pad_char = ' '		2164537	0		=			
ANR	2166471	Identifier	pad_char		2164537	0					
ANR	2166472	PrimaryExpression	' '		2164537	1					
ANR	2166473	BreakStatement	break ;	746:5:18820:18825	2164537	107	True				
ANR	2166474	Label	case NUL :	749:4:18833:18841	2164537	108	True				
ANR	2166475	Identifier	NUL		2164537	0					
ANR	2166476	ContinueStatement	continue ;	754:5:18942:18950	2164537	109	True				
ANR	2166477	Label	fmt_error :	757:0:18954:18963	2164537	110	True				
ANR	2166478	Identifier	fmt_error		2164537	0					
ANR	2166479	ExpressionStatement	"php_error ( E_ERROR , ""Illegal length modifier specified '%c' in s[np]printf call"" , * fmt )"	758:4:18969:19055	2164537	111	True				
ANR	2166480	CallExpression	"php_error ( E_ERROR , ""Illegal length modifier specified '%c' in s[np]printf call"" , * fmt )"		2164537	0					
ANR	2166481	Callee	php_error		2164537	0					
ANR	2166482	Identifier	php_error		2164537	0					
ANR	2166483	ArgumentList	E_ERROR		2164537	1					
ANR	2166484	Argument	E_ERROR		2164537	0					
ANR	2166485	Identifier	E_ERROR		2164537	0					
ANR	2166486	Argument	"""Illegal length modifier specified '%c' in s[np]printf call"""		2164537	1					
ANR	2166487	PrimaryExpression	"""Illegal length modifier specified '%c' in s[np]printf call"""		2164537	0					
ANR	2166488	Argument	* fmt		2164537	2					
ANR	2166489	UnaryOperationExpression	* fmt		2164537	0					
ANR	2166490	UnaryOperator	*		2164537	0					
ANR	2166491	Identifier	fmt		2164537	1					
ANR	2166492	Label	default :	769:4:19508:19515	2164537	112	True				
ANR	2166493	Identifier	default		2164537	0					
ANR	2166494	ExpressionStatement	char_buf [ 0 ] = '%'	770:5:19522:19539	2164537	113	True				
ANR	2166495	AssignmentExpression	char_buf [ 0 ] = '%'		2164537	0		=			
ANR	2166496	ArrayIndexing	char_buf [ 0 ]		2164537	0					
ANR	2166497	Identifier	char_buf		2164537	0					
ANR	2166498	PrimaryExpression	0		2164537	1					
ANR	2166499	PrimaryExpression	'%'		2164537	1					
ANR	2166500	ExpressionStatement	char_buf [ 1 ] = * fmt	771:5:19546:19564	2164537	114	True				
ANR	2166501	AssignmentExpression	char_buf [ 1 ] = * fmt		2164537	0		=			
ANR	2166502	ArrayIndexing	char_buf [ 1 ]		2164537	0					
ANR	2166503	Identifier	char_buf		2164537	0					
ANR	2166504	PrimaryExpression	1		2164537	1					
ANR	2166505	UnaryOperationExpression	* fmt		2164537	1					
ANR	2166506	UnaryOperator	*		2164537	0					
ANR	2166507	Identifier	fmt		2164537	1					
ANR	2166508	ExpressionStatement	s = char_buf	772:5:19571:19583	2164537	115	True				
ANR	2166509	AssignmentExpression	s = char_buf		2164537	0		=			
ANR	2166510	Identifier	s		2164537	0					
ANR	2166511	Identifier	char_buf		2164537	1					
ANR	2166512	ExpressionStatement	s_len = 2	773:5:19590:19599	2164537	116	True				
ANR	2166513	AssignmentExpression	s_len = 2		2164537	0		=			
ANR	2166514	Identifier	s_len		2164537	0					
ANR	2166515	PrimaryExpression	2		2164537	1					
ANR	2166516	ExpressionStatement	pad_char = ' '	774:5:19606:19620	2164537	117	True				
ANR	2166517	AssignmentExpression	pad_char = ' '		2164537	0		=			
ANR	2166518	Identifier	pad_char		2164537	0					
ANR	2166519	PrimaryExpression	' '		2164537	1					
ANR	2166520	BreakStatement	break ;	775:5:19627:19632	2164537	118	True				
ANR	2166521	IfStatement	if ( prefix_char != NUL )		2164537	9					
ANR	2166522	Condition	prefix_char != NUL	778:7:19647:19664	2164537	0	True				
ANR	2166523	EqualityExpression	prefix_char != NUL		2164537	0		!=			
ANR	2166524	Identifier	prefix_char		2164537	0					
ANR	2166525	Identifier	NUL		2164537	1					
ANR	2166526	CompoundStatement		575:27:12709:12709	2164537	1					
ANR	2166527	ExpressionStatement	* -- s = prefix_char	779:4:19673:19691	2164537	0	True				
ANR	2166528	AssignmentExpression	* -- s = prefix_char		2164537	0		=			
ANR	2166529	UnaryOperationExpression	* -- s		2164537	0					
ANR	2166530	UnaryOperator	*		2164537	0					
ANR	2166531	UnaryExpression	-- s		2164537	1					
ANR	2166532	IncDec	--		2164537	0					
ANR	2166533	Identifier	s		2164537	1					
ANR	2166534	Identifier	prefix_char		2164537	1					
ANR	2166535	ExpressionStatement	s_len ++	780:4:19697:19704	2164537	1	True				
ANR	2166536	PostIncDecOperationExpression	s_len ++		2164537	0					
ANR	2166537	Identifier	s_len		2164537	0					
ANR	2166538	IncDec	++		2164537	1					
ANR	2166539	IfStatement	if ( adjust_width && adjust == RIGHT && min_width > s_len )		2164537	10					
ANR	2166540	Condition	adjust_width && adjust == RIGHT && min_width > s_len	782:7:19718:19769	2164537	0	True				
ANR	2166541	AndExpression	adjust_width && adjust == RIGHT && min_width > s_len		2164537	0		&&			
ANR	2166542	Identifier	adjust_width		2164537	0					
ANR	2166543	AndExpression	adjust == RIGHT && min_width > s_len		2164537	1		&&			
ANR	2166544	EqualityExpression	adjust == RIGHT		2164537	0		==			
ANR	2166545	Identifier	adjust		2164537	0					
ANR	2166546	Identifier	RIGHT		2164537	1					
ANR	2166547	RelationalExpression	min_width > s_len		2164537	1		>			
ANR	2166548	Identifier	min_width		2164537	0					
ANR	2166549	Identifier	s_len		2164537	1					
ANR	2166550	CompoundStatement		579:61:12814:12814	2164537	1					
ANR	2166551	IfStatement	if ( pad_char == '0' && prefix_char != NUL )		2164537	0					
ANR	2166552	Condition	pad_char == '0' && prefix_char != NUL	783:8:19782:19818	2164537	0	True				
ANR	2166553	AndExpression	pad_char == '0' && prefix_char != NUL		2164537	0		&&			
ANR	2166554	EqualityExpression	pad_char == '0'		2164537	0		==			
ANR	2166555	Identifier	pad_char		2164537	0					
ANR	2166556	PrimaryExpression	'0'		2164537	1					
ANR	2166557	EqualityExpression	prefix_char != NUL		2164537	1		!=			
ANR	2166558	Identifier	prefix_char		2164537	0					
ANR	2166559	Identifier	NUL		2164537	1					
ANR	2166560	CompoundStatement		580:47:12863:12863	2164537	1					
ANR	2166561	ExpressionStatement	"INS_CHAR ( xbuf , * s )"	784:5:19828:19846	2164537	0	True				
ANR	2166562	CallExpression	"INS_CHAR ( xbuf , * s )"		2164537	0					
ANR	2166563	Callee	INS_CHAR		2164537	0					
ANR	2166564	Identifier	INS_CHAR		2164537	0					
ANR	2166565	ArgumentList	xbuf		2164537	1					
ANR	2166566	Argument	xbuf		2164537	0					
ANR	2166567	Identifier	xbuf		2164537	0					
ANR	2166568	Argument	* s		2164537	1					
ANR	2166569	UnaryOperationExpression	* s		2164537	0					
ANR	2166570	UnaryOperator	*		2164537	0					
ANR	2166571	Identifier	s		2164537	1					
ANR	2166572	ExpressionStatement	s ++	785:5:19853:19856	2164537	1	True				
ANR	2166573	PostIncDecOperationExpression	s ++		2164537	0					
ANR	2166574	Identifier	s		2164537	0					
ANR	2166575	IncDec	++		2164537	1					
ANR	2166576	ExpressionStatement	s_len --	786:5:19863:19870	2164537	2	True				
ANR	2166577	PostIncDecOperationExpression	s_len --		2164537	0					
ANR	2166578	Identifier	s_len		2164537	0					
ANR	2166579	IncDec	--		2164537	1					
ANR	2166580	ExpressionStatement	min_width --	787:5:19877:19888	2164537	3	True				
ANR	2166581	PostIncDecOperationExpression	min_width --		2164537	0					
ANR	2166582	Identifier	min_width		2164537	0					
ANR	2166583	IncDec	--		2164537	1					
ANR	2166584	ExpressionStatement	"PAD ( xbuf , min_width - s_len , pad_char )"	789:4:19900:19938	2164537	1	True				
ANR	2166585	CallExpression	"PAD ( xbuf , min_width - s_len , pad_char )"		2164537	0					
ANR	2166586	Callee	PAD		2164537	0					
ANR	2166587	Identifier	PAD		2164537	0					
ANR	2166588	ArgumentList	xbuf		2164537	1					
ANR	2166589	Argument	xbuf		2164537	0					
ANR	2166590	Identifier	xbuf		2164537	0					
ANR	2166591	Argument	min_width - s_len		2164537	1					
ANR	2166592	AdditiveExpression	min_width - s_len		2164537	0		-			
ANR	2166593	Identifier	min_width		2164537	0					
ANR	2166594	Identifier	s_len		2164537	1					
ANR	2166595	Argument	pad_char		2164537	2					
ANR	2166596	Identifier	pad_char		2164537	0					
ANR	2166597	ExpressionStatement	"INS_STRING ( xbuf , s , s_len )"	794:3:19987:20013	2164537	11	True				
ANR	2166598	CallExpression	"INS_STRING ( xbuf , s , s_len )"		2164537	0					
ANR	2166599	Callee	INS_STRING		2164537	0					
ANR	2166600	Identifier	INS_STRING		2164537	0					
ANR	2166601	ArgumentList	xbuf		2164537	1					
ANR	2166602	Argument	xbuf		2164537	0					
ANR	2166603	Identifier	xbuf		2164537	0					
ANR	2166604	Argument	s		2164537	1					
ANR	2166605	Identifier	s		2164537	0					
ANR	2166606	Argument	s_len		2164537	2					
ANR	2166607	Identifier	s_len		2164537	0					
ANR	2166608	IfStatement	if ( adjust_width && adjust == LEFT && min_width > s_len )		2164537	12					
ANR	2166609	Condition	adjust_width && adjust == LEFT && min_width > s_len	796:7:20023:20073	2164537	0	True				
ANR	2166610	AndExpression	adjust_width && adjust == LEFT && min_width > s_len		2164537	0		&&			
ANR	2166611	Identifier	adjust_width		2164537	0					
ANR	2166612	AndExpression	adjust == LEFT && min_width > s_len		2164537	1		&&			
ANR	2166613	EqualityExpression	adjust == LEFT		2164537	0		==			
ANR	2166614	Identifier	adjust		2164537	0					
ANR	2166615	Identifier	LEFT		2164537	1					
ANR	2166616	RelationalExpression	min_width > s_len		2164537	1		>			
ANR	2166617	Identifier	min_width		2164537	0					
ANR	2166618	Identifier	s_len		2164537	1					
ANR	2166619	ExpressionStatement	"PAD ( xbuf , min_width - s_len , pad_char )"	797:4:20080:20118	2164537	1	True				
ANR	2166620	CallExpression	"PAD ( xbuf , min_width - s_len , pad_char )"		2164537	0					
ANR	2166621	Callee	PAD		2164537	0					
ANR	2166622	Identifier	PAD		2164537	0					
ANR	2166623	ArgumentList	xbuf		2164537	1					
ANR	2166624	Argument	xbuf		2164537	0					
ANR	2166625	Identifier	xbuf		2164537	0					
ANR	2166626	Argument	min_width - s_len		2164537	1					
ANR	2166627	AdditiveExpression	min_width - s_len		2164537	0		-			
ANR	2166628	Identifier	min_width		2164537	0					
ANR	2166629	Identifier	s_len		2164537	1					
ANR	2166630	Argument	pad_char		2164537	2					
ANR	2166631	Identifier	pad_char		2164537	0					
ANR	2166632	IfStatement	if ( free_zcopy )		2164537	13					
ANR	2166633	Condition	free_zcopy	798:7:20127:20136	2164537	0	True				
ANR	2166634	Identifier	free_zcopy		2164537	0					
ANR	2166635	CompoundStatement		595:19:13181:13181	2164537	1					
ANR	2166636	ExpressionStatement	zval_dtor ( & zcopy )	799:4:20145:20162	2164537	0	True				
ANR	2166637	CallExpression	zval_dtor ( & zcopy )		2164537	0					
ANR	2166638	Callee	zval_dtor		2164537	0					
ANR	2166639	Identifier	zval_dtor		2164537	0					
ANR	2166640	ArgumentList	& zcopy		2164537	1					
ANR	2166641	Argument	& zcopy		2164537	0					
ANR	2166642	UnaryOperationExpression	& zcopy		2164537	0					
ANR	2166643	UnaryOperator	&		2164537	0					
ANR	2166644	Identifier	zcopy		2164537	1					
ANR	2166645	Label	skip_output :	802:0:20173:20184	2164537	1	True				
ANR	2166646	Identifier	skip_output		2164537	0					
ANR	2166647	ExpressionStatement	fmt ++	803:2:20188:20193	2164537	2	True				
ANR	2166648	PostIncDecOperationExpression	fmt ++		2164537	0					
ANR	2166649	Identifier	fmt		2164537	0					
ANR	2166650	IncDec	++		2164537	1					
ANR	2166651	ReturnStatement	return ;	805:1:20199:20205	2164537	22	True				
ANR	2166652	ReturnType	static void		2164537	1					
ANR	2166653	Identifier	xbuf_format_converter		2164537	2					
ANR	2166654	ParameterList	"smart_str * xbuf , const char * fmt , va_list ap"		2164537	3					
ANR	2166655	Parameter	smart_str * xbuf	203:34:6901:6915	2164537	0	True				
ANR	2166656	ParameterType	smart_str *		2164537	0					
ANR	2166657	Identifier	xbuf		2164537	1					
ANR	2166658	Parameter	const char * fmt	203:51:6918:6932	2164537	1	True				
ANR	2166659	ParameterType	const char *		2164537	0					
ANR	2166660	Identifier	fmt		2164537	1					
ANR	2166661	Parameter	va_list ap	203:68:6935:6944	2164537	2	True				
ANR	2166662	ParameterType	va_list		2164537	0					
ANR	2166663	Identifier	ap		2164537	1					
ANR	2166664	CFGEntryNode	ENTRY		2164537		True				
ANR	2166665	CFGExitNode	EXIT		2164537		True				
ANR	2166666	InfiniteForNode	true		2164537		True				
ANR	2166667	Symbol	lconv		2164537						
ANR	2166668	Symbol	LCONV_DECIMAL_POINT		2164537						
ANR	2166669	Symbol	& s_len		2164537						
ANR	2166670	Symbol	precision		2164537						
ANR	2166671	Symbol	modifier		2164537						
ANR	2166672	Symbol	strchr		2164537						
ANR	2166673	Symbol	zcopy		2164537						
ANR	2166674	Symbol	size_t		2164537						
ANR	2166675	Symbol	fmt		2164537						
ANR	2166676	Symbol	& is_negative		2164537						
ANR	2166677	Symbol	uintmax_t		2164537						
ANR	2166678	Symbol	strlen		2164537						
ANR	2166679	Symbol	zend_isinf		2164537						
ANR	2166680	Symbol	adjust_precision		2164537						
ANR	2166681	Symbol	php_gcvt		2164537						
ANR	2166682	Symbol	isdigit		2164537						
ANR	2166683	Symbol	va_arg		2164537						
ANR	2166684	Symbol	char_buf		2164537						
ANR	2166685	Symbol	intmax_t		2164537						
ANR	2166686	Symbol	NULL		2164537						
ANR	2166687	Symbol	LEFT		2164537						
ANR	2166688	Symbol	double		2164537						
ANR	2166689	Symbol	* -- s		2164537						
ANR	2166690	Symbol	ap		2164537						
ANR	2166691	Symbol	ptrdiff_t		2164537						
ANR	2166692	Symbol	ap_php_conv_p2		2164537						
ANR	2166693	Symbol	zvp		2164537						
ANR	2166694	Symbol	LM_LONG_DOUBLE		2164537						
ANR	2166695	Symbol	free_zcopy		2164537						
ANR	2166696	Symbol	adjust		2164537						
ANR	2166697	Symbol	is_negative		2164537						
ANR	2166698	Symbol	adjust_width		2164537						
ANR	2166699	Symbol	ui_num		2164537						
ANR	2166700	Symbol	strnlen		2164537						
ANR	2166701	Symbol	* s ++		2164537						
ANR	2166702	Symbol	NO		2164537						
ANR	2166703	Symbol	xbuf		2164537						
ANR	2166704	Symbol	ssize_t		2164537						
ANR	2166705	Symbol	i_num		2164537						
ANR	2166706	Symbol	islower		2164537						
ANR	2166707	Symbol	YES		2164537						
ANR	2166708	Symbol	s_len		2164537						
ANR	2166709	Symbol	* fmt		2164537						
ANR	2166710	Symbol	print_sign		2164537						
ANR	2166711	Symbol	& free_zcopy		2164537						
ANR	2166712	Symbol	FLOAT_DIGITS		2164537						
ANR	2166713	Symbol	& lconv		2164537						
ANR	2166714	Symbol	pad_char		2164537						
ANR	2166715	Symbol	LM_PTRDIFF_T		2164537						
ANR	2166716	Symbol	ap_php_conv_10		2164537						
ANR	2166717	Symbol	LM_SIZE_T		2164537						
ANR	2166718	Symbol	LM_INTMAX_T		2164537						
ANR	2166719	Symbol	& zcopy		2164537						
ANR	2166720	Symbol	RIGHT		2164537						
ANR	2166721	Symbol	FORMAT_CONV_MAX_PRECISION		2164537						
ANR	2166722	Symbol	* ( fmt + 1 )		2164537						
ANR	2166723	Symbol	zend_isnan		2164537						
ANR	2166724	Symbol	Z_STRLEN_P		2164537						
ANR	2166725	Symbol	LM_STD		2164537						
ANR	2166726	Symbol	print_blank		2164537						
ANR	2166727	Symbol	min_width		2164537						
ANR	2166728	Symbol	isascii		2164537						
ANR	2166729	Symbol	LM_LONG_LONG		2164537						
ANR	2166730	Symbol	NUL		2164537						
ANR	2166731	Symbol	S_NULL_LEN		2164537						
ANR	2166732	Symbol	alternate_form		2164537						
ANR	2166733	Symbol	LM_LONG		2164537						
ANR	2166734	Symbol	Z_STRVAL_P		2164537						
ANR	2166735	Symbol	int		2164537						
ANR	2166736	Symbol	* char_buf		2164537						
ANR	2166737	Symbol	S_NULL		2164537						
ANR	2166738	Symbol	php_conv_fp		2164537						
ANR	2166739	Symbol	s		2164537						
ANR	2166740	Symbol	E_ERROR		2164537						
ANR	2166741	Symbol	prefix_char		2164537						
ANR	2166742	Symbol	fp_num		2164537						
ANR	2166743	Symbol	wide_int		2164537						
ANR	2166744	Symbol	NUM_BUF_SIZE		2164537						
ANR	2166745	Symbol	num_buf		2164537						
ANR	2166746	Symbol	u_wide_int		2164537						
ANR	2166747	Symbol	* s		2164537						
ANR	2166748	Function	vspprintf	812:0:20279:20707							
ANR	2166749	FunctionDef	"vspprintf (char * * pbuf , size_t max_len , const char * format , va_list ap)"		2166748	0					
ANR	2166750	CompoundStatement		813:0:20371:20707	2166748	0					
ANR	2166751	IdentifierDeclStatement	smart_str xbuf = { 0 } ;	814:1:20374:20394	2166748	0	True				
ANR	2166752	IdentifierDecl	xbuf = { 0 }		2166748	0					
ANR	2166753	IdentifierDeclType	smart_str		2166748	0					
ANR	2166754	Identifier	xbuf		2166748	1					
ANR	2166755	AssignmentExpression	xbuf = { 0 }		2166748	2		=			
ANR	2166756	Identifier	xbuf		2166748	0					
ANR	2166757	InitializerList	0		2166748	1					
ANR	2166758	PrimaryExpression	0		2166748	0					
ANR	2166759	IfStatement	if ( ! pbuf )		2166748	1					
ANR	2166760	Condition	! pbuf	818:4:20518:20522	2166748	0	True				
ANR	2166761	UnaryOperationExpression	! pbuf		2166748	0					
ANR	2166762	UnaryOperator	!		2166748	0					
ANR	2166763	Identifier	pbuf		2166748	1					
ANR	2166764	CompoundStatement		6:11:153:153	2166748	1					
ANR	2166765	ReturnStatement	return 0 ;	819:2:20529:20537	2166748	0	True				
ANR	2166766	PrimaryExpression	0		2166748	0					
ANR	2166767	ExpressionStatement	"xbuf_format_converter ( & xbuf , format , ap )"	821:1:20543:20583	2166748	2	True				
ANR	2166768	CallExpression	"xbuf_format_converter ( & xbuf , format , ap )"		2166748	0					
ANR	2166769	Callee	xbuf_format_converter		2166748	0					
ANR	2166770	Identifier	xbuf_format_converter		2166748	0					
ANR	2166771	ArgumentList	& xbuf		2166748	1					
ANR	2166772	Argument	& xbuf		2166748	0					
ANR	2166773	UnaryOperationExpression	& xbuf		2166748	0					
ANR	2166774	UnaryOperator	&		2166748	0					
ANR	2166775	Identifier	xbuf		2166748	1					
ANR	2166776	Argument	format		2166748	1					
ANR	2166777	Identifier	format		2166748	0					
ANR	2166778	Argument	ap		2166748	2					
ANR	2166779	Identifier	ap		2166748	0					
ANR	2166780	IfStatement	if ( max_len && xbuf . len > max_len )		2166748	3					
ANR	2166781	Condition	max_len && xbuf . len > max_len	823:5:20591:20619	2166748	0	True				
ANR	2166782	AndExpression	max_len && xbuf . len > max_len		2166748	0		&&			
ANR	2166783	Identifier	max_len		2166748	0					
ANR	2166784	RelationalExpression	xbuf . len > max_len		2166748	1		>			
ANR	2166785	MemberAccess	xbuf . len		2166748	0					
ANR	2166786	Identifier	xbuf		2166748	0					
ANR	2166787	Identifier	len		2166748	1					
ANR	2166788	Identifier	max_len		2166748	1					
ANR	2166789	CompoundStatement		11:36:250:250	2166748	1					
ANR	2166790	ExpressionStatement	xbuf . len = max_len	824:2:20626:20644	2166748	0	True				
ANR	2166791	AssignmentExpression	xbuf . len = max_len		2166748	0		=			
ANR	2166792	MemberAccess	xbuf . len		2166748	0					
ANR	2166793	Identifier	xbuf		2166748	0					
ANR	2166794	Identifier	len		2166748	1					
ANR	2166795	Identifier	max_len		2166748	1					
ANR	2166796	ExpressionStatement	smart_str_0 ( & xbuf )	826:1:20650:20668	2166748	4	True				
ANR	2166797	CallExpression	smart_str_0 ( & xbuf )		2166748	0					
ANR	2166798	Callee	smart_str_0		2166748	0					
ANR	2166799	Identifier	smart_str_0		2166748	0					
ANR	2166800	ArgumentList	& xbuf		2166748	1					
ANR	2166801	Argument	& xbuf		2166748	0					
ANR	2166802	UnaryOperationExpression	& xbuf		2166748	0					
ANR	2166803	UnaryOperator	&		2166748	0					
ANR	2166804	Identifier	xbuf		2166748	1					
ANR	2166805	ExpressionStatement	* pbuf = xbuf . c	828:1:20672:20686	2166748	5	True				
ANR	2166806	AssignmentExpression	* pbuf = xbuf . c		2166748	0		=			
ANR	2166807	UnaryOperationExpression	* pbuf		2166748	0					
ANR	2166808	UnaryOperator	*		2166748	0					
ANR	2166809	Identifier	pbuf		2166748	1					
ANR	2166810	MemberAccess	xbuf . c		2166748	1					
ANR	2166811	Identifier	xbuf		2166748	0					
ANR	2166812	Identifier	c		2166748	1					
ANR	2166813	ReturnStatement	return xbuf . len ;	830:1:20690:20705	2166748	6	True				
ANR	2166814	MemberAccess	xbuf . len		2166748	0					
ANR	2166815	Identifier	xbuf		2166748	0					
ANR	2166816	Identifier	len		2166748	1					
ANR	2166817	ReturnType	PHPAPI int		2166748	1					
ANR	2166818	Identifier	vspprintf		2166748	2					
ANR	2166819	ParameterList	"char * * pbuf , size_t max_len , const char * format , va_list ap"		2166748	3					
ANR	2166820	Parameter	char * * pbuf	812:21:20300:20310	2166748	0	True				
ANR	2166821	ParameterType	char * *		2166748	0					
ANR	2166822	Identifier	pbuf		2166748	1					
ANR	2166823	Parameter	size_t max_len	812:34:20313:20326	2166748	1	True				
ANR	2166824	ParameterType	size_t		2166748	0					
ANR	2166825	Identifier	max_len		2166748	1					
ANR	2166826	Parameter	const char * format	812:50:20329:20346	2166748	2	True				
ANR	2166827	ParameterType	const char *		2166748	0					
ANR	2166828	Identifier	format		2166748	1					
ANR	2166829	Parameter	va_list ap	812:70:20349:20358	2166748	3	True				
ANR	2166830	ParameterType	va_list		2166748	0					
ANR	2166831	Identifier	ap		2166748	1					
ANR	2166832	CFGEntryNode	ENTRY		2166748		True				
ANR	2166833	CFGExitNode	EXIT		2166748		True				
ANR	2166834	Symbol	xbuf		2166748						
ANR	2166835	Symbol	& xbuf		2166748						
ANR	2166836	Symbol	xbuf . len		2166748						
ANR	2166837	Symbol	pbuf		2166748						
ANR	2166838	Symbol	format		2166748						
ANR	2166839	Symbol	* pbuf		2166748						
ANR	2166840	Symbol	max_len		2166748						
ANR	2166841	Symbol	ap		2166748						
ANR	2166842	Symbol	xbuf . c		2166748						
ANR	2166843	Function	spprintf	834:0:20720:20923							
ANR	2166844	FunctionDef	"spprintf (char * * pbuf , size_t max_len , const char * format)"		2166843	0					
ANR	2166845	CompoundStatement		835:0:20804:20923	2166843	0					
ANR	2166846	IdentifierDeclStatement	int cc ;	836:1:20807:20813	2166843	0	True				
ANR	2166847	IdentifierDecl	cc		2166843	0					
ANR	2166848	IdentifierDeclType	int		2166843	0					
ANR	2166849	Identifier	cc		2166843	1					
ANR	2166850	IdentifierDeclStatement	va_list ap ;	837:1:20816:20826	2166843	1	True				
ANR	2166851	IdentifierDecl	ap		2166843	0					
ANR	2166852	IdentifierDeclType	va_list		2166843	0					
ANR	2166853	Identifier	ap		2166843	1					
ANR	2166854	ExpressionStatement	"va_start ( ap , format )"	839:1:20830:20850	2166843	2	True				
ANR	2166855	CallExpression	"va_start ( ap , format )"		2166843	0					
ANR	2166856	Callee	va_start		2166843	0					
ANR	2166857	Identifier	va_start		2166843	0					
ANR	2166858	ArgumentList	ap		2166843	1					
ANR	2166859	Argument	ap		2166843	0					
ANR	2166860	Identifier	ap		2166843	0					
ANR	2166861	Argument	format		2166843	1					
ANR	2166862	Identifier	format		2166843	0					
ANR	2166863	ExpressionStatement	"cc = vspprintf ( pbuf , max_len , format , ap )"	840:1:20853:20894	2166843	3	True				
ANR	2166864	AssignmentExpression	"cc = vspprintf ( pbuf , max_len , format , ap )"		2166843	0		=			
ANR	2166865	Identifier	cc		2166843	0					
ANR	2166866	CallExpression	"vspprintf ( pbuf , max_len , format , ap )"		2166843	1					
ANR	2166867	Callee	vspprintf		2166843	0					
ANR	2166868	Identifier	vspprintf		2166843	0					
ANR	2166869	ArgumentList	pbuf		2166843	1					
ANR	2166870	Argument	pbuf		2166843	0					
ANR	2166871	Identifier	pbuf		2166843	0					
ANR	2166872	Argument	max_len		2166843	1					
ANR	2166873	Identifier	max_len		2166843	0					
ANR	2166874	Argument	format		2166843	2					
ANR	2166875	Identifier	format		2166843	0					
ANR	2166876	Argument	ap		2166843	3					
ANR	2166877	Identifier	ap		2166843	0					
ANR	2166878	ExpressionStatement	va_end ( ap )	841:1:20897:20907	2166843	4	True				
ANR	2166879	CallExpression	va_end ( ap )		2166843	0					
ANR	2166880	Callee	va_end		2166843	0					
ANR	2166881	Identifier	va_end		2166843	0					
ANR	2166882	ArgumentList	ap		2166843	1					
ANR	2166883	Argument	ap		2166843	0					
ANR	2166884	Identifier	ap		2166843	0					
ANR	2166885	ReturnStatement	return ( cc ) ;	842:1:20910:20921	2166843	5	True				
ANR	2166886	Identifier	cc		2166843	0					
ANR	2166887	ReturnType	PHPAPI int		2166843	1					
ANR	2166888	Identifier	spprintf		2166843	2					
ANR	2166889	ParameterList	"char * * pbuf , size_t max_len , const char * format"		2166843	3					
ANR	2166890	Parameter	char * * pbuf	834:20:20740:20750	2166843	0	True				
ANR	2166891	ParameterType	char * *		2166843	0					
ANR	2166892	Identifier	pbuf		2166843	1					
ANR	2166893	Parameter	size_t max_len	834:33:20753:20766	2166843	1	True				
ANR	2166894	ParameterType	size_t		2166843	0					
ANR	2166895	Identifier	max_len		2166843	1					
ANR	2166896	Parameter	const char * format	834:49:20769:20786	2166843	2	True				
ANR	2166897	ParameterType	const char *		2166843	0					
ANR	2166898	Identifier	format		2166843	1					
ANR	2166899	CFGEntryNode	ENTRY		2166843		True				
ANR	2166900	CFGExitNode	EXIT		2166843		True				
ANR	2166901	Symbol	cc		2166843						
ANR	2166902	Symbol	pbuf		2166843						
ANR	2166903	Symbol	format		2166843						
ANR	2166904	Symbol	vspprintf		2166843						
ANR	2166905	Symbol	max_len		2166843						
ANR	2166906	Symbol	ap		2166843						
