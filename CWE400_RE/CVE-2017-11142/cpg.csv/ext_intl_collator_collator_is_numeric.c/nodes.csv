command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	545339	File	data/converged/CVE-2017-11142_php-src/ext_intl_collator_collator_is_numeric.c								
ANR	545340	Function	collator_u_strtod	34:0:1434:2759							
ANR	545341	FunctionDef	"collator_u_strtod (const UChar * nptr , UChar * * endptr)"		545340	0					
ANR	545342	CompoundStatement		35:0:1511:2759	545340	0					
ANR	545343	IdentifierDeclStatement	"const UChar * u = nptr , * nstart ;"	36:1:1514:1544	545340	0	True				
ANR	545344	IdentifierDecl	* u = nptr		545340	0					
ANR	545345	IdentifierDeclType	const UChar *		545340	0					
ANR	545346	Identifier	u		545340	1					
ANR	545347	AssignmentExpression	* u = nptr		545340	2		=			
ANR	545348	Identifier	nptr		545340	0					
ANR	545349	Identifier	nptr		545340	1					
ANR	545350	IdentifierDecl	* nstart		545340	1					
ANR	545351	IdentifierDeclType	const UChar *		545340	0					
ANR	545352	Identifier	nstart		545340	1					
ANR	545353	IdentifierDeclStatement	UChar c = * u ;	37:1:1547:1559	545340	1	True				
ANR	545354	IdentifierDecl	c = * u		545340	0					
ANR	545355	IdentifierDeclType	UChar		545340	0					
ANR	545356	Identifier	c		545340	1					
ANR	545357	AssignmentExpression	c = * u		545340	2		=			
ANR	545358	Identifier	c		545340	0					
ANR	545359	UnaryOperationExpression	* u		545340	1					
ANR	545360	UnaryOperator	*		545340	0					
ANR	545361	Identifier	u		545340	1					
ANR	545362	IdentifierDeclStatement	int any = 0 ;	38:1:1562:1573	545340	2	True				
ANR	545363	IdentifierDecl	any = 0		545340	0					
ANR	545364	IdentifierDeclType	int		545340	0					
ANR	545365	Identifier	any		545340	1					
ANR	545366	AssignmentExpression	any = 0		545340	2		=			
ANR	545367	Identifier	any		545340	0					
ANR	545368	PrimaryExpression	0		545340	1					
ANR	545369	ExpressionStatement	ALLOCA_FLAG ( use_heap )	39:1:1576:1597	545340	3	True				
ANR	545370	CallExpression	ALLOCA_FLAG ( use_heap )		545340	0					
ANR	545371	Callee	ALLOCA_FLAG		545340	0					
ANR	545372	Identifier	ALLOCA_FLAG		545340	0					
ANR	545373	ArgumentList	use_heap		545340	1					
ANR	545374	Argument	use_heap		545340	0					
ANR	545375	Identifier	use_heap		545340	0					
ANR	545376	WhileStatement	while ( u_isspace ( c ) )		545340	4					
ANR	545377	Condition	u_isspace ( c )	41:8:1608:1619	545340	0	True				
ANR	545378	CallExpression	u_isspace ( c )		545340	0					
ANR	545379	Callee	u_isspace		545340	0					
ANR	545380	Identifier	u_isspace		545340	0					
ANR	545381	ArgumentList	c		545340	1					
ANR	545382	Argument	c		545340	0					
ANR	545383	Identifier	c		545340	0					
ANR	545384	CompoundStatement		7:22:110:110	545340	1					
ANR	545385	ExpressionStatement	c = * ++ u	42:2:1626:1634	545340	0	True				
ANR	545386	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545387	Identifier	c		545340	0					
ANR	545388	UnaryOperationExpression	* ++ u		545340	1					
ANR	545389	UnaryOperator	*		545340	0					
ANR	545390	UnaryExpression	++ u		545340	1					
ANR	545391	IncDec	++		545340	0					
ANR	545392	Identifier	u		545340	1					
ANR	545393	ExpressionStatement	nstart = u	44:1:1640:1650	545340	5	True				
ANR	545394	AssignmentExpression	nstart = u		545340	0		=			
ANR	545395	Identifier	nstart		545340	0					
ANR	545396	Identifier	u		545340	1					
ANR	545397	IfStatement	if ( c == 0x2D || c == 0x2B )		545340	6					
ANR	545398	Condition	c == 0x2D || c == 0x2B	46:5:1658:1687	545340	0	True				
ANR	545399	OrExpression	c == 0x2D || c == 0x2B		545340	0		||			
ANR	545400	EqualityExpression	c == 0x2D		545340	0		==			
ANR	545401	Identifier	c		545340	0					
ANR	545402	PrimaryExpression	0x2D		545340	1					
ANR	545403	EqualityExpression	c == 0x2B		545340	1		==			
ANR	545404	Identifier	c		545340	0					
ANR	545405	PrimaryExpression	0x2B		545340	1					
ANR	545406	CompoundStatement		12:45:186:186	545340	1					
ANR	545407	ExpressionStatement	c = * ++ u	47:2:1702:1710	545340	0	True				
ANR	545408	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545409	Identifier	c		545340	0					
ANR	545410	UnaryOperationExpression	* ++ u		545340	1					
ANR	545411	UnaryOperator	*		545340	0					
ANR	545412	UnaryExpression	++ u		545340	1					
ANR	545413	IncDec	++		545340	0					
ANR	545414	Identifier	u		545340	1					
ANR	545415	WhileStatement	while ( c >= 0x30 && c <= 0x39 )		545340	7					
ANR	545416	Condition	c >= 0x30 && c <= 0x39	50:8:1724:1753	545340	0	True				
ANR	545417	AndExpression	c >= 0x30 && c <= 0x39		545340	0		&&			
ANR	545418	RelationalExpression	c >= 0x30		545340	0		>=			
ANR	545419	Identifier	c		545340	0					
ANR	545420	PrimaryExpression	0x30		545340	1					
ANR	545421	RelationalExpression	c <= 0x39		545340	1		<=			
ANR	545422	Identifier	c		545340	0					
ANR	545423	PrimaryExpression	0x39		545340	1					
ANR	545424	CompoundStatement		16:48:252:252	545340	1					
ANR	545425	ExpressionStatement	any = 1	51:2:1768:1775	545340	0	True				
ANR	545426	AssignmentExpression	any = 1		545340	0		=			
ANR	545427	Identifier	any		545340	0					
ANR	545428	PrimaryExpression	1		545340	1					
ANR	545429	ExpressionStatement	c = * ++ u	52:2:1779:1787	545340	1	True				
ANR	545430	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545431	Identifier	c		545340	0					
ANR	545432	UnaryOperationExpression	* ++ u		545340	1					
ANR	545433	UnaryOperator	*		545340	0					
ANR	545434	UnaryExpression	++ u		545340	1					
ANR	545435	IncDec	++		545340	0					
ANR	545436	Identifier	u		545340	1					
ANR	545437	IfStatement	if ( c == 0x2E )		545340	8					
ANR	545438	Condition	c == 0x2E	55:5:1798:1806	545340	0	True				
ANR	545439	EqualityExpression	c == 0x2E		545340	0		==			
ANR	545440	Identifier	c		545340	0					
ANR	545441	PrimaryExpression	0x2E		545340	1					
ANR	545442	CompoundStatement		21:24:305:305	545340	1					
ANR	545443	ExpressionStatement	c = * ++ u	56:2:1821:1829	545340	0	True				
ANR	545444	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545445	Identifier	c		545340	0					
ANR	545446	UnaryOperationExpression	* ++ u		545340	1					
ANR	545447	UnaryOperator	*		545340	0					
ANR	545448	UnaryExpression	++ u		545340	1					
ANR	545449	IncDec	++		545340	0					
ANR	545450	Identifier	u		545340	1					
ANR	545451	WhileStatement	while ( c >= 0x30 && c <= 0x39 )		545340	1					
ANR	545452	Condition	c >= 0x30 && c <= 0x39	57:9:1840:1869	545340	0	True				
ANR	545453	AndExpression	c >= 0x30 && c <= 0x39		545340	0		&&			
ANR	545454	RelationalExpression	c >= 0x30		545340	0		>=			
ANR	545455	Identifier	c		545340	0					
ANR	545456	PrimaryExpression	0x30		545340	1					
ANR	545457	RelationalExpression	c <= 0x39		545340	1		<=			
ANR	545458	Identifier	c		545340	0					
ANR	545459	PrimaryExpression	0x39		545340	1					
ANR	545460	CompoundStatement		23:49:368:368	545340	1					
ANR	545461	ExpressionStatement	any = 1	58:3:1885:1892	545340	0	True				
ANR	545462	AssignmentExpression	any = 1		545340	0		=			
ANR	545463	Identifier	any		545340	0					
ANR	545464	PrimaryExpression	1		545340	1					
ANR	545465	ExpressionStatement	c = * ++ u	59:3:1897:1905	545340	1	True				
ANR	545466	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545467	Identifier	c		545340	0					
ANR	545468	UnaryOperationExpression	* ++ u		545340	1					
ANR	545469	UnaryOperator	*		545340	0					
ANR	545470	UnaryExpression	++ u		545340	1					
ANR	545471	IncDec	++		545340	0					
ANR	545472	Identifier	u		545340	1					
ANR	545473	IfStatement	if ( ( c == 0x65 || c == 0x45 ) && any )		545340	9					
ANR	545474	Condition	( c == 0x65 || c == 0x45 ) && any	63:5:1920:1966	545340	0	True				
ANR	545475	AndExpression	( c == 0x65 || c == 0x45 ) && any		545340	0		&&			
ANR	545476	OrExpression	c == 0x65 || c == 0x45		545340	0		||			
ANR	545477	EqualityExpression	c == 0x65		545340	0		==			
ANR	545478	Identifier	c		545340	0					
ANR	545479	PrimaryExpression	0x65		545340	1					
ANR	545480	EqualityExpression	c == 0x45		545340	1		==			
ANR	545481	Identifier	c		545340	0					
ANR	545482	PrimaryExpression	0x45		545340	1					
ANR	545483	Identifier	any		545340	1					
ANR	545484	CompoundStatement		31:2:483:498	545340	1					
ANR	545485	IdentifierDeclStatement	const UChar * e = u ;	64:2:1973:1991	545340	0	True				
ANR	545486	IdentifierDecl	* e = u		545340	0					
ANR	545487	IdentifierDeclType	const UChar *		545340	0					
ANR	545488	Identifier	e		545340	1					
ANR	545489	AssignmentExpression	* e = u		545340	2		=			
ANR	545490	Identifier	u		545340	0					
ANR	545491	Identifier	u		545340	1					
ANR	545492	IdentifierDeclStatement	int any_exp = 0 ;	65:2:1995:2010	545340	1	True				
ANR	545493	IdentifierDecl	any_exp = 0		545340	0					
ANR	545494	IdentifierDeclType	int		545340	0					
ANR	545495	Identifier	any_exp		545340	1					
ANR	545496	AssignmentExpression	any_exp = 0		545340	2		=			
ANR	545497	Identifier	any_exp		545340	0					
ANR	545498	PrimaryExpression	0		545340	1					
ANR	545499	ExpressionStatement	c = * ++ u	67:2:2015:2023	545340	2	True				
ANR	545500	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545501	Identifier	c		545340	0					
ANR	545502	UnaryOperationExpression	* ++ u		545340	1					
ANR	545503	UnaryOperator	*		545340	0					
ANR	545504	UnaryExpression	++ u		545340	1					
ANR	545505	IncDec	++		545340	0					
ANR	545506	Identifier	u		545340	1					
ANR	545507	IfStatement	if ( c == 0x2D || c == 0x2B )		545340	3					
ANR	545508	Condition	c == 0x2D || c == 0x2B	68:6:2031:2060	545340	0	True				
ANR	545509	OrExpression	c == 0x2D || c == 0x2B		545340	0		||			
ANR	545510	EqualityExpression	c == 0x2D		545340	0		==			
ANR	545511	Identifier	c		545340	0					
ANR	545512	PrimaryExpression	0x2D		545340	1					
ANR	545513	EqualityExpression	c == 0x2B		545340	1		==			
ANR	545514	Identifier	c		545340	0					
ANR	545515	PrimaryExpression	0x2B		545340	1					
ANR	545516	CompoundStatement		34:46:559:559	545340	1					
ANR	545517	ExpressionStatement	c = * ++ u	69:3:2076:2084	545340	0	True				
ANR	545518	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545519	Identifier	c		545340	0					
ANR	545520	UnaryOperationExpression	* ++ u		545340	1					
ANR	545521	UnaryOperator	*		545340	0					
ANR	545522	UnaryExpression	++ u		545340	1					
ANR	545523	IncDec	++		545340	0					
ANR	545524	Identifier	u		545340	1					
ANR	545525	WhileStatement	while ( c >= 0x30 && c <= 0x39 )		545340	4					
ANR	545526	Condition	c >= 0x30 && c <= 0x39	72:9:2100:2129	545340	0	True				
ANR	545527	AndExpression	c >= 0x30 && c <= 0x39		545340	0		&&			
ANR	545528	RelationalExpression	c >= 0x30		545340	0		>=			
ANR	545529	Identifier	c		545340	0					
ANR	545530	PrimaryExpression	0x30		545340	1					
ANR	545531	RelationalExpression	c <= 0x39		545340	1		<=			
ANR	545532	Identifier	c		545340	0					
ANR	545533	PrimaryExpression	0x39		545340	1					
ANR	545534	CompoundStatement		38:49:628:628	545340	1					
ANR	545535	ExpressionStatement	any_exp = 1	73:3:2145:2156	545340	0	True				
ANR	545536	AssignmentExpression	any_exp = 1		545340	0		=			
ANR	545537	Identifier	any_exp		545340	0					
ANR	545538	PrimaryExpression	1		545340	1					
ANR	545539	ExpressionStatement	c = * ++ u	74:3:2161:2169	545340	1	True				
ANR	545540	AssignmentExpression	c = * ++ u		545340	0		=			
ANR	545541	Identifier	c		545340	0					
ANR	545542	UnaryOperationExpression	* ++ u		545340	1					
ANR	545543	UnaryOperator	*		545340	0					
ANR	545544	UnaryExpression	++ u		545340	1					
ANR	545545	IncDec	++		545340	0					
ANR	545546	Identifier	u		545340	1					
ANR	545547	IfStatement	if ( ! any_exp )		545340	5					
ANR	545548	Condition	! any_exp	77:6:2182:2189	545340	0	True				
ANR	545549	UnaryOperationExpression	! any_exp		545340	0					
ANR	545550	UnaryOperator	!		545340	0					
ANR	545551	Identifier	any_exp		545340	1					
ANR	545552	CompoundStatement		43:16:680:680	545340	1					
ANR	545553	ExpressionStatement	u = e	78:3:2197:2202	545340	0	True				
ANR	545554	AssignmentExpression	u = e		545340	0		=			
ANR	545555	Identifier	u		545340	0					
ANR	545556	Identifier	e		545340	1					
ANR	545557	IfStatement	if ( any )		545340	10					
ANR	545558	Condition	any	82:5:2217:2219	545340	0	True				
ANR	545559	Identifier	any		545340	0					
ANR	545560	CompoundStatement		51:2:775:787	545340	1					
ANR	545561	IdentifierDeclStatement	"char buf [ 64 ] , * numbuf , * bufpos ;"	83:2:2226:2256	545340	0	True				
ANR	545562	IdentifierDecl	buf [ 64 ]		545340	0					
ANR	545563	IdentifierDeclType	char [ 64 ]		545340	0					
ANR	545564	Identifier	buf		545340	1					
ANR	545565	PrimaryExpression	64		545340	2					
ANR	545566	IdentifierDecl	* numbuf		545340	1					
ANR	545567	IdentifierDeclType	char *		545340	0					
ANR	545568	Identifier	numbuf		545340	1					
ANR	545569	IdentifierDecl	* bufpos		545340	2					
ANR	545570	IdentifierDeclType	char *		545340	0					
ANR	545571	Identifier	bufpos		545340	1					
ANR	545572	IdentifierDeclStatement	int length = u - nstart ;	84:2:2260:2283	545340	1	True				
ANR	545573	IdentifierDecl	length = u - nstart		545340	0					
ANR	545574	IdentifierDeclType	int		545340	0					
ANR	545575	Identifier	length		545340	1					
ANR	545576	AssignmentExpression	length = u - nstart		545340	2		=			
ANR	545577	Identifier	length		545340	0					
ANR	545578	AdditiveExpression	u - nstart		545340	1		-			
ANR	545579	Identifier	u		545340	0					
ANR	545580	Identifier	nstart		545340	1					
ANR	545581	IdentifierDeclStatement	double value ;	85:2:2287:2299	545340	2	True				
ANR	545582	IdentifierDecl	value		545340	0					
ANR	545583	IdentifierDeclType	double		545340	0					
ANR	545584	Identifier	value		545340	1					
ANR	545585	IfStatement	if ( length < sizeof ( buf ) )		545340	3					
ANR	545586	Condition	length < sizeof ( buf )	87:6:2308:2327	545340	0	True				
ANR	545587	RelationalExpression	length < sizeof ( buf )		545340	0		<			
ANR	545588	Identifier	length		545340	0					
ANR	545589	SizeofExpression	sizeof ( buf )		545340	1					
ANR	545590	Sizeof	sizeof		545340	0					
ANR	545591	SizeofOperand	buf		545340	1					
ANR	545592	CompoundStatement		53:28:818:818	545340	1					
ANR	545593	ExpressionStatement	numbuf = buf	88:3:2335:2347	545340	0	True				
ANR	545594	AssignmentExpression	numbuf = buf		545340	0		=			
ANR	545595	Identifier	numbuf		545340	0					
ANR	545596	Identifier	buf		545340	1					
ANR	545597	ElseStatement	else		545340	0					
ANR	545598	CompoundStatement		55:9:846:846	545340	0					
ANR	545599	ExpressionStatement	"numbuf = ( char * ) _do_alloca ( length + 1 , use_heap )"	90:3:2363:2413	545340	0	True				
ANR	545600	AssignmentExpression	"numbuf = ( char * ) _do_alloca ( length + 1 , use_heap )"		545340	0		=			
ANR	545601	Identifier	numbuf		545340	0					
ANR	545602	CastExpression	"( char * ) _do_alloca ( length + 1 , use_heap )"		545340	1					
ANR	545603	CastTarget	char *		545340	0					
ANR	545604	CallExpression	"_do_alloca ( length + 1 , use_heap )"		545340	1					
ANR	545605	Callee	_do_alloca		545340	0					
ANR	545606	Identifier	_do_alloca		545340	0					
ANR	545607	ArgumentList	length + 1		545340	1					
ANR	545608	Argument	length + 1		545340	0					
ANR	545609	AdditiveExpression	length + 1		545340	0		+			
ANR	545610	Identifier	length		545340	0					
ANR	545611	PrimaryExpression	1		545340	1					
ANR	545612	Argument	use_heap		545340	1					
ANR	545613	Identifier	use_heap		545340	0					
ANR	545614	ExpressionStatement	bufpos = numbuf	93:2:2422:2437	545340	4	True				
ANR	545615	AssignmentExpression	bufpos = numbuf		545340	0		=			
ANR	545616	Identifier	bufpos		545340	0					
ANR	545617	Identifier	numbuf		545340	1					
ANR	545618	WhileStatement	while ( nstart < u )		545340	5					
ANR	545619	Condition	nstart < u	95:9:2449:2458	545340	0	True				
ANR	545620	RelationalExpression	nstart < u		545340	0		<			
ANR	545621	Identifier	nstart		545340	0					
ANR	545622	Identifier	u		545340	1					
ANR	545623	CompoundStatement		61:21:949:949	545340	1					
ANR	545624	ExpressionStatement	* bufpos ++ = ( char ) * nstart ++	96:3:2466:2494	545340	0	True				
ANR	545625	AssignmentExpression	* bufpos ++ = ( char ) * nstart ++		545340	0		=			
ANR	545626	UnaryOperationExpression	* bufpos ++		545340	0					
ANR	545627	UnaryOperator	*		545340	0					
ANR	545628	PostIncDecOperationExpression	bufpos ++		545340	1					
ANR	545629	Identifier	bufpos		545340	0					
ANR	545630	IncDec	++		545340	1					
ANR	545631	CastExpression	( char ) * nstart ++		545340	1					
ANR	545632	CastTarget	char		545340	0					
ANR	545633	UnaryOperationExpression	* nstart ++		545340	1					
ANR	545634	UnaryOperator	*		545340	0					
ANR	545635	PostIncDecOperationExpression	nstart ++		545340	1					
ANR	545636	Identifier	nstart		545340	0					
ANR	545637	IncDec	++		545340	1					
ANR	545638	ExpressionStatement	* bufpos = '\\0'	99:2:2503:2517	545340	6	True				
ANR	545639	AssignmentExpression	* bufpos = '\\0'		545340	0		=			
ANR	545640	UnaryOperationExpression	* bufpos		545340	0					
ANR	545641	UnaryOperator	*		545340	0					
ANR	545642	Identifier	bufpos		545340	1					
ANR	545643	PrimaryExpression	'\\0'		545340	1					
ANR	545644	ExpressionStatement	"value = zend_strtod ( numbuf , NULL )"	100:2:2521:2554	545340	7	True				
ANR	545645	AssignmentExpression	"value = zend_strtod ( numbuf , NULL )"		545340	0		=			
ANR	545646	Identifier	value		545340	0					
ANR	545647	CallExpression	"zend_strtod ( numbuf , NULL )"		545340	1					
ANR	545648	Callee	zend_strtod		545340	0					
ANR	545649	Identifier	zend_strtod		545340	0					
ANR	545650	ArgumentList	numbuf		545340	1					
ANR	545651	Argument	numbuf		545340	0					
ANR	545652	Identifier	numbuf		545340	0					
ANR	545653	Argument	NULL		545340	1					
ANR	545654	Identifier	NULL		545340	0					
ANR	545655	IfStatement	if ( numbuf != buf )		545340	8					
ANR	545656	Condition	numbuf != buf	102:6:2563:2575	545340	0	True				
ANR	545657	EqualityExpression	numbuf != buf		545340	0		!=			
ANR	545658	Identifier	numbuf		545340	0					
ANR	545659	Identifier	buf		545340	1					
ANR	545660	CompoundStatement		68:21:1066:1066	545340	1					
ANR	545661	ExpressionStatement	"_free_alloca ( numbuf , use_heap )"	103:3:2583:2613	545340	0	True				
ANR	545662	CallExpression	"_free_alloca ( numbuf , use_heap )"		545340	0					
ANR	545663	Callee	_free_alloca		545340	0					
ANR	545664	Identifier	_free_alloca		545340	0					
ANR	545665	ArgumentList	numbuf		545340	1					
ANR	545666	Argument	numbuf		545340	0					
ANR	545667	Identifier	numbuf		545340	0					
ANR	545668	Argument	use_heap		545340	1					
ANR	545669	Identifier	use_heap		545340	0					
ANR	545670	IfStatement	if ( endptr != NULL )		545340	9					
ANR	545671	Condition	endptr != NULL	106:6:2626:2639	545340	0	True				
ANR	545672	EqualityExpression	endptr != NULL		545340	0		!=			
ANR	545673	Identifier	endptr		545340	0					
ANR	545674	Identifier	NULL		545340	1					
ANR	545675	CompoundStatement		72:22:1130:1130	545340	1					
ANR	545676	ExpressionStatement	* endptr = ( UChar * ) u	107:3:2647:2667	545340	0	True				
ANR	545677	AssignmentExpression	* endptr = ( UChar * ) u		545340	0		=			
ANR	545678	UnaryOperationExpression	* endptr		545340	0					
ANR	545679	UnaryOperator	*		545340	0					
ANR	545680	Identifier	endptr		545340	1					
ANR	545681	CastExpression	( UChar * ) u		545340	1					
ANR	545682	CastTarget	UChar *		545340	0					
ANR	545683	Identifier	u		545340	1					
ANR	545684	ReturnStatement	return value ;	110:2:2676:2688	545340	10	True				
ANR	545685	Identifier	value		545340	0					
ANR	545686	IfStatement	if ( endptr != NULL )		545340	11					
ANR	545687	Condition	endptr != NULL	113:5:2699:2712	545340	0	True				
ANR	545688	EqualityExpression	endptr != NULL		545340	0		!=			
ANR	545689	Identifier	endptr		545340	0					
ANR	545690	Identifier	NULL		545340	1					
ANR	545691	CompoundStatement		79:21:1203:1203	545340	1					
ANR	545692	ExpressionStatement	* endptr = ( UChar * ) nptr	114:2:2719:2742	545340	0	True				
ANR	545693	AssignmentExpression	* endptr = ( UChar * ) nptr		545340	0		=			
ANR	545694	UnaryOperationExpression	* endptr		545340	0					
ANR	545695	UnaryOperator	*		545340	0					
ANR	545696	Identifier	endptr		545340	1					
ANR	545697	CastExpression	( UChar * ) nptr		545340	1					
ANR	545698	CastTarget	UChar *		545340	0					
ANR	545699	Identifier	nptr		545340	1					
ANR	545700	ReturnStatement	return 0 ;	117:1:2749:2757	545340	12	True				
ANR	545701	PrimaryExpression	0		545340	0					
ANR	545702	ReturnType	static double		545340	1					
ANR	545703	Identifier	collator_u_strtod		545340	2					
ANR	545704	ParameterList	"const UChar * nptr , UChar * * endptr"		545340	3					
ANR	545705	Parameter	const UChar * nptr	34:32:1466:1482	545340	0	True				
ANR	545706	ParameterType	const UChar *		545340	0					
ANR	545707	Identifier	nptr		545340	1					
ANR	545708	Parameter	UChar * * endptr	34:51:1485:1498	545340	1	True				
ANR	545709	ParameterType	UChar * *		545340	0					
ANR	545710	Identifier	endptr		545340	1					
ANR	545711	CFGEntryNode	ENTRY		545340		True				
ANR	545712	CFGExitNode	EXIT		545340		True				
ANR	545713	Symbol	* nstart ++		545340						
ANR	545714	Symbol	c		545340						
ANR	545715	Symbol	* bufpos		545340						
ANR	545716	Symbol	NULL		545340						
ANR	545717	Symbol	endptr		545340						
ANR	545718	Symbol	e		545340						
ANR	545719	Symbol	* endptr		545340						
ANR	545720	Symbol	length		545340						
ANR	545721	Symbol	* ++ u		545340						
ANR	545722	Symbol	nstart		545340						
ANR	545723	Symbol	any		545340						
ANR	545724	Symbol	any_exp		545340						
ANR	545725	Symbol	zend_strtod		545340						
ANR	545726	Symbol	buf		545340						
ANR	545727	Symbol	nptr		545340						
ANR	545728	Symbol	* bufpos ++		545340						
ANR	545729	Symbol	u		545340						
ANR	545730	Symbol	numbuf		545340						
ANR	545731	Symbol	u_isspace		545340						
ANR	545732	Symbol	_do_alloca		545340						
ANR	545733	Symbol	bufpos		545340						
ANR	545734	Symbol	value		545340						
ANR	545735	Symbol	* u		545340						
ANR	545736	Symbol	use_heap		545340						
ANR	545737	DeclStmt									
ANR	545738	Decl							const UChar	const UChar *	nptr
ANR	545739	DeclStmt									
ANR	545740	Decl							UChar	UChar * *	endptr
ANR	545741	DeclStmt									
ANR	545742	Decl							int	int	base
ANR	545743	DeclStmt									
ANR	545744	Decl							const UChar	const UChar *	s
ANR	545745	DeclStmt									
ANR	545746	Decl							unsigned long	unsigned long	acc
ANR	545747	DeclStmt									
ANR	545748	Decl							UChar	UChar	c
ANR	545749	DeclStmt									
ANR	545750	Decl							unsigned long	unsigned long	cutoff
ANR	545751	DeclStmt									
ANR	545752	Decl							int	int	neg
ANR	545753	Decl							int	int	any
ANR	545754	Decl							int	int	cutlim
ANR	545755	Function	collator_is_numeric	225:0:5448:7076							
ANR	545756	FunctionDef	"collator_is_numeric (UChar * str , int length , long * lval , double * dval , int allow_errors)"		545755	0					
ANR	545757	CompoundStatement		226:0:5549:7076	545755	0					
ANR	545758	IdentifierDeclStatement	long local_lval ;	227:1:5552:5567	545755	0	True				
ANR	545759	IdentifierDecl	local_lval		545755	0					
ANR	545760	IdentifierDeclType	long		545755	0					
ANR	545761	Identifier	local_lval		545755	1					
ANR	545762	IdentifierDeclStatement	double local_dval ;	228:1:5570:5587	545755	1	True				
ANR	545763	IdentifierDecl	local_dval		545755	0					
ANR	545764	IdentifierDeclType	double		545755	0					
ANR	545765	Identifier	local_dval		545755	1					
ANR	545766	IdentifierDeclStatement	"UChar * end_ptr_long , * end_ptr_double ;"	229:1:5590:5626	545755	2	True				
ANR	545767	IdentifierDecl	* end_ptr_long		545755	0					
ANR	545768	IdentifierDeclType	UChar *		545755	0					
ANR	545769	Identifier	end_ptr_long		545755	1					
ANR	545770	IdentifierDecl	* end_ptr_double		545755	1					
ANR	545771	IdentifierDeclType	UChar *		545755	0					
ANR	545772	Identifier	end_ptr_double		545755	1					
ANR	545773	IdentifierDeclStatement	int conv_base = 10 ;	230:1:5629:5645	545755	3	True				
ANR	545774	IdentifierDecl	conv_base = 10		545755	0					
ANR	545775	IdentifierDeclType	int		545755	0					
ANR	545776	Identifier	conv_base		545755	1					
ANR	545777	AssignmentExpression	conv_base = 10		545755	2		=			
ANR	545778	Identifier	conv_base		545755	0					
ANR	545779	PrimaryExpression	10		545755	1					
ANR	545780	IfStatement	if ( ! length )		545755	4					
ANR	545781	Condition	! length	232:5:5653:5659	545755	0	True				
ANR	545782	UnaryOperationExpression	! length		545755	0					
ANR	545783	UnaryOperator	!		545755	0					
ANR	545784	Identifier	length		545755	1					
ANR	545785	CompoundStatement		7:14:112:112	545755	1					
ANR	545786	ReturnStatement	return 0 ;	233:2:5666:5674	545755	0	True				
ANR	545787	PrimaryExpression	0		545755	0					
ANR	545788	IfStatement	if ( length >= 2 && str [ 0 ] == '0' && ( str [ 1 ] == 'x' || str [ 1 ] == 'X' ) )		545755	5					
ANR	545789	Condition	length >= 2 && str [ 0 ] == '0' && ( str [ 1 ] == 'x' || str [ 1 ] == 'X' )	237:5:5711:5766	545755	0	True				
ANR	545790	AndExpression	length >= 2 && str [ 0 ] == '0' && ( str [ 1 ] == 'x' || str [ 1 ] == 'X' )		545755	0		&&			
ANR	545791	RelationalExpression	length >= 2		545755	0		>=			
ANR	545792	Identifier	length		545755	0					
ANR	545793	PrimaryExpression	2		545755	1					
ANR	545794	AndExpression	str [ 0 ] == '0' && ( str [ 1 ] == 'x' || str [ 1 ] == 'X' )		545755	1		&&			
ANR	545795	EqualityExpression	str [ 0 ] == '0'		545755	0		==			
ANR	545796	ArrayIndexing	str [ 0 ]		545755	0					
ANR	545797	Identifier	str		545755	0					
ANR	545798	PrimaryExpression	0		545755	1					
ANR	545799	PrimaryExpression	'0'		545755	1					
ANR	545800	OrExpression	str [ 1 ] == 'x' || str [ 1 ] == 'X'		545755	1		||			
ANR	545801	EqualityExpression	str [ 1 ] == 'x'		545755	0		==			
ANR	545802	ArrayIndexing	str [ 1 ]		545755	0					
ANR	545803	Identifier	str		545755	0					
ANR	545804	PrimaryExpression	1		545755	1					
ANR	545805	PrimaryExpression	'x'		545755	1					
ANR	545806	EqualityExpression	str [ 1 ] == 'X'		545755	1		==			
ANR	545807	ArrayIndexing	str [ 1 ]		545755	0					
ANR	545808	Identifier	str		545755	0					
ANR	545809	PrimaryExpression	1		545755	1					
ANR	545810	PrimaryExpression	'X'		545755	1					
ANR	545811	CompoundStatement		12:63:219:219	545755	1					
ANR	545812	ExpressionStatement	conv_base = 16	238:2:5773:5785	545755	0	True				
ANR	545813	AssignmentExpression	conv_base = 16		545755	0		=			
ANR	545814	Identifier	conv_base		545755	0					
ANR	545815	PrimaryExpression	16		545755	1					
ANR	545816	ExpressionStatement	errno = 0	241:1:5792:5799	545755	6	True				
ANR	545817	AssignmentExpression	errno = 0		545755	0		=			
ANR	545818	Identifier	errno		545755	0					
ANR	545819	PrimaryExpression	0		545755	1					
ANR	545820	ExpressionStatement	"local_lval = collator_u_strtol ( str , & end_ptr_long , conv_base )"	242:1:5802:5863	545755	7	True				
ANR	545821	AssignmentExpression	"local_lval = collator_u_strtol ( str , & end_ptr_long , conv_base )"		545755	0		=			
ANR	545822	Identifier	local_lval		545755	0					
ANR	545823	CallExpression	"collator_u_strtol ( str , & end_ptr_long , conv_base )"		545755	1					
ANR	545824	Callee	collator_u_strtol		545755	0					
ANR	545825	Identifier	collator_u_strtol		545755	0					
ANR	545826	ArgumentList	str		545755	1					
ANR	545827	Argument	str		545755	0					
ANR	545828	Identifier	str		545755	0					
ANR	545829	Argument	& end_ptr_long		545755	1					
ANR	545830	UnaryOperationExpression	& end_ptr_long		545755	0					
ANR	545831	UnaryOperator	&		545755	0					
ANR	545832	Identifier	end_ptr_long		545755	1					
ANR	545833	Argument	conv_base		545755	2					
ANR	545834	Identifier	conv_base		545755	0					
ANR	545835	IfStatement	if ( errno != ERANGE )		545755	8					
ANR	545836	Condition	errno != ERANGE	243:5:5870:5884	545755	0	True				
ANR	545837	EqualityExpression	errno != ERANGE		545755	0		!=			
ANR	545838	Identifier	errno		545755	0					
ANR	545839	Identifier	ERANGE		545755	1					
ANR	545840	CompoundStatement		18:22:337:337	545755	1					
ANR	545841	IfStatement	if ( end_ptr_long == str + length )		545755	0					
ANR	545842	Condition	end_ptr_long == str + length	244:6:5895:5920	545755	0	True				
ANR	545843	EqualityExpression	end_ptr_long == str + length		545755	0		==			
ANR	545844	Identifier	end_ptr_long		545755	0					
ANR	545845	AdditiveExpression	str + length		545755	1		+			
ANR	545846	Identifier	str		545755	0					
ANR	545847	Identifier	length		545755	1					
ANR	545848	CompoundStatement		19:34:373:373	545755	1					
ANR	545849	IfStatement	if ( lval )		545755	0					
ANR	545850	Condition	lval	245:7:5953:5956	545755	0	True				
ANR	545851	Identifier	lval		545755	0					
ANR	545852	CompoundStatement		20:13:409:409	545755	1					
ANR	545853	ExpressionStatement	* lval = local_lval	246:4:5965:5983	545755	0	True				
ANR	545854	AssignmentExpression	* lval = local_lval		545755	0		=			
ANR	545855	UnaryOperationExpression	* lval		545755	0					
ANR	545856	UnaryOperator	*		545755	0					
ANR	545857	Identifier	lval		545755	1					
ANR	545858	Identifier	local_lval		545755	1					
ANR	545859	ReturnStatement	return IS_LONG ;	248:3:5993:6007	545755	1	True				
ANR	545860	Identifier	IS_LONG		545755	0					
ANR	545861	ElseStatement	else		545755	0					
ANR	545862	IfStatement	if ( end_ptr_long == str && * end_ptr_long != '\\0' && * str != '.' && * str != '-' )		545755	0					
ANR	545863	Condition	end_ptr_long == str && * end_ptr_long != '\\0' && * str != '.' && * str != '-'	249:13:6022:6095	545755	0	True				
ANR	545864	AndExpression	end_ptr_long == str && * end_ptr_long != '\\0' && * str != '.' && * str != '-'		545755	0		&&			
ANR	545865	EqualityExpression	end_ptr_long == str		545755	0		==			
ANR	545866	Identifier	end_ptr_long		545755	0					
ANR	545867	Identifier	str		545755	1					
ANR	545868	AndExpression	* end_ptr_long != '\\0' && * str != '.' && * str != '-'		545755	1		&&			
ANR	545869	EqualityExpression	* end_ptr_long != '\\0'		545755	0		!=			
ANR	545870	UnaryOperationExpression	* end_ptr_long		545755	0					
ANR	545871	UnaryOperator	*		545755	0					
ANR	545872	Identifier	end_ptr_long		545755	1					
ANR	545873	PrimaryExpression	'\\0'		545755	1					
ANR	545874	AndExpression	* str != '.' && * str != '-'		545755	1		&&			
ANR	545875	EqualityExpression	* str != '.'		545755	0		!=			
ANR	545876	UnaryOperationExpression	* str		545755	0					
ANR	545877	UnaryOperator	*		545755	0					
ANR	545878	Identifier	str		545755	1					
ANR	545879	PrimaryExpression	'.'		545755	1					
ANR	545880	EqualityExpression	* str != '-'		545755	1		!=			
ANR	545881	UnaryOperationExpression	* str		545755	0					
ANR	545882	UnaryOperator	*		545755	0					
ANR	545883	Identifier	str		545755	1					
ANR	545884	PrimaryExpression	'-'		545755	1					
ANR	545885	CompoundStatement		24:89:548:548	545755	1					
ANR	545886	ReturnStatement	return 0 ;	250:3:6139:6147	545755	0	True				
ANR	545887	PrimaryExpression	0		545755	0					
ANR	545888	ElseStatement	else		545755	0					
ANR	545889	CompoundStatement		27:8:611:611	545755	0					
ANR	545890	ExpressionStatement	end_ptr_long = NULL	253:2:6165:6184	545755	0	True				
ANR	545891	AssignmentExpression	end_ptr_long = NULL		545755	0		=			
ANR	545892	Identifier	end_ptr_long		545755	0					
ANR	545893	Identifier	NULL		545755	1					
ANR	545894	IfStatement	if ( conv_base == 16 )		545755	9					
ANR	545895	Condition	conv_base == 16	256:5:6195:6209	545755	0	True				
ANR	545896	EqualityExpression	conv_base == 16		545755	0		==			
ANR	545897	Identifier	conv_base		545755	0					
ANR	545898	PrimaryExpression	16		545755	1					
ANR	545899	CompoundStatement		31:22:662:662	545755	1					
ANR	545900	ReturnStatement	return 0 ;	258:2:6332:6340	545755	0	True				
ANR	545901	PrimaryExpression	0		545755	0					
ANR	545902	ExpressionStatement	"local_dval = collator_u_strtod ( str , & end_ptr_double )"	261:1:6347:6399	545755	10	True				
ANR	545903	AssignmentExpression	"local_dval = collator_u_strtod ( str , & end_ptr_double )"		545755	0		=			
ANR	545904	Identifier	local_dval		545755	0					
ANR	545905	CallExpression	"collator_u_strtod ( str , & end_ptr_double )"		545755	1					
ANR	545906	Callee	collator_u_strtod		545755	0					
ANR	545907	Identifier	collator_u_strtod		545755	0					
ANR	545908	ArgumentList	str		545755	1					
ANR	545909	Argument	str		545755	0					
ANR	545910	Identifier	str		545755	0					
ANR	545911	Argument	& end_ptr_double		545755	1					
ANR	545912	UnaryOperationExpression	& end_ptr_double		545755	0					
ANR	545913	UnaryOperator	&		545755	0					
ANR	545914	Identifier	end_ptr_double		545755	1					
ANR	545915	IfStatement	if ( local_dval == 0 && end_ptr_double == str )		545755	11					
ANR	545916	Condition	local_dval == 0 && end_ptr_double == str	262:5:6406:6445	545755	0	True				
ANR	545917	AndExpression	local_dval == 0 && end_ptr_double == str		545755	0		&&			
ANR	545918	EqualityExpression	local_dval == 0		545755	0		==			
ANR	545919	Identifier	local_dval		545755	0					
ANR	545920	PrimaryExpression	0		545755	1					
ANR	545921	EqualityExpression	end_ptr_double == str		545755	1		==			
ANR	545922	Identifier	end_ptr_double		545755	0					
ANR	545923	Identifier	str		545755	1					
ANR	545924	CompoundStatement		37:47:898:898	545755	1					
ANR	545925	ExpressionStatement	end_ptr_double = NULL	263:2:6452:6473	545755	0	True				
ANR	545926	AssignmentExpression	end_ptr_double = NULL		545755	0		=			
ANR	545927	Identifier	end_ptr_double		545755	0					
ANR	545928	Identifier	NULL		545755	1					
ANR	545929	ElseStatement	else		545755	0					
ANR	545930	CompoundStatement		39:8:933:933	545755	0					
ANR	545931	IfStatement	if ( end_ptr_double == str + length )		545755	0					
ANR	545932	Condition	end_ptr_double == str + length	265:6:6491:6518	545755	0	True				
ANR	545933	EqualityExpression	end_ptr_double == str + length		545755	0		==			
ANR	545934	Identifier	end_ptr_double		545755	0					
ANR	545935	AdditiveExpression	str + length		545755	1		+			
ANR	545936	Identifier	str		545755	0					
ANR	545937	Identifier	length		545755	1					
ANR	545938	CompoundStatement		40:36:971:971	545755	1					
ANR	545939	IfStatement	if ( ! zend_finite ( local_dval ) )		545755	0					
ANR	545940	Condition	! zend_finite ( local_dval )	266:7:6558:6581	545755	0	True				
ANR	545941	UnaryOperationExpression	! zend_finite ( local_dval )		545755	0					
ANR	545942	UnaryOperator	!		545755	0					
ANR	545943	CallExpression	zend_finite ( local_dval )		545755	1					
ANR	545944	Callee	zend_finite		545755	0					
ANR	545945	Identifier	zend_finite		545755	0					
ANR	545946	ArgumentList	local_dval		545755	1					
ANR	545947	Argument	local_dval		545755	0					
ANR	545948	Identifier	local_dval		545755	0					
ANR	545949	CompoundStatement		41:33:1034:1034	545755	1					
ANR	545950	ReturnStatement	return 0 ;	268:4:6639:6647	545755	0	True				
ANR	545951	PrimaryExpression	0		545755	0					
ANR	545952	IfStatement	if ( dval )		545755	1					
ANR	545953	Condition	dval	271:7:6662:6665	545755	0	True				
ANR	545954	Identifier	dval		545755	0					
ANR	545955	CompoundStatement		46:13:1118:1118	545755	1					
ANR	545956	ExpressionStatement	* dval = local_dval	272:4:6674:6692	545755	0	True				
ANR	545957	AssignmentExpression	* dval = local_dval		545755	0		=			
ANR	545958	UnaryOperationExpression	* dval		545755	0					
ANR	545959	UnaryOperator	*		545755	0					
ANR	545960	Identifier	dval		545755	1					
ANR	545961	Identifier	local_dval		545755	1					
ANR	545962	ReturnStatement	return IS_DOUBLE ;	274:3:6702:6718	545755	2	True				
ANR	545963	Identifier	IS_DOUBLE		545755	0					
ANR	545964	IfStatement	if ( ! allow_errors )		545755	12					
ANR	545965	Condition	! allow_errors	278:5:6733:6745	545755	0	True				
ANR	545966	UnaryOperationExpression	! allow_errors		545755	0					
ANR	545967	UnaryOperator	!		545755	0					
ANR	545968	Identifier	allow_errors		545755	1					
ANR	545969	CompoundStatement		53:20:1198:1198	545755	1					
ANR	545970	ReturnStatement	return 0 ;	279:2:6752:6760	545755	0	True				
ANR	545971	PrimaryExpression	0		545755	0					
ANR	545972	IfStatement	if ( allow_errors == - 1 )		545755	13					
ANR	545973	Condition	allow_errors == - 1	281:5:6770:6787	545755	0	True				
ANR	545974	EqualityExpression	allow_errors == - 1		545755	0		==			
ANR	545975	Identifier	allow_errors		545755	0					
ANR	545976	UnaryOperationExpression	- 1		545755	1					
ANR	545977	UnaryOperator	-		545755	0					
ANR	545978	PrimaryExpression	1		545755	1					
ANR	545979	CompoundStatement		56:25:1240:1240	545755	1					
ANR	545980	ExpressionStatement	"zend_error ( E_NOTICE , ""A non well formed numeric value encountered"" )"	282:2:6794:6861	545755	0	True				
ANR	545981	CallExpression	"zend_error ( E_NOTICE , ""A non well formed numeric value encountered"" )"		545755	0					
ANR	545982	Callee	zend_error		545755	0					
ANR	545983	Identifier	zend_error		545755	0					
ANR	545984	ArgumentList	E_NOTICE		545755	1					
ANR	545985	Argument	E_NOTICE		545755	0					
ANR	545986	Identifier	E_NOTICE		545755	0					
ANR	545987	Argument	"""A non well formed numeric value encountered"""		545755	1					
ANR	545988	PrimaryExpression	"""A non well formed numeric value encountered"""		545755	0					
ANR	545989	IfStatement	if ( allow_errors )		545755	14					
ANR	545990	Condition	allow_errors	285:5:6872:6883	545755	0	True				
ANR	545991	Identifier	allow_errors		545755	0					
ANR	545992	CompoundStatement		60:19:1336:1336	545755	1					
ANR	545993	IfStatement	if ( end_ptr_double > end_ptr_long && dval )		545755	0					
ANR	545994	Condition	end_ptr_double > end_ptr_long && dval	286:6:6894:6930	545755	0	True				
ANR	545995	AndExpression	end_ptr_double > end_ptr_long && dval		545755	0		&&			
ANR	545996	RelationalExpression	end_ptr_double > end_ptr_long		545755	0		>			
ANR	545997	Identifier	end_ptr_double		545755	0					
ANR	545998	Identifier	end_ptr_long		545755	1					
ANR	545999	Identifier	dval		545755	1					
ANR	546000	CompoundStatement		61:45:1383:1383	545755	1					
ANR	546001	ExpressionStatement	* dval = local_dval	287:3:6938:6956	545755	0	True				
ANR	546002	AssignmentExpression	* dval = local_dval		545755	0		=			
ANR	546003	UnaryOperationExpression	* dval		545755	0					
ANR	546004	UnaryOperator	*		545755	0					
ANR	546005	Identifier	dval		545755	1					
ANR	546006	Identifier	local_dval		545755	1					
ANR	546007	ReturnStatement	return IS_DOUBLE ;	288:3:6961:6977	545755	1	True				
ANR	546008	Identifier	IS_DOUBLE		545755	0					
ANR	546009	ElseStatement	else		545755	0					
ANR	546010	IfStatement	if ( end_ptr_long && lval )		545755	0					
ANR	546011	Condition	end_ptr_long && lval	289:13:6992:7011	545755	0	True				
ANR	546012	AndExpression	end_ptr_long && lval		545755	0		&&			
ANR	546013	Identifier	end_ptr_long		545755	0					
ANR	546014	Identifier	lval		545755	1					
ANR	546015	CompoundStatement		64:35:1464:1464	545755	1					
ANR	546016	ExpressionStatement	* lval = local_lval	290:3:7019:7037	545755	0	True				
ANR	546017	AssignmentExpression	* lval = local_lval		545755	0		=			
ANR	546018	UnaryOperationExpression	* lval		545755	0					
ANR	546019	UnaryOperator	*		545755	0					
ANR	546020	Identifier	lval		545755	1					
ANR	546021	Identifier	local_lval		545755	1					
ANR	546022	ReturnStatement	return IS_LONG ;	291:3:7042:7056	545755	1	True				
ANR	546023	Identifier	IS_LONG		545755	0					
ANR	546024	ReturnStatement	return 0 ;	294:1:7066:7074	545755	15	True				
ANR	546025	PrimaryExpression	0		545755	0					
ANR	546026	ReturnType	zend_uchar		545755	1					
ANR	546027	Identifier	collator_is_numeric		545755	2					
ANR	546028	ParameterList	"UChar * str , int length , long * lval , double * dval , int allow_errors"		545755	3					
ANR	546029	Parameter	UChar * str	225:32:5480:5489	545755	0	True				
ANR	546030	ParameterType	UChar *		545755	0					
ANR	546031	Identifier	str		545755	1					
ANR	546032	Parameter	int length	225:44:5492:5501	545755	1	True				
ANR	546033	ParameterType	int		545755	0					
ANR	546034	Identifier	length		545755	1					
ANR	546035	Parameter	long * lval	225:56:5504:5513	545755	2	True				
ANR	546036	ParameterType	long *		545755	0					
ANR	546037	Identifier	lval		545755	1					
ANR	546038	Parameter	double * dval	225:68:5516:5527	545755	3	True				
ANR	546039	ParameterType	double *		545755	0					
ANR	546040	Identifier	dval		545755	1					
ANR	546041	Parameter	int allow_errors	225:82:5530:5545	545755	4	True				
ANR	546042	ParameterType	int		545755	0					
ANR	546043	Identifier	allow_errors		545755	1					
ANR	546044	CFGEntryNode	ENTRY		545755		True				
ANR	546045	CFGExitNode	EXIT		545755		True				
ANR	546046	Symbol	zend_finite		545755						
ANR	546047	Symbol	& end_ptr_long		545755						
ANR	546048	Symbol	allow_errors		545755						
ANR	546049	Symbol	lval		545755						
ANR	546050	Symbol	end_ptr_double		545755						
ANR	546051	Symbol	* end_ptr_long		545755						
ANR	546052	Symbol	* lval		545755						
ANR	546053	Symbol	collator_u_strtol		545755						
ANR	546054	Symbol	dval		545755						
ANR	546055	Symbol	& end_ptr_double		545755						
ANR	546056	Symbol	IS_LONG		545755						
ANR	546057	Symbol	ERANGE		545755						
ANR	546058	Symbol	* str		545755						
ANR	546059	Symbol	errno		545755						
ANR	546060	Symbol	NULL		545755						
ANR	546061	Symbol	length		545755						
ANR	546062	Symbol	E_NOTICE		545755						
ANR	546063	Symbol	end_ptr_long		545755						
ANR	546064	Symbol	* dval		545755						
ANR	546065	Symbol	str		545755						
ANR	546066	Symbol	conv_base		545755						
ANR	546067	Symbol	collator_u_strtod		545755						
ANR	546068	Symbol	local_lval		545755						
ANR	546069	Symbol	IS_DOUBLE		545755						
ANR	546070	Symbol	local_dval		545755						
