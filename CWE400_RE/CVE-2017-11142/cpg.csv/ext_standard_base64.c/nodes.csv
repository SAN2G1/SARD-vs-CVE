command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1936450	File	data/converged/CVE-2017-11142_php-src/ext_standard_base64.c								
ANR	1936451	DeclStmt									
ANR	1936452	Decl							const char	const char [ ]	base64_table
ANR	1936453	DeclStmt									
ANR	1936454	Decl							const char	const char	base64_pad
ANR	1936455	DeclStmt									
ANR	1936456	Decl							const short	const short [ 256 ]	base64_reverse_table
ANR	1936457	Function	php_base64_encode	56:7:2759:4142							
ANR	1936458	FunctionDef	"php_base64_encode (const unsigned char * str , int length , int * ret_length)"		1936457	0					
ANR	1936459	CompoundStatement		57:0:2857:4142	1936457	0					
ANR	1936460	IdentifierDeclStatement	const unsigned char * current = str ;	58:1:2860:2894	1936457	0	True				
ANR	1936461	IdentifierDecl	* current = str		1936457	0					
ANR	1936462	IdentifierDeclType	const unsigned char *		1936457	0					
ANR	1936463	Identifier	current		1936457	1					
ANR	1936464	AssignmentExpression	* current = str		1936457	2		=			
ANR	1936465	Identifier	str		1936457	0					
ANR	1936466	Identifier	str		1936457	1					
ANR	1936467	IdentifierDeclStatement	unsigned char * p ;	59:1:2897:2913	1936457	1	True				
ANR	1936468	IdentifierDecl	* p		1936457	0					
ANR	1936469	IdentifierDeclType	unsigned char *		1936457	0					
ANR	1936470	Identifier	p		1936457	1					
ANR	1936471	IdentifierDeclStatement	unsigned char * result ;	60:1:2916:2937	1936457	2	True				
ANR	1936472	IdentifierDecl	* result		1936457	0					
ANR	1936473	IdentifierDeclType	unsigned char *		1936457	0					
ANR	1936474	Identifier	result		1936457	1					
ANR	1936475	IfStatement	if ( length < 0 )		1936457	3					
ANR	1936476	Condition	length < 0	62:5:2945:2954	1936457	0	True				
ANR	1936477	RelationalExpression	length < 0		1936457	0		<			
ANR	1936478	Identifier	length		1936457	0					
ANR	1936479	PrimaryExpression	0		1936457	1					
ANR	1936480	CompoundStatement		6:17:99:99	1936457	1					
ANR	1936481	IfStatement	if ( ret_length != NULL )		1936457	0					
ANR	1936482	Condition	ret_length != NULL	63:6:2965:2982	1936457	0	True				
ANR	1936483	EqualityExpression	ret_length != NULL		1936457	0		!=			
ANR	1936484	Identifier	ret_length		1936457	0					
ANR	1936485	Identifier	NULL		1936457	1					
ANR	1936486	CompoundStatement		7:26:127:127	1936457	1					
ANR	1936487	ExpressionStatement	* ret_length = 0	64:3:2990:3005	1936457	0	True				
ANR	1936488	AssignmentExpression	* ret_length = 0		1936457	0		=			
ANR	1936489	UnaryOperationExpression	* ret_length		1936457	0					
ANR	1936490	UnaryOperator	*		1936457	0					
ANR	1936491	Identifier	ret_length		1936457	1					
ANR	1936492	PrimaryExpression	0		1936457	1					
ANR	1936493	ReturnStatement	return NULL ;	66:2:3013:3024	1936457	1	True				
ANR	1936494	Identifier	NULL		1936457	0					
ANR	1936495	IfStatement	if ( ( ( size_t ) length + 2 ) / 3 > INT_MAX / 4 )		1936457	4					
ANR	1936496	Condition	( ( size_t ) length + 2 ) / 3 > INT_MAX / 4	69:5:3035:3070	1936457	0	True				
ANR	1936497	RelationalExpression	( ( size_t ) length + 2 ) / 3 > INT_MAX / 4		1936457	0		>			
ANR	1936498	MultiplicativeExpression	( ( size_t ) length + 2 ) / 3		1936457	0		/			
ANR	1936499	AdditiveExpression	( size_t ) length + 2		1936457	0		+			
ANR	1936500	CastExpression	( size_t ) length		1936457	0					
ANR	1936501	CastTarget	size_t		1936457	0					
ANR	1936502	Identifier	length		1936457	1					
ANR	1936503	PrimaryExpression	2		1936457	1					
ANR	1936504	PrimaryExpression	3		1936457	1					
ANR	1936505	MultiplicativeExpression	INT_MAX / 4		1936457	1		/			
ANR	1936506	Identifier	INT_MAX		1936457	0					
ANR	1936507	PrimaryExpression	4		1936457	1					
ANR	1936508	CompoundStatement		13:44:216:216	1936457	1					
ANR	1936509	ExpressionStatement	TSRMLS_FETCH ( )	70:2:3078:3092	1936457	0	True				
ANR	1936510	CallExpression	TSRMLS_FETCH ( )		1936457	0					
ANR	1936511	Callee	TSRMLS_FETCH		1936457	0					
ANR	1936512	Identifier	TSRMLS_FETCH		1936457	0					
ANR	1936513	ArgumentList			1936457	1					
ANR	1936514	Statement	php_error_docref	71:2:3096:3111	1936457	1	True				
ANR	1936515	Statement	(	71:18:3112:3112	1936457	2	True				
ANR	1936516	Statement	NULL	71:19:3113:3116	1936457	3	True				
ANR	1936517	Statement	TSRMLS_CC	71:24:3118:3126	1936457	4	True				
ANR	1936518	Statement	","	71:33:3127:3127	1936457	5	True				
ANR	1936519	Statement	E_WARNING	71:35:3129:3137	1936457	6	True				
ANR	1936520	Statement	","	71:44:3138:3138	1936457	7	True				
ANR	1936521	Statement	"""String too long, maximum is %d"""	71:46:3140:3171	1936457	8	True				
ANR	1936522	Statement	","	71:78:3172:3172	1936457	9	True				
ANR	1936523	Statement	INT_MAX	71:80:3174:3180	1936457	10	True				
ANR	1936524	Statement	/	71:87:3181:3181	1936457	11	True				
ANR	1936525	Statement	4	71:88:3182:3182	1936457	12	True				
ANR	1936526	Statement	)	71:89:3183:3183	1936457	13	True				
ANR	1936527	ExpressionStatement		71:90:3184:3184	1936457	14	True				
ANR	1936528	ReturnStatement	return NULL ;	72:2:3188:3199	1936457	15	True				
ANR	1936529	Identifier	NULL		1936457	0					
ANR	1936530	ExpressionStatement	"result = ( unsigned char * ) safe_emalloc ( ( length + 2 ) / 3 , 4 * sizeof ( char ) , 1 )"	75:1:3206:3284	1936457	5	True				
ANR	1936531	AssignmentExpression	"result = ( unsigned char * ) safe_emalloc ( ( length + 2 ) / 3 , 4 * sizeof ( char ) , 1 )"		1936457	0		=			
ANR	1936532	Identifier	result		1936457	0					
ANR	1936533	CastExpression	"( unsigned char * ) safe_emalloc ( ( length + 2 ) / 3 , 4 * sizeof ( char ) , 1 )"		1936457	1					
ANR	1936534	CastTarget	unsigned char *		1936457	0					
ANR	1936535	CallExpression	"safe_emalloc ( ( length + 2 ) / 3 , 4 * sizeof ( char ) , 1 )"		1936457	1					
ANR	1936536	Callee	safe_emalloc		1936457	0					
ANR	1936537	Identifier	safe_emalloc		1936457	0					
ANR	1936538	ArgumentList	( length + 2 ) / 3		1936457	1					
ANR	1936539	Argument	( length + 2 ) / 3		1936457	0					
ANR	1936540	MultiplicativeExpression	( length + 2 ) / 3		1936457	0		/			
ANR	1936541	AdditiveExpression	length + 2		1936457	0		+			
ANR	1936542	Identifier	length		1936457	0					
ANR	1936543	PrimaryExpression	2		1936457	1					
ANR	1936544	PrimaryExpression	3		1936457	1					
ANR	1936545	Argument	4 * sizeof ( char )		1936457	1					
ANR	1936546	MultiplicativeExpression	4 * sizeof ( char )		1936457	0		*			
ANR	1936547	PrimaryExpression	4		1936457	0					
ANR	1936548	SizeofExpression	sizeof ( char )		1936457	1					
ANR	1936549	Sizeof	sizeof		1936457	0					
ANR	1936550	SizeofOperand	char		1936457	1					
ANR	1936551	Argument	1		1936457	2					
ANR	1936552	PrimaryExpression	1		1936457	0					
ANR	1936553	ExpressionStatement	p = result	76:1:3287:3297	1936457	6	True				
ANR	1936554	AssignmentExpression	p = result		1936457	0		=			
ANR	1936555	Identifier	p		1936457	0					
ANR	1936556	Identifier	result		1936457	1					
ANR	1936557	WhileStatement	while ( length > 2 )		1936457	7					
ANR	1936558	Condition	length > 2	78:8:3308:3317	1936457	0	True				
ANR	1936559	RelationalExpression	length > 2		1936457	0		>			
ANR	1936560	Identifier	length		1936457	0					
ANR	1936561	PrimaryExpression	2		1936457	1					
ANR	1936562	CompoundStatement		22:20:462:462	1936457	1					
ANR	1936563	ExpressionStatement	* p ++ = base64_table [ current [ 0 ] >> 2 ]	79:2:3373:3409	1936457	0	True				
ANR	1936564	AssignmentExpression	* p ++ = base64_table [ current [ 0 ] >> 2 ]		1936457	0		=			
ANR	1936565	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936566	UnaryOperator	*		1936457	0					
ANR	1936567	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936568	Identifier	p		1936457	0					
ANR	1936569	IncDec	++		1936457	1					
ANR	1936570	ArrayIndexing	base64_table [ current [ 0 ] >> 2 ]		1936457	1					
ANR	1936571	Identifier	base64_table		1936457	0					
ANR	1936572	ShiftExpression	current [ 0 ] >> 2		1936457	1		>>			
ANR	1936573	ArrayIndexing	current [ 0 ]		1936457	0					
ANR	1936574	Identifier	current		1936457	0					
ANR	1936575	PrimaryExpression	0		1936457	1					
ANR	1936576	PrimaryExpression	2		1936457	1					
ANR	1936577	ExpressionStatement	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]	80:2:3413:3480	1936457	1	True				
ANR	1936578	AssignmentExpression	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		1936457	0		=			
ANR	1936579	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936580	UnaryOperator	*		1936457	0					
ANR	1936581	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936582	Identifier	p		1936457	0					
ANR	1936583	IncDec	++		1936457	1					
ANR	1936584	ArrayIndexing	base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		1936457	1					
ANR	1936585	Identifier	base64_table		1936457	0					
ANR	1936586	AdditiveExpression	( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 )		1936457	1		+			
ANR	1936587	ShiftExpression	( current [ 0 ] & 0x03 ) << 4		1936457	0		<<			
ANR	1936588	BitAndExpression	current [ 0 ] & 0x03		1936457	0		&			
ANR	1936589	ArrayIndexing	current [ 0 ]		1936457	0					
ANR	1936590	Identifier	current		1936457	0					
ANR	1936591	PrimaryExpression	0		1936457	1					
ANR	1936592	PrimaryExpression	0x03		1936457	1					
ANR	1936593	PrimaryExpression	4		1936457	1					
ANR	1936594	ShiftExpression	current [ 1 ] >> 4		1936457	1		>>			
ANR	1936595	ArrayIndexing	current [ 1 ]		1936457	0					
ANR	1936596	Identifier	current		1936457	0					
ANR	1936597	PrimaryExpression	1		1936457	1					
ANR	1936598	PrimaryExpression	4		1936457	1					
ANR	1936599	ExpressionStatement	* p ++ = base64_table [ ( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 ) ]	81:2:3484:3551	1936457	2	True				
ANR	1936600	AssignmentExpression	* p ++ = base64_table [ ( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 ) ]		1936457	0		=			
ANR	1936601	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936602	UnaryOperator	*		1936457	0					
ANR	1936603	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936604	Identifier	p		1936457	0					
ANR	1936605	IncDec	++		1936457	1					
ANR	1936606	ArrayIndexing	base64_table [ ( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 ) ]		1936457	1					
ANR	1936607	Identifier	base64_table		1936457	0					
ANR	1936608	AdditiveExpression	( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 )		1936457	1		+			
ANR	1936609	ShiftExpression	( current [ 1 ] & 0x0f ) << 2		1936457	0		<<			
ANR	1936610	BitAndExpression	current [ 1 ] & 0x0f		1936457	0		&			
ANR	1936611	ArrayIndexing	current [ 1 ]		1936457	0					
ANR	1936612	Identifier	current		1936457	0					
ANR	1936613	PrimaryExpression	1		1936457	1					
ANR	1936614	PrimaryExpression	0x0f		1936457	1					
ANR	1936615	PrimaryExpression	2		1936457	1					
ANR	1936616	ShiftExpression	current [ 2 ] >> 6		1936457	1		>>			
ANR	1936617	ArrayIndexing	current [ 2 ]		1936457	0					
ANR	1936618	Identifier	current		1936457	0					
ANR	1936619	PrimaryExpression	2		1936457	1					
ANR	1936620	PrimaryExpression	6		1936457	1					
ANR	1936621	ExpressionStatement	* p ++ = base64_table [ current [ 2 ] & 0x3f ]	82:2:3555:3593	1936457	3	True				
ANR	1936622	AssignmentExpression	* p ++ = base64_table [ current [ 2 ] & 0x3f ]		1936457	0		=			
ANR	1936623	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936624	UnaryOperator	*		1936457	0					
ANR	1936625	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936626	Identifier	p		1936457	0					
ANR	1936627	IncDec	++		1936457	1					
ANR	1936628	ArrayIndexing	base64_table [ current [ 2 ] & 0x3f ]		1936457	1					
ANR	1936629	Identifier	base64_table		1936457	0					
ANR	1936630	BitAndExpression	current [ 2 ] & 0x3f		1936457	1		&			
ANR	1936631	ArrayIndexing	current [ 2 ]		1936457	0					
ANR	1936632	Identifier	current		1936457	0					
ANR	1936633	PrimaryExpression	2		1936457	1					
ANR	1936634	PrimaryExpression	0x3f		1936457	1					
ANR	1936635	ExpressionStatement	current += 3	84:2:3598:3610	1936457	4	True				
ANR	1936636	AssignmentExpression	current += 3		1936457	0		+=			
ANR	1936637	Identifier	current		1936457	0					
ANR	1936638	PrimaryExpression	3		1936457	1					
ANR	1936639	ExpressionStatement	length -= 3	85:2:3614:3625	1936457	5	True				
ANR	1936640	AssignmentExpression	length -= 3		1936457	0		-=			
ANR	1936641	Identifier	length		1936457	0					
ANR	1936642	PrimaryExpression	3		1936457	1					
ANR	1936643	IfStatement	if ( length != 0 )		1936457	8					
ANR	1936644	Condition	length != 0	89:5:3718:3728	1936457	0	True				
ANR	1936645	EqualityExpression	length != 0		1936457	0		!=			
ANR	1936646	Identifier	length		1936457	0					
ANR	1936647	PrimaryExpression	0		1936457	1					
ANR	1936648	CompoundStatement		33:18:873:873	1936457	1					
ANR	1936649	ExpressionStatement	* p ++ = base64_table [ current [ 0 ] >> 2 ]	90:2:3735:3771	1936457	0	True				
ANR	1936650	AssignmentExpression	* p ++ = base64_table [ current [ 0 ] >> 2 ]		1936457	0		=			
ANR	1936651	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936652	UnaryOperator	*		1936457	0					
ANR	1936653	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936654	Identifier	p		1936457	0					
ANR	1936655	IncDec	++		1936457	1					
ANR	1936656	ArrayIndexing	base64_table [ current [ 0 ] >> 2 ]		1936457	1					
ANR	1936657	Identifier	base64_table		1936457	0					
ANR	1936658	ShiftExpression	current [ 0 ] >> 2		1936457	1		>>			
ANR	1936659	ArrayIndexing	current [ 0 ]		1936457	0					
ANR	1936660	Identifier	current		1936457	0					
ANR	1936661	PrimaryExpression	0		1936457	1					
ANR	1936662	PrimaryExpression	2		1936457	1					
ANR	1936663	IfStatement	if ( length > 1 )		1936457	1					
ANR	1936664	Condition	length > 1	91:6:3779:3788	1936457	0	True				
ANR	1936665	RelationalExpression	length > 1		1936457	0		>			
ANR	1936666	Identifier	length		1936457	0					
ANR	1936667	PrimaryExpression	1		1936457	1					
ANR	1936668	CompoundStatement		35:18:933:933	1936457	1					
ANR	1936669	ExpressionStatement	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]	92:3:3796:3863	1936457	0	True				
ANR	1936670	AssignmentExpression	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		1936457	0		=			
ANR	1936671	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936672	UnaryOperator	*		1936457	0					
ANR	1936673	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936674	Identifier	p		1936457	0					
ANR	1936675	IncDec	++		1936457	1					
ANR	1936676	ArrayIndexing	base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		1936457	1					
ANR	1936677	Identifier	base64_table		1936457	0					
ANR	1936678	AdditiveExpression	( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 )		1936457	1		+			
ANR	1936679	ShiftExpression	( current [ 0 ] & 0x03 ) << 4		1936457	0		<<			
ANR	1936680	BitAndExpression	current [ 0 ] & 0x03		1936457	0		&			
ANR	1936681	ArrayIndexing	current [ 0 ]		1936457	0					
ANR	1936682	Identifier	current		1936457	0					
ANR	1936683	PrimaryExpression	0		1936457	1					
ANR	1936684	PrimaryExpression	0x03		1936457	1					
ANR	1936685	PrimaryExpression	4		1936457	1					
ANR	1936686	ShiftExpression	current [ 1 ] >> 4		1936457	1		>>			
ANR	1936687	ArrayIndexing	current [ 1 ]		1936457	0					
ANR	1936688	Identifier	current		1936457	0					
ANR	1936689	PrimaryExpression	1		1936457	1					
ANR	1936690	PrimaryExpression	4		1936457	1					
ANR	1936691	ExpressionStatement	* p ++ = base64_table [ ( current [ 1 ] & 0x0f ) << 2 ]	93:3:3868:3913	1936457	1	True				
ANR	1936692	AssignmentExpression	* p ++ = base64_table [ ( current [ 1 ] & 0x0f ) << 2 ]		1936457	0		=			
ANR	1936693	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936694	UnaryOperator	*		1936457	0					
ANR	1936695	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936696	Identifier	p		1936457	0					
ANR	1936697	IncDec	++		1936457	1					
ANR	1936698	ArrayIndexing	base64_table [ ( current [ 1 ] & 0x0f ) << 2 ]		1936457	1					
ANR	1936699	Identifier	base64_table		1936457	0					
ANR	1936700	ShiftExpression	( current [ 1 ] & 0x0f ) << 2		1936457	1		<<			
ANR	1936701	BitAndExpression	current [ 1 ] & 0x0f		1936457	0		&			
ANR	1936702	ArrayIndexing	current [ 1 ]		1936457	0					
ANR	1936703	Identifier	current		1936457	0					
ANR	1936704	PrimaryExpression	1		1936457	1					
ANR	1936705	PrimaryExpression	0x0f		1936457	1					
ANR	1936706	PrimaryExpression	2		1936457	1					
ANR	1936707	ExpressionStatement	* p ++ = base64_pad	94:3:3918:3935	1936457	2	True				
ANR	1936708	AssignmentExpression	* p ++ = base64_pad		1936457	0		=			
ANR	1936709	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936710	UnaryOperator	*		1936457	0					
ANR	1936711	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936712	Identifier	p		1936457	0					
ANR	1936713	IncDec	++		1936457	1					
ANR	1936714	Identifier	base64_pad		1936457	1					
ANR	1936715	ElseStatement	else		1936457	0					
ANR	1936716	CompoundStatement		39:9:1088:1088	1936457	0					
ANR	1936717	ExpressionStatement	* p ++ = base64_table [ ( current [ 0 ] & 0x03 ) << 4 ]	96:3:3951:3996	1936457	0	True				
ANR	1936718	AssignmentExpression	* p ++ = base64_table [ ( current [ 0 ] & 0x03 ) << 4 ]		1936457	0		=			
ANR	1936719	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936720	UnaryOperator	*		1936457	0					
ANR	1936721	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936722	Identifier	p		1936457	0					
ANR	1936723	IncDec	++		1936457	1					
ANR	1936724	ArrayIndexing	base64_table [ ( current [ 0 ] & 0x03 ) << 4 ]		1936457	1					
ANR	1936725	Identifier	base64_table		1936457	0					
ANR	1936726	ShiftExpression	( current [ 0 ] & 0x03 ) << 4		1936457	1		<<			
ANR	1936727	BitAndExpression	current [ 0 ] & 0x03		1936457	0		&			
ANR	1936728	ArrayIndexing	current [ 0 ]		1936457	0					
ANR	1936729	Identifier	current		1936457	0					
ANR	1936730	PrimaryExpression	0		1936457	1					
ANR	1936731	PrimaryExpression	0x03		1936457	1					
ANR	1936732	PrimaryExpression	4		1936457	1					
ANR	1936733	ExpressionStatement	* p ++ = base64_pad	97:3:4001:4018	1936457	1	True				
ANR	1936734	AssignmentExpression	* p ++ = base64_pad		1936457	0		=			
ANR	1936735	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936736	UnaryOperator	*		1936457	0					
ANR	1936737	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936738	Identifier	p		1936457	0					
ANR	1936739	IncDec	++		1936457	1					
ANR	1936740	Identifier	base64_pad		1936457	1					
ANR	1936741	ExpressionStatement	* p ++ = base64_pad	98:3:4023:4040	1936457	2	True				
ANR	1936742	AssignmentExpression	* p ++ = base64_pad		1936457	0		=			
ANR	1936743	UnaryOperationExpression	* p ++		1936457	0					
ANR	1936744	UnaryOperator	*		1936457	0					
ANR	1936745	PostIncDecOperationExpression	p ++		1936457	1					
ANR	1936746	Identifier	p		1936457	0					
ANR	1936747	IncDec	++		1936457	1					
ANR	1936748	Identifier	base64_pad		1936457	1					
ANR	1936749	IfStatement	if ( ret_length != NULL )		1936457	9					
ANR	1936750	Condition	ret_length != NULL	101:5:4054:4071	1936457	0	True				
ANR	1936751	EqualityExpression	ret_length != NULL		1936457	0		!=			
ANR	1936752	Identifier	ret_length		1936457	0					
ANR	1936753	Identifier	NULL		1936457	1					
ANR	1936754	CompoundStatement		45:25:1216:1216	1936457	1					
ANR	1936755	ExpressionStatement	* ret_length = ( int ) ( p - result )	102:2:4078:4109	1936457	0	True				
ANR	1936756	AssignmentExpression	* ret_length = ( int ) ( p - result )		1936457	0		=			
ANR	1936757	UnaryOperationExpression	* ret_length		1936457	0					
ANR	1936758	UnaryOperator	*		1936457	0					
ANR	1936759	Identifier	ret_length		1936457	1					
ANR	1936760	CastExpression	( int ) ( p - result )		1936457	1					
ANR	1936761	CastTarget	int		1936457	0					
ANR	1936762	AdditiveExpression	p - result		1936457	1		-			
ANR	1936763	Identifier	p		1936457	0					
ANR	1936764	Identifier	result		1936457	1					
ANR	1936765	ExpressionStatement	* p = '\\0'	104:1:4115:4124	1936457	10	True				
ANR	1936766	AssignmentExpression	* p = '\\0'		1936457	0		=			
ANR	1936767	UnaryOperationExpression	* p		1936457	0					
ANR	1936768	UnaryOperator	*		1936457	0					
ANR	1936769	Identifier	p		1936457	1					
ANR	1936770	PrimaryExpression	'\\0'		1936457	1					
ANR	1936771	ReturnStatement	return result ;	105:1:4127:4140	1936457	11	True				
ANR	1936772	Identifier	result		1936457	0					
ANR	1936773	ReturnType	unsigned char *		1936457	1					
ANR	1936774	Identifier	php_base64_encode		1936457	2					
ANR	1936775	ParameterList	"const unsigned char * str , int length , int * ret_length"		1936457	3					
ANR	1936776	Parameter	const unsigned char * str	56:40:2792:2815	1936457	0	True				
ANR	1936777	ParameterType	const unsigned char *		1936457	0					
ANR	1936778	Identifier	str		1936457	1					
ANR	1936779	Parameter	int length	56:66:2818:2827	1936457	1	True				
ANR	1936780	ParameterType	int		1936457	0					
ANR	1936781	Identifier	length		1936457	1					
ANR	1936782	Parameter	int * ret_length	56:78:2830:2844	1936457	2	True				
ANR	1936783	ParameterType	int *		1936457	0					
ANR	1936784	Identifier	ret_length		1936457	1					
ANR	1936785	CFGEntryNode	ENTRY		1936457		True				
ANR	1936786	CFGExitNode	EXIT		1936457		True				
ANR	1936787	Symbol	NULL		1936457						
ANR	1936788	Symbol	* p ++		1936457						
ANR	1936789	Symbol	length		1936457						
ANR	1936790	Symbol	* current		1936457						
ANR	1936791	Symbol	base64_table		1936457						
ANR	1936792	Symbol	* ret_length		1936457						
ANR	1936793	Symbol	* base64_table		1936457						
ANR	1936794	Symbol	str		1936457						
ANR	1936795	Symbol	p		1936457						
ANR	1936796	Symbol	result		1936457						
ANR	1936797	Symbol	current		1936457						
ANR	1936798	Symbol	* * current		1936457						
ANR	1936799	Symbol	base64_pad		1936457						
ANR	1936800	Symbol	INT_MAX		1936457						
ANR	1936801	Symbol	* p		1936457						
ANR	1936802	Symbol	safe_emalloc		1936457						
ANR	1936803	Symbol	ret_length		1936457						
ANR	1936804	Function	php_base64_decode	143:7:5106:5264							
ANR	1936805	FunctionDef	"php_base64_decode (const unsigned char * str , int length , int * ret_length)"		1936804	0					
ANR	1936806	CompoundStatement		144:0:5204:5264	1936804	0					
ANR	1936807	ReturnStatement	"return php_base64_decode_ex ( str , length , ret_length , 0 ) ;"	145:1:5207:5262	1936804	0	True				
ANR	1936808	CallExpression	"php_base64_decode_ex ( str , length , ret_length , 0 )"		1936804	0					
ANR	1936809	Callee	php_base64_decode_ex		1936804	0					
ANR	1936810	Identifier	php_base64_decode_ex		1936804	0					
ANR	1936811	ArgumentList	str		1936804	1					
ANR	1936812	Argument	str		1936804	0					
ANR	1936813	Identifier	str		1936804	0					
ANR	1936814	Argument	length		1936804	1					
ANR	1936815	Identifier	length		1936804	0					
ANR	1936816	Argument	ret_length		1936804	2					
ANR	1936817	Identifier	ret_length		1936804	0					
ANR	1936818	Argument	0		1936804	3					
ANR	1936819	PrimaryExpression	0		1936804	0					
ANR	1936820	ReturnType	unsigned char *		1936804	1					
ANR	1936821	Identifier	php_base64_decode		1936804	2					
ANR	1936822	ParameterList	"const unsigned char * str , int length , int * ret_length"		1936804	3					
ANR	1936823	Parameter	const unsigned char * str	143:40:5139:5162	1936804	0	True				
ANR	1936824	ParameterType	const unsigned char *		1936804	0					
ANR	1936825	Identifier	str		1936804	1					
ANR	1936826	Parameter	int length	143:66:5165:5174	1936804	1	True				
ANR	1936827	ParameterType	int		1936804	0					
ANR	1936828	Identifier	length		1936804	1					
ANR	1936829	Parameter	int * ret_length	143:78:5177:5191	1936804	2	True				
ANR	1936830	ParameterType	int *		1936804	0					
ANR	1936831	Identifier	ret_length		1936804	1					
ANR	1936832	CFGEntryNode	ENTRY		1936804		True				
ANR	1936833	CFGExitNode	EXIT		1936804		True				
ANR	1936834	Symbol	str		1936804						
ANR	1936835	Symbol	length		1936804						
ANR	1936836	Symbol	php_base64_decode_ex		1936804						
ANR	1936837	Symbol	ret_length		1936804						
ANR	1936838	Function	php_base64_decode_ex	149:7:5284:6768							
ANR	1936839	FunctionDef	"php_base64_decode_ex (const unsigned char * str , int length , int * ret_length , zend_bool strict)"		1936838	0					
ANR	1936840	CompoundStatement		150:0:5403:6768	1936838	0					
ANR	1936841	IdentifierDeclStatement	const unsigned char * current = str ;	151:1:5406:5440	1936838	0	True				
ANR	1936842	IdentifierDecl	* current = str		1936838	0					
ANR	1936843	IdentifierDeclType	const unsigned char *		1936838	0					
ANR	1936844	Identifier	current		1936838	1					
ANR	1936845	AssignmentExpression	* current = str		1936838	2		=			
ANR	1936846	Identifier	str		1936838	0					
ANR	1936847	Identifier	str		1936838	1					
ANR	1936848	IdentifierDeclStatement	"int ch , i = 0 , j = 0 , k ;"	152:1:5443:5466	1936838	1	True				
ANR	1936849	IdentifierDecl	ch		1936838	0					
ANR	1936850	IdentifierDeclType	int		1936838	0					
ANR	1936851	Identifier	ch		1936838	1					
ANR	1936852	IdentifierDecl	i = 0		1936838	1					
ANR	1936853	IdentifierDeclType	int		1936838	0					
ANR	1936854	Identifier	i		1936838	1					
ANR	1936855	AssignmentExpression	i = 0		1936838	2		=			
ANR	1936856	Identifier	i		1936838	0					
ANR	1936857	PrimaryExpression	0		1936838	1					
ANR	1936858	IdentifierDecl	j = 0		1936838	2					
ANR	1936859	IdentifierDeclType	int		1936838	0					
ANR	1936860	Identifier	j		1936838	1					
ANR	1936861	AssignmentExpression	j = 0		1936838	2		=			
ANR	1936862	Identifier	j		1936838	0					
ANR	1936863	PrimaryExpression	0		1936838	1					
ANR	1936864	IdentifierDecl	k		1936838	3					
ANR	1936865	IdentifierDeclType	int		1936838	0					
ANR	1936866	Identifier	k		1936838	1					
ANR	1936867	IdentifierDeclStatement	unsigned char * result ;	154:1:5513:5534	1936838	2	True				
ANR	1936868	IdentifierDecl	* result		1936838	0					
ANR	1936869	IdentifierDeclType	unsigned char *		1936838	0					
ANR	1936870	Identifier	result		1936838	1					
ANR	1936871	ExpressionStatement	"result = ( unsigned char * ) safe_emalloc ( length , 1 , 1 )"	156:1:5538:5590	1936838	3	True				
ANR	1936872	AssignmentExpression	"result = ( unsigned char * ) safe_emalloc ( length , 1 , 1 )"		1936838	0		=			
ANR	1936873	Identifier	result		1936838	0					
ANR	1936874	CastExpression	"( unsigned char * ) safe_emalloc ( length , 1 , 1 )"		1936838	1					
ANR	1936875	CastTarget	unsigned char *		1936838	0					
ANR	1936876	CallExpression	"safe_emalloc ( length , 1 , 1 )"		1936838	1					
ANR	1936877	Callee	safe_emalloc		1936838	0					
ANR	1936878	Identifier	safe_emalloc		1936838	0					
ANR	1936879	ArgumentList	length		1936838	1					
ANR	1936880	Argument	length		1936838	0					
ANR	1936881	Identifier	length		1936838	0					
ANR	1936882	Argument	1		1936838	1					
ANR	1936883	PrimaryExpression	1		1936838	0					
ANR	1936884	Argument	1		1936838	2					
ANR	1936885	PrimaryExpression	1		1936838	0					
ANR	1936886	WhileStatement	while ( ( ch = * current ++ ) != '\\0' && length -- > 0 )		1936838	4					
ANR	1936887	Condition	( ch = * current ++ ) != '\\0' && length -- > 0	159:8:5658:5698	1936838	0	True				
ANR	1936888	AndExpression	( ch = * current ++ ) != '\\0' && length -- > 0		1936838	0		&&			
ANR	1936889	EqualityExpression	( ch = * current ++ ) != '\\0'		1936838	0		!=			
ANR	1936890	AssignmentExpression	ch = * current ++		1936838	0		=			
ANR	1936891	Identifier	ch		1936838	0					
ANR	1936892	UnaryOperationExpression	* current ++		1936838	1					
ANR	1936893	UnaryOperator	*		1936838	0					
ANR	1936894	PostIncDecOperationExpression	current ++		1936838	1					
ANR	1936895	Identifier	current		1936838	0					
ANR	1936896	IncDec	++		1936838	1					
ANR	1936897	PrimaryExpression	'\\0'		1936838	1					
ANR	1936898	RelationalExpression	length -- > 0		1936838	1		>			
ANR	1936899	PostIncDecOperationExpression	length --		1936838	0					
ANR	1936900	Identifier	length		1936838	0					
ANR	1936901	IncDec	--		1936838	1					
ANR	1936902	PrimaryExpression	0		1936838	1					
ANR	1936903	CompoundStatement		10:51:297:297	1936838	1					
ANR	1936904	IfStatement	if ( ch == base64_pad )		1936838	0					
ANR	1936905	Condition	ch == base64_pad	160:6:5709:5724	1936838	0	True				
ANR	1936906	EqualityExpression	ch == base64_pad		1936838	0		==			
ANR	1936907	Identifier	ch		1936838	0					
ANR	1936908	Identifier	base64_pad		1936838	1					
ANR	1936909	CompoundStatement		11:24:323:323	1936838	1					
ANR	1936910	IfStatement	if ( * current != '=' && ( ( i % 4 ) == 1 || ( strict && length > 0 ) ) )		1936838	0					
ANR	1936911	Condition	* current != '=' && ( ( i % 4 ) == 1 || ( strict && length > 0 ) )	161:7:5736:5794	1936838	0	True				
ANR	1936912	AndExpression	* current != '=' && ( ( i % 4 ) == 1 || ( strict && length > 0 ) )		1936838	0		&&			
ANR	1936913	EqualityExpression	* current != '='		1936838	0		!=			
ANR	1936914	UnaryOperationExpression	* current		1936838	0					
ANR	1936915	UnaryOperator	*		1936838	0					
ANR	1936916	Identifier	current		1936838	1					
ANR	1936917	PrimaryExpression	'='		1936838	1					
ANR	1936918	OrExpression	( i % 4 ) == 1 || ( strict && length > 0 )		1936838	1		||			
ANR	1936919	EqualityExpression	( i % 4 ) == 1		1936838	0		==			
ANR	1936920	MultiplicativeExpression	i % 4		1936838	0		%			
ANR	1936921	Identifier	i		1936838	0					
ANR	1936922	PrimaryExpression	4		1936838	1					
ANR	1936923	PrimaryExpression	1		1936838	1					
ANR	1936924	AndExpression	strict && length > 0		1936838	1		&&			
ANR	1936925	Identifier	strict		1936838	0					
ANR	1936926	RelationalExpression	length > 0		1936838	1		>			
ANR	1936927	Identifier	length		1936838	0					
ANR	1936928	PrimaryExpression	0		1936838	1					
ANR	1936929	CompoundStatement		12:68:393:393	1936838	1					
ANR	1936930	IfStatement	if ( ( i % 4 ) != 1 )		1936838	0					
ANR	1936931	Condition	( i % 4 ) != 1	162:8:5807:5818	1936838	0	True				
ANR	1936932	EqualityExpression	( i % 4 ) != 1		1936838	0		!=			
ANR	1936933	MultiplicativeExpression	i % 4		1936838	0		%			
ANR	1936934	Identifier	i		1936838	0					
ANR	1936935	PrimaryExpression	4		1936838	1					
ANR	1936936	PrimaryExpression	1		1936838	1					
ANR	1936937	CompoundStatement		13:22:417:417	1936838	1					
ANR	1936938	WhileStatement	while ( isspace ( * ( ++ current ) ) )		1936838	0					
ANR	1936939	Condition	isspace ( * ( ++ current ) )	163:12:5835:5855	1936838	0	True				
ANR	1936940	CallExpression	isspace ( * ( ++ current ) )		1936838	0					
ANR	1936941	Callee	isspace		1936838	0					
ANR	1936942	Identifier	isspace		1936838	0					
ANR	1936943	ArgumentList	* ( ++ current )		1936838	1					
ANR	1936944	Argument	* ( ++ current )		1936838	0					
ANR	1936945	UnaryOperationExpression	* ( ++ current )		1936838	0					
ANR	1936946	UnaryOperator	*		1936838	0					
ANR	1936947	UnaryExpression	++ current		1936838	1					
ANR	1936948	IncDec	++		1936838	0					
ANR	1936949	Identifier	current		1936838	1					
ANR	1936950	CompoundStatement		14:35:454:454	1936838	1					
ANR	1936951	ContinueStatement	continue ;	164:6:5866:5874	1936838	0	True				
ANR	1936952	IfStatement	if ( * current == '\\0' )		1936838	1					
ANR	1936953	Condition	* current == '\\0'	166:9:5892:5907	1936838	0	True				
ANR	1936954	EqualityExpression	* current == '\\0'		1936838	0		==			
ANR	1936955	UnaryOperationExpression	* current		1936838	0					
ANR	1936956	UnaryOperator	*		1936838	0					
ANR	1936957	Identifier	current		1936838	1					
ANR	1936958	PrimaryExpression	'\\0'		1936838	1					
ANR	1936959	CompoundStatement		17:27:506:506	1936838	1					
ANR	1936960	ContinueStatement	continue ;	167:6:5918:5926	1936838	0	True				
ANR	1936961	ExpressionStatement	efree ( result )	170:4:5945:5958	1936838	1	True				
ANR	1936962	CallExpression	efree ( result )		1936838	0					
ANR	1936963	Callee	efree		1936838	0					
ANR	1936964	Identifier	efree		1936838	0					
ANR	1936965	ArgumentList	result		1936838	1					
ANR	1936966	Argument	result		1936838	0					
ANR	1936967	Identifier	result		1936838	0					
ANR	1936968	ReturnStatement	return NULL ;	171:4:5964:5975	1936838	2	True				
ANR	1936969	Identifier	NULL		1936838	0					
ANR	1936970	ContinueStatement	continue ;	173:3:5985:5993	1936838	1	True				
ANR	1936971	ExpressionStatement	ch = base64_reverse_table [ ch ]	176:2:6002:6031	1936838	1	True				
ANR	1936972	AssignmentExpression	ch = base64_reverse_table [ ch ]		1936838	0		=			
ANR	1936973	Identifier	ch		1936838	0					
ANR	1936974	ArrayIndexing	base64_reverse_table [ ch ]		1936838	1					
ANR	1936975	Identifier	base64_reverse_table		1936838	0					
ANR	1936976	Identifier	ch		1936838	1					
ANR	1936977	IfStatement	if ( ( ! strict && ch < 0 ) || ch == - 1 )		1936838	2					
ANR	1936978	Condition	( ! strict && ch < 0 ) || ch == - 1	177:6:6039:6069	1936838	0	True				
ANR	1936979	OrExpression	( ! strict && ch < 0 ) || ch == - 1		1936838	0		||			
ANR	1936980	AndExpression	! strict && ch < 0		1936838	0		&&			
ANR	1936981	UnaryOperationExpression	! strict		1936838	0					
ANR	1936982	UnaryOperator	!		1936838	0					
ANR	1936983	Identifier	strict		1936838	1					
ANR	1936984	RelationalExpression	ch < 0		1936838	1		<			
ANR	1936985	Identifier	ch		1936838	0					
ANR	1936986	PrimaryExpression	0		1936838	1					
ANR	1936987	EqualityExpression	ch == - 1		1936838	1		==			
ANR	1936988	Identifier	ch		1936838	0					
ANR	1936989	UnaryOperationExpression	- 1		1936838	1					
ANR	1936990	UnaryOperator	-		1936838	0					
ANR	1936991	PrimaryExpression	1		1936838	1					
ANR	1936992	CompoundStatement		28:39:668:668	1936838	1					
ANR	1936993	ContinueStatement	continue ;	178:3:6146:6154	1936838	0	True				
ANR	1936994	ElseStatement	else		1936838	0					
ANR	1936995	IfStatement	if ( ch == - 2 )		1936838	0					
ANR	1936996	Condition	ch == - 2	179:13:6169:6176	1936838	0	True				
ANR	1936997	EqualityExpression	ch == - 2		1936838	0		==			
ANR	1936998	Identifier	ch		1936838	0					
ANR	1936999	UnaryOperationExpression	- 2		1936838	1					
ANR	1937000	UnaryOperator	-		1936838	0					
ANR	1937001	PrimaryExpression	2		1936838	1					
ANR	1937002	CompoundStatement		30:23:775:775	1936838	1					
ANR	1937003	ExpressionStatement	efree ( result )	180:3:6184:6197	1936838	0	True				
ANR	1937004	CallExpression	efree ( result )		1936838	0					
ANR	1937005	Callee	efree		1936838	0					
ANR	1937006	Identifier	efree		1936838	0					
ANR	1937007	ArgumentList	result		1936838	1					
ANR	1937008	Argument	result		1936838	0					
ANR	1937009	Identifier	result		1936838	0					
ANR	1937010	ReturnStatement	return NULL ;	181:3:6202:6213	1936838	1	True				
ANR	1937011	Identifier	NULL		1936838	0					
ANR	1937012	SwitchStatement	switch ( i % 4 )		1936838	3					
ANR	1937013	Condition	i % 4	184:9:6229:6233	1936838	0	True				
ANR	1937014	MultiplicativeExpression	i % 4		1936838	0		%			
ANR	1937015	Identifier	i		1936838	0					
ANR	1937016	PrimaryExpression	4		1936838	1					
ANR	1937017	CompoundStatement		35:16:832:832	1936838	1					
ANR	1937018	Label	case 0 :	185:2:6240:6246	1936838	0	True				
ANR	1937019	ExpressionStatement	result [ j ] = ch << 2	186:3:6251:6270	1936838	1	True				
ANR	1937020	AssignmentExpression	result [ j ] = ch << 2		1936838	0		=			
ANR	1937021	ArrayIndexing	result [ j ]		1936838	0					
ANR	1937022	Identifier	result		1936838	0					
ANR	1937023	Identifier	j		1936838	1					
ANR	1937024	ShiftExpression	ch << 2		1936838	1		<<			
ANR	1937025	Identifier	ch		1936838	0					
ANR	1937026	PrimaryExpression	2		1936838	1					
ANR	1937027	BreakStatement	break ;	187:3:6275:6280	1936838	2	True				
ANR	1937028	Label	case 1 :	188:2:6284:6290	1936838	3	True				
ANR	1937029	ExpressionStatement	result [ j ++ ] |= ch >> 4	189:3:6295:6317	1936838	4	True				
ANR	1937030	AssignmentExpression	result [ j ++ ] |= ch >> 4		1936838	0		|=			
ANR	1937031	ArrayIndexing	result [ j ++ ]		1936838	0					
ANR	1937032	Identifier	result		1936838	0					
ANR	1937033	PostIncDecOperationExpression	j ++		1936838	1					
ANR	1937034	Identifier	j		1936838	0					
ANR	1937035	IncDec	++		1936838	1					
ANR	1937036	ShiftExpression	ch >> 4		1936838	1		>>			
ANR	1937037	Identifier	ch		1936838	0					
ANR	1937038	PrimaryExpression	4		1936838	1					
ANR	1937039	ExpressionStatement	result [ j ] = ( ch & 0x0f ) << 4	190:3:6322:6350	1936838	5	True				
ANR	1937040	AssignmentExpression	result [ j ] = ( ch & 0x0f ) << 4		1936838	0		=			
ANR	1937041	ArrayIndexing	result [ j ]		1936838	0					
ANR	1937042	Identifier	result		1936838	0					
ANR	1937043	Identifier	j		1936838	1					
ANR	1937044	ShiftExpression	( ch & 0x0f ) << 4		1936838	1		<<			
ANR	1937045	BitAndExpression	ch & 0x0f		1936838	0		&			
ANR	1937046	Identifier	ch		1936838	0					
ANR	1937047	PrimaryExpression	0x0f		1936838	1					
ANR	1937048	PrimaryExpression	4		1936838	1					
ANR	1937049	BreakStatement	break ;	191:3:6355:6360	1936838	6	True				
ANR	1937050	Label	case 2 :	192:2:6364:6370	1936838	7	True				
ANR	1937051	ExpressionStatement	result [ j ++ ] |= ch >> 2	193:3:6375:6396	1936838	8	True				
ANR	1937052	AssignmentExpression	result [ j ++ ] |= ch >> 2		1936838	0		|=			
ANR	1937053	ArrayIndexing	result [ j ++ ]		1936838	0					
ANR	1937054	Identifier	result		1936838	0					
ANR	1937055	PostIncDecOperationExpression	j ++		1936838	1					
ANR	1937056	Identifier	j		1936838	0					
ANR	1937057	IncDec	++		1936838	1					
ANR	1937058	ShiftExpression	ch >> 2		1936838	1		>>			
ANR	1937059	Identifier	ch		1936838	0					
ANR	1937060	PrimaryExpression	2		1936838	1					
ANR	1937061	ExpressionStatement	result [ j ] = ( ch & 0x03 ) << 6	194:3:6401:6429	1936838	9	True				
ANR	1937062	AssignmentExpression	result [ j ] = ( ch & 0x03 ) << 6		1936838	0		=			
ANR	1937063	ArrayIndexing	result [ j ]		1936838	0					
ANR	1937064	Identifier	result		1936838	0					
ANR	1937065	Identifier	j		1936838	1					
ANR	1937066	ShiftExpression	( ch & 0x03 ) << 6		1936838	1		<<			
ANR	1937067	BitAndExpression	ch & 0x03		1936838	0		&			
ANR	1937068	Identifier	ch		1936838	0					
ANR	1937069	PrimaryExpression	0x03		1936838	1					
ANR	1937070	PrimaryExpression	6		1936838	1					
ANR	1937071	BreakStatement	break ;	195:3:6434:6439	1936838	10	True				
ANR	1937072	Label	case 3 :	196:2:6443:6449	1936838	11	True				
ANR	1937073	ExpressionStatement	result [ j ++ ] |= ch	197:3:6454:6471	1936838	12	True				
ANR	1937074	AssignmentExpression	result [ j ++ ] |= ch		1936838	0		|=			
ANR	1937075	ArrayIndexing	result [ j ++ ]		1936838	0					
ANR	1937076	Identifier	result		1936838	0					
ANR	1937077	PostIncDecOperationExpression	j ++		1936838	1					
ANR	1937078	Identifier	j		1936838	0					
ANR	1937079	IncDec	++		1936838	1					
ANR	1937080	Identifier	ch		1936838	1					
ANR	1937081	BreakStatement	break ;	198:3:6476:6481	1936838	13	True				
ANR	1937082	ExpressionStatement	i ++	200:2:6489:6492	1936838	4	True				
ANR	1937083	PostIncDecOperationExpression	i ++		1936838	0					
ANR	1937084	Identifier	i		1936838	0					
ANR	1937085	IncDec	++		1936838	1					
ANR	1937086	ExpressionStatement	k = j	203:1:6499:6504	1936838	5	True				
ANR	1937087	AssignmentExpression	k = j		1936838	0		=			
ANR	1937088	Identifier	k		1936838	0					
ANR	1937089	Identifier	j		1936838	1					
ANR	1937090	IfStatement	if ( ch == base64_pad )		1936838	6					
ANR	1937091	Condition	ch == base64_pad	205:5:6558:6573	1936838	0	True				
ANR	1937092	EqualityExpression	ch == base64_pad		1936838	0		==			
ANR	1937093	Identifier	ch		1936838	0					
ANR	1937094	Identifier	base64_pad		1936838	1					
ANR	1937095	CompoundStatement		56:23:1172:1172	1936838	1					
ANR	1937096	SwitchStatement	switch ( i % 4 )		1936838	0					
ANR	1937097	Condition	i % 4	206:9:6587:6591	1936838	0	True				
ANR	1937098	MultiplicativeExpression	i % 4		1936838	0		%			
ANR	1937099	Identifier	i		1936838	0					
ANR	1937100	PrimaryExpression	4		1936838	1					
ANR	1937101	CompoundStatement		57:16:1190:1190	1936838	1					
ANR	1937102	Label	case 1 :	207:2:6598:6604	1936838	0	True				
ANR	1937103	ExpressionStatement	efree ( result )	208:3:6609:6622	1936838	1	True				
ANR	1937104	CallExpression	efree ( result )		1936838	0					
ANR	1937105	Callee	efree		1936838	0					
ANR	1937106	Identifier	efree		1936838	0					
ANR	1937107	ArgumentList	result		1936838	1					
ANR	1937108	Argument	result		1936838	0					
ANR	1937109	Identifier	result		1936838	0					
ANR	1937110	ReturnStatement	return NULL ;	209:3:6627:6638	1936838	2	True				
ANR	1937111	Identifier	NULL		1936838	0					
ANR	1937112	Label	case 2 :	210:2:6642:6648	1936838	3	True				
ANR	1937113	ExpressionStatement	k ++	211:3:6653:6656	1936838	4	True				
ANR	1937114	PostIncDecOperationExpression	k ++		1936838	0					
ANR	1937115	Identifier	k		1936838	0					
ANR	1937116	IncDec	++		1936838	1					
ANR	1937117	Label	case 3 :	212:2:6660:6666	1936838	5	True				
ANR	1937118	ExpressionStatement	result [ k ] = 0	213:3:6671:6684	1936838	6	True				
ANR	1937119	AssignmentExpression	result [ k ] = 0		1936838	0		=			
ANR	1937120	ArrayIndexing	result [ k ]		1936838	0					
ANR	1937121	Identifier	result		1936838	0					
ANR	1937122	Identifier	k		1936838	1					
ANR	1937123	PrimaryExpression	0		1936838	1					
ANR	1937124	IfStatement	if ( ret_length )		1936838	7					
ANR	1937125	Condition	ret_length	216:4:6697:6706	1936838	0	True				
ANR	1937126	Identifier	ret_length		1936838	0					
ANR	1937127	CompoundStatement		67:16:1305:1305	1936838	1					
ANR	1937128	ExpressionStatement	* ret_length = j	217:2:6713:6728	1936838	0	True				
ANR	1937129	AssignmentExpression	* ret_length = j		1936838	0		=			
ANR	1937130	UnaryOperationExpression	* ret_length		1936838	0					
ANR	1937131	UnaryOperator	*		1936838	0					
ANR	1937132	Identifier	ret_length		1936838	1					
ANR	1937133	Identifier	j		1936838	1					
ANR	1937134	ExpressionStatement	result [ j ] = '\\0'	219:1:6734:6750	1936838	8	True				
ANR	1937135	AssignmentExpression	result [ j ] = '\\0'		1936838	0		=			
ANR	1937136	ArrayIndexing	result [ j ]		1936838	0					
ANR	1937137	Identifier	result		1936838	0					
ANR	1937138	Identifier	j		1936838	1					
ANR	1937139	PrimaryExpression	'\\0'		1936838	1					
ANR	1937140	ReturnStatement	return result ;	220:1:6753:6766	1936838	9	True				
ANR	1937141	Identifier	result		1936838	0					
ANR	1937142	ReturnType	unsigned char *		1936838	1					
ANR	1937143	Identifier	php_base64_decode_ex		1936838	2					
ANR	1937144	ParameterList	"const unsigned char * str , int length , int * ret_length , zend_bool strict"		1936838	3					
ANR	1937145	Parameter	const unsigned char * str	149:43:5320:5343	1936838	0	True				
ANR	1937146	ParameterType	const unsigned char *		1936838	0					
ANR	1937147	Identifier	str		1936838	1					
ANR	1937148	Parameter	int length	149:69:5346:5355	1936838	1	True				
ANR	1937149	ParameterType	int		1936838	0					
ANR	1937150	Identifier	length		1936838	1					
ANR	1937151	Parameter	int * ret_length	149:81:5358:5372	1936838	2	True				
ANR	1937152	ParameterType	int *		1936838	0					
ANR	1937153	Identifier	ret_length		1936838	1					
ANR	1937154	Parameter	zend_bool strict	149:98:5375:5390	1936838	3	True				
ANR	1937155	ParameterType	zend_bool		1936838	0					
ANR	1937156	Identifier	strict		1936838	1					
ANR	1937157	CFGEntryNode	ENTRY		1936838		True				
ANR	1937158	CFGExitNode	EXIT		1936838		True				
ANR	1937159	Symbol	NULL		1936838						
ANR	1937160	Symbol	ch		1936838						
ANR	1937161	Symbol	length		1936838						
ANR	1937162	Symbol	* current		1936838						
ANR	1937163	Symbol	isspace		1936838						
ANR	1937164	Symbol	* ch		1936838						
ANR	1937165	Symbol	i		1936838						
ANR	1937166	Symbol	j		1936838						
ANR	1937167	Symbol	k		1936838						
ANR	1937168	Symbol	base64_reverse_table		1936838						
ANR	1937169	Symbol	* ret_length		1936838						
ANR	1937170	Symbol	* base64_reverse_table		1936838						
ANR	1937171	Symbol	* current ++		1936838						
ANR	1937172	Symbol	str		1936838						
ANR	1937173	Symbol	result		1936838						
ANR	1937174	Symbol	current		1936838						
ANR	1937175	Symbol	base64_pad		1936838						
ANR	1937176	Symbol	* j		1936838						
ANR	1937177	Symbol	* ( ++ current )		1936838						
ANR	1937178	Symbol	* result		1936838						
ANR	1937179	Symbol	* k		1936838						
ANR	1937180	Symbol	strict		1936838						
ANR	1937181	Symbol	safe_emalloc		1936838						
ANR	1937182	Symbol	ret_length		1936838						
ANR	1937183	DeclStmt									
ANR	1937184	Decl							char	char *	str
ANR	1937185	DeclStmt									
ANR	1937186	Decl							unsigned char	unsigned char *	result
ANR	1937187	DeclStmt									
ANR	1937188	Decl							int	int	str_len
ANR	1937189	Decl							int	int	ret_length
ANR	1937190	DeclStmt									
ANR	1937191	Decl							char	char *	str
ANR	1937192	DeclStmt									
ANR	1937193	Decl							unsigned char	unsigned char *	result
ANR	1937194	DeclStmt									
ANR	1937195	Decl							zend_bool	zend_bool	strict
ANR	1937196	DeclStmt									
ANR	1937197	Decl							int	int	str_len
ANR	1937198	Decl							int	int	ret_length
