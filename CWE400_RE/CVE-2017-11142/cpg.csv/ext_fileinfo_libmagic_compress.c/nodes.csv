command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	352408	File	data/converged/CVE-2017-11142_php-src/ext_fileinfo_libmagic_compress.c								
ANR	352409	ClassDef	<unnamed>	67:14:2329:3393							
ANR	352410	DeclStmt									
ANR	352411	Decl							const char	const char [ 8 ]	magic
ANR	352412	DeclStmt									
ANR	352413	Decl							size_t	size_t	maglen
ANR	352414	DeclStmt									
ANR	352415	Decl							const char	const char * [ 3 ]	argv
ANR	352416	DeclStmt									
ANR	352417	Decl							int	int	silent
ANR	352418	DeclStmt									
ANR	352419	Decl								 [ ]	compr
ANR	352420	DeclStmt									
ANR	352421	Decl							ssize_t	"ssize_t ( int , const void * , size_t )"	swrite
ANR	352422	DeclStmt									
ANR	352423	Decl							size_t	"size_t ( struct magic_set * , int , size_t , const unsigned char * , unsigned char * * , size_t )"	uncompressbuf
ANR	352424	DeclStmt									
ANR	352425	Decl							size_t	"size_t ( struct magic_set * , const unsigned char * , unsigned char * * , size_t )"	uncompressgzipped
ANR	352426	Function	file_zmagic	102:10:3774:4810							
ANR	352427	FunctionDef	"file_zmagic (struct magic_set * ms , int fd , const char * name , const unsigned char * buf , size_t nbytes)"		352426	0					
ANR	352428	CompoundStatement		105:0:3883:4810	352426	0					
ANR	352429	IdentifierDeclStatement	unsigned char * newbuf = NULL ;	106:1:3886:3914	352426	0	True				
ANR	352430	IdentifierDecl	* newbuf = NULL		352426	0					
ANR	352431	IdentifierDeclType	unsigned char *		352426	0					
ANR	352432	Identifier	newbuf		352426	1					
ANR	352433	AssignmentExpression	* newbuf = NULL		352426	2		=			
ANR	352434	Identifier	NULL		352426	0					
ANR	352435	Identifier	NULL		352426	1					
ANR	352436	IdentifierDeclStatement	"size_t i , nsz ;"	107:1:3917:3930	352426	1	True				
ANR	352437	IdentifierDecl	i		352426	0					
ANR	352438	IdentifierDeclType	size_t		352426	0					
ANR	352439	Identifier	i		352426	1					
ANR	352440	IdentifierDecl	nsz		352426	1					
ANR	352441	IdentifierDeclType	size_t		352426	0					
ANR	352442	Identifier	nsz		352426	1					
ANR	352443	IdentifierDeclStatement	int rv = 0 ;	108:1:3933:3943	352426	2	True				
ANR	352444	IdentifierDecl	rv = 0		352426	0					
ANR	352445	IdentifierDeclType	int		352426	0					
ANR	352446	Identifier	rv		352426	1					
ANR	352447	AssignmentExpression	rv = 0		352426	2		=			
ANR	352448	Identifier	rv		352426	0					
ANR	352449	PrimaryExpression	0		352426	1					
ANR	352450	IdentifierDeclStatement	int mime = ms -> flags & MAGIC_MIME ;	109:1:3946:3979	352426	3	True				
ANR	352451	IdentifierDecl	mime = ms -> flags & MAGIC_MIME		352426	0					
ANR	352452	IdentifierDeclType	int		352426	0					
ANR	352453	Identifier	mime		352426	1					
ANR	352454	AssignmentExpression	mime = ms -> flags & MAGIC_MIME		352426	2		=			
ANR	352455	Identifier	mime		352426	0					
ANR	352456	BitAndExpression	ms -> flags & MAGIC_MIME		352426	1		&			
ANR	352457	PtrMemberAccess	ms -> flags		352426	0					
ANR	352458	Identifier	ms		352426	0					
ANR	352459	Identifier	flags		352426	1					
ANR	352460	Identifier	MAGIC_MIME		352426	1					
ANR	352461	IdentifierDeclStatement	size_t ncompr ;	110:1:3982:3995	352426	4	True				
ANR	352462	IdentifierDecl	ncompr		352426	0					
ANR	352463	IdentifierDeclType	size_t		352426	0					
ANR	352464	Identifier	ncompr		352426	1					
ANR	352465	IfStatement	if ( ( ms -> flags & MAGIC_COMPRESS ) == 0 )		352426	5					
ANR	352466	Condition	( ms -> flags & MAGIC_COMPRESS ) == 0	112:5:4003:4035	352426	0	True				
ANR	352467	EqualityExpression	( ms -> flags & MAGIC_COMPRESS ) == 0		352426	0		==			
ANR	352468	BitAndExpression	ms -> flags & MAGIC_COMPRESS		352426	0		&			
ANR	352469	PtrMemberAccess	ms -> flags		352426	0					
ANR	352470	Identifier	ms		352426	0					
ANR	352471	Identifier	flags		352426	1					
ANR	352472	Identifier	MAGIC_COMPRESS		352426	1					
ANR	352473	PrimaryExpression	0		352426	1					
ANR	352474	ReturnStatement	return 0 ;	113:2:4040:4048	352426	1	True				
ANR	352475	PrimaryExpression	0		352426	0					
ANR	352476	ExpressionStatement	ncompr = sizeof ( compr ) / sizeof ( compr [ 0 ] )	115:1:4052:4093	352426	6	True				
ANR	352477	AssignmentExpression	ncompr = sizeof ( compr ) / sizeof ( compr [ 0 ] )		352426	0		=			
ANR	352478	Identifier	ncompr		352426	0					
ANR	352479	MultiplicativeExpression	sizeof ( compr ) / sizeof ( compr [ 0 ] )		352426	1		/			
ANR	352480	SizeofExpression	sizeof ( compr )		352426	0					
ANR	352481	Sizeof	sizeof		352426	0					
ANR	352482	SizeofOperand	compr		352426	1					
ANR	352483	SizeofExpression	sizeof ( compr [ 0 ] )		352426	1					
ANR	352484	Sizeof	sizeof		352426	0					
ANR	352485	ArrayIndexing	compr [ 0 ]		352426	1					
ANR	352486	Identifier	compr		352426	0					
ANR	352487	PrimaryExpression	0		352426	1					
ANR	352488	ForStatement	for ( i = 0 ; i < ncompr ; i ++ )		352426	7					
ANR	352489	ForInit	i = 0 ;	117:6:4102:4107	352426	0	True				
ANR	352490	AssignmentExpression	i = 0		352426	0		=			
ANR	352491	Identifier	i		352426	0					
ANR	352492	PrimaryExpression	0		352426	1					
ANR	352493	Condition	i < ncompr	117:13:4109:4118	352426	1	True				
ANR	352494	RelationalExpression	i < ncompr		352426	0		<			
ANR	352495	Identifier	i		352426	0					
ANR	352496	Identifier	ncompr		352426	1					
ANR	352497	PostIncDecOperationExpression	i ++	117:25:4121:4123	352426	2	True				
ANR	352498	Identifier	i		352426	0					
ANR	352499	IncDec	++		352426	1					
ANR	352500	CompoundStatement		13:30:242:242	352426	3					
ANR	352501	IfStatement	if ( nbytes < compr [ i ] . maglen )		352426	0					
ANR	352502	Condition	nbytes < compr [ i ] . maglen	118:6:4134:4157	352426	0	True				
ANR	352503	RelationalExpression	nbytes < compr [ i ] . maglen		352426	0		<			
ANR	352504	Identifier	nbytes		352426	0					
ANR	352505	MemberAccess	compr [ i ] . maglen		352426	1					
ANR	352506	ArrayIndexing	compr [ i ]		352426	0					
ANR	352507	Identifier	compr		352426	0					
ANR	352508	Identifier	i		352426	1					
ANR	352509	Identifier	maglen		352426	1					
ANR	352510	ContinueStatement	continue ;	119:3:4163:4171	352426	1	True				
ANR	352511	IfStatement	"if ( memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0 && ( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA )"		352426	1					
ANR	352512	Condition	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0 && ( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA"	120:6:4179:4307	352426	0	True				
ANR	352513	AndExpression	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0 && ( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA"		352426	0		&&			
ANR	352514	EqualityExpression	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0"		352426	0		==			
ANR	352515	CallExpression	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen )"		352426	0					
ANR	352516	Callee	memcmp		352426	0					
ANR	352517	Identifier	memcmp		352426	0					
ANR	352518	ArgumentList	buf		352426	1					
ANR	352519	Argument	buf		352426	0					
ANR	352520	Identifier	buf		352426	0					
ANR	352521	Argument	compr [ i ] . magic		352426	1					
ANR	352522	MemberAccess	compr [ i ] . magic		352426	0					
ANR	352523	ArrayIndexing	compr [ i ]		352426	0					
ANR	352524	Identifier	compr		352426	0					
ANR	352525	Identifier	i		352426	1					
ANR	352526	Identifier	magic		352426	1					
ANR	352527	Argument	compr [ i ] . maglen		352426	2					
ANR	352528	MemberAccess	compr [ i ] . maglen		352426	0					
ANR	352529	ArrayIndexing	compr [ i ]		352426	0					
ANR	352530	Identifier	compr		352426	0					
ANR	352531	Identifier	i		352426	1					
ANR	352532	Identifier	maglen		352426	1					
ANR	352533	PrimaryExpression	0		352426	1					
ANR	352534	EqualityExpression	"( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA"		352426	1		!=			
ANR	352535	AssignmentExpression	"nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes )"		352426	0		=			
ANR	352536	Identifier	nsz		352426	0					
ANR	352537	CallExpression	"uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes )"		352426	1					
ANR	352538	Callee	uncompressbuf		352426	0					
ANR	352539	Identifier	uncompressbuf		352426	0					
ANR	352540	ArgumentList	ms		352426	1					
ANR	352541	Argument	ms		352426	0					
ANR	352542	Identifier	ms		352426	0					
ANR	352543	Argument	fd		352426	1					
ANR	352544	Identifier	fd		352426	0					
ANR	352545	Argument	i		352426	2					
ANR	352546	Identifier	i		352426	0					
ANR	352547	Argument	buf		352426	3					
ANR	352548	Identifier	buf		352426	0					
ANR	352549	Argument	& newbuf		352426	4					
ANR	352550	UnaryOperationExpression	& newbuf		352426	0					
ANR	352551	UnaryOperator	&		352426	0					
ANR	352552	Identifier	newbuf		352426	1					
ANR	352553	Argument	nbytes		352426	5					
ANR	352554	Identifier	nbytes		352426	0					
ANR	352555	Identifier	NODATA		352426	1					
ANR	352556	CompoundStatement		18:26:426:426	352426	1					
ANR	352557	ExpressionStatement	ms -> flags &= ~MAGIC_COMPRESS	123:3:4315:4343	352426	0	True				
ANR	352558	AssignmentExpression	ms -> flags &= ~MAGIC_COMPRESS		352426	0		&=			
ANR	352559	PtrMemberAccess	ms -> flags		352426	0					
ANR	352560	Identifier	ms		352426	0					
ANR	352561	Identifier	flags		352426	1					
ANR	352562	Identifier	~MAGIC_COMPRESS		352426	1					
ANR	352563	ExpressionStatement	rv = - 1	124:3:4348:4355	352426	1	True				
ANR	352564	AssignmentExpression	rv = - 1		352426	0		=			
ANR	352565	Identifier	rv		352426	0					
ANR	352566	UnaryOperationExpression	- 1		352426	1					
ANR	352567	UnaryOperator	-		352426	0					
ANR	352568	PrimaryExpression	1		352426	1					
ANR	352569	IfStatement	"if ( file_buffer ( ms , - 1 , name , newbuf , nsz ) == - 1 )"		352426	2					
ANR	352570	Condition	"file_buffer ( ms , - 1 , name , newbuf , nsz ) == - 1"	125:7:4364:4407	352426	0	True				
ANR	352571	EqualityExpression	"file_buffer ( ms , - 1 , name , newbuf , nsz ) == - 1"		352426	0		==			
ANR	352572	CallExpression	"file_buffer ( ms , - 1 , name , newbuf , nsz )"		352426	0					
ANR	352573	Callee	file_buffer		352426	0					
ANR	352574	Identifier	file_buffer		352426	0					
ANR	352575	ArgumentList	ms		352426	1					
ANR	352576	Argument	ms		352426	0					
ANR	352577	Identifier	ms		352426	0					
ANR	352578	Argument	- 1		352426	1					
ANR	352579	UnaryOperationExpression	- 1		352426	0					
ANR	352580	UnaryOperator	-		352426	0					
ANR	352581	PrimaryExpression	1		352426	1					
ANR	352582	Argument	name		352426	2					
ANR	352583	Identifier	name		352426	0					
ANR	352584	Argument	newbuf		352426	3					
ANR	352585	Identifier	newbuf		352426	0					
ANR	352586	Argument	nsz		352426	4					
ANR	352587	Identifier	nsz		352426	0					
ANR	352588	UnaryOperationExpression	- 1		352426	1					
ANR	352589	UnaryOperator	-		352426	0					
ANR	352590	PrimaryExpression	1		352426	1					
ANR	352591	GotoStatement	goto error ;	126:4:4414:4424	352426	1	True				
ANR	352592	Identifier	error		352426	0					
ANR	352593	IfStatement	if ( mime == MAGIC_MIME || mime == 0 )		352426	3					
ANR	352594	Condition	mime == MAGIC_MIME || mime == 0	128:7:4434:4464	352426	0	True				
ANR	352595	OrExpression	mime == MAGIC_MIME || mime == 0		352426	0		||			
ANR	352596	EqualityExpression	mime == MAGIC_MIME		352426	0		==			
ANR	352597	Identifier	mime		352426	0					
ANR	352598	Identifier	MAGIC_MIME		352426	1					
ANR	352599	EqualityExpression	mime == 0		352426	1		==			
ANR	352600	Identifier	mime		352426	0					
ANR	352601	PrimaryExpression	0		352426	1					
ANR	352602	CompoundStatement		24:40:583:583	352426	1					
ANR	352603	IfStatement	"if ( file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" ) == - 1 )"		352426	0					
ANR	352604	Condition	"file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" ) == - 1"	129:8:4477:4544	352426	0	True				
ANR	352605	EqualityExpression	"file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" ) == - 1"		352426	0		==			
ANR	352606	CallExpression	"file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" )"		352426	0					
ANR	352607	Callee	file_printf		352426	0					
ANR	352608	Identifier	file_printf		352426	0					
ANR	352609	ArgumentList	ms		352426	1					
ANR	352610	Argument	ms		352426	0					
ANR	352611	Identifier	ms		352426	0					
ANR	352612	Argument	"mime ? "" compressed-encoding="" : "" ("""		352426	1					
ANR	352613	ConditionalExpression	"mime ? "" compressed-encoding="" : "" ("""		352426	0					
ANR	352614	Condition	mime		352426	0					
ANR	352615	Identifier	mime		352426	0					
ANR	352616	PrimaryExpression	""" compressed-encoding="""		352426	1					
ANR	352617	PrimaryExpression	""" ("""		352426	2					
ANR	352618	UnaryOperationExpression	- 1		352426	1					
ANR	352619	UnaryOperator	-		352426	0					
ANR	352620	PrimaryExpression	1		352426	1					
ANR	352621	GotoStatement	goto error ;	131:5:4552:4562	352426	1	True				
ANR	352622	Identifier	error		352426	0					
ANR	352623	IfStatement	"if ( file_buffer ( ms , - 1 , NULL , buf , nbytes ) == - 1 )"		352426	1					
ANR	352624	Condition	"file_buffer ( ms , - 1 , NULL , buf , nbytes ) == - 1"	132:8:4572:4615	352426	0	True				
ANR	352625	EqualityExpression	"file_buffer ( ms , - 1 , NULL , buf , nbytes ) == - 1"		352426	0		==			
ANR	352626	CallExpression	"file_buffer ( ms , - 1 , NULL , buf , nbytes )"		352426	0					
ANR	352627	Callee	file_buffer		352426	0					
ANR	352628	Identifier	file_buffer		352426	0					
ANR	352629	ArgumentList	ms		352426	1					
ANR	352630	Argument	ms		352426	0					
ANR	352631	Identifier	ms		352426	0					
ANR	352632	Argument	- 1		352426	1					
ANR	352633	UnaryOperationExpression	- 1		352426	0					
ANR	352634	UnaryOperator	-		352426	0					
ANR	352635	PrimaryExpression	1		352426	1					
ANR	352636	Argument	NULL		352426	2					
ANR	352637	Identifier	NULL		352426	0					
ANR	352638	Argument	buf		352426	3					
ANR	352639	Identifier	buf		352426	0					
ANR	352640	Argument	nbytes		352426	4					
ANR	352641	Identifier	nbytes		352426	0					
ANR	352642	UnaryOperationExpression	- 1		352426	1					
ANR	352643	UnaryOperator	-		352426	0					
ANR	352644	PrimaryExpression	1		352426	1					
ANR	352645	GotoStatement	goto error ;	133:5:4623:4633	352426	1	True				
ANR	352646	Identifier	error		352426	0					
ANR	352647	IfStatement	"if ( ! mime && file_printf ( ms , "")"" ) == - 1 )"		352426	2					
ANR	352648	Condition	"! mime && file_printf ( ms , "")"" ) == - 1"	134:8:4643:4677	352426	0	True				
ANR	352649	AndExpression	"! mime && file_printf ( ms , "")"" ) == - 1"		352426	0		&&			
ANR	352650	UnaryOperationExpression	! mime		352426	0					
ANR	352651	UnaryOperator	!		352426	0					
ANR	352652	Identifier	mime		352426	1					
ANR	352653	EqualityExpression	"file_printf ( ms , "")"" ) == - 1"		352426	1		==			
ANR	352654	CallExpression	"file_printf ( ms , "")"" )"		352426	0					
ANR	352655	Callee	file_printf		352426	0					
ANR	352656	Identifier	file_printf		352426	0					
ANR	352657	ArgumentList	ms		352426	1					
ANR	352658	Argument	ms		352426	0					
ANR	352659	Identifier	ms		352426	0					
ANR	352660	Argument	""")"""		352426	1					
ANR	352661	PrimaryExpression	""")"""		352426	0					
ANR	352662	UnaryOperationExpression	- 1		352426	1					
ANR	352663	UnaryOperator	-		352426	0					
ANR	352664	PrimaryExpression	1		352426	1					
ANR	352665	GotoStatement	goto error ;	135:5:4685:4695	352426	1	True				
ANR	352666	Identifier	error		352426	0					
ANR	352667	ExpressionStatement	rv = 1	138:3:4706:4712	352426	4	True				
ANR	352668	AssignmentExpression	rv = 1		352426	0		=			
ANR	352669	Identifier	rv		352426	0					
ANR	352670	PrimaryExpression	1		352426	1					
ANR	352671	BreakStatement	break ;	139:3:4717:4722	352426	5	True				
ANR	352672	Label	error :	142:0:4731:4736	352426	8	True				
ANR	352673	Identifier	error		352426	0					
ANR	352674	IfStatement	if ( newbuf )		352426	9					
ANR	352675	Condition	newbuf	143:5:4743:4748	352426	0	True				
ANR	352676	Identifier	newbuf		352426	0					
ANR	352677	ExpressionStatement	efree ( newbuf )	144:2:4753:4766	352426	1	True				
ANR	352678	CallExpression	efree ( newbuf )		352426	0					
ANR	352679	Callee	efree		352426	0					
ANR	352680	Identifier	efree		352426	0					
ANR	352681	ArgumentList	newbuf		352426	1					
ANR	352682	Argument	newbuf		352426	0					
ANR	352683	Identifier	newbuf		352426	0					
ANR	352684	ExpressionStatement	ms -> flags |= MAGIC_COMPRESS	145:1:4769:4796	352426	10	True				
ANR	352685	AssignmentExpression	ms -> flags |= MAGIC_COMPRESS		352426	0		|=			
ANR	352686	PtrMemberAccess	ms -> flags		352426	0					
ANR	352687	Identifier	ms		352426	0					
ANR	352688	Identifier	flags		352426	1					
ANR	352689	Identifier	MAGIC_COMPRESS		352426	1					
ANR	352690	ReturnStatement	return rv ;	146:1:4799:4808	352426	11	True				
ANR	352691	Identifier	rv		352426	0					
ANR	352692	ReturnType	int		352426	1					
ANR	352693	Identifier	file_zmagic		352426	2					
ANR	352694	ParameterList	"struct magic_set * ms , int fd , const char * name , const unsigned char * buf , size_t nbytes"		352426	3					
ANR	352695	Parameter	struct magic_set * ms	103:12:3790:3809	352426	0	True				
ANR	352696	ParameterType	struct magic_set *		352426	0					
ANR	352697	Identifier	ms		352426	1					
ANR	352698	Parameter	int fd	103:34:3812:3817	352426	1	True				
ANR	352699	ParameterType	int		352426	0					
ANR	352700	Identifier	fd		352426	1					
ANR	352701	Parameter	const char * name	103:42:3820:3835	352426	2	True				
ANR	352702	ParameterType	const char *		352426	0					
ANR	352703	Identifier	name		352426	1					
ANR	352704	Parameter	const unsigned char * buf	104:4:3842:3865	352426	3	True				
ANR	352705	ParameterType	const unsigned char *		352426	0					
ANR	352706	Identifier	buf		352426	1					
ANR	352707	Parameter	size_t nbytes	104:30:3868:3880	352426	4	True				
ANR	352708	ParameterType	size_t		352426	0					
ANR	352709	Identifier	nbytes		352426	1					
ANR	352710	CFGEntryNode	ENTRY		352426		True				
ANR	352711	CFGExitNode	EXIT		352426		True				
ANR	352712	Symbol	compr [ i ] . maglen		352426						
ANR	352713	Symbol	rv		352426						
ANR	352714	Symbol	file_printf		352426						
ANR	352715	Symbol	mime		352426						
ANR	352716	Symbol	ncompr		352426						
ANR	352717	Symbol	uncompressbuf		352426						
ANR	352718	Symbol	* compr		352426						
ANR	352719	Symbol	* ms		352426						
ANR	352720	Symbol	~MAGIC_COMPRESS		352426						
ANR	352721	Symbol	memcmp		352426						
ANR	352722	Symbol	nsz		352426						
ANR	352723	Symbol	MAGIC_COMPRESS		352426						
ANR	352724	Symbol	file_buffer		352426						
ANR	352725	Symbol	NULL		352426						
ANR	352726	Symbol	MAGIC_MIME		352426						
ANR	352727	Symbol	compr		352426						
ANR	352728	Symbol	ms		352426						
ANR	352729	Symbol	newbuf		352426						
ANR	352730	Symbol	i		352426						
ANR	352731	Symbol	nbytes		352426						
ANR	352732	Symbol	buf		352426						
ANR	352733	Symbol	* i		352426						
ANR	352734	Symbol	name		352426						
ANR	352735	Symbol	NODATA		352426						
ANR	352736	Symbol	compr [ i ] . magic		352426						
ANR	352737	Symbol	ms -> flags		352426						
ANR	352738	Symbol	& newbuf		352426						
ANR	352739	Symbol	fd		352426						
ANR	352740	Function	swrite	152:8:4873:5161							
ANR	352741	FunctionDef	"swrite (int fd , const void * buf , size_t n)"		352740	0					
ANR	352742	CompoundStatement		154:0:4923:5161	352740	0					
ANR	352743	IdentifierDeclStatement	ssize_t rv ;	155:1:4926:4936	352740	0	True				
ANR	352744	IdentifierDecl	rv		352740	0					
ANR	352745	IdentifierDeclType	ssize_t		352740	0					
ANR	352746	Identifier	rv		352740	1					
ANR	352747	IdentifierDeclStatement	size_t rn = n ;	156:1:4939:4952	352740	1	True				
ANR	352748	IdentifierDecl	rn = n		352740	0					
ANR	352749	IdentifierDeclType	size_t		352740	0					
ANR	352750	Identifier	rn		352740	1					
ANR	352751	AssignmentExpression	rn = n		352740	2		=			
ANR	352752	Identifier	n		352740	0					
ANR	352753	Identifier	n		352740	1					
ANR	352754	DoStatement	do		352740	2					
ANR	352755	SwitchStatement	"switch ( rv = write ( fd , buf , n ) )"		352740	0					
ANR	352756	Condition	"rv = write ( fd , buf , n )"	159:10:4969:4990	352740	0	True				
ANR	352757	AssignmentExpression	"rv = write ( fd , buf , n )"		352740	0		=			
ANR	352758	Identifier	rv		352740	0					
ANR	352759	CallExpression	"write ( fd , buf , n )"		352740	1					
ANR	352760	Callee	write		352740	0					
ANR	352761	Identifier	write		352740	0					
ANR	352762	ArgumentList	fd		352740	1					
ANR	352763	Argument	fd		352740	0					
ANR	352764	Identifier	fd		352740	0					
ANR	352765	Argument	buf		352740	1					
ANR	352766	Identifier	buf		352740	0					
ANR	352767	Argument	n		352740	2					
ANR	352768	Identifier	n		352740	0					
ANR	352769	CompoundStatement		6:34:69:69	352740	1					
ANR	352770	Statement	case	160:2:4997:5000	352740	0	True				
ANR	352771	Statement	-	160:7:5002:5002	352740	1	True				
ANR	352772	Label	1 :	160:8:5003:5004	352740	2	True				
ANR	352773	IfStatement	if ( errno == EINTR )		352740	3					
ANR	352774	Condition	errno == EINTR	161:7:5013:5026	352740	0	True				
ANR	352775	EqualityExpression	errno == EINTR		352740	0		==			
ANR	352776	Identifier	errno		352740	0					
ANR	352777	Identifier	EINTR		352740	1					
ANR	352778	ContinueStatement	continue ;	162:4:5033:5041	352740	1	True				
ANR	352779	ReturnStatement	return - 1 ;	163:3:5046:5055	352740	4	True				
ANR	352780	UnaryOperationExpression	- 1		352740	0					
ANR	352781	UnaryOperator	-		352740	0					
ANR	352782	PrimaryExpression	1		352740	1					
ANR	352783	Label	default :	164:2:5059:5066	352740	5	True				
ANR	352784	Identifier	default		352740	0					
ANR	352785	ExpressionStatement	n -= rv	165:3:5071:5078	352740	6	True				
ANR	352786	AssignmentExpression	n -= rv		352740	0		-=			
ANR	352787	Identifier	n		352740	0					
ANR	352788	Identifier	rv		352740	1					
ANR	352789	Statement	buf	166:3:5083:5085	352740	7	True				
ANR	352790	Statement	=	166:7:5087:5087	352740	8	True				
ANR	352791	Statement	CAST	166:9:5089:5092	352740	9	True				
ANR	352792	Statement	(	166:13:5093:5093	352740	10	True				
ANR	352793	Statement	const	166:14:5094:5098	352740	11	True				
ANR	352794	Statement	char	166:20:5100:5103	352740	12	True				
ANR	352795	Statement	*	166:25:5105:5105	352740	13	True				
ANR	352796	Statement	","	166:26:5106:5106	352740	14	True				
ANR	352797	Statement	buf	166:28:5108:5110	352740	15	True				
ANR	352798	Statement	)	166:31:5111:5111	352740	16	True				
ANR	352799	ExpressionStatement	+ rv	166:33:5113:5117	352740	17	True				
ANR	352800	UnaryOperationExpression	+ rv		352740	0					
ANR	352801	UnaryOperator	+		352740	0					
ANR	352802	Identifier	rv		352740	1					
ANR	352803	BreakStatement	break ;	167:3:5122:5127	352740	18	True				
ANR	352804	Condition	n > 0	169:8:5141:5145	352740	1	True				
ANR	352805	RelationalExpression	n > 0		352740	0		>			
ANR	352806	Identifier	n		352740	0					
ANR	352807	PrimaryExpression	0		352740	1					
ANR	352808	ReturnStatement	return rn ;	170:1:5150:5159	352740	3	True				
ANR	352809	Identifier	rn		352740	0					
ANR	352810	ReturnType	ssize_t		352740	1					
ANR	352811	Identifier	swrite		352740	2					
ANR	352812	ParameterList	"int fd , const void * buf , size_t n"		352740	3					
ANR	352813	Parameter	int fd	153:7:4888:4893	352740	0	True				
ANR	352814	ParameterType	int		352740	0					
ANR	352815	Identifier	fd		352740	1					
ANR	352816	Parameter	const void * buf	153:15:4896:4910	352740	1	True				
ANR	352817	ParameterType	const void *		352740	0					
ANR	352818	Identifier	buf		352740	1					
ANR	352819	Parameter	size_t n	153:32:4913:4920	352740	2	True				
ANR	352820	ParameterType	size_t		352740	0					
ANR	352821	Identifier	n		352740	1					
ANR	352822	CFGEntryNode	ENTRY		352740		True				
ANR	352823	CFGExitNode	EXIT		352740		True				
ANR	352824	Symbol	buf		352740						
ANR	352825	Symbol	errno		352740						
ANR	352826	Symbol	rv		352740						
ANR	352827	Symbol	EINTR		352740						
ANR	352828	Symbol	rn		352740						
ANR	352829	Symbol	write		352740						
ANR	352830	Symbol	fd		352740						
ANR	352831	Symbol	n		352740						
ANR	352832	Function	sread	177:10:5220:6313							
ANR	352833	FunctionDef	"sread (int fd , void * buf , size_t n , int canbepipe)"		352832	0					
ANR	352834	CompoundStatement		179:0:5278:6313	352832	0					
ANR	352835	IdentifierDeclStatement	ssize_t rv ;	180:1:5281:5291	352832	0	True				
ANR	352836	IdentifierDecl	rv		352832	0					
ANR	352837	IdentifierDeclType	ssize_t		352832	0					
ANR	352838	Identifier	rv		352832	1					
ANR	352839	IdentifierDeclStatement	int t = 0 ;	182:1:5310:5319	352832	1	True				
ANR	352840	IdentifierDecl	t = 0		352832	0					
ANR	352841	IdentifierDeclType	int		352832	0					
ANR	352842	Identifier	t		352832	1					
ANR	352843	AssignmentExpression	t = 0		352832	2		=			
ANR	352844	Identifier	t		352832	0					
ANR	352845	PrimaryExpression	0		352832	1					
ANR	352846	IdentifierDeclStatement	size_t rn = n ;	184:1:5329:5342	352832	2	True				
ANR	352847	IdentifierDecl	rn = n		352832	0					
ANR	352848	IdentifierDeclType	size_t		352832	0					
ANR	352849	Identifier	rn		352832	1					
ANR	352850	AssignmentExpression	rn = n		352832	2		=			
ANR	352851	Identifier	n		352832	0					
ANR	352852	Identifier	n		352832	1					
ANR	352853	IfStatement	if ( fd == STDIN_FILENO )		352832	3					
ANR	352854	Condition	fd == STDIN_FILENO	186:5:5350:5367	352832	0	True				
ANR	352855	EqualityExpression	fd == STDIN_FILENO		352832	0		==			
ANR	352856	Identifier	fd		352832	0					
ANR	352857	Identifier	STDIN_FILENO		352832	1					
ANR	352858	GotoStatement	goto nocheck ;	187:2:5372:5384	352832	1	True				
ANR	352859	Identifier	nocheck		352832	0					
ANR	352860	IfStatement	"if ( canbepipe && ( ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0 ) )"		352832	4					
ANR	352861	Condition	"canbepipe && ( ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0 )"	190:5:5408:5461	352832	0	True				
ANR	352862	AndExpression	"canbepipe && ( ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0 )"		352832	0		&&			
ANR	352863	Identifier	canbepipe		352832	0					
ANR	352864	OrExpression	"ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0"		352832	1		||			
ANR	352865	EqualityExpression	"ioctl ( fd , FIONREAD , & t ) == - 1"		352832	0		==			
ANR	352866	CallExpression	"ioctl ( fd , FIONREAD , & t )"		352832	0					
ANR	352867	Callee	ioctl		352832	0					
ANR	352868	Identifier	ioctl		352832	0					
ANR	352869	ArgumentList	fd		352832	1					
ANR	352870	Argument	fd		352832	0					
ANR	352871	Identifier	fd		352832	0					
ANR	352872	Argument	FIONREAD		352832	1					
ANR	352873	Identifier	FIONREAD		352832	0					
ANR	352874	Argument	& t		352832	2					
ANR	352875	UnaryOperationExpression	& t		352832	0					
ANR	352876	UnaryOperator	&		352832	0					
ANR	352877	Identifier	t		352832	1					
ANR	352878	UnaryOperationExpression	- 1		352832	1					
ANR	352879	UnaryOperator	-		352832	0					
ANR	352880	PrimaryExpression	1		352832	1					
ANR	352881	EqualityExpression	t == 0		352832	1		==			
ANR	352882	Identifier	t		352832	0					
ANR	352883	PrimaryExpression	0		352832	1					
ANR	352884	CompoundStatement		14:2:204:215	352832	1					
ANR	352885	IdentifierDeclStatement	ssize_t cnt ;	192:2:5483:5494	352832	0	True				
ANR	352886	IdentifierDecl	cnt		352832	0					
ANR	352887	IdentifierDeclType	ssize_t		352832	0					
ANR	352888	Identifier	cnt		352832	1					
ANR	352889	ForStatement	for ( cnt = 0 ; ; cnt ++ )		352832	1					
ANR	352890	ForInit	cnt = 0 ;	193:7:5503:5510	352832	0	True				
ANR	352891	AssignmentExpression	cnt = 0		352832	0		=			
ANR	352892	Identifier	cnt		352832	0					
ANR	352893	PrimaryExpression	0		352832	1					
ANR	352894	PostIncDecOperationExpression	cnt ++	193:17:5513:5517	352832	1	True				
ANR	352895	Identifier	cnt		352832	0					
ANR	352896	IncDec	++		352832	1					
ANR	352897	CompoundStatement		18:3:305:314	352832	2					
ANR	352898	IdentifierDeclStatement	fd_set check ;	194:3:5525:5537	352832	0	True				
ANR	352899	IdentifierDecl	check		352832	0					
ANR	352900	IdentifierDeclType	fd_set		352832	0					
ANR	352901	Identifier	check		352832	1					
ANR	352902	IdentifierDeclStatement	"struct timeval tout = { 0 , 100 * 1000 } ;"	195:3:5542:5579	352832	1	True				
ANR	352903	IdentifierDecl	"tout = { 0 , 100 * 1000 }"		352832	0					
ANR	352904	IdentifierDeclType	struct timeval		352832	0					
ANR	352905	Identifier	tout		352832	1					
ANR	352906	AssignmentExpression	"tout = { 0 , 100 * 1000 }"		352832	2		=			
ANR	352907	Identifier	tout		352832	0					
ANR	352908	InitializerList	0		352832	1					
ANR	352909	PrimaryExpression	0		352832	0					
ANR	352910	MultiplicativeExpression	100 * 1000		352832	1		*			
ANR	352911	PrimaryExpression	100		352832	0					
ANR	352912	PrimaryExpression	1000		352832	1					
ANR	352913	IdentifierDeclStatement	int selrv ;	196:3:5584:5593	352832	2	True				
ANR	352914	IdentifierDecl	selrv		352832	0					
ANR	352915	IdentifierDeclType	int		352832	0					
ANR	352916	Identifier	selrv		352832	1					
ANR	352917	ExpressionStatement	FD_ZERO ( & check )	198:3:5599:5614	352832	3	True				
ANR	352918	CallExpression	FD_ZERO ( & check )		352832	0					
ANR	352919	Callee	FD_ZERO		352832	0					
ANR	352920	Identifier	FD_ZERO		352832	0					
ANR	352921	ArgumentList	& check		352832	1					
ANR	352922	Argument	& check		352832	0					
ANR	352923	UnaryOperationExpression	& check		352832	0					
ANR	352924	UnaryOperator	&		352832	0					
ANR	352925	Identifier	check		352832	1					
ANR	352926	ExpressionStatement	"FD_SET ( fd , & check )"	199:3:5619:5637	352832	4	True				
ANR	352927	CallExpression	"FD_SET ( fd , & check )"		352832	0					
ANR	352928	Callee	FD_SET		352832	0					
ANR	352929	Identifier	FD_SET		352832	0					
ANR	352930	ArgumentList	fd		352832	1					
ANR	352931	Argument	fd		352832	0					
ANR	352932	Identifier	fd		352832	0					
ANR	352933	Argument	& check		352832	1					
ANR	352934	UnaryOperationExpression	& check		352832	0					
ANR	352935	UnaryOperator	&		352832	0					
ANR	352936	Identifier	check		352832	1					
ANR	352937	ExpressionStatement	"selrv = select ( fd + 1 , & check , NULL , NULL , & tout )"	205:3:5753:5802	352832	5	True				
ANR	352938	AssignmentExpression	"selrv = select ( fd + 1 , & check , NULL , NULL , & tout )"		352832	0		=			
ANR	352939	Identifier	selrv		352832	0					
ANR	352940	CallExpression	"select ( fd + 1 , & check , NULL , NULL , & tout )"		352832	1					
ANR	352941	Callee	select		352832	0					
ANR	352942	Identifier	select		352832	0					
ANR	352943	ArgumentList	fd + 1		352832	1					
ANR	352944	Argument	fd + 1		352832	0					
ANR	352945	AdditiveExpression	fd + 1		352832	0		+			
ANR	352946	Identifier	fd		352832	0					
ANR	352947	PrimaryExpression	1		352832	1					
ANR	352948	Argument	& check		352832	1					
ANR	352949	UnaryOperationExpression	& check		352832	0					
ANR	352950	UnaryOperator	&		352832	0					
ANR	352951	Identifier	check		352832	1					
ANR	352952	Argument	NULL		352832	2					
ANR	352953	Identifier	NULL		352832	0					
ANR	352954	Argument	NULL		352832	3					
ANR	352955	Identifier	NULL		352832	0					
ANR	352956	Argument	& tout		352832	4					
ANR	352957	UnaryOperationExpression	& tout		352832	0					
ANR	352958	UnaryOperator	&		352832	0					
ANR	352959	Identifier	tout		352832	1					
ANR	352960	IfStatement	if ( selrv == - 1 )		352832	6					
ANR	352961	Condition	selrv == - 1	206:7:5811:5821	352832	0	True				
ANR	352962	EqualityExpression	selrv == - 1		352832	0		==			
ANR	352963	Identifier	selrv		352832	0					
ANR	352964	UnaryOperationExpression	- 1		352832	1					
ANR	352965	UnaryOperator	-		352832	0					
ANR	352966	PrimaryExpression	1		352832	1					
ANR	352967	CompoundStatement		28:20:545:545	352832	1					
ANR	352968	IfStatement	if ( errno == EINTR || errno == EAGAIN )		352832	0					
ANR	352969	Condition	errno == EINTR || errno == EAGAIN	207:8:5834:5866	352832	0	True				
ANR	352970	OrExpression	errno == EINTR || errno == EAGAIN		352832	0		||			
ANR	352971	EqualityExpression	errno == EINTR		352832	0		==			
ANR	352972	Identifier	errno		352832	0					
ANR	352973	Identifier	EINTR		352832	1					
ANR	352974	EqualityExpression	errno == EAGAIN		352832	1		==			
ANR	352975	Identifier	errno		352832	0					
ANR	352976	Identifier	EAGAIN		352832	1					
ANR	352977	ContinueStatement	continue ;	208:5:5874:5882	352832	1	True				
ANR	352978	ElseStatement	else		352832	0					
ANR	352979	IfStatement	if ( selrv == 0 && cnt >= 5 )		352832	0					
ANR	352980	Condition	selrv == 0 && cnt >= 5	209:14:5898:5919	352832	0	True				
ANR	352981	AndExpression	selrv == 0 && cnt >= 5		352832	0		&&			
ANR	352982	EqualityExpression	selrv == 0		352832	0		==			
ANR	352983	Identifier	selrv		352832	0					
ANR	352984	PrimaryExpression	0		352832	1					
ANR	352985	RelationalExpression	cnt >= 5		352832	1		>=			
ANR	352986	Identifier	cnt		352832	0					
ANR	352987	PrimaryExpression	5		352832	1					
ANR	352988	CompoundStatement		31:38:643:643	352832	1					
ANR	352989	ReturnStatement	return 0 ;	210:4:5928:5936	352832	0	True				
ANR	352990	PrimaryExpression	0		352832	0					
ANR	352991	ElseStatement	else		352832	0					
ANR	352992	BreakStatement	break ;	212:4:5952:5957	352832	0	True				
ANR	352993	ExpressionStatement	"( void ) ioctl ( fd , FIONREAD , & t )"	215:2:5972:6001	352832	2	True				
ANR	352994	CastExpression	"( void ) ioctl ( fd , FIONREAD , & t )"		352832	0					
ANR	352995	CastTarget	void		352832	0					
ANR	352996	CallExpression	"ioctl ( fd , FIONREAD , & t )"		352832	1					
ANR	352997	Callee	ioctl		352832	0					
ANR	352998	Identifier	ioctl		352832	0					
ANR	352999	ArgumentList	fd		352832	1					
ANR	353000	Argument	fd		352832	0					
ANR	353001	Identifier	fd		352832	0					
ANR	353002	Argument	FIONREAD		352832	1					
ANR	353003	Identifier	FIONREAD		352832	0					
ANR	353004	Argument	& t		352832	2					
ANR	353005	UnaryOperationExpression	& t		352832	0					
ANR	353006	UnaryOperator	&		352832	0					
ANR	353007	Identifier	t		352832	1					
ANR	353008	IfStatement	if ( t > 0 && ( size_t ) t < n )		352832	5					
ANR	353009	Condition	t > 0 && ( size_t ) t < n	218:5:6012:6033	352832	0	True				
ANR	353010	AndExpression	t > 0 && ( size_t ) t < n		352832	0		&&			
ANR	353011	RelationalExpression	t > 0		352832	0		>			
ANR	353012	Identifier	t		352832	0					
ANR	353013	PrimaryExpression	0		352832	1					
ANR	353014	RelationalExpression	( size_t ) t < n		352832	1		<			
ANR	353015	CastExpression	( size_t ) t		352832	0					
ANR	353016	CastTarget	size_t		352832	0					
ANR	353017	Identifier	t		352832	1					
ANR	353018	Identifier	n		352832	1					
ANR	353019	CompoundStatement		40:29:757:757	352832	1					
ANR	353020	ExpressionStatement	n = t	219:2:6040:6045	352832	0	True				
ANR	353021	AssignmentExpression	n = t		352832	0		=			
ANR	353022	Identifier	n		352832	0					
ANR	353023	Identifier	t		352832	1					
ANR	353024	ExpressionStatement	rn = n	220:2:6049:6055	352832	1	True				
ANR	353025	AssignmentExpression	rn = n		352832	0		=			
ANR	353026	Identifier	rn		352832	0					
ANR	353027	Identifier	n		352832	1					
ANR	353028	Label	nocheck :	224:0:6068:6075	352832	6	True				
ANR	353029	Identifier	nocheck		352832	0					
ANR	353030	DoStatement	do		352832	7					
ANR	353031	SwitchStatement	"switch ( ( rv = FINFO_READ_FUNC ( fd , buf , n ) ) )"		352832	0					
ANR	353032	Condition	"rv = FINFO_READ_FUNC ( fd , buf , n )"	226:10:6091:6124	352832	0	True				
ANR	353033	AssignmentExpression	"rv = FINFO_READ_FUNC ( fd , buf , n )"		352832	0		=			
ANR	353034	Identifier	rv		352832	0					
ANR	353035	CallExpression	"FINFO_READ_FUNC ( fd , buf , n )"		352832	1					
ANR	353036	Callee	FINFO_READ_FUNC		352832	0					
ANR	353037	Identifier	FINFO_READ_FUNC		352832	0					
ANR	353038	ArgumentList	fd		352832	1					
ANR	353039	Argument	fd		352832	0					
ANR	353040	Identifier	fd		352832	0					
ANR	353041	Argument	buf		352832	1					
ANR	353042	Identifier	buf		352832	0					
ANR	353043	Argument	n		352832	2					
ANR	353044	Identifier	n		352832	0					
ANR	353045	CompoundStatement		48:46:848:848	352832	1					
ANR	353046	Statement	case	227:2:6131:6134	352832	0	True				
ANR	353047	Statement	-	227:7:6136:6136	352832	1	True				
ANR	353048	Label	1 :	227:8:6137:6138	352832	2	True				
ANR	353049	IfStatement	if ( errno == EINTR )		352832	3					
ANR	353050	Condition	errno == EINTR	228:7:6147:6160	352832	0	True				
ANR	353051	EqualityExpression	errno == EINTR		352832	0		==			
ANR	353052	Identifier	errno		352832	0					
ANR	353053	Identifier	EINTR		352832	1					
ANR	353054	ContinueStatement	continue ;	229:4:6167:6175	352832	1	True				
ANR	353055	ReturnStatement	return - 1 ;	230:3:6180:6189	352832	4	True				
ANR	353056	UnaryOperationExpression	- 1		352832	0					
ANR	353057	UnaryOperator	-		352832	0					
ANR	353058	PrimaryExpression	1		352832	1					
ANR	353059	Label	case 0 :	231:2:6193:6199	352832	5	True				
ANR	353060	ReturnStatement	return rn - n ;	232:3:6204:6217	352832	6	True				
ANR	353061	AdditiveExpression	rn - n		352832	0		-			
ANR	353062	Identifier	rn		352832	0					
ANR	353063	Identifier	n		352832	1					
ANR	353064	Label	default :	233:2:6221:6228	352832	7	True				
ANR	353065	Identifier	default		352832	0					
ANR	353066	ExpressionStatement	n -= rv	234:3:6233:6240	352832	8	True				
ANR	353067	AssignmentExpression	n -= rv		352832	0		-=			
ANR	353068	Identifier	n		352832	0					
ANR	353069	Identifier	rv		352832	1					
ANR	353070	ExpressionStatement	buf = ( ( char * ) buf ) + rv	235:3:6245:6269	352832	9	True				
ANR	353071	AssignmentExpression	buf = ( ( char * ) buf ) + rv		352832	0		=			
ANR	353072	Identifier	buf		352832	0					
ANR	353073	AdditiveExpression	( ( char * ) buf ) + rv		352832	1		+			
ANR	353074	CastExpression	( char * ) buf		352832	0					
ANR	353075	CastTarget	char *		352832	0					
ANR	353076	Identifier	buf		352832	1					
ANR	353077	Identifier	rv		352832	1					
ANR	353078	BreakStatement	break ;	236:3:6274:6279	352832	10	True				
ANR	353079	Condition	n > 0	238:8:6293:6297	352832	1	True				
ANR	353080	RelationalExpression	n > 0		352832	0		>			
ANR	353081	Identifier	n		352832	0					
ANR	353082	PrimaryExpression	0		352832	1					
ANR	353083	ReturnStatement	return rn ;	239:1:6302:6311	352832	8	True				
ANR	353084	Identifier	rn		352832	0					
ANR	353085	ReturnType	ssize_t		352832	1					
ANR	353086	Identifier	sread		352832	2					
ANR	353087	ParameterList	"int fd , void * buf , size_t n , int canbepipe"		352832	3					
ANR	353088	Parameter	int fd	178:6:5234:5239	352832	0	True				
ANR	353089	ParameterType	int		352832	0					
ANR	353090	Identifier	fd		352832	1					
ANR	353091	Parameter	void * buf	178:14:5242:5250	352832	1	True				
ANR	353092	ParameterType	void *		352832	0					
ANR	353093	Identifier	buf		352832	1					
ANR	353094	Parameter	size_t n	178:25:5253:5260	352832	2	True				
ANR	353095	ParameterType	size_t		352832	0					
ANR	353096	Identifier	n		352832	1					
ANR	353097	Parameter	int canbepipe	178:35:5263:5275	352832	3	True				
ANR	353098	ParameterType	int		352832	0					
ANR	353099	Identifier	canbepipe		352832	1					
ANR	353100	CFGEntryNode	ENTRY		352832		True				
ANR	353101	CFGExitNode	EXIT		352832		True				
ANR	353102	InfiniteForNode	true		352832		True				
ANR	353103	Symbol	FIONREAD		352832						
ANR	353104	Symbol	errno		352832						
ANR	353105	Symbol	NULL		352832						
ANR	353106	Symbol	select		352832						
ANR	353107	Symbol	rv		352832						
ANR	353108	Symbol	STDIN_FILENO		352832						
ANR	353109	Symbol	& check		352832						
ANR	353110	Symbol	& tout		352832						
ANR	353111	Symbol	FINFO_READ_FUNC		352832						
ANR	353112	Symbol	EINTR		352832						
ANR	353113	Symbol	cnt		352832						
ANR	353114	Symbol	EAGAIN		352832						
ANR	353115	Symbol	check		352832						
ANR	353116	Symbol	tout		352832						
ANR	353117	Symbol	n		352832						
ANR	353118	Symbol	ioctl		352832						
ANR	353119	Symbol	buf		352832						
ANR	353120	Symbol	canbepipe		352832						
ANR	353121	Symbol	t		352832						
ANR	353122	Symbol	& t		352832						
ANR	353123	Symbol	selrv		352832						
ANR	353124	Symbol	rn		352832						
ANR	353125	Symbol	fd		352832						
ANR	353126	Function	file_pipe2file	242:10:6326:7680							
ANR	353127	FunctionDef	"file_pipe2file (struct magic_set * ms , int fd , const void * startbuf , size_t nbytes)"		353126	0					
ANR	353128	CompoundStatement		245:0:6416:7680	353126	0					
ANR	353129	IdentifierDeclStatement	char buf [ 4096 ] ;	246:1:6419:6433	353126	0	True				
ANR	353130	IdentifierDecl	buf [ 4096 ]		353126	0					
ANR	353131	IdentifierDeclType	char [ 4096 ]		353126	0					
ANR	353132	Identifier	buf		353126	1					
ANR	353133	PrimaryExpression	4096		353126	2					
ANR	353134	IdentifierDeclStatement	ssize_t r ;	247:1:6436:6445	353126	1	True				
ANR	353135	IdentifierDecl	r		353126	0					
ANR	353136	IdentifierDeclType	ssize_t		353126	0					
ANR	353137	Identifier	r		353126	1					
ANR	353138	IdentifierDeclStatement	int tfd ;	248:1:6448:6455	353126	2	True				
ANR	353139	IdentifierDecl	tfd		353126	0					
ANR	353140	IdentifierDeclType	int		353126	0					
ANR	353141	Identifier	tfd		353126	1					
ANR	353142	ExpressionStatement	"( void ) strlcpy ( buf , ""/tmp/file.XXXXXX"" , sizeof buf )"	250:1:6459:6509	353126	3	True				
ANR	353143	CastExpression	"( void ) strlcpy ( buf , ""/tmp/file.XXXXXX"" , sizeof buf )"		353126	0					
ANR	353144	CastTarget	void		353126	0					
ANR	353145	CallExpression	"strlcpy ( buf , ""/tmp/file.XXXXXX"" , sizeof buf )"		353126	1					
ANR	353146	Callee	strlcpy		353126	0					
ANR	353147	Identifier	strlcpy		353126	0					
ANR	353148	ArgumentList	buf		353126	1					
ANR	353149	Argument	buf		353126	0					
ANR	353150	Identifier	buf		353126	0					
ANR	353151	Argument	"""/tmp/file.XXXXXX"""		353126	1					
ANR	353152	PrimaryExpression	"""/tmp/file.XXXXXX"""		353126	0					
ANR	353153	Argument	sizeof buf		353126	2					
ANR	353154	SizeofExpression	sizeof buf		353126	0					
ANR	353155	Sizeof	sizeof		353126	0					
ANR	353156	Identifier	buf		353126	1					
ANR	353157	CompoundStatement		9:2:120:143	353126	4					
ANR	353158	IdentifierDeclStatement	char * ptr = mktemp ( buf ) ;	253:2:6537:6560	353126	0	True				
ANR	353159	IdentifierDecl	* ptr = mktemp ( buf )		353126	0					
ANR	353160	IdentifierDeclType	char *		353126	0					
ANR	353161	Identifier	ptr		353126	1					
ANR	353162	AssignmentExpression	* ptr = mktemp ( buf )		353126	2		=			
ANR	353163	Identifier	ptr		353126	0					
ANR	353164	CallExpression	mktemp ( buf )		353126	1					
ANR	353165	Callee	mktemp		353126	0					
ANR	353166	Identifier	mktemp		353126	0					
ANR	353167	ArgumentList	buf		353126	1					
ANR	353168	Argument	buf		353126	0					
ANR	353169	Identifier	buf		353126	0					
ANR	353170	ExpressionStatement	"tfd = open ( ptr , O_RDWR | O_TRUNC | O_EXCL | O_CREAT , 0600 )"	254:2:6564:6616	353126	1	True				
ANR	353171	AssignmentExpression	"tfd = open ( ptr , O_RDWR | O_TRUNC | O_EXCL | O_CREAT , 0600 )"		353126	0		=			
ANR	353172	Identifier	tfd		353126	0					
ANR	353173	CallExpression	"open ( ptr , O_RDWR | O_TRUNC | O_EXCL | O_CREAT , 0600 )"		353126	1					
ANR	353174	Callee	open		353126	0					
ANR	353175	Identifier	open		353126	0					
ANR	353176	ArgumentList	ptr		353126	1					
ANR	353177	Argument	ptr		353126	0					
ANR	353178	Identifier	ptr		353126	0					
ANR	353179	Argument	O_RDWR | O_TRUNC | O_EXCL | O_CREAT		353126	1					
ANR	353180	InclusiveOrExpression	O_RDWR | O_TRUNC | O_EXCL | O_CREAT		353126	0		|			
ANR	353181	Identifier	O_RDWR		353126	0					
ANR	353182	InclusiveOrExpression	O_TRUNC | O_EXCL | O_CREAT		353126	1		|			
ANR	353183	Identifier	O_TRUNC		353126	0					
ANR	353184	InclusiveOrExpression	O_EXCL | O_CREAT		353126	1		|			
ANR	353185	Identifier	O_EXCL		353126	0					
ANR	353186	Identifier	O_CREAT		353126	1					
ANR	353187	Argument	0600		353126	2					
ANR	353188	PrimaryExpression	0600		353126	0					
ANR	353189	ExpressionStatement	r = errno	255:2:6620:6629	353126	2	True				
ANR	353190	AssignmentExpression	r = errno		353126	0		=			
ANR	353191	Identifier	r		353126	0					
ANR	353192	Identifier	errno		353126	1					
ANR	353193	ExpressionStatement	( void ) unlink ( ptr )	256:2:6633:6650	353126	3	True				
ANR	353194	CastExpression	( void ) unlink ( ptr )		353126	0					
ANR	353195	CastTarget	void		353126	0					
ANR	353196	CallExpression	unlink ( ptr )		353126	1					
ANR	353197	Callee	unlink		353126	0					
ANR	353198	Identifier	unlink		353126	0					
ANR	353199	ArgumentList	ptr		353126	1					
ANR	353200	Argument	ptr		353126	0					
ANR	353201	Identifier	ptr		353126	0					
ANR	353202	ExpressionStatement	errno = r	257:2:6654:6663	353126	4	True				
ANR	353203	AssignmentExpression	errno = r		353126	0		=			
ANR	353204	Identifier	errno		353126	0					
ANR	353205	Identifier	r		353126	1					
ANR	353206	IfStatement	if ( tfd == - 1 )		353126	5					
ANR	353207	Condition	tfd == - 1	268:5:6773:6781	353126	0	True				
ANR	353208	EqualityExpression	tfd == - 1		353126	0		==			
ANR	353209	Identifier	tfd		353126	0					
ANR	353210	UnaryOperationExpression	- 1		353126	1					
ANR	353211	UnaryOperator	-		353126	0					
ANR	353212	PrimaryExpression	1		353126	1					
ANR	353213	CompoundStatement		24:16:367:367	353126	1					
ANR	353214	ExpressionStatement	"file_error ( ms , errno , ""cannot create temporary file for pipe copy"" )"	269:2:6788:6861	353126	0	True				
ANR	353215	CallExpression	"file_error ( ms , errno , ""cannot create temporary file for pipe copy"" )"		353126	0					
ANR	353216	Callee	file_error		353126	0					
ANR	353217	Identifier	file_error		353126	0					
ANR	353218	ArgumentList	ms		353126	1					
ANR	353219	Argument	ms		353126	0					
ANR	353220	Identifier	ms		353126	0					
ANR	353221	Argument	errno		353126	1					
ANR	353222	Identifier	errno		353126	0					
ANR	353223	Argument	"""cannot create temporary file for pipe copy"""		353126	2					
ANR	353224	PrimaryExpression	"""cannot create temporary file for pipe copy"""		353126	0					
ANR	353225	ReturnStatement	return - 1 ;	271:2:6865:6874	353126	1	True				
ANR	353226	UnaryOperationExpression	- 1		353126	0					
ANR	353227	UnaryOperator	-		353126	0					
ANR	353228	PrimaryExpression	1		353126	1					
ANR	353229	IfStatement	"if ( swrite ( tfd , startbuf , nbytes ) != ( ssize_t ) nbytes )"		353126	6					
ANR	353230	Condition	"swrite ( tfd , startbuf , nbytes ) != ( ssize_t ) nbytes"	274:5:6885:6932	353126	0	True				
ANR	353231	EqualityExpression	"swrite ( tfd , startbuf , nbytes ) != ( ssize_t ) nbytes"		353126	0		!=			
ANR	353232	CallExpression	"swrite ( tfd , startbuf , nbytes )"		353126	0					
ANR	353233	Callee	swrite		353126	0					
ANR	353234	Identifier	swrite		353126	0					
ANR	353235	ArgumentList	tfd		353126	1					
ANR	353236	Argument	tfd		353126	0					
ANR	353237	Identifier	tfd		353126	0					
ANR	353238	Argument	startbuf		353126	1					
ANR	353239	Identifier	startbuf		353126	0					
ANR	353240	Argument	nbytes		353126	2					
ANR	353241	Identifier	nbytes		353126	0					
ANR	353242	CastExpression	( ssize_t ) nbytes		353126	1					
ANR	353243	CastTarget	ssize_t		353126	0					
ANR	353244	Identifier	nbytes		353126	1					
ANR	353245	ExpressionStatement	r = 1	275:2:6937:6942	353126	1	True				
ANR	353246	AssignmentExpression	r = 1		353126	0		=			
ANR	353247	Identifier	r		353126	0					
ANR	353248	PrimaryExpression	1		353126	1					
ANR	353249	ElseStatement	else		353126	0					
ANR	353250	CompoundStatement		32:6:533:533	353126	0					
ANR	353251	WhileStatement	"while ( ( r = sread ( fd , buf , sizeof ( buf ) , 1 ) ) > 0 )"		353126	0					
ANR	353252	Condition	"( r = sread ( fd , buf , sizeof ( buf ) , 1 ) ) > 0"	277:9:6961:7000	353126	0	True				
ANR	353253	RelationalExpression	"( r = sread ( fd , buf , sizeof ( buf ) , 1 ) ) > 0"		353126	0		>			
ANR	353254	AssignmentExpression	"r = sread ( fd , buf , sizeof ( buf ) , 1 )"		353126	0		=			
ANR	353255	Identifier	r		353126	0					
ANR	353256	CallExpression	"sread ( fd , buf , sizeof ( buf ) , 1 )"		353126	1					
ANR	353257	Callee	sread		353126	0					
ANR	353258	Identifier	sread		353126	0					
ANR	353259	ArgumentList	fd		353126	1					
ANR	353260	Argument	fd		353126	0					
ANR	353261	Identifier	fd		353126	0					
ANR	353262	Argument	buf		353126	1					
ANR	353263	Identifier	buf		353126	0					
ANR	353264	Argument	sizeof ( buf )		353126	2					
ANR	353265	SizeofExpression	sizeof ( buf )		353126	0					
ANR	353266	Sizeof	sizeof		353126	0					
ANR	353267	SizeofOperand	buf		353126	1					
ANR	353268	Argument	1		353126	3					
ANR	353269	PrimaryExpression	1		353126	0					
ANR	353270	PrimaryExpression	0		353126	1					
ANR	353271	IfStatement	"if ( swrite ( tfd , buf , ( size_t ) r ) != r )"		353126	1					
ANR	353272	Condition	"swrite ( tfd , buf , ( size_t ) r ) != r"	278:7:7010:7041	353126	0	True				
ANR	353273	EqualityExpression	"swrite ( tfd , buf , ( size_t ) r ) != r"		353126	0		!=			
ANR	353274	CallExpression	"swrite ( tfd , buf , ( size_t ) r )"		353126	0					
ANR	353275	Callee	swrite		353126	0					
ANR	353276	Identifier	swrite		353126	0					
ANR	353277	ArgumentList	tfd		353126	1					
ANR	353278	Argument	tfd		353126	0					
ANR	353279	Identifier	tfd		353126	0					
ANR	353280	Argument	buf		353126	1					
ANR	353281	Identifier	buf		353126	0					
ANR	353282	Argument	( size_t ) r		353126	2					
ANR	353283	CastExpression	( size_t ) r		353126	0					
ANR	353284	CastTarget	size_t		353126	0					
ANR	353285	Identifier	r		353126	1					
ANR	353286	Identifier	r		353126	1					
ANR	353287	BreakStatement	break ;	279:4:7048:7053	353126	1	True				
ANR	353288	SwitchStatement	switch ( r )		353126	7					
ANR	353289	Condition	r	282:9:7068:7068	353126	0	True				
ANR	353290	Identifier	r		353126	0					
ANR	353291	CompoundStatement		38:12:654:654	353126	1					
ANR	353292	Statement	case	283:1:7074:7077	353126	0	True				
ANR	353293	Statement	-	283:6:7079:7079	353126	1	True				
ANR	353294	Label	1 :	283:7:7080:7081	353126	2	True				
ANR	353295	ExpressionStatement	"file_error ( ms , errno , ""error copying from pipe to temp file"" )"	284:2:7085:7146	353126	3	True				
ANR	353296	CallExpression	"file_error ( ms , errno , ""error copying from pipe to temp file"" )"		353126	0					
ANR	353297	Callee	file_error		353126	0					
ANR	353298	Identifier	file_error		353126	0					
ANR	353299	ArgumentList	ms		353126	1					
ANR	353300	Argument	ms		353126	0					
ANR	353301	Identifier	ms		353126	0					
ANR	353302	Argument	errno		353126	1					
ANR	353303	Identifier	errno		353126	0					
ANR	353304	Argument	"""error copying from pipe to temp file"""		353126	2					
ANR	353305	PrimaryExpression	"""error copying from pipe to temp file"""		353126	0					
ANR	353306	ReturnStatement	return - 1 ;	285:2:7150:7159	353126	4	True				
ANR	353307	UnaryOperationExpression	- 1		353126	0					
ANR	353308	UnaryOperator	-		353126	0					
ANR	353309	PrimaryExpression	1		353126	1					
ANR	353310	Label	case 0 :	286:1:7162:7168	353126	5	True				
ANR	353311	BreakStatement	break ;	287:2:7172:7177	353126	6	True				
ANR	353312	Label	default :	288:1:7180:7187	353126	7	True				
ANR	353313	Identifier	default		353126	0					
ANR	353314	ExpressionStatement	"file_error ( ms , errno , ""error while writing to temp file"" )"	289:2:7191:7248	353126	8	True				
ANR	353315	CallExpression	"file_error ( ms , errno , ""error while writing to temp file"" )"		353126	0					
ANR	353316	Callee	file_error		353126	0					
ANR	353317	Identifier	file_error		353126	0					
ANR	353318	ArgumentList	ms		353126	1					
ANR	353319	Argument	ms		353126	0					
ANR	353320	Identifier	ms		353126	0					
ANR	353321	Argument	errno		353126	1					
ANR	353322	Identifier	errno		353126	0					
ANR	353323	Argument	"""error while writing to temp file"""		353126	2					
ANR	353324	PrimaryExpression	"""error while writing to temp file"""		353126	0					
ANR	353325	ReturnStatement	return - 1 ;	290:2:7252:7261	353126	9	True				
ANR	353326	UnaryOperationExpression	- 1		353126	0					
ANR	353327	UnaryOperator	-		353126	0					
ANR	353328	PrimaryExpression	1		353126	1					
ANR	353329	IfStatement	"if ( ( fd = dup2 ( tfd , fd ) ) == - 1 )"		353126	8					
ANR	353330	Condition	"( fd = dup2 ( tfd , fd ) ) == - 1"	298:5:7438:7463	353126	0	True				
ANR	353331	EqualityExpression	"( fd = dup2 ( tfd , fd ) ) == - 1"		353126	0		==			
ANR	353332	AssignmentExpression	"fd = dup2 ( tfd , fd )"		353126	0		=			
ANR	353333	Identifier	fd		353126	0					
ANR	353334	CallExpression	"dup2 ( tfd , fd )"		353126	1					
ANR	353335	Callee	dup2		353126	0					
ANR	353336	Identifier	dup2		353126	0					
ANR	353337	ArgumentList	tfd		353126	1					
ANR	353338	Argument	tfd		353126	0					
ANR	353339	Identifier	tfd		353126	0					
ANR	353340	Argument	fd		353126	1					
ANR	353341	Identifier	fd		353126	0					
ANR	353342	UnaryOperationExpression	- 1		353126	1					
ANR	353343	UnaryOperator	-		353126	0					
ANR	353344	PrimaryExpression	1		353126	1					
ANR	353345	CompoundStatement		54:33:1049:1049	353126	1					
ANR	353346	ExpressionStatement	"file_error ( ms , errno , ""could not dup descriptor for temp file"" )"	299:2:7470:7533	353126	0	True				
ANR	353347	CallExpression	"file_error ( ms , errno , ""could not dup descriptor for temp file"" )"		353126	0					
ANR	353348	Callee	file_error		353126	0					
ANR	353349	Identifier	file_error		353126	0					
ANR	353350	ArgumentList	ms		353126	1					
ANR	353351	Argument	ms		353126	0					
ANR	353352	Identifier	ms		353126	0					
ANR	353353	Argument	errno		353126	1					
ANR	353354	Identifier	errno		353126	0					
ANR	353355	Argument	"""could not dup descriptor for temp file"""		353126	2					
ANR	353356	PrimaryExpression	"""could not dup descriptor for temp file"""		353126	0					
ANR	353357	ReturnStatement	return - 1 ;	300:2:7537:7546	353126	1	True				
ANR	353358	UnaryOperationExpression	- 1		353126	0					
ANR	353359	UnaryOperator	-		353126	0					
ANR	353360	PrimaryExpression	1		353126	1					
ANR	353361	ExpressionStatement	( void ) close ( tfd )	302:1:7552:7568	353126	9	True				
ANR	353362	CastExpression	( void ) close ( tfd )		353126	0					
ANR	353363	CastTarget	void		353126	0					
ANR	353364	CallExpression	close ( tfd )		353126	1					
ANR	353365	Callee	close		353126	0					
ANR	353366	Identifier	close		353126	0					
ANR	353367	ArgumentList	tfd		353126	1					
ANR	353368	Argument	tfd		353126	0					
ANR	353369	Identifier	tfd		353126	0					
ANR	353370	IfStatement	"if ( FINFO_LSEEK_FUNC ( fd , ( off_t ) 0 , SEEK_SET ) == ( off_t ) - 1 )"		353126	10					
ANR	353371	Condition	"FINFO_LSEEK_FUNC ( fd , ( off_t ) 0 , SEEK_SET ) == ( off_t ) - 1"	303:5:7575:7627	353126	0	True				
ANR	353372	EqualityExpression	"FINFO_LSEEK_FUNC ( fd , ( off_t ) 0 , SEEK_SET ) == ( off_t ) - 1"		353126	0		==			
ANR	353373	CallExpression	"FINFO_LSEEK_FUNC ( fd , ( off_t ) 0 , SEEK_SET )"		353126	0					
ANR	353374	Callee	FINFO_LSEEK_FUNC		353126	0					
ANR	353375	Identifier	FINFO_LSEEK_FUNC		353126	0					
ANR	353376	ArgumentList	fd		353126	1					
ANR	353377	Argument	fd		353126	0					
ANR	353378	Identifier	fd		353126	0					
ANR	353379	Argument	( off_t ) 0		353126	1					
ANR	353380	CastExpression	( off_t ) 0		353126	0					
ANR	353381	CastTarget	off_t		353126	0					
ANR	353382	PrimaryExpression	0		353126	1					
ANR	353383	Argument	SEEK_SET		353126	2					
ANR	353384	Identifier	SEEK_SET		353126	0					
ANR	353385	CastExpression	( off_t ) - 1		353126	1					
ANR	353386	CastTarget	off_t		353126	0					
ANR	353387	UnaryOperationExpression	- 1		353126	1					
ANR	353388	UnaryOperator	-		353126	0					
ANR	353389	PrimaryExpression	1		353126	1					
ANR	353390	CompoundStatement		59:60:1213:1213	353126	1					
ANR	353391	ExpressionStatement	file_badseek ( ms )	304:2:7634:7650	353126	0	True				
ANR	353392	CallExpression	file_badseek ( ms )		353126	0					
ANR	353393	Callee	file_badseek		353126	0					
ANR	353394	Identifier	file_badseek		353126	0					
ANR	353395	ArgumentList	ms		353126	1					
ANR	353396	Argument	ms		353126	0					
ANR	353397	Identifier	ms		353126	0					
ANR	353398	ReturnStatement	return - 1 ;	305:2:7654:7663	353126	1	True				
ANR	353399	UnaryOperationExpression	- 1		353126	0					
ANR	353400	UnaryOperator	-		353126	0					
ANR	353401	PrimaryExpression	1		353126	1					
ANR	353402	ReturnStatement	return fd ;	307:1:7669:7678	353126	11	True				
ANR	353403	Identifier	fd		353126	0					
ANR	353404	ReturnType	int		353126	1					
ANR	353405	Identifier	file_pipe2file		353126	2					
ANR	353406	ParameterList	"struct magic_set * ms , int fd , const void * startbuf , size_t nbytes"		353126	3					
ANR	353407	Parameter	struct magic_set * ms	243:15:6345:6364	353126	0	True				
ANR	353408	ParameterType	struct magic_set *		353126	0					
ANR	353409	Identifier	ms		353126	1					
ANR	353410	Parameter	int fd	243:37:6367:6372	353126	1	True				
ANR	353411	ParameterType	int		353126	0					
ANR	353412	Identifier	fd		353126	1					
ANR	353413	Parameter	const void * startbuf	243:45:6375:6394	353126	2	True				
ANR	353414	ParameterType	const void *		353126	0					
ANR	353415	Identifier	startbuf		353126	1					
ANR	353416	Parameter	size_t nbytes	244:4:6401:6413	353126	3	True				
ANR	353417	ParameterType	size_t		353126	0					
ANR	353418	Identifier	nbytes		353126	1					
ANR	353419	CFGEntryNode	ENTRY		353126		True				
ANR	353420	CFGExitNode	EXIT		353126		True				
ANR	353421	Symbol	sread		353126						
ANR	353422	Symbol	SEEK_SET		353126						
ANR	353423	Symbol	errno		353126						
ANR	353424	Symbol	ms		353126						
ANR	353425	Symbol	O_CREAT		353126						
ANR	353426	Symbol	O_EXCL		353126						
ANR	353427	Symbol	mktemp		353126						
ANR	353428	Symbol	startbuf		353126						
ANR	353429	Symbol	nbytes		353126						
ANR	353430	Symbol	ptr		353126						
ANR	353431	Symbol	buf		353126						
ANR	353432	Symbol	r		353126						
ANR	353433	Symbol	O_TRUNC		353126						
ANR	353434	Symbol	O_RDWR		353126						
ANR	353435	Symbol	tfd		353126						
ANR	353436	Symbol	swrite		353126						
ANR	353437	Symbol	FINFO_LSEEK_FUNC		353126						
ANR	353438	Symbol	dup2		353126						
ANR	353439	Symbol	fd		353126						
ANR	353440	Symbol	open		353126						
ANR	353441	Function	uncompressgzipped	318:8:7849:9199							
ANR	353442	FunctionDef	"uncompressgzipped (struct magic_set * ms , const unsigned char * old , unsigned char * * newch , size_t n)"		353441	0					
ANR	353443	CompoundStatement		321:0:7959:9199	353441	0					
ANR	353444	IdentifierDeclStatement	unsigned char flg = old [ 3 ] ;	322:1:7962:7988	353441	0	True				
ANR	353445	IdentifierDecl	flg = old [ 3 ]		353441	0					
ANR	353446	IdentifierDeclType	unsigned char		353441	0					
ANR	353447	Identifier	flg		353441	1					
ANR	353448	AssignmentExpression	flg = old [ 3 ]		353441	2		=			
ANR	353449	Identifier	flg		353441	0					
ANR	353450	ArrayIndexing	old [ 3 ]		353441	1					
ANR	353451	Identifier	old		353441	0					
ANR	353452	PrimaryExpression	3		353441	1					
ANR	353453	IdentifierDeclStatement	size_t data_start = 10 ;	323:1:7991:8013	353441	1	True				
ANR	353454	IdentifierDecl	data_start = 10		353441	0					
ANR	353455	IdentifierDeclType	size_t		353441	0					
ANR	353456	Identifier	data_start		353441	1					
ANR	353457	AssignmentExpression	data_start = 10		353441	2		=			
ANR	353458	Identifier	data_start		353441	0					
ANR	353459	PrimaryExpression	10		353441	1					
ANR	353460	IdentifierDeclStatement	z_stream z ;	324:1:8016:8026	353441	2	True				
ANR	353461	IdentifierDecl	z		353441	0					
ANR	353462	IdentifierDeclType	z_stream		353441	0					
ANR	353463	Identifier	z		353441	1					
ANR	353464	IdentifierDeclStatement	int rc ;	325:1:8029:8035	353441	3	True				
ANR	353465	IdentifierDecl	rc		353441	0					
ANR	353466	IdentifierDeclType	int		353441	0					
ANR	353467	Identifier	rc		353441	1					
ANR	353468	IfStatement	if ( flg & FEXTRA )		353441	4					
ANR	353469	Condition	flg & FEXTRA	327:5:8043:8054	353441	0	True				
ANR	353470	BitAndExpression	flg & FEXTRA		353441	0		&			
ANR	353471	Identifier	flg		353441	0					
ANR	353472	Identifier	FEXTRA		353441	1					
ANR	353473	CompoundStatement		7:19:97:97	353441	1					
ANR	353474	IfStatement	if ( data_start + 1 >= n )		353441	0					
ANR	353475	Condition	data_start + 1 >= n	328:6:8065:8081	353441	0	True				
ANR	353476	RelationalExpression	data_start + 1 >= n		353441	0		>=			
ANR	353477	AdditiveExpression	data_start + 1		353441	0		+			
ANR	353478	Identifier	data_start		353441	0					
ANR	353479	PrimaryExpression	1		353441	1					
ANR	353480	Identifier	n		353441	1					
ANR	353481	ReturnStatement	return 0 ;	329:3:8087:8095	353441	1	True				
ANR	353482	PrimaryExpression	0		353441	0					
ANR	353483	ExpressionStatement	data_start += 2 + old [ data_start ] + old [ data_start + 1 ] * 256	330:2:8099:8160	353441	1	True				
ANR	353484	AssignmentExpression	data_start += 2 + old [ data_start ] + old [ data_start + 1 ] * 256		353441	0		+=			
ANR	353485	Identifier	data_start		353441	0					
ANR	353486	AdditiveExpression	2 + old [ data_start ] + old [ data_start + 1 ] * 256		353441	1		+			
ANR	353487	PrimaryExpression	2		353441	0					
ANR	353488	AdditiveExpression	old [ data_start ] + old [ data_start + 1 ] * 256		353441	1		+			
ANR	353489	ArrayIndexing	old [ data_start ]		353441	0					
ANR	353490	Identifier	old		353441	0					
ANR	353491	Identifier	data_start		353441	1					
ANR	353492	MultiplicativeExpression	old [ data_start + 1 ] * 256		353441	1		*			
ANR	353493	ArrayIndexing	old [ data_start + 1 ]		353441	0					
ANR	353494	Identifier	old		353441	0					
ANR	353495	AdditiveExpression	data_start + 1		353441	1		+			
ANR	353496	Identifier	data_start		353441	0					
ANR	353497	PrimaryExpression	1		353441	1					
ANR	353498	PrimaryExpression	256		353441	1					
ANR	353499	IfStatement	if ( flg & FNAME )		353441	5					
ANR	353500	Condition	flg & FNAME	332:5:8170:8180	353441	0	True				
ANR	353501	BitAndExpression	flg & FNAME		353441	0		&			
ANR	353502	Identifier	flg		353441	0					
ANR	353503	Identifier	FNAME		353441	1					
ANR	353504	CompoundStatement		12:18:223:223	353441	1					
ANR	353505	WhileStatement	while ( data_start < n && old [ data_start ] )		353441	0					
ANR	353506	Condition	data_start < n && old [ data_start ]	333:8:8193:8225	353441	0	True				
ANR	353507	AndExpression	data_start < n && old [ data_start ]		353441	0		&&			
ANR	353508	RelationalExpression	data_start < n		353441	0		<			
ANR	353509	Identifier	data_start		353441	0					
ANR	353510	Identifier	n		353441	1					
ANR	353511	ArrayIndexing	old [ data_start ]		353441	1					
ANR	353512	Identifier	old		353441	0					
ANR	353513	Identifier	data_start		353441	1					
ANR	353514	ExpressionStatement	data_start ++	334:3:8231:8243	353441	1	True				
ANR	353515	PostIncDecOperationExpression	data_start ++		353441	0					
ANR	353516	Identifier	data_start		353441	0					
ANR	353517	IncDec	++		353441	1					
ANR	353518	ExpressionStatement	data_start ++	335:2:8247:8259	353441	1	True				
ANR	353519	PostIncDecOperationExpression	data_start ++		353441	0					
ANR	353520	Identifier	data_start		353441	0					
ANR	353521	IncDec	++		353441	1					
ANR	353522	IfStatement	if ( flg & FCOMMENT )		353441	6					
ANR	353523	Condition	flg & FCOMMENT	337:4:8268:8281	353441	0	True				
ANR	353524	BitAndExpression	flg & FCOMMENT		353441	0		&			
ANR	353525	Identifier	flg		353441	0					
ANR	353526	Identifier	FCOMMENT		353441	1					
ANR	353527	CompoundStatement		17:20:324:324	353441	1					
ANR	353528	WhileStatement	while ( data_start < n && old [ data_start ] )		353441	0					
ANR	353529	Condition	data_start < n && old [ data_start ]	338:8:8294:8326	353441	0	True				
ANR	353530	AndExpression	data_start < n && old [ data_start ]		353441	0		&&			
ANR	353531	RelationalExpression	data_start < n		353441	0		<			
ANR	353532	Identifier	data_start		353441	0					
ANR	353533	Identifier	n		353441	1					
ANR	353534	ArrayIndexing	old [ data_start ]		353441	1					
ANR	353535	Identifier	old		353441	0					
ANR	353536	Identifier	data_start		353441	1					
ANR	353537	ExpressionStatement	data_start ++	339:3:8332:8344	353441	1	True				
ANR	353538	PostIncDecOperationExpression	data_start ++		353441	0					
ANR	353539	Identifier	data_start		353441	0					
ANR	353540	IncDec	++		353441	1					
ANR	353541	ExpressionStatement	data_start ++	340:2:8348:8360	353441	1	True				
ANR	353542	PostIncDecOperationExpression	data_start ++		353441	0					
ANR	353543	Identifier	data_start		353441	0					
ANR	353544	IncDec	++		353441	1					
ANR	353545	IfStatement	if ( flg & FHCRC )		353441	7					
ANR	353546	Condition	flg & FHCRC	342:4:8369:8379	353441	0	True				
ANR	353547	BitAndExpression	flg & FHCRC		353441	0		&			
ANR	353548	Identifier	flg		353441	0					
ANR	353549	Identifier	FHCRC		353441	1					
ANR	353550	ExpressionStatement	data_start += 2	343:2:8384:8399	353441	1	True				
ANR	353551	AssignmentExpression	data_start += 2		353441	0		+=			
ANR	353552	Identifier	data_start		353441	0					
ANR	353553	PrimaryExpression	2		353441	1					
ANR	353554	IfStatement	if ( data_start >= n )		353441	8					
ANR	353555	Condition	data_start >= n	345:5:8407:8421	353441	0	True				
ANR	353556	RelationalExpression	data_start >= n		353441	0		>=			
ANR	353557	Identifier	data_start		353441	0					
ANR	353558	Identifier	n		353441	1					
ANR	353559	ReturnStatement	return 0 ;	346:2:8426:8434	353441	1	True				
ANR	353560	PrimaryExpression	0		353441	0					
ANR	353561	Statement	if	347:1:8437:8438	353441	9	True				
ANR	353562	Statement	(	347:4:8440:8440	353441	10	True				
ANR	353563	Statement	(	347:5:8441:8441	353441	11	True				
ANR	353564	Statement	*	347:6:8442:8442	353441	12	True				
ANR	353565	Statement	newch	347:7:8443:8447	353441	13	True				
ANR	353566	Statement	=	347:13:8449:8449	353441	14	True				
ANR	353567	Statement	CAST	347:15:8451:8454	353441	15	True				
ANR	353568	Statement	(	347:19:8455:8455	353441	16	True				
ANR	353569	Statement	unsigned	347:20:8456:8463	353441	17	True				
ANR	353570	Statement	char	347:29:8465:8468	353441	18	True				
ANR	353571	Statement	*	347:34:8470:8470	353441	19	True				
ANR	353572	Statement	","	347:35:8471:8471	353441	20	True				
ANR	353573	Statement	emalloc	347:37:8473:8479	353441	21	True				
ANR	353574	Statement	(	347:44:8480:8480	353441	22	True				
ANR	353575	Statement	HOWMANY	347:45:8481:8487	353441	23	True				
ANR	353576	Statement	+	347:53:8489:8489	353441	24	True				
ANR	353577	Statement	1	347:55:8491:8491	353441	25	True				
ANR	353578	Statement	)	347:56:8492:8492	353441	26	True				
ANR	353579	Statement	)	347:57:8493:8493	353441	27	True				
ANR	353580	Statement	)	347:58:8494:8494	353441	28	True				
ANR	353581	Statement	==	347:60:8496:8497	353441	29	True				
ANR	353582	Statement	NULL	347:63:8499:8502	353441	30	True				
ANR	353583	Statement	)	347:67:8503:8503	353441	31	True				
ANR	353584	CompoundStatement		27:69:545:545	353441	32					
ANR	353585	ReturnStatement	return 0 ;	348:2:8509:8517	353441	0	True				
ANR	353586	PrimaryExpression	0		353441	0					
ANR	353587	ExpressionStatement	"z . next_in = ( Bytef * ) strchr ( ( const char * ) old + data_start , old [ data_start ] )"	352:1:8564:8645	353441	33	True				
ANR	353588	AssignmentExpression	"z . next_in = ( Bytef * ) strchr ( ( const char * ) old + data_start , old [ data_start ] )"		353441	0		=			
ANR	353589	MemberAccess	z . next_in		353441	0					
ANR	353590	Identifier	z		353441	0					
ANR	353591	Identifier	next_in		353441	1					
ANR	353592	CastExpression	"( Bytef * ) strchr ( ( const char * ) old + data_start , old [ data_start ] )"		353441	1					
ANR	353593	CastTarget	Bytef *		353441	0					
ANR	353594	CallExpression	"strchr ( ( const char * ) old + data_start , old [ data_start ] )"		353441	1					
ANR	353595	Callee	strchr		353441	0					
ANR	353596	Identifier	strchr		353441	0					
ANR	353597	ArgumentList	( const char * ) old + data_start		353441	1					
ANR	353598	Argument	( const char * ) old + data_start		353441	0					
ANR	353599	AdditiveExpression	( const char * ) old + data_start		353441	0		+			
ANR	353600	CastExpression	( const char * ) old		353441	0					
ANR	353601	CastTarget	const char *		353441	0					
ANR	353602	Identifier	old		353441	1					
ANR	353603	Identifier	data_start		353441	1					
ANR	353604	Argument	old [ data_start ]		353441	1					
ANR	353605	ArrayIndexing	old [ data_start ]		353441	0					
ANR	353606	Identifier	old		353441	0					
ANR	353607	Identifier	data_start		353441	1					
ANR	353608	ExpressionStatement	"z . avail_in = CAST ( uint32_t , ( n - data_start ) )"	354:1:8648:8693	353441	34	True				
ANR	353609	AssignmentExpression	"z . avail_in = CAST ( uint32_t , ( n - data_start ) )"		353441	0		=			
ANR	353610	MemberAccess	z . avail_in		353441	0					
ANR	353611	Identifier	z		353441	0					
ANR	353612	Identifier	avail_in		353441	1					
ANR	353613	CallExpression	"CAST ( uint32_t , ( n - data_start ) )"		353441	1					
ANR	353614	Callee	CAST		353441	0					
ANR	353615	Identifier	CAST		353441	0					
ANR	353616	ArgumentList	uint32_t		353441	1					
ANR	353617	Argument	uint32_t		353441	0					
ANR	353618	Identifier	uint32_t		353441	0					
ANR	353619	Argument	n - data_start		353441	1					
ANR	353620	AdditiveExpression	n - data_start		353441	0		-			
ANR	353621	Identifier	n		353441	0					
ANR	353622	Identifier	data_start		353441	1					
ANR	353623	ExpressionStatement	z . next_out = * newch	355:1:8696:8715	353441	35	True				
ANR	353624	AssignmentExpression	z . next_out = * newch		353441	0		=			
ANR	353625	MemberAccess	z . next_out		353441	0					
ANR	353626	Identifier	z		353441	0					
ANR	353627	Identifier	next_out		353441	1					
ANR	353628	UnaryOperationExpression	* newch		353441	1					
ANR	353629	UnaryOperator	*		353441	0					
ANR	353630	Identifier	newch		353441	1					
ANR	353631	ExpressionStatement	z . avail_out = HOWMANY	356:1:8718:8739	353441	36	True				
ANR	353632	AssignmentExpression	z . avail_out = HOWMANY		353441	0		=			
ANR	353633	MemberAccess	z . avail_out		353441	0					
ANR	353634	Identifier	z		353441	0					
ANR	353635	Identifier	avail_out		353441	1					
ANR	353636	Identifier	HOWMANY		353441	1					
ANR	353637	ExpressionStatement	z . zalloc = Z_NULL	357:1:8742:8759	353441	37	True				
ANR	353638	AssignmentExpression	z . zalloc = Z_NULL		353441	0		=			
ANR	353639	MemberAccess	z . zalloc		353441	0					
ANR	353640	Identifier	z		353441	0					
ANR	353641	Identifier	zalloc		353441	1					
ANR	353642	Identifier	Z_NULL		353441	1					
ANR	353643	ExpressionStatement	z . zfree = Z_NULL	358:1:8762:8778	353441	38	True				
ANR	353644	AssignmentExpression	z . zfree = Z_NULL		353441	0		=			
ANR	353645	MemberAccess	z . zfree		353441	0					
ANR	353646	Identifier	z		353441	0					
ANR	353647	Identifier	zfree		353441	1					
ANR	353648	Identifier	Z_NULL		353441	1					
ANR	353649	ExpressionStatement	z . opaque = Z_NULL	359:1:8781:8798	353441	39	True				
ANR	353650	AssignmentExpression	z . opaque = Z_NULL		353441	0		=			
ANR	353651	MemberAccess	z . opaque		353441	0					
ANR	353652	Identifier	z		353441	0					
ANR	353653	Identifier	opaque		353441	1					
ANR	353654	Identifier	Z_NULL		353441	1					
ANR	353655	ExpressionStatement	"rc = inflateInit2 ( & z , - 15 )"	362:1:8836:8862	353441	40	True				
ANR	353656	AssignmentExpression	"rc = inflateInit2 ( & z , - 15 )"		353441	0		=			
ANR	353657	Identifier	rc		353441	0					
ANR	353658	CallExpression	"inflateInit2 ( & z , - 15 )"		353441	1					
ANR	353659	Callee	inflateInit2		353441	0					
ANR	353660	Identifier	inflateInit2		353441	0					
ANR	353661	ArgumentList	& z		353441	1					
ANR	353662	Argument	& z		353441	0					
ANR	353663	UnaryOperationExpression	& z		353441	0					
ANR	353664	UnaryOperator	&		353441	0					
ANR	353665	Identifier	z		353441	1					
ANR	353666	Argument	- 15		353441	1					
ANR	353667	UnaryOperationExpression	- 15		353441	0					
ANR	353668	UnaryOperator	-		353441	0					
ANR	353669	PrimaryExpression	15		353441	1					
ANR	353670	IfStatement	if ( rc != Z_OK )		353441	41					
ANR	353671	Condition	rc != Z_OK	363:5:8869:8878	353441	0	True				
ANR	353672	EqualityExpression	rc != Z_OK		353441	0		!=			
ANR	353673	Identifier	rc		353441	0					
ANR	353674	Identifier	Z_OK		353441	1					
ANR	353675	CompoundStatement		43:17:921:921	353441	1					
ANR	353676	ExpressionStatement	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"	364:2:8885:8921	353441	0	True				
ANR	353677	CallExpression	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"		353441	0					
ANR	353678	Callee	file_error		353441	0					
ANR	353679	Identifier	file_error		353441	0					
ANR	353680	ArgumentList	ms		353441	1					
ANR	353681	Argument	ms		353441	0					
ANR	353682	Identifier	ms		353441	0					
ANR	353683	Argument	0		353441	1					
ANR	353684	PrimaryExpression	0		353441	0					
ANR	353685	Argument	"""zlib: %s"""		353441	2					
ANR	353686	PrimaryExpression	"""zlib: %s"""		353441	0					
ANR	353687	Argument	z . msg		353441	3					
ANR	353688	MemberAccess	z . msg		353441	0					
ANR	353689	Identifier	z		353441	0					
ANR	353690	Identifier	msg		353441	1					
ANR	353691	ReturnStatement	return 0 ;	365:2:8925:8933	353441	1	True				
ANR	353692	PrimaryExpression	0		353441	0					
ANR	353693	ExpressionStatement	"rc = inflate ( & z , Z_SYNC_FLUSH )"	368:1:8940:8970	353441	42	True				
ANR	353694	AssignmentExpression	"rc = inflate ( & z , Z_SYNC_FLUSH )"		353441	0		=			
ANR	353695	Identifier	rc		353441	0					
ANR	353696	CallExpression	"inflate ( & z , Z_SYNC_FLUSH )"		353441	1					
ANR	353697	Callee	inflate		353441	0					
ANR	353698	Identifier	inflate		353441	0					
ANR	353699	ArgumentList	& z		353441	1					
ANR	353700	Argument	& z		353441	0					
ANR	353701	UnaryOperationExpression	& z		353441	0					
ANR	353702	UnaryOperator	&		353441	0					
ANR	353703	Identifier	z		353441	1					
ANR	353704	Argument	Z_SYNC_FLUSH		353441	1					
ANR	353705	Identifier	Z_SYNC_FLUSH		353441	0					
ANR	353706	IfStatement	if ( rc != Z_OK && rc != Z_STREAM_END )		353441	43					
ANR	353707	Condition	rc != Z_OK && rc != Z_STREAM_END	369:5:8977:9008	353441	0	True				
ANR	353708	AndExpression	rc != Z_OK && rc != Z_STREAM_END		353441	0		&&			
ANR	353709	EqualityExpression	rc != Z_OK		353441	0		!=			
ANR	353710	Identifier	rc		353441	0					
ANR	353711	Identifier	Z_OK		353441	1					
ANR	353712	EqualityExpression	rc != Z_STREAM_END		353441	1		!=			
ANR	353713	Identifier	rc		353441	0					
ANR	353714	Identifier	Z_STREAM_END		353441	1					
ANR	353715	CompoundStatement		49:39:1051:1051	353441	1					
ANR	353716	ExpressionStatement	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"	370:2:9015:9051	353441	0	True				
ANR	353717	CallExpression	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"		353441	0					
ANR	353718	Callee	file_error		353441	0					
ANR	353719	Identifier	file_error		353441	0					
ANR	353720	ArgumentList	ms		353441	1					
ANR	353721	Argument	ms		353441	0					
ANR	353722	Identifier	ms		353441	0					
ANR	353723	Argument	0		353441	1					
ANR	353724	PrimaryExpression	0		353441	0					
ANR	353725	Argument	"""zlib: %s"""		353441	2					
ANR	353726	PrimaryExpression	"""zlib: %s"""		353441	0					
ANR	353727	Argument	z . msg		353441	3					
ANR	353728	MemberAccess	z . msg		353441	0					
ANR	353729	Identifier	z		353441	0					
ANR	353730	Identifier	msg		353441	1					
ANR	353731	ReturnStatement	return 0 ;	371:2:9055:9063	353441	1	True				
ANR	353732	PrimaryExpression	0		353441	0					
ANR	353733	ExpressionStatement	n = ( size_t ) z . total_out	374:1:9070:9093	353441	44	True				
ANR	353734	AssignmentExpression	n = ( size_t ) z . total_out		353441	0		=			
ANR	353735	Identifier	n		353441	0					
ANR	353736	CastExpression	( size_t ) z . total_out		353441	1					
ANR	353737	CastTarget	size_t		353441	0					
ANR	353738	MemberAccess	z . total_out		353441	1					
ANR	353739	Identifier	z		353441	0					
ANR	353740	Identifier	total_out		353441	1					
ANR	353741	ExpressionStatement	( void ) inflateEnd ( & z )	375:1:9096:9116	353441	45	True				
ANR	353742	CastExpression	( void ) inflateEnd ( & z )		353441	0					
ANR	353743	CastTarget	void		353441	0					
ANR	353744	CallExpression	inflateEnd ( & z )		353441	1					
ANR	353745	Callee	inflateEnd		353441	0					
ANR	353746	Identifier	inflateEnd		353441	0					
ANR	353747	ArgumentList	& z		353441	1					
ANR	353748	Argument	& z		353441	0					
ANR	353749	UnaryOperationExpression	& z		353441	0					
ANR	353750	UnaryOperator	&		353441	0					
ANR	353751	Identifier	z		353441	1					
ANR	353752	ExpressionStatement	( * newch ) [ n ] = '\\0'	378:1:9167:9185	353441	46	True				
ANR	353753	AssignmentExpression	( * newch ) [ n ] = '\\0'		353441	0		=			
ANR	353754	ArrayIndexing	( * newch ) [ n ]		353441	0					
ANR	353755	UnaryOperationExpression	* newch		353441	0					
ANR	353756	UnaryOperator	*		353441	0					
ANR	353757	Identifier	newch		353441	1					
ANR	353758	Identifier	n		353441	1					
ANR	353759	PrimaryExpression	'\\0'		353441	1					
ANR	353760	ReturnStatement	return n ;	380:1:9189:9197	353441	47	True				
ANR	353761	Identifier	n		353441	0					
ANR	353762	ReturnType	size_t		353441	1					
ANR	353763	Identifier	uncompressgzipped		353441	2					
ANR	353764	ParameterList	"struct magic_set * ms , const unsigned char * old , unsigned char * * newch , size_t n"		353441	3					
ANR	353765	Parameter	struct magic_set * ms	319:18:7874:7893	353441	0	True				
ANR	353766	ParameterType	struct magic_set *		353441	0					
ANR	353767	Identifier	ms		353441	1					
ANR	353768	Parameter	const unsigned char * old	319:40:7896:7919	353441	1	True				
ANR	353769	ParameterType	const unsigned char *		353441	0					
ANR	353770	Identifier	old		353441	1					
ANR	353771	Parameter	unsigned char * * newch	320:4:7926:7946	353441	2	True				
ANR	353772	ParameterType	unsigned char * *		353441	0					
ANR	353773	Identifier	newch		353441	1					
ANR	353774	Parameter	size_t n	320:27:7949:7956	353441	3	True				
ANR	353775	ParameterType	size_t		353441	0					
ANR	353776	Identifier	n		353441	1					
ANR	353777	CFGEntryNode	ENTRY		353441		True				
ANR	353778	CFGExitNode	EXIT		353441		True				
ANR	353779	Symbol	& z		353441						
ANR	353780	Symbol	FEXTRA		353441						
ANR	353781	Symbol	z . msg		353441						
ANR	353782	Symbol	* data_start		353441						
ANR	353783	Symbol	data_start		353441						
ANR	353784	Symbol	strchr		353441						
ANR	353785	Symbol	z . avail_out		353441						
ANR	353786	Symbol	Z_OK		353441						
ANR	353787	Symbol	FHCRC		353441						
ANR	353788	Symbol	* old		353441						
ANR	353789	Symbol	* newch		353441						
ANR	353790	Symbol	z . zalloc		353441						
ANR	353791	Symbol	Z_STREAM_END		353441						
ANR	353792	Symbol	flg		353441						
ANR	353793	Symbol	CAST		353441						
ANR	353794	Symbol	inflateInit2		353441						
ANR	353795	Symbol	Z_SYNC_FLUSH		353441						
ANR	353796	Symbol	ms		353441						
ANR	353797	Symbol	old		353441						
ANR	353798	Symbol	* * newch		353441						
ANR	353799	Symbol	uint32_t		353441						
ANR	353800	Symbol	z . next_in		353441						
ANR	353801	Symbol	z . zfree		353441						
ANR	353802	Symbol	n		353441						
ANR	353803	Symbol	FNAME		353441						
ANR	353804	Symbol	rc		353441						
ANR	353805	Symbol	z . next_out		353441						
ANR	353806	Symbol	HOWMANY		353441						
ANR	353807	Symbol	z . total_out		353441						
ANR	353808	Symbol	z . opaque		353441						
ANR	353809	Symbol	inflate		353441						
ANR	353810	Symbol	newch		353441						
ANR	353811	Symbol	* n		353441						
ANR	353812	Symbol	z		353441						
ANR	353813	Symbol	FCOMMENT		353441						
ANR	353814	Symbol	z . avail_in		353441						
ANR	353815	Symbol	Z_NULL		353441						
ANR	353816	Function	uncompressbuf	384:8:9217:11727							
ANR	353817	FunctionDef	"uncompressbuf (struct magic_set * ms , int fd , size_t method , const unsigned char * old , unsigned char * * newch , size_t n)"		353816	0					
ANR	353818	CompoundStatement		387:0:9346:11727	353816	0					
ANR	353819	IdentifierDeclStatement	"int fdin [ 2 ] , fdout [ 2 ] ;"	388:1:9349:9370	353816	0	True				
ANR	353820	IdentifierDecl	fdin [ 2 ]		353816	0					
ANR	353821	IdentifierDeclType	int [ 2 ]		353816	0					
ANR	353822	Identifier	fdin		353816	1					
ANR	353823	PrimaryExpression	2		353816	2					
ANR	353824	IdentifierDecl	fdout [ 2 ]		353816	1					
ANR	353825	IdentifierDeclType	int [ 2 ]		353816	0					
ANR	353826	Identifier	fdout		353816	1					
ANR	353827	PrimaryExpression	2		353816	2					
ANR	353828	IdentifierDeclStatement	ssize_t r ;	389:1:9373:9382	353816	1	True				
ANR	353829	IdentifierDecl	r		353816	0					
ANR	353830	IdentifierDeclType	ssize_t		353816	0					
ANR	353831	Identifier	r		353816	1					
ANR	353832	IdentifierDeclStatement	pid_t pid ;	390:1:9385:9394	353816	2	True				
ANR	353833	IdentifierDecl	pid		353816	0					
ANR	353834	IdentifierDeclType	pid_t		353816	0					
ANR	353835	Identifier	pid		353816	1					
ANR	353836	IfStatement	if ( method == 2 )		353816	3					
ANR	353837	Condition	method == 2	394:5:9478:9488	353816	0	True				
ANR	353838	EqualityExpression	method == 2		353816	0		==			
ANR	353839	Identifier	method		353816	0					
ANR	353840	PrimaryExpression	2		353816	1					
ANR	353841	ReturnStatement	"return uncompressgzipped ( ms , old , newch , n ) ;"	395:2:9493:9536	353816	1	True				
ANR	353842	CallExpression	"uncompressgzipped ( ms , old , newch , n )"		353816	0					
ANR	353843	Callee	uncompressgzipped		353816	0					
ANR	353844	Identifier	uncompressgzipped		353816	0					
ANR	353845	ArgumentList	ms		353816	1					
ANR	353846	Argument	ms		353816	0					
ANR	353847	Identifier	ms		353816	0					
ANR	353848	Argument	old		353816	1					
ANR	353849	Identifier	old		353816	0					
ANR	353850	Argument	newch		353816	2					
ANR	353851	Identifier	newch		353816	0					
ANR	353852	Argument	n		353816	3					
ANR	353853	Identifier	n		353816	0					
ANR	353854	ExpressionStatement	( void ) fflush ( stdout )	397:1:9546:9566	353816	4	True				
ANR	353855	CastExpression	( void ) fflush ( stdout )		353816	0					
ANR	353856	CastTarget	void		353816	0					
ANR	353857	CallExpression	fflush ( stdout )		353816	1					
ANR	353858	Callee	fflush		353816	0					
ANR	353859	Identifier	fflush		353816	0					
ANR	353860	ArgumentList	stdout		353816	1					
ANR	353861	Argument	stdout		353816	0					
ANR	353862	Identifier	stdout		353816	0					
ANR	353863	ExpressionStatement	( void ) fflush ( stderr )	398:1:9569:9589	353816	5	True				
ANR	353864	CastExpression	( void ) fflush ( stderr )		353816	0					
ANR	353865	CastTarget	void		353816	0					
ANR	353866	CallExpression	fflush ( stderr )		353816	1					
ANR	353867	Callee	fflush		353816	0					
ANR	353868	Identifier	fflush		353816	0					
ANR	353869	ArgumentList	stderr		353816	1					
ANR	353870	Argument	stderr		353816	0					
ANR	353871	Identifier	stderr		353816	0					
ANR	353872	IfStatement	if ( ( fd != - 1 && pipe ( fdin ) == - 1 ) || pipe ( fdout ) == - 1 )		353816	6					
ANR	353873	Condition	( fd != - 1 && pipe ( fdin ) == - 1 ) || pipe ( fdout ) == - 1	400:5:9597:9647	353816	0	True				
ANR	353874	OrExpression	( fd != - 1 && pipe ( fdin ) == - 1 ) || pipe ( fdout ) == - 1		353816	0		||			
ANR	353875	AndExpression	fd != - 1 && pipe ( fdin ) == - 1		353816	0		&&			
ANR	353876	EqualityExpression	fd != - 1		353816	0		!=			
ANR	353877	Identifier	fd		353816	0					
ANR	353878	UnaryOperationExpression	- 1		353816	1					
ANR	353879	UnaryOperator	-		353816	0					
ANR	353880	PrimaryExpression	1		353816	1					
ANR	353881	EqualityExpression	pipe ( fdin ) == - 1		353816	1		==			
ANR	353882	CallExpression	pipe ( fdin )		353816	0					
ANR	353883	Callee	pipe		353816	0					
ANR	353884	Identifier	pipe		353816	0					
ANR	353885	ArgumentList	fdin		353816	1					
ANR	353886	Argument	fdin		353816	0					
ANR	353887	Identifier	fdin		353816	0					
ANR	353888	UnaryOperationExpression	- 1		353816	1					
ANR	353889	UnaryOperator	-		353816	0					
ANR	353890	PrimaryExpression	1		353816	1					
ANR	353891	EqualityExpression	pipe ( fdout ) == - 1		353816	1		==			
ANR	353892	CallExpression	pipe ( fdout )		353816	0					
ANR	353893	Callee	pipe		353816	0					
ANR	353894	Identifier	pipe		353816	0					
ANR	353895	ArgumentList	fdout		353816	1					
ANR	353896	Argument	fdout		353816	0					
ANR	353897	Identifier	fdout		353816	0					
ANR	353898	UnaryOperationExpression	- 1		353816	1					
ANR	353899	UnaryOperator	-		353816	0					
ANR	353900	PrimaryExpression	1		353816	1					
ANR	353901	CompoundStatement		14:58:303:303	353816	1					
ANR	353902	ExpressionStatement	"file_error ( ms , errno , ""cannot create pipe"" )"	401:2:9654:9697	353816	0	True				
ANR	353903	CallExpression	"file_error ( ms , errno , ""cannot create pipe"" )"		353816	0					
ANR	353904	Callee	file_error		353816	0					
ANR	353905	Identifier	file_error		353816	0					
ANR	353906	ArgumentList	ms		353816	1					
ANR	353907	Argument	ms		353816	0					
ANR	353908	Identifier	ms		353816	0					
ANR	353909	Argument	errno		353816	1					
ANR	353910	Identifier	errno		353816	0					
ANR	353911	Argument	"""cannot create pipe"""		353816	2					
ANR	353912	PrimaryExpression	"""cannot create pipe"""		353816	0					
ANR	353913	ReturnStatement	return NODATA ;	402:2:9702:9715	353816	1	True				
ANR	353914	Identifier	NODATA		353816	0					
ANR	353915	SwitchStatement	switch ( pid = fork ( ) )		353816	7					
ANR	353916	Condition	pid = fork ( )	404:9:9729:9740	353816	0	True				
ANR	353917	AssignmentExpression	pid = fork ( )		353816	0		=			
ANR	353918	Identifier	pid		353816	0					
ANR	353919	CallExpression	fork ( )		353816	1					
ANR	353920	Callee	fork		353816	0					
ANR	353921	Identifier	fork		353816	0					
ANR	353922	ArgumentList			353816	1					
ANR	353923	CompoundStatement		18:23:396:396	353816	1					
ANR	353924	Label	case 0 :	405:1:9746:9752	353816	0	True				
ANR	353925	ExpressionStatement	( void ) close ( 0 )	406:2:9768:9783	353816	1	True				
ANR	353926	CastExpression	( void ) close ( 0 )		353816	0					
ANR	353927	CastTarget	void		353816	0					
ANR	353928	CallExpression	close ( 0 )		353816	1					
ANR	353929	Callee	close		353816	0					
ANR	353930	Identifier	close		353816	0					
ANR	353931	ArgumentList	0		353816	1					
ANR	353932	Argument	0		353816	0					
ANR	353933	PrimaryExpression	0		353816	0					
ANR	353934	IfStatement	if ( fd != - 1 )		353816	2					
ANR	353935	Condition	fd != - 1	407:6:9791:9798	353816	0	True				
ANR	353936	EqualityExpression	fd != - 1		353816	0		!=			
ANR	353937	Identifier	fd		353816	0					
ANR	353938	UnaryOperationExpression	- 1		353816	1					
ANR	353939	UnaryOperator	-		353816	0					
ANR	353940	PrimaryExpression	1		353816	1					
ANR	353941	CompoundStatement		21:16:454:454	353816	1					
ANR	353942	ExpressionStatement	( void ) dup ( fd )	408:6:9809:9823	353816	0	True				
ANR	353943	CastExpression	( void ) dup ( fd )		353816	0					
ANR	353944	CastTarget	void		353816	0					
ANR	353945	CallExpression	dup ( fd )		353816	1					
ANR	353946	Callee	dup		353816	0					
ANR	353947	Identifier	dup		353816	0					
ANR	353948	ArgumentList	fd		353816	1					
ANR	353949	Argument	fd		353816	0					
ANR	353950	Identifier	fd		353816	0					
ANR	353951	ExpressionStatement	"( void ) FINFO_LSEEK_FUNC ( 0 , ( off_t ) 0 , SEEK_SET )"	409:6:9831:9877	353816	1	True				
ANR	353952	CastExpression	"( void ) FINFO_LSEEK_FUNC ( 0 , ( off_t ) 0 , SEEK_SET )"		353816	0					
ANR	353953	CastTarget	void		353816	0					
ANR	353954	CallExpression	"FINFO_LSEEK_FUNC ( 0 , ( off_t ) 0 , SEEK_SET )"		353816	1					
ANR	353955	Callee	FINFO_LSEEK_FUNC		353816	0					
ANR	353956	Identifier	FINFO_LSEEK_FUNC		353816	0					
ANR	353957	ArgumentList	0		353816	1					
ANR	353958	Argument	0		353816	0					
ANR	353959	PrimaryExpression	0		353816	0					
ANR	353960	Argument	( off_t ) 0		353816	1					
ANR	353961	CastExpression	( off_t ) 0		353816	0					
ANR	353962	CastTarget	off_t		353816	0					
ANR	353963	PrimaryExpression	0		353816	1					
ANR	353964	Argument	SEEK_SET		353816	2					
ANR	353965	Identifier	SEEK_SET		353816	0					
ANR	353966	ElseStatement	else		353816	0					
ANR	353967	CompoundStatement		24:9:541:541	353816	0					
ANR	353968	ExpressionStatement	( void ) dup ( fdin [ 0 ] )	411:6:9896:9915	353816	0	True				
ANR	353969	CastExpression	( void ) dup ( fdin [ 0 ] )		353816	0					
ANR	353970	CastTarget	void		353816	0					
ANR	353971	CallExpression	dup ( fdin [ 0 ] )		353816	1					
ANR	353972	Callee	dup		353816	0					
ANR	353973	Identifier	dup		353816	0					
ANR	353974	ArgumentList	fdin [ 0 ]		353816	1					
ANR	353975	Argument	fdin [ 0 ]		353816	0					
ANR	353976	ArrayIndexing	fdin [ 0 ]		353816	0					
ANR	353977	Identifier	fdin		353816	0					
ANR	353978	PrimaryExpression	0		353816	1					
ANR	353979	ExpressionStatement	( void ) close ( fdin [ 0 ] )	412:6:9923:9944	353816	1	True				
ANR	353980	CastExpression	( void ) close ( fdin [ 0 ] )		353816	0					
ANR	353981	CastTarget	void		353816	0					
ANR	353982	CallExpression	close ( fdin [ 0 ] )		353816	1					
ANR	353983	Callee	close		353816	0					
ANR	353984	Identifier	close		353816	0					
ANR	353985	ArgumentList	fdin [ 0 ]		353816	1					
ANR	353986	Argument	fdin [ 0 ]		353816	0					
ANR	353987	ArrayIndexing	fdin [ 0 ]		353816	0					
ANR	353988	Identifier	fdin		353816	0					
ANR	353989	PrimaryExpression	0		353816	1					
ANR	353990	ExpressionStatement	( void ) close ( fdin [ 1 ] )	413:6:9952:9973	353816	2	True				
ANR	353991	CastExpression	( void ) close ( fdin [ 1 ] )		353816	0					
ANR	353992	CastTarget	void		353816	0					
ANR	353993	CallExpression	close ( fdin [ 1 ] )		353816	1					
ANR	353994	Callee	close		353816	0					
ANR	353995	Identifier	close		353816	0					
ANR	353996	ArgumentList	fdin [ 1 ]		353816	1					
ANR	353997	Argument	fdin [ 1 ]		353816	0					
ANR	353998	ArrayIndexing	fdin [ 1 ]		353816	0					
ANR	353999	Identifier	fdin		353816	0					
ANR	354000	PrimaryExpression	1		353816	1					
ANR	354001	ExpressionStatement	( void ) close ( 1 )	416:2:9982:9997	353816	3	True				
ANR	354002	CastExpression	( void ) close ( 1 )		353816	0					
ANR	354003	CastTarget	void		353816	0					
ANR	354004	CallExpression	close ( 1 )		353816	1					
ANR	354005	Callee	close		353816	0					
ANR	354006	Identifier	close		353816	0					
ANR	354007	ArgumentList	1		353816	1					
ANR	354008	Argument	1		353816	0					
ANR	354009	PrimaryExpression	1		353816	0					
ANR	354010	ExpressionStatement	( void ) dup ( fdout [ 1 ] )	417:2:10001:10021	353816	4	True				
ANR	354011	CastExpression	( void ) dup ( fdout [ 1 ] )		353816	0					
ANR	354012	CastTarget	void		353816	0					
ANR	354013	CallExpression	dup ( fdout [ 1 ] )		353816	1					
ANR	354014	Callee	dup		353816	0					
ANR	354015	Identifier	dup		353816	0					
ANR	354016	ArgumentList	fdout [ 1 ]		353816	1					
ANR	354017	Argument	fdout [ 1 ]		353816	0					
ANR	354018	ArrayIndexing	fdout [ 1 ]		353816	0					
ANR	354019	Identifier	fdout		353816	0					
ANR	354020	PrimaryExpression	1		353816	1					
ANR	354021	ExpressionStatement	( void ) close ( fdout [ 0 ] )	418:2:10025:10047	353816	5	True				
ANR	354022	CastExpression	( void ) close ( fdout [ 0 ] )		353816	0					
ANR	354023	CastTarget	void		353816	0					
ANR	354024	CallExpression	close ( fdout [ 0 ] )		353816	1					
ANR	354025	Callee	close		353816	0					
ANR	354026	Identifier	close		353816	0					
ANR	354027	ArgumentList	fdout [ 0 ]		353816	1					
ANR	354028	Argument	fdout [ 0 ]		353816	0					
ANR	354029	ArrayIndexing	fdout [ 0 ]		353816	0					
ANR	354030	Identifier	fdout		353816	0					
ANR	354031	PrimaryExpression	0		353816	1					
ANR	354032	ExpressionStatement	( void ) close ( fdout [ 1 ] )	419:2:10051:10073	353816	6	True				
ANR	354033	CastExpression	( void ) close ( fdout [ 1 ] )		353816	0					
ANR	354034	CastTarget	void		353816	0					
ANR	354035	CallExpression	close ( fdout [ 1 ] )		353816	1					
ANR	354036	Callee	close		353816	0					
ANR	354037	Identifier	close		353816	0					
ANR	354038	ArgumentList	fdout [ 1 ]		353816	1					
ANR	354039	Argument	fdout [ 1 ]		353816	0					
ANR	354040	ArrayIndexing	fdout [ 1 ]		353816	0					
ANR	354041	Identifier	fdout		353816	0					
ANR	354042	PrimaryExpression	1		353816	1					
ANR	354043	IfStatement	if ( compr [ method ] . silent )		353816	7					
ANR	354044	Condition	compr [ method ] . silent	421:6:10095:10114	353816	0	True				
ANR	354045	MemberAccess	compr [ method ] . silent		353816	0					
ANR	354046	ArrayIndexing	compr [ method ]		353816	0					
ANR	354047	Identifier	compr		353816	0					
ANR	354048	Identifier	method		353816	1					
ANR	354049	Identifier	silent		353816	1					
ANR	354050	ExpressionStatement	( void ) close ( 2 )	422:3:10120:10134	353816	1	True				
ANR	354051	CastExpression	( void ) close ( 2 )		353816	0					
ANR	354052	CastTarget	void		353816	0					
ANR	354053	CallExpression	close ( 2 )		353816	1					
ANR	354054	Callee	close		353816	0					
ANR	354055	Identifier	close		353816	0					
ANR	354056	ArgumentList	2		353816	1					
ANR	354057	Argument	2		353816	0					
ANR	354058	PrimaryExpression	2		353816	0					
ANR	354059	Statement	(	425:2:10146:10146	353816	8	True				
ANR	354060	Statement	void	425:3:10147:10150	353816	9	True				
ANR	354061	Statement	)	425:7:10151:10151	353816	10	True				
ANR	354062	Statement	execvp	425:8:10152:10157	353816	11	True				
ANR	354063	Statement	(	425:14:10158:10158	353816	12	True				
ANR	354064	Statement	compr	425:15:10159:10163	353816	13	True				
ANR	354065	Statement	[	425:20:10164:10164	353816	14	True				
ANR	354066	Statement	method	425:21:10165:10170	353816	15	True				
ANR	354067	Statement	]	425:27:10171:10171	353816	16	True				
ANR	354068	Statement	.	425:28:10172:10172	353816	17	True				
ANR	354069	Statement	argv	425:29:10173:10176	353816	18	True				
ANR	354070	Statement	[	425:33:10177:10177	353816	19	True				
ANR	354071	Statement	0	425:34:10178:10178	353816	20	True				
ANR	354072	Statement	]	425:35:10179:10179	353816	21	True				
ANR	354073	Statement	","	425:36:10180:10180	353816	22	True				
ANR	354074	Statement	(	426:6:10188:10188	353816	23	True				
ANR	354075	Statement	char	426:7:10189:10192	353816	24	True				
ANR	354076	Statement	*	426:12:10194:10194	353816	25	True				
ANR	354077	Statement	const	426:13:10195:10199	353816	26	True				
ANR	354078	Statement	*	426:19:10201:10201	353816	27	True				
ANR	354079	Statement	)	426:20:10202:10202	353816	28	True				
ANR	354080	Statement	(	426:21:10203:10203	353816	29	True				
ANR	354081	Statement	intptr_t	426:22:10204:10211	353816	30	True				
ANR	354082	Statement	)	426:30:10212:10212	353816	31	True				
ANR	354083	Statement	compr	426:31:10213:10217	353816	32	True				
ANR	354084	Statement	[	426:36:10218:10218	353816	33	True				
ANR	354085	Statement	method	426:37:10219:10224	353816	34	True				
ANR	354086	Statement	]	426:43:10225:10225	353816	35	True				
ANR	354087	Statement	.	426:44:10226:10226	353816	36	True				
ANR	354088	Statement	argv	426:45:10227:10230	353816	37	True				
ANR	354089	Statement	)	426:49:10231:10231	353816	38	True				
ANR	354090	ExpressionStatement		426:50:10232:10232	353816	39	True				
ANR	354091	ExpressionStatement	"( void ) fprintf ( stderr , ""exec `%s' failed (%s)\\n"" , compr [ method ] . argv [ 0 ] , strerror ( errno ) )"	428:2:10249:10343	353816	40	True				
ANR	354092	CastExpression	"( void ) fprintf ( stderr , ""exec `%s' failed (%s)\\n"" , compr [ method ] . argv [ 0 ] , strerror ( errno ) )"		353816	0					
ANR	354093	CastTarget	void		353816	0					
ANR	354094	CallExpression	"fprintf ( stderr , ""exec `%s' failed (%s)\\n"" , compr [ method ] . argv [ 0 ] , strerror ( errno ) )"		353816	1					
ANR	354095	Callee	fprintf		353816	0					
ANR	354096	Identifier	fprintf		353816	0					
ANR	354097	ArgumentList	stderr		353816	1					
ANR	354098	Argument	stderr		353816	0					
ANR	354099	Identifier	stderr		353816	0					
ANR	354100	Argument	"""exec `%s' failed (%s)\\n"""		353816	1					
ANR	354101	PrimaryExpression	"""exec `%s' failed (%s)\\n"""		353816	0					
ANR	354102	Argument	compr [ method ] . argv [ 0 ]		353816	2					
ANR	354103	ArrayIndexing	compr [ method ] . argv [ 0 ]		353816	0					
ANR	354104	MemberAccess	compr [ method ] . argv		353816	0					
ANR	354105	ArrayIndexing	compr [ method ]		353816	0					
ANR	354106	Identifier	compr		353816	0					
ANR	354107	Identifier	method		353816	1					
ANR	354108	Identifier	argv		353816	1					
ANR	354109	PrimaryExpression	0		353816	1					
ANR	354110	Argument	strerror ( errno )		353816	3					
ANR	354111	CallExpression	strerror ( errno )		353816	0					
ANR	354112	Callee	strerror		353816	0					
ANR	354113	Identifier	strerror		353816	0					
ANR	354114	ArgumentList	errno		353816	1					
ANR	354115	Argument	errno		353816	0					
ANR	354116	Identifier	errno		353816	0					
ANR	354117	ExpressionStatement	exit ( 1 )	431:2:10354:10361	353816	41	True				
ANR	354118	CallExpression	exit ( 1 )		353816	0					
ANR	354119	Callee	exit		353816	0					
ANR	354120	Identifier	exit		353816	0					
ANR	354121	ArgumentList	1		353816	1					
ANR	354122	Argument	1		353816	0					
ANR	354123	PrimaryExpression	1		353816	0					
ANR	354124	Statement	case	433:1:10381:10384	353816	42	True				
ANR	354125	Statement	-	433:6:10386:10386	353816	43	True				
ANR	354126	Label	1 :	433:7:10387:10388	353816	44	True				
ANR	354127	ExpressionStatement	"file_error ( ms , errno , ""could not fork"" )"	434:2:10392:10431	353816	45	True				
ANR	354128	CallExpression	"file_error ( ms , errno , ""could not fork"" )"		353816	0					
ANR	354129	Callee	file_error		353816	0					
ANR	354130	Identifier	file_error		353816	0					
ANR	354131	ArgumentList	ms		353816	1					
ANR	354132	Argument	ms		353816	0					
ANR	354133	Identifier	ms		353816	0					
ANR	354134	Argument	errno		353816	1					
ANR	354135	Identifier	errno		353816	0					
ANR	354136	Argument	"""could not fork"""		353816	2					
ANR	354137	PrimaryExpression	"""could not fork"""		353816	0					
ANR	354138	ReturnStatement	return NODATA ;	435:2:10435:10448	353816	46	True				
ANR	354139	Identifier	NODATA		353816	0					
ANR	354140	Label	default :	437:1:10452:10459	353816	47	True				
ANR	354141	Identifier	default		353816	0					
ANR	354142	ExpressionStatement	( void ) close ( fdout [ 1 ] )	438:2:10476:10498	353816	48	True				
ANR	354143	CastExpression	( void ) close ( fdout [ 1 ] )		353816	0					
ANR	354144	CastTarget	void		353816	0					
ANR	354145	CallExpression	close ( fdout [ 1 ] )		353816	1					
ANR	354146	Callee	close		353816	0					
ANR	354147	Identifier	close		353816	0					
ANR	354148	ArgumentList	fdout [ 1 ]		353816	1					
ANR	354149	Argument	fdout [ 1 ]		353816	0					
ANR	354150	ArrayIndexing	fdout [ 1 ]		353816	0					
ANR	354151	Identifier	fdout		353816	0					
ANR	354152	PrimaryExpression	1		353816	1					
ANR	354153	IfStatement	if ( fd == - 1 )		353816	49					
ANR	354154	Condition	fd == - 1	439:6:10506:10513	353816	0	True				
ANR	354155	EqualityExpression	fd == - 1		353816	0		==			
ANR	354156	Identifier	fd		353816	0					
ANR	354157	UnaryOperationExpression	- 1		353816	1					
ANR	354158	UnaryOperator	-		353816	0					
ANR	354159	PrimaryExpression	1		353816	1					
ANR	354160	CompoundStatement		53:16:1169:1169	353816	1					
ANR	354161	ExpressionStatement	( void ) close ( fdin [ 0 ] )	440:3:10521:10542	353816	0	True				
ANR	354162	CastExpression	( void ) close ( fdin [ 0 ] )		353816	0					
ANR	354163	CastTarget	void		353816	0					
ANR	354164	CallExpression	close ( fdin [ 0 ] )		353816	1					
ANR	354165	Callee	close		353816	0					
ANR	354166	Identifier	close		353816	0					
ANR	354167	ArgumentList	fdin [ 0 ]		353816	1					
ANR	354168	Argument	fdin [ 0 ]		353816	0					
ANR	354169	ArrayIndexing	fdin [ 0 ]		353816	0					
ANR	354170	Identifier	fdin		353816	0					
ANR	354171	PrimaryExpression	0		353816	1					
ANR	354172	SwitchStatement	switch ( fork ( ) )		353816	1					
ANR	354173	Condition	fork ( )	445:11:10637:10642	353816	0	True				
ANR	354174	CallExpression	fork ( )		353816	0					
ANR	354175	Callee	fork		353816	0					
ANR	354176	Identifier	fork		353816	0					
ANR	354177	ArgumentList			353816	1					
ANR	354178	CompoundStatement		59:19:1298:1298	353816	1					
ANR	354179	Label	case 0 :	446:3:10650:10656	353816	0	True				
ANR	354180	ExpressionStatement	( void ) close ( fdout [ 0 ] )	447:4:10674:10695	353816	1	True				
ANR	354181	CastExpression	( void ) close ( fdout [ 0 ] )		353816	0					
ANR	354182	CastTarget	void		353816	0					
ANR	354183	CallExpression	close ( fdout [ 0 ] )		353816	1					
ANR	354184	Callee	close		353816	0					
ANR	354185	Identifier	close		353816	0					
ANR	354186	ArgumentList	fdout [ 0 ]		353816	1					
ANR	354187	Argument	fdout [ 0 ]		353816	0					
ANR	354188	ArrayIndexing	fdout [ 0 ]		353816	0					
ANR	354189	Identifier	fdout		353816	0					
ANR	354190	PrimaryExpression	0		353816	1					
ANR	354191	IfStatement	"if ( swrite ( fdin [ 1 ] , old , n ) != ( ssize_t ) n )"		353816	2					
ANR	354192	Condition	"swrite ( fdin [ 1 ] , old , n ) != ( ssize_t ) n"	448:8:10705:10741	353816	0	True				
ANR	354193	EqualityExpression	"swrite ( fdin [ 1 ] , old , n ) != ( ssize_t ) n"		353816	0		!=			
ANR	354194	CallExpression	"swrite ( fdin [ 1 ] , old , n )"		353816	0					
ANR	354195	Callee	swrite		353816	0					
ANR	354196	Identifier	swrite		353816	0					
ANR	354197	ArgumentList	fdin [ 1 ]		353816	1					
ANR	354198	Argument	fdin [ 1 ]		353816	0					
ANR	354199	ArrayIndexing	fdin [ 1 ]		353816	0					
ANR	354200	Identifier	fdin		353816	0					
ANR	354201	PrimaryExpression	1		353816	1					
ANR	354202	Argument	old		353816	1					
ANR	354203	Identifier	old		353816	0					
ANR	354204	Argument	n		353816	2					
ANR	354205	Identifier	n		353816	0					
ANR	354206	CastExpression	( ssize_t ) n		353816	1					
ANR	354207	CastTarget	ssize_t		353816	0					
ANR	354208	Identifier	n		353816	1					
ANR	354209	CompoundStatement		62:47:1397:1397	353816	1					
ANR	354210	ExpressionStatement	"( void ) fprintf ( stderr , ""Write failed (%s)\\n"" , strerror ( errno ) )"	450:5:10764:10843	353816	0	True				
ANR	354211	CastExpression	"( void ) fprintf ( stderr , ""Write failed (%s)\\n"" , strerror ( errno ) )"		353816	0					
ANR	354212	CastTarget	void		353816	0					
ANR	354213	CallExpression	"fprintf ( stderr , ""Write failed (%s)\\n"" , strerror ( errno ) )"		353816	1					
ANR	354214	Callee	fprintf		353816	0					
ANR	354215	Identifier	fprintf		353816	0					
ANR	354216	ArgumentList	stderr		353816	1					
ANR	354217	Argument	stderr		353816	0					
ANR	354218	Identifier	stderr		353816	0					
ANR	354219	Argument	"""Write failed (%s)\\n"""		353816	1					
ANR	354220	PrimaryExpression	"""Write failed (%s)\\n"""		353816	0					
ANR	354221	Argument	strerror ( errno )		353816	2					
ANR	354222	CallExpression	strerror ( errno )		353816	0					
ANR	354223	Callee	strerror		353816	0					
ANR	354224	Identifier	strerror		353816	0					
ANR	354225	ArgumentList	errno		353816	1					
ANR	354226	Argument	errno		353816	0					
ANR	354227	Identifier	errno		353816	0					
ANR	354228	ExpressionStatement	exit ( 1 )	454:5:10857:10864	353816	1	True				
ANR	354229	CallExpression	exit ( 1 )		353816	0					
ANR	354230	Callee	exit		353816	0					
ANR	354231	Identifier	exit		353816	0					
ANR	354232	ArgumentList	1		353816	1					
ANR	354233	Argument	1		353816	0					
ANR	354234	PrimaryExpression	1		353816	0					
ANR	354235	ExpressionStatement	exit ( 0 )	456:4:10876:10883	353816	3	True				
ANR	354236	CallExpression	exit ( 0 )		353816	0					
ANR	354237	Callee	exit		353816	0					
ANR	354238	Identifier	exit		353816	0					
ANR	354239	ArgumentList	0		353816	1					
ANR	354240	Argument	0		353816	0					
ANR	354241	PrimaryExpression	0		353816	0					
ANR	354242	Statement	case	459:3:10908:10911	353816	4	True				
ANR	354243	Statement	-	459:8:10913:10913	353816	5	True				
ANR	354244	Label	1 :	459:9:10914:10915	353816	6	True				
ANR	354245	ExpressionStatement	"( void ) fprintf ( stderr , ""Fork failed (%s)\\n"" , strerror ( errno ) )"	461:4:10934:11002	353816	7	True				
ANR	354246	CastExpression	"( void ) fprintf ( stderr , ""Fork failed (%s)\\n"" , strerror ( errno ) )"		353816	0					
ANR	354247	CastTarget	void		353816	0					
ANR	354248	CallExpression	"fprintf ( stderr , ""Fork failed (%s)\\n"" , strerror ( errno ) )"		353816	1					
ANR	354249	Callee	fprintf		353816	0					
ANR	354250	Identifier	fprintf		353816	0					
ANR	354251	ArgumentList	stderr		353816	1					
ANR	354252	Argument	stderr		353816	0					
ANR	354253	Identifier	stderr		353816	0					
ANR	354254	Argument	"""Fork failed (%s)\\n"""		353816	1					
ANR	354255	PrimaryExpression	"""Fork failed (%s)\\n"""		353816	0					
ANR	354256	Argument	strerror ( errno )		353816	2					
ANR	354257	CallExpression	strerror ( errno )		353816	0					
ANR	354258	Callee	strerror		353816	0					
ANR	354259	Identifier	strerror		353816	0					
ANR	354260	ArgumentList	errno		353816	1					
ANR	354261	Argument	errno		353816	0					
ANR	354262	Identifier	errno		353816	0					
ANR	354263	ExpressionStatement	exit ( 1 )	464:4:11015:11022	353816	8	True				
ANR	354264	CallExpression	exit ( 1 )		353816	0					
ANR	354265	Callee	exit		353816	0					
ANR	354266	Identifier	exit		353816	0					
ANR	354267	ArgumentList	1		353816	1					
ANR	354268	Argument	1		353816	0					
ANR	354269	PrimaryExpression	1		353816	0					
ANR	354270	Label	default :	467:3:11047:11054	353816	9	True				
ANR	354271	Identifier	default		353816	0					
ANR	354272	BreakStatement	break ;	468:4:11074:11079	353816	10	True				
ANR	354273	ExpressionStatement	( void ) close ( fdin [ 1 ] )	470:3:11089:11110	353816	2	True				
ANR	354274	CastExpression	( void ) close ( fdin [ 1 ] )		353816	0					
ANR	354275	CastTarget	void		353816	0					
ANR	354276	CallExpression	close ( fdin [ 1 ] )		353816	1					
ANR	354277	Callee	close		353816	0					
ANR	354278	Identifier	close		353816	0					
ANR	354279	ArgumentList	fdin [ 1 ]		353816	1					
ANR	354280	Argument	fdin [ 1 ]		353816	0					
ANR	354281	ArrayIndexing	fdin [ 1 ]		353816	0					
ANR	354282	Identifier	fdin		353816	0					
ANR	354283	PrimaryExpression	1		353816	1					
ANR	354284	ExpressionStatement	fdin [ 1 ] = - 1	471:3:11115:11127	353816	3	True				
ANR	354285	AssignmentExpression	fdin [ 1 ] = - 1		353816	0		=			
ANR	354286	ArrayIndexing	fdin [ 1 ]		353816	0					
ANR	354287	Identifier	fdin		353816	0					
ANR	354288	PrimaryExpression	1		353816	1					
ANR	354289	UnaryOperationExpression	- 1		353816	1					
ANR	354290	UnaryOperator	-		353816	0					
ANR	354291	PrimaryExpression	1		353816	1					
ANR	354292	ExpressionStatement	* newch = ( unsigned char * ) emalloc ( HOWMANY + 1 )	474:2:11136:11183	353816	50	True				
ANR	354293	AssignmentExpression	* newch = ( unsigned char * ) emalloc ( HOWMANY + 1 )		353816	0		=			
ANR	354294	UnaryOperationExpression	* newch		353816	0					
ANR	354295	UnaryOperator	*		353816	0					
ANR	354296	Identifier	newch		353816	1					
ANR	354297	CastExpression	( unsigned char * ) emalloc ( HOWMANY + 1 )		353816	1					
ANR	354298	CastTarget	unsigned char *		353816	0					
ANR	354299	CallExpression	emalloc ( HOWMANY + 1 )		353816	1					
ANR	354300	Callee	emalloc		353816	0					
ANR	354301	Identifier	emalloc		353816	0					
ANR	354302	ArgumentList	HOWMANY + 1		353816	1					
ANR	354303	Argument	HOWMANY + 1		353816	0					
ANR	354304	AdditiveExpression	HOWMANY + 1		353816	0		+			
ANR	354305	Identifier	HOWMANY		353816	0					
ANR	354306	PrimaryExpression	1		353816	1					
ANR	354307	IfStatement	"if ( ( r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 ) ) <= 0 )"		353816	51					
ANR	354308	Condition	"( r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 ) ) <= 0"	476:6:11192:11237	353816	0	True				
ANR	354309	RelationalExpression	"( r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 ) ) <= 0"		353816	0		<=			
ANR	354310	AssignmentExpression	"r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 )"		353816	0		=			
ANR	354311	Identifier	r		353816	0					
ANR	354312	CallExpression	"sread ( fdout [ 0 ] , * newch , HOWMANY , 0 )"		353816	1					
ANR	354313	Callee	sread		353816	0					
ANR	354314	Identifier	sread		353816	0					
ANR	354315	ArgumentList	fdout [ 0 ]		353816	1					
ANR	354316	Argument	fdout [ 0 ]		353816	0					
ANR	354317	ArrayIndexing	fdout [ 0 ]		353816	0					
ANR	354318	Identifier	fdout		353816	0					
ANR	354319	PrimaryExpression	0		353816	1					
ANR	354320	Argument	* newch		353816	1					
ANR	354321	UnaryOperationExpression	* newch		353816	0					
ANR	354322	UnaryOperator	*		353816	0					
ANR	354323	Identifier	newch		353816	1					
ANR	354324	Argument	HOWMANY		353816	2					
ANR	354325	Identifier	HOWMANY		353816	0					
ANR	354326	Argument	0		353816	3					
ANR	354327	PrimaryExpression	0		353816	0					
ANR	354328	PrimaryExpression	0		353816	1					
ANR	354329	CompoundStatement		90:54:1893:1893	353816	1					
ANR	354330	ExpressionStatement	"( void ) fprintf ( stderr , ""Read failed (%s)\\n"" , strerror ( errno ) )"	478:3:11258:11325	353816	0	True				
ANR	354331	CastExpression	"( void ) fprintf ( stderr , ""Read failed (%s)\\n"" , strerror ( errno ) )"		353816	0					
ANR	354332	CastTarget	void		353816	0					
ANR	354333	CallExpression	"fprintf ( stderr , ""Read failed (%s)\\n"" , strerror ( errno ) )"		353816	1					
ANR	354334	Callee	fprintf		353816	0					
ANR	354335	Identifier	fprintf		353816	0					
ANR	354336	ArgumentList	stderr		353816	1					
ANR	354337	Argument	stderr		353816	0					
ANR	354338	Identifier	stderr		353816	0					
ANR	354339	Argument	"""Read failed (%s)\\n"""		353816	1					
ANR	354340	PrimaryExpression	"""Read failed (%s)\\n"""		353816	0					
ANR	354341	Argument	strerror ( errno )		353816	2					
ANR	354342	CallExpression	strerror ( errno )		353816	0					
ANR	354343	Callee	strerror		353816	0					
ANR	354344	Identifier	strerror		353816	0					
ANR	354345	ArgumentList	errno		353816	1					
ANR	354346	Argument	errno		353816	0					
ANR	354347	Identifier	errno		353816	0					
ANR	354348	ExpressionStatement	efree ( * newch )	481:3:11337:11350	353816	1	True				
ANR	354349	CallExpression	efree ( * newch )		353816	0					
ANR	354350	Callee	efree		353816	0					
ANR	354351	Identifier	efree		353816	0					
ANR	354352	ArgumentList	* newch		353816	1					
ANR	354353	Argument	* newch		353816	0					
ANR	354354	UnaryOperationExpression	* newch		353816	0					
ANR	354355	UnaryOperator	*		353816	0					
ANR	354356	Identifier	newch		353816	1					
ANR	354357	ExpressionStatement	n = 0	482:3:11355:11360	353816	2	True				
ANR	354358	AssignmentExpression	n = 0		353816	0		=			
ANR	354359	Identifier	n		353816	0					
ANR	354360	PrimaryExpression	0		353816	1					
ANR	354361	ExpressionStatement	* newch = NULL	483:3:11365:11378	353816	3	True				
ANR	354362	AssignmentExpression	* newch = NULL		353816	0		=			
ANR	354363	UnaryOperationExpression	* newch		353816	0					
ANR	354364	UnaryOperator	*		353816	0					
ANR	354365	Identifier	newch		353816	1					
ANR	354366	Identifier	NULL		353816	1					
ANR	354367	GotoStatement	goto err ;	484:3:11383:11391	353816	4	True				
ANR	354368	Identifier	err		353816	0					
ANR	354369	ElseStatement	else		353816	0					
ANR	354370	CompoundStatement		99:9:2055:2055	353816	0					
ANR	354371	ExpressionStatement	n = r	486:3:11407:11412	353816	0	True				
ANR	354372	AssignmentExpression	n = r		353816	0		=			
ANR	354373	Identifier	n		353816	0					
ANR	354374	Identifier	r		353816	1					
ANR	354375	ExpressionStatement	( * newch ) [ n ] = '\\0'	489:3:11478:11496	353816	52	True				
ANR	354376	AssignmentExpression	( * newch ) [ n ] = '\\0'		353816	0		=			
ANR	354377	ArrayIndexing	( * newch ) [ n ]		353816	0					
ANR	354378	UnaryOperationExpression	* newch		353816	0					
ANR	354379	UnaryOperator	*		353816	0					
ANR	354380	Identifier	newch		353816	1					
ANR	354381	Identifier	n		353816	1					
ANR	354382	PrimaryExpression	'\\0'		353816	1					
ANR	354383	Label	err :	490:0:11498:11501	353816	53	True				
ANR	354384	Identifier	err		353816	0					
ANR	354385	IfStatement	if ( fdin [ 1 ] != - 1 )		353816	54					
ANR	354386	Condition	fdin [ 1 ] != - 1	491:6:11509:11521	353816	0	True				
ANR	354387	EqualityExpression	fdin [ 1 ] != - 1		353816	0		!=			
ANR	354388	ArrayIndexing	fdin [ 1 ]		353816	0					
ANR	354389	Identifier	fdin		353816	0					
ANR	354390	PrimaryExpression	1		353816	1					
ANR	354391	UnaryOperationExpression	- 1		353816	1					
ANR	354392	UnaryOperator	-		353816	0					
ANR	354393	PrimaryExpression	1		353816	1					
ANR	354394	ExpressionStatement	( void ) close ( fdin [ 1 ] )	492:3:11527:11548	353816	1	True				
ANR	354395	CastExpression	( void ) close ( fdin [ 1 ] )		353816	0					
ANR	354396	CastTarget	void		353816	0					
ANR	354397	CallExpression	close ( fdin [ 1 ] )		353816	1					
ANR	354398	Callee	close		353816	0					
ANR	354399	Identifier	close		353816	0					
ANR	354400	ArgumentList	fdin [ 1 ]		353816	1					
ANR	354401	Argument	fdin [ 1 ]		353816	0					
ANR	354402	ArrayIndexing	fdin [ 1 ]		353816	0					
ANR	354403	Identifier	fdin		353816	0					
ANR	354404	PrimaryExpression	1		353816	1					
ANR	354405	ExpressionStatement	( void ) close ( fdout [ 0 ] )	493:2:11552:11574	353816	55	True				
ANR	354406	CastExpression	( void ) close ( fdout [ 0 ] )		353816	0					
ANR	354407	CastTarget	void		353816	0					
ANR	354408	CallExpression	close ( fdout [ 0 ] )		353816	1					
ANR	354409	Callee	close		353816	0					
ANR	354410	Identifier	close		353816	0					
ANR	354411	ArgumentList	fdout [ 0 ]		353816	1					
ANR	354412	Argument	fdout [ 0 ]		353816	0					
ANR	354413	ArrayIndexing	fdout [ 0 ]		353816	0					
ANR	354414	Identifier	fdout		353816	0					
ANR	354415	PrimaryExpression	0		353816	1					
ANR	354416	WhileStatement	"while ( waitpid ( pid , NULL , WNOHANG ) != - 1 )"		353816	56					
ANR	354417	Condition	"waitpid ( pid , NULL , WNOHANG ) != - 1"	495:9:11600:11632	353816	0	True				
ANR	354418	EqualityExpression	"waitpid ( pid , NULL , WNOHANG ) != - 1"		353816	0		!=			
ANR	354419	CallExpression	"waitpid ( pid , NULL , WNOHANG )"		353816	0					
ANR	354420	Callee	waitpid		353816	0					
ANR	354421	Identifier	waitpid		353816	0					
ANR	354422	ArgumentList	pid		353816	1					
ANR	354423	Argument	pid		353816	0					
ANR	354424	Identifier	pid		353816	0					
ANR	354425	Argument	NULL		353816	1					
ANR	354426	Identifier	NULL		353816	0					
ANR	354427	Argument	WNOHANG		353816	2					
ANR	354428	Identifier	WNOHANG		353816	0					
ANR	354429	UnaryOperationExpression	- 1		353816	1					
ANR	354430	UnaryOperator	-		353816	0					
ANR	354431	PrimaryExpression	1		353816	1					
ANR	354432	ContinueStatement	continue ;	496:3:11638:11646	353816	1	True				
ANR	354433	ExpressionStatement	( void ) close ( fdin [ 0 ] )	500:2:11683:11704	353816	57	True				
ANR	354434	CastExpression	( void ) close ( fdin [ 0 ] )		353816	0					
ANR	354435	CastTarget	void		353816	0					
ANR	354436	CallExpression	close ( fdin [ 0 ] )		353816	1					
ANR	354437	Callee	close		353816	0					
ANR	354438	Identifier	close		353816	0					
ANR	354439	ArgumentList	fdin [ 0 ]		353816	1					
ANR	354440	Argument	fdin [ 0 ]		353816	0					
ANR	354441	ArrayIndexing	fdin [ 0 ]		353816	0					
ANR	354442	Identifier	fdin		353816	0					
ANR	354443	PrimaryExpression	0		353816	1					
ANR	354444	ReturnStatement	return n ;	502:2:11714:11722	353816	58	True				
ANR	354445	Identifier	n		353816	0					
ANR	354446	ReturnType	size_t		353816	1					
ANR	354447	Identifier	uncompressbuf		353816	2					
ANR	354448	ParameterList	"struct magic_set * ms , int fd , size_t method , const unsigned char * old , unsigned char * * newch , size_t n"		353816	3					
ANR	354449	Parameter	struct magic_set * ms	385:14:9238:9257	353816	0	True				
ANR	354450	ParameterType	struct magic_set *		353816	0					
ANR	354451	Identifier	ms		353816	1					
ANR	354452	Parameter	int fd	385:36:9260:9265	353816	1	True				
ANR	354453	ParameterType	int		353816	0					
ANR	354454	Identifier	fd		353816	1					
ANR	354455	Parameter	size_t method	385:44:9268:9280	353816	2	True				
ANR	354456	ParameterType	size_t		353816	0					
ANR	354457	Identifier	method		353816	1					
ANR	354458	Parameter	const unsigned char * old	386:4:9287:9310	353816	3	True				
ANR	354459	ParameterType	const unsigned char *		353816	0					
ANR	354460	Identifier	old		353816	1					
ANR	354461	Parameter	unsigned char * * newch	386:30:9313:9333	353816	4	True				
ANR	354462	ParameterType	unsigned char * *		353816	0					
ANR	354463	Identifier	newch		353816	1					
ANR	354464	Parameter	size_t n	386:53:9336:9343	353816	5	True				
ANR	354465	ParameterType	size_t		353816	0					
ANR	354466	Identifier	n		353816	1					
ANR	354467	CFGEntryNode	ENTRY		353816		True				
ANR	354468	CFGExitNode	EXIT		353816		True				
ANR	354469	Symbol	uncompressgzipped		353816						
ANR	354470	Symbol	sread		353816						
ANR	354471	Symbol	stdout		353816						
ANR	354472	Symbol	compr [ method ] . argv		353816						
ANR	354473	Symbol	* fdin		353816						
ANR	354474	Symbol	pid		353816						
ANR	354475	Symbol	* compr		353816						
ANR	354476	Symbol	fdin		353816						
ANR	354477	Symbol	* newch		353816						
ANR	354478	Symbol	emalloc		353816						
ANR	354479	Symbol	* * method		353816						
ANR	354480	Symbol	WNOHANG		353816						
ANR	354481	Symbol	pipe		353816						
ANR	354482	Symbol	fdout		353816						
ANR	354483	Symbol	SEEK_SET		353816						
ANR	354484	Symbol	errno		353816						
ANR	354485	Symbol	NULL		353816						
ANR	354486	Symbol	method		353816						
ANR	354487	Symbol	compr		353816						
ANR	354488	Symbol	ms		353816						
ANR	354489	Symbol	old		353816						
ANR	354490	Symbol	compr [ method ] . silent		353816						
ANR	354491	Symbol	* * newch		353816						
ANR	354492	Symbol	* method		353816						
ANR	354493	Symbol	stderr		353816						
ANR	354494	Symbol	n		353816						
ANR	354495	Symbol	* compr [ method ] . argv		353816						
ANR	354496	Symbol	* * compr		353816						
ANR	354497	Symbol	strerror		353816						
ANR	354498	Symbol	r		353816						
ANR	354499	Symbol	fork		353816						
ANR	354500	Symbol	HOWMANY		353816						
ANR	354501	Symbol	swrite		353816						
ANR	354502	Symbol	* fdout		353816						
ANR	354503	Symbol	newch		353816						
ANR	354504	Symbol	NODATA		353816						
ANR	354505	Symbol	* n		353816						
ANR	354506	Symbol	fd		353816						
ANR	354507	Symbol	waitpid		353816						
