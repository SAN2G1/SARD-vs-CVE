command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	880343	File	data/converged/CVE-2017-11142_php-src/ext_opcache_zend_accelerator_util_funcs.c								
ANR	880344	DeclStmt									
ANR	880345	Decl							zend_uint	zend_uint	zend_accel_refcount
ANR	880346	DeclStmt									
ANR	880347	Decl							"int ( * ) ( void * , void * )"	"int ( * ) ( void * , void * )"	id_function_t
ANR	880348	DeclStmt									
ANR	880349	Decl							void ( * ) ( void * pElement )	void ( * ) ( void * pElement )	unique_copy_ctor_func_t
ANR	880350	DeclStmt									
ANR	880351	Decl							const Bucket	const Bucket *	uninitialized_bucket
ANR	880352	DeclStmt									
ANR	880353	Decl							int	int ( zend_op_array * op_array )	zend_prepare_function_for_execution
ANR	880354	DeclStmt									
ANR	880355	Decl							void	"void ( HashTable * ht , HashTable * source , int bind )"	zend_hash_clone_zval
ANR	880356	Function	zend_accel_destroy_zend_function	51:0:2680:3007							
ANR	880357	FunctionDef	zend_accel_destroy_zend_function (zend_function * function)		880356	0					
ANR	880358	CompoundStatement		52:0:2750:3007	880356	0					
ANR	880359	ExpressionStatement	TSRMLS_FETCH ( )	53:1:2753:2767	880356	0	True				
ANR	880360	CallExpression	TSRMLS_FETCH ( )		880356	0					
ANR	880361	Callee	TSRMLS_FETCH		880356	0					
ANR	880362	Identifier	TSRMLS_FETCH		880356	0					
ANR	880363	ArgumentList			880356	1					
ANR	880364	IfStatement	if ( function -> type == ZEND_USER_FUNCTION )		880356	1					
ANR	880365	Condition	function -> type == ZEND_USER_FUNCTION	55:5:2775:2810	880356	0	True				
ANR	880366	EqualityExpression	function -> type == ZEND_USER_FUNCTION		880356	0		==			
ANR	880367	PtrMemberAccess	function -> type		880356	0					
ANR	880368	Identifier	function		880356	0					
ANR	880369	Identifier	type		880356	1					
ANR	880370	Identifier	ZEND_USER_FUNCTION		880356	1					
ANR	880371	CompoundStatement		4:43:62:62	880356	1					
ANR	880372	IfStatement	if ( function -> op_array . static_variables )		880356	0					
ANR	880373	Condition	function -> op_array . static_variables	56:6:2821:2855	880356	0	True				
ANR	880374	MemberAccess	function -> op_array . static_variables		880356	0					
ANR	880375	PtrMemberAccess	function -> op_array		880356	0					
ANR	880376	Identifier	function		880356	0					
ANR	880377	Identifier	op_array		880356	1					
ANR	880378	Identifier	static_variables		880356	1					
ANR	880379	CompoundStatement		5:43:107:107	880356	1					
ANR	880380	ExpressionStatement	efree ( function -> op_array . static_variables )	58:3:2864:2906	880356	0	True				
ANR	880381	CallExpression	efree ( function -> op_array . static_variables )		880356	0					
ANR	880382	Callee	efree		880356	0					
ANR	880383	Identifier	efree		880356	0					
ANR	880384	ArgumentList	function -> op_array . static_variables		880356	1					
ANR	880385	Argument	function -> op_array . static_variables		880356	0					
ANR	880386	MemberAccess	function -> op_array . static_variables		880356	0					
ANR	880387	PtrMemberAccess	function -> op_array		880356	0					
ANR	880388	Identifier	function		880356	0					
ANR	880389	Identifier	op_array		880356	1					
ANR	880390	Identifier	static_variables		880356	1					
ANR	880391	ExpressionStatement	function -> op_array . static_variables = NULL	59:3:2911:2953	880356	1	True				
ANR	880392	AssignmentExpression	function -> op_array . static_variables = NULL		880356	0		=			
ANR	880393	MemberAccess	function -> op_array . static_variables		880356	0					
ANR	880394	PtrMemberAccess	function -> op_array		880356	0					
ANR	880395	Identifier	function		880356	0					
ANR	880396	Identifier	op_array		880356	1					
ANR	880397	Identifier	static_variables		880356	1					
ANR	880398	Identifier	NULL		880356	1					
ANR	880399	Statement	destroy_zend_function	63:1:2964:2984	880356	2	True				
ANR	880400	Statement	(	63:22:2985:2985	880356	3	True				
ANR	880401	Statement	function	63:23:2986:2993	880356	4	True				
ANR	880402	Statement	TSRMLS_CC	63:32:2995:3003	880356	5	True				
ANR	880403	Statement	)	63:41:3004:3004	880356	6	True				
ANR	880404	ExpressionStatement		63:42:3005:3005	880356	7	True				
ANR	880405	ReturnType	static void		880356	1					
ANR	880406	Identifier	zend_accel_destroy_zend_function		880356	2					
ANR	880407	ParameterList	zend_function * function		880356	3					
ANR	880408	Parameter	zend_function * function	51:45:2725:2747	880356	0	True				
ANR	880409	ParameterType	zend_function *		880356	0					
ANR	880410	Identifier	function		880356	1					
ANR	880411	CFGEntryNode	ENTRY		880356		True				
ANR	880412	CFGExitNode	EXIT		880356		True				
ANR	880413	Symbol	NULL		880356						
ANR	880414	Symbol	ZEND_USER_FUNCTION		880356						
ANR	880415	Symbol	function		880356						
ANR	880416	Symbol	* function		880356						
ANR	880417	Symbol	function -> op_array . static_variables		880356						
ANR	880418	Symbol	function -> type		880356						
ANR	880419	Symbol	function -> op_array		880356						
ANR	880420	Function	zend_accel_destroy_zend_class	66:0:3010:3217							
ANR	880421	FunctionDef	zend_accel_destroy_zend_class (zend_class_entry * * pce)		880420	0					
ANR	880422	CompoundStatement		67:0:3076:3217	880420	0					
ANR	880423	IdentifierDeclStatement	zend_class_entry * ce = * pce ;	68:1:3079:3106	880420	0	True				
ANR	880424	IdentifierDecl	* ce = * pce		880420	0					
ANR	880425	IdentifierDeclType	zend_class_entry *		880420	0					
ANR	880426	Identifier	ce		880420	1					
ANR	880427	AssignmentExpression	* ce = * pce		880420	2		=			
ANR	880428	Identifier	ce		880420	0					
ANR	880429	UnaryOperationExpression	* pce		880420	1					
ANR	880430	UnaryOperator	*		880420	0					
ANR	880431	Identifier	pce		880420	1					
ANR	880432	ExpressionStatement	ce -> function_table . pDestructor = ( dtor_func_t ) zend_accel_destroy_zend_function	70:1:3110:3189	880420	1	True				
ANR	880433	AssignmentExpression	ce -> function_table . pDestructor = ( dtor_func_t ) zend_accel_destroy_zend_function		880420	0		=			
ANR	880434	MemberAccess	ce -> function_table . pDestructor		880420	0					
ANR	880435	PtrMemberAccess	ce -> function_table		880420	0					
ANR	880436	Identifier	ce		880420	0					
ANR	880437	Identifier	function_table		880420	1					
ANR	880438	Identifier	pDestructor		880420	1					
ANR	880439	CastExpression	( dtor_func_t ) zend_accel_destroy_zend_function		880420	1					
ANR	880440	CastTarget	dtor_func_t		880420	0					
ANR	880441	Identifier	zend_accel_destroy_zend_function		880420	1					
ANR	880442	ExpressionStatement	destroy_zend_class ( pce )	71:1:3192:3215	880420	2	True				
ANR	880443	CallExpression	destroy_zend_class ( pce )		880420	0					
ANR	880444	Callee	destroy_zend_class		880420	0					
ANR	880445	Identifier	destroy_zend_class		880420	0					
ANR	880446	ArgumentList	pce		880420	1					
ANR	880447	Argument	pce		880420	0					
ANR	880448	Identifier	pce		880420	0					
ANR	880449	ReturnType	static void		880420	1					
ANR	880450	Identifier	zend_accel_destroy_zend_class		880420	2					
ANR	880451	ParameterList	zend_class_entry * * pce		880420	3					
ANR	880452	Parameter	zend_class_entry * * pce	66:42:3052:3073	880420	0	True				
ANR	880453	ParameterType	zend_class_entry * *		880420	0					
ANR	880454	Identifier	pce		880420	1					
ANR	880455	CFGEntryNode	ENTRY		880420		True				
ANR	880456	CFGExitNode	EXIT		880420		True				
ANR	880457	Symbol	ce		880420						
ANR	880458	Symbol	zend_accel_destroy_zend_function		880420						
ANR	880459	Symbol	pce		880420						
ANR	880460	Symbol	* ce		880420						
ANR	880461	Symbol	ce -> function_table		880420						
ANR	880462	Symbol	ce -> function_table . pDestructor		880420						
ANR	880463	Symbol	* pce		880420						
ANR	880464	Function	create_persistent_script	74:0:3220:3835							
ANR	880465	FunctionDef	create_persistent_script ()		880464	0					
ANR	880466	CompoundStatement		75:0:3275:3835	880464	0					
ANR	880467	IdentifierDeclStatement	zend_persistent_script * persistent_script = ( zend_persistent_script * ) emalloc ( sizeof ( zend_persistent_script ) ) ;	76:1:3278:3388	880464	0	True				
ANR	880468	IdentifierDecl	* persistent_script = ( zend_persistent_script * ) emalloc ( sizeof ( zend_persistent_script ) )		880464	0					
ANR	880469	IdentifierDeclType	zend_persistent_script *		880464	0					
ANR	880470	Identifier	persistent_script		880464	1					
ANR	880471	AssignmentExpression	* persistent_script = ( zend_persistent_script * ) emalloc ( sizeof ( zend_persistent_script ) )		880464	2		=			
ANR	880472	Identifier	persistent_script		880464	0					
ANR	880473	CastExpression	( zend_persistent_script * ) emalloc ( sizeof ( zend_persistent_script ) )		880464	1					
ANR	880474	CastTarget	zend_persistent_script *		880464	0					
ANR	880475	CallExpression	emalloc ( sizeof ( zend_persistent_script ) )		880464	1					
ANR	880476	Callee	emalloc		880464	0					
ANR	880477	Identifier	emalloc		880464	0					
ANR	880478	ArgumentList	sizeof ( zend_persistent_script )		880464	1					
ANR	880479	Argument	sizeof ( zend_persistent_script )		880464	0					
ANR	880480	SizeofExpression	sizeof ( zend_persistent_script )		880464	0					
ANR	880481	Sizeof	sizeof		880464	0					
ANR	880482	SizeofOperand	zend_persistent_script		880464	1					
ANR	880483	ExpressionStatement	"memset ( persistent_script , 0 , sizeof ( zend_persistent_script ) )"	77:1:3391:3451	880464	1	True				
ANR	880484	CallExpression	"memset ( persistent_script , 0 , sizeof ( zend_persistent_script ) )"		880464	0					
ANR	880485	Callee	memset		880464	0					
ANR	880486	Identifier	memset		880464	0					
ANR	880487	ArgumentList	persistent_script		880464	1					
ANR	880488	Argument	persistent_script		880464	0					
ANR	880489	Identifier	persistent_script		880464	0					
ANR	880490	Argument	0		880464	1					
ANR	880491	PrimaryExpression	0		880464	0					
ANR	880492	Argument	sizeof ( zend_persistent_script )		880464	2					
ANR	880493	SizeofExpression	sizeof ( zend_persistent_script )		880464	0					
ANR	880494	Sizeof	sizeof		880464	0					
ANR	880495	SizeofOperand	zend_persistent_script		880464	1					
ANR	880496	ExpressionStatement	"zend_hash_init ( & persistent_script -> function_table , 100 , NULL , ( dtor_func_t ) zend_accel_destroy_zend_function , 0 )"	79:1:3455:3567	880464	2	True				
ANR	880497	CallExpression	"zend_hash_init ( & persistent_script -> function_table , 100 , NULL , ( dtor_func_t ) zend_accel_destroy_zend_function , 0 )"		880464	0					
ANR	880498	Callee	zend_hash_init		880464	0					
ANR	880499	Identifier	zend_hash_init		880464	0					
ANR	880500	ArgumentList	& persistent_script -> function_table		880464	1					
ANR	880501	Argument	& persistent_script -> function_table		880464	0					
ANR	880502	UnaryOperationExpression	& persistent_script -> function_table		880464	0					
ANR	880503	UnaryOperator	&		880464	0					
ANR	880504	PtrMemberAccess	persistent_script -> function_table		880464	1					
ANR	880505	Identifier	persistent_script		880464	0					
ANR	880506	Identifier	function_table		880464	1					
ANR	880507	Argument	100		880464	1					
ANR	880508	PrimaryExpression	100		880464	0					
ANR	880509	Argument	NULL		880464	2					
ANR	880510	Identifier	NULL		880464	0					
ANR	880511	Argument	( dtor_func_t ) zend_accel_destroy_zend_function		880464	3					
ANR	880512	CastExpression	( dtor_func_t ) zend_accel_destroy_zend_function		880464	0					
ANR	880513	CastTarget	dtor_func_t		880464	0					
ANR	880514	Identifier	zend_accel_destroy_zend_function		880464	1					
ANR	880515	Argument	0		880464	4					
ANR	880516	PrimaryExpression	0		880464	0					
ANR	880517	ExpressionStatement	"zend_hash_init ( & persistent_script -> class_table , 10 , NULL , ZEND_CLASS_DTOR , 0 )"	84:1:3728:3805	880464	3	True				
ANR	880518	CallExpression	"zend_hash_init ( & persistent_script -> class_table , 10 , NULL , ZEND_CLASS_DTOR , 0 )"		880464	0					
ANR	880519	Callee	zend_hash_init		880464	0					
ANR	880520	Identifier	zend_hash_init		880464	0					
ANR	880521	ArgumentList	& persistent_script -> class_table		880464	1					
ANR	880522	Argument	& persistent_script -> class_table		880464	0					
ANR	880523	UnaryOperationExpression	& persistent_script -> class_table		880464	0					
ANR	880524	UnaryOperator	&		880464	0					
ANR	880525	PtrMemberAccess	persistent_script -> class_table		880464	1					
ANR	880526	Identifier	persistent_script		880464	0					
ANR	880527	Identifier	class_table		880464	1					
ANR	880528	Argument	10		880464	1					
ANR	880529	PrimaryExpression	10		880464	0					
ANR	880530	Argument	NULL		880464	2					
ANR	880531	Identifier	NULL		880464	0					
ANR	880532	Argument	ZEND_CLASS_DTOR		880464	3					
ANR	880533	Identifier	ZEND_CLASS_DTOR		880464	0					
ANR	880534	Argument	0		880464	4					
ANR	880535	PrimaryExpression	0		880464	0					
ANR	880536	ReturnStatement	return persistent_script ;	86:1:3809:3833	880464	4	True				
ANR	880537	Identifier	persistent_script		880464	0					
ANR	880538	ReturnType	zend_persistent_script *		880464	1					
ANR	880539	Identifier	create_persistent_script		880464	2					
ANR	880540	ParameterList			880464	3					
ANR	880541	CFGEntryNode	ENTRY		880464		True				
ANR	880542	CFGExitNode	EXIT		880464		True				
ANR	880543	Symbol	& persistent_script -> function_table		880464						
ANR	880544	Symbol	emalloc		880464						
ANR	880545	Symbol	zend_accel_destroy_zend_function		880464						
ANR	880546	Symbol	& persistent_script -> class_table		880464						
ANR	880547	Symbol	NULL		880464						
ANR	880548	Symbol	ZEND_CLASS_DTOR		880464						
ANR	880549	Symbol	persistent_script		880464						
ANR	880550	Function	compact_hash_table	89:0:3838:4523							
ANR	880551	FunctionDef	compact_hash_table (HashTable * ht)		880550	0					
ANR	880552	CompoundStatement		90:0:3883:4523	880550	0					
ANR	880553	IdentifierDeclStatement	uint i = 3 ;	91:1:3886:3896	880550	0	True				
ANR	880554	IdentifierDecl	i = 3		880550	0					
ANR	880555	IdentifierDeclType	uint		880550	0					
ANR	880556	Identifier	i		880550	1					
ANR	880557	AssignmentExpression	i = 3		880550	2		=			
ANR	880558	Identifier	i		880550	0					
ANR	880559	PrimaryExpression	3		880550	1					
ANR	880560	IdentifierDeclStatement	uint nSize ;	92:1:3899:3909	880550	1	True				
ANR	880561	IdentifierDecl	nSize		880550	0					
ANR	880562	IdentifierDeclType	uint		880550	0					
ANR	880563	Identifier	nSize		880550	1					
ANR	880564	IdentifierDeclStatement	Bucket * * t ;	93:1:3912:3922	880550	2	True				
ANR	880565	IdentifierDecl	* * t		880550	0					
ANR	880566	IdentifierDeclType	Bucket * *		880550	0					
ANR	880567	Identifier	t		880550	1					
ANR	880568	IfStatement	if ( ! ht -> nNumOfElements )		880550	3					
ANR	880569	Condition	! ht -> nNumOfElements	95:5:3930:3948	880550	0	True				
ANR	880570	UnaryOperationExpression	! ht -> nNumOfElements		880550	0					
ANR	880571	UnaryOperator	!		880550	0					
ANR	880572	PtrMemberAccess	ht -> nNumOfElements		880550	1					
ANR	880573	Identifier	ht		880550	0					
ANR	880574	Identifier	nNumOfElements		880550	1					
ANR	880575	CompoundStatement		6:26:67:67	880550	1					
ANR	880576	ReturnStatement	return 1 ;	97:2:4009:4017	880550	0	True				
ANR	880577	PrimaryExpression	1		880550	0					
ANR	880578	IfStatement	if ( ht -> nNumOfElements >= 0x80000000 )		880550	4					
ANR	880579	Condition	ht -> nNumOfElements >= 0x80000000	100:5:4028:4059	880550	0	True				
ANR	880580	RelationalExpression	ht -> nNumOfElements >= 0x80000000		880550	0		>=			
ANR	880581	PtrMemberAccess	ht -> nNumOfElements		880550	0					
ANR	880582	Identifier	ht		880550	0					
ANR	880583	Identifier	nNumOfElements		880550	1					
ANR	880584	PrimaryExpression	0x80000000		880550	1					
ANR	880585	CompoundStatement		11:39:178:178	880550	1					
ANR	880586	ExpressionStatement	nSize = 0x80000000	102:2:4091:4109	880550	0	True				
ANR	880587	AssignmentExpression	nSize = 0x80000000		880550	0		=			
ANR	880588	Identifier	nSize		880550	0					
ANR	880589	PrimaryExpression	0x80000000		880550	1					
ANR	880590	ElseStatement	else		880550	0					
ANR	880591	CompoundStatement		14:8:235:235	880550	0					
ANR	880592	WhileStatement	while ( ( 1U << i ) < ht -> nNumOfElements )		880550	0					
ANR	880593	Condition	( 1U << i ) < ht -> nNumOfElements	104:9:4130:4159	880550	0	True				
ANR	880594	RelationalExpression	( 1U << i ) < ht -> nNumOfElements		880550	0		<			
ANR	880595	ShiftExpression	1U << i		880550	0		<<			
ANR	880596	PrimaryExpression	1U		880550	0					
ANR	880597	Identifier	i		880550	1					
ANR	880598	PtrMemberAccess	ht -> nNumOfElements		880550	1					
ANR	880599	Identifier	ht		880550	0					
ANR	880600	Identifier	nNumOfElements		880550	1					
ANR	880601	CompoundStatement		15:41:278:278	880550	1					
ANR	880602	ExpressionStatement	i ++	105:3:4167:4170	880550	0	True				
ANR	880603	PostIncDecOperationExpression	i ++		880550	0					
ANR	880604	Identifier	i		880550	0					
ANR	880605	IncDec	++		880550	1					
ANR	880606	ExpressionStatement	nSize = 1 << i	107:2:4178:4192	880550	1	True				
ANR	880607	AssignmentExpression	nSize = 1 << i		880550	0		=			
ANR	880608	Identifier	nSize		880550	0					
ANR	880609	ShiftExpression	1 << i		880550	1		<<			
ANR	880610	PrimaryExpression	1		880550	0					
ANR	880611	Identifier	i		880550	1					
ANR	880612	IfStatement	if ( nSize >= ht -> nTableSize )		880550	5					
ANR	880613	Condition	nSize >= ht -> nTableSize	110:5:4203:4225	880550	0	True				
ANR	880614	RelationalExpression	nSize >= ht -> nTableSize		880550	0		>=			
ANR	880615	Identifier	nSize		880550	0					
ANR	880616	PtrMemberAccess	ht -> nTableSize		880550	1					
ANR	880617	Identifier	ht		880550	0					
ANR	880618	Identifier	nTableSize		880550	1					
ANR	880619	CompoundStatement		21:30:344:344	880550	1					
ANR	880620	ReturnStatement	return 1 ;	112:2:4254:4262	880550	0	True				
ANR	880621	PrimaryExpression	1		880550	0					
ANR	880622	ExpressionStatement	"t = ( Bucket * * ) pemalloc ( nSize * sizeof ( Bucket * ) , ht -> persistent )"	115:1:4269:4334	880550	6	True				
ANR	880623	AssignmentExpression	"t = ( Bucket * * ) pemalloc ( nSize * sizeof ( Bucket * ) , ht -> persistent )"		880550	0		=			
ANR	880624	Identifier	t		880550	0					
ANR	880625	CastExpression	"( Bucket * * ) pemalloc ( nSize * sizeof ( Bucket * ) , ht -> persistent )"		880550	1					
ANR	880626	CastTarget	Bucket * *		880550	0					
ANR	880627	CallExpression	"pemalloc ( nSize * sizeof ( Bucket * ) , ht -> persistent )"		880550	1					
ANR	880628	Callee	pemalloc		880550	0					
ANR	880629	Identifier	pemalloc		880550	0					
ANR	880630	ArgumentList	nSize * sizeof ( Bucket * )		880550	1					
ANR	880631	Argument	nSize * sizeof ( Bucket * )		880550	0					
ANR	880632	MultiplicativeExpression	nSize * sizeof ( Bucket * )		880550	0		*			
ANR	880633	Identifier	nSize		880550	0					
ANR	880634	SizeofExpression	sizeof ( Bucket * )		880550	1					
ANR	880635	Sizeof	sizeof		880550	0					
ANR	880636	SizeofOperand	Bucket *		880550	1					
ANR	880637	Argument	ht -> persistent		880550	1					
ANR	880638	PtrMemberAccess	ht -> persistent		880550	0					
ANR	880639	Identifier	ht		880550	0					
ANR	880640	Identifier	persistent		880550	1					
ANR	880641	IfStatement	if ( ! t )		880550	7					
ANR	880642	Condition	! t	116:5:4341:4342	880550	0	True				
ANR	880643	UnaryOperationExpression	! t		880550	0					
ANR	880644	UnaryOperator	!		880550	0					
ANR	880645	Identifier	t		880550	1					
ANR	880646	CompoundStatement		27:9:461:461	880550	1					
ANR	880647	ReturnStatement	return 0 ;	117:2:4349:4357	880550	0	True				
ANR	880648	PrimaryExpression	0		880550	0					
ANR	880649	ExpressionStatement	"pefree ( ht -> arBuckets , ht -> persistent )"	120:1:4364:4401	880550	8	True				
ANR	880650	CallExpression	"pefree ( ht -> arBuckets , ht -> persistent )"		880550	0					
ANR	880651	Callee	pefree		880550	0					
ANR	880652	Identifier	pefree		880550	0					
ANR	880653	ArgumentList	ht -> arBuckets		880550	1					
ANR	880654	Argument	ht -> arBuckets		880550	0					
ANR	880655	PtrMemberAccess	ht -> arBuckets		880550	0					
ANR	880656	Identifier	ht		880550	0					
ANR	880657	Identifier	arBuckets		880550	1					
ANR	880658	Argument	ht -> persistent		880550	1					
ANR	880659	PtrMemberAccess	ht -> persistent		880550	0					
ANR	880660	Identifier	ht		880550	0					
ANR	880661	Identifier	persistent		880550	1					
ANR	880662	ExpressionStatement	ht -> arBuckets = t	122:1:4405:4422	880550	9	True				
ANR	880663	AssignmentExpression	ht -> arBuckets = t		880550	0		=			
ANR	880664	PtrMemberAccess	ht -> arBuckets		880550	0					
ANR	880665	Identifier	ht		880550	0					
ANR	880666	Identifier	arBuckets		880550	1					
ANR	880667	Identifier	t		880550	1					
ANR	880668	ExpressionStatement	ht -> nTableSize = nSize	123:1:4425:4447	880550	10	True				
ANR	880669	AssignmentExpression	ht -> nTableSize = nSize		880550	0		=			
ANR	880670	PtrMemberAccess	ht -> nTableSize		880550	0					
ANR	880671	Identifier	ht		880550	0					
ANR	880672	Identifier	nTableSize		880550	1					
ANR	880673	Identifier	nSize		880550	1					
ANR	880674	ExpressionStatement	ht -> nTableMask = ht -> nTableSize - 1	124:1:4450:4485	880550	11	True				
ANR	880675	AssignmentExpression	ht -> nTableMask = ht -> nTableSize - 1		880550	0		=			
ANR	880676	PtrMemberAccess	ht -> nTableMask		880550	0					
ANR	880677	Identifier	ht		880550	0					
ANR	880678	Identifier	nTableMask		880550	1					
ANR	880679	AdditiveExpression	ht -> nTableSize - 1		880550	1		-			
ANR	880680	PtrMemberAccess	ht -> nTableSize		880550	0					
ANR	880681	Identifier	ht		880550	0					
ANR	880682	Identifier	nTableSize		880550	1					
ANR	880683	PrimaryExpression	1		880550	1					
ANR	880684	ExpressionStatement	zend_hash_rehash ( ht )	125:1:4488:4508	880550	12	True				
ANR	880685	CallExpression	zend_hash_rehash ( ht )		880550	0					
ANR	880686	Callee	zend_hash_rehash		880550	0					
ANR	880687	Identifier	zend_hash_rehash		880550	0					
ANR	880688	ArgumentList	ht		880550	1					
ANR	880689	Argument	ht		880550	0					
ANR	880690	Identifier	ht		880550	0					
ANR	880691	ReturnStatement	return 1 ;	127:1:4513:4521	880550	13	True				
ANR	880692	PrimaryExpression	1		880550	0					
ANR	880693	ReturnType	static int		880550	1					
ANR	880694	Identifier	compact_hash_table		880550	2					
ANR	880695	ParameterList	HashTable * ht		880550	3					
ANR	880696	Parameter	HashTable * ht	89:30:3868:3880	880550	0	True				
ANR	880697	ParameterType	HashTable *		880550	0					
ANR	880698	Identifier	ht		880550	1					
ANR	880699	CFGEntryNode	ENTRY		880550		True				
ANR	880700	CFGExitNode	EXIT		880550		True				
ANR	880701	Symbol	* ht		880550						
ANR	880702	Symbol	t		880550						
ANR	880703	Symbol	ht -> persistent		880550						
ANR	880704	Symbol	ht -> nTableMask		880550						
ANR	880705	Symbol	ht -> arBuckets		880550						
ANR	880706	Symbol	i		880550						
ANR	880707	Symbol	ht -> nTableSize		880550						
ANR	880708	Symbol	nSize		880550						
ANR	880709	Symbol	ht		880550						
ANR	880710	Symbol	ht -> nNumOfElements		880550						
ANR	880711	Symbol	pemalloc		880550						
ANR	880712	Function	compact_persistent_script	130:0:4526:4728							
ANR	880713	FunctionDef	compact_persistent_script (zend_persistent_script * persistent_script)		880712	0					
ANR	880714	CompoundStatement		131:0:4599:4728	880712	0					
ANR	880715	ReturnStatement	return compact_hash_table ( & persistent_script -> function_table ) && compact_hash_table ( & persistent_script -> class_table ) ;	132:1:4602:4726	880712	0	True				
ANR	880716	AndExpression	compact_hash_table ( & persistent_script -> function_table ) && compact_hash_table ( & persistent_script -> class_table )		880712	0		&&			
ANR	880717	CallExpression	compact_hash_table ( & persistent_script -> function_table )		880712	0					
ANR	880718	Callee	compact_hash_table		880712	0					
ANR	880719	Identifier	compact_hash_table		880712	0					
ANR	880720	ArgumentList	& persistent_script -> function_table		880712	1					
ANR	880721	Argument	& persistent_script -> function_table		880712	0					
ANR	880722	UnaryOperationExpression	& persistent_script -> function_table		880712	0					
ANR	880723	UnaryOperator	&		880712	0					
ANR	880724	PtrMemberAccess	persistent_script -> function_table		880712	1					
ANR	880725	Identifier	persistent_script		880712	0					
ANR	880726	Identifier	function_table		880712	1					
ANR	880727	CallExpression	compact_hash_table ( & persistent_script -> class_table )		880712	1					
ANR	880728	Callee	compact_hash_table		880712	0					
ANR	880729	Identifier	compact_hash_table		880712	0					
ANR	880730	ArgumentList	& persistent_script -> class_table		880712	1					
ANR	880731	Argument	& persistent_script -> class_table		880712	0					
ANR	880732	UnaryOperationExpression	& persistent_script -> class_table		880712	0					
ANR	880733	UnaryOperator	&		880712	0					
ANR	880734	PtrMemberAccess	persistent_script -> class_table		880712	1					
ANR	880735	Identifier	persistent_script		880712	0					
ANR	880736	Identifier	class_table		880712	1					
ANR	880737	ReturnType	int		880712	1					
ANR	880738	Identifier	compact_persistent_script		880712	2					
ANR	880739	ParameterList	zend_persistent_script * persistent_script		880712	3					
ANR	880740	Parameter	zend_persistent_script * persistent_script	130:30:4556:4596	880712	0	True				
ANR	880741	ParameterType	zend_persistent_script *		880712	0					
ANR	880742	Identifier	persistent_script		880712	1					
ANR	880743	CFGEntryNode	ENTRY		880712		True				
ANR	880744	CFGExitNode	EXIT		880712		True				
ANR	880745	Symbol	& persistent_script -> function_table		880712						
ANR	880746	Symbol	& persistent_script -> class_table		880712						
ANR	880747	Symbol	compact_hash_table		880712						
ANR	880748	Symbol	persistent_script		880712						
ANR	880749	Function	free_persistent_script	136:0:4731:5379							
ANR	880750	FunctionDef	"free_persistent_script (zend_persistent_script * persistent_script , int destroy_elements)"		880749	0					
ANR	880751	CompoundStatement		137:0:4824:5379	880749	0					
ANR	880752	IfStatement	if ( destroy_elements )		880749	0					
ANR	880753	Condition	destroy_elements	138:5:4831:4846	880749	0	True				
ANR	880754	Identifier	destroy_elements		880749	0					
ANR	880755	CompoundStatement		2:23:24:24	880749	1					
ANR	880756	ExpressionStatement	persistent_script -> function_table . pDestructor = ( dtor_func_t ) zend_accel_destroy_zend_function	139:2:4853:4946	880749	0	True				
ANR	880757	AssignmentExpression	persistent_script -> function_table . pDestructor = ( dtor_func_t ) zend_accel_destroy_zend_function		880749	0		=			
ANR	880758	MemberAccess	persistent_script -> function_table . pDestructor		880749	0					
ANR	880759	PtrMemberAccess	persistent_script -> function_table		880749	0					
ANR	880760	Identifier	persistent_script		880749	0					
ANR	880761	Identifier	function_table		880749	1					
ANR	880762	Identifier	pDestructor		880749	1					
ANR	880763	CastExpression	( dtor_func_t ) zend_accel_destroy_zend_function		880749	1					
ANR	880764	CastTarget	dtor_func_t		880749	0					
ANR	880765	Identifier	zend_accel_destroy_zend_function		880749	1					
ANR	880766	ExpressionStatement	persistent_script -> class_table . pDestructor = ( dtor_func_t ) zend_accel_destroy_zend_class	140:2:4950:5037	880749	1	True				
ANR	880767	AssignmentExpression	persistent_script -> class_table . pDestructor = ( dtor_func_t ) zend_accel_destroy_zend_class		880749	0		=			
ANR	880768	MemberAccess	persistent_script -> class_table . pDestructor		880749	0					
ANR	880769	PtrMemberAccess	persistent_script -> class_table		880749	0					
ANR	880770	Identifier	persistent_script		880749	0					
ANR	880771	Identifier	class_table		880749	1					
ANR	880772	Identifier	pDestructor		880749	1					
ANR	880773	CastExpression	( dtor_func_t ) zend_accel_destroy_zend_class		880749	1					
ANR	880774	CastTarget	dtor_func_t		880749	0					
ANR	880775	Identifier	zend_accel_destroy_zend_class		880749	1					
ANR	880776	ElseStatement	else		880749	0					
ANR	880777	CompoundStatement		5:8:222:222	880749	0					
ANR	880778	ExpressionStatement	persistent_script -> function_table . pDestructor = NULL	142:2:5051:5103	880749	0	True				
ANR	880779	AssignmentExpression	persistent_script -> function_table . pDestructor = NULL		880749	0		=			
ANR	880780	MemberAccess	persistent_script -> function_table . pDestructor		880749	0					
ANR	880781	PtrMemberAccess	persistent_script -> function_table		880749	0					
ANR	880782	Identifier	persistent_script		880749	0					
ANR	880783	Identifier	function_table		880749	1					
ANR	880784	Identifier	pDestructor		880749	1					
ANR	880785	Identifier	NULL		880749	1					
ANR	880786	ExpressionStatement	persistent_script -> class_table . pDestructor = NULL	143:2:5107:5156	880749	1	True				
ANR	880787	AssignmentExpression	persistent_script -> class_table . pDestructor = NULL		880749	0		=			
ANR	880788	MemberAccess	persistent_script -> class_table . pDestructor		880749	0					
ANR	880789	PtrMemberAccess	persistent_script -> class_table		880749	0					
ANR	880790	Identifier	persistent_script		880749	0					
ANR	880791	Identifier	class_table		880749	1					
ANR	880792	Identifier	pDestructor		880749	1					
ANR	880793	Identifier	NULL		880749	1					
ANR	880794	ExpressionStatement	zend_hash_destroy ( & persistent_script -> function_table )	146:1:5163:5216	880749	1	True				
ANR	880795	CallExpression	zend_hash_destroy ( & persistent_script -> function_table )		880749	0					
ANR	880796	Callee	zend_hash_destroy		880749	0					
ANR	880797	Identifier	zend_hash_destroy		880749	0					
ANR	880798	ArgumentList	& persistent_script -> function_table		880749	1					
ANR	880799	Argument	& persistent_script -> function_table		880749	0					
ANR	880800	UnaryOperationExpression	& persistent_script -> function_table		880749	0					
ANR	880801	UnaryOperator	&		880749	0					
ANR	880802	PtrMemberAccess	persistent_script -> function_table		880749	1					
ANR	880803	Identifier	persistent_script		880749	0					
ANR	880804	Identifier	function_table		880749	1					
ANR	880805	ExpressionStatement	zend_hash_destroy ( & persistent_script -> class_table )	147:1:5219:5269	880749	2	True				
ANR	880806	CallExpression	zend_hash_destroy ( & persistent_script -> class_table )		880749	0					
ANR	880807	Callee	zend_hash_destroy		880749	0					
ANR	880808	Identifier	zend_hash_destroy		880749	0					
ANR	880809	ArgumentList	& persistent_script -> class_table		880749	1					
ANR	880810	Argument	& persistent_script -> class_table		880749	0					
ANR	880811	UnaryOperationExpression	& persistent_script -> class_table		880749	0					
ANR	880812	UnaryOperator	&		880749	0					
ANR	880813	PtrMemberAccess	persistent_script -> class_table		880749	1					
ANR	880814	Identifier	persistent_script		880749	0					
ANR	880815	Identifier	class_table		880749	1					
ANR	880816	IfStatement	if ( persistent_script -> full_path )		880749	3					
ANR	880817	Condition	persistent_script -> full_path	149:5:5277:5304	880749	0	True				
ANR	880818	PtrMemberAccess	persistent_script -> full_path		880749	0					
ANR	880819	Identifier	persistent_script		880749	0					
ANR	880820	Identifier	full_path		880749	1					
ANR	880821	CompoundStatement		13:35:482:482	880749	1					
ANR	880822	ExpressionStatement	efree ( persistent_script -> full_path )	150:2:5311:5346	880749	0	True				
ANR	880823	CallExpression	efree ( persistent_script -> full_path )		880749	0					
ANR	880824	Callee	efree		880749	0					
ANR	880825	Identifier	efree		880749	0					
ANR	880826	ArgumentList	persistent_script -> full_path		880749	1					
ANR	880827	Argument	persistent_script -> full_path		880749	0					
ANR	880828	PtrMemberAccess	persistent_script -> full_path		880749	0					
ANR	880829	Identifier	persistent_script		880749	0					
ANR	880830	Identifier	full_path		880749	1					
ANR	880831	ExpressionStatement	efree ( persistent_script )	153:1:5353:5377	880749	4	True				
ANR	880832	CallExpression	efree ( persistent_script )		880749	0					
ANR	880833	Callee	efree		880749	0					
ANR	880834	Identifier	efree		880749	0					
ANR	880835	ArgumentList	persistent_script		880749	1					
ANR	880836	Argument	persistent_script		880749	0					
ANR	880837	Identifier	persistent_script		880749	0					
ANR	880838	ReturnType	void		880749	1					
ANR	880839	Identifier	free_persistent_script		880749	2					
ANR	880840	ParameterList	"zend_persistent_script * persistent_script , int destroy_elements"		880749	3					
ANR	880841	Parameter	zend_persistent_script * persistent_script	136:28:4759:4799	880749	0	True				
ANR	880842	ParameterType	zend_persistent_script *		880749	0					
ANR	880843	Identifier	persistent_script		880749	1					
ANR	880844	Parameter	int destroy_elements	136:71:4802:4821	880749	1	True				
ANR	880845	ParameterType	int		880749	0					
ANR	880846	Identifier	destroy_elements		880749	1					
ANR	880847	CFGEntryNode	ENTRY		880749		True				
ANR	880848	CFGExitNode	EXIT		880749		True				
ANR	880849	Symbol	zend_accel_destroy_zend_function		880749						
ANR	880850	Symbol	zend_accel_destroy_zend_class		880749						
ANR	880851	Symbol	& persistent_script -> class_table		880749						
ANR	880852	Symbol	NULL		880749						
ANR	880853	Symbol	persistent_script -> function_table		880749						
ANR	880854	Symbol	persistent_script -> class_table		880749						
ANR	880855	Symbol	persistent_script -> function_table . pDestructor		880749						
ANR	880856	Symbol	persistent_script		880749						
ANR	880857	Symbol	persistent_script -> class_table . pDestructor		880749						
ANR	880858	Symbol	* persistent_script		880749						
ANR	880859	Symbol	& persistent_script -> function_table		880749						
ANR	880860	Symbol	destroy_elements		880749						
ANR	880861	Symbol	persistent_script -> full_path		880749						
ANR	880862	Function	is_not_internal_function	156:0:5382:5496							
ANR	880863	FunctionDef	is_not_internal_function (zend_function * function)		880862	0					
ANR	880864	CompoundStatement		157:0:5443:5496	880862	0					
ANR	880865	ReturnStatement	return ( function -> type != ZEND_INTERNAL_FUNCTION ) ;	158:1:5446:5494	880862	0	True				
ANR	880866	EqualityExpression	function -> type != ZEND_INTERNAL_FUNCTION		880862	0		!=			
ANR	880867	PtrMemberAccess	function -> type		880862	0					
ANR	880868	Identifier	function		880862	0					
ANR	880869	Identifier	type		880862	1					
ANR	880870	Identifier	ZEND_INTERNAL_FUNCTION		880862	1					
ANR	880871	ReturnType	static int		880862	1					
ANR	880872	Identifier	is_not_internal_function		880862	2					
ANR	880873	ParameterList	zend_function * function		880862	3					
ANR	880874	Parameter	zend_function * function	156:36:5418:5440	880862	0	True				
ANR	880875	ParameterType	zend_function *		880862	0					
ANR	880876	Identifier	function		880862	1					
ANR	880877	CFGEntryNode	ENTRY		880862		True				
ANR	880878	CFGExitNode	EXIT		880862		True				
ANR	880879	Symbol	ZEND_INTERNAL_FUNCTION		880862						
ANR	880880	Symbol	function		880862						
ANR	880881	Symbol	* function		880862						
ANR	880882	Symbol	function -> type		880862						
ANR	880883	DeclStmt									
ANR	880884	Decl							dtor_func_t	dtor_func_t	orig_dtor
ANR	880885	DeclStmt									
ANR	880886	Decl							HashTable	HashTable *	function_table
ANR	880887	DeclStmt									
ANR	880888	Decl							dtor_func_t	dtor_func_t	orig_dtor
ANR	880889	Function	zend_destroy_property_info	217:0:7304:7507							
ANR	880890	FunctionDef	zend_destroy_property_info (zend_property_info * property_info)		880889	0					
ANR	880891	CompoundStatement		218:0:7378:7507	880889	0					
ANR	880892	ExpressionStatement	interned_efree ( ( char * ) property_info -> name )	219:1:7381:7423	880889	0	True				
ANR	880893	CallExpression	interned_efree ( ( char * ) property_info -> name )		880889	0					
ANR	880894	Callee	interned_efree		880889	0					
ANR	880895	Identifier	interned_efree		880889	0					
ANR	880896	ArgumentList	( char * ) property_info -> name		880889	1					
ANR	880897	Argument	( char * ) property_info -> name		880889	0					
ANR	880898	CastExpression	( char * ) property_info -> name		880889	0					
ANR	880899	CastTarget	char *		880889	0					
ANR	880900	PtrMemberAccess	property_info -> name		880889	1					
ANR	880901	Identifier	property_info		880889	0					
ANR	880902	Identifier	name		880889	1					
ANR	880903	IfStatement	if ( property_info -> doc_comment )		880889	1					
ANR	880904	Condition	property_info -> doc_comment	220:5:7430:7455	880889	0	True				
ANR	880905	PtrMemberAccess	property_info -> doc_comment		880889	0					
ANR	880906	Identifier	property_info		880889	0					
ANR	880907	Identifier	doc_comment		880889	1					
ANR	880908	CompoundStatement		3:33:79:79	880889	1					
ANR	880909	ExpressionStatement	efree ( ( char * ) property_info -> doc_comment )	221:2:7462:7502	880889	0	True				
ANR	880910	CallExpression	efree ( ( char * ) property_info -> doc_comment )		880889	0					
ANR	880911	Callee	efree		880889	0					
ANR	880912	Identifier	efree		880889	0					
ANR	880913	ArgumentList	( char * ) property_info -> doc_comment		880889	1					
ANR	880914	Argument	( char * ) property_info -> doc_comment		880889	0					
ANR	880915	CastExpression	( char * ) property_info -> doc_comment		880889	0					
ANR	880916	CastTarget	char *		880889	0					
ANR	880917	PtrMemberAccess	property_info -> doc_comment		880889	1					
ANR	880918	Identifier	property_info		880889	0					
ANR	880919	Identifier	doc_comment		880889	1					
ANR	880920	ReturnType	static void		880889	1					
ANR	880921	Identifier	zend_destroy_property_info		880889	2					
ANR	880922	ParameterList	zend_property_info * property_info		880889	3					
ANR	880923	Parameter	zend_property_info * property_info	217:39:7343:7375	880889	0	True				
ANR	880924	ParameterType	zend_property_info *		880889	0					
ANR	880925	Identifier	property_info		880889	1					
ANR	880926	CFGEntryNode	ENTRY		880889		True				
ANR	880927	CFGExitNode	EXIT		880889		True				
ANR	880928	Symbol	property_info		880889						
ANR	880929	Symbol	property_info -> doc_comment		880889						
ANR	880930	Symbol	* property_info		880889						
ANR	880931	Symbol	property_info -> name		880889						
ANR	880932	DeclStmt									
ANR	880933	Decl							int	int	i
ANR	880934	DeclStmt									
ANR	880935	Decl							zend_ast	zend_ast *	node
ANR	880936	Function	zend_clone_zval	273:0:8935:10178							
ANR	880937	FunctionDef	"zend_clone_zval (zval * src , int bind TSRMLS_DC)"		880936	0					
ANR	880938	CompoundStatement		274:0:9002:10178	880936	0					
ANR	880939	IdentifierDeclStatement	"zval * ret , * * ret_ptr = NULL ;"	275:1:9005:9032	880936	0	True				
ANR	880940	IdentifierDecl	* ret		880936	0					
ANR	880941	IdentifierDeclType	zval *		880936	0					
ANR	880942	Identifier	ret		880936	1					
ANR	880943	IdentifierDecl	* * ret_ptr = NULL		880936	1					
ANR	880944	IdentifierDeclType	zval * *		880936	0					
ANR	880945	Identifier	ret_ptr		880936	1					
ANR	880946	AssignmentExpression	* * ret_ptr = NULL		880936	2		=			
ANR	880947	Identifier	NULL		880936	0					
ANR	880948	Identifier	NULL		880936	1					
ANR	880949	IfStatement	if ( ! bind )		880936	1					
ANR	880950	Condition	! bind	277:5:9040:9044	880936	0	True				
ANR	880951	UnaryOperationExpression	! bind		880936	0					
ANR	880952	UnaryOperator	!		880936	0					
ANR	880953	Identifier	bind		880936	1					
ANR	880954	CompoundStatement		4:12:44:44	880936	1					
ANR	880955	ExpressionStatement	ALLOC_ZVAL ( ret )	278:2:9051:9066	880936	0	True				
ANR	880956	CallExpression	ALLOC_ZVAL ( ret )		880936	0					
ANR	880957	Callee	ALLOC_ZVAL		880936	0					
ANR	880958	Identifier	ALLOC_ZVAL		880936	0					
ANR	880959	ArgumentList	ret		880936	1					
ANR	880960	Argument	ret		880936	0					
ANR	880961	Identifier	ret		880936	0					
ANR	880962	ExpressionStatement	* ret = * src	279:2:9070:9081	880936	1	True				
ANR	880963	AssignmentExpression	* ret = * src		880936	0		=			
ANR	880964	UnaryOperationExpression	* ret		880936	0					
ANR	880965	UnaryOperator	*		880936	0					
ANR	880966	Identifier	ret		880936	1					
ANR	880967	UnaryOperationExpression	* src		880936	1					
ANR	880968	UnaryOperator	*		880936	0					
ANR	880969	Identifier	src		880936	1					
ANR	880970	ExpressionStatement	INIT_PZVAL ( ret )	280:2:9085:9100	880936	2	True				
ANR	880971	CallExpression	INIT_PZVAL ( ret )		880936	0					
ANR	880972	Callee	INIT_PZVAL		880936	0					
ANR	880973	Identifier	INIT_PZVAL		880936	0					
ANR	880974	ArgumentList	ret		880936	1					
ANR	880975	Argument	ret		880936	0					
ANR	880976	Identifier	ret		880936	0					
ANR	880977	ElseStatement	else		880936	0					
ANR	880978	IfStatement	if ( Z_REFCOUNT_P ( src ) == 1 )		880936	0					
ANR	880979	Condition	Z_REFCOUNT_P ( src ) == 1	281:12:9114:9135	880936	0	True				
ANR	880980	EqualityExpression	Z_REFCOUNT_P ( src ) == 1		880936	0		==			
ANR	880981	CallExpression	Z_REFCOUNT_P ( src )		880936	0					
ANR	880982	Callee	Z_REFCOUNT_P		880936	0					
ANR	880983	Identifier	Z_REFCOUNT_P		880936	0					
ANR	880984	ArgumentList	src		880936	1					
ANR	880985	Argument	src		880936	0					
ANR	880986	Identifier	src		880936	0					
ANR	880987	PrimaryExpression	1		880936	1					
ANR	880988	CompoundStatement		8:36:135:135	880936	1					
ANR	880989	ExpressionStatement	ALLOC_ZVAL ( ret )	282:2:9142:9157	880936	0	True				
ANR	880990	CallExpression	ALLOC_ZVAL ( ret )		880936	0					
ANR	880991	Callee	ALLOC_ZVAL		880936	0					
ANR	880992	Identifier	ALLOC_ZVAL		880936	0					
ANR	880993	ArgumentList	ret		880936	1					
ANR	880994	Argument	ret		880936	0					
ANR	880995	Identifier	ret		880936	0					
ANR	880996	ExpressionStatement	* ret = * src	283:2:9161:9172	880936	1	True				
ANR	880997	AssignmentExpression	* ret = * src		880936	0		=			
ANR	880998	UnaryOperationExpression	* ret		880936	0					
ANR	880999	UnaryOperator	*		880936	0					
ANR	881000	Identifier	ret		880936	1					
ANR	881001	UnaryOperationExpression	* src		880936	1					
ANR	881002	UnaryOperator	*		880936	0					
ANR	881003	Identifier	src		880936	1					
ANR	881004	ElseStatement	else		880936	0					
ANR	881005	IfStatement	"if ( accel_xlat_get ( src , ret_ptr ) != SUCCESS )"		880936	0					
ANR	881006	Condition	"accel_xlat_get ( src , ret_ptr ) != SUCCESS"	284:12:9186:9224	880936	0	True				
ANR	881007	EqualityExpression	"accel_xlat_get ( src , ret_ptr ) != SUCCESS"		880936	0		!=			
ANR	881008	CallExpression	"accel_xlat_get ( src , ret_ptr )"		880936	0					
ANR	881009	Callee	accel_xlat_get		880936	0					
ANR	881010	Identifier	accel_xlat_get		880936	0					
ANR	881011	ArgumentList	src		880936	1					
ANR	881012	Argument	src		880936	0					
ANR	881013	Identifier	src		880936	0					
ANR	881014	Argument	ret_ptr		880936	1					
ANR	881015	Identifier	ret_ptr		880936	0					
ANR	881016	Identifier	SUCCESS		880936	1					
ANR	881017	CompoundStatement		11:53:224:224	880936	1					
ANR	881018	ExpressionStatement	ALLOC_ZVAL ( ret )	285:2:9231:9246	880936	0	True				
ANR	881019	CallExpression	ALLOC_ZVAL ( ret )		880936	0					
ANR	881020	Callee	ALLOC_ZVAL		880936	0					
ANR	881021	Identifier	ALLOC_ZVAL		880936	0					
ANR	881022	ArgumentList	ret		880936	1					
ANR	881023	Argument	ret		880936	0					
ANR	881024	Identifier	ret		880936	0					
ANR	881025	ExpressionStatement	* ret = * src	286:2:9250:9261	880936	1	True				
ANR	881026	AssignmentExpression	* ret = * src		880936	0		=			
ANR	881027	UnaryOperationExpression	* ret		880936	0					
ANR	881028	UnaryOperator	*		880936	0					
ANR	881029	Identifier	ret		880936	1					
ANR	881030	UnaryOperationExpression	* src		880936	1					
ANR	881031	UnaryOperator	*		880936	0					
ANR	881032	Identifier	src		880936	1					
ANR	881033	ExpressionStatement	"accel_xlat_set ( src , ret )"	287:2:9265:9289	880936	2	True				
ANR	881034	CallExpression	"accel_xlat_set ( src , ret )"		880936	0					
ANR	881035	Callee	accel_xlat_set		880936	0					
ANR	881036	Identifier	accel_xlat_set		880936	0					
ANR	881037	ArgumentList	src		880936	1					
ANR	881038	Argument	src		880936	0					
ANR	881039	Identifier	src		880936	0					
ANR	881040	Argument	ret		880936	1					
ANR	881041	Identifier	ret		880936	0					
ANR	881042	ElseStatement	else		880936	0					
ANR	881043	CompoundStatement		15:8:296:296	880936	0					
ANR	881044	ReturnStatement	return * ret_ptr ;	289:2:9303:9318	880936	0	True				
ANR	881045	UnaryOperationExpression	* ret_ptr		880936	0					
ANR	881046	UnaryOperator	*		880936	0					
ANR	881047	Identifier	ret_ptr		880936	1					
ANR	881048	IfStatement	if ( ( Z_TYPE_P ( ret ) & IS_CONSTANT_TYPE_MASK ) >= IS_ARRAY )		880936	2					
ANR	881049	Condition	( Z_TYPE_P ( ret ) & IS_CONSTANT_TYPE_MASK ) >= IS_ARRAY	293:5:9375:9425	880936	0	True				
ANR	881050	RelationalExpression	( Z_TYPE_P ( ret ) & IS_CONSTANT_TYPE_MASK ) >= IS_ARRAY		880936	0		>=			
ANR	881051	BitAndExpression	Z_TYPE_P ( ret ) & IS_CONSTANT_TYPE_MASK		880936	0		&			
ANR	881052	CallExpression	Z_TYPE_P ( ret )		880936	0					
ANR	881053	Callee	Z_TYPE_P		880936	0					
ANR	881054	Identifier	Z_TYPE_P		880936	0					
ANR	881055	ArgumentList	ret		880936	1					
ANR	881056	Argument	ret		880936	0					
ANR	881057	Identifier	ret		880936	0					
ANR	881058	Identifier	IS_CONSTANT_TYPE_MASK		880936	1					
ANR	881059	Identifier	IS_ARRAY		880936	1					
ANR	881060	CompoundStatement		20:58:425:425	880936	1					
ANR	881061	SwitchStatement	switch ( ( Z_TYPE_P ( ret ) & IS_CONSTANT_TYPE_MASK ) )		880936	0					
ANR	881062	Condition	Z_TYPE_P ( ret ) & IS_CONSTANT_TYPE_MASK	294:10:9440:9478	880936	0	True				
ANR	881063	BitAndExpression	Z_TYPE_P ( ret ) & IS_CONSTANT_TYPE_MASK		880936	0		&			
ANR	881064	CallExpression	Z_TYPE_P ( ret )		880936	0					
ANR	881065	Callee	Z_TYPE_P		880936	0					
ANR	881066	Identifier	Z_TYPE_P		880936	0					
ANR	881067	ArgumentList	ret		880936	1					
ANR	881068	Argument	ret		880936	0					
ANR	881069	Identifier	ret		880936	0					
ANR	881070	Identifier	IS_CONSTANT_TYPE_MASK		880936	1					
ANR	881071	CompoundStatement		21:51:478:478	880936	1					
ANR	881072	Label	case IS_STRING :	299:3:9606:9620	880936	0	True				
ANR	881073	Identifier	IS_STRING		880936	0					
ANR	881074	Label	case IS_CONSTANT :	300:3:9625:9641	880936	1	True				
ANR	881075	Identifier	IS_CONSTANT		880936	0					
ANR	881076	ExpressionStatement	"Z_STRVAL_P ( ret ) = ( char * ) interned_estrndup ( Z_STRVAL_P ( ret ) , Z_STRLEN_P ( ret ) )"	301:4:9647:9725	880936	2	True				
ANR	881077	AssignmentExpression	"Z_STRVAL_P ( ret ) = ( char * ) interned_estrndup ( Z_STRVAL_P ( ret ) , Z_STRLEN_P ( ret ) )"		880936	0		=			
ANR	881078	CallExpression	Z_STRVAL_P ( ret )		880936	0					
ANR	881079	Callee	Z_STRVAL_P		880936	0					
ANR	881080	Identifier	Z_STRVAL_P		880936	0					
ANR	881081	ArgumentList	ret		880936	1					
ANR	881082	Argument	ret		880936	0					
ANR	881083	Identifier	ret		880936	0					
ANR	881084	CastExpression	"( char * ) interned_estrndup ( Z_STRVAL_P ( ret ) , Z_STRLEN_P ( ret ) )"		880936	1					
ANR	881085	CastTarget	char *		880936	0					
ANR	881086	CallExpression	"interned_estrndup ( Z_STRVAL_P ( ret ) , Z_STRLEN_P ( ret ) )"		880936	1					
ANR	881087	Callee	interned_estrndup		880936	0					
ANR	881088	Identifier	interned_estrndup		880936	0					
ANR	881089	ArgumentList	Z_STRVAL_P ( ret )		880936	1					
ANR	881090	Argument	Z_STRVAL_P ( ret )		880936	0					
ANR	881091	CallExpression	Z_STRVAL_P ( ret )		880936	0					
ANR	881092	Callee	Z_STRVAL_P		880936	0					
ANR	881093	Identifier	Z_STRVAL_P		880936	0					
ANR	881094	ArgumentList	ret		880936	1					
ANR	881095	Argument	ret		880936	0					
ANR	881096	Identifier	ret		880936	0					
ANR	881097	Argument	Z_STRLEN_P ( ret )		880936	1					
ANR	881098	CallExpression	Z_STRLEN_P ( ret )		880936	0					
ANR	881099	Callee	Z_STRLEN_P		880936	0					
ANR	881100	Identifier	Z_STRLEN_P		880936	0					
ANR	881101	ArgumentList	ret		880936	1					
ANR	881102	Argument	ret		880936	0					
ANR	881103	Identifier	ret		880936	0					
ANR	881104	BreakStatement	break ;	302:4:9731:9736	880936	3	True				
ANR	881105	Label	case IS_ARRAY :	303:3:9741:9754	880936	4	True				
ANR	881106	Identifier	IS_ARRAY		880936	0					
ANR	881107	Label	case IS_CONSTANT_ARRAY :	305:3:9803:9825	880936	5	True				
ANR	881108	Identifier	IS_CONSTANT_ARRAY		880936	0					
ANR	881109	IfStatement	if ( ret -> value . ht && ret -> value . ht != & EG ( symbol_table ) )		880936	6					
ANR	881110	Condition	ret -> value . ht && ret -> value . ht != & EG ( symbol_table )	307:8:9842:9892	880936	0	True				
ANR	881111	AndExpression	ret -> value . ht && ret -> value . ht != & EG ( symbol_table )		880936	0		&&			
ANR	881112	MemberAccess	ret -> value . ht		880936	0					
ANR	881113	PtrMemberAccess	ret -> value		880936	0					
ANR	881114	Identifier	ret		880936	0					
ANR	881115	Identifier	value		880936	1					
ANR	881116	Identifier	ht		880936	1					
ANR	881117	EqualityExpression	ret -> value . ht != & EG ( symbol_table )		880936	1		!=			
ANR	881118	MemberAccess	ret -> value . ht		880936	0					
ANR	881119	PtrMemberAccess	ret -> value		880936	0					
ANR	881120	Identifier	ret		880936	0					
ANR	881121	Identifier	value		880936	1					
ANR	881122	Identifier	ht		880936	1					
ANR	881123	UnaryOperationExpression	& EG ( symbol_table )		880936	1					
ANR	881124	UnaryOperator	&		880936	0					
ANR	881125	CallExpression	EG ( symbol_table )		880936	1					
ANR	881126	Callee	EG		880936	0					
ANR	881127	Identifier	EG		880936	0					
ANR	881128	ArgumentList	symbol_table		880936	1					
ANR	881129	Argument	symbol_table		880936	0					
ANR	881130	Identifier	symbol_table		880936	0					
ANR	881131	CompoundStatement		34:61:892:892	880936	1					
ANR	881132	ExpressionStatement	ALLOC_HASHTABLE ( ret -> value . ht )	308:5:9902:9932	880936	0	True				
ANR	881133	CallExpression	ALLOC_HASHTABLE ( ret -> value . ht )		880936	0					
ANR	881134	Callee	ALLOC_HASHTABLE		880936	0					
ANR	881135	Identifier	ALLOC_HASHTABLE		880936	0					
ANR	881136	ArgumentList	ret -> value . ht		880936	1					
ANR	881137	Argument	ret -> value . ht		880936	0					
ANR	881138	MemberAccess	ret -> value . ht		880936	0					
ANR	881139	PtrMemberAccess	ret -> value		880936	0					
ANR	881140	Identifier	ret		880936	0					
ANR	881141	Identifier	value		880936	1					
ANR	881142	Identifier	ht		880936	1					
ANR	881143	ExpressionStatement	"zend_hash_clone_zval ( ret -> value . ht , src -> value . ht , 0 )"	309:5:9939:9992	880936	1	True				
ANR	881144	CallExpression	"zend_hash_clone_zval ( ret -> value . ht , src -> value . ht , 0 )"		880936	0					
ANR	881145	Callee	zend_hash_clone_zval		880936	0					
ANR	881146	Identifier	zend_hash_clone_zval		880936	0					
ANR	881147	ArgumentList	ret -> value . ht		880936	1					
ANR	881148	Argument	ret -> value . ht		880936	0					
ANR	881149	MemberAccess	ret -> value . ht		880936	0					
ANR	881150	PtrMemberAccess	ret -> value		880936	0					
ANR	881151	Identifier	ret		880936	0					
ANR	881152	Identifier	value		880936	1					
ANR	881153	Identifier	ht		880936	1					
ANR	881154	Argument	src -> value . ht		880936	1					
ANR	881155	MemberAccess	src -> value . ht		880936	0					
ANR	881156	PtrMemberAccess	src -> value		880936	0					
ANR	881157	Identifier	src		880936	0					
ANR	881158	Identifier	value		880936	1					
ANR	881159	Identifier	ht		880936	1					
ANR	881160	Argument	0		880936	2					
ANR	881161	PrimaryExpression	0		880936	0					
ANR	881162	BreakStatement	break ;	311:4:10004:10009	880936	7	True				
ANR	881163	Label	case IS_CONSTANT_AST :	313:3:10059:10079	880936	8	True				
ANR	881164	Identifier	IS_CONSTANT_AST		880936	0					
ANR	881165	Statement	Z_AST_P	314:4:10085:10091	880936	9	True				
ANR	881166	Statement	(	314:11:10092:10092	880936	10	True				
ANR	881167	Statement	ret	314:12:10093:10095	880936	11	True				
ANR	881168	Statement	)	314:15:10096:10096	880936	12	True				
ANR	881169	Statement	=	314:17:10098:10098	880936	13	True				
ANR	881170	Statement	zend_ast_clone	314:19:10100:10113	880936	14	True				
ANR	881171	Statement	(	314:33:10114:10114	880936	15	True				
ANR	881172	Statement	Z_AST_P	314:34:10115:10121	880936	16	True				
ANR	881173	Statement	(	314:41:10122:10122	880936	17	True				
ANR	881174	Statement	ret	314:42:10123:10125	880936	18	True				
ANR	881175	Statement	)	314:45:10126:10126	880936	19	True				
ANR	881176	Statement	TSRMLS_CC	314:47:10128:10136	880936	20	True				
ANR	881177	Statement	)	314:56:10137:10137	880936	21	True				
ANR	881178	ExpressionStatement		314:57:10138:10138	880936	22	True				
ANR	881179	BreakStatement	break ;	315:4:10144:10149	880936	23	True				
ANR	881180	ReturnStatement	return ret ;	319:1:10166:10176	880936	3	True				
ANR	881181	Identifier	ret		880936	0					
ANR	881182	ReturnType	static inline zval *		880936	1					
ANR	881183	Identifier	zend_clone_zval		880936	2					
ANR	881184	ParameterList	"zval * src , int bind TSRMLS_DC"		880936	3					
ANR	881185	Parameter	zval * src	273:36:8971:8979	880936	0	True				
ANR	881186	ParameterType	zval *		880936	0					
ANR	881187	Identifier	src		880936	1					
ANR	881188	Parameter	int bind TSRMLS_DC	273:47:8982:8999	880936	1	True				
ANR	881189	ParameterType	int bind		880936	0					
ANR	881190	Identifier	TSRMLS_DC		880936	1					
ANR	881191	CFGEntryNode	ENTRY		880936		True				
ANR	881192	CFGExitNode	EXIT		880936		True				
ANR	881193	Symbol	ret		880936						
ANR	881194	Symbol	NULL		880936						
ANR	881195	Symbol	SUCCESS		880936						
ANR	881196	Symbol	src		880936						
ANR	881197	Symbol	src -> value		880936						
ANR	881198	Symbol	IS_CONSTANT_TYPE_MASK		880936						
ANR	881199	Symbol	symbol_table		880936						
ANR	881200	Symbol	* ret		880936						
ANR	881201	Symbol	ret -> value		880936						
ANR	881202	Symbol	Z_TYPE_P		880936						
ANR	881203	Symbol	TSRMLS_DC		880936						
ANR	881204	Symbol	Z_REFCOUNT_P		880936						
ANR	881205	Symbol	Z_STRVAL_P		880936						
ANR	881206	Symbol	& EG		880936						
ANR	881207	Symbol	src -> value . ht		880936						
ANR	881208	Symbol	* src		880936						
ANR	881209	Symbol	ret -> value . ht		880936						
ANR	881210	Symbol	bind		880936						
ANR	881211	Symbol	accel_xlat_get		880936						
ANR	881212	Symbol	* ret_ptr		880936						
ANR	881213	Symbol	IS_ARRAY		880936						
ANR	881214	Symbol	interned_estrndup		880936						
ANR	881215	Symbol	Z_STRLEN_P		880936						
ANR	881216	Symbol	ret_ptr		880936						
ANR	881217	Function	zend_hash_clone_zval	322:0:10181:13586							
ANR	881218	FunctionDef	"zend_hash_clone_zval (HashTable * ht , HashTable * source , int bind)"		881217	0					
ANR	881219	CompoundStatement		323:0:10258:13586	881217	0					
ANR	881220	IdentifierDeclStatement	"Bucket * p , * q , * * prev ;"	324:1:10261:10282	881217	0	True				
ANR	881221	IdentifierDecl	* p		881217	0					
ANR	881222	IdentifierDeclType	Bucket *		881217	0					
ANR	881223	Identifier	p		881217	1					
ANR	881224	IdentifierDecl	* q		881217	1					
ANR	881225	IdentifierDeclType	Bucket *		881217	0					
ANR	881226	Identifier	q		881217	1					
ANR	881227	IdentifierDecl	* * prev		881217	2					
ANR	881228	IdentifierDeclType	Bucket * *		881217	0					
ANR	881229	Identifier	prev		881217	1					
ANR	881230	IdentifierDeclStatement	ulong nIndex ;	325:1:10285:10297	881217	1	True				
ANR	881231	IdentifierDecl	nIndex		881217	0					
ANR	881232	IdentifierDeclType	ulong		881217	0					
ANR	881233	Identifier	nIndex		881217	1					
ANR	881234	IdentifierDeclStatement	zval * ppz ;	326:1:10300:10309	881217	2	True				
ANR	881235	IdentifierDecl	* ppz		881217	0					
ANR	881236	IdentifierDeclType	zval *		881217	0					
ANR	881237	Identifier	ppz		881217	1					
ANR	881238	ExpressionStatement	TSRMLS_FETCH ( )	327:1:10312:10326	881217	3	True				
ANR	881239	CallExpression	TSRMLS_FETCH ( )		881217	0					
ANR	881240	Callee	TSRMLS_FETCH		881217	0					
ANR	881241	Identifier	TSRMLS_FETCH		881217	0					
ANR	881242	ArgumentList			881217	1					
ANR	881243	ExpressionStatement	ht -> nTableSize = source -> nTableSize	329:1:10330:10365	881217	4	True				
ANR	881244	AssignmentExpression	ht -> nTableSize = source -> nTableSize		881217	0		=			
ANR	881245	PtrMemberAccess	ht -> nTableSize		881217	0					
ANR	881246	Identifier	ht		881217	0					
ANR	881247	Identifier	nTableSize		881217	1					
ANR	881248	PtrMemberAccess	source -> nTableSize		881217	1					
ANR	881249	Identifier	source		881217	0					
ANR	881250	Identifier	nTableSize		881217	1					
ANR	881251	ExpressionStatement	ht -> nTableMask = source -> nTableMask	330:1:10368:10403	881217	5	True				
ANR	881252	AssignmentExpression	ht -> nTableMask = source -> nTableMask		881217	0		=			
ANR	881253	PtrMemberAccess	ht -> nTableMask		881217	0					
ANR	881254	Identifier	ht		881217	0					
ANR	881255	Identifier	nTableMask		881217	1					
ANR	881256	PtrMemberAccess	source -> nTableMask		881217	1					
ANR	881257	Identifier	source		881217	0					
ANR	881258	Identifier	nTableMask		881217	1					
ANR	881259	ExpressionStatement	ht -> nNumOfElements = source -> nNumOfElements	331:1:10406:10449	881217	6	True				
ANR	881260	AssignmentExpression	ht -> nNumOfElements = source -> nNumOfElements		881217	0		=			
ANR	881261	PtrMemberAccess	ht -> nNumOfElements		881217	0					
ANR	881262	Identifier	ht		881217	0					
ANR	881263	Identifier	nNumOfElements		881217	1					
ANR	881264	PtrMemberAccess	source -> nNumOfElements		881217	1					
ANR	881265	Identifier	source		881217	0					
ANR	881266	Identifier	nNumOfElements		881217	1					
ANR	881267	ExpressionStatement	ht -> nNextFreeElement = source -> nNextFreeElement	332:1:10452:10499	881217	7	True				
ANR	881268	AssignmentExpression	ht -> nNextFreeElement = source -> nNextFreeElement		881217	0		=			
ANR	881269	PtrMemberAccess	ht -> nNextFreeElement		881217	0					
ANR	881270	Identifier	ht		881217	0					
ANR	881271	Identifier	nNextFreeElement		881217	1					
ANR	881272	PtrMemberAccess	source -> nNextFreeElement		881217	1					
ANR	881273	Identifier	source		881217	0					
ANR	881274	Identifier	nNextFreeElement		881217	1					
ANR	881275	ExpressionStatement	ht -> pDestructor = ZVAL_PTR_DTOR	333:1:10502:10533	881217	8	True				
ANR	881276	AssignmentExpression	ht -> pDestructor = ZVAL_PTR_DTOR		881217	0		=			
ANR	881277	PtrMemberAccess	ht -> pDestructor		881217	0					
ANR	881278	Identifier	ht		881217	0					
ANR	881279	Identifier	pDestructor		881217	1					
ANR	881280	Identifier	ZVAL_PTR_DTOR		881217	1					
ANR	881281	ExpressionStatement	ht -> inconsistent = 0	335:1:10551:10571	881217	9	True				
ANR	881282	AssignmentExpression	ht -> inconsistent = 0		881217	0		=			
ANR	881283	PtrMemberAccess	ht -> inconsistent		881217	0					
ANR	881284	Identifier	ht		881217	0					
ANR	881285	Identifier	inconsistent		881217	1					
ANR	881286	PrimaryExpression	0		881217	1					
ANR	881287	ExpressionStatement	ht -> persistent = 0	337:1:10581:10599	881217	10	True				
ANR	881288	AssignmentExpression	ht -> persistent = 0		881217	0		=			
ANR	881289	PtrMemberAccess	ht -> persistent		881217	0					
ANR	881290	Identifier	ht		881217	0					
ANR	881291	Identifier	persistent		881217	1					
ANR	881292	PrimaryExpression	0		881217	1					
ANR	881293	ExpressionStatement	ht -> arBuckets = NULL	338:1:10602:10622	881217	11	True				
ANR	881294	AssignmentExpression	ht -> arBuckets = NULL		881217	0		=			
ANR	881295	PtrMemberAccess	ht -> arBuckets		881217	0					
ANR	881296	Identifier	ht		881217	0					
ANR	881297	Identifier	arBuckets		881217	1					
ANR	881298	Identifier	NULL		881217	1					
ANR	881299	ExpressionStatement	ht -> pListHead = NULL	339:1:10625:10645	881217	12	True				
ANR	881300	AssignmentExpression	ht -> pListHead = NULL		881217	0		=			
ANR	881301	PtrMemberAccess	ht -> pListHead		881217	0					
ANR	881302	Identifier	ht		881217	0					
ANR	881303	Identifier	pListHead		881217	1					
ANR	881304	Identifier	NULL		881217	1					
ANR	881305	ExpressionStatement	ht -> pListTail = NULL	340:1:10648:10668	881217	13	True				
ANR	881306	AssignmentExpression	ht -> pListTail = NULL		881217	0		=			
ANR	881307	PtrMemberAccess	ht -> pListTail		881217	0					
ANR	881308	Identifier	ht		881217	0					
ANR	881309	Identifier	pListTail		881217	1					
ANR	881310	Identifier	NULL		881217	1					
ANR	881311	ExpressionStatement	ht -> pInternalPointer = NULL	341:1:10671:10698	881217	14	True				
ANR	881312	AssignmentExpression	ht -> pInternalPointer = NULL		881217	0		=			
ANR	881313	PtrMemberAccess	ht -> pInternalPointer		881217	0					
ANR	881314	Identifier	ht		881217	0					
ANR	881315	Identifier	pInternalPointer		881217	1					
ANR	881316	Identifier	NULL		881217	1					
ANR	881317	ExpressionStatement	ht -> nApplyCount = 0	342:1:10701:10720	881217	15	True				
ANR	881318	AssignmentExpression	ht -> nApplyCount = 0		881217	0		=			
ANR	881319	PtrMemberAccess	ht -> nApplyCount		881217	0					
ANR	881320	Identifier	ht		881217	0					
ANR	881321	Identifier	nApplyCount		881217	1					
ANR	881322	PrimaryExpression	0		881217	1					
ANR	881323	ExpressionStatement	ht -> bApplyProtection = 1	343:1:10723:10747	881217	16	True				
ANR	881324	AssignmentExpression	ht -> bApplyProtection = 1		881217	0		=			
ANR	881325	PtrMemberAccess	ht -> bApplyProtection		881217	0					
ANR	881326	Identifier	ht		881217	0					
ANR	881327	Identifier	bApplyProtection		881217	1					
ANR	881328	PrimaryExpression	1		881217	1					
ANR	881329	IfStatement	if ( ! ht -> nTableMask )		881217	17					
ANR	881330	Condition	! ht -> nTableMask	346:5:10800:10814	881217	0	True				
ANR	881331	UnaryOperationExpression	! ht -> nTableMask		881217	0					
ANR	881332	UnaryOperator	!		881217	0					
ANR	881333	PtrMemberAccess	ht -> nTableMask		881217	1					
ANR	881334	Identifier	ht		881217	0					
ANR	881335	Identifier	nTableMask		881217	1					
ANR	881336	CompoundStatement		24:22:558:558	881217	1					
ANR	881337	ExpressionStatement	ht -> arBuckets = ( Bucket * * ) & uninitialized_bucket	347:2:10821:10868	881217	0	True				
ANR	881338	AssignmentExpression	ht -> arBuckets = ( Bucket * * ) & uninitialized_bucket		881217	0		=			
ANR	881339	PtrMemberAccess	ht -> arBuckets		881217	0					
ANR	881340	Identifier	ht		881217	0					
ANR	881341	Identifier	arBuckets		881217	1					
ANR	881342	CastExpression	( Bucket * * ) & uninitialized_bucket		881217	1					
ANR	881343	CastTarget	Bucket * *		881217	0					
ANR	881344	UnaryOperationExpression	& uninitialized_bucket		881217	1					
ANR	881345	UnaryOperator	&		881217	0					
ANR	881346	Identifier	uninitialized_bucket		881217	1					
ANR	881347	ReturnStatement	return ;	348:2:10872:10878	881217	1	True				
ANR	881348	ExpressionStatement	"ht -> arBuckets = ( Bucket * * ) ecalloc ( ht -> nTableSize , sizeof ( Bucket * ) )"	352:1:10892:10961	881217	18	True				
ANR	881349	AssignmentExpression	"ht -> arBuckets = ( Bucket * * ) ecalloc ( ht -> nTableSize , sizeof ( Bucket * ) )"		881217	0		=			
ANR	881350	PtrMemberAccess	ht -> arBuckets		881217	0					
ANR	881351	Identifier	ht		881217	0					
ANR	881352	Identifier	arBuckets		881217	1					
ANR	881353	CastExpression	"( Bucket * * ) ecalloc ( ht -> nTableSize , sizeof ( Bucket * ) )"		881217	1					
ANR	881354	CastTarget	Bucket * *		881217	0					
ANR	881355	CallExpression	"ecalloc ( ht -> nTableSize , sizeof ( Bucket * ) )"		881217	1					
ANR	881356	Callee	ecalloc		881217	0					
ANR	881357	Identifier	ecalloc		881217	0					
ANR	881358	ArgumentList	ht -> nTableSize		881217	1					
ANR	881359	Argument	ht -> nTableSize		881217	0					
ANR	881360	PtrMemberAccess	ht -> nTableSize		881217	0					
ANR	881361	Identifier	ht		881217	0					
ANR	881362	Identifier	nTableSize		881217	1					
ANR	881363	Argument	sizeof ( Bucket * )		881217	1					
ANR	881364	SizeofExpression	sizeof ( Bucket * )		881217	0					
ANR	881365	Sizeof	sizeof		881217	0					
ANR	881366	SizeofOperand	Bucket *		881217	1					
ANR	881367	ExpressionStatement	prev = & ht -> pListHead	354:1:10965:10986	881217	19	True				
ANR	881368	AssignmentExpression	prev = & ht -> pListHead		881217	0		=			
ANR	881369	Identifier	prev		881217	0					
ANR	881370	UnaryOperationExpression	& ht -> pListHead		881217	1					
ANR	881371	UnaryOperator	&		881217	0					
ANR	881372	PtrMemberAccess	ht -> pListHead		881217	1					
ANR	881373	Identifier	ht		881217	0					
ANR	881374	Identifier	pListHead		881217	1					
ANR	881375	ExpressionStatement	p = source -> pListHead	355:1:10989:11010	881217	20	True				
ANR	881376	AssignmentExpression	p = source -> pListHead		881217	0		=			
ANR	881377	Identifier	p		881217	0					
ANR	881378	PtrMemberAccess	source -> pListHead		881217	1					
ANR	881379	Identifier	source		881217	0					
ANR	881380	Identifier	pListHead		881217	1					
ANR	881381	WhileStatement	while ( p )		881217	21					
ANR	881382	Condition	p	356:8:11020:11020	881217	0	True				
ANR	881383	Identifier	p		881217	0					
ANR	881384	CompoundStatement		34:11:764:764	881217	1					
ANR	881385	ExpressionStatement	nIndex = p -> h & ht -> nTableMask	357:2:11027:11057	881217	0	True				
ANR	881386	AssignmentExpression	nIndex = p -> h & ht -> nTableMask		881217	0		=			
ANR	881387	Identifier	nIndex		881217	0					
ANR	881388	BitAndExpression	p -> h & ht -> nTableMask		881217	1		&			
ANR	881389	PtrMemberAccess	p -> h		881217	0					
ANR	881390	Identifier	p		881217	0					
ANR	881391	Identifier	h		881217	1					
ANR	881392	PtrMemberAccess	ht -> nTableMask		881217	1					
ANR	881393	Identifier	ht		881217	0					
ANR	881394	Identifier	nTableMask		881217	1					
ANR	881395	IfStatement	if ( ! p -> nKeyLength )		881217	1					
ANR	881396	Condition	! p -> nKeyLength	361:6:11152:11165	881217	0	True				
ANR	881397	UnaryOperationExpression	! p -> nKeyLength		881217	0					
ANR	881398	UnaryOperator	!		881217	0					
ANR	881399	PtrMemberAccess	p -> nKeyLength		881217	1					
ANR	881400	Identifier	p		881217	0					
ANR	881401	Identifier	nKeyLength		881217	1					
ANR	881402	CompoundStatement		39:22:909:909	881217	1					
ANR	881403	ExpressionStatement	q = ( Bucket * ) emalloc ( sizeof ( Bucket ) )	362:3:11173:11211	881217	0	True				
ANR	881404	AssignmentExpression	q = ( Bucket * ) emalloc ( sizeof ( Bucket ) )		881217	0		=			
ANR	881405	Identifier	q		881217	0					
ANR	881406	CastExpression	( Bucket * ) emalloc ( sizeof ( Bucket ) )		881217	1					
ANR	881407	CastTarget	Bucket *		881217	0					
ANR	881408	CallExpression	emalloc ( sizeof ( Bucket ) )		881217	1					
ANR	881409	Callee	emalloc		881217	0					
ANR	881410	Identifier	emalloc		881217	0					
ANR	881411	ArgumentList	sizeof ( Bucket )		881217	1					
ANR	881412	Argument	sizeof ( Bucket )		881217	0					
ANR	881413	SizeofExpression	sizeof ( Bucket )		881217	0					
ANR	881414	Sizeof	sizeof		881217	0					
ANR	881415	SizeofOperand	Bucket		881217	1					
ANR	881416	ExpressionStatement	q -> arKey = NULL	363:3:11216:11231	881217	1	True				
ANR	881417	AssignmentExpression	q -> arKey = NULL		881217	0		=			
ANR	881418	PtrMemberAccess	q -> arKey		881217	0					
ANR	881419	Identifier	q		881217	0					
ANR	881420	Identifier	arKey		881217	1					
ANR	881421	Identifier	NULL		881217	1					
ANR	881422	ElseStatement	else		881217	0					
ANR	881423	IfStatement	if ( IS_INTERNED ( p -> arKey ) )		881217	0					
ANR	881424	Condition	IS_INTERNED ( p -> arKey )	364:13:11246:11266	881217	0	True				
ANR	881425	CallExpression	IS_INTERNED ( p -> arKey )		881217	0					
ANR	881426	Callee	IS_INTERNED		881217	0					
ANR	881427	Identifier	IS_INTERNED		881217	0					
ANR	881428	ArgumentList	p -> arKey		881217	1					
ANR	881429	Argument	p -> arKey		881217	0					
ANR	881430	PtrMemberAccess	p -> arKey		881217	0					
ANR	881431	Identifier	p		881217	0					
ANR	881432	Identifier	arKey		881217	1					
ANR	881433	CompoundStatement		42:36:1010:1010	881217	1					
ANR	881434	ExpressionStatement	q = ( Bucket * ) emalloc ( sizeof ( Bucket ) )	365:3:11274:11312	881217	0	True				
ANR	881435	AssignmentExpression	q = ( Bucket * ) emalloc ( sizeof ( Bucket ) )		881217	0		=			
ANR	881436	Identifier	q		881217	0					
ANR	881437	CastExpression	( Bucket * ) emalloc ( sizeof ( Bucket ) )		881217	1					
ANR	881438	CastTarget	Bucket *		881217	0					
ANR	881439	CallExpression	emalloc ( sizeof ( Bucket ) )		881217	1					
ANR	881440	Callee	emalloc		881217	0					
ANR	881441	Identifier	emalloc		881217	0					
ANR	881442	ArgumentList	sizeof ( Bucket )		881217	1					
ANR	881443	Argument	sizeof ( Bucket )		881217	0					
ANR	881444	SizeofExpression	sizeof ( Bucket )		881217	0					
ANR	881445	Sizeof	sizeof		881217	0					
ANR	881446	SizeofOperand	Bucket		881217	1					
ANR	881447	ExpressionStatement	q -> arKey = p -> arKey	366:3:11317:11336	881217	1	True				
ANR	881448	AssignmentExpression	q -> arKey = p -> arKey		881217	0		=			
ANR	881449	PtrMemberAccess	q -> arKey		881217	0					
ANR	881450	Identifier	q		881217	0					
ANR	881451	Identifier	arKey		881217	1					
ANR	881452	PtrMemberAccess	p -> arKey		881217	1					
ANR	881453	Identifier	p		881217	0					
ANR	881454	Identifier	arKey		881217	1					
ANR	881455	ElseStatement	else		881217	0					
ANR	881456	CompoundStatement		45:9:1088:1088	881217	0					
ANR	881457	ExpressionStatement	q = ( Bucket * ) emalloc ( sizeof ( Bucket ) + p -> nKeyLength )	368:3:11352:11406	881217	0	True				
ANR	881458	AssignmentExpression	q = ( Bucket * ) emalloc ( sizeof ( Bucket ) + p -> nKeyLength )		881217	0		=			
ANR	881459	Identifier	q		881217	0					
ANR	881460	CastExpression	( Bucket * ) emalloc ( sizeof ( Bucket ) + p -> nKeyLength )		881217	1					
ANR	881461	CastTarget	Bucket *		881217	0					
ANR	881462	CallExpression	emalloc ( sizeof ( Bucket ) + p -> nKeyLength )		881217	1					
ANR	881463	Callee	emalloc		881217	0					
ANR	881464	Identifier	emalloc		881217	0					
ANR	881465	ArgumentList	sizeof ( Bucket ) + p -> nKeyLength		881217	1					
ANR	881466	Argument	sizeof ( Bucket ) + p -> nKeyLength		881217	0					
ANR	881467	AdditiveExpression	sizeof ( Bucket ) + p -> nKeyLength		881217	0		+			
ANR	881468	SizeofExpression	sizeof ( Bucket )		881217	0					
ANR	881469	Sizeof	sizeof		881217	0					
ANR	881470	SizeofOperand	Bucket		881217	1					
ANR	881471	PtrMemberAccess	p -> nKeyLength		881217	1					
ANR	881472	Identifier	p		881217	0					
ANR	881473	Identifier	nKeyLength		881217	1					
ANR	881474	ExpressionStatement	q -> arKey = ( ( char * ) q ) + sizeof ( Bucket )	369:3:11411:11449	881217	1	True				
ANR	881475	AssignmentExpression	q -> arKey = ( ( char * ) q ) + sizeof ( Bucket )		881217	0		=			
ANR	881476	PtrMemberAccess	q -> arKey		881217	0					
ANR	881477	Identifier	q		881217	0					
ANR	881478	Identifier	arKey		881217	1					
ANR	881479	AdditiveExpression	( ( char * ) q ) + sizeof ( Bucket )		881217	1		+			
ANR	881480	CastExpression	( char * ) q		881217	0					
ANR	881481	CastTarget	char *		881217	0					
ANR	881482	Identifier	q		881217	1					
ANR	881483	SizeofExpression	sizeof ( Bucket )		881217	1					
ANR	881484	Sizeof	sizeof		881217	0					
ANR	881485	SizeofOperand	Bucket		881217	1					
ANR	881486	ExpressionStatement	"memcpy ( ( char * ) q -> arKey , p -> arKey , p -> nKeyLength )"	370:3:11454:11502	881217	2	True				
ANR	881487	CallExpression	"memcpy ( ( char * ) q -> arKey , p -> arKey , p -> nKeyLength )"		881217	0					
ANR	881488	Callee	memcpy		881217	0					
ANR	881489	Identifier	memcpy		881217	0					
ANR	881490	ArgumentList	( char * ) q -> arKey		881217	1					
ANR	881491	Argument	( char * ) q -> arKey		881217	0					
ANR	881492	CastExpression	( char * ) q -> arKey		881217	0					
ANR	881493	CastTarget	char *		881217	0					
ANR	881494	PtrMemberAccess	q -> arKey		881217	1					
ANR	881495	Identifier	q		881217	0					
ANR	881496	Identifier	arKey		881217	1					
ANR	881497	Argument	p -> arKey		881217	1					
ANR	881498	PtrMemberAccess	p -> arKey		881217	0					
ANR	881499	Identifier	p		881217	0					
ANR	881500	Identifier	arKey		881217	1					
ANR	881501	Argument	p -> nKeyLength		881217	2					
ANR	881502	PtrMemberAccess	p -> nKeyLength		881217	0					
ANR	881503	Identifier	p		881217	0					
ANR	881504	Identifier	nKeyLength		881217	1					
ANR	881505	ExpressionStatement	q -> h = p -> h	378:2:11658:11669	881217	2	True				
ANR	881506	AssignmentExpression	q -> h = p -> h		881217	0		=			
ANR	881507	PtrMemberAccess	q -> h		881217	0					
ANR	881508	Identifier	q		881217	0					
ANR	881509	Identifier	h		881217	1					
ANR	881510	PtrMemberAccess	p -> h		881217	1					
ANR	881511	Identifier	p		881217	0					
ANR	881512	Identifier	h		881217	1					
ANR	881513	ExpressionStatement	q -> nKeyLength = p -> nKeyLength	379:2:11673:11702	881217	3	True				
ANR	881514	AssignmentExpression	q -> nKeyLength = p -> nKeyLength		881217	0		=			
ANR	881515	PtrMemberAccess	q -> nKeyLength		881217	0					
ANR	881516	Identifier	q		881217	0					
ANR	881517	Identifier	nKeyLength		881217	1					
ANR	881518	PtrMemberAccess	p -> nKeyLength		881217	1					
ANR	881519	Identifier	p		881217	0					
ANR	881520	Identifier	nKeyLength		881217	1					
ANR	881521	ExpressionStatement	q -> pNext = ht -> arBuckets [ nIndex ]	382:2:11747:11779	881217	4	True				
ANR	881522	AssignmentExpression	q -> pNext = ht -> arBuckets [ nIndex ]		881217	0		=			
ANR	881523	PtrMemberAccess	q -> pNext		881217	0					
ANR	881524	Identifier	q		881217	0					
ANR	881525	Identifier	pNext		881217	1					
ANR	881526	ArrayIndexing	ht -> arBuckets [ nIndex ]		881217	1					
ANR	881527	PtrMemberAccess	ht -> arBuckets		881217	0					
ANR	881528	Identifier	ht		881217	0					
ANR	881529	Identifier	arBuckets		881217	1					
ANR	881530	Identifier	nIndex		881217	1					
ANR	881531	ExpressionStatement	q -> pLast = NULL	383:2:11783:11798	881217	5	True				
ANR	881532	AssignmentExpression	q -> pLast = NULL		881217	0		=			
ANR	881533	PtrMemberAccess	q -> pLast		881217	0					
ANR	881534	Identifier	q		881217	0					
ANR	881535	Identifier	pLast		881217	1					
ANR	881536	Identifier	NULL		881217	1					
ANR	881537	IfStatement	if ( q -> pNext )		881217	6					
ANR	881538	Condition	q -> pNext	384:6:11806:11813	881217	0	True				
ANR	881539	PtrMemberAccess	q -> pNext		881217	0					
ANR	881540	Identifier	q		881217	0					
ANR	881541	Identifier	pNext		881217	1					
ANR	881542	CompoundStatement		62:16:1557:1557	881217	1					
ANR	881543	ExpressionStatement	q -> pNext -> pLast = q	385:3:11821:11840	881217	0	True				
ANR	881544	AssignmentExpression	q -> pNext -> pLast = q		881217	0		=			
ANR	881545	PtrMemberAccess	q -> pNext -> pLast		881217	0					
ANR	881546	PtrMemberAccess	q -> pNext		881217	0					
ANR	881547	Identifier	q		881217	0					
ANR	881548	Identifier	pNext		881217	1					
ANR	881549	Identifier	pLast		881217	1					
ANR	881550	Identifier	q		881217	1					
ANR	881551	ExpressionStatement	ht -> arBuckets [ nIndex ] = q	387:2:11848:11873	881217	7	True				
ANR	881552	AssignmentExpression	ht -> arBuckets [ nIndex ] = q		881217	0		=			
ANR	881553	ArrayIndexing	ht -> arBuckets [ nIndex ]		881217	0					
ANR	881554	PtrMemberAccess	ht -> arBuckets		881217	0					
ANR	881555	Identifier	ht		881217	0					
ANR	881556	Identifier	arBuckets		881217	1					
ANR	881557	Identifier	nIndex		881217	1					
ANR	881558	Identifier	q		881217	1					
ANR	881559	ExpressionStatement	q -> pListLast = ht -> pListTail	390:2:11910:11938	881217	8	True				
ANR	881560	AssignmentExpression	q -> pListLast = ht -> pListTail		881217	0		=			
ANR	881561	PtrMemberAccess	q -> pListLast		881217	0					
ANR	881562	Identifier	q		881217	0					
ANR	881563	Identifier	pListLast		881217	1					
ANR	881564	PtrMemberAccess	ht -> pListTail		881217	1					
ANR	881565	Identifier	ht		881217	0					
ANR	881566	Identifier	pListTail		881217	1					
ANR	881567	ExpressionStatement	ht -> pListTail = q	391:2:11942:11959	881217	9	True				
ANR	881568	AssignmentExpression	ht -> pListTail = q		881217	0		=			
ANR	881569	PtrMemberAccess	ht -> pListTail		881217	0					
ANR	881570	Identifier	ht		881217	0					
ANR	881571	Identifier	pListTail		881217	1					
ANR	881572	Identifier	q		881217	1					
ANR	881573	ExpressionStatement	q -> pListNext = NULL	392:2:11963:11982	881217	10	True				
ANR	881574	AssignmentExpression	q -> pListNext = NULL		881217	0		=			
ANR	881575	PtrMemberAccess	q -> pListNext		881217	0					
ANR	881576	Identifier	q		881217	0					
ANR	881577	Identifier	pListNext		881217	1					
ANR	881578	Identifier	NULL		881217	1					
ANR	881579	ExpressionStatement	* prev = q	393:2:11986:11995	881217	11	True				
ANR	881580	AssignmentExpression	* prev = q		881217	0		=			
ANR	881581	UnaryOperationExpression	* prev		881217	0					
ANR	881582	UnaryOperator	*		881217	0					
ANR	881583	Identifier	prev		881217	1					
ANR	881584	Identifier	q		881217	1					
ANR	881585	ExpressionStatement	prev = & q -> pListNext	394:2:11999:12019	881217	12	True				
ANR	881586	AssignmentExpression	prev = & q -> pListNext		881217	0		=			
ANR	881587	Identifier	prev		881217	0					
ANR	881588	UnaryOperationExpression	& q -> pListNext		881217	1					
ANR	881589	UnaryOperator	&		881217	0					
ANR	881590	PtrMemberAccess	q -> pListNext		881217	1					
ANR	881591	Identifier	q		881217	0					
ANR	881592	Identifier	pListNext		881217	1					
ANR	881593	ExpressionStatement	q -> pData = & q -> pDataPtr	397:2:12042:12065	881217	13	True				
ANR	881594	AssignmentExpression	q -> pData = & q -> pDataPtr		881217	0		=			
ANR	881595	PtrMemberAccess	q -> pData		881217	0					
ANR	881596	Identifier	q		881217	0					
ANR	881597	Identifier	pData		881217	1					
ANR	881598	UnaryOperationExpression	& q -> pDataPtr		881217	1					
ANR	881599	UnaryOperator	&		881217	0					
ANR	881600	PtrMemberAccess	q -> pDataPtr		881217	1					
ANR	881601	Identifier	q		881217	0					
ANR	881602	Identifier	pDataPtr		881217	1					
ANR	881603	IfStatement	if ( ! bind )		881217	14					
ANR	881604	Condition	! bind	398:6:12073:12077	881217	0	True				
ANR	881605	UnaryOperationExpression	! bind		881217	0					
ANR	881606	UnaryOperator	!		881217	0					
ANR	881607	Identifier	bind		881217	1					
ANR	881608	CompoundStatement		76:13:1821:1821	881217	1					
ANR	881609	ExpressionStatement	ALLOC_ZVAL ( ppz )	399:3:12085:12100	881217	0	True				
ANR	881610	CallExpression	ALLOC_ZVAL ( ppz )		881217	0					
ANR	881611	Callee	ALLOC_ZVAL		881217	0					
ANR	881612	Identifier	ALLOC_ZVAL		881217	0					
ANR	881613	ArgumentList	ppz		881217	1					
ANR	881614	Argument	ppz		881217	0					
ANR	881615	Identifier	ppz		881217	0					
ANR	881616	ExpressionStatement	* ppz = * ( ( zval * ) p -> pDataPtr )	400:3:12105:12133	881217	1	True				
ANR	881617	AssignmentExpression	* ppz = * ( ( zval * ) p -> pDataPtr )		881217	0		=			
ANR	881618	UnaryOperationExpression	* ppz		881217	0					
ANR	881619	UnaryOperator	*		881217	0					
ANR	881620	Identifier	ppz		881217	1					
ANR	881621	UnaryOperationExpression	* ( ( zval * ) p -> pDataPtr )		881217	1					
ANR	881622	UnaryOperator	*		881217	0					
ANR	881623	CastExpression	( zval * ) p -> pDataPtr		881217	1					
ANR	881624	CastTarget	zval *		881217	0					
ANR	881625	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881626	Identifier	p		881217	0					
ANR	881627	Identifier	pDataPtr		881217	1					
ANR	881628	ExpressionStatement	INIT_PZVAL ( ppz )	401:3:12138:12153	881217	2	True				
ANR	881629	CallExpression	INIT_PZVAL ( ppz )		881217	0					
ANR	881630	Callee	INIT_PZVAL		881217	0					
ANR	881631	Identifier	INIT_PZVAL		881217	0					
ANR	881632	ArgumentList	ppz		881217	1					
ANR	881633	Argument	ppz		881217	0					
ANR	881634	Identifier	ppz		881217	0					
ANR	881635	ElseStatement	else		881217	0					
ANR	881636	IfStatement	if ( Z_REFCOUNT_P ( ( zval * ) p -> pDataPtr ) == 1 )		881217	0					
ANR	881637	Condition	Z_REFCOUNT_P ( ( zval * ) p -> pDataPtr ) == 1	402:13:12168:12204	881217	0	True				
ANR	881638	EqualityExpression	Z_REFCOUNT_P ( ( zval * ) p -> pDataPtr ) == 1		881217	0		==			
ANR	881639	CallExpression	Z_REFCOUNT_P ( ( zval * ) p -> pDataPtr )		881217	0					
ANR	881640	Callee	Z_REFCOUNT_P		881217	0					
ANR	881641	Identifier	Z_REFCOUNT_P		881217	0					
ANR	881642	ArgumentList	( zval * ) p -> pDataPtr		881217	1					
ANR	881643	Argument	( zval * ) p -> pDataPtr		881217	0					
ANR	881644	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881645	CastTarget	zval *		881217	0					
ANR	881646	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881647	Identifier	p		881217	0					
ANR	881648	Identifier	pDataPtr		881217	1					
ANR	881649	PrimaryExpression	1		881217	1					
ANR	881650	CompoundStatement		80:52:1948:1948	881217	1					
ANR	881651	ExpressionStatement	ALLOC_ZVAL ( ppz )	403:3:12212:12227	881217	0	True				
ANR	881652	CallExpression	ALLOC_ZVAL ( ppz )		881217	0					
ANR	881653	Callee	ALLOC_ZVAL		881217	0					
ANR	881654	Identifier	ALLOC_ZVAL		881217	0					
ANR	881655	ArgumentList	ppz		881217	1					
ANR	881656	Argument	ppz		881217	0					
ANR	881657	Identifier	ppz		881217	0					
ANR	881658	ExpressionStatement	* ppz = * ( ( zval * ) p -> pDataPtr )	404:3:12232:12260	881217	1	True				
ANR	881659	AssignmentExpression	* ppz = * ( ( zval * ) p -> pDataPtr )		881217	0		=			
ANR	881660	UnaryOperationExpression	* ppz		881217	0					
ANR	881661	UnaryOperator	*		881217	0					
ANR	881662	Identifier	ppz		881217	1					
ANR	881663	UnaryOperationExpression	* ( ( zval * ) p -> pDataPtr )		881217	1					
ANR	881664	UnaryOperator	*		881217	0					
ANR	881665	CastExpression	( zval * ) p -> pDataPtr		881217	1					
ANR	881666	CastTarget	zval *		881217	0					
ANR	881667	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881668	Identifier	p		881217	0					
ANR	881669	Identifier	pDataPtr		881217	1					
ANR	881670	ElseStatement	else		881217	0					
ANR	881671	IfStatement	"if ( accel_xlat_get ( p -> pDataPtr , ppz ) != SUCCESS )"		881217	0					
ANR	881672	Condition	"accel_xlat_get ( p -> pDataPtr , ppz ) != SUCCESS"	405:13:12275:12317	881217	0	True				
ANR	881673	EqualityExpression	"accel_xlat_get ( p -> pDataPtr , ppz ) != SUCCESS"		881217	0		!=			
ANR	881674	CallExpression	"accel_xlat_get ( p -> pDataPtr , ppz )"		881217	0					
ANR	881675	Callee	accel_xlat_get		881217	0					
ANR	881676	Identifier	accel_xlat_get		881217	0					
ANR	881677	ArgumentList	p -> pDataPtr		881217	1					
ANR	881678	Argument	p -> pDataPtr		881217	0					
ANR	881679	PtrMemberAccess	p -> pDataPtr		881217	0					
ANR	881680	Identifier	p		881217	0					
ANR	881681	Identifier	pDataPtr		881217	1					
ANR	881682	Argument	ppz		881217	1					
ANR	881683	Identifier	ppz		881217	0					
ANR	881684	Identifier	SUCCESS		881217	1					
ANR	881685	CompoundStatement		83:58:2061:2061	881217	1					
ANR	881686	ExpressionStatement	ALLOC_ZVAL ( ppz )	406:3:12325:12340	881217	0	True				
ANR	881687	CallExpression	ALLOC_ZVAL ( ppz )		881217	0					
ANR	881688	Callee	ALLOC_ZVAL		881217	0					
ANR	881689	Identifier	ALLOC_ZVAL		881217	0					
ANR	881690	ArgumentList	ppz		881217	1					
ANR	881691	Argument	ppz		881217	0					
ANR	881692	Identifier	ppz		881217	0					
ANR	881693	ExpressionStatement	* ppz = * ( ( zval * ) p -> pDataPtr )	407:3:12345:12373	881217	1	True				
ANR	881694	AssignmentExpression	* ppz = * ( ( zval * ) p -> pDataPtr )		881217	0		=			
ANR	881695	UnaryOperationExpression	* ppz		881217	0					
ANR	881696	UnaryOperator	*		881217	0					
ANR	881697	Identifier	ppz		881217	1					
ANR	881698	UnaryOperationExpression	* ( ( zval * ) p -> pDataPtr )		881217	1					
ANR	881699	UnaryOperator	*		881217	0					
ANR	881700	CastExpression	( zval * ) p -> pDataPtr		881217	1					
ANR	881701	CastTarget	zval *		881217	0					
ANR	881702	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881703	Identifier	p		881217	0					
ANR	881704	Identifier	pDataPtr		881217	1					
ANR	881705	ExpressionStatement	"accel_xlat_set ( p -> pDataPtr , ppz )"	408:3:12378:12410	881217	2	True				
ANR	881706	CallExpression	"accel_xlat_set ( p -> pDataPtr , ppz )"		881217	0					
ANR	881707	Callee	accel_xlat_set		881217	0					
ANR	881708	Identifier	accel_xlat_set		881217	0					
ANR	881709	ArgumentList	p -> pDataPtr		881217	1					
ANR	881710	Argument	p -> pDataPtr		881217	0					
ANR	881711	PtrMemberAccess	p -> pDataPtr		881217	0					
ANR	881712	Identifier	p		881217	0					
ANR	881713	Identifier	pDataPtr		881217	1					
ANR	881714	Argument	ppz		881217	1					
ANR	881715	Identifier	ppz		881217	0					
ANR	881716	ElseStatement	else		881217	0					
ANR	881717	CompoundStatement		87:9:2162:2162	881217	0					
ANR	881718	ExpressionStatement	q -> pDataPtr = * ( void * * ) ppz	410:3:12426:12452	881217	0	True				
ANR	881719	AssignmentExpression	q -> pDataPtr = * ( void * * ) ppz		881217	0		=			
ANR	881720	PtrMemberAccess	q -> pDataPtr		881217	0					
ANR	881721	Identifier	q		881217	0					
ANR	881722	Identifier	pDataPtr		881217	1					
ANR	881723	UnaryOperationExpression	* ( void * * ) ppz		881217	1					
ANR	881724	UnaryOperator	*		881217	0					
ANR	881725	CastExpression	( void * * ) ppz		881217	1					
ANR	881726	CastTarget	void * *		881217	0					
ANR	881727	Identifier	ppz		881217	1					
ANR	881728	ExpressionStatement	p = p -> pListNext	411:3:12457:12473	881217	1	True				
ANR	881729	AssignmentExpression	p = p -> pListNext		881217	0		=			
ANR	881730	Identifier	p		881217	0					
ANR	881731	PtrMemberAccess	p -> pListNext		881217	1					
ANR	881732	Identifier	p		881217	0					
ANR	881733	Identifier	pListNext		881217	1					
ANR	881734	ContinueStatement	continue ;	412:3:12478:12486	881217	2	True				
ANR	881735	ExpressionStatement	q -> pDataPtr = ( void * ) ppz	414:2:12494:12518	881217	15	True				
ANR	881736	AssignmentExpression	q -> pDataPtr = ( void * ) ppz		881217	0		=			
ANR	881737	PtrMemberAccess	q -> pDataPtr		881217	0					
ANR	881738	Identifier	q		881217	0					
ANR	881739	Identifier	pDataPtr		881217	1					
ANR	881740	CastExpression	( void * ) ppz		881217	1					
ANR	881741	CastTarget	void *		881217	0					
ANR	881742	Identifier	ppz		881217	1					
ANR	881743	IfStatement	if ( ( Z_TYPE_P ( ( zval * ) p -> pDataPtr ) & IS_CONSTANT_TYPE_MASK ) >= IS_ARRAY )		881217	16					
ANR	881744	Condition	( Z_TYPE_P ( ( zval * ) p -> pDataPtr ) & IS_CONSTANT_TYPE_MASK ) >= IS_ARRAY	417:6:12573:12638	881217	0	True				
ANR	881745	RelationalExpression	( Z_TYPE_P ( ( zval * ) p -> pDataPtr ) & IS_CONSTANT_TYPE_MASK ) >= IS_ARRAY		881217	0		>=			
ANR	881746	BitAndExpression	Z_TYPE_P ( ( zval * ) p -> pDataPtr ) & IS_CONSTANT_TYPE_MASK		881217	0		&			
ANR	881747	CallExpression	Z_TYPE_P ( ( zval * ) p -> pDataPtr )		881217	0					
ANR	881748	Callee	Z_TYPE_P		881217	0					
ANR	881749	Identifier	Z_TYPE_P		881217	0					
ANR	881750	ArgumentList	( zval * ) p -> pDataPtr		881217	1					
ANR	881751	Argument	( zval * ) p -> pDataPtr		881217	0					
ANR	881752	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881753	CastTarget	zval *		881217	0					
ANR	881754	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881755	Identifier	p		881217	0					
ANR	881756	Identifier	pDataPtr		881217	1					
ANR	881757	Identifier	IS_CONSTANT_TYPE_MASK		881217	1					
ANR	881758	Identifier	IS_ARRAY		881217	1					
ANR	881759	CompoundStatement		95:74:2382:2382	881217	1					
ANR	881760	SwitchStatement	switch ( ( Z_TYPE_P ( ( zval * ) p -> pDataPtr ) & IS_CONSTANT_TYPE_MASK ) )		881217	0					
ANR	881761	Condition	Z_TYPE_P ( ( zval * ) p -> pDataPtr ) & IS_CONSTANT_TYPE_MASK	418:11:12654:12707	881217	0	True				
ANR	881762	BitAndExpression	Z_TYPE_P ( ( zval * ) p -> pDataPtr ) & IS_CONSTANT_TYPE_MASK		881217	0		&			
ANR	881763	CallExpression	Z_TYPE_P ( ( zval * ) p -> pDataPtr )		881217	0					
ANR	881764	Callee	Z_TYPE_P		881217	0					
ANR	881765	Identifier	Z_TYPE_P		881217	0					
ANR	881766	ArgumentList	( zval * ) p -> pDataPtr		881217	1					
ANR	881767	Argument	( zval * ) p -> pDataPtr		881217	0					
ANR	881768	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881769	CastTarget	zval *		881217	0					
ANR	881770	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881771	Identifier	p		881217	0					
ANR	881772	Identifier	pDataPtr		881217	1					
ANR	881773	Identifier	IS_CONSTANT_TYPE_MASK		881217	1					
ANR	881774	CompoundStatement		96:67:2451:2451	881217	1					
ANR	881775	Label	case IS_STRING :	423:4:12868:12882	881217	0	True				
ANR	881776	Identifier	IS_STRING		881217	0					
ANR	881777	Label	case IS_CONSTANT :	424:4:12888:12904	881217	1	True				
ANR	881778	Identifier	IS_CONSTANT		881217	0					
ANR	881779	ExpressionStatement	"Z_STRVAL_P ( ppz ) = ( char * ) interned_estrndup ( Z_STRVAL_P ( ( zval * ) p -> pDataPtr ) , Z_STRLEN_P ( ( zval * ) p -> pDataPtr ) )"	425:5:12911:13019	881217	2	True				
ANR	881780	AssignmentExpression	"Z_STRVAL_P ( ppz ) = ( char * ) interned_estrndup ( Z_STRVAL_P ( ( zval * ) p -> pDataPtr ) , Z_STRLEN_P ( ( zval * ) p -> pDataPtr ) )"		881217	0		=			
ANR	881781	CallExpression	Z_STRVAL_P ( ppz )		881217	0					
ANR	881782	Callee	Z_STRVAL_P		881217	0					
ANR	881783	Identifier	Z_STRVAL_P		881217	0					
ANR	881784	ArgumentList	ppz		881217	1					
ANR	881785	Argument	ppz		881217	0					
ANR	881786	Identifier	ppz		881217	0					
ANR	881787	CastExpression	"( char * ) interned_estrndup ( Z_STRVAL_P ( ( zval * ) p -> pDataPtr ) , Z_STRLEN_P ( ( zval * ) p -> pDataPtr ) )"		881217	1					
ANR	881788	CastTarget	char *		881217	0					
ANR	881789	CallExpression	"interned_estrndup ( Z_STRVAL_P ( ( zval * ) p -> pDataPtr ) , Z_STRLEN_P ( ( zval * ) p -> pDataPtr ) )"		881217	1					
ANR	881790	Callee	interned_estrndup		881217	0					
ANR	881791	Identifier	interned_estrndup		881217	0					
ANR	881792	ArgumentList	Z_STRVAL_P ( ( zval * ) p -> pDataPtr )		881217	1					
ANR	881793	Argument	Z_STRVAL_P ( ( zval * ) p -> pDataPtr )		881217	0					
ANR	881794	CallExpression	Z_STRVAL_P ( ( zval * ) p -> pDataPtr )		881217	0					
ANR	881795	Callee	Z_STRVAL_P		881217	0					
ANR	881796	Identifier	Z_STRVAL_P		881217	0					
ANR	881797	ArgumentList	( zval * ) p -> pDataPtr		881217	1					
ANR	881798	Argument	( zval * ) p -> pDataPtr		881217	0					
ANR	881799	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881800	CastTarget	zval *		881217	0					
ANR	881801	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881802	Identifier	p		881217	0					
ANR	881803	Identifier	pDataPtr		881217	1					
ANR	881804	Argument	Z_STRLEN_P ( ( zval * ) p -> pDataPtr )		881217	1					
ANR	881805	CallExpression	Z_STRLEN_P ( ( zval * ) p -> pDataPtr )		881217	0					
ANR	881806	Callee	Z_STRLEN_P		881217	0					
ANR	881807	Identifier	Z_STRLEN_P		881217	0					
ANR	881808	ArgumentList	( zval * ) p -> pDataPtr		881217	1					
ANR	881809	Argument	( zval * ) p -> pDataPtr		881217	0					
ANR	881810	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881811	CastTarget	zval *		881217	0					
ANR	881812	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881813	Identifier	p		881217	0					
ANR	881814	Identifier	pDataPtr		881217	1					
ANR	881815	BreakStatement	break ;	426:5:13026:13031	881217	3	True				
ANR	881816	Label	case IS_ARRAY :	427:4:13037:13050	881217	4	True				
ANR	881817	Identifier	IS_ARRAY		881217	0					
ANR	881818	Label	case IS_CONSTANT_ARRAY :	429:4:13100:13122	881217	5	True				
ANR	881819	Identifier	IS_CONSTANT_ARRAY		881217	0					
ANR	881820	IfStatement	if ( ( ( zval * ) p -> pDataPtr ) -> value . ht && ( ( zval * ) p -> pDataPtr ) -> value . ht != & EG ( symbol_table ) )		881217	6					
ANR	881821	Condition	( ( zval * ) p -> pDataPtr ) -> value . ht && ( ( zval * ) p -> pDataPtr ) -> value . ht != & EG ( symbol_table )	431:9:13140:13224	881217	0	True				
ANR	881822	AndExpression	( ( zval * ) p -> pDataPtr ) -> value . ht && ( ( zval * ) p -> pDataPtr ) -> value . ht != & EG ( symbol_table )		881217	0		&&			
ANR	881823	MemberAccess	( ( zval * ) p -> pDataPtr ) -> value . ht		881217	0					
ANR	881824	PtrMemberAccess	( ( zval * ) p -> pDataPtr ) -> value		881217	0					
ANR	881825	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881826	CastTarget	zval *		881217	0					
ANR	881827	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881828	Identifier	p		881217	0					
ANR	881829	Identifier	pDataPtr		881217	1					
ANR	881830	Identifier	value		881217	1					
ANR	881831	Identifier	ht		881217	1					
ANR	881832	EqualityExpression	( ( zval * ) p -> pDataPtr ) -> value . ht != & EG ( symbol_table )		881217	1		!=			
ANR	881833	MemberAccess	( ( zval * ) p -> pDataPtr ) -> value . ht		881217	0					
ANR	881834	PtrMemberAccess	( ( zval * ) p -> pDataPtr ) -> value		881217	0					
ANR	881835	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881836	CastTarget	zval *		881217	0					
ANR	881837	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881838	Identifier	p		881217	0					
ANR	881839	Identifier	pDataPtr		881217	1					
ANR	881840	Identifier	value		881217	1					
ANR	881841	Identifier	ht		881217	1					
ANR	881842	UnaryOperationExpression	& EG ( symbol_table )		881217	1					
ANR	881843	UnaryOperator	&		881217	0					
ANR	881844	CallExpression	EG ( symbol_table )		881217	1					
ANR	881845	Callee	EG		881217	0					
ANR	881846	Identifier	EG		881217	0					
ANR	881847	ArgumentList	symbol_table		881217	1					
ANR	881848	Argument	symbol_table		881217	0					
ANR	881849	Identifier	symbol_table		881217	0					
ANR	881850	CompoundStatement		109:96:2968:2968	881217	1					
ANR	881851	ExpressionStatement	ALLOC_HASHTABLE ( ppz -> value . ht )	432:6:13235:13265	881217	0	True				
ANR	881852	CallExpression	ALLOC_HASHTABLE ( ppz -> value . ht )		881217	0					
ANR	881853	Callee	ALLOC_HASHTABLE		881217	0					
ANR	881854	Identifier	ALLOC_HASHTABLE		881217	0					
ANR	881855	ArgumentList	ppz -> value . ht		881217	1					
ANR	881856	Argument	ppz -> value . ht		881217	0					
ANR	881857	MemberAccess	ppz -> value . ht		881217	0					
ANR	881858	PtrMemberAccess	ppz -> value		881217	0					
ANR	881859	Identifier	ppz		881217	0					
ANR	881860	Identifier	value		881217	1					
ANR	881861	Identifier	ht		881217	1					
ANR	881862	ExpressionStatement	"zend_hash_clone_zval ( ppz -> value . ht , ( ( zval * ) p -> pDataPtr ) -> value . ht , 0 )"	433:6:13273:13343	881217	1	True				
ANR	881863	CallExpression	"zend_hash_clone_zval ( ppz -> value . ht , ( ( zval * ) p -> pDataPtr ) -> value . ht , 0 )"		881217	0					
ANR	881864	Callee	zend_hash_clone_zval		881217	0					
ANR	881865	Identifier	zend_hash_clone_zval		881217	0					
ANR	881866	ArgumentList	ppz -> value . ht		881217	1					
ANR	881867	Argument	ppz -> value . ht		881217	0					
ANR	881868	MemberAccess	ppz -> value . ht		881217	0					
ANR	881869	PtrMemberAccess	ppz -> value		881217	0					
ANR	881870	Identifier	ppz		881217	0					
ANR	881871	Identifier	value		881217	1					
ANR	881872	Identifier	ht		881217	1					
ANR	881873	Argument	( ( zval * ) p -> pDataPtr ) -> value . ht		881217	1					
ANR	881874	MemberAccess	( ( zval * ) p -> pDataPtr ) -> value . ht		881217	0					
ANR	881875	PtrMemberAccess	( ( zval * ) p -> pDataPtr ) -> value		881217	0					
ANR	881876	CastExpression	( zval * ) p -> pDataPtr		881217	0					
ANR	881877	CastTarget	zval *		881217	0					
ANR	881878	PtrMemberAccess	p -> pDataPtr		881217	1					
ANR	881879	Identifier	p		881217	0					
ANR	881880	Identifier	pDataPtr		881217	1					
ANR	881881	Identifier	value		881217	1					
ANR	881882	Identifier	ht		881217	1					
ANR	881883	Argument	0		881217	2					
ANR	881884	PrimaryExpression	0		881217	0					
ANR	881885	BreakStatement	break ;	435:5:13357:13362	881217	7	True				
ANR	881886	Label	case IS_CONSTANT_AST :	437:4:13413:13433	881217	8	True				
ANR	881887	Identifier	IS_CONSTANT_AST		881217	0					
ANR	881888	Statement	Z_AST_P	438:5:13440:13446	881217	9	True				
ANR	881889	Statement	(	438:12:13447:13447	881217	10	True				
ANR	881890	Statement	ppz	438:13:13448:13450	881217	11	True				
ANR	881891	Statement	)	438:16:13451:13451	881217	12	True				
ANR	881892	Statement	=	438:18:13453:13453	881217	13	True				
ANR	881893	Statement	zend_ast_clone	438:20:13455:13468	881217	14	True				
ANR	881894	Statement	(	438:34:13469:13469	881217	15	True				
ANR	881895	Statement	Z_AST_P	438:35:13470:13476	881217	16	True				
ANR	881896	Statement	(	438:42:13477:13477	881217	17	True				
ANR	881897	Statement	ppz	438:43:13478:13480	881217	18	True				
ANR	881898	Statement	)	438:46:13481:13481	881217	19	True				
ANR	881899	Statement	TSRMLS_CC	438:48:13483:13491	881217	20	True				
ANR	881900	Statement	)	438:57:13492:13492	881217	21	True				
ANR	881901	ExpressionStatement		438:58:13493:13493	881217	22	True				
ANR	881902	BreakStatement	break ;	439:5:13500:13505	881217	23	True				
ANR	881903	ExpressionStatement	p = p -> pListNext	444:2:13526:13542	881217	17	True				
ANR	881904	AssignmentExpression	p = p -> pListNext		881217	0		=			
ANR	881905	Identifier	p		881217	0					
ANR	881906	PtrMemberAccess	p -> pListNext		881217	1					
ANR	881907	Identifier	p		881217	0					
ANR	881908	Identifier	pListNext		881217	1					
ANR	881909	ExpressionStatement	ht -> pInternalPointer = ht -> pListHead	446:1:13548:13584	881217	22	True				
ANR	881910	AssignmentExpression	ht -> pInternalPointer = ht -> pListHead		881217	0		=			
ANR	881911	PtrMemberAccess	ht -> pInternalPointer		881217	0					
ANR	881912	Identifier	ht		881217	0					
ANR	881913	Identifier	pInternalPointer		881217	1					
ANR	881914	PtrMemberAccess	ht -> pListHead		881217	1					
ANR	881915	Identifier	ht		881217	0					
ANR	881916	Identifier	pListHead		881217	1					
ANR	881917	ReturnType	static void		881217	1					
ANR	881918	Identifier	zend_hash_clone_zval		881217	2					
ANR	881919	ParameterList	"HashTable * ht , HashTable * source , int bind"		881217	3					
ANR	881920	Parameter	HashTable * ht	322:33:10214:10226	881217	0	True				
ANR	881921	ParameterType	HashTable *		881217	0					
ANR	881922	Identifier	ht		881217	1					
ANR	881923	Parameter	HashTable * source	322:48:10229:10245	881217	1	True				
ANR	881924	ParameterType	HashTable *		881217	0					
ANR	881925	Identifier	source		881217	1					
ANR	881926	Parameter	int bind	322:67:10248:10255	881217	2	True				
ANR	881927	ParameterType	int		881217	0					
ANR	881928	Identifier	bind		881217	1					
ANR	881929	CFGEntryNode	ENTRY		881217		True				
ANR	881930	CFGExitNode	EXIT		881217		True				
ANR	881931	Symbol	* ht -> arBuckets		881217						
ANR	881932	Symbol	prev		881217						
ANR	881933	Symbol	source -> pListHead		881217						
ANR	881934	Symbol	ht -> pDestructor		881217						
ANR	881935	Symbol	q -> pListLast		881217						
ANR	881936	Symbol	source		881217						
ANR	881937	Symbol	ht		881217						
ANR	881938	Symbol	Z_REFCOUNT_P		881217						
ANR	881939	Symbol	bind		881217						
ANR	881940	Symbol	ht -> arBuckets		881217						
ANR	881941	Symbol	* source		881217						
ANR	881942	Symbol	ht -> bApplyProtection		881217						
ANR	881943	Symbol	( ( zval * ) p -> pDataPtr ) -> value . ht		881217						
ANR	881944	Symbol	ecalloc		881217						
ANR	881945	Symbol	q -> pNext		881217						
ANR	881946	Symbol	ht -> pInternalPointer		881217						
ANR	881947	Symbol	& q -> pDataPtr		881217						
ANR	881948	Symbol	& uninitialized_bucket		881217						
ANR	881949	Symbol	* nIndex		881217						
ANR	881950	Symbol	source -> nTableSize		881217						
ANR	881951	Symbol	p -> h		881217						
ANR	881952	Symbol	& ht -> pListHead		881217						
ANR	881953	Symbol	NULL		881217						
ANR	881954	Symbol	q -> h		881217						
ANR	881955	Symbol	source -> nTableMask		881217						
ANR	881956	Symbol	ht -> nApplyCount		881217						
ANR	881957	Symbol	ht -> nNextFreeElement		881217						
ANR	881958	Symbol	symbol_table		881217						
ANR	881959	Symbol	* q -> pNext		881217						
ANR	881960	Symbol	ZVAL_PTR_DTOR		881217						
ANR	881961	Symbol	* p -> pDataPtr		881217						
ANR	881962	Symbol	q -> pNext -> pLast		881217						
ANR	881963	Symbol	IS_INTERNED		881217						
ANR	881964	Symbol	& q -> pListNext		881217						
ANR	881965	Symbol	interned_estrndup		881217						
ANR	881966	Symbol	p -> arKey		881217						
ANR	881967	Symbol	ht -> nTableMask		881217						
ANR	881968	Symbol	ht -> persistent		881217						
ANR	881969	Symbol	ht -> inconsistent		881217						
ANR	881970	Symbol	* prev		881217						
ANR	881971	Symbol	* ( ( zval * ) p -> pDataPtr )		881217						
ANR	881972	Symbol	ht -> pListTail		881217						
ANR	881973	Symbol	& EG		881217						
ANR	881974	Symbol	* ht		881217						
ANR	881975	Symbol	emalloc		881217						
ANR	881976	Symbol	IS_ARRAY		881217						
ANR	881977	Symbol	ht -> nTableSize		881217						
ANR	881978	Symbol	q -> nKeyLength		881217						
ANR	881979	Symbol	* ( void * * ) ppz		881217						
ANR	881980	Symbol	ht -> pListHead		881217						
ANR	881981	Symbol	* * q		881217						
ANR	881982	Symbol	Z_STRLEN_P		881217						
ANR	881983	Symbol	* * p		881217						
ANR	881984	Symbol	ppz -> value		881217						
ANR	881985	Symbol	ht -> nNumOfElements		881217						
ANR	881986	Symbol	p -> pDataPtr		881217						
ANR	881987	Symbol	q -> pDataPtr		881217						
ANR	881988	Symbol	SUCCESS		881217						
ANR	881989	Symbol	* ppz		881217						
ANR	881990	Symbol	p -> nKeyLength		881217						
ANR	881991	Symbol	nIndex		881217						
ANR	881992	Symbol	IS_CONSTANT_TYPE_MASK		881217						
ANR	881993	Symbol	Z_TYPE_P		881217						
ANR	881994	Symbol	Z_STRVAL_P		881217						
ANR	881995	Symbol	q -> pListNext		881217						
ANR	881996	Symbol	q -> pData		881217						
ANR	881997	Symbol	p		881217						
ANR	881998	Symbol	q		881217						
ANR	881999	Symbol	( ( zval * ) p -> pDataPtr ) -> value		881217						
ANR	882000	Symbol	accel_xlat_get		881217						
ANR	882001	Symbol	p -> pListNext		881217						
ANR	882002	Symbol	ppz -> value . ht		881217						
ANR	882003	Symbol	source -> nNextFreeElement		881217						
ANR	882004	Symbol	q -> arKey		881217						
ANR	882005	Symbol	source -> nNumOfElements		881217						
ANR	882006	Symbol	* p		881217						
ANR	882007	Symbol	* * ht		881217						
ANR	882008	Symbol	ppz		881217						
ANR	882009	Symbol	* q		881217						
ANR	882010	Symbol	q -> pLast		881217						
ANR	882011	DeclStmt									
ANR	882012	Decl							Bucket	Bucket *	p
ANR	882013	Decl							Bucket	Bucket *	q
ANR	882014	Decl							Bucket	Bucket * *	prev
ANR	882015	DeclStmt									
ANR	882016	Decl							ulong	ulong	nIndex
ANR	882017	DeclStmt									
ANR	882018	Decl							zend_class_entry	zend_class_entry * *	new_ce
ANR	882019	DeclStmt									
ANR	882020	Decl							zend_function	zend_function * *	new_prototype
ANR	882021	DeclStmt									
ANR	882022	Decl							zend_op_array	zend_op_array *	new_entry
ANR	882023	DeclStmt									
ANR	882024	Decl							Bucket	Bucket *	p
ANR	882025	Decl							Bucket	Bucket *	q
ANR	882026	Decl							Bucket	Bucket * *	prev
ANR	882027	DeclStmt									
ANR	882028	Decl							ulong	ulong	nIndex
ANR	882029	DeclStmt									
ANR	882030	Decl							zend_class_entry	zend_class_entry * *	new_ce
ANR	882031	DeclStmt									
ANR	882032	Decl							zend_property_info	zend_property_info *	prop_info
ANR	882033	Function	zend_prepare_function_for_execution	663:0:19487:19921							
ANR	882034	FunctionDef	zend_prepare_function_for_execution (zend_op_array * op_array)		882033	0					
ANR	882035	CompoundStatement		664:0:19559:19921	882033	0					
ANR	882036	IdentifierDeclStatement	HashTable * shared_statics = op_array -> static_variables ;	665:1:19562:19616	882033	0	True				
ANR	882037	IdentifierDecl	* shared_statics = op_array -> static_variables		882033	0					
ANR	882038	IdentifierDeclType	HashTable *		882033	0					
ANR	882039	Identifier	shared_statics		882033	1					
ANR	882040	AssignmentExpression	* shared_statics = op_array -> static_variables		882033	2		=			
ANR	882041	Identifier	shared_statics		882033	0					
ANR	882042	PtrMemberAccess	op_array -> static_variables		882033	1					
ANR	882043	Identifier	op_array		882033	0					
ANR	882044	Identifier	static_variables		882033	1					
ANR	882045	ExpressionStatement	op_array -> refcount = & zend_accel_refcount	668:1:19651:19692	882033	1	True				
ANR	882046	AssignmentExpression	op_array -> refcount = & zend_accel_refcount		882033	0		=			
ANR	882047	PtrMemberAccess	op_array -> refcount		882033	0					
ANR	882048	Identifier	op_array		882033	0					
ANR	882049	Identifier	refcount		882033	1					
ANR	882050	UnaryOperationExpression	& zend_accel_refcount		882033	1					
ANR	882051	UnaryOperator	&		882033	0					
ANR	882052	Identifier	zend_accel_refcount		882033	1					
ANR	882053	ExpressionStatement	( * op_array -> refcount ) = ZEND_PROTECTED_REFCOUNT	669:1:19695:19742	882033	2	True				
ANR	882054	AssignmentExpression	( * op_array -> refcount ) = ZEND_PROTECTED_REFCOUNT		882033	0		=			
ANR	882055	UnaryOperationExpression	* op_array -> refcount		882033	0					
ANR	882056	UnaryOperator	*		882033	0					
ANR	882057	PtrMemberAccess	op_array -> refcount		882033	1					
ANR	882058	Identifier	op_array		882033	0					
ANR	882059	Identifier	refcount		882033	1					
ANR	882060	Identifier	ZEND_PROTECTED_REFCOUNT		882033	1					
ANR	882061	IfStatement	if ( shared_statics )		882033	3					
ANR	882062	Condition	shared_statics	672:5:19770:19783	882033	0	True				
ANR	882063	Identifier	shared_statics		882033	0					
ANR	882064	CompoundStatement		9:21:226:226	882033	1					
ANR	882065	ExpressionStatement	ALLOC_HASHTABLE ( op_array -> static_variables )	673:2:19790:19833	882033	0	True				
ANR	882066	CallExpression	ALLOC_HASHTABLE ( op_array -> static_variables )		882033	0					
ANR	882067	Callee	ALLOC_HASHTABLE		882033	0					
ANR	882068	Identifier	ALLOC_HASHTABLE		882033	0					
ANR	882069	ArgumentList	op_array -> static_variables		882033	1					
ANR	882070	Argument	op_array -> static_variables		882033	0					
ANR	882071	PtrMemberAccess	op_array -> static_variables		882033	0					
ANR	882072	Identifier	op_array		882033	0					
ANR	882073	Identifier	static_variables		882033	1					
ANR	882074	ExpressionStatement	"zend_hash_clone_zval ( op_array -> static_variables , shared_statics , 0 )"	674:2:19837:19904	882033	1	True				
ANR	882075	CallExpression	"zend_hash_clone_zval ( op_array -> static_variables , shared_statics , 0 )"		882033	0					
ANR	882076	Callee	zend_hash_clone_zval		882033	0					
ANR	882077	Identifier	zend_hash_clone_zval		882033	0					
ANR	882078	ArgumentList	op_array -> static_variables		882033	1					
ANR	882079	Argument	op_array -> static_variables		882033	0					
ANR	882080	PtrMemberAccess	op_array -> static_variables		882033	0					
ANR	882081	Identifier	op_array		882033	0					
ANR	882082	Identifier	static_variables		882033	1					
ANR	882083	Argument	shared_statics		882033	1					
ANR	882084	Identifier	shared_statics		882033	0					
ANR	882085	Argument	0		882033	2					
ANR	882086	PrimaryExpression	0		882033	0					
ANR	882087	ReturnStatement	return 0 ;	677:1:19911:19919	882033	4	True				
ANR	882088	PrimaryExpression	0		882033	0					
ANR	882089	ReturnType	static int		882033	1					
ANR	882090	Identifier	zend_prepare_function_for_execution		882033	2					
ANR	882091	ParameterList	zend_op_array * op_array		882033	3					
ANR	882092	Parameter	zend_op_array * op_array	663:47:19534:19556	882033	0	True				
ANR	882093	ParameterType	zend_op_array *		882033	0					
ANR	882094	Identifier	op_array		882033	1					
ANR	882095	CFGEntryNode	ENTRY		882033		True				
ANR	882096	CFGExitNode	EXIT		882033		True				
ANR	882097	Symbol	ZEND_PROTECTED_REFCOUNT		882033						
ANR	882098	Symbol	op_array -> static_variables		882033						
ANR	882099	Symbol	* op_array -> refcount		882033						
ANR	882100	Symbol	* * op_array		882033						
ANR	882101	Symbol	op_array		882033						
ANR	882102	Symbol	* op_array		882033						
ANR	882103	Symbol	op_array -> refcount		882033						
ANR	882104	Symbol	shared_statics		882033						
ANR	882105	Symbol	& zend_accel_refcount		882033						
ANR	882106	Function	zend_class_copy_ctor	692:0:20303:26881							
ANR	882107	FunctionDef	zend_class_copy_ctor (zend_class_entry * * pce)		882106	0					
ANR	882108	CompoundStatement		693:0:20360:26881	882106	0					
ANR	882109	IdentifierDeclStatement	zend_class_entry * ce = * pce ;	694:1:20363:20390	882106	0	True				
ANR	882110	IdentifierDecl	* ce = * pce		882106	0					
ANR	882111	IdentifierDeclType	zend_class_entry *		882106	0					
ANR	882112	Identifier	ce		882106	1					
ANR	882113	AssignmentExpression	* ce = * pce		882106	2		=			
ANR	882114	Identifier	ce		882106	0					
ANR	882115	UnaryOperationExpression	* pce		882106	1					
ANR	882116	UnaryOperator	*		882106	0					
ANR	882117	Identifier	pce		882106	1					
ANR	882118	IdentifierDeclStatement	zend_class_entry * old_ce = ce ;	695:1:20393:20422	882106	1	True				
ANR	882119	IdentifierDecl	* old_ce = ce		882106	0					
ANR	882120	IdentifierDeclType	zend_class_entry *		882106	0					
ANR	882121	Identifier	old_ce		882106	1					
ANR	882122	AssignmentExpression	* old_ce = ce		882106	2		=			
ANR	882123	Identifier	ce		882106	0					
ANR	882124	Identifier	ce		882106	1					
ANR	882125	IdentifierDeclStatement	zend_class_entry * * new_ce ;	696:1:20425:20450	882106	2	True				
ANR	882126	IdentifierDecl	* * new_ce		882106	0					
ANR	882127	IdentifierDeclType	zend_class_entry * *		882106	0					
ANR	882128	Identifier	new_ce		882106	1					
ANR	882129	IdentifierDeclStatement	zend_function * * new_func ;	697:1:20453:20477	882106	3	True				
ANR	882130	IdentifierDecl	* * new_func		882106	0					
ANR	882131	IdentifierDeclType	zend_function * *		882106	0					
ANR	882132	Identifier	new_func		882106	1					
ANR	882133	ExpressionStatement	TSRMLS_FETCH ( )	698:1:20480:20494	882106	4	True				
ANR	882134	CallExpression	TSRMLS_FETCH ( )		882106	0					
ANR	882135	Callee	TSRMLS_FETCH		882106	0					
ANR	882136	Identifier	TSRMLS_FETCH		882106	0					
ANR	882137	ArgumentList			882106	1					
ANR	882138	ExpressionStatement	* pce = ce = emalloc ( sizeof ( zend_class_entry ) )	700:1:20498:20543	882106	5	True				
ANR	882139	AssignmentExpression	* pce = ce = emalloc ( sizeof ( zend_class_entry ) )		882106	0		=			
ANR	882140	UnaryOperationExpression	* pce		882106	0					
ANR	882141	UnaryOperator	*		882106	0					
ANR	882142	Identifier	pce		882106	1					
ANR	882143	AssignmentExpression	ce = emalloc ( sizeof ( zend_class_entry ) )		882106	1		=			
ANR	882144	Identifier	ce		882106	0					
ANR	882145	CallExpression	emalloc ( sizeof ( zend_class_entry ) )		882106	1					
ANR	882146	Callee	emalloc		882106	0					
ANR	882147	Identifier	emalloc		882106	0					
ANR	882148	ArgumentList	sizeof ( zend_class_entry )		882106	1					
ANR	882149	Argument	sizeof ( zend_class_entry )		882106	0					
ANR	882150	SizeofExpression	sizeof ( zend_class_entry )		882106	0					
ANR	882151	Sizeof	sizeof		882106	0					
ANR	882152	SizeofOperand	zend_class_entry		882106	1					
ANR	882153	ExpressionStatement	* ce = * old_ce	701:1:20546:20559	882106	6	True				
ANR	882154	AssignmentExpression	* ce = * old_ce		882106	0		=			
ANR	882155	UnaryOperationExpression	* ce		882106	0					
ANR	882156	UnaryOperator	*		882106	0					
ANR	882157	Identifier	ce		882106	1					
ANR	882158	UnaryOperationExpression	* old_ce		882106	1					
ANR	882159	UnaryOperator	*		882106	0					
ANR	882160	Identifier	old_ce		882106	1					
ANR	882161	ExpressionStatement	ce -> refcount = 1	702:1:20562:20578	882106	7	True				
ANR	882162	AssignmentExpression	ce -> refcount = 1		882106	0		=			
ANR	882163	PtrMemberAccess	ce -> refcount		882106	0					
ANR	882164	Identifier	ce		882106	0					
ANR	882165	Identifier	refcount		882106	1					
ANR	882166	PrimaryExpression	1		882106	1					
ANR	882167	IfStatement	if ( old_ce -> refcount != 1 )		882106	8					
ANR	882168	Condition	old_ce -> refcount != 1	704:5:20586:20606	882106	0	True				
ANR	882169	EqualityExpression	old_ce -> refcount != 1		882106	0		!=			
ANR	882170	PtrMemberAccess	old_ce -> refcount		882106	0					
ANR	882171	Identifier	old_ce		882106	0					
ANR	882172	Identifier	refcount		882106	1					
ANR	882173	PrimaryExpression	1		882106	1					
ANR	882174	CompoundStatement		12:28:248:248	882106	1					
ANR	882175	ExpressionStatement	"accel_xlat_set ( old_ce , ce )"	706:2:20678:20704	882106	0	True				
ANR	882176	CallExpression	"accel_xlat_set ( old_ce , ce )"		882106	0					
ANR	882177	Callee	accel_xlat_set		882106	0					
ANR	882178	Identifier	accel_xlat_set		882106	0					
ANR	882179	ArgumentList	old_ce		882106	1					
ANR	882180	Argument	old_ce		882106	0					
ANR	882181	Identifier	old_ce		882106	0					
ANR	882182	Argument	ce		882106	1					
ANR	882183	Identifier	ce		882106	0					
ANR	882184	IfStatement	if ( old_ce -> default_properties_table )		882106	9					
ANR	882185	Condition	old_ce -> default_properties_table	710:5:20760:20791	882106	0	True				
ANR	882186	PtrMemberAccess	old_ce -> default_properties_table		882106	0					
ANR	882187	Identifier	old_ce		882106	0					
ANR	882188	Identifier	default_properties_table		882106	1					
ANR	882189	CompoundStatement		19:2:437:442	882106	1					
ANR	882190	IdentifierDeclStatement	int i ;	711:2:20798:20803	882106	0	True				
ANR	882191	IdentifierDecl	i		882106	0					
ANR	882192	IdentifierDeclType	int		882106	0					
ANR	882193	Identifier	i		882106	1					
ANR	882194	ExpressionStatement	ce -> default_properties_table = emalloc ( sizeof ( zval * ) * old_ce -> default_properties_count )	713:2:20808:20896	882106	1	True				
ANR	882195	AssignmentExpression	ce -> default_properties_table = emalloc ( sizeof ( zval * ) * old_ce -> default_properties_count )		882106	0		=			
ANR	882196	PtrMemberAccess	ce -> default_properties_table		882106	0					
ANR	882197	Identifier	ce		882106	0					
ANR	882198	Identifier	default_properties_table		882106	1					
ANR	882199	CallExpression	emalloc ( sizeof ( zval * ) * old_ce -> default_properties_count )		882106	1					
ANR	882200	Callee	emalloc		882106	0					
ANR	882201	Identifier	emalloc		882106	0					
ANR	882202	ArgumentList	sizeof ( zval * ) * old_ce -> default_properties_count		882106	1					
ANR	882203	Argument	sizeof ( zval * ) * old_ce -> default_properties_count		882106	0					
ANR	882204	MultiplicativeExpression	sizeof ( zval * ) * old_ce -> default_properties_count		882106	0		*			
ANR	882205	SizeofExpression	sizeof ( zval * )		882106	0					
ANR	882206	Sizeof	sizeof		882106	0					
ANR	882207	SizeofOperand	zval *		882106	1					
ANR	882208	PtrMemberAccess	old_ce -> default_properties_count		882106	1					
ANR	882209	Identifier	old_ce		882106	0					
ANR	882210	Identifier	default_properties_count		882106	1					
ANR	882211	ForStatement	for ( i = 0 ; i < old_ce -> default_properties_count ; i ++ )		882106	2					
ANR	882212	ForInit	i = 0 ;	714:7:20905:20910	882106	0	True				
ANR	882213	AssignmentExpression	i = 0		882106	0		=			
ANR	882214	Identifier	i		882106	0					
ANR	882215	PrimaryExpression	0		882106	1					
ANR	882216	Condition	i < old_ce -> default_properties_count	714:14:20912:20947	882106	1	True				
ANR	882217	RelationalExpression	i < old_ce -> default_properties_count		882106	0		<			
ANR	882218	Identifier	i		882106	0					
ANR	882219	PtrMemberAccess	old_ce -> default_properties_count		882106	1					
ANR	882220	Identifier	old_ce		882106	0					
ANR	882221	Identifier	default_properties_count		882106	1					
ANR	882222	PostIncDecOperationExpression	i ++	714:52:20950:20952	882106	2	True				
ANR	882223	Identifier	i		882106	0					
ANR	882224	IncDec	++		882106	1					
ANR	882225	CompoundStatement		22:57:594:594	882106	3					
ANR	882226	IfStatement	if ( old_ce -> default_properties_table [ i ] )		882106	0					
ANR	882227	Condition	old_ce -> default_properties_table [ i ]	715:7:20964:20998	882106	0	True				
ANR	882228	ArrayIndexing	old_ce -> default_properties_table [ i ]		882106	0					
ANR	882229	PtrMemberAccess	old_ce -> default_properties_table		882106	0					
ANR	882230	Identifier	old_ce		882106	0					
ANR	882231	Identifier	default_properties_table		882106	1					
ANR	882232	Identifier	i		882106	1					
ANR	882233	CompoundStatement		23:44:640:640	882106	1					
ANR	882234	Statement	ce	716:4:21007:21008	882106	0	True				
ANR	882235	Statement	->	716:6:21009:21010	882106	1	True				
ANR	882236	Statement	default_properties_table	716:8:21011:21034	882106	2	True				
ANR	882237	Statement	[	716:32:21035:21035	882106	3	True				
ANR	882238	Statement	i	716:33:21036:21036	882106	4	True				
ANR	882239	Statement	]	716:34:21037:21037	882106	5	True				
ANR	882240	Statement	=	716:36:21039:21039	882106	6	True				
ANR	882241	Statement	zend_clone_zval	716:38:21041:21055	882106	7	True				
ANR	882242	Statement	(	716:53:21056:21056	882106	8	True				
ANR	882243	Statement	old_ce	716:54:21057:21062	882106	9	True				
ANR	882244	Statement	->	716:60:21063:21064	882106	10	True				
ANR	882245	Statement	default_properties_table	716:62:21065:21088	882106	11	True				
ANR	882246	Statement	[	716:86:21089:21089	882106	12	True				
ANR	882247	Statement	i	716:87:21090:21090	882106	13	True				
ANR	882248	Statement	]	716:88:21091:21091	882106	14	True				
ANR	882249	Statement	","	716:89:21092:21092	882106	15	True				
ANR	882250	Statement	0	716:91:21094:21094	882106	16	True				
ANR	882251	Statement	TSRMLS_CC	716:93:21096:21104	882106	17	True				
ANR	882252	Statement	)	716:102:21105:21105	882106	18	True				
ANR	882253	ExpressionStatement		716:103:21106:21106	882106	19	True				
ANR	882254	ElseStatement	else		882106	0					
ANR	882255	CompoundStatement		25:10:757:757	882106	0					
ANR	882256	ExpressionStatement	ce -> default_properties_table [ i ] = NULL	718:4:21124:21162	882106	0	True				
ANR	882257	AssignmentExpression	ce -> default_properties_table [ i ] = NULL		882106	0		=			
ANR	882258	ArrayIndexing	ce -> default_properties_table [ i ]		882106	0					
ANR	882259	PtrMemberAccess	ce -> default_properties_table		882106	0					
ANR	882260	Identifier	ce		882106	0					
ANR	882261	Identifier	default_properties_table		882106	1					
ANR	882262	Identifier	i		882106	1					
ANR	882263	Identifier	NULL		882106	1					
ANR	882264	Statement	zend_hash_clone_methods	726:1:21271:21293	882106	10	True				
ANR	882265	Statement	(	726:24:21294:21294	882106	11	True				
ANR	882266	Statement	&	726:25:21295:21295	882106	12	True				
ANR	882267	Statement	ce	726:26:21296:21297	882106	13	True				
ANR	882268	Statement	->	726:28:21298:21299	882106	14	True				
ANR	882269	Statement	function_table	726:30:21300:21313	882106	15	True				
ANR	882270	Statement	","	726:44:21314:21314	882106	16	True				
ANR	882271	Statement	&	726:46:21316:21316	882106	17	True				
ANR	882272	Statement	old_ce	726:47:21317:21322	882106	18	True				
ANR	882273	Statement	->	726:53:21323:21324	882106	19	True				
ANR	882274	Statement	function_table	726:55:21325:21338	882106	20	True				
ANR	882275	Statement	","	726:69:21339:21339	882106	21	True				
ANR	882276	Statement	old_ce	726:71:21341:21346	882106	22	True				
ANR	882277	Statement	","	726:77:21347:21347	882106	23	True				
ANR	882278	Statement	ce	726:79:21349:21350	882106	24	True				
ANR	882279	Statement	TSRMLS_CC	726:82:21352:21360	882106	25	True				
ANR	882280	Statement	)	726:91:21361:21361	882106	26	True				
ANR	882281	ExpressionStatement		726:92:21362:21362	882106	27	True				
ANR	882282	IfStatement	if ( old_ce -> default_static_members_table )		882106	28					
ANR	882283	Condition	old_ce -> default_static_members_table	730:5:21437:21472	882106	0	True				
ANR	882284	PtrMemberAccess	old_ce -> default_static_members_table		882106	0					
ANR	882285	Identifier	old_ce		882106	0					
ANR	882286	Identifier	default_static_members_table		882106	1					
ANR	882287	CompoundStatement		39:2:1118:1123	882106	1					
ANR	882288	IdentifierDeclStatement	int i ;	731:2:21479:21484	882106	0	True				
ANR	882289	IdentifierDecl	i		882106	0					
ANR	882290	IdentifierDeclType	int		882106	0					
ANR	882291	Identifier	i		882106	1					
ANR	882292	ExpressionStatement	ce -> default_static_members_table = emalloc ( sizeof ( zval * ) * old_ce -> default_static_members_count )	733:2:21489:21585	882106	1	True				
ANR	882293	AssignmentExpression	ce -> default_static_members_table = emalloc ( sizeof ( zval * ) * old_ce -> default_static_members_count )		882106	0		=			
ANR	882294	PtrMemberAccess	ce -> default_static_members_table		882106	0					
ANR	882295	Identifier	ce		882106	0					
ANR	882296	Identifier	default_static_members_table		882106	1					
ANR	882297	CallExpression	emalloc ( sizeof ( zval * ) * old_ce -> default_static_members_count )		882106	1					
ANR	882298	Callee	emalloc		882106	0					
ANR	882299	Identifier	emalloc		882106	0					
ANR	882300	ArgumentList	sizeof ( zval * ) * old_ce -> default_static_members_count		882106	1					
ANR	882301	Argument	sizeof ( zval * ) * old_ce -> default_static_members_count		882106	0					
ANR	882302	MultiplicativeExpression	sizeof ( zval * ) * old_ce -> default_static_members_count		882106	0		*			
ANR	882303	SizeofExpression	sizeof ( zval * )		882106	0					
ANR	882304	Sizeof	sizeof		882106	0					
ANR	882305	SizeofOperand	zval *		882106	1					
ANR	882306	PtrMemberAccess	old_ce -> default_static_members_count		882106	1					
ANR	882307	Identifier	old_ce		882106	0					
ANR	882308	Identifier	default_static_members_count		882106	1					
ANR	882309	ForStatement	for ( i = 0 ; i < old_ce -> default_static_members_count ; i ++ )		882106	2					
ANR	882310	ForInit	i = 0 ;	734:7:21594:21599	882106	0	True				
ANR	882311	AssignmentExpression	i = 0		882106	0		=			
ANR	882312	Identifier	i		882106	0					
ANR	882313	PrimaryExpression	0		882106	1					
ANR	882314	Condition	i < old_ce -> default_static_members_count	734:14:21601:21640	882106	1	True				
ANR	882315	RelationalExpression	i < old_ce -> default_static_members_count		882106	0		<			
ANR	882316	Identifier	i		882106	0					
ANR	882317	PtrMemberAccess	old_ce -> default_static_members_count		882106	1					
ANR	882318	Identifier	old_ce		882106	0					
ANR	882319	Identifier	default_static_members_count		882106	1					
ANR	882320	PostIncDecOperationExpression	i ++	734:56:21643:21645	882106	2	True				
ANR	882321	Identifier	i		882106	0					
ANR	882322	IncDec	++		882106	1					
ANR	882323	CompoundStatement		42:61:1287:1287	882106	3					
ANR	882324	IfStatement	if ( old_ce -> default_static_members_table [ i ] )		882106	0					
ANR	882325	Condition	old_ce -> default_static_members_table [ i ]	735:7:21657:21695	882106	0	True				
ANR	882326	ArrayIndexing	old_ce -> default_static_members_table [ i ]		882106	0					
ANR	882327	PtrMemberAccess	old_ce -> default_static_members_table		882106	0					
ANR	882328	Identifier	old_ce		882106	0					
ANR	882329	Identifier	default_static_members_table		882106	1					
ANR	882330	Identifier	i		882106	1					
ANR	882331	CompoundStatement		43:48:1337:1337	882106	1					
ANR	882332	Statement	ce	736:4:21704:21705	882106	0	True				
ANR	882333	Statement	->	736:6:21706:21707	882106	1	True				
ANR	882334	Statement	default_static_members_table	736:8:21708:21735	882106	2	True				
ANR	882335	Statement	[	736:36:21736:21736	882106	3	True				
ANR	882336	Statement	i	736:37:21737:21737	882106	4	True				
ANR	882337	Statement	]	736:38:21738:21738	882106	5	True				
ANR	882338	Statement	=	736:40:21740:21740	882106	6	True				
ANR	882339	Statement	zend_clone_zval	736:42:21742:21756	882106	7	True				
ANR	882340	Statement	(	736:57:21757:21757	882106	8	True				
ANR	882341	Statement	old_ce	736:58:21758:21763	882106	9	True				
ANR	882342	Statement	->	736:64:21764:21765	882106	10	True				
ANR	882343	Statement	default_static_members_table	736:66:21766:21793	882106	11	True				
ANR	882344	Statement	[	736:94:21794:21794	882106	12	True				
ANR	882345	Statement	i	736:95:21795:21795	882106	13	True				
ANR	882346	Statement	]	736:96:21796:21796	882106	14	True				
ANR	882347	Statement	","	736:97:21797:21797	882106	15	True				
ANR	882348	Statement	1	736:99:21799:21799	882106	16	True				
ANR	882349	Statement	TSRMLS_CC	736:101:21801:21809	882106	17	True				
ANR	882350	Statement	)	736:110:21810:21810	882106	18	True				
ANR	882351	ExpressionStatement		736:111:21811:21811	882106	19	True				
ANR	882352	ElseStatement	else		882106	0					
ANR	882353	CompoundStatement		45:10:1462:1462	882106	0					
ANR	882354	ExpressionStatement	ce -> default_static_members_table [ i ] = NULL	738:4:21829:21871	882106	0	True				
ANR	882355	AssignmentExpression	ce -> default_static_members_table [ i ] = NULL		882106	0		=			
ANR	882356	ArrayIndexing	ce -> default_static_members_table [ i ]		882106	0					
ANR	882357	PtrMemberAccess	ce -> default_static_members_table		882106	0					
ANR	882358	Identifier	ce		882106	0					
ANR	882359	Identifier	default_static_members_table		882106	1					
ANR	882360	Identifier	i		882106	1					
ANR	882361	Identifier	NULL		882106	1					
ANR	882362	ExpressionStatement	ce -> static_members_table = ce -> default_static_members_table	742:1:21886:21945	882106	29	True				
ANR	882363	AssignmentExpression	ce -> static_members_table = ce -> default_static_members_table		882106	0		=			
ANR	882364	PtrMemberAccess	ce -> static_members_table		882106	0					
ANR	882365	Identifier	ce		882106	0					
ANR	882366	Identifier	static_members_table		882106	1					
ANR	882367	PtrMemberAccess	ce -> default_static_members_table		882106	1					
ANR	882368	Identifier	ce		882106	0					
ANR	882369	Identifier	default_static_members_table		882106	1					
ANR	882370	Statement	zend_hash_clone_prop_info	749:1:22124:22148	882106	30	True				
ANR	882371	Statement	(	749:26:22149:22149	882106	31	True				
ANR	882372	Statement	&	749:27:22150:22150	882106	32	True				
ANR	882373	Statement	ce	749:28:22151:22152	882106	33	True				
ANR	882374	Statement	->	749:30:22153:22154	882106	34	True				
ANR	882375	Statement	properties_info	749:32:22155:22169	882106	35	True				
ANR	882376	Statement	","	749:47:22170:22170	882106	36	True				
ANR	882377	Statement	&	749:49:22172:22172	882106	37	True				
ANR	882378	Statement	old_ce	749:50:22173:22178	882106	38	True				
ANR	882379	Statement	->	749:56:22179:22180	882106	39	True				
ANR	882380	Statement	properties_info	749:58:22181:22195	882106	40	True				
ANR	882381	Statement	","	749:73:22196:22196	882106	41	True				
ANR	882382	Statement	old_ce	749:75:22198:22203	882106	42	True				
ANR	882383	Statement	","	749:81:22204:22204	882106	43	True				
ANR	882384	Statement	ce	749:83:22206:22207	882106	44	True				
ANR	882385	Statement	TSRMLS_CC	749:86:22209:22217	882106	45	True				
ANR	882386	Statement	)	749:95:22218:22218	882106	46	True				
ANR	882387	ExpressionStatement		749:96:22219:22219	882106	47	True				
ANR	882388	ExpressionStatement	"zend_hash_clone_zval ( & ce -> constants_table , & old_ce -> constants_table , 0 )"	752:1:22246:22317	882106	48	True				
ANR	882389	CallExpression	"zend_hash_clone_zval ( & ce -> constants_table , & old_ce -> constants_table , 0 )"		882106	0					
ANR	882390	Callee	zend_hash_clone_zval		882106	0					
ANR	882391	Identifier	zend_hash_clone_zval		882106	0					
ANR	882392	ArgumentList	& ce -> constants_table		882106	1					
ANR	882393	Argument	& ce -> constants_table		882106	0					
ANR	882394	UnaryOperationExpression	& ce -> constants_table		882106	0					
ANR	882395	UnaryOperator	&		882106	0					
ANR	882396	PtrMemberAccess	ce -> constants_table		882106	1					
ANR	882397	Identifier	ce		882106	0					
ANR	882398	Identifier	constants_table		882106	1					
ANR	882399	Argument	& old_ce -> constants_table		882106	1					
ANR	882400	UnaryOperationExpression	& old_ce -> constants_table		882106	0					
ANR	882401	UnaryOperator	&		882106	0					
ANR	882402	PtrMemberAccess	old_ce -> constants_table		882106	1					
ANR	882403	Identifier	old_ce		882106	0					
ANR	882404	Identifier	constants_table		882106	1					
ANR	882405	Argument	0		882106	2					
ANR	882406	PrimaryExpression	0		882106	0					
ANR	882407	ExpressionStatement	"ce -> name = interned_estrndup ( ce -> name , ce -> name_length )"	754:1:22321:22376	882106	49	True				
ANR	882408	AssignmentExpression	"ce -> name = interned_estrndup ( ce -> name , ce -> name_length )"		882106	0		=			
ANR	882409	PtrMemberAccess	ce -> name		882106	0					
ANR	882410	Identifier	ce		882106	0					
ANR	882411	Identifier	name		882106	1					
ANR	882412	CallExpression	"interned_estrndup ( ce -> name , ce -> name_length )"		882106	1					
ANR	882413	Callee	interned_estrndup		882106	0					
ANR	882414	Identifier	interned_estrndup		882106	0					
ANR	882415	ArgumentList	ce -> name		882106	1					
ANR	882416	Argument	ce -> name		882106	0					
ANR	882417	PtrMemberAccess	ce -> name		882106	0					
ANR	882418	Identifier	ce		882106	0					
ANR	882419	Identifier	name		882106	1					
ANR	882420	Argument	ce -> name_length		882106	1					
ANR	882421	PtrMemberAccess	ce -> name_length		882106	0					
ANR	882422	Identifier	ce		882106	0					
ANR	882423	Identifier	name_length		882106	1					
ANR	882424	IfStatement	if ( ce -> num_interfaces )		882106	50					
ANR	882425	Condition	ce -> num_interfaces	757:5:22454:22471	882106	0	True				
ANR	882426	PtrMemberAccess	ce -> num_interfaces		882106	0					
ANR	882427	Identifier	ce		882106	0					
ANR	882428	Identifier	num_interfaces		882106	1					
ANR	882429	CompoundStatement		65:25:2113:2113	882106	1					
ANR	882430	ExpressionStatement	ce -> interfaces = emalloc ( sizeof ( zend_class_entry * ) * ce -> num_interfaces )	758:2:22478:22551	882106	0	True				
ANR	882431	AssignmentExpression	ce -> interfaces = emalloc ( sizeof ( zend_class_entry * ) * ce -> num_interfaces )		882106	0		=			
ANR	882432	PtrMemberAccess	ce -> interfaces		882106	0					
ANR	882433	Identifier	ce		882106	0					
ANR	882434	Identifier	interfaces		882106	1					
ANR	882435	CallExpression	emalloc ( sizeof ( zend_class_entry * ) * ce -> num_interfaces )		882106	1					
ANR	882436	Callee	emalloc		882106	0					
ANR	882437	Identifier	emalloc		882106	0					
ANR	882438	ArgumentList	sizeof ( zend_class_entry * ) * ce -> num_interfaces		882106	1					
ANR	882439	Argument	sizeof ( zend_class_entry * ) * ce -> num_interfaces		882106	0					
ANR	882440	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ce -> num_interfaces		882106	0		*			
ANR	882441	SizeofExpression	sizeof ( zend_class_entry * )		882106	0					
ANR	882442	Sizeof	sizeof		882106	0					
ANR	882443	SizeofOperand	zend_class_entry *		882106	1					
ANR	882444	PtrMemberAccess	ce -> num_interfaces		882106	1					
ANR	882445	Identifier	ce		882106	0					
ANR	882446	Identifier	num_interfaces		882106	1					
ANR	882447	ExpressionStatement	"memset ( ce -> interfaces , 0 , sizeof ( zend_class_entry * ) * ce -> num_interfaces )"	759:2:22555:22629	882106	1	True				
ANR	882448	CallExpression	"memset ( ce -> interfaces , 0 , sizeof ( zend_class_entry * ) * ce -> num_interfaces )"		882106	0					
ANR	882449	Callee	memset		882106	0					
ANR	882450	Identifier	memset		882106	0					
ANR	882451	ArgumentList	ce -> interfaces		882106	1					
ANR	882452	Argument	ce -> interfaces		882106	0					
ANR	882453	PtrMemberAccess	ce -> interfaces		882106	0					
ANR	882454	Identifier	ce		882106	0					
ANR	882455	Identifier	interfaces		882106	1					
ANR	882456	Argument	0		882106	1					
ANR	882457	PrimaryExpression	0		882106	0					
ANR	882458	Argument	sizeof ( zend_class_entry * ) * ce -> num_interfaces		882106	2					
ANR	882459	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ce -> num_interfaces		882106	0		*			
ANR	882460	SizeofExpression	sizeof ( zend_class_entry * )		882106	0					
ANR	882461	Sizeof	sizeof		882106	0					
ANR	882462	SizeofOperand	zend_class_entry *		882106	1					
ANR	882463	PtrMemberAccess	ce -> num_interfaces		882106	1					
ANR	882464	Identifier	ce		882106	0					
ANR	882465	Identifier	num_interfaces		882106	1					
ANR	882466	ElseStatement	else		882106	0					
ANR	882467	CompoundStatement		68:8:2278:2278	882106	0					
ANR	882468	ExpressionStatement	ce -> interfaces = NULL	761:2:22643:22664	882106	0	True				
ANR	882469	AssignmentExpression	ce -> interfaces = NULL		882106	0		=			
ANR	882470	PtrMemberAccess	ce -> interfaces		882106	0					
ANR	882471	Identifier	ce		882106	0					
ANR	882472	Identifier	interfaces		882106	1					
ANR	882473	Identifier	NULL		882106	1					
ANR	882474	IfStatement	if ( ZEND_CE_DOC_COMMENT ( ce ) )		882106	51					
ANR	882475	Condition	ZEND_CE_DOC_COMMENT ( ce )	763:5:22674:22696	882106	0	True				
ANR	882476	CallExpression	ZEND_CE_DOC_COMMENT ( ce )		882106	0					
ANR	882477	Callee	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882478	Identifier	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882479	ArgumentList	ce		882106	1					
ANR	882480	Argument	ce		882106	0					
ANR	882481	Identifier	ce		882106	0					
ANR	882482	CompoundStatement		71:30:2338:2338	882106	1					
ANR	882483	IfStatement	if ( ZCG ( accel_directives ) . load_comments )		882106	0					
ANR	882484	Condition	ZCG ( accel_directives ) . load_comments	764:6:22707:22741	882106	0	True				
ANR	882485	MemberAccess	ZCG ( accel_directives ) . load_comments		882106	0					
ANR	882486	CallExpression	ZCG ( accel_directives )		882106	0					
ANR	882487	Callee	ZCG		882106	0					
ANR	882488	Identifier	ZCG		882106	0					
ANR	882489	ArgumentList	accel_directives		882106	1					
ANR	882490	Argument	accel_directives		882106	0					
ANR	882491	Identifier	accel_directives		882106	0					
ANR	882492	Identifier	load_comments		882106	1					
ANR	882493	CompoundStatement		72:43:2383:2383	882106	1					
ANR	882494	ExpressionStatement	"ZEND_CE_DOC_COMMENT ( ce ) = estrndup ( ZEND_CE_DOC_COMMENT ( ce ) , ZEND_CE_DOC_COMMENT_LEN ( ce ) )"	765:3:22749:22837	882106	0	True				
ANR	882495	AssignmentExpression	"ZEND_CE_DOC_COMMENT ( ce ) = estrndup ( ZEND_CE_DOC_COMMENT ( ce ) , ZEND_CE_DOC_COMMENT_LEN ( ce ) )"		882106	0		=			
ANR	882496	CallExpression	ZEND_CE_DOC_COMMENT ( ce )		882106	0					
ANR	882497	Callee	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882498	Identifier	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882499	ArgumentList	ce		882106	1					
ANR	882500	Argument	ce		882106	0					
ANR	882501	Identifier	ce		882106	0					
ANR	882502	CallExpression	"estrndup ( ZEND_CE_DOC_COMMENT ( ce ) , ZEND_CE_DOC_COMMENT_LEN ( ce ) )"		882106	1					
ANR	882503	Callee	estrndup		882106	0					
ANR	882504	Identifier	estrndup		882106	0					
ANR	882505	ArgumentList	ZEND_CE_DOC_COMMENT ( ce )		882106	1					
ANR	882506	Argument	ZEND_CE_DOC_COMMENT ( ce )		882106	0					
ANR	882507	CallExpression	ZEND_CE_DOC_COMMENT ( ce )		882106	0					
ANR	882508	Callee	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882509	Identifier	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882510	ArgumentList	ce		882106	1					
ANR	882511	Argument	ce		882106	0					
ANR	882512	Identifier	ce		882106	0					
ANR	882513	Argument	ZEND_CE_DOC_COMMENT_LEN ( ce )		882106	1					
ANR	882514	CallExpression	ZEND_CE_DOC_COMMENT_LEN ( ce )		882106	0					
ANR	882515	Callee	ZEND_CE_DOC_COMMENT_LEN		882106	0					
ANR	882516	Identifier	ZEND_CE_DOC_COMMENT_LEN		882106	0					
ANR	882517	ArgumentList	ce		882106	1					
ANR	882518	Argument	ce		882106	0					
ANR	882519	Identifier	ce		882106	0					
ANR	882520	ElseStatement	else		882106	0					
ANR	882521	CompoundStatement		74:9:2487:2487	882106	0					
ANR	882522	ExpressionStatement	ZEND_CE_DOC_COMMENT ( ce ) = NULL	767:3:22853:22884	882106	0	True				
ANR	882523	AssignmentExpression	ZEND_CE_DOC_COMMENT ( ce ) = NULL		882106	0		=			
ANR	882524	CallExpression	ZEND_CE_DOC_COMMENT ( ce )		882106	0					
ANR	882525	Callee	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882526	Identifier	ZEND_CE_DOC_COMMENT		882106	0					
ANR	882527	ArgumentList	ce		882106	1					
ANR	882528	Argument	ce		882106	0					
ANR	882529	Identifier	ce		882106	0					
ANR	882530	Identifier	NULL		882106	1					
ANR	882531	IfStatement	if ( ce -> parent )		882106	52					
ANR	882532	Condition	ce -> parent	771:5:22899:22908	882106	0	True				
ANR	882533	PtrMemberAccess	ce -> parent		882106	0					
ANR	882534	Identifier	ce		882106	0					
ANR	882535	Identifier	parent		882106	1					
ANR	882536	CompoundStatement		79:17:2550:2550	882106	1					
ANR	882537	IfStatement	"if ( accel_xlat_get ( ce -> parent , new_ce ) == SUCCESS )"		882106	0					
ANR	882538	Condition	"accel_xlat_get ( ce -> parent , new_ce ) == SUCCESS"	772:6:22919:22963	882106	0	True				
ANR	882539	EqualityExpression	"accel_xlat_get ( ce -> parent , new_ce ) == SUCCESS"		882106	0		==			
ANR	882540	CallExpression	"accel_xlat_get ( ce -> parent , new_ce )"		882106	0					
ANR	882541	Callee	accel_xlat_get		882106	0					
ANR	882542	Identifier	accel_xlat_get		882106	0					
ANR	882543	ArgumentList	ce -> parent		882106	1					
ANR	882544	Argument	ce -> parent		882106	0					
ANR	882545	PtrMemberAccess	ce -> parent		882106	0					
ANR	882546	Identifier	ce		882106	0					
ANR	882547	Identifier	parent		882106	1					
ANR	882548	Argument	new_ce		882106	1					
ANR	882549	Identifier	new_ce		882106	0					
ANR	882550	Identifier	SUCCESS		882106	1					
ANR	882551	CompoundStatement		80:53:2605:2605	882106	1					
ANR	882552	ExpressionStatement	ce -> parent = * new_ce	773:3:22971:22991	882106	0	True				
ANR	882553	AssignmentExpression	ce -> parent = * new_ce		882106	0		=			
ANR	882554	PtrMemberAccess	ce -> parent		882106	0					
ANR	882555	Identifier	ce		882106	0					
ANR	882556	Identifier	parent		882106	1					
ANR	882557	UnaryOperationExpression	* new_ce		882106	1					
ANR	882558	UnaryOperator	*		882106	0					
ANR	882559	Identifier	new_ce		882106	1					
ANR	882560	ElseStatement	else		882106	0					
ANR	882561	CompoundStatement		82:9:2641:2641	882106	0					
ANR	882562	Statement	zend_error	775:3:23007:23016	882106	0	True				
ANR	882563	Statement	(	775:13:23017:23017	882106	1	True				
ANR	882564	Statement	E_ERROR	775:14:23018:23024	882106	2	True				
ANR	882565	Statement	","	775:21:23025:23025	882106	3	True				
ANR	882566	Statement	ACCELERATOR_PRODUCT_NAME	775:23:23027:23050	882106	4	True				
ANR	882567	Statement	""" class loading error, class %s"""	775:47:23051:23082	882106	5	True				
ANR	882568	Statement	","	775:79:23083:23083	882106	6	True				
ANR	882569	Statement	ce	775:81:23085:23086	882106	7	True				
ANR	882570	Statement	->	775:83:23087:23088	882106	8	True				
ANR	882571	Statement	name	775:85:23089:23092	882106	9	True				
ANR	882572	Statement	)	775:89:23093:23093	882106	10	True				
ANR	882573	ExpressionStatement		775:90:23094:23094	882106	11	True				
ANR	882574	ExpressionStatement	zend_update_inherited_handler ( constructor )	779:1:23105:23147	882106	53	True				
ANR	882575	CallExpression	zend_update_inherited_handler ( constructor )		882106	0					
ANR	882576	Callee	zend_update_inherited_handler		882106	0					
ANR	882577	Identifier	zend_update_inherited_handler		882106	0					
ANR	882578	ArgumentList	constructor		882106	1					
ANR	882579	Argument	constructor		882106	0					
ANR	882580	Identifier	constructor		882106	0					
ANR	882581	ExpressionStatement	zend_update_inherited_handler ( destructor )	780:1:23150:23191	882106	54	True				
ANR	882582	CallExpression	zend_update_inherited_handler ( destructor )		882106	0					
ANR	882583	Callee	zend_update_inherited_handler		882106	0					
ANR	882584	Identifier	zend_update_inherited_handler		882106	0					
ANR	882585	ArgumentList	destructor		882106	1					
ANR	882586	Argument	destructor		882106	0					
ANR	882587	Identifier	destructor		882106	0					
ANR	882588	ExpressionStatement	zend_update_inherited_handler ( clone )	781:1:23194:23230	882106	55	True				
ANR	882589	CallExpression	zend_update_inherited_handler ( clone )		882106	0					
ANR	882590	Callee	zend_update_inherited_handler		882106	0					
ANR	882591	Identifier	zend_update_inherited_handler		882106	0					
ANR	882592	ArgumentList	clone		882106	1					
ANR	882593	Argument	clone		882106	0					
ANR	882594	Identifier	clone		882106	0					
ANR	882595	ExpressionStatement	zend_update_inherited_handler ( __get )	782:1:23233:23269	882106	56	True				
ANR	882596	CallExpression	zend_update_inherited_handler ( __get )		882106	0					
ANR	882597	Callee	zend_update_inherited_handler		882106	0					
ANR	882598	Identifier	zend_update_inherited_handler		882106	0					
ANR	882599	ArgumentList	__get		882106	1					
ANR	882600	Argument	__get		882106	0					
ANR	882601	Identifier	__get		882106	0					
ANR	882602	ExpressionStatement	zend_update_inherited_handler ( __set )	783:1:23272:23308	882106	57	True				
ANR	882603	CallExpression	zend_update_inherited_handler ( __set )		882106	0					
ANR	882604	Callee	zend_update_inherited_handler		882106	0					
ANR	882605	Identifier	zend_update_inherited_handler		882106	0					
ANR	882606	ArgumentList	__set		882106	1					
ANR	882607	Argument	__set		882106	0					
ANR	882608	Identifier	__set		882106	0					
ANR	882609	ExpressionStatement	zend_update_inherited_handler ( __call )	784:1:23311:23348	882106	58	True				
ANR	882610	CallExpression	zend_update_inherited_handler ( __call )		882106	0					
ANR	882611	Callee	zend_update_inherited_handler		882106	0					
ANR	882612	Identifier	zend_update_inherited_handler		882106	0					
ANR	882613	ArgumentList	__call		882106	1					
ANR	882614	Argument	__call		882106	0					
ANR	882615	Identifier	__call		882106	0					
ANR	882616	ExpressionStatement	zend_update_inherited_handler ( serialize_func )	786:1:23367:23412	882106	59	True				
ANR	882617	CallExpression	zend_update_inherited_handler ( serialize_func )		882106	0					
ANR	882618	Callee	zend_update_inherited_handler		882106	0					
ANR	882619	Identifier	zend_update_inherited_handler		882106	0					
ANR	882620	ArgumentList	serialize_func		882106	1					
ANR	882621	Argument	serialize_func		882106	0					
ANR	882622	Identifier	serialize_func		882106	0					
ANR	882623	ExpressionStatement	zend_update_inherited_handler ( unserialize_func )	787:1:23415:23462	882106	60	True				
ANR	882624	CallExpression	zend_update_inherited_handler ( unserialize_func )		882106	0					
ANR	882625	Callee	zend_update_inherited_handler		882106	0					
ANR	882626	Identifier	zend_update_inherited_handler		882106	0					
ANR	882627	ArgumentList	unserialize_func		882106	1					
ANR	882628	Argument	unserialize_func		882106	0					
ANR	882629	Identifier	unserialize_func		882106	0					
ANR	882630	ExpressionStatement	zend_update_inherited_handler ( __isset )	788:1:23465:23503	882106	61	True				
ANR	882631	CallExpression	zend_update_inherited_handler ( __isset )		882106	0					
ANR	882632	Callee	zend_update_inherited_handler		882106	0					
ANR	882633	Identifier	zend_update_inherited_handler		882106	0					
ANR	882634	ArgumentList	__isset		882106	1					
ANR	882635	Argument	__isset		882106	0					
ANR	882636	Identifier	__isset		882106	0					
ANR	882637	ExpressionStatement	zend_update_inherited_handler ( __unset )	789:1:23506:23544	882106	62	True				
ANR	882638	CallExpression	zend_update_inherited_handler ( __unset )		882106	0					
ANR	882639	Callee	zend_update_inherited_handler		882106	0					
ANR	882640	Identifier	zend_update_inherited_handler		882106	0					
ANR	882641	ArgumentList	__unset		882106	1					
ANR	882642	Argument	__unset		882106	0					
ANR	882643	Identifier	__unset		882106	0					
ANR	882644	ExpressionStatement	zend_update_inherited_handler ( __tostring )	791:1:23563:23604	882106	63	True				
ANR	882645	CallExpression	zend_update_inherited_handler ( __tostring )		882106	0					
ANR	882646	Callee	zend_update_inherited_handler		882106	0					
ANR	882647	Identifier	zend_update_inherited_handler		882106	0					
ANR	882648	ArgumentList	__tostring		882106	1					
ANR	882649	Argument	__tostring		882106	0					
ANR	882650	Identifier	__tostring		882106	0					
ANR	882651	ExpressionStatement	zend_update_inherited_handler ( __callstatic )	795:1:23670:23713	882106	64	True				
ANR	882652	CallExpression	zend_update_inherited_handler ( __callstatic )		882106	0					
ANR	882653	Callee	zend_update_inherited_handler		882106	0					
ANR	882654	Identifier	zend_update_inherited_handler		882106	0					
ANR	882655	ArgumentList	__callstatic		882106	1					
ANR	882656	Argument	__callstatic		882106	0					
ANR	882657	Identifier	__callstatic		882106	0					
ANR	882658	ExpressionStatement	zend_update_inherited_handler ( __debugInfo )	800:1:23786:23828	882106	65	True				
ANR	882659	CallExpression	zend_update_inherited_handler ( __debugInfo )		882106	0					
ANR	882660	Callee	zend_update_inherited_handler		882106	0					
ANR	882661	Identifier	zend_update_inherited_handler		882106	0					
ANR	882662	ArgumentList	__debugInfo		882106	1					
ANR	882663	Argument	__debugInfo		882106	0					
ANR	882664	Identifier	__debugInfo		882106	0					
ANR	882665	IfStatement	if ( ce -> trait_aliases )		882106	66					
ANR	882666	Condition	ce -> trait_aliases	805:5:23905:23921	882106	0	True				
ANR	882667	PtrMemberAccess	ce -> trait_aliases		882106	0					
ANR	882668	Identifier	ce		882106	0					
ANR	882669	Identifier	trait_aliases		882106	1					
ANR	882670	CompoundStatement		115:2:3603:3612	882106	1					
ANR	882671	IdentifierDeclStatement	zend_trait_alias * * trait_aliases ;	806:2:23928:23960	882106	0	True				
ANR	882672	IdentifierDecl	* * trait_aliases		882106	0					
ANR	882673	IdentifierDeclType	zend_trait_alias * *		882106	0					
ANR	882674	Identifier	trait_aliases		882106	1					
ANR	882675	IdentifierDeclStatement	int i = 0 ;	807:2:23964:23973	882106	1	True				
ANR	882676	IdentifierDecl	i = 0		882106	0					
ANR	882677	IdentifierDeclType	int		882106	0					
ANR	882678	Identifier	i		882106	1					
ANR	882679	AssignmentExpression	i = 0		882106	2		=			
ANR	882680	Identifier	i		882106	0					
ANR	882681	PrimaryExpression	0		882106	1					
ANR	882682	WhileStatement	while ( ce -> trait_aliases [ i ] )		882106	2					
ANR	882683	Condition	ce -> trait_aliases [ i ]	809:9:23985:24004	882106	0	True				
ANR	882684	ArrayIndexing	ce -> trait_aliases [ i ]		882106	0					
ANR	882685	PtrMemberAccess	ce -> trait_aliases		882106	0					
ANR	882686	Identifier	ce		882106	0					
ANR	882687	Identifier	trait_aliases		882106	1					
ANR	882688	Identifier	i		882106	1					
ANR	882689	CompoundStatement		117:31:3646:3646	882106	1					
ANR	882690	ExpressionStatement	i ++	810:3:24012:24015	882106	0	True				
ANR	882691	PostIncDecOperationExpression	i ++		882106	0					
ANR	882692	Identifier	i		882106	0					
ANR	882693	IncDec	++		882106	1					
ANR	882694	ExpressionStatement	trait_aliases = emalloc ( sizeof ( zend_trait_alias * ) * ( i + 1 ) )	812:2:24023:24083	882106	3	True				
ANR	882695	AssignmentExpression	trait_aliases = emalloc ( sizeof ( zend_trait_alias * ) * ( i + 1 ) )		882106	0		=			
ANR	882696	Identifier	trait_aliases		882106	0					
ANR	882697	CallExpression	emalloc ( sizeof ( zend_trait_alias * ) * ( i + 1 ) )		882106	1					
ANR	882698	Callee	emalloc		882106	0					
ANR	882699	Identifier	emalloc		882106	0					
ANR	882700	ArgumentList	sizeof ( zend_trait_alias * ) * ( i + 1 )		882106	1					
ANR	882701	Argument	sizeof ( zend_trait_alias * ) * ( i + 1 )		882106	0					
ANR	882702	MultiplicativeExpression	sizeof ( zend_trait_alias * ) * ( i + 1 )		882106	0		*			
ANR	882703	SizeofExpression	sizeof ( zend_trait_alias * )		882106	0					
ANR	882704	Sizeof	sizeof		882106	0					
ANR	882705	SizeofOperand	zend_trait_alias *		882106	1					
ANR	882706	AdditiveExpression	i + 1		882106	1		+			
ANR	882707	Identifier	i		882106	0					
ANR	882708	PrimaryExpression	1		882106	1					
ANR	882709	ExpressionStatement	i = 0	813:2:24087:24092	882106	4	True				
ANR	882710	AssignmentExpression	i = 0		882106	0		=			
ANR	882711	Identifier	i		882106	0					
ANR	882712	PrimaryExpression	0		882106	1					
ANR	882713	WhileStatement	while ( ce -> trait_aliases [ i ] )		882106	5					
ANR	882714	Condition	ce -> trait_aliases [ i ]	814:9:24103:24122	882106	0	True				
ANR	882715	ArrayIndexing	ce -> trait_aliases [ i ]		882106	0					
ANR	882716	PtrMemberAccess	ce -> trait_aliases		882106	0					
ANR	882717	Identifier	ce		882106	0					
ANR	882718	Identifier	trait_aliases		882106	1					
ANR	882719	Identifier	i		882106	1					
ANR	882720	CompoundStatement		122:31:3764:3764	882106	1					
ANR	882721	ExpressionStatement	trait_aliases [ i ] = emalloc ( sizeof ( zend_trait_alias ) )	815:3:24130:24182	882106	0	True				
ANR	882722	AssignmentExpression	trait_aliases [ i ] = emalloc ( sizeof ( zend_trait_alias ) )		882106	0		=			
ANR	882723	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882724	Identifier	trait_aliases		882106	0					
ANR	882725	Identifier	i		882106	1					
ANR	882726	CallExpression	emalloc ( sizeof ( zend_trait_alias ) )		882106	1					
ANR	882727	Callee	emalloc		882106	0					
ANR	882728	Identifier	emalloc		882106	0					
ANR	882729	ArgumentList	sizeof ( zend_trait_alias )		882106	1					
ANR	882730	Argument	sizeof ( zend_trait_alias )		882106	0					
ANR	882731	SizeofExpression	sizeof ( zend_trait_alias )		882106	0					
ANR	882732	Sizeof	sizeof		882106	0					
ANR	882733	SizeofOperand	zend_trait_alias		882106	1					
ANR	882734	ExpressionStatement	"memcpy ( trait_aliases [ i ] , ce -> trait_aliases [ i ] , sizeof ( zend_trait_alias ) )"	816:3:24187:24259	882106	1	True				
ANR	882735	CallExpression	"memcpy ( trait_aliases [ i ] , ce -> trait_aliases [ i ] , sizeof ( zend_trait_alias ) )"		882106	0					
ANR	882736	Callee	memcpy		882106	0					
ANR	882737	Identifier	memcpy		882106	0					
ANR	882738	ArgumentList	trait_aliases [ i ]		882106	1					
ANR	882739	Argument	trait_aliases [ i ]		882106	0					
ANR	882740	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882741	Identifier	trait_aliases		882106	0					
ANR	882742	Identifier	i		882106	1					
ANR	882743	Argument	ce -> trait_aliases [ i ]		882106	1					
ANR	882744	ArrayIndexing	ce -> trait_aliases [ i ]		882106	0					
ANR	882745	PtrMemberAccess	ce -> trait_aliases		882106	0					
ANR	882746	Identifier	ce		882106	0					
ANR	882747	Identifier	trait_aliases		882106	1					
ANR	882748	Identifier	i		882106	1					
ANR	882749	Argument	sizeof ( zend_trait_alias )		882106	2					
ANR	882750	SizeofExpression	sizeof ( zend_trait_alias )		882106	0					
ANR	882751	Sizeof	sizeof		882106	0					
ANR	882752	SizeofOperand	zend_trait_alias		882106	1					
ANR	882753	ExpressionStatement	trait_aliases [ i ] -> trait_method = emalloc ( sizeof ( zend_trait_method_reference ) )	817:3:24264:24341	882106	2	True				
ANR	882754	AssignmentExpression	trait_aliases [ i ] -> trait_method = emalloc ( sizeof ( zend_trait_method_reference ) )		882106	0		=			
ANR	882755	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882756	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882757	Identifier	trait_aliases		882106	0					
ANR	882758	Identifier	i		882106	1					
ANR	882759	Identifier	trait_method		882106	1					
ANR	882760	CallExpression	emalloc ( sizeof ( zend_trait_method_reference ) )		882106	1					
ANR	882761	Callee	emalloc		882106	0					
ANR	882762	Identifier	emalloc		882106	0					
ANR	882763	ArgumentList	sizeof ( zend_trait_method_reference )		882106	1					
ANR	882764	Argument	sizeof ( zend_trait_method_reference )		882106	0					
ANR	882765	SizeofExpression	sizeof ( zend_trait_method_reference )		882106	0					
ANR	882766	Sizeof	sizeof		882106	0					
ANR	882767	SizeofOperand	zend_trait_method_reference		882106	1					
ANR	882768	ExpressionStatement	"memcpy ( trait_aliases [ i ] -> trait_method , ce -> trait_aliases [ i ] -> trait_method , sizeof ( zend_trait_method_reference ) )"	818:3:24346:24457	882106	3	True				
ANR	882769	CallExpression	"memcpy ( trait_aliases [ i ] -> trait_method , ce -> trait_aliases [ i ] -> trait_method , sizeof ( zend_trait_method_reference ) )"		882106	0					
ANR	882770	Callee	memcpy		882106	0					
ANR	882771	Identifier	memcpy		882106	0					
ANR	882772	ArgumentList	trait_aliases [ i ] -> trait_method		882106	1					
ANR	882773	Argument	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882774	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882775	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882776	Identifier	trait_aliases		882106	0					
ANR	882777	Identifier	i		882106	1					
ANR	882778	Identifier	trait_method		882106	1					
ANR	882779	Argument	ce -> trait_aliases [ i ] -> trait_method		882106	1					
ANR	882780	PtrMemberAccess	ce -> trait_aliases [ i ] -> trait_method		882106	0					
ANR	882781	ArrayIndexing	ce -> trait_aliases [ i ]		882106	0					
ANR	882782	PtrMemberAccess	ce -> trait_aliases		882106	0					
ANR	882783	Identifier	ce		882106	0					
ANR	882784	Identifier	trait_aliases		882106	1					
ANR	882785	Identifier	i		882106	1					
ANR	882786	Identifier	trait_method		882106	1					
ANR	882787	Argument	sizeof ( zend_trait_method_reference )		882106	2					
ANR	882788	SizeofExpression	sizeof ( zend_trait_method_reference )		882106	0					
ANR	882789	Sizeof	sizeof		882106	0					
ANR	882790	SizeofOperand	zend_trait_method_reference		882106	1					
ANR	882791	IfStatement	if ( trait_aliases [ i ] -> trait_method )		882106	4					
ANR	882792	Condition	trait_aliases [ i ] -> trait_method	819:7:24466:24495	882106	0	True				
ANR	882793	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882794	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882795	Identifier	trait_aliases		882106	0					
ANR	882796	Identifier	i		882106	1					
ANR	882797	Identifier	trait_method		882106	1					
ANR	882798	CompoundStatement		127:39:4137:4137	882106	1					
ANR	882799	IfStatement	if ( trait_aliases [ i ] -> trait_method -> method_name )		882106	0					
ANR	882800	Condition	trait_aliases [ i ] -> trait_method -> method_name	820:8:24508:24550	882106	0	True				
ANR	882801	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> method_name		882106	0					
ANR	882802	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882803	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882804	Identifier	trait_aliases		882106	0					
ANR	882805	Identifier	i		882106	1					
ANR	882806	Identifier	trait_method		882106	1					
ANR	882807	Identifier	method_name		882106	1					
ANR	882808	CompoundStatement		128:53:4192:4192	882106	1					
ANR	882809	ExpressionStatement	"trait_aliases [ i ] -> trait_method -> method_name = estrndup ( trait_aliases [ i ] -> trait_method -> method_name , trait_aliases [ i ] -> trait_method -> mname_len )"	821:5:24560:24715	882106	0	True				
ANR	882810	AssignmentExpression	"trait_aliases [ i ] -> trait_method -> method_name = estrndup ( trait_aliases [ i ] -> trait_method -> method_name , trait_aliases [ i ] -> trait_method -> mname_len )"		882106	0		=			
ANR	882811	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> method_name		882106	0					
ANR	882812	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882813	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882814	Identifier	trait_aliases		882106	0					
ANR	882815	Identifier	i		882106	1					
ANR	882816	Identifier	trait_method		882106	1					
ANR	882817	Identifier	method_name		882106	1					
ANR	882818	CallExpression	"estrndup ( trait_aliases [ i ] -> trait_method -> method_name , trait_aliases [ i ] -> trait_method -> mname_len )"		882106	1					
ANR	882819	Callee	estrndup		882106	0					
ANR	882820	Identifier	estrndup		882106	0					
ANR	882821	ArgumentList	trait_aliases [ i ] -> trait_method -> method_name		882106	1					
ANR	882822	Argument	trait_aliases [ i ] -> trait_method -> method_name		882106	0					
ANR	882823	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> method_name		882106	0					
ANR	882824	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882825	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882826	Identifier	trait_aliases		882106	0					
ANR	882827	Identifier	i		882106	1					
ANR	882828	Identifier	trait_method		882106	1					
ANR	882829	Identifier	method_name		882106	1					
ANR	882830	Argument	trait_aliases [ i ] -> trait_method -> mname_len		882106	1					
ANR	882831	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> mname_len		882106	0					
ANR	882832	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882833	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882834	Identifier	trait_aliases		882106	0					
ANR	882835	Identifier	i		882106	1					
ANR	882836	Identifier	trait_method		882106	1					
ANR	882837	Identifier	mname_len		882106	1					
ANR	882838	IfStatement	if ( trait_aliases [ i ] -> trait_method -> class_name )		882106	1					
ANR	882839	Condition	trait_aliases [ i ] -> trait_method -> class_name	825:8:24731:24772	882106	0	True				
ANR	882840	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> class_name		882106	0					
ANR	882841	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882842	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882843	Identifier	trait_aliases		882106	0					
ANR	882844	Identifier	i		882106	1					
ANR	882845	Identifier	trait_method		882106	1					
ANR	882846	Identifier	class_name		882106	1					
ANR	882847	CompoundStatement		133:52:4414:4414	882106	1					
ANR	882848	ExpressionStatement	"trait_aliases [ i ] -> trait_method -> class_name = estrndup ( trait_aliases [ i ] -> trait_method -> class_name , trait_aliases [ i ] -> trait_method -> cname_len )"	826:5:24782:24935	882106	0	True				
ANR	882849	AssignmentExpression	"trait_aliases [ i ] -> trait_method -> class_name = estrndup ( trait_aliases [ i ] -> trait_method -> class_name , trait_aliases [ i ] -> trait_method -> cname_len )"		882106	0		=			
ANR	882850	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> class_name		882106	0					
ANR	882851	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882852	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882853	Identifier	trait_aliases		882106	0					
ANR	882854	Identifier	i		882106	1					
ANR	882855	Identifier	trait_method		882106	1					
ANR	882856	Identifier	class_name		882106	1					
ANR	882857	CallExpression	"estrndup ( trait_aliases [ i ] -> trait_method -> class_name , trait_aliases [ i ] -> trait_method -> cname_len )"		882106	1					
ANR	882858	Callee	estrndup		882106	0					
ANR	882859	Identifier	estrndup		882106	0					
ANR	882860	ArgumentList	trait_aliases [ i ] -> trait_method -> class_name		882106	1					
ANR	882861	Argument	trait_aliases [ i ] -> trait_method -> class_name		882106	0					
ANR	882862	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> class_name		882106	0					
ANR	882863	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882864	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882865	Identifier	trait_aliases		882106	0					
ANR	882866	Identifier	i		882106	1					
ANR	882867	Identifier	trait_method		882106	1					
ANR	882868	Identifier	class_name		882106	1					
ANR	882869	Argument	trait_aliases [ i ] -> trait_method -> cname_len		882106	1					
ANR	882870	PtrMemberAccess	trait_aliases [ i ] -> trait_method -> cname_len		882106	0					
ANR	882871	PtrMemberAccess	trait_aliases [ i ] -> trait_method		882106	0					
ANR	882872	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882873	Identifier	trait_aliases		882106	0					
ANR	882874	Identifier	i		882106	1					
ANR	882875	Identifier	trait_method		882106	1					
ANR	882876	Identifier	cname_len		882106	1					
ANR	882877	IfStatement	if ( trait_aliases [ i ] -> alias )		882106	5					
ANR	882878	Condition	trait_aliases [ i ] -> alias	832:7:24956:24978	882106	0	True				
ANR	882879	PtrMemberAccess	trait_aliases [ i ] -> alias		882106	0					
ANR	882880	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882881	Identifier	trait_aliases		882106	0					
ANR	882882	Identifier	i		882106	1					
ANR	882883	Identifier	alias		882106	1					
ANR	882884	CompoundStatement		140:32:4620:4620	882106	1					
ANR	882885	ExpressionStatement	"trait_aliases [ i ] -> alias = estrndup ( trait_aliases [ i ] -> alias , trait_aliases [ i ] -> alias_len )"	833:4:24987:25086	882106	0	True				
ANR	882886	AssignmentExpression	"trait_aliases [ i ] -> alias = estrndup ( trait_aliases [ i ] -> alias , trait_aliases [ i ] -> alias_len )"		882106	0		=			
ANR	882887	PtrMemberAccess	trait_aliases [ i ] -> alias		882106	0					
ANR	882888	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882889	Identifier	trait_aliases		882106	0					
ANR	882890	Identifier	i		882106	1					
ANR	882891	Identifier	alias		882106	1					
ANR	882892	CallExpression	"estrndup ( trait_aliases [ i ] -> alias , trait_aliases [ i ] -> alias_len )"		882106	1					
ANR	882893	Callee	estrndup		882106	0					
ANR	882894	Identifier	estrndup		882106	0					
ANR	882895	ArgumentList	trait_aliases [ i ] -> alias		882106	1					
ANR	882896	Argument	trait_aliases [ i ] -> alias		882106	0					
ANR	882897	PtrMemberAccess	trait_aliases [ i ] -> alias		882106	0					
ANR	882898	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882899	Identifier	trait_aliases		882106	0					
ANR	882900	Identifier	i		882106	1					
ANR	882901	Identifier	alias		882106	1					
ANR	882902	Argument	trait_aliases [ i ] -> alias_len		882106	1					
ANR	882903	PtrMemberAccess	trait_aliases [ i ] -> alias_len		882106	0					
ANR	882904	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882905	Identifier	trait_aliases		882106	0					
ANR	882906	Identifier	i		882106	1					
ANR	882907	Identifier	alias_len		882106	1					
ANR	882908	ExpressionStatement	i ++	837:3:25096:25099	882106	6	True				
ANR	882909	PostIncDecOperationExpression	i ++		882106	0					
ANR	882910	Identifier	i		882106	0					
ANR	882911	IncDec	++		882106	1					
ANR	882912	ExpressionStatement	trait_aliases [ i ] = NULL	839:2:25107:25130	882106	6	True				
ANR	882913	AssignmentExpression	trait_aliases [ i ] = NULL		882106	0		=			
ANR	882914	ArrayIndexing	trait_aliases [ i ]		882106	0					
ANR	882915	Identifier	trait_aliases		882106	0					
ANR	882916	Identifier	i		882106	1					
ANR	882917	Identifier	NULL		882106	1					
ANR	882918	ExpressionStatement	ce -> trait_aliases = trait_aliases	840:2:25134:25167	882106	7	True				
ANR	882919	AssignmentExpression	ce -> trait_aliases = trait_aliases		882106	0		=			
ANR	882920	PtrMemberAccess	ce -> trait_aliases		882106	0					
ANR	882921	Identifier	ce		882106	0					
ANR	882922	Identifier	trait_aliases		882106	1					
ANR	882923	Identifier	trait_aliases		882106	1					
ANR	882924	IfStatement	if ( ce -> trait_precedences )		882106	67					
ANR	882925	Condition	ce -> trait_precedences	843:5:25178:25198	882106	0	True				
ANR	882926	PtrMemberAccess	ce -> trait_precedences		882106	0					
ANR	882927	Identifier	ce		882106	0					
ANR	882928	Identifier	trait_precedences		882106	1					
ANR	882929	CompoundStatement		153:2:4889:4898	882106	1					
ANR	882930	IdentifierDeclStatement	zend_trait_precedence * * trait_precedences ;	844:2:25205:25246	882106	0	True				
ANR	882931	IdentifierDecl	* * trait_precedences		882106	0					
ANR	882932	IdentifierDeclType	zend_trait_precedence * *		882106	0					
ANR	882933	Identifier	trait_precedences		882106	1					
ANR	882934	IdentifierDeclStatement	int i = 0 ;	845:2:25250:25259	882106	1	True				
ANR	882935	IdentifierDecl	i = 0		882106	0					
ANR	882936	IdentifierDeclType	int		882106	0					
ANR	882937	Identifier	i		882106	1					
ANR	882938	AssignmentExpression	i = 0		882106	2		=			
ANR	882939	Identifier	i		882106	0					
ANR	882940	PrimaryExpression	0		882106	1					
ANR	882941	WhileStatement	while ( ce -> trait_precedences [ i ] )		882106	2					
ANR	882942	Condition	ce -> trait_precedences [ i ]	847:9:25271:25294	882106	0	True				
ANR	882943	ArrayIndexing	ce -> trait_precedences [ i ]		882106	0					
ANR	882944	PtrMemberAccess	ce -> trait_precedences		882106	0					
ANR	882945	Identifier	ce		882106	0					
ANR	882946	Identifier	trait_precedences		882106	1					
ANR	882947	Identifier	i		882106	1					
ANR	882948	CompoundStatement		155:35:4936:4936	882106	1					
ANR	882949	ExpressionStatement	i ++	848:3:25302:25305	882106	0	True				
ANR	882950	PostIncDecOperationExpression	i ++		882106	0					
ANR	882951	Identifier	i		882106	0					
ANR	882952	IncDec	++		882106	1					
ANR	882953	ExpressionStatement	trait_precedences = emalloc ( sizeof ( zend_trait_precedence * ) * ( i + 1 ) )	850:2:25313:25382	882106	3	True				
ANR	882954	AssignmentExpression	trait_precedences = emalloc ( sizeof ( zend_trait_precedence * ) * ( i + 1 ) )		882106	0		=			
ANR	882955	Identifier	trait_precedences		882106	0					
ANR	882956	CallExpression	emalloc ( sizeof ( zend_trait_precedence * ) * ( i + 1 ) )		882106	1					
ANR	882957	Callee	emalloc		882106	0					
ANR	882958	Identifier	emalloc		882106	0					
ANR	882959	ArgumentList	sizeof ( zend_trait_precedence * ) * ( i + 1 )		882106	1					
ANR	882960	Argument	sizeof ( zend_trait_precedence * ) * ( i + 1 )		882106	0					
ANR	882961	MultiplicativeExpression	sizeof ( zend_trait_precedence * ) * ( i + 1 )		882106	0		*			
ANR	882962	SizeofExpression	sizeof ( zend_trait_precedence * )		882106	0					
ANR	882963	Sizeof	sizeof		882106	0					
ANR	882964	SizeofOperand	zend_trait_precedence *		882106	1					
ANR	882965	AdditiveExpression	i + 1		882106	1		+			
ANR	882966	Identifier	i		882106	0					
ANR	882967	PrimaryExpression	1		882106	1					
ANR	882968	ExpressionStatement	i = 0	851:2:25386:25391	882106	4	True				
ANR	882969	AssignmentExpression	i = 0		882106	0		=			
ANR	882970	Identifier	i		882106	0					
ANR	882971	PrimaryExpression	0		882106	1					
ANR	882972	WhileStatement	while ( ce -> trait_precedences [ i ] )		882106	5					
ANR	882973	Condition	ce -> trait_precedences [ i ]	852:9:25402:25425	882106	0	True				
ANR	882974	ArrayIndexing	ce -> trait_precedences [ i ]		882106	0					
ANR	882975	PtrMemberAccess	ce -> trait_precedences		882106	0					
ANR	882976	Identifier	ce		882106	0					
ANR	882977	Identifier	trait_precedences		882106	1					
ANR	882978	Identifier	i		882106	1					
ANR	882979	CompoundStatement		160:35:5067:5067	882106	1					
ANR	882980	ExpressionStatement	trait_precedences [ i ] = emalloc ( sizeof ( zend_trait_precedence ) )	853:3:25433:25494	882106	0	True				
ANR	882981	AssignmentExpression	trait_precedences [ i ] = emalloc ( sizeof ( zend_trait_precedence ) )		882106	0		=			
ANR	882982	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	882983	Identifier	trait_precedences		882106	0					
ANR	882984	Identifier	i		882106	1					
ANR	882985	CallExpression	emalloc ( sizeof ( zend_trait_precedence ) )		882106	1					
ANR	882986	Callee	emalloc		882106	0					
ANR	882987	Identifier	emalloc		882106	0					
ANR	882988	ArgumentList	sizeof ( zend_trait_precedence )		882106	1					
ANR	882989	Argument	sizeof ( zend_trait_precedence )		882106	0					
ANR	882990	SizeofExpression	sizeof ( zend_trait_precedence )		882106	0					
ANR	882991	Sizeof	sizeof		882106	0					
ANR	882992	SizeofOperand	zend_trait_precedence		882106	1					
ANR	882993	ExpressionStatement	"memcpy ( trait_precedences [ i ] , ce -> trait_precedences [ i ] , sizeof ( zend_trait_precedence ) )"	854:3:25499:25584	882106	1	True				
ANR	882994	CallExpression	"memcpy ( trait_precedences [ i ] , ce -> trait_precedences [ i ] , sizeof ( zend_trait_precedence ) )"		882106	0					
ANR	882995	Callee	memcpy		882106	0					
ANR	882996	Identifier	memcpy		882106	0					
ANR	882997	ArgumentList	trait_precedences [ i ]		882106	1					
ANR	882998	Argument	trait_precedences [ i ]		882106	0					
ANR	882999	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883000	Identifier	trait_precedences		882106	0					
ANR	883001	Identifier	i		882106	1					
ANR	883002	Argument	ce -> trait_precedences [ i ]		882106	1					
ANR	883003	ArrayIndexing	ce -> trait_precedences [ i ]		882106	0					
ANR	883004	PtrMemberAccess	ce -> trait_precedences		882106	0					
ANR	883005	Identifier	ce		882106	0					
ANR	883006	Identifier	trait_precedences		882106	1					
ANR	883007	Identifier	i		882106	1					
ANR	883008	Argument	sizeof ( zend_trait_precedence )		882106	2					
ANR	883009	SizeofExpression	sizeof ( zend_trait_precedence )		882106	0					
ANR	883010	Sizeof	sizeof		882106	0					
ANR	883011	SizeofOperand	zend_trait_precedence		882106	1					
ANR	883012	ExpressionStatement	trait_precedences [ i ] -> trait_method = emalloc ( sizeof ( zend_trait_method_reference ) )	855:3:25589:25670	882106	2	True				
ANR	883013	AssignmentExpression	trait_precedences [ i ] -> trait_method = emalloc ( sizeof ( zend_trait_method_reference ) )		882106	0		=			
ANR	883014	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883015	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883016	Identifier	trait_precedences		882106	0					
ANR	883017	Identifier	i		882106	1					
ANR	883018	Identifier	trait_method		882106	1					
ANR	883019	CallExpression	emalloc ( sizeof ( zend_trait_method_reference ) )		882106	1					
ANR	883020	Callee	emalloc		882106	0					
ANR	883021	Identifier	emalloc		882106	0					
ANR	883022	ArgumentList	sizeof ( zend_trait_method_reference )		882106	1					
ANR	883023	Argument	sizeof ( zend_trait_method_reference )		882106	0					
ANR	883024	SizeofExpression	sizeof ( zend_trait_method_reference )		882106	0					
ANR	883025	Sizeof	sizeof		882106	0					
ANR	883026	SizeofOperand	zend_trait_method_reference		882106	1					
ANR	883027	ExpressionStatement	"memcpy ( trait_precedences [ i ] -> trait_method , ce -> trait_precedences [ i ] -> trait_method , sizeof ( zend_trait_method_reference ) )"	856:3:25675:25794	882106	3	True				
ANR	883028	CallExpression	"memcpy ( trait_precedences [ i ] -> trait_method , ce -> trait_precedences [ i ] -> trait_method , sizeof ( zend_trait_method_reference ) )"		882106	0					
ANR	883029	Callee	memcpy		882106	0					
ANR	883030	Identifier	memcpy		882106	0					
ANR	883031	ArgumentList	trait_precedences [ i ] -> trait_method		882106	1					
ANR	883032	Argument	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883033	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883034	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883035	Identifier	trait_precedences		882106	0					
ANR	883036	Identifier	i		882106	1					
ANR	883037	Identifier	trait_method		882106	1					
ANR	883038	Argument	ce -> trait_precedences [ i ] -> trait_method		882106	1					
ANR	883039	PtrMemberAccess	ce -> trait_precedences [ i ] -> trait_method		882106	0					
ANR	883040	ArrayIndexing	ce -> trait_precedences [ i ]		882106	0					
ANR	883041	PtrMemberAccess	ce -> trait_precedences		882106	0					
ANR	883042	Identifier	ce		882106	0					
ANR	883043	Identifier	trait_precedences		882106	1					
ANR	883044	Identifier	i		882106	1					
ANR	883045	Identifier	trait_method		882106	1					
ANR	883046	Argument	sizeof ( zend_trait_method_reference )		882106	2					
ANR	883047	SizeofExpression	sizeof ( zend_trait_method_reference )		882106	0					
ANR	883048	Sizeof	sizeof		882106	0					
ANR	883049	SizeofOperand	zend_trait_method_reference		882106	1					
ANR	883050	ExpressionStatement	"trait_precedences [ i ] -> trait_method -> method_name = estrndup ( trait_precedences [ i ] -> trait_method -> method_name , trait_precedences [ i ] -> trait_method -> mname_len )"	858:3:25800:25963	882106	4	True				
ANR	883051	AssignmentExpression	"trait_precedences [ i ] -> trait_method -> method_name = estrndup ( trait_precedences [ i ] -> trait_method -> method_name , trait_precedences [ i ] -> trait_method -> mname_len )"		882106	0		=			
ANR	883052	PtrMemberAccess	trait_precedences [ i ] -> trait_method -> method_name		882106	0					
ANR	883053	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883054	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883055	Identifier	trait_precedences		882106	0					
ANR	883056	Identifier	i		882106	1					
ANR	883057	Identifier	trait_method		882106	1					
ANR	883058	Identifier	method_name		882106	1					
ANR	883059	CallExpression	"estrndup ( trait_precedences [ i ] -> trait_method -> method_name , trait_precedences [ i ] -> trait_method -> mname_len )"		882106	1					
ANR	883060	Callee	estrndup		882106	0					
ANR	883061	Identifier	estrndup		882106	0					
ANR	883062	ArgumentList	trait_precedences [ i ] -> trait_method -> method_name		882106	1					
ANR	883063	Argument	trait_precedences [ i ] -> trait_method -> method_name		882106	0					
ANR	883064	PtrMemberAccess	trait_precedences [ i ] -> trait_method -> method_name		882106	0					
ANR	883065	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883066	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883067	Identifier	trait_precedences		882106	0					
ANR	883068	Identifier	i		882106	1					
ANR	883069	Identifier	trait_method		882106	1					
ANR	883070	Identifier	method_name		882106	1					
ANR	883071	Argument	trait_precedences [ i ] -> trait_method -> mname_len		882106	1					
ANR	883072	PtrMemberAccess	trait_precedences [ i ] -> trait_method -> mname_len		882106	0					
ANR	883073	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883074	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883075	Identifier	trait_precedences		882106	0					
ANR	883076	Identifier	i		882106	1					
ANR	883077	Identifier	trait_method		882106	1					
ANR	883078	Identifier	mname_len		882106	1					
ANR	883079	ExpressionStatement	"trait_precedences [ i ] -> trait_method -> class_name = estrndup ( trait_precedences [ i ] -> trait_method -> class_name , trait_precedences [ i ] -> trait_method -> cname_len )"	861:3:25968:26129	882106	5	True				
ANR	883080	AssignmentExpression	"trait_precedences [ i ] -> trait_method -> class_name = estrndup ( trait_precedences [ i ] -> trait_method -> class_name , trait_precedences [ i ] -> trait_method -> cname_len )"		882106	0		=			
ANR	883081	PtrMemberAccess	trait_precedences [ i ] -> trait_method -> class_name		882106	0					
ANR	883082	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883083	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883084	Identifier	trait_precedences		882106	0					
ANR	883085	Identifier	i		882106	1					
ANR	883086	Identifier	trait_method		882106	1					
ANR	883087	Identifier	class_name		882106	1					
ANR	883088	CallExpression	"estrndup ( trait_precedences [ i ] -> trait_method -> class_name , trait_precedences [ i ] -> trait_method -> cname_len )"		882106	1					
ANR	883089	Callee	estrndup		882106	0					
ANR	883090	Identifier	estrndup		882106	0					
ANR	883091	ArgumentList	trait_precedences [ i ] -> trait_method -> class_name		882106	1					
ANR	883092	Argument	trait_precedences [ i ] -> trait_method -> class_name		882106	0					
ANR	883093	PtrMemberAccess	trait_precedences [ i ] -> trait_method -> class_name		882106	0					
ANR	883094	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883095	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883096	Identifier	trait_precedences		882106	0					
ANR	883097	Identifier	i		882106	1					
ANR	883098	Identifier	trait_method		882106	1					
ANR	883099	Identifier	class_name		882106	1					
ANR	883100	Argument	trait_precedences [ i ] -> trait_method -> cname_len		882106	1					
ANR	883101	PtrMemberAccess	trait_precedences [ i ] -> trait_method -> cname_len		882106	0					
ANR	883102	PtrMemberAccess	trait_precedences [ i ] -> trait_method		882106	0					
ANR	883103	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883104	Identifier	trait_precedences		882106	0					
ANR	883105	Identifier	i		882106	1					
ANR	883106	Identifier	trait_method		882106	1					
ANR	883107	Identifier	cname_len		882106	1					
ANR	883108	IfStatement	if ( trait_precedences [ i ] -> exclude_from_classes )		882106	6					
ANR	883109	Condition	trait_precedences [ i ] -> exclude_from_classes	865:7:26139:26180	882106	0	True				
ANR	883110	PtrMemberAccess	trait_precedences [ i ] -> exclude_from_classes		882106	0					
ANR	883111	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883112	Identifier	trait_precedences		882106	0					
ANR	883113	Identifier	i		882106	1					
ANR	883114	Identifier	exclude_from_classes		882106	1					
ANR	883115	CompoundStatement		175:4:5873:5882	882106	1					
ANR	883116	IdentifierDeclStatement	zend_class_entry * * exclude_from_classes ;	866:4:26189:26228	882106	0	True				
ANR	883117	IdentifierDecl	* * exclude_from_classes		882106	0					
ANR	883118	IdentifierDeclType	zend_class_entry * *		882106	0					
ANR	883119	Identifier	exclude_from_classes		882106	1					
ANR	883120	IdentifierDeclStatement	int j = 0 ;	867:4:26234:26243	882106	1	True				
ANR	883121	IdentifierDecl	j = 0		882106	0					
ANR	883122	IdentifierDeclType	int		882106	0					
ANR	883123	Identifier	j		882106	1					
ANR	883124	AssignmentExpression	j = 0		882106	2		=			
ANR	883125	Identifier	j		882106	0					
ANR	883126	PrimaryExpression	0		882106	1					
ANR	883127	WhileStatement	while ( trait_precedences [ i ] -> exclude_from_classes [ j ] )		882106	2					
ANR	883128	Condition	trait_precedences [ i ] -> exclude_from_classes [ j ]	869:11:26257:26301	882106	0	True				
ANR	883129	ArrayIndexing	trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	0					
ANR	883130	PtrMemberAccess	trait_precedences [ i ] -> exclude_from_classes		882106	0					
ANR	883131	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883132	Identifier	trait_precedences		882106	0					
ANR	883133	Identifier	i		882106	1					
ANR	883134	Identifier	exclude_from_classes		882106	1					
ANR	883135	Identifier	j		882106	1					
ANR	883136	CompoundStatement		177:58:5943:5943	882106	1					
ANR	883137	ExpressionStatement	j ++	870:5:26311:26314	882106	0	True				
ANR	883138	PostIncDecOperationExpression	j ++		882106	0					
ANR	883139	Identifier	j		882106	0					
ANR	883140	IncDec	++		882106	1					
ANR	883141	ExpressionStatement	exclude_from_classes = emalloc ( sizeof ( zend_class_entry * ) * ( j + 1 ) )	872:4:26326:26393	882106	3	True				
ANR	883142	AssignmentExpression	exclude_from_classes = emalloc ( sizeof ( zend_class_entry * ) * ( j + 1 ) )		882106	0		=			
ANR	883143	Identifier	exclude_from_classes		882106	0					
ANR	883144	CallExpression	emalloc ( sizeof ( zend_class_entry * ) * ( j + 1 ) )		882106	1					
ANR	883145	Callee	emalloc		882106	0					
ANR	883146	Identifier	emalloc		882106	0					
ANR	883147	ArgumentList	sizeof ( zend_class_entry * ) * ( j + 1 )		882106	1					
ANR	883148	Argument	sizeof ( zend_class_entry * ) * ( j + 1 )		882106	0					
ANR	883149	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( j + 1 )		882106	0		*			
ANR	883150	SizeofExpression	sizeof ( zend_class_entry * )		882106	0					
ANR	883151	Sizeof	sizeof		882106	0					
ANR	883152	SizeofOperand	zend_class_entry *		882106	1					
ANR	883153	AdditiveExpression	j + 1		882106	1		+			
ANR	883154	Identifier	j		882106	0					
ANR	883155	PrimaryExpression	1		882106	1					
ANR	883156	ExpressionStatement	j = 0	873:4:26399:26404	882106	4	True				
ANR	883157	AssignmentExpression	j = 0		882106	0		=			
ANR	883158	Identifier	j		882106	0					
ANR	883159	PrimaryExpression	0		882106	1					
ANR	883160	WhileStatement	while ( trait_precedences [ i ] -> exclude_from_classes [ j ] )		882106	5					
ANR	883161	Condition	trait_precedences [ i ] -> exclude_from_classes [ j ]	874:11:26417:26461	882106	0	True				
ANR	883162	ArrayIndexing	trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	0					
ANR	883163	PtrMemberAccess	trait_precedences [ i ] -> exclude_from_classes		882106	0					
ANR	883164	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883165	Identifier	trait_precedences		882106	0					
ANR	883166	Identifier	i		882106	1					
ANR	883167	Identifier	exclude_from_classes		882106	1					
ANR	883168	Identifier	j		882106	1					
ANR	883169	CompoundStatement		182:58:6103:6103	882106	1					
ANR	883170	ExpressionStatement	"exclude_from_classes [ j ] = ( zend_class_entry * ) estrndup ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] , strlen ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] ) )"	875:5:26471:26653	882106	0	True				
ANR	883171	AssignmentExpression	"exclude_from_classes [ j ] = ( zend_class_entry * ) estrndup ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] , strlen ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] ) )"		882106	0		=			
ANR	883172	ArrayIndexing	exclude_from_classes [ j ]		882106	0					
ANR	883173	Identifier	exclude_from_classes		882106	0					
ANR	883174	Identifier	j		882106	1					
ANR	883175	CastExpression	"( zend_class_entry * ) estrndup ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] , strlen ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] ) )"		882106	1					
ANR	883176	CastTarget	zend_class_entry *		882106	0					
ANR	883177	CallExpression	"estrndup ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] , strlen ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] ) )"		882106	1					
ANR	883178	Callee	estrndup		882106	0					
ANR	883179	Identifier	estrndup		882106	0					
ANR	883180	ArgumentList	( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	1					
ANR	883181	Argument	( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	0					
ANR	883182	CastExpression	( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	0					
ANR	883183	CastTarget	char *		882106	0					
ANR	883184	ArrayIndexing	trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	1					
ANR	883185	PtrMemberAccess	trait_precedences [ i ] -> exclude_from_classes		882106	0					
ANR	883186	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883187	Identifier	trait_precedences		882106	0					
ANR	883188	Identifier	i		882106	1					
ANR	883189	Identifier	exclude_from_classes		882106	1					
ANR	883190	Identifier	j		882106	1					
ANR	883191	Argument	strlen ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] )		882106	1					
ANR	883192	CallExpression	strlen ( ( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ] )		882106	0					
ANR	883193	Callee	strlen		882106	0					
ANR	883194	Identifier	strlen		882106	0					
ANR	883195	ArgumentList	( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	1					
ANR	883196	Argument	( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	0					
ANR	883197	CastExpression	( char * ) trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	0					
ANR	883198	CastTarget	char *		882106	0					
ANR	883199	ArrayIndexing	trait_precedences [ i ] -> exclude_from_classes [ j ]		882106	1					
ANR	883200	PtrMemberAccess	trait_precedences [ i ] -> exclude_from_classes		882106	0					
ANR	883201	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883202	Identifier	trait_precedences		882106	0					
ANR	883203	Identifier	i		882106	1					
ANR	883204	Identifier	exclude_from_classes		882106	1					
ANR	883205	Identifier	j		882106	1					
ANR	883206	ExpressionStatement	j ++	878:5:26660:26663	882106	1	True				
ANR	883207	PostIncDecOperationExpression	j ++		882106	0					
ANR	883208	Identifier	j		882106	0					
ANR	883209	IncDec	++		882106	1					
ANR	883210	ExpressionStatement	exclude_from_classes [ j ] = NULL	880:4:26675:26705	882106	6	True				
ANR	883211	AssignmentExpression	exclude_from_classes [ j ] = NULL		882106	0		=			
ANR	883212	ArrayIndexing	exclude_from_classes [ j ]		882106	0					
ANR	883213	Identifier	exclude_from_classes		882106	0					
ANR	883214	Identifier	j		882106	1					
ANR	883215	Identifier	NULL		882106	1					
ANR	883216	ExpressionStatement	trait_precedences [ i ] -> exclude_from_classes = exclude_from_classes	881:4:26711:26776	882106	7	True				
ANR	883217	AssignmentExpression	trait_precedences [ i ] -> exclude_from_classes = exclude_from_classes		882106	0		=			
ANR	883218	PtrMemberAccess	trait_precedences [ i ] -> exclude_from_classes		882106	0					
ANR	883219	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883220	Identifier	trait_precedences		882106	0					
ANR	883221	Identifier	i		882106	1					
ANR	883222	Identifier	exclude_from_classes		882106	1					
ANR	883223	Identifier	exclude_from_classes		882106	1					
ANR	883224	ExpressionStatement	i ++	883:3:26786:26789	882106	7	True				
ANR	883225	PostIncDecOperationExpression	i ++		882106	0					
ANR	883226	Identifier	i		882106	0					
ANR	883227	IncDec	++		882106	1					
ANR	883228	ExpressionStatement	trait_precedences [ i ] = NULL	885:2:26797:26824	882106	6	True				
ANR	883229	AssignmentExpression	trait_precedences [ i ] = NULL		882106	0		=			
ANR	883230	ArrayIndexing	trait_precedences [ i ]		882106	0					
ANR	883231	Identifier	trait_precedences		882106	0					
ANR	883232	Identifier	i		882106	1					
ANR	883233	Identifier	NULL		882106	1					
ANR	883234	ExpressionStatement	ce -> trait_precedences = trait_precedences	886:2:26828:26869	882106	7	True				
ANR	883235	AssignmentExpression	ce -> trait_precedences = trait_precedences		882106	0		=			
ANR	883236	PtrMemberAccess	ce -> trait_precedences		882106	0					
ANR	883237	Identifier	ce		882106	0					
ANR	883238	Identifier	trait_precedences		882106	1					
ANR	883239	Identifier	trait_precedences		882106	1					
ANR	883240	ReturnType	static void		882106	1					
ANR	883241	Identifier	zend_class_copy_ctor		882106	2					
ANR	883242	ParameterList	zend_class_entry * * pce		882106	3					
ANR	883243	Parameter	zend_class_entry * * pce	692:33:20336:20357	882106	0	True				
ANR	883244	ParameterType	zend_class_entry * *		882106	0					
ANR	883245	Identifier	pce		882106	1					
ANR	883246	CFGEntryNode	ENTRY		882106		True				
ANR	883247	CFGExitNode	EXIT		882106		True				
ANR	883248	Symbol	serialize_func		882106						
ANR	883249	Symbol	* ce		882106						
ANR	883250	Symbol	ce -> static_members_table		882106						
ANR	883251	Symbol	new_func		882106						
ANR	883252	Symbol	__get		882106						
ANR	883253	Symbol	old_ce -> default_properties_table		882106						
ANR	883254	Symbol	* trait_precedences		882106						
ANR	883255	Symbol	new_ce		882106						
ANR	883256	Symbol	ce -> name		882106						
ANR	883257	Symbol	old_ce -> refcount		882106						
ANR	883258	Symbol	trait_precedences [ i ] -> trait_method -> cname_len		882106						
ANR	883259	Symbol	* old_ce -> default_static_members_table		882106						
ANR	883260	Symbol	__callstatic		882106						
ANR	883261	Symbol	* new_ce		882106						
ANR	883262	Symbol	trait_precedences [ i ] -> trait_method -> class_name		882106						
ANR	883263	Symbol	unserialize_func		882106						
ANR	883264	Symbol	* * ce -> trait_precedences		882106						
ANR	883265	Symbol	ce -> default_properties_table		882106						
ANR	883266	Symbol	ce -> refcount		882106						
ANR	883267	Symbol	ce -> default_static_members_table		882106						
ANR	883268	Symbol	trait_aliases [ i ] -> trait_method -> mname_len		882106						
ANR	883269	Symbol	ce -> trait_precedences		882106						
ANR	883270	Symbol	ce -> trait_aliases [ i ] -> trait_method		882106						
ANR	883271	Symbol	* trait_aliases [ i ] -> trait_method		882106						
ANR	883272	Symbol	interned_estrndup		882106						
ANR	883273	Symbol	* * * i		882106						
ANR	883274	Symbol	old_ce -> default_properties_count		882106						
ANR	883275	Symbol	* * * ce		882106						
ANR	883276	Symbol	ZCG		882106						
ANR	883277	Symbol	* * trait_aliases		882106						
ANR	883278	Symbol	ZEND_CE_DOC_COMMENT_LEN		882106						
ANR	883279	Symbol	ZEND_CE_DOC_COMMENT		882106						
ANR	883280	Symbol	trait_aliases [ i ] -> alias_len		882106						
ANR	883281	Symbol	* trait_aliases		882106						
ANR	883282	Symbol	* ce -> default_static_members_table		882106						
ANR	883283	Symbol	& old_ce -> constants_table		882106						
ANR	883284	Symbol	ce		882106						
ANR	883285	Symbol	SUCCESS		882106						
ANR	883286	Symbol	* * trait_precedences		882106						
ANR	883287	Symbol	i		882106						
ANR	883288	Symbol	trait_precedences [ i ] -> trait_method -> method_name		882106						
ANR	883289	Symbol	j		882106						
ANR	883290	Symbol	* exclude_from_classes		882106						
ANR	883291	Symbol	* old_ce		882106						
ANR	883292	Symbol	accel_xlat_get		882106						
ANR	883293	Symbol	* ce -> trait_aliases		882106						
ANR	883294	Symbol	__unset		882106						
ANR	883295	Symbol	* ce -> default_properties_table		882106						
ANR	883296	Symbol	__tostring		882106						
ANR	883297	Symbol	accel_directives		882106						
ANR	883298	Symbol	ce -> name_length		882106						
ANR	883299	Symbol	exclude_from_classes		882106						
ANR	883300	Symbol	__debugInfo		882106						
ANR	883301	Symbol	* trait_precedences [ i ] -> exclude_from_classes		882106						
ANR	883302	Symbol	strlen		882106						
ANR	883303	Symbol	__isset		882106						
ANR	883304	Symbol	trait_precedences [ i ] -> trait_method -> mname_len		882106						
ANR	883305	Symbol	old_ce -> default_static_members_count		882106						
ANR	883306	Symbol	trait_aliases		882106						
ANR	883307	Symbol	* * ce -> trait_aliases		882106						
ANR	883308	Symbol	trait_precedences		882106						
ANR	883309	Symbol	* * i		882106						
ANR	883310	Symbol	NULL		882106						
ANR	883311	Symbol	ZCG ( accel_directives ) . load_comments		882106						
ANR	883312	Symbol	ce -> parent		882106						
ANR	883313	Symbol	constructor		882106						
ANR	883314	Symbol	destructor		882106						
ANR	883315	Symbol	trait_aliases [ i ] -> trait_method -> method_name		882106						
ANR	883316	Symbol	trait_aliases [ i ] -> trait_method		882106						
ANR	883317	Symbol	* * old_ce		882106						
ANR	883318	Symbol	__call		882106						
ANR	883319	Symbol	* pce		882106						
ANR	883320	Symbol	* * * trait_aliases		882106						
ANR	883321	Symbol	* trait_precedences [ i ] -> trait_method		882106						
ANR	883322	Symbol	trait_aliases [ i ] -> trait_method -> class_name		882106						
ANR	883323	Symbol	trait_precedences [ i ] -> trait_method		882106						
ANR	883324	Symbol	* * ce		882106						
ANR	883325	Symbol	emalloc		882106						
ANR	883326	Symbol	estrndup		882106						
ANR	883327	Symbol	pce		882106						
ANR	883328	Symbol	* * * trait_precedences		882106						
ANR	883329	Symbol	ce -> num_interfaces		882106						
ANR	883330	Symbol	trait_aliases [ i ] -> trait_method -> cname_len		882106						
ANR	883331	Symbol	* ce -> trait_precedences		882106						
ANR	883332	Symbol	ce -> trait_aliases		882106						
ANR	883333	Symbol	ce -> interfaces		882106						
ANR	883334	Symbol	__set		882106						
ANR	883335	Symbol	ce -> trait_precedences [ i ] -> trait_method		882106						
ANR	883336	Symbol	trait_precedences [ i ] -> exclude_from_classes		882106						
ANR	883337	Symbol	* old_ce -> default_properties_table		882106						
ANR	883338	Symbol	trait_aliases [ i ] -> alias		882106						
ANR	883339	Symbol	old_ce		882106						
ANR	883340	Symbol	old_ce -> default_static_members_table		882106						
ANR	883341	Symbol	& ce -> constants_table		882106						
ANR	883342	Symbol	* i		882106						
ANR	883343	Symbol	* j		882106						
ANR	883344	Symbol	clone		882106						
ANR	883345	Function	zend_hash_unique_copy	891:0:26884:28263							
ANR	883346	FunctionDef	"zend_hash_unique_copy (HashTable * target , HashTable * source , unique_copy_ctor_func_t pCopyConstructor , uint size , int ignore_dups , void * * fail_data , void * * conflict_data)"		883345	0					
ANR	883347	CompoundStatement		892:0:27065:28263	883345	0					
ANR	883348	IdentifierDeclStatement	Bucket * p ;	893:1:27068:27077	883345	0	True				
ANR	883349	IdentifierDecl	* p		883345	0					
ANR	883350	IdentifierDeclType	Bucket *		883345	0					
ANR	883351	Identifier	p		883345	1					
ANR	883352	IdentifierDeclStatement	void * t ;	894:1:27080:27087	883345	1	True				
ANR	883353	IdentifierDecl	* t		883345	0					
ANR	883354	IdentifierDeclType	void *		883345	0					
ANR	883355	Identifier	t		883345	1					
ANR	883356	ExpressionStatement	p = source -> pListHead	896:1:27091:27112	883345	2	True				
ANR	883357	AssignmentExpression	p = source -> pListHead		883345	0		=			
ANR	883358	Identifier	p		883345	0					
ANR	883359	PtrMemberAccess	source -> pListHead		883345	1					
ANR	883360	Identifier	source		883345	0					
ANR	883361	Identifier	pListHead		883345	1					
ANR	883362	WhileStatement	while ( p )		883345	3					
ANR	883363	Condition	p	897:8:27122:27122	883345	0	True				
ANR	883364	Identifier	p		883345	0					
ANR	883365	CompoundStatement		6:11:59:59	883345	1					
ANR	883366	IfStatement	if ( p -> nKeyLength > 0 )		883345	0					
ANR	883367	Condition	p -> nKeyLength > 0	898:6:27133:27149	883345	0	True				
ANR	883368	RelationalExpression	p -> nKeyLength > 0		883345	0		>			
ANR	883369	PtrMemberAccess	p -> nKeyLength		883345	0					
ANR	883370	Identifier	p		883345	0					
ANR	883371	Identifier	nKeyLength		883345	1					
ANR	883372	PrimaryExpression	0		883345	1					
ANR	883373	CompoundStatement		7:25:86:86	883345	1					
ANR	883374	IfStatement	"if ( zend_hash_quick_add ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t ) == SUCCESS )"		883345	0					
ANR	883375	Condition	"zend_hash_quick_add ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t ) == SUCCESS"	899:7:27161:27249	883345	0	True				
ANR	883376	EqualityExpression	"zend_hash_quick_add ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t ) == SUCCESS"		883345	0		==			
ANR	883377	CallExpression	"zend_hash_quick_add ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t )"		883345	0					
ANR	883378	Callee	zend_hash_quick_add		883345	0					
ANR	883379	Identifier	zend_hash_quick_add		883345	0					
ANR	883380	ArgumentList	target		883345	1					
ANR	883381	Argument	target		883345	0					
ANR	883382	Identifier	target		883345	0					
ANR	883383	Argument	p -> arKey		883345	1					
ANR	883384	PtrMemberAccess	p -> arKey		883345	0					
ANR	883385	Identifier	p		883345	0					
ANR	883386	Identifier	arKey		883345	1					
ANR	883387	Argument	p -> nKeyLength		883345	2					
ANR	883388	PtrMemberAccess	p -> nKeyLength		883345	0					
ANR	883389	Identifier	p		883345	0					
ANR	883390	Identifier	nKeyLength		883345	1					
ANR	883391	Argument	p -> h		883345	3					
ANR	883392	PtrMemberAccess	p -> h		883345	0					
ANR	883393	Identifier	p		883345	0					
ANR	883394	Identifier	h		883345	1					
ANR	883395	Argument	p -> pData		883345	4					
ANR	883396	PtrMemberAccess	p -> pData		883345	0					
ANR	883397	Identifier	p		883345	0					
ANR	883398	Identifier	pData		883345	1					
ANR	883399	Argument	size		883345	5					
ANR	883400	Identifier	size		883345	0					
ANR	883401	Argument	& t		883345	6					
ANR	883402	UnaryOperationExpression	& t		883345	0					
ANR	883403	UnaryOperator	&		883345	0					
ANR	883404	Identifier	t		883345	1					
ANR	883405	Identifier	SUCCESS		883345	1					
ANR	883406	CompoundStatement		8:98:186:186	883345	1					
ANR	883407	IfStatement	if ( pCopyConstructor )		883345	0					
ANR	883408	Condition	pCopyConstructor	900:8:27262:27277	883345	0	True				
ANR	883409	Identifier	pCopyConstructor		883345	0					
ANR	883410	CompoundStatement		9:26:214:214	883345	1					
ANR	883411	ExpressionStatement	pCopyConstructor ( t )	901:5:27287:27306	883345	0	True				
ANR	883412	CallExpression	pCopyConstructor ( t )		883345	0					
ANR	883413	Callee	pCopyConstructor		883345	0					
ANR	883414	Identifier	pCopyConstructor		883345	0					
ANR	883415	ArgumentList	t		883345	1					
ANR	883416	Argument	t		883345	0					
ANR	883417	Identifier	t		883345	0					
ANR	883418	ElseStatement	else		883345	0					
ANR	883419	CompoundStatement		12:10:258:258	883345	0					
ANR	883420	IfStatement	if ( p -> nKeyLength > 0 && p -> arKey [ 0 ] == 0 )		883345	0					
ANR	883421	Condition	p -> nKeyLength > 0 && p -> arKey [ 0 ] == 0	904:8:27334:27370	883345	0	True				
ANR	883422	AndExpression	p -> nKeyLength > 0 && p -> arKey [ 0 ] == 0		883345	0		&&			
ANR	883423	RelationalExpression	p -> nKeyLength > 0		883345	0		>			
ANR	883424	PtrMemberAccess	p -> nKeyLength		883345	0					
ANR	883425	Identifier	p		883345	0					
ANR	883426	Identifier	nKeyLength		883345	1					
ANR	883427	PrimaryExpression	0		883345	1					
ANR	883428	EqualityExpression	p -> arKey [ 0 ] == 0		883345	1		==			
ANR	883429	ArrayIndexing	p -> arKey [ 0 ]		883345	0					
ANR	883430	PtrMemberAccess	p -> arKey		883345	0					
ANR	883431	Identifier	p		883345	0					
ANR	883432	Identifier	arKey		883345	1					
ANR	883433	PrimaryExpression	0		883345	1					
ANR	883434	PrimaryExpression	0		883345	1					
ANR	883435	CompoundStatement		13:47:307:307	883345	1					
ANR	883436	IfStatement	"if ( zend_hash_quick_update ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t ) == SUCCESS )"		883345	0					
ANR	883437	Condition	"zend_hash_quick_update ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t ) == SUCCESS"	907:9:27453:27544	883345	0	True				
ANR	883438	EqualityExpression	"zend_hash_quick_update ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t ) == SUCCESS"		883345	0		==			
ANR	883439	CallExpression	"zend_hash_quick_update ( target , p -> arKey , p -> nKeyLength , p -> h , p -> pData , size , & t )"		883345	0					
ANR	883440	Callee	zend_hash_quick_update		883345	0					
ANR	883441	Identifier	zend_hash_quick_update		883345	0					
ANR	883442	ArgumentList	target		883345	1					
ANR	883443	Argument	target		883345	0					
ANR	883444	Identifier	target		883345	0					
ANR	883445	Argument	p -> arKey		883345	1					
ANR	883446	PtrMemberAccess	p -> arKey		883345	0					
ANR	883447	Identifier	p		883345	0					
ANR	883448	Identifier	arKey		883345	1					
ANR	883449	Argument	p -> nKeyLength		883345	2					
ANR	883450	PtrMemberAccess	p -> nKeyLength		883345	0					
ANR	883451	Identifier	p		883345	0					
ANR	883452	Identifier	nKeyLength		883345	1					
ANR	883453	Argument	p -> h		883345	3					
ANR	883454	PtrMemberAccess	p -> h		883345	0					
ANR	883455	Identifier	p		883345	0					
ANR	883456	Identifier	h		883345	1					
ANR	883457	Argument	p -> pData		883345	4					
ANR	883458	PtrMemberAccess	p -> pData		883345	0					
ANR	883459	Identifier	p		883345	0					
ANR	883460	Identifier	pData		883345	1					
ANR	883461	Argument	size		883345	5					
ANR	883462	Identifier	size		883345	0					
ANR	883463	Argument	& t		883345	6					
ANR	883464	UnaryOperationExpression	& t		883345	0					
ANR	883465	UnaryOperator	&		883345	0					
ANR	883466	Identifier	t		883345	1					
ANR	883467	Identifier	SUCCESS		883345	1					
ANR	883468	CompoundStatement		16:103:481:481	883345	1					
ANR	883469	IfStatement	if ( pCopyConstructor )		883345	0					
ANR	883470	Condition	pCopyConstructor	908:10:27559:27574	883345	0	True				
ANR	883471	Identifier	pCopyConstructor		883345	0					
ANR	883472	CompoundStatement		17:28:511:511	883345	1					
ANR	883473	ExpressionStatement	pCopyConstructor ( t )	909:7:27586:27605	883345	0	True				
ANR	883474	CallExpression	pCopyConstructor ( t )		883345	0					
ANR	883475	Callee	pCopyConstructor		883345	0					
ANR	883476	Identifier	pCopyConstructor		883345	0					
ANR	883477	ArgumentList	t		883345	1					
ANR	883478	Argument	t		883345	0					
ANR	883479	Identifier	t		883345	0					
ANR	883480	ElseStatement	else		883345	0					
ANR	883481	IfStatement	"if ( ! ignore_dups && zend_hash_quick_find ( target , p -> arKey , p -> nKeyLength , p -> h , & t ) == SUCCESS )"		883345	0					
ANR	883482	Condition	"! ignore_dups && zend_hash_quick_find ( target , p -> arKey , p -> nKeyLength , p -> h , & t ) == SUCCESS"	913:15:27644:27733	883345	0	True				
ANR	883483	AndExpression	"! ignore_dups && zend_hash_quick_find ( target , p -> arKey , p -> nKeyLength , p -> h , & t ) == SUCCESS"		883345	0		&&			
ANR	883484	UnaryOperationExpression	! ignore_dups		883345	0					
ANR	883485	UnaryOperator	!		883345	0					
ANR	883486	Identifier	ignore_dups		883345	1					
ANR	883487	EqualityExpression	"zend_hash_quick_find ( target , p -> arKey , p -> nKeyLength , p -> h , & t ) == SUCCESS"		883345	1		==			
ANR	883488	CallExpression	"zend_hash_quick_find ( target , p -> arKey , p -> nKeyLength , p -> h , & t )"		883345	0					
ANR	883489	Callee	zend_hash_quick_find		883345	0					
ANR	883490	Identifier	zend_hash_quick_find		883345	0					
ANR	883491	ArgumentList	target		883345	1					
ANR	883492	Argument	target		883345	0					
ANR	883493	Identifier	target		883345	0					
ANR	883494	Argument	p -> arKey		883345	1					
ANR	883495	PtrMemberAccess	p -> arKey		883345	0					
ANR	883496	Identifier	p		883345	0					
ANR	883497	Identifier	arKey		883345	1					
ANR	883498	Argument	p -> nKeyLength		883345	2					
ANR	883499	PtrMemberAccess	p -> nKeyLength		883345	0					
ANR	883500	Identifier	p		883345	0					
ANR	883501	Identifier	nKeyLength		883345	1					
ANR	883502	Argument	p -> h		883345	3					
ANR	883503	PtrMemberAccess	p -> h		883345	0					
ANR	883504	Identifier	p		883345	0					
ANR	883505	Identifier	h		883345	1					
ANR	883506	Argument	& t		883345	4					
ANR	883507	UnaryOperationExpression	& t		883345	0					
ANR	883508	UnaryOperator	&		883345	0					
ANR	883509	Identifier	t		883345	1					
ANR	883510	Identifier	SUCCESS		883345	1					
ANR	883511	CompoundStatement		22:107:670:670	883345	1					
ANR	883512	ExpressionStatement	* fail_data = p -> pData	914:5:27743:27764	883345	0	True				
ANR	883513	AssignmentExpression	* fail_data = p -> pData		883345	0		=			
ANR	883514	UnaryOperationExpression	* fail_data		883345	0					
ANR	883515	UnaryOperator	*		883345	0					
ANR	883516	Identifier	fail_data		883345	1					
ANR	883517	PtrMemberAccess	p -> pData		883345	1					
ANR	883518	Identifier	p		883345	0					
ANR	883519	Identifier	pData		883345	1					
ANR	883520	ExpressionStatement	* conflict_data = t	915:5:27771:27789	883345	1	True				
ANR	883521	AssignmentExpression	* conflict_data = t		883345	0		=			
ANR	883522	UnaryOperationExpression	* conflict_data		883345	0					
ANR	883523	UnaryOperator	*		883345	0					
ANR	883524	Identifier	conflict_data		883345	1					
ANR	883525	Identifier	t		883345	1					
ANR	883526	ReturnStatement	return FAILURE ;	916:5:27796:27810	883345	2	True				
ANR	883527	Identifier	FAILURE		883345	0					
ANR	883528	ElseStatement	else		883345	0					
ANR	883529	CompoundStatement		28:9:766:766	883345	0					
ANR	883530	IfStatement	"if ( ! zend_hash_index_exists ( target , p -> h ) && zend_hash_index_update ( target , p -> h , p -> pData , size , & t ) == SUCCESS )"		883345	0					
ANR	883531	Condition	"! zend_hash_index_exists ( target , p -> h ) && zend_hash_index_update ( target , p -> h , p -> pData , size , & t ) == SUCCESS"	920:7:27841:27948	883345	0	True				
ANR	883532	AndExpression	"! zend_hash_index_exists ( target , p -> h ) && zend_hash_index_update ( target , p -> h , p -> pData , size , & t ) == SUCCESS"		883345	0		&&			
ANR	883533	UnaryOperationExpression	"! zend_hash_index_exists ( target , p -> h )"		883345	0					
ANR	883534	UnaryOperator	!		883345	0					
ANR	883535	CallExpression	"zend_hash_index_exists ( target , p -> h )"		883345	1					
ANR	883536	Callee	zend_hash_index_exists		883345	0					
ANR	883537	Identifier	zend_hash_index_exists		883345	0					
ANR	883538	ArgumentList	target		883345	1					
ANR	883539	Argument	target		883345	0					
ANR	883540	Identifier	target		883345	0					
ANR	883541	Argument	p -> h		883345	1					
ANR	883542	PtrMemberAccess	p -> h		883345	0					
ANR	883543	Identifier	p		883345	0					
ANR	883544	Identifier	h		883345	1					
ANR	883545	EqualityExpression	"zend_hash_index_update ( target , p -> h , p -> pData , size , & t ) == SUCCESS"		883345	1		==			
ANR	883546	CallExpression	"zend_hash_index_update ( target , p -> h , p -> pData , size , & t )"		883345	0					
ANR	883547	Callee	zend_hash_index_update		883345	0					
ANR	883548	Identifier	zend_hash_index_update		883345	0					
ANR	883549	ArgumentList	target		883345	1					
ANR	883550	Argument	target		883345	0					
ANR	883551	Identifier	target		883345	0					
ANR	883552	Argument	p -> h		883345	1					
ANR	883553	PtrMemberAccess	p -> h		883345	0					
ANR	883554	Identifier	p		883345	0					
ANR	883555	Identifier	h		883345	1					
ANR	883556	Argument	p -> pData		883345	2					
ANR	883557	PtrMemberAccess	p -> pData		883345	0					
ANR	883558	Identifier	p		883345	0					
ANR	883559	Identifier	pData		883345	1					
ANR	883560	Argument	size		883345	3					
ANR	883561	Identifier	size		883345	0					
ANR	883562	Argument	& t		883345	4					
ANR	883563	UnaryOperationExpression	& t		883345	0					
ANR	883564	UnaryOperator	&		883345	0					
ANR	883565	Identifier	t		883345	1					
ANR	883566	Identifier	SUCCESS		883345	1					
ANR	883567	CompoundStatement		29:117:885:885	883345	1					
ANR	883568	IfStatement	if ( pCopyConstructor )		883345	0					
ANR	883569	Condition	pCopyConstructor	921:8:27961:27976	883345	0	True				
ANR	883570	Identifier	pCopyConstructor		883345	0					
ANR	883571	CompoundStatement		30:26:913:913	883345	1					
ANR	883572	ExpressionStatement	pCopyConstructor ( t )	922:5:27986:28005	883345	0	True				
ANR	883573	CallExpression	pCopyConstructor ( t )		883345	0					
ANR	883574	Callee	pCopyConstructor		883345	0					
ANR	883575	Identifier	pCopyConstructor		883345	0					
ANR	883576	ArgumentList	t		883345	1					
ANR	883577	Argument	t		883345	0					
ANR	883578	Identifier	t		883345	0					
ANR	883579	ElseStatement	else		883345	0					
ANR	883580	IfStatement	"if ( ! ignore_dups && zend_hash_index_find ( target , p -> h , & t ) == SUCCESS )"		883345	0					
ANR	883581	Condition	"! ignore_dups && zend_hash_index_find ( target , p -> h , & t ) == SUCCESS"	924:14:28027:28090	883345	0	True				
ANR	883582	AndExpression	"! ignore_dups && zend_hash_index_find ( target , p -> h , & t ) == SUCCESS"		883345	0		&&			
ANR	883583	UnaryOperationExpression	! ignore_dups		883345	0					
ANR	883584	UnaryOperator	!		883345	0					
ANR	883585	Identifier	ignore_dups		883345	1					
ANR	883586	EqualityExpression	"zend_hash_index_find ( target , p -> h , & t ) == SUCCESS"		883345	1		==			
ANR	883587	CallExpression	"zend_hash_index_find ( target , p -> h , & t )"		883345	0					
ANR	883588	Callee	zend_hash_index_find		883345	0					
ANR	883589	Identifier	zend_hash_index_find		883345	0					
ANR	883590	ArgumentList	target		883345	1					
ANR	883591	Argument	target		883345	0					
ANR	883592	Identifier	target		883345	0					
ANR	883593	Argument	p -> h		883345	1					
ANR	883594	PtrMemberAccess	p -> h		883345	0					
ANR	883595	Identifier	p		883345	0					
ANR	883596	Identifier	h		883345	1					
ANR	883597	Argument	& t		883345	2					
ANR	883598	UnaryOperationExpression	& t		883345	0					
ANR	883599	UnaryOperator	&		883345	0					
ANR	883600	Identifier	t		883345	1					
ANR	883601	Identifier	SUCCESS		883345	1					
ANR	883602	CompoundStatement		33:80:1027:1027	883345	1					
ANR	883603	ExpressionStatement	* fail_data = p -> pData	925:4:28099:28120	883345	0	True				
ANR	883604	AssignmentExpression	* fail_data = p -> pData		883345	0		=			
ANR	883605	UnaryOperationExpression	* fail_data		883345	0					
ANR	883606	UnaryOperator	*		883345	0					
ANR	883607	Identifier	fail_data		883345	1					
ANR	883608	PtrMemberAccess	p -> pData		883345	1					
ANR	883609	Identifier	p		883345	0					
ANR	883610	Identifier	pData		883345	1					
ANR	883611	ExpressionStatement	* conflict_data = t	926:4:28126:28144	883345	1	True				
ANR	883612	AssignmentExpression	* conflict_data = t		883345	0		=			
ANR	883613	UnaryOperationExpression	* conflict_data		883345	0					
ANR	883614	UnaryOperator	*		883345	0					
ANR	883615	Identifier	conflict_data		883345	1					
ANR	883616	Identifier	t		883345	1					
ANR	883617	ReturnStatement	return FAILURE ;	927:4:28150:28164	883345	2	True				
ANR	883618	Identifier	FAILURE		883345	0					
ANR	883619	ExpressionStatement	p = p -> pListNext	930:2:28177:28193	883345	1	True				
ANR	883620	AssignmentExpression	p = p -> pListNext		883345	0		=			
ANR	883621	Identifier	p		883345	0					
ANR	883622	PtrMemberAccess	p -> pListNext		883345	1					
ANR	883623	Identifier	p		883345	0					
ANR	883624	Identifier	pListNext		883345	1					
ANR	883625	ExpressionStatement	target -> pInternalPointer = target -> pListHead	932:1:28199:28243	883345	4	True				
ANR	883626	AssignmentExpression	target -> pInternalPointer = target -> pListHead		883345	0		=			
ANR	883627	PtrMemberAccess	target -> pInternalPointer		883345	0					
ANR	883628	Identifier	target		883345	0					
ANR	883629	Identifier	pInternalPointer		883345	1					
ANR	883630	PtrMemberAccess	target -> pListHead		883345	1					
ANR	883631	Identifier	target		883345	0					
ANR	883632	Identifier	pListHead		883345	1					
ANR	883633	ReturnStatement	return SUCCESS ;	934:1:28247:28261	883345	5	True				
ANR	883634	Identifier	SUCCESS		883345	0					
ANR	883635	ReturnType	static int		883345	1					
ANR	883636	Identifier	zend_hash_unique_copy		883345	2					
ANR	883637	ParameterList	"HashTable * target , HashTable * source , unique_copy_ctor_func_t pCopyConstructor , uint size , int ignore_dups , void * * fail_data , void * * conflict_data"		883345	3					
ANR	883638	Parameter	HashTable * target	891:33:26917:26933	883345	0	True				
ANR	883639	ParameterType	HashTable *		883345	0					
ANR	883640	Identifier	target		883345	1					
ANR	883641	Parameter	HashTable * source	891:52:26936:26952	883345	1	True				
ANR	883642	ParameterType	HashTable *		883345	0					
ANR	883643	Identifier	source		883345	1					
ANR	883644	Parameter	unique_copy_ctor_func_t pCopyConstructor	891:71:26955:26994	883345	2	True				
ANR	883645	ParameterType	unique_copy_ctor_func_t		883345	0					
ANR	883646	Identifier	pCopyConstructor		883345	1					
ANR	883647	Parameter	uint size	891:113:26997:27005	883345	3	True				
ANR	883648	ParameterType	uint		883345	0					
ANR	883649	Identifier	size		883345	1					
ANR	883650	Parameter	int ignore_dups	891:124:27008:27022	883345	4	True				
ANR	883651	ParameterType	int		883345	0					
ANR	883652	Identifier	ignore_dups		883345	1					
ANR	883653	Parameter	void * * fail_data	891:141:27025:27040	883345	5	True				
ANR	883654	ParameterType	void * *		883345	0					
ANR	883655	Identifier	fail_data		883345	1					
ANR	883656	Parameter	void * * conflict_data	891:159:27043:27062	883345	6	True				
ANR	883657	ParameterType	void * *		883345	0					
ANR	883658	Identifier	conflict_data		883345	1					
ANR	883659	CFGEntryNode	ENTRY		883345		True				
ANR	883660	CFGExitNode	EXIT		883345		True				
ANR	883661	Symbol	p -> arKey		883345						
ANR	883662	Symbol	source -> pListHead		883345						
ANR	883663	Symbol	zend_hash_index_exists		883345						
ANR	883664	Symbol	source		883345						
ANR	883665	Symbol	ignore_dups		883345						
ANR	883666	Symbol	* p -> arKey		883345						
ANR	883667	Symbol	* conflict_data		883345						
ANR	883668	Symbol	fail_data		883345						
ANR	883669	Symbol	zend_hash_quick_find		883345						
ANR	883670	Symbol	zend_hash_quick_add		883345						
ANR	883671	Symbol	p -> pData		883345						
ANR	883672	Symbol	* source		883345						
ANR	883673	Symbol	* fail_data		883345						
ANR	883674	Symbol	pCopyConstructor		883345						
ANR	883675	Symbol	* * p		883345						
ANR	883676	Symbol	p -> h		883345						
ANR	883677	Symbol	zend_hash_index_find		883345						
ANR	883678	Symbol	SUCCESS		883345						
ANR	883679	Symbol	p -> nKeyLength		883345						
ANR	883680	Symbol	zend_hash_index_update		883345						
ANR	883681	Symbol	target -> pListHead		883345						
ANR	883682	Symbol	FAILURE		883345						
ANR	883683	Symbol	conflict_data		883345						
ANR	883684	Symbol	target		883345						
ANR	883685	Symbol	p		883345						
ANR	883686	Symbol	* target		883345						
ANR	883687	Symbol	p -> pListNext		883345						
ANR	883688	Symbol	size		883345						
ANR	883689	Symbol	t		883345						
ANR	883690	Symbol	* p		883345						
ANR	883691	Symbol	& t		883345						
ANR	883692	Symbol	zend_hash_quick_update		883345						
ANR	883693	Symbol	target -> pInternalPointer		883345						
ANR	883694	Function	zend_accel_function_hash_copy	937:0:28266:29136							
ANR	883695	FunctionDef	"zend_accel_function_hash_copy (HashTable * target , HashTable * source , unique_copy_ctor_func_t pCopyConstructor)"		883694	0					
ANR	883696	CompoundStatement		938:0:28388:29136	883694	0					
ANR	883697	IdentifierDeclStatement	"zend_function * function1 , * function2 ;"	939:1:28391:28427	883694	0	True				
ANR	883698	IdentifierDecl	* function1		883694	0					
ANR	883699	IdentifierDeclType	zend_function *		883694	0					
ANR	883700	Identifier	function1		883694	1					
ANR	883701	IdentifierDecl	* function2		883694	1					
ANR	883702	IdentifierDeclType	zend_function *		883694	0					
ANR	883703	Identifier	function2		883694	1					
ANR	883704	ExpressionStatement	TSRMLS_FETCH ( )	940:1:28430:28444	883694	1	True				
ANR	883705	CallExpression	TSRMLS_FETCH ( )		883694	0					
ANR	883706	Callee	TSRMLS_FETCH		883694	0					
ANR	883707	Identifier	TSRMLS_FETCH		883694	0					
ANR	883708	ArgumentList			883694	1					
ANR	883709	IfStatement	"if ( zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_function ) , 0 , ( void * * ) & function1 , ( void * * ) & function2 ) != SUCCESS )"		883694	2					
ANR	883710	Condition	"zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_function ) , 0 , ( void * * ) & function1 , ( void * * ) & function2 ) != SUCCESS"	942:5:28452:28583	883694	0	True				
ANR	883711	EqualityExpression	"zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_function ) , 0 , ( void * * ) & function1 , ( void * * ) & function2 ) != SUCCESS"		883694	0		!=			
ANR	883712	CallExpression	"zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_function ) , 0 , ( void * * ) & function1 , ( void * * ) & function2 )"		883694	0					
ANR	883713	Callee	zend_hash_unique_copy		883694	0					
ANR	883714	Identifier	zend_hash_unique_copy		883694	0					
ANR	883715	ArgumentList	target		883694	1					
ANR	883716	Argument	target		883694	0					
ANR	883717	Identifier	target		883694	0					
ANR	883718	Argument	source		883694	1					
ANR	883719	Identifier	source		883694	0					
ANR	883720	Argument	pCopyConstructor		883694	2					
ANR	883721	Identifier	pCopyConstructor		883694	0					
ANR	883722	Argument	sizeof ( zend_function )		883694	3					
ANR	883723	SizeofExpression	sizeof ( zend_function )		883694	0					
ANR	883724	Sizeof	sizeof		883694	0					
ANR	883725	SizeofOperand	zend_function		883694	1					
ANR	883726	Argument	0		883694	4					
ANR	883727	PrimaryExpression	0		883694	0					
ANR	883728	Argument	( void * * ) & function1		883694	5					
ANR	883729	CastExpression	( void * * ) & function1		883694	0					
ANR	883730	CastTarget	void * *		883694	0					
ANR	883731	UnaryOperationExpression	& function1		883694	1					
ANR	883732	UnaryOperator	&		883694	0					
ANR	883733	Identifier	function1		883694	1					
ANR	883734	Argument	( void * * ) & function2		883694	6					
ANR	883735	CastExpression	( void * * ) & function2		883694	0					
ANR	883736	CastTarget	void * *		883694	0					
ANR	883737	UnaryOperationExpression	& function2		883694	1					
ANR	883738	UnaryOperator	&		883694	0					
ANR	883739	Identifier	function2		883694	1					
ANR	883740	Identifier	SUCCESS		883694	1					
ANR	883741	CompoundStatement		5:139:197:197	883694	1					
ANR	883742	ExpressionStatement	CG ( in_compilation ) = 1	943:2:28590:28612	883694	0	True				
ANR	883743	AssignmentExpression	CG ( in_compilation ) = 1		883694	0		=			
ANR	883744	CallExpression	CG ( in_compilation )		883694	0					
ANR	883745	Callee	CG		883694	0					
ANR	883746	Identifier	CG		883694	0					
ANR	883747	ArgumentList	in_compilation		883694	1					
ANR	883748	Argument	in_compilation		883694	0					
ANR	883749	Identifier	in_compilation		883694	0					
ANR	883750	PrimaryExpression	1		883694	1					
ANR	883751	Statement	zend_set_compiled_filename	944:2:28616:28641	883694	1	True				
ANR	883752	Statement	(	944:28:28642:28642	883694	2	True				
ANR	883753	Statement	function1	944:29:28643:28651	883694	3	True				
ANR	883754	Statement	->	944:38:28652:28653	883694	4	True				
ANR	883755	Statement	op_array	944:40:28654:28661	883694	5	True				
ANR	883756	Statement	.	944:48:28662:28662	883694	6	True				
ANR	883757	Statement	filename	944:49:28663:28670	883694	7	True				
ANR	883758	Statement	TSRMLS_CC	944:58:28672:28680	883694	8	True				
ANR	883759	Statement	)	944:67:28681:28681	883694	9	True				
ANR	883760	ExpressionStatement		944:68:28682:28682	883694	10	True				
ANR	883761	ExpressionStatement	CG ( zend_lineno ) = function1 -> op_array . opcodes [ 0 ] . lineno	945:2:28686:28741	883694	11	True				
ANR	883762	AssignmentExpression	CG ( zend_lineno ) = function1 -> op_array . opcodes [ 0 ] . lineno		883694	0		=			
ANR	883763	CallExpression	CG ( zend_lineno )		883694	0					
ANR	883764	Callee	CG		883694	0					
ANR	883765	Identifier	CG		883694	0					
ANR	883766	ArgumentList	zend_lineno		883694	1					
ANR	883767	Argument	zend_lineno		883694	0					
ANR	883768	Identifier	zend_lineno		883694	0					
ANR	883769	MemberAccess	function1 -> op_array . opcodes [ 0 ] . lineno		883694	1					
ANR	883770	ArrayIndexing	function1 -> op_array . opcodes [ 0 ]		883694	0					
ANR	883771	MemberAccess	function1 -> op_array . opcodes		883694	0					
ANR	883772	PtrMemberAccess	function1 -> op_array		883694	0					
ANR	883773	Identifier	function1		883694	0					
ANR	883774	Identifier	op_array		883694	1					
ANR	883775	Identifier	opcodes		883694	1					
ANR	883776	PrimaryExpression	0		883694	1					
ANR	883777	Identifier	lineno		883694	1					
ANR	883778	IfStatement	if ( function2 -> type == ZEND_USER_FUNCTION && function2 -> op_array . last > 0 )		883694	12					
ANR	883779	Condition	function2 -> type == ZEND_USER_FUNCTION && function2 -> op_array . last > 0	946:6:28749:28820	883694	0	True				
ANR	883780	AndExpression	function2 -> type == ZEND_USER_FUNCTION && function2 -> op_array . last > 0		883694	0		&&			
ANR	883781	EqualityExpression	function2 -> type == ZEND_USER_FUNCTION		883694	0		==			
ANR	883782	PtrMemberAccess	function2 -> type		883694	0					
ANR	883783	Identifier	function2		883694	0					
ANR	883784	Identifier	type		883694	1					
ANR	883785	Identifier	ZEND_USER_FUNCTION		883694	1					
ANR	883786	RelationalExpression	function2 -> op_array . last > 0		883694	1		>			
ANR	883787	MemberAccess	function2 -> op_array . last		883694	0					
ANR	883788	PtrMemberAccess	function2 -> op_array		883694	0					
ANR	883789	Identifier	function2		883694	0					
ANR	883790	Identifier	op_array		883694	1					
ANR	883791	Identifier	last		883694	1					
ANR	883792	PrimaryExpression	0		883694	1					
ANR	883793	CompoundStatement		10:36:434:434	883694	1					
ANR	883794	ExpressionStatement	"zend_error ( E_ERROR , ""Cannot redeclare %s() (previously declared in %s:%d)"" , function1 -> common . function_name , function2 -> op_array . filename , ( int ) function2 -> op_array . opcodes [ 0 ] . lineno )"	948:3:28828:29034	883694	0	True				
ANR	883795	CallExpression	"zend_error ( E_ERROR , ""Cannot redeclare %s() (previously declared in %s:%d)"" , function1 -> common . function_name , function2 -> op_array . filename , ( int ) function2 -> op_array . opcodes [ 0 ] . lineno )"		883694	0					
ANR	883796	Callee	zend_error		883694	0					
ANR	883797	Identifier	zend_error		883694	0					
ANR	883798	ArgumentList	E_ERROR		883694	1					
ANR	883799	Argument	E_ERROR		883694	0					
ANR	883800	Identifier	E_ERROR		883694	0					
ANR	883801	Argument	"""Cannot redeclare %s() (previously declared in %s:%d)"""		883694	1					
ANR	883802	PrimaryExpression	"""Cannot redeclare %s() (previously declared in %s:%d)"""		883694	0					
ANR	883803	Argument	function1 -> common . function_name		883694	2					
ANR	883804	MemberAccess	function1 -> common . function_name		883694	0					
ANR	883805	PtrMemberAccess	function1 -> common		883694	0					
ANR	883806	Identifier	function1		883694	0					
ANR	883807	Identifier	common		883694	1					
ANR	883808	Identifier	function_name		883694	1					
ANR	883809	Argument	function2 -> op_array . filename		883694	3					
ANR	883810	MemberAccess	function2 -> op_array . filename		883694	0					
ANR	883811	PtrMemberAccess	function2 -> op_array		883694	0					
ANR	883812	Identifier	function2		883694	0					
ANR	883813	Identifier	op_array		883694	1					
ANR	883814	Identifier	filename		883694	1					
ANR	883815	Argument	( int ) function2 -> op_array . opcodes [ 0 ] . lineno		883694	4					
ANR	883816	CastExpression	( int ) function2 -> op_array . opcodes [ 0 ] . lineno		883694	0					
ANR	883817	CastTarget	int		883694	0					
ANR	883818	MemberAccess	function2 -> op_array . opcodes [ 0 ] . lineno		883694	1					
ANR	883819	ArrayIndexing	function2 -> op_array . opcodes [ 0 ]		883694	0					
ANR	883820	MemberAccess	function2 -> op_array . opcodes		883694	0					
ANR	883821	PtrMemberAccess	function2 -> op_array		883694	0					
ANR	883822	Identifier	function2		883694	0					
ANR	883823	Identifier	op_array		883694	1					
ANR	883824	Identifier	opcodes		883694	1					
ANR	883825	PrimaryExpression	0		883694	1					
ANR	883826	Identifier	lineno		883694	1					
ANR	883827	ElseStatement	else		883694	0					
ANR	883828	CompoundStatement		15:9:656:656	883694	0					
ANR	883829	ExpressionStatement	"zend_error ( E_ERROR , ""Cannot redeclare %s()"" , function1 -> common . function_name )"	953:3:29050:29127	883694	0	True				
ANR	883830	CallExpression	"zend_error ( E_ERROR , ""Cannot redeclare %s()"" , function1 -> common . function_name )"		883694	0					
ANR	883831	Callee	zend_error		883694	0					
ANR	883832	Identifier	zend_error		883694	0					
ANR	883833	ArgumentList	E_ERROR		883694	1					
ANR	883834	Argument	E_ERROR		883694	0					
ANR	883835	Identifier	E_ERROR		883694	0					
ANR	883836	Argument	"""Cannot redeclare %s()"""		883694	1					
ANR	883837	PrimaryExpression	"""Cannot redeclare %s()"""		883694	0					
ANR	883838	Argument	function1 -> common . function_name		883694	2					
ANR	883839	MemberAccess	function1 -> common . function_name		883694	0					
ANR	883840	PtrMemberAccess	function1 -> common		883694	0					
ANR	883841	Identifier	function1		883694	0					
ANR	883842	Identifier	common		883694	1					
ANR	883843	Identifier	function_name		883694	1					
ANR	883844	ReturnType	static void		883694	1					
ANR	883845	Identifier	zend_accel_function_hash_copy		883694	2					
ANR	883846	ParameterList	"HashTable * target , HashTable * source , unique_copy_ctor_func_t pCopyConstructor"		883694	3					
ANR	883847	Parameter	HashTable * target	937:42:28308:28324	883694	0	True				
ANR	883848	ParameterType	HashTable *		883694	0					
ANR	883849	Identifier	target		883694	1					
ANR	883850	Parameter	HashTable * source	937:61:28327:28343	883694	1	True				
ANR	883851	ParameterType	HashTable *		883694	0					
ANR	883852	Identifier	source		883694	1					
ANR	883853	Parameter	unique_copy_ctor_func_t pCopyConstructor	937:80:28346:28385	883694	2	True				
ANR	883854	ParameterType	unique_copy_ctor_func_t		883694	0					
ANR	883855	Identifier	pCopyConstructor		883694	1					
ANR	883856	CFGEntryNode	ENTRY		883694		True				
ANR	883857	CFGExitNode	EXIT		883694		True				
ANR	883858	Symbol	function2		883694						
ANR	883859	Symbol	function1		883694						
ANR	883860	Symbol	function2 -> op_array . filename		883694						
ANR	883861	Symbol	* function1 -> op_array . opcodes		883694						
ANR	883862	Symbol	source		883694						
ANR	883863	Symbol	in_compilation		883694						
ANR	883864	Symbol	ZEND_USER_FUNCTION		883694						
ANR	883865	Symbol	function2 -> type		883694						
ANR	883866	Symbol	zend_lineno		883694						
ANR	883867	Symbol	pCopyConstructor		883694						
ANR	883868	Symbol	function1 -> op_array		883694						
ANR	883869	Symbol	& function2		883694						
ANR	883870	Symbol	& function1		883694						
ANR	883871	Symbol	SUCCESS		883694						
ANR	883872	Symbol	CG		883694						
ANR	883873	Symbol	function2 -> op_array		883694						
ANR	883874	Symbol	* * function2		883694						
ANR	883875	Symbol	* * function1		883694						
ANR	883876	Symbol	function2 -> op_array . opcodes [ 0 ] . lineno		883694						
ANR	883877	Symbol	function1 -> op_array . opcodes		883694						
ANR	883878	Symbol	target		883694						
ANR	883879	Symbol	* function1		883694						
ANR	883880	Symbol	function1 -> common . function_name		883694						
ANR	883881	Symbol	E_ERROR		883694						
ANR	883882	Symbol	* function1 -> op_array		883694						
ANR	883883	Symbol	function2 -> op_array . last		883694						
ANR	883884	Symbol	* function2 -> op_array		883694						
ANR	883885	Symbol	* function2		883694						
ANR	883886	Symbol	* function2 -> op_array . opcodes		883694						
ANR	883887	Symbol	function1 -> common		883694						
ANR	883888	Symbol	function2 -> op_array . opcodes		883694						
ANR	883889	Symbol	function1 -> op_array . opcodes [ 0 ] . lineno		883694						
ANR	883890	Symbol	zend_hash_unique_copy		883694						
ANR	883891	Function	zend_accel_class_hash_copy	958:0:29139:29846							
ANR	883892	FunctionDef	"zend_accel_class_hash_copy (HashTable * target , HashTable * source , unique_copy_ctor_func_t pCopyConstructor TSRMLS_DC)"		883891	0					
ANR	883893	CompoundStatement		959:0:29268:29846	883891	0					
ANR	883894	IdentifierDeclStatement	"zend_class_entry * * pce1 , * * pce2 ;"	960:1:29271:29302	883891	0	True				
ANR	883895	IdentifierDecl	* * pce1		883891	0					
ANR	883896	IdentifierDeclType	zend_class_entry * *		883891	0					
ANR	883897	Identifier	pce1		883891	1					
ANR	883898	IdentifierDecl	* * pce2		883891	1					
ANR	883899	IdentifierDeclType	zend_class_entry * *		883891	0					
ANR	883900	Identifier	pce2		883891	1					
ANR	883901	IfStatement	"if ( zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_class_entry * ) , ZCG ( accel_directives ) . ignore_dups , ( void * * ) & pce1 , ( void * * ) & pce2 ) != SUCCESS )"		883891	1					
ANR	883902	Condition	"zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_class_entry * ) , ZCG ( accel_directives ) . ignore_dups , ( void * * ) & pce1 , ( void * * ) & pce2 ) != SUCCESS"	962:5:29310:29467	883891	0	True				
ANR	883903	EqualityExpression	"zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_class_entry * ) , ZCG ( accel_directives ) . ignore_dups , ( void * * ) & pce1 , ( void * * ) & pce2 ) != SUCCESS"		883891	0		!=			
ANR	883904	CallExpression	"zend_hash_unique_copy ( target , source , pCopyConstructor , sizeof ( zend_class_entry * ) , ZCG ( accel_directives ) . ignore_dups , ( void * * ) & pce1 , ( void * * ) & pce2 )"		883891	0					
ANR	883905	Callee	zend_hash_unique_copy		883891	0					
ANR	883906	Identifier	zend_hash_unique_copy		883891	0					
ANR	883907	ArgumentList	target		883891	1					
ANR	883908	Argument	target		883891	0					
ANR	883909	Identifier	target		883891	0					
ANR	883910	Argument	source		883891	1					
ANR	883911	Identifier	source		883891	0					
ANR	883912	Argument	pCopyConstructor		883891	2					
ANR	883913	Identifier	pCopyConstructor		883891	0					
ANR	883914	Argument	sizeof ( zend_class_entry * )		883891	3					
ANR	883915	SizeofExpression	sizeof ( zend_class_entry * )		883891	0					
ANR	883916	Sizeof	sizeof		883891	0					
ANR	883917	SizeofOperand	zend_class_entry *		883891	1					
ANR	883918	Argument	ZCG ( accel_directives ) . ignore_dups		883891	4					
ANR	883919	MemberAccess	ZCG ( accel_directives ) . ignore_dups		883891	0					
ANR	883920	CallExpression	ZCG ( accel_directives )		883891	0					
ANR	883921	Callee	ZCG		883891	0					
ANR	883922	Identifier	ZCG		883891	0					
ANR	883923	ArgumentList	accel_directives		883891	1					
ANR	883924	Argument	accel_directives		883891	0					
ANR	883925	Identifier	accel_directives		883891	0					
ANR	883926	Identifier	ignore_dups		883891	1					
ANR	883927	Argument	( void * * ) & pce1		883891	5					
ANR	883928	CastExpression	( void * * ) & pce1		883891	0					
ANR	883929	CastTarget	void * *		883891	0					
ANR	883930	UnaryOperationExpression	& pce1		883891	1					
ANR	883931	UnaryOperator	&		883891	0					
ANR	883932	Identifier	pce1		883891	1					
ANR	883933	Argument	( void * * ) & pce2		883891	6					
ANR	883934	CastExpression	( void * * ) & pce2		883891	0					
ANR	883935	CastTarget	void * *		883891	0					
ANR	883936	UnaryOperationExpression	& pce2		883891	1					
ANR	883937	UnaryOperator	&		883891	0					
ANR	883938	Identifier	pce2		883891	1					
ANR	883939	Identifier	SUCCESS		883891	1					
ANR	883940	CompoundStatement		4:165:201:201	883891	1					
ANR	883941	ExpressionStatement	CG ( in_compilation ) = 1	963:2:29474:29496	883891	0	True				
ANR	883942	AssignmentExpression	CG ( in_compilation ) = 1		883891	0		=			
ANR	883943	CallExpression	CG ( in_compilation )		883891	0					
ANR	883944	Callee	CG		883891	0					
ANR	883945	Identifier	CG		883891	0					
ANR	883946	ArgumentList	in_compilation		883891	1					
ANR	883947	Argument	in_compilation		883891	0					
ANR	883948	Identifier	in_compilation		883891	0					
ANR	883949	PrimaryExpression	1		883891	1					
ANR	883950	Statement	zend_set_compiled_filename	965:2:29545:29570	883891	1	True				
ANR	883951	Statement	(	965:28:29571:29571	883891	2	True				
ANR	883952	Statement	(	965:29:29572:29572	883891	3	True				
ANR	883953	Statement	*	965:30:29573:29573	883891	4	True				
ANR	883954	Statement	pce1	965:31:29574:29577	883891	5	True				
ANR	883955	Statement	)	965:35:29578:29578	883891	6	True				
ANR	883956	Statement	->	965:36:29579:29580	883891	7	True				
ANR	883957	Statement	info	965:38:29581:29584	883891	8	True				
ANR	883958	Statement	.	965:42:29585:29585	883891	9	True				
ANR	883959	Statement	user	965:43:29586:29589	883891	10	True				
ANR	883960	Statement	.	965:47:29590:29590	883891	11	True				
ANR	883961	Statement	filename	965:48:29591:29598	883891	12	True				
ANR	883962	Statement	TSRMLS_CC	965:57:29600:29608	883891	13	True				
ANR	883963	Statement	)	965:66:29609:29609	883891	14	True				
ANR	883964	ExpressionStatement		965:67:29610:29610	883891	15	True				
ANR	883965	ExpressionStatement	CG ( zend_lineno ) = ( * pce1 ) -> info . user . line_start	966:2:29614:29661	883891	16	True				
ANR	883966	AssignmentExpression	CG ( zend_lineno ) = ( * pce1 ) -> info . user . line_start		883891	0		=			
ANR	883967	CallExpression	CG ( zend_lineno )		883891	0					
ANR	883968	Callee	CG		883891	0					
ANR	883969	Identifier	CG		883891	0					
ANR	883970	ArgumentList	zend_lineno		883891	1					
ANR	883971	Argument	zend_lineno		883891	0					
ANR	883972	Identifier	zend_lineno		883891	0					
ANR	883973	MemberAccess	( * pce1 ) -> info . user . line_start		883891	1					
ANR	883974	MemberAccess	( * pce1 ) -> info . user		883891	0					
ANR	883975	PtrMemberAccess	( * pce1 ) -> info		883891	0					
ANR	883976	UnaryOperationExpression	* pce1		883891	0					
ANR	883977	UnaryOperator	*		883891	0					
ANR	883978	Identifier	pce1		883891	1					
ANR	883979	Identifier	info		883891	1					
ANR	883980	Identifier	user		883891	1					
ANR	883981	Identifier	line_start		883891	1					
ANR	883982	ExpressionStatement	"zend_error ( E_ERROR , ""Cannot redeclare class %s"" , ( * pce1 ) -> name )"	971:2:29778:29841	883891	17	True				
ANR	883983	CallExpression	"zend_error ( E_ERROR , ""Cannot redeclare class %s"" , ( * pce1 ) -> name )"		883891	0					
ANR	883984	Callee	zend_error		883891	0					
ANR	883985	Identifier	zend_error		883891	0					
ANR	883986	ArgumentList	E_ERROR		883891	1					
ANR	883987	Argument	E_ERROR		883891	0					
ANR	883988	Identifier	E_ERROR		883891	0					
ANR	883989	Argument	"""Cannot redeclare class %s"""		883891	1					
ANR	883990	PrimaryExpression	"""Cannot redeclare class %s"""		883891	0					
ANR	883991	Argument	( * pce1 ) -> name		883891	2					
ANR	883992	PtrMemberAccess	( * pce1 ) -> name		883891	0					
ANR	883993	UnaryOperationExpression	* pce1		883891	0					
ANR	883994	UnaryOperator	*		883891	0					
ANR	883995	Identifier	pce1		883891	1					
ANR	883996	Identifier	name		883891	1					
ANR	883997	ReturnType	static void		883891	1					
ANR	883998	Identifier	zend_accel_class_hash_copy		883891	2					
ANR	883999	ParameterList	"HashTable * target , HashTable * source , unique_copy_ctor_func_t pCopyConstructor TSRMLS_DC"		883891	3					
ANR	884000	Parameter	HashTable * target	958:39:29178:29194	883891	0	True				
ANR	884001	ParameterType	HashTable *		883891	0					
ANR	884002	Identifier	target		883891	1					
ANR	884003	Parameter	HashTable * source	958:58:29197:29213	883891	1	True				
ANR	884004	ParameterType	HashTable *		883891	0					
ANR	884005	Identifier	source		883891	1					
ANR	884006	Parameter	unique_copy_ctor_func_t pCopyConstructor TSRMLS_DC	958:77:29216:29265	883891	2	True				
ANR	884007	ParameterType	unique_copy_ctor_func_t pCopyConstructor		883891	0					
ANR	884008	Identifier	TSRMLS_DC		883891	1					
ANR	884009	CFGEntryNode	ENTRY		883891		True				
ANR	884010	CFGExitNode	EXIT		883891		True				
ANR	884011	Symbol	SUCCESS		883891						
ANR	884012	Symbol	ZCG ( accel_directives ) . ignore_dups		883891						
ANR	884013	Symbol	CG		883891						
ANR	884014	Symbol	( * pce1 ) -> info		883891						
ANR	884015	Symbol	( * pce1 ) -> name		883891						
ANR	884016	Symbol	source		883891						
ANR	884017	Symbol	pce1		883891						
ANR	884018	Symbol	TSRMLS_DC		883891						
ANR	884019	Symbol	in_compilation		883891						
ANR	884020	Symbol	target		883891						
ANR	884021	Symbol	* * pce1		883891						
ANR	884022	Symbol	E_ERROR		883891						
ANR	884023	Symbol	pce2		883891						
ANR	884024	Symbol	& pce2		883891						
ANR	884025	Symbol	& pce1		883891						
ANR	884026	Symbol	* pce1		883891						
ANR	884027	Symbol	zend_lineno		883891						
ANR	884028	Symbol	( * pce1 ) -> info . user		883891						
ANR	884029	Symbol	pCopyConstructor		883891						
ANR	884030	Symbol	accel_directives		883891						
ANR	884031	Symbol	zend_hash_unique_copy		883891						
ANR	884032	Symbol	( * pce1 ) -> info . user . line_start		883891						
ANR	884033	Symbol	ZCG		883891						
ANR	884034	Function	zend_do_delayed_early_binding	976:0:29894:30763							
ANR	884035	FunctionDef	"zend_do_delayed_early_binding (zend_op_array * op_array , zend_uint early_binding TSRMLS_DC)"		884034	0					
ANR	884036	CompoundStatement		977:0:29996:30763	884034	0					
ANR	884037	IdentifierDeclStatement	zend_uint opline_num = early_binding ;	978:1:29999:30035	884034	0	True				
ANR	884038	IdentifierDecl	opline_num = early_binding		884034	0					
ANR	884039	IdentifierDeclType	zend_uint		884034	0					
ANR	884040	Identifier	opline_num		884034	1					
ANR	884041	AssignmentExpression	opline_num = early_binding		884034	2		=			
ANR	884042	Identifier	early_binding		884034	0					
ANR	884043	Identifier	early_binding		884034	1					
ANR	884044	IfStatement	if ( ( int ) opline_num != - 1 )		884034	1					
ANR	884045	Condition	( int ) opline_num != - 1	980:5:30043:30063	884034	0	True				
ANR	884046	EqualityExpression	( int ) opline_num != - 1		884034	0		!=			
ANR	884047	CastExpression	( int ) opline_num		884034	0					
ANR	884048	CastTarget	int		884034	0					
ANR	884049	Identifier	opline_num		884034	1					
ANR	884050	UnaryOperationExpression	- 1		884034	1					
ANR	884051	UnaryOperator	-		884034	0					
ANR	884052	PrimaryExpression	1		884034	1					
ANR	884053	CompoundStatement		7:2:218:240	884034	1					
ANR	884054	IdentifierDeclStatement	zend_bool orig_in_compilation = CG ( in_compilation ) ;	981:2:30070:30120	884034	0	True				
ANR	884055	IdentifierDecl	orig_in_compilation = CG ( in_compilation )		884034	0					
ANR	884056	IdentifierDeclType	zend_bool		884034	0					
ANR	884057	Identifier	orig_in_compilation		884034	1					
ANR	884058	AssignmentExpression	orig_in_compilation = CG ( in_compilation )		884034	2		=			
ANR	884059	Identifier	orig_in_compilation		884034	0					
ANR	884060	CallExpression	CG ( in_compilation )		884034	1					
ANR	884061	Callee	CG		884034	0					
ANR	884062	Identifier	CG		884034	0					
ANR	884063	ArgumentList	in_compilation		884034	1					
ANR	884064	Argument	in_compilation		884034	0					
ANR	884065	Identifier	in_compilation		884034	0					
ANR	884066	Statement	char	982:2:30124:30127	884034	1	True				
ANR	884067	Statement	*	982:7:30129:30129	884034	2	True				
ANR	884068	Statement	orig_compiled_filename	982:8:30130:30151	884034	3	True				
ANR	884069	Statement	=	982:31:30153:30153	884034	4	True				
ANR	884070	Statement	zend_set_compiled_filename	982:33:30155:30180	884034	5	True				
ANR	884071	Statement	(	982:59:30181:30181	884034	6	True				
ANR	884072	Statement	op_array	982:60:30182:30189	884034	7	True				
ANR	884073	Statement	->	982:68:30190:30191	884034	8	True				
ANR	884074	Statement	filename	982:70:30192:30199	884034	9	True				
ANR	884075	Statement	TSRMLS_CC	982:79:30201:30209	884034	10	True				
ANR	884076	Statement	)	982:88:30210:30210	884034	11	True				
ANR	884077	ExpressionStatement		982:89:30211:30211	884034	12	True				
ANR	884078	IdentifierDeclStatement	zend_class_entry * * pce ;	983:2:30215:30237	884034	13	True				
ANR	884079	IdentifierDecl	* * pce		884034	0					
ANR	884080	IdentifierDeclType	zend_class_entry * *		884034	0					
ANR	884081	Identifier	pce		884034	1					
ANR	884082	ExpressionStatement	CG ( in_compilation ) = 1	985:2:30242:30264	884034	14	True				
ANR	884083	AssignmentExpression	CG ( in_compilation ) = 1		884034	0		=			
ANR	884084	CallExpression	CG ( in_compilation )		884034	0					
ANR	884085	Callee	CG		884034	0					
ANR	884086	Identifier	CG		884034	0					
ANR	884087	ArgumentList	in_compilation		884034	1					
ANR	884088	Argument	in_compilation		884034	0					
ANR	884089	Identifier	in_compilation		884034	0					
ANR	884090	PrimaryExpression	1		884034	1					
ANR	884091	WhileStatement	while ( ( int ) opline_num != - 1 )		884034	15					
ANR	884092	Condition	( int ) opline_num != - 1	986:9:30275:30295	884034	0	True				
ANR	884093	EqualityExpression	( int ) opline_num != - 1		884034	0		!=			
ANR	884094	CastExpression	( int ) opline_num		884034	0					
ANR	884095	CastTarget	int		884034	0					
ANR	884096	Identifier	opline_num		884034	1					
ANR	884097	UnaryOperationExpression	- 1		884034	1					
ANR	884098	UnaryOperator	-		884034	0					
ANR	884099	PrimaryExpression	1		884034	1					
ANR	884100	CompoundStatement		10:32:301:301	884034	1					
ANR	884101	Statement	if	987:3:30303:30304	884034	0	True				
ANR	884102	Statement	(	987:6:30306:30306	884034	1	True				
ANR	884103	Statement	zend_lookup_class	987:7:30307:30323	884034	2	True				
ANR	884104	Statement	(	987:24:30324:30324	884034	3	True				
ANR	884105	Statement	Z_STRVAL	987:25:30325:30332	884034	4	True				
ANR	884106	Statement	(	987:33:30333:30333	884034	5	True				
ANR	884107	Statement	op_array	987:34:30334:30341	884034	6	True				
ANR	884108	Statement	->	987:42:30342:30343	884034	7	True				
ANR	884109	Statement	opcodes	987:44:30344:30350	884034	8	True				
ANR	884110	Statement	[	987:51:30351:30351	884034	9	True				
ANR	884111	Statement	opline_num	987:52:30352:30361	884034	10	True				
ANR	884112	Statement	-	987:63:30363:30363	884034	11	True				
ANR	884113	Statement	1	987:65:30365:30365	884034	12	True				
ANR	884114	Statement	]	987:66:30366:30366	884034	13	True				
ANR	884115	Statement	.	987:67:30367:30367	884034	14	True				
ANR	884116	Statement	op2	987:68:30368:30370	884034	15	True				
ANR	884117	Statement	.	987:71:30371:30371	884034	16	True				
ANR	884118	Statement	u	987:72:30372:30372	884034	17	True				
ANR	884119	Statement	.	987:73:30373:30373	884034	18	True				
ANR	884120	Statement	constant	987:74:30374:30381	884034	19	True				
ANR	884121	Statement	)	987:82:30382:30382	884034	20	True				
ANR	884122	Statement	","	987:83:30383:30383	884034	21	True				
ANR	884123	Statement	Z_STRLEN	987:85:30385:30392	884034	22	True				
ANR	884124	Statement	(	987:93:30393:30393	884034	23	True				
ANR	884125	Statement	op_array	987:94:30394:30401	884034	24	True				
ANR	884126	Statement	->	987:102:30402:30403	884034	25	True				
ANR	884127	Statement	opcodes	987:104:30404:30410	884034	26	True				
ANR	884128	Statement	[	987:111:30411:30411	884034	27	True				
ANR	884129	Statement	opline_num	987:112:30412:30421	884034	28	True				
ANR	884130	Statement	-	987:123:30423:30423	884034	29	True				
ANR	884131	Statement	1	987:125:30425:30425	884034	30	True				
ANR	884132	Statement	]	987:126:30426:30426	884034	31	True				
ANR	884133	Statement	.	987:127:30427:30427	884034	32	True				
ANR	884134	Statement	op2	987:128:30428:30430	884034	33	True				
ANR	884135	Statement	.	987:131:30431:30431	884034	34	True				
ANR	884136	Statement	u	987:132:30432:30432	884034	35	True				
ANR	884137	Statement	.	987:133:30433:30433	884034	36	True				
ANR	884138	Statement	constant	987:134:30434:30441	884034	37	True				
ANR	884139	Statement	)	987:142:30442:30442	884034	38	True				
ANR	884140	Statement	","	987:143:30443:30443	884034	39	True				
ANR	884141	Statement	&	987:145:30445:30445	884034	40	True				
ANR	884142	Statement	pce	987:146:30446:30448	884034	41	True				
ANR	884143	Statement	TSRMLS_CC	987:150:30450:30458	884034	42	True				
ANR	884144	Statement	)	987:159:30459:30459	884034	43	True				
ANR	884145	Statement	==	987:161:30461:30462	884034	44	True				
ANR	884146	Statement	SUCCESS	987:164:30464:30470	884034	45	True				
ANR	884147	Statement	)	987:171:30471:30471	884034	46	True				
ANR	884148	CompoundStatement		11:173:476:476	884034	47					
ANR	884149	Statement	do_bind_inherited_class	988:4:30479:30501	884034	0	True				
ANR	884150	Statement	(	988:27:30502:30502	884034	1	True				
ANR	884151	Statement	&	988:28:30503:30503	884034	2	True				
ANR	884152	Statement	op_array	988:29:30504:30511	884034	3	True				
ANR	884153	Statement	->	988:37:30512:30513	884034	4	True				
ANR	884154	Statement	opcodes	988:39:30514:30520	884034	5	True				
ANR	884155	Statement	[	988:46:30521:30521	884034	6	True				
ANR	884156	Statement	opline_num	988:47:30522:30531	884034	7	True				
ANR	884157	Statement	]	988:57:30532:30532	884034	8	True				
ANR	884158	Statement	","	988:58:30533:30533	884034	9	True				
ANR	884159	Statement	EG	988:60:30535:30536	884034	10	True				
ANR	884160	Statement	(	988:62:30537:30537	884034	11	True				
ANR	884161	Statement	class_table	988:63:30538:30548	884034	12	True				
ANR	884162	Statement	)	988:74:30549:30549	884034	13	True				
ANR	884163	Statement	","	988:75:30550:30550	884034	14	True				
ANR	884164	Statement	*	988:77:30552:30552	884034	15	True				
ANR	884165	Statement	pce	988:78:30553:30555	884034	16	True				
ANR	884166	Statement	","	988:81:30556:30556	884034	17	True				
ANR	884167	Statement	1	988:83:30558:30558	884034	18	True				
ANR	884168	Statement	TSRMLS_CC	988:85:30560:30568	884034	19	True				
ANR	884169	Statement	)	988:94:30569:30569	884034	20	True				
ANR	884170	ExpressionStatement		988:95:30570:30570	884034	21	True				
ANR	884171	ExpressionStatement	opline_num = op_array -> opcodes [ opline_num ] . result . u . opline_num	990:3:30580:30642	884034	48	True				
ANR	884172	AssignmentExpression	opline_num = op_array -> opcodes [ opline_num ] . result . u . opline_num		884034	0		=			
ANR	884173	Identifier	opline_num		884034	0					
ANR	884174	MemberAccess	op_array -> opcodes [ opline_num ] . result . u . opline_num		884034	1					
ANR	884175	MemberAccess	op_array -> opcodes [ opline_num ] . result . u		884034	0					
ANR	884176	MemberAccess	op_array -> opcodes [ opline_num ] . result		884034	0					
ANR	884177	ArrayIndexing	op_array -> opcodes [ opline_num ]		884034	0					
ANR	884178	PtrMemberAccess	op_array -> opcodes		884034	0					
ANR	884179	Identifier	op_array		884034	0					
ANR	884180	Identifier	opcodes		884034	1					
ANR	884181	Identifier	opline_num		884034	1					
ANR	884182	Identifier	result		884034	1					
ANR	884183	Identifier	u		884034	1					
ANR	884184	Identifier	opline_num		884034	1					
ANR	884185	Statement	zend_restore_compiled_filename	992:2:30650:30679	884034	16	True				
ANR	884186	Statement	(	992:32:30680:30680	884034	17	True				
ANR	884187	Statement	orig_compiled_filename	992:33:30681:30702	884034	18	True				
ANR	884188	Statement	TSRMLS_CC	992:56:30704:30712	884034	19	True				
ANR	884189	Statement	)	992:65:30713:30713	884034	20	True				
ANR	884190	ExpressionStatement		992:66:30714:30714	884034	21	True				
ANR	884191	ExpressionStatement	CG ( in_compilation ) = orig_in_compilation	993:2:30718:30758	884034	22	True				
ANR	884192	AssignmentExpression	CG ( in_compilation ) = orig_in_compilation		884034	0		=			
ANR	884193	CallExpression	CG ( in_compilation )		884034	0					
ANR	884194	Callee	CG		884034	0					
ANR	884195	Identifier	CG		884034	0					
ANR	884196	ArgumentList	in_compilation		884034	1					
ANR	884197	Argument	in_compilation		884034	0					
ANR	884198	Identifier	in_compilation		884034	0					
ANR	884199	Identifier	orig_in_compilation		884034	1					
ANR	884200	ReturnType	static void		884034	1					
ANR	884201	Identifier	zend_do_delayed_early_binding		884034	2					
ANR	884202	ParameterList	"zend_op_array * op_array , zend_uint early_binding TSRMLS_DC"		884034	3					
ANR	884203	Parameter	zend_op_array * op_array	976:42:29936:29958	884034	0	True				
ANR	884204	ParameterType	zend_op_array *		884034	0					
ANR	884205	Identifier	op_array		884034	1					
ANR	884206	Parameter	zend_uint early_binding TSRMLS_DC	976:67:29961:29993	884034	1	True				
ANR	884207	ParameterType	zend_uint early_binding		884034	0					
ANR	884208	Identifier	TSRMLS_DC		884034	1					
ANR	884209	CFGEntryNode	ENTRY		884034		True				
ANR	884210	CFGExitNode	EXIT		884034		True				
ANR	884211	Symbol	early_binding		884034						
ANR	884212	Symbol	orig_in_compilation		884034						
ANR	884213	Symbol	CG		884034						
ANR	884214	Symbol	op_array -> opcodes [ opline_num ] . result . u . opline_num		884034						
ANR	884215	Symbol	TSRMLS_DC		884034						
ANR	884216	Symbol	in_compilation		884034						
ANR	884217	Symbol	* op_array		884034						
ANR	884218	Symbol	* opline_num		884034						
ANR	884219	Symbol	pce		884034						
ANR	884220	Symbol	op_array -> opcodes		884034						
ANR	884221	Symbol	op_array -> opcodes [ opline_num ] . result		884034						
ANR	884222	Symbol	op_array -> opcodes [ opline_num ] . result . u		884034						
ANR	884223	Symbol	opline_num		884034						
ANR	884224	Symbol	* * op_array		884034						
ANR	884225	Symbol	op_array		884034						
ANR	884226	Symbol	* op_array -> opcodes		884034						
ANR	884227	Function	zend_accel_load_script	998:0:30773:33560							
ANR	884228	FunctionDef	"zend_accel_load_script (zend_persistent_script * persistent_script , int from_shared_memory TSRMLS_DC)"		884227	0					
ANR	884229	CompoundStatement		999:0:30888:33560	884227	0					
ANR	884230	IdentifierDeclStatement	zend_op_array * op_array ;	1000:1:30891:30914	884227	0	True				
ANR	884231	IdentifierDecl	* op_array		884227	0					
ANR	884232	IdentifierDeclType	zend_op_array *		884227	0					
ANR	884233	Identifier	op_array		884227	1					
ANR	884234	ExpressionStatement	op_array = ( zend_op_array * ) emalloc ( sizeof ( zend_op_array ) )	1002:1:30918:30977	884227	1	True				
ANR	884235	AssignmentExpression	op_array = ( zend_op_array * ) emalloc ( sizeof ( zend_op_array ) )		884227	0		=			
ANR	884236	Identifier	op_array		884227	0					
ANR	884237	CastExpression	( zend_op_array * ) emalloc ( sizeof ( zend_op_array ) )		884227	1					
ANR	884238	CastTarget	zend_op_array *		884227	0					
ANR	884239	CallExpression	emalloc ( sizeof ( zend_op_array ) )		884227	1					
ANR	884240	Callee	emalloc		884227	0					
ANR	884241	Identifier	emalloc		884227	0					
ANR	884242	ArgumentList	sizeof ( zend_op_array )		884227	1					
ANR	884243	Argument	sizeof ( zend_op_array )		884227	0					
ANR	884244	SizeofExpression	sizeof ( zend_op_array )		884227	0					
ANR	884245	Sizeof	sizeof		884227	0					
ANR	884246	SizeofOperand	zend_op_array		884227	1					
ANR	884247	ExpressionStatement	* op_array = persistent_script -> main_op_array	1003:1:30980:31024	884227	2	True				
ANR	884248	AssignmentExpression	* op_array = persistent_script -> main_op_array		884227	0		=			
ANR	884249	UnaryOperationExpression	* op_array		884227	0					
ANR	884250	UnaryOperator	*		884227	0					
ANR	884251	Identifier	op_array		884227	1					
ANR	884252	PtrMemberAccess	persistent_script -> main_op_array		884227	1					
ANR	884253	Identifier	persistent_script		884227	0					
ANR	884254	Identifier	main_op_array		884227	1					
ANR	884255	IfStatement	if ( from_shared_memory )		884227	3					
ANR	884256	Condition	from_shared_memory	1005:5:31032:31049	884227	0	True				
ANR	884257	Identifier	from_shared_memory		884227	0					
ANR	884258	CompoundStatement		7:25:163:163	884227	1					
ANR	884259	IfStatement	if ( zend_hash_num_elements ( & persistent_script -> class_table ) > 0 )		884227	0					
ANR	884260	Condition	zend_hash_num_elements ( & persistent_script -> class_table ) > 0	1007:6:31165:31223	884227	0	True				
ANR	884261	RelationalExpression	zend_hash_num_elements ( & persistent_script -> class_table ) > 0		884227	0		>			
ANR	884262	CallExpression	zend_hash_num_elements ( & persistent_script -> class_table )		884227	0					
ANR	884263	Callee	zend_hash_num_elements		884227	0					
ANR	884264	Identifier	zend_hash_num_elements		884227	0					
ANR	884265	ArgumentList	& persistent_script -> class_table		884227	1					
ANR	884266	Argument	& persistent_script -> class_table		884227	0					
ANR	884267	UnaryOperationExpression	& persistent_script -> class_table		884227	0					
ANR	884268	UnaryOperator	&		884227	0					
ANR	884269	PtrMemberAccess	persistent_script -> class_table		884227	1					
ANR	884270	Identifier	persistent_script		884227	0					
ANR	884271	Identifier	class_table		884227	1					
ANR	884272	PrimaryExpression	0		884227	1					
ANR	884273	CompoundStatement		9:67:337:337	884227	1					
ANR	884274	ExpressionStatement	"zend_hash_init ( & ZCG ( bind_hash ) , 10 , NULL , NULL , 0 )"	1008:3:31231:31281	884227	0	True				
ANR	884275	CallExpression	"zend_hash_init ( & ZCG ( bind_hash ) , 10 , NULL , NULL , 0 )"		884227	0					
ANR	884276	Callee	zend_hash_init		884227	0					
ANR	884277	Identifier	zend_hash_init		884227	0					
ANR	884278	ArgumentList	& ZCG ( bind_hash )		884227	1					
ANR	884279	Argument	& ZCG ( bind_hash )		884227	0					
ANR	884280	UnaryOperationExpression	& ZCG ( bind_hash )		884227	0					
ANR	884281	UnaryOperator	&		884227	0					
ANR	884282	CallExpression	ZCG ( bind_hash )		884227	1					
ANR	884283	Callee	ZCG		884227	0					
ANR	884284	Identifier	ZCG		884227	0					
ANR	884285	ArgumentList	bind_hash		884227	1					
ANR	884286	Argument	bind_hash		884227	0					
ANR	884287	Identifier	bind_hash		884227	0					
ANR	884288	Argument	10		884227	1					
ANR	884289	PrimaryExpression	10		884227	0					
ANR	884290	Argument	NULL		884227	2					
ANR	884291	Identifier	NULL		884227	0					
ANR	884292	Argument	NULL		884227	3					
ANR	884293	Identifier	NULL		884227	0					
ANR	884294	Argument	0		884227	4					
ANR	884295	PrimaryExpression	0		884227	0					
ANR	884296	Statement	zend_accel_class_hash_copy	1009:3:31286:31311	884227	1	True				
ANR	884297	Statement	(	1009:29:31312:31312	884227	2	True				
ANR	884298	Statement	CG	1009:30:31313:31314	884227	3	True				
ANR	884299	Statement	(	1009:32:31315:31315	884227	4	True				
ANR	884300	Statement	class_table	1009:33:31316:31326	884227	5	True				
ANR	884301	Statement	)	1009:44:31327:31327	884227	6	True				
ANR	884302	Statement	","	1009:45:31328:31328	884227	7	True				
ANR	884303	Statement	&	1009:47:31330:31330	884227	8	True				
ANR	884304	Statement	persistent_script	1009:48:31331:31347	884227	9	True				
ANR	884305	Statement	->	1009:65:31348:31349	884227	10	True				
ANR	884306	Statement	class_table	1009:67:31350:31360	884227	11	True				
ANR	884307	Statement	","	1009:78:31361:31361	884227	12	True				
ANR	884308	Statement	(	1009:80:31363:31363	884227	13	True				
ANR	884309	Statement	unique_copy_ctor_func_t	1009:81:31364:31386	884227	14	True				
ANR	884310	Statement	)	1009:104:31387:31387	884227	15	True				
ANR	884311	Statement	zend_class_copy_ctor	1009:106:31389:31408	884227	16	True				
ANR	884312	Statement	TSRMLS_CC	1009:127:31410:31418	884227	17	True				
ANR	884313	Statement	)	1009:136:31419:31419	884227	18	True				
ANR	884314	ExpressionStatement		1009:137:31420:31420	884227	19	True				
ANR	884315	ExpressionStatement	zend_hash_destroy ( & ZCG ( bind_hash ) )	1010:3:31425:31459	884227	20	True				
ANR	884316	CallExpression	zend_hash_destroy ( & ZCG ( bind_hash ) )		884227	0					
ANR	884317	Callee	zend_hash_destroy		884227	0					
ANR	884318	Identifier	zend_hash_destroy		884227	0					
ANR	884319	ArgumentList	& ZCG ( bind_hash )		884227	1					
ANR	884320	Argument	& ZCG ( bind_hash )		884227	0					
ANR	884321	UnaryOperationExpression	& ZCG ( bind_hash )		884227	0					
ANR	884322	UnaryOperator	&		884227	0					
ANR	884323	CallExpression	ZCG ( bind_hash )		884227	1					
ANR	884324	Callee	ZCG		884227	0					
ANR	884325	Identifier	ZCG		884227	0					
ANR	884326	ArgumentList	bind_hash		884227	1					
ANR	884327	Argument	bind_hash		884227	0					
ANR	884328	Identifier	bind_hash		884227	0					
ANR	884329	IfStatement	if ( zend_hash_num_elements ( & persistent_script -> function_table ) > 0 )		884227	1					
ANR	884330	Condition	zend_hash_num_elements ( & persistent_script -> function_table ) > 0	1014:6:31655:31716	884227	0	True				
ANR	884331	RelationalExpression	zend_hash_num_elements ( & persistent_script -> function_table ) > 0		884227	0		>			
ANR	884332	CallExpression	zend_hash_num_elements ( & persistent_script -> function_table )		884227	0					
ANR	884333	Callee	zend_hash_num_elements		884227	0					
ANR	884334	Identifier	zend_hash_num_elements		884227	0					
ANR	884335	ArgumentList	& persistent_script -> function_table		884227	1					
ANR	884336	Argument	& persistent_script -> function_table		884227	0					
ANR	884337	UnaryOperationExpression	& persistent_script -> function_table		884227	0					
ANR	884338	UnaryOperator	&		884227	0					
ANR	884339	PtrMemberAccess	persistent_script -> function_table		884227	1					
ANR	884340	Identifier	persistent_script		884227	0					
ANR	884341	Identifier	function_table		884227	1					
ANR	884342	PrimaryExpression	0		884227	1					
ANR	884343	CompoundStatement		16:70:830:830	884227	1					
ANR	884344	ExpressionStatement	"zend_accel_function_hash_copy ( CG ( function_table ) , & persistent_script -> function_table , ( unique_copy_ctor_func_t ) zend_prepare_function_for_execution )"	1015:3:31724:31871	884227	0	True				
ANR	884345	CallExpression	"zend_accel_function_hash_copy ( CG ( function_table ) , & persistent_script -> function_table , ( unique_copy_ctor_func_t ) zend_prepare_function_for_execution )"		884227	0					
ANR	884346	Callee	zend_accel_function_hash_copy		884227	0					
ANR	884347	Identifier	zend_accel_function_hash_copy		884227	0					
ANR	884348	ArgumentList	CG ( function_table )		884227	1					
ANR	884349	Argument	CG ( function_table )		884227	0					
ANR	884350	CallExpression	CG ( function_table )		884227	0					
ANR	884351	Callee	CG		884227	0					
ANR	884352	Identifier	CG		884227	0					
ANR	884353	ArgumentList	function_table		884227	1					
ANR	884354	Argument	function_table		884227	0					
ANR	884355	Identifier	function_table		884227	0					
ANR	884356	Argument	& persistent_script -> function_table		884227	1					
ANR	884357	UnaryOperationExpression	& persistent_script -> function_table		884227	0					
ANR	884358	UnaryOperator	&		884227	0					
ANR	884359	PtrMemberAccess	persistent_script -> function_table		884227	1					
ANR	884360	Identifier	persistent_script		884227	0					
ANR	884361	Identifier	function_table		884227	1					
ANR	884362	Argument	( unique_copy_ctor_func_t ) zend_prepare_function_for_execution		884227	2					
ANR	884363	CastExpression	( unique_copy_ctor_func_t ) zend_prepare_function_for_execution		884227	0					
ANR	884364	CastTarget	unique_copy_ctor_func_t		884227	0					
ANR	884365	Identifier	zend_prepare_function_for_execution		884227	1					
ANR	884366	ExpressionStatement	zend_prepare_function_for_execution ( op_array )	1018:2:31880:31925	884227	2	True				
ANR	884367	CallExpression	zend_prepare_function_for_execution ( op_array )		884227	0					
ANR	884368	Callee	zend_prepare_function_for_execution		884227	0					
ANR	884369	Identifier	zend_prepare_function_for_execution		884227	0					
ANR	884370	ArgumentList	op_array		884227	1					
ANR	884371	Argument	op_array		884227	0					
ANR	884372	Identifier	op_array		884227	0					
ANR	884373	IfStatement	if ( persistent_script -> compiler_halt_offset != 0 && persistent_script -> full_path )		884227	3					
ANR	884374	Condition	persistent_script -> compiler_halt_offset != 0 && persistent_script -> full_path	1021:6:31985:32066	884227	0	True				
ANR	884375	AndExpression	persistent_script -> compiler_halt_offset != 0 && persistent_script -> full_path		884227	0		&&			
ANR	884376	EqualityExpression	persistent_script -> compiler_halt_offset != 0		884227	0		!=			
ANR	884377	PtrMemberAccess	persistent_script -> compiler_halt_offset		884227	0					
ANR	884378	Identifier	persistent_script		884227	0					
ANR	884379	Identifier	compiler_halt_offset		884227	1					
ANR	884380	PrimaryExpression	0		884227	1					
ANR	884381	PtrMemberAccess	persistent_script -> full_path		884227	1					
ANR	884382	Identifier	persistent_script		884227	0					
ANR	884383	Identifier	full_path		884227	1					
ANR	884384	CompoundStatement		27:3:1260:1273	884227	1					
ANR	884385	IdentifierDeclStatement	"char * name , * cfilename ;"	1023:3:32074:32096	884227	0	True				
ANR	884386	IdentifierDecl	* name		884227	0					
ANR	884387	IdentifierDeclType	char *		884227	0					
ANR	884388	Identifier	name		884227	1					
ANR	884389	IdentifierDecl	* cfilename		884227	1					
ANR	884390	IdentifierDeclType	char *		884227	0					
ANR	884391	Identifier	cfilename		884227	1					
ANR	884392	IdentifierDeclStatement	"char haltoff [ ] = ""__COMPILER_HALT_OFFSET__"" ;"	1024:3:32101:32144	884227	1	True				
ANR	884393	IdentifierDecl	"haltoff [ ] = ""__COMPILER_HALT_OFFSET__"""		884227	0					
ANR	884394	IdentifierDeclType	char [ ]		884227	0					
ANR	884395	Identifier	haltoff		884227	1					
ANR	884396	AssignmentExpression	"haltoff [ ] = ""__COMPILER_HALT_OFFSET__"""		884227	2		=			
ANR	884397	Identifier	haltoff		884227	0					
ANR	884398	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		884227	1					
ANR	884399	IdentifierDeclStatement	"int len , clen ;"	1025:3:32149:32162	884227	2	True				
ANR	884400	IdentifierDecl	len		884227	0					
ANR	884401	IdentifierDeclType	int		884227	0					
ANR	884402	Identifier	len		884227	1					
ANR	884403	IdentifierDecl	clen		884227	1					
ANR	884404	IdentifierDeclType	int		884227	0					
ANR	884405	Identifier	clen		884227	1					
ANR	884406	ExpressionStatement	cfilename = persistent_script -> full_path	1027:3:32168:32208	884227	3	True				
ANR	884407	AssignmentExpression	cfilename = persistent_script -> full_path		884227	0		=			
ANR	884408	Identifier	cfilename		884227	0					
ANR	884409	PtrMemberAccess	persistent_script -> full_path		884227	1					
ANR	884410	Identifier	persistent_script		884227	0					
ANR	884411	Identifier	full_path		884227	1					
ANR	884412	ExpressionStatement	clen = strlen ( cfilename )	1028:3:32213:32237	884227	4	True				
ANR	884413	AssignmentExpression	clen = strlen ( cfilename )		884227	0		=			
ANR	884414	Identifier	clen		884227	0					
ANR	884415	CallExpression	strlen ( cfilename )		884227	1					
ANR	884416	Callee	strlen		884227	0					
ANR	884417	Identifier	strlen		884227	0					
ANR	884418	ArgumentList	cfilename		884227	1					
ANR	884419	Argument	cfilename		884227	0					
ANR	884420	Identifier	cfilename		884227	0					
ANR	884421	ExpressionStatement	"zend_mangle_property_name ( & name , & len , haltoff , sizeof ( haltoff ) - 1 , cfilename , clen , 0 )"	1029:3:32242:32330	884227	5	True				
ANR	884422	CallExpression	"zend_mangle_property_name ( & name , & len , haltoff , sizeof ( haltoff ) - 1 , cfilename , clen , 0 )"		884227	0					
ANR	884423	Callee	zend_mangle_property_name		884227	0					
ANR	884424	Identifier	zend_mangle_property_name		884227	0					
ANR	884425	ArgumentList	& name		884227	1					
ANR	884426	Argument	& name		884227	0					
ANR	884427	UnaryOperationExpression	& name		884227	0					
ANR	884428	UnaryOperator	&		884227	0					
ANR	884429	Identifier	name		884227	1					
ANR	884430	Argument	& len		884227	1					
ANR	884431	UnaryOperationExpression	& len		884227	0					
ANR	884432	UnaryOperator	&		884227	0					
ANR	884433	Identifier	len		884227	1					
ANR	884434	Argument	haltoff		884227	2					
ANR	884435	Identifier	haltoff		884227	0					
ANR	884436	Argument	sizeof ( haltoff ) - 1		884227	3					
ANR	884437	AdditiveExpression	sizeof ( haltoff ) - 1		884227	0		-			
ANR	884438	SizeofExpression	sizeof ( haltoff )		884227	0					
ANR	884439	Sizeof	sizeof		884227	0					
ANR	884440	SizeofOperand	haltoff		884227	1					
ANR	884441	PrimaryExpression	1		884227	1					
ANR	884442	Argument	cfilename		884227	4					
ANR	884443	Identifier	cfilename		884227	0					
ANR	884444	Argument	clen		884227	5					
ANR	884445	Identifier	clen		884227	0					
ANR	884446	Argument	0		884227	6					
ANR	884447	PrimaryExpression	0		884227	0					
ANR	884448	IfStatement	"if ( ! zend_hash_exists ( EG ( zend_constants ) , name , len + 1 ) )"		884227	6					
ANR	884449	Condition	"! zend_hash_exists ( EG ( zend_constants ) , name , len + 1 )"	1030:7:32339:32390	884227	0	True				
ANR	884450	UnaryOperationExpression	"! zend_hash_exists ( EG ( zend_constants ) , name , len + 1 )"		884227	0					
ANR	884451	UnaryOperator	!		884227	0					
ANR	884452	CallExpression	"zend_hash_exists ( EG ( zend_constants ) , name , len + 1 )"		884227	1					
ANR	884453	Callee	zend_hash_exists		884227	0					
ANR	884454	Identifier	zend_hash_exists		884227	0					
ANR	884455	ArgumentList	EG ( zend_constants )		884227	1					
ANR	884456	Argument	EG ( zend_constants )		884227	0					
ANR	884457	CallExpression	EG ( zend_constants )		884227	0					
ANR	884458	Callee	EG		884227	0					
ANR	884459	Identifier	EG		884227	0					
ANR	884460	ArgumentList	zend_constants		884227	1					
ANR	884461	Argument	zend_constants		884227	0					
ANR	884462	Identifier	zend_constants		884227	0					
ANR	884463	Argument	name		884227	1					
ANR	884464	Identifier	name		884227	0					
ANR	884465	Argument	len + 1		884227	2					
ANR	884466	AdditiveExpression	len + 1		884227	0		+			
ANR	884467	Identifier	len		884227	0					
ANR	884468	PrimaryExpression	1		884227	1					
ANR	884469	CompoundStatement		32:61:1504:1504	884227	1					
ANR	884470	Statement	zend_register_long_constant	1031:4:32399:32425	884227	0	True				
ANR	884471	Statement	(	1031:31:32426:32426	884227	1	True				
ANR	884472	Statement	name	1031:32:32427:32430	884227	2	True				
ANR	884473	Statement	","	1031:36:32431:32431	884227	3	True				
ANR	884474	Statement	len	1031:38:32433:32435	884227	4	True				
ANR	884475	Statement	+	1031:42:32437:32437	884227	5	True				
ANR	884476	Statement	1	1031:44:32439:32439	884227	6	True				
ANR	884477	Statement	","	1031:45:32440:32440	884227	7	True				
ANR	884478	Statement	persistent_script	1031:47:32442:32458	884227	8	True				
ANR	884479	Statement	->	1031:64:32459:32460	884227	9	True				
ANR	884480	Statement	compiler_halt_offset	1031:66:32461:32480	884227	10	True				
ANR	884481	Statement	","	1031:86:32481:32481	884227	11	True				
ANR	884482	Statement	CONST_CS	1031:88:32483:32490	884227	12	True				
ANR	884483	Statement	","	1031:96:32491:32491	884227	13	True				
ANR	884484	Statement	0	1031:98:32493:32493	884227	14	True				
ANR	884485	Statement	TSRMLS_CC	1031:100:32495:32503	884227	15	True				
ANR	884486	Statement	)	1031:109:32504:32504	884227	16	True				
ANR	884487	ExpressionStatement		1031:110:32505:32505	884227	17	True				
ANR	884488	ExpressionStatement	efree ( name )	1033:3:32515:32526	884227	7	True				
ANR	884489	CallExpression	efree ( name )		884227	0					
ANR	884490	Callee	efree		884227	0					
ANR	884491	Identifier	efree		884227	0					
ANR	884492	ArgumentList	name		884227	1					
ANR	884493	Argument	name		884227	0					
ANR	884494	Identifier	name		884227	0					
ANR	884495	IfStatement	if ( ( int ) persistent_script -> early_binding != - 1 )		884227	4					
ANR	884496	Condition	( int ) persistent_script -> early_binding != - 1	1037:6:32584:32626	884227	0	True				
ANR	884497	EqualityExpression	( int ) persistent_script -> early_binding != - 1		884227	0		!=			
ANR	884498	CastExpression	( int ) persistent_script -> early_binding		884227	0					
ANR	884499	CastTarget	int		884227	0					
ANR	884500	PtrMemberAccess	persistent_script -> early_binding		884227	1					
ANR	884501	Identifier	persistent_script		884227	0					
ANR	884502	Identifier	early_binding		884227	1					
ANR	884503	UnaryOperationExpression	- 1		884227	1					
ANR	884504	UnaryOperator	-		884227	0					
ANR	884505	PrimaryExpression	1		884227	1					
ANR	884506	CompoundStatement		39:51:1740:1740	884227	1					
ANR	884507	Statement	zend_do_delayed_early_binding	1038:3:32634:32662	884227	0	True				
ANR	884508	Statement	(	1038:32:32663:32663	884227	1	True				
ANR	884509	Statement	op_array	1038:33:32664:32671	884227	2	True				
ANR	884510	Statement	","	1038:41:32672:32672	884227	3	True				
ANR	884511	Statement	persistent_script	1038:43:32674:32690	884227	4	True				
ANR	884512	Statement	->	1038:60:32691:32692	884227	5	True				
ANR	884513	Statement	early_binding	1038:62:32693:32705	884227	6	True				
ANR	884514	Statement	TSRMLS_CC	1038:76:32707:32715	884227	7	True				
ANR	884515	Statement	)	1038:85:32716:32716	884227	8	True				
ANR	884516	ExpressionStatement		1038:86:32717:32717	884227	9	True				
ANR	884517	ElseStatement	else		884227	0					
ANR	884518	CompoundStatement		44:39:1881:1881	884227	0					
ANR	884519	IfStatement	if ( zend_hash_num_elements ( & persistent_script -> function_table ) > 0 )		884227	0					
ANR	884520	Condition	zend_hash_num_elements ( & persistent_script -> function_table ) > 0	1043:6:32778:32839	884227	0	True				
ANR	884521	RelationalExpression	zend_hash_num_elements ( & persistent_script -> function_table ) > 0		884227	0		>			
ANR	884522	CallExpression	zend_hash_num_elements ( & persistent_script -> function_table )		884227	0					
ANR	884523	Callee	zend_hash_num_elements		884227	0					
ANR	884524	Identifier	zend_hash_num_elements		884227	0					
ANR	884525	ArgumentList	& persistent_script -> function_table		884227	1					
ANR	884526	Argument	& persistent_script -> function_table		884227	0					
ANR	884527	UnaryOperationExpression	& persistent_script -> function_table		884227	0					
ANR	884528	UnaryOperator	&		884227	0					
ANR	884529	PtrMemberAccess	persistent_script -> function_table		884227	1					
ANR	884530	Identifier	persistent_script		884227	0					
ANR	884531	Identifier	function_table		884227	1					
ANR	884532	PrimaryExpression	0		884227	1					
ANR	884533	CompoundStatement		45:70:1953:1953	884227	1					
ANR	884534	ExpressionStatement	"zend_accel_function_hash_copy ( CG ( function_table ) , & persistent_script -> function_table , NULL )"	1044:3:32847:32938	884227	0	True				
ANR	884535	CallExpression	"zend_accel_function_hash_copy ( CG ( function_table ) , & persistent_script -> function_table , NULL )"		884227	0					
ANR	884536	Callee	zend_accel_function_hash_copy		884227	0					
ANR	884537	Identifier	zend_accel_function_hash_copy		884227	0					
ANR	884538	ArgumentList	CG ( function_table )		884227	1					
ANR	884539	Argument	CG ( function_table )		884227	0					
ANR	884540	CallExpression	CG ( function_table )		884227	0					
ANR	884541	Callee	CG		884227	0					
ANR	884542	Identifier	CG		884227	0					
ANR	884543	ArgumentList	function_table		884227	1					
ANR	884544	Argument	function_table		884227	0					
ANR	884545	Identifier	function_table		884227	0					
ANR	884546	Argument	& persistent_script -> function_table		884227	1					
ANR	884547	UnaryOperationExpression	& persistent_script -> function_table		884227	0					
ANR	884548	UnaryOperator	&		884227	0					
ANR	884549	PtrMemberAccess	persistent_script -> function_table		884227	1					
ANR	884550	Identifier	persistent_script		884227	0					
ANR	884551	Identifier	function_table		884227	1					
ANR	884552	Argument	NULL		884227	2					
ANR	884553	Identifier	NULL		884227	0					
ANR	884554	IfStatement	if ( zend_hash_num_elements ( & persistent_script -> class_table ) > 0 )		884227	1					
ANR	884555	Condition	zend_hash_num_elements ( & persistent_script -> class_table ) > 0	1046:6:32950:33008	884227	0	True				
ANR	884556	RelationalExpression	zend_hash_num_elements ( & persistent_script -> class_table ) > 0		884227	0		>			
ANR	884557	CallExpression	zend_hash_num_elements ( & persistent_script -> class_table )		884227	0					
ANR	884558	Callee	zend_hash_num_elements		884227	0					
ANR	884559	Identifier	zend_hash_num_elements		884227	0					
ANR	884560	ArgumentList	& persistent_script -> class_table		884227	1					
ANR	884561	Argument	& persistent_script -> class_table		884227	0					
ANR	884562	UnaryOperationExpression	& persistent_script -> class_table		884227	0					
ANR	884563	UnaryOperator	&		884227	0					
ANR	884564	PtrMemberAccess	persistent_script -> class_table		884227	1					
ANR	884565	Identifier	persistent_script		884227	0					
ANR	884566	Identifier	class_table		884227	1					
ANR	884567	PrimaryExpression	0		884227	1					
ANR	884568	CompoundStatement		48:67:2122:2122	884227	1					
ANR	884569	Statement	zend_accel_class_hash_copy	1047:3:33016:33041	884227	0	True				
ANR	884570	Statement	(	1047:29:33042:33042	884227	1	True				
ANR	884571	Statement	CG	1047:30:33043:33044	884227	2	True				
ANR	884572	Statement	(	1047:32:33045:33045	884227	3	True				
ANR	884573	Statement	class_table	1047:33:33046:33056	884227	4	True				
ANR	884574	Statement	)	1047:44:33057:33057	884227	5	True				
ANR	884575	Statement	","	1047:45:33058:33058	884227	6	True				
ANR	884576	Statement	&	1047:47:33060:33060	884227	7	True				
ANR	884577	Statement	persistent_script	1047:48:33061:33077	884227	8	True				
ANR	884578	Statement	->	1047:65:33078:33079	884227	9	True				
ANR	884579	Statement	class_table	1047:67:33080:33090	884227	10	True				
ANR	884580	Statement	","	1047:78:33091:33091	884227	11	True				
ANR	884581	Statement	NULL	1047:80:33093:33096	884227	12	True				
ANR	884582	Statement	TSRMLS_CC	1047:85:33098:33106	884227	13	True				
ANR	884583	Statement	)	1047:94:33107:33107	884227	14	True				
ANR	884584	ExpressionStatement		1047:95:33108:33108	884227	15	True				
ANR	884585	IfStatement	if ( op_array -> early_binding != ( zend_uint ) - 1 )		884227	4					
ANR	884586	Condition	op_array -> early_binding != ( zend_uint ) - 1	1052:5:33169:33208	884227	0	True				
ANR	884587	EqualityExpression	op_array -> early_binding != ( zend_uint ) - 1		884227	0		!=			
ANR	884588	PtrMemberAccess	op_array -> early_binding		884227	0					
ANR	884589	Identifier	op_array		884227	0					
ANR	884590	Identifier	early_binding		884227	1					
ANR	884591	CastExpression	( zend_uint ) - 1		884227	1					
ANR	884592	CastTarget	zend_uint		884227	0					
ANR	884593	UnaryOperationExpression	- 1		884227	1					
ANR	884594	UnaryOperator	-		884227	0					
ANR	884595	PrimaryExpression	1		884227	1					
ANR	884596	CompoundStatement		55:2:2326:2378	884227	1					
ANR	884597	IdentifierDeclStatement	char * orig_compiled_filename = CG ( compiled_filename ) ;	1053:2:33215:33267	884227	0	True				
ANR	884598	IdentifierDecl	* orig_compiled_filename = CG ( compiled_filename )		884227	0					
ANR	884599	IdentifierDeclType	char *		884227	0					
ANR	884600	Identifier	orig_compiled_filename		884227	1					
ANR	884601	AssignmentExpression	* orig_compiled_filename = CG ( compiled_filename )		884227	2		=			
ANR	884602	Identifier	orig_compiled_filename		884227	0					
ANR	884603	CallExpression	CG ( compiled_filename )		884227	1					
ANR	884604	Callee	CG		884227	0					
ANR	884605	Identifier	CG		884227	0					
ANR	884606	ArgumentList	compiled_filename		884227	1					
ANR	884607	Argument	compiled_filename		884227	0					
ANR	884608	Identifier	compiled_filename		884227	0					
ANR	884609	ExpressionStatement	CG ( compiled_filename ) = persistent_script -> full_path	1054:2:33271:33323	884227	1	True				
ANR	884610	AssignmentExpression	CG ( compiled_filename ) = persistent_script -> full_path		884227	0		=			
ANR	884611	CallExpression	CG ( compiled_filename )		884227	0					
ANR	884612	Callee	CG		884227	0					
ANR	884613	Identifier	CG		884227	0					
ANR	884614	ArgumentList	compiled_filename		884227	1					
ANR	884615	Argument	compiled_filename		884227	0					
ANR	884616	Identifier	compiled_filename		884227	0					
ANR	884617	PtrMemberAccess	persistent_script -> full_path		884227	1					
ANR	884618	Identifier	persistent_script		884227	0					
ANR	884619	Identifier	full_path		884227	1					
ANR	884620	Statement	zend_do_delayed_early_binding	1055:2:33327:33355	884227	2	True				
ANR	884621	Statement	(	1055:31:33356:33356	884227	3	True				
ANR	884622	Statement	op_array	1055:32:33357:33364	884227	4	True				
ANR	884623	Statement	TSRMLS_CC	1055:41:33366:33374	884227	5	True				
ANR	884624	Statement	)	1055:50:33375:33375	884227	6	True				
ANR	884625	ExpressionStatement		1055:51:33376:33376	884227	7	True				
ANR	884626	ExpressionStatement	CG ( compiled_filename ) = orig_compiled_filename	1056:2:33380:33426	884227	8	True				
ANR	884627	AssignmentExpression	CG ( compiled_filename ) = orig_compiled_filename		884227	0		=			
ANR	884628	CallExpression	CG ( compiled_filename )		884227	0					
ANR	884629	Callee	CG		884227	0					
ANR	884630	Identifier	CG		884227	0					
ANR	884631	ArgumentList	compiled_filename		884227	1					
ANR	884632	Argument	compiled_filename		884227	0					
ANR	884633	Identifier	compiled_filename		884227	0					
ANR	884634	Identifier	orig_compiled_filename		884227	1					
ANR	884635	IfStatement	if ( ! from_shared_memory )		884227	5					
ANR	884636	Condition	! from_shared_memory	1060:5:33444:33462	884227	0	True				
ANR	884637	UnaryOperationExpression	! from_shared_memory		884227	0					
ANR	884638	UnaryOperator	!		884227	0					
ANR	884639	Identifier	from_shared_memory		884227	1					
ANR	884640	CompoundStatement		62:26:2576:2576	884227	1					
ANR	884641	ExpressionStatement	"free_persistent_script ( persistent_script , 0 )"	1061:2:33469:33513	884227	0	True				
ANR	884642	CallExpression	"free_persistent_script ( persistent_script , 0 )"		884227	0					
ANR	884643	Callee	free_persistent_script		884227	0					
ANR	884644	Identifier	free_persistent_script		884227	0					
ANR	884645	ArgumentList	persistent_script		884227	1					
ANR	884646	Argument	persistent_script		884227	0					
ANR	884647	Identifier	persistent_script		884227	0					
ANR	884648	Argument	0		884227	1					
ANR	884649	PrimaryExpression	0		884227	0					
ANR	884650	ReturnStatement	return op_array ;	1064:1:33543:33558	884227	6	True				
ANR	884651	Identifier	op_array		884227	0					
ANR	884652	ReturnType	zend_op_array *		884227	1					
ANR	884653	Identifier	zend_accel_load_script		884227	2					
ANR	884654	ParameterList	"zend_persistent_script * persistent_script , int from_shared_memory TSRMLS_DC"		884227	3					
ANR	884655	Parameter	zend_persistent_script * persistent_script	998:38:30811:30851	884227	0	True				
ANR	884656	ParameterType	zend_persistent_script *		884227	0					
ANR	884657	Identifier	persistent_script		884227	1					
ANR	884658	Parameter	int from_shared_memory TSRMLS_DC	998:81:30854:30885	884227	1	True				
ANR	884659	ParameterType	int from_shared_memory		884227	0					
ANR	884660	Identifier	TSRMLS_DC		884227	1					
ANR	884661	CFGEntryNode	ENTRY		884227		True				
ANR	884662	CFGExitNode	EXIT		884227		True				
ANR	884663	Symbol	cfilename		884227						
ANR	884664	Symbol	zend_hash_exists		884227						
ANR	884665	Symbol	& name		884227						
ANR	884666	Symbol	TSRMLS_DC		884227						
ANR	884667	Symbol	persistent_script -> main_op_array		884227						
ANR	884668	Symbol	from_shared_memory		884227						
ANR	884669	Symbol	strlen		884227						
ANR	884670	Symbol	emalloc		884227						
ANR	884671	Symbol	persistent_script -> full_path		884227						
ANR	884672	Symbol	len		884227						
ANR	884673	Symbol	op_array -> early_binding		884227						
ANR	884674	Symbol	zend_constants		884227						
ANR	884675	Symbol	bind_hash		884227						
ANR	884676	Symbol	& persistent_script -> class_table		884227						
ANR	884677	Symbol	EG		884227						
ANR	884678	Symbol	NULL		884227						
ANR	884679	Symbol	& ZCG		884227						
ANR	884680	Symbol	CG		884227						
ANR	884681	Symbol	zend_hash_num_elements		884227						
ANR	884682	Symbol	zend_prepare_function_for_execution		884227						
ANR	884683	Symbol	persistent_script		884227						
ANR	884684	Symbol	* persistent_script		884227						
ANR	884685	Symbol	compiled_filename		884227						
ANR	884686	Symbol	* op_array		884227						
ANR	884687	Symbol	& persistent_script -> function_table		884227						
ANR	884688	Symbol	persistent_script -> compiler_halt_offset		884227						
ANR	884689	Symbol	orig_compiled_filename		884227						
ANR	884690	Symbol	name		884227						
ANR	884691	Symbol	haltoff		884227						
ANR	884692	Symbol	function_table		884227						
ANR	884693	Symbol	clen		884227						
ANR	884694	Symbol	& len		884227						
ANR	884695	Symbol	persistent_script -> early_binding		884227						
ANR	884696	Symbol	op_array		884227						
ANR	884697	Function	zend_adler32	1104:0:35268:35976							
ANR	884698	FunctionDef	"zend_adler32 (unsigned int checksum , signed char * buf , uint len)"		884697	0					
ANR	884699	CompoundStatement		1105:0:35345:35976	884697	0					
ANR	884700	IdentifierDeclStatement	unsigned int s1 = checksum & 0xffff ;	1106:1:35348:35383	884697	0	True				
ANR	884701	IdentifierDecl	s1 = checksum & 0xffff		884697	0					
ANR	884702	IdentifierDeclType	unsigned int		884697	0					
ANR	884703	Identifier	s1		884697	1					
ANR	884704	AssignmentExpression	s1 = checksum & 0xffff		884697	2		=			
ANR	884705	Identifier	s1		884697	0					
ANR	884706	BitAndExpression	checksum & 0xffff		884697	1		&			
ANR	884707	Identifier	checksum		884697	0					
ANR	884708	PrimaryExpression	0xffff		884697	1					
ANR	884709	IdentifierDeclStatement	unsigned int s2 = ( checksum >> 16 ) & 0xffff ;	1107:1:35386:35429	884697	1	True				
ANR	884710	IdentifierDecl	s2 = ( checksum >> 16 ) & 0xffff		884697	0					
ANR	884711	IdentifierDeclType	unsigned int		884697	0					
ANR	884712	Identifier	s2		884697	1					
ANR	884713	AssignmentExpression	s2 = ( checksum >> 16 ) & 0xffff		884697	2		=			
ANR	884714	Identifier	s2		884697	0					
ANR	884715	BitAndExpression	( checksum >> 16 ) & 0xffff		884697	1		&			
ANR	884716	ShiftExpression	checksum >> 16		884697	0		>>			
ANR	884717	Identifier	checksum		884697	0					
ANR	884718	PrimaryExpression	16		884697	1					
ANR	884719	PrimaryExpression	0xffff		884697	1					
ANR	884720	IdentifierDeclStatement	signed char * end ;	1108:1:35432:35448	884697	2	True				
ANR	884721	IdentifierDecl	* end		884697	0					
ANR	884722	IdentifierDeclType	signed char *		884697	0					
ANR	884723	Identifier	end		884697	1					
ANR	884724	WhileStatement	while ( len >= ADLER32_NMAX )		884697	3					
ANR	884725	Condition	len >= ADLER32_NMAX	1110:8:35459:35477	884697	0	True				
ANR	884726	RelationalExpression	len >= ADLER32_NMAX		884697	0		>=			
ANR	884727	Identifier	len		884697	0					
ANR	884728	Identifier	ADLER32_NMAX		884697	1					
ANR	884729	CompoundStatement		6:29:134:134	884697	1					
ANR	884730	ExpressionStatement	len -= ADLER32_NMAX	1111:2:35484:35503	884697	0	True				
ANR	884731	AssignmentExpression	len -= ADLER32_NMAX		884697	0		-=			
ANR	884732	Identifier	len		884697	0					
ANR	884733	Identifier	ADLER32_NMAX		884697	1					
ANR	884734	ExpressionStatement	end = buf + ADLER32_NMAX	1112:2:35507:35531	884697	1	True				
ANR	884735	AssignmentExpression	end = buf + ADLER32_NMAX		884697	0		=			
ANR	884736	Identifier	end		884697	0					
ANR	884737	AdditiveExpression	buf + ADLER32_NMAX		884697	1		+			
ANR	884738	Identifier	buf		884697	0					
ANR	884739	Identifier	ADLER32_NMAX		884697	1					
ANR	884740	DoStatement	do		884697	2					
ANR	884741	CompoundStatement		9:5:192:192	884697	0					
ANR	884742	ExpressionStatement	ADLER32_DO16 ( buf )	1114:3:35543:35560	884697	0	True				
ANR	884743	CallExpression	ADLER32_DO16 ( buf )		884697	0					
ANR	884744	Callee	ADLER32_DO16		884697	0					
ANR	884745	Identifier	ADLER32_DO16		884697	0					
ANR	884746	ArgumentList	buf		884697	1					
ANR	884747	Argument	buf		884697	0					
ANR	884748	Identifier	buf		884697	0					
ANR	884749	ExpressionStatement	buf += 16	1115:3:35565:35574	884697	1	True				
ANR	884750	AssignmentExpression	buf += 16		884697	0		+=			
ANR	884751	Identifier	buf		884697	0					
ANR	884752	PrimaryExpression	16		884697	1					
ANR	884753	Condition	buf != end	1116:11:35587:35596	884697	1	True				
ANR	884754	EqualityExpression	buf != end		884697	0		!=			
ANR	884755	Identifier	buf		884697	0					
ANR	884756	Identifier	end		884697	1					
ANR	884757	ExpressionStatement	s1 %= ADLER32_BASE	1117:2:35602:35620	884697	3	True				
ANR	884758	AssignmentExpression	s1 %= ADLER32_BASE		884697	0		%=			
ANR	884759	Identifier	s1		884697	0					
ANR	884760	Identifier	ADLER32_BASE		884697	1					
ANR	884761	ExpressionStatement	s2 %= ADLER32_BASE	1118:2:35624:35642	884697	4	True				
ANR	884762	AssignmentExpression	s2 %= ADLER32_BASE		884697	0		%=			
ANR	884763	Identifier	s2		884697	0					
ANR	884764	Identifier	ADLER32_BASE		884697	1					
ANR	884765	IfStatement	if ( len )		884697	4					
ANR	884766	Condition	len	1121:5:35653:35655	884697	0	True				
ANR	884767	Identifier	len		884697	0					
ANR	884768	CompoundStatement		17:10:312:312	884697	1					
ANR	884769	IfStatement	if ( len >= 16 )		884697	0					
ANR	884770	Condition	len >= 16	1122:6:35666:35674	884697	0	True				
ANR	884771	RelationalExpression	len >= 16		884697	0		>=			
ANR	884772	Identifier	len		884697	0					
ANR	884773	PrimaryExpression	16		884697	1					
ANR	884774	CompoundStatement		18:17:331:331	884697	1					
ANR	884775	ExpressionStatement	end = buf + ( len & 0xfff0 )	1123:3:35682:35708	884697	0	True				
ANR	884776	AssignmentExpression	end = buf + ( len & 0xfff0 )		884697	0		=			
ANR	884777	Identifier	end		884697	0					
ANR	884778	AdditiveExpression	buf + ( len & 0xfff0 )		884697	1		+			
ANR	884779	Identifier	buf		884697	0					
ANR	884780	BitAndExpression	len & 0xfff0		884697	1		&			
ANR	884781	Identifier	len		884697	0					
ANR	884782	PrimaryExpression	0xfff0		884697	1					
ANR	884783	ExpressionStatement	len &= 0xf	1124:3:35713:35723	884697	1	True				
ANR	884784	AssignmentExpression	len &= 0xf		884697	0		&=			
ANR	884785	Identifier	len		884697	0					
ANR	884786	PrimaryExpression	0xf		884697	1					
ANR	884787	DoStatement	do		884697	2					
ANR	884788	CompoundStatement		21:6:385:385	884697	0					
ANR	884789	ExpressionStatement	ADLER32_DO16 ( buf )	1126:4:35737:35754	884697	0	True				
ANR	884790	CallExpression	ADLER32_DO16 ( buf )		884697	0					
ANR	884791	Callee	ADLER32_DO16		884697	0					
ANR	884792	Identifier	ADLER32_DO16		884697	0					
ANR	884793	ArgumentList	buf		884697	1					
ANR	884794	Argument	buf		884697	0					
ANR	884795	Identifier	buf		884697	0					
ANR	884796	ExpressionStatement	buf += 16	1127:4:35760:35769	884697	1	True				
ANR	884797	AssignmentExpression	buf += 16		884697	0		+=			
ANR	884798	Identifier	buf		884697	0					
ANR	884799	PrimaryExpression	16		884697	1					
ANR	884800	Condition	buf != end	1128:12:35783:35792	884697	1	True				
ANR	884801	EqualityExpression	buf != end		884697	0		!=			
ANR	884802	Identifier	buf		884697	0					
ANR	884803	Identifier	end		884697	1					
ANR	884804	IfStatement	if ( len )		884697	1					
ANR	884805	Condition	len	1130:6:35806:35808	884697	0	True				
ANR	884806	Identifier	len		884697	0					
ANR	884807	CompoundStatement		26:11:465:465	884697	1					
ANR	884808	ExpressionStatement	end = buf + len	1131:3:35816:35831	884697	0	True				
ANR	884809	AssignmentExpression	end = buf + len		884697	0		=			
ANR	884810	Identifier	end		884697	0					
ANR	884811	AdditiveExpression	buf + len		884697	1		+			
ANR	884812	Identifier	buf		884697	0					
ANR	884813	Identifier	len		884697	1					
ANR	884814	DoStatement	do		884697	1					
ANR	884815	CompoundStatement		28:6:493:493	884697	0					
ANR	884816	ExpressionStatement	ADLER32_DO1 ( buf )	1133:4:35845:35861	884697	0	True				
ANR	884817	CallExpression	ADLER32_DO1 ( buf )		884697	0					
ANR	884818	Callee	ADLER32_DO1		884697	0					
ANR	884819	Identifier	ADLER32_DO1		884697	0					
ANR	884820	ArgumentList	buf		884697	1					
ANR	884821	Argument	buf		884697	0					
ANR	884822	Identifier	buf		884697	0					
ANR	884823	ExpressionStatement	buf ++	1134:4:35867:35872	884697	1	True				
ANR	884824	PostIncDecOperationExpression	buf ++		884697	0					
ANR	884825	Identifier	buf		884697	0					
ANR	884826	IncDec	++		884697	1					
ANR	884827	Condition	buf != end	1135:12:35886:35895	884697	1	True				
ANR	884828	EqualityExpression	buf != end		884697	0		!=			
ANR	884829	Identifier	buf		884697	0					
ANR	884830	Identifier	end		884697	1					
ANR	884831	ExpressionStatement	s1 %= ADLER32_BASE	1137:2:35905:35923	884697	2	True				
ANR	884832	AssignmentExpression	s1 %= ADLER32_BASE		884697	0		%=			
ANR	884833	Identifier	s1		884697	0					
ANR	884834	Identifier	ADLER32_BASE		884697	1					
ANR	884835	ExpressionStatement	s2 %= ADLER32_BASE	1138:2:35927:35945	884697	3	True				
ANR	884836	AssignmentExpression	s2 %= ADLER32_BASE		884697	0		%=			
ANR	884837	Identifier	s2		884697	0					
ANR	884838	Identifier	ADLER32_BASE		884697	1					
ANR	884839	ReturnStatement	return ( s2 << 16 ) | s1 ;	1141:1:35952:35974	884697	5	True				
ANR	884840	InclusiveOrExpression	( s2 << 16 ) | s1		884697	0		|			
ANR	884841	ShiftExpression	s2 << 16		884697	0		<<			
ANR	884842	Identifier	s2		884697	0					
ANR	884843	PrimaryExpression	16		884697	1					
ANR	884844	Identifier	s1		884697	1					
ANR	884845	ReturnType	unsigned int		884697	1					
ANR	884846	Identifier	zend_adler32		884697	2					
ANR	884847	ParameterList	"unsigned int checksum , signed char * buf , uint len"		884697	3					
ANR	884848	Parameter	unsigned int checksum	1104:26:35294:35314	884697	0	True				
ANR	884849	ParameterType	unsigned int		884697	0					
ANR	884850	Identifier	checksum		884697	1					
ANR	884851	Parameter	signed char * buf	1104:49:35317:35332	884697	1	True				
ANR	884852	ParameterType	signed char *		884697	0					
ANR	884853	Identifier	buf		884697	1					
ANR	884854	Parameter	uint len	1104:67:35335:35342	884697	2	True				
ANR	884855	ParameterType	uint		884697	0					
ANR	884856	Identifier	len		884697	1					
ANR	884857	CFGEntryNode	ENTRY		884697		True				
ANR	884858	CFGExitNode	EXIT		884697		True				
ANR	884859	Symbol	buf		884697						
ANR	884860	Symbol	len		884697						
ANR	884861	Symbol	checksum		884697						
ANR	884862	Symbol	ADLER32_NMAX		884697						
ANR	884863	Symbol	end		884697						
ANR	884864	Symbol	s1		884697						
ANR	884865	Symbol	s2		884697						
ANR	884866	Symbol	ADLER32_BASE		884697						
