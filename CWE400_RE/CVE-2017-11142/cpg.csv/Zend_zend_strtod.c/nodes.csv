command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	109810	File	data/converged/CVE-2017-11142_php-src/Zend_zend_strtod.c								
ANR	109811	DeclStmt									
ANR	109812	Decl							int	int	int32_t
ANR	109813	DeclStmt									
ANR	109814	Decl							long int	long int	int32_t
ANR	109815	DeclStmt									
ANR	109816	Decl							unsigned int	unsigned int	uint32_t
ANR	109817	DeclStmt									
ANR	109818	Decl							unsigned long int	unsigned long int	uint32_t
ANR	109819	DeclStmt									
ANR	109820	Decl							extern char	extern char * ( )	MALLOC
ANR	109821	DeclStmt									
ANR	109822	Decl							extern void	extern void * ( size_t )	MALLOC
ANR	109823	ClassDef	<unnamed>	273:9:7377:7431							
ANR	109824	DeclStmt									
ANR	109825	Decl							double	double	d
ANR	109826	DeclStmt									
ANR	109827	Decl							ULong	ULong [ 2 ]	ul
ANR	109828	DeclStmt									
ANR	109829	Decl									_double
ANR	109830	DeclStmt									
ANR	109831	Decl							extern double	extern double ( )	rnd_prod
ANR	109832	Decl							extern double	extern double ( )	rnd_quot
ANR	109833	DeclStmt									
ANR	109834	Decl							extern double	"extern double ( double , double )"	rnd_prod
ANR	109835	Decl							extern double	"extern double ( double , double )"	rnd_quot
ANR	109836	ClassDef	Bigint	418:0:11083:11161							
ANR	109837	DeclStmt									
ANR	109838	Decl							struct Bigint	struct Bigint *	next
ANR	109839	DeclStmt									
ANR	109840	Decl							int	int	k
ANR	109841	Decl							int	int	maxwds
ANR	109842	Decl							int	int	sign
ANR	109843	Decl							int	int	wds
ANR	109844	DeclStmt									
ANR	109845	Decl							ULong	ULong [ 1 ]	x
ANR	109846	DeclStmt									
ANR	109847	Decl							struct Bigint	struct Bigint	Bigint
ANR	109848	DeclStmt									
ANR	109849	Decl							Bigint	Bigint * [ Kmax + 1 ]	freelist
ANR	109850	DeclStmt									
ANR	109851	Decl							Bigint	Bigint *	p5s
ANR	109852	DeclStmt									
ANR	109853	Decl							void	void ( void )	destroy_freelist
ANR	109854	DeclStmt									
ANR	109855	Decl							MUTEX_T	MUTEX_T	dtoa_mutex
ANR	109856	DeclStmt									
ANR	109857	Decl							MUTEX_T	MUTEX_T	pow5mult_mutex
ANR	109858	Function	Bug	448:0:11642:11716							
ANR	109859	FunctionDef	Bug (const char * message)		109858	0					
ANR	109860	CompoundStatement		448:37:11679:11716	109858	0					
ANR	109861	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , message )"	449:1:11682:11714	109858	0	True				
ANR	109862	CallExpression	"fprintf ( stderr , ""%s\\n"" , message )"		109858	0					
ANR	109863	Callee	fprintf		109858	0					
ANR	109864	Identifier	fprintf		109858	0					
ANR	109865	ArgumentList	stderr		109858	1					
ANR	109866	Argument	stderr		109858	0					
ANR	109867	Identifier	stderr		109858	0					
ANR	109868	Argument	"""%s\\n"""		109858	1					
ANR	109869	PrimaryExpression	"""%s\\n"""		109858	0					
ANR	109870	Argument	message		109858	2					
ANR	109871	Identifier	message		109858	0					
ANR	109872	ReturnType	static void		109858	1					
ANR	109873	Identifier	Bug		109858	2					
ANR	109874	ParameterList	const char * message		109858	3					
ANR	109875	Parameter	const char * message	448:16:11658:11676	109858	0	True				
ANR	109876	ParameterType	const char *		109858	0					
ANR	109877	Identifier	message		109858	1					
ANR	109878	CFGEntryNode	ENTRY		109858		True				
ANR	109879	CFGExitNode	EXIT		109858		True				
ANR	109880	Symbol	message		109858						
ANR	109881	Symbol	stderr		109858						
ANR	109882	Function	zend_startup_strtod	453:0:11726:11878							
ANR	109883	FunctionDef	zend_startup_strtod ()		109882	0					
ANR	109884	CompoundStatement		454:0:11775:11878	109882	0					
ANR	109885	ExpressionStatement	dtoa_mutex = tsrm_mutex_alloc ( )	456:1:11789:11820	109882	0	True				
ANR	109886	AssignmentExpression	dtoa_mutex = tsrm_mutex_alloc ( )		109882	0		=			
ANR	109887	Identifier	dtoa_mutex		109882	0					
ANR	109888	CallExpression	tsrm_mutex_alloc ( )		109882	1					
ANR	109889	Callee	tsrm_mutex_alloc		109882	0					
ANR	109890	Identifier	tsrm_mutex_alloc		109882	0					
ANR	109891	ArgumentList			109882	1					
ANR	109892	ExpressionStatement	pow5mult_mutex = tsrm_mutex_alloc ( )	457:1:11823:11858	109882	1	True				
ANR	109893	AssignmentExpression	pow5mult_mutex = tsrm_mutex_alloc ( )		109882	0		=			
ANR	109894	Identifier	pow5mult_mutex		109882	0					
ANR	109895	CallExpression	tsrm_mutex_alloc ( )		109882	1					
ANR	109896	Callee	tsrm_mutex_alloc		109882	0					
ANR	109897	Identifier	tsrm_mutex_alloc		109882	0					
ANR	109898	ArgumentList			109882	1					
ANR	109899	ReturnStatement	return 1 ;	459:1:11868:11876	109882	2	True				
ANR	109900	PrimaryExpression	1		109882	0					
ANR	109901	ReturnType	ZEND_API int		109882	1					
ANR	109902	Identifier	zend_startup_strtod		109882	2					
ANR	109903	ParameterList			109882	3					
ANR	109904	CFGEntryNode	ENTRY		109882		True				
ANR	109905	CFGExitNode	EXIT		109882		True				
ANR	109906	Symbol	dtoa_mutex		109882						
ANR	109907	Symbol	pow5mult_mutex		109882						
ANR	109908	Symbol	tsrm_mutex_alloc		109882						
ANR	109909	Function	zend_shutdown_strtod	462:0:11890:12101							
ANR	109910	FunctionDef	zend_shutdown_strtod ()		109909	0					
ANR	109911	CompoundStatement		463:0:11940:12101	109909	0					
ANR	109912	ExpressionStatement	destroy_freelist ( )	464:1:11943:11961	109909	0	True				
ANR	109913	CallExpression	destroy_freelist ( )		109909	0					
ANR	109914	Callee	destroy_freelist		109909	0					
ANR	109915	Identifier	destroy_freelist		109909	0					
ANR	109916	ArgumentList			109909	1					
ANR	109917	ExpressionStatement	tsrm_mutex_free ( dtoa_mutex )	466:1:11975:12002	109909	1	True				
ANR	109918	CallExpression	tsrm_mutex_free ( dtoa_mutex )		109909	0					
ANR	109919	Callee	tsrm_mutex_free		109909	0					
ANR	109920	Identifier	tsrm_mutex_free		109909	0					
ANR	109921	ArgumentList	dtoa_mutex		109909	1					
ANR	109922	Argument	dtoa_mutex		109909	0					
ANR	109923	Identifier	dtoa_mutex		109909	0					
ANR	109924	ExpressionStatement	dtoa_mutex = NULL	467:1:12005:12022	109909	2	True				
ANR	109925	AssignmentExpression	dtoa_mutex = NULL		109909	0		=			
ANR	109926	Identifier	dtoa_mutex		109909	0					
ANR	109927	Identifier	NULL		109909	1					
ANR	109928	ExpressionStatement	tsrm_mutex_free ( pow5mult_mutex )	469:1:12026:12057	109909	3	True				
ANR	109929	CallExpression	tsrm_mutex_free ( pow5mult_mutex )		109909	0					
ANR	109930	Callee	tsrm_mutex_free		109909	0					
ANR	109931	Identifier	tsrm_mutex_free		109909	0					
ANR	109932	ArgumentList	pow5mult_mutex		109909	1					
ANR	109933	Argument	pow5mult_mutex		109909	0					
ANR	109934	Identifier	pow5mult_mutex		109909	0					
ANR	109935	ExpressionStatement	pow5mult_mutex = NULL	470:1:12060:12081	109909	4	True				
ANR	109936	AssignmentExpression	pow5mult_mutex = NULL		109909	0		=			
ANR	109937	Identifier	pow5mult_mutex		109909	0					
ANR	109938	Identifier	NULL		109909	1					
ANR	109939	ReturnStatement	return 1 ;	472:1:12091:12099	109909	5	True				
ANR	109940	PrimaryExpression	1		109909	0					
ANR	109941	ReturnType	ZEND_API int		109909	1					
ANR	109942	Identifier	zend_shutdown_strtod		109909	2					
ANR	109943	ParameterList			109909	3					
ANR	109944	CFGEntryNode	ENTRY		109909		True				
ANR	109945	CFGExitNode	EXIT		109909		True				
ANR	109946	Symbol	NULL		109909						
ANR	109947	Symbol	dtoa_mutex		109909						
ANR	109948	Symbol	pow5mult_mutex		109909						
ANR	109949	Function	Balloc	476:0:12114:12675							
ANR	109950	FunctionDef	Balloc (int k)		109949	0					
ANR	109951	CompoundStatement		477:0:12144:12675	109949	0					
ANR	109952	IdentifierDeclStatement	int x ;	478:1:12147:12152	109949	0	True				
ANR	109953	IdentifierDecl	x		109949	0					
ANR	109954	IdentifierDeclType	int		109949	0					
ANR	109955	Identifier	x		109949	1					
ANR	109956	IdentifierDeclStatement	Bigint * rv ;	479:1:12155:12165	109949	1	True				
ANR	109957	IdentifierDecl	* rv		109949	0					
ANR	109958	IdentifierDeclType	Bigint *		109949	0					
ANR	109959	Identifier	rv		109949	1					
ANR	109960	IfStatement	if ( k > Kmax )		109949	2					
ANR	109961	Condition	k > Kmax	481:5:12173:12180	109949	0	True				
ANR	109962	RelationalExpression	k > Kmax		109949	0		>			
ANR	109963	Identifier	k		109949	0					
ANR	109964	Identifier	Kmax		109949	1					
ANR	109965	CompoundStatement		5:15:38:38	109949	1					
ANR	109966	ExpressionStatement	"zend_error ( E_ERROR , ""Balloc() allocation exceeds list boundary"" )"	482:2:12187:12251	109949	0	True				
ANR	109967	CallExpression	"zend_error ( E_ERROR , ""Balloc() allocation exceeds list boundary"" )"		109949	0					
ANR	109968	Callee	zend_error		109949	0					
ANR	109969	Identifier	zend_error		109949	0					
ANR	109970	ArgumentList	E_ERROR		109949	1					
ANR	109971	Argument	E_ERROR		109949	0					
ANR	109972	Identifier	E_ERROR		109949	0					
ANR	109973	Argument	"""Balloc() allocation exceeds list boundary"""		109949	1					
ANR	109974	PrimaryExpression	"""Balloc() allocation exceeds list boundary"""		109949	0					
ANR	109975	ExpressionStatement	_THREAD_PRIVATE_MUTEX_LOCK ( dtoa_mutex )	485:1:12258:12296	109949	3	True				
ANR	109976	CallExpression	_THREAD_PRIVATE_MUTEX_LOCK ( dtoa_mutex )		109949	0					
ANR	109977	Callee	_THREAD_PRIVATE_MUTEX_LOCK		109949	0					
ANR	109978	Identifier	_THREAD_PRIVATE_MUTEX_LOCK		109949	0					
ANR	109979	ArgumentList	dtoa_mutex		109949	1					
ANR	109980	Argument	dtoa_mutex		109949	0					
ANR	109981	Identifier	dtoa_mutex		109949	0					
ANR	109982	IfStatement	if ( ( rv = freelist [ k ] ) )		109949	4					
ANR	109983	Condition	rv = freelist [ k ]	486:5:12303:12320	109949	0	True				
ANR	109984	AssignmentExpression	rv = freelist [ k ]		109949	0		=			
ANR	109985	Identifier	rv		109949	0					
ANR	109986	ArrayIndexing	freelist [ k ]		109949	1					
ANR	109987	Identifier	freelist		109949	0					
ANR	109988	Identifier	k		109949	1					
ANR	109989	CompoundStatement		10:25:178:178	109949	1					
ANR	109990	ExpressionStatement	freelist [ k ] = rv -> next	487:2:12327:12349	109949	0	True				
ANR	109991	AssignmentExpression	freelist [ k ] = rv -> next		109949	0		=			
ANR	109992	ArrayIndexing	freelist [ k ]		109949	0					
ANR	109993	Identifier	freelist		109949	0					
ANR	109994	Identifier	k		109949	1					
ANR	109995	PtrMemberAccess	rv -> next		109949	1					
ANR	109996	Identifier	rv		109949	0					
ANR	109997	Identifier	next		109949	1					
ANR	109998	ElseStatement	else		109949	0					
ANR	109999	CompoundStatement		12:8:214:214	109949	0					
ANR	110000	ExpressionStatement	x = 1 << k	489:2:12363:12373	109949	0	True				
ANR	110001	AssignmentExpression	x = 1 << k		109949	0		=			
ANR	110002	Identifier	x		109949	0					
ANR	110003	ShiftExpression	1 << k		109949	1		<<			
ANR	110004	PrimaryExpression	1		109949	0					
ANR	110005	Identifier	k		109949	1					
ANR	110006	ExpressionStatement	rv = ( Bigint * ) MALLOC ( sizeof ( Bigint ) + ( x - 1 ) * sizeof ( Long ) )	490:2:12377:12435	109949	1	True				
ANR	110007	AssignmentExpression	rv = ( Bigint * ) MALLOC ( sizeof ( Bigint ) + ( x - 1 ) * sizeof ( Long ) )		109949	0		=			
ANR	110008	Identifier	rv		109949	0					
ANR	110009	CastExpression	( Bigint * ) MALLOC ( sizeof ( Bigint ) + ( x - 1 ) * sizeof ( Long ) )		109949	1					
ANR	110010	CastTarget	Bigint *		109949	0					
ANR	110011	CallExpression	MALLOC ( sizeof ( Bigint ) + ( x - 1 ) * sizeof ( Long ) )		109949	1					
ANR	110012	Callee	MALLOC		109949	0					
ANR	110013	Identifier	MALLOC		109949	0					
ANR	110014	ArgumentList	sizeof ( Bigint ) + ( x - 1 ) * sizeof ( Long )		109949	1					
ANR	110015	Argument	sizeof ( Bigint ) + ( x - 1 ) * sizeof ( Long )		109949	0					
ANR	110016	AdditiveExpression	sizeof ( Bigint ) + ( x - 1 ) * sizeof ( Long )		109949	0		+			
ANR	110017	SizeofExpression	sizeof ( Bigint )		109949	0					
ANR	110018	Sizeof	sizeof		109949	0					
ANR	110019	SizeofOperand	Bigint		109949	1					
ANR	110020	MultiplicativeExpression	( x - 1 ) * sizeof ( Long )		109949	1		*			
ANR	110021	AdditiveExpression	x - 1		109949	0		-			
ANR	110022	Identifier	x		109949	0					
ANR	110023	PrimaryExpression	1		109949	1					
ANR	110024	SizeofExpression	sizeof ( Long )		109949	1					
ANR	110025	Sizeof	sizeof		109949	0					
ANR	110026	SizeofOperand	Long		109949	1					
ANR	110027	IfStatement	if ( ! rv )		109949	2					
ANR	110028	Condition	! rv	491:6:12443:12445	109949	0	True				
ANR	110029	UnaryOperationExpression	! rv		109949	0					
ANR	110030	UnaryOperator	!		109949	0					
ANR	110031	Identifier	rv		109949	1					
ANR	110032	CompoundStatement		15:11:303:303	109949	1					
ANR	110033	ExpressionStatement	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )	492:3:12453:12493	109949	0	True				
ANR	110034	CallExpression	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )		109949	0					
ANR	110035	Callee	_THREAD_PRIVATE_MUTEX_UNLOCK		109949	0					
ANR	110036	Identifier	_THREAD_PRIVATE_MUTEX_UNLOCK		109949	0					
ANR	110037	ArgumentList	dtoa_mutex		109949	1					
ANR	110038	Argument	dtoa_mutex		109949	0					
ANR	110039	Identifier	dtoa_mutex		109949	0					
ANR	110040	ExpressionStatement	"zend_error ( E_ERROR , ""Balloc() failed to allocate memory"" )"	493:3:12498:12555	109949	1	True				
ANR	110041	CallExpression	"zend_error ( E_ERROR , ""Balloc() failed to allocate memory"" )"		109949	0					
ANR	110042	Callee	zend_error		109949	0					
ANR	110043	Identifier	zend_error		109949	0					
ANR	110044	ArgumentList	E_ERROR		109949	1					
ANR	110045	Argument	E_ERROR		109949	0					
ANR	110046	Identifier	E_ERROR		109949	0					
ANR	110047	Argument	"""Balloc() failed to allocate memory"""		109949	1					
ANR	110048	PrimaryExpression	"""Balloc() failed to allocate memory"""		109949	0					
ANR	110049	ExpressionStatement	rv -> k = k	495:2:12563:12572	109949	3	True				
ANR	110050	AssignmentExpression	rv -> k = k		109949	0		=			
ANR	110051	PtrMemberAccess	rv -> k		109949	0					
ANR	110052	Identifier	rv		109949	0					
ANR	110053	Identifier	k		109949	1					
ANR	110054	Identifier	k		109949	1					
ANR	110055	ExpressionStatement	rv -> maxwds = x	496:2:12576:12590	109949	4	True				
ANR	110056	AssignmentExpression	rv -> maxwds = x		109949	0		=			
ANR	110057	PtrMemberAccess	rv -> maxwds		109949	0					
ANR	110058	Identifier	rv		109949	0					
ANR	110059	Identifier	maxwds		109949	1					
ANR	110060	Identifier	x		109949	1					
ANR	110061	ExpressionStatement	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )	498:1:12596:12636	109949	5	True				
ANR	110062	CallExpression	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )		109949	0					
ANR	110063	Callee	_THREAD_PRIVATE_MUTEX_UNLOCK		109949	0					
ANR	110064	Identifier	_THREAD_PRIVATE_MUTEX_UNLOCK		109949	0					
ANR	110065	ArgumentList	dtoa_mutex		109949	1					
ANR	110066	Argument	dtoa_mutex		109949	0					
ANR	110067	Identifier	dtoa_mutex		109949	0					
ANR	110068	ExpressionStatement	rv -> sign = rv -> wds = 0	499:1:12639:12661	109949	6	True				
ANR	110069	AssignmentExpression	rv -> sign = rv -> wds = 0		109949	0		=			
ANR	110070	PtrMemberAccess	rv -> sign		109949	0					
ANR	110071	Identifier	rv		109949	0					
ANR	110072	Identifier	sign		109949	1					
ANR	110073	AssignmentExpression	rv -> wds = 0		109949	1		=			
ANR	110074	PtrMemberAccess	rv -> wds		109949	0					
ANR	110075	Identifier	rv		109949	0					
ANR	110076	Identifier	wds		109949	1					
ANR	110077	PrimaryExpression	0		109949	1					
ANR	110078	ReturnStatement	return rv ;	500:1:12664:12673	109949	7	True				
ANR	110079	Identifier	rv		109949	0					
ANR	110080	ReturnType	static Bigint *		109949	1					
ANR	110081	Identifier	Balloc		109949	2					
ANR	110082	ParameterList	int k		109949	3					
ANR	110083	Parameter	int k	476:23:12137:12141	109949	0	True				
ANR	110084	ParameterType	int		109949	0					
ANR	110085	Identifier	k		109949	1					
ANR	110086	CFGEntryNode	ENTRY		109949		True				
ANR	110087	CFGExitNode	EXIT		109949		True				
ANR	110088	Symbol	rv -> k		109949						
ANR	110089	Symbol	rv		109949						
ANR	110090	Symbol	dtoa_mutex		109949						
ANR	110091	Symbol	rv -> next		109949						
ANR	110092	Symbol	* rv		109949						
ANR	110093	Symbol	k		109949						
ANR	110094	Symbol	rv -> maxwds		109949						
ANR	110095	Symbol	rv -> sign		109949						
ANR	110096	Symbol	E_ERROR		109949						
ANR	110097	Symbol	freelist		109949						
ANR	110098	Symbol	* freelist		109949						
ANR	110099	Symbol	MALLOC		109949						
ANR	110100	Symbol	* k		109949						
ANR	110101	Symbol	x		109949						
ANR	110102	Symbol	Kmax		109949						
ANR	110103	Symbol	rv -> wds		109949						
ANR	110104	Function	Bfree	503:0:12678:12858							
ANR	110105	FunctionDef	Bfree (Bigint * v)		110104	0					
ANR	110106	CompoundStatement		504:0:12707:12858	110104	0					
ANR	110107	IfStatement	if ( v )		110104	0					
ANR	110108	Condition	v	505:5:12714:12714	110104	0	True				
ANR	110109	Identifier	v		110104	0					
ANR	110110	CompoundStatement		2:8:9:9	110104	1					
ANR	110111	ExpressionStatement	_THREAD_PRIVATE_MUTEX_LOCK ( dtoa_mutex )	506:2:12721:12759	110104	0	True				
ANR	110112	CallExpression	_THREAD_PRIVATE_MUTEX_LOCK ( dtoa_mutex )		110104	0					
ANR	110113	Callee	_THREAD_PRIVATE_MUTEX_LOCK		110104	0					
ANR	110114	Identifier	_THREAD_PRIVATE_MUTEX_LOCK		110104	0					
ANR	110115	ArgumentList	dtoa_mutex		110104	1					
ANR	110116	Argument	dtoa_mutex		110104	0					
ANR	110117	Identifier	dtoa_mutex		110104	0					
ANR	110118	ExpressionStatement	v -> next = freelist [ v -> k ]	507:2:12763:12787	110104	1	True				
ANR	110119	AssignmentExpression	v -> next = freelist [ v -> k ]		110104	0		=			
ANR	110120	PtrMemberAccess	v -> next		110104	0					
ANR	110121	Identifier	v		110104	0					
ANR	110122	Identifier	next		110104	1					
ANR	110123	ArrayIndexing	freelist [ v -> k ]		110104	1					
ANR	110124	Identifier	freelist		110104	0					
ANR	110125	PtrMemberAccess	v -> k		110104	1					
ANR	110126	Identifier	v		110104	0					
ANR	110127	Identifier	k		110104	1					
ANR	110128	ExpressionStatement	freelist [ v -> k ] = v	508:2:12791:12809	110104	2	True				
ANR	110129	AssignmentExpression	freelist [ v -> k ] = v		110104	0		=			
ANR	110130	ArrayIndexing	freelist [ v -> k ]		110104	0					
ANR	110131	Identifier	freelist		110104	0					
ANR	110132	PtrMemberAccess	v -> k		110104	1					
ANR	110133	Identifier	v		110104	0					
ANR	110134	Identifier	k		110104	1					
ANR	110135	Identifier	v		110104	1					
ANR	110136	ExpressionStatement	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )	509:2:12813:12853	110104	3	True				
ANR	110137	CallExpression	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )		110104	0					
ANR	110138	Callee	_THREAD_PRIVATE_MUTEX_UNLOCK		110104	0					
ANR	110139	Identifier	_THREAD_PRIVATE_MUTEX_UNLOCK		110104	0					
ANR	110140	ArgumentList	dtoa_mutex		110104	1					
ANR	110141	Argument	dtoa_mutex		110104	0					
ANR	110142	Identifier	dtoa_mutex		110104	0					
ANR	110143	ReturnType	static void		110104	1					
ANR	110144	Identifier	Bfree		110104	2					
ANR	110145	ParameterList	Bigint * v		110104	3					
ANR	110146	Parameter	Bigint * v	503:18:12696:12704	110104	0	True				
ANR	110147	ParameterType	Bigint *		110104	0					
ANR	110148	Identifier	v		110104	1					
ANR	110149	CFGEntryNode	ENTRY		110104		True				
ANR	110150	CFGExitNode	EXIT		110104		True				
ANR	110151	Symbol	* v		110104						
ANR	110152	Symbol	* v -> k		110104						
ANR	110153	Symbol	v -> k		110104						
ANR	110154	Symbol	freelist		110104						
ANR	110155	Symbol	* freelist		110104						
ANR	110156	Symbol	v -> next		110104						
ANR	110157	Symbol	* * v		110104						
ANR	110158	Symbol	v		110104						
ANR	110159	Symbol	dtoa_mutex		110104						
ANR	110160	Function	rv_alloc	519:0:13106:13322							
ANR	110161	FunctionDef	rv_alloc (int i)		110160	0					
ANR	110162	CompoundStatement		519:30:13136:13322	110160	0					
ANR	110163	IdentifierDeclStatement	"int j , k , * r ;"	520:1:13139:13151	110160	0	True				
ANR	110164	IdentifierDecl	j		110160	0					
ANR	110165	IdentifierDeclType	int		110160	0					
ANR	110166	Identifier	j		110160	1					
ANR	110167	IdentifierDecl	k		110160	1					
ANR	110168	IdentifierDeclType	int		110160	0					
ANR	110169	Identifier	k		110160	1					
ANR	110170	IdentifierDecl	* r		110160	2					
ANR	110171	IdentifierDeclType	int *		110160	0					
ANR	110172	Identifier	r		110160	1					
ANR	110173	ExpressionStatement	j = sizeof ( ULong )	522:1:13155:13172	110160	1	True				
ANR	110174	AssignmentExpression	j = sizeof ( ULong )		110160	0		=			
ANR	110175	Identifier	j		110160	0					
ANR	110176	SizeofExpression	sizeof ( ULong )		110160	1					
ANR	110177	Sizeof	sizeof		110160	0					
ANR	110178	SizeofOperand	ULong		110160	1					
ANR	110179	ForStatement	for ( k = 0 ; sizeof ( Bigint ) - sizeof ( ULong ) - sizeof ( int ) + j <= i ; j <<= 1 )		110160	2					
ANR	110180	ForInit	k = 0 ;	523:5:13179:13184	110160	0	True				
ANR	110181	AssignmentExpression	k = 0		110160	0		=			
ANR	110182	Identifier	k		110160	0					
ANR	110183	PrimaryExpression	0		110160	1					
ANR	110184	Condition	sizeof ( Bigint ) - sizeof ( ULong ) - sizeof ( int ) + j <= i	524:3:13189:13241	110160	1	True				
ANR	110185	RelationalExpression	sizeof ( Bigint ) - sizeof ( ULong ) - sizeof ( int ) + j <= i		110160	0		<=			
ANR	110186	AdditiveExpression	sizeof ( Bigint ) - sizeof ( ULong ) - sizeof ( int ) + j		110160	0		-			
ANR	110187	SizeofExpression	sizeof ( Bigint )		110160	0					
ANR	110188	Sizeof	sizeof		110160	0					
ANR	110189	SizeofOperand	Bigint		110160	1					
ANR	110190	AdditiveExpression	sizeof ( ULong ) - sizeof ( int ) + j		110160	1		-			
ANR	110191	SizeofExpression	sizeof ( ULong )		110160	0					
ANR	110192	Sizeof	sizeof		110160	0					
ANR	110193	SizeofOperand	ULong		110160	1					
ANR	110194	AdditiveExpression	sizeof ( int ) + j		110160	1		+			
ANR	110195	SizeofExpression	sizeof ( int )		110160	0					
ANR	110196	Sizeof	sizeof		110160	0					
ANR	110197	SizeofOperand	int		110160	1					
ANR	110198	Identifier	j		110160	1					
ANR	110199	Identifier	i		110160	1					
ANR	110200	AssignmentExpression	j <<= 1	525:3:13247:13253	110160	2	True	<<=			
ANR	110201	Identifier	j		110160	0					
ANR	110202	PrimaryExpression	1		110160	1					
ANR	110203	CompoundStatement		7:12:119:119	110160	3					
ANR	110204	ExpressionStatement	k ++	526:2:13260:13263	110160	0	True				
ANR	110205	PostIncDecOperationExpression	k ++		110160	0					
ANR	110206	Identifier	k		110160	0					
ANR	110207	IncDec	++		110160	1					
ANR	110208	ExpressionStatement	r = ( int * ) Balloc ( k )	528:1:13269:13288	110160	3	True				
ANR	110209	AssignmentExpression	r = ( int * ) Balloc ( k )		110160	0		=			
ANR	110210	Identifier	r		110160	0					
ANR	110211	CastExpression	( int * ) Balloc ( k )		110160	1					
ANR	110212	CastTarget	int *		110160	0					
ANR	110213	CallExpression	Balloc ( k )		110160	1					
ANR	110214	Callee	Balloc		110160	0					
ANR	110215	Identifier	Balloc		110160	0					
ANR	110216	ArgumentList	k		110160	1					
ANR	110217	Argument	k		110160	0					
ANR	110218	Identifier	k		110160	0					
ANR	110219	ExpressionStatement	* r = k	529:1:13291:13297	110160	4	True				
ANR	110220	AssignmentExpression	* r = k		110160	0		=			
ANR	110221	UnaryOperationExpression	* r		110160	0					
ANR	110222	UnaryOperator	*		110160	0					
ANR	110223	Identifier	r		110160	1					
ANR	110224	Identifier	k		110160	1					
ANR	110225	ReturnStatement	return ( char * ) ( r + 1 ) ;	530:1:13300:13320	110160	5	True				
ANR	110226	CastExpression	( char * ) ( r + 1 )		110160	0					
ANR	110227	CastTarget	char *		110160	0					
ANR	110228	AdditiveExpression	r + 1		110160	1		+			
ANR	110229	Identifier	r		110160	0					
ANR	110230	PrimaryExpression	1		110160	1					
ANR	110231	ReturnType	static char *		110160	1					
ANR	110232	Identifier	rv_alloc		110160	2					
ANR	110233	ParameterList	int i		110160	3					
ANR	110234	Parameter	int i	519:23:13129:13133	110160	0	True				
ANR	110235	ParameterType	int		110160	0					
ANR	110236	Identifier	i		110160	1					
ANR	110237	CFGEntryNode	ENTRY		110160		True				
ANR	110238	CFGExitNode	EXIT		110160		True				
ANR	110239	Symbol	r		110160						
ANR	110240	Symbol	i		110160						
ANR	110241	Symbol	j		110160						
ANR	110242	Symbol	Balloc		110160						
ANR	110243	Symbol	k		110160						
ANR	110244	Symbol	* r		110160						
ANR	110245	Function	nrv_alloc	534:0:13326:13494							
ANR	110246	FunctionDef	"nrv_alloc (char * s , char * * rve , int n)"		110245	0					
ANR	110247	CompoundStatement		535:0:13378:13494	110245	0					
ANR	110248	IdentifierDeclStatement	"char * rv , * t ;"	536:1:13381:13393	110245	0	True				
ANR	110249	IdentifierDecl	* rv		110245	0					
ANR	110250	IdentifierDeclType	char *		110245	0					
ANR	110251	Identifier	rv		110245	1					
ANR	110252	IdentifierDecl	* t		110245	1					
ANR	110253	IdentifierDeclType	char *		110245	0					
ANR	110254	Identifier	t		110245	1					
ANR	110255	ExpressionStatement	t = rv = rv_alloc ( n )	538:1:13397:13417	110245	1	True				
ANR	110256	AssignmentExpression	t = rv = rv_alloc ( n )		110245	0		=			
ANR	110257	Identifier	t		110245	0					
ANR	110258	AssignmentExpression	rv = rv_alloc ( n )		110245	1		=			
ANR	110259	Identifier	rv		110245	0					
ANR	110260	CallExpression	rv_alloc ( n )		110245	1					
ANR	110261	Callee	rv_alloc		110245	0					
ANR	110262	Identifier	rv_alloc		110245	0					
ANR	110263	ArgumentList	n		110245	1					
ANR	110264	Argument	n		110245	0					
ANR	110265	Identifier	n		110245	0					
ANR	110266	WhileStatement	while ( ( * t = * s ++ ) != 0 )		110245	2					
ANR	110267	Condition	( * t = * s ++ ) != 0	539:7:13426:13440	110245	0	True				
ANR	110268	EqualityExpression	( * t = * s ++ ) != 0		110245	0		!=			
ANR	110269	AssignmentExpression	* t = * s ++		110245	0		=			
ANR	110270	UnaryOperationExpression	* t		110245	0					
ANR	110271	UnaryOperator	*		110245	0					
ANR	110272	Identifier	t		110245	1					
ANR	110273	UnaryOperationExpression	* s ++		110245	1					
ANR	110274	UnaryOperator	*		110245	0					
ANR	110275	PostIncDecOperationExpression	s ++		110245	1					
ANR	110276	Identifier	s		110245	0					
ANR	110277	IncDec	++		110245	1					
ANR	110278	PrimaryExpression	0		110245	1					
ANR	110279	CompoundStatement		5:24:64:64	110245	1					
ANR	110280	ExpressionStatement	t ++	540:2:13447:13450	110245	0	True				
ANR	110281	PostIncDecOperationExpression	t ++		110245	0					
ANR	110282	Identifier	t		110245	0					
ANR	110283	IncDec	++		110245	1					
ANR	110284	IfStatement	if ( rve )		110245	3					
ANR	110285	Condition	rve	542:5:13460:13462	110245	0	True				
ANR	110286	Identifier	rve		110245	0					
ANR	110287	CompoundStatement		8:10:86:86	110245	1					
ANR	110288	ExpressionStatement	* rve = t	543:2:13469:13477	110245	0	True				
ANR	110289	AssignmentExpression	* rve = t		110245	0		=			
ANR	110290	UnaryOperationExpression	* rve		110245	0					
ANR	110291	UnaryOperator	*		110245	0					
ANR	110292	Identifier	rve		110245	1					
ANR	110293	Identifier	t		110245	1					
ANR	110294	ReturnStatement	return rv ;	545:1:13483:13492	110245	4	True				
ANR	110295	Identifier	rv		110245	0					
ANR	110296	ReturnType	static char *		110245	1					
ANR	110297	Identifier	nrv_alloc		110245	2					
ANR	110298	ParameterList	"char * s , char * * rve , int n"		110245	3					
ANR	110299	Parameter	char * s	534:24:13350:13356	110245	0	True				
ANR	110300	ParameterType	char *		110245	0					
ANR	110301	Identifier	s		110245	1					
ANR	110302	Parameter	char * * rve	534:33:13359:13368	110245	1	True				
ANR	110303	ParameterType	char * *		110245	0					
ANR	110304	Identifier	rve		110245	1					
ANR	110305	Parameter	int n	534:45:13371:13375	110245	2	True				
ANR	110306	ParameterType	int		110245	0					
ANR	110307	Identifier	n		110245	1					
ANR	110308	CFGEntryNode	ENTRY		110245		True				
ANR	110309	CFGExitNode	EXIT		110245		True				
ANR	110310	Symbol	rve		110245						
ANR	110311	Symbol	* s ++		110245						
ANR	110312	Symbol	rv_alloc		110245						
ANR	110313	Symbol	s		110245						
ANR	110314	Symbol	t		110245						
ANR	110315	Symbol	rv		110245						
ANR	110316	Symbol	* rve		110245						
ANR	110317	Symbol	n		110245						
ANR	110318	Symbol	* t		110245						
ANR	110319	Function	multadd	548:0:13497:14091							
ANR	110320	FunctionDef	"multadd (Bigint * b , int m , int a)"		110319	0					
ANR	110321	CompoundStatement		549:0:13576:14091	110319	0					
ANR	110322	IdentifierDeclStatement	"int i , wds ;"	550:1:13579:13589	110319	0	True				
ANR	110323	IdentifierDecl	i		110319	0					
ANR	110324	IdentifierDeclType	int		110319	0					
ANR	110325	Identifier	i		110319	1					
ANR	110326	IdentifierDecl	wds		110319	1					
ANR	110327	IdentifierDeclType	int		110319	0					
ANR	110328	Identifier	wds		110319	1					
ANR	110329	IdentifierDeclStatement	"ULong * x , y ;"	551:1:13592:13603	110319	1	True				
ANR	110330	IdentifierDecl	* x		110319	0					
ANR	110331	IdentifierDeclType	ULong *		110319	0					
ANR	110332	Identifier	x		110319	1					
ANR	110333	IdentifierDecl	y		110319	1					
ANR	110334	IdentifierDeclType	ULong		110319	0					
ANR	110335	Identifier	y		110319	1					
ANR	110336	IdentifierDeclStatement	"ULong xi , z ;"	553:1:13621:13632	110319	2	True				
ANR	110337	IdentifierDecl	xi		110319	0					
ANR	110338	IdentifierDeclType	ULong		110319	0					
ANR	110339	Identifier	xi		110319	1					
ANR	110340	IdentifierDecl	z		110319	1					
ANR	110341	IdentifierDeclType	ULong		110319	0					
ANR	110342	Identifier	z		110319	1					
ANR	110343	IdentifierDeclStatement	Bigint * b1 ;	555:1:13642:13652	110319	3	True				
ANR	110344	IdentifierDecl	* b1		110319	0					
ANR	110345	IdentifierDeclType	Bigint *		110319	0					
ANR	110346	Identifier	b1		110319	1					
ANR	110347	ExpressionStatement	wds = b -> wds	557:1:13656:13668	110319	4	True				
ANR	110348	AssignmentExpression	wds = b -> wds		110319	0		=			
ANR	110349	Identifier	wds		110319	0					
ANR	110350	PtrMemberAccess	b -> wds		110319	1					
ANR	110351	Identifier	b		110319	0					
ANR	110352	Identifier	wds		110319	1					
ANR	110353	ExpressionStatement	x = b -> x	558:1:13671:13679	110319	5	True				
ANR	110354	AssignmentExpression	x = b -> x		110319	0		=			
ANR	110355	Identifier	x		110319	0					
ANR	110356	PtrMemberAccess	b -> x		110319	1					
ANR	110357	Identifier	b		110319	0					
ANR	110358	Identifier	x		110319	1					
ANR	110359	ExpressionStatement	i = 0	559:1:13682:13687	110319	6	True				
ANR	110360	AssignmentExpression	i = 0		110319	0		=			
ANR	110361	Identifier	i		110319	0					
ANR	110362	PrimaryExpression	0		110319	1					
ANR	110363	DoStatement	do		110319	7					
ANR	110364	CompoundStatement		12:4:116:116	110319	0					
ANR	110365	ExpressionStatement	xi = * x	562:2:13712:13719	110319	0	True				
ANR	110366	AssignmentExpression	xi = * x		110319	0		=			
ANR	110367	Identifier	xi		110319	0					
ANR	110368	UnaryOperationExpression	* x		110319	1					
ANR	110369	UnaryOperator	*		110319	0					
ANR	110370	Identifier	x		110319	1					
ANR	110371	ExpressionStatement	y = ( xi & 0xffff ) * m + a	563:2:13723:13748	110319	1	True				
ANR	110372	AssignmentExpression	y = ( xi & 0xffff ) * m + a		110319	0		=			
ANR	110373	Identifier	y		110319	0					
ANR	110374	AdditiveExpression	( xi & 0xffff ) * m + a		110319	1		+			
ANR	110375	MultiplicativeExpression	( xi & 0xffff ) * m		110319	0		*			
ANR	110376	BitAndExpression	xi & 0xffff		110319	0		&			
ANR	110377	Identifier	xi		110319	0					
ANR	110378	PrimaryExpression	0xffff		110319	1					
ANR	110379	Identifier	m		110319	1					
ANR	110380	Identifier	a		110319	1					
ANR	110381	ExpressionStatement	z = ( xi >> 16 ) * m + ( y >> 16 )	564:2:13752:13782	110319	2	True				
ANR	110382	AssignmentExpression	z = ( xi >> 16 ) * m + ( y >> 16 )		110319	0		=			
ANR	110383	Identifier	z		110319	0					
ANR	110384	AdditiveExpression	( xi >> 16 ) * m + ( y >> 16 )		110319	1		+			
ANR	110385	MultiplicativeExpression	( xi >> 16 ) * m		110319	0		*			
ANR	110386	ShiftExpression	xi >> 16		110319	0		>>			
ANR	110387	Identifier	xi		110319	0					
ANR	110388	PrimaryExpression	16		110319	1					
ANR	110389	Identifier	m		110319	1					
ANR	110390	ShiftExpression	y >> 16		110319	1		>>			
ANR	110391	Identifier	y		110319	0					
ANR	110392	PrimaryExpression	16		110319	1					
ANR	110393	ExpressionStatement	a = ( int ) ( z >> 16 )	565:2:13786:13804	110319	3	True				
ANR	110394	AssignmentExpression	a = ( int ) ( z >> 16 )		110319	0		=			
ANR	110395	Identifier	a		110319	0					
ANR	110396	CastExpression	( int ) ( z >> 16 )		110319	1					
ANR	110397	CastTarget	int		110319	0					
ANR	110398	ShiftExpression	z >> 16		110319	1		>>			
ANR	110399	Identifier	z		110319	0					
ANR	110400	PrimaryExpression	16		110319	1					
ANR	110401	ExpressionStatement	* x ++ = ( z << 16 ) + ( y & 0xffff )	566:2:13808:13839	110319	4	True				
ANR	110402	AssignmentExpression	* x ++ = ( z << 16 ) + ( y & 0xffff )		110319	0		=			
ANR	110403	UnaryOperationExpression	* x ++		110319	0					
ANR	110404	UnaryOperator	*		110319	0					
ANR	110405	PostIncDecOperationExpression	x ++		110319	1					
ANR	110406	Identifier	x		110319	0					
ANR	110407	IncDec	++		110319	1					
ANR	110408	AdditiveExpression	( z << 16 ) + ( y & 0xffff )		110319	1		+			
ANR	110409	ShiftExpression	z << 16		110319	0		<<			
ANR	110410	Identifier	z		110319	0					
ANR	110411	PrimaryExpression	16		110319	1					
ANR	110412	BitAndExpression	y & 0xffff		110319	1		&			
ANR	110413	Identifier	y		110319	0					
ANR	110414	PrimaryExpression	0xffff		110319	1					
ANR	110415	Condition	++ i < wds	573:7:13925:13933	110319	1	True				
ANR	110416	RelationalExpression	++ i < wds		110319	0		<			
ANR	110417	UnaryExpression	++ i		110319	0					
ANR	110418	IncDec	++		110319	0					
ANR	110419	Identifier	i		110319	1					
ANR	110420	Identifier	wds		110319	1					
ANR	110421	IfStatement	if ( a )		110319	8					
ANR	110422	Condition	a	574:5:13942:13942	110319	0	True				
ANR	110423	Identifier	a		110319	0					
ANR	110424	CompoundStatement		26:8:368:368	110319	1					
ANR	110425	IfStatement	if ( wds >= b -> maxwds )		110319	0					
ANR	110426	Condition	wds >= b -> maxwds	575:6:13953:13968	110319	0	True				
ANR	110427	RelationalExpression	wds >= b -> maxwds		110319	0		>=			
ANR	110428	Identifier	wds		110319	0					
ANR	110429	PtrMemberAccess	b -> maxwds		110319	1					
ANR	110430	Identifier	b		110319	0					
ANR	110431	Identifier	maxwds		110319	1					
ANR	110432	CompoundStatement		27:24:394:394	110319	1					
ANR	110433	ExpressionStatement	b1 = Balloc ( b -> k + 1 )	576:3:13976:13995	110319	0	True				
ANR	110434	AssignmentExpression	b1 = Balloc ( b -> k + 1 )		110319	0		=			
ANR	110435	Identifier	b1		110319	0					
ANR	110436	CallExpression	Balloc ( b -> k + 1 )		110319	1					
ANR	110437	Callee	Balloc		110319	0					
ANR	110438	Identifier	Balloc		110319	0					
ANR	110439	ArgumentList	b -> k + 1		110319	1					
ANR	110440	Argument	b -> k + 1		110319	0					
ANR	110441	AdditiveExpression	b -> k + 1		110319	0		+			
ANR	110442	PtrMemberAccess	b -> k		110319	0					
ANR	110443	Identifier	b		110319	0					
ANR	110444	Identifier	k		110319	1					
ANR	110445	PrimaryExpression	1		110319	1					
ANR	110446	ExpressionStatement	"Bcopy ( b1 , b )"	577:3:14000:14012	110319	1	True				
ANR	110447	CallExpression	"Bcopy ( b1 , b )"		110319	0					
ANR	110448	Callee	Bcopy		110319	0					
ANR	110449	Identifier	Bcopy		110319	0					
ANR	110450	ArgumentList	b1		110319	1					
ANR	110451	Argument	b1		110319	0					
ANR	110452	Identifier	b1		110319	0					
ANR	110453	Argument	b		110319	1					
ANR	110454	Identifier	b		110319	0					
ANR	110455	ExpressionStatement	Bfree ( b )	578:3:14017:14025	110319	2	True				
ANR	110456	CallExpression	Bfree ( b )		110319	0					
ANR	110457	Callee	Bfree		110319	0					
ANR	110458	Identifier	Bfree		110319	0					
ANR	110459	ArgumentList	b		110319	1					
ANR	110460	Argument	b		110319	0					
ANR	110461	Identifier	b		110319	0					
ANR	110462	ExpressionStatement	b = b1	579:3:14030:14036	110319	3	True				
ANR	110463	AssignmentExpression	b = b1		110319	0		=			
ANR	110464	Identifier	b		110319	0					
ANR	110465	Identifier	b1		110319	1					
ANR	110466	ExpressionStatement	b -> x [ wds ++ ] = a	581:2:14044:14059	110319	1	True				
ANR	110467	AssignmentExpression	b -> x [ wds ++ ] = a		110319	0		=			
ANR	110468	ArrayIndexing	b -> x [ wds ++ ]		110319	0					
ANR	110469	PtrMemberAccess	b -> x		110319	0					
ANR	110470	Identifier	b		110319	0					
ANR	110471	Identifier	x		110319	1					
ANR	110472	PostIncDecOperationExpression	wds ++		110319	1					
ANR	110473	Identifier	wds		110319	0					
ANR	110474	IncDec	++		110319	1					
ANR	110475	Identifier	a		110319	1					
ANR	110476	ExpressionStatement	b -> wds = wds	582:2:14063:14075	110319	2	True				
ANR	110477	AssignmentExpression	b -> wds = wds		110319	0		=			
ANR	110478	PtrMemberAccess	b -> wds		110319	0					
ANR	110479	Identifier	b		110319	0					
ANR	110480	Identifier	wds		110319	1					
ANR	110481	Identifier	wds		110319	1					
ANR	110482	ReturnStatement	return b ;	584:1:14081:14089	110319	9	True				
ANR	110483	Identifier	b		110319	0					
ANR	110484	ReturnType	static Bigint *		110319	1					
ANR	110485	Identifier	multadd		110319	2					
ANR	110486	ParameterList	"Bigint * b , int m , int a"		110319	3					
ANR	110487	Parameter	Bigint * b	548:24:13521:13529	110319	0	True				
ANR	110488	ParameterType	Bigint *		110319	0					
ANR	110489	Identifier	b		110319	1					
ANR	110490	Parameter	int m	548:35:13532:13536	110319	1	True				
ANR	110491	ParameterType	int		110319	0					
ANR	110492	Identifier	m		110319	1					
ANR	110493	Parameter	int a	548:42:13539:13543	110319	2	True				
ANR	110494	ParameterType	int		110319	0					
ANR	110495	Identifier	a		110319	1					
ANR	110496	CFGEntryNode	ENTRY		110319		True				
ANR	110497	CFGExitNode	EXIT		110319		True				
ANR	110498	Symbol	a		110319						
ANR	110499	Symbol	b		110319						
ANR	110500	Symbol	* x		110319						
ANR	110501	Symbol	wds		110319						
ANR	110502	Symbol	i		110319						
ANR	110503	Symbol	b -> k		110319						
ANR	110504	Symbol	* * b		110319						
ANR	110505	Symbol	b -> wds		110319						
ANR	110506	Symbol	* b		110319						
ANR	110507	Symbol	m		110319						
ANR	110508	Symbol	b1		110319						
ANR	110509	Symbol	xi		110319						
ANR	110510	Symbol	* b -> x		110319						
ANR	110511	Symbol	b -> maxwds		110319						
ANR	110512	Symbol	b -> x		110319						
ANR	110513	Symbol	x		110319						
ANR	110514	Symbol	y		110319						
ANR	110515	Symbol	z		110319						
ANR	110516	Symbol	Balloc		110319						
ANR	110517	Symbol	* x ++		110319						
ANR	110518	Function	hi0bits	587:0:14094:14430							
ANR	110519	FunctionDef	hi0bits (ULong x)		110518	0					
ANR	110520	CompoundStatement		588:0:14122:14430	110518	0					
ANR	110521	IdentifierDeclStatement	int k = 0 ;	589:1:14125:14134	110518	0	True				
ANR	110522	IdentifierDecl	k = 0		110518	0					
ANR	110523	IdentifierDeclType	int		110518	0					
ANR	110524	Identifier	k		110518	1					
ANR	110525	AssignmentExpression	k = 0		110518	2		=			
ANR	110526	Identifier	k		110518	0					
ANR	110527	PrimaryExpression	0		110518	1					
ANR	110528	IfStatement	if ( ! ( x & 0xffff0000 ) )		110518	1					
ANR	110529	Condition	! ( x & 0xffff0000 )	591:5:14142:14158	110518	0	True				
ANR	110530	UnaryOperationExpression	! ( x & 0xffff0000 )		110518	0					
ANR	110531	UnaryOperator	!		110518	0					
ANR	110532	BitAndExpression	x & 0xffff0000		110518	1		&			
ANR	110533	Identifier	x		110518	0					
ANR	110534	PrimaryExpression	0xffff0000		110518	1					
ANR	110535	CompoundStatement		4:24:38:38	110518	1					
ANR	110536	ExpressionStatement	k = 16	592:2:14165:14171	110518	0	True				
ANR	110537	AssignmentExpression	k = 16		110518	0		=			
ANR	110538	Identifier	k		110518	0					
ANR	110539	PrimaryExpression	16		110518	1					
ANR	110540	ExpressionStatement	x <<= 16	593:2:14175:14183	110518	1	True				
ANR	110541	AssignmentExpression	x <<= 16		110518	0		<<=			
ANR	110542	Identifier	x		110518	0					
ANR	110543	PrimaryExpression	16		110518	1					
ANR	110544	IfStatement	if ( ! ( x & 0xff000000 ) )		110518	2					
ANR	110545	Condition	! ( x & 0xff000000 )	595:5:14193:14209	110518	0	True				
ANR	110546	UnaryOperationExpression	! ( x & 0xff000000 )		110518	0					
ANR	110547	UnaryOperator	!		110518	0					
ANR	110548	BitAndExpression	x & 0xff000000		110518	1		&			
ANR	110549	Identifier	x		110518	0					
ANR	110550	PrimaryExpression	0xff000000		110518	1					
ANR	110551	CompoundStatement		8:24:89:89	110518	1					
ANR	110552	ExpressionStatement	k += 8	596:2:14216:14222	110518	0	True				
ANR	110553	AssignmentExpression	k += 8		110518	0		+=			
ANR	110554	Identifier	k		110518	0					
ANR	110555	PrimaryExpression	8		110518	1					
ANR	110556	ExpressionStatement	x <<= 8	597:2:14226:14233	110518	1	True				
ANR	110557	AssignmentExpression	x <<= 8		110518	0		<<=			
ANR	110558	Identifier	x		110518	0					
ANR	110559	PrimaryExpression	8		110518	1					
ANR	110560	IfStatement	if ( ! ( x & 0xf0000000 ) )		110518	3					
ANR	110561	Condition	! ( x & 0xf0000000 )	599:5:14243:14259	110518	0	True				
ANR	110562	UnaryOperationExpression	! ( x & 0xf0000000 )		110518	0					
ANR	110563	UnaryOperator	!		110518	0					
ANR	110564	BitAndExpression	x & 0xf0000000		110518	1		&			
ANR	110565	Identifier	x		110518	0					
ANR	110566	PrimaryExpression	0xf0000000		110518	1					
ANR	110567	CompoundStatement		12:24:139:139	110518	1					
ANR	110568	ExpressionStatement	k += 4	600:2:14266:14272	110518	0	True				
ANR	110569	AssignmentExpression	k += 4		110518	0		+=			
ANR	110570	Identifier	k		110518	0					
ANR	110571	PrimaryExpression	4		110518	1					
ANR	110572	ExpressionStatement	x <<= 4	601:2:14276:14283	110518	1	True				
ANR	110573	AssignmentExpression	x <<= 4		110518	0		<<=			
ANR	110574	Identifier	x		110518	0					
ANR	110575	PrimaryExpression	4		110518	1					
ANR	110576	IfStatement	if ( ! ( x & 0xc0000000 ) )		110518	4					
ANR	110577	Condition	! ( x & 0xc0000000 )	603:5:14293:14309	110518	0	True				
ANR	110578	UnaryOperationExpression	! ( x & 0xc0000000 )		110518	0					
ANR	110579	UnaryOperator	!		110518	0					
ANR	110580	BitAndExpression	x & 0xc0000000		110518	1		&			
ANR	110581	Identifier	x		110518	0					
ANR	110582	PrimaryExpression	0xc0000000		110518	1					
ANR	110583	CompoundStatement		16:24:189:189	110518	1					
ANR	110584	ExpressionStatement	k += 2	604:2:14316:14322	110518	0	True				
ANR	110585	AssignmentExpression	k += 2		110518	0		+=			
ANR	110586	Identifier	k		110518	0					
ANR	110587	PrimaryExpression	2		110518	1					
ANR	110588	ExpressionStatement	x <<= 2	605:2:14326:14333	110518	1	True				
ANR	110589	AssignmentExpression	x <<= 2		110518	0		<<=			
ANR	110590	Identifier	x		110518	0					
ANR	110591	PrimaryExpression	2		110518	1					
ANR	110592	IfStatement	if ( ! ( x & 0x80000000 ) )		110518	5					
ANR	110593	Condition	! ( x & 0x80000000 )	607:5:14343:14359	110518	0	True				
ANR	110594	UnaryOperationExpression	! ( x & 0x80000000 )		110518	0					
ANR	110595	UnaryOperator	!		110518	0					
ANR	110596	BitAndExpression	x & 0x80000000		110518	1		&			
ANR	110597	Identifier	x		110518	0					
ANR	110598	PrimaryExpression	0x80000000		110518	1					
ANR	110599	CompoundStatement		20:24:239:239	110518	1					
ANR	110600	ExpressionStatement	k ++	608:2:14366:14369	110518	0	True				
ANR	110601	PostIncDecOperationExpression	k ++		110518	0					
ANR	110602	Identifier	k		110518	0					
ANR	110603	IncDec	++		110518	1					
ANR	110604	IfStatement	if ( ! ( x & 0x40000000 ) )		110518	1					
ANR	110605	Condition	! ( x & 0x40000000 )	609:6:14377:14393	110518	0	True				
ANR	110606	UnaryOperationExpression	! ( x & 0x40000000 )		110518	0					
ANR	110607	UnaryOperator	!		110518	0					
ANR	110608	BitAndExpression	x & 0x40000000		110518	1		&			
ANR	110609	Identifier	x		110518	0					
ANR	110610	PrimaryExpression	0x40000000		110518	1					
ANR	110611	CompoundStatement		22:25:273:273	110518	1					
ANR	110612	ReturnStatement	return 32 ;	610:3:14401:14410	110518	0	True				
ANR	110613	PrimaryExpression	32		110518	0					
ANR	110614	ReturnStatement	return k ;	613:1:14420:14428	110518	6	True				
ANR	110615	Identifier	k		110518	0					
ANR	110616	ReturnType	static int		110518	1					
ANR	110617	Identifier	hi0bits		110518	2					
ANR	110618	ParameterList	ULong x		110518	3					
ANR	110619	Parameter	ULong x	587:19:14113:14119	110518	0	True				
ANR	110620	ParameterType	ULong		110518	0					
ANR	110621	Identifier	x		110518	1					
ANR	110622	CFGEntryNode	ENTRY		110518		True				
ANR	110623	CFGExitNode	EXIT		110518		True				
ANR	110624	Symbol	x		110518						
ANR	110625	Symbol	k		110518						
ANR	110626	Function	lo0bits	616:0:14433:14891							
ANR	110627	FunctionDef	lo0bits (ULong * y)		110626	0					
ANR	110628	CompoundStatement		617:0:14462:14891	110626	0					
ANR	110629	IdentifierDeclStatement	int k ;	618:1:14465:14470	110626	0	True				
ANR	110630	IdentifierDecl	k		110626	0					
ANR	110631	IdentifierDeclType	int		110626	0					
ANR	110632	Identifier	k		110626	1					
ANR	110633	IdentifierDeclStatement	ULong x = * y ;	619:1:14473:14485	110626	1	True				
ANR	110634	IdentifierDecl	x = * y		110626	0					
ANR	110635	IdentifierDeclType	ULong		110626	0					
ANR	110636	Identifier	x		110626	1					
ANR	110637	AssignmentExpression	x = * y		110626	2		=			
ANR	110638	Identifier	x		110626	0					
ANR	110639	UnaryOperationExpression	* y		110626	1					
ANR	110640	UnaryOperator	*		110626	0					
ANR	110641	Identifier	y		110626	1					
ANR	110642	IfStatement	if ( x & 7 )		110626	2					
ANR	110643	Condition	x & 7	621:5:14493:14497	110626	0	True				
ANR	110644	BitAndExpression	x & 7		110626	0		&			
ANR	110645	Identifier	x		110626	0					
ANR	110646	PrimaryExpression	7		110626	1					
ANR	110647	CompoundStatement		5:12:37:37	110626	1					
ANR	110648	IfStatement	if ( x & 1 )		110626	0					
ANR	110649	Condition	x & 1	622:6:14508:14512	110626	0	True				
ANR	110650	BitAndExpression	x & 1		110626	0		&			
ANR	110651	Identifier	x		110626	0					
ANR	110652	PrimaryExpression	1		110626	1					
ANR	110653	CompoundStatement		6:13:52:52	110626	1					
ANR	110654	ReturnStatement	return 0 ;	623:3:14520:14528	110626	0	True				
ANR	110655	PrimaryExpression	0		110626	0					
ANR	110656	IfStatement	if ( x & 2 )		110626	1					
ANR	110657	Condition	x & 2	625:6:14540:14544	110626	0	True				
ANR	110658	BitAndExpression	x & 2		110626	0		&			
ANR	110659	Identifier	x		110626	0					
ANR	110660	PrimaryExpression	2		110626	1					
ANR	110661	CompoundStatement		9:13:84:84	110626	1					
ANR	110662	ExpressionStatement	* y = x >> 1	626:3:14552:14563	110626	0	True				
ANR	110663	AssignmentExpression	* y = x >> 1		110626	0		=			
ANR	110664	UnaryOperationExpression	* y		110626	0					
ANR	110665	UnaryOperator	*		110626	0					
ANR	110666	Identifier	y		110626	1					
ANR	110667	ShiftExpression	x >> 1		110626	1		>>			
ANR	110668	Identifier	x		110626	0					
ANR	110669	PrimaryExpression	1		110626	1					
ANR	110670	ReturnStatement	return 1 ;	627:3:14568:14576	110626	1	True				
ANR	110671	PrimaryExpression	1		110626	0					
ANR	110672	ExpressionStatement	* y = x >> 2	629:2:14584:14595	110626	2	True				
ANR	110673	AssignmentExpression	* y = x >> 2		110626	0		=			
ANR	110674	UnaryOperationExpression	* y		110626	0					
ANR	110675	UnaryOperator	*		110626	0					
ANR	110676	Identifier	y		110626	1					
ANR	110677	ShiftExpression	x >> 2		110626	1		>>			
ANR	110678	Identifier	x		110626	0					
ANR	110679	PrimaryExpression	2		110626	1					
ANR	110680	ReturnStatement	return 2 ;	630:2:14599:14607	110626	3	True				
ANR	110681	PrimaryExpression	2		110626	0					
ANR	110682	ExpressionStatement	k = 0	632:1:14613:14618	110626	3	True				
ANR	110683	AssignmentExpression	k = 0		110626	0		=			
ANR	110684	Identifier	k		110626	0					
ANR	110685	PrimaryExpression	0		110626	1					
ANR	110686	IfStatement	if ( ! ( x & 0xffff ) )		110626	4					
ANR	110687	Condition	! ( x & 0xffff )	633:5:14625:14637	110626	0	True				
ANR	110688	UnaryOperationExpression	! ( x & 0xffff )		110626	0					
ANR	110689	UnaryOperator	!		110626	0					
ANR	110690	BitAndExpression	x & 0xffff		110626	1		&			
ANR	110691	Identifier	x		110626	0					
ANR	110692	PrimaryExpression	0xffff		110626	1					
ANR	110693	CompoundStatement		17:20:177:177	110626	1					
ANR	110694	ExpressionStatement	k = 16	634:2:14644:14650	110626	0	True				
ANR	110695	AssignmentExpression	k = 16		110626	0		=			
ANR	110696	Identifier	k		110626	0					
ANR	110697	PrimaryExpression	16		110626	1					
ANR	110698	ExpressionStatement	x >>= 16	635:2:14654:14662	110626	1	True				
ANR	110699	AssignmentExpression	x >>= 16		110626	0		>>=			
ANR	110700	Identifier	x		110626	0					
ANR	110701	PrimaryExpression	16		110626	1					
ANR	110702	IfStatement	if ( ! ( x & 0xff ) )		110626	5					
ANR	110703	Condition	! ( x & 0xff )	637:5:14672:14682	110626	0	True				
ANR	110704	UnaryOperationExpression	! ( x & 0xff )		110626	0					
ANR	110705	UnaryOperator	!		110626	0					
ANR	110706	BitAndExpression	x & 0xff		110626	1		&			
ANR	110707	Identifier	x		110626	0					
ANR	110708	PrimaryExpression	0xff		110626	1					
ANR	110709	CompoundStatement		21:18:222:222	110626	1					
ANR	110710	ExpressionStatement	k += 8	638:2:14689:14695	110626	0	True				
ANR	110711	AssignmentExpression	k += 8		110626	0		+=			
ANR	110712	Identifier	k		110626	0					
ANR	110713	PrimaryExpression	8		110626	1					
ANR	110714	ExpressionStatement	x >>= 8	639:2:14699:14706	110626	1	True				
ANR	110715	AssignmentExpression	x >>= 8		110626	0		>>=			
ANR	110716	Identifier	x		110626	0					
ANR	110717	PrimaryExpression	8		110626	1					
ANR	110718	IfStatement	if ( ! ( x & 0xf ) )		110626	6					
ANR	110719	Condition	! ( x & 0xf )	641:5:14716:14725	110626	0	True				
ANR	110720	UnaryOperationExpression	! ( x & 0xf )		110626	0					
ANR	110721	UnaryOperator	!		110626	0					
ANR	110722	BitAndExpression	x & 0xf		110626	1		&			
ANR	110723	Identifier	x		110626	0					
ANR	110724	PrimaryExpression	0xf		110626	1					
ANR	110725	CompoundStatement		25:17:265:265	110626	1					
ANR	110726	ExpressionStatement	k += 4	642:2:14732:14738	110626	0	True				
ANR	110727	AssignmentExpression	k += 4		110626	0		+=			
ANR	110728	Identifier	k		110626	0					
ANR	110729	PrimaryExpression	4		110626	1					
ANR	110730	ExpressionStatement	x >>= 4	643:2:14742:14749	110626	1	True				
ANR	110731	AssignmentExpression	x >>= 4		110626	0		>>=			
ANR	110732	Identifier	x		110626	0					
ANR	110733	PrimaryExpression	4		110626	1					
ANR	110734	IfStatement	if ( ! ( x & 0x3 ) )		110626	7					
ANR	110735	Condition	! ( x & 0x3 )	645:5:14759:14768	110626	0	True				
ANR	110736	UnaryOperationExpression	! ( x & 0x3 )		110626	0					
ANR	110737	UnaryOperator	!		110626	0					
ANR	110738	BitAndExpression	x & 0x3		110626	1		&			
ANR	110739	Identifier	x		110626	0					
ANR	110740	PrimaryExpression	0x3		110626	1					
ANR	110741	CompoundStatement		29:17:308:308	110626	1					
ANR	110742	ExpressionStatement	k += 2	646:2:14775:14781	110626	0	True				
ANR	110743	AssignmentExpression	k += 2		110626	0		+=			
ANR	110744	Identifier	k		110626	0					
ANR	110745	PrimaryExpression	2		110626	1					
ANR	110746	ExpressionStatement	x >>= 2	647:2:14785:14792	110626	1	True				
ANR	110747	AssignmentExpression	x >>= 2		110626	0		>>=			
ANR	110748	Identifier	x		110626	0					
ANR	110749	PrimaryExpression	2		110626	1					
ANR	110750	IfStatement	if ( ! ( x & 1 ) )		110626	8					
ANR	110751	Condition	! ( x & 1 )	649:5:14802:14809	110626	0	True				
ANR	110752	UnaryOperationExpression	! ( x & 1 )		110626	0					
ANR	110753	UnaryOperator	!		110626	0					
ANR	110754	BitAndExpression	x & 1		110626	1		&			
ANR	110755	Identifier	x		110626	0					
ANR	110756	PrimaryExpression	1		110626	1					
ANR	110757	CompoundStatement		33:15:349:349	110626	1					
ANR	110758	ExpressionStatement	k ++	650:2:14816:14819	110626	0	True				
ANR	110759	PostIncDecOperationExpression	k ++		110626	0					
ANR	110760	Identifier	k		110626	0					
ANR	110761	IncDec	++		110626	1					
ANR	110762	ExpressionStatement	x >>= 1	651:2:14823:14830	110626	1	True				
ANR	110763	AssignmentExpression	x >>= 1		110626	0		>>=			
ANR	110764	Identifier	x		110626	0					
ANR	110765	PrimaryExpression	1		110626	1					
ANR	110766	IfStatement	if ( ! ( x & 1 ) )		110626	2					
ANR	110767	Condition	! ( x & 1 )	652:6:14838:14845	110626	0	True				
ANR	110768	UnaryOperationExpression	! ( x & 1 )		110626	0					
ANR	110769	UnaryOperator	!		110626	0					
ANR	110770	BitAndExpression	x & 1		110626	1		&			
ANR	110771	Identifier	x		110626	0					
ANR	110772	PrimaryExpression	1		110626	1					
ANR	110773	CompoundStatement		36:16:385:385	110626	1					
ANR	110774	ReturnStatement	return 32 ;	653:3:14853:14862	110626	0	True				
ANR	110775	PrimaryExpression	32		110626	0					
ANR	110776	ExpressionStatement	* y = x	656:1:14872:14878	110626	9	True				
ANR	110777	AssignmentExpression	* y = x		110626	0		=			
ANR	110778	UnaryOperationExpression	* y		110626	0					
ANR	110779	UnaryOperator	*		110626	0					
ANR	110780	Identifier	y		110626	1					
ANR	110781	Identifier	x		110626	1					
ANR	110782	ReturnStatement	return k ;	657:1:14881:14889	110626	10	True				
ANR	110783	Identifier	k		110626	0					
ANR	110784	ReturnType	static int		110626	1					
ANR	110785	Identifier	lo0bits		110626	2					
ANR	110786	ParameterList	ULong * y		110626	3					
ANR	110787	Parameter	ULong * y	616:19:14452:14459	110626	0	True				
ANR	110788	ParameterType	ULong *		110626	0					
ANR	110789	Identifier	y		110626	1					
ANR	110790	CFGEntryNode	ENTRY		110626		True				
ANR	110791	CFGExitNode	EXIT		110626		True				
ANR	110792	Symbol	* y		110626						
ANR	110793	Symbol	x		110626						
ANR	110794	Symbol	y		110626						
ANR	110795	Symbol	k		110626						
ANR	110796	Function	i2b	660:0:14894:14990							
ANR	110797	FunctionDef	i2b (int i)		110796	0					
ANR	110798	CompoundStatement		661:0:14921:14990	110796	0					
ANR	110799	IdentifierDeclStatement	Bigint * b ;	662:1:14924:14933	110796	0	True				
ANR	110800	IdentifierDecl	* b		110796	0					
ANR	110801	IdentifierDeclType	Bigint *		110796	0					
ANR	110802	Identifier	b		110796	1					
ANR	110803	ExpressionStatement	b = Balloc ( 1 )	664:1:14937:14950	110796	1	True				
ANR	110804	AssignmentExpression	b = Balloc ( 1 )		110796	0		=			
ANR	110805	Identifier	b		110796	0					
ANR	110806	CallExpression	Balloc ( 1 )		110796	1					
ANR	110807	Callee	Balloc		110796	0					
ANR	110808	Identifier	Balloc		110796	0					
ANR	110809	ArgumentList	1		110796	1					
ANR	110810	Argument	1		110796	0					
ANR	110811	PrimaryExpression	1		110796	0					
ANR	110812	ExpressionStatement	b -> x [ 0 ] = i	665:1:14953:14964	110796	2	True				
ANR	110813	AssignmentExpression	b -> x [ 0 ] = i		110796	0		=			
ANR	110814	ArrayIndexing	b -> x [ 0 ]		110796	0					
ANR	110815	PtrMemberAccess	b -> x		110796	0					
ANR	110816	Identifier	b		110796	0					
ANR	110817	Identifier	x		110796	1					
ANR	110818	PrimaryExpression	0		110796	1					
ANR	110819	Identifier	i		110796	1					
ANR	110820	ExpressionStatement	b -> wds = 1	666:1:14967:14977	110796	3	True				
ANR	110821	AssignmentExpression	b -> wds = 1		110796	0		=			
ANR	110822	PtrMemberAccess	b -> wds		110796	0					
ANR	110823	Identifier	b		110796	0					
ANR	110824	Identifier	wds		110796	1					
ANR	110825	PrimaryExpression	1		110796	1					
ANR	110826	ReturnStatement	return b ;	667:1:14980:14988	110796	4	True				
ANR	110827	Identifier	b		110796	0					
ANR	110828	ReturnType	static Bigint *		110796	1					
ANR	110829	Identifier	i2b		110796	2					
ANR	110830	ParameterList	int i		110796	3					
ANR	110831	Parameter	int i	660:20:14914:14918	110796	0	True				
ANR	110832	ParameterType	int		110796	0					
ANR	110833	Identifier	i		110796	1					
ANR	110834	CFGEntryNode	ENTRY		110796		True				
ANR	110835	CFGExitNode	EXIT		110796		True				
ANR	110836	Symbol	* b -> x		110796						
ANR	110837	Symbol	b		110796						
ANR	110838	Symbol	b -> x		110796						
ANR	110839	Symbol	i		110796						
ANR	110840	Symbol	* * b		110796						
ANR	110841	Symbol	Balloc		110796						
ANR	110842	Symbol	b -> wds		110796						
ANR	110843	Symbol	* b		110796						
ANR	110844	Function	mult	670:0:14993:16392							
ANR	110845	FunctionDef	"mult (Bigint * a , Bigint * b)"		110844	0					
ANR	110846	CompoundStatement		671:0:15036:16392	110844	0					
ANR	110847	IdentifierDeclStatement	Bigint * c ;	672:1:15039:15048	110844	0	True				
ANR	110848	IdentifierDecl	* c		110844	0					
ANR	110849	IdentifierDeclType	Bigint *		110844	0					
ANR	110850	Identifier	c		110844	1					
ANR	110851	IdentifierDeclStatement	"int k , wa , wb , wc ;"	673:1:15051:15068	110844	1	True				
ANR	110852	IdentifierDecl	k		110844	0					
ANR	110853	IdentifierDeclType	int		110844	0					
ANR	110854	Identifier	k		110844	1					
ANR	110855	IdentifierDecl	wa		110844	1					
ANR	110856	IdentifierDeclType	int		110844	0					
ANR	110857	Identifier	wa		110844	1					
ANR	110858	IdentifierDecl	wb		110844	2					
ANR	110859	IdentifierDeclType	int		110844	0					
ANR	110860	Identifier	wb		110844	1					
ANR	110861	IdentifierDecl	wc		110844	3					
ANR	110862	IdentifierDeclType	int		110844	0					
ANR	110863	Identifier	wc		110844	1					
ANR	110864	IdentifierDeclStatement	"ULong carry , y , z ;"	674:1:15071:15088	110844	2	True				
ANR	110865	IdentifierDecl	carry		110844	0					
ANR	110866	IdentifierDeclType	ULong		110844	0					
ANR	110867	Identifier	carry		110844	1					
ANR	110868	IdentifierDecl	y		110844	1					
ANR	110869	IdentifierDeclType	ULong		110844	0					
ANR	110870	Identifier	y		110844	1					
ANR	110871	IdentifierDecl	z		110844	2					
ANR	110872	IdentifierDeclType	ULong		110844	0					
ANR	110873	Identifier	z		110844	1					
ANR	110874	IdentifierDeclStatement	"ULong * x , * xa , * xae , * xb , * xbe , * xc , * xc0 ;"	675:1:15091:15132	110844	3	True				
ANR	110875	IdentifierDecl	* x		110844	0					
ANR	110876	IdentifierDeclType	ULong *		110844	0					
ANR	110877	Identifier	x		110844	1					
ANR	110878	IdentifierDecl	* xa		110844	1					
ANR	110879	IdentifierDeclType	ULong *		110844	0					
ANR	110880	Identifier	xa		110844	1					
ANR	110881	IdentifierDecl	* xae		110844	2					
ANR	110882	IdentifierDeclType	ULong *		110844	0					
ANR	110883	Identifier	xae		110844	1					
ANR	110884	IdentifierDecl	* xb		110844	3					
ANR	110885	IdentifierDeclType	ULong *		110844	0					
ANR	110886	Identifier	xb		110844	1					
ANR	110887	IdentifierDecl	* xbe		110844	4					
ANR	110888	IdentifierDeclType	ULong *		110844	0					
ANR	110889	Identifier	xbe		110844	1					
ANR	110890	IdentifierDecl	* xc		110844	5					
ANR	110891	IdentifierDeclType	ULong *		110844	0					
ANR	110892	Identifier	xc		110844	1					
ANR	110893	IdentifierDecl	* xc0		110844	6					
ANR	110894	IdentifierDeclType	ULong *		110844	0					
ANR	110895	Identifier	xc0		110844	1					
ANR	110896	IdentifierDeclStatement	ULong z2 ;	677:1:15150:15158	110844	4	True				
ANR	110897	IdentifierDecl	z2		110844	0					
ANR	110898	IdentifierDeclType	ULong		110844	0					
ANR	110899	Identifier	z2		110844	1					
ANR	110900	IfStatement	if ( a -> wds < b -> wds )		110844	5					
ANR	110901	Condition	a -> wds < b -> wds	680:5:15173:15187	110844	0	True				
ANR	110902	RelationalExpression	a -> wds < b -> wds		110844	0		<			
ANR	110903	PtrMemberAccess	a -> wds		110844	0					
ANR	110904	Identifier	a		110844	0					
ANR	110905	Identifier	wds		110844	1					
ANR	110906	PtrMemberAccess	b -> wds		110844	1					
ANR	110907	Identifier	b		110844	0					
ANR	110908	Identifier	wds		110844	1					
ANR	110909	CompoundStatement		10:22:153:153	110844	1					
ANR	110910	ExpressionStatement	c = a	681:2:15194:15199	110844	0	True				
ANR	110911	AssignmentExpression	c = a		110844	0		=			
ANR	110912	Identifier	c		110844	0					
ANR	110913	Identifier	a		110844	1					
ANR	110914	ExpressionStatement	a = b	682:2:15203:15208	110844	1	True				
ANR	110915	AssignmentExpression	a = b		110844	0		=			
ANR	110916	Identifier	a		110844	0					
ANR	110917	Identifier	b		110844	1					
ANR	110918	ExpressionStatement	b = c	683:2:15212:15217	110844	2	True				
ANR	110919	AssignmentExpression	b = c		110844	0		=			
ANR	110920	Identifier	b		110844	0					
ANR	110921	Identifier	c		110844	1					
ANR	110922	ExpressionStatement	k = a -> k	685:1:15223:15231	110844	6	True				
ANR	110923	AssignmentExpression	k = a -> k		110844	0		=			
ANR	110924	Identifier	k		110844	0					
ANR	110925	PtrMemberAccess	a -> k		110844	1					
ANR	110926	Identifier	a		110844	0					
ANR	110927	Identifier	k		110844	1					
ANR	110928	ExpressionStatement	wa = a -> wds	686:1:15234:15245	110844	7	True				
ANR	110929	AssignmentExpression	wa = a -> wds		110844	0		=			
ANR	110930	Identifier	wa		110844	0					
ANR	110931	PtrMemberAccess	a -> wds		110844	1					
ANR	110932	Identifier	a		110844	0					
ANR	110933	Identifier	wds		110844	1					
ANR	110934	ExpressionStatement	wb = b -> wds	687:1:15248:15259	110844	8	True				
ANR	110935	AssignmentExpression	wb = b -> wds		110844	0		=			
ANR	110936	Identifier	wb		110844	0					
ANR	110937	PtrMemberAccess	b -> wds		110844	1					
ANR	110938	Identifier	b		110844	0					
ANR	110939	Identifier	wds		110844	1					
ANR	110940	ExpressionStatement	wc = wa + wb	688:1:15262:15274	110844	9	True				
ANR	110941	AssignmentExpression	wc = wa + wb		110844	0		=			
ANR	110942	Identifier	wc		110844	0					
ANR	110943	AdditiveExpression	wa + wb		110844	1		+			
ANR	110944	Identifier	wa		110844	0					
ANR	110945	Identifier	wb		110844	1					
ANR	110946	IfStatement	if ( wc > a -> maxwds )		110844	10					
ANR	110947	Condition	wc > a -> maxwds	689:5:15281:15294	110844	0	True				
ANR	110948	RelationalExpression	wc > a -> maxwds		110844	0		>			
ANR	110949	Identifier	wc		110844	0					
ANR	110950	PtrMemberAccess	a -> maxwds		110844	1					
ANR	110951	Identifier	a		110844	0					
ANR	110952	Identifier	maxwds		110844	1					
ANR	110953	CompoundStatement		19:21:260:260	110844	1					
ANR	110954	ExpressionStatement	k ++	690:2:15301:15304	110844	0	True				
ANR	110955	PostIncDecOperationExpression	k ++		110844	0					
ANR	110956	Identifier	k		110844	0					
ANR	110957	IncDec	++		110844	1					
ANR	110958	ExpressionStatement	c = Balloc ( k )	692:1:15310:15323	110844	11	True				
ANR	110959	AssignmentExpression	c = Balloc ( k )		110844	0		=			
ANR	110960	Identifier	c		110844	0					
ANR	110961	CallExpression	Balloc ( k )		110844	1					
ANR	110962	Callee	Balloc		110844	0					
ANR	110963	Identifier	Balloc		110844	0					
ANR	110964	ArgumentList	k		110844	1					
ANR	110965	Argument	k		110844	0					
ANR	110966	Identifier	k		110844	0					
ANR	110967	ForStatement	"for ( x = c -> x , xa = x + wc ; x < xa ; x ++ )"		110844	12					
ANR	110968	ForInit	"x = c -> x , xa = x + wc ;"	693:5:15330:15351	110844	0	True				
ANR	110969	Expression	"x = c -> x , xa = x + wc"		110844	0					
ANR	110970	AssignmentExpression	x = c -> x		110844	0		=			
ANR	110971	Identifier	x		110844	0					
ANR	110972	PtrMemberAccess	c -> x		110844	1					
ANR	110973	Identifier	c		110844	0					
ANR	110974	Identifier	x		110844	1					
ANR	110975	AssignmentExpression	xa = x + wc		110844	1		=			
ANR	110976	Identifier	xa		110844	0					
ANR	110977	AdditiveExpression	x + wc		110844	1		+			
ANR	110978	Identifier	x		110844	0					
ANR	110979	Identifier	wc		110844	1					
ANR	110980	Condition	x < xa	693:28:15353:15358	110844	1	True				
ANR	110981	RelationalExpression	x < xa		110844	0		<			
ANR	110982	Identifier	x		110844	0					
ANR	110983	Identifier	xa		110844	1					
ANR	110984	PostIncDecOperationExpression	x ++	693:36:15361:15363	110844	2	True				
ANR	110985	Identifier	x		110844	0					
ANR	110986	IncDec	++		110844	1					
ANR	110987	CompoundStatement		23:41:329:329	110844	3					
ANR	110988	ExpressionStatement	* x = 0	694:2:15370:15376	110844	0	True				
ANR	110989	AssignmentExpression	* x = 0		110844	0		=			
ANR	110990	UnaryOperationExpression	* x		110844	0					
ANR	110991	UnaryOperator	*		110844	0					
ANR	110992	Identifier	x		110844	1					
ANR	110993	PrimaryExpression	0		110844	1					
ANR	110994	ExpressionStatement	xa = a -> x	696:1:15382:15391	110844	13	True				
ANR	110995	AssignmentExpression	xa = a -> x		110844	0		=			
ANR	110996	Identifier	xa		110844	0					
ANR	110997	PtrMemberAccess	a -> x		110844	1					
ANR	110998	Identifier	a		110844	0					
ANR	110999	Identifier	x		110844	1					
ANR	111000	ExpressionStatement	xae = xa + wa	697:1:15394:15407	110844	14	True				
ANR	111001	AssignmentExpression	xae = xa + wa		110844	0		=			
ANR	111002	Identifier	xae		110844	0					
ANR	111003	AdditiveExpression	xa + wa		110844	1		+			
ANR	111004	Identifier	xa		110844	0					
ANR	111005	Identifier	wa		110844	1					
ANR	111006	ExpressionStatement	xb = b -> x	698:1:15410:15419	110844	15	True				
ANR	111007	AssignmentExpression	xb = b -> x		110844	0		=			
ANR	111008	Identifier	xb		110844	0					
ANR	111009	PtrMemberAccess	b -> x		110844	1					
ANR	111010	Identifier	b		110844	0					
ANR	111011	Identifier	x		110844	1					
ANR	111012	ExpressionStatement	xbe = xb + wb	699:1:15422:15435	110844	16	True				
ANR	111013	AssignmentExpression	xbe = xb + wb		110844	0		=			
ANR	111014	Identifier	xbe		110844	0					
ANR	111015	AdditiveExpression	xb + wb		110844	1		+			
ANR	111016	Identifier	xb		110844	0					
ANR	111017	Identifier	wb		110844	1					
ANR	111018	ExpressionStatement	xc0 = c -> x	700:1:15438:15448	110844	17	True				
ANR	111019	AssignmentExpression	xc0 = c -> x		110844	0		=			
ANR	111020	Identifier	xc0		110844	0					
ANR	111021	PtrMemberAccess	c -> x		110844	1					
ANR	111022	Identifier	c		110844	0					
ANR	111023	Identifier	x		110844	1					
ANR	111024	ForStatement	"for ( ; xb < xbe ; xb ++ , xc0 ++ )"		110844	18					
ANR	111025	Condition	xb < xbe	702:7:15472:15479	110844	0	True				
ANR	111026	RelationalExpression	xb < xbe		110844	0		<			
ANR	111027	Identifier	xb		110844	0					
ANR	111028	Identifier	xbe		110844	1					
ANR	111029	Expression	"xb ++ , xc0 ++"	702:17:15482:15492	110844	1	True				
ANR	111030	PostIncDecOperationExpression	xb ++		110844	0					
ANR	111031	Identifier	xb		110844	0					
ANR	111032	IncDec	++		110844	1					
ANR	111033	PostIncDecOperationExpression	xc0 ++		110844	1					
ANR	111034	Identifier	xc0		110844	0					
ANR	111035	IncDec	++		110844	1					
ANR	111036	CompoundStatement		32:30:458:458	110844	2					
ANR	111037	IfStatement	if ( ( y = * xb & 0xffff ) )		110844	0					
ANR	111038	Condition	y = * xb & 0xffff	703:6:15503:15520	110844	0	True				
ANR	111039	AssignmentExpression	y = * xb & 0xffff		110844	0		=			
ANR	111040	Identifier	y		110844	0					
ANR	111041	BitAndExpression	* xb & 0xffff		110844	1		&			
ANR	111042	UnaryOperationExpression	* xb		110844	0					
ANR	111043	UnaryOperator	*		110844	0					
ANR	111044	Identifier	xb		110844	1					
ANR	111045	PrimaryExpression	0xffff		110844	1					
ANR	111046	CompoundStatement		33:26:486:486	110844	1					
ANR	111047	ExpressionStatement	x = xa	704:3:15528:15534	110844	0	True				
ANR	111048	AssignmentExpression	x = xa		110844	0		=			
ANR	111049	Identifier	x		110844	0					
ANR	111050	Identifier	xa		110844	1					
ANR	111051	ExpressionStatement	xc = xc0	705:3:15539:15547	110844	1	True				
ANR	111052	AssignmentExpression	xc = xc0		110844	0		=			
ANR	111053	Identifier	xc		110844	0					
ANR	111054	Identifier	xc0		110844	1					
ANR	111055	ExpressionStatement	carry = 0	706:3:15552:15561	110844	2	True				
ANR	111056	AssignmentExpression	carry = 0		110844	0		=			
ANR	111057	Identifier	carry		110844	0					
ANR	111058	PrimaryExpression	0		110844	1					
ANR	111059	DoStatement	do		110844	3					
ANR	111060	CompoundStatement		37:6:532:532	110844	0					
ANR	111061	ExpressionStatement	z = ( * x & 0xffff ) * y + ( * xc & 0xffff ) + carry	708:4:15575:15621	110844	0	True				
ANR	111062	AssignmentExpression	z = ( * x & 0xffff ) * y + ( * xc & 0xffff ) + carry		110844	0		=			
ANR	111063	Identifier	z		110844	0					
ANR	111064	AdditiveExpression	( * x & 0xffff ) * y + ( * xc & 0xffff ) + carry		110844	1		+			
ANR	111065	MultiplicativeExpression	( * x & 0xffff ) * y		110844	0		*			
ANR	111066	BitAndExpression	* x & 0xffff		110844	0		&			
ANR	111067	UnaryOperationExpression	* x		110844	0					
ANR	111068	UnaryOperator	*		110844	0					
ANR	111069	Identifier	x		110844	1					
ANR	111070	PrimaryExpression	0xffff		110844	1					
ANR	111071	Identifier	y		110844	1					
ANR	111072	AdditiveExpression	( * xc & 0xffff ) + carry		110844	1		+			
ANR	111073	BitAndExpression	* xc & 0xffff		110844	0		&			
ANR	111074	UnaryOperationExpression	* xc		110844	0					
ANR	111075	UnaryOperator	*		110844	0					
ANR	111076	Identifier	xc		110844	1					
ANR	111077	PrimaryExpression	0xffff		110844	1					
ANR	111078	Identifier	carry		110844	1					
ANR	111079	ExpressionStatement	carry = z >> 16	709:4:15627:15642	110844	1	True				
ANR	111080	AssignmentExpression	carry = z >> 16		110844	0		=			
ANR	111081	Identifier	carry		110844	0					
ANR	111082	ShiftExpression	z >> 16		110844	1		>>			
ANR	111083	Identifier	z		110844	0					
ANR	111084	PrimaryExpression	16		110844	1					
ANR	111085	ExpressionStatement	z2 = ( * x ++ >> 16 ) * y + ( * xc >> 16 ) + carry	710:4:15648:15691	110844	2	True				
ANR	111086	AssignmentExpression	z2 = ( * x ++ >> 16 ) * y + ( * xc >> 16 ) + carry		110844	0		=			
ANR	111087	Identifier	z2		110844	0					
ANR	111088	AdditiveExpression	( * x ++ >> 16 ) * y + ( * xc >> 16 ) + carry		110844	1		+			
ANR	111089	MultiplicativeExpression	( * x ++ >> 16 ) * y		110844	0		*			
ANR	111090	ShiftExpression	* x ++ >> 16		110844	0		>>			
ANR	111091	UnaryOperationExpression	* x ++		110844	0					
ANR	111092	UnaryOperator	*		110844	0					
ANR	111093	PostIncDecOperationExpression	x ++		110844	1					
ANR	111094	Identifier	x		110844	0					
ANR	111095	IncDec	++		110844	1					
ANR	111096	PrimaryExpression	16		110844	1					
ANR	111097	Identifier	y		110844	1					
ANR	111098	AdditiveExpression	( * xc >> 16 ) + carry		110844	1		+			
ANR	111099	ShiftExpression	* xc >> 16		110844	0		>>			
ANR	111100	UnaryOperationExpression	* xc		110844	0					
ANR	111101	UnaryOperator	*		110844	0					
ANR	111102	Identifier	xc		110844	1					
ANR	111103	PrimaryExpression	16		110844	1					
ANR	111104	Identifier	carry		110844	1					
ANR	111105	ExpressionStatement	carry = z2 >> 16	711:4:15697:15713	110844	3	True				
ANR	111106	AssignmentExpression	carry = z2 >> 16		110844	0		=			
ANR	111107	Identifier	carry		110844	0					
ANR	111108	ShiftExpression	z2 >> 16		110844	1		>>			
ANR	111109	Identifier	z2		110844	0					
ANR	111110	PrimaryExpression	16		110844	1					
ANR	111111	ExpressionStatement	"Storeinc ( xc , z2 , z )"	712:4:15719:15738	110844	4	True				
ANR	111112	CallExpression	"Storeinc ( xc , z2 , z )"		110844	0					
ANR	111113	Callee	Storeinc		110844	0					
ANR	111114	Identifier	Storeinc		110844	0					
ANR	111115	ArgumentList	xc		110844	1					
ANR	111116	Argument	xc		110844	0					
ANR	111117	Identifier	xc		110844	0					
ANR	111118	Argument	z2		110844	1					
ANR	111119	Identifier	z2		110844	0					
ANR	111120	Argument	z		110844	2					
ANR	111121	Identifier	z		110844	0					
ANR	111122	Condition	x < xae	714:9:15754:15760	110844	1	True				
ANR	111123	RelationalExpression	x < xae		110844	0		<			
ANR	111124	Identifier	x		110844	0					
ANR	111125	Identifier	xae		110844	1					
ANR	111126	ExpressionStatement	* xc = carry	715:3:15767:15778	110844	4	True				
ANR	111127	AssignmentExpression	* xc = carry		110844	0		=			
ANR	111128	UnaryOperationExpression	* xc		110844	0					
ANR	111129	UnaryOperator	*		110844	0					
ANR	111130	Identifier	xc		110844	1					
ANR	111131	Identifier	carry		110844	1					
ANR	111132	IfStatement	if ( ( y = * xb >> 16 ) )		110844	1					
ANR	111133	Condition	y = * xb >> 16	717:6:15790:15804	110844	0	True				
ANR	111134	AssignmentExpression	y = * xb >> 16		110844	0		=			
ANR	111135	Identifier	y		110844	0					
ANR	111136	ShiftExpression	* xb >> 16		110844	1		>>			
ANR	111137	UnaryOperationExpression	* xb		110844	0					
ANR	111138	UnaryOperator	*		110844	0					
ANR	111139	Identifier	xb		110844	1					
ANR	111140	PrimaryExpression	16		110844	1					
ANR	111141	CompoundStatement		47:23:770:770	110844	1					
ANR	111142	ExpressionStatement	x = xa	718:3:15812:15818	110844	0	True				
ANR	111143	AssignmentExpression	x = xa		110844	0		=			
ANR	111144	Identifier	x		110844	0					
ANR	111145	Identifier	xa		110844	1					
ANR	111146	ExpressionStatement	xc = xc0	719:3:15823:15831	110844	1	True				
ANR	111147	AssignmentExpression	xc = xc0		110844	0		=			
ANR	111148	Identifier	xc		110844	0					
ANR	111149	Identifier	xc0		110844	1					
ANR	111150	ExpressionStatement	carry = 0	720:3:15836:15845	110844	2	True				
ANR	111151	AssignmentExpression	carry = 0		110844	0		=			
ANR	111152	Identifier	carry		110844	0					
ANR	111153	PrimaryExpression	0		110844	1					
ANR	111154	ExpressionStatement	z2 = * xc	721:3:15850:15858	110844	3	True				
ANR	111155	AssignmentExpression	z2 = * xc		110844	0		=			
ANR	111156	Identifier	z2		110844	0					
ANR	111157	UnaryOperationExpression	* xc		110844	1					
ANR	111158	UnaryOperator	*		110844	0					
ANR	111159	Identifier	xc		110844	1					
ANR	111160	DoStatement	do		110844	4					
ANR	111161	CompoundStatement		52:6:829:829	110844	0					
ANR	111162	ExpressionStatement	z = ( * x & 0xffff ) * y + ( * xc >> 16 ) + carry	723:4:15872:15915	110844	0	True				
ANR	111163	AssignmentExpression	z = ( * x & 0xffff ) * y + ( * xc >> 16 ) + carry		110844	0		=			
ANR	111164	Identifier	z		110844	0					
ANR	111165	AdditiveExpression	( * x & 0xffff ) * y + ( * xc >> 16 ) + carry		110844	1		+			
ANR	111166	MultiplicativeExpression	( * x & 0xffff ) * y		110844	0		*			
ANR	111167	BitAndExpression	* x & 0xffff		110844	0		&			
ANR	111168	UnaryOperationExpression	* x		110844	0					
ANR	111169	UnaryOperator	*		110844	0					
ANR	111170	Identifier	x		110844	1					
ANR	111171	PrimaryExpression	0xffff		110844	1					
ANR	111172	Identifier	y		110844	1					
ANR	111173	AdditiveExpression	( * xc >> 16 ) + carry		110844	1		+			
ANR	111174	ShiftExpression	* xc >> 16		110844	0		>>			
ANR	111175	UnaryOperationExpression	* xc		110844	0					
ANR	111176	UnaryOperator	*		110844	0					
ANR	111177	Identifier	xc		110844	1					
ANR	111178	PrimaryExpression	16		110844	1					
ANR	111179	Identifier	carry		110844	1					
ANR	111180	ExpressionStatement	carry = z >> 16	724:4:15921:15936	110844	1	True				
ANR	111181	AssignmentExpression	carry = z >> 16		110844	0		=			
ANR	111182	Identifier	carry		110844	0					
ANR	111183	ShiftExpression	z >> 16		110844	1		>>			
ANR	111184	Identifier	z		110844	0					
ANR	111185	PrimaryExpression	16		110844	1					
ANR	111186	ExpressionStatement	"Storeinc ( xc , z , z2 )"	725:4:15942:15961	110844	2	True				
ANR	111187	CallExpression	"Storeinc ( xc , z , z2 )"		110844	0					
ANR	111188	Callee	Storeinc		110844	0					
ANR	111189	Identifier	Storeinc		110844	0					
ANR	111190	ArgumentList	xc		110844	1					
ANR	111191	Argument	xc		110844	0					
ANR	111192	Identifier	xc		110844	0					
ANR	111193	Argument	z		110844	1					
ANR	111194	Identifier	z		110844	0					
ANR	111195	Argument	z2		110844	2					
ANR	111196	Identifier	z2		110844	0					
ANR	111197	ExpressionStatement	z2 = ( * x ++ >> 16 ) * y + ( * xc & 0xffff ) + carry	726:4:15967:16013	110844	3	True				
ANR	111198	AssignmentExpression	z2 = ( * x ++ >> 16 ) * y + ( * xc & 0xffff ) + carry		110844	0		=			
ANR	111199	Identifier	z2		110844	0					
ANR	111200	AdditiveExpression	( * x ++ >> 16 ) * y + ( * xc & 0xffff ) + carry		110844	1		+			
ANR	111201	MultiplicativeExpression	( * x ++ >> 16 ) * y		110844	0		*			
ANR	111202	ShiftExpression	* x ++ >> 16		110844	0		>>			
ANR	111203	UnaryOperationExpression	* x ++		110844	0					
ANR	111204	UnaryOperator	*		110844	0					
ANR	111205	PostIncDecOperationExpression	x ++		110844	1					
ANR	111206	Identifier	x		110844	0					
ANR	111207	IncDec	++		110844	1					
ANR	111208	PrimaryExpression	16		110844	1					
ANR	111209	Identifier	y		110844	1					
ANR	111210	AdditiveExpression	( * xc & 0xffff ) + carry		110844	1		+			
ANR	111211	BitAndExpression	* xc & 0xffff		110844	0		&			
ANR	111212	UnaryOperationExpression	* xc		110844	0					
ANR	111213	UnaryOperator	*		110844	0					
ANR	111214	Identifier	xc		110844	1					
ANR	111215	PrimaryExpression	0xffff		110844	1					
ANR	111216	Identifier	carry		110844	1					
ANR	111217	ExpressionStatement	carry = z2 >> 16	727:4:16019:16035	110844	4	True				
ANR	111218	AssignmentExpression	carry = z2 >> 16		110844	0		=			
ANR	111219	Identifier	carry		110844	0					
ANR	111220	ShiftExpression	z2 >> 16		110844	1		>>			
ANR	111221	Identifier	z2		110844	0					
ANR	111222	PrimaryExpression	16		110844	1					
ANR	111223	Condition	x < xae	729:9:16051:16057	110844	1	True				
ANR	111224	RelationalExpression	x < xae		110844	0		<			
ANR	111225	Identifier	x		110844	0					
ANR	111226	Identifier	xae		110844	1					
ANR	111227	ExpressionStatement	* xc = z2	730:3:16064:16072	110844	5	True				
ANR	111228	AssignmentExpression	* xc = z2		110844	0		=			
ANR	111229	UnaryOperationExpression	* xc		110844	0					
ANR	111230	UnaryOperator	*		110844	0					
ANR	111231	Identifier	xc		110844	1					
ANR	111232	Identifier	z2		110844	1					
ANR	111233	ForStatement	"for ( xc0 = c -> x , xc = xc0 + wc ; wc > 0 && ! * -- xc ; -- wc )"		110844	19					
ANR	111234	ForInit	"xc0 = c -> x , xc = xc0 + wc ;"	749:5:16314:16339	110844	0	True				
ANR	111235	Expression	"xc0 = c -> x , xc = xc0 + wc"		110844	0					
ANR	111236	AssignmentExpression	xc0 = c -> x		110844	0		=			
ANR	111237	Identifier	xc0		110844	0					
ANR	111238	PtrMemberAccess	c -> x		110844	1					
ANR	111239	Identifier	c		110844	0					
ANR	111240	Identifier	x		110844	1					
ANR	111241	AssignmentExpression	xc = xc0 + wc		110844	1		=			
ANR	111242	Identifier	xc		110844	0					
ANR	111243	AdditiveExpression	xc0 + wc		110844	1		+			
ANR	111244	Identifier	xc0		110844	0					
ANR	111245	Identifier	wc		110844	1					
ANR	111246	Condition	wc > 0 && ! * -- xc	749:32:16341:16356	110844	1	True				
ANR	111247	AndExpression	wc > 0 && ! * -- xc		110844	0		&&			
ANR	111248	RelationalExpression	wc > 0		110844	0		>			
ANR	111249	Identifier	wc		110844	0					
ANR	111250	PrimaryExpression	0		110844	1					
ANR	111251	UnaryOperationExpression	! * -- xc		110844	1					
ANR	111252	UnaryOperator	!		110844	0					
ANR	111253	UnaryOperationExpression	* -- xc		110844	1					
ANR	111254	UnaryOperator	*		110844	0					
ANR	111255	UnaryExpression	-- xc		110844	1					
ANR	111256	IncDec	--		110844	0					
ANR	111257	Identifier	xc		110844	1					
ANR	111258	UnaryExpression	-- wc	749:50:16359:16362	110844	2	True				
ANR	111259	IncDec	--		110844	0					
ANR	111260	Identifier	wc		110844	1					
ANR	111261	ExpressionStatement		749:56:16365:16365	110844	3	True				
ANR	111262	ExpressionStatement	c -> wds = wc	750:1:16368:16379	110844	20	True				
ANR	111263	AssignmentExpression	c -> wds = wc		110844	0		=			
ANR	111264	PtrMemberAccess	c -> wds		110844	0					
ANR	111265	Identifier	c		110844	0					
ANR	111266	Identifier	wds		110844	1					
ANR	111267	Identifier	wc		110844	1					
ANR	111268	ReturnStatement	return c ;	751:1:16382:16390	110844	21	True				
ANR	111269	Identifier	c		110844	0					
ANR	111270	ReturnType	static Bigint *		110844	1					
ANR	111271	Identifier	mult		110844	2					
ANR	111272	ParameterList	"Bigint * a , Bigint * b"		110844	3					
ANR	111273	Parameter	Bigint * a	670:21:15014:15022	110844	0	True				
ANR	111274	ParameterType	Bigint *		110844	0					
ANR	111275	Identifier	a		110844	1					
ANR	111276	Parameter	Bigint * b	670:32:15025:15033	110844	1	True				
ANR	111277	ParameterType	Bigint *		110844	0					
ANR	111278	Identifier	b		110844	1					
ANR	111279	CFGEntryNode	ENTRY		110844		True				
ANR	111280	CFGExitNode	EXIT		110844		True				
ANR	111281	Symbol	* x		110844						
ANR	111282	Symbol	a -> k		110844						
ANR	111283	Symbol	wa		110844						
ANR	111284	Symbol	wb		110844						
ANR	111285	Symbol	wc		110844						
ANR	111286	Symbol	a -> maxwds		110844						
ANR	111287	Symbol	b -> x		110844						
ANR	111288	Symbol	Balloc		110844						
ANR	111289	Symbol	* -- xc		110844						
ANR	111290	Symbol	* x ++		110844						
ANR	111291	Symbol	xae		110844						
ANR	111292	Symbol	a		110844						
ANR	111293	Symbol	b		110844						
ANR	111294	Symbol	c		110844						
ANR	111295	Symbol	xc0		110844						
ANR	111296	Symbol	xa		110844						
ANR	111297	Symbol	xb		110844						
ANR	111298	Symbol	k		110844						
ANR	111299	Symbol	xc		110844						
ANR	111300	Symbol	* a		110844						
ANR	111301	Symbol	a -> wds		110844						
ANR	111302	Symbol	b -> wds		110844						
ANR	111303	Symbol	c -> wds		110844						
ANR	111304	Symbol	* b		110844						
ANR	111305	Symbol	* c		110844						
ANR	111306	Symbol	c -> x		110844						
ANR	111307	Symbol	* xc		110844						
ANR	111308	Symbol	* xb		110844						
ANR	111309	Symbol	a -> x		110844						
ANR	111310	Symbol	x		110844						
ANR	111311	Symbol	z2		110844						
ANR	111312	Symbol	y		110844						
ANR	111313	Symbol	z		110844						
ANR	111314	Symbol	xbe		110844						
ANR	111315	Symbol	carry		110844						
ANR	111316	Function	s2b	754:0:16395:16904							
ANR	111317	FunctionDef	"s2b (CONST char * s , int nd0 , int nd , ULong y9)"		111316	0					
ANR	111318	CompoundStatement		755:0:16458:16904	111316	0					
ANR	111319	IdentifierDeclStatement	Bigint * b ;	756:1:16461:16470	111316	0	True				
ANR	111320	IdentifierDecl	* b		111316	0					
ANR	111321	IdentifierDeclType	Bigint *		111316	0					
ANR	111322	Identifier	b		111316	1					
ANR	111323	IdentifierDeclStatement	"int i , k ;"	757:1:16473:16481	111316	1	True				
ANR	111324	IdentifierDecl	i		111316	0					
ANR	111325	IdentifierDeclType	int		111316	0					
ANR	111326	Identifier	i		111316	1					
ANR	111327	IdentifierDecl	k		111316	1					
ANR	111328	IdentifierDeclType	int		111316	0					
ANR	111329	Identifier	k		111316	1					
ANR	111330	IdentifierDeclStatement	"Long x , y ;"	758:1:16484:16493	111316	2	True				
ANR	111331	IdentifierDecl	x		111316	0					
ANR	111332	IdentifierDeclType	Long		111316	0					
ANR	111333	Identifier	x		111316	1					
ANR	111334	IdentifierDecl	y		111316	1					
ANR	111335	IdentifierDeclType	Long		111316	0					
ANR	111336	Identifier	y		111316	1					
ANR	111337	ExpressionStatement	x = ( nd + 8 ) / 9	760:1:16497:16513	111316	3	True				
ANR	111338	AssignmentExpression	x = ( nd + 8 ) / 9		111316	0		=			
ANR	111339	Identifier	x		111316	0					
ANR	111340	MultiplicativeExpression	( nd + 8 ) / 9		111316	1		/			
ANR	111341	AdditiveExpression	nd + 8		111316	0		+			
ANR	111342	Identifier	nd		111316	0					
ANR	111343	PrimaryExpression	8		111316	1					
ANR	111344	PrimaryExpression	9		111316	1					
ANR	111345	ForStatement	"for ( k = 0 , y = 1 ; x > y ; y <<= 1 , k ++ )"		111316	4					
ANR	111346	ForInit	"k = 0 , y = 1 ;"	761:5:16520:16532	111316	0	True				
ANR	111347	Expression	"k = 0 , y = 1"		111316	0					
ANR	111348	AssignmentExpression	k = 0		111316	0		=			
ANR	111349	Identifier	k		111316	0					
ANR	111350	PrimaryExpression	0		111316	1					
ANR	111351	AssignmentExpression	y = 1		111316	1		=			
ANR	111352	Identifier	y		111316	0					
ANR	111353	PrimaryExpression	1		111316	1					
ANR	111354	Condition	x > y	761:19:16534:16538	111316	1	True				
ANR	111355	RelationalExpression	x > y		111316	0		>			
ANR	111356	Identifier	x		111316	0					
ANR	111357	Identifier	y		111316	1					
ANR	111358	Expression	"y <<= 1 , k ++"	761:26:16541:16552	111316	2	True				
ANR	111359	AssignmentExpression	y <<= 1		111316	0		<<=			
ANR	111360	Identifier	y		111316	0					
ANR	111361	PrimaryExpression	1		111316	1					
ANR	111362	PostIncDecOperationExpression	k ++		111316	1					
ANR	111363	Identifier	k		111316	0					
ANR	111364	IncDec	++		111316	1					
ANR	111365	ExpressionStatement		761:40:16555:16555	111316	3	True				
ANR	111366	ExpressionStatement	b = Balloc ( k )	763:1:16573:16586	111316	5	True				
ANR	111367	AssignmentExpression	b = Balloc ( k )		111316	0		=			
ANR	111368	Identifier	b		111316	0					
ANR	111369	CallExpression	Balloc ( k )		111316	1					
ANR	111370	Callee	Balloc		111316	0					
ANR	111371	Identifier	Balloc		111316	0					
ANR	111372	ArgumentList	k		111316	1					
ANR	111373	Argument	k		111316	0					
ANR	111374	Identifier	k		111316	0					
ANR	111375	ExpressionStatement	b -> x [ 0 ] = y9	764:1:16589:16601	111316	6	True				
ANR	111376	AssignmentExpression	b -> x [ 0 ] = y9		111316	0		=			
ANR	111377	ArrayIndexing	b -> x [ 0 ]		111316	0					
ANR	111378	PtrMemberAccess	b -> x		111316	0					
ANR	111379	Identifier	b		111316	0					
ANR	111380	Identifier	x		111316	1					
ANR	111381	PrimaryExpression	0		111316	1					
ANR	111382	Identifier	y9		111316	1					
ANR	111383	ExpressionStatement	b -> wds = 1	765:1:16604:16614	111316	7	True				
ANR	111384	AssignmentExpression	b -> wds = 1		111316	0		=			
ANR	111385	PtrMemberAccess	b -> wds		111316	0					
ANR	111386	Identifier	b		111316	0					
ANR	111387	Identifier	wds		111316	1					
ANR	111388	PrimaryExpression	1		111316	1					
ANR	111389	ExpressionStatement	i = 9	772:1:16713:16718	111316	8	True				
ANR	111390	AssignmentExpression	i = 9		111316	0		=			
ANR	111391	Identifier	i		111316	0					
ANR	111392	PrimaryExpression	9		111316	1					
ANR	111393	IfStatement	if ( 9 < nd0 )		111316	9					
ANR	111394	Condition	9 < nd0	773:5:16725:16731	111316	0	True				
ANR	111395	RelationalExpression	9 < nd0		111316	0		<			
ANR	111396	PrimaryExpression	9		111316	0					
ANR	111397	Identifier	nd0		111316	1					
ANR	111398	CompoundStatement		19:14:275:275	111316	1					
ANR	111399	ExpressionStatement	s += 9	774:2:16738:16744	111316	0	True				
ANR	111400	AssignmentExpression	s += 9		111316	0		+=			
ANR	111401	Identifier	s		111316	0					
ANR	111402	PrimaryExpression	9		111316	1					
ANR	111403	DoStatement	do		111316	1					
ANR	111404	ExpressionStatement	"b = multadd ( b , 10 , * s ++ - '0' )"	775:5:16751:16781	111316	0	True				
ANR	111405	AssignmentExpression	"b = multadd ( b , 10 , * s ++ - '0' )"		111316	0		=			
ANR	111406	Identifier	b		111316	0					
ANR	111407	CallExpression	"multadd ( b , 10 , * s ++ - '0' )"		111316	1					
ANR	111408	Callee	multadd		111316	0					
ANR	111409	Identifier	multadd		111316	0					
ANR	111410	ArgumentList	b		111316	1					
ANR	111411	Argument	b		111316	0					
ANR	111412	Identifier	b		111316	0					
ANR	111413	Argument	10		111316	1					
ANR	111414	PrimaryExpression	10		111316	0					
ANR	111415	Argument	* s ++ - '0'		111316	2					
ANR	111416	AdditiveExpression	* s ++ - '0'		111316	0		-			
ANR	111417	UnaryOperationExpression	* s ++		111316	0					
ANR	111418	UnaryOperator	*		111316	0					
ANR	111419	PostIncDecOperationExpression	s ++		111316	1					
ANR	111420	Identifier	s		111316	0					
ANR	111421	IncDec	++		111316	1					
ANR	111422	PrimaryExpression	'0'		111316	1					
ANR	111423	Condition	++ i < nd0	776:8:16791:16799	111316	1	True				
ANR	111424	RelationalExpression	++ i < nd0		111316	0		<			
ANR	111425	UnaryExpression	++ i		111316	0					
ANR	111426	IncDec	++		111316	0					
ANR	111427	Identifier	i		111316	1					
ANR	111428	Identifier	nd0		111316	1					
ANR	111429	ExpressionStatement	s ++	777:2:16805:16808	111316	2	True				
ANR	111430	PostIncDecOperationExpression	s ++		111316	0					
ANR	111431	Identifier	s		111316	0					
ANR	111432	IncDec	++		111316	1					
ANR	111433	ElseStatement	else		111316	0					
ANR	111434	CompoundStatement		24:8:359:359	111316	0					
ANR	111435	ExpressionStatement	s += 10	779:2:16822:16829	111316	0	True				
ANR	111436	AssignmentExpression	s += 10		111316	0		+=			
ANR	111437	Identifier	s		111316	0					
ANR	111438	PrimaryExpression	10		111316	1					
ANR	111439	ForStatement	for ( ; i < nd ; i ++ )		111316	10					
ANR	111440	Condition	i < nd	781:7:16841:16846	111316	0	True				
ANR	111441	RelationalExpression	i < nd		111316	0		<			
ANR	111442	Identifier	i		111316	0					
ANR	111443	Identifier	nd		111316	1					
ANR	111444	PostIncDecOperationExpression	i ++	781:15:16849:16851	111316	1	True				
ANR	111445	Identifier	i		111316	0					
ANR	111446	IncDec	++		111316	1					
ANR	111447	CompoundStatement		27:20:395:395	111316	2					
ANR	111448	ExpressionStatement	"b = multadd ( b , 10 , * s ++ - '0' )"	782:2:16858:16888	111316	0	True				
ANR	111449	AssignmentExpression	"b = multadd ( b , 10 , * s ++ - '0' )"		111316	0		=			
ANR	111450	Identifier	b		111316	0					
ANR	111451	CallExpression	"multadd ( b , 10 , * s ++ - '0' )"		111316	1					
ANR	111452	Callee	multadd		111316	0					
ANR	111453	Identifier	multadd		111316	0					
ANR	111454	ArgumentList	b		111316	1					
ANR	111455	Argument	b		111316	0					
ANR	111456	Identifier	b		111316	0					
ANR	111457	Argument	10		111316	1					
ANR	111458	PrimaryExpression	10		111316	0					
ANR	111459	Argument	* s ++ - '0'		111316	2					
ANR	111460	AdditiveExpression	* s ++ - '0'		111316	0		-			
ANR	111461	UnaryOperationExpression	* s ++		111316	0					
ANR	111462	UnaryOperator	*		111316	0					
ANR	111463	PostIncDecOperationExpression	s ++		111316	1					
ANR	111464	Identifier	s		111316	0					
ANR	111465	IncDec	++		111316	1					
ANR	111466	PrimaryExpression	'0'		111316	1					
ANR	111467	ReturnStatement	return b ;	784:1:16894:16902	111316	11	True				
ANR	111468	Identifier	b		111316	0					
ANR	111469	ReturnType	static Bigint *		111316	1					
ANR	111470	Identifier	s2b		111316	2					
ANR	111471	ParameterList	"CONST char * s , int nd0 , int nd , ULong y9"		111316	3					
ANR	111472	Parameter	CONST char * s	754:21:16416:16428	111316	0	True				
ANR	111473	ParameterType	CONST char *		111316	0					
ANR	111474	Identifier	s		111316	1					
ANR	111475	Parameter	int nd0	754:36:16431:16437	111316	1	True				
ANR	111476	ParameterType	int		111316	0					
ANR	111477	Identifier	nd0		111316	1					
ANR	111478	Parameter	int nd	754:45:16440:16445	111316	2	True				
ANR	111479	ParameterType	int		111316	0					
ANR	111480	Identifier	nd		111316	1					
ANR	111481	Parameter	ULong y9	754:53:16448:16455	111316	3	True				
ANR	111482	ParameterType	ULong		111316	0					
ANR	111483	Identifier	y9		111316	1					
ANR	111484	CFGEntryNode	ENTRY		111316		True				
ANR	111485	CFGExitNode	EXIT		111316		True				
ANR	111486	Symbol	y9		111316						
ANR	111487	Symbol	* s ++		111316						
ANR	111488	Symbol	b		111316						
ANR	111489	Symbol	multadd		111316						
ANR	111490	Symbol	i		111316						
ANR	111491	Symbol	* * b		111316						
ANR	111492	Symbol	k		111316						
ANR	111493	Symbol	b -> wds		111316						
ANR	111494	Symbol	* b		111316						
ANR	111495	Symbol	* b -> x		111316						
ANR	111496	Symbol	s		111316						
ANR	111497	Symbol	b -> x		111316						
ANR	111498	Symbol	nd		111316						
ANR	111499	Symbol	x		111316						
ANR	111500	Symbol	y		111316						
ANR	111501	Symbol	Balloc		111316						
ANR	111502	Symbol	nd0		111316						
ANR	111503	Function	pow5mult	787:0:16907:17584							
ANR	111504	FunctionDef	"pow5mult (Bigint * b , int k)"		111503	0					
ANR	111505	CompoundStatement		788:0:16950:17584	111503	0					
ANR	111506	IdentifierDeclStatement	"Bigint * b1 , * p5 , * p51 ;"	789:1:16953:16974	111503	0	True				
ANR	111507	IdentifierDecl	* b1		111503	0					
ANR	111508	IdentifierDeclType	Bigint *		111503	0					
ANR	111509	Identifier	b1		111503	1					
ANR	111510	IdentifierDecl	* p5		111503	1					
ANR	111511	IdentifierDeclType	Bigint *		111503	0					
ANR	111512	Identifier	p5		111503	1					
ANR	111513	IdentifierDecl	* p51		111503	2					
ANR	111514	IdentifierDeclType	Bigint *		111503	0					
ANR	111515	Identifier	p51		111503	1					
ANR	111516	IdentifierDeclStatement	int i ;	790:1:16977:16982	111503	1	True				
ANR	111517	IdentifierDecl	i		111503	0					
ANR	111518	IdentifierDeclType	int		111503	0					
ANR	111519	Identifier	i		111503	1					
ANR	111520	Statement	static	791:1:16985:16990	111503	2	True				
ANR	111521	IdentifierDeclStatement	"int p05 [ 3 ] = { 5 , 25 , 125 } ;"	791:8:16992:17019	111503	3	True				
ANR	111522	IdentifierDecl	"p05 [ 3 ] = { 5 , 25 , 125 }"		111503	0					
ANR	111523	IdentifierDeclType	int [ 3 ]		111503	0					
ANR	111524	Identifier	p05		111503	1					
ANR	111525	PrimaryExpression	3		111503	2					
ANR	111526	AssignmentExpression	"p05 [ 3 ] = { 5 , 25 , 125 }"		111503	3		=			
ANR	111527	Identifier	p05		111503	0					
ANR	111528	InitializerList	5		111503	1					
ANR	111529	PrimaryExpression	5		111503	0					
ANR	111530	PrimaryExpression	25		111503	1					
ANR	111531	PrimaryExpression	125		111503	2					
ANR	111532	ExpressionStatement	_THREAD_PRIVATE_MUTEX_LOCK ( pow5mult_mutex )	793:1:17023:17065	111503	4	True				
ANR	111533	CallExpression	_THREAD_PRIVATE_MUTEX_LOCK ( pow5mult_mutex )		111503	0					
ANR	111534	Callee	_THREAD_PRIVATE_MUTEX_LOCK		111503	0					
ANR	111535	Identifier	_THREAD_PRIVATE_MUTEX_LOCK		111503	0					
ANR	111536	ArgumentList	pow5mult_mutex		111503	1					
ANR	111537	Argument	pow5mult_mutex		111503	0					
ANR	111538	Identifier	pow5mult_mutex		111503	0					
ANR	111539	IfStatement	if ( ( i = k & 3 ) )		111503	5					
ANR	111540	Condition	i = k & 3	794:5:17072:17082	111503	0	True				
ANR	111541	AssignmentExpression	i = k & 3		111503	0		=			
ANR	111542	Identifier	i		111503	0					
ANR	111543	BitAndExpression	k & 3		111503	1		&			
ANR	111544	Identifier	k		111503	0					
ANR	111545	PrimaryExpression	3		111503	1					
ANR	111546	CompoundStatement		7:18:134:134	111503	1					
ANR	111547	ExpressionStatement	"b = multadd ( b , p05 [ i - 1 ] , 0 )"	795:2:17089:17116	111503	0	True				
ANR	111548	AssignmentExpression	"b = multadd ( b , p05 [ i - 1 ] , 0 )"		111503	0		=			
ANR	111549	Identifier	b		111503	0					
ANR	111550	CallExpression	"multadd ( b , p05 [ i - 1 ] , 0 )"		111503	1					
ANR	111551	Callee	multadd		111503	0					
ANR	111552	Identifier	multadd		111503	0					
ANR	111553	ArgumentList	b		111503	1					
ANR	111554	Argument	b		111503	0					
ANR	111555	Identifier	b		111503	0					
ANR	111556	Argument	p05 [ i - 1 ]		111503	1					
ANR	111557	ArrayIndexing	p05 [ i - 1 ]		111503	0					
ANR	111558	Identifier	p05		111503	0					
ANR	111559	AdditiveExpression	i - 1		111503	1		-			
ANR	111560	Identifier	i		111503	0					
ANR	111561	PrimaryExpression	1		111503	1					
ANR	111562	Argument	0		111503	2					
ANR	111563	PrimaryExpression	0		111503	0					
ANR	111564	IfStatement	if ( ! ( k >>= 2 ) )		111503	6					
ANR	111565	Condition	! ( k >>= 2 )	798:5:17127:17136	111503	0	True				
ANR	111566	UnaryOperationExpression	! ( k >>= 2 )		111503	0					
ANR	111567	UnaryOperator	!		111503	0					
ANR	111568	AssignmentExpression	k >>= 2		111503	1		>>=			
ANR	111569	Identifier	k		111503	0					
ANR	111570	PrimaryExpression	2		111503	1					
ANR	111571	CompoundStatement		11:17:188:188	111503	1					
ANR	111572	ExpressionStatement	_THREAD_PRIVATE_MUTEX_UNLOCK ( pow5mult_mutex )	799:2:17143:17187	111503	0	True				
ANR	111573	CallExpression	_THREAD_PRIVATE_MUTEX_UNLOCK ( pow5mult_mutex )		111503	0					
ANR	111574	Callee	_THREAD_PRIVATE_MUTEX_UNLOCK		111503	0					
ANR	111575	Identifier	_THREAD_PRIVATE_MUTEX_UNLOCK		111503	0					
ANR	111576	ArgumentList	pow5mult_mutex		111503	1					
ANR	111577	Argument	pow5mult_mutex		111503	0					
ANR	111578	Identifier	pow5mult_mutex		111503	0					
ANR	111579	ReturnStatement	return b ;	800:2:17191:17199	111503	1	True				
ANR	111580	Identifier	b		111503	0					
ANR	111581	IfStatement	if ( ! ( p5 = p5s ) )		111503	7					
ANR	111582	Condition	! ( p5 = p5s )	802:5:17209:17219	111503	0	True				
ANR	111583	UnaryOperationExpression	! ( p5 = p5s )		111503	0					
ANR	111584	UnaryOperator	!		111503	0					
ANR	111585	AssignmentExpression	p5 = p5s		111503	1		=			
ANR	111586	Identifier	p5		111503	0					
ANR	111587	Identifier	p5s		111503	1					
ANR	111588	CompoundStatement		15:18:271:271	111503	1					
ANR	111589	ExpressionStatement	p5 = p5s = i2b ( 625 )	804:2:17245:17264	111503	0	True				
ANR	111590	AssignmentExpression	p5 = p5s = i2b ( 625 )		111503	0		=			
ANR	111591	Identifier	p5		111503	0					
ANR	111592	AssignmentExpression	p5s = i2b ( 625 )		111503	1		=			
ANR	111593	Identifier	p5s		111503	0					
ANR	111594	CallExpression	i2b ( 625 )		111503	1					
ANR	111595	Callee	i2b		111503	0					
ANR	111596	Identifier	i2b		111503	0					
ANR	111597	ArgumentList	625		111503	1					
ANR	111598	Argument	625		111503	0					
ANR	111599	PrimaryExpression	625		111503	0					
ANR	111600	ExpressionStatement	p5 -> next = 0	805:2:17268:17280	111503	1	True				
ANR	111601	AssignmentExpression	p5 -> next = 0		111503	0		=			
ANR	111602	PtrMemberAccess	p5 -> next		111503	0					
ANR	111603	Identifier	p5		111503	0					
ANR	111604	Identifier	next		111503	1					
ANR	111605	PrimaryExpression	0		111503	1					
ANR	111606	ForStatement	for ( ; ; )		111503	8					
ANR	111607	CompoundStatement		20:9:343:343	111503	0					
ANR	111608	IfStatement	if ( k & 1 )		111503	0					
ANR	111609	Condition	k & 1	808:6:17302:17306	111503	0	True				
ANR	111610	BitAndExpression	k & 1		111503	0		&			
ANR	111611	Identifier	k		111503	0					
ANR	111612	PrimaryExpression	1		111503	1					
ANR	111613	CompoundStatement		21:13:358:358	111503	1					
ANR	111614	ExpressionStatement	"b1 = mult ( b , p5 )"	809:3:17314:17330	111503	0	True				
ANR	111615	AssignmentExpression	"b1 = mult ( b , p5 )"		111503	0		=			
ANR	111616	Identifier	b1		111503	0					
ANR	111617	CallExpression	"mult ( b , p5 )"		111503	1					
ANR	111618	Callee	mult		111503	0					
ANR	111619	Identifier	mult		111503	0					
ANR	111620	ArgumentList	b		111503	1					
ANR	111621	Argument	b		111503	0					
ANR	111622	Identifier	b		111503	0					
ANR	111623	Argument	p5		111503	1					
ANR	111624	Identifier	p5		111503	0					
ANR	111625	ExpressionStatement	Bfree ( b )	810:3:17335:17343	111503	1	True				
ANR	111626	CallExpression	Bfree ( b )		111503	0					
ANR	111627	Callee	Bfree		111503	0					
ANR	111628	Identifier	Bfree		111503	0					
ANR	111629	ArgumentList	b		111503	1					
ANR	111630	Argument	b		111503	0					
ANR	111631	Identifier	b		111503	0					
ANR	111632	ExpressionStatement	b = b1	811:3:17348:17354	111503	2	True				
ANR	111633	AssignmentExpression	b = b1		111503	0		=			
ANR	111634	Identifier	b		111503	0					
ANR	111635	Identifier	b1		111503	1					
ANR	111636	IfStatement	if ( ! ( k >>= 1 ) )		111503	1					
ANR	111637	Condition	! ( k >>= 1 )	813:6:17366:17375	111503	0	True				
ANR	111638	UnaryOperationExpression	! ( k >>= 1 )		111503	0					
ANR	111639	UnaryOperator	!		111503	0					
ANR	111640	AssignmentExpression	k >>= 1		111503	1		>>=			
ANR	111641	Identifier	k		111503	0					
ANR	111642	PrimaryExpression	1		111503	1					
ANR	111643	CompoundStatement		26:18:427:427	111503	1					
ANR	111644	BreakStatement	break ;	814:3:17383:17388	111503	0	True				
ANR	111645	IfStatement	if ( ! ( p51 = p5 -> next ) )		111503	2					
ANR	111646	Condition	! ( p51 = p5 -> next )	816:6:17400:17416	111503	0	True				
ANR	111647	UnaryOperationExpression	! ( p51 = p5 -> next )		111503	0					
ANR	111648	UnaryOperator	!		111503	0					
ANR	111649	AssignmentExpression	p51 = p5 -> next		111503	1		=			
ANR	111650	Identifier	p51		111503	0					
ANR	111651	PtrMemberAccess	p5 -> next		111503	1					
ANR	111652	Identifier	p5		111503	0					
ANR	111653	Identifier	next		111503	1					
ANR	111654	CompoundStatement		29:25:468:468	111503	1					
ANR	111655	IfStatement	if ( ! ( p51 = p5 -> next ) )		111503	0					
ANR	111656	Condition	! ( p51 = p5 -> next )	817:7:17428:17444	111503	0	True				
ANR	111657	UnaryOperationExpression	! ( p51 = p5 -> next )		111503	0					
ANR	111658	UnaryOperator	!		111503	0					
ANR	111659	AssignmentExpression	p51 = p5 -> next		111503	1		=			
ANR	111660	Identifier	p51		111503	0					
ANR	111661	PtrMemberAccess	p5 -> next		111503	1					
ANR	111662	Identifier	p5		111503	0					
ANR	111663	Identifier	next		111503	1					
ANR	111664	CompoundStatement		30:26:496:496	111503	1					
ANR	111665	ExpressionStatement	"p51 = p5 -> next = mult ( p5 , p5 )"	818:4:17453:17481	111503	0	True				
ANR	111666	AssignmentExpression	"p51 = p5 -> next = mult ( p5 , p5 )"		111503	0		=			
ANR	111667	Identifier	p51		111503	0					
ANR	111668	AssignmentExpression	"p5 -> next = mult ( p5 , p5 )"		111503	1		=			
ANR	111669	PtrMemberAccess	p5 -> next		111503	0					
ANR	111670	Identifier	p5		111503	0					
ANR	111671	Identifier	next		111503	1					
ANR	111672	CallExpression	"mult ( p5 , p5 )"		111503	1					
ANR	111673	Callee	mult		111503	0					
ANR	111674	Identifier	mult		111503	0					
ANR	111675	ArgumentList	p5		111503	1					
ANR	111676	Argument	p5		111503	0					
ANR	111677	Identifier	p5		111503	0					
ANR	111678	Argument	p5		111503	1					
ANR	111679	Identifier	p5		111503	0					
ANR	111680	ExpressionStatement	p51 -> next = 0	819:4:17487:17500	111503	1	True				
ANR	111681	AssignmentExpression	p51 -> next = 0		111503	0		=			
ANR	111682	PtrMemberAccess	p51 -> next		111503	0					
ANR	111683	Identifier	p51		111503	0					
ANR	111684	Identifier	next		111503	1					
ANR	111685	PrimaryExpression	0		111503	1					
ANR	111686	ExpressionStatement	p5 = p51	822:2:17513:17521	111503	3	True				
ANR	111687	AssignmentExpression	p5 = p51		111503	0		=			
ANR	111688	Identifier	p5		111503	0					
ANR	111689	Identifier	p51		111503	1					
ANR	111690	ExpressionStatement	_THREAD_PRIVATE_MUTEX_UNLOCK ( pow5mult_mutex )	824:1:17527:17571	111503	9	True				
ANR	111691	CallExpression	_THREAD_PRIVATE_MUTEX_UNLOCK ( pow5mult_mutex )		111503	0					
ANR	111692	Callee	_THREAD_PRIVATE_MUTEX_UNLOCK		111503	0					
ANR	111693	Identifier	_THREAD_PRIVATE_MUTEX_UNLOCK		111503	0					
ANR	111694	ArgumentList	pow5mult_mutex		111503	1					
ANR	111695	Argument	pow5mult_mutex		111503	0					
ANR	111696	Identifier	pow5mult_mutex		111503	0					
ANR	111697	ReturnStatement	return b ;	825:1:17574:17582	111503	10	True				
ANR	111698	Identifier	b		111503	0					
ANR	111699	ReturnType	static Bigint *		111503	1					
ANR	111700	Identifier	pow5mult		111503	2					
ANR	111701	ParameterList	"Bigint * b , int k"		111503	3					
ANR	111702	Parameter	Bigint * b	787:25:16932:16940	111503	0	True				
ANR	111703	ParameterType	Bigint *		111503	0					
ANR	111704	Identifier	b		111503	1					
ANR	111705	Parameter	int k	787:36:16943:16947	111503	1	True				
ANR	111706	ParameterType	int		111503	0					
ANR	111707	Identifier	k		111503	1					
ANR	111708	CFGEntryNode	ENTRY		111503		True				
ANR	111709	CFGExitNode	EXIT		111503		True				
ANR	111710	InfiniteForNode	true		111503		True				
ANR	111711	Symbol	b		111503						
ANR	111712	Symbol	mult		111503						
ANR	111713	Symbol	p5		111503						
ANR	111714	Symbol	multadd		111503						
ANR	111715	Symbol	* p5		111503						
ANR	111716	Symbol	i		111503						
ANR	111717	Symbol	p5 -> next		111503						
ANR	111718	Symbol	k		111503						
ANR	111719	Symbol	p51		111503						
ANR	111720	Symbol	b1		111503						
ANR	111721	Symbol	p5s		111503						
ANR	111722	Symbol	p51 -> next		111503						
ANR	111723	Symbol	* i		111503						
ANR	111724	Symbol	p05		111503						
ANR	111725	Symbol	* p51		111503						
ANR	111726	Symbol	pow5mult_mutex		111503						
ANR	111727	Symbol	i2b		111503						
ANR	111728	Symbol	* p05		111503						
ANR	111729	Function	lshift	829:0:17588:18341							
ANR	111730	FunctionDef	"lshift (Bigint * b , int k)"		111729	0					
ANR	111731	CompoundStatement		830:0:17628:18341	111729	0					
ANR	111732	IdentifierDeclStatement	"int i , k1 , n , n1 ;"	831:1:17631:17647	111729	0	True				
ANR	111733	IdentifierDecl	i		111729	0					
ANR	111734	IdentifierDeclType	int		111729	0					
ANR	111735	Identifier	i		111729	1					
ANR	111736	IdentifierDecl	k1		111729	1					
ANR	111737	IdentifierDeclType	int		111729	0					
ANR	111738	Identifier	k1		111729	1					
ANR	111739	IdentifierDecl	n		111729	2					
ANR	111740	IdentifierDeclType	int		111729	0					
ANR	111741	Identifier	n		111729	1					
ANR	111742	IdentifierDecl	n1		111729	3					
ANR	111743	IdentifierDeclType	int		111729	0					
ANR	111744	Identifier	n1		111729	1					
ANR	111745	IdentifierDeclStatement	Bigint * b1 ;	832:1:17650:17660	111729	1	True				
ANR	111746	IdentifierDecl	* b1		111729	0					
ANR	111747	IdentifierDeclType	Bigint *		111729	0					
ANR	111748	Identifier	b1		111729	1					
ANR	111749	IdentifierDeclStatement	"ULong * x , * x1 , * xe , z ;"	833:1:17663:17684	111729	2	True				
ANR	111750	IdentifierDecl	* x		111729	0					
ANR	111751	IdentifierDeclType	ULong *		111729	0					
ANR	111752	Identifier	x		111729	1					
ANR	111753	IdentifierDecl	* x1		111729	1					
ANR	111754	IdentifierDeclType	ULong *		111729	0					
ANR	111755	Identifier	x1		111729	1					
ANR	111756	IdentifierDecl	* xe		111729	2					
ANR	111757	IdentifierDeclType	ULong *		111729	0					
ANR	111758	Identifier	xe		111729	1					
ANR	111759	IdentifierDecl	z		111729	3					
ANR	111760	IdentifierDeclType	ULong		111729	0					
ANR	111761	Identifier	z		111729	1					
ANR	111762	ExpressionStatement	n = k >> 5	836:1:17703:17713	111729	3	True				
ANR	111763	AssignmentExpression	n = k >> 5		111729	0		=			
ANR	111764	Identifier	n		111729	0					
ANR	111765	ShiftExpression	k >> 5		111729	1		>>			
ANR	111766	Identifier	k		111729	0					
ANR	111767	PrimaryExpression	5		111729	1					
ANR	111768	ExpressionStatement	k1 = b -> k	840:1:17742:17751	111729	4	True				
ANR	111769	AssignmentExpression	k1 = b -> k		111729	0		=			
ANR	111770	Identifier	k1		111729	0					
ANR	111771	PtrMemberAccess	b -> k		111729	1					
ANR	111772	Identifier	b		111729	0					
ANR	111773	Identifier	k		111729	1					
ANR	111774	ExpressionStatement	n1 = n + b -> wds + 1	841:1:17754:17773	111729	5	True				
ANR	111775	AssignmentExpression	n1 = n + b -> wds + 1		111729	0		=			
ANR	111776	Identifier	n1		111729	0					
ANR	111777	AdditiveExpression	n + b -> wds + 1		111729	1		+			
ANR	111778	Identifier	n		111729	0					
ANR	111779	AdditiveExpression	b -> wds + 1		111729	1		+			
ANR	111780	PtrMemberAccess	b -> wds		111729	0					
ANR	111781	Identifier	b		111729	0					
ANR	111782	Identifier	wds		111729	1					
ANR	111783	PrimaryExpression	1		111729	1					
ANR	111784	ForStatement	for ( i = b -> maxwds ; n1 > i ; i <<= 1 )		111729	6					
ANR	111785	ForInit	i = b -> maxwds ;	842:5:17780:17793	111729	0	True				
ANR	111786	AssignmentExpression	i = b -> maxwds		111729	0		=			
ANR	111787	Identifier	i		111729	0					
ANR	111788	PtrMemberAccess	b -> maxwds		111729	1					
ANR	111789	Identifier	b		111729	0					
ANR	111790	Identifier	maxwds		111729	1					
ANR	111791	Condition	n1 > i	842:20:17795:17800	111729	1	True				
ANR	111792	RelationalExpression	n1 > i		111729	0		>			
ANR	111793	Identifier	n1		111729	0					
ANR	111794	Identifier	i		111729	1					
ANR	111795	AssignmentExpression	i <<= 1	842:28:17803:17809	111729	2	True	<<=			
ANR	111796	Identifier	i		111729	0					
ANR	111797	PrimaryExpression	1		111729	1					
ANR	111798	CompoundStatement		13:37:183:183	111729	3					
ANR	111799	ExpressionStatement	k1 ++	843:2:17816:17820	111729	0	True				
ANR	111800	PostIncDecOperationExpression	k1 ++		111729	0					
ANR	111801	Identifier	k1		111729	0					
ANR	111802	IncDec	++		111729	1					
ANR	111803	ExpressionStatement	b1 = Balloc ( k1 )	845:1:17826:17841	111729	7	True				
ANR	111804	AssignmentExpression	b1 = Balloc ( k1 )		111729	0		=			
ANR	111805	Identifier	b1		111729	0					
ANR	111806	CallExpression	Balloc ( k1 )		111729	1					
ANR	111807	Callee	Balloc		111729	0					
ANR	111808	Identifier	Balloc		111729	0					
ANR	111809	ArgumentList	k1		111729	1					
ANR	111810	Argument	k1		111729	0					
ANR	111811	Identifier	k1		111729	0					
ANR	111812	ExpressionStatement	x1 = b1 -> x	846:1:17844:17854	111729	8	True				
ANR	111813	AssignmentExpression	x1 = b1 -> x		111729	0		=			
ANR	111814	Identifier	x1		111729	0					
ANR	111815	PtrMemberAccess	b1 -> x		111729	1					
ANR	111816	Identifier	b1		111729	0					
ANR	111817	Identifier	x		111729	1					
ANR	111818	ForStatement	for ( i = 0 ; i < n ; i ++ )		111729	9					
ANR	111819	ForInit	i = 0 ;	847:5:17861:17866	111729	0	True				
ANR	111820	AssignmentExpression	i = 0		111729	0		=			
ANR	111821	Identifier	i		111729	0					
ANR	111822	PrimaryExpression	0		111729	1					
ANR	111823	Condition	i < n	847:12:17868:17872	111729	1	True				
ANR	111824	RelationalExpression	i < n		111729	0		<			
ANR	111825	Identifier	i		111729	0					
ANR	111826	Identifier	n		111729	1					
ANR	111827	PostIncDecOperationExpression	i ++	847:19:17875:17877	111729	2	True				
ANR	111828	Identifier	i		111729	0					
ANR	111829	IncDec	++		111729	1					
ANR	111830	CompoundStatement		18:24:251:251	111729	3					
ANR	111831	ExpressionStatement	* x1 ++ = 0	848:2:17884:17893	111729	0	True				
ANR	111832	AssignmentExpression	* x1 ++ = 0		111729	0		=			
ANR	111833	UnaryOperationExpression	* x1 ++		111729	0					
ANR	111834	UnaryOperator	*		111729	0					
ANR	111835	PostIncDecOperationExpression	x1 ++		111729	1					
ANR	111836	Identifier	x1		111729	0					
ANR	111837	IncDec	++		111729	1					
ANR	111838	PrimaryExpression	0		111729	1					
ANR	111839	ExpressionStatement	x = b -> x	850:1:17899:17907	111729	10	True				
ANR	111840	AssignmentExpression	x = b -> x		111729	0		=			
ANR	111841	Identifier	x		111729	0					
ANR	111842	PtrMemberAccess	b -> x		111729	1					
ANR	111843	Identifier	b		111729	0					
ANR	111844	Identifier	x		111729	1					
ANR	111845	ExpressionStatement	xe = x + b -> wds	851:1:17910:17925	111729	11	True				
ANR	111846	AssignmentExpression	xe = x + b -> wds		111729	0		=			
ANR	111847	Identifier	xe		111729	0					
ANR	111848	AdditiveExpression	x + b -> wds		111729	1		+			
ANR	111849	Identifier	x		111729	0					
ANR	111850	PtrMemberAccess	b -> wds		111729	1					
ANR	111851	Identifier	b		111729	0					
ANR	111852	Identifier	wds		111729	1					
ANR	111853	IfStatement	if ( k &= 0x1f )		111729	12					
ANR	111854	Condition	k &= 0x1f	853:5:17947:17955	111729	0	True				
ANR	111855	AssignmentExpression	k &= 0x1f		111729	0		&=			
ANR	111856	Identifier	k		111729	0					
ANR	111857	PrimaryExpression	0x1f		111729	1					
ANR	111858	CompoundStatement		24:16:329:329	111729	1					
ANR	111859	ExpressionStatement	k1 = 32 - k	854:2:17962:17973	111729	0	True				
ANR	111860	AssignmentExpression	k1 = 32 - k		111729	0		=			
ANR	111861	Identifier	k1		111729	0					
ANR	111862	AdditiveExpression	32 - k		111729	1		-			
ANR	111863	PrimaryExpression	32		111729	0					
ANR	111864	Identifier	k		111729	1					
ANR	111865	ExpressionStatement	z = 0	855:2:17977:17982	111729	1	True				
ANR	111866	AssignmentExpression	z = 0		111729	0		=			
ANR	111867	Identifier	z		111729	0					
ANR	111868	PrimaryExpression	0		111729	1					
ANR	111869	DoStatement	do		111729	2					
ANR	111870	CompoundStatement		27:5:360:360	111729	0					
ANR	111871	ExpressionStatement	* x1 ++ = * x << k | z	857:3:17994:18013	111729	0	True				
ANR	111872	AssignmentExpression	* x1 ++ = * x << k | z		111729	0		=			
ANR	111873	UnaryOperationExpression	* x1 ++		111729	0					
ANR	111874	UnaryOperator	*		111729	0					
ANR	111875	PostIncDecOperationExpression	x1 ++		111729	1					
ANR	111876	Identifier	x1		111729	0					
ANR	111877	IncDec	++		111729	1					
ANR	111878	InclusiveOrExpression	* x << k | z		111729	1		|			
ANR	111879	ShiftExpression	* x << k		111729	0		<<			
ANR	111880	UnaryOperationExpression	* x		111729	0					
ANR	111881	UnaryOperator	*		111729	0					
ANR	111882	Identifier	x		111729	1					
ANR	111883	Identifier	k		111729	1					
ANR	111884	Identifier	z		111729	1					
ANR	111885	ExpressionStatement	z = * x ++ >> k1	858:3:18018:18032	111729	1	True				
ANR	111886	AssignmentExpression	z = * x ++ >> k1		111729	0		=			
ANR	111887	Identifier	z		111729	0					
ANR	111888	ShiftExpression	* x ++ >> k1		111729	1		>>			
ANR	111889	UnaryOperationExpression	* x ++		111729	0					
ANR	111890	UnaryOperator	*		111729	0					
ANR	111891	PostIncDecOperationExpression	x ++		111729	1					
ANR	111892	Identifier	x		111729	0					
ANR	111893	IncDec	++		111729	1					
ANR	111894	Identifier	k1		111729	1					
ANR	111895	Condition	x < xe	860:8:18046:18051	111729	1	True				
ANR	111896	RelationalExpression	x < xe		111729	0		<			
ANR	111897	Identifier	x		111729	0					
ANR	111898	Identifier	xe		111729	1					
ANR	111899	IfStatement	if ( ( * x1 = z ) )		111729	3					
ANR	111900	Condition	* x1 = z	861:6:18061:18069	111729	0	True				
ANR	111901	AssignmentExpression	* x1 = z		111729	0		=			
ANR	111902	UnaryOperationExpression	* x1		111729	0					
ANR	111903	UnaryOperator	*		111729	0					
ANR	111904	Identifier	x1		111729	1					
ANR	111905	Identifier	z		111729	1					
ANR	111906	CompoundStatement		32:17:443:443	111729	1					
ANR	111907	ExpressionStatement	++ n1	862:3:18077:18081	111729	0	True				
ANR	111908	UnaryExpression	++ n1		111729	0					
ANR	111909	IncDec	++		111729	0					
ANR	111910	Identifier	n1		111729	1					
ANR	111911	ReturnType	static Bigint *		111729	1					
ANR	111912	Identifier	lshift		111729	2					
ANR	111913	ParameterList	"Bigint * b , int k"		111729	3					
ANR	111914	Parameter	Bigint * b	829:22:17610:17618	111729	0	True				
ANR	111915	ParameterType	Bigint *		111729	0					
ANR	111916	Identifier	b		111729	1					
ANR	111917	Parameter	int k	829:33:17621:17625	111729	1	True				
ANR	111918	ParameterType	int		111729	0					
ANR	111919	Identifier	k		111729	1					
ANR	111920	CFGEntryNode	ENTRY		111729		True				
ANR	111921	CFGExitNode	EXIT		111729		True				
ANR	111922	Symbol	b		111729						
ANR	111923	Symbol	b1 -> x		111729						
ANR	111924	Symbol	* x		111729						
ANR	111925	Symbol	n1		111729						
ANR	111926	Symbol	* x1 ++		111729						
ANR	111927	Symbol	k1		111729						
ANR	111928	Symbol	i		111729						
ANR	111929	Symbol	b -> k		111729						
ANR	111930	Symbol	k		111729						
ANR	111931	Symbol	b -> wds		111729						
ANR	111932	Symbol	* b		111729						
ANR	111933	Symbol	xe		111729						
ANR	111934	Symbol	n		111729						
ANR	111935	Symbol	b1		111729						
ANR	111936	Symbol	b -> maxwds		111729						
ANR	111937	Symbol	b -> x		111729						
ANR	111938	Symbol	* b1		111729						
ANR	111939	Symbol	x		111729						
ANR	111940	Symbol	x1		111729						
ANR	111941	Symbol	z		111729						
ANR	111942	Symbol	Balloc		111729						
ANR	111943	Symbol	* x ++		111729						
ANR	111944	Symbol	* x1		111729						
ANR	111945	Function	cmp	887:0:18344:18799							
ANR	111946	FunctionDef	"cmp (Bigint * a , Bigint * b)"		111945	0					
ANR	111947	CompoundStatement		888:0:18381:18799	111945	0					
ANR	111948	IdentifierDeclStatement	"ULong * xa , * xa0 , * xb , * xb0 ;"	889:1:18384:18410	111945	0	True				
ANR	111949	IdentifierDecl	* xa		111945	0					
ANR	111950	IdentifierDeclType	ULong *		111945	0					
ANR	111951	Identifier	xa		111945	1					
ANR	111952	IdentifierDecl	* xa0		111945	1					
ANR	111953	IdentifierDeclType	ULong *		111945	0					
ANR	111954	Identifier	xa0		111945	1					
ANR	111955	IdentifierDecl	* xb		111945	2					
ANR	111956	IdentifierDeclType	ULong *		111945	0					
ANR	111957	Identifier	xb		111945	1					
ANR	111958	IdentifierDecl	* xb0		111945	3					
ANR	111959	IdentifierDeclType	ULong *		111945	0					
ANR	111960	Identifier	xb0		111945	1					
ANR	111961	IdentifierDeclStatement	"int i , j ;"	890:1:18413:18421	111945	1	True				
ANR	111962	IdentifierDecl	i		111945	0					
ANR	111963	IdentifierDeclType	int		111945	0					
ANR	111964	Identifier	i		111945	1					
ANR	111965	IdentifierDecl	j		111945	1					
ANR	111966	IdentifierDeclType	int		111945	0					
ANR	111967	Identifier	j		111945	1					
ANR	111968	ExpressionStatement	i = a -> wds	892:1:18425:18435	111945	2	True				
ANR	111969	AssignmentExpression	i = a -> wds		111945	0		=			
ANR	111970	Identifier	i		111945	0					
ANR	111971	PtrMemberAccess	a -> wds		111945	1					
ANR	111972	Identifier	a		111945	0					
ANR	111973	Identifier	wds		111945	1					
ANR	111974	ExpressionStatement	j = b -> wds	893:1:18438:18448	111945	3	True				
ANR	111975	AssignmentExpression	j = b -> wds		111945	0		=			
ANR	111976	Identifier	j		111945	0					
ANR	111977	PtrMemberAccess	b -> wds		111945	1					
ANR	111978	Identifier	b		111945	0					
ANR	111979	Identifier	wds		111945	1					
ANR	111980	IfStatement	if ( i > 1 && ! a -> x [ i - 1 ] )		111945	4					
ANR	111981	Condition	i > 1 && ! a -> x [ i - 1 ]	895:5:18468:18486	111945	0	True				
ANR	111982	AndExpression	i > 1 && ! a -> x [ i - 1 ]		111945	0		&&			
ANR	111983	RelationalExpression	i > 1		111945	0		>			
ANR	111984	Identifier	i		111945	0					
ANR	111985	PrimaryExpression	1		111945	1					
ANR	111986	UnaryOperationExpression	! a -> x [ i - 1 ]		111945	1					
ANR	111987	UnaryOperator	!		111945	0					
ANR	111988	ArrayIndexing	a -> x [ i - 1 ]		111945	1					
ANR	111989	PtrMemberAccess	a -> x		111945	0					
ANR	111990	Identifier	a		111945	0					
ANR	111991	Identifier	x		111945	1					
ANR	111992	AdditiveExpression	i - 1		111945	1		-			
ANR	111993	Identifier	i		111945	0					
ANR	111994	PrimaryExpression	1		111945	1					
ANR	111995	ExpressionStatement	"Bug ( ""cmp called with a->x[a->wds-1] == 0"" )"	896:2:18491:18533	111945	1	True				
ANR	111996	CallExpression	"Bug ( ""cmp called with a->x[a->wds-1] == 0"" )"		111945	0					
ANR	111997	Callee	Bug		111945	0					
ANR	111998	Identifier	Bug		111945	0					
ANR	111999	ArgumentList	"""cmp called with a->x[a->wds-1] == 0"""		111945	1					
ANR	112000	Argument	"""cmp called with a->x[a->wds-1] == 0"""		111945	0					
ANR	112001	PrimaryExpression	"""cmp called with a->x[a->wds-1] == 0"""		111945	0					
ANR	112002	IfStatement	if ( j > 1 && ! b -> x [ j - 1 ] )		111945	5					
ANR	112003	Condition	j > 1 && ! b -> x [ j - 1 ]	897:5:18540:18558	111945	0	True				
ANR	112004	AndExpression	j > 1 && ! b -> x [ j - 1 ]		111945	0		&&			
ANR	112005	RelationalExpression	j > 1		111945	0		>			
ANR	112006	Identifier	j		111945	0					
ANR	112007	PrimaryExpression	1		111945	1					
ANR	112008	UnaryOperationExpression	! b -> x [ j - 1 ]		111945	1					
ANR	112009	UnaryOperator	!		111945	0					
ANR	112010	ArrayIndexing	b -> x [ j - 1 ]		111945	1					
ANR	112011	PtrMemberAccess	b -> x		111945	0					
ANR	112012	Identifier	b		111945	0					
ANR	112013	Identifier	x		111945	1					
ANR	112014	AdditiveExpression	j - 1		111945	1		-			
ANR	112015	Identifier	j		111945	0					
ANR	112016	PrimaryExpression	1		111945	1					
ANR	112017	ExpressionStatement	"Bug ( ""cmp called with b->x[b->wds-1] == 0"" )"	898:2:18563:18605	111945	1	True				
ANR	112018	CallExpression	"Bug ( ""cmp called with b->x[b->wds-1] == 0"" )"		111945	0					
ANR	112019	Callee	Bug		111945	0					
ANR	112020	Identifier	Bug		111945	0					
ANR	112021	ArgumentList	"""cmp called with b->x[b->wds-1] == 0"""		111945	1					
ANR	112022	Argument	"""cmp called with b->x[b->wds-1] == 0"""		111945	0					
ANR	112023	PrimaryExpression	"""cmp called with b->x[b->wds-1] == 0"""		111945	0					
ANR	112024	IfStatement	if ( i -= j )		111945	6					
ANR	112025	Condition	i -= j	900:5:18619:18624	111945	0	True				
ANR	112026	AssignmentExpression	i -= j		111945	0		-=			
ANR	112027	Identifier	i		111945	0					
ANR	112028	Identifier	j		111945	1					
ANR	112029	ReturnStatement	return i ;	901:2:18629:18637	111945	1	True				
ANR	112030	Identifier	i		111945	0					
ANR	112031	ExpressionStatement	xa0 = a -> x	902:1:18640:18650	111945	7	True				
ANR	112032	AssignmentExpression	xa0 = a -> x		111945	0		=			
ANR	112033	Identifier	xa0		111945	0					
ANR	112034	PtrMemberAccess	a -> x		111945	1					
ANR	112035	Identifier	a		111945	0					
ANR	112036	Identifier	x		111945	1					
ANR	112037	ExpressionStatement	xa = xa0 + j	903:1:18653:18665	111945	8	True				
ANR	112038	AssignmentExpression	xa = xa0 + j		111945	0		=			
ANR	112039	Identifier	xa		111945	0					
ANR	112040	AdditiveExpression	xa0 + j		111945	1		+			
ANR	112041	Identifier	xa0		111945	0					
ANR	112042	Identifier	j		111945	1					
ANR	112043	ExpressionStatement	xb0 = b -> x	904:1:18668:18678	111945	9	True				
ANR	112044	AssignmentExpression	xb0 = b -> x		111945	0		=			
ANR	112045	Identifier	xb0		111945	0					
ANR	112046	PtrMemberAccess	b -> x		111945	1					
ANR	112047	Identifier	b		111945	0					
ANR	112048	Identifier	x		111945	1					
ANR	112049	ExpressionStatement	xb = xb0 + j	905:1:18681:18693	111945	10	True				
ANR	112050	AssignmentExpression	xb = xb0 + j		111945	0		=			
ANR	112051	Identifier	xb		111945	0					
ANR	112052	AdditiveExpression	xb0 + j		111945	1		+			
ANR	112053	Identifier	xb0		111945	0					
ANR	112054	Identifier	j		111945	1					
ANR	112055	ForStatement	for ( ; ; )		111945	11					
ANR	112056	CompoundStatement		19:9:322:322	111945	0					
ANR	112057	IfStatement	if ( * -- xa != * -- xb )		111945	0					
ANR	112058	Condition	* -- xa != * -- xb	907:6:18712:18725	111945	0	True				
ANR	112059	EqualityExpression	* -- xa != * -- xb		111945	0		!=			
ANR	112060	UnaryOperationExpression	* -- xa		111945	0					
ANR	112061	UnaryOperator	*		111945	0					
ANR	112062	UnaryExpression	-- xa		111945	1					
ANR	112063	IncDec	--		111945	0					
ANR	112064	Identifier	xa		111945	1					
ANR	112065	UnaryOperationExpression	* -- xb		111945	1					
ANR	112066	UnaryOperator	*		111945	0					
ANR	112067	UnaryExpression	-- xb		111945	1					
ANR	112068	IncDec	--		111945	0					
ANR	112069	Identifier	xb		111945	1					
ANR	112070	ReturnStatement	return * xa < * xb ? - 1 : 1 ;	908:3:18731:18756	111945	1	True				
ANR	112071	ConditionalExpression	* xa < * xb ? - 1 : 1		111945	0					
ANR	112072	Condition	* xa < * xb		111945	0					
ANR	112073	RelationalExpression	* xa < * xb		111945	0		<			
ANR	112074	UnaryOperationExpression	* xa		111945	0					
ANR	112075	UnaryOperator	*		111945	0					
ANR	112076	Identifier	xa		111945	1					
ANR	112077	UnaryOperationExpression	* xb		111945	1					
ANR	112078	UnaryOperator	*		111945	0					
ANR	112079	Identifier	xb		111945	1					
ANR	112080	UnaryOperationExpression	- 1		111945	1					
ANR	112081	UnaryOperator	-		111945	0					
ANR	112082	PrimaryExpression	1		111945	1					
ANR	112083	PrimaryExpression	1		111945	2					
ANR	112084	IfStatement	if ( xa <= xa0 )		111945	1					
ANR	112085	Condition	xa <= xa0	909:6:18764:18772	111945	0	True				
ANR	112086	RelationalExpression	xa <= xa0		111945	0		<=			
ANR	112087	Identifier	xa		111945	0					
ANR	112088	Identifier	xa0		111945	1					
ANR	112089	BreakStatement	break ;	910:3:18778:18783	111945	1	True				
ANR	112090	ReturnStatement	return 0 ;	912:1:18789:18797	111945	12	True				
ANR	112091	PrimaryExpression	0		111945	0					
ANR	112092	ReturnType	static int		111945	1					
ANR	112093	Identifier	cmp		111945	2					
ANR	112094	ParameterList	"Bigint * a , Bigint * b"		111945	3					
ANR	112095	Parameter	Bigint * a	887:15:18359:18367	111945	0	True				
ANR	112096	ParameterType	Bigint *		111945	0					
ANR	112097	Identifier	a		111945	1					
ANR	112098	Parameter	Bigint * b	887:26:18370:18378	111945	1	True				
ANR	112099	ParameterType	Bigint *		111945	0					
ANR	112100	Identifier	b		111945	1					
ANR	112101	CFGEntryNode	ENTRY		111945		True				
ANR	112102	CFGExitNode	EXIT		111945		True				
ANR	112103	InfiniteForNode	true		111945		True				
ANR	112104	Symbol	a		111945						
ANR	112105	Symbol	b		111945						
ANR	112106	Symbol	xa0		111945						
ANR	112107	Symbol	xb0		111945						
ANR	112108	Symbol	xa		111945						
ANR	112109	Symbol	i		111945						
ANR	112110	Symbol	* a -> x		111945						
ANR	112111	Symbol	* * b		111945						
ANR	112112	Symbol	xb		111945						
ANR	112113	Symbol	j		111945						
ANR	112114	Symbol	* * a		111945						
ANR	112115	Symbol	a -> wds		111945						
ANR	112116	Symbol	* a		111945						
ANR	112117	Symbol	b -> wds		111945						
ANR	112118	Symbol	* b		111945						
ANR	112119	Symbol	* xa		111945						
ANR	112120	Symbol	* b -> x		111945						
ANR	112121	Symbol	* i		111945						
ANR	112122	Symbol	* xb		111945						
ANR	112123	Symbol	* j		111945						
ANR	112124	Symbol	b -> x		111945						
ANR	112125	Symbol	a -> x		111945						
ANR	112126	Symbol	* -- xb		111945						
ANR	112127	Symbol	* -- xa		111945						
ANR	112128	Function	diff	916:0:18803:20042							
ANR	112129	FunctionDef	"diff (Bigint * a , Bigint * b)"		112128	0					
ANR	112130	CompoundStatement		917:0:18846:20042	112128	0					
ANR	112131	IdentifierDeclStatement	Bigint * c ;	918:1:18849:18858	112128	0	True				
ANR	112132	IdentifierDecl	* c		112128	0					
ANR	112133	IdentifierDeclType	Bigint *		112128	0					
ANR	112134	Identifier	c		112128	1					
ANR	112135	IdentifierDeclStatement	"int i , wa , wb ;"	919:1:18861:18874	112128	1	True				
ANR	112136	IdentifierDecl	i		112128	0					
ANR	112137	IdentifierDeclType	int		112128	0					
ANR	112138	Identifier	i		112128	1					
ANR	112139	IdentifierDecl	wa		112128	1					
ANR	112140	IdentifierDeclType	int		112128	0					
ANR	112141	Identifier	wa		112128	1					
ANR	112142	IdentifierDecl	wb		112128	2					
ANR	112143	IdentifierDeclType	int		112128	0					
ANR	112144	Identifier	wb		112128	1					
ANR	112145	IdentifierDeclStatement	"Long borrow , y ;"	920:1:18877:18891	112128	2	True				
ANR	112146	IdentifierDecl	borrow		112128	0					
ANR	112147	IdentifierDeclType	Long		112128	0					
ANR	112148	Identifier	borrow		112128	1					
ANR	112149	IdentifierDecl	y		112128	1					
ANR	112150	IdentifierDeclType	Long		112128	0					
ANR	112151	Identifier	y		112128	1					
ANR	112152	IdentifierDeclStatement	"ULong * xa , * xae , * xb , * xbe , * xc ;"	921:1:18928:18959	112128	3	True				
ANR	112153	IdentifierDecl	* xa		112128	0					
ANR	112154	IdentifierDeclType	ULong *		112128	0					
ANR	112155	Identifier	xa		112128	1					
ANR	112156	IdentifierDecl	* xae		112128	1					
ANR	112157	IdentifierDeclType	ULong *		112128	0					
ANR	112158	Identifier	xae		112128	1					
ANR	112159	IdentifierDecl	* xb		112128	2					
ANR	112160	IdentifierDeclType	ULong *		112128	0					
ANR	112161	Identifier	xb		112128	1					
ANR	112162	IdentifierDecl	* xbe		112128	3					
ANR	112163	IdentifierDeclType	ULong *		112128	0					
ANR	112164	Identifier	xbe		112128	1					
ANR	112165	IdentifierDecl	* xc		112128	4					
ANR	112166	IdentifierDeclType	ULong *		112128	0					
ANR	112167	Identifier	xc		112128	1					
ANR	112168	IdentifierDeclStatement	Long z ;	923:1:18977:18983	112128	4	True				
ANR	112169	IdentifierDecl	z		112128	0					
ANR	112170	IdentifierDeclType	Long		112128	0					
ANR	112171	Identifier	z		112128	1					
ANR	112172	ExpressionStatement	"i = cmp ( a , b )"	926:1:18994:19006	112128	5	True				
ANR	112173	AssignmentExpression	"i = cmp ( a , b )"		112128	0		=			
ANR	112174	Identifier	i		112128	0					
ANR	112175	CallExpression	"cmp ( a , b )"		112128	1					
ANR	112176	Callee	cmp		112128	0					
ANR	112177	Identifier	cmp		112128	0					
ANR	112178	ArgumentList	a		112128	1					
ANR	112179	Argument	a		112128	0					
ANR	112180	Identifier	a		112128	0					
ANR	112181	Argument	b		112128	1					
ANR	112182	Identifier	b		112128	0					
ANR	112183	IfStatement	if ( ! i )		112128	6					
ANR	112184	Condition	! i	927:5:19013:19014	112128	0	True				
ANR	112185	UnaryOperationExpression	! i		112128	0					
ANR	112186	UnaryOperator	!		112128	0					
ANR	112187	Identifier	i		112128	1					
ANR	112188	CompoundStatement		11:9:170:170	112128	1					
ANR	112189	ExpressionStatement	c = Balloc ( 0 )	928:2:19021:19034	112128	0	True				
ANR	112190	AssignmentExpression	c = Balloc ( 0 )		112128	0		=			
ANR	112191	Identifier	c		112128	0					
ANR	112192	CallExpression	Balloc ( 0 )		112128	1					
ANR	112193	Callee	Balloc		112128	0					
ANR	112194	Identifier	Balloc		112128	0					
ANR	112195	ArgumentList	0		112128	1					
ANR	112196	Argument	0		112128	0					
ANR	112197	PrimaryExpression	0		112128	0					
ANR	112198	ExpressionStatement	c -> wds = 1	929:2:19038:19048	112128	1	True				
ANR	112199	AssignmentExpression	c -> wds = 1		112128	0		=			
ANR	112200	PtrMemberAccess	c -> wds		112128	0					
ANR	112201	Identifier	c		112128	0					
ANR	112202	Identifier	wds		112128	1					
ANR	112203	PrimaryExpression	1		112128	1					
ANR	112204	ExpressionStatement	c -> x [ 0 ] = 0	930:2:19052:19063	112128	2	True				
ANR	112205	AssignmentExpression	c -> x [ 0 ] = 0		112128	0		=			
ANR	112206	ArrayIndexing	c -> x [ 0 ]		112128	0					
ANR	112207	PtrMemberAccess	c -> x		112128	0					
ANR	112208	Identifier	c		112128	0					
ANR	112209	Identifier	x		112128	1					
ANR	112210	PrimaryExpression	0		112128	1					
ANR	112211	PrimaryExpression	0		112128	1					
ANR	112212	ReturnStatement	return c ;	931:2:19067:19075	112128	3	True				
ANR	112213	Identifier	c		112128	0					
ANR	112214	IfStatement	if ( i < 0 )		112128	7					
ANR	112215	Condition	i < 0	933:5:19085:19089	112128	0	True				
ANR	112216	RelationalExpression	i < 0		112128	0		<			
ANR	112217	Identifier	i		112128	0					
ANR	112218	PrimaryExpression	0		112128	1					
ANR	112219	CompoundStatement		17:12:245:245	112128	1					
ANR	112220	ExpressionStatement	c = a	934:2:19096:19101	112128	0	True				
ANR	112221	AssignmentExpression	c = a		112128	0		=			
ANR	112222	Identifier	c		112128	0					
ANR	112223	Identifier	a		112128	1					
ANR	112224	ExpressionStatement	a = b	935:2:19105:19110	112128	1	True				
ANR	112225	AssignmentExpression	a = b		112128	0		=			
ANR	112226	Identifier	a		112128	0					
ANR	112227	Identifier	b		112128	1					
ANR	112228	ExpressionStatement	b = c	936:2:19114:19119	112128	2	True				
ANR	112229	AssignmentExpression	b = c		112128	0		=			
ANR	112230	Identifier	b		112128	0					
ANR	112231	Identifier	c		112128	1					
ANR	112232	ExpressionStatement	i = 1	937:2:19123:19128	112128	3	True				
ANR	112233	AssignmentExpression	i = 1		112128	0		=			
ANR	112234	Identifier	i		112128	0					
ANR	112235	PrimaryExpression	1		112128	1					
ANR	112236	ElseStatement	else		112128	0					
ANR	112237	CompoundStatement		22:8:291:291	112128	0					
ANR	112238	ExpressionStatement	i = 0	939:2:19142:19147	112128	0	True				
ANR	112239	AssignmentExpression	i = 0		112128	0		=			
ANR	112240	Identifier	i		112128	0					
ANR	112241	PrimaryExpression	0		112128	1					
ANR	112242	ExpressionStatement	c = Balloc ( a -> k )	941:1:19153:19169	112128	8	True				
ANR	112243	AssignmentExpression	c = Balloc ( a -> k )		112128	0		=			
ANR	112244	Identifier	c		112128	0					
ANR	112245	CallExpression	Balloc ( a -> k )		112128	1					
ANR	112246	Callee	Balloc		112128	0					
ANR	112247	Identifier	Balloc		112128	0					
ANR	112248	ArgumentList	a -> k		112128	1					
ANR	112249	Argument	a -> k		112128	0					
ANR	112250	PtrMemberAccess	a -> k		112128	0					
ANR	112251	Identifier	a		112128	0					
ANR	112252	Identifier	k		112128	1					
ANR	112253	ExpressionStatement	c -> sign = i	942:1:19172:19183	112128	9	True				
ANR	112254	AssignmentExpression	c -> sign = i		112128	0		=			
ANR	112255	PtrMemberAccess	c -> sign		112128	0					
ANR	112256	Identifier	c		112128	0					
ANR	112257	Identifier	sign		112128	1					
ANR	112258	Identifier	i		112128	1					
ANR	112259	ExpressionStatement	wa = a -> wds	943:1:19186:19197	112128	10	True				
ANR	112260	AssignmentExpression	wa = a -> wds		112128	0		=			
ANR	112261	Identifier	wa		112128	0					
ANR	112262	PtrMemberAccess	a -> wds		112128	1					
ANR	112263	Identifier	a		112128	0					
ANR	112264	Identifier	wds		112128	1					
ANR	112265	ExpressionStatement	xa = a -> x	944:1:19200:19209	112128	11	True				
ANR	112266	AssignmentExpression	xa = a -> x		112128	0		=			
ANR	112267	Identifier	xa		112128	0					
ANR	112268	PtrMemberAccess	a -> x		112128	1					
ANR	112269	Identifier	a		112128	0					
ANR	112270	Identifier	x		112128	1					
ANR	112271	ExpressionStatement	xae = xa + wa	945:1:19212:19225	112128	12	True				
ANR	112272	AssignmentExpression	xae = xa + wa		112128	0		=			
ANR	112273	Identifier	xae		112128	0					
ANR	112274	AdditiveExpression	xa + wa		112128	1		+			
ANR	112275	Identifier	xa		112128	0					
ANR	112276	Identifier	wa		112128	1					
ANR	112277	ExpressionStatement	wb = b -> wds	946:1:19228:19239	112128	13	True				
ANR	112278	AssignmentExpression	wb = b -> wds		112128	0		=			
ANR	112279	Identifier	wb		112128	0					
ANR	112280	PtrMemberAccess	b -> wds		112128	1					
ANR	112281	Identifier	b		112128	0					
ANR	112282	Identifier	wds		112128	1					
ANR	112283	ExpressionStatement	xb = b -> x	947:1:19242:19251	112128	14	True				
ANR	112284	AssignmentExpression	xb = b -> x		112128	0		=			
ANR	112285	Identifier	xb		112128	0					
ANR	112286	PtrMemberAccess	b -> x		112128	1					
ANR	112287	Identifier	b		112128	0					
ANR	112288	Identifier	x		112128	1					
ANR	112289	ExpressionStatement	xbe = xb + wb	948:1:19254:19267	112128	15	True				
ANR	112290	AssignmentExpression	xbe = xb + wb		112128	0		=			
ANR	112291	Identifier	xbe		112128	0					
ANR	112292	AdditiveExpression	xb + wb		112128	1		+			
ANR	112293	Identifier	xb		112128	0					
ANR	112294	Identifier	wb		112128	1					
ANR	112295	ExpressionStatement	xc = c -> x	949:1:19270:19279	112128	16	True				
ANR	112296	AssignmentExpression	xc = c -> x		112128	0		=			
ANR	112297	Identifier	xc		112128	0					
ANR	112298	PtrMemberAccess	c -> x		112128	1					
ANR	112299	Identifier	c		112128	0					
ANR	112300	Identifier	x		112128	1					
ANR	112301	ExpressionStatement	borrow = 0	950:1:19282:19292	112128	17	True				
ANR	112302	AssignmentExpression	borrow = 0		112128	0		=			
ANR	112303	Identifier	borrow		112128	0					
ANR	112304	PrimaryExpression	0		112128	1					
ANR	112305	DoStatement	do		112128	18					
ANR	112306	CompoundStatement		36:4:466:466	112128	0					
ANR	112307	ExpressionStatement	y = ( * xa & 0xffff ) - ( * xb & 0xffff ) + borrow	953:2:19317:19361	112128	0	True				
ANR	112308	AssignmentExpression	y = ( * xa & 0xffff ) - ( * xb & 0xffff ) + borrow		112128	0		=			
ANR	112309	Identifier	y		112128	0					
ANR	112310	AdditiveExpression	( * xa & 0xffff ) - ( * xb & 0xffff ) + borrow		112128	1		-			
ANR	112311	BitAndExpression	* xa & 0xffff		112128	0		&			
ANR	112312	UnaryOperationExpression	* xa		112128	0					
ANR	112313	UnaryOperator	*		112128	0					
ANR	112314	Identifier	xa		112128	1					
ANR	112315	PrimaryExpression	0xffff		112128	1					
ANR	112316	AdditiveExpression	( * xb & 0xffff ) + borrow		112128	1		+			
ANR	112317	BitAndExpression	* xb & 0xffff		112128	0		&			
ANR	112318	UnaryOperationExpression	* xb		112128	0					
ANR	112319	UnaryOperator	*		112128	0					
ANR	112320	Identifier	xb		112128	1					
ANR	112321	PrimaryExpression	0xffff		112128	1					
ANR	112322	Identifier	borrow		112128	1					
ANR	112323	ExpressionStatement	borrow = y >> 16	954:2:19365:19381	112128	1	True				
ANR	112324	AssignmentExpression	borrow = y >> 16		112128	0		=			
ANR	112325	Identifier	borrow		112128	0					
ANR	112326	ShiftExpression	y >> 16		112128	1		>>			
ANR	112327	Identifier	y		112128	0					
ANR	112328	PrimaryExpression	16		112128	1					
ANR	112329	ExpressionStatement	"Sign_Extend ( borrow , y )"	955:2:19385:19407	112128	2	True				
ANR	112330	CallExpression	"Sign_Extend ( borrow , y )"		112128	0					
ANR	112331	Callee	Sign_Extend		112128	0					
ANR	112332	Identifier	Sign_Extend		112128	0					
ANR	112333	ArgumentList	borrow		112128	1					
ANR	112334	Argument	borrow		112128	0					
ANR	112335	Identifier	borrow		112128	0					
ANR	112336	Argument	y		112128	1					
ANR	112337	Identifier	y		112128	0					
ANR	112338	ExpressionStatement	z = ( * xa ++ >> 16 ) - ( * xb ++ >> 16 ) + borrow	956:2:19411:19453	112128	3	True				
ANR	112339	AssignmentExpression	z = ( * xa ++ >> 16 ) - ( * xb ++ >> 16 ) + borrow		112128	0		=			
ANR	112340	Identifier	z		112128	0					
ANR	112341	AdditiveExpression	( * xa ++ >> 16 ) - ( * xb ++ >> 16 ) + borrow		112128	1		-			
ANR	112342	ShiftExpression	* xa ++ >> 16		112128	0		>>			
ANR	112343	UnaryOperationExpression	* xa ++		112128	0					
ANR	112344	UnaryOperator	*		112128	0					
ANR	112345	PostIncDecOperationExpression	xa ++		112128	1					
ANR	112346	Identifier	xa		112128	0					
ANR	112347	IncDec	++		112128	1					
ANR	112348	PrimaryExpression	16		112128	1					
ANR	112349	AdditiveExpression	( * xb ++ >> 16 ) + borrow		112128	1		+			
ANR	112350	ShiftExpression	* xb ++ >> 16		112128	0		>>			
ANR	112351	UnaryOperationExpression	* xb ++		112128	0					
ANR	112352	UnaryOperator	*		112128	0					
ANR	112353	PostIncDecOperationExpression	xb ++		112128	1					
ANR	112354	Identifier	xb		112128	0					
ANR	112355	IncDec	++		112128	1					
ANR	112356	PrimaryExpression	16		112128	1					
ANR	112357	Identifier	borrow		112128	1					
ANR	112358	ExpressionStatement	borrow = z >> 16	957:2:19457:19473	112128	4	True				
ANR	112359	AssignmentExpression	borrow = z >> 16		112128	0		=			
ANR	112360	Identifier	borrow		112128	0					
ANR	112361	ShiftExpression	z >> 16		112128	1		>>			
ANR	112362	Identifier	z		112128	0					
ANR	112363	PrimaryExpression	16		112128	1					
ANR	112364	ExpressionStatement	"Sign_Extend ( borrow , z )"	958:2:19477:19499	112128	5	True				
ANR	112365	CallExpression	"Sign_Extend ( borrow , z )"		112128	0					
ANR	112366	Callee	Sign_Extend		112128	0					
ANR	112367	Identifier	Sign_Extend		112128	0					
ANR	112368	ArgumentList	borrow		112128	1					
ANR	112369	Argument	borrow		112128	0					
ANR	112370	Identifier	borrow		112128	0					
ANR	112371	Argument	z		112128	1					
ANR	112372	Identifier	z		112128	0					
ANR	112373	ExpressionStatement	"Storeinc ( xc , z , y )"	959:2:19503:19521	112128	6	True				
ANR	112374	CallExpression	"Storeinc ( xc , z , y )"		112128	0					
ANR	112375	Callee	Storeinc		112128	0					
ANR	112376	Identifier	Storeinc		112128	0					
ANR	112377	ArgumentList	xc		112128	1					
ANR	112378	Argument	xc		112128	0					
ANR	112379	Identifier	xc		112128	0					
ANR	112380	Argument	z		112128	1					
ANR	112381	Identifier	z		112128	0					
ANR	112382	Argument	y		112128	2					
ANR	112383	Identifier	y		112128	0					
ANR	112384	Condition	xb < xbe	960:9:19532:19539	112128	1	True				
ANR	112385	RelationalExpression	xb < xbe		112128	0		<			
ANR	112386	Identifier	xb		112128	0					
ANR	112387	Identifier	xbe		112128	1					
ANR	112388	WhileStatement	while ( xa < xae )		112128	19					
ANR	112389	Condition	xa < xae	961:7:19550:19557	112128	0	True				
ANR	112390	RelationalExpression	xa < xae		112128	0		<			
ANR	112391	Identifier	xa		112128	0					
ANR	112392	Identifier	xae		112128	1					
ANR	112393	CompoundStatement		45:17:713:713	112128	1					
ANR	112394	ExpressionStatement	y = ( * xa & 0xffff ) + borrow	962:2:19564:19591	112128	0	True				
ANR	112395	AssignmentExpression	y = ( * xa & 0xffff ) + borrow		112128	0		=			
ANR	112396	Identifier	y		112128	0					
ANR	112397	AdditiveExpression	( * xa & 0xffff ) + borrow		112128	1		+			
ANR	112398	BitAndExpression	* xa & 0xffff		112128	0		&			
ANR	112399	UnaryOperationExpression	* xa		112128	0					
ANR	112400	UnaryOperator	*		112128	0					
ANR	112401	Identifier	xa		112128	1					
ANR	112402	PrimaryExpression	0xffff		112128	1					
ANR	112403	Identifier	borrow		112128	1					
ANR	112404	ExpressionStatement	borrow = y >> 16	963:2:19595:19611	112128	1	True				
ANR	112405	AssignmentExpression	borrow = y >> 16		112128	0		=			
ANR	112406	Identifier	borrow		112128	0					
ANR	112407	ShiftExpression	y >> 16		112128	1		>>			
ANR	112408	Identifier	y		112128	0					
ANR	112409	PrimaryExpression	16		112128	1					
ANR	112410	ExpressionStatement	"Sign_Extend ( borrow , y )"	964:2:19615:19637	112128	2	True				
ANR	112411	CallExpression	"Sign_Extend ( borrow , y )"		112128	0					
ANR	112412	Callee	Sign_Extend		112128	0					
ANR	112413	Identifier	Sign_Extend		112128	0					
ANR	112414	ArgumentList	borrow		112128	1					
ANR	112415	Argument	borrow		112128	0					
ANR	112416	Identifier	borrow		112128	0					
ANR	112417	Argument	y		112128	1					
ANR	112418	Identifier	y		112128	0					
ANR	112419	ExpressionStatement	z = ( * xa ++ >> 16 ) + borrow	965:2:19641:19667	112128	3	True				
ANR	112420	AssignmentExpression	z = ( * xa ++ >> 16 ) + borrow		112128	0		=			
ANR	112421	Identifier	z		112128	0					
ANR	112422	AdditiveExpression	( * xa ++ >> 16 ) + borrow		112128	1		+			
ANR	112423	ShiftExpression	* xa ++ >> 16		112128	0		>>			
ANR	112424	UnaryOperationExpression	* xa ++		112128	0					
ANR	112425	UnaryOperator	*		112128	0					
ANR	112426	PostIncDecOperationExpression	xa ++		112128	1					
ANR	112427	Identifier	xa		112128	0					
ANR	112428	IncDec	++		112128	1					
ANR	112429	PrimaryExpression	16		112128	1					
ANR	112430	Identifier	borrow		112128	1					
ANR	112431	ExpressionStatement	borrow = z >> 16	966:2:19671:19687	112128	4	True				
ANR	112432	AssignmentExpression	borrow = z >> 16		112128	0		=			
ANR	112433	Identifier	borrow		112128	0					
ANR	112434	ShiftExpression	z >> 16		112128	1		>>			
ANR	112435	Identifier	z		112128	0					
ANR	112436	PrimaryExpression	16		112128	1					
ANR	112437	ExpressionStatement	"Sign_Extend ( borrow , z )"	967:2:19691:19713	112128	5	True				
ANR	112438	CallExpression	"Sign_Extend ( borrow , z )"		112128	0					
ANR	112439	Callee	Sign_Extend		112128	0					
ANR	112440	Identifier	Sign_Extend		112128	0					
ANR	112441	ArgumentList	borrow		112128	1					
ANR	112442	Argument	borrow		112128	0					
ANR	112443	Identifier	borrow		112128	0					
ANR	112444	Argument	z		112128	1					
ANR	112445	Identifier	z		112128	0					
ANR	112446	ExpressionStatement	"Storeinc ( xc , z , y )"	968:2:19717:19735	112128	6	True				
ANR	112447	CallExpression	"Storeinc ( xc , z , y )"		112128	0					
ANR	112448	Callee	Storeinc		112128	0					
ANR	112449	Identifier	Storeinc		112128	0					
ANR	112450	ArgumentList	xc		112128	1					
ANR	112451	Argument	xc		112128	0					
ANR	112452	Identifier	xc		112128	0					
ANR	112453	Argument	z		112128	1					
ANR	112454	Identifier	z		112128	0					
ANR	112455	Argument	y		112128	2					
ANR	112456	Identifier	y		112128	0					
ANR	112457	WhileStatement	while ( ! * -- xc )		112128	20					
ANR	112458	Condition	! * -- xc	984:7:19996:20001	112128	0	True				
ANR	112459	UnaryOperationExpression	! * -- xc		112128	0					
ANR	112460	UnaryOperator	!		112128	0					
ANR	112461	UnaryOperationExpression	* -- xc		112128	1					
ANR	112462	UnaryOperator	*		112128	0					
ANR	112463	UnaryExpression	-- xc		112128	1					
ANR	112464	IncDec	--		112128	0					
ANR	112465	Identifier	xc		112128	1					
ANR	112466	CompoundStatement		68:15:1157:1157	112128	1					
ANR	112467	ExpressionStatement	wa --	985:2:20008:20012	112128	0	True				
ANR	112468	PostIncDecOperationExpression	wa --		112128	0					
ANR	112469	Identifier	wa		112128	0					
ANR	112470	IncDec	--		112128	1					
ANR	112471	ExpressionStatement	c -> wds = wa	987:1:20018:20029	112128	21	True				
ANR	112472	AssignmentExpression	c -> wds = wa		112128	0		=			
ANR	112473	PtrMemberAccess	c -> wds		112128	0					
ANR	112474	Identifier	c		112128	0					
ANR	112475	Identifier	wds		112128	1					
ANR	112476	Identifier	wa		112128	1					
ANR	112477	ReturnStatement	return c ;	988:1:20032:20040	112128	22	True				
ANR	112478	Identifier	c		112128	0					
ANR	112479	ReturnType	static Bigint *		112128	1					
ANR	112480	Identifier	diff		112128	2					
ANR	112481	ParameterList	"Bigint * a , Bigint * b"		112128	3					
ANR	112482	Parameter	Bigint * a	916:21:18824:18832	112128	0	True				
ANR	112483	ParameterType	Bigint *		112128	0					
ANR	112484	Identifier	a		112128	1					
ANR	112485	Parameter	Bigint * b	916:32:18835:18843	112128	1	True				
ANR	112486	ParameterType	Bigint *		112128	0					
ANR	112487	Identifier	b		112128	1					
ANR	112488	CFGEntryNode	ENTRY		112128		True				
ANR	112489	CFGExitNode	EXIT		112128		True				
ANR	112490	Symbol	a -> k		112128						
ANR	112491	Symbol	cmp		112128						
ANR	112492	Symbol	* xb ++		112128						
ANR	112493	Symbol	wa		112128						
ANR	112494	Symbol	wb		112128						
ANR	112495	Symbol	* xa		112128						
ANR	112496	Symbol	b -> x		112128						
ANR	112497	Symbol	c -> sign		112128						
ANR	112498	Symbol	Balloc		112128						
ANR	112499	Symbol	* -- xc		112128						
ANR	112500	Symbol	* c -> x		112128						
ANR	112501	Symbol	xae		112128						
ANR	112502	Symbol	a		112128						
ANR	112503	Symbol	b		112128						
ANR	112504	Symbol	c		112128						
ANR	112505	Symbol	* * c		112128						
ANR	112506	Symbol	i		112128						
ANR	112507	Symbol	xa		112128						
ANR	112508	Symbol	* xa ++		112128						
ANR	112509	Symbol	xb		112128						
ANR	112510	Symbol	xc		112128						
ANR	112511	Symbol	c -> wds		112128						
ANR	112512	Symbol	* a		112128						
ANR	112513	Symbol	a -> wds		112128						
ANR	112514	Symbol	b -> wds		112128						
ANR	112515	Symbol	* b		112128						
ANR	112516	Symbol	* c		112128						
ANR	112517	Symbol	c -> x		112128						
ANR	112518	Symbol	* xc		112128						
ANR	112519	Symbol	* xb		112128						
ANR	112520	Symbol	a -> x		112128						
ANR	112521	Symbol	borrow		112128						
ANR	112522	Symbol	y		112128						
ANR	112523	Symbol	xbe		112128						
ANR	112524	Symbol	z		112128						
ANR	112525	Function	ulp	991:0:20045:20568							
ANR	112526	FunctionDef	ulp (double _x)		112525	0					
ANR	112527	CompoundStatement		992:0:20075:20568	112525	0					
ANR	112528	IdentifierDeclStatement	volatile _double x ;	993:1:20078:20096	112525	0	True				
ANR	112529	IdentifierDecl	x		112525	0					
ANR	112530	IdentifierDeclType	volatile _double		112525	0					
ANR	112531	Identifier	x		112525	1					
ANR	112532	Statement	register	994:1:20099:20106	112525	1	True				
ANR	112533	IdentifierDeclStatement	Long L ;	994:10:20108:20114	112525	2	True				
ANR	112534	IdentifierDecl	L		112525	0					
ANR	112535	IdentifierDeclType	Long		112525	0					
ANR	112536	Identifier	L		112525	1					
ANR	112537	IdentifierDeclStatement	volatile _double a ;	995:1:20117:20135	112525	3	True				
ANR	112538	IdentifierDecl	a		112525	0					
ANR	112539	IdentifierDeclType	volatile _double		112525	0					
ANR	112540	Identifier	a		112525	1					
ANR	112541	ExpressionStatement	value ( x ) = _x	997:1:20139:20152	112525	4	True				
ANR	112542	AssignmentExpression	value ( x ) = _x		112525	0		=			
ANR	112543	CallExpression	value ( x )		112525	0					
ANR	112544	Callee	value		112525	0					
ANR	112545	Identifier	value		112525	0					
ANR	112546	ArgumentList	x		112525	1					
ANR	112547	Argument	x		112525	0					
ANR	112548	Identifier	x		112525	0					
ANR	112549	Identifier	_x		112525	1					
ANR	112550	ExpressionStatement	L = ( word0 ( x ) & Exp_mask ) - ( P - 1 ) * Exp_msk1	998:1:20155:20197	112525	5	True				
ANR	112551	AssignmentExpression	L = ( word0 ( x ) & Exp_mask ) - ( P - 1 ) * Exp_msk1		112525	0		=			
ANR	112552	Identifier	L		112525	0					
ANR	112553	AdditiveExpression	( word0 ( x ) & Exp_mask ) - ( P - 1 ) * Exp_msk1		112525	1		-			
ANR	112554	BitAndExpression	word0 ( x ) & Exp_mask		112525	0		&			
ANR	112555	CallExpression	word0 ( x )		112525	0					
ANR	112556	Callee	word0		112525	0					
ANR	112557	Identifier	word0		112525	0					
ANR	112558	ArgumentList	x		112525	1					
ANR	112559	Argument	x		112525	0					
ANR	112560	Identifier	x		112525	0					
ANR	112561	Identifier	Exp_mask		112525	1					
ANR	112562	MultiplicativeExpression	( P - 1 ) * Exp_msk1		112525	1		*			
ANR	112563	AdditiveExpression	P - 1		112525	0		-			
ANR	112564	Identifier	P		112525	0					
ANR	112565	PrimaryExpression	1		112525	1					
ANR	112566	Identifier	Exp_msk1		112525	1					
ANR	112567	IfStatement	if ( L > 0 )		112525	6					
ANR	112568	Condition	L > 0	1000:5:20229:20233	112525	0	True				
ANR	112569	RelationalExpression	L > 0		112525	0		>			
ANR	112570	Identifier	L		112525	0					
ANR	112571	PrimaryExpression	0		112525	1					
ANR	112572	CompoundStatement		9:12:160:160	112525	1					
ANR	112573	ExpressionStatement	L |= Exp_msk1 >> 4	1003:2:20258:20276	112525	0	True				
ANR	112574	AssignmentExpression	L |= Exp_msk1 >> 4		112525	0		|=			
ANR	112575	Identifier	L		112525	0					
ANR	112576	ShiftExpression	Exp_msk1 >> 4		112525	1		>>			
ANR	112577	Identifier	Exp_msk1		112525	0					
ANR	112578	PrimaryExpression	4		112525	1					
ANR	112579	ExpressionStatement	word0 ( a ) = L	1005:2:20287:20299	112525	1	True				
ANR	112580	AssignmentExpression	word0 ( a ) = L		112525	0		=			
ANR	112581	CallExpression	word0 ( a )		112525	0					
ANR	112582	Callee	word0		112525	0					
ANR	112583	Identifier	word0		112525	0					
ANR	112584	ArgumentList	a		112525	1					
ANR	112585	Argument	a		112525	0					
ANR	112586	Identifier	a		112525	0					
ANR	112587	Identifier	L		112525	1					
ANR	112588	ExpressionStatement	word1 ( a ) = 0	1006:2:20303:20315	112525	2	True				
ANR	112589	AssignmentExpression	word1 ( a ) = 0		112525	0		=			
ANR	112590	CallExpression	word1 ( a )		112525	0					
ANR	112591	Callee	word1		112525	0					
ANR	112592	Identifier	word1		112525	0					
ANR	112593	ArgumentList	a		112525	1					
ANR	112594	Argument	a		112525	0					
ANR	112595	Identifier	a		112525	0					
ANR	112596	PrimaryExpression	0		112525	1					
ANR	112597	ElseStatement	else		112525	0					
ANR	112598	CompoundStatement		18:6:275:275	112525	0					
ANR	112599	ExpressionStatement	L = - L >> Exp_shift	1010:2:20355:20374	112525	0	True				
ANR	112600	AssignmentExpression	L = - L >> Exp_shift		112525	0		=			
ANR	112601	Identifier	L		112525	0					
ANR	112602	ShiftExpression	- L >> Exp_shift		112525	1		>>			
ANR	112603	UnaryOperationExpression	- L		112525	0					
ANR	112604	UnaryOperator	-		112525	0					
ANR	112605	Identifier	L		112525	1					
ANR	112606	Identifier	Exp_shift		112525	1					
ANR	112607	IfStatement	if ( L < Exp_shift )		112525	1					
ANR	112608	Condition	L < Exp_shift	1011:6:20382:20394	112525	0	True				
ANR	112609	RelationalExpression	L < Exp_shift		112525	0		<			
ANR	112610	Identifier	L		112525	0					
ANR	112611	Identifier	Exp_shift		112525	1					
ANR	112612	CompoundStatement		20:21:321:321	112525	1					
ANR	112613	ExpressionStatement	word0 ( a ) = 0x80000 >> L	1012:3:20402:20425	112525	0	True				
ANR	112614	AssignmentExpression	word0 ( a ) = 0x80000 >> L		112525	0		=			
ANR	112615	CallExpression	word0 ( a )		112525	0					
ANR	112616	Callee	word0		112525	0					
ANR	112617	Identifier	word0		112525	0					
ANR	112618	ArgumentList	a		112525	1					
ANR	112619	Argument	a		112525	0					
ANR	112620	Identifier	a		112525	0					
ANR	112621	ShiftExpression	0x80000 >> L		112525	1		>>			
ANR	112622	PrimaryExpression	0x80000		112525	0					
ANR	112623	Identifier	L		112525	1					
ANR	112624	ExpressionStatement	word1 ( a ) = 0	1013:3:20430:20442	112525	1	True				
ANR	112625	AssignmentExpression	word1 ( a ) = 0		112525	0		=			
ANR	112626	CallExpression	word1 ( a )		112525	0					
ANR	112627	Callee	word1		112525	0					
ANR	112628	Identifier	word1		112525	0					
ANR	112629	ArgumentList	a		112525	1					
ANR	112630	Argument	a		112525	0					
ANR	112631	Identifier	a		112525	0					
ANR	112632	PrimaryExpression	0		112525	1					
ANR	112633	ElseStatement	else		112525	0					
ANR	112634	CompoundStatement		24:7:379:379	112525	0					
ANR	112635	ExpressionStatement	word0 ( a ) = 0	1016:3:20460:20472	112525	0	True				
ANR	112636	AssignmentExpression	word0 ( a ) = 0		112525	0		=			
ANR	112637	CallExpression	word0 ( a )		112525	0					
ANR	112638	Callee	word0		112525	0					
ANR	112639	Identifier	word0		112525	0					
ANR	112640	ArgumentList	a		112525	1					
ANR	112641	Argument	a		112525	0					
ANR	112642	Identifier	a		112525	0					
ANR	112643	PrimaryExpression	0		112525	1					
ANR	112644	ExpressionStatement	L -= Exp_shift	1017:3:20477:20491	112525	1	True				
ANR	112645	AssignmentExpression	L -= Exp_shift		112525	0		-=			
ANR	112646	Identifier	L		112525	0					
ANR	112647	Identifier	Exp_shift		112525	1					
ANR	112648	ExpressionStatement	word1 ( a ) = L >= 31 ? 1 : 1 << ( 31 - L )	1018:3:20496:20534	112525	2	True				
ANR	112649	AssignmentExpression	word1 ( a ) = L >= 31 ? 1 : 1 << ( 31 - L )		112525	0		=			
ANR	112650	CallExpression	word1 ( a )		112525	0					
ANR	112651	Callee	word1		112525	0					
ANR	112652	Identifier	word1		112525	0					
ANR	112653	ArgumentList	a		112525	1					
ANR	112654	Argument	a		112525	0					
ANR	112655	Identifier	a		112525	0					
ANR	112656	ConditionalExpression	L >= 31 ? 1 : 1 << ( 31 - L )		112525	1					
ANR	112657	Condition	L >= 31		112525	0					
ANR	112658	RelationalExpression	L >= 31		112525	0		>=			
ANR	112659	Identifier	L		112525	0					
ANR	112660	PrimaryExpression	31		112525	1					
ANR	112661	PrimaryExpression	1		112525	1					
ANR	112662	ShiftExpression	1 << ( 31 - L )		112525	2		<<			
ANR	112663	PrimaryExpression	1		112525	0					
ANR	112664	AdditiveExpression	31 - L		112525	1		-			
ANR	112665	PrimaryExpression	31		112525	0					
ANR	112666	Identifier	L		112525	1					
ANR	112667	ReturnStatement	return value ( a ) ;	1022:1:20551:20566	112525	7	True				
ANR	112668	CallExpression	value ( a )		112525	0					
ANR	112669	Callee	value		112525	0					
ANR	112670	Identifier	value		112525	0					
ANR	112671	ArgumentList	a		112525	1					
ANR	112672	Argument	a		112525	0					
ANR	112673	Identifier	a		112525	0					
ANR	112674	ReturnType	static double		112525	1					
ANR	112675	Identifier	ulp		112525	2					
ANR	112676	ParameterList	double _x		112525	3					
ANR	112677	Parameter	double _x	991:19:20064:20072	112525	0	True				
ANR	112678	ParameterType	double		112525	0					
ANR	112679	Identifier	_x		112525	1					
ANR	112680	CFGEntryNode	ENTRY		112525		True				
ANR	112681	CFGExitNode	EXIT		112525		True				
ANR	112682	Symbol	P		112525						
ANR	112683	Symbol	a		112525						
ANR	112684	Symbol	word1		112525						
ANR	112685	Symbol	Exp_msk1		112525						
ANR	112686	Symbol	word0		112525						
ANR	112687	Symbol	Exp_mask		112525						
ANR	112688	Symbol	x		112525						
ANR	112689	Symbol	_x		112525						
ANR	112690	Symbol	Exp_shift		112525						
ANR	112691	Symbol	L		112525						
ANR	112692	Symbol	value		112525						
ANR	112693	DeclStmt									
ANR	112694	Decl							Bigint	Bigint *	a
ANR	112695	DeclStmt									
ANR	112696	Decl							int	int *	e
ANR	112697	DeclStmt									
ANR	112698	Decl							ULong	ULong *	xa
ANR	112699	Decl							ULong	ULong *	xa0
ANR	112700	Decl							ULong	ULong	w
ANR	112701	Decl							ULong	ULong	y
ANR	112702	Decl							ULong	ULong	z
ANR	112703	DeclStmt									
ANR	112704	Decl							int	int	k
ANR	112705	DeclStmt									
ANR	112706	Decl							volatile _double	volatile _double	d
ANR	112707	DeclStmt									
ANR	112708	Decl							ULong	ULong	d0
ANR	112709	Decl							ULong	ULong	d1
ANR	112710	Function	d2b	1096:0:21850:23829							
ANR	112711	FunctionDef	"d2b (double _d , int * e , int * bits)"		112710	0					
ANR	112712	CompoundStatement		1097:0:21900:23829	112710	0					
ANR	112713	IdentifierDeclStatement	Bigint * b ;	1098:1:21903:21912	112710	0	True				
ANR	112714	IdentifierDecl	* b		112710	0					
ANR	112715	IdentifierDeclType	Bigint *		112710	0					
ANR	112716	Identifier	b		112710	1					
ANR	112717	IdentifierDeclStatement	"int de , i , k ;"	1099:1:21915:21927	112710	1	True				
ANR	112718	IdentifierDecl	de		112710	0					
ANR	112719	IdentifierDeclType	int		112710	0					
ANR	112720	Identifier	de		112710	1					
ANR	112721	IdentifierDecl	i		112710	1					
ANR	112722	IdentifierDeclType	int		112710	0					
ANR	112723	Identifier	i		112710	1					
ANR	112724	IdentifierDecl	k		112710	2					
ANR	112725	IdentifierDeclType	int		112710	0					
ANR	112726	Identifier	k		112710	1					
ANR	112727	IdentifierDeclStatement	"ULong * x , y , z ;"	1100:1:21930:21944	112710	2	True				
ANR	112728	IdentifierDecl	* x		112710	0					
ANR	112729	IdentifierDeclType	ULong *		112710	0					
ANR	112730	Identifier	x		112710	1					
ANR	112731	IdentifierDecl	y		112710	1					
ANR	112732	IdentifierDeclType	ULong		112710	0					
ANR	112733	Identifier	y		112710	1					
ANR	112734	IdentifierDecl	z		112710	2					
ANR	112735	IdentifierDeclType	ULong		112710	0					
ANR	112736	Identifier	z		112710	1					
ANR	112737	IdentifierDeclStatement	volatile _double d ;	1101:1:21947:21965	112710	3	True				
ANR	112738	IdentifierDecl	d		112710	0					
ANR	112739	IdentifierDeclType	volatile _double		112710	0					
ANR	112740	Identifier	d		112710	1					
ANR	112741	IdentifierDeclStatement	"ULong d0 , d1 ;"	1103:1:21979:21991	112710	4	True				
ANR	112742	IdentifierDecl	d0		112710	0					
ANR	112743	IdentifierDeclType	ULong		112710	0					
ANR	112744	Identifier	d0		112710	1					
ANR	112745	IdentifierDecl	d1		112710	1					
ANR	112746	IdentifierDeclType	ULong		112710	0					
ANR	112747	Identifier	d1		112710	1					
ANR	112748	ExpressionStatement	value ( d ) = _d	1106:1:22002:22015	112710	5	True				
ANR	112749	AssignmentExpression	value ( d ) = _d		112710	0		=			
ANR	112750	CallExpression	value ( d )		112710	0					
ANR	112751	Callee	value		112710	0					
ANR	112752	Identifier	value		112710	0					
ANR	112753	ArgumentList	d		112710	1					
ANR	112754	Argument	d		112710	0					
ANR	112755	Identifier	d		112710	0					
ANR	112756	Identifier	_d		112710	1					
ANR	112757	ExpressionStatement	d0 = word0 ( d ) >> 16 | word0 ( d ) << 16	1108:1:22029:22065	112710	6	True				
ANR	112758	AssignmentExpression	d0 = word0 ( d ) >> 16 | word0 ( d ) << 16		112710	0		=			
ANR	112759	Identifier	d0		112710	0					
ANR	112760	InclusiveOrExpression	word0 ( d ) >> 16 | word0 ( d ) << 16		112710	1		|			
ANR	112761	ShiftExpression	word0 ( d ) >> 16		112710	0		>>			
ANR	112762	CallExpression	word0 ( d )		112710	0					
ANR	112763	Callee	word0		112710	0					
ANR	112764	Identifier	word0		112710	0					
ANR	112765	ArgumentList	d		112710	1					
ANR	112766	Argument	d		112710	0					
ANR	112767	Identifier	d		112710	0					
ANR	112768	PrimaryExpression	16		112710	1					
ANR	112769	ShiftExpression	word0 ( d ) << 16		112710	1		<<			
ANR	112770	CallExpression	word0 ( d )		112710	0					
ANR	112771	Callee	word0		112710	0					
ANR	112772	Identifier	word0		112710	0					
ANR	112773	ArgumentList	d		112710	1					
ANR	112774	Argument	d		112710	0					
ANR	112775	Identifier	d		112710	0					
ANR	112776	PrimaryExpression	16		112710	1					
ANR	112777	ExpressionStatement	d1 = word1 ( d ) >> 16 | word1 ( d ) << 16	1109:1:22068:22104	112710	7	True				
ANR	112778	AssignmentExpression	d1 = word1 ( d ) >> 16 | word1 ( d ) << 16		112710	0		=			
ANR	112779	Identifier	d1		112710	0					
ANR	112780	InclusiveOrExpression	word1 ( d ) >> 16 | word1 ( d ) << 16		112710	1		|			
ANR	112781	ShiftExpression	word1 ( d ) >> 16		112710	0		>>			
ANR	112782	CallExpression	word1 ( d )		112710	0					
ANR	112783	Callee	word1		112710	0					
ANR	112784	Identifier	word1		112710	0					
ANR	112785	ArgumentList	d		112710	1					
ANR	112786	Argument	d		112710	0					
ANR	112787	Identifier	d		112710	0					
ANR	112788	PrimaryExpression	16		112710	1					
ANR	112789	ShiftExpression	word1 ( d ) << 16		112710	1		<<			
ANR	112790	CallExpression	word1 ( d )		112710	0					
ANR	112791	Callee	word1		112710	0					
ANR	112792	Identifier	word1		112710	0					
ANR	112793	ArgumentList	d		112710	1					
ANR	112794	Argument	d		112710	0					
ANR	112795	Identifier	d		112710	0					
ANR	112796	PrimaryExpression	16		112710	1					
ANR	112797	ExpressionStatement	b = Balloc ( 1 )	1116:1:22176:22189	112710	8	True				
ANR	112798	AssignmentExpression	b = Balloc ( 1 )		112710	0		=			
ANR	112799	Identifier	b		112710	0					
ANR	112800	CallExpression	Balloc ( 1 )		112710	1					
ANR	112801	Callee	Balloc		112710	0					
ANR	112802	Identifier	Balloc		112710	0					
ANR	112803	ArgumentList	1		112710	1					
ANR	112804	Argument	1		112710	0					
ANR	112805	PrimaryExpression	1		112710	0					
ANR	112806	ExpressionStatement	x = b -> x	1120:1:22221:22229	112710	9	True				
ANR	112807	AssignmentExpression	x = b -> x		112710	0		=			
ANR	112808	Identifier	x		112710	0					
ANR	112809	PtrMemberAccess	b -> x		112710	1					
ANR	112810	Identifier	b		112710	0					
ANR	112811	Identifier	x		112710	1					
ANR	112812	ExpressionStatement	z = d0 & Frac_mask	1122:1:22233:22251	112710	10	True				
ANR	112813	AssignmentExpression	z = d0 & Frac_mask		112710	0		=			
ANR	112814	Identifier	z		112710	0					
ANR	112815	BitAndExpression	d0 & Frac_mask		112710	1		&			
ANR	112816	Identifier	d0		112710	0					
ANR	112817	Identifier	Frac_mask		112710	1					
ANR	112818	ExpressionStatement	d0 &= 0x7fffffff	1123:1:22254:22270	112710	11	True				
ANR	112819	AssignmentExpression	d0 &= 0x7fffffff		112710	0		&=			
ANR	112820	Identifier	d0		112710	0					
ANR	112821	PrimaryExpression	0x7fffffff		112710	1					
ANR	112822	ExpressionStatement	de = ( int ) ( d0 >> Exp_shift )	1125:1:22337:22364	112710	12	True				
ANR	112823	AssignmentExpression	de = ( int ) ( d0 >> Exp_shift )		112710	0		=			
ANR	112824	Identifier	de		112710	0					
ANR	112825	CastExpression	( int ) ( d0 >> Exp_shift )		112710	1					
ANR	112826	CastTarget	int		112710	0					
ANR	112827	ShiftExpression	d0 >> Exp_shift		112710	1		>>			
ANR	112828	Identifier	d0		112710	0					
ANR	112829	Identifier	Exp_shift		112710	1					
ANR	112830	ExpressionStatement	z |= Exp_msk11	1127:1:22379:22393	112710	13	True				
ANR	112831	AssignmentExpression	z |= Exp_msk11		112710	0		|=			
ANR	112832	Identifier	z		112710	0					
ANR	112833	Identifier	Exp_msk11		112710	1					
ANR	112834	IfStatement	if ( ( y = d1 ) )		112710	14					
ANR	112835	Condition	y = d1	1134:5:22488:22495	112710	0	True				
ANR	112836	AssignmentExpression	y = d1		112710	0		=			
ANR	112837	Identifier	y		112710	0					
ANR	112838	Identifier	d1		112710	1					
ANR	112839	CompoundStatement		38:15:597:597	112710	1					
ANR	112840	IfStatement	if ( ( k = lo0bits ( & y ) ) )		112710	0					
ANR	112841	Condition	k = lo0bits ( & y )	1135:6:22506:22522	112710	0	True				
ANR	112842	AssignmentExpression	k = lo0bits ( & y )		112710	0		=			
ANR	112843	Identifier	k		112710	0					
ANR	112844	CallExpression	lo0bits ( & y )		112710	1					
ANR	112845	Callee	lo0bits		112710	0					
ANR	112846	Identifier	lo0bits		112710	0					
ANR	112847	ArgumentList	& y		112710	1					
ANR	112848	Argument	& y		112710	0					
ANR	112849	UnaryOperationExpression	& y		112710	0					
ANR	112850	UnaryOperator	&		112710	0					
ANR	112851	Identifier	y		112710	1					
ANR	112852	CompoundStatement		39:25:624:624	112710	1					
ANR	112853	ExpressionStatement	x [ 0 ] = y | ( z << ( 32 - k ) )	1136:3:22530:22556	112710	0	True				
ANR	112854	AssignmentExpression	x [ 0 ] = y | ( z << ( 32 - k ) )		112710	0		=			
ANR	112855	ArrayIndexing	x [ 0 ]		112710	0					
ANR	112856	Identifier	x		112710	0					
ANR	112857	PrimaryExpression	0		112710	1					
ANR	112858	InclusiveOrExpression	y | ( z << ( 32 - k ) )		112710	1		|			
ANR	112859	Identifier	y		112710	0					
ANR	112860	ShiftExpression	z << ( 32 - k )		112710	1		<<			
ANR	112861	Identifier	z		112710	0					
ANR	112862	AdditiveExpression	32 - k		112710	1		-			
ANR	112863	PrimaryExpression	32		112710	0					
ANR	112864	Identifier	k		112710	1					
ANR	112865	ExpressionStatement	z >>= k	1137:3:22561:22568	112710	1	True				
ANR	112866	AssignmentExpression	z >>= k		112710	0		>>=			
ANR	112867	Identifier	z		112710	0					
ANR	112868	Identifier	k		112710	1					
ANR	112869	ElseStatement	else		112710	0					
ANR	112870	CompoundStatement		42:9:678:678	112710	0					
ANR	112871	ExpressionStatement	x [ 0 ] = y	1139:3:22584:22592	112710	0	True				
ANR	112872	AssignmentExpression	x [ 0 ] = y		112710	0		=			
ANR	112873	ArrayIndexing	x [ 0 ]		112710	0					
ANR	112874	Identifier	x		112710	0					
ANR	112875	PrimaryExpression	0		112710	1					
ANR	112876	Identifier	y		112710	1					
ANR	112877	ExpressionStatement	i = b -> wds = ( x [ 1 ] = z ) ? 2 : 1	1141:2:22600:22631	112710	1	True				
ANR	112878	AssignmentExpression	i = b -> wds = ( x [ 1 ] = z ) ? 2 : 1		112710	0		=			
ANR	112879	Identifier	i		112710	0					
ANR	112880	AssignmentExpression	b -> wds = ( x [ 1 ] = z ) ? 2 : 1		112710	1		=			
ANR	112881	PtrMemberAccess	b -> wds		112710	0					
ANR	112882	Identifier	b		112710	0					
ANR	112883	Identifier	wds		112710	1					
ANR	112884	ConditionalExpression	( x [ 1 ] = z ) ? 2 : 1		112710	1					
ANR	112885	Condition	x [ 1 ] = z		112710	0					
ANR	112886	AssignmentExpression	x [ 1 ] = z		112710	0		=			
ANR	112887	ArrayIndexing	x [ 1 ]		112710	0					
ANR	112888	Identifier	x		112710	0					
ANR	112889	PrimaryExpression	1		112710	1					
ANR	112890	Identifier	z		112710	1					
ANR	112891	PrimaryExpression	2		112710	1					
ANR	112892	PrimaryExpression	1		112710	2					
ANR	112893	ElseStatement	else		112710	0					
ANR	112894	CompoundStatement		46:8:740:740	112710	0					
ANR	112895	IfStatement	if ( ! z )		112710	0					
ANR	112896	Condition	! z	1144:6:22662:22663	112710	0	True				
ANR	112897	UnaryOperationExpression	! z		112710	0					
ANR	112898	UnaryOperator	!		112710	0					
ANR	112899	Identifier	z		112710	1					
ANR	112900	ExpressionStatement	"Bug ( ""Zero passed to d2b"" )"	1145:3:22669:22694	112710	1	True				
ANR	112901	CallExpression	"Bug ( ""Zero passed to d2b"" )"		112710	0					
ANR	112902	Callee	Bug		112710	0					
ANR	112903	Identifier	Bug		112710	0					
ANR	112904	ArgumentList	"""Zero passed to d2b"""		112710	1					
ANR	112905	Argument	"""Zero passed to d2b"""		112710	0					
ANR	112906	PrimaryExpression	"""Zero passed to d2b"""		112710	0					
ANR	112907	ExpressionStatement	k = lo0bits ( & z )	1147:2:22705:22720	112710	1	True				
ANR	112908	AssignmentExpression	k = lo0bits ( & z )		112710	0		=			
ANR	112909	Identifier	k		112710	0					
ANR	112910	CallExpression	lo0bits ( & z )		112710	1					
ANR	112911	Callee	lo0bits		112710	0					
ANR	112912	Identifier	lo0bits		112710	0					
ANR	112913	ArgumentList	& z		112710	1					
ANR	112914	Argument	& z		112710	0					
ANR	112915	UnaryOperationExpression	& z		112710	0					
ANR	112916	UnaryOperator	&		112710	0					
ANR	112917	Identifier	z		112710	1					
ANR	112918	ExpressionStatement	x [ 0 ] = z	1148:2:22724:22732	112710	2	True				
ANR	112919	AssignmentExpression	x [ 0 ] = z		112710	0		=			
ANR	112920	ArrayIndexing	x [ 0 ]		112710	0					
ANR	112921	Identifier	x		112710	0					
ANR	112922	PrimaryExpression	0		112710	1					
ANR	112923	Identifier	z		112710	1					
ANR	112924	ExpressionStatement	i = b -> wds = 1	1149:2:22736:22750	112710	3	True				
ANR	112925	AssignmentExpression	i = b -> wds = 1		112710	0		=			
ANR	112926	Identifier	i		112710	0					
ANR	112927	AssignmentExpression	b -> wds = 1		112710	1		=			
ANR	112928	PtrMemberAccess	b -> wds		112710	0					
ANR	112929	Identifier	b		112710	0					
ANR	112930	Identifier	wds		112710	1					
ANR	112931	PrimaryExpression	1		112710	1					
ANR	112932	ExpressionStatement	k += 32	1150:2:22754:22761	112710	4	True				
ANR	112933	AssignmentExpression	k += 32		112710	0		+=			
ANR	112934	Identifier	k		112710	0					
ANR	112935	PrimaryExpression	32		112710	1					
ANR	112936	IfStatement	if ( de )		112710	15					
ANR	112937	Condition	de	1195:5:23465:23466	112710	0	True				
ANR	112938	Identifier	de		112710	0					
ANR	112939	CompoundStatement		99:9:1568:1568	112710	1					
ANR	112940	ExpressionStatement	* e = ( de - Bias - ( P - 1 ) << 2 ) + k	1198:2:23491:23524	112710	0	True				
ANR	112941	AssignmentExpression	* e = ( de - Bias - ( P - 1 ) << 2 ) + k		112710	0		=			
ANR	112942	UnaryOperationExpression	* e		112710	0					
ANR	112943	UnaryOperator	*		112710	0					
ANR	112944	Identifier	e		112710	1					
ANR	112945	AdditiveExpression	( de - Bias - ( P - 1 ) << 2 ) + k		112710	1		+			
ANR	112946	ShiftExpression	de - Bias - ( P - 1 ) << 2		112710	0		<<			
ANR	112947	AdditiveExpression	de - Bias - ( P - 1 )		112710	0		-			
ANR	112948	Identifier	de		112710	0					
ANR	112949	AdditiveExpression	Bias - ( P - 1 )		112710	1		-			
ANR	112950	Identifier	Bias		112710	0					
ANR	112951	AdditiveExpression	P - 1		112710	1		-			
ANR	112952	Identifier	P		112710	0					
ANR	112953	PrimaryExpression	1		112710	1					
ANR	112954	PrimaryExpression	2		112710	1					
ANR	112955	Identifier	k		112710	1					
ANR	112956	ExpressionStatement	* bits = 4 * P + 8 - k - hi0bits ( word0 ( d ) & Frac_mask )	1199:2:23528:23579	112710	1	True				
ANR	112957	AssignmentExpression	* bits = 4 * P + 8 - k - hi0bits ( word0 ( d ) & Frac_mask )		112710	0		=			
ANR	112958	UnaryOperationExpression	* bits		112710	0					
ANR	112959	UnaryOperator	*		112710	0					
ANR	112960	Identifier	bits		112710	1					
ANR	112961	AdditiveExpression	4 * P + 8 - k - hi0bits ( word0 ( d ) & Frac_mask )		112710	1		+			
ANR	112962	MultiplicativeExpression	4 * P		112710	0		*			
ANR	112963	PrimaryExpression	4		112710	0					
ANR	112964	Identifier	P		112710	1					
ANR	112965	AdditiveExpression	8 - k - hi0bits ( word0 ( d ) & Frac_mask )		112710	1		-			
ANR	112966	PrimaryExpression	8		112710	0					
ANR	112967	AdditiveExpression	k - hi0bits ( word0 ( d ) & Frac_mask )		112710	1		-			
ANR	112968	Identifier	k		112710	0					
ANR	112969	CallExpression	hi0bits ( word0 ( d ) & Frac_mask )		112710	1					
ANR	112970	Callee	hi0bits		112710	0					
ANR	112971	Identifier	hi0bits		112710	0					
ANR	112972	ArgumentList	word0 ( d ) & Frac_mask		112710	1					
ANR	112973	Argument	word0 ( d ) & Frac_mask		112710	0					
ANR	112974	BitAndExpression	word0 ( d ) & Frac_mask		112710	0		&			
ANR	112975	CallExpression	word0 ( d )		112710	0					
ANR	112976	Callee	word0		112710	0					
ANR	112977	Identifier	word0		112710	0					
ANR	112978	ArgumentList	d		112710	1					
ANR	112979	Argument	d		112710	0					
ANR	112980	Identifier	d		112710	0					
ANR	112981	Identifier	Frac_mask		112710	1					
ANR	112982	ElseStatement	else		112710	0					
ANR	112983	CompoundStatement		109:8:1773:1773	112710	0					
ANR	112984	ExpressionStatement	* e = de - Bias - ( P - 1 ) + 1 + k	1206:2:23678:23708	112710	0	True				
ANR	112985	AssignmentExpression	* e = de - Bias - ( P - 1 ) + 1 + k		112710	0		=			
ANR	112986	UnaryOperationExpression	* e		112710	0					
ANR	112987	UnaryOperator	*		112710	0					
ANR	112988	Identifier	e		112710	1					
ANR	112989	AdditiveExpression	de - Bias - ( P - 1 ) + 1 + k		112710	1		-			
ANR	112990	Identifier	de		112710	0					
ANR	112991	AdditiveExpression	Bias - ( P - 1 ) + 1 + k		112710	1		-			
ANR	112992	Identifier	Bias		112710	0					
ANR	112993	AdditiveExpression	( P - 1 ) + 1 + k		112710	1		+			
ANR	112994	AdditiveExpression	P - 1		112710	0		-			
ANR	112995	Identifier	P		112710	0					
ANR	112996	PrimaryExpression	1		112710	1					
ANR	112997	AdditiveExpression	1 + k		112710	1		+			
ANR	112998	PrimaryExpression	1		112710	0					
ANR	112999	Identifier	k		112710	1					
ANR	113000	ExpressionStatement	* bits = 32 * i - hi0bits ( x [ i - 1 ] )	1208:2:23727:23757	112710	1	True				
ANR	113001	AssignmentExpression	* bits = 32 * i - hi0bits ( x [ i - 1 ] )		112710	0		=			
ANR	113002	UnaryOperationExpression	* bits		112710	0					
ANR	113003	UnaryOperator	*		112710	0					
ANR	113004	Identifier	bits		112710	1					
ANR	113005	AdditiveExpression	32 * i - hi0bits ( x [ i - 1 ] )		112710	1		-			
ANR	113006	MultiplicativeExpression	32 * i		112710	0		*			
ANR	113007	PrimaryExpression	32		112710	0					
ANR	113008	Identifier	i		112710	1					
ANR	113009	CallExpression	hi0bits ( x [ i - 1 ] )		112710	1					
ANR	113010	Callee	hi0bits		112710	0					
ANR	113011	Identifier	hi0bits		112710	0					
ANR	113012	ArgumentList	x [ i - 1 ]		112710	1					
ANR	113013	Argument	x [ i - 1 ]		112710	0					
ANR	113014	ArrayIndexing	x [ i - 1 ]		112710	0					
ANR	113015	Identifier	x		112710	0					
ANR	113016	AdditiveExpression	i - 1		112710	1		-			
ANR	113017	Identifier	i		112710	0					
ANR	113018	PrimaryExpression	1		112710	1					
ANR	113019	ReturnStatement	return b ;	1214:1:23819:23827	112710	16	True				
ANR	113020	Identifier	b		112710	0					
ANR	113021	ReturnType	static Bigint *		112710	1					
ANR	113022	Identifier	d2b		112710	2					
ANR	113023	ParameterList	"double _d , int * e , int * bits"		112710	3					
ANR	113024	Parameter	double _d	1096:20:21870:21878	112710	0	True				
ANR	113025	ParameterType	double		112710	0					
ANR	113026	Identifier	_d		112710	1					
ANR	113027	Parameter	int * e	1096:31:21881:21886	112710	1	True				
ANR	113028	ParameterType	int *		112710	0					
ANR	113029	Identifier	e		112710	1					
ANR	113030	Parameter	int * bits	1096:39:21889:21897	112710	2	True				
ANR	113031	ParameterType	int *		112710	0					
ANR	113032	Identifier	bits		112710	1					
ANR	113033	CFGEntryNode	ENTRY		112710		True				
ANR	113034	CFGExitNode	EXIT		112710		True				
ANR	113035	Symbol	& z		112710						
ANR	113036	Symbol	de		112710						
ANR	113037	Symbol	* x		112710						
ANR	113038	Symbol	Bias		112710						
ANR	113039	Symbol	d0		112710						
ANR	113040	Symbol	d1		112710						
ANR	113041	Symbol	lo0bits		112710						
ANR	113042	Symbol	P		112710						
ANR	113043	Symbol	hi0bits		112710						
ANR	113044	Symbol	b -> x		112710						
ANR	113045	Symbol	Balloc		112710						
ANR	113046	Symbol	Exp_shift		112710						
ANR	113047	Symbol	value		112710						
ANR	113048	Symbol	* bits		112710						
ANR	113049	Symbol	b		112710						
ANR	113050	Symbol	d		112710						
ANR	113051	Symbol	_d		112710						
ANR	113052	Symbol	e		112710						
ANR	113053	Symbol	word1		112710						
ANR	113054	Symbol	word0		112710						
ANR	113055	Symbol	bits		112710						
ANR	113056	Symbol	Exp_msk11		112710						
ANR	113057	Symbol	i		112710						
ANR	113058	Symbol	k		112710						
ANR	113059	Symbol	Frac_mask		112710						
ANR	113060	Symbol	b -> wds		112710						
ANR	113061	Symbol	* b		112710						
ANR	113062	Symbol	* e		112710						
ANR	113063	Symbol	* i		112710						
ANR	113064	Symbol	x		112710						
ANR	113065	Symbol	y		112710						
ANR	113066	Symbol	z		112710						
ANR	113067	Symbol	& y		112710						
ANR	113068	Function	ratio	1220:0:23853:24414							
ANR	113069	FunctionDef	"ratio (Bigint * a , Bigint * b)"		113068	0					
ANR	113070	CompoundStatement		1221:0:23896:24414	113068	0					
ANR	113071	IdentifierDeclStatement	"volatile _double da , db ;"	1222:1:23899:23922	113068	0	True				
ANR	113072	IdentifierDecl	da		113068	0					
ANR	113073	IdentifierDeclType	volatile _double		113068	0					
ANR	113074	Identifier	da		113068	1					
ANR	113075	IdentifierDecl	db		113068	1					
ANR	113076	IdentifierDeclType	volatile _double		113068	0					
ANR	113077	Identifier	db		113068	1					
ANR	113078	IdentifierDeclStatement	"int k , ka , kb ;"	1223:1:23925:23938	113068	1	True				
ANR	113079	IdentifierDecl	k		113068	0					
ANR	113080	IdentifierDeclType	int		113068	0					
ANR	113081	Identifier	k		113068	1					
ANR	113082	IdentifierDecl	ka		113068	1					
ANR	113083	IdentifierDeclType	int		113068	0					
ANR	113084	Identifier	ka		113068	1					
ANR	113085	IdentifierDecl	kb		113068	2					
ANR	113086	IdentifierDeclType	int		113068	0					
ANR	113087	Identifier	kb		113068	1					
ANR	113088	ExpressionStatement	"value ( da ) = b2d ( a , & ka )"	1225:1:23942:23965	113068	2	True				
ANR	113089	AssignmentExpression	"value ( da ) = b2d ( a , & ka )"		113068	0		=			
ANR	113090	CallExpression	value ( da )		113068	0					
ANR	113091	Callee	value		113068	0					
ANR	113092	Identifier	value		113068	0					
ANR	113093	ArgumentList	da		113068	1					
ANR	113094	Argument	da		113068	0					
ANR	113095	Identifier	da		113068	0					
ANR	113096	CallExpression	"b2d ( a , & ka )"		113068	1					
ANR	113097	Callee	b2d		113068	0					
ANR	113098	Identifier	b2d		113068	0					
ANR	113099	ArgumentList	a		113068	1					
ANR	113100	Argument	a		113068	0					
ANR	113101	Identifier	a		113068	0					
ANR	113102	Argument	& ka		113068	1					
ANR	113103	UnaryOperationExpression	& ka		113068	0					
ANR	113104	UnaryOperator	&		113068	0					
ANR	113105	Identifier	ka		113068	1					
ANR	113106	ExpressionStatement	"value ( db ) = b2d ( b , & kb )"	1226:1:23968:23991	113068	3	True				
ANR	113107	AssignmentExpression	"value ( db ) = b2d ( b , & kb )"		113068	0		=			
ANR	113108	CallExpression	value ( db )		113068	0					
ANR	113109	Callee	value		113068	0					
ANR	113110	Identifier	value		113068	0					
ANR	113111	ArgumentList	db		113068	1					
ANR	113112	Argument	db		113068	0					
ANR	113113	Identifier	db		113068	0					
ANR	113114	CallExpression	"b2d ( b , & kb )"		113068	1					
ANR	113115	Callee	b2d		113068	0					
ANR	113116	Identifier	b2d		113068	0					
ANR	113117	ArgumentList	b		113068	1					
ANR	113118	Argument	b		113068	0					
ANR	113119	Identifier	b		113068	0					
ANR	113120	Argument	& kb		113068	1					
ANR	113121	UnaryOperationExpression	& kb		113068	0					
ANR	113122	UnaryOperator	&		113068	0					
ANR	113123	Identifier	kb		113068	1					
ANR	113124	ExpressionStatement	k = ka - kb + 32 * ( a -> wds - b -> wds )	1228:1:24009:24043	113068	4	True				
ANR	113125	AssignmentExpression	k = ka - kb + 32 * ( a -> wds - b -> wds )		113068	0		=			
ANR	113126	Identifier	k		113068	0					
ANR	113127	AdditiveExpression	ka - kb + 32 * ( a -> wds - b -> wds )		113068	1		-			
ANR	113128	Identifier	ka		113068	0					
ANR	113129	AdditiveExpression	kb + 32 * ( a -> wds - b -> wds )		113068	1		+			
ANR	113130	Identifier	kb		113068	0					
ANR	113131	MultiplicativeExpression	32 * ( a -> wds - b -> wds )		113068	1		*			
ANR	113132	PrimaryExpression	32		113068	0					
ANR	113133	AdditiveExpression	a -> wds - b -> wds		113068	1		-			
ANR	113134	PtrMemberAccess	a -> wds		113068	0					
ANR	113135	Identifier	a		113068	0					
ANR	113136	Identifier	wds		113068	1					
ANR	113137	PtrMemberAccess	b -> wds		113068	1					
ANR	113138	Identifier	b		113068	0					
ANR	113139	Identifier	wds		113068	1					
ANR	113140	IfStatement	if ( k > 0 )		113068	5					
ANR	113141	Condition	k > 0	1233:5:24111:24115	113068	0	True				
ANR	113142	RelationalExpression	k > 0		113068	0		>			
ANR	113143	Identifier	k		113068	0					
ANR	113144	PrimaryExpression	0		113068	1					
ANR	113145	CompoundStatement		13:12:221:221	113068	1					
ANR	113146	ExpressionStatement	word0 ( da ) += ( k >> 2 ) * Exp_msk1	1234:2:24122:24152	113068	0	True				
ANR	113147	AssignmentExpression	word0 ( da ) += ( k >> 2 ) * Exp_msk1		113068	0		+=			
ANR	113148	CallExpression	word0 ( da )		113068	0					
ANR	113149	Callee	word0		113068	0					
ANR	113150	Identifier	word0		113068	0					
ANR	113151	ArgumentList	da		113068	1					
ANR	113152	Argument	da		113068	0					
ANR	113153	Identifier	da		113068	0					
ANR	113154	MultiplicativeExpression	( k >> 2 ) * Exp_msk1		113068	1		*			
ANR	113155	ShiftExpression	k >> 2		113068	0		>>			
ANR	113156	Identifier	k		113068	0					
ANR	113157	PrimaryExpression	2		113068	1					
ANR	113158	Identifier	Exp_msk1		113068	1					
ANR	113159	IfStatement	if ( k &= 3 )		113068	1					
ANR	113160	Condition	k &= 3	1235:6:24160:24165	113068	0	True				
ANR	113161	AssignmentExpression	k &= 3		113068	0		&=			
ANR	113162	Identifier	k		113068	0					
ANR	113163	PrimaryExpression	3		113068	1					
ANR	113164	CompoundStatement		15:14:271:271	113068	1					
ANR	113165	ExpressionStatement	da *= 1 << k	1236:3:24173:24185	113068	0	True				
ANR	113166	AssignmentExpression	da *= 1 << k		113068	0		*=			
ANR	113167	Identifier	da		113068	0					
ANR	113168	ShiftExpression	1 << k		113068	1		<<			
ANR	113169	PrimaryExpression	1		113068	0					
ANR	113170	Identifier	k		113068	1					
ANR	113171	ElseStatement	else		113068	0					
ANR	113172	CompoundStatement		18:8:302:302	113068	0					
ANR	113173	ExpressionStatement	k = - k	1239:2:24203:24209	113068	0	True				
ANR	113174	AssignmentExpression	k = - k		113068	0		=			
ANR	113175	Identifier	k		113068	0					
ANR	113176	UnaryOperationExpression	- k		113068	1					
ANR	113177	UnaryOperator	-		113068	0					
ANR	113178	Identifier	k		113068	1					
ANR	113179	ExpressionStatement	word0 ( db ) += ( k >> 2 ) * Exp_msk1	1240:2:24213:24243	113068	1	True				
ANR	113180	AssignmentExpression	word0 ( db ) += ( k >> 2 ) * Exp_msk1		113068	0		+=			
ANR	113181	CallExpression	word0 ( db )		113068	0					
ANR	113182	Callee	word0		113068	0					
ANR	113183	Identifier	word0		113068	0					
ANR	113184	ArgumentList	db		113068	1					
ANR	113185	Argument	db		113068	0					
ANR	113186	Identifier	db		113068	0					
ANR	113187	MultiplicativeExpression	( k >> 2 ) * Exp_msk1		113068	1		*			
ANR	113188	ShiftExpression	k >> 2		113068	0		>>			
ANR	113189	Identifier	k		113068	0					
ANR	113190	PrimaryExpression	2		113068	1					
ANR	113191	Identifier	Exp_msk1		113068	1					
ANR	113192	IfStatement	if ( k &= 3 )		113068	2					
ANR	113193	Condition	k &= 3	1241:6:24251:24256	113068	0	True				
ANR	113194	AssignmentExpression	k &= 3		113068	0		&=			
ANR	113195	Identifier	k		113068	0					
ANR	113196	PrimaryExpression	3		113068	1					
ANR	113197	ExpressionStatement	db *= 1 << k	1242:3:24262:24274	113068	1	True				
ANR	113198	AssignmentExpression	db *= 1 << k		113068	0		*=			
ANR	113199	Identifier	db		113068	0					
ANR	113200	ShiftExpression	1 << k		113068	1		<<			
ANR	113201	PrimaryExpression	1		113068	0					
ANR	113202	Identifier	k		113068	1					
ANR	113203	ReturnStatement	return value ( da ) / value ( db ) ;	1252:1:24384:24412	113068	6	True				
ANR	113204	MultiplicativeExpression	value ( da ) / value ( db )		113068	0		/			
ANR	113205	CallExpression	value ( da )		113068	0					
ANR	113206	Callee	value		113068	0					
ANR	113207	Identifier	value		113068	0					
ANR	113208	ArgumentList	da		113068	1					
ANR	113209	Argument	da		113068	0					
ANR	113210	Identifier	da		113068	0					
ANR	113211	CallExpression	value ( db )		113068	1					
ANR	113212	Callee	value		113068	0					
ANR	113213	Identifier	value		113068	0					
ANR	113214	ArgumentList	db		113068	1					
ANR	113215	Argument	db		113068	0					
ANR	113216	Identifier	db		113068	0					
ANR	113217	ReturnType	static double		113068	1					
ANR	113218	Identifier	ratio		113068	2					
ANR	113219	ParameterList	"Bigint * a , Bigint * b"		113068	3					
ANR	113220	Parameter	Bigint * a	1220:21:23874:23882	113068	0	True				
ANR	113221	ParameterType	Bigint *		113068	0					
ANR	113222	Identifier	a		113068	1					
ANR	113223	Parameter	Bigint * b	1220:32:23885:23893	113068	1	True				
ANR	113224	ParameterType	Bigint *		113068	0					
ANR	113225	Identifier	b		113068	1					
ANR	113226	CFGEntryNode	ENTRY		113068		True				
ANR	113227	CFGExitNode	EXIT		113068		True				
ANR	113228	Symbol	& kb		113068						
ANR	113229	Symbol	a		113068						
ANR	113230	Symbol	& ka		113068						
ANR	113231	Symbol	b		113068						
ANR	113232	Symbol	word0		113068						
ANR	113233	Symbol	Exp_msk1		113068						
ANR	113234	Symbol	k		113068						
ANR	113235	Symbol	b -> wds		113068						
ANR	113236	Symbol	a -> wds		113068						
ANR	113237	Symbol	* a		113068						
ANR	113238	Symbol	* b		113068						
ANR	113239	Symbol	b2d		113068						
ANR	113240	Symbol	ka		113068						
ANR	113241	Symbol	kb		113068						
ANR	113242	Symbol	da		113068						
ANR	113243	Symbol	value		113068						
ANR	113244	Symbol	db		113068						
ANR	113245	DeclStmt									
ANR	113246	Decl							CONST double	CONST double [ ]	tens
ANR	113247	DeclStmt									
ANR	113248	Decl							CONST double	CONST double [ ]	bigtens
ANR	113249	DeclStmt									
ANR	113250	Decl							CONST double	CONST double [ ]	tinytens
ANR	113251	DeclStmt									
ANR	113252	Decl							CONST double	CONST double [ ]	bigtens
ANR	113253	DeclStmt									
ANR	113254	Decl							CONST double	CONST double [ ]	tinytens
ANR	113255	DeclStmt									
ANR	113256	Decl							CONST double	CONST double [ ]	bigtens
ANR	113257	DeclStmt									
ANR	113258	Decl							CONST double	CONST double [ ]	tinytens
ANR	113259	Function	quorem	1282:0:25085:26971							
ANR	113260	FunctionDef	"quorem (Bigint * b , Bigint * S)"		113259	0					
ANR	113261	CompoundStatement		1283:0:25125:26971	113259	0					
ANR	113262	IdentifierDeclStatement	int n ;	1284:1:25128:25133	113259	0	True				
ANR	113263	IdentifierDecl	n		113259	0					
ANR	113264	IdentifierDeclType	int		113259	0					
ANR	113265	Identifier	n		113259	1					
ANR	113266	IdentifierDeclStatement	"Long borrow , y ;"	1285:1:25136:25150	113259	1	True				
ANR	113267	IdentifierDecl	borrow		113259	0					
ANR	113268	IdentifierDeclType	Long		113259	0					
ANR	113269	Identifier	borrow		113259	1					
ANR	113270	IdentifierDecl	y		113259	1					
ANR	113271	IdentifierDeclType	Long		113259	0					
ANR	113272	Identifier	y		113259	1					
ANR	113273	IdentifierDeclStatement	"ULong carry , q , ys ;"	1286:1:25153:25171	113259	2	True				
ANR	113274	IdentifierDecl	carry		113259	0					
ANR	113275	IdentifierDeclType	ULong		113259	0					
ANR	113276	Identifier	carry		113259	1					
ANR	113277	IdentifierDecl	q		113259	1					
ANR	113278	IdentifierDeclType	ULong		113259	0					
ANR	113279	Identifier	q		113259	1					
ANR	113280	IdentifierDecl	ys		113259	2					
ANR	113281	IdentifierDeclType	ULong		113259	0					
ANR	113282	Identifier	ys		113259	1					
ANR	113283	IdentifierDeclStatement	"ULong * bx , * bxe , * sx , * sxe ;"	1287:1:25174:25200	113259	3	True				
ANR	113284	IdentifierDecl	* bx		113259	0					
ANR	113285	IdentifierDeclType	ULong *		113259	0					
ANR	113286	Identifier	bx		113259	1					
ANR	113287	IdentifierDecl	* bxe		113259	1					
ANR	113288	IdentifierDeclType	ULong *		113259	0					
ANR	113289	Identifier	bxe		113259	1					
ANR	113290	IdentifierDecl	* sx		113259	2					
ANR	113291	IdentifierDeclType	ULong *		113259	0					
ANR	113292	Identifier	sx		113259	1					
ANR	113293	IdentifierDecl	* sxe		113259	3					
ANR	113294	IdentifierDeclType	ULong *		113259	0					
ANR	113295	Identifier	sxe		113259	1					
ANR	113296	IdentifierDeclStatement	Long z ;	1289:1:25218:25224	113259	4	True				
ANR	113297	IdentifierDecl	z		113259	0					
ANR	113298	IdentifierDeclType	Long		113259	0					
ANR	113299	Identifier	z		113259	1					
ANR	113300	IdentifierDeclStatement	"ULong si , zs ;"	1290:1:25227:25239	113259	5	True				
ANR	113301	IdentifierDecl	si		113259	0					
ANR	113302	IdentifierDeclType	ULong		113259	0					
ANR	113303	Identifier	si		113259	1					
ANR	113304	IdentifierDecl	zs		113259	1					
ANR	113305	IdentifierDeclType	ULong		113259	0					
ANR	113306	Identifier	zs		113259	1					
ANR	113307	ExpressionStatement	n = S -> wds	1293:1:25250:25260	113259	6	True				
ANR	113308	AssignmentExpression	n = S -> wds		113259	0		=			
ANR	113309	Identifier	n		113259	0					
ANR	113310	PtrMemberAccess	S -> wds		113259	1					
ANR	113311	Identifier	S		113259	0					
ANR	113312	Identifier	wds		113259	1					
ANR	113313	IfStatement	if ( b -> wds > n )		113259	7					
ANR	113314	Condition	b -> wds > n	1295:15:25290:25299	113259	0	True				
ANR	113315	RelationalExpression	b -> wds > n		113259	0		>			
ANR	113316	PtrMemberAccess	b -> wds		113259	0					
ANR	113317	Identifier	b		113259	0					
ANR	113318	Identifier	wds		113259	1					
ANR	113319	Identifier	n		113259	1					
ANR	113320	ExpressionStatement	"Bug ( ""oversize b in quorem"" )"	1296:14:25316:25343	113259	1	True				
ANR	113321	CallExpression	"Bug ( ""oversize b in quorem"" )"		113259	0					
ANR	113322	Callee	Bug		113259	0					
ANR	113323	Identifier	Bug		113259	0					
ANR	113324	ArgumentList	"""oversize b in quorem"""		113259	1					
ANR	113325	Argument	"""oversize b in quorem"""		113259	0					
ANR	113326	PrimaryExpression	"""oversize b in quorem"""		113259	0					
ANR	113327	IfStatement	if ( b -> wds < n )		113259	8					
ANR	113328	Condition	b -> wds < n	1298:5:25357:25366	113259	0	True				
ANR	113329	RelationalExpression	b -> wds < n		113259	0		<			
ANR	113330	PtrMemberAccess	b -> wds		113259	0					
ANR	113331	Identifier	b		113259	0					
ANR	113332	Identifier	wds		113259	1					
ANR	113333	Identifier	n		113259	1					
ANR	113334	ReturnStatement	return 0 ;	1299:2:25371:25379	113259	1	True				
ANR	113335	PrimaryExpression	0		113259	0					
ANR	113336	ExpressionStatement	sx = S -> x	1300:1:25382:25391	113259	9	True				
ANR	113337	AssignmentExpression	sx = S -> x		113259	0		=			
ANR	113338	Identifier	sx		113259	0					
ANR	113339	PtrMemberAccess	S -> x		113259	1					
ANR	113340	Identifier	S		113259	0					
ANR	113341	Identifier	x		113259	1					
ANR	113342	ExpressionStatement	sxe = sx + -- n	1301:1:25394:25408	113259	10	True				
ANR	113343	AssignmentExpression	sxe = sx + -- n		113259	0		=			
ANR	113344	Identifier	sxe		113259	0					
ANR	113345	AdditiveExpression	sx + -- n		113259	1		+			
ANR	113346	Identifier	sx		113259	0					
ANR	113347	UnaryExpression	-- n		113259	1					
ANR	113348	IncDec	--		113259	0					
ANR	113349	Identifier	n		113259	1					
ANR	113350	ExpressionStatement	bx = b -> x	1302:1:25411:25420	113259	11	True				
ANR	113351	AssignmentExpression	bx = b -> x		113259	0		=			
ANR	113352	Identifier	bx		113259	0					
ANR	113353	PtrMemberAccess	b -> x		113259	1					
ANR	113354	Identifier	b		113259	0					
ANR	113355	Identifier	x		113259	1					
ANR	113356	ExpressionStatement	bxe = bx + n	1303:1:25423:25435	113259	12	True				
ANR	113357	AssignmentExpression	bxe = bx + n		113259	0		=			
ANR	113358	Identifier	bxe		113259	0					
ANR	113359	AdditiveExpression	bx + n		113259	1		+			
ANR	113360	Identifier	bx		113259	0					
ANR	113361	Identifier	n		113259	1					
ANR	113362	ExpressionStatement	q = * bxe / ( * sxe + 1 )	1304:1:25438:25459	113259	13	True				
ANR	113363	AssignmentExpression	q = * bxe / ( * sxe + 1 )		113259	0		=			
ANR	113364	Identifier	q		113259	0					
ANR	113365	MultiplicativeExpression	* bxe / ( * sxe + 1 )		113259	1		/			
ANR	113366	UnaryOperationExpression	* bxe		113259	0					
ANR	113367	UnaryOperator	*		113259	0					
ANR	113368	Identifier	bxe		113259	1					
ANR	113369	AdditiveExpression	* sxe + 1		113259	1		+			
ANR	113370	UnaryOperationExpression	* sxe		113259	0					
ANR	113371	UnaryOperator	*		113259	0					
ANR	113372	Identifier	sxe		113259	1					
ANR	113373	PrimaryExpression	1		113259	1					
ANR	113374	IfStatement	if ( q > 9 )		113259	14					
ANR	113375	Condition	q > 9	1306:15:25522:25526	113259	0	True				
ANR	113376	RelationalExpression	q > 9		113259	0		>			
ANR	113377	Identifier	q		113259	0					
ANR	113378	PrimaryExpression	9		113259	1					
ANR	113379	ExpressionStatement	"Bug ( ""oversized quotient in quorem"" )"	1307:14:25543:25578	113259	1	True				
ANR	113380	CallExpression	"Bug ( ""oversized quotient in quorem"" )"		113259	0					
ANR	113381	Callee	Bug		113259	0					
ANR	113382	Identifier	Bug		113259	0					
ANR	113383	ArgumentList	"""oversized quotient in quorem"""		113259	1					
ANR	113384	Argument	"""oversized quotient in quorem"""		113259	0					
ANR	113385	PrimaryExpression	"""oversized quotient in quorem"""		113259	0					
ANR	113386	IfStatement	if ( q )		113259	15					
ANR	113387	Condition	q	1309:5:25592:25592	113259	0	True				
ANR	113388	Identifier	q		113259	0					
ANR	113389	CompoundStatement		27:8:469:469	113259	1					
ANR	113390	ExpressionStatement	borrow = 0	1310:2:25599:25609	113259	0	True				
ANR	113391	AssignmentExpression	borrow = 0		113259	0		=			
ANR	113392	Identifier	borrow		113259	0					
ANR	113393	PrimaryExpression	0		113259	1					
ANR	113394	ExpressionStatement	carry = 0	1311:2:25613:25622	113259	1	True				
ANR	113395	AssignmentExpression	carry = 0		113259	0		=			
ANR	113396	Identifier	carry		113259	0					
ANR	113397	PrimaryExpression	0		113259	1					
ANR	113398	DoStatement	do		113259	2					
ANR	113399	CompoundStatement		30:5:503:503	113259	0					
ANR	113400	ExpressionStatement	si = * sx ++	1314:3:25649:25659	113259	0	True				
ANR	113401	AssignmentExpression	si = * sx ++		113259	0		=			
ANR	113402	Identifier	si		113259	0					
ANR	113403	UnaryOperationExpression	* sx ++		113259	1					
ANR	113404	UnaryOperator	*		113259	0					
ANR	113405	PostIncDecOperationExpression	sx ++		113259	1					
ANR	113406	Identifier	sx		113259	0					
ANR	113407	IncDec	++		113259	1					
ANR	113408	ExpressionStatement	ys = ( si & 0xffff ) * q + carry	1315:3:25664:25694	113259	1	True				
ANR	113409	AssignmentExpression	ys = ( si & 0xffff ) * q + carry		113259	0		=			
ANR	113410	Identifier	ys		113259	0					
ANR	113411	AdditiveExpression	( si & 0xffff ) * q + carry		113259	1		+			
ANR	113412	MultiplicativeExpression	( si & 0xffff ) * q		113259	0		*			
ANR	113413	BitAndExpression	si & 0xffff		113259	0		&			
ANR	113414	Identifier	si		113259	0					
ANR	113415	PrimaryExpression	0xffff		113259	1					
ANR	113416	Identifier	q		113259	1					
ANR	113417	Identifier	carry		113259	1					
ANR	113418	ExpressionStatement	zs = ( si >> 16 ) * q + ( ys >> 16 )	1316:3:25699:25731	113259	2	True				
ANR	113419	AssignmentExpression	zs = ( si >> 16 ) * q + ( ys >> 16 )		113259	0		=			
ANR	113420	Identifier	zs		113259	0					
ANR	113421	AdditiveExpression	( si >> 16 ) * q + ( ys >> 16 )		113259	1		+			
ANR	113422	MultiplicativeExpression	( si >> 16 ) * q		113259	0		*			
ANR	113423	ShiftExpression	si >> 16		113259	0		>>			
ANR	113424	Identifier	si		113259	0					
ANR	113425	PrimaryExpression	16		113259	1					
ANR	113426	Identifier	q		113259	1					
ANR	113427	ShiftExpression	ys >> 16		113259	1		>>			
ANR	113428	Identifier	ys		113259	0					
ANR	113429	PrimaryExpression	16		113259	1					
ANR	113430	ExpressionStatement	carry = zs >> 16	1317:3:25736:25752	113259	3	True				
ANR	113431	AssignmentExpression	carry = zs >> 16		113259	0		=			
ANR	113432	Identifier	carry		113259	0					
ANR	113433	ShiftExpression	zs >> 16		113259	1		>>			
ANR	113434	Identifier	zs		113259	0					
ANR	113435	PrimaryExpression	16		113259	1					
ANR	113436	ExpressionStatement	y = ( * bx & 0xffff ) - ( ys & 0xffff ) + borrow	1318:3:25757:25800	113259	4	True				
ANR	113437	AssignmentExpression	y = ( * bx & 0xffff ) - ( ys & 0xffff ) + borrow		113259	0		=			
ANR	113438	Identifier	y		113259	0					
ANR	113439	AdditiveExpression	( * bx & 0xffff ) - ( ys & 0xffff ) + borrow		113259	1		-			
ANR	113440	BitAndExpression	* bx & 0xffff		113259	0		&			
ANR	113441	UnaryOperationExpression	* bx		113259	0					
ANR	113442	UnaryOperator	*		113259	0					
ANR	113443	Identifier	bx		113259	1					
ANR	113444	PrimaryExpression	0xffff		113259	1					
ANR	113445	AdditiveExpression	( ys & 0xffff ) + borrow		113259	1		+			
ANR	113446	BitAndExpression	ys & 0xffff		113259	0		&			
ANR	113447	Identifier	ys		113259	0					
ANR	113448	PrimaryExpression	0xffff		113259	1					
ANR	113449	Identifier	borrow		113259	1					
ANR	113450	ExpressionStatement	borrow = y >> 16	1319:3:25805:25821	113259	5	True				
ANR	113451	AssignmentExpression	borrow = y >> 16		113259	0		=			
ANR	113452	Identifier	borrow		113259	0					
ANR	113453	ShiftExpression	y >> 16		113259	1		>>			
ANR	113454	Identifier	y		113259	0					
ANR	113455	PrimaryExpression	16		113259	1					
ANR	113456	ExpressionStatement	"Sign_Extend ( borrow , y )"	1320:3:25826:25848	113259	6	True				
ANR	113457	CallExpression	"Sign_Extend ( borrow , y )"		113259	0					
ANR	113458	Callee	Sign_Extend		113259	0					
ANR	113459	Identifier	Sign_Extend		113259	0					
ANR	113460	ArgumentList	borrow		113259	1					
ANR	113461	Argument	borrow		113259	0					
ANR	113462	Identifier	borrow		113259	0					
ANR	113463	Argument	y		113259	1					
ANR	113464	Identifier	y		113259	0					
ANR	113465	ExpressionStatement	z = ( * bx >> 16 ) - ( zs & 0xffff ) + borrow	1321:3:25853:25893	113259	7	True				
ANR	113466	AssignmentExpression	z = ( * bx >> 16 ) - ( zs & 0xffff ) + borrow		113259	0		=			
ANR	113467	Identifier	z		113259	0					
ANR	113468	AdditiveExpression	( * bx >> 16 ) - ( zs & 0xffff ) + borrow		113259	1		-			
ANR	113469	ShiftExpression	* bx >> 16		113259	0		>>			
ANR	113470	UnaryOperationExpression	* bx		113259	0					
ANR	113471	UnaryOperator	*		113259	0					
ANR	113472	Identifier	bx		113259	1					
ANR	113473	PrimaryExpression	16		113259	1					
ANR	113474	AdditiveExpression	( zs & 0xffff ) + borrow		113259	1		+			
ANR	113475	BitAndExpression	zs & 0xffff		113259	0		&			
ANR	113476	Identifier	zs		113259	0					
ANR	113477	PrimaryExpression	0xffff		113259	1					
ANR	113478	Identifier	borrow		113259	1					
ANR	113479	ExpressionStatement	borrow = z >> 16	1322:3:25898:25914	113259	8	True				
ANR	113480	AssignmentExpression	borrow = z >> 16		113259	0		=			
ANR	113481	Identifier	borrow		113259	0					
ANR	113482	ShiftExpression	z >> 16		113259	1		>>			
ANR	113483	Identifier	z		113259	0					
ANR	113484	PrimaryExpression	16		113259	1					
ANR	113485	ExpressionStatement	"Sign_Extend ( borrow , z )"	1323:3:25919:25941	113259	9	True				
ANR	113486	CallExpression	"Sign_Extend ( borrow , z )"		113259	0					
ANR	113487	Callee	Sign_Extend		113259	0					
ANR	113488	Identifier	Sign_Extend		113259	0					
ANR	113489	ArgumentList	borrow		113259	1					
ANR	113490	Argument	borrow		113259	0					
ANR	113491	Identifier	borrow		113259	0					
ANR	113492	Argument	z		113259	1					
ANR	113493	Identifier	z		113259	0					
ANR	113494	ExpressionStatement	"Storeinc ( bx , z , y )"	1324:3:25946:25964	113259	10	True				
ANR	113495	CallExpression	"Storeinc ( bx , z , y )"		113259	0					
ANR	113496	Callee	Storeinc		113259	0					
ANR	113497	Identifier	Storeinc		113259	0					
ANR	113498	ArgumentList	bx		113259	1					
ANR	113499	Argument	bx		113259	0					
ANR	113500	Identifier	bx		113259	0					
ANR	113501	Argument	z		113259	1					
ANR	113502	Identifier	z		113259	0					
ANR	113503	Argument	y		113259	2					
ANR	113504	Identifier	y		113259	0					
ANR	113505	Condition	sx <= sxe	1334:8:26147:26155	113259	1	True				
ANR	113506	RelationalExpression	sx <= sxe		113259	0		<=			
ANR	113507	Identifier	sx		113259	0					
ANR	113508	Identifier	sxe		113259	1					
ANR	113509	IfStatement	if ( ! * bxe )		113259	3					
ANR	113510	Condition	! * bxe	1335:6:26165:26169	113259	0	True				
ANR	113511	UnaryOperationExpression	! * bxe		113259	0					
ANR	113512	UnaryOperator	!		113259	0					
ANR	113513	UnaryOperationExpression	* bxe		113259	1					
ANR	113514	UnaryOperator	*		113259	0					
ANR	113515	Identifier	bxe		113259	1					
ANR	113516	CompoundStatement		53:13:1046:1046	113259	1					
ANR	113517	ExpressionStatement	bx = b -> x	1336:3:26177:26186	113259	0	True				
ANR	113518	AssignmentExpression	bx = b -> x		113259	0		=			
ANR	113519	Identifier	bx		113259	0					
ANR	113520	PtrMemberAccess	b -> x		113259	1					
ANR	113521	Identifier	b		113259	0					
ANR	113522	Identifier	x		113259	1					
ANR	113523	WhileStatement	while ( -- bxe > bx && ! * bxe )		113259	1					
ANR	113524	Condition	-- bxe > bx && ! * bxe	1337:9:26197:26215	113259	0	True				
ANR	113525	AndExpression	-- bxe > bx && ! * bxe		113259	0		&&			
ANR	113526	RelationalExpression	-- bxe > bx		113259	0		>			
ANR	113527	UnaryExpression	-- bxe		113259	0					
ANR	113528	IncDec	--		113259	0					
ANR	113529	Identifier	bxe		113259	1					
ANR	113530	Identifier	bx		113259	1					
ANR	113531	UnaryOperationExpression	! * bxe		113259	1					
ANR	113532	UnaryOperator	!		113259	0					
ANR	113533	UnaryOperationExpression	* bxe		113259	1					
ANR	113534	UnaryOperator	*		113259	0					
ANR	113535	Identifier	bxe		113259	1					
ANR	113536	ExpressionStatement	-- n	1338:4:26222:26225	113259	1	True				
ANR	113537	UnaryExpression	-- n		113259	0					
ANR	113538	IncDec	--		113259	0					
ANR	113539	Identifier	n		113259	1					
ANR	113540	ExpressionStatement	b -> wds = n	1339:3:26230:26240	113259	2	True				
ANR	113541	AssignmentExpression	b -> wds = n		113259	0		=			
ANR	113542	PtrMemberAccess	b -> wds		113259	0					
ANR	113543	Identifier	b		113259	0					
ANR	113544	Identifier	wds		113259	1					
ANR	113545	Identifier	n		113259	1					
ANR	113546	IfStatement	"if ( cmp ( b , S ) >= 0 )"		113259	16					
ANR	113547	Condition	"cmp ( b , S ) >= 0"	1342:5:26254:26267	113259	0	True				
ANR	113548	RelationalExpression	"cmp ( b , S ) >= 0"		113259	0		>=			
ANR	113549	CallExpression	"cmp ( b , S )"		113259	0					
ANR	113550	Callee	cmp		113259	0					
ANR	113551	Identifier	cmp		113259	0					
ANR	113552	ArgumentList	b		113259	1					
ANR	113553	Argument	b		113259	0					
ANR	113554	Identifier	b		113259	0					
ANR	113555	Argument	S		113259	1					
ANR	113556	Identifier	S		113259	0					
ANR	113557	PrimaryExpression	0		113259	1					
ANR	113558	CompoundStatement		60:21:1144:1144	113259	1					
ANR	113559	ExpressionStatement	q ++	1343:2:26274:26277	113259	0	True				
ANR	113560	PostIncDecOperationExpression	q ++		113259	0					
ANR	113561	Identifier	q		113259	0					
ANR	113562	IncDec	++		113259	1					
ANR	113563	ExpressionStatement	borrow = 0	1344:2:26281:26291	113259	1	True				
ANR	113564	AssignmentExpression	borrow = 0		113259	0		=			
ANR	113565	Identifier	borrow		113259	0					
ANR	113566	PrimaryExpression	0		113259	1					
ANR	113567	ExpressionStatement	carry = 0	1345:2:26295:26304	113259	2	True				
ANR	113568	AssignmentExpression	carry = 0		113259	0		=			
ANR	113569	Identifier	carry		113259	0					
ANR	113570	PrimaryExpression	0		113259	1					
ANR	113571	ExpressionStatement	bx = b -> x	1346:2:26308:26317	113259	3	True				
ANR	113572	AssignmentExpression	bx = b -> x		113259	0		=			
ANR	113573	Identifier	bx		113259	0					
ANR	113574	PtrMemberAccess	b -> x		113259	1					
ANR	113575	Identifier	b		113259	0					
ANR	113576	Identifier	x		113259	1					
ANR	113577	ExpressionStatement	sx = S -> x	1347:2:26321:26330	113259	4	True				
ANR	113578	AssignmentExpression	sx = S -> x		113259	0		=			
ANR	113579	Identifier	sx		113259	0					
ANR	113580	PtrMemberAccess	S -> x		113259	1					
ANR	113581	Identifier	S		113259	0					
ANR	113582	Identifier	x		113259	1					
ANR	113583	DoStatement	do		113259	5					
ANR	113584	CompoundStatement		66:5:1211:1211	113259	0					
ANR	113585	ExpressionStatement	si = * sx ++	1350:3:26357:26367	113259	0	True				
ANR	113586	AssignmentExpression	si = * sx ++		113259	0		=			
ANR	113587	Identifier	si		113259	0					
ANR	113588	UnaryOperationExpression	* sx ++		113259	1					
ANR	113589	UnaryOperator	*		113259	0					
ANR	113590	PostIncDecOperationExpression	sx ++		113259	1					
ANR	113591	Identifier	sx		113259	0					
ANR	113592	IncDec	++		113259	1					
ANR	113593	ExpressionStatement	ys = ( si & 0xffff ) + carry	1351:3:26372:26398	113259	1	True				
ANR	113594	AssignmentExpression	ys = ( si & 0xffff ) + carry		113259	0		=			
ANR	113595	Identifier	ys		113259	0					
ANR	113596	AdditiveExpression	( si & 0xffff ) + carry		113259	1		+			
ANR	113597	BitAndExpression	si & 0xffff		113259	0		&			
ANR	113598	Identifier	si		113259	0					
ANR	113599	PrimaryExpression	0xffff		113259	1					
ANR	113600	Identifier	carry		113259	1					
ANR	113601	ExpressionStatement	zs = ( si >> 16 ) + ( ys >> 16 )	1352:3:26403:26431	113259	2	True				
ANR	113602	AssignmentExpression	zs = ( si >> 16 ) + ( ys >> 16 )		113259	0		=			
ANR	113603	Identifier	zs		113259	0					
ANR	113604	AdditiveExpression	( si >> 16 ) + ( ys >> 16 )		113259	1		+			
ANR	113605	ShiftExpression	si >> 16		113259	0		>>			
ANR	113606	Identifier	si		113259	0					
ANR	113607	PrimaryExpression	16		113259	1					
ANR	113608	ShiftExpression	ys >> 16		113259	1		>>			
ANR	113609	Identifier	ys		113259	0					
ANR	113610	PrimaryExpression	16		113259	1					
ANR	113611	ExpressionStatement	carry = zs >> 16	1353:3:26436:26452	113259	3	True				
ANR	113612	AssignmentExpression	carry = zs >> 16		113259	0		=			
ANR	113613	Identifier	carry		113259	0					
ANR	113614	ShiftExpression	zs >> 16		113259	1		>>			
ANR	113615	Identifier	zs		113259	0					
ANR	113616	PrimaryExpression	16		113259	1					
ANR	113617	ExpressionStatement	y = ( * bx & 0xffff ) - ( ys & 0xffff ) + borrow	1354:3:26457:26500	113259	4	True				
ANR	113618	AssignmentExpression	y = ( * bx & 0xffff ) - ( ys & 0xffff ) + borrow		113259	0		=			
ANR	113619	Identifier	y		113259	0					
ANR	113620	AdditiveExpression	( * bx & 0xffff ) - ( ys & 0xffff ) + borrow		113259	1		-			
ANR	113621	BitAndExpression	* bx & 0xffff		113259	0		&			
ANR	113622	UnaryOperationExpression	* bx		113259	0					
ANR	113623	UnaryOperator	*		113259	0					
ANR	113624	Identifier	bx		113259	1					
ANR	113625	PrimaryExpression	0xffff		113259	1					
ANR	113626	AdditiveExpression	( ys & 0xffff ) + borrow		113259	1		+			
ANR	113627	BitAndExpression	ys & 0xffff		113259	0		&			
ANR	113628	Identifier	ys		113259	0					
ANR	113629	PrimaryExpression	0xffff		113259	1					
ANR	113630	Identifier	borrow		113259	1					
ANR	113631	ExpressionStatement	borrow = y >> 16	1355:3:26505:26521	113259	5	True				
ANR	113632	AssignmentExpression	borrow = y >> 16		113259	0		=			
ANR	113633	Identifier	borrow		113259	0					
ANR	113634	ShiftExpression	y >> 16		113259	1		>>			
ANR	113635	Identifier	y		113259	0					
ANR	113636	PrimaryExpression	16		113259	1					
ANR	113637	ExpressionStatement	"Sign_Extend ( borrow , y )"	1356:3:26526:26548	113259	6	True				
ANR	113638	CallExpression	"Sign_Extend ( borrow , y )"		113259	0					
ANR	113639	Callee	Sign_Extend		113259	0					
ANR	113640	Identifier	Sign_Extend		113259	0					
ANR	113641	ArgumentList	borrow		113259	1					
ANR	113642	Argument	borrow		113259	0					
ANR	113643	Identifier	borrow		113259	0					
ANR	113644	Argument	y		113259	1					
ANR	113645	Identifier	y		113259	0					
ANR	113646	ExpressionStatement	z = ( * bx >> 16 ) - ( zs & 0xffff ) + borrow	1357:3:26553:26593	113259	7	True				
ANR	113647	AssignmentExpression	z = ( * bx >> 16 ) - ( zs & 0xffff ) + borrow		113259	0		=			
ANR	113648	Identifier	z		113259	0					
ANR	113649	AdditiveExpression	( * bx >> 16 ) - ( zs & 0xffff ) + borrow		113259	1		-			
ANR	113650	ShiftExpression	* bx >> 16		113259	0		>>			
ANR	113651	UnaryOperationExpression	* bx		113259	0					
ANR	113652	UnaryOperator	*		113259	0					
ANR	113653	Identifier	bx		113259	1					
ANR	113654	PrimaryExpression	16		113259	1					
ANR	113655	AdditiveExpression	( zs & 0xffff ) + borrow		113259	1		+			
ANR	113656	BitAndExpression	zs & 0xffff		113259	0		&			
ANR	113657	Identifier	zs		113259	0					
ANR	113658	PrimaryExpression	0xffff		113259	1					
ANR	113659	Identifier	borrow		113259	1					
ANR	113660	ExpressionStatement	borrow = z >> 16	1358:3:26598:26614	113259	8	True				
ANR	113661	AssignmentExpression	borrow = z >> 16		113259	0		=			
ANR	113662	Identifier	borrow		113259	0					
ANR	113663	ShiftExpression	z >> 16		113259	1		>>			
ANR	113664	Identifier	z		113259	0					
ANR	113665	PrimaryExpression	16		113259	1					
ANR	113666	ExpressionStatement	"Sign_Extend ( borrow , z )"	1359:3:26619:26641	113259	9	True				
ANR	113667	CallExpression	"Sign_Extend ( borrow , z )"		113259	0					
ANR	113668	Callee	Sign_Extend		113259	0					
ANR	113669	Identifier	Sign_Extend		113259	0					
ANR	113670	ArgumentList	borrow		113259	1					
ANR	113671	Argument	borrow		113259	0					
ANR	113672	Identifier	borrow		113259	0					
ANR	113673	Argument	z		113259	1					
ANR	113674	Identifier	z		113259	0					
ANR	113675	ExpressionStatement	"Storeinc ( bx , z , y )"	1360:3:26646:26664	113259	10	True				
ANR	113676	CallExpression	"Storeinc ( bx , z , y )"		113259	0					
ANR	113677	Callee	Storeinc		113259	0					
ANR	113678	Identifier	Storeinc		113259	0					
ANR	113679	ArgumentList	bx		113259	1					
ANR	113680	Argument	bx		113259	0					
ANR	113681	Identifier	bx		113259	0					
ANR	113682	Argument	z		113259	1					
ANR	113683	Identifier	z		113259	0					
ANR	113684	Argument	y		113259	2					
ANR	113685	Identifier	y		113259	0					
ANR	113686	Condition	sx <= sxe	1370:8:26843:26851	113259	1	True				
ANR	113687	RelationalExpression	sx <= sxe		113259	0		<=			
ANR	113688	Identifier	sx		113259	0					
ANR	113689	Identifier	sxe		113259	1					
ANR	113690	ExpressionStatement	bx = b -> x	1371:2:26857:26866	113259	6	True				
ANR	113691	AssignmentExpression	bx = b -> x		113259	0		=			
ANR	113692	Identifier	bx		113259	0					
ANR	113693	PtrMemberAccess	b -> x		113259	1					
ANR	113694	Identifier	b		113259	0					
ANR	113695	Identifier	x		113259	1					
ANR	113696	ExpressionStatement	bxe = bx + n	1372:2:26870:26882	113259	7	True				
ANR	113697	AssignmentExpression	bxe = bx + n		113259	0		=			
ANR	113698	Identifier	bxe		113259	0					
ANR	113699	AdditiveExpression	bx + n		113259	1		+			
ANR	113700	Identifier	bx		113259	0					
ANR	113701	Identifier	n		113259	1					
ANR	113702	IfStatement	if ( ! * bxe )		113259	8					
ANR	113703	Condition	! * bxe	1373:6:26890:26894	113259	0	True				
ANR	113704	UnaryOperationExpression	! * bxe		113259	0					
ANR	113705	UnaryOperator	!		113259	0					
ANR	113706	UnaryOperationExpression	* bxe		113259	1					
ANR	113707	UnaryOperator	*		113259	0					
ANR	113708	Identifier	bxe		113259	1					
ANR	113709	CompoundStatement		91:13:1771:1771	113259	1					
ANR	113710	WhileStatement	while ( -- bxe > bx && ! * bxe )		113259	0					
ANR	113711	Condition	-- bxe > bx && ! * bxe	1374:9:26908:26926	113259	0	True				
ANR	113712	AndExpression	-- bxe > bx && ! * bxe		113259	0		&&			
ANR	113713	RelationalExpression	-- bxe > bx		113259	0		>			
ANR	113714	UnaryExpression	-- bxe		113259	0					
ANR	113715	IncDec	--		113259	0					
ANR	113716	Identifier	bxe		113259	1					
ANR	113717	Identifier	bx		113259	1					
ANR	113718	UnaryOperationExpression	! * bxe		113259	1					
ANR	113719	UnaryOperator	!		113259	0					
ANR	113720	UnaryOperationExpression	* bxe		113259	1					
ANR	113721	UnaryOperator	*		113259	0					
ANR	113722	Identifier	bxe		113259	1					
ANR	113723	ExpressionStatement	-- n	1375:4:26933:26936	113259	1	True				
ANR	113724	UnaryExpression	-- n		113259	0					
ANR	113725	IncDec	--		113259	0					
ANR	113726	Identifier	n		113259	1					
ANR	113727	ExpressionStatement	b -> wds = n	1376:3:26941:26951	113259	1	True				
ANR	113728	AssignmentExpression	b -> wds = n		113259	0		=			
ANR	113729	PtrMemberAccess	b -> wds		113259	0					
ANR	113730	Identifier	b		113259	0					
ANR	113731	Identifier	wds		113259	1					
ANR	113732	Identifier	n		113259	1					
ANR	113733	ReturnStatement	return q ;	1379:1:26961:26969	113259	17	True				
ANR	113734	Identifier	q		113259	0					
ANR	113735	ReturnType	static int		113259	1					
ANR	113736	Identifier	quorem		113259	2					
ANR	113737	ParameterList	"Bigint * b , Bigint * S"		113259	3					
ANR	113738	Parameter	Bigint * b	1282:18:25103:25111	113259	0	True				
ANR	113739	ParameterType	Bigint *		113259	0					
ANR	113740	Identifier	b		113259	1					
ANR	113741	Parameter	Bigint * S	1282:29:25114:25122	113259	1	True				
ANR	113742	ParameterType	Bigint *		113259	0					
ANR	113743	Identifier	S		113259	1					
ANR	113744	CFGEntryNode	ENTRY		113259		True				
ANR	113745	CFGExitNode	EXIT		113259		True				
ANR	113746	Symbol	* bxe		113259						
ANR	113747	Symbol	cmp		113259						
ANR	113748	Symbol	S -> wds		113259						
ANR	113749	Symbol	* sxe		113259						
ANR	113750	Symbol	S -> x		113259						
ANR	113751	Symbol	bxe		113259						
ANR	113752	Symbol	S		113259						
ANR	113753	Symbol	b -> x		113259						
ANR	113754	Symbol	bx		113259						
ANR	113755	Symbol	si		113259						
ANR	113756	Symbol	ys		113259						
ANR	113757	Symbol	* S		113259						
ANR	113758	Symbol	* bx		113259						
ANR	113759	Symbol	sxe		113259						
ANR	113760	Symbol	b		113259						
ANR	113761	Symbol	sx		113259						
ANR	113762	Symbol	* sx ++		113259						
ANR	113763	Symbol	b -> wds		113259						
ANR	113764	Symbol	* b		113259						
ANR	113765	Symbol	n		113259						
ANR	113766	Symbol	q		113259						
ANR	113767	Symbol	y		113259						
ANR	113768	Symbol	borrow		113259						
ANR	113769	Symbol	zs		113259						
ANR	113770	Symbol	z		113259						
ANR	113771	Symbol	carry		113259						
ANR	113772	Function	destroy_freelist	1382:0:26974:27285							
ANR	113773	FunctionDef	destroy_freelist ()		113772	0					
ANR	113774	CompoundStatement		1383:0:27009:27285	113772	0					
ANR	113775	IdentifierDeclStatement	int i ;	1384:1:27012:27017	113772	0	True				
ANR	113776	IdentifierDecl	i		113772	0					
ANR	113777	IdentifierDeclType	int		113772	0					
ANR	113778	Identifier	i		113772	1					
ANR	113779	IdentifierDeclStatement	Bigint * tmp ;	1385:1:27020:27031	113772	1	True				
ANR	113780	IdentifierDecl	* tmp		113772	0					
ANR	113781	IdentifierDeclType	Bigint *		113772	0					
ANR	113782	Identifier	tmp		113772	1					
ANR	113783	ExpressionStatement	_THREAD_PRIVATE_MUTEX_LOCK ( dtoa_mutex )	1387:1:27035:27073	113772	2	True				
ANR	113784	CallExpression	_THREAD_PRIVATE_MUTEX_LOCK ( dtoa_mutex )		113772	0					
ANR	113785	Callee	_THREAD_PRIVATE_MUTEX_LOCK		113772	0					
ANR	113786	Identifier	_THREAD_PRIVATE_MUTEX_LOCK		113772	0					
ANR	113787	ArgumentList	dtoa_mutex		113772	1					
ANR	113788	Argument	dtoa_mutex		113772	0					
ANR	113789	Identifier	dtoa_mutex		113772	0					
ANR	113790	ForStatement	for ( i = 0 ; i <= Kmax ; i ++ )		113772	3					
ANR	113791	ForInit	i = 0 ;	1388:6:27081:27086	113772	0	True				
ANR	113792	AssignmentExpression	i = 0		113772	0		=			
ANR	113793	Identifier	i		113772	0					
ANR	113794	PrimaryExpression	0		113772	1					
ANR	113795	Condition	i <= Kmax	1388:13:27088:27096	113772	1	True				
ANR	113796	RelationalExpression	i <= Kmax		113772	0		<=			
ANR	113797	Identifier	i		113772	0					
ANR	113798	Identifier	Kmax		113772	1					
ANR	113799	PostIncDecOperationExpression	i ++	1388:24:27099:27101	113772	2	True				
ANR	113800	Identifier	i		113772	0					
ANR	113801	IncDec	++		113772	1					
ANR	113802	CompoundStatement		7:2:98:127	113772	3					
ANR	113803	IdentifierDeclStatement	Bigint * * listp = & freelist [ i ] ;	1389:2:27108:27137	113772	0	True				
ANR	113804	IdentifierDecl	* * listp = & freelist [ i ]		113772	0					
ANR	113805	IdentifierDeclType	Bigint * *		113772	0					
ANR	113806	Identifier	listp		113772	1					
ANR	113807	AssignmentExpression	* * listp = & freelist [ i ]		113772	2		=			
ANR	113808	Identifier	listp		113772	0					
ANR	113809	UnaryOperationExpression	& freelist [ i ]		113772	1					
ANR	113810	UnaryOperator	&		113772	0					
ANR	113811	ArrayIndexing	freelist [ i ]		113772	1					
ANR	113812	Identifier	freelist		113772	0					
ANR	113813	Identifier	i		113772	1					
ANR	113814	WhileStatement	while ( ( tmp = * listp ) != NULL )		113772	1					
ANR	113815	Condition	( tmp = * listp ) != NULL	1390:9:27148:27169	113772	0	True				
ANR	113816	EqualityExpression	( tmp = * listp ) != NULL		113772	0		!=			
ANR	113817	AssignmentExpression	tmp = * listp		113772	0		=			
ANR	113818	Identifier	tmp		113772	0					
ANR	113819	UnaryOperationExpression	* listp		113772	1					
ANR	113820	UnaryOperator	*		113772	0					
ANR	113821	Identifier	listp		113772	1					
ANR	113822	Identifier	NULL		113772	1					
ANR	113823	CompoundStatement		8:33:162:162	113772	1					
ANR	113824	ExpressionStatement	* listp = tmp -> next	1391:3:27177:27195	113772	0	True				
ANR	113825	AssignmentExpression	* listp = tmp -> next		113772	0		=			
ANR	113826	UnaryOperationExpression	* listp		113772	0					
ANR	113827	UnaryOperator	*		113772	0					
ANR	113828	Identifier	listp		113772	1					
ANR	113829	PtrMemberAccess	tmp -> next		113772	1					
ANR	113830	Identifier	tmp		113772	0					
ANR	113831	Identifier	next		113772	1					
ANR	113832	ExpressionStatement	free ( tmp )	1392:3:27200:27209	113772	1	True				
ANR	113833	CallExpression	free ( tmp )		113772	0					
ANR	113834	Callee	free		113772	0					
ANR	113835	Identifier	free		113772	0					
ANR	113836	ArgumentList	tmp		113772	1					
ANR	113837	Argument	tmp		113772	0					
ANR	113838	Identifier	tmp		113772	0					
ANR	113839	ExpressionStatement	freelist [ i ] = NULL	1394:2:27217:27235	113772	2	True				
ANR	113840	AssignmentExpression	freelist [ i ] = NULL		113772	0		=			
ANR	113841	ArrayIndexing	freelist [ i ]		113772	0					
ANR	113842	Identifier	freelist		113772	0					
ANR	113843	Identifier	i		113772	1					
ANR	113844	Identifier	NULL		113772	1					
ANR	113845	ExpressionStatement	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )	1396:1:27241:27281	113772	4	True				
ANR	113846	CallExpression	_THREAD_PRIVATE_MUTEX_UNLOCK ( dtoa_mutex )		113772	0					
ANR	113847	Callee	_THREAD_PRIVATE_MUTEX_UNLOCK		113772	0					
ANR	113848	Identifier	_THREAD_PRIVATE_MUTEX_UNLOCK		113772	0					
ANR	113849	ArgumentList	dtoa_mutex		113772	1					
ANR	113850	Argument	dtoa_mutex		113772	0					
ANR	113851	Identifier	dtoa_mutex		113772	0					
ANR	113852	ReturnType	static void		113772	1					
ANR	113853	Identifier	destroy_freelist		113772	2					
ANR	113854	ParameterList			113772	3					
ANR	113855	CFGEntryNode	ENTRY		113772		True				
ANR	113856	CFGExitNode	EXIT		113772		True				
ANR	113857	Symbol	listp		113772						
ANR	113858	Symbol	* tmp		113772						
ANR	113859	Symbol	freelist		113772						
ANR	113860	Symbol	NULL		113772						
ANR	113861	Symbol	* i		113772						
ANR	113862	Symbol	* freelist		113772						
ANR	113863	Symbol	tmp		113772						
ANR	113864	Symbol	dtoa_mutex		113772						
ANR	113865	Symbol	* listp		113772						
ANR	113866	Symbol	i		113772						
ANR	113867	Symbol	Kmax		113772						
ANR	113868	Symbol	tmp -> next		113772						
ANR	113869	Function	zend_freedtoa	1401:0:27289:27415							
ANR	113870	FunctionDef	zend_freedtoa (char * s)		113869	0					
ANR	113871	CompoundStatement		1402:0:27326:27415	113869	0					
ANR	113872	IdentifierDeclStatement	Bigint * b = ( Bigint * ) ( ( int * ) s - 1 ) ;	1403:1:27329:27365	113869	0	True				
ANR	113873	IdentifierDecl	* b = ( Bigint * ) ( ( int * ) s - 1 )		113869	0					
ANR	113874	IdentifierDeclType	Bigint *		113869	0					
ANR	113875	Identifier	b		113869	1					
ANR	113876	AssignmentExpression	* b = ( Bigint * ) ( ( int * ) s - 1 )		113869	2		=			
ANR	113877	Identifier	b		113869	0					
ANR	113878	CastExpression	( Bigint * ) ( ( int * ) s - 1 )		113869	1					
ANR	113879	CastTarget	Bigint *		113869	0					
ANR	113880	AdditiveExpression	( int * ) s - 1		113869	1		-			
ANR	113881	CastExpression	( int * ) s		113869	0					
ANR	113882	CastTarget	int *		113869	0					
ANR	113883	Identifier	s		113869	1					
ANR	113884	PrimaryExpression	1		113869	1					
ANR	113885	ExpressionStatement	b -> maxwds = 1 << ( b -> k = * ( int * ) b )	1404:1:27368:27402	113869	1	True				
ANR	113886	AssignmentExpression	b -> maxwds = 1 << ( b -> k = * ( int * ) b )		113869	0		=			
ANR	113887	PtrMemberAccess	b -> maxwds		113869	0					
ANR	113888	Identifier	b		113869	0					
ANR	113889	Identifier	maxwds		113869	1					
ANR	113890	ShiftExpression	1 << ( b -> k = * ( int * ) b )		113869	1		<<			
ANR	113891	PrimaryExpression	1		113869	0					
ANR	113892	AssignmentExpression	b -> k = * ( int * ) b		113869	1		=			
ANR	113893	PtrMemberAccess	b -> k		113869	0					
ANR	113894	Identifier	b		113869	0					
ANR	113895	Identifier	k		113869	1					
ANR	113896	UnaryOperationExpression	* ( int * ) b		113869	1					
ANR	113897	UnaryOperator	*		113869	0					
ANR	113898	CastExpression	( int * ) b		113869	1					
ANR	113899	CastTarget	int *		113869	0					
ANR	113900	Identifier	b		113869	1					
ANR	113901	ExpressionStatement	Bfree ( b )	1405:1:27405:27413	113869	2	True				
ANR	113902	CallExpression	Bfree ( b )		113869	0					
ANR	113903	Callee	Bfree		113869	0					
ANR	113904	Identifier	Bfree		113869	0					
ANR	113905	ArgumentList	b		113869	1					
ANR	113906	Argument	b		113869	0					
ANR	113907	Identifier	b		113869	0					
ANR	113908	ReturnType	ZEND_API void		113869	1					
ANR	113909	Identifier	zend_freedtoa		113869	2					
ANR	113910	ParameterList	char * s		113869	3					
ANR	113911	Parameter	char * s	1401:28:27317:27323	113869	0	True				
ANR	113912	ParameterType	char *		113869	0					
ANR	113913	Identifier	s		113869	1					
ANR	113914	CFGEntryNode	ENTRY		113869		True				
ANR	113915	CFGExitNode	EXIT		113869		True				
ANR	113916	Symbol	b		113869						
ANR	113917	Symbol	b -> maxwds		113869						
ANR	113918	Symbol	s		113869						
ANR	113919	Symbol	b -> k		113869						
ANR	113920	Symbol	* ( int * ) b		113869						
ANR	113921	Symbol	* b		113869						
ANR	113922	Function	zend_dtoa	1442:0:29164:33111							
ANR	113923	FunctionDef	"zend_dtoa (double _d , int mode , int ndigits , int * decpt , int * sign , char * * rve)"		113922	0					
ANR	113924	CompoundStatement		1443:0:29259:33111	113922	0					
ANR	113925	IdentifierDeclStatement	"int bbits , b2 , b5 , be , dig , i , ieps , ilim = 0 , ilim0 , ilim1 , j , j1 , k , k0 , k_check , leftright , m2 , m5 , s2 , s5 , spec_case = 0 , try_quick ;"	1478:1:30772:30911	113922	0	True				
ANR	113926	IdentifierDecl	bbits		113922	0					
ANR	113927	IdentifierDeclType	int		113922	0					
ANR	113928	Identifier	bbits		113922	1					
ANR	113929	IdentifierDecl	b2		113922	1					
ANR	113930	IdentifierDeclType	int		113922	0					
ANR	113931	Identifier	b2		113922	1					
ANR	113932	IdentifierDecl	b5		113922	2					
ANR	113933	IdentifierDeclType	int		113922	0					
ANR	113934	Identifier	b5		113922	1					
ANR	113935	IdentifierDecl	be		113922	3					
ANR	113936	IdentifierDeclType	int		113922	0					
ANR	113937	Identifier	be		113922	1					
ANR	113938	IdentifierDecl	dig		113922	4					
ANR	113939	IdentifierDeclType	int		113922	0					
ANR	113940	Identifier	dig		113922	1					
ANR	113941	IdentifierDecl	i		113922	5					
ANR	113942	IdentifierDeclType	int		113922	0					
ANR	113943	Identifier	i		113922	1					
ANR	113944	IdentifierDecl	ieps		113922	6					
ANR	113945	IdentifierDeclType	int		113922	0					
ANR	113946	Identifier	ieps		113922	1					
ANR	113947	IdentifierDecl	ilim = 0		113922	7					
ANR	113948	IdentifierDeclType	int		113922	0					
ANR	113949	Identifier	ilim		113922	1					
ANR	113950	AssignmentExpression	ilim = 0		113922	2		=			
ANR	113951	Identifier	ilim		113922	0					
ANR	113952	PrimaryExpression	0		113922	1					
ANR	113953	IdentifierDecl	ilim0		113922	8					
ANR	113954	IdentifierDeclType	int		113922	0					
ANR	113955	Identifier	ilim0		113922	1					
ANR	113956	IdentifierDecl	ilim1		113922	9					
ANR	113957	IdentifierDeclType	int		113922	0					
ANR	113958	Identifier	ilim1		113922	1					
ANR	113959	IdentifierDecl	j		113922	10					
ANR	113960	IdentifierDeclType	int		113922	0					
ANR	113961	Identifier	j		113922	1					
ANR	113962	IdentifierDecl	j1		113922	11					
ANR	113963	IdentifierDeclType	int		113922	0					
ANR	113964	Identifier	j1		113922	1					
ANR	113965	IdentifierDecl	k		113922	12					
ANR	113966	IdentifierDeclType	int		113922	0					
ANR	113967	Identifier	k		113922	1					
ANR	113968	IdentifierDecl	k0		113922	13					
ANR	113969	IdentifierDeclType	int		113922	0					
ANR	113970	Identifier	k0		113922	1					
ANR	113971	IdentifierDecl	k_check		113922	14					
ANR	113972	IdentifierDeclType	int		113922	0					
ANR	113973	Identifier	k_check		113922	1					
ANR	113974	IdentifierDecl	leftright		113922	15					
ANR	113975	IdentifierDeclType	int		113922	0					
ANR	113976	Identifier	leftright		113922	1					
ANR	113977	IdentifierDecl	m2		113922	16					
ANR	113978	IdentifierDeclType	int		113922	0					
ANR	113979	Identifier	m2		113922	1					
ANR	113980	IdentifierDecl	m5		113922	17					
ANR	113981	IdentifierDeclType	int		113922	0					
ANR	113982	Identifier	m5		113922	1					
ANR	113983	IdentifierDecl	s2		113922	18					
ANR	113984	IdentifierDeclType	int		113922	0					
ANR	113985	Identifier	s2		113922	1					
ANR	113986	IdentifierDecl	s5		113922	19					
ANR	113987	IdentifierDeclType	int		113922	0					
ANR	113988	Identifier	s5		113922	1					
ANR	113989	IdentifierDecl	spec_case = 0		113922	20					
ANR	113990	IdentifierDeclType	int		113922	0					
ANR	113991	Identifier	spec_case		113922	1					
ANR	113992	AssignmentExpression	spec_case = 0		113922	2		=			
ANR	113993	Identifier	spec_case		113922	0					
ANR	113994	PrimaryExpression	0		113922	1					
ANR	113995	IdentifierDecl	try_quick		113922	21					
ANR	113996	IdentifierDeclType	int		113922	0					
ANR	113997	Identifier	try_quick		113922	1					
ANR	113998	IdentifierDeclStatement	Long L ;	1481:1:30914:30920	113922	1	True				
ANR	113999	IdentifierDecl	L		113922	0					
ANR	114000	IdentifierDeclType	Long		113922	0					
ANR	114001	Identifier	L		113922	1					
ANR	114002	IdentifierDeclStatement	int denorm ;	1483:1:30948:30958	113922	2	True				
ANR	114003	IdentifierDecl	denorm		113922	0					
ANR	114004	IdentifierDeclType	int		113922	0					
ANR	114005	Identifier	denorm		113922	1					
ANR	114006	IdentifierDeclStatement	ULong x ;	1484:1:30961:30968	113922	3	True				
ANR	114007	IdentifierDecl	x		113922	0					
ANR	114008	IdentifierDeclType	ULong		113922	0					
ANR	114009	Identifier	x		113922	1					
ANR	114010	IdentifierDeclStatement	"Bigint * b , * b1 , * delta , * mlo , * mhi , * S , * tmp ;"	1486:1:30978:31022	113922	4	True				
ANR	114011	IdentifierDecl	* b		113922	0					
ANR	114012	IdentifierDeclType	Bigint *		113922	0					
ANR	114013	Identifier	b		113922	1					
ANR	114014	IdentifierDecl	* b1		113922	1					
ANR	114015	IdentifierDeclType	Bigint *		113922	0					
ANR	114016	Identifier	b1		113922	1					
ANR	114017	IdentifierDecl	* delta		113922	2					
ANR	114018	IdentifierDeclType	Bigint *		113922	0					
ANR	114019	Identifier	delta		113922	1					
ANR	114020	IdentifierDecl	* mlo		113922	3					
ANR	114021	IdentifierDeclType	Bigint *		113922	0					
ANR	114022	Identifier	mlo		113922	1					
ANR	114023	IdentifierDecl	* mhi		113922	4					
ANR	114024	IdentifierDeclType	Bigint *		113922	0					
ANR	114025	Identifier	mhi		113922	1					
ANR	114026	IdentifierDecl	* S		113922	5					
ANR	114027	IdentifierDeclType	Bigint *		113922	0					
ANR	114028	Identifier	S		113922	1					
ANR	114029	IdentifierDecl	* tmp		113922	6					
ANR	114030	IdentifierDeclType	Bigint *		113922	0					
ANR	114031	Identifier	tmp		113922	1					
ANR	114032	IdentifierDeclStatement	double ds ;	1487:1:31025:31034	113922	5	True				
ANR	114033	IdentifierDecl	ds		113922	0					
ANR	114034	IdentifierDeclType	double		113922	0					
ANR	114035	Identifier	ds		113922	1					
ANR	114036	IdentifierDeclStatement	"char * s , * s0 ;"	1488:1:31037:31049	113922	6	True				
ANR	114037	IdentifierDecl	* s		113922	0					
ANR	114038	IdentifierDeclType	char *		113922	0					
ANR	114039	Identifier	s		113922	1					
ANR	114040	IdentifierDecl	* s0		113922	1					
ANR	114041	IdentifierDeclType	char *		113922	0					
ANR	114042	Identifier	s0		113922	1					
ANR	114043	IdentifierDeclStatement	"volatile _double d , d2 , eps ;"	1489:1:31052:31079	113922	7	True				
ANR	114044	IdentifierDecl	d		113922	0					
ANR	114045	IdentifierDeclType	volatile _double		113922	0					
ANR	114046	Identifier	d		113922	1					
ANR	114047	IdentifierDecl	d2		113922	1					
ANR	114048	IdentifierDeclType	volatile _double		113922	0					
ANR	114049	Identifier	d2		113922	1					
ANR	114050	IdentifierDecl	eps		113922	2					
ANR	114051	IdentifierDeclType	volatile _double		113922	0					
ANR	114052	Identifier	eps		113922	1					
ANR	114053	ExpressionStatement	value ( d ) = _d	1491:1:31083:31096	113922	8	True				
ANR	114054	AssignmentExpression	value ( d ) = _d		113922	0		=			
ANR	114055	CallExpression	value ( d )		113922	0					
ANR	114056	Callee	value		113922	0					
ANR	114057	Identifier	value		113922	0					
ANR	114058	ArgumentList	d		113922	1					
ANR	114059	Argument	d		113922	0					
ANR	114060	Identifier	d		113922	0					
ANR	114061	Identifier	_d		113922	1					
ANR	114062	IfStatement	if ( word0 ( d ) & Sign_bit )		113922	9					
ANR	114063	Condition	word0 ( d ) & Sign_bit	1493:5:31104:31122	113922	0	True				
ANR	114064	BitAndExpression	word0 ( d ) & Sign_bit		113922	0		&			
ANR	114065	CallExpression	word0 ( d )		113922	0					
ANR	114066	Callee	word0		113922	0					
ANR	114067	Identifier	word0		113922	0					
ANR	114068	ArgumentList	d		113922	1					
ANR	114069	Argument	d		113922	0					
ANR	114070	Identifier	d		113922	0					
ANR	114071	Identifier	Sign_bit		113922	1					
ANR	114072	CompoundStatement		51:26:1865:1865	113922	1					
ANR	114073	ExpressionStatement	* sign = 1	1495:2:31185:31194	113922	0	True				
ANR	114074	AssignmentExpression	* sign = 1		113922	0		=			
ANR	114075	UnaryOperationExpression	* sign		113922	0					
ANR	114076	UnaryOperator	*		113922	0					
ANR	114077	Identifier	sign		113922	1					
ANR	114078	PrimaryExpression	1		113922	1					
ANR	114079	ExpressionStatement	word0 ( d ) &= ~Sign_bit	1496:2:31198:31219	113922	1	True				
ANR	114080	AssignmentExpression	word0 ( d ) &= ~Sign_bit		113922	0		&=			
ANR	114081	CallExpression	word0 ( d )		113922	0					
ANR	114082	Callee	word0		113922	0					
ANR	114083	Identifier	word0		113922	0					
ANR	114084	ArgumentList	d		113922	1					
ANR	114085	Argument	d		113922	0					
ANR	114086	Identifier	d		113922	0					
ANR	114087	Identifier	~Sign_bit		113922	1					
ANR	114088	ElseStatement	else		113922	0					
ANR	114089	ExpressionStatement	* sign = 0	1499:2:31254:31263	113922	0	True				
ANR	114090	AssignmentExpression	* sign = 0		113922	0		=			
ANR	114091	UnaryOperationExpression	* sign		113922	0					
ANR	114092	UnaryOperator	*		113922	0					
ANR	114093	Identifier	sign		113922	1					
ANR	114094	PrimaryExpression	0		113922	1					
ANR	114095	IfStatement	if ( ( word0 ( d ) & Exp_mask ) == Exp_mask )		113922	10					
ANR	114096	Condition	( word0 ( d ) & Exp_mask ) == Exp_mask	1503:5:31328:31360	113922	0	True				
ANR	114097	EqualityExpression	( word0 ( d ) & Exp_mask ) == Exp_mask		113922	0		==			
ANR	114098	BitAndExpression	word0 ( d ) & Exp_mask		113922	0		&			
ANR	114099	CallExpression	word0 ( d )		113922	0					
ANR	114100	Callee	word0		113922	0					
ANR	114101	Identifier	word0		113922	0					
ANR	114102	ArgumentList	d		113922	1					
ANR	114103	Argument	d		113922	0					
ANR	114104	Identifier	d		113922	0					
ANR	114105	Identifier	Exp_mask		113922	1					
ANR	114106	Identifier	Exp_mask		113922	1					
ANR	114107	CompoundStatement		65:2:2145:2145	113922	1					
ANR	114108	ExpressionStatement	* decpt = 9999	1509:3:31435:31448	113922	0	True				
ANR	114109	AssignmentExpression	* decpt = 9999		113922	0		=			
ANR	114110	UnaryOperationExpression	* decpt		113922	0					
ANR	114111	UnaryOperator	*		113922	0					
ANR	114112	Identifier	decpt		113922	1					
ANR	114113	PrimaryExpression	9999		113922	1					
ANR	114114	IfStatement	if ( ! word1 ( d ) && ! ( word0 ( d ) & 0xfffff ) )		113922	1					
ANR	114115	Condition	! word1 ( d ) && ! ( word0 ( d ) & 0xfffff )	1511:7:31475:31508	113922	0	True				
ANR	114116	AndExpression	! word1 ( d ) && ! ( word0 ( d ) & 0xfffff )		113922	0		&&			
ANR	114117	UnaryOperationExpression	! word1 ( d )		113922	0					
ANR	114118	UnaryOperator	!		113922	0					
ANR	114119	CallExpression	word1 ( d )		113922	1					
ANR	114120	Callee	word1		113922	0					
ANR	114121	Identifier	word1		113922	0					
ANR	114122	ArgumentList	d		113922	1					
ANR	114123	Argument	d		113922	0					
ANR	114124	Identifier	d		113922	0					
ANR	114125	UnaryOperationExpression	! ( word0 ( d ) & 0xfffff )		113922	1					
ANR	114126	UnaryOperator	!		113922	0					
ANR	114127	BitAndExpression	word0 ( d ) & 0xfffff		113922	1		&			
ANR	114128	CallExpression	word0 ( d )		113922	0					
ANR	114129	Callee	word0		113922	0					
ANR	114130	Identifier	word0		113922	0					
ANR	114131	ArgumentList	d		113922	1					
ANR	114132	Argument	d		113922	0					
ANR	114133	Identifier	d		113922	0					
ANR	114134	PrimaryExpression	0xfffff		113922	1					
ANR	114135	ReturnStatement	"return nrv_alloc ( ""Infinity"" , rve , 8 ) ;"	1512:4:31515:31551	113922	1	True				
ANR	114136	CallExpression	"nrv_alloc ( ""Infinity"" , rve , 8 )"		113922	0					
ANR	114137	Callee	nrv_alloc		113922	0					
ANR	114138	Identifier	nrv_alloc		113922	0					
ANR	114139	ArgumentList	"""Infinity"""		113922	1					
ANR	114140	Argument	"""Infinity"""		113922	0					
ANR	114141	PrimaryExpression	"""Infinity"""		113922	0					
ANR	114142	Argument	rve		113922	1					
ANR	114143	Identifier	rve		113922	0					
ANR	114144	Argument	8		113922	2					
ANR	114145	PrimaryExpression	8		113922	0					
ANR	114146	ReturnStatement	"return nrv_alloc ( ""NaN"" , rve , 3 ) ;"	1514:3:31563:31594	113922	2	True				
ANR	114147	CallExpression	"nrv_alloc ( ""NaN"" , rve , 3 )"		113922	0					
ANR	114148	Callee	nrv_alloc		113922	0					
ANR	114149	Identifier	nrv_alloc		113922	0					
ANR	114150	ArgumentList	"""NaN"""		113922	1					
ANR	114151	Argument	"""NaN"""		113922	0					
ANR	114152	PrimaryExpression	"""NaN"""		113922	0					
ANR	114153	Argument	rve		113922	1					
ANR	114154	Identifier	rve		113922	0					
ANR	114155	Argument	3		113922	2					
ANR	114156	PrimaryExpression	3		113922	0					
ANR	114157	ExpressionStatement	value ( d ) += 0	1518:1:31619:31632	113922	11	True				
ANR	114158	AssignmentExpression	value ( d ) += 0		113922	0		+=			
ANR	114159	CallExpression	value ( d )		113922	0					
ANR	114160	Callee	value		113922	0					
ANR	114161	Identifier	value		113922	0					
ANR	114162	ArgumentList	d		113922	1					
ANR	114163	Argument	d		113922	0					
ANR	114164	Identifier	d		113922	0					
ANR	114165	PrimaryExpression	0		113922	1					
ANR	114166	IfStatement	if ( ! value ( d ) )		113922	12					
ANR	114167	Condition	! value ( d )	1520:5:31662:31670	113922	0	True				
ANR	114168	UnaryOperationExpression	! value ( d )		113922	0					
ANR	114169	UnaryOperator	!		113922	0					
ANR	114170	CallExpression	value ( d )		113922	1					
ANR	114171	Callee	value		113922	0					
ANR	114172	Identifier	value		113922	0					
ANR	114173	ArgumentList	d		113922	1					
ANR	114174	Argument	d		113922	0					
ANR	114175	Identifier	d		113922	0					
ANR	114176	CompoundStatement		78:16:2413:2413	113922	1					
ANR	114177	ExpressionStatement	* decpt = 1	1521:2:31677:31687	113922	0	True				
ANR	114178	AssignmentExpression	* decpt = 1		113922	0		=			
ANR	114179	UnaryOperationExpression	* decpt		113922	0					
ANR	114180	UnaryOperator	*		113922	0					
ANR	114181	Identifier	decpt		113922	1					
ANR	114182	PrimaryExpression	1		113922	1					
ANR	114183	ReturnStatement	"return nrv_alloc ( ""0"" , rve , 1 ) ;"	1522:2:31691:31720	113922	1	True				
ANR	114184	CallExpression	"nrv_alloc ( ""0"" , rve , 1 )"		113922	0					
ANR	114185	Callee	nrv_alloc		113922	0					
ANR	114186	Identifier	nrv_alloc		113922	0					
ANR	114187	ArgumentList	"""0"""		113922	1					
ANR	114188	Argument	"""0"""		113922	0					
ANR	114189	PrimaryExpression	"""0"""		113922	0					
ANR	114190	Argument	rve		113922	1					
ANR	114191	Identifier	rve		113922	0					
ANR	114192	Argument	1		113922	2					
ANR	114193	PrimaryExpression	1		113922	0					
ANR	114194	ExpressionStatement	"b = d2b ( value ( d ) , & be , & bbits )"	1525:1:31727:31757	113922	13	True				
ANR	114195	AssignmentExpression	"b = d2b ( value ( d ) , & be , & bbits )"		113922	0		=			
ANR	114196	Identifier	b		113922	0					
ANR	114197	CallExpression	"d2b ( value ( d ) , & be , & bbits )"		113922	1					
ANR	114198	Callee	d2b		113922	0					
ANR	114199	Identifier	d2b		113922	0					
ANR	114200	ArgumentList	value ( d )		113922	1					
ANR	114201	Argument	value ( d )		113922	0					
ANR	114202	CallExpression	value ( d )		113922	0					
ANR	114203	Callee	value		113922	0					
ANR	114204	Identifier	value		113922	0					
ANR	114205	ArgumentList	d		113922	1					
ANR	114206	Argument	d		113922	0					
ANR	114207	Identifier	d		113922	0					
ANR	114208	Argument	& be		113922	1					
ANR	114209	UnaryOperationExpression	& be		113922	0					
ANR	114210	UnaryOperator	&		113922	0					
ANR	114211	Identifier	be		113922	1					
ANR	114212	Argument	& bbits		113922	2					
ANR	114213	UnaryOperationExpression	& bbits		113922	0					
ANR	114214	UnaryOperator	&		113922	0					
ANR	114215	Identifier	bbits		113922	1					
ANR	114216	ExpressionStatement	i = ( int ) ( word0 ( d ) >> Exp_shift1 & ( Exp_mask >> Exp_shift1 ) )	1527:1:31784:31842	113922	14	True				
ANR	114217	AssignmentExpression	i = ( int ) ( word0 ( d ) >> Exp_shift1 & ( Exp_mask >> Exp_shift1 ) )		113922	0		=			
ANR	114218	Identifier	i		113922	0					
ANR	114219	CastExpression	( int ) ( word0 ( d ) >> Exp_shift1 & ( Exp_mask >> Exp_shift1 ) )		113922	1					
ANR	114220	CastTarget	int		113922	0					
ANR	114221	BitAndExpression	word0 ( d ) >> Exp_shift1 & ( Exp_mask >> Exp_shift1 )		113922	1		&			
ANR	114222	ShiftExpression	word0 ( d ) >> Exp_shift1		113922	0		>>			
ANR	114223	CallExpression	word0 ( d )		113922	0					
ANR	114224	Callee	word0		113922	0					
ANR	114225	Identifier	word0		113922	0					
ANR	114226	ArgumentList	d		113922	1					
ANR	114227	Argument	d		113922	0					
ANR	114228	Identifier	d		113922	0					
ANR	114229	Identifier	Exp_shift1		113922	1					
ANR	114230	ShiftExpression	Exp_mask >> Exp_shift1		113922	1		>>			
ANR	114231	Identifier	Exp_mask		113922	0					
ANR	114232	Identifier	Exp_shift1		113922	1					
ANR	114233	ExpressionStatement	value ( d2 ) = value ( d )	1531:2:31928:31948	113922	15	True				
ANR	114234	AssignmentExpression	value ( d2 ) = value ( d )		113922	0		=			
ANR	114235	CallExpression	value ( d2 )		113922	0					
ANR	114236	Callee	value		113922	0					
ANR	114237	Identifier	value		113922	0					
ANR	114238	ArgumentList	d2		113922	1					
ANR	114239	Argument	d2		113922	0					
ANR	114240	Identifier	d2		113922	0					
ANR	114241	CallExpression	value ( d )		113922	1					
ANR	114242	Callee	value		113922	0					
ANR	114243	Identifier	value		113922	0					
ANR	114244	ArgumentList	d		113922	1					
ANR	114245	Argument	d		113922	0					
ANR	114246	Identifier	d		113922	0					
ANR	114247	ExpressionStatement	word0 ( d2 ) &= Frac_mask1	1532:2:31952:31975	113922	16	True				
ANR	114248	AssignmentExpression	word0 ( d2 ) &= Frac_mask1		113922	0		&=			
ANR	114249	CallExpression	word0 ( d2 )		113922	0					
ANR	114250	Callee	word0		113922	0					
ANR	114251	Identifier	word0		113922	0					
ANR	114252	ArgumentList	d2		113922	1					
ANR	114253	Argument	d2		113922	0					
ANR	114254	Identifier	d2		113922	0					
ANR	114255	Identifier	Frac_mask1		113922	1					
ANR	114256	ExpressionStatement	word0 ( d2 ) |= Exp_11	1533:2:31979:31998	113922	17	True				
ANR	114257	AssignmentExpression	word0 ( d2 ) |= Exp_11		113922	0		|=			
ANR	114258	CallExpression	word0 ( d2 )		113922	0					
ANR	114259	Callee	word0		113922	0					
ANR	114260	Identifier	word0		113922	0					
ANR	114261	ArgumentList	d2		113922	1					
ANR	114262	Argument	d2		113922	0					
ANR	114263	Identifier	d2		113922	0					
ANR	114264	Identifier	Exp_11		113922	1					
ANR	114265	IfStatement	if ( j = 11 - hi0bits ( word0 ( d2 ) & Frac_mask ) )		113922	18					
ANR	114266	Condition	j = 11 - hi0bits ( word0 ( d2 ) & Frac_mask )	1535:6:32017:32055	113922	0	True				
ANR	114267	AssignmentExpression	j = 11 - hi0bits ( word0 ( d2 ) & Frac_mask )		113922	0		=			
ANR	114268	Identifier	j		113922	0					
ANR	114269	AdditiveExpression	11 - hi0bits ( word0 ( d2 ) & Frac_mask )		113922	1		-			
ANR	114270	PrimaryExpression	11		113922	0					
ANR	114271	CallExpression	hi0bits ( word0 ( d2 ) & Frac_mask )		113922	1					
ANR	114272	Callee	hi0bits		113922	0					
ANR	114273	Identifier	hi0bits		113922	0					
ANR	114274	ArgumentList	word0 ( d2 ) & Frac_mask		113922	1					
ANR	114275	Argument	word0 ( d2 ) & Frac_mask		113922	0					
ANR	114276	BitAndExpression	word0 ( d2 ) & Frac_mask		113922	0		&			
ANR	114277	CallExpression	word0 ( d2 )		113922	0					
ANR	114278	Callee	word0		113922	0					
ANR	114279	Identifier	word0		113922	0					
ANR	114280	ArgumentList	d2		113922	1					
ANR	114281	Argument	d2		113922	0					
ANR	114282	Identifier	d2		113922	0					
ANR	114283	Identifier	Frac_mask		113922	1					
ANR	114284	ExpressionStatement	value ( d2 ) /= 1 << j	1536:3:32061:32080	113922	1	True				
ANR	114285	AssignmentExpression	value ( d2 ) /= 1 << j		113922	0		/=			
ANR	114286	CallExpression	value ( d2 )		113922	0					
ANR	114287	Callee	value		113922	0					
ANR	114288	Identifier	value		113922	0					
ANR	114289	ArgumentList	d2		113922	1					
ANR	114290	Argument	d2		113922	0					
ANR	114291	Identifier	d2		113922	0					
ANR	114292	ShiftExpression	1 << j		113922	1		<<			
ANR	114293	PrimaryExpression	1		113922	0					
ANR	114294	Identifier	j		113922	1					
ANR	114295	ExpressionStatement	i -= Bias	1561:2:33021:33030	113922	19	True				
ANR	114296	AssignmentExpression	i -= Bias		113922	0		-=			
ANR	114297	Identifier	i		113922	0					
ANR	114298	Identifier	Bias		113922	1					
ANR	114299	ExpressionStatement	i <<= 2	1563:2:33045:33052	113922	20	True				
ANR	114300	AssignmentExpression	i <<= 2		113922	0		<<=			
ANR	114301	Identifier	i		113922	0					
ANR	114302	PrimaryExpression	2		113922	1					
ANR	114303	ExpressionStatement	i += j	1564:2:33056:33062	113922	21	True				
ANR	114304	AssignmentExpression	i += j		113922	0		+=			
ANR	114305	Identifier	i		113922	0					
ANR	114306	Identifier	j		113922	1					
ANR	114307	ExpressionStatement	denorm = 0	1567:2:33098:33108	113922	22	True				
ANR	114308	AssignmentExpression	denorm = 0		113922	0		=			
ANR	114309	Identifier	denorm		113922	0					
ANR	114310	PrimaryExpression	0		113922	1					
ANR	114311	ReturnType	ZEND_API char *		113922	1					
ANR	114312	Identifier	zend_dtoa		113922	2					
ANR	114313	ParameterList	"double _d , int mode , int ndigits , int * decpt , int * sign , char * * rve"		113922	3					
ANR	114314	Parameter	double _d	1442:26:29190:29198	113922	0	True				
ANR	114315	ParameterType	double		113922	0					
ANR	114316	Identifier	_d		113922	1					
ANR	114317	Parameter	int mode	1442:37:29201:29208	113922	1	True				
ANR	114318	ParameterType	int		113922	0					
ANR	114319	Identifier	mode		113922	1					
ANR	114320	Parameter	int ndigits	1442:47:29211:29221	113922	2	True				
ANR	114321	ParameterType	int		113922	0					
ANR	114322	Identifier	ndigits		113922	1					
ANR	114323	Parameter	int * decpt	1442:60:29224:29233	113922	3	True				
ANR	114324	ParameterType	int *		113922	0					
ANR	114325	Identifier	decpt		113922	1					
ANR	114326	Parameter	int * sign	1442:72:29236:29244	113922	4	True				
ANR	114327	ParameterType	int *		113922	0					
ANR	114328	Identifier	sign		113922	1					
ANR	114329	Parameter	char * * rve	1442:83:29247:29256	113922	5	True				
ANR	114330	ParameterType	char * *		113922	0					
ANR	114331	Identifier	rve		113922	1					
ANR	114332	CFGEntryNode	ENTRY		113922		True				
ANR	114333	CFGExitNode	EXIT		113922		True				
ANR	114334	Symbol	* decpt		113922						
ANR	114335	Symbol	dig		113922						
ANR	114336	Symbol	j1		113922						
ANR	114337	Symbol	sign		113922						
ANR	114338	Symbol	delta		113922						
ANR	114339	Symbol	Exp_shift1		113922						
ANR	114340	Symbol	b1		113922						
ANR	114341	Symbol	ds		113922						
ANR	114342	Symbol	mode		113922						
ANR	114343	Symbol	b2		113922						
ANR	114344	Symbol	b5		113922						
ANR	114345	Symbol	tmp		113922						
ANR	114346	Symbol	nrv_alloc		113922						
ANR	114347	Symbol	s0		113922						
ANR	114348	Symbol	s2		113922						
ANR	114349	Symbol	rve		113922						
ANR	114350	Symbol	s5		113922						
ANR	114351	Symbol	k0		113922						
ANR	114352	Symbol	word1		113922						
ANR	114353	Symbol	word0		113922						
ANR	114354	Symbol	eps		113922						
ANR	114355	Symbol	ieps		113922						
ANR	114356	Symbol	leftright		113922						
ANR	114357	Symbol	mhi		113922						
ANR	114358	Symbol	Exp_11		113922						
ANR	114359	Symbol	mlo		113922						
ANR	114360	Symbol	~Sign_bit		113922						
ANR	114361	Symbol	& bbits		113922						
ANR	114362	Symbol	decpt		113922						
ANR	114363	Symbol	ilim		113922						
ANR	114364	Symbol	be		113922						
ANR	114365	Symbol	Sign_bit		113922						
ANR	114366	Symbol	Bias		113922						
ANR	114367	Symbol	Exp_mask		113922						
ANR	114368	Symbol	try_quick		113922						
ANR	114369	Symbol	L		113922						
ANR	114370	Symbol	d2		113922						
ANR	114371	Symbol	k_check		113922						
ANR	114372	Symbol	hi0bits		113922						
ANR	114373	Symbol	S		113922						
ANR	114374	Symbol	d2b		113922						
ANR	114375	Symbol	* sign		113922						
ANR	114376	Symbol	denorm		113922						
ANR	114377	Symbol	spec_case		113922						
ANR	114378	Symbol	value		113922						
ANR	114379	Symbol	ndigits		113922						
ANR	114380	Symbol	b		113922						
ANR	114381	Symbol	d		113922						
ANR	114382	Symbol	_d		113922						
ANR	114383	Symbol	m2		113922						
ANR	114384	Symbol	Frac_mask1		113922						
ANR	114385	Symbol	m5		113922						
ANR	114386	Symbol	i		113922						
ANR	114387	Symbol	j		113922						
ANR	114388	Symbol	k		113922						
ANR	114389	Symbol	Frac_mask		113922						
ANR	114390	Symbol	& be		113922						
ANR	114391	Symbol	ilim1		113922						
ANR	114392	Symbol	ilim0		113922						
ANR	114393	Symbol	s		113922						
ANR	114394	Symbol	x		113922						
ANR	114395	Symbol	bbits		113922						
ANR	114396	DeclStmt									
ANR	114397	Decl							L	L *	ds
ANR	114398	Function	zend_strtod	2039:0:41417:52082							
ANR	114399	FunctionDef	"zend_strtod (CONST char * s00 , CONST char * * se)"		114398	0					
ANR	114400	CompoundStatement		2040:0:41480:52082	114398	0					
ANR	114401	IdentifierDeclStatement	"int bb2 , bb5 , bbe , bd2 , bd5 , bbbits , bs2 , c , dsign , e , e1 , esign , i , j , k , nd , nd0 , nf , nz , nz0 , sign ;"	2041:1:41483:41586	114398	0	True				
ANR	114402	IdentifierDecl	bb2		114398	0					
ANR	114403	IdentifierDeclType	int		114398	0					
ANR	114404	Identifier	bb2		114398	1					
ANR	114405	IdentifierDecl	bb5		114398	1					
ANR	114406	IdentifierDeclType	int		114398	0					
ANR	114407	Identifier	bb5		114398	1					
ANR	114408	IdentifierDecl	bbe		114398	2					
ANR	114409	IdentifierDeclType	int		114398	0					
ANR	114410	Identifier	bbe		114398	1					
ANR	114411	IdentifierDecl	bd2		114398	3					
ANR	114412	IdentifierDeclType	int		114398	0					
ANR	114413	Identifier	bd2		114398	1					
ANR	114414	IdentifierDecl	bd5		114398	4					
ANR	114415	IdentifierDeclType	int		114398	0					
ANR	114416	Identifier	bd5		114398	1					
ANR	114417	IdentifierDecl	bbbits		114398	5					
ANR	114418	IdentifierDeclType	int		114398	0					
ANR	114419	Identifier	bbbits		114398	1					
ANR	114420	IdentifierDecl	bs2		114398	6					
ANR	114421	IdentifierDeclType	int		114398	0					
ANR	114422	Identifier	bs2		114398	1					
ANR	114423	IdentifierDecl	c		114398	7					
ANR	114424	IdentifierDeclType	int		114398	0					
ANR	114425	Identifier	c		114398	1					
ANR	114426	IdentifierDecl	dsign		114398	8					
ANR	114427	IdentifierDeclType	int		114398	0					
ANR	114428	Identifier	dsign		114398	1					
ANR	114429	IdentifierDecl	e		114398	9					
ANR	114430	IdentifierDeclType	int		114398	0					
ANR	114431	Identifier	e		114398	1					
ANR	114432	IdentifierDecl	e1		114398	10					
ANR	114433	IdentifierDeclType	int		114398	0					
ANR	114434	Identifier	e1		114398	1					
ANR	114435	IdentifierDecl	esign		114398	11					
ANR	114436	IdentifierDeclType	int		114398	0					
ANR	114437	Identifier	esign		114398	1					
ANR	114438	IdentifierDecl	i		114398	12					
ANR	114439	IdentifierDeclType	int		114398	0					
ANR	114440	Identifier	i		114398	1					
ANR	114441	IdentifierDecl	j		114398	13					
ANR	114442	IdentifierDeclType	int		114398	0					
ANR	114443	Identifier	j		114398	1					
ANR	114444	IdentifierDecl	k		114398	14					
ANR	114445	IdentifierDeclType	int		114398	0					
ANR	114446	Identifier	k		114398	1					
ANR	114447	IdentifierDecl	nd		114398	15					
ANR	114448	IdentifierDeclType	int		114398	0					
ANR	114449	Identifier	nd		114398	1					
ANR	114450	IdentifierDecl	nd0		114398	16					
ANR	114451	IdentifierDeclType	int		114398	0					
ANR	114452	Identifier	nd0		114398	1					
ANR	114453	IdentifierDecl	nf		114398	17					
ANR	114454	IdentifierDeclType	int		114398	0					
ANR	114455	Identifier	nf		114398	1					
ANR	114456	IdentifierDecl	nz		114398	18					
ANR	114457	IdentifierDeclType	int		114398	0					
ANR	114458	Identifier	nz		114398	1					
ANR	114459	IdentifierDecl	nz0		114398	19					
ANR	114460	IdentifierDeclType	int		114398	0					
ANR	114461	Identifier	nz0		114398	1					
ANR	114462	IdentifierDecl	sign		114398	20					
ANR	114463	IdentifierDeclType	int		114398	0					
ANR	114464	Identifier	sign		114398	1					
ANR	114465	IdentifierDeclStatement	"CONST char * s , * s0 , * s1 ;"	2043:1:41589:41612	114398	1	True				
ANR	114466	IdentifierDecl	* s		114398	0					
ANR	114467	IdentifierDeclType	CONST char *		114398	0					
ANR	114468	Identifier	s		114398	1					
ANR	114469	IdentifierDecl	* s0		114398	1					
ANR	114470	IdentifierDeclType	CONST char *		114398	0					
ANR	114471	Identifier	s0		114398	1					
ANR	114472	IdentifierDecl	* s1		114398	2					
ANR	114473	IdentifierDeclType	CONST char *		114398	0					
ANR	114474	Identifier	s1		114398	1					
ANR	114475	IdentifierDeclStatement	"volatile double aadj , aadj1 , adj ;"	2044:1:41615:41647	114398	2	True				
ANR	114476	IdentifierDecl	aadj		114398	0					
ANR	114477	IdentifierDeclType	volatile double		114398	0					
ANR	114478	Identifier	aadj		114398	1					
ANR	114479	IdentifierDecl	aadj1		114398	1					
ANR	114480	IdentifierDeclType	volatile double		114398	0					
ANR	114481	Identifier	aadj1		114398	1					
ANR	114482	IdentifierDecl	adj		114398	2					
ANR	114483	IdentifierDeclType	volatile double		114398	0					
ANR	114484	Identifier	adj		114398	1					
ANR	114485	IdentifierDeclStatement	"volatile _double rv , rv0 ;"	2045:1:41650:41674	114398	3	True				
ANR	114486	IdentifierDecl	rv		114398	0					
ANR	114487	IdentifierDeclType	volatile _double		114398	0					
ANR	114488	Identifier	rv		114398	1					
ANR	114489	IdentifierDecl	rv0		114398	1					
ANR	114490	IdentifierDeclType	volatile _double		114398	0					
ANR	114491	Identifier	rv0		114398	1					
ANR	114492	IdentifierDeclStatement	Long L ;	2046:1:41677:41683	114398	4	True				
ANR	114493	IdentifierDecl	L		114398	0					
ANR	114494	IdentifierDeclType	Long		114398	0					
ANR	114495	Identifier	L		114398	1					
ANR	114496	IdentifierDeclStatement	"ULong y , z ;"	2047:1:41686:41696	114398	5	True				
ANR	114497	IdentifierDecl	y		114398	0					
ANR	114498	IdentifierDeclType	ULong		114398	0					
ANR	114499	Identifier	y		114398	1					
ANR	114500	IdentifierDecl	z		114398	1					
ANR	114501	IdentifierDeclType	ULong		114398	0					
ANR	114502	Identifier	z		114398	1					
ANR	114503	IdentifierDeclStatement	"Bigint * bb , * bb1 , * bd , * bd0 , * bs , * delta , * tmp ;"	2048:1:41699:41745	114398	6	True				
ANR	114504	IdentifierDecl	* bb		114398	0					
ANR	114505	IdentifierDeclType	Bigint *		114398	0					
ANR	114506	Identifier	bb		114398	1					
ANR	114507	IdentifierDecl	* bb1		114398	1					
ANR	114508	IdentifierDeclType	Bigint *		114398	0					
ANR	114509	Identifier	bb1		114398	1					
ANR	114510	IdentifierDecl	* bd		114398	2					
ANR	114511	IdentifierDeclType	Bigint *		114398	0					
ANR	114512	Identifier	bd		114398	1					
ANR	114513	IdentifierDecl	* bd0		114398	3					
ANR	114514	IdentifierDeclType	Bigint *		114398	0					
ANR	114515	Identifier	bd0		114398	1					
ANR	114516	IdentifierDecl	* bs		114398	4					
ANR	114517	IdentifierDeclType	Bigint *		114398	0					
ANR	114518	Identifier	bs		114398	1					
ANR	114519	IdentifierDecl	* delta		114398	5					
ANR	114520	IdentifierDeclType	Bigint *		114398	0					
ANR	114521	Identifier	delta		114398	1					
ANR	114522	IdentifierDecl	* tmp		114398	6					
ANR	114523	IdentifierDeclType	Bigint *		114398	0					
ANR	114524	Identifier	tmp		114398	1					
ANR	114525	IdentifierDeclStatement	double result ;	2049:1:41748:41761	114398	7	True				
ANR	114526	IdentifierDecl	result		114398	0					
ANR	114527	IdentifierDeclType	double		114398	0					
ANR	114528	Identifier	result		114398	1					
ANR	114529	IdentifierDeclStatement	CONST char decimal_point = '.' ;	2051:1:41765:41795	114398	8	True				
ANR	114530	IdentifierDecl	decimal_point = '.'		114398	0					
ANR	114531	IdentifierDeclType	CONST char		114398	0					
ANR	114532	Identifier	decimal_point		114398	1					
ANR	114533	AssignmentExpression	decimal_point = '.'		114398	2		=			
ANR	114534	Identifier	decimal_point		114398	0					
ANR	114535	PrimaryExpression	'.'		114398	1					
ANR	114536	ExpressionStatement	sign = nz0 = nz = 0	2053:1:41799:41818	114398	9	True				
ANR	114537	AssignmentExpression	sign = nz0 = nz = 0		114398	0		=			
ANR	114538	Identifier	sign		114398	0					
ANR	114539	AssignmentExpression	nz0 = nz = 0		114398	1		=			
ANR	114540	Identifier	nz0		114398	0					
ANR	114541	AssignmentExpression	nz = 0		114398	1		=			
ANR	114542	Identifier	nz		114398	0					
ANR	114543	PrimaryExpression	0		114398	1					
ANR	114544	ExpressionStatement	value ( rv ) = 0.	2054:1:41821:41835	114398	10	True				
ANR	114545	AssignmentExpression	value ( rv ) = 0.		114398	0		=			
ANR	114546	CallExpression	value ( rv )		114398	0					
ANR	114547	Callee	value		114398	0					
ANR	114548	Identifier	value		114398	0					
ANR	114549	ArgumentList	rv		114398	1					
ANR	114550	Argument	rv		114398	0					
ANR	114551	Identifier	rv		114398	0					
ANR	114552	PrimaryExpression	0.		114398	1					
ANR	114553	ForStatement	for ( s = s00 ; isspace ( ( unsigned char ) * s ) ; s ++ )		114398	11					
ANR	114554	ForInit	s = s00 ;	2057:5:41844:41851	114398	0	True				
ANR	114555	AssignmentExpression	s = s00		114398	0		=			
ANR	114556	Identifier	s		114398	0					
ANR	114557	Identifier	s00		114398	1					
ANR	114558	Condition	isspace ( ( unsigned char ) * s )	2057:14:41853:41879	114398	1	True				
ANR	114559	CallExpression	isspace ( ( unsigned char ) * s )		114398	0					
ANR	114560	Callee	isspace		114398	0					
ANR	114561	Identifier	isspace		114398	0					
ANR	114562	ArgumentList	( unsigned char ) * s		114398	1					
ANR	114563	Argument	( unsigned char ) * s		114398	0					
ANR	114564	CastExpression	( unsigned char ) * s		114398	0					
ANR	114565	CastTarget	unsigned char		114398	0					
ANR	114566	UnaryOperationExpression	* s		114398	1					
ANR	114567	UnaryOperator	*		114398	0					
ANR	114568	Identifier	s		114398	1					
ANR	114569	PostIncDecOperationExpression	s ++	2057:43:41882:41884	114398	2	True				
ANR	114570	Identifier	s		114398	0					
ANR	114571	IncDec	++		114398	1					
ANR	114572	ExpressionStatement		2058:2:41889:41889	114398	3	True				
ANR	114573	IfStatement	if ( * s == '-' )		114398	12					
ANR	114574	Condition	* s == '-'	2060:5:41897:41905	114398	0	True				
ANR	114575	EqualityExpression	* s == '-'		114398	0		==			
ANR	114576	UnaryOperationExpression	* s		114398	0					
ANR	114577	UnaryOperator	*		114398	0					
ANR	114578	Identifier	s		114398	1					
ANR	114579	PrimaryExpression	'-'		114398	1					
ANR	114580	CompoundStatement		21:16:427:427	114398	1					
ANR	114581	ExpressionStatement	sign = 1	2061:2:41912:41920	114398	0	True				
ANR	114582	AssignmentExpression	sign = 1		114398	0		=			
ANR	114583	Identifier	sign		114398	0					
ANR	114584	PrimaryExpression	1		114398	1					
ANR	114585	ExpressionStatement	s ++	2062:2:41924:41927	114398	1	True				
ANR	114586	PostIncDecOperationExpression	s ++		114398	0					
ANR	114587	Identifier	s		114398	0					
ANR	114588	IncDec	++		114398	1					
ANR	114589	ElseStatement	else		114398	0					
ANR	114590	IfStatement	if ( * s == '+' )		114398	0					
ANR	114591	Condition	* s == '+'	2063:12:41941:41949	114398	0	True				
ANR	114592	EqualityExpression	* s == '+'		114398	0		==			
ANR	114593	UnaryOperationExpression	* s		114398	0					
ANR	114594	UnaryOperator	*		114398	0					
ANR	114595	Identifier	s		114398	1					
ANR	114596	PrimaryExpression	'+'		114398	1					
ANR	114597	CompoundStatement		24:23:471:471	114398	1					
ANR	114598	ExpressionStatement	s ++	2064:2:41956:41959	114398	0	True				
ANR	114599	PostIncDecOperationExpression	s ++		114398	0					
ANR	114600	Identifier	s		114398	0					
ANR	114601	IncDec	++		114398	1					
ANR	114602	IfStatement	if ( * s == '\\0' )		114398	13					
ANR	114603	Condition	* s == '\\0'	2067:5:41970:41979	114398	0	True				
ANR	114604	EqualityExpression	* s == '\\0'		114398	0		==			
ANR	114605	UnaryOperationExpression	* s		114398	0					
ANR	114606	UnaryOperator	*		114398	0					
ANR	114607	Identifier	s		114398	1					
ANR	114608	PrimaryExpression	'\\0'		114398	1					
ANR	114609	CompoundStatement		28:17:501:501	114398	1					
ANR	114610	ExpressionStatement	s = s00	2068:2:41986:41993	114398	0	True				
ANR	114611	AssignmentExpression	s = s00		114398	0		=			
ANR	114612	Identifier	s		114398	0					
ANR	114613	Identifier	s00		114398	1					
ANR	114614	GotoStatement	goto ret ;	2069:2:41997:42005	114398	1	True				
ANR	114615	Identifier	ret		114398	0					
ANR	114616	IfStatement	if ( * s == '0' )		114398	14					
ANR	114617	Condition	* s == '0'	2072:5:42016:42024	114398	0	True				
ANR	114618	EqualityExpression	* s == '0'		114398	0		==			
ANR	114619	UnaryOperationExpression	* s		114398	0					
ANR	114620	UnaryOperator	*		114398	0					
ANR	114621	Identifier	s		114398	1					
ANR	114622	PrimaryExpression	'0'		114398	1					
ANR	114623	CompoundStatement		33:16:546:546	114398	1					
ANR	114624	ExpressionStatement	nz0 = 1	2073:2:42031:42038	114398	0	True				
ANR	114625	AssignmentExpression	nz0 = 1		114398	0		=			
ANR	114626	Identifier	nz0		114398	0					
ANR	114627	PrimaryExpression	1		114398	1					
ANR	114628	WhileStatement	while ( * ++ s == '0' )		114398	1					
ANR	114629	Condition	* ++ s == '0'	2074:8:42048:42058	114398	0	True				
ANR	114630	EqualityExpression	* ++ s == '0'		114398	0		==			
ANR	114631	UnaryOperationExpression	* ++ s		114398	0					
ANR	114632	UnaryOperator	*		114398	0					
ANR	114633	UnaryExpression	++ s		114398	1					
ANR	114634	IncDec	++		114398	0					
ANR	114635	Identifier	s		114398	1					
ANR	114636	PrimaryExpression	'0'		114398	1					
ANR	114637	ExpressionStatement		2074:21:42061:42061	114398	1	True				
ANR	114638	IfStatement	if ( ! * s )		114398	2					
ANR	114639	Condition	! * s	2075:6:42069:42071	114398	0	True				
ANR	114640	UnaryOperationExpression	! * s		114398	0					
ANR	114641	UnaryOperator	!		114398	0					
ANR	114642	UnaryOperationExpression	* s		114398	1					
ANR	114643	UnaryOperator	*		114398	0					
ANR	114644	Identifier	s		114398	1					
ANR	114645	GotoStatement	goto ret ;	2076:3:42077:42085	114398	1	True				
ANR	114646	Identifier	ret		114398	0					
ANR	114647	ExpressionStatement	s0 = s	2078:1:42091:42097	114398	15	True				
ANR	114648	AssignmentExpression	s0 = s		114398	0		=			
ANR	114649	Identifier	s0		114398	0					
ANR	114650	Identifier	s		114398	1					
ANR	114651	ExpressionStatement	y = z = 0	2079:1:42100:42109	114398	16	True				
ANR	114652	AssignmentExpression	y = z = 0		114398	0		=			
ANR	114653	Identifier	y		114398	0					
ANR	114654	AssignmentExpression	z = 0		114398	1		=			
ANR	114655	Identifier	z		114398	0					
ANR	114656	PrimaryExpression	0		114398	1					
ANR	114657	ForStatement	"for ( nd = nf = 0 ; ( c = * s ) >= '0' && c <= '9' ; nd ++ , s ++ )"		114398	17					
ANR	114658	ForInit	nd = nf = 0 ;	2080:5:42116:42127	114398	0	True				
ANR	114659	AssignmentExpression	nd = nf = 0		114398	0		=			
ANR	114660	Identifier	nd		114398	0					
ANR	114661	AssignmentExpression	nf = 0		114398	1		=			
ANR	114662	Identifier	nf		114398	0					
ANR	114663	PrimaryExpression	0		114398	1					
ANR	114664	Condition	( c = * s ) >= '0' && c <= '9'	2080:18:42129:42155	114398	1	True				
ANR	114665	AndExpression	( c = * s ) >= '0' && c <= '9'		114398	0		&&			
ANR	114666	RelationalExpression	( c = * s ) >= '0'		114398	0		>=			
ANR	114667	AssignmentExpression	c = * s		114398	0		=			
ANR	114668	Identifier	c		114398	0					
ANR	114669	UnaryOperationExpression	* s		114398	1					
ANR	114670	UnaryOperator	*		114398	0					
ANR	114671	Identifier	s		114398	1					
ANR	114672	PrimaryExpression	'0'		114398	1					
ANR	114673	RelationalExpression	c <= '9'		114398	1		<=			
ANR	114674	Identifier	c		114398	0					
ANR	114675	PrimaryExpression	'9'		114398	1					
ANR	114676	Expression	"nd ++ , s ++"	2080:47:42158:42166	114398	2	True				
ANR	114677	PostIncDecOperationExpression	nd ++		114398	0					
ANR	114678	Identifier	nd		114398	0					
ANR	114679	IncDec	++		114398	1					
ANR	114680	PostIncDecOperationExpression	s ++		114398	1					
ANR	114681	Identifier	s		114398	0					
ANR	114682	IncDec	++		114398	1					
ANR	114683	IfStatement	if ( nd < 9 )		114398	3					
ANR	114684	Condition	nd < 9	2081:6:42175:42180	114398	0	True				
ANR	114685	RelationalExpression	nd < 9		114398	0		<			
ANR	114686	Identifier	nd		114398	0					
ANR	114687	PrimaryExpression	9		114398	1					
ANR	114688	ExpressionStatement	y = 10 * y + c - '0'	2082:3:42186:42204	114398	1	True				
ANR	114689	AssignmentExpression	y = 10 * y + c - '0'		114398	0		=			
ANR	114690	Identifier	y		114398	0					
ANR	114691	AdditiveExpression	10 * y + c - '0'		114398	1		+			
ANR	114692	MultiplicativeExpression	10 * y		114398	0		*			
ANR	114693	PrimaryExpression	10		114398	0					
ANR	114694	Identifier	y		114398	1					
ANR	114695	AdditiveExpression	c - '0'		114398	1		-			
ANR	114696	Identifier	c		114398	0					
ANR	114697	PrimaryExpression	'0'		114398	1					
ANR	114698	ElseStatement	else		114398	0					
ANR	114699	IfStatement	if ( nd < 16 )		114398	0					
ANR	114700	Condition	nd < 16	2083:11:42217:42223	114398	0	True				
ANR	114701	RelationalExpression	nd < 16		114398	0		<			
ANR	114702	Identifier	nd		114398	0					
ANR	114703	PrimaryExpression	16		114398	1					
ANR	114704	ExpressionStatement	z = 10 * z + c - '0'	2084:3:42229:42247	114398	1	True				
ANR	114705	AssignmentExpression	z = 10 * z + c - '0'		114398	0		=			
ANR	114706	Identifier	z		114398	0					
ANR	114707	AdditiveExpression	10 * z + c - '0'		114398	1		+			
ANR	114708	MultiplicativeExpression	10 * z		114398	0		*			
ANR	114709	PrimaryExpression	10		114398	0					
ANR	114710	Identifier	z		114398	1					
ANR	114711	AdditiveExpression	c - '0'		114398	1		-			
ANR	114712	Identifier	c		114398	0					
ANR	114713	PrimaryExpression	'0'		114398	1					
ANR	114714	ExpressionStatement	nd0 = nd	2085:1:42250:42258	114398	18	True				
ANR	114715	AssignmentExpression	nd0 = nd		114398	0		=			
ANR	114716	Identifier	nd0		114398	0					
ANR	114717	Identifier	nd		114398	1					
ANR	114718	IfStatement	if ( c == decimal_point )		114398	19					
ANR	114719	Condition	c == decimal_point	2086:5:42265:42282	114398	0	True				
ANR	114720	EqualityExpression	c == decimal_point		114398	0		==			
ANR	114721	Identifier	c		114398	0					
ANR	114722	Identifier	decimal_point		114398	1					
ANR	114723	CompoundStatement		47:25:804:804	114398	1					
ANR	114724	ExpressionStatement	c = * ++ s	2087:2:42289:42297	114398	0	True				
ANR	114725	AssignmentExpression	c = * ++ s		114398	0		=			
ANR	114726	Identifier	c		114398	0					
ANR	114727	UnaryOperationExpression	* ++ s		114398	1					
ANR	114728	UnaryOperator	*		114398	0					
ANR	114729	UnaryExpression	++ s		114398	1					
ANR	114730	IncDec	++		114398	0					
ANR	114731	Identifier	s		114398	1					
ANR	114732	IfStatement	if ( ! nd )		114398	1					
ANR	114733	Condition	! nd	2088:6:42305:42307	114398	0	True				
ANR	114734	UnaryOperationExpression	! nd		114398	0					
ANR	114735	UnaryOperator	!		114398	0					
ANR	114736	Identifier	nd		114398	1					
ANR	114737	CompoundStatement		49:11:829:829	114398	1					
ANR	114738	ForStatement	for ( ; c == '0' ; c = * ++ s )		114398	0					
ANR	114739	Condition	c == '0'	2089:9:42321:42328	114398	0	True				
ANR	114740	EqualityExpression	c == '0'		114398	0		==			
ANR	114741	Identifier	c		114398	0					
ANR	114742	PrimaryExpression	'0'		114398	1					
ANR	114743	AssignmentExpression	c = * ++ s	2089:19:42331:42338	114398	1	True	=			
ANR	114744	Identifier	c		114398	0					
ANR	114745	UnaryOperationExpression	* ++ s		114398	1					
ANR	114746	UnaryOperator	*		114398	0					
ANR	114747	UnaryExpression	++ s		114398	1					
ANR	114748	IncDec	++		114398	0					
ANR	114749	Identifier	s		114398	1					
ANR	114750	ExpressionStatement	nz ++	2090:4:42345:42349	114398	2	True				
ANR	114751	PostIncDecOperationExpression	nz ++		114398	0					
ANR	114752	Identifier	nz		114398	0					
ANR	114753	IncDec	++		114398	1					
ANR	114754	IfStatement	if ( c > '0' && c <= '9' )		114398	1					
ANR	114755	Condition	c > '0' && c <= '9'	2091:7:42358:42376	114398	0	True				
ANR	114756	AndExpression	c > '0' && c <= '9'		114398	0		&&			
ANR	114757	RelationalExpression	c > '0'		114398	0		>			
ANR	114758	Identifier	c		114398	0					
ANR	114759	PrimaryExpression	'0'		114398	1					
ANR	114760	RelationalExpression	c <= '9'		114398	1		<=			
ANR	114761	Identifier	c		114398	0					
ANR	114762	PrimaryExpression	'9'		114398	1					
ANR	114763	CompoundStatement		52:28:898:898	114398	1					
ANR	114764	ExpressionStatement	s0 = s	2092:4:42385:42391	114398	0	True				
ANR	114765	AssignmentExpression	s0 = s		114398	0		=			
ANR	114766	Identifier	s0		114398	0					
ANR	114767	Identifier	s		114398	1					
ANR	114768	ExpressionStatement	nf += nz	2093:4:42397:42405	114398	1	True				
ANR	114769	AssignmentExpression	nf += nz		114398	0		+=			
ANR	114770	Identifier	nf		114398	0					
ANR	114771	Identifier	nz		114398	1					
ANR	114772	ExpressionStatement	nz = 0	2094:4:42411:42417	114398	2	True				
ANR	114773	AssignmentExpression	nz = 0		114398	0		=			
ANR	114774	Identifier	nz		114398	0					
ANR	114775	PrimaryExpression	0		114398	1					
ANR	114776	GotoStatement	goto have_dig ;	2095:4:42423:42436	114398	3	True				
ANR	114777	Identifier	have_dig		114398	0					
ANR	114778	GotoStatement	goto dig_done ;	2097:3:42446:42459	114398	2	True				
ANR	114779	Identifier	dig_done		114398	0					
ANR	114780	ForStatement	for ( ; c >= '0' && c <= '9' ; c = * ++ s )		114398	2					
ANR	114781	Condition	c >= '0' && c <= '9'	2099:8:42473:42492	114398	0	True				
ANR	114782	AndExpression	c >= '0' && c <= '9'		114398	0		&&			
ANR	114783	RelationalExpression	c >= '0'		114398	0		>=			
ANR	114784	Identifier	c		114398	0					
ANR	114785	PrimaryExpression	'0'		114398	1					
ANR	114786	RelationalExpression	c <= '9'		114398	1		<=			
ANR	114787	Identifier	c		114398	0					
ANR	114788	PrimaryExpression	'9'		114398	1					
ANR	114789	AssignmentExpression	c = * ++ s	2099:30:42495:42502	114398	1	True	=			
ANR	114790	Identifier	c		114398	0					
ANR	114791	UnaryOperationExpression	* ++ s		114398	1					
ANR	114792	UnaryOperator	*		114398	0					
ANR	114793	UnaryExpression	++ s		114398	1					
ANR	114794	IncDec	++		114398	0					
ANR	114795	Identifier	s		114398	1					
ANR	114796	CompoundStatement		60:40:1024:1024	114398	2					
ANR	114797	Label	have_dig :	2100:0:42507:42515	114398	0	True				
ANR	114798	Identifier	have_dig		114398	0					
ANR	114799	ExpressionStatement	nz ++	2101:3:42520:42524	114398	1	True				
ANR	114800	PostIncDecOperationExpression	nz ++		114398	0					
ANR	114801	Identifier	nz		114398	0					
ANR	114802	IncDec	++		114398	1					
ANR	114803	IfStatement	if ( c -= '0' )		114398	2					
ANR	114804	Condition	c -= '0'	2102:7:42533:42540	114398	0	True				
ANR	114805	AssignmentExpression	c -= '0'		114398	0		-=			
ANR	114806	Identifier	c		114398	0					
ANR	114807	PrimaryExpression	'0'		114398	1					
ANR	114808	CompoundStatement		63:17:1062:1062	114398	1					
ANR	114809	ExpressionStatement	nf += nz	2103:4:42549:42557	114398	0	True				
ANR	114810	AssignmentExpression	nf += nz		114398	0		+=			
ANR	114811	Identifier	nf		114398	0					
ANR	114812	Identifier	nz		114398	1					
ANR	114813	ForStatement	for ( i = 1 ; i < nz ; i ++ )		114398	1					
ANR	114814	ForInit	i = 1 ;	2104:8:42567:42572	114398	0	True				
ANR	114815	AssignmentExpression	i = 1		114398	0		=			
ANR	114816	Identifier	i		114398	0					
ANR	114817	PrimaryExpression	1		114398	1					
ANR	114818	Condition	i < nz	2104:15:42574:42579	114398	1	True				
ANR	114819	RelationalExpression	i < nz		114398	0		<			
ANR	114820	Identifier	i		114398	0					
ANR	114821	Identifier	nz		114398	1					
ANR	114822	PostIncDecOperationExpression	i ++	2104:23:42582:42584	114398	2	True				
ANR	114823	Identifier	i		114398	0					
ANR	114824	IncDec	++		114398	1					
ANR	114825	IfStatement	if ( nd ++ < 9 )		114398	3					
ANR	114826	Condition	nd ++ < 9	2105:9:42596:42603	114398	0	True				
ANR	114827	RelationalExpression	nd ++ < 9		114398	0		<			
ANR	114828	PostIncDecOperationExpression	nd ++		114398	0					
ANR	114829	Identifier	nd		114398	0					
ANR	114830	IncDec	++		114398	1					
ANR	114831	PrimaryExpression	9		114398	1					
ANR	114832	ExpressionStatement	y *= 10	2106:6:42612:42619	114398	1	True				
ANR	114833	AssignmentExpression	y *= 10		114398	0		*=			
ANR	114834	Identifier	y		114398	0					
ANR	114835	PrimaryExpression	10		114398	1					
ANR	114836	ElseStatement	else		114398	0					
ANR	114837	IfStatement	if ( nd <= DBL_DIG + 1 )		114398	0					
ANR	114838	Condition	nd <= DBL_DIG + 1	2107:14:42635:42651	114398	0	True				
ANR	114839	RelationalExpression	nd <= DBL_DIG + 1		114398	0		<=			
ANR	114840	Identifier	nd		114398	0					
ANR	114841	AdditiveExpression	DBL_DIG + 1		114398	1		+			
ANR	114842	Identifier	DBL_DIG		114398	0					
ANR	114843	PrimaryExpression	1		114398	1					
ANR	114844	ExpressionStatement	z *= 10	2108:6:42660:42667	114398	1	True				
ANR	114845	AssignmentExpression	z *= 10		114398	0		*=			
ANR	114846	Identifier	z		114398	0					
ANR	114847	PrimaryExpression	10		114398	1					
ANR	114848	IfStatement	if ( nd ++ < 9 )		114398	2					
ANR	114849	Condition	nd ++ < 9	2109:8:42677:42684	114398	0	True				
ANR	114850	RelationalExpression	nd ++ < 9		114398	0		<			
ANR	114851	PostIncDecOperationExpression	nd ++		114398	0					
ANR	114852	Identifier	nd		114398	0					
ANR	114853	IncDec	++		114398	1					
ANR	114854	PrimaryExpression	9		114398	1					
ANR	114855	ExpressionStatement	y = 10 * y + c	2110:5:42692:42704	114398	1	True				
ANR	114856	AssignmentExpression	y = 10 * y + c		114398	0		=			
ANR	114857	Identifier	y		114398	0					
ANR	114858	AdditiveExpression	10 * y + c		114398	1		+			
ANR	114859	MultiplicativeExpression	10 * y		114398	0		*			
ANR	114860	PrimaryExpression	10		114398	0					
ANR	114861	Identifier	y		114398	1					
ANR	114862	Identifier	c		114398	1					
ANR	114863	ElseStatement	else		114398	0					
ANR	114864	IfStatement	if ( nd <= DBL_DIG + 1 )		114398	0					
ANR	114865	Condition	nd <= DBL_DIG + 1	2111:13:42719:42735	114398	0	True				
ANR	114866	RelationalExpression	nd <= DBL_DIG + 1		114398	0		<=			
ANR	114867	Identifier	nd		114398	0					
ANR	114868	AdditiveExpression	DBL_DIG + 1		114398	1		+			
ANR	114869	Identifier	DBL_DIG		114398	0					
ANR	114870	PrimaryExpression	1		114398	1					
ANR	114871	ExpressionStatement	z = 10 * z + c	2112:5:42743:42755	114398	1	True				
ANR	114872	AssignmentExpression	z = 10 * z + c		114398	0		=			
ANR	114873	Identifier	z		114398	0					
ANR	114874	AdditiveExpression	10 * z + c		114398	1		+			
ANR	114875	MultiplicativeExpression	10 * z		114398	0		*			
ANR	114876	PrimaryExpression	10		114398	0					
ANR	114877	Identifier	z		114398	1					
ANR	114878	Identifier	c		114398	1					
ANR	114879	ExpressionStatement	nz = 0	2113:4:42761:42767	114398	3	True				
ANR	114880	AssignmentExpression	nz = 0		114398	0		=			
ANR	114881	Identifier	nz		114398	0					
ANR	114882	PrimaryExpression	0		114398	1					
ANR	114883	Label	dig_done :	2117:0:42781:42789	114398	20	True				
ANR	114884	Identifier	dig_done		114398	0					
ANR	114885	ExpressionStatement	e = 0	2118:1:42792:42797	114398	21	True				
ANR	114886	AssignmentExpression	e = 0		114398	0		=			
ANR	114887	Identifier	e		114398	0					
ANR	114888	PrimaryExpression	0		114398	1					
ANR	114889	IfStatement	if ( c == 'e' || c == 'E' )		114398	22					
ANR	114890	Condition	c == 'e' || c == 'E'	2119:5:42804:42823	114398	0	True				
ANR	114891	OrExpression	c == 'e' || c == 'E'		114398	0		||			
ANR	114892	EqualityExpression	c == 'e'		114398	0		==			
ANR	114893	Identifier	c		114398	0					
ANR	114894	PrimaryExpression	'e'		114398	1					
ANR	114895	EqualityExpression	c == 'E'		114398	1		==			
ANR	114896	Identifier	c		114398	0					
ANR	114897	PrimaryExpression	'E'		114398	1					
ANR	114898	CompoundStatement		80:27:1345:1345	114398	1					
ANR	114899	IfStatement	if ( ! nd && ! nz && ! nz0 )		114398	0					
ANR	114900	Condition	! nd && ! nz && ! nz0	2120:6:42834:42851	114398	0	True				
ANR	114901	AndExpression	! nd && ! nz && ! nz0		114398	0		&&			
ANR	114902	UnaryOperationExpression	! nd		114398	0					
ANR	114903	UnaryOperator	!		114398	0					
ANR	114904	Identifier	nd		114398	1					
ANR	114905	AndExpression	! nz && ! nz0		114398	1		&&			
ANR	114906	UnaryOperationExpression	! nz		114398	0					
ANR	114907	UnaryOperator	!		114398	0					
ANR	114908	Identifier	nz		114398	1					
ANR	114909	UnaryOperationExpression	! nz0		114398	1					
ANR	114910	UnaryOperator	!		114398	0					
ANR	114911	Identifier	nz0		114398	1					
ANR	114912	CompoundStatement		81:26:1373:1373	114398	1					
ANR	114913	ExpressionStatement	s = s00	2121:3:42859:42866	114398	0	True				
ANR	114914	AssignmentExpression	s = s00		114398	0		=			
ANR	114915	Identifier	s		114398	0					
ANR	114916	Identifier	s00		114398	1					
ANR	114917	GotoStatement	goto ret ;	2122:3:42871:42879	114398	1	True				
ANR	114918	Identifier	ret		114398	0					
ANR	114919	ExpressionStatement	s00 = s	2124:2:42887:42894	114398	1	True				
ANR	114920	AssignmentExpression	s00 = s		114398	0		=			
ANR	114921	Identifier	s00		114398	0					
ANR	114922	Identifier	s		114398	1					
ANR	114923	ExpressionStatement	esign = 0	2125:2:42898:42907	114398	2	True				
ANR	114924	AssignmentExpression	esign = 0		114398	0		=			
ANR	114925	Identifier	esign		114398	0					
ANR	114926	PrimaryExpression	0		114398	1					
ANR	114927	SwitchStatement	switch ( c = * ++ s )		114398	3					
ANR	114928	Condition	c = * ++ s	2126:9:42918:42925	114398	0	True				
ANR	114929	AssignmentExpression	c = * ++ s		114398	0		=			
ANR	114930	Identifier	c		114398	0					
ANR	114931	UnaryOperationExpression	* ++ s		114398	1					
ANR	114932	UnaryOperator	*		114398	0					
ANR	114933	UnaryExpression	++ s		114398	1					
ANR	114934	IncDec	++		114398	0					
ANR	114935	Identifier	s		114398	1					
ANR	114936	CompoundStatement		87:19:1447:1447	114398	1					
ANR	114937	Label	case '-' :	2127:3:42933:42941	114398	0	True				
ANR	114938	ExpressionStatement	esign = 1	2128:4:42947:42956	114398	1	True				
ANR	114939	AssignmentExpression	esign = 1		114398	0		=			
ANR	114940	Identifier	esign		114398	0					
ANR	114941	PrimaryExpression	1		114398	1					
ANR	114942	Label	case '+' :	2129:3:42961:42969	114398	2	True				
ANR	114943	ExpressionStatement	c = * ++ s	2130:4:42975:42983	114398	3	True				
ANR	114944	AssignmentExpression	c = * ++ s		114398	0		=			
ANR	114945	Identifier	c		114398	0					
ANR	114946	UnaryOperationExpression	* ++ s		114398	1					
ANR	114947	UnaryOperator	*		114398	0					
ANR	114948	UnaryExpression	++ s		114398	1					
ANR	114949	IncDec	++		114398	0					
ANR	114950	Identifier	s		114398	1					
ANR	114951	IfStatement	if ( c >= '0' && c <= '9' )		114398	4					
ANR	114952	Condition	c >= '0' && c <= '9'	2132:6:42995:43014	114398	0	True				
ANR	114953	AndExpression	c >= '0' && c <= '9'		114398	0		&&			
ANR	114954	RelationalExpression	c >= '0'		114398	0		>=			
ANR	114955	Identifier	c		114398	0					
ANR	114956	PrimaryExpression	'0'		114398	1					
ANR	114957	RelationalExpression	c <= '9'		114398	1		<=			
ANR	114958	Identifier	c		114398	0					
ANR	114959	PrimaryExpression	'9'		114398	1					
ANR	114960	CompoundStatement		93:28:1536:1536	114398	1					
ANR	114961	WhileStatement	while ( c == '0' )		114398	0					
ANR	114962	Condition	c == '0'	2133:9:43028:43035	114398	0	True				
ANR	114963	EqualityExpression	c == '0'		114398	0		==			
ANR	114964	Identifier	c		114398	0					
ANR	114965	PrimaryExpression	'0'		114398	1					
ANR	114966	ExpressionStatement	c = * ++ s	2134:4:43042:43050	114398	1	True				
ANR	114967	AssignmentExpression	c = * ++ s		114398	0		=			
ANR	114968	Identifier	c		114398	0					
ANR	114969	UnaryOperationExpression	* ++ s		114398	1					
ANR	114970	UnaryOperator	*		114398	0					
ANR	114971	UnaryExpression	++ s		114398	1					
ANR	114972	IncDec	++		114398	0					
ANR	114973	Identifier	s		114398	1					
ANR	114974	IfStatement	if ( c > '0' && c <= '9' )		114398	1					
ANR	114975	Condition	c > '0' && c <= '9'	2135:7:43059:43077	114398	0	True				
ANR	114976	AndExpression	c > '0' && c <= '9'		114398	0		&&			
ANR	114977	RelationalExpression	c > '0'		114398	0		>			
ANR	114978	Identifier	c		114398	0					
ANR	114979	PrimaryExpression	'0'		114398	1					
ANR	114980	RelationalExpression	c <= '9'		114398	1		<=			
ANR	114981	Identifier	c		114398	0					
ANR	114982	PrimaryExpression	'9'		114398	1					
ANR	114983	CompoundStatement		96:28:1599:1599	114398	1					
ANR	114984	ExpressionStatement	L = c - '0'	2136:4:43086:43097	114398	0	True				
ANR	114985	AssignmentExpression	L = c - '0'		114398	0		=			
ANR	114986	Identifier	L		114398	0					
ANR	114987	AdditiveExpression	c - '0'		114398	1		-			
ANR	114988	Identifier	c		114398	0					
ANR	114989	PrimaryExpression	'0'		114398	1					
ANR	114990	ExpressionStatement	s1 = s	2137:4:43103:43109	114398	1	True				
ANR	114991	AssignmentExpression	s1 = s		114398	0		=			
ANR	114992	Identifier	s1		114398	0					
ANR	114993	Identifier	s		114398	1					
ANR	114994	WhileStatement	while ( ( c = * ++ s ) >= '0' && c <= '9' )		114398	2					
ANR	114995	Condition	( c = * ++ s ) >= '0' && c <= '9'	2138:10:43121:43149	114398	0	True				
ANR	114996	AndExpression	( c = * ++ s ) >= '0' && c <= '9'		114398	0		&&			
ANR	114997	RelationalExpression	( c = * ++ s ) >= '0'		114398	0		>=			
ANR	114998	AssignmentExpression	c = * ++ s		114398	0		=			
ANR	114999	Identifier	c		114398	0					
ANR	115000	UnaryOperationExpression	* ++ s		114398	1					
ANR	115001	UnaryOperator	*		114398	0					
ANR	115002	UnaryExpression	++ s		114398	1					
ANR	115003	IncDec	++		114398	0					
ANR	115004	Identifier	s		114398	1					
ANR	115005	PrimaryExpression	'0'		114398	1					
ANR	115006	RelationalExpression	c <= '9'		114398	1		<=			
ANR	115007	Identifier	c		114398	0					
ANR	115008	PrimaryExpression	'9'		114398	1					
ANR	115009	ExpressionStatement	L = 10 * L + c - '0'	2139:5:43157:43175	114398	1	True				
ANR	115010	AssignmentExpression	L = 10 * L + c - '0'		114398	0		=			
ANR	115011	Identifier	L		114398	0					
ANR	115012	AdditiveExpression	10 * L + c - '0'		114398	1		+			
ANR	115013	MultiplicativeExpression	10 * L		114398	0		*			
ANR	115014	PrimaryExpression	10		114398	0					
ANR	115015	Identifier	L		114398	1					
ANR	115016	AdditiveExpression	c - '0'		114398	1		-			
ANR	115017	Identifier	c		114398	0					
ANR	115018	PrimaryExpression	'0'		114398	1					
ANR	115019	IfStatement	if ( s - s1 > 8 || L > 19999 )		114398	3					
ANR	115020	Condition	s - s1 > 8 || L > 19999	2140:8:43185:43207	114398	0	True				
ANR	115021	OrExpression	s - s1 > 8 || L > 19999		114398	0		||			
ANR	115022	RelationalExpression	s - s1 > 8		114398	0		>			
ANR	115023	AdditiveExpression	s - s1		114398	0		-			
ANR	115024	Identifier	s		114398	0					
ANR	115025	Identifier	s1		114398	1					
ANR	115026	PrimaryExpression	8		114398	1					
ANR	115027	RelationalExpression	L > 19999		114398	1		>			
ANR	115028	Identifier	L		114398	0					
ANR	115029	PrimaryExpression	19999		114398	1					
ANR	115030	ExpressionStatement	e = 19999	2144:5:43303:43312	114398	1	True				
ANR	115031	AssignmentExpression	e = 19999		114398	0		=			
ANR	115032	Identifier	e		114398	0					
ANR	115033	PrimaryExpression	19999		114398	1					
ANR	115034	ElseStatement	else		114398	0					
ANR	115035	ExpressionStatement	e = ( int ) L	2146:5:43355:43365	114398	0	True				
ANR	115036	AssignmentExpression	e = ( int ) L		114398	0		=			
ANR	115037	Identifier	e		114398	0					
ANR	115038	CastExpression	( int ) L		114398	1					
ANR	115039	CastTarget	int		114398	0					
ANR	115040	Identifier	L		114398	1					
ANR	115041	IfStatement	if ( esign )		114398	4					
ANR	115042	Condition	esign	2147:8:43375:43379	114398	0	True				
ANR	115043	Identifier	esign		114398	0					
ANR	115044	ExpressionStatement	e = - e	2148:5:43387:43393	114398	1	True				
ANR	115045	AssignmentExpression	e = - e		114398	0		=			
ANR	115046	Identifier	e		114398	0					
ANR	115047	UnaryOperationExpression	- e		114398	1					
ANR	115048	UnaryOperator	-		114398	0					
ANR	115049	Identifier	e		114398	1					
ANR	115050	ElseStatement	else		114398	0					
ANR	115051	ExpressionStatement	e = 0	2151:4:43412:43417	114398	0	True				
ANR	115052	AssignmentExpression	e = 0		114398	0		=			
ANR	115053	Identifier	e		114398	0					
ANR	115054	PrimaryExpression	0		114398	1					
ANR	115055	ElseStatement	else		114398	0					
ANR	115056	ExpressionStatement	s = s00	2154:3:43433:43440	114398	0	True				
ANR	115057	AssignmentExpression	s = s00		114398	0		=			
ANR	115058	Identifier	s		114398	0					
ANR	115059	Identifier	s00		114398	1					
ANR	115060	IfStatement	if ( ! nd )		114398	23					
ANR	115061	Condition	! nd	2156:5:43450:43452	114398	0	True				
ANR	115062	UnaryOperationExpression	! nd		114398	0					
ANR	115063	UnaryOperator	!		114398	0					
ANR	115064	Identifier	nd		114398	1					
ANR	115065	CompoundStatement		117:10:1974:1974	114398	1					
ANR	115066	IfStatement	if ( ! nz && ! nz0 )		114398	0					
ANR	115067	Condition	! nz && ! nz0	2157:6:43463:43473	114398	0	True				
ANR	115068	AndExpression	! nz && ! nz0		114398	0		&&			
ANR	115069	UnaryOperationExpression	! nz		114398	0					
ANR	115070	UnaryOperator	!		114398	0					
ANR	115071	Identifier	nz		114398	1					
ANR	115072	UnaryOperationExpression	! nz0		114398	1					
ANR	115073	UnaryOperator	!		114398	0					
ANR	115074	Identifier	nz0		114398	1					
ANR	115075	ExpressionStatement	s = s00	2158:3:43479:43486	114398	1	True				
ANR	115076	AssignmentExpression	s = s00		114398	0		=			
ANR	115077	Identifier	s		114398	0					
ANR	115078	Identifier	s00		114398	1					
ANR	115079	GotoStatement	goto ret ;	2159:2:43490:43498	114398	1	True				
ANR	115080	Identifier	ret		114398	0					
ANR	115081	ExpressionStatement	e1 = e -= nf	2161:1:43504:43516	114398	24	True				
ANR	115082	AssignmentExpression	e1 = e -= nf		114398	0		=			
ANR	115083	Identifier	e1		114398	0					
ANR	115084	AssignmentExpression	e -= nf		114398	1		-=			
ANR	115085	Identifier	e		114398	0					
ANR	115086	Identifier	nf		114398	1					
ANR	115087	IfStatement	if ( ! nd0 )		114398	25					
ANR	115088	Condition	! nd0	2168:5:43719:43722	114398	0	True				
ANR	115089	UnaryOperationExpression	! nd0		114398	0					
ANR	115090	UnaryOperator	!		114398	0					
ANR	115091	Identifier	nd0		114398	1					
ANR	115092	ExpressionStatement	nd0 = nd	2169:2:43727:43735	114398	1	True				
ANR	115093	AssignmentExpression	nd0 = nd		114398	0		=			
ANR	115094	Identifier	nd0		114398	0					
ANR	115095	Identifier	nd		114398	1					
ANR	115096	ExpressionStatement	k = nd < DBL_DIG + 1 ? nd : DBL_DIG + 1	2170:1:43738:43777	114398	26	True				
ANR	115097	AssignmentExpression	k = nd < DBL_DIG + 1 ? nd : DBL_DIG + 1		114398	0		=			
ANR	115098	Identifier	k		114398	0					
ANR	115099	ConditionalExpression	nd < DBL_DIG + 1 ? nd : DBL_DIG + 1		114398	1					
ANR	115100	Condition	nd < DBL_DIG + 1		114398	0					
ANR	115101	RelationalExpression	nd < DBL_DIG + 1		114398	0		<			
ANR	115102	Identifier	nd		114398	0					
ANR	115103	AdditiveExpression	DBL_DIG + 1		114398	1		+			
ANR	115104	Identifier	DBL_DIG		114398	0					
ANR	115105	PrimaryExpression	1		114398	1					
ANR	115106	Identifier	nd		114398	1					
ANR	115107	AdditiveExpression	DBL_DIG + 1		114398	2		+			
ANR	115108	Identifier	DBL_DIG		114398	0					
ANR	115109	PrimaryExpression	1		114398	1					
ANR	115110	ExpressionStatement	value ( rv ) = y	2171:1:43780:43793	114398	27	True				
ANR	115111	AssignmentExpression	value ( rv ) = y		114398	0		=			
ANR	115112	CallExpression	value ( rv )		114398	0					
ANR	115113	Callee	value		114398	0					
ANR	115114	Identifier	value		114398	0					
ANR	115115	ArgumentList	rv		114398	1					
ANR	115116	Argument	rv		114398	0					
ANR	115117	Identifier	rv		114398	0					
ANR	115118	Identifier	y		114398	1					
ANR	115119	IfStatement	if ( k > 9 )		114398	28					
ANR	115120	Condition	k > 9	2172:5:43800:43804	114398	0	True				
ANR	115121	RelationalExpression	k > 9		114398	0		>			
ANR	115122	Identifier	k		114398	0					
ANR	115123	PrimaryExpression	9		114398	1					
ANR	115124	ExpressionStatement	value ( rv ) = tens [ k - 9 ] * value ( rv ) + z	2173:2:43809:43848	114398	1	True				
ANR	115125	AssignmentExpression	value ( rv ) = tens [ k - 9 ] * value ( rv ) + z		114398	0		=			
ANR	115126	CallExpression	value ( rv )		114398	0					
ANR	115127	Callee	value		114398	0					
ANR	115128	Identifier	value		114398	0					
ANR	115129	ArgumentList	rv		114398	1					
ANR	115130	Argument	rv		114398	0					
ANR	115131	Identifier	rv		114398	0					
ANR	115132	AdditiveExpression	tens [ k - 9 ] * value ( rv ) + z		114398	1		+			
ANR	115133	MultiplicativeExpression	tens [ k - 9 ] * value ( rv )		114398	0		*			
ANR	115134	ArrayIndexing	tens [ k - 9 ]		114398	0					
ANR	115135	Identifier	tens		114398	0					
ANR	115136	AdditiveExpression	k - 9		114398	1		-			
ANR	115137	Identifier	k		114398	0					
ANR	115138	PrimaryExpression	9		114398	1					
ANR	115139	CallExpression	value ( rv )		114398	1					
ANR	115140	Callee	value		114398	0					
ANR	115141	Identifier	value		114398	0					
ANR	115142	ArgumentList	rv		114398	1					
ANR	115143	Argument	rv		114398	0					
ANR	115144	Identifier	rv		114398	0					
ANR	115145	Identifier	z		114398	1					
ANR	115146	ExpressionStatement	bd0 = 0	2174:1:43851:43858	114398	29	True				
ANR	115147	AssignmentExpression	bd0 = 0		114398	0		=			
ANR	115148	Identifier	bd0		114398	0					
ANR	115149	PrimaryExpression	0		114398	1					
ANR	115150	Statement	if	2175:1:43861:43862	114398	30	True				
ANR	115151	Statement	(	2175:4:43864:43864	114398	31	True				
ANR	115152	Statement	nd	2175:5:43865:43866	114398	32	True				
ANR	115153	Statement	<=	2175:8:43868:43869	114398	33	True				
ANR	115154	Statement	DBL_DIG	2175:11:43871:43877	114398	34	True				
ANR	115155	Statement	&&	2177:3:43903:43904	114398	35	True				
ANR	115156	Statement	FLT_ROUNDS	2177:6:43906:43915	114398	36	True				
ANR	115157	Statement	==	2177:17:43917:43918	114398	37	True				
ANR	115158	Statement	1	2177:20:43920:43920	114398	38	True				
ANR	115159	Statement	)	2179:4:43933:43933	114398	39	True				
ANR	115160	CompoundStatement		140:6:2454:2454	114398	40					
ANR	115161	IfStatement	if ( ! e )		114398	0					
ANR	115162	Condition	! e	2180:6:43943:43944	114398	0	True				
ANR	115163	UnaryOperationExpression	! e		114398	0					
ANR	115164	UnaryOperator	!		114398	0					
ANR	115165	Identifier	e		114398	1					
ANR	115166	GotoStatement	goto ret ;	2181:3:43950:43958	114398	1	True				
ANR	115167	Identifier	ret		114398	0					
ANR	115168	IfStatement	if ( e > 0 )		114398	1					
ANR	115169	Condition	e > 0	2182:6:43966:43970	114398	0	True				
ANR	115170	RelationalExpression	e > 0		114398	0		>			
ANR	115171	Identifier	e		114398	0					
ANR	115172	PrimaryExpression	0		114398	1					
ANR	115173	CompoundStatement		143:13:2492:2492	114398	1					
ANR	115174	IfStatement	if ( e <= Ten_pmax )		114398	0					
ANR	115175	Condition	e <= Ten_pmax	2183:7:43982:43994	114398	0	True				
ANR	115176	RelationalExpression	e <= Ten_pmax		114398	0		<=			
ANR	115177	Identifier	e		114398	0					
ANR	115178	Identifier	Ten_pmax		114398	1					
ANR	115179	CompoundStatement		144:22:2516:2516	114398	1					
ANR	115180	GotoStatement	goto vax_ovfl_check ;	2185:4:44014:44033	114398	0	True				
ANR	115181	Identifier	vax_ovfl_check		114398	0					
ANR	115182	ExpressionStatement	i = DBL_DIG - nd	2192:3:44135:44151	114398	1	True				
ANR	115183	AssignmentExpression	i = DBL_DIG - nd		114398	0		=			
ANR	115184	Identifier	i		114398	0					
ANR	115185	AdditiveExpression	DBL_DIG - nd		114398	1		-			
ANR	115186	Identifier	DBL_DIG		114398	0					
ANR	115187	Identifier	nd		114398	1					
ANR	115188	IfStatement	if ( e <= Ten_pmax + i )		114398	2					
ANR	115189	Condition	e <= Ten_pmax + i	2193:7:44160:44176	114398	0	True				
ANR	115190	RelationalExpression	e <= Ten_pmax + i		114398	0		<=			
ANR	115191	Identifier	e		114398	0					
ANR	115192	AdditiveExpression	Ten_pmax + i		114398	1		+			
ANR	115193	Identifier	Ten_pmax		114398	0					
ANR	115194	Identifier	i		114398	1					
ANR	115195	CompoundStatement		154:26:2698:2698	114398	1					
ANR	115196	ExpressionStatement	e -= i	2197:4:44274:44280	114398	0	True				
ANR	115197	AssignmentExpression	e -= i		114398	0		-=			
ANR	115198	Identifier	e		114398	0					
ANR	115199	Identifier	i		114398	1					
ANR	115200	ExpressionStatement	value ( rv ) *= tens [ i ]	2198:4:44286:44306	114398	1	True				
ANR	115201	AssignmentExpression	value ( rv ) *= tens [ i ]		114398	0		*=			
ANR	115202	CallExpression	value ( rv )		114398	0					
ANR	115203	Callee	value		114398	0					
ANR	115204	Identifier	value		114398	0					
ANR	115205	ArgumentList	rv		114398	1					
ANR	115206	Argument	rv		114398	0					
ANR	115207	Identifier	rv		114398	0					
ANR	115208	ArrayIndexing	tens [ i ]		114398	1					
ANR	115209	Identifier	tens		114398	0					
ANR	115210	Identifier	i		114398	1					
ANR	115211	Label	vax_ovfl_check :	2203:0:44410:44424	114398	2	True				
ANR	115212	Identifier	vax_ovfl_check		114398	0					
ANR	115213	ExpressionStatement	word0 ( rv ) -= P * Exp_msk1	2204:4:44430:44453	114398	3	True				
ANR	115214	AssignmentExpression	word0 ( rv ) -= P * Exp_msk1		114398	0		-=			
ANR	115215	CallExpression	word0 ( rv )		114398	0					
ANR	115216	Callee	word0		114398	0					
ANR	115217	Identifier	word0		114398	0					
ANR	115218	ArgumentList	rv		114398	1					
ANR	115219	Argument	rv		114398	0					
ANR	115220	Identifier	rv		114398	0					
ANR	115221	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	115222	Identifier	P		114398	0					
ANR	115223	Identifier	Exp_msk1		114398	1					
ANR	115224	ExpressionStatement	"rounded_product ( value ( rv ) , tens [ e ] )"	2205:22:44477:44518	114398	4	True				
ANR	115225	CallExpression	"rounded_product ( value ( rv ) , tens [ e ] )"		114398	0					
ANR	115226	Callee	rounded_product		114398	0					
ANR	115227	Identifier	rounded_product		114398	0					
ANR	115228	ArgumentList	value ( rv )		114398	1					
ANR	115229	Argument	value ( rv )		114398	0					
ANR	115230	CallExpression	value ( rv )		114398	0					
ANR	115231	Callee	value		114398	0					
ANR	115232	Identifier	value		114398	0					
ANR	115233	ArgumentList	rv		114398	1					
ANR	115234	Argument	rv		114398	0					
ANR	115235	Identifier	rv		114398	0					
ANR	115236	Argument	tens [ e ]		114398	1					
ANR	115237	ArrayIndexing	tens [ e ]		114398	0					
ANR	115238	Identifier	tens		114398	0					
ANR	115239	Identifier	e		114398	1					
ANR	115240	IfStatement	if ( ( word0 ( rv ) & Exp_mask ) > Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P ) )		114398	5					
ANR	115241	Condition	( word0 ( rv ) & Exp_mask ) > Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P )	2207:8:44528:44589	114398	0	True				
ANR	115242	RelationalExpression	( word0 ( rv ) & Exp_mask ) > Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P )		114398	0		>			
ANR	115243	BitAndExpression	word0 ( rv ) & Exp_mask		114398	0		&			
ANR	115244	CallExpression	word0 ( rv )		114398	0					
ANR	115245	Callee	word0		114398	0					
ANR	115246	Identifier	word0		114398	0					
ANR	115247	ArgumentList	rv		114398	1					
ANR	115248	Argument	rv		114398	0					
ANR	115249	Identifier	rv		114398	0					
ANR	115250	Identifier	Exp_mask		114398	1					
ANR	115251	MultiplicativeExpression	Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P )		114398	1		*			
ANR	115252	Identifier	Exp_msk1		114398	0					
ANR	115253	AdditiveExpression	DBL_MAX_EXP + Bias - 1 - P		114398	1		+			
ANR	115254	Identifier	DBL_MAX_EXP		114398	0					
ANR	115255	AdditiveExpression	Bias - 1 - P		114398	1		-			
ANR	115256	Identifier	Bias		114398	0					
ANR	115257	AdditiveExpression	1 - P		114398	1		-			
ANR	115258	PrimaryExpression	1		114398	0					
ANR	115259	Identifier	P		114398	1					
ANR	115260	GotoStatement	goto ovfl ;	2209:5:44597:44606	114398	1	True				
ANR	115261	Identifier	ovfl		114398	0					
ANR	115262	ExpressionStatement	word0 ( rv ) += P * Exp_msk1	2210:4:44612:44635	114398	6	True				
ANR	115263	AssignmentExpression	word0 ( rv ) += P * Exp_msk1		114398	0		+=			
ANR	115264	CallExpression	word0 ( rv )		114398	0					
ANR	115265	Callee	word0		114398	0					
ANR	115266	Identifier	word0		114398	0					
ANR	115267	ArgumentList	rv		114398	1					
ANR	115268	Argument	rv		114398	0					
ANR	115269	Identifier	rv		114398	0					
ANR	115270	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	115271	Identifier	P		114398	0					
ANR	115272	Identifier	Exp_msk1		114398	1					
ANR	115273	GotoStatement	goto ret ;	2215:4:44719:44727	114398	7	True				
ANR	115274	Identifier	ret		114398	0					
ANR	115275	ElseStatement	else		114398	0					
ANR	115276	IfStatement	if ( e >= - Ten_pmax )		114398	0					
ANR	115277	Condition	e >= - Ten_pmax	2219:11:44775:44788	114398	0	True				
ANR	115278	RelationalExpression	e >= - Ten_pmax		114398	0		>=			
ANR	115279	Identifier	e		114398	0					
ANR	115280	UnaryOperationExpression	- Ten_pmax		114398	1					
ANR	115281	UnaryOperator	-		114398	0					
ANR	115282	Identifier	Ten_pmax		114398	1					
ANR	115283	CompoundStatement		180:27:3310:3310	114398	1					
ANR	115284	ExpressionStatement	"rounded_quotient ( value ( rv ) , tens [ - e ] )"	2220:21:44814:44856	114398	0	True				
ANR	115285	CallExpression	"rounded_quotient ( value ( rv ) , tens [ - e ] )"		114398	0					
ANR	115286	Callee	rounded_quotient		114398	0					
ANR	115287	Identifier	rounded_quotient		114398	0					
ANR	115288	ArgumentList	value ( rv )		114398	1					
ANR	115289	Argument	value ( rv )		114398	0					
ANR	115290	CallExpression	value ( rv )		114398	0					
ANR	115291	Callee	value		114398	0					
ANR	115292	Identifier	value		114398	0					
ANR	115293	ArgumentList	rv		114398	1					
ANR	115294	Argument	rv		114398	0					
ANR	115295	Identifier	rv		114398	0					
ANR	115296	Argument	tens [ - e ]		114398	1					
ANR	115297	ArrayIndexing	tens [ - e ]		114398	0					
ANR	115298	Identifier	tens		114398	0					
ANR	115299	UnaryOperationExpression	- e		114398	1					
ANR	115300	UnaryOperator	-		114398	0					
ANR	115301	Identifier	e		114398	1					
ANR	115302	GotoStatement	goto ret ;	2222:3:44861:44869	114398	1	True				
ANR	115303	Identifier	ret		114398	0					
ANR	115304	ExpressionStatement	e1 += nd - k	2226:1:44886:44898	114398	41	True				
ANR	115305	AssignmentExpression	e1 += nd - k		114398	0		+=			
ANR	115306	Identifier	e1		114398	0					
ANR	115307	AdditiveExpression	nd - k		114398	1		-			
ANR	115308	Identifier	nd		114398	0					
ANR	115309	Identifier	k		114398	1					
ANR	115310	IfStatement	if ( e1 > 0 )		114398	42					
ANR	115311	Condition	e1 > 0	2230:5:44955:44960	114398	0	True				
ANR	115312	RelationalExpression	e1 > 0		114398	0		>			
ANR	115313	Identifier	e1		114398	0					
ANR	115314	PrimaryExpression	0		114398	1					
ANR	115315	CompoundStatement		191:13:3482:3482	114398	1					
ANR	115316	IfStatement	if ( ( i = e1 & 15 ) )		114398	0					
ANR	115317	Condition	i = e1 & 15	2231:6:44971:44983	114398	0	True				
ANR	115318	AssignmentExpression	i = e1 & 15		114398	0		=			
ANR	115319	Identifier	i		114398	0					
ANR	115320	BitAndExpression	e1 & 15		114398	1		&			
ANR	115321	Identifier	e1		114398	0					
ANR	115322	PrimaryExpression	15		114398	1					
ANR	115323	ExpressionStatement	value ( rv ) *= tens [ i ]	2232:3:44989:45009	114398	1	True				
ANR	115324	AssignmentExpression	value ( rv ) *= tens [ i ]		114398	0		*=			
ANR	115325	CallExpression	value ( rv )		114398	0					
ANR	115326	Callee	value		114398	0					
ANR	115327	Identifier	value		114398	0					
ANR	115328	ArgumentList	rv		114398	1					
ANR	115329	Argument	rv		114398	0					
ANR	115330	Identifier	rv		114398	0					
ANR	115331	ArrayIndexing	tens [ i ]		114398	1					
ANR	115332	Identifier	tens		114398	0					
ANR	115333	Identifier	i		114398	1					
ANR	115334	IfStatement	if ( e1 &= ~15 )		114398	1					
ANR	115335	Condition	e1 &= ~15	2233:6:45017:45025	114398	0	True				
ANR	115336	AssignmentExpression	e1 &= ~15		114398	0		&=			
ANR	115337	Identifier	e1		114398	0					
ANR	115338	Identifier	~15		114398	1					
ANR	115339	CompoundStatement		194:17:3547:3547	114398	1					
ANR	115340	IfStatement	if ( e1 > DBL_MAX_10_EXP )		114398	0					
ANR	115341	Condition	e1 > DBL_MAX_10_EXP	2234:7:45037:45055	114398	0	True				
ANR	115342	RelationalExpression	e1 > DBL_MAX_10_EXP		114398	0		>			
ANR	115343	Identifier	e1		114398	0					
ANR	115344	Identifier	DBL_MAX_10_EXP		114398	1					
ANR	115345	CompoundStatement		195:28:3577:3577	114398	1					
ANR	115346	Label	ovfl :	2235:0:45060:45064	114398	0	True				
ANR	115347	Identifier	ovfl		114398	0					
ANR	115348	ExpressionStatement	errno = ERANGE	2236:4:45070:45084	114398	1	True				
ANR	115349	AssignmentExpression	errno = ERANGE		114398	0		=			
ANR	115350	Identifier	errno		114398	0					
ANR	115351	Identifier	ERANGE		114398	1					
ANR	115352	ExpressionStatement	value ( rv ) = HUGE_VAL	2238:4:45110:45130	114398	2	True				
ANR	115353	AssignmentExpression	value ( rv ) = HUGE_VAL		114398	0		=			
ANR	115354	CallExpression	value ( rv )		114398	0					
ANR	115355	Callee	value		114398	0					
ANR	115356	Identifier	value		114398	0					
ANR	115357	ArgumentList	rv		114398	1					
ANR	115358	Argument	rv		114398	0					
ANR	115359	Identifier	rv		114398	0					
ANR	115360	Identifier	HUGE_VAL		114398	1					
ANR	115361	IfStatement	if ( bd0 )		114398	3					
ANR	115362	Condition	bd0	2249:8:45304:45306	114398	0	True				
ANR	115363	Identifier	bd0		114398	0					
ANR	115364	GotoStatement	goto retfree ;	2250:5:45314:45326	114398	1	True				
ANR	115365	Identifier	retfree		114398	0					
ANR	115366	GotoStatement	goto ret ;	2251:4:45332:45340	114398	4	True				
ANR	115367	Identifier	ret		114398	0					
ANR	115368	IfStatement	if ( e1 >>= 4 )		114398	1					
ANR	115369	Condition	e1 >>= 4	2253:7:45354:45361	114398	0	True				
ANR	115370	AssignmentExpression	e1 >>= 4		114398	0		>>=			
ANR	115371	Identifier	e1		114398	0					
ANR	115372	PrimaryExpression	4		114398	1					
ANR	115373	CompoundStatement		214:17:3883:3883	114398	1					
ANR	115374	ForStatement	"for ( j = 0 ; e1 > 1 ; j ++ , e1 >>= 1 )"		114398	0					
ANR	115375	ForInit	j = 0 ;	2254:8:45374:45379	114398	0	True				
ANR	115376	AssignmentExpression	j = 0		114398	0		=			
ANR	115377	Identifier	j		114398	0					
ANR	115378	PrimaryExpression	0		114398	1					
ANR	115379	Condition	e1 > 1	2254:15:45381:45386	114398	1	True				
ANR	115380	RelationalExpression	e1 > 1		114398	0		>			
ANR	115381	Identifier	e1		114398	0					
ANR	115382	PrimaryExpression	1		114398	1					
ANR	115383	Expression	"j ++ , e1 >>= 1"	2254:23:45389:45401	114398	2	True				
ANR	115384	PostIncDecOperationExpression	j ++		114398	0					
ANR	115385	Identifier	j		114398	0					
ANR	115386	IncDec	++		114398	1					
ANR	115387	AssignmentExpression	e1 >>= 1		114398	1		>>=			
ANR	115388	Identifier	e1		114398	0					
ANR	115389	PrimaryExpression	1		114398	1					
ANR	115390	IfStatement	if ( e1 & 1 )		114398	3					
ANR	115391	Condition	e1 & 1	2255:9:45413:45418	114398	0	True				
ANR	115392	BitAndExpression	e1 & 1		114398	0		&			
ANR	115393	Identifier	e1		114398	0					
ANR	115394	PrimaryExpression	1		114398	1					
ANR	115395	ExpressionStatement	value ( rv ) *= bigtens [ j ]	2256:6:45427:45450	114398	1	True				
ANR	115396	AssignmentExpression	value ( rv ) *= bigtens [ j ]		114398	0		*=			
ANR	115397	CallExpression	value ( rv )		114398	0					
ANR	115398	Callee	value		114398	0					
ANR	115399	Identifier	value		114398	0					
ANR	115400	ArgumentList	rv		114398	1					
ANR	115401	Argument	rv		114398	0					
ANR	115402	Identifier	rv		114398	0					
ANR	115403	ArrayIndexing	bigtens [ j ]		114398	1					
ANR	115404	Identifier	bigtens		114398	0					
ANR	115405	Identifier	j		114398	1					
ANR	115406	ExpressionStatement	word0 ( rv ) -= P * Exp_msk1	2258:4:45506:45529	114398	1	True				
ANR	115407	AssignmentExpression	word0 ( rv ) -= P * Exp_msk1		114398	0		-=			
ANR	115408	CallExpression	word0 ( rv )		114398	0					
ANR	115409	Callee	word0		114398	0					
ANR	115410	Identifier	word0		114398	0					
ANR	115411	ArgumentList	rv		114398	1					
ANR	115412	Argument	rv		114398	0					
ANR	115413	Identifier	rv		114398	0					
ANR	115414	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	115415	Identifier	P		114398	0					
ANR	115416	Identifier	Exp_msk1		114398	1					
ANR	115417	ExpressionStatement	value ( rv ) *= bigtens [ j ]	2259:4:45535:45558	114398	2	True				
ANR	115418	AssignmentExpression	value ( rv ) *= bigtens [ j ]		114398	0		*=			
ANR	115419	CallExpression	value ( rv )		114398	0					
ANR	115420	Callee	value		114398	0					
ANR	115421	Identifier	value		114398	0					
ANR	115422	ArgumentList	rv		114398	1					
ANR	115423	Argument	rv		114398	0					
ANR	115424	Identifier	rv		114398	0					
ANR	115425	ArrayIndexing	bigtens [ j ]		114398	1					
ANR	115426	Identifier	bigtens		114398	0					
ANR	115427	Identifier	j		114398	1					
ANR	115428	IfStatement	if ( ( z = word0 ( rv ) & Exp_mask ) > Exp_msk1 * ( DBL_MAX_EXP + Bias - P ) )		114398	3					
ANR	115429	Condition	( z = word0 ( rv ) & Exp_mask ) > Exp_msk1 * ( DBL_MAX_EXP + Bias - P )	2260:8:45568:45631	114398	0	True				
ANR	115430	RelationalExpression	( z = word0 ( rv ) & Exp_mask ) > Exp_msk1 * ( DBL_MAX_EXP + Bias - P )		114398	0		>			
ANR	115431	AssignmentExpression	z = word0 ( rv ) & Exp_mask		114398	0		=			
ANR	115432	Identifier	z		114398	0					
ANR	115433	BitAndExpression	word0 ( rv ) & Exp_mask		114398	1		&			
ANR	115434	CallExpression	word0 ( rv )		114398	0					
ANR	115435	Callee	word0		114398	0					
ANR	115436	Identifier	word0		114398	0					
ANR	115437	ArgumentList	rv		114398	1					
ANR	115438	Argument	rv		114398	0					
ANR	115439	Identifier	rv		114398	0					
ANR	115440	Identifier	Exp_mask		114398	1					
ANR	115441	MultiplicativeExpression	Exp_msk1 * ( DBL_MAX_EXP + Bias - P )		114398	1		*			
ANR	115442	Identifier	Exp_msk1		114398	0					
ANR	115443	AdditiveExpression	DBL_MAX_EXP + Bias - P		114398	1		+			
ANR	115444	Identifier	DBL_MAX_EXP		114398	0					
ANR	115445	AdditiveExpression	Bias - P		114398	1		-			
ANR	115446	Identifier	Bias		114398	0					
ANR	115447	Identifier	P		114398	1					
ANR	115448	GotoStatement	goto ovfl ;	2262:5:45639:45648	114398	1	True				
ANR	115449	Identifier	ovfl		114398	0					
ANR	115450	IfStatement	if ( z > Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P ) )		114398	4					
ANR	115451	Condition	z > Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P )	2263:8:45658:45692	114398	0	True				
ANR	115452	RelationalExpression	z > Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P )		114398	0		>			
ANR	115453	Identifier	z		114398	0					
ANR	115454	MultiplicativeExpression	Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 - P )		114398	1		*			
ANR	115455	Identifier	Exp_msk1		114398	0					
ANR	115456	AdditiveExpression	DBL_MAX_EXP + Bias - 1 - P		114398	1		+			
ANR	115457	Identifier	DBL_MAX_EXP		114398	0					
ANR	115458	AdditiveExpression	Bias - 1 - P		114398	1		-			
ANR	115459	Identifier	Bias		114398	0					
ANR	115460	AdditiveExpression	1 - P		114398	1		-			
ANR	115461	PrimaryExpression	1		114398	0					
ANR	115462	Identifier	P		114398	1					
ANR	115463	CompoundStatement		224:45:4214:4214	114398	1					
ANR	115464	ExpressionStatement	word0 ( rv ) = Big0	2266:5:45768:45784	114398	0	True				
ANR	115465	AssignmentExpression	word0 ( rv ) = Big0		114398	0		=			
ANR	115466	CallExpression	word0 ( rv )		114398	0					
ANR	115467	Callee	word0		114398	0					
ANR	115468	Identifier	word0		114398	0					
ANR	115469	ArgumentList	rv		114398	1					
ANR	115470	Argument	rv		114398	0					
ANR	115471	Identifier	rv		114398	0					
ANR	115472	Identifier	Big0		114398	1					
ANR	115473	ExpressionStatement	word1 ( rv ) = Big1	2267:5:45791:45807	114398	1	True				
ANR	115474	AssignmentExpression	word1 ( rv ) = Big1		114398	0		=			
ANR	115475	CallExpression	word1 ( rv )		114398	0					
ANR	115476	Callee	word1		114398	0					
ANR	115477	Identifier	word1		114398	0					
ANR	115478	ArgumentList	rv		114398	1					
ANR	115479	Argument	rv		114398	0					
ANR	115480	Identifier	rv		114398	0					
ANR	115481	Identifier	Big1		114398	1					
ANR	115482	ElseStatement	else		114398	0					
ANR	115483	ExpressionStatement	word0 ( rv ) += P * Exp_msk1	2270:5:45829:45852	114398	0	True				
ANR	115484	AssignmentExpression	word0 ( rv ) += P * Exp_msk1		114398	0		+=			
ANR	115485	CallExpression	word0 ( rv )		114398	0					
ANR	115486	Callee	word0		114398	0					
ANR	115487	Identifier	word0		114398	0					
ANR	115488	ArgumentList	rv		114398	1					
ANR	115489	Argument	rv		114398	0					
ANR	115490	Identifier	rv		114398	0					
ANR	115491	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	115492	Identifier	P		114398	0					
ANR	115493	Identifier	Exp_msk1		114398	1					
ANR	115494	ElseStatement	else		114398	0					
ANR	115495	IfStatement	if ( e1 < 0 )		114398	0					
ANR	115496	Condition	e1 < 0	2275:10:45877:45882	114398	0	True				
ANR	115497	RelationalExpression	e1 < 0		114398	0		<			
ANR	115498	Identifier	e1		114398	0					
ANR	115499	PrimaryExpression	0		114398	1					
ANR	115500	CompoundStatement		236:18:4404:4404	114398	1					
ANR	115501	ExpressionStatement	e1 = - e1	2276:2:45889:45897	114398	0	True				
ANR	115502	AssignmentExpression	e1 = - e1		114398	0		=			
ANR	115503	Identifier	e1		114398	0					
ANR	115504	UnaryOperationExpression	- e1		114398	1					
ANR	115505	UnaryOperator	-		114398	0					
ANR	115506	Identifier	e1		114398	1					
ANR	115507	IfStatement	if ( ( i = e1 & 15 ) )		114398	1					
ANR	115508	Condition	i = e1 & 15	2277:6:45905:45917	114398	0	True				
ANR	115509	AssignmentExpression	i = e1 & 15		114398	0		=			
ANR	115510	Identifier	i		114398	0					
ANR	115511	BitAndExpression	e1 & 15		114398	1		&			
ANR	115512	Identifier	e1		114398	0					
ANR	115513	PrimaryExpression	15		114398	1					
ANR	115514	ExpressionStatement	value ( rv ) /= tens [ i ]	2278:3:45923:45943	114398	1	True				
ANR	115515	AssignmentExpression	value ( rv ) /= tens [ i ]		114398	0		/=			
ANR	115516	CallExpression	value ( rv )		114398	0					
ANR	115517	Callee	value		114398	0					
ANR	115518	Identifier	value		114398	0					
ANR	115519	ArgumentList	rv		114398	1					
ANR	115520	Argument	rv		114398	0					
ANR	115521	Identifier	rv		114398	0					
ANR	115522	ArrayIndexing	tens [ i ]		114398	1					
ANR	115523	Identifier	tens		114398	0					
ANR	115524	Identifier	i		114398	1					
ANR	115525	IfStatement	if ( e1 &= ~15 )		114398	2					
ANR	115526	Condition	e1 &= ~15	2279:6:45951:45959	114398	0	True				
ANR	115527	AssignmentExpression	e1 &= ~15		114398	0		&=			
ANR	115528	Identifier	e1		114398	0					
ANR	115529	Identifier	~15		114398	1					
ANR	115530	CompoundStatement		240:17:4481:4481	114398	1					
ANR	115531	ExpressionStatement	e1 >>= 4	2280:3:45967:45975	114398	0	True				
ANR	115532	AssignmentExpression	e1 >>= 4		114398	0		>>=			
ANR	115533	Identifier	e1		114398	0					
ANR	115534	PrimaryExpression	4		114398	1					
ANR	115535	IfStatement	if ( e1 >= 1 << n_bigtens )		114398	1					
ANR	115536	Condition	e1 >= 1 << n_bigtens	2281:7:45984:46003	114398	0	True				
ANR	115537	RelationalExpression	e1 >= 1 << n_bigtens		114398	0		>=			
ANR	115538	Identifier	e1		114398	0					
ANR	115539	ShiftExpression	1 << n_bigtens		114398	1		<<			
ANR	115540	PrimaryExpression	1		114398	0					
ANR	115541	Identifier	n_bigtens		114398	1					
ANR	115542	GotoStatement	goto undfl ;	2282:4:46010:46020	114398	1	True				
ANR	115543	Identifier	undfl		114398	0					
ANR	115544	ForStatement	"for ( j = 0 ; e1 > 1 ; j ++ , e1 >>= 1 )"		114398	2					
ANR	115545	ForInit	j = 0 ;	2283:7:46029:46034	114398	0	True				
ANR	115546	AssignmentExpression	j = 0		114398	0		=			
ANR	115547	Identifier	j		114398	0					
ANR	115548	PrimaryExpression	0		114398	1					
ANR	115549	Condition	e1 > 1	2283:14:46036:46041	114398	1	True				
ANR	115550	RelationalExpression	e1 > 1		114398	0		>			
ANR	115551	Identifier	e1		114398	0					
ANR	115552	PrimaryExpression	1		114398	1					
ANR	115553	Expression	"j ++ , e1 >>= 1"	2283:22:46044:46056	114398	2	True				
ANR	115554	PostIncDecOperationExpression	j ++		114398	0					
ANR	115555	Identifier	j		114398	0					
ANR	115556	IncDec	++		114398	1					
ANR	115557	AssignmentExpression	e1 >>= 1		114398	1		>>=			
ANR	115558	Identifier	e1		114398	0					
ANR	115559	PrimaryExpression	1		114398	1					
ANR	115560	IfStatement	if ( e1 & 1 )		114398	3					
ANR	115561	Condition	e1 & 1	2284:8:46067:46072	114398	0	True				
ANR	115562	BitAndExpression	e1 & 1		114398	0		&			
ANR	115563	Identifier	e1		114398	0					
ANR	115564	PrimaryExpression	1		114398	1					
ANR	115565	ExpressionStatement	value ( rv ) *= tinytens [ j ]	2285:5:46080:46104	114398	1	True				
ANR	115566	AssignmentExpression	value ( rv ) *= tinytens [ j ]		114398	0		*=			
ANR	115567	CallExpression	value ( rv )		114398	0					
ANR	115568	Callee	value		114398	0					
ANR	115569	Identifier	value		114398	0					
ANR	115570	ArgumentList	rv		114398	1					
ANR	115571	Argument	rv		114398	0					
ANR	115572	Identifier	rv		114398	0					
ANR	115573	ArrayIndexing	tinytens [ j ]		114398	1					
ANR	115574	Identifier	tinytens		114398	0					
ANR	115575	Identifier	j		114398	1					
ANR	115576	ExpressionStatement	value ( rv0 ) = value ( rv )	2287:3:46159:46181	114398	3	True				
ANR	115577	AssignmentExpression	value ( rv0 ) = value ( rv )		114398	0		=			
ANR	115578	CallExpression	value ( rv0 )		114398	0					
ANR	115579	Callee	value		114398	0					
ANR	115580	Identifier	value		114398	0					
ANR	115581	ArgumentList	rv0		114398	1					
ANR	115582	Argument	rv0		114398	0					
ANR	115583	Identifier	rv0		114398	0					
ANR	115584	CallExpression	value ( rv )		114398	1					
ANR	115585	Callee	value		114398	0					
ANR	115586	Identifier	value		114398	0					
ANR	115587	ArgumentList	rv		114398	1					
ANR	115588	Argument	rv		114398	0					
ANR	115589	Identifier	rv		114398	0					
ANR	115590	ExpressionStatement	value ( rv ) *= tinytens [ j ]	2288:3:46186:46210	114398	4	True				
ANR	115591	AssignmentExpression	value ( rv ) *= tinytens [ j ]		114398	0		*=			
ANR	115592	CallExpression	value ( rv )		114398	0					
ANR	115593	Callee	value		114398	0					
ANR	115594	Identifier	value		114398	0					
ANR	115595	ArgumentList	rv		114398	1					
ANR	115596	Argument	rv		114398	0					
ANR	115597	Identifier	rv		114398	0					
ANR	115598	ArrayIndexing	tinytens [ j ]		114398	1					
ANR	115599	Identifier	tinytens		114398	0					
ANR	115600	Identifier	j		114398	1					
ANR	115601	IfStatement	if ( ! value ( rv ) )		114398	5					
ANR	115602	Condition	! value ( rv )	2289:7:46219:46228	114398	0	True				
ANR	115603	UnaryOperationExpression	! value ( rv )		114398	0					
ANR	115604	UnaryOperator	!		114398	0					
ANR	115605	CallExpression	value ( rv )		114398	1					
ANR	115606	Callee	value		114398	0					
ANR	115607	Identifier	value		114398	0					
ANR	115608	ArgumentList	rv		114398	1					
ANR	115609	Argument	rv		114398	0					
ANR	115610	Identifier	rv		114398	0					
ANR	115611	CompoundStatement		250:19:4750:4750	114398	1					
ANR	115612	ExpressionStatement	value ( rv ) = 2. * value ( rv0 )	2290:4:46237:46262	114398	0	True				
ANR	115613	AssignmentExpression	value ( rv ) = 2. * value ( rv0 )		114398	0		=			
ANR	115614	CallExpression	value ( rv )		114398	0					
ANR	115615	Callee	value		114398	0					
ANR	115616	Identifier	value		114398	0					
ANR	115617	ArgumentList	rv		114398	1					
ANR	115618	Argument	rv		114398	0					
ANR	115619	Identifier	rv		114398	0					
ANR	115620	MultiplicativeExpression	2. * value ( rv0 )		114398	1		*			
ANR	115621	PrimaryExpression	2.		114398	0					
ANR	115622	CallExpression	value ( rv0 )		114398	1					
ANR	115623	Callee	value		114398	0					
ANR	115624	Identifier	value		114398	0					
ANR	115625	ArgumentList	rv0		114398	1					
ANR	115626	Argument	rv0		114398	0					
ANR	115627	Identifier	rv0		114398	0					
ANR	115628	ExpressionStatement	value ( rv ) *= tinytens [ j ]	2291:4:46268:46292	114398	1	True				
ANR	115629	AssignmentExpression	value ( rv ) *= tinytens [ j ]		114398	0		*=			
ANR	115630	CallExpression	value ( rv )		114398	0					
ANR	115631	Callee	value		114398	0					
ANR	115632	Identifier	value		114398	0					
ANR	115633	ArgumentList	rv		114398	1					
ANR	115634	Argument	rv		114398	0					
ANR	115635	Identifier	rv		114398	0					
ANR	115636	ArrayIndexing	tinytens [ j ]		114398	1					
ANR	115637	Identifier	tinytens		114398	0					
ANR	115638	Identifier	j		114398	1					
ANR	115639	IfStatement	if ( ! value ( rv ) )		114398	2					
ANR	115640	Condition	! value ( rv )	2292:8:46302:46311	114398	0	True				
ANR	115641	UnaryOperationExpression	! value ( rv )		114398	0					
ANR	115642	UnaryOperator	!		114398	0					
ANR	115643	CallExpression	value ( rv )		114398	1					
ANR	115644	Callee	value		114398	0					
ANR	115645	Identifier	value		114398	0					
ANR	115646	ArgumentList	rv		114398	1					
ANR	115647	Argument	rv		114398	0					
ANR	115648	Identifier	rv		114398	0					
ANR	115649	CompoundStatement		253:20:4833:4833	114398	1					
ANR	115650	Label	undfl :	2293:0:46316:46321	114398	0	True				
ANR	115651	Identifier	undfl		114398	0					
ANR	115652	ExpressionStatement	value ( rv ) = 0.	2294:5:46328:46342	114398	1	True				
ANR	115653	AssignmentExpression	value ( rv ) = 0.		114398	0		=			
ANR	115654	CallExpression	value ( rv )		114398	0					
ANR	115655	Callee	value		114398	0					
ANR	115656	Identifier	value		114398	0					
ANR	115657	ArgumentList	rv		114398	1					
ANR	115658	Argument	rv		114398	0					
ANR	115659	Identifier	rv		114398	0					
ANR	115660	PrimaryExpression	0.		114398	1					
ANR	115661	ExpressionStatement	errno = ERANGE	2295:5:46349:46363	114398	2	True				
ANR	115662	AssignmentExpression	errno = ERANGE		114398	0		=			
ANR	115663	Identifier	errno		114398	0					
ANR	115664	Identifier	ERANGE		114398	1					
ANR	115665	IfStatement	if ( bd0 )		114398	3					
ANR	115666	Condition	bd0	2296:9:46374:46376	114398	0	True				
ANR	115667	Identifier	bd0		114398	0					
ANR	115668	GotoStatement	goto retfree ;	2297:6:46385:46397	114398	1	True				
ANR	115669	Identifier	retfree		114398	0					
ANR	115670	GotoStatement	goto ret ;	2298:5:46404:46412	114398	4	True				
ANR	115671	Identifier	ret		114398	0					
ANR	115672	ExpressionStatement	word0 ( rv ) = Tiny0	2300:4:46424:46441	114398	3	True				
ANR	115673	AssignmentExpression	word0 ( rv ) = Tiny0		114398	0		=			
ANR	115674	CallExpression	word0 ( rv )		114398	0					
ANR	115675	Callee	word0		114398	0					
ANR	115676	Identifier	word0		114398	0					
ANR	115677	ArgumentList	rv		114398	1					
ANR	115678	Argument	rv		114398	0					
ANR	115679	Identifier	rv		114398	0					
ANR	115680	Identifier	Tiny0		114398	1					
ANR	115681	ExpressionStatement	word1 ( rv ) = Tiny1	2301:4:46447:46464	114398	4	True				
ANR	115682	AssignmentExpression	word1 ( rv ) = Tiny1		114398	0		=			
ANR	115683	CallExpression	word1 ( rv )		114398	0					
ANR	115684	Callee	word1		114398	0					
ANR	115685	Identifier	word1		114398	0					
ANR	115686	ArgumentList	rv		114398	1					
ANR	115687	Argument	rv		114398	0					
ANR	115688	Identifier	rv		114398	0					
ANR	115689	Identifier	Tiny1		114398	1					
ANR	115690	ExpressionStatement	"bd0 = s2b ( s0 , nd0 , nd , y )"	2313:1:46671:46696	114398	43	True				
ANR	115691	AssignmentExpression	"bd0 = s2b ( s0 , nd0 , nd , y )"		114398	0		=			
ANR	115692	Identifier	bd0		114398	0					
ANR	115693	CallExpression	"s2b ( s0 , nd0 , nd , y )"		114398	1					
ANR	115694	Callee	s2b		114398	0					
ANR	115695	Identifier	s2b		114398	0					
ANR	115696	ArgumentList	s0		114398	1					
ANR	115697	Argument	s0		114398	0					
ANR	115698	Identifier	s0		114398	0					
ANR	115699	Argument	nd0		114398	1					
ANR	115700	Identifier	nd0		114398	0					
ANR	115701	Argument	nd		114398	2					
ANR	115702	Identifier	nd		114398	0					
ANR	115703	Argument	y		114398	3					
ANR	115704	Identifier	y		114398	0					
ANR	115705	ForStatement	for ( ; ; )		114398	44					
ANR	115706	CompoundStatement		276:9:5227:5227	114398	0					
ANR	115707	ExpressionStatement	bd = Balloc ( bd0 -> k )	2316:2:46712:46731	114398	0	True				
ANR	115708	AssignmentExpression	bd = Balloc ( bd0 -> k )		114398	0		=			
ANR	115709	Identifier	bd		114398	0					
ANR	115710	CallExpression	Balloc ( bd0 -> k )		114398	1					
ANR	115711	Callee	Balloc		114398	0					
ANR	115712	Identifier	Balloc		114398	0					
ANR	115713	ArgumentList	bd0 -> k		114398	1					
ANR	115714	Argument	bd0 -> k		114398	0					
ANR	115715	PtrMemberAccess	bd0 -> k		114398	0					
ANR	115716	Identifier	bd0		114398	0					
ANR	115717	Identifier	k		114398	1					
ANR	115718	ExpressionStatement	"Bcopy ( bd , bd0 )"	2317:2:46735:46749	114398	1	True				
ANR	115719	CallExpression	"Bcopy ( bd , bd0 )"		114398	0					
ANR	115720	Callee	Bcopy		114398	0					
ANR	115721	Identifier	Bcopy		114398	0					
ANR	115722	ArgumentList	bd		114398	1					
ANR	115723	Argument	bd		114398	0					
ANR	115724	Identifier	bd		114398	0					
ANR	115725	Argument	bd0		114398	1					
ANR	115726	Identifier	bd0		114398	0					
ANR	115727	ExpressionStatement	"bb = d2b ( value ( rv ) , & bbe , & bbbits )"	2318:2:46753:46787	114398	2	True				
ANR	115728	AssignmentExpression	"bb = d2b ( value ( rv ) , & bbe , & bbbits )"		114398	0		=			
ANR	115729	Identifier	bb		114398	0					
ANR	115730	CallExpression	"d2b ( value ( rv ) , & bbe , & bbbits )"		114398	1					
ANR	115731	Callee	d2b		114398	0					
ANR	115732	Identifier	d2b		114398	0					
ANR	115733	ArgumentList	value ( rv )		114398	1					
ANR	115734	Argument	value ( rv )		114398	0					
ANR	115735	CallExpression	value ( rv )		114398	0					
ANR	115736	Callee	value		114398	0					
ANR	115737	Identifier	value		114398	0					
ANR	115738	ArgumentList	rv		114398	1					
ANR	115739	Argument	rv		114398	0					
ANR	115740	Identifier	rv		114398	0					
ANR	115741	Argument	& bbe		114398	1					
ANR	115742	UnaryOperationExpression	& bbe		114398	0					
ANR	115743	UnaryOperator	&		114398	0					
ANR	115744	Identifier	bbe		114398	1					
ANR	115745	Argument	& bbbits		114398	2					
ANR	115746	UnaryOperationExpression	& bbbits		114398	0					
ANR	115747	UnaryOperator	&		114398	0					
ANR	115748	Identifier	bbbits		114398	1					
ANR	115749	ExpressionStatement	bs = i2b ( 1 )	2319:2:46813:46824	114398	3	True				
ANR	115750	AssignmentExpression	bs = i2b ( 1 )		114398	0		=			
ANR	115751	Identifier	bs		114398	0					
ANR	115752	CallExpression	i2b ( 1 )		114398	1					
ANR	115753	Callee	i2b		114398	0					
ANR	115754	Identifier	i2b		114398	0					
ANR	115755	ArgumentList	1		114398	1					
ANR	115756	Argument	1		114398	0					
ANR	115757	PrimaryExpression	1		114398	0					
ANR	115758	IfStatement	if ( e >= 0 )		114398	4					
ANR	115759	Condition	e >= 0	2321:6:46833:46838	114398	0	True				
ANR	115760	RelationalExpression	e >= 0		114398	0		>=			
ANR	115761	Identifier	e		114398	0					
ANR	115762	PrimaryExpression	0		114398	1					
ANR	115763	CompoundStatement		282:14:5360:5360	114398	1					
ANR	115764	ExpressionStatement	bb2 = bb5 = 0	2322:3:46846:46859	114398	0	True				
ANR	115765	AssignmentExpression	bb2 = bb5 = 0		114398	0		=			
ANR	115766	Identifier	bb2		114398	0					
ANR	115767	AssignmentExpression	bb5 = 0		114398	1		=			
ANR	115768	Identifier	bb5		114398	0					
ANR	115769	PrimaryExpression	0		114398	1					
ANR	115770	ExpressionStatement	bd2 = bd5 = e	2323:3:46864:46877	114398	1	True				
ANR	115771	AssignmentExpression	bd2 = bd5 = e		114398	0		=			
ANR	115772	Identifier	bd2		114398	0					
ANR	115773	AssignmentExpression	bd5 = e		114398	1		=			
ANR	115774	Identifier	bd5		114398	0					
ANR	115775	Identifier	e		114398	1					
ANR	115776	ElseStatement	else		114398	0					
ANR	115777	CompoundStatement		286:7:5409:5409	114398	0					
ANR	115778	ExpressionStatement	bb2 = bb5 = - e	2326:3:46895:46909	114398	0	True				
ANR	115779	AssignmentExpression	bb2 = bb5 = - e		114398	0		=			
ANR	115780	Identifier	bb2		114398	0					
ANR	115781	AssignmentExpression	bb5 = - e		114398	1		=			
ANR	115782	Identifier	bb5		114398	0					
ANR	115783	UnaryOperationExpression	- e		114398	1					
ANR	115784	UnaryOperator	-		114398	0					
ANR	115785	Identifier	e		114398	1					
ANR	115786	ExpressionStatement	bd2 = bd5 = 0	2327:3:46914:46927	114398	1	True				
ANR	115787	AssignmentExpression	bd2 = bd5 = 0		114398	0		=			
ANR	115788	Identifier	bd2		114398	0					
ANR	115789	AssignmentExpression	bd5 = 0		114398	1		=			
ANR	115790	Identifier	bd5		114398	0					
ANR	115791	PrimaryExpression	0		114398	1					
ANR	115792	IfStatement	if ( bbe >= 0 )		114398	5					
ANR	115793	Condition	bbe >= 0	2329:6:46939:46946	114398	0	True				
ANR	115794	RelationalExpression	bbe >= 0		114398	0		>=			
ANR	115795	Identifier	bbe		114398	0					
ANR	115796	PrimaryExpression	0		114398	1					
ANR	115797	ExpressionStatement	bb2 += bbe	2330:3:46952:46962	114398	1	True				
ANR	115798	AssignmentExpression	bb2 += bbe		114398	0		+=			
ANR	115799	Identifier	bb2		114398	0					
ANR	115800	Identifier	bbe		114398	1					
ANR	115801	ElseStatement	else		114398	0					
ANR	115802	ExpressionStatement	bd2 -= bbe	2332:3:46974:46984	114398	0	True				
ANR	115803	AssignmentExpression	bd2 -= bbe		114398	0		-=			
ANR	115804	Identifier	bd2		114398	0					
ANR	115805	Identifier	bbe		114398	1					
ANR	115806	ExpressionStatement	bs2 = bb2	2333:2:46988:46997	114398	6	True				
ANR	115807	AssignmentExpression	bs2 = bb2		114398	0		=			
ANR	115808	Identifier	bs2		114398	0					
ANR	115809	Identifier	bb2		114398	1					
ANR	115810	ExpressionStatement	j = 1 + 4 * P - 3 - bbbits + ( ( bbe + bbbits - 1 ) & 3 )	2336:2:47036:47087	114398	7	True				
ANR	115811	AssignmentExpression	j = 1 + 4 * P - 3 - bbbits + ( ( bbe + bbbits - 1 ) & 3 )		114398	0		=			
ANR	115812	Identifier	j		114398	0					
ANR	115813	AdditiveExpression	1 + 4 * P - 3 - bbbits + ( ( bbe + bbbits - 1 ) & 3 )		114398	1		+			
ANR	115814	PrimaryExpression	1		114398	0					
ANR	115815	AdditiveExpression	4 * P - 3 - bbbits + ( ( bbe + bbbits - 1 ) & 3 )		114398	1		-			
ANR	115816	MultiplicativeExpression	4 * P		114398	0		*			
ANR	115817	PrimaryExpression	4		114398	0					
ANR	115818	Identifier	P		114398	1					
ANR	115819	AdditiveExpression	3 - bbbits + ( ( bbe + bbbits - 1 ) & 3 )		114398	1		-			
ANR	115820	PrimaryExpression	3		114398	0					
ANR	115821	AdditiveExpression	bbbits + ( ( bbe + bbbits - 1 ) & 3 )		114398	1		+			
ANR	115822	Identifier	bbbits		114398	0					
ANR	115823	BitAndExpression	( bbe + bbbits - 1 ) & 3		114398	1		&			
ANR	115824	AdditiveExpression	bbe + bbbits - 1		114398	0		+			
ANR	115825	Identifier	bbe		114398	0					
ANR	115826	AdditiveExpression	bbbits - 1		114398	1		-			
ANR	115827	Identifier	bbbits		114398	0					
ANR	115828	PrimaryExpression	1		114398	1					
ANR	115829	PrimaryExpression	3		114398	1					
ANR	115830	ExpressionStatement	bb2 += j	2347:2:47262:47270	114398	8	True				
ANR	115831	AssignmentExpression	bb2 += j		114398	0		+=			
ANR	115832	Identifier	bb2		114398	0					
ANR	115833	Identifier	j		114398	1					
ANR	115834	ExpressionStatement	bd2 += j	2348:2:47274:47282	114398	9	True				
ANR	115835	AssignmentExpression	bd2 += j		114398	0		+=			
ANR	115836	Identifier	bd2		114398	0					
ANR	115837	Identifier	j		114398	1					
ANR	115838	ExpressionStatement	i = bb2 < bd2 ? bb2 : bd2	2349:2:47286:47311	114398	10	True				
ANR	115839	AssignmentExpression	i = bb2 < bd2 ? bb2 : bd2		114398	0		=			
ANR	115840	Identifier	i		114398	0					
ANR	115841	ConditionalExpression	bb2 < bd2 ? bb2 : bd2		114398	1					
ANR	115842	Condition	bb2 < bd2		114398	0					
ANR	115843	RelationalExpression	bb2 < bd2		114398	0		<			
ANR	115844	Identifier	bb2		114398	0					
ANR	115845	Identifier	bd2		114398	1					
ANR	115846	Identifier	bb2		114398	1					
ANR	115847	Identifier	bd2		114398	2					
ANR	115848	IfStatement	if ( i > bs2 )		114398	11					
ANR	115849	Condition	i > bs2	2350:6:47319:47325	114398	0	True				
ANR	115850	RelationalExpression	i > bs2		114398	0		>			
ANR	115851	Identifier	i		114398	0					
ANR	115852	Identifier	bs2		114398	1					
ANR	115853	ExpressionStatement	i = bs2	2351:3:47331:47338	114398	1	True				
ANR	115854	AssignmentExpression	i = bs2		114398	0		=			
ANR	115855	Identifier	i		114398	0					
ANR	115856	Identifier	bs2		114398	1					
ANR	115857	IfStatement	if ( i > 0 )		114398	12					
ANR	115858	Condition	i > 0	2352:6:47346:47350	114398	0	True				
ANR	115859	RelationalExpression	i > 0		114398	0		>			
ANR	115860	Identifier	i		114398	0					
ANR	115861	PrimaryExpression	0		114398	1					
ANR	115862	CompoundStatement		313:13:5872:5872	114398	1					
ANR	115863	ExpressionStatement	bb2 -= i	2353:3:47358:47366	114398	0	True				
ANR	115864	AssignmentExpression	bb2 -= i		114398	0		-=			
ANR	115865	Identifier	bb2		114398	0					
ANR	115866	Identifier	i		114398	1					
ANR	115867	ExpressionStatement	bd2 -= i	2354:3:47371:47379	114398	1	True				
ANR	115868	AssignmentExpression	bd2 -= i		114398	0		-=			
ANR	115869	Identifier	bd2		114398	0					
ANR	115870	Identifier	i		114398	1					
ANR	115871	ExpressionStatement	bs2 -= i	2355:3:47384:47392	114398	2	True				
ANR	115872	AssignmentExpression	bs2 -= i		114398	0		-=			
ANR	115873	Identifier	bs2		114398	0					
ANR	115874	Identifier	i		114398	1					
ANR	115875	IfStatement	if ( bb5 > 0 )		114398	13					
ANR	115876	Condition	bb5 > 0	2357:6:47404:47410	114398	0	True				
ANR	115877	RelationalExpression	bb5 > 0		114398	0		>			
ANR	115878	Identifier	bb5		114398	0					
ANR	115879	PrimaryExpression	0		114398	1					
ANR	115880	CompoundStatement		318:15:5932:5932	114398	1					
ANR	115881	ExpressionStatement	"bs = pow5mult ( bs , bb5 )"	2358:3:47418:47440	114398	0	True				
ANR	115882	AssignmentExpression	"bs = pow5mult ( bs , bb5 )"		114398	0		=			
ANR	115883	Identifier	bs		114398	0					
ANR	115884	CallExpression	"pow5mult ( bs , bb5 )"		114398	1					
ANR	115885	Callee	pow5mult		114398	0					
ANR	115886	Identifier	pow5mult		114398	0					
ANR	115887	ArgumentList	bs		114398	1					
ANR	115888	Argument	bs		114398	0					
ANR	115889	Identifier	bs		114398	0					
ANR	115890	Argument	bb5		114398	1					
ANR	115891	Identifier	bb5		114398	0					
ANR	115892	ExpressionStatement	"bb1 = mult ( bs , bb )"	2359:3:47445:47463	114398	1	True				
ANR	115893	AssignmentExpression	"bb1 = mult ( bs , bb )"		114398	0		=			
ANR	115894	Identifier	bb1		114398	0					
ANR	115895	CallExpression	"mult ( bs , bb )"		114398	1					
ANR	115896	Callee	mult		114398	0					
ANR	115897	Identifier	mult		114398	0					
ANR	115898	ArgumentList	bs		114398	1					
ANR	115899	Argument	bs		114398	0					
ANR	115900	Identifier	bs		114398	0					
ANR	115901	Argument	bb		114398	1					
ANR	115902	Identifier	bb		114398	0					
ANR	115903	ExpressionStatement	Bfree ( bb )	2360:3:47468:47477	114398	2	True				
ANR	115904	CallExpression	Bfree ( bb )		114398	0					
ANR	115905	Callee	Bfree		114398	0					
ANR	115906	Identifier	Bfree		114398	0					
ANR	115907	ArgumentList	bb		114398	1					
ANR	115908	Argument	bb		114398	0					
ANR	115909	Identifier	bb		114398	0					
ANR	115910	ExpressionStatement	bb = bb1	2361:3:47482:47490	114398	3	True				
ANR	115911	AssignmentExpression	bb = bb1		114398	0		=			
ANR	115912	Identifier	bb		114398	0					
ANR	115913	Identifier	bb1		114398	1					
ANR	115914	IfStatement	if ( bb2 > 0 )		114398	14					
ANR	115915	Condition	bb2 > 0	2363:6:47502:47508	114398	0	True				
ANR	115916	RelationalExpression	bb2 > 0		114398	0		>			
ANR	115917	Identifier	bb2		114398	0					
ANR	115918	PrimaryExpression	0		114398	1					
ANR	115919	ExpressionStatement	"bb = lshift ( bb , bb2 )"	2364:3:47514:47534	114398	1	True				
ANR	115920	AssignmentExpression	"bb = lshift ( bb , bb2 )"		114398	0		=			
ANR	115921	Identifier	bb		114398	0					
ANR	115922	CallExpression	"lshift ( bb , bb2 )"		114398	1					
ANR	115923	Callee	lshift		114398	0					
ANR	115924	Identifier	lshift		114398	0					
ANR	115925	ArgumentList	bb		114398	1					
ANR	115926	Argument	bb		114398	0					
ANR	115927	Identifier	bb		114398	0					
ANR	115928	Argument	bb2		114398	1					
ANR	115929	Identifier	bb2		114398	0					
ANR	115930	IfStatement	if ( bd5 > 0 )		114398	15					
ANR	115931	Condition	bd5 > 0	2365:6:47542:47548	114398	0	True				
ANR	115932	RelationalExpression	bd5 > 0		114398	0		>			
ANR	115933	Identifier	bd5		114398	0					
ANR	115934	PrimaryExpression	0		114398	1					
ANR	115935	ExpressionStatement	"bd = pow5mult ( bd , bd5 )"	2366:3:47554:47576	114398	1	True				
ANR	115936	AssignmentExpression	"bd = pow5mult ( bd , bd5 )"		114398	0		=			
ANR	115937	Identifier	bd		114398	0					
ANR	115938	CallExpression	"pow5mult ( bd , bd5 )"		114398	1					
ANR	115939	Callee	pow5mult		114398	0					
ANR	115940	Identifier	pow5mult		114398	0					
ANR	115941	ArgumentList	bd		114398	1					
ANR	115942	Argument	bd		114398	0					
ANR	115943	Identifier	bd		114398	0					
ANR	115944	Argument	bd5		114398	1					
ANR	115945	Identifier	bd5		114398	0					
ANR	115946	IfStatement	if ( bd2 > 0 )		114398	16					
ANR	115947	Condition	bd2 > 0	2367:6:47584:47590	114398	0	True				
ANR	115948	RelationalExpression	bd2 > 0		114398	0		>			
ANR	115949	Identifier	bd2		114398	0					
ANR	115950	PrimaryExpression	0		114398	1					
ANR	115951	ExpressionStatement	"bd = lshift ( bd , bd2 )"	2368:3:47596:47616	114398	1	True				
ANR	115952	AssignmentExpression	"bd = lshift ( bd , bd2 )"		114398	0		=			
ANR	115953	Identifier	bd		114398	0					
ANR	115954	CallExpression	"lshift ( bd , bd2 )"		114398	1					
ANR	115955	Callee	lshift		114398	0					
ANR	115956	Identifier	lshift		114398	0					
ANR	115957	ArgumentList	bd		114398	1					
ANR	115958	Argument	bd		114398	0					
ANR	115959	Identifier	bd		114398	0					
ANR	115960	Argument	bd2		114398	1					
ANR	115961	Identifier	bd2		114398	0					
ANR	115962	IfStatement	if ( bs2 > 0 )		114398	17					
ANR	115963	Condition	bs2 > 0	2369:6:47624:47630	114398	0	True				
ANR	115964	RelationalExpression	bs2 > 0		114398	0		>			
ANR	115965	Identifier	bs2		114398	0					
ANR	115966	PrimaryExpression	0		114398	1					
ANR	115967	ExpressionStatement	"bs = lshift ( bs , bs2 )"	2370:3:47636:47656	114398	1	True				
ANR	115968	AssignmentExpression	"bs = lshift ( bs , bs2 )"		114398	0		=			
ANR	115969	Identifier	bs		114398	0					
ANR	115970	CallExpression	"lshift ( bs , bs2 )"		114398	1					
ANR	115971	Callee	lshift		114398	0					
ANR	115972	Identifier	lshift		114398	0					
ANR	115973	ArgumentList	bs		114398	1					
ANR	115974	Argument	bs		114398	0					
ANR	115975	Identifier	bs		114398	0					
ANR	115976	Argument	bs2		114398	1					
ANR	115977	Identifier	bs2		114398	0					
ANR	115978	ExpressionStatement	"delta = diff ( bb , bd )"	2371:2:47660:47680	114398	18	True				
ANR	115979	AssignmentExpression	"delta = diff ( bb , bd )"		114398	0		=			
ANR	115980	Identifier	delta		114398	0					
ANR	115981	CallExpression	"diff ( bb , bd )"		114398	1					
ANR	115982	Callee	diff		114398	0					
ANR	115983	Identifier	diff		114398	0					
ANR	115984	ArgumentList	bb		114398	1					
ANR	115985	Argument	bb		114398	0					
ANR	115986	Identifier	bb		114398	0					
ANR	115987	Argument	bd		114398	1					
ANR	115988	Identifier	bd		114398	0					
ANR	115989	ExpressionStatement	dsign = delta -> sign	2372:2:47684:47703	114398	19	True				
ANR	115990	AssignmentExpression	dsign = delta -> sign		114398	0		=			
ANR	115991	Identifier	dsign		114398	0					
ANR	115992	PtrMemberAccess	delta -> sign		114398	1					
ANR	115993	Identifier	delta		114398	0					
ANR	115994	Identifier	sign		114398	1					
ANR	115995	ExpressionStatement	delta -> sign = 0	2373:2:47707:47722	114398	20	True				
ANR	115996	AssignmentExpression	delta -> sign = 0		114398	0		=			
ANR	115997	PtrMemberAccess	delta -> sign		114398	0					
ANR	115998	Identifier	delta		114398	0					
ANR	115999	Identifier	sign		114398	1					
ANR	116000	PrimaryExpression	0		114398	1					
ANR	116001	ExpressionStatement	"i = cmp ( delta , bs )"	2374:2:47726:47744	114398	21	True				
ANR	116002	AssignmentExpression	"i = cmp ( delta , bs )"		114398	0		=			
ANR	116003	Identifier	i		114398	0					
ANR	116004	CallExpression	"cmp ( delta , bs )"		114398	1					
ANR	116005	Callee	cmp		114398	0					
ANR	116006	Identifier	cmp		114398	0					
ANR	116007	ArgumentList	delta		114398	1					
ANR	116008	Argument	delta		114398	0					
ANR	116009	Identifier	delta		114398	0					
ANR	116010	Argument	bs		114398	1					
ANR	116011	Identifier	bs		114398	0					
ANR	116012	IfStatement	if ( i < 0 )		114398	22					
ANR	116013	Condition	i < 0	2375:6:47752:47756	114398	0	True				
ANR	116014	RelationalExpression	i < 0		114398	0		<			
ANR	116015	Identifier	i		114398	0					
ANR	116016	PrimaryExpression	0		114398	1					
ANR	116017	CompoundStatement		336:13:6278:6278	114398	1					
ANR	116018	IfStatement	if ( dsign || word1 ( rv ) || word0 ( rv ) & Bndry_mask )		114398	0					
ANR	116019	Condition	dsign || word1 ( rv ) || word0 ( rv ) & Bndry_mask	2379:7:47872:47915	114398	0	True				
ANR	116020	OrExpression	dsign || word1 ( rv ) || word0 ( rv ) & Bndry_mask		114398	0		||			
ANR	116021	Identifier	dsign		114398	0					
ANR	116022	OrExpression	word1 ( rv ) || word0 ( rv ) & Bndry_mask		114398	1		||			
ANR	116023	CallExpression	word1 ( rv )		114398	0					
ANR	116024	Callee	word1		114398	0					
ANR	116025	Identifier	word1		114398	0					
ANR	116026	ArgumentList	rv		114398	1					
ANR	116027	Argument	rv		114398	0					
ANR	116028	Identifier	rv		114398	0					
ANR	116029	BitAndExpression	word0 ( rv ) & Bndry_mask		114398	1		&			
ANR	116030	CallExpression	word0 ( rv )		114398	0					
ANR	116031	Callee	word0		114398	0					
ANR	116032	Identifier	word0		114398	0					
ANR	116033	ArgumentList	rv		114398	1					
ANR	116034	Argument	rv		114398	0					
ANR	116035	Identifier	rv		114398	0					
ANR	116036	Identifier	Bndry_mask		114398	1					
ANR	116037	BreakStatement	break ;	2380:4:47922:47927	114398	1	True				
ANR	116038	ExpressionStatement	"delta = lshift ( delta , Log2P )"	2381:3:47932:47959	114398	1	True				
ANR	116039	AssignmentExpression	"delta = lshift ( delta , Log2P )"		114398	0		=			
ANR	116040	Identifier	delta		114398	0					
ANR	116041	CallExpression	"lshift ( delta , Log2P )"		114398	1					
ANR	116042	Callee	lshift		114398	0					
ANR	116043	Identifier	lshift		114398	0					
ANR	116044	ArgumentList	delta		114398	1					
ANR	116045	Argument	delta		114398	0					
ANR	116046	Identifier	delta		114398	0					
ANR	116047	Argument	Log2P		114398	1					
ANR	116048	Identifier	Log2P		114398	0					
ANR	116049	IfStatement	"if ( cmp ( delta , bs ) > 0 )"		114398	2					
ANR	116050	Condition	"cmp ( delta , bs ) > 0"	2382:7:47968:47985	114398	0	True				
ANR	116051	RelationalExpression	"cmp ( delta , bs ) > 0"		114398	0		>			
ANR	116052	CallExpression	"cmp ( delta , bs )"		114398	0					
ANR	116053	Callee	cmp		114398	0					
ANR	116054	Identifier	cmp		114398	0					
ANR	116055	ArgumentList	delta		114398	1					
ANR	116056	Argument	delta		114398	0					
ANR	116057	Identifier	delta		114398	0					
ANR	116058	Argument	bs		114398	1					
ANR	116059	Identifier	bs		114398	0					
ANR	116060	PrimaryExpression	0		114398	1					
ANR	116061	GotoStatement	goto drop_down ;	2383:4:47992:48006	114398	1	True				
ANR	116062	Identifier	drop_down		114398	0					
ANR	116063	BreakStatement	break ;	2384:3:48011:48016	114398	3	True				
ANR	116064	IfStatement	if ( i == 0 )		114398	23					
ANR	116065	Condition	i == 0	2386:6:48028:48033	114398	0	True				
ANR	116066	EqualityExpression	i == 0		114398	0		==			
ANR	116067	Identifier	i		114398	0					
ANR	116068	PrimaryExpression	0		114398	1					
ANR	116069	CompoundStatement		347:14:6555:6555	114398	1					
ANR	116070	IfStatement	if ( dsign )		114398	0					
ANR	116071	Condition	dsign	2388:7:48079:48083	114398	0	True				
ANR	116072	Identifier	dsign		114398	0					
ANR	116073	CompoundStatement		349:14:6605:6605	114398	1					
ANR	116074	IfStatement	if ( ( word0 ( rv ) & Bndry_mask1 ) == Bndry_mask1 && word1 ( rv ) == 0xffffffff )		114398	0					
ANR	116075	Condition	( word0 ( rv ) & Bndry_mask1 ) == Bndry_mask1 && word1 ( rv ) == 0xffffffff	2389:8:48096:48169	114398	0	True				
ANR	116076	AndExpression	( word0 ( rv ) & Bndry_mask1 ) == Bndry_mask1 && word1 ( rv ) == 0xffffffff		114398	0		&&			
ANR	116077	EqualityExpression	( word0 ( rv ) & Bndry_mask1 ) == Bndry_mask1		114398	0		==			
ANR	116078	BitAndExpression	word0 ( rv ) & Bndry_mask1		114398	0		&			
ANR	116079	CallExpression	word0 ( rv )		114398	0					
ANR	116080	Callee	word0		114398	0					
ANR	116081	Identifier	word0		114398	0					
ANR	116082	ArgumentList	rv		114398	1					
ANR	116083	Argument	rv		114398	0					
ANR	116084	Identifier	rv		114398	0					
ANR	116085	Identifier	Bndry_mask1		114398	1					
ANR	116086	Identifier	Bndry_mask1		114398	1					
ANR	116087	EqualityExpression	word1 ( rv ) == 0xffffffff		114398	1		==			
ANR	116088	CallExpression	word1 ( rv )		114398	0					
ANR	116089	Callee	word1		114398	0					
ANR	116090	Identifier	word1		114398	0					
ANR	116091	ArgumentList	rv		114398	1					
ANR	116092	Argument	rv		114398	0					
ANR	116093	Identifier	rv		114398	0					
ANR	116094	PrimaryExpression	0xffffffff		114398	1					
ANR	116095	CompoundStatement		351:35:6691:6691	114398	1					
ANR	116096	Statement	word0	2392:5:48224:48228	114398	0	True				
ANR	116097	Statement	(	2392:10:48229:48229	114398	1	True				
ANR	116098	Statement	rv	2392:11:48230:48231	114398	2	True				
ANR	116099	Statement	)	2392:13:48232:48232	114398	3	True				
ANR	116100	Statement	=	2392:15:48234:48234	114398	4	True				
ANR	116101	Statement	(	2392:17:48236:48236	114398	5	True				
ANR	116102	Statement	word0	2392:18:48237:48241	114398	6	True				
ANR	116103	Statement	(	2392:23:48242:48242	114398	7	True				
ANR	116104	Statement	rv	2392:24:48243:48244	114398	8	True				
ANR	116105	Statement	)	2392:26:48245:48245	114398	9	True				
ANR	116106	Statement	&	2392:28:48247:48247	114398	10	True				
ANR	116107	Statement	Exp_mask	2392:30:48249:48256	114398	11	True				
ANR	116108	Statement	)	2392:38:48257:48257	114398	12	True				
ANR	116109	Statement	+	2393:6:48265:48265	114398	13	True				
ANR	116110	Statement	Exp_msk1	2393:8:48267:48274	114398	14	True				
ANR	116111	Statement	|	2395:6:48293:48293	114398	15	True				
ANR	116112	Statement	Exp_msk1	2395:8:48295:48302	114398	16	True				
ANR	116113	Statement	>>	2395:17:48304:48305	114398	17	True				
ANR	116114	Statement	4	2395:20:48307:48307	114398	18	True				
ANR	116115	ExpressionStatement		2397:6:48322:48322	114398	19	True				
ANR	116116	ExpressionStatement	word1 ( rv ) = 0	2398:5:48329:48342	114398	20	True				
ANR	116117	AssignmentExpression	word1 ( rv ) = 0		114398	0		=			
ANR	116118	CallExpression	word1 ( rv )		114398	0					
ANR	116119	Callee	word1		114398	0					
ANR	116120	Identifier	word1		114398	0					
ANR	116121	ArgumentList	rv		114398	1					
ANR	116122	Argument	rv		114398	0					
ANR	116123	Identifier	rv		114398	0					
ANR	116124	PrimaryExpression	0		114398	1					
ANR	116125	BreakStatement	break ;	2399:5:48349:48354	114398	21	True				
ANR	116126	ElseStatement	else		114398	0					
ANR	116127	IfStatement	if ( ! ( word0 ( rv ) & Bndry_mask ) && ! word1 ( rv ) )		114398	0					
ANR	116128	Condition	! ( word0 ( rv ) & Bndry_mask ) && ! word1 ( rv )	2402:12:48379:48417	114398	0	True				
ANR	116129	AndExpression	! ( word0 ( rv ) & Bndry_mask ) && ! word1 ( rv )		114398	0		&&			
ANR	116130	UnaryOperationExpression	! ( word0 ( rv ) & Bndry_mask )		114398	0					
ANR	116131	UnaryOperator	!		114398	0					
ANR	116132	BitAndExpression	word0 ( rv ) & Bndry_mask		114398	1		&			
ANR	116133	CallExpression	word0 ( rv )		114398	0					
ANR	116134	Callee	word0		114398	0					
ANR	116135	Identifier	word0		114398	0					
ANR	116136	ArgumentList	rv		114398	1					
ANR	116137	Argument	rv		114398	0					
ANR	116138	Identifier	rv		114398	0					
ANR	116139	Identifier	Bndry_mask		114398	1					
ANR	116140	UnaryOperationExpression	! word1 ( rv )		114398	1					
ANR	116141	UnaryOperator	!		114398	0					
ANR	116142	CallExpression	word1 ( rv )		114398	1					
ANR	116143	Callee	word1		114398	0					
ANR	116144	Identifier	word1		114398	0					
ANR	116145	ArgumentList	rv		114398	1					
ANR	116146	Argument	rv		114398	0					
ANR	116147	Identifier	rv		114398	0					
ANR	116148	CompoundStatement		363:53:6939:6939	114398	1					
ANR	116149	Label	drop_down :	2403:0:48422:48431	114398	0	True				
ANR	116150	Identifier	drop_down		114398	0					
ANR	116151	ExpressionStatement	L = word0 ( rv ) & Exp_mask	2406:4:48507:48531	114398	1	True				
ANR	116152	AssignmentExpression	L = word0 ( rv ) & Exp_mask		114398	0		=			
ANR	116153	Identifier	L		114398	0					
ANR	116154	BitAndExpression	word0 ( rv ) & Exp_mask		114398	1		&			
ANR	116155	CallExpression	word0 ( rv )		114398	0					
ANR	116156	Callee	word0		114398	0					
ANR	116157	Identifier	word0		114398	0					
ANR	116158	ArgumentList	rv		114398	1					
ANR	116159	Argument	rv		114398	0					
ANR	116160	Identifier	rv		114398	0					
ANR	116161	Identifier	Exp_mask		114398	1					
ANR	116162	IfStatement	if ( L < Exp_msk1 )		114398	2					
ANR	116163	Condition	L < Exp_msk1	2408:8:48552:48564	114398	0	True				
ANR	116164	RelationalExpression	L < Exp_msk1		114398	0		<			
ANR	116165	Identifier	L		114398	0					
ANR	116166	Identifier	Exp_msk1		114398	1					
ANR	116167	GotoStatement	goto undfl ;	2412:6:48610:48620	114398	1	True				
ANR	116168	Identifier	undfl		114398	0					
ANR	116169	ExpressionStatement	L -= Exp_msk1	2413:4:48626:48639	114398	3	True				
ANR	116170	AssignmentExpression	L -= Exp_msk1		114398	0		-=			
ANR	116171	Identifier	L		114398	0					
ANR	116172	Identifier	Exp_msk1		114398	1					
ANR	116173	ExpressionStatement	word0 ( rv ) = L | Bndry_mask1	2417:4:48701:48728	114398	4	True				
ANR	116174	AssignmentExpression	word0 ( rv ) = L | Bndry_mask1		114398	0		=			
ANR	116175	CallExpression	word0 ( rv )		114398	0					
ANR	116176	Callee	word0		114398	0					
ANR	116177	Identifier	word0		114398	0					
ANR	116178	ArgumentList	rv		114398	1					
ANR	116179	Argument	rv		114398	0					
ANR	116180	Identifier	rv		114398	0					
ANR	116181	InclusiveOrExpression	L | Bndry_mask1		114398	1		|			
ANR	116182	Identifier	L		114398	0					
ANR	116183	Identifier	Bndry_mask1		114398	1					
ANR	116184	ExpressionStatement	word1 ( rv ) = 0xffffffff	2418:4:48734:48756	114398	5	True				
ANR	116185	AssignmentExpression	word1 ( rv ) = 0xffffffff		114398	0		=			
ANR	116186	CallExpression	word1 ( rv )		114398	0					
ANR	116187	Callee	word1		114398	0					
ANR	116188	Identifier	word1		114398	0					
ANR	116189	ArgumentList	rv		114398	1					
ANR	116190	Argument	rv		114398	0					
ANR	116191	Identifier	rv		114398	0					
ANR	116192	PrimaryExpression	0xffffffff		114398	1					
ANR	116193	GotoStatement	goto cont ;	2420:4:48773:48782	114398	6	True				
ANR	116194	Identifier	cont		114398	0					
ANR	116195	IfStatement	if ( ! ( word1 ( rv ) & LSB ) )		114398	1					
ANR	116196	Condition	! ( word1 ( rv ) & LSB )	2426:7:48841:48858	114398	0	True				
ANR	116197	UnaryOperationExpression	! ( word1 ( rv ) & LSB )		114398	0					
ANR	116198	UnaryOperator	!		114398	0					
ANR	116199	BitAndExpression	word1 ( rv ) & LSB		114398	1		&			
ANR	116200	CallExpression	word1 ( rv )		114398	0					
ANR	116201	Callee	word1		114398	0					
ANR	116202	Identifier	word1		114398	0					
ANR	116203	ArgumentList	rv		114398	1					
ANR	116204	Argument	rv		114398	0					
ANR	116205	Identifier	rv		114398	0					
ANR	116206	Identifier	LSB		114398	1					
ANR	116207	BreakStatement	break ;	2427:4:48865:48870	114398	1	True				
ANR	116208	IfStatement	if ( dsign )		114398	2					
ANR	116209	Condition	dsign	2429:7:48886:48890	114398	0	True				
ANR	116210	Identifier	dsign		114398	0					
ANR	116211	ExpressionStatement	value ( rv ) += ulp ( value ( rv ) )	2430:4:48897:48924	114398	1	True				
ANR	116212	AssignmentExpression	value ( rv ) += ulp ( value ( rv ) )		114398	0		+=			
ANR	116213	CallExpression	value ( rv )		114398	0					
ANR	116214	Callee	value		114398	0					
ANR	116215	Identifier	value		114398	0					
ANR	116216	ArgumentList	rv		114398	1					
ANR	116217	Argument	rv		114398	0					
ANR	116218	Identifier	rv		114398	0					
ANR	116219	CallExpression	ulp ( value ( rv ) )		114398	1					
ANR	116220	Callee	ulp		114398	0					
ANR	116221	Identifier	ulp		114398	0					
ANR	116222	ArgumentList	value ( rv )		114398	1					
ANR	116223	Argument	value ( rv )		114398	0					
ANR	116224	CallExpression	value ( rv )		114398	0					
ANR	116225	Callee	value		114398	0					
ANR	116226	Identifier	value		114398	0					
ANR	116227	ArgumentList	rv		114398	1					
ANR	116228	Argument	rv		114398	0					
ANR	116229	Identifier	rv		114398	0					
ANR	116230	ElseStatement	else		114398	0					
ANR	116231	CompoundStatement		393:8:7474:7474	114398	0					
ANR	116232	ExpressionStatement	value ( rv ) -= ulp ( value ( rv ) )	2433:4:48961:48988	114398	0	True				
ANR	116233	AssignmentExpression	value ( rv ) -= ulp ( value ( rv ) )		114398	0		-=			
ANR	116234	CallExpression	value ( rv )		114398	0					
ANR	116235	Callee	value		114398	0					
ANR	116236	Identifier	value		114398	0					
ANR	116237	ArgumentList	rv		114398	1					
ANR	116238	Argument	rv		114398	0					
ANR	116239	Identifier	rv		114398	0					
ANR	116240	CallExpression	ulp ( value ( rv ) )		114398	1					
ANR	116241	Callee	ulp		114398	0					
ANR	116242	Identifier	ulp		114398	0					
ANR	116243	ArgumentList	value ( rv )		114398	1					
ANR	116244	Argument	value ( rv )		114398	0					
ANR	116245	CallExpression	value ( rv )		114398	0					
ANR	116246	Callee	value		114398	0					
ANR	116247	Identifier	value		114398	0					
ANR	116248	ArgumentList	rv		114398	1					
ANR	116249	Argument	rv		114398	0					
ANR	116250	Identifier	rv		114398	0					
ANR	116251	IfStatement	if ( ! value ( rv ) )		114398	1					
ANR	116252	Condition	! value ( rv )	2435:8:49023:49032	114398	0	True				
ANR	116253	UnaryOperationExpression	! value ( rv )		114398	0					
ANR	116254	UnaryOperator	!		114398	0					
ANR	116255	CallExpression	value ( rv )		114398	1					
ANR	116256	Callee	value		114398	0					
ANR	116257	Identifier	value		114398	0					
ANR	116258	ArgumentList	rv		114398	1					
ANR	116259	Argument	rv		114398	0					
ANR	116260	Identifier	rv		114398	0					
ANR	116261	GotoStatement	goto undfl ;	2436:5:49040:49050	114398	1	True				
ANR	116262	Identifier	undfl		114398	0					
ANR	116263	BreakStatement	break ;	2440:3:49074:49079	114398	3	True				
ANR	116264	IfStatement	"if ( ( aadj = ratio ( delta , bs ) ) <= 2. )"		114398	24					
ANR	116265	Condition	"( aadj = ratio ( delta , bs ) ) <= 2."	2442:6:49091:49121	114398	0	True				
ANR	116266	RelationalExpression	"( aadj = ratio ( delta , bs ) ) <= 2."		114398	0		<=			
ANR	116267	AssignmentExpression	"aadj = ratio ( delta , bs )"		114398	0		=			
ANR	116268	Identifier	aadj		114398	0					
ANR	116269	CallExpression	"ratio ( delta , bs )"		114398	1					
ANR	116270	Callee	ratio		114398	0					
ANR	116271	Identifier	ratio		114398	0					
ANR	116272	ArgumentList	delta		114398	1					
ANR	116273	Argument	delta		114398	0					
ANR	116274	Identifier	delta		114398	0					
ANR	116275	Argument	bs		114398	1					
ANR	116276	Identifier	bs		114398	0					
ANR	116277	PrimaryExpression	2.		114398	1					
ANR	116278	CompoundStatement		403:39:7643:7643	114398	1					
ANR	116279	IfStatement	if ( dsign )		114398	0					
ANR	116280	Condition	dsign	2443:7:49133:49137	114398	0	True				
ANR	116281	Identifier	dsign		114398	0					
ANR	116282	ExpressionStatement	aadj = aadj1 = 1.	2444:4:49144:49161	114398	1	True				
ANR	116283	AssignmentExpression	aadj = aadj1 = 1.		114398	0		=			
ANR	116284	Identifier	aadj		114398	0					
ANR	116285	AssignmentExpression	aadj1 = 1.		114398	1		=			
ANR	116286	Identifier	aadj1		114398	0					
ANR	116287	PrimaryExpression	1.		114398	1					
ANR	116288	ElseStatement	else		114398	0					
ANR	116289	IfStatement	if ( word1 ( rv ) || word0 ( rv ) & Bndry_mask )		114398	0					
ANR	116290	Condition	word1 ( rv ) || word0 ( rv ) & Bndry_mask	2445:12:49175:49209	114398	0	True				
ANR	116291	OrExpression	word1 ( rv ) || word0 ( rv ) & Bndry_mask		114398	0		||			
ANR	116292	CallExpression	word1 ( rv )		114398	0					
ANR	116293	Callee	word1		114398	0					
ANR	116294	Identifier	word1		114398	0					
ANR	116295	ArgumentList	rv		114398	1					
ANR	116296	Argument	rv		114398	0					
ANR	116297	Identifier	rv		114398	0					
ANR	116298	BitAndExpression	word0 ( rv ) & Bndry_mask		114398	1		&			
ANR	116299	CallExpression	word0 ( rv )		114398	0					
ANR	116300	Callee	word0		114398	0					
ANR	116301	Identifier	word0		114398	0					
ANR	116302	ArgumentList	rv		114398	1					
ANR	116303	Argument	rv		114398	0					
ANR	116304	Identifier	rv		114398	0					
ANR	116305	Identifier	Bndry_mask		114398	1					
ANR	116306	CompoundStatement		406:49:7731:7731	114398	1					
ANR	116307	IfStatement	if ( word1 ( rv ) == Tiny1 && ! word0 ( rv ) )		114398	0					
ANR	116308	Condition	word1 ( rv ) == Tiny1 && ! word0 ( rv )	2447:8:49247:49278	114398	0	True				
ANR	116309	AndExpression	word1 ( rv ) == Tiny1 && ! word0 ( rv )		114398	0		&&			
ANR	116310	EqualityExpression	word1 ( rv ) == Tiny1		114398	0		==			
ANR	116311	CallExpression	word1 ( rv )		114398	0					
ANR	116312	Callee	word1		114398	0					
ANR	116313	Identifier	word1		114398	0					
ANR	116314	ArgumentList	rv		114398	1					
ANR	116315	Argument	rv		114398	0					
ANR	116316	Identifier	rv		114398	0					
ANR	116317	Identifier	Tiny1		114398	1					
ANR	116318	UnaryOperationExpression	! word0 ( rv )		114398	1					
ANR	116319	UnaryOperator	!		114398	0					
ANR	116320	CallExpression	word0 ( rv )		114398	1					
ANR	116321	Callee	word0		114398	0					
ANR	116322	Identifier	word0		114398	0					
ANR	116323	ArgumentList	rv		114398	1					
ANR	116324	Argument	rv		114398	0					
ANR	116325	Identifier	rv		114398	0					
ANR	116326	GotoStatement	goto undfl ;	2448:5:49286:49296	114398	1	True				
ANR	116327	Identifier	undfl		114398	0					
ANR	116328	ExpressionStatement	aadj = 1.	2450:4:49309:49318	114398	1	True				
ANR	116329	AssignmentExpression	aadj = 1.		114398	0		=			
ANR	116330	Identifier	aadj		114398	0					
ANR	116331	PrimaryExpression	1.		114398	1					
ANR	116332	ExpressionStatement	aadj1 = - 1.	2451:4:49324:49335	114398	2	True				
ANR	116333	AssignmentExpression	aadj1 = - 1.		114398	0		=			
ANR	116334	Identifier	aadj1		114398	0					
ANR	116335	UnaryOperationExpression	- 1.		114398	1					
ANR	116336	UnaryOperator	-		114398	0					
ANR	116337	PrimaryExpression	1.		114398	1					
ANR	116338	ElseStatement	else		114398	0					
ANR	116339	CompoundStatement		414:8:7869:7869	114398	0					
ANR	116340	IfStatement	if ( aadj < 2. / FLT_RADIX )		114398	0					
ANR	116341	Condition	aadj < 2. / FLT_RADIX	2457:8:49438:49456	114398	0	True				
ANR	116342	RelationalExpression	aadj < 2. / FLT_RADIX		114398	0		<			
ANR	116343	Identifier	aadj		114398	0					
ANR	116344	MultiplicativeExpression	2. / FLT_RADIX		114398	1		/			
ANR	116345	PrimaryExpression	2.		114398	0					
ANR	116346	Identifier	FLT_RADIX		114398	1					
ANR	116347	ExpressionStatement	aadj = 1. / FLT_RADIX	2458:5:49464:49483	114398	1	True				
ANR	116348	AssignmentExpression	aadj = 1. / FLT_RADIX		114398	0		=			
ANR	116349	Identifier	aadj		114398	0					
ANR	116350	MultiplicativeExpression	1. / FLT_RADIX		114398	1		/			
ANR	116351	PrimaryExpression	1.		114398	0					
ANR	116352	Identifier	FLT_RADIX		114398	1					
ANR	116353	ElseStatement	else		114398	0					
ANR	116354	ExpressionStatement	aadj *= 0.5	2460:5:49499:49510	114398	0	True				
ANR	116355	AssignmentExpression	aadj *= 0.5		114398	0		*=			
ANR	116356	Identifier	aadj		114398	0					
ANR	116357	PrimaryExpression	0.5		114398	1					
ANR	116358	ExpressionStatement	aadj1 = - aadj	2461:4:49516:49529	114398	1	True				
ANR	116359	AssignmentExpression	aadj1 = - aadj		114398	0		=			
ANR	116360	Identifier	aadj1		114398	0					
ANR	116361	UnaryOperationExpression	- aadj		114398	1					
ANR	116362	UnaryOperator	-		114398	0					
ANR	116363	Identifier	aadj		114398	1					
ANR	116364	ElseStatement	else		114398	0					
ANR	116365	CompoundStatement		425:7:8066:8066	114398	0					
ANR	116366	ExpressionStatement	aadj *= 0.5	2465:3:49552:49563	114398	0	True				
ANR	116367	AssignmentExpression	aadj *= 0.5		114398	0		*=			
ANR	116368	Identifier	aadj		114398	0					
ANR	116369	PrimaryExpression	0.5		114398	1					
ANR	116370	ExpressionStatement	aadj1 = dsign ? aadj : - aadj	2466:3:49568:49596	114398	1	True				
ANR	116371	AssignmentExpression	aadj1 = dsign ? aadj : - aadj		114398	0		=			
ANR	116372	Identifier	aadj1		114398	0					
ANR	116373	ConditionalExpression	dsign ? aadj : - aadj		114398	1					
ANR	116374	Condition	dsign		114398	0					
ANR	116375	Identifier	dsign		114398	0					
ANR	116376	Identifier	aadj		114398	1					
ANR	116377	UnaryOperationExpression	- aadj		114398	2					
ANR	116378	UnaryOperator	-		114398	0					
ANR	116379	Identifier	aadj		114398	1					
ANR	116380	SwitchStatement	switch ( FLT_ROUNDS )		114398	2					
ANR	116381	Condition	FLT_ROUNDS	2468:10:49632:49641	114398	0	True				
ANR	116382	Identifier	FLT_ROUNDS		114398	0					
ANR	116383	CompoundStatement		429:22:8163:8163	114398	1					
ANR	116384	Label	case 2 :	2469:4:49650:49656	114398	0	True				
ANR	116385	ExpressionStatement	aadj1 -= 0.5	2470:5:49687:49699	114398	1	True				
ANR	116386	AssignmentExpression	aadj1 -= 0.5		114398	0		-=			
ANR	116387	Identifier	aadj1		114398	0					
ANR	116388	PrimaryExpression	0.5		114398	1					
ANR	116389	BreakStatement	break ;	2471:5:49706:49711	114398	2	True				
ANR	116390	Label	case 0 :	2472:4:49717:49723	114398	3	True				
ANR	116391	Label	case 3 :	2473:4:49745:49751	114398	4	True				
ANR	116392	ExpressionStatement	aadj1 += 0.5	2474:5:49782:49794	114398	5	True				
ANR	116393	AssignmentExpression	aadj1 += 0.5		114398	0		+=			
ANR	116394	Identifier	aadj1		114398	0					
ANR	116395	PrimaryExpression	0.5		114398	1					
ANR	116396	ExpressionStatement	y = word0 ( rv ) & Exp_mask	2481:2:49862:49886	114398	25	True				
ANR	116397	AssignmentExpression	y = word0 ( rv ) & Exp_mask		114398	0		=			
ANR	116398	Identifier	y		114398	0					
ANR	116399	BitAndExpression	word0 ( rv ) & Exp_mask		114398	1		&			
ANR	116400	CallExpression	word0 ( rv )		114398	0					
ANR	116401	Callee	word0		114398	0					
ANR	116402	Identifier	word0		114398	0					
ANR	116403	ArgumentList	rv		114398	1					
ANR	116404	Argument	rv		114398	0					
ANR	116405	Identifier	rv		114398	0					
ANR	116406	Identifier	Exp_mask		114398	1					
ANR	116407	IfStatement	if ( y == Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 ) )		114398	26					
ANR	116408	Condition	y == Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 )	2485:6:49923:49956	114398	0	True				
ANR	116409	EqualityExpression	y == Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 )		114398	0		==			
ANR	116410	Identifier	y		114398	0					
ANR	116411	MultiplicativeExpression	Exp_msk1 * ( DBL_MAX_EXP + Bias - 1 )		114398	1		*			
ANR	116412	Identifier	Exp_msk1		114398	0					
ANR	116413	AdditiveExpression	DBL_MAX_EXP + Bias - 1		114398	1		+			
ANR	116414	Identifier	DBL_MAX_EXP		114398	0					
ANR	116415	AdditiveExpression	Bias - 1		114398	1		-			
ANR	116416	Identifier	Bias		114398	0					
ANR	116417	PrimaryExpression	1		114398	1					
ANR	116418	CompoundStatement		446:42:8478:8478	114398	1					
ANR	116419	ExpressionStatement	value ( rv0 ) = value ( rv )	2486:3:49964:49986	114398	0	True				
ANR	116420	AssignmentExpression	value ( rv0 ) = value ( rv )		114398	0		=			
ANR	116421	CallExpression	value ( rv0 )		114398	0					
ANR	116422	Callee	value		114398	0					
ANR	116423	Identifier	value		114398	0					
ANR	116424	ArgumentList	rv0		114398	1					
ANR	116425	Argument	rv0		114398	0					
ANR	116426	Identifier	rv0		114398	0					
ANR	116427	CallExpression	value ( rv )		114398	1					
ANR	116428	Callee	value		114398	0					
ANR	116429	Identifier	value		114398	0					
ANR	116430	ArgumentList	rv		114398	1					
ANR	116431	Argument	rv		114398	0					
ANR	116432	Identifier	rv		114398	0					
ANR	116433	ExpressionStatement	word0 ( rv ) -= P * Exp_msk1	2487:3:49991:50014	114398	1	True				
ANR	116434	AssignmentExpression	word0 ( rv ) -= P * Exp_msk1		114398	0		-=			
ANR	116435	CallExpression	word0 ( rv )		114398	0					
ANR	116436	Callee	word0		114398	0					
ANR	116437	Identifier	word0		114398	0					
ANR	116438	ArgumentList	rv		114398	1					
ANR	116439	Argument	rv		114398	0					
ANR	116440	Identifier	rv		114398	0					
ANR	116441	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	116442	Identifier	P		114398	0					
ANR	116443	Identifier	Exp_msk1		114398	1					
ANR	116444	ExpressionStatement	adj = aadj1 * ulp ( value ( rv ) )	2488:3:50019:50047	114398	2	True				
ANR	116445	AssignmentExpression	adj = aadj1 * ulp ( value ( rv ) )		114398	0		=			
ANR	116446	Identifier	adj		114398	0					
ANR	116447	MultiplicativeExpression	aadj1 * ulp ( value ( rv ) )		114398	1		*			
ANR	116448	Identifier	aadj1		114398	0					
ANR	116449	CallExpression	ulp ( value ( rv ) )		114398	1					
ANR	116450	Callee	ulp		114398	0					
ANR	116451	Identifier	ulp		114398	0					
ANR	116452	ArgumentList	value ( rv )		114398	1					
ANR	116453	Argument	value ( rv )		114398	0					
ANR	116454	CallExpression	value ( rv )		114398	0					
ANR	116455	Callee	value		114398	0					
ANR	116456	Identifier	value		114398	0					
ANR	116457	ArgumentList	rv		114398	1					
ANR	116458	Argument	rv		114398	0					
ANR	116459	Identifier	rv		114398	0					
ANR	116460	ExpressionStatement	value ( rv ) += adj	2489:3:50052:50068	114398	3	True				
ANR	116461	AssignmentExpression	value ( rv ) += adj		114398	0		+=			
ANR	116462	CallExpression	value ( rv )		114398	0					
ANR	116463	Callee	value		114398	0					
ANR	116464	Identifier	value		114398	0					
ANR	116465	ArgumentList	rv		114398	1					
ANR	116466	Argument	rv		114398	0					
ANR	116467	Identifier	rv		114398	0					
ANR	116468	Identifier	adj		114398	1					
ANR	116469	IfStatement	if ( ( word0 ( rv ) & Exp_mask ) >= Exp_msk1 * ( DBL_MAX_EXP + Bias - P ) )		114398	4					
ANR	116470	Condition	( word0 ( rv ) & Exp_mask ) >= Exp_msk1 * ( DBL_MAX_EXP + Bias - P )	2490:7:50077:50136	114398	0	True				
ANR	116471	RelationalExpression	( word0 ( rv ) & Exp_mask ) >= Exp_msk1 * ( DBL_MAX_EXP + Bias - P )		114398	0		>=			
ANR	116472	BitAndExpression	word0 ( rv ) & Exp_mask		114398	0		&			
ANR	116473	CallExpression	word0 ( rv )		114398	0					
ANR	116474	Callee	word0		114398	0					
ANR	116475	Identifier	word0		114398	0					
ANR	116476	ArgumentList	rv		114398	1					
ANR	116477	Argument	rv		114398	0					
ANR	116478	Identifier	rv		114398	0					
ANR	116479	Identifier	Exp_mask		114398	1					
ANR	116480	MultiplicativeExpression	Exp_msk1 * ( DBL_MAX_EXP + Bias - P )		114398	1		*			
ANR	116481	Identifier	Exp_msk1		114398	0					
ANR	116482	AdditiveExpression	DBL_MAX_EXP + Bias - P		114398	1		+			
ANR	116483	Identifier	DBL_MAX_EXP		114398	0					
ANR	116484	AdditiveExpression	Bias - P		114398	1		-			
ANR	116485	Identifier	Bias		114398	0					
ANR	116486	Identifier	P		114398	1					
ANR	116487	CompoundStatement		452:36:8658:8658	114398	1					
ANR	116488	IfStatement	if ( word0 ( rv0 ) == Big0 && word1 ( rv0 ) == Big1 )		114398	0					
ANR	116489	Condition	word0 ( rv0 ) == Big0 && word1 ( rv0 ) == Big1	2492:8:50149:50188	114398	0	True				
ANR	116490	AndExpression	word0 ( rv0 ) == Big0 && word1 ( rv0 ) == Big1		114398	0		&&			
ANR	116491	EqualityExpression	word0 ( rv0 ) == Big0		114398	0		==			
ANR	116492	CallExpression	word0 ( rv0 )		114398	0					
ANR	116493	Callee	word0		114398	0					
ANR	116494	Identifier	word0		114398	0					
ANR	116495	ArgumentList	rv0		114398	1					
ANR	116496	Argument	rv0		114398	0					
ANR	116497	Identifier	rv0		114398	0					
ANR	116498	Identifier	Big0		114398	1					
ANR	116499	EqualityExpression	word1 ( rv0 ) == Big1		114398	1		==			
ANR	116500	CallExpression	word1 ( rv0 )		114398	0					
ANR	116501	Callee	word1		114398	0					
ANR	116502	Identifier	word1		114398	0					
ANR	116503	ArgumentList	rv0		114398	1					
ANR	116504	Argument	rv0		114398	0					
ANR	116505	Identifier	rv0		114398	0					
ANR	116506	Identifier	Big1		114398	1					
ANR	116507	GotoStatement	goto ovfl ;	2493:5:50196:50205	114398	1	True				
ANR	116508	Identifier	ovfl		114398	0					
ANR	116509	ExpressionStatement	word0 ( rv ) = Big0	2494:4:50211:50227	114398	1	True				
ANR	116510	AssignmentExpression	word0 ( rv ) = Big0		114398	0		=			
ANR	116511	CallExpression	word0 ( rv )		114398	0					
ANR	116512	Callee	word0		114398	0					
ANR	116513	Identifier	word0		114398	0					
ANR	116514	ArgumentList	rv		114398	1					
ANR	116515	Argument	rv		114398	0					
ANR	116516	Identifier	rv		114398	0					
ANR	116517	Identifier	Big0		114398	1					
ANR	116518	ExpressionStatement	word1 ( rv ) = Big1	2495:4:50233:50249	114398	2	True				
ANR	116519	AssignmentExpression	word1 ( rv ) = Big1		114398	0		=			
ANR	116520	CallExpression	word1 ( rv )		114398	0					
ANR	116521	Callee	word1		114398	0					
ANR	116522	Identifier	word1		114398	0					
ANR	116523	ArgumentList	rv		114398	1					
ANR	116524	Argument	rv		114398	0					
ANR	116525	Identifier	rv		114398	0					
ANR	116526	Identifier	Big1		114398	1					
ANR	116527	GotoStatement	goto cont ;	2496:4:50255:50264	114398	3	True				
ANR	116528	Identifier	cont		114398	0					
ANR	116529	ElseStatement	else		114398	0					
ANR	116530	ExpressionStatement	word0 ( rv ) += P * Exp_msk1	2499:4:50283:50306	114398	0	True				
ANR	116531	AssignmentExpression	word0 ( rv ) += P * Exp_msk1		114398	0		+=			
ANR	116532	CallExpression	word0 ( rv )		114398	0					
ANR	116533	Callee	word0		114398	0					
ANR	116534	Identifier	word0		114398	0					
ANR	116535	ArgumentList	rv		114398	1					
ANR	116536	Argument	rv		114398	0					
ANR	116537	Identifier	rv		114398	0					
ANR	116538	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	116539	Identifier	P		114398	0					
ANR	116540	Identifier	Exp_msk1		114398	1					
ANR	116541	ElseStatement	else		114398	0					
ANR	116542	CompoundStatement		462:7:8838:8838	114398	0					
ANR	116543	IfStatement	if ( ( word0 ( rv ) & Exp_mask ) <= P * Exp_msk1 )		114398	0					
ANR	116544	Condition	( word0 ( rv ) & Exp_mask ) <= P * Exp_msk1	2503:7:50352:50387	114398	0	True				
ANR	116545	RelationalExpression	( word0 ( rv ) & Exp_mask ) <= P * Exp_msk1		114398	0		<=			
ANR	116546	BitAndExpression	word0 ( rv ) & Exp_mask		114398	0		&			
ANR	116547	CallExpression	word0 ( rv )		114398	0					
ANR	116548	Callee	word0		114398	0					
ANR	116549	Identifier	word0		114398	0					
ANR	116550	ArgumentList	rv		114398	1					
ANR	116551	Argument	rv		114398	0					
ANR	116552	Identifier	rv		114398	0					
ANR	116553	Identifier	Exp_mask		114398	1					
ANR	116554	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	116555	Identifier	P		114398	0					
ANR	116556	Identifier	Exp_msk1		114398	1					
ANR	116557	CompoundStatement		464:45:8909:8909	114398	1					
ANR	116558	ExpressionStatement	value ( rv0 ) = value ( rv )	2504:4:50396:50418	114398	0	True				
ANR	116559	AssignmentExpression	value ( rv0 ) = value ( rv )		114398	0		=			
ANR	116560	CallExpression	value ( rv0 )		114398	0					
ANR	116561	Callee	value		114398	0					
ANR	116562	Identifier	value		114398	0					
ANR	116563	ArgumentList	rv0		114398	1					
ANR	116564	Argument	rv0		114398	0					
ANR	116565	Identifier	rv0		114398	0					
ANR	116566	CallExpression	value ( rv )		114398	1					
ANR	116567	Callee	value		114398	0					
ANR	116568	Identifier	value		114398	0					
ANR	116569	ArgumentList	rv		114398	1					
ANR	116570	Argument	rv		114398	0					
ANR	116571	Identifier	rv		114398	0					
ANR	116572	ExpressionStatement	word0 ( rv ) += P * Exp_msk1	2505:4:50424:50447	114398	1	True				
ANR	116573	AssignmentExpression	word0 ( rv ) += P * Exp_msk1		114398	0		+=			
ANR	116574	CallExpression	word0 ( rv )		114398	0					
ANR	116575	Callee	word0		114398	0					
ANR	116576	Identifier	word0		114398	0					
ANR	116577	ArgumentList	rv		114398	1					
ANR	116578	Argument	rv		114398	0					
ANR	116579	Identifier	rv		114398	0					
ANR	116580	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	116581	Identifier	P		114398	0					
ANR	116582	Identifier	Exp_msk1		114398	1					
ANR	116583	ExpressionStatement	adj = aadj1 * ulp ( value ( rv ) )	2506:4:50453:50481	114398	2	True				
ANR	116584	AssignmentExpression	adj = aadj1 * ulp ( value ( rv ) )		114398	0		=			
ANR	116585	Identifier	adj		114398	0					
ANR	116586	MultiplicativeExpression	aadj1 * ulp ( value ( rv ) )		114398	1		*			
ANR	116587	Identifier	aadj1		114398	0					
ANR	116588	CallExpression	ulp ( value ( rv ) )		114398	1					
ANR	116589	Callee	ulp		114398	0					
ANR	116590	Identifier	ulp		114398	0					
ANR	116591	ArgumentList	value ( rv )		114398	1					
ANR	116592	Argument	value ( rv )		114398	0					
ANR	116593	CallExpression	value ( rv )		114398	0					
ANR	116594	Callee	value		114398	0					
ANR	116595	Identifier	value		114398	0					
ANR	116596	ArgumentList	rv		114398	1					
ANR	116597	Argument	rv		114398	0					
ANR	116598	Identifier	rv		114398	0					
ANR	116599	ExpressionStatement	value ( rv ) += adj	2507:4:50487:50503	114398	3	True				
ANR	116600	AssignmentExpression	value ( rv ) += adj		114398	0		+=			
ANR	116601	CallExpression	value ( rv )		114398	0					
ANR	116602	Callee	value		114398	0					
ANR	116603	Identifier	value		114398	0					
ANR	116604	ArgumentList	rv		114398	1					
ANR	116605	Argument	rv		114398	0					
ANR	116606	Identifier	rv		114398	0					
ANR	116607	Identifier	adj		114398	1					
ANR	116608	IfStatement	if ( ( word0 ( rv ) & Exp_mask ) < P * Exp_msk1 )		114398	4					
ANR	116609	Condition	( word0 ( rv ) & Exp_mask ) < P * Exp_msk1	2509:8:50524:50559	114398	0	True				
ANR	116610	RelationalExpression	( word0 ( rv ) & Exp_mask ) < P * Exp_msk1		114398	0		<			
ANR	116611	BitAndExpression	word0 ( rv ) & Exp_mask		114398	0		&			
ANR	116612	CallExpression	word0 ( rv )		114398	0					
ANR	116613	Callee	word0		114398	0					
ANR	116614	Identifier	word0		114398	0					
ANR	116615	ArgumentList	rv		114398	1					
ANR	116616	Argument	rv		114398	0					
ANR	116617	Identifier	rv		114398	0					
ANR	116618	Identifier	Exp_mask		114398	1					
ANR	116619	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	116620	Identifier	P		114398	0					
ANR	116621	Identifier	Exp_msk1		114398	1					
ANR	116622	CompoundStatement		474:5:9146:9146	114398	1					
ANR	116623	IfStatement	if ( word0 ( rv0 ) == Tiny0 && word1 ( rv0 ) == Tiny1 )		114398	0					
ANR	116624	Condition	word0 ( rv0 ) == Tiny0 && word1 ( rv0 ) == Tiny1	2514:10:50639:50688	114398	0	True				
ANR	116625	AndExpression	word0 ( rv0 ) == Tiny0 && word1 ( rv0 ) == Tiny1		114398	0		&&			
ANR	116626	EqualityExpression	word0 ( rv0 ) == Tiny0		114398	0		==			
ANR	116627	CallExpression	word0 ( rv0 )		114398	0					
ANR	116628	Callee	word0		114398	0					
ANR	116629	Identifier	word0		114398	0					
ANR	116630	ArgumentList	rv0		114398	1					
ANR	116631	Argument	rv0		114398	0					
ANR	116632	Identifier	rv0		114398	0					
ANR	116633	Identifier	Tiny0		114398	1					
ANR	116634	EqualityExpression	word1 ( rv0 ) == Tiny1		114398	1		==			
ANR	116635	CallExpression	word1 ( rv0 )		114398	0					
ANR	116636	Callee	word1		114398	0					
ANR	116637	Identifier	word1		114398	0					
ANR	116638	ArgumentList	rv0		114398	1					
ANR	116639	Argument	rv0		114398	0					
ANR	116640	Identifier	rv0		114398	0					
ANR	116641	Identifier	Tiny1		114398	1					
ANR	116642	GotoStatement	goto undfl ;	2516:7:50698:50708	114398	1	True				
ANR	116643	Identifier	undfl		114398	0					
ANR	116644	ExpressionStatement	word0 ( rv ) = Tiny0	2517:6:50716:50733	114398	1	True				
ANR	116645	AssignmentExpression	word0 ( rv ) = Tiny0		114398	0		=			
ANR	116646	CallExpression	word0 ( rv )		114398	0					
ANR	116647	Callee	word0		114398	0					
ANR	116648	Identifier	word0		114398	0					
ANR	116649	ArgumentList	rv		114398	1					
ANR	116650	Argument	rv		114398	0					
ANR	116651	Identifier	rv		114398	0					
ANR	116652	Identifier	Tiny0		114398	1					
ANR	116653	ExpressionStatement	word1 ( rv ) = Tiny1	2518:6:50741:50758	114398	2	True				
ANR	116654	AssignmentExpression	word1 ( rv ) = Tiny1		114398	0		=			
ANR	116655	CallExpression	word1 ( rv )		114398	0					
ANR	116656	Callee	word1		114398	0					
ANR	116657	Identifier	word1		114398	0					
ANR	116658	ArgumentList	rv		114398	1					
ANR	116659	Argument	rv		114398	0					
ANR	116660	Identifier	rv		114398	0					
ANR	116661	Identifier	Tiny1		114398	1					
ANR	116662	GotoStatement	goto cont ;	2519:6:50766:50775	114398	3	True				
ANR	116663	Identifier	cont		114398	0					
ANR	116664	ElseStatement	else		114398	0					
ANR	116665	ExpressionStatement	word0 ( rv ) -= P * Exp_msk1	2522:6:50800:50823	114398	0	True				
ANR	116666	AssignmentExpression	word0 ( rv ) -= P * Exp_msk1		114398	0		-=			
ANR	116667	CallExpression	word0 ( rv )		114398	0					
ANR	116668	Callee	word0		114398	0					
ANR	116669	Identifier	word0		114398	0					
ANR	116670	ArgumentList	rv		114398	1					
ANR	116671	Argument	rv		114398	0					
ANR	116672	Identifier	rv		114398	0					
ANR	116673	MultiplicativeExpression	P * Exp_msk1		114398	1		*			
ANR	116674	Identifier	P		114398	0					
ANR	116675	Identifier	Exp_msk1		114398	1					
ANR	116676	ElseStatement	else		114398	0					
ANR	116677	CompoundStatement		485:8:9357:9357	114398	0					
ANR	116678	ExpressionStatement	adj = aadj1 * ulp ( value ( rv ) )	2525:4:50844:50872	114398	0	True				
ANR	116679	AssignmentExpression	adj = aadj1 * ulp ( value ( rv ) )		114398	0		=			
ANR	116680	Identifier	adj		114398	0					
ANR	116681	MultiplicativeExpression	aadj1 * ulp ( value ( rv ) )		114398	1		*			
ANR	116682	Identifier	aadj1		114398	0					
ANR	116683	CallExpression	ulp ( value ( rv ) )		114398	1					
ANR	116684	Callee	ulp		114398	0					
ANR	116685	Identifier	ulp		114398	0					
ANR	116686	ArgumentList	value ( rv )		114398	1					
ANR	116687	Argument	value ( rv )		114398	0					
ANR	116688	CallExpression	value ( rv )		114398	0					
ANR	116689	Callee	value		114398	0					
ANR	116690	Identifier	value		114398	0					
ANR	116691	ArgumentList	rv		114398	1					
ANR	116692	Argument	rv		114398	0					
ANR	116693	Identifier	rv		114398	0					
ANR	116694	ExpressionStatement	value ( rv ) += adj	2526:4:50878:50894	114398	1	True				
ANR	116695	AssignmentExpression	value ( rv ) += adj		114398	0		+=			
ANR	116696	CallExpression	value ( rv )		114398	0					
ANR	116697	Callee	value		114398	0					
ANR	116698	Identifier	value		114398	0					
ANR	116699	ArgumentList	rv		114398	1					
ANR	116700	Argument	rv		114398	0					
ANR	116701	Identifier	rv		114398	0					
ANR	116702	Identifier	adj		114398	1					
ANR	116703	ExpressionStatement	z = word0 ( rv ) & Exp_mask	2545:2:51393:51417	114398	27	True				
ANR	116704	AssignmentExpression	z = word0 ( rv ) & Exp_mask		114398	0		=			
ANR	116705	Identifier	z		114398	0					
ANR	116706	BitAndExpression	word0 ( rv ) & Exp_mask		114398	1		&			
ANR	116707	CallExpression	word0 ( rv )		114398	0					
ANR	116708	Callee	word0		114398	0					
ANR	116709	Identifier	word0		114398	0					
ANR	116710	ArgumentList	rv		114398	1					
ANR	116711	Argument	rv		114398	0					
ANR	116712	Identifier	rv		114398	0					
ANR	116713	Identifier	Exp_mask		114398	1					
ANR	116714	IfStatement	if ( y == z )		114398	28					
ANR	116715	Condition	y == z	2546:6:51425:51430	114398	0	True				
ANR	116716	EqualityExpression	y == z		114398	0		==			
ANR	116717	Identifier	y		114398	0					
ANR	116718	Identifier	z		114398	1					
ANR	116719	CompoundStatement		507:14:9952:9952	114398	1					
ANR	116720	ExpressionStatement	L = aadj	2548:3:51464:51472	114398	0	True				
ANR	116721	AssignmentExpression	L = aadj		114398	0		=			
ANR	116722	Identifier	L		114398	0					
ANR	116723	Identifier	aadj		114398	1					
ANR	116724	ExpressionStatement	aadj -= L	2549:3:51477:51486	114398	1	True				
ANR	116725	AssignmentExpression	aadj -= L		114398	0		-=			
ANR	116726	Identifier	aadj		114398	0					
ANR	116727	Identifier	L		114398	1					
ANR	116728	IfStatement	if ( dsign || word1 ( rv ) || word0 ( rv ) & Bndry_mask )		114398	2					
ANR	116729	Condition	dsign || word1 ( rv ) || word0 ( rv ) & Bndry_mask	2551:7:51543:51586	114398	0	True				
ANR	116730	OrExpression	dsign || word1 ( rv ) || word0 ( rv ) & Bndry_mask		114398	0		||			
ANR	116731	Identifier	dsign		114398	0					
ANR	116732	OrExpression	word1 ( rv ) || word0 ( rv ) & Bndry_mask		114398	1		||			
ANR	116733	CallExpression	word1 ( rv )		114398	0					
ANR	116734	Callee	word1		114398	0					
ANR	116735	Identifier	word1		114398	0					
ANR	116736	ArgumentList	rv		114398	1					
ANR	116737	Argument	rv		114398	0					
ANR	116738	Identifier	rv		114398	0					
ANR	116739	BitAndExpression	word0 ( rv ) & Bndry_mask		114398	1		&			
ANR	116740	CallExpression	word0 ( rv )		114398	0					
ANR	116741	Callee	word0		114398	0					
ANR	116742	Identifier	word0		114398	0					
ANR	116743	ArgumentList	rv		114398	1					
ANR	116744	Argument	rv		114398	0					
ANR	116745	Identifier	rv		114398	0					
ANR	116746	Identifier	Bndry_mask		114398	1					
ANR	116747	CompoundStatement		512:53:10108:10108	114398	1					
ANR	116748	IfStatement	if ( aadj < .4999999 || aadj > .5000001 )		114398	0					
ANR	116749	Condition	aadj < .4999999 || aadj > .5000001	2552:8:51599:51632	114398	0	True				
ANR	116750	OrExpression	aadj < .4999999 || aadj > .5000001		114398	0		||			
ANR	116751	RelationalExpression	aadj < .4999999		114398	0		<			
ANR	116752	Identifier	aadj		114398	0					
ANR	116753	PrimaryExpression	.4999999		114398	1					
ANR	116754	RelationalExpression	aadj > .5000001		114398	1		>			
ANR	116755	Identifier	aadj		114398	0					
ANR	116756	PrimaryExpression	.5000001		114398	1					
ANR	116757	BreakStatement	break ;	2553:5:51640:51645	114398	1	True				
ANR	116758	ElseStatement	else		114398	0					
ANR	116759	IfStatement	if ( aadj < .4999999 / FLT_RADIX )		114398	0					
ANR	116760	Condition	aadj < .4999999 / FLT_RADIX	2555:12:51664:51688	114398	0	True				
ANR	116761	RelationalExpression	aadj < .4999999 / FLT_RADIX		114398	0		<			
ANR	116762	Identifier	aadj		114398	0					
ANR	116763	MultiplicativeExpression	.4999999 / FLT_RADIX		114398	1		/			
ANR	116764	PrimaryExpression	.4999999		114398	0					
ANR	116765	Identifier	FLT_RADIX		114398	1					
ANR	116766	BreakStatement	break ;	2556:4:51695:51700	114398	1	True				
ANR	116767	Label	cont :	2558:0:51706:51710	114398	29	True				
ANR	116768	Identifier	cont		114398	0					
ANR	116769	ExpressionStatement	Bfree ( bb )	2559:2:51714:51723	114398	30	True				
ANR	116770	CallExpression	Bfree ( bb )		114398	0					
ANR	116771	Callee	Bfree		114398	0					
ANR	116772	Identifier	Bfree		114398	0					
ANR	116773	ArgumentList	bb		114398	1					
ANR	116774	Argument	bb		114398	0					
ANR	116775	Identifier	bb		114398	0					
ANR	116776	ExpressionStatement	Bfree ( bd )	2560:2:51727:51736	114398	31	True				
ANR	116777	CallExpression	Bfree ( bd )		114398	0					
ANR	116778	Callee	Bfree		114398	0					
ANR	116779	Identifier	Bfree		114398	0					
ANR	116780	ArgumentList	bd		114398	1					
ANR	116781	Argument	bd		114398	0					
ANR	116782	Identifier	bd		114398	0					
ANR	116783	ExpressionStatement	Bfree ( bs )	2561:2:51740:51749	114398	32	True				
ANR	116784	CallExpression	Bfree ( bs )		114398	0					
ANR	116785	Callee	Bfree		114398	0					
ANR	116786	Identifier	Bfree		114398	0					
ANR	116787	ArgumentList	bs		114398	1					
ANR	116788	Argument	bs		114398	0					
ANR	116789	Identifier	bs		114398	0					
ANR	116790	ExpressionStatement	Bfree ( delta )	2562:2:51753:51765	114398	33	True				
ANR	116791	CallExpression	Bfree ( delta )		114398	0					
ANR	116792	Callee	Bfree		114398	0					
ANR	116793	Identifier	Bfree		114398	0					
ANR	116794	ArgumentList	delta		114398	1					
ANR	116795	Argument	delta		114398	0					
ANR	116796	Identifier	delta		114398	0					
ANR	116797	Label	retfree :	2564:0:51770:51777	114398	45	True				
ANR	116798	Identifier	retfree		114398	0					
ANR	116799	ExpressionStatement	Bfree ( bb )	2565:1:51780:51789	114398	46	True				
ANR	116800	CallExpression	Bfree ( bb )		114398	0					
ANR	116801	Callee	Bfree		114398	0					
ANR	116802	Identifier	Bfree		114398	0					
ANR	116803	ArgumentList	bb		114398	1					
ANR	116804	Argument	bb		114398	0					
ANR	116805	Identifier	bb		114398	0					
ANR	116806	ExpressionStatement	Bfree ( bd )	2566:1:51792:51801	114398	47	True				
ANR	116807	CallExpression	Bfree ( bd )		114398	0					
ANR	116808	Callee	Bfree		114398	0					
ANR	116809	Identifier	Bfree		114398	0					
ANR	116810	ArgumentList	bd		114398	1					
ANR	116811	Argument	bd		114398	0					
ANR	116812	Identifier	bd		114398	0					
ANR	116813	ExpressionStatement	Bfree ( bs )	2567:1:51804:51813	114398	48	True				
ANR	116814	CallExpression	Bfree ( bs )		114398	0					
ANR	116815	Callee	Bfree		114398	0					
ANR	116816	Identifier	Bfree		114398	0					
ANR	116817	ArgumentList	bs		114398	1					
ANR	116818	Argument	bs		114398	0					
ANR	116819	Identifier	bs		114398	0					
ANR	116820	ExpressionStatement	Bfree ( bd0 )	2568:1:51816:51826	114398	49	True				
ANR	116821	CallExpression	Bfree ( bd0 )		114398	0					
ANR	116822	Callee	Bfree		114398	0					
ANR	116823	Identifier	Bfree		114398	0					
ANR	116824	ArgumentList	bd0		114398	1					
ANR	116825	Argument	bd0		114398	0					
ANR	116826	Identifier	bd0		114398	0					
ANR	116827	ExpressionStatement	Bfree ( delta )	2569:1:51829:51841	114398	50	True				
ANR	116828	CallExpression	Bfree ( delta )		114398	0					
ANR	116829	Callee	Bfree		114398	0					
ANR	116830	Identifier	Bfree		114398	0					
ANR	116831	ArgumentList	delta		114398	1					
ANR	116832	Argument	delta		114398	0					
ANR	116833	Identifier	delta		114398	0					
ANR	116834	Label	ret :	2570:0:51843:51846	114398	51	True				
ANR	116835	Identifier	ret		114398	0					
ANR	116836	IfStatement	if ( se )		114398	52					
ANR	116837	Condition	se	2571:5:51853:51854	114398	0	True				
ANR	116838	Identifier	se		114398	0					
ANR	116839	ExpressionStatement	* se = s	2572:2:51859:51866	114398	1	True				
ANR	116840	AssignmentExpression	* se = s		114398	0		=			
ANR	116841	UnaryOperationExpression	* se		114398	0					
ANR	116842	UnaryOperator	*		114398	0					
ANR	116843	Identifier	se		114398	1					
ANR	116844	Identifier	s		114398	1					
ANR	116845	ExpressionStatement	result = sign ? - value ( rv ) : value ( rv )	2573:1:51869:51907	114398	53	True				
ANR	116846	AssignmentExpression	result = sign ? - value ( rv ) : value ( rv )		114398	0		=			
ANR	116847	Identifier	result		114398	0					
ANR	116848	ConditionalExpression	sign ? - value ( rv ) : value ( rv )		114398	1					
ANR	116849	Condition	sign		114398	0					
ANR	116850	Identifier	sign		114398	0					
ANR	116851	UnaryOperationExpression	- value ( rv )		114398	1					
ANR	116852	UnaryOperator	-		114398	0					
ANR	116853	CallExpression	value ( rv )		114398	1					
ANR	116854	Callee	value		114398	0					
ANR	116855	Identifier	value		114398	0					
ANR	116856	ArgumentList	rv		114398	1					
ANR	116857	Argument	rv		114398	0					
ANR	116858	Identifier	rv		114398	0					
ANR	116859	CallExpression	value ( rv )		114398	2					
ANR	116860	Callee	value		114398	0					
ANR	116861	Identifier	value		114398	0					
ANR	116862	ArgumentList	rv		114398	1					
ANR	116863	Argument	rv		114398	0					
ANR	116864	Identifier	rv		114398	0					
ANR	116865	ExpressionStatement	_THREAD_PRIVATE_MUTEX_LOCK ( pow5mult_mutex )	2575:1:51911:51953	114398	54	True				
ANR	116866	CallExpression	_THREAD_PRIVATE_MUTEX_LOCK ( pow5mult_mutex )		114398	0					
ANR	116867	Callee	_THREAD_PRIVATE_MUTEX_LOCK		114398	0					
ANR	116868	Identifier	_THREAD_PRIVATE_MUTEX_LOCK		114398	0					
ANR	116869	ArgumentList	pow5mult_mutex		114398	1					
ANR	116870	Argument	pow5mult_mutex		114398	0					
ANR	116871	Identifier	pow5mult_mutex		114398	0					
ANR	116872	WhileStatement	while ( p5s )		114398	55					
ANR	116873	Condition	p5s	2576:8:51963:51965	114398	0	True				
ANR	116874	Identifier	p5s		114398	0					
ANR	116875	CompoundStatement		537:13:10487:10487	114398	1					
ANR	116876	ExpressionStatement	tmp = p5s	2577:2:51972:51981	114398	0	True				
ANR	116877	AssignmentExpression	tmp = p5s		114398	0		=			
ANR	116878	Identifier	tmp		114398	0					
ANR	116879	Identifier	p5s		114398	1					
ANR	116880	ExpressionStatement	p5s = p5s -> next	2578:2:51985:52000	114398	1	True				
ANR	116881	AssignmentExpression	p5s = p5s -> next		114398	0		=			
ANR	116882	Identifier	p5s		114398	0					
ANR	116883	PtrMemberAccess	p5s -> next		114398	1					
ANR	116884	Identifier	p5s		114398	0					
ANR	116885	Identifier	next		114398	1					
ANR	116886	ExpressionStatement	free ( tmp )	2579:2:52004:52013	114398	2	True				
ANR	116887	CallExpression	free ( tmp )		114398	0					
ANR	116888	Callee	free		114398	0					
ANR	116889	Identifier	free		114398	0					
ANR	116890	ArgumentList	tmp		114398	1					
ANR	116891	Argument	tmp		114398	0					
ANR	116892	Identifier	tmp		114398	0					
ANR	116893	ExpressionStatement	_THREAD_PRIVATE_MUTEX_UNLOCK ( pow5mult_mutex )	2581:1:52019:52063	114398	56	True				
ANR	116894	CallExpression	_THREAD_PRIVATE_MUTEX_UNLOCK ( pow5mult_mutex )		114398	0					
ANR	116895	Callee	_THREAD_PRIVATE_MUTEX_UNLOCK		114398	0					
ANR	116896	Identifier	_THREAD_PRIVATE_MUTEX_UNLOCK		114398	0					
ANR	116897	ArgumentList	pow5mult_mutex		114398	1					
ANR	116898	Argument	pow5mult_mutex		114398	0					
ANR	116899	Identifier	pow5mult_mutex		114398	0					
ANR	116900	ReturnStatement	return result ;	2583:1:52067:52080	114398	57	True				
ANR	116901	Identifier	result		114398	0					
ANR	116902	ReturnType	ZEND_API double		114398	1					
ANR	116903	Identifier	zend_strtod		114398	2					
ANR	116904	ParameterList	"CONST char * s00 , CONST char * * se"		114398	3					
ANR	116905	Parameter	CONST char * s00	2039:29:41446:41460	114398	0	True				
ANR	116906	ParameterType	CONST char *		114398	0					
ANR	116907	Identifier	s00		114398	1					
ANR	116908	Parameter	CONST char * * se	2039:46:41463:41477	114398	1	True				
ANR	116909	ParameterType	CONST char * *		114398	0					
ANR	116910	Identifier	se		114398	1					
ANR	116911	CFGEntryNode	ENTRY		114398		True				
ANR	116912	CFGExitNode	EXIT		114398		True				
ANR	116913	InfiniteForNode	true		114398		True				
ANR	116914	Symbol	bs2		114398						
ANR	116915	Symbol	mult		114398						
ANR	116916	Symbol	delta		114398						
ANR	116917	Symbol	pow5mult		114398						
ANR	116918	Symbol	& bbe		114398						
ANR	116919	Symbol	n_bigtens		114398						
ANR	116920	Symbol	DBL_DIG		114398						
ANR	116921	Symbol	tmp		114398						
ANR	116922	Symbol	Balloc		114398						
ANR	116923	Symbol	* se		114398						
ANR	116924	Symbol	s0		114398						
ANR	116925	Symbol	s1		114398						
ANR	116926	Symbol	errno		114398						
ANR	116927	Symbol	s2b		114398						
ANR	116928	Symbol	~15		114398						
ANR	116929	Symbol	bbe		114398						
ANR	116930	Symbol	isspace		114398						
ANR	116931	Symbol	Ten_pmax		114398						
ANR	116932	Symbol	diff		114398						
ANR	116933	Symbol	bd0		114398						
ANR	116934	Symbol	bd2		114398						
ANR	116935	Symbol	bd5		114398						
ANR	116936	Symbol	* p5s		114398						
ANR	116937	Symbol	nd0		114398						
ANR	116938	Symbol	delta -> sign		114398						
ANR	116939	Symbol	bb		114398						
ANR	116940	Symbol	bd		114398						
ANR	116941	Symbol	rv		114398						
ANR	116942	Symbol	lshift		114398						
ANR	116943	Symbol	cmp		114398						
ANR	116944	Symbol	L		114398						
ANR	116945	Symbol	Big1		114398						
ANR	116946	Symbol	Big0		114398						
ANR	116947	Symbol	p5s		114398						
ANR	116948	Symbol	result		114398						
ANR	116949	Symbol	P		114398						
ANR	116950	Symbol	bs		114398						
ANR	116951	Symbol	p5s -> next		114398						
ANR	116952	Symbol	se		114398						
ANR	116953	Symbol	* delta		114398						
ANR	116954	Symbol	c		114398						
ANR	116955	Symbol	e		114398						
ANR	116956	Symbol	esign		114398						
ANR	116957	Symbol	Exp_msk1		114398						
ANR	116958	Symbol	* bd0		114398						
ANR	116959	Symbol	i		114398						
ANR	116960	Symbol	j		114398						
ANR	116961	Symbol	FLT_RADIX		114398						
ANR	116962	Symbol	k		114398						
ANR	116963	Symbol	* ++ s		114398						
ANR	116964	Symbol	e1		114398						
ANR	116965	Symbol	rv0		114398						
ANR	116966	Symbol	DBL_MAX_EXP		114398						
ANR	116967	Symbol	s		114398						
ANR	116968	Symbol	y		114398						
ANR	116969	Symbol	z		114398						
ANR	116970	Symbol	ratio		114398						
ANR	116971	Symbol	DBL_MAX_10_EXP		114398						
ANR	116972	Symbol	& bbbits		114398						
ANR	116973	Symbol	bbbits		114398						
ANR	116974	Symbol	sign		114398						
ANR	116975	Symbol	* tens		114398						
ANR	116976	Symbol	* tinytens		114398						
ANR	116977	Symbol	HUGE_VAL		114398						
ANR	116978	Symbol	aadj		114398						
ANR	116979	Symbol	bd0 -> k		114398						
ANR	116980	Symbol	* bigtens		114398						
ANR	116981	Symbol	FLT_ROUNDS		114398						
ANR	116982	Symbol	dsign		114398						
ANR	116983	Symbol	ERANGE		114398						
ANR	116984	Symbol	i2b		114398						
ANR	116985	Symbol	LSB		114398						
ANR	116986	Symbol	adj		114398						
ANR	116987	Symbol	word1		114398						
ANR	116988	Symbol	word0		114398						
ANR	116989	Symbol	s00		114398						
ANR	116990	Symbol	nd		114398						
ANR	116991	Symbol	nf		114398						
ANR	116992	Symbol	ulp		114398						
ANR	116993	Symbol	pow5mult_mutex		114398						
ANR	116994	Symbol	tens		114398						
ANR	116995	Symbol	Tiny1		114398						
ANR	116996	Symbol	Tiny0		114398						
ANR	116997	Symbol	decimal_point		114398						
ANR	116998	Symbol	Bias		114398						
ANR	116999	Symbol	Exp_mask		114398						
ANR	117000	Symbol	bigtens		114398						
ANR	117001	Symbol	nz		114398						
ANR	117002	Symbol	aadj1		114398						
ANR	117003	Symbol	d2b		114398						
ANR	117004	Symbol	Bndry_mask		114398						
ANR	117005	Symbol	value		114398						
ANR	117006	Symbol	Log2P		114398						
ANR	117007	Symbol	nz0		114398						
ANR	117008	Symbol	Bndry_mask1		114398						
ANR	117009	Symbol	* e		114398						
ANR	117010	Symbol	bb1		114398						
ANR	117011	Symbol	bb2		114398						
ANR	117012	Symbol	* i		114398						
ANR	117013	Symbol	bb5		114398						
ANR	117014	Symbol	* j		114398						
ANR	117015	Symbol	* k		114398						
ANR	117016	Symbol	* s		114398						
ANR	117017	Symbol	tinytens		114398						
ANR	117018	Function	zend_hex_strtod	2586:0:52085:52673							
ANR	117019	FunctionDef	"zend_hex_strtod (const char * str , const char * * endptr)"		117018	0					
ANR	117020	CompoundStatement		2587:0:52155:52673	117018	0					
ANR	117021	IdentifierDeclStatement	const char * s = str ;	2588:1:52158:52177	117018	0	True				
ANR	117022	IdentifierDecl	* s = str		117018	0					
ANR	117023	IdentifierDeclType	const char *		117018	0					
ANR	117024	Identifier	s		117018	1					
ANR	117025	AssignmentExpression	* s = str		117018	2		=			
ANR	117026	Identifier	str		117018	0					
ANR	117027	Identifier	str		117018	1					
ANR	117028	IdentifierDeclStatement	char c ;	2589:1:52180:52186	117018	1	True				
ANR	117029	IdentifierDecl	c		117018	0					
ANR	117030	IdentifierDeclType	char		117018	0					
ANR	117031	Identifier	c		117018	1					
ANR	117032	IdentifierDeclStatement	int any = 0 ;	2590:1:52189:52200	117018	2	True				
ANR	117033	IdentifierDecl	any = 0		117018	0					
ANR	117034	IdentifierDeclType	int		117018	0					
ANR	117035	Identifier	any		117018	1					
ANR	117036	AssignmentExpression	any = 0		117018	2		=			
ANR	117037	Identifier	any		117018	0					
ANR	117038	PrimaryExpression	0		117018	1					
ANR	117039	IdentifierDeclStatement	double value = 0 ;	2591:1:52203:52219	117018	3	True				
ANR	117040	IdentifierDecl	value = 0		117018	0					
ANR	117041	IdentifierDeclType	double		117018	0					
ANR	117042	Identifier	value		117018	1					
ANR	117043	AssignmentExpression	value = 0		117018	2		=			
ANR	117044	Identifier	value		117018	0					
ANR	117045	PrimaryExpression	0		117018	1					
ANR	117046	IfStatement	if ( s [ 0 ] == '\\0' || s [ 1 ] == '\\0' )		117018	4					
ANR	117047	Condition	s [ 0 ] == '\\0' || s [ 1 ] == '\\0'	2593:5:52227:52254	117018	0	True				
ANR	117048	OrExpression	s [ 0 ] == '\\0' || s [ 1 ] == '\\0'		117018	0		||			
ANR	117049	EqualityExpression	s [ 0 ] == '\\0'		117018	0		==			
ANR	117050	ArrayIndexing	s [ 0 ]		117018	0					
ANR	117051	Identifier	s		117018	0					
ANR	117052	PrimaryExpression	0		117018	1					
ANR	117053	PrimaryExpression	'\\0'		117018	1					
ANR	117054	EqualityExpression	s [ 1 ] == '\\0'		117018	1		==			
ANR	117055	ArrayIndexing	s [ 1 ]		117018	0					
ANR	117056	Identifier	s		117018	0					
ANR	117057	PrimaryExpression	1		117018	1					
ANR	117058	PrimaryExpression	'\\0'		117018	1					
ANR	117059	CompoundStatement		7:35:101:101	117018	1					
ANR	117060	ExpressionStatement	* endptr = str	2594:2:52261:52274	117018	0	True				
ANR	117061	AssignmentExpression	* endptr = str		117018	0		=			
ANR	117062	UnaryOperationExpression	* endptr		117018	0					
ANR	117063	UnaryOperator	*		117018	0					
ANR	117064	Identifier	endptr		117018	1					
ANR	117065	Identifier	str		117018	1					
ANR	117066	ReturnStatement	return 0.0 ;	2595:2:52278:52288	117018	1	True				
ANR	117067	PrimaryExpression	0.0		117018	0					
ANR	117068	IfStatement	if ( * s == '0' && ( s [ 1 ] == 'x' || s [ 1 ] == 'X' ) )		117018	5					
ANR	117069	Condition	* s == '0' && ( s [ 1 ] == 'x' || s [ 1 ] == 'X' )	2598:5:52299:52339	117018	0	True				
ANR	117070	AndExpression	* s == '0' && ( s [ 1 ] == 'x' || s [ 1 ] == 'X' )		117018	0		&&			
ANR	117071	EqualityExpression	* s == '0'		117018	0		==			
ANR	117072	UnaryOperationExpression	* s		117018	0					
ANR	117073	UnaryOperator	*		117018	0					
ANR	117074	Identifier	s		117018	1					
ANR	117075	PrimaryExpression	'0'		117018	1					
ANR	117076	OrExpression	s [ 1 ] == 'x' || s [ 1 ] == 'X'		117018	1		||			
ANR	117077	EqualityExpression	s [ 1 ] == 'x'		117018	0		==			
ANR	117078	ArrayIndexing	s [ 1 ]		117018	0					
ANR	117079	Identifier	s		117018	0					
ANR	117080	PrimaryExpression	1		117018	1					
ANR	117081	PrimaryExpression	'x'		117018	1					
ANR	117082	EqualityExpression	s [ 1 ] == 'X'		117018	1		==			
ANR	117083	ArrayIndexing	s [ 1 ]		117018	0					
ANR	117084	Identifier	s		117018	0					
ANR	117085	PrimaryExpression	1		117018	1					
ANR	117086	PrimaryExpression	'X'		117018	1					
ANR	117087	CompoundStatement		12:48:186:186	117018	1					
ANR	117088	ExpressionStatement	s += 2	2599:2:52346:52352	117018	0	True				
ANR	117089	AssignmentExpression	s += 2		117018	0		+=			
ANR	117090	Identifier	s		117018	0					
ANR	117091	PrimaryExpression	2		117018	1					
ANR	117092	WhileStatement	while ( ( c = * s ++ ) )		117018	6					
ANR	117093	Condition	c = * s ++	2602:8:52366:52375	117018	0	True				
ANR	117094	AssignmentExpression	c = * s ++		117018	0		=			
ANR	117095	Identifier	c		117018	0					
ANR	117096	UnaryOperationExpression	* s ++		117018	1					
ANR	117097	UnaryOperator	*		117018	0					
ANR	117098	PostIncDecOperationExpression	s ++		117018	1					
ANR	117099	Identifier	s		117018	0					
ANR	117100	IncDec	++		117018	1					
ANR	117101	CompoundStatement		16:20:222:222	117018	1					
ANR	117102	IfStatement	if ( c >= '0' && c <= '9' )		117018	0					
ANR	117103	Condition	c >= '0' && c <= '9'	2603:6:52386:52405	117018	0	True				
ANR	117104	AndExpression	c >= '0' && c <= '9'		117018	0		&&			
ANR	117105	RelationalExpression	c >= '0'		117018	0		>=			
ANR	117106	Identifier	c		117018	0					
ANR	117107	PrimaryExpression	'0'		117018	1					
ANR	117108	RelationalExpression	c <= '9'		117018	1		<=			
ANR	117109	Identifier	c		117018	0					
ANR	117110	PrimaryExpression	'9'		117018	1					
ANR	117111	CompoundStatement		17:28:252:252	117018	1					
ANR	117112	ExpressionStatement	c -= '0'	2604:3:52413:52421	117018	0	True				
ANR	117113	AssignmentExpression	c -= '0'		117018	0		-=			
ANR	117114	Identifier	c		117018	0					
ANR	117115	PrimaryExpression	'0'		117018	1					
ANR	117116	ElseStatement	else		117018	0					
ANR	117117	IfStatement	if ( c >= 'A' && c <= 'F' )		117018	0					
ANR	117118	Condition	c >= 'A' && c <= 'F'	2605:13:52436:52455	117018	0	True				
ANR	117119	AndExpression	c >= 'A' && c <= 'F'		117018	0		&&			
ANR	117120	RelationalExpression	c >= 'A'		117018	0		>=			
ANR	117121	Identifier	c		117018	0					
ANR	117122	PrimaryExpression	'A'		117018	1					
ANR	117123	RelationalExpression	c <= 'F'		117018	1		<=			
ANR	117124	Identifier	c		117018	0					
ANR	117125	PrimaryExpression	'F'		117018	1					
ANR	117126	CompoundStatement		19:35:302:302	117018	1					
ANR	117127	ExpressionStatement	c -= 'A' - 10	2606:3:52463:52476	117018	0	True				
ANR	117128	AssignmentExpression	c -= 'A' - 10		117018	0		-=			
ANR	117129	Identifier	c		117018	0					
ANR	117130	AdditiveExpression	'A' - 10		117018	1		-			
ANR	117131	PrimaryExpression	'A'		117018	0					
ANR	117132	PrimaryExpression	10		117018	1					
ANR	117133	ElseStatement	else		117018	0					
ANR	117134	IfStatement	if ( c >= 'a' && c <= 'f' )		117018	0					
ANR	117135	Condition	c >= 'a' && c <= 'f'	2607:13:52491:52510	117018	0	True				
ANR	117136	AndExpression	c >= 'a' && c <= 'f'		117018	0		&&			
ANR	117137	RelationalExpression	c >= 'a'		117018	0		>=			
ANR	117138	Identifier	c		117018	0					
ANR	117139	PrimaryExpression	'a'		117018	1					
ANR	117140	RelationalExpression	c <= 'f'		117018	1		<=			
ANR	117141	Identifier	c		117018	0					
ANR	117142	PrimaryExpression	'f'		117018	1					
ANR	117143	CompoundStatement		21:35:357:357	117018	1					
ANR	117144	ExpressionStatement	c -= 'a' - 10	2608:3:52518:52531	117018	0	True				
ANR	117145	AssignmentExpression	c -= 'a' - 10		117018	0		-=			
ANR	117146	Identifier	c		117018	0					
ANR	117147	AdditiveExpression	'a' - 10		117018	1		-			
ANR	117148	PrimaryExpression	'a'		117018	0					
ANR	117149	PrimaryExpression	10		117018	1					
ANR	117150	ElseStatement	else		117018	0					
ANR	117151	CompoundStatement		23:9:386:386	117018	0					
ANR	117152	BreakStatement	break ;	2610:3:52547:52552	117018	0	True				
ANR	117153	ExpressionStatement	any = 1	2613:2:52561:52568	117018	1	True				
ANR	117154	AssignmentExpression	any = 1		117018	0		=			
ANR	117155	Identifier	any		117018	0					
ANR	117156	PrimaryExpression	1		117018	1					
ANR	117157	ExpressionStatement	value = value * 16 + c	2614:2:52572:52594	117018	2	True				
ANR	117158	AssignmentExpression	value = value * 16 + c		117018	0		=			
ANR	117159	Identifier	value		117018	0					
ANR	117160	AdditiveExpression	value * 16 + c		117018	1		+			
ANR	117161	MultiplicativeExpression	value * 16		117018	0		*			
ANR	117162	Identifier	value		117018	0					
ANR	117163	PrimaryExpression	16		117018	1					
ANR	117164	Identifier	c		117018	1					
ANR	117165	IfStatement	if ( endptr != NULL )		117018	7					
ANR	117166	Condition	endptr != NULL	2617:5:52605:52618	117018	0	True				
ANR	117167	EqualityExpression	endptr != NULL		117018	0		!=			
ANR	117168	Identifier	endptr		117018	0					
ANR	117169	Identifier	NULL		117018	1					
ANR	117170	CompoundStatement		31:21:465:465	117018	1					
ANR	117171	ExpressionStatement	* endptr = any ? s - 1 : str	2618:2:52625:52652	117018	0	True				
ANR	117172	AssignmentExpression	* endptr = any ? s - 1 : str		117018	0		=			
ANR	117173	UnaryOperationExpression	* endptr		117018	0					
ANR	117174	UnaryOperator	*		117018	0					
ANR	117175	Identifier	endptr		117018	1					
ANR	117176	ConditionalExpression	any ? s - 1 : str		117018	1					
ANR	117177	Condition	any		117018	0					
ANR	117178	Identifier	any		117018	0					
ANR	117179	AdditiveExpression	s - 1		117018	1		-			
ANR	117180	Identifier	s		117018	0					
ANR	117181	PrimaryExpression	1		117018	1					
ANR	117182	Identifier	str		117018	2					
ANR	117183	ReturnStatement	return value ;	2621:1:52659:52671	117018	8	True				
ANR	117184	Identifier	value		117018	0					
ANR	117185	ReturnType	ZEND_API double		117018	1					
ANR	117186	Identifier	zend_hex_strtod		117018	2					
ANR	117187	ParameterList	"const char * str , const char * * endptr"		117018	3					
ANR	117188	Parameter	const char * str	2586:32:52117:52131	117018	0	True				
ANR	117189	ParameterType	const char *		117018	0					
ANR	117190	Identifier	str		117018	1					
ANR	117191	Parameter	const char * * endptr	2586:49:52134:52152	117018	1	True				
ANR	117192	ParameterType	const char * *		117018	0					
ANR	117193	Identifier	endptr		117018	1					
ANR	117194	CFGEntryNode	ENTRY		117018		True				
ANR	117195	CFGExitNode	EXIT		117018		True				
ANR	117196	Symbol	str		117018						
ANR	117197	Symbol	* s ++		117018						
ANR	117198	Symbol	s		117018						
ANR	117199	Symbol	c		117018						
ANR	117200	Symbol	NULL		117018						
ANR	117201	Symbol	endptr		117018						
ANR	117202	Symbol	* endptr		117018						
ANR	117203	Symbol	any		117018						
ANR	117204	Symbol	value		117018						
ANR	117205	Symbol	* s		117018						
ANR	117206	Function	zend_oct_strtod	2624:0:52676:53207							
ANR	117207	FunctionDef	"zend_oct_strtod (const char * str , const char * * endptr)"		117206	0					
ANR	117208	CompoundStatement		2625:0:52746:53207	117206	0					
ANR	117209	IdentifierDeclStatement	const char * s = str ;	2626:1:52749:52768	117206	0	True				
ANR	117210	IdentifierDecl	* s = str		117206	0					
ANR	117211	IdentifierDeclType	const char *		117206	0					
ANR	117212	Identifier	s		117206	1					
ANR	117213	AssignmentExpression	* s = str		117206	2		=			
ANR	117214	Identifier	str		117206	0					
ANR	117215	Identifier	str		117206	1					
ANR	117216	IdentifierDeclStatement	char c ;	2627:1:52771:52777	117206	1	True				
ANR	117217	IdentifierDecl	c		117206	0					
ANR	117218	IdentifierDeclType	char		117206	0					
ANR	117219	Identifier	c		117206	1					
ANR	117220	IdentifierDeclStatement	double value = 0 ;	2628:1:52780:52796	117206	2	True				
ANR	117221	IdentifierDecl	value = 0		117206	0					
ANR	117222	IdentifierDeclType	double		117206	0					
ANR	117223	Identifier	value		117206	1					
ANR	117224	AssignmentExpression	value = 0		117206	2		=			
ANR	117225	Identifier	value		117206	0					
ANR	117226	PrimaryExpression	0		117206	1					
ANR	117227	IdentifierDeclStatement	int any = 0 ;	2629:1:52799:52810	117206	3	True				
ANR	117228	IdentifierDecl	any = 0		117206	0					
ANR	117229	IdentifierDeclType	int		117206	0					
ANR	117230	Identifier	any		117206	1					
ANR	117231	AssignmentExpression	any = 0		117206	2		=			
ANR	117232	Identifier	any		117206	0					
ANR	117233	PrimaryExpression	0		117206	1					
ANR	117234	IfStatement	if ( strlen ( str ) < 1 )		117206	4					
ANR	117235	Condition	strlen ( str ) < 1	2631:5:52818:52832	117206	0	True				
ANR	117236	RelationalExpression	strlen ( str ) < 1		117206	0		<			
ANR	117237	CallExpression	strlen ( str )		117206	0					
ANR	117238	Callee	strlen		117206	0					
ANR	117239	Identifier	strlen		117206	0					
ANR	117240	ArgumentList	str		117206	1					
ANR	117241	Argument	str		117206	0					
ANR	117242	Identifier	str		117206	0					
ANR	117243	PrimaryExpression	1		117206	1					
ANR	117244	CompoundStatement		7:22:88:88	117206	1					
ANR	117245	ExpressionStatement	* endptr = str	2632:2:52839:52852	117206	0	True				
ANR	117246	AssignmentExpression	* endptr = str		117206	0		=			
ANR	117247	UnaryOperationExpression	* endptr		117206	0					
ANR	117248	UnaryOperator	*		117206	0					
ANR	117249	Identifier	endptr		117206	1					
ANR	117250	Identifier	str		117206	1					
ANR	117251	ReturnStatement	return 0.0 ;	2633:2:52856:52866	117206	1	True				
ANR	117252	PrimaryExpression	0.0		117206	0					
ANR	117253	ExpressionStatement	s ++	2637:1:52898:52901	117206	5	True				
ANR	117254	PostIncDecOperationExpression	s ++		117206	0					
ANR	117255	Identifier	s		117206	0					
ANR	117256	IncDec	++		117206	1					
ANR	117257	WhileStatement	while ( ( c = * s ++ ) )		117206	6					
ANR	117258	Condition	c = * s ++	2639:8:52912:52921	117206	0	True				
ANR	117259	AssignmentExpression	c = * s ++		117206	0		=			
ANR	117260	Identifier	c		117206	0					
ANR	117261	UnaryOperationExpression	* s ++		117206	1					
ANR	117262	UnaryOperator	*		117206	0					
ANR	117263	PostIncDecOperationExpression	s ++		117206	1					
ANR	117264	Identifier	s		117206	0					
ANR	117265	IncDec	++		117206	1					
ANR	117266	CompoundStatement		15:20:177:177	117206	1					
ANR	117267	IfStatement	if ( c < '0' || c > '7' )		117206	0					
ANR	117268	Condition	c < '0' || c > '7'	2640:6:52932:52949	117206	0	True				
ANR	117269	OrExpression	c < '0' || c > '7'		117206	0		||			
ANR	117270	RelationalExpression	c < '0'		117206	0		<			
ANR	117271	Identifier	c		117206	0					
ANR	117272	PrimaryExpression	'0'		117206	1					
ANR	117273	RelationalExpression	c > '7'		117206	1		>			
ANR	117274	Identifier	c		117206	0					
ANR	117275	PrimaryExpression	'7'		117206	1					
ANR	117276	CompoundStatement		16:26:205:205	117206	1					
ANR	117277	BreakStatement	break ;	2644:3:53077:53082	117206	0	True				
ANR	117278	ExpressionStatement	value = value * 8 + c - '0'	2646:2:53090:53117	117206	1	True				
ANR	117279	AssignmentExpression	value = value * 8 + c - '0'		117206	0		=			
ANR	117280	Identifier	value		117206	0					
ANR	117281	AdditiveExpression	value * 8 + c - '0'		117206	1		+			
ANR	117282	MultiplicativeExpression	value * 8		117206	0		*			
ANR	117283	Identifier	value		117206	0					
ANR	117284	PrimaryExpression	8		117206	1					
ANR	117285	AdditiveExpression	c - '0'		117206	1		-			
ANR	117286	Identifier	c		117206	0					
ANR	117287	PrimaryExpression	'0'		117206	1					
ANR	117288	ExpressionStatement	any = 1	2647:2:53121:53128	117206	2	True				
ANR	117289	AssignmentExpression	any = 1		117206	0		=			
ANR	117290	Identifier	any		117206	0					
ANR	117291	PrimaryExpression	1		117206	1					
ANR	117292	IfStatement	if ( endptr != NULL )		117206	7					
ANR	117293	Condition	endptr != NULL	2650:5:53139:53152	117206	0	True				
ANR	117294	EqualityExpression	endptr != NULL		117206	0		!=			
ANR	117295	Identifier	endptr		117206	0					
ANR	117296	Identifier	NULL		117206	1					
ANR	117297	CompoundStatement		26:21:408:408	117206	1					
ANR	117298	ExpressionStatement	* endptr = any ? s - 1 : str	2651:2:53159:53186	117206	0	True				
ANR	117299	AssignmentExpression	* endptr = any ? s - 1 : str		117206	0		=			
ANR	117300	UnaryOperationExpression	* endptr		117206	0					
ANR	117301	UnaryOperator	*		117206	0					
ANR	117302	Identifier	endptr		117206	1					
ANR	117303	ConditionalExpression	any ? s - 1 : str		117206	1					
ANR	117304	Condition	any		117206	0					
ANR	117305	Identifier	any		117206	0					
ANR	117306	AdditiveExpression	s - 1		117206	1		-			
ANR	117307	Identifier	s		117206	0					
ANR	117308	PrimaryExpression	1		117206	1					
ANR	117309	Identifier	str		117206	2					
ANR	117310	ReturnStatement	return value ;	2654:1:53193:53205	117206	8	True				
ANR	117311	Identifier	value		117206	0					
ANR	117312	ReturnType	ZEND_API double		117206	1					
ANR	117313	Identifier	zend_oct_strtod		117206	2					
ANR	117314	ParameterList	"const char * str , const char * * endptr"		117206	3					
ANR	117315	Parameter	const char * str	2624:32:52708:52722	117206	0	True				
ANR	117316	ParameterType	const char *		117206	0					
ANR	117317	Identifier	str		117206	1					
ANR	117318	Parameter	const char * * endptr	2624:49:52725:52743	117206	1	True				
ANR	117319	ParameterType	const char * *		117206	0					
ANR	117320	Identifier	endptr		117206	1					
ANR	117321	CFGEntryNode	ENTRY		117206		True				
ANR	117322	CFGExitNode	EXIT		117206		True				
ANR	117323	Symbol	str		117206						
ANR	117324	Symbol	* s ++		117206						
ANR	117325	Symbol	strlen		117206						
ANR	117326	Symbol	s		117206						
ANR	117327	Symbol	c		117206						
ANR	117328	Symbol	NULL		117206						
ANR	117329	Symbol	endptr		117206						
ANR	117330	Symbol	* endptr		117206						
ANR	117331	Symbol	value		117206						
ANR	117332	Symbol	any		117206						
ANR	117333	Function	zend_bin_strtod	2657:0:53210:54130							
ANR	117334	FunctionDef	"zend_bin_strtod (const char * str , const char * * endptr)"		117333	0					
ANR	117335	CompoundStatement		2658:0:53280:54130	117333	0					
ANR	117336	IdentifierDeclStatement	const char * s = str ;	2659:1:53283:53302	117333	0	True				
ANR	117337	IdentifierDecl	* s = str		117333	0					
ANR	117338	IdentifierDeclType	const char *		117333	0					
ANR	117339	Identifier	s		117333	1					
ANR	117340	AssignmentExpression	* s = str		117333	2		=			
ANR	117341	Identifier	str		117333	0					
ANR	117342	Identifier	str		117333	1					
ANR	117343	IdentifierDeclStatement	char c ;	2660:1:53305:53313	117333	1	True				
ANR	117344	IdentifierDecl	c		117333	0					
ANR	117345	IdentifierDeclType	char		117333	0					
ANR	117346	Identifier	c		117333	1					
ANR	117347	IdentifierDeclStatement	double value = 0 ;	2661:1:53316:53334	117333	2	True				
ANR	117348	IdentifierDecl	value = 0		117333	0					
ANR	117349	IdentifierDeclType	double		117333	0					
ANR	117350	Identifier	value		117333	1					
ANR	117351	AssignmentExpression	value = 0		117333	2		=			
ANR	117352	Identifier	value		117333	0					
ANR	117353	PrimaryExpression	0		117333	1					
ANR	117354	IdentifierDeclStatement	int any = 0 ;	2662:1:53337:53350	117333	3	True				
ANR	117355	IdentifierDecl	any = 0		117333	0					
ANR	117356	IdentifierDeclType	int		117333	0					
ANR	117357	Identifier	any		117333	1					
ANR	117358	AssignmentExpression	any = 0		117333	2		=			
ANR	117359	Identifier	any		117333	0					
ANR	117360	PrimaryExpression	0		117333	1					
ANR	117361	IfStatement	if ( strlen ( str ) < 2 )		117333	4					
ANR	117362	Condition	strlen ( str ) < 2	2664:5:53358:53372	117333	0	True				
ANR	117363	RelationalExpression	strlen ( str ) < 2		117333	0		<			
ANR	117364	CallExpression	strlen ( str )		117333	0					
ANR	117365	Callee	strlen		117333	0					
ANR	117366	Identifier	strlen		117333	0					
ANR	117367	ArgumentList	str		117333	1					
ANR	117368	Argument	str		117333	0					
ANR	117369	Identifier	str		117333	0					
ANR	117370	PrimaryExpression	2		117333	1					
ANR	117371	CompoundStatement		7:22:94:94	117333	1					
ANR	117372	ExpressionStatement	* endptr = str	2665:2:53379:53392	117333	0	True				
ANR	117373	AssignmentExpression	* endptr = str		117333	0		=			
ANR	117374	UnaryOperationExpression	* endptr		117333	0					
ANR	117375	UnaryOperator	*		117333	0					
ANR	117376	Identifier	endptr		117333	1					
ANR	117377	Identifier	str		117333	1					
ANR	117378	ReturnStatement	return 0.0 ;	2666:2:53396:53406	117333	1	True				
ANR	117379	PrimaryExpression	0.0		117333	0					
ANR	117380	IfStatement	if ( '0' == * s && ( 'b' == s [ 1 ] || 'B' == s [ 1 ] ) )		117333	5					
ANR	117381	Condition	'0' == * s && ( 'b' == s [ 1 ] || 'B' == s [ 1 ] )	2669:5:53417:53457	117333	0	True				
ANR	117382	AndExpression	'0' == * s && ( 'b' == s [ 1 ] || 'B' == s [ 1 ] )		117333	0		&&			
ANR	117383	EqualityExpression	'0' == * s		117333	0		==			
ANR	117384	PrimaryExpression	'0'		117333	0					
ANR	117385	UnaryOperationExpression	* s		117333	1					
ANR	117386	UnaryOperator	*		117333	0					
ANR	117387	Identifier	s		117333	1					
ANR	117388	OrExpression	'b' == s [ 1 ] || 'B' == s [ 1 ]		117333	1		||			
ANR	117389	EqualityExpression	'b' == s [ 1 ]		117333	0		==			
ANR	117390	PrimaryExpression	'b'		117333	0					
ANR	117391	ArrayIndexing	s [ 1 ]		117333	1					
ANR	117392	Identifier	s		117333	0					
ANR	117393	PrimaryExpression	1		117333	1					
ANR	117394	EqualityExpression	'B' == s [ 1 ]		117333	1		==			
ANR	117395	PrimaryExpression	'B'		117333	0					
ANR	117396	ArrayIndexing	s [ 1 ]		117333	1					
ANR	117397	Identifier	s		117333	0					
ANR	117398	PrimaryExpression	1		117333	1					
ANR	117399	CompoundStatement		12:48:179:179	117333	1					
ANR	117400	ExpressionStatement	s += 2	2670:2:53464:53470	117333	0	True				
ANR	117401	AssignmentExpression	s += 2		117333	0		+=			
ANR	117402	Identifier	s		117333	0					
ANR	117403	PrimaryExpression	2		117333	1					
ANR	117404	WhileStatement	while ( ( c = * s ++ ) )		117333	6					
ANR	117405	Condition	c = * s ++	2673:8:53484:53493	117333	0	True				
ANR	117406	AssignmentExpression	c = * s ++		117333	0		=			
ANR	117407	Identifier	c		117333	0					
ANR	117408	UnaryOperationExpression	* s ++		117333	1					
ANR	117409	UnaryOperator	*		117333	0					
ANR	117410	PostIncDecOperationExpression	s ++		117333	1					
ANR	117411	Identifier	s		117333	0					
ANR	117412	IncDec	++		117333	1					
ANR	117413	CompoundStatement		16:20:215:215	117333	1					
ANR	117414	IfStatement	if ( '0' == c || '1' == c )		117333	0					
ANR	117415	Condition	'0' == c || '1' == c	2679:6:53718:53737	117333	0	True				
ANR	117416	OrExpression	'0' == c || '1' == c		117333	0		||			
ANR	117417	EqualityExpression	'0' == c		117333	0		==			
ANR	117418	PrimaryExpression	'0'		117333	0					
ANR	117419	Identifier	c		117333	1					
ANR	117420	EqualityExpression	'1' == c		117333	1		==			
ANR	117421	PrimaryExpression	'1'		117333	0					
ANR	117422	Identifier	c		117333	1					
ANR	117423	ExpressionStatement	value = value * 2 + c - '0'	2680:3:53743:53770	117333	1	True				
ANR	117424	AssignmentExpression	value = value * 2 + c - '0'		117333	0		=			
ANR	117425	Identifier	value		117333	0					
ANR	117426	AdditiveExpression	value * 2 + c - '0'		117333	1		+			
ANR	117427	MultiplicativeExpression	value * 2		117333	0		*			
ANR	117428	Identifier	value		117333	0					
ANR	117429	PrimaryExpression	2		117333	1					
ANR	117430	AdditiveExpression	c - '0'		117333	1		-			
ANR	117431	Identifier	c		117333	0					
ANR	117432	PrimaryExpression	'0'		117333	1					
ANR	117433	ElseStatement	else		117333	0					
ANR	117434	BreakStatement	break ;	2682:3:53782:53787	117333	0	True				
ANR	117435	ExpressionStatement	any = 1	2684:2:53792:53799	117333	1	True				
ANR	117436	AssignmentExpression	any = 1		117333	0		=			
ANR	117437	Identifier	any		117333	0					
ANR	117438	PrimaryExpression	1		117333	1					
ANR	117439	IfStatement	if ( NULL != endptr )		117333	7					
ANR	117440	Condition	NULL != endptr	2693:5:54052:54065	117333	0	True				
ANR	117441	EqualityExpression	NULL != endptr		117333	0		!=			
ANR	117442	Identifier	NULL		117333	0					
ANR	117443	Identifier	endptr		117333	1					
ANR	117444	CompoundStatement		36:21:787:787	117333	1					
ANR	117445	ExpressionStatement	* endptr = ( char * ) ( any ? s - 1 : str )	2694:2:54072:54109	117333	0	True				
ANR	117446	AssignmentExpression	* endptr = ( char * ) ( any ? s - 1 : str )		117333	0		=			
ANR	117447	UnaryOperationExpression	* endptr		117333	0					
ANR	117448	UnaryOperator	*		117333	0					
ANR	117449	Identifier	endptr		117333	1					
ANR	117450	CastExpression	( char * ) ( any ? s - 1 : str )		117333	1					
ANR	117451	CastTarget	char *		117333	0					
ANR	117452	ConditionalExpression	any ? s - 1 : str		117333	1					
ANR	117453	Condition	any		117333	0					
ANR	117454	Identifier	any		117333	0					
ANR	117455	AdditiveExpression	s - 1		117333	1		-			
ANR	117456	Identifier	s		117333	0					
ANR	117457	PrimaryExpression	1		117333	1					
ANR	117458	Identifier	str		117333	2					
ANR	117459	ReturnStatement	return value ;	2697:1:54116:54128	117333	8	True				
ANR	117460	Identifier	value		117333	0					
ANR	117461	ReturnType	ZEND_API double		117333	1					
ANR	117462	Identifier	zend_bin_strtod		117333	2					
ANR	117463	ParameterList	"const char * str , const char * * endptr"		117333	3					
ANR	117464	Parameter	const char * str	2657:32:53242:53256	117333	0	True				
ANR	117465	ParameterType	const char *		117333	0					
ANR	117466	Identifier	str		117333	1					
ANR	117467	Parameter	const char * * endptr	2657:49:53259:53277	117333	1	True				
ANR	117468	ParameterType	const char * *		117333	0					
ANR	117469	Identifier	endptr		117333	1					
ANR	117470	CFGEntryNode	ENTRY		117333		True				
ANR	117471	CFGExitNode	EXIT		117333		True				
ANR	117472	Symbol	str		117333						
ANR	117473	Symbol	* s ++		117333						
ANR	117474	Symbol	strlen		117333						
ANR	117475	Symbol	s		117333						
ANR	117476	Symbol	c		117333						
ANR	117477	Symbol	NULL		117333						
ANR	117478	Symbol	endptr		117333						
ANR	117479	Symbol	* endptr		117333						
ANR	117480	Symbol	value		117333						
ANR	117481	Symbol	any		117333						
ANR	117482	Symbol	* s		117333						
