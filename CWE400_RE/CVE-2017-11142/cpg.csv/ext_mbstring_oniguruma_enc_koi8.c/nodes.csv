command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	680700	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_koi8.c								
ANR	680701	DeclStmt									
ANR	680702	Decl							const UChar	const UChar [ 256 ]	EncKOI8_ToLowerCaseTable
ANR	680703	DeclStmt									
ANR	680704	Decl							const unsigned short	const unsigned short [ 256 ]	EncKOI8_CtypeTable
ANR	680705	DeclStmt									
ANR	680706	Decl							const UChar	const UChar *	p
ANR	680707	Function	koi8_is_mbc_ambiguous	119:0:6334:6798							
ANR	680708	FunctionDef	"koi8_is_mbc_ambiguous (OnigAmbigType flag , const OnigUChar * * pp , const OnigUChar * end)"		680707	0					
ANR	680709	CompoundStatement		121:0:6431:6798	680707	0					
ANR	680710	IdentifierDeclStatement	const OnigUChar * p = * pp ;	122:2:6435:6459	680707	0	True				
ANR	680711	IdentifierDecl	* p = * pp		680707	0					
ANR	680712	IdentifierDeclType	const OnigUChar *		680707	0					
ANR	680713	Identifier	p		680707	1					
ANR	680714	AssignmentExpression	* p = * pp		680707	2		=			
ANR	680715	Identifier	p		680707	0					
ANR	680716	UnaryOperationExpression	* pp		680707	1					
ANR	680717	UnaryOperator	*		680707	0					
ANR	680718	Identifier	pp		680707	1					
ANR	680719	ExpressionStatement	( * pp ) ++	124:2:6464:6471	680707	1	True				
ANR	680720	PostIncDecOperationExpression	( * pp ) ++		680707	0					
ANR	680721	UnaryOperationExpression	* pp		680707	0					
ANR	680722	UnaryOperator	*		680707	0					
ANR	680723	Identifier	pp		680707	1					
ANR	680724	IncDec	++		680707	1					
ANR	680725	IfStatement	if ( ( ( flag & ONIGENC_CASE_FOLD_ASCII_CASE ) != 0 && ONIGENC_IS_MBC_ASCII ( p ) ) || ( ( flag & ONIGENC_CASE_FOLD_NONASCII_CASE ) != 0 && ! ONIGENC_IS_MBC_ASCII ( p ) ) )		680707	2					
ANR	680726	Condition	( ( flag & ONIGENC_CASE_FOLD_ASCII_CASE ) != 0 && ONIGENC_IS_MBC_ASCII ( p ) ) || ( ( flag & ONIGENC_CASE_FOLD_NONASCII_CASE ) != 0 && ! ONIGENC_IS_MBC_ASCII ( p ) )	125:6:6479:6648	680707	0	True				
ANR	680727	OrExpression	( ( flag & ONIGENC_CASE_FOLD_ASCII_CASE ) != 0 && ONIGENC_IS_MBC_ASCII ( p ) ) || ( ( flag & ONIGENC_CASE_FOLD_NONASCII_CASE ) != 0 && ! ONIGENC_IS_MBC_ASCII ( p ) )		680707	0		||			
ANR	680728	AndExpression	( flag & ONIGENC_CASE_FOLD_ASCII_CASE ) != 0 && ONIGENC_IS_MBC_ASCII ( p )		680707	0		&&			
ANR	680729	EqualityExpression	( flag & ONIGENC_CASE_FOLD_ASCII_CASE ) != 0		680707	0		!=			
ANR	680730	BitAndExpression	flag & ONIGENC_CASE_FOLD_ASCII_CASE		680707	0		&			
ANR	680731	Identifier	flag		680707	0					
ANR	680732	Identifier	ONIGENC_CASE_FOLD_ASCII_CASE		680707	1					
ANR	680733	PrimaryExpression	0		680707	1					
ANR	680734	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		680707	1					
ANR	680735	Callee	ONIGENC_IS_MBC_ASCII		680707	0					
ANR	680736	Identifier	ONIGENC_IS_MBC_ASCII		680707	0					
ANR	680737	ArgumentList	p		680707	1					
ANR	680738	Argument	p		680707	0					
ANR	680739	Identifier	p		680707	0					
ANR	680740	AndExpression	( flag & ONIGENC_CASE_FOLD_NONASCII_CASE ) != 0 && ! ONIGENC_IS_MBC_ASCII ( p )		680707	1		&&			
ANR	680741	EqualityExpression	( flag & ONIGENC_CASE_FOLD_NONASCII_CASE ) != 0		680707	0		!=			
ANR	680742	BitAndExpression	flag & ONIGENC_CASE_FOLD_NONASCII_CASE		680707	0		&			
ANR	680743	Identifier	flag		680707	0					
ANR	680744	Identifier	ONIGENC_CASE_FOLD_NONASCII_CASE		680707	1					
ANR	680745	PrimaryExpression	0		680707	1					
ANR	680746	UnaryOperationExpression	! ONIGENC_IS_MBC_ASCII ( p )		680707	1					
ANR	680747	UnaryOperator	!		680707	0					
ANR	680748	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		680707	1					
ANR	680749	Callee	ONIGENC_IS_MBC_ASCII		680707	0					
ANR	680750	Identifier	ONIGENC_IS_MBC_ASCII		680707	0					
ANR	680751	ArgumentList	p		680707	1					
ANR	680752	Argument	p		680707	0					
ANR	680753	Identifier	p		680707	0					
ANR	680754	CompoundStatement		9:4:225:308	680707	1					
ANR	680755	IdentifierDeclStatement	int v = ( EncKOI8_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) ) ;	129:4:6657:6740	680707	0	True				
ANR	680756	IdentifierDecl	v = ( EncKOI8_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		680707	0					
ANR	680757	IdentifierDeclType	int		680707	0					
ANR	680758	Identifier	v		680707	1					
ANR	680759	AssignmentExpression	v = ( EncKOI8_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		680707	2		=			
ANR	680760	Identifier	v		680707	0					
ANR	680761	BitAndExpression	EncKOI8_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		680707	1		&			
ANR	680762	ArrayIndexing	EncKOI8_CtypeTable [ * p ]		680707	0					
ANR	680763	Identifier	EncKOI8_CtypeTable		680707	0					
ANR	680764	UnaryOperationExpression	* p		680707	1					
ANR	680765	UnaryOperator	*		680707	0					
ANR	680766	Identifier	p		680707	1					
ANR	680767	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		680707	1		|			
ANR	680768	Identifier	BIT_CTYPE_UPPER		680707	0					
ANR	680769	Identifier	BIT_CTYPE_LOWER		680707	1					
ANR	680770	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	131:4:6746:6776	680707	1	True				
ANR	680771	ConditionalExpression	v != 0 ? TRUE : FALSE		680707	0					
ANR	680772	Condition	v != 0		680707	0					
ANR	680773	EqualityExpression	v != 0		680707	0		!=			
ANR	680774	Identifier	v		680707	0					
ANR	680775	PrimaryExpression	0		680707	1					
ANR	680776	Identifier	TRUE		680707	1					
ANR	680777	Identifier	FALSE		680707	2					
ANR	680778	ReturnStatement	return FALSE ;	133:2:6784:6796	680707	3	True				
ANR	680779	Identifier	FALSE		680707	0					
ANR	680780	ReturnType	static int		680707	1					
ANR	680781	Identifier	koi8_is_mbc_ambiguous		680707	2					
ANR	680782	ParameterList	"OnigAmbigType flag , const OnigUChar * * pp , const OnigUChar * end"		680707	3					
ANR	680783	Parameter	OnigAmbigType flag	120:22:6367:6384	680707	0	True				
ANR	680784	ParameterType	OnigAmbigType		680707	0					
ANR	680785	Identifier	flag		680707	1					
ANR	680786	Parameter	const OnigUChar * * pp	120:42:6387:6406	680707	1	True				
ANR	680787	ParameterType	const OnigUChar * *		680707	0					
ANR	680788	Identifier	pp		680707	1					
ANR	680789	Parameter	const OnigUChar * end	120:64:6409:6428	680707	2	True				
ANR	680790	ParameterType	const OnigUChar *		680707	0					
ANR	680791	Identifier	end		680707	1					
ANR	680792	CFGEntryNode	ENTRY		680707		True				
ANR	680793	CFGExitNode	EXIT		680707		True				
ANR	680794	Symbol	pp		680707						
ANR	680795	Symbol	ONIGENC_CASE_FOLD_ASCII_CASE		680707						
ANR	680796	Symbol	flag		680707						
ANR	680797	Symbol	* pp		680707						
ANR	680798	Symbol	ONIGENC_CASE_FOLD_NONASCII_CASE		680707						
ANR	680799	Symbol	TRUE		680707						
ANR	680800	Symbol	p		680707						
ANR	680801	Symbol	EncKOI8_CtypeTable		680707						
ANR	680802	Symbol	* EncKOI8_CtypeTable		680707						
ANR	680803	Symbol	v		680707						
ANR	680804	Symbol	BIT_CTYPE_LOWER		680707						
ANR	680805	Symbol	end		680707						
ANR	680806	Symbol	* p		680707						
ANR	680807	Symbol	BIT_CTYPE_UPPER		680707						
ANR	680808	Symbol	FALSE		680707						
ANR	680809	Symbol	* * p		680707						
ANR	680810	Symbol	ONIGENC_IS_MBC_ASCII		680707						
ANR	680811	Function	koi8_is_code_ctype	137:0:6808:6966							
ANR	680812	FunctionDef	"koi8_is_code_ctype (OnigCodePoint code , unsigned int ctype)"		680811	0					
ANR	680813	CompoundStatement		139:0:6878:6966	680811	0					
ANR	680814	IfStatement	if ( code < 256 )		680811	0					
ANR	680815	Condition	code < 256	140:6:6886:6895	680811	0	True				
ANR	680816	RelationalExpression	code < 256		680811	0		<			
ANR	680817	Identifier	code		680811	0					
ANR	680818	PrimaryExpression	256		680811	1					
ANR	680819	ReturnStatement	"return ENC_IS_KOI8_CTYPE ( code , ctype ) ;"	141:4:6902:6939	680811	1	True				
ANR	680820	CallExpression	"ENC_IS_KOI8_CTYPE ( code , ctype )"		680811	0					
ANR	680821	Callee	ENC_IS_KOI8_CTYPE		680811	0					
ANR	680822	Identifier	ENC_IS_KOI8_CTYPE		680811	0					
ANR	680823	ArgumentList	code		680811	1					
ANR	680824	Argument	code		680811	0					
ANR	680825	Identifier	code		680811	0					
ANR	680826	Argument	ctype		680811	1					
ANR	680827	Identifier	ctype		680811	0					
ANR	680828	ElseStatement	else		680811	0					
ANR	680829	ReturnStatement	return FALSE ;	143:4:6952:6964	680811	0	True				
ANR	680830	Identifier	FALSE		680811	0					
ANR	680831	ReturnType	static int		680811	1					
ANR	680832	Identifier	koi8_is_code_ctype		680811	2					
ANR	680833	ParameterList	"OnigCodePoint code , unsigned int ctype"		680811	3					
ANR	680834	Parameter	OnigCodePoint code	138:19:6838:6855	680811	0	True				
ANR	680835	ParameterType	OnigCodePoint		680811	0					
ANR	680836	Identifier	code		680811	1					
ANR	680837	Parameter	unsigned int ctype	138:39:6858:6875	680811	1	True				
ANR	680838	ParameterType	unsigned int		680811	0					
ANR	680839	Identifier	ctype		680811	1					
ANR	680840	CFGEntryNode	ENTRY		680811		True				
ANR	680841	CFGExitNode	EXIT		680811		True				
ANR	680842	Symbol	code		680811						
ANR	680843	Symbol	ENC_IS_KOI8_CTYPE		680811						
ANR	680844	Symbol	ctype		680811						
ANR	680845	Symbol	FALSE		680811						
ANR	680846	DeclStmt									
ANR	680847	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	680848	Function	koi8_apply_all_case_fold	215:0:8099:8358							
ANR	680849	FunctionDef	"koi8_apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		680848	0					
ANR	680850	CompoundStatement		218:0:8201:8358	680848	0					
ANR	680851	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , f , arg ) ;"	219:2:8205:8356	680848	0	True				
ANR	680852	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , f , arg )"		680848	0					
ANR	680853	Callee	onigenc_apply_all_case_fold_with_map		680848	0					
ANR	680854	Identifier	onigenc_apply_all_case_fold_with_map		680848	0					
ANR	680855	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680848	1					
ANR	680856	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680848	0					
ANR	680857	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680848	0		/			
ANR	680858	SizeofExpression	sizeof ( CaseFoldMap )		680848	0					
ANR	680859	Sizeof	sizeof		680848	0					
ANR	680860	SizeofOperand	CaseFoldMap		680848	1					
ANR	680861	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		680848	1					
ANR	680862	Sizeof	sizeof		680848	0					
ANR	680863	SizeofOperand	OnigPairCaseFoldCodes		680848	1					
ANR	680864	Argument	CaseFoldMap		680848	1					
ANR	680865	Identifier	CaseFoldMap		680848	0					
ANR	680866	Argument	0		680848	2					
ANR	680867	PrimaryExpression	0		680848	0					
ANR	680868	Argument	flag		680848	3					
ANR	680869	Identifier	flag		680848	0					
ANR	680870	Argument	f		680848	4					
ANR	680871	Identifier	f		680848	0					
ANR	680872	Argument	arg		680848	5					
ANR	680873	Identifier	arg		680848	0					
ANR	680874	ReturnType	static int		680848	1					
ANR	680875	Identifier	koi8_apply_all_case_fold		680848	2					
ANR	680876	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		680848	3					
ANR	680877	Parameter	OnigCaseFoldType flag	216:25:8135:8155	680848	0	True				
ANR	680878	ParameterType	OnigCaseFoldType		680848	0					
ANR	680879	Identifier	flag		680848	1					
ANR	680880	Parameter	OnigApplyAllCaseFoldFunc f	217:4:8162:8187	680848	1	True				
ANR	680881	ParameterType	OnigApplyAllCaseFoldFunc		680848	0					
ANR	680882	Identifier	f		680848	1					
ANR	680883	Parameter	void * arg	217:32:8190:8198	680848	2	True				
ANR	680884	ParameterType	void *		680848	0					
ANR	680885	Identifier	arg		680848	1					
ANR	680886	CFGEntryNode	ENTRY		680848		True				
ANR	680887	CFGExitNode	EXIT		680848		True				
ANR	680888	Symbol	flag		680848						
ANR	680889	Symbol	f		680848						
ANR	680890	Symbol	arg		680848						
ANR	680891	Symbol	CaseFoldMap		680848						
ANR	680892	Symbol	onigenc_apply_all_case_fold_with_map		680848						
ANR	680893	Function	koi8_get_case_fold_codes_by_str	224:0:8361:8660							
ANR	680894	FunctionDef	"koi8_get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		680893	0					
ANR	680895	CompoundStatement		227:0:8503:8660	680893	0					
ANR	680896	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , p , end , items ) ;"	228:2:8507:8658	680893	0	True				
ANR	680897	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , p , end , items )"		680893	0					
ANR	680898	Callee	onigenc_get_case_fold_codes_by_str_with_map		680893	0					
ANR	680899	Identifier	onigenc_get_case_fold_codes_by_str_with_map		680893	0					
ANR	680900	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680893	1					
ANR	680901	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680893	0					
ANR	680902	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680893	0		/			
ANR	680903	SizeofExpression	sizeof ( CaseFoldMap )		680893	0					
ANR	680904	Sizeof	sizeof		680893	0					
ANR	680905	SizeofOperand	CaseFoldMap		680893	1					
ANR	680906	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		680893	1					
ANR	680907	Sizeof	sizeof		680893	0					
ANR	680908	SizeofOperand	OnigPairCaseFoldCodes		680893	1					
ANR	680909	Argument	CaseFoldMap		680893	1					
ANR	680910	Identifier	CaseFoldMap		680893	0					
ANR	680911	Argument	0		680893	2					
ANR	680912	PrimaryExpression	0		680893	0					
ANR	680913	Argument	flag		680893	3					
ANR	680914	Identifier	flag		680893	0					
ANR	680915	Argument	p		680893	4					
ANR	680916	Identifier	p		680893	0					
ANR	680917	Argument	end		680893	5					
ANR	680918	Identifier	end		680893	0					
ANR	680919	Argument	items		680893	6					
ANR	680920	Identifier	items		680893	0					
ANR	680921	ReturnType	static int		680893	1					
ANR	680922	Identifier	koi8_get_case_fold_codes_by_str		680893	2					
ANR	680923	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		680893	3					
ANR	680924	Parameter	OnigCaseFoldType flag	225:32:8404:8424	680893	0	True				
ANR	680925	ParameterType	OnigCaseFoldType		680893	0					
ANR	680926	Identifier	flag		680893	1					
ANR	680927	Parameter	const OnigUChar * p	226:4:8431:8448	680893	1	True				
ANR	680928	ParameterType	const OnigUChar *		680893	0					
ANR	680929	Identifier	p		680893	1					
ANR	680930	Parameter	const OnigUChar * end	226:24:8451:8470	680893	2	True				
ANR	680931	ParameterType	const OnigUChar *		680893	0					
ANR	680932	Identifier	end		680893	1					
ANR	680933	Parameter	OnigCaseFoldCodeItem items [ ]	226:46:8473:8500	680893	3	True				
ANR	680934	ParameterType	OnigCaseFoldCodeItem [ ]		680893	0					
ANR	680935	Identifier	items		680893	1					
ANR	680936	CFGEntryNode	ENTRY		680893		True				
ANR	680937	CFGExitNode	EXIT		680893		True				
ANR	680938	Symbol	p		680893						
ANR	680939	Symbol	flag		680893						
ANR	680940	Symbol	end		680893						
ANR	680941	Symbol	CaseFoldMap		680893						
ANR	680942	Symbol	onigenc_get_case_fold_codes_by_str_with_map		680893						
ANR	680943	Symbol	items		680893						
ANR	680944	DeclStmt									
ANR	680945	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingKOI8
