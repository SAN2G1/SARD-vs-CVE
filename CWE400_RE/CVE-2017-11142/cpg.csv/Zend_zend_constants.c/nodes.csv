command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	58514	File	data/converged/CVE-2017-11142_php-src/Zend_zend_constants.c								
ANR	58515	Function	free_zend_constant	30:0:1413:1543							
ANR	58516	FunctionDef	free_zend_constant (zend_constant * c)		58515	0					
ANR	58517	CompoundStatement		31:0:1455:1543	58515	0					
ANR	58518	IfStatement	if ( ! ( c -> flags & CONST_PERSISTENT ) )		58515	0					
ANR	58519	Condition	! ( c -> flags & CONST_PERSISTENT )	32:5:1462:1491	58515	0	True				
ANR	58520	UnaryOperationExpression	! ( c -> flags & CONST_PERSISTENT )		58515	0					
ANR	58521	UnaryOperator	!		58515	0					
ANR	58522	BitAndExpression	c -> flags & CONST_PERSISTENT		58515	1		&			
ANR	58523	PtrMemberAccess	c -> flags		58515	0					
ANR	58524	Identifier	c		58515	0					
ANR	58525	Identifier	flags		58515	1					
ANR	58526	Identifier	CONST_PERSISTENT		58515	1					
ANR	58527	CompoundStatement		2:37:38:38	58515	1					
ANR	58528	ExpressionStatement	zval_dtor ( & c -> value )	33:2:1498:1518	58515	0	True				
ANR	58529	CallExpression	zval_dtor ( & c -> value )		58515	0					
ANR	58530	Callee	zval_dtor		58515	0					
ANR	58531	Identifier	zval_dtor		58515	0					
ANR	58532	ArgumentList	& c -> value		58515	1					
ANR	58533	Argument	& c -> value		58515	0					
ANR	58534	UnaryOperationExpression	& c -> value		58515	0					
ANR	58535	UnaryOperator	&		58515	0					
ANR	58536	PtrMemberAccess	c -> value		58515	1					
ANR	58537	Identifier	c		58515	0					
ANR	58538	Identifier	value		58515	1					
ANR	58539	ExpressionStatement	str_free ( c -> name )	35:1:1524:1541	58515	1	True				
ANR	58540	CallExpression	str_free ( c -> name )		58515	0					
ANR	58541	Callee	str_free		58515	0					
ANR	58542	Identifier	str_free		58515	0					
ANR	58543	ArgumentList	c -> name		58515	1					
ANR	58544	Argument	c -> name		58515	0					
ANR	58545	PtrMemberAccess	c -> name		58515	0					
ANR	58546	Identifier	c		58515	0					
ANR	58547	Identifier	name		58515	1					
ANR	58548	ReturnType	void		58515	1					
ANR	58549	Identifier	free_zend_constant		58515	2					
ANR	58550	ParameterList	zend_constant * c		58515	3					
ANR	58551	Parameter	zend_constant * c	30:24:1437:1452	58515	0	True				
ANR	58552	ParameterType	zend_constant *		58515	0					
ANR	58553	Identifier	c		58515	1					
ANR	58554	CFGEntryNode	ENTRY		58515		True				
ANR	58555	CFGExitNode	EXIT		58515		True				
ANR	58556	Symbol	& c -> value		58515						
ANR	58557	Symbol	c		58515						
ANR	58558	Symbol	c -> flags		58515						
ANR	58559	Symbol	c -> name		58515						
ANR	58560	Symbol	CONST_PERSISTENT		58515						
ANR	58561	Symbol	* c		58515						
ANR	58562	Function	copy_zend_constant	39:0:1547:1712							
ANR	58563	FunctionDef	copy_zend_constant (zend_constant * c)		58562	0					
ANR	58564	CompoundStatement		40:0:1589:1712	58562	0					
ANR	58565	ExpressionStatement	"c -> name = str_strndup ( c -> name , c -> name_len - 1 )"	41:1:1592:1639	58562	0	True				
ANR	58566	AssignmentExpression	"c -> name = str_strndup ( c -> name , c -> name_len - 1 )"		58562	0		=			
ANR	58567	PtrMemberAccess	c -> name		58562	0					
ANR	58568	Identifier	c		58562	0					
ANR	58569	Identifier	name		58562	1					
ANR	58570	CallExpression	"str_strndup ( c -> name , c -> name_len - 1 )"		58562	1					
ANR	58571	Callee	str_strndup		58562	0					
ANR	58572	Identifier	str_strndup		58562	0					
ANR	58573	ArgumentList	c -> name		58562	1					
ANR	58574	Argument	c -> name		58562	0					
ANR	58575	PtrMemberAccess	c -> name		58562	0					
ANR	58576	Identifier	c		58562	0					
ANR	58577	Identifier	name		58562	1					
ANR	58578	Argument	c -> name_len - 1		58562	1					
ANR	58579	AdditiveExpression	c -> name_len - 1		58562	0		-			
ANR	58580	PtrMemberAccess	c -> name_len		58562	0					
ANR	58581	Identifier	c		58562	0					
ANR	58582	Identifier	name_len		58562	1					
ANR	58583	PrimaryExpression	1		58562	1					
ANR	58584	IfStatement	if ( ! ( c -> flags & CONST_PERSISTENT ) )		58562	1					
ANR	58585	Condition	! ( c -> flags & CONST_PERSISTENT )	42:5:1646:1675	58562	0	True				
ANR	58586	UnaryOperationExpression	! ( c -> flags & CONST_PERSISTENT )		58562	0					
ANR	58587	UnaryOperator	!		58562	0					
ANR	58588	BitAndExpression	c -> flags & CONST_PERSISTENT		58562	1		&			
ANR	58589	PtrMemberAccess	c -> flags		58562	0					
ANR	58590	Identifier	c		58562	0					
ANR	58591	Identifier	flags		58562	1					
ANR	58592	Identifier	CONST_PERSISTENT		58562	1					
ANR	58593	CompoundStatement		3:37:88:88	58562	1					
ANR	58594	ExpressionStatement	zval_copy_ctor ( & c -> value )	43:2:1682:1707	58562	0	True				
ANR	58595	CallExpression	zval_copy_ctor ( & c -> value )		58562	0					
ANR	58596	Callee	zval_copy_ctor		58562	0					
ANR	58597	Identifier	zval_copy_ctor		58562	0					
ANR	58598	ArgumentList	& c -> value		58562	1					
ANR	58599	Argument	& c -> value		58562	0					
ANR	58600	UnaryOperationExpression	& c -> value		58562	0					
ANR	58601	UnaryOperator	&		58562	0					
ANR	58602	PtrMemberAccess	c -> value		58562	1					
ANR	58603	Identifier	c		58562	0					
ANR	58604	Identifier	value		58562	1					
ANR	58605	ReturnType	void		58562	1					
ANR	58606	Identifier	copy_zend_constant		58562	2					
ANR	58607	ParameterList	zend_constant * c		58562	3					
ANR	58608	Parameter	zend_constant * c	39:24:1571:1586	58562	0	True				
ANR	58609	ParameterType	zend_constant *		58562	0					
ANR	58610	Identifier	c		58562	1					
ANR	58611	CFGEntryNode	ENTRY		58562		True				
ANR	58612	CFGExitNode	EXIT		58562		True				
ANR	58613	Symbol	str_strndup		58562						
ANR	58614	Symbol	& c -> value		58562						
ANR	58615	Symbol	c		58562						
ANR	58616	Symbol	c -> flags		58562						
ANR	58617	Symbol	c -> name_len		58562						
ANR	58618	Symbol	c -> name		58562						
ANR	58619	Symbol	CONST_PERSISTENT		58562						
ANR	58620	Symbol	* c		58562						
ANR	58621	Function	zend_copy_constants	48:0:1716:1921							
ANR	58622	FunctionDef	"zend_copy_constants (HashTable * target , HashTable * source)"		58621	0					
ANR	58623	CompoundStatement		49:0:1779:1921	58621	0					
ANR	58624	IdentifierDeclStatement	zend_constant tmp_constant ;	50:1:1782:1808	58621	0	True				
ANR	58625	IdentifierDecl	tmp_constant		58621	0					
ANR	58626	IdentifierDeclType	zend_constant		58621	0					
ANR	58627	Identifier	tmp_constant		58621	1					
ANR	58628	ExpressionStatement	"zend_hash_copy ( target , source , ( copy_ctor_func_t ) copy_zend_constant , & tmp_constant , sizeof ( zend_constant ) )"	52:1:1812:1919	58621	1	True				
ANR	58629	CallExpression	"zend_hash_copy ( target , source , ( copy_ctor_func_t ) copy_zend_constant , & tmp_constant , sizeof ( zend_constant ) )"		58621	0					
ANR	58630	Callee	zend_hash_copy		58621	0					
ANR	58631	Identifier	zend_hash_copy		58621	0					
ANR	58632	ArgumentList	target		58621	1					
ANR	58633	Argument	target		58621	0					
ANR	58634	Identifier	target		58621	0					
ANR	58635	Argument	source		58621	1					
ANR	58636	Identifier	source		58621	0					
ANR	58637	Argument	( copy_ctor_func_t ) copy_zend_constant		58621	2					
ANR	58638	CastExpression	( copy_ctor_func_t ) copy_zend_constant		58621	0					
ANR	58639	CastTarget	copy_ctor_func_t		58621	0					
ANR	58640	Identifier	copy_zend_constant		58621	1					
ANR	58641	Argument	& tmp_constant		58621	3					
ANR	58642	UnaryOperationExpression	& tmp_constant		58621	0					
ANR	58643	UnaryOperator	&		58621	0					
ANR	58644	Identifier	tmp_constant		58621	1					
ANR	58645	Argument	sizeof ( zend_constant )		58621	4					
ANR	58646	SizeofExpression	sizeof ( zend_constant )		58621	0					
ANR	58647	Sizeof	sizeof		58621	0					
ANR	58648	SizeofOperand	zend_constant		58621	1					
ANR	58649	ReturnType	void		58621	1					
ANR	58650	Identifier	zend_copy_constants		58621	2					
ANR	58651	ParameterList	"HashTable * target , HashTable * source"		58621	3					
ANR	58652	Parameter	HashTable * target	48:25:1741:1757	58621	0	True				
ANR	58653	ParameterType	HashTable *		58621	0					
ANR	58654	Identifier	target		58621	1					
ANR	58655	Parameter	HashTable * source	48:44:1760:1776	58621	1	True				
ANR	58656	ParameterType	HashTable *		58621	0					
ANR	58657	Identifier	source		58621	1					
ANR	58658	CFGEntryNode	ENTRY		58621		True				
ANR	58659	CFGExitNode	EXIT		58621		True				
ANR	58660	Symbol	tmp_constant		58621						
ANR	58661	Symbol	copy_zend_constant		58621						
ANR	58662	Symbol	source		58621						
ANR	58663	Symbol	& tmp_constant		58621						
ANR	58664	Symbol	target		58621						
ANR	58665	Function	clean_module_constants	78:0:2399:2587							
ANR	58666	FunctionDef	clean_module_constants (int module_number TSRMLS_DC)		58665	0					
ANR	58667	CompoundStatement		79:0:2456:2587	58665	0					
ANR	58668	Statement	zend_hash_apply_with_argument	80:1:2459:2487	58665	0	True				
ANR	58669	Statement	(	80:30:2488:2488	58665	1	True				
ANR	58670	Statement	EG	80:31:2489:2490	58665	2	True				
ANR	58671	Statement	(	80:33:2491:2491	58665	3	True				
ANR	58672	Statement	zend_constants	80:34:2492:2505	58665	4	True				
ANR	58673	Statement	)	80:48:2506:2506	58665	5	True				
ANR	58674	Statement	","	80:49:2507:2507	58665	6	True				
ANR	58675	Statement	(	80:51:2509:2509	58665	7	True				
ANR	58676	Statement	apply_func_arg_t	80:52:2510:2525	58665	8	True				
ANR	58677	Statement	)	80:68:2526:2526	58665	9	True				
ANR	58678	Statement	clean_module_constant	80:70:2528:2548	58665	10	True				
ANR	58679	Statement	","	80:91:2549:2549	58665	11	True				
ANR	58680	Statement	(	80:93:2551:2551	58665	12	True				
ANR	58681	Statement	void	80:94:2552:2555	58665	13	True				
ANR	58682	Statement	*	80:99:2557:2557	58665	14	True				
ANR	58683	Statement	)	80:100:2558:2558	58665	15	True				
ANR	58684	Statement	&	80:102:2560:2560	58665	16	True				
ANR	58685	Statement	module_number	80:103:2561:2573	58665	17	True				
ANR	58686	Statement	TSRMLS_CC	80:117:2575:2583	58665	18	True				
ANR	58687	Statement	)	80:126:2584:2584	58665	19	True				
ANR	58688	ExpressionStatement		80:127:2585:2585	58665	20	True				
ANR	58689	ReturnType	void		58665	1					
ANR	58690	Identifier	clean_module_constants		58665	2					
ANR	58691	ParameterList	int module_number TSRMLS_DC		58665	3					
ANR	58692	Parameter	int module_number TSRMLS_DC	78:28:2427:2453	58665	0	True				
ANR	58693	ParameterType	int module_number		58665	0					
ANR	58694	Identifier	TSRMLS_DC		58665	1					
ANR	58695	CFGEntryNode	ENTRY		58665		True				
ANR	58696	CFGExitNode	EXIT		58665		True				
ANR	58697	Symbol	TSRMLS_DC		58665						
ANR	58698	Function	zend_register_null_constant	146:0:5408:5724							
ANR	58699	FunctionDef	"zend_register_null_constant (const char * name , uint name_len , int flags , int module_number TSRMLS_DC)"		58698	0					
ANR	58700	CompoundStatement		147:0:5523:5724	58698	0					
ANR	58701	IdentifierDeclStatement	zend_constant c ;	148:1:5526:5541	58698	0	True				
ANR	58702	IdentifierDecl	c		58698	0					
ANR	58703	IdentifierDeclType	zend_constant		58698	0					
ANR	58704	Identifier	c		58698	1					
ANR	58705	ExpressionStatement	ZVAL_NULL ( & c . value )	150:1:5546:5565	58698	1	True				
ANR	58706	CallExpression	ZVAL_NULL ( & c . value )		58698	0					
ANR	58707	Callee	ZVAL_NULL		58698	0					
ANR	58708	Identifier	ZVAL_NULL		58698	0					
ANR	58709	ArgumentList	& c . value		58698	1					
ANR	58710	Argument	& c . value		58698	0					
ANR	58711	UnaryOperationExpression	& c . value		58698	0					
ANR	58712	UnaryOperator	&		58698	0					
ANR	58713	MemberAccess	c . value		58698	1					
ANR	58714	Identifier	c		58698	0					
ANR	58715	Identifier	value		58698	1					
ANR	58716	ExpressionStatement	c . flags = flags	151:1:5568:5583	58698	2	True				
ANR	58717	AssignmentExpression	c . flags = flags		58698	0		=			
ANR	58718	MemberAccess	c . flags		58698	0					
ANR	58719	Identifier	c		58698	0					
ANR	58720	Identifier	flags		58698	1					
ANR	58721	Identifier	flags		58698	1					
ANR	58722	ExpressionStatement	"c . name = zend_strndup ( name , name_len - 1 )"	152:1:5586:5625	58698	3	True				
ANR	58723	AssignmentExpression	"c . name = zend_strndup ( name , name_len - 1 )"		58698	0		=			
ANR	58724	MemberAccess	c . name		58698	0					
ANR	58725	Identifier	c		58698	0					
ANR	58726	Identifier	name		58698	1					
ANR	58727	CallExpression	"zend_strndup ( name , name_len - 1 )"		58698	1					
ANR	58728	Callee	zend_strndup		58698	0					
ANR	58729	Identifier	zend_strndup		58698	0					
ANR	58730	ArgumentList	name		58698	1					
ANR	58731	Argument	name		58698	0					
ANR	58732	Identifier	name		58698	0					
ANR	58733	Argument	name_len - 1		58698	1					
ANR	58734	AdditiveExpression	name_len - 1		58698	0		-			
ANR	58735	Identifier	name_len		58698	0					
ANR	58736	PrimaryExpression	1		58698	1					
ANR	58737	ExpressionStatement	c . name_len = name_len	153:1:5628:5649	58698	4	True				
ANR	58738	AssignmentExpression	c . name_len = name_len		58698	0		=			
ANR	58739	MemberAccess	c . name_len		58698	0					
ANR	58740	Identifier	c		58698	0					
ANR	58741	Identifier	name_len		58698	1					
ANR	58742	Identifier	name_len		58698	1					
ANR	58743	ExpressionStatement	c . module_number = module_number	154:1:5652:5683	58698	5	True				
ANR	58744	AssignmentExpression	c . module_number = module_number		58698	0		=			
ANR	58745	MemberAccess	c . module_number		58698	0					
ANR	58746	Identifier	c		58698	0					
ANR	58747	Identifier	module_number		58698	1					
ANR	58748	Identifier	module_number		58698	1					
ANR	58749	Statement	zend_register_constant	155:1:5686:5707	58698	6	True				
ANR	58750	Statement	(	155:23:5708:5708	58698	7	True				
ANR	58751	Statement	&	155:24:5709:5709	58698	8	True				
ANR	58752	Statement	c	155:25:5710:5710	58698	9	True				
ANR	58753	Statement	TSRMLS_CC	155:27:5712:5720	58698	10	True				
ANR	58754	Statement	)	155:36:5721:5721	58698	11	True				
ANR	58755	ExpressionStatement		155:37:5722:5722	58698	12	True				
ANR	58756	ReturnType	ZEND_API void		58698	1					
ANR	58757	Identifier	zend_register_null_constant		58698	2					
ANR	58758	ParameterList	"const char * name , uint name_len , int flags , int module_number TSRMLS_DC"		58698	3					
ANR	58759	Parameter	const char * name	146:42:5450:5465	58698	0	True				
ANR	58760	ParameterType	const char *		58698	0					
ANR	58761	Identifier	name		58698	1					
ANR	58762	Parameter	uint name_len	146:60:5468:5480	58698	1	True				
ANR	58763	ParameterType	uint		58698	0					
ANR	58764	Identifier	name_len		58698	1					
ANR	58765	Parameter	int flags	146:75:5483:5491	58698	2	True				
ANR	58766	ParameterType	int		58698	0					
ANR	58767	Identifier	flags		58698	1					
ANR	58768	Parameter	int module_number TSRMLS_DC	146:86:5494:5520	58698	3	True				
ANR	58769	ParameterType	int module_number		58698	0					
ANR	58770	Identifier	TSRMLS_DC		58698	1					
ANR	58771	CFGEntryNode	ENTRY		58698		True				
ANR	58772	CFGExitNode	EXIT		58698		True				
ANR	58773	Symbol	c		58698						
ANR	58774	Symbol	c . module_number		58698						
ANR	58775	Symbol	flags		58698						
ANR	58776	Symbol	& c		58698						
ANR	58777	Symbol	module_number		58698						
ANR	58778	Symbol	& c . value		58698						
ANR	58779	Symbol	c . name		58698						
ANR	58780	Symbol	TSRMLS_DC		58698						
ANR	58781	Symbol	zend_strndup		58698						
ANR	58782	Symbol	c . name_len		58698						
ANR	58783	Symbol	name		58698						
ANR	58784	Symbol	name_len		58698						
ANR	58785	Symbol	c . flags		58698						
ANR	58786	Function	zend_register_bool_constant	158:0:5727:6065							
ANR	58787	FunctionDef	"zend_register_bool_constant (const char * name , uint name_len , zend_bool bval , int flags , int module_number TSRMLS_DC)"		58786	0					
ANR	58788	CompoundStatement		159:0:5858:6065	58786	0					
ANR	58789	IdentifierDeclStatement	zend_constant c ;	160:1:5861:5876	58786	0	True				
ANR	58790	IdentifierDecl	c		58786	0					
ANR	58791	IdentifierDeclType	zend_constant		58786	0					
ANR	58792	Identifier	c		58786	1					
ANR	58793	ExpressionStatement	"ZVAL_BOOL ( & c . value , bval )"	162:1:5881:5906	58786	1	True				
ANR	58794	CallExpression	"ZVAL_BOOL ( & c . value , bval )"		58786	0					
ANR	58795	Callee	ZVAL_BOOL		58786	0					
ANR	58796	Identifier	ZVAL_BOOL		58786	0					
ANR	58797	ArgumentList	& c . value		58786	1					
ANR	58798	Argument	& c . value		58786	0					
ANR	58799	UnaryOperationExpression	& c . value		58786	0					
ANR	58800	UnaryOperator	&		58786	0					
ANR	58801	MemberAccess	c . value		58786	1					
ANR	58802	Identifier	c		58786	0					
ANR	58803	Identifier	value		58786	1					
ANR	58804	Argument	bval		58786	1					
ANR	58805	Identifier	bval		58786	0					
ANR	58806	ExpressionStatement	c . flags = flags	163:1:5909:5924	58786	2	True				
ANR	58807	AssignmentExpression	c . flags = flags		58786	0		=			
ANR	58808	MemberAccess	c . flags		58786	0					
ANR	58809	Identifier	c		58786	0					
ANR	58810	Identifier	flags		58786	1					
ANR	58811	Identifier	flags		58786	1					
ANR	58812	ExpressionStatement	"c . name = zend_strndup ( name , name_len - 1 )"	164:1:5927:5966	58786	3	True				
ANR	58813	AssignmentExpression	"c . name = zend_strndup ( name , name_len - 1 )"		58786	0		=			
ANR	58814	MemberAccess	c . name		58786	0					
ANR	58815	Identifier	c		58786	0					
ANR	58816	Identifier	name		58786	1					
ANR	58817	CallExpression	"zend_strndup ( name , name_len - 1 )"		58786	1					
ANR	58818	Callee	zend_strndup		58786	0					
ANR	58819	Identifier	zend_strndup		58786	0					
ANR	58820	ArgumentList	name		58786	1					
ANR	58821	Argument	name		58786	0					
ANR	58822	Identifier	name		58786	0					
ANR	58823	Argument	name_len - 1		58786	1					
ANR	58824	AdditiveExpression	name_len - 1		58786	0		-			
ANR	58825	Identifier	name_len		58786	0					
ANR	58826	PrimaryExpression	1		58786	1					
ANR	58827	ExpressionStatement	c . name_len = name_len	165:1:5969:5990	58786	4	True				
ANR	58828	AssignmentExpression	c . name_len = name_len		58786	0		=			
ANR	58829	MemberAccess	c . name_len		58786	0					
ANR	58830	Identifier	c		58786	0					
ANR	58831	Identifier	name_len		58786	1					
ANR	58832	Identifier	name_len		58786	1					
ANR	58833	ExpressionStatement	c . module_number = module_number	166:1:5993:6024	58786	5	True				
ANR	58834	AssignmentExpression	c . module_number = module_number		58786	0		=			
ANR	58835	MemberAccess	c . module_number		58786	0					
ANR	58836	Identifier	c		58786	0					
ANR	58837	Identifier	module_number		58786	1					
ANR	58838	Identifier	module_number		58786	1					
ANR	58839	Statement	zend_register_constant	167:1:6027:6048	58786	6	True				
ANR	58840	Statement	(	167:23:6049:6049	58786	7	True				
ANR	58841	Statement	&	167:24:6050:6050	58786	8	True				
ANR	58842	Statement	c	167:25:6051:6051	58786	9	True				
ANR	58843	Statement	TSRMLS_CC	167:27:6053:6061	58786	10	True				
ANR	58844	Statement	)	167:36:6062:6062	58786	11	True				
ANR	58845	ExpressionStatement		167:37:6063:6063	58786	12	True				
ANR	58846	ReturnType	ZEND_API void		58786	1					
ANR	58847	Identifier	zend_register_bool_constant		58786	2					
ANR	58848	ParameterList	"const char * name , uint name_len , zend_bool bval , int flags , int module_number TSRMLS_DC"		58786	3					
ANR	58849	Parameter	const char * name	158:42:5769:5784	58786	0	True				
ANR	58850	ParameterType	const char *		58786	0					
ANR	58851	Identifier	name		58786	1					
ANR	58852	Parameter	uint name_len	158:60:5787:5799	58786	1	True				
ANR	58853	ParameterType	uint		58786	0					
ANR	58854	Identifier	name_len		58786	1					
ANR	58855	Parameter	zend_bool bval	158:75:5802:5815	58786	2	True				
ANR	58856	ParameterType	zend_bool		58786	0					
ANR	58857	Identifier	bval		58786	1					
ANR	58858	Parameter	int flags	158:91:5818:5826	58786	3	True				
ANR	58859	ParameterType	int		58786	0					
ANR	58860	Identifier	flags		58786	1					
ANR	58861	Parameter	int module_number TSRMLS_DC	158:102:5829:5855	58786	4	True				
ANR	58862	ParameterType	int module_number		58786	0					
ANR	58863	Identifier	TSRMLS_DC		58786	1					
ANR	58864	CFGEntryNode	ENTRY		58786		True				
ANR	58865	CFGExitNode	EXIT		58786		True				
ANR	58866	Symbol	c		58786						
ANR	58867	Symbol	c . module_number		58786						
ANR	58868	Symbol	flags		58786						
ANR	58869	Symbol	& c		58786						
ANR	58870	Symbol	module_number		58786						
ANR	58871	Symbol	& c . value		58786						
ANR	58872	Symbol	c . name		58786						
ANR	58873	Symbol	TSRMLS_DC		58786						
ANR	58874	Symbol	bval		58786						
ANR	58875	Symbol	zend_strndup		58786						
ANR	58876	Symbol	c . name_len		58786						
ANR	58877	Symbol	name		58786						
ANR	58878	Symbol	name_len		58786						
ANR	58879	Symbol	c . flags		58786						
ANR	58880	Function	zend_register_long_constant	170:0:6068:6401							
ANR	58881	FunctionDef	"zend_register_long_constant (const char * name , uint name_len , long lval , int flags , int module_number TSRMLS_DC)"		58880	0					
ANR	58882	CompoundStatement		171:0:6194:6401	58880	0					
ANR	58883	IdentifierDeclStatement	zend_constant c ;	172:1:6197:6212	58880	0	True				
ANR	58884	IdentifierDecl	c		58880	0					
ANR	58885	IdentifierDeclType	zend_constant		58880	0					
ANR	58886	Identifier	c		58880	1					
ANR	58887	ExpressionStatement	"ZVAL_LONG ( & c . value , lval )"	174:1:6217:6242	58880	1	True				
ANR	58888	CallExpression	"ZVAL_LONG ( & c . value , lval )"		58880	0					
ANR	58889	Callee	ZVAL_LONG		58880	0					
ANR	58890	Identifier	ZVAL_LONG		58880	0					
ANR	58891	ArgumentList	& c . value		58880	1					
ANR	58892	Argument	& c . value		58880	0					
ANR	58893	UnaryOperationExpression	& c . value		58880	0					
ANR	58894	UnaryOperator	&		58880	0					
ANR	58895	MemberAccess	c . value		58880	1					
ANR	58896	Identifier	c		58880	0					
ANR	58897	Identifier	value		58880	1					
ANR	58898	Argument	lval		58880	1					
ANR	58899	Identifier	lval		58880	0					
ANR	58900	ExpressionStatement	c . flags = flags	175:1:6245:6260	58880	2	True				
ANR	58901	AssignmentExpression	c . flags = flags		58880	0		=			
ANR	58902	MemberAccess	c . flags		58880	0					
ANR	58903	Identifier	c		58880	0					
ANR	58904	Identifier	flags		58880	1					
ANR	58905	Identifier	flags		58880	1					
ANR	58906	ExpressionStatement	"c . name = zend_strndup ( name , name_len - 1 )"	176:1:6263:6302	58880	3	True				
ANR	58907	AssignmentExpression	"c . name = zend_strndup ( name , name_len - 1 )"		58880	0		=			
ANR	58908	MemberAccess	c . name		58880	0					
ANR	58909	Identifier	c		58880	0					
ANR	58910	Identifier	name		58880	1					
ANR	58911	CallExpression	"zend_strndup ( name , name_len - 1 )"		58880	1					
ANR	58912	Callee	zend_strndup		58880	0					
ANR	58913	Identifier	zend_strndup		58880	0					
ANR	58914	ArgumentList	name		58880	1					
ANR	58915	Argument	name		58880	0					
ANR	58916	Identifier	name		58880	0					
ANR	58917	Argument	name_len - 1		58880	1					
ANR	58918	AdditiveExpression	name_len - 1		58880	0		-			
ANR	58919	Identifier	name_len		58880	0					
ANR	58920	PrimaryExpression	1		58880	1					
ANR	58921	ExpressionStatement	c . name_len = name_len	177:1:6305:6326	58880	4	True				
ANR	58922	AssignmentExpression	c . name_len = name_len		58880	0		=			
ANR	58923	MemberAccess	c . name_len		58880	0					
ANR	58924	Identifier	c		58880	0					
ANR	58925	Identifier	name_len		58880	1					
ANR	58926	Identifier	name_len		58880	1					
ANR	58927	ExpressionStatement	c . module_number = module_number	178:1:6329:6360	58880	5	True				
ANR	58928	AssignmentExpression	c . module_number = module_number		58880	0		=			
ANR	58929	MemberAccess	c . module_number		58880	0					
ANR	58930	Identifier	c		58880	0					
ANR	58931	Identifier	module_number		58880	1					
ANR	58932	Identifier	module_number		58880	1					
ANR	58933	Statement	zend_register_constant	179:1:6363:6384	58880	6	True				
ANR	58934	Statement	(	179:23:6385:6385	58880	7	True				
ANR	58935	Statement	&	179:24:6386:6386	58880	8	True				
ANR	58936	Statement	c	179:25:6387:6387	58880	9	True				
ANR	58937	Statement	TSRMLS_CC	179:27:6389:6397	58880	10	True				
ANR	58938	Statement	)	179:36:6398:6398	58880	11	True				
ANR	58939	ExpressionStatement		179:37:6399:6399	58880	12	True				
ANR	58940	ReturnType	ZEND_API void		58880	1					
ANR	58941	Identifier	zend_register_long_constant		58880	2					
ANR	58942	ParameterList	"const char * name , uint name_len , long lval , int flags , int module_number TSRMLS_DC"		58880	3					
ANR	58943	Parameter	const char * name	170:42:6110:6125	58880	0	True				
ANR	58944	ParameterType	const char *		58880	0					
ANR	58945	Identifier	name		58880	1					
ANR	58946	Parameter	uint name_len	170:60:6128:6140	58880	1	True				
ANR	58947	ParameterType	uint		58880	0					
ANR	58948	Identifier	name_len		58880	1					
ANR	58949	Parameter	long lval	170:75:6143:6151	58880	2	True				
ANR	58950	ParameterType	long		58880	0					
ANR	58951	Identifier	lval		58880	1					
ANR	58952	Parameter	int flags	170:86:6154:6162	58880	3	True				
ANR	58953	ParameterType	int		58880	0					
ANR	58954	Identifier	flags		58880	1					
ANR	58955	Parameter	int module_number TSRMLS_DC	170:97:6165:6191	58880	4	True				
ANR	58956	ParameterType	int module_number		58880	0					
ANR	58957	Identifier	TSRMLS_DC		58880	1					
ANR	58958	CFGEntryNode	ENTRY		58880		True				
ANR	58959	CFGExitNode	EXIT		58880		True				
ANR	58960	Symbol	c		58880						
ANR	58961	Symbol	c . module_number		58880						
ANR	58962	Symbol	lval		58880						
ANR	58963	Symbol	flags		58880						
ANR	58964	Symbol	& c		58880						
ANR	58965	Symbol	module_number		58880						
ANR	58966	Symbol	& c . value		58880						
ANR	58967	Symbol	c . name		58880						
ANR	58968	Symbol	TSRMLS_DC		58880						
ANR	58969	Symbol	zend_strndup		58880						
ANR	58970	Symbol	c . name_len		58880						
ANR	58971	Symbol	name		58880						
ANR	58972	Symbol	name_len		58880						
ANR	58973	Symbol	c . flags		58880						
ANR	58974	Function	zend_register_double_constant	183:0:6405:6744							
ANR	58975	FunctionDef	"zend_register_double_constant (const char * name , uint name_len , double dval , int flags , int module_number TSRMLS_DC)"		58974	0					
ANR	58976	CompoundStatement		184:0:6535:6744	58974	0					
ANR	58977	IdentifierDeclStatement	zend_constant c ;	185:1:6538:6553	58974	0	True				
ANR	58978	IdentifierDecl	c		58974	0					
ANR	58979	IdentifierDeclType	zend_constant		58974	0					
ANR	58980	Identifier	c		58974	1					
ANR	58981	ExpressionStatement	"ZVAL_DOUBLE ( & c . value , dval )"	187:1:6558:6585	58974	1	True				
ANR	58982	CallExpression	"ZVAL_DOUBLE ( & c . value , dval )"		58974	0					
ANR	58983	Callee	ZVAL_DOUBLE		58974	0					
ANR	58984	Identifier	ZVAL_DOUBLE		58974	0					
ANR	58985	ArgumentList	& c . value		58974	1					
ANR	58986	Argument	& c . value		58974	0					
ANR	58987	UnaryOperationExpression	& c . value		58974	0					
ANR	58988	UnaryOperator	&		58974	0					
ANR	58989	MemberAccess	c . value		58974	1					
ANR	58990	Identifier	c		58974	0					
ANR	58991	Identifier	value		58974	1					
ANR	58992	Argument	dval		58974	1					
ANR	58993	Identifier	dval		58974	0					
ANR	58994	ExpressionStatement	c . flags = flags	188:1:6588:6603	58974	2	True				
ANR	58995	AssignmentExpression	c . flags = flags		58974	0		=			
ANR	58996	MemberAccess	c . flags		58974	0					
ANR	58997	Identifier	c		58974	0					
ANR	58998	Identifier	flags		58974	1					
ANR	58999	Identifier	flags		58974	1					
ANR	59000	ExpressionStatement	"c . name = zend_strndup ( name , name_len - 1 )"	189:1:6606:6645	58974	3	True				
ANR	59001	AssignmentExpression	"c . name = zend_strndup ( name , name_len - 1 )"		58974	0		=			
ANR	59002	MemberAccess	c . name		58974	0					
ANR	59003	Identifier	c		58974	0					
ANR	59004	Identifier	name		58974	1					
ANR	59005	CallExpression	"zend_strndup ( name , name_len - 1 )"		58974	1					
ANR	59006	Callee	zend_strndup		58974	0					
ANR	59007	Identifier	zend_strndup		58974	0					
ANR	59008	ArgumentList	name		58974	1					
ANR	59009	Argument	name		58974	0					
ANR	59010	Identifier	name		58974	0					
ANR	59011	Argument	name_len - 1		58974	1					
ANR	59012	AdditiveExpression	name_len - 1		58974	0		-			
ANR	59013	Identifier	name_len		58974	0					
ANR	59014	PrimaryExpression	1		58974	1					
ANR	59015	ExpressionStatement	c . name_len = name_len	190:1:6648:6669	58974	4	True				
ANR	59016	AssignmentExpression	c . name_len = name_len		58974	0		=			
ANR	59017	MemberAccess	c . name_len		58974	0					
ANR	59018	Identifier	c		58974	0					
ANR	59019	Identifier	name_len		58974	1					
ANR	59020	Identifier	name_len		58974	1					
ANR	59021	ExpressionStatement	c . module_number = module_number	191:1:6672:6703	58974	5	True				
ANR	59022	AssignmentExpression	c . module_number = module_number		58974	0		=			
ANR	59023	MemberAccess	c . module_number		58974	0					
ANR	59024	Identifier	c		58974	0					
ANR	59025	Identifier	module_number		58974	1					
ANR	59026	Identifier	module_number		58974	1					
ANR	59027	Statement	zend_register_constant	192:1:6706:6727	58974	6	True				
ANR	59028	Statement	(	192:23:6728:6728	58974	7	True				
ANR	59029	Statement	&	192:24:6729:6729	58974	8	True				
ANR	59030	Statement	c	192:25:6730:6730	58974	9	True				
ANR	59031	Statement	TSRMLS_CC	192:27:6732:6740	58974	10	True				
ANR	59032	Statement	)	192:36:6741:6741	58974	11	True				
ANR	59033	ExpressionStatement		192:37:6742:6742	58974	12	True				
ANR	59034	ReturnType	ZEND_API void		58974	1					
ANR	59035	Identifier	zend_register_double_constant		58974	2					
ANR	59036	ParameterList	"const char * name , uint name_len , double dval , int flags , int module_number TSRMLS_DC"		58974	3					
ANR	59037	Parameter	const char * name	183:44:6449:6464	58974	0	True				
ANR	59038	ParameterType	const char *		58974	0					
ANR	59039	Identifier	name		58974	1					
ANR	59040	Parameter	uint name_len	183:62:6467:6479	58974	1	True				
ANR	59041	ParameterType	uint		58974	0					
ANR	59042	Identifier	name_len		58974	1					
ANR	59043	Parameter	double dval	183:77:6482:6492	58974	2	True				
ANR	59044	ParameterType	double		58974	0					
ANR	59045	Identifier	dval		58974	1					
ANR	59046	Parameter	int flags	183:90:6495:6503	58974	3	True				
ANR	59047	ParameterType	int		58974	0					
ANR	59048	Identifier	flags		58974	1					
ANR	59049	Parameter	int module_number TSRMLS_DC	183:101:6506:6532	58974	4	True				
ANR	59050	ParameterType	int module_number		58974	0					
ANR	59051	Identifier	TSRMLS_DC		58974	1					
ANR	59052	CFGEntryNode	ENTRY		58974		True				
ANR	59053	CFGExitNode	EXIT		58974		True				
ANR	59054	Symbol	c		58974						
ANR	59055	Symbol	c . module_number		58974						
ANR	59056	Symbol	flags		58974						
ANR	59057	Symbol	& c		58974						
ANR	59058	Symbol	module_number		58974						
ANR	59059	Symbol	& c . value		58974						
ANR	59060	Symbol	c . name		58974						
ANR	59061	Symbol	TSRMLS_DC		58974						
ANR	59062	Symbol	zend_strndup		58974						
ANR	59063	Symbol	dval		58974						
ANR	59064	Symbol	c . name_len		58974						
ANR	59065	Symbol	name		58974						
ANR	59066	Symbol	name_len		58974						
ANR	59067	Symbol	c . flags		58974						
ANR	59068	Function	zend_register_stringl_constant	196:0:6748:7116							
ANR	59069	FunctionDef	"zend_register_stringl_constant (const char * name , uint name_len , char * strval , uint strlen , int flags , int module_number TSRMLS_DC)"		59068	0					
ANR	59070	CompoundStatement		197:0:6893:7116	59068	0					
ANR	59071	IdentifierDeclStatement	zend_constant c ;	198:1:6896:6911	59068	0	True				
ANR	59072	IdentifierDecl	c		59068	0					
ANR	59073	IdentifierDeclType	zend_constant		59068	0					
ANR	59074	Identifier	c		59068	1					
ANR	59075	ExpressionStatement	"ZVAL_STRINGL ( & c . value , strval , strlen , 0 )"	200:1:6916:6957	59068	1	True				
ANR	59076	CallExpression	"ZVAL_STRINGL ( & c . value , strval , strlen , 0 )"		59068	0					
ANR	59077	Callee	ZVAL_STRINGL		59068	0					
ANR	59078	Identifier	ZVAL_STRINGL		59068	0					
ANR	59079	ArgumentList	& c . value		59068	1					
ANR	59080	Argument	& c . value		59068	0					
ANR	59081	UnaryOperationExpression	& c . value		59068	0					
ANR	59082	UnaryOperator	&		59068	0					
ANR	59083	MemberAccess	c . value		59068	1					
ANR	59084	Identifier	c		59068	0					
ANR	59085	Identifier	value		59068	1					
ANR	59086	Argument	strval		59068	1					
ANR	59087	Identifier	strval		59068	0					
ANR	59088	Argument	strlen		59068	2					
ANR	59089	Identifier	strlen		59068	0					
ANR	59090	Argument	0		59068	3					
ANR	59091	PrimaryExpression	0		59068	0					
ANR	59092	ExpressionStatement	c . flags = flags	201:1:6960:6975	59068	2	True				
ANR	59093	AssignmentExpression	c . flags = flags		59068	0		=			
ANR	59094	MemberAccess	c . flags		59068	0					
ANR	59095	Identifier	c		59068	0					
ANR	59096	Identifier	flags		59068	1					
ANR	59097	Identifier	flags		59068	1					
ANR	59098	ExpressionStatement	"c . name = zend_strndup ( name , name_len - 1 )"	202:1:6978:7017	59068	3	True				
ANR	59099	AssignmentExpression	"c . name = zend_strndup ( name , name_len - 1 )"		59068	0		=			
ANR	59100	MemberAccess	c . name		59068	0					
ANR	59101	Identifier	c		59068	0					
ANR	59102	Identifier	name		59068	1					
ANR	59103	CallExpression	"zend_strndup ( name , name_len - 1 )"		59068	1					
ANR	59104	Callee	zend_strndup		59068	0					
ANR	59105	Identifier	zend_strndup		59068	0					
ANR	59106	ArgumentList	name		59068	1					
ANR	59107	Argument	name		59068	0					
ANR	59108	Identifier	name		59068	0					
ANR	59109	Argument	name_len - 1		59068	1					
ANR	59110	AdditiveExpression	name_len - 1		59068	0		-			
ANR	59111	Identifier	name_len		59068	0					
ANR	59112	PrimaryExpression	1		59068	1					
ANR	59113	ExpressionStatement	c . name_len = name_len	203:1:7020:7041	59068	4	True				
ANR	59114	AssignmentExpression	c . name_len = name_len		59068	0		=			
ANR	59115	MemberAccess	c . name_len		59068	0					
ANR	59116	Identifier	c		59068	0					
ANR	59117	Identifier	name_len		59068	1					
ANR	59118	Identifier	name_len		59068	1					
ANR	59119	ExpressionStatement	c . module_number = module_number	204:1:7044:7075	59068	5	True				
ANR	59120	AssignmentExpression	c . module_number = module_number		59068	0		=			
ANR	59121	MemberAccess	c . module_number		59068	0					
ANR	59122	Identifier	c		59068	0					
ANR	59123	Identifier	module_number		59068	1					
ANR	59124	Identifier	module_number		59068	1					
ANR	59125	Statement	zend_register_constant	205:1:7078:7099	59068	6	True				
ANR	59126	Statement	(	205:23:7100:7100	59068	7	True				
ANR	59127	Statement	&	205:24:7101:7101	59068	8	True				
ANR	59128	Statement	c	205:25:7102:7102	59068	9	True				
ANR	59129	Statement	TSRMLS_CC	205:27:7104:7112	59068	10	True				
ANR	59130	Statement	)	205:36:7113:7113	59068	11	True				
ANR	59131	ExpressionStatement		205:37:7114:7114	59068	12	True				
ANR	59132	ReturnType	ZEND_API void		59068	1					
ANR	59133	Identifier	zend_register_stringl_constant		59068	2					
ANR	59134	ParameterList	"const char * name , uint name_len , char * strval , uint strlen , int flags , int module_number TSRMLS_DC"		59068	3					
ANR	59135	Parameter	const char * name	196:45:6793:6808	59068	0	True				
ANR	59136	ParameterType	const char *		59068	0					
ANR	59137	Identifier	name		59068	1					
ANR	59138	Parameter	uint name_len	196:63:6811:6823	59068	1	True				
ANR	59139	ParameterType	uint		59068	0					
ANR	59140	Identifier	name_len		59068	1					
ANR	59141	Parameter	char * strval	196:78:6826:6837	59068	2	True				
ANR	59142	ParameterType	char *		59068	0					
ANR	59143	Identifier	strval		59068	1					
ANR	59144	Parameter	uint strlen	196:92:6840:6850	59068	3	True				
ANR	59145	ParameterType	uint		59068	0					
ANR	59146	Identifier	strlen		59068	1					
ANR	59147	Parameter	int flags	196:105:6853:6861	59068	4	True				
ANR	59148	ParameterType	int		59068	0					
ANR	59149	Identifier	flags		59068	1					
ANR	59150	Parameter	int module_number TSRMLS_DC	196:116:6864:6890	59068	5	True				
ANR	59151	ParameterType	int module_number		59068	0					
ANR	59152	Identifier	TSRMLS_DC		59068	1					
ANR	59153	CFGEntryNode	ENTRY		59068		True				
ANR	59154	CFGExitNode	EXIT		59068		True				
ANR	59155	Symbol	c		59068						
ANR	59156	Symbol	strval		59068						
ANR	59157	Symbol	c . module_number		59068						
ANR	59158	Symbol	flags		59068						
ANR	59159	Symbol	& c		59068						
ANR	59160	Symbol	module_number		59068						
ANR	59161	Symbol	& c . value		59068						
ANR	59162	Symbol	c . name		59068						
ANR	59163	Symbol	TSRMLS_DC		59068						
ANR	59164	Symbol	strlen		59068						
ANR	59165	Symbol	zend_strndup		59068						
ANR	59166	Symbol	c . name_len		59068						
ANR	59167	Symbol	name		59068						
ANR	59168	Symbol	name_len		59068						
ANR	59169	Symbol	c . flags		59068						
ANR	59170	Function	zend_register_string_constant	209:0:7120:7358							
ANR	59171	FunctionDef	"zend_register_string_constant (const char * name , uint name_len , char * strval , int flags , int module_number TSRMLS_DC)"		59170	0					
ANR	59172	CompoundStatement		210:0:7251:7358	59170	0					
ANR	59173	Statement	zend_register_stringl_constant	211:1:7254:7283	59170	0	True				
ANR	59174	Statement	(	211:31:7284:7284	59170	1	True				
ANR	59175	Statement	name	211:32:7285:7288	59170	2	True				
ANR	59176	Statement	","	211:36:7289:7289	59170	3	True				
ANR	59177	Statement	name_len	211:38:7291:7298	59170	4	True				
ANR	59178	Statement	","	211:46:7299:7299	59170	5	True				
ANR	59179	Statement	strval	211:48:7301:7306	59170	6	True				
ANR	59180	Statement	","	211:54:7307:7307	59170	7	True				
ANR	59181	Statement	strlen	211:56:7309:7314	59170	8	True				
ANR	59182	Statement	(	211:62:7315:7315	59170	9	True				
ANR	59183	Statement	strval	211:63:7316:7321	59170	10	True				
ANR	59184	Statement	)	211:69:7322:7322	59170	11	True				
ANR	59185	Statement	","	211:70:7323:7323	59170	12	True				
ANR	59186	Statement	flags	211:72:7325:7329	59170	13	True				
ANR	59187	Statement	","	211:77:7330:7330	59170	14	True				
ANR	59188	Statement	module_number	211:79:7332:7344	59170	15	True				
ANR	59189	Statement	TSRMLS_CC	211:93:7346:7354	59170	16	True				
ANR	59190	Statement	)	211:102:7355:7355	59170	17	True				
ANR	59191	ExpressionStatement		211:103:7356:7356	59170	18	True				
ANR	59192	ReturnType	ZEND_API void		59170	1					
ANR	59193	Identifier	zend_register_string_constant		59170	2					
ANR	59194	ParameterList	"const char * name , uint name_len , char * strval , int flags , int module_number TSRMLS_DC"		59170	3					
ANR	59195	Parameter	const char * name	209:44:7164:7179	59170	0	True				
ANR	59196	ParameterType	const char *		59170	0					
ANR	59197	Identifier	name		59170	1					
ANR	59198	Parameter	uint name_len	209:62:7182:7194	59170	1	True				
ANR	59199	ParameterType	uint		59170	0					
ANR	59200	Identifier	name_len		59170	1					
ANR	59201	Parameter	char * strval	209:77:7197:7208	59170	2	True				
ANR	59202	ParameterType	char *		59170	0					
ANR	59203	Identifier	strval		59170	1					
ANR	59204	Parameter	int flags	209:91:7211:7219	59170	3	True				
ANR	59205	ParameterType	int		59170	0					
ANR	59206	Identifier	flags		59170	1					
ANR	59207	Parameter	int module_number TSRMLS_DC	209:102:7222:7248	59170	4	True				
ANR	59208	ParameterType	int module_number		59170	0					
ANR	59209	Identifier	TSRMLS_DC		59170	1					
ANR	59210	CFGEntryNode	ENTRY		59170		True				
ANR	59211	CFGExitNode	EXIT		59170		True				
ANR	59212	Symbol	strval		59170						
ANR	59213	Symbol	name		59170						
ANR	59214	Symbol	flags		59170						
ANR	59215	Symbol	name_len		59170						
ANR	59216	Symbol	TSRMLS_DC		59170						
ANR	59217	DeclStmt									
ANR	59218	Decl							int	int	ret
ANR	59219	DeclStmt									
ANR	59220	Decl							char	char [ ]	haltoff
ANR	59221	DeclStmt									
ANR	59222	Decl							zend_constant	zend_constant	tmp
ANR	59223	DeclStmt									
ANR	59224	Decl							int	int	const_name_len
ANR	59225	DeclStmt									
ANR	59226	Decl							char	char *	const_name
ANR	59227	DeclStmt									
ANR	59228	Decl							const char	const char *	cfilename
ANR	59229	DeclStmt									
ANR	59230	Decl							char	char *	haltname
ANR	59231	DeclStmt									
ANR	59232	Decl							int	int	len
ANR	59233	Decl							int	int	clen
ANR	59234	DeclStmt									
ANR	59235	Decl							zend_constant	zend_constant *	c
ANR	59236	DeclStmt									
ANR	59237	Decl							int	int	retval
ANR	59238	DeclStmt									
ANR	59239	Decl							char	char *	lookup_name
ANR	59240	Function	zend_get_constant_ex	302:0:10337:14334							
ANR	59241	FunctionDef	"zend_get_constant_ex (const char * name , uint name_len , zval * result , zend_class_entry * scope , ulong flags TSRMLS_DC)"		59240	0					
ANR	59242	CompoundStatement		303:0:10466:14334	59240	0					
ANR	59243	IdentifierDeclStatement	zend_constant * c ;	304:1:10469:10485	59240	0	True				
ANR	59244	IdentifierDecl	* c		59240	0					
ANR	59245	IdentifierDeclType	zend_constant *		59240	0					
ANR	59246	Identifier	c		59240	1					
ANR	59247	IdentifierDeclStatement	int retval = 1 ;	305:1:10488:10502	59240	1	True				
ANR	59248	IdentifierDecl	retval = 1		59240	0					
ANR	59249	IdentifierDeclType	int		59240	0					
ANR	59250	Identifier	retval		59240	1					
ANR	59251	AssignmentExpression	retval = 1		59240	2		=			
ANR	59252	Identifier	retval		59240	0					
ANR	59253	PrimaryExpression	1		59240	1					
ANR	59254	IdentifierDeclStatement	const char * colon ;	306:1:10505:10522	59240	2	True				
ANR	59255	IdentifierDecl	* colon		59240	0					
ANR	59256	IdentifierDeclType	const char *		59240	0					
ANR	59257	Identifier	colon		59240	1					
ANR	59258	IdentifierDeclStatement	zend_class_entry * ce = NULL ;	307:1:10525:10552	59240	3	True				
ANR	59259	IdentifierDecl	* ce = NULL		59240	0					
ANR	59260	IdentifierDeclType	zend_class_entry *		59240	0					
ANR	59261	Identifier	ce		59240	1					
ANR	59262	AssignmentExpression	* ce = NULL		59240	2		=			
ANR	59263	Identifier	NULL		59240	0					
ANR	59264	Identifier	NULL		59240	1					
ANR	59265	IdentifierDeclStatement	char * class_name ;	308:1:10555:10571	59240	4	True				
ANR	59266	IdentifierDecl	* class_name		59240	0					
ANR	59267	IdentifierDeclType	char *		59240	0					
ANR	59268	Identifier	class_name		59240	1					
ANR	59269	IdentifierDeclStatement	zval * * ret_constant ;	309:1:10574:10593	59240	5	True				
ANR	59270	IdentifierDecl	* * ret_constant		59240	0					
ANR	59271	IdentifierDeclType	zval * *		59240	0					
ANR	59272	Identifier	ret_constant		59240	1					
ANR	59273	IfStatement	if ( name [ 0 ] == '\\\\' )		59240	6					
ANR	59274	Condition	name [ 0 ] == '\\\\'	312:5:10624:10638	59240	0	True				
ANR	59275	EqualityExpression	name [ 0 ] == '\\\\'		59240	0		==			
ANR	59276	ArrayIndexing	name [ 0 ]		59240	0					
ANR	59277	Identifier	name		59240	0					
ANR	59278	PrimaryExpression	0		59240	1					
ANR	59279	PrimaryExpression	'\\\\'		59240	1					
ANR	59280	CompoundStatement		10:22:174:174	59240	1					
ANR	59281	ExpressionStatement	name += 1	313:2:10645:10654	59240	0	True				
ANR	59282	AssignmentExpression	name += 1		59240	0		+=			
ANR	59283	Identifier	name		59240	0					
ANR	59284	PrimaryExpression	1		59240	1					
ANR	59285	ExpressionStatement	name_len -= 1	314:2:10658:10671	59240	1	True				
ANR	59286	AssignmentExpression	name_len -= 1		59240	0		-=			
ANR	59287	Identifier	name_len		59240	0					
ANR	59288	PrimaryExpression	1		59240	1					
ANR	59289	IfStatement	"if ( ( colon = zend_memrchr ( name , ':' , name_len ) ) && colon > name && ( * ( colon - 1 ) == ':' ) )"		59240	7					
ANR	59290	Condition	"( colon = zend_memrchr ( name , ':' , name_len ) ) && colon > name && ( * ( colon - 1 ) == ':' )"	318:5:10683:10771	59240	0	True				
ANR	59291	AndExpression	"( colon = zend_memrchr ( name , ':' , name_len ) ) && colon > name && ( * ( colon - 1 ) == ':' )"		59240	0		&&			
ANR	59292	AssignmentExpression	"colon = zend_memrchr ( name , ':' , name_len )"		59240	0		=			
ANR	59293	Identifier	colon		59240	0					
ANR	59294	CallExpression	"zend_memrchr ( name , ':' , name_len )"		59240	1					
ANR	59295	Callee	zend_memrchr		59240	0					
ANR	59296	Identifier	zend_memrchr		59240	0					
ANR	59297	ArgumentList	name		59240	1					
ANR	59298	Argument	name		59240	0					
ANR	59299	Identifier	name		59240	0					
ANR	59300	Argument	':'		59240	1					
ANR	59301	PrimaryExpression	':'		59240	0					
ANR	59302	Argument	name_len		59240	2					
ANR	59303	Identifier	name_len		59240	0					
ANR	59304	AndExpression	colon > name && ( * ( colon - 1 ) == ':' )		59240	1		&&			
ANR	59305	RelationalExpression	colon > name		59240	0		>			
ANR	59306	Identifier	colon		59240	0					
ANR	59307	Identifier	name		59240	1					
ANR	59308	EqualityExpression	* ( colon - 1 ) == ':'		59240	1		==			
ANR	59309	UnaryOperationExpression	* ( colon - 1 )		59240	0					
ANR	59310	UnaryOperator	*		59240	0					
ANR	59311	AdditiveExpression	colon - 1		59240	1		-			
ANR	59312	Identifier	colon		59240	0					
ANR	59313	PrimaryExpression	1		59240	1					
ANR	59314	PrimaryExpression	':'		59240	1					
ANR	59315	CompoundStatement		21:2:447:459	59240	1					
ANR	59316	IdentifierDeclStatement	int class_name_len = colon - name - 1 ;	320:2:10778:10815	59240	0	True				
ANR	59317	IdentifierDecl	class_name_len = colon - name - 1		59240	0					
ANR	59318	IdentifierDeclType	int		59240	0					
ANR	59319	Identifier	class_name_len		59240	1					
ANR	59320	AssignmentExpression	class_name_len = colon - name - 1		59240	2		=			
ANR	59321	Identifier	class_name_len		59240	0					
ANR	59322	AdditiveExpression	colon - name - 1		59240	1		-			
ANR	59323	Identifier	colon		59240	0					
ANR	59324	AdditiveExpression	name - 1		59240	1		-			
ANR	59325	Identifier	name		59240	0					
ANR	59326	PrimaryExpression	1		59240	1					
ANR	59327	IdentifierDeclStatement	int const_name_len = name_len - class_name_len - 2 ;	321:2:10819:10869	59240	1	True				
ANR	59328	IdentifierDecl	const_name_len = name_len - class_name_len - 2		59240	0					
ANR	59329	IdentifierDeclType	int		59240	0					
ANR	59330	Identifier	const_name_len		59240	1					
ANR	59331	AssignmentExpression	const_name_len = name_len - class_name_len - 2		59240	2		=			
ANR	59332	Identifier	const_name_len		59240	0					
ANR	59333	AdditiveExpression	name_len - class_name_len - 2		59240	1		-			
ANR	59334	Identifier	name_len		59240	0					
ANR	59335	AdditiveExpression	class_name_len - 2		59240	1		-			
ANR	59336	Identifier	class_name_len		59240	0					
ANR	59337	PrimaryExpression	2		59240	1					
ANR	59338	IdentifierDeclStatement	const char * constant_name = colon + 1 ;	322:2:10873:10910	59240	2	True				
ANR	59339	IdentifierDecl	* constant_name = colon + 1		59240	0					
ANR	59340	IdentifierDeclType	const char *		59240	0					
ANR	59341	Identifier	constant_name		59240	1					
ANR	59342	AssignmentExpression	* constant_name = colon + 1		59240	2		=			
ANR	59343	Identifier	constant_name		59240	0					
ANR	59344	AdditiveExpression	colon + 1		59240	1		+			
ANR	59345	Identifier	colon		59240	0					
ANR	59346	PrimaryExpression	1		59240	1					
ANR	59347	IdentifierDeclStatement	char * lcname ;	323:2:10914:10926	59240	3	True				
ANR	59348	IdentifierDecl	* lcname		59240	0					
ANR	59349	IdentifierDeclType	char *		59240	0					
ANR	59350	Identifier	lcname		59240	1					
ANR	59351	ExpressionStatement	"class_name = estrndup ( name , class_name_len )"	325:2:10931:10974	59240	4	True				
ANR	59352	AssignmentExpression	"class_name = estrndup ( name , class_name_len )"		59240	0		=			
ANR	59353	Identifier	class_name		59240	0					
ANR	59354	CallExpression	"estrndup ( name , class_name_len )"		59240	1					
ANR	59355	Callee	estrndup		59240	0					
ANR	59356	Identifier	estrndup		59240	0					
ANR	59357	ArgumentList	name		59240	1					
ANR	59358	Argument	name		59240	0					
ANR	59359	Identifier	name		59240	0					
ANR	59360	Argument	class_name_len		59240	1					
ANR	59361	Identifier	class_name_len		59240	0					
ANR	59362	ExpressionStatement	"lcname = zend_str_tolower_dup ( class_name , class_name_len )"	326:2:10978:11035	59240	5	True				
ANR	59363	AssignmentExpression	"lcname = zend_str_tolower_dup ( class_name , class_name_len )"		59240	0		=			
ANR	59364	Identifier	lcname		59240	0					
ANR	59365	CallExpression	"zend_str_tolower_dup ( class_name , class_name_len )"		59240	1					
ANR	59366	Callee	zend_str_tolower_dup		59240	0					
ANR	59367	Identifier	zend_str_tolower_dup		59240	0					
ANR	59368	ArgumentList	class_name		59240	1					
ANR	59369	Argument	class_name		59240	0					
ANR	59370	Identifier	class_name		59240	0					
ANR	59371	Argument	class_name_len		59240	1					
ANR	59372	Identifier	class_name_len		59240	0					
ANR	59373	IfStatement	if ( ! scope )		59240	6					
ANR	59374	Condition	! scope	327:6:11043:11048	59240	0	True				
ANR	59375	UnaryOperationExpression	! scope		59240	0					
ANR	59376	UnaryOperator	!		59240	0					
ANR	59377	Identifier	scope		59240	1					
ANR	59378	CompoundStatement		25:14:584:584	59240	1					
ANR	59379	IfStatement	if ( EG ( in_execution ) )		59240	0					
ANR	59380	Condition	EG ( in_execution )	328:7:11060:11075	59240	0	True				
ANR	59381	CallExpression	EG ( in_execution )		59240	0					
ANR	59382	Callee	EG		59240	0					
ANR	59383	Identifier	EG		59240	0					
ANR	59384	ArgumentList	in_execution		59240	1					
ANR	59385	Argument	in_execution		59240	0					
ANR	59386	Identifier	in_execution		59240	0					
ANR	59387	CompoundStatement		26:25:611:611	59240	1					
ANR	59388	ExpressionStatement	scope = EG ( scope )	329:4:11084:11101	59240	0	True				
ANR	59389	AssignmentExpression	scope = EG ( scope )		59240	0		=			
ANR	59390	Identifier	scope		59240	0					
ANR	59391	CallExpression	EG ( scope )		59240	1					
ANR	59392	Callee	EG		59240	0					
ANR	59393	Identifier	EG		59240	0					
ANR	59394	ArgumentList	scope		59240	1					
ANR	59395	Argument	scope		59240	0					
ANR	59396	Identifier	scope		59240	0					
ANR	59397	ElseStatement	else		59240	0					
ANR	59398	CompoundStatement		28:10:646:646	59240	0					
ANR	59399	ExpressionStatement	scope = CG ( active_class_entry )	331:4:11119:11149	59240	0	True				
ANR	59400	AssignmentExpression	scope = CG ( active_class_entry )		59240	0		=			
ANR	59401	Identifier	scope		59240	0					
ANR	59402	CallExpression	CG ( active_class_entry )		59240	1					
ANR	59403	Callee	CG		59240	0					
ANR	59404	Identifier	CG		59240	0					
ANR	59405	ArgumentList	active_class_entry		59240	1					
ANR	59406	Argument	active_class_entry		59240	0					
ANR	59407	Identifier	active_class_entry		59240	0					
ANR	59408	IfStatement	"if ( class_name_len == sizeof ( ""self"" ) - 1 && ! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 ) )"		59240	7					
ANR	59409	Condition	"class_name_len == sizeof ( ""self"" ) - 1 && ! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"	335:6:11167:11251	59240	0	True				
ANR	59410	AndExpression	"class_name_len == sizeof ( ""self"" ) - 1 && ! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"		59240	0		&&			
ANR	59411	EqualityExpression	"class_name_len == sizeof ( ""self"" ) - 1"		59240	0		==			
ANR	59412	Identifier	class_name_len		59240	0					
ANR	59413	AdditiveExpression	"sizeof ( ""self"" ) - 1"		59240	1		-			
ANR	59414	SizeofExpression	"sizeof ( ""self"" )"		59240	0					
ANR	59415	Sizeof	sizeof		59240	0					
ANR	59416	PrimaryExpression	"""self"""		59240	1					
ANR	59417	PrimaryExpression	1		59240	1					
ANR	59418	UnaryOperationExpression	"! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"		59240	1					
ANR	59419	UnaryOperator	!		59240	0					
ANR	59420	CallExpression	"memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"		59240	1					
ANR	59421	Callee	memcmp		59240	0					
ANR	59422	Identifier	memcmp		59240	0					
ANR	59423	ArgumentList	lcname		59240	1					
ANR	59424	Argument	lcname		59240	0					
ANR	59425	Identifier	lcname		59240	0					
ANR	59426	Argument	"""self"""		59240	1					
ANR	59427	PrimaryExpression	"""self"""		59240	0					
ANR	59428	Argument	"sizeof ( ""self"" ) - 1"		59240	2					
ANR	59429	AdditiveExpression	"sizeof ( ""self"" ) - 1"		59240	0		-			
ANR	59430	SizeofExpression	"sizeof ( ""self"" )"		59240	0					
ANR	59431	Sizeof	sizeof		59240	0					
ANR	59432	PrimaryExpression	"""self"""		59240	1					
ANR	59433	PrimaryExpression	1		59240	1					
ANR	59434	CompoundStatement		34:49:787:787	59240	1					
ANR	59435	IfStatement	if ( scope )		59240	0					
ANR	59436	Condition	scope	337:7:11263:11267	59240	0	True				
ANR	59437	Identifier	scope		59240	0					
ANR	59438	CompoundStatement		35:14:803:803	59240	1					
ANR	59439	ExpressionStatement	ce = scope	338:4:11276:11286	59240	0	True				
ANR	59440	AssignmentExpression	ce = scope		59240	0		=			
ANR	59441	Identifier	ce		59240	0					
ANR	59442	Identifier	scope		59240	1					
ANR	59443	ElseStatement	else		59240	0					
ANR	59444	CompoundStatement		37:10:831:831	59240	0					
ANR	59445	ExpressionStatement	"zend_error ( E_ERROR , ""Cannot access self:: when no class scope is active"" )"	340:4:11304:11377	59240	0	True				
ANR	59446	CallExpression	"zend_error ( E_ERROR , ""Cannot access self:: when no class scope is active"" )"		59240	0					
ANR	59447	Callee	zend_error		59240	0					
ANR	59448	Identifier	zend_error		59240	0					
ANR	59449	ArgumentList	E_ERROR		59240	1					
ANR	59450	Argument	E_ERROR		59240	0					
ANR	59451	Identifier	E_ERROR		59240	0					
ANR	59452	Argument	"""Cannot access self:: when no class scope is active"""		59240	1					
ANR	59453	PrimaryExpression	"""Cannot access self:: when no class scope is active"""		59240	0					
ANR	59454	ExpressionStatement	retval = 0	341:4:11383:11393	59240	1	True				
ANR	59455	AssignmentExpression	retval = 0		59240	0		=			
ANR	59456	Identifier	retval		59240	0					
ANR	59457	PrimaryExpression	0		59240	1					
ANR	59458	ExpressionStatement	efree ( lcname )	343:3:11403:11416	59240	1	True				
ANR	59459	CallExpression	efree ( lcname )		59240	0					
ANR	59460	Callee	efree		59240	0					
ANR	59461	Identifier	efree		59240	0					
ANR	59462	ArgumentList	lcname		59240	1					
ANR	59463	Argument	lcname		59240	0					
ANR	59464	Identifier	lcname		59240	0					
ANR	59465	ElseStatement	else		59240	0					
ANR	59466	IfStatement	"if ( class_name_len == sizeof ( ""parent"" ) - 1 && ! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 ) )"		59240	0					
ANR	59467	Condition	"class_name_len == sizeof ( ""parent"" ) - 1 && ! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"	344:13:11431:11528	59240	0	True				
ANR	59468	AndExpression	"class_name_len == sizeof ( ""parent"" ) - 1 && ! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"		59240	0		&&			
ANR	59469	EqualityExpression	"class_name_len == sizeof ( ""parent"" ) - 1"		59240	0		==			
ANR	59470	Identifier	class_name_len		59240	0					
ANR	59471	AdditiveExpression	"sizeof ( ""parent"" ) - 1"		59240	1		-			
ANR	59472	SizeofExpression	"sizeof ( ""parent"" )"		59240	0					
ANR	59473	Sizeof	sizeof		59240	0					
ANR	59474	PrimaryExpression	"""parent"""		59240	1					
ANR	59475	PrimaryExpression	1		59240	1					
ANR	59476	UnaryOperationExpression	"! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"		59240	1					
ANR	59477	UnaryOperator	!		59240	0					
ANR	59478	CallExpression	"memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"		59240	1					
ANR	59479	Callee	memcmp		59240	0					
ANR	59480	Identifier	memcmp		59240	0					
ANR	59481	ArgumentList	lcname		59240	1					
ANR	59482	Argument	lcname		59240	0					
ANR	59483	Identifier	lcname		59240	0					
ANR	59484	Argument	"""parent"""		59240	1					
ANR	59485	PrimaryExpression	"""parent"""		59240	0					
ANR	59486	Argument	"sizeof ( ""parent"" ) - 1"		59240	2					
ANR	59487	AdditiveExpression	"sizeof ( ""parent"" ) - 1"		59240	0		-			
ANR	59488	SizeofExpression	"sizeof ( ""parent"" )"		59240	0					
ANR	59489	Sizeof	sizeof		59240	0					
ANR	59490	PrimaryExpression	"""parent"""		59240	1					
ANR	59491	PrimaryExpression	1		59240	1					
ANR	59492	CompoundStatement		43:60:1064:1064	59240	1					
ANR	59493	IfStatement	if ( ! scope )		59240	0					
ANR	59494	Condition	! scope	346:7:11540:11545	59240	0	True				
ANR	59495	UnaryOperationExpression	! scope		59240	0					
ANR	59496	UnaryOperator	!		59240	0					
ANR	59497	Identifier	scope		59240	1					
ANR	59498	CompoundStatement		44:15:1081:1081	59240	1					
ANR	59499	ExpressionStatement	"zend_error ( E_ERROR , ""Cannot access parent:: when no class scope is active"" )"	347:4:11554:11629	59240	0	True				
ANR	59500	CallExpression	"zend_error ( E_ERROR , ""Cannot access parent:: when no class scope is active"" )"		59240	0					
ANR	59501	Callee	zend_error		59240	0					
ANR	59502	Identifier	zend_error		59240	0					
ANR	59503	ArgumentList	E_ERROR		59240	1					
ANR	59504	Argument	E_ERROR		59240	0					
ANR	59505	Identifier	E_ERROR		59240	0					
ANR	59506	Argument	"""Cannot access parent:: when no class scope is active"""		59240	1					
ANR	59507	PrimaryExpression	"""Cannot access parent:: when no class scope is active"""		59240	0					
ANR	59508	ElseStatement	else		59240	0					
ANR	59509	IfStatement	if ( ! scope -> parent )		59240	0					
ANR	59510	Condition	! scope -> parent	348:14:11645:11658	59240	0	True				
ANR	59511	UnaryOperationExpression	! scope -> parent		59240	0					
ANR	59512	UnaryOperator	!		59240	0					
ANR	59513	PtrMemberAccess	scope -> parent		59240	1					
ANR	59514	Identifier	scope		59240	0					
ANR	59515	Identifier	parent		59240	1					
ANR	59516	CompoundStatement		46:30:1194:1194	59240	1					
ANR	59517	ExpressionStatement	"zend_error ( E_ERROR , ""Cannot access parent:: when current class scope has no parent"" )"	349:4:11667:11751	59240	0	True				
ANR	59518	CallExpression	"zend_error ( E_ERROR , ""Cannot access parent:: when current class scope has no parent"" )"		59240	0					
ANR	59519	Callee	zend_error		59240	0					
ANR	59520	Identifier	zend_error		59240	0					
ANR	59521	ArgumentList	E_ERROR		59240	1					
ANR	59522	Argument	E_ERROR		59240	0					
ANR	59523	Identifier	E_ERROR		59240	0					
ANR	59524	Argument	"""Cannot access parent:: when current class scope has no parent"""		59240	1					
ANR	59525	PrimaryExpression	"""Cannot access parent:: when current class scope has no parent"""		59240	0					
ANR	59526	ElseStatement	else		59240	0					
ANR	59527	CompoundStatement		48:10:1296:1296	59240	0					
ANR	59528	ExpressionStatement	ce = scope -> parent	351:4:11769:11787	59240	0	True				
ANR	59529	AssignmentExpression	ce = scope -> parent		59240	0		=			
ANR	59530	Identifier	ce		59240	0					
ANR	59531	PtrMemberAccess	scope -> parent		59240	1					
ANR	59532	Identifier	scope		59240	0					
ANR	59533	Identifier	parent		59240	1					
ANR	59534	ExpressionStatement	efree ( lcname )	353:3:11797:11810	59240	1	True				
ANR	59535	CallExpression	efree ( lcname )		59240	0					
ANR	59536	Callee	efree		59240	0					
ANR	59537	Identifier	efree		59240	0					
ANR	59538	ArgumentList	lcname		59240	1					
ANR	59539	Argument	lcname		59240	0					
ANR	59540	Identifier	lcname		59240	0					
ANR	59541	ElseStatement	else		59240	0					
ANR	59542	IfStatement	"if ( class_name_len == sizeof ( ""static"" ) - 1 && ! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 ) )"		59240	0					
ANR	59543	Condition	"class_name_len == sizeof ( ""static"" ) - 1 && ! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"	354:13:11825:11922	59240	0	True				
ANR	59544	AndExpression	"class_name_len == sizeof ( ""static"" ) - 1 && ! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"		59240	0		&&			
ANR	59545	EqualityExpression	"class_name_len == sizeof ( ""static"" ) - 1"		59240	0		==			
ANR	59546	Identifier	class_name_len		59240	0					
ANR	59547	AdditiveExpression	"sizeof ( ""static"" ) - 1"		59240	1		-			
ANR	59548	SizeofExpression	"sizeof ( ""static"" )"		59240	0					
ANR	59549	Sizeof	sizeof		59240	0					
ANR	59550	PrimaryExpression	"""static"""		59240	1					
ANR	59551	PrimaryExpression	1		59240	1					
ANR	59552	UnaryOperationExpression	"! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"		59240	1					
ANR	59553	UnaryOperator	!		59240	0					
ANR	59554	CallExpression	"memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"		59240	1					
ANR	59555	Callee	memcmp		59240	0					
ANR	59556	Identifier	memcmp		59240	0					
ANR	59557	ArgumentList	lcname		59240	1					
ANR	59558	Argument	lcname		59240	0					
ANR	59559	Identifier	lcname		59240	0					
ANR	59560	Argument	"""static"""		59240	1					
ANR	59561	PrimaryExpression	"""static"""		59240	0					
ANR	59562	Argument	"sizeof ( ""static"" ) - 1"		59240	2					
ANR	59563	AdditiveExpression	"sizeof ( ""static"" ) - 1"		59240	0		-			
ANR	59564	SizeofExpression	"sizeof ( ""static"" )"		59240	0					
ANR	59565	Sizeof	sizeof		59240	0					
ANR	59566	PrimaryExpression	"""static"""		59240	1					
ANR	59567	PrimaryExpression	1		59240	1					
ANR	59568	CompoundStatement		53:60:1458:1458	59240	1					
ANR	59569	IfStatement	if ( EG ( called_scope ) )		59240	0					
ANR	59570	Condition	EG ( called_scope )	356:7:11934:11949	59240	0	True				
ANR	59571	CallExpression	EG ( called_scope )		59240	0					
ANR	59572	Callee	EG		59240	0					
ANR	59573	Identifier	EG		59240	0					
ANR	59574	ArgumentList	called_scope		59240	1					
ANR	59575	Argument	called_scope		59240	0					
ANR	59576	Identifier	called_scope		59240	0					
ANR	59577	CompoundStatement		54:25:1485:1485	59240	1					
ANR	59578	ExpressionStatement	ce = EG ( called_scope )	357:4:11958:11979	59240	0	True				
ANR	59579	AssignmentExpression	ce = EG ( called_scope )		59240	0		=			
ANR	59580	Identifier	ce		59240	0					
ANR	59581	CallExpression	EG ( called_scope )		59240	1					
ANR	59582	Callee	EG		59240	0					
ANR	59583	Identifier	EG		59240	0					
ANR	59584	ArgumentList	called_scope		59240	1					
ANR	59585	Argument	called_scope		59240	0					
ANR	59586	Identifier	called_scope		59240	0					
ANR	59587	ElseStatement	else		59240	0					
ANR	59588	CompoundStatement		56:10:1524:1524	59240	0					
ANR	59589	ExpressionStatement	"zend_error ( E_ERROR , ""Cannot access static:: when no class scope is active"" )"	359:4:11997:12072	59240	0	True				
ANR	59590	CallExpression	"zend_error ( E_ERROR , ""Cannot access static:: when no class scope is active"" )"		59240	0					
ANR	59591	Callee	zend_error		59240	0					
ANR	59592	Identifier	zend_error		59240	0					
ANR	59593	ArgumentList	E_ERROR		59240	1					
ANR	59594	Argument	E_ERROR		59240	0					
ANR	59595	Identifier	E_ERROR		59240	0					
ANR	59596	Argument	"""Cannot access static:: when no class scope is active"""		59240	1					
ANR	59597	PrimaryExpression	"""Cannot access static:: when no class scope is active"""		59240	0					
ANR	59598	ExpressionStatement	efree ( lcname )	361:3:12082:12095	59240	1	True				
ANR	59599	CallExpression	efree ( lcname )		59240	0					
ANR	59600	Callee	efree		59240	0					
ANR	59601	Identifier	efree		59240	0					
ANR	59602	ArgumentList	lcname		59240	1					
ANR	59603	Argument	lcname		59240	0					
ANR	59604	Identifier	lcname		59240	0					
ANR	59605	ElseStatement	else		59240	0					
ANR	59606	CompoundStatement		60:9:1639:1639	59240	0					
ANR	59607	ExpressionStatement	efree ( lcname )	363:3:12111:12124	59240	0	True				
ANR	59608	CallExpression	efree ( lcname )		59240	0					
ANR	59609	Callee	efree		59240	0					
ANR	59610	Identifier	efree		59240	0					
ANR	59611	ArgumentList	lcname		59240	1					
ANR	59612	Argument	lcname		59240	0					
ANR	59613	Identifier	lcname		59240	0					
ANR	59614	Statement	ce	364:3:12129:12130	59240	1	True				
ANR	59615	Statement	=	364:6:12132:12132	59240	2	True				
ANR	59616	Statement	zend_fetch_class	364:8:12134:12149	59240	3	True				
ANR	59617	Statement	(	364:24:12150:12150	59240	4	True				
ANR	59618	Statement	class_name	364:25:12151:12160	59240	5	True				
ANR	59619	Statement	","	364:35:12161:12161	59240	6	True				
ANR	59620	Statement	class_name_len	364:37:12163:12176	59240	7	True				
ANR	59621	Statement	","	364:51:12177:12177	59240	8	True				
ANR	59622	Statement	flags	364:53:12179:12183	59240	9	True				
ANR	59623	Statement	TSRMLS_CC	364:59:12185:12193	59240	10	True				
ANR	59624	Statement	)	364:68:12194:12194	59240	11	True				
ANR	59625	ExpressionStatement		364:69:12195:12195	59240	12	True				
ANR	59626	IfStatement	if ( retval && ce )		59240	8					
ANR	59627	Condition	retval && ce	366:6:12207:12218	59240	0	True				
ANR	59628	AndExpression	retval && ce		59240	0		&&			
ANR	59629	Identifier	retval		59240	0					
ANR	59630	Identifier	ce		59240	1					
ANR	59631	CompoundStatement		64:20:1754:1754	59240	1					
ANR	59632	IfStatement	"if ( zend_hash_find ( & ce -> constants_table , constant_name , const_name_len + 1 , ( void * * ) & ret_constant ) != SUCCESS )"		59240	0					
ANR	59633	Condition	"zend_hash_find ( & ce -> constants_table , constant_name , const_name_len + 1 , ( void * * ) & ret_constant ) != SUCCESS"	367:7:12230:12334	59240	0	True				
ANR	59634	EqualityExpression	"zend_hash_find ( & ce -> constants_table , constant_name , const_name_len + 1 , ( void * * ) & ret_constant ) != SUCCESS"		59240	0		!=			
ANR	59635	CallExpression	"zend_hash_find ( & ce -> constants_table , constant_name , const_name_len + 1 , ( void * * ) & ret_constant )"		59240	0					
ANR	59636	Callee	zend_hash_find		59240	0					
ANR	59637	Identifier	zend_hash_find		59240	0					
ANR	59638	ArgumentList	& ce -> constants_table		59240	1					
ANR	59639	Argument	& ce -> constants_table		59240	0					
ANR	59640	UnaryOperationExpression	& ce -> constants_table		59240	0					
ANR	59641	UnaryOperator	&		59240	0					
ANR	59642	PtrMemberAccess	ce -> constants_table		59240	1					
ANR	59643	Identifier	ce		59240	0					
ANR	59644	Identifier	constants_table		59240	1					
ANR	59645	Argument	constant_name		59240	1					
ANR	59646	Identifier	constant_name		59240	0					
ANR	59647	Argument	const_name_len + 1		59240	2					
ANR	59648	AdditiveExpression	const_name_len + 1		59240	0		+			
ANR	59649	Identifier	const_name_len		59240	0					
ANR	59650	PrimaryExpression	1		59240	1					
ANR	59651	Argument	( void * * ) & ret_constant		59240	3					
ANR	59652	CastExpression	( void * * ) & ret_constant		59240	0					
ANR	59653	CastTarget	void * *		59240	0					
ANR	59654	UnaryOperationExpression	& ret_constant		59240	1					
ANR	59655	UnaryOperator	&		59240	0					
ANR	59656	Identifier	ret_constant		59240	1					
ANR	59657	Identifier	SUCCESS		59240	1					
ANR	59658	CompoundStatement		65:114:1870:1870	59240	1					
ANR	59659	ExpressionStatement	retval = 0	368:4:12343:12353	59240	0	True				
ANR	59660	AssignmentExpression	retval = 0		59240	0		=			
ANR	59661	Identifier	retval		59240	0					
ANR	59662	PrimaryExpression	0		59240	1					
ANR	59663	IfStatement	if ( ( flags & ZEND_FETCH_CLASS_SILENT ) == 0 )		59240	1					
ANR	59664	Condition	( flags & ZEND_FETCH_CLASS_SILENT ) == 0	369:8:12363:12400	59240	0	True				
ANR	59665	EqualityExpression	( flags & ZEND_FETCH_CLASS_SILENT ) == 0		59240	0		==			
ANR	59666	BitAndExpression	flags & ZEND_FETCH_CLASS_SILENT		59240	0		&			
ANR	59667	Identifier	flags		59240	0					
ANR	59668	Identifier	ZEND_FETCH_CLASS_SILENT		59240	1					
ANR	59669	PrimaryExpression	0		59240	1					
ANR	59670	CompoundStatement		67:48:1936:1936	59240	1					
ANR	59671	ExpressionStatement	"zend_error ( E_ERROR , ""Undefined class constant '%s::%s'"" , class_name , constant_name )"	370:5:12410:12493	59240	0	True				
ANR	59672	CallExpression	"zend_error ( E_ERROR , ""Undefined class constant '%s::%s'"" , class_name , constant_name )"		59240	0					
ANR	59673	Callee	zend_error		59240	0					
ANR	59674	Identifier	zend_error		59240	0					
ANR	59675	ArgumentList	E_ERROR		59240	1					
ANR	59676	Argument	E_ERROR		59240	0					
ANR	59677	Identifier	E_ERROR		59240	0					
ANR	59678	Argument	"""Undefined class constant '%s::%s'"""		59240	1					
ANR	59679	PrimaryExpression	"""Undefined class constant '%s::%s'"""		59240	0					
ANR	59680	Argument	class_name		59240	2					
ANR	59681	Identifier	class_name		59240	0					
ANR	59682	Argument	constant_name		59240	3					
ANR	59683	Identifier	constant_name		59240	0					
ANR	59684	ElseStatement	else		59240	0					
ANR	59685	IfStatement	if ( ! ce )		59240	0					
ANR	59686	Condition	! ce	373:13:12519:12521	59240	0	True				
ANR	59687	UnaryOperationExpression	! ce		59240	0					
ANR	59688	UnaryOperator	!		59240	0					
ANR	59689	Identifier	ce		59240	1					
ANR	59690	CompoundStatement		71:18:2057:2057	59240	1					
ANR	59691	ExpressionStatement	retval = 0	374:3:12529:12539	59240	0	True				
ANR	59692	AssignmentExpression	retval = 0		59240	0		=			
ANR	59693	Identifier	retval		59240	0					
ANR	59694	PrimaryExpression	0		59240	1					
ANR	59695	ExpressionStatement	efree ( class_name )	376:2:12547:12564	59240	9	True				
ANR	59696	CallExpression	efree ( class_name )		59240	0					
ANR	59697	Callee	efree		59240	0					
ANR	59698	Identifier	efree		59240	0					
ANR	59699	ArgumentList	class_name		59240	1					
ANR	59700	Argument	class_name		59240	0					
ANR	59701	Identifier	class_name		59240	0					
ANR	59702	GotoStatement	goto finish ;	377:2:12568:12579	59240	10	True				
ANR	59703	Identifier	finish		59240	0					
ANR	59704	IfStatement	"if ( ( colon = zend_memrchr ( name , '\\\\' , name_len ) ) != NULL )"		59240	8					
ANR	59705	Condition	"( colon = zend_memrchr ( name , '\\\\' , name_len ) ) != NULL"	381:5:12616:12667	59240	0	True				
ANR	59706	EqualityExpression	"( colon = zend_memrchr ( name , '\\\\' , name_len ) ) != NULL"		59240	0		!=			
ANR	59707	AssignmentExpression	"colon = zend_memrchr ( name , '\\\\' , name_len )"		59240	0		=			
ANR	59708	Identifier	colon		59240	0					
ANR	59709	CallExpression	"zend_memrchr ( name , '\\\\' , name_len )"		59240	1					
ANR	59710	Callee	zend_memrchr		59240	0					
ANR	59711	Identifier	zend_memrchr		59240	0					
ANR	59712	ArgumentList	name		59240	1					
ANR	59713	Argument	name		59240	0					
ANR	59714	Identifier	name		59240	0					
ANR	59715	Argument	'\\\\'		59240	1					
ANR	59716	PrimaryExpression	'\\\\'		59240	0					
ANR	59717	Argument	name_len		59240	2					
ANR	59718	Identifier	name_len		59240	0					
ANR	59719	Identifier	NULL		59240	1					
ANR	59720	CompoundStatement		85:2:2378:2397	59240	1					
ANR	59721	IdentifierDeclStatement	int prefix_len = colon - name ;	383:2:12705:12734	59240	0	True				
ANR	59722	IdentifierDecl	prefix_len = colon - name		59240	0					
ANR	59723	IdentifierDeclType	int		59240	0					
ANR	59724	Identifier	prefix_len		59240	1					
ANR	59725	AssignmentExpression	prefix_len = colon - name		59240	2		=			
ANR	59726	Identifier	prefix_len		59240	0					
ANR	59727	AdditiveExpression	colon - name		59240	1		-			
ANR	59728	Identifier	colon		59240	0					
ANR	59729	Identifier	name		59240	1					
ANR	59730	IdentifierDeclStatement	int const_name_len = name_len - prefix_len - 1 ;	384:2:12738:12784	59240	1	True				
ANR	59731	IdentifierDecl	const_name_len = name_len - prefix_len - 1		59240	0					
ANR	59732	IdentifierDeclType	int		59240	0					
ANR	59733	Identifier	const_name_len		59240	1					
ANR	59734	AssignmentExpression	const_name_len = name_len - prefix_len - 1		59240	2		=			
ANR	59735	Identifier	const_name_len		59240	0					
ANR	59736	AdditiveExpression	name_len - prefix_len - 1		59240	1		-			
ANR	59737	Identifier	name_len		59240	0					
ANR	59738	AdditiveExpression	prefix_len - 1		59240	1		-			
ANR	59739	Identifier	prefix_len		59240	0					
ANR	59740	PrimaryExpression	1		59240	1					
ANR	59741	IdentifierDeclStatement	const char * constant_name = colon + 1 ;	385:2:12788:12825	59240	2	True				
ANR	59742	IdentifierDecl	* constant_name = colon + 1		59240	0					
ANR	59743	IdentifierDeclType	const char *		59240	0					
ANR	59744	Identifier	constant_name		59240	1					
ANR	59745	AssignmentExpression	* constant_name = colon + 1		59240	2		=			
ANR	59746	Identifier	constant_name		59240	0					
ANR	59747	AdditiveExpression	colon + 1		59240	1		+			
ANR	59748	Identifier	colon		59240	0					
ANR	59749	PrimaryExpression	1		59240	1					
ANR	59750	IdentifierDeclStatement	char * lcname ;	386:2:12829:12841	59240	3	True				
ANR	59751	IdentifierDecl	* lcname		59240	0					
ANR	59752	IdentifierDeclType	char *		59240	0					
ANR	59753	Identifier	lcname		59240	1					
ANR	59754	IdentifierDeclStatement	int found_const = 0 ;	387:2:12845:12864	59240	4	True				
ANR	59755	IdentifierDecl	found_const = 0		59240	0					
ANR	59756	IdentifierDeclType	int		59240	0					
ANR	59757	Identifier	found_const		59240	1					
ANR	59758	AssignmentExpression	found_const = 0		59240	2		=			
ANR	59759	Identifier	found_const		59240	0					
ANR	59760	PrimaryExpression	0		59240	1					
ANR	59761	ExpressionStatement	"lcname = zend_str_tolower_dup ( name , prefix_len )"	389:2:12869:12916	59240	5	True				
ANR	59762	AssignmentExpression	"lcname = zend_str_tolower_dup ( name , prefix_len )"		59240	0		=			
ANR	59763	Identifier	lcname		59240	0					
ANR	59764	CallExpression	"zend_str_tolower_dup ( name , prefix_len )"		59240	1					
ANR	59765	Callee	zend_str_tolower_dup		59240	0					
ANR	59766	Identifier	zend_str_tolower_dup		59240	0					
ANR	59767	ArgumentList	name		59240	1					
ANR	59768	Argument	name		59240	0					
ANR	59769	Identifier	name		59240	0					
ANR	59770	Argument	prefix_len		59240	1					
ANR	59771	Identifier	prefix_len		59240	0					
ANR	59772	ExpressionStatement	"lcname = erealloc ( lcname , prefix_len + 1 + const_name_len + 1 )"	393:2:13021:13083	59240	6	True				
ANR	59773	AssignmentExpression	"lcname = erealloc ( lcname , prefix_len + 1 + const_name_len + 1 )"		59240	0		=			
ANR	59774	Identifier	lcname		59240	0					
ANR	59775	CallExpression	"erealloc ( lcname , prefix_len + 1 + const_name_len + 1 )"		59240	1					
ANR	59776	Callee	erealloc		59240	0					
ANR	59777	Identifier	erealloc		59240	0					
ANR	59778	ArgumentList	lcname		59240	1					
ANR	59779	Argument	lcname		59240	0					
ANR	59780	Identifier	lcname		59240	0					
ANR	59781	Argument	prefix_len + 1 + const_name_len + 1		59240	1					
ANR	59782	AdditiveExpression	prefix_len + 1 + const_name_len + 1		59240	0		+			
ANR	59783	Identifier	prefix_len		59240	0					
ANR	59784	AdditiveExpression	1 + const_name_len + 1		59240	1		+			
ANR	59785	PrimaryExpression	1		59240	0					
ANR	59786	AdditiveExpression	const_name_len + 1		59240	1		+			
ANR	59787	Identifier	const_name_len		59240	0					
ANR	59788	PrimaryExpression	1		59240	1					
ANR	59789	ExpressionStatement	lcname [ prefix_len ] = '\\\\'	394:2:13087:13112	59240	7	True				
ANR	59790	AssignmentExpression	lcname [ prefix_len ] = '\\\\'		59240	0		=			
ANR	59791	ArrayIndexing	lcname [ prefix_len ]		59240	0					
ANR	59792	Identifier	lcname		59240	0					
ANR	59793	Identifier	prefix_len		59240	1					
ANR	59794	PrimaryExpression	'\\\\'		59240	1					
ANR	59795	ExpressionStatement	"memcpy ( lcname + prefix_len + 1 , constant_name , const_name_len + 1 )"	395:2:13116:13182	59240	8	True				
ANR	59796	CallExpression	"memcpy ( lcname + prefix_len + 1 , constant_name , const_name_len + 1 )"		59240	0					
ANR	59797	Callee	memcpy		59240	0					
ANR	59798	Identifier	memcpy		59240	0					
ANR	59799	ArgumentList	lcname + prefix_len + 1		59240	1					
ANR	59800	Argument	lcname + prefix_len + 1		59240	0					
ANR	59801	AdditiveExpression	lcname + prefix_len + 1		59240	0		+			
ANR	59802	Identifier	lcname		59240	0					
ANR	59803	AdditiveExpression	prefix_len + 1		59240	1		+			
ANR	59804	Identifier	prefix_len		59240	0					
ANR	59805	PrimaryExpression	1		59240	1					
ANR	59806	Argument	constant_name		59240	1					
ANR	59807	Identifier	constant_name		59240	0					
ANR	59808	Argument	const_name_len + 1		59240	2					
ANR	59809	AdditiveExpression	const_name_len + 1		59240	0		+			
ANR	59810	Identifier	const_name_len		59240	0					
ANR	59811	PrimaryExpression	1		59240	1					
ANR	59812	IfStatement	"if ( zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c ) == SUCCESS )"		59240	9					
ANR	59813	Condition	"zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c ) == SUCCESS"	397:6:13191:13294	59240	0	True				
ANR	59814	EqualityExpression	"zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c ) == SUCCESS"		59240	0		==			
ANR	59815	CallExpression	"zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c )"		59240	0					
ANR	59816	Callee	zend_hash_find		59240	0					
ANR	59817	Identifier	zend_hash_find		59240	0					
ANR	59818	ArgumentList	EG ( zend_constants )		59240	1					
ANR	59819	Argument	EG ( zend_constants )		59240	0					
ANR	59820	CallExpression	EG ( zend_constants )		59240	0					
ANR	59821	Callee	EG		59240	0					
ANR	59822	Identifier	EG		59240	0					
ANR	59823	ArgumentList	zend_constants		59240	1					
ANR	59824	Argument	zend_constants		59240	0					
ANR	59825	Identifier	zend_constants		59240	0					
ANR	59826	Argument	lcname		59240	1					
ANR	59827	Identifier	lcname		59240	0					
ANR	59828	Argument	prefix_len + 1 + const_name_len + 1		59240	2					
ANR	59829	AdditiveExpression	prefix_len + 1 + const_name_len + 1		59240	0		+			
ANR	59830	Identifier	prefix_len		59240	0					
ANR	59831	AdditiveExpression	1 + const_name_len + 1		59240	1		+			
ANR	59832	PrimaryExpression	1		59240	0					
ANR	59833	AdditiveExpression	const_name_len + 1		59240	1		+			
ANR	59834	Identifier	const_name_len		59240	0					
ANR	59835	PrimaryExpression	1		59240	1					
ANR	59836	Argument	( void * * ) & c		59240	3					
ANR	59837	CastExpression	( void * * ) & c		59240	0					
ANR	59838	CastTarget	void * *		59240	0					
ANR	59839	UnaryOperationExpression	& c		59240	1					
ANR	59840	UnaryOperator	&		59240	0					
ANR	59841	Identifier	c		59240	1					
ANR	59842	Identifier	SUCCESS		59240	1					
ANR	59843	CompoundStatement		95:112:2830:2830	59240	1					
ANR	59844	ExpressionStatement	found_const = 1	398:3:13302:13317	59240	0	True				
ANR	59845	AssignmentExpression	found_const = 1		59240	0		=			
ANR	59846	Identifier	found_const		59240	0					
ANR	59847	PrimaryExpression	1		59240	1					
ANR	59848	ElseStatement	else		59240	0					
ANR	59849	CompoundStatement		97:9:2861:2861	59240	0					
ANR	59850	ExpressionStatement	"zend_str_tolower ( lcname + prefix_len + 1 , const_name_len )"	401:3:13356:13413	59240	0	True				
ANR	59851	CallExpression	"zend_str_tolower ( lcname + prefix_len + 1 , const_name_len )"		59240	0					
ANR	59852	Callee	zend_str_tolower		59240	0					
ANR	59853	Identifier	zend_str_tolower		59240	0					
ANR	59854	ArgumentList	lcname + prefix_len + 1		59240	1					
ANR	59855	Argument	lcname + prefix_len + 1		59240	0					
ANR	59856	AdditiveExpression	lcname + prefix_len + 1		59240	0		+			
ANR	59857	Identifier	lcname		59240	0					
ANR	59858	AdditiveExpression	prefix_len + 1		59240	1		+			
ANR	59859	Identifier	prefix_len		59240	0					
ANR	59860	PrimaryExpression	1		59240	1					
ANR	59861	Argument	const_name_len		59240	1					
ANR	59862	Identifier	const_name_len		59240	0					
ANR	59863	IfStatement	"if ( zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c ) == SUCCESS )"		59240	1					
ANR	59864	Condition	"zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c ) == SUCCESS"	402:7:13422:13525	59240	0	True				
ANR	59865	EqualityExpression	"zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c ) == SUCCESS"		59240	0		==			
ANR	59866	CallExpression	"zend_hash_find ( EG ( zend_constants ) , lcname , prefix_len + 1 + const_name_len + 1 , ( void * * ) & c )"		59240	0					
ANR	59867	Callee	zend_hash_find		59240	0					
ANR	59868	Identifier	zend_hash_find		59240	0					
ANR	59869	ArgumentList	EG ( zend_constants )		59240	1					
ANR	59870	Argument	EG ( zend_constants )		59240	0					
ANR	59871	CallExpression	EG ( zend_constants )		59240	0					
ANR	59872	Callee	EG		59240	0					
ANR	59873	Identifier	EG		59240	0					
ANR	59874	ArgumentList	zend_constants		59240	1					
ANR	59875	Argument	zend_constants		59240	0					
ANR	59876	Identifier	zend_constants		59240	0					
ANR	59877	Argument	lcname		59240	1					
ANR	59878	Identifier	lcname		59240	0					
ANR	59879	Argument	prefix_len + 1 + const_name_len + 1		59240	2					
ANR	59880	AdditiveExpression	prefix_len + 1 + const_name_len + 1		59240	0		+			
ANR	59881	Identifier	prefix_len		59240	0					
ANR	59882	AdditiveExpression	1 + const_name_len + 1		59240	1		+			
ANR	59883	PrimaryExpression	1		59240	0					
ANR	59884	AdditiveExpression	const_name_len + 1		59240	1		+			
ANR	59885	Identifier	const_name_len		59240	0					
ANR	59886	PrimaryExpression	1		59240	1					
ANR	59887	Argument	( void * * ) & c		59240	3					
ANR	59888	CastExpression	( void * * ) & c		59240	0					
ANR	59889	CastTarget	void * *		59240	0					
ANR	59890	UnaryOperationExpression	& c		59240	1					
ANR	59891	UnaryOperator	&		59240	0					
ANR	59892	Identifier	c		59240	1					
ANR	59893	Identifier	SUCCESS		59240	1					
ANR	59894	CompoundStatement		100:113:3061:3061	59240	1					
ANR	59895	IfStatement	if ( ( c -> flags & CONST_CS ) == 0 )		59240	0					
ANR	59896	Condition	( c -> flags & CONST_CS ) == 0	403:8:13538:13563	59240	0	True				
ANR	59897	EqualityExpression	( c -> flags & CONST_CS ) == 0		59240	0		==			
ANR	59898	BitAndExpression	c -> flags & CONST_CS		59240	0		&			
ANR	59899	PtrMemberAccess	c -> flags		59240	0					
ANR	59900	Identifier	c		59240	0					
ANR	59901	Identifier	flags		59240	1					
ANR	59902	Identifier	CONST_CS		59240	1					
ANR	59903	PrimaryExpression	0		59240	1					
ANR	59904	CompoundStatement		101:36:3099:3099	59240	1					
ANR	59905	ExpressionStatement	found_const = 1	404:5:13573:13588	59240	0	True				
ANR	59906	AssignmentExpression	found_const = 1		59240	0		=			
ANR	59907	Identifier	found_const		59240	0					
ANR	59908	PrimaryExpression	1		59240	1					
ANR	59909	ExpressionStatement	efree ( lcname )	408:2:13607:13620	59240	10	True				
ANR	59910	CallExpression	efree ( lcname )		59240	0					
ANR	59911	Callee	efree		59240	0					
ANR	59912	Identifier	efree		59240	0					
ANR	59913	ArgumentList	lcname		59240	1					
ANR	59914	Argument	lcname		59240	0					
ANR	59915	Identifier	lcname		59240	0					
ANR	59916	IfStatement	if ( found_const )		59240	11					
ANR	59917	Condition	found_const	409:5:13627:13637	59240	0	True				
ANR	59918	Identifier	found_const		59240	0					
ANR	59919	CompoundStatement		107:18:3173:3173	59240	1					
ANR	59920	ExpressionStatement	* result = c -> value	410:3:13645:13663	59240	0	True				
ANR	59921	AssignmentExpression	* result = c -> value		59240	0		=			
ANR	59922	UnaryOperationExpression	* result		59240	0					
ANR	59923	UnaryOperator	*		59240	0					
ANR	59924	Identifier	result		59240	1					
ANR	59925	PtrMemberAccess	c -> value		59240	1					
ANR	59926	Identifier	c		59240	0					
ANR	59927	Identifier	value		59240	1					
ANR	59928	Statement	zval_update_constant_ex	411:3:13668:13690	59240	1	True				
ANR	59929	Statement	(	411:26:13691:13691	59240	2	True				
ANR	59930	Statement	&	411:27:13692:13692	59240	3	True				
ANR	59931	Statement	result	411:28:13693:13698	59240	4	True				
ANR	59932	Statement	","	411:34:13699:13699	59240	5	True				
ANR	59933	Statement	1	411:36:13701:13701	59240	6	True				
ANR	59934	Statement	","	411:37:13702:13702	59240	7	True				
ANR	59935	Statement	NULL	411:39:13704:13707	59240	8	True				
ANR	59936	Statement	TSRMLS_CC	411:44:13709:13717	59240	9	True				
ANR	59937	Statement	)	411:53:13718:13718	59240	10	True				
ANR	59938	ExpressionStatement		411:54:13719:13719	59240	11	True				
ANR	59939	ExpressionStatement	zval_copy_ctor ( result )	412:3:13724:13746	59240	12	True				
ANR	59940	CallExpression	zval_copy_ctor ( result )		59240	0					
ANR	59941	Callee	zval_copy_ctor		59240	0					
ANR	59942	Identifier	zval_copy_ctor		59240	0					
ANR	59943	ArgumentList	result		59240	1					
ANR	59944	Argument	result		59240	0					
ANR	59945	Identifier	result		59240	0					
ANR	59946	ExpressionStatement	"Z_SET_REFCOUNT_P ( result , 1 )"	413:3:13751:13778	59240	13	True				
ANR	59947	CallExpression	"Z_SET_REFCOUNT_P ( result , 1 )"		59240	0					
ANR	59948	Callee	Z_SET_REFCOUNT_P		59240	0					
ANR	59949	Identifier	Z_SET_REFCOUNT_P		59240	0					
ANR	59950	ArgumentList	result		59240	1					
ANR	59951	Argument	result		59240	0					
ANR	59952	Identifier	result		59240	0					
ANR	59953	Argument	1		59240	1					
ANR	59954	PrimaryExpression	1		59240	0					
ANR	59955	ExpressionStatement	Z_UNSET_ISREF_P ( result )	414:3:13783:13806	59240	14	True				
ANR	59956	CallExpression	Z_UNSET_ISREF_P ( result )		59240	0					
ANR	59957	Callee	Z_UNSET_ISREF_P		59240	0					
ANR	59958	Identifier	Z_UNSET_ISREF_P		59240	0					
ANR	59959	ArgumentList	result		59240	1					
ANR	59960	Argument	result		59240	0					
ANR	59961	Identifier	result		59240	0					
ANR	59962	ReturnStatement	return 1 ;	415:3:13811:13819	59240	15	True				
ANR	59963	PrimaryExpression	1		59240	0					
ANR	59964	IfStatement	if ( ( flags & IS_CONSTANT_UNQUALIFIED ) != 0 )		59240	12					
ANR	59965	Condition	( flags & IS_CONSTANT_UNQUALIFIED ) != 0	418:6:13907:13944	59240	0	True				
ANR	59966	EqualityExpression	( flags & IS_CONSTANT_UNQUALIFIED ) != 0		59240	0		!=			
ANR	59967	BitAndExpression	flags & IS_CONSTANT_UNQUALIFIED		59240	0		&			
ANR	59968	Identifier	flags		59240	0					
ANR	59969	Identifier	IS_CONSTANT_UNQUALIFIED		59240	1					
ANR	59970	PrimaryExpression	0		59240	1					
ANR	59971	CompoundStatement		116:46:3480:3480	59240	1					
ANR	59972	ExpressionStatement	name = constant_name	419:3:13952:13972	59240	0	True				
ANR	59973	AssignmentExpression	name = constant_name		59240	0		=			
ANR	59974	Identifier	name		59240	0					
ANR	59975	Identifier	constant_name		59240	1					
ANR	59976	ExpressionStatement	name_len = const_name_len	420:3:13977:14002	59240	1	True				
ANR	59977	AssignmentExpression	name_len = const_name_len		59240	0		=			
ANR	59978	Identifier	name_len		59240	0					
ANR	59979	Identifier	const_name_len		59240	1					
ANR	59980	Statement	return	421:3:14007:14012	59240	2	True				
ANR	59981	Statement	zend_get_constant	421:10:14014:14030	59240	3	True				
ANR	59982	Statement	(	421:27:14031:14031	59240	4	True				
ANR	59983	Statement	name	421:28:14032:14035	59240	5	True				
ANR	59984	Statement	","	421:32:14036:14036	59240	6	True				
ANR	59985	Statement	name_len	421:34:14038:14045	59240	7	True				
ANR	59986	Statement	","	421:42:14046:14046	59240	8	True				
ANR	59987	Statement	result	421:44:14048:14053	59240	9	True				
ANR	59988	Statement	TSRMLS_CC	421:51:14055:14063	59240	10	True				
ANR	59989	Statement	)	421:60:14064:14064	59240	11	True				
ANR	59990	ExpressionStatement		421:61:14065:14065	59240	12	True				
ANR	59991	ExpressionStatement	retval = 0	423:2:14073:14083	59240	13	True				
ANR	59992	AssignmentExpression	retval = 0		59240	0		=			
ANR	59993	Identifier	retval		59240	0					
ANR	59994	PrimaryExpression	0		59240	1					
ANR	59995	Label	finish :	424:0:14085:14091	59240	14	True				
ANR	59996	Identifier	finish		59240	0					
ANR	59997	IfStatement	if ( retval )		59240	15					
ANR	59998	Condition	retval	425:6:14099:14104	59240	0	True				
ANR	59999	Identifier	retval		59240	0					
ANR	60000	CompoundStatement		123:14:3640:3640	59240	1					
ANR	60001	Statement	zval_update_constant_ex	426:3:14112:14134	59240	0	True				
ANR	60002	Statement	(	426:26:14135:14135	59240	1	True				
ANR	60003	Statement	ret_constant	426:27:14136:14147	59240	2	True				
ANR	60004	Statement	","	426:39:14148:14148	59240	3	True				
ANR	60005	Statement	1	426:41:14150:14150	59240	4	True				
ANR	60006	Statement	","	426:42:14151:14151	59240	5	True				
ANR	60007	Statement	ce	426:44:14153:14154	59240	6	True				
ANR	60008	Statement	TSRMLS_CC	426:47:14156:14164	59240	7	True				
ANR	60009	Statement	)	426:56:14165:14165	59240	8	True				
ANR	60010	ExpressionStatement		426:57:14166:14166	59240	9	True				
ANR	60011	ExpressionStatement	* result = * * ret_constant	427:3:14171:14195	59240	10	True				
ANR	60012	AssignmentExpression	* result = * * ret_constant		59240	0		=			
ANR	60013	UnaryOperationExpression	* result		59240	0					
ANR	60014	UnaryOperator	*		59240	0					
ANR	60015	Identifier	result		59240	1					
ANR	60016	UnaryOperationExpression	* * ret_constant		59240	1					
ANR	60017	UnaryOperator	*		59240	0					
ANR	60018	UnaryOperationExpression	* ret_constant		59240	1					
ANR	60019	UnaryOperator	*		59240	0					
ANR	60020	Identifier	ret_constant		59240	1					
ANR	60021	ExpressionStatement	zval_copy_ctor ( result )	428:3:14200:14222	59240	11	True				
ANR	60022	CallExpression	zval_copy_ctor ( result )		59240	0					
ANR	60023	Callee	zval_copy_ctor		59240	0					
ANR	60024	Identifier	zval_copy_ctor		59240	0					
ANR	60025	ArgumentList	result		59240	1					
ANR	60026	Argument	result		59240	0					
ANR	60027	Identifier	result		59240	0					
ANR	60028	ExpressionStatement	INIT_PZVAL ( result )	429:3:14227:14245	59240	12	True				
ANR	60029	CallExpression	INIT_PZVAL ( result )		59240	0					
ANR	60030	Callee	INIT_PZVAL		59240	0					
ANR	60031	Identifier	INIT_PZVAL		59240	0					
ANR	60032	ArgumentList	result		59240	1					
ANR	60033	Argument	result		59240	0					
ANR	60034	Identifier	result		59240	0					
ANR	60035	ReturnStatement	return retval ;	432:2:14254:14267	59240	16	True				
ANR	60036	Identifier	retval		59240	0					
ANR	60037	Statement	return	435:1:14274:14279	59240	9	True				
ANR	60038	Statement	zend_get_constant	435:8:14281:14297	59240	10	True				
ANR	60039	Statement	(	435:25:14298:14298	59240	11	True				
ANR	60040	Statement	name	435:26:14299:14302	59240	12	True				
ANR	60041	Statement	","	435:30:14303:14303	59240	13	True				
ANR	60042	Statement	name_len	435:32:14305:14312	59240	14	True				
ANR	60043	Statement	","	435:40:14313:14313	59240	15	True				
ANR	60044	Statement	result	435:42:14315:14320	59240	16	True				
ANR	60045	Statement	TSRMLS_CC	435:49:14322:14330	59240	17	True				
ANR	60046	Statement	)	435:58:14331:14331	59240	18	True				
ANR	60047	ExpressionStatement		435:59:14332:14332	59240	19	True				
ANR	60048	ReturnType	ZEND_API int		59240	1					
ANR	60049	Identifier	zend_get_constant_ex		59240	2					
ANR	60050	ParameterList	"const char * name , uint name_len , zval * result , zend_class_entry * scope , ulong flags TSRMLS_DC"		59240	3					
ANR	60051	Parameter	const char * name	302:34:10371:10386	59240	0	True				
ANR	60052	ParameterType	const char *		59240	0					
ANR	60053	Identifier	name		59240	1					
ANR	60054	Parameter	uint name_len	302:52:10389:10401	59240	1	True				
ANR	60055	ParameterType	uint		59240	0					
ANR	60056	Identifier	name_len		59240	1					
ANR	60057	Parameter	zval * result	302:67:10404:10415	59240	2	True				
ANR	60058	ParameterType	zval *		59240	0					
ANR	60059	Identifier	result		59240	1					
ANR	60060	Parameter	zend_class_entry * scope	302:81:10418:10440	59240	3	True				
ANR	60061	ParameterType	zend_class_entry *		59240	0					
ANR	60062	Identifier	scope		59240	1					
ANR	60063	Parameter	ulong flags TSRMLS_DC	302:106:10443:10463	59240	4	True				
ANR	60064	ParameterType	ulong flags		59240	0					
ANR	60065	Identifier	TSRMLS_DC		59240	1					
ANR	60066	CFGEntryNode	ENTRY		59240		True				
ANR	60067	CFGExitNode	EXIT		59240		True				
ANR	60068	Symbol	active_class_entry		59240						
ANR	60069	Symbol	called_scope		59240						
ANR	60070	Symbol	TSRMLS_DC		59240						
ANR	60071	Symbol	zend_hash_find		59240						
ANR	60072	Symbol	* lcname		59240						
ANR	60073	Symbol	memcmp		59240						
ANR	60074	Symbol	IS_CONSTANT_UNQUALIFIED		59240						
ANR	60075	Symbol	zend_constants		59240						
ANR	60076	Symbol	erealloc		59240						
ANR	60077	Symbol	EG		59240						
ANR	60078	Symbol	CONST_CS		59240						
ANR	60079	Symbol	NULL		59240						
ANR	60080	Symbol	* * ret_constant		59240						
ANR	60081	Symbol	in_execution		59240						
ANR	60082	Symbol	ret_constant		59240						
ANR	60083	Symbol	retval		59240						
ANR	60084	Symbol	const_name_len		59240						
ANR	60085	Symbol	name		59240						
ANR	60086	Symbol	* scope		59240						
ANR	60087	Symbol	* prefix_len		59240						
ANR	60088	Symbol	c -> flags		59240						
ANR	60089	Symbol	ZEND_FETCH_CLASS_SILENT		59240						
ANR	60090	Symbol	flags		59240						
ANR	60091	Symbol	prefix_len		59240						
ANR	60092	Symbol	& ret_constant		59240						
ANR	60093	Symbol	c -> value		59240						
ANR	60094	Symbol	result		59240						
ANR	60095	Symbol	constant_name		59240						
ANR	60096	Symbol	estrndup		59240						
ANR	60097	Symbol	found_const		59240						
ANR	60098	Symbol	* result		59240						
ANR	60099	Symbol	* ret_constant		59240						
ANR	60100	Symbol	scope		59240						
ANR	60101	Symbol	* ( colon - 1 )		59240						
ANR	60102	Symbol	name_len		59240						
ANR	60103	Symbol	class_name		59240						
ANR	60104	Symbol	zend_str_tolower_dup		59240						
ANR	60105	Symbol	* name		59240						
ANR	60106	Symbol	zend_memrchr		59240						
ANR	60107	Symbol	ce		59240						
ANR	60108	Symbol	c		59240						
ANR	60109	Symbol	SUCCESS		59240						
ANR	60110	Symbol	CG		59240						
ANR	60111	Symbol	scope -> parent		59240						
ANR	60112	Symbol	& c		59240						
ANR	60113	Symbol	* c		59240						
ANR	60114	Symbol	* colon		59240						
ANR	60115	Symbol	& ce -> constants_table		59240						
ANR	60116	Symbol	lcname		59240						
ANR	60117	Symbol	E_ERROR		59240						
ANR	60118	Symbol	colon		59240						
ANR	60119	Symbol	class_name_len		59240						
ANR	60120	Function	zend_quick_get_constant	438:0:14337:15600							
ANR	60121	FunctionDef	"zend_quick_get_constant (const zend_literal * key , ulong flags TSRMLS_DC)"		60120	0					
ANR	60122	CompoundStatement		439:0:14424:15600	60120	0					
ANR	60123	IdentifierDeclStatement	zend_constant * c ;	440:1:14427:14443	60120	0	True				
ANR	60124	IdentifierDecl	* c		60120	0					
ANR	60125	IdentifierDeclType	zend_constant *		60120	0					
ANR	60126	Identifier	c		60120	1					
ANR	60127	IfStatement	"if ( zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE )"		60120	1					
ANR	60128	Condition	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE"	442:5:14451:14586	60120	0	True				
ANR	60129	EqualityExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE"		60120	0		==			
ANR	60130	CallExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c )"		60120	0					
ANR	60131	Callee	zend_hash_quick_find		60120	0					
ANR	60132	Identifier	zend_hash_quick_find		60120	0					
ANR	60133	ArgumentList	EG ( zend_constants )		60120	1					
ANR	60134	Argument	EG ( zend_constants )		60120	0					
ANR	60135	CallExpression	EG ( zend_constants )		60120	0					
ANR	60136	Callee	EG		60120	0					
ANR	60137	Identifier	EG		60120	0					
ANR	60138	ArgumentList	zend_constants		60120	1					
ANR	60139	Argument	zend_constants		60120	0					
ANR	60140	Identifier	zend_constants		60120	0					
ANR	60141	Argument	Z_STRVAL ( key -> constant )		60120	1					
ANR	60142	CallExpression	Z_STRVAL ( key -> constant )		60120	0					
ANR	60143	Callee	Z_STRVAL		60120	0					
ANR	60144	Identifier	Z_STRVAL		60120	0					
ANR	60145	ArgumentList	key -> constant		60120	1					
ANR	60146	Argument	key -> constant		60120	0					
ANR	60147	PtrMemberAccess	key -> constant		60120	0					
ANR	60148	Identifier	key		60120	0					
ANR	60149	Identifier	constant		60120	1					
ANR	60150	Argument	Z_STRLEN ( key -> constant ) + 1		60120	2					
ANR	60151	AdditiveExpression	Z_STRLEN ( key -> constant ) + 1		60120	0		+			
ANR	60152	CallExpression	Z_STRLEN ( key -> constant )		60120	0					
ANR	60153	Callee	Z_STRLEN		60120	0					
ANR	60154	Identifier	Z_STRLEN		60120	0					
ANR	60155	ArgumentList	key -> constant		60120	1					
ANR	60156	Argument	key -> constant		60120	0					
ANR	60157	PtrMemberAccess	key -> constant		60120	0					
ANR	60158	Identifier	key		60120	0					
ANR	60159	Identifier	constant		60120	1					
ANR	60160	PrimaryExpression	1		60120	1					
ANR	60161	Argument	key -> hash_value		60120	3					
ANR	60162	PtrMemberAccess	key -> hash_value		60120	0					
ANR	60163	Identifier	key		60120	0					
ANR	60164	Identifier	hash_value		60120	1					
ANR	60165	Argument	( void * * ) & c		60120	4					
ANR	60166	CastExpression	( void * * ) & c		60120	0					
ANR	60167	CastTarget	void * *		60120	0					
ANR	60168	UnaryOperationExpression	& c		60120	1					
ANR	60169	UnaryOperator	&		60120	0					
ANR	60170	Identifier	c		60120	1					
ANR	60171	Identifier	FAILURE		60120	1					
ANR	60172	CompoundStatement		4:143:164:164	60120	1					
ANR	60173	ExpressionStatement	key ++	443:2:14593:14598	60120	0	True				
ANR	60174	PostIncDecOperationExpression	key ++		60120	0					
ANR	60175	Identifier	key		60120	0					
ANR	60176	IncDec	++		60120	1					
ANR	60177	IfStatement	"if ( zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE || ( c -> flags & CONST_CS ) != 0 )"		60120	1					
ANR	60178	Condition	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE || ( c -> flags & CONST_CS ) != 0"	444:6:14606:14777	60120	0	True				
ANR	60179	OrExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE || ( c -> flags & CONST_CS ) != 0"		60120	0		||			
ANR	60180	EqualityExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE"		60120	0		==			
ANR	60181	CallExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c )"		60120	0					
ANR	60182	Callee	zend_hash_quick_find		60120	0					
ANR	60183	Identifier	zend_hash_quick_find		60120	0					
ANR	60184	ArgumentList	EG ( zend_constants )		60120	1					
ANR	60185	Argument	EG ( zend_constants )		60120	0					
ANR	60186	CallExpression	EG ( zend_constants )		60120	0					
ANR	60187	Callee	EG		60120	0					
ANR	60188	Identifier	EG		60120	0					
ANR	60189	ArgumentList	zend_constants		60120	1					
ANR	60190	Argument	zend_constants		60120	0					
ANR	60191	Identifier	zend_constants		60120	0					
ANR	60192	Argument	Z_STRVAL ( key -> constant )		60120	1					
ANR	60193	CallExpression	Z_STRVAL ( key -> constant )		60120	0					
ANR	60194	Callee	Z_STRVAL		60120	0					
ANR	60195	Identifier	Z_STRVAL		60120	0					
ANR	60196	ArgumentList	key -> constant		60120	1					
ANR	60197	Argument	key -> constant		60120	0					
ANR	60198	PtrMemberAccess	key -> constant		60120	0					
ANR	60199	Identifier	key		60120	0					
ANR	60200	Identifier	constant		60120	1					
ANR	60201	Argument	Z_STRLEN ( key -> constant ) + 1		60120	2					
ANR	60202	AdditiveExpression	Z_STRLEN ( key -> constant ) + 1		60120	0		+			
ANR	60203	CallExpression	Z_STRLEN ( key -> constant )		60120	0					
ANR	60204	Callee	Z_STRLEN		60120	0					
ANR	60205	Identifier	Z_STRLEN		60120	0					
ANR	60206	ArgumentList	key -> constant		60120	1					
ANR	60207	Argument	key -> constant		60120	0					
ANR	60208	PtrMemberAccess	key -> constant		60120	0					
ANR	60209	Identifier	key		60120	0					
ANR	60210	Identifier	constant		60120	1					
ANR	60211	PrimaryExpression	1		60120	1					
ANR	60212	Argument	key -> hash_value		60120	3					
ANR	60213	PtrMemberAccess	key -> hash_value		60120	0					
ANR	60214	Identifier	key		60120	0					
ANR	60215	Identifier	hash_value		60120	1					
ANR	60216	Argument	( void * * ) & c		60120	4					
ANR	60217	CastExpression	( void * * ) & c		60120	0					
ANR	60218	CastTarget	void * *		60120	0					
ANR	60219	UnaryOperationExpression	& c		60120	1					
ANR	60220	UnaryOperator	&		60120	0					
ANR	60221	Identifier	c		60120	1					
ANR	60222	Identifier	FAILURE		60120	1					
ANR	60223	EqualityExpression	( c -> flags & CONST_CS ) != 0		60120	1		!=			
ANR	60224	BitAndExpression	c -> flags & CONST_CS		60120	0		&			
ANR	60225	PtrMemberAccess	c -> flags		60120	0					
ANR	60226	Identifier	c		60120	0					
ANR	60227	Identifier	flags		60120	1					
ANR	60228	Identifier	CONST_CS		60120	1					
ANR	60229	PrimaryExpression	0		60120	1					
ANR	60230	CompoundStatement		7:34:355:355	60120	1					
ANR	60231	IfStatement	if ( ( flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) )		60120	0					
ANR	60232	Condition	( flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )	446:7:14789:14902	60120	0	True				
ANR	60233	EqualityExpression	( flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		60120	0		==			
ANR	60234	BitAndExpression	flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		60120	0		&			
ANR	60235	Identifier	flags		60120	0					
ANR	60236	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		60120	1		|			
ANR	60237	Identifier	IS_CONSTANT_IN_NAMESPACE		60120	0					
ANR	60238	Identifier	IS_CONSTANT_UNQUALIFIED		60120	1					
ANR	60239	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		60120	1		|			
ANR	60240	Identifier	IS_CONSTANT_IN_NAMESPACE		60120	0					
ANR	60241	Identifier	IS_CONSTANT_UNQUALIFIED		60120	1					
ANR	60242	CompoundStatement		8:123:480:480	60120	1					
ANR	60243	ExpressionStatement	key ++	447:4:14911:14916	60120	0	True				
ANR	60244	PostIncDecOperationExpression	key ++		60120	0					
ANR	60245	Identifier	key		60120	0					
ANR	60246	IncDec	++		60120	1					
ANR	60247	IfStatement	"if ( zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE )"		60120	1					
ANR	60248	Condition	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE"	448:8:14926:15061	60120	0	True				
ANR	60249	EqualityExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE"		60120	0		==			
ANR	60250	CallExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c )"		60120	0					
ANR	60251	Callee	zend_hash_quick_find		60120	0					
ANR	60252	Identifier	zend_hash_quick_find		60120	0					
ANR	60253	ArgumentList	EG ( zend_constants )		60120	1					
ANR	60254	Argument	EG ( zend_constants )		60120	0					
ANR	60255	CallExpression	EG ( zend_constants )		60120	0					
ANR	60256	Callee	EG		60120	0					
ANR	60257	Identifier	EG		60120	0					
ANR	60258	ArgumentList	zend_constants		60120	1					
ANR	60259	Argument	zend_constants		60120	0					
ANR	60260	Identifier	zend_constants		60120	0					
ANR	60261	Argument	Z_STRVAL ( key -> constant )		60120	1					
ANR	60262	CallExpression	Z_STRVAL ( key -> constant )		60120	0					
ANR	60263	Callee	Z_STRVAL		60120	0					
ANR	60264	Identifier	Z_STRVAL		60120	0					
ANR	60265	ArgumentList	key -> constant		60120	1					
ANR	60266	Argument	key -> constant		60120	0					
ANR	60267	PtrMemberAccess	key -> constant		60120	0					
ANR	60268	Identifier	key		60120	0					
ANR	60269	Identifier	constant		60120	1					
ANR	60270	Argument	Z_STRLEN ( key -> constant ) + 1		60120	2					
ANR	60271	AdditiveExpression	Z_STRLEN ( key -> constant ) + 1		60120	0		+			
ANR	60272	CallExpression	Z_STRLEN ( key -> constant )		60120	0					
ANR	60273	Callee	Z_STRLEN		60120	0					
ANR	60274	Identifier	Z_STRLEN		60120	0					
ANR	60275	ArgumentList	key -> constant		60120	1					
ANR	60276	Argument	key -> constant		60120	0					
ANR	60277	PtrMemberAccess	key -> constant		60120	0					
ANR	60278	Identifier	key		60120	0					
ANR	60279	Identifier	constant		60120	1					
ANR	60280	PrimaryExpression	1		60120	1					
ANR	60281	Argument	key -> hash_value		60120	3					
ANR	60282	PtrMemberAccess	key -> hash_value		60120	0					
ANR	60283	Identifier	key		60120	0					
ANR	60284	Identifier	hash_value		60120	1					
ANR	60285	Argument	( void * * ) & c		60120	4					
ANR	60286	CastExpression	( void * * ) & c		60120	0					
ANR	60287	CastTarget	void * *		60120	0					
ANR	60288	UnaryOperationExpression	& c		60120	1					
ANR	60289	UnaryOperator	&		60120	0					
ANR	60290	Identifier	c		60120	1					
ANR	60291	Identifier	FAILURE		60120	1					
ANR	60292	CompoundStatement		10:146:639:639	60120	1					
ANR	60293	ExpressionStatement	key ++	449:8:15074:15079	60120	0	True				
ANR	60294	PostIncDecOperationExpression	key ++		60120	0					
ANR	60295	Identifier	key		60120	0					
ANR	60296	IncDec	++		60120	1					
ANR	60297	IfStatement	"if ( zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE || ( c -> flags & CONST_CS ) != 0 )"		60120	1					
ANR	60298	Condition	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE || ( c -> flags & CONST_CS ) != 0"	450:9:15090:15264	60120	0	True				
ANR	60299	OrExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE || ( c -> flags & CONST_CS ) != 0"		60120	0		||			
ANR	60300	EqualityExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c ) == FAILURE"		60120	0		==			
ANR	60301	CallExpression	"zend_hash_quick_find ( EG ( zend_constants ) , Z_STRVAL ( key -> constant ) , Z_STRLEN ( key -> constant ) + 1 , key -> hash_value , ( void * * ) & c )"		60120	0					
ANR	60302	Callee	zend_hash_quick_find		60120	0					
ANR	60303	Identifier	zend_hash_quick_find		60120	0					
ANR	60304	ArgumentList	EG ( zend_constants )		60120	1					
ANR	60305	Argument	EG ( zend_constants )		60120	0					
ANR	60306	CallExpression	EG ( zend_constants )		60120	0					
ANR	60307	Callee	EG		60120	0					
ANR	60308	Identifier	EG		60120	0					
ANR	60309	ArgumentList	zend_constants		60120	1					
ANR	60310	Argument	zend_constants		60120	0					
ANR	60311	Identifier	zend_constants		60120	0					
ANR	60312	Argument	Z_STRVAL ( key -> constant )		60120	1					
ANR	60313	CallExpression	Z_STRVAL ( key -> constant )		60120	0					
ANR	60314	Callee	Z_STRVAL		60120	0					
ANR	60315	Identifier	Z_STRVAL		60120	0					
ANR	60316	ArgumentList	key -> constant		60120	1					
ANR	60317	Argument	key -> constant		60120	0					
ANR	60318	PtrMemberAccess	key -> constant		60120	0					
ANR	60319	Identifier	key		60120	0					
ANR	60320	Identifier	constant		60120	1					
ANR	60321	Argument	Z_STRLEN ( key -> constant ) + 1		60120	2					
ANR	60322	AdditiveExpression	Z_STRLEN ( key -> constant ) + 1		60120	0		+			
ANR	60323	CallExpression	Z_STRLEN ( key -> constant )		60120	0					
ANR	60324	Callee	Z_STRLEN		60120	0					
ANR	60325	Identifier	Z_STRLEN		60120	0					
ANR	60326	ArgumentList	key -> constant		60120	1					
ANR	60327	Argument	key -> constant		60120	0					
ANR	60328	PtrMemberAccess	key -> constant		60120	0					
ANR	60329	Identifier	key		60120	0					
ANR	60330	Identifier	constant		60120	1					
ANR	60331	PrimaryExpression	1		60120	1					
ANR	60332	Argument	key -> hash_value		60120	3					
ANR	60333	PtrMemberAccess	key -> hash_value		60120	0					
ANR	60334	Identifier	key		60120	0					
ANR	60335	Identifier	hash_value		60120	1					
ANR	60336	Argument	( void * * ) & c		60120	4					
ANR	60337	CastExpression	( void * * ) & c		60120	0					
ANR	60338	CastTarget	void * *		60120	0					
ANR	60339	UnaryOperationExpression	& c		60120	1					
ANR	60340	UnaryOperator	&		60120	0					
ANR	60341	Identifier	c		60120	1					
ANR	60342	Identifier	FAILURE		60120	1					
ANR	60343	EqualityExpression	( c -> flags & CONST_CS ) != 0		60120	1		!=			
ANR	60344	BitAndExpression	c -> flags & CONST_CS		60120	0		&			
ANR	60345	PtrMemberAccess	c -> flags		60120	0					
ANR	60346	Identifier	c		60120	0					
ANR	60347	Identifier	flags		60120	1					
ANR	60348	Identifier	CONST_CS		60120	1					
ANR	60349	PrimaryExpression	0		60120	1					
ANR	60350	CompoundStatement		13:37:842:842	60120	1					
ANR	60351	ExpressionStatement	key --	453:6:15276:15281	60120	0	True				
ANR	60352	PostIncDecOperationExpression	key --		60120	0					
ANR	60353	Identifier	key		60120	0					
ANR	60354	IncDec	--		60120	1					
ANR	60355	Statement	if	454:6:15289:15290	60120	1	True				
ANR	60356	Statement	(	454:9:15292:15292	60120	2	True				
ANR	60357	Statement	!	454:10:15293:15293	60120	3	True				
ANR	60358	Statement	zend_get_special_constant	454:11:15294:15318	60120	4	True				
ANR	60359	Statement	(	454:36:15319:15319	60120	5	True				
ANR	60360	Statement	Z_STRVAL	454:37:15320:15327	60120	6	True				
ANR	60361	Statement	(	454:45:15328:15328	60120	7	True				
ANR	60362	Statement	key	454:46:15329:15331	60120	8	True				
ANR	60363	Statement	->	454:49:15332:15333	60120	9	True				
ANR	60364	Statement	constant	454:51:15334:15341	60120	10	True				
ANR	60365	Statement	)	454:59:15342:15342	60120	11	True				
ANR	60366	Statement	","	454:60:15343:15343	60120	12	True				
ANR	60367	Statement	Z_STRLEN	454:62:15345:15352	60120	13	True				
ANR	60368	Statement	(	454:70:15353:15353	60120	14	True				
ANR	60369	Statement	key	454:71:15354:15356	60120	15	True				
ANR	60370	Statement	->	454:74:15357:15358	60120	16	True				
ANR	60371	Statement	constant	454:76:15359:15366	60120	17	True				
ANR	60372	Statement	)	454:84:15367:15367	60120	18	True				
ANR	60373	Statement	","	454:85:15368:15368	60120	19	True				
ANR	60374	Statement	&	454:87:15370:15370	60120	20	True				
ANR	60375	Statement	c	454:88:15371:15371	60120	21	True				
ANR	60376	Statement	TSRMLS_CC	454:90:15373:15381	60120	22	True				
ANR	60377	Statement	)	454:99:15382:15382	60120	23	True				
ANR	60378	Statement	)	454:100:15383:15383	60120	24	True				
ANR	60379	CompoundStatement		16:102:960:960	60120	25					
ANR	60380	ReturnStatement	return NULL ;	455:7:15394:15405	60120	0	True				
ANR	60381	Identifier	NULL		60120	0					
ANR	60382	ElseStatement	else		60120	0					
ANR	60383	CompoundStatement		21:10:1013:1013	60120	0					
ANR	60384	ExpressionStatement	key --	460:4:15444:15449	60120	0	True				
ANR	60385	PostIncDecOperationExpression	key --		60120	0					
ANR	60386	Identifier	key		60120	0					
ANR	60387	IncDec	--		60120	1					
ANR	60388	Statement	if	461:4:15455:15456	60120	1	True				
ANR	60389	Statement	(	461:7:15458:15458	60120	2	True				
ANR	60390	Statement	!	461:8:15459:15459	60120	3	True				
ANR	60391	Statement	zend_get_special_constant	461:9:15460:15484	60120	4	True				
ANR	60392	Statement	(	461:34:15485:15485	60120	5	True				
ANR	60393	Statement	Z_STRVAL	461:35:15486:15493	60120	6	True				
ANR	60394	Statement	(	461:43:15494:15494	60120	7	True				
ANR	60395	Statement	key	461:44:15495:15497	60120	8	True				
ANR	60396	Statement	->	461:47:15498:15499	60120	9	True				
ANR	60397	Statement	constant	461:49:15500:15507	60120	10	True				
ANR	60398	Statement	)	461:57:15508:15508	60120	11	True				
ANR	60399	Statement	","	461:58:15509:15509	60120	12	True				
ANR	60400	Statement	Z_STRLEN	461:60:15511:15518	60120	13	True				
ANR	60401	Statement	(	461:68:15519:15519	60120	14	True				
ANR	60402	Statement	key	461:69:15520:15522	60120	15	True				
ANR	60403	Statement	->	461:72:15523:15524	60120	16	True				
ANR	60404	Statement	constant	461:74:15525:15532	60120	17	True				
ANR	60405	Statement	)	461:82:15533:15533	60120	18	True				
ANR	60406	Statement	","	461:83:15534:15534	60120	19	True				
ANR	60407	Statement	&	461:85:15536:15536	60120	20	True				
ANR	60408	Statement	c	461:86:15537:15537	60120	21	True				
ANR	60409	Statement	TSRMLS_CC	461:88:15539:15547	60120	22	True				
ANR	60410	Statement	)	461:97:15548:15548	60120	23	True				
ANR	60411	Statement	)	461:98:15549:15549	60120	24	True				
ANR	60412	CompoundStatement		23:100:1126:1126	60120	25					
ANR	60413	ReturnStatement	return NULL ;	462:5:15558:15569	60120	0	True				
ANR	60414	Identifier	NULL		60120	0					
ANR	60415	ReturnStatement	return c ;	467:1:15590:15598	60120	2	True				
ANR	60416	Identifier	c		60120	0					
ANR	60417	ReturnType	zend_constant *		60120	1					
ANR	60418	Identifier	zend_quick_get_constant		60120	2					
ANR	60419	ParameterList	"const zend_literal * key , ulong flags TSRMLS_DC"		60120	3					
ANR	60420	Parameter	const zend_literal * key	438:39:14376:14398	60120	0	True				
ANR	60421	ParameterType	const zend_literal *		60120	0					
ANR	60422	Identifier	key		60120	1					
ANR	60423	Parameter	ulong flags TSRMLS_DC	438:64:14401:14421	60120	1	True				
ANR	60424	ParameterType	ulong flags		60120	0					
ANR	60425	Identifier	TSRMLS_DC		60120	1					
ANR	60426	CFGEntryNode	ENTRY		60120		True				
ANR	60427	CFGExitNode	EXIT		60120		True				
ANR	60428	Symbol	EG		60120						
ANR	60429	Symbol	CONST_CS		60120						
ANR	60430	Symbol	c		60120						
ANR	60431	Symbol	c -> flags		60120						
ANR	60432	Symbol	NULL		60120						
ANR	60433	Symbol	IS_CONSTANT_IN_NAMESPACE		60120						
ANR	60434	Symbol	flags		60120						
ANR	60435	Symbol	* key		60120						
ANR	60436	Symbol	& c		60120						
ANR	60437	Symbol	Z_STRLEN		60120						
ANR	60438	Symbol	TSRMLS_DC		60120						
ANR	60439	Symbol	FAILURE		60120						
ANR	60440	Symbol	* c		60120						
ANR	60441	Symbol	zend_hash_quick_find		60120						
ANR	60442	Symbol	IS_CONSTANT_UNQUALIFIED		60120						
ANR	60443	Symbol	zend_constants		60120						
ANR	60444	Symbol	key -> hash_value		60120						
ANR	60445	Symbol	Z_STRVAL		60120						
ANR	60446	Symbol	key -> constant		60120						
ANR	60447	Symbol	key		60120						
ANR	60448	DeclStmt									
ANR	60449	Decl							char	char *	lowercase_name
ANR	60450	DeclStmt									
ANR	60451	Decl							char	char *	name
ANR	60452	DeclStmt									
ANR	60453	Decl							int	int	ret
ANR	60454	DeclStmt									
ANR	60455	Decl							ulong	ulong	chash
ANR	60456	DeclStmt									
ANR	60457	Decl							char	char *	slash
