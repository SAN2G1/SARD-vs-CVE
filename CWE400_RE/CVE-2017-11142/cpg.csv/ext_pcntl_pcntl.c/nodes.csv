command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	896115	File	data/converged/CVE-2017-11142_php-src/ext_pcntl_pcntl.c								
ANR	896116	DeclStmt									
ANR	896117	Decl							define DEBUG_OUT	define DEBUG_OUT	printf
ANR	896118	DeclStmt									
ANR	896119	Decl							const zend_function_entry	const zend_function_entry [ ]	pcntl_functions
ANR	896120	DeclStmt									
ANR	896121	Decl							zend_module_entry	zend_module_entry	pcntl_module_entry
ANR	896122	DeclStmt									
ANR	896123	Decl							void	void ( int )	pcntl_signal_handler
ANR	896124	DeclStmt									
ANR	896125	Decl							void	void ( )	pcntl_signal_dispatch
ANR	896126	DeclStmt									
ANR	896127	Decl							struct php_pcntl_pending_signal	struct php_pcntl_pending_signal *	sig
ANR	896128	DeclStmt									
ANR	896129	Decl							pid_t	pid_t	id
ANR	896130	DeclStmt									
ANR	896131	Decl							long	long	seconds
ANR	896132	DeclStmt									
ANR	896133	Decl							long	long	pid
ANR	896134	Decl							long	long	options
ANR	896135	DeclStmt									
ANR	896136	Decl							zval	zval *	z_status
ANR	896137	DeclStmt									
ANR	896138	Decl							int	int	status
ANR	896139	DeclStmt									
ANR	896140	Decl							pid_t	pid_t	child_id
ANR	896141	DeclStmt									
ANR	896142	Decl							long	long	options
ANR	896143	DeclStmt									
ANR	896144	Decl							zval	zval *	z_status
ANR	896145	DeclStmt									
ANR	896146	Decl							int	int	status
ANR	896147	DeclStmt									
ANR	896148	Decl							pid_t	pid_t	child_id
ANR	896149	DeclStmt									
ANR	896150	Decl							long	long	status_word
ANR	896151	DeclStmt									
ANR	896152	Decl							long	long	status_word
ANR	896153	DeclStmt									
ANR	896154	Decl							long	long	status_word
ANR	896155	DeclStmt									
ANR	896156	Decl							long	long	status_word
ANR	896157	DeclStmt									
ANR	896158	Decl							long	long	status_word
ANR	896159	DeclStmt									
ANR	896160	Decl							long	long	status_word
ANR	896161	DeclStmt									
ANR	896162	Decl							zval	zval *	args
ANR	896163	Decl							zval	zval *	envs
ANR	896164	DeclStmt									
ANR	896165	Decl							zval	zval * *	element
ANR	896166	DeclStmt									
ANR	896167	Decl							HashTable	HashTable *	args_hash
ANR	896168	Decl							HashTable	HashTable *	envs_hash
ANR	896169	DeclStmt									
ANR	896170	Decl							int	int	argc
ANR	896171	Decl							int	int	argi
ANR	896172	DeclStmt									
ANR	896173	Decl							int	int	envc
ANR	896174	Decl							int	int	envi
ANR	896175	DeclStmt									
ANR	896176	Decl							int	int	return_val
ANR	896177	DeclStmt									
ANR	896178	Decl							char	char * *	argv
ANR	896179	Decl							char	char * *	envp
ANR	896180	DeclStmt									
ANR	896181	Decl							char	char * *	current_arg
ANR	896182	Decl							char	char * *	pair
ANR	896183	DeclStmt									
ANR	896184	Decl							int	int	pair_length
ANR	896185	DeclStmt									
ANR	896186	Decl							char	char *	key
ANR	896187	DeclStmt									
ANR	896188	Decl							uint	uint	key_length
ANR	896189	DeclStmt									
ANR	896190	Decl							char	char *	path
ANR	896191	DeclStmt									
ANR	896192	Decl							int	int	path_len
ANR	896193	DeclStmt									
ANR	896194	Decl							ulong	ulong	key_num
ANR	896195	DeclStmt									
ANR	896196	Decl							zval	zval *	handle
ANR	896197	Decl							zval	zval * *	dest_handle
ANR	896198	DeclStmt									
ANR	896199	Decl							char	char *	func_name
ANR	896200	DeclStmt									
ANR	896201	Decl							long	long	signo
ANR	896202	DeclStmt									
ANR	896203	Decl							zend_bool	zend_bool	restart_syscalls
ANR	896204	DeclStmt									
ANR	896205	Decl							int	int	i
ANR	896206	DeclStmt									
ANR	896207	Decl							struct php_pcntl_pending_signal	struct php_pcntl_pending_signal *	psig
ANR	896208	DeclStmt									
ANR	896209	Decl							long	long	how
ANR	896210	Decl							long	long	signo
ANR	896211	DeclStmt									
ANR	896212	Decl							zval	zval *	user_set
ANR	896213	Decl							zval	zval *	user_oldset
ANR	896214	Decl							zval	zval * *	user_signo
ANR	896215	DeclStmt									
ANR	896216	Decl							sigset_t	sigset_t	set
ANR	896217	Decl							sigset_t	sigset_t	oldset
ANR	896218	DeclStmt									
ANR	896219	Decl							HashPosition	HashPosition	pos
ANR	896220	DeclStmt									
ANR	896221	Decl							zval	zval *	user_set
ANR	896222	Decl							zval	zval * *	user_signo
ANR	896223	Decl							zval	zval *	user_siginfo
ANR	896224	DeclStmt									
ANR	896225	Decl							long	long	tv_sec
ANR	896226	Decl							long	long	tv_nsec
ANR	896227	DeclStmt									
ANR	896228	Decl							sigset_t	sigset_t	set
ANR	896229	DeclStmt									
ANR	896230	Decl							HashPosition	HashPosition	pos
ANR	896231	DeclStmt									
ANR	896232	Decl							int	int	signo
ANR	896233	DeclStmt									
ANR	896234	Decl							siginfo_t	siginfo_t	siginfo
ANR	896235	DeclStmt									
ANR	896236	Decl							struct timespec	struct timespec	timeout
ANR	896237	DeclStmt									
ANR	896238	Decl							ifdef si_utime	ifdef si_utime	add_assoc_double_ex
ANR	896239	DeclStmt									
ANR	896240	Decl							endif ifdef si_stime	endif ifdef si_stime	add_assoc_double_ex
ANR	896241	DeclStmt									
ANR	896242	Decl							endif	endif	add_assoc_long_ex
ANR	896243	DeclStmt									
ANR	896244	Decl							ifdef si_fd	ifdef si_fd	add_assoc_long_ex
ANR	896245	DeclStmt									
ANR	896246	Decl							long	long	who
ANR	896247	DeclStmt									
ANR	896248	Decl							long	long	pid
ANR	896249	DeclStmt									
ANR	896250	Decl							int	int	pri
ANR	896251	DeclStmt									
ANR	896252	Decl							long	long	who
ANR	896253	DeclStmt									
ANR	896254	Decl							long	long	pid
ANR	896255	DeclStmt									
ANR	896256	Decl							long	long	pri
ANR	896257	DeclStmt									
ANR	896258	Decl							long	long	error
ANR	896259	Function	pcntl_signal_handler	1205:0:34915:35492							
ANR	896260	FunctionDef	pcntl_signal_handler (int signo)		896259	0					
ANR	896261	CompoundStatement		1206:0:34959:35492	896259	0					
ANR	896262	IdentifierDeclStatement	struct php_pcntl_pending_signal * psig ;	1207:1:34962:34999	896259	0	True				
ANR	896263	IdentifierDecl	* psig		896259	0					
ANR	896264	IdentifierDeclType	struct php_pcntl_pending_signal *		896259	0					
ANR	896265	Identifier	psig		896259	1					
ANR	896266	ExpressionStatement	TSRMLS_FETCH ( )	1208:1:35002:35016	896259	1	True				
ANR	896267	CallExpression	TSRMLS_FETCH ( )		896259	0					
ANR	896268	Callee	TSRMLS_FETCH		896259	0					
ANR	896269	Identifier	TSRMLS_FETCH		896259	0					
ANR	896270	ArgumentList			896259	1					
ANR	896271	ExpressionStatement	psig = PCNTL_G ( spares )	1210:1:35020:35042	896259	2	True				
ANR	896272	AssignmentExpression	psig = PCNTL_G ( spares )		896259	0		=			
ANR	896273	Identifier	psig		896259	0					
ANR	896274	CallExpression	PCNTL_G ( spares )		896259	1					
ANR	896275	Callee	PCNTL_G		896259	0					
ANR	896276	Identifier	PCNTL_G		896259	0					
ANR	896277	ArgumentList	spares		896259	1					
ANR	896278	Argument	spares		896259	0					
ANR	896279	Identifier	spares		896259	0					
ANR	896280	IfStatement	if ( ! psig )		896259	3					
ANR	896281	Condition	! psig	1211:5:35049:35053	896259	0	True				
ANR	896282	UnaryOperationExpression	! psig		896259	0					
ANR	896283	UnaryOperator	!		896259	0					
ANR	896284	Identifier	psig		896259	1					
ANR	896285	CompoundStatement		6:12:96:96	896259	1					
ANR	896286	ReturnStatement	return ;	1213:2:35139:35145	896259	0	True				
ANR	896287	ExpressionStatement	PCNTL_G ( spares ) = psig -> next	1215:1:35151:35179	896259	4	True				
ANR	896288	AssignmentExpression	PCNTL_G ( spares ) = psig -> next		896259	0		=			
ANR	896289	CallExpression	PCNTL_G ( spares )		896259	0					
ANR	896290	Callee	PCNTL_G		896259	0					
ANR	896291	Identifier	PCNTL_G		896259	0					
ANR	896292	ArgumentList	spares		896259	1					
ANR	896293	Argument	spares		896259	0					
ANR	896294	Identifier	spares		896259	0					
ANR	896295	PtrMemberAccess	psig -> next		896259	1					
ANR	896296	Identifier	psig		896259	0					
ANR	896297	Identifier	next		896259	1					
ANR	896298	ExpressionStatement	psig -> signo = signo	1217:1:35183:35202	896259	5	True				
ANR	896299	AssignmentExpression	psig -> signo = signo		896259	0		=			
ANR	896300	PtrMemberAccess	psig -> signo		896259	0					
ANR	896301	Identifier	psig		896259	0					
ANR	896302	Identifier	signo		896259	1					
ANR	896303	Identifier	signo		896259	1					
ANR	896304	ExpressionStatement	psig -> next = NULL	1218:1:35205:35222	896259	6	True				
ANR	896305	AssignmentExpression	psig -> next = NULL		896259	0		=			
ANR	896306	PtrMemberAccess	psig -> next		896259	0					
ANR	896307	Identifier	psig		896259	0					
ANR	896308	Identifier	next		896259	1					
ANR	896309	Identifier	NULL		896259	1					
ANR	896310	IfStatement	if ( PCNTL_G ( head ) && PCNTL_G ( tail ) )		896259	7					
ANR	896311	Condition	PCNTL_G ( head ) && PCNTL_G ( tail )	1222:5:35337:35366	896259	0	True				
ANR	896312	AndExpression	PCNTL_G ( head ) && PCNTL_G ( tail )		896259	0		&&			
ANR	896313	CallExpression	PCNTL_G ( head )		896259	0					
ANR	896314	Callee	PCNTL_G		896259	0					
ANR	896315	Identifier	PCNTL_G		896259	0					
ANR	896316	ArgumentList	head		896259	1					
ANR	896317	Argument	head		896259	0					
ANR	896318	Identifier	head		896259	0					
ANR	896319	CallExpression	PCNTL_G ( tail )		896259	1					
ANR	896320	Callee	PCNTL_G		896259	0					
ANR	896321	Identifier	PCNTL_G		896259	0					
ANR	896322	ArgumentList	tail		896259	1					
ANR	896323	Argument	tail		896259	0					
ANR	896324	Identifier	tail		896259	0					
ANR	896325	CompoundStatement		17:37:409:409	896259	1					
ANR	896326	ExpressionStatement	PCNTL_G ( tail ) -> next = psig	1223:2:35373:35399	896259	0	True				
ANR	896327	AssignmentExpression	PCNTL_G ( tail ) -> next = psig		896259	0		=			
ANR	896328	PtrMemberAccess	PCNTL_G ( tail ) -> next		896259	0					
ANR	896329	CallExpression	PCNTL_G ( tail )		896259	0					
ANR	896330	Callee	PCNTL_G		896259	0					
ANR	896331	Identifier	PCNTL_G		896259	0					
ANR	896332	ArgumentList	tail		896259	1					
ANR	896333	Argument	tail		896259	0					
ANR	896334	Identifier	tail		896259	0					
ANR	896335	Identifier	next		896259	1					
ANR	896336	Identifier	psig		896259	1					
ANR	896337	ElseStatement	else		896259	0					
ANR	896338	CompoundStatement		19:8:449:449	896259	0					
ANR	896339	ExpressionStatement	PCNTL_G ( head ) = psig	1225:2:35413:35433	896259	0	True				
ANR	896340	AssignmentExpression	PCNTL_G ( head ) = psig		896259	0		=			
ANR	896341	CallExpression	PCNTL_G ( head )		896259	0					
ANR	896342	Callee	PCNTL_G		896259	0					
ANR	896343	Identifier	PCNTL_G		896259	0					
ANR	896344	ArgumentList	head		896259	1					
ANR	896345	Argument	head		896259	0					
ANR	896346	Identifier	head		896259	0					
ANR	896347	Identifier	psig		896259	1					
ANR	896348	ExpressionStatement	PCNTL_G ( tail ) = psig	1227:1:35439:35459	896259	8	True				
ANR	896349	AssignmentExpression	PCNTL_G ( tail ) = psig		896259	0		=			
ANR	896350	CallExpression	PCNTL_G ( tail )		896259	0					
ANR	896351	Callee	PCNTL_G		896259	0					
ANR	896352	Identifier	PCNTL_G		896259	0					
ANR	896353	ArgumentList	tail		896259	1					
ANR	896354	Argument	tail		896259	0					
ANR	896355	Identifier	tail		896259	0					
ANR	896356	Identifier	psig		896259	1					
ANR	896357	ExpressionStatement	PCNTL_G ( pending_signals ) = 1	1228:1:35462:35490	896259	9	True				
ANR	896358	AssignmentExpression	PCNTL_G ( pending_signals ) = 1		896259	0		=			
ANR	896359	CallExpression	PCNTL_G ( pending_signals )		896259	0					
ANR	896360	Callee	PCNTL_G		896259	0					
ANR	896361	Identifier	PCNTL_G		896259	0					
ANR	896362	ArgumentList	pending_signals		896259	1					
ANR	896363	Argument	pending_signals		896259	0					
ANR	896364	Identifier	pending_signals		896259	0					
ANR	896365	PrimaryExpression	1		896259	1					
ANR	896366	ReturnType	static void		896259	1					
ANR	896367	Identifier	pcntl_signal_handler		896259	2					
ANR	896368	ParameterList	int signo		896259	3					
ANR	896369	Parameter	int signo	1205:33:34948:34956	896259	0	True				
ANR	896370	ParameterType	int		896259	0					
ANR	896371	Identifier	signo		896259	1					
ANR	896372	CFGEntryNode	ENTRY		896259		True				
ANR	896373	CFGExitNode	EXIT		896259		True				
ANR	896374	Symbol	PCNTL_G ( tail ) -> next		896259						
ANR	896375	Symbol	PCNTL_G		896259						
ANR	896376	Symbol	psig -> signo		896259						
ANR	896377	Symbol	NULL		896259						
ANR	896378	Symbol	tail		896259						
ANR	896379	Symbol	spares		896259						
ANR	896380	Symbol	head		896259						
ANR	896381	Symbol	* psig		896259						
ANR	896382	Symbol	psig		896259						
ANR	896383	Symbol	signo		896259						
ANR	896384	Symbol	* PCNTL_G		896259						
ANR	896385	Symbol	psig -> next		896259						
ANR	896386	Symbol	pending_signals		896259						
ANR	896387	Function	pcntl_signal_dispatch	1231:0:35495:37023							
ANR	896388	FunctionDef	pcntl_signal_dispatch ()		896387	0					
ANR	896389	CompoundStatement		1232:0:35524:37023	896387	0					
ANR	896390	IdentifierDeclStatement	"zval * param , * * handle , * retval ;"	1233:1:35527:35557	896387	0	True				
ANR	896391	IdentifierDecl	* param		896387	0					
ANR	896392	IdentifierDeclType	zval *		896387	0					
ANR	896393	Identifier	param		896387	1					
ANR	896394	IdentifierDecl	* * handle		896387	1					
ANR	896395	IdentifierDeclType	zval * *		896387	0					
ANR	896396	Identifier	handle		896387	1					
ANR	896397	IdentifierDecl	* retval		896387	2					
ANR	896398	IdentifierDeclType	zval *		896387	0					
ANR	896399	Identifier	retval		896387	1					
ANR	896400	IdentifierDeclStatement	"struct php_pcntl_pending_signal * queue , * next ;"	1234:1:35560:35605	896387	1	True				
ANR	896401	IdentifierDecl	* queue		896387	0					
ANR	896402	IdentifierDeclType	struct php_pcntl_pending_signal *		896387	0					
ANR	896403	Identifier	queue		896387	1					
ANR	896404	IdentifierDecl	* next		896387	1					
ANR	896405	IdentifierDeclType	struct php_pcntl_pending_signal *		896387	0					
ANR	896406	Identifier	next		896387	1					
ANR	896407	IdentifierDeclStatement	sigset_t mask ;	1235:1:35608:35621	896387	2	True				
ANR	896408	IdentifierDecl	mask		896387	0					
ANR	896409	IdentifierDeclType	sigset_t		896387	0					
ANR	896410	Identifier	mask		896387	1					
ANR	896411	IdentifierDeclStatement	sigset_t old_mask ;	1236:1:35624:35641	896387	3	True				
ANR	896412	IdentifierDecl	old_mask		896387	0					
ANR	896413	IdentifierDeclType	sigset_t		896387	0					
ANR	896414	Identifier	old_mask		896387	1					
ANR	896415	ExpressionStatement	TSRMLS_FETCH ( )	1237:1:35644:35658	896387	4	True				
ANR	896416	CallExpression	TSRMLS_FETCH ( )		896387	0					
ANR	896417	Callee	TSRMLS_FETCH		896387	0					
ANR	896418	Identifier	TSRMLS_FETCH		896387	0					
ANR	896419	ArgumentList			896387	1					
ANR	896420	IfStatement	if ( ! PCNTL_G ( pending_signals ) )		896387	5					
ANR	896421	Condition	! PCNTL_G ( pending_signals )	1239:4:35665:35689	896387	0	True				
ANR	896422	UnaryOperationExpression	! PCNTL_G ( pending_signals )		896387	0					
ANR	896423	UnaryOperator	!		896387	0					
ANR	896424	CallExpression	PCNTL_G ( pending_signals )		896387	1					
ANR	896425	Callee	PCNTL_G		896387	0					
ANR	896426	Identifier	PCNTL_G		896387	0					
ANR	896427	ArgumentList	pending_signals		896387	1					
ANR	896428	Argument	pending_signals		896387	0					
ANR	896429	Identifier	pending_signals		896387	0					
ANR	896430	CompoundStatement		8:31:167:167	896387	1					
ANR	896431	ReturnStatement	return ;	1240:2:35696:35702	896387	0	True				
ANR	896432	ExpressionStatement	sigfillset ( & mask )	1244:1:35735:35752	896387	6	True				
ANR	896433	CallExpression	sigfillset ( & mask )		896387	0					
ANR	896434	Callee	sigfillset		896387	0					
ANR	896435	Identifier	sigfillset		896387	0					
ANR	896436	ArgumentList	& mask		896387	1					
ANR	896437	Argument	& mask		896387	0					
ANR	896438	UnaryOperationExpression	& mask		896387	0					
ANR	896439	UnaryOperator	&		896387	0					
ANR	896440	Identifier	mask		896387	1					
ANR	896441	ExpressionStatement	"sigprocmask ( SIG_BLOCK , & mask , & old_mask )"	1245:1:35755:35795	896387	7	True				
ANR	896442	CallExpression	"sigprocmask ( SIG_BLOCK , & mask , & old_mask )"		896387	0					
ANR	896443	Callee	sigprocmask		896387	0					
ANR	896444	Identifier	sigprocmask		896387	0					
ANR	896445	ArgumentList	SIG_BLOCK		896387	1					
ANR	896446	Argument	SIG_BLOCK		896387	0					
ANR	896447	Identifier	SIG_BLOCK		896387	0					
ANR	896448	Argument	& mask		896387	1					
ANR	896449	UnaryOperationExpression	& mask		896387	0					
ANR	896450	UnaryOperator	&		896387	0					
ANR	896451	Identifier	mask		896387	1					
ANR	896452	Argument	& old_mask		896387	2					
ANR	896453	UnaryOperationExpression	& old_mask		896387	0					
ANR	896454	UnaryOperator	&		896387	0					
ANR	896455	Identifier	old_mask		896387	1					
ANR	896456	IfStatement	if ( ! PCNTL_G ( head ) || PCNTL_G ( processing_signal_queue ) )		896387	8					
ANR	896457	Condition	! PCNTL_G ( head ) || PCNTL_G ( processing_signal_queue )	1248:5:35875:35925	896387	0	True				
ANR	896458	OrExpression	! PCNTL_G ( head ) || PCNTL_G ( processing_signal_queue )		896387	0		||			
ANR	896459	UnaryOperationExpression	! PCNTL_G ( head )		896387	0					
ANR	896460	UnaryOperator	!		896387	0					
ANR	896461	CallExpression	PCNTL_G ( head )		896387	1					
ANR	896462	Callee	PCNTL_G		896387	0					
ANR	896463	Identifier	PCNTL_G		896387	0					
ANR	896464	ArgumentList	head		896387	1					
ANR	896465	Argument	head		896387	0					
ANR	896466	Identifier	head		896387	0					
ANR	896467	CallExpression	PCNTL_G ( processing_signal_queue )		896387	1					
ANR	896468	Callee	PCNTL_G		896387	0					
ANR	896469	Identifier	PCNTL_G		896387	0					
ANR	896470	ArgumentList	processing_signal_queue		896387	1					
ANR	896471	Argument	processing_signal_queue		896387	0					
ANR	896472	Identifier	processing_signal_queue		896387	0					
ANR	896473	CompoundStatement		17:58:403:403	896387	1					
ANR	896474	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"	1249:2:35932:35973	896387	0	True				
ANR	896475	CallExpression	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"		896387	0					
ANR	896476	Callee	sigprocmask		896387	0					
ANR	896477	Identifier	sigprocmask		896387	0					
ANR	896478	ArgumentList	SIG_SETMASK		896387	1					
ANR	896479	Argument	SIG_SETMASK		896387	0					
ANR	896480	Identifier	SIG_SETMASK		896387	0					
ANR	896481	Argument	& old_mask		896387	1					
ANR	896482	UnaryOperationExpression	& old_mask		896387	0					
ANR	896483	UnaryOperator	&		896387	0					
ANR	896484	Identifier	old_mask		896387	1					
ANR	896485	Argument	NULL		896387	2					
ANR	896486	Identifier	NULL		896387	0					
ANR	896487	ReturnStatement	return ;	1250:2:35977:35983	896387	1	True				
ANR	896488	ExpressionStatement	PCNTL_G ( processing_signal_queue ) = 1	1254:1:36029:36065	896387	9	True				
ANR	896489	AssignmentExpression	PCNTL_G ( processing_signal_queue ) = 1		896387	0		=			
ANR	896490	CallExpression	PCNTL_G ( processing_signal_queue )		896387	0					
ANR	896491	Callee	PCNTL_G		896387	0					
ANR	896492	Identifier	PCNTL_G		896387	0					
ANR	896493	ArgumentList	processing_signal_queue		896387	1					
ANR	896494	Argument	processing_signal_queue		896387	0					
ANR	896495	Identifier	processing_signal_queue		896387	0					
ANR	896496	PrimaryExpression	1		896387	1					
ANR	896497	ExpressionStatement	queue = PCNTL_G ( head )	1256:1:36069:36090	896387	10	True				
ANR	896498	AssignmentExpression	queue = PCNTL_G ( head )		896387	0		=			
ANR	896499	Identifier	queue		896387	0					
ANR	896500	CallExpression	PCNTL_G ( head )		896387	1					
ANR	896501	Callee	PCNTL_G		896387	0					
ANR	896502	Identifier	PCNTL_G		896387	0					
ANR	896503	ArgumentList	head		896387	1					
ANR	896504	Argument	head		896387	0					
ANR	896505	Identifier	head		896387	0					
ANR	896506	ExpressionStatement	PCNTL_G ( head ) = NULL	1257:1:36093:36113	896387	11	True				
ANR	896507	AssignmentExpression	PCNTL_G ( head ) = NULL		896387	0		=			
ANR	896508	CallExpression	PCNTL_G ( head )		896387	0					
ANR	896509	Callee	PCNTL_G		896387	0					
ANR	896510	Identifier	PCNTL_G		896387	0					
ANR	896511	ArgumentList	head		896387	1					
ANR	896512	Argument	head		896387	0					
ANR	896513	Identifier	head		896387	0					
ANR	896514	Identifier	NULL		896387	1					
ANR	896515	WhileStatement	while ( queue )		896387	12					
ANR	896516	Condition	queue	1261:8:36172:36176	896387	0	True				
ANR	896517	Identifier	queue		896387	0					
ANR	896518	CompoundStatement		30:15:654:654	896387	1					
ANR	896519	IfStatement	"if ( zend_hash_index_find ( & PCNTL_G ( php_signal_table ) , queue -> signo , ( void * * ) & handle ) == SUCCESS )"		896387	0					
ANR	896520	Condition	"zend_hash_index_find ( & PCNTL_G ( php_signal_table ) , queue -> signo , ( void * * ) & handle ) == SUCCESS"	1262:6:36187:36276	896387	0	True				
ANR	896521	EqualityExpression	"zend_hash_index_find ( & PCNTL_G ( php_signal_table ) , queue -> signo , ( void * * ) & handle ) == SUCCESS"		896387	0		==			
ANR	896522	CallExpression	"zend_hash_index_find ( & PCNTL_G ( php_signal_table ) , queue -> signo , ( void * * ) & handle )"		896387	0					
ANR	896523	Callee	zend_hash_index_find		896387	0					
ANR	896524	Identifier	zend_hash_index_find		896387	0					
ANR	896525	ArgumentList	& PCNTL_G ( php_signal_table )		896387	1					
ANR	896526	Argument	& PCNTL_G ( php_signal_table )		896387	0					
ANR	896527	UnaryOperationExpression	& PCNTL_G ( php_signal_table )		896387	0					
ANR	896528	UnaryOperator	&		896387	0					
ANR	896529	CallExpression	PCNTL_G ( php_signal_table )		896387	1					
ANR	896530	Callee	PCNTL_G		896387	0					
ANR	896531	Identifier	PCNTL_G		896387	0					
ANR	896532	ArgumentList	php_signal_table		896387	1					
ANR	896533	Argument	php_signal_table		896387	0					
ANR	896534	Identifier	php_signal_table		896387	0					
ANR	896535	Argument	queue -> signo		896387	1					
ANR	896536	PtrMemberAccess	queue -> signo		896387	0					
ANR	896537	Identifier	queue		896387	0					
ANR	896538	Identifier	signo		896387	1					
ANR	896539	Argument	( void * * ) & handle		896387	2					
ANR	896540	CastExpression	( void * * ) & handle		896387	0					
ANR	896541	CastTarget	void * *		896387	0					
ANR	896542	UnaryOperationExpression	& handle		896387	1					
ANR	896543	UnaryOperator	&		896387	0					
ANR	896544	Identifier	handle		896387	1					
ANR	896545	Identifier	SUCCESS		896387	1					
ANR	896546	CompoundStatement		31:98:754:754	896387	1					
ANR	896547	ExpressionStatement	MAKE_STD_ZVAL ( retval )	1263:3:36284:36305	896387	0	True				
ANR	896548	CallExpression	MAKE_STD_ZVAL ( retval )		896387	0					
ANR	896549	Callee	MAKE_STD_ZVAL		896387	0					
ANR	896550	Identifier	MAKE_STD_ZVAL		896387	0					
ANR	896551	ArgumentList	retval		896387	1					
ANR	896552	Argument	retval		896387	0					
ANR	896553	Identifier	retval		896387	0					
ANR	896554	ExpressionStatement	MAKE_STD_ZVAL ( param )	1264:3:36310:36330	896387	1	True				
ANR	896555	CallExpression	MAKE_STD_ZVAL ( param )		896387	0					
ANR	896556	Callee	MAKE_STD_ZVAL		896387	0					
ANR	896557	Identifier	MAKE_STD_ZVAL		896387	0					
ANR	896558	ArgumentList	param		896387	1					
ANR	896559	Argument	param		896387	0					
ANR	896560	Identifier	param		896387	0					
ANR	896561	ExpressionStatement	ZVAL_NULL ( retval )	1265:3:36335:36352	896387	2	True				
ANR	896562	CallExpression	ZVAL_NULL ( retval )		896387	0					
ANR	896563	Callee	ZVAL_NULL		896387	0					
ANR	896564	Identifier	ZVAL_NULL		896387	0					
ANR	896565	ArgumentList	retval		896387	1					
ANR	896566	Argument	retval		896387	0					
ANR	896567	Identifier	retval		896387	0					
ANR	896568	ExpressionStatement	"ZVAL_LONG ( param , queue -> signo )"	1266:3:36357:36387	896387	3	True				
ANR	896569	CallExpression	"ZVAL_LONG ( param , queue -> signo )"		896387	0					
ANR	896570	Callee	ZVAL_LONG		896387	0					
ANR	896571	Identifier	ZVAL_LONG		896387	0					
ANR	896572	ArgumentList	param		896387	1					
ANR	896573	Argument	param		896387	0					
ANR	896574	Identifier	param		896387	0					
ANR	896575	Argument	queue -> signo		896387	1					
ANR	896576	PtrMemberAccess	queue -> signo		896387	0					
ANR	896577	Identifier	queue		896387	0					
ANR	896578	Identifier	signo		896387	1					
ANR	896579	Statement	call_user_function	1270:3:36596:36613	896387	4	True				
ANR	896580	Statement	(	1270:21:36614:36614	896387	5	True				
ANR	896581	Statement	EG	1270:22:36615:36616	896387	6	True				
ANR	896582	Statement	(	1270:24:36617:36617	896387	7	True				
ANR	896583	Statement	function_table	1270:25:36618:36631	896387	8	True				
ANR	896584	Statement	)	1270:39:36632:36632	896387	9	True				
ANR	896585	Statement	","	1270:40:36633:36633	896387	10	True				
ANR	896586	Statement	NULL	1270:42:36635:36638	896387	11	True				
ANR	896587	Statement	","	1270:46:36639:36639	896387	12	True				
ANR	896588	Statement	*	1270:48:36641:36641	896387	13	True				
ANR	896589	Statement	handle	1270:49:36642:36647	896387	14	True				
ANR	896590	Statement	","	1270:55:36648:36648	896387	15	True				
ANR	896591	Statement	retval	1270:57:36650:36655	896387	16	True				
ANR	896592	Statement	","	1270:63:36656:36656	896387	17	True				
ANR	896593	Statement	1	1270:65:36658:36658	896387	18	True				
ANR	896594	Statement	","	1270:66:36659:36659	896387	19	True				
ANR	896595	Statement	&	1270:68:36661:36661	896387	20	True				
ANR	896596	Statement	param	1270:69:36662:36666	896387	21	True				
ANR	896597	Statement	TSRMLS_CC	1270:75:36668:36676	896387	22	True				
ANR	896598	Statement	)	1270:84:36677:36677	896387	23	True				
ANR	896599	ExpressionStatement		1270:85:36678:36678	896387	24	True				
ANR	896600	ExpressionStatement	zval_ptr_dtor ( & param )	1271:3:36683:36704	896387	25	True				
ANR	896601	CallExpression	zval_ptr_dtor ( & param )		896387	0					
ANR	896602	Callee	zval_ptr_dtor		896387	0					
ANR	896603	Identifier	zval_ptr_dtor		896387	0					
ANR	896604	ArgumentList	& param		896387	1					
ANR	896605	Argument	& param		896387	0					
ANR	896606	UnaryOperationExpression	& param		896387	0					
ANR	896607	UnaryOperator	&		896387	0					
ANR	896608	Identifier	param		896387	1					
ANR	896609	ExpressionStatement	zval_ptr_dtor ( & retval )	1272:3:36709:36731	896387	26	True				
ANR	896610	CallExpression	zval_ptr_dtor ( & retval )		896387	0					
ANR	896611	Callee	zval_ptr_dtor		896387	0					
ANR	896612	Identifier	zval_ptr_dtor		896387	0					
ANR	896613	ArgumentList	& retval		896387	1					
ANR	896614	Argument	& retval		896387	0					
ANR	896615	UnaryOperationExpression	& retval		896387	0					
ANR	896616	UnaryOperator	&		896387	0					
ANR	896617	Identifier	retval		896387	1					
ANR	896618	ExpressionStatement	next = queue -> next	1275:2:36740:36758	896387	1	True				
ANR	896619	AssignmentExpression	next = queue -> next		896387	0		=			
ANR	896620	Identifier	next		896387	0					
ANR	896621	PtrMemberAccess	queue -> next		896387	1					
ANR	896622	Identifier	queue		896387	0					
ANR	896623	Identifier	next		896387	1					
ANR	896624	ExpressionStatement	queue -> next = PCNTL_G ( spares )	1276:2:36762:36791	896387	2	True				
ANR	896625	AssignmentExpression	queue -> next = PCNTL_G ( spares )		896387	0		=			
ANR	896626	PtrMemberAccess	queue -> next		896387	0					
ANR	896627	Identifier	queue		896387	0					
ANR	896628	Identifier	next		896387	1					
ANR	896629	CallExpression	PCNTL_G ( spares )		896387	1					
ANR	896630	Callee	PCNTL_G		896387	0					
ANR	896631	Identifier	PCNTL_G		896387	0					
ANR	896632	ArgumentList	spares		896387	1					
ANR	896633	Argument	spares		896387	0					
ANR	896634	Identifier	spares		896387	0					
ANR	896635	ExpressionStatement	PCNTL_G ( spares ) = queue	1277:2:36795:36818	896387	3	True				
ANR	896636	AssignmentExpression	PCNTL_G ( spares ) = queue		896387	0		=			
ANR	896637	CallExpression	PCNTL_G ( spares )		896387	0					
ANR	896638	Callee	PCNTL_G		896387	0					
ANR	896639	Identifier	PCNTL_G		896387	0					
ANR	896640	ArgumentList	spares		896387	1					
ANR	896641	Argument	spares		896387	0					
ANR	896642	Identifier	spares		896387	0					
ANR	896643	Identifier	queue		896387	1					
ANR	896644	ExpressionStatement	queue = next	1278:2:36822:36834	896387	4	True				
ANR	896645	AssignmentExpression	queue = next		896387	0		=			
ANR	896646	Identifier	queue		896387	0					
ANR	896647	Identifier	next		896387	1					
ANR	896648	ExpressionStatement	PCNTL_G ( pending_signals ) = 0	1281:1:36841:36869	896387	13	True				
ANR	896649	AssignmentExpression	PCNTL_G ( pending_signals ) = 0		896387	0		=			
ANR	896650	CallExpression	PCNTL_G ( pending_signals )		896387	0					
ANR	896651	Callee	PCNTL_G		896387	0					
ANR	896652	Identifier	PCNTL_G		896387	0					
ANR	896653	ArgumentList	pending_signals		896387	1					
ANR	896654	Argument	pending_signals		896387	0					
ANR	896655	Identifier	pending_signals		896387	0					
ANR	896656	PrimaryExpression	0		896387	1					
ANR	896657	ExpressionStatement	PCNTL_G ( processing_signal_queue ) = 0	1284:1:36896:36932	896387	14	True				
ANR	896658	AssignmentExpression	PCNTL_G ( processing_signal_queue ) = 0		896387	0		=			
ANR	896659	CallExpression	PCNTL_G ( processing_signal_queue )		896387	0					
ANR	896660	Callee	PCNTL_G		896387	0					
ANR	896661	Identifier	PCNTL_G		896387	0					
ANR	896662	ArgumentList	processing_signal_queue		896387	1					
ANR	896663	Argument	processing_signal_queue		896387	0					
ANR	896664	Identifier	processing_signal_queue		896387	0					
ANR	896665	PrimaryExpression	0		896387	1					
ANR	896666	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"	1287:1:36980:37021	896387	15	True				
ANR	896667	CallExpression	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"		896387	0					
ANR	896668	Callee	sigprocmask		896387	0					
ANR	896669	Identifier	sigprocmask		896387	0					
ANR	896670	ArgumentList	SIG_SETMASK		896387	1					
ANR	896671	Argument	SIG_SETMASK		896387	0					
ANR	896672	Identifier	SIG_SETMASK		896387	0					
ANR	896673	Argument	& old_mask		896387	1					
ANR	896674	UnaryOperationExpression	& old_mask		896387	0					
ANR	896675	UnaryOperator	&		896387	0					
ANR	896676	Identifier	old_mask		896387	1					
ANR	896677	Argument	NULL		896387	2					
ANR	896678	Identifier	NULL		896387	0					
ANR	896679	ReturnType	void		896387	1					
ANR	896680	Identifier	pcntl_signal_dispatch		896387	2					
ANR	896681	ParameterList			896387	3					
ANR	896682	CFGEntryNode	ENTRY		896387		True				
ANR	896683	CFGExitNode	EXIT		896387		True				
ANR	896684	Symbol	next		896387						
ANR	896685	Symbol	queue -> next		896387						
ANR	896686	Symbol	PCNTL_G		896387						
ANR	896687	Symbol	& PCNTL_G		896387						
ANR	896688	Symbol	& param		896387						
ANR	896689	Symbol	head		896387						
ANR	896690	Symbol	old_mask		896387						
ANR	896691	Symbol	* queue		896387						
ANR	896692	Symbol	& handle		896387						
ANR	896693	Symbol	php_signal_table		896387						
ANR	896694	Symbol	param		896387						
ANR	896695	Symbol	& retval		896387						
ANR	896696	Symbol	processing_signal_queue		896387						
ANR	896697	Symbol	mask		896387						
ANR	896698	Symbol	zend_hash_index_find		896387						
ANR	896699	Symbol	NULL		896387						
ANR	896700	Symbol	SUCCESS		896387						
ANR	896701	Symbol	& mask		896387						
ANR	896702	Symbol	SIG_SETMASK		896387						
ANR	896703	Symbol	spares		896387						
ANR	896704	Symbol	handle		896387						
ANR	896705	Symbol	retval		896387						
ANR	896706	Symbol	queue -> signo		896387						
ANR	896707	Symbol	& old_mask		896387						
ANR	896708	Symbol	SIG_BLOCK		896387						
ANR	896709	Symbol	queue		896387						
ANR	896710	Symbol	pending_signals		896387						
