command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1316435	File	data/converged/CVE-2017-11142_php-src/ext_spl_spl_heap.c								
ANR	1316436	DeclStmt									
ANR	1316437	Decl							zend_object_handlers	zend_object_handlers	spl_handler_SplHeap
ANR	1316438	DeclStmt									
ANR	1316439	Decl							zend_object_handlers	zend_object_handlers	spl_handler_SplPriorityQueue
ANR	1316440	DeclStmt									
ANR	1316441	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplHeap
ANR	1316442	DeclStmt									
ANR	1316443	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplMaxHeap
ANR	1316444	DeclStmt									
ANR	1316445	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplMinHeap
ANR	1316446	DeclStmt									
ANR	1316447	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplPriorityQueue
ANR	1316448	DeclStmt									
ANR	1316449	Decl							void	void *	spl_ptr_heap_element
ANR	1316450	DeclStmt									
ANR	1316451	Decl							void ( * ) ( spl_ptr_heap_element TSRMLS_DC )	void ( * ) ( spl_ptr_heap_element TSRMLS_DC )	spl_ptr_heap_dtor_func
ANR	1316452	DeclStmt									
ANR	1316453	Decl							void ( * ) ( spl_ptr_heap_element TSRMLS_DC )	void ( * ) ( spl_ptr_heap_element TSRMLS_DC )	spl_ptr_heap_ctor_func
ANR	1316454	DeclStmt									
ANR	1316455	Decl							"int ( * ) ( spl_ptr_heap_element , spl_ptr_heap_element , void * TSRMLS_DC )"	"int ( * ) ( spl_ptr_heap_element , spl_ptr_heap_element , void * TSRMLS_DC )"	spl_ptr_heap_cmp_func
ANR	1316456	ClassDef	_spl_ptr_heap	58:8:2229:2492							
ANR	1316457	DeclStmt									
ANR	1316458	Decl							spl_ptr_heap_element	spl_ptr_heap_element *	elements
ANR	1316459	DeclStmt									
ANR	1316460	Decl							spl_ptr_heap_ctor_func	spl_ptr_heap_ctor_func	ctor
ANR	1316461	DeclStmt									
ANR	1316462	Decl							spl_ptr_heap_dtor_func	spl_ptr_heap_dtor_func	dtor
ANR	1316463	DeclStmt									
ANR	1316464	Decl							spl_ptr_heap_cmp_func	spl_ptr_heap_cmp_func	cmp
ANR	1316465	DeclStmt									
ANR	1316466	Decl							int	int	count
ANR	1316467	DeclStmt									
ANR	1316468	Decl							int	int	max_size
ANR	1316469	DeclStmt									
ANR	1316470	Decl							int	int	flags
ANR	1316471	DeclStmt									
ANR	1316472	Decl							_spl_ptr_heap	_spl_ptr_heap	spl_ptr_heap
ANR	1316473	DeclStmt									
ANR	1316474	Decl							struct _spl_heap_object	struct _spl_heap_object	spl_heap_object
ANR	1316475	DeclStmt									
ANR	1316476	Decl							struct _spl_heap_it	struct _spl_heap_it	spl_heap_it
ANR	1316477	ClassDef	_spl_heap_object	71:0:2586:2857							
ANR	1316478	DeclStmt									
ANR	1316479	Decl							zend_object	zend_object	std
ANR	1316480	DeclStmt									
ANR	1316481	Decl							spl_ptr_heap	spl_ptr_heap *	heap
ANR	1316482	DeclStmt									
ANR	1316483	Decl							zval	zval *	retval
ANR	1316484	DeclStmt									
ANR	1316485	Decl							int	int	flags
ANR	1316486	DeclStmt									
ANR	1316487	Decl							zend_class_entry	zend_class_entry *	ce_get_iterator
ANR	1316488	DeclStmt									
ANR	1316489	Decl							zend_function	zend_function *	fptr_cmp
ANR	1316490	DeclStmt									
ANR	1316491	Decl							zend_function	zend_function *	fptr_count
ANR	1316492	DeclStmt									
ANR	1316493	Decl							HashTable	HashTable *	debug_info
ANR	1316494	ClassDef	_spl_heap_it	83:0:2907:3015							
ANR	1316495	DeclStmt									
ANR	1316496	Decl							zend_user_iterator	zend_user_iterator	intern
ANR	1316497	DeclStmt									
ANR	1316498	Decl							int	int	flags
ANR	1316499	DeclStmt									
ANR	1316500	Decl							spl_heap_object	spl_heap_object *	object
ANR	1316501	Function	spl_ptr_heap_zval_dtor	90:0:3043:3176							
ANR	1316502	FunctionDef	spl_ptr_heap_zval_dtor (spl_ptr_heap_element elem TSRMLS_DC)		1316501	0					
ANR	1316503	CompoundStatement		90:72:3115:3176	1316501	0					
ANR	1316504	IfStatement	if ( elem )		1316501	0					
ANR	1316505	Condition	elem	91:5:3132:3135	1316501	0	True				
ANR	1316506	Identifier	elem		1316501	0					
ANR	1316507	CompoundStatement		2:11:22:22	1316501	1					
ANR	1316508	ExpressionStatement	zval_ptr_dtor ( ( zval * * ) & elem )	92:2:3142:3171	1316501	0	True				
ANR	1316509	CallExpression	zval_ptr_dtor ( ( zval * * ) & elem )		1316501	0					
ANR	1316510	Callee	zval_ptr_dtor		1316501	0					
ANR	1316511	Identifier	zval_ptr_dtor		1316501	0					
ANR	1316512	ArgumentList	( zval * * ) & elem		1316501	1					
ANR	1316513	Argument	( zval * * ) & elem		1316501	0					
ANR	1316514	CastExpression	( zval * * ) & elem		1316501	0					
ANR	1316515	CastTarget	zval * *		1316501	0					
ANR	1316516	UnaryOperationExpression	& elem		1316501	1					
ANR	1316517	UnaryOperator	&		1316501	0					
ANR	1316518	Identifier	elem		1316501	1					
ANR	1316519	ReturnType	static void		1316501	1					
ANR	1316520	Identifier	spl_ptr_heap_zval_dtor		1316501	2					
ANR	1316521	ParameterList	spl_ptr_heap_element elem TSRMLS_DC		1316501	3					
ANR	1316522	Parameter	spl_ptr_heap_element elem TSRMLS_DC	90:35:3078:3112	1316501	0	True				
ANR	1316523	ParameterType	spl_ptr_heap_element elem		1316501	0					
ANR	1316524	Identifier	TSRMLS_DC		1316501	1					
ANR	1316525	CFGEntryNode	ENTRY		1316501		True				
ANR	1316526	CFGExitNode	EXIT		1316501		True				
ANR	1316527	Symbol	elem		1316501						
ANR	1316528	Symbol	& elem		1316501						
ANR	1316529	Symbol	TSRMLS_DC		1316501						
ANR	1316530	Function	spl_ptr_heap_zval_ctor	97:0:3189:3300							
ANR	1316531	FunctionDef	spl_ptr_heap_zval_ctor (spl_ptr_heap_element elem TSRMLS_DC)		1316530	0					
ANR	1316532	CompoundStatement		97:72:3261:3300	1316530	0					
ANR	1316533	ExpressionStatement	Z_ADDREF_P ( ( zval * ) elem )	98:1:3274:3298	1316530	0	True				
ANR	1316534	CallExpression	Z_ADDREF_P ( ( zval * ) elem )		1316530	0					
ANR	1316535	Callee	Z_ADDREF_P		1316530	0					
ANR	1316536	Identifier	Z_ADDREF_P		1316530	0					
ANR	1316537	ArgumentList	( zval * ) elem		1316530	1					
ANR	1316538	Argument	( zval * ) elem		1316530	0					
ANR	1316539	CastExpression	( zval * ) elem		1316530	0					
ANR	1316540	CastTarget	zval *		1316530	0					
ANR	1316541	Identifier	elem		1316530	1					
ANR	1316542	ReturnType	static void		1316530	1					
ANR	1316543	Identifier	spl_ptr_heap_zval_ctor		1316530	2					
ANR	1316544	ParameterList	spl_ptr_heap_element elem TSRMLS_DC		1316530	3					
ANR	1316545	Parameter	spl_ptr_heap_element elem TSRMLS_DC	97:35:3224:3258	1316530	0	True				
ANR	1316546	ParameterType	spl_ptr_heap_element elem		1316530	0					
ANR	1316547	Identifier	TSRMLS_DC		1316530	1					
ANR	1316548	CFGEntryNode	ENTRY		1316530		True				
ANR	1316549	CFGExitNode	EXIT		1316530		True				
ANR	1316550	Symbol	elem		1316530						
ANR	1316551	Symbol	TSRMLS_DC		1316530						
ANR	1316552	DeclStmt									
ANR	1316553	Decl							zval	zval *	result_p
ANR	1316554	Function	spl_pqueue_extract_helper	120:0:3761:4355							
ANR	1316555	FunctionDef	"spl_pqueue_extract_helper (zval * * value , int flags)"		1316554	0					
ANR	1316556	CompoundStatement		121:0:3836:4355	1316554	0					
ANR	1316557	IfStatement	if ( ( flags & SPL_PQUEUE_EXTR_BOTH ) == SPL_PQUEUE_EXTR_BOTH )		1316554	0					
ANR	1316558	Condition	( flags & SPL_PQUEUE_EXTR_BOTH ) == SPL_PQUEUE_EXTR_BOTH	122:5:3843:3896	1316554	0	True				
ANR	1316559	EqualityExpression	( flags & SPL_PQUEUE_EXTR_BOTH ) == SPL_PQUEUE_EXTR_BOTH		1316554	0		==			
ANR	1316560	BitAndExpression	flags & SPL_PQUEUE_EXTR_BOTH		1316554	0		&			
ANR	1316561	Identifier	flags		1316554	0					
ANR	1316562	Identifier	SPL_PQUEUE_EXTR_BOTH		1316554	1					
ANR	1316563	Identifier	SPL_PQUEUE_EXTR_BOTH		1316554	1					
ANR	1316564	CompoundStatement		2:61:62:62	1316554	1					
ANR	1316565	ReturnStatement	return value ;	123:2:3903:3915	1316554	0	True				
ANR	1316566	Identifier	value		1316554	0					
ANR	1316567	ElseStatement	else		1316554	0					
ANR	1316568	IfStatement	if ( ( flags & SPL_PQUEUE_EXTR_BOTH ) > 0 )		1316554	0					
ANR	1316569	Condition	( flags & SPL_PQUEUE_EXTR_BOTH ) > 0	124:12:3929:3962	1316554	0	True				
ANR	1316570	RelationalExpression	( flags & SPL_PQUEUE_EXTR_BOTH ) > 0		1316554	0		>			
ANR	1316571	BitAndExpression	flags & SPL_PQUEUE_EXTR_BOTH		1316554	0		&			
ANR	1316572	Identifier	flags		1316554	0					
ANR	1316573	Identifier	SPL_PQUEUE_EXTR_BOTH		1316554	1					
ANR	1316574	PrimaryExpression	0		1316554	1					
ANR	1316575	CompoundStatement		4:48:128:128	1316554	1					
ANR	1316576	IfStatement	if ( ( flags & SPL_PQUEUE_EXTR_DATA ) == SPL_PQUEUE_EXTR_DATA )		1316554	0					
ANR	1316577	Condition	( flags & SPL_PQUEUE_EXTR_DATA ) == SPL_PQUEUE_EXTR_DATA	126:6:3974:4027	1316554	0	True				
ANR	1316578	EqualityExpression	( flags & SPL_PQUEUE_EXTR_DATA ) == SPL_PQUEUE_EXTR_DATA		1316554	0		==			
ANR	1316579	BitAndExpression	flags & SPL_PQUEUE_EXTR_DATA		1316554	0		&			
ANR	1316580	Identifier	flags		1316554	0					
ANR	1316581	Identifier	SPL_PQUEUE_EXTR_DATA		1316554	1					
ANR	1316582	Identifier	SPL_PQUEUE_EXTR_DATA		1316554	1					
ANR	1316583	CompoundStatement		7:3:198:209	1316554	1					
ANR	1316584	IdentifierDeclStatement	zval * * data ;	127:3:4035:4046	1316554	0	True				
ANR	1316585	IdentifierDecl	* * data		1316554	0					
ANR	1316586	IdentifierDeclType	zval * *		1316554	0					
ANR	1316587	Identifier	data		1316554	1					
ANR	1316588	IfStatement	"if ( zend_hash_find ( Z_ARRVAL_PP ( value ) , ""data"" , sizeof ( ""data"" ) , ( void * * ) & data ) == SUCCESS )"		1316554	1					
ANR	1316589	Condition	"zend_hash_find ( Z_ARRVAL_PP ( value ) , ""data"" , sizeof ( ""data"" ) , ( void * * ) & data ) == SUCCESS"	128:7:4055:4140	1316554	0	True				
ANR	1316590	EqualityExpression	"zend_hash_find ( Z_ARRVAL_PP ( value ) , ""data"" , sizeof ( ""data"" ) , ( void * * ) & data ) == SUCCESS"		1316554	0		==			
ANR	1316591	CallExpression	"zend_hash_find ( Z_ARRVAL_PP ( value ) , ""data"" , sizeof ( ""data"" ) , ( void * * ) & data )"		1316554	0					
ANR	1316592	Callee	zend_hash_find		1316554	0					
ANR	1316593	Identifier	zend_hash_find		1316554	0					
ANR	1316594	ArgumentList	Z_ARRVAL_PP ( value )		1316554	1					
ANR	1316595	Argument	Z_ARRVAL_PP ( value )		1316554	0					
ANR	1316596	CallExpression	Z_ARRVAL_PP ( value )		1316554	0					
ANR	1316597	Callee	Z_ARRVAL_PP		1316554	0					
ANR	1316598	Identifier	Z_ARRVAL_PP		1316554	0					
ANR	1316599	ArgumentList	value		1316554	1					
ANR	1316600	Argument	value		1316554	0					
ANR	1316601	Identifier	value		1316554	0					
ANR	1316602	Argument	"""data"""		1316554	1					
ANR	1316603	PrimaryExpression	"""data"""		1316554	0					
ANR	1316604	Argument	"sizeof ( ""data"" )"		1316554	2					
ANR	1316605	SizeofExpression	"sizeof ( ""data"" )"		1316554	0					
ANR	1316606	Sizeof	sizeof		1316554	0					
ANR	1316607	PrimaryExpression	"""data"""		1316554	1					
ANR	1316608	Argument	( void * * ) & data		1316554	3					
ANR	1316609	CastExpression	( void * * ) & data		1316554	0					
ANR	1316610	CastTarget	void * *		1316554	0					
ANR	1316611	UnaryOperationExpression	& data		1316554	1					
ANR	1316612	UnaryOperator	&		1316554	0					
ANR	1316613	Identifier	data		1316554	1					
ANR	1316614	Identifier	SUCCESS		1316554	1					
ANR	1316615	CompoundStatement		8:95:306:306	1316554	1					
ANR	1316616	ReturnStatement	return data ;	129:4:4149:4160	1316554	0	True				
ANR	1316617	Identifier	data		1316554	0					
ANR	1316618	ElseStatement	else		1316554	0					
ANR	1316619	CompoundStatement		12:3:344:359	1316554	0					
ANR	1316620	IdentifierDeclStatement	zval * * priority ;	132:3:4181:4196	1316554	0	True				
ANR	1316621	IdentifierDecl	* * priority		1316554	0					
ANR	1316622	IdentifierDeclType	zval * *		1316554	0					
ANR	1316623	Identifier	priority		1316554	1					
ANR	1316624	IfStatement	"if ( zend_hash_find ( Z_ARRVAL_PP ( value ) , ""priority"" , sizeof ( ""priority"" ) , ( void * * ) & priority ) == SUCCESS )"		1316554	1					
ANR	1316625	Condition	"zend_hash_find ( Z_ARRVAL_PP ( value ) , ""priority"" , sizeof ( ""priority"" ) , ( void * * ) & priority ) == SUCCESS"	133:7:4205:4302	1316554	0	True				
ANR	1316626	EqualityExpression	"zend_hash_find ( Z_ARRVAL_PP ( value ) , ""priority"" , sizeof ( ""priority"" ) , ( void * * ) & priority ) == SUCCESS"		1316554	0		==			
ANR	1316627	CallExpression	"zend_hash_find ( Z_ARRVAL_PP ( value ) , ""priority"" , sizeof ( ""priority"" ) , ( void * * ) & priority )"		1316554	0					
ANR	1316628	Callee	zend_hash_find		1316554	0					
ANR	1316629	Identifier	zend_hash_find		1316554	0					
ANR	1316630	ArgumentList	Z_ARRVAL_PP ( value )		1316554	1					
ANR	1316631	Argument	Z_ARRVAL_PP ( value )		1316554	0					
ANR	1316632	CallExpression	Z_ARRVAL_PP ( value )		1316554	0					
ANR	1316633	Callee	Z_ARRVAL_PP		1316554	0					
ANR	1316634	Identifier	Z_ARRVAL_PP		1316554	0					
ANR	1316635	ArgumentList	value		1316554	1					
ANR	1316636	Argument	value		1316554	0					
ANR	1316637	Identifier	value		1316554	0					
ANR	1316638	Argument	"""priority"""		1316554	1					
ANR	1316639	PrimaryExpression	"""priority"""		1316554	0					
ANR	1316640	Argument	"sizeof ( ""priority"" )"		1316554	2					
ANR	1316641	SizeofExpression	"sizeof ( ""priority"" )"		1316554	0					
ANR	1316642	Sizeof	sizeof		1316554	0					
ANR	1316643	PrimaryExpression	"""priority"""		1316554	1					
ANR	1316644	Argument	( void * * ) & priority		1316554	3					
ANR	1316645	CastExpression	( void * * ) & priority		1316554	0					
ANR	1316646	CastTarget	void * *		1316554	0					
ANR	1316647	UnaryOperationExpression	& priority		1316554	1					
ANR	1316648	UnaryOperator	&		1316554	0					
ANR	1316649	Identifier	priority		1316554	1					
ANR	1316650	Identifier	SUCCESS		1316554	1					
ANR	1316651	CompoundStatement		13:107:468:468	1316554	1					
ANR	1316652	ReturnStatement	return priority ;	134:4:4311:4326	1316554	0	True				
ANR	1316653	Identifier	priority		1316554	0					
ANR	1316654	ReturnStatement	return NULL ;	139:1:4342:4353	1316554	1	True				
ANR	1316655	Identifier	NULL		1316554	0					
ANR	1316656	ReturnType	static zval * *		1316554	1					
ANR	1316657	Identifier	spl_pqueue_extract_helper		1316554	2					
ANR	1316658	ParameterList	"zval * * value , int flags"		1316554	3					
ANR	1316659	Parameter	zval * * value	120:40:3801:3812	1316554	0	True				
ANR	1316660	ParameterType	zval * *		1316554	0					
ANR	1316661	Identifier	value		1316554	1					
ANR	1316662	Parameter	int flags	120:54:3815:3823	1316554	1	True				
ANR	1316663	ParameterType	int		1316554	0					
ANR	1316664	Identifier	flags		1316554	1					
ANR	1316665	CFGEntryNode	ENTRY		1316554		True				
ANR	1316666	CFGExitNode	EXIT		1316554		True				
ANR	1316667	Symbol	zend_hash_find		1316554						
ANR	1316668	Symbol	SPL_PQUEUE_EXTR_BOTH		1316554						
ANR	1316669	Symbol	SUCCESS		1316554						
ANR	1316670	Symbol	& priority		1316554						
ANR	1316671	Symbol	NULL		1316554						
ANR	1316672	Symbol	data		1316554						
ANR	1316673	Symbol	flags		1316554						
ANR	1316674	Symbol	Z_ARRVAL_PP		1316554						
ANR	1316675	Symbol	priority		1316554						
ANR	1316676	Symbol	value		1316554						
ANR	1316677	Symbol	SPL_PQUEUE_EXTR_DATA		1316554						
ANR	1316678	Symbol	& data		1316554						
ANR	1316679	DeclStmt									
ANR	1316680	Decl							zval	zval	result
ANR	1316681	DeclStmt									
ANR	1316682	Decl							spl_heap_object	spl_heap_object *	heap_object
ANR	1316683	DeclStmt									
ANR	1316684	Decl							long	long	lval
ANR	1316685	DeclStmt									
ANR	1316686	Decl							zval	zval	result
ANR	1316687	DeclStmt									
ANR	1316688	Decl							spl_heap_object	spl_heap_object *	heap_object
ANR	1316689	DeclStmt									
ANR	1316690	Decl							long	long	lval
ANR	1316691	DeclStmt									
ANR	1316692	Decl							zval	zval	result
ANR	1316693	DeclStmt									
ANR	1316694	Decl							zval	zval * *	a_priority_pp
ANR	1316695	DeclStmt									
ANR	1316696	Decl							zval	zval * *	b_priority_pp
ANR	1316697	DeclStmt									
ANR	1316698	Decl							spl_heap_object	spl_heap_object *	heap_object
ANR	1316699	DeclStmt									
ANR	1316700	Decl							long	long	lval
ANR	1316701	Function	spl_ptr_heap_init	224:0:6673:7116							
ANR	1316702	FunctionDef	"spl_ptr_heap_init (spl_ptr_heap_cmp_func cmp , spl_ptr_heap_ctor_func ctor , spl_ptr_heap_dtor_func dtor)"		1316701	0					
ANR	1316703	CompoundStatement		225:0:6807:7116	1316701	0					
ANR	1316704	IdentifierDeclStatement	spl_ptr_heap * heap = emalloc ( sizeof ( spl_ptr_heap ) ) ;	226:1:6810:6860	1316701	0	True				
ANR	1316705	IdentifierDecl	* heap = emalloc ( sizeof ( spl_ptr_heap ) )		1316701	0					
ANR	1316706	IdentifierDeclType	spl_ptr_heap *		1316701	0					
ANR	1316707	Identifier	heap		1316701	1					
ANR	1316708	AssignmentExpression	* heap = emalloc ( sizeof ( spl_ptr_heap ) )		1316701	2		=			
ANR	1316709	Identifier	heap		1316701	0					
ANR	1316710	CallExpression	emalloc ( sizeof ( spl_ptr_heap ) )		1316701	1					
ANR	1316711	Callee	emalloc		1316701	0					
ANR	1316712	Identifier	emalloc		1316701	0					
ANR	1316713	ArgumentList	sizeof ( spl_ptr_heap )		1316701	1					
ANR	1316714	Argument	sizeof ( spl_ptr_heap )		1316701	0					
ANR	1316715	SizeofExpression	sizeof ( spl_ptr_heap )		1316701	0					
ANR	1316716	Sizeof	sizeof		1316701	0					
ANR	1316717	SizeofOperand	spl_ptr_heap		1316701	1					
ANR	1316718	ExpressionStatement	heap -> dtor = dtor	228:1:6864:6885	1316701	1	True				
ANR	1316719	AssignmentExpression	heap -> dtor = dtor		1316701	0		=			
ANR	1316720	PtrMemberAccess	heap -> dtor		1316701	0					
ANR	1316721	Identifier	heap		1316701	0					
ANR	1316722	Identifier	dtor		1316701	1					
ANR	1316723	Identifier	dtor		1316701	1					
ANR	1316724	ExpressionStatement	heap -> ctor = ctor	229:1:6888:6909	1316701	2	True				
ANR	1316725	AssignmentExpression	heap -> ctor = ctor		1316701	0		=			
ANR	1316726	PtrMemberAccess	heap -> ctor		1316701	0					
ANR	1316727	Identifier	heap		1316701	0					
ANR	1316728	Identifier	ctor		1316701	1					
ANR	1316729	Identifier	ctor		1316701	1					
ANR	1316730	ExpressionStatement	heap -> cmp = cmp	230:1:6912:6932	1316701	3	True				
ANR	1316731	AssignmentExpression	heap -> cmp = cmp		1316701	0		=			
ANR	1316732	PtrMemberAccess	heap -> cmp		1316701	0					
ANR	1316733	Identifier	heap		1316701	0					
ANR	1316734	Identifier	cmp		1316701	1					
ANR	1316735	Identifier	cmp		1316701	1					
ANR	1316736	ExpressionStatement	"heap -> elements = safe_emalloc ( sizeof ( spl_ptr_heap_element ) , PTR_HEAP_BLOCK_SIZE , 0 )"	231:1:6935:7018	1316701	4	True				
ANR	1316737	AssignmentExpression	"heap -> elements = safe_emalloc ( sizeof ( spl_ptr_heap_element ) , PTR_HEAP_BLOCK_SIZE , 0 )"		1316701	0		=			
ANR	1316738	PtrMemberAccess	heap -> elements		1316701	0					
ANR	1316739	Identifier	heap		1316701	0					
ANR	1316740	Identifier	elements		1316701	1					
ANR	1316741	CallExpression	"safe_emalloc ( sizeof ( spl_ptr_heap_element ) , PTR_HEAP_BLOCK_SIZE , 0 )"		1316701	1					
ANR	1316742	Callee	safe_emalloc		1316701	0					
ANR	1316743	Identifier	safe_emalloc		1316701	0					
ANR	1316744	ArgumentList	sizeof ( spl_ptr_heap_element )		1316701	1					
ANR	1316745	Argument	sizeof ( spl_ptr_heap_element )		1316701	0					
ANR	1316746	SizeofExpression	sizeof ( spl_ptr_heap_element )		1316701	0					
ANR	1316747	Sizeof	sizeof		1316701	0					
ANR	1316748	SizeofOperand	spl_ptr_heap_element		1316701	1					
ANR	1316749	Argument	PTR_HEAP_BLOCK_SIZE		1316701	1					
ANR	1316750	Identifier	PTR_HEAP_BLOCK_SIZE		1316701	0					
ANR	1316751	Argument	0		1316701	2					
ANR	1316752	PrimaryExpression	0		1316701	0					
ANR	1316753	ExpressionStatement	heap -> max_size = PTR_HEAP_BLOCK_SIZE	232:1:7021:7057	1316701	5	True				
ANR	1316754	AssignmentExpression	heap -> max_size = PTR_HEAP_BLOCK_SIZE		1316701	0		=			
ANR	1316755	PtrMemberAccess	heap -> max_size		1316701	0					
ANR	1316756	Identifier	heap		1316701	0					
ANR	1316757	Identifier	max_size		1316701	1					
ANR	1316758	Identifier	PTR_HEAP_BLOCK_SIZE		1316701	1					
ANR	1316759	ExpressionStatement	heap -> count = 0	233:1:7060:7078	1316701	6	True				
ANR	1316760	AssignmentExpression	heap -> count = 0		1316701	0		=			
ANR	1316761	PtrMemberAccess	heap -> count		1316701	0					
ANR	1316762	Identifier	heap		1316701	0					
ANR	1316763	Identifier	count		1316701	1					
ANR	1316764	PrimaryExpression	0		1316701	1					
ANR	1316765	ExpressionStatement	heap -> flags = 0	234:1:7081:7099	1316701	7	True				
ANR	1316766	AssignmentExpression	heap -> flags = 0		1316701	0		=			
ANR	1316767	PtrMemberAccess	heap -> flags		1316701	0					
ANR	1316768	Identifier	heap		1316701	0					
ANR	1316769	Identifier	flags		1316701	1					
ANR	1316770	PrimaryExpression	0		1316701	1					
ANR	1316771	ReturnStatement	return heap ;	236:1:7103:7114	1316701	8	True				
ANR	1316772	Identifier	heap		1316701	0					
ANR	1316773	ReturnType	static spl_ptr_heap *		1316701	1					
ANR	1316774	Identifier	spl_ptr_heap_init		1316701	2					
ANR	1316775	ParameterList	"spl_ptr_heap_cmp_func cmp , spl_ptr_heap_ctor_func ctor , spl_ptr_heap_dtor_func dtor"		1316701	3					
ANR	1316776	Parameter	spl_ptr_heap_cmp_func cmp	224:39:6712:6736	1316701	0	True				
ANR	1316777	ParameterType	spl_ptr_heap_cmp_func		1316701	0					
ANR	1316778	Identifier	cmp		1316701	1					
ANR	1316779	Parameter	spl_ptr_heap_ctor_func ctor	224:66:6739:6765	1316701	1	True				
ANR	1316780	ParameterType	spl_ptr_heap_ctor_func		1316701	0					
ANR	1316781	Identifier	ctor		1316701	1					
ANR	1316782	Parameter	spl_ptr_heap_dtor_func dtor	224:95:6768:6794	1316701	2	True				
ANR	1316783	ParameterType	spl_ptr_heap_dtor_func		1316701	0					
ANR	1316784	Identifier	dtor		1316701	1					
ANR	1316785	CFGEntryNode	ENTRY		1316701		True				
ANR	1316786	CFGExitNode	EXIT		1316701		True				
ANR	1316787	Symbol	heap -> flags		1316701						
ANR	1316788	Symbol	cmp		1316701						
ANR	1316789	Symbol	heap -> dtor		1316701						
ANR	1316790	Symbol	heap -> ctor		1316701						
ANR	1316791	Symbol	emalloc		1316701						
ANR	1316792	Symbol	PTR_HEAP_BLOCK_SIZE		1316701						
ANR	1316793	Symbol	heap -> cmp		1316701						
ANR	1316794	Symbol	heap -> count		1316701						
ANR	1316795	Symbol	heap -> max_size		1316701						
ANR	1316796	Symbol	ctor		1316701						
ANR	1316797	Symbol	dtor		1316701						
ANR	1316798	Symbol	heap		1316701						
ANR	1316799	Symbol	* heap		1316701						
ANR	1316800	Symbol	heap -> elements		1316701						
ANR	1316801	Symbol	safe_emalloc		1316701						
ANR	1316802	DeclStmt									
ANR	1316803	Decl							int	int	i
ANR	1316804	Function	spl_ptr_heap_top	267:0:7903:8051							
ANR	1316805	FunctionDef	spl_ptr_heap_top (spl_ptr_heap * heap)		1316804	0					
ANR	1316806	CompoundStatement		267:65:7968:8051	1316804	0					
ANR	1316807	IfStatement	if ( heap -> count == 0 )		1316804	0					
ANR	1316808	Condition	heap -> count == 0	268:5:7985:8000	1316804	0	True				
ANR	1316809	EqualityExpression	heap -> count == 0		1316804	0		==			
ANR	1316810	PtrMemberAccess	heap -> count		1316804	0					
ANR	1316811	Identifier	heap		1316804	0					
ANR	1316812	Identifier	count		1316804	1					
ANR	1316813	PrimaryExpression	0		1316804	1					
ANR	1316814	CompoundStatement		2:23:34:34	1316804	1					
ANR	1316815	ReturnStatement	return NULL ;	269:2:8007:8018	1316804	0	True				
ANR	1316816	Identifier	NULL		1316804	0					
ANR	1316817	ReturnStatement	return heap -> elements [ 0 ] ;	272:1:8025:8049	1316804	1	True				
ANR	1316818	ArrayIndexing	heap -> elements [ 0 ]		1316804	0					
ANR	1316819	PtrMemberAccess	heap -> elements		1316804	0					
ANR	1316820	Identifier	heap		1316804	0					
ANR	1316821	Identifier	elements		1316804	1					
ANR	1316822	PrimaryExpression	0		1316804	1					
ANR	1316823	ReturnType	static spl_ptr_heap_element		1316804	1					
ANR	1316824	Identifier	spl_ptr_heap_top		1316804	2					
ANR	1316825	ParameterList	spl_ptr_heap * heap		1316804	3					
ANR	1316826	Parameter	spl_ptr_heap * heap	267:45:7948:7965	1316804	0	True				
ANR	1316827	ParameterType	spl_ptr_heap *		1316804	0					
ANR	1316828	Identifier	heap		1316804	1					
ANR	1316829	CFGEntryNode	ENTRY		1316804		True				
ANR	1316830	CFGExitNode	EXIT		1316804		True				
ANR	1316831	Symbol	* * heap		1316804						
ANR	1316832	Symbol	* heap -> elements		1316804						
ANR	1316833	Symbol	NULL		1316804						
ANR	1316834	Symbol	heap -> count		1316804						
ANR	1316835	Symbol	heap		1316804						
ANR	1316836	Symbol	* heap		1316804						
ANR	1316837	Symbol	heap -> elements		1316804						
ANR	1316838	DeclStmt									
ANR	1316839	Decl							int	int	i
ANR	1316840	Decl							int	int	j
ANR	1316841	DeclStmt									
ANR	1316842	Decl							const int	const int	limit
ANR	1316843	DeclStmt									
ANR	1316844	Decl							spl_ptr_heap_element	spl_ptr_heap_element	top
ANR	1316845	DeclStmt									
ANR	1316846	Decl							spl_ptr_heap_element	spl_ptr_heap_element	bottom
ANR	1316847	DeclStmt									
ANR	1316848	Decl							int	int	i
ANR	1316849	DeclStmt									
ANR	1316850	Decl							spl_ptr_heap	spl_ptr_heap *	heap
ANR	1316851	DeclStmt									
ANR	1316852	Decl							int	int	i
ANR	1316853	Function	spl_ptr_heap_count	351:0:9817:9900							
ANR	1316854	FunctionDef	spl_ptr_heap_count (spl_ptr_heap * heap)		1316853	0					
ANR	1316855	CompoundStatement		351:50:9867:9900	1316853	0					
ANR	1316856	ReturnStatement	return heap -> count ;	352:1:9880:9898	1316853	0	True				
ANR	1316857	PtrMemberAccess	heap -> count		1316853	0					
ANR	1316858	Identifier	heap		1316853	0					
ANR	1316859	Identifier	count		1316853	1					
ANR	1316860	ReturnType	static int		1316853	1					
ANR	1316861	Identifier	spl_ptr_heap_count		1316853	2					
ANR	1316862	ParameterList	spl_ptr_heap * heap		1316853	3					
ANR	1316863	Parameter	spl_ptr_heap * heap	351:30:9847:9864	1316853	0	True				
ANR	1316864	ParameterType	spl_ptr_heap *		1316853	0					
ANR	1316865	Identifier	heap		1316853	1					
ANR	1316866	CFGEntryNode	ENTRY		1316853		True				
ANR	1316867	CFGExitNode	EXIT		1316853		True				
ANR	1316868	Symbol	heap -> count		1316853						
ANR	1316869	Symbol	heap		1316853						
ANR	1316870	Symbol	* heap		1316853						
ANR	1316871	DeclStmt									
ANR	1316872	Decl							zend_object_iterator	"zend_object_iterator * ( zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC )"	spl_heap_get_iterator
ANR	1316873	DeclStmt									
ANR	1316874	Decl							int	int	i
ANR	1316875	DeclStmt									
ANR	1316876	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1316877	Function	spl_heap_object_new_ex	385:0:10578:13068							
ANR	1316878	FunctionDef	"spl_heap_object_new_ex (zend_class_entry * class_type , spl_heap_object * * obj , zval * orig , int clone_orig TSRMLS_DC)"		1316877	0					
ANR	1316879	CompoundStatement		386:0:10727:13068	1316877	0					
ANR	1316880	IdentifierDeclStatement	zend_object_value retval ;	387:1:10730:10755	1316877	0	True				
ANR	1316881	IdentifierDecl	retval		1316877	0					
ANR	1316882	IdentifierDeclType	zend_object_value		1316877	0					
ANR	1316883	Identifier	retval		1316877	1					
ANR	1316884	IdentifierDeclStatement	spl_heap_object * intern ;	388:1:10758:10783	1316877	1	True				
ANR	1316885	IdentifierDecl	* intern		1316877	0					
ANR	1316886	IdentifierDeclType	spl_heap_object *		1316877	0					
ANR	1316887	Identifier	intern		1316877	1					
ANR	1316888	IdentifierDeclStatement	zend_class_entry * parent = class_type ;	389:1:10786:10824	1316877	2	True				
ANR	1316889	IdentifierDecl	* parent = class_type		1316877	0					
ANR	1316890	IdentifierDeclType	zend_class_entry *		1316877	0					
ANR	1316891	Identifier	parent		1316877	1					
ANR	1316892	AssignmentExpression	* parent = class_type		1316877	2		=			
ANR	1316893	Identifier	class_type		1316877	0					
ANR	1316894	Identifier	class_type		1316877	1					
ANR	1316895	IdentifierDeclStatement	int inherited = 0 ;	390:1:10827:10859	1316877	3	True				
ANR	1316896	IdentifierDecl	inherited = 0		1316877	0					
ANR	1316897	IdentifierDeclType	int		1316877	0					
ANR	1316898	Identifier	inherited		1316877	1					
ANR	1316899	AssignmentExpression	inherited = 0		1316877	2		=			
ANR	1316900	Identifier	inherited		1316877	0					
ANR	1316901	PrimaryExpression	0		1316877	1					
ANR	1316902	ExpressionStatement	"intern = ecalloc ( 1 , sizeof ( spl_heap_object ) )"	392:1:10863:10907	1316877	4	True				
ANR	1316903	AssignmentExpression	"intern = ecalloc ( 1 , sizeof ( spl_heap_object ) )"		1316877	0		=			
ANR	1316904	Identifier	intern		1316877	0					
ANR	1316905	CallExpression	"ecalloc ( 1 , sizeof ( spl_heap_object ) )"		1316877	1					
ANR	1316906	Callee	ecalloc		1316877	0					
ANR	1316907	Identifier	ecalloc		1316877	0					
ANR	1316908	ArgumentList	1		1316877	1					
ANR	1316909	Argument	1		1316877	0					
ANR	1316910	PrimaryExpression	1		1316877	0					
ANR	1316911	Argument	sizeof ( spl_heap_object )		1316877	1					
ANR	1316912	SizeofExpression	sizeof ( spl_heap_object )		1316877	0					
ANR	1316913	Sizeof	sizeof		1316877	0					
ANR	1316914	SizeofOperand	spl_heap_object		1316877	1					
ANR	1316915	ExpressionStatement	* obj = intern	393:1:10910:10923	1316877	5	True				
ANR	1316916	AssignmentExpression	* obj = intern		1316877	0		=			
ANR	1316917	UnaryOperationExpression	* obj		1316877	0					
ANR	1316918	UnaryOperator	*		1316877	0					
ANR	1316919	Identifier	obj		1316877	1					
ANR	1316920	Identifier	intern		1316877	1					
ANR	1316921	ExpressionStatement	ALLOC_INIT_ZVAL ( intern -> retval )	394:1:10926:10957	1316877	6	True				
ANR	1316922	CallExpression	ALLOC_INIT_ZVAL ( intern -> retval )		1316877	0					
ANR	1316923	Callee	ALLOC_INIT_ZVAL		1316877	0					
ANR	1316924	Identifier	ALLOC_INIT_ZVAL		1316877	0					
ANR	1316925	ArgumentList	intern -> retval		1316877	1					
ANR	1316926	Argument	intern -> retval		1316877	0					
ANR	1316927	PtrMemberAccess	intern -> retval		1316877	0					
ANR	1316928	Identifier	intern		1316877	0					
ANR	1316929	Identifier	retval		1316877	1					
ANR	1316930	Statement	zend_object_std_init	396:1:10961:10980	1316877	7	True				
ANR	1316931	Statement	(	396:21:10981:10981	1316877	8	True				
ANR	1316932	Statement	&	396:22:10982:10982	1316877	9	True				
ANR	1316933	Statement	intern	396:23:10983:10988	1316877	10	True				
ANR	1316934	Statement	->	396:29:10989:10990	1316877	11	True				
ANR	1316935	Statement	std	396:31:10991:10993	1316877	12	True				
ANR	1316936	Statement	","	396:34:10994:10994	1316877	13	True				
ANR	1316937	Statement	class_type	396:36:10996:11005	1316877	14	True				
ANR	1316938	Statement	TSRMLS_CC	396:47:11007:11015	1316877	15	True				
ANR	1316939	Statement	)	396:56:11016:11016	1316877	16	True				
ANR	1316940	ExpressionStatement		396:57:11017:11017	1316877	17	True				
ANR	1316941	ExpressionStatement	"object_properties_init ( & intern -> std , class_type )"	397:1:11020:11068	1316877	18	True				
ANR	1316942	CallExpression	"object_properties_init ( & intern -> std , class_type )"		1316877	0					
ANR	1316943	Callee	object_properties_init		1316877	0					
ANR	1316944	Identifier	object_properties_init		1316877	0					
ANR	1316945	ArgumentList	& intern -> std		1316877	1					
ANR	1316946	Argument	& intern -> std		1316877	0					
ANR	1316947	UnaryOperationExpression	& intern -> std		1316877	0					
ANR	1316948	UnaryOperator	&		1316877	0					
ANR	1316949	PtrMemberAccess	intern -> std		1316877	1					
ANR	1316950	Identifier	intern		1316877	0					
ANR	1316951	Identifier	std		1316877	1					
ANR	1316952	Argument	class_type		1316877	1					
ANR	1316953	Identifier	class_type		1316877	0					
ANR	1316954	ExpressionStatement	intern -> flags = 0	399:1:11072:11094	1316877	19	True				
ANR	1316955	AssignmentExpression	intern -> flags = 0		1316877	0		=			
ANR	1316956	PtrMemberAccess	intern -> flags		1316877	0					
ANR	1316957	Identifier	intern		1316877	0					
ANR	1316958	Identifier	flags		1316877	1					
ANR	1316959	PrimaryExpression	0		1316877	1					
ANR	1316960	ExpressionStatement	intern -> fptr_cmp = NULL	400:1:11097:11122	1316877	20	True				
ANR	1316961	AssignmentExpression	intern -> fptr_cmp = NULL		1316877	0		=			
ANR	1316962	PtrMemberAccess	intern -> fptr_cmp		1316877	0					
ANR	1316963	Identifier	intern		1316877	0					
ANR	1316964	Identifier	fptr_cmp		1316877	1					
ANR	1316965	Identifier	NULL		1316877	1					
ANR	1316966	ExpressionStatement	intern -> debug_info = NULL	401:1:11125:11150	1316877	21	True				
ANR	1316967	AssignmentExpression	intern -> debug_info = NULL		1316877	0		=			
ANR	1316968	PtrMemberAccess	intern -> debug_info		1316877	0					
ANR	1316969	Identifier	intern		1316877	0					
ANR	1316970	Identifier	debug_info		1316877	1					
ANR	1316971	Identifier	NULL		1316877	1					
ANR	1316972	IfStatement	if ( orig )		1316877	22					
ANR	1316973	Condition	orig	403:5:11158:11161	1316877	0	True				
ANR	1316974	Identifier	orig		1316877	0					
ANR	1316975	CompoundStatement		18:11:436:436	1316877	1					
ANR	1316976	Statement	spl_heap_object	404:2:11168:11182	1316877	0	True				
ANR	1316977	Statement	*	404:18:11184:11184	1316877	1	True				
ANR	1316978	Statement	other	404:19:11185:11189	1316877	2	True				
ANR	1316979	Statement	=	404:25:11191:11191	1316877	3	True				
ANR	1316980	Statement	(	404:27:11193:11193	1316877	4	True				
ANR	1316981	Statement	spl_heap_object	404:28:11194:11208	1316877	5	True				
ANR	1316982	Statement	*	404:43:11209:11209	1316877	6	True				
ANR	1316983	Statement	)	404:44:11210:11210	1316877	7	True				
ANR	1316984	Statement	zend_object_store_get_object	404:45:11211:11238	1316877	8	True				
ANR	1316985	Statement	(	404:73:11239:11239	1316877	9	True				
ANR	1316986	Statement	orig	404:74:11240:11243	1316877	10	True				
ANR	1316987	Statement	TSRMLS_CC	404:79:11245:11253	1316877	11	True				
ANR	1316988	Statement	)	404:88:11254:11254	1316877	12	True				
ANR	1316989	ExpressionStatement		404:89:11255:11255	1316877	13	True				
ANR	1316990	ExpressionStatement	intern -> ce_get_iterator = other -> ce_get_iterator	405:2:11259:11307	1316877	14	True				
ANR	1316991	AssignmentExpression	intern -> ce_get_iterator = other -> ce_get_iterator		1316877	0		=			
ANR	1316992	PtrMemberAccess	intern -> ce_get_iterator		1316877	0					
ANR	1316993	Identifier	intern		1316877	0					
ANR	1316994	Identifier	ce_get_iterator		1316877	1					
ANR	1316995	PtrMemberAccess	other -> ce_get_iterator		1316877	1					
ANR	1316996	Identifier	other		1316877	0					
ANR	1316997	Identifier	ce_get_iterator		1316877	1					
ANR	1316998	IfStatement	if ( clone_orig )		1316877	15					
ANR	1316999	Condition	clone_orig	407:6:11316:11325	1316877	0	True				
ANR	1317000	Identifier	clone_orig		1316877	0					
ANR	1317001	CompoundStatement		23:3:605:610	1316877	1					
ANR	1317002	IdentifierDeclStatement	int i ;	408:3:11333:11338	1316877	0	True				
ANR	1317003	IdentifierDecl	i		1316877	0					
ANR	1317004	IdentifierDeclType	int		1316877	0					
ANR	1317005	Identifier	i		1316877	1					
ANR	1317006	Statement	intern	409:3:11343:11348	1316877	1	True				
ANR	1317007	Statement	->	409:9:11349:11350	1316877	2	True				
ANR	1317008	Statement	heap	409:11:11351:11354	1316877	3	True				
ANR	1317009	Statement	=	409:16:11356:11356	1316877	4	True				
ANR	1317010	Statement	spl_ptr_heap_clone	409:18:11358:11375	1316877	5	True				
ANR	1317011	Statement	(	409:36:11376:11376	1316877	6	True				
ANR	1317012	Statement	other	409:37:11377:11381	1316877	7	True				
ANR	1317013	Statement	->	409:42:11382:11383	1316877	8	True				
ANR	1317014	Statement	heap	409:44:11384:11387	1316877	9	True				
ANR	1317015	Statement	TSRMLS_CC	409:49:11389:11397	1316877	10	True				
ANR	1317016	Statement	)	409:58:11398:11398	1316877	11	True				
ANR	1317017	ExpressionStatement		409:59:11399:11399	1316877	12	True				
ANR	1317018	ForStatement	for ( i = 0 ; i < intern -> heap -> count ; ++ i )		1316877	13					
ANR	1317019	ForInit	i = 0 ;	410:8:11409:11414	1316877	0	True				
ANR	1317020	AssignmentExpression	i = 0		1316877	0		=			
ANR	1317021	Identifier	i		1316877	0					
ANR	1317022	PrimaryExpression	0		1316877	1					
ANR	1317023	Condition	i < intern -> heap -> count	410:15:11416:11438	1316877	1	True				
ANR	1317024	RelationalExpression	i < intern -> heap -> count		1316877	0		<			
ANR	1317025	Identifier	i		1316877	0					
ANR	1317026	PtrMemberAccess	intern -> heap -> count		1316877	1					
ANR	1317027	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317028	Identifier	intern		1316877	0					
ANR	1317029	Identifier	heap		1316877	1					
ANR	1317030	Identifier	count		1316877	1					
ANR	1317031	UnaryExpression	++ i	410:40:11441:11443	1316877	2	True				
ANR	1317032	IncDec	++		1316877	0					
ANR	1317033	Identifier	i		1316877	1					
ANR	1317034	CompoundStatement		25:45:718:718	1316877	3					
ANR	1317035	IfStatement	if ( intern -> heap -> elements [ i ] )		1316877	0					
ANR	1317036	Condition	intern -> heap -> elements [ i ]	411:8:11456:11480	1316877	0	True				
ANR	1317037	ArrayIndexing	intern -> heap -> elements [ i ]		1316877	0					
ANR	1317038	PtrMemberAccess	intern -> heap -> elements		1316877	0					
ANR	1317039	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317040	Identifier	intern		1316877	0					
ANR	1317041	Identifier	heap		1316877	1					
ANR	1317042	Identifier	elements		1316877	1					
ANR	1317043	Identifier	i		1316877	1					
ANR	1317044	CompoundStatement		26:35:755:755	1316877	1					
ANR	1317045	ExpressionStatement	Z_ADDREF_P ( ( zval * ) intern -> heap -> elements [ i ] )	412:5:11490:11535	1316877	0	True				
ANR	1317046	CallExpression	Z_ADDREF_P ( ( zval * ) intern -> heap -> elements [ i ] )		1316877	0					
ANR	1317047	Callee	Z_ADDREF_P		1316877	0					
ANR	1317048	Identifier	Z_ADDREF_P		1316877	0					
ANR	1317049	ArgumentList	( zval * ) intern -> heap -> elements [ i ]		1316877	1					
ANR	1317050	Argument	( zval * ) intern -> heap -> elements [ i ]		1316877	0					
ANR	1317051	CastExpression	( zval * ) intern -> heap -> elements [ i ]		1316877	0					
ANR	1317052	CastTarget	zval *		1316877	0					
ANR	1317053	ArrayIndexing	intern -> heap -> elements [ i ]		1316877	1					
ANR	1317054	PtrMemberAccess	intern -> heap -> elements		1316877	0					
ANR	1317055	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317056	Identifier	intern		1316877	0					
ANR	1317057	Identifier	heap		1316877	1					
ANR	1317058	Identifier	elements		1316877	1					
ANR	1317059	Identifier	i		1316877	1					
ANR	1317060	ElseStatement	else		1316877	0					
ANR	1317061	CompoundStatement		30:9:829:829	1316877	0					
ANR	1317062	ExpressionStatement	intern -> heap = other -> heap	416:3:11562:11588	1316877	0	True				
ANR	1317063	AssignmentExpression	intern -> heap = other -> heap		1316877	0		=			
ANR	1317064	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317065	Identifier	intern		1316877	0					
ANR	1317066	Identifier	heap		1316877	1					
ANR	1317067	PtrMemberAccess	other -> heap		1316877	1					
ANR	1317068	Identifier	other		1316877	0					
ANR	1317069	Identifier	heap		1316877	1					
ANR	1317070	ExpressionStatement	intern -> flags = other -> flags	419:2:11597:11625	1316877	16	True				
ANR	1317071	AssignmentExpression	intern -> flags = other -> flags		1316877	0		=			
ANR	1317072	PtrMemberAccess	intern -> flags		1316877	0					
ANR	1317073	Identifier	intern		1316877	0					
ANR	1317074	Identifier	flags		1316877	1					
ANR	1317075	PtrMemberAccess	other -> flags		1316877	1					
ANR	1317076	Identifier	other		1316877	0					
ANR	1317077	Identifier	flags		1316877	1					
ANR	1317078	ElseStatement	else		1316877	0					
ANR	1317079	CompoundStatement		35:8:907:907	1316877	0					
ANR	1317080	ExpressionStatement	"intern -> heap = spl_ptr_heap_init ( spl_ptr_heap_zval_max_cmp , spl_ptr_heap_zval_ctor , spl_ptr_heap_zval_dtor )"	421:2:11639:11746	1316877	0	True				
ANR	1317081	AssignmentExpression	"intern -> heap = spl_ptr_heap_init ( spl_ptr_heap_zval_max_cmp , spl_ptr_heap_zval_ctor , spl_ptr_heap_zval_dtor )"		1316877	0		=			
ANR	1317082	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317083	Identifier	intern		1316877	0					
ANR	1317084	Identifier	heap		1316877	1					
ANR	1317085	CallExpression	"spl_ptr_heap_init ( spl_ptr_heap_zval_max_cmp , spl_ptr_heap_zval_ctor , spl_ptr_heap_zval_dtor )"		1316877	1					
ANR	1317086	Callee	spl_ptr_heap_init		1316877	0					
ANR	1317087	Identifier	spl_ptr_heap_init		1316877	0					
ANR	1317088	ArgumentList	spl_ptr_heap_zval_max_cmp		1316877	1					
ANR	1317089	Argument	spl_ptr_heap_zval_max_cmp		1316877	0					
ANR	1317090	Identifier	spl_ptr_heap_zval_max_cmp		1316877	0					
ANR	1317091	Argument	spl_ptr_heap_zval_ctor		1316877	1					
ANR	1317092	Identifier	spl_ptr_heap_zval_ctor		1316877	0					
ANR	1317093	Argument	spl_ptr_heap_zval_dtor		1316877	2					
ANR	1317094	Identifier	spl_ptr_heap_zval_dtor		1316877	0					
ANR	1317095	ExpressionStatement	retval . handlers = & spl_handler_SplHeap	424:1:11753:11791	1316877	23	True				
ANR	1317096	AssignmentExpression	retval . handlers = & spl_handler_SplHeap		1316877	0		=			
ANR	1317097	MemberAccess	retval . handlers		1316877	0					
ANR	1317098	Identifier	retval		1316877	0					
ANR	1317099	Identifier	handlers		1316877	1					
ANR	1317100	UnaryOperationExpression	& spl_handler_SplHeap		1316877	1					
ANR	1317101	UnaryOperator	&		1316877	0					
ANR	1317102	Identifier	spl_handler_SplHeap		1316877	1					
ANR	1317103	WhileStatement	while ( parent )		1316877	24					
ANR	1317104	Condition	parent	426:8:11802:11807	1316877	0	True				
ANR	1317105	Identifier	parent		1316877	0					
ANR	1317106	CompoundStatement		41:16:1082:1082	1316877	1					
ANR	1317107	IfStatement	if ( parent == spl_ce_SplPriorityQueue )		1316877	0					
ANR	1317108	Condition	parent == spl_ce_SplPriorityQueue	427:6:11818:11850	1316877	0	True				
ANR	1317109	EqualityExpression	parent == spl_ce_SplPriorityQueue		1316877	0		==			
ANR	1317110	Identifier	parent		1316877	0					
ANR	1317111	Identifier	spl_ce_SplPriorityQueue		1316877	1					
ANR	1317112	CompoundStatement		42:41:1125:1125	1316877	1					
ANR	1317113	ExpressionStatement	intern -> heap -> cmp = spl_ptr_pqueue_zval_cmp	428:3:11858:11901	1316877	0	True				
ANR	1317114	AssignmentExpression	intern -> heap -> cmp = spl_ptr_pqueue_zval_cmp		1316877	0		=			
ANR	1317115	PtrMemberAccess	intern -> heap -> cmp		1316877	0					
ANR	1317116	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317117	Identifier	intern		1316877	0					
ANR	1317118	Identifier	heap		1316877	1					
ANR	1317119	Identifier	cmp		1316877	1					
ANR	1317120	Identifier	spl_ptr_pqueue_zval_cmp		1316877	1					
ANR	1317121	ExpressionStatement	intern -> flags = SPL_PQUEUE_EXTR_DATA	429:3:11906:11946	1316877	1	True				
ANR	1317122	AssignmentExpression	intern -> flags = SPL_PQUEUE_EXTR_DATA		1316877	0		=			
ANR	1317123	PtrMemberAccess	intern -> flags		1316877	0					
ANR	1317124	Identifier	intern		1316877	0					
ANR	1317125	Identifier	flags		1316877	1					
ANR	1317126	Identifier	SPL_PQUEUE_EXTR_DATA		1316877	1					
ANR	1317127	ExpressionStatement	retval . handlers = & spl_handler_SplPriorityQueue	430:3:11951:12000	1316877	2	True				
ANR	1317128	AssignmentExpression	retval . handlers = & spl_handler_SplPriorityQueue		1316877	0		=			
ANR	1317129	MemberAccess	retval . handlers		1316877	0					
ANR	1317130	Identifier	retval		1316877	0					
ANR	1317131	Identifier	handlers		1316877	1					
ANR	1317132	UnaryOperationExpression	& spl_handler_SplPriorityQueue		1316877	1					
ANR	1317133	UnaryOperator	&		1316877	0					
ANR	1317134	Identifier	spl_handler_SplPriorityQueue		1316877	1					
ANR	1317135	BreakStatement	break ;	431:3:12005:12010	1316877	3	True				
ANR	1317136	IfStatement	if ( parent == spl_ce_SplMinHeap )		1316877	1					
ANR	1317137	Condition	parent == spl_ce_SplMinHeap	434:6:12023:12049	1316877	0	True				
ANR	1317138	EqualityExpression	parent == spl_ce_SplMinHeap		1316877	0		==			
ANR	1317139	Identifier	parent		1316877	0					
ANR	1317140	Identifier	spl_ce_SplMinHeap		1316877	1					
ANR	1317141	CompoundStatement		49:35:1324:1324	1316877	1					
ANR	1317142	ExpressionStatement	intern -> heap -> cmp = spl_ptr_heap_zval_min_cmp	435:3:12057:12102	1316877	0	True				
ANR	1317143	AssignmentExpression	intern -> heap -> cmp = spl_ptr_heap_zval_min_cmp		1316877	0		=			
ANR	1317144	PtrMemberAccess	intern -> heap -> cmp		1316877	0					
ANR	1317145	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317146	Identifier	intern		1316877	0					
ANR	1317147	Identifier	heap		1316877	1					
ANR	1317148	Identifier	cmp		1316877	1					
ANR	1317149	Identifier	spl_ptr_heap_zval_min_cmp		1316877	1					
ANR	1317150	BreakStatement	break ;	436:3:12107:12112	1316877	1	True				
ANR	1317151	IfStatement	if ( parent == spl_ce_SplMaxHeap )		1316877	2					
ANR	1317152	Condition	parent == spl_ce_SplMaxHeap	439:6:12125:12151	1316877	0	True				
ANR	1317153	EqualityExpression	parent == spl_ce_SplMaxHeap		1316877	0		==			
ANR	1317154	Identifier	parent		1316877	0					
ANR	1317155	Identifier	spl_ce_SplMaxHeap		1316877	1					
ANR	1317156	CompoundStatement		54:35:1426:1426	1316877	1					
ANR	1317157	ExpressionStatement	intern -> heap -> cmp = spl_ptr_heap_zval_max_cmp	440:3:12159:12204	1316877	0	True				
ANR	1317158	AssignmentExpression	intern -> heap -> cmp = spl_ptr_heap_zval_max_cmp		1316877	0		=			
ANR	1317159	PtrMemberAccess	intern -> heap -> cmp		1316877	0					
ANR	1317160	PtrMemberAccess	intern -> heap		1316877	0					
ANR	1317161	Identifier	intern		1316877	0					
ANR	1317162	Identifier	heap		1316877	1					
ANR	1317163	Identifier	cmp		1316877	1					
ANR	1317164	Identifier	spl_ptr_heap_zval_max_cmp		1316877	1					
ANR	1317165	BreakStatement	break ;	441:3:12209:12214	1316877	1	True				
ANR	1317166	IfStatement	if ( parent == spl_ce_SplHeap )		1316877	3					
ANR	1317167	Condition	parent == spl_ce_SplHeap	444:6:12227:12250	1316877	0	True				
ANR	1317168	EqualityExpression	parent == spl_ce_SplHeap		1316877	0		==			
ANR	1317169	Identifier	parent		1316877	0					
ANR	1317170	Identifier	spl_ce_SplHeap		1316877	1					
ANR	1317171	CompoundStatement		59:32:1525:1525	1316877	1					
ANR	1317172	BreakStatement	break ;	445:3:12258:12263	1316877	0	True				
ANR	1317173	ExpressionStatement	parent = parent -> parent	448:2:12272:12295	1316877	4	True				
ANR	1317174	AssignmentExpression	parent = parent -> parent		1316877	0		=			
ANR	1317175	Identifier	parent		1316877	0					
ANR	1317176	PtrMemberAccess	parent -> parent		1316877	1					
ANR	1317177	Identifier	parent		1316877	0					
ANR	1317178	Identifier	parent		1316877	1					
ANR	1317179	ExpressionStatement	inherited = 1	449:2:12299:12312	1316877	5	True				
ANR	1317180	AssignmentExpression	inherited = 1		1316877	0		=			
ANR	1317181	Identifier	inherited		1316877	0					
ANR	1317182	PrimaryExpression	1		1316877	1					
ANR	1317183	Statement	retval	452:1:12319:12324	1316877	25	True				
ANR	1317184	Statement	.	452:7:12325:12325	1316877	26	True				
ANR	1317185	Statement	handle	452:8:12326:12331	1316877	27	True				
ANR	1317186	Statement	=	452:17:12335:12335	1316877	28	True				
ANR	1317187	Statement	zend_objects_store_put	452:19:12337:12358	1316877	29	True				
ANR	1317188	Statement	(	452:41:12359:12359	1316877	30	True				
ANR	1317189	Statement	intern	452:42:12360:12365	1316877	31	True				
ANR	1317190	Statement	","	452:48:12366:12366	1316877	32	True				
ANR	1317191	Statement	(	452:50:12368:12368	1316877	33	True				
ANR	1317192	Statement	zend_objects_store_dtor_t	452:51:12369:12393	1316877	34	True				
ANR	1317193	Statement	)	452:76:12394:12394	1316877	35	True				
ANR	1317194	Statement	zend_objects_destroy_object	452:77:12395:12421	1316877	36	True				
ANR	1317195	Statement	","	452:104:12422:12422	1316877	37	True				
ANR	1317196	Statement	spl_heap_object_free_storage	452:106:12424:12451	1316877	38	True				
ANR	1317197	Statement	","	452:134:12452:12452	1316877	39	True				
ANR	1317198	Statement	NULL	452:136:12454:12457	1316877	40	True				
ANR	1317199	Statement	TSRMLS_CC	452:141:12459:12467	1316877	41	True				
ANR	1317200	Statement	)	452:150:12468:12468	1316877	42	True				
ANR	1317201	ExpressionStatement		452:151:12469:12469	1316877	43	True				
ANR	1317202	IfStatement	if ( ! parent )		1316877	44					
ANR	1317203	Condition	! parent	454:5:12477:12483	1316877	0	True				
ANR	1317204	UnaryOperationExpression	! parent		1316877	0					
ANR	1317205	UnaryOperator	!		1316877	0					
ANR	1317206	Identifier	parent		1316877	1					
ANR	1317207	CompoundStatement		69:14:1758:1758	1316877	1					
ANR	1317208	Statement	php_error_docref	455:2:12519:12534	1316877	0	True				
ANR	1317209	Statement	(	455:18:12535:12535	1316877	1	True				
ANR	1317210	Statement	NULL	455:19:12536:12539	1316877	2	True				
ANR	1317211	Statement	TSRMLS_CC	455:24:12541:12549	1316877	3	True				
ANR	1317212	Statement	","	455:33:12550:12550	1316877	4	True				
ANR	1317213	Statement	E_COMPILE_ERROR	455:35:12552:12566	1316877	5	True				
ANR	1317214	Statement	","	455:50:12567:12567	1316877	6	True				
ANR	1317215	Statement	"""Internal compiler error, Class is not child of SplHeap"""	455:52:12569:12624	1316877	7	True				
ANR	1317216	Statement	)	455:108:12625:12625	1316877	8	True				
ANR	1317217	ExpressionStatement		455:109:12626:12626	1316877	9	True				
ANR	1317218	IfStatement	if ( inherited )		1316877	45					
ANR	1317219	Condition	inherited	458:5:12637:12645	1316877	0	True				
ANR	1317220	Identifier	inherited		1316877	0					
ANR	1317221	CompoundStatement		73:16:1920:1920	1316877	1					
ANR	1317222	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""compare"" , sizeof ( ""compare"" ) , ( void * * ) & intern -> fptr_cmp )"	459:2:12652:12760	1316877	0	True				
ANR	1317223	CallExpression	"zend_hash_find ( & class_type -> function_table , ""compare"" , sizeof ( ""compare"" ) , ( void * * ) & intern -> fptr_cmp )"		1316877	0					
ANR	1317224	Callee	zend_hash_find		1316877	0					
ANR	1317225	Identifier	zend_hash_find		1316877	0					
ANR	1317226	ArgumentList	& class_type -> function_table		1316877	1					
ANR	1317227	Argument	& class_type -> function_table		1316877	0					
ANR	1317228	UnaryOperationExpression	& class_type -> function_table		1316877	0					
ANR	1317229	UnaryOperator	&		1316877	0					
ANR	1317230	PtrMemberAccess	class_type -> function_table		1316877	1					
ANR	1317231	Identifier	class_type		1316877	0					
ANR	1317232	Identifier	function_table		1316877	1					
ANR	1317233	Argument	"""compare"""		1316877	1					
ANR	1317234	PrimaryExpression	"""compare"""		1316877	0					
ANR	1317235	Argument	"sizeof ( ""compare"" )"		1316877	2					
ANR	1317236	SizeofExpression	"sizeof ( ""compare"" )"		1316877	0					
ANR	1317237	Sizeof	sizeof		1316877	0					
ANR	1317238	PrimaryExpression	"""compare"""		1316877	1					
ANR	1317239	Argument	( void * * ) & intern -> fptr_cmp		1316877	3					
ANR	1317240	CastExpression	( void * * ) & intern -> fptr_cmp		1316877	0					
ANR	1317241	CastTarget	void * *		1316877	0					
ANR	1317242	UnaryOperationExpression	& intern -> fptr_cmp		1316877	1					
ANR	1317243	UnaryOperator	&		1316877	0					
ANR	1317244	PtrMemberAccess	intern -> fptr_cmp		1316877	1					
ANR	1317245	Identifier	intern		1316877	0					
ANR	1317246	Identifier	fptr_cmp		1316877	1					
ANR	1317247	IfStatement	if ( intern -> fptr_cmp -> common . scope == parent )		1316877	1					
ANR	1317248	Condition	intern -> fptr_cmp -> common . scope == parent	460:6:12768:12807	1316877	0	True				
ANR	1317249	EqualityExpression	intern -> fptr_cmp -> common . scope == parent		1316877	0		==			
ANR	1317250	MemberAccess	intern -> fptr_cmp -> common . scope		1316877	0					
ANR	1317251	PtrMemberAccess	intern -> fptr_cmp -> common		1316877	0					
ANR	1317252	PtrMemberAccess	intern -> fptr_cmp		1316877	0					
ANR	1317253	Identifier	intern		1316877	0					
ANR	1317254	Identifier	fptr_cmp		1316877	1					
ANR	1317255	Identifier	common		1316877	1					
ANR	1317256	Identifier	scope		1316877	1					
ANR	1317257	Identifier	parent		1316877	1					
ANR	1317258	CompoundStatement		75:48:2082:2082	1316877	1					
ANR	1317259	ExpressionStatement	intern -> fptr_cmp = NULL	461:3:12815:12838	1316877	0	True				
ANR	1317260	AssignmentExpression	intern -> fptr_cmp = NULL		1316877	0		=			
ANR	1317261	PtrMemberAccess	intern -> fptr_cmp		1316877	0					
ANR	1317262	Identifier	intern		1316877	0					
ANR	1317263	Identifier	fptr_cmp		1316877	1					
ANR	1317264	Identifier	NULL		1316877	1					
ANR	1317265	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) , ( void * * ) & intern -> fptr_count )"	463:2:12846:12960	1316877	2	True				
ANR	1317266	CallExpression	"zend_hash_find ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) , ( void * * ) & intern -> fptr_count )"		1316877	0					
ANR	1317267	Callee	zend_hash_find		1316877	0					
ANR	1317268	Identifier	zend_hash_find		1316877	0					
ANR	1317269	ArgumentList	& class_type -> function_table		1316877	1					
ANR	1317270	Argument	& class_type -> function_table		1316877	0					
ANR	1317271	UnaryOperationExpression	& class_type -> function_table		1316877	0					
ANR	1317272	UnaryOperator	&		1316877	0					
ANR	1317273	PtrMemberAccess	class_type -> function_table		1316877	1					
ANR	1317274	Identifier	class_type		1316877	0					
ANR	1317275	Identifier	function_table		1316877	1					
ANR	1317276	Argument	"""count"""		1316877	1					
ANR	1317277	PrimaryExpression	"""count"""		1316877	0					
ANR	1317278	Argument	"sizeof ( ""count"" )"		1316877	2					
ANR	1317279	SizeofExpression	"sizeof ( ""count"" )"		1316877	0					
ANR	1317280	Sizeof	sizeof		1316877	0					
ANR	1317281	PrimaryExpression	"""count"""		1316877	1					
ANR	1317282	Argument	( void * * ) & intern -> fptr_count		1316877	3					
ANR	1317283	CastExpression	( void * * ) & intern -> fptr_count		1316877	0					
ANR	1317284	CastTarget	void * *		1316877	0					
ANR	1317285	UnaryOperationExpression	& intern -> fptr_count		1316877	1					
ANR	1317286	UnaryOperator	&		1316877	0					
ANR	1317287	PtrMemberAccess	intern -> fptr_count		1316877	1					
ANR	1317288	Identifier	intern		1316877	0					
ANR	1317289	Identifier	fptr_count		1316877	1					
ANR	1317290	IfStatement	if ( intern -> fptr_count -> common . scope == parent )		1316877	3					
ANR	1317291	Condition	intern -> fptr_count -> common . scope == parent	464:6:12968:13009	1316877	0	True				
ANR	1317292	EqualityExpression	intern -> fptr_count -> common . scope == parent		1316877	0		==			
ANR	1317293	MemberAccess	intern -> fptr_count -> common . scope		1316877	0					
ANR	1317294	PtrMemberAccess	intern -> fptr_count -> common		1316877	0					
ANR	1317295	PtrMemberAccess	intern -> fptr_count		1316877	0					
ANR	1317296	Identifier	intern		1316877	0					
ANR	1317297	Identifier	fptr_count		1316877	1					
ANR	1317298	Identifier	common		1316877	1					
ANR	1317299	Identifier	scope		1316877	1					
ANR	1317300	Identifier	parent		1316877	1					
ANR	1317301	CompoundStatement		79:50:2284:2284	1316877	1					
ANR	1317302	ExpressionStatement	intern -> fptr_count = NULL	465:3:13017:13042	1316877	0	True				
ANR	1317303	AssignmentExpression	intern -> fptr_count = NULL		1316877	0		=			
ANR	1317304	PtrMemberAccess	intern -> fptr_count		1316877	0					
ANR	1317305	Identifier	intern		1316877	0					
ANR	1317306	Identifier	fptr_count		1316877	1					
ANR	1317307	Identifier	NULL		1316877	1					
ANR	1317308	ReturnStatement	return retval ;	469:1:13053:13066	1316877	46	True				
ANR	1317309	Identifier	retval		1316877	0					
ANR	1317310	ReturnType	static zend_object_value		1316877	1					
ANR	1317311	Identifier	spl_heap_object_new_ex		1316877	2					
ANR	1317312	ParameterList	"zend_class_entry * class_type , spl_heap_object * * obj , zval * orig , int clone_orig TSRMLS_DC"		1316877	3					
ANR	1317313	Parameter	zend_class_entry * class_type	385:48:10626:10653	1316877	0	True				
ANR	1317314	ParameterType	zend_class_entry *		1316877	0					
ANR	1317315	Identifier	class_type		1316877	1					
ANR	1317316	Parameter	spl_heap_object * * obj	385:78:10656:10676	1316877	1	True				
ANR	1317317	ParameterType	spl_heap_object * *		1316877	0					
ANR	1317318	Identifier	obj		1316877	1					
ANR	1317319	Parameter	zval * orig	385:101:10679:10688	1316877	2	True				
ANR	1317320	ParameterType	zval *		1316877	0					
ANR	1317321	Identifier	orig		1316877	1					
ANR	1317322	Parameter	int clone_orig TSRMLS_DC	385:113:10691:10714	1316877	3	True				
ANR	1317323	ParameterType	int clone_orig		1316877	0					
ANR	1317324	Identifier	TSRMLS_DC		1316877	1					
ANR	1317325	CFGEntryNode	ENTRY		1316877		True				
ANR	1317326	CFGExitNode	EXIT		1316877		True				
ANR	1317327	Symbol	parent		1316877						
ANR	1317328	Symbol	* parent		1316877						
ANR	1317329	Symbol	intern -> fptr_count -> common . scope		1316877						
ANR	1317330	Symbol	* intern -> heap -> elements		1316877						
ANR	1317331	Symbol	& spl_handler_SplPriorityQueue		1316877						
ANR	1317332	Symbol	intern -> fptr_cmp -> common		1316877						
ANR	1317333	Symbol	TSRMLS_DC		1316877						
ANR	1317334	Symbol	class_type		1316877						
ANR	1317335	Symbol	parent -> parent		1316877						
ANR	1317336	Symbol	intern -> heap		1316877						
ANR	1317337	Symbol	ecalloc		1316877						
ANR	1317338	Symbol	other -> flags		1316877						
ANR	1317339	Symbol	spl_ptr_heap_zval_min_cmp		1316877						
ANR	1317340	Symbol	spl_ce_SplPriorityQueue		1316877						
ANR	1317341	Symbol	& intern -> fptr_count		1316877						
ANR	1317342	Symbol	other -> ce_get_iterator		1316877						
ANR	1317343	Symbol	intern -> retval		1316877						
ANR	1317344	Symbol	NULL		1316877						
ANR	1317345	Symbol	intern -> fptr_cmp -> common . scope		1316877						
ANR	1317346	Symbol	intern -> fptr_count -> common		1316877						
ANR	1317347	Symbol	* * intern -> heap		1316877						
ANR	1317348	Symbol	* other		1316877						
ANR	1317349	Symbol	* intern -> fptr_count		1316877						
ANR	1317350	Symbol	retval		1316877						
ANR	1317351	Symbol	spl_ce_SplMaxHeap		1316877						
ANR	1317352	Symbol	intern -> heap -> count		1316877						
ANR	1317353	Symbol	spl_ptr_heap_init		1316877						
ANR	1317354	Symbol	spl_ptr_heap_zval_ctor		1316877						
ANR	1317355	Symbol	& intern -> std		1316877						
ANR	1317356	Symbol	* * intern		1316877						
ANR	1317357	Symbol	retval . handlers		1316877						
ANR	1317358	Symbol	intern -> debug_info		1316877						
ANR	1317359	Symbol	other		1316877						
ANR	1317360	Symbol	spl_ce_SplMinHeap		1316877						
ANR	1317361	Symbol	* * * intern		1316877						
ANR	1317362	Symbol	intern -> heap -> elements		1316877						
ANR	1317363	Symbol	intern -> fptr_count		1316877						
ANR	1317364	Symbol	intern -> flags		1316877						
ANR	1317365	Symbol	spl_ptr_heap_zval_max_cmp		1316877						
ANR	1317366	Symbol	intern -> ce_get_iterator		1316877						
ANR	1317367	Symbol	spl_ptr_heap_zval_dtor		1316877						
ANR	1317368	Symbol	& spl_handler_SplHeap		1316877						
ANR	1317369	Symbol	spl_ce_SplHeap		1316877						
ANR	1317370	Symbol	& class_type -> function_table		1316877						
ANR	1317371	Symbol	SPL_PQUEUE_EXTR_DATA		1316877						
ANR	1317372	Symbol	* obj		1316877						
ANR	1317373	Symbol	* intern		1316877						
ANR	1317374	Symbol	intern		1316877						
ANR	1317375	Symbol	other -> heap		1316877						
ANR	1317376	Symbol	i		1316877						
ANR	1317377	Symbol	* intern -> heap		1316877						
ANR	1317378	Symbol	intern -> fptr_cmp		1316877						
ANR	1317379	Symbol	* i		1316877						
ANR	1317380	Symbol	spl_ptr_pqueue_zval_cmp		1316877						
ANR	1317381	Symbol	orig		1316877						
ANR	1317382	Symbol	obj		1316877						
ANR	1317383	Symbol	inherited		1316877						
ANR	1317384	Symbol	* intern -> fptr_cmp		1316877						
ANR	1317385	Symbol	clone_orig		1316877						
ANR	1317386	Symbol	intern -> heap -> cmp		1316877						
ANR	1317387	Symbol	& intern -> fptr_cmp		1316877						
ANR	1317388	DeclStmt									
ANR	1317389	Decl							spl_heap_object	spl_heap_object *	tmp
ANR	1317390	DeclStmt									
ANR	1317391	Decl							zend_object_value	zend_object_value	new_obj_val
ANR	1317392	DeclStmt									
ANR	1317393	Decl							zend_object	zend_object *	old_object
ANR	1317394	DeclStmt									
ANR	1317395	Decl							zend_object	zend_object *	new_object
ANR	1317396	DeclStmt									
ANR	1317397	Decl							zend_object_handle	zend_object_handle	handle
ANR	1317398	DeclStmt									
ANR	1317399	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317400	DeclStmt									
ANR	1317401	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317402	DeclStmt									
ANR	1317403	Decl							zval	zval *	rv
ANR	1317404	DeclStmt									
ANR	1317405	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317406	DeclStmt									
ANR	1317407	Decl							zval	zval *	tmp
ANR	1317408	Decl							zval	zval	zrv
ANR	1317409	Decl							zval	zval *	heap_array
ANR	1317410	DeclStmt									
ANR	1317411	Decl							char	char *	pnstr
ANR	1317412	DeclStmt									
ANR	1317413	Decl							int	int	pnlen
ANR	1317414	DeclStmt									
ANR	1317415	Decl							int	int	i
ANR	1317416	DeclStmt									
ANR	1317417	Decl							long	long	count
ANR	1317418	DeclStmt									
ANR	1317419	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317420	DeclStmt									
ANR	1317421	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317422	DeclStmt									
ANR	1317423	Decl							zval	zval *	value
ANR	1317424	DeclStmt									
ANR	1317425	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317426	DeclStmt									
ANR	1317427	Decl							zval	zval *	value
ANR	1317428	DeclStmt									
ANR	1317429	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317430	DeclStmt									
ANR	1317431	Decl							zval	zval *	data
ANR	1317432	Decl							zval	zval *	priority
ANR	1317433	Decl							zval	zval *	elem
ANR	1317434	DeclStmt									
ANR	1317435	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317436	DeclStmt									
ANR	1317437	Decl							zval	zval *	value
ANR	1317438	Decl							zval	zval *	value_out
ANR	1317439	Decl							zval	zval * *	value_out_pp
ANR	1317440	DeclStmt									
ANR	1317441	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317442	DeclStmt									
ANR	1317443	Decl							zval	zval *	value
ANR	1317444	Decl							zval	zval * *	value_out
ANR	1317445	DeclStmt									
ANR	1317446	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317447	DeclStmt									
ANR	1317448	Decl							long	long	value
ANR	1317449	DeclStmt									
ANR	1317450	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317451	DeclStmt									
ANR	1317452	Decl							value	value &	SPL_PQUEUE_EXTR_MASK
ANR	1317453	DeclStmt									
ANR	1317454	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317455	DeclStmt									
ANR	1317456	Decl							flags	flags &	~SPL_HEAP_CORRUPTED
ANR	1317457	DeclStmt									
ANR	1317458	Decl							zval	zval *	a
ANR	1317459	Decl							zval	zval *	b
ANR	1317460	DeclStmt									
ANR	1317461	Decl							zval	zval *	value
ANR	1317462	DeclStmt									
ANR	1317463	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317464	DeclStmt									
ANR	1317465	Decl							zval	zval *	a
ANR	1317466	Decl							zval	zval *	b
ANR	1317467	DeclStmt									
ANR	1317468	Decl							zval	zval *	a
ANR	1317469	Decl							zval	zval *	b
ANR	1317470	DeclStmt									
ANR	1317471	Decl							spl_heap_it	spl_heap_it *	iterator
ANR	1317472	DeclStmt									
ANR	1317473	Decl							spl_heap_it	spl_heap_it *	iterator
ANR	1317474	DeclStmt									
ANR	1317475	Decl							spl_heap_it	spl_heap_it *	iterator
ANR	1317476	DeclStmt									
ANR	1317477	Decl							zval	zval * *	element
ANR	1317478	DeclStmt									
ANR	1317479	Decl							spl_heap_it	spl_heap_it *	iterator
ANR	1317480	DeclStmt									
ANR	1317481	Decl							zval	zval * *	element
ANR	1317482	DeclStmt									
ANR	1317483	Decl							spl_heap_it	spl_heap_it *	iterator
ANR	1317484	DeclStmt									
ANR	1317485	Decl							zval	zval *	object
ANR	1317486	DeclStmt									
ANR	1317487	Decl							spl_heap_it	spl_heap_it *	iterator
ANR	1317488	DeclStmt									
ANR	1317489	Decl							spl_ptr_heap_element	spl_ptr_heap_element	elem
ANR	1317490	DeclStmt									
ANR	1317491	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317492	DeclStmt									
ANR	1317493	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317494	DeclStmt									
ANR	1317495	Decl							spl_ptr_heap_element	spl_ptr_heap_element	elem
ANR	1317496	DeclStmt									
ANR	1317497	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317498	DeclStmt									
ANR	1317499	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317500	DeclStmt									
ANR	1317501	Decl							zval	zval *	element
ANR	1317502	DeclStmt									
ANR	1317503	Decl							spl_heap_object	spl_heap_object *	intern
ANR	1317504	DeclStmt									
ANR	1317505	Decl							zval	zval * *	element
ANR	1317506	DeclStmt									
ANR	1317507	Decl							zval	zval * *	data
ANR	1317508	DeclStmt									
ANR	1317509	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	spl_heap_it_funcs
ANR	1317510	DeclStmt									
ANR	1317511	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	spl_pqueue_it_funcs
ANR	1317512	Function	spl_heap_get_iterator	1102:0:29559:30327							
ANR	1317513	FunctionDef	"spl_heap_get_iterator (zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC)"		1317512	0					
ANR	1317514	CompoundStatement		1103:0:29671:30327	1317512	0					
ANR	1317515	IdentifierDeclStatement	spl_heap_it * iterator ;	1104:1:29674:29699	1317512	0	True				
ANR	1317516	IdentifierDecl	* iterator		1317512	0					
ANR	1317517	IdentifierDeclType	spl_heap_it *		1317512	0					
ANR	1317518	Identifier	iterator		1317512	1					
ANR	1317519	Statement	spl_heap_object	1105:1:29702:29716	1317512	1	True				
ANR	1317520	Statement	*	1105:17:29718:29718	1317512	2	True				
ANR	1317521	Statement	heap_object	1105:18:29719:29729	1317512	3	True				
ANR	1317522	Statement	=	1105:30:29731:29731	1317512	4	True				
ANR	1317523	Statement	(	1105:32:29733:29733	1317512	5	True				
ANR	1317524	Statement	spl_heap_object	1105:33:29734:29748	1317512	6	True				
ANR	1317525	Statement	*	1105:48:29749:29749	1317512	7	True				
ANR	1317526	Statement	)	1105:49:29750:29750	1317512	8	True				
ANR	1317527	Statement	zend_object_store_get_object	1105:50:29751:29778	1317512	9	True				
ANR	1317528	Statement	(	1105:78:29779:29779	1317512	10	True				
ANR	1317529	Statement	object	1105:79:29780:29785	1317512	11	True				
ANR	1317530	Statement	TSRMLS_CC	1105:86:29787:29795	1317512	12	True				
ANR	1317531	Statement	)	1105:95:29796:29796	1317512	13	True				
ANR	1317532	ExpressionStatement		1105:96:29797:29797	1317512	14	True				
ANR	1317533	IfStatement	if ( by_ref )		1317512	15					
ANR	1317534	Condition	by_ref	1107:5:29805:29810	1317512	0	True				
ANR	1317535	Identifier	by_ref		1317512	0					
ANR	1317536	CompoundStatement		5:13:141:141	1317512	1					
ANR	1317537	Statement	zend_throw_exception	1108:2:29817:29836	1317512	0	True				
ANR	1317538	Statement	(	1108:22:29837:29837	1317512	1	True				
ANR	1317539	Statement	spl_ce_RuntimeException	1108:23:29838:29860	1317512	2	True				
ANR	1317540	Statement	","	1108:46:29861:29861	1317512	3	True				
ANR	1317541	Statement	"""An iterator cannot be used with foreach by reference"""	1108:48:29863:29916	1317512	4	True				
ANR	1317542	Statement	","	1108:102:29917:29917	1317512	5	True				
ANR	1317543	Statement	0	1108:104:29919:29919	1317512	6	True				
ANR	1317544	Statement	TSRMLS_CC	1108:106:29921:29929	1317512	7	True				
ANR	1317545	Statement	)	1108:115:29930:29930	1317512	8	True				
ANR	1317546	ExpressionStatement		1108:116:29931:29931	1317512	9	True				
ANR	1317547	ReturnStatement	return NULL ;	1109:2:29935:29946	1317512	10	True				
ANR	1317548	Identifier	NULL		1317512	0					
ANR	1317549	ExpressionStatement	Z_ADDREF_P ( object )	1112:1:29953:29971	1317512	16	True				
ANR	1317550	CallExpression	Z_ADDREF_P ( object )		1317512	0					
ANR	1317551	Callee	Z_ADDREF_P		1317512	0					
ANR	1317552	Identifier	Z_ADDREF_P		1317512	0					
ANR	1317553	ArgumentList	object		1317512	1					
ANR	1317554	Argument	object		1317512	0					
ANR	1317555	Identifier	object		1317512	0					
ANR	1317556	ExpressionStatement	iterator = emalloc ( sizeof ( spl_heap_it ) )	1114:1:29975:30031	1317512	17	True				
ANR	1317557	AssignmentExpression	iterator = emalloc ( sizeof ( spl_heap_it ) )		1317512	0		=			
ANR	1317558	Identifier	iterator		1317512	0					
ANR	1317559	CallExpression	emalloc ( sizeof ( spl_heap_it ) )		1317512	1					
ANR	1317560	Callee	emalloc		1317512	0					
ANR	1317561	Identifier	emalloc		1317512	0					
ANR	1317562	ArgumentList	sizeof ( spl_heap_it )		1317512	1					
ANR	1317563	Argument	sizeof ( spl_heap_it )		1317512	0					
ANR	1317564	SizeofExpression	sizeof ( spl_heap_it )		1317512	0					
ANR	1317565	Sizeof	sizeof		1317512	0					
ANR	1317566	SizeofOperand	spl_heap_it		1317512	1					
ANR	1317567	ExpressionStatement	iterator -> intern . it . data = ( void * ) object	1115:1:30034:30075	1317512	18	True				
ANR	1317568	AssignmentExpression	iterator -> intern . it . data = ( void * ) object		1317512	0		=			
ANR	1317569	MemberAccess	iterator -> intern . it . data		1317512	0					
ANR	1317570	MemberAccess	iterator -> intern . it		1317512	0					
ANR	1317571	PtrMemberAccess	iterator -> intern		1317512	0					
ANR	1317572	Identifier	iterator		1317512	0					
ANR	1317573	Identifier	intern		1317512	1					
ANR	1317574	Identifier	it		1317512	1					
ANR	1317575	Identifier	data		1317512	1					
ANR	1317576	CastExpression	( void * ) object		1317512	1					
ANR	1317577	CastTarget	void *		1317512	0					
ANR	1317578	Identifier	object		1317512	1					
ANR	1317579	ExpressionStatement	iterator -> intern . it . funcs = & spl_heap_it_funcs	1116:1:30078:30124	1317512	19	True				
ANR	1317580	AssignmentExpression	iterator -> intern . it . funcs = & spl_heap_it_funcs		1317512	0		=			
ANR	1317581	MemberAccess	iterator -> intern . it . funcs		1317512	0					
ANR	1317582	MemberAccess	iterator -> intern . it		1317512	0					
ANR	1317583	PtrMemberAccess	iterator -> intern		1317512	0					
ANR	1317584	Identifier	iterator		1317512	0					
ANR	1317585	Identifier	intern		1317512	1					
ANR	1317586	Identifier	it		1317512	1					
ANR	1317587	Identifier	funcs		1317512	1					
ANR	1317588	UnaryOperationExpression	& spl_heap_it_funcs		1317512	1					
ANR	1317589	UnaryOperator	&		1317512	0					
ANR	1317590	Identifier	spl_heap_it_funcs		1317512	1					
ANR	1317591	ExpressionStatement	iterator -> intern . ce = ce	1117:1:30127:30157	1317512	20	True				
ANR	1317592	AssignmentExpression	iterator -> intern . ce = ce		1317512	0		=			
ANR	1317593	MemberAccess	iterator -> intern . ce		1317512	0					
ANR	1317594	PtrMemberAccess	iterator -> intern		1317512	0					
ANR	1317595	Identifier	iterator		1317512	0					
ANR	1317596	Identifier	intern		1317512	1					
ANR	1317597	Identifier	ce		1317512	1					
ANR	1317598	Identifier	ce		1317512	1					
ANR	1317599	ExpressionStatement	iterator -> intern . value = NULL	1118:1:30160:30192	1317512	21	True				
ANR	1317600	AssignmentExpression	iterator -> intern . value = NULL		1317512	0		=			
ANR	1317601	MemberAccess	iterator -> intern . value		1317512	0					
ANR	1317602	PtrMemberAccess	iterator -> intern		1317512	0					
ANR	1317603	Identifier	iterator		1317512	0					
ANR	1317604	Identifier	intern		1317512	1					
ANR	1317605	Identifier	value		1317512	1					
ANR	1317606	Identifier	NULL		1317512	1					
ANR	1317607	ExpressionStatement	iterator -> flags = heap_object -> flags	1119:1:30195:30241	1317512	22	True				
ANR	1317608	AssignmentExpression	iterator -> flags = heap_object -> flags		1317512	0		=			
ANR	1317609	PtrMemberAccess	iterator -> flags		1317512	0					
ANR	1317610	Identifier	iterator		1317512	0					
ANR	1317611	Identifier	flags		1317512	1					
ANR	1317612	PtrMemberAccess	heap_object -> flags		1317512	1					
ANR	1317613	Identifier	heap_object		1317512	0					
ANR	1317614	Identifier	flags		1317512	1					
ANR	1317615	ExpressionStatement	iterator -> object = heap_object	1120:1:30244:30283	1317512	23	True				
ANR	1317616	AssignmentExpression	iterator -> object = heap_object		1317512	0		=			
ANR	1317617	PtrMemberAccess	iterator -> object		1317512	0					
ANR	1317618	Identifier	iterator		1317512	0					
ANR	1317619	Identifier	object		1317512	1					
ANR	1317620	Identifier	heap_object		1317512	1					
ANR	1317621	ReturnStatement	return ( zend_object_iterator * ) iterator ;	1122:1:30287:30325	1317512	24	True				
ANR	1317622	CastExpression	( zend_object_iterator * ) iterator		1317512	0					
ANR	1317623	CastTarget	zend_object_iterator *		1317512	0					
ANR	1317624	Identifier	iterator		1317512	1					
ANR	1317625	ReturnType	zend_object_iterator *		1317512	1					
ANR	1317626	Identifier	spl_heap_get_iterator		1317512	2					
ANR	1317627	ParameterList	"zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC"		1317512	3					
ANR	1317628	Parameter	zend_class_entry * ce	1102:44:29603:29622	1317512	0	True				
ANR	1317629	ParameterType	zend_class_entry *		1317512	0					
ANR	1317630	Identifier	ce		1317512	1					
ANR	1317631	Parameter	zval * object	1102:66:29625:29636	1317512	1	True				
ANR	1317632	ParameterType	zval *		1317512	0					
ANR	1317633	Identifier	object		1317512	1					
ANR	1317634	Parameter	int by_ref TSRMLS_DC	1102:80:29639:29658	1317512	2	True				
ANR	1317635	ParameterType	int by_ref		1317512	0					
ANR	1317636	Identifier	TSRMLS_DC		1317512	1					
ANR	1317637	CFGEntryNode	ENTRY		1317512		True				
ANR	1317638	CFGExitNode	EXIT		1317512		True				
ANR	1317639	Symbol	iterator -> flags		1317512						
ANR	1317640	Symbol	iterator -> object		1317512						
ANR	1317641	Symbol	ce		1317512						
ANR	1317642	Symbol	iterator -> intern		1317512						
ANR	1317643	Symbol	NULL		1317512						
ANR	1317644	Symbol	* heap_object		1317512						
ANR	1317645	Symbol	iterator -> intern . it . data		1317512						
ANR	1317646	Symbol	iterator -> intern . ce		1317512						
ANR	1317647	Symbol	& spl_heap_it_funcs		1317512						
ANR	1317648	Symbol	TSRMLS_DC		1317512						
ANR	1317649	Symbol	iterator -> intern . it		1317512						
ANR	1317650	Symbol	iterator -> intern . value		1317512						
ANR	1317651	Symbol	iterator		1317512						
ANR	1317652	Symbol	emalloc		1317512						
ANR	1317653	Symbol	* iterator		1317512						
ANR	1317654	Symbol	heap_object		1317512						
ANR	1317655	Symbol	iterator -> intern . it . funcs		1317512						
ANR	1317656	Symbol	by_ref		1317512						
ANR	1317657	Symbol	heap_object -> flags		1317512						
ANR	1317658	Symbol	object		1317512						
ANR	1317659	Function	spl_pqueue_get_iterator	1126:0:30340:31112							
ANR	1317660	FunctionDef	"spl_pqueue_get_iterator (zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC)"		1317659	0					
ANR	1317661	CompoundStatement		1127:0:30454:31112	1317659	0					
ANR	1317662	IdentifierDeclStatement	spl_heap_it * iterator ;	1128:1:30457:30482	1317659	0	True				
ANR	1317663	IdentifierDecl	* iterator		1317659	0					
ANR	1317664	IdentifierDeclType	spl_heap_it *		1317659	0					
ANR	1317665	Identifier	iterator		1317659	1					
ANR	1317666	Statement	spl_heap_object	1129:1:30485:30499	1317659	1	True				
ANR	1317667	Statement	*	1129:17:30501:30501	1317659	2	True				
ANR	1317668	Statement	heap_object	1129:18:30502:30512	1317659	3	True				
ANR	1317669	Statement	=	1129:30:30514:30514	1317659	4	True				
ANR	1317670	Statement	(	1129:32:30516:30516	1317659	5	True				
ANR	1317671	Statement	spl_heap_object	1129:33:30517:30531	1317659	6	True				
ANR	1317672	Statement	*	1129:48:30532:30532	1317659	7	True				
ANR	1317673	Statement	)	1129:49:30533:30533	1317659	8	True				
ANR	1317674	Statement	zend_object_store_get_object	1129:50:30534:30561	1317659	9	True				
ANR	1317675	Statement	(	1129:78:30562:30562	1317659	10	True				
ANR	1317676	Statement	object	1129:79:30563:30568	1317659	11	True				
ANR	1317677	Statement	TSRMLS_CC	1129:86:30570:30578	1317659	12	True				
ANR	1317678	Statement	)	1129:95:30579:30579	1317659	13	True				
ANR	1317679	ExpressionStatement		1129:96:30580:30580	1317659	14	True				
ANR	1317680	IfStatement	if ( by_ref )		1317659	15					
ANR	1317681	Condition	by_ref	1131:5:30588:30593	1317659	0	True				
ANR	1317682	Identifier	by_ref		1317659	0					
ANR	1317683	CompoundStatement		5:13:141:141	1317659	1					
ANR	1317684	Statement	zend_throw_exception	1132:2:30600:30619	1317659	0	True				
ANR	1317685	Statement	(	1132:22:30620:30620	1317659	1	True				
ANR	1317686	Statement	spl_ce_RuntimeException	1132:23:30621:30643	1317659	2	True				
ANR	1317687	Statement	","	1132:46:30644:30644	1317659	3	True				
ANR	1317688	Statement	"""An iterator cannot be used with foreach by reference"""	1132:48:30646:30699	1317659	4	True				
ANR	1317689	Statement	","	1132:102:30700:30700	1317659	5	True				
ANR	1317690	Statement	0	1132:104:30702:30702	1317659	6	True				
ANR	1317691	Statement	TSRMLS_CC	1132:106:30704:30712	1317659	7	True				
ANR	1317692	Statement	)	1132:115:30713:30713	1317659	8	True				
ANR	1317693	ExpressionStatement		1132:116:30714:30714	1317659	9	True				
ANR	1317694	ReturnStatement	return NULL ;	1133:2:30718:30729	1317659	10	True				
ANR	1317695	Identifier	NULL		1317659	0					
ANR	1317696	ExpressionStatement	Z_ADDREF_P ( object )	1136:1:30736:30754	1317659	16	True				
ANR	1317697	CallExpression	Z_ADDREF_P ( object )		1317659	0					
ANR	1317698	Callee	Z_ADDREF_P		1317659	0					
ANR	1317699	Identifier	Z_ADDREF_P		1317659	0					
ANR	1317700	ArgumentList	object		1317659	1					
ANR	1317701	Argument	object		1317659	0					
ANR	1317702	Identifier	object		1317659	0					
ANR	1317703	ExpressionStatement	iterator = emalloc ( sizeof ( spl_heap_it ) )	1138:1:30758:30814	1317659	17	True				
ANR	1317704	AssignmentExpression	iterator = emalloc ( sizeof ( spl_heap_it ) )		1317659	0		=			
ANR	1317705	Identifier	iterator		1317659	0					
ANR	1317706	CallExpression	emalloc ( sizeof ( spl_heap_it ) )		1317659	1					
ANR	1317707	Callee	emalloc		1317659	0					
ANR	1317708	Identifier	emalloc		1317659	0					
ANR	1317709	ArgumentList	sizeof ( spl_heap_it )		1317659	1					
ANR	1317710	Argument	sizeof ( spl_heap_it )		1317659	0					
ANR	1317711	SizeofExpression	sizeof ( spl_heap_it )		1317659	0					
ANR	1317712	Sizeof	sizeof		1317659	0					
ANR	1317713	SizeofOperand	spl_heap_it		1317659	1					
ANR	1317714	ExpressionStatement	iterator -> intern . it . data = ( void * ) object	1139:1:30817:30858	1317659	18	True				
ANR	1317715	AssignmentExpression	iterator -> intern . it . data = ( void * ) object		1317659	0		=			
ANR	1317716	MemberAccess	iterator -> intern . it . data		1317659	0					
ANR	1317717	MemberAccess	iterator -> intern . it		1317659	0					
ANR	1317718	PtrMemberAccess	iterator -> intern		1317659	0					
ANR	1317719	Identifier	iterator		1317659	0					
ANR	1317720	Identifier	intern		1317659	1					
ANR	1317721	Identifier	it		1317659	1					
ANR	1317722	Identifier	data		1317659	1					
ANR	1317723	CastExpression	( void * ) object		1317659	1					
ANR	1317724	CastTarget	void *		1317659	0					
ANR	1317725	Identifier	object		1317659	1					
ANR	1317726	ExpressionStatement	iterator -> intern . it . funcs = & spl_pqueue_it_funcs	1140:1:30861:30909	1317659	19	True				
ANR	1317727	AssignmentExpression	iterator -> intern . it . funcs = & spl_pqueue_it_funcs		1317659	0		=			
ANR	1317728	MemberAccess	iterator -> intern . it . funcs		1317659	0					
ANR	1317729	MemberAccess	iterator -> intern . it		1317659	0					
ANR	1317730	PtrMemberAccess	iterator -> intern		1317659	0					
ANR	1317731	Identifier	iterator		1317659	0					
ANR	1317732	Identifier	intern		1317659	1					
ANR	1317733	Identifier	it		1317659	1					
ANR	1317734	Identifier	funcs		1317659	1					
ANR	1317735	UnaryOperationExpression	& spl_pqueue_it_funcs		1317659	1					
ANR	1317736	UnaryOperator	&		1317659	0					
ANR	1317737	Identifier	spl_pqueue_it_funcs		1317659	1					
ANR	1317738	ExpressionStatement	iterator -> intern . ce = ce	1141:1:30912:30942	1317659	20	True				
ANR	1317739	AssignmentExpression	iterator -> intern . ce = ce		1317659	0		=			
ANR	1317740	MemberAccess	iterator -> intern . ce		1317659	0					
ANR	1317741	PtrMemberAccess	iterator -> intern		1317659	0					
ANR	1317742	Identifier	iterator		1317659	0					
ANR	1317743	Identifier	intern		1317659	1					
ANR	1317744	Identifier	ce		1317659	1					
ANR	1317745	Identifier	ce		1317659	1					
ANR	1317746	ExpressionStatement	iterator -> intern . value = NULL	1142:1:30945:30977	1317659	21	True				
ANR	1317747	AssignmentExpression	iterator -> intern . value = NULL		1317659	0		=			
ANR	1317748	MemberAccess	iterator -> intern . value		1317659	0					
ANR	1317749	PtrMemberAccess	iterator -> intern		1317659	0					
ANR	1317750	Identifier	iterator		1317659	0					
ANR	1317751	Identifier	intern		1317659	1					
ANR	1317752	Identifier	value		1317659	1					
ANR	1317753	Identifier	NULL		1317659	1					
ANR	1317754	ExpressionStatement	iterator -> flags = heap_object -> flags	1143:1:30980:31026	1317659	22	True				
ANR	1317755	AssignmentExpression	iterator -> flags = heap_object -> flags		1317659	0		=			
ANR	1317756	PtrMemberAccess	iterator -> flags		1317659	0					
ANR	1317757	Identifier	iterator		1317659	0					
ANR	1317758	Identifier	flags		1317659	1					
ANR	1317759	PtrMemberAccess	heap_object -> flags		1317659	1					
ANR	1317760	Identifier	heap_object		1317659	0					
ANR	1317761	Identifier	flags		1317659	1					
ANR	1317762	ExpressionStatement	iterator -> object = heap_object	1144:1:31029:31068	1317659	23	True				
ANR	1317763	AssignmentExpression	iterator -> object = heap_object		1317659	0		=			
ANR	1317764	PtrMemberAccess	iterator -> object		1317659	0					
ANR	1317765	Identifier	iterator		1317659	0					
ANR	1317766	Identifier	object		1317659	1					
ANR	1317767	Identifier	heap_object		1317659	1					
ANR	1317768	ReturnStatement	return ( zend_object_iterator * ) iterator ;	1146:1:31072:31110	1317659	24	True				
ANR	1317769	CastExpression	( zend_object_iterator * ) iterator		1317659	0					
ANR	1317770	CastTarget	zend_object_iterator *		1317659	0					
ANR	1317771	Identifier	iterator		1317659	1					
ANR	1317772	ReturnType	zend_object_iterator *		1317659	1					
ANR	1317773	Identifier	spl_pqueue_get_iterator		1317659	2					
ANR	1317774	ParameterList	"zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC"		1317659	3					
ANR	1317775	Parameter	zend_class_entry * ce	1126:46:30386:30405	1317659	0	True				
ANR	1317776	ParameterType	zend_class_entry *		1317659	0					
ANR	1317777	Identifier	ce		1317659	1					
ANR	1317778	Parameter	zval * object	1126:68:30408:30419	1317659	1	True				
ANR	1317779	ParameterType	zval *		1317659	0					
ANR	1317780	Identifier	object		1317659	1					
ANR	1317781	Parameter	int by_ref TSRMLS_DC	1126:82:30422:30441	1317659	2	True				
ANR	1317782	ParameterType	int by_ref		1317659	0					
ANR	1317783	Identifier	TSRMLS_DC		1317659	1					
ANR	1317784	CFGEntryNode	ENTRY		1317659		True				
ANR	1317785	CFGExitNode	EXIT		1317659		True				
ANR	1317786	Symbol	iterator -> flags		1317659						
ANR	1317787	Symbol	iterator -> object		1317659						
ANR	1317788	Symbol	ce		1317659						
ANR	1317789	Symbol	iterator -> intern		1317659						
ANR	1317790	Symbol	NULL		1317659						
ANR	1317791	Symbol	* heap_object		1317659						
ANR	1317792	Symbol	iterator -> intern . it . data		1317659						
ANR	1317793	Symbol	iterator -> intern . ce		1317659						
ANR	1317794	Symbol	TSRMLS_DC		1317659						
ANR	1317795	Symbol	iterator -> intern . it		1317659						
ANR	1317796	Symbol	iterator -> intern . value		1317659						
ANR	1317797	Symbol	iterator		1317659						
ANR	1317798	Symbol	emalloc		1317659						
ANR	1317799	Symbol	* iterator		1317659						
ANR	1317800	Symbol	heap_object		1317659						
ANR	1317801	Symbol	& spl_pqueue_it_funcs		1317659						
ANR	1317802	Symbol	iterator -> intern . it . funcs		1317659						
ANR	1317803	Symbol	by_ref		1317659						
ANR	1317804	Symbol	heap_object -> flags		1317659						
ANR	1317805	Symbol	object		1317659						
ANR	1317806	DeclStmt									
ANR	1317807	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplMinHeap
ANR	1317808	DeclStmt									
ANR	1317809	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplMaxHeap
ANR	1317810	DeclStmt									
ANR	1317811	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplPriorityQueue
ANR	1317812	DeclStmt									
ANR	1317813	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplHeap
