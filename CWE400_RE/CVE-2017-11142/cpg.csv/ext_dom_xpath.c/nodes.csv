command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	310041	File	data/converged/CVE-2017-11142_php-src/ext_dom_xpath.c								
ANR	310042	DeclStmt									
ANR	310043	Decl							const zend_function_entry	const zend_function_entry [ ]	php_dom_xpath_class_functions
ANR	310044	Function	dom_xpath_ext_function_php	75:0:2704:8435							
ANR	310045	FunctionDef	"dom_xpath_ext_function_php (xmlXPathParserContextPtr ctxt , int nargs , int type)"		310044	0					
ANR	310046	CompoundStatement		76:0:2805:8435	310044	0					
ANR	310047	IdentifierDeclStatement	zval * * args = NULL ;	77:1:2808:2826	310044	0	True				
ANR	310048	IdentifierDecl	* * args = NULL		310044	0					
ANR	310049	IdentifierDeclType	zval * *		310044	0					
ANR	310050	Identifier	args		310044	1					
ANR	310051	AssignmentExpression	* * args = NULL		310044	2		=			
ANR	310052	Identifier	NULL		310044	0					
ANR	310053	Identifier	NULL		310044	1					
ANR	310054	IdentifierDeclStatement	zval * retval ;	78:1:2829:2841	310044	1	True				
ANR	310055	IdentifierDecl	* retval		310044	0					
ANR	310056	IdentifierDeclType	zval *		310044	0					
ANR	310057	Identifier	retval		310044	1					
ANR	310058	IdentifierDeclStatement	"int result , i , ret ;"	79:1:2844:2862	310044	2	True				
ANR	310059	IdentifierDecl	result		310044	0					
ANR	310060	IdentifierDeclType	int		310044	0					
ANR	310061	Identifier	result		310044	1					
ANR	310062	IdentifierDecl	i		310044	1					
ANR	310063	IdentifierDeclType	int		310044	0					
ANR	310064	Identifier	i		310044	1					
ANR	310065	IdentifierDecl	ret		310044	2					
ANR	310066	IdentifierDeclType	int		310044	0					
ANR	310067	Identifier	ret		310044	1					
ANR	310068	IdentifierDeclStatement	int error = 0 ;	80:1:2865:2878	310044	3	True				
ANR	310069	IdentifierDecl	error = 0		310044	0					
ANR	310070	IdentifierDeclType	int		310044	0					
ANR	310071	Identifier	error		310044	1					
ANR	310072	AssignmentExpression	error = 0		310044	2		=			
ANR	310073	Identifier	error		310044	0					
ANR	310074	PrimaryExpression	0		310044	1					
ANR	310075	IdentifierDeclStatement	zend_fcall_info fci ;	81:1:2881:2900	310044	4	True				
ANR	310076	IdentifierDecl	fci		310044	0					
ANR	310077	IdentifierDeclType	zend_fcall_info		310044	0					
ANR	310078	Identifier	fci		310044	1					
ANR	310079	IdentifierDeclStatement	zval handler ;	82:1:2903:2915	310044	5	True				
ANR	310080	IdentifierDecl	handler		310044	0					
ANR	310081	IdentifierDeclType	zval		310044	0					
ANR	310082	Identifier	handler		310044	1					
ANR	310083	IdentifierDeclStatement	xmlXPathObjectPtr obj ;	83:1:2918:2939	310044	6	True				
ANR	310084	IdentifierDecl	obj		310044	0					
ANR	310085	IdentifierDeclType	xmlXPathObjectPtr		310044	0					
ANR	310086	Identifier	obj		310044	1					
ANR	310087	IdentifierDeclStatement	char * str ;	84:1:2942:2951	310044	7	True				
ANR	310088	IdentifierDecl	* str		310044	0					
ANR	310089	IdentifierDeclType	char *		310044	0					
ANR	310090	Identifier	str		310044	1					
ANR	310091	IdentifierDeclStatement	char * callable = NULL ;	85:1:2954:2975	310044	8	True				
ANR	310092	IdentifierDecl	* callable = NULL		310044	0					
ANR	310093	IdentifierDeclType	char *		310044	0					
ANR	310094	Identifier	callable		310044	1					
ANR	310095	AssignmentExpression	* callable = NULL		310044	2		=			
ANR	310096	Identifier	NULL		310044	0					
ANR	310097	Identifier	NULL		310044	1					
ANR	310098	IdentifierDeclStatement	dom_xpath_object * intern ;	86:1:2978:3002	310044	9	True				
ANR	310099	IdentifierDecl	* intern		310044	0					
ANR	310100	IdentifierDeclType	dom_xpath_object *		310044	0					
ANR	310101	Identifier	intern		310044	1					
ANR	310102	ExpressionStatement	TSRMLS_FETCH ( )	88:1:3007:3021	310044	10	True				
ANR	310103	CallExpression	TSRMLS_FETCH ( )		310044	0					
ANR	310104	Callee	TSRMLS_FETCH		310044	0					
ANR	310105	Identifier	TSRMLS_FETCH		310044	0					
ANR	310106	ArgumentList			310044	1					
ANR	310107	IfStatement	if ( ! zend_is_executing ( TSRMLS_C ) )		310044	11					
ANR	310108	Condition	! zend_is_executing ( TSRMLS_C )	90:5:3029:3057	310044	0	True				
ANR	310109	UnaryOperationExpression	! zend_is_executing ( TSRMLS_C )		310044	0					
ANR	310110	UnaryOperator	!		310044	0					
ANR	310111	CallExpression	zend_is_executing ( TSRMLS_C )		310044	1					
ANR	310112	Callee	zend_is_executing		310044	0					
ANR	310113	Identifier	zend_is_executing		310044	0					
ANR	310114	ArgumentList	TSRMLS_C		310044	1					
ANR	310115	Argument	TSRMLS_C		310044	0					
ANR	310116	Identifier	TSRMLS_C		310044	0					
ANR	310117	CompoundStatement		15:36:254:254	310044	1					
ANR	310118	ExpressionStatement	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: Function called from outside of PHP\\n"" )"	91:2:3064:3166	310044	0	True				
ANR	310119	CallExpression	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: Function called from outside of PHP\\n"" )"		310044	0					
ANR	310120	Callee	xmlGenericError		310044	0					
ANR	310121	Identifier	xmlGenericError		310044	0					
ANR	310122	ArgumentList	xmlGenericErrorContext		310044	1					
ANR	310123	Argument	xmlGenericErrorContext		310044	0					
ANR	310124	Identifier	xmlGenericErrorContext		310044	0					
ANR	310125	Argument	"""xmlExtFunctionTest: Function called from outside of PHP\\n"""		310044	1					
ANR	310126	PrimaryExpression	"""xmlExtFunctionTest: Function called from outside of PHP\\n"""		310044	0					
ANR	310127	ExpressionStatement	error = 1	93:2:3170:3179	310044	1	True				
ANR	310128	AssignmentExpression	error = 1		310044	0		=			
ANR	310129	Identifier	error		310044	0					
ANR	310130	PrimaryExpression	1		310044	1					
ANR	310131	ElseStatement	else		310044	0					
ANR	310132	CompoundStatement		19:8:383:383	310044	0					
ANR	310133	ExpressionStatement	intern = ( dom_xpath_object * ) ctxt -> context -> userData	95:2:3193:3246	310044	0	True				
ANR	310134	AssignmentExpression	intern = ( dom_xpath_object * ) ctxt -> context -> userData		310044	0		=			
ANR	310135	Identifier	intern		310044	0					
ANR	310136	CastExpression	( dom_xpath_object * ) ctxt -> context -> userData		310044	1					
ANR	310137	CastTarget	dom_xpath_object *		310044	0					
ANR	310138	PtrMemberAccess	ctxt -> context -> userData		310044	1					
ANR	310139	PtrMemberAccess	ctxt -> context		310044	0					
ANR	310140	Identifier	ctxt		310044	0					
ANR	310141	Identifier	context		310044	1					
ANR	310142	Identifier	userData		310044	1					
ANR	310143	IfStatement	if ( intern == NULL )		310044	1					
ANR	310144	Condition	intern == NULL	96:6:3254:3267	310044	0	True				
ANR	310145	EqualityExpression	intern == NULL		310044	0		==			
ANR	310146	Identifier	intern		310044	0					
ANR	310147	Identifier	NULL		310044	1					
ANR	310148	CompoundStatement		21:22:464:464	310044	1					
ANR	310149	ExpressionStatement	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: failed to get the internal object\\n"" )"	97:3:3275:3376	310044	0	True				
ANR	310150	CallExpression	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: failed to get the internal object\\n"" )"		310044	0					
ANR	310151	Callee	xmlGenericError		310044	0					
ANR	310152	Identifier	xmlGenericError		310044	0					
ANR	310153	ArgumentList	xmlGenericErrorContext		310044	1					
ANR	310154	Argument	xmlGenericErrorContext		310044	0					
ANR	310155	Identifier	xmlGenericErrorContext		310044	0					
ANR	310156	Argument	"""xmlExtFunctionTest: failed to get the internal object\\n"""		310044	1					
ANR	310157	PrimaryExpression	"""xmlExtFunctionTest: failed to get the internal object\\n"""		310044	0					
ANR	310158	ExpressionStatement	error = 1	99:3:3381:3390	310044	1	True				
ANR	310159	AssignmentExpression	error = 1		310044	0		=			
ANR	310160	Identifier	error		310044	0					
ANR	310161	PrimaryExpression	1		310044	1					
ANR	310162	ElseStatement	else		310044	0					
ANR	310163	IfStatement	if ( intern -> registerPhpFunctions == 0 )		310044	0					
ANR	310164	Condition	intern -> registerPhpFunctions == 0	101:11:3407:3439	310044	0	True				
ANR	310165	EqualityExpression	intern -> registerPhpFunctions == 0		310044	0		==			
ANR	310166	PtrMemberAccess	intern -> registerPhpFunctions		310044	0					
ANR	310167	Identifier	intern		310044	0					
ANR	310168	Identifier	registerPhpFunctions		310044	1					
ANR	310169	PrimaryExpression	0		310044	1					
ANR	310170	CompoundStatement		26:46:636:636	310044	1					
ANR	310171	ExpressionStatement	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"" )"	102:3:3447:3556	310044	0	True				
ANR	310172	CallExpression	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"" )"		310044	0					
ANR	310173	Callee	xmlGenericError		310044	0					
ANR	310174	Identifier	xmlGenericError		310044	0					
ANR	310175	ArgumentList	xmlGenericErrorContext		310044	1					
ANR	310176	Argument	xmlGenericErrorContext		310044	0					
ANR	310177	Identifier	xmlGenericErrorContext		310044	0					
ANR	310178	Argument	"""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"""		310044	1					
ANR	310179	PrimaryExpression	"""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"""		310044	0					
ANR	310180	ExpressionStatement	error = 1	104:3:3561:3570	310044	1	True				
ANR	310181	AssignmentExpression	error = 1		310044	0		=			
ANR	310182	Identifier	error		310044	0					
ANR	310183	PrimaryExpression	1		310044	1					
ANR	310184	IfStatement	if ( error == 1 )		310044	12					
ANR	310185	Condition	error == 1	108:5:3586:3595	310044	0	True				
ANR	310186	EqualityExpression	error == 1		310044	0		==			
ANR	310187	Identifier	error		310044	0					
ANR	310188	PrimaryExpression	1		310044	1					
ANR	310189	CompoundStatement		33:17:792:792	310044	1					
ANR	310190	ForStatement	for ( i = nargs - 1 ; i >= 0 ; i -- )		310044	0					
ANR	310191	ForInit	i = nargs - 1 ;	109:7:3607:3620	310044	0	True				
ANR	310192	AssignmentExpression	i = nargs - 1		310044	0		=			
ANR	310193	Identifier	i		310044	0					
ANR	310194	AdditiveExpression	nargs - 1		310044	1		-			
ANR	310195	Identifier	nargs		310044	0					
ANR	310196	PrimaryExpression	1		310044	1					
ANR	310197	Condition	i >= 0	109:22:3622:3627	310044	1	True				
ANR	310198	RelationalExpression	i >= 0		310044	0		>=			
ANR	310199	Identifier	i		310044	0					
ANR	310200	PrimaryExpression	0		310044	1					
ANR	310201	PostIncDecOperationExpression	i --	109:30:3630:3632	310044	2	True				
ANR	310202	Identifier	i		310044	0					
ANR	310203	IncDec	--		310044	1					
ANR	310204	CompoundStatement		34:35:829:829	310044	3					
ANR	310205	ExpressionStatement	obj = valuePop ( ctxt )	110:3:3640:3660	310044	0	True				
ANR	310206	AssignmentExpression	obj = valuePop ( ctxt )		310044	0		=			
ANR	310207	Identifier	obj		310044	0					
ANR	310208	CallExpression	valuePop ( ctxt )		310044	1					
ANR	310209	Callee	valuePop		310044	0					
ANR	310210	Identifier	valuePop		310044	0					
ANR	310211	ArgumentList	ctxt		310044	1					
ANR	310212	Argument	ctxt		310044	0					
ANR	310213	Identifier	ctxt		310044	0					
ANR	310214	ExpressionStatement	xmlXPathFreeObject ( obj )	111:3:3665:3688	310044	1	True				
ANR	310215	CallExpression	xmlXPathFreeObject ( obj )		310044	0					
ANR	310216	Callee	xmlXPathFreeObject		310044	0					
ANR	310217	Identifier	xmlXPathFreeObject		310044	0					
ANR	310218	ArgumentList	obj		310044	1					
ANR	310219	Argument	obj		310044	0					
ANR	310220	Identifier	obj		310044	0					
ANR	310221	ReturnStatement	return ;	113:2:3696:3702	310044	1	True				
ANR	310222	ExpressionStatement	fci . param_count = nargs - 1	116:1:3711:3738	310044	13	True				
ANR	310223	AssignmentExpression	fci . param_count = nargs - 1		310044	0		=			
ANR	310224	MemberAccess	fci . param_count		310044	0					
ANR	310225	Identifier	fci		310044	0					
ANR	310226	Identifier	param_count		310044	1					
ANR	310227	AdditiveExpression	nargs - 1		310044	1		-			
ANR	310228	Identifier	nargs		310044	0					
ANR	310229	PrimaryExpression	1		310044	1					
ANR	310230	IfStatement	if ( fci . param_count > 0 )		310044	14					
ANR	310231	Condition	fci . param_count > 0	117:5:3745:3763	310044	0	True				
ANR	310232	RelationalExpression	fci . param_count > 0		310044	0		>			
ANR	310233	MemberAccess	fci . param_count		310044	0					
ANR	310234	Identifier	fci		310044	0					
ANR	310235	Identifier	param_count		310044	1					
ANR	310236	PrimaryExpression	0		310044	1					
ANR	310237	CompoundStatement		42:26:960:960	310044	1					
ANR	310238	ExpressionStatement	"fci . params = safe_emalloc ( fci . param_count , sizeof ( zval * * ) , 0 )"	118:2:3770:3831	310044	0	True				
ANR	310239	AssignmentExpression	"fci . params = safe_emalloc ( fci . param_count , sizeof ( zval * * ) , 0 )"		310044	0		=			
ANR	310240	MemberAccess	fci . params		310044	0					
ANR	310241	Identifier	fci		310044	0					
ANR	310242	Identifier	params		310044	1					
ANR	310243	CallExpression	"safe_emalloc ( fci . param_count , sizeof ( zval * * ) , 0 )"		310044	1					
ANR	310244	Callee	safe_emalloc		310044	0					
ANR	310245	Identifier	safe_emalloc		310044	0					
ANR	310246	ArgumentList	fci . param_count		310044	1					
ANR	310247	Argument	fci . param_count		310044	0					
ANR	310248	MemberAccess	fci . param_count		310044	0					
ANR	310249	Identifier	fci		310044	0					
ANR	310250	Identifier	param_count		310044	1					
ANR	310251	Argument	sizeof ( zval * * )		310044	1					
ANR	310252	SizeofExpression	sizeof ( zval * * )		310044	0					
ANR	310253	Sizeof	sizeof		310044	0					
ANR	310254	SizeofOperand	zval * *		310044	1					
ANR	310255	Argument	0		310044	2					
ANR	310256	PrimaryExpression	0		310044	0					
ANR	310257	ExpressionStatement	"args = safe_emalloc ( fci . param_count , sizeof ( zval * ) , 0 )"	119:2:3835:3890	310044	1	True				
ANR	310258	AssignmentExpression	"args = safe_emalloc ( fci . param_count , sizeof ( zval * ) , 0 )"		310044	0		=			
ANR	310259	Identifier	args		310044	0					
ANR	310260	CallExpression	"safe_emalloc ( fci . param_count , sizeof ( zval * ) , 0 )"		310044	1					
ANR	310261	Callee	safe_emalloc		310044	0					
ANR	310262	Identifier	safe_emalloc		310044	0					
ANR	310263	ArgumentList	fci . param_count		310044	1					
ANR	310264	Argument	fci . param_count		310044	0					
ANR	310265	MemberAccess	fci . param_count		310044	0					
ANR	310266	Identifier	fci		310044	0					
ANR	310267	Identifier	param_count		310044	1					
ANR	310268	Argument	sizeof ( zval * )		310044	1					
ANR	310269	SizeofExpression	sizeof ( zval * )		310044	0					
ANR	310270	Sizeof	sizeof		310044	0					
ANR	310271	SizeofOperand	zval *		310044	1					
ANR	310272	Argument	0		310044	2					
ANR	310273	PrimaryExpression	0		310044	0					
ANR	310274	ElseStatement	else		310044	0					
ANR	310275	CompoundStatement		138:8:4049:4049	310044	0					
ANR	310276	Statement	result	214:2:6859:6864	310044	0	True				
ANR	310277	Statement	=	214:9:6866:6866	310044	1	True				
ANR	310278	Statement	zend_call_function	214:11:6868:6885	310044	2	True				
ANR	310279	Statement	(	214:29:6886:6886	310044	3	True				
ANR	310280	Statement	&	214:30:6887:6887	310044	4	True				
ANR	310281	Statement	fci	214:31:6888:6890	310044	5	True				
ANR	310282	Statement	","	214:34:6891:6891	310044	6	True				
ANR	310283	Statement	NULL	214:36:6893:6896	310044	7	True				
ANR	310284	Statement	TSRMLS_CC	214:41:6898:6906	310044	8	True				
ANR	310285	Statement	)	214:50:6907:6907	310044	9	True				
ANR	310286	ExpressionStatement		214:51:6908:6908	310044	10	True				
ANR	310287	IfStatement	if ( result == FAILURE )		310044	11					
ANR	310288	Condition	result == FAILURE	215:6:6916:6932	310044	0	True				
ANR	310289	EqualityExpression	result == FAILURE		310044	0		==			
ANR	310290	Identifier	result		310044	0					
ANR	310291	Identifier	FAILURE		310044	1					
ANR	310292	CompoundStatement		140:25:4129:4129	310044	1					
ANR	310293	IfStatement	if ( Z_TYPE ( handler ) == IS_STRING )		310044	0					
ANR	310294	Condition	Z_TYPE ( handler ) == IS_STRING	216:7:6944:6971	310044	0	True				
ANR	310295	EqualityExpression	Z_TYPE ( handler ) == IS_STRING		310044	0		==			
ANR	310296	CallExpression	Z_TYPE ( handler )		310044	0					
ANR	310297	Callee	Z_TYPE		310044	0					
ANR	310298	Identifier	Z_TYPE		310044	0					
ANR	310299	ArgumentList	handler		310044	1					
ANR	310300	Argument	handler		310044	0					
ANR	310301	Identifier	handler		310044	0					
ANR	310302	Identifier	IS_STRING		310044	1					
ANR	310303	CompoundStatement		141:37:4168:4168	310044	1					
ANR	310304	Statement	php_error_docref	217:4:6980:6995	310044	0	True				
ANR	310305	Statement	(	217:20:6996:6996	310044	1	True				
ANR	310306	Statement	NULL	217:21:6997:7000	310044	2	True				
ANR	310307	Statement	TSRMLS_CC	217:26:7002:7010	310044	3	True				
ANR	310308	Statement	","	217:35:7011:7011	310044	4	True				
ANR	310309	Statement	E_WARNING	217:37:7013:7021	310044	5	True				
ANR	310310	Statement	","	217:46:7022:7022	310044	6	True				
ANR	310311	Statement	"""Unable to call handler %s()"""	217:48:7024:7052	310044	7	True				
ANR	310312	Statement	","	217:77:7053:7053	310044	8	True				
ANR	310313	Statement	Z_STRVAL_P	217:79:7055:7064	310044	9	True				
ANR	310314	Statement	(	217:89:7065:7065	310044	10	True				
ANR	310315	Statement	&	217:90:7066:7066	310044	11	True				
ANR	310316	Statement	handler	217:91:7067:7073	310044	12	True				
ANR	310317	Statement	)	217:98:7074:7074	310044	13	True				
ANR	310318	Statement	)	217:99:7075:7075	310044	14	True				
ANR	310319	ExpressionStatement		217:100:7076:7076	310044	15	True				
ANR	310320	ElseStatement	else		310044	0					
ANR	310321	IfStatement	if ( retval == NULL )		310044	0					
ANR	310322	Condition	retval == NULL	220:13:7210:7223	310044	0	True				
ANR	310323	EqualityExpression	retval == NULL		310044	0		==			
ANR	310324	Identifier	retval		310044	0					
ANR	310325	Identifier	NULL		310044	1					
ANR	310326	CompoundStatement		145:29:4420:4420	310044	1					
ANR	310327	ElseStatement	else		310044	0					
ANR	310328	IfStatement	if ( retval -> type == IS_BOOL )		310044	0					
ANR	310329	Condition	retval -> type == IS_BOOL	234:14:7824:7846	310044	0	True				
ANR	310330	EqualityExpression	retval -> type == IS_BOOL		310044	0		==			
ANR	310331	PtrMemberAccess	retval -> type		310044	0					
ANR	310332	Identifier	retval		310044	0					
ANR	310333	Identifier	type		310044	1					
ANR	310334	Identifier	IS_BOOL		310044	1					
ANR	310335	CompoundStatement		159:39:5043:5043	310044	1					
ANR	310336	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewBoolean ( retval -> value . lval ) )"	235:4:7855:7910	310044	0	True				
ANR	310337	CallExpression	"valuePush ( ctxt , xmlXPathNewBoolean ( retval -> value . lval ) )"		310044	0					
ANR	310338	Callee	valuePush		310044	0					
ANR	310339	Identifier	valuePush		310044	0					
ANR	310340	ArgumentList	ctxt		310044	1					
ANR	310341	Argument	ctxt		310044	0					
ANR	310342	Identifier	ctxt		310044	0					
ANR	310343	Argument	xmlXPathNewBoolean ( retval -> value . lval )		310044	1					
ANR	310344	CallExpression	xmlXPathNewBoolean ( retval -> value . lval )		310044	0					
ANR	310345	Callee	xmlXPathNewBoolean		310044	0					
ANR	310346	Identifier	xmlXPathNewBoolean		310044	0					
ANR	310347	ArgumentList	retval -> value . lval		310044	1					
ANR	310348	Argument	retval -> value . lval		310044	0					
ANR	310349	MemberAccess	retval -> value . lval		310044	0					
ANR	310350	PtrMemberAccess	retval -> value		310044	0					
ANR	310351	Identifier	retval		310044	0					
ANR	310352	Identifier	value		310044	1					
ANR	310353	Identifier	lval		310044	1					
ANR	310354	ElseStatement	else		310044	0					
ANR	310355	IfStatement	if ( retval -> type == IS_OBJECT )		310044	0					
ANR	310356	Condition	retval -> type == IS_OBJECT	236:14:7926:7950	310044	0	True				
ANR	310357	EqualityExpression	retval -> type == IS_OBJECT		310044	0		==			
ANR	310358	PtrMemberAccess	retval -> type		310044	0					
ANR	310359	Identifier	retval		310044	0					
ANR	310360	Identifier	type		310044	1					
ANR	310361	Identifier	IS_OBJECT		310044	1					
ANR	310362	CompoundStatement		161:41:5147:5147	310044	1					
ANR	310363	Statement	php_error_docref	237:4:7959:7974	310044	0	True				
ANR	310364	Statement	(	237:20:7975:7975	310044	1	True				
ANR	310365	Statement	NULL	237:21:7976:7979	310044	2	True				
ANR	310366	Statement	TSRMLS_CC	237:26:7981:7989	310044	3	True				
ANR	310367	Statement	","	237:35:7990:7990	310044	4	True				
ANR	310368	Statement	E_WARNING	237:37:7992:8000	310044	5	True				
ANR	310369	Statement	","	237:46:8001:8001	310044	6	True				
ANR	310370	Statement	"""A PHP Object cannot be converted to a XPath-string"""	237:48:8003:8054	310044	7	True				
ANR	310371	Statement	)	237:100:8055:8055	310044	8	True				
ANR	310372	ExpressionStatement		237:101:8056:8056	310044	9	True				
ANR	310373	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"	238:4:8062:8111	310044	10	True				
ANR	310374	CallExpression	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"		310044	0					
ANR	310375	Callee	valuePush		310044	0					
ANR	310376	Identifier	valuePush		310044	0					
ANR	310377	ArgumentList	ctxt		310044	1					
ANR	310378	Argument	ctxt		310044	0					
ANR	310379	Identifier	ctxt		310044	0					
ANR	310380	Argument	"xmlXPathNewString ( ( xmlChar * ) """" )"		310044	1					
ANR	310381	CallExpression	"xmlXPathNewString ( ( xmlChar * ) """" )"		310044	0					
ANR	310382	Callee	xmlXPathNewString		310044	0					
ANR	310383	Identifier	xmlXPathNewString		310044	0					
ANR	310384	ArgumentList	"( xmlChar * ) """""		310044	1					
ANR	310385	Argument	"( xmlChar * ) """""		310044	0					
ANR	310386	CastExpression	"( xmlChar * ) """""		310044	0					
ANR	310387	CastTarget	xmlChar *		310044	0					
ANR	310388	PrimaryExpression	""""""		310044	1					
ANR	310389	ElseStatement	else		310044	0					
ANR	310390	CompoundStatement		164:10:5317:5317	310044	0					
ANR	310391	ExpressionStatement	convert_to_string_ex ( & retval )	240:4:8129:8158	310044	0	True				
ANR	310392	CallExpression	convert_to_string_ex ( & retval )		310044	0					
ANR	310393	Callee	convert_to_string_ex		310044	0					
ANR	310394	Identifier	convert_to_string_ex		310044	0					
ANR	310395	ArgumentList	& retval		310044	1					
ANR	310396	Argument	& retval		310044	0					
ANR	310397	UnaryOperationExpression	& retval		310044	0					
ANR	310398	UnaryOperator	&		310044	0					
ANR	310399	Identifier	retval		310044	1					
ANR	310400	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewString ( Z_STRVAL_P ( retval ) ) )"	241:4:8164:8219	310044	1	True				
ANR	310401	CallExpression	"valuePush ( ctxt , xmlXPathNewString ( Z_STRVAL_P ( retval ) ) )"		310044	0					
ANR	310402	Callee	valuePush		310044	0					
ANR	310403	Identifier	valuePush		310044	0					
ANR	310404	ArgumentList	ctxt		310044	1					
ANR	310405	Argument	ctxt		310044	0					
ANR	310406	Identifier	ctxt		310044	0					
ANR	310407	Argument	xmlXPathNewString ( Z_STRVAL_P ( retval ) )		310044	1					
ANR	310408	CallExpression	xmlXPathNewString ( Z_STRVAL_P ( retval ) )		310044	0					
ANR	310409	Callee	xmlXPathNewString		310044	0					
ANR	310410	Identifier	xmlXPathNewString		310044	0					
ANR	310411	ArgumentList	Z_STRVAL_P ( retval )		310044	1					
ANR	310412	Argument	Z_STRVAL_P ( retval )		310044	0					
ANR	310413	CallExpression	Z_STRVAL_P ( retval )		310044	0					
ANR	310414	Callee	Z_STRVAL_P		310044	0					
ANR	310415	Identifier	Z_STRVAL_P		310044	0					
ANR	310416	ArgumentList	retval		310044	1					
ANR	310417	Argument	retval		310044	0					
ANR	310418	Identifier	retval		310044	0					
ANR	310419	ForStatement	for ( i = nargs - 2 ; i >= 0 ; i -- )		310044	15					
ANR	310420	ForInit	i = nargs - 2 ;	122:6:3951:3964	310044	0	True				
ANR	310421	AssignmentExpression	i = nargs - 2		310044	0		=			
ANR	310422	Identifier	i		310044	0					
ANR	310423	AdditiveExpression	nargs - 2		310044	1		-			
ANR	310424	Identifier	nargs		310044	0					
ANR	310425	PrimaryExpression	2		310044	1					
ANR	310426	Condition	i >= 0	122:21:3966:3971	310044	1	True				
ANR	310427	RelationalExpression	i >= 0		310044	0		>=			
ANR	310428	Identifier	i		310044	0					
ANR	310429	PrimaryExpression	0		310044	1					
ANR	310430	PostIncDecOperationExpression	i --	122:29:3974:3976	310044	2	True				
ANR	310431	Identifier	i		310044	0					
ANR	310432	IncDec	--		310044	1					
ANR	310433	CompoundStatement		47:34:1173:1173	310044	3					
ANR	310434	ExpressionStatement	obj = valuePop ( ctxt )	123:2:3983:4003	310044	0	True				
ANR	310435	AssignmentExpression	obj = valuePop ( ctxt )		310044	0		=			
ANR	310436	Identifier	obj		310044	0					
ANR	310437	CallExpression	valuePop ( ctxt )		310044	1					
ANR	310438	Callee	valuePop		310044	0					
ANR	310439	Identifier	valuePop		310044	0					
ANR	310440	ArgumentList	ctxt		310044	1					
ANR	310441	Argument	ctxt		310044	0					
ANR	310442	Identifier	ctxt		310044	0					
ANR	310443	ExpressionStatement	MAKE_STD_ZVAL ( args [ i ] )	124:2:4007:4029	310044	1	True				
ANR	310444	CallExpression	MAKE_STD_ZVAL ( args [ i ] )		310044	0					
ANR	310445	Callee	MAKE_STD_ZVAL		310044	0					
ANR	310446	Identifier	MAKE_STD_ZVAL		310044	0					
ANR	310447	ArgumentList	args [ i ]		310044	1					
ANR	310448	Argument	args [ i ]		310044	0					
ANR	310449	ArrayIndexing	args [ i ]		310044	0					
ANR	310450	Identifier	args		310044	0					
ANR	310451	Identifier	i		310044	1					
ANR	310452	SwitchStatement	switch ( obj -> type )		310044	2					
ANR	310453	Condition	obj -> type	125:10:4041:4049	310044	0	True				
ANR	310454	PtrMemberAccess	obj -> type		310044	0					
ANR	310455	Identifier	obj		310044	0					
ANR	310456	Identifier	type		310044	1					
ANR	310457	CompoundStatement		50:21:1246:1246	310044	1					
ANR	310458	Label	case XPATH_STRING :	126:3:4057:4074	310044	0	True				
ANR	310459	Identifier	XPATH_STRING		310044	0					
ANR	310460	ExpressionStatement	"ZVAL_STRING ( args [ i ] , ( char * ) obj -> stringval , 1 )"	127:4:4080:4128	310044	1	True				
ANR	310461	CallExpression	"ZVAL_STRING ( args [ i ] , ( char * ) obj -> stringval , 1 )"		310044	0					
ANR	310462	Callee	ZVAL_STRING		310044	0					
ANR	310463	Identifier	ZVAL_STRING		310044	0					
ANR	310464	ArgumentList	args [ i ]		310044	1					
ANR	310465	Argument	args [ i ]		310044	0					
ANR	310466	ArrayIndexing	args [ i ]		310044	0					
ANR	310467	Identifier	args		310044	0					
ANR	310468	Identifier	i		310044	1					
ANR	310469	Argument	( char * ) obj -> stringval		310044	1					
ANR	310470	CastExpression	( char * ) obj -> stringval		310044	0					
ANR	310471	CastTarget	char *		310044	0					
ANR	310472	PtrMemberAccess	obj -> stringval		310044	1					
ANR	310473	Identifier	obj		310044	0					
ANR	310474	Identifier	stringval		310044	1					
ANR	310475	Argument	1		310044	2					
ANR	310476	PrimaryExpression	1		310044	0					
ANR	310477	BreakStatement	break ;	128:4:4134:4139	310044	2	True				
ANR	310478	Label	case XPATH_BOOLEAN :	129:3:4144:4162	310044	3	True				
ANR	310479	Identifier	XPATH_BOOLEAN		310044	0					
ANR	310480	ExpressionStatement	"ZVAL_BOOL ( args [ i ] , obj -> boolval )"	130:4:4168:4201	310044	4	True				
ANR	310481	CallExpression	"ZVAL_BOOL ( args [ i ] , obj -> boolval )"		310044	0					
ANR	310482	Callee	ZVAL_BOOL		310044	0					
ANR	310483	Identifier	ZVAL_BOOL		310044	0					
ANR	310484	ArgumentList	args [ i ]		310044	1					
ANR	310485	Argument	args [ i ]		310044	0					
ANR	310486	ArrayIndexing	args [ i ]		310044	0					
ANR	310487	Identifier	args		310044	0					
ANR	310488	Identifier	i		310044	1					
ANR	310489	Argument	obj -> boolval		310044	1					
ANR	310490	PtrMemberAccess	obj -> boolval		310044	0					
ANR	310491	Identifier	obj		310044	0					
ANR	310492	Identifier	boolval		310044	1					
ANR	310493	BreakStatement	break ;	131:4:4207:4212	310044	5	True				
ANR	310494	Label	case XPATH_NUMBER :	132:3:4217:4234	310044	6	True				
ANR	310495	Identifier	XPATH_NUMBER		310044	0					
ANR	310496	ExpressionStatement	"ZVAL_DOUBLE ( args [ i ] , obj -> floatval )"	133:4:4240:4275	310044	7	True				
ANR	310497	CallExpression	"ZVAL_DOUBLE ( args [ i ] , obj -> floatval )"		310044	0					
ANR	310498	Callee	ZVAL_DOUBLE		310044	0					
ANR	310499	Identifier	ZVAL_DOUBLE		310044	0					
ANR	310500	ArgumentList	args [ i ]		310044	1					
ANR	310501	Argument	args [ i ]		310044	0					
ANR	310502	ArrayIndexing	args [ i ]		310044	0					
ANR	310503	Identifier	args		310044	0					
ANR	310504	Identifier	i		310044	1					
ANR	310505	Argument	obj -> floatval		310044	1					
ANR	310506	PtrMemberAccess	obj -> floatval		310044	0					
ANR	310507	Identifier	obj		310044	0					
ANR	310508	Identifier	floatval		310044	1					
ANR	310509	BreakStatement	break ;	134:4:4281:4286	310044	8	True				
ANR	310510	Label	case XPATH_NODESET :	135:3:4291:4309	310044	9	True				
ANR	310511	Identifier	XPATH_NODESET		310044	0					
ANR	310512	IfStatement	if ( type == 1 )		310044	10					
ANR	310513	Condition	type == 1	136:8:4319:4327	310044	0	True				
ANR	310514	EqualityExpression	type == 1		310044	0		==			
ANR	310515	Identifier	type		310044	0					
ANR	310516	PrimaryExpression	1		310044	1					
ANR	310517	CompoundStatement		61:19:1524:1524	310044	1					
ANR	310518	ExpressionStatement	str = ( char * ) xmlXPathCastToString ( obj )	137:5:4337:4376	310044	0	True				
ANR	310519	AssignmentExpression	str = ( char * ) xmlXPathCastToString ( obj )		310044	0		=			
ANR	310520	Identifier	str		310044	0					
ANR	310521	CastExpression	( char * ) xmlXPathCastToString ( obj )		310044	1					
ANR	310522	CastTarget	char *		310044	0					
ANR	310523	CallExpression	xmlXPathCastToString ( obj )		310044	1					
ANR	310524	Callee	xmlXPathCastToString		310044	0					
ANR	310525	Identifier	xmlXPathCastToString		310044	0					
ANR	310526	ArgumentList	obj		310044	1					
ANR	310527	Argument	obj		310044	0					
ANR	310528	Identifier	obj		310044	0					
ANR	310529	ExpressionStatement	"ZVAL_STRING ( args [ i ] , str , 1 )"	138:5:4383:4411	310044	1	True				
ANR	310530	CallExpression	"ZVAL_STRING ( args [ i ] , str , 1 )"		310044	0					
ANR	310531	Callee	ZVAL_STRING		310044	0					
ANR	310532	Identifier	ZVAL_STRING		310044	0					
ANR	310533	ArgumentList	args [ i ]		310044	1					
ANR	310534	Argument	args [ i ]		310044	0					
ANR	310535	ArrayIndexing	args [ i ]		310044	0					
ANR	310536	Identifier	args		310044	0					
ANR	310537	Identifier	i		310044	1					
ANR	310538	Argument	str		310044	1					
ANR	310539	Identifier	str		310044	0					
ANR	310540	Argument	1		310044	2					
ANR	310541	PrimaryExpression	1		310044	0					
ANR	310542	ExpressionStatement	xmlFree ( str )	139:5:4418:4430	310044	2	True				
ANR	310543	CallExpression	xmlFree ( str )		310044	0					
ANR	310544	Callee	xmlFree		310044	0					
ANR	310545	Identifier	xmlFree		310044	0					
ANR	310546	ArgumentList	str		310044	1					
ANR	310547	Argument	str		310044	0					
ANR	310548	Identifier	str		310044	0					
ANR	310549	ElseStatement	else		310044	0					
ANR	310550	IfStatement	if ( type == 2 )		310044	0					
ANR	310551	Condition	type == 2	140:15:4447:4455	310044	0	True				
ANR	310552	EqualityExpression	type == 2		310044	0		==			
ANR	310553	Identifier	type		310044	0					
ANR	310554	PrimaryExpression	2		310044	1					
ANR	310555	CompoundStatement		66:5:1659:1664	310044	1					
ANR	310556	IdentifierDeclStatement	int j ;	141:5:4465:4470	310044	0	True				
ANR	310557	IdentifierDecl	j		310044	0					
ANR	310558	IdentifierDeclType	int		310044	0					
ANR	310559	Identifier	j		310044	1					
ANR	310560	ExpressionStatement	array_init ( args [ i ] )	142:5:4477:4496	310044	1	True				
ANR	310561	CallExpression	array_init ( args [ i ] )		310044	0					
ANR	310562	Callee	array_init		310044	0					
ANR	310563	Identifier	array_init		310044	0					
ANR	310564	ArgumentList	args [ i ]		310044	1					
ANR	310565	Argument	args [ i ]		310044	0					
ANR	310566	ArrayIndexing	args [ i ]		310044	0					
ANR	310567	Identifier	args		310044	0					
ANR	310568	Identifier	i		310044	1					
ANR	310569	IfStatement	if ( obj -> nodesetval && obj -> nodesetval -> nodeNr > 0 )		310044	2					
ANR	310570	Condition	obj -> nodesetval && obj -> nodesetval -> nodeNr > 0	143:9:4507:4552	310044	0	True				
ANR	310571	AndExpression	obj -> nodesetval && obj -> nodesetval -> nodeNr > 0		310044	0		&&			
ANR	310572	PtrMemberAccess	obj -> nodesetval		310044	0					
ANR	310573	Identifier	obj		310044	0					
ANR	310574	Identifier	nodesetval		310044	1					
ANR	310575	RelationalExpression	obj -> nodesetval -> nodeNr > 0		310044	1		>			
ANR	310576	PtrMemberAccess	obj -> nodesetval -> nodeNr		310044	0					
ANR	310577	PtrMemberAccess	obj -> nodesetval		310044	0					
ANR	310578	Identifier	obj		310044	0					
ANR	310579	Identifier	nodesetval		310044	1					
ANR	310580	Identifier	nodeNr		310044	1					
ANR	310581	PrimaryExpression	0		310044	1					
ANR	310582	CompoundStatement		68:57:1749:1749	310044	1					
ANR	310583	ForStatement	for ( j = 0 ; j < obj -> nodesetval -> nodeNr ; j ++ )		310044	0					
ANR	310584	ForInit	j = 0 ;	144:11:4568:4573	310044	0	True				
ANR	310585	AssignmentExpression	j = 0		310044	0		=			
ANR	310586	Identifier	j		310044	0					
ANR	310587	PrimaryExpression	0		310044	1					
ANR	310588	Condition	j < obj -> nodesetval -> nodeNr	144:18:4575:4601	310044	1	True				
ANR	310589	RelationalExpression	j < obj -> nodesetval -> nodeNr		310044	0		<			
ANR	310590	Identifier	j		310044	0					
ANR	310591	PtrMemberAccess	obj -> nodesetval -> nodeNr		310044	1					
ANR	310592	PtrMemberAccess	obj -> nodesetval		310044	0					
ANR	310593	Identifier	obj		310044	0					
ANR	310594	Identifier	nodesetval		310044	1					
ANR	310595	Identifier	nodeNr		310044	1					
ANR	310596	PostIncDecOperationExpression	j ++	144:47:4604:4606	310044	2	True				
ANR	310597	Identifier	j		310044	0					
ANR	310598	IncDec	++		310044	1					
ANR	310599	CompoundStatement		71:7:1866:1877	310044	3					
ANR	310600	IdentifierDeclStatement	xmlNodePtr node = obj -> nodesetval -> nodeTab [ j ] ;	145:7:4618:4663	310044	0	True				
ANR	310601	IdentifierDecl	node = obj -> nodesetval -> nodeTab [ j ]		310044	0					
ANR	310602	IdentifierDeclType	xmlNodePtr		310044	0					
ANR	310603	Identifier	node		310044	1					
ANR	310604	AssignmentExpression	node = obj -> nodesetval -> nodeTab [ j ]		310044	2		=			
ANR	310605	Identifier	node		310044	0					
ANR	310606	ArrayIndexing	obj -> nodesetval -> nodeTab [ j ]		310044	1					
ANR	310607	PtrMemberAccess	obj -> nodesetval -> nodeTab		310044	0					
ANR	310608	PtrMemberAccess	obj -> nodesetval		310044	0					
ANR	310609	Identifier	obj		310044	0					
ANR	310610	Identifier	nodesetval		310044	1					
ANR	310611	Identifier	nodeTab		310044	1					
ANR	310612	Identifier	j		310044	1					
ANR	310613	IdentifierDeclStatement	zval * child ;	146:7:4672:4683	310044	1	True				
ANR	310614	IdentifierDecl	* child		310044	0					
ANR	310615	IdentifierDeclType	zval *		310044	0					
ANR	310616	Identifier	child		310044	1					
ANR	310617	ExpressionStatement	MAKE_STD_ZVAL ( child )	147:7:4692:4712	310044	2	True				
ANR	310618	CallExpression	MAKE_STD_ZVAL ( child )		310044	0					
ANR	310619	Callee	MAKE_STD_ZVAL		310044	0					
ANR	310620	Identifier	MAKE_STD_ZVAL		310044	0					
ANR	310621	ArgumentList	child		310044	1					
ANR	310622	Argument	child		310044	0					
ANR	310623	Identifier	child		310044	0					
ANR	310624	IfStatement	if ( node -> type == XML_NAMESPACE_DECL )		310044	3					
ANR	310625	Condition	node -> type == XML_NAMESPACE_DECL	149:11:4792:4823	310044	0	True				
ANR	310626	EqualityExpression	node -> type == XML_NAMESPACE_DECL		310044	0		==			
ANR	310627	PtrMemberAccess	node -> type		310044	0					
ANR	310628	Identifier	node		310044	0					
ANR	310629	Identifier	type		310044	1					
ANR	310630	Identifier	XML_NAMESPACE_DECL		310044	1					
ANR	310631	CompoundStatement		76:8:2054:2073	310044	1					
ANR	310632	IdentifierDeclStatement	xmlNsPtr curns ;	150:8:4836:4850	310044	0	True				
ANR	310633	IdentifierDecl	curns		310044	0					
ANR	310634	IdentifierDeclType	xmlNsPtr		310044	0					
ANR	310635	Identifier	curns		310044	1					
ANR	310636	IdentifierDeclStatement	xmlNodePtr nsparent ;	151:8:4860:4879	310044	1	True				
ANR	310637	IdentifierDecl	nsparent		310044	0					
ANR	310638	IdentifierDeclType	xmlNodePtr		310044	0					
ANR	310639	Identifier	nsparent		310044	1					
ANR	310640	ExpressionStatement	nsparent = node -> _private	153:8:4898:4923	310044	2	True				
ANR	310641	AssignmentExpression	nsparent = node -> _private		310044	0		=			
ANR	310642	Identifier	nsparent		310044	0					
ANR	310643	PtrMemberAccess	node -> _private		310044	1					
ANR	310644	Identifier	node		310044	0					
ANR	310645	Identifier	_private		310044	1					
ANR	310646	ExpressionStatement	"curns = xmlNewNs ( NULL , node -> name , NULL )"	154:8:4933:4973	310044	3	True				
ANR	310647	AssignmentExpression	"curns = xmlNewNs ( NULL , node -> name , NULL )"		310044	0		=			
ANR	310648	Identifier	curns		310044	0					
ANR	310649	CallExpression	"xmlNewNs ( NULL , node -> name , NULL )"		310044	1					
ANR	310650	Callee	xmlNewNs		310044	0					
ANR	310651	Identifier	xmlNewNs		310044	0					
ANR	310652	ArgumentList	NULL		310044	1					
ANR	310653	Argument	NULL		310044	0					
ANR	310654	Identifier	NULL		310044	0					
ANR	310655	Argument	node -> name		310044	1					
ANR	310656	PtrMemberAccess	node -> name		310044	0					
ANR	310657	Identifier	node		310044	0					
ANR	310658	Identifier	name		310044	1					
ANR	310659	Argument	NULL		310044	2					
ANR	310660	Identifier	NULL		310044	0					
ANR	310661	IfStatement	if ( node -> children )		310044	4					
ANR	310662	Condition	node -> children	155:12:4987:5000	310044	0	True				
ANR	310663	PtrMemberAccess	node -> children		310044	0					
ANR	310664	Identifier	node		310044	0					
ANR	310665	Identifier	children		310044	1					
ANR	310666	CompoundStatement		80:28:2197:2197	310044	1					
ANR	310667	ExpressionStatement	curns -> prefix = xmlStrdup ( ( xmlChar * ) node -> children )	156:9:5014:5067	310044	0	True				
ANR	310668	AssignmentExpression	curns -> prefix = xmlStrdup ( ( xmlChar * ) node -> children )		310044	0		=			
ANR	310669	PtrMemberAccess	curns -> prefix		310044	0					
ANR	310670	Identifier	curns		310044	0					
ANR	310671	Identifier	prefix		310044	1					
ANR	310672	CallExpression	xmlStrdup ( ( xmlChar * ) node -> children )		310044	1					
ANR	310673	Callee	xmlStrdup		310044	0					
ANR	310674	Identifier	xmlStrdup		310044	0					
ANR	310675	ArgumentList	( xmlChar * ) node -> children		310044	1					
ANR	310676	Argument	( xmlChar * ) node -> children		310044	0					
ANR	310677	CastExpression	( xmlChar * ) node -> children		310044	0					
ANR	310678	CastTarget	xmlChar *		310044	0					
ANR	310679	PtrMemberAccess	node -> children		310044	1					
ANR	310680	Identifier	node		310044	0					
ANR	310681	Identifier	children		310044	1					
ANR	310682	IfStatement	if ( node -> children )		310044	5					
ANR	310683	Condition	node -> children	158:12:5091:5104	310044	0	True				
ANR	310684	PtrMemberAccess	node -> children		310044	0					
ANR	310685	Identifier	node		310044	0					
ANR	310686	Identifier	children		310044	1					
ANR	310687	CompoundStatement		83:28:2301:2301	310044	1					
ANR	310688	ExpressionStatement	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) node -> children , node -> name )"	159:9:5118:5195	310044	0	True				
ANR	310689	AssignmentExpression	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) node -> children , node -> name )"		310044	0		=			
ANR	310690	Identifier	node		310044	0					
ANR	310691	CallExpression	"xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) node -> children , node -> name )"		310044	1					
ANR	310692	Callee	xmlNewDocNode		310044	0					
ANR	310693	Identifier	xmlNewDocNode		310044	0					
ANR	310694	ArgumentList	node -> doc		310044	1					
ANR	310695	Argument	node -> doc		310044	0					
ANR	310696	PtrMemberAccess	node -> doc		310044	0					
ANR	310697	Identifier	node		310044	0					
ANR	310698	Identifier	doc		310044	1					
ANR	310699	Argument	NULL		310044	1					
ANR	310700	Identifier	NULL		310044	0					
ANR	310701	Argument	( xmlChar * ) node -> children		310044	2					
ANR	310702	CastExpression	( xmlChar * ) node -> children		310044	0					
ANR	310703	CastTarget	xmlChar *		310044	0					
ANR	310704	PtrMemberAccess	node -> children		310044	1					
ANR	310705	Identifier	node		310044	0					
ANR	310706	Identifier	children		310044	1					
ANR	310707	Argument	node -> name		310044	3					
ANR	310708	PtrMemberAccess	node -> name		310044	0					
ANR	310709	Identifier	node		310044	0					
ANR	310710	Identifier	name		310044	1					
ANR	310711	ElseStatement	else		310044	0					
ANR	310712	CompoundStatement		85:15:2406:2406	310044	0					
ANR	310713	ExpressionStatement	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) ""xmlns"" , node -> name )"	161:9:5223:5293	310044	0	True				
ANR	310714	AssignmentExpression	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) ""xmlns"" , node -> name )"		310044	0		=			
ANR	310715	Identifier	node		310044	0					
ANR	310716	CallExpression	"xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) ""xmlns"" , node -> name )"		310044	1					
ANR	310717	Callee	xmlNewDocNode		310044	0					
ANR	310718	Identifier	xmlNewDocNode		310044	0					
ANR	310719	ArgumentList	node -> doc		310044	1					
ANR	310720	Argument	node -> doc		310044	0					
ANR	310721	PtrMemberAccess	node -> doc		310044	0					
ANR	310722	Identifier	node		310044	0					
ANR	310723	Identifier	doc		310044	1					
ANR	310724	Argument	NULL		310044	1					
ANR	310725	Identifier	NULL		310044	0					
ANR	310726	Argument	"( xmlChar * ) ""xmlns"""		310044	2					
ANR	310727	CastExpression	"( xmlChar * ) ""xmlns"""		310044	0					
ANR	310728	CastTarget	xmlChar *		310044	0					
ANR	310729	PrimaryExpression	"""xmlns"""		310044	1					
ANR	310730	Argument	node -> name		310044	3					
ANR	310731	PtrMemberAccess	node -> name		310044	0					
ANR	310732	Identifier	node		310044	0					
ANR	310733	Identifier	name		310044	1					
ANR	310734	ExpressionStatement	node -> type = XML_NAMESPACE_DECL	163:8:5313:5344	310044	6	True				
ANR	310735	AssignmentExpression	node -> type = XML_NAMESPACE_DECL		310044	0		=			
ANR	310736	PtrMemberAccess	node -> type		310044	0					
ANR	310737	Identifier	node		310044	0					
ANR	310738	Identifier	type		310044	1					
ANR	310739	Identifier	XML_NAMESPACE_DECL		310044	1					
ANR	310740	ExpressionStatement	node -> parent = nsparent	164:8:5354:5377	310044	7	True				
ANR	310741	AssignmentExpression	node -> parent = nsparent		310044	0		=			
ANR	310742	PtrMemberAccess	node -> parent		310044	0					
ANR	310743	Identifier	node		310044	0					
ANR	310744	Identifier	parent		310044	1					
ANR	310745	Identifier	nsparent		310044	1					
ANR	310746	ExpressionStatement	node -> ns = curns	165:8:5387:5403	310044	8	True				
ANR	310747	AssignmentExpression	node -> ns = curns		310044	0		=			
ANR	310748	PtrMemberAccess	node -> ns		310044	0					
ANR	310749	Identifier	node		310044	0					
ANR	310750	Identifier	ns		310044	1					
ANR	310751	Identifier	curns		310044	1					
ANR	310752	Statement	child	167:7:5421:5425	310044	4	True				
ANR	310753	Statement	=	167:13:5427:5427	310044	5	True				
ANR	310754	Statement	php_dom_create_object	167:15:5429:5449	310044	6	True				
ANR	310755	Statement	(	167:36:5450:5450	310044	7	True				
ANR	310756	Statement	node	167:37:5451:5454	310044	8	True				
ANR	310757	Statement	","	167:41:5455:5455	310044	9	True				
ANR	310758	Statement	&	167:43:5457:5457	310044	10	True				
ANR	310759	Statement	ret	167:44:5458:5460	310044	11	True				
ANR	310760	Statement	","	167:47:5461:5461	310044	12	True				
ANR	310761	Statement	child	167:49:5463:5467	310044	13	True				
ANR	310762	Statement	","	167:54:5468:5468	310044	14	True				
ANR	310763	Statement	(	167:56:5470:5470	310044	15	True				
ANR	310764	Statement	dom_object	167:57:5471:5480	310044	16	True				
ANR	310765	Statement	*	167:68:5482:5482	310044	17	True				
ANR	310766	Statement	)	167:69:5483:5483	310044	18	True				
ANR	310767	Statement	intern	167:70:5484:5489	310044	19	True				
ANR	310768	Statement	TSRMLS_CC	167:77:5491:5499	310044	20	True				
ANR	310769	Statement	)	167:86:5500:5500	310044	21	True				
ANR	310770	ExpressionStatement		167:87:5501:5501	310044	22	True				
ANR	310771	ExpressionStatement	"add_next_index_zval ( args [ i ] , child )"	168:7:5510:5545	310044	23	True				
ANR	310772	CallExpression	"add_next_index_zval ( args [ i ] , child )"		310044	0					
ANR	310773	Callee	add_next_index_zval		310044	0					
ANR	310774	Identifier	add_next_index_zval		310044	0					
ANR	310775	ArgumentList	args [ i ]		310044	1					
ANR	310776	Argument	args [ i ]		310044	0					
ANR	310777	ArrayIndexing	args [ i ]		310044	0					
ANR	310778	Identifier	args		310044	0					
ANR	310779	Identifier	i		310044	1					
ANR	310780	Argument	child		310044	1					
ANR	310781	Identifier	child		310044	0					
ANR	310782	BreakStatement	break ;	172:4:5572:5577	310044	11	True				
ANR	310783	Label	default :	173:3:5582:5589	310044	12	True				
ANR	310784	Identifier	default		310044	0					
ANR	310785	ExpressionStatement	"ZVAL_STRING ( args [ i ] , ( char * ) xmlXPathCastToString ( obj ) , 1 )"	174:3:5594:5652	310044	13	True				
ANR	310786	CallExpression	"ZVAL_STRING ( args [ i ] , ( char * ) xmlXPathCastToString ( obj ) , 1 )"		310044	0					
ANR	310787	Callee	ZVAL_STRING		310044	0					
ANR	310788	Identifier	ZVAL_STRING		310044	0					
ANR	310789	ArgumentList	args [ i ]		310044	1					
ANR	310790	Argument	args [ i ]		310044	0					
ANR	310791	ArrayIndexing	args [ i ]		310044	0					
ANR	310792	Identifier	args		310044	0					
ANR	310793	Identifier	i		310044	1					
ANR	310794	Argument	( char * ) xmlXPathCastToString ( obj )		310044	1					
ANR	310795	CastExpression	( char * ) xmlXPathCastToString ( obj )		310044	0					
ANR	310796	CastTarget	char *		310044	0					
ANR	310797	CallExpression	xmlXPathCastToString ( obj )		310044	1					
ANR	310798	Callee	xmlXPathCastToString		310044	0					
ANR	310799	Identifier	xmlXPathCastToString		310044	0					
ANR	310800	ArgumentList	obj		310044	1					
ANR	310801	Argument	obj		310044	0					
ANR	310802	Identifier	obj		310044	0					
ANR	310803	Argument	1		310044	2					
ANR	310804	PrimaryExpression	1		310044	0					
ANR	310805	ExpressionStatement	xmlXPathFreeObject ( obj )	176:2:5660:5683	310044	3	True				
ANR	310806	CallExpression	xmlXPathFreeObject ( obj )		310044	0					
ANR	310807	Callee	xmlXPathFreeObject		310044	0					
ANR	310808	Identifier	xmlXPathFreeObject		310044	0					
ANR	310809	ArgumentList	obj		310044	1					
ANR	310810	Argument	obj		310044	0					
ANR	310811	Identifier	obj		310044	0					
ANR	310812	ExpressionStatement	fci . params [ i ] = & args [ i ]	177:2:5687:5711	310044	4	True				
ANR	310813	AssignmentExpression	fci . params [ i ] = & args [ i ]		310044	0		=			
ANR	310814	ArrayIndexing	fci . params [ i ]		310044	0					
ANR	310815	MemberAccess	fci . params		310044	0					
ANR	310816	Identifier	fci		310044	0					
ANR	310817	Identifier	params		310044	1					
ANR	310818	Identifier	i		310044	1					
ANR	310819	UnaryOperationExpression	& args [ i ]		310044	1					
ANR	310820	UnaryOperator	&		310044	0					
ANR	310821	ArrayIndexing	args [ i ]		310044	1					
ANR	310822	Identifier	args		310044	0					
ANR	310823	Identifier	i		310044	1					
ANR	310824	ExpressionStatement	fci . size = sizeof ( fci )	180:1:5719:5741	310044	16	True				
ANR	310825	AssignmentExpression	fci . size = sizeof ( fci )		310044	0		=			
ANR	310826	MemberAccess	fci . size		310044	0					
ANR	310827	Identifier	fci		310044	0					
ANR	310828	Identifier	size		310044	1					
ANR	310829	SizeofExpression	sizeof ( fci )		310044	1					
ANR	310830	Sizeof	sizeof		310044	0					
ANR	310831	SizeofOperand	fci		310044	1					
ANR	310832	ExpressionStatement	fci . function_table = EG ( function_table )	181:1:5744:5783	310044	17	True				
ANR	310833	AssignmentExpression	fci . function_table = EG ( function_table )		310044	0		=			
ANR	310834	MemberAccess	fci . function_table		310044	0					
ANR	310835	Identifier	fci		310044	0					
ANR	310836	Identifier	function_table		310044	1					
ANR	310837	CallExpression	EG ( function_table )		310044	1					
ANR	310838	Callee	EG		310044	0					
ANR	310839	Identifier	EG		310044	0					
ANR	310840	ArgumentList	function_table		310044	1					
ANR	310841	Argument	function_table		310044	0					
ANR	310842	Identifier	function_table		310044	0					
ANR	310843	ExpressionStatement	obj = valuePop ( ctxt )	183:1:5788:5808	310044	18	True				
ANR	310844	AssignmentExpression	obj = valuePop ( ctxt )		310044	0		=			
ANR	310845	Identifier	obj		310044	0					
ANR	310846	CallExpression	valuePop ( ctxt )		310044	1					
ANR	310847	Callee	valuePop		310044	0					
ANR	310848	Identifier	valuePop		310044	0					
ANR	310849	ArgumentList	ctxt		310044	1					
ANR	310850	Argument	ctxt		310044	0					
ANR	310851	Identifier	ctxt		310044	0					
ANR	310852	IfStatement	if ( obj -> stringval == NULL )		310044	19					
ANR	310853	Condition	obj -> stringval == NULL	184:5:5815:5836	310044	0	True				
ANR	310854	EqualityExpression	obj -> stringval == NULL		310044	0		==			
ANR	310855	PtrMemberAccess	obj -> stringval		310044	0					
ANR	310856	Identifier	obj		310044	0					
ANR	310857	Identifier	stringval		310044	1					
ANR	310858	Identifier	NULL		310044	1					
ANR	310859	CompoundStatement		109:29:3033:3033	310044	1					
ANR	310860	Statement	php_error_docref	185:2:5843:5858	310044	0	True				
ANR	310861	Statement	(	185:18:5859:5859	310044	1	True				
ANR	310862	Statement	NULL	185:19:5860:5863	310044	2	True				
ANR	310863	Statement	TSRMLS_CC	185:24:5865:5873	310044	3	True				
ANR	310864	Statement	","	185:33:5874:5874	310044	4	True				
ANR	310865	Statement	E_WARNING	185:35:5876:5884	310044	5	True				
ANR	310866	Statement	","	185:44:5885:5885	310044	6	True				
ANR	310867	Statement	"""Handler name must be a string"""	185:46:5887:5917	310044	7	True				
ANR	310868	Statement	)	185:77:5918:5918	310044	8	True				
ANR	310869	ExpressionStatement		185:78:5919:5919	310044	9	True				
ANR	310870	ExpressionStatement	xmlXPathFreeObject ( obj )	186:2:5923:5946	310044	10	True				
ANR	310871	CallExpression	xmlXPathFreeObject ( obj )		310044	0					
ANR	310872	Callee	xmlXPathFreeObject		310044	0					
ANR	310873	Identifier	xmlXPathFreeObject		310044	0					
ANR	310874	ArgumentList	obj		310044	1					
ANR	310875	Argument	obj		310044	0					
ANR	310876	Identifier	obj		310044	0					
ANR	310877	IfStatement	if ( fci . param_count > 0 )		310044	11					
ANR	310878	Condition	fci . param_count > 0	187:6:5954:5972	310044	0	True				
ANR	310879	RelationalExpression	fci . param_count > 0		310044	0		>			
ANR	310880	MemberAccess	fci . param_count		310044	0					
ANR	310881	Identifier	fci		310044	0					
ANR	310882	Identifier	param_count		310044	1					
ANR	310883	PrimaryExpression	0		310044	1					
ANR	310884	CompoundStatement		112:27:3169:3169	310044	1					
ANR	310885	ForStatement	for ( i = 0 ; i < nargs - 1 ; i ++ )		310044	0					
ANR	310886	ForInit	i = 0 ;	188:8:5985:5990	310044	0	True				
ANR	310887	AssignmentExpression	i = 0		310044	0		=			
ANR	310888	Identifier	i		310044	0					
ANR	310889	PrimaryExpression	0		310044	1					
ANR	310890	Condition	i < nargs - 1	188:15:5992:6004	310044	1	True				
ANR	310891	RelationalExpression	i < nargs - 1		310044	0		<			
ANR	310892	Identifier	i		310044	0					
ANR	310893	AdditiveExpression	nargs - 1		310044	1		-			
ANR	310894	Identifier	nargs		310044	0					
ANR	310895	PrimaryExpression	1		310044	1					
ANR	310896	PostIncDecOperationExpression	i ++	188:30:6007:6009	310044	2	True				
ANR	310897	Identifier	i		310044	0					
ANR	310898	IncDec	++		310044	1					
ANR	310899	CompoundStatement		113:35:3206:3206	310044	3					
ANR	310900	ExpressionStatement	zval_ptr_dtor ( & args [ i ] )	189:4:6018:6041	310044	0	True				
ANR	310901	CallExpression	zval_ptr_dtor ( & args [ i ] )		310044	0					
ANR	310902	Callee	zval_ptr_dtor		310044	0					
ANR	310903	Identifier	zval_ptr_dtor		310044	0					
ANR	310904	ArgumentList	& args [ i ]		310044	1					
ANR	310905	Argument	& args [ i ]		310044	0					
ANR	310906	UnaryOperationExpression	& args [ i ]		310044	0					
ANR	310907	UnaryOperator	&		310044	0					
ANR	310908	ArrayIndexing	args [ i ]		310044	1					
ANR	310909	Identifier	args		310044	0					
ANR	310910	Identifier	i		310044	1					
ANR	310911	ExpressionStatement	efree ( args )	191:3:6051:6062	310044	1	True				
ANR	310912	CallExpression	efree ( args )		310044	0					
ANR	310913	Callee	efree		310044	0					
ANR	310914	Identifier	efree		310044	0					
ANR	310915	ArgumentList	args		310044	1					
ANR	310916	Argument	args		310044	0					
ANR	310917	Identifier	args		310044	0					
ANR	310918	ExpressionStatement	efree ( fci . params )	192:3:6067:6084	310044	2	True				
ANR	310919	CallExpression	efree ( fci . params )		310044	0					
ANR	310920	Callee	efree		310044	0					
ANR	310921	Identifier	efree		310044	0					
ANR	310922	ArgumentList	fci . params		310044	1					
ANR	310923	Argument	fci . params		310044	0					
ANR	310924	MemberAccess	fci . params		310044	0					
ANR	310925	Identifier	fci		310044	0					
ANR	310926	Identifier	params		310044	1					
ANR	310927	ReturnStatement	return ;	194:2:6092:6098	310044	12	True				
ANR	310928	ElseStatement	else		310044	0					
ANR	310929	IfStatement	"if ( intern -> registerPhpFunctions == 2 && zend_hash_exists ( intern -> registered_phpfunctions , callable , strlen ( callable ) + 1 ) == 0 )"		310044	0					
ANR	310930	Condition	"intern -> registerPhpFunctions == 2 && zend_hash_exists ( intern -> registered_phpfunctions , callable , strlen ( callable ) + 1 ) == 0"	209:13:6497:6619	310044	0	True				
ANR	310931	AndExpression	"intern -> registerPhpFunctions == 2 && zend_hash_exists ( intern -> registered_phpfunctions , callable , strlen ( callable ) + 1 ) == 0"		310044	0		&&			
ANR	310932	EqualityExpression	intern -> registerPhpFunctions == 2		310044	0		==			
ANR	310933	PtrMemberAccess	intern -> registerPhpFunctions		310044	0					
ANR	310934	Identifier	intern		310044	0					
ANR	310935	Identifier	registerPhpFunctions		310044	1					
ANR	310936	PrimaryExpression	2		310044	1					
ANR	310937	EqualityExpression	"zend_hash_exists ( intern -> registered_phpfunctions , callable , strlen ( callable ) + 1 ) == 0"		310044	1		==			
ANR	310938	CallExpression	"zend_hash_exists ( intern -> registered_phpfunctions , callable , strlen ( callable ) + 1 )"		310044	0					
ANR	310939	Callee	zend_hash_exists		310044	0					
ANR	310940	Identifier	zend_hash_exists		310044	0					
ANR	310941	ArgumentList	intern -> registered_phpfunctions		310044	1					
ANR	310942	Argument	intern -> registered_phpfunctions		310044	0					
ANR	310943	PtrMemberAccess	intern -> registered_phpfunctions		310044	0					
ANR	310944	Identifier	intern		310044	0					
ANR	310945	Identifier	registered_phpfunctions		310044	1					
ANR	310946	Argument	callable		310044	1					
ANR	310947	Identifier	callable		310044	0					
ANR	310948	Argument	strlen ( callable ) + 1		310044	2					
ANR	310949	AdditiveExpression	strlen ( callable ) + 1		310044	0		+			
ANR	310950	CallExpression	strlen ( callable )		310044	0					
ANR	310951	Callee	strlen		310044	0					
ANR	310952	Identifier	strlen		310044	0					
ANR	310953	ArgumentList	callable		310044	1					
ANR	310954	Argument	callable		310044	0					
ANR	310955	Identifier	callable		310044	0					
ANR	310956	PrimaryExpression	1		310044	1					
ANR	310957	PrimaryExpression	0		310044	1					
ANR	310958	CompoundStatement		134:138:3816:3816	310044	1					
ANR	310959	Statement	php_error_docref	210:2:6627:6642	310044	0	True				
ANR	310960	Statement	(	210:18:6643:6643	310044	1	True				
ANR	310961	Statement	NULL	210:19:6644:6647	310044	2	True				
ANR	310962	Statement	TSRMLS_CC	210:24:6649:6657	310044	3	True				
ANR	310963	Statement	","	210:33:6658:6658	310044	4	True				
ANR	310964	Statement	E_WARNING	210:35:6660:6668	310044	5	True				
ANR	310965	Statement	","	210:44:6669:6669	310044	6	True				
ANR	310966	Statement	"""Not allowed to call handler '%s()'."""	210:46:6671:6707	310044	7	True				
ANR	310967	Statement	","	210:83:6708:6708	310044	8	True				
ANR	310968	Statement	callable	210:85:6710:6717	310044	9	True				
ANR	310969	Statement	)	210:93:6718:6718	310044	10	True				
ANR	310970	ExpressionStatement		210:94:6719:6719	310044	11	True				
ANR	310971	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"	212:2:6796:6845	310044	12	True				
ANR	310972	CallExpression	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"		310044	0					
ANR	310973	Callee	valuePush		310044	0					
ANR	310974	Identifier	valuePush		310044	0					
ANR	310975	ArgumentList	ctxt		310044	1					
ANR	310976	Argument	ctxt		310044	0					
ANR	310977	Identifier	ctxt		310044	0					
ANR	310978	Argument	"xmlXPathNewString ( ( xmlChar * ) """" )"		310044	1					
ANR	310979	CallExpression	"xmlXPathNewString ( ( xmlChar * ) """" )"		310044	0					
ANR	310980	Callee	xmlXPathNewString		310044	0					
ANR	310981	Identifier	xmlXPathNewString		310044	0					
ANR	310982	ArgumentList	"( xmlChar * ) """""		310044	1					
ANR	310983	Argument	"( xmlChar * ) """""		310044	0					
ANR	310984	CastExpression	"( xmlChar * ) """""		310044	0					
ANR	310985	CastTarget	xmlChar *		310044	0					
ANR	310986	PrimaryExpression	""""""		310044	1					
ANR	310987	ElseStatement	else		310044	0					
ANR	310988	CompoundStatement		146:9:4431:4431	310044	0					
ANR	310989	Statement	if	222:3:7242:7243	310044	0	True				
ANR	310990	Statement	(	222:6:7245:7245	310044	1	True				
ANR	310991	Statement	retval	222:7:7246:7251	310044	2	True				
ANR	310992	Statement	->	222:13:7252:7253	310044	3	True				
ANR	310993	Statement	type	222:15:7254:7257	310044	4	True				
ANR	310994	Statement	==	222:20:7259:7260	310044	5	True				
ANR	310995	Statement	IS_OBJECT	222:23:7262:7270	310044	6	True				
ANR	310996	Statement	&&	222:33:7272:7273	310044	7	True				
ANR	310997	Statement	instanceof_function	222:36:7275:7293	310044	8	True				
ANR	310998	Statement	(	222:55:7294:7294	310044	9	True				
ANR	310999	Statement	Z_OBJCE_P	222:57:7296:7304	310044	10	True				
ANR	311000	Statement	(	222:66:7305:7305	310044	11	True				
ANR	311001	Statement	retval	222:67:7306:7311	310044	12	True				
ANR	311002	Statement	)	222:73:7312:7312	310044	13	True				
ANR	311003	Statement	","	222:74:7313:7313	310044	14	True				
ANR	311004	Statement	dom_node_class_entry	222:76:7315:7334	310044	15	True				
ANR	311005	Statement	TSRMLS_CC	222:97:7336:7344	310044	16	True				
ANR	311006	Statement	)	222:106:7345:7345	310044	17	True				
ANR	311007	Statement	)	222:107:7346:7346	310044	18	True				
ANR	311008	CompoundStatement		149:4:4568:4583	310044	19					
ANR	311009	IdentifierDeclStatement	xmlNode * nodep ;	223:4:7354:7368	310044	0	True				
ANR	311010	IdentifierDecl	* nodep		310044	0					
ANR	311011	IdentifierDeclType	xmlNode *		310044	0					
ANR	311012	Identifier	nodep		310044	1					
ANR	311013	IdentifierDeclStatement	dom_object * obj ;	224:4:7374:7389	310044	1	True				
ANR	311014	IdentifierDecl	* obj		310044	0					
ANR	311015	IdentifierDeclType	dom_object *		310044	0					
ANR	311016	Identifier	obj		310044	1					
ANR	311017	IfStatement	if ( intern -> node_list == NULL )		310044	2					
ANR	311018	Condition	intern -> node_list == NULL	225:8:7399:7423	310044	0	True				
ANR	311019	EqualityExpression	intern -> node_list == NULL		310044	0		==			
ANR	311020	PtrMemberAccess	intern -> node_list		310044	0					
ANR	311021	Identifier	intern		310044	0					
ANR	311022	Identifier	node_list		310044	1					
ANR	311023	Identifier	NULL		310044	1					
ANR	311024	CompoundStatement		150:35:4620:4620	310044	1					
ANR	311025	ExpressionStatement	ALLOC_HASHTABLE ( intern -> node_list )	226:5:7433:7467	310044	0	True				
ANR	311026	CallExpression	ALLOC_HASHTABLE ( intern -> node_list )		310044	0					
ANR	311027	Callee	ALLOC_HASHTABLE		310044	0					
ANR	311028	Identifier	ALLOC_HASHTABLE		310044	0					
ANR	311029	ArgumentList	intern -> node_list		310044	1					
ANR	311030	Argument	intern -> node_list		310044	0					
ANR	311031	PtrMemberAccess	intern -> node_list		310044	0					
ANR	311032	Identifier	intern		310044	0					
ANR	311033	Identifier	node_list		310044	1					
ANR	311034	ExpressionStatement	"zend_hash_init ( intern -> node_list , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	227:5:7474:7534	310044	1	True				
ANR	311035	CallExpression	"zend_hash_init ( intern -> node_list , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		310044	0					
ANR	311036	Callee	zend_hash_init		310044	0					
ANR	311037	Identifier	zend_hash_init		310044	0					
ANR	311038	ArgumentList	intern -> node_list		310044	1					
ANR	311039	Argument	intern -> node_list		310044	0					
ANR	311040	PtrMemberAccess	intern -> node_list		310044	0					
ANR	311041	Identifier	intern		310044	0					
ANR	311042	Identifier	node_list		310044	1					
ANR	311043	Argument	0		310044	1					
ANR	311044	PrimaryExpression	0		310044	0					
ANR	311045	Argument	NULL		310044	2					
ANR	311046	Identifier	NULL		310044	0					
ANR	311047	Argument	ZVAL_PTR_DTOR		310044	3					
ANR	311048	Identifier	ZVAL_PTR_DTOR		310044	0					
ANR	311049	Argument	0		310044	4					
ANR	311050	PrimaryExpression	0		310044	0					
ANR	311051	ExpressionStatement	zval_add_ref ( & retval )	229:4:7546:7567	310044	3	True				
ANR	311052	CallExpression	zval_add_ref ( & retval )		310044	0					
ANR	311053	Callee	zval_add_ref		310044	0					
ANR	311054	Identifier	zval_add_ref		310044	0					
ANR	311055	ArgumentList	& retval		310044	1					
ANR	311056	Argument	& retval		310044	0					
ANR	311057	UnaryOperationExpression	& retval		310044	0					
ANR	311058	UnaryOperator	&		310044	0					
ANR	311059	Identifier	retval		310044	1					
ANR	311060	ExpressionStatement	"zend_hash_next_index_insert ( intern -> node_list , & retval , sizeof ( zval * ) , NULL )"	230:4:7573:7650	310044	4	True				
ANR	311061	CallExpression	"zend_hash_next_index_insert ( intern -> node_list , & retval , sizeof ( zval * ) , NULL )"		310044	0					
ANR	311062	Callee	zend_hash_next_index_insert		310044	0					
ANR	311063	Identifier	zend_hash_next_index_insert		310044	0					
ANR	311064	ArgumentList	intern -> node_list		310044	1					
ANR	311065	Argument	intern -> node_list		310044	0					
ANR	311066	PtrMemberAccess	intern -> node_list		310044	0					
ANR	311067	Identifier	intern		310044	0					
ANR	311068	Identifier	node_list		310044	1					
ANR	311069	Argument	& retval		310044	1					
ANR	311070	UnaryOperationExpression	& retval		310044	0					
ANR	311071	UnaryOperator	&		310044	0					
ANR	311072	Identifier	retval		310044	1					
ANR	311073	Argument	sizeof ( zval * )		310044	2					
ANR	311074	SizeofExpression	sizeof ( zval * )		310044	0					
ANR	311075	Sizeof	sizeof		310044	0					
ANR	311076	SizeofOperand	zval *		310044	1					
ANR	311077	Argument	NULL		310044	3					
ANR	311078	Identifier	NULL		310044	0					
ANR	311079	Statement	obj	231:4:7656:7658	310044	5	True				
ANR	311080	Statement	=	231:8:7660:7660	310044	6	True				
ANR	311081	Statement	(	231:10:7662:7662	310044	7	True				
ANR	311082	Statement	dom_object	231:11:7663:7672	310044	8	True				
ANR	311083	Statement	*	231:22:7674:7674	310044	9	True				
ANR	311084	Statement	)	231:23:7675:7675	310044	10	True				
ANR	311085	Statement	zend_object_store_get_object	231:24:7676:7703	310044	11	True				
ANR	311086	Statement	(	231:52:7704:7704	310044	12	True				
ANR	311087	Statement	retval	231:53:7705:7710	310044	13	True				
ANR	311088	Statement	TSRMLS_CC	231:60:7712:7720	310044	14	True				
ANR	311089	Statement	)	231:69:7721:7721	310044	15	True				
ANR	311090	ExpressionStatement		231:70:7722:7722	310044	16	True				
ANR	311091	ExpressionStatement	nodep = dom_object_get_node ( obj )	232:4:7728:7760	310044	17	True				
ANR	311092	AssignmentExpression	nodep = dom_object_get_node ( obj )		310044	0		=			
ANR	311093	Identifier	nodep		310044	0					
ANR	311094	CallExpression	dom_object_get_node ( obj )		310044	1					
ANR	311095	Callee	dom_object_get_node		310044	0					
ANR	311096	Identifier	dom_object_get_node		310044	0					
ANR	311097	ArgumentList	obj		310044	1					
ANR	311098	Argument	obj		310044	0					
ANR	311099	Identifier	obj		310044	0					
ANR	311100	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewNodeSet ( nodep ) )"	233:4:7766:7808	310044	18	True				
ANR	311101	CallExpression	"valuePush ( ctxt , xmlXPathNewNodeSet ( nodep ) )"		310044	0					
ANR	311102	Callee	valuePush		310044	0					
ANR	311103	Identifier	valuePush		310044	0					
ANR	311104	ArgumentList	ctxt		310044	1					
ANR	311105	Argument	ctxt		310044	0					
ANR	311106	Identifier	ctxt		310044	0					
ANR	311107	Argument	xmlXPathNewNodeSet ( nodep )		310044	1					
ANR	311108	CallExpression	xmlXPathNewNodeSet ( nodep )		310044	0					
ANR	311109	Callee	xmlXPathNewNodeSet		310044	0					
ANR	311110	Identifier	xmlXPathNewNodeSet		310044	0					
ANR	311111	ArgumentList	nodep		310044	1					
ANR	311112	Argument	nodep		310044	0					
ANR	311113	Identifier	nodep		310044	0					
ANR	311114	ExpressionStatement	zval_ptr_dtor ( & retval )	243:3:8229:8251	310044	20	True				
ANR	311115	CallExpression	zval_ptr_dtor ( & retval )		310044	0					
ANR	311116	Callee	zval_ptr_dtor		310044	0					
ANR	311117	Identifier	zval_ptr_dtor		310044	0					
ANR	311118	ArgumentList	& retval		310044	1					
ANR	311119	Argument	& retval		310044	0					
ANR	311120	UnaryOperationExpression	& retval		310044	0					
ANR	311121	UnaryOperator	&		310044	0					
ANR	311122	Identifier	retval		310044	1					
ANR	311123	ExpressionStatement	INIT_PZVAL ( & handler )	196:1:6105:6125	310044	20	True				
ANR	311124	CallExpression	INIT_PZVAL ( & handler )		310044	0					
ANR	311125	Callee	INIT_PZVAL		310044	0					
ANR	311126	Identifier	INIT_PZVAL		310044	0					
ANR	311127	ArgumentList	& handler		310044	1					
ANR	311128	Argument	& handler		310044	0					
ANR	311129	UnaryOperationExpression	& handler		310044	0					
ANR	311130	UnaryOperator	&		310044	0					
ANR	311131	Identifier	handler		310044	1					
ANR	311132	ExpressionStatement	"ZVAL_STRING ( & handler , obj -> stringval , 1 )"	197:1:6128:6168	310044	21	True				
ANR	311133	CallExpression	"ZVAL_STRING ( & handler , obj -> stringval , 1 )"		310044	0					
ANR	311134	Callee	ZVAL_STRING		310044	0					
ANR	311135	Identifier	ZVAL_STRING		310044	0					
ANR	311136	ArgumentList	& handler		310044	1					
ANR	311137	Argument	& handler		310044	0					
ANR	311138	UnaryOperationExpression	& handler		310044	0					
ANR	311139	UnaryOperator	&		310044	0					
ANR	311140	Identifier	handler		310044	1					
ANR	311141	Argument	obj -> stringval		310044	1					
ANR	311142	PtrMemberAccess	obj -> stringval		310044	0					
ANR	311143	Identifier	obj		310044	0					
ANR	311144	Identifier	stringval		310044	1					
ANR	311145	Argument	1		310044	2					
ANR	311146	PrimaryExpression	1		310044	0					
ANR	311147	ExpressionStatement	xmlXPathFreeObject ( obj )	198:1:6171:6194	310044	22	True				
ANR	311148	CallExpression	xmlXPathFreeObject ( obj )		310044	0					
ANR	311149	Callee	xmlXPathFreeObject		310044	0					
ANR	311150	Identifier	xmlXPathFreeObject		310044	0					
ANR	311151	ArgumentList	obj		310044	1					
ANR	311152	Argument	obj		310044	0					
ANR	311153	Identifier	obj		310044	0					
ANR	311154	ExpressionStatement	fci . function_name = & handler	200:1:6198:6226	310044	23	True				
ANR	311155	AssignmentExpression	fci . function_name = & handler		310044	0		=			
ANR	311156	MemberAccess	fci . function_name		310044	0					
ANR	311157	Identifier	fci		310044	0					
ANR	311158	Identifier	function_name		310044	1					
ANR	311159	UnaryOperationExpression	& handler		310044	1					
ANR	311160	UnaryOperator	&		310044	0					
ANR	311161	Identifier	handler		310044	1					
ANR	311162	ExpressionStatement	fci . symbol_table = NULL	201:1:6229:6252	310044	24	True				
ANR	311163	AssignmentExpression	fci . symbol_table = NULL		310044	0		=			
ANR	311164	MemberAccess	fci . symbol_table		310044	0					
ANR	311165	Identifier	fci		310044	0					
ANR	311166	Identifier	symbol_table		310044	1					
ANR	311167	Identifier	NULL		310044	1					
ANR	311168	ExpressionStatement	fci . object_ptr = NULL	202:1:6255:6276	310044	25	True				
ANR	311169	AssignmentExpression	fci . object_ptr = NULL		310044	0		=			
ANR	311170	MemberAccess	fci . object_ptr		310044	0					
ANR	311171	Identifier	fci		310044	0					
ANR	311172	Identifier	object_ptr		310044	1					
ANR	311173	Identifier	NULL		310044	1					
ANR	311174	ExpressionStatement	fci . retval_ptr_ptr = & retval	203:1:6279:6307	310044	26	True				
ANR	311175	AssignmentExpression	fci . retval_ptr_ptr = & retval		310044	0		=			
ANR	311176	MemberAccess	fci . retval_ptr_ptr		310044	0					
ANR	311177	Identifier	fci		310044	0					
ANR	311178	Identifier	retval_ptr_ptr		310044	1					
ANR	311179	UnaryOperationExpression	& retval		310044	1					
ANR	311180	UnaryOperator	&		310044	0					
ANR	311181	Identifier	retval		310044	1					
ANR	311182	ExpressionStatement	fci . no_separation = 0	204:1:6310:6331	310044	27	True				
ANR	311183	AssignmentExpression	fci . no_separation = 0		310044	0		=			
ANR	311184	MemberAccess	fci . no_separation		310044	0					
ANR	311185	Identifier	fci		310044	0					
ANR	311186	Identifier	no_separation		310044	1					
ANR	311187	PrimaryExpression	0		310044	1					
ANR	311188	Statement	if	206:1:6335:6336	310044	28	True				
ANR	311189	Statement	(	206:4:6338:6338	310044	29	True				
ANR	311190	Statement	!	206:5:6339:6339	310044	30	True				
ANR	311191	Statement	zend_make_callable	206:6:6340:6357	310044	31	True				
ANR	311192	Statement	(	206:24:6358:6358	310044	32	True				
ANR	311193	Statement	&	206:25:6359:6359	310044	33	True				
ANR	311194	Statement	handler	206:26:6360:6366	310044	34	True				
ANR	311195	Statement	","	206:33:6367:6367	310044	35	True				
ANR	311196	Statement	&	206:35:6369:6369	310044	36	True				
ANR	311197	Statement	callable	206:36:6370:6377	310044	37	True				
ANR	311198	Statement	TSRMLS_CC	206:45:6379:6387	310044	38	True				
ANR	311199	Statement	)	206:54:6388:6388	310044	39	True				
ANR	311200	Statement	)	206:55:6389:6389	310044	40	True				
ANR	311201	CompoundStatement		131:57:3585:3585	310044	41					
ANR	311202	Statement	php_error_docref	207:2:6395:6410	310044	0	True				
ANR	311203	Statement	(	207:18:6411:6411	310044	1	True				
ANR	311204	Statement	NULL	207:19:6412:6415	310044	2	True				
ANR	311205	Statement	TSRMLS_CC	207:24:6417:6425	310044	3	True				
ANR	311206	Statement	","	207:33:6426:6426	310044	4	True				
ANR	311207	Statement	E_WARNING	207:35:6428:6436	310044	5	True				
ANR	311208	Statement	","	207:44:6437:6437	310044	6	True				
ANR	311209	Statement	"""Unable to call handler %s()"""	207:46:6439:6467	310044	7	True				
ANR	311210	Statement	","	207:75:6468:6468	310044	8	True				
ANR	311211	Statement	callable	207:77:6470:6477	310044	9	True				
ANR	311212	Statement	)	207:85:6478:6478	310044	10	True				
ANR	311213	ExpressionStatement		207:86:6479:6479	310044	11	True				
ANR	311214	ExpressionStatement	efree ( callable )	246:1:8261:8276	310044	42	True				
ANR	311215	CallExpression	efree ( callable )		310044	0					
ANR	311216	Callee	efree		310044	0					
ANR	311217	Identifier	efree		310044	0					
ANR	311218	ArgumentList	callable		310044	1					
ANR	311219	Argument	callable		310044	0					
ANR	311220	Identifier	callable		310044	0					
ANR	311221	ExpressionStatement	zval_dtor ( & handler )	247:1:8279:8298	310044	43	True				
ANR	311222	CallExpression	zval_dtor ( & handler )		310044	0					
ANR	311223	Callee	zval_dtor		310044	0					
ANR	311224	Identifier	zval_dtor		310044	0					
ANR	311225	ArgumentList	& handler		310044	1					
ANR	311226	Argument	& handler		310044	0					
ANR	311227	UnaryOperationExpression	& handler		310044	0					
ANR	311228	UnaryOperator	&		310044	0					
ANR	311229	Identifier	handler		310044	1					
ANR	311230	IfStatement	if ( fci . param_count > 0 )		310044	44					
ANR	311231	Condition	fci . param_count > 0	248:5:8305:8323	310044	0	True				
ANR	311232	RelationalExpression	fci . param_count > 0		310044	0		>			
ANR	311233	MemberAccess	fci . param_count		310044	0					
ANR	311234	Identifier	fci		310044	0					
ANR	311235	Identifier	param_count		310044	1					
ANR	311236	PrimaryExpression	0		310044	1					
ANR	311237	CompoundStatement		173:26:5520:5520	310044	1					
ANR	311238	ForStatement	for ( i = 0 ; i < nargs - 1 ; i ++ )		310044	0					
ANR	311239	ForInit	i = 0 ;	249:7:8335:8340	310044	0	True				
ANR	311240	AssignmentExpression	i = 0		310044	0		=			
ANR	311241	Identifier	i		310044	0					
ANR	311242	PrimaryExpression	0		310044	1					
ANR	311243	Condition	i < nargs - 1	249:14:8342:8354	310044	1	True				
ANR	311244	RelationalExpression	i < nargs - 1		310044	0		<			
ANR	311245	Identifier	i		310044	0					
ANR	311246	AdditiveExpression	nargs - 1		310044	1		-			
ANR	311247	Identifier	nargs		310044	0					
ANR	311248	PrimaryExpression	1		310044	1					
ANR	311249	PostIncDecOperationExpression	i ++	249:29:8357:8359	310044	2	True				
ANR	311250	Identifier	i		310044	0					
ANR	311251	IncDec	++		310044	1					
ANR	311252	CompoundStatement		174:34:5556:5556	310044	3					
ANR	311253	ExpressionStatement	zval_ptr_dtor ( & args [ i ] )	250:3:8367:8390	310044	0	True				
ANR	311254	CallExpression	zval_ptr_dtor ( & args [ i ] )		310044	0					
ANR	311255	Callee	zval_ptr_dtor		310044	0					
ANR	311256	Identifier	zval_ptr_dtor		310044	0					
ANR	311257	ArgumentList	& args [ i ]		310044	1					
ANR	311258	Argument	& args [ i ]		310044	0					
ANR	311259	UnaryOperationExpression	& args [ i ]		310044	0					
ANR	311260	UnaryOperator	&		310044	0					
ANR	311261	ArrayIndexing	args [ i ]		310044	1					
ANR	311262	Identifier	args		310044	0					
ANR	311263	Identifier	i		310044	1					
ANR	311264	ExpressionStatement	efree ( args )	252:2:8398:8409	310044	1	True				
ANR	311265	CallExpression	efree ( args )		310044	0					
ANR	311266	Callee	efree		310044	0					
ANR	311267	Identifier	efree		310044	0					
ANR	311268	ArgumentList	args		310044	1					
ANR	311269	Argument	args		310044	0					
ANR	311270	Identifier	args		310044	0					
ANR	311271	ExpressionStatement	efree ( fci . params )	253:2:8413:8430	310044	2	True				
ANR	311272	CallExpression	efree ( fci . params )		310044	0					
ANR	311273	Callee	efree		310044	0					
ANR	311274	Identifier	efree		310044	0					
ANR	311275	ArgumentList	fci . params		310044	1					
ANR	311276	Argument	fci . params		310044	0					
ANR	311277	MemberAccess	fci . params		310044	0					
ANR	311278	Identifier	fci		310044	0					
ANR	311279	Identifier	params		310044	1					
ANR	311280	ReturnType	static void		310044	1					
ANR	311281	Identifier	dom_xpath_ext_function_php		310044	2					
ANR	311282	ParameterList	"xmlXPathParserContextPtr ctxt , int nargs , int type"		310044	3					
ANR	311283	Parameter	xmlXPathParserContextPtr ctxt	75:39:2743:2771	310044	0	True				
ANR	311284	ParameterType	xmlXPathParserContextPtr		310044	0					
ANR	311285	Identifier	ctxt		310044	1					
ANR	311286	Parameter	int nargs	75:70:2774:2782	310044	1	True				
ANR	311287	ParameterType	int		310044	0					
ANR	311288	Identifier	nargs		310044	1					
ANR	311289	Parameter	int type	75:81:2785:2792	310044	2	True				
ANR	311290	ParameterType	int		310044	0					
ANR	311291	Identifier	type		310044	1					
ANR	311292	CFGEntryNode	ENTRY		310044		True				
ANR	311293	CFGExitNode	EXIT		310044		True				
ANR	311294	Symbol	handler		310044						
ANR	311295	Symbol	node -> _private		310044						
ANR	311296	Symbol	ctxt		310044						
ANR	311297	Symbol	callable		310044						
ANR	311298	Symbol	ctxt -> context -> userData		310044						
ANR	311299	Symbol	Z_TYPE		310044						
ANR	311300	Symbol	* fci		310044						
ANR	311301	Symbol	type		310044						
ANR	311302	Symbol	* obj -> nodesetval -> nodeTab		310044						
ANR	311303	Symbol	fci . param_count		310044						
ANR	311304	Symbol	obj -> nodesetval -> nodeTab		310044						
ANR	311305	Symbol	intern -> registered_phpfunctions		310044						
ANR	311306	Symbol	fci . object_ptr		310044						
ANR	311307	Symbol	* obj -> nodesetval		310044						
ANR	311308	Symbol	obj -> type		310044						
ANR	311309	Symbol	ctxt -> context		310044						
ANR	311310	Symbol	ZVAL_PTR_DTOR		310044						
ANR	311311	Symbol	str		310044						
ANR	311312	Symbol	xmlXPathCastToString		310044						
ANR	311313	Symbol	node		310044						
ANR	311314	Symbol	curns -> prefix		310044						
ANR	311315	Symbol	function_table		310044						
ANR	311316	Symbol	retval -> value . lval		310044						
ANR	311317	Symbol	obj -> nodesetval -> nodeNr		310044						
ANR	311318	Symbol	* * obj		310044						
ANR	311319	Symbol	fci		310044						
ANR	311320	Symbol	* * ctxt		310044						
ANR	311321	Symbol	result		310044						
ANR	311322	Symbol	* ctxt -> context		310044						
ANR	311323	Symbol	TSRMLS_C		310044						
ANR	311324	Symbol	fci . size		310044						
ANR	311325	Symbol	intern -> node_list		310044						
ANR	311326	Symbol	fci . no_separation		310044						
ANR	311327	Symbol	* obj		310044						
ANR	311328	Symbol	intern		310044						
ANR	311329	Symbol	i		310044						
ANR	311330	Symbol	j		310044						
ANR	311331	Symbol	xmlStrdup		310044						
ANR	311332	Symbol	FAILURE		310044						
ANR	311333	Symbol	nargs		310044						
ANR	311334	Symbol	xmlGenericErrorContext		310044						
ANR	311335	Symbol	nsparent		310044						
ANR	311336	Symbol	fci . symbol_table		310044						
ANR	311337	Symbol	retval -> type		310044						
ANR	311338	Symbol	IS_BOOL		310044						
ANR	311339	Symbol	IS_OBJECT		310044						
ANR	311340	Symbol	safe_emalloc		310044						
ANR	311341	Symbol	fci . function_table		310044						
ANR	311342	Symbol	* curns		310044						
ANR	311343	Symbol	zend_hash_exists		310044						
ANR	311344	Symbol	fci . function_name		310044						
ANR	311345	Symbol	* args		310044						
ANR	311346	Symbol	fci . retval_ptr_ptr		310044						
ANR	311347	Symbol	* retval		310044						
ANR	311348	Symbol	strlen		310044						
ANR	311349	Symbol	xmlXPathNewNodeSet		310044						
ANR	311350	Symbol	& retval		310044						
ANR	311351	Symbol	* node		310044						
ANR	311352	Symbol	IS_STRING		310044						
ANR	311353	Symbol	node -> doc		310044						
ANR	311354	Symbol	ret		310044						
ANR	311355	Symbol	EG		310044						
ANR	311356	Symbol	NULL		310044						
ANR	311357	Symbol	obj -> boolval		310044						
ANR	311358	Symbol	zend_is_executing		310044						
ANR	311359	Symbol	intern -> registerPhpFunctions		310044						
ANR	311360	Symbol	retval		310044						
ANR	311361	Symbol	xmlNewDocNode		310044						
ANR	311362	Symbol	curns		310044						
ANR	311363	Symbol	* * * obj		310044						
ANR	311364	Symbol	node -> parent		310044						
ANR	311365	Symbol	xmlXPathNewString		310044						
ANR	311366	Symbol	* * obj -> nodesetval		310044						
ANR	311367	Symbol	node -> type		310044						
ANR	311368	Symbol	obj -> stringval		310044						
ANR	311369	Symbol	node -> children		310044						
ANR	311370	Symbol	child		310044						
ANR	311371	Symbol	node -> ns		310044						
ANR	311372	Symbol	fci . params		310044						
ANR	311373	Symbol	retval -> value		310044						
ANR	311374	Symbol	xmlXPathNewBoolean		310044						
ANR	311375	Symbol	& handler		310044						
ANR	311376	Symbol	error		310044						
ANR	311377	Symbol	* fci . params		310044						
ANR	311378	Symbol	valuePop		310044						
ANR	311379	Symbol	obj -> nodesetval		310044						
ANR	311380	Symbol	dom_object_get_node		310044						
ANR	311381	Symbol	* intern		310044						
ANR	311382	Symbol	XML_NAMESPACE_DECL		310044						
ANR	311383	Symbol	nodep		310044						
ANR	311384	Symbol	Z_STRVAL_P		310044						
ANR	311385	Symbol	args		310044						
ANR	311386	Symbol	obj -> floatval		310044						
ANR	311387	Symbol	* i		310044						
ANR	311388	Symbol	node -> name		310044						
ANR	311389	Symbol	* j		310044						
ANR	311390	Symbol	xmlNewNs		310044						
ANR	311391	Symbol	obj		310044						
ANR	311392	Symbol	* ctxt		310044						
ANR	311393	Function	dom_xpath_ext_function_string_php	258:0:8448:8593							
ANR	311394	FunctionDef	"dom_xpath_ext_function_string_php (xmlXPathParserContextPtr ctxt , int nargs)"		311393	0					
ANR	311395	CompoundStatement		259:0:8546:8593	311393	0					
ANR	311396	ExpressionStatement	"dom_xpath_ext_function_php ( ctxt , nargs , 1 )"	260:1:8549:8591	311393	0	True				
ANR	311397	CallExpression	"dom_xpath_ext_function_php ( ctxt , nargs , 1 )"		311393	0					
ANR	311398	Callee	dom_xpath_ext_function_php		311393	0					
ANR	311399	Identifier	dom_xpath_ext_function_php		311393	0					
ANR	311400	ArgumentList	ctxt		311393	1					
ANR	311401	Argument	ctxt		311393	0					
ANR	311402	Identifier	ctxt		311393	0					
ANR	311403	Argument	nargs		311393	1					
ANR	311404	Identifier	nargs		311393	0					
ANR	311405	Argument	1		311393	2					
ANR	311406	PrimaryExpression	1		311393	0					
ANR	311407	ReturnType	static void		311393	1					
ANR	311408	Identifier	dom_xpath_ext_function_string_php		311393	2					
ANR	311409	ParameterList	"xmlXPathParserContextPtr ctxt , int nargs"		311393	3					
ANR	311410	Parameter	xmlXPathParserContextPtr ctxt	258:46:8494:8522	311393	0	True				
ANR	311411	ParameterType	xmlXPathParserContextPtr		311393	0					
ANR	311412	Identifier	ctxt		311393	1					
ANR	311413	Parameter	int nargs	258:77:8525:8533	311393	1	True				
ANR	311414	ParameterType	int		311393	0					
ANR	311415	Identifier	nargs		311393	1					
ANR	311416	CFGEntryNode	ENTRY		311393		True				
ANR	311417	CFGExitNode	EXIT		311393		True				
ANR	311418	Symbol	nargs		311393						
ANR	311419	Symbol	ctxt		311393						
ANR	311420	Function	dom_xpath_ext_function_object_php	264:0:8606:8751							
ANR	311421	FunctionDef	"dom_xpath_ext_function_object_php (xmlXPathParserContextPtr ctxt , int nargs)"		311420	0					
ANR	311422	CompoundStatement		265:0:8704:8751	311420	0					
ANR	311423	ExpressionStatement	"dom_xpath_ext_function_php ( ctxt , nargs , 2 )"	266:1:8707:8749	311420	0	True				
ANR	311424	CallExpression	"dom_xpath_ext_function_php ( ctxt , nargs , 2 )"		311420	0					
ANR	311425	Callee	dom_xpath_ext_function_php		311420	0					
ANR	311426	Identifier	dom_xpath_ext_function_php		311420	0					
ANR	311427	ArgumentList	ctxt		311420	1					
ANR	311428	Argument	ctxt		311420	0					
ANR	311429	Identifier	ctxt		311420	0					
ANR	311430	Argument	nargs		311420	1					
ANR	311431	Identifier	nargs		311420	0					
ANR	311432	Argument	2		311420	2					
ANR	311433	PrimaryExpression	2		311420	0					
ANR	311434	ReturnType	static void		311420	1					
ANR	311435	Identifier	dom_xpath_ext_function_object_php		311420	2					
ANR	311436	ParameterList	"xmlXPathParserContextPtr ctxt , int nargs"		311420	3					
ANR	311437	Parameter	xmlXPathParserContextPtr ctxt	264:46:8652:8680	311420	0	True				
ANR	311438	ParameterType	xmlXPathParserContextPtr		311420	0					
ANR	311439	Identifier	ctxt		311420	1					
ANR	311440	Parameter	int nargs	264:77:8683:8691	311420	1	True				
ANR	311441	ParameterType	int		311420	0					
ANR	311442	Identifier	nargs		311420	1					
ANR	311443	CFGEntryNode	ENTRY		311420		True				
ANR	311444	CFGExitNode	EXIT		311420		True				
ANR	311445	Symbol	nargs		311420						
ANR	311446	Symbol	ctxt		311420						
ANR	311447	DeclStmt									
ANR	311448	Decl							zval	zval *	id
ANR	311449	Decl							zval	zval *	doc
ANR	311450	DeclStmt									
ANR	311451	Decl							xmlDocPtr	xmlDocPtr	docp
ANR	311452	DeclStmt									
ANR	311453	Decl							dom_object	dom_object *	docobj
ANR	311454	DeclStmt									
ANR	311455	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	311456	DeclStmt									
ANR	311457	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctx
ANR	311458	Decl							xmlXPathContextPtr	xmlXPathContextPtr	oldctx
ANR	311459	DeclStmt									
ANR	311460	Decl							zend_error_handling	zend_error_handling	error_handling
ANR	311461	DeclStmt									
ANR	311462	Decl							xmlDoc	xmlDoc *	docp
ANR	311463	DeclStmt									
ANR	311464	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctx
ANR	311465	DeclStmt									
ANR	311466	Decl							int	int	ret
ANR	311467	DeclStmt									
ANR	311468	Decl							zval	zval *	tmp
ANR	311469	DeclStmt									
ANR	311470	Decl							zval	zval *	id
ANR	311471	DeclStmt									
ANR	311472	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctxp
ANR	311473	DeclStmt									
ANR	311474	Decl							int	int	prefix_len
ANR	311475	Decl							int	int	ns_uri_len
ANR	311476	DeclStmt									
ANR	311477	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	311478	DeclStmt									
ANR	311479	Decl							unsigned char	unsigned char *	prefix
ANR	311480	Decl							unsigned char	unsigned char *	ns_uri
ANR	311481	Function	dom_xpath_iter	375:0:11727:11943							
ANR	311482	FunctionDef	"dom_xpath_iter (zval * baseobj , dom_object * intern)"		311481	0					
ANR	311483	CompoundStatement		376:0:11799:11943	311481	0					
ANR	311484	IdentifierDeclStatement	dom_nnodemap_object * mapptr ;	377:1:11802:11829	311481	0	True				
ANR	311485	IdentifierDecl	* mapptr		311481	0					
ANR	311486	IdentifierDeclType	dom_nnodemap_object *		311481	0					
ANR	311487	Identifier	mapptr		311481	1					
ANR	311488	ExpressionStatement	mapptr = ( dom_nnodemap_object * ) intern -> ptr	379:1:11833:11876	311481	1	True				
ANR	311489	AssignmentExpression	mapptr = ( dom_nnodemap_object * ) intern -> ptr		311481	0		=			
ANR	311490	Identifier	mapptr		311481	0					
ANR	311491	CastExpression	( dom_nnodemap_object * ) intern -> ptr		311481	1					
ANR	311492	CastTarget	dom_nnodemap_object *		311481	0					
ANR	311493	PtrMemberAccess	intern -> ptr		311481	1					
ANR	311494	Identifier	intern		311481	0					
ANR	311495	Identifier	ptr		311481	1					
ANR	311496	ExpressionStatement	mapptr -> baseobjptr = baseobj	380:1:11879:11907	311481	2	True				
ANR	311497	AssignmentExpression	mapptr -> baseobjptr = baseobj		311481	0		=			
ANR	311498	PtrMemberAccess	mapptr -> baseobjptr		311481	0					
ANR	311499	Identifier	mapptr		311481	0					
ANR	311500	Identifier	baseobjptr		311481	1					
ANR	311501	Identifier	baseobj		311481	1					
ANR	311502	ExpressionStatement	mapptr -> nodetype = DOM_NODESET	381:1:11910:11940	311481	3	True				
ANR	311503	AssignmentExpression	mapptr -> nodetype = DOM_NODESET		311481	0		=			
ANR	311504	PtrMemberAccess	mapptr -> nodetype		311481	0					
ANR	311505	Identifier	mapptr		311481	0					
ANR	311506	Identifier	nodetype		311481	1					
ANR	311507	Identifier	DOM_NODESET		311481	1					
ANR	311508	ReturnType	static void		311481	1					
ANR	311509	Identifier	dom_xpath_iter		311481	2					
ANR	311510	ParameterList	"zval * baseobj , dom_object * intern"		311481	3					
ANR	311511	Parameter	zval * baseobj	375:27:11754:11766	311481	0	True				
ANR	311512	ParameterType	zval *		311481	0					
ANR	311513	Identifier	baseobj		311481	1					
ANR	311514	Parameter	dom_object * intern	375:42:11769:11786	311481	1	True				
ANR	311515	ParameterType	dom_object *		311481	0					
ANR	311516	Identifier	intern		311481	1					
ANR	311517	CFGEntryNode	ENTRY		311481		True				
ANR	311518	CFGExitNode	EXIT		311481		True				
ANR	311519	Symbol	* intern		311481						
ANR	311520	Symbol	DOM_NODESET		311481						
ANR	311521	Symbol	intern		311481						
ANR	311522	Symbol	mapptr -> baseobjptr		311481						
ANR	311523	Symbol	mapptr		311481						
ANR	311524	Symbol	baseobj		311481						
ANR	311525	Symbol	* mapptr		311481						
ANR	311526	Symbol	mapptr -> nodetype		311481						
ANR	311527	Symbol	intern -> ptr		311481						
ANR	311528	DeclStmt									
ANR	311529	Decl							zval	zval *	id
ANR	311530	Decl							zval	zval *	retval
ANR	311531	Decl							zval	zval *	context
ANR	311532	DeclStmt									
ANR	311533	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctxp
ANR	311534	DeclStmt									
ANR	311535	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	311536	DeclStmt									
ANR	311537	Decl							xmlXPathObjectPtr	xmlXPathObjectPtr	xpathobjp
ANR	311538	DeclStmt									
ANR	311539	Decl							int	int	expr_len
ANR	311540	Decl							int	int	ret
ANR	311541	Decl							int	int	nsnbr
ANR	311542	Decl							int	int	xpath_type
ANR	311543	DeclStmt									
ANR	311544	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	311545	DeclStmt									
ANR	311546	Decl							dom_object	dom_object *	nodeobj
ANR	311547	DeclStmt									
ANR	311548	Decl							char	char *	expr
ANR	311549	DeclStmt									
ANR	311550	Decl							xmlDoc	xmlDoc *	docp
ANR	311551	DeclStmt									
ANR	311552	Decl							xmlNsPtr	xmlNsPtr *	ns
ANR	311553	DeclStmt									
ANR	311554	Decl							zend_bool	zend_bool	register_node_ns
ANR	311555	DeclStmt									
ANR	311556	Decl							int	int	i
ANR	311557	DeclStmt									
ANR	311558	Decl							xmlNodeSetPtr	xmlNodeSetPtr	nodesetp
ANR	311559	DeclStmt									
ANR	311560	Decl							xmlNodePtr	xmlNodePtr	node
ANR	311561	DeclStmt									
ANR	311562	Decl							zval	zval *	child
ANR	311563	DeclStmt									
ANR	311564	Decl							xmlNsPtr	xmlNsPtr	curns
ANR	311565	DeclStmt									
ANR	311566	Decl							xmlNodePtr	xmlNodePtr	nsparent
ANR	311567	DeclStmt									
ANR	311568	Decl							zval	zval *	id
ANR	311569	DeclStmt									
ANR	311570	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	311571	DeclStmt									
ANR	311572	Decl							zval	zval *	array_value
ANR	311573	Decl							zval	zval * *	entry
ANR	311574	Decl							zval	zval *	new_string
ANR	311575	DeclStmt									
ANR	311576	Decl							int	int	name_len
ANR	311577	DeclStmt									
ANR	311578	Decl							char	char *	name
